/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_pddp_AC_zz.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_1221_13_33(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C49932 = ce + de;
    const double C49931 = zC - zD;
    const double C49942 = ce * de;
    const double C49941 = 0 * de;
    const double C49960 = 0 * ce;
    const double C49956 = 0 * de;
    const double C50004 = ae * be;
    const double C50003 = ae + be;
    const double C50002 = 0 * be;
    const double C50001 = zA - zB;
    const double C50032 = 0 * ae;
    const double C50027 = 0 * be;
    const double C50063 = p + q;
    const double C50062 = p * q;
    const double C50071 = ae * ce;
    const double C50070 = zP - zQ;
    const double C50068 = bs[3];
    const double C50077 = bs[4];
    const double C50075 = xP - xQ;
    const double C50086 = bs[5];
    const double C50095 = bs[6];
    const double C50110 = bs[7];
    const double C50134 = bs[2];
    const double C50164 = yP - yQ;
    const double C119 = bs[0];
    const double C51156 = xA - xB;
    const double C51179 = xC - xD;
    const double C51199 = yC - yD;
    const double C51302 = yA - yB;
    const double C49940 = 2 * C49932;
    const double C49957 = std::pow(C49932, 2);
    const double C51244 = std::pow(C49931, 2);
    const double C51256 = C49931 * de;
    const double C51255 = C49931 * ce;
    const double C49943 = C49942 * C49931;
    const double C49958 = C49931 * C49941;
    const double C49964 = C49960 / C49932;
    const double C50005 = std::pow(C50003, 2);
    const double C50028 = 2 * C50003;
    const double C50079 = C49932 * C50003;
    const double C50006 = C50004 * C50001;
    const double C50029 = C50001 * C50002;
    const double C51314 = std::pow(C50001, 2);
    const double C51378 = C50001 * be;
    const double C51377 = C50001 * ae;
    const double C50037 = C50032 / C50003;
    const double C50064 = 2 * C50062;
    const double C50073 = std::pow(C50070, 2);
    const double C50138 = C50070 * ce;
    const double C50137 = C50070 * ae;
    const double C50088 = std::pow(C50075, 2);
    const double C50174 = std::pow(C50164, 2);
    const double C51159 = C51156 * be;
    const double C51158 = C51156 * ae;
    const double C51157 = std::pow(C51156, 2);
    const double C51182 = C51179 * de;
    const double C51181 = C51179 * ce;
    const double C51180 = std::pow(C51179, 2);
    const double C51214 = std::pow(C51199, 2);
    const double C51230 = C51199 * de;
    const double C51229 = C51199 * ce;
    const double C51303 = std::pow(C51302, 2);
    const double C51352 = C51302 * be;
    const double C51351 = C51302 * ae;
    const double C51190 = std::pow(C49940, -1);
    const double C51447 = std::pow(C49940, -2);
    const double C49961 = 2 * C49957;
    const double C51445 = 4 * C49957;
    const double C51245 = C51244 * C49942;
    const double C49962 = C49958 / C49932;
    const double C50007 = 2 * C50005;
    const double C51438 = 4 * C50005;
    const double C51167 = std::pow(C50028, -1);
    const double C51460 = std::pow(C50028, -2);
    const double C50034 = C50029 / C50003;
    const double C51315 = C51314 * C50004;
    const double C50066 = C50064 / C50063;
    const double C140 =
        (-((std::pow(zP - zQ, 2) * bs[2] * std::pow(C50064 / C50063, 2) -
            (bs[1] * C50064) / C50063) *
           ae * ce) /
         C49932) /
        C50003;
    const double C120 = -(C50075 * bs[1] * C50064) / C50063;
    const double C297 = -(C50164 * bs[1] * C50064) / C50063;
    const double C454 = -(C50070 * bs[1] * C50064) / C50063;
    const double C50080 = C50073 * C50077;
    const double C50089 = C50073 * C50086;
    const double C50098 = C50073 * C50095;
    const double C50114 = C50073 * C50110;
    const double C50140 = C50077 * C50138;
    const double C50145 = C50086 * C50138;
    const double C50150 = C50095 * C50138;
    const double C50179 = C50068 * C50138;
    const double C50215 = C50110 * C50138;
    const double C127 = (bs[1] * C50138 * C50064) / (C50063 * C49932);
    const double C50141 = C50077 * C50137;
    const double C50146 = C50086 * C50137;
    const double C50151 = C50095 * C50137;
    const double C50181 = C50068 * C50137;
    const double C50221 = C50110 * C50137;
    const double C126 = (-(bs[1] * C50137 * C50064) / C50063) / C50003;
    const double C51160 = C51157 * C50004;
    const double C51183 = C51180 * C49942;
    const double C51215 = C51214 * C49942;
    const double C51304 = C51303 * C50004;
    const double C49969 = C49941 / C49961;
    const double C49967 = C49956 / C49961;
    const double C51246 = C51245 / C49932;
    const double C49966 = 0 - C49962;
    const double C50031 = C50002 / C50007;
    const double C50035 = C50027 / C50007;
    const double C50038 = 0 - C50034;
    const double C51316 = C51315 / C50003;
    const double C50069 = -C50066;
    const double C50078 = std::pow(C50066, 4);
    const double C50096 = std::pow(C50066, 6);
    const double C50133 = std::pow(C50066, 2);
    const double C141 =
        (-((xP - xQ) *
           (bs[2] * std::pow(C50066, 2) +
            std::pow(zP - zQ, 2) * bs[3] * std::pow(-C50066, 3)) *
           ae * ce) /
         C49932) /
        C50003;
    const double C51161 = C51160 / C50003;
    const double C51184 = C51183 / C49932;
    const double C51216 = C51215 / C49932;
    const double C51305 = C51304 / C50003;
    const double C51247 = -C51246;
    const double C49971 = C49966 * ce;
    const double C50041 = C50038 * ae;
    const double C51317 = -C51316;
    const double C50072 = std::pow(C50069, 3);
    const double C50087 = std::pow(C50069, 5);
    const double C50111 = std::pow(C50069, 7);
    const double C50081 = C50080 * C50078;
    const double C50085 = C50077 * C50078;
    const double C50143 = C50078 * C50141;
    const double C50142 = C50078 * C50140;
    const double C50099 = C50098 * C50096;
    const double C50109 = C50095 * C50096;
    const double C50153 = C50096 * C50151;
    const double C50152 = C50096 * C50150;
    const double C50180 = C50134 * C50133;
    const double C128 = (C50075 * C50133 * C50134 * C50137) / C50003;
    const double C129 = -(C50075 * C50133 * C50134 * C50138) / C49932;
    const double C306 = -(C50164 * C50133 * C50134 * C50138) / C49932;
    const double C307 = (C50164 * C50133 * C50134 * C50137) / C50003;
    const double C460 = (C50070 * C50133 * C50134 * C50137) / C50003 -
                        (ae * bs[1] * C50064) / (C50063 * C50003);
    const double C461 = (ce * bs[1] * C50064) / (C50063 * C49932) -
                        (C50070 * C50133 * C50134 * C50138) / C49932;
    const double C51162 = -C51161;
    const double C51185 = -C51184;
    const double C51217 = -C51216;
    const double C51306 = -C51305;
    const double C51248 = std::exp(C51247);
    const double C49973 = C49971 / C49932;
    const double C50043 = C50041 / C50003;
    const double C51318 = std::exp(C51317);
    const double C50076 = C50068 * C50072;
    const double C50183 = C50072 * C50181;
    const double C50182 = C50072 * C50179;
    const double C142 =
        (-((C50068 * C50072 + C50073 * bs[4] * std::pow(C50066, 4)) * C50071 *
           std::pow(xP - xQ, 2)) /
         C49932) /
            C50003 -
        ((bs[2] * std::pow(C50066, 2) + C50073 * C50068 * C50072) * C50071) /
            (C49932 * C50003);
    const double C315 =
        (-((yP - yQ) *
           (bs[2] * std::pow(C50066, 2) + C50073 * C50068 * C50072) * C50071) /
         C49932) /
        C50003;
    const double C472 =
        (-(C50133 * C50134 * C50070 * ae * ce) / C49932) / C50003 -
        (ae * C50133 * C50134 * C50070 * ce) / C50079 -
        (C50070 * (C50134 * C50133 + C50073 * C50068 * C50072) * C50071) /
            C50079;
    const double C50090 = C50089 * C50087;
    const double C50094 = C50086 * C50087;
    const double C50148 = C50087 * C50146;
    const double C50147 = C50087 * C50145;
    const double C50116 = C50114 * C50111;
    const double C50228 = C50111 * C50221;
    const double C50224 = C50111 * C50215;
    const double C50190 = C50085 * C50088;
    const double C50198 = C50075 * C50085;
    const double C50320 = C50085 * C50174;
    const double C50342 = C50164 * C50085;
    const double C50428 = C50085 * ae;
    const double C50426 = C50085 * C50073;
    const double C50425 = C50070 * C50085;
    const double C50424 = C50085 * ce;
    const double C50187 = C50075 * C50143;
    const double C50250 = C50164 * C50143;
    const double C50267 = C50070 * C50143;
    const double C50420 = C50143 * ce;
    const double C50185 = C50075 * C50142;
    const double C50248 = C50164 * C50142;
    const double C50264 = C50070 * C50142;
    const double C50421 = ae * C50142;
    const double C50218 = C50109 * C50088;
    const double C50364 = C50075 * C50109;
    const double C50703 = C50109 * C50174;
    const double C50770 = C50164 * C50109;
    const double C50840 = C50109 * ae;
    const double C50834 = C50109 * C50073;
    const double C50833 = C50070 * C50109;
    const double C50832 = C50109 * ce;
    const double C50155 = C50153 * C50088;
    const double C50220 = C50075 * C50153;
    const double C50345 = C50153 * C50174;
    const double C50508 = C50164 * C50153;
    const double C50579 = C50070 * C50153;
    const double C50826 = C50153 * ce;
    const double C50154 = C50152 * C50088;
    const double C50214 = C50075 * C50152;
    const double C50341 = C50152 * C50174;
    const double C50506 = C50164 * C50152;
    const double C50573 = C50070 * C50152;
    const double C50827 = ae * C50152;
    const double C121 = C50180 * C50088 - (bs[1] * C50064) / C50063;
    const double C296 = C50164 * C50075 * C50180;
    const double C455 = C50070 * C50075 * C50180;
    const double C627 = C50180 * C50174 - (bs[1] * C50064) / C50063;
    const double C856 = C50070 * C50164 * C50180;
    const double C992 = C50180 * C50073 - (bs[1] * C50064) / C50063;
    const double C51163 = std::exp(C51162);
    const double C51186 = std::exp(C51185);
    const double C51218 = std::exp(C51217);
    const double C51307 = std::exp(C51306);
    const double C49944 = C49943 * C51248;
    const double C118 = -(2 * ce * de * (zC - zD) * C51248) / (ce + de);
    const double C452 =
        ((C51248 - (C49931 * 2 * ce * de * C49931 * C51248) / C49932) * ce) /
            C49932 -
        (0 * de) / (2 * std::pow(C49932, 2));
    const double C453 =
        (0 * ce) / C49932 - (ce * de * C49931 * C51248) / std::pow(C49932, 2);
    const double C51257 = C51248 * C51255;
    const double C51260 = C51190 * C51248;
    const double C51455 = C51248 * C51256;
    const double C51454 = C51248 / C49940;
    const double C988 = C51447 * C51248;
    const double C49975 = C49973 - C49967;
    const double C50045 = C50043 - C50035;
    const double C151 = C51318 * C141;
    const double C149 = C51318 * C128;
    const double C2587 = C51318 * C307;
    const double C50008 = C50006 * C51318;
    const double C117 = -(2 * ae * be * (zA - zB) * C51318) / (ae + be);
    const double C51379 = C51318 * C51377;
    const double C51382 = C51167 * C51318;
    const double C51468 = C51318 * C51378;
    const double C51461 = C51318 / C50028;
    const double C5413 = C51460 * C51318;
    const double C50082 = C50076 + C50081;
    const double C50186 = C50075 * C50076;
    const double C50249 = C50164 * C50076;
    const double C50268 = C50076 * ae;
    const double C50266 = C50070 * C50076;
    const double C50265 = C50076 * ce;
    const double C122 =
        2 * C50075 * C50180 + C50075 * (C50180 + C50076 * C50088);
    const double C295 = C50164 * (C50180 + C50076 * C50088);
    const double C456 = C50070 * (C50180 + C50076 * C50088);
    const double C745 =
        2 * C50164 * C50180 + C50164 * (C50180 + C50076 * C50174);
    const double C860 = C50070 * (C50180 + C50076 * C50174);
    const double C1236 =
        2 * C50070 * C50180 + C50070 * (C50180 + C50076 * C50073);
    const double C130 = (C50133 * C50134 * C50137 + C50183 * C50088) / C50003;
    const double C132 =
        (2 * C50075 * C50183 + C50075 * (C50183 + C50143 * C50088)) / C50003;
    const double C303 = (C50164 * (C50183 + C50143 * C50088)) / C50003;
    const double C305 = (C50164 * C50075 * C50183) / C50003;
    const double C462 =
        (C50070 * C50075 * C50183 + C50075 * C50180 * ae) / C50003;
    const double C464 = (C50070 * (C50183 + C50143 * C50088) +
                         (C50180 + C50076 * C50088) * ae) /
                        C50003;
    const double C632 = (C50133 * C50134 * C50137 + C50183 * C50174) / C50003;
    const double C753 =
        (2 * C50164 * C50183 + C50164 * (C50183 + C50143 * C50174)) / C50003;
    const double C864 =
        (C50070 * C50164 * C50183 + C50164 * C50180 * ae) / C50003;
    const double C872 = (C50070 * (C50183 + C50143 * C50174) +
                         (C50180 + C50076 * C50174) * ae) /
                        C50003;
    const double C997 =
        (C50133 * C50134 * C50137 + C50070 * (C50070 * C50183 + C50180 * ae) +
         C50070 * C50180 * ae) /
        C50003;
    const double C131 = -(C50182 * C50088 + C50133 * C50134 * C50138) / C49932;
    const double C133 = (-2 * C50075 * C50182) / C49932 -
                        (C50075 * (C50142 * C50088 + C50182)) / C49932;
    const double C302 = -(C50164 * (C50142 * C50088 + C50182)) / C49932;
    const double C304 = -(C50164 * C50075 * C50182) / C49932;
    const double C463 =
        -(C50070 * C50075 * C50182 + C50075 * C50180 * ce) / C49932;
    const double C465 = -(C50070 * (C50142 * C50088 + C50182) +
                          (C50180 + C50076 * C50088) * ce) /
                        C49932;
    const double C633 = -(C50182 * C50174 + C50133 * C50134 * C50138) / C49932;
    const double C752 = (-2 * C50164 * C50182) / C49932 -
                        (C50164 * (C50142 * C50174 + C50182)) / C49932;
    const double C865 =
        -(C50070 * C50164 * C50182 + C50164 * C50180 * ce) / C49932;
    const double C873 = -(C50070 * (C50142 * C50174 + C50182) +
                          (C50180 + C50076 * C50174) * ce) /
                        C49932;
    const double C998 = -(C50070 * (C50070 * C50182 + C50180 * ce) +
                          C50133 * C50134 * C50138 + C50070 * C50180 * ce) /
                        C49932;
    const double C155 = C51318 * C142;
    const double C2589 = C51318 * C315;
    const double C50091 = C50085 + C50090;
    const double C50100 = C50094 + C50099;
    const double C50199 = C50094 * C50088;
    const double C50217 = C50075 * C50094;
    const double C50343 = C50094 * C50174;
    const double C50507 = C50164 * C50094;
    const double C50580 = C50094 * ae;
    const double C50576 = C50094 * C50073;
    const double C50575 = C50070 * C50094;
    const double C50574 = C50094 * ce;
    const double C50191 = C50148 * C50088;
    const double C50200 = C50075 * C50148;
    const double C50321 = C50148 * C50174;
    const double C50344 = C50164 * C50148;
    const double C50427 = C50070 * C50148;
    const double C50569 = C50148 * ce;
    const double C50189 = C50147 * C50088;
    const double C50196 = C50075 * C50147;
    const double C50319 = C50147 * C50174;
    const double C50340 = C50164 * C50147;
    const double C50423 = C50070 * C50147;
    const double C50570 = ae * C50147;
    const double C50117 = C50109 + C50116;
    const double C50232 = C50228 * C50088;
    const double C50366 = C50075 * C50228;
    const double C50706 = C50228 * C50174;
    const double C50773 = C50164 * C50228;
    const double C50839 = C50070 * C50228;
    const double C50230 = C50224 * C50088;
    const double C50362 = C50075 * C50224;
    const double C50700 = C50224 * C50174;
    const double C50769 = C50164 * C50224;
    const double C50831 = C50070 * C50224;
    const double C50193 = C50076 + C50190;
    const double C50204 = 2 * C50198;
    const double C50253 = C50164 * C50198;
    const double C50276 = C50198 * ae;
    const double C50274 = C50070 * C50198;
    const double C50273 = C50198 * ce;
    const double C50323 = C50076 + C50320;
    const double C50348 = 2 * C50342;
    const double C50390 = C50342 * ae;
    const double C50388 = C50070 * C50342;
    const double C50387 = C50342 * ce;
    const double C50434 = C50076 + C50426;
    const double C50436 = C50425 * ae;
    const double C50433 = C50425 * ce;
    const double C50577 = 2 * C50425;
    const double C634 = (C50075 * C50183 + C50187 * C50174) / C50003;
    const double C50429 = C50420 / C49932;
    const double C635 = -(C50185 * C50174 + C50075 * C50182) / C49932;
    const double C50430 = C50421 / C50079;
    const double C50226 = C50094 + C50218;
    const double C50370 = C50364 * C50174;
    const double C50539 = C50164 * C50364;
    const double C50634 = C50364 * ae;
    const double C50630 = C50364 * C50073;
    const double C50629 = C50070 * C50364;
    const double C50628 = C50364 * ce;
    const double C50710 = C50094 + C50703;
    const double C50785 = C50770 * ae;
    const double C50783 = C50770 * C50073;
    const double C50782 = C50070 * C50770;
    const double C50781 = C50770 * ce;
    const double C50852 = C50094 + C50834;
    const double C50854 = C50833 * ae;
    const double C50851 = C50833 * ce;
    const double C50157 = C50148 + C50155;
    const double C50227 = 2 * C50220;
    const double C50328 = C50220 * C50174;
    const double C50365 = C50164 * C50220;
    const double C50455 = C50070 * C50220;
    const double C50623 = C50220 * ce;
    const double C50351 = C50148 + C50345;
    const double C50516 = C50070 * C50508;
    const double C50705 = 2 * C50508;
    const double C50765 = C50508 * ce;
    const double C50845 = C50826 / C49932;
    const double C50156 = C50154 + C50147;
    const double C50223 = -2 * C50214;
    const double C50326 = C50214 * C50174;
    const double C50361 = C50164 * C50214;
    const double C50451 = C50070 * C50214;
    const double C50624 = ae * C50214;
    const double C50347 = C50341 + C50147;
    const double C50512 = C50070 * C50506;
    const double C50699 = -2 * C50506;
    const double C50766 = ae * C50506;
    const double C50846 = C50827 / C50079;
    const double C51164 = C51163 * C51158;
    const double C51168 = C51167 * C51163;
    const double C51435 = C51163 * C51159;
    const double C51432 = C51163 / C50028;
    const double C17435 = C51460 * C51163;
    const double C51187 = C51186 * C51181;
    const double C51191 = C51190 * C51186;
    const double C51441 = C51186 / C49940;
    const double C51440 = C51186 * C51182;
    const double C293 = C51447 * C51186;
    const double C51231 = C51218 * C51229;
    const double C51234 = C51190 * C51218;
    const double C51450 = C51218 * C51230;
    const double C51449 = C51218 / C49940;
    const double C624 = C51447 * C51218;
    const double C51353 = C51307 * C51351;
    const double C51356 = C51167 * C51307;
    const double C51464 = C51307 * C51352;
    const double C51459 = C51307 / C50028;
    const double C2438 = C51460 * C51307;
    const double C49945 = 2 * C49944;
    const double C49965 = C49944 / C49957;
    const double C51457 = C51257 / C49961;
    const double C51456 = C51257 * C51256;
    const double C51448 = C51257 / C49932;
    const double C51263 = C51260 * C51256;
    const double C1231 = C51260 / C51445;
    const double C1988 = C51260 / C49940;
    const double C51481 = C51455 / C49932;
    const double C987 = (-2 * C51190 * C51455) / C49932;
    const double C986 = (C51248 * std::pow(C51256, 2)) / C49957 + C51454;
    const double C50033 = C50008 / C50005;
    const double C50030 = 2 * C50008;
    const double C5416 = ((0 * ae) / C50003 - C50008 / C50005) / (2 * C50003) +
                         (0 * ae) / C50003;
    const double C10923 =
        ((C51318 - (C50001 * 2 * C50008) / C50003) * ae) / C50003 -
        C50002 / C50007;
    const double C10924 = (0 * ae) / C50003 - C50008 / C50005;
    const double C33490 =
        (-C50002 / C50003) / (2 * C50003) -
        ((C51318 - (C50001 * 2 * C50008) / C50003) * be) / C50003;
    const double C33491 =
        (-(2 * C50008) / C50003) / (2 * C50003) - (0 * be) / C50003;
    const double C152 = C117 * C121;
    const double C150 = C117 * C129;
    const double C148 = C117 * C120;
    const double C329 = C117 * C296;
    const double C481 = C117 * C455;
    const double C2591 = C117 * C627;
    const double C2588 = C117 * C306;
    const double C2586 = C117 * C297;
    const double C3256 = C117 * C856;
    const double C51470 = C51379 / C50007;
    const double C51469 = C51379 * C51378;
    const double C51463 = C51379 / C50003;
    const double C5412 = (2 * C51167 * C51379) / C50003;
    const double C5415 =
        (((C51318 - (C50001 * 2 * C50008) / C50003) * ae) / C50003 -
         C50002 / C50007) /
            (2 * C50003) +
        ((C50001 * ((0 * ae) / C50003 - C50008 / C50005) + C51382) * ae) /
            C50003;
    const double C51471 = C51382 * C51378;
    const double C39110 = C51382 / C51438;
    const double C44473 = C51382 / C50028;
    const double C51487 = C51468 / C50003;
    const double C5411 = (C51318 * std::pow(C51377, 2)) / C50005 + C51461;
    const double C50083 = C50082 * C50071;
    const double C866 =
        (C50070 * C50164 * C50187 + C50164 * C50186 * ae) / C50003;
    const double C867 =
        -(C50070 * C50164 * C50185 + C50164 * C50186 * ce) / C49932;
    const double C999 =
        (C50075 * C50183 + C50070 * (C50070 * C50187 + C50186 * ae) +
         C50070 * C50186 * ae) /
        C50003;
    const double C1000 = -(C50070 * (C50070 * C50185 + C50186 * ce) +
                           C50075 * C50182 + C50070 * C50186 * ce) /
                         C49932;
    const double C628 = C50075 * C50180 + C50186 * C50174;
    const double C744 =
        2 * C50164 * C50186 + C50164 * (C50186 + C50198 * C50174);
    const double C857 = C50070 * C50164 * C50186;
    const double C861 = C50070 * (C50186 + C50198 * C50174);
    const double C993 = C50075 * C50180 + C50186 * C50073;
    const double C1237 =
        2 * C50070 * C50186 + C50070 * (C50186 + C50198 * C50073);
    const double C1150 =
        (C50164 * C50183 + C50070 * (C50070 * C50250 + C50249 * ae) +
         C50070 * C50249 * ae) /
        C50003;
    const double C1151 = -(C50070 * (C50070 * C50248 + C50249 * ce) +
                           C50164 * C50182 + C50070 * C50249 * ce) /
                         C49932;
    const double C1146 = C50164 * C50180 + C50249 * C50073;
    const double C3760 =
        2 * C50070 * C50249 + C50070 * (C50249 + C50342 * C50073);
    const double C50270 = C50267 + C50268;
    const double C50269 = C50264 + C50265;
    const double C156 = C117 * C122;
    const double C325 = C117 * C295;
    const double C487 = C117 * C456;
    const double C2954 = C117 * C745;
    const double C3262 = C117 * C860;
    const double C153 = C51318 * C130;
    const double C157 = C51318 * C132;
    const double C326 = C51318 * C303;
    const double C330 = C51318 * C305;
    const double C482 = C51318 * C462;
    const double C10929 = C51382 * C462;
    const double C33496 = C51382 * C462;
    const double C488 = C51318 * C464;
    const double C10937 = C51382 * C464;
    const double C33504 = C51382 * C464;
    const double C2592 = C51318 * C632;
    const double C2955 = C51318 * C753;
    const double C3257 = C51318 * C864;
    const double C14006 = C51382 * C864;
    const double C36493 = C51382 * C864;
    const double C3263 = C51318 * C872;
    const double C14425 = C51382 * C872;
    const double C36501 = C51382 * C872;
    const double C154 = C117 * C131;
    const double C158 = C117 * C133;
    const double C323 = C117 * C302;
    const double C327 = C117 * C304;
    const double C483 = C117 * C463;
    const double C489 = C117 * C465;
    const double C2593 = C117 * C633;
    const double C2952 = C117 * C752;
    const double C3258 = C117 * C865;
    const double C3264 = C117 * C873;
    const double C50092 = C50091 * C50071;
    const double C50101 = C50100 * C50071;
    const double C50205 = C50085 + C50199;
    const double C50225 = 2 * C50217;
    const double C50327 = C50217 * C50174;
    const double C50363 = C50164 * C50217;
    const double C50456 = C50217 * ae;
    const double C50454 = C50217 * C50073;
    const double C50453 = C50070 * C50217;
    const double C50452 = C50217 * ce;
    const double C50349 = C50085 + C50343;
    const double C50517 = C50507 * ae;
    const double C50515 = C50507 * C50073;
    const double C50514 = C50070 * C50507;
    const double C50513 = C50507 * ce;
    const double C50702 = 2 * C50507;
    const double C50590 = C50579 + C50580;
    const double C50589 = C50085 + C50576;
    const double C50591 = C50575 * ae;
    const double C50588 = C50575 * ce;
    const double C50835 = 2 * C50575;
    const double C50587 = C50573 + C50574;
    const double C50194 = C50143 + C50191;
    const double C50206 = 2 * C50200;
    const double C50254 = C50164 * C50200;
    const double C50275 = C50070 * C50200;
    const double C50448 = C50200 * ce;
    const double C751 =
        (2 * C50164 * C50187 + C50164 * (C50187 + C50200 * C50174)) / C50003;
    const double C874 = (C50070 * (C50187 + C50200 * C50174) +
                         (C50186 + C50198 * C50174) * ae) /
                        C50003;
    const double C50324 = C50143 + C50321;
    const double C50350 = 2 * C50344;
    const double C50389 = C50070 * C50344;
    const double C50503 = C50344 * ce;
    const double C50435 = C50427 + C50428;
    const double C50583 = C50569 / C49932;
    const double C50192 = C50189 + C50142;
    const double C50202 = -2 * C50196;
    const double C50252 = C50164 * C50196;
    const double C50272 = C50070 * C50196;
    const double C50449 = ae * C50196;
    const double C750 = (-2 * C50164 * C50185) / C49932 -
                        (C50164 * (C50196 * C50174 + C50185)) / C49932;
    const double C875 = -(C50070 * (C50196 * C50174 + C50185) +
                          (C50186 + C50198 * C50174) * ce) /
                        C49932;
    const double C50322 = C50319 + C50142;
    const double C50346 = -2 * C50340;
    const double C50386 = C50070 * C50340;
    const double C50504 = ae * C50340;
    const double C50432 = C50423 + C50424;
    const double C50584 = C50570 / C50079;
    const double C50118 = C50117 * C50071;
    const double C50235 = C50153 + C50232;
    const double C50372 = C50366 * C50174;
    const double C50540 = C50164 * C50366;
    const double C50633 = C50070 * C50366;
    const double C50711 = C50153 + C50706;
    const double C50784 = C50070 * C50773;
    const double C50853 = C50839 + C50840;
    const double C50233 = C50230 + C50152;
    const double C50368 = C50362 * C50174;
    const double C50538 = C50164 * C50362;
    const double C50627 = C50070 * C50362;
    const double C50709 = C50700 + C50152;
    const double C50780 = C50070 * C50769;
    const double C50850 = C50831 + C50832;
    const double C123 = 3 * (C50180 + C50076 * C50088) +
                        C50075 * (2 * C50186 + C50075 * C50193);
    const double C294 = C50164 * (2 * C50186 + C50075 * C50193);
    const double C457 = C50070 * (2 * C50186 + C50075 * C50193);
    const double C629 = C50180 + C50076 * C50088 + C50193 * C50174;
    const double C858 = C50070 * C50164 * C50193;
    const double C994 = C50180 + C50076 * C50088 + C50193 * C50073;
    const double C1147 = C50164 * C50186 + C50253 * C50073;
    const double C2936 = 3 * (C50180 + C50076 * C50174) +
                         C50164 * (2 * C50249 + C50164 * C50323);
    const double C3237 = C50070 * (2 * C50249 + C50164 * C50323);
    const double C3448 = C50180 + C50076 * C50174 + C50323 * C50073;
    const double C6389 = 3 * (C50180 + C50076 * C50073) +
                         C50070 * (2 * C50266 + C50070 * C50434);
    const double C649 = C51318 * C634;
    const double C50437 = -C50429;
    const double C650 = C117 * C635;
    const double C50231 = C50075 * C50226;
    const double C50334 = C50226 * C50174;
    const double C50484 = C50226 * ae;
    const double C50482 = C50226 * C50073;
    const double C50481 = C50070 * C50226;
    const double C50480 = C50226 * ce;
    const double C50677 = C50164 * C50226;
    const double C50375 = C50217 + C50370;
    const double C50549 = C50539 * ae;
    const double C50547 = C50539 * C50073;
    const double C50546 = C50070 * C50539;
    const double C50545 = C50539 * ce;
    const double C50643 = C50217 + C50630;
    const double C50645 = C50629 * ae;
    const double C50642 = C50629 * ce;
    const double C50713 = C50164 * C50710;
    const double C50743 = C50710 * ae;
    const double C50741 = C50710 * C50073;
    const double C50740 = C50070 * C50710;
    const double C50739 = C50710 * ce;
    const double C50791 = C50507 + C50783;
    const double C50793 = C50782 * ae;
    const double C50790 = C50782 * ce;
    const double C50862 = C50852 * ae;
    const double C50860 = C50070 * C50852;
    const double C50859 = C50852 * ce;
    const double C50201 = C50075 * C50157;
    const double C50219 = 3 * C50157;
    const double C50258 = C50164 * C50157;
    const double C50283 = C50070 * C50157;
    const double C50476 = C50157 * ce;
    const double C50331 = C50200 + C50328;
    const double C50371 = 2 * C50365;
    const double C50398 = C50070 * C50365;
    const double C50535 = C50365 * ce;
    const double C50637 = C50623 / C49932;
    const double C50355 = C50164 * C50351;
    const double C50406 = C50070 * C50351;
    const double C50704 = 3 * C50351;
    const double C50735 = C50351 * ce;
    const double C50776 = C50765 / C49932;
    const double C50857 = -C50845;
    const double C50197 = C50075 * C50156;
    const double C50213 = -3 * C50156;
    const double C50256 = C50164 * C50156;
    const double C50280 = C50070 * C50156;
    const double C50477 = ae * C50156;
    const double C50229 = C50223 / C49932;
    const double C50329 = C50326 + C50196;
    const double C50367 = -2 * C50361;
    const double C50395 = C50070 * C50361;
    const double C50536 = ae * C50361;
    const double C50638 = C50624 / C50079;
    const double C50353 = C50164 * C50347;
    const double C50403 = C50070 * C50347;
    const double C50698 = -3 * C50347;
    const double C50736 = ae * C50347;
    const double C50708 = C50699 / C49932;
    const double C50777 = C50766 / C50079;
    const double C51436 = C51164 / C50007;
    const double C51434 = C51164 / C50003;
    const double C51433 = C51164 * C51159;
    const double C17434 = (2 * C51167 * C51164) / C50003;
    const double C51437 = C51168 * C51159;
    const double C110 = C51168 / C51438;
    const double C8259 = C51168 / C50028;
    const double C51473 = C51435 / C50003;
    const double C17433 = (C51163 * std::pow(C51158, 2)) / C50005 + C51432;
    const double C51443 = C51187 / C49961;
    const double C51442 = C51187 * C51182;
    const double C51439 = C51187 / C49932;
    const double C51194 = C51191 * C51182;
    const double C116 = C51191 / C51445;
    const double C1354 = C51191 / C49940;
    const double C291 = (C51186 * std::pow(C51182, 2)) / C49957 + C51441;
    const double C51475 = C51440 / C49932;
    const double C292 = (-2 * C51190 * C51440) / C49932;
    const double C51452 = C51231 / C49961;
    const double C51451 = C51231 * C51230;
    const double C51446 = C51231 / C49932;
    const double C51237 = C51234 * C51230;
    const double C740 = C51234 / C51445;
    const double C1455 = C51234 / C49940;
    const double C51478 = C51450 / C49932;
    const double C623 = (-2 * C51190 * C51450) / C49932;
    const double C622 = (C51218 * std::pow(C51230, 2)) / C49957 + C51449;
    const double C51466 = C51353 / C50007;
    const double C51465 = C51353 * C51352;
    const double C51462 = C51353 / C50003;
    const double C2437 = (2 * C51167 * C51353) / C50003;
    const double C51467 = C51356 * C51352;
    const double C20038 = C51356 / C51438;
    const double C24657 = C51356 / C50028;
    const double C51484 = C51464 / C50003;
    const double C2436 = (C51307 * std::pow(C51351, 2)) / C50005 + C51459;
    const double C49959 = C49931 * C49945;
    const double C990 =
        ((-C49941 / C49932) / C49940 -
         ((C51248 - (C49931 * C49945) / C49932) * de) / C49932) /
            C49940 -
        ((C49931 * ((-C49945 / C49932) / C49940 - (0 * de) / C49932) + C51260) *
         de) /
            C49932;
    const double C991 =
        ((-C49945 / C49932) / C49940 - (0 * de) / C49932) / C49940 -
        (0 * de) / C49932;
    const double C1723 = (-C49945 / C49932) / C49940 - (0 * de) / C49932;
    const double C49970 = C49964 - C49965;
    const double C51482 = C51456 / C49957;
    const double C51458 = C51263 / C49932;
    const double C1720 = -C51481;
    const double C50040 = C50037 - C50033;
    const double C50036 = C50001 * C50030;
    const double C10948 = C10923 * C122;
    const double C10944 = C10923 * C133;
    const double C10938 = C10923 * C131;
    const double C10934 = C10923 * C121;
    const double C10930 = C10923 * C129;
    const double C10926 = C10923 * C120;
    const double C11144 = C10923 * C296;
    const double C11140 = C10923 * C304;
    const double C11136 = C10923 * C295;
    const double C11132 = C10923 * C302;
    const double C11333 = C10923 * C465;
    const double C11329 = C10923 * C456;
    const double C11323 = C10923 * C463;
    const double C11319 = C10923 * C455;
    const double C11512 = C10923 * C635;
    const double C14007 = C10923 * C306;
    const double C14003 = C10923 * C297;
    const double C14426 = C10923 * C627;
    const double C14422 = C10923 * C633;
    const double C14586 = C10923 * C752;
    const double C14582 = C10923 * C745;
    const double C14800 = C10923 * C873;
    const double C14796 = C10923 * C860;
    const double C14794 = C10923 * C865;
    const double C14790 = C10923 * C856;
    const double C10940 = C10924 * C465;
    const double C10936 = C10924 * C456;
    const double C10932 = C10924 * C463;
    const double C10928 = C10924 * C455;
    const double C14009 = C10924 * C865;
    const double C14005 = C10924 * C856;
    const double C14424 = C10924 * C860;
    const double C14420 = C10924 * C873;
    const double C33515 = C33490 * C122;
    const double C33511 = C33490 * C133;
    const double C33505 = C33490 * C131;
    const double C33501 = C33490 * C121;
    const double C33497 = C33490 * C129;
    const double C33493 = C33490 * C120;
    const double C33711 = C33490 * C296;
    const double C33707 = C33490 * C304;
    const double C33703 = C33490 * C295;
    const double C33699 = C33490 * C302;
    const double C33900 = C33490 * C465;
    const double C33896 = C33490 * C456;
    const double C33890 = C33490 * C463;
    const double C33886 = C33490 * C455;
    const double C34079 = C33490 * C635;
    const double C36502 = C33490 * C633;
    const double C36498 = C33490 * C627;
    const double C36494 = C33490 * C306;
    const double C36490 = C33490 * C297;
    const double C36814 = C33490 * C745;
    const double C36810 = C33490 * C752;
    const double C37120 = C33490 * C873;
    const double C37116 = C33490 * C860;
    const double C37110 = C33490 * C865;
    const double C37106 = C33490 * C856;
    const double C33507 = C33491 * C465;
    const double C33503 = C33491 * C456;
    const double C33499 = C33491 * C463;
    const double C33495 = C33491 * C455;
    const double C36504 = C33491 * C873;
    const double C36500 = C33491 * C860;
    const double C36496 = C33491 * C865;
    const double C36492 = C33491 * C856;
    const double C169 = C150 + C151;
    const double C168 = C148 + C149;
    const double C2610 = C2588 + C2589;
    const double C2609 = C2586 + C2587;
    const double C51488 = C51469 / C50005;
    const double C10949 = C51463 * C132;
    const double C10939 = C51463 * C142;
    const double C10935 = C51463 * C130;
    const double C10931 = C51463 * C141;
    const double C10927 = C51463 * C128;
    const double C11145 = C51463 * C305;
    const double C11137 = C51463 * C303;
    const double C11330 = C51463 * C464;
    const double C11320 = C51463 * C462;
    const double C11509 = C51463 * C634;
    const double C14008 = C51463 * C315;
    const double C14004 = C51463 * C307;
    const double C14427 = C51463 * C632;
    const double C14583 = C51463 * C753;
    const double C14797 = C51463 * C872;
    const double C14791 = C51463 * C864;
    const double C5414 =
        (((0 - (C50001 * C50002) / C50003) * ae) / C50003 - (0 * be) / C50007) /
            (2 * C50003) +
        ((C50001 * (((C51318 - (C50001 * 2 * C50008) / C50003) * ae) / C50003 -
                    C50002 / C50007) +
          C51463) *
         ae) /
            C50003 +
        (0 * ae) / C50003 - C50008 / C50005;
    const double C5439 = C5412 * C464;
    const double C5421 = C5412 * C462;
    const double C22059 = C5412 * C864;
    const double C22375 = C5412 * C872;
    const double C5438 = C5415 * C456;
    const double C5432 = C5415 * C465;
    const double C5426 = C5415 * C463;
    const double C5420 = C5415 * C455;
    const double C22064 = C5415 * C865;
    const double C22058 = C5415 * C856;
    const double C22374 = C5415 * C860;
    const double C22368 = C5415 * C873;
    const double C51489 = C51471 / C50003;
    const double C33488 = -C51487;
    const double C5443 = C5411 * C132;
    const double C5441 = C5411 * C130;
    const double C5435 = C5411 * C142;
    const double C5425 = C5411 * C141;
    const double C5419 = C5411 * C128;
    const double C5631 = C5411 * C303;
    const double C5629 = C5411 * C305;
    const double C5813 = C5411 * C464;
    const double C5805 = C5411 * C462;
    const double C5983 = C5411 * C634;
    const double C22063 = C5411 * C315;
    const double C22057 = C5411 * C307;
    const double C22377 = C5411 * C632;
    const double C22483 = C5411 * C753;
    const double C22659 = C5411 * C872;
    const double C22651 = C5411 * C864;
    const double C143 =
        (-2 * C50075 * C50083) / C50079 +
        C50075 * ((-((C50077 * C50078 + C50073 * bs[5] * std::pow(C50069, 5)) *
                     C50071 * std::pow(C50075, 2)) /
                   C49932) /
                      C50003 -
                  C50083 / C50079);
    const double C314 = (-((yP - yQ) * C50075 * C50083) / C49932) / C50003;
    const double C473 =
        (-(C50075 * C50072 * C50068 * C50070 * ae * ce) / C49932) / C50003 -
        (ae * C50075 * C50072 * C50068 * C50070 * ce) / C50079 -
        (C50070 * C50075 * C50083) / C50079;
    const double C642 =
        (-(C50083 * std::pow(yP - yQ, 2)) / C49932) / C50003 -
        ((C50134 * C50133 + C50073 * C50068 * C50072) * C50071) / C50079;
    const double C880 =
        (-(C50164 * C50072 * C50068 * C50137 * ce) / C49932) / C50003 -
        (ae * C50164 * C50072 * C50068 * C50138) / C50079 -
        (C50070 * C50164 * C50083) / C50079;
    const double C1007 =
        (-(ae * (C50070 * C50182 + C50180 * ce)) / C49932) / C50003 -
        ((C50180 + C50073 * C50068 * C50072) * C50071) / C50079 -
        ((C50070 * C50183 + C50180 * ae) * ce) / C50079 +
        C50070 * ((-(C50183 * ce) / C49932) / C50003 - (ae * C50182) / C50079 -
                  (C50070 * C50083) / C50079);
    const double C1594 = C51318 * C866;
    const double C5627 = C5412 * C866;
    const double C7171 = C5411 * C866;
    const double C11143 = C51382 * C866;
    const double C12677 = C51463 * C866;
    const double C33710 = C51382 * C866;
    const double C1597 = C117 * C867;
    const double C5620 = C5415 * C867;
    const double C11138 = C10924 * C867;
    const double C12680 = C10923 * C867;
    const double C33705 = C33491 * C867;
    const double C35247 = C33490 * C867;
    const double C1018 = C51318 * C999;
    const double C5423 = C5413 * C999;
    const double C5803 = C5412 * C999;
    const double C6403 = C5411 * C999;
    const double C11318 = C51382 * C999;
    const double C11923 = C51463 * C999;
    const double C33885 = C51382 * C999;
    const double C44483 = C44473 * C999;
    const double C1019 = C117 * C1000;
    const double C5428 = C5416 * C1000;
    const double C5808 = C5415 * C1000;
    const double C11321 = C10924 * C1000;
    const double C11926 = C10923 * C1000;
    const double C33888 = C33491 * C1000;
    const double C34493 = C33490 * C1000;
    const double C648 = C117 * C628;
    const double C11508 = C10923 * C628;
    const double C34075 = C33490 * C628;
    const double C2598 = C117 * C744;
    const double C14430 = C10923 * C744;
    const double C36816 = C33490 * C744;
    const double C1593 = C117 * C857;
    const double C5626 = C5415 * C857;
    const double C11142 = C10924 * C857;
    const double C12676 = C10923 * C857;
    const double C33709 = C33491 * C857;
    const double C35243 = C33490 * C857;
    const double C2773 = C117 * C861;
    const double C5984 = C5415 * C861;
    const double C11510 = C10924 * C861;
    const double C14804 = C10923 * C861;
    const double C34077 = C33491 * C861;
    const double C38050 = C33490 * C861;
    const double C1017 = C117 * C993;
    const double C5422 = C5416 * C993;
    const double C5802 = C5415 * C993;
    const double C11317 = C10924 * C993;
    const double C11922 = C10923 * C993;
    const double C33884 = C33491 * C993;
    const double C34489 = C33490 * C993;
    const double C5800 = C5416 * C1237;
    const double C6404 = C5415 * C1237;
    const double C11924 = C10924 * C1237;
    const double C34491 = C33491 * C1237;
    const double C3644 = C51318 * C1150;
    const double C14789 = C51382 * C1150;
    const double C15225 = C51463 * C1150;
    const double C22061 = C5413 * C1150;
    const double C22649 = C5412 * C1150;
    const double C22979 = C5411 * C1150;
    const double C37105 = C51382 * C1150;
    const double C47437 = C44473 * C1150;
    const double C3645 = C117 * C1151;
    const double C14792 = C10924 * C1151;
    const double C15228 = C10923 * C1151;
    const double C22066 = C5416 * C1151;
    const double C22654 = C5415 * C1151;
    const double C37108 = C33491 * C1151;
    const double C37446 = C33490 * C1151;
    const double C3643 = C117 * C1146;
    const double C14788 = C10924 * C1146;
    const double C15224 = C10923 * C1146;
    const double C22060 = C5416 * C1146;
    const double C22648 = C5415 * C1146;
    const double C37104 = C33491 * C1146;
    const double C37442 = C33490 * C1146;
    const double C15226 = C10924 * C3760;
    const double C22646 = C5416 * C3760;
    const double C22980 = C5415 * C3760;
    const double C37444 = C33491 * C3760;
    const double C1240 = (2 * (C50070 * C50183 + C50180 * ae) +
                          C50070 * (C50183 + C50070 * C50270 + C50266 * ae) +
                          (C50180 + C50076 * C50073) * ae) /
                         C50003;
    const double C1241 =
        (-2 * (C50070 * C50182 + C50180 * ce)) / C49932 -
        (C50070 * (C50070 * C50269 + C50182 + C50266 * ce)) / C49932 -
        ((C50180 + C50076 * C50073) * ce) / C49932;
    const double C170 = C152 + C153;
    const double C172 = C156 + C157;
    const double C338 = C325 + C326;
    const double C340 = C329 + C330;
    const double C503 = C481 + C482;
    const double C506 = C487 + C488;
    const double C2611 = C2591 + C2592;
    const double C2965 = C2954 + C2955;
    const double C3279 = C3256 + C3257;
    const double C3282 = C3262 + C3263;
    const double C171 = C154 + C155;
    const double C50097 = C50092 / C50079;
    const double C50167 = C50075 * C50092;
    const double C50385 = C50164 * C50092;
    const double C50422 = C50070 * C50092;
    const double C144 =
        3 * ((-(C50092 * C50088) / C49932) / C50003 - C50083 / C50079) +
        C50075 *
            ((-2 * C50075 * C50092) / C50079 +
             C50075 *
                 ((-((C50086 * C50087 + C50073 * bs[6] * std::pow(C50066, 6)) *
                     C50071 * C50088) /
                   C49932) /
                      C50003 -
                  C50092 / C50079));
    const double C313 =
        (yP - yQ) * ((-(C50092 * C50088) / C49932) / C50003 - C50083 / C50079);
    const double C474 =
        (-((C50072 * C50068 * C50137 + C50078 * C50077 * C50137 * C50088) *
           ce) /
         C49932) /
            C50003 -
        (ae * (C50078 * C50077 * C50138 * C50088 + C50072 * C50068 * C50138)) /
            C50079 +
        C50070 * ((-(C50092 * C50088) / C49932) / C50003 - C50083 / C50079);
    const double C643 =
        (-(C50075 * C50092 * std::pow(yP - yQ, 2)) / C49932) / C50003 -
        (C50075 * C50083) / C50079;
    const double C757 =
        (-2 * C50164 * C50083) / C50079 +
        C50164 * ((-(C50092 * std::pow(C50164, 2)) / C49932) / C50003 -
                  C50083 / C50079);
    const double C884 =
        (-((C50072 * C50068 * C50137 + C50143 * C50174) * ce) / C49932) /
            C50003 -
        (ae * (C50142 * C50174 + C50072 * C50068 * C50138)) / C50079 +
        C50070 * ((-(C50092 * C50174) / C49932) / C50003 - C50083 / C50079);
    const double C1158 =
        (-(ae * (C50070 * C50248 + C50249 * ce)) / C49932) / C50003 -
        (C50164 * C50083) / C50079 -
        ((C50070 * C50250 + C50249 * ae) * ce) / C50079 +
        C50070 * ((-(C50250 * ce) / C49932) / C50003 - (ae * C50248) / C50079 -
                  (C50070 * C50164 * C50092) / C50079);
    const double C1248 =
        2 * ((-(C50183 * ce) / C49932) / C50003 - (ae * C50182) / C50079 -
             (C50070 * C50083) / C50079) -
        (ae * (C50070 * C50269 + C50182 + C50266 * ce)) / C50079 -
        ((C50183 + C50070 * C50270 + C50266 * ae) * ce) / C50079 +
        C50070 *
            ((-(ae * C50269) / C49932) / C50003 - C50083 / C50079 -
             (C50270 * ce) / C50079 +
             C50070 * ((-(C50143 * ce) / C49932) / C50003 -
                       (ae * C50142) / C50079 - (C50070 * C50092) / C50079));
    const double C50102 = C50101 * C50088;
    const double C50112 = C50101 / C50079;
    const double C50108 = C50075 * C50101;
    const double C50309 = C50101 * C50174;
    const double C50505 = C50164 * C50101;
    const double C50571 = C50070 * C50101;
    const double C50208 = C50075 * C50205;
    const double C50216 = 3 * C50205;
    const double C50257 = C50164 * C50205;
    const double C50284 = C50205 * ae;
    const double C50282 = C50070 * C50205;
    const double C50281 = C50205 * ce;
    const double C743 =
        2 * C50164 * C50193 + C50164 * (C50193 + C50205 * C50174);
    const double C862 = C50070 * (C50193 + C50205 * C50174);
    const double C1238 =
        2 * C50070 * C50193 + C50070 * (C50193 + C50205 * C50073);
    const double C50330 = C50198 + C50327;
    const double C50369 = 2 * C50363;
    const double C50399 = C50363 * ae;
    const double C50397 = C50070 * C50363;
    const double C50396 = C50363 * ce;
    const double C3761 =
        2 * C50070 * C50253 + C50070 * (C50253 + C50363 * C50073);
    const double C50463 = C50455 + C50456;
    const double C50462 = C50198 + C50454;
    const double C50464 = C50453 * ae;
    const double C50461 = C50453 * ce;
    const double C50631 = 2 * C50453;
    const double C50460 = C50451 + C50452;
    const double C50354 = C50164 * C50349;
    const double C50407 = C50349 * ae;
    const double C50405 = C50070 * C50349;
    const double C50404 = C50349 * ce;
    const double C50701 = 3 * C50349;
    const double C3762 =
        2 * C50070 * C50323 + C50070 * (C50323 + C50349 * C50073);
    const double C50523 = C50516 + C50517;
    const double C50522 = C50342 + C50515;
    const double C50524 = C50514 * ae;
    const double C50521 = C50514 * ce;
    const double C50771 = 2 * C50514;
    const double C50520 = C50512 + C50513;
    const double C50597 = C50070 * C50590;
    const double C50838 = 2 * C50590;
    const double C50825 = C50590 * ce;
    const double C50598 = C50589 * ae;
    const double C50596 = C50070 * C50589;
    const double C50595 = C50589 * ce;
    const double C50836 = 3 * C50589;
    const double C50594 = C50070 * C50587;
    const double C50830 = -2 * C50587;
    const double C50824 = ae * C50587;
    const double C135 = (3 * (C50183 + C50143 * C50088) +
                         C50075 * (2 * C50187 + C50075 * C50194)) /
                        C50003;
    const double C301 = (C50164 * (2 * C50187 + C50075 * C50194)) / C50003;
    const double C466 = (C50070 * (2 * C50187 + C50075 * C50194) +
                         (2 * C50186 + C50075 * C50193) * ae) /
                        C50003;
    const double C636 = (C50183 + C50143 * C50088 + C50194 * C50174) / C50003;
    const double C749 =
        (2 * C50164 * C50194 + C50164 * (C50194 + C50157 * C50174)) / C50003;
    const double C868 =
        (C50070 * C50164 * C50194 + C50164 * C50193 * ae) / C50003;
    const double C876 = (C50070 * (C50194 + C50157 * C50174) +
                         (C50193 + C50205 * C50174) * ae) /
                        C50003;
    const double C1001 =
        (C50183 + C50143 * C50088 + C50070 * (C50070 * C50194 + C50193 * ae) +
         C50070 * C50193 * ae) /
        C50003;
    const double C1152 =
        (C50164 * C50187 + C50070 * (C50070 * C50254 + C50253 * ae) +
         C50070 * C50253 * ae) /
        C50003;
    const double C50278 = C50275 + C50276;
    const double C50457 = C50448 / C49932;
    const double C2599 = C51318 * C751;
    const double C14431 = C51463 * C751;
    const double C2774 = C51318 * C874;
    const double C5985 = C5412 * C874;
    const double C11511 = C51382 * C874;
    const double C14805 = C51463 * C874;
    const double C34078 = C51382 * C874;
    const double C2939 = (3 * (C50183 + C50143 * C50174) +
                          C50164 * (2 * C50250 + C50164 * C50324)) /
                         C50003;
    const double C3241 = (C50070 * (2 * C50250 + C50164 * C50324) +
                          (2 * C50249 + C50164 * C50323) * ae) /
                         C50003;
    const double C3451 =
        (C50183 + C50143 * C50174 + C50070 * (C50070 * C50324 + C50323 * ae) +
         C50070 * C50323 * ae) /
        C50003;
    const double C50392 = C50389 + C50390;
    const double C50509 = C50503 / C49932;
    const double C50439 = C50070 * C50435;
    const double C50578 = 2 * C50435;
    const double C50568 = C50435 * ce;
    const double C50593 = -C50583;
    const double C134 =
        (-3 * (C50142 * C50088 + C50182)) / C49932 +
        C50075 * ((-2 * C50185) / C49932 - (C50075 * C50192) / C49932);
    const double C300 =
        C50164 * ((-2 * C50185) / C49932 - (C50075 * C50192) / C49932);
    const double C467 =
        C50070 * ((-2 * C50185) / C49932 - (C50075 * C50192) / C49932) -
        ((2 * C50186 + C50075 * C50193) * ce) / C49932;
    const double C637 = -(C50192 * C50174 + C50142 * C50088 + C50182) / C49932;
    const double C748 = (-2 * C50164 * C50192) / C49932 -
                        (C50164 * (C50156 * C50174 + C50192)) / C49932;
    const double C869 =
        -(C50070 * C50164 * C50192 + C50164 * C50193 * ce) / C49932;
    const double C877 = -(C50070 * (C50156 * C50174 + C50192) +
                          (C50193 + C50205 * C50174) * ce) /
                        C49932;
    const double C1002 = -(C50070 * (C50070 * C50192 + C50193 * ce) +
                           C50142 * C50088 + C50182 + C50070 * C50193 * ce) /
                         C49932;
    const double C50207 = C50202 / C49932;
    const double C1153 = -(C50070 * (C50070 * C50252 + C50253 * ce) +
                           C50164 * C50185 + C50070 * C50253 * ce) /
                         C49932;
    const double C50277 = C50272 + C50273;
    const double C50458 = C50449 / C50079;
    const double C2596 = C117 * C750;
    const double C14434 = C10923 * C750;
    const double C36820 = C33490 * C750;
    const double C2775 = C117 * C875;
    const double C5990 = C5415 * C875;
    const double C11514 = C10924 * C875;
    const double C14808 = C10923 * C875;
    const double C34081 = C33491 * C875;
    const double C38054 = C33490 * C875;
    const double C2940 =
        (-3 * (C50142 * C50174 + C50182)) / C49932 +
        C50164 * ((-2 * C50248) / C49932 - (C50164 * C50322) / C49932);
    const double C3242 =
        C50070 * ((-2 * C50248) / C49932 - (C50164 * C50322) / C49932) -
        ((2 * C50249 + C50164 * C50323) * ce) / C49932;
    const double C3452 = -(C50070 * (C50070 * C50322 + C50323 * ce) +
                           C50142 * C50174 + C50182 + C50070 * C50323 * ce) /
                         C49932;
    const double C50352 = C50346 / C49932;
    const double C50391 = C50386 + C50387;
    const double C50510 = C50504 / C50079;
    const double C50438 = C50070 * C50432;
    const double C50572 = -2 * C50432;
    const double C50567 = ae * C50432;
    const double C50119 = C50118 * C50088;
    const double C50301 = C50075 * C50118;
    const double C50688 = C50118 * C50174;
    const double C50767 = C50164 * C50118;
    const double C50828 = C50070 * C50118;
    const double C50238 = C50075 * C50235;
    const double C50335 = C50235 * C50174;
    const double C50483 = C50070 * C50235;
    const double C50678 = C50164 * C50235;
    const double C50376 = C50220 + C50372;
    const double C50548 = C50070 * C50540;
    const double C50644 = C50633 + C50634;
    const double C50714 = C50164 * C50711;
    const double C50742 = C50070 * C50711;
    const double C50792 = C50784 + C50785;
    const double C50861 = C50070 * C50853;
    const double C50236 = C50075 * C50233;
    const double C50333 = C50233 * C50174;
    const double C50479 = C50070 * C50233;
    const double C50676 = C50164 * C50233;
    const double C50374 = C50368 + C50214;
    const double C50544 = C50070 * C50538;
    const double C50641 = C50627 + C50628;
    const double C50712 = C50164 * C50709;
    const double C50738 = C50070 * C50709;
    const double C50789 = C50780 + C50781;
    const double C50858 = C50070 * C50850;
    const double C162 = C117 * C123;
    const double C10950 = C10923 * C123;
    const double C33517 = C33490 * C123;
    const double C321 = C117 * C294;
    const double C11146 = C10923 * C294;
    const double C33713 = C33490 * C294;
    const double C493 = C117 * C457;
    const double C5444 = C5415 * C457;
    const double C10946 = C10924 * C457;
    const double C11335 = C10923 * C457;
    const double C33513 = C33491 * C457;
    const double C33902 = C33490 * C457;
    const double C652 = C117 * C629;
    const double C11516 = C10923 * C629;
    const double C34083 = C33490 * C629;
    const double C1599 = C117 * C858;
    const double C5632 = C5415 * C858;
    const double C11134 = C10924 * C858;
    const double C12684 = C10923 * C858;
    const double C33701 = C33491 * C858;
    const double C35251 = C33490 * C858;
    const double C1025 = C117 * C994;
    const double C5436 = C5416 * C994;
    const double C5814 = C5415 * C994;
    const double C11327 = C10924 * C994;
    const double C11930 = C10923 * C994;
    const double C33894 = C33491 * C994;
    const double C34497 = C33490 * C994;
    const double C3465 = C117 * C1147;
    const double C5624 = C5416 * C1147;
    const double C7172 = C5415 * C1147;
    const double C12678 = C10924 * C1147;
    const double C15018 = C10923 * C1147;
    const double C35245 = C33491 * C1147;
    const double C42068 = C33490 * C1147;
    const double C3082 = C117 * C2936;
    const double C31339 = C10923 * C2936;
    const double C36942 = C33490 * C2936;
    const double C3267 = C117 * C3237;
    const double C14584 = C10924 * C3237;
    const double C22484 = C5415 * C3237;
    const double C31505 = C10923 * C3237;
    const double C36812 = C33491 * C3237;
    const double C37122 = C33490 * C3237;
    const double C3651 = C117 * C3448;
    const double C14798 = C10924 * C3448;
    const double C22372 = C5416 * C3448;
    const double C22660 = C5415 * C3448;
    const double C31815 = C10923 * C3448;
    const double C37114 = C33491 * C3448;
    const double C37450 = C33490 * C3448;
    const double C50440 = C50437 / C50003;
    const double C50234 = C50225 + C50231;
    const double C50337 = C50205 + C50334;
    const double C50489 = C50205 + C50482;
    const double C50491 = C50481 * ae;
    const double C50488 = C50481 * ce;
    const double C50683 = C50677 * ae;
    const double C50681 = C50070 * C50677;
    const double C50680 = C50677 * ce;
    const double C50378 = C50164 * C50375;
    const double C50415 = C50375 * ae;
    const double C50413 = C50070 * C50375;
    const double C50412 = C50375 * ce;
    const double C50554 = C50363 + C50547;
    const double C50556 = C50546 * ae;
    const double C50553 = C50546 * ce;
    const double C50652 = C50643 * ae;
    const double C50650 = C50070 * C50643;
    const double C50649 = C50643 * ce;
    const double C50716 = C50702 + C50713;
    const double C50748 = C50349 + C50741;
    const double C50750 = C50740 * ae;
    const double C50747 = C50740 * ce;
    const double C50800 = C50791 * ae;
    const double C50798 = C50070 * C50791;
    const double C50797 = C50791 * ce;
    const double C50868 = C50835 + C50860;
    const double C50867 = C50859 / C49932;
    const double C50209 = C50206 + C50201;
    const double C50485 = C50476 / C49932;
    const double C2941 = (3 * (C50187 + C50200 * C50174) +
                          C50164 * (2 * C50254 + C50164 * C50331)) /
                         C50003;
    const double C50541 = C50535 / C49932;
    const double C50647 = -C50637;
    const double C50358 = C50350 + C50355;
    const double C50744 = C50735 / C49932;
    const double C50787 = -C50776;
    const double C50865 = C50857 / C50003;
    const double C50203 = C50197 / C49932;
    const double C50222 = C50213 / C49932;
    const double C50486 = C50477 / C50079;
    const double C2942 =
        (-3 * (C50196 * C50174 + C50185)) / C49932 +
        C50164 * ((-2 * C50252) / C49932 - (C50164 * C50329) / C49932);
    const double C50373 = C50367 / C49932;
    const double C50542 = C50536 / C50079;
    const double C50356 = C50353 / C49932;
    const double C50707 = C50698 / C49932;
    const double C50745 = C50736 / C50079;
    const double C51472 = C51433 / C50005;
    const double C51474 = C51437 / C50003;
    const double C2434 = -C51473;
    const double C51476 = C51442 / C49957;
    const double C51444 = C51194 / C49932;
    const double C1456 = -C51475;
    const double C51479 = C51451 / C49957;
    const double C51453 = C51237 / C49932;
    const double C1350 = -C51478;
    const double C51485 = C51465 / C50005;
    const double C51486 = C51467 / C50003;
    const double C17436 = -C51484;
    const double C49963 = C49959 / C49932;
    const double C1235 =
        (C49970 / C49940 - (0 * de) / C49932) / C49940 - (0 * de) / C49932;
    const double C1991 = C49970 / C49940 - (0 * de) / C49932;
    const double C51494 = C51454 - C51482;
    const double C51483 = C51457 - C51458;
    const double C989 =
        ((-(0 * de) / C49932) / C49940 -
         ((0 - (C49931 * C49941) / C49932) * de) / C49932) /
            C49940 -
        ((C49931 * ((-C49941 / C49932) / C49940 -
                    ((C51248 - (C49931 * C49945) / C49932) * de) / C49932) +
          C1720) *
         de) /
            C49932 +
        (-C49945 / C49932) / C49940 - (0 * de) / C49932;
    const double C39114 =
        (C50040 / C50028 - (0 * be) / C50003) / C50028 + (0 * ae) / C50003;
    const double C44476 = C50040 / C50028 - (0 * be) / C50003;
    const double C50039 = C50036 / C50003;
    const double C10963 = C10936 + C10937;
    const double C10959 = C10928 + C10929;
    const double C14018 = C14005 + C14006;
    const double C14442 = C14424 + C14425;
    const double C33530 = C33503 + C33504;
    const double C33526 = C33495 + C33496;
    const double C36511 = C36500 + C36501;
    const double C36507 = C36492 + C36493;
    const double C179 = C169 * C51248;
    const double C480 = C169 * C51448;
    const double C1014 = C169 * C986;
    const double C1726 = C169 * C1720;
    const double C178 = C168 * C118;
    const double C479 = C168 * C452;
    const double C2618 = C2610 * C51248;
    const double C3255 = C2610 * C51448;
    const double C3640 = C2610 * C986;
    const double C4625 = C2610 * C1720;
    const double C2617 = C2609 * C118;
    const double C3254 = C2609 * C452;
    const double C51497 = C51461 - C51488;
    const double C10969 = C10948 + C10949;
    const double C10964 = C10938 + C10939;
    const double C10962 = C10934 + C10935;
    const double C10960 = C10930 + C10931;
    const double C10958 = C10926 + C10927;
    const double C11161 = C11144 + C11145;
    const double C11157 = C11136 + C11137;
    const double C11349 = C11329 + C11330;
    const double C11344 = C11319 + C11320;
    const double C14019 = C14007 + C14008;
    const double C14017 = C14003 + C14004;
    const double C14443 = C14426 + C14427;
    const double C14590 = C14582 + C14583;
    const double C14816 = C14796 + C14797;
    const double C14813 = C14790 + C14791;
    const double C5448 = C5414 * C133;
    const double C5442 = C5414 * C122;
    const double C5440 = C5414 * C121;
    const double C5434 = C5414 * C131;
    const double C5424 = C5414 * C129;
    const double C5418 = C5414 * C120;
    const double C5636 = C5414 * C302;
    const double C5630 = C5414 * C295;
    const double C5628 = C5414 * C296;
    const double C5622 = C5414 * C304;
    const double C5818 = C5414 * C465;
    const double C5812 = C5414 * C456;
    const double C5810 = C5414 * C463;
    const double C5804 = C5414 * C455;
    const double C5988 = C5414 * C635;
    const double C5982 = C5414 * C628;
    const double C6408 = C5414 * C1000;
    const double C6402 = C5414 * C993;
    const double C7176 = C5414 * C867;
    const double C7170 = C5414 * C857;
    const double C22062 = C5414 * C306;
    const double C22056 = C5414 * C297;
    const double C22376 = C5414 * C627;
    const double C22370 = C5414 * C633;
    const double C22488 = C5414 * C752;
    const double C22482 = C5414 * C745;
    const double C22664 = C5414 * C873;
    const double C22658 = C5414 * C860;
    const double C22656 = C5414 * C865;
    const double C22650 = C5414 * C856;
    const double C22984 = C5414 * C1151;
    const double C22978 = C5414 * C1146;
    const double C5464 = C5438 + C5439;
    const double C5455 = C5420 + C5421;
    const double C22069 = C22058 + C22059;
    const double C22382 = C22374 + C22375;
    const double C51498 = C51470 - C51489;
    const double C33516 = C33488 * C132;
    const double C33506 = C33488 * C142;
    const double C33502 = C33488 * C130;
    const double C33498 = C33488 * C141;
    const double C33494 = C33488 * C128;
    const double C33712 = C33488 * C305;
    const double C33704 = C33488 * C303;
    const double C33897 = C33488 * C464;
    const double C33887 = C33488 * C462;
    const double C34076 = C33488 * C634;
    const double C34490 = C33488 * C999;
    const double C35244 = C33488 * C866;
    const double C36499 = C33488 * C632;
    const double C36495 = C33488 * C315;
    const double C36491 = C33488 * C307;
    const double C36817 = C33488 * C751;
    const double C36815 = C33488 * C753;
    const double C37117 = C33488 * C872;
    const double C37107 = C33488 * C864;
    const double C37443 = C33488 * C1150;
    const double C38051 = C33488 * C874;
    const double C159 = C51318 * C143;
    const double C5449 = C5411 * C143;
    const double C10945 = C51463 * C143;
    const double C33512 = C33488 * C143;
    const double C328 = C51318 * C314;
    const double C5623 = C5411 * C314;
    const double C11141 = C51463 * C314;
    const double C33708 = C33488 * C314;
    const double C484 = C51318 * C473;
    const double C5427 = C5412 * C473;
    const double C5811 = C5411 * C473;
    const double C10933 = C51382 * C473;
    const double C11324 = C51463 * C473;
    const double C33500 = C51382 * C473;
    const double C33891 = C33488 * C473;
    const double C2594 = C51318 * C642;
    const double C14423 = C51463 * C642;
    const double C22371 = C5411 * C642;
    const double C36503 = C33488 * C642;
    const double C3259 = C51318 * C880;
    const double C14010 = C51382 * C880;
    const double C14795 = C51463 * C880;
    const double C22065 = C5412 * C880;
    const double C22657 = C5411 * C880;
    const double C36497 = C51382 * C880;
    const double C37111 = C33488 * C880;
    const double C660 = C648 + C649;
    const double C11524 = C11508 + C11509;
    const double C1611 = C1593 + C1594;
    const double C5646 = C5626 + C5627;
    const double C11160 = C11142 + C11143;
    const double C12692 = C12676 + C12677;
    const double C33727 = C33709 + C33710;
    const double C1037 = C1017 + C1018;
    const double C5456 = C5422 + C5423;
    const double C5825 = C5802 + C5803;
    const double C11343 = C11317 + C11318;
    const double C11938 = C11922 + C11923;
    const double C33910 = C33884 + C33885;
    const double C3655 = C3643 + C3644;
    const double C14812 = C14788 + C14789;
    const double C15232 = C15224 + C15225;
    const double C22070 = C22060 + C22061;
    const double C22671 = C22648 + C22649;
    const double C37130 = C37104 + C37105;
    const double C180 = C170 * C118;
    const double C485 = C170 * C452;
    const double C182 = C172 * C118;
    const double C491 = C172 * C452;
    const double C346 = C338 * C118;
    const double C1602 = C338 * C452;
    const double C348 = C340 * C118;
    const double C1596 = C340 * C452;
    const double C513 = C503 * C453;
    const double C1015 = C503 * C990;
    const double C1727 = C503 * C1723;
    const double C515 = C506 * C453;
    const double C1023 = C506 * C990;
    const double C1731 = C506 * C1723;
    const double C2619 = C2611 * C118;
    const double C3260 = C2611 * C452;
    const double C2971 = C2965 * C118;
    const double C3270 = C2965 * C452;
    const double C3289 = C3279 * C453;
    const double C3641 = C3279 * C990;
    const double C4626 = C3279 * C1723;
    const double C3291 = C3282 * C453;
    const double C3649 = C3282 * C990;
    const double C4631 = C3282 * C1723;
    const double C181 = C171 * C51248;
    const double C486 = C171 * C51448;
    const double C1022 = C171 * C986;
    const double C1730 = C171 * C1720;
    const double C2945 =
        3 * ((-(C50092 * C50174) / C49932) / C50003 - C50083 / C50079) +
        C50164 * ((-2 * C50164 * C50092) / C50079 +
                  C50164 * ((-(C50101 * C50174) / C49932) / C50003 - C50097));
    const double C881 = (-(C50164 * C50075 * C50143 * ce) / C49932) / C50003 -
                        (ae * C50164 * C50075 * C50142) / C50079 -
                        (C50070 * C50164 * C50167) / C50079;
    const double C1008 =
        (-(ae * (C50070 * C50185 + C50186 * ce)) / C49932) / C50003 -
        (C50075 * C50083) / C50079 -
        ((C50070 * C50187 + C50186 * ae) * ce) / C50079 +
        C50070 * ((-(C50187 * ce) / C49932) / C50003 - (ae * C50185) / C50079 -
                  (C50070 * C50167) / C50079);
    const double C50431 = C50422 / C50079;
    const double C161 = C51318 * C144;
    const double C10955 = C51463 * C144;
    const double C33522 = C33488 * C144;
    const double C324 = C51318 * C313;
    const double C5637 = C5411 * C313;
    const double C11133 = C51463 * C313;
    const double C33700 = C33488 * C313;
    const double C490 = C51318 * C474;
    const double C5433 = C5412 * C474;
    const double C5819 = C5411 * C474;
    const double C10941 = C51382 * C474;
    const double C11334 = C51463 * C474;
    const double C33508 = C51382 * C474;
    const double C33901 = C33488 * C474;
    const double C651 = C51318 * C643;
    const double C5989 = C5411 * C643;
    const double C11513 = C51463 * C643;
    const double C34080 = C33488 * C643;
    const double C2953 = C51318 * C757;
    const double C14587 = C51463 * C757;
    const double C22489 = C5411 * C757;
    const double C36811 = C33488 * C757;
    const double C3265 = C51318 * C884;
    const double C14421 = C51382 * C884;
    const double C14801 = C51463 * C884;
    const double C22369 = C5412 * C884;
    const double C22665 = C5411 * C884;
    const double C36505 = C51382 * C884;
    const double C37121 = C33488 * C884;
    const double C3646 = C51318 * C1158;
    const double C14793 = C51382 * C1158;
    const double C15229 = C51463 * C1158;
    const double C22067 = C5413 * C1158;
    const double C22655 = C5412 * C1158;
    const double C22985 = C5411 * C1158;
    const double C37109 = C51382 * C1158;
    const double C37447 = C33488 * C1158;
    const double C47443 = C44473 * C1158;
    const double C50103 = C50102 / C49932;
    const double C50113 = -2 * C50108;
    const double C50302 = C50108 / C50079;
    const double C50394 = C50164 * C50108;
    const double C50450 = C50070 * C50108;
    const double C756 =
        (-2 * C50164 * C50167) / C50079 +
        C50164 * ((-(C50108 * std::pow(C50164, 2)) / C49932) / C50003 -
                  C50167 / C50079);
    const double C885 =
        (-((C50075 * C50143 + C50075 * C50148 * C50174) * ce) / C49932) /
            C50003 -
        (ae * (C50075 * C50147 * C50174 + C50075 * C50142)) / C50079 +
        C50070 * ((-(C50108 * C50174) / C49932) / C50003 - C50167 / C50079);
    const double C1159 =
        (-(ae * (C50070 * C50252 + C50253 * ce)) / C49932) / C50003 -
        (C50164 * C50167) / C50079 -
        ((C50070 * C50254 + C50253 * ae) * ce) / C50079 +
        C50070 * ((-(C50254 * ce) / C49932) / C50003 - (ae * C50252) / C50079 -
                  (C50070 * C50164 * C50108) / C50079);
    const double C2946 =
        3 * ((-(C50108 * C50174) / C49932) / C50003 - C50167 / C50079) +
        C50164 * ((-2 * C50164 * C50108) / C50079 +
                  C50164 * ((-(C50075 * C50118 * C50174) / C49932) / C50003 -
                            C50108 / C50079));
    const double C50310 = C50309 / C49932;
    const double C50511 = C50070 * C50505;
    const double C50687 = -2 * C50505;
    const double C50763 = C50505 / C50079;
    const double C50585 = C50571 / C50079;
    const double C50211 = C50204 + C50208;
    const double C1154 =
        (C50164 * C50194 + C50070 * (C50070 * C50258 + C50257 * ae) +
         C50070 * C50257 * ae) /
        C50003;
    const double C1155 = -(C50070 * (C50070 * C50256 + C50257 * ce) +
                           C50164 * C50192 + C50070 * C50257 * ce) /
                         C49932;
    const double C1148 = C50164 * C50193 + C50257 * C50073;
    const double C7165 =
        2 * C50070 * C50257 + C50070 * (C50257 + C50677 * C50073);
    const double C50286 = C50283 + C50284;
    const double C50285 = C50280 + C50281;
    const double C2604 = C117 * C743;
    const double C2777 = C117 * C862;
    const double C11518 = C10924 * C862;
    const double C34085 = C33491 * C862;
    const double C5816 = C5416 * C1238;
    const double C11932 = C10924 * C1238;
    const double C34499 = C33491 * C1238;
    const double C3243 = (C50070 * (2 * C50254 + C50164 * C50331) +
                          (2 * C50253 + C50164 * C50330) * ae) /
                         C50003;
    const double C3244 =
        C50070 * ((-2 * C50252) / C49932 - (C50164 * C50329) / C49932) -
        ((2 * C50253 + C50164 * C50330) * ce) / C49932;
    const double C3453 =
        (C50187 + C50200 * C50174 + C50070 * (C50070 * C50331 + C50330 * ae) +
         C50070 * C50330 * ae) /
        C50003;
    const double C3454 = -(C50070 * (C50070 * C50329 + C50330 * ce) +
                           C50196 * C50174 + C50185 + C50070 * C50330 * ce) /
                         C49932;
    const double C2937 = 3 * (C50186 + C50198 * C50174) +
                         C50164 * (2 * C50253 + C50164 * C50330);
    const double C3238 = C50070 * (2 * C50253 + C50164 * C50330);
    const double C3449 = C50186 + C50198 * C50174 + C50330 * C50073;
    const double C3763 =
        2 * C50070 * C50330 + C50070 * (C50330 + C50375 * C50073);
    const double C50401 = C50398 + C50399;
    const double C50400 = C50395 + C50396;
    const double C7174 = C5416 * C3761;
    const double C15020 = C10924 * C3761;
    const double C42070 = C33491 * C3761;
    const double C50467 = C50070 * C50463;
    const double C50632 = 2 * C50463;
    const double C50622 = C50463 * ce;
    const double C6390 = 3 * (C50186 + C50198 * C50073) +
                         C50070 * (2 * C50274 + C50070 * C50462);
    const double C50466 = C50070 * C50460;
    const double C50626 = -2 * C50460;
    const double C50621 = ae * C50460;
    const double C50357 = C50348 + C50354;
    const double C50409 = C50406 + C50407;
    const double C50408 = C50403 + C50404;
    const double C22662 = C5416 * C3762;
    const double C31817 = C10924 * C3762;
    const double C37452 = C33491 * C3762;
    const double C50527 = C50070 * C50523;
    const double C50772 = 2 * C50523;
    const double C50764 = C50523 * ce;
    const double C6565 = 3 * (C50249 + C50342 * C50073) +
                         C50070 * (2 * C50388 + C50070 * C50522);
    const double C50526 = C50070 * C50520;
    const double C50768 = -2 * C50520;
    const double C50762 = ae * C50520;
    const double C50604 = C50148 + C50597;
    const double C50844 = C50825 / C50079;
    const double C50603 = C50577 + C50596;
    const double C50602 = C50595 / C49932;
    const double C50601 = C50594 + C50147;
    const double C50849 = C50830 / C49932;
    const double C50843 = C50824 / C49932;
    const double C163 = C51318 * C135;
    const double C10951 = C51463 * C135;
    const double C33518 = C33488 * C135;
    const double C322 = C51318 * C301;
    const double C11147 = C51463 * C301;
    const double C33714 = C33488 * C301;
    const double C494 = C51318 * C466;
    const double C5445 = C5412 * C466;
    const double C10947 = C51382 * C466;
    const double C11336 = C51463 * C466;
    const double C33514 = C51382 * C466;
    const double C33903 = C33488 * C466;
    const double C653 = C51318 * C636;
    const double C11517 = C51463 * C636;
    const double C34084 = C33488 * C636;
    const double C2605 = C51318 * C749;
    const double C1600 = C51318 * C868;
    const double C5633 = C5412 * C868;
    const double C11135 = C51382 * C868;
    const double C12685 = C51463 * C868;
    const double C33702 = C51382 * C868;
    const double C35252 = C33488 * C868;
    const double C2778 = C51318 * C876;
    const double C11519 = C51382 * C876;
    const double C34086 = C51382 * C876;
    const double C1026 = C51318 * C1001;
    const double C5437 = C5413 * C1001;
    const double C5815 = C5412 * C1001;
    const double C11328 = C51382 * C1001;
    const double C11931 = C51463 * C1001;
    const double C33895 = C51382 * C1001;
    const double C34498 = C33488 * C1001;
    const double C44497 = C44473 * C1001;
    const double C3466 = C51318 * C1152;
    const double C5625 = C5413 * C1152;
    const double C7173 = C5412 * C1152;
    const double C12679 = C51382 * C1152;
    const double C15019 = C51463 * C1152;
    const double C35246 = C51382 * C1152;
    const double C42069 = C33488 * C1152;
    const double C44685 = C44473 * C1152;
    const double C1242 = (2 * (C50070 * C50187 + C50186 * ae) +
                          C50070 * (C50187 + C50070 * C50278 + C50274 * ae) +
                          (C50186 + C50198 * C50073) * ae) /
                         C50003;
    const double C50465 = -C50457;
    const double C2614 = C2598 + C2599;
    const double C14446 = C14430 + C14431;
    const double C2783 = C2773 + C2774;
    const double C5995 = C5984 + C5985;
    const double C11525 = C11510 + C11511;
    const double C14820 = C14804 + C14805;
    const double C34092 = C34077 + C34078;
    const double C3083 = C51318 * C2939;
    const double C31340 = C51463 * C2939;
    const double C36943 = C33488 * C2939;
    const double C3268 = C51318 * C3241;
    const double C14585 = C51382 * C3241;
    const double C22485 = C5412 * C3241;
    const double C31506 = C51463 * C3241;
    const double C36813 = C51382 * C3241;
    const double C37123 = C33488 * C3241;
    const double C3652 = C51318 * C3451;
    const double C14799 = C51382 * C3451;
    const double C22373 = C5413 * C3451;
    const double C22661 = C5412 * C3451;
    const double C31816 = C51463 * C3451;
    const double C37115 = C51382 * C3451;
    const double C37451 = C33488 * C3451;
    const double C47749 = C44473 * C3451;
    const double C3764 = (2 * (C50070 * C50250 + C50249 * ae) +
                          C50070 * (C50250 + C50070 * C50392 + C50388 * ae) +
                          (C50249 + C50342 * C50073) * ae) /
                         C50003;
    const double C50518 = -C50509;
    const double C50442 = C50143 + C50439;
    const double C50582 = C50568 / C50079;
    const double C50600 = C50593 / C50003;
    const double C160 = C117 * C134;
    const double C10954 = C10923 * C134;
    const double C33521 = C33490 * C134;
    const double C319 = C117 * C300;
    const double C11150 = C10923 * C300;
    const double C33717 = C33490 * C300;
    const double C495 = C117 * C467;
    const double C5450 = C5415 * C467;
    const double C10942 = C10924 * C467;
    const double C11339 = C10923 * C467;
    const double C33509 = C33491 * C467;
    const double C33906 = C33490 * C467;
    const double C654 = C117 * C637;
    const double C11520 = C10923 * C637;
    const double C34087 = C33490 * C637;
    const double C2606 = C117 * C748;
    const double C1603 = C117 * C869;
    const double C5638 = C5415 * C869;
    const double C11130 = C10924 * C869;
    const double C12688 = C10923 * C869;
    const double C33697 = C33491 * C869;
    const double C35255 = C33490 * C869;
    const double C2781 = C117 * C877;
    const double C11522 = C10924 * C877;
    const double C34089 = C33491 * C877;
    const double C1027 = C117 * C1002;
    const double C5430 = C5416 * C1002;
    const double C5820 = C5415 * C1002;
    const double C11331 = C10924 * C1002;
    const double C11934 = C10923 * C1002;
    const double C33898 = C33491 * C1002;
    const double C34501 = C33490 * C1002;
    const double C3467 = C117 * C1153;
    const double C5618 = C5416 * C1153;
    const double C7178 = C5415 * C1153;
    const double C12682 = C10924 * C1153;
    const double C15022 = C10923 * C1153;
    const double C35249 = C33491 * C1153;
    const double C42072 = C33490 * C1153;
    const double C1249 =
        2 * ((-(C50187 * ce) / C49932) / C50003 - (ae * C50185) / C50079 -
             (C50070 * C50167) / C50079) -
        (ae * (C50070 * C50277 + C50185 + C50274 * ce)) / C50079 -
        ((C50187 + C50070 * C50278 + C50274 * ae) * ce) / C50079 +
        C50070 *
            ((-(ae * C50277) / C49932) / C50003 - C50167 / C50079 -
             (C50278 * ce) / C50079 +
             C50070 * ((-(C50200 * ce) / C49932) / C50003 -
                       (ae * C50196) / C50079 - (C50070 * C50108) / C50079));
    const double C1243 =
        (-2 * (C50070 * C50185 + C50186 * ce)) / C49932 -
        (C50070 * (C50070 * C50277 + C50185 + C50274 * ce)) / C49932 -
        ((C50186 + C50198 * C50073) * ce) / C49932;
    const double C3084 = C117 * C2940;
    const double C31343 = C10923 * C2940;
    const double C36946 = C33490 * C2940;
    const double C3271 = C117 * C3242;
    const double C14588 = C10924 * C3242;
    const double C22490 = C5415 * C3242;
    const double C31509 = C10923 * C3242;
    const double C36808 = C33491 * C3242;
    const double C37126 = C33490 * C3242;
    const double C3653 = C117 * C3452;
    const double C14802 = C10924 * C3452;
    const double C22366 = C5416 * C3452;
    const double C22666 = C5415 * C3452;
    const double C31819 = C10923 * C3452;
    const double C37118 = C33491 * C3452;
    const double C37454 = C33490 * C3452;
    const double C3772 =
        2 * ((-(C50250 * ce) / C49932) / C50003 - (ae * C50248) / C50079 -
             (C50070 * C50385) / C50079) -
        (ae * (C50070 * C50391 + C50248 + C50388 * ce)) / C50079 -
        ((C50250 + C50070 * C50392 + C50388 * ae) * ce) / C50079 +
        C50070 * ((-(ae * C50391) / C49932) / C50003 - C50385 / C50079 -
                  (C50392 * ce) / C50079 +
                  C50070 * ((-(C50344 * ce) / C49932) / C50003 -
                            (ae * C50340) / C50079 -
                            (C50070 * C50164 * C50101) / C50079));
    const double C3765 =
        (-2 * (C50070 * C50248 + C50249 * ce)) / C49932 -
        (C50070 * (C50070 * C50391 + C50248 + C50388 * ce)) / C49932 -
        ((C50249 + C50342 * C50073) * ce) / C49932;
    const double C50441 = C50438 + C50142;
    const double C50586 = C50572 / C49932;
    const double C50581 = C50567 / C49932;
    const double C50120 = C50119 / C49932;
    const double C50303 = C50301 * C50174;
    const double C50537 = C50164 * C50301;
    const double C50625 = C50070 * C50301;
    const double C50690 = C50688 / C49932;
    const double C50778 = C50070 * C50767;
    const double C50847 = C50828 / C50079;
    const double C50241 = C50227 + C50238;
    const double C50338 = C50157 + C50335;
    const double C50490 = C50483 + C50484;
    const double C50682 = C50070 * C50678;
    const double C50379 = C50164 * C50376;
    const double C50414 = C50070 * C50376;
    const double C50555 = C50548 + C50549;
    const double C50651 = C50070 * C50644;
    const double C50717 = C50705 + C50714;
    const double C50749 = C50742 + C50743;
    const double C50799 = C50070 * C50792;
    const double C50869 = C50153 + C50861;
    const double C50239 = C50236 / C49932;
    const double C50336 = C50333 + C50156;
    const double C50487 = C50479 + C50480;
    const double C50679 = C50070 * C50676;
    const double C50377 = C50164 * C50374;
    const double C50411 = C50070 * C50374;
    const double C50552 = C50544 + C50545;
    const double C50648 = C50070 * C50641;
    const double C50715 = C50712 / C49932;
    const double C50746 = C50738 + C50739;
    const double C50796 = C50070 * C50789;
    const double C50866 = C50858 + C50152;
    const double C50443 = C50440 - C50430;
    const double C50237 = C50075 * C50234;
    const double C50261 = C50164 * C50234;
    const double C50292 = C50234 * ae;
    const double C50290 = C50070 * C50234;
    const double C50289 = C50234 * ce;
    const double C2938 = 3 * (C50193 + C50205 * C50174) +
                         C50164 * (2 * C50257 + C50164 * C50337);
    const double C3450 = C50193 + C50205 * C50174 + C50337 * C50073;
    const double C4262 = C50070 * (2 * C50257 + C50164 * C50337);
    const double C6391 = 3 * (C50193 + C50205 * C50073) +
                         C50070 * (2 * C50282 + C50070 * C50489);
    const double C50381 = C50369 + C50378;
    const double C6566 = 3 * (C50253 + C50363 * C50073) +
                         C50070 * (2 * C50397 + C50070 * C50554);
    const double C50657 = C50631 + C50650;
    const double C50656 = C50649 / C49932;
    const double C50719 = C50164 * C50716;
    const double C50730 = C50716 * ae;
    const double C50728 = C50070 * C50716;
    const double C50727 = C50716 * ce;
    const double C22973 = 3 * (C50323 + C50349 * C50073) +
                          C50070 * (2 * C50405 + C50070 * C50748);
    const double C50805 = C50771 + C50798;
    const double C50804 = C50797 / C49932;
    const double C50876 = C50868 * ae;
    const double C50874 = C50070 * C50868;
    const double C50873 = C50868 * ce;
    const double C136 = (4 * (2 * C50187 + C50075 * C50194) +
                         C50075 * (3 * C50194 + C50075 * C50209)) /
                        C50003;
    const double C308 = (C50164 * (3 * C50194 + C50075 * C50209)) / C50003;
    const double C638 =
        (2 * C50187 + C50075 * C50194 + C50209 * C50174) / C50003;
    const double C50492 = -C50485;
    const double C2958 = C51318 * C2941;
    const double C50550 = -C50541;
    const double C50654 = C50647 / C50003;
    const double C3076 = (4 * (2 * C50250 + C50164 * C50324) +
                          C50164 * (3 * C50324 + C50164 * C50358)) /
                         C50003;
    const double C50751 = -C50744;
    const double C50795 = C50787 / C50003;
    const double C50871 = C50865 - C50846;
    const double C50210 = C50207 - C50203;
    const double C2959 = C117 * C2942;
    const double C50359 = C50352 - C50356;
    const double C51490 = C51432 - C51472;
    const double C51491 = C51436 - C51474;
    const double C51492 = C51441 - C51476;
    const double C51477 = C51443 - C51444;
    const double C51493 = C51449 - C51479;
    const double C51480 = C51452 - C51453;
    const double C51495 = C51459 - C51485;
    const double C51496 = C51466 - C51486;
    const double C49968 = C51248 - C49963;
    const double C2000 = C171 * C51494;
    const double C1994 = C169 * C51494;
    const double C5303 = C2610 * C51494;
    const double C1228 =
        (C51448 - C51481) / C49940 - (C51494 * C51256) / C49932;
    const double C1229 =
        (2 * C51260 + C51494) / C49940 - (C51483 * C51256) / C49932;
    const double C1230 = C51483 / C49940 - C51263 / C49961;
    const double C1029 = C172 * C989;
    const double C1021 = C170 * C989;
    const double C1013 = C168 * C989;
    const double C3461 = C340 * C989;
    const double C3647 = C2611 * C989;
    const double C3639 = C2609 * C989;
    const double C9095 = C338 * C989;
    const double C20737 = C2965 * C989;
    const double C44496 = C44476 * C994;
    const double C44490 = C44476 * C1002;
    const double C44488 = C44476 * C1000;
    const double C44482 = C44476 * C993;
    const double C44684 = C44476 * C1147;
    const double C44678 = C44476 * C1153;
    const double C44876 = C44476 * C1238;
    const double C44860 = C44476 * C1237;
    const double C46202 = C44476 * C3761;
    const double C47442 = C44476 * C1151;
    const double C47436 = C44476 * C1146;
    const double C47748 = C44476 * C3448;
    const double C47742 = C44476 * C3452;
    const double C48038 = C44476 * C3762;
    const double C48022 = C44476 * C3760;
    const double C50042 = C51318 - C50039;
    const double C44509 = C51497 * C143;
    const double C44503 = C51497 * C132;
    const double C44501 = C51497 * C130;
    const double C44495 = C51497 * C142;
    const double C44485 = C51497 * C141;
    const double C44479 = C51497 * C128;
    const double C44697 = C51497 * C313;
    const double C44691 = C51497 * C303;
    const double C44689 = C51497 * C305;
    const double C44683 = C51497 * C314;
    const double C44879 = C51497 * C474;
    const double C44873 = C51497 * C464;
    const double C44871 = C51497 * C473;
    const double C44865 = C51497 * C462;
    const double C45049 = C51497 * C643;
    const double C45043 = C51497 * C634;
    const double C45451 = C51497 * C999;
    const double C46199 = C51497 * C866;
    const double C47439 = C51497 * C315;
    const double C47433 = C51497 * C307;
    const double C47753 = C51497 * C632;
    const double C47747 = C51497 * C642;
    const double C47865 = C51497 * C757;
    const double C47859 = C51497 * C753;
    const double C48041 = C51497 * C884;
    const double C48035 = C51497 * C872;
    const double C48033 = C51497 * C880;
    const double C48027 = C51497 * C864;
    const double C48357 = C51497 * C1158;
    const double C48351 = C51497 * C1150;
    const double C39107 =
        (C51497 * C51377) / C50003 + (C51463 - C51487) / C50028;
    const double C10974 = C10962 + C10963;
    const double C31232 = C14443 + C14442;
    const double C5466 = C5442 + C5443;
    const double C5465 = C5440 + C5441;
    const double C5462 = C5434 + C5435;
    const double C5457 = C5424 + C5425;
    const double C5454 = C5418 + C5419;
    const double C5648 = C5630 + C5631;
    const double C5647 = C5628 + C5629;
    const double C5830 = C5812 + C5813;
    const double C5826 = C5804 + C5805;
    const double C5994 = C5982 + C5983;
    const double C6414 = C6402 + C6403;
    const double C7182 = C7170 + C7171;
    const double C22071 = C22062 + C22063;
    const double C22068 = C22056 + C22057;
    const double C22383 = C22376 + C22377;
    const double C22494 = C22482 + C22483;
    const double C22676 = C22658 + C22659;
    const double C22672 = C22650 + C22651;
    const double C22990 = C22978 + C22979;
    const double C44505 = C51498 * C466;
    const double C44499 = C51498 * C464;
    const double C44493 = C51498 * C474;
    const double C44487 = C51498 * C473;
    const double C44481 = C51498 * C462;
    const double C44693 = C51498 * C868;
    const double C44687 = C51498 * C866;
    const double C44875 = C51498 * C1001;
    const double C44863 = C51498 * C999;
    const double C45045 = C51498 * C874;
    const double C46201 = C51498 * C1152;
    const double C47441 = C51498 * C880;
    const double C47435 = C51498 * C864;
    const double C47751 = C51498 * C872;
    const double C47745 = C51498 * C884;
    const double C47861 = C51498 * C3241;
    const double C48037 = C51498 * C3451;
    const double C48031 = C51498 * C1158;
    const double C48025 = C51498 * C1150;
    const double C39108 =
        (C51498 * C51377) / C50003 + (2 * C51382 + C51497) / C50028;
    const double C39109 = (C51377 * C51382) / C50007 + C51498 / C50028;
    const double C33536 = C33515 + C33516;
    const double C33531 = C33505 + C33506;
    const double C33529 = C33501 + C33502;
    const double C33527 = C33497 + C33498;
    const double C33525 = C33493 + C33494;
    const double C33728 = C33711 + C33712;
    const double C33724 = C33703 + C33704;
    const double C33916 = C33896 + C33897;
    const double C33911 = C33886 + C33887;
    const double C34091 = C34075 + C34076;
    const double C34505 = C34489 + C34490;
    const double C35259 = C35243 + C35244;
    const double C36510 = C36498 + C36499;
    const double C36508 = C36494 + C36495;
    const double C36506 = C36490 + C36491;
    const double C36832 = C36816 + C36817;
    const double C36831 = C36814 + C36815;
    const double C37136 = C37116 + C37117;
    const double C37131 = C37106 + C37107;
    const double C37458 = C37442 + C37443;
    const double C38058 = C38050 + C38051;
    const double C173 = C158 + C159;
    const double C5469 = C5448 + C5449;
    const double C10967 = C10944 + C10945;
    const double C33534 = C33511 + C33512;
    const double C339 = C327 + C328;
    const double C5644 = C5622 + C5623;
    const double C11159 = C11140 + C11141;
    const double C33726 = C33707 + C33708;
    const double C504 = C483 + C484;
    const double C5458 = C5426 + C5427;
    const double C5829 = C5810 + C5811;
    const double C10961 = C10932 + C10933;
    const double C11346 = C11323 + C11324;
    const double C33528 = C33499 + C33500;
    const double C33913 = C33890 + C33891;
    const double C2612 = C2593 + C2594;
    const double C14441 = C14422 + C14423;
    const double C22380 = C22370 + C22371;
    const double C36512 = C36502 + C36503;
    const double C3280 = C3258 + C3259;
    const double C14020 = C14009 + C14010;
    const double C14815 = C14794 + C14795;
    const double C22072 = C22064 + C22065;
    const double C22675 = C22656 + C22657;
    const double C36509 = C36496 + C36497;
    const double C37133 = C37110 + C37111;
    const double C666 = C660 * C118;
    const double C2771 = C660 * C452;
    const double C3469 = C660 * C989;
    const double C1617 = C1611 * C453;
    const double C1877 = C1611 * C1723;
    const double C3463 = C1611 * C990;
    const double C14014 = C11160 + C11161;
    const double C14011 = C11161 + C11160;
    const double C1043 = C1037 * C991;
    const double C1997 = C1037 * C1991;
    const double C3659 = C3655 * C991;
    const double C5306 = C3655 * C1991;
    const double C188 = C180 + C181;
    const double C505 = C485 + C486;
    const double C3085 = C51318 * C2945;
    const double C31344 = C51463 * C2945;
    const double C36947 = C33488 * C2945;
    const double C1598 = C51318 * C881;
    const double C5621 = C5412 * C881;
    const double C7177 = C5411 * C881;
    const double C11139 = C51382 * C881;
    const double C12681 = C51463 * C881;
    const double C33706 = C51382 * C881;
    const double C35248 = C33488 * C881;
    const double C44681 = C51498 * C881;
    const double C46205 = C51497 * C881;
    const double C1020 = C51318 * C1008;
    const double C5429 = C5413 * C1008;
    const double C5809 = C5412 * C1008;
    const double C6409 = C5411 * C1008;
    const double C11322 = C51382 * C1008;
    const double C11927 = C51463 * C1008;
    const double C33889 = C51382 * C1008;
    const double C34494 = C33488 * C1008;
    const double C44489 = C44473 * C1008;
    const double C44869 = C51498 * C1008;
    const double C45457 = C51497 * C1008;
    const double C337 = C323 + C324;
    const double C5651 = C5636 + C5637;
    const double C11155 = C11132 + C11133;
    const double C33722 = C33699 + C33700;
    const double C507 = C489 + C490;
    const double C5461 = C5432 + C5433;
    const double C5833 = C5818 + C5819;
    const double C10965 = C10940 + C10941;
    const double C11351 = C11333 + C11334;
    const double C33532 = C33507 + C33508;
    const double C33918 = C33900 + C33901;
    const double C661 = C650 + C651;
    const double C5997 = C5988 + C5989;
    const double C11526 = C11512 + C11513;
    const double C34093 = C34079 + C34080;
    const double C2964 = C2952 + C2953;
    const double C14592 = C14586 + C14587;
    const double C22497 = C22488 + C22489;
    const double C36829 = C36810 + C36811;
    const double C3283 = C3264 + C3265;
    const double C14440 = C14420 + C14421;
    const double C14818 = C14800 + C14801;
    const double C22379 = C22368 + C22369;
    const double C22679 = C22664 + C22665;
    const double C36513 = C36504 + C36505;
    const double C37138 = C37120 + C37121;
    const double C3656 = C3645 + C3646;
    const double C14814 = C14792 + C14793;
    const double C15234 = C15228 + C15229;
    const double C22073 = C22066 + C22067;
    const double C22674 = C22654 + C22655;
    const double C22993 = C22984 + C22985;
    const double C37132 = C37108 + C37109;
    const double C37460 = C37446 + C37447;
    const double C50104 = -C50103;
    const double C50115 = C50113 / C50079;
    const double C50459 = C50450 / C50079;
    const double C2597 = C51318 * C756;
    const double C14435 = C51463 * C756;
    const double C36821 = C33488 * C756;
    const double C2776 = C51318 * C885;
    const double C5991 = C5412 * C885;
    const double C11515 = C51382 * C885;
    const double C14809 = C51463 * C885;
    const double C34082 = C51382 * C885;
    const double C38055 = C33488 * C885;
    const double C45051 = C51498 * C885;
    const double C3468 = C51318 * C1159;
    const double C5619 = C5413 * C1159;
    const double C7179 = C5412 * C1159;
    const double C12683 = C51382 * C1159;
    const double C15023 = C51463 * C1159;
    const double C35250 = C51382 * C1159;
    const double C42073 = C33488 * C1159;
    const double C44679 = C44473 * C1159;
    const double C46207 = C51498 * C1159;
    const double C2960 = C51318 * C2946;
    const double C50311 = -C50310;
    const double C50519 = C50511 / C50079;
    const double C50689 = C50687 / C50079;
    const double C468 = (C50070 * (3 * C50194 + C50075 * C50209) +
                         (3 * C50193 + C50075 * C50211) * ae) /
                        C50003;
    const double C870 =
        (C50070 * C50164 * C50209 + C50164 * C50211 * ae) / C50003;
    const double C1003 =
        (2 * C50187 + C50075 * C50194 +
         C50070 * (C50070 * C50209 + C50211 * ae) + C50070 * C50211 * ae) /
        C50003;
    const double C124 = 4 * (2 * C50186 + C50075 * C50193) +
                        C50075 * (3 * C50193 + C50075 * C50211);
    const double C298 = C50164 * (3 * C50193 + C50075 * C50211);
    const double C458 = C50070 * (3 * C50193 + C50075 * C50211);
    const double C630 = 2 * C50186 + C50075 * C50193 + C50211 * C50174;
    const double C742 =
        2 * C50164 * C50211 + C50164 * (C50211 + C50234 * C50174);
    const double C859 = C50070 * C50164 * C50211;
    const double C863 = C50070 * (C50211 + C50234 * C50174);
    const double C995 = 2 * C50186 + C50075 * C50193 + C50211 * C50073;
    const double C1239 =
        2 * C50070 * C50211 + C50070 * (C50211 + C50234 * C50073);
    const double C5635 = C5413 * C1154;
    const double C9100 = C51318 * C1154;
    const double C12687 = C51382 * C1154;
    const double C35254 = C51382 * C1154;
    const double C44695 = C44473 * C1154;
    const double C5640 = C5416 * C1155;
    const double C9101 = C117 * C1155;
    const double C12690 = C10924 * C1155;
    const double C35257 = C33491 * C1155;
    const double C44700 = C44476 * C1155;
    const double C5634 = C5416 * C1148;
    const double C9099 = C117 * C1148;
    const double C12686 = C10924 * C1148;
    const double C35253 = C33491 * C1148;
    const double C44694 = C44476 * C1148;
    const double C1244 = (2 * (C50070 * C50194 + C50193 * ae) +
                          C50070 * (C50194 + C50070 * C50286 + C50282 * ae) +
                          (C50193 + C50205 * C50073) * ae) /
                         C50003;
    const double C1245 =
        (-2 * (C50070 * C50192 + C50193 * ce)) / C49932 -
        (C50070 * (C50070 * C50285 + C50192 + C50282 * ce)) / C49932 -
        ((C50193 + C50205 * C50073) * ce) / C49932;
    const double C3274 = C51318 * C3243;
    const double C14433 = C51382 * C3243;
    const double C36819 = C51382 * C3243;
    const double C3277 = C117 * C3244;
    const double C14436 = C10924 * C3244;
    const double C36822 = C33491 * C3244;
    const double C3474 = C51318 * C3453;
    const double C5987 = C5413 * C3453;
    const double C14807 = C51382 * C3453;
    const double C38053 = C51382 * C3453;
    const double C45047 = C44473 * C3453;
    const double C3475 = C117 * C3454;
    const double C5992 = C5416 * C3454;
    const double C14810 = C10924 * C3454;
    const double C38056 = C33491 * C3454;
    const double C45052 = C44476 * C3454;
    const double C2957 = C117 * C2937;
    const double C3273 = C117 * C3238;
    const double C14432 = C10924 * C3238;
    const double C36818 = C33491 * C3238;
    const double C3473 = C117 * C3449;
    const double C5986 = C5416 * C3449;
    const double C14806 = C10924 * C3449;
    const double C38052 = C33491 * C3449;
    const double C45046 = C44476 * C3449;
    const double C3766 = (2 * (C50070 * C50254 + C50253 * ae) +
                          C50070 * (C50254 + C50070 * C50401 + C50397 * ae) +
                          (C50253 + C50363 * C50073) * ae) /
                         C50003;
    const double C3773 =
        2 * ((-(C50254 * ce) / C49932) / C50003 - (ae * C50252) / C50079 -
             (C50070 * C50394) / C50079) -
        (ae * (C50070 * C50400 + C50252 + C50397 * ce)) / C50079 -
        ((C50254 + C50070 * C50401 + C50397 * ae) * ce) / C50079 +
        C50070 * ((-(ae * C50400) / C49932) / C50003 - C50394 / C50079 -
                  (C50401 * ce) / C50079 +
                  C50070 * ((-(C50365 * ce) / C49932) / C50003 -
                            (ae * C50361) / C50079 -
                            (C50070 * C50164 * C50301) / C50079));
    const double C3767 =
        (-2 * (C50070 * C50252 + C50253 * ce)) / C49932 -
        (C50070 * (C50070 * C50400 + C50252 + C50397 * ce)) / C49932 -
        ((C50253 + C50363 * C50073) * ce) / C49932;
    const double C50470 = C50200 + C50467;
    const double C50636 = C50622 / C50079;
    const double C6406 = C5416 * C6390;
    const double C45454 = C44476 * C6390;
    const double C50469 = C50466 + C50196;
    const double C50640 = C50626 / C49932;
    const double C50635 = C50621 / C49932;
    const double C3245 = (C50070 * (3 * C50324 + C50164 * C50358) +
                          (3 * C50323 + C50164 * C50357) * ae) /
                         C50003;
    const double C3632 =
        (2 * C50250 + C50164 * C50324 +
         C50070 * (C50070 * C50358 + C50357 * ae) + C50070 * C50357 * ae) /
        C50003;
    const double C3072 = 4 * (2 * C50249 + C50164 * C50323) +
                         C50164 * (3 * C50323 + C50164 * C50357);
    const double C3239 = C50070 * (3 * C50323 + C50164 * C50357);
    const double C3630 = 2 * C50249 + C50164 * C50323 + C50357 * C50073;
    const double C20814 =
        2 * C50070 * C50357 + C50070 * (C50357 + C50716 * C50073);
    const double C3768 = (2 * (C50070 * C50324 + C50323 * ae) +
                          C50070 * (C50324 + C50070 * C50409 + C50405 * ae) +
                          (C50323 + C50349 * C50073) * ae) /
                         C50003;
    const double C3769 =
        (-2 * (C50070 * C50322 + C50323 * ce)) / C49932 -
        (C50070 * (C50070 * C50408 + C50322 + C50405 * ce)) / C49932 -
        ((C50323 + C50349 * C50073) * ce) / C49932;
    const double C50530 = C50344 + C50527;
    const double C50775 = C50764 / C50079;
    const double C22982 = C5416 * C6565;
    const double C48354 = C44476 * C6565;
    const double C50529 = C50526 + C50340;
    const double C50779 = C50768 / C49932;
    const double C50774 = C50762 / C49932;
    const double C50608 = C50604 + C50591;
    const double C6671 = 4 * (2 * C50266 + C50070 * C50434) +
                         C50070 * (3 * C50434 + C50070 * C50603);
    const double C50607 = C50601 + C50588;
    const double C50856 = -C50843;
    const double C175 = C162 + C163;
    const double C10970 = C10950 + C10951;
    const double C33537 = C33517 + C33518;
    const double C336 = C321 + C322;
    const double C11162 = C11146 + C11147;
    const double C33729 = C33713 + C33714;
    const double C509 = C493 + C494;
    const double C5467 = C5444 + C5445;
    const double C10968 = C10946 + C10947;
    const double C11352 = C11335 + C11336;
    const double C33535 = C33513 + C33514;
    const double C33919 = C33902 + C33903;
    const double C662 = C652 + C653;
    const double C11528 = C11516 + C11517;
    const double C34095 = C34083 + C34084;
    const double C2615 = C2604 + C2605;
    const double C1613 = C1599 + C1600;
    const double C5649 = C5632 + C5633;
    const double C11156 = C11134 + C11135;
    const double C12696 = C12684 + C12685;
    const double C33723 = C33701 + C33702;
    const double C35263 = C35251 + C35252;
    const double C2785 = C2777 + C2778;
    const double C11529 = C11518 + C11519;
    const double C34096 = C34085 + C34086;
    const double C1039 = C1025 + C1026;
    const double C5463 = C5436 + C5437;
    const double C5831 = C5814 + C5815;
    const double C11348 = C11327 + C11328;
    const double C11942 = C11930 + C11931;
    const double C33915 = C33894 + C33895;
    const double C34509 = C34497 + C34498;
    const double C3477 = C3465 + C3466;
    const double C5645 = C5624 + C5625;
    const double C7183 = C7172 + C7173;
    const double C12693 = C12678 + C12679;
    const double C15026 = C15018 + C15019;
    const double C35260 = C35245 + C35246;
    const double C42076 = C42068 + C42069;
    const double C5801 = C5413 * C1242;
    const double C6405 = C5412 * C1242;
    const double C11925 = C51382 * C1242;
    const double C34492 = C51382 * C1242;
    const double C44861 = C44473 * C1242;
    const double C45453 = C51498 * C1242;
    const double C50468 = C50465 / C50003;
    const double C2622 = C2614 * C118;
    const double C3276 = C2614 * C452;
    const double C2787 = C2783 * C453;
    const double C3471 = C2783 * C990;
    const double C4424 = C2783 * C1723;
    const double C14428 = C11524 + C11525;
    const double C14419 = C11525 + C11524;
    const double C3087 = C3082 + C3083;
    const double C31349 = C31339 + C31340;
    const double C36952 = C36942 + C36943;
    const double C3285 = C3267 + C3268;
    const double C14591 = C14584 + C14585;
    const double C22495 = C22484 + C22485;
    const double C31516 = C31505 + C31506;
    const double C36830 = C36812 + C36813;
    const double C37139 = C37122 + C37123;
    const double C3657 = C3651 + C3652;
    const double C14817 = C14798 + C14799;
    const double C22381 = C22372 + C22373;
    const double C22677 = C22660 + C22661;
    const double C31823 = C31815 + C31816;
    const double C37135 = C37114 + C37115;
    const double C37462 = C37450 + C37451;
    const double C15227 = C51382 * C3764;
    const double C22647 = C5413 * C3764;
    const double C22981 = C5412 * C3764;
    const double C37445 = C51382 * C3764;
    const double C48023 = C44473 * C3764;
    const double C48353 = C51498 * C3764;
    const double C50525 = C50518 / C50003;
    const double C50445 = C50442 + C50436;
    const double C50606 = C50600 - C50584;
    const double C174 = C160 + C161;
    const double C10972 = C10954 + C10955;
    const double C33539 = C33521 + C33522;
    const double C5807 = C5413 * C1249;
    const double C6411 = C5412 * C1249;
    const double C11929 = C51382 * C1249;
    const double C34496 = C51382 * C1249;
    const double C44867 = C44473 * C1249;
    const double C45459 = C51498 * C1249;
    const double C5806 = C5416 * C1243;
    const double C6410 = C5415 * C1243;
    const double C11928 = C10924 * C1243;
    const double C34495 = C33491 * C1243;
    const double C44866 = C44476 * C1243;
    const double C15231 = C51382 * C3772;
    const double C22653 = C5413 * C3772;
    const double C22987 = C5412 * C3772;
    const double C37449 = C51382 * C3772;
    const double C48029 = C44473 * C3772;
    const double C48359 = C51498 * C3772;
    const double C15230 = C10924 * C3765;
    const double C22652 = C5416 * C3765;
    const double C22986 = C5415 * C3765;
    const double C37448 = C33491 * C3765;
    const double C48028 = C44476 * C3765;
    const double C50444 = C50441 + C50433;
    const double C50592 = -C50581;
    const double C50121 = -C50120;
    const double C50304 = C50303 / C49932;
    const double C50543 = C50070 * C50537;
    const double C50639 = C50625 / C50079;
    const double C50691 = -C50690;
    const double C50788 = C50778 / C50079;
    const double C50243 = C50075 * C50241;
    const double C50262 = C50164 * C50241;
    const double C50291 = C50070 * C50241;
    const double C747 =
        (2 * C50164 * C50209 + C50164 * (C50209 + C50241 * C50174)) / C50003;
    const double C878 = (C50070 * (C50209 + C50241 * C50174) +
                         (C50211 + C50234 * C50174) * ae) /
                        C50003;
    const double C2944 = (3 * (C50194 + C50157 * C50174) +
                          C50164 * (2 * C50258 + C50164 * C50338)) /
                         C50003;
    const double C3455 =
        (C50194 + C50157 * C50174 + C50070 * (C50070 * C50338 + C50337 * ae) +
         C50070 * C50337 * ae) /
        C50003;
    const double C4263 = (C50070 * (2 * C50258 + C50164 * C50338) +
                          (2 * C50257 + C50164 * C50337) * ae) /
                         C50003;
    const double C50494 = C50070 * C50490;
    const double C50685 = C50682 + C50683;
    const double C50382 = C50371 + C50379;
    const double C50417 = C50414 + C50415;
    const double C50559 = C50070 * C50555;
    const double C50658 = C50220 + C50651;
    const double C50720 = C50164 * C50717;
    const double C50729 = C50070 * C50717;
    const double C50753 = C50070 * C50749;
    const double C50806 = C50508 + C50799;
    const double C50875 = C50869 + C50854;
    const double C50242 = C50229 - C50239;
    const double C2943 =
        (-3 * (C50156 * C50174 + C50192)) / C49932 +
        C50164 * ((-2 * C50256) / C49932 - (C50164 * C50336) / C49932);
    const double C3456 = -(C50070 * (C50070 * C50336 + C50337 * ce) +
                           C50156 * C50174 + C50192 + C50070 * C50337 * ce) /
                         C49932;
    const double C4264 =
        C50070 * ((-2 * C50256) / C49932 - (C50164 * C50336) / C49932) -
        ((2 * C50257 + C50164 * C50337) * ce) / C49932;
    const double C50493 = C50070 * C50487;
    const double C50684 = C50679 + C50680;
    const double C50380 = C50377 / C49932;
    const double C50416 = C50411 + C50412;
    const double C50558 = C50070 * C50552;
    const double C50655 = C50648 + C50214;
    const double C50718 = C50708 - C50715;
    const double C50752 = C50070 * C50746;
    const double C50803 = C50796 + C50506;
    const double C50872 = C50866 + C50851;
    const double C50446 = C50443 - C50431;
    const double C50240 = C50216 + C50237;
    const double C1149 = C50164 * C50211 + C50261 * C50073;
    const double C50293 = C50289 / C49932;
    const double C3071 = 4 * (2 * C50253 + C50164 * C50330) +
                         C50164 * (3 * C50330 + C50164 * C50381);
    const double C3240 = C50070 * (3 * C50330 + C50164 * C50381);
    const double C3631 = 2 * C50253 + C50164 * C50330 + C50381 * C50073;
    const double C6672 = 4 * (2 * C50274 + C50070 * C50462) +
                         C50070 * (3 * C50462 + C50070 * C50657);
    const double C50722 = C50701 + C50719;
    const double C50731 = C50727 / C49932;
    const double C23093 = 4 * (2 * C50388 + C50070 * C50522) +
                          C50070 * (3 * C50522 + C50070 * C50805);
    const double C50881 = C50836 + C50874;
    const double C50880 = C50873 / C49932;
    const double C165 = C51318 * C136;
    const double C332 = C51318 * C308;
    const double C657 = C51318 * C638;
    const double C50495 = C50492 / C50003;
    const double C50557 = C50550 / C50003;
    const double C50660 = C50654 - C50638;
    const double C20412 = C51318 * C3076;
    const double C50754 = C50751 / C50003;
    const double C50802 = C50795 - C50777;
    const double C50878 = C50871 - C50847;
    const double C137 =
        4 * ((-2 * C50185) / C49932 - (C50075 * C50192) / C49932) +
        C50075 * ((-3 * C50192) / C49932 + C50075 * C50210);
    const double C309 = C50164 * ((-3 * C50192) / C49932 + C50075 * C50210);
    const double C469 = C50070 * ((-3 * C50192) / C49932 + C50075 * C50210) -
                        ((3 * C50193 + C50075 * C50211) * ce) / C49932;
    const double C639 =
        (-2 * C50185) / C49932 - (C50075 * C50192) / C49932 + C50210 * C50174;
    const double C871 =
        C50070 * C50164 * C50210 - (C50164 * C50211 * ce) / C49932;
    const double C1004 = (-2 * C50185) / C49932 - (C50075 * C50192) / C49932 +
                         C50070 * (C50070 * C50210 - (C50211 * ce) / C49932) -
                         (C50070 * C50211 * ce) / C49932;
    const double C3075 =
        4 * ((-2 * C50248) / C49932 - (C50164 * C50322) / C49932) +
        C50164 * ((-3 * C50322) / C49932 + C50164 * C50359);
    const double C3246 = C50070 * ((-3 * C50322) / C49932 + C50164 * C50359) -
                         ((3 * C50323 + C50164 * C50357) * ce) / C49932;
    const double C3633 = (-2 * C50248) / C49932 - (C50164 * C50322) / C49932 +
                         C50070 * (C50070 * C50359 - (C50357 * ce) / C49932) -
                         (C50070 * C50357 * ce) / C49932;
    const double C107 = (C51490 * C51158) / C50003 + (C51434 - C51473) / C50028;
    const double C108 =
        (C51491 * C51158) / C50003 + (2 * C51168 + C51490) / C50028;
    const double C109 = (C51158 * C51168) / C50007 + C51491 / C50028;
    const double C113 = (C51439 - C51475) / C49940 - (C51492 * C51182) / C49932;
    const double C114 =
        (2 * C51191 + C51492) / C49940 - (C51477 * C51182) / C49932;
    const double C115 = C51477 / C49940 - C51194 / C49961;
    const double C737 = (C51446 - C51478) / C49940 - (C51493 * C51230) / C49932;
    const double C738 =
        (2 * C51234 + C51493) / C49940 - (C51480 * C51230) / C49932;
    const double C739 = C51480 / C49940 - C51237 / C49961;
    const double C20035 =
        (C51495 * C51351) / C50003 + (C51462 - C51484) / C50028;
    const double C20036 =
        (C51496 * C51351) / C50003 + (2 * C51356 + C51495) / C50028;
    const double C20037 = (C51351 * C51356) / C50007 + C51496 / C50028;
    const double C49972 = C49968 * ce;
    const double C1722 = (-C49941 / C49932) / C49940 - (C49968 * de) / C49932;
    const double C44523 = C44496 + C44497;
    const double C44516 = C44482 + C44483;
    const double C44705 = C44684 + C44685;
    const double C47449 = C47442 + C47443;
    const double C47446 = C47436 + C47437;
    const double C47757 = C47748 + C47749;
    const double C50044 = C50042 * ae;
    const double C10978 = C10974 * C118;
    const double C11325 = C10974 * C452;
    const double C31235 = C31232 * C118;
    const double C31501 = C31232 * C452;
    const double C33541 = C33529 + C33530;
    const double C41145 = C33727 + C33728;
    const double C41142 = C33728 + C33727;
    const double C36825 = C34092 + C34091;
    const double C41545 = C34091 + C34092;
    const double C36806 = C36510 + C36511;
    const double C183 = C173 * C51248;
    const double C492 = C173 * C51448;
    const double C1030 = C173 * C986;
    const double C1734 = C173 * C1720;
    const double C2006 = C173 * C51494;
    const double C347 = C339 * C51248;
    const double C1595 = C339 * C51448;
    const double C1878 = C339 * C1720;
    const double C3462 = C339 * C986;
    const double C4795 = C339 * C51494;
    const double C514 = C504 * C51260;
    const double C1016 = C504 * C987;
    const double C1728 = C504 * C51260;
    const double C1996 = C504 * C51483;
    const double C2620 = C2612 * C51248;
    const double C3261 = C2612 * C51448;
    const double C3648 = C2612 * C986;
    const double C4630 = C2612 * C1720;
    const double C5309 = C2612 * C51494;
    const double C3290 = C3280 * C51260;
    const double C3642 = C3280 * C987;
    const double C4627 = C3280 * C51260;
    const double C5305 = C3280 * C51483;
    const double C14024 = C14014 * C118;
    const double C16018 = C14014 * C452;
    const double C14021 = C14011 * C118;
    const double C16012 = C14011 * C452;
    const double C521 = C505 - C515;
    const double C3088 = C3084 + C3085;
    const double C31351 = C31343 + C31344;
    const double C36954 = C36946 + C36947;
    const double C1612 = C1597 + C1598;
    const double C5643 = C5620 + C5621;
    const double C7185 = C7176 + C7177;
    const double C11158 = C11138 + C11139;
    const double C12694 = C12680 + C12681;
    const double C33725 = C33705 + C33706;
    const double C35261 = C35247 + C35248;
    const double C1038 = C1019 + C1020;
    const double C5459 = C5428 + C5429;
    const double C5828 = C5808 + C5809;
    const double C6417 = C6408 + C6409;
    const double C11345 = C11321 + C11322;
    const double C11940 = C11926 + C11927;
    const double C33912 = C33888 + C33889;
    const double C34507 = C34493 + C34494;
    const double C44519 = C44488 + C44489;
    const double C345 = C337 * C51248;
    const double C1601 = C337 * C51448;
    const double C1882 = C337 * C1720;
    const double C9096 = C337 * C986;
    const double C10333 = C337 * C51494;
    const double C516 = C507 * C51260;
    const double C1024 = C507 * C987;
    const double C1732 = C507 * C51260;
    const double C2002 = C507 * C51483;
    const double C10975 = C10964 + C10965;
    const double C33542 = C33531 + C33532;
    const double C667 = C661 * C51248;
    const double C2772 = C661 * C51448;
    const double C3470 = C661 * C986;
    const double C4423 = C661 * C1720;
    const double C4801 = C661 * C51494;
    const double C2970 = C2964 * C51248;
    const double C3269 = C2964 * C51448;
    const double C5149 = C2964 * C1720;
    const double C20738 = C2964 * C986;
    const double C21807 = C2964 * C51494;
    const double C3292 = C3283 * C51260;
    const double C3650 = C3283 * C987;
    const double C4632 = C3283 * C51260;
    const double C5311 = C3283 * C51483;
    const double C31233 = C14441 + C14440;
    const double C36807 = C36512 + C36513;
    const double C3660 = C3656 * C988;
    const double C5307 = C3656 * C1988;
    const double C50105 = C50104 / C50003;
    const double C2613 = C2596 + C2597;
    const double C14448 = C14434 + C14435;
    const double C36834 = C36820 + C36821;
    const double C2784 = C2775 + C2776;
    const double C5998 = C5990 + C5991;
    const double C11527 = C11514 + C11515;
    const double C14822 = C14808 + C14809;
    const double C34094 = C34081 + C34082;
    const double C38060 = C38054 + C38055;
    const double C3478 = C3467 + C3468;
    const double C5642 = C5618 + C5619;
    const double C7186 = C7178 + C7179;
    const double C12695 = C12682 + C12683;
    const double C15028 = C15022 + C15023;
    const double C35262 = C35249 + C35250;
    const double C42078 = C42072 + C42073;
    const double C44702 = C44678 + C44679;
    const double C2967 = C2959 + C2960;
    const double C50312 = C50311 / C50003;
    const double C498 = C51318 * C468;
    const double C10953 = C51382 * C468;
    const double C33520 = C51382 * C468;
    const double C1606 = C51318 * C870;
    const double C11149 = C51382 * C870;
    const double C33716 = C51382 * C870;
    const double C1034 = C51318 * C1003;
    const double C5447 = C5413 * C1003;
    const double C11338 = C51382 * C1003;
    const double C33905 = C51382 * C1003;
    const double C44507 = C44473 * C1003;
    const double C164 = C117 * C124;
    const double C331 = C117 * C298;
    const double C497 = C117 * C458;
    const double C10952 = C10924 * C458;
    const double C33519 = C33491 * C458;
    const double C656 = C117 * C630;
    const double C1605 = C117 * C859;
    const double C11148 = C10924 * C859;
    const double C33715 = C33491 * C859;
    const double C1033 = C117 * C995;
    const double C5446 = C5416 * C995;
    const double C11337 = C10924 * C995;
    const double C33904 = C33491 * C995;
    const double C44506 = C44476 * C995;
    const double C5650 = C5634 + C5635;
    const double C9103 = C9099 + C9100;
    const double C12697 = C12686 + C12687;
    const double C35264 = C35253 + C35254;
    const double C44710 = C44694 + C44695;
    const double C5817 = C5413 * C1244;
    const double C11933 = C51382 * C1244;
    const double C34500 = C51382 * C1244;
    const double C44877 = C44473 * C1244;
    const double C5822 = C5416 * C1245;
    const double C11936 = C10924 * C1245;
    const double C34503 = C33491 * C1245;
    const double C44882 = C44476 * C1245;
    const double C2966 = C2957 + C2958;
    const double C3287 = C3273 + C3274;
    const double C14447 = C14432 + C14433;
    const double C36833 = C36818 + C36819;
    const double C3479 = C3473 + C3474;
    const double C5996 = C5986 + C5987;
    const double C14821 = C14806 + C14807;
    const double C38059 = C38052 + C38053;
    const double C45056 = C45046 + C45047;
    const double C7175 = C5413 * C3766;
    const double C15021 = C51382 * C3766;
    const double C42071 = C51382 * C3766;
    const double C46203 = C44473 * C3766;
    const double C7181 = C5413 * C3773;
    const double C15025 = C51382 * C3773;
    const double C42075 = C51382 * C3773;
    const double C46209 = C44473 * C3773;
    const double C7180 = C5416 * C3767;
    const double C15024 = C10924 * C3767;
    const double C42074 = C33491 * C3767;
    const double C46208 = C44476 * C3767;
    const double C50473 = C50470 + C50464;
    const double C50472 = C50469 + C50461;
    const double C50646 = -C50635;
    const double C20525 = C51318 * C3245;
    const double C31342 = C51382 * C3245;
    const double C36945 = C51382 * C3245;
    const double C20742 = C51318 * C3632;
    const double C22487 = C5413 * C3632;
    const double C31508 = C51382 * C3632;
    const double C37125 = C51382 * C3632;
    const double C47863 = C44473 * C3632;
    const double C20411 = C117 * C3072;
    const double C20524 = C117 * C3239;
    const double C31341 = C10924 * C3239;
    const double C36944 = C33491 * C3239;
    const double C20741 = C117 * C3630;
    const double C22486 = C5416 * C3630;
    const double C31507 = C10924 * C3630;
    const double C37124 = C33491 * C3630;
    const double C47862 = C44476 * C3630;
    const double C22663 = C5413 * C3768;
    const double C31818 = C51382 * C3768;
    const double C37453 = C51382 * C3768;
    const double C48039 = C44473 * C3768;
    const double C22668 = C5416 * C3769;
    const double C31821 = C10924 * C3769;
    const double C37456 = C33491 * C3769;
    const double C48044 = C44476 * C3769;
    const double C50533 = C50530 + C50524;
    const double C50532 = C50529 + C50521;
    const double C50786 = -C50774;
    const double C50612 = C50070 * C50608;
    const double C50837 = 3 * C50608;
    const double C50823 = C50608 * ce;
    const double C50611 = C50070 * C50607;
    const double C50829 = -3 * C50607;
    const double C50822 = ae * C50607;
    const double C50864 = C50856 / C50003;
    const double C185 = C175 * C118;
    const double C500 = C175 * C452;
    const double C344 = C336 * C118;
    const double C1608 = C336 * C452;
    const double C517 = C509 * C453;
    const double C1031 = C509 * C990;
    const double C1735 = C509 * C1723;
    const double C10977 = C10968 + C10969;
    const double C33544 = C33535 + C33536;
    const double C668 = C662 * C118;
    const double C2780 = C662 * C452;
    const double C2623 = C2615 * C118;
    const double C1619 = C1613 * C453;
    const double C1881 = C1613 * C1723;
    const double C9097 = C1613 * C990;
    const double C11167 = C11156 + C11157;
    const double C14015 = C11157 + C11156;
    const double C33734 = C33723 + C33724;
    const double C41146 = C33724 + C33723;
    const double C2789 = C2785 * C453;
    const double C4426 = C2785 * C1723;
    const double C1045 = C1039 * C991;
    const double C2003 = C1039 * C1991;
    const double C11356 = C11348 + C11349;
    const double C33923 = C33915 + C33916;
    const double C3481 = C3477 * C991;
    const double C4798 = C3477 * C1991;
    const double C16016 = C12692 + C12693;
    const double C16014 = C12693 + C12692;
    const double C43054 = C35259 + C35260;
    const double C43052 = C35260 + C35259;
    const double C5824 = C5800 + C5801;
    const double C6415 = C6404 + C6405;
    const double C11939 = C11924 + C11925;
    const double C34506 = C34491 + C34492;
    const double C44884 = C44860 + C44861;
    const double C50471 = C50468 - C50458;
    const double C14444 = C14428 * C118;
    const double C14439 = C14419 * C118;
    const double C3090 = C3087 * C118;
    const double C20527 = C3087 * C452;
    const double C3294 = C3285 * C453;
    const double C5148 = C3285 * C1723;
    const double C20739 = C3285 * C990;
    const double C31338 = C14591 + C14590;
    const double C36941 = C36830 + C36831;
    const double C3661 = C3657 * C991;
    const double C5312 = C3657 * C1991;
    const double C31503 = C14817 + C14816;
    const double C37143 = C37135 + C37136;
    const double C15233 = C15226 + C15227;
    const double C22670 = C22646 + C22647;
    const double C22991 = C22980 + C22981;
    const double C37459 = C37444 + C37445;
    const double C48046 = C48022 + C48023;
    const double C50528 = C50525 - C50510;
    const double C6392 =
        (3 * (C50183 + C50070 * C50270 + C50266 * ae) +
         C50070 * (2 * C50270 + C50070 * C50445 + C50434 * ae) +
         (2 * C50266 + C50070 * C50434) * ae) /
        C50003;
    const double C50610 = C50606 - C50585;
    const double C184 = C174 * C51248;
    const double C499 = C174 * C51448;
    const double C1738 = C174 * C1720;
    const double C5827 = C5806 + C5807;
    const double C6418 = C6410 + C6411;
    const double C11941 = C11928 + C11929;
    const double C34508 = C34495 + C34496;
    const double C44887 = C44866 + C44867;
    const double C15235 = C15230 + C15231;
    const double C22673 = C22652 + C22653;
    const double C22994 = C22986 + C22987;
    const double C37461 = C37448 + C37449;
    const double C48049 = C48028 + C48029;
    const double C6393 =
        (-3 * (C50070 * C50269 + C50182 + C50266 * ce)) / C49932 +
        C50070 * ((-2 * C50269) / C49932 - (C50070 * C50444) / C49932 -
                  (C50434 * ce) / C49932) -
        ((2 * C50266 + C50070 * C50434) * ce) / C49932;
    const double C50599 = C50592 / C50003;
    const double C50122 = C50121 / C50003;
    const double C50305 = -C50304;
    const double C50551 = C50543 / C50079;
    const double C50692 = C50691 / C50003;
    const double C50245 = C50219 + C50243;
    const double C1156 =
        (C50164 * C50209 + C50070 * (C50070 * C50262 + C50261 * ae) +
         C50070 * C50261 * ae) /
        C50003;
    const double C50294 = C50291 + C50292;
    const double C50497 = C50157 + C50494;
    const double C7166 = (2 * (C50070 * C50258 + C50257 * ae) +
                          C50070 * (C50258 + C50070 * C50685 + C50681 * ae) +
                          (C50257 + C50677 * C50073) * ae) /
                         C50003;
    const double C3074 = (4 * (2 * C50254 + C50164 * C50331) +
                          C50164 * (3 * C50331 + C50164 * C50382)) /
                         C50003;
    const double C3247 = (C50070 * (3 * C50331 + C50164 * C50382) +
                          (3 * C50330 + C50164 * C50381) * ae) /
                         C50003;
    const double C3634 =
        (2 * C50254 + C50164 * C50331 +
         C50070 * (C50070 * C50382 + C50381 * ae) + C50070 * C50381 * ae) /
        C50003;
    const double C3770 = (2 * (C50070 * C50331 + C50330 * ae) +
                          C50070 * (C50331 + C50070 * C50417 + C50413 * ae) +
                          (C50330 + C50375 * C50073) * ae) /
                         C50003;
    const double C50562 = C50365 + C50559;
    const double C50662 = C50658 + C50645;
    const double C50723 = C50704 + C50720;
    const double C50732 = C50729 + C50730;
    const double C50756 = C50351 + C50753;
    const double C50810 = C50806 + C50793;
    const double C50882 = C50070 * C50875;
    const double C50244 = C50075 * C50242;
    const double C50260 = C50164 * C50242;
    const double C50288 = C50070 * C50242;
    const double C746 =
        2 * C50164 * C50210 + C50164 * (C50210 + C50242 * C50174);
    const double C879 = C50070 * (C50210 + C50242 * C50174) -
                        ((C50211 + C50234 * C50174) * ce) / C49932;
    const double C50496 = C50493 + C50156;
    const double C7167 =
        (-2 * (C50070 * C50256 + C50257 * ce)) / C49932 -
        (C50070 * (C50070 * C50684 + C50256 + C50681 * ce)) / C49932 -
        ((C50257 + C50677 * C50073) * ce) / C49932;
    const double C50383 = C50373 - C50380;
    const double C3771 =
        (-2 * (C50070 * C50329 + C50330 * ce)) / C49932 -
        (C50070 * (C50070 * C50416 + C50329 + C50413 * ce)) / C49932 -
        ((C50330 + C50375 * C50073) * ce) / C49932;
    const double C50561 = C50558 + C50361;
    const double C50661 = C50655 + C50642;
    const double C50721 = C50164 * C50718;
    const double C50726 = C50070 * C50718;
    const double C50755 = C50752 + C50347;
    const double C50809 = C50803 + C50790;
    const double C50879 = C50070 * C50872;
    const double C6398 =
        3 * ((-(ae * C50269) / C49932) / C50003 - C50083 / C50079 -
             (C50270 * ce) / C50079 + C50070 * C50446) +
        (((-2 * C50269) / C49932 - (C50070 * C50444) / C49932 -
          (C50434 * ce) / C49932) *
         ae) /
            C50003 -
        ((2 * C50270 + C50070 * C50445 + C50434 * ae) * ce) / C50079 +
        C50070 * (2 * C50446 - (ae * C50444) / C50079 - (C50445 * ce) / C50079 +
                  C50070 * ((-(ae * C50432) / C49932) / C50003 - C50097 -
                            (C50435 * ce) / C50079 +
                            C50070 * ((-(C50148 * ce) / C49932) / C50003 -
                                      (ae * C50147) / C50079 -
                                      (C50070 * C50101) / C50079)));
    const double C125 = 5 * (3 * C50193 + C50075 * C50211) +
                        C50075 * (4 * C50211 + C50075 * C50240);
    const double C299 = C50164 * (4 * C50211 + C50075 * C50240);
    const double C459 = C50070 * (4 * C50211 + C50075 * C50240);
    const double C631 = 3 * C50193 + C50075 * C50211 + C50240 * C50174;
    const double C996 = 3 * C50193 + C50075 * C50211 + C50240 * C50073;
    const double C1588 = C50070 * C50164 * C50240;
    const double C20404 = 5 * (3 * C50323 + C50164 * C50357) +
                          C50164 * (4 * C50357 + C50164 * C50722);
    const double C20517 = C50070 * (4 * C50357 + C50164 * C50722);
    const double C20732 = 3 * C50323 + C50164 * C50357 + C50722 * C50073;
    const double C39835 = 5 * (3 * C50434 + C50070 * C50603) +
                          C50070 * (4 * C50603 + C50070 * C50881);
    const double C50498 = C50495 - C50486;
    const double C50560 = C50557 - C50542;
    const double C50664 = C50660 - C50639;
    const double C50757 = C50754 - C50745;
    const double C50808 = C50802 - C50788;
    const double C50883 = C50070 * C50878;
    const double C166 = C117 * C137;
    const double C333 = C117 * C309;
    const double C501 = C117 * C469;
    const double C10956 = C10924 * C469;
    const double C33523 = C33491 * C469;
    const double C658 = C117 * C639;
    const double C1609 = C117 * C871;
    const double C11152 = C10924 * C871;
    const double C33719 = C33491 * C871;
    const double C1035 = C117 * C1004;
    const double C5452 = C5416 * C1004;
    const double C11341 = C10924 * C1004;
    const double C33908 = C33491 * C1004;
    const double C44512 = C44476 * C1004;
    const double C20413 = C117 * C3075;
    const double C20528 = C117 * C3246;
    const double C31345 = C10924 * C3246;
    const double C36948 = C33491 * C3246;
    const double C20743 = C117 * C3633;
    const double C22492 = C5416 * C3633;
    const double C31511 = C10924 * C3633;
    const double C37128 = C33491 * C3633;
    const double C47868 = C44476 * C3633;
    const double C49974 = C49972 / C49932;
    const double C1739 = C175 * C1722;
    const double C1733 = C172 * C1722;
    const double C1729 = C170 * C1722;
    const double C1725 = C168 * C1722;
    const double C1887 = C336 * C1722;
    const double C1883 = C338 * C1722;
    const double C1879 = C340 * C1722;
    const double C4428 = C662 * C1722;
    const double C4422 = C660 * C1722;
    const double C4638 = C2614 * C1722;
    const double C4629 = C2611 * C1722;
    const double C4624 = C2609 * C1722;
    const double C5150 = C2965 * C1722;
    const double C12846 = C10974 * C1722;
    const double C16488 = C14014 * C1722;
    const double C16482 = C14011 * C1722;
    const double C21703 = C3087 * C1722;
    const double C33237 = C31232 * C1722;
    const double C50046 = C50044 / C50003;
    const double C33545 = C33541 * C118;
    const double C33892 = C33541 * C452;
    const double C35413 = C33541 * C1722;
    const double C41151 = C41145 * C118;
    const double C43056 = C41145 * C452;
    const double C43526 = C41145 * C1722;
    const double C41148 = C41142 * C118;
    const double C43050 = C41142 * C452;
    const double C43520 = C41142 * C1722;
    const double C36837 = C36825 * C118;
    const double C41547 = C41545 * C118;
    const double C36826 = C36806 * C118;
    const double C37112 = C36806 * C452;
    const double C38888 = C36806 * C1722;
    const double C191 = C183 + C182;
    const double C189 = C182 + C183;
    const double C508 = C491 + C492;
    const double C2601 = C347 + C348;
    const double C2590 = C348 + C347;
    const double C4268 = C1595 + C1596;
    const double C4267 = C1596 + C1595;
    const double C2949 = C2619 + C2620;
    const double C3281 = C3260 + C3261;
    const double C3091 = C3088 * C51248;
    const double C20526 = C3088 * C51448;
    const double C21702 = C3088 * C1720;
    const double C1618 = C1612 * C51260;
    const double C1880 = C1612 * C51260;
    const double C3464 = C1612 * C987;
    const double C4797 = C1612 * C51483;
    const double C14013 = C11158 + C11159;
    const double C14012 = C11159 + C11158;
    const double C41144 = C33725 + C33726;
    const double C41143 = C33726 + C33725;
    const double C1044 = C1038 * C988;
    const double C1998 = C1038 * C1988;
    const double C352 = C345 + C346;
    const double C2602 = C346 + C345;
    const double C8556 = C1602 + C1601;
    const double C9837 = C1601 + C1602;
    const double C523 = C521 - C516;
    const double C10979 = C10975 * C51248;
    const double C11326 = C10975 * C51448;
    const double C12847 = C10975 * C1720;
    const double C33546 = C33542 * C51248;
    const double C33893 = C33542 * C51448;
    const double C35414 = C33542 * C1720;
    const double C2600 = C667 + C666;
    const double C2595 = C666 + C667;
    const double C3266 = C2771 + C2772;
    const double C4269 = C2772 + C2771;
    const double C3081 = C2970 + C2971;
    const double C20335 = C2971 + C2970;
    const double C20523 = C3270 + C3269;
    const double C31236 = C31233 * C51248;
    const double C31502 = C31233 * C51448;
    const double C33238 = C31233 * C1720;
    const double C36827 = C36807 * C51248;
    const double C37113 = C36807 * C51448;
    const double C38889 = C36807 * C1720;
    const double C50106 = C50105 - C50097;
    const double C2621 = C2613 * C51248;
    const double C3275 = C2613 * C51448;
    const double C4637 = C2613 * C1720;
    const double C2788 = C2784 * C51260;
    const double C3472 = C2784 * C987;
    const double C4425 = C2784 * C51260;
    const double C4803 = C2784 * C51483;
    const double C14429 = C11526 + C11527;
    const double C14418 = C11527 + C11526;
    const double C36824 = C34094 + C34093;
    const double C41546 = C34093 + C34094;
    const double C3482 = C3478 * C988;
    const double C4799 = C3478 * C1988;
    const double C16019 = C12694 + C12695;
    const double C16015 = C12695 + C12694;
    const double C43057 = C35261 + C35262;
    const double C43053 = C35262 + C35261;
    const double C2973 = C2967 * C51248;
    const double C50313 = C50312 - C50097;
    const double C176 = C164 + C165;
    const double C341 = C331 + C332;
    const double C511 = C497 + C498;
    const double C10971 = C10952 + C10953;
    const double C33538 = C33519 + C33520;
    const double C664 = C656 + C657;
    const double C1615 = C1605 + C1606;
    const double C11163 = C11148 + C11149;
    const double C33730 = C33715 + C33716;
    const double C1041 = C1033 + C1034;
    const double C5468 = C5446 + C5447;
    const double C11353 = C11337 + C11338;
    const double C33920 = C33904 + C33905;
    const double C44528 = C44506 + C44507;
    const double C9105 = C9103 * C991;
    const double C10336 = C9103 * C1991;
    const double C5832 = C5816 + C5817;
    const double C11943 = C11932 + C11933;
    const double C34510 = C34499 + C34500;
    const double C44892 = C44876 + C44877;
    const double C2972 = C2966 * C118;
    const double C3296 = C3287 * C453;
    const double C4636 = C3287 * C1723;
    const double C3483 = C3479 * C991;
    const double C4804 = C3479 * C1991;
    const double C7184 = C7174 + C7175;
    const double C15027 = C15020 + C15021;
    const double C42077 = C42070 + C42071;
    const double C46212 = C46202 + C46203;
    const double C7187 = C7180 + C7181;
    const double C15029 = C15024 + C15025;
    const double C42079 = C42074 + C42075;
    const double C46215 = C46208 + C46209;
    const double C6394 =
        (3 * (C50187 + C50070 * C50278 + C50274 * ae) +
         C50070 * (2 * C50278 + C50070 * C50473 + C50462 * ae) +
         (2 * C50274 + C50070 * C50462) * ae) /
        C50003;
    const double C6395 =
        (-3 * (C50070 * C50277 + C50185 + C50274 * ce)) / C49932 +
        C50070 * ((-2 * C50277) / C49932 - (C50070 * C50472) / C49932 -
                  (C50462 * ce) / C49932) -
        ((2 * C50274 + C50070 * C50462) * ce) / C49932;
    const double C50653 = C50646 / C50003;
    const double C20416 = C20411 + C20412;
    const double C20531 = C20524 + C20525;
    const double C31350 = C31341 + C31342;
    const double C36953 = C36944 + C36945;
    const double C20745 = C20741 + C20742;
    const double C22496 = C22486 + C22487;
    const double C31517 = C31507 + C31508;
    const double C37140 = C37124 + C37125;
    const double C47872 = C47862 + C47863;
    const double C22678 = C22662 + C22663;
    const double C31824 = C31817 + C31818;
    const double C37463 = C37452 + C37453;
    const double C48054 = C48038 + C48039;
    const double C6567 =
        (3 * (C50250 + C50070 * C50392 + C50388 * ae) +
         C50070 * (2 * C50392 + C50070 * C50533 + C50522 * ae) +
         (2 * C50388 + C50070 * C50522) * ae) /
        C50003;
    const double C6568 =
        (-3 * (C50070 * C50391 + C50248 + C50388 * ce)) / C49932 +
        C50070 * ((-2 * C50391) / C49932 - (C50070 * C50532) / C49932 -
                  (C50522 * ce) / C49932) -
        ((2 * C50388 + C50070 * C50522) * ce) / C49932;
    const double C50794 = C50786 / C50003;
    const double C50615 = C50578 + C50612;
    const double C50842 = C50823 / C50079;
    const double C50614 = C50611 / C49932;
    const double C50848 = C50829 / C49932;
    const double C50841 = C50822 / C50079;
    const double C50870 = C50864 - C50112;
    const double C10981 = C10977 * C118;
    const double C33548 = C33544 * C118;
    const double C11169 = C11167 * C118;
    const double C14025 = C14015 * C118;
    const double C33736 = C33734 * C118;
    const double C41152 = C41146 * C118;
    const double C11358 = C11356 * C453;
    const double C12848 = C11356 * C1723;
    const double C33925 = C33923 * C453;
    const double C35415 = C33923 * C1723;
    const double C16023 = C16016 * C453;
    const double C16486 = C16016 * C1723;
    const double C16021 = C16014 * C453;
    const double C16484 = C16014 * C1723;
    const double C43061 = C43054 * C453;
    const double C43524 = C43054 * C1723;
    const double C43059 = C43052 * C453;
    const double C43522 = C43052 * C1723;
    const double C50474 = C50471 - C50459;
    const double C31348 = C31338 * C118;
    const double C36951 = C36941 * C118;
    const double C31514 = C31503 * C453;
    const double C33239 = C31503 * C1723;
    const double C37145 = C37143 * C453;
    const double C38890 = C37143 * C1723;
    const double C50531 = C50528 - C50519;
    const double C50613 = C50070 * C50610;
    const double C50821 = 2 * C50610;
    const double C190 = C184 + C185;
    const double C50605 = C50599 - C50097;
    const double C50123 = C50122 - C50112;
    const double C50306 = C50305 / C50003;
    const double C50693 = C50692 - C50112;
    const double C139 = (5 * (3 * C50194 + C50075 * C50209) +
                         C50075 * (4 * C50209 + C50075 * C50245)) /
                        C50003;
    const double C311 = (C50164 * (4 * C50209 + C50075 * C50245)) / C50003;
    const double C470 = (C50070 * (4 * C50209 + C50075 * C50245) +
                         (4 * C50211 + C50075 * C50240) * ae) /
                        C50003;
    const double C641 =
        (3 * C50194 + C50075 * C50209 + C50245 * C50174) / C50003;
    const double C1005 =
        (3 * C50194 + C50075 * C50209 +
         C50070 * (C50070 * C50245 + C50240 * ae) + C50070 * C50240 * ae) /
        C50003;
    const double C1589 =
        (C50070 * C50164 * C50245 + C50164 * C50240 * ae) / C50003;
    const double C1246 = (2 * (C50070 * C50209 + C50211 * ae) +
                          C50070 * (C50209 + C50070 * C50294 + C50290 * ae) +
                          (C50211 + C50234 * C50073) * ae) /
                         C50003;
    const double C50500 = C50497 + C50491;
    const double C50565 = C50562 + C50556;
    const double C50666 = C50070 * C50662;
    const double C20406 = (5 * (3 * C50324 + C50164 * C50358) +
                           C50164 * (4 * C50358 + C50164 * C50723)) /
                          C50003;
    const double C20518 = (C50070 * (4 * C50358 + C50164 * C50723) +
                           (4 * C50357 + C50164 * C50722) * ae) /
                          C50003;
    const double C20733 =
        (3 * C50324 + C50164 * C50358 +
         C50070 * (C50070 * C50723 + C50722 * ae) + C50070 * C50722 * ae) /
        C50003;
    const double C20815 = (2 * (C50070 * C50358 + C50357 * ae) +
                           C50070 * (C50358 + C50070 * C50732 + C50728 * ae) +
                           (C50357 + C50716 * C50073) * ae) /
                          C50003;
    const double C50759 = C50756 + C50750;
    const double C50813 = C50070 * C50810;
    const double C50885 = C50838 + C50882;
    const double C50246 = C50222 + C50244;
    const double C1157 = C50164 * C50210 +
                         C50070 * (C50070 * C50260 - (C50261 * ce) / C49932) -
                         (C50070 * C50261 * ce) / C49932;
    const double C50295 = C50288 - C50293;
    const double C50499 = C50496 + C50488;
    const double C3073 =
        4 * ((-2 * C50252) / C49932 - (C50164 * C50329) / C49932) +
        C50164 * ((-3 * C50329) / C49932 + C50164 * C50383);
    const double C3248 = C50070 * ((-3 * C50329) / C49932 + C50164 * C50383) -
                         ((3 * C50330 + C50164 * C50381) * ce) / C49932;
    const double C3635 = (-2 * C50252) / C49932 - (C50164 * C50329) / C49932 +
                         C50070 * (C50070 * C50383 - (C50381 * ce) / C49932) -
                         (C50070 * C50381 * ce) / C49932;
    const double C50564 = C50561 + C50553;
    const double C50665 = C50070 * C50661;
    const double C50724 = C50707 + C50721;
    const double C50733 = C50726 - C50731;
    const double C50758 = C50755 + C50747;
    const double C50812 = C50070 * C50809;
    const double C50884 = C50879 / C49932;
    const double C50563 = C50560 - C50551;
    const double C50667 = C50070 * C50664;
    const double C50811 = C50070 * C50808;
    const double C49976 = C49974 - C49969;
    const double C1742 = C1733 + C1734;
    const double C1741 = C1729 + C1730;
    const double C9986 = C1883 + C1882;
    const double C10183 = C1882 + C1883;
    const double C4634 = C1878 + C1879;
    const double C4628 = C1879 + C1878;
    const double C4635 = C4423 + C4422;
    const double C4633 = C4422 + C4423;
    const double C5146 = C4629 + C4630;
    const double C21700 = C5150 + C5149;
    const double C50047 = C50046 - C50031;
    const double C522 = C508 - C517;
    const double C4271 = C1617 - C4268;
    const double C4270 = C4267 - C1617;
    const double C2963 = C2949 * C2434;
    const double C20334 = C2949 * C51163;
    const double C25097 = C2949 * C51434;
    const double C3298 = C3281 - C3291;
    const double C20409 = C3091 + C3090;
    const double C14023 = C14013 * C51248;
    const double C16017 = C14013 * C51448;
    const double C16487 = C14013 * C1720;
    const double C14022 = C14012 * C51248;
    const double C16013 = C14012 * C51448;
    const double C16483 = C14012 * C1720;
    const double C41150 = C41144 * C51248;
    const double C43055 = C41144 * C51448;
    const double C43525 = C41144 * C1720;
    const double C41149 = C41143 * C51248;
    const double C43051 = C41143 * C51448;
    const double C43521 = C41143 * C1720;
    const double C8557 = C8556 - C1619;
    const double C9838 = C1619 - C9837;
    const double C10982 = C10978 + C10979;
    const double C11347 = C11325 + C11326;
    const double C12850 = C12846 + C12847;
    const double C33549 = C33545 + C33546;
    const double C33914 = C33892 + C33893;
    const double C35417 = C35413 + C35414;
    const double C2962 = C2600 * C2434;
    const double C20337 = C2600 * C51163;
    const double C25100 = C2600 * C51434;
    const double C2950 = C2595 * C51168;
    const double C25098 = C2595 * C51168;
    const double C3284 = C3266 - C2787;
    const double C4272 = C2787 - C4269;
    const double C3086 = C3081 * C2434;
    const double C20410 = C3081 * C51163;
    const double C25202 = C3081 * C51434;
    const double C20338 = C20335 * C51163;
    const double C20530 = C20523 - C3294;
    const double C31237 = C31235 + C31236;
    const double C31513 = C31501 + C31502;
    const double C33241 = C33237 + C33238;
    const double C36838 = C36826 + C36827;
    const double C37134 = C37112 + C37113;
    const double C38892 = C38888 + C38889;
    const double C145 =
        4 * ((-2 * C50075 * C50092) / C50079 + C50075 * C50106) +
        C50075 *
            (3 * C50106 +
             C50075 * ((-2 * C50075 * C50101) / C50079 +
                       C50075 * ((-((C50095 * C50096 +
                                     C50073 * bs[7] * std::pow(C50069, 7)) *
                                    C50071 * C50088) /
                                  C49932) /
                                     C50003 -
                                 C50101 / C50079)));
    const double C312 =
        (yP - yQ) * ((-2 * C50075 * C50092) / C50079 + C50075 * C50106);
    const double C475 =
        (((-2 * C50075 * C50142) / C49932 -
          (C50075 * (C50087 * C50086 * C50138 * C50088 + C50142)) / C49932) *
         ae) /
            C50003 -
        ((2 * C50075 * C50143 +
          C50075 * (C50143 + C50087 * C50086 * C50137 * C50088)) *
         ce) /
            C50079 +
        C50070 * ((-2 * C50075 * C50092) / C50079 + C50075 * C50106);
    const double C644 = (-(C50092 * C50088) / C49932) / C50003 -
                        C50083 / C50079 + C50106 * std::pow(yP - yQ, 2);
    const double C882 =
        (-(C50164 * (C50143 + C50148 * C50088) * ce) / C49932) / C50003 -
        (ae * C50164 * (C50147 * C50088 + C50142)) / C50079 +
        C50070 * C50164 * C50106;
    const double C1009 = (-(C50092 * C50088) / C49932) / C50003 -
                         C50083 / C50079 -
                         (ae * (C50070 * C50192 + C50193 * ce)) / C50079 -
                         ((C50070 * C50194 + C50193 * ae) * ce) / C50079 +
                         C50070 * ((-(C50194 * ce) / C49932) / C50003 -
                                   (ae * C50192) / C50079 + C50070 * C50106);
    const double C2956 = C2622 + C2621;
    const double C2951 = C2621 + C2622;
    const double C14445 = C14429 * C51248;
    const double C14438 = C14418 * C51248;
    const double C36836 = C36824 * C51248;
    const double C41548 = C41546 * C51248;
    const double C16025 = C16019 * C51260;
    const double C16489 = C16019 * C51260;
    const double C16022 = C16015 * C51260;
    const double C16485 = C16015 * C51260;
    const double C43063 = C43057 * C51260;
    const double C43527 = C43057 * C51260;
    const double C43060 = C43053 * C51260;
    const double C43523 = C43053 * C51260;
    const double C3078 =
        4 * ((-2 * C50164 * C50092) / C50079 + C50164 * C50313) +
        C50164 * (3 * C50313 +
                  C50164 * ((-2 * C50164 * C50101) / C50079 +
                            C50164 * ((-(C50118 * C50174) / C49932) / C50003 -
                                      C50112)));
    const double C3249 =
        (((-2 * C50248) / C49932 -
          (C50164 * (C50147 * C50174 + C50142)) / C49932) *
         ae) /
            C50003 -
        ((2 * C50250 + C50164 * (C50143 + C50148 * C50174)) * ce) / C50079 +
        C50070 * ((-2 * C50164 * C50092) / C50079 + C50164 * C50313);
    const double C3251 =
        (((-3 * (C50147 * C50174 + C50142)) / C49932 +
          C50164 * ((-2 * C50164 * C50147) / C49932 -
                    (C50164 * (C50152 * C50174 + C50147)) / C49932)) *
         ae) /
            C50003 -
        ((3 * (C50143 + C50148 * C50174) +
          C50164 *
              (2 * C50164 * C50148 + C50164 * (C50148 + C50153 * C50174))) *
         ce) /
            C50079 +
        C50070 * (3 * C50313 +
                  C50164 * ((-2 * C50164 * C50101) / C50079 +
                            C50164 * ((-(C50118 * C50174) / C49932) / C50003 -
                                      C50112)));
    const double C3457 = (-(C50092 * C50174) / C49932) / C50003 -
                         C50083 / C50079 -
                         (ae * (C50070 * C50322 + C50323 * ce)) / C50079 -
                         ((C50070 * C50324 + C50323 * ae) * ce) / C50079 +
                         C50070 * ((-(C50324 * ce) / C49932) / C50003 -
                                   (ae * C50322) / C50079 + C50070 * C50313);
    const double C3636 =
        (-2 * C50164 * C50092) / C50079 + C50164 * C50313 +
        ((C50070 * C50359 - (C50357 * ce) / C49932) * ae) / C50003 -
        ((C50070 * C50358 + C50357 * ae) * ce) / C50079 +
        C50070 * ((C50359 * ae) / C50003 - (C50358 * ce) / C50079 +
                  C50070 * ((-2 * C50164 * C50101) / C50079 +
                            C50164 * ((-(C50118 * C50174) / C49932) / C50003 -
                                      C50112)));
    const double C3774 =
        2 * ((-(C50324 * ce) / C49932) / C50003 - (ae * C50322) / C50079 +
             C50070 * C50313) -
        (ae * (C50070 * C50408 + C50322 + C50405 * ce)) / C50079 -
        ((C50324 + C50070 * C50409 + C50405 * ae) * ce) / C50079 +
        C50070 *
            (C50313 - (ae * C50408) / C50079 - (C50409 * ce) / C50079 +
             C50070 *
                 ((-(C50351 * ce) / C49932) / C50003 - (ae * C50347) / C50079 +
                  C50070 * ((-(C50118 * C50174) / C49932) / C50003 - C50112)));
    const double C186 = C176 * C118;
    const double C349 = C341 * C118;
    const double C519 = C511 * C453;
    const double C1737 = C511 * C1723;
    const double C670 = C664 * C118;
    const double C1621 = C1615 * C453;
    const double C1885 = C1615 * C1723;
    const double C1047 = C1041 * C991;
    const double C2009 = C1041 * C1991;
    const double C6407 = C5413 * C6394;
    const double C45455 = C44473 * C6394;
    const double C6412 = C5416 * C6395;
    const double C45460 = C44476 * C6395;
    const double C50659 = C50653 - C50302;
    const double C20418 = C20416 * C118;
    const double C20534 = C20531 * C453;
    const double C21701 = C20531 * C1723;
    const double C20747 = C20745 * C991;
    const double C21810 = C20745 * C1991;
    const double C22983 = C5413 * C6567;
    const double C48355 = C44473 * C6567;
    const double C22988 = C5416 * C6568;
    const double C48360 = C44476 * C6568;
    const double C50801 = C50794 - C50763;
    const double C50618 = C50615 + C50598;
    const double C50617 = C50586 - C50614;
    const double C50877 = C50870 - C50844;
    const double C6399 =
        3 * ((-(ae * C50277) / C49932) / C50003 - C50167 / C50079 -
             (C50278 * ce) / C50079 + C50070 * C50474) +
        (((-2 * C50277) / C49932 - (C50070 * C50472) / C49932 -
          (C50462 * ce) / C49932) *
         ae) /
            C50003 -
        ((2 * C50278 + C50070 * C50473 + C50462 * ae) * ce) / C50079 +
        C50070 * (2 * C50474 - (ae * C50472) / C50079 - (C50473 * ce) / C50079 +
                  C50070 * ((-(ae * C50460) / C49932) / C50003 - C50302 -
                            (C50463 * ce) / C50079 +
                            C50070 * ((-(C50220 * ce) / C49932) / C50003 -
                                      (ae * C50214) / C50079 -
                                      (C50070 * C50301) / C50079)));
    const double C6571 =
        3 * ((-(ae * C50391) / C49932) / C50003 - C50385 / C50079 -
             (C50392 * ce) / C50079 + C50070 * C50531) +
        (((-2 * C50391) / C49932 - (C50070 * C50532) / C49932 -
          (C50522 * ce) / C49932) *
         ae) /
            C50003 -
        ((2 * C50392 + C50070 * C50533 + C50522 * ae) * ce) / C50079 +
        C50070 * (2 * C50531 - (ae * C50532) / C50079 - (C50533 * ce) / C50079 +
                  C50070 * ((-(ae * C50520) / C49932) / C50003 -
                            C50505 / C50079 - (C50523 * ce) / C50079 +
                            C50070 * ((-(C50508 * ce) / C49932) / C50003 -
                                      (ae * C50506) / C50079 -
                                      (C50070 * C50164 * C50118) / C50079)));
    const double C50855 = C50821 - C50841;
    const double C50609 = C50605 - C50582;
    const double C50124 = C50075 * C50123;
    const double C50478 = C50070 * C50123;
    const double C50675 = C50164 * C50123;
    const double C755 =
        2 * C50164 * C50106 + C50164 * (C50106 + C50123 * std::pow(C50164, 2));
    const double C886 =
        (-((C50143 + C50148 * C50088 + C50157 * C50174) * ce) / C49932) /
            C50003 -
        (ae * (C50156 * C50174 + C50147 * C50088 + C50142)) / C50079 +
        C50070 * (C50106 + C50123 * C50174);
    const double C1160 =
        C50164 * C50106 - (ae * (C50070 * C50256 + C50257 * ce)) / C50079 -
        ((C50070 * C50258 + C50257 * ae) * ce) / C50079 +
        C50070 * ((-(C50258 * ce) / C49932) / C50003 - (ae * C50256) / C50079 +
                  C50070 * C50164 * C50123);
    const double C1250 =
        2 * ((-(C50194 * ce) / C49932) / C50003 - (ae * C50192) / C50079 +
             C50070 * C50106) -
        (ae * (C50070 * C50285 + C50192 + C50282 * ce)) / C50079 -
        ((C50194 + C50070 * C50286 + C50282 * ae) * ce) / C50079 +
        C50070 * (C50106 - (ae * C50285) / C50079 - (C50286 * ce) / C50079 +
                  C50070 * ((-(C50157 * ce) / C49932) / C50003 -
                            (ae * C50156) / C50079 + C50070 * C50123));
    const double C2947 =
        3 * (C50106 + C50123 * C50174) +
        C50164 *
            (2 * C50164 * C50123 +
             C50164 *
                 (C50123 +
                  ((-((C50110 * C50111 + C50073 * bs[8] * std::pow(C50066, 8)) *
                      C50071 * C50088) /
                    C49932) /
                       C50003 -
                   C50118 / C50079) *
                      C50174));
    const double C3459 =
        C50106 + C50123 * C50174 -
        (ae * (C50070 * C50336 + C50337 * ce)) / C50079 -
        ((C50070 * C50338 + C50337 * ae) * ce) / C50079 +
        C50070 *
            ((-(C50338 * ce) / C49932) / C50003 - (ae * C50336) / C50079 +
             C50070 *
                 (C50123 +
                  ((-((C50110 * C50111 + C50073 * bs[8] * std::pow(C50066, 8)) *
                      C50071 * C50088) /
                    C49932) /
                       C50003 -
                   C50118 / C50079) *
                      C50174));
    const double C4265 =
        (((-2 * C50256) / C49932 - (C50164 * C50336) / C49932) * ae) / C50003 -
        ((2 * C50258 + C50164 * C50338) * ce) / C50079 +
        C50070 *
            (2 * C50164 * C50123 +
             C50164 *
                 (C50123 +
                  ((-((C50110 * C50111 + C50073 * bs[8] * std::pow(C50066, 8)) *
                      C50071 * C50088) /
                    C49932) /
                       C50003 -
                   C50118 / C50079) *
                      C50174));
    const double C50307 = C50306 - C50302;
    const double C50694 = C50164 * C50693;
    const double C50737 = C50070 * C50693;
    const double C6396 =
        (3 * (C50194 + C50070 * C50286 + C50282 * ae) +
         C50070 * (2 * C50286 + C50070 * C50500 + C50489 * ae) +
         (2 * C50282 + C50070 * C50489) * ae) /
        C50003;
    const double C6569 =
        (3 * (C50254 + C50070 * C50401 + C50397 * ae) +
         C50070 * (2 * C50401 + C50070 * C50565 + C50554 * ae) +
         (2 * C50397 + C50070 * C50554) * ae) /
        C50003;
    const double C50669 = C50632 + C50666;
    const double C22974 =
        (3 * (C50324 + C50070 * C50409 + C50405 * ae) +
         C50070 * (2 * C50409 + C50070 * C50759 + C50748 * ae) +
         (2 * C50405 + C50070 * C50748) * ae) /
        C50003;
    const double C50816 = C50772 + C50813;
    const double C50888 = C50885 + C50862;
    const double C1591 =
        (C50164 * C50246 * ae) / C50003 - (C50164 * C50245 * ce) / C50079 +
        C50070 * C50164 *
            (3 * C50123 +
             C50075 * ((-2 * C50075 * C50118) / C50079 +
                       C50075 * ((-((C50110 * C50111 +
                                     C50073 * bs[8] * std::pow(C50066, 8)) *
                                    C50071 * C50088) /
                                  C49932) /
                                     C50003 -
                                 C50118 / C50079)));
    const double C138 = 5 * ((-3 * C50192) / C49932 + C50075 * C50210) +
                        C50075 * (4 * C50210 + C50075 * C50246);
    const double C310 = C50164 * (4 * C50210 + C50075 * C50246);
    const double C471 = C50070 * (4 * C50210 + C50075 * C50246) -
                        ((4 * C50211 + C50075 * C50240) * ce) / C49932;
    const double C640 =
        (-3 * C50192) / C49932 + C50075 * C50210 + C50246 * C50174;
    const double C1006 = (-3 * C50192) / C49932 + C50075 * C50210 +
                         C50070 * (C50070 * C50246 - (C50240 * ce) / C49932) -
                         (C50070 * C50240 * ce) / C49932;
    const double C1590 =
        C50070 * C50164 * C50246 - (C50164 * C50240 * ce) / C49932;
    const double C1247 =
        2 * (C50070 * C50210 - (C50211 * ce) / C49932) +
        C50070 * (C50210 + C50070 * C50295 - (C50290 * ce) / C49932) -
        ((C50211 + C50234 * C50073) * ce) / C49932;
    const double C6397 =
        (-3 * (C50070 * C50285 + C50192 + C50282 * ce)) / C49932 +
        C50070 * ((-2 * C50285) / C49932 - (C50070 * C50499) / C49932 -
                  (C50489 * ce) / C49932) -
        ((2 * C50282 + C50070 * C50489) * ce) / C49932;
    const double C6570 =
        (-3 * (C50070 * C50400 + C50252 + C50397 * ce)) / C49932 +
        C50070 * ((-2 * C50400) / C49932 - (C50070 * C50564) / C49932 -
                  (C50554 * ce) / C49932) -
        ((2 * C50397 + C50070 * C50554) * ce) / C49932;
    const double C50668 = C50665 / C49932;
    const double C20405 = 5 * ((-3 * C50322) / C49932 + C50164 * C50359) +
                          C50164 * (4 * C50359 + C50164 * C50724);
    const double C20519 = C50070 * (4 * C50359 + C50164 * C50724) -
                          ((4 * C50357 + C50164 * C50722) * ce) / C49932;
    const double C20734 = (-3 * C50322) / C49932 + C50164 * C50359 +
                          C50070 * (C50070 * C50724 - (C50722 * ce) / C49932) -
                          (C50070 * C50722 * ce) / C49932;
    const double C20816 =
        2 * (C50070 * C50359 - (C50357 * ce) / C49932) +
        C50070 * (C50359 + C50070 * C50733 - (C50728 * ce) / C49932) -
        ((C50357 + C50716 * C50073) * ce) / C49932;
    const double C22975 =
        (-3 * (C50070 * C50408 + C50322 + C50405 * ce)) / C49932 +
        C50070 * ((-2 * C50408) / C49932 - (C50070 * C50758) / C49932 -
                  (C50748 * ce) / C49932) -
        ((2 * C50405 + C50070 * C50748) * ce) / C49932;
    const double C50815 = C50812 / C49932;
    const double C50887 = C50849 - C50884;
    const double C6572 =
        3 * ((-(ae * C50400) / C49932) / C50003 - C50394 / C50079 -
             (C50401 * ce) / C50079 + C50070 * C50563) +
        (((-2 * C50400) / C49932 - (C50070 * C50564) / C49932 -
          (C50554 * ce) / C49932) *
         ae) /
            C50003 -
        ((2 * C50401 + C50070 * C50565 + C50554 * ae) * ce) / C50079 +
        C50070 * (2 * C50563 - (ae * C50564) / C50079 - (C50565 * ce) / C50079 +
                  C50070 * ((-(ae * C50552) / C49932) / C50003 -
                            C50537 / C50079 - (C50555 * ce) / C50079 +
                            C50070 * ((-(C50540 * ce) / C49932) / C50003 -
                                      (ae * C50538) / C50079 -
                                      (C50070 * C50164 * C50075 *
                                       (C50110 * C50111 +
                                        C50073 * bs[8] * std::pow(C50066, 8)) *
                                       C50071) /
                                          C50079)));
    const double C1232 =
        ((((0 - (C49931 * C49956) / C49932) * ce) / C49932 - (0 * de) / C49961 +
          C49941 / C49932) /
             C49940 -
         ((C49931 * C49975 + 0) * de) / C49932) /
            C49940 -
        ((C49931 * (C49975 / C49940 -
                    ((C49931 * C49976 + C51448) * de) / C49932 + C49970) +
          C51494) *
         de) /
            C49932 +
        C49976 / C49940 - ((C49931 * C49970 + C51260) * de) / C49932;
    const double C1233 =
        (C49975 / C49940 - ((C49931 * C49976 + C51448) * de) / C49932 +
         C49970) /
            C49940 -
        ((C49931 *
              (C49976 / C49940 - ((C49931 * C49970 + C51260) * de) / C49932) +
          C51483) *
         de) /
            C49932 +
        2 * (C49970 / C49940 - (0 * de) / C49932);
    const double C1234 =
        (C49976 / C49940 - ((C49931 * C49970 + C51260) * de) / C49932) /
            C49940 -
        ((C49931 * (C49970 / C49940 - (0 * de) / C49932) + C1988) * de) /
            C49932;
    const double C1989 =
        C49975 / C49940 - ((C49931 * C49976 + C51448) * de) / C49932 + C49970;
    const double C1990 =
        C49976 / C49940 - ((C49931 * C49970 + C51260) * de) / C49932;
    const double C1744 = C1742 - C1735;
    const double C1743 = C1741 - C1731;
    const double C9987 = C9986 - C1881;
    const double C10184 = C1881 - C10183;
    const double C4642 = C1877 - C4634;
    const double C4640 = C4628 - C1877;
    const double C4643 = C4424 - C4635;
    const double C4641 = C4633 - C4424;
    const double C5152 = C5146 - C4631;
    const double C21705 = C21700 - C5148;
    const double C39111 =
        ((((0 - (C50001 * C50027) / C50003) * ae) / C50003 - (0 * be) / C50007 +
          C50002 / C50003) /
             C50028 -
         ((C50001 * C50045 + 0) * be) / C50003) /
            C50028 +
        ((C50001 * (C50045 / C50028 -
                    ((C50001 * C50047 + C51463) * be) / C50003 + C50040) +
          C51497) *
         ae) /
            C50003 +
        C50047 / C50028 - ((C50001 * C50040 + C51382) * be) / C50003;
    const double C39112 =
        (C50045 / C50028 - ((C50001 * C50047 + C51463) * be) / C50003 +
         C50040) /
            C50028 +
        ((C50001 *
              (C50047 / C50028 - ((C50001 * C50040 + C51382) * be) / C50003) +
          C51498) *
         ae) /
            C50003 +
        2 * (C50040 / C50028 - (0 * be) / C50003);
    const double C39113 =
        (C50047 / C50028 - ((C50001 * C50040 + C51382) * be) / C50003) /
            C50028 +
        ((C50001 * (C50040 / C50028 - (0 * be) / C50003) + C44473) * ae) /
            C50003;
    const double C44474 =
        C50045 / C50028 - ((C50001 * C50047 + C51463) * be) / C50003 + C50040;
    const double C44475 =
        C50047 / C50028 - ((C50001 * C50040 + C51382) * be) / C50003;
    const double C4274 = C4271 + C1618;
    const double C4273 = C4270 - C1618;
    const double C3300 = C3298 - C3292;
    const double C20415 = C20409 * C51163;
    const double C14028 = C14023 + C14024;
    const double C16024 = C16017 + C16018;
    const double C16491 = C16487 + C16488;
    const double C14027 = C14021 + C14022;
    const double C16020 = C16012 + C16013;
    const double C16490 = C16482 + C16483;
    const double C41155 = C41150 + C41151;
    const double C43062 = C43055 + C43056;
    const double C43529 = C43525 + C43526;
    const double C41154 = C41148 + C41149;
    const double C43058 = C43050 + C43051;
    const double C43528 = C43520 + C43521;
    const double C11360 = C11347 - C11358;
    const double C12851 = C12850 - C12848;
    const double C33927 = C33914 - C33925;
    const double C35418 = C35417 - C35415;
    const double C2969 = C2963 + C2950;
    const double C25101 = C25097 + C25098;
    const double C3293 = C3284 - C2788;
    const double C4275 = C4272 + C2788;
    const double C31238 = C31237 * C51163;
    const double C31520 = C31513 - C31514;
    const double C33242 = C33241 - C33239;
    const double C36840 = C36838 * C51163;
    const double C37147 = C37134 - C37145;
    const double C38893 = C38892 - C38890;
    const double C167 = C51318 * C145;
    const double C320 = C51318 * C312;
    const double C11151 = C51463 * C312;
    const double C33718 = C33488 * C312;
    const double C496 = C51318 * C475;
    const double C5451 = C5412 * C475;
    const double C10943 = C51382 * C475;
    const double C11340 = C51463 * C475;
    const double C33510 = C51382 * C475;
    const double C33907 = C33488 * C475;
    const double C44511 = C51498 * C475;
    const double C655 = C51318 * C644;
    const double C11521 = C51463 * C644;
    const double C34088 = C33488 * C644;
    const double C1604 = C51318 * C882;
    const double C5639 = C5412 * C882;
    const double C11131 = C51382 * C882;
    const double C12689 = C51463 * C882;
    const double C33698 = C51382 * C882;
    const double C35256 = C33488 * C882;
    const double C44699 = C51498 * C882;
    const double C1028 = C51318 * C1009;
    const double C5431 = C5413 * C1009;
    const double C5821 = C5412 * C1009;
    const double C11332 = C51382 * C1009;
    const double C11935 = C51463 * C1009;
    const double C33899 = C51382 * C1009;
    const double C34502 = C33488 * C1009;
    const double C44491 = C44473 * C1009;
    const double C44881 = C51498 * C1009;
    const double C3080 = C2951 * C51168;
    const double C20336 = C2951 * C51163;
    const double C25201 = C2951 * C51168;
    const double C14451 = C14444 + C14445;
    const double C14450 = C14438 + C14439;
    const double C36839 = C36836 + C36837;
    const double C41549 = C41547 + C41548;
    const double C20414 = C51318 * C3078;
    const double C3272 = C51318 * C3249;
    const double C14589 = C51382 * C3249;
    const double C22491 = C5412 * C3249;
    const double C31510 = C51463 * C3249;
    const double C36809 = C51382 * C3249;
    const double C37127 = C33488 * C3249;
    const double C47867 = C51498 * C3249;
    const double C20529 = C51318 * C3251;
    const double C31346 = C51382 * C3251;
    const double C36949 = C51382 * C3251;
    const double C3654 = C51318 * C3457;
    const double C14803 = C51382 * C3457;
    const double C22367 = C5413 * C3457;
    const double C22667 = C5412 * C3457;
    const double C31820 = C51463 * C3457;
    const double C37119 = C51382 * C3457;
    const double C37455 = C33488 * C3457;
    const double C47743 = C44473 * C3457;
    const double C48043 = C51498 * C3457;
    const double C20744 = C51318 * C3636;
    const double C22493 = C5413 * C3636;
    const double C31512 = C51382 * C3636;
    const double C37129 = C51382 * C3636;
    const double C47869 = C44473 * C3636;
    const double C22669 = C5413 * C3774;
    const double C31822 = C51382 * C3774;
    const double C37457 = C51382 * C3774;
    const double C48045 = C44473 * C3774;
    const double C6416 = C6406 + C6407;
    const double C45464 = C45454 + C45455;
    const double C50663 = C50659 - C50636;
    const double C22992 = C22982 + C22983;
    const double C48364 = C48354 + C48355;
    const double C50807 = C50801 - C50775;
    const double C6673 =
        (4 * (2 * C50270 + C50070 * C50445 + C50434 * ae) +
         C50070 * (3 * C50445 + C50070 * C50618 + C50603 * ae) +
         (3 * C50434 + C50070 * C50603) * ae) /
        C50003;
    const double C50619 = C50617 - C50602;
    const double C50886 = C50877 + C50883;
    const double C6413 = C5413 * C6399;
    const double C45461 = C44473 * C6399;
    const double C22989 = C5413 * C6571;
    const double C48361 = C44473 * C6571;
    const double C50863 = C50855 - C50842;
    const double C50616 = C50609 + C50613;
    const double C50125 = C50115 + C50124;
    const double C50501 = C50498 + C50478;
    const double C7168 =
        2 * ((-(C50258 * ce) / C49932) / C50003 - (ae * C50256) / C50079 +
             C50070 * C50675) -
        (ae * (C50070 * C50684 + C50256 + C50681 * ce)) / C50079 -
        ((C50258 + C50070 * C50685 + C50681 * ae) * ce) / C50079 +
        C50070 * (C50675 - (ae * C50684) / C50079 - (C50685 * ce) / C50079 +
                  C50070 * ((-(C50678 * ce) / C49932) / C50003 -
                            (ae * C50676) / C50079 +
                            C50070 * C50164 *
                                ((-((C50110 * C50111 +
                                     C50073 * bs[8] * std::pow(C50066, 8)) *
                                    C50071 * C50088) /
                                  C49932) /
                                     C50003 -
                                 C50118 / C50079)));
    const double C2607 = C51318 * C755;
    const double C2782 = C51318 * C886;
    const double C11523 = C51382 * C886;
    const double C34090 = C51382 * C886;
    const double C5641 = C5413 * C1160;
    const double C9102 = C51318 * C1160;
    const double C12691 = C51382 * C1160;
    const double C35258 = C51382 * C1160;
    const double C44701 = C44473 * C1160;
    const double C5823 = C5413 * C1250;
    const double C11937 = C51382 * C1250;
    const double C34504 = C51382 * C1250;
    const double C44883 = C44473 * C1250;
    const double C3077 =
        4 * ((-2 * C50164 * C50108) / C50079 + C50164 * C50307) +
        C50164 *
            (3 * C50307 +
             C50164 * ((-2 * C50164 * C50301) / C50079 +
                       C50164 * ((-(C50075 *
                                    (C50110 * C50111 +
                                     C50073 * bs[8] * std::pow(C50066, 8)) *
                                    C50071 * C50174) /
                                  C49932) /
                                     C50003 -
                                 C50301 / C50079)));
    const double C3250 =
        (((-2 * C50252) / C49932 -
          (C50164 * (C50214 * C50174 + C50196)) / C49932) *
         ae) /
            C50003 -
        ((2 * C50254 + C50164 * (C50200 + C50220 * C50174)) * ce) / C50079 +
        C50070 * ((-2 * C50164 * C50108) / C50079 + C50164 * C50307);
    const double C3252 =
        (((-3 * (C50214 * C50174 + C50196)) / C49932 +
          C50164 * ((-2 * C50164 * C50214) / C49932 -
                    (C50164 * (C50075 * C50224 * C50174 + C50214)) / C49932)) *
         ae) /
            C50003 -
        ((3 * (C50200 + C50220 * C50174) +
          C50164 * (2 * C50164 * C50220 +
                    C50164 * (C50220 + C50075 * C50228 * C50174))) *
         ce) /
            C50079 +
        C50070 *
            (3 * C50307 +
             C50164 * ((-2 * C50164 * C50301) / C50079 +
                       C50164 * ((-(C50075 *
                                    (C50110 * C50111 +
                                     C50073 * bs[8] * std::pow(C50066, 8)) *
                                    C50071 * C50174) /
                                  C49932) /
                                     C50003 -
                                 C50301 / C50079)));
    const double C3458 = (-(C50108 * C50174) / C49932) / C50003 -
                         C50167 / C50079 -
                         (ae * (C50070 * C50329 + C50330 * ce)) / C50079 -
                         ((C50070 * C50331 + C50330 * ae) * ce) / C50079 +
                         C50070 * ((-(C50331 * ce) / C49932) / C50003 -
                                   (ae * C50329) / C50079 + C50070 * C50307);
    const double C3637 =
        (-2 * C50164 * C50108) / C50079 + C50164 * C50307 +
        ((C50070 * C50383 - (C50381 * ce) / C49932) * ae) / C50003 -
        ((C50070 * C50382 + C50381 * ae) * ce) / C50079 +
        C50070 *
            ((C50383 * ae) / C50003 - (C50382 * ce) / C50079 +
             C50070 * ((-2 * C50164 * C50301) / C50079 +
                       C50164 * ((-(C50075 *
                                    (C50110 * C50111 +
                                     C50073 * bs[8] * std::pow(C50066, 8)) *
                                    C50071 * C50174) /
                                  C49932) /
                                     C50003 -
                                 C50301 / C50079)));
    const double C3775 =
        2 * ((-(C50331 * ce) / C49932) / C50003 - (ae * C50329) / C50079 +
             C50070 * C50307) -
        (ae * (C50070 * C50416 + C50329 + C50413 * ce)) / C50079 -
        ((C50331 + C50070 * C50417 + C50413 * ae) * ce) / C50079 +
        C50070 *
            (C50307 - (ae * C50416) / C50079 - (C50417 * ce) / C50079 +
             C50070 *
                 ((-(C50376 * ce) / C49932) / C50003 - (ae * C50374) / C50079 +
                  C50070 * ((-(C50075 *
                               (C50110 * C50111 +
                                C50073 * bs[8] * std::pow(C50066, 8)) *
                               C50071 * C50174) /
                             C49932) /
                                C50003 -
                            C50301 / C50079)));
    const double C50695 = C50689 + C50694;
    const double C50760 = C50757 + C50737;
    const double C50672 = C50669 + C50652;
    const double C50818 = C50816 + C50800;
    const double C50891 = C50070 * C50888;
    const double C50671 = C50640 - C50668;
    const double C50817 = C50779 - C50815;
    const double C50890 = C50887 - C50867;
    const double C2005 = C172 * C1989;
    const double C1999 = C170 * C1989;
    const double C1993 = C168 * C1989;
    const double C4800 = C660 * C1989;
    const double C4794 = C340 * C1989;
    const double C5308 = C2611 * C1989;
    const double C5302 = C2609 * C1989;
    const double C10332 = C338 * C1989;
    const double C21806 = C2965 * C1989;
    const double C2007 = C509 * C1990;
    const double C2001 = C506 * C1990;
    const double C1995 = C503 * C1990;
    const double C4802 = C2783 * C1990;
    const double C4796 = C1611 * C1990;
    const double C5310 = C3282 * C1990;
    const double C5304 = C3279 * C1990;
    const double C10334 = C1613 * C1990;
    const double C21808 = C3285 * C1990;
    const double C1745 = C1743 - C1732;
    const double C4646 = C4642 + C1880;
    const double C4644 = C4640 - C1880;
    const double C4647 = C4643 + C4425;
    const double C4645 = C4641 - C4425;
    const double C5153 = C5152 - C4632;
    const double C44508 = C44474 * C133;
    const double C44502 = C44474 * C122;
    const double C44500 = C44474 * C121;
    const double C44494 = C44474 * C131;
    const double C44484 = C44474 * C129;
    const double C44478 = C44474 * C120;
    const double C44696 = C44474 * C302;
    const double C44690 = C44474 * C295;
    const double C44688 = C44474 * C296;
    const double C44682 = C44474 * C304;
    const double C44878 = C44474 * C465;
    const double C44872 = C44474 * C456;
    const double C44870 = C44474 * C463;
    const double C44864 = C44474 * C455;
    const double C45048 = C44474 * C635;
    const double C45042 = C44474 * C628;
    const double C45456 = C44474 * C1000;
    const double C45450 = C44474 * C993;
    const double C46204 = C44474 * C867;
    const double C46198 = C44474 * C857;
    const double C47438 = C44474 * C306;
    const double C47432 = C44474 * C297;
    const double C47752 = C44474 * C627;
    const double C47746 = C44474 * C633;
    const double C47864 = C44474 * C752;
    const double C47858 = C44474 * C745;
    const double C48040 = C44474 * C873;
    const double C48034 = C44474 * C860;
    const double C48032 = C44474 * C865;
    const double C48026 = C44474 * C856;
    const double C48356 = C44474 * C1151;
    const double C48350 = C44474 * C1146;
    const double C44510 = C44475 * C467;
    const double C44504 = C44475 * C457;
    const double C44498 = C44475 * C456;
    const double C44492 = C44475 * C465;
    const double C44486 = C44475 * C463;
    const double C44480 = C44475 * C455;
    const double C44698 = C44475 * C869;
    const double C44692 = C44475 * C858;
    const double C44686 = C44475 * C857;
    const double C44680 = C44475 * C867;
    const double C44880 = C44475 * C1002;
    const double C44874 = C44475 * C994;
    const double C44868 = C44475 * C1000;
    const double C44862 = C44475 * C993;
    const double C45050 = C44475 * C875;
    const double C45044 = C44475 * C861;
    const double C45458 = C44475 * C1243;
    const double C45452 = C44475 * C1237;
    const double C46206 = C44475 * C1153;
    const double C46200 = C44475 * C1147;
    const double C47440 = C44475 * C865;
    const double C47434 = C44475 * C856;
    const double C47750 = C44475 * C860;
    const double C47744 = C44475 * C873;
    const double C47866 = C44475 * C3242;
    const double C47860 = C44475 * C3237;
    const double C48042 = C44475 * C3452;
    const double C48036 = C44475 * C3448;
    const double C48030 = C44475 * C1151;
    const double C48024 = C44475 * C1146;
    const double C48358 = C44475 * C3765;
    const double C48352 = C44475 * C3760;
    const double C3301 = C3300 * C2434;
    const double C20522 = C3300 * C51163;
    const double C25350 = C3300 * C51434;
    const double C16027 = C16023 - C16024;
    const double C16493 = C16486 - C16491;
    const double C16026 = C16020 - C16021;
    const double C16492 = C16490 - C16484;
    const double C43065 = C43061 - C43062;
    const double C43531 = C43524 - C43529;
    const double C43064 = C43058 - C43059;
    const double C43530 = C43528 - C43522;
    const double C3299 = C3293 * C51168;
    const double C25351 = C3293 * C51168;
    const double C177 = C166 + C167;
    const double C335 = C319 + C320;
    const double C11164 = C11150 + C11151;
    const double C33731 = C33717 + C33718;
    const double C510 = C495 + C496;
    const double C5470 = C5450 + C5451;
    const double C10966 = C10942 + C10943;
    const double C11354 = C11339 + C11340;
    const double C33533 = C33509 + C33510;
    const double C33921 = C33906 + C33907;
    const double C663 = C654 + C655;
    const double C11530 = C11520 + C11521;
    const double C34097 = C34087 + C34088;
    const double C1614 = C1603 + C1604;
    const double C5652 = C5638 + C5639;
    const double C11154 = C11130 + C11131;
    const double C12698 = C12688 + C12689;
    const double C33721 = C33697 + C33698;
    const double C35265 = C35255 + C35256;
    const double C1040 = C1027 + C1028;
    const double C5460 = C5430 + C5431;
    const double C5834 = C5820 + C5821;
    const double C11350 = C11331 + C11332;
    const double C11944 = C11934 + C11935;
    const double C33917 = C33898 + C33899;
    const double C34511 = C34501 + C34502;
    const double C44520 = C44490 + C44491;
    const double C3089 = C3080 + C3086;
    const double C25203 = C25201 + C25202;
    const double C31234 = C14450 * C51163;
    const double C36841 = C36839 * C51163;
    const double C20417 = C20413 + C20414;
    const double C3286 = C3271 + C3272;
    const double C14593 = C14588 + C14589;
    const double C22498 = C22490 + C22491;
    const double C31518 = C31509 + C31510;
    const double C36828 = C36808 + C36809;
    const double C37141 = C37126 + C37127;
    const double C20532 = C20528 + C20529;
    const double C31352 = C31345 + C31346;
    const double C36955 = C36948 + C36949;
    const double C3658 = C3653 + C3654;
    const double C14819 = C14802 + C14803;
    const double C22378 = C22366 + C22367;
    const double C22680 = C22666 + C22667;
    const double C31825 = C31819 + C31820;
    const double C37137 = C37118 + C37119;
    const double C37464 = C37454 + C37455;
    const double C47754 = C47742 + C47743;
    const double C20746 = C20743 + C20744;
    const double C22499 = C22492 + C22493;
    const double C31519 = C31511 + C31512;
    const double C37142 = C37128 + C37129;
    const double C47875 = C47868 + C47869;
    const double C22681 = C22668 + C22669;
    const double C31826 = C31821 + C31822;
    const double C37465 = C37456 + C37457;
    const double C48057 = C48044 + C48045;
    const double C50670 = C50663 + C50667;
    const double C50814 = C50807 + C50811;
    const double C6674 =
        4 * ((-2 * C50269) / C49932 - (C50070 * C50444) / C49932 -
             (C50434 * ce) / C49932) +
        C50070 * ((-3 * C50444) / C49932 + C50070 * C50619 -
                  (C50603 * ce) / C49932) -
        ((3 * C50434 + C50070 * C50603) * ce) / C49932;
    const double C50889 = C50070 * C50886;
    const double C6419 = C6412 + C6413;
    const double C45467 = C45460 + C45461;
    const double C22995 = C22988 + C22989;
    const double C48367 = C48360 + C48361;
    const double C6677 =
        4 * (2 * C50446 - (ae * C50444) / C50079 - (C50445 * ce) / C50079 +
             C50070 * C50616) +
        (((-3 * C50444) / C49932 + C50070 * C50619 - (C50603 * ce) / C49932) *
         ae) /
            C50003 -
        ((3 * C50445 + C50070 * C50618 + C50603 * ae) * ce) / C50079 +
        C50070 *
            (3 * C50616 + (C50619 * ae) / C50003 - (C50618 * ce) / C50079 +
             C50070 *
                 (2 * C50610 - (ae * C50607) / C50079 - (C50608 * ce) / C50079 +
                  C50070 * ((-(ae * C50587) / C49932) / C50003 - C50112 -
                            (C50590 * ce) / C50079 +
                            C50070 * ((-(C50153 * ce) / C49932) / C50003 -
                                      (ae * C50152) / C50079 -
                                      (C50070 * C50118) / C50079))));
    const double C146 =
        5 * (3 * C50106 + C50075 * C50125) +
        C50075 * (4 * C50125 +
                  C50075 * (3 * C50123 +
                            C50075 * ((-2 * C50075 * C50118) / C50079 +
                                      C50075 * ((-((C50110 * C50111 +
                                                    C50073 * bs[8] *
                                                        std::pow(C50066, 8)) *
                                                   C50071 * C50088) /
                                                 C49932) /
                                                    C50003 -
                                                C50118 / C50079))));
    const double C316 = (yP - yQ) * (3 * C50106 + C50075 * C50125);
    const double C317 =
        (yP - yQ) *
        (4 * C50125 +
         C50075 *
             (3 * C50123 +
              C50075 * ((-2 * C50075 * C50118) / C50079 +
                        C50075 * ((-((C50110 * C50111 +
                                      C50073 * bs[8] * std::pow(C50066, 8)) *
                                     C50071 * C50088) /
                                   C49932) /
                                      C50003 -
                                  C50118 / C50079))));
    const double C476 =
        (((-3 * (C50147 * C50088 + C50142)) / C49932 +
          C50075 * ((-2 * C50075 * C50147) / C49932 -
                    (C50075 * (C50096 * C50095 * C50138 * C50088 + C50147)) /
                        C49932)) *
         ae) /
            C50003 -
        ((3 * (C50143 + C50148 * C50088) +
          C50075 * (2 * C50075 * C50148 +
                    C50075 * (C50148 + C50096 * C50095 * C50137 * C50088))) *
         ce) /
            C50079 +
        C50070 * (3 * C50106 + C50075 * C50125);
    const double C477 =
        ((4 * ((-2 * C50075 * C50147) / C49932 - (C50075 * C50156) / C49932) +
          C50075 * ((-3 * C50156) / C49932 +
                    C50075 * ((-2 * C50075 * C50152) / C49932 -
                              (C50075 *
                               (C50111 * C50110 * C50138 * C50088 + C50152)) /
                                  C49932))) *
         ae) /
            C50003 -
        ((4 * (2 * C50075 * C50148 + C50075 * C50157) +
          C50075 * (3 * C50157 +
                    C50075 * (2 * C50075 * C50153 +
                              C50075 * (C50153 +
                                        C50111 * C50110 * C50137 * C50088)))) *
         ce) /
            C50079 +
        C50070 * (4 * C50125 +
                  C50075 * (3 * C50123 +
                            C50075 * ((-2 * C50075 * C50118) / C50079 +
                                      C50075 * ((-((C50110 * C50111 +
                                                    C50073 * bs[8] *
                                                        std::pow(C50066, 8)) *
                                                   C50071 * C50088) /
                                                 C49932) /
                                                    C50003 -
                                                C50118 / C50079))));
    const double C645 = (-2 * C50075 * C50092) / C50079 + C50075 * C50106 +
                        C50125 * std::pow(yP - yQ, 2);
    const double C646 =
        3 * C50106 + C50075 * C50125 +
        (3 * C50123 +
         C50075 *
             ((-2 * C50075 * C50118) / C50079 +
              C50075 *
                  ((-((C50110 * C50111 + C50073 * bs[8] * std::pow(C50066, 8)) *
                      C50071 * C50088) /
                    C49932) /
                       C50003 -
                   C50118 / C50079))) *
            std::pow(yP - yQ, 2);
    const double C754 =
        2 * C50164 * C50125 +
        C50164 *
            (C50125 +
             ((-2 * C50075 * C50118) / C50079 +
              C50075 *
                  ((-((C50110 * C50111 + C50073 * bs[8] * std::pow(C50066, 8)) *
                      C50071 * C50088) /
                    C49932) /
                       C50003 -
                   C50118 / C50079)) *
                 std::pow(C50164, 2));
    const double C883 =
        (C50164 *
         ((-2 * C50075 * C50147) / C49932 - (C50075 * C50156) / C49932) * ae) /
            C50003 -
        (C50164 * (2 * C50075 * C50148 + C50075 * C50157) * ce) / C50079 +
        C50070 * C50164 * C50125;
    const double C887 =
        (((-2 * C50075 * C50147) / C49932 - (C50075 * C50156) / C49932 +
          ((-2 * C50075 * C50152) / C49932 -
           (C50075 * (C50111 * C50110 * C50138 * C50088 + C50152)) / C49932) *
              C50174) *
         ae) /
            C50003 -
        ((2 * C50075 * C50148 + C50075 * C50157 +
          (2 * C50075 * C50153 +
           C50075 * (C50153 + C50111 * C50110 * C50137 * C50088)) *
              C50174) *
         ce) /
            C50079 +
        C50070 *
            (C50125 +
             ((-2 * C50075 * C50118) / C50079 +
              C50075 *
                  ((-((C50110 * C50111 + C50073 * bs[8] * std::pow(C50066, 8)) *
                      C50071 * C50088) /
                    C49932) /
                       C50003 -
                   C50118 / C50079)) *
                 C50174);
    const double C1010 =
        (-2 * C50167) / C50079 + C50075 * C50106 +
        ((C50070 * C50210 - (C50211 * ce) / C49932) * ae) / C50003 -
        ((C50070 * C50209 + C50211 * ae) * ce) / C50079 +
        C50070 *
            ((C50210 * ae) / C50003 - (C50209 * ce) / C50079 + C50070 * C50125);
    const double C1011 =
        3 * C50106 + C50075 * C50125 +
        ((C50070 * C50246 - (C50240 * ce) / C49932) * ae) / C50003 -
        ((C50070 * C50245 + C50240 * ae) * ce) / C50079 +
        C50070 * ((C50246 * ae) / C50003 - (C50245 * ce) / C50079 +
                  C50070 * (3 * C50123 +
                            C50075 * ((-2 * C50075 * C50118) / C50079 +
                                      C50075 * ((-((C50110 * C50111 +
                                                    C50073 * bs[8] *
                                                        std::pow(C50066, 8)) *
                                                   C50071 * C50088) /
                                                 C49932) /
                                                    C50003 -
                                                C50118 / C50079))));
    const double C1161 =
        C50164 * C50125 +
        ((C50070 * C50260 - (C50261 * ce) / C49932) * ae) / C50003 -
        ((C50070 * C50262 + C50261 * ae) * ce) / C50079 +
        C50070 * ((C50260 * ae) / C50003 - (C50262 * ce) / C50079 +
                  C50070 * C50164 *
                      ((-2 * C50075 * C50118) / C50079 +
                       C50075 * ((-((C50110 * C50111 +
                                     C50073 * bs[8] * std::pow(C50066, 8)) *
                                    C50071 * C50088) /
                                  C49932) /
                                     C50003 -
                                 C50118 / C50079)));
    const double C1251 =
        2 * ((C50210 * ae) / C50003 - (C50209 * ce) / C50079 +
             C50070 * C50125) +
        ((C50210 + C50070 * C50295 - (C50290 * ce) / C49932) * ae) / C50003 -
        ((C50209 + C50070 * C50294 + C50290 * ae) * ce) / C50079 +
        C50070 * (C50125 + (C50295 * ae) / C50003 - (C50294 * ce) / C50079 +
                  C50070 * ((C50242 * ae) / C50003 - (C50241 * ce) / C50079 +
                            C50070 * ((-2 * C50075 * C50118) / C50079 +
                                      C50075 * ((-((C50110 * C50111 +
                                                    C50073 * bs[8] *
                                                        std::pow(C50066, 8)) *
                                                   C50071 * C50088) /
                                                 C49932) /
                                                    C50003 -
                                                C50118 / C50079))));
    const double C6400 =
        3 * (C50106 - (ae * C50285) / C50079 - (C50286 * ce) / C50079 +
             C50070 * C50501) +
        (((-2 * C50285) / C49932 - (C50070 * C50499) / C49932 -
          (C50489 * ce) / C49932) *
         ae) /
            C50003 -
        ((2 * C50286 + C50070 * C50500 + C50489 * ae) * ce) / C50079 +
        C50070 *
            (2 * C50501 - (ae * C50499) / C50079 - (C50500 * ce) / C50079 +
             C50070 *
                 (C50123 - (ae * C50487) / C50079 - (C50490 * ce) / C50079 +
                  C50070 *
                      ((-(C50235 * ce) / C49932) / C50003 -
                       (ae * C50233) / C50079 +
                       C50070 * ((-((C50110 * C50111 +
                                     C50073 * bs[8] * std::pow(C50066, 8)) *
                                    C50071 * C50088) /
                                  C49932) /
                                     C50003 -
                                 C50118 / C50079))));
    const double C2616 = C2606 + C2607;
    const double C2786 = C2781 + C2782;
    const double C11531 = C11522 + C11523;
    const double C34098 = C34089 + C34090;
    const double C5653 = C5640 + C5641;
    const double C9104 = C9101 + C9102;
    const double C12699 = C12690 + C12691;
    const double C35266 = C35257 + C35258;
    const double C44713 = C44700 + C44701;
    const double C5835 = C5822 + C5823;
    const double C11945 = C11936 + C11937;
    const double C34512 = C34503 + C34504;
    const double C44895 = C44882 + C44883;
    const double C3278 = C51318 * C3250;
    const double C14437 = C51382 * C3250;
    const double C36823 = C51382 * C3250;
    const double C3476 = C51318 * C3458;
    const double C5993 = C5413 * C3458;
    const double C14811 = C51382 * C3458;
    const double C38057 = C51382 * C3458;
    const double C45053 = C44473 * C3458;
    const double C20407 =
        5 * (3 * C50313 + C50164 * C50695) +
        C50164 * (4 * C50695 +
                  C50164 * (3 * C50693 +
                            C50164 * ((-2 * C50164 * C50118) / C50079 +
                                      C50164 * ((-((C50110 * C50111 +
                                                    C50073 * bs[8] *
                                                        std::pow(C50066, 8)) *
                                                   C50071 * C50174) /
                                                 C49932) /
                                                    C50003 -
                                                C50118 / C50079))));
    const double C20520 =
        ((4 * C50359 +
          C50164 *
              ((-3 * C50347) / C49932 +
               C50164 * ((-2 * C50506) / C49932 -
                         (C50164 * (C50224 * C50174 + C50152)) / C49932))) *
         ae) /
            C50003 -
        ((4 * C50358 +
          C50164 *
              (3 * C50351 +
               C50164 * (2 * C50508 + C50164 * (C50153 + C50228 * C50174)))) *
         ce) /
            C50079 +
        C50070 * (4 * C50695 +
                  C50164 * (3 * C50693 +
                            C50164 * ((-2 * C50164 * C50118) / C50079 +
                                      C50164 * ((-((C50110 * C50111 +
                                                    C50073 * bs[8] *
                                                        std::pow(C50066, 8)) *
                                                   C50071 * C50174) /
                                                 C49932) /
                                                    C50003 -
                                                C50118 / C50079))));
    const double C20735 =
        3 * C50313 + C50164 * C50695 +
        ((C50070 * C50724 - (C50722 * ce) / C49932) * ae) / C50003 -
        ((C50070 * C50723 + C50722 * ae) * ce) / C50079 +
        C50070 * ((C50724 * ae) / C50003 - (C50723 * ce) / C50079 +
                  C50070 * (3 * C50693 +
                            C50164 * ((-2 * C50164 * C50118) / C50079 +
                                      C50164 * ((-((C50110 * C50111 +
                                                    C50073 * bs[8] *
                                                        std::pow(C50066, 8)) *
                                                   C50071 * C50174) /
                                                 C49932) /
                                                    C50003 -
                                                C50118 / C50079))));
    const double C20817 =
        2 * ((C50359 * ae) / C50003 - (C50358 * ce) / C50079 +
             C50070 * C50695) +
        ((C50359 + C50070 * C50733 - (C50728 * ce) / C49932) * ae) / C50003 -
        ((C50358 + C50070 * C50732 + C50728 * ae) * ce) / C50079 +
        C50070 * (C50695 + (C50733 * ae) / C50003 - (C50732 * ce) / C50079 +
                  C50070 * ((C50718 * ae) / C50003 - (C50717 * ce) / C50079 +
                            C50070 * ((-2 * C50164 * C50118) / C50079 +
                                      C50164 * ((-((C50110 * C50111 +
                                                    C50073 * bs[8] *
                                                        std::pow(C50066, 8)) *
                                                   C50071 * C50174) /
                                                 C49932) /
                                                    C50003 -
                                                C50118 / C50079))));
    const double C22976 =
        3 * (C50313 - (ae * C50408) / C50079 - (C50409 * ce) / C50079 +
             C50070 * C50760) +
        (((-2 * C50408) / C49932 - (C50070 * C50758) / C49932 -
          (C50748 * ce) / C49932) *
         ae) /
            C50003 -
        ((2 * C50409 + C50070 * C50759 + C50748 * ae) * ce) / C50079 +
        C50070 *
            (2 * C50760 - (ae * C50758) / C50079 - (C50759 * ce) / C50079 +
             C50070 *
                 (C50693 - (ae * C50746) / C50079 - (C50749 * ce) / C50079 +
                  C50070 *
                      ((-(C50711 * ce) / C49932) / C50003 -
                       (ae * C50709) / C50079 +
                       C50070 * ((-((C50110 * C50111 +
                                     C50073 * bs[8] * std::pow(C50066, 8)) *
                                    C50071 * C50174) /
                                  C49932) /
                                     C50003 -
                                 C50118 / C50079))));
    const double C6675 =
        (4 * (2 * C50278 + C50070 * C50473 + C50462 * ae) +
         C50070 * (3 * C50473 + C50070 * C50672 + C50657 * ae) +
         (3 * C50462 + C50070 * C50657) * ae) /
        C50003;
    const double C23094 =
        (4 * (2 * C50392 + C50070 * C50533 + C50522 * ae) +
         C50070 * (3 * C50533 + C50070 * C50818 + C50805 * ae) +
         (3 * C50522 + C50070 * C50805) * ae) /
        C50003;
    const double C50894 = C50837 + C50891;
    const double C50673 = C50671 - C50656;
    const double C50819 = C50817 - C50804;
    const double C50893 = C50070 * C50890;
    const double C5147 = C4645 * C51168;
    const double C27056 = C4645 * C51168;
    const double C5154 = C5153 * C2434;
    const double C21699 = C5153 * C51163;
    const double C27055 = C5153 * C51434;
    const double C44529 = C44508 + C44509;
    const double C44526 = C44502 + C44503;
    const double C44525 = C44500 + C44501;
    const double C44522 = C44494 + C44495;
    const double C44517 = C44484 + C44485;
    const double C44514 = C44478 + C44479;
    const double C44711 = C44696 + C44697;
    const double C44708 = C44690 + C44691;
    const double C44707 = C44688 + C44689;
    const double C44704 = C44682 + C44683;
    const double C44893 = C44878 + C44879;
    const double C44890 = C44872 + C44873;
    const double C44889 = C44870 + C44871;
    const double C44886 = C44864 + C44865;
    const double C45057 = C45048 + C45049;
    const double C45054 = C45042 + C45043;
    const double C45465 = C45456 + C45457;
    const double C45462 = C45450 + C45451;
    const double C46213 = C46204 + C46205;
    const double C46210 = C46198 + C46199;
    const double C47447 = C47438 + C47439;
    const double C47444 = C47432 + C47433;
    const double C47759 = C47752 + C47753;
    const double C47756 = C47746 + C47747;
    const double C47873 = C47864 + C47865;
    const double C47870 = C47858 + C47859;
    const double C48055 = C48040 + C48041;
    const double C48052 = C48034 + C48035;
    const double C48051 = C48032 + C48033;
    const double C48048 = C48026 + C48027;
    const double C48365 = C48356 + C48357;
    const double C48362 = C48350 + C48351;
    const double C44530 = C44510 + C44511;
    const double C44527 = C44504 + C44505;
    const double C44524 = C44498 + C44499;
    const double C44521 = C44492 + C44493;
    const double C44518 = C44486 + C44487;
    const double C44515 = C44480 + C44481;
    const double C44712 = C44698 + C44699;
    const double C44709 = C44692 + C44693;
    const double C44706 = C44686 + C44687;
    const double C44703 = C44680 + C44681;
    const double C44894 = C44880 + C44881;
    const double C44891 = C44874 + C44875;
    const double C44888 = C44868 + C44869;
    const double C44885 = C44862 + C44863;
    const double C45058 = C45050 + C45051;
    const double C45055 = C45044 + C45045;
    const double C45466 = C45458 + C45459;
    const double C45463 = C45452 + C45453;
    const double C46214 = C46206 + C46207;
    const double C46211 = C46200 + C46201;
    const double C47448 = C47440 + C47441;
    const double C47445 = C47434 + C47435;
    const double C47758 = C47750 + C47751;
    const double C47755 = C47744 + C47745;
    const double C47874 = C47866 + C47867;
    const double C47871 = C47860 + C47861;
    const double C48056 = C48042 + C48043;
    const double C48053 = C48036 + C48037;
    const double C48050 = C48030 + C48031;
    const double C48047 = C48024 + C48025;
    const double C48366 = C48358 + C48359;
    const double C48363 = C48352 + C48353;
    const double C16029 = C16027 + C16025;
    const double C16495 = C16493 + C16489;
    const double C16028 = C16026 - C16022;
    const double C16494 = C16492 - C16485;
    const double C43067 = C43065 + C43063;
    const double C43533 = C43531 + C43527;
    const double C43066 = C43064 - C43060;
    const double C43532 = C43530 - C43523;
    const double C3302 = C3301 + C3299;
    const double C25352 = C25350 + C25351;
    const double C187 = C177 * C51248;
    const double C343 = C335 * C51248;
    const double C1607 = C335 * C51448;
    const double C1886 = C335 * C1720;
    const double C518 = C510 * C51260;
    const double C1032 = C510 * C987;
    const double C1736 = C510 * C51260;
    const double C2008 = C510 * C51483;
    const double C10976 = C10966 + C10967;
    const double C33543 = C33533 + C33534;
    const double C669 = C663 * C51248;
    const double C2779 = C663 * C51448;
    const double C4427 = C663 * C1720;
    const double C1620 = C1614 * C51260;
    const double C1884 = C1614 * C51260;
    const double C9098 = C1614 * C987;
    const double C10335 = C1614 * C51483;
    const double C11166 = C11154 + C11155;
    const double C14016 = C11155 + C11154;
    const double C33733 = C33721 + C33722;
    const double C41147 = C33722 + C33721;
    const double C1046 = C1040 * C988;
    const double C2004 = C1040 * C1988;
    const double C11357 = C11350 + C11351;
    const double C33924 = C33917 + C33918;
    const double C20419 = C20417 * C51248;
    const double C3295 = C3286 * C51260;
    const double C5151 = C3286 * C51260;
    const double C20740 = C3286 * C987;
    const double C21809 = C3286 * C51483;
    const double C31337 = C14593 + C14592;
    const double C36940 = C36828 + C36829;
    const double C20535 = C20532 * C51260;
    const double C21704 = C20532 * C51260;
    const double C3662 = C3658 * C988;
    const double C5313 = C3658 * C1988;
    const double C31504 = C14819 + C14818;
    const double C37144 = C37137 + C37138;
    const double C20748 = C20746 * C988;
    const double C21811 = C20746 * C1988;
    const double C50892 = C50863 + C50889;
    const double C334 = C51318 * C316;
    const double C502 = C51318 * C476;
    const double C10957 = C51382 * C476;
    const double C33524 = C51382 * C476;
    const double C659 = C51318 * C645;
    const double C1610 = C51318 * C883;
    const double C11153 = C51382 * C883;
    const double C33720 = C51382 * C883;
    const double C1036 = C51318 * C1010;
    const double C5453 = C5413 * C1010;
    const double C11342 = C51382 * C1010;
    const double C33909 = C51382 * C1010;
    const double C44513 = C44473 * C1010;
    const double C2624 = C2616 * C51248;
    const double C2790 = C2786 * C51260;
    const double C4429 = C2786 * C51260;
    const double C9106 = C9104 * C988;
    const double C10337 = C9104 * C1988;
    const double C3288 = C3277 + C3278;
    const double C14449 = C14436 + C14437;
    const double C36835 = C36822 + C36823;
    const double C3480 = C3475 + C3476;
    const double C5999 = C5992 + C5993;
    const double C14823 = C14810 + C14811;
    const double C38061 = C38056 + C38057;
    const double C45059 = C45052 + C45053;
    const double C50896 = C50894 + C50876;
    const double C6678 =
        4 * (2 * C50474 - (ae * C50472) / C50079 - (C50473 * ce) / C50079 +
             C50070 * C50670) +
        (((-3 * C50472) / C49932 + C50070 * C50673 - (C50657 * ce) / C49932) *
         ae) /
            C50003 -
        ((3 * C50473 + C50070 * C50672 + C50657 * ae) * ce) / C50079 +
        C50070 *
            (3 * C50670 + (C50673 * ae) / C50003 - (C50672 * ce) / C50079 +
             C50070 *
                 (2 * C50664 - (ae * C50661) / C50079 - (C50662 * ce) / C50079 +
                  C50070 * ((-(ae * C50641) / C49932) / C50003 -
                            C50301 / C50079 - (C50644 * ce) / C50079 +
                            C50070 * ((-(C50366 * ce) / C49932) / C50003 -
                                      (ae * C50362) / C50079 -
                                      (C50070 * C50075 *
                                       (C50110 * C50111 +
                                        C50073 * bs[8] * std::pow(C50066, 8)) *
                                       C50071) /
                                          C50079))));
    const double C6676 =
        4 * ((-2 * C50277) / C49932 - (C50070 * C50472) / C49932 -
             (C50462 * ce) / C49932) +
        C50070 * ((-3 * C50472) / C49932 + C50070 * C50673 -
                  (C50657 * ce) / C49932) -
        ((3 * C50462 + C50070 * C50657) * ce) / C49932;
    const double C23096 =
        4 * (2 * C50531 - (ae * C50532) / C50079 - (C50533 * ce) / C50079 +
             C50070 * C50814) +
        (((-3 * C50532) / C49932 + C50070 * C50819 - (C50805 * ce) / C49932) *
         ae) /
            C50003 -
        ((3 * C50533 + C50070 * C50818 + C50805 * ae) * ce) / C50079 +
        C50070 *
            (3 * C50814 + (C50819 * ae) / C50003 - (C50818 * ce) / C50079 +
             C50070 *
                 (2 * C50808 - (ae * C50809) / C50079 - (C50810 * ce) / C50079 +
                  C50070 * ((-(ae * C50789) / C49932) / C50003 -
                            C50767 / C50079 - (C50792 * ce) / C50079 +
                            C50070 * ((-(C50773 * ce) / C49932) / C50003 -
                                      (ae * C50769) / C50079 -
                                      (C50070 * C50164 *
                                       (C50110 * C50111 +
                                        C50073 * bs[8] * std::pow(C50066, 8)) *
                                       C50071) /
                                          C50079))));
    const double C23095 =
        4 * ((-2 * C50391) / C49932 - (C50070 * C50532) / C49932 -
             (C50522 * ce) / C49932) +
        C50070 * ((-3 * C50532) / C49932 + C50070 * C50819 -
                  (C50805 * ce) / C49932) -
        ((3 * C50522 + C50070 * C50805) * ce) / C49932;
    const double C50895 = C50848 + C50893;
    const double C5155 = C5154 + C5147;
    const double C27057 = C27055 + C27056;
    const double C351 = C343 + C344;
    const double C8409 = C344 + C343;
    const double C524 = C522 - C518;
    const double C1746 = C1744 - C1736;
    const double C10980 = C10976 * C51248;
    const double C33547 = C33543 * C51248;
    const double C2608 = C669 + C668;
    const double C2603 = C668 + C669;
    const double C8558 = C8557 - C1620;
    const double C9839 = C9838 + C1620;
    const double C9988 = C9987 - C1884;
    const double C10185 = C10184 + C1884;
    const double C11168 = C11166 * C51248;
    const double C14026 = C14016 * C51248;
    const double C33735 = C33733 * C51248;
    const double C41153 = C41147 * C51248;
    const double C11359 = C11357 * C51260;
    const double C12849 = C11357 * C51260;
    const double C33926 = C33924 * C51260;
    const double C35416 = C33924 * C51260;
    const double C20533 = C20530 - C3295;
    const double C21706 = C21705 - C5151;
    const double C31347 = C31337 * C51248;
    const double C36950 = C36940 * C51248;
    const double C31515 = C31504 * C51260;
    const double C33240 = C31504 * C51260;
    const double C37146 = C37144 * C51260;
    const double C38891 = C37144 * C51260;
    const double C342 = C333 + C334;
    const double C512 = C501 + C502;
    const double C10973 = C10956 + C10957;
    const double C33540 = C33523 + C33524;
    const double C665 = C658 + C659;
    const double C1616 = C1609 + C1610;
    const double C11165 = C11152 + C11153;
    const double C33732 = C33719 + C33720;
    const double C1042 = C1035 + C1036;
    const double C5471 = C5452 + C5453;
    const double C11355 = C11341 + C11342;
    const double C33922 = C33908 + C33909;
    const double C44531 = C44512 + C44513;
    const double C3297 = C3288 * C51260;
    const double C4639 = C3288 * C51260;
    const double C3484 = C3480 * C988;
    const double C4805 = C3480 * C1988;
    const double C39836 =
        (5 * (3 * C50445 + C50070 * C50618 + C50603 * ae) +
         C50070 * (4 * C50618 + C50070 * C50896 + C50881 * ae) +
         (4 * C50603 + C50070 * C50881) * ae) /
        C50003;
    const double C50897 = C50895 - C50880;
    const double C10983 = C10980 + C10981;
    const double C33550 = C33547 + C33548;
    const double C2961 = C2608 * C51168;
    const double C25099 = C2608 * C51168;
    const double C11170 = C11168 + C11169;
    const double C14029 = C14025 + C14026;
    const double C33737 = C33735 + C33736;
    const double C41156 = C41152 + C41153;
    const double C11361 = C11360 - C11359;
    const double C12852 = C12851 - C12849;
    const double C33928 = C33927 - C33926;
    const double C35419 = C35418 - C35416;
    const double C20536 = C20533 * C51163;
    const double C21707 = C21706 * C51163;
    const double C31353 = C31347 + C31348;
    const double C36956 = C36950 + C36951;
    const double C31521 = C31520 - C31515;
    const double C33243 = C33242 - C33240;
    const double C37148 = C37147 - C37146;
    const double C38894 = C38893 - C38891;
    const double C350 = C342 * C51248;
    const double C520 = C512 * C51260;
    const double C1740 = C512 * C51260;
    const double C671 = C665 * C51248;
    const double C1622 = C1616 * C51260;
    const double C1888 = C1616 * C51260;
    const double C1048 = C1042 * C988;
    const double C2010 = C1042 * C1988;
    const double C39838 =
        5 * (3 * C50616 + (C50619 * ae) / C50003 - (C50618 * ce) / C50079 +
             C50070 * C50892) +
        ((4 * C50619 + C50070 * C50897 - (C50881 * ce) / C49932) * ae) /
            C50003 -
        ((4 * C50618 + C50070 * C50896 + C50881 * ae) * ce) / C50079 +
        C50070 *
            (4 * C50892 + (C50897 * ae) / C50003 - (C50896 * ce) / C50079 +
             C50070 *
                 (3 * C50886 + (C50890 * ae) / C50003 - (C50888 * ce) / C50079 +
                  C50070 *
                      (2 * C50878 - (ae * C50872) / C50079 -
                       (C50875 * ce) / C50079 +
                       C50070 *
                           ((-(ae * C50850) / C49932) / C50003 -
                            C50118 / C50079 - (C50853 * ce) / C50079 +
                            C50070 * ((-(C50228 * ce) / C49932) / C50003 -
                                      (ae * C50224) / C50079 -
                                      (C50070 *
                                       (C50110 * C50111 +
                                        C50073 * bs[8] * std::pow(C50066, 8)) *
                                       C50071) /
                                          C50079)))));
    const double C39837 =
        5 * ((-3 * C50444) / C49932 + C50070 * C50619 -
             (C50603 * ce) / C49932) +
        C50070 * (4 * C50619 + C50070 * C50897 - (C50881 * ce) / C49932) -
        ((4 * C50603 + C50070 * C50881) * ce) / C49932;
    const double C2968 = C2961 + C2962;
    const double C25102 = C25099 + C25100;
    const double C31354 = C31353 * C51163;
    const double C36957 = C36956 * C51163;
    const double C31522 = C31521 * C51163;
    const double C33244 = C33243 * C51163;
    const double C37149 = C37148 * C51163;
    const double C38895 = C38894 * C51163;
    d2ee[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C118 +
              (C117 * C127 + C51318 * C140) * C51248) *
                 C51490 +
             (C178 + C179) * C51491 + C188 * C8259) *
                C51462 +
            ((C2617 + C2618) * C51490 + C2590 * C51491 + C2602 * C8259) *
                C51356) *
               C1350 -
           ((C2608 * C8259 + C2600 * C51491 + (C2620 + C2619) * C51490) *
                C51356 +
            (C352 * C8259 + C2601 * C51491 + (C2618 + C2617) * C51490) *
                C51462) *
               C51234) *
              C51492 +
          (((C2590 * C51490 + C2602 * C51491 + C8409 * C8259) * C51462 +
            (C2595 * C51490 + C2603 * C51491 + (C670 + C671) * C8259) *
                C51356) *
               C51234 -
           ((C351 * C8259 + C352 * C51491 + C2601 * C51490) * C51356 +
            (C191 * C8259 + (C181 + C180) * C51491 + (C179 + C178) * C51490) *
                C51462) *
               C1350) *
              C51477 +
          (((C188 * C51490 + C189 * C51491 + (C185 + C184) * C8259) * C51462 +
            (C2602 * C51490 + C8409 * C51491 + (C349 + C350) * C8259) *
                C51356) *
               C1350 -
           ((((C117 * C640 + C51318 * C646) * C51248 +
              (C117 * C631 + C51318 * C641) * C118) *
                 C8259 +
             (C671 + C670) * C51491 + C2608 * C51490) *
                C51356 +
            ((C350 + C349) * C8259 + C351 * C51491 + C352 * C51490) * C51462) *
               C51234) *
              C1354)) /
        (p * q * std::sqrt(p + q));
    d2ee[1] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C118 +
              (C117 * C127 + C51318 * C140) * C51248) *
                 C51490 +
             (C178 + C179) * C51491 + C188 * C8259) *
                C51462 +
            ((C2617 + C2618) * C51490 + C2590 * C51491 + C2602 * C8259) *
                C51356) *
               C51493 -
           ((C2608 * C8259 + C2600 * C51491 + (C2620 + C2619) * C51490) *
                C51356 +
            (C352 * C8259 + C2601 * C51491 + (C2618 + C2617) * C51490) *
                C51462) *
               C51480 +
           ((C2949 * C51490 + C2595 * C51491 + C2603 * C8259) * C51462 +
            ((C2971 + C2970) * C51490 + C2956 * C51491 +
             (C2623 + C2624) * C8259) *
                C51356) *
               C1455) *
              C1456 +
          (((C2590 * C51490 + C2602 * C51491 + C8409 * C8259) * C51462 +
            (C2595 * C51490 + C2603 * C51491 + (C670 + C671) * C8259) *
                C51356) *
               C51480 -
           ((C351 * C8259 + C352 * C51491 + C2601 * C51490) * C51356 +
            (C191 * C8259 + (C181 + C180) * C51491 + (C179 + C178) * C51490) *
                C51462) *
               C51493 -
           ((((C117 * C746 + C51318 * C754) * C51248 +
              (C117 * C742 + C51318 * C747) * C118) *
                 C8259 +
             (C2624 + C2623) * C51491 + C2951 * C51490) *
                C51356 +
            ((C671 + C670) * C8259 + C2608 * C51491 + C2600 * C51490) *
                C51462) *
               C1455) *
              C51191)) /
        (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C452 +
              (C117 * C127 + C51318 * C140) * C51448 -
              (C117 * C454 + C51318 * C460) * C453 -
              (C117 * C461 + C51318 * C472) * C51260) *
                 C51490 +
             (C479 + C480 - C513 - C514) * C51491 + C523 * C8259) *
                C51462 +
            ((C3254 + C3255 - C3289 - C3290) * C51490 + C4273 * C51491 +
             C8558 * C8259) *
                C51356) *
               C1350 +
           (((C3289 - (C3255 + C3254) + C3290) * C51490 + C4274 * C51491 +
             C9839 * C8259) *
                C51462 +
            ((C3291 - (C3261 + C3260) + C3292) * C51490 + C4275 * C51491 +
             (C2789 - (C2779 + C2780) + C2790) * C8259) *
                C51356) *
               C51234) *
              C1456 +
          ((((C513 - (C480 + C479) + C514) * C51490 +
             (C515 - (C486 + C485) + C516) * C51491 +
             (C517 - (C492 + C491) + C518) * C8259) *
                C51462 +
            (C4274 * C51490 + C9839 * C51491 +
             (C1621 - (C1607 + C1608) + C1622) * C8259) *
                C51356) *
               C1350 +
           ((C4273 * C51490 + C8558 * C51491 +
             (C1608 + C1607 - C1621 - C1622) * C8259) *
                C51462 +
            (C3293 * C51490 + (C2780 + C2779 - C2789 - C2790) * C51491 +
             (C664 * C452 + C665 * C51448 -
              (C117 * C863 + C51318 * C878) * C453 -
              (C117 * C879 + C51318 * C887) * C51260) *
                 C8259) *
                C51356) *
               C51234) *
              C51191)) /
        (p * q * std::sqrt(p + q));
    d2ee[3] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C1722 +
              (C117 * C127 + C51318 * C140) * C1720 -
              (C117 * C454 + C51318 * C460) * C1723 -
              (C117 * C461 + C51318 * C472) * C51260) *
                 C51490 +
             (C1725 + C1726 - C1727 - C1728) * C51491 + C1745 * C8259) *
                C51462 +
            ((C4624 + C4625 - C4626 - C4627) * C51490 + C4644 * C51491 +
             C9988 * C8259) *
                C51356) *
               C1350 +
           (((C4626 - (C4625 + C4624) + C4627) * C51490 + C4646 * C51491 +
             C10185 * C8259) *
                C51462 +
            ((C4631 - (C4630 + C4629) + C4632) * C51490 + C4647 * C51491 +
             (C4426 - (C4427 + C4428) + C4429) * C8259) *
                C51356) *
               C51234) *
              C51439 +
          ((((C1727 - (C1726 + C1725) + C1728) * C51490 +
             (C1731 - (C1730 + C1729) + C1732) * C51491 +
             (C1735 - (C1734 + C1733) + C1736) * C8259) *
                C51462 +
            (C4646 * C51490 + C10185 * C51491 +
             (C1885 - (C1886 + C1887) + C1888) * C8259) *
                C51356) *
               C1350 +
           ((C4644 * C51490 + C9988 * C51491 +
             (C1887 + C1886 - C1885 - C1888) * C8259) *
                C51462 +
            (C4645 * C51490 + (C4428 + C4427 - C4426 - C4429) * C51491 +
             (C664 * C1722 + C665 * C1720 -
              (C117 * C863 + C51318 * C878) * C1723 -
              (C117 * C879 + C51318 * C887) * C51260) *
                 C8259) *
                C51356) *
               C51234) *
              C51191)) /
        (p * q * std::sqrt(p + q));
    d2ee[4] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C117 * C119 + C51318 * C126) * C1722 +
                    (C117 * C127 + C51318 * C140) * C1720 -
                    (C117 * C454 + C51318 * C460) * C1723 -
                    (C117 * C461 + C51318 * C472) * C51260) *
                       C51490 +
                   (C1725 + C1726 - C1727 - C1728) * C51491 + C1745 * C8259) *
                      C51462 +
                  ((C4624 + C4625 - C4626 - C4627) * C51490 + C4644 * C51491 +
                   C9988 * C8259) *
                      C51356) *
                     C51493 +
                 (((C4626 - (C4625 + C4624) + C4627) * C51490 + C4646 * C51491 +
                   C10185 * C8259) *
                      C51462 +
                  ((C4631 - (C4630 + C4629) + C4632) * C51490 + C4647 * C51491 +
                   (C4426 - (C4427 + C4428) + C4429) * C8259) *
                      C51356) *
                     C51480 +
                 ((C5153 * C51490 + C4645 * C51491 +
                   (C4428 + C4427 - C4426 - C4429) * C8259) *
                      C51462 +
                  ((C5150 + C5149 - C5148 - C5151) * C51490 +
                   (C4638 + C4637 - C4636 - C4639) * C51491 +
                   (C2615 * C1722 + C2616 * C1720 -
                    (C117 * C4262 + C51318 * C4263) * C1723 -
                    (C117 * C4264 + C51318 * C4265) * C51260) *
                       C8259) *
                      C51356) *
                     C1455) *
                C51186) /
               (p * q * std::sqrt(p + q));
    d2ee[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C1989 +
             (C117 * C127 + C51318 * C140) * C51494 -
             (C117 * C454 + C51318 * C460) * C1990 -
             (C117 * C461 + C51318 * C472) * C51483 +
             (C117 * C992 + C51318 * C997) * C1991 +
             (C117 * C998 + C51318 * C1007) * C1988) *
                C51490 +
            (C1993 + C1994 - C1995 - C1996 + C1997 + C1998) * C51491 +
            (C1999 + C2000 - C2001 - C2002 + C2003 + C2004) * C8259) *
               C51462 +
           ((C5302 + C5303 - C5304 - C5305 + C5306 + C5307) * C51490 +
            (C4794 + C4795 - C4796 - C4797 + C4798 + C4799) * C51491 +
            (C10332 + C10333 - C10334 - C10335 + C10336 + C10337) * C8259) *
               C51356) *
              C1350 +
          (((C5304 - (C5303 + C5302) + C5305 - C5306 - C5307) * C51490 +
            (C4796 - (C4795 + C4794) + C4797 - C4798 - C4799) * C51491 +
            (C10334 - (C10333 + C10332) + C10335 - C10336 - C10337) * C8259) *
               C51462 +
           ((C5310 - (C5309 + C5308) + C5311 - C5312 - C5313) * C51490 +
            (C4802 - (C4801 + C4800) + C4803 - C4804 - C4805) * C51491 +
            (C2785 * C1990 - (C663 * C51494 + C662 * C1989) + C2786 * C51483 -
             (C117 * C3450 + C51318 * C3455) * C1991 -
             (C117 * C3456 + C51318 * C3459) * C1988) *
                C8259) *
               C51356) *
              C51234) *
         C51186) /
        (p * q * std::sqrt(p + q));
    d2ee[6] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C118 +
              (C117 * C127 + C51318 * C140) * C51248) *
                 C51490 +
             (C178 + C179) * C51491 + C188 * C8259) *
                C51462 +
            ((C2617 + C2618) * C51490 + C2590 * C51491 + C2602 * C8259) *
                C51356) *
               C622 -
           ((C2608 * C8259 + C2600 * C51491 + (C2620 + C2619) * C51490) *
                C51356 +
            (C352 * C8259 + C2601 * C51491 + (C2618 + C2617) * C51490) *
                C51462) *
               C623 +
           ((C2949 * C51490 + C2595 * C51491 + C2603 * C8259) * C51462 +
            ((C2971 + C2970) * C51490 + C2956 * C51491 +
             (C2623 + C2624) * C8259) *
                C51356) *
               C624) *
              C51439 +
          (((C2590 * C51490 + C2602 * C51491 + C8409 * C8259) * C51462 +
            (C2595 * C51490 + C2603 * C51491 + (C670 + C671) * C8259) *
                C51356) *
               C623 -
           ((C351 * C8259 + C352 * C51491 + C2601 * C51490) * C51356 +
            (C191 * C8259 + (C181 + C180) * C51491 + (C179 + C178) * C51490) *
                C51462) *
               C622 -
           ((((C117 * C746 + C51318 * C754) * C51248 +
              (C117 * C742 + C51318 * C747) * C118) *
                 C8259 +
             (C2624 + C2623) * C51491 + C2951 * C51490) *
                C51356 +
            ((C671 + C670) * C8259 + C2608 * C51491 + C2600 * C51490) *
                C51462) *
               C624) *
              C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C118 +
             (C117 * C127 + C51318 * C140) * C51248) *
                C51490 +
            (C178 + C179) * C51491 + C188 * C8259) *
               C51462 +
           ((C2617 + C2618) * C51490 + C2590 * C51491 + C2602 * C8259) *
               C51356) *
              C51218 * C113 -
          ((C351 * C8259 + C352 * C51491 + C2601 * C51490) * C51356 +
           (C191 * C8259 + (C181 + C180) * C51491 + (C179 + C178) * C51490) *
               C51462) *
              C51218 * C114 +
          ((C188 * C51490 + C189 * C51491 + (C185 + C184) * C8259) * C51462 +
           (C2602 * C51490 + (C344 + C343) * C51491 + (C349 + C350) * C8259) *
               C51356) *
              C51218 * C115 -
          ((((C117 * C310 + C51318 * C317) * C51248 +
             (C117 * C299 + C51318 * C311) * C118) *
                C8259 +
            (C350 + C349) * C51491 + C351 * C51490) *
               C51356 +
           ((C187 + C186) * C8259 + C190 * C51491 + C191 * C51490) * C51462) *
              C51218 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C989 +
             (C117 * C127 + C51318 * C140) * C986 -
             (C117 * C454 + C51318 * C460) * C990 -
             (C117 * C461 + C51318 * C472) * C987 +
             (C117 * C992 + C51318 * C997) * C991 +
             (C117 * C998 + C51318 * C1007) * C988) *
                C51490 +
            (C1013 + C1014 - C1015 - C1016 + C1043 + C1044) * C51491 +
            (C1021 + C1022 - C1023 - C1024 + C1045 + C1046) * C8259) *
               C51462 +
           ((C3639 + C3640 - C3641 - C3642 + C3659 + C3660) * C51490 +
            (C3461 + C3462 - C3463 - C3464 + C3481 + C3482) * C51491 +
            (C9095 + C9096 - C9097 - C9098 + C9105 + C9106) * C8259) *
               C51356) *
              C51218 * C51439 +
          (((C1015 - (C1014 + C1013) + C1016 - C1043 - C1044) * C51490 +
            (C1023 - (C1022 + C1021) + C1024 - C1045 - C1046) * C51491 +
            (C1031 - (C1030 + C1029) + C1032 - C1047 - C1048) * C8259) *
               C51462 +
           ((C3463 - (C3462 + C3461) + C3464 - C3481 - C3482) * C51490 +
            (C9097 - (C9096 + C9095) + C9098 - C9105 - C9106) * C51491 +
            (C1615 * C990 - (C335 * C986 + C336 * C989) + C1616 * C987 -
             (C117 * C1149 + C51318 * C1156) * C991 -
             (C117 * C1157 + C51318 * C1161) * C988) *
                C8259) *
               C51356) *
              C51218 * C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C118 +
             (C117 * C127 + C51318 * C140) * C51248) *
                C51490 +
            (C178 + C179) * C51491 + C188 * C8259) *
               C51462 +
           ((C2617 + C2618) * C51490 + C2590 * C51491 + C2602 * C8259) *
               C51356) *
              C737 -
          ((C2608 * C8259 + C2600 * C51491 + (C2620 + C2619) * C51490) *
               C51356 +
           (C352 * C8259 + C2601 * C51491 + (C2618 + C2617) * C51490) *
               C51462) *
              C738 +
          ((C2949 * C51490 + C2595 * C51491 + C2603 * C8259) * C51462 +
           ((C2971 + C2970) * C51490 + C2956 * C51491 +
            (C2623 + C2624) * C8259) *
               C51356) *
              C739 -
          ((((C117 * C2943 + C51318 * C2947) * C51248 +
             (C117 * C2938 + C51318 * C2944) * C118) *
                C8259 +
            (C2973 + C2972) * C51491 + (C3091 + C3090) * C51490) *
               C51356 +
           ((C2624 + C2623) * C8259 + C2951 * C51491 + C3081 * C51490) *
               C51462) *
              C740) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C118 +
              (C117 * C127 + C51318 * C140) * C51248) *
                 C51490 +
             (C178 + C179) * C51491 + C188 * C8259) *
                C51462 +
            ((C2617 + C2618) * C51490 + C2590 * C51491 + C2602 * C8259) *
                C51356) *
               C51446 -
           ((C2608 * C8259 + C2600 * C51491 + (C2620 + C2619) * C51490) *
                C51356 +
            (C352 * C8259 + C2601 * C51491 + (C2618 + C2617) * C51490) *
                C51462) *
               C51234) *
              C291 +
          (((C2590 * C51490 + C2602 * C51491 + C8409 * C8259) * C51462 +
            (C2595 * C51490 + C2603 * C51491 + (C670 + C671) * C8259) *
                C51356) *
               C51234 -
           ((C351 * C8259 + C352 * C51491 + C2601 * C51490) * C51356 +
            (C191 * C8259 + (C181 + C180) * C51491 + (C179 + C178) * C51490) *
                C51462) *
               C51446) *
              C292 +
          (((C188 * C51490 + C189 * C51491 + (C185 + C184) * C8259) * C51462 +
            (C2602 * C51490 + C8409 * C51491 + (C349 + C350) * C8259) *
                C51356) *
               C51446 -
           ((((C117 * C640 + C51318 * C646) * C51248 +
              (C117 * C631 + C51318 * C641) * C118) *
                 C8259 +
             (C671 + C670) * C51491 + C2608 * C51490) *
                C51356 +
            ((C350 + C349) * C8259 + C351 * C51491 + C352 * C51490) * C51462) *
               C51234) *
              C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C989 +
             (C117 * C127 + C51318 * C140) * C986 -
             (C117 * C454 + C51318 * C460) * C990 -
             (C117 * C461 + C51318 * C472) * C987 +
             (C117 * C992 + C51318 * C997) * C991 +
             (C117 * C998 + C51318 * C1007) * C988) *
                C51490 +
            (C1013 + C1014 - C1015 - C1016 + C1043 + C1044) * C51491 +
            (C1021 + C1022 - C1023 - C1024 + C1045 + C1046) * C8259) *
               C51462 +
           ((C3639 + C3640 - C3641 - C3642 + C3659 + C3660) * C51490 +
            (C3461 + C3462 - C3463 - C3464 + C3481 + C3482) * C51491 +
            (C9095 + C9096 - C9097 - C9098 + C9105 + C9106) * C8259) *
               C51356) *
              C51446 +
          (((C3641 - (C3640 + C3639) + C3642 - C3659 - C3660) * C51490 +
            (C3463 - (C3462 + C3461) + C3464 - C3481 - C3482) * C51491 +
            (C9097 - (C9096 + C9095) + C9098 - C9105 - C9106) * C8259) *
               C51462 +
           ((C3649 - (C3648 + C3647) + C3650 - C3661 - C3662) * C51490 +
            (C3471 - (C3470 + C3469) + C3472 - C3483 - C3484) * C51491 +
            (C2785 * C990 - (C663 * C986 + C662 * C989) + C2786 * C987 -
             (C117 * C3450 + C51318 * C3455) * C991 -
             (C117 * C3456 + C51318 * C3459) * C988) *
                C8259) *
               C51356) *
              C51234) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[8] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                (((((C117 * C119 + C51318 * C126) * C452 +
                    (C117 * C127 + C51318 * C140) * C51448 -
                    (C117 * C454 + C51318 * C460) * C453 -
                    (C117 * C461 + C51318 * C472) * C51260) *
                       C51490 +
                   (C479 + C480 - C513 - C514) * C51491 + C523 * C8259) *
                      C51462 +
                  ((C3254 + C3255 - C3289 - C3290) * C51490 + C4273 * C51491 +
                   C8558 * C8259) *
                      C51356) *
                     C622 +
                 (((C3289 - (C3255 + C3254) + C3290) * C51490 + C4274 * C51491 +
                   (C1619 - (C1601 + C1602) + C1620) * C8259) *
                      C51462 +
                  ((C3291 - (C3261 + C3260) + C3292) * C51490 + C4275 * C51491 +
                   (C2789 - (C2779 + C2780) + C2790) * C8259) *
                      C51356) *
                     C623 +
                 ((C3300 * C51490 + C3293 * C51491 +
                   (C2780 + C2779 - C2789 - C2790) * C8259) *
                      C51462 +
                  ((C3270 + C3269 - C3294 - C3295) * C51490 +
                   (C3276 + C3275 - C3296 - C3297) * C51491 +
                   (C2615 * C452 + C2616 * C51448 -
                    (C117 * C4262 + C51318 * C4263) * C453 -
                    (C117 * C4264 + C51318 * C4265) * C51260) *
                       C8259) *
                      C51356) *
                     C624) *
                C51186) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                (((((C117 * C119 + C51318 * C126) * C452 +
                    (C117 * C127 + C51318 * C140) * C51448 -
                    (C117 * C454 + C51318 * C460) * C453 -
                    (C117 * C461 + C51318 * C472) * C51260) *
                       C51490 +
                   (C479 + C480 - C513 - C514) * C51491 + C523 * C8259) *
                      C51462 +
                  ((C3254 + C3255 - C3289 - C3290) * C51490 + C4273 * C51491 +
                   C8558 * C8259) *
                      C51356) *
                     C51218 * C291 +
                 (((C513 - (C480 + C479) + C514) * C51490 +
                   (C515 - (C486 + C485) + C516) * C51491 +
                   (C517 - (C492 + C491) + C518) * C8259) *
                      C51462 +
                  (C4274 * C51490 + (C1619 - (C1601 + C1602) + C1620) * C51491 +
                   (C1621 - (C1607 + C1608) + C1622) * C8259) *
                      C51356) *
                     C51218 * C292 +
                 ((C523 * C51490 + C524 * C51491 +
                   (C500 + C499 - C519 - C520) * C8259) *
                      C51462 +
                  (C8558 * C51490 + (C1608 + C1607 - C1621 - C1622) * C51491 +
                   (C341 * C452 + C342 * C51448 -
                    (C117 * C1588 + C51318 * C1589) * C453 -
                    (C117 * C1590 + C51318 * C1591) * C51260) *
                       C8259) *
                      C51356) *
                     C51218 * C293)) /
                   (p * q * std::sqrt(p + q)) +
               (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                ((((C117 * C119 + C51318 * C126) * C1232 +
                   (C117 * C127 + C51318 * C140) * C1228 -
                   (C117 * C454 + C51318 * C460) * C1233 -
                   (C117 * C461 + C51318 * C472) * C1229 +
                   (C117 * C992 + C51318 * C997) * C1234 +
                   (C117 * C998 + C51318 * C1007) * C1230 -
                   (C117 * C1236 + C51318 * C1240) * C1235 -
                   (C117 * C1241 + C51318 * C1248) * C1231) *
                      C51490 +
                  (C168 * C1232 + C169 * C1228 - C503 * C1233 - C504 * C1229 +
                   C1037 * C1234 + C1038 * C1230 -
                   (C117 * C1237 + C51318 * C1242) * C1235 -
                   (C117 * C1243 + C51318 * C1249) * C1231) *
                      C51491 +
                  (C170 * C1232 + C171 * C1228 - C506 * C1233 - C507 * C1229 +
                   C1039 * C1234 + C1040 * C1230 -
                   (C117 * C1238 + C51318 * C1244) * C1235 -
                   (C117 * C1245 + C51318 * C1250) * C1231) *
                      C8259) *
                     C51462 +
                 ((C2609 * C1232 + C2610 * C1228 - C3279 * C1233 -
                   C3280 * C1229 + C3655 * C1234 + C3656 * C1230 -
                   (C117 * C3760 + C51318 * C3764) * C1235 -
                   (C117 * C3765 + C51318 * C3772) * C1231) *
                      C51490 +
                  (C340 * C1232 + C339 * C1228 - C1611 * C1233 - C1612 * C1229 +
                   C3477 * C1234 + C3478 * C1230 -
                   (C117 * C3761 + C51318 * C3766) * C1235 -
                   (C117 * C3767 + C51318 * C3773) * C1231) *
                      C51491 +
                  (C338 * C1232 + C337 * C1228 - C1613 * C1233 - C1614 * C1229 +
                   C9103 * C1234 + C9104 * C1230 -
                   (C117 * C7165 + C51318 * C7166) * C1235 -
                   (C117 * C7167 + C51318 * C7168) * C1231) *
                      C8259) *
                     C51356) *
                C51218 * C51186) /
                   (p * q * std::sqrt(p + q));
    d2ee[9] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C117 * C119 + C51318 * C126) * C1722 +
                    (C117 * C127 + C51318 * C140) * C1720 -
                    (C117 * C454 + C51318 * C460) * C1723 -
                    (C117 * C461 + C51318 * C472) * C51260) *
                       C51490 +
                   (C1725 + C1726 - C1727 - C1728) * C51491 + C1745 * C8259) *
                      C51462 +
                  ((C4624 + C4625 - C4626 - C4627) * C51490 + C4644 * C51491 +
                   C9988 * C8259) *
                      C51356) *
                     C51218 * C51492 +
                 (((C1727 - (C1726 + C1725) + C1728) * C51490 +
                   (C1731 - (C1730 + C1729) + C1732) * C51491 +
                   (C1735 - (C1734 + C1733) + C1736) * C8259) *
                      C51462 +
                  (C4646 * C51490 + (C1881 - (C1882 + C1883) + C1884) * C51491 +
                   (C1885 - (C1886 + C1887) + C1888) * C8259) *
                      C51356) *
                     C51218 * C51477 +
                 ((C1745 * C51490 + C1746 * C51491 +
                   (C1739 + C1738 - C1737 - C1740) * C8259) *
                      C51462 +
                  (C9988 * C51490 + (C1887 + C1886 - C1885 - C1888) * C51491 +
                   (C341 * C1722 + C342 * C1720 -
                    (C117 * C1588 + C51318 * C1589) * C1723 -
                    (C117 * C1590 + C51318 * C1591) * C51260) *
                       C8259) *
                      C51356) *
                     C51218 * C1354)) /
               (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C1722 +
              (C117 * C127 + C51318 * C140) * C1720 -
              (C117 * C454 + C51318 * C460) * C1723 -
              (C117 * C461 + C51318 * C472) * C51260) *
                 C51490 +
             (C1725 + C1726 - C1727 - C1728) * C51491 + C1745 * C8259) *
                C51462 +
            ((C4624 + C4625 - C4626 - C4627) * C51490 + C4644 * C51491 +
             C9988 * C8259) *
                C51356) *
               C51446 +
           (((C4626 - (C4625 + C4624) + C4627) * C51490 + C4646 * C51491 +
             C10185 * C8259) *
                C51462 +
            ((C4631 - (C4630 + C4629) + C4632) * C51490 + C4647 * C51491 +
             (C4426 - (C4427 + C4428) + C4429) * C8259) *
                C51356) *
               C51234) *
              C1456 +
          ((((C1727 - (C1726 + C1725) + C1728) * C51490 +
             (C1731 - (C1730 + C1729) + C1732) * C51491 +
             (C1735 - (C1734 + C1733) + C1736) * C8259) *
                C51462 +
            (C4646 * C51490 + C10185 * C51491 +
             (C1885 - (C1886 + C1887) + C1888) * C8259) *
                C51356) *
               C51446 +
           ((C4644 * C51490 + C9988 * C51491 +
             (C1887 + C1886 - C1885 - C1888) * C8259) *
                C51462 +
            (C4645 * C51490 + (C4428 + C4427 - C4426 - C4429) * C51491 +
             (C664 * C1722 + C665 * C1720 -
              (C117 * C863 + C51318 * C878) * C1723 -
              (C117 * C879 + C51318 * C887) * C51260) *
                 C8259) *
                C51356) *
               C51234) *
              C51191)) /
        (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C1989 +
             (C117 * C127 + C51318 * C140) * C51494 -
             (C117 * C454 + C51318 * C460) * C1990 -
             (C117 * C461 + C51318 * C472) * C51483 +
             (C117 * C992 + C51318 * C997) * C1991 +
             (C117 * C998 + C51318 * C1007) * C1988) *
                C51490 +
            (C1993 + C1994 - C1995 - C1996 + C1997 + C1998) * C51491 +
            (C1999 + C2000 - C2001 - C2002 + C2003 + C2004) * C8259) *
               C51462 +
           ((C5302 + C5303 - C5304 - C5305 + C5306 + C5307) * C51490 +
            (C4794 + C4795 - C4796 - C4797 + C4798 + C4799) * C51491 +
            (C10332 + C10333 - C10334 - C10335 + C10336 + C10337) * C8259) *
               C51356) *
              C51218 * C1456 +
          (((C1995 - (C1994 + C1993) + C1996 - C1997 - C1998) * C51490 +
            (C2001 - (C2000 + C1999) + C2002 - C2003 - C2004) * C51491 +
            (C2007 - (C2006 + C2005) + C2008 - C2009 - C2010) * C8259) *
               C51462 +
           ((C4796 - (C4795 + C4794) + C4797 - C4798 - C4799) * C51490 +
            (C10334 - (C10333 + C10332) + C10335 - C10336 - C10337) * C51491 +
            (C1615 * C1990 - (C335 * C51494 + C336 * C1989) + C1616 * C51483 -
             (C117 * C1149 + C51318 * C1156) * C1991 -
             (C117 * C1157 + C51318 * C1161) * C1988) *
                C8259) *
               C51356) *
              C51218 * C51191)) /
        (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C118 +
             (C117 * C127 + C51318 * C140) * C51248) *
                C51490 +
            (C178 + C179) * C51491 + C188 * C8259) *
               C51462 +
           ((C2617 + C2618) * C51490 + C2590 * C51491 + C2602 * C8259) *
               C51356) *
              C51218 * C113 -
          ((C351 * C8259 + C352 * C51491 + C2601 * C51490) * C51356 +
           (C191 * C8259 + (C181 + C180) * C51491 + (C179 + C178) * C51490) *
               C51462) *
              C51218 * C114 +
          ((C188 * C51490 + C189 * C51491 + (C185 + C184) * C8259) * C51462 +
           (C2602 * C51490 + (C344 + C343) * C51491 + (C349 + C350) * C8259) *
               C51356) *
              C51218 * C115 -
          ((((C117 * C310 + C51318 * C317) * C51248 +
             (C117 * C299 + C51318 * C311) * C118) *
                C8259 +
            (C350 + C349) * C51491 + C351 * C51490) *
               C51356 +
           ((C187 + C186) * C8259 + C190 * C51491 + C191 * C51490) * C51462) *
              C51218 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C118 +
              (C117 * C127 + C51318 * C140) * C51248) *
                 C51490 +
             (C178 + C179) * C51491 + C188 * C8259) *
                C51462 +
            ((C2617 + C2618) * C51490 + C2590 * C51491 + C2602 * C8259) *
                C51356) *
               C622 -
           ((C2608 * C8259 + C2600 * C51491 + (C2620 + C2619) * C51490) *
                C51356 +
            (C352 * C8259 + C2601 * C51491 + (C2618 + C2617) * C51490) *
                C51462) *
               C623 +
           ((C2949 * C51490 + C2595 * C51491 + C2603 * C8259) * C51462 +
            ((C2971 + C2970) * C51490 + C2956 * C51491 +
             (C2623 + C2624) * C8259) *
                C51356) *
               C624) *
              C51439 +
          (((C2590 * C51490 + C2602 * C51491 + C8409 * C8259) * C51462 +
            (C2595 * C51490 + C2603 * C51491 + (C670 + C671) * C8259) *
                C51356) *
               C623 -
           ((C351 * C8259 + C352 * C51491 + C2601 * C51490) * C51356 +
            (C191 * C8259 + (C181 + C180) * C51491 + (C179 + C178) * C51490) *
                C51462) *
               C622 -
           ((((C117 * C746 + C51318 * C754) * C51248 +
              (C117 * C742 + C51318 * C747) * C118) *
                 C8259 +
             (C2624 + C2623) * C51491 + C2951 * C51490) *
                C51356 +
            ((C671 + C670) * C8259 + C2608 * C51491 + C2600 * C51490) *
                C51462) *
               C624) *
              C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C118 +
              (C117 * C127 + C51318 * C140) * C51248) *
                 C51490 +
             (C178 + C179) * C51491 + C188 * C8259) *
                C51462 +
            ((C2617 + C2618) * C51490 + C2590 * C51491 + C2602 * C8259) *
                C51356) *
               C51446 -
           ((C2608 * C8259 + C2600 * C51491 + (C2620 + C2619) * C51490) *
                C51356 +
            (C352 * C8259 + C2601 * C51491 + (C2618 + C2617) * C51490) *
                C51462) *
               C51234) *
              C291 +
          (((C2590 * C51490 + C2602 * C51491 + C8409 * C8259) * C51462 +
            (C2595 * C51490 + C2603 * C51491 + (C670 + C671) * C8259) *
                C51356) *
               C51234 -
           ((C351 * C8259 + C352 * C51491 + C2601 * C51490) * C51356 +
            (C191 * C8259 + (C181 + C180) * C51491 + (C179 + C178) * C51490) *
                C51462) *
               C51446) *
              C292 +
          (((C188 * C51490 + C189 * C51491 + (C185 + C184) * C8259) * C51462 +
            (C2602 * C51490 + C8409 * C51491 + (C349 + C350) * C8259) *
                C51356) *
               C51446 -
           ((((C117 * C640 + C51318 * C646) * C51248 +
              (C117 * C631 + C51318 * C641) * C118) *
                 C8259 +
             (C671 + C670) * C51491 + C2608 * C51490) *
                C51356 +
            ((C350 + C349) * C8259 + C351 * C51491 + C352 * C51490) * C51462) *
               C51234) *
              C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C118 +
             (C117 * C127 + C51318 * C140) * C51248) *
                C51490 +
            (C178 + C179) * C51491 + C188 * C8259) *
               C51462 +
           ((C2617 + C2618) * C51490 + C2590 * C51491 + C2602 * C8259) *
               C51356) *
              C737 -
          ((C2608 * C8259 + C2600 * C51491 + (C2620 + C2619) * C51490) *
               C51356 +
           (C352 * C8259 + C2601 * C51491 + (C2618 + C2617) * C51490) *
               C51462) *
              C738 +
          ((C2949 * C51490 + C2595 * C51491 + C2603 * C8259) * C51462 +
           ((C2971 + C2970) * C51490 + C2956 * C51491 +
            (C2623 + C2624) * C8259) *
               C51356) *
              C739 -
          ((((C117 * C2943 + C51318 * C2947) * C51248 +
             (C117 * C2938 + C51318 * C2944) * C118) *
                C8259 +
            (C2973 + C2972) * C51491 + (C3091 + C3090) * C51490) *
               C51356 +
           ((C2624 + C2623) * C8259 + C2951 * C51491 + C3081 * C51490) *
               C51462) *
              C740) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C452 +
             (C117 * C127 + C51318 * C140) * C51448 -
             (C117 * C454 + C51318 * C460) * C453 -
             (C117 * C461 + C51318 * C472) * C51260) *
                C51490 +
            (C479 + C480 - C513 - C514) * C51491 + C523 * C8259) *
               C51462 +
           ((C3254 + C3255 - C3289 - C3290) * C51490 + C4273 * C51491 +
            C8558 * C8259) *
               C51356) *
              C51218 * C291 +
          (((C513 - (C480 + C479) + C514) * C51490 +
            (C515 - (C486 + C485) + C516) * C51491 +
            (C517 - (C492 + C491) + C518) * C8259) *
               C51462 +
           (C4274 * C51490 + (C1619 - (C1601 + C1602) + C1620) * C51491 +
            (C1621 - (C1607 + C1608) + C1622) * C8259) *
               C51356) *
              C51218 * C292 +
          ((C523 * C51490 + C524 * C51491 +
            (C500 + C499 - C519 - C520) * C8259) *
               C51462 +
           (C8558 * C51490 + (C1608 + C1607 - C1621 - C1622) * C51491 +
            (C341 * C452 + C342 * C51448 -
             (C117 * C1588 + C51318 * C1589) * C453 -
             (C117 * C1590 + C51318 * C1591) * C51260) *
                C8259) *
               C51356) *
              C51218 * C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C452 +
             (C117 * C127 + C51318 * C140) * C51448 -
             (C117 * C454 + C51318 * C460) * C453 -
             (C117 * C461 + C51318 * C472) * C51260) *
                C51490 +
            (C479 + C480 - C513 - C514) * C51491 + C523 * C8259) *
               C51462 +
           ((C3254 + C3255 - C3289 - C3290) * C51490 + C4273 * C51491 +
            C8558 * C8259) *
               C51356) *
              C622 +
          (((C3289 - (C3255 + C3254) + C3290) * C51490 + C4274 * C51491 +
            (C1619 - (C1601 + C1602) + C1620) * C8259) *
               C51462 +
           ((C3291 - (C3261 + C3260) + C3292) * C51490 + C4275 * C51491 +
            (C2789 - (C2779 + C2780) + C2790) * C8259) *
               C51356) *
              C623 +
          ((C3300 * C51490 + C3293 * C51491 +
            (C2780 + C2779 - C2789 - C2790) * C8259) *
               C51462 +
           ((C3270 + C3269 - C3294 - C3295) * C51490 +
            (C3276 + C3275 - C3296 - C3297) * C51491 +
            (C2615 * C452 + C2616 * C51448 -
             (C117 * C4262 + C51318 * C4263) * C453 -
             (C117 * C4264 + C51318 * C4265) * C51260) *
                C8259) *
               C51356) *
              C624) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                  C118 +
              (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                  C51248) *
                 C2434 +
             ((C10958 + C10959) * C118 + (C10960 + C10961) * C51248) * C51168) *
                C51462 +
            (((C14017 + C14018) * C118 + (C14019 + C14020) * C51248) * C2434 +
             C14027 * C51168) *
                C51356) *
               C1350 -
           ((C14450 * C51168 +
             ((C14440 + C14441) * C51248 + (C14442 + C14443) * C118) * C2434) *
                C51356 +
            (C14028 * C51168 +
             ((C14020 + C14019) * C51248 + (C14018 + C14017) * C118) * C2434) *
                C51462) *
               C51234) *
              C51492 +
          (((C14027 * C2434 + C14029 * C51168) * C51462 +
            (C14451 * C2434 +
             ((C11528 + C11529) * C118 + (C11530 + C11531) * C51248) * C51168) *
                C51356) *
               C51234 -
           ((C11170 * C51168 + C14028 * C2434) * C51356 +
            (((C10965 + C10964) * C51248 + (C10963 + C10962) * C118) * C51168 +
             ((C10961 + C10960) * C51248 + (C10959 + C10958) * C118) * C2434) *
                C51462) *
               C1350) *
              C51477 +
          (((C10982 * C2434 +
             ((C10969 + C10968) * C118 + (C10967 + C10966) * C51248) * C51168) *
                C51462 +
            (C14029 * C2434 +
             ((C11162 + C11163) * C118 + (C11164 + C11165) * C51248) * C51168) *
                C51356) *
               C1350 -
           ((((C10924 * C879 + C51382 * C887 + C10923 * C639 + C51463 * C645) *
                  C51248 +
              (C10924 * C863 + C51382 * C878 + C10923 * C630 + C51463 * C638) *
                  C118) *
                 C51168 +
             ((C11531 + C11530) * C51248 + (C11529 + C11528) * C118) * C2434) *
                C51356 +
            (((C11165 + C11164) * C51248 + (C11163 + C11162) * C118) * C51168 +
             C11170 * C2434) *
                C51462) *
               C51234) *
              C1354)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                  C118 +
              (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                  C51248) *
                 C2434 +
             ((C10958 + C10959) * C118 + (C10960 + C10961) * C51248) * C51168) *
                C51462 +
            (((C14017 + C14018) * C118 + (C14019 + C14020) * C51248) * C2434 +
             C14027 * C51168) *
                C51356) *
               C51493 -
           ((C14450 * C51168 +
             ((C14440 + C14441) * C51248 + (C14442 + C14443) * C118) * C2434) *
                C51356 +
            (C14028 * C51168 +
             ((C14020 + C14019) * C51248 + (C14018 + C14017) * C118) * C2434) *
                C51462) *
               C51480 +
           ((((C14443 + C14442) * C118 + (C14441 + C14440) * C51248) * C2434 +
             C14451 * C51168) *
                C51462 +
            (((C14590 + C14591) * C118 + (C14592 + C14593) * C51248) * C2434 +
             ((C14446 + C14447) * C118 + (C14448 + C14449) * C51248) * C51168) *
                C51356) *
               C1455) *
              C1456 +
          (((C14027 * C2434 + C14029 * C51168) * C51462 +
            (C14451 * C2434 +
             ((C11528 + C11529) * C118 + (C11530 + C11531) * C51248) * C51168) *
                C51356) *
               C51480 -
           ((C11170 * C51168 + C14028 * C2434) * C51356 +
            (((C10965 + C10964) * C51248 + (C10963 + C10962) * C118) * C51168 +
             ((C10961 + C10960) * C51248 + (C10959 + C10958) * C118) * C2434) *
                C51462) *
               C51493 -
           ((((C10924 * C4264 + C51382 * C4265 + C10923 * C748 +
               C51463 * C755) *
                  C51248 +
              (C10924 * C4262 + C51382 * C4263 + C10923 * C743 +
               C51463 * C749) *
                  C118) *
                 C51168 +
             ((C14449 + C14448) * C51248 + (C14447 + C14446) * C118) * C2434) *
                C51356 +
            (((C11531 + C11530) * C51248 + (C11529 + C11528) * C118) * C51168 +
             C14450 * C2434) *
                C51462) *
               C1455) *
              C51191)) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                  C452 +
              (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                  C51448 -
              (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                  C453 -
              (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                  C51260) *
                 C2434 +
             ((C10958 + C10959) * C452 + (C10960 + C10961) * C51448 -
              (C11343 + C11344) * C453 - (C11345 + C11346) * C51260) *
                 C51168) *
                C51462 +
            (((C14017 + C14018) * C452 + (C14019 + C14020) * C51448 -
              (C14812 + C14813) * C453 - (C14814 + C14815) * C51260) *
                 C2434 +
             C16028 * C51168) *
                C51356) *
               C1350 +
           ((((C14813 + C14812) * C453 -
              ((C14020 + C14019) * C51448 + (C14018 + C14017) * C452) +
              (C14815 + C14814) * C51260) *
                 C2434 +
             C16029 * C51168) *
                C51462 +
            (((C14816 + C14817) * C453 -
              ((C14440 + C14441) * C51448 + (C14442 + C14443) * C452) +
              (C14818 + C14819) * C51260) *
                 C2434 +
             ((C14820 + C14821) * C453 - (C14418 * C51448 + C14419 * C452) +
              (C14822 + C14823) * C51260) *
                 C51168) *
                C51356) *
               C51234) *
              C1456 +
          (((((C11344 + C11343) * C453 -
              ((C10961 + C10960) * C51448 + (C10959 + C10958) * C452) +
              (C11346 + C11345) * C51260) *
                 C2434 +
             ((C11349 + C11348) * C453 -
              ((C10965 + C10964) * C51448 + (C10963 + C10962) * C452) +
              (C11351 + C11350) * C51260) *
                 C51168) *
                C51462 +
            (C16029 * C2434 +
             ((C12696 + C12697) * C453 - (C11166 * C51448 + C11167 * C452) +
              (C12698 + C12699) * C51260) *
                 C51168) *
                C51356) *
               C1350 +
           ((C16028 * C2434 +
             (C14015 * C452 + C14016 * C51448 - (C12697 + C12696) * C453 -
              (C12699 + C12698) * C51260) *
                 C51168) *
                C51462 +
            ((C14428 * C452 + C14429 * C51448 - (C14821 + C14820) * C453 -
              (C14823 + C14822) * C51260) *
                 C2434 +
             ((C11528 + C11529) * C452 + (C11530 + C11531) * C51448 -
              (C10924 * C3450 + C51382 * C3455 + C10923 * C862 +
               C51463 * C876) *
                  C453 -
              (C10924 * C3456 + C51382 * C3459 + C10923 * C877 +
               C51463 * C886) *
                  C51260) *
                 C51168) *
                C51356) *
               C51234) *
              C51191)) /
        (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                  C1722 +
              (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                  C1720 -
              (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                  C1723 -
              (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                  C51260) *
                 C2434 +
             ((C10958 + C10959) * C1722 + (C10960 + C10961) * C1720 -
              (C11343 + C11344) * C1723 - (C11345 + C11346) * C51260) *
                 C51168) *
                C51462 +
            (((C14017 + C14018) * C1722 + (C14019 + C14020) * C1720 -
              (C14812 + C14813) * C1723 - (C14814 + C14815) * C51260) *
                 C2434 +
             C16494 * C51168) *
                C51356) *
               C1350 +
           ((((C14813 + C14812) * C1723 -
              ((C14020 + C14019) * C1720 + (C14018 + C14017) * C1722) +
              (C14815 + C14814) * C51260) *
                 C2434 +
             C16495 * C51168) *
                C51462 +
            (((C14816 + C14817) * C1723 -
              ((C14440 + C14441) * C1720 + (C14442 + C14443) * C1722) +
              (C14818 + C14819) * C51260) *
                 C2434 +
             ((C14820 + C14821) * C1723 - (C14418 * C1720 + C14419 * C1722) +
              (C14822 + C14823) * C51260) *
                 C51168) *
                C51356) *
               C51234) *
              C51439 +
          (((((C11344 + C11343) * C1723 -
              ((C10961 + C10960) * C1720 + (C10959 + C10958) * C1722) +
              (C11346 + C11345) * C51260) *
                 C2434 +
             ((C11349 + C11348) * C1723 -
              ((C10965 + C10964) * C1720 + (C10963 + C10962) * C1722) +
              (C11351 + C11350) * C51260) *
                 C51168) *
                C51462 +
            (C16495 * C2434 +
             ((C12696 + C12697) * C1723 - (C11166 * C1720 + C11167 * C1722) +
              (C12698 + C12699) * C51260) *
                 C51168) *
                C51356) *
               C1350 +
           ((C16494 * C2434 +
             (C14015 * C1722 + C14016 * C1720 - (C12697 + C12696) * C1723 -
              (C12699 + C12698) * C51260) *
                 C51168) *
                C51462 +
            ((C14428 * C1722 + C14429 * C1720 - (C14821 + C14820) * C1723 -
              (C14823 + C14822) * C51260) *
                 C2434 +
             ((C11528 + C11529) * C1722 + (C11530 + C11531) * C1720 -
              (C10924 * C3450 + C51382 * C3455 + C10923 * C862 +
               C51463 * C876) *
                  C1723 -
              (C10924 * C3456 + C51382 * C3459 + C10923 * C877 +
               C51463 * C886) *
                  C51260) *
                 C51168) *
                C51356) *
               C51234) *
              C51191)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                 C1722 +
             (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                 C1720 -
             (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                 C1723 -
             (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                 C51260) *
                C2434 +
            ((C10958 + C10959) * C1722 + (C10960 + C10961) * C1720 -
             (C11343 + C11344) * C1723 - (C11345 + C11346) * C51260) *
                C51168) *
               C51462 +
           (((C14017 + C14018) * C1722 + (C14019 + C14020) * C1720 -
             (C14812 + C14813) * C1723 - (C14814 + C14815) * C51260) *
                C2434 +
            C16494 * C51168) *
               C51356) *
              C51493 +
          ((((C14813 + C14812) * C1723 -
             ((C14020 + C14019) * C1720 + (C14018 + C14017) * C1722) +
             (C14815 + C14814) * C51260) *
                C2434 +
            C16495 * C51168) *
               C51462 +
           (((C14816 + C14817) * C1723 -
             ((C14440 + C14441) * C1720 + (C14442 + C14443) * C1722) +
             (C14818 + C14819) * C51260) *
                C2434 +
            ((C14820 + C14821) * C1723 - (C14418 * C1720 + C14419 * C1722) +
             (C14822 + C14823) * C51260) *
                C51168) *
               C51356) *
              C51480 +
          ((((C14443 + C14442) * C1722 + (C14441 + C14440) * C1720 -
             (C14817 + C14816) * C1723 - (C14819 + C14818) * C51260) *
                C2434 +
            (C14428 * C1722 + C14429 * C1720 - (C14821 + C14820) * C1723 -
             (C14823 + C14822) * C51260) *
                C51168) *
               C51462 +
           (((C14590 + C14591) * C1722 + (C14592 + C14593) * C1720 -
             (C10924 * C3630 + C51382 * C3632 + C10923 * C3237 +
              C51463 * C3241) *
                 C1723 -
             (C10924 * C3633 + C51382 * C3636 + C10923 * C3242 +
              C51463 * C3249) *
                 C51260) *
                C2434 +
            ((C14446 + C14447) * C1722 + (C14448 + C14449) * C1720 -
             (C10924 * C3631 + C51382 * C3634 + C10923 * C3238 +
              C51463 * C3243) *
                 C1723 -
             (C10924 * C3635 + C51382 * C3637 + C10923 * C3244 +
              C51463 * C3250) *
                 C51260) *
                C51168) *
               C51356) *
              C1455) *
         C51186) /
        (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                 C1989 +
             (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                 C51494 -
             (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                 C1990 -
             (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                 C51483 +
             (C10923 * C992 + C51463 * C997 + C10924 * C1236 + C51382 * C1240) *
                 C1991 +
             (C10923 * C998 + C51463 * C1007 + C10924 * C1241 +
              C51382 * C1248) *
                 C1988) *
                C2434 +
            ((C10958 + C10959) * C1989 + (C10960 + C10961) * C51494 -
             (C11343 + C11344) * C1990 - (C11345 + C11346) * C51483 +
             (C11938 + C11939) * C1991 + (C11940 + C11941) * C1988) *
                C51168) *
               C51462 +
           (((C14017 + C14018) * C1989 + (C14019 + C14020) * C51494 -
             (C14812 + C14813) * C1990 - (C14814 + C14815) * C51483 +
             (C15232 + C15233) * C1991 + (C15234 + C15235) * C1988) *
                C2434 +
            (C14011 * C1989 + C14012 * C51494 - C16014 * C1990 -
             C16015 * C51483 + (C15026 + C15027) * C1991 +
             (C15028 + C15029) * C1988) *
                C51168) *
               C51356) *
              C1350 +
          ((((C14813 + C14812) * C1990 -
             ((C14020 + C14019) * C51494 + (C14018 + C14017) * C1989) +
             (C14815 + C14814) * C51483 - (C15233 + C15232) * C1991 -
             (C15235 + C15234) * C1988) *
                C2434 +
            (C16016 * C1990 - (C14013 * C51494 + C14014 * C1989) +
             C16019 * C51483 - (C15027 + C15026) * C1991 -
             (C15029 + C15028) * C1988) *
                C51168) *
               C51462 +
           (((C14816 + C14817) * C1990 -
             ((C14440 + C14441) * C51494 + (C14442 + C14443) * C1989) +
             (C14818 + C14819) * C51483 -
             (C10924 * C3762 + C51382 * C3768 + C10923 * C3448 +
              C51463 * C3451) *
                 C1991 -
             (C10924 * C3769 + C51382 * C3774 + C10923 * C3452 +
              C51463 * C3457) *
                 C1988) *
                C2434 +
            ((C14820 + C14821) * C1990 - (C14418 * C51494 + C14419 * C1989) +
             (C14822 + C14823) * C51483 -
             (C10924 * C3763 + C51382 * C3770 + C10923 * C3449 +
              C51463 * C3453) *
                 C1991 -
             (C10924 * C3771 + C51382 * C3775 + C10923 * C3454 +
              C51463 * C3458) *
                 C1988) *
                C51168) *
               C51356) *
              C51234) *
         C51186) /
        (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                  C118 +
              (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                  C51248) *
                 C2434 +
             ((C10958 + C10959) * C118 + (C10960 + C10961) * C51248) * C51168) *
                C51462 +
            (((C14017 + C14018) * C118 + (C14019 + C14020) * C51248) * C2434 +
             C14027 * C51168) *
                C51356) *
               C622 -
           ((C14450 * C51168 +
             ((C14440 + C14441) * C51248 + (C14442 + C14443) * C118) * C2434) *
                C51356 +
            (C14028 * C51168 +
             ((C14020 + C14019) * C51248 + (C14018 + C14017) * C118) * C2434) *
                C51462) *
               C623 +
           ((((C14443 + C14442) * C118 + (C14441 + C14440) * C51248) * C2434 +
             C14451 * C51168) *
                C51462 +
            (((C10923 * C745 + C51463 * C753 + C10924 * C3237 +
               C51382 * C3241) *
                  C118 +
              (C10923 * C752 + C51463 * C757 + C10924 * C3242 +
               C51382 * C3249) *
                  C51248) *
                 C2434 +
             ((C14446 + C14447) * C118 + (C14448 + C14449) * C51248) * C51168) *
                C51356) *
               C624) *
              C51439 +
          (((C14027 * C2434 + C14029 * C51168) * C51462 +
            (C14451 * C2434 +
             ((C11528 + C11529) * C118 + (C11530 + C11531) * C51248) * C51168) *
                C51356) *
               C623 -
           ((C11170 * C51168 + C14028 * C2434) * C51356 +
            (((C10965 + C10964) * C51248 + (C10963 + C10962) * C118) * C51168 +
             ((C10961 + C10960) * C51248 + (C10959 + C10958) * C118) * C2434) *
                C51462) *
               C622 -
           ((((C10924 * C4264 + C51382 * C4265 + C10923 * C748 +
               C51463 * C755) *
                  C51248 +
              (C10924 * C4262 + C51382 * C4263 + C10923 * C743 +
               C51463 * C749) *
                  C118) *
                 C51168 +
             ((C14449 + C14448) * C51248 + (C14447 + C14446) * C118) * C2434) *
                C51356 +
            (((C11531 + C11530) * C51248 + (C11529 + C11528) * C118) * C51168 +
             C14450 * C2434) *
                C51462) *
               C624) *
              C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                 C118 +
             (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                 C51248) *
                C2434 +
            ((C10958 + C10959) * C118 + (C10960 + C10961) * C51248) * C51168) *
               C51462 +
           (((C10923 * C297 + C51463 * C307 + C10924 * C856 + C51382 * C864) *
                 C118 +
             (C10923 * C306 + C51463 * C315 + C10924 * C865 + C51382 * C880) *
                 C51248) *
                C2434 +
            ((C11161 + C11160) * C118 + (C11159 + C11158) * C51248) * C51168) *
               C51356) *
              C51218 * C113 -
          ((C11170 * C51168 +
            ((C11158 + C11159) * C51248 + (C11160 + C11161) * C118) * C2434) *
               C51356 +
           (((C10965 + C10964) * C51248 + (C10963 + C10962) * C118) * C51168 +
            ((C10961 + C10960) * C51248 + (C10959 + C10958) * C118) * C2434) *
               C51462) *
              C51218 * C114 +
          ((C10982 * C2434 +
            ((C10969 + C10968) * C118 + (C10967 + C10966) * C51248) * C51168) *
               C51462 +
           (((C11157 + C11156) * C118 + (C11155 + C11154) * C51248) * C2434 +
            ((C11162 + C11163) * C118 + (C11164 + C11165) * C51248) * C51168) *
               C51356) *
              C51218 * C115 -
          ((((C10924 * C1590 + C51382 * C1591 + C10923 * C309 + C51463 * C316) *
                 C51248 +
             (C10924 * C1588 + C51382 * C1589 + C10923 * C298 + C51463 * C308) *
                 C118) *
                C51168 +
            ((C11165 + C11164) * C51248 + (C11163 + C11162) * C118) * C2434) *
               C51356 +
           (((C10973 + C10972) * C51248 + (C10971 + C10970) * C118) * C51168 +
            C10983 * C2434) *
               C51462) *
              C51218 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                 C989 +
             (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                 C986 -
             (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                 C990 -
             (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                 C987 +
             (C10923 * C992 + C51463 * C997 + C10924 * C1236 + C51382 * C1240) *
                 C991 +
             (C10923 * C998 + C51463 * C1007 + C10924 * C1241 +
              C51382 * C1248) *
                 C988) *
                C2434 +
            ((C10958 + C10959) * C989 + (C10960 + C10961) * C986 -
             (C11343 + C11344) * C990 - (C11345 + C11346) * C987 +
             (C11938 + C11939) * C991 + (C11940 + C11941) * C988) *
                C51168) *
               C51462 +
           (((C14017 + C14018) * C989 + (C14019 + C14020) * C986 -
             (C14812 + C14813) * C990 - (C14814 + C14815) * C987 +
             (C10923 * C1146 + C51463 * C1150 + C10924 * C3760 +
              C51382 * C3764) *
                 C991 +
             (C10923 * C1151 + C51463 * C1158 + C10924 * C3765 +
              C51382 * C3772) *
                 C988) *
                C2434 +
            (C14011 * C989 + C14012 * C986 - (C12693 + C12692) * C990 -
             (C12695 + C12694) * C987 + (C15026 + C15027) * C991 +
             (C15028 + C15029) * C988) *
                C51168) *
               C51356) *
              C51218 * C51439 +
          ((((C11344 + C11343) * C990 -
             ((C10961 + C10960) * C986 + (C10959 + C10958) * C989) +
             (C11346 + C11345) * C987 - (C11939 + C11938) * C991 -
             (C11941 + C11940) * C988) *
                C2434 +
            ((C11349 + C11348) * C990 -
             ((C10965 + C10964) * C986 + (C10963 + C10962) * C989) +
             (C11351 + C11350) * C987 - (C11943 + C11942) * C991 -
             (C11945 + C11944) * C988) *
                C51168) *
               C51462 +
           (((C12692 + C12693) * C990 - (C14013 * C986 + C14014 * C989) +
             (C12694 + C12695) * C987 - (C15027 + C15026) * C991 -
             (C15029 + C15028) * C988) *
                C2434 +
            ((C12696 + C12697) * C990 - (C11166 * C986 + C11167 * C989) +
             (C12698 + C12699) * C987 -
             (C10924 * C7165 + C51382 * C7166 + C10923 * C1148 +
              C51463 * C1154) *
                 C991 -
             (C10924 * C7167 + C51382 * C7168 + C10923 * C1155 +
              C51463 * C1160) *
                 C988) *
                C51168) *
               C51356) *
              C51218 * C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                 C118 +
             (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                 C51248) *
                C2434 +
            ((C10958 + C10959) * C118 + (C10960 + C10961) * C51248) * C51168) *
               C51462 +
           (((C14017 + C14018) * C118 + (C14019 + C14020) * C51248) * C2434 +
            C14027 * C51168) *
               C51356) *
              C737 -
          ((C14450 * C51168 +
            ((C14440 + C14441) * C51248 + (C14442 + C14443) * C118) * C2434) *
               C51356 +
           (C14028 * C51168 +
            ((C14020 + C14019) * C51248 + (C14018 + C14017) * C118) * C2434) *
               C51462) *
              C738 +
          ((((C14443 + C14442) * C118 + (C14441 + C14440) * C51248) * C2434 +
            C14451 * C51168) *
               C51462 +
           (((C14590 + C14591) * C118 + (C14592 + C14593) * C51248) * C2434 +
            ((C14446 + C14447) * C118 + (C14448 + C14449) * C51248) * C51168) *
               C51356) *
              C739 -
          ((((C10924 * C3248 + C51382 * C3252 + C10923 * C2942 +
              C51463 * C2946) *
                 C51248 +
             (C10924 * C3240 + C51382 * C3247 + C10923 * C2937 +
              C51463 * C2941) *
                 C118) *
                C51168 +
            ((C10924 * C3246 + C51382 * C3251 + C10923 * C2940 +
              C51463 * C2945) *
                 C51248 +
             (C10924 * C3239 + C51382 * C3245 + C10923 * C2936 +
              C51463 * C2939) *
                 C118) *
                C2434) *
               C51356 +
           (((C14449 + C14448) * C51248 + (C14447 + C14446) * C118) * C51168 +
            ((C14593 + C14592) * C51248 + (C14591 + C14590) * C118) * C2434) *
               C51462) *
              C740) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                  C118 +
              (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                  C51248) *
                 C2434 +
             ((C10958 + C10959) * C118 + (C10960 + C10961) * C51248) * C51168) *
                C51462 +
            (((C14017 + C14018) * C118 + (C14019 + C14020) * C51248) * C2434 +
             C14027 * C51168) *
                C51356) *
               C51446 -
           ((((C11527 + C11526) * C51248 + (C11525 + C11524) * C118) * C51168 +
             ((C10924 * C873 + C51382 * C884 + C10923 * C633 + C51463 * C642) *
                  C51248 +
              (C10924 * C860 + C51382 * C872 + C10923 * C627 + C51463 * C632) *
                  C118) *
                 C2434) *
                C51356 +
            (C14028 * C51168 +
             ((C14020 + C14019) * C51248 + (C14018 + C14017) * C118) * C2434) *
                C51462) *
               C51234) *
              C291 +
          (((C14027 * C2434 + C14029 * C51168) * C51462 +
            (((C11524 + C11525) * C118 + (C11526 + C11527) * C51248) * C2434 +
             ((C11528 + C11529) * C118 + (C11530 + C11531) * C51248) * C51168) *
                C51356) *
               C51234 -
           ((C11170 * C51168 + C14028 * C2434) * C51356 +
            (((C10965 + C10964) * C51248 + (C10963 + C10962) * C118) * C51168 +
             ((C10961 + C10960) * C51248 + (C10959 + C10958) * C118) * C2434) *
                C51462) *
               C51446) *
              C292 +
          (((C10982 * C2434 +
             ((C10969 + C10968) * C118 + (C10967 + C10966) * C51248) * C51168) *
                C51462 +
            (C14029 * C2434 +
             ((C11162 + C11163) * C118 + (C11164 + C11165) * C51248) * C51168) *
                C51356) *
               C51446 -
           ((((C10924 * C879 + C51382 * C887 + C10923 * C639 + C51463 * C645) *
                  C51248 +
              (C10924 * C863 + C51382 * C878 + C10923 * C630 + C51463 * C638) *
                  C118) *
                 C51168 +
             ((C11531 + C11530) * C51248 + (C11529 + C11528) * C118) * C2434) *
                C51356 +
            (((C11165 + C11164) * C51248 + (C11163 + C11162) * C118) * C51168 +
             C11170 * C2434) *
                C51462) *
               C51234) *
              C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                 C989 +
             (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                 C986 -
             (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                 C990 -
             (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                 C987 +
             (C10923 * C992 + C51463 * C997 + C10924 * C1236 + C51382 * C1240) *
                 C991 +
             (C10923 * C998 + C51463 * C1007 + C10924 * C1241 +
              C51382 * C1248) *
                 C988) *
                C2434 +
            ((C10958 + C10959) * C989 + (C10960 + C10961) * C986 -
             (C11343 + C11344) * C990 - (C11345 + C11346) * C987 +
             (C11938 + C11939) * C991 + (C11940 + C11941) * C988) *
                C51168) *
               C51462 +
           (((C14017 + C14018) * C989 + (C14019 + C14020) * C986 -
             (C14812 + C14813) * C990 - (C14814 + C14815) * C987 +
             (C15232 + C15233) * C991 + (C15234 + C15235) * C988) *
                C2434 +
            (C14011 * C989 + C14012 * C986 - (C12693 + C12692) * C990 -
             (C12695 + C12694) * C987 + (C15026 + C15027) * C991 +
             (C15028 + C15029) * C988) *
                C51168) *
               C51356) *
              C51446 +
          ((((C14813 + C14812) * C990 -
             ((C14020 + C14019) * C986 + (C14018 + C14017) * C989) +
             (C14815 + C14814) * C987 - (C15233 + C15232) * C991 -
             (C15235 + C15234) * C988) *
                C2434 +
            ((C12692 + C12693) * C990 - (C14013 * C986 + C14014 * C989) +
             (C12694 + C12695) * C987 - (C15027 + C15026) * C991 -
             (C15029 + C15028) * C988) *
                C51168) *
               C51462 +
           (((C14816 + C14817) * C990 -
             ((C14440 + C14441) * C986 + (C14442 + C14443) * C989) +
             (C14818 + C14819) * C987 -
             (C10924 * C3762 + C51382 * C3768 + C10923 * C3448 +
              C51463 * C3451) *
                 C991 -
             (C10924 * C3769 + C51382 * C3774 + C10923 * C3452 +
              C51463 * C3457) *
                 C988) *
                C2434 +
            ((C14820 + C14821) * C990 - (C14418 * C986 + C14419 * C989) +
             (C14822 + C14823) * C987 -
             (C10924 * C3763 + C51382 * C3770 + C10923 * C3449 +
              C51463 * C3453) *
                 C991 -
             (C10924 * C3771 + C51382 * C3775 + C10923 * C3454 +
              C51463 * C3458) *
                 C988) *
                C51168) *
               C51356) *
              C51234) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                 C452 +
             (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                 C51448 -
             (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                 C453 -
             (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                 C51260) *
                C2434 +
            ((C10958 + C10959) * C452 + (C10960 + C10961) * C51448 -
             (C11343 + C11344) * C453 - (C11345 + C11346) * C51260) *
                C51168) *
               C51462 +
           (((C14017 + C14018) * C452 + (C14019 + C14020) * C51448 -
             (C14812 + C14813) * C453 - (C14814 + C14815) * C51260) *
                C2434 +
            (C14011 * C452 + C14012 * C51448 - (C12693 + C12692) * C453 -
             (C12695 + C12694) * C51260) *
                C51168) *
               C51356) *
              C622 +
          ((((C14813 + C14812) * C453 -
             ((C14020 + C14019) * C51448 + (C14018 + C14017) * C452) +
             (C14815 + C14814) * C51260) *
                C2434 +
            ((C12692 + C12693) * C453 - (C14013 * C51448 + C14014 * C452) +
             (C12694 + C12695) * C51260) *
                C51168) *
               C51462 +
           (((C14816 + C14817) * C453 -
             ((C14440 + C14441) * C51448 + (C14442 + C14443) * C452) +
             (C14818 + C14819) * C51260) *
                C2434 +
            ((C14820 + C14821) * C453 - (C14418 * C51448 + C14419 * C452) +
             (C14822 + C14823) * C51260) *
                C51168) *
               C51356) *
              C623 +
          ((((C14443 + C14442) * C452 + (C14441 + C14440) * C51448 -
             (C14817 + C14816) * C453 - (C14819 + C14818) * C51260) *
                C2434 +
            (C14428 * C452 + C14429 * C51448 - (C14821 + C14820) * C453 -
             (C14823 + C14822) * C51260) *
                C51168) *
               C51462 +
           (((C14590 + C14591) * C452 + (C14592 + C14593) * C51448 -
             (C10924 * C3630 + C51382 * C3632 + C10923 * C3237 +
              C51463 * C3241) *
                 C453 -
             (C10924 * C3633 + C51382 * C3636 + C10923 * C3242 +
              C51463 * C3249) *
                 C51260) *
                C2434 +
            ((C14446 + C14447) * C452 + (C14448 + C14449) * C51448 -
             (C10924 * C3631 + C51382 * C3634 + C10923 * C3238 +
              C51463 * C3243) *
                 C453 -
             (C10924 * C3635 + C51382 * C3637 + C10923 * C3244 +
              C51463 * C3250) *
                 C51260) *
                C51168) *
               C51356) *
              C624) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                 C452 +
             (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                 C51448 -
             (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                 C453 -
             (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                 C51260) *
                C2434 +
            ((C10958 + C10959) * C452 + (C10960 + C10961) * C51448 -
             (C11343 + C11344) * C453 - (C11345 + C11346) * C51260) *
                C51168) *
               C51462 +
           (((C14017 + C14018) * C452 + (C14019 + C14020) * C51448 -
             (C10924 * C1146 + C51382 * C1150 + C10923 * C856 + C51463 * C864) *
                 C453 -
             (C10924 * C1151 + C51382 * C1158 + C10923 * C865 + C51463 * C880) *
                 C51260) *
                C2434 +
            (C14011 * C452 + C14012 * C51448 - (C12693 + C12692) * C453 -
             (C12695 + C12694) * C51260) *
                C51168) *
               C51356) *
              C51218 * C291 +
          ((((C11344 + C11343) * C453 -
             ((C10961 + C10960) * C51448 + (C10959 + C10958) * C452) +
             (C11346 + C11345) * C51260) *
                C2434 +
            ((C11349 + C11348) * C453 -
             ((C10965 + C10964) * C51448 + (C10963 + C10962) * C452) +
             (C11351 + C11350) * C51260) *
                C51168) *
               C51462 +
           (((C12692 + C12693) * C453 - (C14013 * C51448 + C14014 * C452) +
             (C12694 + C12695) * C51260) *
                C2434 +
            ((C12696 + C12697) * C453 - (C11166 * C51448 + C11167 * C452) +
             (C12698 + C12699) * C51260) *
                C51168) *
               C51356) *
              C51218 * C292 +
          ((C11361 * C2434 +
            ((C10969 + C10968) * C452 + (C10967 + C10966) * C51448 -
             (C11353 + C11352) * C453 - (C11355 + C11354) * C51260) *
                C51168) *
               C51462 +
           ((C14015 * C452 + C14016 * C51448 - (C12697 + C12696) * C453 -
             (C12699 + C12698) * C51260) *
                C2434 +
            ((C11162 + C11163) * C452 + (C11164 + C11165) * C51448 -
             (C10924 * C1149 + C51382 * C1156 + C10923 * C859 + C51463 * C870) *
                 C453 -
             (C10924 * C1157 + C51382 * C1161 + C10923 * C871 + C51463 * C883) *
                 C51260) *
                C51168) *
               C51356) *
              C51218 * C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                C1232 +
            (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                C1228 -
            (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                C1233 -
            (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                C1229 +
            (C10923 * C992 + C51463 * C997 + C10924 * C1236 + C51382 * C1240) *
                C1234 +
            (C10923 * C998 + C51463 * C1007 + C10924 * C1241 + C51382 * C1248) *
                C1230 -
            (C10924 * C6389 + C51382 * C6392 + C10923 * C1236 +
             C51463 * C1240) *
                C1235 -
            (C10924 * C6393 + C51382 * C6398 + C10923 * C1241 +
             C51463 * C1248) *
                C1231) *
               C2434 +
           ((C10958 + C10959) * C1232 + (C10960 + C10961) * C1228 -
            (C11343 + C11344) * C1233 - (C11345 + C11346) * C1229 +
            (C11938 + C11939) * C1234 + (C11940 + C11941) * C1230 -
            (C10924 * C6390 + C51382 * C6394 + C10923 * C1237 +
             C51463 * C1242) *
                C1235 -
            (C10924 * C6395 + C51382 * C6399 + C10923 * C1243 +
             C51463 * C1249) *
                C1231) *
               C51168) *
              C51462 +
          (((C14017 + C14018) * C1232 + (C14019 + C14020) * C1228 -
            (C14812 + C14813) * C1233 - (C14814 + C14815) * C1229 +
            (C15232 + C15233) * C1234 + (C15234 + C15235) * C1230 -
            (C10924 * C6565 + C51382 * C6567 + C10923 * C3760 +
             C51463 * C3764) *
                C1235 -
            (C10924 * C6568 + C51382 * C6571 + C10923 * C3765 +
             C51463 * C3772) *
                C1231) *
               C2434 +
           (C14011 * C1232 + C14012 * C1228 - (C12693 + C12692) * C1233 -
            (C12695 + C12694) * C1229 + (C15026 + C15027) * C1234 +
            (C15028 + C15029) * C1230 -
            (C10924 * C6566 + C51382 * C6569 + C10923 * C3761 +
             C51463 * C3766) *
                C1235 -
            (C10924 * C6570 + C51382 * C6572 + C10923 * C3767 +
             C51463 * C3773) *
                C1231) *
               C51168) *
              C51356) *
         C51218 * C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                 C1722 +
             (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                 C1720 -
             (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                 C1723 -
             (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                 C51260) *
                C2434 +
            ((C10958 + C10959) * C1722 + (C10960 + C10961) * C1720 -
             (C11343 + C11344) * C1723 - (C11345 + C11346) * C51260) *
                C51168) *
               C51462 +
           (((C14017 + C14018) * C1722 + (C14019 + C14020) * C1720 -
             (C14812 + C14813) * C1723 - (C14814 + C14815) * C51260) *
                C2434 +
            (C14011 * C1722 + C14012 * C1720 - C16014 * C1723 -
             C16015 * C51260) *
                C51168) *
               C51356) *
              C51218 * C51492 +
          ((((C11344 + C11343) * C1723 -
             ((C10961 + C10960) * C1720 + (C10959 + C10958) * C1722) +
             (C11346 + C11345) * C51260) *
                C2434 +
            ((C11349 + C11348) * C1723 -
             ((C10965 + C10964) * C1720 + (C10963 + C10962) * C1722) +
             (C11351 + C11350) * C51260) *
                C51168) *
               C51462 +
           ((C16016 * C1723 - (C14013 * C1720 + C14014 * C1722) +
             C16019 * C51260) *
                C2434 +
            ((C12696 + C12697) * C1723 - (C11166 * C1720 + C11167 * C1722) +
             (C12698 + C12699) * C51260) *
                C51168) *
               C51356) *
              C51218 * C51477 +
          ((C12852 * C2434 +
            ((C10969 + C10968) * C1722 + (C10967 + C10966) * C1720 -
             (C11353 + C11352) * C1723 - (C11355 + C11354) * C51260) *
                C51168) *
               C51462 +
           ((C14015 * C1722 + C14016 * C1720 - (C12697 + C12696) * C1723 -
             (C12699 + C12698) * C51260) *
                C2434 +
            ((C11162 + C11163) * C1722 + (C11164 + C11165) * C1720 -
             (C10924 * C1149 + C51382 * C1156 + C10923 * C859 + C51463 * C870) *
                 C1723 -
             (C10924 * C1157 + C51382 * C1161 + C10923 * C871 + C51463 * C883) *
                 C51260) *
                C51168) *
               C51356) *
              C51218 * C1354)) /
        (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                  C1722 +
              (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                  C1720 -
              (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                  C1723 -
              (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                  C51260) *
                 C2434 +
             ((C10958 + C10959) * C1722 + (C10960 + C10961) * C1720 -
              (C11343 + C11344) * C1723 - (C11345 + C11346) * C51260) *
                 C51168) *
                C51462 +
            (((C14017 + C14018) * C1722 + (C14019 + C14020) * C1720 -
              (C14812 + C14813) * C1723 - (C14814 + C14815) * C51260) *
                 C2434 +
             C16494 * C51168) *
                C51356) *
               C51446 +
           ((((C14813 + C14812) * C1723 -
              ((C14020 + C14019) * C1720 + (C14018 + C14017) * C1722) +
              (C14815 + C14814) * C51260) *
                 C2434 +
             C16495 * C51168) *
                C51462 +
            (((C14816 + C14817) * C1723 -
              ((C14440 + C14441) * C1720 + (C14442 + C14443) * C1722) +
              (C14818 + C14819) * C51260) *
                 C2434 +
             ((C14820 + C14821) * C1723 - (C14418 * C1720 + C14419 * C1722) +
              (C14822 + C14823) * C51260) *
                 C51168) *
                C51356) *
               C51234) *
              C1456 +
          (((((C11344 + C11343) * C1723 -
              ((C10961 + C10960) * C1720 + (C10959 + C10958) * C1722) +
              (C11346 + C11345) * C51260) *
                 C2434 +
             ((C11349 + C11348) * C1723 -
              ((C10965 + C10964) * C1720 + (C10963 + C10962) * C1722) +
              (C11351 + C11350) * C51260) *
                 C51168) *
                C51462 +
            (C16495 * C2434 +
             ((C12696 + C12697) * C1723 - (C11166 * C1720 + C11167 * C1722) +
              (C12698 + C12699) * C51260) *
                 C51168) *
                C51356) *
               C51446 +
           ((C16494 * C2434 +
             (C14015 * C1722 + C14016 * C1720 - (C12697 + C12696) * C1723 -
              (C12699 + C12698) * C51260) *
                 C51168) *
                C51462 +
            ((C14428 * C1722 + C14429 * C1720 - (C14821 + C14820) * C1723 -
              (C14823 + C14822) * C51260) *
                 C2434 +
             ((C11528 + C11529) * C1722 + (C11530 + C11531) * C1720 -
              (C10924 * C3450 + C51382 * C3455 + C10923 * C862 +
               C51463 * C876) *
                  C1723 -
              (C10924 * C3456 + C51382 * C3459 + C10923 * C877 +
               C51463 * C886) *
                  C51260) *
                 C51168) *
                C51356) *
               C51234) *
              C51191)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                 C1989 +
             (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                 C51494 -
             (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                 C1990 -
             (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                 C51483 +
             (C10923 * C992 + C51463 * C997 + C10924 * C1236 + C51382 * C1240) *
                 C1991 +
             (C10923 * C998 + C51463 * C1007 + C10924 * C1241 +
              C51382 * C1248) *
                 C1988) *
                C2434 +
            ((C10958 + C10959) * C1989 + (C10960 + C10961) * C51494 -
             (C11343 + C11344) * C1990 - (C11345 + C11346) * C51483 +
             (C11938 + C11939) * C1991 + (C11940 + C11941) * C1988) *
                C51168) *
               C51462 +
           (((C14017 + C14018) * C1989 + (C14019 + C14020) * C51494 -
             (C14812 + C14813) * C1990 - (C14814 + C14815) * C51483 +
             (C15232 + C15233) * C1991 + (C15234 + C15235) * C1988) *
                C2434 +
            (C14011 * C1989 + C14012 * C51494 - C16014 * C1990 -
             C16015 * C51483 + (C15026 + C15027) * C1991 +
             (C15028 + C15029) * C1988) *
                C51168) *
               C51356) *
              C51218 * C1456 +
          ((((C11344 + C11343) * C1990 -
             ((C10961 + C10960) * C51494 + (C10959 + C10958) * C1989) +
             (C11346 + C11345) * C51483 - (C11939 + C11938) * C1991 -
             (C11941 + C11940) * C1988) *
                C2434 +
            ((C11349 + C11348) * C1990 -
             ((C10965 + C10964) * C51494 + (C10963 + C10962) * C1989) +
             (C11351 + C11350) * C51483 - (C11943 + C11942) * C1991 -
             (C11945 + C11944) * C1988) *
                C51168) *
               C51462 +
           ((C16016 * C1990 - (C14013 * C51494 + C14014 * C1989) +
             C16019 * C51483 - (C15027 + C15026) * C1991 -
             (C15029 + C15028) * C1988) *
                C2434 +
            ((C12696 + C12697) * C1990 - (C11166 * C51494 + C11167 * C1989) +
             (C12698 + C12699) * C51483 -
             (C10924 * C7165 + C51382 * C7166 + C10923 * C1148 +
              C51463 * C1154) *
                 C1991 -
             (C10924 * C7167 + C51382 * C7168 + C10923 * C1155 +
              C51463 * C1160) *
                 C1988) *
                C51168) *
               C51356) *
              C51218 * C51191)) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                 C118 +
             (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                 C51248) *
                C2434 +
            ((C10958 + C10959) * C118 + (C10960 + C10961) * C51248) * C51168) *
               C51462 +
           (((C10923 * C297 + C51463 * C307 + C10924 * C856 + C51382 * C864) *
                 C118 +
             (C10923 * C306 + C51463 * C315 + C10924 * C865 + C51382 * C880) *
                 C51248) *
                C2434 +
            ((C11161 + C11160) * C118 + (C11159 + C11158) * C51248) * C51168) *
               C51356) *
              C51218 * C113 -
          ((C11170 * C51168 +
            ((C11158 + C11159) * C51248 + (C11160 + C11161) * C118) * C2434) *
               C51356 +
           (((C10965 + C10964) * C51248 + (C10963 + C10962) * C118) * C51168 +
            ((C10961 + C10960) * C51248 + (C10959 + C10958) * C118) * C2434) *
               C51462) *
              C51218 * C114 +
          ((C10982 * C2434 +
            ((C10969 + C10968) * C118 + (C10967 + C10966) * C51248) * C51168) *
               C51462 +
           (((C11157 + C11156) * C118 + (C11155 + C11154) * C51248) * C2434 +
            ((C11162 + C11163) * C118 + (C11164 + C11165) * C51248) * C51168) *
               C51356) *
              C51218 * C115 -
          ((((C10924 * C1590 + C51382 * C1591 + C10923 * C309 + C51463 * C316) *
                 C51248 +
             (C10924 * C1588 + C51382 * C1589 + C10923 * C298 + C51463 * C308) *
                 C118) *
                C51168 +
            ((C11165 + C11164) * C51248 + (C11163 + C11162) * C118) * C2434) *
               C51356 +
           (((C10973 + C10972) * C51248 + (C10971 + C10970) * C118) * C51168 +
            C10983 * C2434) *
               C51462) *
              C51218 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                  C118 +
              (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                  C51248) *
                 C2434 +
             ((C10958 + C10959) * C118 + (C10960 + C10961) * C51248) * C51168) *
                C51462 +
            (((C14017 + C14018) * C118 + (C14019 + C14020) * C51248) * C2434 +
             C14027 * C51168) *
                C51356) *
               C622 -
           ((C14450 * C51168 +
             ((C14440 + C14441) * C51248 + (C14442 + C14443) * C118) * C2434) *
                C51356 +
            (C14028 * C51168 +
             ((C14020 + C14019) * C51248 + (C14018 + C14017) * C118) * C2434) *
                C51462) *
               C623 +
           ((((C14443 + C14442) * C118 + (C14441 + C14440) * C51248) * C2434 +
             C14451 * C51168) *
                C51462 +
            (((C10923 * C745 + C51463 * C753 + C10924 * C3237 +
               C51382 * C3241) *
                  C118 +
              (C10923 * C752 + C51463 * C757 + C10924 * C3242 +
               C51382 * C3249) *
                  C51248) *
                 C2434 +
             ((C14446 + C14447) * C118 + (C14448 + C14449) * C51248) * C51168) *
                C51356) *
               C624) *
              C51439 +
          (((C14027 * C2434 + C14029 * C51168) * C51462 +
            (C14451 * C2434 +
             ((C11528 + C11529) * C118 + (C11530 + C11531) * C51248) * C51168) *
                C51356) *
               C623 -
           ((C11170 * C51168 + C14028 * C2434) * C51356 +
            (((C10965 + C10964) * C51248 + (C10963 + C10962) * C118) * C51168 +
             ((C10961 + C10960) * C51248 + (C10959 + C10958) * C118) * C2434) *
                C51462) *
               C622 -
           ((((C10924 * C4264 + C51382 * C4265 + C10923 * C748 +
               C51463 * C755) *
                  C51248 +
              (C10924 * C4262 + C51382 * C4263 + C10923 * C743 +
               C51463 * C749) *
                  C118) *
                 C51168 +
             ((C14449 + C14448) * C51248 + (C14447 + C14446) * C118) * C2434) *
                C51356 +
            (((C11531 + C11530) * C51248 + (C11529 + C11528) * C118) * C51168 +
             C14450 * C2434) *
                C51462) *
               C624) *
              C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                  C118 +
              (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                  C51248) *
                 C2434 +
             ((C10958 + C10959) * C118 + (C10960 + C10961) * C51248) * C51168) *
                C51462 +
            (((C14017 + C14018) * C118 + (C14019 + C14020) * C51248) * C2434 +
             C14027 * C51168) *
                C51356) *
               C51446 -
           ((((C11527 + C11526) * C51248 + (C11525 + C11524) * C118) * C51168 +
             ((C10924 * C873 + C51382 * C884 + C10923 * C633 + C51463 * C642) *
                  C51248 +
              (C10924 * C860 + C51382 * C872 + C10923 * C627 + C51463 * C632) *
                  C118) *
                 C2434) *
                C51356 +
            (C14028 * C51168 +
             ((C14020 + C14019) * C51248 + (C14018 + C14017) * C118) * C2434) *
                C51462) *
               C51234) *
              C291 +
          (((C14027 * C2434 + C14029 * C51168) * C51462 +
            (((C11524 + C11525) * C118 + (C11526 + C11527) * C51248) * C2434 +
             ((C11528 + C11529) * C118 + (C11530 + C11531) * C51248) * C51168) *
                C51356) *
               C51234 -
           ((C11170 * C51168 + C14028 * C2434) * C51356 +
            (((C10965 + C10964) * C51248 + (C10963 + C10962) * C118) * C51168 +
             ((C10961 + C10960) * C51248 + (C10959 + C10958) * C118) * C2434) *
                C51462) *
               C51446) *
              C292 +
          (((C10982 * C2434 +
             ((C10969 + C10968) * C118 + (C10967 + C10966) * C51248) * C51168) *
                C51462 +
            (C14029 * C2434 +
             ((C11162 + C11163) * C118 + (C11164 + C11165) * C51248) * C51168) *
                C51356) *
               C51446 -
           ((((C10924 * C879 + C51382 * C887 + C10923 * C639 + C51463 * C645) *
                  C51248 +
              (C10924 * C863 + C51382 * C878 + C10923 * C630 + C51463 * C638) *
                  C118) *
                 C51168 +
             ((C11531 + C11530) * C51248 + (C11529 + C11528) * C118) * C2434) *
                C51356 +
            (((C11165 + C11164) * C51248 + (C11163 + C11162) * C118) * C51168 +
             C11170 * C2434) *
                C51462) *
               C51234) *
              C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                 C118 +
             (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                 C51248) *
                C2434 +
            ((C10958 + C10959) * C118 + (C10960 + C10961) * C51248) * C51168) *
               C51462 +
           (((C14017 + C14018) * C118 + (C14019 + C14020) * C51248) * C2434 +
            C14027 * C51168) *
               C51356) *
              C737 -
          ((C14450 * C51168 +
            ((C14440 + C14441) * C51248 + (C14442 + C14443) * C118) * C2434) *
               C51356 +
           (C14028 * C51168 +
            ((C14020 + C14019) * C51248 + (C14018 + C14017) * C118) * C2434) *
               C51462) *
              C738 +
          ((((C14443 + C14442) * C118 + (C14441 + C14440) * C51248) * C2434 +
            C14451 * C51168) *
               C51462 +
           (((C14590 + C14591) * C118 + (C14592 + C14593) * C51248) * C2434 +
            ((C14446 + C14447) * C118 + (C14448 + C14449) * C51248) * C51168) *
               C51356) *
              C739 -
          ((((C10924 * C3248 + C51382 * C3252 + C10923 * C2942 +
              C51463 * C2946) *
                 C51248 +
             (C10924 * C3240 + C51382 * C3247 + C10923 * C2937 +
              C51463 * C2941) *
                 C118) *
                C51168 +
            ((C10924 * C3246 + C51382 * C3251 + C10923 * C2940 +
              C51463 * C2945) *
                 C51248 +
             (C10924 * C3239 + C51382 * C3245 + C10923 * C2936 +
              C51463 * C2939) *
                 C118) *
                C2434) *
               C51356 +
           (((C14449 + C14448) * C51248 + (C14447 + C14446) * C118) * C51168 +
            ((C14593 + C14592) * C51248 + (C14591 + C14590) * C118) * C2434) *
               C51462) *
              C740) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                 C452 +
             (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                 C51448 -
             (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                 C453 -
             (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                 C51260) *
                C2434 +
            ((C10958 + C10959) * C452 + (C10960 + C10961) * C51448 -
             (C11343 + C11344) * C453 - (C11345 + C11346) * C51260) *
                C51168) *
               C51462 +
           (((C14017 + C14018) * C452 + (C14019 + C14020) * C51448 -
             (C10924 * C1146 + C51382 * C1150 + C10923 * C856 + C51463 * C864) *
                 C453 -
             (C10924 * C1151 + C51382 * C1158 + C10923 * C865 + C51463 * C880) *
                 C51260) *
                C2434 +
            (C14011 * C452 + C14012 * C51448 - (C12693 + C12692) * C453 -
             (C12695 + C12694) * C51260) *
                C51168) *
               C51356) *
              C51218 * C291 +
          ((((C11344 + C11343) * C453 -
             ((C10961 + C10960) * C51448 + (C10959 + C10958) * C452) +
             (C11346 + C11345) * C51260) *
                C2434 +
            ((C11349 + C11348) * C453 -
             ((C10965 + C10964) * C51448 + (C10963 + C10962) * C452) +
             (C11351 + C11350) * C51260) *
                C51168) *
               C51462 +
           (((C12692 + C12693) * C453 - (C14013 * C51448 + C14014 * C452) +
             (C12694 + C12695) * C51260) *
                C2434 +
            ((C12696 + C12697) * C453 - (C11166 * C51448 + C11167 * C452) +
             (C12698 + C12699) * C51260) *
                C51168) *
               C51356) *
              C51218 * C292 +
          ((C11361 * C2434 +
            ((C10969 + C10968) * C452 + (C10967 + C10966) * C51448 -
             (C11353 + C11352) * C453 - (C11355 + C11354) * C51260) *
                C51168) *
               C51462 +
           ((C14015 * C452 + C14016 * C51448 - (C12697 + C12696) * C453 -
             (C12699 + C12698) * C51260) *
                C2434 +
            ((C11162 + C11163) * C452 + (C11164 + C11165) * C51448 -
             (C10924 * C1149 + C51382 * C1156 + C10923 * C859 + C51463 * C870) *
                 C453 -
             (C10924 * C1157 + C51382 * C1161 + C10923 * C871 + C51463 * C883) *
                 C51260) *
                C51168) *
               C51356) *
              C51218 * C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                 C452 +
             (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                 C51448 -
             (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                 C453 -
             (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                 C51260) *
                C2434 +
            ((C10958 + C10959) * C452 + (C10960 + C10961) * C51448 -
             (C11343 + C11344) * C453 - (C11345 + C11346) * C51260) *
                C51168) *
               C51462 +
           (((C14017 + C14018) * C452 + (C14019 + C14020) * C51448 -
             (C14812 + C14813) * C453 - (C14814 + C14815) * C51260) *
                C2434 +
            (C14011 * C452 + C14012 * C51448 - (C12693 + C12692) * C453 -
             (C12695 + C12694) * C51260) *
                C51168) *
               C51356) *
              C622 +
          ((((C14813 + C14812) * C453 -
             ((C14020 + C14019) * C51448 + (C14018 + C14017) * C452) +
             (C14815 + C14814) * C51260) *
                C2434 +
            ((C12692 + C12693) * C453 - (C14013 * C51448 + C14014 * C452) +
             (C12694 + C12695) * C51260) *
                C51168) *
               C51462 +
           (((C14816 + C14817) * C453 -
             ((C14440 + C14441) * C51448 + (C14442 + C14443) * C452) +
             (C14818 + C14819) * C51260) *
                C2434 +
            ((C14820 + C14821) * C453 - (C14418 * C51448 + C14419 * C452) +
             (C14822 + C14823) * C51260) *
                C51168) *
               C51356) *
              C623 +
          ((((C14443 + C14442) * C452 + (C14441 + C14440) * C51448 -
             (C14817 + C14816) * C453 - (C14819 + C14818) * C51260) *
                C2434 +
            (C14428 * C452 + C14429 * C51448 - (C14821 + C14820) * C453 -
             (C14823 + C14822) * C51260) *
                C51168) *
               C51462 +
           (((C14590 + C14591) * C452 + (C14592 + C14593) * C51448 -
             (C10924 * C3630 + C51382 * C3632 + C10923 * C3237 +
              C51463 * C3241) *
                 C453 -
             (C10924 * C3633 + C51382 * C3636 + C10923 * C3242 +
              C51463 * C3249) *
                 C51260) *
                C2434 +
            ((C14446 + C14447) * C452 + (C14448 + C14449) * C51448 -
             (C10924 * C3631 + C51382 * C3634 + C10923 * C3238 +
              C51463 * C3243) *
                 C453 -
             (C10924 * C3635 + C51382 * C3637 + C10923 * C3244 +
              C51463 * C3250) *
                 C51260) *
                C51168) *
               C51356) *
              C624) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C118 +
              (C117 * C127 + C51318 * C140) * C51248) *
                 C2434 +
             (C178 + C179) * C51168) *
                C2436 +
            ((C2617 + C2618) * C2434 + C2590 * C51168) * C2437 +
            C2969 * C2438) *
               C1350 -
           (C3089 * C2438 + (C2600 * C51168 + (C2620 + C2619) * C2434) * C2437 +
            (C2601 * C51168 + (C2618 + C2617) * C2434) * C2436) *
               C51234) *
              C51492 +
          (((C2590 * C2434 + C2602 * C51168) * C2436 +
            (C2595 * C2434 + C2603 * C51168) * C2437 +
            (C2956 * C2434 + (C2623 + C2624) * C51168) * C2438) *
               C51234 -
           (C2968 * C2438 + (C352 * C51168 + C2601 * C2434) * C2437 +
            ((C181 + C180) * C51168 + (C179 + C178) * C2434) * C2436) *
               C1350) *
              C51477 +
          (((C188 * C2434 + C189 * C51168) * C2436 +
            (C2602 * C2434 + (C344 + C343) * C51168) * C2437 +
            (C2603 * C2434 + (C670 + C671) * C51168) * C2438) *
               C1350 -
           ((((C117 * C746 + C51318 * C754) * C51248 +
              (C117 * C742 + C51318 * C747) * C118) *
                 C51168 +
             (C2624 + C2623) * C2434) *
                C2438 +
            ((C671 + C670) * C51168 + C2608 * C2434) * C2437 +
            (C351 * C51168 + C352 * C2434) * C2436) *
               C51234) *
              C1354)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C118 +
             (C117 * C127 + C51318 * C140) * C51248) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C51307 * C1350 -
           (C351 * C110 + C352 * C109 + (C347 + C348) * C108 +
            ((C117 * C306 + C51318 * C315) * C51248 +
             (C117 * C297 + C51318 * C307) * C118) *
                C107) *
               C51307 * C51234) *
              C51492 +
          (((C348 + C347) * C107 + (C346 + C345) * C108 + (C344 + C343) * C109 +
            (C349 + C350) * C110) *
               C51307 * C51234 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C51307 * C1350) *
              C51477 +
          ((C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
            (C186 + C187) * C110) *
               C51307 * C1350 -
           (((C117 * C310 + C51318 * C317) * C51248 +
             (C117 * C299 + C51318 * C311) * C118) *
                C110 +
            (C350 + C349) * C109 + C351 * C108 + C352 * C107) *
               C51307 * C51234) *
              C1354)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5414 * C119 + C5411 * C126 + C5415 * C454 + C5412 * C460 +
              C5416 * C992 + C5413 * C997) *
                 C118 +
             (C5414 * C127 + C5411 * C140 + C5415 * C461 + C5412 * C472 +
              C5416 * C998 + C5413 * C1007) *
                 C51248) *
                C2434 +
            ((C5454 + C5455 + C5456) * C118 +
             (C5457 + C5458 + C5459) * C51248) *
                C51168) *
               C51307 * C1350 -
           (((C5642 + C5643 + C5644) * C51248 +
             (C5645 + C5646 + C5647) * C118) *
                C51168 +
            ((C5416 * C1151 + C5413 * C1158 + C5415 * C865 + C5412 * C880 +
              C5414 * C306 + C5411 * C315) *
                 C51248 +
             (C5416 * C1146 + C5413 * C1150 + C5415 * C856 + C5412 * C864 +
              C5414 * C297 + C5411 * C307) *
                 C118) *
                C2434) *
               C51307 * C51234) *
              C51492 +
          ((((C5647 + C5646 + C5645) * C118 +
             (C5644 + C5643 + C5642) * C51248) *
                C2434 +
            ((C5648 + C5649 + C5650) * C118 +
             (C5651 + C5652 + C5653) * C51248) *
                C51168) *
               C51307 * C51234 -
           (((C5460 + C5461 + C5462) * C51248 +
             (C5463 + C5464 + C5465) * C118) *
                C51168 +
            ((C5459 + C5458 + C5457) * C51248 +
             (C5456 + C5455 + C5454) * C118) *
                C2434) *
               C51307 * C1350) *
              C51477 +
          ((((C5465 + C5464 + C5463) * C118 +
             (C5462 + C5461 + C5460) * C51248) *
                C2434 +
            ((C5466 + C5467 + C5468) * C118 +
             (C5469 + C5470 + C5471) * C51248) *
                C51168) *
               C51307 * C1350 -
           (((C5416 * C1157 + C5413 * C1161 + C5415 * C871 + C5412 * C883 +
              C5414 * C300 + C5411 * C312) *
                 C51248 +
             (C5416 * C1149 + C5413 * C1156 + C5415 * C859 + C5412 * C870 +
              C5414 * C294 + C5411 * C301) *
                 C118) *
                C51168 +
            ((C5653 + C5652 + C5651) * C51248 +
             (C5650 + C5649 + C5648) * C118) *
                C2434) *
               C51307 * C51234) *
              C1354)) /
            (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C118 +
              (C117 * C127 + C51318 * C140) * C51248) *
                 C2434 +
             (C178 + C179) * C51168) *
                C2436 +
            ((C2617 + C2618) * C2434 + C2590 * C51168) * C2437 +
            C2969 * C2438) *
               C51493 -
           (C3089 * C2438 + (C2600 * C51168 + (C2620 + C2619) * C2434) * C2437 +
            (C2601 * C51168 + (C2618 + C2617) * C2434) * C2436) *
               C51480 +
           (C2969 * C2436 + ((C2971 + C2970) * C2434 + C2956 * C51168) * C2437 +
            ((C3090 + C3091) * C2434 + (C2972 + C2973) * C51168) * C2438) *
               C1455) *
              C1456 +
          (((C2590 * C2434 + C2602 * C51168) * C2436 +
            (C2595 * C2434 + C2603 * C51168) * C2437 +
            (C2956 * C2434 + (C2623 + C2624) * C51168) * C2438) *
               C51480 -
           (C2968 * C2438 + (C352 * C51168 + C2601 * C2434) * C2437 +
            ((C181 + C180) * C51168 + (C179 + C178) * C2434) * C2436) *
               C51493 -
           ((((C117 * C2943 + C51318 * C2947) * C51248 +
              (C117 * C2938 + C51318 * C2944) * C118) *
                 C51168 +
             (C2973 + C2972) * C2434) *
                C2438 +
            ((C2624 + C2623) * C51168 + C2951 * C2434) * C2437 +
            C2968 * C2436) *
               C1455) *
              C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C118 +
             (C117 * C127 + C51318 * C140) * C51248) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C51307 * C51493 -
           (C351 * C110 + C352 * C109 + (C347 + C348) * C108 +
            ((C117 * C306 + C51318 * C315) * C51248 +
             (C117 * C297 + C51318 * C307) * C118) *
                C107) *
               C51307 * C51480 +
           (((C117 * C627 + C51318 * C632) * C118 +
             (C117 * C633 + C51318 * C642) * C51248) *
                C107 +
            (C666 + C667) * C108 + (C668 + C669) * C109 +
            (C670 + C671) * C110) *
               C51307 * C1455) *
              C1456 +
          (((C348 + C347) * C107 + (C346 + C345) * C108 + (C344 + C343) * C109 +
            (C349 + C350) * C110) *
               C51307 * C51480 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C51307 * C51493 -
           (((C117 * C640 + C51318 * C646) * C51248 +
             (C117 * C631 + C51318 * C641) * C118) *
                C110 +
            (C671 + C670) * C109 + (C669 + C668) * C108 +
            (C667 + C666) * C107) *
               C51307 * C1455) *
              C51191)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5414 * C119 + C5411 * C126 + C5415 * C454 + C5412 * C460 +
              C5416 * C992 + C5413 * C997) *
                 C118 +
             (C5414 * C127 + C5411 * C140 + C5415 * C461 + C5412 * C472 +
              C5416 * C998 + C5413 * C1007) *
                 C51248) *
                C2434 +
            ((C5454 + C5455 + C5456) * C118 +
             (C5457 + C5458 + C5459) * C51248) *
                C51168) *
               C51307 * C51493 -
           (((C5642 + C5643 + C5644) * C51248 +
             (C5645 + C5646 + C5647) * C118) *
                C51168 +
            ((C5416 * C1151 + C5413 * C1158 + C5415 * C865 + C5412 * C880 +
              C5414 * C306 + C5411 * C315) *
                 C51248 +
             (C5416 * C1146 + C5413 * C1150 + C5415 * C856 + C5412 * C864 +
              C5414 * C297 + C5411 * C307) *
                 C118) *
                C2434) *
               C51307 * C51480 +
           (((C5414 * C627 + C5411 * C632 + C5415 * C860 + C5412 * C872 +
              C5416 * C3448 + C5413 * C3451) *
                 C118 +
             (C5414 * C633 + C5411 * C642 + C5415 * C873 + C5412 * C884 +
              C5416 * C3452 + C5413 * C3457) *
                 C51248) *
                C2434 +
            ((C5994 + C5995 + C5996) * C118 +
             (C5997 + C5998 + C5999) * C51248) *
                C51168) *
               C51307 * C1455) *
              C1456 +
          ((((C5647 + C5646 + C5645) * C118 +
             (C5644 + C5643 + C5642) * C51248) *
                C2434 +
            ((C5648 + C5649 + C5650) * C118 +
             (C5651 + C5652 + C5653) * C51248) *
                C51168) *
               C51307 * C51480 -
           (((C5460 + C5461 + C5462) * C51248 +
             (C5463 + C5464 + C5465) * C118) *
                C51168 +
            ((C5459 + C5458 + C5457) * C51248 +
             (C5456 + C5455 + C5454) * C118) *
                C2434) *
               C51307 * C51493 -
           (((C5416 * C3456 + C5413 * C3459 + C5415 * C877 + C5412 * C886 +
              C5414 * C637 + C5411 * C644) *
                 C51248 +
             (C5416 * C3450 + C5413 * C3455 + C5415 * C862 + C5412 * C876 +
              C5414 * C629 + C5411 * C636) *
                 C118) *
                C51168 +
            ((C5999 + C5998 + C5997) * C51248 +
             (C5996 + C5995 + C5994) * C118) *
                C2434) *
               C51307 * C1455) *
              C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C452 +
              (C117 * C127 + C51318 * C140) * C51448 -
              (C117 * C454 + C51318 * C460) * C453 -
              (C117 * C461 + C51318 * C472) * C51260) *
                 C2434 +
             (C479 + C480 - C513 - C514) * C51168) *
                C2436 +
            ((C3254 + C3255 - C3289 - C3290) * C2434 + C4273 * C51168) * C2437 +
            C3302 * C2438) *
               C1350 +
           (((C3289 - (C3255 + C3254) + C3290) * C2434 + C4274 * C51168) *
                C2436 +
            ((C3291 - (C3261 + C3260) + C3292) * C2434 + C4275 * C51168) *
                C2437 +
            ((C3294 - (C3269 + C3270) + C3295) * C2434 +
             (C3296 - (C3275 + C3276) + C3297) * C51168) *
                C2438) *
               C51234) *
              C1456 +
          ((((C513 - (C480 + C479) + C514) * C2434 +
             (C515 - (C486 + C485) + C516) * C51168) *
                C2436 +
            (C4274 * C2434 + (C1619 - (C1601 + C1602) + C1620) * C51168) *
                C2437 +
            (C4275 * C2434 + (C2789 - (C2779 + C2780) + C2790) * C51168) *
                C2438) *
               C1350 +
           ((C4273 * C2434 + (C1602 + C1601 - C1619 - C1620) * C51168) * C2436 +
            (C3293 * C2434 + (C2780 + C2779 - C2789 - C2790) * C51168) * C2437 +
            ((C3276 + C3275 - C3296 - C3297) * C2434 +
             (C2615 * C452 + C2616 * C51448 -
              (C117 * C4262 + C51318 * C4263) * C453 -
              (C117 * C4264 + C51318 * C4265) * C51260) *
                 C51168) *
                C2438) *
               C51234) *
              C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C452 +
             (C117 * C127 + C51318 * C140) * C51448 -
             (C117 * C454 + C51318 * C460) * C453 -
             (C117 * C461 + C51318 * C472) * C51260) *
                C107 +
            (C479 + C480 - C513 - C514) * C108 + C523 * C109 + C524 * C110) *
               C51307 * C1350 +
           (((C117 * C856 + C51318 * C864) * C453 -
             ((C117 * C306 + C51318 * C315) * C51448 +
              (C117 * C297 + C51318 * C307) * C452) +
             (C117 * C865 + C51318 * C880) * C51260) *
                C107 +
            (C1617 - (C1595 + C1596) + C1618) * C108 +
            (C1619 - (C1601 + C1602) + C1620) * C109 +
            (C1621 - (C1607 + C1608) + C1622) * C110) *
               C51307 * C51234) *
              C1456 +
          (((C513 - (C480 + C479) + C514) * C107 +
            (C515 - (C486 + C485) + C516) * C108 +
            (C517 - (C492 + C491) + C518) * C109 +
            (C519 - (C499 + C500) + C520) * C110) *
               C51307 * C1350 +
           ((C1596 + C1595 - C1617 - C1618) * C107 +
            (C1602 + C1601 - C1619 - C1620) * C108 +
            (C1608 + C1607 - C1621 - C1622) * C109 +
            (C341 * C452 + C342 * C51448 -
             (C117 * C1588 + C51318 * C1589) * C453 -
             (C117 * C1590 + C51318 * C1591) * C51260) *
                C110) *
               C51307 * C51234) *
              C51191)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5414 * C119 + C5411 * C126 + C5415 * C454 + C5412 * C460 +
              C5416 * C992 + C5413 * C997) *
                 C452 +
             (C5414 * C127 + C5411 * C140 + C5415 * C461 + C5412 * C472 +
              C5416 * C998 + C5413 * C1007) *
                 C51448 -
             (C5416 * C1236 + C5413 * C1240 + C5415 * C992 + C5412 * C997 +
              C5414 * C454 + C5411 * C460) *
                 C453 -
             (C5416 * C1241 + C5413 * C1248 + C5415 * C998 + C5412 * C1007 +
              C5414 * C461 + C5411 * C472) *
                 C51260) *
                C2434 +
            ((C5454 + C5455 + C5456) * C452 + (C5457 + C5458 + C5459) * C51448 -
             (C5824 + C5825 + C5826) * C453 -
             (C5827 + C5828 + C5829) * C51260) *
                C51168) *
               C51307 * C1350 +
           (((C5414 * C856 + C5411 * C864 + C5415 * C1146 + C5412 * C1150 +
              C5416 * C3760 + C5413 * C3764) *
                 C453 -
             ((C5416 * C1151 + C5413 * C1158 + C5415 * C865 + C5412 * C880 +
               C5414 * C306 + C5411 * C315) *
                  C51448 +
              (C5416 * C1146 + C5413 * C1150 + C5415 * C856 + C5412 * C864 +
               C5414 * C297 + C5411 * C307) *
                  C452) +
             (C5414 * C865 + C5411 * C880 + C5415 * C1151 + C5412 * C1158 +
              C5416 * C3765 + C5413 * C3772) *
                 C51260) *
                C2434 +
            ((C7182 + C7183 + C7184) * C453 -
             ((C5642 + C5643 + C5644) * C51448 +
              (C5645 + C5646 + C5647) * C452) +
             (C7185 + C7186 + C7187) * C51260) *
                C51168) *
               C51307 * C51234) *
              C1456 +
          ((((C5826 + C5825 + C5824) * C453 -
             ((C5459 + C5458 + C5457) * C51448 +
              (C5456 + C5455 + C5454) * C452) +
             (C5829 + C5828 + C5827) * C51260) *
                C2434 +
            ((C5830 + C5831 + C5832) * C453 -
             ((C5460 + C5461 + C5462) * C51448 +
              (C5463 + C5464 + C5465) * C452) +
             (C5833 + C5834 + C5835) * C51260) *
                C51168) *
               C51307 * C1350 +
           (((C5647 + C5646 + C5645) * C452 + (C5644 + C5643 + C5642) * C51448 -
             (C7184 + C7183 + C7182) * C453 -
             (C7187 + C7186 + C7185) * C51260) *
                C2434 +
            ((C5648 + C5649 + C5650) * C452 + (C5651 + C5652 + C5653) * C51448 -
             (C5416 * C7165 + C5413 * C7166 + C5415 * C1148 + C5412 * C1154 +
              C5414 * C858 + C5411 * C868) *
                 C453 -
             (C5416 * C7167 + C5413 * C7168 + C5415 * C1155 + C5412 * C1160 +
              C5414 * C869 + C5411 * C882) *
                 C51260) *
                C51168) *
               C51307 * C51234) *
              C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C1722 +
              (C117 * C127 + C51318 * C140) * C1720 -
              (C117 * C454 + C51318 * C460) * C1723 -
              (C117 * C461 + C51318 * C472) * C51260) *
                 C2434 +
             (C1725 + C1726 - C1727 - C1728) * C51168) *
                C2436 +
            ((C4624 + C4625 - C4626 - C4627) * C2434 + C4644 * C51168) * C2437 +
            ((C4629 + C4630 - C4631 - C4632) * C2434 + C4645 * C51168) *
                C2438) *
               C1350 +
           (((C4626 - (C4625 + C4624) + C4627) * C2434 + C4646 * C51168) *
                C2436 +
            ((C4631 - (C4630 + C4629) + C4632) * C2434 + C4647 * C51168) *
                C2437 +
            ((C3285 * C1723 - (C2964 * C1720 + C2965 * C1722) +
              C3286 * C51260) *
                 C2434 +
             (C4636 - (C4637 + C4638) + C4639) * C51168) *
                C2438) *
               C51234) *
              C51439 +
          ((((C1727 - (C1726 + C1725) + C1728) * C2434 +
             (C1731 - (C1730 + C1729) + C1732) * C51168) *
                C2436 +
            (C4646 * C2434 + (C1881 - (C1882 + C1883) + C1884) * C51168) *
                C2437 +
            (C4647 * C2434 + (C4426 - (C4427 + C4428) + C4429) * C51168) *
                C2438) *
               C1350 +
           ((C4644 * C2434 + (C1883 + C1882 - C1881 - C1884) * C51168) * C2436 +
            (C4645 * C2434 + (C4428 + C4427 - C4426 - C4429) * C51168) * C2437 +
            ((C4638 + C4637 - C4636 - C4639) * C2434 +
             (C2615 * C1722 + C2616 * C1720 -
              (C117 * C4262 + C51318 * C4263) * C1723 -
              (C117 * C4264 + C51318 * C4265) * C51260) *
                 C51168) *
                C2438) *
               C51234) *
              C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C1722 +
             (C117 * C127 + C51318 * C140) * C1720 -
             (C117 * C454 + C51318 * C460) * C1723 -
             (C117 * C461 + C51318 * C472) * C51260) *
                C107 +
            (C1725 + C1726 - C1727 - C1728) * C108 + C1745 * C109 +
            C1746 * C110) *
               C51307 * C1350 +
           (((C117 * C856 + C51318 * C864) * C1723 -
             ((C117 * C306 + C51318 * C315) * C1720 +
              (C117 * C297 + C51318 * C307) * C1722) +
             (C117 * C865 + C51318 * C880) * C51260) *
                C107 +
            (C1877 - (C1878 + C1879) + C1880) * C108 +
            (C1881 - (C1882 + C1883) + C1884) * C109 +
            (C1885 - (C1886 + C1887) + C1888) * C110) *
               C51307 * C51234) *
              C51439 +
          (((C1727 - (C1726 + C1725) + C1728) * C107 +
            (C1731 - (C1730 + C1729) + C1732) * C108 +
            (C1735 - (C1734 + C1733) + C1736) * C109 +
            (C1737 - (C1738 + C1739) + C1740) * C110) *
               C51307 * C1350 +
           ((C1879 + C1878 - C1877 - C1880) * C107 +
            (C1883 + C1882 - C1881 - C1884) * C108 +
            (C1887 + C1886 - C1885 - C1888) * C109 +
            (C341 * C1722 + C342 * C1720 -
             (C117 * C1588 + C51318 * C1589) * C1723 -
             (C117 * C1590 + C51318 * C1591) * C51260) *
                C110) *
               C51307 * C51234) *
              C51191)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5414 * C119 + C5411 * C126 + C5415 * C454 + C5412 * C460 +
              C5416 * C992 + C5413 * C997) *
                 C1722 +
             (C5414 * C127 + C5411 * C140 + C5415 * C461 + C5412 * C472 +
              C5416 * C998 + C5413 * C1007) *
                 C1720 -
             (C5416 * C1236 + C5413 * C1240 + C5415 * C992 + C5412 * C997 +
              C5414 * C454 + C5411 * C460) *
                 C1723 -
             (C5416 * C1241 + C5413 * C1248 + C5415 * C998 + C5412 * C1007 +
              C5414 * C461 + C5411 * C472) *
                 C51260) *
                C2434 +
            ((C5454 + C5455 + C5456) * C1722 + (C5457 + C5458 + C5459) * C1720 -
             (C5824 + C5825 + C5826) * C1723 -
             (C5827 + C5828 + C5829) * C51260) *
                C51168) *
               C51307 * C1350 +
           (((C5414 * C856 + C5411 * C864 + C5415 * C1146 + C5412 * C1150 +
              C5416 * C3760 + C5413 * C3764) *
                 C1723 -
             ((C5416 * C1151 + C5413 * C1158 + C5415 * C865 + C5412 * C880 +
               C5414 * C306 + C5411 * C315) *
                  C1720 +
              (C5416 * C1146 + C5413 * C1150 + C5415 * C856 + C5412 * C864 +
               C5414 * C297 + C5411 * C307) *
                  C1722) +
             (C5414 * C865 + C5411 * C880 + C5415 * C1151 + C5412 * C1158 +
              C5416 * C3765 + C5413 * C3772) *
                 C51260) *
                C2434 +
            ((C7182 + C7183 + C7184) * C1723 -
             ((C5642 + C5643 + C5644) * C1720 +
              (C5645 + C5646 + C5647) * C1722) +
             (C7185 + C7186 + C7187) * C51260) *
                C51168) *
               C51307 * C51234) *
              C51439 +
          ((((C5826 + C5825 + C5824) * C1723 -
             ((C5459 + C5458 + C5457) * C1720 +
              (C5456 + C5455 + C5454) * C1722) +
             (C5829 + C5828 + C5827) * C51260) *
                C2434 +
            ((C5830 + C5831 + C5832) * C1723 -
             ((C5460 + C5461 + C5462) * C1720 +
              (C5463 + C5464 + C5465) * C1722) +
             (C5833 + C5834 + C5835) * C51260) *
                C51168) *
               C51307 * C1350 +
           (((C5647 + C5646 + C5645) * C1722 + (C5644 + C5643 + C5642) * C1720 -
             (C7184 + C7183 + C7182) * C1723 -
             (C7187 + C7186 + C7185) * C51260) *
                C2434 +
            ((C5648 + C5649 + C5650) * C1722 + (C5651 + C5652 + C5653) * C1720 -
             (C5416 * C7165 + C5413 * C7166 + C5415 * C1148 + C5412 * C1154 +
              C5414 * C858 + C5411 * C868) *
                 C1723 -
             (C5416 * C7167 + C5413 * C7168 + C5415 * C1155 + C5412 * C1160 +
              C5414 * C869 + C5411 * C882) *
                 C51260) *
                C51168) *
               C51307 * C51234) *
              C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C1722 +
             (C117 * C127 + C51318 * C140) * C1720 -
             (C117 * C454 + C51318 * C460) * C1723 -
             (C117 * C461 + C51318 * C472) * C51260) *
                C2434 +
            (C1725 + C1726 - C1727 - C1728) * C51168) *
               C2436 +
           ((C4624 + C4625 - C4626 - C4627) * C2434 + C4644 * C51168) * C2437 +
           C5155 * C2438) *
              C51493 +
          (((C4626 - (C4625 + C4624) + C4627) * C2434 + C4646 * C51168) *
               C2436 +
           ((C4631 - (C4630 + C4629) + C4632) * C2434 + C4647 * C51168) *
               C2437 +
           ((C5148 - (C5149 + C5150) + C5151) * C2434 +
            (C4636 - (C4637 + C4638) + C4639) * C51168) *
               C2438) *
              C51480 +
          (C5155 * C2436 +
           ((C5150 + C5149 - C5148 - C5151) * C2434 +
            (C4638 + C4637 - C4636 - C4639) * C51168) *
               C2437 +
           ((C3087 * C1722 + C3088 * C1720 -
             (C117 * C3239 + C51318 * C3245) * C1723 -
             (C117 * C3246 + C51318 * C3251) * C51260) *
                C2434 +
            (C2966 * C1722 + C2967 * C1720 -
             (C117 * C3240 + C51318 * C3247) * C1723 -
             (C117 * C3248 + C51318 * C3252) * C51260) *
                C51168) *
               C2438) *
              C1455) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C1722 +
            (C117 * C127 + C51318 * C140) * C1720 -
            (C117 * C454 + C51318 * C460) * C1723 -
            (C117 * C461 + C51318 * C472) * C51260) *
               C107 +
           (C1725 + C1726 - C1727 - C1728) * C108 + C1745 * C109 +
           C1746 * C110) *
              C51307 * C51493 +
          (((C117 * C856 + C51318 * C864) * C1723 -
            ((C117 * C306 + C51318 * C315) * C1720 +
             (C117 * C297 + C51318 * C307) * C1722) +
            (C117 * C865 + C51318 * C880) * C51260) *
               C107 +
           (C1877 - (C1878 + C1879) + C1880) * C108 +
           (C1881 - (C1882 + C1883) + C1884) * C109 +
           (C1885 - (C1886 + C1887) + C1888) * C110) *
              C51307 * C51480 +
          (((C117 * C627 + C51318 * C632) * C1722 +
            (C117 * C633 + C51318 * C642) * C1720 -
            (C117 * C860 + C51318 * C872) * C1723 -
            (C117 * C873 + C51318 * C884) * C51260) *
               C107 +
           (C660 * C1722 + C661 * C1720 -
            (C117 * C861 + C51318 * C874) * C1723 -
            (C117 * C875 + C51318 * C885) * C51260) *
               C108 +
           (C662 * C1722 + C663 * C1720 -
            (C117 * C862 + C51318 * C876) * C1723 -
            (C117 * C877 + C51318 * C886) * C51260) *
               C109 +
           (C664 * C1722 + C665 * C1720 -
            (C117 * C863 + C51318 * C878) * C1723 -
            (C117 * C879 + C51318 * C887) * C51260) *
               C110) *
              C51307 * C1455) *
         C51186) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C454 + C5412 * C460 +
             C5416 * C992 + C5413 * C997) *
                C1722 +
            (C5414 * C127 + C5411 * C140 + C5415 * C461 + C5412 * C472 +
             C5416 * C998 + C5413 * C1007) *
                C1720 -
            (C5416 * C1236 + C5413 * C1240 + C5415 * C992 + C5412 * C997 +
             C5414 * C454 + C5411 * C460) *
                C1723 -
            (C5416 * C1241 + C5413 * C1248 + C5415 * C998 + C5412 * C1007 +
             C5414 * C461 + C5411 * C472) *
                C51260) *
               C2434 +
           ((C5454 + C5455 + C5456) * C1722 + (C5457 + C5458 + C5459) * C1720 -
            (C5824 + C5825 + C5826) * C1723 -
            (C5827 + C5828 + C5829) * C51260) *
               C51168) *
              C51307 * C51493 +
          (((C5414 * C856 + C5411 * C864 + C5415 * C1146 + C5412 * C1150 +
             C5416 * C3760 + C5413 * C3764) *
                C1723 -
            ((C5416 * C1151 + C5413 * C1158 + C5415 * C865 + C5412 * C880 +
              C5414 * C306 + C5411 * C315) *
                 C1720 +
             (C5416 * C1146 + C5413 * C1150 + C5415 * C856 + C5412 * C864 +
              C5414 * C297 + C5411 * C307) *
                 C1722) +
            (C5414 * C865 + C5411 * C880 + C5415 * C1151 + C5412 * C1158 +
             C5416 * C3765 + C5413 * C3772) *
                C51260) *
               C2434 +
           ((C7182 + C7183 + C7184) * C1723 -
            ((C5642 + C5643 + C5644) * C1720 +
             (C5645 + C5646 + C5647) * C1722) +
            (C7185 + C7186 + C7187) * C51260) *
               C51168) *
              C51307 * C51480 +
          (((C5414 * C627 + C5411 * C632 + C5415 * C860 + C5412 * C872 +
             C5416 * C3448 + C5413 * C3451) *
                C1722 +
            (C5414 * C633 + C5411 * C642 + C5415 * C873 + C5412 * C884 +
             C5416 * C3452 + C5413 * C3457) *
                C1720 -
            (C5416 * C3762 + C5413 * C3768 + C5415 * C3448 + C5412 * C3451 +
             C5414 * C860 + C5411 * C872) *
                C1723 -
            (C5416 * C3769 + C5413 * C3774 + C5415 * C3452 + C5412 * C3457 +
             C5414 * C873 + C5411 * C884) *
                C51260) *
               C2434 +
           ((C5994 + C5995 + C5996) * C1722 + (C5997 + C5998 + C5999) * C1720 -
            (C5416 * C3763 + C5413 * C3770 + C5415 * C3449 + C5412 * C3453 +
             C5414 * C861 + C5411 * C874) *
                C1723 -
            (C5416 * C3771 + C5413 * C3775 + C5415 * C3454 + C5412 * C3458 +
             C5414 * C875 + C5411 * C885) *
                C51260) *
               C51168) *
              C51307 * C1455) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C1989 +
             (C117 * C127 + C51318 * C140) * C51494 -
             (C117 * C454 + C51318 * C460) * C1990 -
             (C117 * C461 + C51318 * C472) * C51483 +
             (C117 * C992 + C51318 * C997) * C1991 +
             (C117 * C998 + C51318 * C1007) * C1988) *
                C2434 +
            (C1993 + C1994 - C1995 - C1996 + C1997 + C1998) * C51168) *
               C2436 +
           ((C5302 + C5303 - C5304 - C5305 + C5306 + C5307) * C2434 +
            (C4794 + C4795 - C4796 - C4797 + C4798 + C4799) * C51168) *
               C2437 +
           ((C5308 + C5309 - C5310 - C5311 + C5312 + C5313) * C2434 +
            (C4800 + C4801 - C4802 - C4803 + C4804 + C4805) * C51168) *
               C2438) *
              C1350 +
          (((C5304 - (C5303 + C5302) + C5305 - C5306 - C5307) * C2434 +
            (C4796 - (C4795 + C4794) + C4797 - C4798 - C4799) * C51168) *
               C2436 +
           ((C5310 - (C5309 + C5308) + C5311 - C5312 - C5313) * C2434 +
            (C4802 - (C4801 + C4800) + C4803 - C4804 - C4805) * C51168) *
               C2437 +
           ((C3285 * C1990 - (C2964 * C51494 + C2965 * C1989) + C3286 * C51483 -
             (C117 * C3630 + C51318 * C3632) * C1991 -
             (C117 * C3633 + C51318 * C3636) * C1988) *
                C2434 +
            (C3287 * C1990 - (C2613 * C51494 + C2614 * C1989) + C3288 * C51483 -
             (C117 * C3631 + C51318 * C3634) * C1991 -
             (C117 * C3635 + C51318 * C3637) * C1988) *
                C51168) *
               C2438) *
              C51234) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C1989 +
            (C117 * C127 + C51318 * C140) * C51494 -
            (C117 * C454 + C51318 * C460) * C1990 -
            (C117 * C461 + C51318 * C472) * C51483 +
            (C117 * C992 + C51318 * C997) * C1991 +
            (C117 * C998 + C51318 * C1007) * C1988) *
               C107 +
           (C1993 + C1994 - C1995 - C1996 + C1997 + C1998) * C108 +
           (C1999 + C2000 - C2001 - C2002 + C2003 + C2004) * C109 +
           (C2005 + C2006 - C2007 - C2008 + C2009 + C2010) * C110) *
              C51307 * C1350 +
          (((C117 * C856 + C51318 * C864) * C1990 -
            ((C117 * C306 + C51318 * C315) * C51494 +
             (C117 * C297 + C51318 * C307) * C1989) +
            (C117 * C865 + C51318 * C880) * C51483 -
            (C117 * C1146 + C51318 * C1150) * C1991 -
            (C117 * C1151 + C51318 * C1158) * C1988) *
               C107 +
           (C1611 * C1990 - (C339 * C51494 + C340 * C1989) + C1612 * C51483 -
            (C117 * C1147 + C51318 * C1152) * C1991 -
            (C117 * C1153 + C51318 * C1159) * C1988) *
               C108 +
           (C1613 * C1990 - (C337 * C51494 + C338 * C1989) + C1614 * C51483 -
            (C117 * C1148 + C51318 * C1154) * C1991 -
            (C117 * C1155 + C51318 * C1160) * C1988) *
               C109 +
           (C1615 * C1990 - (C335 * C51494 + C336 * C1989) + C1616 * C51483 -
            (C117 * C1149 + C51318 * C1156) * C1991 -
            (C117 * C1157 + C51318 * C1161) * C1988) *
               C110) *
              C51307 * C51234) *
         C51186) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C454 + C5412 * C460 +
             C5416 * C992 + C5413 * C997) *
                C1989 +
            (C5414 * C127 + C5411 * C140 + C5415 * C461 + C5412 * C472 +
             C5416 * C998 + C5413 * C1007) *
                C51494 -
            (C5416 * C1236 + C5413 * C1240 + C5415 * C992 + C5412 * C997 +
             C5414 * C454 + C5411 * C460) *
                C1990 -
            (C5416 * C1241 + C5413 * C1248 + C5415 * C998 + C5412 * C1007 +
             C5414 * C461 + C5411 * C472) *
                C51483 +
            (C5414 * C992 + C5411 * C997 + C5415 * C1236 + C5412 * C1240 +
             C5416 * C6389 + C5413 * C6392) *
                C1991 +
            (C5414 * C998 + C5411 * C1007 + C5415 * C1241 + C5412 * C1248 +
             C5416 * C6393 + C5413 * C6398) *
                C1988) *
               C2434 +
           ((C5454 + C5455 + C5456) * C1989 + (C5457 + C5458 + C5459) * C51494 -
            (C5824 + C5825 + C5826) * C1990 - (C5827 + C5828 + C5829) * C51483 +
            (C6414 + C6415 + C6416) * C1991 + (C6417 + C6418 + C6419) * C1988) *
               C51168) *
              C51307 * C1350 +
          (((C5414 * C856 + C5411 * C864 + C5415 * C1146 + C5412 * C1150 +
             C5416 * C3760 + C5413 * C3764) *
                C1990 -
            ((C5416 * C1151 + C5413 * C1158 + C5415 * C865 + C5412 * C880 +
              C5414 * C306 + C5411 * C315) *
                 C51494 +
             (C5416 * C1146 + C5413 * C1150 + C5415 * C856 + C5412 * C864 +
              C5414 * C297 + C5411 * C307) *
                 C1989) +
            (C5414 * C865 + C5411 * C880 + C5415 * C1151 + C5412 * C1158 +
             C5416 * C3765 + C5413 * C3772) *
                C51483 -
            (C5416 * C6565 + C5413 * C6567 + C5415 * C3760 + C5412 * C3764 +
             C5414 * C1146 + C5411 * C1150) *
                C1991 -
            (C5416 * C6568 + C5413 * C6571 + C5415 * C3765 + C5412 * C3772 +
             C5414 * C1151 + C5411 * C1158) *
                C1988) *
               C2434 +
           ((C7182 + C7183 + C7184) * C1990 -
            ((C5642 + C5643 + C5644) * C51494 +
             (C5645 + C5646 + C5647) * C1989) +
            (C7185 + C7186 + C7187) * C51483 -
            (C5416 * C6566 + C5413 * C6569 + C5415 * C3761 + C5412 * C3766 +
             C5414 * C1147 + C5411 * C1152) *
                C1991 -
            (C5416 * C6570 + C5413 * C6572 + C5415 * C3767 + C5412 * C3773 +
             C5414 * C1153 + C5411 * C1159) *
                C1988) *
               C51168) *
              C51307 * C51234) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C51318 * C126) * C118 +
                (C117 * C127 + C51318 * C140) * C51248) *
                   C107 +
               (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                  C51307 * C51218 * C113 -
              (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
               (C179 + C178) * C107) *
                  C51307 * C51218 * C114 +
              (C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
               (C186 + C187) * C110) *
                  C51307 * C51218 * C115 -
              (((C117 * C138 + C51318 * C146) * C51248 +
                (C117 * C125 + C51318 * C139) * C118) *
                   C110 +
               (C187 + C186) * C109 + C190 * C108 + C191 * C107) *
                  C51307 * C51218 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C51318 * C126) * C118 +
                 (C117 * C127 + C51318 * C140) * C51248) *
                    C107 +
                (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                   C51307 * C622 -
               (C351 * C110 + C352 * C109 + (C347 + C348) * C108 +
                ((C117 * C306 + C51318 * C315) * C51248 +
                 (C117 * C297 + C51318 * C307) * C118) *
                    C107) *
                   C51307 * C623 +
               (((C117 * C627 + C51318 * C632) * C118 +
                 (C117 * C633 + C51318 * C642) * C51248) *
                    C107 +
                (C666 + C667) * C108 + (C668 + C669) * C109 +
                (C670 + C671) * C110) *
                   C51307 * C624) *
                  C51439 +
              (((C348 + C347) * C107 + (C346 + C345) * C108 +
                (C344 + C343) * C109 + (C349 + C350) * C110) *
                   C51307 * C623 -
               (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
                (C179 + C178) * C107) *
                   C51307 * C622 -
               (((C117 * C640 + C51318 * C646) * C51248 +
                 (C117 * C631 + C51318 * C641) * C118) *
                    C110 +
                (C671 + C670) * C109 + (C669 + C668) * C108 +
                (C667 + C666) * C107) *
                   C51307 * C624) *
                  C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C989 +
            (C117 * C127 + C51318 * C140) * C986 -
            (C117 * C454 + C51318 * C460) * C990 -
            (C117 * C461 + C51318 * C472) * C987 +
            (C117 * C992 + C51318 * C997) * C991 +
            (C117 * C998 + C51318 * C1007) * C988) *
               C107 +
           (C1013 + C1014 - C1015 - C1016 + C1043 + C1044) * C108 +
           (C1021 + C1022 - C1023 - C1024 + C1045 + C1046) * C109 +
           (C1029 + C1030 - C1031 - C1032 + C1047 + C1048) * C110) *
              C51307 * C51218 * C51439 +
          ((C1015 - (C1014 + C1013) + C1016 - C1043 - C1044) * C107 +
           (C1023 - (C1022 + C1021) + C1024 - C1045 - C1046) * C108 +
           (C1031 - (C1030 + C1029) + C1032 - C1047 - C1048) * C109 +
           (C511 * C990 - (C174 * C986 + C175 * C989) + C512 * C987 -
            (C117 * C996 + C51318 * C1005) * C991 -
            (C117 * C1006 + C51318 * C1011) * C988) *
               C110) *
              C51307 * C51218 * C51191)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C118 +
             (C117 * C127 + C51318 * C140) * C51248) *
                C2434 +
            (C178 + C179) * C51168) *
               C2436 +
           (((C117 * C297 + C51318 * C307) * C118 +
             (C117 * C306 + C51318 * C315) * C51248) *
                C2434 +
            (C348 + C347) * C51168) *
               C2437 +
           (((C117 * C627 + C51318 * C632) * C118 +
             (C117 * C633 + C51318 * C642) * C51248) *
                C2434 +
            (C666 + C667) * C51168) *
               C2438) *
              C51218 * C113 -
          (((C669 + C668) * C51168 + (C667 + C666) * C2434) * C2438 +
           (C352 * C51168 + (C347 + C348) * C2434) * C2437 +
           ((C181 + C180) * C51168 + (C179 + C178) * C2434) * C2436) *
              C51218 * C114 +
          ((C188 * C2434 + C189 * C51168) * C2436 +
           ((C346 + C345) * C2434 + (C344 + C343) * C51168) * C2437 +
           ((C668 + C669) * C2434 + (C670 + C671) * C51168) * C2438) *
              C51218 * C115 -
          ((((C117 * C640 + C51318 * C646) * C51248 +
             (C117 * C631 + C51318 * C641) * C118) *
                C51168 +
            (C671 + C670) * C2434) *
               C2438 +
           ((C350 + C349) * C51168 + C351 * C2434) * C2437 +
           (C190 * C51168 + C191 * C2434) * C2436) *
              C51218 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C118 +
              (C117 * C127 + C51318 * C140) * C51248) *
                 C2434 +
             (C178 + C179) * C51168) *
                C2436 +
            ((C2617 + C2618) * C2434 + C2590 * C51168) * C2437 +
            C2969 * C2438) *
               C622 -
           ((C2951 * C51168 + (C2970 + C2971) * C2434) * C2438 +
            (C2600 * C51168 + (C2620 + C2619) * C2434) * C2437 +
            (C2601 * C51168 + (C2618 + C2617) * C2434) * C2436) *
               C623 +
           (C2969 * C2436 + ((C2971 + C2970) * C2434 + C2956 * C51168) * C2437 +
            (((C117 * C2936 + C51318 * C2939) * C118 +
              (C117 * C2940 + C51318 * C2945) * C51248) *
                 C2434 +
             (C2972 + C2973) * C51168) *
                C2438) *
               C624) *
              C51439 +
          (((C2590 * C2434 + C2602 * C51168) * C2436 +
            (C2595 * C2434 + C2603 * C51168) * C2437 +
            (C2956 * C2434 + (C2623 + C2624) * C51168) * C2438) *
               C623 -
           (C2968 * C2438 + (C352 * C51168 + C2601 * C2434) * C2437 +
            ((C181 + C180) * C51168 + (C179 + C178) * C2434) * C2436) *
               C622 -
           ((((C117 * C2943 + C51318 * C2947) * C51248 +
              (C117 * C2938 + C51318 * C2944) * C118) *
                 C51168 +
             (C2973 + C2972) * C2434) *
                C2438 +
            ((C2624 + C2623) * C51168 + C2951 * C2434) * C2437 +
            C2968 * C2436) *
               C624) *
              C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C989 +
             (C117 * C127 + C51318 * C140) * C986 -
             (C117 * C454 + C51318 * C460) * C990 -
             (C117 * C461 + C51318 * C472) * C987 +
             (C117 * C992 + C51318 * C997) * C991 +
             (C117 * C998 + C51318 * C1007) * C988) *
                C2434 +
            (C1013 + C1014 - C1015 - C1016 + C1043 + C1044) * C51168) *
               C2436 +
           ((C2609 * C989 + C2610 * C986 - C3279 * C990 - C3280 * C987 +
             (C117 * C1146 + C51318 * C1150) * C991 +
             (C117 * C1151 + C51318 * C1158) * C988) *
                C2434 +
            (C3461 + C3462 - C3463 - C3464 + C3481 + C3482) * C51168) *
               C2437 +
           ((C2611 * C989 + C2612 * C986 - C3282 * C990 - C3283 * C987 +
             (C117 * C3448 + C51318 * C3451) * C991 +
             (C117 * C3452 + C51318 * C3457) * C988) *
                C2434 +
            (C3469 + C3470 - C3471 - C3472 + C3483 + C3484) * C51168) *
               C2438) *
              C51218 * C51439 +
          (((C1015 - (C1014 + C1013) + C1016 - C1043 - C1044) * C2434 +
            (C1023 - (C1022 + C1021) + C1024 - C1045 - C1046) * C51168) *
               C2436 +
           ((C3463 - (C3462 + C3461) + C3464 - C3481 - C3482) * C2434 +
            (C1613 * C990 - (C337 * C986 + C338 * C989) + C1614 * C987 -
             (C117 * C1148 + C51318 * C1154) * C991 -
             (C117 * C1155 + C51318 * C1160) * C988) *
                C51168) *
               C2437 +
           ((C3471 - (C3470 + C3469) + C3472 - C3483 - C3484) * C2434 +
            (C2785 * C990 - (C663 * C986 + C662 * C989) + C2786 * C987 -
             (C117 * C3450 + C51318 * C3455) * C991 -
             (C117 * C3456 + C51318 * C3459) * C988) *
                C51168) *
               C2438) *
              C51218 * C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C454 + C5412 * C460 +
             C5416 * C992 + C5413 * C997) *
                C118 +
            (C5414 * C127 + C5411 * C140 + C5415 * C461 + C5412 * C472 +
             C5416 * C998 + C5413 * C1007) *
                C51248) *
               C2434 +
           ((C5454 + C5455 + C5456) * C118 + (C5457 + C5458 + C5459) * C51248) *
               C51168) *
              C51307 * C51218 * C113 -
          (((C5460 + C5461 + C5462) * C51248 + (C5463 + C5464 + C5465) * C118) *
               C51168 +
           ((C5459 + C5458 + C5457) * C51248 + (C5456 + C5455 + C5454) * C118) *
               C2434) *
              C51307 * C51218 * C114 +
          (((C5465 + C5464 + C5463) * C118 + (C5462 + C5461 + C5460) * C51248) *
               C2434 +
           ((C5466 + C5467 + C5468) * C118 + (C5469 + C5470 + C5471) * C51248) *
               C51168) *
              C51307 * C51218 * C115 -
          (((C5416 * C1006 + C5413 * C1011 + C5415 * C469 + C5412 * C476 +
             C5414 * C134 + C5411 * C144) *
                C51248 +
            (C5416 * C996 + C5413 * C1005 + C5415 * C458 + C5412 * C468 +
             C5414 * C123 + C5411 * C135) *
                C118) *
               C51168 +
           ((C5471 + C5470 + C5469) * C51248 + (C5468 + C5467 + C5466) * C118) *
               C2434) *
              C51307 * C51218 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C5414 * C119 + C5411 * C126 + C5415 * C454 + C5412 * C460 +
              C5416 * C992 + C5413 * C997) *
                 C118 +
             (C5414 * C127 + C5411 * C140 + C5415 * C461 + C5412 * C472 +
              C5416 * C998 + C5413 * C1007) *
                 C51248) *
                C2434 +
            ((C5454 + C5455 + C5456) * C118 +
             (C5457 + C5458 + C5459) * C51248) *
                C51168) *
               C51307 * C622 -
           (((C5642 + C5643 + C5644) * C51248 +
             (C5645 + C5646 + C5647) * C118) *
                C51168 +
            ((C5416 * C1151 + C5413 * C1158 + C5415 * C865 + C5412 * C880 +
              C5414 * C306 + C5411 * C315) *
                 C51248 +
             (C5416 * C1146 + C5413 * C1150 + C5415 * C856 + C5412 * C864 +
              C5414 * C297 + C5411 * C307) *
                 C118) *
                C2434) *
               C51307 * C623 +
           (((C5414 * C627 + C5411 * C632 + C5415 * C860 + C5412 * C872 +
              C5416 * C3448 + C5413 * C3451) *
                 C118 +
             (C5414 * C633 + C5411 * C642 + C5415 * C873 + C5412 * C884 +
              C5416 * C3452 + C5413 * C3457) *
                 C51248) *
                C2434 +
            ((C5994 + C5995 + C5996) * C118 +
             (C5997 + C5998 + C5999) * C51248) *
                C51168) *
               C51307 * C624) *
              C51439 +
          ((((C5647 + C5646 + C5645) * C118 +
             (C5644 + C5643 + C5642) * C51248) *
                C2434 +
            ((C5648 + C5649 + C5650) * C118 +
             (C5651 + C5652 + C5653) * C51248) *
                C51168) *
               C51307 * C623 -
           (((C5460 + C5461 + C5462) * C51248 +
             (C5463 + C5464 + C5465) * C118) *
                C51168 +
            ((C5459 + C5458 + C5457) * C51248 +
             (C5456 + C5455 + C5454) * C118) *
                C2434) *
               C51307 * C622 -
           (((C5416 * C3456 + C5413 * C3459 + C5415 * C877 + C5412 * C886 +
              C5414 * C637 + C5411 * C644) *
                 C51248 +
             (C5416 * C3450 + C5413 * C3455 + C5415 * C862 + C5412 * C876 +
              C5414 * C629 + C5411 * C636) *
                 C118) *
                C51168 +
            ((C5999 + C5998 + C5997) * C51248 +
             (C5996 + C5995 + C5994) * C118) *
                C2434) *
               C51307 * C624) *
              C51191)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C454 + C5412 * C460 +
             C5416 * C992 + C5413 * C997) *
                C989 +
            (C5414 * C127 + C5411 * C140 + C5415 * C461 + C5412 * C472 +
             C5416 * C998 + C5413 * C1007) *
                C986 -
            (C5416 * C1236 + C5413 * C1240 + C5415 * C992 + C5412 * C997 +
             C5414 * C454 + C5411 * C460) *
                C990 -
            (C5416 * C1241 + C5413 * C1248 + C5415 * C998 + C5412 * C1007 +
             C5414 * C461 + C5411 * C472) *
                C987 +
            (C5414 * C992 + C5411 * C997 + C5415 * C1236 + C5412 * C1240 +
             C5416 * C6389 + C5413 * C6392) *
                C991 +
            (C5414 * C998 + C5411 * C1007 + C5415 * C1241 + C5412 * C1248 +
             C5416 * C6393 + C5413 * C6398) *
                C988) *
               C2434 +
           ((C5454 + C5455 + C5456) * C989 + (C5457 + C5458 + C5459) * C986 -
            (C5824 + C5825 + C5826) * C990 - (C5827 + C5828 + C5829) * C987 +
            (C6414 + C6415 + C6416) * C991 + (C6417 + C6418 + C6419) * C988) *
               C51168) *
              C51307 * C51218 * C51439 +
          (((C5826 + C5825 + C5824) * C990 -
            ((C5459 + C5458 + C5457) * C986 + (C5456 + C5455 + C5454) * C989) +
            (C5829 + C5828 + C5827) * C987 - (C6416 + C6415 + C6414) * C991 -
            (C6419 + C6418 + C6417) * C988) *
               C2434 +
           ((C5830 + C5831 + C5832) * C990 -
            ((C5460 + C5461 + C5462) * C986 + (C5463 + C5464 + C5465) * C989) +
            (C5833 + C5834 + C5835) * C987 -
            (C5416 * C6391 + C5413 * C6396 + C5415 * C1238 + C5412 * C1244 +
             C5414 * C994 + C5411 * C1001) *
                C991 -
            (C5416 * C6397 + C5413 * C6400 + C5415 * C1245 + C5412 * C1250 +
             C5414 * C1002 + C5411 * C1009) *
                C988) *
               C51168) *
              C51307 * C51218 * C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C51318 * C126) * C118 +
                 (C117 * C127 + C51318 * C140) * C51248) *
                    C107 +
                (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                   C51307 * C51446 -
               (C351 * C110 + C352 * C109 + (C347 + C348) * C108 +
                ((C117 * C306 + C51318 * C315) * C51248 +
                 (C117 * C297 + C51318 * C307) * C118) *
                    C107) *
                   C51307 * C51234) *
                  C291 +
              (((C348 + C347) * C107 + (C346 + C345) * C108 +
                (C344 + C343) * C109 + (C349 + C350) * C110) *
                   C51307 * C51234 -
               (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
                (C179 + C178) * C107) *
                   C51307 * C51446) *
                  C292 +
              ((C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
                (C186 + C187) * C110) *
                   C51307 * C51446 -
               (((C117 * C310 + C51318 * C317) * C51248 +
                 (C117 * C299 + C51318 * C311) * C118) *
                    C110 +
                (C350 + C349) * C109 + C351 * C108 + C352 * C107) *
                   C51307 * C51234) *
                  C293) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C51318 * C126) * C118 +
                (C117 * C127 + C51318 * C140) * C51248) *
                   C107 +
               (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
                  C51307 * C737 -
              (C351 * C110 + C352 * C109 + (C347 + C348) * C108 +
               ((C117 * C306 + C51318 * C315) * C51248 +
                (C117 * C297 + C51318 * C307) * C118) *
                   C107) *
                  C51307 * C738 +
              (((C117 * C627 + C51318 * C632) * C118 +
                (C117 * C633 + C51318 * C642) * C51248) *
                   C107 +
               (C666 + C667) * C108 + (C668 + C669) * C109 +
               (C670 + C671) * C110) *
                  C51307 * C739 -
              (((C117 * C746 + C51318 * C754) * C51248 +
                (C117 * C742 + C51318 * C747) * C118) *
                   C110 +
               ((C117 * C748 + C51318 * C755) * C51248 +
                (C117 * C743 + C51318 * C749) * C118) *
                   C109 +
               ((C117 * C750 + C51318 * C756) * C51248 +
                (C117 * C744 + C51318 * C751) * C118) *
                   C108 +
               ((C117 * C752 + C51318 * C757) * C51248 +
                (C117 * C745 + C51318 * C753) * C118) *
                   C107) *
                  C51307 * C740) *
             C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C989 +
            (C117 * C127 + C51318 * C140) * C986 -
            (C117 * C454 + C51318 * C460) * C990 -
            (C117 * C461 + C51318 * C472) * C987 +
            (C117 * C992 + C51318 * C997) * C991 +
            (C117 * C998 + C51318 * C1007) * C988) *
               C107 +
           (C1013 + C1014 - C1015 - C1016 + C1043 + C1044) * C108 +
           (C1021 + C1022 - C1023 - C1024 + C1045 + C1046) * C109 +
           (C1029 + C1030 - C1031 - C1032 + C1047 + C1048) * C110) *
              C51307 * C51446 +
          (((C117 * C856 + C51318 * C864) * C990 -
            ((C117 * C306 + C51318 * C315) * C986 +
             (C117 * C297 + C51318 * C307) * C989) +
            (C117 * C865 + C51318 * C880) * C987 -
            (C117 * C1146 + C51318 * C1150) * C991 -
            (C117 * C1151 + C51318 * C1158) * C988) *
               C107 +
           ((C117 * C857 + C51318 * C866) * C990 - (C339 * C986 + C340 * C989) +
            (C117 * C867 + C51318 * C881) * C987 -
            (C117 * C1147 + C51318 * C1152) * C991 -
            (C117 * C1153 + C51318 * C1159) * C988) *
               C108 +
           ((C117 * C858 + C51318 * C868) * C990 - (C337 * C986 + C338 * C989) +
            (C117 * C869 + C51318 * C882) * C987 -
            (C117 * C1148 + C51318 * C1154) * C991 -
            (C117 * C1155 + C51318 * C1160) * C988) *
               C109 +
           ((C117 * C859 + C51318 * C870) * C990 - (C335 * C986 + C336 * C989) +
            (C117 * C871 + C51318 * C883) * C987 -
            (C117 * C1149 + C51318 * C1156) * C991 -
            (C117 * C1157 + C51318 * C1161) * C988) *
               C110) *
              C51307 * C51234) *
         C51186) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C118 +
              (C117 * C127 + C51318 * C140) * C51248) *
                 C2434 +
             (C178 + C179) * C51168) *
                C2436 +
            ((C2617 + C2618) * C2434 + C2590 * C51168) * C2437 +
            ((C2619 + C2620) * C2434 + C2595 * C51168) * C2438) *
               C51446 -
           (((C2621 + C2622) * C51168 +
             ((C117 * C752 + C51318 * C757) * C51248 +
              (C117 * C745 + C51318 * C753) * C118) *
                 C2434) *
                C2438 +
            (C2600 * C51168 + (C2620 + C2619) * C2434) * C2437 +
            (C2601 * C51168 + (C2618 + C2617) * C2434) * C2436) *
               C51234) *
              C291 +
          (((C2590 * C2434 + C2602 * C51168) * C2436 +
            (C2595 * C2434 + C2603 * C51168) * C2437 +
            ((C2622 + C2621) * C2434 + (C2623 + C2624) * C51168) * C2438) *
               C51234 -
           ((C2608 * C51168 + C2600 * C2434) * C2438 +
            (C352 * C51168 + C2601 * C2434) * C2437 +
            ((C181 + C180) * C51168 + (C179 + C178) * C2434) * C2436) *
               C51446) *
              C292 +
          (((C188 * C2434 + C189 * C51168) * C2436 +
            (C2602 * C2434 + (C344 + C343) * C51168) * C2437 +
            (C2603 * C2434 + (C670 + C671) * C51168) * C2438) *
               C51446 -
           ((((C117 * C746 + C51318 * C754) * C51248 +
              (C117 * C742 + C51318 * C747) * C118) *
                 C51168 +
             (C2624 + C2623) * C2434) *
                C2438 +
            ((C671 + C670) * C51168 + C2608 * C2434) * C2437 +
            (C351 * C51168 + C352 * C2434) * C2436) *
               C51234) *
              C293)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C118 +
             (C117 * C127 + C51318 * C140) * C51248) *
                C2434 +
            (C178 + C179) * C51168) *
               C2436 +
           ((C2617 + C2618) * C2434 + C2590 * C51168) * C2437 + C2969 * C2438) *
              C737 -
          (C3089 * C2438 + (C2600 * C51168 + (C2620 + C2619) * C2434) * C2437 +
           (C2601 * C51168 + (C2618 + C2617) * C2434) * C2436) *
              C738 +
          (C2969 * C2436 + ((C2971 + C2970) * C2434 + C2956 * C51168) * C2437 +
           ((C3090 + C3091) * C2434 + (C2972 + C2973) * C51168) * C2438) *
              C739 -
          ((((C117 * C3073 + C51318 * C3077) * C51248 +
             (C117 * C3071 + C51318 * C3074) * C118) *
                C51168 +
            ((C117 * C3075 + C51318 * C3078) * C51248 +
             (C117 * C3072 + C51318 * C3076) * C118) *
                C2434) *
               C2438 +
           ((C2973 + C2972) * C51168 + (C3091 + C3090) * C2434) * C2437 +
           C3089 * C2436) *
              C740) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C989 +
             (C117 * C127 + C51318 * C140) * C986 -
             (C117 * C454 + C51318 * C460) * C990 -
             (C117 * C461 + C51318 * C472) * C987 +
             (C117 * C992 + C51318 * C997) * C991 +
             (C117 * C998 + C51318 * C1007) * C988) *
                C2434 +
            (C1013 + C1014 - C1015 - C1016 + C1043 + C1044) * C51168) *
               C2436 +
           ((C3639 + C3640 - C3641 - C3642 + C3659 + C3660) * C2434 +
            (C3461 + C3462 - C3463 - C3464 + C3481 + C3482) * C51168) *
               C2437 +
           ((C3647 + C3648 - C3649 - C3650 + C3661 + C3662) * C2434 +
            (C3469 + C3470 - C3471 - C3472 + C3483 + C3484) * C51168) *
               C2438) *
              C51446 +
          (((C3641 - (C3640 + C3639) + C3642 - C3659 - C3660) * C2434 +
            (C3463 - (C3462 + C3461) + C3464 - C3481 - C3482) * C51168) *
               C2436 +
           ((C3649 - (C3648 + C3647) + C3650 - C3661 - C3662) * C2434 +
            (C3471 - (C3470 + C3469) + C3472 - C3483 - C3484) * C51168) *
               C2437 +
           ((C3285 * C990 - (C2964 * C986 + C2965 * C989) + C3286 * C987 -
             (C117 * C3630 + C51318 * C3632) * C991 -
             (C117 * C3633 + C51318 * C3636) * C988) *
                C2434 +
            (C3287 * C990 - (C2613 * C986 + C2614 * C989) + C3288 * C987 -
             (C117 * C3631 + C51318 * C3634) * C991 -
             (C117 * C3635 + C51318 * C3637) * C988) *
                C51168) *
               C2438) *
              C51234) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((((C5414 * C119 + C5411 * C126 + C5415 * C454 +
                                  C5412 * C460 + C5416 * C992 + C5413 * C997) *
                                     C118 +
                                 (C5414 * C127 + C5411 * C140 + C5415 * C461 +
                                  C5412 * C472 + C5416 * C998 + C5413 * C1007) *
                                     C51248) *
                                    C2434 +
                                ((C5454 + C5455 + C5456) * C118 +
                                 (C5457 + C5458 + C5459) * C51248) *
                                    C51168) *
                                   C51307 * C51446 -
                               (((C5642 + C5643 + C5644) * C51248 +
                                 (C5645 + C5646 + C5647) * C118) *
                                    C51168 +
                                ((C5416 * C1151 + C5413 * C1158 + C5415 * C865 +
                                  C5412 * C880 + C5414 * C306 + C5411 * C315) *
                                     C51248 +
                                 (C5416 * C1146 + C5413 * C1150 + C5415 * C856 +
                                  C5412 * C864 + C5414 * C297 + C5411 * C307) *
                                     C118) *
                                    C2434) *
                                   C51307 * C51234) *
                                  C291 +
                              ((((C5647 + C5646 + C5645) * C118 +
                                 (C5644 + C5643 + C5642) * C51248) *
                                    C2434 +
                                ((C5648 + C5649 + C5650) * C118 +
                                 (C5651 + C5652 + C5653) * C51248) *
                                    C51168) *
                                   C51307 * C51234 -
                               (((C5460 + C5461 + C5462) * C51248 +
                                 (C5463 + C5464 + C5465) * C118) *
                                    C51168 +
                                ((C5459 + C5458 + C5457) * C51248 +
                                 (C5456 + C5455 + C5454) * C118) *
                                    C2434) *
                                   C51307 * C51446) *
                                  C292 +
                              ((((C5465 + C5464 + C5463) * C118 +
                                 (C5462 + C5461 + C5460) * C51248) *
                                    C2434 +
                                ((C5466 + C5467 + C5468) * C118 +
                                 (C5469 + C5470 + C5471) * C51248) *
                                    C51168) *
                                   C51307 * C51446 -
                               (((C5416 * C1157 + C5413 * C1161 + C5415 * C871 +
                                  C5412 * C883 + C5414 * C300 + C5411 * C312) *
                                     C51248 +
                                 (C5416 * C1149 + C5413 * C1156 + C5415 * C859 +
                                  C5412 * C870 + C5414 * C294 + C5411 * C301) *
                                     C118) *
                                    C51168 +
                                ((C5653 + C5652 + C5651) * C51248 +
                                 (C5650 + C5649 + C5648) * C118) *
                                    C2434) *
                                   C51307 * C51234) *
                                  C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C454 + C5412 * C460 +
             C5416 * C992 + C5413 * C997) *
                C118 +
            (C5414 * C127 + C5411 * C140 + C5415 * C461 + C5412 * C472 +
             C5416 * C998 + C5413 * C1007) *
                C51248) *
               C2434 +
           ((C5454 + C5455 + C5456) * C118 + (C5457 + C5458 + C5459) * C51248) *
               C51168) *
              C51307 * C737 -
          (((C5642 + C5643 + C5644) * C51248 + (C5645 + C5646 + C5647) * C118) *
               C51168 +
           ((C5416 * C1151 + C5413 * C1158 + C5415 * C865 + C5412 * C880 +
             C5414 * C306 + C5411 * C315) *
                C51248 +
            (C5416 * C1146 + C5413 * C1150 + C5415 * C856 + C5412 * C864 +
             C5414 * C297 + C5411 * C307) *
                C118) *
               C2434) *
              C51307 * C738 +
          (((C5414 * C627 + C5411 * C632 + C5415 * C860 + C5412 * C872 +
             C5416 * C3448 + C5413 * C3451) *
                C118 +
            (C5414 * C633 + C5411 * C642 + C5415 * C873 + C5412 * C884 +
             C5416 * C3452 + C5413 * C3457) *
                C51248) *
               C2434 +
           ((C5994 + C5995 + C5996) * C118 + (C5997 + C5998 + C5999) * C51248) *
               C51168) *
              C51307 * C739 -
          (((C5416 * C3635 + C5413 * C3637 + C5415 * C3244 + C5412 * C3250 +
             C5414 * C750 + C5411 * C756) *
                C51248 +
            (C5416 * C3631 + C5413 * C3634 + C5415 * C3238 + C5412 * C3243 +
             C5414 * C744 + C5411 * C751) *
                C118) *
               C51168 +
           ((C5416 * C3633 + C5413 * C3636 + C5415 * C3242 + C5412 * C3249 +
             C5414 * C752 + C5411 * C757) *
                C51248 +
            (C5416 * C3630 + C5413 * C3632 + C5415 * C3237 + C5412 * C3241 +
             C5414 * C745 + C5411 * C753) *
                C118) *
               C2434) *
              C51307 * C740) *
         C51186) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C454 + C5412 * C460 +
             C5416 * C992 + C5413 * C997) *
                C989 +
            (C5414 * C127 + C5411 * C140 + C5415 * C461 + C5412 * C472 +
             C5416 * C998 + C5413 * C1007) *
                C986 -
            (C5416 * C1236 + C5413 * C1240 + C5415 * C992 + C5412 * C997 +
             C5414 * C454 + C5411 * C460) *
                C990 -
            (C5416 * C1241 + C5413 * C1248 + C5415 * C998 + C5412 * C1007 +
             C5414 * C461 + C5411 * C472) *
                C987 +
            (C5414 * C992 + C5411 * C997 + C5415 * C1236 + C5412 * C1240 +
             C5416 * C6389 + C5413 * C6392) *
                C991 +
            (C5414 * C998 + C5411 * C1007 + C5415 * C1241 + C5412 * C1248 +
             C5416 * C6393 + C5413 * C6398) *
                C988) *
               C2434 +
           ((C5454 + C5455 + C5456) * C989 + (C5457 + C5458 + C5459) * C986 -
            (C5824 + C5825 + C5826) * C990 - (C5827 + C5828 + C5829) * C987 +
            (C6414 + C6415 + C6416) * C991 + (C6417 + C6418 + C6419) * C988) *
               C51168) *
              C51307 * C51446 +
          (((C5414 * C856 + C5411 * C864 + C5415 * C1146 + C5412 * C1150 +
             C5416 * C3760 + C5413 * C3764) *
                C990 -
            ((C5416 * C1151 + C5413 * C1158 + C5415 * C865 + C5412 * C880 +
              C5414 * C306 + C5411 * C315) *
                 C986 +
             (C5416 * C1146 + C5413 * C1150 + C5415 * C856 + C5412 * C864 +
              C5414 * C297 + C5411 * C307) *
                 C989) +
            (C5414 * C865 + C5411 * C880 + C5415 * C1151 + C5412 * C1158 +
             C5416 * C3765 + C5413 * C3772) *
                C987 -
            (C5416 * C6565 + C5413 * C6567 + C5415 * C3760 + C5412 * C3764 +
             C5414 * C1146 + C5411 * C1150) *
                C991 -
            (C5416 * C6568 + C5413 * C6571 + C5415 * C3765 + C5412 * C3772 +
             C5414 * C1151 + C5411 * C1158) *
                C988) *
               C2434 +
           ((C5414 * C857 + C5411 * C866 + C5415 * C1147 + C5412 * C1152 +
             C5416 * C3761 + C5413 * C3766) *
                C990 -
            ((C5642 + C5643 + C5644) * C986 + (C5645 + C5646 + C5647) * C989) +
            (C5414 * C867 + C5411 * C881 + C5415 * C1153 + C5412 * C1159 +
             C5416 * C3767 + C5413 * C3773) *
                C987 -
            (C5416 * C6566 + C5413 * C6569 + C5415 * C3761 + C5412 * C3766 +
             C5414 * C1147 + C5411 * C1152) *
                C991 -
            (C5416 * C6570 + C5413 * C6572 + C5415 * C3767 + C5412 * C3773 +
             C5414 * C1153 + C5411 * C1159) *
                C988) *
               C51168) *
              C51307 * C51234) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C51318 * C126) * C452 +
                (C117 * C127 + C51318 * C140) * C51448 -
                (C117 * C454 + C51318 * C460) * C453 -
                (C117 * C461 + C51318 * C472) * C51260) *
                   C107 +
               (C479 + C480 - C513 - C514) * C108 + C523 * C109 + C524 * C110) *
                  C51307 * C51218 * C291 +
              ((C513 - (C480 + C479) + C514) * C107 +
               (C515 - (C486 + C485) + C516) * C108 +
               (C517 - (C492 + C491) + C518) * C109 +
               (C519 - (C499 + C500) + C520) * C110) *
                  C51307 * C51218 * C292 +
              (C523 * C107 + C524 * C108 + (C500 + C499 - C519 - C520) * C109 +
               (C176 * C452 + C177 * C51448 -
                (C117 * C459 + C51318 * C470) * C453 -
                (C117 * C471 + C51318 * C477) * C51260) *
                   C110) *
                  C51307 * C51218 * C293) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C51318 * C126) * C452 +
                (C117 * C127 + C51318 * C140) * C51448 -
                (C117 * C454 + C51318 * C460) * C453 -
                (C117 * C461 + C51318 * C472) * C51260) *
                   C107 +
               (C479 + C480 - C513 - C514) * C108 + C523 * C109 + C524 * C110) *
                  C51307 * C622 +
              (((C117 * C856 + C51318 * C864) * C453 -
                ((C117 * C306 + C51318 * C315) * C51448 +
                 (C117 * C297 + C51318 * C307) * C452) +
                (C117 * C865 + C51318 * C880) * C51260) *
                   C107 +
               ((C117 * C857 + C51318 * C866) * C453 -
                (C339 * C51448 + C340 * C452) +
                (C117 * C867 + C51318 * C881) * C51260) *
                   C108 +
               ((C117 * C858 + C51318 * C868) * C453 -
                (C337 * C51448 + C338 * C452) +
                (C117 * C869 + C51318 * C882) * C51260) *
                   C109 +
               ((C117 * C859 + C51318 * C870) * C453 -
                (C335 * C51448 + C336 * C452) +
                (C117 * C871 + C51318 * C883) * C51260) *
                   C110) *
                  C51307 * C623 +
              (((C117 * C627 + C51318 * C632) * C452 +
                (C117 * C633 + C51318 * C642) * C51448 -
                (C117 * C860 + C51318 * C872) * C453 -
                (C117 * C873 + C51318 * C884) * C51260) *
                   C107 +
               (C660 * C452 + C661 * C51448 -
                (C117 * C861 + C51318 * C874) * C453 -
                (C117 * C875 + C51318 * C885) * C51260) *
                   C108 +
               (C662 * C452 + C663 * C51448 -
                (C117 * C862 + C51318 * C876) * C453 -
                (C117 * C877 + C51318 * C886) * C51260) *
                   C109 +
               (C664 * C452 + C665 * C51448 -
                (C117 * C863 + C51318 * C878) * C453 -
                (C117 * C879 + C51318 * C887) * C51260) *
                   C110) *
                  C51307 * C624) *
             C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117 * C119 + C51318 * C126) * C1232 +
           (C117 * C127 + C51318 * C140) * C1228 -
           (C117 * C454 + C51318 * C460) * C1233 -
           (C117 * C461 + C51318 * C472) * C1229 +
           (C117 * C992 + C51318 * C997) * C1234 +
           (C117 * C998 + C51318 * C1007) * C1230 -
           (C117 * C1236 + C51318 * C1240) * C1235 -
           (C117 * C1241 + C51318 * C1248) * C1231) *
              C107 +
          (C168 * C1232 + C169 * C1228 - C503 * C1233 - C504 * C1229 +
           C1037 * C1234 + C1038 * C1230 -
           (C117 * C1237 + C51318 * C1242) * C1235 -
           (C117 * C1243 + C51318 * C1249) * C1231) *
              C108 +
          (C170 * C1232 + C171 * C1228 - C506 * C1233 - C507 * C1229 +
           C1039 * C1234 + C1040 * C1230 -
           (C117 * C1238 + C51318 * C1244) * C1235 -
           (C117 * C1245 + C51318 * C1250) * C1231) *
              C109 +
          (C172 * C1232 + C173 * C1228 - C509 * C1233 - C510 * C1229 +
           C1041 * C1234 + C1042 * C1230 -
           (C117 * C1239 + C51318 * C1246) * C1235 -
           (C117 * C1247 + C51318 * C1251) * C1231) *
              C110) *
         C51307 * C51218 * C51186) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C452 +
             (C117 * C127 + C51318 * C140) * C51448 -
             (C117 * C454 + C51318 * C460) * C453 -
             (C117 * C461 + C51318 * C472) * C51260) *
                C2434 +
            (C479 + C480 - C513 - C514) * C51168) *
               C2436 +
           ((C2609 * C452 + C2610 * C51448 -
             (C117 * C856 + C51318 * C864) * C453 -
             (C117 * C865 + C51318 * C880) * C51260) *
                C2434 +
            (C1596 + C1595 - C1617 - C1618) * C51168) *
               C2437 +
           ((C2611 * C452 + C2612 * C51448 -
             (C117 * C860 + C51318 * C872) * C453 -
             (C117 * C873 + C51318 * C884) * C51260) *
                C2434 +
            (C2771 + C2772 - C2787 - C2788) * C51168) *
               C2438) *
              C51218 * C291 +
          (((C513 - (C480 + C479) + C514) * C2434 +
            (C515 - (C486 + C485) + C516) * C51168) *
               C2436 +
           ((C1617 - (C1595 + C1596) + C1618) * C2434 +
            (C1619 - (C1601 + C1602) + C1620) * C51168) *
               C2437 +
           ((C2787 - (C2772 + C2771) + C2788) * C2434 +
            (C2789 - (C2779 + C2780) + C2790) * C51168) *
               C2438) *
              C51218 * C292 +
          ((C523 * C2434 + C524 * C51168) * C2436 +
           ((C1602 + C1601 - C1619 - C1620) * C2434 +
            (C1608 + C1607 - C1621 - C1622) * C51168) *
               C2437 +
           ((C2780 + C2779 - C2789 - C2790) * C2434 +
            (C664 * C452 + C665 * C51448 -
             (C117 * C863 + C51318 * C878) * C453 -
             (C117 * C879 + C51318 * C887) * C51260) *
                C51168) *
               C2438) *
              C51218 * C293)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C452 +
             (C117 * C127 + C51318 * C140) * C51448 -
             (C117 * C454 + C51318 * C460) * C453 -
             (C117 * C461 + C51318 * C472) * C51260) *
                C2434 +
            (C479 + C480 - C513 - C514) * C51168) *
               C2436 +
           ((C3254 + C3255 - C3289 - C3290) * C2434 +
            (C1596 + C1595 - C1617 - C1618) * C51168) *
               C2437 +
           C3302 * C2438) *
              C622 +
          (((C3289 - (C3255 + C3254) + C3290) * C2434 +
            (C1617 - (C1595 + C1596) + C1618) * C51168) *
               C2436 +
           ((C3291 - (C3261 + C3260) + C3292) * C2434 +
            (C2787 - (C2772 + C2771) + C2788) * C51168) *
               C2437 +
           ((C3294 - (C3269 + C3270) + C3295) * C2434 +
            (C3296 - (C3275 + C3276) + C3297) * C51168) *
               C2438) *
              C623 +
          (C3302 * C2436 +
           ((C3270 + C3269 - C3294 - C3295) * C2434 +
            (C3276 + C3275 - C3296 - C3297) * C51168) *
               C2437 +
           ((C3087 * C452 + C3088 * C51448 -
             (C117 * C3239 + C51318 * C3245) * C453 -
             (C117 * C3246 + C51318 * C3251) * C51260) *
                C2434 +
            (C2966 * C452 + C2967 * C51448 -
             (C117 * C3240 + C51318 * C3247) * C453 -
             (C117 * C3248 + C51318 * C3252) * C51260) *
                C51168) *
               C2438) *
              C624) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C1232 +
            (C117 * C127 + C51318 * C140) * C1228 -
            (C117 * C454 + C51318 * C460) * C1233 -
            (C117 * C461 + C51318 * C472) * C1229 +
            (C117 * C992 + C51318 * C997) * C1234 +
            (C117 * C998 + C51318 * C1007) * C1230 -
            (C117 * C1236 + C51318 * C1240) * C1235 -
            (C117 * C1241 + C51318 * C1248) * C1231) *
               C2434 +
           (C168 * C1232 + C169 * C1228 - C503 * C1233 - C504 * C1229 +
            C1037 * C1234 + C1038 * C1230 -
            (C117 * C1237 + C51318 * C1242) * C1235 -
            (C117 * C1243 + C51318 * C1249) * C1231) *
               C51168) *
              C2436 +
          ((C2609 * C1232 + C2610 * C1228 - C3279 * C1233 - C3280 * C1229 +
            C3655 * C1234 + C3656 * C1230 -
            (C117 * C3760 + C51318 * C3764) * C1235 -
            (C117 * C3765 + C51318 * C3772) * C1231) *
               C2434 +
           (C340 * C1232 + C339 * C1228 - C1611 * C1233 - C1612 * C1229 +
            C3477 * C1234 + C3478 * C1230 -
            (C117 * C3761 + C51318 * C3766) * C1235 -
            (C117 * C3767 + C51318 * C3773) * C1231) *
               C51168) *
              C2437 +
          ((C2611 * C1232 + C2612 * C1228 - C3282 * C1233 - C3283 * C1229 +
            C3657 * C1234 + C3658 * C1230 -
            (C117 * C3762 + C51318 * C3768) * C1235 -
            (C117 * C3769 + C51318 * C3774) * C1231) *
               C2434 +
           (C660 * C1232 + C661 * C1228 - C2783 * C1233 - C2784 * C1229 +
            C3479 * C1234 + C3480 * C1230 -
            (C117 * C3763 + C51318 * C3770) * C1235 -
            (C117 * C3771 + C51318 * C3775) * C1231) *
               C51168) *
              C2438) *
         C51218 * C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C454 + C5412 * C460 +
             C5416 * C992 + C5413 * C997) *
                C452 +
            (C5414 * C127 + C5411 * C140 + C5415 * C461 + C5412 * C472 +
             C5416 * C998 + C5413 * C1007) *
                C51448 -
            (C5416 * C1236 + C5413 * C1240 + C5415 * C992 + C5412 * C997 +
             C5414 * C454 + C5411 * C460) *
                C453 -
            (C5416 * C1241 + C5413 * C1248 + C5415 * C998 + C5412 * C1007 +
             C5414 * C461 + C5411 * C472) *
                C51260) *
               C2434 +
           ((C5454 + C5455 + C5456) * C452 + (C5457 + C5458 + C5459) * C51448 -
            (C5824 + C5825 + C5826) * C453 - (C5827 + C5828 + C5829) * C51260) *
               C51168) *
              C51307 * C51218 * C291 +
          (((C5826 + C5825 + C5824) * C453 -
            ((C5459 + C5458 + C5457) * C51448 +
             (C5456 + C5455 + C5454) * C452) +
            (C5829 + C5828 + C5827) * C51260) *
               C2434 +
           ((C5830 + C5831 + C5832) * C453 -
            ((C5460 + C5461 + C5462) * C51448 +
             (C5463 + C5464 + C5465) * C452) +
            (C5833 + C5834 + C5835) * C51260) *
               C51168) *
              C51307 * C51218 * C292 +
          (((C5465 + C5464 + C5463) * C452 + (C5462 + C5461 + C5460) * C51448 -
            (C5832 + C5831 + C5830) * C453 - (C5835 + C5834 + C5833) * C51260) *
               C2434 +
           ((C5466 + C5467 + C5468) * C452 + (C5469 + C5470 + C5471) * C51448 -
            (C5416 * C1239 + C5413 * C1246 + C5415 * C995 + C5412 * C1003 +
             C5414 * C457 + C5411 * C466) *
                C453 -
            (C5416 * C1247 + C5413 * C1251 + C5415 * C1004 + C5412 * C1010 +
             C5414 * C467 + C5411 * C475) *
                C51260) *
               C51168) *
              C51307 * C51218 * C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C454 + C5412 * C460 +
             C5416 * C992 + C5413 * C997) *
                C452 +
            (C5414 * C127 + C5411 * C140 + C5415 * C461 + C5412 * C472 +
             C5416 * C998 + C5413 * C1007) *
                C51448 -
            (C5416 * C1236 + C5413 * C1240 + C5415 * C992 + C5412 * C997 +
             C5414 * C454 + C5411 * C460) *
                C453 -
            (C5416 * C1241 + C5413 * C1248 + C5415 * C998 + C5412 * C1007 +
             C5414 * C461 + C5411 * C472) *
                C51260) *
               C2434 +
           ((C5454 + C5455 + C5456) * C452 + (C5457 + C5458 + C5459) * C51448 -
            (C5824 + C5825 + C5826) * C453 - (C5827 + C5828 + C5829) * C51260) *
               C51168) *
              C51307 * C622 +
          (((C5414 * C856 + C5411 * C864 + C5415 * C1146 + C5412 * C1150 +
             C5416 * C3760 + C5413 * C3764) *
                C453 -
            ((C5416 * C1151 + C5413 * C1158 + C5415 * C865 + C5412 * C880 +
              C5414 * C306 + C5411 * C315) *
                 C51448 +
             (C5416 * C1146 + C5413 * C1150 + C5415 * C856 + C5412 * C864 +
              C5414 * C297 + C5411 * C307) *
                 C452) +
            (C5414 * C865 + C5411 * C880 + C5415 * C1151 + C5412 * C1158 +
             C5416 * C3765 + C5413 * C3772) *
                C51260) *
               C2434 +
           ((C5414 * C857 + C5411 * C866 + C5415 * C1147 + C5412 * C1152 +
             C5416 * C3761 + C5413 * C3766) *
                C453 -
            ((C5642 + C5643 + C5644) * C51448 +
             (C5645 + C5646 + C5647) * C452) +
            (C5414 * C867 + C5411 * C881 + C5415 * C1153 + C5412 * C1159 +
             C5416 * C3767 + C5413 * C3773) *
                C51260) *
               C51168) *
              C51307 * C623 +
          (((C5414 * C627 + C5411 * C632 + C5415 * C860 + C5412 * C872 +
             C5416 * C3448 + C5413 * C3451) *
                C452 +
            (C5414 * C633 + C5411 * C642 + C5415 * C873 + C5412 * C884 +
             C5416 * C3452 + C5413 * C3457) *
                C51448 -
            (C5416 * C3762 + C5413 * C3768 + C5415 * C3448 + C5412 * C3451 +
             C5414 * C860 + C5411 * C872) *
                C453 -
            (C5416 * C3769 + C5413 * C3774 + C5415 * C3452 + C5412 * C3457 +
             C5414 * C873 + C5411 * C884) *
                C51260) *
               C2434 +
           ((C5994 + C5995 + C5996) * C452 + (C5997 + C5998 + C5999) * C51448 -
            (C5416 * C3763 + C5413 * C3770 + C5415 * C3449 + C5412 * C3453 +
             C5414 * C861 + C5411 * C874) *
                C453 -
            (C5416 * C3771 + C5413 * C3775 + C5415 * C3454 + C5412 * C3458 +
             C5414 * C875 + C5411 * C885) *
                C51260) *
               C51168) *
              C51307 * C624) *
         C51186) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C5414 * C119 + C5411 * C126 + C5415 * C454 + C5412 * C460 +
            C5416 * C992 + C5413 * C997) *
               C1232 +
           (C5414 * C127 + C5411 * C140 + C5415 * C461 + C5412 * C472 +
            C5416 * C998 + C5413 * C1007) *
               C1228 -
           (C5416 * C1236 + C5413 * C1240 + C5415 * C992 + C5412 * C997 +
            C5414 * C454 + C5411 * C460) *
               C1233 -
           (C5416 * C1241 + C5413 * C1248 + C5415 * C998 + C5412 * C1007 +
            C5414 * C461 + C5411 * C472) *
               C1229 +
           (C5414 * C992 + C5411 * C997 + C5415 * C1236 + C5412 * C1240 +
            C5416 * C6389 + C5413 * C6392) *
               C1234 +
           (C5414 * C998 + C5411 * C1007 + C5415 * C1241 + C5412 * C1248 +
            C5416 * C6393 + C5413 * C6398) *
               C1230 -
           (C5416 * C6671 + C5413 * C6673 + C5415 * C6389 + C5412 * C6392 +
            C5414 * C1236 + C5411 * C1240) *
               C1235 -
           (C5416 * C6674 + C5413 * C6677 + C5415 * C6393 + C5412 * C6398 +
            C5414 * C1241 + C5411 * C1248) *
               C1231) *
              C2434 +
          ((C5454 + C5455 + C5456) * C1232 + (C5457 + C5458 + C5459) * C1228 -
           (C5824 + C5825 + C5826) * C1233 - (C5827 + C5828 + C5829) * C1229 +
           (C6414 + C6415 + C6416) * C1234 + (C6417 + C6418 + C6419) * C1230 -
           (C5416 * C6672 + C5413 * C6675 + C5415 * C6390 + C5412 * C6394 +
            C5414 * C1237 + C5411 * C1242) *
               C1235 -
           (C5416 * C6676 + C5413 * C6678 + C5415 * C6395 + C5412 * C6399 +
            C5414 * C1243 + C5411 * C1249) *
               C1231) *
              C51168) *
         C51307 * C51218 * C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C1722 +
             (C117 * C127 + C51318 * C140) * C1720 -
             (C117 * C454 + C51318 * C460) * C1723 -
             (C117 * C461 + C51318 * C472) * C51260) *
                C2434 +
            (C1725 + C1726 - C1727 - C1728) * C51168) *
               C2436 +
           ((C2609 * C1722 + C2610 * C1720 - C3279 * C1723 - C3280 * C51260) *
                C2434 +
            (C1879 + C1878 - C1877 - C1880) * C51168) *
               C2437 +
           ((C2611 * C1722 + C2612 * C1720 - C3282 * C1723 - C3283 * C51260) *
                C2434 +
            (C4422 + C4423 - C4424 - C4425) * C51168) *
               C2438) *
              C51218 * C51492 +
          (((C1727 - (C1726 + C1725) + C1728) * C2434 +
            (C1731 - (C1730 + C1729) + C1732) * C51168) *
               C2436 +
           ((C1877 - (C1878 + C1879) + C1880) * C2434 +
            (C1881 - (C1882 + C1883) + C1884) * C51168) *
               C2437 +
           ((C4424 - (C4423 + C4422) + C4425) * C2434 +
            (C4426 - (C4427 + C4428) + C4429) * C51168) *
               C2438) *
              C51218 * C51477 +
          ((C1745 * C2434 + C1746 * C51168) * C2436 +
           ((C1883 + C1882 - C1881 - C1884) * C2434 +
            (C1887 + C1886 - C1885 - C1888) * C51168) *
               C2437 +
           ((C4428 + C4427 - C4426 - C4429) * C2434 +
            (C664 * C1722 + C665 * C1720 -
             (C117 * C863 + C51318 * C878) * C1723 -
             (C117 * C879 + C51318 * C887) * C51260) *
                C51168) *
               C2438) *
              C51218 * C1354)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C1722 +
            (C117 * C127 + C51318 * C140) * C1720 -
            (C117 * C454 + C51318 * C460) * C1723 -
            (C117 * C461 + C51318 * C472) * C51260) *
               C107 +
           (C1725 + C1726 - C1727 - C1728) * C108 + C1745 * C109 +
           C1746 * C110) *
              C51307 * C51218 * C51492 +
          ((C1727 - (C1726 + C1725) + C1728) * C107 +
           (C1731 - (C1730 + C1729) + C1732) * C108 +
           (C1735 - (C1734 + C1733) + C1736) * C109 +
           (C1737 - (C1738 + C1739) + C1740) * C110) *
              C51307 * C51218 * C51477 +
          (C1745 * C107 + C1746 * C108 +
           (C1739 + C1738 - C1737 - C1740) * C109 +
           (C176 * C1722 + C177 * C1720 -
            (C117 * C459 + C51318 * C470) * C1723 -
            (C117 * C471 + C51318 * C477) * C51260) *
               C110) *
              C51307 * C51218 * C1354)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C454 + C5412 * C460 +
             C5416 * C992 + C5413 * C997) *
                C1722 +
            (C5414 * C127 + C5411 * C140 + C5415 * C461 + C5412 * C472 +
             C5416 * C998 + C5413 * C1007) *
                C1720 -
            (C5416 * C1236 + C5413 * C1240 + C5415 * C992 + C5412 * C997 +
             C5414 * C454 + C5411 * C460) *
                C1723 -
            (C5416 * C1241 + C5413 * C1248 + C5415 * C998 + C5412 * C1007 +
             C5414 * C461 + C5411 * C472) *
                C51260) *
               C2434 +
           ((C5454 + C5455 + C5456) * C1722 + (C5457 + C5458 + C5459) * C1720 -
            (C5824 + C5825 + C5826) * C1723 -
            (C5827 + C5828 + C5829) * C51260) *
               C51168) *
              C51307 * C51218 * C51492 +
          (((C5826 + C5825 + C5824) * C1723 -
            ((C5459 + C5458 + C5457) * C1720 +
             (C5456 + C5455 + C5454) * C1722) +
            (C5829 + C5828 + C5827) * C51260) *
               C2434 +
           ((C5830 + C5831 + C5832) * C1723 -
            ((C5460 + C5461 + C5462) * C1720 +
             (C5463 + C5464 + C5465) * C1722) +
            (C5833 + C5834 + C5835) * C51260) *
               C51168) *
              C51307 * C51218 * C51477 +
          (((C5465 + C5464 + C5463) * C1722 + (C5462 + C5461 + C5460) * C1720 -
            (C5832 + C5831 + C5830) * C1723 -
            (C5835 + C5834 + C5833) * C51260) *
               C2434 +
           ((C5466 + C5467 + C5468) * C1722 + (C5469 + C5470 + C5471) * C1720 -
            (C5416 * C1239 + C5413 * C1246 + C5415 * C995 + C5412 * C1003 +
             C5414 * C457 + C5411 * C466) *
                C1723 -
            (C5416 * C1247 + C5413 * C1251 + C5415 * C1004 + C5412 * C1010 +
             C5414 * C467 + C5411 * C475) *
                C51260) *
               C51168) *
              C51307 * C51218 * C1354)) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C1722 +
              (C117 * C127 + C51318 * C140) * C1720 -
              (C117 * C454 + C51318 * C460) * C1723 -
              (C117 * C461 + C51318 * C472) * C51260) *
                 C2434 +
             (C1725 + C1726 - C1727 - C1728) * C51168) *
                C2436 +
            ((C4624 + C4625 - C4626 - C4627) * C2434 + C4644 * C51168) * C2437 +
            ((C4629 + C4630 - C4631 - C4632) * C2434 + C4645 * C51168) *
                C2438) *
               C51446 +
           (((C4626 - (C4625 + C4624) + C4627) * C2434 + C4646 * C51168) *
                C2436 +
            ((C4631 - (C4630 + C4629) + C4632) * C2434 + C4647 * C51168) *
                C2437 +
            ((C3285 * C1723 - (C2964 * C1720 + C2965 * C1722) +
              C3286 * C51260) *
                 C2434 +
             (C4636 - (C4637 + C4638) + C4639) * C51168) *
                C2438) *
               C51234) *
              C1456 +
          ((((C1727 - (C1726 + C1725) + C1728) * C2434 +
             (C1731 - (C1730 + C1729) + C1732) * C51168) *
                C2436 +
            (C4646 * C2434 + (C1881 - (C1882 + C1883) + C1884) * C51168) *
                C2437 +
            (C4647 * C2434 + (C4426 - (C4427 + C4428) + C4429) * C51168) *
                C2438) *
               C51446 +
           ((C4644 * C2434 + (C1883 + C1882 - C1881 - C1884) * C51168) * C2436 +
            (C4645 * C2434 + (C4428 + C4427 - C4426 - C4429) * C51168) * C2437 +
            ((C4638 + C4637 - C4636 - C4639) * C2434 +
             (C2615 * C1722 + C2616 * C1720 -
              (C117 * C4262 + C51318 * C4263) * C1723 -
              (C117 * C4264 + C51318 * C4265) * C51260) *
                 C51168) *
                C2438) *
               C51234) *
              C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C1722 +
             (C117 * C127 + C51318 * C140) * C1720 -
             (C117 * C454 + C51318 * C460) * C1723 -
             (C117 * C461 + C51318 * C472) * C51260) *
                C107 +
            (C1725 + C1726 - C1727 - C1728) * C108 + C1745 * C109 +
            C1746 * C110) *
               C51307 * C51446 +
           (((C117 * C856 + C51318 * C864) * C1723 -
             ((C117 * C306 + C51318 * C315) * C1720 +
              (C117 * C297 + C51318 * C307) * C1722) +
             (C117 * C865 + C51318 * C880) * C51260) *
                C107 +
            (C1877 - (C1878 + C1879) + C1880) * C108 +
            (C1881 - (C1882 + C1883) + C1884) * C109 +
            (C1885 - (C1886 + C1887) + C1888) * C110) *
               C51307 * C51234) *
              C1456 +
          (((C1727 - (C1726 + C1725) + C1728) * C107 +
            (C1731 - (C1730 + C1729) + C1732) * C108 +
            (C1735 - (C1734 + C1733) + C1736) * C109 +
            (C1737 - (C1738 + C1739) + C1740) * C110) *
               C51307 * C51446 +
           ((C1879 + C1878 - C1877 - C1880) * C107 +
            (C1883 + C1882 - C1881 - C1884) * C108 +
            (C1887 + C1886 - C1885 - C1888) * C109 +
            (C341 * C1722 + C342 * C1720 -
             (C117 * C1588 + C51318 * C1589) * C1723 -
             (C117 * C1590 + C51318 * C1591) * C51260) *
                C110) *
               C51307 * C51234) *
              C51191)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5414 * C119 + C5411 * C126 + C5415 * C454 + C5412 * C460 +
              C5416 * C992 + C5413 * C997) *
                 C1722 +
             (C5414 * C127 + C5411 * C140 + C5415 * C461 + C5412 * C472 +
              C5416 * C998 + C5413 * C1007) *
                 C1720 -
             (C5416 * C1236 + C5413 * C1240 + C5415 * C992 + C5412 * C997 +
              C5414 * C454 + C5411 * C460) *
                 C1723 -
             (C5416 * C1241 + C5413 * C1248 + C5415 * C998 + C5412 * C1007 +
              C5414 * C461 + C5411 * C472) *
                 C51260) *
                C2434 +
            ((C5454 + C5455 + C5456) * C1722 + (C5457 + C5458 + C5459) * C1720 -
             (C5824 + C5825 + C5826) * C1723 -
             (C5827 + C5828 + C5829) * C51260) *
                C51168) *
               C51307 * C51446 +
           (((C5414 * C856 + C5411 * C864 + C5415 * C1146 + C5412 * C1150 +
              C5416 * C3760 + C5413 * C3764) *
                 C1723 -
             ((C5416 * C1151 + C5413 * C1158 + C5415 * C865 + C5412 * C880 +
               C5414 * C306 + C5411 * C315) *
                  C1720 +
              (C5416 * C1146 + C5413 * C1150 + C5415 * C856 + C5412 * C864 +
               C5414 * C297 + C5411 * C307) *
                  C1722) +
             (C5414 * C865 + C5411 * C880 + C5415 * C1151 + C5412 * C1158 +
              C5416 * C3765 + C5413 * C3772) *
                 C51260) *
                C2434 +
            ((C7182 + C7183 + C7184) * C1723 -
             ((C5642 + C5643 + C5644) * C1720 +
              (C5645 + C5646 + C5647) * C1722) +
             (C7185 + C7186 + C7187) * C51260) *
                C51168) *
               C51307 * C51234) *
              C1456 +
          ((((C5826 + C5825 + C5824) * C1723 -
             ((C5459 + C5458 + C5457) * C1720 +
              (C5456 + C5455 + C5454) * C1722) +
             (C5829 + C5828 + C5827) * C51260) *
                C2434 +
            ((C5830 + C5831 + C5832) * C1723 -
             ((C5460 + C5461 + C5462) * C1720 +
              (C5463 + C5464 + C5465) * C1722) +
             (C5833 + C5834 + C5835) * C51260) *
                C51168) *
               C51307 * C51446 +
           (((C5647 + C5646 + C5645) * C1722 + (C5644 + C5643 + C5642) * C1720 -
             (C7184 + C7183 + C7182) * C1723 -
             (C7187 + C7186 + C7185) * C51260) *
                C2434 +
            ((C5648 + C5649 + C5650) * C1722 + (C5651 + C5652 + C5653) * C1720 -
             (C5416 * C7165 + C5413 * C7166 + C5415 * C1148 + C5412 * C1154 +
              C5414 * C858 + C5411 * C868) *
                 C1723 -
             (C5416 * C7167 + C5413 * C7168 + C5415 * C1155 + C5412 * C1160 +
              C5414 * C869 + C5411 * C882) *
                 C51260) *
                C51168) *
               C51307 * C51234) *
              C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C1989 +
             (C117 * C127 + C51318 * C140) * C51494 -
             (C117 * C454 + C51318 * C460) * C1990 -
             (C117 * C461 + C51318 * C472) * C51483 +
             (C117 * C992 + C51318 * C997) * C1991 +
             (C117 * C998 + C51318 * C1007) * C1988) *
                C2434 +
            (C1993 + C1994 - C1995 - C1996 + C1997 + C1998) * C51168) *
               C2436 +
           ((C2609 * C1989 + C2610 * C51494 - C3279 * C1990 - C3280 * C51483 +
             C3655 * C1991 + C3656 * C1988) *
                C2434 +
            (C4794 + C4795 - C4796 - C4797 + C4798 + C4799) * C51168) *
               C2437 +
           ((C2611 * C1989 + C2612 * C51494 - C3282 * C1990 - C3283 * C51483 +
             C3657 * C1991 + C3658 * C1988) *
                C2434 +
            (C4800 + C4801 - C4802 - C4803 + C4804 + C4805) * C51168) *
               C2438) *
              C51218 * C1456 +
          (((C1995 - (C1994 + C1993) + C1996 - C1997 - C1998) * C2434 +
            (C2001 - (C2000 + C1999) + C2002 - C2003 - C2004) * C51168) *
               C2436 +
           ((C4796 - (C4795 + C4794) + C4797 - C4798 - C4799) * C2434 +
            (C1613 * C1990 - (C337 * C51494 + C338 * C1989) + C1614 * C51483 -
             (C117 * C1148 + C51318 * C1154) * C1991 -
             (C117 * C1155 + C51318 * C1160) * C1988) *
                C51168) *
               C2437 +
           ((C4802 - (C4801 + C4800) + C4803 - C4804 - C4805) * C2434 +
            (C2785 * C1990 - (C663 * C51494 + C662 * C1989) + C2786 * C51483 -
             (C117 * C3450 + C51318 * C3455) * C1991 -
             (C117 * C3456 + C51318 * C3459) * C1988) *
                C51168) *
               C2438) *
              C51218 * C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C1989 +
            (C117 * C127 + C51318 * C140) * C51494 -
            (C117 * C454 + C51318 * C460) * C1990 -
            (C117 * C461 + C51318 * C472) * C51483 +
            (C117 * C992 + C51318 * C997) * C1991 +
            (C117 * C998 + C51318 * C1007) * C1988) *
               C107 +
           (C1993 + C1994 - C1995 - C1996 + C1997 + C1998) * C108 +
           (C1999 + C2000 - C2001 - C2002 + C2003 + C2004) * C109 +
           (C2005 + C2006 - C2007 - C2008 + C2009 + C2010) * C110) *
              C51307 * C51218 * C1456 +
          ((C1995 - (C1994 + C1993) + C1996 - C1997 - C1998) * C107 +
           (C2001 - (C2000 + C1999) + C2002 - C2003 - C2004) * C108 +
           (C2007 - (C2006 + C2005) + C2008 - C2009 - C2010) * C109 +
           (C511 * C1990 - (C174 * C51494 + C175 * C1989) + C512 * C51483 -
            (C117 * C996 + C51318 * C1005) * C1991 -
            (C117 * C1006 + C51318 * C1011) * C1988) *
               C110) *
              C51307 * C51218 * C51191)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C454 + C5412 * C460 +
             C5416 * C992 + C5413 * C997) *
                C1989 +
            (C5414 * C127 + C5411 * C140 + C5415 * C461 + C5412 * C472 +
             C5416 * C998 + C5413 * C1007) *
                C51494 -
            (C5416 * C1236 + C5413 * C1240 + C5415 * C992 + C5412 * C997 +
             C5414 * C454 + C5411 * C460) *
                C1990 -
            (C5416 * C1241 + C5413 * C1248 + C5415 * C998 + C5412 * C1007 +
             C5414 * C461 + C5411 * C472) *
                C51483 +
            (C5414 * C992 + C5411 * C997 + C5415 * C1236 + C5412 * C1240 +
             C5416 * C6389 + C5413 * C6392) *
                C1991 +
            (C5414 * C998 + C5411 * C1007 + C5415 * C1241 + C5412 * C1248 +
             C5416 * C6393 + C5413 * C6398) *
                C1988) *
               C2434 +
           ((C5454 + C5455 + C5456) * C1989 + (C5457 + C5458 + C5459) * C51494 -
            (C5824 + C5825 + C5826) * C1990 - (C5827 + C5828 + C5829) * C51483 +
            (C6414 + C6415 + C6416) * C1991 + (C6417 + C6418 + C6419) * C1988) *
               C51168) *
              C51307 * C51218 * C1456 +
          (((C5826 + C5825 + C5824) * C1990 -
            ((C5459 + C5458 + C5457) * C51494 +
             (C5456 + C5455 + C5454) * C1989) +
            (C5829 + C5828 + C5827) * C51483 - (C6416 + C6415 + C6414) * C1991 -
            (C6419 + C6418 + C6417) * C1988) *
               C2434 +
           ((C5830 + C5831 + C5832) * C1990 -
            ((C5460 + C5461 + C5462) * C51494 +
             (C5463 + C5464 + C5465) * C1989) +
            (C5833 + C5834 + C5835) * C51483 -
            (C5416 * C6391 + C5413 * C6396 + C5415 * C1238 + C5412 * C1244 +
             C5414 * C994 + C5411 * C1001) *
                C1991 -
            (C5416 * C6397 + C5413 * C6400 + C5415 * C1245 + C5412 * C1250 +
             C5414 * C1002 + C5411 * C1009) *
                C1988) *
               C51168) *
              C51307 * C51218 * C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C118 +
             (C117 * C127 + C51318 * C140) * C51248) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C51307 * C622 -
           (C351 * C110 + C352 * C109 + (C347 + C348) * C108 +
            ((C117 * C306 + C51318 * C315) * C51248 +
             (C117 * C297 + C51318 * C307) * C118) *
                C107) *
               C51307 * C623 +
           (((C117 * C627 + C51318 * C632) * C118 +
             (C117 * C633 + C51318 * C642) * C51248) *
                C107 +
            (C666 + C667) * C108 + (C668 + C669) * C109 +
            (C670 + C671) * C110) *
               C51307 * C624) *
              C51439 +
          (((C348 + C347) * C107 + (C346 + C345) * C108 + (C344 + C343) * C109 +
            (C349 + C350) * C110) *
               C51307 * C623 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C51307 * C622 -
           (((C117 * C640 + C51318 * C646) * C51248 +
             (C117 * C631 + C51318 * C641) * C118) *
                C110 +
            (C671 + C670) * C109 + (C669 + C668) * C108 +
            (C667 + C666) * C107) *
               C51307 * C624) *
              C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C118 +
            (C117 * C127 + C51318 * C140) * C51248) *
               C107 +
           (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
              C51307 * C51218 * C113 -
          (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
           (C179 + C178) * C107) *
              C51307 * C51218 * C114 +
          (C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
           (C186 + C187) * C110) *
              C51307 * C51218 * C115 -
          (((C117 * C138 + C51318 * C146) * C51248 +
            (C117 * C125 + C51318 * C139) * C118) *
               C110 +
           (C187 + C186) * C109 + C190 * C108 + C191 * C107) *
              C51307 * C51218 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C118 +
             (C117 * C127 + C51318 * C140) * C51248) *
                C2434 +
            (C178 + C179) * C51168) *
               C2436 +
           (((C117 * C297 + C51318 * C307) * C118 +
             (C117 * C306 + C51318 * C315) * C51248) *
                C2434 +
            (C348 + C347) * C51168) *
               C2437 +
           (((C117 * C627 + C51318 * C632) * C118 +
             (C117 * C633 + C51318 * C642) * C51248) *
                C2434 +
            (C666 + C667) * C51168) *
               C2438) *
              C51218 * C113 -
          (((C669 + C668) * C51168 + (C667 + C666) * C2434) * C2438 +
           (C352 * C51168 + (C347 + C348) * C2434) * C2437 +
           ((C181 + C180) * C51168 + (C179 + C178) * C2434) * C2436) *
              C51218 * C114 +
          ((C188 * C2434 + C189 * C51168) * C2436 +
           ((C346 + C345) * C2434 + (C344 + C343) * C51168) * C2437 +
           ((C668 + C669) * C2434 + (C670 + C671) * C51168) * C2438) *
              C51218 * C115 -
          ((((C117 * C640 + C51318 * C646) * C51248 +
             (C117 * C631 + C51318 * C641) * C118) *
                C51168 +
            (C671 + C670) * C2434) *
               C2438 +
           ((C350 + C349) * C51168 + C351 * C2434) * C2437 +
           (C190 * C51168 + C191 * C2434) * C2436) *
              C51218 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C118 +
              (C117 * C127 + C51318 * C140) * C51248) *
                 C2434 +
             (C178 + C179) * C51168) *
                C2436 +
            ((C2617 + C2618) * C2434 + C2590 * C51168) * C2437 +
            C2969 * C2438) *
               C622 -
           ((C2951 * C51168 + (C2970 + C2971) * C2434) * C2438 +
            (C2600 * C51168 + (C2620 + C2619) * C2434) * C2437 +
            (C2601 * C51168 + (C2618 + C2617) * C2434) * C2436) *
               C623 +
           (C2969 * C2436 + ((C2971 + C2970) * C2434 + C2956 * C51168) * C2437 +
            (((C117 * C2936 + C51318 * C2939) * C118 +
              (C117 * C2940 + C51318 * C2945) * C51248) *
                 C2434 +
             (C2972 + C2973) * C51168) *
                C2438) *
               C624) *
              C51439 +
          (((C2590 * C2434 + C2602 * C51168) * C2436 +
            (C2595 * C2434 + C2603 * C51168) * C2437 +
            (C2956 * C2434 + (C2623 + C2624) * C51168) * C2438) *
               C623 -
           (C2968 * C2438 + (C352 * C51168 + C2601 * C2434) * C2437 +
            ((C181 + C180) * C51168 + (C179 + C178) * C2434) * C2436) *
               C622 -
           ((((C117 * C2943 + C51318 * C2947) * C51248 +
              (C117 * C2938 + C51318 * C2944) * C118) *
                 C51168 +
             (C2973 + C2972) * C2434) *
                C2438 +
            ((C2624 + C2623) * C51168 + C2951 * C2434) * C2437 +
            C2968 * C2436) *
               C624) *
              C51191)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C454 + C5412 * C460 +
             C5416 * C992 + C5413 * C997) *
                C118 +
            (C5414 * C127 + C5411 * C140 + C5415 * C461 + C5412 * C472 +
             C5416 * C998 + C5413 * C1007) *
                C51248) *
               C2434 +
           ((C5454 + C5455 + C5456) * C118 + (C5457 + C5458 + C5459) * C51248) *
               C51168) *
              C51307 * C51218 * C113 -
          (((C5460 + C5461 + C5462) * C51248 + (C5463 + C5464 + C5465) * C118) *
               C51168 +
           ((C5459 + C5458 + C5457) * C51248 + (C5456 + C5455 + C5454) * C118) *
               C2434) *
              C51307 * C51218 * C114 +
          (((C5465 + C5464 + C5463) * C118 + (C5462 + C5461 + C5460) * C51248) *
               C2434 +
           ((C5466 + C5467 + C5468) * C118 + (C5469 + C5470 + C5471) * C51248) *
               C51168) *
              C51307 * C51218 * C115 -
          (((C5416 * C1006 + C5413 * C1011 + C5415 * C469 + C5412 * C476 +
             C5414 * C134 + C5411 * C144) *
                C51248 +
            (C5416 * C996 + C5413 * C1005 + C5415 * C458 + C5412 * C468 +
             C5414 * C123 + C5411 * C135) *
                C118) *
               C51168 +
           ((C5471 + C5470 + C5469) * C51248 + (C5468 + C5467 + C5466) * C118) *
               C2434) *
              C51307 * C51218 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5414 * C119 + C5411 * C126 + C5415 * C454 + C5412 * C460 +
              C5416 * C992 + C5413 * C997) *
                 C118 +
             (C5414 * C127 + C5411 * C140 + C5415 * C461 + C5412 * C472 +
              C5416 * C998 + C5413 * C1007) *
                 C51248) *
                C2434 +
            ((C5454 + C5455 + C5456) * C118 +
             (C5457 + C5458 + C5459) * C51248) *
                C51168) *
               C51307 * C622 -
           (((C5642 + C5643 + C5644) * C51248 +
             (C5645 + C5646 + C5647) * C118) *
                C51168 +
            ((C5416 * C1151 + C5413 * C1158 + C5415 * C865 + C5412 * C880 +
              C5414 * C306 + C5411 * C315) *
                 C51248 +
             (C5416 * C1146 + C5413 * C1150 + C5415 * C856 + C5412 * C864 +
              C5414 * C297 + C5411 * C307) *
                 C118) *
                C2434) *
               C51307 * C623 +
           (((C5414 * C627 + C5411 * C632 + C5415 * C860 + C5412 * C872 +
              C5416 * C3448 + C5413 * C3451) *
                 C118 +
             (C5414 * C633 + C5411 * C642 + C5415 * C873 + C5412 * C884 +
              C5416 * C3452 + C5413 * C3457) *
                 C51248) *
                C2434 +
            ((C5994 + C5995 + C5996) * C118 +
             (C5997 + C5998 + C5999) * C51248) *
                C51168) *
               C51307 * C624) *
              C51439 +
          ((((C5647 + C5646 + C5645) * C118 +
             (C5644 + C5643 + C5642) * C51248) *
                C2434 +
            ((C5648 + C5649 + C5650) * C118 +
             (C5651 + C5652 + C5653) * C51248) *
                C51168) *
               C51307 * C623 -
           (((C5460 + C5461 + C5462) * C51248 +
             (C5463 + C5464 + C5465) * C118) *
                C51168 +
            ((C5459 + C5458 + C5457) * C51248 +
             (C5456 + C5455 + C5454) * C118) *
                C2434) *
               C51307 * C622 -
           (((C5416 * C3456 + C5413 * C3459 + C5415 * C877 + C5412 * C886 +
              C5414 * C637 + C5411 * C644) *
                 C51248 +
             (C5416 * C3450 + C5413 * C3455 + C5415 * C862 + C5412 * C876 +
              C5414 * C629 + C5411 * C636) *
                 C118) *
                C51168 +
            ((C5999 + C5998 + C5997) * C51248 +
             (C5996 + C5995 + C5994) * C118) *
                C2434) *
               C51307 * C624) *
              C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C118 +
            (C117 * C127 + C51318 * C140) * C51248) *
               C107 +
           (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
              C51307 * C737 -
          (C351 * C110 + C352 * C109 + (C347 + C348) * C108 +
           ((C117 * C306 + C51318 * C315) * C51248 +
            (C117 * C297 + C51318 * C307) * C118) *
               C107) *
              C51307 * C738 +
          (((C117 * C627 + C51318 * C632) * C118 +
            (C117 * C633 + C51318 * C642) * C51248) *
               C107 +
           (C666 + C667) * C108 + (C668 + C669) * C109 + (C670 + C671) * C110) *
              C51307 * C739 -
          (((C117 * C746 + C51318 * C754) * C51248 +
            (C117 * C742 + C51318 * C747) * C118) *
               C110 +
           ((C117 * C748 + C51318 * C755) * C51248 +
            (C117 * C743 + C51318 * C749) * C118) *
               C109 +
           ((C117 * C750 + C51318 * C756) * C51248 +
            (C117 * C744 + C51318 * C751) * C118) *
               C108 +
           ((C117 * C752 + C51318 * C757) * C51248 +
            (C117 * C745 + C51318 * C753) * C118) *
               C107) *
              C51307 * C740) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C118 +
             (C117 * C127 + C51318 * C140) * C51248) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C51307 * C51446 -
           (C351 * C110 + C352 * C109 + (C347 + C348) * C108 +
            ((C117 * C306 + C51318 * C315) * C51248 +
             (C117 * C297 + C51318 * C307) * C118) *
                C107) *
               C51307 * C51234) *
              C291 +
          (((C348 + C347) * C107 + (C346 + C345) * C108 + (C344 + C343) * C109 +
            (C349 + C350) * C110) *
               C51307 * C51234 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C51307 * C51446) *
              C292 +
          ((C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
            (C186 + C187) * C110) *
               C51307 * C51446 -
           (((C117 * C310 + C51318 * C317) * C51248 +
             (C117 * C299 + C51318 * C311) * C118) *
                C110 +
            (C350 + C349) * C109 + C351 * C108 + C352 * C107) *
               C51307 * C51234) *
              C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C118 +
              (C117 * C127 + C51318 * C140) * C51248) *
                 C2434 +
             (C178 + C179) * C51168) *
                C2436 +
            ((C2617 + C2618) * C2434 + C2590 * C51168) * C2437 +
            ((C2619 + C2620) * C2434 + C2595 * C51168) * C2438) *
               C51446 -
           (((C2621 + C2622) * C51168 +
             ((C117 * C752 + C51318 * C757) * C51248 +
              (C117 * C745 + C51318 * C753) * C118) *
                 C2434) *
                C2438 +
            (C2600 * C51168 + (C2620 + C2619) * C2434) * C2437 +
            (C2601 * C51168 + (C2618 + C2617) * C2434) * C2436) *
               C51234) *
              C291 +
          (((C2590 * C2434 + C2602 * C51168) * C2436 +
            (C2595 * C2434 + C2603 * C51168) * C2437 +
            ((C2622 + C2621) * C2434 + (C2623 + C2624) * C51168) * C2438) *
               C51234 -
           ((C2608 * C51168 + C2600 * C2434) * C2438 +
            (C352 * C51168 + C2601 * C2434) * C2437 +
            ((C181 + C180) * C51168 + (C179 + C178) * C2434) * C2436) *
               C51446) *
              C292 +
          (((C188 * C2434 + C189 * C51168) * C2436 +
            (C2602 * C2434 + (C344 + C343) * C51168) * C2437 +
            (C2603 * C2434 + (C670 + C671) * C51168) * C2438) *
               C51446 -
           ((((C117 * C746 + C51318 * C754) * C51248 +
              (C117 * C742 + C51318 * C747) * C118) *
                 C51168 +
             (C2624 + C2623) * C2434) *
                C2438 +
            ((C671 + C670) * C51168 + C2608 * C2434) * C2437 +
            (C351 * C51168 + C352 * C2434) * C2436) *
               C51234) *
              C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C118 +
             (C117 * C127 + C51318 * C140) * C51248) *
                C2434 +
            (C178 + C179) * C51168) *
               C2436 +
           ((C2617 + C2618) * C2434 + C2590 * C51168) * C2437 + C2969 * C2438) *
              C737 -
          (C3089 * C2438 + (C2600 * C51168 + (C2620 + C2619) * C2434) * C2437 +
           (C2601 * C51168 + (C2618 + C2617) * C2434) * C2436) *
              C738 +
          (C2969 * C2436 + ((C2971 + C2970) * C2434 + C2956 * C51168) * C2437 +
           ((C3090 + C3091) * C2434 + (C2972 + C2973) * C51168) * C2438) *
              C739 -
          ((((C117 * C3073 + C51318 * C3077) * C51248 +
             (C117 * C3071 + C51318 * C3074) * C118) *
                C51168 +
            ((C117 * C3075 + C51318 * C3078) * C51248 +
             (C117 * C3072 + C51318 * C3076) * C118) *
                C2434) *
               C2438 +
           ((C2973 + C2972) * C51168 + (C3091 + C3090) * C2434) * C2437 +
           C3089 * C2436) *
              C740) *
         C51186) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5414 * C119 + C5411 * C126 + C5415 * C454 + C5412 * C460 +
              C5416 * C992 + C5413 * C997) *
                 C118 +
             (C5414 * C127 + C5411 * C140 + C5415 * C461 + C5412 * C472 +
              C5416 * C998 + C5413 * C1007) *
                 C51248) *
                C2434 +
            ((C5454 + C5455 + C5456) * C118 +
             (C5457 + C5458 + C5459) * C51248) *
                C51168) *
               C51307 * C51446 -
           (((C5642 + C5643 + C5644) * C51248 +
             (C5645 + C5646 + C5647) * C118) *
                C51168 +
            ((C5416 * C1151 + C5413 * C1158 + C5415 * C865 + C5412 * C880 +
              C5414 * C306 + C5411 * C315) *
                 C51248 +
             (C5416 * C1146 + C5413 * C1150 + C5415 * C856 + C5412 * C864 +
              C5414 * C297 + C5411 * C307) *
                 C118) *
                C2434) *
               C51307 * C51234) *
              C291 +
          ((((C5647 + C5646 + C5645) * C118 +
             (C5644 + C5643 + C5642) * C51248) *
                C2434 +
            ((C5648 + C5649 + C5650) * C118 +
             (C5651 + C5652 + C5653) * C51248) *
                C51168) *
               C51307 * C51234 -
           (((C5460 + C5461 + C5462) * C51248 +
             (C5463 + C5464 + C5465) * C118) *
                C51168 +
            ((C5459 + C5458 + C5457) * C51248 +
             (C5456 + C5455 + C5454) * C118) *
                C2434) *
               C51307 * C51446) *
              C292 +
          ((((C5465 + C5464 + C5463) * C118 +
             (C5462 + C5461 + C5460) * C51248) *
                C2434 +
            ((C5466 + C5467 + C5468) * C118 +
             (C5469 + C5470 + C5471) * C51248) *
                C51168) *
               C51307 * C51446 -
           (((C5416 * C1157 + C5413 * C1161 + C5415 * C871 + C5412 * C883 +
              C5414 * C300 + C5411 * C312) *
                 C51248 +
             (C5416 * C1149 + C5413 * C1156 + C5415 * C859 + C5412 * C870 +
              C5414 * C294 + C5411 * C301) *
                 C118) *
                C51168 +
            ((C5653 + C5652 + C5651) * C51248 +
             (C5650 + C5649 + C5648) * C118) *
                C2434) *
               C51307 * C51234) *
              C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C454 + C5412 * C460 +
             C5416 * C992 + C5413 * C997) *
                C118 +
            (C5414 * C127 + C5411 * C140 + C5415 * C461 + C5412 * C472 +
             C5416 * C998 + C5413 * C1007) *
                C51248) *
               C2434 +
           ((C5454 + C5455 + C5456) * C118 + (C5457 + C5458 + C5459) * C51248) *
               C51168) *
              C51307 * C737 -
          (((C5642 + C5643 + C5644) * C51248 + (C5645 + C5646 + C5647) * C118) *
               C51168 +
           ((C5416 * C1151 + C5413 * C1158 + C5415 * C865 + C5412 * C880 +
             C5414 * C306 + C5411 * C315) *
                C51248 +
            (C5416 * C1146 + C5413 * C1150 + C5415 * C856 + C5412 * C864 +
             C5414 * C297 + C5411 * C307) *
                C118) *
               C2434) *
              C51307 * C738 +
          (((C5414 * C627 + C5411 * C632 + C5415 * C860 + C5412 * C872 +
             C5416 * C3448 + C5413 * C3451) *
                C118 +
            (C5414 * C633 + C5411 * C642 + C5415 * C873 + C5412 * C884 +
             C5416 * C3452 + C5413 * C3457) *
                C51248) *
               C2434 +
           ((C5994 + C5995 + C5996) * C118 + (C5997 + C5998 + C5999) * C51248) *
               C51168) *
              C51307 * C739 -
          (((C5416 * C3635 + C5413 * C3637 + C5415 * C3244 + C5412 * C3250 +
             C5414 * C750 + C5411 * C756) *
                C51248 +
            (C5416 * C3631 + C5413 * C3634 + C5415 * C3238 + C5412 * C3243 +
             C5414 * C744 + C5411 * C751) *
                C118) *
               C51168 +
           ((C5416 * C3633 + C5413 * C3636 + C5415 * C3242 + C5412 * C3249 +
             C5414 * C752 + C5411 * C757) *
                C51248 +
            (C5416 * C3630 + C5413 * C3632 + C5415 * C3237 + C5412 * C3241 +
             C5414 * C745 + C5411 * C753) *
                C118) *
               C2434) *
              C51307 * C740) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C452 +
            (C117 * C127 + C51318 * C140) * C51448 -
            (C117 * C454 + C51318 * C460) * C453 -
            (C117 * C461 + C51318 * C472) * C51260) *
               C107 +
           (C479 + C480 - C513 - C514) * C108 + C523 * C109 + C524 * C110) *
              C51307 * C622 +
          (((C117 * C856 + C51318 * C864) * C453 -
            ((C117 * C306 + C51318 * C315) * C51448 +
             (C117 * C297 + C51318 * C307) * C452) +
            (C117 * C865 + C51318 * C880) * C51260) *
               C107 +
           ((C117 * C857 + C51318 * C866) * C453 -
            (C339 * C51448 + C340 * C452) +
            (C117 * C867 + C51318 * C881) * C51260) *
               C108 +
           ((C117 * C858 + C51318 * C868) * C453 -
            (C337 * C51448 + C338 * C452) +
            (C117 * C869 + C51318 * C882) * C51260) *
               C109 +
           ((C117 * C859 + C51318 * C870) * C453 -
            (C335 * C51448 + C336 * C452) +
            (C117 * C871 + C51318 * C883) * C51260) *
               C110) *
              C51307 * C623 +
          (((C117 * C627 + C51318 * C632) * C452 +
            (C117 * C633 + C51318 * C642) * C51448 -
            (C117 * C860 + C51318 * C872) * C453 -
            (C117 * C873 + C51318 * C884) * C51260) *
               C107 +
           (C660 * C452 + C661 * C51448 - (C117 * C861 + C51318 * C874) * C453 -
            (C117 * C875 + C51318 * C885) * C51260) *
               C108 +
           (C662 * C452 + C663 * C51448 - (C117 * C862 + C51318 * C876) * C453 -
            (C117 * C877 + C51318 * C886) * C51260) *
               C109 +
           (C664 * C452 + C665 * C51448 - (C117 * C863 + C51318 * C878) * C453 -
            (C117 * C879 + C51318 * C887) * C51260) *
               C110) *
              C51307 * C624) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C452 +
            (C117 * C127 + C51318 * C140) * C51448 -
            (C117 * C454 + C51318 * C460) * C453 -
            (C117 * C461 + C51318 * C472) * C51260) *
               C107 +
           (C479 + C480 - C513 - C514) * C108 + C523 * C109 + C524 * C110) *
              C51307 * C51218 * C291 +
          ((C513 - (C480 + C479) + C514) * C107 +
           (C515 - (C486 + C485) + C516) * C108 +
           (C517 - (C492 + C491) + C518) * C109 +
           (C519 - (C499 + C500) + C520) * C110) *
              C51307 * C51218 * C292 +
          (C523 * C107 + C524 * C108 + (C500 + C499 - C519 - C520) * C109 +
           (C176 * C452 + C177 * C51448 - (C117 * C459 + C51318 * C470) * C453 -
            (C117 * C471 + C51318 * C477) * C51260) *
               C110) *
              C51307 * C51218 * C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C452 +
             (C117 * C127 + C51318 * C140) * C51448 -
             (C117 * C454 + C51318 * C460) * C453 -
             (C117 * C461 + C51318 * C472) * C51260) *
                C2434 +
            (C479 + C480 - C513 - C514) * C51168) *
               C2436 +
           ((C2609 * C452 + C2610 * C51448 -
             (C117 * C856 + C51318 * C864) * C453 -
             (C117 * C865 + C51318 * C880) * C51260) *
                C2434 +
            (C1596 + C1595 - C1617 - C1618) * C51168) *
               C2437 +
           ((C2611 * C452 + C2612 * C51448 -
             (C117 * C860 + C51318 * C872) * C453 -
             (C117 * C873 + C51318 * C884) * C51260) *
                C2434 +
            (C2771 + C2772 - C2787 - C2788) * C51168) *
               C2438) *
              C51218 * C291 +
          (((C513 - (C480 + C479) + C514) * C2434 +
            (C515 - (C486 + C485) + C516) * C51168) *
               C2436 +
           ((C1617 - (C1595 + C1596) + C1618) * C2434 +
            (C1619 - (C1601 + C1602) + C1620) * C51168) *
               C2437 +
           ((C2787 - (C2772 + C2771) + C2788) * C2434 +
            (C2789 - (C2779 + C2780) + C2790) * C51168) *
               C2438) *
              C51218 * C292 +
          ((C523 * C2434 + C524 * C51168) * C2436 +
           ((C1602 + C1601 - C1619 - C1620) * C2434 +
            (C1608 + C1607 - C1621 - C1622) * C51168) *
               C2437 +
           ((C2780 + C2779 - C2789 - C2790) * C2434 +
            (C664 * C452 + C665 * C51448 -
             (C117 * C863 + C51318 * C878) * C453 -
             (C117 * C879 + C51318 * C887) * C51260) *
                C51168) *
               C2438) *
              C51218 * C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C452 +
             (C117 * C127 + C51318 * C140) * C51448 -
             (C117 * C454 + C51318 * C460) * C453 -
             (C117 * C461 + C51318 * C472) * C51260) *
                C2434 +
            (C479 + C480 - C513 - C514) * C51168) *
               C2436 +
           ((C3254 + C3255 - C3289 - C3290) * C2434 +
            (C1596 + C1595 - C1617 - C1618) * C51168) *
               C2437 +
           C3302 * C2438) *
              C622 +
          (((C3289 - (C3255 + C3254) + C3290) * C2434 +
            (C1617 - (C1595 + C1596) + C1618) * C51168) *
               C2436 +
           ((C3291 - (C3261 + C3260) + C3292) * C2434 +
            (C2787 - (C2772 + C2771) + C2788) * C51168) *
               C2437 +
           ((C3294 - (C3269 + C3270) + C3295) * C2434 +
            (C3296 - (C3275 + C3276) + C3297) * C51168) *
               C2438) *
              C623 +
          (C3302 * C2436 +
           ((C3270 + C3269 - C3294 - C3295) * C2434 +
            (C3276 + C3275 - C3296 - C3297) * C51168) *
               C2437 +
           ((C3087 * C452 + C3088 * C51448 -
             (C117 * C3239 + C51318 * C3245) * C453 -
             (C117 * C3246 + C51318 * C3251) * C51260) *
                C2434 +
            (C2966 * C452 + C2967 * C51448 -
             (C117 * C3240 + C51318 * C3247) * C453 -
             (C117 * C3248 + C51318 * C3252) * C51260) *
                C51168) *
               C2438) *
              C624) *
         C51186) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C454 + C5412 * C460 +
             C5416 * C992 + C5413 * C997) *
                C452 +
            (C5414 * C127 + C5411 * C140 + C5415 * C461 + C5412 * C472 +
             C5416 * C998 + C5413 * C1007) *
                C51448 -
            (C5416 * C1236 + C5413 * C1240 + C5415 * C992 + C5412 * C997 +
             C5414 * C454 + C5411 * C460) *
                C453 -
            (C5416 * C1241 + C5413 * C1248 + C5415 * C998 + C5412 * C1007 +
             C5414 * C461 + C5411 * C472) *
                C51260) *
               C2434 +
           ((C5454 + C5455 + C5456) * C452 + (C5457 + C5458 + C5459) * C51448 -
            (C5824 + C5825 + C5826) * C453 - (C5827 + C5828 + C5829) * C51260) *
               C51168) *
              C51307 * C51218 * C291 +
          (((C5826 + C5825 + C5824) * C453 -
            ((C5459 + C5458 + C5457) * C51448 +
             (C5456 + C5455 + C5454) * C452) +
            (C5829 + C5828 + C5827) * C51260) *
               C2434 +
           ((C5830 + C5831 + C5832) * C453 -
            ((C5460 + C5461 + C5462) * C51448 +
             (C5463 + C5464 + C5465) * C452) +
            (C5833 + C5834 + C5835) * C51260) *
               C51168) *
              C51307 * C51218 * C292 +
          (((C5465 + C5464 + C5463) * C452 + (C5462 + C5461 + C5460) * C51448 -
            (C5832 + C5831 + C5830) * C453 - (C5835 + C5834 + C5833) * C51260) *
               C2434 +
           ((C5466 + C5467 + C5468) * C452 + (C5469 + C5470 + C5471) * C51448 -
            (C5416 * C1239 + C5413 * C1246 + C5415 * C995 + C5412 * C1003 +
             C5414 * C457 + C5411 * C466) *
                C453 -
            (C5416 * C1247 + C5413 * C1251 + C5415 * C1004 + C5412 * C1010 +
             C5414 * C467 + C5411 * C475) *
                C51260) *
               C51168) *
              C51307 * C51218 * C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C454 + C5412 * C460 +
             C5416 * C992 + C5413 * C997) *
                C452 +
            (C5414 * C127 + C5411 * C140 + C5415 * C461 + C5412 * C472 +
             C5416 * C998 + C5413 * C1007) *
                C51448 -
            (C5416 * C1236 + C5413 * C1240 + C5415 * C992 + C5412 * C997 +
             C5414 * C454 + C5411 * C460) *
                C453 -
            (C5416 * C1241 + C5413 * C1248 + C5415 * C998 + C5412 * C1007 +
             C5414 * C461 + C5411 * C472) *
                C51260) *
               C2434 +
           ((C5454 + C5455 + C5456) * C452 + (C5457 + C5458 + C5459) * C51448 -
            (C5824 + C5825 + C5826) * C453 - (C5827 + C5828 + C5829) * C51260) *
               C51168) *
              C51307 * C622 +
          (((C5414 * C856 + C5411 * C864 + C5415 * C1146 + C5412 * C1150 +
             C5416 * C3760 + C5413 * C3764) *
                C453 -
            ((C5416 * C1151 + C5413 * C1158 + C5415 * C865 + C5412 * C880 +
              C5414 * C306 + C5411 * C315) *
                 C51448 +
             (C5416 * C1146 + C5413 * C1150 + C5415 * C856 + C5412 * C864 +
              C5414 * C297 + C5411 * C307) *
                 C452) +
            (C5414 * C865 + C5411 * C880 + C5415 * C1151 + C5412 * C1158 +
             C5416 * C3765 + C5413 * C3772) *
                C51260) *
               C2434 +
           ((C5414 * C857 + C5411 * C866 + C5415 * C1147 + C5412 * C1152 +
             C5416 * C3761 + C5413 * C3766) *
                C453 -
            ((C5642 + C5643 + C5644) * C51448 +
             (C5645 + C5646 + C5647) * C452) +
            (C5414 * C867 + C5411 * C881 + C5415 * C1153 + C5412 * C1159 +
             C5416 * C3767 + C5413 * C3773) *
                C51260) *
               C51168) *
              C51307 * C623 +
          (((C5414 * C627 + C5411 * C632 + C5415 * C860 + C5412 * C872 +
             C5416 * C3448 + C5413 * C3451) *
                C452 +
            (C5414 * C633 + C5411 * C642 + C5415 * C873 + C5412 * C884 +
             C5416 * C3452 + C5413 * C3457) *
                C51448 -
            (C5416 * C3762 + C5413 * C3768 + C5415 * C3448 + C5412 * C3451 +
             C5414 * C860 + C5411 * C872) *
                C453 -
            (C5416 * C3769 + C5413 * C3774 + C5415 * C3452 + C5412 * C3457 +
             C5414 * C873 + C5411 * C884) *
                C51260) *
               C2434 +
           ((C5994 + C5995 + C5996) * C452 + (C5997 + C5998 + C5999) * C51448 -
            (C5416 * C3763 + C5413 * C3770 + C5415 * C3449 + C5412 * C3453 +
             C5414 * C861 + C5411 * C874) *
                C453 -
            (C5416 * C3771 + C5413 * C3775 + C5415 * C3454 + C5412 * C3458 +
             C5414 * C875 + C5411 * C885) *
                C51260) *
               C51168) *
              C51307 * C624) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                 C118 +
             (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                 C51248) *
                C51490 +
            ((C10958 + C10959) * C118 + (C10960 + C10961) * C51248) * C51491 +
            C10982 * C8259) *
               C51307 * C1350 -
           (C11170 * C8259 +
            ((C11158 + C11159) * C51248 + (C11160 + C11161) * C118) * C51491 +
            ((C10924 * C865 + C51382 * C880 + C10923 * C306 + C51463 * C315) *
                 C51248 +
             (C10924 * C856 + C51382 * C864 + C10923 * C297 + C51463 * C307) *
                 C118) *
                C51490) *
               C51307 * C51234) *
              C51492 +
          ((((C11161 + C11160) * C118 + (C11159 + C11158) * C51248) * C51490 +
            ((C11157 + C11156) * C118 + (C11155 + C11154) * C51248) * C51491 +
            ((C11162 + C11163) * C118 + (C11164 + C11165) * C51248) * C8259) *
               C51307 * C51234 -
           (C10983 * C8259 +
            ((C10965 + C10964) * C51248 + (C10963 + C10962) * C118) * C51491 +
            ((C10961 + C10960) * C51248 + (C10959 + C10958) * C118) * C51490) *
               C51307 * C1350) *
              C51477 +
          ((C10982 * C51490 +
            ((C10969 + C10968) * C118 + (C10967 + C10966) * C51248) * C51491 +
            ((C10970 + C10971) * C118 + (C10972 + C10973) * C51248) * C8259) *
               C51307 * C1350 -
           (((C10924 * C1590 + C51382 * C1591 + C10923 * C309 + C51463 * C316) *
                 C51248 +
             (C10924 * C1588 + C51382 * C1589 + C10923 * C298 + C51463 * C308) *
                 C118) *
                C8259 +
            ((C11165 + C11164) * C51248 + (C11163 + C11162) * C118) * C51491 +
            C11170 * C51490) *
               C51307 * C51234) *
              C1354)) /
        (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                 C118 +
             (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                 C51248) *
                C51490 +
            ((C10958 + C10959) * C118 + (C10960 + C10961) * C51248) * C51491 +
            C10982 * C8259) *
               C51307 * C51493 -
           (C11170 * C8259 +
            ((C11158 + C11159) * C51248 + (C11160 + C11161) * C118) * C51491 +
            ((C10924 * C865 + C51382 * C880 + C10923 * C306 + C51463 * C315) *
                 C51248 +
             (C10924 * C856 + C51382 * C864 + C10923 * C297 + C51463 * C307) *
                 C118) *
                C51490) *
               C51307 * C51480 +
           (((C10923 * C627 + C51463 * C632 + C10924 * C860 + C51382 * C872) *
                 C118 +
             (C10923 * C633 + C51463 * C642 + C10924 * C873 + C51382 * C884) *
                 C51248) *
                C51490 +
            ((C11524 + C11525) * C118 + (C11526 + C11527) * C51248) * C51491 +
            ((C11528 + C11529) * C118 + (C11530 + C11531) * C51248) * C8259) *
               C51307 * C1455) *
              C1456 +
          ((((C11161 + C11160) * C118 + (C11159 + C11158) * C51248) * C51490 +
            ((C11157 + C11156) * C118 + (C11155 + C11154) * C51248) * C51491 +
            ((C11162 + C11163) * C118 + (C11164 + C11165) * C51248) * C8259) *
               C51307 * C51480 -
           (C10983 * C8259 +
            ((C10965 + C10964) * C51248 + (C10963 + C10962) * C118) * C51491 +
            ((C10961 + C10960) * C51248 + (C10959 + C10958) * C118) * C51490) *
               C51307 * C51493 -
           (((C10924 * C879 + C51382 * C887 + C10923 * C639 + C51463 * C645) *
                 C51248 +
             (C10924 * C863 + C51382 * C878 + C10923 * C630 + C51463 * C638) *
                 C118) *
                C8259 +
            ((C11531 + C11530) * C51248 + (C11529 + C11528) * C118) * C51491 +
            ((C11527 + C11526) * C51248 + (C11525 + C11524) * C118) * C51490) *
               C51307 * C1455) *
              C51191)) /
        (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                 C452 +
             (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                 C51448 -
             (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                 C453 -
             (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                 C51260) *
                C51490 +
            ((C10958 + C10959) * C452 + (C10960 + C10961) * C51448 -
             (C11343 + C11344) * C453 - (C11345 + C11346) * C51260) *
                C51491 +
            C11361 * C8259) *
               C51307 * C1350 +
           (((C10923 * C856 + C51463 * C864 + C10924 * C1146 + C51382 * C1150) *
                 C453 -
             ((C10924 * C865 + C51382 * C880 + C10923 * C306 + C51463 * C315) *
                  C51448 +
              (C10924 * C856 + C51382 * C864 + C10923 * C297 + C51463 * C307) *
                  C452) +
             (C10923 * C865 + C51463 * C880 + C10924 * C1151 + C51382 * C1158) *
                 C51260) *
                C51490 +
            ((C12692 + C12693) * C453 -
             ((C11158 + C11159) * C51448 + (C11160 + C11161) * C452) +
             (C12694 + C12695) * C51260) *
                C51491 +
            ((C12696 + C12697) * C453 - (C11166 * C51448 + C11167 * C452) +
             (C12698 + C12699) * C51260) *
                C8259) *
               C51307 * C51234) *
              C1456 +
          ((((C11344 + C11343) * C453 -
             ((C10961 + C10960) * C51448 + (C10959 + C10958) * C452) +
             (C11346 + C11345) * C51260) *
                C51490 +
            ((C11349 + C11348) * C453 -
             ((C10965 + C10964) * C51448 + (C10963 + C10962) * C452) +
             (C11351 + C11350) * C51260) *
                C51491 +
            ((C11352 + C11353) * C453 - (C10976 * C51448 + C10977 * C452) +
             (C11354 + C11355) * C51260) *
                C8259) *
               C51307 * C1350 +
           (((C11161 + C11160) * C452 + (C11159 + C11158) * C51448 -
             (C12693 + C12692) * C453 - (C12695 + C12694) * C51260) *
                C51490 +
            ((C11157 + C11156) * C452 + (C11155 + C11154) * C51448 -
             (C12697 + C12696) * C453 - (C12699 + C12698) * C51260) *
                C51491 +
            ((C11162 + C11163) * C452 + (C11164 + C11165) * C51448 -
             (C10924 * C1149 + C51382 * C1156 + C10923 * C859 + C51463 * C870) *
                 C453 -
             (C10924 * C1157 + C51382 * C1161 + C10923 * C871 + C51463 * C883) *
                 C51260) *
                C8259) *
               C51307 * C51234) *
              C51191)) /
        (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                 C1722 +
             (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                 C1720 -
             (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                 C1723 -
             (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                 C51260) *
                C51490 +
            ((C10958 + C10959) * C1722 + (C10960 + C10961) * C1720 -
             (C11343 + C11344) * C1723 - (C11345 + C11346) * C51260) *
                C51491 +
            C12852 * C8259) *
               C51307 * C1350 +
           (((C10923 * C856 + C51463 * C864 + C10924 * C1146 + C51382 * C1150) *
                 C1723 -
             ((C10924 * C865 + C51382 * C880 + C10923 * C306 + C51463 * C315) *
                  C1720 +
              (C10924 * C856 + C51382 * C864 + C10923 * C297 + C51463 * C307) *
                  C1722) +
             (C10923 * C865 + C51463 * C880 + C10924 * C1151 + C51382 * C1158) *
                 C51260) *
                C51490 +
            ((C12692 + C12693) * C1723 -
             ((C11158 + C11159) * C1720 + (C11160 + C11161) * C1722) +
             (C12694 + C12695) * C51260) *
                C51491 +
            ((C12696 + C12697) * C1723 - (C11166 * C1720 + C11167 * C1722) +
             (C12698 + C12699) * C51260) *
                C8259) *
               C51307 * C51234) *
              C51439 +
          ((((C11344 + C11343) * C1723 -
             ((C10961 + C10960) * C1720 + (C10959 + C10958) * C1722) +
             (C11346 + C11345) * C51260) *
                C51490 +
            ((C11349 + C11348) * C1723 -
             ((C10965 + C10964) * C1720 + (C10963 + C10962) * C1722) +
             (C11351 + C11350) * C51260) *
                C51491 +
            ((C11352 + C11353) * C1723 - (C10976 * C1720 + C10977 * C1722) +
             (C11354 + C11355) * C51260) *
                C8259) *
               C51307 * C1350 +
           (((C11161 + C11160) * C1722 + (C11159 + C11158) * C1720 -
             (C12693 + C12692) * C1723 - (C12695 + C12694) * C51260) *
                C51490 +
            ((C11157 + C11156) * C1722 + (C11155 + C11154) * C1720 -
             (C12697 + C12696) * C1723 - (C12699 + C12698) * C51260) *
                C51491 +
            ((C11162 + C11163) * C1722 + (C11164 + C11165) * C1720 -
             (C10924 * C1149 + C51382 * C1156 + C10923 * C859 + C51463 * C870) *
                 C1723 -
             (C10924 * C1157 + C51382 * C1161 + C10923 * C871 + C51463 * C883) *
                 C51260) *
                C8259) *
               C51307 * C51234) *
              C51191)) /
        (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                C1722 +
            (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                C1720 -
            (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                C1723 -
            (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                C51260) *
               C51490 +
           ((C10958 + C10959) * C1722 + (C10960 + C10961) * C1720 -
            (C11343 + C11344) * C1723 - (C11345 + C11346) * C51260) *
               C51491 +
           C12852 * C8259) *
              C51307 * C51493 +
          (((C10923 * C856 + C51463 * C864 + C10924 * C1146 + C51382 * C1150) *
                C1723 -
            ((C10924 * C865 + C51382 * C880 + C10923 * C306 + C51463 * C315) *
                 C1720 +
             (C10924 * C856 + C51382 * C864 + C10923 * C297 + C51463 * C307) *
                 C1722) +
            (C10923 * C865 + C51463 * C880 + C10924 * C1151 + C51382 * C1158) *
                C51260) *
               C51490 +
           ((C12692 + C12693) * C1723 -
            ((C11158 + C11159) * C1720 + (C11160 + C11161) * C1722) +
            (C12694 + C12695) * C51260) *
               C51491 +
           ((C12696 + C12697) * C1723 - (C11166 * C1720 + C11167 * C1722) +
            (C12698 + C12699) * C51260) *
               C8259) *
              C51307 * C51480 +
          (((C10923 * C627 + C51463 * C632 + C10924 * C860 + C51382 * C872) *
                C1722 +
            (C10923 * C633 + C51463 * C642 + C10924 * C873 + C51382 * C884) *
                C1720 -
            (C10924 * C3448 + C51382 * C3451 + C10923 * C860 + C51463 * C872) *
                C1723 -
            (C10924 * C3452 + C51382 * C3457 + C10923 * C873 + C51463 * C884) *
                C51260) *
               C51490 +
           ((C11524 + C11525) * C1722 + (C11526 + C11527) * C1720 -
            (C10924 * C3449 + C51382 * C3453 + C10923 * C861 + C51463 * C874) *
                C1723 -
            (C10924 * C3454 + C51382 * C3458 + C10923 * C875 + C51463 * C885) *
                C51260) *
               C51491 +
           ((C11528 + C11529) * C1722 + (C11530 + C11531) * C1720 -
            (C10924 * C3450 + C51382 * C3455 + C10923 * C862 + C51463 * C876) *
                C1723 -
            (C10924 * C3456 + C51382 * C3459 + C10923 * C877 + C51463 * C886) *
                C51260) *
               C8259) *
              C51307 * C1455) *
         C51186) /
        (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                C1989 +
            (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                C51494 -
            (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                C1990 -
            (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                C51483 +
            (C10923 * C992 + C51463 * C997 + C10924 * C1236 + C51382 * C1240) *
                C1991 +
            (C10923 * C998 + C51463 * C1007 + C10924 * C1241 + C51382 * C1248) *
                C1988) *
               C51490 +
           ((C10958 + C10959) * C1989 + (C10960 + C10961) * C51494 -
            (C11343 + C11344) * C1990 - (C11345 + C11346) * C51483 +
            (C11938 + C11939) * C1991 + (C11940 + C11941) * C1988) *
               C51491 +
           (C10974 * C1989 + C10975 * C51494 - C11356 * C1990 -
            C11357 * C51483 + (C11942 + C11943) * C1991 +
            (C11944 + C11945) * C1988) *
               C8259) *
              C51307 * C1350 +
          (((C10923 * C856 + C51463 * C864 + C10924 * C1146 + C51382 * C1150) *
                C1990 -
            ((C10924 * C865 + C51382 * C880 + C10923 * C306 + C51463 * C315) *
                 C51494 +
             (C10924 * C856 + C51382 * C864 + C10923 * C297 + C51463 * C307) *
                 C1989) +
            (C10923 * C865 + C51463 * C880 + C10924 * C1151 + C51382 * C1158) *
                C51483 -
            (C10924 * C3760 + C51382 * C3764 + C10923 * C1146 +
             C51463 * C1150) *
                C1991 -
            (C10924 * C3765 + C51382 * C3772 + C10923 * C1151 +
             C51463 * C1158) *
                C1988) *
               C51490 +
           ((C12692 + C12693) * C1990 -
            ((C11158 + C11159) * C51494 + (C11160 + C11161) * C1989) +
            (C12694 + C12695) * C51483 -
            (C10924 * C3761 + C51382 * C3766 + C10923 * C1147 +
             C51463 * C1152) *
                C1991 -
            (C10924 * C3767 + C51382 * C3773 + C10923 * C1153 +
             C51463 * C1159) *
                C1988) *
               C51491 +
           ((C12696 + C12697) * C1990 - (C11166 * C51494 + C11167 * C1989) +
            (C12698 + C12699) * C51483 -
            (C10924 * C7165 + C51382 * C7166 + C10923 * C1148 +
             C51463 * C1154) *
                C1991 -
            (C10924 * C7167 + C51382 * C7168 + C10923 * C1155 +
             C51463 * C1160) *
                C1988) *
               C8259) *
              C51307 * C51234) *
         C51186) /
        (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                 C118 +
             (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                 C51248) *
                C51490 +
            ((C10958 + C10959) * C118 + (C10960 + C10961) * C51248) * C51491 +
            C10982 * C8259) *
               C51307 * C622 -
           (C11170 * C8259 +
            ((C11158 + C11159) * C51248 + (C11160 + C11161) * C118) * C51491 +
            ((C10924 * C865 + C51382 * C880 + C10923 * C306 + C51463 * C315) *
                 C51248 +
             (C10924 * C856 + C51382 * C864 + C10923 * C297 + C51463 * C307) *
                 C118) *
                C51490) *
               C51307 * C623 +
           (((C10923 * C627 + C51463 * C632 + C10924 * C860 + C51382 * C872) *
                 C118 +
             (C10923 * C633 + C51463 * C642 + C10924 * C873 + C51382 * C884) *
                 C51248) *
                C51490 +
            ((C11524 + C11525) * C118 + (C11526 + C11527) * C51248) * C51491 +
            ((C11528 + C11529) * C118 + (C11530 + C11531) * C51248) * C8259) *
               C51307 * C624) *
              C51439 +
          ((((C11161 + C11160) * C118 + (C11159 + C11158) * C51248) * C51490 +
            ((C11157 + C11156) * C118 + (C11155 + C11154) * C51248) * C51491 +
            ((C11162 + C11163) * C118 + (C11164 + C11165) * C51248) * C8259) *
               C51307 * C623 -
           (C10983 * C8259 +
            ((C10965 + C10964) * C51248 + (C10963 + C10962) * C118) * C51491 +
            ((C10961 + C10960) * C51248 + (C10959 + C10958) * C118) * C51490) *
               C51307 * C622 -
           (((C10924 * C879 + C51382 * C887 + C10923 * C639 + C51463 * C645) *
                 C51248 +
             (C10924 * C863 + C51382 * C878 + C10923 * C630 + C51463 * C638) *
                 C118) *
                C8259 +
            ((C11531 + C11530) * C51248 + (C11529 + C11528) * C118) * C51491 +
            ((C11527 + C11526) * C51248 + (C11525 + C11524) * C118) * C51490) *
               C51307 * C624) *
              C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                C118 +
            (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                C51248) *
               C51490 +
           ((C10958 + C10959) * C118 + (C10960 + C10961) * C51248) * C51491 +
           C10982 * C8259) *
              C51307 * C51218 * C113 -
          (C10983 * C8259 +
           ((C10965 + C10964) * C51248 + (C10963 + C10962) * C118) * C51491 +
           ((C10961 + C10960) * C51248 + (C10959 + C10958) * C118) * C51490) *
              C51307 * C51218 * C114 +
          (C10982 * C51490 +
           ((C10969 + C10968) * C118 + (C10967 + C10966) * C51248) * C51491 +
           ((C10970 + C10971) * C118 + (C10972 + C10973) * C51248) * C8259) *
              C51307 * C51218 * C115 -
          (((C10924 * C471 + C51382 * C477 + C10923 * C137 + C51463 * C145) *
                C51248 +
            (C10924 * C459 + C51382 * C470 + C10923 * C124 + C51463 * C136) *
                C118) *
               C8259 +
           ((C10973 + C10972) * C51248 + (C10971 + C10970) * C118) * C51491 +
           C10983 * C51490) *
              C51307 * C51218 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                C989 +
            (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                C986 -
            (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                C990 -
            (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                C987 +
            (C10923 * C992 + C51463 * C997 + C10924 * C1236 + C51382 * C1240) *
                C991 +
            (C10923 * C998 + C51463 * C1007 + C10924 * C1241 + C51382 * C1248) *
                C988) *
               C51490 +
           ((C10958 + C10959) * C989 + (C10960 + C10961) * C986 -
            (C11343 + C11344) * C990 - (C11345 + C11346) * C987 +
            (C11938 + C11939) * C991 + (C11940 + C11941) * C988) *
               C51491 +
           (C10974 * C989 + C10975 * C986 - C11356 * C990 - C11357 * C987 +
            (C11942 + C11943) * C991 + (C11944 + C11945) * C988) *
               C8259) *
              C51307 * C51218 * C51439 +
          (((C11344 + C11343) * C990 -
            ((C10961 + C10960) * C986 + (C10959 + C10958) * C989) +
            (C11346 + C11345) * C987 - (C11939 + C11938) * C991 -
            (C11941 + C11940) * C988) *
               C51490 +
           ((C11349 + C11348) * C990 -
            ((C10965 + C10964) * C986 + (C10963 + C10962) * C989) +
            (C11351 + C11350) * C987 - (C11943 + C11942) * C991 -
            (C11945 + C11944) * C988) *
               C51491 +
           ((C11352 + C11353) * C990 - (C10976 * C986 + C10977 * C989) +
            (C11354 + C11355) * C987 -
            (C10924 * C1239 + C51382 * C1246 + C10923 * C995 + C51463 * C1003) *
                C991 -
            (C10924 * C1247 + C51382 * C1251 + C10923 * C1004 +
             C51463 * C1010) *
                C988) *
               C8259) *
              C51307 * C51218 * C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                C118 +
            (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                C51248) *
               C51490 +
           ((C10958 + C10959) * C118 + (C10960 + C10961) * C51248) * C51491 +
           C10982 * C8259) *
              C51307 * C737 -
          (C11170 * C8259 +
           ((C11158 + C11159) * C51248 + (C11160 + C11161) * C118) * C51491 +
           ((C10924 * C865 + C51382 * C880 + C10923 * C306 + C51463 * C315) *
                C51248 +
            (C10924 * C856 + C51382 * C864 + C10923 * C297 + C51463 * C307) *
                C118) *
               C51490) *
              C51307 * C738 +
          (((C10923 * C627 + C51463 * C632 + C10924 * C860 + C51382 * C872) *
                C118 +
            (C10923 * C633 + C51463 * C642 + C10924 * C873 + C51382 * C884) *
                C51248) *
               C51490 +
           ((C11524 + C11525) * C118 + (C11526 + C11527) * C51248) * C51491 +
           ((C11528 + C11529) * C118 + (C11530 + C11531) * C51248) * C8259) *
              C51307 * C739 -
          (((C10924 * C4264 + C51382 * C4265 + C10923 * C748 + C51463 * C755) *
                C51248 +
            (C10924 * C4262 + C51382 * C4263 + C10923 * C743 + C51463 * C749) *
                C118) *
               C8259 +
           ((C10924 * C3244 + C51382 * C3250 + C10923 * C750 + C51463 * C756) *
                C51248 +
            (C10924 * C3238 + C51382 * C3243 + C10923 * C744 + C51463 * C751) *
                C118) *
               C51491 +
           ((C10924 * C3242 + C51382 * C3249 + C10923 * C752 + C51463 * C757) *
                C51248 +
            (C10924 * C3237 + C51382 * C3241 + C10923 * C745 + C51463 * C753) *
                C118) *
               C51490) *
              C51307 * C740) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                 C118 +
             (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                 C51248) *
                C51490 +
            ((C10958 + C10959) * C118 + (C10960 + C10961) * C51248) * C51491 +
            C10982 * C8259) *
               C51307 * C51446 -
           (C11170 * C8259 +
            ((C11158 + C11159) * C51248 + (C11160 + C11161) * C118) * C51491 +
            ((C10924 * C865 + C51382 * C880 + C10923 * C306 + C51463 * C315) *
                 C51248 +
             (C10924 * C856 + C51382 * C864 + C10923 * C297 + C51463 * C307) *
                 C118) *
                C51490) *
               C51307 * C51234) *
              C291 +
          ((((C11161 + C11160) * C118 + (C11159 + C11158) * C51248) * C51490 +
            ((C11157 + C11156) * C118 + (C11155 + C11154) * C51248) * C51491 +
            ((C11162 + C11163) * C118 + (C11164 + C11165) * C51248) * C8259) *
               C51307 * C51234 -
           (C10983 * C8259 +
            ((C10965 + C10964) * C51248 + (C10963 + C10962) * C118) * C51491 +
            ((C10961 + C10960) * C51248 + (C10959 + C10958) * C118) * C51490) *
               C51307 * C51446) *
              C292 +
          ((C10982 * C51490 +
            ((C10969 + C10968) * C118 + (C10967 + C10966) * C51248) * C51491 +
            ((C10970 + C10971) * C118 + (C10972 + C10973) * C51248) * C8259) *
               C51307 * C51446 -
           (((C10924 * C1590 + C51382 * C1591 + C10923 * C309 + C51463 * C316) *
                 C51248 +
             (C10924 * C1588 + C51382 * C1589 + C10923 * C298 + C51463 * C308) *
                 C118) *
                C8259 +
            ((C11165 + C11164) * C51248 + (C11163 + C11162) * C118) * C51491 +
            C11170 * C51490) *
               C51307 * C51234) *
              C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                C989 +
            (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                C986 -
            (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                C990 -
            (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                C987 +
            (C10923 * C992 + C51463 * C997 + C10924 * C1236 + C51382 * C1240) *
                C991 +
            (C10923 * C998 + C51463 * C1007 + C10924 * C1241 + C51382 * C1248) *
                C988) *
               C51490 +
           ((C10958 + C10959) * C989 + (C10960 + C10961) * C986 -
            (C11343 + C11344) * C990 - (C11345 + C11346) * C987 +
            (C11938 + C11939) * C991 + (C11940 + C11941) * C988) *
               C51491 +
           (C10974 * C989 + C10975 * C986 - C11356 * C990 - C11357 * C987 +
            (C11942 + C11943) * C991 + (C11944 + C11945) * C988) *
               C8259) *
              C51307 * C51446 +
          (((C10923 * C856 + C51463 * C864 + C10924 * C1146 + C51382 * C1150) *
                C990 -
            ((C10924 * C865 + C51382 * C880 + C10923 * C306 + C51463 * C315) *
                 C986 +
             (C10924 * C856 + C51382 * C864 + C10923 * C297 + C51463 * C307) *
                 C989) +
            (C10923 * C865 + C51463 * C880 + C10924 * C1151 + C51382 * C1158) *
                C987 -
            (C10924 * C3760 + C51382 * C3764 + C10923 * C1146 +
             C51463 * C1150) *
                C991 -
            (C10924 * C3765 + C51382 * C3772 + C10923 * C1151 +
             C51463 * C1158) *
                C988) *
               C51490 +
           ((C10923 * C857 + C51463 * C866 + C10924 * C1147 + C51382 * C1152) *
                C990 -
            ((C11158 + C11159) * C986 + (C11160 + C11161) * C989) +
            (C10923 * C867 + C51463 * C881 + C10924 * C1153 + C51382 * C1159) *
                C987 -
            (C10924 * C3761 + C51382 * C3766 + C10923 * C1147 +
             C51463 * C1152) *
                C991 -
            (C10924 * C3767 + C51382 * C3773 + C10923 * C1153 +
             C51463 * C1159) *
                C988) *
               C51491 +
           ((C10923 * C858 + C51463 * C868 + C10924 * C1148 + C51382 * C1154) *
                C990 -
            (C11166 * C986 + C11167 * C989) +
            (C10923 * C869 + C51463 * C882 + C10924 * C1155 + C51382 * C1160) *
                C987 -
            (C10924 * C7165 + C51382 * C7166 + C10923 * C1148 +
             C51463 * C1154) *
                C991 -
            (C10924 * C7167 + C51382 * C7168 + C10923 * C1155 +
             C51463 * C1160) *
                C988) *
               C8259) *
              C51307 * C51234) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                C452 +
            (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                C51448 -
            (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                C453 -
            (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                C51260) *
               C51490 +
           ((C10958 + C10959) * C452 + (C10960 + C10961) * C51448 -
            (C11343 + C11344) * C453 - (C11345 + C11346) * C51260) *
               C51491 +
           C11361 * C8259) *
              C51307 * C622 +
          (((C10923 * C856 + C51463 * C864 + C10924 * C1146 + C51382 * C1150) *
                C453 -
            ((C10924 * C865 + C51382 * C880 + C10923 * C306 + C51463 * C315) *
                 C51448 +
             (C10924 * C856 + C51382 * C864 + C10923 * C297 + C51463 * C307) *
                 C452) +
            (C10923 * C865 + C51463 * C880 + C10924 * C1151 + C51382 * C1158) *
                C51260) *
               C51490 +
           ((C10923 * C857 + C51463 * C866 + C10924 * C1147 + C51382 * C1152) *
                C453 -
            ((C11158 + C11159) * C51448 + (C11160 + C11161) * C452) +
            (C10923 * C867 + C51463 * C881 + C10924 * C1153 + C51382 * C1159) *
                C51260) *
               C51491 +
           ((C10923 * C858 + C51463 * C868 + C10924 * C1148 + C51382 * C1154) *
                C453 -
            (C11166 * C51448 + C11167 * C452) +
            (C10923 * C869 + C51463 * C882 + C10924 * C1155 + C51382 * C1160) *
                C51260) *
               C8259) *
              C51307 * C623 +
          (((C10923 * C627 + C51463 * C632 + C10924 * C860 + C51382 * C872) *
                C452 +
            (C10923 * C633 + C51463 * C642 + C10924 * C873 + C51382 * C884) *
                C51448 -
            (C10924 * C3448 + C51382 * C3451 + C10923 * C860 + C51463 * C872) *
                C453 -
            (C10924 * C3452 + C51382 * C3457 + C10923 * C873 + C51463 * C884) *
                C51260) *
               C51490 +
           ((C11524 + C11525) * C452 + (C11526 + C11527) * C51448 -
            (C10924 * C3449 + C51382 * C3453 + C10923 * C861 + C51463 * C874) *
                C453 -
            (C10924 * C3454 + C51382 * C3458 + C10923 * C875 + C51463 * C885) *
                C51260) *
               C51491 +
           ((C11528 + C11529) * C452 + (C11530 + C11531) * C51448 -
            (C10924 * C3450 + C51382 * C3455 + C10923 * C862 + C51463 * C876) *
                C453 -
            (C10924 * C3456 + C51382 * C3459 + C10923 * C877 + C51463 * C886) *
                C51260) *
               C8259) *
              C51307 * C624) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                C452 +
            (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                C51448 -
            (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                C453 -
            (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                C51260) *
               C51490 +
           ((C10958 + C10959) * C452 + (C10960 + C10961) * C51448 -
            (C11343 + C11344) * C453 - (C11345 + C11346) * C51260) *
               C51491 +
           C11361 * C8259) *
              C51307 * C51218 * C291 +
          (((C11344 + C11343) * C453 -
            ((C10961 + C10960) * C51448 + (C10959 + C10958) * C452) +
            (C11346 + C11345) * C51260) *
               C51490 +
           ((C11349 + C11348) * C453 -
            ((C10965 + C10964) * C51448 + (C10963 + C10962) * C452) +
            (C11351 + C11350) * C51260) *
               C51491 +
           ((C11352 + C11353) * C453 - (C10976 * C51448 + C10977 * C452) +
            (C11354 + C11355) * C51260) *
               C8259) *
              C51307 * C51218 * C292 +
          (C11361 * C51490 +
           ((C10969 + C10968) * C452 + (C10967 + C10966) * C51448 -
            (C11353 + C11352) * C453 - (C11355 + C11354) * C51260) *
               C51491 +
           ((C10970 + C10971) * C452 + (C10972 + C10973) * C51448 -
            (C10924 * C996 + C51382 * C1005 + C10923 * C458 + C51463 * C468) *
                C453 -
            (C10924 * C1006 + C51382 * C1011 + C10923 * C469 + C51463 * C476) *
                C51260) *
               C8259) *
              C51307 * C51218 * C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
               C1232 +
           (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
               C1228 -
           (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
               C1233 -
           (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
               C1229 +
           (C10923 * C992 + C51463 * C997 + C10924 * C1236 + C51382 * C1240) *
               C1234 +
           (C10923 * C998 + C51463 * C1007 + C10924 * C1241 + C51382 * C1248) *
               C1230 -
           (C10924 * C6389 + C51382 * C6392 + C10923 * C1236 + C51463 * C1240) *
               C1235 -
           (C10924 * C6393 + C51382 * C6398 + C10923 * C1241 + C51463 * C1248) *
               C1231) *
              C51490 +
          ((C10958 + C10959) * C1232 + (C10960 + C10961) * C1228 -
           (C11343 + C11344) * C1233 - (C11345 + C11346) * C1229 +
           (C11938 + C11939) * C1234 + (C11940 + C11941) * C1230 -
           (C10924 * C6390 + C51382 * C6394 + C10923 * C1237 + C51463 * C1242) *
               C1235 -
           (C10924 * C6395 + C51382 * C6399 + C10923 * C1243 + C51463 * C1249) *
               C1231) *
              C51491 +
          (C10974 * C1232 + C10975 * C1228 - C11356 * C1233 - C11357 * C1229 +
           (C11942 + C11943) * C1234 + (C11944 + C11945) * C1230 -
           (C10924 * C6391 + C51382 * C6396 + C10923 * C1238 + C51463 * C1244) *
               C1235 -
           (C10924 * C6397 + C51382 * C6400 + C10923 * C1245 + C51463 * C1250) *
               C1231) *
              C8259) *
         C51307 * C51218 * C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                C1722 +
            (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                C1720 -
            (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                C1723 -
            (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                C51260) *
               C51490 +
           ((C10958 + C10959) * C1722 + (C10960 + C10961) * C1720 -
            (C11343 + C11344) * C1723 - (C11345 + C11346) * C51260) *
               C51491 +
           C12852 * C8259) *
              C51307 * C51218 * C51492 +
          (((C11344 + C11343) * C1723 -
            ((C10961 + C10960) * C1720 + (C10959 + C10958) * C1722) +
            (C11346 + C11345) * C51260) *
               C51490 +
           ((C11349 + C11348) * C1723 -
            ((C10965 + C10964) * C1720 + (C10963 + C10962) * C1722) +
            (C11351 + C11350) * C51260) *
               C51491 +
           ((C11352 + C11353) * C1723 - (C10976 * C1720 + C10977 * C1722) +
            (C11354 + C11355) * C51260) *
               C8259) *
              C51307 * C51218 * C51477 +
          (C12852 * C51490 +
           ((C10969 + C10968) * C1722 + (C10967 + C10966) * C1720 -
            (C11353 + C11352) * C1723 - (C11355 + C11354) * C51260) *
               C51491 +
           ((C10970 + C10971) * C1722 + (C10972 + C10973) * C1720 -
            (C10924 * C996 + C51382 * C1005 + C10923 * C458 + C51463 * C468) *
                C1723 -
            (C10924 * C1006 + C51382 * C1011 + C10923 * C469 + C51463 * C476) *
                C51260) *
               C8259) *
              C51307 * C51218 * C1354)) /
        (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                 C1722 +
             (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                 C1720 -
             (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                 C1723 -
             (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                 C51260) *
                C51490 +
            ((C10958 + C10959) * C1722 + (C10960 + C10961) * C1720 -
             (C11343 + C11344) * C1723 - (C11345 + C11346) * C51260) *
                C51491 +
            C12852 * C8259) *
               C51307 * C51446 +
           (((C10923 * C856 + C51463 * C864 + C10924 * C1146 + C51382 * C1150) *
                 C1723 -
             ((C10924 * C865 + C51382 * C880 + C10923 * C306 + C51463 * C315) *
                  C1720 +
              (C10924 * C856 + C51382 * C864 + C10923 * C297 + C51463 * C307) *
                  C1722) +
             (C10923 * C865 + C51463 * C880 + C10924 * C1151 + C51382 * C1158) *
                 C51260) *
                C51490 +
            ((C12692 + C12693) * C1723 -
             ((C11158 + C11159) * C1720 + (C11160 + C11161) * C1722) +
             (C12694 + C12695) * C51260) *
                C51491 +
            ((C12696 + C12697) * C1723 - (C11166 * C1720 + C11167 * C1722) +
             (C12698 + C12699) * C51260) *
                C8259) *
               C51307 * C51234) *
              C1456 +
          ((((C11344 + C11343) * C1723 -
             ((C10961 + C10960) * C1720 + (C10959 + C10958) * C1722) +
             (C11346 + C11345) * C51260) *
                C51490 +
            ((C11349 + C11348) * C1723 -
             ((C10965 + C10964) * C1720 + (C10963 + C10962) * C1722) +
             (C11351 + C11350) * C51260) *
                C51491 +
            ((C11352 + C11353) * C1723 - (C10976 * C1720 + C10977 * C1722) +
             (C11354 + C11355) * C51260) *
                C8259) *
               C51307 * C51446 +
           (((C11161 + C11160) * C1722 + (C11159 + C11158) * C1720 -
             (C12693 + C12692) * C1723 - (C12695 + C12694) * C51260) *
                C51490 +
            ((C11157 + C11156) * C1722 + (C11155 + C11154) * C1720 -
             (C12697 + C12696) * C1723 - (C12699 + C12698) * C51260) *
                C51491 +
            ((C11162 + C11163) * C1722 + (C11164 + C11165) * C1720 -
             (C10924 * C1149 + C51382 * C1156 + C10923 * C859 + C51463 * C870) *
                 C1723 -
             (C10924 * C1157 + C51382 * C1161 + C10923 * C871 + C51463 * C883) *
                 C51260) *
                C8259) *
               C51307 * C51234) *
              C51191)) /
        (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                C1989 +
            (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                C51494 -
            (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                C1990 -
            (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                C51483 +
            (C10923 * C992 + C51463 * C997 + C10924 * C1236 + C51382 * C1240) *
                C1991 +
            (C10923 * C998 + C51463 * C1007 + C10924 * C1241 + C51382 * C1248) *
                C1988) *
               C51490 +
           ((C10958 + C10959) * C1989 + (C10960 + C10961) * C51494 -
            (C11343 + C11344) * C1990 - (C11345 + C11346) * C51483 +
            (C11938 + C11939) * C1991 + (C11940 + C11941) * C1988) *
               C51491 +
           (C10974 * C1989 + C10975 * C51494 - C11356 * C1990 -
            C11357 * C51483 + (C11942 + C11943) * C1991 +
            (C11944 + C11945) * C1988) *
               C8259) *
              C51307 * C51218 * C1456 +
          (((C11344 + C11343) * C1990 -
            ((C10961 + C10960) * C51494 + (C10959 + C10958) * C1989) +
            (C11346 + C11345) * C51483 - (C11939 + C11938) * C1991 -
            (C11941 + C11940) * C1988) *
               C51490 +
           ((C11349 + C11348) * C1990 -
            ((C10965 + C10964) * C51494 + (C10963 + C10962) * C1989) +
            (C11351 + C11350) * C51483 - (C11943 + C11942) * C1991 -
            (C11945 + C11944) * C1988) *
               C51491 +
           ((C11352 + C11353) * C1990 - (C10976 * C51494 + C10977 * C1989) +
            (C11354 + C11355) * C51483 -
            (C10924 * C1239 + C51382 * C1246 + C10923 * C995 + C51463 * C1003) *
                C1991 -
            (C10924 * C1247 + C51382 * C1251 + C10923 * C1004 +
             C51463 * C1010) *
                C1988) *
               C8259) *
              C51307 * C51218 * C51191)) /
        (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                C118 +
            (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                C51248) *
               C51490 +
           ((C10958 + C10959) * C118 + (C10960 + C10961) * C51248) * C51491 +
           C10982 * C8259) *
              C51307 * C51218 * C113 -
          (C10983 * C8259 +
           ((C10965 + C10964) * C51248 + (C10963 + C10962) * C118) * C51491 +
           ((C10961 + C10960) * C51248 + (C10959 + C10958) * C118) * C51490) *
              C51307 * C51218 * C114 +
          (C10982 * C51490 +
           ((C10969 + C10968) * C118 + (C10967 + C10966) * C51248) * C51491 +
           ((C10970 + C10971) * C118 + (C10972 + C10973) * C51248) * C8259) *
              C51307 * C51218 * C115 -
          (((C10924 * C471 + C51382 * C477 + C10923 * C137 + C51463 * C145) *
                C51248 +
            (C10924 * C459 + C51382 * C470 + C10923 * C124 + C51463 * C136) *
                C118) *
               C8259 +
           ((C10973 + C10972) * C51248 + (C10971 + C10970) * C118) * C51491 +
           C10983 * C51490) *
              C51307 * C51218 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                 C118 +
             (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                 C51248) *
                C51490 +
            ((C10958 + C10959) * C118 + (C10960 + C10961) * C51248) * C51491 +
            C10982 * C8259) *
               C51307 * C622 -
           (C11170 * C8259 +
            ((C11158 + C11159) * C51248 + (C11160 + C11161) * C118) * C51491 +
            ((C10924 * C865 + C51382 * C880 + C10923 * C306 + C51463 * C315) *
                 C51248 +
             (C10924 * C856 + C51382 * C864 + C10923 * C297 + C51463 * C307) *
                 C118) *
                C51490) *
               C51307 * C623 +
           (((C10923 * C627 + C51463 * C632 + C10924 * C860 + C51382 * C872) *
                 C118 +
             (C10923 * C633 + C51463 * C642 + C10924 * C873 + C51382 * C884) *
                 C51248) *
                C51490 +
            ((C11524 + C11525) * C118 + (C11526 + C11527) * C51248) * C51491 +
            ((C11528 + C11529) * C118 + (C11530 + C11531) * C51248) * C8259) *
               C51307 * C624) *
              C51439 +
          ((((C11161 + C11160) * C118 + (C11159 + C11158) * C51248) * C51490 +
            ((C11157 + C11156) * C118 + (C11155 + C11154) * C51248) * C51491 +
            ((C11162 + C11163) * C118 + (C11164 + C11165) * C51248) * C8259) *
               C51307 * C623 -
           (C10983 * C8259 +
            ((C10965 + C10964) * C51248 + (C10963 + C10962) * C118) * C51491 +
            ((C10961 + C10960) * C51248 + (C10959 + C10958) * C118) * C51490) *
               C51307 * C622 -
           (((C10924 * C879 + C51382 * C887 + C10923 * C639 + C51463 * C645) *
                 C51248 +
             (C10924 * C863 + C51382 * C878 + C10923 * C630 + C51463 * C638) *
                 C118) *
                C8259 +
            ((C11531 + C11530) * C51248 + (C11529 + C11528) * C118) * C51491 +
            ((C11527 + C11526) * C51248 + (C11525 + C11524) * C118) * C51490) *
               C51307 * C624) *
              C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                 C118 +
             (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                 C51248) *
                C51490 +
            ((C10958 + C10959) * C118 + (C10960 + C10961) * C51248) * C51491 +
            C10982 * C8259) *
               C51307 * C51446 -
           (C11170 * C8259 +
            ((C11158 + C11159) * C51248 + (C11160 + C11161) * C118) * C51491 +
            ((C10924 * C865 + C51382 * C880 + C10923 * C306 + C51463 * C315) *
                 C51248 +
             (C10924 * C856 + C51382 * C864 + C10923 * C297 + C51463 * C307) *
                 C118) *
                C51490) *
               C51307 * C51234) *
              C291 +
          ((((C11161 + C11160) * C118 + (C11159 + C11158) * C51248) * C51490 +
            ((C11157 + C11156) * C118 + (C11155 + C11154) * C51248) * C51491 +
            ((C11162 + C11163) * C118 + (C11164 + C11165) * C51248) * C8259) *
               C51307 * C51234 -
           (C10983 * C8259 +
            ((C10965 + C10964) * C51248 + (C10963 + C10962) * C118) * C51491 +
            ((C10961 + C10960) * C51248 + (C10959 + C10958) * C118) * C51490) *
               C51307 * C51446) *
              C292 +
          ((C10982 * C51490 +
            ((C10969 + C10968) * C118 + (C10967 + C10966) * C51248) * C51491 +
            ((C10970 + C10971) * C118 + (C10972 + C10973) * C51248) * C8259) *
               C51307 * C51446 -
           (((C10924 * C1590 + C51382 * C1591 + C10923 * C309 + C51463 * C316) *
                 C51248 +
             (C10924 * C1588 + C51382 * C1589 + C10923 * C298 + C51463 * C308) *
                 C118) *
                C8259 +
            ((C11165 + C11164) * C51248 + (C11163 + C11162) * C118) * C51491 +
            C11170 * C51490) *
               C51307 * C51234) *
              C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                C118 +
            (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                C51248) *
               C51490 +
           ((C10958 + C10959) * C118 + (C10960 + C10961) * C51248) * C51491 +
           C10982 * C8259) *
              C51307 * C737 -
          (C11170 * C8259 +
           ((C11158 + C11159) * C51248 + (C11160 + C11161) * C118) * C51491 +
           ((C10924 * C865 + C51382 * C880 + C10923 * C306 + C51463 * C315) *
                C51248 +
            (C10924 * C856 + C51382 * C864 + C10923 * C297 + C51463 * C307) *
                C118) *
               C51490) *
              C51307 * C738 +
          (((C10923 * C627 + C51463 * C632 + C10924 * C860 + C51382 * C872) *
                C118 +
            (C10923 * C633 + C51463 * C642 + C10924 * C873 + C51382 * C884) *
                C51248) *
               C51490 +
           ((C11524 + C11525) * C118 + (C11526 + C11527) * C51248) * C51491 +
           ((C11528 + C11529) * C118 + (C11530 + C11531) * C51248) * C8259) *
              C51307 * C739 -
          (((C10924 * C4264 + C51382 * C4265 + C10923 * C748 + C51463 * C755) *
                C51248 +
            (C10924 * C4262 + C51382 * C4263 + C10923 * C743 + C51463 * C749) *
                C118) *
               C8259 +
           ((C10924 * C3244 + C51382 * C3250 + C10923 * C750 + C51463 * C756) *
                C51248 +
            (C10924 * C3238 + C51382 * C3243 + C10923 * C744 + C51463 * C751) *
                C118) *
               C51491 +
           ((C10924 * C3242 + C51382 * C3249 + C10923 * C752 + C51463 * C757) *
                C51248 +
            (C10924 * C3237 + C51382 * C3241 + C10923 * C745 + C51463 * C753) *
                C118) *
               C51490) *
              C51307 * C740) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                C452 +
            (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                C51448 -
            (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                C453 -
            (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                C51260) *
               C51490 +
           ((C10958 + C10959) * C452 + (C10960 + C10961) * C51448 -
            (C11343 + C11344) * C453 - (C11345 + C11346) * C51260) *
               C51491 +
           C11361 * C8259) *
              C51307 * C51218 * C291 +
          (((C11344 + C11343) * C453 -
            ((C10961 + C10960) * C51448 + (C10959 + C10958) * C452) +
            (C11346 + C11345) * C51260) *
               C51490 +
           ((C11349 + C11348) * C453 -
            ((C10965 + C10964) * C51448 + (C10963 + C10962) * C452) +
            (C11351 + C11350) * C51260) *
               C51491 +
           ((C11352 + C11353) * C453 - (C10976 * C51448 + C10977 * C452) +
            (C11354 + C11355) * C51260) *
               C8259) *
              C51307 * C51218 * C292 +
          (C11361 * C51490 +
           ((C10969 + C10968) * C452 + (C10967 + C10966) * C51448 -
            (C11353 + C11352) * C453 - (C11355 + C11354) * C51260) *
               C51491 +
           ((C10970 + C10971) * C452 + (C10972 + C10973) * C51448 -
            (C10924 * C996 + C51382 * C1005 + C10923 * C458 + C51463 * C468) *
                C453 -
            (C10924 * C1006 + C51382 * C1011 + C10923 * C469 + C51463 * C476) *
                C51260) *
               C8259) *
              C51307 * C51218 * C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                C452 +
            (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                C51448 -
            (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                C453 -
            (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                C51260) *
               C51490 +
           ((C10958 + C10959) * C452 + (C10960 + C10961) * C51448 -
            (C11343 + C11344) * C453 - (C11345 + C11346) * C51260) *
               C51491 +
           C11361 * C8259) *
              C51307 * C622 +
          (((C10923 * C856 + C51463 * C864 + C10924 * C1146 + C51382 * C1150) *
                C453 -
            ((C10924 * C865 + C51382 * C880 + C10923 * C306 + C51463 * C315) *
                 C51448 +
             (C10924 * C856 + C51382 * C864 + C10923 * C297 + C51463 * C307) *
                 C452) +
            (C10923 * C865 + C51463 * C880 + C10924 * C1151 + C51382 * C1158) *
                C51260) *
               C51490 +
           ((C10923 * C857 + C51463 * C866 + C10924 * C1147 + C51382 * C1152) *
                C453 -
            ((C11158 + C11159) * C51448 + (C11160 + C11161) * C452) +
            (C10923 * C867 + C51463 * C881 + C10924 * C1153 + C51382 * C1159) *
                C51260) *
               C51491 +
           ((C10923 * C858 + C51463 * C868 + C10924 * C1148 + C51382 * C1154) *
                C453 -
            (C11166 * C51448 + C11167 * C452) +
            (C10923 * C869 + C51463 * C882 + C10924 * C1155 + C51382 * C1160) *
                C51260) *
               C8259) *
              C51307 * C623 +
          (((C10923 * C627 + C51463 * C632 + C10924 * C860 + C51382 * C872) *
                C452 +
            (C10923 * C633 + C51463 * C642 + C10924 * C873 + C51382 * C884) *
                C51448 -
            (C10924 * C3448 + C51382 * C3451 + C10923 * C860 + C51463 * C872) *
                C453 -
            (C10924 * C3452 + C51382 * C3457 + C10923 * C873 + C51463 * C884) *
                C51260) *
               C51490 +
           ((C11524 + C11525) * C452 + (C11526 + C11527) * C51448 -
            (C10924 * C3449 + C51382 * C3453 + C10923 * C861 + C51463 * C874) *
                C453 -
            (C10924 * C3454 + C51382 * C3458 + C10923 * C875 + C51463 * C885) *
                C51260) *
               C51491 +
           ((C11528 + C11529) * C452 + (C11530 + C11531) * C51448 -
            (C10924 * C3450 + C51382 * C3455 + C10923 * C862 + C51463 * C876) *
                C453 -
            (C10924 * C3456 + C51382 * C3459 + C10923 * C877 + C51463 * C886) *
                C51260) *
               C8259) *
              C51307 * C624) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C118 +
             (C117 * C127 + C51318 * C140) * C51248) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C51307 * C1350 -
           (C351 * C110 + C352 * C109 + (C347 + C348) * C108 +
            ((C117 * C306 + C51318 * C315) * C51248 +
             (C117 * C297 + C51318 * C307) * C118) *
                C107) *
               C51307 * C51234) *
              C51492 +
          (((C348 + C347) * C107 + (C346 + C345) * C108 + (C344 + C343) * C109 +
            (C349 + C350) * C110) *
               C51307 * C51234 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C51307 * C1350) *
              C51477 +
          ((C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
            (C186 + C187) * C110) *
               C51307 * C1350 -
           (((C117 * C310 + C51318 * C317) * C51248 +
             (C117 * C299 + C51318 * C311) * C118) *
                C110 +
            (C350 + C349) * C109 + C351 * C108 + C352 * C107) *
               C51307 * C51234) *
              C1354)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C118 +
              (C117 * C127 + C51318 * C140) * C51248) *
                 C2434 +
             (C178 + C179) * C51168) *
                C2436 +
            ((C2617 + C2618) * C2434 + C2590 * C51168) * C2437 +
            C2969 * C2438) *
               C1350 -
           (C3089 * C2438 + (C2600 * C51168 + (C2620 + C2619) * C2434) * C2437 +
            (C2601 * C51168 + (C2618 + C2617) * C2434) * C2436) *
               C51234) *
              C51492 +
          (((C2590 * C2434 + C2602 * C51168) * C2436 +
            (C2595 * C2434 + C2603 * C51168) * C2437 +
            (C2956 * C2434 + (C2623 + C2624) * C51168) * C2438) *
               C51234 -
           (C2968 * C2438 + (C352 * C51168 + C2601 * C2434) * C2437 +
            ((C181 + C180) * C51168 + (C179 + C178) * C2434) * C2436) *
               C1350) *
              C51477 +
          (((C188 * C2434 + C189 * C51168) * C2436 +
            (C2602 * C2434 + (C344 + C343) * C51168) * C2437 +
            (C2603 * C2434 + (C670 + C671) * C51168) * C2438) *
               C1350 -
           ((((C117 * C746 + C51318 * C754) * C51248 +
              (C117 * C742 + C51318 * C747) * C118) *
                 C51168 +
             (C2624 + C2623) * C2434) *
                C2438 +
            ((C671 + C670) * C51168 + C2608 * C2434) * C2437 +
            (C351 * C51168 + C352 * C2434) * C2436) *
               C51234) *
              C1354)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C118 +
             (C117 * C127 + C51318 * C140) * C51248) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C51307 * C51493 -
           (C351 * C110 + C352 * C109 + (C347 + C348) * C108 +
            ((C117 * C306 + C51318 * C315) * C51248 +
             (C117 * C297 + C51318 * C307) * C118) *
                C107) *
               C51307 * C51480 +
           (((C117 * C627 + C51318 * C632) * C118 +
             (C117 * C633 + C51318 * C642) * C51248) *
                C107 +
            (C666 + C667) * C108 + (C668 + C669) * C109 +
            (C670 + C671) * C110) *
               C51307 * C1455) *
              C1456 +
          (((C348 + C347) * C107 + (C346 + C345) * C108 + (C344 + C343) * C109 +
            (C349 + C350) * C110) *
               C51307 * C51480 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C51307 * C51493 -
           (((C117 * C640 + C51318 * C646) * C51248 +
             (C117 * C631 + C51318 * C641) * C118) *
                C110 +
            (C671 + C670) * C109 + (C669 + C668) * C108 +
            (C667 + C666) * C107) *
               C51307 * C1455) *
              C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C118 +
              (C117 * C127 + C51318 * C140) * C51248) *
                 C2434 +
             (C178 + C179) * C51168) *
                C2436 +
            ((C2617 + C2618) * C2434 + C2590 * C51168) * C2437 +
            C2969 * C2438) *
               C51493 -
           (C3089 * C2438 + (C2600 * C51168 + (C2620 + C2619) * C2434) * C2437 +
            (C2601 * C51168 + (C2618 + C2617) * C2434) * C2436) *
               C51480 +
           (C2969 * C2436 + ((C2971 + C2970) * C2434 + C2956 * C51168) * C2437 +
            ((C3090 + C3091) * C2434 + (C2972 + C2973) * C51168) * C2438) *
               C1455) *
              C1456 +
          (((C2590 * C2434 + C2602 * C51168) * C2436 +
            (C2595 * C2434 + C2603 * C51168) * C2437 +
            (C2956 * C2434 + (C2623 + C2624) * C51168) * C2438) *
               C51480 -
           (C2968 * C2438 + (C352 * C51168 + C2601 * C2434) * C2437 +
            ((C181 + C180) * C51168 + (C179 + C178) * C2434) * C2436) *
               C51493 -
           ((((C117 * C2943 + C51318 * C2947) * C51248 +
              (C117 * C2938 + C51318 * C2944) * C118) *
                 C51168 +
             (C2973 + C2972) * C2434) *
                C2438 +
            ((C2624 + C2623) * C51168 + C2951 * C2434) * C2437 +
            C2968 * C2436) *
               C1455) *
              C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C452 +
             (C117 * C127 + C51318 * C140) * C51448 -
             (C117 * C454 + C51318 * C460) * C453 -
             (C117 * C461 + C51318 * C472) * C51260) *
                C107 +
            (C479 + C480 - C513 - C514) * C108 + C523 * C109 + C524 * C110) *
               C51307 * C1350 +
           (((C117 * C856 + C51318 * C864) * C453 -
             ((C117 * C306 + C51318 * C315) * C51448 +
              (C117 * C297 + C51318 * C307) * C452) +
             (C117 * C865 + C51318 * C880) * C51260) *
                C107 +
            (C1617 - (C1595 + C1596) + C1618) * C108 +
            (C1619 - (C1601 + C1602) + C1620) * C109 +
            (C1621 - (C1607 + C1608) + C1622) * C110) *
               C51307 * C51234) *
              C1456 +
          (((C513 - (C480 + C479) + C514) * C107 +
            (C515 - (C486 + C485) + C516) * C108 +
            (C517 - (C492 + C491) + C518) * C109 +
            (C519 - (C499 + C500) + C520) * C110) *
               C51307 * C1350 +
           ((C1596 + C1595 - C1617 - C1618) * C107 +
            (C1602 + C1601 - C1619 - C1620) * C108 +
            (C1608 + C1607 - C1621 - C1622) * C109 +
            (C341 * C452 + C342 * C51448 -
             (C117 * C1588 + C51318 * C1589) * C453 -
             (C117 * C1590 + C51318 * C1591) * C51260) *
                C110) *
               C51307 * C51234) *
              C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C452 +
              (C117 * C127 + C51318 * C140) * C51448 -
              (C117 * C454 + C51318 * C460) * C453 -
              (C117 * C461 + C51318 * C472) * C51260) *
                 C2434 +
             (C479 + C480 - C513 - C514) * C51168) *
                C2436 +
            ((C3254 + C3255 - C3289 - C3290) * C2434 + C4273 * C51168) * C2437 +
            C3302 * C2438) *
               C1350 +
           (((C3289 - (C3255 + C3254) + C3290) * C2434 + C4274 * C51168) *
                C2436 +
            ((C3291 - (C3261 + C3260) + C3292) * C2434 + C4275 * C51168) *
                C2437 +
            ((C3294 - (C3269 + C3270) + C3295) * C2434 +
             (C3296 - (C3275 + C3276) + C3297) * C51168) *
                C2438) *
               C51234) *
              C1456 +
          ((((C513 - (C480 + C479) + C514) * C2434 +
             (C515 - (C486 + C485) + C516) * C51168) *
                C2436 +
            (C4274 * C2434 + (C1619 - (C1601 + C1602) + C1620) * C51168) *
                C2437 +
            (C4275 * C2434 + (C2789 - (C2779 + C2780) + C2790) * C51168) *
                C2438) *
               C1350 +
           ((C4273 * C2434 + (C1602 + C1601 - C1619 - C1620) * C51168) * C2436 +
            (C3293 * C2434 + (C2780 + C2779 - C2789 - C2790) * C51168) * C2437 +
            ((C3276 + C3275 - C3296 - C3297) * C2434 +
             (C2615 * C452 + C2616 * C51448 -
              (C117 * C4262 + C51318 * C4263) * C453 -
              (C117 * C4264 + C51318 * C4265) * C51260) *
                 C51168) *
                C2438) *
               C51234) *
              C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C1722 +
             (C117 * C127 + C51318 * C140) * C1720 -
             (C117 * C454 + C51318 * C460) * C1723 -
             (C117 * C461 + C51318 * C472) * C51260) *
                C107 +
            (C1725 + C1726 - C1727 - C1728) * C108 + C1745 * C109 +
            C1746 * C110) *
               C51307 * C1350 +
           (((C117 * C856 + C51318 * C864) * C1723 -
             ((C117 * C306 + C51318 * C315) * C1720 +
              (C117 * C297 + C51318 * C307) * C1722) +
             (C117 * C865 + C51318 * C880) * C51260) *
                C107 +
            (C1877 - (C1878 + C1879) + C1880) * C108 +
            (C1881 - (C1882 + C1883) + C1884) * C109 +
            (C1885 - (C1886 + C1887) + C1888) * C110) *
               C51307 * C51234) *
              C51439 +
          (((C1727 - (C1726 + C1725) + C1728) * C107 +
            (C1731 - (C1730 + C1729) + C1732) * C108 +
            (C1735 - (C1734 + C1733) + C1736) * C109 +
            (C1737 - (C1738 + C1739) + C1740) * C110) *
               C51307 * C1350 +
           ((C1879 + C1878 - C1877 - C1880) * C107 +
            (C1883 + C1882 - C1881 - C1884) * C108 +
            (C1887 + C1886 - C1885 - C1888) * C109 +
            (C341 * C1722 + C342 * C1720 -
             (C117 * C1588 + C51318 * C1589) * C1723 -
             (C117 * C1590 + C51318 * C1591) * C51260) *
                C110) *
               C51307 * C51234) *
              C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C1722 +
              (C117 * C127 + C51318 * C140) * C1720 -
              (C117 * C454 + C51318 * C460) * C1723 -
              (C117 * C461 + C51318 * C472) * C51260) *
                 C2434 +
             (C1725 + C1726 - C1727 - C1728) * C51168) *
                C2436 +
            ((C4624 + C4625 - C4626 - C4627) * C2434 + C4644 * C51168) * C2437 +
            ((C4629 + C4630 - C4631 - C4632) * C2434 + C4645 * C51168) *
                C2438) *
               C1350 +
           (((C4626 - (C4625 + C4624) + C4627) * C2434 + C4646 * C51168) *
                C2436 +
            ((C4631 - (C4630 + C4629) + C4632) * C2434 + C4647 * C51168) *
                C2437 +
            ((C3285 * C1723 - (C2964 * C1720 + C2965 * C1722) +
              C3286 * C51260) *
                 C2434 +
             (C4636 - (C4637 + C4638) + C4639) * C51168) *
                C2438) *
               C51234) *
              C51439 +
          ((((C1727 - (C1726 + C1725) + C1728) * C2434 +
             (C1731 - (C1730 + C1729) + C1732) * C51168) *
                C2436 +
            (C4646 * C2434 + (C1881 - (C1882 + C1883) + C1884) * C51168) *
                C2437 +
            (C4647 * C2434 + (C4426 - (C4427 + C4428) + C4429) * C51168) *
                C2438) *
               C1350 +
           ((C4644 * C2434 + (C1883 + C1882 - C1881 - C1884) * C51168) * C2436 +
            (C4645 * C2434 + (C4428 + C4427 - C4426 - C4429) * C51168) * C2437 +
            ((C4638 + C4637 - C4636 - C4639) * C2434 +
             (C2615 * C1722 + C2616 * C1720 -
              (C117 * C4262 + C51318 * C4263) * C1723 -
              (C117 * C4264 + C51318 * C4265) * C51260) *
                 C51168) *
                C2438) *
               C51234) *
              C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C1722 +
            (C117 * C127 + C51318 * C140) * C1720 -
            (C117 * C454 + C51318 * C460) * C1723 -
            (C117 * C461 + C51318 * C472) * C51260) *
               C107 +
           (C1725 + C1726 - C1727 - C1728) * C108 + C1745 * C109 +
           C1746 * C110) *
              C51307 * C51493 +
          (((C117 * C856 + C51318 * C864) * C1723 -
            ((C117 * C306 + C51318 * C315) * C1720 +
             (C117 * C297 + C51318 * C307) * C1722) +
            (C117 * C865 + C51318 * C880) * C51260) *
               C107 +
           (C1877 - (C1878 + C1879) + C1880) * C108 +
           (C1881 - (C1882 + C1883) + C1884) * C109 +
           (C1885 - (C1886 + C1887) + C1888) * C110) *
              C51307 * C51480 +
          (((C117 * C627 + C51318 * C632) * C1722 +
            (C117 * C633 + C51318 * C642) * C1720 -
            (C117 * C860 + C51318 * C872) * C1723 -
            (C117 * C873 + C51318 * C884) * C51260) *
               C107 +
           (C660 * C1722 + C661 * C1720 -
            (C117 * C861 + C51318 * C874) * C1723 -
            (C117 * C875 + C51318 * C885) * C51260) *
               C108 +
           (C662 * C1722 + C663 * C1720 -
            (C117 * C862 + C51318 * C876) * C1723 -
            (C117 * C877 + C51318 * C886) * C51260) *
               C109 +
           (C664 * C1722 + C665 * C1720 -
            (C117 * C863 + C51318 * C878) * C1723 -
            (C117 * C879 + C51318 * C887) * C51260) *
               C110) *
              C51307 * C1455) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C1722 +
             (C117 * C127 + C51318 * C140) * C1720 -
             (C117 * C454 + C51318 * C460) * C1723 -
             (C117 * C461 + C51318 * C472) * C51260) *
                C2434 +
            (C1725 + C1726 - C1727 - C1728) * C51168) *
               C2436 +
           ((C4624 + C4625 - C4626 - C4627) * C2434 + C4644 * C51168) * C2437 +
           C5155 * C2438) *
              C51493 +
          (((C4626 - (C4625 + C4624) + C4627) * C2434 + C4646 * C51168) *
               C2436 +
           ((C4631 - (C4630 + C4629) + C4632) * C2434 + C4647 * C51168) *
               C2437 +
           ((C5148 - (C5149 + C5150) + C5151) * C2434 +
            (C4636 - (C4637 + C4638) + C4639) * C51168) *
               C2438) *
              C51480 +
          (C5155 * C2436 +
           ((C5150 + C5149 - C5148 - C5151) * C2434 +
            (C4638 + C4637 - C4636 - C4639) * C51168) *
               C2437 +
           ((C3087 * C1722 + C3088 * C1720 -
             (C117 * C3239 + C51318 * C3245) * C1723 -
             (C117 * C3246 + C51318 * C3251) * C51260) *
                C2434 +
            (C2966 * C1722 + C2967 * C1720 -
             (C117 * C3240 + C51318 * C3247) * C1723 -
             (C117 * C3248 + C51318 * C3252) * C51260) *
                C51168) *
               C2438) *
              C1455) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C1989 +
            (C117 * C127 + C51318 * C140) * C51494 -
            (C117 * C454 + C51318 * C460) * C1990 -
            (C117 * C461 + C51318 * C472) * C51483 +
            (C117 * C992 + C51318 * C997) * C1991 +
            (C117 * C998 + C51318 * C1007) * C1988) *
               C107 +
           (C1993 + C1994 - C1995 - C1996 + C1997 + C1998) * C108 +
           (C1999 + C2000 - C2001 - C2002 + C2003 + C2004) * C109 +
           (C2005 + C2006 - C2007 - C2008 + C2009 + C2010) * C110) *
              C51307 * C1350 +
          (((C117 * C856 + C51318 * C864) * C1990 -
            ((C117 * C306 + C51318 * C315) * C51494 +
             (C117 * C297 + C51318 * C307) * C1989) +
            (C117 * C865 + C51318 * C880) * C51483 -
            (C117 * C1146 + C51318 * C1150) * C1991 -
            (C117 * C1151 + C51318 * C1158) * C1988) *
               C107 +
           (C1611 * C1990 - (C339 * C51494 + C340 * C1989) + C1612 * C51483 -
            (C117 * C1147 + C51318 * C1152) * C1991 -
            (C117 * C1153 + C51318 * C1159) * C1988) *
               C108 +
           (C1613 * C1990 - (C337 * C51494 + C338 * C1989) + C1614 * C51483 -
            (C117 * C1148 + C51318 * C1154) * C1991 -
            (C117 * C1155 + C51318 * C1160) * C1988) *
               C109 +
           (C1615 * C1990 - (C335 * C51494 + C336 * C1989) + C1616 * C51483 -
            (C117 * C1149 + C51318 * C1156) * C1991 -
            (C117 * C1157 + C51318 * C1161) * C1988) *
               C110) *
              C51307 * C51234) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C1989 +
             (C117 * C127 + C51318 * C140) * C51494 -
             (C117 * C454 + C51318 * C460) * C1990 -
             (C117 * C461 + C51318 * C472) * C51483 +
             (C117 * C992 + C51318 * C997) * C1991 +
             (C117 * C998 + C51318 * C1007) * C1988) *
                C2434 +
            (C1993 + C1994 - C1995 - C1996 + C1997 + C1998) * C51168) *
               C2436 +
           ((C5302 + C5303 - C5304 - C5305 + C5306 + C5307) * C2434 +
            (C4794 + C4795 - C4796 - C4797 + C4798 + C4799) * C51168) *
               C2437 +
           ((C5308 + C5309 - C5310 - C5311 + C5312 + C5313) * C2434 +
            (C4800 + C4801 - C4802 - C4803 + C4804 + C4805) * C51168) *
               C2438) *
              C1350 +
          (((C5304 - (C5303 + C5302) + C5305 - C5306 - C5307) * C2434 +
            (C4796 - (C4795 + C4794) + C4797 - C4798 - C4799) * C51168) *
               C2436 +
           ((C5310 - (C5309 + C5308) + C5311 - C5312 - C5313) * C2434 +
            (C4802 - (C4801 + C4800) + C4803 - C4804 - C4805) * C51168) *
               C2437 +
           ((C3285 * C1990 - (C2964 * C51494 + C2965 * C1989) + C3286 * C51483 -
             (C117 * C3630 + C51318 * C3632) * C1991 -
             (C117 * C3633 + C51318 * C3636) * C1988) *
                C2434 +
            (C3287 * C1990 - (C2613 * C51494 + C2614 * C1989) + C3288 * C51483 -
             (C117 * C3631 + C51318 * C3634) * C1991 -
             (C117 * C3635 + C51318 * C3637) * C1988) *
                C51168) *
               C2438) *
              C51234) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C118 +
             (C117 * C127 + C51318 * C140) * C51248) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C51307 * C622 -
           (C351 * C110 + C352 * C109 + (C347 + C348) * C108 +
            ((C117 * C306 + C51318 * C315) * C51248 +
             (C117 * C297 + C51318 * C307) * C118) *
                C107) *
               C51307 * C623 +
           (((C117 * C627 + C51318 * C632) * C118 +
             (C117 * C633 + C51318 * C642) * C51248) *
                C107 +
            (C666 + C667) * C108 + (C668 + C669) * C109 +
            (C670 + C671) * C110) *
               C51307 * C624) *
              C51439 +
          (((C348 + C347) * C107 + (C346 + C345) * C108 + (C344 + C343) * C109 +
            (C349 + C350) * C110) *
               C51307 * C623 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C51307 * C622 -
           (((C117 * C640 + C51318 * C646) * C51248 +
             (C117 * C631 + C51318 * C641) * C118) *
                C110 +
            (C671 + C670) * C109 + (C669 + C668) * C108 +
            (C667 + C666) * C107) *
               C51307 * C624) *
              C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C118 +
            (C117 * C127 + C51318 * C140) * C51248) *
               C107 +
           (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
              C51307 * C51218 * C113 -
          (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
           (C179 + C178) * C107) *
              C51307 * C51218 * C114 +
          (C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
           (C186 + C187) * C110) *
              C51307 * C51218 * C115 -
          (((C117 * C138 + C51318 * C146) * C51248 +
            (C117 * C125 + C51318 * C139) * C118) *
               C110 +
           (C187 + C186) * C109 + C190 * C108 + C191 * C107) *
              C51307 * C51218 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C989 +
            (C117 * C127 + C51318 * C140) * C986 -
            (C117 * C454 + C51318 * C460) * C990 -
            (C117 * C461 + C51318 * C472) * C987 +
            (C117 * C992 + C51318 * C997) * C991 +
            (C117 * C998 + C51318 * C1007) * C988) *
               C107 +
           (C1013 + C1014 - C1015 - C1016 + C1043 + C1044) * C108 +
           (C1021 + C1022 - C1023 - C1024 + C1045 + C1046) * C109 +
           (C1029 + C1030 - C1031 - C1032 + C1047 + C1048) * C110) *
              C51307 * C51218 * C51439 +
          ((C1015 - (C1014 + C1013) + C1016 - C1043 - C1044) * C107 +
           (C1023 - (C1022 + C1021) + C1024 - C1045 - C1046) * C108 +
           (C1031 - (C1030 + C1029) + C1032 - C1047 - C1048) * C109 +
           (C511 * C990 - (C174 * C986 + C175 * C989) + C512 * C987 -
            (C117 * C996 + C51318 * C1005) * C991 -
            (C117 * C1006 + C51318 * C1011) * C988) *
               C110) *
              C51307 * C51218 * C51191)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C118 +
             (C117 * C127 + C51318 * C140) * C51248) *
                C2434 +
            (C178 + C179) * C51168) *
               C2436 +
           (((C117 * C297 + C51318 * C307) * C118 +
             (C117 * C306 + C51318 * C315) * C51248) *
                C2434 +
            (C348 + C347) * C51168) *
               C2437 +
           (((C117 * C627 + C51318 * C632) * C118 +
             (C117 * C633 + C51318 * C642) * C51248) *
                C2434 +
            (C666 + C667) * C51168) *
               C2438) *
              C51218 * C113 -
          (((C669 + C668) * C51168 + (C667 + C666) * C2434) * C2438 +
           (C352 * C51168 + (C347 + C348) * C2434) * C2437 +
           ((C181 + C180) * C51168 + (C179 + C178) * C2434) * C2436) *
              C51218 * C114 +
          ((C188 * C2434 + C189 * C51168) * C2436 +
           ((C346 + C345) * C2434 + (C344 + C343) * C51168) * C2437 +
           ((C668 + C669) * C2434 + (C670 + C671) * C51168) * C2438) *
              C51218 * C115 -
          ((((C117 * C640 + C51318 * C646) * C51248 +
             (C117 * C631 + C51318 * C641) * C118) *
                C51168 +
            (C671 + C670) * C2434) *
               C2438 +
           ((C350 + C349) * C51168 + C351 * C2434) * C2437 +
           (C190 * C51168 + C191 * C2434) * C2436) *
              C51218 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C118 +
              (C117 * C127 + C51318 * C140) * C51248) *
                 C2434 +
             (C178 + C179) * C51168) *
                C2436 +
            ((C2617 + C2618) * C2434 + C2590 * C51168) * C2437 +
            C2969 * C2438) *
               C622 -
           ((C2951 * C51168 + (C2970 + C2971) * C2434) * C2438 +
            (C2600 * C51168 + (C2620 + C2619) * C2434) * C2437 +
            (C2601 * C51168 + (C2618 + C2617) * C2434) * C2436) *
               C623 +
           (C2969 * C2436 + ((C2971 + C2970) * C2434 + C2956 * C51168) * C2437 +
            (((C117 * C2936 + C51318 * C2939) * C118 +
              (C117 * C2940 + C51318 * C2945) * C51248) *
                 C2434 +
             (C2972 + C2973) * C51168) *
                C2438) *
               C624) *
              C51439 +
          (((C2590 * C2434 + C2602 * C51168) * C2436 +
            (C2595 * C2434 + C2603 * C51168) * C2437 +
            (C2956 * C2434 + (C2623 + C2624) * C51168) * C2438) *
               C623 -
           (C2968 * C2438 + (C352 * C51168 + C2601 * C2434) * C2437 +
            ((C181 + C180) * C51168 + (C179 + C178) * C2434) * C2436) *
               C622 -
           ((((C117 * C2943 + C51318 * C2947) * C51248 +
              (C117 * C2938 + C51318 * C2944) * C118) *
                 C51168 +
             (C2973 + C2972) * C2434) *
                C2438 +
            ((C2624 + C2623) * C51168 + C2951 * C2434) * C2437 +
            C2968 * C2436) *
               C624) *
              C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C989 +
             (C117 * C127 + C51318 * C140) * C986 -
             (C117 * C454 + C51318 * C460) * C990 -
             (C117 * C461 + C51318 * C472) * C987 +
             (C117 * C992 + C51318 * C997) * C991 +
             (C117 * C998 + C51318 * C1007) * C988) *
                C2434 +
            (C1013 + C1014 - C1015 - C1016 + C1043 + C1044) * C51168) *
               C2436 +
           ((C2609 * C989 + C2610 * C986 - C3279 * C990 - C3280 * C987 +
             (C117 * C1146 + C51318 * C1150) * C991 +
             (C117 * C1151 + C51318 * C1158) * C988) *
                C2434 +
            (C3461 + C3462 - C3463 - C3464 + C3481 + C3482) * C51168) *
               C2437 +
           ((C2611 * C989 + C2612 * C986 - C3282 * C990 - C3283 * C987 +
             (C117 * C3448 + C51318 * C3451) * C991 +
             (C117 * C3452 + C51318 * C3457) * C988) *
                C2434 +
            (C3469 + C3470 - C3471 - C3472 + C3483 + C3484) * C51168) *
               C2438) *
              C51218 * C51439 +
          (((C1015 - (C1014 + C1013) + C1016 - C1043 - C1044) * C2434 +
            (C1023 - (C1022 + C1021) + C1024 - C1045 - C1046) * C51168) *
               C2436 +
           ((C3463 - (C3462 + C3461) + C3464 - C3481 - C3482) * C2434 +
            (C1613 * C990 - (C337 * C986 + C338 * C989) + C1614 * C987 -
             (C117 * C1148 + C51318 * C1154) * C991 -
             (C117 * C1155 + C51318 * C1160) * C988) *
                C51168) *
               C2437 +
           ((C3471 - (C3470 + C3469) + C3472 - C3483 - C3484) * C2434 +
            (C2785 * C990 - (C663 * C986 + C662 * C989) + C2786 * C987 -
             (C117 * C3450 + C51318 * C3455) * C991 -
             (C117 * C3456 + C51318 * C3459) * C988) *
                C51168) *
               C2438) *
              C51218 * C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C118 +
            (C117 * C127 + C51318 * C140) * C51248) *
               C107 +
           (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
              C51307 * C737 -
          (C351 * C110 + C352 * C109 + (C347 + C348) * C108 +
           ((C117 * C306 + C51318 * C315) * C51248 +
            (C117 * C297 + C51318 * C307) * C118) *
               C107) *
              C51307 * C738 +
          (((C117 * C627 + C51318 * C632) * C118 +
            (C117 * C633 + C51318 * C642) * C51248) *
               C107 +
           (C666 + C667) * C108 + (C668 + C669) * C109 + (C670 + C671) * C110) *
              C51307 * C739 -
          (((C117 * C746 + C51318 * C754) * C51248 +
            (C117 * C742 + C51318 * C747) * C118) *
               C110 +
           ((C117 * C748 + C51318 * C755) * C51248 +
            (C117 * C743 + C51318 * C749) * C118) *
               C109 +
           ((C117 * C750 + C51318 * C756) * C51248 +
            (C117 * C744 + C51318 * C751) * C118) *
               C108 +
           ((C117 * C752 + C51318 * C757) * C51248 +
            (C117 * C745 + C51318 * C753) * C118) *
               C107) *
              C51307 * C740) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C118 +
             (C117 * C127 + C51318 * C140) * C51248) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C51307 * C51446 -
           (C351 * C110 + C352 * C109 + (C347 + C348) * C108 +
            ((C117 * C306 + C51318 * C315) * C51248 +
             (C117 * C297 + C51318 * C307) * C118) *
                C107) *
               C51307 * C51234) *
              C291 +
          (((C348 + C347) * C107 + (C346 + C345) * C108 + (C344 + C343) * C109 +
            (C349 + C350) * C110) *
               C51307 * C51234 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C51307 * C51446) *
              C292 +
          ((C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
            (C186 + C187) * C110) *
               C51307 * C51446 -
           (((C117 * C310 + C51318 * C317) * C51248 +
             (C117 * C299 + C51318 * C311) * C118) *
                C110 +
            (C350 + C349) * C109 + C351 * C108 + C352 * C107) *
               C51307 * C51234) *
              C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C989 +
            (C117 * C127 + C51318 * C140) * C986 -
            (C117 * C454 + C51318 * C460) * C990 -
            (C117 * C461 + C51318 * C472) * C987 +
            (C117 * C992 + C51318 * C997) * C991 +
            (C117 * C998 + C51318 * C1007) * C988) *
               C107 +
           (C1013 + C1014 - C1015 - C1016 + C1043 + C1044) * C108 +
           (C1021 + C1022 - C1023 - C1024 + C1045 + C1046) * C109 +
           (C1029 + C1030 - C1031 - C1032 + C1047 + C1048) * C110) *
              C51307 * C51446 +
          (((C117 * C856 + C51318 * C864) * C990 -
            ((C117 * C306 + C51318 * C315) * C986 +
             (C117 * C297 + C51318 * C307) * C989) +
            (C117 * C865 + C51318 * C880) * C987 -
            (C117 * C1146 + C51318 * C1150) * C991 -
            (C117 * C1151 + C51318 * C1158) * C988) *
               C107 +
           ((C117 * C857 + C51318 * C866) * C990 - (C339 * C986 + C340 * C989) +
            (C117 * C867 + C51318 * C881) * C987 -
            (C117 * C1147 + C51318 * C1152) * C991 -
            (C117 * C1153 + C51318 * C1159) * C988) *
               C108 +
           ((C117 * C858 + C51318 * C868) * C990 - (C337 * C986 + C338 * C989) +
            (C117 * C869 + C51318 * C882) * C987 -
            (C117 * C1148 + C51318 * C1154) * C991 -
            (C117 * C1155 + C51318 * C1160) * C988) *
               C109 +
           ((C117 * C859 + C51318 * C870) * C990 - (C335 * C986 + C336 * C989) +
            (C117 * C871 + C51318 * C883) * C987 -
            (C117 * C1149 + C51318 * C1156) * C991 -
            (C117 * C1157 + C51318 * C1161) * C988) *
               C110) *
              C51307 * C51234) *
         C51186) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C118 +
              (C117 * C127 + C51318 * C140) * C51248) *
                 C2434 +
             (C178 + C179) * C51168) *
                C2436 +
            ((C2617 + C2618) * C2434 + C2590 * C51168) * C2437 +
            ((C2619 + C2620) * C2434 + C2595 * C51168) * C2438) *
               C51446 -
           (((C2621 + C2622) * C51168 +
             ((C117 * C752 + C51318 * C757) * C51248 +
              (C117 * C745 + C51318 * C753) * C118) *
                 C2434) *
                C2438 +
            (C2600 * C51168 + (C2620 + C2619) * C2434) * C2437 +
            (C2601 * C51168 + (C2618 + C2617) * C2434) * C2436) *
               C51234) *
              C291 +
          (((C2590 * C2434 + C2602 * C51168) * C2436 +
            (C2595 * C2434 + C2603 * C51168) * C2437 +
            ((C2622 + C2621) * C2434 + (C2623 + C2624) * C51168) * C2438) *
               C51234 -
           ((C2608 * C51168 + C2600 * C2434) * C2438 +
            (C352 * C51168 + C2601 * C2434) * C2437 +
            ((C181 + C180) * C51168 + (C179 + C178) * C2434) * C2436) *
               C51446) *
              C292 +
          (((C188 * C2434 + C189 * C51168) * C2436 +
            (C2602 * C2434 + (C344 + C343) * C51168) * C2437 +
            (C2603 * C2434 + (C670 + C671) * C51168) * C2438) *
               C51446 -
           ((((C117 * C746 + C51318 * C754) * C51248 +
              (C117 * C742 + C51318 * C747) * C118) *
                 C51168 +
             (C2624 + C2623) * C2434) *
                C2438 +
            ((C671 + C670) * C51168 + C2608 * C2434) * C2437 +
            (C351 * C51168 + C352 * C2434) * C2436) *
               C51234) *
              C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C118 +
             (C117 * C127 + C51318 * C140) * C51248) *
                C2434 +
            (C178 + C179) * C51168) *
               C2436 +
           ((C2617 + C2618) * C2434 + C2590 * C51168) * C2437 + C2969 * C2438) *
              C737 -
          (C3089 * C2438 + (C2600 * C51168 + (C2620 + C2619) * C2434) * C2437 +
           (C2601 * C51168 + (C2618 + C2617) * C2434) * C2436) *
              C738 +
          (C2969 * C2436 + ((C2971 + C2970) * C2434 + C2956 * C51168) * C2437 +
           ((C3090 + C3091) * C2434 + (C2972 + C2973) * C51168) * C2438) *
              C739 -
          ((((C117 * C3073 + C51318 * C3077) * C51248 +
             (C117 * C3071 + C51318 * C3074) * C118) *
                C51168 +
            ((C117 * C3075 + C51318 * C3078) * C51248 +
             (C117 * C3072 + C51318 * C3076) * C118) *
                C2434) *
               C2438 +
           ((C2973 + C2972) * C51168 + (C3091 + C3090) * C2434) * C2437 +
           C3089 * C2436) *
              C740) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C989 +
             (C117 * C127 + C51318 * C140) * C986 -
             (C117 * C454 + C51318 * C460) * C990 -
             (C117 * C461 + C51318 * C472) * C987 +
             (C117 * C992 + C51318 * C997) * C991 +
             (C117 * C998 + C51318 * C1007) * C988) *
                C2434 +
            (C1013 + C1014 - C1015 - C1016 + C1043 + C1044) * C51168) *
               C2436 +
           ((C3639 + C3640 - C3641 - C3642 + C3659 + C3660) * C2434 +
            (C3461 + C3462 - C3463 - C3464 + C3481 + C3482) * C51168) *
               C2437 +
           ((C3647 + C3648 - C3649 - C3650 + C3661 + C3662) * C2434 +
            (C3469 + C3470 - C3471 - C3472 + C3483 + C3484) * C51168) *
               C2438) *
              C51446 +
          (((C3641 - (C3640 + C3639) + C3642 - C3659 - C3660) * C2434 +
            (C3463 - (C3462 + C3461) + C3464 - C3481 - C3482) * C51168) *
               C2436 +
           ((C3649 - (C3648 + C3647) + C3650 - C3661 - C3662) * C2434 +
            (C3471 - (C3470 + C3469) + C3472 - C3483 - C3484) * C51168) *
               C2437 +
           ((C3285 * C990 - (C2964 * C986 + C2965 * C989) + C3286 * C987 -
             (C117 * C3630 + C51318 * C3632) * C991 -
             (C117 * C3633 + C51318 * C3636) * C988) *
                C2434 +
            (C3287 * C990 - (C2613 * C986 + C2614 * C989) + C3288 * C987 -
             (C117 * C3631 + C51318 * C3634) * C991 -
             (C117 * C3635 + C51318 * C3637) * C988) *
                C51168) *
               C2438) *
              C51234) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C452 +
            (C117 * C127 + C51318 * C140) * C51448 -
            (C117 * C454 + C51318 * C460) * C453 -
            (C117 * C461 + C51318 * C472) * C51260) *
               C107 +
           (C479 + C480 - C513 - C514) * C108 + C523 * C109 + C524 * C110) *
              C51307 * C622 +
          (((C117 * C856 + C51318 * C864) * C453 -
            ((C117 * C306 + C51318 * C315) * C51448 +
             (C117 * C297 + C51318 * C307) * C452) +
            (C117 * C865 + C51318 * C880) * C51260) *
               C107 +
           ((C117 * C857 + C51318 * C866) * C453 -
            (C339 * C51448 + C340 * C452) +
            (C117 * C867 + C51318 * C881) * C51260) *
               C108 +
           ((C117 * C858 + C51318 * C868) * C453 -
            (C337 * C51448 + C338 * C452) +
            (C117 * C869 + C51318 * C882) * C51260) *
               C109 +
           ((C117 * C859 + C51318 * C870) * C453 -
            (C335 * C51448 + C336 * C452) +
            (C117 * C871 + C51318 * C883) * C51260) *
               C110) *
              C51307 * C623 +
          (((C117 * C627 + C51318 * C632) * C452 +
            (C117 * C633 + C51318 * C642) * C51448 -
            (C117 * C860 + C51318 * C872) * C453 -
            (C117 * C873 + C51318 * C884) * C51260) *
               C107 +
           (C660 * C452 + C661 * C51448 - (C117 * C861 + C51318 * C874) * C453 -
            (C117 * C875 + C51318 * C885) * C51260) *
               C108 +
           (C662 * C452 + C663 * C51448 - (C117 * C862 + C51318 * C876) * C453 -
            (C117 * C877 + C51318 * C886) * C51260) *
               C109 +
           (C664 * C452 + C665 * C51448 - (C117 * C863 + C51318 * C878) * C453 -
            (C117 * C879 + C51318 * C887) * C51260) *
               C110) *
              C51307 * C624) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C452 +
            (C117 * C127 + C51318 * C140) * C51448 -
            (C117 * C454 + C51318 * C460) * C453 -
            (C117 * C461 + C51318 * C472) * C51260) *
               C107 +
           (C479 + C480 - C513 - C514) * C108 + C523 * C109 + C524 * C110) *
              C51307 * C51218 * C291 +
          ((C513 - (C480 + C479) + C514) * C107 +
           (C515 - (C486 + C485) + C516) * C108 +
           (C517 - (C492 + C491) + C518) * C109 +
           (C519 - (C499 + C500) + C520) * C110) *
              C51307 * C51218 * C292 +
          (C523 * C107 + C524 * C108 + (C500 + C499 - C519 - C520) * C109 +
           (C176 * C452 + C177 * C51448 - (C117 * C459 + C51318 * C470) * C453 -
            (C117 * C471 + C51318 * C477) * C51260) *
               C110) *
              C51307 * C51218 * C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C51318 * C126) * C1232 +
           (C117 * C127 + C51318 * C140) * C1228 -
           (C117 * C454 + C51318 * C460) * C1233 -
           (C117 * C461 + C51318 * C472) * C1229 +
           (C117 * C992 + C51318 * C997) * C1234 +
           (C117 * C998 + C51318 * C1007) * C1230 -
           (C117 * C1236 + C51318 * C1240) * C1235 -
           (C117 * C1241 + C51318 * C1248) * C1231) *
              C107 +
          (C168 * C1232 + C169 * C1228 - C503 * C1233 - C504 * C1229 +
           C1037 * C1234 + C1038 * C1230 -
           (C117 * C1237 + C51318 * C1242) * C1235 -
           (C117 * C1243 + C51318 * C1249) * C1231) *
              C108 +
          (C170 * C1232 + C171 * C1228 - C506 * C1233 - C507 * C1229 +
           C1039 * C1234 + C1040 * C1230 -
           (C117 * C1238 + C51318 * C1244) * C1235 -
           (C117 * C1245 + C51318 * C1250) * C1231) *
              C109 +
          (C172 * C1232 + C173 * C1228 - C509 * C1233 - C510 * C1229 +
           C1041 * C1234 + C1042 * C1230 -
           (C117 * C1239 + C51318 * C1246) * C1235 -
           (C117 * C1247 + C51318 * C1251) * C1231) *
              C110) *
         C51307 * C51218 * C51186) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C452 +
             (C117 * C127 + C51318 * C140) * C51448 -
             (C117 * C454 + C51318 * C460) * C453 -
             (C117 * C461 + C51318 * C472) * C51260) *
                C2434 +
            (C479 + C480 - C513 - C514) * C51168) *
               C2436 +
           ((C2609 * C452 + C2610 * C51448 -
             (C117 * C856 + C51318 * C864) * C453 -
             (C117 * C865 + C51318 * C880) * C51260) *
                C2434 +
            (C1596 + C1595 - C1617 - C1618) * C51168) *
               C2437 +
           ((C2611 * C452 + C2612 * C51448 -
             (C117 * C860 + C51318 * C872) * C453 -
             (C117 * C873 + C51318 * C884) * C51260) *
                C2434 +
            (C2771 + C2772 - C2787 - C2788) * C51168) *
               C2438) *
              C51218 * C291 +
          (((C513 - (C480 + C479) + C514) * C2434 +
            (C515 - (C486 + C485) + C516) * C51168) *
               C2436 +
           ((C1617 - (C1595 + C1596) + C1618) * C2434 +
            (C1619 - (C1601 + C1602) + C1620) * C51168) *
               C2437 +
           ((C2787 - (C2772 + C2771) + C2788) * C2434 +
            (C2789 - (C2779 + C2780) + C2790) * C51168) *
               C2438) *
              C51218 * C292 +
          ((C523 * C2434 + C524 * C51168) * C2436 +
           ((C1602 + C1601 - C1619 - C1620) * C2434 +
            (C1608 + C1607 - C1621 - C1622) * C51168) *
               C2437 +
           ((C2780 + C2779 - C2789 - C2790) * C2434 +
            (C664 * C452 + C665 * C51448 -
             (C117 * C863 + C51318 * C878) * C453 -
             (C117 * C879 + C51318 * C887) * C51260) *
                C51168) *
               C2438) *
              C51218 * C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C452 +
             (C117 * C127 + C51318 * C140) * C51448 -
             (C117 * C454 + C51318 * C460) * C453 -
             (C117 * C461 + C51318 * C472) * C51260) *
                C2434 +
            (C479 + C480 - C513 - C514) * C51168) *
               C2436 +
           ((C3254 + C3255 - C3289 - C3290) * C2434 +
            (C1596 + C1595 - C1617 - C1618) * C51168) *
               C2437 +
           C3302 * C2438) *
              C622 +
          (((C3289 - (C3255 + C3254) + C3290) * C2434 +
            (C1617 - (C1595 + C1596) + C1618) * C51168) *
               C2436 +
           ((C3291 - (C3261 + C3260) + C3292) * C2434 +
            (C2787 - (C2772 + C2771) + C2788) * C51168) *
               C2437 +
           ((C3294 - (C3269 + C3270) + C3295) * C2434 +
            (C3296 - (C3275 + C3276) + C3297) * C51168) *
               C2438) *
              C623 +
          (C3302 * C2436 +
           ((C3270 + C3269 - C3294 - C3295) * C2434 +
            (C3276 + C3275 - C3296 - C3297) * C51168) *
               C2437 +
           ((C3087 * C452 + C3088 * C51448 -
             (C117 * C3239 + C51318 * C3245) * C453 -
             (C117 * C3246 + C51318 * C3251) * C51260) *
                C2434 +
            (C2966 * C452 + C2967 * C51448 -
             (C117 * C3240 + C51318 * C3247) * C453 -
             (C117 * C3248 + C51318 * C3252) * C51260) *
                C51168) *
               C2438) *
              C624) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C1232 +
            (C117 * C127 + C51318 * C140) * C1228 -
            (C117 * C454 + C51318 * C460) * C1233 -
            (C117 * C461 + C51318 * C472) * C1229 +
            (C117 * C992 + C51318 * C997) * C1234 +
            (C117 * C998 + C51318 * C1007) * C1230 -
            (C117 * C1236 + C51318 * C1240) * C1235 -
            (C117 * C1241 + C51318 * C1248) * C1231) *
               C2434 +
           (C168 * C1232 + C169 * C1228 - C503 * C1233 - C504 * C1229 +
            C1037 * C1234 + C1038 * C1230 -
            (C117 * C1237 + C51318 * C1242) * C1235 -
            (C117 * C1243 + C51318 * C1249) * C1231) *
               C51168) *
              C2436 +
          ((C2609 * C1232 + C2610 * C1228 - C3279 * C1233 - C3280 * C1229 +
            C3655 * C1234 + C3656 * C1230 -
            (C117 * C3760 + C51318 * C3764) * C1235 -
            (C117 * C3765 + C51318 * C3772) * C1231) *
               C2434 +
           (C340 * C1232 + C339 * C1228 - C1611 * C1233 - C1612 * C1229 +
            C3477 * C1234 + C3478 * C1230 -
            (C117 * C3761 + C51318 * C3766) * C1235 -
            (C117 * C3767 + C51318 * C3773) * C1231) *
               C51168) *
              C2437 +
          ((C2611 * C1232 + C2612 * C1228 - C3282 * C1233 - C3283 * C1229 +
            C3657 * C1234 + C3658 * C1230 -
            (C117 * C3762 + C51318 * C3768) * C1235 -
            (C117 * C3769 + C51318 * C3774) * C1231) *
               C2434 +
           (C660 * C1232 + C661 * C1228 - C2783 * C1233 - C2784 * C1229 +
            C3479 * C1234 + C3480 * C1230 -
            (C117 * C3763 + C51318 * C3770) * C1235 -
            (C117 * C3771 + C51318 * C3775) * C1231) *
               C51168) *
              C2438) *
         C51218 * C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C1722 +
            (C117 * C127 + C51318 * C140) * C1720 -
            (C117 * C454 + C51318 * C460) * C1723 -
            (C117 * C461 + C51318 * C472) * C51260) *
               C107 +
           (C1725 + C1726 - C1727 - C1728) * C108 + C1745 * C109 +
           C1746 * C110) *
              C51307 * C51218 * C51492 +
          ((C1727 - (C1726 + C1725) + C1728) * C107 +
           (C1731 - (C1730 + C1729) + C1732) * C108 +
           (C1735 - (C1734 + C1733) + C1736) * C109 +
           (C1737 - (C1738 + C1739) + C1740) * C110) *
              C51307 * C51218 * C51477 +
          (C1745 * C107 + C1746 * C108 +
           (C1739 + C1738 - C1737 - C1740) * C109 +
           (C176 * C1722 + C177 * C1720 -
            (C117 * C459 + C51318 * C470) * C1723 -
            (C117 * C471 + C51318 * C477) * C51260) *
               C110) *
              C51307 * C51218 * C1354)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C1722 +
             (C117 * C127 + C51318 * C140) * C1720 -
             (C117 * C454 + C51318 * C460) * C1723 -
             (C117 * C461 + C51318 * C472) * C51260) *
                C2434 +
            (C1725 + C1726 - C1727 - C1728) * C51168) *
               C2436 +
           ((C2609 * C1722 + C2610 * C1720 - C3279 * C1723 - C3280 * C51260) *
                C2434 +
            (C1879 + C1878 - C1877 - C1880) * C51168) *
               C2437 +
           ((C2611 * C1722 + C2612 * C1720 - C3282 * C1723 - C3283 * C51260) *
                C2434 +
            (C4422 + C4423 - C4424 - C4425) * C51168) *
               C2438) *
              C51218 * C51492 +
          (((C1727 - (C1726 + C1725) + C1728) * C2434 +
            (C1731 - (C1730 + C1729) + C1732) * C51168) *
               C2436 +
           ((C1877 - (C1878 + C1879) + C1880) * C2434 +
            (C1881 - (C1882 + C1883) + C1884) * C51168) *
               C2437 +
           ((C4424 - (C4423 + C4422) + C4425) * C2434 +
            (C4426 - (C4427 + C4428) + C4429) * C51168) *
               C2438) *
              C51218 * C51477 +
          ((C1745 * C2434 + C1746 * C51168) * C2436 +
           ((C1883 + C1882 - C1881 - C1884) * C2434 +
            (C1887 + C1886 - C1885 - C1888) * C51168) *
               C2437 +
           ((C4428 + C4427 - C4426 - C4429) * C2434 +
            (C664 * C1722 + C665 * C1720 -
             (C117 * C863 + C51318 * C878) * C1723 -
             (C117 * C879 + C51318 * C887) * C51260) *
                C51168) *
               C2438) *
              C51218 * C1354)) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C1722 +
             (C117 * C127 + C51318 * C140) * C1720 -
             (C117 * C454 + C51318 * C460) * C1723 -
             (C117 * C461 + C51318 * C472) * C51260) *
                C107 +
            (C1725 + C1726 - C1727 - C1728) * C108 + C1745 * C109 +
            C1746 * C110) *
               C51307 * C51446 +
           (((C117 * C856 + C51318 * C864) * C1723 -
             ((C117 * C306 + C51318 * C315) * C1720 +
              (C117 * C297 + C51318 * C307) * C1722) +
             (C117 * C865 + C51318 * C880) * C51260) *
                C107 +
            (C1877 - (C1878 + C1879) + C1880) * C108 +
            (C1881 - (C1882 + C1883) + C1884) * C109 +
            (C1885 - (C1886 + C1887) + C1888) * C110) *
               C51307 * C51234) *
              C1456 +
          (((C1727 - (C1726 + C1725) + C1728) * C107 +
            (C1731 - (C1730 + C1729) + C1732) * C108 +
            (C1735 - (C1734 + C1733) + C1736) * C109 +
            (C1737 - (C1738 + C1739) + C1740) * C110) *
               C51307 * C51446 +
           ((C1879 + C1878 - C1877 - C1880) * C107 +
            (C1883 + C1882 - C1881 - C1884) * C108 +
            (C1887 + C1886 - C1885 - C1888) * C109 +
            (C341 * C1722 + C342 * C1720 -
             (C117 * C1588 + C51318 * C1589) * C1723 -
             (C117 * C1590 + C51318 * C1591) * C51260) *
                C110) *
               C51307 * C51234) *
              C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C1722 +
              (C117 * C127 + C51318 * C140) * C1720 -
              (C117 * C454 + C51318 * C460) * C1723 -
              (C117 * C461 + C51318 * C472) * C51260) *
                 C2434 +
             (C1725 + C1726 - C1727 - C1728) * C51168) *
                C2436 +
            ((C4624 + C4625 - C4626 - C4627) * C2434 + C4644 * C51168) * C2437 +
            ((C4629 + C4630 - C4631 - C4632) * C2434 + C4645 * C51168) *
                C2438) *
               C51446 +
           (((C4626 - (C4625 + C4624) + C4627) * C2434 + C4646 * C51168) *
                C2436 +
            ((C4631 - (C4630 + C4629) + C4632) * C2434 + C4647 * C51168) *
                C2437 +
            ((C3285 * C1723 - (C2964 * C1720 + C2965 * C1722) +
              C3286 * C51260) *
                 C2434 +
             (C4636 - (C4637 + C4638) + C4639) * C51168) *
                C2438) *
               C51234) *
              C1456 +
          ((((C1727 - (C1726 + C1725) + C1728) * C2434 +
             (C1731 - (C1730 + C1729) + C1732) * C51168) *
                C2436 +
            (C4646 * C2434 + (C1881 - (C1882 + C1883) + C1884) * C51168) *
                C2437 +
            (C4647 * C2434 + (C4426 - (C4427 + C4428) + C4429) * C51168) *
                C2438) *
               C51446 +
           ((C4644 * C2434 + (C1883 + C1882 - C1881 - C1884) * C51168) * C2436 +
            (C4645 * C2434 + (C4428 + C4427 - C4426 - C4429) * C51168) * C2437 +
            ((C4638 + C4637 - C4636 - C4639) * C2434 +
             (C2615 * C1722 + C2616 * C1720 -
              (C117 * C4262 + C51318 * C4263) * C1723 -
              (C117 * C4264 + C51318 * C4265) * C51260) *
                 C51168) *
                C2438) *
               C51234) *
              C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C1989 +
            (C117 * C127 + C51318 * C140) * C51494 -
            (C117 * C454 + C51318 * C460) * C1990 -
            (C117 * C461 + C51318 * C472) * C51483 +
            (C117 * C992 + C51318 * C997) * C1991 +
            (C117 * C998 + C51318 * C1007) * C1988) *
               C107 +
           (C1993 + C1994 - C1995 - C1996 + C1997 + C1998) * C108 +
           (C1999 + C2000 - C2001 - C2002 + C2003 + C2004) * C109 +
           (C2005 + C2006 - C2007 - C2008 + C2009 + C2010) * C110) *
              C51307 * C51218 * C1456 +
          ((C1995 - (C1994 + C1993) + C1996 - C1997 - C1998) * C107 +
           (C2001 - (C2000 + C1999) + C2002 - C2003 - C2004) * C108 +
           (C2007 - (C2006 + C2005) + C2008 - C2009 - C2010) * C109 +
           (C511 * C1990 - (C174 * C51494 + C175 * C1989) + C512 * C51483 -
            (C117 * C996 + C51318 * C1005) * C1991 -
            (C117 * C1006 + C51318 * C1011) * C1988) *
               C110) *
              C51307 * C51218 * C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C1989 +
             (C117 * C127 + C51318 * C140) * C51494 -
             (C117 * C454 + C51318 * C460) * C1990 -
             (C117 * C461 + C51318 * C472) * C51483 +
             (C117 * C992 + C51318 * C997) * C1991 +
             (C117 * C998 + C51318 * C1007) * C1988) *
                C2434 +
            (C1993 + C1994 - C1995 - C1996 + C1997 + C1998) * C51168) *
               C2436 +
           ((C2609 * C1989 + C2610 * C51494 - C3279 * C1990 - C3280 * C51483 +
             C3655 * C1991 + C3656 * C1988) *
                C2434 +
            (C4794 + C4795 - C4796 - C4797 + C4798 + C4799) * C51168) *
               C2437 +
           ((C2611 * C1989 + C2612 * C51494 - C3282 * C1990 - C3283 * C51483 +
             C3657 * C1991 + C3658 * C1988) *
                C2434 +
            (C4800 + C4801 - C4802 - C4803 + C4804 + C4805) * C51168) *
               C2438) *
              C51218 * C1456 +
          (((C1995 - (C1994 + C1993) + C1996 - C1997 - C1998) * C2434 +
            (C2001 - (C2000 + C1999) + C2002 - C2003 - C2004) * C51168) *
               C2436 +
           ((C4796 - (C4795 + C4794) + C4797 - C4798 - C4799) * C2434 +
            (C1613 * C1990 - (C337 * C51494 + C338 * C1989) + C1614 * C51483 -
             (C117 * C1148 + C51318 * C1154) * C1991 -
             (C117 * C1155 + C51318 * C1160) * C1988) *
                C51168) *
               C2437 +
           ((C4802 - (C4801 + C4800) + C4803 - C4804 - C4805) * C2434 +
            (C2785 * C1990 - (C663 * C51494 + C662 * C1989) + C2786 * C51483 -
             (C117 * C3450 + C51318 * C3455) * C1991 -
             (C117 * C3456 + C51318 * C3459) * C1988) *
                C51168) *
               C2438) *
              C51218 * C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C118 +
            (C117 * C127 + C51318 * C140) * C51248) *
               C107 +
           (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
              C51307 * C51218 * C113 -
          (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
           (C179 + C178) * C107) *
              C51307 * C51218 * C114 +
          (C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
           (C186 + C187) * C110) *
              C51307 * C51218 * C115 -
          (((C117 * C138 + C51318 * C146) * C51248 +
            (C117 * C125 + C51318 * C139) * C118) *
               C110 +
           (C187 + C186) * C109 + C190 * C108 + C191 * C107) *
              C51307 * C51218 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C118 +
             (C117 * C127 + C51318 * C140) * C51248) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C51307 * C622 -
           (C351 * C110 + C352 * C109 + (C347 + C348) * C108 +
            ((C117 * C306 + C51318 * C315) * C51248 +
             (C117 * C297 + C51318 * C307) * C118) *
                C107) *
               C51307 * C623 +
           (((C117 * C627 + C51318 * C632) * C118 +
             (C117 * C633 + C51318 * C642) * C51248) *
                C107 +
            (C666 + C667) * C108 + (C668 + C669) * C109 +
            (C670 + C671) * C110) *
               C51307 * C624) *
              C51439 +
          (((C348 + C347) * C107 + (C346 + C345) * C108 + (C344 + C343) * C109 +
            (C349 + C350) * C110) *
               C51307 * C623 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C51307 * C622 -
           (((C117 * C640 + C51318 * C646) * C51248 +
             (C117 * C631 + C51318 * C641) * C118) *
                C110 +
            (C671 + C670) * C109 + (C669 + C668) * C108 +
            (C667 + C666) * C107) *
               C51307 * C624) *
              C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C118 +
             (C117 * C127 + C51318 * C140) * C51248) *
                C2434 +
            (C178 + C179) * C51168) *
               C2436 +
           (((C117 * C297 + C51318 * C307) * C118 +
             (C117 * C306 + C51318 * C315) * C51248) *
                C2434 +
            (C348 + C347) * C51168) *
               C2437 +
           (((C117 * C627 + C51318 * C632) * C118 +
             (C117 * C633 + C51318 * C642) * C51248) *
                C2434 +
            (C666 + C667) * C51168) *
               C2438) *
              C51218 * C113 -
          (((C669 + C668) * C51168 + (C667 + C666) * C2434) * C2438 +
           (C352 * C51168 + (C347 + C348) * C2434) * C2437 +
           ((C181 + C180) * C51168 + (C179 + C178) * C2434) * C2436) *
              C51218 * C114 +
          ((C188 * C2434 + C189 * C51168) * C2436 +
           ((C346 + C345) * C2434 + (C344 + C343) * C51168) * C2437 +
           ((C668 + C669) * C2434 + (C670 + C671) * C51168) * C2438) *
              C51218 * C115 -
          ((((C117 * C640 + C51318 * C646) * C51248 +
             (C117 * C631 + C51318 * C641) * C118) *
                C51168 +
            (C671 + C670) * C2434) *
               C2438 +
           ((C350 + C349) * C51168 + C351 * C2434) * C2437 +
           (C190 * C51168 + C191 * C2434) * C2436) *
              C51218 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C118 +
              (C117 * C127 + C51318 * C140) * C51248) *
                 C2434 +
             (C178 + C179) * C51168) *
                C2436 +
            ((C2617 + C2618) * C2434 + C2590 * C51168) * C2437 +
            C2969 * C2438) *
               C622 -
           ((C2951 * C51168 + (C2970 + C2971) * C2434) * C2438 +
            (C2600 * C51168 + (C2620 + C2619) * C2434) * C2437 +
            (C2601 * C51168 + (C2618 + C2617) * C2434) * C2436) *
               C623 +
           (C2969 * C2436 + ((C2971 + C2970) * C2434 + C2956 * C51168) * C2437 +
            (((C117 * C2936 + C51318 * C2939) * C118 +
              (C117 * C2940 + C51318 * C2945) * C51248) *
                 C2434 +
             (C2972 + C2973) * C51168) *
                C2438) *
               C624) *
              C51439 +
          (((C2590 * C2434 + C2602 * C51168) * C2436 +
            (C2595 * C2434 + C2603 * C51168) * C2437 +
            (C2956 * C2434 + (C2623 + C2624) * C51168) * C2438) *
               C623 -
           (C2968 * C2438 + (C352 * C51168 + C2601 * C2434) * C2437 +
            ((C181 + C180) * C51168 + (C179 + C178) * C2434) * C2436) *
               C622 -
           ((((C117 * C2943 + C51318 * C2947) * C51248 +
              (C117 * C2938 + C51318 * C2944) * C118) *
                 C51168 +
             (C2973 + C2972) * C2434) *
                C2438 +
            ((C2624 + C2623) * C51168 + C2951 * C2434) * C2437 +
            C2968 * C2436) *
               C624) *
              C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C118 +
             (C117 * C127 + C51318 * C140) * C51248) *
                C107 +
            (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
               C51307 * C51446 -
           (C351 * C110 + C352 * C109 + (C347 + C348) * C108 +
            ((C117 * C306 + C51318 * C315) * C51248 +
             (C117 * C297 + C51318 * C307) * C118) *
                C107) *
               C51307 * C51234) *
              C291 +
          (((C348 + C347) * C107 + (C346 + C345) * C108 + (C344 + C343) * C109 +
            (C349 + C350) * C110) *
               C51307 * C51234 -
           (C190 * C110 + C191 * C109 + (C181 + C180) * C108 +
            (C179 + C178) * C107) *
               C51307 * C51446) *
              C292 +
          ((C188 * C107 + C189 * C108 + (C185 + C184) * C109 +
            (C186 + C187) * C110) *
               C51307 * C51446 -
           (((C117 * C310 + C51318 * C317) * C51248 +
             (C117 * C299 + C51318 * C311) * C118) *
                C110 +
            (C350 + C349) * C109 + C351 * C108 + C352 * C107) *
               C51307 * C51234) *
              C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C118 +
            (C117 * C127 + C51318 * C140) * C51248) *
               C107 +
           (C178 + C179) * C108 + C188 * C109 + C189 * C110) *
              C51307 * C737 -
          (C351 * C110 + C352 * C109 + (C347 + C348) * C108 +
           ((C117 * C306 + C51318 * C315) * C51248 +
            (C117 * C297 + C51318 * C307) * C118) *
               C107) *
              C51307 * C738 +
          (((C117 * C627 + C51318 * C632) * C118 +
            (C117 * C633 + C51318 * C642) * C51248) *
               C107 +
           (C666 + C667) * C108 + (C668 + C669) * C109 + (C670 + C671) * C110) *
              C51307 * C739 -
          (((C117 * C746 + C51318 * C754) * C51248 +
            (C117 * C742 + C51318 * C747) * C118) *
               C110 +
           ((C117 * C748 + C51318 * C755) * C51248 +
            (C117 * C743 + C51318 * C749) * C118) *
               C109 +
           ((C117 * C750 + C51318 * C756) * C51248 +
            (C117 * C744 + C51318 * C751) * C118) *
               C108 +
           ((C117 * C752 + C51318 * C757) * C51248 +
            (C117 * C745 + C51318 * C753) * C118) *
               C107) *
              C51307 * C740) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C118 +
              (C117 * C127 + C51318 * C140) * C51248) *
                 C2434 +
             (C178 + C179) * C51168) *
                C2436 +
            ((C2617 + C2618) * C2434 + C2590 * C51168) * C2437 +
            ((C2619 + C2620) * C2434 + C2595 * C51168) * C2438) *
               C51446 -
           (((C2621 + C2622) * C51168 +
             ((C117 * C752 + C51318 * C757) * C51248 +
              (C117 * C745 + C51318 * C753) * C118) *
                 C2434) *
                C2438 +
            (C2600 * C51168 + (C2620 + C2619) * C2434) * C2437 +
            (C2601 * C51168 + (C2618 + C2617) * C2434) * C2436) *
               C51234) *
              C291 +
          (((C2590 * C2434 + C2602 * C51168) * C2436 +
            (C2595 * C2434 + C2603 * C51168) * C2437 +
            ((C2622 + C2621) * C2434 + (C2623 + C2624) * C51168) * C2438) *
               C51234 -
           ((C2608 * C51168 + C2600 * C2434) * C2438 +
            (C352 * C51168 + C2601 * C2434) * C2437 +
            ((C181 + C180) * C51168 + (C179 + C178) * C2434) * C2436) *
               C51446) *
              C292 +
          (((C188 * C2434 + C189 * C51168) * C2436 +
            (C2602 * C2434 + (C344 + C343) * C51168) * C2437 +
            (C2603 * C2434 + (C670 + C671) * C51168) * C2438) *
               C51446 -
           ((((C117 * C746 + C51318 * C754) * C51248 +
              (C117 * C742 + C51318 * C747) * C118) *
                 C51168 +
             (C2624 + C2623) * C2434) *
                C2438 +
            ((C671 + C670) * C51168 + C2608 * C2434) * C2437 +
            (C351 * C51168 + C352 * C2434) * C2436) *
               C51234) *
              C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C118 +
             (C117 * C127 + C51318 * C140) * C51248) *
                C2434 +
            (C178 + C179) * C51168) *
               C2436 +
           ((C2617 + C2618) * C2434 + C2590 * C51168) * C2437 + C2969 * C2438) *
              C737 -
          (C3089 * C2438 + (C2600 * C51168 + (C2620 + C2619) * C2434) * C2437 +
           (C2601 * C51168 + (C2618 + C2617) * C2434) * C2436) *
              C738 +
          (C2969 * C2436 + ((C2971 + C2970) * C2434 + C2956 * C51168) * C2437 +
           ((C3090 + C3091) * C2434 + (C2972 + C2973) * C51168) * C2438) *
              C739 -
          ((((C117 * C3073 + C51318 * C3077) * C51248 +
             (C117 * C3071 + C51318 * C3074) * C118) *
                C51168 +
            ((C117 * C3075 + C51318 * C3078) * C51248 +
             (C117 * C3072 + C51318 * C3076) * C118) *
                C2434) *
               C2438 +
           ((C2973 + C2972) * C51168 + (C3091 + C3090) * C2434) * C2437 +
           C3089 * C2436) *
              C740) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C452 +
            (C117 * C127 + C51318 * C140) * C51448 -
            (C117 * C454 + C51318 * C460) * C453 -
            (C117 * C461 + C51318 * C472) * C51260) *
               C107 +
           (C479 + C480 - C513 - C514) * C108 + C523 * C109 + C524 * C110) *
              C51307 * C51218 * C291 +
          ((C513 - (C480 + C479) + C514) * C107 +
           (C515 - (C486 + C485) + C516) * C108 +
           (C517 - (C492 + C491) + C518) * C109 +
           (C519 - (C499 + C500) + C520) * C110) *
              C51307 * C51218 * C292 +
          (C523 * C107 + C524 * C108 + (C500 + C499 - C519 - C520) * C109 +
           (C176 * C452 + C177 * C51448 - (C117 * C459 + C51318 * C470) * C453 -
            (C117 * C471 + C51318 * C477) * C51260) *
               C110) *
              C51307 * C51218 * C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C452 +
            (C117 * C127 + C51318 * C140) * C51448 -
            (C117 * C454 + C51318 * C460) * C453 -
            (C117 * C461 + C51318 * C472) * C51260) *
               C107 +
           (C479 + C480 - C513 - C514) * C108 + C523 * C109 + C524 * C110) *
              C51307 * C622 +
          (((C117 * C856 + C51318 * C864) * C453 -
            ((C117 * C306 + C51318 * C315) * C51448 +
             (C117 * C297 + C51318 * C307) * C452) +
            (C117 * C865 + C51318 * C880) * C51260) *
               C107 +
           ((C117 * C857 + C51318 * C866) * C453 -
            (C339 * C51448 + C340 * C452) +
            (C117 * C867 + C51318 * C881) * C51260) *
               C108 +
           ((C117 * C858 + C51318 * C868) * C453 -
            (C337 * C51448 + C338 * C452) +
            (C117 * C869 + C51318 * C882) * C51260) *
               C109 +
           ((C117 * C859 + C51318 * C870) * C453 -
            (C335 * C51448 + C336 * C452) +
            (C117 * C871 + C51318 * C883) * C51260) *
               C110) *
              C51307 * C623 +
          (((C117 * C627 + C51318 * C632) * C452 +
            (C117 * C633 + C51318 * C642) * C51448 -
            (C117 * C860 + C51318 * C872) * C453 -
            (C117 * C873 + C51318 * C884) * C51260) *
               C107 +
           (C660 * C452 + C661 * C51448 - (C117 * C861 + C51318 * C874) * C453 -
            (C117 * C875 + C51318 * C885) * C51260) *
               C108 +
           (C662 * C452 + C663 * C51448 - (C117 * C862 + C51318 * C876) * C453 -
            (C117 * C877 + C51318 * C886) * C51260) *
               C109 +
           (C664 * C452 + C665 * C51448 - (C117 * C863 + C51318 * C878) * C453 -
            (C117 * C879 + C51318 * C887) * C51260) *
               C110) *
              C51307 * C624) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C452 +
             (C117 * C127 + C51318 * C140) * C51448 -
             (C117 * C454 + C51318 * C460) * C453 -
             (C117 * C461 + C51318 * C472) * C51260) *
                C2434 +
            (C479 + C480 - C513 - C514) * C51168) *
               C2436 +
           ((C2609 * C452 + C2610 * C51448 -
             (C117 * C856 + C51318 * C864) * C453 -
             (C117 * C865 + C51318 * C880) * C51260) *
                C2434 +
            (C1596 + C1595 - C1617 - C1618) * C51168) *
               C2437 +
           ((C2611 * C452 + C2612 * C51448 -
             (C117 * C860 + C51318 * C872) * C453 -
             (C117 * C873 + C51318 * C884) * C51260) *
                C2434 +
            (C2771 + C2772 - C2787 - C2788) * C51168) *
               C2438) *
              C51218 * C291 +
          (((C513 - (C480 + C479) + C514) * C2434 +
            (C515 - (C486 + C485) + C516) * C51168) *
               C2436 +
           ((C1617 - (C1595 + C1596) + C1618) * C2434 +
            (C1619 - (C1601 + C1602) + C1620) * C51168) *
               C2437 +
           ((C2787 - (C2772 + C2771) + C2788) * C2434 +
            (C2789 - (C2779 + C2780) + C2790) * C51168) *
               C2438) *
              C51218 * C292 +
          ((C523 * C2434 + C524 * C51168) * C2436 +
           ((C1602 + C1601 - C1619 - C1620) * C2434 +
            (C1608 + C1607 - C1621 - C1622) * C51168) *
               C2437 +
           ((C2780 + C2779 - C2789 - C2790) * C2434 +
            (C664 * C452 + C665 * C51448 -
             (C117 * C863 + C51318 * C878) * C453 -
             (C117 * C879 + C51318 * C887) * C51260) *
                C51168) *
               C2438) *
              C51218 * C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C452 +
             (C117 * C127 + C51318 * C140) * C51448 -
             (C117 * C454 + C51318 * C460) * C453 -
             (C117 * C461 + C51318 * C472) * C51260) *
                C2434 +
            (C479 + C480 - C513 - C514) * C51168) *
               C2436 +
           ((C3254 + C3255 - C3289 - C3290) * C2434 +
            (C1596 + C1595 - C1617 - C1618) * C51168) *
               C2437 +
           C3302 * C2438) *
              C622 +
          (((C3289 - (C3255 + C3254) + C3290) * C2434 +
            (C1617 - (C1595 + C1596) + C1618) * C51168) *
               C2436 +
           ((C3291 - (C3261 + C3260) + C3292) * C2434 +
            (C2787 - (C2772 + C2771) + C2788) * C51168) *
               C2437 +
           ((C3294 - (C3269 + C3270) + C3295) * C2434 +
            (C3296 - (C3275 + C3276) + C3297) * C51168) *
               C2438) *
              C623 +
          (C3302 * C2436 +
           ((C3270 + C3269 - C3294 - C3295) * C2434 +
            (C3276 + C3275 - C3296 - C3297) * C51168) *
               C2437 +
           ((C3087 * C452 + C3088 * C51448 -
             (C117 * C3239 + C51318 * C3245) * C453 -
             (C117 * C3246 + C51318 * C3251) * C51260) *
                C2434 +
            (C2966 * C452 + C2967 * C51448 -
             (C117 * C3240 + C51318 * C3247) * C453 -
             (C117 * C3248 + C51318 * C3252) * C51260) *
                C51168) *
               C2438) *
              C624) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C118 +
              (C117 * C127 + C51318 * C140) * C51248) *
                 C51434 +
             (C178 + C179) * C51168) *
                C51495 +
            ((C2617 + C2618) * C51434 + C2590 * C51168) * C51496 +
            C25101 * C24657) *
               C1350 -
           (C25203 * C24657 +
            (C2600 * C51168 + (C2620 + C2619) * C51434) * C51496 +
            (C2601 * C51168 + (C2618 + C2617) * C51434) * C51495) *
               C51234) *
              C51492 +
          (((C2590 * C51434 + C2602 * C51168) * C51495 +
            (C2595 * C51434 + C2603 * C51168) * C51496 +
            (C2956 * C51434 + (C2623 + C2624) * C51168) * C24657) *
               C51234 -
           (C25102 * C24657 + (C352 * C51168 + C2601 * C51434) * C51496 +
            ((C181 + C180) * C51168 + (C179 + C178) * C51434) * C51495) *
               C1350) *
              C51477 +
          (((C188 * C51434 + C189 * C51168) * C51495 +
            (C2602 * C51434 + C8409 * C51168) * C51496 +
            (C2603 * C51434 + (C670 + C671) * C51168) * C24657) *
               C1350 -
           ((((C117 * C746 + C51318 * C754) * C51248 +
              (C117 * C742 + C51318 * C747) * C118) *
                 C51168 +
             (C2624 + C2623) * C51434) *
                C24657 +
            ((C671 + C670) * C51168 + C2608 * C51434) * C51496 +
            (C351 * C51168 + C352 * C51434) * C51495) *
               C51234) *
              C1354)) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C118 +
              (C117 * C127 + C51318 * C140) * C51248) *
                 C51434 +
             (C178 + C179) * C51168) *
                C51495 +
            ((C2617 + C2618) * C51434 + C2590 * C51168) * C51496 +
            C25101 * C24657) *
               C51493 -
           (C25203 * C24657 +
            (C2600 * C51168 + (C2620 + C2619) * C51434) * C51496 +
            (C2601 * C51168 + (C2618 + C2617) * C51434) * C51495) *
               C51480 +
           (C25101 * C51495 + (C20335 * C51434 + C2956 * C51168) * C51496 +
            ((C3090 + C3091) * C51434 + (C2972 + C2973) * C51168) * C24657) *
               C1455) *
              C1456 +
          (((C2590 * C51434 + C2602 * C51168) * C51495 +
            (C2595 * C51434 + C2603 * C51168) * C51496 +
            (C2956 * C51434 + (C2623 + C2624) * C51168) * C24657) *
               C51480 -
           (C25102 * C24657 + (C352 * C51168 + C2601 * C51434) * C51496 +
            ((C181 + C180) * C51168 + (C179 + C178) * C51434) * C51495) *
               C51493 -
           ((((C117 * C2943 + C51318 * C2947) * C51248 +
              (C117 * C2938 + C51318 * C2944) * C118) *
                 C51168 +
             (C2973 + C2972) * C51434) *
                C24657 +
            ((C2624 + C2623) * C51168 + C2951 * C51434) * C51496 +
            C25102 * C51495) *
               C1455) *
              C51191)) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C452 +
              (C117 * C127 + C51318 * C140) * C51448 -
              (C117 * C454 + C51318 * C460) * C453 -
              (C117 * C461 + C51318 * C472) * C51260) *
                 C51434 +
             (C479 + C480 - C513 - C514) * C51168) *
                C51495 +
            ((C3254 + C3255 - C3289 - C3290) * C51434 + C4273 * C51168) *
                C51496 +
            C25352 * C24657) *
               C1350 +
           (((C3289 - (C3255 + C3254) + C3290) * C51434 + C4274 * C51168) *
                C51495 +
            ((C3291 - (C3261 + C3260) + C3292) * C51434 + C4275 * C51168) *
                C51496 +
            ((C3294 - (C3269 + C3270) + C3295) * C51434 +
             (C3296 - (C3275 + C3276) + C3297) * C51168) *
                C24657) *
               C51234) *
              C1456 +
          ((((C513 - (C480 + C479) + C514) * C51434 +
             (C515 - (C486 + C485) + C516) * C51168) *
                C51495 +
            (C4274 * C51434 + C9839 * C51168) * C51496 +
            (C4275 * C51434 + (C2789 - (C2779 + C2780) + C2790) * C51168) *
                C24657) *
               C1350 +
           ((C4273 * C51434 + C8558 * C51168) * C51495 +
            (C3293 * C51434 + (C2780 + C2779 - C2789 - C2790) * C51168) *
                C51496 +
            ((C3276 + C3275 - C3296 - C3297) * C51434 +
             (C2615 * C452 + C2616 * C51448 -
              (C117 * C4262 + C51318 * C4263) * C453 -
              (C117 * C4264 + C51318 * C4265) * C51260) *
                 C51168) *
                C24657) *
               C51234) *
              C51191)) /
        (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C1722 +
              (C117 * C127 + C51318 * C140) * C1720 -
              (C117 * C454 + C51318 * C460) * C1723 -
              (C117 * C461 + C51318 * C472) * C51260) *
                 C51434 +
             (C1725 + C1726 - C1727 - C1728) * C51168) *
                C51495 +
            ((C4624 + C4625 - C4626 - C4627) * C51434 + C4644 * C51168) *
                C51496 +
            (C5153 * C51434 + C4645 * C51168) * C24657) *
               C1350 +
           (((C4626 - (C4625 + C4624) + C4627) * C51434 + C4646 * C51168) *
                C51495 +
            ((C4631 - (C4630 + C4629) + C4632) * C51434 + C4647 * C51168) *
                C51496 +
            ((C5148 - (C5149 + C5150) + C5151) * C51434 +
             (C4636 - (C4637 + C4638) + C4639) * C51168) *
                C24657) *
               C51234) *
              C51439 +
          ((((C1727 - (C1726 + C1725) + C1728) * C51434 +
             (C1731 - (C1730 + C1729) + C1732) * C51168) *
                C51495 +
            (C4646 * C51434 + C10185 * C51168) * C51496 +
            (C4647 * C51434 + (C4426 - (C4427 + C4428) + C4429) * C51168) *
                C24657) *
               C1350 +
           ((C4644 * C51434 + C9988 * C51168) * C51495 +
            (C4645 * C51434 + (C4428 + C4427 - C4426 - C4429) * C51168) *
                C51496 +
            ((C4638 + C4637 - C4636 - C4639) * C51434 +
             (C2615 * C1722 + C2616 * C1720 -
              (C117 * C4262 + C51318 * C4263) * C1723 -
              (C117 * C4264 + C51318 * C4265) * C51260) *
                 C51168) *
                C24657) *
               C51234) *
              C51191)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C1722 +
             (C117 * C127 + C51318 * C140) * C1720 -
             (C117 * C454 + C51318 * C460) * C1723 -
             (C117 * C461 + C51318 * C472) * C51260) *
                C51434 +
            (C1725 + C1726 - C1727 - C1728) * C51168) *
               C51495 +
           ((C4624 + C4625 - C4626 - C4627) * C51434 + C4644 * C51168) *
               C51496 +
           C27057 * C24657) *
              C51493 +
          (((C4626 - (C4625 + C4624) + C4627) * C51434 + C4646 * C51168) *
               C51495 +
           ((C4631 - (C4630 + C4629) + C4632) * C51434 + C4647 * C51168) *
               C51496 +
           ((C5148 - (C5149 + C5150) + C5151) * C51434 +
            (C4636 - (C4637 + C4638) + C4639) * C51168) *
               C24657) *
              C51480 +
          (C27057 * C51495 +
           (C21706 * C51434 + (C4638 + C4637 - C4636 - C4639) * C51168) *
               C51496 +
           ((C21703 + C21702 - C21701 - C21704) * C51434 +
            (C2966 * C1722 + C2967 * C1720 -
             (C117 * C3240 + C51318 * C3247) * C1723 -
             (C117 * C3248 + C51318 * C3252) * C51260) *
                C51168) *
               C24657) *
              C1455) *
         C51186) /
        (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C1989 +
             (C117 * C127 + C51318 * C140) * C51494 -
             (C117 * C454 + C51318 * C460) * C1990 -
             (C117 * C461 + C51318 * C472) * C51483 +
             (C117 * C992 + C51318 * C997) * C1991 +
             (C117 * C998 + C51318 * C1007) * C1988) *
                C51434 +
            (C1993 + C1994 - C1995 - C1996 + C1997 + C1998) * C51168) *
               C51495 +
           ((C5302 + C5303 - C5304 - C5305 + C5306 + C5307) * C51434 +
            (C4794 + C4795 - C4796 - C4797 + C4798 + C4799) * C51168) *
               C51496 +
           ((C5308 + C5309 - C5310 - C5311 + C5312 + C5313) * C51434 +
            (C4800 + C4801 - C4802 - C4803 + C4804 + C4805) * C51168) *
               C24657) *
              C1350 +
          (((C5304 - (C5303 + C5302) + C5305 - C5306 - C5307) * C51434 +
            (C4796 - (C4795 + C4794) + C4797 - C4798 - C4799) * C51168) *
               C51495 +
           ((C5310 - (C5309 + C5308) + C5311 - C5312 - C5313) * C51434 +
            (C4802 - (C4801 + C4800) + C4803 - C4804 - C4805) * C51168) *
               C51496 +
           ((C21808 - (C21807 + C21806) + C21809 - C21810 - C21811) * C51434 +
            (C3287 * C1990 - (C2613 * C51494 + C2614 * C1989) + C3288 * C51483 -
             (C117 * C3631 + C51318 * C3634) * C1991 -
             (C117 * C3635 + C51318 * C3637) * C1988) *
                C51168) *
               C24657) *
              C51234) *
         C51186) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C118 +
              (C117 * C127 + C51318 * C140) * C51248) *
                 C51434 +
             (C178 + C179) * C51168) *
                C51495 +
            ((C2617 + C2618) * C51434 + C2590 * C51168) * C51496 +
            C25101 * C24657) *
               C622 -
           ((C2951 * C51168 + C3081 * C51434) * C24657 +
            (C2600 * C51168 + (C2620 + C2619) * C51434) * C51496 +
            (C2601 * C51168 + (C2618 + C2617) * C51434) * C51495) *
               C623 +
           (C25101 * C51495 + (C20335 * C51434 + C2956 * C51168) * C51496 +
            ((C3090 + C3091) * C51434 + (C2972 + C2973) * C51168) * C24657) *
               C624) *
              C51439 +
          (((C2590 * C51434 + C2602 * C51168) * C51495 +
            (C2595 * C51434 + C2603 * C51168) * C51496 +
            (C2956 * C51434 + (C2623 + C2624) * C51168) * C24657) *
               C623 -
           (C25102 * C24657 + (C352 * C51168 + C2601 * C51434) * C51496 +
            ((C181 + C180) * C51168 + (C179 + C178) * C51434) * C51495) *
               C622 -
           ((((C117 * C2943 + C51318 * C2947) * C51248 +
              (C117 * C2938 + C51318 * C2944) * C118) *
                 C51168 +
             (C2973 + C2972) * C51434) *
                C24657 +
            ((C2624 + C2623) * C51168 + C2951 * C51434) * C51496 +
            C25102 * C51495) *
               C624) *
              C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C118 +
             (C117 * C127 + C51318 * C140) * C51248) *
                C51434 +
            (C178 + C179) * C51168) *
               C51495 +
           ((C2617 + C2618) * C51434 + C2590 * C51168) * C51496 +
           (C2949 * C51434 + C2595 * C51168) * C24657) *
              C51218 * C113 -
          ((C2608 * C51168 + C2600 * C51434) * C24657 +
           (C352 * C51168 + C2601 * C51434) * C51496 +
           ((C181 + C180) * C51168 + (C179 + C178) * C51434) * C51495) *
              C51218 * C114 +
          ((C188 * C51434 + C189 * C51168) * C51495 +
           (C2602 * C51434 + C8409 * C51168) * C51496 +
           (C2603 * C51434 + (C670 + C671) * C51168) * C24657) *
              C51218 * C115 -
          ((((C117 * C640 + C51318 * C646) * C51248 +
             (C117 * C631 + C51318 * C641) * C118) *
                C51168 +
            (C671 + C670) * C51434) *
               C24657 +
           ((C350 + C349) * C51168 + C351 * C51434) * C51496 +
           (C190 * C51168 + C191 * C51434) * C51495) *
              C51218 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C989 +
             (C117 * C127 + C51318 * C140) * C986 -
             (C117 * C454 + C51318 * C460) * C990 -
             (C117 * C461 + C51318 * C472) * C987 +
             (C117 * C992 + C51318 * C997) * C991 +
             (C117 * C998 + C51318 * C1007) * C988) *
                C51434 +
            (C1013 + C1014 - C1015 - C1016 + C1043 + C1044) * C51168) *
               C51495 +
           ((C3639 + C3640 - C3641 - C3642 + C3659 + C3660) * C51434 +
            (C3461 + C3462 - C3463 - C3464 + C3481 + C3482) * C51168) *
               C51496 +
           ((C3647 + C3648 - C3649 - C3650 + C3661 + C3662) * C51434 +
            (C3469 + C3470 - C3471 - C3472 + C3483 + C3484) * C51168) *
               C24657) *
              C51218 * C51439 +
          (((C1015 - (C1014 + C1013) + C1016 - C1043 - C1044) * C51434 +
            (C1023 - (C1022 + C1021) + C1024 - C1045 - C1046) * C51168) *
               C51495 +
           ((C3463 - (C3462 + C3461) + C3464 - C3481 - C3482) * C51434 +
            (C9097 - (C9096 + C9095) + C9098 - C9105 - C9106) * C51168) *
               C51496 +
           ((C3471 - (C3470 + C3469) + C3472 - C3483 - C3484) * C51434 +
            (C2785 * C990 - (C663 * C986 + C662 * C989) + C2786 * C987 -
             (C117 * C3450 + C51318 * C3455) * C991 -
             (C117 * C3456 + C51318 * C3459) * C988) *
                C51168) *
               C24657) *
              C51218 * C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C118 +
             (C117 * C127 + C51318 * C140) * C51248) *
                C51434 +
            (C178 + C179) * C51168) *
               C51495 +
           ((C2617 + C2618) * C51434 + C2590 * C51168) * C51496 +
           C25101 * C24657) *
              C737 -
          (C25203 * C24657 +
           (C2600 * C51168 + (C2620 + C2619) * C51434) * C51496 +
           (C2601 * C51168 + (C2618 + C2617) * C51434) * C51495) *
              C738 +
          (C25101 * C51495 + (C20335 * C51434 + C2956 * C51168) * C51496 +
           ((C3090 + C3091) * C51434 + (C2972 + C2973) * C51168) * C24657) *
              C739 -
          ((((C117 * C3073 + C51318 * C3077) * C51248 +
             (C117 * C3071 + C51318 * C3074) * C118) *
                C51168 +
            (C20419 + C20418) * C51434) *
               C24657 +
           ((C2973 + C2972) * C51168 + C20409 * C51434) * C51496 +
           C25203 * C51495) *
              C740) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C118 +
              (C117 * C127 + C51318 * C140) * C51248) *
                 C51434 +
             (C178 + C179) * C51168) *
                C51495 +
            ((C2617 + C2618) * C51434 + C2590 * C51168) * C51496 +
            (C2949 * C51434 + C2595 * C51168) * C24657) *
               C51446 -
           ((C2951 * C51168 + C3081 * C51434) * C24657 +
            (C2600 * C51168 + (C2620 + C2619) * C51434) * C51496 +
            (C2601 * C51168 + (C2618 + C2617) * C51434) * C51495) *
               C51234) *
              C291 +
          (((C2590 * C51434 + C2602 * C51168) * C51495 +
            (C2595 * C51434 + C2603 * C51168) * C51496 +
            (C2956 * C51434 + (C2623 + C2624) * C51168) * C24657) *
               C51234 -
           ((C2608 * C51168 + C2600 * C51434) * C24657 +
            (C352 * C51168 + C2601 * C51434) * C51496 +
            ((C181 + C180) * C51168 + (C179 + C178) * C51434) * C51495) *
               C51446) *
              C292 +
          (((C188 * C51434 + C189 * C51168) * C51495 +
            (C2602 * C51434 + C8409 * C51168) * C51496 +
            (C2603 * C51434 + (C670 + C671) * C51168) * C24657) *
               C51446 -
           ((((C117 * C746 + C51318 * C754) * C51248 +
              (C117 * C742 + C51318 * C747) * C118) *
                 C51168 +
             (C2624 + C2623) * C51434) *
                C24657 +
            ((C671 + C670) * C51168 + C2608 * C51434) * C51496 +
            (C351 * C51168 + C352 * C51434) * C51495) *
               C51234) *
              C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C989 +
             (C117 * C127 + C51318 * C140) * C986 -
             (C117 * C454 + C51318 * C460) * C990 -
             (C117 * C461 + C51318 * C472) * C987 +
             (C117 * C992 + C51318 * C997) * C991 +
             (C117 * C998 + C51318 * C1007) * C988) *
                C51434 +
            (C1013 + C1014 - C1015 - C1016 + C1043 + C1044) * C51168) *
               C51495 +
           ((C3639 + C3640 - C3641 - C3642 + C3659 + C3660) * C51434 +
            (C3461 + C3462 - C3463 - C3464 + C3481 + C3482) * C51168) *
               C51496 +
           ((C3647 + C3648 - C3649 - C3650 + C3661 + C3662) * C51434 +
            (C3469 + C3470 - C3471 - C3472 + C3483 + C3484) * C51168) *
               C24657) *
              C51446 +
          (((C3641 - (C3640 + C3639) + C3642 - C3659 - C3660) * C51434 +
            (C3463 - (C3462 + C3461) + C3464 - C3481 - C3482) * C51168) *
               C51495 +
           ((C3649 - (C3648 + C3647) + C3650 - C3661 - C3662) * C51434 +
            (C3471 - (C3470 + C3469) + C3472 - C3483 - C3484) * C51168) *
               C51496 +
           ((C20739 - (C20738 + C20737) + C20740 - C20747 - C20748) * C51434 +
            (C3287 * C990 - (C2613 * C986 + C2614 * C989) + C3288 * C987 -
             (C117 * C3631 + C51318 * C3634) * C991 -
             (C117 * C3635 + C51318 * C3637) * C988) *
                C51168) *
               C24657) *
              C51234) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C452 +
             (C117 * C127 + C51318 * C140) * C51448 -
             (C117 * C454 + C51318 * C460) * C453 -
             (C117 * C461 + C51318 * C472) * C51260) *
                C51434 +
            (C479 + C480 - C513 - C514) * C51168) *
               C51495 +
           ((C3254 + C3255 - C3289 - C3290) * C51434 + C4273 * C51168) *
               C51496 +
           C25352 * C24657) *
              C622 +
          (((C3289 - (C3255 + C3254) + C3290) * C51434 + C4274 * C51168) *
               C51495 +
           ((C3291 - (C3261 + C3260) + C3292) * C51434 + C4275 * C51168) *
               C51496 +
           ((C3294 - (C3269 + C3270) + C3295) * C51434 +
            (C3296 - (C3275 + C3276) + C3297) * C51168) *
               C24657) *
              C623 +
          (C25352 * C51495 +
           (C20533 * C51434 + (C3276 + C3275 - C3296 - C3297) * C51168) *
               C51496 +
           ((C20527 + C20526 - C20534 - C20535) * C51434 +
            (C2966 * C452 + C2967 * C51448 -
             (C117 * C3240 + C51318 * C3247) * C453 -
             (C117 * C3248 + C51318 * C3252) * C51260) *
                C51168) *
               C24657) *
              C624) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C452 +
             (C117 * C127 + C51318 * C140) * C51448 -
             (C117 * C454 + C51318 * C460) * C453 -
             (C117 * C461 + C51318 * C472) * C51260) *
                C51434 +
            (C479 + C480 - C513 - C514) * C51168) *
               C51495 +
           ((C3254 + C3255 - C3289 - C3290) * C51434 + C4273 * C51168) *
               C51496 +
           (C3300 * C51434 + C3293 * C51168) * C24657) *
              C51218 * C291 +
          (((C513 - (C480 + C479) + C514) * C51434 +
            (C515 - (C486 + C485) + C516) * C51168) *
               C51495 +
           (C4274 * C51434 + C9839 * C51168) * C51496 +
           (C4275 * C51434 + (C2789 - (C2779 + C2780) + C2790) * C51168) *
               C24657) *
              C51218 * C292 +
          ((C523 * C51434 + C524 * C51168) * C51495 +
           (C8558 * C51434 + (C1608 + C1607 - C1621 - C1622) * C51168) *
               C51496 +
           ((C2780 + C2779 - C2789 - C2790) * C51434 +
            (C664 * C452 + C665 * C51448 -
             (C117 * C863 + C51318 * C878) * C453 -
             (C117 * C879 + C51318 * C887) * C51260) *
                C51168) *
               C24657) *
              C51218 * C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C1232 +
            (C117 * C127 + C51318 * C140) * C1228 -
            (C117 * C454 + C51318 * C460) * C1233 -
            (C117 * C461 + C51318 * C472) * C1229 +
            (C117 * C992 + C51318 * C997) * C1234 +
            (C117 * C998 + C51318 * C1007) * C1230 -
            (C117 * C1236 + C51318 * C1240) * C1235 -
            (C117 * C1241 + C51318 * C1248) * C1231) *
               C51434 +
           (C168 * C1232 + C169 * C1228 - C503 * C1233 - C504 * C1229 +
            C1037 * C1234 + C1038 * C1230 -
            (C117 * C1237 + C51318 * C1242) * C1235 -
            (C117 * C1243 + C51318 * C1249) * C1231) *
               C51168) *
              C51495 +
          ((C2609 * C1232 + C2610 * C1228 - C3279 * C1233 - C3280 * C1229 +
            C3655 * C1234 + C3656 * C1230 -
            (C117 * C3760 + C51318 * C3764) * C1235 -
            (C117 * C3765 + C51318 * C3772) * C1231) *
               C51434 +
           (C340 * C1232 + C339 * C1228 - C1611 * C1233 - C1612 * C1229 +
            C3477 * C1234 + C3478 * C1230 -
            (C117 * C3761 + C51318 * C3766) * C1235 -
            (C117 * C3767 + C51318 * C3773) * C1231) *
               C51168) *
              C51496 +
          ((C2611 * C1232 + C2612 * C1228 - C3282 * C1233 - C3283 * C1229 +
            C3657 * C1234 + C3658 * C1230 -
            (C117 * C3762 + C51318 * C3768) * C1235 -
            (C117 * C3769 + C51318 * C3774) * C1231) *
               C51434 +
           (C660 * C1232 + C661 * C1228 - C2783 * C1233 - C2784 * C1229 +
            C3479 * C1234 + C3480 * C1230 -
            (C117 * C3763 + C51318 * C3770) * C1235 -
            (C117 * C3771 + C51318 * C3775) * C1231) *
               C51168) *
              C24657) *
         C51218 * C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C1722 +
             (C117 * C127 + C51318 * C140) * C1720 -
             (C117 * C454 + C51318 * C460) * C1723 -
             (C117 * C461 + C51318 * C472) * C51260) *
                C51434 +
            (C1725 + C1726 - C1727 - C1728) * C51168) *
               C51495 +
           ((C4624 + C4625 - C4626 - C4627) * C51434 + C4644 * C51168) *
               C51496 +
           (C5153 * C51434 + C4645 * C51168) * C24657) *
              C51218 * C51492 +
          (((C1727 - (C1726 + C1725) + C1728) * C51434 +
            (C1731 - (C1730 + C1729) + C1732) * C51168) *
               C51495 +
           (C4646 * C51434 + C10185 * C51168) * C51496 +
           (C4647 * C51434 + (C4426 - (C4427 + C4428) + C4429) * C51168) *
               C24657) *
              C51218 * C51477 +
          ((C1745 * C51434 + C1746 * C51168) * C51495 +
           (C9988 * C51434 + (C1887 + C1886 - C1885 - C1888) * C51168) *
               C51496 +
           ((C4428 + C4427 - C4426 - C4429) * C51434 +
            (C664 * C1722 + C665 * C1720 -
             (C117 * C863 + C51318 * C878) * C1723 -
             (C117 * C879 + C51318 * C887) * C51260) *
                C51168) *
               C24657) *
              C51218 * C1354)) /
        (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C1722 +
              (C117 * C127 + C51318 * C140) * C1720 -
              (C117 * C454 + C51318 * C460) * C1723 -
              (C117 * C461 + C51318 * C472) * C51260) *
                 C51434 +
             (C1725 + C1726 - C1727 - C1728) * C51168) *
                C51495 +
            ((C4624 + C4625 - C4626 - C4627) * C51434 + C4644 * C51168) *
                C51496 +
            (C5153 * C51434 + C4645 * C51168) * C24657) *
               C51446 +
           (((C4626 - (C4625 + C4624) + C4627) * C51434 + C4646 * C51168) *
                C51495 +
            ((C4631 - (C4630 + C4629) + C4632) * C51434 + C4647 * C51168) *
                C51496 +
            ((C5148 - (C5149 + C5150) + C5151) * C51434 +
             (C4636 - (C4637 + C4638) + C4639) * C51168) *
                C24657) *
               C51234) *
              C1456 +
          ((((C1727 - (C1726 + C1725) + C1728) * C51434 +
             (C1731 - (C1730 + C1729) + C1732) * C51168) *
                C51495 +
            (C4646 * C51434 + C10185 * C51168) * C51496 +
            (C4647 * C51434 + (C4426 - (C4427 + C4428) + C4429) * C51168) *
                C24657) *
               C51446 +
           ((C4644 * C51434 + C9988 * C51168) * C51495 +
            (C4645 * C51434 + (C4428 + C4427 - C4426 - C4429) * C51168) *
                C51496 +
            ((C4638 + C4637 - C4636 - C4639) * C51434 +
             (C2615 * C1722 + C2616 * C1720 -
              (C117 * C4262 + C51318 * C4263) * C1723 -
              (C117 * C4264 + C51318 * C4265) * C51260) *
                 C51168) *
                C24657) *
               C51234) *
              C51191)) /
        (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C1989 +
             (C117 * C127 + C51318 * C140) * C51494 -
             (C117 * C454 + C51318 * C460) * C1990 -
             (C117 * C461 + C51318 * C472) * C51483 +
             (C117 * C992 + C51318 * C997) * C1991 +
             (C117 * C998 + C51318 * C1007) * C1988) *
                C51434 +
            (C1993 + C1994 - C1995 - C1996 + C1997 + C1998) * C51168) *
               C51495 +
           ((C5302 + C5303 - C5304 - C5305 + C5306 + C5307) * C51434 +
            (C4794 + C4795 - C4796 - C4797 + C4798 + C4799) * C51168) *
               C51496 +
           ((C5308 + C5309 - C5310 - C5311 + C5312 + C5313) * C51434 +
            (C4800 + C4801 - C4802 - C4803 + C4804 + C4805) * C51168) *
               C24657) *
              C51218 * C1456 +
          (((C1995 - (C1994 + C1993) + C1996 - C1997 - C1998) * C51434 +
            (C2001 - (C2000 + C1999) + C2002 - C2003 - C2004) * C51168) *
               C51495 +
           ((C4796 - (C4795 + C4794) + C4797 - C4798 - C4799) * C51434 +
            (C10334 - (C10333 + C10332) + C10335 - C10336 - C10337) * C51168) *
               C51496 +
           ((C4802 - (C4801 + C4800) + C4803 - C4804 - C4805) * C51434 +
            (C2785 * C1990 - (C663 * C51494 + C662 * C1989) + C2786 * C51483 -
             (C117 * C3450 + C51318 * C3455) * C1991 -
             (C117 * C3456 + C51318 * C3459) * C1988) *
                C51168) *
               C24657) *
              C51218 * C51191)) /
        (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C118 +
             (C117 * C127 + C51318 * C140) * C51248) *
                C51434 +
            (C178 + C179) * C51168) *
               C51495 +
           ((C2617 + C2618) * C51434 + C2590 * C51168) * C51496 +
           (C2949 * C51434 + C2595 * C51168) * C24657) *
              C51218 * C113 -
          ((C2608 * C51168 + C2600 * C51434) * C24657 +
           (C352 * C51168 + C2601 * C51434) * C51496 +
           ((C181 + C180) * C51168 + (C179 + C178) * C51434) * C51495) *
              C51218 * C114 +
          ((C188 * C51434 + C189 * C51168) * C51495 +
           (C2602 * C51434 + C8409 * C51168) * C51496 +
           (C2603 * C51434 + (C670 + C671) * C51168) * C24657) *
              C51218 * C115 -
          ((((C117 * C640 + C51318 * C646) * C51248 +
             (C117 * C631 + C51318 * C641) * C118) *
                C51168 +
            (C671 + C670) * C51434) *
               C24657 +
           ((C350 + C349) * C51168 + C351 * C51434) * C51496 +
           (C190 * C51168 + C191 * C51434) * C51495) *
              C51218 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C118 +
              (C117 * C127 + C51318 * C140) * C51248) *
                 C51434 +
             (C178 + C179) * C51168) *
                C51495 +
            ((C2617 + C2618) * C51434 + C2590 * C51168) * C51496 +
            C25101 * C24657) *
               C622 -
           ((C2951 * C51168 + C3081 * C51434) * C24657 +
            (C2600 * C51168 + (C2620 + C2619) * C51434) * C51496 +
            (C2601 * C51168 + (C2618 + C2617) * C51434) * C51495) *
               C623 +
           (C25101 * C51495 + (C20335 * C51434 + C2956 * C51168) * C51496 +
            ((C3090 + C3091) * C51434 + (C2972 + C2973) * C51168) * C24657) *
               C624) *
              C51439 +
          (((C2590 * C51434 + C2602 * C51168) * C51495 +
            (C2595 * C51434 + C2603 * C51168) * C51496 +
            (C2956 * C51434 + (C2623 + C2624) * C51168) * C24657) *
               C623 -
           (C25102 * C24657 + (C352 * C51168 + C2601 * C51434) * C51496 +
            ((C181 + C180) * C51168 + (C179 + C178) * C51434) * C51495) *
               C622 -
           ((((C117 * C2943 + C51318 * C2947) * C51248 +
              (C117 * C2938 + C51318 * C2944) * C118) *
                 C51168 +
             (C2973 + C2972) * C51434) *
                C24657 +
            ((C2624 + C2623) * C51168 + C2951 * C51434) * C51496 +
            C25102 * C51495) *
               C624) *
              C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C118 +
              (C117 * C127 + C51318 * C140) * C51248) *
                 C51434 +
             (C178 + C179) * C51168) *
                C51495 +
            ((C2617 + C2618) * C51434 + C2590 * C51168) * C51496 +
            (C2949 * C51434 + C2595 * C51168) * C24657) *
               C51446 -
           ((C2951 * C51168 + C3081 * C51434) * C24657 +
            (C2600 * C51168 + (C2620 + C2619) * C51434) * C51496 +
            (C2601 * C51168 + (C2618 + C2617) * C51434) * C51495) *
               C51234) *
              C291 +
          (((C2590 * C51434 + C2602 * C51168) * C51495 +
            (C2595 * C51434 + C2603 * C51168) * C51496 +
            (C2956 * C51434 + (C2623 + C2624) * C51168) * C24657) *
               C51234 -
           ((C2608 * C51168 + C2600 * C51434) * C24657 +
            (C352 * C51168 + C2601 * C51434) * C51496 +
            ((C181 + C180) * C51168 + (C179 + C178) * C51434) * C51495) *
               C51446) *
              C292 +
          (((C188 * C51434 + C189 * C51168) * C51495 +
            (C2602 * C51434 + C8409 * C51168) * C51496 +
            (C2603 * C51434 + (C670 + C671) * C51168) * C24657) *
               C51446 -
           ((((C117 * C746 + C51318 * C754) * C51248 +
              (C117 * C742 + C51318 * C747) * C118) *
                 C51168 +
             (C2624 + C2623) * C51434) *
                C24657 +
            ((C671 + C670) * C51168 + C2608 * C51434) * C51496 +
            (C351 * C51168 + C352 * C51434) * C51495) *
               C51234) *
              C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C118 +
             (C117 * C127 + C51318 * C140) * C51248) *
                C51434 +
            (C178 + C179) * C51168) *
               C51495 +
           ((C2617 + C2618) * C51434 + C2590 * C51168) * C51496 +
           C25101 * C24657) *
              C737 -
          (C25203 * C24657 +
           (C2600 * C51168 + (C2620 + C2619) * C51434) * C51496 +
           (C2601 * C51168 + (C2618 + C2617) * C51434) * C51495) *
              C738 +
          (C25101 * C51495 + (C20335 * C51434 + C2956 * C51168) * C51496 +
           ((C3090 + C3091) * C51434 + (C2972 + C2973) * C51168) * C24657) *
              C739 -
          ((((C117 * C3073 + C51318 * C3077) * C51248 +
             (C117 * C3071 + C51318 * C3074) * C118) *
                C51168 +
            (C20419 + C20418) * C51434) *
               C24657 +
           ((C2973 + C2972) * C51168 + C20409 * C51434) * C51496 +
           C25203 * C51495) *
              C740) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C452 +
             (C117 * C127 + C51318 * C140) * C51448 -
             (C117 * C454 + C51318 * C460) * C453 -
             (C117 * C461 + C51318 * C472) * C51260) *
                C51434 +
            (C479 + C480 - C513 - C514) * C51168) *
               C51495 +
           ((C3254 + C3255 - C3289 - C3290) * C51434 + C4273 * C51168) *
               C51496 +
           (C3300 * C51434 + C3293 * C51168) * C24657) *
              C51218 * C291 +
          (((C513 - (C480 + C479) + C514) * C51434 +
            (C515 - (C486 + C485) + C516) * C51168) *
               C51495 +
           (C4274 * C51434 + C9839 * C51168) * C51496 +
           (C4275 * C51434 + (C2789 - (C2779 + C2780) + C2790) * C51168) *
               C24657) *
              C51218 * C292 +
          ((C523 * C51434 + C524 * C51168) * C51495 +
           (C8558 * C51434 + (C1608 + C1607 - C1621 - C1622) * C51168) *
               C51496 +
           ((C2780 + C2779 - C2789 - C2790) * C51434 +
            (C664 * C452 + C665 * C51448 -
             (C117 * C863 + C51318 * C878) * C453 -
             (C117 * C879 + C51318 * C887) * C51260) *
                C51168) *
               C24657) *
              C51218 * C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C452 +
             (C117 * C127 + C51318 * C140) * C51448 -
             (C117 * C454 + C51318 * C460) * C453 -
             (C117 * C461 + C51318 * C472) * C51260) *
                C51434 +
            (C479 + C480 - C513 - C514) * C51168) *
               C51495 +
           ((C3254 + C3255 - C3289 - C3290) * C51434 + C4273 * C51168) *
               C51496 +
           C25352 * C24657) *
              C622 +
          (((C3289 - (C3255 + C3254) + C3290) * C51434 + C4274 * C51168) *
               C51495 +
           ((C3291 - (C3261 + C3260) + C3292) * C51434 + C4275 * C51168) *
               C51496 +
           ((C3294 - (C3269 + C3270) + C3295) * C51434 +
            (C3296 - (C3275 + C3276) + C3297) * C51168) *
               C24657) *
              C623 +
          (C25352 * C51495 +
           (C20533 * C51434 + (C3276 + C3275 - C3296 - C3297) * C51168) *
               C51496 +
           ((C20527 + C20526 - C20534 - C20535) * C51434 +
            (C2966 * C452 + C2967 * C51448 -
             (C117 * C3240 + C51318 * C3247) * C453 -
             (C117 * C3248 + C51318 * C3252) * C51260) *
                C51168) *
               C24657) *
              C624) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                 C118 +
             (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                 C51248) *
                C51163 * C51495 +
            ((C14017 + C14018) * C118 + (C14019 + C14020) * C51248) * C51163 *
                C51496 +
            C31238 * C24657) *
               C1350 -
           (C31354 * C24657 +
            ((C14440 + C14441) * C51248 + (C14442 + C14443) * C118) * C51163 *
                C51496 +
            ((C14020 + C14019) * C51248 + (C14018 + C14017) * C118) * C51163 *
                C51495) *
               C51234) *
              C51492 +
          ((C14027 * C51163 * C51495 + C14451 * C51163 * C51496 +
            ((C14446 + C14447) * C118 + (C14448 + C14449) * C51248) * C51163 *
                C24657) *
               C51234 -
           (C31234 * C24657 + C14028 * C51163 * C51496 +
            ((C10961 + C10960) * C51248 + (C10959 + C10958) * C118) * C51163 *
                C51495) *
               C1350) *
              C51477 +
          ((C10982 * C51163 * C51495 + C14029 * C51163 * C51496 +
            ((C11528 + C11529) * C118 + (C11530 + C11531) * C51248) * C51163 *
                C24657) *
               C1350 -
           (((C10924 * C4264 + C51382 * C4265 + C10923 * C748 + C51463 * C755) *
                 C51248 +
             (C10924 * C4262 + C51382 * C4263 + C10923 * C743 + C51463 * C749) *
                 C118) *
                C51163 * C24657 +
            ((C11531 + C11530) * C51248 + (C11529 + C11528) * C118) * C51163 *
                C51496 +
            C11170 * C51163 * C51495) *
               C51234) *
              C1354)) /
        (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                 C118 +
             (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                 C51248) *
                C51163 * C51495 +
            ((C14017 + C14018) * C118 + (C14019 + C14020) * C51248) * C51163 *
                C51496 +
            C31238 * C24657) *
               C51493 -
           (C31354 * C24657 +
            ((C14440 + C14441) * C51248 + (C14442 + C14443) * C118) * C51163 *
                C51496 +
            ((C14020 + C14019) * C51248 + (C14018 + C14017) * C118) * C51163 *
                C51495) *
               C51480 +
           (C31238 * C51495 +
            ((C14590 + C14591) * C118 + (C14592 + C14593) * C51248) * C51163 *
                C51496 +
            ((C31349 + C31350) * C118 + (C31351 + C31352) * C51248) * C51163 *
                C24657) *
               C1455) *
              C1456 +
          ((C14027 * C51163 * C51495 + C14451 * C51163 * C51496 +
            ((C14446 + C14447) * C118 + (C14448 + C14449) * C51248) * C51163 *
                C24657) *
               C51480 -
           (C31234 * C24657 + C14028 * C51163 * C51496 +
            ((C10961 + C10960) * C51248 + (C10959 + C10958) * C118) * C51163 *
                C51495) *
               C51493 -
           (((C10924 * C3248 + C51382 * C3252 + C10923 * C2942 +
              C51463 * C2946) *
                 C51248 +
             (C10924 * C3240 + C51382 * C3247 + C10923 * C2937 +
              C51463 * C2941) *
                 C118) *
                C51163 * C24657 +
            ((C14449 + C14448) * C51248 + (C14447 + C14446) * C118) * C51163 *
                C51496 +
            C31234 * C51495) *
               C1455) *
              C51191)) /
        (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                 C452 +
             (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                 C51448 -
             (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                 C453 -
             (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                 C51260) *
                C51163 * C51495 +
            ((C14017 + C14018) * C452 + (C14019 + C14020) * C51448 -
             (C14812 + C14813) * C453 - (C14814 + C14815) * C51260) *
                C51163 * C51496 +
            C31522 * C24657) *
               C1350 +
           (((C14813 + C14812) * C453 -
             ((C14020 + C14019) * C51448 + (C14018 + C14017) * C452) +
             (C14815 + C14814) * C51260) *
                C51163 * C51495 +
            ((C14816 + C14817) * C453 -
             ((C14440 + C14441) * C51448 + (C14442 + C14443) * C452) +
             (C14818 + C14819) * C51260) *
                C51163 * C51496 +
            ((C31516 + C31517) * C453 - (C31337 * C51448 + C31338 * C452) +
             (C31518 + C31519) * C51260) *
                C51163 * C24657) *
               C51234) *
              C1456 +
          ((((C11344 + C11343) * C453 -
             ((C10961 + C10960) * C51448 + (C10959 + C10958) * C452) +
             (C11346 + C11345) * C51260) *
                C51163 * C51495 +
            C16029 * C51163 * C51496 +
            ((C14820 + C14821) * C453 - (C14418 * C51448 + C14419 * C452) +
             (C14822 + C14823) * C51260) *
                C51163 * C24657) *
               C1350 +
           (C16028 * C51163 * C51495 +
            (C14428 * C452 + C14429 * C51448 - (C14821 + C14820) * C453 -
             (C14823 + C14822) * C51260) *
                C51163 * C51496 +
            ((C14446 + C14447) * C452 + (C14448 + C14449) * C51448 -
             (C10924 * C3631 + C51382 * C3634 + C10923 * C3238 +
              C51463 * C3243) *
                 C453 -
             (C10924 * C3635 + C51382 * C3637 + C10923 * C3244 +
              C51463 * C3250) *
                 C51260) *
                C51163 * C24657) *
               C51234) *
              C51191)) /
        (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                 C1722 +
             (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                 C1720 -
             (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                 C1723 -
             (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                 C51260) *
                C51163 * C51495 +
            ((C14017 + C14018) * C1722 + (C14019 + C14020) * C1720 -
             (C14812 + C14813) * C1723 - (C14814 + C14815) * C51260) *
                C51163 * C51496 +
            (C31232 * C1722 + C31233 * C1720 - C31503 * C1723 -
             C31504 * C51260) *
                C51163 * C24657) *
               C1350 +
           (((C14813 + C14812) * C1723 -
             ((C14020 + C14019) * C1720 + (C14018 + C14017) * C1722) +
             (C14815 + C14814) * C51260) *
                C51163 * C51495 +
            ((C14816 + C14817) * C1723 -
             ((C14440 + C14441) * C1720 + (C14442 + C14443) * C1722) +
             (C14818 + C14819) * C51260) *
                C51163 * C51496 +
            ((C31516 + C31517) * C1723 - (C31337 * C1720 + C31338 * C1722) +
             (C31518 + C31519) * C51260) *
                C51163 * C24657) *
               C51234) *
              C51439 +
          ((((C11344 + C11343) * C1723 -
             ((C10961 + C10960) * C1720 + (C10959 + C10958) * C1722) +
             (C11346 + C11345) * C51260) *
                C51163 * C51495 +
            C16495 * C51163 * C51496 +
            ((C14820 + C14821) * C1723 - (C14418 * C1720 + C14419 * C1722) +
             (C14822 + C14823) * C51260) *
                C51163 * C24657) *
               C1350 +
           (C16494 * C51163 * C51495 +
            (C14428 * C1722 + C14429 * C1720 - (C14821 + C14820) * C1723 -
             (C14823 + C14822) * C51260) *
                C51163 * C51496 +
            ((C14446 + C14447) * C1722 + (C14448 + C14449) * C1720 -
             (C10924 * C3631 + C51382 * C3634 + C10923 * C3238 +
              C51463 * C3243) *
                 C1723 -
             (C10924 * C3635 + C51382 * C3637 + C10923 * C3244 +
              C51463 * C3250) *
                 C51260) *
                C51163 * C24657) *
               C51234) *
              C51191)) /
        (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                C1722 +
            (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                C1720 -
            (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                C1723 -
            (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                C51260) *
               C51163 * C51495 +
           ((C14017 + C14018) * C1722 + (C14019 + C14020) * C1720 -
            (C14812 + C14813) * C1723 - (C14814 + C14815) * C51260) *
               C51163 * C51496 +
           C33244 * C24657) *
              C51493 +
          (((C14813 + C14812) * C1723 -
            ((C14020 + C14019) * C1720 + (C14018 + C14017) * C1722) +
            (C14815 + C14814) * C51260) *
               C51163 * C51495 +
           ((C14816 + C14817) * C1723 -
            ((C14440 + C14441) * C1720 + (C14442 + C14443) * C1722) +
            (C14818 + C14819) * C51260) *
               C51163 * C51496 +
           ((C31516 + C31517) * C1723 - (C31337 * C1720 + C31338 * C1722) +
            (C31518 + C31519) * C51260) *
               C51163 * C24657) *
              C51480 +
          (C33244 * C51495 +
           ((C14590 + C14591) * C1722 + (C14592 + C14593) * C1720 -
            (C31517 + C31516) * C1723 - (C31519 + C31518) * C51260) *
               C51163 * C51496 +
           ((C31349 + C31350) * C1722 + (C31351 + C31352) * C1720 -
            (C10924 * C20732 + C51382 * C20733 + C10923 * C3239 +
             C51463 * C3245) *
                C1723 -
            (C10924 * C20734 + C51382 * C20735 + C10923 * C3246 +
             C51463 * C3251) *
                C51260) *
               C51163 * C24657) *
              C1455) *
         C51186) /
        (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                C1989 +
            (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                C51494 -
            (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                C1990 -
            (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                C51483 +
            (C10923 * C992 + C51463 * C997 + C10924 * C1236 + C51382 * C1240) *
                C1991 +
            (C10923 * C998 + C51463 * C1007 + C10924 * C1241 + C51382 * C1248) *
                C1988) *
               C51163 * C51495 +
           ((C14017 + C14018) * C1989 + (C14019 + C14020) * C51494 -
            (C14812 + C14813) * C1990 - (C14814 + C14815) * C51483 +
            (C15232 + C15233) * C1991 + (C15234 + C15235) * C1988) *
               C51163 * C51496 +
           (C31232 * C1989 + C31233 * C51494 - C31503 * C1990 -
            C31504 * C51483 + (C31823 + C31824) * C1991 +
            (C31825 + C31826) * C1988) *
               C51163 * C24657) *
              C1350 +
          (((C14813 + C14812) * C1990 -
            ((C14020 + C14019) * C51494 + (C14018 + C14017) * C1989) +
            (C14815 + C14814) * C51483 - (C15233 + C15232) * C1991 -
            (C15235 + C15234) * C1988) *
               C51163 * C51495 +
           ((C14816 + C14817) * C1990 -
            ((C14440 + C14441) * C51494 + (C14442 + C14443) * C1989) +
            (C14818 + C14819) * C51483 - (C31824 + C31823) * C1991 -
            (C31826 + C31825) * C1988) *
               C51163 * C51496 +
           ((C31516 + C31517) * C1990 - (C31337 * C51494 + C31338 * C1989) +
            (C31518 + C31519) * C51483 -
            (C10924 * C20814 + C51382 * C20815 + C10923 * C3630 +
             C51463 * C3632) *
                C1991 -
            (C10924 * C20816 + C51382 * C20817 + C10923 * C3633 +
             C51463 * C3636) *
                C1988) *
               C51163 * C24657) *
              C51234) *
         C51186) /
        (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                 C118 +
             (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                 C51248) *
                C51163 * C51495 +
            ((C14017 + C14018) * C118 + (C14019 + C14020) * C51248) * C51163 *
                C51496 +
            C31238 * C24657) *
               C622 -
           (((C14593 + C14592) * C51248 + (C14591 + C14590) * C118) * C51163 *
                C24657 +
            ((C14440 + C14441) * C51248 + (C14442 + C14443) * C118) * C51163 *
                C51496 +
            ((C14020 + C14019) * C51248 + (C14018 + C14017) * C118) * C51163 *
                C51495) *
               C623 +
           (C31238 * C51495 +
            ((C14590 + C14591) * C118 + (C14592 + C14593) * C51248) * C51163 *
                C51496 +
            ((C10923 * C2936 + C51463 * C2939 + C10924 * C3239 +
              C51382 * C3245) *
                 C118 +
             (C10923 * C2940 + C51463 * C2945 + C10924 * C3246 +
              C51382 * C3251) *
                 C51248) *
                C51163 * C24657) *
               C624) *
              C51439 +
          ((C14027 * C51163 * C51495 + C14451 * C51163 * C51496 +
            ((C14446 + C14447) * C118 + (C14448 + C14449) * C51248) * C51163 *
                C24657) *
               C623 -
           (C31234 * C24657 + C14028 * C51163 * C51496 +
            ((C10961 + C10960) * C51248 + (C10959 + C10958) * C118) * C51163 *
                C51495) *
               C622 -
           (((C10924 * C3248 + C51382 * C3252 + C10923 * C2942 +
              C51463 * C2946) *
                 C51248 +
             (C10924 * C3240 + C51382 * C3247 + C10923 * C2937 +
              C51463 * C2941) *
                 C118) *
                C51163 * C24657 +
            ((C14449 + C14448) * C51248 + (C14447 + C14446) * C118) * C51163 *
                C51496 +
            C31234 * C51495) *
               C624) *
              C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                C118 +
            (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                C51248) *
               C51163 * C51495 +
           ((C14017 + C14018) * C118 + (C14019 + C14020) * C51248) * C51163 *
               C51496 +
           ((C14443 + C14442) * C118 + (C14441 + C14440) * C51248) * C51163 *
               C24657) *
              C51218 * C113 -
          (C14450 * C51163 * C24657 + C14028 * C51163 * C51496 +
           ((C10961 + C10960) * C51248 + (C10959 + C10958) * C118) * C51163 *
               C51495) *
              C51218 * C114 +
          (C10982 * C51163 * C51495 + C14029 * C51163 * C51496 +
           ((C11528 + C11529) * C118 + (C11530 + C11531) * C51248) * C51163 *
               C24657) *
              C51218 * C115 -
          (((C10924 * C879 + C51382 * C887 + C10923 * C639 + C51463 * C645) *
                C51248 +
            (C10924 * C863 + C51382 * C878 + C10923 * C630 + C51463 * C638) *
                C118) *
               C51163 * C24657 +
           ((C11165 + C11164) * C51248 + (C11163 + C11162) * C118) * C51163 *
               C51496 +
           C10983 * C51163 * C51495) *
              C51218 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                C989 +
            (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                C986 -
            (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                C990 -
            (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                C987 +
            (C10923 * C992 + C51463 * C997 + C10924 * C1236 + C51382 * C1240) *
                C991 +
            (C10923 * C998 + C51463 * C1007 + C10924 * C1241 + C51382 * C1248) *
                C988) *
               C51163 * C51495 +
           ((C14017 + C14018) * C989 + (C14019 + C14020) * C986 -
            (C14812 + C14813) * C990 - (C14814 + C14815) * C987 +
            (C15232 + C15233) * C991 + (C15234 + C15235) * C988) *
               C51163 * C51496 +
           (C31232 * C989 + C31233 * C986 - C31503 * C990 - C31504 * C987 +
            (C10923 * C3448 + C51463 * C3451 + C10924 * C3762 +
             C51382 * C3768) *
                C991 +
            (C10923 * C3452 + C51463 * C3457 + C10924 * C3769 +
             C51382 * C3774) *
                C988) *
               C51163 * C24657) *
              C51218 * C51439 +
          (((C11344 + C11343) * C990 -
            ((C10961 + C10960) * C986 + (C10959 + C10958) * C989) +
            (C11346 + C11345) * C987 - (C11939 + C11938) * C991 -
            (C11941 + C11940) * C988) *
               C51163 * C51495 +
           (C16016 * C990 - (C14013 * C986 + C14014 * C989) + C16019 * C987 -
            (C15027 + C15026) * C991 - (C15029 + C15028) * C988) *
               C51163 * C51496 +
           ((C14820 + C14821) * C990 - (C14418 * C986 + C14419 * C989) +
            (C14822 + C14823) * C987 -
            (C10924 * C3763 + C51382 * C3770 + C10923 * C3449 +
             C51463 * C3453) *
                C991 -
            (C10924 * C3771 + C51382 * C3775 + C10923 * C3454 +
             C51463 * C3458) *
                C988) *
               C51163 * C24657) *
              C51218 * C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                C118 +
            (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                C51248) *
               C51163 * C51495 +
           ((C14017 + C14018) * C118 + (C14019 + C14020) * C51248) * C51163 *
               C51496 +
           C31238 * C24657) *
              C737 -
          (C31354 * C24657 +
           ((C14440 + C14441) * C51248 + (C14442 + C14443) * C118) * C51163 *
               C51496 +
           ((C14020 + C14019) * C51248 + (C14018 + C14017) * C118) * C51163 *
               C51495) *
              C738 +
          (C31238 * C51495 +
           ((C14590 + C14591) * C118 + (C14592 + C14593) * C51248) * C51163 *
               C51496 +
           ((C31349 + C31350) * C118 + (C31351 + C31352) * C51248) * C51163 *
               C24657) *
              C739 -
          (((C10924 * C20519 + C51382 * C20520 + C10923 * C3075 +
             C51463 * C3078) *
                C51248 +
            (C10924 * C20517 + C51382 * C20518 + C10923 * C3072 +
             C51463 * C3076) *
                C118) *
               C51163 * C24657 +
           ((C31352 + C31351) * C51248 + (C31350 + C31349) * C118) * C51163 *
               C51496 +
           C31354 * C51495) *
              C740) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                 C118 +
             (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                 C51248) *
                C51163 * C51495 +
            ((C14017 + C14018) * C118 + (C14019 + C14020) * C51248) * C51163 *
                C51496 +
            ((C14443 + C14442) * C118 + (C14441 + C14440) * C51248) * C51163 *
                C24657) *
               C51446 -
           (((C14593 + C14592) * C51248 + (C14591 + C14590) * C118) * C51163 *
                C24657 +
            ((C14440 + C14441) * C51248 + (C14442 + C14443) * C118) * C51163 *
                C51496 +
            ((C14020 + C14019) * C51248 + (C14018 + C14017) * C118) * C51163 *
                C51495) *
               C51234) *
              C291 +
          ((C14027 * C51163 * C51495 + C14451 * C51163 * C51496 +
            ((C14446 + C14447) * C118 + (C14448 + C14449) * C51248) * C51163 *
                C24657) *
               C51234 -
           (C14450 * C51163 * C24657 + C14028 * C51163 * C51496 +
            ((C10961 + C10960) * C51248 + (C10959 + C10958) * C118) * C51163 *
                C51495) *
               C51446) *
              C292 +
          ((C10982 * C51163 * C51495 + C14029 * C51163 * C51496 +
            ((C11528 + C11529) * C118 + (C11530 + C11531) * C51248) * C51163 *
                C24657) *
               C51446 -
           (((C10924 * C4264 + C51382 * C4265 + C10923 * C748 + C51463 * C755) *
                 C51248 +
             (C10924 * C4262 + C51382 * C4263 + C10923 * C743 + C51463 * C749) *
                 C118) *
                C51163 * C24657 +
            ((C11531 + C11530) * C51248 + (C11529 + C11528) * C118) * C51163 *
                C51496 +
            C11170 * C51163 * C51495) *
               C51234) *
              C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                C989 +
            (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                C986 -
            (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                C990 -
            (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                C987 +
            (C10923 * C992 + C51463 * C997 + C10924 * C1236 + C51382 * C1240) *
                C991 +
            (C10923 * C998 + C51463 * C1007 + C10924 * C1241 + C51382 * C1248) *
                C988) *
               C51163 * C51495 +
           ((C14017 + C14018) * C989 + (C14019 + C14020) * C986 -
            (C14812 + C14813) * C990 - (C14814 + C14815) * C987 +
            (C15232 + C15233) * C991 + (C15234 + C15235) * C988) *
               C51163 * C51496 +
           (C31232 * C989 + C31233 * C986 - C31503 * C990 - C31504 * C987 +
            (C31823 + C31824) * C991 + (C31825 + C31826) * C988) *
               C51163 * C24657) *
              C51446 +
          (((C14813 + C14812) * C990 -
            ((C14020 + C14019) * C986 + (C14018 + C14017) * C989) +
            (C14815 + C14814) * C987 - (C15233 + C15232) * C991 -
            (C15235 + C15234) * C988) *
               C51163 * C51495 +
           ((C14816 + C14817) * C990 -
            ((C14440 + C14441) * C986 + (C14442 + C14443) * C989) +
            (C14818 + C14819) * C987 - (C31824 + C31823) * C991 -
            (C31826 + C31825) * C988) *
               C51163 * C51496 +
           ((C31516 + C31517) * C990 - (C31337 * C986 + C31338 * C989) +
            (C31518 + C31519) * C987 -
            (C10924 * C20814 + C51382 * C20815 + C10923 * C3630 +
             C51463 * C3632) *
                C991 -
            (C10924 * C20816 + C51382 * C20817 + C10923 * C3633 +
             C51463 * C3636) *
                C988) *
               C51163 * C24657) *
              C51234) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                C452 +
            (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                C51448 -
            (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                C453 -
            (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                C51260) *
               C51163 * C51495 +
           ((C14017 + C14018) * C452 + (C14019 + C14020) * C51448 -
            (C14812 + C14813) * C453 - (C14814 + C14815) * C51260) *
               C51163 * C51496 +
           C31522 * C24657) *
              C622 +
          (((C14813 + C14812) * C453 -
            ((C14020 + C14019) * C51448 + (C14018 + C14017) * C452) +
            (C14815 + C14814) * C51260) *
               C51163 * C51495 +
           ((C14816 + C14817) * C453 -
            ((C14440 + C14441) * C51448 + (C14442 + C14443) * C452) +
            (C14818 + C14819) * C51260) *
               C51163 * C51496 +
           ((C31516 + C31517) * C453 - (C31337 * C51448 + C31338 * C452) +
            (C31518 + C31519) * C51260) *
               C51163 * C24657) *
              C623 +
          (C31522 * C51495 +
           ((C14590 + C14591) * C452 + (C14592 + C14593) * C51448 -
            (C31517 + C31516) * C453 - (C31519 + C31518) * C51260) *
               C51163 * C51496 +
           ((C31349 + C31350) * C452 + (C31351 + C31352) * C51448 -
            (C10924 * C20732 + C51382 * C20733 + C10923 * C3239 +
             C51463 * C3245) *
                C453 -
            (C10924 * C20734 + C51382 * C20735 + C10923 * C3246 +
             C51463 * C3251) *
                C51260) *
               C51163 * C24657) *
              C624) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                C452 +
            (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                C51448 -
            (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                C453 -
            (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                C51260) *
               C51163 * C51495 +
           ((C14017 + C14018) * C452 + (C14019 + C14020) * C51448 -
            (C14812 + C14813) * C453 - (C14814 + C14815) * C51260) *
               C51163 * C51496 +
           ((C14443 + C14442) * C452 + (C14441 + C14440) * C51448 -
            (C14817 + C14816) * C453 - (C14819 + C14818) * C51260) *
               C51163 * C24657) *
              C51218 * C291 +
          (((C11344 + C11343) * C453 -
            ((C10961 + C10960) * C51448 + (C10959 + C10958) * C452) +
            (C11346 + C11345) * C51260) *
               C51163 * C51495 +
           C16029 * C51163 * C51496 +
           ((C14820 + C14821) * C453 - (C14418 * C51448 + C14419 * C452) +
            (C14822 + C14823) * C51260) *
               C51163 * C24657) *
              C51218 * C292 +
          (C11361 * C51163 * C51495 +
           (C14015 * C452 + C14016 * C51448 - (C12697 + C12696) * C453 -
            (C12699 + C12698) * C51260) *
               C51163 * C51496 +
           ((C11528 + C11529) * C452 + (C11530 + C11531) * C51448 -
            (C10924 * C3450 + C51382 * C3455 + C10923 * C862 + C51463 * C876) *
                C453 -
            (C10924 * C3456 + C51382 * C3459 + C10923 * C877 + C51463 * C886) *
                C51260) *
               C51163 * C24657) *
              C51218 * C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
               C1232 +
           (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
               C1228 -
           (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
               C1233 -
           (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
               C1229 +
           (C10923 * C992 + C51463 * C997 + C10924 * C1236 + C51382 * C1240) *
               C1234 +
           (C10923 * C998 + C51463 * C1007 + C10924 * C1241 + C51382 * C1248) *
               C1230 -
           (C10924 * C6389 + C51382 * C6392 + C10923 * C1236 + C51463 * C1240) *
               C1235 -
           (C10924 * C6393 + C51382 * C6398 + C10923 * C1241 + C51463 * C1248) *
               C1231) *
              C51163 * C51495 +
          ((C14017 + C14018) * C1232 + (C14019 + C14020) * C1228 -
           (C14812 + C14813) * C1233 - (C14814 + C14815) * C1229 +
           (C15232 + C15233) * C1234 + (C15234 + C15235) * C1230 -
           (C10924 * C6565 + C51382 * C6567 + C10923 * C3760 + C51463 * C3764) *
               C1235 -
           (C10924 * C6568 + C51382 * C6571 + C10923 * C3765 + C51463 * C3772) *
               C1231) *
              C51163 * C51496 +
          (C31232 * C1232 + C31233 * C1228 - C31503 * C1233 - C31504 * C1229 +
           (C31823 + C31824) * C1234 + (C31825 + C31826) * C1230 -
           (C10924 * C22973 + C51382 * C22974 + C10923 * C3762 +
            C51463 * C3768) *
               C1235 -
           (C10924 * C22975 + C51382 * C22976 + C10923 * C3769 +
            C51463 * C3774) *
               C1231) *
              C51163 * C24657) *
         C51218 * C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                C1722 +
            (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                C1720 -
            (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                C1723 -
            (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                C51260) *
               C51163 * C51495 +
           ((C14017 + C14018) * C1722 + (C14019 + C14020) * C1720 -
            (C14812 + C14813) * C1723 - (C14814 + C14815) * C51260) *
               C51163 * C51496 +
           (C31232 * C1722 + C31233 * C1720 - C31503 * C1723 -
            C31504 * C51260) *
               C51163 * C24657) *
              C51218 * C51492 +
          (((C11344 + C11343) * C1723 -
            ((C10961 + C10960) * C1720 + (C10959 + C10958) * C1722) +
            (C11346 + C11345) * C51260) *
               C51163 * C51495 +
           C16495 * C51163 * C51496 +
           ((C14820 + C14821) * C1723 - (C14418 * C1720 + C14419 * C1722) +
            (C14822 + C14823) * C51260) *
               C51163 * C24657) *
              C51218 * C51477 +
          (C12852 * C51163 * C51495 +
           (C14015 * C1722 + C14016 * C1720 - (C12697 + C12696) * C1723 -
            (C12699 + C12698) * C51260) *
               C51163 * C51496 +
           ((C11528 + C11529) * C1722 + (C11530 + C11531) * C1720 -
            (C10924 * C3450 + C51382 * C3455 + C10923 * C862 + C51463 * C876) *
                C1723 -
            (C10924 * C3456 + C51382 * C3459 + C10923 * C877 + C51463 * C886) *
                C51260) *
               C51163 * C24657) *
              C51218 * C1354)) /
        (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                 C1722 +
             (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                 C1720 -
             (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                 C1723 -
             (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                 C51260) *
                C51163 * C51495 +
            ((C14017 + C14018) * C1722 + (C14019 + C14020) * C1720 -
             (C14812 + C14813) * C1723 - (C14814 + C14815) * C51260) *
                C51163 * C51496 +
            (C31232 * C1722 + C31233 * C1720 - C31503 * C1723 -
             C31504 * C51260) *
                C51163 * C24657) *
               C51446 +
           (((C14813 + C14812) * C1723 -
             ((C14020 + C14019) * C1720 + (C14018 + C14017) * C1722) +
             (C14815 + C14814) * C51260) *
                C51163 * C51495 +
            ((C14816 + C14817) * C1723 -
             ((C14440 + C14441) * C1720 + (C14442 + C14443) * C1722) +
             (C14818 + C14819) * C51260) *
                C51163 * C51496 +
            ((C31516 + C31517) * C1723 - (C31337 * C1720 + C31338 * C1722) +
             (C31518 + C31519) * C51260) *
                C51163 * C24657) *
               C51234) *
              C1456 +
          ((((C11344 + C11343) * C1723 -
             ((C10961 + C10960) * C1720 + (C10959 + C10958) * C1722) +
             (C11346 + C11345) * C51260) *
                C51163 * C51495 +
            C16495 * C51163 * C51496 +
            ((C14820 + C14821) * C1723 - (C14418 * C1720 + C14419 * C1722) +
             (C14822 + C14823) * C51260) *
                C51163 * C24657) *
               C51446 +
           (C16494 * C51163 * C51495 +
            (C14428 * C1722 + C14429 * C1720 - (C14821 + C14820) * C1723 -
             (C14823 + C14822) * C51260) *
                C51163 * C51496 +
            ((C14446 + C14447) * C1722 + (C14448 + C14449) * C1720 -
             (C10924 * C3631 + C51382 * C3634 + C10923 * C3238 +
              C51463 * C3243) *
                 C1723 -
             (C10924 * C3635 + C51382 * C3637 + C10923 * C3244 +
              C51463 * C3250) *
                 C51260) *
                C51163 * C24657) *
               C51234) *
              C51191)) /
        (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                C1989 +
            (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                C51494 -
            (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                C1990 -
            (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                C51483 +
            (C10923 * C992 + C51463 * C997 + C10924 * C1236 + C51382 * C1240) *
                C1991 +
            (C10923 * C998 + C51463 * C1007 + C10924 * C1241 + C51382 * C1248) *
                C1988) *
               C51163 * C51495 +
           ((C14017 + C14018) * C1989 + (C14019 + C14020) * C51494 -
            (C14812 + C14813) * C1990 - (C14814 + C14815) * C51483 +
            (C15232 + C15233) * C1991 + (C15234 + C15235) * C1988) *
               C51163 * C51496 +
           (C31232 * C1989 + C31233 * C51494 - C31503 * C1990 -
            C31504 * C51483 + (C31823 + C31824) * C1991 +
            (C31825 + C31826) * C1988) *
               C51163 * C24657) *
              C51218 * C1456 +
          (((C11344 + C11343) * C1990 -
            ((C10961 + C10960) * C51494 + (C10959 + C10958) * C1989) +
            (C11346 + C11345) * C51483 - (C11939 + C11938) * C1991 -
            (C11941 + C11940) * C1988) *
               C51163 * C51495 +
           (C16016 * C1990 - (C14013 * C51494 + C14014 * C1989) +
            C16019 * C51483 - (C15027 + C15026) * C1991 -
            (C15029 + C15028) * C1988) *
               C51163 * C51496 +
           ((C14820 + C14821) * C1990 - (C14418 * C51494 + C14419 * C1989) +
            (C14822 + C14823) * C51483 -
            (C10924 * C3763 + C51382 * C3770 + C10923 * C3449 +
             C51463 * C3453) *
                C1991 -
            (C10924 * C3771 + C51382 * C3775 + C10923 * C3454 +
             C51463 * C3458) *
                C1988) *
               C51163 * C24657) *
              C51218 * C51191)) /
        (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                C118 +
            (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                C51248) *
               C51163 * C51495 +
           ((C14017 + C14018) * C118 + (C14019 + C14020) * C51248) * C51163 *
               C51496 +
           ((C14443 + C14442) * C118 + (C14441 + C14440) * C51248) * C51163 *
               C24657) *
              C51218 * C113 -
          (C14450 * C51163 * C24657 + C14028 * C51163 * C51496 +
           ((C10961 + C10960) * C51248 + (C10959 + C10958) * C118) * C51163 *
               C51495) *
              C51218 * C114 +
          (C10982 * C51163 * C51495 + C14029 * C51163 * C51496 +
           ((C11528 + C11529) * C118 + (C11530 + C11531) * C51248) * C51163 *
               C24657) *
              C51218 * C115 -
          (((C10924 * C879 + C51382 * C887 + C10923 * C639 + C51463 * C645) *
                C51248 +
            (C10924 * C863 + C51382 * C878 + C10923 * C630 + C51463 * C638) *
                C118) *
               C51163 * C24657 +
           ((C11165 + C11164) * C51248 + (C11163 + C11162) * C118) * C51163 *
               C51496 +
           C10983 * C51163 * C51495) *
              C51218 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                 C118 +
             (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                 C51248) *
                C51163 * C51495 +
            ((C14017 + C14018) * C118 + (C14019 + C14020) * C51248) * C51163 *
                C51496 +
            C31238 * C24657) *
               C622 -
           (((C14593 + C14592) * C51248 + (C14591 + C14590) * C118) * C51163 *
                C24657 +
            ((C14440 + C14441) * C51248 + (C14442 + C14443) * C118) * C51163 *
                C51496 +
            ((C14020 + C14019) * C51248 + (C14018 + C14017) * C118) * C51163 *
                C51495) *
               C623 +
           (C31238 * C51495 +
            ((C14590 + C14591) * C118 + (C14592 + C14593) * C51248) * C51163 *
                C51496 +
            ((C10923 * C2936 + C51463 * C2939 + C10924 * C3239 +
              C51382 * C3245) *
                 C118 +
             (C10923 * C2940 + C51463 * C2945 + C10924 * C3246 +
              C51382 * C3251) *
                 C51248) *
                C51163 * C24657) *
               C624) *
              C51439 +
          ((C14027 * C51163 * C51495 + C14451 * C51163 * C51496 +
            ((C14446 + C14447) * C118 + (C14448 + C14449) * C51248) * C51163 *
                C24657) *
               C623 -
           (C31234 * C24657 + C14028 * C51163 * C51496 +
            ((C10961 + C10960) * C51248 + (C10959 + C10958) * C118) * C51163 *
                C51495) *
               C622 -
           (((C10924 * C3248 + C51382 * C3252 + C10923 * C2942 +
              C51463 * C2946) *
                 C51248 +
             (C10924 * C3240 + C51382 * C3247 + C10923 * C2937 +
              C51463 * C2941) *
                 C118) *
                C51163 * C24657 +
            ((C14449 + C14448) * C51248 + (C14447 + C14446) * C118) * C51163 *
                C51496 +
            C31234 * C51495) *
               C624) *
              C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                 C118 +
             (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                 C51248) *
                C51163 * C51495 +
            ((C14017 + C14018) * C118 + (C14019 + C14020) * C51248) * C51163 *
                C51496 +
            ((C14443 + C14442) * C118 + (C14441 + C14440) * C51248) * C51163 *
                C24657) *
               C51446 -
           (((C14593 + C14592) * C51248 + (C14591 + C14590) * C118) * C51163 *
                C24657 +
            ((C14440 + C14441) * C51248 + (C14442 + C14443) * C118) * C51163 *
                C51496 +
            ((C14020 + C14019) * C51248 + (C14018 + C14017) * C118) * C51163 *
                C51495) *
               C51234) *
              C291 +
          ((C14027 * C51163 * C51495 + C14451 * C51163 * C51496 +
            ((C14446 + C14447) * C118 + (C14448 + C14449) * C51248) * C51163 *
                C24657) *
               C51234 -
           (C14450 * C51163 * C24657 + C14028 * C51163 * C51496 +
            ((C10961 + C10960) * C51248 + (C10959 + C10958) * C118) * C51163 *
                C51495) *
               C51446) *
              C292 +
          ((C10982 * C51163 * C51495 + C14029 * C51163 * C51496 +
            ((C11528 + C11529) * C118 + (C11530 + C11531) * C51248) * C51163 *
                C24657) *
               C51446 -
           (((C10924 * C4264 + C51382 * C4265 + C10923 * C748 + C51463 * C755) *
                 C51248 +
             (C10924 * C4262 + C51382 * C4263 + C10923 * C743 + C51463 * C749) *
                 C118) *
                C51163 * C24657 +
            ((C11531 + C11530) * C51248 + (C11529 + C11528) * C118) * C51163 *
                C51496 +
            C11170 * C51163 * C51495) *
               C51234) *
              C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                C118 +
            (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                C51248) *
               C51163 * C51495 +
           ((C14017 + C14018) * C118 + (C14019 + C14020) * C51248) * C51163 *
               C51496 +
           C31238 * C24657) *
              C737 -
          (C31354 * C24657 +
           ((C14440 + C14441) * C51248 + (C14442 + C14443) * C118) * C51163 *
               C51496 +
           ((C14020 + C14019) * C51248 + (C14018 + C14017) * C118) * C51163 *
               C51495) *
              C738 +
          (C31238 * C51495 +
           ((C14590 + C14591) * C118 + (C14592 + C14593) * C51248) * C51163 *
               C51496 +
           ((C31349 + C31350) * C118 + (C31351 + C31352) * C51248) * C51163 *
               C24657) *
              C739 -
          (((C10924 * C20519 + C51382 * C20520 + C10923 * C3075 +
             C51463 * C3078) *
                C51248 +
            (C10924 * C20517 + C51382 * C20518 + C10923 * C3072 +
             C51463 * C3076) *
                C118) *
               C51163 * C24657 +
           ((C31352 + C31351) * C51248 + (C31350 + C31349) * C118) * C51163 *
               C51496 +
           C31354 * C51495) *
              C740) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                C452 +
            (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                C51448 -
            (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                C453 -
            (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                C51260) *
               C51163 * C51495 +
           ((C14017 + C14018) * C452 + (C14019 + C14020) * C51448 -
            (C14812 + C14813) * C453 - (C14814 + C14815) * C51260) *
               C51163 * C51496 +
           ((C14443 + C14442) * C452 + (C14441 + C14440) * C51448 -
            (C14817 + C14816) * C453 - (C14819 + C14818) * C51260) *
               C51163 * C24657) *
              C51218 * C291 +
          (((C11344 + C11343) * C453 -
            ((C10961 + C10960) * C51448 + (C10959 + C10958) * C452) +
            (C11346 + C11345) * C51260) *
               C51163 * C51495 +
           C16029 * C51163 * C51496 +
           ((C14820 + C14821) * C453 - (C14418 * C51448 + C14419 * C452) +
            (C14822 + C14823) * C51260) *
               C51163 * C24657) *
              C51218 * C292 +
          (C11361 * C51163 * C51495 +
           (C14015 * C452 + C14016 * C51448 - (C12697 + C12696) * C453 -
            (C12699 + C12698) * C51260) *
               C51163 * C51496 +
           ((C11528 + C11529) * C452 + (C11530 + C11531) * C51448 -
            (C10924 * C3450 + C51382 * C3455 + C10923 * C862 + C51463 * C876) *
                C453 -
            (C10924 * C3456 + C51382 * C3459 + C10923 * C877 + C51463 * C886) *
                C51260) *
               C51163 * C24657) *
              C51218 * C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                C452 +
            (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                C51448 -
            (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                C453 -
            (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                C51260) *
               C51163 * C51495 +
           ((C14017 + C14018) * C452 + (C14019 + C14020) * C51448 -
            (C14812 + C14813) * C453 - (C14814 + C14815) * C51260) *
               C51163 * C51496 +
           C31522 * C24657) *
              C622 +
          (((C14813 + C14812) * C453 -
            ((C14020 + C14019) * C51448 + (C14018 + C14017) * C452) +
            (C14815 + C14814) * C51260) *
               C51163 * C51495 +
           ((C14816 + C14817) * C453 -
            ((C14440 + C14441) * C51448 + (C14442 + C14443) * C452) +
            (C14818 + C14819) * C51260) *
               C51163 * C51496 +
           ((C31516 + C31517) * C453 - (C31337 * C51448 + C31338 * C452) +
            (C31518 + C31519) * C51260) *
               C51163 * C24657) *
              C623 +
          (C31522 * C51495 +
           ((C14590 + C14591) * C452 + (C14592 + C14593) * C51448 -
            (C31517 + C31516) * C453 - (C31519 + C31518) * C51260) *
               C51163 * C51496 +
           ((C31349 + C31350) * C452 + (C31351 + C31352) * C51448 -
            (C10924 * C20732 + C51382 * C20733 + C10923 * C3239 +
             C51463 * C3245) *
                C453 -
            (C10924 * C20734 + C51382 * C20735 + C10923 * C3246 +
             C51463 * C3251) *
                C51260) *
               C51163 * C24657) *
              C624) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C118 +
             (C117 * C127 + C51318 * C140) * C51248) *
                C51163 * C20035 +
            (C2617 + C2618) * C51163 * C20036 + C20334 * C20037 +
            C20338 * C20038) *
               C1350 -
           (C20415 * C20038 + C20410 * C20037 +
            (C2620 + C2619) * C51163 * C20036 +
            (C2618 + C2617) * C51163 * C20035) *
               C51234) *
              C51492 +
          ((C2590 * C51163 * C20035 + C2595 * C51163 * C20036 +
            C2956 * C51163 * C20037 + (C2972 + C2973) * C51163 * C20038) *
               C51234 -
           (C20336 * C20038 + C20337 * C20037 + C2601 * C51163 * C20036 +
            (C179 + C178) * C51163 * C20035) *
               C1350) *
              C51477 +
          ((C188 * C51163 * C20035 + C2602 * C51163 * C20036 +
            C2603 * C51163 * C20037 + (C2623 + C2624) * C51163 * C20038) *
               C1350 -
           (((C117 * C2943 + C51318 * C2947) * C51248 +
             (C117 * C2938 + C51318 * C2944) * C118) *
                C51163 * C20038 +
            (C2624 + C2623) * C51163 * C20037 + C2608 * C51163 * C20036 +
            C352 * C51163 * C20035) *
               C51234) *
              C1354)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C118 +
              (C117 * C127 + C51318 * C140) * C51248) *
                 C17433 +
             (C178 + C179) * C17434 + C188 * C17435) *
                C17436 +
            ((C2617 + C2618) * C17433 + C2590 * C17434 + C2602 * C17435) *
                C51356) *
               C1350 -
           ((C2608 * C17435 + C2600 * C17434 + (C2620 + C2619) * C17433) *
                C51356 +
            (C352 * C17435 + C2601 * C17434 + (C2618 + C2617) * C17433) *
                C17436) *
               C51234) *
              C51492 +
          (((C2590 * C17433 + C2602 * C17434 + C8409 * C17435) * C17436 +
            (C2595 * C17433 + C2603 * C17434 + (C670 + C671) * C17435) *
                C51356) *
               C51234 -
           ((C351 * C17435 + C352 * C17434 + C2601 * C17433) * C51356 +
            (C191 * C17435 + (C181 + C180) * C17434 + (C179 + C178) * C17433) *
                C17436) *
               C1350) *
              C51477 +
          (((C188 * C17433 + C189 * C17434 + (C185 + C184) * C17435) * C17436 +
            (C2602 * C17433 + C8409 * C17434 + (C349 + C350) * C17435) *
                C51356) *
               C1350 -
           ((((C117 * C640 + C51318 * C646) * C51248 +
              (C117 * C631 + C51318 * C641) * C118) *
                 C17435 +
             (C671 + C670) * C17434 + C2608 * C17433) *
                C51356 +
            ((C350 + C349) * C17435 + C351 * C17434 + C352 * C17433) * C17436) *
               C51234) *
              C1354)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5414 * C119 + C5411 * C126 + C5415 * C454 + C5412 * C460 +
              C5416 * C992 + C5413 * C997) *
                 C118 +
             (C5414 * C127 + C5411 * C140 + C5415 * C461 + C5412 * C472 +
              C5416 * C998 + C5413 * C1007) *
                 C51248) *
                C51163 * C17436 +
            ((C22068 + C22069 + C22070) * C118 +
             (C22071 + C22072 + C22073) * C51248) *
                C51163 * C51356) *
               C1350 -
           (((C22378 + C22379 + C22380) * C51248 +
             (C22381 + C22382 + C22383) * C118) *
                C51163 * C51356 +
            ((C22073 + C22072 + C22071) * C51248 +
             (C22070 + C22069 + C22068) * C118) *
                C51163 * C17436) *
               C51234) *
              C51492 +
          ((((C5647 + C5646 + C5645) * C118 +
             (C5644 + C5643 + C5642) * C51248) *
                C51163 * C17436 +
            ((C5994 + C5995 + C5996) * C118 +
             (C5997 + C5998 + C5999) * C51248) *
                C51163 * C51356) *
               C51234 -
           (((C5642 + C5643 + C5644) * C51248 +
             (C5645 + C5646 + C5647) * C118) *
                C51163 * C51356 +
            ((C5459 + C5458 + C5457) * C51248 +
             (C5456 + C5455 + C5454) * C118) *
                C51163 * C17436) *
               C1350) *
              C51477 +
          ((((C5465 + C5464 + C5463) * C118 +
             (C5462 + C5461 + C5460) * C51248) *
                C51163 * C17436 +
            ((C5648 + C5649 + C5650) * C118 +
             (C5651 + C5652 + C5653) * C51248) *
                C51163 * C51356) *
               C1350 -
           (((C5416 * C3456 + C5413 * C3459 + C5415 * C877 + C5412 * C886 +
              C5414 * C637 + C5411 * C644) *
                 C51248 +
             (C5416 * C3450 + C5413 * C3455 + C5415 * C862 + C5412 * C876 +
              C5414 * C629 + C5411 * C636) *
                 C118) *
                C51163 * C51356 +
            ((C5653 + C5652 + C5651) * C51248 +
             (C5650 + C5649 + C5648) * C118) *
                C51163 * C17436) *
               C51234) *
              C1354)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C118 +
             (C117 * C127 + C51318 * C140) * C51248) *
                C51163 * C20035 +
            (C2617 + C2618) * C51163 * C20036 + C20334 * C20037 +
            C20338 * C20038) *
               C51493 -
           (C20415 * C20038 + C20410 * C20037 +
            (C2620 + C2619) * C51163 * C20036 +
            (C2618 + C2617) * C51163 * C20035) *
               C51480 +
           (C20334 * C20035 + C20338 * C20036 +
            (C3090 + C3091) * C51163 * C20037 +
            (C20418 + C20419) * C51163 * C20038) *
               C1455) *
              C1456 +
          ((C2590 * C51163 * C20035 + C2595 * C51163 * C20036 +
            C2956 * C51163 * C20037 + (C2972 + C2973) * C51163 * C20038) *
               C51480 -
           (C20336 * C20038 + C20337 * C20037 + C2601 * C51163 * C20036 +
            (C179 + C178) * C51163 * C20035) *
               C51493 -
           (((C117 * C3073 + C51318 * C3077) * C51248 +
             (C117 * C3071 + C51318 * C3074) * C118) *
                C51163 * C20038 +
            (C2973 + C2972) * C51163 * C20037 + C20336 * C20036 +
            C20337 * C20035) *
               C1455) *
              C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C118 +
              (C117 * C127 + C51318 * C140) * C51248) *
                 C17433 +
             (C178 + C179) * C17434 + C188 * C17435) *
                C17436 +
            ((C2617 + C2618) * C17433 + C2590 * C17434 + C2602 * C17435) *
                C51356) *
               C51493 -
           ((C2608 * C17435 + C2600 * C17434 + (C2620 + C2619) * C17433) *
                C51356 +
            (C352 * C17435 + C2601 * C17434 + (C2618 + C2617) * C17433) *
                C17436) *
               C51480 +
           ((C2949 * C17433 + C2595 * C17434 + C2603 * C17435) * C17436 +
            ((C2971 + C2970) * C17433 + C2956 * C17434 +
             (C2623 + C2624) * C17435) *
                C51356) *
               C1455) *
              C1456 +
          (((C2590 * C17433 + C2602 * C17434 + C8409 * C17435) * C17436 +
            (C2595 * C17433 + C2603 * C17434 + (C670 + C671) * C17435) *
                C51356) *
               C51480 -
           ((C351 * C17435 + C352 * C17434 + C2601 * C17433) * C51356 +
            (C191 * C17435 + (C181 + C180) * C17434 + (C179 + C178) * C17433) *
                C17436) *
               C51493 -
           ((((C117 * C746 + C51318 * C754) * C51248 +
              (C117 * C742 + C51318 * C747) * C118) *
                 C17435 +
             (C2624 + C2623) * C17434 + C2951 * C17433) *
                C51356 +
            ((C671 + C670) * C17435 + C2608 * C17434 + C2600 * C17433) *
                C17436) *
               C1455) *
              C51191)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5414 * C119 + C5411 * C126 + C5415 * C454 + C5412 * C460 +
              C5416 * C992 + C5413 * C997) *
                 C118 +
             (C5414 * C127 + C5411 * C140 + C5415 * C461 + C5412 * C472 +
              C5416 * C998 + C5413 * C1007) *
                 C51248) *
                C51163 * C17436 +
            ((C22068 + C22069 + C22070) * C118 +
             (C22071 + C22072 + C22073) * C51248) *
                C51163 * C51356) *
               C51493 -
           (((C22378 + C22379 + C22380) * C51248 +
             (C22381 + C22382 + C22383) * C118) *
                C51163 * C51356 +
            ((C22073 + C22072 + C22071) * C51248 +
             (C22070 + C22069 + C22068) * C118) *
                C51163 * C17436) *
               C51480 +
           (((C22383 + C22382 + C22381) * C118 +
             (C22380 + C22379 + C22378) * C51248) *
                C51163 * C17436 +
            ((C22494 + C22495 + C22496) * C118 +
             (C22497 + C22498 + C22499) * C51248) *
                C51163 * C51356) *
               C1455) *
              C1456 +
          ((((C5647 + C5646 + C5645) * C118 +
             (C5644 + C5643 + C5642) * C51248) *
                C51163 * C17436 +
            ((C5994 + C5995 + C5996) * C118 +
             (C5997 + C5998 + C5999) * C51248) *
                C51163 * C51356) *
               C51480 -
           (((C5642 + C5643 + C5644) * C51248 +
             (C5645 + C5646 + C5647) * C118) *
                C51163 * C51356 +
            ((C5459 + C5458 + C5457) * C51248 +
             (C5456 + C5455 + C5454) * C118) *
                C51163 * C17436) *
               C51493 -
           (((C5416 * C3635 + C5413 * C3637 + C5415 * C3244 + C5412 * C3250 +
              C5414 * C750 + C5411 * C756) *
                 C51248 +
             (C5416 * C3631 + C5413 * C3634 + C5415 * C3238 + C5412 * C3243 +
              C5414 * C744 + C5411 * C751) *
                 C118) *
                C51163 * C51356 +
            ((C5999 + C5998 + C5997) * C51248 +
             (C5996 + C5995 + C5994) * C118) *
                C51163 * C17436) *
               C1455) *
              C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C452 +
             (C117 * C127 + C51318 * C140) * C51448 -
             (C117 * C454 + C51318 * C460) * C453 -
             (C117 * C461 + C51318 * C472) * C51260) *
                C51163 * C20035 +
            (C3254 + C3255 - C3289 - C3290) * C51163 * C20036 +
            C20522 * C20037 + C20536 * C20038) *
               C1350 +
           ((C3289 - (C3255 + C3254) + C3290) * C51163 * C20035 +
            (C3291 - (C3261 + C3260) + C3292) * C51163 * C20036 +
            (C3294 - (C3269 + C3270) + C3295) * C51163 * C20037 +
            (C20534 - (C20526 + C20527) + C20535) * C51163 * C20038) *
               C51234) *
              C1456 +
          (((C513 - (C480 + C479) + C514) * C51163 * C20035 +
            C4274 * C51163 * C20036 + C4275 * C51163 * C20037 +
            (C3296 - (C3275 + C3276) + C3297) * C51163 * C20038) *
               C1350 +
           (C4273 * C51163 * C20035 + C3293 * C51163 * C20036 +
            (C3276 + C3275 - C3296 - C3297) * C51163 * C20037 +
            (C2966 * C452 + C2967 * C51448 -
             (C117 * C3240 + C51318 * C3247) * C453 -
             (C117 * C3248 + C51318 * C3252) * C51260) *
                C51163 * C20038) *
               C51234) *
              C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C452 +
              (C117 * C127 + C51318 * C140) * C51448 -
              (C117 * C454 + C51318 * C460) * C453 -
              (C117 * C461 + C51318 * C472) * C51260) *
                 C17433 +
             (C479 + C480 - C513 - C514) * C17434 + C523 * C17435) *
                C17436 +
            ((C3254 + C3255 - C3289 - C3290) * C17433 + C4273 * C17434 +
             C8558 * C17435) *
                C51356) *
               C1350 +
           (((C3289 - (C3255 + C3254) + C3290) * C17433 + C4274 * C17434 +
             C9839 * C17435) *
                C17436 +
            ((C3291 - (C3261 + C3260) + C3292) * C17433 + C4275 * C17434 +
             (C2789 - (C2779 + C2780) + C2790) * C17435) *
                C51356) *
               C51234) *
              C1456 +
          ((((C513 - (C480 + C479) + C514) * C17433 +
             (C515 - (C486 + C485) + C516) * C17434 +
             (C517 - (C492 + C491) + C518) * C17435) *
                C17436 +
            (C4274 * C17433 + C9839 * C17434 +
             (C1621 - (C1607 + C1608) + C1622) * C17435) *
                C51356) *
               C1350 +
           ((C4273 * C17433 + C8558 * C17434 +
             (C1608 + C1607 - C1621 - C1622) * C17435) *
                C17436 +
            (C3293 * C17433 + (C2780 + C2779 - C2789 - C2790) * C17434 +
             (C664 * C452 + C665 * C51448 -
              (C117 * C863 + C51318 * C878) * C453 -
              (C117 * C879 + C51318 * C887) * C51260) *
                 C17435) *
                C51356) *
               C51234) *
              C51191)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5414 * C119 + C5411 * C126 + C5415 * C454 + C5412 * C460 +
              C5416 * C992 + C5413 * C997) *
                 C452 +
             (C5414 * C127 + C5411 * C140 + C5415 * C461 + C5412 * C472 +
              C5416 * C998 + C5413 * C1007) *
                 C51448 -
             (C5416 * C1236 + C5413 * C1240 + C5415 * C992 + C5412 * C997 +
              C5414 * C454 + C5411 * C460) *
                 C453 -
             (C5416 * C1241 + C5413 * C1248 + C5415 * C998 + C5412 * C1007 +
              C5414 * C461 + C5411 * C472) *
                 C51260) *
                C51163 * C17436 +
            ((C22068 + C22069 + C22070) * C452 +
             (C22071 + C22072 + C22073) * C51448 -
             (C22670 + C22671 + C22672) * C453 -
             (C22673 + C22674 + C22675) * C51260) *
                C51163 * C51356) *
               C1350 +
           (((C22672 + C22671 + C22670) * C453 -
             ((C22073 + C22072 + C22071) * C51448 +
              (C22070 + C22069 + C22068) * C452) +
             (C22675 + C22674 + C22673) * C51260) *
                C51163 * C17436 +
            ((C22676 + C22677 + C22678) * C453 -
             ((C22378 + C22379 + C22380) * C51448 +
              (C22381 + C22382 + C22383) * C452) +
             (C22679 + C22680 + C22681) * C51260) *
                C51163 * C51356) *
               C51234) *
              C1456 +
          ((((C5826 + C5825 + C5824) * C453 -
             ((C5459 + C5458 + C5457) * C51448 +
              (C5456 + C5455 + C5454) * C452) +
             (C5829 + C5828 + C5827) * C51260) *
                C51163 * C17436 +
            ((C7182 + C7183 + C7184) * C453 -
             ((C5642 + C5643 + C5644) * C51448 +
              (C5645 + C5646 + C5647) * C452) +
             (C7185 + C7186 + C7187) * C51260) *
                C51163 * C51356) *
               C1350 +
           (((C5647 + C5646 + C5645) * C452 + (C5644 + C5643 + C5642) * C51448 -
             (C7184 + C7183 + C7182) * C453 -
             (C7187 + C7186 + C7185) * C51260) *
                C51163 * C17436 +
            ((C5994 + C5995 + C5996) * C452 + (C5997 + C5998 + C5999) * C51448 -
             (C5416 * C3763 + C5413 * C3770 + C5415 * C3449 + C5412 * C3453 +
              C5414 * C861 + C5411 * C874) *
                 C453 -
             (C5416 * C3771 + C5413 * C3775 + C5415 * C3454 + C5412 * C3458 +
              C5414 * C875 + C5411 * C885) *
                 C51260) *
                C51163 * C51356) *
               C51234) *
              C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C1722 +
             (C117 * C127 + C51318 * C140) * C1720 -
             (C117 * C454 + C51318 * C460) * C1723 -
             (C117 * C461 + C51318 * C472) * C51260) *
                C51163 * C20035 +
            (C4624 + C4625 - C4626 - C4627) * C51163 * C20036 +
            C5153 * C51163 * C20037 +
            (C5150 + C5149 - C5148 - C5151) * C51163 * C20038) *
               C1350 +
           ((C4626 - (C4625 + C4624) + C4627) * C51163 * C20035 +
            (C4631 - (C4630 + C4629) + C4632) * C51163 * C20036 +
            (C5148 - (C5149 + C5150) + C5151) * C51163 * C20037 +
            (C20531 * C1723 - (C3088 * C1720 + C3087 * C1722) +
             C20532 * C51260) *
                C51163 * C20038) *
               C51234) *
              C51439 +
          (((C1727 - (C1726 + C1725) + C1728) * C51163 * C20035 +
            C4646 * C51163 * C20036 + C4647 * C51163 * C20037 +
            (C4636 - (C4637 + C4638) + C4639) * C51163 * C20038) *
               C1350 +
           (C4644 * C51163 * C20035 + C4645 * C51163 * C20036 +
            (C4638 + C4637 - C4636 - C4639) * C51163 * C20037 +
            (C2966 * C1722 + C2967 * C1720 -
             (C117 * C3240 + C51318 * C3247) * C1723 -
             (C117 * C3248 + C51318 * C3252) * C51260) *
                C51163 * C20038) *
               C51234) *
              C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C1722 +
              (C117 * C127 + C51318 * C140) * C1720 -
              (C117 * C454 + C51318 * C460) * C1723 -
              (C117 * C461 + C51318 * C472) * C51260) *
                 C17433 +
             (C1725 + C1726 - C1727 - C1728) * C17434 + C1745 * C17435) *
                C17436 +
            ((C4624 + C4625 - C4626 - C4627) * C17433 + C4644 * C17434 +
             C9988 * C17435) *
                C51356) *
               C1350 +
           (((C4626 - (C4625 + C4624) + C4627) * C17433 + C4646 * C17434 +
             C10185 * C17435) *
                C17436 +
            ((C4631 - (C4630 + C4629) + C4632) * C17433 + C4647 * C17434 +
             (C4426 - (C4427 + C4428) + C4429) * C17435) *
                C51356) *
               C51234) *
              C51439 +
          ((((C1727 - (C1726 + C1725) + C1728) * C17433 +
             (C1731 - (C1730 + C1729) + C1732) * C17434 +
             (C1735 - (C1734 + C1733) + C1736) * C17435) *
                C17436 +
            (C4646 * C17433 + C10185 * C17434 +
             (C1885 - (C1886 + C1887) + C1888) * C17435) *
                C51356) *
               C1350 +
           ((C4644 * C17433 + C9988 * C17434 +
             (C1887 + C1886 - C1885 - C1888) * C17435) *
                C17436 +
            (C4645 * C17433 + (C4428 + C4427 - C4426 - C4429) * C17434 +
             (C664 * C1722 + C665 * C1720 -
              (C117 * C863 + C51318 * C878) * C1723 -
              (C117 * C879 + C51318 * C887) * C51260) *
                 C17435) *
                C51356) *
               C51234) *
              C51191)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5414 * C119 + C5411 * C126 + C5415 * C454 + C5412 * C460 +
              C5416 * C992 + C5413 * C997) *
                 C1722 +
             (C5414 * C127 + C5411 * C140 + C5415 * C461 + C5412 * C472 +
              C5416 * C998 + C5413 * C1007) *
                 C1720 -
             (C5416 * C1236 + C5413 * C1240 + C5415 * C992 + C5412 * C997 +
              C5414 * C454 + C5411 * C460) *
                 C1723 -
             (C5416 * C1241 + C5413 * C1248 + C5415 * C998 + C5412 * C1007 +
              C5414 * C461 + C5411 * C472) *
                 C51260) *
                C51163 * C17436 +
            ((C22068 + C22069 + C22070) * C1722 +
             (C22071 + C22072 + C22073) * C1720 -
             (C22670 + C22671 + C22672) * C1723 -
             (C22673 + C22674 + C22675) * C51260) *
                C51163 * C51356) *
               C1350 +
           (((C22672 + C22671 + C22670) * C1723 -
             ((C22073 + C22072 + C22071) * C1720 +
              (C22070 + C22069 + C22068) * C1722) +
             (C22675 + C22674 + C22673) * C51260) *
                C51163 * C17436 +
            ((C22676 + C22677 + C22678) * C1723 -
             ((C22378 + C22379 + C22380) * C1720 +
              (C22381 + C22382 + C22383) * C1722) +
             (C22679 + C22680 + C22681) * C51260) *
                C51163 * C51356) *
               C51234) *
              C51439 +
          ((((C5826 + C5825 + C5824) * C1723 -
             ((C5459 + C5458 + C5457) * C1720 +
              (C5456 + C5455 + C5454) * C1722) +
             (C5829 + C5828 + C5827) * C51260) *
                C51163 * C17436 +
            ((C7182 + C7183 + C7184) * C1723 -
             ((C5642 + C5643 + C5644) * C1720 +
              (C5645 + C5646 + C5647) * C1722) +
             (C7185 + C7186 + C7187) * C51260) *
                C51163 * C51356) *
               C1350 +
           (((C5647 + C5646 + C5645) * C1722 + (C5644 + C5643 + C5642) * C1720 -
             (C7184 + C7183 + C7182) * C1723 -
             (C7187 + C7186 + C7185) * C51260) *
                C51163 * C17436 +
            ((C5994 + C5995 + C5996) * C1722 + (C5997 + C5998 + C5999) * C1720 -
             (C5416 * C3763 + C5413 * C3770 + C5415 * C3449 + C5412 * C3453 +
              C5414 * C861 + C5411 * C874) *
                 C1723 -
             (C5416 * C3771 + C5413 * C3775 + C5415 * C3454 + C5412 * C3458 +
              C5414 * C875 + C5411 * C885) *
                 C51260) *
                C51163 * C51356) *
               C51234) *
              C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C1722 +
            (C117 * C127 + C51318 * C140) * C1720 -
            (C117 * C454 + C51318 * C460) * C1723 -
            (C117 * C461 + C51318 * C472) * C51260) *
               C51163 * C20035 +
           (C4624 + C4625 - C4626 - C4627) * C51163 * C20036 + C21699 * C20037 +
           C21707 * C20038) *
              C51493 +
          ((C4626 - (C4625 + C4624) + C4627) * C51163 * C20035 +
           (C4631 - (C4630 + C4629) + C4632) * C51163 * C20036 +
           (C5148 - (C5149 + C5150) + C5151) * C51163 * C20037 +
           (C21701 - (C21702 + C21703) + C21704) * C51163 * C20038) *
              C51480 +
          (C21699 * C20035 + C21707 * C20036 +
           (C21703 + C21702 - C21701 - C21704) * C51163 * C20037 +
           (C20416 * C1722 + C20417 * C1720 -
            (C117 * C20517 + C51318 * C20518) * C1723 -
            (C117 * C20519 + C51318 * C20520) * C51260) *
               C51163 * C20038) *
              C1455) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C1722 +
             (C117 * C127 + C51318 * C140) * C1720 -
             (C117 * C454 + C51318 * C460) * C1723 -
             (C117 * C461 + C51318 * C472) * C51260) *
                C17433 +
            (C1725 + C1726 - C1727 - C1728) * C17434 + C1745 * C17435) *
               C17436 +
           ((C4624 + C4625 - C4626 - C4627) * C17433 + C4644 * C17434 +
            C9988 * C17435) *
               C51356) *
              C51493 +
          (((C4626 - (C4625 + C4624) + C4627) * C17433 + C4646 * C17434 +
            C10185 * C17435) *
               C17436 +
           ((C4631 - (C4630 + C4629) + C4632) * C17433 + C4647 * C17434 +
            (C4426 - (C4427 + C4428) + C4429) * C17435) *
               C51356) *
              C51480 +
          ((C5153 * C17433 + C4645 * C17434 +
            (C4428 + C4427 - C4426 - C4429) * C17435) *
               C17436 +
           ((C5150 + C5149 - C5148 - C5151) * C17433 +
            (C4638 + C4637 - C4636 - C4639) * C17434 +
            (C2615 * C1722 + C2616 * C1720 -
             (C117 * C4262 + C51318 * C4263) * C1723 -
             (C117 * C4264 + C51318 * C4265) * C51260) *
                C17435) *
               C51356) *
              C1455) *
         C51186) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C454 + C5412 * C460 +
             C5416 * C992 + C5413 * C997) *
                C1722 +
            (C5414 * C127 + C5411 * C140 + C5415 * C461 + C5412 * C472 +
             C5416 * C998 + C5413 * C1007) *
                C1720 -
            (C5416 * C1236 + C5413 * C1240 + C5415 * C992 + C5412 * C997 +
             C5414 * C454 + C5411 * C460) *
                C1723 -
            (C5416 * C1241 + C5413 * C1248 + C5415 * C998 + C5412 * C1007 +
             C5414 * C461 + C5411 * C472) *
                C51260) *
               C51163 * C17436 +
           ((C22068 + C22069 + C22070) * C1722 +
            (C22071 + C22072 + C22073) * C1720 -
            (C22670 + C22671 + C22672) * C1723 -
            (C22673 + C22674 + C22675) * C51260) *
               C51163 * C51356) *
              C51493 +
          (((C22672 + C22671 + C22670) * C1723 -
            ((C22073 + C22072 + C22071) * C1720 +
             (C22070 + C22069 + C22068) * C1722) +
            (C22675 + C22674 + C22673) * C51260) *
               C51163 * C17436 +
           ((C22676 + C22677 + C22678) * C1723 -
            ((C22378 + C22379 + C22380) * C1720 +
             (C22381 + C22382 + C22383) * C1722) +
            (C22679 + C22680 + C22681) * C51260) *
               C51163 * C51356) *
              C51480 +
          (((C22383 + C22382 + C22381) * C1722 +
            (C22380 + C22379 + C22378) * C1720 -
            (C22678 + C22677 + C22676) * C1723 -
            (C22681 + C22680 + C22679) * C51260) *
               C51163 * C17436 +
           ((C22494 + C22495 + C22496) * C1722 +
            (C22497 + C22498 + C22499) * C1720 -
            (C5416 * C20814 + C5413 * C20815 + C5415 * C3630 + C5412 * C3632 +
             C5414 * C3237 + C5411 * C3241) *
                C1723 -
            (C5416 * C20816 + C5413 * C20817 + C5415 * C3633 + C5412 * C3636 +
             C5414 * C3242 + C5411 * C3249) *
                C51260) *
               C51163 * C51356) *
              C1455) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C1989 +
            (C117 * C127 + C51318 * C140) * C51494 -
            (C117 * C454 + C51318 * C460) * C1990 -
            (C117 * C461 + C51318 * C472) * C51483 +
            (C117 * C992 + C51318 * C997) * C1991 +
            (C117 * C998 + C51318 * C1007) * C1988) *
               C51163 * C20035 +
           (C5302 + C5303 - C5304 - C5305 + C5306 + C5307) * C51163 * C20036 +
           (C5308 + C5309 - C5310 - C5311 + C5312 + C5313) * C51163 * C20037 +
           (C21806 + C21807 - C21808 - C21809 + C21810 + C21811) * C51163 *
               C20038) *
              C1350 +
          ((C5304 - (C5303 + C5302) + C5305 - C5306 - C5307) * C51163 * C20035 +
           (C5310 - (C5309 + C5308) + C5311 - C5312 - C5313) * C51163 * C20036 +
           (C21808 - (C21807 + C21806) + C21809 - C21810 - C21811) * C51163 *
               C20037 +
           (C20531 * C1990 - (C3088 * C51494 + C3087 * C1989) +
            C20532 * C51483 - (C117 * C20732 + C51318 * C20733) * C1991 -
            (C117 * C20734 + C51318 * C20735) * C1988) *
               C51163 * C20038) *
              C51234) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C1989 +
             (C117 * C127 + C51318 * C140) * C51494 -
             (C117 * C454 + C51318 * C460) * C1990 -
             (C117 * C461 + C51318 * C472) * C51483 +
             (C117 * C992 + C51318 * C997) * C1991 +
             (C117 * C998 + C51318 * C1007) * C1988) *
                C17433 +
            (C1993 + C1994 - C1995 - C1996 + C1997 + C1998) * C17434 +
            (C1999 + C2000 - C2001 - C2002 + C2003 + C2004) * C17435) *
               C17436 +
           ((C5302 + C5303 - C5304 - C5305 + C5306 + C5307) * C17433 +
            (C4794 + C4795 - C4796 - C4797 + C4798 + C4799) * C17434 +
            (C10332 + C10333 - C10334 - C10335 + C10336 + C10337) * C17435) *
               C51356) *
              C1350 +
          (((C5304 - (C5303 + C5302) + C5305 - C5306 - C5307) * C17433 +
            (C4796 - (C4795 + C4794) + C4797 - C4798 - C4799) * C17434 +
            (C10334 - (C10333 + C10332) + C10335 - C10336 - C10337) * C17435) *
               C17436 +
           ((C5310 - (C5309 + C5308) + C5311 - C5312 - C5313) * C17433 +
            (C4802 - (C4801 + C4800) + C4803 - C4804 - C4805) * C17434 +
            (C2785 * C1990 - (C663 * C51494 + C662 * C1989) + C2786 * C51483 -
             (C117 * C3450 + C51318 * C3455) * C1991 -
             (C117 * C3456 + C51318 * C3459) * C1988) *
                C17435) *
               C51356) *
              C51234) *
         C51186) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C454 + C5412 * C460 +
             C5416 * C992 + C5413 * C997) *
                C1989 +
            (C5414 * C127 + C5411 * C140 + C5415 * C461 + C5412 * C472 +
             C5416 * C998 + C5413 * C1007) *
                C51494 -
            (C5416 * C1236 + C5413 * C1240 + C5415 * C992 + C5412 * C997 +
             C5414 * C454 + C5411 * C460) *
                C1990 -
            (C5416 * C1241 + C5413 * C1248 + C5415 * C998 + C5412 * C1007 +
             C5414 * C461 + C5411 * C472) *
                C51483 +
            (C5414 * C992 + C5411 * C997 + C5415 * C1236 + C5412 * C1240 +
             C5416 * C6389 + C5413 * C6392) *
                C1991 +
            (C5414 * C998 + C5411 * C1007 + C5415 * C1241 + C5412 * C1248 +
             C5416 * C6393 + C5413 * C6398) *
                C1988) *
               C51163 * C17436 +
           ((C22068 + C22069 + C22070) * C1989 +
            (C22071 + C22072 + C22073) * C51494 -
            (C22670 + C22671 + C22672) * C1990 -
            (C22673 + C22674 + C22675) * C51483 +
            (C22990 + C22991 + C22992) * C1991 +
            (C22993 + C22994 + C22995) * C1988) *
               C51163 * C51356) *
              C1350 +
          (((C22672 + C22671 + C22670) * C1990 -
            ((C22073 + C22072 + C22071) * C51494 +
             (C22070 + C22069 + C22068) * C1989) +
            (C22675 + C22674 + C22673) * C51483 -
            (C22992 + C22991 + C22990) * C1991 -
            (C22995 + C22994 + C22993) * C1988) *
               C51163 * C17436 +
           ((C22676 + C22677 + C22678) * C1990 -
            ((C22378 + C22379 + C22380) * C51494 +
             (C22381 + C22382 + C22383) * C1989) +
            (C22679 + C22680 + C22681) * C51483 -
            (C5416 * C22973 + C5413 * C22974 + C5415 * C3762 + C5412 * C3768 +
             C5414 * C3448 + C5411 * C3451) *
                C1991 -
            (C5416 * C22975 + C5413 * C22976 + C5415 * C3769 + C5412 * C3774 +
             C5414 * C3452 + C5411 * C3457) *
                C1988) *
               C51163 * C51356) *
              C51234) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C51318 * C126) * C118 +
                 (C117 * C127 + C51318 * C140) * C51248) *
                    C17433 +
                (C178 + C179) * C17434 + C188 * C17435) *
                   C17436 +
               ((C2617 + C2618) * C17433 + C2590 * C17434 + C2602 * C17435) *
                   C51356) *
                  C51218 * C113 -
              ((C351 * C17435 + C352 * C17434 + C2601 * C17433) * C51356 +
               (C191 * C17435 + (C181 + C180) * C17434 +
                (C179 + C178) * C17433) *
                   C17436) *
                  C51218 * C114 +
              ((C188 * C17433 + C189 * C17434 + (C185 + C184) * C17435) *
                   C17436 +
               (C2602 * C17433 + C8409 * C17434 + (C349 + C350) * C17435) *
                   C51356) *
                  C51218 * C115 -
              ((((C117 * C310 + C51318 * C317) * C51248 +
                 (C117 * C299 + C51318 * C311) * C118) *
                    C17435 +
                (C350 + C349) * C17434 + C351 * C17433) *
                   C51356 +
               ((C187 + C186) * C17435 + C190 * C17434 + C191 * C17433) *
                   C17436) *
                  C51218 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             ((((((C117 * C119 + C51318 * C126) * C118 +
                  (C117 * C127 + C51318 * C140) * C51248) *
                     C17433 +
                 (C178 + C179) * C17434 + C188 * C17435) *
                    C17436 +
                ((C2617 + C2618) * C17433 + C2590 * C17434 + C2602 * C17435) *
                    C51356) *
                   C622 -
               ((C2608 * C17435 + C2600 * C17434 + (C2620 + C2619) * C17433) *
                    C51356 +
                (C352 * C17435 + C2601 * C17434 + (C2618 + C2617) * C17433) *
                    C17436) *
                   C623 +
               ((C2949 * C17433 + C2595 * C17434 + C2603 * C17435) * C17436 +
                ((C2971 + C2970) * C17433 + C2956 * C17434 +
                 (C2623 + C2624) * C17435) *
                    C51356) *
                   C624) *
                  C51439 +
              (((C2590 * C17433 + C2602 * C17434 + C8409 * C17435) * C17436 +
                (C2595 * C17433 + C2603 * C17434 + (C670 + C671) * C17435) *
                    C51356) *
                   C623 -
               ((C351 * C17435 + C352 * C17434 + C2601 * C17433) * C51356 +
                (C191 * C17435 + (C181 + C180) * C17434 +
                 (C179 + C178) * C17433) *
                    C17436) *
                   C622 -
               ((((C117 * C746 + C51318 * C754) * C51248 +
                  (C117 * C742 + C51318 * C747) * C118) *
                     C17435 +
                 (C2624 + C2623) * C17434 + C2951 * C17433) *
                    C51356 +
                ((C671 + C670) * C17435 + C2608 * C17434 + C2600 * C17433) *
                    C17436) *
                   C624) *
                  C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C989 +
             (C117 * C127 + C51318 * C140) * C986 -
             (C117 * C454 + C51318 * C460) * C990 -
             (C117 * C461 + C51318 * C472) * C987 +
             (C117 * C992 + C51318 * C997) * C991 +
             (C117 * C998 + C51318 * C1007) * C988) *
                C17433 +
            (C1013 + C1014 - C1015 - C1016 + C1043 + C1044) * C17434 +
            (C1021 + C1022 - C1023 - C1024 + C1045 + C1046) * C17435) *
               C17436 +
           ((C3639 + C3640 - C3641 - C3642 + C3659 + C3660) * C17433 +
            (C3461 + C3462 - C3463 - C3464 + C3481 + C3482) * C17434 +
            (C9095 + C9096 - C9097 - C9098 + C9105 + C9106) * C17435) *
               C51356) *
              C51218 * C51439 +
          (((C1015 - (C1014 + C1013) + C1016 - C1043 - C1044) * C17433 +
            (C1023 - (C1022 + C1021) + C1024 - C1045 - C1046) * C17434 +
            (C1031 - (C1030 + C1029) + C1032 - C1047 - C1048) * C17435) *
               C17436 +
           ((C3463 - (C3462 + C3461) + C3464 - C3481 - C3482) * C17433 +
            (C9097 - (C9096 + C9095) + C9098 - C9105 - C9106) * C17434 +
            (C1615 * C990 - (C335 * C986 + C336 * C989) + C1616 * C987 -
             (C117 * C1149 + C51318 * C1156) * C991 -
             (C117 * C1157 + C51318 * C1161) * C988) *
                C17435) *
               C51356) *
              C51218 * C51191)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C118 +
            (C117 * C127 + C51318 * C140) * C51248) *
               C51163 * C20035 +
           (C2617 + C2618) * C51163 * C20036 + C2949 * C51163 * C20037 +
           (C2971 + C2970) * C51163 * C20038) *
              C51218 * C113 -
          (C2951 * C51163 * C20038 + C2600 * C51163 * C20037 +
           C2601 * C51163 * C20036 + (C179 + C178) * C51163 * C20035) *
              C51218 * C114 +
          (C188 * C51163 * C20035 + C2602 * C51163 * C20036 +
           C2603 * C51163 * C20037 + (C2623 + C2624) * C51163 * C20038) *
              C51218 * C115 -
          (((C117 * C746 + C51318 * C754) * C51248 +
            (C117 * C742 + C51318 * C747) * C118) *
               C51163 * C20038 +
           (C671 + C670) * C51163 * C20037 + C351 * C51163 * C20036 +
           C191 * C51163 * C20035) *
              C51218 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C118 +
             (C117 * C127 + C51318 * C140) * C51248) *
                C51163 * C20035 +
            (C2617 + C2618) * C51163 * C20036 + C20334 * C20037 +
            C20338 * C20038) *
               C622 -
           ((C3091 + C3090) * C51163 * C20038 + C3081 * C51163 * C20037 +
            (C2620 + C2619) * C51163 * C20036 +
            (C2618 + C2617) * C51163 * C20035) *
               C623 +
           (C20334 * C20035 + C20338 * C20036 +
            (C3090 + C3091) * C51163 * C20037 +
            ((C117 * C3072 + C51318 * C3076) * C118 +
             (C117 * C3075 + C51318 * C3078) * C51248) *
                C51163 * C20038) *
               C624) *
              C51439 +
          ((C2590 * C51163 * C20035 + C2595 * C51163 * C20036 +
            C2956 * C51163 * C20037 + (C2972 + C2973) * C51163 * C20038) *
               C623 -
           (C20336 * C20038 + C20337 * C20037 + C2601 * C51163 * C20036 +
            (C179 + C178) * C51163 * C20035) *
               C622 -
           (((C117 * C3073 + C51318 * C3077) * C51248 +
             (C117 * C3071 + C51318 * C3074) * C118) *
                C51163 * C20038 +
            (C2973 + C2972) * C51163 * C20037 + C20336 * C20036 +
            C20337 * C20035) *
               C624) *
              C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C989 +
            (C117 * C127 + C51318 * C140) * C986 -
            (C117 * C454 + C51318 * C460) * C990 -
            (C117 * C461 + C51318 * C472) * C987 +
            (C117 * C992 + C51318 * C997) * C991 +
            (C117 * C998 + C51318 * C1007) * C988) *
               C51163 * C20035 +
           (C3639 + C3640 - C3641 - C3642 + C3659 + C3660) * C51163 * C20036 +
           (C3647 + C3648 - C3649 - C3650 + C3661 + C3662) * C51163 * C20037 +
           (C2965 * C989 + C2964 * C986 - C3285 * C990 - C3286 * C987 +
            (C117 * C3630 + C51318 * C3632) * C991 +
            (C117 * C3633 + C51318 * C3636) * C988) *
               C51163 * C20038) *
              C51218 * C51439 +
          ((C1015 - (C1014 + C1013) + C1016 - C1043 - C1044) * C51163 * C20035 +
           (C3463 - (C3462 + C3461) + C3464 - C3481 - C3482) * C51163 * C20036 +
           (C3471 - (C3470 + C3469) + C3472 - C3483 - C3484) * C51163 * C20037 +
           (C3287 * C990 - (C2613 * C986 + C2614 * C989) + C3288 * C987 -
            (C117 * C3631 + C51318 * C3634) * C991 -
            (C117 * C3635 + C51318 * C3637) * C988) *
               C51163 * C20038) *
              C51218 * C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C454 + C5412 * C460 +
             C5416 * C992 + C5413 * C997) *
                C118 +
            (C5414 * C127 + C5411 * C140 + C5415 * C461 + C5412 * C472 +
             C5416 * C998 + C5413 * C1007) *
                C51248) *
               C51163 * C17436 +
           ((C5414 * C297 + C5411 * C307 + C5415 * C856 + C5412 * C864 +
             C5416 * C1146 + C5413 * C1150) *
                C118 +
            (C5414 * C306 + C5411 * C315 + C5415 * C865 + C5412 * C880 +
             C5416 * C1151 + C5413 * C1158) *
                C51248) *
               C51163 * C51356) *
              C51218 * C113 -
          (((C5642 + C5643 + C5644) * C51248 + (C5645 + C5646 + C5647) * C118) *
               C51163 * C51356 +
           ((C5459 + C5458 + C5457) * C51248 + (C5456 + C5455 + C5454) * C118) *
               C51163 * C17436) *
              C51218 * C114 +
          (((C5465 + C5464 + C5463) * C118 + (C5462 + C5461 + C5460) * C51248) *
               C51163 * C17436 +
           ((C5648 + C5649 + C5650) * C118 + (C5651 + C5652 + C5653) * C51248) *
               C51163 * C51356) *
              C51218 * C115 -
          (((C5416 * C1157 + C5413 * C1161 + C5415 * C871 + C5412 * C883 +
             C5414 * C300 + C5411 * C312) *
                C51248 +
            (C5416 * C1149 + C5413 * C1156 + C5415 * C859 + C5412 * C870 +
             C5414 * C294 + C5411 * C301) *
                C118) *
               C51163 * C51356 +
           ((C5471 + C5470 + C5469) * C51248 + (C5468 + C5467 + C5466) * C118) *
               C51163 * C17436) *
              C51218 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C5414 * C119 + C5411 * C126 + C5415 * C454 + C5412 * C460 +
              C5416 * C992 + C5413 * C997) *
                 C118 +
             (C5414 * C127 + C5411 * C140 + C5415 * C461 + C5412 * C472 +
              C5416 * C998 + C5413 * C1007) *
                 C51248) *
                C51163 * C17436 +
            ((C22068 + C22069 + C22070) * C118 +
             (C22071 + C22072 + C22073) * C51248) *
                C51163 * C51356) *
               C622 -
           (((C22378 + C22379 + C22380) * C51248 +
             (C22381 + C22382 + C22383) * C118) *
                C51163 * C51356 +
            ((C22073 + C22072 + C22071) * C51248 +
             (C22070 + C22069 + C22068) * C118) *
                C51163 * C17436) *
               C623 +
           (((C22383 + C22382 + C22381) * C118 +
             (C22380 + C22379 + C22378) * C51248) *
                C51163 * C17436 +
            ((C5414 * C745 + C5411 * C753 + C5415 * C3237 + C5412 * C3241 +
              C5416 * C3630 + C5413 * C3632) *
                 C118 +
             (C5414 * C752 + C5411 * C757 + C5415 * C3242 + C5412 * C3249 +
              C5416 * C3633 + C5413 * C3636) *
                 C51248) *
                C51163 * C51356) *
               C624) *
              C51439 +
          ((((C5647 + C5646 + C5645) * C118 +
             (C5644 + C5643 + C5642) * C51248) *
                C51163 * C17436 +
            ((C5994 + C5995 + C5996) * C118 +
             (C5997 + C5998 + C5999) * C51248) *
                C51163 * C51356) *
               C623 -
           (((C5642 + C5643 + C5644) * C51248 +
             (C5645 + C5646 + C5647) * C118) *
                C51163 * C51356 +
            ((C5459 + C5458 + C5457) * C51248 +
             (C5456 + C5455 + C5454) * C118) *
                C51163 * C17436) *
               C622 -
           (((C5416 * C3635 + C5413 * C3637 + C5415 * C3244 + C5412 * C3250 +
              C5414 * C750 + C5411 * C756) *
                 C51248 +
             (C5416 * C3631 + C5413 * C3634 + C5415 * C3238 + C5412 * C3243 +
              C5414 * C744 + C5411 * C751) *
                 C118) *
                C51163 * C51356 +
            ((C5999 + C5998 + C5997) * C51248 +
             (C5996 + C5995 + C5994) * C118) *
                C51163 * C17436) *
               C624) *
              C51191)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C454 + C5412 * C460 +
             C5416 * C992 + C5413 * C997) *
                C989 +
            (C5414 * C127 + C5411 * C140 + C5415 * C461 + C5412 * C472 +
             C5416 * C998 + C5413 * C1007) *
                C986 -
            (C5416 * C1236 + C5413 * C1240 + C5415 * C992 + C5412 * C997 +
             C5414 * C454 + C5411 * C460) *
                C990 -
            (C5416 * C1241 + C5413 * C1248 + C5415 * C998 + C5412 * C1007 +
             C5414 * C461 + C5411 * C472) *
                C987 +
            (C5414 * C992 + C5411 * C997 + C5415 * C1236 + C5412 * C1240 +
             C5416 * C6389 + C5413 * C6392) *
                C991 +
            (C5414 * C998 + C5411 * C1007 + C5415 * C1241 + C5412 * C1248 +
             C5416 * C6393 + C5413 * C6398) *
                C988) *
               C51163 * C17436 +
           ((C22068 + C22069 + C22070) * C989 +
            (C22071 + C22072 + C22073) * C986 -
            (C22670 + C22671 + C22672) * C990 -
            (C22673 + C22674 + C22675) * C987 +
            (C5414 * C1146 + C5411 * C1150 + C5415 * C3760 + C5412 * C3764 +
             C5416 * C6565 + C5413 * C6567) *
                C991 +
            (C5414 * C1151 + C5411 * C1158 + C5415 * C3765 + C5412 * C3772 +
             C5416 * C6568 + C5413 * C6571) *
                C988) *
               C51163 * C51356) *
              C51218 * C51439 +
          (((C5826 + C5825 + C5824) * C990 -
            ((C5459 + C5458 + C5457) * C986 + (C5456 + C5455 + C5454) * C989) +
            (C5829 + C5828 + C5827) * C987 - (C6416 + C6415 + C6414) * C991 -
            (C6419 + C6418 + C6417) * C988) *
               C51163 * C17436 +
           ((C7182 + C7183 + C7184) * C990 -
            ((C5642 + C5643 + C5644) * C986 + (C5645 + C5646 + C5647) * C989) +
            (C7185 + C7186 + C7187) * C987 -
            (C5416 * C6566 + C5413 * C6569 + C5415 * C3761 + C5412 * C3766 +
             C5414 * C1147 + C5411 * C1152) *
                C991 -
            (C5416 * C6570 + C5413 * C6572 + C5415 * C3767 + C5412 * C3773 +
             C5414 * C1153 + C5411 * C1159) *
                C988) *
               C51163 * C51356) *
              C51218 * C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((((C117 * C119 + C51318 * C126) * C118 +
                  (C117 * C127 + C51318 * C140) * C51248) *
                     C17433 +
                 (C178 + C179) * C17434 + C188 * C17435) *
                    C17436 +
                ((C2617 + C2618) * C17433 + C2590 * C17434 + C2602 * C17435) *
                    C51356) *
                   C51446 -
               ((C2608 * C17435 + C2600 * C17434 + (C2620 + C2619) * C17433) *
                    C51356 +
                (C352 * C17435 + C2601 * C17434 + (C2618 + C2617) * C17433) *
                    C17436) *
                   C51234) *
                  C291 +
              (((C2590 * C17433 + C2602 * C17434 + C8409 * C17435) * C17436 +
                (C2595 * C17433 + C2603 * C17434 + (C670 + C671) * C17435) *
                    C51356) *
                   C51234 -
               ((C351 * C17435 + C352 * C17434 + C2601 * C17433) * C51356 +
                (C191 * C17435 + (C181 + C180) * C17434 +
                 (C179 + C178) * C17433) *
                    C17436) *
                   C51446) *
                  C292 +
              (((C188 * C17433 + C189 * C17434 + (C185 + C184) * C17435) *
                    C17436 +
                (C2602 * C17433 + C8409 * C17434 + (C349 + C350) * C17435) *
                    C51356) *
                   C51446 -
               ((((C117 * C640 + C51318 * C646) * C51248 +
                  (C117 * C631 + C51318 * C641) * C118) *
                     C17435 +
                 (C671 + C670) * C17434 + C2608 * C17433) *
                    C51356 +
                ((C350 + C349) * C17435 + C351 * C17434 + C352 * C17433) *
                    C17436) *
                   C51234) *
                  C293) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C51318 * C126) * C118 +
                 (C117 * C127 + C51318 * C140) * C51248) *
                    C17433 +
                (C178 + C179) * C17434 + C188 * C17435) *
                   C17436 +
               ((C2617 + C2618) * C17433 + C2590 * C17434 + C2602 * C17435) *
                   C51356) *
                  C737 -
              ((C2608 * C17435 + C2600 * C17434 + (C2620 + C2619) * C17433) *
                   C51356 +
               (C352 * C17435 + C2601 * C17434 + (C2618 + C2617) * C17433) *
                   C17436) *
                  C738 +
              ((C2949 * C17433 + C2595 * C17434 + C2603 * C17435) * C17436 +
               ((C2971 + C2970) * C17433 + C2956 * C17434 +
                (C2623 + C2624) * C17435) *
                   C51356) *
                  C739 -
              ((((C117 * C2943 + C51318 * C2947) * C51248 +
                 (C117 * C2938 + C51318 * C2944) * C118) *
                    C17435 +
                (C2973 + C2972) * C17434 + (C3091 + C3090) * C17433) *
                   C51356 +
               ((C2624 + C2623) * C17435 + C2951 * C17434 + C3081 * C17433) *
                   C17436) *
                  C740) *
             C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C989 +
             (C117 * C127 + C51318 * C140) * C986 -
             (C117 * C454 + C51318 * C460) * C990 -
             (C117 * C461 + C51318 * C472) * C987 +
             (C117 * C992 + C51318 * C997) * C991 +
             (C117 * C998 + C51318 * C1007) * C988) *
                C17433 +
            (C1013 + C1014 - C1015 - C1016 + C1043 + C1044) * C17434 +
            (C1021 + C1022 - C1023 - C1024 + C1045 + C1046) * C17435) *
               C17436 +
           ((C3639 + C3640 - C3641 - C3642 + C3659 + C3660) * C17433 +
            (C3461 + C3462 - C3463 - C3464 + C3481 + C3482) * C17434 +
            (C9095 + C9096 - C9097 - C9098 + C9105 + C9106) * C17435) *
               C51356) *
              C51446 +
          (((C3641 - (C3640 + C3639) + C3642 - C3659 - C3660) * C17433 +
            (C3463 - (C3462 + C3461) + C3464 - C3481 - C3482) * C17434 +
            (C9097 - (C9096 + C9095) + C9098 - C9105 - C9106) * C17435) *
               C17436 +
           ((C3649 - (C3648 + C3647) + C3650 - C3661 - C3662) * C17433 +
            (C3471 - (C3470 + C3469) + C3472 - C3483 - C3484) * C17434 +
            (C2785 * C990 - (C663 * C986 + C662 * C989) + C2786 * C987 -
             (C117 * C3450 + C51318 * C3455) * C991 -
             (C117 * C3456 + C51318 * C3459) * C988) *
                C17435) *
               C51356) *
              C51234) *
         C51186) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C118 +
             (C117 * C127 + C51318 * C140) * C51248) *
                C51163 * C20035 +
            (C2617 + C2618) * C51163 * C20036 + C2949 * C51163 * C20037 +
            (C2971 + C2970) * C51163 * C20038) *
               C51446 -
           ((C3091 + C3090) * C51163 * C20038 + C3081 * C51163 * C20037 +
            (C2620 + C2619) * C51163 * C20036 +
            (C2618 + C2617) * C51163 * C20035) *
               C51234) *
              C291 +
          ((C2590 * C51163 * C20035 + C2595 * C51163 * C20036 +
            C2956 * C51163 * C20037 + (C2972 + C2973) * C51163 * C20038) *
               C51234 -
           (C2951 * C51163 * C20038 + C2600 * C51163 * C20037 +
            C2601 * C51163 * C20036 + (C179 + C178) * C51163 * C20035) *
               C51446) *
              C292 +
          ((C188 * C51163 * C20035 + C2602 * C51163 * C20036 +
            C2603 * C51163 * C20037 + (C2623 + C2624) * C51163 * C20038) *
               C51446 -
           (((C117 * C2943 + C51318 * C2947) * C51248 +
             (C117 * C2938 + C51318 * C2944) * C118) *
                C51163 * C20038 +
            (C2624 + C2623) * C51163 * C20037 + C2608 * C51163 * C20036 +
            C352 * C51163 * C20035) *
               C51234) *
              C293)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C118 +
            (C117 * C127 + C51318 * C140) * C51248) *
               C51163 * C20035 +
           (C2617 + C2618) * C51163 * C20036 + C20334 * C20037 +
           C20338 * C20038) *
              C737 -
          (C20415 * C20038 + C20410 * C20037 +
           (C2620 + C2619) * C51163 * C20036 +
           (C2618 + C2617) * C51163 * C20035) *
              C738 +
          (C20334 * C20035 + C20338 * C20036 +
           (C3090 + C3091) * C51163 * C20037 +
           (C20418 + C20419) * C51163 * C20038) *
              C739 -
          (((C117 * C20405 + C51318 * C20407) * C51248 +
            (C117 * C20404 + C51318 * C20406) * C118) *
               C51163 * C20038 +
           (C20419 + C20418) * C51163 * C20037 + C20415 * C20036 +
           C20410 * C20035) *
              C740) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C989 +
            (C117 * C127 + C51318 * C140) * C986 -
            (C117 * C454 + C51318 * C460) * C990 -
            (C117 * C461 + C51318 * C472) * C987 +
            (C117 * C992 + C51318 * C997) * C991 +
            (C117 * C998 + C51318 * C1007) * C988) *
               C51163 * C20035 +
           (C3639 + C3640 - C3641 - C3642 + C3659 + C3660) * C51163 * C20036 +
           (C3647 + C3648 - C3649 - C3650 + C3661 + C3662) * C51163 * C20037 +
           (C20737 + C20738 - C20739 - C20740 + C20747 + C20748) * C51163 *
               C20038) *
              C51446 +
          ((C3641 - (C3640 + C3639) + C3642 - C3659 - C3660) * C51163 * C20035 +
           (C3649 - (C3648 + C3647) + C3650 - C3661 - C3662) * C51163 * C20036 +
           (C20739 - (C20738 + C20737) + C20740 - C20747 - C20748) * C51163 *
               C20037 +
           (C20531 * C990 - (C3088 * C986 + C3087 * C989) + C20532 * C987 -
            (C117 * C20732 + C51318 * C20733) * C991 -
            (C117 * C20734 + C51318 * C20735) * C988) *
               C51163 * C20038) *
              C51234) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((((C5414 * C119 + C5411 * C126 + C5415 * C454 +
                                  C5412 * C460 + C5416 * C992 + C5413 * C997) *
                                     C118 +
                                 (C5414 * C127 + C5411 * C140 + C5415 * C461 +
                                  C5412 * C472 + C5416 * C998 + C5413 * C1007) *
                                     C51248) *
                                    C51163 * C17436 +
                                ((C22068 + C22069 + C22070) * C118 +
                                 (C22071 + C22072 + C22073) * C51248) *
                                    C51163 * C51356) *
                                   C51446 -
                               (((C5416 * C3452 + C5413 * C3457 + C5415 * C873 +
                                  C5412 * C884 + C5414 * C633 + C5411 * C642) *
                                     C51248 +
                                 (C5416 * C3448 + C5413 * C3451 + C5415 * C860 +
                                  C5412 * C872 + C5414 * C627 + C5411 * C632) *
                                     C118) *
                                    C51163 * C51356 +
                                ((C22073 + C22072 + C22071) * C51248 +
                                 (C22070 + C22069 + C22068) * C118) *
                                    C51163 * C17436) *
                                   C51234) *
                                  C291 +
                              ((((C5647 + C5646 + C5645) * C118 +
                                 (C5644 + C5643 + C5642) * C51248) *
                                    C51163 * C17436 +
                                ((C5994 + C5995 + C5996) * C118 +
                                 (C5997 + C5998 + C5999) * C51248) *
                                    C51163 * C51356) *
                                   C51234 -
                               (((C5642 + C5643 + C5644) * C51248 +
                                 (C5645 + C5646 + C5647) * C118) *
                                    C51163 * C51356 +
                                ((C5459 + C5458 + C5457) * C51248 +
                                 (C5456 + C5455 + C5454) * C118) *
                                    C51163 * C17436) *
                                   C51446) *
                                  C292 +
                              ((((C5465 + C5464 + C5463) * C118 +
                                 (C5462 + C5461 + C5460) * C51248) *
                                    C51163 * C17436 +
                                ((C5648 + C5649 + C5650) * C118 +
                                 (C5651 + C5652 + C5653) * C51248) *
                                    C51163 * C51356) *
                                   C51446 -
                               (((C5416 * C3456 + C5413 * C3459 + C5415 * C877 +
                                  C5412 * C886 + C5414 * C637 + C5411 * C644) *
                                     C51248 +
                                 (C5416 * C3450 + C5413 * C3455 + C5415 * C862 +
                                  C5412 * C876 + C5414 * C629 + C5411 * C636) *
                                     C118) *
                                    C51163 * C51356 +
                                ((C5653 + C5652 + C5651) * C51248 +
                                 (C5650 + C5649 + C5648) * C118) *
                                    C51163 * C17436) *
                                   C51234) *
                                  C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C454 + C5412 * C460 +
             C5416 * C992 + C5413 * C997) *
                C118 +
            (C5414 * C127 + C5411 * C140 + C5415 * C461 + C5412 * C472 +
             C5416 * C998 + C5413 * C1007) *
                C51248) *
               C51163 * C17436 +
           ((C22068 + C22069 + C22070) * C118 +
            (C22071 + C22072 + C22073) * C51248) *
               C51163 * C51356) *
              C737 -
          (((C22378 + C22379 + C22380) * C51248 +
            (C22381 + C22382 + C22383) * C118) *
               C51163 * C51356 +
           ((C22073 + C22072 + C22071) * C51248 +
            (C22070 + C22069 + C22068) * C118) *
               C51163 * C17436) *
              C738 +
          (((C22383 + C22382 + C22381) * C118 +
            (C22380 + C22379 + C22378) * C51248) *
               C51163 * C17436 +
           ((C22494 + C22495 + C22496) * C118 +
            (C22497 + C22498 + C22499) * C51248) *
               C51163 * C51356) *
              C739 -
          (((C5416 * C20734 + C5413 * C20735 + C5415 * C3246 + C5412 * C3251 +
             C5414 * C2940 + C5411 * C2945) *
                C51248 +
            (C5416 * C20732 + C5413 * C20733 + C5415 * C3239 + C5412 * C3245 +
             C5414 * C2936 + C5411 * C2939) *
                C118) *
               C51163 * C51356 +
           ((C22499 + C22498 + C22497) * C51248 +
            (C22496 + C22495 + C22494) * C118) *
               C51163 * C17436) *
              C740) *
         C51186) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C454 + C5412 * C460 +
             C5416 * C992 + C5413 * C997) *
                C989 +
            (C5414 * C127 + C5411 * C140 + C5415 * C461 + C5412 * C472 +
             C5416 * C998 + C5413 * C1007) *
                C986 -
            (C5416 * C1236 + C5413 * C1240 + C5415 * C992 + C5412 * C997 +
             C5414 * C454 + C5411 * C460) *
                C990 -
            (C5416 * C1241 + C5413 * C1248 + C5415 * C998 + C5412 * C1007 +
             C5414 * C461 + C5411 * C472) *
                C987 +
            (C5414 * C992 + C5411 * C997 + C5415 * C1236 + C5412 * C1240 +
             C5416 * C6389 + C5413 * C6392) *
                C991 +
            (C5414 * C998 + C5411 * C1007 + C5415 * C1241 + C5412 * C1248 +
             C5416 * C6393 + C5413 * C6398) *
                C988) *
               C51163 * C17436 +
           ((C22068 + C22069 + C22070) * C989 +
            (C22071 + C22072 + C22073) * C986 -
            (C22670 + C22671 + C22672) * C990 -
            (C22673 + C22674 + C22675) * C987 +
            (C22990 + C22991 + C22992) * C991 +
            (C22993 + C22994 + C22995) * C988) *
               C51163 * C51356) *
              C51446 +
          (((C22672 + C22671 + C22670) * C990 -
            ((C22073 + C22072 + C22071) * C986 +
             (C22070 + C22069 + C22068) * C989) +
            (C22675 + C22674 + C22673) * C987 -
            (C22992 + C22991 + C22990) * C991 -
            (C22995 + C22994 + C22993) * C988) *
               C51163 * C17436 +
           ((C22676 + C22677 + C22678) * C990 -
            ((C22378 + C22379 + C22380) * C986 +
             (C22381 + C22382 + C22383) * C989) +
            (C22679 + C22680 + C22681) * C987 -
            (C5416 * C22973 + C5413 * C22974 + C5415 * C3762 + C5412 * C3768 +
             C5414 * C3448 + C5411 * C3451) *
                C991 -
            (C5416 * C22975 + C5413 * C22976 + C5415 * C3769 + C5412 * C3774 +
             C5414 * C3452 + C5411 * C3457) *
                C988) *
               C51163 * C51356) *
              C51234) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C51318 * C126) * C452 +
                 (C117 * C127 + C51318 * C140) * C51448 -
                 (C117 * C454 + C51318 * C460) * C453 -
                 (C117 * C461 + C51318 * C472) * C51260) *
                    C17433 +
                (C479 + C480 - C513 - C514) * C17434 + C523 * C17435) *
                   C17436 +
               ((C3254 + C3255 - C3289 - C3290) * C17433 + C4273 * C17434 +
                C8558 * C17435) *
                   C51356) *
                  C51218 * C291 +
              (((C513 - (C480 + C479) + C514) * C17433 +
                (C515 - (C486 + C485) + C516) * C17434 +
                (C517 - (C492 + C491) + C518) * C17435) *
                   C17436 +
               (C4274 * C17433 + C9839 * C17434 +
                (C1621 - (C1607 + C1608) + C1622) * C17435) *
                   C51356) *
                  C51218 * C292 +
              ((C523 * C17433 + C524 * C17434 +
                (C500 + C499 - C519 - C520) * C17435) *
                   C17436 +
               (C8558 * C17433 + (C1608 + C1607 - C1621 - C1622) * C17434 +
                (C341 * C452 + C342 * C51448 -
                 (C117 * C1588 + C51318 * C1589) * C453 -
                 (C117 * C1590 + C51318 * C1591) * C51260) *
                    C17435) *
                   C51356) *
                  C51218 * C293) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C51318 * C126) * C452 +
                 (C117 * C127 + C51318 * C140) * C51448 -
                 (C117 * C454 + C51318 * C460) * C453 -
                 (C117 * C461 + C51318 * C472) * C51260) *
                    C17433 +
                (C479 + C480 - C513 - C514) * C17434 + C523 * C17435) *
                   C17436 +
               ((C3254 + C3255 - C3289 - C3290) * C17433 + C4273 * C17434 +
                C8558 * C17435) *
                   C51356) *
                  C622 +
              (((C3289 - (C3255 + C3254) + C3290) * C17433 + C4274 * C17434 +
                C9839 * C17435) *
                   C17436 +
               ((C3291 - (C3261 + C3260) + C3292) * C17433 + C4275 * C17434 +
                (C2789 - (C2779 + C2780) + C2790) * C17435) *
                   C51356) *
                  C623 +
              ((C3300 * C17433 + C3293 * C17434 +
                (C2780 + C2779 - C2789 - C2790) * C17435) *
                   C17436 +
               ((C3270 + C3269 - C3294 - C3295) * C17433 +
                (C3276 + C3275 - C3296 - C3297) * C17434 +
                (C2615 * C452 + C2616 * C51448 -
                 (C117 * C4262 + C51318 * C4263) * C453 -
                 (C117 * C4264 + C51318 * C4265) * C51260) *
                    C17435) *
                   C51356) *
                  C624) *
             C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C1232 +
            (C117 * C127 + C51318 * C140) * C1228 -
            (C117 * C454 + C51318 * C460) * C1233 -
            (C117 * C461 + C51318 * C472) * C1229 +
            (C117 * C992 + C51318 * C997) * C1234 +
            (C117 * C998 + C51318 * C1007) * C1230 -
            (C117 * C1236 + C51318 * C1240) * C1235 -
            (C117 * C1241 + C51318 * C1248) * C1231) *
               C17433 +
           (C168 * C1232 + C169 * C1228 - C503 * C1233 - C504 * C1229 +
            C1037 * C1234 + C1038 * C1230 -
            (C117 * C1237 + C51318 * C1242) * C1235 -
            (C117 * C1243 + C51318 * C1249) * C1231) *
               C17434 +
           (C170 * C1232 + C171 * C1228 - C506 * C1233 - C507 * C1229 +
            C1039 * C1234 + C1040 * C1230 -
            (C117 * C1238 + C51318 * C1244) * C1235 -
            (C117 * C1245 + C51318 * C1250) * C1231) *
               C17435) *
              C17436 +
          ((C2609 * C1232 + C2610 * C1228 - C3279 * C1233 - C3280 * C1229 +
            C3655 * C1234 + C3656 * C1230 -
            (C117 * C3760 + C51318 * C3764) * C1235 -
            (C117 * C3765 + C51318 * C3772) * C1231) *
               C17433 +
           (C340 * C1232 + C339 * C1228 - C1611 * C1233 - C1612 * C1229 +
            C3477 * C1234 + C3478 * C1230 -
            (C117 * C3761 + C51318 * C3766) * C1235 -
            (C117 * C3767 + C51318 * C3773) * C1231) *
               C17434 +
           (C338 * C1232 + C337 * C1228 - C1613 * C1233 - C1614 * C1229 +
            C9103 * C1234 + C9104 * C1230 -
            (C117 * C7165 + C51318 * C7166) * C1235 -
            (C117 * C7167 + C51318 * C7168) * C1231) *
               C17435) *
              C51356) *
         C51218 * C51186) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C452 +
            (C117 * C127 + C51318 * C140) * C51448 -
            (C117 * C454 + C51318 * C460) * C453 -
            (C117 * C461 + C51318 * C472) * C51260) *
               C51163 * C20035 +
           (C3254 + C3255 - C3289 - C3290) * C51163 * C20036 +
           C3300 * C51163 * C20037 +
           (C3270 + C3269 - C3294 - C3295) * C51163 * C20038) *
              C51218 * C291 +
          ((C513 - (C480 + C479) + C514) * C51163 * C20035 +
           C4274 * C51163 * C20036 + C4275 * C51163 * C20037 +
           (C3296 - (C3275 + C3276) + C3297) * C51163 * C20038) *
              C51218 * C292 +
          (C523 * C51163 * C20035 + C8558 * C51163 * C20036 +
           (C2780 + C2779 - C2789 - C2790) * C51163 * C20037 +
           (C2615 * C452 + C2616 * C51448 -
            (C117 * C4262 + C51318 * C4263) * C453 -
            (C117 * C4264 + C51318 * C4265) * C51260) *
               C51163 * C20038) *
              C51218 * C293)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C452 +
            (C117 * C127 + C51318 * C140) * C51448 -
            (C117 * C454 + C51318 * C460) * C453 -
            (C117 * C461 + C51318 * C472) * C51260) *
               C51163 * C20035 +
           (C3254 + C3255 - C3289 - C3290) * C51163 * C20036 + C20522 * C20037 +
           C20536 * C20038) *
              C622 +
          ((C3289 - (C3255 + C3254) + C3290) * C51163 * C20035 +
           (C3291 - (C3261 + C3260) + C3292) * C51163 * C20036 +
           (C3294 - (C3269 + C3270) + C3295) * C51163 * C20037 +
           (C20534 - (C20526 + C20527) + C20535) * C51163 * C20038) *
              C623 +
          (C20522 * C20035 + C20536 * C20036 +
           (C20527 + C20526 - C20534 - C20535) * C51163 * C20037 +
           (C20416 * C452 + C20417 * C51448 -
            (C117 * C20517 + C51318 * C20518) * C453 -
            (C117 * C20519 + C51318 * C20520) * C51260) *
               C51163 * C20038) *
              C624) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117 * C119 + C51318 * C126) * C1232 +
           (C117 * C127 + C51318 * C140) * C1228 -
           (C117 * C454 + C51318 * C460) * C1233 -
           (C117 * C461 + C51318 * C472) * C1229 +
           (C117 * C992 + C51318 * C997) * C1234 +
           (C117 * C998 + C51318 * C1007) * C1230 -
           (C117 * C1236 + C51318 * C1240) * C1235 -
           (C117 * C1241 + C51318 * C1248) * C1231) *
              C51163 * C20035 +
          (C2609 * C1232 + C2610 * C1228 - C3279 * C1233 - C3280 * C1229 +
           C3655 * C1234 + C3656 * C1230 -
           (C117 * C3760 + C51318 * C3764) * C1235 -
           (C117 * C3765 + C51318 * C3772) * C1231) *
              C51163 * C20036 +
          (C2611 * C1232 + C2612 * C1228 - C3282 * C1233 - C3283 * C1229 +
           C3657 * C1234 + C3658 * C1230 -
           (C117 * C3762 + C51318 * C3768) * C1235 -
           (C117 * C3769 + C51318 * C3774) * C1231) *
              C51163 * C20037 +
          (C2965 * C1232 + C2964 * C1228 - C3285 * C1233 - C3286 * C1229 +
           C20745 * C1234 + C20746 * C1230 -
           (C117 * C20814 + C51318 * C20815) * C1235 -
           (C117 * C20816 + C51318 * C20817) * C1231) *
              C51163 * C20038) *
         C51218 * C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C454 + C5412 * C460 +
             C5416 * C992 + C5413 * C997) *
                C452 +
            (C5414 * C127 + C5411 * C140 + C5415 * C461 + C5412 * C472 +
             C5416 * C998 + C5413 * C1007) *
                C51448 -
            (C5416 * C1236 + C5413 * C1240 + C5415 * C992 + C5412 * C997 +
             C5414 * C454 + C5411 * C460) *
                C453 -
            (C5416 * C1241 + C5413 * C1248 + C5415 * C998 + C5412 * C1007 +
             C5414 * C461 + C5411 * C472) *
                C51260) *
               C51163 * C17436 +
           ((C22068 + C22069 + C22070) * C452 +
            (C22071 + C22072 + C22073) * C51448 -
            (C5416 * C3760 + C5413 * C3764 + C5415 * C1146 + C5412 * C1150 +
             C5414 * C856 + C5411 * C864) *
                C453 -
            (C5416 * C3765 + C5413 * C3772 + C5415 * C1151 + C5412 * C1158 +
             C5414 * C865 + C5411 * C880) *
                C51260) *
               C51163 * C51356) *
              C51218 * C291 +
          (((C5826 + C5825 + C5824) * C453 -
            ((C5459 + C5458 + C5457) * C51448 +
             (C5456 + C5455 + C5454) * C452) +
            (C5829 + C5828 + C5827) * C51260) *
               C51163 * C17436 +
           ((C7182 + C7183 + C7184) * C453 -
            ((C5642 + C5643 + C5644) * C51448 +
             (C5645 + C5646 + C5647) * C452) +
            (C7185 + C7186 + C7187) * C51260) *
               C51163 * C51356) *
              C51218 * C292 +
          (((C5465 + C5464 + C5463) * C452 + (C5462 + C5461 + C5460) * C51448 -
            (C5832 + C5831 + C5830) * C453 - (C5835 + C5834 + C5833) * C51260) *
               C51163 * C17436 +
           ((C5648 + C5649 + C5650) * C452 + (C5651 + C5652 + C5653) * C51448 -
            (C5416 * C7165 + C5413 * C7166 + C5415 * C1148 + C5412 * C1154 +
             C5414 * C858 + C5411 * C868) *
                C453 -
            (C5416 * C7167 + C5413 * C7168 + C5415 * C1155 + C5412 * C1160 +
             C5414 * C869 + C5411 * C882) *
                C51260) *
               C51163 * C51356) *
              C51218 * C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C454 + C5412 * C460 +
             C5416 * C992 + C5413 * C997) *
                C452 +
            (C5414 * C127 + C5411 * C140 + C5415 * C461 + C5412 * C472 +
             C5416 * C998 + C5413 * C1007) *
                C51448 -
            (C5416 * C1236 + C5413 * C1240 + C5415 * C992 + C5412 * C997 +
             C5414 * C454 + C5411 * C460) *
                C453 -
            (C5416 * C1241 + C5413 * C1248 + C5415 * C998 + C5412 * C1007 +
             C5414 * C461 + C5411 * C472) *
                C51260) *
               C51163 * C17436 +
           ((C22068 + C22069 + C22070) * C452 +
            (C22071 + C22072 + C22073) * C51448 -
            (C22670 + C22671 + C22672) * C453 -
            (C22673 + C22674 + C22675) * C51260) *
               C51163 * C51356) *
              C622 +
          (((C22672 + C22671 + C22670) * C453 -
            ((C22073 + C22072 + C22071) * C51448 +
             (C22070 + C22069 + C22068) * C452) +
            (C22675 + C22674 + C22673) * C51260) *
               C51163 * C17436 +
           ((C22676 + C22677 + C22678) * C453 -
            ((C22378 + C22379 + C22380) * C51448 +
             (C22381 + C22382 + C22383) * C452) +
            (C22679 + C22680 + C22681) * C51260) *
               C51163 * C51356) *
              C623 +
          (((C22383 + C22382 + C22381) * C452 +
            (C22380 + C22379 + C22378) * C51448 -
            (C22678 + C22677 + C22676) * C453 -
            (C22681 + C22680 + C22679) * C51260) *
               C51163 * C17436 +
           ((C22494 + C22495 + C22496) * C452 +
            (C22497 + C22498 + C22499) * C51448 -
            (C5416 * C20814 + C5413 * C20815 + C5415 * C3630 + C5412 * C3632 +
             C5414 * C3237 + C5411 * C3241) *
                C453 -
            (C5416 * C20816 + C5413 * C20817 + C5415 * C3633 + C5412 * C3636 +
             C5414 * C3242 + C5411 * C3249) *
                C51260) *
               C51163 * C51356) *
              C624) *
         C51186) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C5414 * C119 + C5411 * C126 + C5415 * C454 + C5412 * C460 +
            C5416 * C992 + C5413 * C997) *
               C1232 +
           (C5414 * C127 + C5411 * C140 + C5415 * C461 + C5412 * C472 +
            C5416 * C998 + C5413 * C1007) *
               C1228 -
           (C5416 * C1236 + C5413 * C1240 + C5415 * C992 + C5412 * C997 +
            C5414 * C454 + C5411 * C460) *
               C1233 -
           (C5416 * C1241 + C5413 * C1248 + C5415 * C998 + C5412 * C1007 +
            C5414 * C461 + C5411 * C472) *
               C1229 +
           (C5414 * C992 + C5411 * C997 + C5415 * C1236 + C5412 * C1240 +
            C5416 * C6389 + C5413 * C6392) *
               C1234 +
           (C5414 * C998 + C5411 * C1007 + C5415 * C1241 + C5412 * C1248 +
            C5416 * C6393 + C5413 * C6398) *
               C1230 -
           (C5416 * C6671 + C5413 * C6673 + C5415 * C6389 + C5412 * C6392 +
            C5414 * C1236 + C5411 * C1240) *
               C1235 -
           (C5416 * C6674 + C5413 * C6677 + C5415 * C6393 + C5412 * C6398 +
            C5414 * C1241 + C5411 * C1248) *
               C1231) *
              C51163 * C17436 +
          ((C22068 + C22069 + C22070) * C1232 +
           (C22071 + C22072 + C22073) * C1228 -
           (C22670 + C22671 + C22672) * C1233 -
           (C22673 + C22674 + C22675) * C1229 +
           (C22990 + C22991 + C22992) * C1234 +
           (C22993 + C22994 + C22995) * C1230 -
           (C5416 * C23093 + C5413 * C23094 + C5415 * C6565 + C5412 * C6567 +
            C5414 * C3760 + C5411 * C3764) *
               C1235 -
           (C5416 * C23095 + C5413 * C23096 + C5415 * C6568 + C5412 * C6571 +
            C5414 * C3765 + C5411 * C3772) *
               C1231) *
              C51163 * C51356) *
         C51218 * C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C1722 +
            (C117 * C127 + C51318 * C140) * C1720 -
            (C117 * C454 + C51318 * C460) * C1723 -
            (C117 * C461 + C51318 * C472) * C51260) *
               C51163 * C20035 +
           (C4624 + C4625 - C4626 - C4627) * C51163 * C20036 +
           C5153 * C51163 * C20037 +
           (C5150 + C5149 - C5148 - C5151) * C51163 * C20038) *
              C51218 * C51492 +
          ((C1727 - (C1726 + C1725) + C1728) * C51163 * C20035 +
           C4646 * C51163 * C20036 + C4647 * C51163 * C20037 +
           (C4636 - (C4637 + C4638) + C4639) * C51163 * C20038) *
              C51218 * C51477 +
          (C1745 * C51163 * C20035 + C9988 * C51163 * C20036 +
           (C4428 + C4427 - C4426 - C4429) * C51163 * C20037 +
           (C2615 * C1722 + C2616 * C1720 -
            (C117 * C4262 + C51318 * C4263) * C1723 -
            (C117 * C4264 + C51318 * C4265) * C51260) *
               C51163 * C20038) *
              C51218 * C1354)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C1722 +
             (C117 * C127 + C51318 * C140) * C1720 -
             (C117 * C454 + C51318 * C460) * C1723 -
             (C117 * C461 + C51318 * C472) * C51260) *
                C17433 +
            (C1725 + C1726 - C1727 - C1728) * C17434 + C1745 * C17435) *
               C17436 +
           ((C4624 + C4625 - C4626 - C4627) * C17433 + C4644 * C17434 +
            C9988 * C17435) *
               C51356) *
              C51218 * C51492 +
          (((C1727 - (C1726 + C1725) + C1728) * C17433 +
            (C1731 - (C1730 + C1729) + C1732) * C17434 +
            (C1735 - (C1734 + C1733) + C1736) * C17435) *
               C17436 +
           (C4646 * C17433 + C10185 * C17434 +
            (C1885 - (C1886 + C1887) + C1888) * C17435) *
               C51356) *
              C51218 * C51477 +
          ((C1745 * C17433 + C1746 * C17434 +
            (C1739 + C1738 - C1737 - C1740) * C17435) *
               C17436 +
           (C9988 * C17433 + (C1887 + C1886 - C1885 - C1888) * C17434 +
            (C341 * C1722 + C342 * C1720 -
             (C117 * C1588 + C51318 * C1589) * C1723 -
             (C117 * C1590 + C51318 * C1591) * C51260) *
                C17435) *
               C51356) *
              C51218 * C1354)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C454 + C5412 * C460 +
             C5416 * C992 + C5413 * C997) *
                C1722 +
            (C5414 * C127 + C5411 * C140 + C5415 * C461 + C5412 * C472 +
             C5416 * C998 + C5413 * C1007) *
                C1720 -
            (C5416 * C1236 + C5413 * C1240 + C5415 * C992 + C5412 * C997 +
             C5414 * C454 + C5411 * C460) *
                C1723 -
            (C5416 * C1241 + C5413 * C1248 + C5415 * C998 + C5412 * C1007 +
             C5414 * C461 + C5411 * C472) *
                C51260) *
               C51163 * C17436 +
           ((C22068 + C22069 + C22070) * C1722 +
            (C22071 + C22072 + C22073) * C1720 -
            (C22670 + C22671 + C22672) * C1723 -
            (C22673 + C22674 + C22675) * C51260) *
               C51163 * C51356) *
              C51218 * C51492 +
          (((C5826 + C5825 + C5824) * C1723 -
            ((C5459 + C5458 + C5457) * C1720 +
             (C5456 + C5455 + C5454) * C1722) +
            (C5829 + C5828 + C5827) * C51260) *
               C51163 * C17436 +
           ((C7182 + C7183 + C7184) * C1723 -
            ((C5642 + C5643 + C5644) * C1720 +
             (C5645 + C5646 + C5647) * C1722) +
            (C7185 + C7186 + C7187) * C51260) *
               C51163 * C51356) *
              C51218 * C51477 +
          (((C5465 + C5464 + C5463) * C1722 + (C5462 + C5461 + C5460) * C1720 -
            (C5832 + C5831 + C5830) * C1723 -
            (C5835 + C5834 + C5833) * C51260) *
               C51163 * C17436 +
           ((C5648 + C5649 + C5650) * C1722 + (C5651 + C5652 + C5653) * C1720 -
            (C5416 * C7165 + C5413 * C7166 + C5415 * C1148 + C5412 * C1154 +
             C5414 * C858 + C5411 * C868) *
                C1723 -
            (C5416 * C7167 + C5413 * C7168 + C5415 * C1155 + C5412 * C1160 +
             C5414 * C869 + C5411 * C882) *
                C51260) *
               C51163 * C51356) *
              C51218 * C1354)) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C1722 +
             (C117 * C127 + C51318 * C140) * C1720 -
             (C117 * C454 + C51318 * C460) * C1723 -
             (C117 * C461 + C51318 * C472) * C51260) *
                C51163 * C20035 +
            (C4624 + C4625 - C4626 - C4627) * C51163 * C20036 +
            C5153 * C51163 * C20037 +
            (C5150 + C5149 - C5148 - C5151) * C51163 * C20038) *
               C51446 +
           ((C4626 - (C4625 + C4624) + C4627) * C51163 * C20035 +
            (C4631 - (C4630 + C4629) + C4632) * C51163 * C20036 +
            (C5148 - (C5149 + C5150) + C5151) * C51163 * C20037 +
            (C20531 * C1723 - (C3088 * C1720 + C3087 * C1722) +
             C20532 * C51260) *
                C51163 * C20038) *
               C51234) *
              C1456 +
          (((C1727 - (C1726 + C1725) + C1728) * C51163 * C20035 +
            C4646 * C51163 * C20036 + C4647 * C51163 * C20037 +
            (C4636 - (C4637 + C4638) + C4639) * C51163 * C20038) *
               C51446 +
           (C4644 * C51163 * C20035 + C4645 * C51163 * C20036 +
            (C4638 + C4637 - C4636 - C4639) * C51163 * C20037 +
            (C2966 * C1722 + C2967 * C1720 -
             (C117 * C3240 + C51318 * C3247) * C1723 -
             (C117 * C3248 + C51318 * C3252) * C51260) *
                C51163 * C20038) *
               C51234) *
              C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C1722 +
              (C117 * C127 + C51318 * C140) * C1720 -
              (C117 * C454 + C51318 * C460) * C1723 -
              (C117 * C461 + C51318 * C472) * C51260) *
                 C17433 +
             (C1725 + C1726 - C1727 - C1728) * C17434 + C1745 * C17435) *
                C17436 +
            ((C4624 + C4625 - C4626 - C4627) * C17433 + C4644 * C17434 +
             C9988 * C17435) *
                C51356) *
               C51446 +
           (((C4626 - (C4625 + C4624) + C4627) * C17433 + C4646 * C17434 +
             C10185 * C17435) *
                C17436 +
            ((C4631 - (C4630 + C4629) + C4632) * C17433 + C4647 * C17434 +
             (C4426 - (C4427 + C4428) + C4429) * C17435) *
                C51356) *
               C51234) *
              C1456 +
          ((((C1727 - (C1726 + C1725) + C1728) * C17433 +
             (C1731 - (C1730 + C1729) + C1732) * C17434 +
             (C1735 - (C1734 + C1733) + C1736) * C17435) *
                C17436 +
            (C4646 * C17433 + C10185 * C17434 +
             (C1885 - (C1886 + C1887) + C1888) * C17435) *
                C51356) *
               C51446 +
           ((C4644 * C17433 + C9988 * C17434 +
             (C1887 + C1886 - C1885 - C1888) * C17435) *
                C17436 +
            (C4645 * C17433 + (C4428 + C4427 - C4426 - C4429) * C17434 +
             (C664 * C1722 + C665 * C1720 -
              (C117 * C863 + C51318 * C878) * C1723 -
              (C117 * C879 + C51318 * C887) * C51260) *
                 C17435) *
                C51356) *
               C51234) *
              C51191)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5414 * C119 + C5411 * C126 + C5415 * C454 + C5412 * C460 +
              C5416 * C992 + C5413 * C997) *
                 C1722 +
             (C5414 * C127 + C5411 * C140 + C5415 * C461 + C5412 * C472 +
              C5416 * C998 + C5413 * C1007) *
                 C1720 -
             (C5416 * C1236 + C5413 * C1240 + C5415 * C992 + C5412 * C997 +
              C5414 * C454 + C5411 * C460) *
                 C1723 -
             (C5416 * C1241 + C5413 * C1248 + C5415 * C998 + C5412 * C1007 +
              C5414 * C461 + C5411 * C472) *
                 C51260) *
                C51163 * C17436 +
            ((C22068 + C22069 + C22070) * C1722 +
             (C22071 + C22072 + C22073) * C1720 -
             (C22670 + C22671 + C22672) * C1723 -
             (C22673 + C22674 + C22675) * C51260) *
                C51163 * C51356) *
               C51446 +
           (((C22672 + C22671 + C22670) * C1723 -
             ((C22073 + C22072 + C22071) * C1720 +
              (C22070 + C22069 + C22068) * C1722) +
             (C22675 + C22674 + C22673) * C51260) *
                C51163 * C17436 +
            ((C22676 + C22677 + C22678) * C1723 -
             ((C22378 + C22379 + C22380) * C1720 +
              (C22381 + C22382 + C22383) * C1722) +
             (C22679 + C22680 + C22681) * C51260) *
                C51163 * C51356) *
               C51234) *
              C1456 +
          ((((C5826 + C5825 + C5824) * C1723 -
             ((C5459 + C5458 + C5457) * C1720 +
              (C5456 + C5455 + C5454) * C1722) +
             (C5829 + C5828 + C5827) * C51260) *
                C51163 * C17436 +
            ((C7182 + C7183 + C7184) * C1723 -
             ((C5642 + C5643 + C5644) * C1720 +
              (C5645 + C5646 + C5647) * C1722) +
             (C7185 + C7186 + C7187) * C51260) *
                C51163 * C51356) *
               C51446 +
           (((C5647 + C5646 + C5645) * C1722 + (C5644 + C5643 + C5642) * C1720 -
             (C7184 + C7183 + C7182) * C1723 -
             (C7187 + C7186 + C7185) * C51260) *
                C51163 * C17436 +
            ((C5994 + C5995 + C5996) * C1722 + (C5997 + C5998 + C5999) * C1720 -
             (C5416 * C3763 + C5413 * C3770 + C5415 * C3449 + C5412 * C3453 +
              C5414 * C861 + C5411 * C874) *
                 C1723 -
             (C5416 * C3771 + C5413 * C3775 + C5415 * C3454 + C5412 * C3458 +
              C5414 * C875 + C5411 * C885) *
                 C51260) *
                C51163 * C51356) *
               C51234) *
              C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C1989 +
            (C117 * C127 + C51318 * C140) * C51494 -
            (C117 * C454 + C51318 * C460) * C1990 -
            (C117 * C461 + C51318 * C472) * C51483 +
            (C117 * C992 + C51318 * C997) * C1991 +
            (C117 * C998 + C51318 * C1007) * C1988) *
               C51163 * C20035 +
           (C5302 + C5303 - C5304 - C5305 + C5306 + C5307) * C51163 * C20036 +
           (C5308 + C5309 - C5310 - C5311 + C5312 + C5313) * C51163 * C20037 +
           (C2965 * C1989 + C2964 * C51494 - C3285 * C1990 - C3286 * C51483 +
            C20745 * C1991 + C20746 * C1988) *
               C51163 * C20038) *
              C51218 * C1456 +
          ((C1995 - (C1994 + C1993) + C1996 - C1997 - C1998) * C51163 * C20035 +
           (C4796 - (C4795 + C4794) + C4797 - C4798 - C4799) * C51163 * C20036 +
           (C4802 - (C4801 + C4800) + C4803 - C4804 - C4805) * C51163 * C20037 +
           (C3287 * C1990 - (C2613 * C51494 + C2614 * C1989) + C3288 * C51483 -
            (C117 * C3631 + C51318 * C3634) * C1991 -
            (C117 * C3635 + C51318 * C3637) * C1988) *
               C51163 * C20038) *
              C51218 * C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C1989 +
             (C117 * C127 + C51318 * C140) * C51494 -
             (C117 * C454 + C51318 * C460) * C1990 -
             (C117 * C461 + C51318 * C472) * C51483 +
             (C117 * C992 + C51318 * C997) * C1991 +
             (C117 * C998 + C51318 * C1007) * C1988) *
                C17433 +
            (C1993 + C1994 - C1995 - C1996 + C1997 + C1998) * C17434 +
            (C1999 + C2000 - C2001 - C2002 + C2003 + C2004) * C17435) *
               C17436 +
           ((C5302 + C5303 - C5304 - C5305 + C5306 + C5307) * C17433 +
            (C4794 + C4795 - C4796 - C4797 + C4798 + C4799) * C17434 +
            (C10332 + C10333 - C10334 - C10335 + C10336 + C10337) * C17435) *
               C51356) *
              C51218 * C1456 +
          (((C1995 - (C1994 + C1993) + C1996 - C1997 - C1998) * C17433 +
            (C2001 - (C2000 + C1999) + C2002 - C2003 - C2004) * C17434 +
            (C2007 - (C2006 + C2005) + C2008 - C2009 - C2010) * C17435) *
               C17436 +
           ((C4796 - (C4795 + C4794) + C4797 - C4798 - C4799) * C17433 +
            (C10334 - (C10333 + C10332) + C10335 - C10336 - C10337) * C17434 +
            (C1615 * C1990 - (C335 * C51494 + C336 * C1989) + C1616 * C51483 -
             (C117 * C1149 + C51318 * C1156) * C1991 -
             (C117 * C1157 + C51318 * C1161) * C1988) *
                C17435) *
               C51356) *
              C51218 * C51191)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C454 + C5412 * C460 +
             C5416 * C992 + C5413 * C997) *
                C1989 +
            (C5414 * C127 + C5411 * C140 + C5415 * C461 + C5412 * C472 +
             C5416 * C998 + C5413 * C1007) *
                C51494 -
            (C5416 * C1236 + C5413 * C1240 + C5415 * C992 + C5412 * C997 +
             C5414 * C454 + C5411 * C460) *
                C1990 -
            (C5416 * C1241 + C5413 * C1248 + C5415 * C998 + C5412 * C1007 +
             C5414 * C461 + C5411 * C472) *
                C51483 +
            (C5414 * C992 + C5411 * C997 + C5415 * C1236 + C5412 * C1240 +
             C5416 * C6389 + C5413 * C6392) *
                C1991 +
            (C5414 * C998 + C5411 * C1007 + C5415 * C1241 + C5412 * C1248 +
             C5416 * C6393 + C5413 * C6398) *
                C1988) *
               C51163 * C17436 +
           ((C22068 + C22069 + C22070) * C1989 +
            (C22071 + C22072 + C22073) * C51494 -
            (C22670 + C22671 + C22672) * C1990 -
            (C22673 + C22674 + C22675) * C51483 +
            (C22990 + C22991 + C22992) * C1991 +
            (C22993 + C22994 + C22995) * C1988) *
               C51163 * C51356) *
              C51218 * C1456 +
          (((C5826 + C5825 + C5824) * C1990 -
            ((C5459 + C5458 + C5457) * C51494 +
             (C5456 + C5455 + C5454) * C1989) +
            (C5829 + C5828 + C5827) * C51483 - (C6416 + C6415 + C6414) * C1991 -
            (C6419 + C6418 + C6417) * C1988) *
               C51163 * C17436 +
           ((C7182 + C7183 + C7184) * C1990 -
            ((C5642 + C5643 + C5644) * C51494 +
             (C5645 + C5646 + C5647) * C1989) +
            (C7185 + C7186 + C7187) * C51483 -
            (C5416 * C6566 + C5413 * C6569 + C5415 * C3761 + C5412 * C3766 +
             C5414 * C1147 + C5411 * C1152) *
                C1991 -
            (C5416 * C6570 + C5413 * C6572 + C5415 * C3767 + C5412 * C3773 +
             C5414 * C1153 + C5411 * C1159) *
                C1988) *
               C51163 * C51356) *
              C51218 * C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C118 +
              (C117 * C127 + C51318 * C140) * C51248) *
                 C17433 +
             (C178 + C179) * C17434 + C188 * C17435) *
                C17436 +
            ((C2617 + C2618) * C17433 + C2590 * C17434 + C2602 * C17435) *
                C51356) *
               C622 -
           ((C2608 * C17435 + C2600 * C17434 + (C2620 + C2619) * C17433) *
                C51356 +
            (C352 * C17435 + C2601 * C17434 + (C2618 + C2617) * C17433) *
                C17436) *
               C623 +
           ((C2949 * C17433 + C2595 * C17434 + C2603 * C17435) * C17436 +
            ((C2971 + C2970) * C17433 + C2956 * C17434 +
             (C2623 + C2624) * C17435) *
                C51356) *
               C624) *
              C51439 +
          (((C2590 * C17433 + C2602 * C17434 + C8409 * C17435) * C17436 +
            (C2595 * C17433 + C2603 * C17434 + (C670 + C671) * C17435) *
                C51356) *
               C623 -
           ((C351 * C17435 + C352 * C17434 + C2601 * C17433) * C51356 +
            (C191 * C17435 + (C181 + C180) * C17434 + (C179 + C178) * C17433) *
                C17436) *
               C622 -
           ((((C117 * C746 + C51318 * C754) * C51248 +
              (C117 * C742 + C51318 * C747) * C118) *
                 C17435 +
             (C2624 + C2623) * C17434 + C2951 * C17433) *
                C51356 +
            ((C671 + C670) * C17435 + C2608 * C17434 + C2600 * C17433) *
                C17436) *
               C624) *
              C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C118 +
             (C117 * C127 + C51318 * C140) * C51248) *
                C17433 +
            (C178 + C179) * C17434 + C188 * C17435) *
               C17436 +
           ((C2617 + C2618) * C17433 + C2590 * C17434 + C2602 * C17435) *
               C51356) *
              C51218 * C113 -
          ((C351 * C17435 + C352 * C17434 + C2601 * C17433) * C51356 +
           (C191 * C17435 + (C181 + C180) * C17434 + (C179 + C178) * C17433) *
               C17436) *
              C51218 * C114 +
          ((C188 * C17433 + C189 * C17434 + (C185 + C184) * C17435) * C17436 +
           (C2602 * C17433 + C8409 * C17434 + (C349 + C350) * C17435) *
               C51356) *
              C51218 * C115 -
          ((((C117 * C310 + C51318 * C317) * C51248 +
             (C117 * C299 + C51318 * C311) * C118) *
                C17435 +
            (C350 + C349) * C17434 + C351 * C17433) *
               C51356 +
           ((C187 + C186) * C17435 + C190 * C17434 + C191 * C17433) * C17436) *
              C51218 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C118 +
            (C117 * C127 + C51318 * C140) * C51248) *
               C51163 * C20035 +
           (C2617 + C2618) * C51163 * C20036 + C2949 * C51163 * C20037 +
           (C2971 + C2970) * C51163 * C20038) *
              C51218 * C113 -
          (C2951 * C51163 * C20038 + C2600 * C51163 * C20037 +
           C2601 * C51163 * C20036 + (C179 + C178) * C51163 * C20035) *
              C51218 * C114 +
          (C188 * C51163 * C20035 + C2602 * C51163 * C20036 +
           C2603 * C51163 * C20037 + (C2623 + C2624) * C51163 * C20038) *
              C51218 * C115 -
          (((C117 * C746 + C51318 * C754) * C51248 +
            (C117 * C742 + C51318 * C747) * C118) *
               C51163 * C20038 +
           (C671 + C670) * C51163 * C20037 + C351 * C51163 * C20036 +
           C191 * C51163 * C20035) *
              C51218 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C118 +
             (C117 * C127 + C51318 * C140) * C51248) *
                C51163 * C20035 +
            (C2617 + C2618) * C51163 * C20036 + C20334 * C20037 +
            C20338 * C20038) *
               C622 -
           ((C3091 + C3090) * C51163 * C20038 + C3081 * C51163 * C20037 +
            (C2620 + C2619) * C51163 * C20036 +
            (C2618 + C2617) * C51163 * C20035) *
               C623 +
           (C20334 * C20035 + C20338 * C20036 +
            (C3090 + C3091) * C51163 * C20037 +
            ((C117 * C3072 + C51318 * C3076) * C118 +
             (C117 * C3075 + C51318 * C3078) * C51248) *
                C51163 * C20038) *
               C624) *
              C51439 +
          ((C2590 * C51163 * C20035 + C2595 * C51163 * C20036 +
            C2956 * C51163 * C20037 + (C2972 + C2973) * C51163 * C20038) *
               C623 -
           (C20336 * C20038 + C20337 * C20037 + C2601 * C51163 * C20036 +
            (C179 + C178) * C51163 * C20035) *
               C622 -
           (((C117 * C3073 + C51318 * C3077) * C51248 +
             (C117 * C3071 + C51318 * C3074) * C118) *
                C51163 * C20038 +
            (C2973 + C2972) * C51163 * C20037 + C20336 * C20036 +
            C20337 * C20035) *
               C624) *
              C51191)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C454 + C5412 * C460 +
             C5416 * C992 + C5413 * C997) *
                C118 +
            (C5414 * C127 + C5411 * C140 + C5415 * C461 + C5412 * C472 +
             C5416 * C998 + C5413 * C1007) *
                C51248) *
               C51163 * C17436 +
           ((C5414 * C297 + C5411 * C307 + C5415 * C856 + C5412 * C864 +
             C5416 * C1146 + C5413 * C1150) *
                C118 +
            (C5414 * C306 + C5411 * C315 + C5415 * C865 + C5412 * C880 +
             C5416 * C1151 + C5413 * C1158) *
                C51248) *
               C51163 * C51356) *
              C51218 * C113 -
          (((C5642 + C5643 + C5644) * C51248 + (C5645 + C5646 + C5647) * C118) *
               C51163 * C51356 +
           ((C5459 + C5458 + C5457) * C51248 + (C5456 + C5455 + C5454) * C118) *
               C51163 * C17436) *
              C51218 * C114 +
          (((C5465 + C5464 + C5463) * C118 + (C5462 + C5461 + C5460) * C51248) *
               C51163 * C17436 +
           ((C5648 + C5649 + C5650) * C118 + (C5651 + C5652 + C5653) * C51248) *
               C51163 * C51356) *
              C51218 * C115 -
          (((C5416 * C1157 + C5413 * C1161 + C5415 * C871 + C5412 * C883 +
             C5414 * C300 + C5411 * C312) *
                C51248 +
            (C5416 * C1149 + C5413 * C1156 + C5415 * C859 + C5412 * C870 +
             C5414 * C294 + C5411 * C301) *
                C118) *
               C51163 * C51356 +
           ((C5471 + C5470 + C5469) * C51248 + (C5468 + C5467 + C5466) * C118) *
               C51163 * C17436) *
              C51218 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5414 * C119 + C5411 * C126 + C5415 * C454 + C5412 * C460 +
              C5416 * C992 + C5413 * C997) *
                 C118 +
             (C5414 * C127 + C5411 * C140 + C5415 * C461 + C5412 * C472 +
              C5416 * C998 + C5413 * C1007) *
                 C51248) *
                C51163 * C17436 +
            ((C22068 + C22069 + C22070) * C118 +
             (C22071 + C22072 + C22073) * C51248) *
                C51163 * C51356) *
               C622 -
           (((C22378 + C22379 + C22380) * C51248 +
             (C22381 + C22382 + C22383) * C118) *
                C51163 * C51356 +
            ((C22073 + C22072 + C22071) * C51248 +
             (C22070 + C22069 + C22068) * C118) *
                C51163 * C17436) *
               C623 +
           (((C22383 + C22382 + C22381) * C118 +
             (C22380 + C22379 + C22378) * C51248) *
                C51163 * C17436 +
            ((C5414 * C745 + C5411 * C753 + C5415 * C3237 + C5412 * C3241 +
              C5416 * C3630 + C5413 * C3632) *
                 C118 +
             (C5414 * C752 + C5411 * C757 + C5415 * C3242 + C5412 * C3249 +
              C5416 * C3633 + C5413 * C3636) *
                 C51248) *
                C51163 * C51356) *
               C624) *
              C51439 +
          ((((C5647 + C5646 + C5645) * C118 +
             (C5644 + C5643 + C5642) * C51248) *
                C51163 * C17436 +
            ((C5994 + C5995 + C5996) * C118 +
             (C5997 + C5998 + C5999) * C51248) *
                C51163 * C51356) *
               C623 -
           (((C5642 + C5643 + C5644) * C51248 +
             (C5645 + C5646 + C5647) * C118) *
                C51163 * C51356 +
            ((C5459 + C5458 + C5457) * C51248 +
             (C5456 + C5455 + C5454) * C118) *
                C51163 * C17436) *
               C622 -
           (((C5416 * C3635 + C5413 * C3637 + C5415 * C3244 + C5412 * C3250 +
              C5414 * C750 + C5411 * C756) *
                 C51248 +
             (C5416 * C3631 + C5413 * C3634 + C5415 * C3238 + C5412 * C3243 +
              C5414 * C744 + C5411 * C751) *
                 C118) *
                C51163 * C51356 +
            ((C5999 + C5998 + C5997) * C51248 +
             (C5996 + C5995 + C5994) * C118) *
                C51163 * C17436) *
               C624) *
              C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C118 +
             (C117 * C127 + C51318 * C140) * C51248) *
                C17433 +
            (C178 + C179) * C17434 + C188 * C17435) *
               C17436 +
           ((C2617 + C2618) * C17433 + C2590 * C17434 + C2602 * C17435) *
               C51356) *
              C737 -
          ((C2608 * C17435 + C2600 * C17434 + (C2620 + C2619) * C17433) *
               C51356 +
           (C352 * C17435 + C2601 * C17434 + (C2618 + C2617) * C17433) *
               C17436) *
              C738 +
          ((C2949 * C17433 + C2595 * C17434 + C2603 * C17435) * C17436 +
           ((C2971 + C2970) * C17433 + C2956 * C17434 +
            (C2623 + C2624) * C17435) *
               C51356) *
              C739 -
          ((((C117 * C2943 + C51318 * C2947) * C51248 +
             (C117 * C2938 + C51318 * C2944) * C118) *
                C17435 +
            (C2973 + C2972) * C17434 + (C3091 + C3090) * C17433) *
               C51356 +
           ((C2624 + C2623) * C17435 + C2951 * C17434 + C3081 * C17433) *
               C17436) *
              C740) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C118 +
              (C117 * C127 + C51318 * C140) * C51248) *
                 C17433 +
             (C178 + C179) * C17434 + C188 * C17435) *
                C17436 +
            ((C2617 + C2618) * C17433 + C2590 * C17434 + C2602 * C17435) *
                C51356) *
               C51446 -
           ((C2608 * C17435 + C2600 * C17434 + (C2620 + C2619) * C17433) *
                C51356 +
            (C352 * C17435 + C2601 * C17434 + (C2618 + C2617) * C17433) *
                C17436) *
               C51234) *
              C291 +
          (((C2590 * C17433 + C2602 * C17434 + C8409 * C17435) * C17436 +
            (C2595 * C17433 + C2603 * C17434 + (C670 + C671) * C17435) *
                C51356) *
               C51234 -
           ((C351 * C17435 + C352 * C17434 + C2601 * C17433) * C51356 +
            (C191 * C17435 + (C181 + C180) * C17434 + (C179 + C178) * C17433) *
                C17436) *
               C51446) *
              C292 +
          (((C188 * C17433 + C189 * C17434 + (C185 + C184) * C17435) * C17436 +
            (C2602 * C17433 + C8409 * C17434 + (C349 + C350) * C17435) *
                C51356) *
               C51446 -
           ((((C117 * C640 + C51318 * C646) * C51248 +
              (C117 * C631 + C51318 * C641) * C118) *
                 C17435 +
             (C671 + C670) * C17434 + C2608 * C17433) *
                C51356 +
            ((C350 + C349) * C17435 + C351 * C17434 + C352 * C17433) * C17436) *
               C51234) *
              C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C118 +
             (C117 * C127 + C51318 * C140) * C51248) *
                C51163 * C20035 +
            (C2617 + C2618) * C51163 * C20036 + C2949 * C51163 * C20037 +
            (C2971 + C2970) * C51163 * C20038) *
               C51446 -
           ((C3091 + C3090) * C51163 * C20038 + C3081 * C51163 * C20037 +
            (C2620 + C2619) * C51163 * C20036 +
            (C2618 + C2617) * C51163 * C20035) *
               C51234) *
              C291 +
          ((C2590 * C51163 * C20035 + C2595 * C51163 * C20036 +
            C2956 * C51163 * C20037 + (C2972 + C2973) * C51163 * C20038) *
               C51234 -
           (C2951 * C51163 * C20038 + C2600 * C51163 * C20037 +
            C2601 * C51163 * C20036 + (C179 + C178) * C51163 * C20035) *
               C51446) *
              C292 +
          ((C188 * C51163 * C20035 + C2602 * C51163 * C20036 +
            C2603 * C51163 * C20037 + (C2623 + C2624) * C51163 * C20038) *
               C51446 -
           (((C117 * C2943 + C51318 * C2947) * C51248 +
             (C117 * C2938 + C51318 * C2944) * C118) *
                C51163 * C20038 +
            (C2624 + C2623) * C51163 * C20037 + C2608 * C51163 * C20036 +
            C352 * C51163 * C20035) *
               C51234) *
              C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C118 +
            (C117 * C127 + C51318 * C140) * C51248) *
               C51163 * C20035 +
           (C2617 + C2618) * C51163 * C20036 + C20334 * C20037 +
           C20338 * C20038) *
              C737 -
          (C20415 * C20038 + C20410 * C20037 +
           (C2620 + C2619) * C51163 * C20036 +
           (C2618 + C2617) * C51163 * C20035) *
              C738 +
          (C20334 * C20035 + C20338 * C20036 +
           (C3090 + C3091) * C51163 * C20037 +
           (C20418 + C20419) * C51163 * C20038) *
              C739 -
          (((C117 * C20405 + C51318 * C20407) * C51248 +
            (C117 * C20404 + C51318 * C20406) * C118) *
               C51163 * C20038 +
           (C20419 + C20418) * C51163 * C20037 + C20415 * C20036 +
           C20410 * C20035) *
              C740) *
         C51186) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5414 * C119 + C5411 * C126 + C5415 * C454 + C5412 * C460 +
              C5416 * C992 + C5413 * C997) *
                 C118 +
             (C5414 * C127 + C5411 * C140 + C5415 * C461 + C5412 * C472 +
              C5416 * C998 + C5413 * C1007) *
                 C51248) *
                C51163 * C17436 +
            ((C22068 + C22069 + C22070) * C118 +
             (C22071 + C22072 + C22073) * C51248) *
                C51163 * C51356) *
               C51446 -
           (((C5416 * C3452 + C5413 * C3457 + C5415 * C873 + C5412 * C884 +
              C5414 * C633 + C5411 * C642) *
                 C51248 +
             (C5416 * C3448 + C5413 * C3451 + C5415 * C860 + C5412 * C872 +
              C5414 * C627 + C5411 * C632) *
                 C118) *
                C51163 * C51356 +
            ((C22073 + C22072 + C22071) * C51248 +
             (C22070 + C22069 + C22068) * C118) *
                C51163 * C17436) *
               C51234) *
              C291 +
          ((((C5647 + C5646 + C5645) * C118 +
             (C5644 + C5643 + C5642) * C51248) *
                C51163 * C17436 +
            ((C5994 + C5995 + C5996) * C118 +
             (C5997 + C5998 + C5999) * C51248) *
                C51163 * C51356) *
               C51234 -
           (((C5642 + C5643 + C5644) * C51248 +
             (C5645 + C5646 + C5647) * C118) *
                C51163 * C51356 +
            ((C5459 + C5458 + C5457) * C51248 +
             (C5456 + C5455 + C5454) * C118) *
                C51163 * C17436) *
               C51446) *
              C292 +
          ((((C5465 + C5464 + C5463) * C118 +
             (C5462 + C5461 + C5460) * C51248) *
                C51163 * C17436 +
            ((C5648 + C5649 + C5650) * C118 +
             (C5651 + C5652 + C5653) * C51248) *
                C51163 * C51356) *
               C51446 -
           (((C5416 * C3456 + C5413 * C3459 + C5415 * C877 + C5412 * C886 +
              C5414 * C637 + C5411 * C644) *
                 C51248 +
             (C5416 * C3450 + C5413 * C3455 + C5415 * C862 + C5412 * C876 +
              C5414 * C629 + C5411 * C636) *
                 C118) *
                C51163 * C51356 +
            ((C5653 + C5652 + C5651) * C51248 +
             (C5650 + C5649 + C5648) * C118) *
                C51163 * C17436) *
               C51234) *
              C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C454 + C5412 * C460 +
             C5416 * C992 + C5413 * C997) *
                C118 +
            (C5414 * C127 + C5411 * C140 + C5415 * C461 + C5412 * C472 +
             C5416 * C998 + C5413 * C1007) *
                C51248) *
               C51163 * C17436 +
           ((C22068 + C22069 + C22070) * C118 +
            (C22071 + C22072 + C22073) * C51248) *
               C51163 * C51356) *
              C737 -
          (((C22378 + C22379 + C22380) * C51248 +
            (C22381 + C22382 + C22383) * C118) *
               C51163 * C51356 +
           ((C22073 + C22072 + C22071) * C51248 +
            (C22070 + C22069 + C22068) * C118) *
               C51163 * C17436) *
              C738 +
          (((C22383 + C22382 + C22381) * C118 +
            (C22380 + C22379 + C22378) * C51248) *
               C51163 * C17436 +
           ((C22494 + C22495 + C22496) * C118 +
            (C22497 + C22498 + C22499) * C51248) *
               C51163 * C51356) *
              C739 -
          (((C5416 * C20734 + C5413 * C20735 + C5415 * C3246 + C5412 * C3251 +
             C5414 * C2940 + C5411 * C2945) *
                C51248 +
            (C5416 * C20732 + C5413 * C20733 + C5415 * C3239 + C5412 * C3245 +
             C5414 * C2936 + C5411 * C2939) *
                C118) *
               C51163 * C51356 +
           ((C22499 + C22498 + C22497) * C51248 +
            (C22496 + C22495 + C22494) * C118) *
               C51163 * C17436) *
              C740) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C452 +
             (C117 * C127 + C51318 * C140) * C51448 -
             (C117 * C454 + C51318 * C460) * C453 -
             (C117 * C461 + C51318 * C472) * C51260) *
                C17433 +
            (C479 + C480 - C513 - C514) * C17434 + C523 * C17435) *
               C17436 +
           ((C3254 + C3255 - C3289 - C3290) * C17433 + C4273 * C17434 +
            C8558 * C17435) *
               C51356) *
              C622 +
          (((C3289 - (C3255 + C3254) + C3290) * C17433 + C4274 * C17434 +
            C9839 * C17435) *
               C17436 +
           ((C3291 - (C3261 + C3260) + C3292) * C17433 + C4275 * C17434 +
            (C2789 - (C2779 + C2780) + C2790) * C17435) *
               C51356) *
              C623 +
          ((C3300 * C17433 + C3293 * C17434 +
            (C2780 + C2779 - C2789 - C2790) * C17435) *
               C17436 +
           ((C3270 + C3269 - C3294 - C3295) * C17433 +
            (C3276 + C3275 - C3296 - C3297) * C17434 +
            (C2615 * C452 + C2616 * C51448 -
             (C117 * C4262 + C51318 * C4263) * C453 -
             (C117 * C4264 + C51318 * C4265) * C51260) *
                C17435) *
               C51356) *
              C624) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C452 +
             (C117 * C127 + C51318 * C140) * C51448 -
             (C117 * C454 + C51318 * C460) * C453 -
             (C117 * C461 + C51318 * C472) * C51260) *
                C17433 +
            (C479 + C480 - C513 - C514) * C17434 + C523 * C17435) *
               C17436 +
           ((C3254 + C3255 - C3289 - C3290) * C17433 + C4273 * C17434 +
            C8558 * C17435) *
               C51356) *
              C51218 * C291 +
          (((C513 - (C480 + C479) + C514) * C17433 +
            (C515 - (C486 + C485) + C516) * C17434 +
            (C517 - (C492 + C491) + C518) * C17435) *
               C17436 +
           (C4274 * C17433 + C9839 * C17434 +
            (C1621 - (C1607 + C1608) + C1622) * C17435) *
               C51356) *
              C51218 * C292 +
          ((C523 * C17433 + C524 * C17434 +
            (C500 + C499 - C519 - C520) * C17435) *
               C17436 +
           (C8558 * C17433 + (C1608 + C1607 - C1621 - C1622) * C17434 +
            (C341 * C452 + C342 * C51448 -
             (C117 * C1588 + C51318 * C1589) * C453 -
             (C117 * C1590 + C51318 * C1591) * C51260) *
                C17435) *
               C51356) *
              C51218 * C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C452 +
            (C117 * C127 + C51318 * C140) * C51448 -
            (C117 * C454 + C51318 * C460) * C453 -
            (C117 * C461 + C51318 * C472) * C51260) *
               C51163 * C20035 +
           (C3254 + C3255 - C3289 - C3290) * C51163 * C20036 +
           C3300 * C51163 * C20037 +
           (C3270 + C3269 - C3294 - C3295) * C51163 * C20038) *
              C51218 * C291 +
          ((C513 - (C480 + C479) + C514) * C51163 * C20035 +
           C4274 * C51163 * C20036 + C4275 * C51163 * C20037 +
           (C3296 - (C3275 + C3276) + C3297) * C51163 * C20038) *
              C51218 * C292 +
          (C523 * C51163 * C20035 + C8558 * C51163 * C20036 +
           (C2780 + C2779 - C2789 - C2790) * C51163 * C20037 +
           (C2615 * C452 + C2616 * C51448 -
            (C117 * C4262 + C51318 * C4263) * C453 -
            (C117 * C4264 + C51318 * C4265) * C51260) *
               C51163 * C20038) *
              C51218 * C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C452 +
            (C117 * C127 + C51318 * C140) * C51448 -
            (C117 * C454 + C51318 * C460) * C453 -
            (C117 * C461 + C51318 * C472) * C51260) *
               C51163 * C20035 +
           (C3254 + C3255 - C3289 - C3290) * C51163 * C20036 + C20522 * C20037 +
           C20536 * C20038) *
              C622 +
          ((C3289 - (C3255 + C3254) + C3290) * C51163 * C20035 +
           (C3291 - (C3261 + C3260) + C3292) * C51163 * C20036 +
           (C3294 - (C3269 + C3270) + C3295) * C51163 * C20037 +
           (C20534 - (C20526 + C20527) + C20535) * C51163 * C20038) *
              C623 +
          (C20522 * C20035 + C20536 * C20036 +
           (C20527 + C20526 - C20534 - C20535) * C51163 * C20037 +
           (C20416 * C452 + C20417 * C51448 -
            (C117 * C20517 + C51318 * C20518) * C453 -
            (C117 * C20519 + C51318 * C20520) * C51260) *
               C51163 * C20038) *
              C624) *
         C51186) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C454 + C5412 * C460 +
             C5416 * C992 + C5413 * C997) *
                C452 +
            (C5414 * C127 + C5411 * C140 + C5415 * C461 + C5412 * C472 +
             C5416 * C998 + C5413 * C1007) *
                C51448 -
            (C5416 * C1236 + C5413 * C1240 + C5415 * C992 + C5412 * C997 +
             C5414 * C454 + C5411 * C460) *
                C453 -
            (C5416 * C1241 + C5413 * C1248 + C5415 * C998 + C5412 * C1007 +
             C5414 * C461 + C5411 * C472) *
                C51260) *
               C51163 * C17436 +
           ((C22068 + C22069 + C22070) * C452 +
            (C22071 + C22072 + C22073) * C51448 -
            (C5416 * C3760 + C5413 * C3764 + C5415 * C1146 + C5412 * C1150 +
             C5414 * C856 + C5411 * C864) *
                C453 -
            (C5416 * C3765 + C5413 * C3772 + C5415 * C1151 + C5412 * C1158 +
             C5414 * C865 + C5411 * C880) *
                C51260) *
               C51163 * C51356) *
              C51218 * C291 +
          (((C5826 + C5825 + C5824) * C453 -
            ((C5459 + C5458 + C5457) * C51448 +
             (C5456 + C5455 + C5454) * C452) +
            (C5829 + C5828 + C5827) * C51260) *
               C51163 * C17436 +
           ((C7182 + C7183 + C7184) * C453 -
            ((C5642 + C5643 + C5644) * C51448 +
             (C5645 + C5646 + C5647) * C452) +
            (C7185 + C7186 + C7187) * C51260) *
               C51163 * C51356) *
              C51218 * C292 +
          (((C5465 + C5464 + C5463) * C452 + (C5462 + C5461 + C5460) * C51448 -
            (C5832 + C5831 + C5830) * C453 - (C5835 + C5834 + C5833) * C51260) *
               C51163 * C17436 +
           ((C5648 + C5649 + C5650) * C452 + (C5651 + C5652 + C5653) * C51448 -
            (C5416 * C7165 + C5413 * C7166 + C5415 * C1148 + C5412 * C1154 +
             C5414 * C858 + C5411 * C868) *
                C453 -
            (C5416 * C7167 + C5413 * C7168 + C5415 * C1155 + C5412 * C1160 +
             C5414 * C869 + C5411 * C882) *
                C51260) *
               C51163 * C51356) *
              C51218 * C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5414 * C119 + C5411 * C126 + C5415 * C454 + C5412 * C460 +
             C5416 * C992 + C5413 * C997) *
                C452 +
            (C5414 * C127 + C5411 * C140 + C5415 * C461 + C5412 * C472 +
             C5416 * C998 + C5413 * C1007) *
                C51448 -
            (C5416 * C1236 + C5413 * C1240 + C5415 * C992 + C5412 * C997 +
             C5414 * C454 + C5411 * C460) *
                C453 -
            (C5416 * C1241 + C5413 * C1248 + C5415 * C998 + C5412 * C1007 +
             C5414 * C461 + C5411 * C472) *
                C51260) *
               C51163 * C17436 +
           ((C22068 + C22069 + C22070) * C452 +
            (C22071 + C22072 + C22073) * C51448 -
            (C22670 + C22671 + C22672) * C453 -
            (C22673 + C22674 + C22675) * C51260) *
               C51163 * C51356) *
              C622 +
          (((C22672 + C22671 + C22670) * C453 -
            ((C22073 + C22072 + C22071) * C51448 +
             (C22070 + C22069 + C22068) * C452) +
            (C22675 + C22674 + C22673) * C51260) *
               C51163 * C17436 +
           ((C22676 + C22677 + C22678) * C453 -
            ((C22378 + C22379 + C22380) * C51448 +
             (C22381 + C22382 + C22383) * C452) +
            (C22679 + C22680 + C22681) * C51260) *
               C51163 * C51356) *
              C623 +
          (((C22383 + C22382 + C22381) * C452 +
            (C22380 + C22379 + C22378) * C51448 -
            (C22678 + C22677 + C22676) * C453 -
            (C22681 + C22680 + C22679) * C51260) *
               C51163 * C17436 +
           ((C22494 + C22495 + C22496) * C452 +
            (C22497 + C22498 + C22499) * C51448 -
            (C5416 * C20814 + C5413 * C20815 + C5415 * C3630 + C5412 * C3632 +
             C5414 * C3237 + C5411 * C3241) *
                C453 -
            (C5416 * C20816 + C5413 * C20817 + C5415 * C3633 + C5412 * C3636 +
             C5414 * C3242 + C5411 * C3249) *
                C51260) *
               C51163 * C51356) *
              C624) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                  C118 +
              (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                  C51248) *
                 C51434 +
             ((C10958 + C10959) * C118 + (C10960 + C10961) * C51248) * C51168) *
                C17436 +
            (((C14017 + C14018) * C118 + (C14019 + C14020) * C51248) * C51434 +
             C14027 * C51168) *
                C51356) *
               C1350 -
           ((C14450 * C51168 +
             ((C14440 + C14441) * C51248 + (C14442 + C14443) * C118) * C51434) *
                C51356 +
            (C14028 * C51168 +
             ((C14020 + C14019) * C51248 + (C14018 + C14017) * C118) * C51434) *
                C17436) *
               C51234) *
              C51492 +
          (((C14027 * C51434 + C14029 * C51168) * C17436 +
            (C14451 * C51434 +
             ((C11528 + C11529) * C118 + (C11530 + C11531) * C51248) * C51168) *
                C51356) *
               C51234 -
           ((C11170 * C51168 + C14028 * C51434) * C51356 +
            (((C10965 + C10964) * C51248 + (C10963 + C10962) * C118) * C51168 +
             ((C10961 + C10960) * C51248 + (C10959 + C10958) * C118) * C51434) *
                C17436) *
               C1350) *
              C51477 +
          (((C10982 * C51434 +
             ((C10969 + C10968) * C118 + (C10967 + C10966) * C51248) * C51168) *
                C17436 +
            (C14029 * C51434 +
             ((C11162 + C11163) * C118 + (C11164 + C11165) * C51248) * C51168) *
                C51356) *
               C1350 -
           ((((C10924 * C879 + C51382 * C887 + C10923 * C639 + C51463 * C645) *
                  C51248 +
              (C10924 * C863 + C51382 * C878 + C10923 * C630 + C51463 * C638) *
                  C118) *
                 C51168 +
             ((C11531 + C11530) * C51248 + (C11529 + C11528) * C118) * C51434) *
                C51356 +
            (((C11165 + C11164) * C51248 + (C11163 + C11162) * C118) * C51168 +
             C11170 * C51434) *
                C17436) *
               C51234) *
              C1354)) /
        (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                  C118 +
              (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                  C51248) *
                 C51434 +
             ((C10958 + C10959) * C118 + (C10960 + C10961) * C51248) * C51168) *
                C17436 +
            (((C14017 + C14018) * C118 + (C14019 + C14020) * C51248) * C51434 +
             C14027 * C51168) *
                C51356) *
               C51493 -
           ((C14450 * C51168 +
             ((C14440 + C14441) * C51248 + (C14442 + C14443) * C118) * C51434) *
                C51356 +
            (C14028 * C51168 +
             ((C14020 + C14019) * C51248 + (C14018 + C14017) * C118) * C51434) *
                C17436) *
               C51480 +
           ((((C14443 + C14442) * C118 + (C14441 + C14440) * C51248) * C51434 +
             C14451 * C51168) *
                C17436 +
            (((C14590 + C14591) * C118 + (C14592 + C14593) * C51248) * C51434 +
             ((C14446 + C14447) * C118 + (C14448 + C14449) * C51248) * C51168) *
                C51356) *
               C1455) *
              C1456 +
          (((C14027 * C51434 + C14029 * C51168) * C17436 +
            (C14451 * C51434 +
             ((C11528 + C11529) * C118 + (C11530 + C11531) * C51248) * C51168) *
                C51356) *
               C51480 -
           ((C11170 * C51168 + C14028 * C51434) * C51356 +
            (((C10965 + C10964) * C51248 + (C10963 + C10962) * C118) * C51168 +
             ((C10961 + C10960) * C51248 + (C10959 + C10958) * C118) * C51434) *
                C17436) *
               C51493 -
           ((((C10924 * C4264 + C51382 * C4265 + C10923 * C748 +
               C51463 * C755) *
                  C51248 +
              (C10924 * C4262 + C51382 * C4263 + C10923 * C743 +
               C51463 * C749) *
                  C118) *
                 C51168 +
             ((C14449 + C14448) * C51248 + (C14447 + C14446) * C118) * C51434) *
                C51356 +
            (((C11531 + C11530) * C51248 + (C11529 + C11528) * C118) * C51168 +
             C14450 * C51434) *
                C17436) *
               C1455) *
              C51191)) /
        (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                  C452 +
              (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                  C51448 -
              (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                  C453 -
              (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                  C51260) *
                 C51434 +
             ((C10958 + C10959) * C452 + (C10960 + C10961) * C51448 -
              (C11343 + C11344) * C453 - (C11345 + C11346) * C51260) *
                 C51168) *
                C17436 +
            (((C14017 + C14018) * C452 + (C14019 + C14020) * C51448 -
              (C14812 + C14813) * C453 - (C14814 + C14815) * C51260) *
                 C51434 +
             C16028 * C51168) *
                C51356) *
               C1350 +
           ((((C14813 + C14812) * C453 -
              ((C14020 + C14019) * C51448 + (C14018 + C14017) * C452) +
              (C14815 + C14814) * C51260) *
                 C51434 +
             C16029 * C51168) *
                C17436 +
            (((C14816 + C14817) * C453 -
              ((C14440 + C14441) * C51448 + (C14442 + C14443) * C452) +
              (C14818 + C14819) * C51260) *
                 C51434 +
             ((C14820 + C14821) * C453 - (C14418 * C51448 + C14419 * C452) +
              (C14822 + C14823) * C51260) *
                 C51168) *
                C51356) *
               C51234) *
              C1456 +
          (((((C11344 + C11343) * C453 -
              ((C10961 + C10960) * C51448 + (C10959 + C10958) * C452) +
              (C11346 + C11345) * C51260) *
                 C51434 +
             ((C11349 + C11348) * C453 -
              ((C10965 + C10964) * C51448 + (C10963 + C10962) * C452) +
              (C11351 + C11350) * C51260) *
                 C51168) *
                C17436 +
            (C16029 * C51434 +
             ((C12696 + C12697) * C453 - (C11166 * C51448 + C11167 * C452) +
              (C12698 + C12699) * C51260) *
                 C51168) *
                C51356) *
               C1350 +
           ((C16028 * C51434 +
             (C14015 * C452 + C14016 * C51448 - (C12697 + C12696) * C453 -
              (C12699 + C12698) * C51260) *
                 C51168) *
                C17436 +
            ((C14428 * C452 + C14429 * C51448 - (C14821 + C14820) * C453 -
              (C14823 + C14822) * C51260) *
                 C51434 +
             ((C11528 + C11529) * C452 + (C11530 + C11531) * C51448 -
              (C10924 * C3450 + C51382 * C3455 + C10923 * C862 +
               C51463 * C876) *
                  C453 -
              (C10924 * C3456 + C51382 * C3459 + C10923 * C877 +
               C51463 * C886) *
                  C51260) *
                 C51168) *
                C51356) *
               C51234) *
              C51191)) /
        (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                  C1722 +
              (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                  C1720 -
              (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                  C1723 -
              (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                  C51260) *
                 C51434 +
             ((C10958 + C10959) * C1722 + (C10960 + C10961) * C1720 -
              (C11343 + C11344) * C1723 - (C11345 + C11346) * C51260) *
                 C51168) *
                C17436 +
            (((C14017 + C14018) * C1722 + (C14019 + C14020) * C1720 -
              (C14812 + C14813) * C1723 - (C14814 + C14815) * C51260) *
                 C51434 +
             C16494 * C51168) *
                C51356) *
               C1350 +
           ((((C14813 + C14812) * C1723 -
              ((C14020 + C14019) * C1720 + (C14018 + C14017) * C1722) +
              (C14815 + C14814) * C51260) *
                 C51434 +
             C16495 * C51168) *
                C17436 +
            (((C14816 + C14817) * C1723 -
              ((C14440 + C14441) * C1720 + (C14442 + C14443) * C1722) +
              (C14818 + C14819) * C51260) *
                 C51434 +
             ((C14820 + C14821) * C1723 - (C14418 * C1720 + C14419 * C1722) +
              (C14822 + C14823) * C51260) *
                 C51168) *
                C51356) *
               C51234) *
              C51439 +
          (((((C11344 + C11343) * C1723 -
              ((C10961 + C10960) * C1720 + (C10959 + C10958) * C1722) +
              (C11346 + C11345) * C51260) *
                 C51434 +
             ((C11349 + C11348) * C1723 -
              ((C10965 + C10964) * C1720 + (C10963 + C10962) * C1722) +
              (C11351 + C11350) * C51260) *
                 C51168) *
                C17436 +
            (C16495 * C51434 +
             ((C12696 + C12697) * C1723 - (C11166 * C1720 + C11167 * C1722) +
              (C12698 + C12699) * C51260) *
                 C51168) *
                C51356) *
               C1350 +
           ((C16494 * C51434 +
             (C14015 * C1722 + C14016 * C1720 - (C12697 + C12696) * C1723 -
              (C12699 + C12698) * C51260) *
                 C51168) *
                C17436 +
            ((C14428 * C1722 + C14429 * C1720 - (C14821 + C14820) * C1723 -
              (C14823 + C14822) * C51260) *
                 C51434 +
             ((C11528 + C11529) * C1722 + (C11530 + C11531) * C1720 -
              (C10924 * C3450 + C51382 * C3455 + C10923 * C862 +
               C51463 * C876) *
                  C1723 -
              (C10924 * C3456 + C51382 * C3459 + C10923 * C877 +
               C51463 * C886) *
                  C51260) *
                 C51168) *
                C51356) *
               C51234) *
              C51191)) /
        (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                 C1722 +
             (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                 C1720 -
             (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                 C1723 -
             (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                 C51260) *
                C51434 +
            ((C10958 + C10959) * C1722 + (C10960 + C10961) * C1720 -
             (C11343 + C11344) * C1723 - (C11345 + C11346) * C51260) *
                C51168) *
               C17436 +
           (((C14017 + C14018) * C1722 + (C14019 + C14020) * C1720 -
             (C14812 + C14813) * C1723 - (C14814 + C14815) * C51260) *
                C51434 +
            C16494 * C51168) *
               C51356) *
              C51493 +
          ((((C14813 + C14812) * C1723 -
             ((C14020 + C14019) * C1720 + (C14018 + C14017) * C1722) +
             (C14815 + C14814) * C51260) *
                C51434 +
            C16495 * C51168) *
               C17436 +
           (((C14816 + C14817) * C1723 -
             ((C14440 + C14441) * C1720 + (C14442 + C14443) * C1722) +
             (C14818 + C14819) * C51260) *
                C51434 +
            ((C14820 + C14821) * C1723 - (C14418 * C1720 + C14419 * C1722) +
             (C14822 + C14823) * C51260) *
                C51168) *
               C51356) *
              C51480 +
          ((((C14443 + C14442) * C1722 + (C14441 + C14440) * C1720 -
             (C14817 + C14816) * C1723 - (C14819 + C14818) * C51260) *
                C51434 +
            (C14428 * C1722 + C14429 * C1720 - (C14821 + C14820) * C1723 -
             (C14823 + C14822) * C51260) *
                C51168) *
               C17436 +
           (((C14590 + C14591) * C1722 + (C14592 + C14593) * C1720 -
             (C10924 * C3630 + C51382 * C3632 + C10923 * C3237 +
              C51463 * C3241) *
                 C1723 -
             (C10924 * C3633 + C51382 * C3636 + C10923 * C3242 +
              C51463 * C3249) *
                 C51260) *
                C51434 +
            ((C14446 + C14447) * C1722 + (C14448 + C14449) * C1720 -
             (C10924 * C3631 + C51382 * C3634 + C10923 * C3238 +
              C51463 * C3243) *
                 C1723 -
             (C10924 * C3635 + C51382 * C3637 + C10923 * C3244 +
              C51463 * C3250) *
                 C51260) *
                C51168) *
               C51356) *
              C1455) *
         C51186) /
        (p * q * std::sqrt(p + q));
    d2ee[125] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                 C1989 +
             (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                 C51494 -
             (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                 C1990 -
             (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                 C51483 +
             (C10923 * C992 + C51463 * C997 + C10924 * C1236 + C51382 * C1240) *
                 C1991 +
             (C10923 * C998 + C51463 * C1007 + C10924 * C1241 +
              C51382 * C1248) *
                 C1988) *
                C51434 +
            ((C10958 + C10959) * C1989 + (C10960 + C10961) * C51494 -
             (C11343 + C11344) * C1990 - (C11345 + C11346) * C51483 +
             (C11938 + C11939) * C1991 + (C11940 + C11941) * C1988) *
                C51168) *
               C17436 +
           (((C14017 + C14018) * C1989 + (C14019 + C14020) * C51494 -
             (C14812 + C14813) * C1990 - (C14814 + C14815) * C51483 +
             (C15232 + C15233) * C1991 + (C15234 + C15235) * C1988) *
                C51434 +
            (C14011 * C1989 + C14012 * C51494 - C16014 * C1990 -
             C16015 * C51483 + (C15026 + C15027) * C1991 +
             (C15028 + C15029) * C1988) *
                C51168) *
               C51356) *
              C1350 +
          ((((C14813 + C14812) * C1990 -
             ((C14020 + C14019) * C51494 + (C14018 + C14017) * C1989) +
             (C14815 + C14814) * C51483 - (C15233 + C15232) * C1991 -
             (C15235 + C15234) * C1988) *
                C51434 +
            (C16016 * C1990 - (C14013 * C51494 + C14014 * C1989) +
             C16019 * C51483 - (C15027 + C15026) * C1991 -
             (C15029 + C15028) * C1988) *
                C51168) *
               C17436 +
           (((C14816 + C14817) * C1990 -
             ((C14440 + C14441) * C51494 + (C14442 + C14443) * C1989) +
             (C14818 + C14819) * C51483 -
             (C10924 * C3762 + C51382 * C3768 + C10923 * C3448 +
              C51463 * C3451) *
                 C1991 -
             (C10924 * C3769 + C51382 * C3774 + C10923 * C3452 +
              C51463 * C3457) *
                 C1988) *
                C51434 +
            ((C14820 + C14821) * C1990 - (C14418 * C51494 + C14419 * C1989) +
             (C14822 + C14823) * C51483 -
             (C10924 * C3763 + C51382 * C3770 + C10923 * C3449 +
              C51463 * C3453) *
                 C1991 -
             (C10924 * C3771 + C51382 * C3775 + C10923 * C3454 +
              C51463 * C3458) *
                 C1988) *
                C51168) *
               C51356) *
              C51234) *
         C51186) /
        (p * q * std::sqrt(p + q));
    d2ee[126] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                  C118 +
              (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                  C51248) *
                 C51434 +
             ((C10958 + C10959) * C118 + (C10960 + C10961) * C51248) * C51168) *
                C17436 +
            (((C14017 + C14018) * C118 + (C14019 + C14020) * C51248) * C51434 +
             C14027 * C51168) *
                C51356) *
               C622 -
           ((C14450 * C51168 +
             ((C14440 + C14441) * C51248 + (C14442 + C14443) * C118) * C51434) *
                C51356 +
            (C14028 * C51168 +
             ((C14020 + C14019) * C51248 + (C14018 + C14017) * C118) * C51434) *
                C17436) *
               C623 +
           ((((C14443 + C14442) * C118 + (C14441 + C14440) * C51248) * C51434 +
             C14451 * C51168) *
                C17436 +
            (((C14590 + C14591) * C118 + (C14592 + C14593) * C51248) * C51434 +
             ((C14446 + C14447) * C118 + (C14448 + C14449) * C51248) * C51168) *
                C51356) *
               C624) *
              C51439 +
          (((C14027 * C51434 + C14029 * C51168) * C17436 +
            (C14451 * C51434 +
             ((C11528 + C11529) * C118 + (C11530 + C11531) * C51248) * C51168) *
                C51356) *
               C623 -
           ((C11170 * C51168 + C14028 * C51434) * C51356 +
            (((C10965 + C10964) * C51248 + (C10963 + C10962) * C118) * C51168 +
             ((C10961 + C10960) * C51248 + (C10959 + C10958) * C118) * C51434) *
                C17436) *
               C622 -
           ((((C10924 * C4264 + C51382 * C4265 + C10923 * C748 +
               C51463 * C755) *
                  C51248 +
              (C10924 * C4262 + C51382 * C4263 + C10923 * C743 +
               C51463 * C749) *
                  C118) *
                 C51168 +
             ((C14449 + C14448) * C51248 + (C14447 + C14446) * C118) * C51434) *
                C51356 +
            (((C11531 + C11530) * C51248 + (C11529 + C11528) * C118) * C51168 +
             C14450 * C51434) *
                C17436) *
               C624) *
              C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                 C118 +
             (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                 C51248) *
                C51434 +
            ((C10958 + C10959) * C118 + (C10960 + C10961) * C51248) * C51168) *
               C17436 +
           (((C14017 + C14018) * C118 + (C14019 + C14020) * C51248) * C51434 +
            C14027 * C51168) *
               C51356) *
              C51218 * C113 -
          ((C11170 * C51168 + C14028 * C51434) * C51356 +
           (((C10965 + C10964) * C51248 + (C10963 + C10962) * C118) * C51168 +
            ((C10961 + C10960) * C51248 + (C10959 + C10958) * C118) * C51434) *
               C17436) *
              C51218 * C114 +
          ((C10982 * C51434 +
            ((C10969 + C10968) * C118 + (C10967 + C10966) * C51248) * C51168) *
               C17436 +
           (C14029 * C51434 +
            ((C11162 + C11163) * C118 + (C11164 + C11165) * C51248) * C51168) *
               C51356) *
              C51218 * C115 -
          ((((C10924 * C1590 + C51382 * C1591 + C10923 * C309 + C51463 * C316) *
                 C51248 +
             (C10924 * C1588 + C51382 * C1589 + C10923 * C298 + C51463 * C308) *
                 C118) *
                C51168 +
            ((C11165 + C11164) * C51248 + (C11163 + C11162) * C118) * C51434) *
               C51356 +
           (((C10973 + C10972) * C51248 + (C10971 + C10970) * C118) * C51168 +
            C10983 * C51434) *
               C17436) *
              C51218 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                 C989 +
             (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                 C986 -
             (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                 C990 -
             (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                 C987 +
             (C10923 * C992 + C51463 * C997 + C10924 * C1236 + C51382 * C1240) *
                 C991 +
             (C10923 * C998 + C51463 * C1007 + C10924 * C1241 +
              C51382 * C1248) *
                 C988) *
                C51434 +
            ((C10958 + C10959) * C989 + (C10960 + C10961) * C986 -
             (C11343 + C11344) * C990 - (C11345 + C11346) * C987 +
             (C11938 + C11939) * C991 + (C11940 + C11941) * C988) *
                C51168) *
               C17436 +
           (((C14017 + C14018) * C989 + (C14019 + C14020) * C986 -
             (C14812 + C14813) * C990 - (C14814 + C14815) * C987 +
             (C15232 + C15233) * C991 + (C15234 + C15235) * C988) *
                C51434 +
            (C14011 * C989 + C14012 * C986 - C16014 * C990 - C16015 * C987 +
             (C15026 + C15027) * C991 + (C15028 + C15029) * C988) *
                C51168) *
               C51356) *
              C51218 * C51439 +
          ((((C11344 + C11343) * C990 -
             ((C10961 + C10960) * C986 + (C10959 + C10958) * C989) +
             (C11346 + C11345) * C987 - (C11939 + C11938) * C991 -
             (C11941 + C11940) * C988) *
                C51434 +
            ((C11349 + C11348) * C990 -
             ((C10965 + C10964) * C986 + (C10963 + C10962) * C989) +
             (C11351 + C11350) * C987 - (C11943 + C11942) * C991 -
             (C11945 + C11944) * C988) *
                C51168) *
               C17436 +
           ((C16016 * C990 - (C14013 * C986 + C14014 * C989) + C16019 * C987 -
             (C15027 + C15026) * C991 - (C15029 + C15028) * C988) *
                C51434 +
            ((C12696 + C12697) * C990 - (C11166 * C986 + C11167 * C989) +
             (C12698 + C12699) * C987 -
             (C10924 * C7165 + C51382 * C7166 + C10923 * C1148 +
              C51463 * C1154) *
                 C991 -
             (C10924 * C7167 + C51382 * C7168 + C10923 * C1155 +
              C51463 * C1160) *
                 C988) *
                C51168) *
               C51356) *
              C51218 * C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[127] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                 C118 +
             (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                 C51248) *
                C51434 +
            ((C10958 + C10959) * C118 + (C10960 + C10961) * C51248) * C51168) *
               C17436 +
           (((C14017 + C14018) * C118 + (C14019 + C14020) * C51248) * C51434 +
            C14027 * C51168) *
               C51356) *
              C737 -
          ((C14450 * C51168 +
            ((C14440 + C14441) * C51248 + (C14442 + C14443) * C118) * C51434) *
               C51356 +
           (C14028 * C51168 +
            ((C14020 + C14019) * C51248 + (C14018 + C14017) * C118) * C51434) *
               C17436) *
              C738 +
          ((((C14443 + C14442) * C118 + (C14441 + C14440) * C51248) * C51434 +
            C14451 * C51168) *
               C17436 +
           (((C14590 + C14591) * C118 + (C14592 + C14593) * C51248) * C51434 +
            ((C14446 + C14447) * C118 + (C14448 + C14449) * C51248) * C51168) *
               C51356) *
              C739 -
          ((((C10924 * C3248 + C51382 * C3252 + C10923 * C2942 +
              C51463 * C2946) *
                 C51248 +
             (C10924 * C3240 + C51382 * C3247 + C10923 * C2937 +
              C51463 * C2941) *
                 C118) *
                C51168 +
            ((C10924 * C3246 + C51382 * C3251 + C10923 * C2940 +
              C51463 * C2945) *
                 C51248 +
             (C10924 * C3239 + C51382 * C3245 + C10923 * C2936 +
              C51463 * C2939) *
                 C118) *
                C51434) *
               C51356 +
           (((C14449 + C14448) * C51248 + (C14447 + C14446) * C118) * C51168 +
            ((C14593 + C14592) * C51248 + (C14591 + C14590) * C118) * C51434) *
               C17436) *
              C740) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                  C118 +
              (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                  C51248) *
                 C51434 +
             ((C10958 + C10959) * C118 + (C10960 + C10961) * C51248) * C51168) *
                C17436 +
            (((C14017 + C14018) * C118 + (C14019 + C14020) * C51248) * C51434 +
             C14027 * C51168) *
                C51356) *
               C51446 -
           ((C14450 * C51168 +
             ((C14440 + C14441) * C51248 + (C14442 + C14443) * C118) * C51434) *
                C51356 +
            (C14028 * C51168 +
             ((C14020 + C14019) * C51248 + (C14018 + C14017) * C118) * C51434) *
                C17436) *
               C51234) *
              C291 +
          (((C14027 * C51434 + C14029 * C51168) * C17436 +
            (C14451 * C51434 +
             ((C11528 + C11529) * C118 + (C11530 + C11531) * C51248) * C51168) *
                C51356) *
               C51234 -
           ((C11170 * C51168 + C14028 * C51434) * C51356 +
            (((C10965 + C10964) * C51248 + (C10963 + C10962) * C118) * C51168 +
             ((C10961 + C10960) * C51248 + (C10959 + C10958) * C118) * C51434) *
                C17436) *
               C51446) *
              C292 +
          (((C10982 * C51434 +
             ((C10969 + C10968) * C118 + (C10967 + C10966) * C51248) * C51168) *
                C17436 +
            (C14029 * C51434 +
             ((C11162 + C11163) * C118 + (C11164 + C11165) * C51248) * C51168) *
                C51356) *
               C51446 -
           ((((C10924 * C879 + C51382 * C887 + C10923 * C639 + C51463 * C645) *
                  C51248 +
              (C10924 * C863 + C51382 * C878 + C10923 * C630 + C51463 * C638) *
                  C118) *
                 C51168 +
             ((C11531 + C11530) * C51248 + (C11529 + C11528) * C118) * C51434) *
                C51356 +
            (((C11165 + C11164) * C51248 + (C11163 + C11162) * C118) * C51168 +
             C11170 * C51434) *
                C17436) *
               C51234) *
              C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                 C989 +
             (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                 C986 -
             (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                 C990 -
             (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                 C987 +
             (C10923 * C992 + C51463 * C997 + C10924 * C1236 + C51382 * C1240) *
                 C991 +
             (C10923 * C998 + C51463 * C1007 + C10924 * C1241 +
              C51382 * C1248) *
                 C988) *
                C51434 +
            ((C10958 + C10959) * C989 + (C10960 + C10961) * C986 -
             (C11343 + C11344) * C990 - (C11345 + C11346) * C987 +
             (C11938 + C11939) * C991 + (C11940 + C11941) * C988) *
                C51168) *
               C17436 +
           (((C14017 + C14018) * C989 + (C14019 + C14020) * C986 -
             (C14812 + C14813) * C990 - (C14814 + C14815) * C987 +
             (C15232 + C15233) * C991 + (C15234 + C15235) * C988) *
                C51434 +
            (C14011 * C989 + C14012 * C986 - C16014 * C990 - C16015 * C987 +
             (C15026 + C15027) * C991 + (C15028 + C15029) * C988) *
                C51168) *
               C51356) *
              C51446 +
          ((((C14813 + C14812) * C990 -
             ((C14020 + C14019) * C986 + (C14018 + C14017) * C989) +
             (C14815 + C14814) * C987 - (C15233 + C15232) * C991 -
             (C15235 + C15234) * C988) *
                C51434 +
            (C16016 * C990 - (C14013 * C986 + C14014 * C989) + C16019 * C987 -
             (C15027 + C15026) * C991 - (C15029 + C15028) * C988) *
                C51168) *
               C17436 +
           (((C14816 + C14817) * C990 -
             ((C14440 + C14441) * C986 + (C14442 + C14443) * C989) +
             (C14818 + C14819) * C987 -
             (C10924 * C3762 + C51382 * C3768 + C10923 * C3448 +
              C51463 * C3451) *
                 C991 -
             (C10924 * C3769 + C51382 * C3774 + C10923 * C3452 +
              C51463 * C3457) *
                 C988) *
                C51434 +
            ((C14820 + C14821) * C990 - (C14418 * C986 + C14419 * C989) +
             (C14822 + C14823) * C987 -
             (C10924 * C3763 + C51382 * C3770 + C10923 * C3449 +
              C51463 * C3453) *
                 C991 -
             (C10924 * C3771 + C51382 * C3775 + C10923 * C3454 +
              C51463 * C3458) *
                 C988) *
                C51168) *
               C51356) *
              C51234) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[128] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                 C452 +
             (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                 C51448 -
             (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                 C453 -
             (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                 C51260) *
                C51434 +
            ((C10958 + C10959) * C452 + (C10960 + C10961) * C51448 -
             (C11343 + C11344) * C453 - (C11345 + C11346) * C51260) *
                C51168) *
               C17436 +
           (((C14017 + C14018) * C452 + (C14019 + C14020) * C51448 -
             (C14812 + C14813) * C453 - (C14814 + C14815) * C51260) *
                C51434 +
            C16028 * C51168) *
               C51356) *
              C622 +
          ((((C14813 + C14812) * C453 -
             ((C14020 + C14019) * C51448 + (C14018 + C14017) * C452) +
             (C14815 + C14814) * C51260) *
                C51434 +
            C16029 * C51168) *
               C17436 +
           (((C14816 + C14817) * C453 -
             ((C14440 + C14441) * C51448 + (C14442 + C14443) * C452) +
             (C14818 + C14819) * C51260) *
                C51434 +
            ((C14820 + C14821) * C453 - (C14418 * C51448 + C14419 * C452) +
             (C14822 + C14823) * C51260) *
                C51168) *
               C51356) *
              C623 +
          ((((C14443 + C14442) * C452 + (C14441 + C14440) * C51448 -
             (C14817 + C14816) * C453 - (C14819 + C14818) * C51260) *
                C51434 +
            (C14428 * C452 + C14429 * C51448 - (C14821 + C14820) * C453 -
             (C14823 + C14822) * C51260) *
                C51168) *
               C17436 +
           (((C14590 + C14591) * C452 + (C14592 + C14593) * C51448 -
             (C10924 * C3630 + C51382 * C3632 + C10923 * C3237 +
              C51463 * C3241) *
                 C453 -
             (C10924 * C3633 + C51382 * C3636 + C10923 * C3242 +
              C51463 * C3249) *
                 C51260) *
                C51434 +
            ((C14446 + C14447) * C452 + (C14448 + C14449) * C51448 -
             (C10924 * C3631 + C51382 * C3634 + C10923 * C3238 +
              C51463 * C3243) *
                 C453 -
             (C10924 * C3635 + C51382 * C3637 + C10923 * C3244 +
              C51463 * C3250) *
                 C51260) *
                C51168) *
               C51356) *
              C624) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                 C452 +
             (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                 C51448 -
             (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                 C453 -
             (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                 C51260) *
                C51434 +
            ((C10958 + C10959) * C452 + (C10960 + C10961) * C51448 -
             (C11343 + C11344) * C453 - (C11345 + C11346) * C51260) *
                C51168) *
               C17436 +
           (((C14017 + C14018) * C452 + (C14019 + C14020) * C51448 -
             (C14812 + C14813) * C453 - (C14814 + C14815) * C51260) *
                C51434 +
            C16028 * C51168) *
               C51356) *
              C51218 * C291 +
          ((((C11344 + C11343) * C453 -
             ((C10961 + C10960) * C51448 + (C10959 + C10958) * C452) +
             (C11346 + C11345) * C51260) *
                C51434 +
            ((C11349 + C11348) * C453 -
             ((C10965 + C10964) * C51448 + (C10963 + C10962) * C452) +
             (C11351 + C11350) * C51260) *
                C51168) *
               C17436 +
           (C16029 * C51434 +
            ((C12696 + C12697) * C453 - (C11166 * C51448 + C11167 * C452) +
             (C12698 + C12699) * C51260) *
                C51168) *
               C51356) *
              C51218 * C292 +
          ((C11361 * C51434 +
            ((C10969 + C10968) * C452 + (C10967 + C10966) * C51448 -
             (C11353 + C11352) * C453 - (C11355 + C11354) * C51260) *
                C51168) *
               C17436 +
           ((C14015 * C452 + C14016 * C51448 - (C12697 + C12696) * C453 -
             (C12699 + C12698) * C51260) *
                C51434 +
            ((C11162 + C11163) * C452 + (C11164 + C11165) * C51448 -
             (C10924 * C1149 + C51382 * C1156 + C10923 * C859 + C51463 * C870) *
                 C453 -
             (C10924 * C1157 + C51382 * C1161 + C10923 * C871 + C51463 * C883) *
                 C51260) *
                C51168) *
               C51356) *
              C51218 * C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                C1232 +
            (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                C1228 -
            (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                C1233 -
            (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                C1229 +
            (C10923 * C992 + C51463 * C997 + C10924 * C1236 + C51382 * C1240) *
                C1234 +
            (C10923 * C998 + C51463 * C1007 + C10924 * C1241 + C51382 * C1248) *
                C1230 -
            (C10924 * C6389 + C51382 * C6392 + C10923 * C1236 +
             C51463 * C1240) *
                C1235 -
            (C10924 * C6393 + C51382 * C6398 + C10923 * C1241 +
             C51463 * C1248) *
                C1231) *
               C51434 +
           ((C10958 + C10959) * C1232 + (C10960 + C10961) * C1228 -
            (C11343 + C11344) * C1233 - (C11345 + C11346) * C1229 +
            (C11938 + C11939) * C1234 + (C11940 + C11941) * C1230 -
            (C10924 * C6390 + C51382 * C6394 + C10923 * C1237 +
             C51463 * C1242) *
                C1235 -
            (C10924 * C6395 + C51382 * C6399 + C10923 * C1243 +
             C51463 * C1249) *
                C1231) *
               C51168) *
              C17436 +
          (((C14017 + C14018) * C1232 + (C14019 + C14020) * C1228 -
            (C14812 + C14813) * C1233 - (C14814 + C14815) * C1229 +
            (C15232 + C15233) * C1234 + (C15234 + C15235) * C1230 -
            (C10924 * C6565 + C51382 * C6567 + C10923 * C3760 +
             C51463 * C3764) *
                C1235 -
            (C10924 * C6568 + C51382 * C6571 + C10923 * C3765 +
             C51463 * C3772) *
                C1231) *
               C51434 +
           (C14011 * C1232 + C14012 * C1228 - C16014 * C1233 - C16015 * C1229 +
            (C15026 + C15027) * C1234 + (C15028 + C15029) * C1230 -
            (C10924 * C6566 + C51382 * C6569 + C10923 * C3761 +
             C51463 * C3766) *
                C1235 -
            (C10924 * C6570 + C51382 * C6572 + C10923 * C3767 +
             C51463 * C3773) *
                C1231) *
               C51168) *
              C51356) *
         C51218 * C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[129] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                 C1722 +
             (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                 C1720 -
             (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                 C1723 -
             (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                 C51260) *
                C51434 +
            ((C10958 + C10959) * C1722 + (C10960 + C10961) * C1720 -
             (C11343 + C11344) * C1723 - (C11345 + C11346) * C51260) *
                C51168) *
               C17436 +
           (((C14017 + C14018) * C1722 + (C14019 + C14020) * C1720 -
             (C14812 + C14813) * C1723 - (C14814 + C14815) * C51260) *
                C51434 +
            C16494 * C51168) *
               C51356) *
              C51218 * C51492 +
          ((((C11344 + C11343) * C1723 -
             ((C10961 + C10960) * C1720 + (C10959 + C10958) * C1722) +
             (C11346 + C11345) * C51260) *
                C51434 +
            ((C11349 + C11348) * C1723 -
             ((C10965 + C10964) * C1720 + (C10963 + C10962) * C1722) +
             (C11351 + C11350) * C51260) *
                C51168) *
               C17436 +
           (C16495 * C51434 +
            ((C12696 + C12697) * C1723 - (C11166 * C1720 + C11167 * C1722) +
             (C12698 + C12699) * C51260) *
                C51168) *
               C51356) *
              C51218 * C51477 +
          ((C12852 * C51434 +
            ((C10969 + C10968) * C1722 + (C10967 + C10966) * C1720 -
             (C11353 + C11352) * C1723 - (C11355 + C11354) * C51260) *
                C51168) *
               C17436 +
           ((C14015 * C1722 + C14016 * C1720 - (C12697 + C12696) * C1723 -
             (C12699 + C12698) * C51260) *
                C51434 +
            ((C11162 + C11163) * C1722 + (C11164 + C11165) * C1720 -
             (C10924 * C1149 + C51382 * C1156 + C10923 * C859 + C51463 * C870) *
                 C1723 -
             (C10924 * C1157 + C51382 * C1161 + C10923 * C871 + C51463 * C883) *
                 C51260) *
                C51168) *
               C51356) *
              C51218 * C1354)) /
        (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                  C1722 +
              (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                  C1720 -
              (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                  C1723 -
              (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                  C51260) *
                 C51434 +
             ((C10958 + C10959) * C1722 + (C10960 + C10961) * C1720 -
              (C11343 + C11344) * C1723 - (C11345 + C11346) * C51260) *
                 C51168) *
                C17436 +
            (((C14017 + C14018) * C1722 + (C14019 + C14020) * C1720 -
              (C14812 + C14813) * C1723 - (C14814 + C14815) * C51260) *
                 C51434 +
             C16494 * C51168) *
                C51356) *
               C51446 +
           ((((C14813 + C14812) * C1723 -
              ((C14020 + C14019) * C1720 + (C14018 + C14017) * C1722) +
              (C14815 + C14814) * C51260) *
                 C51434 +
             C16495 * C51168) *
                C17436 +
            (((C14816 + C14817) * C1723 -
              ((C14440 + C14441) * C1720 + (C14442 + C14443) * C1722) +
              (C14818 + C14819) * C51260) *
                 C51434 +
             ((C14820 + C14821) * C1723 - (C14418 * C1720 + C14419 * C1722) +
              (C14822 + C14823) * C51260) *
                 C51168) *
                C51356) *
               C51234) *
              C1456 +
          (((((C11344 + C11343) * C1723 -
              ((C10961 + C10960) * C1720 + (C10959 + C10958) * C1722) +
              (C11346 + C11345) * C51260) *
                 C51434 +
             ((C11349 + C11348) * C1723 -
              ((C10965 + C10964) * C1720 + (C10963 + C10962) * C1722) +
              (C11351 + C11350) * C51260) *
                 C51168) *
                C17436 +
            (C16495 * C51434 +
             ((C12696 + C12697) * C1723 - (C11166 * C1720 + C11167 * C1722) +
              (C12698 + C12699) * C51260) *
                 C51168) *
                C51356) *
               C51446 +
           ((C16494 * C51434 +
             (C14015 * C1722 + C14016 * C1720 - (C12697 + C12696) * C1723 -
              (C12699 + C12698) * C51260) *
                 C51168) *
                C17436 +
            ((C14428 * C1722 + C14429 * C1720 - (C14821 + C14820) * C1723 -
              (C14823 + C14822) * C51260) *
                 C51434 +
             ((C11528 + C11529) * C1722 + (C11530 + C11531) * C1720 -
              (C10924 * C3450 + C51382 * C3455 + C10923 * C862 +
               C51463 * C876) *
                  C1723 -
              (C10924 * C3456 + C51382 * C3459 + C10923 * C877 +
               C51463 * C886) *
                  C51260) *
                 C51168) *
                C51356) *
               C51234) *
              C51191)) /
        (p * q * std::sqrt(p + q));
    d2ee[131] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                 C1989 +
             (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                 C51494 -
             (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                 C1990 -
             (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                 C51483 +
             (C10923 * C992 + C51463 * C997 + C10924 * C1236 + C51382 * C1240) *
                 C1991 +
             (C10923 * C998 + C51463 * C1007 + C10924 * C1241 +
              C51382 * C1248) *
                 C1988) *
                C51434 +
            ((C10958 + C10959) * C1989 + (C10960 + C10961) * C51494 -
             (C11343 + C11344) * C1990 - (C11345 + C11346) * C51483 +
             (C11938 + C11939) * C1991 + (C11940 + C11941) * C1988) *
                C51168) *
               C17436 +
           (((C14017 + C14018) * C1989 + (C14019 + C14020) * C51494 -
             (C14812 + C14813) * C1990 - (C14814 + C14815) * C51483 +
             (C15232 + C15233) * C1991 + (C15234 + C15235) * C1988) *
                C51434 +
            (C14011 * C1989 + C14012 * C51494 - C16014 * C1990 -
             C16015 * C51483 + (C15026 + C15027) * C1991 +
             (C15028 + C15029) * C1988) *
                C51168) *
               C51356) *
              C51218 * C1456 +
          ((((C11344 + C11343) * C1990 -
             ((C10961 + C10960) * C51494 + (C10959 + C10958) * C1989) +
             (C11346 + C11345) * C51483 - (C11939 + C11938) * C1991 -
             (C11941 + C11940) * C1988) *
                C51434 +
            ((C11349 + C11348) * C1990 -
             ((C10965 + C10964) * C51494 + (C10963 + C10962) * C1989) +
             (C11351 + C11350) * C51483 - (C11943 + C11942) * C1991 -
             (C11945 + C11944) * C1988) *
                C51168) *
               C17436 +
           ((C16016 * C1990 - (C14013 * C51494 + C14014 * C1989) +
             C16019 * C51483 - (C15027 + C15026) * C1991 -
             (C15029 + C15028) * C1988) *
                C51434 +
            ((C12696 + C12697) * C1990 - (C11166 * C51494 + C11167 * C1989) +
             (C12698 + C12699) * C51483 -
             (C10924 * C7165 + C51382 * C7166 + C10923 * C1148 +
              C51463 * C1154) *
                 C1991 -
             (C10924 * C7167 + C51382 * C7168 + C10923 * C1155 +
              C51463 * C1160) *
                 C1988) *
                C51168) *
               C51356) *
              C51218 * C51191)) /
        (p * q * std::sqrt(p + q));
    d2ee[132] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                 C118 +
             (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                 C51248) *
                C51434 +
            ((C10958 + C10959) * C118 + (C10960 + C10961) * C51248) * C51168) *
               C17436 +
           (((C14017 + C14018) * C118 + (C14019 + C14020) * C51248) * C51434 +
            C14027 * C51168) *
               C51356) *
              C51218 * C113 -
          ((C11170 * C51168 + C14028 * C51434) * C51356 +
           (((C10965 + C10964) * C51248 + (C10963 + C10962) * C118) * C51168 +
            ((C10961 + C10960) * C51248 + (C10959 + C10958) * C118) * C51434) *
               C17436) *
              C51218 * C114 +
          ((C10982 * C51434 +
            ((C10969 + C10968) * C118 + (C10967 + C10966) * C51248) * C51168) *
               C17436 +
           (C14029 * C51434 +
            ((C11162 + C11163) * C118 + (C11164 + C11165) * C51248) * C51168) *
               C51356) *
              C51218 * C115 -
          ((((C10924 * C1590 + C51382 * C1591 + C10923 * C309 + C51463 * C316) *
                 C51248 +
             (C10924 * C1588 + C51382 * C1589 + C10923 * C298 + C51463 * C308) *
                 C118) *
                C51168 +
            ((C11165 + C11164) * C51248 + (C11163 + C11162) * C118) * C51434) *
               C51356 +
           (((C10973 + C10972) * C51248 + (C10971 + C10970) * C118) * C51168 +
            C10983 * C51434) *
               C17436) *
              C51218 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                  C118 +
              (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                  C51248) *
                 C51434 +
             ((C10958 + C10959) * C118 + (C10960 + C10961) * C51248) * C51168) *
                C17436 +
            (((C14017 + C14018) * C118 + (C14019 + C14020) * C51248) * C51434 +
             C14027 * C51168) *
                C51356) *
               C622 -
           ((C14450 * C51168 +
             ((C14440 + C14441) * C51248 + (C14442 + C14443) * C118) * C51434) *
                C51356 +
            (C14028 * C51168 +
             ((C14020 + C14019) * C51248 + (C14018 + C14017) * C118) * C51434) *
                C17436) *
               C623 +
           ((((C14443 + C14442) * C118 + (C14441 + C14440) * C51248) * C51434 +
             C14451 * C51168) *
                C17436 +
            (((C14590 + C14591) * C118 + (C14592 + C14593) * C51248) * C51434 +
             ((C14446 + C14447) * C118 + (C14448 + C14449) * C51248) * C51168) *
                C51356) *
               C624) *
              C51439 +
          (((C14027 * C51434 + C14029 * C51168) * C17436 +
            (C14451 * C51434 +
             ((C11528 + C11529) * C118 + (C11530 + C11531) * C51248) * C51168) *
                C51356) *
               C623 -
           ((C11170 * C51168 + C14028 * C51434) * C51356 +
            (((C10965 + C10964) * C51248 + (C10963 + C10962) * C118) * C51168 +
             ((C10961 + C10960) * C51248 + (C10959 + C10958) * C118) * C51434) *
                C17436) *
               C622 -
           ((((C10924 * C4264 + C51382 * C4265 + C10923 * C748 +
               C51463 * C755) *
                  C51248 +
              (C10924 * C4262 + C51382 * C4263 + C10923 * C743 +
               C51463 * C749) *
                  C118) *
                 C51168 +
             ((C14449 + C14448) * C51248 + (C14447 + C14446) * C118) * C51434) *
                C51356 +
            (((C11531 + C11530) * C51248 + (C11529 + C11528) * C118) * C51168 +
             C14450 * C51434) *
                C17436) *
               C624) *
              C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[133] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                  C118 +
              (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                  C51248) *
                 C51434 +
             ((C10958 + C10959) * C118 + (C10960 + C10961) * C51248) * C51168) *
                C17436 +
            (((C14017 + C14018) * C118 + (C14019 + C14020) * C51248) * C51434 +
             C14027 * C51168) *
                C51356) *
               C51446 -
           ((C14450 * C51168 +
             ((C14440 + C14441) * C51248 + (C14442 + C14443) * C118) * C51434) *
                C51356 +
            (C14028 * C51168 +
             ((C14020 + C14019) * C51248 + (C14018 + C14017) * C118) * C51434) *
                C17436) *
               C51234) *
              C291 +
          (((C14027 * C51434 + C14029 * C51168) * C17436 +
            (C14451 * C51434 +
             ((C11528 + C11529) * C118 + (C11530 + C11531) * C51248) * C51168) *
                C51356) *
               C51234 -
           ((C11170 * C51168 + C14028 * C51434) * C51356 +
            (((C10965 + C10964) * C51248 + (C10963 + C10962) * C118) * C51168 +
             ((C10961 + C10960) * C51248 + (C10959 + C10958) * C118) * C51434) *
                C17436) *
               C51446) *
              C292 +
          (((C10982 * C51434 +
             ((C10969 + C10968) * C118 + (C10967 + C10966) * C51248) * C51168) *
                C17436 +
            (C14029 * C51434 +
             ((C11162 + C11163) * C118 + (C11164 + C11165) * C51248) * C51168) *
                C51356) *
               C51446 -
           ((((C10924 * C879 + C51382 * C887 + C10923 * C639 + C51463 * C645) *
                  C51248 +
              (C10924 * C863 + C51382 * C878 + C10923 * C630 + C51463 * C638) *
                  C118) *
                 C51168 +
             ((C11531 + C11530) * C51248 + (C11529 + C11528) * C118) * C51434) *
                C51356 +
            (((C11165 + C11164) * C51248 + (C11163 + C11162) * C118) * C51168 +
             C11170 * C51434) *
                C17436) *
               C51234) *
              C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                 C118 +
             (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                 C51248) *
                C51434 +
            ((C10958 + C10959) * C118 + (C10960 + C10961) * C51248) * C51168) *
               C17436 +
           (((C14017 + C14018) * C118 + (C14019 + C14020) * C51248) * C51434 +
            C14027 * C51168) *
               C51356) *
              C737 -
          ((C14450 * C51168 +
            ((C14440 + C14441) * C51248 + (C14442 + C14443) * C118) * C51434) *
               C51356 +
           (C14028 * C51168 +
            ((C14020 + C14019) * C51248 + (C14018 + C14017) * C118) * C51434) *
               C17436) *
              C738 +
          ((((C14443 + C14442) * C118 + (C14441 + C14440) * C51248) * C51434 +
            C14451 * C51168) *
               C17436 +
           (((C14590 + C14591) * C118 + (C14592 + C14593) * C51248) * C51434 +
            ((C14446 + C14447) * C118 + (C14448 + C14449) * C51248) * C51168) *
               C51356) *
              C739 -
          ((((C10924 * C3248 + C51382 * C3252 + C10923 * C2942 +
              C51463 * C2946) *
                 C51248 +
             (C10924 * C3240 + C51382 * C3247 + C10923 * C2937 +
              C51463 * C2941) *
                 C118) *
                C51168 +
            ((C10924 * C3246 + C51382 * C3251 + C10923 * C2940 +
              C51463 * C2945) *
                 C51248 +
             (C10924 * C3239 + C51382 * C3245 + C10923 * C2936 +
              C51463 * C2939) *
                 C118) *
                C51434) *
               C51356 +
           (((C14449 + C14448) * C51248 + (C14447 + C14446) * C118) * C51168 +
            ((C14593 + C14592) * C51248 + (C14591 + C14590) * C118) * C51434) *
               C17436) *
              C740) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[134] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                 C452 +
             (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                 C51448 -
             (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                 C453 -
             (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                 C51260) *
                C51434 +
            ((C10958 + C10959) * C452 + (C10960 + C10961) * C51448 -
             (C11343 + C11344) * C453 - (C11345 + C11346) * C51260) *
                C51168) *
               C17436 +
           (((C14017 + C14018) * C452 + (C14019 + C14020) * C51448 -
             (C14812 + C14813) * C453 - (C14814 + C14815) * C51260) *
                C51434 +
            C16028 * C51168) *
               C51356) *
              C51218 * C291 +
          ((((C11344 + C11343) * C453 -
             ((C10961 + C10960) * C51448 + (C10959 + C10958) * C452) +
             (C11346 + C11345) * C51260) *
                C51434 +
            ((C11349 + C11348) * C453 -
             ((C10965 + C10964) * C51448 + (C10963 + C10962) * C452) +
             (C11351 + C11350) * C51260) *
                C51168) *
               C17436 +
           (C16029 * C51434 +
            ((C12696 + C12697) * C453 - (C11166 * C51448 + C11167 * C452) +
             (C12698 + C12699) * C51260) *
                C51168) *
               C51356) *
              C51218 * C292 +
          ((C11361 * C51434 +
            ((C10969 + C10968) * C452 + (C10967 + C10966) * C51448 -
             (C11353 + C11352) * C453 - (C11355 + C11354) * C51260) *
                C51168) *
               C17436 +
           ((C14015 * C452 + C14016 * C51448 - (C12697 + C12696) * C453 -
             (C12699 + C12698) * C51260) *
                C51434 +
            ((C11162 + C11163) * C452 + (C11164 + C11165) * C51448 -
             (C10924 * C1149 + C51382 * C1156 + C10923 * C859 + C51463 * C870) *
                 C453 -
             (C10924 * C1157 + C51382 * C1161 + C10923 * C871 + C51463 * C883) *
                 C51260) *
                C51168) *
               C51356) *
              C51218 * C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10923 * C119 + C51463 * C126 + C10924 * C454 + C51382 * C460) *
                 C452 +
             (C10923 * C127 + C51463 * C140 + C10924 * C461 + C51382 * C472) *
                 C51448 -
             (C10924 * C992 + C51382 * C997 + C10923 * C454 + C51463 * C460) *
                 C453 -
             (C10924 * C998 + C51382 * C1007 + C10923 * C461 + C51463 * C472) *
                 C51260) *
                C51434 +
            ((C10958 + C10959) * C452 + (C10960 + C10961) * C51448 -
             (C11343 + C11344) * C453 - (C11345 + C11346) * C51260) *
                C51168) *
               C17436 +
           (((C14017 + C14018) * C452 + (C14019 + C14020) * C51448 -
             (C14812 + C14813) * C453 - (C14814 + C14815) * C51260) *
                C51434 +
            C16028 * C51168) *
               C51356) *
              C622 +
          ((((C14813 + C14812) * C453 -
             ((C14020 + C14019) * C51448 + (C14018 + C14017) * C452) +
             (C14815 + C14814) * C51260) *
                C51434 +
            C16029 * C51168) *
               C17436 +
           (((C14816 + C14817) * C453 -
             ((C14440 + C14441) * C51448 + (C14442 + C14443) * C452) +
             (C14818 + C14819) * C51260) *
                C51434 +
            ((C14820 + C14821) * C453 - (C14418 * C51448 + C14419 * C452) +
             (C14822 + C14823) * C51260) *
                C51168) *
               C51356) *
              C623 +
          ((((C14443 + C14442) * C452 + (C14441 + C14440) * C51448 -
             (C14817 + C14816) * C453 - (C14819 + C14818) * C51260) *
                C51434 +
            (C14428 * C452 + C14429 * C51448 - (C14821 + C14820) * C453 -
             (C14823 + C14822) * C51260) *
                C51168) *
               C17436 +
           (((C14590 + C14591) * C452 + (C14592 + C14593) * C51448 -
             (C10924 * C3630 + C51382 * C3632 + C10923 * C3237 +
              C51463 * C3241) *
                 C453 -
             (C10924 * C3633 + C51382 * C3636 + C10923 * C3242 +
              C51463 * C3249) *
                 C51260) *
                C51434 +
            ((C14446 + C14447) * C452 + (C14448 + C14449) * C51448 -
             (C10924 * C3631 + C51382 * C3634 + C10923 * C3238 +
              C51463 * C3243) *
                 C453 -
             (C10924 * C3635 + C51382 * C3637 + C10923 * C3244 +
              C51463 * C3250) *
                 C51260) *
                C51168) *
               C51356) *
              C624) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[135] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C118 +
              (C117 * C127 + C51318 * C140) * C51248) *
                 C17433 +
             (C178 + C179) * C17434 + C188 * C17435) *
                C17436 +
            ((C2617 + C2618) * C17433 + C2590 * C17434 + C2602 * C17435) *
                C51356) *
               C1350 -
           ((C2608 * C17435 + C2600 * C17434 + (C2620 + C2619) * C17433) *
                C51356 +
            (C352 * C17435 + C2601 * C17434 + (C2618 + C2617) * C17433) *
                C17436) *
               C51234) *
              C51492 +
          (((C2590 * C17433 + C2602 * C17434 + C8409 * C17435) * C17436 +
            (C2595 * C17433 + C2603 * C17434 + (C670 + C671) * C17435) *
                C51356) *
               C51234 -
           ((C351 * C17435 + C352 * C17434 + C2601 * C17433) * C51356 +
            (C191 * C17435 + (C181 + C180) * C17434 + (C179 + C178) * C17433) *
                C17436) *
               C1350) *
              C51477 +
          (((C188 * C17433 + C189 * C17434 + (C185 + C184) * C17435) * C17436 +
            (C2602 * C17433 + C8409 * C17434 + (C349 + C350) * C17435) *
                C51356) *
               C1350 -
           ((((C117 * C640 + C51318 * C646) * C51248 +
              (C117 * C631 + C51318 * C641) * C118) *
                 C17435 +
             (C671 + C670) * C17434 + C2608 * C17433) *
                C51356 +
            ((C350 + C349) * C17435 + C351 * C17434 + C352 * C17433) * C17436) *
               C51234) *
              C1354)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C118 +
             (C117 * C127 + C51318 * C140) * C51248) *
                C51163 * C20035 +
            (C2617 + C2618) * C51163 * C20036 + C20334 * C20037 +
            C20338 * C20038) *
               C1350 -
           (C20415 * C20038 + C20410 * C20037 +
            (C2620 + C2619) * C51163 * C20036 +
            (C2618 + C2617) * C51163 * C20035) *
               C51234) *
              C51492 +
          ((C2590 * C51163 * C20035 + C2595 * C51163 * C20036 +
            C2956 * C51163 * C20037 + (C2972 + C2973) * C51163 * C20038) *
               C51234 -
           (C20336 * C20038 + C20337 * C20037 + C2601 * C51163 * C20036 +
            (C179 + C178) * C51163 * C20035) *
               C1350) *
              C51477 +
          ((C188 * C51163 * C20035 + C2602 * C51163 * C20036 +
            C2603 * C51163 * C20037 + (C2623 + C2624) * C51163 * C20038) *
               C1350 -
           (((C117 * C2943 + C51318 * C2947) * C51248 +
             (C117 * C2938 + C51318 * C2944) * C118) *
                C51163 * C20038 +
            (C2624 + C2623) * C51163 * C20037 + C2608 * C51163 * C20036 +
            C352 * C51163 * C20035) *
               C51234) *
              C1354)) /
            (p * q * std::sqrt(p + q));
    d2ee[136] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C118 +
              (C117 * C127 + C51318 * C140) * C51248) *
                 C17433 +
             (C178 + C179) * C17434 + C188 * C17435) *
                C17436 +
            ((C2617 + C2618) * C17433 + C2590 * C17434 + C2602 * C17435) *
                C51356) *
               C51493 -
           ((C2608 * C17435 + C2600 * C17434 + (C2620 + C2619) * C17433) *
                C51356 +
            (C352 * C17435 + C2601 * C17434 + (C2618 + C2617) * C17433) *
                C17436) *
               C51480 +
           ((C2949 * C17433 + C2595 * C17434 + C2603 * C17435) * C17436 +
            ((C2971 + C2970) * C17433 + C2956 * C17434 +
             (C2623 + C2624) * C17435) *
                C51356) *
               C1455) *
              C1456 +
          (((C2590 * C17433 + C2602 * C17434 + C8409 * C17435) * C17436 +
            (C2595 * C17433 + C2603 * C17434 + (C670 + C671) * C17435) *
                C51356) *
               C51480 -
           ((C351 * C17435 + C352 * C17434 + C2601 * C17433) * C51356 +
            (C191 * C17435 + (C181 + C180) * C17434 + (C179 + C178) * C17433) *
                C17436) *
               C51493 -
           ((((C117 * C746 + C51318 * C754) * C51248 +
              (C117 * C742 + C51318 * C747) * C118) *
                 C17435 +
             (C2624 + C2623) * C17434 + C2951 * C17433) *
                C51356 +
            ((C671 + C670) * C17435 + C2608 * C17434 + C2600 * C17433) *
                C17436) *
               C1455) *
              C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C118 +
             (C117 * C127 + C51318 * C140) * C51248) *
                C51163 * C20035 +
            (C2617 + C2618) * C51163 * C20036 + C20334 * C20037 +
            C20338 * C20038) *
               C51493 -
           (C20415 * C20038 + C20410 * C20037 +
            (C2620 + C2619) * C51163 * C20036 +
            (C2618 + C2617) * C51163 * C20035) *
               C51480 +
           (C20334 * C20035 + C20338 * C20036 +
            (C3090 + C3091) * C51163 * C20037 +
            (C20418 + C20419) * C51163 * C20038) *
               C1455) *
              C1456 +
          ((C2590 * C51163 * C20035 + C2595 * C51163 * C20036 +
            C2956 * C51163 * C20037 + (C2972 + C2973) * C51163 * C20038) *
               C51480 -
           (C20336 * C20038 + C20337 * C20037 + C2601 * C51163 * C20036 +
            (C179 + C178) * C51163 * C20035) *
               C51493 -
           (((C117 * C3073 + C51318 * C3077) * C51248 +
             (C117 * C3071 + C51318 * C3074) * C118) *
                C51163 * C20038 +
            (C2973 + C2972) * C51163 * C20037 + C20336 * C20036 +
            C20337 * C20035) *
               C1455) *
              C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[137] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C452 +
              (C117 * C127 + C51318 * C140) * C51448 -
              (C117 * C454 + C51318 * C460) * C453 -
              (C117 * C461 + C51318 * C472) * C51260) *
                 C17433 +
             (C479 + C480 - C513 - C514) * C17434 + C523 * C17435) *
                C17436 +
            ((C3254 + C3255 - C3289 - C3290) * C17433 + C4273 * C17434 +
             C8558 * C17435) *
                C51356) *
               C1350 +
           (((C3289 - (C3255 + C3254) + C3290) * C17433 + C4274 * C17434 +
             C9839 * C17435) *
                C17436 +
            ((C3291 - (C3261 + C3260) + C3292) * C17433 + C4275 * C17434 +
             (C2789 - (C2779 + C2780) + C2790) * C17435) *
                C51356) *
               C51234) *
              C1456 +
          ((((C513 - (C480 + C479) + C514) * C17433 +
             (C515 - (C486 + C485) + C516) * C17434 +
             (C517 - (C492 + C491) + C518) * C17435) *
                C17436 +
            (C4274 * C17433 + C9839 * C17434 +
             (C1621 - (C1607 + C1608) + C1622) * C17435) *
                C51356) *
               C1350 +
           ((C4273 * C17433 + C8558 * C17434 +
             (C1608 + C1607 - C1621 - C1622) * C17435) *
                C17436 +
            (C3293 * C17433 + (C2780 + C2779 - C2789 - C2790) * C17434 +
             (C664 * C452 + C665 * C51448 -
              (C117 * C863 + C51318 * C878) * C453 -
              (C117 * C879 + C51318 * C887) * C51260) *
                 C17435) *
                C51356) *
               C51234) *
              C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C452 +
             (C117 * C127 + C51318 * C140) * C51448 -
             (C117 * C454 + C51318 * C460) * C453 -
             (C117 * C461 + C51318 * C472) * C51260) *
                C51163 * C20035 +
            (C3254 + C3255 - C3289 - C3290) * C51163 * C20036 +
            C20522 * C20037 + C20536 * C20038) *
               C1350 +
           ((C3289 - (C3255 + C3254) + C3290) * C51163 * C20035 +
            (C3291 - (C3261 + C3260) + C3292) * C51163 * C20036 +
            (C3294 - (C3269 + C3270) + C3295) * C51163 * C20037 +
            (C20534 - (C20526 + C20527) + C20535) * C51163 * C20038) *
               C51234) *
              C1456 +
          (((C513 - (C480 + C479) + C514) * C51163 * C20035 +
            C4274 * C51163 * C20036 + C4275 * C51163 * C20037 +
            (C3296 - (C3275 + C3276) + C3297) * C51163 * C20038) *
               C1350 +
           (C4273 * C51163 * C20035 + C3293 * C51163 * C20036 +
            (C3276 + C3275 - C3296 - C3297) * C51163 * C20037 +
            (C2966 * C452 + C2967 * C51448 -
             (C117 * C3240 + C51318 * C3247) * C453 -
             (C117 * C3248 + C51318 * C3252) * C51260) *
                C51163 * C20038) *
               C51234) *
              C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[138] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C1722 +
              (C117 * C127 + C51318 * C140) * C1720 -
              (C117 * C454 + C51318 * C460) * C1723 -
              (C117 * C461 + C51318 * C472) * C51260) *
                 C17433 +
             (C1725 + C1726 - C1727 - C1728) * C17434 + C1745 * C17435) *
                C17436 +
            ((C4624 + C4625 - C4626 - C4627) * C17433 + C4644 * C17434 +
             C9988 * C17435) *
                C51356) *
               C1350 +
           (((C4626 - (C4625 + C4624) + C4627) * C17433 + C4646 * C17434 +
             C10185 * C17435) *
                C17436 +
            ((C4631 - (C4630 + C4629) + C4632) * C17433 + C4647 * C17434 +
             (C4426 - (C4427 + C4428) + C4429) * C17435) *
                C51356) *
               C51234) *
              C51439 +
          ((((C1727 - (C1726 + C1725) + C1728) * C17433 +
             (C1731 - (C1730 + C1729) + C1732) * C17434 +
             (C1735 - (C1734 + C1733) + C1736) * C17435) *
                C17436 +
            (C4646 * C17433 + C10185 * C17434 +
             (C1885 - (C1886 + C1887) + C1888) * C17435) *
                C51356) *
               C1350 +
           ((C4644 * C17433 + C9988 * C17434 +
             (C1887 + C1886 - C1885 - C1888) * C17435) *
                C17436 +
            (C4645 * C17433 + (C4428 + C4427 - C4426 - C4429) * C17434 +
             (C664 * C1722 + C665 * C1720 -
              (C117 * C863 + C51318 * C878) * C1723 -
              (C117 * C879 + C51318 * C887) * C51260) *
                 C17435) *
                C51356) *
               C51234) *
              C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C1722 +
             (C117 * C127 + C51318 * C140) * C1720 -
             (C117 * C454 + C51318 * C460) * C1723 -
             (C117 * C461 + C51318 * C472) * C51260) *
                C51163 * C20035 +
            (C4624 + C4625 - C4626 - C4627) * C51163 * C20036 +
            C5153 * C51163 * C20037 +
            (C5150 + C5149 - C5148 - C5151) * C51163 * C20038) *
               C1350 +
           ((C4626 - (C4625 + C4624) + C4627) * C51163 * C20035 +
            (C4631 - (C4630 + C4629) + C4632) * C51163 * C20036 +
            (C5148 - (C5149 + C5150) + C5151) * C51163 * C20037 +
            (C20531 * C1723 - (C3088 * C1720 + C3087 * C1722) +
             C20532 * C51260) *
                C51163 * C20038) *
               C51234) *
              C51439 +
          (((C1727 - (C1726 + C1725) + C1728) * C51163 * C20035 +
            C4646 * C51163 * C20036 + C4647 * C51163 * C20037 +
            (C4636 - (C4637 + C4638) + C4639) * C51163 * C20038) *
               C1350 +
           (C4644 * C51163 * C20035 + C4645 * C51163 * C20036 +
            (C4638 + C4637 - C4636 - C4639) * C51163 * C20037 +
            (C2966 * C1722 + C2967 * C1720 -
             (C117 * C3240 + C51318 * C3247) * C1723 -
             (C117 * C3248 + C51318 * C3252) * C51260) *
                C51163 * C20038) *
               C51234) *
              C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[139] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C1722 +
             (C117 * C127 + C51318 * C140) * C1720 -
             (C117 * C454 + C51318 * C460) * C1723 -
             (C117 * C461 + C51318 * C472) * C51260) *
                C17433 +
            (C1725 + C1726 - C1727 - C1728) * C17434 + C1745 * C17435) *
               C17436 +
           ((C4624 + C4625 - C4626 - C4627) * C17433 + C4644 * C17434 +
            C9988 * C17435) *
               C51356) *
              C51493 +
          (((C4626 - (C4625 + C4624) + C4627) * C17433 + C4646 * C17434 +
            C10185 * C17435) *
               C17436 +
           ((C4631 - (C4630 + C4629) + C4632) * C17433 + C4647 * C17434 +
            (C4426 - (C4427 + C4428) + C4429) * C17435) *
               C51356) *
              C51480 +
          ((C5153 * C17433 + C4645 * C17434 +
            (C4428 + C4427 - C4426 - C4429) * C17435) *
               C17436 +
           ((C5150 + C5149 - C5148 - C5151) * C17433 +
            (C4638 + C4637 - C4636 - C4639) * C17434 +
            (C2615 * C1722 + C2616 * C1720 -
             (C117 * C4262 + C51318 * C4263) * C1723 -
             (C117 * C4264 + C51318 * C4265) * C51260) *
                C17435) *
               C51356) *
              C1455) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C1722 +
            (C117 * C127 + C51318 * C140) * C1720 -
            (C117 * C454 + C51318 * C460) * C1723 -
            (C117 * C461 + C51318 * C472) * C51260) *
               C51163 * C20035 +
           (C4624 + C4625 - C4626 - C4627) * C51163 * C20036 + C21699 * C20037 +
           C21707 * C20038) *
              C51493 +
          ((C4626 - (C4625 + C4624) + C4627) * C51163 * C20035 +
           (C4631 - (C4630 + C4629) + C4632) * C51163 * C20036 +
           (C5148 - (C5149 + C5150) + C5151) * C51163 * C20037 +
           (C21701 - (C21702 + C21703) + C21704) * C51163 * C20038) *
              C51480 +
          (C21699 * C20035 + C21707 * C20036 +
           (C21703 + C21702 - C21701 - C21704) * C51163 * C20037 +
           (C20416 * C1722 + C20417 * C1720 -
            (C117 * C20517 + C51318 * C20518) * C1723 -
            (C117 * C20519 + C51318 * C20520) * C51260) *
               C51163 * C20038) *
              C1455) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[140] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C1989 +
             (C117 * C127 + C51318 * C140) * C51494 -
             (C117 * C454 + C51318 * C460) * C1990 -
             (C117 * C461 + C51318 * C472) * C51483 +
             (C117 * C992 + C51318 * C997) * C1991 +
             (C117 * C998 + C51318 * C1007) * C1988) *
                C17433 +
            (C1993 + C1994 - C1995 - C1996 + C1997 + C1998) * C17434 +
            (C1999 + C2000 - C2001 - C2002 + C2003 + C2004) * C17435) *
               C17436 +
           ((C5302 + C5303 - C5304 - C5305 + C5306 + C5307) * C17433 +
            (C4794 + C4795 - C4796 - C4797 + C4798 + C4799) * C17434 +
            (C10332 + C10333 - C10334 - C10335 + C10336 + C10337) * C17435) *
               C51356) *
              C1350 +
          (((C5304 - (C5303 + C5302) + C5305 - C5306 - C5307) * C17433 +
            (C4796 - (C4795 + C4794) + C4797 - C4798 - C4799) * C17434 +
            (C10334 - (C10333 + C10332) + C10335 - C10336 - C10337) * C17435) *
               C17436 +
           ((C5310 - (C5309 + C5308) + C5311 - C5312 - C5313) * C17433 +
            (C4802 - (C4801 + C4800) + C4803 - C4804 - C4805) * C17434 +
            (C2785 * C1990 - (C663 * C51494 + C662 * C1989) + C2786 * C51483 -
             (C117 * C3450 + C51318 * C3455) * C1991 -
             (C117 * C3456 + C51318 * C3459) * C1988) *
                C17435) *
               C51356) *
              C51234) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C1989 +
            (C117 * C127 + C51318 * C140) * C51494 -
            (C117 * C454 + C51318 * C460) * C1990 -
            (C117 * C461 + C51318 * C472) * C51483 +
            (C117 * C992 + C51318 * C997) * C1991 +
            (C117 * C998 + C51318 * C1007) * C1988) *
               C51163 * C20035 +
           (C5302 + C5303 - C5304 - C5305 + C5306 + C5307) * C51163 * C20036 +
           (C5308 + C5309 - C5310 - C5311 + C5312 + C5313) * C51163 * C20037 +
           (C21806 + C21807 - C21808 - C21809 + C21810 + C21811) * C51163 *
               C20038) *
              C1350 +
          ((C5304 - (C5303 + C5302) + C5305 - C5306 - C5307) * C51163 * C20035 +
           (C5310 - (C5309 + C5308) + C5311 - C5312 - C5313) * C51163 * C20036 +
           (C21808 - (C21807 + C21806) + C21809 - C21810 - C21811) * C51163 *
               C20037 +
           (C20531 * C1990 - (C3088 * C51494 + C3087 * C1989) +
            C20532 * C51483 - (C117 * C20732 + C51318 * C20733) * C1991 -
            (C117 * C20734 + C51318 * C20735) * C1988) *
               C51163 * C20038) *
              C51234) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[141] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C118 +
              (C117 * C127 + C51318 * C140) * C51248) *
                 C17433 +
             (C178 + C179) * C17434 + C188 * C17435) *
                C17436 +
            ((C2617 + C2618) * C17433 + C2590 * C17434 + C2602 * C17435) *
                C51356) *
               C622 -
           ((C2608 * C17435 + C2600 * C17434 + (C2620 + C2619) * C17433) *
                C51356 +
            (C352 * C17435 + C2601 * C17434 + (C2618 + C2617) * C17433) *
                C17436) *
               C623 +
           ((C2949 * C17433 + C2595 * C17434 + C2603 * C17435) * C17436 +
            ((C2971 + C2970) * C17433 + C2956 * C17434 +
             (C2623 + C2624) * C17435) *
                C51356) *
               C624) *
              C51439 +
          (((C2590 * C17433 + C2602 * C17434 + C8409 * C17435) * C17436 +
            (C2595 * C17433 + C2603 * C17434 + (C670 + C671) * C17435) *
                C51356) *
               C623 -
           ((C351 * C17435 + C352 * C17434 + C2601 * C17433) * C51356 +
            (C191 * C17435 + (C181 + C180) * C17434 + (C179 + C178) * C17433) *
                C17436) *
               C622 -
           ((((C117 * C746 + C51318 * C754) * C51248 +
              (C117 * C742 + C51318 * C747) * C118) *
                 C17435 +
             (C2624 + C2623) * C17434 + C2951 * C17433) *
                C51356 +
            ((C671 + C670) * C17435 + C2608 * C17434 + C2600 * C17433) *
                C17436) *
               C624) *
              C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C118 +
             (C117 * C127 + C51318 * C140) * C51248) *
                C17433 +
            (C178 + C179) * C17434 + C188 * C17435) *
               C17436 +
           ((C2617 + C2618) * C17433 + C2590 * C17434 + C2602 * C17435) *
               C51356) *
              C51218 * C113 -
          ((C351 * C17435 + C352 * C17434 + C2601 * C17433) * C51356 +
           (C191 * C17435 + (C181 + C180) * C17434 + (C179 + C178) * C17433) *
               C17436) *
              C51218 * C114 +
          ((C188 * C17433 + C189 * C17434 + (C185 + C184) * C17435) * C17436 +
           (C2602 * C17433 + C8409 * C17434 + (C349 + C350) * C17435) *
               C51356) *
              C51218 * C115 -
          ((((C117 * C310 + C51318 * C317) * C51248 +
             (C117 * C299 + C51318 * C311) * C118) *
                C17435 +
            (C350 + C349) * C17434 + C351 * C17433) *
               C51356 +
           ((C187 + C186) * C17435 + C190 * C17434 + C191 * C17433) * C17436) *
              C51218 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C989 +
             (C117 * C127 + C51318 * C140) * C986 -
             (C117 * C454 + C51318 * C460) * C990 -
             (C117 * C461 + C51318 * C472) * C987 +
             (C117 * C992 + C51318 * C997) * C991 +
             (C117 * C998 + C51318 * C1007) * C988) *
                C17433 +
            (C1013 + C1014 - C1015 - C1016 + C1043 + C1044) * C17434 +
            (C1021 + C1022 - C1023 - C1024 + C1045 + C1046) * C17435) *
               C17436 +
           ((C3639 + C3640 - C3641 - C3642 + C3659 + C3660) * C17433 +
            (C3461 + C3462 - C3463 - C3464 + C3481 + C3482) * C17434 +
            (C9095 + C9096 - C9097 - C9098 + C9105 + C9106) * C17435) *
               C51356) *
              C51218 * C51439 +
          (((C1015 - (C1014 + C1013) + C1016 - C1043 - C1044) * C17433 +
            (C1023 - (C1022 + C1021) + C1024 - C1045 - C1046) * C17434 +
            (C1031 - (C1030 + C1029) + C1032 - C1047 - C1048) * C17435) *
               C17436 +
           ((C3463 - (C3462 + C3461) + C3464 - C3481 - C3482) * C17433 +
            (C9097 - (C9096 + C9095) + C9098 - C9105 - C9106) * C17434 +
            (C1615 * C990 - (C335 * C986 + C336 * C989) + C1616 * C987 -
             (C117 * C1149 + C51318 * C1156) * C991 -
             (C117 * C1157 + C51318 * C1161) * C988) *
                C17435) *
               C51356) *
              C51218 * C51191)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C118 +
            (C117 * C127 + C51318 * C140) * C51248) *
               C51163 * C20035 +
           (C2617 + C2618) * C51163 * C20036 + C2949 * C51163 * C20037 +
           (C2971 + C2970) * C51163 * C20038) *
              C51218 * C113 -
          (C2951 * C51163 * C20038 + C2600 * C51163 * C20037 +
           C2601 * C51163 * C20036 + (C179 + C178) * C51163 * C20035) *
              C51218 * C114 +
          (C188 * C51163 * C20035 + C2602 * C51163 * C20036 +
           C2603 * C51163 * C20037 + (C2623 + C2624) * C51163 * C20038) *
              C51218 * C115 -
          (((C117 * C746 + C51318 * C754) * C51248 +
            (C117 * C742 + C51318 * C747) * C118) *
               C51163 * C20038 +
           (C671 + C670) * C51163 * C20037 + C351 * C51163 * C20036 +
           C191 * C51163 * C20035) *
              C51218 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C118 +
             (C117 * C127 + C51318 * C140) * C51248) *
                C51163 * C20035 +
            (C2617 + C2618) * C51163 * C20036 + C20334 * C20037 +
            C20338 * C20038) *
               C622 -
           ((C3091 + C3090) * C51163 * C20038 + C3081 * C51163 * C20037 +
            (C2620 + C2619) * C51163 * C20036 +
            (C2618 + C2617) * C51163 * C20035) *
               C623 +
           (C20334 * C20035 + C20338 * C20036 +
            (C3090 + C3091) * C51163 * C20037 +
            ((C117 * C3072 + C51318 * C3076) * C118 +
             (C117 * C3075 + C51318 * C3078) * C51248) *
                C51163 * C20038) *
               C624) *
              C51439 +
          ((C2590 * C51163 * C20035 + C2595 * C51163 * C20036 +
            C2956 * C51163 * C20037 + (C2972 + C2973) * C51163 * C20038) *
               C623 -
           (C20336 * C20038 + C20337 * C20037 + C2601 * C51163 * C20036 +
            (C179 + C178) * C51163 * C20035) *
               C622 -
           (((C117 * C3073 + C51318 * C3077) * C51248 +
             (C117 * C3071 + C51318 * C3074) * C118) *
                C51163 * C20038 +
            (C2973 + C2972) * C51163 * C20037 + C20336 * C20036 +
            C20337 * C20035) *
               C624) *
              C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C989 +
            (C117 * C127 + C51318 * C140) * C986 -
            (C117 * C454 + C51318 * C460) * C990 -
            (C117 * C461 + C51318 * C472) * C987 +
            (C117 * C992 + C51318 * C997) * C991 +
            (C117 * C998 + C51318 * C1007) * C988) *
               C51163 * C20035 +
           (C3639 + C3640 - C3641 - C3642 + C3659 + C3660) * C51163 * C20036 +
           (C3647 + C3648 - C3649 - C3650 + C3661 + C3662) * C51163 * C20037 +
           (C2965 * C989 + C2964 * C986 - C3285 * C990 - C3286 * C987 +
            (C117 * C3630 + C51318 * C3632) * C991 +
            (C117 * C3633 + C51318 * C3636) * C988) *
               C51163 * C20038) *
              C51218 * C51439 +
          ((C1015 - (C1014 + C1013) + C1016 - C1043 - C1044) * C51163 * C20035 +
           (C3463 - (C3462 + C3461) + C3464 - C3481 - C3482) * C51163 * C20036 +
           (C3471 - (C3470 + C3469) + C3472 - C3483 - C3484) * C51163 * C20037 +
           (C3287 * C990 - (C2613 * C986 + C2614 * C989) + C3288 * C987 -
            (C117 * C3631 + C51318 * C3634) * C991 -
            (C117 * C3635 + C51318 * C3637) * C988) *
               C51163 * C20038) *
              C51218 * C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[142] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C118 +
             (C117 * C127 + C51318 * C140) * C51248) *
                C17433 +
            (C178 + C179) * C17434 + C188 * C17435) *
               C17436 +
           ((C2617 + C2618) * C17433 + C2590 * C17434 + C2602 * C17435) *
               C51356) *
              C737 -
          ((C2608 * C17435 + C2600 * C17434 + (C2620 + C2619) * C17433) *
               C51356 +
           (C352 * C17435 + C2601 * C17434 + (C2618 + C2617) * C17433) *
               C17436) *
              C738 +
          ((C2949 * C17433 + C2595 * C17434 + C2603 * C17435) * C17436 +
           ((C2971 + C2970) * C17433 + C2956 * C17434 +
            (C2623 + C2624) * C17435) *
               C51356) *
              C739 -
          ((((C117 * C2943 + C51318 * C2947) * C51248 +
             (C117 * C2938 + C51318 * C2944) * C118) *
                C17435 +
            (C2973 + C2972) * C17434 + (C3091 + C3090) * C17433) *
               C51356 +
           ((C2624 + C2623) * C17435 + C2951 * C17434 + C3081 * C17433) *
               C17436) *
              C740) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C118 +
              (C117 * C127 + C51318 * C140) * C51248) *
                 C17433 +
             (C178 + C179) * C17434 + C188 * C17435) *
                C17436 +
            ((C2617 + C2618) * C17433 + C2590 * C17434 + C2602 * C17435) *
                C51356) *
               C51446 -
           ((C2608 * C17435 + C2600 * C17434 + (C2620 + C2619) * C17433) *
                C51356 +
            (C352 * C17435 + C2601 * C17434 + (C2618 + C2617) * C17433) *
                C17436) *
               C51234) *
              C291 +
          (((C2590 * C17433 + C2602 * C17434 + C8409 * C17435) * C17436 +
            (C2595 * C17433 + C2603 * C17434 + (C670 + C671) * C17435) *
                C51356) *
               C51234 -
           ((C351 * C17435 + C352 * C17434 + C2601 * C17433) * C51356 +
            (C191 * C17435 + (C181 + C180) * C17434 + (C179 + C178) * C17433) *
                C17436) *
               C51446) *
              C292 +
          (((C188 * C17433 + C189 * C17434 + (C185 + C184) * C17435) * C17436 +
            (C2602 * C17433 + C8409 * C17434 + (C349 + C350) * C17435) *
                C51356) *
               C51446 -
           ((((C117 * C640 + C51318 * C646) * C51248 +
              (C117 * C631 + C51318 * C641) * C118) *
                 C17435 +
             (C671 + C670) * C17434 + C2608 * C17433) *
                C51356 +
            ((C350 + C349) * C17435 + C351 * C17434 + C352 * C17433) * C17436) *
               C51234) *
              C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C989 +
             (C117 * C127 + C51318 * C140) * C986 -
             (C117 * C454 + C51318 * C460) * C990 -
             (C117 * C461 + C51318 * C472) * C987 +
             (C117 * C992 + C51318 * C997) * C991 +
             (C117 * C998 + C51318 * C1007) * C988) *
                C17433 +
            (C1013 + C1014 - C1015 - C1016 + C1043 + C1044) * C17434 +
            (C1021 + C1022 - C1023 - C1024 + C1045 + C1046) * C17435) *
               C17436 +
           ((C3639 + C3640 - C3641 - C3642 + C3659 + C3660) * C17433 +
            (C3461 + C3462 - C3463 - C3464 + C3481 + C3482) * C17434 +
            (C9095 + C9096 - C9097 - C9098 + C9105 + C9106) * C17435) *
               C51356) *
              C51446 +
          (((C3641 - (C3640 + C3639) + C3642 - C3659 - C3660) * C17433 +
            (C3463 - (C3462 + C3461) + C3464 - C3481 - C3482) * C17434 +
            (C9097 - (C9096 + C9095) + C9098 - C9105 - C9106) * C17435) *
               C17436 +
           ((C3649 - (C3648 + C3647) + C3650 - C3661 - C3662) * C17433 +
            (C3471 - (C3470 + C3469) + C3472 - C3483 - C3484) * C17434 +
            (C2785 * C990 - (C663 * C986 + C662 * C989) + C2786 * C987 -
             (C117 * C3450 + C51318 * C3455) * C991 -
             (C117 * C3456 + C51318 * C3459) * C988) *
                C17435) *
               C51356) *
              C51234) *
         C51186) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C118 +
             (C117 * C127 + C51318 * C140) * C51248) *
                C51163 * C20035 +
            (C2617 + C2618) * C51163 * C20036 + C2949 * C51163 * C20037 +
            (C2971 + C2970) * C51163 * C20038) *
               C51446 -
           ((C3091 + C3090) * C51163 * C20038 + C3081 * C51163 * C20037 +
            (C2620 + C2619) * C51163 * C20036 +
            (C2618 + C2617) * C51163 * C20035) *
               C51234) *
              C291 +
          ((C2590 * C51163 * C20035 + C2595 * C51163 * C20036 +
            C2956 * C51163 * C20037 + (C2972 + C2973) * C51163 * C20038) *
               C51234 -
           (C2951 * C51163 * C20038 + C2600 * C51163 * C20037 +
            C2601 * C51163 * C20036 + (C179 + C178) * C51163 * C20035) *
               C51446) *
              C292 +
          ((C188 * C51163 * C20035 + C2602 * C51163 * C20036 +
            C2603 * C51163 * C20037 + (C2623 + C2624) * C51163 * C20038) *
               C51446 -
           (((C117 * C2943 + C51318 * C2947) * C51248 +
             (C117 * C2938 + C51318 * C2944) * C118) *
                C51163 * C20038 +
            (C2624 + C2623) * C51163 * C20037 + C2608 * C51163 * C20036 +
            C352 * C51163 * C20035) *
               C51234) *
              C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C118 +
            (C117 * C127 + C51318 * C140) * C51248) *
               C51163 * C20035 +
           (C2617 + C2618) * C51163 * C20036 + C20334 * C20037 +
           C20338 * C20038) *
              C737 -
          (C20415 * C20038 + C20410 * C20037 +
           (C2620 + C2619) * C51163 * C20036 +
           (C2618 + C2617) * C51163 * C20035) *
              C738 +
          (C20334 * C20035 + C20338 * C20036 +
           (C3090 + C3091) * C51163 * C20037 +
           (C20418 + C20419) * C51163 * C20038) *
              C739 -
          (((C117 * C20405 + C51318 * C20407) * C51248 +
            (C117 * C20404 + C51318 * C20406) * C118) *
               C51163 * C20038 +
           (C20419 + C20418) * C51163 * C20037 + C20415 * C20036 +
           C20410 * C20035) *
              C740) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C989 +
            (C117 * C127 + C51318 * C140) * C986 -
            (C117 * C454 + C51318 * C460) * C990 -
            (C117 * C461 + C51318 * C472) * C987 +
            (C117 * C992 + C51318 * C997) * C991 +
            (C117 * C998 + C51318 * C1007) * C988) *
               C51163 * C20035 +
           (C3639 + C3640 - C3641 - C3642 + C3659 + C3660) * C51163 * C20036 +
           (C3647 + C3648 - C3649 - C3650 + C3661 + C3662) * C51163 * C20037 +
           (C20737 + C20738 - C20739 - C20740 + C20747 + C20748) * C51163 *
               C20038) *
              C51446 +
          ((C3641 - (C3640 + C3639) + C3642 - C3659 - C3660) * C51163 * C20035 +
           (C3649 - (C3648 + C3647) + C3650 - C3661 - C3662) * C51163 * C20036 +
           (C20739 - (C20738 + C20737) + C20740 - C20747 - C20748) * C51163 *
               C20037 +
           (C20531 * C990 - (C3088 * C986 + C3087 * C989) + C20532 * C987 -
            (C117 * C20732 + C51318 * C20733) * C991 -
            (C117 * C20734 + C51318 * C20735) * C988) *
               C51163 * C20038) *
              C51234) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[143] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C452 +
             (C117 * C127 + C51318 * C140) * C51448 -
             (C117 * C454 + C51318 * C460) * C453 -
             (C117 * C461 + C51318 * C472) * C51260) *
                C17433 +
            (C479 + C480 - C513 - C514) * C17434 + C523 * C17435) *
               C17436 +
           ((C3254 + C3255 - C3289 - C3290) * C17433 + C4273 * C17434 +
            C8558 * C17435) *
               C51356) *
              C622 +
          (((C3289 - (C3255 + C3254) + C3290) * C17433 + C4274 * C17434 +
            C9839 * C17435) *
               C17436 +
           ((C3291 - (C3261 + C3260) + C3292) * C17433 + C4275 * C17434 +
            (C2789 - (C2779 + C2780) + C2790) * C17435) *
               C51356) *
              C623 +
          ((C3300 * C17433 + C3293 * C17434 +
            (C2780 + C2779 - C2789 - C2790) * C17435) *
               C17436 +
           ((C3270 + C3269 - C3294 - C3295) * C17433 +
            (C3276 + C3275 - C3296 - C3297) * C17434 +
            (C2615 * C452 + C2616 * C51448 -
             (C117 * C4262 + C51318 * C4263) * C453 -
             (C117 * C4264 + C51318 * C4265) * C51260) *
                C17435) *
               C51356) *
              C624) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C452 +
             (C117 * C127 + C51318 * C140) * C51448 -
             (C117 * C454 + C51318 * C460) * C453 -
             (C117 * C461 + C51318 * C472) * C51260) *
                C17433 +
            (C479 + C480 - C513 - C514) * C17434 + C523 * C17435) *
               C17436 +
           ((C3254 + C3255 - C3289 - C3290) * C17433 + C4273 * C17434 +
            C8558 * C17435) *
               C51356) *
              C51218 * C291 +
          (((C513 - (C480 + C479) + C514) * C17433 +
            (C515 - (C486 + C485) + C516) * C17434 +
            (C517 - (C492 + C491) + C518) * C17435) *
               C17436 +
           (C4274 * C17433 + C9839 * C17434 +
            (C1621 - (C1607 + C1608) + C1622) * C17435) *
               C51356) *
              C51218 * C292 +
          ((C523 * C17433 + C524 * C17434 +
            (C500 + C499 - C519 - C520) * C17435) *
               C17436 +
           (C8558 * C17433 + (C1608 + C1607 - C1621 - C1622) * C17434 +
            (C341 * C452 + C342 * C51448 -
             (C117 * C1588 + C51318 * C1589) * C453 -
             (C117 * C1590 + C51318 * C1591) * C51260) *
                C17435) *
               C51356) *
              C51218 * C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C1232 +
            (C117 * C127 + C51318 * C140) * C1228 -
            (C117 * C454 + C51318 * C460) * C1233 -
            (C117 * C461 + C51318 * C472) * C1229 +
            (C117 * C992 + C51318 * C997) * C1234 +
            (C117 * C998 + C51318 * C1007) * C1230 -
            (C117 * C1236 + C51318 * C1240) * C1235 -
            (C117 * C1241 + C51318 * C1248) * C1231) *
               C17433 +
           (C168 * C1232 + C169 * C1228 - C503 * C1233 - C504 * C1229 +
            C1037 * C1234 + C1038 * C1230 -
            (C117 * C1237 + C51318 * C1242) * C1235 -
            (C117 * C1243 + C51318 * C1249) * C1231) *
               C17434 +
           (C170 * C1232 + C171 * C1228 - C506 * C1233 - C507 * C1229 +
            C1039 * C1234 + C1040 * C1230 -
            (C117 * C1238 + C51318 * C1244) * C1235 -
            (C117 * C1245 + C51318 * C1250) * C1231) *
               C17435) *
              C17436 +
          ((C2609 * C1232 + C2610 * C1228 - C3279 * C1233 - C3280 * C1229 +
            C3655 * C1234 + C3656 * C1230 -
            (C117 * C3760 + C51318 * C3764) * C1235 -
            (C117 * C3765 + C51318 * C3772) * C1231) *
               C17433 +
           (C340 * C1232 + C339 * C1228 - C1611 * C1233 - C1612 * C1229 +
            C3477 * C1234 + C3478 * C1230 -
            (C117 * C3761 + C51318 * C3766) * C1235 -
            (C117 * C3767 + C51318 * C3773) * C1231) *
               C17434 +
           (C338 * C1232 + C337 * C1228 - C1613 * C1233 - C1614 * C1229 +
            C9103 * C1234 + C9104 * C1230 -
            (C117 * C7165 + C51318 * C7166) * C1235 -
            (C117 * C7167 + C51318 * C7168) * C1231) *
               C17435) *
              C51356) *
         C51218 * C51186) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C452 +
            (C117 * C127 + C51318 * C140) * C51448 -
            (C117 * C454 + C51318 * C460) * C453 -
            (C117 * C461 + C51318 * C472) * C51260) *
               C51163 * C20035 +
           (C3254 + C3255 - C3289 - C3290) * C51163 * C20036 +
           C3300 * C51163 * C20037 +
           (C3270 + C3269 - C3294 - C3295) * C51163 * C20038) *
              C51218 * C291 +
          ((C513 - (C480 + C479) + C514) * C51163 * C20035 +
           C4274 * C51163 * C20036 + C4275 * C51163 * C20037 +
           (C3296 - (C3275 + C3276) + C3297) * C51163 * C20038) *
              C51218 * C292 +
          (C523 * C51163 * C20035 + C8558 * C51163 * C20036 +
           (C2780 + C2779 - C2789 - C2790) * C51163 * C20037 +
           (C2615 * C452 + C2616 * C51448 -
            (C117 * C4262 + C51318 * C4263) * C453 -
            (C117 * C4264 + C51318 * C4265) * C51260) *
               C51163 * C20038) *
              C51218 * C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C452 +
            (C117 * C127 + C51318 * C140) * C51448 -
            (C117 * C454 + C51318 * C460) * C453 -
            (C117 * C461 + C51318 * C472) * C51260) *
               C51163 * C20035 +
           (C3254 + C3255 - C3289 - C3290) * C51163 * C20036 + C20522 * C20037 +
           C20536 * C20038) *
              C622 +
          ((C3289 - (C3255 + C3254) + C3290) * C51163 * C20035 +
           (C3291 - (C3261 + C3260) + C3292) * C51163 * C20036 +
           (C3294 - (C3269 + C3270) + C3295) * C51163 * C20037 +
           (C20534 - (C20526 + C20527) + C20535) * C51163 * C20038) *
              C623 +
          (C20522 * C20035 + C20536 * C20036 +
           (C20527 + C20526 - C20534 - C20535) * C51163 * C20037 +
           (C20416 * C452 + C20417 * C51448 -
            (C117 * C20517 + C51318 * C20518) * C453 -
            (C117 * C20519 + C51318 * C20520) * C51260) *
               C51163 * C20038) *
              C624) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C51318 * C126) * C1232 +
           (C117 * C127 + C51318 * C140) * C1228 -
           (C117 * C454 + C51318 * C460) * C1233 -
           (C117 * C461 + C51318 * C472) * C1229 +
           (C117 * C992 + C51318 * C997) * C1234 +
           (C117 * C998 + C51318 * C1007) * C1230 -
           (C117 * C1236 + C51318 * C1240) * C1235 -
           (C117 * C1241 + C51318 * C1248) * C1231) *
              C51163 * C20035 +
          (C2609 * C1232 + C2610 * C1228 - C3279 * C1233 - C3280 * C1229 +
           C3655 * C1234 + C3656 * C1230 -
           (C117 * C3760 + C51318 * C3764) * C1235 -
           (C117 * C3765 + C51318 * C3772) * C1231) *
              C51163 * C20036 +
          (C2611 * C1232 + C2612 * C1228 - C3282 * C1233 - C3283 * C1229 +
           C3657 * C1234 + C3658 * C1230 -
           (C117 * C3762 + C51318 * C3768) * C1235 -
           (C117 * C3769 + C51318 * C3774) * C1231) *
              C51163 * C20037 +
          (C2965 * C1232 + C2964 * C1228 - C3285 * C1233 - C3286 * C1229 +
           C20745 * C1234 + C20746 * C1230 -
           (C117 * C20814 + C51318 * C20815) * C1235 -
           (C117 * C20816 + C51318 * C20817) * C1231) *
              C51163 * C20038) *
         C51218 * C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[144] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C1722 +
             (C117 * C127 + C51318 * C140) * C1720 -
             (C117 * C454 + C51318 * C460) * C1723 -
             (C117 * C461 + C51318 * C472) * C51260) *
                C17433 +
            (C1725 + C1726 - C1727 - C1728) * C17434 + C1745 * C17435) *
               C17436 +
           ((C4624 + C4625 - C4626 - C4627) * C17433 + C4644 * C17434 +
            C9988 * C17435) *
               C51356) *
              C51218 * C51492 +
          (((C1727 - (C1726 + C1725) + C1728) * C17433 +
            (C1731 - (C1730 + C1729) + C1732) * C17434 +
            (C1735 - (C1734 + C1733) + C1736) * C17435) *
               C17436 +
           (C4646 * C17433 + C10185 * C17434 +
            (C1885 - (C1886 + C1887) + C1888) * C17435) *
               C51356) *
              C51218 * C51477 +
          ((C1745 * C17433 + C1746 * C17434 +
            (C1739 + C1738 - C1737 - C1740) * C17435) *
               C17436 +
           (C9988 * C17433 + (C1887 + C1886 - C1885 - C1888) * C17434 +
            (C341 * C1722 + C342 * C1720 -
             (C117 * C1588 + C51318 * C1589) * C1723 -
             (C117 * C1590 + C51318 * C1591) * C51260) *
                C17435) *
               C51356) *
              C51218 * C1354)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C1722 +
            (C117 * C127 + C51318 * C140) * C1720 -
            (C117 * C454 + C51318 * C460) * C1723 -
            (C117 * C461 + C51318 * C472) * C51260) *
               C51163 * C20035 +
           (C4624 + C4625 - C4626 - C4627) * C51163 * C20036 +
           C5153 * C51163 * C20037 +
           (C5150 + C5149 - C5148 - C5151) * C51163 * C20038) *
              C51218 * C51492 +
          ((C1727 - (C1726 + C1725) + C1728) * C51163 * C20035 +
           C4646 * C51163 * C20036 + C4647 * C51163 * C20037 +
           (C4636 - (C4637 + C4638) + C4639) * C51163 * C20038) *
              C51218 * C51477 +
          (C1745 * C51163 * C20035 + C9988 * C51163 * C20036 +
           (C4428 + C4427 - C4426 - C4429) * C51163 * C20037 +
           (C2615 * C1722 + C2616 * C1720 -
            (C117 * C4262 + C51318 * C4263) * C1723 -
            (C117 * C4264 + C51318 * C4265) * C51260) *
               C51163 * C20038) *
              C51218 * C1354)) /
            (p * q * std::sqrt(p + q));
    d2ee[145] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C1722 +
              (C117 * C127 + C51318 * C140) * C1720 -
              (C117 * C454 + C51318 * C460) * C1723 -
              (C117 * C461 + C51318 * C472) * C51260) *
                 C17433 +
             (C1725 + C1726 - C1727 - C1728) * C17434 + C1745 * C17435) *
                C17436 +
            ((C4624 + C4625 - C4626 - C4627) * C17433 + C4644 * C17434 +
             C9988 * C17435) *
                C51356) *
               C51446 +
           (((C4626 - (C4625 + C4624) + C4627) * C17433 + C4646 * C17434 +
             C10185 * C17435) *
                C17436 +
            ((C4631 - (C4630 + C4629) + C4632) * C17433 + C4647 * C17434 +
             (C4426 - (C4427 + C4428) + C4429) * C17435) *
                C51356) *
               C51234) *
              C1456 +
          ((((C1727 - (C1726 + C1725) + C1728) * C17433 +
             (C1731 - (C1730 + C1729) + C1732) * C17434 +
             (C1735 - (C1734 + C1733) + C1736) * C17435) *
                C17436 +
            (C4646 * C17433 + C10185 * C17434 +
             (C1885 - (C1886 + C1887) + C1888) * C17435) *
                C51356) *
               C51446 +
           ((C4644 * C17433 + C9988 * C17434 +
             (C1887 + C1886 - C1885 - C1888) * C17435) *
                C17436 +
            (C4645 * C17433 + (C4428 + C4427 - C4426 - C4429) * C17434 +
             (C664 * C1722 + C665 * C1720 -
              (C117 * C863 + C51318 * C878) * C1723 -
              (C117 * C879 + C51318 * C887) * C51260) *
                 C17435) *
                C51356) *
               C51234) *
              C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C1722 +
             (C117 * C127 + C51318 * C140) * C1720 -
             (C117 * C454 + C51318 * C460) * C1723 -
             (C117 * C461 + C51318 * C472) * C51260) *
                C51163 * C20035 +
            (C4624 + C4625 - C4626 - C4627) * C51163 * C20036 +
            C5153 * C51163 * C20037 +
            (C5150 + C5149 - C5148 - C5151) * C51163 * C20038) *
               C51446 +
           ((C4626 - (C4625 + C4624) + C4627) * C51163 * C20035 +
            (C4631 - (C4630 + C4629) + C4632) * C51163 * C20036 +
            (C5148 - (C5149 + C5150) + C5151) * C51163 * C20037 +
            (C20531 * C1723 - (C3088 * C1720 + C3087 * C1722) +
             C20532 * C51260) *
                C51163 * C20038) *
               C51234) *
              C1456 +
          (((C1727 - (C1726 + C1725) + C1728) * C51163 * C20035 +
            C4646 * C51163 * C20036 + C4647 * C51163 * C20037 +
            (C4636 - (C4637 + C4638) + C4639) * C51163 * C20038) *
               C51446 +
           (C4644 * C51163 * C20035 + C4645 * C51163 * C20036 +
            (C4638 + C4637 - C4636 - C4639) * C51163 * C20037 +
            (C2966 * C1722 + C2967 * C1720 -
             (C117 * C3240 + C51318 * C3247) * C1723 -
             (C117 * C3248 + C51318 * C3252) * C51260) *
                C51163 * C20038) *
               C51234) *
              C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[146] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C1989 +
             (C117 * C127 + C51318 * C140) * C51494 -
             (C117 * C454 + C51318 * C460) * C1990 -
             (C117 * C461 + C51318 * C472) * C51483 +
             (C117 * C992 + C51318 * C997) * C1991 +
             (C117 * C998 + C51318 * C1007) * C1988) *
                C17433 +
            (C1993 + C1994 - C1995 - C1996 + C1997 + C1998) * C17434 +
            (C1999 + C2000 - C2001 - C2002 + C2003 + C2004) * C17435) *
               C17436 +
           ((C5302 + C5303 - C5304 - C5305 + C5306 + C5307) * C17433 +
            (C4794 + C4795 - C4796 - C4797 + C4798 + C4799) * C17434 +
            (C10332 + C10333 - C10334 - C10335 + C10336 + C10337) * C17435) *
               C51356) *
              C51218 * C1456 +
          (((C1995 - (C1994 + C1993) + C1996 - C1997 - C1998) * C17433 +
            (C2001 - (C2000 + C1999) + C2002 - C2003 - C2004) * C17434 +
            (C2007 - (C2006 + C2005) + C2008 - C2009 - C2010) * C17435) *
               C17436 +
           ((C4796 - (C4795 + C4794) + C4797 - C4798 - C4799) * C17433 +
            (C10334 - (C10333 + C10332) + C10335 - C10336 - C10337) * C17434 +
            (C1615 * C1990 - (C335 * C51494 + C336 * C1989) + C1616 * C51483 -
             (C117 * C1149 + C51318 * C1156) * C1991 -
             (C117 * C1157 + C51318 * C1161) * C1988) *
                C17435) *
               C51356) *
              C51218 * C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C1989 +
            (C117 * C127 + C51318 * C140) * C51494 -
            (C117 * C454 + C51318 * C460) * C1990 -
            (C117 * C461 + C51318 * C472) * C51483 +
            (C117 * C992 + C51318 * C997) * C1991 +
            (C117 * C998 + C51318 * C1007) * C1988) *
               C51163 * C20035 +
           (C5302 + C5303 - C5304 - C5305 + C5306 + C5307) * C51163 * C20036 +
           (C5308 + C5309 - C5310 - C5311 + C5312 + C5313) * C51163 * C20037 +
           (C2965 * C1989 + C2964 * C51494 - C3285 * C1990 - C3286 * C51483 +
            C20745 * C1991 + C20746 * C1988) *
               C51163 * C20038) *
              C51218 * C1456 +
          ((C1995 - (C1994 + C1993) + C1996 - C1997 - C1998) * C51163 * C20035 +
           (C4796 - (C4795 + C4794) + C4797 - C4798 - C4799) * C51163 * C20036 +
           (C4802 - (C4801 + C4800) + C4803 - C4804 - C4805) * C51163 * C20037 +
           (C3287 * C1990 - (C2613 * C51494 + C2614 * C1989) + C3288 * C51483 -
            (C117 * C3631 + C51318 * C3634) * C1991 -
            (C117 * C3635 + C51318 * C3637) * C1988) *
               C51163 * C20038) *
              C51218 * C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[147] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C118 +
             (C117 * C127 + C51318 * C140) * C51248) *
                C17433 +
            (C178 + C179) * C17434 + C188 * C17435) *
               C17436 +
           ((C2617 + C2618) * C17433 + C2590 * C17434 + C2602 * C17435) *
               C51356) *
              C51218 * C113 -
          ((C351 * C17435 + C352 * C17434 + C2601 * C17433) * C51356 +
           (C191 * C17435 + (C181 + C180) * C17434 + (C179 + C178) * C17433) *
               C17436) *
              C51218 * C114 +
          ((C188 * C17433 + C189 * C17434 + (C185 + C184) * C17435) * C17436 +
           (C2602 * C17433 + C8409 * C17434 + (C349 + C350) * C17435) *
               C51356) *
              C51218 * C115 -
          ((((C117 * C310 + C51318 * C317) * C51248 +
             (C117 * C299 + C51318 * C311) * C118) *
                C17435 +
            (C350 + C349) * C17434 + C351 * C17433) *
               C51356 +
           ((C187 + C186) * C17435 + C190 * C17434 + C191 * C17433) * C17436) *
              C51218 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C118 +
              (C117 * C127 + C51318 * C140) * C51248) *
                 C17433 +
             (C178 + C179) * C17434 + C188 * C17435) *
                C17436 +
            ((C2617 + C2618) * C17433 + C2590 * C17434 + C2602 * C17435) *
                C51356) *
               C622 -
           ((C2608 * C17435 + C2600 * C17434 + (C2620 + C2619) * C17433) *
                C51356 +
            (C352 * C17435 + C2601 * C17434 + (C2618 + C2617) * C17433) *
                C17436) *
               C623 +
           ((C2949 * C17433 + C2595 * C17434 + C2603 * C17435) * C17436 +
            ((C2971 + C2970) * C17433 + C2956 * C17434 +
             (C2623 + C2624) * C17435) *
                C51356) *
               C624) *
              C51439 +
          (((C2590 * C17433 + C2602 * C17434 + C8409 * C17435) * C17436 +
            (C2595 * C17433 + C2603 * C17434 + (C670 + C671) * C17435) *
                C51356) *
               C623 -
           ((C351 * C17435 + C352 * C17434 + C2601 * C17433) * C51356 +
            (C191 * C17435 + (C181 + C180) * C17434 + (C179 + C178) * C17433) *
                C17436) *
               C622 -
           ((((C117 * C746 + C51318 * C754) * C51248 +
              (C117 * C742 + C51318 * C747) * C118) *
                 C17435 +
             (C2624 + C2623) * C17434 + C2951 * C17433) *
                C51356 +
            ((C671 + C670) * C17435 + C2608 * C17434 + C2600 * C17433) *
                C17436) *
               C624) *
              C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C118 +
            (C117 * C127 + C51318 * C140) * C51248) *
               C51163 * C20035 +
           (C2617 + C2618) * C51163 * C20036 + C2949 * C51163 * C20037 +
           (C2971 + C2970) * C51163 * C20038) *
              C51218 * C113 -
          (C2951 * C51163 * C20038 + C2600 * C51163 * C20037 +
           C2601 * C51163 * C20036 + (C179 + C178) * C51163 * C20035) *
              C51218 * C114 +
          (C188 * C51163 * C20035 + C2602 * C51163 * C20036 +
           C2603 * C51163 * C20037 + (C2623 + C2624) * C51163 * C20038) *
              C51218 * C115 -
          (((C117 * C746 + C51318 * C754) * C51248 +
            (C117 * C742 + C51318 * C747) * C118) *
               C51163 * C20038 +
           (C671 + C670) * C51163 * C20037 + C351 * C51163 * C20036 +
           C191 * C51163 * C20035) *
              C51218 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C118 +
             (C117 * C127 + C51318 * C140) * C51248) *
                C51163 * C20035 +
            (C2617 + C2618) * C51163 * C20036 + C20334 * C20037 +
            C20338 * C20038) *
               C622 -
           ((C3091 + C3090) * C51163 * C20038 + C3081 * C51163 * C20037 +
            (C2620 + C2619) * C51163 * C20036 +
            (C2618 + C2617) * C51163 * C20035) *
               C623 +
           (C20334 * C20035 + C20338 * C20036 +
            (C3090 + C3091) * C51163 * C20037 +
            ((C117 * C3072 + C51318 * C3076) * C118 +
             (C117 * C3075 + C51318 * C3078) * C51248) *
                C51163 * C20038) *
               C624) *
              C51439 +
          ((C2590 * C51163 * C20035 + C2595 * C51163 * C20036 +
            C2956 * C51163 * C20037 + (C2972 + C2973) * C51163 * C20038) *
               C623 -
           (C20336 * C20038 + C20337 * C20037 + C2601 * C51163 * C20036 +
            (C179 + C178) * C51163 * C20035) *
               C622 -
           (((C117 * C3073 + C51318 * C3077) * C51248 +
             (C117 * C3071 + C51318 * C3074) * C118) *
                C51163 * C20038 +
            (C2973 + C2972) * C51163 * C20037 + C20336 * C20036 +
            C20337 * C20035) *
               C624) *
              C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[148] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51318 * C126) * C118 +
              (C117 * C127 + C51318 * C140) * C51248) *
                 C17433 +
             (C178 + C179) * C17434 + C188 * C17435) *
                C17436 +
            ((C2617 + C2618) * C17433 + C2590 * C17434 + C2602 * C17435) *
                C51356) *
               C51446 -
           ((C2608 * C17435 + C2600 * C17434 + (C2620 + C2619) * C17433) *
                C51356 +
            (C352 * C17435 + C2601 * C17434 + (C2618 + C2617) * C17433) *
                C17436) *
               C51234) *
              C291 +
          (((C2590 * C17433 + C2602 * C17434 + C8409 * C17435) * C17436 +
            (C2595 * C17433 + C2603 * C17434 + (C670 + C671) * C17435) *
                C51356) *
               C51234 -
           ((C351 * C17435 + C352 * C17434 + C2601 * C17433) * C51356 +
            (C191 * C17435 + (C181 + C180) * C17434 + (C179 + C178) * C17433) *
                C17436) *
               C51446) *
              C292 +
          (((C188 * C17433 + C189 * C17434 + (C185 + C184) * C17435) * C17436 +
            (C2602 * C17433 + C8409 * C17434 + (C349 + C350) * C17435) *
                C51356) *
               C51446 -
           ((((C117 * C640 + C51318 * C646) * C51248 +
              (C117 * C631 + C51318 * C641) * C118) *
                 C17435 +
             (C671 + C670) * C17434 + C2608 * C17433) *
                C51356 +
            ((C350 + C349) * C17435 + C351 * C17434 + C352 * C17433) * C17436) *
               C51234) *
              C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C118 +
             (C117 * C127 + C51318 * C140) * C51248) *
                C17433 +
            (C178 + C179) * C17434 + C188 * C17435) *
               C17436 +
           ((C2617 + C2618) * C17433 + C2590 * C17434 + C2602 * C17435) *
               C51356) *
              C737 -
          ((C2608 * C17435 + C2600 * C17434 + (C2620 + C2619) * C17433) *
               C51356 +
           (C352 * C17435 + C2601 * C17434 + (C2618 + C2617) * C17433) *
               C17436) *
              C738 +
          ((C2949 * C17433 + C2595 * C17434 + C2603 * C17435) * C17436 +
           ((C2971 + C2970) * C17433 + C2956 * C17434 +
            (C2623 + C2624) * C17435) *
               C51356) *
              C739 -
          ((((C117 * C2943 + C51318 * C2947) * C51248 +
             (C117 * C2938 + C51318 * C2944) * C118) *
                C17435 +
            (C2973 + C2972) * C17434 + (C3091 + C3090) * C17433) *
               C51356 +
           ((C2624 + C2623) * C17435 + C2951 * C17434 + C3081 * C17433) *
               C17436) *
              C740) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C118 +
             (C117 * C127 + C51318 * C140) * C51248) *
                C51163 * C20035 +
            (C2617 + C2618) * C51163 * C20036 + C2949 * C51163 * C20037 +
            (C2971 + C2970) * C51163 * C20038) *
               C51446 -
           ((C3091 + C3090) * C51163 * C20038 + C3081 * C51163 * C20037 +
            (C2620 + C2619) * C51163 * C20036 +
            (C2618 + C2617) * C51163 * C20035) *
               C51234) *
              C291 +
          ((C2590 * C51163 * C20035 + C2595 * C51163 * C20036 +
            C2956 * C51163 * C20037 + (C2972 + C2973) * C51163 * C20038) *
               C51234 -
           (C2951 * C51163 * C20038 + C2600 * C51163 * C20037 +
            C2601 * C51163 * C20036 + (C179 + C178) * C51163 * C20035) *
               C51446) *
              C292 +
          ((C188 * C51163 * C20035 + C2602 * C51163 * C20036 +
            C2603 * C51163 * C20037 + (C2623 + C2624) * C51163 * C20038) *
               C51446 -
           (((C117 * C2943 + C51318 * C2947) * C51248 +
             (C117 * C2938 + C51318 * C2944) * C118) *
                C51163 * C20038 +
            (C2624 + C2623) * C51163 * C20037 + C2608 * C51163 * C20036 +
            C352 * C51163 * C20035) *
               C51234) *
              C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C118 +
            (C117 * C127 + C51318 * C140) * C51248) *
               C51163 * C20035 +
           (C2617 + C2618) * C51163 * C20036 + C20334 * C20037 +
           C20338 * C20038) *
              C737 -
          (C20415 * C20038 + C20410 * C20037 +
           (C2620 + C2619) * C51163 * C20036 +
           (C2618 + C2617) * C51163 * C20035) *
              C738 +
          (C20334 * C20035 + C20338 * C20036 +
           (C3090 + C3091) * C51163 * C20037 +
           (C20418 + C20419) * C51163 * C20038) *
              C739 -
          (((C117 * C20405 + C51318 * C20407) * C51248 +
            (C117 * C20404 + C51318 * C20406) * C118) *
               C51163 * C20038 +
           (C20419 + C20418) * C51163 * C20037 + C20415 * C20036 +
           C20410 * C20035) *
              C740) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[149] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C452 +
             (C117 * C127 + C51318 * C140) * C51448 -
             (C117 * C454 + C51318 * C460) * C453 -
             (C117 * C461 + C51318 * C472) * C51260) *
                C17433 +
            (C479 + C480 - C513 - C514) * C17434 + C523 * C17435) *
               C17436 +
           ((C3254 + C3255 - C3289 - C3290) * C17433 + C4273 * C17434 +
            C8558 * C17435) *
               C51356) *
              C51218 * C291 +
          (((C513 - (C480 + C479) + C514) * C17433 +
            (C515 - (C486 + C485) + C516) * C17434 +
            (C517 - (C492 + C491) + C518) * C17435) *
               C17436 +
           (C4274 * C17433 + C9839 * C17434 +
            (C1621 - (C1607 + C1608) + C1622) * C17435) *
               C51356) *
              C51218 * C292 +
          ((C523 * C17433 + C524 * C17434 +
            (C500 + C499 - C519 - C520) * C17435) *
               C17436 +
           (C8558 * C17433 + (C1608 + C1607 - C1621 - C1622) * C17434 +
            (C341 * C452 + C342 * C51448 -
             (C117 * C1588 + C51318 * C1589) * C453 -
             (C117 * C1590 + C51318 * C1591) * C51260) *
                C17435) *
               C51356) *
              C51218 * C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51318 * C126) * C452 +
             (C117 * C127 + C51318 * C140) * C51448 -
             (C117 * C454 + C51318 * C460) * C453 -
             (C117 * C461 + C51318 * C472) * C51260) *
                C17433 +
            (C479 + C480 - C513 - C514) * C17434 + C523 * C17435) *
               C17436 +
           ((C3254 + C3255 - C3289 - C3290) * C17433 + C4273 * C17434 +
            C8558 * C17435) *
               C51356) *
              C622 +
          (((C3289 - (C3255 + C3254) + C3290) * C17433 + C4274 * C17434 +
            C9839 * C17435) *
               C17436 +
           ((C3291 - (C3261 + C3260) + C3292) * C17433 + C4275 * C17434 +
            (C2789 - (C2779 + C2780) + C2790) * C17435) *
               C51356) *
              C623 +
          ((C3300 * C17433 + C3293 * C17434 +
            (C2780 + C2779 - C2789 - C2790) * C17435) *
               C17436 +
           ((C3270 + C3269 - C3294 - C3295) * C17433 +
            (C3276 + C3275 - C3296 - C3297) * C17434 +
            (C2615 * C452 + C2616 * C51448 -
             (C117 * C4262 + C51318 * C4263) * C453 -
             (C117 * C4264 + C51318 * C4265) * C51260) *
                C17435) *
               C51356) *
              C624) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C452 +
            (C117 * C127 + C51318 * C140) * C51448 -
            (C117 * C454 + C51318 * C460) * C453 -
            (C117 * C461 + C51318 * C472) * C51260) *
               C51163 * C20035 +
           (C3254 + C3255 - C3289 - C3290) * C51163 * C20036 +
           C3300 * C51163 * C20037 +
           (C3270 + C3269 - C3294 - C3295) * C51163 * C20038) *
              C51218 * C291 +
          ((C513 - (C480 + C479) + C514) * C51163 * C20035 +
           C4274 * C51163 * C20036 + C4275 * C51163 * C20037 +
           (C3296 - (C3275 + C3276) + C3297) * C51163 * C20038) *
              C51218 * C292 +
          (C523 * C51163 * C20035 + C8558 * C51163 * C20036 +
           (C2780 + C2779 - C2789 - C2790) * C51163 * C20037 +
           (C2615 * C452 + C2616 * C51448 -
            (C117 * C4262 + C51318 * C4263) * C453 -
            (C117 * C4264 + C51318 * C4265) * C51260) *
               C51163 * C20038) *
              C51218 * C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51318 * C126) * C452 +
            (C117 * C127 + C51318 * C140) * C51448 -
            (C117 * C454 + C51318 * C460) * C453 -
            (C117 * C461 + C51318 * C472) * C51260) *
               C51163 * C20035 +
           (C3254 + C3255 - C3289 - C3290) * C51163 * C20036 + C20522 * C20037 +
           C20536 * C20038) *
              C622 +
          ((C3289 - (C3255 + C3254) + C3290) * C51163 * C20035 +
           (C3291 - (C3261 + C3260) + C3292) * C51163 * C20036 +
           (C3294 - (C3269 + C3270) + C3295) * C51163 * C20037 +
           (C20534 - (C20526 + C20527) + C20535) * C51163 * C20038) *
              C623 +
          (C20522 * C20035 + C20536 * C20036 +
           (C20527 + C20526 - C20534 - C20535) * C51163 * C20037 +
           (C20416 * C452 + C20417 * C51448 -
            (C117 * C20517 + C51318 * C20518) * C453 -
            (C117 * C20519 + C51318 * C20520) * C51260) *
               C51163 * C20038) *
              C624) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[150] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                  C118 +
              (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                  C51248) *
                 C51434 +
             ((C33525 + C33526) * C118 + (C33527 + C33528) * C51248) * C51168) *
                C51462 +
            (((C36506 + C36507) * C118 + (C36508 + C36509) * C51248) * C51434 +
             C41154 * C51168) *
                C51356) *
               C1350 -
           ((C36839 * C51168 +
             ((C36513 + C36512) * C51248 + (C36511 + C36510) * C118) * C51434) *
                C51356 +
            (C41155 * C51168 +
             ((C36509 + C36508) * C51248 + (C36507 + C36506) * C118) * C51434) *
                C51462) *
               C51234) *
              C51492 +
          (((C41154 * C51434 + C41156 * C51168) * C51462 +
            (C41549 * C51434 +
             ((C34095 + C34096) * C118 + (C34097 + C34098) * C51248) * C51168) *
                C51356) *
               C51234 -
           ((C33737 * C51168 + C41155 * C51434) * C51356 +
            (((C33532 + C33531) * C51248 + (C33530 + C33529) * C118) * C51168 +
             ((C33528 + C33527) * C51248 + (C33526 + C33525) * C118) * C51434) *
                C51462) *
               C1350) *
              C51477 +
          (((C33549 * C51434 +
             ((C33536 + C33535) * C118 + (C33534 + C33533) * C51248) * C51168) *
                C51462 +
            (C41156 * C51434 +
             ((C33729 + C33730) * C118 + (C33731 + C33732) * C51248) * C51168) *
                C51356) *
               C1350 -
           ((((C33491 * C879 + C51382 * C887 + C33490 * C639 + C33488 * C645) *
                  C51248 +
              (C33491 * C863 + C51382 * C878 + C33490 * C630 + C33488 * C638) *
                  C118) *
                 C51168 +
             ((C34098 + C34097) * C51248 + (C34096 + C34095) * C118) * C51434) *
                C51356 +
            (((C33732 + C33731) * C51248 + (C33730 + C33729) * C118) * C51168 +
             C33737 * C51434) *
                C51462) *
               C51234) *
              C1354)) /
        (p * q * std::sqrt(p + q));
    d2ee[151] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                  C118 +
              (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                  C51248) *
                 C51434 +
             ((C33525 + C33526) * C118 + (C33527 + C33528) * C51248) * C51168) *
                C51462 +
            (((C36506 + C36507) * C118 + (C36508 + C36509) * C51248) * C51434 +
             C41154 * C51168) *
                C51356) *
               C51493 -
           ((C36839 * C51168 +
             ((C36513 + C36512) * C51248 + (C36511 + C36510) * C118) * C51434) *
                C51356 +
            (C41155 * C51168 +
             ((C36509 + C36508) * C51248 + (C36507 + C36506) * C118) * C51434) *
                C51462) *
               C51480 +
           ((C36838 * C51434 + C41549 * C51168) * C51462 +
            (((C36831 + C36830) * C118 + (C36829 + C36828) * C51248) * C51434 +
             ((C36832 + C36833) * C118 + (C36834 + C36835) * C51248) * C51168) *
                C51356) *
               C1455) *
              C1456 +
          (((C41154 * C51434 + C41156 * C51168) * C51462 +
            (C41549 * C51434 +
             ((C34095 + C34096) * C118 + (C34097 + C34098) * C51248) * C51168) *
                C51356) *
               C51480 -
           ((C33737 * C51168 + C41155 * C51434) * C51356 +
            (((C33532 + C33531) * C51248 + (C33530 + C33529) * C118) * C51168 +
             ((C33528 + C33527) * C51248 + (C33526 + C33525) * C118) * C51434) *
                C51462) *
               C51493 -
           ((((C33491 * C4264 + C51382 * C4265 + C33490 * C748 +
               C33488 * C755) *
                  C51248 +
              (C33491 * C4262 + C51382 * C4263 + C33490 * C743 +
               C33488 * C749) *
                  C118) *
                 C51168 +
             ((C36835 + C36834) * C51248 + (C36833 + C36832) * C118) * C51434) *
                C51356 +
            (((C34098 + C34097) * C51248 + (C34096 + C34095) * C118) * C51168 +
             C36839 * C51434) *
                C51462) *
               C1455) *
              C51191)) /
        (p * q * std::sqrt(p + q));
    d2ee[152] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                  C452 +
              (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                  C51448 -
              (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                  C453 -
              (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                  C51260) *
                 C51434 +
             ((C33525 + C33526) * C452 + (C33527 + C33528) * C51448 -
              (C33910 + C33911) * C453 - (C33912 + C33913) * C51260) *
                 C51168) *
                C51462 +
            (((C36506 + C36507) * C452 + (C36508 + C36509) * C51448 -
              (C37130 + C37131) * C453 - (C37132 + C37133) * C51260) *
                 C51434 +
             C43066 * C51168) *
                C51356) *
               C1350 +
           ((((C37131 + C37130) * C453 -
              ((C36509 + C36508) * C51448 + (C36507 + C36506) * C452) +
              (C37133 + C37132) * C51260) *
                 C51434 +
             C43067 * C51168) *
                C51462 +
            (((C37136 + C37135) * C453 -
              ((C36513 + C36512) * C51448 + (C36511 + C36510) * C452) +
              (C37138 + C37137) * C51260) *
                 C51434 +
             ((C38058 + C38059) * C453 - (C36824 * C51448 + C36825 * C452) +
              (C38060 + C38061) * C51260) *
                 C51168) *
                C51356) *
               C51234) *
              C1456 +
          (((((C33911 + C33910) * C453 -
              ((C33528 + C33527) * C51448 + (C33526 + C33525) * C452) +
              (C33913 + C33912) * C51260) *
                 C51434 +
             ((C33916 + C33915) * C453 -
              ((C33532 + C33531) * C51448 + (C33530 + C33529) * C452) +
              (C33918 + C33917) * C51260) *
                 C51168) *
                C51462 +
            (C43067 * C51434 +
             ((C35263 + C35264) * C453 - (C33733 * C51448 + C33734 * C452) +
              (C35265 + C35266) * C51260) *
                 C51168) *
                C51356) *
               C1350 +
           ((C43066 * C51434 +
             (C41146 * C452 + C41147 * C51448 - (C35264 + C35263) * C453 -
              (C35266 + C35265) * C51260) *
                 C51168) *
                C51462 +
            ((C41545 * C452 + C41546 * C51448 - (C38059 + C38058) * C453 -
              (C38061 + C38060) * C51260) *
                 C51434 +
             ((C34095 + C34096) * C452 + (C34097 + C34098) * C51448 -
              (C33491 * C3450 + C51382 * C3455 + C33490 * C862 +
               C33488 * C876) *
                  C453 -
              (C33491 * C3456 + C51382 * C3459 + C33490 * C877 +
               C33488 * C886) *
                  C51260) *
                 C51168) *
                C51356) *
               C51234) *
              C51191)) /
        (p * q * std::sqrt(p + q));
    d2ee[153] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                  C1722 +
              (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                  C1720 -
              (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                  C1723 -
              (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                  C51260) *
                 C51434 +
             ((C33525 + C33526) * C1722 + (C33527 + C33528) * C1720 -
              (C33910 + C33911) * C1723 - (C33912 + C33913) * C51260) *
                 C51168) *
                C51462 +
            (((C36506 + C36507) * C1722 + (C36508 + C36509) * C1720 -
              (C37130 + C37131) * C1723 - (C37132 + C37133) * C51260) *
                 C51434 +
             C43532 * C51168) *
                C51356) *
               C1350 +
           ((((C37131 + C37130) * C1723 -
              ((C36509 + C36508) * C1720 + (C36507 + C36506) * C1722) +
              (C37133 + C37132) * C51260) *
                 C51434 +
             C43533 * C51168) *
                C51462 +
            (((C37136 + C37135) * C1723 -
              ((C36513 + C36512) * C1720 + (C36511 + C36510) * C1722) +
              (C37138 + C37137) * C51260) *
                 C51434 +
             ((C38058 + C38059) * C1723 - (C36824 * C1720 + C36825 * C1722) +
              (C38060 + C38061) * C51260) *
                 C51168) *
                C51356) *
               C51234) *
              C51439 +
          (((((C33911 + C33910) * C1723 -
              ((C33528 + C33527) * C1720 + (C33526 + C33525) * C1722) +
              (C33913 + C33912) * C51260) *
                 C51434 +
             ((C33916 + C33915) * C1723 -
              ((C33532 + C33531) * C1720 + (C33530 + C33529) * C1722) +
              (C33918 + C33917) * C51260) *
                 C51168) *
                C51462 +
            (C43533 * C51434 +
             ((C35263 + C35264) * C1723 - (C33733 * C1720 + C33734 * C1722) +
              (C35265 + C35266) * C51260) *
                 C51168) *
                C51356) *
               C1350 +
           ((C43532 * C51434 +
             (C41146 * C1722 + C41147 * C1720 - (C35264 + C35263) * C1723 -
              (C35266 + C35265) * C51260) *
                 C51168) *
                C51462 +
            ((C41545 * C1722 + C41546 * C1720 - (C38059 + C38058) * C1723 -
              (C38061 + C38060) * C51260) *
                 C51434 +
             ((C34095 + C34096) * C1722 + (C34097 + C34098) * C1720 -
              (C33491 * C3450 + C51382 * C3455 + C33490 * C862 +
               C33488 * C876) *
                  C1723 -
              (C33491 * C3456 + C51382 * C3459 + C33490 * C877 +
               C33488 * C886) *
                  C51260) *
                 C51168) *
                C51356) *
               C51234) *
              C51191)) /
        (p * q * std::sqrt(p + q));
    d2ee[154] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                 C1722 +
             (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                 C1720 -
             (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                 C1723 -
             (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                 C51260) *
                C51434 +
            ((C33525 + C33526) * C1722 + (C33527 + C33528) * C1720 -
             (C33910 + C33911) * C1723 - (C33912 + C33913) * C51260) *
                C51168) *
               C51462 +
           (((C36506 + C36507) * C1722 + (C36508 + C36509) * C1720 -
             (C37130 + C37131) * C1723 - (C37132 + C37133) * C51260) *
                C51434 +
            C43532 * C51168) *
               C51356) *
              C51493 +
          ((((C37131 + C37130) * C1723 -
             ((C36509 + C36508) * C1720 + (C36507 + C36506) * C1722) +
             (C37133 + C37132) * C51260) *
                C51434 +
            C43533 * C51168) *
               C51462 +
           (((C37136 + C37135) * C1723 -
             ((C36513 + C36512) * C1720 + (C36511 + C36510) * C1722) +
             (C37138 + C37137) * C51260) *
                C51434 +
            ((C38058 + C38059) * C1723 - (C36824 * C1720 + C36825 * C1722) +
             (C38060 + C38061) * C51260) *
                C51168) *
               C51356) *
              C51480 +
          ((C38894 * C51434 +
            (C41545 * C1722 + C41546 * C1720 - (C38059 + C38058) * C1723 -
             (C38061 + C38060) * C51260) *
                C51168) *
               C51462 +
           (((C36831 + C36830) * C1722 + (C36829 + C36828) * C1720 -
             (C37140 + C37139) * C1723 - (C37142 + C37141) * C51260) *
                C51434 +
            ((C36832 + C36833) * C1722 + (C36834 + C36835) * C1720 -
             (C33491 * C3631 + C51382 * C3634 + C33490 * C3238 +
              C33488 * C3243) *
                 C1723 -
             (C33491 * C3635 + C51382 * C3637 + C33490 * C3244 +
              C33488 * C3250) *
                 C51260) *
                C51168) *
               C51356) *
              C1455) *
         C51186) /
        (p * q * std::sqrt(p + q));
    d2ee[155] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                 C1989 +
             (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                 C51494 -
             (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                 C1990 -
             (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                 C51483 +
             (C33490 * C992 + C33488 * C997 + C33491 * C1236 + C51382 * C1240) *
                 C1991 +
             (C33490 * C998 + C33488 * C1007 + C33491 * C1241 +
              C51382 * C1248) *
                 C1988) *
                C51434 +
            ((C33525 + C33526) * C1989 + (C33527 + C33528) * C51494 -
             (C33910 + C33911) * C1990 - (C33912 + C33913) * C51483 +
             (C34505 + C34506) * C1991 + (C34507 + C34508) * C1988) *
                C51168) *
               C51462 +
           (((C36506 + C36507) * C1989 + (C36508 + C36509) * C51494 -
             (C37130 + C37131) * C1990 - (C37132 + C37133) * C51483 +
             (C37458 + C37459) * C1991 + (C37460 + C37461) * C1988) *
                C51434 +
            (C41142 * C1989 + C41143 * C51494 - C43052 * C1990 -
             C43053 * C51483 + (C42076 + C42077) * C1991 +
             (C42078 + C42079) * C1988) *
                C51168) *
               C51356) *
              C1350 +
          ((((C37131 + C37130) * C1990 -
             ((C36509 + C36508) * C51494 + (C36507 + C36506) * C1989) +
             (C37133 + C37132) * C51483 - (C37459 + C37458) * C1991 -
             (C37461 + C37460) * C1988) *
                C51434 +
            (C43054 * C1990 - (C41144 * C51494 + C41145 * C1989) +
             C43057 * C51483 - (C42077 + C42076) * C1991 -
             (C42079 + C42078) * C1988) *
                C51168) *
               C51462 +
           (((C37136 + C37135) * C1990 -
             ((C36513 + C36512) * C51494 + (C36511 + C36510) * C1989) +
             (C37138 + C37137) * C51483 - (C37463 + C37462) * C1991 -
             (C37465 + C37464) * C1988) *
                C51434 +
            ((C38058 + C38059) * C1990 - (C36824 * C51494 + C36825 * C1989) +
             (C38060 + C38061) * C51483 -
             (C33491 * C3763 + C51382 * C3770 + C33490 * C3449 +
              C33488 * C3453) *
                 C1991 -
             (C33491 * C3771 + C51382 * C3775 + C33490 * C3454 +
              C33488 * C3458) *
                 C1988) *
                C51168) *
               C51356) *
              C51234) *
         C51186) /
        (p * q * std::sqrt(p + q));
    d2ee[156] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                  C118 +
              (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                  C51248) *
                 C51434 +
             ((C33525 + C33526) * C118 + (C33527 + C33528) * C51248) * C51168) *
                C51462 +
            (((C36506 + C36507) * C118 + (C36508 + C36509) * C51248) * C51434 +
             C41154 * C51168) *
                C51356) *
               C622 -
           ((C36839 * C51168 +
             ((C36513 + C36512) * C51248 + (C36511 + C36510) * C118) * C51434) *
                C51356 +
            (C41155 * C51168 +
             ((C36509 + C36508) * C51248 + (C36507 + C36506) * C118) * C51434) *
                C51462) *
               C623 +
           ((C36838 * C51434 + C41549 * C51168) * C51462 +
            (((C36831 + C36830) * C118 + (C36829 + C36828) * C51248) * C51434 +
             ((C36832 + C36833) * C118 + (C36834 + C36835) * C51248) * C51168) *
                C51356) *
               C624) *
              C51439 +
          (((C41154 * C51434 + C41156 * C51168) * C51462 +
            (C41549 * C51434 +
             ((C34095 + C34096) * C118 + (C34097 + C34098) * C51248) * C51168) *
                C51356) *
               C623 -
           ((C33737 * C51168 + C41155 * C51434) * C51356 +
            (((C33532 + C33531) * C51248 + (C33530 + C33529) * C118) * C51168 +
             ((C33528 + C33527) * C51248 + (C33526 + C33525) * C118) * C51434) *
                C51462) *
               C622 -
           ((((C33491 * C4264 + C51382 * C4265 + C33490 * C748 +
               C33488 * C755) *
                  C51248 +
              (C33491 * C4262 + C51382 * C4263 + C33490 * C743 +
               C33488 * C749) *
                  C118) *
                 C51168 +
             ((C36835 + C36834) * C51248 + (C36833 + C36832) * C118) * C51434) *
                C51356 +
            (((C34098 + C34097) * C51248 + (C34096 + C34095) * C118) * C51168 +
             C36839 * C51434) *
                C51462) *
               C624) *
              C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                 C51248) *
                C51434 +
            ((C33525 + C33526) * C118 + (C33527 + C33528) * C51248) * C51168) *
               C51462 +
           (((C36506 + C36507) * C118 + (C36508 + C36509) * C51248) * C51434 +
            ((C33728 + C33727) * C118 + (C33726 + C33725) * C51248) * C51168) *
               C51356) *
              C51218 * C113 -
          ((C33737 * C51168 +
            ((C33725 + C33726) * C51248 + (C33727 + C33728) * C118) * C51434) *
               C51356 +
           (((C33532 + C33531) * C51248 + (C33530 + C33529) * C118) * C51168 +
            ((C33528 + C33527) * C51248 + (C33526 + C33525) * C118) * C51434) *
               C51462) *
              C51218 * C114 +
          ((C33549 * C51434 +
            ((C33536 + C33535) * C118 + (C33534 + C33533) * C51248) * C51168) *
               C51462 +
           (((C33724 + C33723) * C118 + (C33722 + C33721) * C51248) * C51434 +
            ((C33729 + C33730) * C118 + (C33731 + C33732) * C51248) * C51168) *
               C51356) *
              C51218 * C115 -
          ((((C33491 * C1590 + C51382 * C1591 + C33490 * C309 + C33488 * C316) *
                 C51248 +
             (C33491 * C1588 + C51382 * C1589 + C33490 * C298 + C33488 * C308) *
                 C118) *
                C51168 +
            ((C33732 + C33731) * C51248 + (C33730 + C33729) * C118) * C51434) *
               C51356 +
           (((C33540 + C33539) * C51248 + (C33538 + C33537) * C118) * C51168 +
            C33550 * C51434) *
               C51462) *
              C51218 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                 C989 +
             (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                 C986 -
             (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                 C990 -
             (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                 C987 +
             (C33490 * C992 + C33488 * C997 + C33491 * C1236 + C51382 * C1240) *
                 C991 +
             (C33490 * C998 + C33488 * C1007 + C33491 * C1241 +
              C51382 * C1248) *
                 C988) *
                C51434 +
            ((C33525 + C33526) * C989 + (C33527 + C33528) * C986 -
             (C33910 + C33911) * C990 - (C33912 + C33913) * C987 +
             (C34505 + C34506) * C991 + (C34507 + C34508) * C988) *
                C51168) *
               C51462 +
           (((C36506 + C36507) * C989 + (C36508 + C36509) * C986 -
             (C37130 + C37131) * C990 - (C37132 + C37133) * C987 +
             (C37458 + C37459) * C991 + (C37460 + C37461) * C988) *
                C51434 +
            (C41142 * C989 + C41143 * C986 - (C35260 + C35259) * C990 -
             (C35262 + C35261) * C987 + (C42076 + C42077) * C991 +
             (C42078 + C42079) * C988) *
                C51168) *
               C51356) *
              C51218 * C51439 +
          ((((C33911 + C33910) * C990 -
             ((C33528 + C33527) * C986 + (C33526 + C33525) * C989) +
             (C33913 + C33912) * C987 - (C34506 + C34505) * C991 -
             (C34508 + C34507) * C988) *
                C51434 +
            ((C33916 + C33915) * C990 -
             ((C33532 + C33531) * C986 + (C33530 + C33529) * C989) +
             (C33918 + C33917) * C987 - (C34510 + C34509) * C991 -
             (C34512 + C34511) * C988) *
                C51168) *
               C51462 +
           (((C35259 + C35260) * C990 - (C41144 * C986 + C41145 * C989) +
             (C35261 + C35262) * C987 - (C42077 + C42076) * C991 -
             (C42079 + C42078) * C988) *
                C51434 +
            ((C35263 + C35264) * C990 - (C33733 * C986 + C33734 * C989) +
             (C35265 + C35266) * C987 -
             (C33491 * C7165 + C51382 * C7166 + C33490 * C1148 +
              C33488 * C1154) *
                 C991 -
             (C33491 * C7167 + C51382 * C7168 + C33490 * C1155 +
              C33488 * C1160) *
                 C988) *
                C51168) *
               C51356) *
              C51218 * C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[157] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                 C51248) *
                C51434 +
            ((C33525 + C33526) * C118 + (C33527 + C33528) * C51248) * C51168) *
               C51462 +
           (((C36506 + C36507) * C118 + (C36508 + C36509) * C51248) * C51434 +
            C41154 * C51168) *
               C51356) *
              C737 -
          ((C36839 * C51168 +
            ((C36513 + C36512) * C51248 + (C36511 + C36510) * C118) * C51434) *
               C51356 +
           (C41155 * C51168 +
            ((C36509 + C36508) * C51248 + (C36507 + C36506) * C118) * C51434) *
               C51462) *
              C738 +
          ((C36838 * C51434 + C41549 * C51168) * C51462 +
           (((C36831 + C36830) * C118 + (C36829 + C36828) * C51248) * C51434 +
            ((C36832 + C36833) * C118 + (C36834 + C36835) * C51248) * C51168) *
               C51356) *
              C739 -
          ((((C33491 * C3248 + C51382 * C3252 + C33490 * C2942 +
              C33488 * C2946) *
                 C51248 +
             (C33491 * C3240 + C51382 * C3247 + C33490 * C2937 +
              C33488 * C2941) *
                 C118) *
                C51168 +
            ((C36955 + C36954) * C51248 + (C36953 + C36952) * C118) * C51434) *
               C51356 +
           (((C36835 + C36834) * C51248 + (C36833 + C36832) * C118) * C51168 +
            C36956 * C51434) *
               C51462) *
              C740) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                  C118 +
              (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                  C51248) *
                 C51434 +
             ((C33525 + C33526) * C118 + (C33527 + C33528) * C51248) * C51168) *
                C51462 +
            (((C36506 + C36507) * C118 + (C36508 + C36509) * C51248) * C51434 +
             C41154 * C51168) *
                C51356) *
               C51446 -
           ((C36839 * C51168 +
             ((C36513 + C36512) * C51248 + (C36511 + C36510) * C118) * C51434) *
                C51356 +
            (C41155 * C51168 +
             ((C36509 + C36508) * C51248 + (C36507 + C36506) * C118) * C51434) *
                C51462) *
               C51234) *
              C291 +
          (((C41154 * C51434 + C41156 * C51168) * C51462 +
            (((C34091 + C34092) * C118 + (C34093 + C34094) * C51248) * C51434 +
             ((C34095 + C34096) * C118 + (C34097 + C34098) * C51248) * C51168) *
                C51356) *
               C51234 -
           ((C33737 * C51168 + C41155 * C51434) * C51356 +
            (((C33532 + C33531) * C51248 + (C33530 + C33529) * C118) * C51168 +
             ((C33528 + C33527) * C51248 + (C33526 + C33525) * C118) * C51434) *
                C51462) *
               C51446) *
              C292 +
          (((C33549 * C51434 +
             ((C33536 + C33535) * C118 + (C33534 + C33533) * C51248) * C51168) *
                C51462 +
            (C41156 * C51434 +
             ((C33729 + C33730) * C118 + (C33731 + C33732) * C51248) * C51168) *
                C51356) *
               C51446 -
           ((((C33491 * C879 + C51382 * C887 + C33490 * C639 + C33488 * C645) *
                  C51248 +
              (C33491 * C863 + C51382 * C878 + C33490 * C630 + C33488 * C638) *
                  C118) *
                 C51168 +
             ((C34098 + C34097) * C51248 + (C34096 + C34095) * C118) * C51434) *
                C51356 +
            (((C33732 + C33731) * C51248 + (C33730 + C33729) * C118) * C51168 +
             C33737 * C51434) *
                C51462) *
               C51234) *
              C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                 C989 +
             (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                 C986 -
             (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                 C990 -
             (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                 C987 +
             (C33490 * C992 + C33488 * C997 + C33491 * C1236 + C51382 * C1240) *
                 C991 +
             (C33490 * C998 + C33488 * C1007 + C33491 * C1241 +
              C51382 * C1248) *
                 C988) *
                C51434 +
            ((C33525 + C33526) * C989 + (C33527 + C33528) * C986 -
             (C33910 + C33911) * C990 - (C33912 + C33913) * C987 +
             (C34505 + C34506) * C991 + (C34507 + C34508) * C988) *
                C51168) *
               C51462 +
           (((C36506 + C36507) * C989 + (C36508 + C36509) * C986 -
             (C37130 + C37131) * C990 - (C37132 + C37133) * C987 +
             (C37458 + C37459) * C991 + (C37460 + C37461) * C988) *
                C51434 +
            (C41142 * C989 + C41143 * C986 - (C35260 + C35259) * C990 -
             (C35262 + C35261) * C987 + (C42076 + C42077) * C991 +
             (C42078 + C42079) * C988) *
                C51168) *
               C51356) *
              C51446 +
          ((((C37131 + C37130) * C990 -
             ((C36509 + C36508) * C986 + (C36507 + C36506) * C989) +
             (C37133 + C37132) * C987 - (C37459 + C37458) * C991 -
             (C37461 + C37460) * C988) *
                C51434 +
            ((C35259 + C35260) * C990 - (C41144 * C986 + C41145 * C989) +
             (C35261 + C35262) * C987 - (C42077 + C42076) * C991 -
             (C42079 + C42078) * C988) *
                C51168) *
               C51462 +
           (((C37136 + C37135) * C990 -
             ((C36513 + C36512) * C986 + (C36511 + C36510) * C989) +
             (C37138 + C37137) * C987 - (C37463 + C37462) * C991 -
             (C37465 + C37464) * C988) *
                C51434 +
            ((C38058 + C38059) * C990 - (C36824 * C986 + C36825 * C989) +
             (C38060 + C38061) * C987 -
             (C33491 * C3763 + C51382 * C3770 + C33490 * C3449 +
              C33488 * C3453) *
                 C991 -
             (C33491 * C3771 + C51382 * C3775 + C33490 * C3454 +
              C33488 * C3458) *
                 C988) *
                C51168) *
               C51356) *
              C51234) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[158] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                 C452 +
             (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                 C51448 -
             (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                 C453 -
             (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                 C51260) *
                C51434 +
            ((C33525 + C33526) * C452 + (C33527 + C33528) * C51448 -
             (C33910 + C33911) * C453 - (C33912 + C33913) * C51260) *
                C51168) *
               C51462 +
           (((C36506 + C36507) * C452 + (C36508 + C36509) * C51448 -
             (C37130 + C37131) * C453 - (C37132 + C37133) * C51260) *
                C51434 +
            (C41142 * C452 + C41143 * C51448 - (C35260 + C35259) * C453 -
             (C35262 + C35261) * C51260) *
                C51168) *
               C51356) *
              C622 +
          ((((C37131 + C37130) * C453 -
             ((C36509 + C36508) * C51448 + (C36507 + C36506) * C452) +
             (C37133 + C37132) * C51260) *
                C51434 +
            ((C35259 + C35260) * C453 - (C41144 * C51448 + C41145 * C452) +
             (C35261 + C35262) * C51260) *
                C51168) *
               C51462 +
           (((C37136 + C37135) * C453 -
             ((C36513 + C36512) * C51448 + (C36511 + C36510) * C452) +
             (C37138 + C37137) * C51260) *
                C51434 +
            ((C38058 + C38059) * C453 - (C36824 * C51448 + C36825 * C452) +
             (C38060 + C38061) * C51260) *
                C51168) *
               C51356) *
              C623 +
          ((C37148 * C51434 +
            (C41545 * C452 + C41546 * C51448 - (C38059 + C38058) * C453 -
             (C38061 + C38060) * C51260) *
                C51168) *
               C51462 +
           (((C36831 + C36830) * C452 + (C36829 + C36828) * C51448 -
             (C37140 + C37139) * C453 - (C37142 + C37141) * C51260) *
                C51434 +
            ((C36832 + C36833) * C452 + (C36834 + C36835) * C51448 -
             (C33491 * C3631 + C51382 * C3634 + C33490 * C3238 +
              C33488 * C3243) *
                 C453 -
             (C33491 * C3635 + C51382 * C3637 + C33490 * C3244 +
              C33488 * C3250) *
                 C51260) *
                C51168) *
               C51356) *
              C624) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                 C452 +
             (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                 C51448 -
             (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                 C453 -
             (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                 C51260) *
                C51434 +
            ((C33525 + C33526) * C452 + (C33527 + C33528) * C51448 -
             (C33910 + C33911) * C453 - (C33912 + C33913) * C51260) *
                C51168) *
               C51462 +
           (((C36506 + C36507) * C452 + (C36508 + C36509) * C51448 -
             (C37130 + C37131) * C453 - (C37132 + C37133) * C51260) *
                C51434 +
            (C41142 * C452 + C41143 * C51448 - (C35260 + C35259) * C453 -
             (C35262 + C35261) * C51260) *
                C51168) *
               C51356) *
              C51218 * C291 +
          ((((C33911 + C33910) * C453 -
             ((C33528 + C33527) * C51448 + (C33526 + C33525) * C452) +
             (C33913 + C33912) * C51260) *
                C51434 +
            ((C33916 + C33915) * C453 -
             ((C33532 + C33531) * C51448 + (C33530 + C33529) * C452) +
             (C33918 + C33917) * C51260) *
                C51168) *
               C51462 +
           (((C35259 + C35260) * C453 - (C41144 * C51448 + C41145 * C452) +
             (C35261 + C35262) * C51260) *
                C51434 +
            ((C35263 + C35264) * C453 - (C33733 * C51448 + C33734 * C452) +
             (C35265 + C35266) * C51260) *
                C51168) *
               C51356) *
              C51218 * C292 +
          ((C33928 * C51434 +
            ((C33536 + C33535) * C452 + (C33534 + C33533) * C51448 -
             (C33920 + C33919) * C453 - (C33922 + C33921) * C51260) *
                C51168) *
               C51462 +
           ((C41146 * C452 + C41147 * C51448 - (C35264 + C35263) * C453 -
             (C35266 + C35265) * C51260) *
                C51434 +
            ((C33729 + C33730) * C452 + (C33731 + C33732) * C51448 -
             (C33491 * C1149 + C51382 * C1156 + C33490 * C859 + C33488 * C870) *
                 C453 -
             (C33491 * C1157 + C51382 * C1161 + C33490 * C871 + C33488 * C883) *
                 C51260) *
                C51168) *
               C51356) *
              C51218 * C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C1232 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C1228 -
            (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                C1233 -
            (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                C1229 +
            (C33490 * C992 + C33488 * C997 + C33491 * C1236 + C51382 * C1240) *
                C1234 +
            (C33490 * C998 + C33488 * C1007 + C33491 * C1241 + C51382 * C1248) *
                C1230 -
            (C33491 * C6389 + C51382 * C6392 + C33490 * C1236 +
             C33488 * C1240) *
                C1235 -
            (C33491 * C6393 + C51382 * C6398 + C33490 * C1241 +
             C33488 * C1248) *
                C1231) *
               C51434 +
           ((C33525 + C33526) * C1232 + (C33527 + C33528) * C1228 -
            (C33910 + C33911) * C1233 - (C33912 + C33913) * C1229 +
            (C34505 + C34506) * C1234 + (C34507 + C34508) * C1230 -
            (C33491 * C6390 + C51382 * C6394 + C33490 * C1237 +
             C33488 * C1242) *
                C1235 -
            (C33491 * C6395 + C51382 * C6399 + C33490 * C1243 +
             C33488 * C1249) *
                C1231) *
               C51168) *
              C51462 +
          (((C36506 + C36507) * C1232 + (C36508 + C36509) * C1228 -
            (C37130 + C37131) * C1233 - (C37132 + C37133) * C1229 +
            (C37458 + C37459) * C1234 + (C37460 + C37461) * C1230 -
            (C33491 * C6565 + C51382 * C6567 + C33490 * C3760 +
             C33488 * C3764) *
                C1235 -
            (C33491 * C6568 + C51382 * C6571 + C33490 * C3765 +
             C33488 * C3772) *
                C1231) *
               C51434 +
           (C41142 * C1232 + C41143 * C1228 - (C35260 + C35259) * C1233 -
            (C35262 + C35261) * C1229 + (C42076 + C42077) * C1234 +
            (C42078 + C42079) * C1230 -
            (C33491 * C6566 + C51382 * C6569 + C33490 * C3761 +
             C33488 * C3766) *
                C1235 -
            (C33491 * C6570 + C51382 * C6572 + C33490 * C3767 +
             C33488 * C3773) *
                C1231) *
               C51168) *
              C51356) *
         C51218 * C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[159] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                 C1722 +
             (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                 C1720 -
             (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                 C1723 -
             (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                 C51260) *
                C51434 +
            ((C33525 + C33526) * C1722 + (C33527 + C33528) * C1720 -
             (C33910 + C33911) * C1723 - (C33912 + C33913) * C51260) *
                C51168) *
               C51462 +
           (((C36506 + C36507) * C1722 + (C36508 + C36509) * C1720 -
             (C37130 + C37131) * C1723 - (C37132 + C37133) * C51260) *
                C51434 +
            (C41142 * C1722 + C41143 * C1720 - C43052 * C1723 -
             C43053 * C51260) *
                C51168) *
               C51356) *
              C51218 * C51492 +
          ((((C33911 + C33910) * C1723 -
             ((C33528 + C33527) * C1720 + (C33526 + C33525) * C1722) +
             (C33913 + C33912) * C51260) *
                C51434 +
            ((C33916 + C33915) * C1723 -
             ((C33532 + C33531) * C1720 + (C33530 + C33529) * C1722) +
             (C33918 + C33917) * C51260) *
                C51168) *
               C51462 +
           ((C43054 * C1723 - (C41144 * C1720 + C41145 * C1722) +
             C43057 * C51260) *
                C51434 +
            ((C35263 + C35264) * C1723 - (C33733 * C1720 + C33734 * C1722) +
             (C35265 + C35266) * C51260) *
                C51168) *
               C51356) *
              C51218 * C51477 +
          ((C35419 * C51434 +
            ((C33536 + C33535) * C1722 + (C33534 + C33533) * C1720 -
             (C33920 + C33919) * C1723 - (C33922 + C33921) * C51260) *
                C51168) *
               C51462 +
           ((C41146 * C1722 + C41147 * C1720 - (C35264 + C35263) * C1723 -
             (C35266 + C35265) * C51260) *
                C51434 +
            ((C33729 + C33730) * C1722 + (C33731 + C33732) * C1720 -
             (C33491 * C1149 + C51382 * C1156 + C33490 * C859 + C33488 * C870) *
                 C1723 -
             (C33491 * C1157 + C51382 * C1161 + C33490 * C871 + C33488 * C883) *
                 C51260) *
                C51168) *
               C51356) *
              C51218 * C1354)) /
        (p * q * std::sqrt(p + q));
    d2ee[160] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                  C1722 +
              (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                  C1720 -
              (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                  C1723 -
              (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                  C51260) *
                 C51434 +
             ((C33525 + C33526) * C1722 + (C33527 + C33528) * C1720 -
              (C33910 + C33911) * C1723 - (C33912 + C33913) * C51260) *
                 C51168) *
                C51462 +
            (((C36506 + C36507) * C1722 + (C36508 + C36509) * C1720 -
              (C37130 + C37131) * C1723 - (C37132 + C37133) * C51260) *
                 C51434 +
             C43532 * C51168) *
                C51356) *
               C51446 +
           ((((C37131 + C37130) * C1723 -
              ((C36509 + C36508) * C1720 + (C36507 + C36506) * C1722) +
              (C37133 + C37132) * C51260) *
                 C51434 +
             C43533 * C51168) *
                C51462 +
            (((C37136 + C37135) * C1723 -
              ((C36513 + C36512) * C1720 + (C36511 + C36510) * C1722) +
              (C37138 + C37137) * C51260) *
                 C51434 +
             ((C38058 + C38059) * C1723 - (C36824 * C1720 + C36825 * C1722) +
              (C38060 + C38061) * C51260) *
                 C51168) *
                C51356) *
               C51234) *
              C1456 +
          (((((C33911 + C33910) * C1723 -
              ((C33528 + C33527) * C1720 + (C33526 + C33525) * C1722) +
              (C33913 + C33912) * C51260) *
                 C51434 +
             ((C33916 + C33915) * C1723 -
              ((C33532 + C33531) * C1720 + (C33530 + C33529) * C1722) +
              (C33918 + C33917) * C51260) *
                 C51168) *
                C51462 +
            (C43533 * C51434 +
             ((C35263 + C35264) * C1723 - (C33733 * C1720 + C33734 * C1722) +
              (C35265 + C35266) * C51260) *
                 C51168) *
                C51356) *
               C51446 +
           ((C43532 * C51434 +
             (C41146 * C1722 + C41147 * C1720 - (C35264 + C35263) * C1723 -
              (C35266 + C35265) * C51260) *
                 C51168) *
                C51462 +
            ((C41545 * C1722 + C41546 * C1720 - (C38059 + C38058) * C1723 -
              (C38061 + C38060) * C51260) *
                 C51434 +
             ((C34095 + C34096) * C1722 + (C34097 + C34098) * C1720 -
              (C33491 * C3450 + C51382 * C3455 + C33490 * C862 +
               C33488 * C876) *
                  C1723 -
              (C33491 * C3456 + C51382 * C3459 + C33490 * C877 +
               C33488 * C886) *
                  C51260) *
                 C51168) *
                C51356) *
               C51234) *
              C51191)) /
        (p * q * std::sqrt(p + q));
    d2ee[161] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                 C1989 +
             (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                 C51494 -
             (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                 C1990 -
             (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                 C51483 +
             (C33490 * C992 + C33488 * C997 + C33491 * C1236 + C51382 * C1240) *
                 C1991 +
             (C33490 * C998 + C33488 * C1007 + C33491 * C1241 +
              C51382 * C1248) *
                 C1988) *
                C51434 +
            ((C33525 + C33526) * C1989 + (C33527 + C33528) * C51494 -
             (C33910 + C33911) * C1990 - (C33912 + C33913) * C51483 +
             (C34505 + C34506) * C1991 + (C34507 + C34508) * C1988) *
                C51168) *
               C51462 +
           (((C36506 + C36507) * C1989 + (C36508 + C36509) * C51494 -
             (C37130 + C37131) * C1990 - (C37132 + C37133) * C51483 +
             (C37458 + C37459) * C1991 + (C37460 + C37461) * C1988) *
                C51434 +
            (C41142 * C1989 + C41143 * C51494 - C43052 * C1990 -
             C43053 * C51483 + (C42076 + C42077) * C1991 +
             (C42078 + C42079) * C1988) *
                C51168) *
               C51356) *
              C51218 * C1456 +
          ((((C33911 + C33910) * C1990 -
             ((C33528 + C33527) * C51494 + (C33526 + C33525) * C1989) +
             (C33913 + C33912) * C51483 - (C34506 + C34505) * C1991 -
             (C34508 + C34507) * C1988) *
                C51434 +
            ((C33916 + C33915) * C1990 -
             ((C33532 + C33531) * C51494 + (C33530 + C33529) * C1989) +
             (C33918 + C33917) * C51483 - (C34510 + C34509) * C1991 -
             (C34512 + C34511) * C1988) *
                C51168) *
               C51462 +
           ((C43054 * C1990 - (C41144 * C51494 + C41145 * C1989) +
             C43057 * C51483 - (C42077 + C42076) * C1991 -
             (C42079 + C42078) * C1988) *
                C51434 +
            ((C35263 + C35264) * C1990 - (C33733 * C51494 + C33734 * C1989) +
             (C35265 + C35266) * C51483 -
             (C33491 * C7165 + C51382 * C7166 + C33490 * C1148 +
              C33488 * C1154) *
                 C1991 -
             (C33491 * C7167 + C51382 * C7168 + C33490 * C1155 +
              C33488 * C1160) *
                 C1988) *
                C51168) *
               C51356) *
              C51218 * C51191)) /
        (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                 C51248) *
                C51434 +
            ((C33525 + C33526) * C118 + (C33527 + C33528) * C51248) * C51168) *
               C51462 +
           (((C36506 + C36507) * C118 + (C36508 + C36509) * C51248) * C51434 +
            ((C33728 + C33727) * C118 + (C33726 + C33725) * C51248) * C51168) *
               C51356) *
              C51218 * C113 -
          ((C33737 * C51168 +
            ((C33725 + C33726) * C51248 + (C33727 + C33728) * C118) * C51434) *
               C51356 +
           (((C33532 + C33531) * C51248 + (C33530 + C33529) * C118) * C51168 +
            ((C33528 + C33527) * C51248 + (C33526 + C33525) * C118) * C51434) *
               C51462) *
              C51218 * C114 +
          ((C33549 * C51434 +
            ((C33536 + C33535) * C118 + (C33534 + C33533) * C51248) * C51168) *
               C51462 +
           (((C33724 + C33723) * C118 + (C33722 + C33721) * C51248) * C51434 +
            ((C33729 + C33730) * C118 + (C33731 + C33732) * C51248) * C51168) *
               C51356) *
              C51218 * C115 -
          ((((C33491 * C1590 + C51382 * C1591 + C33490 * C309 + C33488 * C316) *
                 C51248 +
             (C33491 * C1588 + C51382 * C1589 + C33490 * C298 + C33488 * C308) *
                 C118) *
                C51168 +
            ((C33732 + C33731) * C51248 + (C33730 + C33729) * C118) * C51434) *
               C51356 +
           (((C33540 + C33539) * C51248 + (C33538 + C33537) * C118) * C51168 +
            C33550 * C51434) *
               C51462) *
              C51218 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                  C118 +
              (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                  C51248) *
                 C51434 +
             ((C33525 + C33526) * C118 + (C33527 + C33528) * C51248) * C51168) *
                C51462 +
            (((C36506 + C36507) * C118 + (C36508 + C36509) * C51248) * C51434 +
             C41154 * C51168) *
                C51356) *
               C622 -
           ((C36839 * C51168 +
             ((C36513 + C36512) * C51248 + (C36511 + C36510) * C118) * C51434) *
                C51356 +
            (C41155 * C51168 +
             ((C36509 + C36508) * C51248 + (C36507 + C36506) * C118) * C51434) *
                C51462) *
               C623 +
           ((C36838 * C51434 + C41549 * C51168) * C51462 +
            (((C36831 + C36830) * C118 + (C36829 + C36828) * C51248) * C51434 +
             ((C36832 + C36833) * C118 + (C36834 + C36835) * C51248) * C51168) *
                C51356) *
               C624) *
              C51439 +
          (((C41154 * C51434 + C41156 * C51168) * C51462 +
            (C41549 * C51434 +
             ((C34095 + C34096) * C118 + (C34097 + C34098) * C51248) * C51168) *
                C51356) *
               C623 -
           ((C33737 * C51168 + C41155 * C51434) * C51356 +
            (((C33532 + C33531) * C51248 + (C33530 + C33529) * C118) * C51168 +
             ((C33528 + C33527) * C51248 + (C33526 + C33525) * C118) * C51434) *
                C51462) *
               C622 -
           ((((C33491 * C4264 + C51382 * C4265 + C33490 * C748 +
               C33488 * C755) *
                  C51248 +
              (C33491 * C4262 + C51382 * C4263 + C33490 * C743 +
               C33488 * C749) *
                  C118) *
                 C51168 +
             ((C36835 + C36834) * C51248 + (C36833 + C36832) * C118) * C51434) *
                C51356 +
            (((C34098 + C34097) * C51248 + (C34096 + C34095) * C118) * C51168 +
             C36839 * C51434) *
                C51462) *
               C624) *
              C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[163] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                  C118 +
              (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                  C51248) *
                 C51434 +
             ((C33525 + C33526) * C118 + (C33527 + C33528) * C51248) * C51168) *
                C51462 +
            (((C36506 + C36507) * C118 + (C36508 + C36509) * C51248) * C51434 +
             C41154 * C51168) *
                C51356) *
               C51446 -
           ((C36839 * C51168 +
             ((C36513 + C36512) * C51248 + (C36511 + C36510) * C118) * C51434) *
                C51356 +
            (C41155 * C51168 +
             ((C36509 + C36508) * C51248 + (C36507 + C36506) * C118) * C51434) *
                C51462) *
               C51234) *
              C291 +
          (((C41154 * C51434 + C41156 * C51168) * C51462 +
            (((C34091 + C34092) * C118 + (C34093 + C34094) * C51248) * C51434 +
             ((C34095 + C34096) * C118 + (C34097 + C34098) * C51248) * C51168) *
                C51356) *
               C51234 -
           ((C33737 * C51168 + C41155 * C51434) * C51356 +
            (((C33532 + C33531) * C51248 + (C33530 + C33529) * C118) * C51168 +
             ((C33528 + C33527) * C51248 + (C33526 + C33525) * C118) * C51434) *
                C51462) *
               C51446) *
              C292 +
          (((C33549 * C51434 +
             ((C33536 + C33535) * C118 + (C33534 + C33533) * C51248) * C51168) *
                C51462 +
            (C41156 * C51434 +
             ((C33729 + C33730) * C118 + (C33731 + C33732) * C51248) * C51168) *
                C51356) *
               C51446 -
           ((((C33491 * C879 + C51382 * C887 + C33490 * C639 + C33488 * C645) *
                  C51248 +
              (C33491 * C863 + C51382 * C878 + C33490 * C630 + C33488 * C638) *
                  C118) *
                 C51168 +
             ((C34098 + C34097) * C51248 + (C34096 + C34095) * C118) * C51434) *
                C51356 +
            (((C33732 + C33731) * C51248 + (C33730 + C33729) * C118) * C51168 +
             C33737 * C51434) *
                C51462) *
               C51234) *
              C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                 C51248) *
                C51434 +
            ((C33525 + C33526) * C118 + (C33527 + C33528) * C51248) * C51168) *
               C51462 +
           (((C36506 + C36507) * C118 + (C36508 + C36509) * C51248) * C51434 +
            C41154 * C51168) *
               C51356) *
              C737 -
          ((C36839 * C51168 +
            ((C36513 + C36512) * C51248 + (C36511 + C36510) * C118) * C51434) *
               C51356 +
           (C41155 * C51168 +
            ((C36509 + C36508) * C51248 + (C36507 + C36506) * C118) * C51434) *
               C51462) *
              C738 +
          ((C36838 * C51434 + C41549 * C51168) * C51462 +
           (((C36831 + C36830) * C118 + (C36829 + C36828) * C51248) * C51434 +
            ((C36832 + C36833) * C118 + (C36834 + C36835) * C51248) * C51168) *
               C51356) *
              C739 -
          ((((C33491 * C3248 + C51382 * C3252 + C33490 * C2942 +
              C33488 * C2946) *
                 C51248 +
             (C33491 * C3240 + C51382 * C3247 + C33490 * C2937 +
              C33488 * C2941) *
                 C118) *
                C51168 +
            ((C36955 + C36954) * C51248 + (C36953 + C36952) * C118) * C51434) *
               C51356 +
           (((C36835 + C36834) * C51248 + (C36833 + C36832) * C118) * C51168 +
            C36956 * C51434) *
               C51462) *
              C740) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[164] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                 C452 +
             (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                 C51448 -
             (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                 C453 -
             (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                 C51260) *
                C51434 +
            ((C33525 + C33526) * C452 + (C33527 + C33528) * C51448 -
             (C33910 + C33911) * C453 - (C33912 + C33913) * C51260) *
                C51168) *
               C51462 +
           (((C36506 + C36507) * C452 + (C36508 + C36509) * C51448 -
             (C37130 + C37131) * C453 - (C37132 + C37133) * C51260) *
                C51434 +
            (C41142 * C452 + C41143 * C51448 - (C35260 + C35259) * C453 -
             (C35262 + C35261) * C51260) *
                C51168) *
               C51356) *
              C51218 * C291 +
          ((((C33911 + C33910) * C453 -
             ((C33528 + C33527) * C51448 + (C33526 + C33525) * C452) +
             (C33913 + C33912) * C51260) *
                C51434 +
            ((C33916 + C33915) * C453 -
             ((C33532 + C33531) * C51448 + (C33530 + C33529) * C452) +
             (C33918 + C33917) * C51260) *
                C51168) *
               C51462 +
           (((C35259 + C35260) * C453 - (C41144 * C51448 + C41145 * C452) +
             (C35261 + C35262) * C51260) *
                C51434 +
            ((C35263 + C35264) * C453 - (C33733 * C51448 + C33734 * C452) +
             (C35265 + C35266) * C51260) *
                C51168) *
               C51356) *
              C51218 * C292 +
          ((C33928 * C51434 +
            ((C33536 + C33535) * C452 + (C33534 + C33533) * C51448 -
             (C33920 + C33919) * C453 - (C33922 + C33921) * C51260) *
                C51168) *
               C51462 +
           ((C41146 * C452 + C41147 * C51448 - (C35264 + C35263) * C453 -
             (C35266 + C35265) * C51260) *
                C51434 +
            ((C33729 + C33730) * C452 + (C33731 + C33732) * C51448 -
             (C33491 * C1149 + C51382 * C1156 + C33490 * C859 + C33488 * C870) *
                 C453 -
             (C33491 * C1157 + C51382 * C1161 + C33490 * C871 + C33488 * C883) *
                 C51260) *
                C51168) *
               C51356) *
              C51218 * C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                 C452 +
             (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                 C51448 -
             (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                 C453 -
             (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                 C51260) *
                C51434 +
            ((C33525 + C33526) * C452 + (C33527 + C33528) * C51448 -
             (C33910 + C33911) * C453 - (C33912 + C33913) * C51260) *
                C51168) *
               C51462 +
           (((C36506 + C36507) * C452 + (C36508 + C36509) * C51448 -
             (C37130 + C37131) * C453 - (C37132 + C37133) * C51260) *
                C51434 +
            (C41142 * C452 + C41143 * C51448 - (C35260 + C35259) * C453 -
             (C35262 + C35261) * C51260) *
                C51168) *
               C51356) *
              C622 +
          ((((C37131 + C37130) * C453 -
             ((C36509 + C36508) * C51448 + (C36507 + C36506) * C452) +
             (C37133 + C37132) * C51260) *
                C51434 +
            ((C35259 + C35260) * C453 - (C41144 * C51448 + C41145 * C452) +
             (C35261 + C35262) * C51260) *
                C51168) *
               C51462 +
           (((C37136 + C37135) * C453 -
             ((C36513 + C36512) * C51448 + (C36511 + C36510) * C452) +
             (C37138 + C37137) * C51260) *
                C51434 +
            ((C38058 + C38059) * C453 - (C36824 * C51448 + C36825 * C452) +
             (C38060 + C38061) * C51260) *
                C51168) *
               C51356) *
              C623 +
          ((C37148 * C51434 +
            (C41545 * C452 + C41546 * C51448 - (C38059 + C38058) * C453 -
             (C38061 + C38060) * C51260) *
                C51168) *
               C51462 +
           (((C36831 + C36830) * C452 + (C36829 + C36828) * C51448 -
             (C37140 + C37139) * C453 - (C37142 + C37141) * C51260) *
                C51434 +
            ((C36832 + C36833) * C452 + (C36834 + C36835) * C51448 -
             (C33491 * C3631 + C51382 * C3634 + C33490 * C3238 +
              C33488 * C3243) *
                 C453 -
             (C33491 * C3635 + C51382 * C3637 + C33490 * C3244 +
              C33488 * C3250) *
                 C51260) *
                C51168) *
               C51356) *
              C624) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[165] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C44474 * C119 + C51497 * C126 + C44475 * C454 +
                       C51498 * C460 + C44476 * C992 + C44473 * C997) *
                          C118 +
                      (C44474 * C127 + C51497 * C140 + C44475 * C461 +
                       C51498 * C472 + C44476 * C998 + C44473 * C1007) *
                          C51248) *
                         C51163 * C51462 +
                     ((C47444 + C47445 + C47446) * C118 +
                      (C47447 + C47448 + C47449) * C51248) *
                         C51163 * C51356) *
                        C1350 -
                    (((C47754 + C47755 + C47756) * C51248 +
                      (C47757 + C47758 + C47759) * C118) *
                         C51163 * C51356 +
                     ((C47449 + C47448 + C47447) * C51248 +
                      (C47446 + C47445 + C47444) * C118) *
                         C51163 * C51462) *
                        C51234) *
                       C51492 +
                   ((((C44707 + C44706 + C44705) * C118 +
                      (C44704 + C44703 + C44702) * C51248) *
                         C51163 * C51462 +
                     ((C45054 + C45055 + C45056) * C118 +
                      (C45057 + C45058 + C45059) * C51248) *
                         C51163 * C51356) *
                        C51234 -
                    (((C44702 + C44703 + C44704) * C51248 +
                      (C44705 + C44706 + C44707) * C118) *
                         C51163 * C51356 +
                     ((C44519 + C44518 + C44517) * C51248 +
                      (C44516 + C44515 + C44514) * C118) *
                         C51163 * C51462) *
                        C1350) *
                       C51477 +
                   ((((C44525 + C44524 + C44523) * C118 +
                      (C44522 + C44521 + C44520) * C51248) *
                         C51163 * C51462 +
                     ((C44708 + C44709 + C44710) * C118 +
                      (C44711 + C44712 + C44713) * C51248) *
                         C51163 * C51356) *
                        C1350 -
                    (((C44476 * C3456 + C44473 * C3459 + C44475 * C877 +
                       C51498 * C886 + C44474 * C637 + C51497 * C644) *
                          C51248 +
                      (C44476 * C3450 + C44473 * C3455 + C44475 * C862 +
                       C51498 * C876 + C44474 * C629 + C51497 * C636) *
                          C118) *
                         C51163 * C51356 +
                     ((C44713 + C44712 + C44711) * C51248 +
                      (C44710 + C44709 + C44708) * C118) *
                         C51163 * C51462) *
                        C51234) *
                       C1354)) /
                 (p * q * std::sqrt(p + q));
    d2ee[166] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C44474 * C119 + C51497 * C126 + C44475 * C454 +
                       C51498 * C460 + C44476 * C992 + C44473 * C997) *
                          C118 +
                      (C44474 * C127 + C51497 * C140 + C44475 * C461 +
                       C51498 * C472 + C44476 * C998 + C44473 * C1007) *
                          C51248) *
                         C51163 * C51462 +
                     ((C47444 + C47445 + C47446) * C118 +
                      (C47447 + C47448 + C47449) * C51248) *
                         C51163 * C51356) *
                        C51493 -
                    (((C47754 + C47755 + C47756) * C51248 +
                      (C47757 + C47758 + C47759) * C118) *
                         C51163 * C51356 +
                     ((C47449 + C47448 + C47447) * C51248 +
                      (C47446 + C47445 + C47444) * C118) *
                         C51163 * C51462) *
                        C51480 +
                    (((C47759 + C47758 + C47757) * C118 +
                      (C47756 + C47755 + C47754) * C51248) *
                         C51163 * C51462 +
                     ((C47870 + C47871 + C47872) * C118 +
                      (C47873 + C47874 + C47875) * C51248) *
                         C51163 * C51356) *
                        C1455) *
                       C1456 +
                   ((((C44707 + C44706 + C44705) * C118 +
                      (C44704 + C44703 + C44702) * C51248) *
                         C51163 * C51462 +
                     ((C45054 + C45055 + C45056) * C118 +
                      (C45057 + C45058 + C45059) * C51248) *
                         C51163 * C51356) *
                        C51480 -
                    (((C44702 + C44703 + C44704) * C51248 +
                      (C44705 + C44706 + C44707) * C118) *
                         C51163 * C51356 +
                     ((C44519 + C44518 + C44517) * C51248 +
                      (C44516 + C44515 + C44514) * C118) *
                         C51163 * C51462) *
                        C51493 -
                    (((C44476 * C3635 + C44473 * C3637 + C44475 * C3244 +
                       C51498 * C3250 + C44474 * C750 + C51497 * C756) *
                          C51248 +
                      (C44476 * C3631 + C44473 * C3634 + C44475 * C3238 +
                       C51498 * C3243 + C44474 * C744 + C51497 * C751) *
                          C118) *
                         C51163 * C51356 +
                     ((C45059 + C45058 + C45057) * C51248 +
                      (C45056 + C45055 + C45054) * C118) *
                         C51163 * C51462) *
                        C1455) *
                       C51191)) /
                 (p * q * std::sqrt(p + q));
    d2ee[167] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C44474 * C119 + C51497 * C126 + C44475 * C454 +
                       C51498 * C460 + C44476 * C992 + C44473 * C997) *
                          C452 +
                      (C44474 * C127 + C51497 * C140 + C44475 * C461 +
                       C51498 * C472 + C44476 * C998 + C44473 * C1007) *
                          C51448 -
                      (C44476 * C1236 + C44473 * C1240 + C44475 * C992 +
                       C51498 * C997 + C44474 * C454 + C51497 * C460) *
                          C453 -
                      (C44476 * C1241 + C44473 * C1248 + C44475 * C998 +
                       C51498 * C1007 + C44474 * C461 + C51497 * C472) *
                          C51260) *
                         C51163 * C51462 +
                     ((C47444 + C47445 + C47446) * C452 +
                      (C47447 + C47448 + C47449) * C51448 -
                      (C48046 + C48047 + C48048) * C453 -
                      (C48049 + C48050 + C48051) * C51260) *
                         C51163 * C51356) *
                        C1350 +
                    (((C48048 + C48047 + C48046) * C453 -
                      ((C47449 + C47448 + C47447) * C51448 +
                       (C47446 + C47445 + C47444) * C452) +
                      (C48051 + C48050 + C48049) * C51260) *
                         C51163 * C51462 +
                     ((C48052 + C48053 + C48054) * C453 -
                      ((C47754 + C47755 + C47756) * C51448 +
                       (C47757 + C47758 + C47759) * C452) +
                      (C48055 + C48056 + C48057) * C51260) *
                         C51163 * C51356) *
                        C51234) *
                       C1456 +
                   ((((C44886 + C44885 + C44884) * C453 -
                      ((C44519 + C44518 + C44517) * C51448 +
                       (C44516 + C44515 + C44514) * C452) +
                      (C44889 + C44888 + C44887) * C51260) *
                         C51163 * C51462 +
                     ((C46210 + C46211 + C46212) * C453 -
                      ((C44702 + C44703 + C44704) * C51448 +
                       (C44705 + C44706 + C44707) * C452) +
                      (C46213 + C46214 + C46215) * C51260) *
                         C51163 * C51356) *
                        C1350 +
                    (((C44707 + C44706 + C44705) * C452 +
                      (C44704 + C44703 + C44702) * C51448 -
                      (C46212 + C46211 + C46210) * C453 -
                      (C46215 + C46214 + C46213) * C51260) *
                         C51163 * C51462 +
                     ((C45054 + C45055 + C45056) * C452 +
                      (C45057 + C45058 + C45059) * C51448 -
                      (C44476 * C3763 + C44473 * C3770 + C44475 * C3449 +
                       C51498 * C3453 + C44474 * C861 + C51497 * C874) *
                          C453 -
                      (C44476 * C3771 + C44473 * C3775 + C44475 * C3454 +
                       C51498 * C3458 + C44474 * C875 + C51497 * C885) *
                          C51260) *
                         C51163 * C51356) *
                        C51234) *
                       C51191)) /
                 (p * q * std::sqrt(p + q));
    d2ee[168] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C44474 * C119 + C51497 * C126 + C44475 * C454 +
                       C51498 * C460 + C44476 * C992 + C44473 * C997) *
                          C1722 +
                      (C44474 * C127 + C51497 * C140 + C44475 * C461 +
                       C51498 * C472 + C44476 * C998 + C44473 * C1007) *
                          C1720 -
                      (C44476 * C1236 + C44473 * C1240 + C44475 * C992 +
                       C51498 * C997 + C44474 * C454 + C51497 * C460) *
                          C1723 -
                      (C44476 * C1241 + C44473 * C1248 + C44475 * C998 +
                       C51498 * C1007 + C44474 * C461 + C51497 * C472) *
                          C51260) *
                         C51163 * C51462 +
                     ((C47444 + C47445 + C47446) * C1722 +
                      (C47447 + C47448 + C47449) * C1720 -
                      (C48046 + C48047 + C48048) * C1723 -
                      (C48049 + C48050 + C48051) * C51260) *
                         C51163 * C51356) *
                        C1350 +
                    (((C48048 + C48047 + C48046) * C1723 -
                      ((C47449 + C47448 + C47447) * C1720 +
                       (C47446 + C47445 + C47444) * C1722) +
                      (C48051 + C48050 + C48049) * C51260) *
                         C51163 * C51462 +
                     ((C48052 + C48053 + C48054) * C1723 -
                      ((C47754 + C47755 + C47756) * C1720 +
                       (C47757 + C47758 + C47759) * C1722) +
                      (C48055 + C48056 + C48057) * C51260) *
                         C51163 * C51356) *
                        C51234) *
                       C51439 +
                   ((((C44886 + C44885 + C44884) * C1723 -
                      ((C44519 + C44518 + C44517) * C1720 +
                       (C44516 + C44515 + C44514) * C1722) +
                      (C44889 + C44888 + C44887) * C51260) *
                         C51163 * C51462 +
                     ((C46210 + C46211 + C46212) * C1723 -
                      ((C44702 + C44703 + C44704) * C1720 +
                       (C44705 + C44706 + C44707) * C1722) +
                      (C46213 + C46214 + C46215) * C51260) *
                         C51163 * C51356) *
                        C1350 +
                    (((C44707 + C44706 + C44705) * C1722 +
                      (C44704 + C44703 + C44702) * C1720 -
                      (C46212 + C46211 + C46210) * C1723 -
                      (C46215 + C46214 + C46213) * C51260) *
                         C51163 * C51462 +
                     ((C45054 + C45055 + C45056) * C1722 +
                      (C45057 + C45058 + C45059) * C1720 -
                      (C44476 * C3763 + C44473 * C3770 + C44475 * C3449 +
                       C51498 * C3453 + C44474 * C861 + C51497 * C874) *
                          C1723 -
                      (C44476 * C3771 + C44473 * C3775 + C44475 * C3454 +
                       C51498 * C3458 + C44474 * C875 + C51497 * C885) *
                          C51260) *
                         C51163 * C51356) *
                        C51234) *
                       C51191)) /
                 (p * q * std::sqrt(p + q));
    d2ee[169] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51497 * C126 + C44475 * C454 +
                      C51498 * C460 + C44476 * C992 + C44473 * C997) *
                         C1722 +
                     (C44474 * C127 + C51497 * C140 + C44475 * C461 +
                      C51498 * C472 + C44476 * C998 + C44473 * C1007) *
                         C1720 -
                     (C44476 * C1236 + C44473 * C1240 + C44475 * C992 +
                      C51498 * C997 + C44474 * C454 + C51497 * C460) *
                         C1723 -
                     (C44476 * C1241 + C44473 * C1248 + C44475 * C998 +
                      C51498 * C1007 + C44474 * C461 + C51497 * C472) *
                         C51260) *
                        C51163 * C51462 +
                    ((C47444 + C47445 + C47446) * C1722 +
                     (C47447 + C47448 + C47449) * C1720 -
                     (C48046 + C48047 + C48048) * C1723 -
                     (C48049 + C48050 + C48051) * C51260) *
                        C51163 * C51356) *
                       C51493 +
                   (((C48048 + C48047 + C48046) * C1723 -
                     ((C47449 + C47448 + C47447) * C1720 +
                      (C47446 + C47445 + C47444) * C1722) +
                     (C48051 + C48050 + C48049) * C51260) *
                        C51163 * C51462 +
                    ((C48052 + C48053 + C48054) * C1723 -
                     ((C47754 + C47755 + C47756) * C1720 +
                      (C47757 + C47758 + C47759) * C1722) +
                     (C48055 + C48056 + C48057) * C51260) *
                        C51163 * C51356) *
                       C51480 +
                   (((C47759 + C47758 + C47757) * C1722 +
                     (C47756 + C47755 + C47754) * C1720 -
                     (C48054 + C48053 + C48052) * C1723 -
                     (C48057 + C48056 + C48055) * C51260) *
                        C51163 * C51462 +
                    ((C47870 + C47871 + C47872) * C1722 +
                     (C47873 + C47874 + C47875) * C1720 -
                     (C44476 * C20814 + C44473 * C20815 + C44475 * C3630 +
                      C51498 * C3632 + C44474 * C3237 + C51497 * C3241) *
                         C1723 -
                     (C44476 * C20816 + C44473 * C20817 + C44475 * C3633 +
                      C51498 * C3636 + C44474 * C3242 + C51497 * C3249) *
                         C51260) *
                        C51163 * C51356) *
                       C1455) *
                  C51186) /
                 (p * q * std::sqrt(p + q));
    d2ee[170] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51497 * C126 + C44475 * C454 +
                      C51498 * C460 + C44476 * C992 + C44473 * C997) *
                         C1989 +
                     (C44474 * C127 + C51497 * C140 + C44475 * C461 +
                      C51498 * C472 + C44476 * C998 + C44473 * C1007) *
                         C51494 -
                     (C44476 * C1236 + C44473 * C1240 + C44475 * C992 +
                      C51498 * C997 + C44474 * C454 + C51497 * C460) *
                         C1990 -
                     (C44476 * C1241 + C44473 * C1248 + C44475 * C998 +
                      C51498 * C1007 + C44474 * C461 + C51497 * C472) *
                         C51483 +
                     (C44474 * C992 + C51497 * C997 + C44475 * C1236 +
                      C51498 * C1240 + C44476 * C6389 + C44473 * C6392) *
                         C1991 +
                     (C44474 * C998 + C51497 * C1007 + C44475 * C1241 +
                      C51498 * C1248 + C44476 * C6393 + C44473 * C6398) *
                         C1988) *
                        C51163 * C51462 +
                    ((C47444 + C47445 + C47446) * C1989 +
                     (C47447 + C47448 + C47449) * C51494 -
                     (C48046 + C48047 + C48048) * C1990 -
                     (C48049 + C48050 + C48051) * C51483 +
                     (C48362 + C48363 + C48364) * C1991 +
                     (C48365 + C48366 + C48367) * C1988) *
                        C51163 * C51356) *
                       C1350 +
                   (((C48048 + C48047 + C48046) * C1990 -
                     ((C47449 + C47448 + C47447) * C51494 +
                      (C47446 + C47445 + C47444) * C1989) +
                     (C48051 + C48050 + C48049) * C51483 -
                     (C48364 + C48363 + C48362) * C1991 -
                     (C48367 + C48366 + C48365) * C1988) *
                        C51163 * C51462 +
                    ((C48052 + C48053 + C48054) * C1990 -
                     ((C47754 + C47755 + C47756) * C51494 +
                      (C47757 + C47758 + C47759) * C1989) +
                     (C48055 + C48056 + C48057) * C51483 -
                     (C44476 * C22973 + C44473 * C22974 + C44475 * C3762 +
                      C51498 * C3768 + C44474 * C3448 + C51497 * C3451) *
                         C1991 -
                     (C44476 * C22975 + C44473 * C22976 + C44475 * C3769 +
                      C51498 * C3774 + C44474 * C3452 + C51497 * C3457) *
                         C1988) *
                        C51163 * C51356) *
                       C51234) *
                  C51186) /
                 (p * q * std::sqrt(p + q));
    d2ee[171] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C44474 * C119 + C51497 * C126 + C44475 * C454 +
                       C51498 * C460 + C44476 * C992 + C44473 * C997) *
                          C118 +
                      (C44474 * C127 + C51497 * C140 + C44475 * C461 +
                       C51498 * C472 + C44476 * C998 + C44473 * C1007) *
                          C51248) *
                         C51163 * C51462 +
                     ((C47444 + C47445 + C47446) * C118 +
                      (C47447 + C47448 + C47449) * C51248) *
                         C51163 * C51356) *
                        C622 -
                    (((C47754 + C47755 + C47756) * C51248 +
                      (C47757 + C47758 + C47759) * C118) *
                         C51163 * C51356 +
                     ((C47449 + C47448 + C47447) * C51248 +
                      (C47446 + C47445 + C47444) * C118) *
                         C51163 * C51462) *
                        C623 +
                    (((C47759 + C47758 + C47757) * C118 +
                      (C47756 + C47755 + C47754) * C51248) *
                         C51163 * C51462 +
                     ((C44474 * C745 + C51497 * C753 + C44475 * C3237 +
                       C51498 * C3241 + C44476 * C3630 + C44473 * C3632) *
                          C118 +
                      (C44474 * C752 + C51497 * C757 + C44475 * C3242 +
                       C51498 * C3249 + C44476 * C3633 + C44473 * C3636) *
                          C51248) *
                         C51163 * C51356) *
                        C624) *
                       C51439 +
                   ((((C44707 + C44706 + C44705) * C118 +
                      (C44704 + C44703 + C44702) * C51248) *
                         C51163 * C51462 +
                     ((C45054 + C45055 + C45056) * C118 +
                      (C45057 + C45058 + C45059) * C51248) *
                         C51163 * C51356) *
                        C623 -
                    (((C44702 + C44703 + C44704) * C51248 +
                      (C44705 + C44706 + C44707) * C118) *
                         C51163 * C51356 +
                     ((C44519 + C44518 + C44517) * C51248 +
                      (C44516 + C44515 + C44514) * C118) *
                         C51163 * C51462) *
                        C622 -
                    (((C44476 * C3635 + C44473 * C3637 + C44475 * C3244 +
                       C51498 * C3250 + C44474 * C750 + C51497 * C756) *
                          C51248 +
                      (C44476 * C3631 + C44473 * C3634 + C44475 * C3238 +
                       C51498 * C3243 + C44474 * C744 + C51497 * C751) *
                          C118) *
                         C51163 * C51356 +
                     ((C45059 + C45058 + C45057) * C51248 +
                      (C45056 + C45055 + C45054) * C118) *
                         C51163 * C51462) *
                        C624) *
                       C51191)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51497 * C126 + C44475 * C454 +
                      C51498 * C460 + C44476 * C992 + C44473 * C997) *
                         C118 +
                     (C44474 * C127 + C51497 * C140 + C44475 * C461 +
                      C51498 * C472 + C44476 * C998 + C44473 * C1007) *
                         C51248) *
                        C51163 * C51462 +
                    ((C44474 * C297 + C51497 * C307 + C44475 * C856 +
                      C51498 * C864 + C44476 * C1146 + C44473 * C1150) *
                         C118 +
                     (C44474 * C306 + C51497 * C315 + C44475 * C865 +
                      C51498 * C880 + C44476 * C1151 + C44473 * C1158) *
                         C51248) *
                        C51163 * C51356) *
                       C51218 * C113 -
                   (((C44702 + C44703 + C44704) * C51248 +
                     (C44705 + C44706 + C44707) * C118) *
                        C51163 * C51356 +
                    ((C44519 + C44518 + C44517) * C51248 +
                     (C44516 + C44515 + C44514) * C118) *
                        C51163 * C51462) *
                       C51218 * C114 +
                   (((C44525 + C44524 + C44523) * C118 +
                     (C44522 + C44521 + C44520) * C51248) *
                        C51163 * C51462 +
                    ((C44708 + C44709 + C44710) * C118 +
                     (C44711 + C44712 + C44713) * C51248) *
                        C51163 * C51356) *
                       C51218 * C115 -
                   (((C44476 * C1157 + C44473 * C1161 + C44475 * C871 +
                      C51498 * C883 + C44474 * C300 + C51497 * C312) *
                         C51248 +
                     (C44476 * C1149 + C44473 * C1156 + C44475 * C859 +
                      C51498 * C870 + C44474 * C294 + C51497 * C301) *
                         C118) *
                        C51163 * C51356 +
                    ((C44531 + C44530 + C44529) * C51248 +
                     (C44528 + C44527 + C44526) * C118) *
                        C51163 * C51462) *
                       C51218 * C116)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51497 * C126 + C44475 * C454 +
                      C51498 * C460 + C44476 * C992 + C44473 * C997) *
                         C989 +
                     (C44474 * C127 + C51497 * C140 + C44475 * C461 +
                      C51498 * C472 + C44476 * C998 + C44473 * C1007) *
                         C986 -
                     (C44476 * C1236 + C44473 * C1240 + C44475 * C992 +
                      C51498 * C997 + C44474 * C454 + C51497 * C460) *
                         C990 -
                     (C44476 * C1241 + C44473 * C1248 + C44475 * C998 +
                      C51498 * C1007 + C44474 * C461 + C51497 * C472) *
                         C987 +
                     (C44474 * C992 + C51497 * C997 + C44475 * C1236 +
                      C51498 * C1240 + C44476 * C6389 + C44473 * C6392) *
                         C991 +
                     (C44474 * C998 + C51497 * C1007 + C44475 * C1241 +
                      C51498 * C1248 + C44476 * C6393 + C44473 * C6398) *
                         C988) *
                        C51163 * C51462 +
                    ((C47444 + C47445 + C47446) * C989 +
                     (C47447 + C47448 + C47449) * C986 -
                     (C48046 + C48047 + C48048) * C990 -
                     (C48049 + C48050 + C48051) * C987 +
                     (C44474 * C1146 + C51497 * C1150 + C44475 * C3760 +
                      C51498 * C3764 + C44476 * C6565 + C44473 * C6567) *
                         C991 +
                     (C44474 * C1151 + C51497 * C1158 + C44475 * C3765 +
                      C51498 * C3772 + C44476 * C6568 + C44473 * C6571) *
                         C988) *
                        C51163 * C51356) *
                       C51218 * C51439 +
                   (((C44886 + C44885 + C44884) * C990 -
                     ((C44519 + C44518 + C44517) * C986 +
                      (C44516 + C44515 + C44514) * C989) +
                     (C44889 + C44888 + C44887) * C987 -
                     (C45464 + C45463 + C45462) * C991 -
                     (C45467 + C45466 + C45465) * C988) *
                        C51163 * C51462 +
                    ((C46210 + C46211 + C46212) * C990 -
                     ((C44702 + C44703 + C44704) * C986 +
                      (C44705 + C44706 + C44707) * C989) +
                     (C46213 + C46214 + C46215) * C987 -
                     (C44476 * C6566 + C44473 * C6569 + C44475 * C3761 +
                      C51498 * C3766 + C44474 * C1147 + C51497 * C1152) *
                         C991 -
                     (C44476 * C6570 + C44473 * C6572 + C44475 * C3767 +
                      C51498 * C3773 + C44474 * C1153 + C51497 * C1159) *
                         C988) *
                        C51163 * C51356) *
                       C51218 * C51191)) /
                     (p * q * std::sqrt(p + q));
    d2ee[172] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51497 * C126 + C44475 * C454 +
                      C51498 * C460 + C44476 * C992 + C44473 * C997) *
                         C118 +
                     (C44474 * C127 + C51497 * C140 + C44475 * C461 +
                      C51498 * C472 + C44476 * C998 + C44473 * C1007) *
                         C51248) *
                        C51163 * C51462 +
                    ((C47444 + C47445 + C47446) * C118 +
                     (C47447 + C47448 + C47449) * C51248) *
                        C51163 * C51356) *
                       C737 -
                   (((C47754 + C47755 + C47756) * C51248 +
                     (C47757 + C47758 + C47759) * C118) *
                        C51163 * C51356 +
                    ((C47449 + C47448 + C47447) * C51248 +
                     (C47446 + C47445 + C47444) * C118) *
                        C51163 * C51462) *
                       C738 +
                   (((C47759 + C47758 + C47757) * C118 +
                     (C47756 + C47755 + C47754) * C51248) *
                        C51163 * C51462 +
                    ((C47870 + C47871 + C47872) * C118 +
                     (C47873 + C47874 + C47875) * C51248) *
                        C51163 * C51356) *
                       C739 -
                   (((C44476 * C20734 + C44473 * C20735 + C44475 * C3246 +
                      C51498 * C3251 + C44474 * C2940 + C51497 * C2945) *
                         C51248 +
                     (C44476 * C20732 + C44473 * C20733 + C44475 * C3239 +
                      C51498 * C3245 + C44474 * C2936 + C51497 * C2939) *
                         C118) *
                        C51163 * C51356 +
                    ((C47875 + C47874 + C47873) * C51248 +
                     (C47872 + C47871 + C47870) * C118) *
                        C51163 * C51462) *
                       C740) *
                  C51186) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C44474 * C119 + C51497 * C126 + C44475 * C454 +
                       C51498 * C460 + C44476 * C992 + C44473 * C997) *
                          C118 +
                      (C44474 * C127 + C51497 * C140 + C44475 * C461 +
                       C51498 * C472 + C44476 * C998 + C44473 * C1007) *
                          C51248) *
                         C51163 * C51462 +
                     ((C47444 + C47445 + C47446) * C118 +
                      (C47447 + C47448 + C47449) * C51248) *
                         C51163 * C51356) *
                        C51446 -
                    (((C44476 * C3452 + C44473 * C3457 + C44475 * C873 +
                       C51498 * C884 + C44474 * C633 + C51497 * C642) *
                          C51248 +
                      (C44476 * C3448 + C44473 * C3451 + C44475 * C860 +
                       C51498 * C872 + C44474 * C627 + C51497 * C632) *
                          C118) *
                         C51163 * C51356 +
                     ((C47449 + C47448 + C47447) * C51248 +
                      (C47446 + C47445 + C47444) * C118) *
                         C51163 * C51462) *
                        C51234) *
                       C291 +
                   ((((C44707 + C44706 + C44705) * C118 +
                      (C44704 + C44703 + C44702) * C51248) *
                         C51163 * C51462 +
                     ((C45054 + C45055 + C45056) * C118 +
                      (C45057 + C45058 + C45059) * C51248) *
                         C51163 * C51356) *
                        C51234 -
                    (((C44702 + C44703 + C44704) * C51248 +
                      (C44705 + C44706 + C44707) * C118) *
                         C51163 * C51356 +
                     ((C44519 + C44518 + C44517) * C51248 +
                      (C44516 + C44515 + C44514) * C118) *
                         C51163 * C51462) *
                        C51446) *
                       C292 +
                   ((((C44525 + C44524 + C44523) * C118 +
                      (C44522 + C44521 + C44520) * C51248) *
                         C51163 * C51462 +
                     ((C44708 + C44709 + C44710) * C118 +
                      (C44711 + C44712 + C44713) * C51248) *
                         C51163 * C51356) *
                        C51446 -
                    (((C44476 * C3456 + C44473 * C3459 + C44475 * C877 +
                       C51498 * C886 + C44474 * C637 + C51497 * C644) *
                          C51248 +
                      (C44476 * C3450 + C44473 * C3455 + C44475 * C862 +
                       C51498 * C876 + C44474 * C629 + C51497 * C636) *
                          C118) *
                         C51163 * C51356 +
                     ((C44713 + C44712 + C44711) * C51248 +
                      (C44710 + C44709 + C44708) * C118) *
                         C51163 * C51462) *
                        C51234) *
                       C293)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51497 * C126 + C44475 * C454 +
                      C51498 * C460 + C44476 * C992 + C44473 * C997) *
                         C989 +
                     (C44474 * C127 + C51497 * C140 + C44475 * C461 +
                      C51498 * C472 + C44476 * C998 + C44473 * C1007) *
                         C986 -
                     (C44476 * C1236 + C44473 * C1240 + C44475 * C992 +
                      C51498 * C997 + C44474 * C454 + C51497 * C460) *
                         C990 -
                     (C44476 * C1241 + C44473 * C1248 + C44475 * C998 +
                      C51498 * C1007 + C44474 * C461 + C51497 * C472) *
                         C987 +
                     (C44474 * C992 + C51497 * C997 + C44475 * C1236 +
                      C51498 * C1240 + C44476 * C6389 + C44473 * C6392) *
                         C991 +
                     (C44474 * C998 + C51497 * C1007 + C44475 * C1241 +
                      C51498 * C1248 + C44476 * C6393 + C44473 * C6398) *
                         C988) *
                        C51163 * C51462 +
                    ((C47444 + C47445 + C47446) * C989 +
                     (C47447 + C47448 + C47449) * C986 -
                     (C48046 + C48047 + C48048) * C990 -
                     (C48049 + C48050 + C48051) * C987 +
                     (C48362 + C48363 + C48364) * C991 +
                     (C48365 + C48366 + C48367) * C988) *
                        C51163 * C51356) *
                       C51446 +
                   (((C48048 + C48047 + C48046) * C990 -
                     ((C47449 + C47448 + C47447) * C986 +
                      (C47446 + C47445 + C47444) * C989) +
                     (C48051 + C48050 + C48049) * C987 -
                     (C48364 + C48363 + C48362) * C991 -
                     (C48367 + C48366 + C48365) * C988) *
                        C51163 * C51462 +
                    ((C48052 + C48053 + C48054) * C990 -
                     ((C47754 + C47755 + C47756) * C986 +
                      (C47757 + C47758 + C47759) * C989) +
                     (C48055 + C48056 + C48057) * C987 -
                     (C44476 * C22973 + C44473 * C22974 + C44475 * C3762 +
                      C51498 * C3768 + C44474 * C3448 + C51497 * C3451) *
                         C991 -
                     (C44476 * C22975 + C44473 * C22976 + C44475 * C3769 +
                      C51498 * C3774 + C44474 * C3452 + C51497 * C3457) *
                         C988) *
                        C51163 * C51356) *
                       C51234) *
                  C51186) /
                     (p * q * std::sqrt(p + q));
    d2ee[173] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51497 * C126 + C44475 * C454 +
                      C51498 * C460 + C44476 * C992 + C44473 * C997) *
                         C452 +
                     (C44474 * C127 + C51497 * C140 + C44475 * C461 +
                      C51498 * C472 + C44476 * C998 + C44473 * C1007) *
                         C51448 -
                     (C44476 * C1236 + C44473 * C1240 + C44475 * C992 +
                      C51498 * C997 + C44474 * C454 + C51497 * C460) *
                         C453 -
                     (C44476 * C1241 + C44473 * C1248 + C44475 * C998 +
                      C51498 * C1007 + C44474 * C461 + C51497 * C472) *
                         C51260) *
                        C51163 * C51462 +
                    ((C47444 + C47445 + C47446) * C452 +
                     (C47447 + C47448 + C47449) * C51448 -
                     (C48046 + C48047 + C48048) * C453 -
                     (C48049 + C48050 + C48051) * C51260) *
                        C51163 * C51356) *
                       C622 +
                   (((C48048 + C48047 + C48046) * C453 -
                     ((C47449 + C47448 + C47447) * C51448 +
                      (C47446 + C47445 + C47444) * C452) +
                     (C48051 + C48050 + C48049) * C51260) *
                        C51163 * C51462 +
                    ((C48052 + C48053 + C48054) * C453 -
                     ((C47754 + C47755 + C47756) * C51448 +
                      (C47757 + C47758 + C47759) * C452) +
                     (C48055 + C48056 + C48057) * C51260) *
                        C51163 * C51356) *
                       C623 +
                   (((C47759 + C47758 + C47757) * C452 +
                     (C47756 + C47755 + C47754) * C51448 -
                     (C48054 + C48053 + C48052) * C453 -
                     (C48057 + C48056 + C48055) * C51260) *
                        C51163 * C51462 +
                    ((C47870 + C47871 + C47872) * C452 +
                     (C47873 + C47874 + C47875) * C51448 -
                     (C44476 * C20814 + C44473 * C20815 + C44475 * C3630 +
                      C51498 * C3632 + C44474 * C3237 + C51497 * C3241) *
                         C453 -
                     (C44476 * C20816 + C44473 * C20817 + C44475 * C3633 +
                      C51498 * C3636 + C44474 * C3242 + C51497 * C3249) *
                         C51260) *
                        C51163 * C51356) *
                       C624) *
                  C51186) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51497 * C126 + C44475 * C454 +
                      C51498 * C460 + C44476 * C992 + C44473 * C997) *
                         C452 +
                     (C44474 * C127 + C51497 * C140 + C44475 * C461 +
                      C51498 * C472 + C44476 * C998 + C44473 * C1007) *
                         C51448 -
                     (C44476 * C1236 + C44473 * C1240 + C44475 * C992 +
                      C51498 * C997 + C44474 * C454 + C51497 * C460) *
                         C453 -
                     (C44476 * C1241 + C44473 * C1248 + C44475 * C998 +
                      C51498 * C1007 + C44474 * C461 + C51497 * C472) *
                         C51260) *
                        C51163 * C51462 +
                    ((C47444 + C47445 + C47446) * C452 +
                     (C47447 + C47448 + C47449) * C51448 -
                     (C44476 * C3760 + C44473 * C3764 + C44475 * C1146 +
                      C51498 * C1150 + C44474 * C856 + C51497 * C864) *
                         C453 -
                     (C44476 * C3765 + C44473 * C3772 + C44475 * C1151 +
                      C51498 * C1158 + C44474 * C865 + C51497 * C880) *
                         C51260) *
                        C51163 * C51356) *
                       C51218 * C291 +
                   (((C44886 + C44885 + C44884) * C453 -
                     ((C44519 + C44518 + C44517) * C51448 +
                      (C44516 + C44515 + C44514) * C452) +
                     (C44889 + C44888 + C44887) * C51260) *
                        C51163 * C51462 +
                    ((C46210 + C46211 + C46212) * C453 -
                     ((C44702 + C44703 + C44704) * C51448 +
                      (C44705 + C44706 + C44707) * C452) +
                     (C46213 + C46214 + C46215) * C51260) *
                        C51163 * C51356) *
                       C51218 * C292 +
                   (((C44525 + C44524 + C44523) * C452 +
                     (C44522 + C44521 + C44520) * C51448 -
                     (C44892 + C44891 + C44890) * C453 -
                     (C44895 + C44894 + C44893) * C51260) *
                        C51163 * C51462 +
                    ((C44708 + C44709 + C44710) * C452 +
                     (C44711 + C44712 + C44713) * C51448 -
                     (C44476 * C7165 + C44473 * C7166 + C44475 * C1148 +
                      C51498 * C1154 + C44474 * C858 + C51497 * C868) *
                         C453 -
                     (C44476 * C7167 + C44473 * C7168 + C44475 * C1155 +
                      C51498 * C1160 + C44474 * C869 + C51497 * C882) *
                         C51260) *
                        C51163 * C51356) *
                       C51218 * C293)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((C44474 * C119 + C51497 * C126 + C44475 * C454 +
                     C51498 * C460 + C44476 * C992 + C44473 * C997) *
                        C1232 +
                    (C44474 * C127 + C51497 * C140 + C44475 * C461 +
                     C51498 * C472 + C44476 * C998 + C44473 * C1007) *
                        C1228 -
                    (C44476 * C1236 + C44473 * C1240 + C44475 * C992 +
                     C51498 * C997 + C44474 * C454 + C51497 * C460) *
                        C1233 -
                    (C44476 * C1241 + C44473 * C1248 + C44475 * C998 +
                     C51498 * C1007 + C44474 * C461 + C51497 * C472) *
                        C1229 +
                    (C44474 * C992 + C51497 * C997 + C44475 * C1236 +
                     C51498 * C1240 + C44476 * C6389 + C44473 * C6392) *
                        C1234 +
                    (C44474 * C998 + C51497 * C1007 + C44475 * C1241 +
                     C51498 * C1248 + C44476 * C6393 + C44473 * C6398) *
                        C1230 -
                    (C44476 * C6671 + C44473 * C6673 + C44475 * C6389 +
                     C51498 * C6392 + C44474 * C1236 + C51497 * C1240) *
                        C1235 -
                    (C44476 * C6674 + C44473 * C6677 + C44475 * C6393 +
                     C51498 * C6398 + C44474 * C1241 + C51497 * C1248) *
                        C1231) *
                       C51163 * C51462 +
                   ((C47444 + C47445 + C47446) * C1232 +
                    (C47447 + C47448 + C47449) * C1228 -
                    (C48046 + C48047 + C48048) * C1233 -
                    (C48049 + C48050 + C48051) * C1229 +
                    (C48362 + C48363 + C48364) * C1234 +
                    (C48365 + C48366 + C48367) * C1230 -
                    (C44476 * C23093 + C44473 * C23094 + C44475 * C6565 +
                     C51498 * C6567 + C44474 * C3760 + C51497 * C3764) *
                        C1235 -
                    (C44476 * C23095 + C44473 * C23096 + C44475 * C6568 +
                     C51498 * C6571 + C44474 * C3765 + C51497 * C3772) *
                        C1231) *
                       C51163 * C51356) *
                  C51218 * C51186) /
                     (p * q * std::sqrt(p + q));
    d2ee[174] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51497 * C126 + C44475 * C454 +
                      C51498 * C460 + C44476 * C992 + C44473 * C997) *
                         C1722 +
                     (C44474 * C127 + C51497 * C140 + C44475 * C461 +
                      C51498 * C472 + C44476 * C998 + C44473 * C1007) *
                         C1720 -
                     (C44476 * C1236 + C44473 * C1240 + C44475 * C992 +
                      C51498 * C997 + C44474 * C454 + C51497 * C460) *
                         C1723 -
                     (C44476 * C1241 + C44473 * C1248 + C44475 * C998 +
                      C51498 * C1007 + C44474 * C461 + C51497 * C472) *
                         C51260) *
                        C51163 * C51462 +
                    ((C47444 + C47445 + C47446) * C1722 +
                     (C47447 + C47448 + C47449) * C1720 -
                     (C48046 + C48047 + C48048) * C1723 -
                     (C48049 + C48050 + C48051) * C51260) *
                        C51163 * C51356) *
                       C51218 * C51492 +
                   (((C44886 + C44885 + C44884) * C1723 -
                     ((C44519 + C44518 + C44517) * C1720 +
                      (C44516 + C44515 + C44514) * C1722) +
                     (C44889 + C44888 + C44887) * C51260) *
                        C51163 * C51462 +
                    ((C46210 + C46211 + C46212) * C1723 -
                     ((C44702 + C44703 + C44704) * C1720 +
                      (C44705 + C44706 + C44707) * C1722) +
                     (C46213 + C46214 + C46215) * C51260) *
                        C51163 * C51356) *
                       C51218 * C51477 +
                   (((C44525 + C44524 + C44523) * C1722 +
                     (C44522 + C44521 + C44520) * C1720 -
                     (C44892 + C44891 + C44890) * C1723 -
                     (C44895 + C44894 + C44893) * C51260) *
                        C51163 * C51462 +
                    ((C44708 + C44709 + C44710) * C1722 +
                     (C44711 + C44712 + C44713) * C1720 -
                     (C44476 * C7165 + C44473 * C7166 + C44475 * C1148 +
                      C51498 * C1154 + C44474 * C858 + C51497 * C868) *
                         C1723 -
                     (C44476 * C7167 + C44473 * C7168 + C44475 * C1155 +
                      C51498 * C1160 + C44474 * C869 + C51497 * C882) *
                         C51260) *
                        C51163 * C51356) *
                       C51218 * C1354)) /
                 (p * q * std::sqrt(p + q));
    d2ee[175] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C44474 * C119 + C51497 * C126 + C44475 * C454 +
                       C51498 * C460 + C44476 * C992 + C44473 * C997) *
                          C1722 +
                      (C44474 * C127 + C51497 * C140 + C44475 * C461 +
                       C51498 * C472 + C44476 * C998 + C44473 * C1007) *
                          C1720 -
                      (C44476 * C1236 + C44473 * C1240 + C44475 * C992 +
                       C51498 * C997 + C44474 * C454 + C51497 * C460) *
                          C1723 -
                      (C44476 * C1241 + C44473 * C1248 + C44475 * C998 +
                       C51498 * C1007 + C44474 * C461 + C51497 * C472) *
                          C51260) *
                         C51163 * C51462 +
                     ((C47444 + C47445 + C47446) * C1722 +
                      (C47447 + C47448 + C47449) * C1720 -
                      (C48046 + C48047 + C48048) * C1723 -
                      (C48049 + C48050 + C48051) * C51260) *
                         C51163 * C51356) *
                        C51446 +
                    (((C48048 + C48047 + C48046) * C1723 -
                      ((C47449 + C47448 + C47447) * C1720 +
                       (C47446 + C47445 + C47444) * C1722) +
                      (C48051 + C48050 + C48049) * C51260) *
                         C51163 * C51462 +
                     ((C48052 + C48053 + C48054) * C1723 -
                      ((C47754 + C47755 + C47756) * C1720 +
                       (C47757 + C47758 + C47759) * C1722) +
                      (C48055 + C48056 + C48057) * C51260) *
                         C51163 * C51356) *
                        C51234) *
                       C1456 +
                   ((((C44886 + C44885 + C44884) * C1723 -
                      ((C44519 + C44518 + C44517) * C1720 +
                       (C44516 + C44515 + C44514) * C1722) +
                      (C44889 + C44888 + C44887) * C51260) *
                         C51163 * C51462 +
                     ((C46210 + C46211 + C46212) * C1723 -
                      ((C44702 + C44703 + C44704) * C1720 +
                       (C44705 + C44706 + C44707) * C1722) +
                      (C46213 + C46214 + C46215) * C51260) *
                         C51163 * C51356) *
                        C51446 +
                    (((C44707 + C44706 + C44705) * C1722 +
                      (C44704 + C44703 + C44702) * C1720 -
                      (C46212 + C46211 + C46210) * C1723 -
                      (C46215 + C46214 + C46213) * C51260) *
                         C51163 * C51462 +
                     ((C45054 + C45055 + C45056) * C1722 +
                      (C45057 + C45058 + C45059) * C1720 -
                      (C44476 * C3763 + C44473 * C3770 + C44475 * C3449 +
                       C51498 * C3453 + C44474 * C861 + C51497 * C874) *
                          C1723 -
                      (C44476 * C3771 + C44473 * C3775 + C44475 * C3454 +
                       C51498 * C3458 + C44474 * C875 + C51497 * C885) *
                          C51260) *
                         C51163 * C51356) *
                        C51234) *
                       C51191)) /
                 (p * q * std::sqrt(p + q));
    d2ee[176] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51497 * C126 + C44475 * C454 +
                      C51498 * C460 + C44476 * C992 + C44473 * C997) *
                         C1989 +
                     (C44474 * C127 + C51497 * C140 + C44475 * C461 +
                      C51498 * C472 + C44476 * C998 + C44473 * C1007) *
                         C51494 -
                     (C44476 * C1236 + C44473 * C1240 + C44475 * C992 +
                      C51498 * C997 + C44474 * C454 + C51497 * C460) *
                         C1990 -
                     (C44476 * C1241 + C44473 * C1248 + C44475 * C998 +
                      C51498 * C1007 + C44474 * C461 + C51497 * C472) *
                         C51483 +
                     (C44474 * C992 + C51497 * C997 + C44475 * C1236 +
                      C51498 * C1240 + C44476 * C6389 + C44473 * C6392) *
                         C1991 +
                     (C44474 * C998 + C51497 * C1007 + C44475 * C1241 +
                      C51498 * C1248 + C44476 * C6393 + C44473 * C6398) *
                         C1988) *
                        C51163 * C51462 +
                    ((C47444 + C47445 + C47446) * C1989 +
                     (C47447 + C47448 + C47449) * C51494 -
                     (C48046 + C48047 + C48048) * C1990 -
                     (C48049 + C48050 + C48051) * C51483 +
                     (C48362 + C48363 + C48364) * C1991 +
                     (C48365 + C48366 + C48367) * C1988) *
                        C51163 * C51356) *
                       C51218 * C1456 +
                   (((C44886 + C44885 + C44884) * C1990 -
                     ((C44519 + C44518 + C44517) * C51494 +
                      (C44516 + C44515 + C44514) * C1989) +
                     (C44889 + C44888 + C44887) * C51483 -
                     (C45464 + C45463 + C45462) * C1991 -
                     (C45467 + C45466 + C45465) * C1988) *
                        C51163 * C51462 +
                    ((C46210 + C46211 + C46212) * C1990 -
                     ((C44702 + C44703 + C44704) * C51494 +
                      (C44705 + C44706 + C44707) * C1989) +
                     (C46213 + C46214 + C46215) * C51483 -
                     (C44476 * C6566 + C44473 * C6569 + C44475 * C3761 +
                      C51498 * C3766 + C44474 * C1147 + C51497 * C1152) *
                         C1991 -
                     (C44476 * C6570 + C44473 * C6572 + C44475 * C3767 +
                      C51498 * C3773 + C44474 * C1153 + C51497 * C1159) *
                         C1988) *
                        C51163 * C51356) *
                       C51218 * C51191)) /
                 (p * q * std::sqrt(p + q));
    d2ee[177] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51497 * C126 + C44475 * C454 +
                      C51498 * C460 + C44476 * C992 + C44473 * C997) *
                         C118 +
                     (C44474 * C127 + C51497 * C140 + C44475 * C461 +
                      C51498 * C472 + C44476 * C998 + C44473 * C1007) *
                         C51248) *
                        C51163 * C51462 +
                    ((C44474 * C297 + C51497 * C307 + C44475 * C856 +
                      C51498 * C864 + C44476 * C1146 + C44473 * C1150) *
                         C118 +
                     (C44474 * C306 + C51497 * C315 + C44475 * C865 +
                      C51498 * C880 + C44476 * C1151 + C44473 * C1158) *
                         C51248) *
                        C51163 * C51356) *
                       C51218 * C113 -
                   (((C44702 + C44703 + C44704) * C51248 +
                     (C44705 + C44706 + C44707) * C118) *
                        C51163 * C51356 +
                    ((C44519 + C44518 + C44517) * C51248 +
                     (C44516 + C44515 + C44514) * C118) *
                        C51163 * C51462) *
                       C51218 * C114 +
                   (((C44525 + C44524 + C44523) * C118 +
                     (C44522 + C44521 + C44520) * C51248) *
                        C51163 * C51462 +
                    ((C44708 + C44709 + C44710) * C118 +
                     (C44711 + C44712 + C44713) * C51248) *
                        C51163 * C51356) *
                       C51218 * C115 -
                   (((C44476 * C1157 + C44473 * C1161 + C44475 * C871 +
                      C51498 * C883 + C44474 * C300 + C51497 * C312) *
                         C51248 +
                     (C44476 * C1149 + C44473 * C1156 + C44475 * C859 +
                      C51498 * C870 + C44474 * C294 + C51497 * C301) *
                         C118) *
                        C51163 * C51356 +
                    ((C44531 + C44530 + C44529) * C51248 +
                     (C44528 + C44527 + C44526) * C118) *
                        C51163 * C51462) *
                       C51218 * C116)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C44474 * C119 + C51497 * C126 + C44475 * C454 +
                       C51498 * C460 + C44476 * C992 + C44473 * C997) *
                          C118 +
                      (C44474 * C127 + C51497 * C140 + C44475 * C461 +
                       C51498 * C472 + C44476 * C998 + C44473 * C1007) *
                          C51248) *
                         C51163 * C51462 +
                     ((C47444 + C47445 + C47446) * C118 +
                      (C47447 + C47448 + C47449) * C51248) *
                         C51163 * C51356) *
                        C622 -
                    (((C47754 + C47755 + C47756) * C51248 +
                      (C47757 + C47758 + C47759) * C118) *
                         C51163 * C51356 +
                     ((C47449 + C47448 + C47447) * C51248 +
                      (C47446 + C47445 + C47444) * C118) *
                         C51163 * C51462) *
                        C623 +
                    (((C47759 + C47758 + C47757) * C118 +
                      (C47756 + C47755 + C47754) * C51248) *
                         C51163 * C51462 +
                     ((C44474 * C745 + C51497 * C753 + C44475 * C3237 +
                       C51498 * C3241 + C44476 * C3630 + C44473 * C3632) *
                          C118 +
                      (C44474 * C752 + C51497 * C757 + C44475 * C3242 +
                       C51498 * C3249 + C44476 * C3633 + C44473 * C3636) *
                          C51248) *
                         C51163 * C51356) *
                        C624) *
                       C51439 +
                   ((((C44707 + C44706 + C44705) * C118 +
                      (C44704 + C44703 + C44702) * C51248) *
                         C51163 * C51462 +
                     ((C45054 + C45055 + C45056) * C118 +
                      (C45057 + C45058 + C45059) * C51248) *
                         C51163 * C51356) *
                        C623 -
                    (((C44702 + C44703 + C44704) * C51248 +
                      (C44705 + C44706 + C44707) * C118) *
                         C51163 * C51356 +
                     ((C44519 + C44518 + C44517) * C51248 +
                      (C44516 + C44515 + C44514) * C118) *
                         C51163 * C51462) *
                        C622 -
                    (((C44476 * C3635 + C44473 * C3637 + C44475 * C3244 +
                       C51498 * C3250 + C44474 * C750 + C51497 * C756) *
                          C51248 +
                      (C44476 * C3631 + C44473 * C3634 + C44475 * C3238 +
                       C51498 * C3243 + C44474 * C744 + C51497 * C751) *
                          C118) *
                         C51163 * C51356 +
                     ((C45059 + C45058 + C45057) * C51248 +
                      (C45056 + C45055 + C45054) * C118) *
                         C51163 * C51462) *
                        C624) *
                       C51191)) /
                     (p * q * std::sqrt(p + q));
    d2ee[178] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C44474 * C119 + C51497 * C126 + C44475 * C454 +
                       C51498 * C460 + C44476 * C992 + C44473 * C997) *
                          C118 +
                      (C44474 * C127 + C51497 * C140 + C44475 * C461 +
                       C51498 * C472 + C44476 * C998 + C44473 * C1007) *
                          C51248) *
                         C51163 * C51462 +
                     ((C47444 + C47445 + C47446) * C118 +
                      (C47447 + C47448 + C47449) * C51248) *
                         C51163 * C51356) *
                        C51446 -
                    (((C44476 * C3452 + C44473 * C3457 + C44475 * C873 +
                       C51498 * C884 + C44474 * C633 + C51497 * C642) *
                          C51248 +
                      (C44476 * C3448 + C44473 * C3451 + C44475 * C860 +
                       C51498 * C872 + C44474 * C627 + C51497 * C632) *
                          C118) *
                         C51163 * C51356 +
                     ((C47449 + C47448 + C47447) * C51248 +
                      (C47446 + C47445 + C47444) * C118) *
                         C51163 * C51462) *
                        C51234) *
                       C291 +
                   ((((C44707 + C44706 + C44705) * C118 +
                      (C44704 + C44703 + C44702) * C51248) *
                         C51163 * C51462 +
                     ((C45054 + C45055 + C45056) * C118 +
                      (C45057 + C45058 + C45059) * C51248) *
                         C51163 * C51356) *
                        C51234 -
                    (((C44702 + C44703 + C44704) * C51248 +
                      (C44705 + C44706 + C44707) * C118) *
                         C51163 * C51356 +
                     ((C44519 + C44518 + C44517) * C51248 +
                      (C44516 + C44515 + C44514) * C118) *
                         C51163 * C51462) *
                        C51446) *
                       C292 +
                   ((((C44525 + C44524 + C44523) * C118 +
                      (C44522 + C44521 + C44520) * C51248) *
                         C51163 * C51462 +
                     ((C44708 + C44709 + C44710) * C118 +
                      (C44711 + C44712 + C44713) * C51248) *
                         C51163 * C51356) *
                        C51446 -
                    (((C44476 * C3456 + C44473 * C3459 + C44475 * C877 +
                       C51498 * C886 + C44474 * C637 + C51497 * C644) *
                          C51248 +
                      (C44476 * C3450 + C44473 * C3455 + C44475 * C862 +
                       C51498 * C876 + C44474 * C629 + C51497 * C636) *
                          C118) *
                         C51163 * C51356 +
                     ((C44713 + C44712 + C44711) * C51248 +
                      (C44710 + C44709 + C44708) * C118) *
                         C51163 * C51462) *
                        C51234) *
                       C293)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51497 * C126 + C44475 * C454 +
                      C51498 * C460 + C44476 * C992 + C44473 * C997) *
                         C118 +
                     (C44474 * C127 + C51497 * C140 + C44475 * C461 +
                      C51498 * C472 + C44476 * C998 + C44473 * C1007) *
                         C51248) *
                        C51163 * C51462 +
                    ((C47444 + C47445 + C47446) * C118 +
                     (C47447 + C47448 + C47449) * C51248) *
                        C51163 * C51356) *
                       C737 -
                   (((C47754 + C47755 + C47756) * C51248 +
                     (C47757 + C47758 + C47759) * C118) *
                        C51163 * C51356 +
                    ((C47449 + C47448 + C47447) * C51248 +
                     (C47446 + C47445 + C47444) * C118) *
                        C51163 * C51462) *
                       C738 +
                   (((C47759 + C47758 + C47757) * C118 +
                     (C47756 + C47755 + C47754) * C51248) *
                        C51163 * C51462 +
                    ((C47870 + C47871 + C47872) * C118 +
                     (C47873 + C47874 + C47875) * C51248) *
                        C51163 * C51356) *
                       C739 -
                   (((C44476 * C20734 + C44473 * C20735 + C44475 * C3246 +
                      C51498 * C3251 + C44474 * C2940 + C51497 * C2945) *
                         C51248 +
                     (C44476 * C20732 + C44473 * C20733 + C44475 * C3239 +
                      C51498 * C3245 + C44474 * C2936 + C51497 * C2939) *
                         C118) *
                        C51163 * C51356 +
                    ((C47875 + C47874 + C47873) * C51248 +
                     (C47872 + C47871 + C47870) * C118) *
                        C51163 * C51462) *
                       C740) *
                  C51186) /
                     (p * q * std::sqrt(p + q));
    d2ee[179] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51497 * C126 + C44475 * C454 +
                      C51498 * C460 + C44476 * C992 + C44473 * C997) *
                         C452 +
                     (C44474 * C127 + C51497 * C140 + C44475 * C461 +
                      C51498 * C472 + C44476 * C998 + C44473 * C1007) *
                         C51448 -
                     (C44476 * C1236 + C44473 * C1240 + C44475 * C992 +
                      C51498 * C997 + C44474 * C454 + C51497 * C460) *
                         C453 -
                     (C44476 * C1241 + C44473 * C1248 + C44475 * C998 +
                      C51498 * C1007 + C44474 * C461 + C51497 * C472) *
                         C51260) *
                        C51163 * C51462 +
                    ((C47444 + C47445 + C47446) * C452 +
                     (C47447 + C47448 + C47449) * C51448 -
                     (C44476 * C3760 + C44473 * C3764 + C44475 * C1146 +
                      C51498 * C1150 + C44474 * C856 + C51497 * C864) *
                         C453 -
                     (C44476 * C3765 + C44473 * C3772 + C44475 * C1151 +
                      C51498 * C1158 + C44474 * C865 + C51497 * C880) *
                         C51260) *
                        C51163 * C51356) *
                       C51218 * C291 +
                   (((C44886 + C44885 + C44884) * C453 -
                     ((C44519 + C44518 + C44517) * C51448 +
                      (C44516 + C44515 + C44514) * C452) +
                     (C44889 + C44888 + C44887) * C51260) *
                        C51163 * C51462 +
                    ((C46210 + C46211 + C46212) * C453 -
                     ((C44702 + C44703 + C44704) * C51448 +
                      (C44705 + C44706 + C44707) * C452) +
                     (C46213 + C46214 + C46215) * C51260) *
                        C51163 * C51356) *
                       C51218 * C292 +
                   (((C44525 + C44524 + C44523) * C452 +
                     (C44522 + C44521 + C44520) * C51448 -
                     (C44892 + C44891 + C44890) * C453 -
                     (C44895 + C44894 + C44893) * C51260) *
                        C51163 * C51462 +
                    ((C44708 + C44709 + C44710) * C452 +
                     (C44711 + C44712 + C44713) * C51448 -
                     (C44476 * C7165 + C44473 * C7166 + C44475 * C1148 +
                      C51498 * C1154 + C44474 * C858 + C51497 * C868) *
                         C453 -
                     (C44476 * C7167 + C44473 * C7168 + C44475 * C1155 +
                      C51498 * C1160 + C44474 * C869 + C51497 * C882) *
                         C51260) *
                        C51163 * C51356) *
                       C51218 * C293)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51497 * C126 + C44475 * C454 +
                      C51498 * C460 + C44476 * C992 + C44473 * C997) *
                         C452 +
                     (C44474 * C127 + C51497 * C140 + C44475 * C461 +
                      C51498 * C472 + C44476 * C998 + C44473 * C1007) *
                         C51448 -
                     (C44476 * C1236 + C44473 * C1240 + C44475 * C992 +
                      C51498 * C997 + C44474 * C454 + C51497 * C460) *
                         C453 -
                     (C44476 * C1241 + C44473 * C1248 + C44475 * C998 +
                      C51498 * C1007 + C44474 * C461 + C51497 * C472) *
                         C51260) *
                        C51163 * C51462 +
                    ((C47444 + C47445 + C47446) * C452 +
                     (C47447 + C47448 + C47449) * C51448 -
                     (C48046 + C48047 + C48048) * C453 -
                     (C48049 + C48050 + C48051) * C51260) *
                        C51163 * C51356) *
                       C622 +
                   (((C48048 + C48047 + C48046) * C453 -
                     ((C47449 + C47448 + C47447) * C51448 +
                      (C47446 + C47445 + C47444) * C452) +
                     (C48051 + C48050 + C48049) * C51260) *
                        C51163 * C51462 +
                    ((C48052 + C48053 + C48054) * C453 -
                     ((C47754 + C47755 + C47756) * C51448 +
                      (C47757 + C47758 + C47759) * C452) +
                     (C48055 + C48056 + C48057) * C51260) *
                        C51163 * C51356) *
                       C623 +
                   (((C47759 + C47758 + C47757) * C452 +
                     (C47756 + C47755 + C47754) * C51448 -
                     (C48054 + C48053 + C48052) * C453 -
                     (C48057 + C48056 + C48055) * C51260) *
                        C51163 * C51462 +
                    ((C47870 + C47871 + C47872) * C452 +
                     (C47873 + C47874 + C47875) * C51448 -
                     (C44476 * C20814 + C44473 * C20815 + C44475 * C3630 +
                      C51498 * C3632 + C44474 * C3237 + C51497 * C3241) *
                         C453 -
                     (C44476 * C20816 + C44473 * C20817 + C44475 * C3633 +
                      C51498 * C3636 + C44474 * C3242 + C51497 * C3249) *
                         C51260) *
                        C51163 * C51356) *
                       C624) *
                  C51186) /
                     (p * q * std::sqrt(p + q));
    d2ee[180] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                 C51248) *
                C51163 * C2436 +
            ((C36506 + C36507) * C118 + (C36508 + C36509) * C51248) * C51163 *
                C2437 +
            C36840 * C2438) *
               C1350 -
           (C36957 * C2438 +
            ((C36513 + C36512) * C51248 + (C36511 + C36510) * C118) * C51163 *
                C2437 +
            ((C36509 + C36508) * C51248 + (C36507 + C36506) * C118) * C51163 *
                C2436) *
               C51234) *
              C51492 +
          ((((C33728 + C33727) * C118 + (C33726 + C33725) * C51248) * C51163 *
                C2436 +
            ((C34091 + C34092) * C118 + (C34093 + C34094) * C51248) * C51163 *
                C2437 +
            ((C36832 + C36833) * C118 + (C36834 + C36835) * C51248) * C51163 *
                C2438) *
               C51234 -
           (C36841 * C2438 +
            ((C33725 + C33726) * C51248 + (C33727 + C33728) * C118) * C51163 *
                C2437 +
            ((C33528 + C33527) * C51248 + (C33526 + C33525) * C118) * C51163 *
                C2436) *
               C1350) *
              C51477 +
          ((C33549 * C51163 * C2436 +
            ((C33724 + C33723) * C118 + (C33722 + C33721) * C51248) * C51163 *
                C2437 +
            ((C34095 + C34096) * C118 + (C34097 + C34098) * C51248) * C51163 *
                C2438) *
               C1350 -
           (((C33491 * C4264 + C51382 * C4265 + C33490 * C748 + C33488 * C755) *
                 C51248 +
             (C33491 * C4262 + C51382 * C4263 + C33490 * C743 + C33488 * C749) *
                 C118) *
                C51163 * C2438 +
            ((C34098 + C34097) * C51248 + (C34096 + C34095) * C118) * C51163 *
                C2437 +
            C33737 * C51163 * C2436) *
               C51234) *
              C1354)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                 C51248) *
                C17433 +
            ((C33525 + C33526) * C118 + (C33527 + C33528) * C51248) * C17434 +
            C33549 * C17435) *
               C51307 * C1350 -
           (C33737 * C17435 +
            ((C33725 + C33726) * C51248 + (C33727 + C33728) * C118) * C17434 +
            ((C33491 * C865 + C51382 * C880 + C33490 * C306 + C33488 * C315) *
                 C51248 +
             (C33491 * C856 + C51382 * C864 + C33490 * C297 + C33488 * C307) *
                 C118) *
                C17433) *
               C51307 * C51234) *
              C51492 +
          ((((C33728 + C33727) * C118 + (C33726 + C33725) * C51248) * C17433 +
            ((C33724 + C33723) * C118 + (C33722 + C33721) * C51248) * C17434 +
            ((C33729 + C33730) * C118 + (C33731 + C33732) * C51248) * C17435) *
               C51307 * C51234 -
           (C33550 * C17435 +
            ((C33532 + C33531) * C51248 + (C33530 + C33529) * C118) * C17434 +
            ((C33528 + C33527) * C51248 + (C33526 + C33525) * C118) * C17433) *
               C51307 * C1350) *
              C51477 +
          ((C33549 * C17433 +
            ((C33536 + C33535) * C118 + (C33534 + C33533) * C51248) * C17434 +
            ((C33537 + C33538) * C118 + (C33539 + C33540) * C51248) * C17435) *
               C51307 * C1350 -
           (((C33491 * C1590 + C51382 * C1591 + C33490 * C309 + C33488 * C316) *
                 C51248 +
             (C33491 * C1588 + C51382 * C1589 + C33490 * C298 + C33488 * C308) *
                 C118) *
                C17435 +
            ((C33732 + C33731) * C51248 + (C33730 + C33729) * C118) * C17434 +
            C33737 * C17433) *
               C51307 * C51234) *
              C1354)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C39111 * C119 + C39107 * C126 + C39112 * C454 + C39108 * C460 +
             C39113 * C992 + C39109 * C997 + C39114 * C1236 + C39110 * C1240) *
                C118 +
            (C39111 * C127 + C39107 * C140 + C39112 * C461 + C39108 * C472 +
             C39113 * C998 + C39109 * C1007 + C39114 * C1241 + C39110 * C1248) *
                C51248) *
               C51163 * C51307 * C1350 -
           ((C39114 * C3765 + C39110 * C3772 + C39113 * C1151 + C39109 * C1158 +
             C39112 * C865 + C39108 * C880 + C39111 * C306 + C39107 * C315) *
                C51248 +
            (C39114 * C3760 + C39110 * C3764 + C39113 * C1146 + C39109 * C1150 +
             C39112 * C856 + C39108 * C864 + C39111 * C297 + C39107 * C307) *
                C118) *
               C51163 * C51307 * C51234) *
              C51492 +
          (((C39111 * C296 + C39107 * C305 + C39112 * C857 + C39108 * C866 +
             C39113 * C1147 + C39109 * C1152 + C39114 * C3761 +
             C39110 * C3766) *
                C118 +
            (C39111 * C304 + C39107 * C314 + C39112 * C867 + C39108 * C881 +
             C39113 * C1153 + C39109 * C1159 + C39114 * C3767 +
             C39110 * C3773) *
                C51248) *
               C51163 * C51307 * C51234 -
           ((C39114 * C1243 + C39110 * C1249 + C39113 * C1000 + C39109 * C1008 +
             C39112 * C463 + C39108 * C473 + C39111 * C129 + C39107 * C141) *
                C51248 +
            (C39114 * C1237 + C39110 * C1242 + C39113 * C993 + C39109 * C999 +
             C39112 * C455 + C39108 * C462 + C39111 * C120 + C39107 * C128) *
                C118) *
               C51163 * C51307 * C1350) *
              C51477 +
          (((C39111 * C121 + C39107 * C130 + C39112 * C456 + C39108 * C464 +
             C39113 * C994 + C39109 * C1001 + C39114 * C1238 + C39110 * C1244) *
                C118 +
            (C39111 * C131 + C39107 * C142 + C39112 * C465 + C39108 * C474 +
             C39113 * C1002 + C39109 * C1009 + C39114 * C1245 +
             C39110 * C1250) *
                C51248) *
               C51163 * C51307 * C1350 -
           ((C39114 * C7167 + C39110 * C7168 + C39113 * C1155 + C39109 * C1160 +
             C39112 * C869 + C39108 * C882 + C39111 * C302 + C39107 * C313) *
                C51248 +
            (C39114 * C7165 + C39110 * C7166 + C39113 * C1148 + C39109 * C1154 +
             C39112 * C858 + C39108 * C868 + C39111 * C295 + C39107 * C303) *
                C118) *
               C51163 * C51307 * C51234) *
              C1354)) /
            (p * q * std::sqrt(p + q));
    d2ee[181] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                 C51248) *
                C51163 * C2436 +
            ((C36506 + C36507) * C118 + (C36508 + C36509) * C51248) * C51163 *
                C2437 +
            C36840 * C2438) *
               C51493 -
           (C36957 * C2438 +
            ((C36513 + C36512) * C51248 + (C36511 + C36510) * C118) * C51163 *
                C2437 +
            ((C36509 + C36508) * C51248 + (C36507 + C36506) * C118) * C51163 *
                C2436) *
               C51480 +
           (C36840 * C2436 +
            ((C36831 + C36830) * C118 + (C36829 + C36828) * C51248) * C51163 *
                C2437 +
            ((C36952 + C36953) * C118 + (C36954 + C36955) * C51248) * C51163 *
                C2438) *
               C1455) *
              C1456 +
          ((((C33728 + C33727) * C118 + (C33726 + C33725) * C51248) * C51163 *
                C2436 +
            ((C34091 + C34092) * C118 + (C34093 + C34094) * C51248) * C51163 *
                C2437 +
            ((C36832 + C36833) * C118 + (C36834 + C36835) * C51248) * C51163 *
                C2438) *
               C51480 -
           (C36841 * C2438 +
            ((C33725 + C33726) * C51248 + (C33727 + C33728) * C118) * C51163 *
                C2437 +
            ((C33528 + C33527) * C51248 + (C33526 + C33525) * C118) * C51163 *
                C2436) *
               C51493 -
           (((C33491 * C3248 + C51382 * C3252 + C33490 * C2942 +
              C33488 * C2946) *
                 C51248 +
             (C33491 * C3240 + C51382 * C3247 + C33490 * C2937 +
              C33488 * C2941) *
                 C118) *
                C51163 * C2438 +
            ((C36835 + C36834) * C51248 + (C36833 + C36832) * C118) * C51163 *
                C2437 +
            C36841 * C2436) *
               C1455) *
              C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                 C51248) *
                C17433 +
            ((C33525 + C33526) * C118 + (C33527 + C33528) * C51248) * C17434 +
            C33549 * C17435) *
               C51307 * C51493 -
           (C33737 * C17435 +
            ((C33725 + C33726) * C51248 + (C33727 + C33728) * C118) * C17434 +
            ((C33491 * C865 + C51382 * C880 + C33490 * C306 + C33488 * C315) *
                 C51248 +
             (C33491 * C856 + C51382 * C864 + C33490 * C297 + C33488 * C307) *
                 C118) *
                C17433) *
               C51307 * C51480 +
           (((C33490 * C627 + C33488 * C632 + C33491 * C860 + C51382 * C872) *
                 C118 +
             (C33490 * C633 + C33488 * C642 + C33491 * C873 + C51382 * C884) *
                 C51248) *
                C17433 +
            ((C34091 + C34092) * C118 + (C34093 + C34094) * C51248) * C17434 +
            ((C34095 + C34096) * C118 + (C34097 + C34098) * C51248) * C17435) *
               C51307 * C1455) *
              C1456 +
          ((((C33728 + C33727) * C118 + (C33726 + C33725) * C51248) * C17433 +
            ((C33724 + C33723) * C118 + (C33722 + C33721) * C51248) * C17434 +
            ((C33729 + C33730) * C118 + (C33731 + C33732) * C51248) * C17435) *
               C51307 * C51480 -
           (C33550 * C17435 +
            ((C33532 + C33531) * C51248 + (C33530 + C33529) * C118) * C17434 +
            ((C33528 + C33527) * C51248 + (C33526 + C33525) * C118) * C17433) *
               C51307 * C51493 -
           (((C33491 * C879 + C51382 * C887 + C33490 * C639 + C33488 * C645) *
                 C51248 +
             (C33491 * C863 + C51382 * C878 + C33490 * C630 + C33488 * C638) *
                 C118) *
                C17435 +
            ((C34098 + C34097) * C51248 + (C34096 + C34095) * C118) * C17434 +
            ((C34094 + C34093) * C51248 + (C34092 + C34091) * C118) * C17433) *
               C51307 * C1455) *
              C51191)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C39111 * C119 + C39107 * C126 + C39112 * C454 + C39108 * C460 +
             C39113 * C992 + C39109 * C997 + C39114 * C1236 + C39110 * C1240) *
                C118 +
            (C39111 * C127 + C39107 * C140 + C39112 * C461 + C39108 * C472 +
             C39113 * C998 + C39109 * C1007 + C39114 * C1241 + C39110 * C1248) *
                C51248) *
               C51163 * C51307 * C51493 -
           ((C39114 * C3765 + C39110 * C3772 + C39113 * C1151 + C39109 * C1158 +
             C39112 * C865 + C39108 * C880 + C39111 * C306 + C39107 * C315) *
                C51248 +
            (C39114 * C3760 + C39110 * C3764 + C39113 * C1146 + C39109 * C1150 +
             C39112 * C856 + C39108 * C864 + C39111 * C297 + C39107 * C307) *
                C118) *
               C51163 * C51307 * C51480 +
           ((C39111 * C627 + C39107 * C632 + C39112 * C860 + C39108 * C872 +
             C39113 * C3448 + C39109 * C3451 + C39114 * C3762 +
             C39110 * C3768) *
                C118 +
            (C39111 * C633 + C39107 * C642 + C39112 * C873 + C39108 * C884 +
             C39113 * C3452 + C39109 * C3457 + C39114 * C3769 +
             C39110 * C3774) *
                C51248) *
               C51163 * C51307 * C1455) *
              C1456 +
          (((C39111 * C296 + C39107 * C305 + C39112 * C857 + C39108 * C866 +
             C39113 * C1147 + C39109 * C1152 + C39114 * C3761 +
             C39110 * C3766) *
                C118 +
            (C39111 * C304 + C39107 * C314 + C39112 * C867 + C39108 * C881 +
             C39113 * C1153 + C39109 * C1159 + C39114 * C3767 +
             C39110 * C3773) *
                C51248) *
               C51163 * C51307 * C51480 -
           ((C39114 * C1243 + C39110 * C1249 + C39113 * C1000 + C39109 * C1008 +
             C39112 * C463 + C39108 * C473 + C39111 * C129 + C39107 * C141) *
                C51248 +
            (C39114 * C1237 + C39110 * C1242 + C39113 * C993 + C39109 * C999 +
             C39112 * C455 + C39108 * C462 + C39111 * C120 + C39107 * C128) *
                C118) *
               C51163 * C51307 * C51493 -
           ((C39114 * C3771 + C39110 * C3775 + C39113 * C3454 + C39109 * C3458 +
             C39112 * C875 + C39108 * C885 + C39111 * C635 + C39107 * C643) *
                C51248 +
            (C39114 * C3763 + C39110 * C3770 + C39113 * C3449 + C39109 * C3453 +
             C39112 * C861 + C39108 * C874 + C39111 * C628 + C39107 * C634) *
                C118) *
               C51163 * C51307 * C1455) *
              C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[182] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                 C452 +
             (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                 C51448 -
             (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                 C453 -
             (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                 C51260) *
                C51163 * C2436 +
            ((C36506 + C36507) * C452 + (C36508 + C36509) * C51448 -
             (C37130 + C37131) * C453 - (C37132 + C37133) * C51260) *
                C51163 * C2437 +
            C37149 * C2438) *
               C1350 +
           (((C37131 + C37130) * C453 -
             ((C36509 + C36508) * C51448 + (C36507 + C36506) * C452) +
             (C37133 + C37132) * C51260) *
                C51163 * C2436 +
            ((C37136 + C37135) * C453 -
             ((C36513 + C36512) * C51448 + (C36511 + C36510) * C452) +
             (C37138 + C37137) * C51260) *
                C51163 * C2437 +
            ((C37139 + C37140) * C453 - (C36940 * C51448 + C36941 * C452) +
             (C37141 + C37142) * C51260) *
                C51163 * C2438) *
               C51234) *
              C1456 +
          ((((C33911 + C33910) * C453 -
             ((C33528 + C33527) * C51448 + (C33526 + C33525) * C452) +
             (C33913 + C33912) * C51260) *
                C51163 * C2436 +
            ((C35259 + C35260) * C453 -
             ((C33725 + C33726) * C51448 + (C33727 + C33728) * C452) +
             (C35261 + C35262) * C51260) *
                C51163 * C2437 +
            ((C38058 + C38059) * C453 - (C36824 * C51448 + C36825 * C452) +
             (C38060 + C38061) * C51260) *
                C51163 * C2438) *
               C1350 +
           (((C33728 + C33727) * C452 + (C33726 + C33725) * C51448 -
             (C35260 + C35259) * C453 - (C35262 + C35261) * C51260) *
                C51163 * C2436 +
            ((C34091 + C34092) * C452 + (C34093 + C34094) * C51448 -
             (C38059 + C38058) * C453 - (C38061 + C38060) * C51260) *
                C51163 * C2437 +
            ((C36832 + C36833) * C452 + (C36834 + C36835) * C51448 -
             (C33491 * C3631 + C51382 * C3634 + C33490 * C3238 +
              C33488 * C3243) *
                 C453 -
             (C33491 * C3635 + C51382 * C3637 + C33490 * C3244 +
              C33488 * C3250) *
                 C51260) *
                C51163 * C2438) *
               C51234) *
              C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                 C452 +
             (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                 C51448 -
             (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                 C453 -
             (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                 C51260) *
                C17433 +
            ((C33525 + C33526) * C452 + (C33527 + C33528) * C51448 -
             (C33910 + C33911) * C453 - (C33912 + C33913) * C51260) *
                C17434 +
            C33928 * C17435) *
               C51307 * C1350 +
           (((C33490 * C856 + C33488 * C864 + C33491 * C1146 + C51382 * C1150) *
                 C453 -
             ((C33491 * C865 + C51382 * C880 + C33490 * C306 + C33488 * C315) *
                  C51448 +
              (C33491 * C856 + C51382 * C864 + C33490 * C297 + C33488 * C307) *
                  C452) +
             (C33490 * C865 + C33488 * C880 + C33491 * C1151 + C51382 * C1158) *
                 C51260) *
                C17433 +
            ((C35259 + C35260) * C453 -
             ((C33725 + C33726) * C51448 + (C33727 + C33728) * C452) +
             (C35261 + C35262) * C51260) *
                C17434 +
            ((C35263 + C35264) * C453 - (C33733 * C51448 + C33734 * C452) +
             (C35265 + C35266) * C51260) *
                C17435) *
               C51307 * C51234) *
              C1456 +
          ((((C33911 + C33910) * C453 -
             ((C33528 + C33527) * C51448 + (C33526 + C33525) * C452) +
             (C33913 + C33912) * C51260) *
                C17433 +
            ((C33916 + C33915) * C453 -
             ((C33532 + C33531) * C51448 + (C33530 + C33529) * C452) +
             (C33918 + C33917) * C51260) *
                C17434 +
            ((C33919 + C33920) * C453 - (C33543 * C51448 + C33544 * C452) +
             (C33921 + C33922) * C51260) *
                C17435) *
               C51307 * C1350 +
           (((C33728 + C33727) * C452 + (C33726 + C33725) * C51448 -
             (C35260 + C35259) * C453 - (C35262 + C35261) * C51260) *
                C17433 +
            ((C33724 + C33723) * C452 + (C33722 + C33721) * C51448 -
             (C35264 + C35263) * C453 - (C35266 + C35265) * C51260) *
                C17434 +
            ((C33729 + C33730) * C452 + (C33731 + C33732) * C51448 -
             (C33491 * C1149 + C51382 * C1156 + C33490 * C859 + C33488 * C870) *
                 C453 -
             (C33491 * C1157 + C51382 * C1161 + C33490 * C871 + C33488 * C883) *
                 C51260) *
                C17435) *
               C51307 * C51234) *
              C51191)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C39111 * C119 + C39107 * C126 + C39112 * C454 + C39108 * C460 +
             C39113 * C992 + C39109 * C997 + C39114 * C1236 + C39110 * C1240) *
                C452 +
            (C39111 * C127 + C39107 * C140 + C39112 * C461 + C39108 * C472 +
             C39113 * C998 + C39109 * C1007 + C39114 * C1241 + C39110 * C1248) *
                C51448 -
            (C39114 * C6389 + C39110 * C6392 + C39113 * C1236 + C39109 * C1240 +
             C39112 * C992 + C39108 * C997 + C39111 * C454 + C39107 * C460) *
                C453 -
            (C39114 * C6393 + C39110 * C6398 + C39113 * C1241 + C39109 * C1248 +
             C39112 * C998 + C39108 * C1007 + C39111 * C461 + C39107 * C472) *
                C51260) *
               C51163 * C51307 * C1350 +
           ((C39111 * C856 + C39107 * C864 + C39112 * C1146 + C39108 * C1150 +
             C39113 * C3760 + C39109 * C3764 + C39114 * C6565 +
             C39110 * C6567) *
                C453 -
            ((C39114 * C3765 + C39110 * C3772 + C39113 * C1151 +
              C39109 * C1158 + C39112 * C865 + C39108 * C880 + C39111 * C306 +
              C39107 * C315) *
                 C51448 +
             (C39114 * C3760 + C39110 * C3764 + C39113 * C1146 +
              C39109 * C1150 + C39112 * C856 + C39108 * C864 + C39111 * C297 +
              C39107 * C307) *
                 C452) +
            (C39111 * C865 + C39107 * C880 + C39112 * C1151 + C39108 * C1158 +
             C39113 * C3765 + C39109 * C3772 + C39114 * C6568 +
             C39110 * C6571) *
                C51260) *
               C51163 * C51307 * C51234) *
              C1456 +
          (((C39111 * C455 + C39107 * C462 + C39112 * C993 + C39108 * C999 +
             C39113 * C1237 + C39109 * C1242 + C39114 * C6390 +
             C39110 * C6394) *
                C453 -
            ((C39114 * C1243 + C39110 * C1249 + C39113 * C1000 +
              C39109 * C1008 + C39112 * C463 + C39108 * C473 + C39111 * C129 +
              C39107 * C141) *
                 C51448 +
             (C39114 * C1237 + C39110 * C1242 + C39113 * C993 + C39109 * C999 +
              C39112 * C455 + C39108 * C462 + C39111 * C120 + C39107 * C128) *
                 C452) +
            (C39111 * C463 + C39107 * C473 + C39112 * C1000 + C39108 * C1008 +
             C39113 * C1243 + C39109 * C1249 + C39114 * C6395 +
             C39110 * C6399) *
                C51260) *
               C51163 * C51307 * C1350 +
           ((C39111 * C296 + C39107 * C305 + C39112 * C857 + C39108 * C866 +
             C39113 * C1147 + C39109 * C1152 + C39114 * C3761 +
             C39110 * C3766) *
                C452 +
            (C39111 * C304 + C39107 * C314 + C39112 * C867 + C39108 * C881 +
             C39113 * C1153 + C39109 * C1159 + C39114 * C3767 +
             C39110 * C3773) *
                C51448 -
            (C39114 * C6566 + C39110 * C6569 + C39113 * C3761 + C39109 * C3766 +
             C39112 * C1147 + C39108 * C1152 + C39111 * C857 + C39107 * C866) *
                C453 -
            (C39114 * C6570 + C39110 * C6572 + C39113 * C3767 + C39109 * C3773 +
             C39112 * C1153 + C39108 * C1159 + C39111 * C867 + C39107 * C881) *
                C51260) *
               C51163 * C51307 * C51234) *
              C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[183] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                 C1722 +
             (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                 C1720 -
             (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                 C1723 -
             (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                 C51260) *
                C51163 * C2436 +
            ((C36506 + C36507) * C1722 + (C36508 + C36509) * C1720 -
             (C37130 + C37131) * C1723 - (C37132 + C37133) * C51260) *
                C51163 * C2437 +
            (C36806 * C1722 + C36807 * C1720 - C37143 * C1723 -
             C37144 * C51260) *
                C51163 * C2438) *
               C1350 +
           (((C37131 + C37130) * C1723 -
             ((C36509 + C36508) * C1720 + (C36507 + C36506) * C1722) +
             (C37133 + C37132) * C51260) *
                C51163 * C2436 +
            ((C37136 + C37135) * C1723 -
             ((C36513 + C36512) * C1720 + (C36511 + C36510) * C1722) +
             (C37138 + C37137) * C51260) *
                C51163 * C2437 +
            ((C37139 + C37140) * C1723 - (C36940 * C1720 + C36941 * C1722) +
             (C37141 + C37142) * C51260) *
                C51163 * C2438) *
               C51234) *
              C51439 +
          ((((C33911 + C33910) * C1723 -
             ((C33528 + C33527) * C1720 + (C33526 + C33525) * C1722) +
             (C33913 + C33912) * C51260) *
                C51163 * C2436 +
            ((C35259 + C35260) * C1723 -
             ((C33725 + C33726) * C1720 + (C33727 + C33728) * C1722) +
             (C35261 + C35262) * C51260) *
                C51163 * C2437 +
            ((C38058 + C38059) * C1723 - (C36824 * C1720 + C36825 * C1722) +
             (C38060 + C38061) * C51260) *
                C51163 * C2438) *
               C1350 +
           (((C33728 + C33727) * C1722 + (C33726 + C33725) * C1720 -
             (C35260 + C35259) * C1723 - (C35262 + C35261) * C51260) *
                C51163 * C2436 +
            ((C34091 + C34092) * C1722 + (C34093 + C34094) * C1720 -
             (C38059 + C38058) * C1723 - (C38061 + C38060) * C51260) *
                C51163 * C2437 +
            ((C36832 + C36833) * C1722 + (C36834 + C36835) * C1720 -
             (C33491 * C3631 + C51382 * C3634 + C33490 * C3238 +
              C33488 * C3243) *
                 C1723 -
             (C33491 * C3635 + C51382 * C3637 + C33490 * C3244 +
              C33488 * C3250) *
                 C51260) *
                C51163 * C2438) *
               C51234) *
              C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                 C1722 +
             (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                 C1720 -
             (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                 C1723 -
             (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                 C51260) *
                C17433 +
            ((C33525 + C33526) * C1722 + (C33527 + C33528) * C1720 -
             (C33910 + C33911) * C1723 - (C33912 + C33913) * C51260) *
                C17434 +
            C35419 * C17435) *
               C51307 * C1350 +
           (((C33490 * C856 + C33488 * C864 + C33491 * C1146 + C51382 * C1150) *
                 C1723 -
             ((C33491 * C865 + C51382 * C880 + C33490 * C306 + C33488 * C315) *
                  C1720 +
              (C33491 * C856 + C51382 * C864 + C33490 * C297 + C33488 * C307) *
                  C1722) +
             (C33490 * C865 + C33488 * C880 + C33491 * C1151 + C51382 * C1158) *
                 C51260) *
                C17433 +
            ((C35259 + C35260) * C1723 -
             ((C33725 + C33726) * C1720 + (C33727 + C33728) * C1722) +
             (C35261 + C35262) * C51260) *
                C17434 +
            ((C35263 + C35264) * C1723 - (C33733 * C1720 + C33734 * C1722) +
             (C35265 + C35266) * C51260) *
                C17435) *
               C51307 * C51234) *
              C51439 +
          ((((C33911 + C33910) * C1723 -
             ((C33528 + C33527) * C1720 + (C33526 + C33525) * C1722) +
             (C33913 + C33912) * C51260) *
                C17433 +
            ((C33916 + C33915) * C1723 -
             ((C33532 + C33531) * C1720 + (C33530 + C33529) * C1722) +
             (C33918 + C33917) * C51260) *
                C17434 +
            ((C33919 + C33920) * C1723 - (C33543 * C1720 + C33544 * C1722) +
             (C33921 + C33922) * C51260) *
                C17435) *
               C51307 * C1350 +
           (((C33728 + C33727) * C1722 + (C33726 + C33725) * C1720 -
             (C35260 + C35259) * C1723 - (C35262 + C35261) * C51260) *
                C17433 +
            ((C33724 + C33723) * C1722 + (C33722 + C33721) * C1720 -
             (C35264 + C35263) * C1723 - (C35266 + C35265) * C51260) *
                C17434 +
            ((C33729 + C33730) * C1722 + (C33731 + C33732) * C1720 -
             (C33491 * C1149 + C51382 * C1156 + C33490 * C859 + C33488 * C870) *
                 C1723 -
             (C33491 * C1157 + C51382 * C1161 + C33490 * C871 + C33488 * C883) *
                 C51260) *
                C17435) *
               C51307 * C51234) *
              C51191)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C39111 * C119 + C39107 * C126 + C39112 * C454 + C39108 * C460 +
             C39113 * C992 + C39109 * C997 + C39114 * C1236 + C39110 * C1240) *
                C1722 +
            (C39111 * C127 + C39107 * C140 + C39112 * C461 + C39108 * C472 +
             C39113 * C998 + C39109 * C1007 + C39114 * C1241 + C39110 * C1248) *
                C1720 -
            (C39114 * C6389 + C39110 * C6392 + C39113 * C1236 + C39109 * C1240 +
             C39112 * C992 + C39108 * C997 + C39111 * C454 + C39107 * C460) *
                C1723 -
            (C39114 * C6393 + C39110 * C6398 + C39113 * C1241 + C39109 * C1248 +
             C39112 * C998 + C39108 * C1007 + C39111 * C461 + C39107 * C472) *
                C51260) *
               C51163 * C51307 * C1350 +
           ((C39111 * C856 + C39107 * C864 + C39112 * C1146 + C39108 * C1150 +
             C39113 * C3760 + C39109 * C3764 + C39114 * C6565 +
             C39110 * C6567) *
                C1723 -
            ((C39114 * C3765 + C39110 * C3772 + C39113 * C1151 +
              C39109 * C1158 + C39112 * C865 + C39108 * C880 + C39111 * C306 +
              C39107 * C315) *
                 C1720 +
             (C39114 * C3760 + C39110 * C3764 + C39113 * C1146 +
              C39109 * C1150 + C39112 * C856 + C39108 * C864 + C39111 * C297 +
              C39107 * C307) *
                 C1722) +
            (C39111 * C865 + C39107 * C880 + C39112 * C1151 + C39108 * C1158 +
             C39113 * C3765 + C39109 * C3772 + C39114 * C6568 +
             C39110 * C6571) *
                C51260) *
               C51163 * C51307 * C51234) *
              C51439 +
          (((C39111 * C455 + C39107 * C462 + C39112 * C993 + C39108 * C999 +
             C39113 * C1237 + C39109 * C1242 + C39114 * C6390 +
             C39110 * C6394) *
                C1723 -
            ((C39114 * C1243 + C39110 * C1249 + C39113 * C1000 +
              C39109 * C1008 + C39112 * C463 + C39108 * C473 + C39111 * C129 +
              C39107 * C141) *
                 C1720 +
             (C39114 * C1237 + C39110 * C1242 + C39113 * C993 + C39109 * C999 +
              C39112 * C455 + C39108 * C462 + C39111 * C120 + C39107 * C128) *
                 C1722) +
            (C39111 * C463 + C39107 * C473 + C39112 * C1000 + C39108 * C1008 +
             C39113 * C1243 + C39109 * C1249 + C39114 * C6395 +
             C39110 * C6399) *
                C51260) *
               C51163 * C51307 * C1350 +
           ((C39111 * C296 + C39107 * C305 + C39112 * C857 + C39108 * C866 +
             C39113 * C1147 + C39109 * C1152 + C39114 * C3761 +
             C39110 * C3766) *
                C1722 +
            (C39111 * C304 + C39107 * C314 + C39112 * C867 + C39108 * C881 +
             C39113 * C1153 + C39109 * C1159 + C39114 * C3767 +
             C39110 * C3773) *
                C1720 -
            (C39114 * C6566 + C39110 * C6569 + C39113 * C3761 + C39109 * C3766 +
             C39112 * C1147 + C39108 * C1152 + C39111 * C857 + C39107 * C866) *
                C1723 -
            (C39114 * C6570 + C39110 * C6572 + C39113 * C3767 + C39109 * C3773 +
             C39112 * C1153 + C39108 * C1159 + C39111 * C867 + C39107 * C881) *
                C51260) *
               C51163 * C51307 * C51234) *
              C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[184] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C1722 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C1720 -
            (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                C1723 -
            (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                C51260) *
               C51163 * C2436 +
           ((C36506 + C36507) * C1722 + (C36508 + C36509) * C1720 -
            (C37130 + C37131) * C1723 - (C37132 + C37133) * C51260) *
               C51163 * C2437 +
           C38895 * C2438) *
              C51493 +
          (((C37131 + C37130) * C1723 -
            ((C36509 + C36508) * C1720 + (C36507 + C36506) * C1722) +
            (C37133 + C37132) * C51260) *
               C51163 * C2436 +
           ((C37136 + C37135) * C1723 -
            ((C36513 + C36512) * C1720 + (C36511 + C36510) * C1722) +
            (C37138 + C37137) * C51260) *
               C51163 * C2437 +
           ((C37139 + C37140) * C1723 - (C36940 * C1720 + C36941 * C1722) +
            (C37141 + C37142) * C51260) *
               C51163 * C2438) *
              C51480 +
          (C38895 * C2436 +
           ((C36831 + C36830) * C1722 + (C36829 + C36828) * C1720 -
            (C37140 + C37139) * C1723 - (C37142 + C37141) * C51260) *
               C51163 * C2437 +
           ((C36952 + C36953) * C1722 + (C36954 + C36955) * C1720 -
            (C33491 * C20732 + C51382 * C20733 + C33490 * C3239 +
             C33488 * C3245) *
                C1723 -
            (C33491 * C20734 + C51382 * C20735 + C33490 * C3246 +
             C33488 * C3251) *
                C51260) *
               C51163 * C2438) *
              C1455) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C1722 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C1720 -
            (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                C1723 -
            (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                C51260) *
               C17433 +
           ((C33525 + C33526) * C1722 + (C33527 + C33528) * C1720 -
            (C33910 + C33911) * C1723 - (C33912 + C33913) * C51260) *
               C17434 +
           C35419 * C17435) *
              C51307 * C51493 +
          (((C33490 * C856 + C33488 * C864 + C33491 * C1146 + C51382 * C1150) *
                C1723 -
            ((C33491 * C865 + C51382 * C880 + C33490 * C306 + C33488 * C315) *
                 C1720 +
             (C33491 * C856 + C51382 * C864 + C33490 * C297 + C33488 * C307) *
                 C1722) +
            (C33490 * C865 + C33488 * C880 + C33491 * C1151 + C51382 * C1158) *
                C51260) *
               C17433 +
           ((C35259 + C35260) * C1723 -
            ((C33725 + C33726) * C1720 + (C33727 + C33728) * C1722) +
            (C35261 + C35262) * C51260) *
               C17434 +
           ((C35263 + C35264) * C1723 - (C33733 * C1720 + C33734 * C1722) +
            (C35265 + C35266) * C51260) *
               C17435) *
              C51307 * C51480 +
          (((C33490 * C627 + C33488 * C632 + C33491 * C860 + C51382 * C872) *
                C1722 +
            (C33490 * C633 + C33488 * C642 + C33491 * C873 + C51382 * C884) *
                C1720 -
            (C33491 * C3448 + C51382 * C3451 + C33490 * C860 + C33488 * C872) *
                C1723 -
            (C33491 * C3452 + C51382 * C3457 + C33490 * C873 + C33488 * C884) *
                C51260) *
               C17433 +
           ((C34091 + C34092) * C1722 + (C34093 + C34094) * C1720 -
            (C33491 * C3449 + C51382 * C3453 + C33490 * C861 + C33488 * C874) *
                C1723 -
            (C33491 * C3454 + C51382 * C3458 + C33490 * C875 + C33488 * C885) *
                C51260) *
               C17434 +
           ((C34095 + C34096) * C1722 + (C34097 + C34098) * C1720 -
            (C33491 * C3450 + C51382 * C3455 + C33490 * C862 + C33488 * C876) *
                C1723 -
            (C33491 * C3456 + C51382 * C3459 + C33490 * C877 + C33488 * C886) *
                C51260) *
               C17435) *
              C51307 * C1455) *
         C51186) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C39111 * C119 + C39107 * C126 + C39112 * C454 + C39108 * C460 +
            C39113 * C992 + C39109 * C997 + C39114 * C1236 + C39110 * C1240) *
               C1722 +
           (C39111 * C127 + C39107 * C140 + C39112 * C461 + C39108 * C472 +
            C39113 * C998 + C39109 * C1007 + C39114 * C1241 + C39110 * C1248) *
               C1720 -
           (C39114 * C6389 + C39110 * C6392 + C39113 * C1236 + C39109 * C1240 +
            C39112 * C992 + C39108 * C997 + C39111 * C454 + C39107 * C460) *
               C1723 -
           (C39114 * C6393 + C39110 * C6398 + C39113 * C1241 + C39109 * C1248 +
            C39112 * C998 + C39108 * C1007 + C39111 * C461 + C39107 * C472) *
               C51260) *
              C51163 * C51307 * C51493 +
          ((C39111 * C856 + C39107 * C864 + C39112 * C1146 + C39108 * C1150 +
            C39113 * C3760 + C39109 * C3764 + C39114 * C6565 + C39110 * C6567) *
               C1723 -
           ((C39114 * C3765 + C39110 * C3772 + C39113 * C1151 + C39109 * C1158 +
             C39112 * C865 + C39108 * C880 + C39111 * C306 + C39107 * C315) *
                C1720 +
            (C39114 * C3760 + C39110 * C3764 + C39113 * C1146 + C39109 * C1150 +
             C39112 * C856 + C39108 * C864 + C39111 * C297 + C39107 * C307) *
                C1722) +
           (C39111 * C865 + C39107 * C880 + C39112 * C1151 + C39108 * C1158 +
            C39113 * C3765 + C39109 * C3772 + C39114 * C6568 + C39110 * C6571) *
               C51260) *
              C51163 * C51307 * C51480 +
          ((C39111 * C627 + C39107 * C632 + C39112 * C860 + C39108 * C872 +
            C39113 * C3448 + C39109 * C3451 + C39114 * C3762 + C39110 * C3768) *
               C1722 +
           (C39111 * C633 + C39107 * C642 + C39112 * C873 + C39108 * C884 +
            C39113 * C3452 + C39109 * C3457 + C39114 * C3769 + C39110 * C3774) *
               C1720 -
           (C39114 * C22973 + C39110 * C22974 + C39113 * C3762 +
            C39109 * C3768 + C39112 * C3448 + C39108 * C3451 + C39111 * C860 +
            C39107 * C872) *
               C1723 -
           (C39114 * C22975 + C39110 * C22976 + C39113 * C3769 +
            C39109 * C3774 + C39112 * C3452 + C39108 * C3457 + C39111 * C873 +
            C39107 * C884) *
               C51260) *
              C51163 * C51307 * C1455) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[185] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C1989 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C51494 -
            (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                C1990 -
            (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                C51483 +
            (C33490 * C992 + C33488 * C997 + C33491 * C1236 + C51382 * C1240) *
                C1991 +
            (C33490 * C998 + C33488 * C1007 + C33491 * C1241 + C51382 * C1248) *
                C1988) *
               C51163 * C2436 +
           ((C36506 + C36507) * C1989 + (C36508 + C36509) * C51494 -
            (C37130 + C37131) * C1990 - (C37132 + C37133) * C51483 +
            (C37458 + C37459) * C1991 + (C37460 + C37461) * C1988) *
               C51163 * C2437 +
           (C36806 * C1989 + C36807 * C51494 - C37143 * C1990 -
            C37144 * C51483 + (C37462 + C37463) * C1991 +
            (C37464 + C37465) * C1988) *
               C51163 * C2438) *
              C1350 +
          (((C37131 + C37130) * C1990 -
            ((C36509 + C36508) * C51494 + (C36507 + C36506) * C1989) +
            (C37133 + C37132) * C51483 - (C37459 + C37458) * C1991 -
            (C37461 + C37460) * C1988) *
               C51163 * C2436 +
           ((C37136 + C37135) * C1990 -
            ((C36513 + C36512) * C51494 + (C36511 + C36510) * C1989) +
            (C37138 + C37137) * C51483 - (C37463 + C37462) * C1991 -
            (C37465 + C37464) * C1988) *
               C51163 * C2437 +
           ((C37139 + C37140) * C1990 - (C36940 * C51494 + C36941 * C1989) +
            (C37141 + C37142) * C51483 -
            (C33491 * C20814 + C51382 * C20815 + C33490 * C3630 +
             C33488 * C3632) *
                C1991 -
            (C33491 * C20816 + C51382 * C20817 + C33490 * C3633 +
             C33488 * C3636) *
                C1988) *
               C51163 * C2438) *
              C51234) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C1989 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C51494 -
            (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                C1990 -
            (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                C51483 +
            (C33490 * C992 + C33488 * C997 + C33491 * C1236 + C51382 * C1240) *
                C1991 +
            (C33490 * C998 + C33488 * C1007 + C33491 * C1241 + C51382 * C1248) *
                C1988) *
               C17433 +
           ((C33525 + C33526) * C1989 + (C33527 + C33528) * C51494 -
            (C33910 + C33911) * C1990 - (C33912 + C33913) * C51483 +
            (C34505 + C34506) * C1991 + (C34507 + C34508) * C1988) *
               C17434 +
           (C33541 * C1989 + C33542 * C51494 - C33923 * C1990 -
            C33924 * C51483 + (C34509 + C34510) * C1991 +
            (C34511 + C34512) * C1988) *
               C17435) *
              C51307 * C1350 +
          (((C33490 * C856 + C33488 * C864 + C33491 * C1146 + C51382 * C1150) *
                C1990 -
            ((C33491 * C865 + C51382 * C880 + C33490 * C306 + C33488 * C315) *
                 C51494 +
             (C33491 * C856 + C51382 * C864 + C33490 * C297 + C33488 * C307) *
                 C1989) +
            (C33490 * C865 + C33488 * C880 + C33491 * C1151 + C51382 * C1158) *
                C51483 -
            (C33491 * C3760 + C51382 * C3764 + C33490 * C1146 +
             C33488 * C1150) *
                C1991 -
            (C33491 * C3765 + C51382 * C3772 + C33490 * C1151 +
             C33488 * C1158) *
                C1988) *
               C17433 +
           ((C35259 + C35260) * C1990 -
            ((C33725 + C33726) * C51494 + (C33727 + C33728) * C1989) +
            (C35261 + C35262) * C51483 -
            (C33491 * C3761 + C51382 * C3766 + C33490 * C1147 +
             C33488 * C1152) *
                C1991 -
            (C33491 * C3767 + C51382 * C3773 + C33490 * C1153 +
             C33488 * C1159) *
                C1988) *
               C17434 +
           ((C35263 + C35264) * C1990 - (C33733 * C51494 + C33734 * C1989) +
            (C35265 + C35266) * C51483 -
            (C33491 * C7165 + C51382 * C7166 + C33490 * C1148 +
             C33488 * C1154) *
                C1991 -
            (C33491 * C7167 + C51382 * C7168 + C33490 * C1155 +
             C33488 * C1160) *
                C1988) *
               C17435) *
              C51307 * C51234) *
         C51186) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C39111 * C119 + C39107 * C126 + C39112 * C454 + C39108 * C460 +
            C39113 * C992 + C39109 * C997 + C39114 * C1236 + C39110 * C1240) *
               C1989 +
           (C39111 * C127 + C39107 * C140 + C39112 * C461 + C39108 * C472 +
            C39113 * C998 + C39109 * C1007 + C39114 * C1241 + C39110 * C1248) *
               C51494 -
           (C39114 * C6389 + C39110 * C6392 + C39113 * C1236 + C39109 * C1240 +
            C39112 * C992 + C39108 * C997 + C39111 * C454 + C39107 * C460) *
               C1990 -
           (C39114 * C6393 + C39110 * C6398 + C39113 * C1241 + C39109 * C1248 +
            C39112 * C998 + C39108 * C1007 + C39111 * C461 + C39107 * C472) *
               C51483 +
           (C39111 * C992 + C39107 * C997 + C39112 * C1236 + C39108 * C1240 +
            C39113 * C6389 + C39109 * C6392 + C39114 * C6671 + C39110 * C6673) *
               C1991 +
           (C39111 * C998 + C39107 * C1007 + C39112 * C1241 + C39108 * C1248 +
            C39113 * C6393 + C39109 * C6398 + C39114 * C6674 + C39110 * C6677) *
               C1988) *
              C51163 * C51307 * C1350 +
          ((C39111 * C856 + C39107 * C864 + C39112 * C1146 + C39108 * C1150 +
            C39113 * C3760 + C39109 * C3764 + C39114 * C6565 + C39110 * C6567) *
               C1990 -
           ((C39114 * C3765 + C39110 * C3772 + C39113 * C1151 + C39109 * C1158 +
             C39112 * C865 + C39108 * C880 + C39111 * C306 + C39107 * C315) *
                C51494 +
            (C39114 * C3760 + C39110 * C3764 + C39113 * C1146 + C39109 * C1150 +
             C39112 * C856 + C39108 * C864 + C39111 * C297 + C39107 * C307) *
                C1989) +
           (C39111 * C865 + C39107 * C880 + C39112 * C1151 + C39108 * C1158 +
            C39113 * C3765 + C39109 * C3772 + C39114 * C6568 + C39110 * C6571) *
               C51483 -
           (C39114 * C23093 + C39110 * C23094 + C39113 * C6565 +
            C39109 * C6567 + C39112 * C3760 + C39108 * C3764 + C39111 * C1146 +
            C39107 * C1150) *
               C1991 -
           (C39114 * C23095 + C39110 * C23096 + C39113 * C6568 +
            C39109 * C6571 + C39112 * C3765 + C39108 * C3772 + C39111 * C1151 +
            C39107 * C1158) *
               C1988) *
              C51163 * C51307 * C51234) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[186] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C33490 * C119 + C33488 * C126 + C33491 * C454 +
                 C51382 * C460) *
                    C118 +
                (C33490 * C127 + C33488 * C140 + C33491 * C461 +
                 C51382 * C472) *
                    C51248) *
                   C17433 +
               ((C33525 + C33526) * C118 + (C33527 + C33528) * C51248) *
                   C17434 +
               C33549 * C17435) *
                  C51307 * C51218 * C113 -
              (C33550 * C17435 +
               ((C33532 + C33531) * C51248 + (C33530 + C33529) * C118) *
                   C17434 +
               ((C33528 + C33527) * C51248 + (C33526 + C33525) * C118) *
                   C17433) *
                  C51307 * C51218 * C114 +
              (C33549 * C17433 +
               ((C33536 + C33535) * C118 + (C33534 + C33533) * C51248) *
                   C17434 +
               ((C33537 + C33538) * C118 + (C33539 + C33540) * C51248) *
                   C17435) *
                  C51307 * C51218 * C115 -
              (((C33491 * C471 + C51382 * C477 + C33490 * C137 +
                 C33488 * C145) *
                    C51248 +
                (C33491 * C459 + C51382 * C470 + C33490 * C124 +
                 C33488 * C136) *
                    C118) *
                   C17435 +
               ((C33540 + C33539) * C51248 + (C33538 + C33537) * C118) *
                   C17434 +
               C33550 * C17433) *
                  C51307 * C51218 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C33490 * C119 + C33488 * C126 + C33491 * C454 +
                  C51382 * C460) *
                     C118 +
                 (C33490 * C127 + C33488 * C140 + C33491 * C461 +
                  C51382 * C472) *
                     C51248) *
                    C17433 +
                ((C33525 + C33526) * C118 + (C33527 + C33528) * C51248) *
                    C17434 +
                C33549 * C17435) *
                   C51307 * C622 -
               (C33737 * C17435 +
                ((C33725 + C33726) * C51248 + (C33727 + C33728) * C118) *
                    C17434 +
                ((C33491 * C865 + C51382 * C880 + C33490 * C306 +
                  C33488 * C315) *
                     C51248 +
                 (C33491 * C856 + C51382 * C864 + C33490 * C297 +
                  C33488 * C307) *
                     C118) *
                    C17433) *
                   C51307 * C623 +
               (((C33490 * C627 + C33488 * C632 + C33491 * C860 +
                  C51382 * C872) *
                     C118 +
                 (C33490 * C633 + C33488 * C642 + C33491 * C873 +
                  C51382 * C884) *
                     C51248) *
                    C17433 +
                ((C34091 + C34092) * C118 + (C34093 + C34094) * C51248) *
                    C17434 +
                ((C34095 + C34096) * C118 + (C34097 + C34098) * C51248) *
                    C17435) *
                   C51307 * C624) *
                  C51439 +
              ((((C33728 + C33727) * C118 + (C33726 + C33725) * C51248) *
                    C17433 +
                ((C33724 + C33723) * C118 + (C33722 + C33721) * C51248) *
                    C17434 +
                ((C33729 + C33730) * C118 + (C33731 + C33732) * C51248) *
                    C17435) *
                   C51307 * C623 -
               (C33550 * C17435 +
                ((C33532 + C33531) * C51248 + (C33530 + C33529) * C118) *
                    C17434 +
                ((C33528 + C33527) * C51248 + (C33526 + C33525) * C118) *
                    C17433) *
                   C51307 * C622 -
               (((C33491 * C879 + C51382 * C887 + C33490 * C639 +
                  C33488 * C645) *
                     C51248 +
                 (C33491 * C863 + C51382 * C878 + C33490 * C630 +
                  C33488 * C638) *
                     C118) *
                    C17435 +
                ((C34098 + C34097) * C51248 + (C34096 + C34095) * C118) *
                    C17434 +
                ((C34094 + C34093) * C51248 + (C34092 + C34091) * C118) *
                    C17433) *
                   C51307 * C624) *
                  C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C989 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C986 -
            (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                C990 -
            (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                C987 +
            (C33490 * C992 + C33488 * C997 + C33491 * C1236 + C51382 * C1240) *
                C991 +
            (C33490 * C998 + C33488 * C1007 + C33491 * C1241 + C51382 * C1248) *
                C988) *
               C17433 +
           ((C33525 + C33526) * C989 + (C33527 + C33528) * C986 -
            (C33910 + C33911) * C990 - (C33912 + C33913) * C987 +
            (C34505 + C34506) * C991 + (C34507 + C34508) * C988) *
               C17434 +
           (C33541 * C989 + C33542 * C986 - C33923 * C990 - C33924 * C987 +
            (C34509 + C34510) * C991 + (C34511 + C34512) * C988) *
               C17435) *
              C51307 * C51218 * C51439 +
          (((C33911 + C33910) * C990 -
            ((C33528 + C33527) * C986 + (C33526 + C33525) * C989) +
            (C33913 + C33912) * C987 - (C34506 + C34505) * C991 -
            (C34508 + C34507) * C988) *
               C17433 +
           ((C33916 + C33915) * C990 -
            ((C33532 + C33531) * C986 + (C33530 + C33529) * C989) +
            (C33918 + C33917) * C987 - (C34510 + C34509) * C991 -
            (C34512 + C34511) * C988) *
               C17434 +
           ((C33919 + C33920) * C990 - (C33543 * C986 + C33544 * C989) +
            (C33921 + C33922) * C987 -
            (C33491 * C1239 + C51382 * C1246 + C33490 * C995 + C33488 * C1003) *
                C991 -
            (C33491 * C1247 + C51382 * C1251 + C33490 * C1004 +
             C33488 * C1010) *
                C988) *
               C17435) *
              C51307 * C51218 * C51191)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C118 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C51248) *
               C51163 * C2436 +
           ((C33490 * C297 + C33488 * C307 + C33491 * C856 + C51382 * C864) *
                C118 +
            (C33490 * C306 + C33488 * C315 + C33491 * C865 + C51382 * C880) *
                C51248) *
               C51163 * C2437 +
           ((C33490 * C627 + C33488 * C632 + C33491 * C860 + C51382 * C872) *
                C118 +
            (C33490 * C633 + C33488 * C642 + C33491 * C873 + C51382 * C884) *
                C51248) *
               C51163 * C2438) *
              C51218 * C113 -
          (((C34094 + C34093) * C51248 + (C34092 + C34091) * C118) * C51163 *
               C2438 +
           ((C33725 + C33726) * C51248 + (C33727 + C33728) * C118) * C51163 *
               C2437 +
           ((C33528 + C33527) * C51248 + (C33526 + C33525) * C118) * C51163 *
               C2436) *
              C51218 * C114 +
          (C33549 * C51163 * C2436 +
           ((C33724 + C33723) * C118 + (C33722 + C33721) * C51248) * C51163 *
               C2437 +
           ((C34095 + C34096) * C118 + (C34097 + C34098) * C51248) * C51163 *
               C2438) *
              C51218 * C115 -
          (((C33491 * C879 + C51382 * C887 + C33490 * C639 + C33488 * C645) *
                C51248 +
            (C33491 * C863 + C51382 * C878 + C33490 * C630 + C33488 * C638) *
                C118) *
               C51163 * C2438 +
           ((C33732 + C33731) * C51248 + (C33730 + C33729) * C118) * C51163 *
               C2437 +
           C33550 * C51163 * C2436) *
              C51218 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                 C51248) *
                C51163 * C2436 +
            ((C36506 + C36507) * C118 + (C36508 + C36509) * C51248) * C51163 *
                C2437 +
            C36840 * C2438) *
               C622 -
           (((C36828 + C36829) * C51248 + (C36830 + C36831) * C118) * C51163 *
                C2438 +
            ((C36513 + C36512) * C51248 + (C36511 + C36510) * C118) * C51163 *
                C2437 +
            ((C36509 + C36508) * C51248 + (C36507 + C36506) * C118) * C51163 *
                C2436) *
               C623 +
           (C36840 * C2436 +
            ((C36831 + C36830) * C118 + (C36829 + C36828) * C51248) * C51163 *
                C2437 +
            ((C33490 * C2936 + C33488 * C2939 + C33491 * C3239 +
              C51382 * C3245) *
                 C118 +
             (C33490 * C2940 + C33488 * C2945 + C33491 * C3246 +
              C51382 * C3251) *
                 C51248) *
                C51163 * C2438) *
               C624) *
              C51439 +
          ((((C33728 + C33727) * C118 + (C33726 + C33725) * C51248) * C51163 *
                C2436 +
            ((C34091 + C34092) * C118 + (C34093 + C34094) * C51248) * C51163 *
                C2437 +
            ((C36832 + C36833) * C118 + (C36834 + C36835) * C51248) * C51163 *
                C2438) *
               C623 -
           (C36841 * C2438 +
            ((C33725 + C33726) * C51248 + (C33727 + C33728) * C118) * C51163 *
                C2437 +
            ((C33528 + C33527) * C51248 + (C33526 + C33525) * C118) * C51163 *
                C2436) *
               C622 -
           (((C33491 * C3248 + C51382 * C3252 + C33490 * C2942 +
              C33488 * C2946) *
                 C51248 +
             (C33491 * C3240 + C51382 * C3247 + C33490 * C2937 +
              C33488 * C2941) *
                 C118) *
                C51163 * C2438 +
            ((C36835 + C36834) * C51248 + (C36833 + C36832) * C118) * C51163 *
                C2437 +
            C36841 * C2436) *
               C624) *
              C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C989 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C986 -
            (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                C990 -
            (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                C987 +
            (C33490 * C992 + C33488 * C997 + C33491 * C1236 + C51382 * C1240) *
                C991 +
            (C33490 * C998 + C33488 * C1007 + C33491 * C1241 + C51382 * C1248) *
                C988) *
               C51163 * C2436 +
           ((C36506 + C36507) * C989 + (C36508 + C36509) * C986 -
            (C37130 + C37131) * C990 - (C37132 + C37133) * C987 +
            (C33490 * C1146 + C33488 * C1150 + C33491 * C3760 +
             C51382 * C3764) *
                C991 +
            (C33490 * C1151 + C33488 * C1158 + C33491 * C3765 +
             C51382 * C3772) *
                C988) *
               C51163 * C2437 +
           (C36806 * C989 + C36807 * C986 - C37143 * C990 - C37144 * C987 +
            (C33490 * C3448 + C33488 * C3451 + C33491 * C3762 +
             C51382 * C3768) *
                C991 +
            (C33490 * C3452 + C33488 * C3457 + C33491 * C3769 +
             C51382 * C3774) *
                C988) *
               C51163 * C2438) *
              C51218 * C51439 +
          (((C33911 + C33910) * C990 -
            ((C33528 + C33527) * C986 + (C33526 + C33525) * C989) +
            (C33913 + C33912) * C987 - (C34506 + C34505) * C991 -
            (C34508 + C34507) * C988) *
               C51163 * C2436 +
           ((C35259 + C35260) * C990 -
            ((C33725 + C33726) * C986 + (C33727 + C33728) * C989) +
            (C35261 + C35262) * C987 -
            (C33491 * C3761 + C51382 * C3766 + C33490 * C1147 +
             C33488 * C1152) *
                C991 -
            (C33491 * C3767 + C51382 * C3773 + C33490 * C1153 +
             C33488 * C1159) *
                C988) *
               C51163 * C2437 +
           ((C33490 * C861 + C33488 * C874 + C33491 * C3449 + C51382 * C3453) *
                C990 -
            (C36824 * C986 + C36825 * C989) +
            (C33490 * C875 + C33488 * C885 + C33491 * C3454 + C51382 * C3458) *
                C987 -
            (C33491 * C3763 + C51382 * C3770 + C33490 * C3449 +
             C33488 * C3453) *
                C991 -
            (C33491 * C3771 + C51382 * C3775 + C33490 * C3454 +
             C33488 * C3458) *
                C988) *
               C51163 * C2438) *
              C51218 * C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C39111 * C119 + C39107 * C126 + C39112 * C454 + C39108 * C460 +
            C39113 * C992 + C39109 * C997 + C39114 * C1236 + C39110 * C1240) *
               C118 +
           (C39111 * C127 + C39107 * C140 + C39112 * C461 + C39108 * C472 +
            C39113 * C998 + C39109 * C1007 + C39114 * C1241 + C39110 * C1248) *
               C51248) *
              C51163 * C51307 * C51218 * C113 -
          ((C39114 * C1243 + C39110 * C1249 + C39113 * C1000 + C39109 * C1008 +
            C39112 * C463 + C39108 * C473 + C39111 * C129 + C39107 * C141) *
               C51248 +
           (C39114 * C1237 + C39110 * C1242 + C39113 * C993 + C39109 * C999 +
            C39112 * C455 + C39108 * C462 + C39111 * C120 + C39107 * C128) *
               C118) *
              C51163 * C51307 * C51218 * C114 +
          ((C39111 * C121 + C39107 * C130 + C39112 * C456 + C39108 * C464 +
            C39113 * C994 + C39109 * C1001 + C39114 * C1238 + C39110 * C1244) *
               C118 +
           (C39111 * C131 + C39107 * C142 + C39112 * C465 + C39108 * C474 +
            C39113 * C1002 + C39109 * C1009 + C39114 * C1245 + C39110 * C1250) *
               C51248) *
              C51163 * C51307 * C51218 * C115 -
          ((C39114 * C1247 + C39110 * C1251 + C39113 * C1004 + C39109 * C1010 +
            C39112 * C467 + C39108 * C475 + C39111 * C133 + C39107 * C143) *
               C51248 +
           (C39114 * C1239 + C39110 * C1246 + C39113 * C995 + C39109 * C1003 +
            C39112 * C457 + C39108 * C466 + C39111 * C122 + C39107 * C132) *
               C118) *
              C51163 * C51307 * C51218 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C39111 * C119 + C39107 * C126 + C39112 * C454 + C39108 * C460 +
             C39113 * C992 + C39109 * C997 + C39114 * C1236 + C39110 * C1240) *
                C118 +
            (C39111 * C127 + C39107 * C140 + C39112 * C461 + C39108 * C472 +
             C39113 * C998 + C39109 * C1007 + C39114 * C1241 + C39110 * C1248) *
                C51248) *
               C51163 * C51307 * C622 -
           ((C39114 * C3765 + C39110 * C3772 + C39113 * C1151 + C39109 * C1158 +
             C39112 * C865 + C39108 * C880 + C39111 * C306 + C39107 * C315) *
                C51248 +
            (C39114 * C3760 + C39110 * C3764 + C39113 * C1146 + C39109 * C1150 +
             C39112 * C856 + C39108 * C864 + C39111 * C297 + C39107 * C307) *
                C118) *
               C51163 * C51307 * C623 +
           ((C39111 * C627 + C39107 * C632 + C39112 * C860 + C39108 * C872 +
             C39113 * C3448 + C39109 * C3451 + C39114 * C3762 +
             C39110 * C3768) *
                C118 +
            (C39111 * C633 + C39107 * C642 + C39112 * C873 + C39108 * C884 +
             C39113 * C3452 + C39109 * C3457 + C39114 * C3769 +
             C39110 * C3774) *
                C51248) *
               C51163 * C51307 * C624) *
              C51439 +
          (((C39111 * C296 + C39107 * C305 + C39112 * C857 + C39108 * C866 +
             C39113 * C1147 + C39109 * C1152 + C39114 * C3761 +
             C39110 * C3766) *
                C118 +
            (C39111 * C304 + C39107 * C314 + C39112 * C867 + C39108 * C881 +
             C39113 * C1153 + C39109 * C1159 + C39114 * C3767 +
             C39110 * C3773) *
                C51248) *
               C51163 * C51307 * C623 -
           ((C39114 * C1243 + C39110 * C1249 + C39113 * C1000 + C39109 * C1008 +
             C39112 * C463 + C39108 * C473 + C39111 * C129 + C39107 * C141) *
                C51248 +
            (C39114 * C1237 + C39110 * C1242 + C39113 * C993 + C39109 * C999 +
             C39112 * C455 + C39108 * C462 + C39111 * C120 + C39107 * C128) *
                C118) *
               C51163 * C51307 * C622 -
           ((C39114 * C3771 + C39110 * C3775 + C39113 * C3454 + C39109 * C3458 +
             C39112 * C875 + C39108 * C885 + C39111 * C635 + C39107 * C643) *
                C51248 +
            (C39114 * C3763 + C39110 * C3770 + C39113 * C3449 + C39109 * C3453 +
             C39112 * C861 + C39108 * C874 + C39111 * C628 + C39107 * C634) *
                C118) *
               C51163 * C51307 * C624) *
              C51191)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C39111 * C119 + C39107 * C126 + C39112 * C454 + C39108 * C460 +
            C39113 * C992 + C39109 * C997 + C39114 * C1236 + C39110 * C1240) *
               C989 +
           (C39111 * C127 + C39107 * C140 + C39112 * C461 + C39108 * C472 +
            C39113 * C998 + C39109 * C1007 + C39114 * C1241 + C39110 * C1248) *
               C986 -
           (C39114 * C6389 + C39110 * C6392 + C39113 * C1236 + C39109 * C1240 +
            C39112 * C992 + C39108 * C997 + C39111 * C454 + C39107 * C460) *
               C990 -
           (C39114 * C6393 + C39110 * C6398 + C39113 * C1241 + C39109 * C1248 +
            C39112 * C998 + C39108 * C1007 + C39111 * C461 + C39107 * C472) *
               C987 +
           (C39111 * C992 + C39107 * C997 + C39112 * C1236 + C39108 * C1240 +
            C39113 * C6389 + C39109 * C6392 + C39114 * C6671 + C39110 * C6673) *
               C991 +
           (C39111 * C998 + C39107 * C1007 + C39112 * C1241 + C39108 * C1248 +
            C39113 * C6393 + C39109 * C6398 + C39114 * C6674 + C39110 * C6677) *
               C988) *
              C51163 * C51307 * C51218 * C51439 +
          ((C39111 * C455 + C39107 * C462 + C39112 * C993 + C39108 * C999 +
            C39113 * C1237 + C39109 * C1242 + C39114 * C6390 + C39110 * C6394) *
               C990 -
           ((C39114 * C1243 + C39110 * C1249 + C39113 * C1000 + C39109 * C1008 +
             C39112 * C463 + C39108 * C473 + C39111 * C129 + C39107 * C141) *
                C986 +
            (C39114 * C1237 + C39110 * C1242 + C39113 * C993 + C39109 * C999 +
             C39112 * C455 + C39108 * C462 + C39111 * C120 + C39107 * C128) *
                C989) +
           (C39111 * C463 + C39107 * C473 + C39112 * C1000 + C39108 * C1008 +
            C39113 * C1243 + C39109 * C1249 + C39114 * C6395 + C39110 * C6399) *
               C987 -
           (C39114 * C6672 + C39110 * C6675 + C39113 * C6390 + C39109 * C6394 +
            C39112 * C1237 + C39108 * C1242 + C39111 * C993 + C39107 * C999) *
               C991 -
           (C39114 * C6676 + C39110 * C6678 + C39113 * C6395 + C39109 * C6399 +
            C39112 * C1243 + C39108 * C1249 + C39111 * C1000 + C39107 * C1008) *
               C988) *
              C51163 * C51307 * C51218 * C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C33490 * C119 + C33488 * C126 + C33491 * C454 +
                  C51382 * C460) *
                     C118 +
                 (C33490 * C127 + C33488 * C140 + C33491 * C461 +
                  C51382 * C472) *
                     C51248) *
                    C17433 +
                ((C33525 + C33526) * C118 + (C33527 + C33528) * C51248) *
                    C17434 +
                C33549 * C17435) *
                   C51307 * C51446 -
               (C33737 * C17435 +
                ((C33725 + C33726) * C51248 + (C33727 + C33728) * C118) *
                    C17434 +
                ((C33491 * C865 + C51382 * C880 + C33490 * C306 +
                  C33488 * C315) *
                     C51248 +
                 (C33491 * C856 + C51382 * C864 + C33490 * C297 +
                  C33488 * C307) *
                     C118) *
                    C17433) *
                   C51307 * C51234) *
                  C291 +
              ((((C33728 + C33727) * C118 + (C33726 + C33725) * C51248) *
                    C17433 +
                ((C33724 + C33723) * C118 + (C33722 + C33721) * C51248) *
                    C17434 +
                ((C33729 + C33730) * C118 + (C33731 + C33732) * C51248) *
                    C17435) *
                   C51307 * C51234 -
               (C33550 * C17435 +
                ((C33532 + C33531) * C51248 + (C33530 + C33529) * C118) *
                    C17434 +
                ((C33528 + C33527) * C51248 + (C33526 + C33525) * C118) *
                    C17433) *
                   C51307 * C51446) *
                  C292 +
              ((C33549 * C17433 +
                ((C33536 + C33535) * C118 + (C33534 + C33533) * C51248) *
                    C17434 +
                ((C33537 + C33538) * C118 + (C33539 + C33540) * C51248) *
                    C17435) *
                   C51307 * C51446 -
               (((C33491 * C1590 + C51382 * C1591 + C33490 * C309 +
                  C33488 * C316) *
                     C51248 +
                 (C33491 * C1588 + C51382 * C1589 + C33490 * C298 +
                  C33488 * C308) *
                     C118) *
                    C17435 +
                ((C33732 + C33731) * C51248 + (C33730 + C33729) * C118) *
                    C17434 +
                C33737 * C17433) *
                   C51307 * C51234) *
                  C293) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C33490 * C119 + C33488 * C126 + C33491 * C454 +
                 C51382 * C460) *
                    C118 +
                (C33490 * C127 + C33488 * C140 + C33491 * C461 +
                 C51382 * C472) *
                    C51248) *
                   C17433 +
               ((C33525 + C33526) * C118 + (C33527 + C33528) * C51248) *
                   C17434 +
               C33549 * C17435) *
                  C51307 * C737 -
              (C33737 * C17435 +
               ((C33725 + C33726) * C51248 + (C33727 + C33728) * C118) *
                   C17434 +
               ((C33491 * C865 + C51382 * C880 + C33490 * C306 +
                 C33488 * C315) *
                    C51248 +
                (C33491 * C856 + C51382 * C864 + C33490 * C297 +
                 C33488 * C307) *
                    C118) *
                   C17433) *
                  C51307 * C738 +
              (((C33490 * C627 + C33488 * C632 + C33491 * C860 +
                 C51382 * C872) *
                    C118 +
                (C33490 * C633 + C33488 * C642 + C33491 * C873 +
                 C51382 * C884) *
                    C51248) *
                   C17433 +
               ((C34091 + C34092) * C118 + (C34093 + C34094) * C51248) *
                   C17434 +
               ((C34095 + C34096) * C118 + (C34097 + C34098) * C51248) *
                   C17435) *
                  C51307 * C739 -
              (((C33491 * C4264 + C51382 * C4265 + C33490 * C748 +
                 C33488 * C755) *
                    C51248 +
                (C33491 * C4262 + C51382 * C4263 + C33490 * C743 +
                 C33488 * C749) *
                    C118) *
                   C17435 +
               ((C33491 * C3244 + C51382 * C3250 + C33490 * C750 +
                 C33488 * C756) *
                    C51248 +
                (C33491 * C3238 + C51382 * C3243 + C33490 * C744 +
                 C33488 * C751) *
                    C118) *
                   C17434 +
               ((C33491 * C3242 + C51382 * C3249 + C33490 * C752 +
                 C33488 * C757) *
                    C51248 +
                (C33491 * C3237 + C51382 * C3241 + C33490 * C745 +
                 C33488 * C753) *
                    C118) *
                   C17433) *
                  C51307 * C740) *
             C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C989 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C986 -
            (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                C990 -
            (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                C987 +
            (C33490 * C992 + C33488 * C997 + C33491 * C1236 + C51382 * C1240) *
                C991 +
            (C33490 * C998 + C33488 * C1007 + C33491 * C1241 + C51382 * C1248) *
                C988) *
               C17433 +
           ((C33525 + C33526) * C989 + (C33527 + C33528) * C986 -
            (C33910 + C33911) * C990 - (C33912 + C33913) * C987 +
            (C34505 + C34506) * C991 + (C34507 + C34508) * C988) *
               C17434 +
           (C33541 * C989 + C33542 * C986 - C33923 * C990 - C33924 * C987 +
            (C34509 + C34510) * C991 + (C34511 + C34512) * C988) *
               C17435) *
              C51307 * C51446 +
          (((C33490 * C856 + C33488 * C864 + C33491 * C1146 + C51382 * C1150) *
                C990 -
            ((C33491 * C865 + C51382 * C880 + C33490 * C306 + C33488 * C315) *
                 C986 +
             (C33491 * C856 + C51382 * C864 + C33490 * C297 + C33488 * C307) *
                 C989) +
            (C33490 * C865 + C33488 * C880 + C33491 * C1151 + C51382 * C1158) *
                C987 -
            (C33491 * C3760 + C51382 * C3764 + C33490 * C1146 +
             C33488 * C1150) *
                C991 -
            (C33491 * C3765 + C51382 * C3772 + C33490 * C1151 +
             C33488 * C1158) *
                C988) *
               C17433 +
           ((C33490 * C857 + C33488 * C866 + C33491 * C1147 + C51382 * C1152) *
                C990 -
            ((C33725 + C33726) * C986 + (C33727 + C33728) * C989) +
            (C33490 * C867 + C33488 * C881 + C33491 * C1153 + C51382 * C1159) *
                C987 -
            (C33491 * C3761 + C51382 * C3766 + C33490 * C1147 +
             C33488 * C1152) *
                C991 -
            (C33491 * C3767 + C51382 * C3773 + C33490 * C1153 +
             C33488 * C1159) *
                C988) *
               C17434 +
           ((C33490 * C858 + C33488 * C868 + C33491 * C1148 + C51382 * C1154) *
                C990 -
            (C33733 * C986 + C33734 * C989) +
            (C33490 * C869 + C33488 * C882 + C33491 * C1155 + C51382 * C1160) *
                C987 -
            (C33491 * C7165 + C51382 * C7166 + C33490 * C1148 +
             C33488 * C1154) *
                C991 -
            (C33491 * C7167 + C51382 * C7168 + C33490 * C1155 +
             C33488 * C1160) *
                C988) *
               C17435) *
              C51307 * C51234) *
         C51186) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                 C51248) *
                C51163 * C2436 +
            ((C36506 + C36507) * C118 + (C36508 + C36509) * C51248) * C51163 *
                C2437 +
            ((C36510 + C36511) * C118 + (C36512 + C36513) * C51248) * C51163 *
                C2438) *
               C51446 -
           (((C33491 * C3242 + C51382 * C3249 + C33490 * C752 + C33488 * C757) *
                 C51248 +
             (C33491 * C3237 + C51382 * C3241 + C33490 * C745 + C33488 * C753) *
                 C118) *
                C51163 * C2438 +
            ((C36513 + C36512) * C51248 + (C36511 + C36510) * C118) * C51163 *
                C2437 +
            ((C36509 + C36508) * C51248 + (C36507 + C36506) * C118) * C51163 *
                C2436) *
               C51234) *
              C291 +
          ((((C33728 + C33727) * C118 + (C33726 + C33725) * C51248) * C51163 *
                C2436 +
            ((C34091 + C34092) * C118 + (C34093 + C34094) * C51248) * C51163 *
                C2437 +
            ((C33490 * C744 + C33488 * C751 + C33491 * C3238 + C51382 * C3243) *
                 C118 +
             (C33490 * C750 + C33488 * C756 + C33491 * C3244 + C51382 * C3250) *
                 C51248) *
                C51163 * C2438) *
               C51234 -
           (((C34094 + C34093) * C51248 + (C34092 + C34091) * C118) * C51163 *
                C2438 +
            ((C33725 + C33726) * C51248 + (C33727 + C33728) * C118) * C51163 *
                C2437 +
            ((C33528 + C33527) * C51248 + (C33526 + C33525) * C118) * C51163 *
                C2436) *
               C51446) *
              C292 +
          ((C33549 * C51163 * C2436 +
            ((C33724 + C33723) * C118 + (C33722 + C33721) * C51248) * C51163 *
                C2437 +
            ((C34095 + C34096) * C118 + (C34097 + C34098) * C51248) * C51163 *
                C2438) *
               C51446 -
           (((C33491 * C4264 + C51382 * C4265 + C33490 * C748 + C33488 * C755) *
                 C51248 +
             (C33491 * C4262 + C51382 * C4263 + C33490 * C743 + C33488 * C749) *
                 C118) *
                C51163 * C2438 +
            ((C34098 + C34097) * C51248 + (C34096 + C34095) * C118) * C51163 *
                C2437 +
            C33737 * C51163 * C2436) *
               C51234) *
              C293)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C118 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C51248) *
               C51163 * C2436 +
           ((C36506 + C36507) * C118 + (C36508 + C36509) * C51248) * C51163 *
               C2437 +
           C36840 * C2438) *
              C737 -
          (C36957 * C2438 +
           ((C36513 + C36512) * C51248 + (C36511 + C36510) * C118) * C51163 *
               C2437 +
           ((C36509 + C36508) * C51248 + (C36507 + C36506) * C118) * C51163 *
               C2436) *
              C738 +
          (C36840 * C2436 +
           ((C36831 + C36830) * C118 + (C36829 + C36828) * C51248) * C51163 *
               C2437 +
           ((C36952 + C36953) * C118 + (C36954 + C36955) * C51248) * C51163 *
               C2438) *
              C739 -
          (((C33491 * C20519 + C51382 * C20520 + C33490 * C3075 +
             C33488 * C3078) *
                C51248 +
            (C33491 * C20517 + C51382 * C20518 + C33490 * C3072 +
             C33488 * C3076) *
                C118) *
               C51163 * C2438 +
           ((C36955 + C36954) * C51248 + (C36953 + C36952) * C118) * C51163 *
               C2437 +
           C36957 * C2436) *
              C740) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C989 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C986 -
            (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                C990 -
            (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                C987 +
            (C33490 * C992 + C33488 * C997 + C33491 * C1236 + C51382 * C1240) *
                C991 +
            (C33490 * C998 + C33488 * C1007 + C33491 * C1241 + C51382 * C1248) *
                C988) *
               C51163 * C2436 +
           ((C36506 + C36507) * C989 + (C36508 + C36509) * C986 -
            (C37130 + C37131) * C990 - (C37132 + C37133) * C987 +
            (C37458 + C37459) * C991 + (C37460 + C37461) * C988) *
               C51163 * C2437 +
           (C36806 * C989 + C36807 * C986 - C37143 * C990 - C37144 * C987 +
            (C37462 + C37463) * C991 + (C37464 + C37465) * C988) *
               C51163 * C2438) *
              C51446 +
          (((C37131 + C37130) * C990 -
            ((C36509 + C36508) * C986 + (C36507 + C36506) * C989) +
            (C37133 + C37132) * C987 - (C37459 + C37458) * C991 -
            (C37461 + C37460) * C988) *
               C51163 * C2436 +
           ((C37136 + C37135) * C990 -
            ((C36513 + C36512) * C986 + (C36511 + C36510) * C989) +
            (C37138 + C37137) * C987 - (C37463 + C37462) * C991 -
            (C37465 + C37464) * C988) *
               C51163 * C2437 +
           ((C37139 + C37140) * C990 - (C36940 * C986 + C36941 * C989) +
            (C37141 + C37142) * C987 -
            (C33491 * C20814 + C51382 * C20815 + C33490 * C3630 +
             C33488 * C3632) *
                C991 -
            (C33491 * C20816 + C51382 * C20817 + C33490 * C3633 +
             C33488 * C3636) *
                C988) *
               C51163 * C2438) *
              C51234) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C39111 * C119 + C39107 * C126 + C39112 * C454 + C39108 * C460 +
             C39113 * C992 + C39109 * C997 + C39114 * C1236 + C39110 * C1240) *
                C118 +
            (C39111 * C127 + C39107 * C140 + C39112 * C461 + C39108 * C472 +
             C39113 * C998 + C39109 * C1007 + C39114 * C1241 + C39110 * C1248) *
                C51248) *
               C51163 * C51307 * C51446 -
           ((C39114 * C3765 + C39110 * C3772 + C39113 * C1151 + C39109 * C1158 +
             C39112 * C865 + C39108 * C880 + C39111 * C306 + C39107 * C315) *
                C51248 +
            (C39114 * C3760 + C39110 * C3764 + C39113 * C1146 + C39109 * C1150 +
             C39112 * C856 + C39108 * C864 + C39111 * C297 + C39107 * C307) *
                C118) *
               C51163 * C51307 * C51234) *
              C291 +
          (((C39111 * C296 + C39107 * C305 + C39112 * C857 + C39108 * C866 +
             C39113 * C1147 + C39109 * C1152 + C39114 * C3761 +
             C39110 * C3766) *
                C118 +
            (C39111 * C304 + C39107 * C314 + C39112 * C867 + C39108 * C881 +
             C39113 * C1153 + C39109 * C1159 + C39114 * C3767 +
             C39110 * C3773) *
                C51248) *
               C51163 * C51307 * C51234 -
           ((C39114 * C1243 + C39110 * C1249 + C39113 * C1000 + C39109 * C1008 +
             C39112 * C463 + C39108 * C473 + C39111 * C129 + C39107 * C141) *
                C51248 +
            (C39114 * C1237 + C39110 * C1242 + C39113 * C993 + C39109 * C999 +
             C39112 * C455 + C39108 * C462 + C39111 * C120 + C39107 * C128) *
                C118) *
               C51163 * C51307 * C51446) *
              C292 +
          (((C39111 * C121 + C39107 * C130 + C39112 * C456 + C39108 * C464 +
             C39113 * C994 + C39109 * C1001 + C39114 * C1238 + C39110 * C1244) *
                C118 +
            (C39111 * C131 + C39107 * C142 + C39112 * C465 + C39108 * C474 +
             C39113 * C1002 + C39109 * C1009 + C39114 * C1245 +
             C39110 * C1250) *
                C51248) *
               C51163 * C51307 * C51446 -
           ((C39114 * C7167 + C39110 * C7168 + C39113 * C1155 + C39109 * C1160 +
             C39112 * C869 + C39108 * C882 + C39111 * C302 + C39107 * C313) *
                C51248 +
            (C39114 * C7165 + C39110 * C7166 + C39113 * C1148 + C39109 * C1154 +
             C39112 * C858 + C39108 * C868 + C39111 * C295 + C39107 * C303) *
                C118) *
               C51163 * C51307 * C51234) *
              C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C39111 * C119 + C39107 * C126 + C39112 * C454 + C39108 * C460 +
            C39113 * C992 + C39109 * C997 + C39114 * C1236 + C39110 * C1240) *
               C118 +
           (C39111 * C127 + C39107 * C140 + C39112 * C461 + C39108 * C472 +
            C39113 * C998 + C39109 * C1007 + C39114 * C1241 + C39110 * C1248) *
               C51248) *
              C51163 * C51307 * C737 -
          ((C39114 * C3765 + C39110 * C3772 + C39113 * C1151 + C39109 * C1158 +
            C39112 * C865 + C39108 * C880 + C39111 * C306 + C39107 * C315) *
               C51248 +
           (C39114 * C3760 + C39110 * C3764 + C39113 * C1146 + C39109 * C1150 +
            C39112 * C856 + C39108 * C864 + C39111 * C297 + C39107 * C307) *
               C118) *
              C51163 * C51307 * C738 +
          ((C39111 * C627 + C39107 * C632 + C39112 * C860 + C39108 * C872 +
            C39113 * C3448 + C39109 * C3451 + C39114 * C3762 + C39110 * C3768) *
               C118 +
           (C39111 * C633 + C39107 * C642 + C39112 * C873 + C39108 * C884 +
            C39113 * C3452 + C39109 * C3457 + C39114 * C3769 + C39110 * C3774) *
               C51248) *
              C51163 * C51307 * C739 -
          ((C39114 * C20816 + C39110 * C20817 + C39113 * C3633 +
            C39109 * C3636 + C39112 * C3242 + C39108 * C3249 + C39111 * C752 +
            C39107 * C757) *
               C51248 +
           (C39114 * C20814 + C39110 * C20815 + C39113 * C3630 +
            C39109 * C3632 + C39112 * C3237 + C39108 * C3241 + C39111 * C745 +
            C39107 * C753) *
               C118) *
              C51163 * C51307 * C740) *
         C51186) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C39111 * C119 + C39107 * C126 + C39112 * C454 + C39108 * C460 +
            C39113 * C992 + C39109 * C997 + C39114 * C1236 + C39110 * C1240) *
               C989 +
           (C39111 * C127 + C39107 * C140 + C39112 * C461 + C39108 * C472 +
            C39113 * C998 + C39109 * C1007 + C39114 * C1241 + C39110 * C1248) *
               C986 -
           (C39114 * C6389 + C39110 * C6392 + C39113 * C1236 + C39109 * C1240 +
            C39112 * C992 + C39108 * C997 + C39111 * C454 + C39107 * C460) *
               C990 -
           (C39114 * C6393 + C39110 * C6398 + C39113 * C1241 + C39109 * C1248 +
            C39112 * C998 + C39108 * C1007 + C39111 * C461 + C39107 * C472) *
               C987 +
           (C39111 * C992 + C39107 * C997 + C39112 * C1236 + C39108 * C1240 +
            C39113 * C6389 + C39109 * C6392 + C39114 * C6671 + C39110 * C6673) *
               C991 +
           (C39111 * C998 + C39107 * C1007 + C39112 * C1241 + C39108 * C1248 +
            C39113 * C6393 + C39109 * C6398 + C39114 * C6674 + C39110 * C6677) *
               C988) *
              C51163 * C51307 * C51446 +
          ((C39111 * C856 + C39107 * C864 + C39112 * C1146 + C39108 * C1150 +
            C39113 * C3760 + C39109 * C3764 + C39114 * C6565 + C39110 * C6567) *
               C990 -
           ((C39114 * C3765 + C39110 * C3772 + C39113 * C1151 + C39109 * C1158 +
             C39112 * C865 + C39108 * C880 + C39111 * C306 + C39107 * C315) *
                C986 +
            (C39114 * C3760 + C39110 * C3764 + C39113 * C1146 + C39109 * C1150 +
             C39112 * C856 + C39108 * C864 + C39111 * C297 + C39107 * C307) *
                C989) +
           (C39111 * C865 + C39107 * C880 + C39112 * C1151 + C39108 * C1158 +
            C39113 * C3765 + C39109 * C3772 + C39114 * C6568 + C39110 * C6571) *
               C987 -
           (C39114 * C23093 + C39110 * C23094 + C39113 * C6565 +
            C39109 * C6567 + C39112 * C3760 + C39108 * C3764 + C39111 * C1146 +
            C39107 * C1150) *
               C991 -
           (C39114 * C23095 + C39110 * C23096 + C39113 * C6568 +
            C39109 * C6571 + C39112 * C3765 + C39108 * C3772 + C39111 * C1151 +
            C39107 * C1158) *
               C988) *
              C51163 * C51307 * C51234) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[188] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C33490 * C119 + C33488 * C126 + C33491 * C454 +
                 C51382 * C460) *
                    C452 +
                (C33490 * C127 + C33488 * C140 + C33491 * C461 +
                 C51382 * C472) *
                    C51448 -
                (C33491 * C992 + C51382 * C997 + C33490 * C454 +
                 C33488 * C460) *
                    C453 -
                (C33491 * C998 + C51382 * C1007 + C33490 * C461 +
                 C33488 * C472) *
                    C51260) *
                   C17433 +
               ((C33525 + C33526) * C452 + (C33527 + C33528) * C51448 -
                (C33910 + C33911) * C453 - (C33912 + C33913) * C51260) *
                   C17434 +
               C33928 * C17435) *
                  C51307 * C51218 * C291 +
              (((C33911 + C33910) * C453 -
                ((C33528 + C33527) * C51448 + (C33526 + C33525) * C452) +
                (C33913 + C33912) * C51260) *
                   C17433 +
               ((C33916 + C33915) * C453 -
                ((C33532 + C33531) * C51448 + (C33530 + C33529) * C452) +
                (C33918 + C33917) * C51260) *
                   C17434 +
               ((C33919 + C33920) * C453 - (C33543 * C51448 + C33544 * C452) +
                (C33921 + C33922) * C51260) *
                   C17435) *
                  C51307 * C51218 * C292 +
              (C33928 * C17433 +
               ((C33536 + C33535) * C452 + (C33534 + C33533) * C51448 -
                (C33920 + C33919) * C453 - (C33922 + C33921) * C51260) *
                   C17434 +
               ((C33537 + C33538) * C452 + (C33539 + C33540) * C51448 -
                (C33491 * C996 + C51382 * C1005 + C33490 * C458 +
                 C33488 * C468) *
                    C453 -
                (C33491 * C1006 + C51382 * C1011 + C33490 * C469 +
                 C33488 * C476) *
                    C51260) *
                   C17435) *
                  C51307 * C51218 * C293) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C33490 * C119 + C33488 * C126 + C33491 * C454 +
                 C51382 * C460) *
                    C452 +
                (C33490 * C127 + C33488 * C140 + C33491 * C461 +
                 C51382 * C472) *
                    C51448 -
                (C33491 * C992 + C51382 * C997 + C33490 * C454 +
                 C33488 * C460) *
                    C453 -
                (C33491 * C998 + C51382 * C1007 + C33490 * C461 +
                 C33488 * C472) *
                    C51260) *
                   C17433 +
               ((C33525 + C33526) * C452 + (C33527 + C33528) * C51448 -
                (C33910 + C33911) * C453 - (C33912 + C33913) * C51260) *
                   C17434 +
               C33928 * C17435) *
                  C51307 * C622 +
              (((C33490 * C856 + C33488 * C864 + C33491 * C1146 +
                 C51382 * C1150) *
                    C453 -
                ((C33491 * C865 + C51382 * C880 + C33490 * C306 +
                  C33488 * C315) *
                     C51448 +
                 (C33491 * C856 + C51382 * C864 + C33490 * C297 +
                  C33488 * C307) *
                     C452) +
                (C33490 * C865 + C33488 * C880 + C33491 * C1151 +
                 C51382 * C1158) *
                    C51260) *
                   C17433 +
               ((C33490 * C857 + C33488 * C866 + C33491 * C1147 +
                 C51382 * C1152) *
                    C453 -
                ((C33725 + C33726) * C51448 + (C33727 + C33728) * C452) +
                (C33490 * C867 + C33488 * C881 + C33491 * C1153 +
                 C51382 * C1159) *
                    C51260) *
                   C17434 +
               ((C33490 * C858 + C33488 * C868 + C33491 * C1148 +
                 C51382 * C1154) *
                    C453 -
                (C33733 * C51448 + C33734 * C452) +
                (C33490 * C869 + C33488 * C882 + C33491 * C1155 +
                 C51382 * C1160) *
                    C51260) *
                   C17435) *
                  C51307 * C623 +
              (((C33490 * C627 + C33488 * C632 + C33491 * C860 +
                 C51382 * C872) *
                    C452 +
                (C33490 * C633 + C33488 * C642 + C33491 * C873 +
                 C51382 * C884) *
                    C51448 -
                (C33491 * C3448 + C51382 * C3451 + C33490 * C860 +
                 C33488 * C872) *
                    C453 -
                (C33491 * C3452 + C51382 * C3457 + C33490 * C873 +
                 C33488 * C884) *
                    C51260) *
                   C17433 +
               ((C34091 + C34092) * C452 + (C34093 + C34094) * C51448 -
                (C33491 * C3449 + C51382 * C3453 + C33490 * C861 +
                 C33488 * C874) *
                    C453 -
                (C33491 * C3454 + C51382 * C3458 + C33490 * C875 +
                 C33488 * C885) *
                    C51260) *
                   C17434 +
               ((C34095 + C34096) * C452 + (C34097 + C34098) * C51448 -
                (C33491 * C3450 + C51382 * C3455 + C33490 * C862 +
                 C33488 * C876) *
                    C453 -
                (C33491 * C3456 + C51382 * C3459 + C33490 * C877 +
                 C33488 * C886) *
                    C51260) *
                   C17435) *
                  C51307 * C624) *
             C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
               C1232 +
           (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
               C1228 -
           (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
               C1233 -
           (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
               C1229 +
           (C33490 * C992 + C33488 * C997 + C33491 * C1236 + C51382 * C1240) *
               C1234 +
           (C33490 * C998 + C33488 * C1007 + C33491 * C1241 + C51382 * C1248) *
               C1230 -
           (C33491 * C6389 + C51382 * C6392 + C33490 * C1236 + C33488 * C1240) *
               C1235 -
           (C33491 * C6393 + C51382 * C6398 + C33490 * C1241 + C33488 * C1248) *
               C1231) *
              C17433 +
          ((C33525 + C33526) * C1232 + (C33527 + C33528) * C1228 -
           (C33910 + C33911) * C1233 - (C33912 + C33913) * C1229 +
           (C34505 + C34506) * C1234 + (C34507 + C34508) * C1230 -
           (C33491 * C6390 + C51382 * C6394 + C33490 * C1237 + C33488 * C1242) *
               C1235 -
           (C33491 * C6395 + C51382 * C6399 + C33490 * C1243 + C33488 * C1249) *
               C1231) *
              C17434 +
          (C33541 * C1232 + C33542 * C1228 - C33923 * C1233 - C33924 * C1229 +
           (C34509 + C34510) * C1234 + (C34511 + C34512) * C1230 -
           (C33491 * C6391 + C51382 * C6396 + C33490 * C1238 + C33488 * C1244) *
               C1235 -
           (C33491 * C6397 + C51382 * C6400 + C33490 * C1245 + C33488 * C1250) *
               C1231) *
              C17435) *
         C51307 * C51218 * C51186) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C452 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C51448 -
            (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                C453 -
            (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                C51260) *
               C51163 * C2436 +
           ((C36506 + C36507) * C452 + (C36508 + C36509) * C51448 -
            (C33491 * C1146 + C51382 * C1150 + C33490 * C856 + C33488 * C864) *
                C453 -
            (C33491 * C1151 + C51382 * C1158 + C33490 * C865 + C33488 * C880) *
                C51260) *
               C51163 * C2437 +
           ((C36510 + C36511) * C452 + (C36512 + C36513) * C51448 -
            (C33491 * C3448 + C51382 * C3451 + C33490 * C860 + C33488 * C872) *
                C453 -
            (C33491 * C3452 + C51382 * C3457 + C33490 * C873 + C33488 * C884) *
                C51260) *
               C51163 * C2438) *
              C51218 * C291 +
          (((C33911 + C33910) * C453 -
            ((C33528 + C33527) * C51448 + (C33526 + C33525) * C452) +
            (C33913 + C33912) * C51260) *
               C51163 * C2436 +
           ((C35259 + C35260) * C453 -
            ((C33725 + C33726) * C51448 + (C33727 + C33728) * C452) +
            (C35261 + C35262) * C51260) *
               C51163 * C2437 +
           ((C33490 * C861 + C33488 * C874 + C33491 * C3449 + C51382 * C3453) *
                C453 -
            ((C34094 + C34093) * C51448 + (C34092 + C34091) * C452) +
            (C33490 * C875 + C33488 * C885 + C33491 * C3454 + C51382 * C3458) *
                C51260) *
               C51163 * C2438) *
              C51218 * C292 +
          (C33928 * C51163 * C2436 +
           ((C33724 + C33723) * C452 + (C33722 + C33721) * C51448 -
            (C35264 + C35263) * C453 - (C35266 + C35265) * C51260) *
               C51163 * C2437 +
           ((C34095 + C34096) * C452 + (C34097 + C34098) * C51448 -
            (C33491 * C3450 + C51382 * C3455 + C33490 * C862 + C33488 * C876) *
                C453 -
            (C33491 * C3456 + C51382 * C3459 + C33490 * C877 + C33488 * C886) *
                C51260) *
               C51163 * C2438) *
              C51218 * C293)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C452 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C51448 -
            (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                C453 -
            (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                C51260) *
               C51163 * C2436 +
           ((C36506 + C36507) * C452 + (C36508 + C36509) * C51448 -
            (C37130 + C37131) * C453 - (C37132 + C37133) * C51260) *
               C51163 * C2437 +
           C37149 * C2438) *
              C622 +
          (((C37131 + C37130) * C453 -
            ((C36509 + C36508) * C51448 + (C36507 + C36506) * C452) +
            (C37133 + C37132) * C51260) *
               C51163 * C2436 +
           ((C37136 + C37135) * C453 -
            ((C36513 + C36512) * C51448 + (C36511 + C36510) * C452) +
            (C37138 + C37137) * C51260) *
               C51163 * C2437 +
           ((C37139 + C37140) * C453 - (C36940 * C51448 + C36941 * C452) +
            (C37141 + C37142) * C51260) *
               C51163 * C2438) *
              C623 +
          (C37149 * C2436 +
           ((C36831 + C36830) * C452 + (C36829 + C36828) * C51448 -
            (C37140 + C37139) * C453 - (C37142 + C37141) * C51260) *
               C51163 * C2437 +
           ((C36952 + C36953) * C452 + (C36954 + C36955) * C51448 -
            (C33491 * C20732 + C51382 * C20733 + C33490 * C3239 +
             C33488 * C3245) *
                C453 -
            (C33491 * C20734 + C51382 * C20735 + C33490 * C3246 +
             C33488 * C3251) *
                C51260) *
               C51163 * C2438) *
              C624) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
               C1232 +
           (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
               C1228 -
           (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
               C1233 -
           (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
               C1229 +
           (C33490 * C992 + C33488 * C997 + C33491 * C1236 + C51382 * C1240) *
               C1234 +
           (C33490 * C998 + C33488 * C1007 + C33491 * C1241 + C51382 * C1248) *
               C1230 -
           (C33491 * C6389 + C51382 * C6392 + C33490 * C1236 + C33488 * C1240) *
               C1235 -
           (C33491 * C6393 + C51382 * C6398 + C33490 * C1241 + C33488 * C1248) *
               C1231) *
              C51163 * C2436 +
          ((C36506 + C36507) * C1232 + (C36508 + C36509) * C1228 -
           (C37130 + C37131) * C1233 - (C37132 + C37133) * C1229 +
           (C37458 + C37459) * C1234 + (C37460 + C37461) * C1230 -
           (C33491 * C6565 + C51382 * C6567 + C33490 * C3760 + C33488 * C3764) *
               C1235 -
           (C33491 * C6568 + C51382 * C6571 + C33490 * C3765 + C33488 * C3772) *
               C1231) *
              C51163 * C2437 +
          (C36806 * C1232 + C36807 * C1228 - C37143 * C1233 - C37144 * C1229 +
           (C37462 + C37463) * C1234 + (C37464 + C37465) * C1230 -
           (C33491 * C22973 + C51382 * C22974 + C33490 * C3762 +
            C33488 * C3768) *
               C1235 -
           (C33491 * C22975 + C51382 * C22976 + C33490 * C3769 +
            C33488 * C3774) *
               C1231) *
              C51163 * C2438) *
         C51218 * C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C39111 * C119 + C39107 * C126 + C39112 * C454 + C39108 * C460 +
            C39113 * C992 + C39109 * C997 + C39114 * C1236 + C39110 * C1240) *
               C452 +
           (C39111 * C127 + C39107 * C140 + C39112 * C461 + C39108 * C472 +
            C39113 * C998 + C39109 * C1007 + C39114 * C1241 + C39110 * C1248) *
               C51448 -
           (C39114 * C6389 + C39110 * C6392 + C39113 * C1236 + C39109 * C1240 +
            C39112 * C992 + C39108 * C997 + C39111 * C454 + C39107 * C460) *
               C453 -
           (C39114 * C6393 + C39110 * C6398 + C39113 * C1241 + C39109 * C1248 +
            C39112 * C998 + C39108 * C1007 + C39111 * C461 + C39107 * C472) *
               C51260) *
              C51163 * C51307 * C51218 * C291 +
          ((C39111 * C455 + C39107 * C462 + C39112 * C993 + C39108 * C999 +
            C39113 * C1237 + C39109 * C1242 + C39114 * C6390 + C39110 * C6394) *
               C453 -
           ((C39114 * C1243 + C39110 * C1249 + C39113 * C1000 + C39109 * C1008 +
             C39112 * C463 + C39108 * C473 + C39111 * C129 + C39107 * C141) *
                C51448 +
            (C39114 * C1237 + C39110 * C1242 + C39113 * C993 + C39109 * C999 +
             C39112 * C455 + C39108 * C462 + C39111 * C120 + C39107 * C128) *
                C452) +
           (C39111 * C463 + C39107 * C473 + C39112 * C1000 + C39108 * C1008 +
            C39113 * C1243 + C39109 * C1249 + C39114 * C6395 + C39110 * C6399) *
               C51260) *
              C51163 * C51307 * C51218 * C292 +
          ((C39111 * C121 + C39107 * C130 + C39112 * C456 + C39108 * C464 +
            C39113 * C994 + C39109 * C1001 + C39114 * C1238 + C39110 * C1244) *
               C452 +
           (C39111 * C131 + C39107 * C142 + C39112 * C465 + C39108 * C474 +
            C39113 * C1002 + C39109 * C1009 + C39114 * C1245 + C39110 * C1250) *
               C51448 -
           (C39114 * C6391 + C39110 * C6396 + C39113 * C1238 + C39109 * C1244 +
            C39112 * C994 + C39108 * C1001 + C39111 * C456 + C39107 * C464) *
               C453 -
           (C39114 * C6397 + C39110 * C6400 + C39113 * C1245 + C39109 * C1250 +
            C39112 * C1002 + C39108 * C1009 + C39111 * C465 + C39107 * C474) *
               C51260) *
              C51163 * C51307 * C51218 * C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C39111 * C119 + C39107 * C126 + C39112 * C454 + C39108 * C460 +
            C39113 * C992 + C39109 * C997 + C39114 * C1236 + C39110 * C1240) *
               C452 +
           (C39111 * C127 + C39107 * C140 + C39112 * C461 + C39108 * C472 +
            C39113 * C998 + C39109 * C1007 + C39114 * C1241 + C39110 * C1248) *
               C51448 -
           (C39114 * C6389 + C39110 * C6392 + C39113 * C1236 + C39109 * C1240 +
            C39112 * C992 + C39108 * C997 + C39111 * C454 + C39107 * C460) *
               C453 -
           (C39114 * C6393 + C39110 * C6398 + C39113 * C1241 + C39109 * C1248 +
            C39112 * C998 + C39108 * C1007 + C39111 * C461 + C39107 * C472) *
               C51260) *
              C51163 * C51307 * C622 +
          ((C39111 * C856 + C39107 * C864 + C39112 * C1146 + C39108 * C1150 +
            C39113 * C3760 + C39109 * C3764 + C39114 * C6565 + C39110 * C6567) *
               C453 -
           ((C39114 * C3765 + C39110 * C3772 + C39113 * C1151 + C39109 * C1158 +
             C39112 * C865 + C39108 * C880 + C39111 * C306 + C39107 * C315) *
                C51448 +
            (C39114 * C3760 + C39110 * C3764 + C39113 * C1146 + C39109 * C1150 +
             C39112 * C856 + C39108 * C864 + C39111 * C297 + C39107 * C307) *
                C452) +
           (C39111 * C865 + C39107 * C880 + C39112 * C1151 + C39108 * C1158 +
            C39113 * C3765 + C39109 * C3772 + C39114 * C6568 + C39110 * C6571) *
               C51260) *
              C51163 * C51307 * C623 +
          ((C39111 * C627 + C39107 * C632 + C39112 * C860 + C39108 * C872 +
            C39113 * C3448 + C39109 * C3451 + C39114 * C3762 + C39110 * C3768) *
               C452 +
           (C39111 * C633 + C39107 * C642 + C39112 * C873 + C39108 * C884 +
            C39113 * C3452 + C39109 * C3457 + C39114 * C3769 + C39110 * C3774) *
               C51448 -
           (C39114 * C22973 + C39110 * C22974 + C39113 * C3762 +
            C39109 * C3768 + C39112 * C3448 + C39108 * C3451 + C39111 * C860 +
            C39107 * C872) *
               C453 -
           (C39114 * C22975 + C39110 * C22976 + C39113 * C3769 +
            C39109 * C3774 + C39112 * C3452 + C39108 * C3457 + C39111 * C873 +
            C39107 * C884) *
               C51260) *
              C51163 * C51307 * C624) *
         C51186) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((C39111 * C119 + C39107 * C126 + C39112 * C454 + C39108 * C460 +
           C39113 * C992 + C39109 * C997 + C39114 * C1236 + C39110 * C1240) *
              C1232 +
          (C39111 * C127 + C39107 * C140 + C39112 * C461 + C39108 * C472 +
           C39113 * C998 + C39109 * C1007 + C39114 * C1241 + C39110 * C1248) *
              C1228 -
          (C39114 * C6389 + C39110 * C6392 + C39113 * C1236 + C39109 * C1240 +
           C39112 * C992 + C39108 * C997 + C39111 * C454 + C39107 * C460) *
              C1233 -
          (C39114 * C6393 + C39110 * C6398 + C39113 * C1241 + C39109 * C1248 +
           C39112 * C998 + C39108 * C1007 + C39111 * C461 + C39107 * C472) *
              C1229 +
          (C39111 * C992 + C39107 * C997 + C39112 * C1236 + C39108 * C1240 +
           C39113 * C6389 + C39109 * C6392 + C39114 * C6671 + C39110 * C6673) *
              C1234 +
          (C39111 * C998 + C39107 * C1007 + C39112 * C1241 + C39108 * C1248 +
           C39113 * C6393 + C39109 * C6398 + C39114 * C6674 + C39110 * C6677) *
              C1230 -
          (C39114 * C39835 + C39110 * C39836 + C39113 * C6671 + C39109 * C6673 +
           C39112 * C6389 + C39108 * C6392 + C39111 * C1236 + C39107 * C1240) *
              C1235 -
          (C39114 * C39837 + C39110 * C39838 + C39113 * C6674 + C39109 * C6677 +
           C39112 * C6393 + C39108 * C6398 + C39111 * C1241 + C39107 * C1248) *
              C1231) *
         C51163 * C51307 * C51218 * C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[189] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C1722 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C1720 -
            (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                C1723 -
            (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                C51260) *
               C51163 * C2436 +
           ((C36506 + C36507) * C1722 + (C36508 + C36509) * C1720 -
            (C37130 + C37131) * C1723 - (C37132 + C37133) * C51260) *
               C51163 * C2437 +
           (C36806 * C1722 + C36807 * C1720 - C37143 * C1723 -
            C37144 * C51260) *
               C51163 * C2438) *
              C51218 * C51492 +
          (((C33911 + C33910) * C1723 -
            ((C33528 + C33527) * C1720 + (C33526 + C33525) * C1722) +
            (C33913 + C33912) * C51260) *
               C51163 * C2436 +
           ((C35259 + C35260) * C1723 -
            ((C33725 + C33726) * C1720 + (C33727 + C33728) * C1722) +
            (C35261 + C35262) * C51260) *
               C51163 * C2437 +
           ((C38058 + C38059) * C1723 - (C36824 * C1720 + C36825 * C1722) +
            (C38060 + C38061) * C51260) *
               C51163 * C2438) *
              C51218 * C51477 +
          (C35419 * C51163 * C2436 +
           ((C33724 + C33723) * C1722 + (C33722 + C33721) * C1720 -
            (C35264 + C35263) * C1723 - (C35266 + C35265) * C51260) *
               C51163 * C2437 +
           ((C34095 + C34096) * C1722 + (C34097 + C34098) * C1720 -
            (C33491 * C3450 + C51382 * C3455 + C33490 * C862 + C33488 * C876) *
                C1723 -
            (C33491 * C3456 + C51382 * C3459 + C33490 * C877 + C33488 * C886) *
                C51260) *
               C51163 * C2438) *
              C51218 * C1354)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C1722 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C1720 -
            (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                C1723 -
            (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                C51260) *
               C17433 +
           ((C33525 + C33526) * C1722 + (C33527 + C33528) * C1720 -
            (C33910 + C33911) * C1723 - (C33912 + C33913) * C51260) *
               C17434 +
           C35419 * C17435) *
              C51307 * C51218 * C51492 +
          (((C33911 + C33910) * C1723 -
            ((C33528 + C33527) * C1720 + (C33526 + C33525) * C1722) +
            (C33913 + C33912) * C51260) *
               C17433 +
           ((C33916 + C33915) * C1723 -
            ((C33532 + C33531) * C1720 + (C33530 + C33529) * C1722) +
            (C33918 + C33917) * C51260) *
               C17434 +
           ((C33919 + C33920) * C1723 - (C33543 * C1720 + C33544 * C1722) +
            (C33921 + C33922) * C51260) *
               C17435) *
              C51307 * C51218 * C51477 +
          (C35419 * C17433 +
           ((C33536 + C33535) * C1722 + (C33534 + C33533) * C1720 -
            (C33920 + C33919) * C1723 - (C33922 + C33921) * C51260) *
               C17434 +
           ((C33537 + C33538) * C1722 + (C33539 + C33540) * C1720 -
            (C33491 * C996 + C51382 * C1005 + C33490 * C458 + C33488 * C468) *
                C1723 -
            (C33491 * C1006 + C51382 * C1011 + C33490 * C469 + C33488 * C476) *
                C51260) *
               C17435) *
              C51307 * C51218 * C1354)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C39111 * C119 + C39107 * C126 + C39112 * C454 + C39108 * C460 +
            C39113 * C992 + C39109 * C997 + C39114 * C1236 + C39110 * C1240) *
               C1722 +
           (C39111 * C127 + C39107 * C140 + C39112 * C461 + C39108 * C472 +
            C39113 * C998 + C39109 * C1007 + C39114 * C1241 + C39110 * C1248) *
               C1720 -
           (C39114 * C6389 + C39110 * C6392 + C39113 * C1236 + C39109 * C1240 +
            C39112 * C992 + C39108 * C997 + C39111 * C454 + C39107 * C460) *
               C1723 -
           (C39114 * C6393 + C39110 * C6398 + C39113 * C1241 + C39109 * C1248 +
            C39112 * C998 + C39108 * C1007 + C39111 * C461 + C39107 * C472) *
               C51260) *
              C51163 * C51307 * C51218 * C51492 +
          ((C39111 * C455 + C39107 * C462 + C39112 * C993 + C39108 * C999 +
            C39113 * C1237 + C39109 * C1242 + C39114 * C6390 + C39110 * C6394) *
               C1723 -
           ((C39114 * C1243 + C39110 * C1249 + C39113 * C1000 + C39109 * C1008 +
             C39112 * C463 + C39108 * C473 + C39111 * C129 + C39107 * C141) *
                C1720 +
            (C39114 * C1237 + C39110 * C1242 + C39113 * C993 + C39109 * C999 +
             C39112 * C455 + C39108 * C462 + C39111 * C120 + C39107 * C128) *
                C1722) +
           (C39111 * C463 + C39107 * C473 + C39112 * C1000 + C39108 * C1008 +
            C39113 * C1243 + C39109 * C1249 + C39114 * C6395 + C39110 * C6399) *
               C51260) *
              C51163 * C51307 * C51218 * C51477 +
          ((C39111 * C121 + C39107 * C130 + C39112 * C456 + C39108 * C464 +
            C39113 * C994 + C39109 * C1001 + C39114 * C1238 + C39110 * C1244) *
               C1722 +
           (C39111 * C131 + C39107 * C142 + C39112 * C465 + C39108 * C474 +
            C39113 * C1002 + C39109 * C1009 + C39114 * C1245 + C39110 * C1250) *
               C1720 -
           (C39114 * C6391 + C39110 * C6396 + C39113 * C1238 + C39109 * C1244 +
            C39112 * C994 + C39108 * C1001 + C39111 * C456 + C39107 * C464) *
               C1723 -
           (C39114 * C6397 + C39110 * C6400 + C39113 * C1245 + C39109 * C1250 +
            C39112 * C1002 + C39108 * C1009 + C39111 * C465 + C39107 * C474) *
               C51260) *
              C51163 * C51307 * C51218 * C1354)) /
            (p * q * std::sqrt(p + q));
    d2ee[190] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                 C1722 +
             (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                 C1720 -
             (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                 C1723 -
             (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                 C51260) *
                C51163 * C2436 +
            ((C36506 + C36507) * C1722 + (C36508 + C36509) * C1720 -
             (C37130 + C37131) * C1723 - (C37132 + C37133) * C51260) *
                C51163 * C2437 +
            (C36806 * C1722 + C36807 * C1720 - C37143 * C1723 -
             C37144 * C51260) *
                C51163 * C2438) *
               C51446 +
           (((C37131 + C37130) * C1723 -
             ((C36509 + C36508) * C1720 + (C36507 + C36506) * C1722) +
             (C37133 + C37132) * C51260) *
                C51163 * C2436 +
            ((C37136 + C37135) * C1723 -
             ((C36513 + C36512) * C1720 + (C36511 + C36510) * C1722) +
             (C37138 + C37137) * C51260) *
                C51163 * C2437 +
            ((C37139 + C37140) * C1723 - (C36940 * C1720 + C36941 * C1722) +
             (C37141 + C37142) * C51260) *
                C51163 * C2438) *
               C51234) *
              C1456 +
          ((((C33911 + C33910) * C1723 -
             ((C33528 + C33527) * C1720 + (C33526 + C33525) * C1722) +
             (C33913 + C33912) * C51260) *
                C51163 * C2436 +
            ((C35259 + C35260) * C1723 -
             ((C33725 + C33726) * C1720 + (C33727 + C33728) * C1722) +
             (C35261 + C35262) * C51260) *
                C51163 * C2437 +
            ((C38058 + C38059) * C1723 - (C36824 * C1720 + C36825 * C1722) +
             (C38060 + C38061) * C51260) *
                C51163 * C2438) *
               C51446 +
           (((C33728 + C33727) * C1722 + (C33726 + C33725) * C1720 -
             (C35260 + C35259) * C1723 - (C35262 + C35261) * C51260) *
                C51163 * C2436 +
            ((C34091 + C34092) * C1722 + (C34093 + C34094) * C1720 -
             (C38059 + C38058) * C1723 - (C38061 + C38060) * C51260) *
                C51163 * C2437 +
            ((C36832 + C36833) * C1722 + (C36834 + C36835) * C1720 -
             (C33491 * C3631 + C51382 * C3634 + C33490 * C3238 +
              C33488 * C3243) *
                 C1723 -
             (C33491 * C3635 + C51382 * C3637 + C33490 * C3244 +
              C33488 * C3250) *
                 C51260) *
                C51163 * C2438) *
               C51234) *
              C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                 C1722 +
             (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                 C1720 -
             (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                 C1723 -
             (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                 C51260) *
                C17433 +
            ((C33525 + C33526) * C1722 + (C33527 + C33528) * C1720 -
             (C33910 + C33911) * C1723 - (C33912 + C33913) * C51260) *
                C17434 +
            C35419 * C17435) *
               C51307 * C51446 +
           (((C33490 * C856 + C33488 * C864 + C33491 * C1146 + C51382 * C1150) *
                 C1723 -
             ((C33491 * C865 + C51382 * C880 + C33490 * C306 + C33488 * C315) *
                  C1720 +
              (C33491 * C856 + C51382 * C864 + C33490 * C297 + C33488 * C307) *
                  C1722) +
             (C33490 * C865 + C33488 * C880 + C33491 * C1151 + C51382 * C1158) *
                 C51260) *
                C17433 +
            ((C35259 + C35260) * C1723 -
             ((C33725 + C33726) * C1720 + (C33727 + C33728) * C1722) +
             (C35261 + C35262) * C51260) *
                C17434 +
            ((C35263 + C35264) * C1723 - (C33733 * C1720 + C33734 * C1722) +
             (C35265 + C35266) * C51260) *
                C17435) *
               C51307 * C51234) *
              C1456 +
          ((((C33911 + C33910) * C1723 -
             ((C33528 + C33527) * C1720 + (C33526 + C33525) * C1722) +
             (C33913 + C33912) * C51260) *
                C17433 +
            ((C33916 + C33915) * C1723 -
             ((C33532 + C33531) * C1720 + (C33530 + C33529) * C1722) +
             (C33918 + C33917) * C51260) *
                C17434 +
            ((C33919 + C33920) * C1723 - (C33543 * C1720 + C33544 * C1722) +
             (C33921 + C33922) * C51260) *
                C17435) *
               C51307 * C51446 +
           (((C33728 + C33727) * C1722 + (C33726 + C33725) * C1720 -
             (C35260 + C35259) * C1723 - (C35262 + C35261) * C51260) *
                C17433 +
            ((C33724 + C33723) * C1722 + (C33722 + C33721) * C1720 -
             (C35264 + C35263) * C1723 - (C35266 + C35265) * C51260) *
                C17434 +
            ((C33729 + C33730) * C1722 + (C33731 + C33732) * C1720 -
             (C33491 * C1149 + C51382 * C1156 + C33490 * C859 + C33488 * C870) *
                 C1723 -
             (C33491 * C1157 + C51382 * C1161 + C33490 * C871 + C33488 * C883) *
                 C51260) *
                C17435) *
               C51307 * C51234) *
              C51191)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C39111 * C119 + C39107 * C126 + C39112 * C454 + C39108 * C460 +
             C39113 * C992 + C39109 * C997 + C39114 * C1236 + C39110 * C1240) *
                C1722 +
            (C39111 * C127 + C39107 * C140 + C39112 * C461 + C39108 * C472 +
             C39113 * C998 + C39109 * C1007 + C39114 * C1241 + C39110 * C1248) *
                C1720 -
            (C39114 * C6389 + C39110 * C6392 + C39113 * C1236 + C39109 * C1240 +
             C39112 * C992 + C39108 * C997 + C39111 * C454 + C39107 * C460) *
                C1723 -
            (C39114 * C6393 + C39110 * C6398 + C39113 * C1241 + C39109 * C1248 +
             C39112 * C998 + C39108 * C1007 + C39111 * C461 + C39107 * C472) *
                C51260) *
               C51163 * C51307 * C51446 +
           ((C39111 * C856 + C39107 * C864 + C39112 * C1146 + C39108 * C1150 +
             C39113 * C3760 + C39109 * C3764 + C39114 * C6565 +
             C39110 * C6567) *
                C1723 -
            ((C39114 * C3765 + C39110 * C3772 + C39113 * C1151 +
              C39109 * C1158 + C39112 * C865 + C39108 * C880 + C39111 * C306 +
              C39107 * C315) *
                 C1720 +
             (C39114 * C3760 + C39110 * C3764 + C39113 * C1146 +
              C39109 * C1150 + C39112 * C856 + C39108 * C864 + C39111 * C297 +
              C39107 * C307) *
                 C1722) +
            (C39111 * C865 + C39107 * C880 + C39112 * C1151 + C39108 * C1158 +
             C39113 * C3765 + C39109 * C3772 + C39114 * C6568 +
             C39110 * C6571) *
                C51260) *
               C51163 * C51307 * C51234) *
              C1456 +
          (((C39111 * C455 + C39107 * C462 + C39112 * C993 + C39108 * C999 +
             C39113 * C1237 + C39109 * C1242 + C39114 * C6390 +
             C39110 * C6394) *
                C1723 -
            ((C39114 * C1243 + C39110 * C1249 + C39113 * C1000 +
              C39109 * C1008 + C39112 * C463 + C39108 * C473 + C39111 * C129 +
              C39107 * C141) *
                 C1720 +
             (C39114 * C1237 + C39110 * C1242 + C39113 * C993 + C39109 * C999 +
              C39112 * C455 + C39108 * C462 + C39111 * C120 + C39107 * C128) *
                 C1722) +
            (C39111 * C463 + C39107 * C473 + C39112 * C1000 + C39108 * C1008 +
             C39113 * C1243 + C39109 * C1249 + C39114 * C6395 +
             C39110 * C6399) *
                C51260) *
               C51163 * C51307 * C51446 +
           ((C39111 * C296 + C39107 * C305 + C39112 * C857 + C39108 * C866 +
             C39113 * C1147 + C39109 * C1152 + C39114 * C3761 +
             C39110 * C3766) *
                C1722 +
            (C39111 * C304 + C39107 * C314 + C39112 * C867 + C39108 * C881 +
             C39113 * C1153 + C39109 * C1159 + C39114 * C3767 +
             C39110 * C3773) *
                C1720 -
            (C39114 * C6566 + C39110 * C6569 + C39113 * C3761 + C39109 * C3766 +
             C39112 * C1147 + C39108 * C1152 + C39111 * C857 + C39107 * C866) *
                C1723 -
            (C39114 * C6570 + C39110 * C6572 + C39113 * C3767 + C39109 * C3773 +
             C39112 * C1153 + C39108 * C1159 + C39111 * C867 + C39107 * C881) *
                C51260) *
               C51163 * C51307 * C51234) *
              C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[191] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C1989 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C51494 -
            (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                C1990 -
            (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                C51483 +
            (C33490 * C992 + C33488 * C997 + C33491 * C1236 + C51382 * C1240) *
                C1991 +
            (C33490 * C998 + C33488 * C1007 + C33491 * C1241 + C51382 * C1248) *
                C1988) *
               C51163 * C2436 +
           ((C36506 + C36507) * C1989 + (C36508 + C36509) * C51494 -
            (C37130 + C37131) * C1990 - (C37132 + C37133) * C51483 +
            (C37458 + C37459) * C1991 + (C37460 + C37461) * C1988) *
               C51163 * C2437 +
           (C36806 * C1989 + C36807 * C51494 - C37143 * C1990 -
            C37144 * C51483 + (C37462 + C37463) * C1991 +
            (C37464 + C37465) * C1988) *
               C51163 * C2438) *
              C51218 * C1456 +
          (((C33911 + C33910) * C1990 -
            ((C33528 + C33527) * C51494 + (C33526 + C33525) * C1989) +
            (C33913 + C33912) * C51483 - (C34506 + C34505) * C1991 -
            (C34508 + C34507) * C1988) *
               C51163 * C2436 +
           ((C35259 + C35260) * C1990 -
            ((C33725 + C33726) * C51494 + (C33727 + C33728) * C1989) +
            (C35261 + C35262) * C51483 -
            (C33491 * C3761 + C51382 * C3766 + C33490 * C1147 +
             C33488 * C1152) *
                C1991 -
            (C33491 * C3767 + C51382 * C3773 + C33490 * C1153 +
             C33488 * C1159) *
                C1988) *
               C51163 * C2437 +
           ((C38058 + C38059) * C1990 - (C36824 * C51494 + C36825 * C1989) +
            (C38060 + C38061) * C51483 -
            (C33491 * C3763 + C51382 * C3770 + C33490 * C3449 +
             C33488 * C3453) *
                C1991 -
            (C33491 * C3771 + C51382 * C3775 + C33490 * C3454 +
             C33488 * C3458) *
                C1988) *
               C51163 * C2438) *
              C51218 * C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C1989 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C51494 -
            (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                C1990 -
            (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                C51483 +
            (C33490 * C992 + C33488 * C997 + C33491 * C1236 + C51382 * C1240) *
                C1991 +
            (C33490 * C998 + C33488 * C1007 + C33491 * C1241 + C51382 * C1248) *
                C1988) *
               C17433 +
           ((C33525 + C33526) * C1989 + (C33527 + C33528) * C51494 -
            (C33910 + C33911) * C1990 - (C33912 + C33913) * C51483 +
            (C34505 + C34506) * C1991 + (C34507 + C34508) * C1988) *
               C17434 +
           (C33541 * C1989 + C33542 * C51494 - C33923 * C1990 -
            C33924 * C51483 + (C34509 + C34510) * C1991 +
            (C34511 + C34512) * C1988) *
               C17435) *
              C51307 * C51218 * C1456 +
          (((C33911 + C33910) * C1990 -
            ((C33528 + C33527) * C51494 + (C33526 + C33525) * C1989) +
            (C33913 + C33912) * C51483 - (C34506 + C34505) * C1991 -
            (C34508 + C34507) * C1988) *
               C17433 +
           ((C33916 + C33915) * C1990 -
            ((C33532 + C33531) * C51494 + (C33530 + C33529) * C1989) +
            (C33918 + C33917) * C51483 - (C34510 + C34509) * C1991 -
            (C34512 + C34511) * C1988) *
               C17434 +
           ((C33919 + C33920) * C1990 - (C33543 * C51494 + C33544 * C1989) +
            (C33921 + C33922) * C51483 -
            (C33491 * C1239 + C51382 * C1246 + C33490 * C995 + C33488 * C1003) *
                C1991 -
            (C33491 * C1247 + C51382 * C1251 + C33490 * C1004 +
             C33488 * C1010) *
                C1988) *
               C17435) *
              C51307 * C51218 * C51191)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C39111 * C119 + C39107 * C126 + C39112 * C454 + C39108 * C460 +
            C39113 * C992 + C39109 * C997 + C39114 * C1236 + C39110 * C1240) *
               C1989 +
           (C39111 * C127 + C39107 * C140 + C39112 * C461 + C39108 * C472 +
            C39113 * C998 + C39109 * C1007 + C39114 * C1241 + C39110 * C1248) *
               C51494 -
           (C39114 * C6389 + C39110 * C6392 + C39113 * C1236 + C39109 * C1240 +
            C39112 * C992 + C39108 * C997 + C39111 * C454 + C39107 * C460) *
               C1990 -
           (C39114 * C6393 + C39110 * C6398 + C39113 * C1241 + C39109 * C1248 +
            C39112 * C998 + C39108 * C1007 + C39111 * C461 + C39107 * C472) *
               C51483 +
           (C39111 * C992 + C39107 * C997 + C39112 * C1236 + C39108 * C1240 +
            C39113 * C6389 + C39109 * C6392 + C39114 * C6671 + C39110 * C6673) *
               C1991 +
           (C39111 * C998 + C39107 * C1007 + C39112 * C1241 + C39108 * C1248 +
            C39113 * C6393 + C39109 * C6398 + C39114 * C6674 + C39110 * C6677) *
               C1988) *
              C51163 * C51307 * C51218 * C1456 +
          ((C39111 * C455 + C39107 * C462 + C39112 * C993 + C39108 * C999 +
            C39113 * C1237 + C39109 * C1242 + C39114 * C6390 + C39110 * C6394) *
               C1990 -
           ((C39114 * C1243 + C39110 * C1249 + C39113 * C1000 + C39109 * C1008 +
             C39112 * C463 + C39108 * C473 + C39111 * C129 + C39107 * C141) *
                C51494 +
            (C39114 * C1237 + C39110 * C1242 + C39113 * C993 + C39109 * C999 +
             C39112 * C455 + C39108 * C462 + C39111 * C120 + C39107 * C128) *
                C1989) +
           (C39111 * C463 + C39107 * C473 + C39112 * C1000 + C39108 * C1008 +
            C39113 * C1243 + C39109 * C1249 + C39114 * C6395 + C39110 * C6399) *
               C51483 -
           (C39114 * C6672 + C39110 * C6675 + C39113 * C6390 + C39109 * C6394 +
            C39112 * C1237 + C39108 * C1242 + C39111 * C993 + C39107 * C999) *
               C1991 -
           (C39114 * C6676 + C39110 * C6678 + C39113 * C6395 + C39109 * C6399 +
            C39112 * C1243 + C39108 * C1249 + C39111 * C1000 + C39107 * C1008) *
               C1988) *
              C51163 * C51307 * C51218 * C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                 C51248) *
                C17433 +
            ((C33525 + C33526) * C118 + (C33527 + C33528) * C51248) * C17434 +
            C33549 * C17435) *
               C51307 * C622 -
           (C33737 * C17435 +
            ((C33725 + C33726) * C51248 + (C33727 + C33728) * C118) * C17434 +
            ((C33491 * C865 + C51382 * C880 + C33490 * C306 + C33488 * C315) *
                 C51248 +
             (C33491 * C856 + C51382 * C864 + C33490 * C297 + C33488 * C307) *
                 C118) *
                C17433) *
               C51307 * C623 +
           (((C33490 * C627 + C33488 * C632 + C33491 * C860 + C51382 * C872) *
                 C118 +
             (C33490 * C633 + C33488 * C642 + C33491 * C873 + C51382 * C884) *
                 C51248) *
                C17433 +
            ((C34091 + C34092) * C118 + (C34093 + C34094) * C51248) * C17434 +
            ((C34095 + C34096) * C118 + (C34097 + C34098) * C51248) * C17435) *
               C51307 * C624) *
              C51439 +
          ((((C33728 + C33727) * C118 + (C33726 + C33725) * C51248) * C17433 +
            ((C33724 + C33723) * C118 + (C33722 + C33721) * C51248) * C17434 +
            ((C33729 + C33730) * C118 + (C33731 + C33732) * C51248) * C17435) *
               C51307 * C623 -
           (C33550 * C17435 +
            ((C33532 + C33531) * C51248 + (C33530 + C33529) * C118) * C17434 +
            ((C33528 + C33527) * C51248 + (C33526 + C33525) * C118) * C17433) *
               C51307 * C622 -
           (((C33491 * C879 + C51382 * C887 + C33490 * C639 + C33488 * C645) *
                 C51248 +
             (C33491 * C863 + C51382 * C878 + C33490 * C630 + C33488 * C638) *
                 C118) *
                C17435 +
            ((C34098 + C34097) * C51248 + (C34096 + C34095) * C118) * C17434 +
            ((C34094 + C34093) * C51248 + (C34092 + C34091) * C118) * C17433) *
               C51307 * C624) *
              C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C118 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C51248) *
               C17433 +
           ((C33525 + C33526) * C118 + (C33527 + C33528) * C51248) * C17434 +
           C33549 * C17435) *
              C51307 * C51218 * C113 -
          (C33550 * C17435 +
           ((C33532 + C33531) * C51248 + (C33530 + C33529) * C118) * C17434 +
           ((C33528 + C33527) * C51248 + (C33526 + C33525) * C118) * C17433) *
              C51307 * C51218 * C114 +
          (C33549 * C17433 +
           ((C33536 + C33535) * C118 + (C33534 + C33533) * C51248) * C17434 +
           ((C33537 + C33538) * C118 + (C33539 + C33540) * C51248) * C17435) *
              C51307 * C51218 * C115 -
          (((C33491 * C471 + C51382 * C477 + C33490 * C137 + C33488 * C145) *
                C51248 +
            (C33491 * C459 + C51382 * C470 + C33490 * C124 + C33488 * C136) *
                C118) *
               C17435 +
           ((C33540 + C33539) * C51248 + (C33538 + C33537) * C118) * C17434 +
           C33550 * C17433) *
              C51307 * C51218 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C118 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C51248) *
               C51163 * C2436 +
           ((C33490 * C297 + C33488 * C307 + C33491 * C856 + C51382 * C864) *
                C118 +
            (C33490 * C306 + C33488 * C315 + C33491 * C865 + C51382 * C880) *
                C51248) *
               C51163 * C2437 +
           ((C33490 * C627 + C33488 * C632 + C33491 * C860 + C51382 * C872) *
                C118 +
            (C33490 * C633 + C33488 * C642 + C33491 * C873 + C51382 * C884) *
                C51248) *
               C51163 * C2438) *
              C51218 * C113 -
          (((C34094 + C34093) * C51248 + (C34092 + C34091) * C118) * C51163 *
               C2438 +
           ((C33725 + C33726) * C51248 + (C33727 + C33728) * C118) * C51163 *
               C2437 +
           ((C33528 + C33527) * C51248 + (C33526 + C33525) * C118) * C51163 *
               C2436) *
              C51218 * C114 +
          (C33549 * C51163 * C2436 +
           ((C33724 + C33723) * C118 + (C33722 + C33721) * C51248) * C51163 *
               C2437 +
           ((C34095 + C34096) * C118 + (C34097 + C34098) * C51248) * C51163 *
               C2438) *
              C51218 * C115 -
          (((C33491 * C879 + C51382 * C887 + C33490 * C639 + C33488 * C645) *
                C51248 +
            (C33491 * C863 + C51382 * C878 + C33490 * C630 + C33488 * C638) *
                C118) *
               C51163 * C2438 +
           ((C33732 + C33731) * C51248 + (C33730 + C33729) * C118) * C51163 *
               C2437 +
           C33550 * C51163 * C2436) *
              C51218 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                 C51248) *
                C51163 * C2436 +
            ((C36506 + C36507) * C118 + (C36508 + C36509) * C51248) * C51163 *
                C2437 +
            C36840 * C2438) *
               C622 -
           (((C36828 + C36829) * C51248 + (C36830 + C36831) * C118) * C51163 *
                C2438 +
            ((C36513 + C36512) * C51248 + (C36511 + C36510) * C118) * C51163 *
                C2437 +
            ((C36509 + C36508) * C51248 + (C36507 + C36506) * C118) * C51163 *
                C2436) *
               C623 +
           (C36840 * C2436 +
            ((C36831 + C36830) * C118 + (C36829 + C36828) * C51248) * C51163 *
                C2437 +
            ((C33490 * C2936 + C33488 * C2939 + C33491 * C3239 +
              C51382 * C3245) *
                 C118 +
             (C33490 * C2940 + C33488 * C2945 + C33491 * C3246 +
              C51382 * C3251) *
                 C51248) *
                C51163 * C2438) *
               C624) *
              C51439 +
          ((((C33728 + C33727) * C118 + (C33726 + C33725) * C51248) * C51163 *
                C2436 +
            ((C34091 + C34092) * C118 + (C34093 + C34094) * C51248) * C51163 *
                C2437 +
            ((C36832 + C36833) * C118 + (C36834 + C36835) * C51248) * C51163 *
                C2438) *
               C623 -
           (C36841 * C2438 +
            ((C33725 + C33726) * C51248 + (C33727 + C33728) * C118) * C51163 *
                C2437 +
            ((C33528 + C33527) * C51248 + (C33526 + C33525) * C118) * C51163 *
                C2436) *
               C622 -
           (((C33491 * C3248 + C51382 * C3252 + C33490 * C2942 +
              C33488 * C2946) *
                 C51248 +
             (C33491 * C3240 + C51382 * C3247 + C33490 * C2937 +
              C33488 * C2941) *
                 C118) *
                C51163 * C2438 +
            ((C36835 + C36834) * C51248 + (C36833 + C36832) * C118) * C51163 *
                C2437 +
            C36841 * C2436) *
               C624) *
              C51191)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C39111 * C119 + C39107 * C126 + C39112 * C454 + C39108 * C460 +
            C39113 * C992 + C39109 * C997 + C39114 * C1236 + C39110 * C1240) *
               C118 +
           (C39111 * C127 + C39107 * C140 + C39112 * C461 + C39108 * C472 +
            C39113 * C998 + C39109 * C1007 + C39114 * C1241 + C39110 * C1248) *
               C51248) *
              C51163 * C51307 * C51218 * C113 -
          ((C39114 * C1243 + C39110 * C1249 + C39113 * C1000 + C39109 * C1008 +
            C39112 * C463 + C39108 * C473 + C39111 * C129 + C39107 * C141) *
               C51248 +
           (C39114 * C1237 + C39110 * C1242 + C39113 * C993 + C39109 * C999 +
            C39112 * C455 + C39108 * C462 + C39111 * C120 + C39107 * C128) *
               C118) *
              C51163 * C51307 * C51218 * C114 +
          ((C39111 * C121 + C39107 * C130 + C39112 * C456 + C39108 * C464 +
            C39113 * C994 + C39109 * C1001 + C39114 * C1238 + C39110 * C1244) *
               C118 +
           (C39111 * C131 + C39107 * C142 + C39112 * C465 + C39108 * C474 +
            C39113 * C1002 + C39109 * C1009 + C39114 * C1245 + C39110 * C1250) *
               C51248) *
              C51163 * C51307 * C51218 * C115 -
          ((C39114 * C1247 + C39110 * C1251 + C39113 * C1004 + C39109 * C1010 +
            C39112 * C467 + C39108 * C475 + C39111 * C133 + C39107 * C143) *
               C51248 +
           (C39114 * C1239 + C39110 * C1246 + C39113 * C995 + C39109 * C1003 +
            C39112 * C457 + C39108 * C466 + C39111 * C122 + C39107 * C132) *
               C118) *
              C51163 * C51307 * C51218 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C39111 * C119 + C39107 * C126 + C39112 * C454 + C39108 * C460 +
             C39113 * C992 + C39109 * C997 + C39114 * C1236 + C39110 * C1240) *
                C118 +
            (C39111 * C127 + C39107 * C140 + C39112 * C461 + C39108 * C472 +
             C39113 * C998 + C39109 * C1007 + C39114 * C1241 + C39110 * C1248) *
                C51248) *
               C51163 * C51307 * C622 -
           ((C39114 * C3765 + C39110 * C3772 + C39113 * C1151 + C39109 * C1158 +
             C39112 * C865 + C39108 * C880 + C39111 * C306 + C39107 * C315) *
                C51248 +
            (C39114 * C3760 + C39110 * C3764 + C39113 * C1146 + C39109 * C1150 +
             C39112 * C856 + C39108 * C864 + C39111 * C297 + C39107 * C307) *
                C118) *
               C51163 * C51307 * C623 +
           ((C39111 * C627 + C39107 * C632 + C39112 * C860 + C39108 * C872 +
             C39113 * C3448 + C39109 * C3451 + C39114 * C3762 +
             C39110 * C3768) *
                C118 +
            (C39111 * C633 + C39107 * C642 + C39112 * C873 + C39108 * C884 +
             C39113 * C3452 + C39109 * C3457 + C39114 * C3769 +
             C39110 * C3774) *
                C51248) *
               C51163 * C51307 * C624) *
              C51439 +
          (((C39111 * C296 + C39107 * C305 + C39112 * C857 + C39108 * C866 +
             C39113 * C1147 + C39109 * C1152 + C39114 * C3761 +
             C39110 * C3766) *
                C118 +
            (C39111 * C304 + C39107 * C314 + C39112 * C867 + C39108 * C881 +
             C39113 * C1153 + C39109 * C1159 + C39114 * C3767 +
             C39110 * C3773) *
                C51248) *
               C51163 * C51307 * C623 -
           ((C39114 * C1243 + C39110 * C1249 + C39113 * C1000 + C39109 * C1008 +
             C39112 * C463 + C39108 * C473 + C39111 * C129 + C39107 * C141) *
                C51248 +
            (C39114 * C1237 + C39110 * C1242 + C39113 * C993 + C39109 * C999 +
             C39112 * C455 + C39108 * C462 + C39111 * C120 + C39107 * C128) *
                C118) *
               C51163 * C51307 * C622 -
           ((C39114 * C3771 + C39110 * C3775 + C39113 * C3454 + C39109 * C3458 +
             C39112 * C875 + C39108 * C885 + C39111 * C635 + C39107 * C643) *
                C51248 +
            (C39114 * C3763 + C39110 * C3770 + C39113 * C3449 + C39109 * C3453 +
             C39112 * C861 + C39108 * C874 + C39111 * C628 + C39107 * C634) *
                C118) *
               C51163 * C51307 * C624) *
              C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[193] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C118 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C51248) *
               C17433 +
           ((C33525 + C33526) * C118 + (C33527 + C33528) * C51248) * C17434 +
           C33549 * C17435) *
              C51307 * C737 -
          (C33737 * C17435 +
           ((C33725 + C33726) * C51248 + (C33727 + C33728) * C118) * C17434 +
           ((C33491 * C865 + C51382 * C880 + C33490 * C306 + C33488 * C315) *
                C51248 +
            (C33491 * C856 + C51382 * C864 + C33490 * C297 + C33488 * C307) *
                C118) *
               C17433) *
              C51307 * C738 +
          (((C33490 * C627 + C33488 * C632 + C33491 * C860 + C51382 * C872) *
                C118 +
            (C33490 * C633 + C33488 * C642 + C33491 * C873 + C51382 * C884) *
                C51248) *
               C17433 +
           ((C34091 + C34092) * C118 + (C34093 + C34094) * C51248) * C17434 +
           ((C34095 + C34096) * C118 + (C34097 + C34098) * C51248) * C17435) *
              C51307 * C739 -
          (((C33491 * C4264 + C51382 * C4265 + C33490 * C748 + C33488 * C755) *
                C51248 +
            (C33491 * C4262 + C51382 * C4263 + C33490 * C743 + C33488 * C749) *
                C118) *
               C17435 +
           ((C33491 * C3244 + C51382 * C3250 + C33490 * C750 + C33488 * C756) *
                C51248 +
            (C33491 * C3238 + C51382 * C3243 + C33490 * C744 + C33488 * C751) *
                C118) *
               C17434 +
           ((C33491 * C3242 + C51382 * C3249 + C33490 * C752 + C33488 * C757) *
                C51248 +
            (C33491 * C3237 + C51382 * C3241 + C33490 * C745 + C33488 * C753) *
                C118) *
               C17433) *
              C51307 * C740) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                 C51248) *
                C17433 +
            ((C33525 + C33526) * C118 + (C33527 + C33528) * C51248) * C17434 +
            C33549 * C17435) *
               C51307 * C51446 -
           (C33737 * C17435 +
            ((C33725 + C33726) * C51248 + (C33727 + C33728) * C118) * C17434 +
            ((C33491 * C865 + C51382 * C880 + C33490 * C306 + C33488 * C315) *
                 C51248 +
             (C33491 * C856 + C51382 * C864 + C33490 * C297 + C33488 * C307) *
                 C118) *
                C17433) *
               C51307 * C51234) *
              C291 +
          ((((C33728 + C33727) * C118 + (C33726 + C33725) * C51248) * C17433 +
            ((C33724 + C33723) * C118 + (C33722 + C33721) * C51248) * C17434 +
            ((C33729 + C33730) * C118 + (C33731 + C33732) * C51248) * C17435) *
               C51307 * C51234 -
           (C33550 * C17435 +
            ((C33532 + C33531) * C51248 + (C33530 + C33529) * C118) * C17434 +
            ((C33528 + C33527) * C51248 + (C33526 + C33525) * C118) * C17433) *
               C51307 * C51446) *
              C292 +
          ((C33549 * C17433 +
            ((C33536 + C33535) * C118 + (C33534 + C33533) * C51248) * C17434 +
            ((C33537 + C33538) * C118 + (C33539 + C33540) * C51248) * C17435) *
               C51307 * C51446 -
           (((C33491 * C1590 + C51382 * C1591 + C33490 * C309 + C33488 * C316) *
                 C51248 +
             (C33491 * C1588 + C51382 * C1589 + C33490 * C298 + C33488 * C308) *
                 C118) *
                C17435 +
            ((C33732 + C33731) * C51248 + (C33730 + C33729) * C118) * C17434 +
            C33737 * C17433) *
               C51307 * C51234) *
              C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                 C51248) *
                C51163 * C2436 +
            ((C36506 + C36507) * C118 + (C36508 + C36509) * C51248) * C51163 *
                C2437 +
            ((C36510 + C36511) * C118 + (C36512 + C36513) * C51248) * C51163 *
                C2438) *
               C51446 -
           (((C33491 * C3242 + C51382 * C3249 + C33490 * C752 + C33488 * C757) *
                 C51248 +
             (C33491 * C3237 + C51382 * C3241 + C33490 * C745 + C33488 * C753) *
                 C118) *
                C51163 * C2438 +
            ((C36513 + C36512) * C51248 + (C36511 + C36510) * C118) * C51163 *
                C2437 +
            ((C36509 + C36508) * C51248 + (C36507 + C36506) * C118) * C51163 *
                C2436) *
               C51234) *
              C291 +
          ((((C33728 + C33727) * C118 + (C33726 + C33725) * C51248) * C51163 *
                C2436 +
            ((C34091 + C34092) * C118 + (C34093 + C34094) * C51248) * C51163 *
                C2437 +
            ((C33490 * C744 + C33488 * C751 + C33491 * C3238 + C51382 * C3243) *
                 C118 +
             (C33490 * C750 + C33488 * C756 + C33491 * C3244 + C51382 * C3250) *
                 C51248) *
                C51163 * C2438) *
               C51234 -
           (((C34094 + C34093) * C51248 + (C34092 + C34091) * C118) * C51163 *
                C2438 +
            ((C33725 + C33726) * C51248 + (C33727 + C33728) * C118) * C51163 *
                C2437 +
            ((C33528 + C33527) * C51248 + (C33526 + C33525) * C118) * C51163 *
                C2436) *
               C51446) *
              C292 +
          ((C33549 * C51163 * C2436 +
            ((C33724 + C33723) * C118 + (C33722 + C33721) * C51248) * C51163 *
                C2437 +
            ((C34095 + C34096) * C118 + (C34097 + C34098) * C51248) * C51163 *
                C2438) *
               C51446 -
           (((C33491 * C4264 + C51382 * C4265 + C33490 * C748 + C33488 * C755) *
                 C51248 +
             (C33491 * C4262 + C51382 * C4263 + C33490 * C743 + C33488 * C749) *
                 C118) *
                C51163 * C2438 +
            ((C34098 + C34097) * C51248 + (C34096 + C34095) * C118) * C51163 *
                C2437 +
            C33737 * C51163 * C2436) *
               C51234) *
              C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C118 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C51248) *
               C51163 * C2436 +
           ((C36506 + C36507) * C118 + (C36508 + C36509) * C51248) * C51163 *
               C2437 +
           C36840 * C2438) *
              C737 -
          (C36957 * C2438 +
           ((C36513 + C36512) * C51248 + (C36511 + C36510) * C118) * C51163 *
               C2437 +
           ((C36509 + C36508) * C51248 + (C36507 + C36506) * C118) * C51163 *
               C2436) *
              C738 +
          (C36840 * C2436 +
           ((C36831 + C36830) * C118 + (C36829 + C36828) * C51248) * C51163 *
               C2437 +
           ((C36952 + C36953) * C118 + (C36954 + C36955) * C51248) * C51163 *
               C2438) *
              C739 -
          (((C33491 * C20519 + C51382 * C20520 + C33490 * C3075 +
             C33488 * C3078) *
                C51248 +
            (C33491 * C20517 + C51382 * C20518 + C33490 * C3072 +
             C33488 * C3076) *
                C118) *
               C51163 * C2438 +
           ((C36955 + C36954) * C51248 + (C36953 + C36952) * C118) * C51163 *
               C2437 +
           C36957 * C2436) *
              C740) *
         C51186) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C39111 * C119 + C39107 * C126 + C39112 * C454 + C39108 * C460 +
             C39113 * C992 + C39109 * C997 + C39114 * C1236 + C39110 * C1240) *
                C118 +
            (C39111 * C127 + C39107 * C140 + C39112 * C461 + C39108 * C472 +
             C39113 * C998 + C39109 * C1007 + C39114 * C1241 + C39110 * C1248) *
                C51248) *
               C51163 * C51307 * C51446 -
           ((C39114 * C3765 + C39110 * C3772 + C39113 * C1151 + C39109 * C1158 +
             C39112 * C865 + C39108 * C880 + C39111 * C306 + C39107 * C315) *
                C51248 +
            (C39114 * C3760 + C39110 * C3764 + C39113 * C1146 + C39109 * C1150 +
             C39112 * C856 + C39108 * C864 + C39111 * C297 + C39107 * C307) *
                C118) *
               C51163 * C51307 * C51234) *
              C291 +
          (((C39111 * C296 + C39107 * C305 + C39112 * C857 + C39108 * C866 +
             C39113 * C1147 + C39109 * C1152 + C39114 * C3761 +
             C39110 * C3766) *
                C118 +
            (C39111 * C304 + C39107 * C314 + C39112 * C867 + C39108 * C881 +
             C39113 * C1153 + C39109 * C1159 + C39114 * C3767 +
             C39110 * C3773) *
                C51248) *
               C51163 * C51307 * C51234 -
           ((C39114 * C1243 + C39110 * C1249 + C39113 * C1000 + C39109 * C1008 +
             C39112 * C463 + C39108 * C473 + C39111 * C129 + C39107 * C141) *
                C51248 +
            (C39114 * C1237 + C39110 * C1242 + C39113 * C993 + C39109 * C999 +
             C39112 * C455 + C39108 * C462 + C39111 * C120 + C39107 * C128) *
                C118) *
               C51163 * C51307 * C51446) *
              C292 +
          (((C39111 * C121 + C39107 * C130 + C39112 * C456 + C39108 * C464 +
             C39113 * C994 + C39109 * C1001 + C39114 * C1238 + C39110 * C1244) *
                C118 +
            (C39111 * C131 + C39107 * C142 + C39112 * C465 + C39108 * C474 +
             C39113 * C1002 + C39109 * C1009 + C39114 * C1245 +
             C39110 * C1250) *
                C51248) *
               C51163 * C51307 * C51446 -
           ((C39114 * C7167 + C39110 * C7168 + C39113 * C1155 + C39109 * C1160 +
             C39112 * C869 + C39108 * C882 + C39111 * C302 + C39107 * C313) *
                C51248 +
            (C39114 * C7165 + C39110 * C7166 + C39113 * C1148 + C39109 * C1154 +
             C39112 * C858 + C39108 * C868 + C39111 * C295 + C39107 * C303) *
                C118) *
               C51163 * C51307 * C51234) *
              C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C39111 * C119 + C39107 * C126 + C39112 * C454 + C39108 * C460 +
            C39113 * C992 + C39109 * C997 + C39114 * C1236 + C39110 * C1240) *
               C118 +
           (C39111 * C127 + C39107 * C140 + C39112 * C461 + C39108 * C472 +
            C39113 * C998 + C39109 * C1007 + C39114 * C1241 + C39110 * C1248) *
               C51248) *
              C51163 * C51307 * C737 -
          ((C39114 * C3765 + C39110 * C3772 + C39113 * C1151 + C39109 * C1158 +
            C39112 * C865 + C39108 * C880 + C39111 * C306 + C39107 * C315) *
               C51248 +
           (C39114 * C3760 + C39110 * C3764 + C39113 * C1146 + C39109 * C1150 +
            C39112 * C856 + C39108 * C864 + C39111 * C297 + C39107 * C307) *
               C118) *
              C51163 * C51307 * C738 +
          ((C39111 * C627 + C39107 * C632 + C39112 * C860 + C39108 * C872 +
            C39113 * C3448 + C39109 * C3451 + C39114 * C3762 + C39110 * C3768) *
               C118 +
           (C39111 * C633 + C39107 * C642 + C39112 * C873 + C39108 * C884 +
            C39113 * C3452 + C39109 * C3457 + C39114 * C3769 + C39110 * C3774) *
               C51248) *
              C51163 * C51307 * C739 -
          ((C39114 * C20816 + C39110 * C20817 + C39113 * C3633 +
            C39109 * C3636 + C39112 * C3242 + C39108 * C3249 + C39111 * C752 +
            C39107 * C757) *
               C51248 +
           (C39114 * C20814 + C39110 * C20815 + C39113 * C3630 +
            C39109 * C3632 + C39112 * C3237 + C39108 * C3241 + C39111 * C745 +
            C39107 * C753) *
               C118) *
              C51163 * C51307 * C740) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[194] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C452 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C51448 -
            (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                C453 -
            (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                C51260) *
               C17433 +
           ((C33525 + C33526) * C452 + (C33527 + C33528) * C51448 -
            (C33910 + C33911) * C453 - (C33912 + C33913) * C51260) *
               C17434 +
           C33928 * C17435) *
              C51307 * C622 +
          (((C33490 * C856 + C33488 * C864 + C33491 * C1146 + C51382 * C1150) *
                C453 -
            ((C33491 * C865 + C51382 * C880 + C33490 * C306 + C33488 * C315) *
                 C51448 +
             (C33491 * C856 + C51382 * C864 + C33490 * C297 + C33488 * C307) *
                 C452) +
            (C33490 * C865 + C33488 * C880 + C33491 * C1151 + C51382 * C1158) *
                C51260) *
               C17433 +
           ((C33490 * C857 + C33488 * C866 + C33491 * C1147 + C51382 * C1152) *
                C453 -
            ((C33725 + C33726) * C51448 + (C33727 + C33728) * C452) +
            (C33490 * C867 + C33488 * C881 + C33491 * C1153 + C51382 * C1159) *
                C51260) *
               C17434 +
           ((C33490 * C858 + C33488 * C868 + C33491 * C1148 + C51382 * C1154) *
                C453 -
            (C33733 * C51448 + C33734 * C452) +
            (C33490 * C869 + C33488 * C882 + C33491 * C1155 + C51382 * C1160) *
                C51260) *
               C17435) *
              C51307 * C623 +
          (((C33490 * C627 + C33488 * C632 + C33491 * C860 + C51382 * C872) *
                C452 +
            (C33490 * C633 + C33488 * C642 + C33491 * C873 + C51382 * C884) *
                C51448 -
            (C33491 * C3448 + C51382 * C3451 + C33490 * C860 + C33488 * C872) *
                C453 -
            (C33491 * C3452 + C51382 * C3457 + C33490 * C873 + C33488 * C884) *
                C51260) *
               C17433 +
           ((C34091 + C34092) * C452 + (C34093 + C34094) * C51448 -
            (C33491 * C3449 + C51382 * C3453 + C33490 * C861 + C33488 * C874) *
                C453 -
            (C33491 * C3454 + C51382 * C3458 + C33490 * C875 + C33488 * C885) *
                C51260) *
               C17434 +
           ((C34095 + C34096) * C452 + (C34097 + C34098) * C51448 -
            (C33491 * C3450 + C51382 * C3455 + C33490 * C862 + C33488 * C876) *
                C453 -
            (C33491 * C3456 + C51382 * C3459 + C33490 * C877 + C33488 * C886) *
                C51260) *
               C17435) *
              C51307 * C624) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C452 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C51448 -
            (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                C453 -
            (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                C51260) *
               C17433 +
           ((C33525 + C33526) * C452 + (C33527 + C33528) * C51448 -
            (C33910 + C33911) * C453 - (C33912 + C33913) * C51260) *
               C17434 +
           C33928 * C17435) *
              C51307 * C51218 * C291 +
          (((C33911 + C33910) * C453 -
            ((C33528 + C33527) * C51448 + (C33526 + C33525) * C452) +
            (C33913 + C33912) * C51260) *
               C17433 +
           ((C33916 + C33915) * C453 -
            ((C33532 + C33531) * C51448 + (C33530 + C33529) * C452) +
            (C33918 + C33917) * C51260) *
               C17434 +
           ((C33919 + C33920) * C453 - (C33543 * C51448 + C33544 * C452) +
            (C33921 + C33922) * C51260) *
               C17435) *
              C51307 * C51218 * C292 +
          (C33928 * C17433 +
           ((C33536 + C33535) * C452 + (C33534 + C33533) * C51448 -
            (C33920 + C33919) * C453 - (C33922 + C33921) * C51260) *
               C17434 +
           ((C33537 + C33538) * C452 + (C33539 + C33540) * C51448 -
            (C33491 * C996 + C51382 * C1005 + C33490 * C458 + C33488 * C468) *
                C453 -
            (C33491 * C1006 + C51382 * C1011 + C33490 * C469 + C33488 * C476) *
                C51260) *
               C17435) *
              C51307 * C51218 * C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C452 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C51448 -
            (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                C453 -
            (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                C51260) *
               C51163 * C2436 +
           ((C36506 + C36507) * C452 + (C36508 + C36509) * C51448 -
            (C33491 * C1146 + C51382 * C1150 + C33490 * C856 + C33488 * C864) *
                C453 -
            (C33491 * C1151 + C51382 * C1158 + C33490 * C865 + C33488 * C880) *
                C51260) *
               C51163 * C2437 +
           ((C36510 + C36511) * C452 + (C36512 + C36513) * C51448 -
            (C33491 * C3448 + C51382 * C3451 + C33490 * C860 + C33488 * C872) *
                C453 -
            (C33491 * C3452 + C51382 * C3457 + C33490 * C873 + C33488 * C884) *
                C51260) *
               C51163 * C2438) *
              C51218 * C291 +
          (((C33911 + C33910) * C453 -
            ((C33528 + C33527) * C51448 + (C33526 + C33525) * C452) +
            (C33913 + C33912) * C51260) *
               C51163 * C2436 +
           ((C35259 + C35260) * C453 -
            ((C33725 + C33726) * C51448 + (C33727 + C33728) * C452) +
            (C35261 + C35262) * C51260) *
               C51163 * C2437 +
           ((C33490 * C861 + C33488 * C874 + C33491 * C3449 + C51382 * C3453) *
                C453 -
            ((C34094 + C34093) * C51448 + (C34092 + C34091) * C452) +
            (C33490 * C875 + C33488 * C885 + C33491 * C3454 + C51382 * C3458) *
                C51260) *
               C51163 * C2438) *
              C51218 * C292 +
          (C33928 * C51163 * C2436 +
           ((C33724 + C33723) * C452 + (C33722 + C33721) * C51448 -
            (C35264 + C35263) * C453 - (C35266 + C35265) * C51260) *
               C51163 * C2437 +
           ((C34095 + C34096) * C452 + (C34097 + C34098) * C51448 -
            (C33491 * C3450 + C51382 * C3455 + C33490 * C862 + C33488 * C876) *
                C453 -
            (C33491 * C3456 + C51382 * C3459 + C33490 * C877 + C33488 * C886) *
                C51260) *
               C51163 * C2438) *
              C51218 * C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C452 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C51448 -
            (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                C453 -
            (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                C51260) *
               C51163 * C2436 +
           ((C36506 + C36507) * C452 + (C36508 + C36509) * C51448 -
            (C37130 + C37131) * C453 - (C37132 + C37133) * C51260) *
               C51163 * C2437 +
           C37149 * C2438) *
              C622 +
          (((C37131 + C37130) * C453 -
            ((C36509 + C36508) * C51448 + (C36507 + C36506) * C452) +
            (C37133 + C37132) * C51260) *
               C51163 * C2436 +
           ((C37136 + C37135) * C453 -
            ((C36513 + C36512) * C51448 + (C36511 + C36510) * C452) +
            (C37138 + C37137) * C51260) *
               C51163 * C2437 +
           ((C37139 + C37140) * C453 - (C36940 * C51448 + C36941 * C452) +
            (C37141 + C37142) * C51260) *
               C51163 * C2438) *
              C623 +
          (C37149 * C2436 +
           ((C36831 + C36830) * C452 + (C36829 + C36828) * C51448 -
            (C37140 + C37139) * C453 - (C37142 + C37141) * C51260) *
               C51163 * C2437 +
           ((C36952 + C36953) * C452 + (C36954 + C36955) * C51448 -
            (C33491 * C20732 + C51382 * C20733 + C33490 * C3239 +
             C33488 * C3245) *
                C453 -
            (C33491 * C20734 + C51382 * C20735 + C33490 * C3246 +
             C33488 * C3251) *
                C51260) *
               C51163 * C2438) *
              C624) *
         C51186) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C39111 * C119 + C39107 * C126 + C39112 * C454 + C39108 * C460 +
            C39113 * C992 + C39109 * C997 + C39114 * C1236 + C39110 * C1240) *
               C452 +
           (C39111 * C127 + C39107 * C140 + C39112 * C461 + C39108 * C472 +
            C39113 * C998 + C39109 * C1007 + C39114 * C1241 + C39110 * C1248) *
               C51448 -
           (C39114 * C6389 + C39110 * C6392 + C39113 * C1236 + C39109 * C1240 +
            C39112 * C992 + C39108 * C997 + C39111 * C454 + C39107 * C460) *
               C453 -
           (C39114 * C6393 + C39110 * C6398 + C39113 * C1241 + C39109 * C1248 +
            C39112 * C998 + C39108 * C1007 + C39111 * C461 + C39107 * C472) *
               C51260) *
              C51163 * C51307 * C51218 * C291 +
          ((C39111 * C455 + C39107 * C462 + C39112 * C993 + C39108 * C999 +
            C39113 * C1237 + C39109 * C1242 + C39114 * C6390 + C39110 * C6394) *
               C453 -
           ((C39114 * C1243 + C39110 * C1249 + C39113 * C1000 + C39109 * C1008 +
             C39112 * C463 + C39108 * C473 + C39111 * C129 + C39107 * C141) *
                C51448 +
            (C39114 * C1237 + C39110 * C1242 + C39113 * C993 + C39109 * C999 +
             C39112 * C455 + C39108 * C462 + C39111 * C120 + C39107 * C128) *
                C452) +
           (C39111 * C463 + C39107 * C473 + C39112 * C1000 + C39108 * C1008 +
            C39113 * C1243 + C39109 * C1249 + C39114 * C6395 + C39110 * C6399) *
               C51260) *
              C51163 * C51307 * C51218 * C292 +
          ((C39111 * C121 + C39107 * C130 + C39112 * C456 + C39108 * C464 +
            C39113 * C994 + C39109 * C1001 + C39114 * C1238 + C39110 * C1244) *
               C452 +
           (C39111 * C131 + C39107 * C142 + C39112 * C465 + C39108 * C474 +
            C39113 * C1002 + C39109 * C1009 + C39114 * C1245 + C39110 * C1250) *
               C51448 -
           (C39114 * C6391 + C39110 * C6396 + C39113 * C1238 + C39109 * C1244 +
            C39112 * C994 + C39108 * C1001 + C39111 * C456 + C39107 * C464) *
               C453 -
           (C39114 * C6397 + C39110 * C6400 + C39113 * C1245 + C39109 * C1250 +
            C39112 * C1002 + C39108 * C1009 + C39111 * C465 + C39107 * C474) *
               C51260) *
              C51163 * C51307 * C51218 * C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C39111 * C119 + C39107 * C126 + C39112 * C454 + C39108 * C460 +
            C39113 * C992 + C39109 * C997 + C39114 * C1236 + C39110 * C1240) *
               C452 +
           (C39111 * C127 + C39107 * C140 + C39112 * C461 + C39108 * C472 +
            C39113 * C998 + C39109 * C1007 + C39114 * C1241 + C39110 * C1248) *
               C51448 -
           (C39114 * C6389 + C39110 * C6392 + C39113 * C1236 + C39109 * C1240 +
            C39112 * C992 + C39108 * C997 + C39111 * C454 + C39107 * C460) *
               C453 -
           (C39114 * C6393 + C39110 * C6398 + C39113 * C1241 + C39109 * C1248 +
            C39112 * C998 + C39108 * C1007 + C39111 * C461 + C39107 * C472) *
               C51260) *
              C51163 * C51307 * C622 +
          ((C39111 * C856 + C39107 * C864 + C39112 * C1146 + C39108 * C1150 +
            C39113 * C3760 + C39109 * C3764 + C39114 * C6565 + C39110 * C6567) *
               C453 -
           ((C39114 * C3765 + C39110 * C3772 + C39113 * C1151 + C39109 * C1158 +
             C39112 * C865 + C39108 * C880 + C39111 * C306 + C39107 * C315) *
                C51448 +
            (C39114 * C3760 + C39110 * C3764 + C39113 * C1146 + C39109 * C1150 +
             C39112 * C856 + C39108 * C864 + C39111 * C297 + C39107 * C307) *
                C452) +
           (C39111 * C865 + C39107 * C880 + C39112 * C1151 + C39108 * C1158 +
            C39113 * C3765 + C39109 * C3772 + C39114 * C6568 + C39110 * C6571) *
               C51260) *
              C51163 * C51307 * C623 +
          ((C39111 * C627 + C39107 * C632 + C39112 * C860 + C39108 * C872 +
            C39113 * C3448 + C39109 * C3451 + C39114 * C3762 + C39110 * C3768) *
               C452 +
           (C39111 * C633 + C39107 * C642 + C39112 * C873 + C39108 * C884 +
            C39113 * C3452 + C39109 * C3457 + C39114 * C3769 + C39110 * C3774) *
               C51448 -
           (C39114 * C22973 + C39110 * C22974 + C39113 * C3762 +
            C39109 * C3768 + C39112 * C3448 + C39108 * C3451 + C39111 * C860 +
            C39107 * C872) *
               C453 -
           (C39114 * C22975 + C39110 * C22976 + C39113 * C3769 +
            C39109 * C3774 + C39112 * C3452 + C39108 * C3457 + C39111 * C873 +
            C39107 * C884) *
               C51260) *
              C51163 * C51307 * C624) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[195] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C44474 * C119 + C51497 * C126 + C44475 * C454 +
                       C51498 * C460 + C44476 * C992 + C44473 * C997) *
                          C118 +
                      (C44474 * C127 + C51497 * C140 + C44475 * C461 +
                       C51498 * C472 + C44476 * C998 + C44473 * C1007) *
                          C51248) *
                         C51434 +
                     ((C44514 + C44515 + C44516) * C118 +
                      (C44517 + C44518 + C44519) * C51248) *
                         C51168) *
                        C51307 * C1350 -
                    (((C44702 + C44703 + C44704) * C51248 +
                      (C44705 + C44706 + C44707) * C118) *
                         C51168 +
                     ((C44476 * C1151 + C44473 * C1158 + C44475 * C865 +
                       C51498 * C880 + C44474 * C306 + C51497 * C315) *
                          C51248 +
                      (C44476 * C1146 + C44473 * C1150 + C44475 * C856 +
                       C51498 * C864 + C44474 * C297 + C51497 * C307) *
                          C118) *
                         C51434) *
                        C51307 * C51234) *
                       C51492 +
                   ((((C44707 + C44706 + C44705) * C118 +
                      (C44704 + C44703 + C44702) * C51248) *
                         C51434 +
                     ((C44708 + C44709 + C44710) * C118 +
                      (C44711 + C44712 + C44713) * C51248) *
                         C51168) *
                        C51307 * C51234 -
                    (((C44520 + C44521 + C44522) * C51248 +
                      (C44523 + C44524 + C44525) * C118) *
                         C51168 +
                     ((C44519 + C44518 + C44517) * C51248 +
                      (C44516 + C44515 + C44514) * C118) *
                         C51434) *
                        C51307 * C1350) *
                       C51477 +
                   ((((C44525 + C44524 + C44523) * C118 +
                      (C44522 + C44521 + C44520) * C51248) *
                         C51434 +
                     ((C44526 + C44527 + C44528) * C118 +
                      (C44529 + C44530 + C44531) * C51248) *
                         C51168) *
                        C51307 * C1350 -
                    (((C44476 * C1157 + C44473 * C1161 + C44475 * C871 +
                       C51498 * C883 + C44474 * C300 + C51497 * C312) *
                          C51248 +
                      (C44476 * C1149 + C44473 * C1156 + C44475 * C859 +
                       C51498 * C870 + C44474 * C294 + C51497 * C301) *
                          C118) *
                         C51168 +
                     ((C44713 + C44712 + C44711) * C51248 +
                      (C44710 + C44709 + C44708) * C118) *
                         C51434) *
                        C51307 * C51234) *
                       C1354)) /
                 (p * q * std::sqrt(p + q));
    d2ee[196] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C44474 * C119 + C51497 * C126 + C44475 * C454 +
                       C51498 * C460 + C44476 * C992 + C44473 * C997) *
                          C118 +
                      (C44474 * C127 + C51497 * C140 + C44475 * C461 +
                       C51498 * C472 + C44476 * C998 + C44473 * C1007) *
                          C51248) *
                         C51434 +
                     ((C44514 + C44515 + C44516) * C118 +
                      (C44517 + C44518 + C44519) * C51248) *
                         C51168) *
                        C51307 * C51493 -
                    (((C44702 + C44703 + C44704) * C51248 +
                      (C44705 + C44706 + C44707) * C118) *
                         C51168 +
                     ((C44476 * C1151 + C44473 * C1158 + C44475 * C865 +
                       C51498 * C880 + C44474 * C306 + C51497 * C315) *
                          C51248 +
                      (C44476 * C1146 + C44473 * C1150 + C44475 * C856 +
                       C51498 * C864 + C44474 * C297 + C51497 * C307) *
                          C118) *
                         C51434) *
                        C51307 * C51480 +
                    (((C44474 * C627 + C51497 * C632 + C44475 * C860 +
                       C51498 * C872 + C44476 * C3448 + C44473 * C3451) *
                          C118 +
                      (C44474 * C633 + C51497 * C642 + C44475 * C873 +
                       C51498 * C884 + C44476 * C3452 + C44473 * C3457) *
                          C51248) *
                         C51434 +
                     ((C45054 + C45055 + C45056) * C118 +
                      (C45057 + C45058 + C45059) * C51248) *
                         C51168) *
                        C51307 * C1455) *
                       C1456 +
                   ((((C44707 + C44706 + C44705) * C118 +
                      (C44704 + C44703 + C44702) * C51248) *
                         C51434 +
                     ((C44708 + C44709 + C44710) * C118 +
                      (C44711 + C44712 + C44713) * C51248) *
                         C51168) *
                        C51307 * C51480 -
                    (((C44520 + C44521 + C44522) * C51248 +
                      (C44523 + C44524 + C44525) * C118) *
                         C51168 +
                     ((C44519 + C44518 + C44517) * C51248 +
                      (C44516 + C44515 + C44514) * C118) *
                         C51434) *
                        C51307 * C51493 -
                    (((C44476 * C3456 + C44473 * C3459 + C44475 * C877 +
                       C51498 * C886 + C44474 * C637 + C51497 * C644) *
                          C51248 +
                      (C44476 * C3450 + C44473 * C3455 + C44475 * C862 +
                       C51498 * C876 + C44474 * C629 + C51497 * C636) *
                          C118) *
                         C51168 +
                     ((C45059 + C45058 + C45057) * C51248 +
                      (C45056 + C45055 + C45054) * C118) *
                         C51434) *
                        C51307 * C1455) *
                       C51191)) /
                 (p * q * std::sqrt(p + q));
    d2ee[197] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C44474 * C119 + C51497 * C126 + C44475 * C454 +
                       C51498 * C460 + C44476 * C992 + C44473 * C997) *
                          C452 +
                      (C44474 * C127 + C51497 * C140 + C44475 * C461 +
                       C51498 * C472 + C44476 * C998 + C44473 * C1007) *
                          C51448 -
                      (C44476 * C1236 + C44473 * C1240 + C44475 * C992 +
                       C51498 * C997 + C44474 * C454 + C51497 * C460) *
                          C453 -
                      (C44476 * C1241 + C44473 * C1248 + C44475 * C998 +
                       C51498 * C1007 + C44474 * C461 + C51497 * C472) *
                          C51260) *
                         C51434 +
                     ((C44514 + C44515 + C44516) * C452 +
                      (C44517 + C44518 + C44519) * C51448 -
                      (C44884 + C44885 + C44886) * C453 -
                      (C44887 + C44888 + C44889) * C51260) *
                         C51168) *
                        C51307 * C1350 +
                    (((C44474 * C856 + C51497 * C864 + C44475 * C1146 +
                       C51498 * C1150 + C44476 * C3760 + C44473 * C3764) *
                          C453 -
                      ((C44476 * C1151 + C44473 * C1158 + C44475 * C865 +
                        C51498 * C880 + C44474 * C306 + C51497 * C315) *
                           C51448 +
                       (C44476 * C1146 + C44473 * C1150 + C44475 * C856 +
                        C51498 * C864 + C44474 * C297 + C51497 * C307) *
                           C452) +
                      (C44474 * C865 + C51497 * C880 + C44475 * C1151 +
                       C51498 * C1158 + C44476 * C3765 + C44473 * C3772) *
                          C51260) *
                         C51434 +
                     ((C46210 + C46211 + C46212) * C453 -
                      ((C44702 + C44703 + C44704) * C51448 +
                       (C44705 + C44706 + C44707) * C452) +
                      (C46213 + C46214 + C46215) * C51260) *
                         C51168) *
                        C51307 * C51234) *
                       C1456 +
                   ((((C44886 + C44885 + C44884) * C453 -
                      ((C44519 + C44518 + C44517) * C51448 +
                       (C44516 + C44515 + C44514) * C452) +
                      (C44889 + C44888 + C44887) * C51260) *
                         C51434 +
                     ((C44890 + C44891 + C44892) * C453 -
                      ((C44520 + C44521 + C44522) * C51448 +
                       (C44523 + C44524 + C44525) * C452) +
                      (C44893 + C44894 + C44895) * C51260) *
                         C51168) *
                        C51307 * C1350 +
                    (((C44707 + C44706 + C44705) * C452 +
                      (C44704 + C44703 + C44702) * C51448 -
                      (C46212 + C46211 + C46210) * C453 -
                      (C46215 + C46214 + C46213) * C51260) *
                         C51434 +
                     ((C44708 + C44709 + C44710) * C452 +
                      (C44711 + C44712 + C44713) * C51448 -
                      (C44476 * C7165 + C44473 * C7166 + C44475 * C1148 +
                       C51498 * C1154 + C44474 * C858 + C51497 * C868) *
                          C453 -
                      (C44476 * C7167 + C44473 * C7168 + C44475 * C1155 +
                       C51498 * C1160 + C44474 * C869 + C51497 * C882) *
                          C51260) *
                         C51168) *
                        C51307 * C51234) *
                       C51191)) /
                 (p * q * std::sqrt(p + q));
    d2ee[198] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C44474 * C119 + C51497 * C126 + C44475 * C454 +
                       C51498 * C460 + C44476 * C992 + C44473 * C997) *
                          C1722 +
                      (C44474 * C127 + C51497 * C140 + C44475 * C461 +
                       C51498 * C472 + C44476 * C998 + C44473 * C1007) *
                          C1720 -
                      (C44476 * C1236 + C44473 * C1240 + C44475 * C992 +
                       C51498 * C997 + C44474 * C454 + C51497 * C460) *
                          C1723 -
                      (C44476 * C1241 + C44473 * C1248 + C44475 * C998 +
                       C51498 * C1007 + C44474 * C461 + C51497 * C472) *
                          C51260) *
                         C51434 +
                     ((C44514 + C44515 + C44516) * C1722 +
                      (C44517 + C44518 + C44519) * C1720 -
                      (C44884 + C44885 + C44886) * C1723 -
                      (C44887 + C44888 + C44889) * C51260) *
                         C51168) *
                        C51307 * C1350 +
                    (((C44474 * C856 + C51497 * C864 + C44475 * C1146 +
                       C51498 * C1150 + C44476 * C3760 + C44473 * C3764) *
                          C1723 -
                      ((C44476 * C1151 + C44473 * C1158 + C44475 * C865 +
                        C51498 * C880 + C44474 * C306 + C51497 * C315) *
                           C1720 +
                       (C44476 * C1146 + C44473 * C1150 + C44475 * C856 +
                        C51498 * C864 + C44474 * C297 + C51497 * C307) *
                           C1722) +
                      (C44474 * C865 + C51497 * C880 + C44475 * C1151 +
                       C51498 * C1158 + C44476 * C3765 + C44473 * C3772) *
                          C51260) *
                         C51434 +
                     ((C46210 + C46211 + C46212) * C1723 -
                      ((C44702 + C44703 + C44704) * C1720 +
                       (C44705 + C44706 + C44707) * C1722) +
                      (C46213 + C46214 + C46215) * C51260) *
                         C51168) *
                        C51307 * C51234) *
                       C51439 +
                   ((((C44886 + C44885 + C44884) * C1723 -
                      ((C44519 + C44518 + C44517) * C1720 +
                       (C44516 + C44515 + C44514) * C1722) +
                      (C44889 + C44888 + C44887) * C51260) *
                         C51434 +
                     ((C44890 + C44891 + C44892) * C1723 -
                      ((C44520 + C44521 + C44522) * C1720 +
                       (C44523 + C44524 + C44525) * C1722) +
                      (C44893 + C44894 + C44895) * C51260) *
                         C51168) *
                        C51307 * C1350 +
                    (((C44707 + C44706 + C44705) * C1722 +
                      (C44704 + C44703 + C44702) * C1720 -
                      (C46212 + C46211 + C46210) * C1723 -
                      (C46215 + C46214 + C46213) * C51260) *
                         C51434 +
                     ((C44708 + C44709 + C44710) * C1722 +
                      (C44711 + C44712 + C44713) * C1720 -
                      (C44476 * C7165 + C44473 * C7166 + C44475 * C1148 +
                       C51498 * C1154 + C44474 * C858 + C51497 * C868) *
                          C1723 -
                      (C44476 * C7167 + C44473 * C7168 + C44475 * C1155 +
                       C51498 * C1160 + C44474 * C869 + C51497 * C882) *
                          C51260) *
                         C51168) *
                        C51307 * C51234) *
                       C51191)) /
                 (p * q * std::sqrt(p + q));
    d2ee[199] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51497 * C126 + C44475 * C454 +
                      C51498 * C460 + C44476 * C992 + C44473 * C997) *
                         C1722 +
                     (C44474 * C127 + C51497 * C140 + C44475 * C461 +
                      C51498 * C472 + C44476 * C998 + C44473 * C1007) *
                         C1720 -
                     (C44476 * C1236 + C44473 * C1240 + C44475 * C992 +
                      C51498 * C997 + C44474 * C454 + C51497 * C460) *
                         C1723 -
                     (C44476 * C1241 + C44473 * C1248 + C44475 * C998 +
                      C51498 * C1007 + C44474 * C461 + C51497 * C472) *
                         C51260) *
                        C51434 +
                    ((C44514 + C44515 + C44516) * C1722 +
                     (C44517 + C44518 + C44519) * C1720 -
                     (C44884 + C44885 + C44886) * C1723 -
                     (C44887 + C44888 + C44889) * C51260) *
                        C51168) *
                       C51307 * C51493 +
                   (((C44474 * C856 + C51497 * C864 + C44475 * C1146 +
                      C51498 * C1150 + C44476 * C3760 + C44473 * C3764) *
                         C1723 -
                     ((C44476 * C1151 + C44473 * C1158 + C44475 * C865 +
                       C51498 * C880 + C44474 * C306 + C51497 * C315) *
                          C1720 +
                      (C44476 * C1146 + C44473 * C1150 + C44475 * C856 +
                       C51498 * C864 + C44474 * C297 + C51497 * C307) *
                          C1722) +
                     (C44474 * C865 + C51497 * C880 + C44475 * C1151 +
                      C51498 * C1158 + C44476 * C3765 + C44473 * C3772) *
                         C51260) *
                        C51434 +
                    ((C46210 + C46211 + C46212) * C1723 -
                     ((C44702 + C44703 + C44704) * C1720 +
                      (C44705 + C44706 + C44707) * C1722) +
                     (C46213 + C46214 + C46215) * C51260) *
                        C51168) *
                       C51307 * C51480 +
                   (((C44474 * C627 + C51497 * C632 + C44475 * C860 +
                      C51498 * C872 + C44476 * C3448 + C44473 * C3451) *
                         C1722 +
                     (C44474 * C633 + C51497 * C642 + C44475 * C873 +
                      C51498 * C884 + C44476 * C3452 + C44473 * C3457) *
                         C1720 -
                     (C44476 * C3762 + C44473 * C3768 + C44475 * C3448 +
                      C51498 * C3451 + C44474 * C860 + C51497 * C872) *
                         C1723 -
                     (C44476 * C3769 + C44473 * C3774 + C44475 * C3452 +
                      C51498 * C3457 + C44474 * C873 + C51497 * C884) *
                         C51260) *
                        C51434 +
                    ((C45054 + C45055 + C45056) * C1722 +
                     (C45057 + C45058 + C45059) * C1720 -
                     (C44476 * C3763 + C44473 * C3770 + C44475 * C3449 +
                      C51498 * C3453 + C44474 * C861 + C51497 * C874) *
                         C1723 -
                     (C44476 * C3771 + C44473 * C3775 + C44475 * C3454 +
                      C51498 * C3458 + C44474 * C875 + C51497 * C885) *
                         C51260) *
                        C51168) *
                       C51307 * C1455) *
                  C51186) /
                 (p * q * std::sqrt(p + q));
    d2ee[200] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51497 * C126 + C44475 * C454 +
                      C51498 * C460 + C44476 * C992 + C44473 * C997) *
                         C1989 +
                     (C44474 * C127 + C51497 * C140 + C44475 * C461 +
                      C51498 * C472 + C44476 * C998 + C44473 * C1007) *
                         C51494 -
                     (C44476 * C1236 + C44473 * C1240 + C44475 * C992 +
                      C51498 * C997 + C44474 * C454 + C51497 * C460) *
                         C1990 -
                     (C44476 * C1241 + C44473 * C1248 + C44475 * C998 +
                      C51498 * C1007 + C44474 * C461 + C51497 * C472) *
                         C51483 +
                     (C44474 * C992 + C51497 * C997 + C44475 * C1236 +
                      C51498 * C1240 + C44476 * C6389 + C44473 * C6392) *
                         C1991 +
                     (C44474 * C998 + C51497 * C1007 + C44475 * C1241 +
                      C51498 * C1248 + C44476 * C6393 + C44473 * C6398) *
                         C1988) *
                        C51434 +
                    ((C44514 + C44515 + C44516) * C1989 +
                     (C44517 + C44518 + C44519) * C51494 -
                     (C44884 + C44885 + C44886) * C1990 -
                     (C44887 + C44888 + C44889) * C51483 +
                     (C45462 + C45463 + C45464) * C1991 +
                     (C45465 + C45466 + C45467) * C1988) *
                        C51168) *
                       C51307 * C1350 +
                   (((C44474 * C856 + C51497 * C864 + C44475 * C1146 +
                      C51498 * C1150 + C44476 * C3760 + C44473 * C3764) *
                         C1990 -
                     ((C44476 * C1151 + C44473 * C1158 + C44475 * C865 +
                       C51498 * C880 + C44474 * C306 + C51497 * C315) *
                          C51494 +
                      (C44476 * C1146 + C44473 * C1150 + C44475 * C856 +
                       C51498 * C864 + C44474 * C297 + C51497 * C307) *
                          C1989) +
                     (C44474 * C865 + C51497 * C880 + C44475 * C1151 +
                      C51498 * C1158 + C44476 * C3765 + C44473 * C3772) *
                         C51483 -
                     (C44476 * C6565 + C44473 * C6567 + C44475 * C3760 +
                      C51498 * C3764 + C44474 * C1146 + C51497 * C1150) *
                         C1991 -
                     (C44476 * C6568 + C44473 * C6571 + C44475 * C3765 +
                      C51498 * C3772 + C44474 * C1151 + C51497 * C1158) *
                         C1988) *
                        C51434 +
                    ((C46210 + C46211 + C46212) * C1990 -
                     ((C44702 + C44703 + C44704) * C51494 +
                      (C44705 + C44706 + C44707) * C1989) +
                     (C46213 + C46214 + C46215) * C51483 -
                     (C44476 * C6566 + C44473 * C6569 + C44475 * C3761 +
                      C51498 * C3766 + C44474 * C1147 + C51497 * C1152) *
                         C1991 -
                     (C44476 * C6570 + C44473 * C6572 + C44475 * C3767 +
                      C51498 * C3773 + C44474 * C1153 + C51497 * C1159) *
                         C1988) *
                        C51168) *
                       C51307 * C51234) *
                  C51186) /
                 (p * q * std::sqrt(p + q));
    d2ee[201] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C44474 * C119 + C51497 * C126 + C44475 * C454 +
                       C51498 * C460 + C44476 * C992 + C44473 * C997) *
                          C118 +
                      (C44474 * C127 + C51497 * C140 + C44475 * C461 +
                       C51498 * C472 + C44476 * C998 + C44473 * C1007) *
                          C51248) *
                         C51434 +
                     ((C44514 + C44515 + C44516) * C118 +
                      (C44517 + C44518 + C44519) * C51248) *
                         C51168) *
                        C51307 * C622 -
                    (((C44702 + C44703 + C44704) * C51248 +
                      (C44705 + C44706 + C44707) * C118) *
                         C51168 +
                     ((C44476 * C1151 + C44473 * C1158 + C44475 * C865 +
                       C51498 * C880 + C44474 * C306 + C51497 * C315) *
                          C51248 +
                      (C44476 * C1146 + C44473 * C1150 + C44475 * C856 +
                       C51498 * C864 + C44474 * C297 + C51497 * C307) *
                          C118) *
                         C51434) *
                        C51307 * C623 +
                    (((C44474 * C627 + C51497 * C632 + C44475 * C860 +
                       C51498 * C872 + C44476 * C3448 + C44473 * C3451) *
                          C118 +
                      (C44474 * C633 + C51497 * C642 + C44475 * C873 +
                       C51498 * C884 + C44476 * C3452 + C44473 * C3457) *
                          C51248) *
                         C51434 +
                     ((C45054 + C45055 + C45056) * C118 +
                      (C45057 + C45058 + C45059) * C51248) *
                         C51168) *
                        C51307 * C624) *
                       C51439 +
                   ((((C44707 + C44706 + C44705) * C118 +
                      (C44704 + C44703 + C44702) * C51248) *
                         C51434 +
                     ((C44708 + C44709 + C44710) * C118 +
                      (C44711 + C44712 + C44713) * C51248) *
                         C51168) *
                        C51307 * C623 -
                    (((C44520 + C44521 + C44522) * C51248 +
                      (C44523 + C44524 + C44525) * C118) *
                         C51168 +
                     ((C44519 + C44518 + C44517) * C51248 +
                      (C44516 + C44515 + C44514) * C118) *
                         C51434) *
                        C51307 * C622 -
                    (((C44476 * C3456 + C44473 * C3459 + C44475 * C877 +
                       C51498 * C886 + C44474 * C637 + C51497 * C644) *
                          C51248 +
                      (C44476 * C3450 + C44473 * C3455 + C44475 * C862 +
                       C51498 * C876 + C44474 * C629 + C51497 * C636) *
                          C118) *
                         C51168 +
                     ((C45059 + C45058 + C45057) * C51248 +
                      (C45056 + C45055 + C45054) * C118) *
                         C51434) *
                        C51307 * C624) *
                       C51191)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51497 * C126 + C44475 * C454 +
                      C51498 * C460 + C44476 * C992 + C44473 * C997) *
                         C118 +
                     (C44474 * C127 + C51497 * C140 + C44475 * C461 +
                      C51498 * C472 + C44476 * C998 + C44473 * C1007) *
                         C51248) *
                        C51434 +
                    ((C44514 + C44515 + C44516) * C118 +
                     (C44517 + C44518 + C44519) * C51248) *
                        C51168) *
                       C51307 * C51218 * C113 -
                   (((C44520 + C44521 + C44522) * C51248 +
                     (C44523 + C44524 + C44525) * C118) *
                        C51168 +
                    ((C44519 + C44518 + C44517) * C51248 +
                     (C44516 + C44515 + C44514) * C118) *
                        C51434) *
                       C51307 * C51218 * C114 +
                   (((C44525 + C44524 + C44523) * C118 +
                     (C44522 + C44521 + C44520) * C51248) *
                        C51434 +
                    ((C44526 + C44527 + C44528) * C118 +
                     (C44529 + C44530 + C44531) * C51248) *
                        C51168) *
                       C51307 * C51218 * C115 -
                   (((C44476 * C1006 + C44473 * C1011 + C44475 * C469 +
                      C51498 * C476 + C44474 * C134 + C51497 * C144) *
                         C51248 +
                     (C44476 * C996 + C44473 * C1005 + C44475 * C458 +
                      C51498 * C468 + C44474 * C123 + C51497 * C135) *
                         C118) *
                        C51168 +
                    ((C44531 + C44530 + C44529) * C51248 +
                     (C44528 + C44527 + C44526) * C118) *
                        C51434) *
                       C51307 * C51218 * C116)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51497 * C126 + C44475 * C454 +
                      C51498 * C460 + C44476 * C992 + C44473 * C997) *
                         C989 +
                     (C44474 * C127 + C51497 * C140 + C44475 * C461 +
                      C51498 * C472 + C44476 * C998 + C44473 * C1007) *
                         C986 -
                     (C44476 * C1236 + C44473 * C1240 + C44475 * C992 +
                      C51498 * C997 + C44474 * C454 + C51497 * C460) *
                         C990 -
                     (C44476 * C1241 + C44473 * C1248 + C44475 * C998 +
                      C51498 * C1007 + C44474 * C461 + C51497 * C472) *
                         C987 +
                     (C44474 * C992 + C51497 * C997 + C44475 * C1236 +
                      C51498 * C1240 + C44476 * C6389 + C44473 * C6392) *
                         C991 +
                     (C44474 * C998 + C51497 * C1007 + C44475 * C1241 +
                      C51498 * C1248 + C44476 * C6393 + C44473 * C6398) *
                         C988) *
                        C51434 +
                    ((C44514 + C44515 + C44516) * C989 +
                     (C44517 + C44518 + C44519) * C986 -
                     (C44884 + C44885 + C44886) * C990 -
                     (C44887 + C44888 + C44889) * C987 +
                     (C45462 + C45463 + C45464) * C991 +
                     (C45465 + C45466 + C45467) * C988) *
                        C51168) *
                       C51307 * C51218 * C51439 +
                   (((C44886 + C44885 + C44884) * C990 -
                     ((C44519 + C44518 + C44517) * C986 +
                      (C44516 + C44515 + C44514) * C989) +
                     (C44889 + C44888 + C44887) * C987 -
                     (C45464 + C45463 + C45462) * C991 -
                     (C45467 + C45466 + C45465) * C988) *
                        C51434 +
                    ((C44890 + C44891 + C44892) * C990 -
                     ((C44520 + C44521 + C44522) * C986 +
                      (C44523 + C44524 + C44525) * C989) +
                     (C44893 + C44894 + C44895) * C987 -
                     (C44476 * C6391 + C44473 * C6396 + C44475 * C1238 +
                      C51498 * C1244 + C44474 * C994 + C51497 * C1001) *
                         C991 -
                     (C44476 * C6397 + C44473 * C6400 + C44475 * C1245 +
                      C51498 * C1250 + C44474 * C1002 + C51497 * C1009) *
                         C988) *
                        C51168) *
                       C51307 * C51218 * C51191)) /
                     (p * q * std::sqrt(p + q));
    d2ee[202] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51497 * C126 + C44475 * C454 +
                      C51498 * C460 + C44476 * C992 + C44473 * C997) *
                         C118 +
                     (C44474 * C127 + C51497 * C140 + C44475 * C461 +
                      C51498 * C472 + C44476 * C998 + C44473 * C1007) *
                         C51248) *
                        C51434 +
                    ((C44514 + C44515 + C44516) * C118 +
                     (C44517 + C44518 + C44519) * C51248) *
                        C51168) *
                       C51307 * C737 -
                   (((C44702 + C44703 + C44704) * C51248 +
                     (C44705 + C44706 + C44707) * C118) *
                        C51168 +
                    ((C44476 * C1151 + C44473 * C1158 + C44475 * C865 +
                      C51498 * C880 + C44474 * C306 + C51497 * C315) *
                         C51248 +
                     (C44476 * C1146 + C44473 * C1150 + C44475 * C856 +
                      C51498 * C864 + C44474 * C297 + C51497 * C307) *
                         C118) *
                        C51434) *
                       C51307 * C738 +
                   (((C44474 * C627 + C51497 * C632 + C44475 * C860 +
                      C51498 * C872 + C44476 * C3448 + C44473 * C3451) *
                         C118 +
                     (C44474 * C633 + C51497 * C642 + C44475 * C873 +
                      C51498 * C884 + C44476 * C3452 + C44473 * C3457) *
                         C51248) *
                        C51434 +
                    ((C45054 + C45055 + C45056) * C118 +
                     (C45057 + C45058 + C45059) * C51248) *
                        C51168) *
                       C51307 * C739 -
                   (((C44476 * C3635 + C44473 * C3637 + C44475 * C3244 +
                      C51498 * C3250 + C44474 * C750 + C51497 * C756) *
                         C51248 +
                     (C44476 * C3631 + C44473 * C3634 + C44475 * C3238 +
                      C51498 * C3243 + C44474 * C744 + C51497 * C751) *
                         C118) *
                        C51168 +
                    ((C44476 * C3633 + C44473 * C3636 + C44475 * C3242 +
                      C51498 * C3249 + C44474 * C752 + C51497 * C757) *
                         C51248 +
                     (C44476 * C3630 + C44473 * C3632 + C44475 * C3237 +
                      C51498 * C3241 + C44474 * C745 + C51497 * C753) *
                         C118) *
                        C51434) *
                       C51307 * C740) *
                  C51186) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C44474 * C119 + C51497 * C126 + C44475 * C454 +
                       C51498 * C460 + C44476 * C992 + C44473 * C997) *
                          C118 +
                      (C44474 * C127 + C51497 * C140 + C44475 * C461 +
                       C51498 * C472 + C44476 * C998 + C44473 * C1007) *
                          C51248) *
                         C51434 +
                     ((C44514 + C44515 + C44516) * C118 +
                      (C44517 + C44518 + C44519) * C51248) *
                         C51168) *
                        C51307 * C51446 -
                    (((C44702 + C44703 + C44704) * C51248 +
                      (C44705 + C44706 + C44707) * C118) *
                         C51168 +
                     ((C44476 * C1151 + C44473 * C1158 + C44475 * C865 +
                       C51498 * C880 + C44474 * C306 + C51497 * C315) *
                          C51248 +
                      (C44476 * C1146 + C44473 * C1150 + C44475 * C856 +
                       C51498 * C864 + C44474 * C297 + C51497 * C307) *
                          C118) *
                         C51434) *
                        C51307 * C51234) *
                       C291 +
                   ((((C44707 + C44706 + C44705) * C118 +
                      (C44704 + C44703 + C44702) * C51248) *
                         C51434 +
                     ((C44708 + C44709 + C44710) * C118 +
                      (C44711 + C44712 + C44713) * C51248) *
                         C51168) *
                        C51307 * C51234 -
                    (((C44520 + C44521 + C44522) * C51248 +
                      (C44523 + C44524 + C44525) * C118) *
                         C51168 +
                     ((C44519 + C44518 + C44517) * C51248 +
                      (C44516 + C44515 + C44514) * C118) *
                         C51434) *
                        C51307 * C51446) *
                       C292 +
                   ((((C44525 + C44524 + C44523) * C118 +
                      (C44522 + C44521 + C44520) * C51248) *
                         C51434 +
                     ((C44526 + C44527 + C44528) * C118 +
                      (C44529 + C44530 + C44531) * C51248) *
                         C51168) *
                        C51307 * C51446 -
                    (((C44476 * C1157 + C44473 * C1161 + C44475 * C871 +
                       C51498 * C883 + C44474 * C300 + C51497 * C312) *
                          C51248 +
                      (C44476 * C1149 + C44473 * C1156 + C44475 * C859 +
                       C51498 * C870 + C44474 * C294 + C51497 * C301) *
                          C118) *
                         C51168 +
                     ((C44713 + C44712 + C44711) * C51248 +
                      (C44710 + C44709 + C44708) * C118) *
                         C51434) *
                        C51307 * C51234) *
                       C293)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51497 * C126 + C44475 * C454 +
                      C51498 * C460 + C44476 * C992 + C44473 * C997) *
                         C989 +
                     (C44474 * C127 + C51497 * C140 + C44475 * C461 +
                      C51498 * C472 + C44476 * C998 + C44473 * C1007) *
                         C986 -
                     (C44476 * C1236 + C44473 * C1240 + C44475 * C992 +
                      C51498 * C997 + C44474 * C454 + C51497 * C460) *
                         C990 -
                     (C44476 * C1241 + C44473 * C1248 + C44475 * C998 +
                      C51498 * C1007 + C44474 * C461 + C51497 * C472) *
                         C987 +
                     (C44474 * C992 + C51497 * C997 + C44475 * C1236 +
                      C51498 * C1240 + C44476 * C6389 + C44473 * C6392) *
                         C991 +
                     (C44474 * C998 + C51497 * C1007 + C44475 * C1241 +
                      C51498 * C1248 + C44476 * C6393 + C44473 * C6398) *
                         C988) *
                        C51434 +
                    ((C44514 + C44515 + C44516) * C989 +
                     (C44517 + C44518 + C44519) * C986 -
                     (C44884 + C44885 + C44886) * C990 -
                     (C44887 + C44888 + C44889) * C987 +
                     (C45462 + C45463 + C45464) * C991 +
                     (C45465 + C45466 + C45467) * C988) *
                        C51168) *
                       C51307 * C51446 +
                   (((C44474 * C856 + C51497 * C864 + C44475 * C1146 +
                      C51498 * C1150 + C44476 * C3760 + C44473 * C3764) *
                         C990 -
                     ((C44476 * C1151 + C44473 * C1158 + C44475 * C865 +
                       C51498 * C880 + C44474 * C306 + C51497 * C315) *
                          C986 +
                      (C44476 * C1146 + C44473 * C1150 + C44475 * C856 +
                       C51498 * C864 + C44474 * C297 + C51497 * C307) *
                          C989) +
                     (C44474 * C865 + C51497 * C880 + C44475 * C1151 +
                      C51498 * C1158 + C44476 * C3765 + C44473 * C3772) *
                         C987 -
                     (C44476 * C6565 + C44473 * C6567 + C44475 * C3760 +
                      C51498 * C3764 + C44474 * C1146 + C51497 * C1150) *
                         C991 -
                     (C44476 * C6568 + C44473 * C6571 + C44475 * C3765 +
                      C51498 * C3772 + C44474 * C1151 + C51497 * C1158) *
                         C988) *
                        C51434 +
                    ((C44474 * C857 + C51497 * C866 + C44475 * C1147 +
                      C51498 * C1152 + C44476 * C3761 + C44473 * C3766) *
                         C990 -
                     ((C44702 + C44703 + C44704) * C986 +
                      (C44705 + C44706 + C44707) * C989) +
                     (C44474 * C867 + C51497 * C881 + C44475 * C1153 +
                      C51498 * C1159 + C44476 * C3767 + C44473 * C3773) *
                         C987 -
                     (C44476 * C6566 + C44473 * C6569 + C44475 * C3761 +
                      C51498 * C3766 + C44474 * C1147 + C51497 * C1152) *
                         C991 -
                     (C44476 * C6570 + C44473 * C6572 + C44475 * C3767 +
                      C51498 * C3773 + C44474 * C1153 + C51497 * C1159) *
                         C988) *
                        C51168) *
                       C51307 * C51234) *
                  C51186) /
                     (p * q * std::sqrt(p + q));
    d2ee[203] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51497 * C126 + C44475 * C454 +
                      C51498 * C460 + C44476 * C992 + C44473 * C997) *
                         C452 +
                     (C44474 * C127 + C51497 * C140 + C44475 * C461 +
                      C51498 * C472 + C44476 * C998 + C44473 * C1007) *
                         C51448 -
                     (C44476 * C1236 + C44473 * C1240 + C44475 * C992 +
                      C51498 * C997 + C44474 * C454 + C51497 * C460) *
                         C453 -
                     (C44476 * C1241 + C44473 * C1248 + C44475 * C998 +
                      C51498 * C1007 + C44474 * C461 + C51497 * C472) *
                         C51260) *
                        C51434 +
                    ((C44514 + C44515 + C44516) * C452 +
                     (C44517 + C44518 + C44519) * C51448 -
                     (C44884 + C44885 + C44886) * C453 -
                     (C44887 + C44888 + C44889) * C51260) *
                        C51168) *
                       C51307 * C622 +
                   (((C44474 * C856 + C51497 * C864 + C44475 * C1146 +
                      C51498 * C1150 + C44476 * C3760 + C44473 * C3764) *
                         C453 -
                     ((C44476 * C1151 + C44473 * C1158 + C44475 * C865 +
                       C51498 * C880 + C44474 * C306 + C51497 * C315) *
                          C51448 +
                      (C44476 * C1146 + C44473 * C1150 + C44475 * C856 +
                       C51498 * C864 + C44474 * C297 + C51497 * C307) *
                          C452) +
                     (C44474 * C865 + C51497 * C880 + C44475 * C1151 +
                      C51498 * C1158 + C44476 * C3765 + C44473 * C3772) *
                         C51260) *
                        C51434 +
                    ((C44474 * C857 + C51497 * C866 + C44475 * C1147 +
                      C51498 * C1152 + C44476 * C3761 + C44473 * C3766) *
                         C453 -
                     ((C44702 + C44703 + C44704) * C51448 +
                      (C44705 + C44706 + C44707) * C452) +
                     (C44474 * C867 + C51497 * C881 + C44475 * C1153 +
                      C51498 * C1159 + C44476 * C3767 + C44473 * C3773) *
                         C51260) *
                        C51168) *
                       C51307 * C623 +
                   (((C44474 * C627 + C51497 * C632 + C44475 * C860 +
                      C51498 * C872 + C44476 * C3448 + C44473 * C3451) *
                         C452 +
                     (C44474 * C633 + C51497 * C642 + C44475 * C873 +
                      C51498 * C884 + C44476 * C3452 + C44473 * C3457) *
                         C51448 -
                     (C44476 * C3762 + C44473 * C3768 + C44475 * C3448 +
                      C51498 * C3451 + C44474 * C860 + C51497 * C872) *
                         C453 -
                     (C44476 * C3769 + C44473 * C3774 + C44475 * C3452 +
                      C51498 * C3457 + C44474 * C873 + C51497 * C884) *
                         C51260) *
                        C51434 +
                    ((C45054 + C45055 + C45056) * C452 +
                     (C45057 + C45058 + C45059) * C51448 -
                     (C44476 * C3763 + C44473 * C3770 + C44475 * C3449 +
                      C51498 * C3453 + C44474 * C861 + C51497 * C874) *
                         C453 -
                     (C44476 * C3771 + C44473 * C3775 + C44475 * C3454 +
                      C51498 * C3458 + C44474 * C875 + C51497 * C885) *
                         C51260) *
                        C51168) *
                       C51307 * C624) *
                  C51186) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51497 * C126 + C44475 * C454 +
                      C51498 * C460 + C44476 * C992 + C44473 * C997) *
                         C452 +
                     (C44474 * C127 + C51497 * C140 + C44475 * C461 +
                      C51498 * C472 + C44476 * C998 + C44473 * C1007) *
                         C51448 -
                     (C44476 * C1236 + C44473 * C1240 + C44475 * C992 +
                      C51498 * C997 + C44474 * C454 + C51497 * C460) *
                         C453 -
                     (C44476 * C1241 + C44473 * C1248 + C44475 * C998 +
                      C51498 * C1007 + C44474 * C461 + C51497 * C472) *
                         C51260) *
                        C51434 +
                    ((C44514 + C44515 + C44516) * C452 +
                     (C44517 + C44518 + C44519) * C51448 -
                     (C44884 + C44885 + C44886) * C453 -
                     (C44887 + C44888 + C44889) * C51260) *
                        C51168) *
                       C51307 * C51218 * C291 +
                   (((C44886 + C44885 + C44884) * C453 -
                     ((C44519 + C44518 + C44517) * C51448 +
                      (C44516 + C44515 + C44514) * C452) +
                     (C44889 + C44888 + C44887) * C51260) *
                        C51434 +
                    ((C44890 + C44891 + C44892) * C453 -
                     ((C44520 + C44521 + C44522) * C51448 +
                      (C44523 + C44524 + C44525) * C452) +
                     (C44893 + C44894 + C44895) * C51260) *
                        C51168) *
                       C51307 * C51218 * C292 +
                   (((C44525 + C44524 + C44523) * C452 +
                     (C44522 + C44521 + C44520) * C51448 -
                     (C44892 + C44891 + C44890) * C453 -
                     (C44895 + C44894 + C44893) * C51260) *
                        C51434 +
                    ((C44526 + C44527 + C44528) * C452 +
                     (C44529 + C44530 + C44531) * C51448 -
                     (C44476 * C1239 + C44473 * C1246 + C44475 * C995 +
                      C51498 * C1003 + C44474 * C457 + C51497 * C466) *
                         C453 -
                     (C44476 * C1247 + C44473 * C1251 + C44475 * C1004 +
                      C51498 * C1010 + C44474 * C467 + C51497 * C475) *
                         C51260) *
                        C51168) *
                       C51307 * C51218 * C293)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((C44474 * C119 + C51497 * C126 + C44475 * C454 +
                     C51498 * C460 + C44476 * C992 + C44473 * C997) *
                        C1232 +
                    (C44474 * C127 + C51497 * C140 + C44475 * C461 +
                     C51498 * C472 + C44476 * C998 + C44473 * C1007) *
                        C1228 -
                    (C44476 * C1236 + C44473 * C1240 + C44475 * C992 +
                     C51498 * C997 + C44474 * C454 + C51497 * C460) *
                        C1233 -
                    (C44476 * C1241 + C44473 * C1248 + C44475 * C998 +
                     C51498 * C1007 + C44474 * C461 + C51497 * C472) *
                        C1229 +
                    (C44474 * C992 + C51497 * C997 + C44475 * C1236 +
                     C51498 * C1240 + C44476 * C6389 + C44473 * C6392) *
                        C1234 +
                    (C44474 * C998 + C51497 * C1007 + C44475 * C1241 +
                     C51498 * C1248 + C44476 * C6393 + C44473 * C6398) *
                        C1230 -
                    (C44476 * C6671 + C44473 * C6673 + C44475 * C6389 +
                     C51498 * C6392 + C44474 * C1236 + C51497 * C1240) *
                        C1235 -
                    (C44476 * C6674 + C44473 * C6677 + C44475 * C6393 +
                     C51498 * C6398 + C44474 * C1241 + C51497 * C1248) *
                        C1231) *
                       C51434 +
                   ((C44514 + C44515 + C44516) * C1232 +
                    (C44517 + C44518 + C44519) * C1228 -
                    (C44884 + C44885 + C44886) * C1233 -
                    (C44887 + C44888 + C44889) * C1229 +
                    (C45462 + C45463 + C45464) * C1234 +
                    (C45465 + C45466 + C45467) * C1230 -
                    (C44476 * C6672 + C44473 * C6675 + C44475 * C6390 +
                     C51498 * C6394 + C44474 * C1237 + C51497 * C1242) *
                        C1235 -
                    (C44476 * C6676 + C44473 * C6678 + C44475 * C6395 +
                     C51498 * C6399 + C44474 * C1243 + C51497 * C1249) *
                        C1231) *
                       C51168) *
                  C51307 * C51218 * C51186) /
                     (p * q * std::sqrt(p + q));
    d2ee[204] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51497 * C126 + C44475 * C454 +
                      C51498 * C460 + C44476 * C992 + C44473 * C997) *
                         C1722 +
                     (C44474 * C127 + C51497 * C140 + C44475 * C461 +
                      C51498 * C472 + C44476 * C998 + C44473 * C1007) *
                         C1720 -
                     (C44476 * C1236 + C44473 * C1240 + C44475 * C992 +
                      C51498 * C997 + C44474 * C454 + C51497 * C460) *
                         C1723 -
                     (C44476 * C1241 + C44473 * C1248 + C44475 * C998 +
                      C51498 * C1007 + C44474 * C461 + C51497 * C472) *
                         C51260) *
                        C51434 +
                    ((C44514 + C44515 + C44516) * C1722 +
                     (C44517 + C44518 + C44519) * C1720 -
                     (C44884 + C44885 + C44886) * C1723 -
                     (C44887 + C44888 + C44889) * C51260) *
                        C51168) *
                       C51307 * C51218 * C51492 +
                   (((C44886 + C44885 + C44884) * C1723 -
                     ((C44519 + C44518 + C44517) * C1720 +
                      (C44516 + C44515 + C44514) * C1722) +
                     (C44889 + C44888 + C44887) * C51260) *
                        C51434 +
                    ((C44890 + C44891 + C44892) * C1723 -
                     ((C44520 + C44521 + C44522) * C1720 +
                      (C44523 + C44524 + C44525) * C1722) +
                     (C44893 + C44894 + C44895) * C51260) *
                        C51168) *
                       C51307 * C51218 * C51477 +
                   (((C44525 + C44524 + C44523) * C1722 +
                     (C44522 + C44521 + C44520) * C1720 -
                     (C44892 + C44891 + C44890) * C1723 -
                     (C44895 + C44894 + C44893) * C51260) *
                        C51434 +
                    ((C44526 + C44527 + C44528) * C1722 +
                     (C44529 + C44530 + C44531) * C1720 -
                     (C44476 * C1239 + C44473 * C1246 + C44475 * C995 +
                      C51498 * C1003 + C44474 * C457 + C51497 * C466) *
                         C1723 -
                     (C44476 * C1247 + C44473 * C1251 + C44475 * C1004 +
                      C51498 * C1010 + C44474 * C467 + C51497 * C475) *
                         C51260) *
                        C51168) *
                       C51307 * C51218 * C1354)) /
                 (p * q * std::sqrt(p + q));
    d2ee[205] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C44474 * C119 + C51497 * C126 + C44475 * C454 +
                       C51498 * C460 + C44476 * C992 + C44473 * C997) *
                          C1722 +
                      (C44474 * C127 + C51497 * C140 + C44475 * C461 +
                       C51498 * C472 + C44476 * C998 + C44473 * C1007) *
                          C1720 -
                      (C44476 * C1236 + C44473 * C1240 + C44475 * C992 +
                       C51498 * C997 + C44474 * C454 + C51497 * C460) *
                          C1723 -
                      (C44476 * C1241 + C44473 * C1248 + C44475 * C998 +
                       C51498 * C1007 + C44474 * C461 + C51497 * C472) *
                          C51260) *
                         C51434 +
                     ((C44514 + C44515 + C44516) * C1722 +
                      (C44517 + C44518 + C44519) * C1720 -
                      (C44884 + C44885 + C44886) * C1723 -
                      (C44887 + C44888 + C44889) * C51260) *
                         C51168) *
                        C51307 * C51446 +
                    (((C44474 * C856 + C51497 * C864 + C44475 * C1146 +
                       C51498 * C1150 + C44476 * C3760 + C44473 * C3764) *
                          C1723 -
                      ((C44476 * C1151 + C44473 * C1158 + C44475 * C865 +
                        C51498 * C880 + C44474 * C306 + C51497 * C315) *
                           C1720 +
                       (C44476 * C1146 + C44473 * C1150 + C44475 * C856 +
                        C51498 * C864 + C44474 * C297 + C51497 * C307) *
                           C1722) +
                      (C44474 * C865 + C51497 * C880 + C44475 * C1151 +
                       C51498 * C1158 + C44476 * C3765 + C44473 * C3772) *
                          C51260) *
                         C51434 +
                     ((C46210 + C46211 + C46212) * C1723 -
                      ((C44702 + C44703 + C44704) * C1720 +
                       (C44705 + C44706 + C44707) * C1722) +
                      (C46213 + C46214 + C46215) * C51260) *
                         C51168) *
                        C51307 * C51234) *
                       C1456 +
                   ((((C44886 + C44885 + C44884) * C1723 -
                      ((C44519 + C44518 + C44517) * C1720 +
                       (C44516 + C44515 + C44514) * C1722) +
                      (C44889 + C44888 + C44887) * C51260) *
                         C51434 +
                     ((C44890 + C44891 + C44892) * C1723 -
                      ((C44520 + C44521 + C44522) * C1720 +
                       (C44523 + C44524 + C44525) * C1722) +
                      (C44893 + C44894 + C44895) * C51260) *
                         C51168) *
                        C51307 * C51446 +
                    (((C44707 + C44706 + C44705) * C1722 +
                      (C44704 + C44703 + C44702) * C1720 -
                      (C46212 + C46211 + C46210) * C1723 -
                      (C46215 + C46214 + C46213) * C51260) *
                         C51434 +
                     ((C44708 + C44709 + C44710) * C1722 +
                      (C44711 + C44712 + C44713) * C1720 -
                      (C44476 * C7165 + C44473 * C7166 + C44475 * C1148 +
                       C51498 * C1154 + C44474 * C858 + C51497 * C868) *
                          C1723 -
                      (C44476 * C7167 + C44473 * C7168 + C44475 * C1155 +
                       C51498 * C1160 + C44474 * C869 + C51497 * C882) *
                          C51260) *
                         C51168) *
                        C51307 * C51234) *
                       C51191)) /
                 (p * q * std::sqrt(p + q));
    d2ee[206] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51497 * C126 + C44475 * C454 +
                      C51498 * C460 + C44476 * C992 + C44473 * C997) *
                         C1989 +
                     (C44474 * C127 + C51497 * C140 + C44475 * C461 +
                      C51498 * C472 + C44476 * C998 + C44473 * C1007) *
                         C51494 -
                     (C44476 * C1236 + C44473 * C1240 + C44475 * C992 +
                      C51498 * C997 + C44474 * C454 + C51497 * C460) *
                         C1990 -
                     (C44476 * C1241 + C44473 * C1248 + C44475 * C998 +
                      C51498 * C1007 + C44474 * C461 + C51497 * C472) *
                         C51483 +
                     (C44474 * C992 + C51497 * C997 + C44475 * C1236 +
                      C51498 * C1240 + C44476 * C6389 + C44473 * C6392) *
                         C1991 +
                     (C44474 * C998 + C51497 * C1007 + C44475 * C1241 +
                      C51498 * C1248 + C44476 * C6393 + C44473 * C6398) *
                         C1988) *
                        C51434 +
                    ((C44514 + C44515 + C44516) * C1989 +
                     (C44517 + C44518 + C44519) * C51494 -
                     (C44884 + C44885 + C44886) * C1990 -
                     (C44887 + C44888 + C44889) * C51483 +
                     (C45462 + C45463 + C45464) * C1991 +
                     (C45465 + C45466 + C45467) * C1988) *
                        C51168) *
                       C51307 * C51218 * C1456 +
                   (((C44886 + C44885 + C44884) * C1990 -
                     ((C44519 + C44518 + C44517) * C51494 +
                      (C44516 + C44515 + C44514) * C1989) +
                     (C44889 + C44888 + C44887) * C51483 -
                     (C45464 + C45463 + C45462) * C1991 -
                     (C45467 + C45466 + C45465) * C1988) *
                        C51434 +
                    ((C44890 + C44891 + C44892) * C1990 -
                     ((C44520 + C44521 + C44522) * C51494 +
                      (C44523 + C44524 + C44525) * C1989) +
                     (C44893 + C44894 + C44895) * C51483 -
                     (C44476 * C6391 + C44473 * C6396 + C44475 * C1238 +
                      C51498 * C1244 + C44474 * C994 + C51497 * C1001) *
                         C1991 -
                     (C44476 * C6397 + C44473 * C6400 + C44475 * C1245 +
                      C51498 * C1250 + C44474 * C1002 + C51497 * C1009) *
                         C1988) *
                        C51168) *
                       C51307 * C51218 * C51191)) /
                 (p * q * std::sqrt(p + q));
    d2ee[207] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51497 * C126 + C44475 * C454 +
                      C51498 * C460 + C44476 * C992 + C44473 * C997) *
                         C118 +
                     (C44474 * C127 + C51497 * C140 + C44475 * C461 +
                      C51498 * C472 + C44476 * C998 + C44473 * C1007) *
                         C51248) *
                        C51434 +
                    ((C44514 + C44515 + C44516) * C118 +
                     (C44517 + C44518 + C44519) * C51248) *
                        C51168) *
                       C51307 * C51218 * C113 -
                   (((C44520 + C44521 + C44522) * C51248 +
                     (C44523 + C44524 + C44525) * C118) *
                        C51168 +
                    ((C44519 + C44518 + C44517) * C51248 +
                     (C44516 + C44515 + C44514) * C118) *
                        C51434) *
                       C51307 * C51218 * C114 +
                   (((C44525 + C44524 + C44523) * C118 +
                     (C44522 + C44521 + C44520) * C51248) *
                        C51434 +
                    ((C44526 + C44527 + C44528) * C118 +
                     (C44529 + C44530 + C44531) * C51248) *
                        C51168) *
                       C51307 * C51218 * C115 -
                   (((C44476 * C1006 + C44473 * C1011 + C44475 * C469 +
                      C51498 * C476 + C44474 * C134 + C51497 * C144) *
                         C51248 +
                     (C44476 * C996 + C44473 * C1005 + C44475 * C458 +
                      C51498 * C468 + C44474 * C123 + C51497 * C135) *
                         C118) *
                        C51168 +
                    ((C44531 + C44530 + C44529) * C51248 +
                     (C44528 + C44527 + C44526) * C118) *
                        C51434) *
                       C51307 * C51218 * C116)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C44474 * C119 + C51497 * C126 + C44475 * C454 +
                       C51498 * C460 + C44476 * C992 + C44473 * C997) *
                          C118 +
                      (C44474 * C127 + C51497 * C140 + C44475 * C461 +
                       C51498 * C472 + C44476 * C998 + C44473 * C1007) *
                          C51248) *
                         C51434 +
                     ((C44514 + C44515 + C44516) * C118 +
                      (C44517 + C44518 + C44519) * C51248) *
                         C51168) *
                        C51307 * C622 -
                    (((C44702 + C44703 + C44704) * C51248 +
                      (C44705 + C44706 + C44707) * C118) *
                         C51168 +
                     ((C44476 * C1151 + C44473 * C1158 + C44475 * C865 +
                       C51498 * C880 + C44474 * C306 + C51497 * C315) *
                          C51248 +
                      (C44476 * C1146 + C44473 * C1150 + C44475 * C856 +
                       C51498 * C864 + C44474 * C297 + C51497 * C307) *
                          C118) *
                         C51434) *
                        C51307 * C623 +
                    (((C44474 * C627 + C51497 * C632 + C44475 * C860 +
                       C51498 * C872 + C44476 * C3448 + C44473 * C3451) *
                          C118 +
                      (C44474 * C633 + C51497 * C642 + C44475 * C873 +
                       C51498 * C884 + C44476 * C3452 + C44473 * C3457) *
                          C51248) *
                         C51434 +
                     ((C45054 + C45055 + C45056) * C118 +
                      (C45057 + C45058 + C45059) * C51248) *
                         C51168) *
                        C51307 * C624) *
                       C51439 +
                   ((((C44707 + C44706 + C44705) * C118 +
                      (C44704 + C44703 + C44702) * C51248) *
                         C51434 +
                     ((C44708 + C44709 + C44710) * C118 +
                      (C44711 + C44712 + C44713) * C51248) *
                         C51168) *
                        C51307 * C623 -
                    (((C44520 + C44521 + C44522) * C51248 +
                      (C44523 + C44524 + C44525) * C118) *
                         C51168 +
                     ((C44519 + C44518 + C44517) * C51248 +
                      (C44516 + C44515 + C44514) * C118) *
                         C51434) *
                        C51307 * C622 -
                    (((C44476 * C3456 + C44473 * C3459 + C44475 * C877 +
                       C51498 * C886 + C44474 * C637 + C51497 * C644) *
                          C51248 +
                      (C44476 * C3450 + C44473 * C3455 + C44475 * C862 +
                       C51498 * C876 + C44474 * C629 + C51497 * C636) *
                          C118) *
                         C51168 +
                     ((C45059 + C45058 + C45057) * C51248 +
                      (C45056 + C45055 + C45054) * C118) *
                         C51434) *
                        C51307 * C624) *
                       C51191)) /
                     (p * q * std::sqrt(p + q));
    d2ee[208] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C44474 * C119 + C51497 * C126 + C44475 * C454 +
                       C51498 * C460 + C44476 * C992 + C44473 * C997) *
                          C118 +
                      (C44474 * C127 + C51497 * C140 + C44475 * C461 +
                       C51498 * C472 + C44476 * C998 + C44473 * C1007) *
                          C51248) *
                         C51434 +
                     ((C44514 + C44515 + C44516) * C118 +
                      (C44517 + C44518 + C44519) * C51248) *
                         C51168) *
                        C51307 * C51446 -
                    (((C44702 + C44703 + C44704) * C51248 +
                      (C44705 + C44706 + C44707) * C118) *
                         C51168 +
                     ((C44476 * C1151 + C44473 * C1158 + C44475 * C865 +
                       C51498 * C880 + C44474 * C306 + C51497 * C315) *
                          C51248 +
                      (C44476 * C1146 + C44473 * C1150 + C44475 * C856 +
                       C51498 * C864 + C44474 * C297 + C51497 * C307) *
                          C118) *
                         C51434) *
                        C51307 * C51234) *
                       C291 +
                   ((((C44707 + C44706 + C44705) * C118 +
                      (C44704 + C44703 + C44702) * C51248) *
                         C51434 +
                     ((C44708 + C44709 + C44710) * C118 +
                      (C44711 + C44712 + C44713) * C51248) *
                         C51168) *
                        C51307 * C51234 -
                    (((C44520 + C44521 + C44522) * C51248 +
                      (C44523 + C44524 + C44525) * C118) *
                         C51168 +
                     ((C44519 + C44518 + C44517) * C51248 +
                      (C44516 + C44515 + C44514) * C118) *
                         C51434) *
                        C51307 * C51446) *
                       C292 +
                   ((((C44525 + C44524 + C44523) * C118 +
                      (C44522 + C44521 + C44520) * C51248) *
                         C51434 +
                     ((C44526 + C44527 + C44528) * C118 +
                      (C44529 + C44530 + C44531) * C51248) *
                         C51168) *
                        C51307 * C51446 -
                    (((C44476 * C1157 + C44473 * C1161 + C44475 * C871 +
                       C51498 * C883 + C44474 * C300 + C51497 * C312) *
                          C51248 +
                      (C44476 * C1149 + C44473 * C1156 + C44475 * C859 +
                       C51498 * C870 + C44474 * C294 + C51497 * C301) *
                          C118) *
                         C51168 +
                     ((C44713 + C44712 + C44711) * C51248 +
                      (C44710 + C44709 + C44708) * C118) *
                         C51434) *
                        C51307 * C51234) *
                       C293)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51497 * C126 + C44475 * C454 +
                      C51498 * C460 + C44476 * C992 + C44473 * C997) *
                         C118 +
                     (C44474 * C127 + C51497 * C140 + C44475 * C461 +
                      C51498 * C472 + C44476 * C998 + C44473 * C1007) *
                         C51248) *
                        C51434 +
                    ((C44514 + C44515 + C44516) * C118 +
                     (C44517 + C44518 + C44519) * C51248) *
                        C51168) *
                       C51307 * C737 -
                   (((C44702 + C44703 + C44704) * C51248 +
                     (C44705 + C44706 + C44707) * C118) *
                        C51168 +
                    ((C44476 * C1151 + C44473 * C1158 + C44475 * C865 +
                      C51498 * C880 + C44474 * C306 + C51497 * C315) *
                         C51248 +
                     (C44476 * C1146 + C44473 * C1150 + C44475 * C856 +
                      C51498 * C864 + C44474 * C297 + C51497 * C307) *
                         C118) *
                        C51434) *
                       C51307 * C738 +
                   (((C44474 * C627 + C51497 * C632 + C44475 * C860 +
                      C51498 * C872 + C44476 * C3448 + C44473 * C3451) *
                         C118 +
                     (C44474 * C633 + C51497 * C642 + C44475 * C873 +
                      C51498 * C884 + C44476 * C3452 + C44473 * C3457) *
                         C51248) *
                        C51434 +
                    ((C45054 + C45055 + C45056) * C118 +
                     (C45057 + C45058 + C45059) * C51248) *
                        C51168) *
                       C51307 * C739 -
                   (((C44476 * C3635 + C44473 * C3637 + C44475 * C3244 +
                      C51498 * C3250 + C44474 * C750 + C51497 * C756) *
                         C51248 +
                     (C44476 * C3631 + C44473 * C3634 + C44475 * C3238 +
                      C51498 * C3243 + C44474 * C744 + C51497 * C751) *
                         C118) *
                        C51168 +
                    ((C44476 * C3633 + C44473 * C3636 + C44475 * C3242 +
                      C51498 * C3249 + C44474 * C752 + C51497 * C757) *
                         C51248 +
                     (C44476 * C3630 + C44473 * C3632 + C44475 * C3237 +
                      C51498 * C3241 + C44474 * C745 + C51497 * C753) *
                         C118) *
                        C51434) *
                       C51307 * C740) *
                  C51186) /
                     (p * q * std::sqrt(p + q));
    d2ee[209] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51497 * C126 + C44475 * C454 +
                      C51498 * C460 + C44476 * C992 + C44473 * C997) *
                         C452 +
                     (C44474 * C127 + C51497 * C140 + C44475 * C461 +
                      C51498 * C472 + C44476 * C998 + C44473 * C1007) *
                         C51448 -
                     (C44476 * C1236 + C44473 * C1240 + C44475 * C992 +
                      C51498 * C997 + C44474 * C454 + C51497 * C460) *
                         C453 -
                     (C44476 * C1241 + C44473 * C1248 + C44475 * C998 +
                      C51498 * C1007 + C44474 * C461 + C51497 * C472) *
                         C51260) *
                        C51434 +
                    ((C44514 + C44515 + C44516) * C452 +
                     (C44517 + C44518 + C44519) * C51448 -
                     (C44884 + C44885 + C44886) * C453 -
                     (C44887 + C44888 + C44889) * C51260) *
                        C51168) *
                       C51307 * C51218 * C291 +
                   (((C44886 + C44885 + C44884) * C453 -
                     ((C44519 + C44518 + C44517) * C51448 +
                      (C44516 + C44515 + C44514) * C452) +
                     (C44889 + C44888 + C44887) * C51260) *
                        C51434 +
                    ((C44890 + C44891 + C44892) * C453 -
                     ((C44520 + C44521 + C44522) * C51448 +
                      (C44523 + C44524 + C44525) * C452) +
                     (C44893 + C44894 + C44895) * C51260) *
                        C51168) *
                       C51307 * C51218 * C292 +
                   (((C44525 + C44524 + C44523) * C452 +
                     (C44522 + C44521 + C44520) * C51448 -
                     (C44892 + C44891 + C44890) * C453 -
                     (C44895 + C44894 + C44893) * C51260) *
                        C51434 +
                    ((C44526 + C44527 + C44528) * C452 +
                     (C44529 + C44530 + C44531) * C51448 -
                     (C44476 * C1239 + C44473 * C1246 + C44475 * C995 +
                      C51498 * C1003 + C44474 * C457 + C51497 * C466) *
                         C453 -
                     (C44476 * C1247 + C44473 * C1251 + C44475 * C1004 +
                      C51498 * C1010 + C44474 * C467 + C51497 * C475) *
                         C51260) *
                        C51168) *
                       C51307 * C51218 * C293)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C44474 * C119 + C51497 * C126 + C44475 * C454 +
                      C51498 * C460 + C44476 * C992 + C44473 * C997) *
                         C452 +
                     (C44474 * C127 + C51497 * C140 + C44475 * C461 +
                      C51498 * C472 + C44476 * C998 + C44473 * C1007) *
                         C51448 -
                     (C44476 * C1236 + C44473 * C1240 + C44475 * C992 +
                      C51498 * C997 + C44474 * C454 + C51497 * C460) *
                         C453 -
                     (C44476 * C1241 + C44473 * C1248 + C44475 * C998 +
                      C51498 * C1007 + C44474 * C461 + C51497 * C472) *
                         C51260) *
                        C51434 +
                    ((C44514 + C44515 + C44516) * C452 +
                     (C44517 + C44518 + C44519) * C51448 -
                     (C44884 + C44885 + C44886) * C453 -
                     (C44887 + C44888 + C44889) * C51260) *
                        C51168) *
                       C51307 * C622 +
                   (((C44474 * C856 + C51497 * C864 + C44475 * C1146 +
                      C51498 * C1150 + C44476 * C3760 + C44473 * C3764) *
                         C453 -
                     ((C44476 * C1151 + C44473 * C1158 + C44475 * C865 +
                       C51498 * C880 + C44474 * C306 + C51497 * C315) *
                          C51448 +
                      (C44476 * C1146 + C44473 * C1150 + C44475 * C856 +
                       C51498 * C864 + C44474 * C297 + C51497 * C307) *
                          C452) +
                     (C44474 * C865 + C51497 * C880 + C44475 * C1151 +
                      C51498 * C1158 + C44476 * C3765 + C44473 * C3772) *
                         C51260) *
                        C51434 +
                    ((C44474 * C857 + C51497 * C866 + C44475 * C1147 +
                      C51498 * C1152 + C44476 * C3761 + C44473 * C3766) *
                         C453 -
                     ((C44702 + C44703 + C44704) * C51448 +
                      (C44705 + C44706 + C44707) * C452) +
                     (C44474 * C867 + C51497 * C881 + C44475 * C1153 +
                      C51498 * C1159 + C44476 * C3767 + C44473 * C3773) *
                         C51260) *
                        C51168) *
                       C51307 * C623 +
                   (((C44474 * C627 + C51497 * C632 + C44475 * C860 +
                      C51498 * C872 + C44476 * C3448 + C44473 * C3451) *
                         C452 +
                     (C44474 * C633 + C51497 * C642 + C44475 * C873 +
                      C51498 * C884 + C44476 * C3452 + C44473 * C3457) *
                         C51448 -
                     (C44476 * C3762 + C44473 * C3768 + C44475 * C3448 +
                      C51498 * C3451 + C44474 * C860 + C51497 * C872) *
                         C453 -
                     (C44476 * C3769 + C44473 * C3774 + C44475 * C3452 +
                      C51498 * C3457 + C44474 * C873 + C51497 * C884) *
                         C51260) *
                        C51434 +
                    ((C45054 + C45055 + C45056) * C452 +
                     (C45057 + C45058 + C45059) * C51448 -
                     (C44476 * C3763 + C44473 * C3770 + C44475 * C3449 +
                      C51498 * C3453 + C44474 * C861 + C51497 * C874) *
                         C453 -
                     (C44476 * C3771 + C44473 * C3775 + C44475 * C3454 +
                      C51498 * C3458 + C44474 * C875 + C51497 * C885) *
                         C51260) *
                        C51168) *
                       C51307 * C624) *
                  C51186) /
                     (p * q * std::sqrt(p + q));
    d2ee[210] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                 C51248) *
                C17433 +
            ((C33525 + C33526) * C118 + (C33527 + C33528) * C51248) * C17434 +
            C33549 * C17435) *
               C51307 * C1350 -
           (C33737 * C17435 +
            ((C33725 + C33726) * C51248 + (C33727 + C33728) * C118) * C17434 +
            ((C33491 * C865 + C51382 * C880 + C33490 * C306 + C33488 * C315) *
                 C51248 +
             (C33491 * C856 + C51382 * C864 + C33490 * C297 + C33488 * C307) *
                 C118) *
                C17433) *
               C51307 * C51234) *
              C51492 +
          ((((C33728 + C33727) * C118 + (C33726 + C33725) * C51248) * C17433 +
            ((C33724 + C33723) * C118 + (C33722 + C33721) * C51248) * C17434 +
            ((C33729 + C33730) * C118 + (C33731 + C33732) * C51248) * C17435) *
               C51307 * C51234 -
           (C33550 * C17435 +
            ((C33532 + C33531) * C51248 + (C33530 + C33529) * C118) * C17434 +
            ((C33528 + C33527) * C51248 + (C33526 + C33525) * C118) * C17433) *
               C51307 * C1350) *
              C51477 +
          ((C33549 * C17433 +
            ((C33536 + C33535) * C118 + (C33534 + C33533) * C51248) * C17434 +
            ((C33537 + C33538) * C118 + (C33539 + C33540) * C51248) * C17435) *
               C51307 * C1350 -
           (((C33491 * C1590 + C51382 * C1591 + C33490 * C309 + C33488 * C316) *
                 C51248 +
             (C33491 * C1588 + C51382 * C1589 + C33490 * C298 + C33488 * C308) *
                 C118) *
                C17435 +
            ((C33732 + C33731) * C51248 + (C33730 + C33729) * C118) * C17434 +
            C33737 * C17433) *
               C51307 * C51234) *
              C1354)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                 C51248) *
                C51163 * C2436 +
            ((C36506 + C36507) * C118 + (C36508 + C36509) * C51248) * C51163 *
                C2437 +
            C36840 * C2438) *
               C1350 -
           (C36957 * C2438 +
            ((C36513 + C36512) * C51248 + (C36511 + C36510) * C118) * C51163 *
                C2437 +
            ((C36509 + C36508) * C51248 + (C36507 + C36506) * C118) * C51163 *
                C2436) *
               C51234) *
              C51492 +
          ((((C33728 + C33727) * C118 + (C33726 + C33725) * C51248) * C51163 *
                C2436 +
            ((C34091 + C34092) * C118 + (C34093 + C34094) * C51248) * C51163 *
                C2437 +
            ((C36832 + C36833) * C118 + (C36834 + C36835) * C51248) * C51163 *
                C2438) *
               C51234 -
           (C36841 * C2438 +
            ((C33725 + C33726) * C51248 + (C33727 + C33728) * C118) * C51163 *
                C2437 +
            ((C33528 + C33527) * C51248 + (C33526 + C33525) * C118) * C51163 *
                C2436) *
               C1350) *
              C51477 +
          ((C33549 * C51163 * C2436 +
            ((C33724 + C33723) * C118 + (C33722 + C33721) * C51248) * C51163 *
                C2437 +
            ((C34095 + C34096) * C118 + (C34097 + C34098) * C51248) * C51163 *
                C2438) *
               C1350 -
           (((C33491 * C4264 + C51382 * C4265 + C33490 * C748 + C33488 * C755) *
                 C51248 +
             (C33491 * C4262 + C51382 * C4263 + C33490 * C743 + C33488 * C749) *
                 C118) *
                C51163 * C2438 +
            ((C34098 + C34097) * C51248 + (C34096 + C34095) * C118) * C51163 *
                C2437 +
            C33737 * C51163 * C2436) *
               C51234) *
              C1354)) /
            (p * q * std::sqrt(p + q));
    d2ee[211] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                 C51248) *
                C17433 +
            ((C33525 + C33526) * C118 + (C33527 + C33528) * C51248) * C17434 +
            C33549 * C17435) *
               C51307 * C51493 -
           (C33737 * C17435 +
            ((C33725 + C33726) * C51248 + (C33727 + C33728) * C118) * C17434 +
            ((C33491 * C865 + C51382 * C880 + C33490 * C306 + C33488 * C315) *
                 C51248 +
             (C33491 * C856 + C51382 * C864 + C33490 * C297 + C33488 * C307) *
                 C118) *
                C17433) *
               C51307 * C51480 +
           (((C33490 * C627 + C33488 * C632 + C33491 * C860 + C51382 * C872) *
                 C118 +
             (C33490 * C633 + C33488 * C642 + C33491 * C873 + C51382 * C884) *
                 C51248) *
                C17433 +
            ((C34091 + C34092) * C118 + (C34093 + C34094) * C51248) * C17434 +
            ((C34095 + C34096) * C118 + (C34097 + C34098) * C51248) * C17435) *
               C51307 * C1455) *
              C1456 +
          ((((C33728 + C33727) * C118 + (C33726 + C33725) * C51248) * C17433 +
            ((C33724 + C33723) * C118 + (C33722 + C33721) * C51248) * C17434 +
            ((C33729 + C33730) * C118 + (C33731 + C33732) * C51248) * C17435) *
               C51307 * C51480 -
           (C33550 * C17435 +
            ((C33532 + C33531) * C51248 + (C33530 + C33529) * C118) * C17434 +
            ((C33528 + C33527) * C51248 + (C33526 + C33525) * C118) * C17433) *
               C51307 * C51493 -
           (((C33491 * C879 + C51382 * C887 + C33490 * C639 + C33488 * C645) *
                 C51248 +
             (C33491 * C863 + C51382 * C878 + C33490 * C630 + C33488 * C638) *
                 C118) *
                C17435 +
            ((C34098 + C34097) * C51248 + (C34096 + C34095) * C118) * C17434 +
            ((C34094 + C34093) * C51248 + (C34092 + C34091) * C118) * C17433) *
               C51307 * C1455) *
              C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                 C51248) *
                C51163 * C2436 +
            ((C36506 + C36507) * C118 + (C36508 + C36509) * C51248) * C51163 *
                C2437 +
            C36840 * C2438) *
               C51493 -
           (C36957 * C2438 +
            ((C36513 + C36512) * C51248 + (C36511 + C36510) * C118) * C51163 *
                C2437 +
            ((C36509 + C36508) * C51248 + (C36507 + C36506) * C118) * C51163 *
                C2436) *
               C51480 +
           (C36840 * C2436 +
            ((C36831 + C36830) * C118 + (C36829 + C36828) * C51248) * C51163 *
                C2437 +
            ((C36952 + C36953) * C118 + (C36954 + C36955) * C51248) * C51163 *
                C2438) *
               C1455) *
              C1456 +
          ((((C33728 + C33727) * C118 + (C33726 + C33725) * C51248) * C51163 *
                C2436 +
            ((C34091 + C34092) * C118 + (C34093 + C34094) * C51248) * C51163 *
                C2437 +
            ((C36832 + C36833) * C118 + (C36834 + C36835) * C51248) * C51163 *
                C2438) *
               C51480 -
           (C36841 * C2438 +
            ((C33725 + C33726) * C51248 + (C33727 + C33728) * C118) * C51163 *
                C2437 +
            ((C33528 + C33527) * C51248 + (C33526 + C33525) * C118) * C51163 *
                C2436) *
               C51493 -
           (((C33491 * C3248 + C51382 * C3252 + C33490 * C2942 +
              C33488 * C2946) *
                 C51248 +
             (C33491 * C3240 + C51382 * C3247 + C33490 * C2937 +
              C33488 * C2941) *
                 C118) *
                C51163 * C2438 +
            ((C36835 + C36834) * C51248 + (C36833 + C36832) * C118) * C51163 *
                C2437 +
            C36841 * C2436) *
               C1455) *
              C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[212] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                 C452 +
             (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                 C51448 -
             (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                 C453 -
             (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                 C51260) *
                C17433 +
            ((C33525 + C33526) * C452 + (C33527 + C33528) * C51448 -
             (C33910 + C33911) * C453 - (C33912 + C33913) * C51260) *
                C17434 +
            C33928 * C17435) *
               C51307 * C1350 +
           (((C33490 * C856 + C33488 * C864 + C33491 * C1146 + C51382 * C1150) *
                 C453 -
             ((C33491 * C865 + C51382 * C880 + C33490 * C306 + C33488 * C315) *
                  C51448 +
              (C33491 * C856 + C51382 * C864 + C33490 * C297 + C33488 * C307) *
                  C452) +
             (C33490 * C865 + C33488 * C880 + C33491 * C1151 + C51382 * C1158) *
                 C51260) *
                C17433 +
            ((C35259 + C35260) * C453 -
             ((C33725 + C33726) * C51448 + (C33727 + C33728) * C452) +
             (C35261 + C35262) * C51260) *
                C17434 +
            ((C35263 + C35264) * C453 - (C33733 * C51448 + C33734 * C452) +
             (C35265 + C35266) * C51260) *
                C17435) *
               C51307 * C51234) *
              C1456 +
          ((((C33911 + C33910) * C453 -
             ((C33528 + C33527) * C51448 + (C33526 + C33525) * C452) +
             (C33913 + C33912) * C51260) *
                C17433 +
            ((C33916 + C33915) * C453 -
             ((C33532 + C33531) * C51448 + (C33530 + C33529) * C452) +
             (C33918 + C33917) * C51260) *
                C17434 +
            ((C33919 + C33920) * C453 - (C33543 * C51448 + C33544 * C452) +
             (C33921 + C33922) * C51260) *
                C17435) *
               C51307 * C1350 +
           (((C33728 + C33727) * C452 + (C33726 + C33725) * C51448 -
             (C35260 + C35259) * C453 - (C35262 + C35261) * C51260) *
                C17433 +
            ((C33724 + C33723) * C452 + (C33722 + C33721) * C51448 -
             (C35264 + C35263) * C453 - (C35266 + C35265) * C51260) *
                C17434 +
            ((C33729 + C33730) * C452 + (C33731 + C33732) * C51448 -
             (C33491 * C1149 + C51382 * C1156 + C33490 * C859 + C33488 * C870) *
                 C453 -
             (C33491 * C1157 + C51382 * C1161 + C33490 * C871 + C33488 * C883) *
                 C51260) *
                C17435) *
               C51307 * C51234) *
              C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                 C452 +
             (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                 C51448 -
             (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                 C453 -
             (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                 C51260) *
                C51163 * C2436 +
            ((C36506 + C36507) * C452 + (C36508 + C36509) * C51448 -
             (C37130 + C37131) * C453 - (C37132 + C37133) * C51260) *
                C51163 * C2437 +
            C37149 * C2438) *
               C1350 +
           (((C37131 + C37130) * C453 -
             ((C36509 + C36508) * C51448 + (C36507 + C36506) * C452) +
             (C37133 + C37132) * C51260) *
                C51163 * C2436 +
            ((C37136 + C37135) * C453 -
             ((C36513 + C36512) * C51448 + (C36511 + C36510) * C452) +
             (C37138 + C37137) * C51260) *
                C51163 * C2437 +
            ((C37139 + C37140) * C453 - (C36940 * C51448 + C36941 * C452) +
             (C37141 + C37142) * C51260) *
                C51163 * C2438) *
               C51234) *
              C1456 +
          ((((C33911 + C33910) * C453 -
             ((C33528 + C33527) * C51448 + (C33526 + C33525) * C452) +
             (C33913 + C33912) * C51260) *
                C51163 * C2436 +
            ((C35259 + C35260) * C453 -
             ((C33725 + C33726) * C51448 + (C33727 + C33728) * C452) +
             (C35261 + C35262) * C51260) *
                C51163 * C2437 +
            ((C38058 + C38059) * C453 - (C36824 * C51448 + C36825 * C452) +
             (C38060 + C38061) * C51260) *
                C51163 * C2438) *
               C1350 +
           (((C33728 + C33727) * C452 + (C33726 + C33725) * C51448 -
             (C35260 + C35259) * C453 - (C35262 + C35261) * C51260) *
                C51163 * C2436 +
            ((C34091 + C34092) * C452 + (C34093 + C34094) * C51448 -
             (C38059 + C38058) * C453 - (C38061 + C38060) * C51260) *
                C51163 * C2437 +
            ((C36832 + C36833) * C452 + (C36834 + C36835) * C51448 -
             (C33491 * C3631 + C51382 * C3634 + C33490 * C3238 +
              C33488 * C3243) *
                 C453 -
             (C33491 * C3635 + C51382 * C3637 + C33490 * C3244 +
              C33488 * C3250) *
                 C51260) *
                C51163 * C2438) *
               C51234) *
              C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[213] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                 C1722 +
             (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                 C1720 -
             (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                 C1723 -
             (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                 C51260) *
                C17433 +
            ((C33525 + C33526) * C1722 + (C33527 + C33528) * C1720 -
             (C33910 + C33911) * C1723 - (C33912 + C33913) * C51260) *
                C17434 +
            C35419 * C17435) *
               C51307 * C1350 +
           (((C33490 * C856 + C33488 * C864 + C33491 * C1146 + C51382 * C1150) *
                 C1723 -
             ((C33491 * C865 + C51382 * C880 + C33490 * C306 + C33488 * C315) *
                  C1720 +
              (C33491 * C856 + C51382 * C864 + C33490 * C297 + C33488 * C307) *
                  C1722) +
             (C33490 * C865 + C33488 * C880 + C33491 * C1151 + C51382 * C1158) *
                 C51260) *
                C17433 +
            ((C35259 + C35260) * C1723 -
             ((C33725 + C33726) * C1720 + (C33727 + C33728) * C1722) +
             (C35261 + C35262) * C51260) *
                C17434 +
            ((C35263 + C35264) * C1723 - (C33733 * C1720 + C33734 * C1722) +
             (C35265 + C35266) * C51260) *
                C17435) *
               C51307 * C51234) *
              C51439 +
          ((((C33911 + C33910) * C1723 -
             ((C33528 + C33527) * C1720 + (C33526 + C33525) * C1722) +
             (C33913 + C33912) * C51260) *
                C17433 +
            ((C33916 + C33915) * C1723 -
             ((C33532 + C33531) * C1720 + (C33530 + C33529) * C1722) +
             (C33918 + C33917) * C51260) *
                C17434 +
            ((C33919 + C33920) * C1723 - (C33543 * C1720 + C33544 * C1722) +
             (C33921 + C33922) * C51260) *
                C17435) *
               C51307 * C1350 +
           (((C33728 + C33727) * C1722 + (C33726 + C33725) * C1720 -
             (C35260 + C35259) * C1723 - (C35262 + C35261) * C51260) *
                C17433 +
            ((C33724 + C33723) * C1722 + (C33722 + C33721) * C1720 -
             (C35264 + C35263) * C1723 - (C35266 + C35265) * C51260) *
                C17434 +
            ((C33729 + C33730) * C1722 + (C33731 + C33732) * C1720 -
             (C33491 * C1149 + C51382 * C1156 + C33490 * C859 + C33488 * C870) *
                 C1723 -
             (C33491 * C1157 + C51382 * C1161 + C33490 * C871 + C33488 * C883) *
                 C51260) *
                C17435) *
               C51307 * C51234) *
              C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                 C1722 +
             (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                 C1720 -
             (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                 C1723 -
             (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                 C51260) *
                C51163 * C2436 +
            ((C36506 + C36507) * C1722 + (C36508 + C36509) * C1720 -
             (C37130 + C37131) * C1723 - (C37132 + C37133) * C51260) *
                C51163 * C2437 +
            (C36806 * C1722 + C36807 * C1720 - C37143 * C1723 -
             C37144 * C51260) *
                C51163 * C2438) *
               C1350 +
           (((C37131 + C37130) * C1723 -
             ((C36509 + C36508) * C1720 + (C36507 + C36506) * C1722) +
             (C37133 + C37132) * C51260) *
                C51163 * C2436 +
            ((C37136 + C37135) * C1723 -
             ((C36513 + C36512) * C1720 + (C36511 + C36510) * C1722) +
             (C37138 + C37137) * C51260) *
                C51163 * C2437 +
            ((C37139 + C37140) * C1723 - (C36940 * C1720 + C36941 * C1722) +
             (C37141 + C37142) * C51260) *
                C51163 * C2438) *
               C51234) *
              C51439 +
          ((((C33911 + C33910) * C1723 -
             ((C33528 + C33527) * C1720 + (C33526 + C33525) * C1722) +
             (C33913 + C33912) * C51260) *
                C51163 * C2436 +
            ((C35259 + C35260) * C1723 -
             ((C33725 + C33726) * C1720 + (C33727 + C33728) * C1722) +
             (C35261 + C35262) * C51260) *
                C51163 * C2437 +
            ((C38058 + C38059) * C1723 - (C36824 * C1720 + C36825 * C1722) +
             (C38060 + C38061) * C51260) *
                C51163 * C2438) *
               C1350 +
           (((C33728 + C33727) * C1722 + (C33726 + C33725) * C1720 -
             (C35260 + C35259) * C1723 - (C35262 + C35261) * C51260) *
                C51163 * C2436 +
            ((C34091 + C34092) * C1722 + (C34093 + C34094) * C1720 -
             (C38059 + C38058) * C1723 - (C38061 + C38060) * C51260) *
                C51163 * C2437 +
            ((C36832 + C36833) * C1722 + (C36834 + C36835) * C1720 -
             (C33491 * C3631 + C51382 * C3634 + C33490 * C3238 +
              C33488 * C3243) *
                 C1723 -
             (C33491 * C3635 + C51382 * C3637 + C33490 * C3244 +
              C33488 * C3250) *
                 C51260) *
                C51163 * C2438) *
               C51234) *
              C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[214] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C1722 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C1720 -
            (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                C1723 -
            (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                C51260) *
               C17433 +
           ((C33525 + C33526) * C1722 + (C33527 + C33528) * C1720 -
            (C33910 + C33911) * C1723 - (C33912 + C33913) * C51260) *
               C17434 +
           C35419 * C17435) *
              C51307 * C51493 +
          (((C33490 * C856 + C33488 * C864 + C33491 * C1146 + C51382 * C1150) *
                C1723 -
            ((C33491 * C865 + C51382 * C880 + C33490 * C306 + C33488 * C315) *
                 C1720 +
             (C33491 * C856 + C51382 * C864 + C33490 * C297 + C33488 * C307) *
                 C1722) +
            (C33490 * C865 + C33488 * C880 + C33491 * C1151 + C51382 * C1158) *
                C51260) *
               C17433 +
           ((C35259 + C35260) * C1723 -
            ((C33725 + C33726) * C1720 + (C33727 + C33728) * C1722) +
            (C35261 + C35262) * C51260) *
               C17434 +
           ((C35263 + C35264) * C1723 - (C33733 * C1720 + C33734 * C1722) +
            (C35265 + C35266) * C51260) *
               C17435) *
              C51307 * C51480 +
          (((C33490 * C627 + C33488 * C632 + C33491 * C860 + C51382 * C872) *
                C1722 +
            (C33490 * C633 + C33488 * C642 + C33491 * C873 + C51382 * C884) *
                C1720 -
            (C33491 * C3448 + C51382 * C3451 + C33490 * C860 + C33488 * C872) *
                C1723 -
            (C33491 * C3452 + C51382 * C3457 + C33490 * C873 + C33488 * C884) *
                C51260) *
               C17433 +
           ((C34091 + C34092) * C1722 + (C34093 + C34094) * C1720 -
            (C33491 * C3449 + C51382 * C3453 + C33490 * C861 + C33488 * C874) *
                C1723 -
            (C33491 * C3454 + C51382 * C3458 + C33490 * C875 + C33488 * C885) *
                C51260) *
               C17434 +
           ((C34095 + C34096) * C1722 + (C34097 + C34098) * C1720 -
            (C33491 * C3450 + C51382 * C3455 + C33490 * C862 + C33488 * C876) *
                C1723 -
            (C33491 * C3456 + C51382 * C3459 + C33490 * C877 + C33488 * C886) *
                C51260) *
               C17435) *
              C51307 * C1455) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C1722 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C1720 -
            (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                C1723 -
            (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                C51260) *
               C51163 * C2436 +
           ((C36506 + C36507) * C1722 + (C36508 + C36509) * C1720 -
            (C37130 + C37131) * C1723 - (C37132 + C37133) * C51260) *
               C51163 * C2437 +
           C38895 * C2438) *
              C51493 +
          (((C37131 + C37130) * C1723 -
            ((C36509 + C36508) * C1720 + (C36507 + C36506) * C1722) +
            (C37133 + C37132) * C51260) *
               C51163 * C2436 +
           ((C37136 + C37135) * C1723 -
            ((C36513 + C36512) * C1720 + (C36511 + C36510) * C1722) +
            (C37138 + C37137) * C51260) *
               C51163 * C2437 +
           ((C37139 + C37140) * C1723 - (C36940 * C1720 + C36941 * C1722) +
            (C37141 + C37142) * C51260) *
               C51163 * C2438) *
              C51480 +
          (C38895 * C2436 +
           ((C36831 + C36830) * C1722 + (C36829 + C36828) * C1720 -
            (C37140 + C37139) * C1723 - (C37142 + C37141) * C51260) *
               C51163 * C2437 +
           ((C36952 + C36953) * C1722 + (C36954 + C36955) * C1720 -
            (C33491 * C20732 + C51382 * C20733 + C33490 * C3239 +
             C33488 * C3245) *
                C1723 -
            (C33491 * C20734 + C51382 * C20735 + C33490 * C3246 +
             C33488 * C3251) *
                C51260) *
               C51163 * C2438) *
              C1455) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[215] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C1989 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C51494 -
            (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                C1990 -
            (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                C51483 +
            (C33490 * C992 + C33488 * C997 + C33491 * C1236 + C51382 * C1240) *
                C1991 +
            (C33490 * C998 + C33488 * C1007 + C33491 * C1241 + C51382 * C1248) *
                C1988) *
               C17433 +
           ((C33525 + C33526) * C1989 + (C33527 + C33528) * C51494 -
            (C33910 + C33911) * C1990 - (C33912 + C33913) * C51483 +
            (C34505 + C34506) * C1991 + (C34507 + C34508) * C1988) *
               C17434 +
           (C33541 * C1989 + C33542 * C51494 - C33923 * C1990 -
            C33924 * C51483 + (C34509 + C34510) * C1991 +
            (C34511 + C34512) * C1988) *
               C17435) *
              C51307 * C1350 +
          (((C33490 * C856 + C33488 * C864 + C33491 * C1146 + C51382 * C1150) *
                C1990 -
            ((C33491 * C865 + C51382 * C880 + C33490 * C306 + C33488 * C315) *
                 C51494 +
             (C33491 * C856 + C51382 * C864 + C33490 * C297 + C33488 * C307) *
                 C1989) +
            (C33490 * C865 + C33488 * C880 + C33491 * C1151 + C51382 * C1158) *
                C51483 -
            (C33491 * C3760 + C51382 * C3764 + C33490 * C1146 +
             C33488 * C1150) *
                C1991 -
            (C33491 * C3765 + C51382 * C3772 + C33490 * C1151 +
             C33488 * C1158) *
                C1988) *
               C17433 +
           ((C35259 + C35260) * C1990 -
            ((C33725 + C33726) * C51494 + (C33727 + C33728) * C1989) +
            (C35261 + C35262) * C51483 -
            (C33491 * C3761 + C51382 * C3766 + C33490 * C1147 +
             C33488 * C1152) *
                C1991 -
            (C33491 * C3767 + C51382 * C3773 + C33490 * C1153 +
             C33488 * C1159) *
                C1988) *
               C17434 +
           ((C35263 + C35264) * C1990 - (C33733 * C51494 + C33734 * C1989) +
            (C35265 + C35266) * C51483 -
            (C33491 * C7165 + C51382 * C7166 + C33490 * C1148 +
             C33488 * C1154) *
                C1991 -
            (C33491 * C7167 + C51382 * C7168 + C33490 * C1155 +
             C33488 * C1160) *
                C1988) *
               C17435) *
              C51307 * C51234) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C1989 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C51494 -
            (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                C1990 -
            (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                C51483 +
            (C33490 * C992 + C33488 * C997 + C33491 * C1236 + C51382 * C1240) *
                C1991 +
            (C33490 * C998 + C33488 * C1007 + C33491 * C1241 + C51382 * C1248) *
                C1988) *
               C51163 * C2436 +
           ((C36506 + C36507) * C1989 + (C36508 + C36509) * C51494 -
            (C37130 + C37131) * C1990 - (C37132 + C37133) * C51483 +
            (C37458 + C37459) * C1991 + (C37460 + C37461) * C1988) *
               C51163 * C2437 +
           (C36806 * C1989 + C36807 * C51494 - C37143 * C1990 -
            C37144 * C51483 + (C37462 + C37463) * C1991 +
            (C37464 + C37465) * C1988) *
               C51163 * C2438) *
              C1350 +
          (((C37131 + C37130) * C1990 -
            ((C36509 + C36508) * C51494 + (C36507 + C36506) * C1989) +
            (C37133 + C37132) * C51483 - (C37459 + C37458) * C1991 -
            (C37461 + C37460) * C1988) *
               C51163 * C2436 +
           ((C37136 + C37135) * C1990 -
            ((C36513 + C36512) * C51494 + (C36511 + C36510) * C1989) +
            (C37138 + C37137) * C51483 - (C37463 + C37462) * C1991 -
            (C37465 + C37464) * C1988) *
               C51163 * C2437 +
           ((C37139 + C37140) * C1990 - (C36940 * C51494 + C36941 * C1989) +
            (C37141 + C37142) * C51483 -
            (C33491 * C20814 + C51382 * C20815 + C33490 * C3630 +
             C33488 * C3632) *
                C1991 -
            (C33491 * C20816 + C51382 * C20817 + C33490 * C3633 +
             C33488 * C3636) *
                C1988) *
               C51163 * C2438) *
              C51234) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[216] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                 C51248) *
                C17433 +
            ((C33525 + C33526) * C118 + (C33527 + C33528) * C51248) * C17434 +
            C33549 * C17435) *
               C51307 * C622 -
           (C33737 * C17435 +
            ((C33725 + C33726) * C51248 + (C33727 + C33728) * C118) * C17434 +
            ((C33491 * C865 + C51382 * C880 + C33490 * C306 + C33488 * C315) *
                 C51248 +
             (C33491 * C856 + C51382 * C864 + C33490 * C297 + C33488 * C307) *
                 C118) *
                C17433) *
               C51307 * C623 +
           (((C33490 * C627 + C33488 * C632 + C33491 * C860 + C51382 * C872) *
                 C118 +
             (C33490 * C633 + C33488 * C642 + C33491 * C873 + C51382 * C884) *
                 C51248) *
                C17433 +
            ((C34091 + C34092) * C118 + (C34093 + C34094) * C51248) * C17434 +
            ((C34095 + C34096) * C118 + (C34097 + C34098) * C51248) * C17435) *
               C51307 * C624) *
              C51439 +
          ((((C33728 + C33727) * C118 + (C33726 + C33725) * C51248) * C17433 +
            ((C33724 + C33723) * C118 + (C33722 + C33721) * C51248) * C17434 +
            ((C33729 + C33730) * C118 + (C33731 + C33732) * C51248) * C17435) *
               C51307 * C623 -
           (C33550 * C17435 +
            ((C33532 + C33531) * C51248 + (C33530 + C33529) * C118) * C17434 +
            ((C33528 + C33527) * C51248 + (C33526 + C33525) * C118) * C17433) *
               C51307 * C622 -
           (((C33491 * C879 + C51382 * C887 + C33490 * C639 + C33488 * C645) *
                 C51248 +
             (C33491 * C863 + C51382 * C878 + C33490 * C630 + C33488 * C638) *
                 C118) *
                C17435 +
            ((C34098 + C34097) * C51248 + (C34096 + C34095) * C118) * C17434 +
            ((C34094 + C34093) * C51248 + (C34092 + C34091) * C118) * C17433) *
               C51307 * C624) *
              C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C118 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C51248) *
               C17433 +
           ((C33525 + C33526) * C118 + (C33527 + C33528) * C51248) * C17434 +
           C33549 * C17435) *
              C51307 * C51218 * C113 -
          (C33550 * C17435 +
           ((C33532 + C33531) * C51248 + (C33530 + C33529) * C118) * C17434 +
           ((C33528 + C33527) * C51248 + (C33526 + C33525) * C118) * C17433) *
              C51307 * C51218 * C114 +
          (C33549 * C17433 +
           ((C33536 + C33535) * C118 + (C33534 + C33533) * C51248) * C17434 +
           ((C33537 + C33538) * C118 + (C33539 + C33540) * C51248) * C17435) *
              C51307 * C51218 * C115 -
          (((C33491 * C471 + C51382 * C477 + C33490 * C137 + C33488 * C145) *
                C51248 +
            (C33491 * C459 + C51382 * C470 + C33490 * C124 + C33488 * C136) *
                C118) *
               C17435 +
           ((C33540 + C33539) * C51248 + (C33538 + C33537) * C118) * C17434 +
           C33550 * C17433) *
              C51307 * C51218 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C989 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C986 -
            (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                C990 -
            (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                C987 +
            (C33490 * C992 + C33488 * C997 + C33491 * C1236 + C51382 * C1240) *
                C991 +
            (C33490 * C998 + C33488 * C1007 + C33491 * C1241 + C51382 * C1248) *
                C988) *
               C17433 +
           ((C33525 + C33526) * C989 + (C33527 + C33528) * C986 -
            (C33910 + C33911) * C990 - (C33912 + C33913) * C987 +
            (C34505 + C34506) * C991 + (C34507 + C34508) * C988) *
               C17434 +
           (C33541 * C989 + C33542 * C986 - C33923 * C990 - C33924 * C987 +
            (C34509 + C34510) * C991 + (C34511 + C34512) * C988) *
               C17435) *
              C51307 * C51218 * C51439 +
          (((C33911 + C33910) * C990 -
            ((C33528 + C33527) * C986 + (C33526 + C33525) * C989) +
            (C33913 + C33912) * C987 - (C34506 + C34505) * C991 -
            (C34508 + C34507) * C988) *
               C17433 +
           ((C33916 + C33915) * C990 -
            ((C33532 + C33531) * C986 + (C33530 + C33529) * C989) +
            (C33918 + C33917) * C987 - (C34510 + C34509) * C991 -
            (C34512 + C34511) * C988) *
               C17434 +
           ((C33919 + C33920) * C990 - (C33543 * C986 + C33544 * C989) +
            (C33921 + C33922) * C987 -
            (C33491 * C1239 + C51382 * C1246 + C33490 * C995 + C33488 * C1003) *
                C991 -
            (C33491 * C1247 + C51382 * C1251 + C33490 * C1004 +
             C33488 * C1010) *
                C988) *
               C17435) *
              C51307 * C51218 * C51191)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C118 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C51248) *
               C51163 * C2436 +
           ((C33490 * C297 + C33488 * C307 + C33491 * C856 + C51382 * C864) *
                C118 +
            (C33490 * C306 + C33488 * C315 + C33491 * C865 + C51382 * C880) *
                C51248) *
               C51163 * C2437 +
           ((C33490 * C627 + C33488 * C632 + C33491 * C860 + C51382 * C872) *
                C118 +
            (C33490 * C633 + C33488 * C642 + C33491 * C873 + C51382 * C884) *
                C51248) *
               C51163 * C2438) *
              C51218 * C113 -
          (((C34094 + C34093) * C51248 + (C34092 + C34091) * C118) * C51163 *
               C2438 +
           ((C33725 + C33726) * C51248 + (C33727 + C33728) * C118) * C51163 *
               C2437 +
           ((C33528 + C33527) * C51248 + (C33526 + C33525) * C118) * C51163 *
               C2436) *
              C51218 * C114 +
          (C33549 * C51163 * C2436 +
           ((C33724 + C33723) * C118 + (C33722 + C33721) * C51248) * C51163 *
               C2437 +
           ((C34095 + C34096) * C118 + (C34097 + C34098) * C51248) * C51163 *
               C2438) *
              C51218 * C115 -
          (((C33491 * C879 + C51382 * C887 + C33490 * C639 + C33488 * C645) *
                C51248 +
            (C33491 * C863 + C51382 * C878 + C33490 * C630 + C33488 * C638) *
                C118) *
               C51163 * C2438 +
           ((C33732 + C33731) * C51248 + (C33730 + C33729) * C118) * C51163 *
               C2437 +
           C33550 * C51163 * C2436) *
              C51218 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                 C51248) *
                C51163 * C2436 +
            ((C36506 + C36507) * C118 + (C36508 + C36509) * C51248) * C51163 *
                C2437 +
            C36840 * C2438) *
               C622 -
           (((C36828 + C36829) * C51248 + (C36830 + C36831) * C118) * C51163 *
                C2438 +
            ((C36513 + C36512) * C51248 + (C36511 + C36510) * C118) * C51163 *
                C2437 +
            ((C36509 + C36508) * C51248 + (C36507 + C36506) * C118) * C51163 *
                C2436) *
               C623 +
           (C36840 * C2436 +
            ((C36831 + C36830) * C118 + (C36829 + C36828) * C51248) * C51163 *
                C2437 +
            ((C33490 * C2936 + C33488 * C2939 + C33491 * C3239 +
              C51382 * C3245) *
                 C118 +
             (C33490 * C2940 + C33488 * C2945 + C33491 * C3246 +
              C51382 * C3251) *
                 C51248) *
                C51163 * C2438) *
               C624) *
              C51439 +
          ((((C33728 + C33727) * C118 + (C33726 + C33725) * C51248) * C51163 *
                C2436 +
            ((C34091 + C34092) * C118 + (C34093 + C34094) * C51248) * C51163 *
                C2437 +
            ((C36832 + C36833) * C118 + (C36834 + C36835) * C51248) * C51163 *
                C2438) *
               C623 -
           (C36841 * C2438 +
            ((C33725 + C33726) * C51248 + (C33727 + C33728) * C118) * C51163 *
                C2437 +
            ((C33528 + C33527) * C51248 + (C33526 + C33525) * C118) * C51163 *
                C2436) *
               C622 -
           (((C33491 * C3248 + C51382 * C3252 + C33490 * C2942 +
              C33488 * C2946) *
                 C51248 +
             (C33491 * C3240 + C51382 * C3247 + C33490 * C2937 +
              C33488 * C2941) *
                 C118) *
                C51163 * C2438 +
            ((C36835 + C36834) * C51248 + (C36833 + C36832) * C118) * C51163 *
                C2437 +
            C36841 * C2436) *
               C624) *
              C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C989 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C986 -
            (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                C990 -
            (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                C987 +
            (C33490 * C992 + C33488 * C997 + C33491 * C1236 + C51382 * C1240) *
                C991 +
            (C33490 * C998 + C33488 * C1007 + C33491 * C1241 + C51382 * C1248) *
                C988) *
               C51163 * C2436 +
           ((C36506 + C36507) * C989 + (C36508 + C36509) * C986 -
            (C37130 + C37131) * C990 - (C37132 + C37133) * C987 +
            (C33490 * C1146 + C33488 * C1150 + C33491 * C3760 +
             C51382 * C3764) *
                C991 +
            (C33490 * C1151 + C33488 * C1158 + C33491 * C3765 +
             C51382 * C3772) *
                C988) *
               C51163 * C2437 +
           (C36806 * C989 + C36807 * C986 - C37143 * C990 - C37144 * C987 +
            (C33490 * C3448 + C33488 * C3451 + C33491 * C3762 +
             C51382 * C3768) *
                C991 +
            (C33490 * C3452 + C33488 * C3457 + C33491 * C3769 +
             C51382 * C3774) *
                C988) *
               C51163 * C2438) *
              C51218 * C51439 +
          (((C33911 + C33910) * C990 -
            ((C33528 + C33527) * C986 + (C33526 + C33525) * C989) +
            (C33913 + C33912) * C987 - (C34506 + C34505) * C991 -
            (C34508 + C34507) * C988) *
               C51163 * C2436 +
           ((C35259 + C35260) * C990 -
            ((C33725 + C33726) * C986 + (C33727 + C33728) * C989) +
            (C35261 + C35262) * C987 -
            (C33491 * C3761 + C51382 * C3766 + C33490 * C1147 +
             C33488 * C1152) *
                C991 -
            (C33491 * C3767 + C51382 * C3773 + C33490 * C1153 +
             C33488 * C1159) *
                C988) *
               C51163 * C2437 +
           ((C33490 * C861 + C33488 * C874 + C33491 * C3449 + C51382 * C3453) *
                C990 -
            (C36824 * C986 + C36825 * C989) +
            (C33490 * C875 + C33488 * C885 + C33491 * C3454 + C51382 * C3458) *
                C987 -
            (C33491 * C3763 + C51382 * C3770 + C33490 * C3449 +
             C33488 * C3453) *
                C991 -
            (C33491 * C3771 + C51382 * C3775 + C33490 * C3454 +
             C33488 * C3458) *
                C988) *
               C51163 * C2438) *
              C51218 * C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[217] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C118 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C51248) *
               C17433 +
           ((C33525 + C33526) * C118 + (C33527 + C33528) * C51248) * C17434 +
           C33549 * C17435) *
              C51307 * C737 -
          (C33737 * C17435 +
           ((C33725 + C33726) * C51248 + (C33727 + C33728) * C118) * C17434 +
           ((C33491 * C865 + C51382 * C880 + C33490 * C306 + C33488 * C315) *
                C51248 +
            (C33491 * C856 + C51382 * C864 + C33490 * C297 + C33488 * C307) *
                C118) *
               C17433) *
              C51307 * C738 +
          (((C33490 * C627 + C33488 * C632 + C33491 * C860 + C51382 * C872) *
                C118 +
            (C33490 * C633 + C33488 * C642 + C33491 * C873 + C51382 * C884) *
                C51248) *
               C17433 +
           ((C34091 + C34092) * C118 + (C34093 + C34094) * C51248) * C17434 +
           ((C34095 + C34096) * C118 + (C34097 + C34098) * C51248) * C17435) *
              C51307 * C739 -
          (((C33491 * C4264 + C51382 * C4265 + C33490 * C748 + C33488 * C755) *
                C51248 +
            (C33491 * C4262 + C51382 * C4263 + C33490 * C743 + C33488 * C749) *
                C118) *
               C17435 +
           ((C33491 * C3244 + C51382 * C3250 + C33490 * C750 + C33488 * C756) *
                C51248 +
            (C33491 * C3238 + C51382 * C3243 + C33490 * C744 + C33488 * C751) *
                C118) *
               C17434 +
           ((C33491 * C3242 + C51382 * C3249 + C33490 * C752 + C33488 * C757) *
                C51248 +
            (C33491 * C3237 + C51382 * C3241 + C33490 * C745 + C33488 * C753) *
                C118) *
               C17433) *
              C51307 * C740) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                 C51248) *
                C17433 +
            ((C33525 + C33526) * C118 + (C33527 + C33528) * C51248) * C17434 +
            C33549 * C17435) *
               C51307 * C51446 -
           (C33737 * C17435 +
            ((C33725 + C33726) * C51248 + (C33727 + C33728) * C118) * C17434 +
            ((C33491 * C865 + C51382 * C880 + C33490 * C306 + C33488 * C315) *
                 C51248 +
             (C33491 * C856 + C51382 * C864 + C33490 * C297 + C33488 * C307) *
                 C118) *
                C17433) *
               C51307 * C51234) *
              C291 +
          ((((C33728 + C33727) * C118 + (C33726 + C33725) * C51248) * C17433 +
            ((C33724 + C33723) * C118 + (C33722 + C33721) * C51248) * C17434 +
            ((C33729 + C33730) * C118 + (C33731 + C33732) * C51248) * C17435) *
               C51307 * C51234 -
           (C33550 * C17435 +
            ((C33532 + C33531) * C51248 + (C33530 + C33529) * C118) * C17434 +
            ((C33528 + C33527) * C51248 + (C33526 + C33525) * C118) * C17433) *
               C51307 * C51446) *
              C292 +
          ((C33549 * C17433 +
            ((C33536 + C33535) * C118 + (C33534 + C33533) * C51248) * C17434 +
            ((C33537 + C33538) * C118 + (C33539 + C33540) * C51248) * C17435) *
               C51307 * C51446 -
           (((C33491 * C1590 + C51382 * C1591 + C33490 * C309 + C33488 * C316) *
                 C51248 +
             (C33491 * C1588 + C51382 * C1589 + C33490 * C298 + C33488 * C308) *
                 C118) *
                C17435 +
            ((C33732 + C33731) * C51248 + (C33730 + C33729) * C118) * C17434 +
            C33737 * C17433) *
               C51307 * C51234) *
              C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C989 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C986 -
            (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                C990 -
            (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                C987 +
            (C33490 * C992 + C33488 * C997 + C33491 * C1236 + C51382 * C1240) *
                C991 +
            (C33490 * C998 + C33488 * C1007 + C33491 * C1241 + C51382 * C1248) *
                C988) *
               C17433 +
           ((C33525 + C33526) * C989 + (C33527 + C33528) * C986 -
            (C33910 + C33911) * C990 - (C33912 + C33913) * C987 +
            (C34505 + C34506) * C991 + (C34507 + C34508) * C988) *
               C17434 +
           (C33541 * C989 + C33542 * C986 - C33923 * C990 - C33924 * C987 +
            (C34509 + C34510) * C991 + (C34511 + C34512) * C988) *
               C17435) *
              C51307 * C51446 +
          (((C33490 * C856 + C33488 * C864 + C33491 * C1146 + C51382 * C1150) *
                C990 -
            ((C33491 * C865 + C51382 * C880 + C33490 * C306 + C33488 * C315) *
                 C986 +
             (C33491 * C856 + C51382 * C864 + C33490 * C297 + C33488 * C307) *
                 C989) +
            (C33490 * C865 + C33488 * C880 + C33491 * C1151 + C51382 * C1158) *
                C987 -
            (C33491 * C3760 + C51382 * C3764 + C33490 * C1146 +
             C33488 * C1150) *
                C991 -
            (C33491 * C3765 + C51382 * C3772 + C33490 * C1151 +
             C33488 * C1158) *
                C988) *
               C17433 +
           ((C33490 * C857 + C33488 * C866 + C33491 * C1147 + C51382 * C1152) *
                C990 -
            ((C33725 + C33726) * C986 + (C33727 + C33728) * C989) +
            (C33490 * C867 + C33488 * C881 + C33491 * C1153 + C51382 * C1159) *
                C987 -
            (C33491 * C3761 + C51382 * C3766 + C33490 * C1147 +
             C33488 * C1152) *
                C991 -
            (C33491 * C3767 + C51382 * C3773 + C33490 * C1153 +
             C33488 * C1159) *
                C988) *
               C17434 +
           ((C33490 * C858 + C33488 * C868 + C33491 * C1148 + C51382 * C1154) *
                C990 -
            (C33733 * C986 + C33734 * C989) +
            (C33490 * C869 + C33488 * C882 + C33491 * C1155 + C51382 * C1160) *
                C987 -
            (C33491 * C7165 + C51382 * C7166 + C33490 * C1148 +
             C33488 * C1154) *
                C991 -
            (C33491 * C7167 + C51382 * C7168 + C33490 * C1155 +
             C33488 * C1160) *
                C988) *
               C17435) *
              C51307 * C51234) *
         C51186) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                 C51248) *
                C51163 * C2436 +
            ((C36506 + C36507) * C118 + (C36508 + C36509) * C51248) * C51163 *
                C2437 +
            ((C36510 + C36511) * C118 + (C36512 + C36513) * C51248) * C51163 *
                C2438) *
               C51446 -
           (((C33491 * C3242 + C51382 * C3249 + C33490 * C752 + C33488 * C757) *
                 C51248 +
             (C33491 * C3237 + C51382 * C3241 + C33490 * C745 + C33488 * C753) *
                 C118) *
                C51163 * C2438 +
            ((C36513 + C36512) * C51248 + (C36511 + C36510) * C118) * C51163 *
                C2437 +
            ((C36509 + C36508) * C51248 + (C36507 + C36506) * C118) * C51163 *
                C2436) *
               C51234) *
              C291 +
          ((((C33728 + C33727) * C118 + (C33726 + C33725) * C51248) * C51163 *
                C2436 +
            ((C34091 + C34092) * C118 + (C34093 + C34094) * C51248) * C51163 *
                C2437 +
            ((C33490 * C744 + C33488 * C751 + C33491 * C3238 + C51382 * C3243) *
                 C118 +
             (C33490 * C750 + C33488 * C756 + C33491 * C3244 + C51382 * C3250) *
                 C51248) *
                C51163 * C2438) *
               C51234 -
           (((C34094 + C34093) * C51248 + (C34092 + C34091) * C118) * C51163 *
                C2438 +
            ((C33725 + C33726) * C51248 + (C33727 + C33728) * C118) * C51163 *
                C2437 +
            ((C33528 + C33527) * C51248 + (C33526 + C33525) * C118) * C51163 *
                C2436) *
               C51446) *
              C292 +
          ((C33549 * C51163 * C2436 +
            ((C33724 + C33723) * C118 + (C33722 + C33721) * C51248) * C51163 *
                C2437 +
            ((C34095 + C34096) * C118 + (C34097 + C34098) * C51248) * C51163 *
                C2438) *
               C51446 -
           (((C33491 * C4264 + C51382 * C4265 + C33490 * C748 + C33488 * C755) *
                 C51248 +
             (C33491 * C4262 + C51382 * C4263 + C33490 * C743 + C33488 * C749) *
                 C118) *
                C51163 * C2438 +
            ((C34098 + C34097) * C51248 + (C34096 + C34095) * C118) * C51163 *
                C2437 +
            C33737 * C51163 * C2436) *
               C51234) *
              C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C118 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C51248) *
               C51163 * C2436 +
           ((C36506 + C36507) * C118 + (C36508 + C36509) * C51248) * C51163 *
               C2437 +
           C36840 * C2438) *
              C737 -
          (C36957 * C2438 +
           ((C36513 + C36512) * C51248 + (C36511 + C36510) * C118) * C51163 *
               C2437 +
           ((C36509 + C36508) * C51248 + (C36507 + C36506) * C118) * C51163 *
               C2436) *
              C738 +
          (C36840 * C2436 +
           ((C36831 + C36830) * C118 + (C36829 + C36828) * C51248) * C51163 *
               C2437 +
           ((C36952 + C36953) * C118 + (C36954 + C36955) * C51248) * C51163 *
               C2438) *
              C739 -
          (((C33491 * C20519 + C51382 * C20520 + C33490 * C3075 +
             C33488 * C3078) *
                C51248 +
            (C33491 * C20517 + C51382 * C20518 + C33490 * C3072 +
             C33488 * C3076) *
                C118) *
               C51163 * C2438 +
           ((C36955 + C36954) * C51248 + (C36953 + C36952) * C118) * C51163 *
               C2437 +
           C36957 * C2436) *
              C740) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C989 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C986 -
            (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                C990 -
            (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                C987 +
            (C33490 * C992 + C33488 * C997 + C33491 * C1236 + C51382 * C1240) *
                C991 +
            (C33490 * C998 + C33488 * C1007 + C33491 * C1241 + C51382 * C1248) *
                C988) *
               C51163 * C2436 +
           ((C36506 + C36507) * C989 + (C36508 + C36509) * C986 -
            (C37130 + C37131) * C990 - (C37132 + C37133) * C987 +
            (C37458 + C37459) * C991 + (C37460 + C37461) * C988) *
               C51163 * C2437 +
           (C36806 * C989 + C36807 * C986 - C37143 * C990 - C37144 * C987 +
            (C37462 + C37463) * C991 + (C37464 + C37465) * C988) *
               C51163 * C2438) *
              C51446 +
          (((C37131 + C37130) * C990 -
            ((C36509 + C36508) * C986 + (C36507 + C36506) * C989) +
            (C37133 + C37132) * C987 - (C37459 + C37458) * C991 -
            (C37461 + C37460) * C988) *
               C51163 * C2436 +
           ((C37136 + C37135) * C990 -
            ((C36513 + C36512) * C986 + (C36511 + C36510) * C989) +
            (C37138 + C37137) * C987 - (C37463 + C37462) * C991 -
            (C37465 + C37464) * C988) *
               C51163 * C2437 +
           ((C37139 + C37140) * C990 - (C36940 * C986 + C36941 * C989) +
            (C37141 + C37142) * C987 -
            (C33491 * C20814 + C51382 * C20815 + C33490 * C3630 +
             C33488 * C3632) *
                C991 -
            (C33491 * C20816 + C51382 * C20817 + C33490 * C3633 +
             C33488 * C3636) *
                C988) *
               C51163 * C2438) *
              C51234) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[218] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C452 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C51448 -
            (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                C453 -
            (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                C51260) *
               C17433 +
           ((C33525 + C33526) * C452 + (C33527 + C33528) * C51448 -
            (C33910 + C33911) * C453 - (C33912 + C33913) * C51260) *
               C17434 +
           C33928 * C17435) *
              C51307 * C622 +
          (((C33490 * C856 + C33488 * C864 + C33491 * C1146 + C51382 * C1150) *
                C453 -
            ((C33491 * C865 + C51382 * C880 + C33490 * C306 + C33488 * C315) *
                 C51448 +
             (C33491 * C856 + C51382 * C864 + C33490 * C297 + C33488 * C307) *
                 C452) +
            (C33490 * C865 + C33488 * C880 + C33491 * C1151 + C51382 * C1158) *
                C51260) *
               C17433 +
           ((C33490 * C857 + C33488 * C866 + C33491 * C1147 + C51382 * C1152) *
                C453 -
            ((C33725 + C33726) * C51448 + (C33727 + C33728) * C452) +
            (C33490 * C867 + C33488 * C881 + C33491 * C1153 + C51382 * C1159) *
                C51260) *
               C17434 +
           ((C33490 * C858 + C33488 * C868 + C33491 * C1148 + C51382 * C1154) *
                C453 -
            (C33733 * C51448 + C33734 * C452) +
            (C33490 * C869 + C33488 * C882 + C33491 * C1155 + C51382 * C1160) *
                C51260) *
               C17435) *
              C51307 * C623 +
          (((C33490 * C627 + C33488 * C632 + C33491 * C860 + C51382 * C872) *
                C452 +
            (C33490 * C633 + C33488 * C642 + C33491 * C873 + C51382 * C884) *
                C51448 -
            (C33491 * C3448 + C51382 * C3451 + C33490 * C860 + C33488 * C872) *
                C453 -
            (C33491 * C3452 + C51382 * C3457 + C33490 * C873 + C33488 * C884) *
                C51260) *
               C17433 +
           ((C34091 + C34092) * C452 + (C34093 + C34094) * C51448 -
            (C33491 * C3449 + C51382 * C3453 + C33490 * C861 + C33488 * C874) *
                C453 -
            (C33491 * C3454 + C51382 * C3458 + C33490 * C875 + C33488 * C885) *
                C51260) *
               C17434 +
           ((C34095 + C34096) * C452 + (C34097 + C34098) * C51448 -
            (C33491 * C3450 + C51382 * C3455 + C33490 * C862 + C33488 * C876) *
                C453 -
            (C33491 * C3456 + C51382 * C3459 + C33490 * C877 + C33488 * C886) *
                C51260) *
               C17435) *
              C51307 * C624) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C452 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C51448 -
            (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                C453 -
            (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                C51260) *
               C17433 +
           ((C33525 + C33526) * C452 + (C33527 + C33528) * C51448 -
            (C33910 + C33911) * C453 - (C33912 + C33913) * C51260) *
               C17434 +
           C33928 * C17435) *
              C51307 * C51218 * C291 +
          (((C33911 + C33910) * C453 -
            ((C33528 + C33527) * C51448 + (C33526 + C33525) * C452) +
            (C33913 + C33912) * C51260) *
               C17433 +
           ((C33916 + C33915) * C453 -
            ((C33532 + C33531) * C51448 + (C33530 + C33529) * C452) +
            (C33918 + C33917) * C51260) *
               C17434 +
           ((C33919 + C33920) * C453 - (C33543 * C51448 + C33544 * C452) +
            (C33921 + C33922) * C51260) *
               C17435) *
              C51307 * C51218 * C292 +
          (C33928 * C17433 +
           ((C33536 + C33535) * C452 + (C33534 + C33533) * C51448 -
            (C33920 + C33919) * C453 - (C33922 + C33921) * C51260) *
               C17434 +
           ((C33537 + C33538) * C452 + (C33539 + C33540) * C51448 -
            (C33491 * C996 + C51382 * C1005 + C33490 * C458 + C33488 * C468) *
                C453 -
            (C33491 * C1006 + C51382 * C1011 + C33490 * C469 + C33488 * C476) *
                C51260) *
               C17435) *
              C51307 * C51218 * C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
               C1232 +
           (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
               C1228 -
           (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
               C1233 -
           (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
               C1229 +
           (C33490 * C992 + C33488 * C997 + C33491 * C1236 + C51382 * C1240) *
               C1234 +
           (C33490 * C998 + C33488 * C1007 + C33491 * C1241 + C51382 * C1248) *
               C1230 -
           (C33491 * C6389 + C51382 * C6392 + C33490 * C1236 + C33488 * C1240) *
               C1235 -
           (C33491 * C6393 + C51382 * C6398 + C33490 * C1241 + C33488 * C1248) *
               C1231) *
              C17433 +
          ((C33525 + C33526) * C1232 + (C33527 + C33528) * C1228 -
           (C33910 + C33911) * C1233 - (C33912 + C33913) * C1229 +
           (C34505 + C34506) * C1234 + (C34507 + C34508) * C1230 -
           (C33491 * C6390 + C51382 * C6394 + C33490 * C1237 + C33488 * C1242) *
               C1235 -
           (C33491 * C6395 + C51382 * C6399 + C33490 * C1243 + C33488 * C1249) *
               C1231) *
              C17434 +
          (C33541 * C1232 + C33542 * C1228 - C33923 * C1233 - C33924 * C1229 +
           (C34509 + C34510) * C1234 + (C34511 + C34512) * C1230 -
           (C33491 * C6391 + C51382 * C6396 + C33490 * C1238 + C33488 * C1244) *
               C1235 -
           (C33491 * C6397 + C51382 * C6400 + C33490 * C1245 + C33488 * C1250) *
               C1231) *
              C17435) *
         C51307 * C51218 * C51186) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C452 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C51448 -
            (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                C453 -
            (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                C51260) *
               C51163 * C2436 +
           ((C36506 + C36507) * C452 + (C36508 + C36509) * C51448 -
            (C33491 * C1146 + C51382 * C1150 + C33490 * C856 + C33488 * C864) *
                C453 -
            (C33491 * C1151 + C51382 * C1158 + C33490 * C865 + C33488 * C880) *
                C51260) *
               C51163 * C2437 +
           ((C36510 + C36511) * C452 + (C36512 + C36513) * C51448 -
            (C33491 * C3448 + C51382 * C3451 + C33490 * C860 + C33488 * C872) *
                C453 -
            (C33491 * C3452 + C51382 * C3457 + C33490 * C873 + C33488 * C884) *
                C51260) *
               C51163 * C2438) *
              C51218 * C291 +
          (((C33911 + C33910) * C453 -
            ((C33528 + C33527) * C51448 + (C33526 + C33525) * C452) +
            (C33913 + C33912) * C51260) *
               C51163 * C2436 +
           ((C35259 + C35260) * C453 -
            ((C33725 + C33726) * C51448 + (C33727 + C33728) * C452) +
            (C35261 + C35262) * C51260) *
               C51163 * C2437 +
           ((C33490 * C861 + C33488 * C874 + C33491 * C3449 + C51382 * C3453) *
                C453 -
            ((C34094 + C34093) * C51448 + (C34092 + C34091) * C452) +
            (C33490 * C875 + C33488 * C885 + C33491 * C3454 + C51382 * C3458) *
                C51260) *
               C51163 * C2438) *
              C51218 * C292 +
          (C33928 * C51163 * C2436 +
           ((C33724 + C33723) * C452 + (C33722 + C33721) * C51448 -
            (C35264 + C35263) * C453 - (C35266 + C35265) * C51260) *
               C51163 * C2437 +
           ((C34095 + C34096) * C452 + (C34097 + C34098) * C51448 -
            (C33491 * C3450 + C51382 * C3455 + C33490 * C862 + C33488 * C876) *
                C453 -
            (C33491 * C3456 + C51382 * C3459 + C33490 * C877 + C33488 * C886) *
                C51260) *
               C51163 * C2438) *
              C51218 * C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C452 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C51448 -
            (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                C453 -
            (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                C51260) *
               C51163 * C2436 +
           ((C36506 + C36507) * C452 + (C36508 + C36509) * C51448 -
            (C37130 + C37131) * C453 - (C37132 + C37133) * C51260) *
               C51163 * C2437 +
           C37149 * C2438) *
              C622 +
          (((C37131 + C37130) * C453 -
            ((C36509 + C36508) * C51448 + (C36507 + C36506) * C452) +
            (C37133 + C37132) * C51260) *
               C51163 * C2436 +
           ((C37136 + C37135) * C453 -
            ((C36513 + C36512) * C51448 + (C36511 + C36510) * C452) +
            (C37138 + C37137) * C51260) *
               C51163 * C2437 +
           ((C37139 + C37140) * C453 - (C36940 * C51448 + C36941 * C452) +
            (C37141 + C37142) * C51260) *
               C51163 * C2438) *
              C623 +
          (C37149 * C2436 +
           ((C36831 + C36830) * C452 + (C36829 + C36828) * C51448 -
            (C37140 + C37139) * C453 - (C37142 + C37141) * C51260) *
               C51163 * C2437 +
           ((C36952 + C36953) * C452 + (C36954 + C36955) * C51448 -
            (C33491 * C20732 + C51382 * C20733 + C33490 * C3239 +
             C33488 * C3245) *
                C453 -
            (C33491 * C20734 + C51382 * C20735 + C33490 * C3246 +
             C33488 * C3251) *
                C51260) *
               C51163 * C2438) *
              C624) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
               C1232 +
           (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
               C1228 -
           (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
               C1233 -
           (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
               C1229 +
           (C33490 * C992 + C33488 * C997 + C33491 * C1236 + C51382 * C1240) *
               C1234 +
           (C33490 * C998 + C33488 * C1007 + C33491 * C1241 + C51382 * C1248) *
               C1230 -
           (C33491 * C6389 + C51382 * C6392 + C33490 * C1236 + C33488 * C1240) *
               C1235 -
           (C33491 * C6393 + C51382 * C6398 + C33490 * C1241 + C33488 * C1248) *
               C1231) *
              C51163 * C2436 +
          ((C36506 + C36507) * C1232 + (C36508 + C36509) * C1228 -
           (C37130 + C37131) * C1233 - (C37132 + C37133) * C1229 +
           (C37458 + C37459) * C1234 + (C37460 + C37461) * C1230 -
           (C33491 * C6565 + C51382 * C6567 + C33490 * C3760 + C33488 * C3764) *
               C1235 -
           (C33491 * C6568 + C51382 * C6571 + C33490 * C3765 + C33488 * C3772) *
               C1231) *
              C51163 * C2437 +
          (C36806 * C1232 + C36807 * C1228 - C37143 * C1233 - C37144 * C1229 +
           (C37462 + C37463) * C1234 + (C37464 + C37465) * C1230 -
           (C33491 * C22973 + C51382 * C22974 + C33490 * C3762 +
            C33488 * C3768) *
               C1235 -
           (C33491 * C22975 + C51382 * C22976 + C33490 * C3769 +
            C33488 * C3774) *
               C1231) *
              C51163 * C2438) *
         C51218 * C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[219] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C1722 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C1720 -
            (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                C1723 -
            (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                C51260) *
               C17433 +
           ((C33525 + C33526) * C1722 + (C33527 + C33528) * C1720 -
            (C33910 + C33911) * C1723 - (C33912 + C33913) * C51260) *
               C17434 +
           C35419 * C17435) *
              C51307 * C51218 * C51492 +
          (((C33911 + C33910) * C1723 -
            ((C33528 + C33527) * C1720 + (C33526 + C33525) * C1722) +
            (C33913 + C33912) * C51260) *
               C17433 +
           ((C33916 + C33915) * C1723 -
            ((C33532 + C33531) * C1720 + (C33530 + C33529) * C1722) +
            (C33918 + C33917) * C51260) *
               C17434 +
           ((C33919 + C33920) * C1723 - (C33543 * C1720 + C33544 * C1722) +
            (C33921 + C33922) * C51260) *
               C17435) *
              C51307 * C51218 * C51477 +
          (C35419 * C17433 +
           ((C33536 + C33535) * C1722 + (C33534 + C33533) * C1720 -
            (C33920 + C33919) * C1723 - (C33922 + C33921) * C51260) *
               C17434 +
           ((C33537 + C33538) * C1722 + (C33539 + C33540) * C1720 -
            (C33491 * C996 + C51382 * C1005 + C33490 * C458 + C33488 * C468) *
                C1723 -
            (C33491 * C1006 + C51382 * C1011 + C33490 * C469 + C33488 * C476) *
                C51260) *
               C17435) *
              C51307 * C51218 * C1354)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C1722 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C1720 -
            (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                C1723 -
            (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                C51260) *
               C51163 * C2436 +
           ((C36506 + C36507) * C1722 + (C36508 + C36509) * C1720 -
            (C37130 + C37131) * C1723 - (C37132 + C37133) * C51260) *
               C51163 * C2437 +
           (C36806 * C1722 + C36807 * C1720 - C37143 * C1723 -
            C37144 * C51260) *
               C51163 * C2438) *
              C51218 * C51492 +
          (((C33911 + C33910) * C1723 -
            ((C33528 + C33527) * C1720 + (C33526 + C33525) * C1722) +
            (C33913 + C33912) * C51260) *
               C51163 * C2436 +
           ((C35259 + C35260) * C1723 -
            ((C33725 + C33726) * C1720 + (C33727 + C33728) * C1722) +
            (C35261 + C35262) * C51260) *
               C51163 * C2437 +
           ((C38058 + C38059) * C1723 - (C36824 * C1720 + C36825 * C1722) +
            (C38060 + C38061) * C51260) *
               C51163 * C2438) *
              C51218 * C51477 +
          (C35419 * C51163 * C2436 +
           ((C33724 + C33723) * C1722 + (C33722 + C33721) * C1720 -
            (C35264 + C35263) * C1723 - (C35266 + C35265) * C51260) *
               C51163 * C2437 +
           ((C34095 + C34096) * C1722 + (C34097 + C34098) * C1720 -
            (C33491 * C3450 + C51382 * C3455 + C33490 * C862 + C33488 * C876) *
                C1723 -
            (C33491 * C3456 + C51382 * C3459 + C33490 * C877 + C33488 * C886) *
                C51260) *
               C51163 * C2438) *
              C51218 * C1354)) /
            (p * q * std::sqrt(p + q));
    d2ee[220] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                 C1722 +
             (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                 C1720 -
             (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                 C1723 -
             (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                 C51260) *
                C17433 +
            ((C33525 + C33526) * C1722 + (C33527 + C33528) * C1720 -
             (C33910 + C33911) * C1723 - (C33912 + C33913) * C51260) *
                C17434 +
            C35419 * C17435) *
               C51307 * C51446 +
           (((C33490 * C856 + C33488 * C864 + C33491 * C1146 + C51382 * C1150) *
                 C1723 -
             ((C33491 * C865 + C51382 * C880 + C33490 * C306 + C33488 * C315) *
                  C1720 +
              (C33491 * C856 + C51382 * C864 + C33490 * C297 + C33488 * C307) *
                  C1722) +
             (C33490 * C865 + C33488 * C880 + C33491 * C1151 + C51382 * C1158) *
                 C51260) *
                C17433 +
            ((C35259 + C35260) * C1723 -
             ((C33725 + C33726) * C1720 + (C33727 + C33728) * C1722) +
             (C35261 + C35262) * C51260) *
                C17434 +
            ((C35263 + C35264) * C1723 - (C33733 * C1720 + C33734 * C1722) +
             (C35265 + C35266) * C51260) *
                C17435) *
               C51307 * C51234) *
              C1456 +
          ((((C33911 + C33910) * C1723 -
             ((C33528 + C33527) * C1720 + (C33526 + C33525) * C1722) +
             (C33913 + C33912) * C51260) *
                C17433 +
            ((C33916 + C33915) * C1723 -
             ((C33532 + C33531) * C1720 + (C33530 + C33529) * C1722) +
             (C33918 + C33917) * C51260) *
                C17434 +
            ((C33919 + C33920) * C1723 - (C33543 * C1720 + C33544 * C1722) +
             (C33921 + C33922) * C51260) *
                C17435) *
               C51307 * C51446 +
           (((C33728 + C33727) * C1722 + (C33726 + C33725) * C1720 -
             (C35260 + C35259) * C1723 - (C35262 + C35261) * C51260) *
                C17433 +
            ((C33724 + C33723) * C1722 + (C33722 + C33721) * C1720 -
             (C35264 + C35263) * C1723 - (C35266 + C35265) * C51260) *
                C17434 +
            ((C33729 + C33730) * C1722 + (C33731 + C33732) * C1720 -
             (C33491 * C1149 + C51382 * C1156 + C33490 * C859 + C33488 * C870) *
                 C1723 -
             (C33491 * C1157 + C51382 * C1161 + C33490 * C871 + C33488 * C883) *
                 C51260) *
                C17435) *
               C51307 * C51234) *
              C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                 C1722 +
             (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                 C1720 -
             (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                 C1723 -
             (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                 C51260) *
                C51163 * C2436 +
            ((C36506 + C36507) * C1722 + (C36508 + C36509) * C1720 -
             (C37130 + C37131) * C1723 - (C37132 + C37133) * C51260) *
                C51163 * C2437 +
            (C36806 * C1722 + C36807 * C1720 - C37143 * C1723 -
             C37144 * C51260) *
                C51163 * C2438) *
               C51446 +
           (((C37131 + C37130) * C1723 -
             ((C36509 + C36508) * C1720 + (C36507 + C36506) * C1722) +
             (C37133 + C37132) * C51260) *
                C51163 * C2436 +
            ((C37136 + C37135) * C1723 -
             ((C36513 + C36512) * C1720 + (C36511 + C36510) * C1722) +
             (C37138 + C37137) * C51260) *
                C51163 * C2437 +
            ((C37139 + C37140) * C1723 - (C36940 * C1720 + C36941 * C1722) +
             (C37141 + C37142) * C51260) *
                C51163 * C2438) *
               C51234) *
              C1456 +
          ((((C33911 + C33910) * C1723 -
             ((C33528 + C33527) * C1720 + (C33526 + C33525) * C1722) +
             (C33913 + C33912) * C51260) *
                C51163 * C2436 +
            ((C35259 + C35260) * C1723 -
             ((C33725 + C33726) * C1720 + (C33727 + C33728) * C1722) +
             (C35261 + C35262) * C51260) *
                C51163 * C2437 +
            ((C38058 + C38059) * C1723 - (C36824 * C1720 + C36825 * C1722) +
             (C38060 + C38061) * C51260) *
                C51163 * C2438) *
               C51446 +
           (((C33728 + C33727) * C1722 + (C33726 + C33725) * C1720 -
             (C35260 + C35259) * C1723 - (C35262 + C35261) * C51260) *
                C51163 * C2436 +
            ((C34091 + C34092) * C1722 + (C34093 + C34094) * C1720 -
             (C38059 + C38058) * C1723 - (C38061 + C38060) * C51260) *
                C51163 * C2437 +
            ((C36832 + C36833) * C1722 + (C36834 + C36835) * C1720 -
             (C33491 * C3631 + C51382 * C3634 + C33490 * C3238 +
              C33488 * C3243) *
                 C1723 -
             (C33491 * C3635 + C51382 * C3637 + C33490 * C3244 +
              C33488 * C3250) *
                 C51260) *
                C51163 * C2438) *
               C51234) *
              C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[221] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C1989 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C51494 -
            (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                C1990 -
            (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                C51483 +
            (C33490 * C992 + C33488 * C997 + C33491 * C1236 + C51382 * C1240) *
                C1991 +
            (C33490 * C998 + C33488 * C1007 + C33491 * C1241 + C51382 * C1248) *
                C1988) *
               C17433 +
           ((C33525 + C33526) * C1989 + (C33527 + C33528) * C51494 -
            (C33910 + C33911) * C1990 - (C33912 + C33913) * C51483 +
            (C34505 + C34506) * C1991 + (C34507 + C34508) * C1988) *
               C17434 +
           (C33541 * C1989 + C33542 * C51494 - C33923 * C1990 -
            C33924 * C51483 + (C34509 + C34510) * C1991 +
            (C34511 + C34512) * C1988) *
               C17435) *
              C51307 * C51218 * C1456 +
          (((C33911 + C33910) * C1990 -
            ((C33528 + C33527) * C51494 + (C33526 + C33525) * C1989) +
            (C33913 + C33912) * C51483 - (C34506 + C34505) * C1991 -
            (C34508 + C34507) * C1988) *
               C17433 +
           ((C33916 + C33915) * C1990 -
            ((C33532 + C33531) * C51494 + (C33530 + C33529) * C1989) +
            (C33918 + C33917) * C51483 - (C34510 + C34509) * C1991 -
            (C34512 + C34511) * C1988) *
               C17434 +
           ((C33919 + C33920) * C1990 - (C33543 * C51494 + C33544 * C1989) +
            (C33921 + C33922) * C51483 -
            (C33491 * C1239 + C51382 * C1246 + C33490 * C995 + C33488 * C1003) *
                C1991 -
            (C33491 * C1247 + C51382 * C1251 + C33490 * C1004 +
             C33488 * C1010) *
                C1988) *
               C17435) *
              C51307 * C51218 * C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C1989 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C51494 -
            (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                C1990 -
            (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                C51483 +
            (C33490 * C992 + C33488 * C997 + C33491 * C1236 + C51382 * C1240) *
                C1991 +
            (C33490 * C998 + C33488 * C1007 + C33491 * C1241 + C51382 * C1248) *
                C1988) *
               C51163 * C2436 +
           ((C36506 + C36507) * C1989 + (C36508 + C36509) * C51494 -
            (C37130 + C37131) * C1990 - (C37132 + C37133) * C51483 +
            (C37458 + C37459) * C1991 + (C37460 + C37461) * C1988) *
               C51163 * C2437 +
           (C36806 * C1989 + C36807 * C51494 - C37143 * C1990 -
            C37144 * C51483 + (C37462 + C37463) * C1991 +
            (C37464 + C37465) * C1988) *
               C51163 * C2438) *
              C51218 * C1456 +
          (((C33911 + C33910) * C1990 -
            ((C33528 + C33527) * C51494 + (C33526 + C33525) * C1989) +
            (C33913 + C33912) * C51483 - (C34506 + C34505) * C1991 -
            (C34508 + C34507) * C1988) *
               C51163 * C2436 +
           ((C35259 + C35260) * C1990 -
            ((C33725 + C33726) * C51494 + (C33727 + C33728) * C1989) +
            (C35261 + C35262) * C51483 -
            (C33491 * C3761 + C51382 * C3766 + C33490 * C1147 +
             C33488 * C1152) *
                C1991 -
            (C33491 * C3767 + C51382 * C3773 + C33490 * C1153 +
             C33488 * C1159) *
                C1988) *
               C51163 * C2437 +
           ((C38058 + C38059) * C1990 - (C36824 * C51494 + C36825 * C1989) +
            (C38060 + C38061) * C51483 -
            (C33491 * C3763 + C51382 * C3770 + C33490 * C3449 +
             C33488 * C3453) *
                C1991 -
            (C33491 * C3771 + C51382 * C3775 + C33490 * C3454 +
             C33488 * C3458) *
                C1988) *
               C51163 * C2438) *
              C51218 * C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[222] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C118 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C51248) *
               C17433 +
           ((C33525 + C33526) * C118 + (C33527 + C33528) * C51248) * C17434 +
           C33549 * C17435) *
              C51307 * C51218 * C113 -
          (C33550 * C17435 +
           ((C33532 + C33531) * C51248 + (C33530 + C33529) * C118) * C17434 +
           ((C33528 + C33527) * C51248 + (C33526 + C33525) * C118) * C17433) *
              C51307 * C51218 * C114 +
          (C33549 * C17433 +
           ((C33536 + C33535) * C118 + (C33534 + C33533) * C51248) * C17434 +
           ((C33537 + C33538) * C118 + (C33539 + C33540) * C51248) * C17435) *
              C51307 * C51218 * C115 -
          (((C33491 * C471 + C51382 * C477 + C33490 * C137 + C33488 * C145) *
                C51248 +
            (C33491 * C459 + C51382 * C470 + C33490 * C124 + C33488 * C136) *
                C118) *
               C17435 +
           ((C33540 + C33539) * C51248 + (C33538 + C33537) * C118) * C17434 +
           C33550 * C17433) *
              C51307 * C51218 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                 C51248) *
                C17433 +
            ((C33525 + C33526) * C118 + (C33527 + C33528) * C51248) * C17434 +
            C33549 * C17435) *
               C51307 * C622 -
           (C33737 * C17435 +
            ((C33725 + C33726) * C51248 + (C33727 + C33728) * C118) * C17434 +
            ((C33491 * C865 + C51382 * C880 + C33490 * C306 + C33488 * C315) *
                 C51248 +
             (C33491 * C856 + C51382 * C864 + C33490 * C297 + C33488 * C307) *
                 C118) *
                C17433) *
               C51307 * C623 +
           (((C33490 * C627 + C33488 * C632 + C33491 * C860 + C51382 * C872) *
                 C118 +
             (C33490 * C633 + C33488 * C642 + C33491 * C873 + C51382 * C884) *
                 C51248) *
                C17433 +
            ((C34091 + C34092) * C118 + (C34093 + C34094) * C51248) * C17434 +
            ((C34095 + C34096) * C118 + (C34097 + C34098) * C51248) * C17435) *
               C51307 * C624) *
              C51439 +
          ((((C33728 + C33727) * C118 + (C33726 + C33725) * C51248) * C17433 +
            ((C33724 + C33723) * C118 + (C33722 + C33721) * C51248) * C17434 +
            ((C33729 + C33730) * C118 + (C33731 + C33732) * C51248) * C17435) *
               C51307 * C623 -
           (C33550 * C17435 +
            ((C33532 + C33531) * C51248 + (C33530 + C33529) * C118) * C17434 +
            ((C33528 + C33527) * C51248 + (C33526 + C33525) * C118) * C17433) *
               C51307 * C622 -
           (((C33491 * C879 + C51382 * C887 + C33490 * C639 + C33488 * C645) *
                 C51248 +
             (C33491 * C863 + C51382 * C878 + C33490 * C630 + C33488 * C638) *
                 C118) *
                C17435 +
            ((C34098 + C34097) * C51248 + (C34096 + C34095) * C118) * C17434 +
            ((C34094 + C34093) * C51248 + (C34092 + C34091) * C118) * C17433) *
               C51307 * C624) *
              C51191)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C118 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C51248) *
               C51163 * C2436 +
           ((C33490 * C297 + C33488 * C307 + C33491 * C856 + C51382 * C864) *
                C118 +
            (C33490 * C306 + C33488 * C315 + C33491 * C865 + C51382 * C880) *
                C51248) *
               C51163 * C2437 +
           ((C33490 * C627 + C33488 * C632 + C33491 * C860 + C51382 * C872) *
                C118 +
            (C33490 * C633 + C33488 * C642 + C33491 * C873 + C51382 * C884) *
                C51248) *
               C51163 * C2438) *
              C51218 * C113 -
          (((C34094 + C34093) * C51248 + (C34092 + C34091) * C118) * C51163 *
               C2438 +
           ((C33725 + C33726) * C51248 + (C33727 + C33728) * C118) * C51163 *
               C2437 +
           ((C33528 + C33527) * C51248 + (C33526 + C33525) * C118) * C51163 *
               C2436) *
              C51218 * C114 +
          (C33549 * C51163 * C2436 +
           ((C33724 + C33723) * C118 + (C33722 + C33721) * C51248) * C51163 *
               C2437 +
           ((C34095 + C34096) * C118 + (C34097 + C34098) * C51248) * C51163 *
               C2438) *
              C51218 * C115 -
          (((C33491 * C879 + C51382 * C887 + C33490 * C639 + C33488 * C645) *
                C51248 +
            (C33491 * C863 + C51382 * C878 + C33490 * C630 + C33488 * C638) *
                C118) *
               C51163 * C2438 +
           ((C33732 + C33731) * C51248 + (C33730 + C33729) * C118) * C51163 *
               C2437 +
           C33550 * C51163 * C2436) *
              C51218 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                 C51248) *
                C51163 * C2436 +
            ((C36506 + C36507) * C118 + (C36508 + C36509) * C51248) * C51163 *
                C2437 +
            C36840 * C2438) *
               C622 -
           (((C36828 + C36829) * C51248 + (C36830 + C36831) * C118) * C51163 *
                C2438 +
            ((C36513 + C36512) * C51248 + (C36511 + C36510) * C118) * C51163 *
                C2437 +
            ((C36509 + C36508) * C51248 + (C36507 + C36506) * C118) * C51163 *
                C2436) *
               C623 +
           (C36840 * C2436 +
            ((C36831 + C36830) * C118 + (C36829 + C36828) * C51248) * C51163 *
                C2437 +
            ((C33490 * C2936 + C33488 * C2939 + C33491 * C3239 +
              C51382 * C3245) *
                 C118 +
             (C33490 * C2940 + C33488 * C2945 + C33491 * C3246 +
              C51382 * C3251) *
                 C51248) *
                C51163 * C2438) *
               C624) *
              C51439 +
          ((((C33728 + C33727) * C118 + (C33726 + C33725) * C51248) * C51163 *
                C2436 +
            ((C34091 + C34092) * C118 + (C34093 + C34094) * C51248) * C51163 *
                C2437 +
            ((C36832 + C36833) * C118 + (C36834 + C36835) * C51248) * C51163 *
                C2438) *
               C623 -
           (C36841 * C2438 +
            ((C33725 + C33726) * C51248 + (C33727 + C33728) * C118) * C51163 *
                C2437 +
            ((C33528 + C33527) * C51248 + (C33526 + C33525) * C118) * C51163 *
                C2436) *
               C622 -
           (((C33491 * C3248 + C51382 * C3252 + C33490 * C2942 +
              C33488 * C2946) *
                 C51248 +
             (C33491 * C3240 + C51382 * C3247 + C33490 * C2937 +
              C33488 * C2941) *
                 C118) *
                C51163 * C2438 +
            ((C36835 + C36834) * C51248 + (C36833 + C36832) * C118) * C51163 *
                C2437 +
            C36841 * C2436) *
               C624) *
              C51191)) /
            (p * q * std::sqrt(p + q));
    d2ee[223] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                 C51248) *
                C17433 +
            ((C33525 + C33526) * C118 + (C33527 + C33528) * C51248) * C17434 +
            C33549 * C17435) *
               C51307 * C51446 -
           (C33737 * C17435 +
            ((C33725 + C33726) * C51248 + (C33727 + C33728) * C118) * C17434 +
            ((C33491 * C865 + C51382 * C880 + C33490 * C306 + C33488 * C315) *
                 C51248 +
             (C33491 * C856 + C51382 * C864 + C33490 * C297 + C33488 * C307) *
                 C118) *
                C17433) *
               C51307 * C51234) *
              C291 +
          ((((C33728 + C33727) * C118 + (C33726 + C33725) * C51248) * C17433 +
            ((C33724 + C33723) * C118 + (C33722 + C33721) * C51248) * C17434 +
            ((C33729 + C33730) * C118 + (C33731 + C33732) * C51248) * C17435) *
               C51307 * C51234 -
           (C33550 * C17435 +
            ((C33532 + C33531) * C51248 + (C33530 + C33529) * C118) * C17434 +
            ((C33528 + C33527) * C51248 + (C33526 + C33525) * C118) * C17433) *
               C51307 * C51446) *
              C292 +
          ((C33549 * C17433 +
            ((C33536 + C33535) * C118 + (C33534 + C33533) * C51248) * C17434 +
            ((C33537 + C33538) * C118 + (C33539 + C33540) * C51248) * C17435) *
               C51307 * C51446 -
           (((C33491 * C1590 + C51382 * C1591 + C33490 * C309 + C33488 * C316) *
                 C51248 +
             (C33491 * C1588 + C51382 * C1589 + C33490 * C298 + C33488 * C308) *
                 C118) *
                C17435 +
            ((C33732 + C33731) * C51248 + (C33730 + C33729) * C118) * C17434 +
            C33737 * C17433) *
               C51307 * C51234) *
              C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C118 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C51248) *
               C17433 +
           ((C33525 + C33526) * C118 + (C33527 + C33528) * C51248) * C17434 +
           C33549 * C17435) *
              C51307 * C737 -
          (C33737 * C17435 +
           ((C33725 + C33726) * C51248 + (C33727 + C33728) * C118) * C17434 +
           ((C33491 * C865 + C51382 * C880 + C33490 * C306 + C33488 * C315) *
                C51248 +
            (C33491 * C856 + C51382 * C864 + C33490 * C297 + C33488 * C307) *
                C118) *
               C17433) *
              C51307 * C738 +
          (((C33490 * C627 + C33488 * C632 + C33491 * C860 + C51382 * C872) *
                C118 +
            (C33490 * C633 + C33488 * C642 + C33491 * C873 + C51382 * C884) *
                C51248) *
               C17433 +
           ((C34091 + C34092) * C118 + (C34093 + C34094) * C51248) * C17434 +
           ((C34095 + C34096) * C118 + (C34097 + C34098) * C51248) * C17435) *
              C51307 * C739 -
          (((C33491 * C4264 + C51382 * C4265 + C33490 * C748 + C33488 * C755) *
                C51248 +
            (C33491 * C4262 + C51382 * C4263 + C33490 * C743 + C33488 * C749) *
                C118) *
               C17435 +
           ((C33491 * C3244 + C51382 * C3250 + C33490 * C750 + C33488 * C756) *
                C51248 +
            (C33491 * C3238 + C51382 * C3243 + C33490 * C744 + C33488 * C751) *
                C118) *
               C17434 +
           ((C33491 * C3242 + C51382 * C3249 + C33490 * C752 + C33488 * C757) *
                C51248 +
            (C33491 * C3237 + C51382 * C3241 + C33490 * C745 + C33488 * C753) *
                C118) *
               C17433) *
              C51307 * C740) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                 C118 +
             (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                 C51248) *
                C51163 * C2436 +
            ((C36506 + C36507) * C118 + (C36508 + C36509) * C51248) * C51163 *
                C2437 +
            ((C36510 + C36511) * C118 + (C36512 + C36513) * C51248) * C51163 *
                C2438) *
               C51446 -
           (((C33491 * C3242 + C51382 * C3249 + C33490 * C752 + C33488 * C757) *
                 C51248 +
             (C33491 * C3237 + C51382 * C3241 + C33490 * C745 + C33488 * C753) *
                 C118) *
                C51163 * C2438 +
            ((C36513 + C36512) * C51248 + (C36511 + C36510) * C118) * C51163 *
                C2437 +
            ((C36509 + C36508) * C51248 + (C36507 + C36506) * C118) * C51163 *
                C2436) *
               C51234) *
              C291 +
          ((((C33728 + C33727) * C118 + (C33726 + C33725) * C51248) * C51163 *
                C2436 +
            ((C34091 + C34092) * C118 + (C34093 + C34094) * C51248) * C51163 *
                C2437 +
            ((C33490 * C744 + C33488 * C751 + C33491 * C3238 + C51382 * C3243) *
                 C118 +
             (C33490 * C750 + C33488 * C756 + C33491 * C3244 + C51382 * C3250) *
                 C51248) *
                C51163 * C2438) *
               C51234 -
           (((C34094 + C34093) * C51248 + (C34092 + C34091) * C118) * C51163 *
                C2438 +
            ((C33725 + C33726) * C51248 + (C33727 + C33728) * C118) * C51163 *
                C2437 +
            ((C33528 + C33527) * C51248 + (C33526 + C33525) * C118) * C51163 *
                C2436) *
               C51446) *
              C292 +
          ((C33549 * C51163 * C2436 +
            ((C33724 + C33723) * C118 + (C33722 + C33721) * C51248) * C51163 *
                C2437 +
            ((C34095 + C34096) * C118 + (C34097 + C34098) * C51248) * C51163 *
                C2438) *
               C51446 -
           (((C33491 * C4264 + C51382 * C4265 + C33490 * C748 + C33488 * C755) *
                 C51248 +
             (C33491 * C4262 + C51382 * C4263 + C33490 * C743 + C33488 * C749) *
                 C118) *
                C51163 * C2438 +
            ((C34098 + C34097) * C51248 + (C34096 + C34095) * C118) * C51163 *
                C2437 +
            C33737 * C51163 * C2436) *
               C51234) *
              C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C118 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C51248) *
               C51163 * C2436 +
           ((C36506 + C36507) * C118 + (C36508 + C36509) * C51248) * C51163 *
               C2437 +
           C36840 * C2438) *
              C737 -
          (C36957 * C2438 +
           ((C36513 + C36512) * C51248 + (C36511 + C36510) * C118) * C51163 *
               C2437 +
           ((C36509 + C36508) * C51248 + (C36507 + C36506) * C118) * C51163 *
               C2436) *
              C738 +
          (C36840 * C2436 +
           ((C36831 + C36830) * C118 + (C36829 + C36828) * C51248) * C51163 *
               C2437 +
           ((C36952 + C36953) * C118 + (C36954 + C36955) * C51248) * C51163 *
               C2438) *
              C739 -
          (((C33491 * C20519 + C51382 * C20520 + C33490 * C3075 +
             C33488 * C3078) *
                C51248 +
            (C33491 * C20517 + C51382 * C20518 + C33490 * C3072 +
             C33488 * C3076) *
                C118) *
               C51163 * C2438 +
           ((C36955 + C36954) * C51248 + (C36953 + C36952) * C118) * C51163 *
               C2437 +
           C36957 * C2436) *
              C740) *
         C51186) /
            (p * q * std::sqrt(p + q));
    d2ee[224] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C452 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C51448 -
            (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                C453 -
            (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                C51260) *
               C17433 +
           ((C33525 + C33526) * C452 + (C33527 + C33528) * C51448 -
            (C33910 + C33911) * C453 - (C33912 + C33913) * C51260) *
               C17434 +
           C33928 * C17435) *
              C51307 * C51218 * C291 +
          (((C33911 + C33910) * C453 -
            ((C33528 + C33527) * C51448 + (C33526 + C33525) * C452) +
            (C33913 + C33912) * C51260) *
               C17433 +
           ((C33916 + C33915) * C453 -
            ((C33532 + C33531) * C51448 + (C33530 + C33529) * C452) +
            (C33918 + C33917) * C51260) *
               C17434 +
           ((C33919 + C33920) * C453 - (C33543 * C51448 + C33544 * C452) +
            (C33921 + C33922) * C51260) *
               C17435) *
              C51307 * C51218 * C292 +
          (C33928 * C17433 +
           ((C33536 + C33535) * C452 + (C33534 + C33533) * C51448 -
            (C33920 + C33919) * C453 - (C33922 + C33921) * C51260) *
               C17434 +
           ((C33537 + C33538) * C452 + (C33539 + C33540) * C51448 -
            (C33491 * C996 + C51382 * C1005 + C33490 * C458 + C33488 * C468) *
                C453 -
            (C33491 * C1006 + C51382 * C1011 + C33490 * C469 + C33488 * C476) *
                C51260) *
               C17435) *
              C51307 * C51218 * C293)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C452 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C51448 -
            (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                C453 -
            (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                C51260) *
               C17433 +
           ((C33525 + C33526) * C452 + (C33527 + C33528) * C51448 -
            (C33910 + C33911) * C453 - (C33912 + C33913) * C51260) *
               C17434 +
           C33928 * C17435) *
              C51307 * C622 +
          (((C33490 * C856 + C33488 * C864 + C33491 * C1146 + C51382 * C1150) *
                C453 -
            ((C33491 * C865 + C51382 * C880 + C33490 * C306 + C33488 * C315) *
                 C51448 +
             (C33491 * C856 + C51382 * C864 + C33490 * C297 + C33488 * C307) *
                 C452) +
            (C33490 * C865 + C33488 * C880 + C33491 * C1151 + C51382 * C1158) *
                C51260) *
               C17433 +
           ((C33490 * C857 + C33488 * C866 + C33491 * C1147 + C51382 * C1152) *
                C453 -
            ((C33725 + C33726) * C51448 + (C33727 + C33728) * C452) +
            (C33490 * C867 + C33488 * C881 + C33491 * C1153 + C51382 * C1159) *
                C51260) *
               C17434 +
           ((C33490 * C858 + C33488 * C868 + C33491 * C1148 + C51382 * C1154) *
                C453 -
            (C33733 * C51448 + C33734 * C452) +
            (C33490 * C869 + C33488 * C882 + C33491 * C1155 + C51382 * C1160) *
                C51260) *
               C17435) *
              C51307 * C623 +
          (((C33490 * C627 + C33488 * C632 + C33491 * C860 + C51382 * C872) *
                C452 +
            (C33490 * C633 + C33488 * C642 + C33491 * C873 + C51382 * C884) *
                C51448 -
            (C33491 * C3448 + C51382 * C3451 + C33490 * C860 + C33488 * C872) *
                C453 -
            (C33491 * C3452 + C51382 * C3457 + C33490 * C873 + C33488 * C884) *
                C51260) *
               C17433 +
           ((C34091 + C34092) * C452 + (C34093 + C34094) * C51448 -
            (C33491 * C3449 + C51382 * C3453 + C33490 * C861 + C33488 * C874) *
                C453 -
            (C33491 * C3454 + C51382 * C3458 + C33490 * C875 + C33488 * C885) *
                C51260) *
               C17434 +
           ((C34095 + C34096) * C452 + (C34097 + C34098) * C51448 -
            (C33491 * C3450 + C51382 * C3455 + C33490 * C862 + C33488 * C876) *
                C453 -
            (C33491 * C3456 + C51382 * C3459 + C33490 * C877 + C33488 * C886) *
                C51260) *
               C17435) *
              C51307 * C624) *
         C51186) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C452 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C51448 -
            (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                C453 -
            (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                C51260) *
               C51163 * C2436 +
           ((C36506 + C36507) * C452 + (C36508 + C36509) * C51448 -
            (C33491 * C1146 + C51382 * C1150 + C33490 * C856 + C33488 * C864) *
                C453 -
            (C33491 * C1151 + C51382 * C1158 + C33490 * C865 + C33488 * C880) *
                C51260) *
               C51163 * C2437 +
           ((C36510 + C36511) * C452 + (C36512 + C36513) * C51448 -
            (C33491 * C3448 + C51382 * C3451 + C33490 * C860 + C33488 * C872) *
                C453 -
            (C33491 * C3452 + C51382 * C3457 + C33490 * C873 + C33488 * C884) *
                C51260) *
               C51163 * C2438) *
              C51218 * C291 +
          (((C33911 + C33910) * C453 -
            ((C33528 + C33527) * C51448 + (C33526 + C33525) * C452) +
            (C33913 + C33912) * C51260) *
               C51163 * C2436 +
           ((C35259 + C35260) * C453 -
            ((C33725 + C33726) * C51448 + (C33727 + C33728) * C452) +
            (C35261 + C35262) * C51260) *
               C51163 * C2437 +
           ((C33490 * C861 + C33488 * C874 + C33491 * C3449 + C51382 * C3453) *
                C453 -
            ((C34094 + C34093) * C51448 + (C34092 + C34091) * C452) +
            (C33490 * C875 + C33488 * C885 + C33491 * C3454 + C51382 * C3458) *
                C51260) *
               C51163 * C2438) *
              C51218 * C292 +
          (C33928 * C51163 * C2436 +
           ((C33724 + C33723) * C452 + (C33722 + C33721) * C51448 -
            (C35264 + C35263) * C453 - (C35266 + C35265) * C51260) *
               C51163 * C2437 +
           ((C34095 + C34096) * C452 + (C34097 + C34098) * C51448 -
            (C33491 * C3450 + C51382 * C3455 + C33490 * C862 + C33488 * C876) *
                C453 -
            (C33491 * C3456 + C51382 * C3459 + C33490 * C877 + C33488 * C886) *
                C51260) *
               C51163 * C2438) *
              C51218 * C293)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C33490 * C119 + C33488 * C126 + C33491 * C454 + C51382 * C460) *
                C452 +
            (C33490 * C127 + C33488 * C140 + C33491 * C461 + C51382 * C472) *
                C51448 -
            (C33491 * C992 + C51382 * C997 + C33490 * C454 + C33488 * C460) *
                C453 -
            (C33491 * C998 + C51382 * C1007 + C33490 * C461 + C33488 * C472) *
                C51260) *
               C51163 * C2436 +
           ((C36506 + C36507) * C452 + (C36508 + C36509) * C51448 -
            (C37130 + C37131) * C453 - (C37132 + C37133) * C51260) *
               C51163 * C2437 +
           C37149 * C2438) *
              C622 +
          (((C37131 + C37130) * C453 -
            ((C36509 + C36508) * C51448 + (C36507 + C36506) * C452) +
            (C37133 + C37132) * C51260) *
               C51163 * C2436 +
           ((C37136 + C37135) * C453 -
            ((C36513 + C36512) * C51448 + (C36511 + C36510) * C452) +
            (C37138 + C37137) * C51260) *
               C51163 * C2437 +
           ((C37139 + C37140) * C453 - (C36940 * C51448 + C36941 * C452) +
            (C37141 + C37142) * C51260) *
               C51163 * C2438) *
              C623 +
          (C37149 * C2436 +
           ((C36831 + C36830) * C452 + (C36829 + C36828) * C51448 -
            (C37140 + C37139) * C453 - (C37142 + C37141) * C51260) *
               C51163 * C2437 +
           ((C36952 + C36953) * C452 + (C36954 + C36955) * C51448 -
            (C33491 * C20732 + C51382 * C20733 + C33490 * C3239 +
             C33488 * C3245) *
                C453 -
            (C33491 * C20734 + C51382 * C20735 + C33490 * C3246 +
             C33488 * C3251) *
                C51260) *
               C51163 * C2438) *
              C624) *
         C51186) /
            (p * q * std::sqrt(p + q));
}
