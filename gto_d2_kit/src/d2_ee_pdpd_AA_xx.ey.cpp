/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_pdpd_AA_xx.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_1212_11_11(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C49738 = 0 * ae;
    const double C49737 = ae * be;
    const double C49736 = 0 * be;
    const double C49735 = xA - xB;
    const double C49734 = ae + be;
    const double C49733 = 0 * be;
    const double C49838 = p + q;
    const double C49837 = p * q;
    const double C49843 = xP - xQ;
    const double C49842 = bs[2];
    const double C49850 = std::pow(ae, 2);
    const double C49848 = bs[3];
    const double C49861 = bs[4];
    const double C49882 = bs[5];
    const double C49915 = bs[6];
    const double C49961 = bs[7];
    const double C50016 = yP - yQ;
    const double C50075 = zP - zQ;
    const double C125 = bs[0];
    const double C50548 = ce + de;
    const double C50547 = ce * de;
    const double C50546 = xC - xD;
    const double C50570 = yC - yD;
    const double C50586 = zC - zD;
    const double C50672 = yA - yB;
    const double C50684 = zA - zB;
    const double C49744 = 2 * C49737;
    const double C49741 = -2 * C49736;
    const double C49743 = C49737 * C49735;
    const double C49742 = C49735 * C49736;
    const double C50522 = C49735 * be;
    const double C50521 = C49735 * ae;
    const double C50520 = std::pow(C49735, 2);
    const double C49745 = C49738 / C49734;
    const double C49740 = 2 * C49734;
    const double C49739 = std::pow(C49734, 2);
    const double C49839 = 2 * C49837;
    const double C49851 = C49843 * ae;
    const double C49847 = std::pow(C49843, 2);
    const double C50029 = std::pow(C50016, 2);
    const double C50088 = std::pow(C50075, 2);
    const double C50550 = 2 * C50548;
    const double C50560 = std::pow(C50548, 2);
    const double C50552 = C50546 * de;
    const double C50551 = C50546 * ce;
    const double C50549 = std::pow(C50546, 2);
    const double C50571 = std::pow(C50570, 2);
    const double C50623 = C50570 * de;
    const double C50622 = C50570 * ce;
    const double C50587 = std::pow(C50586, 2);
    const double C50651 = C50586 * de;
    const double C50650 = C50586 * ce;
    const double C50673 = std::pow(C50672, 2);
    const double C50723 = C50672 * be;
    const double C50722 = C50672 * ae;
    const double C50685 = std::pow(C50684, 2);
    const double C50749 = C50684 * be;
    const double C50748 = C50684 * ae;
    const double C49747 = ae * C49741;
    const double C49748 = C49742 / C49734;
    const double C50523 = C50520 * C49737;
    const double C50530 = std::pow(C49740, -1);
    const double C50811 = std::pow(C49740, -2);
    const double C49749 = 2 * C49739;
    const double C49746 = C49739 * C49740;
    const double C50789 = 4 * C49739;
    const double C49841 = C49839 / C49838;
    const double C139 =
        ((std::pow(xP - xQ, 2) * bs[2] * std::pow(C49839 / C49838, 2) -
          (bs[1] * C49839) / C49838) *
         std::pow(ae, 2)) /
        C49739;
    const double C126 = -(C49843 * bs[1] * C49839) / C49838;
    const double C268 = -(C50016 * bs[1] * C49839) / C49838;
    const double C415 = -(C50075 * bs[1] * C49839) / C49838;
    const double C49853 = C49848 * C49851;
    const double C49864 = C49861 * C49851;
    const double C49887 = C49882 * C49851;
    const double C49923 = C49915 * C49851;
    const double C49972 = C49961 * C49851;
    const double C132 = (-(bs[1] * C49851 * C49839) / C49838) / C49734;
    const double C49863 = C49847 * C49861;
    const double C49886 = C49847 * C49882;
    const double C49922 = C49847 * C49915;
    const double C49971 = C49847 * C49961;
    const double C50561 = std::pow(C50550, -1);
    const double C50798 = std::pow(C50550, -2);
    const double C50565 = 2 * C50560;
    const double C50796 = 4 * C50560;
    const double C50553 = C50549 * C50547;
    const double C50572 = C50571 * C50547;
    const double C50588 = C50587 * C50547;
    const double C50674 = C50673 * C49737;
    const double C50686 = C50685 * C49737;
    const double C49751 = 0 - C49748;
    const double C50524 = C50523 / C49734;
    const double C49755 = C49736 / C49749;
    const double C49752 = C49733 / C49749;
    const double C49844 = std::pow(C49841, 2);
    const double C49849 = -C49841;
    const double C49862 = std::pow(C49841, 4);
    const double C49916 = std::pow(C49841, 6);
    const double C50554 = C50553 / C50548;
    const double C50573 = C50572 / C50548;
    const double C50589 = C50588 / C50548;
    const double C50675 = C50674 / C49734;
    const double C50687 = C50686 / C49734;
    const double C49757 = C49751 * ae;
    const double C50525 = -C50524;
    const double C49846 = C49842 * C49844;
    const double C140 = (2 * ae * C49844 * C49842 * C49843 * ae +
                         C49843 *
                             (C49842 * C49844 + std::pow(C49843, 2) * bs[3] *
                                                    std::pow(-C49841, 3)) *
                             std::pow(ae, 2)) /
                        C49739;
    const double C133 = (C49843 * C49844 * C49842 * C49851) / C49734 -
                        (ae * bs[1] * C49839) / (C49838 * C49734);
    const double C278 = (C50016 * C49844 * C49842 * C49851) / C49734;
    const double C425 = (C50075 * C49844 * C49842 * C49851) / C49734;
    const double C49852 = std::pow(C49849, 3);
    const double C49883 = std::pow(C49849, 5);
    const double C49962 = std::pow(C49849, 7);
    const double C49868 = C49862 * C49864;
    const double C49867 = C49863 * C49862;
    const double C49881 = C49861 * C49862;
    const double C49928 = C49916 * C49923;
    const double C49927 = C49922 * C49916;
    const double C49960 = C49915 * C49916;
    const double C50555 = -C50554;
    const double C50574 = -C50573;
    const double C50590 = -C50589;
    const double C50676 = -C50675;
    const double C50688 = -C50687;
    const double C49761 = C49757 / C49734;
    const double C50526 = std::exp(C50525);
    const double C49854 = C49846 * ae;
    const double C127 = C49846 * C49847 - (bs[1] * C49839) / C49838;
    const double C267 = C50016 * C49843 * C49846;
    const double C269 = C49846 * C50029 - (bs[1] * C49839) / C49838;
    const double C414 = C50075 * C49843 * C49846;
    const double C416 = C49846 * C50088 - (bs[1] * C49839) / C49838;
    const double C805 = C50075 * C50016 * C49846;
    const double C49855 = C49852 * C49853;
    const double C49860 = C49848 * C49852;
    const double C288 =
        (C50016 * (C49846 + C49847 * C49848 * C49852) * C49850) / C49739;
    const double C435 =
        (C50075 * (C49846 + C49847 * C49848 * C49852) * C49850) / C49739;
    const double C49892 = C49883 * C49887;
    const double C49891 = C49886 * C49883;
    const double C49914 = C49882 * C49883;
    const double C49978 = C49962 * C49972;
    const double C49977 = C49971 * C49962;
    const double C49871 = C49843 * C49868;
    const double C49880 = ae * C49868;
    const double C50381 = C50016 * C49868;
    const double C49890 = C49881 * C49847;
    const double C49889 = C49843 * C49881;
    const double C49888 = C49881 * ae;
    const double C50470 = C49881 * C50029;
    const double C50490 = C50016 * C49881;
    const double C50495 = C49881 * C50088;
    const double C50512 = C50075 * C49881;
    const double C49932 = C49843 * C49928;
    const double C49959 = ae * C49928;
    const double C50057 = C49928 * C50029;
    const double C50116 = C49928 * C50088;
    const double C50135 = C50016 * C49928;
    const double C50154 = C50075 * C49928;
    const double C49975 = C49960 * C49847;
    const double C49974 = C49843 * C49960;
    const double C49973 = C49960 * ae;
    const double C50556 = std::exp(C50555);
    const double C50575 = std::exp(C50574);
    const double C50591 = std::exp(C50590);
    const double C50677 = std::exp(C50676);
    const double C50689 = std::exp(C50688);
    const double C49763 = C49761 - C49752;
    const double C49750 = C49743 * C50526;
    const double C50527 = C50526 * C50521;
    const double C50531 = C50530 * C50526;
    const double C50786 = C50526 * C50522;
    const double C50783 = C50526 / C49740;
    const double C17046 = C50811 * C50526;
    const double C49856 = C49843 * C49855;
    const double C279 = (C49844 * C49842 * C49851 + C49855 * C50029) / C49734;
    const double C426 = (C49844 * C49842 * C49851 + C49855 * C50088) / C49734;
    const double C810 = (C50075 * C50016 * C49855) / C49734;
    const double C1009 =
        (2 * C50016 * C49855 + C50016 * (C49855 + C49868 * C50029)) / C49734;
    const double C1123 = (C50016 * C49855 + C50016 * C49868 * C50088) / C49734;
    const double C1470 = (C50075 * (C49855 + C49868 * C50029)) / C49734;
    const double C1754 =
        (2 * C50075 * C49855 + C50075 * (C49855 + C49868 * C50088)) / C49734;
    const double C49866 = C49843 * C49860;
    const double C49865 = C49860 * ae;
    const double C49870 = C49860 + C49867;
    const double C50481 = C50016 * C49860;
    const double C128 =
        2 * C49843 * C49846 + C49843 * (C49846 + C49860 * C49847);
    const double C266 = C50016 * (C49846 + C49860 * C49847);
    const double C413 = C50075 * (C49846 + C49860 * C49847);
    const double C1005 =
        2 * C50016 * C49846 + C50016 * (C49846 + C49860 * C50029);
    const double C1119 = C50016 * C49846 + C50016 * C49860 * C50088;
    const double C1466 = C50075 * (C49846 + C49860 * C50029);
    const double C1750 =
        2 * C50075 * C49846 + C50075 * (C49846 + C49860 * C50088);
    const double C2369 =
        3 * (C49846 + C49860 * C50029) +
        C50016 * (2 * C50016 * C49860 + C50016 * (C49860 + C49881 * C50029));
    const double C2596 =
        C49846 + C49860 * C50029 + (C49860 + C49881 * C50029) * C50088;
    const double C3143 =
        C50075 * (2 * C50016 * C49860 + C50016 * (C49860 + C49881 * C50029));
    const double C5433 =
        3 * (C49846 + C49860 * C50088) +
        C50075 * (2 * C50075 * C49860 + C50075 * (C49860 + C49881 * C50088));
    const double C20014 = C50526 * C288;
    const double C22210 = C50526 * C435;
    const double C49896 = C49843 * C49892;
    const double C49913 = ae * C49892;
    const double C50044 = C50016 * C49892;
    const double C50103 = C50075 * C49892;
    const double C50371 = C49892 * C50029;
    const double C50390 = C49892 * C50088;
    const double C2372 =
        (3 * (C49855 + C49868 * C50029) +
         C50016 * (2 * C50016 * C49868 + C50016 * (C49868 + C49892 * C50029))) /
        C49734;
    const double C2599 =
        (C49855 + C49868 * C50029 + (C49868 + C49892 * C50029) * C50088) /
        C49734;
    const double C3146 =
        (C50075 * (2 * C50016 * C49868 + C50016 * (C49868 + C49892 * C50029))) /
        C49734;
    const double C5436 =
        (3 * (C49855 + C49868 * C50088) +
         C50075 * (2 * C50075 * C49868 + C50075 * (C49868 + C49892 * C50088))) /
        C49734;
    const double C49895 = C49881 + C49891;
    const double C49926 = C49914 * C49847;
    const double C49925 = C49843 * C49914;
    const double C49924 = C49914 * ae;
    const double C49931 = C49914 + C49927;
    const double C50499 = C49914 * C50029;
    const double C50508 = C50016 * C49914;
    const double C50513 = C49914 * C50088;
    const double C49982 = C49843 * C49978;
    const double C49981 = C49960 + C49977;
    const double C49885 = 2 * C49880;
    const double C49894 = C49860 + C49890;
    const double C49893 = C49889 * ae;
    const double C49919 = 2 * C49889;
    const double C50479 = C50016 * C49889;
    const double C50471 = C49860 + C50470;
    const double C50498 = 2 * C50490;
    const double C50496 = C49860 + C50495;
    const double C50514 = 2 * C50512;
    const double C49970 = 2 * C49959;
    const double C50062 = C49892 + C50057;
    const double C50121 = C49892 + C50116;
    const double C50142 = ae * C50135;
    const double C50183 = C50075 * C50135;
    const double C50401 = C50135 * C50088;
    const double C50161 = ae * C50154;
    const double C49980 = C49914 + C49975;
    const double C49979 = C49974 * ae;
    const double C50557 = C50556 * C50551;
    const double C50562 = C50561 * C50556;
    const double C50793 = C50556 * C50552;
    const double C50790 = C50556 / C50550;
    const double C930 = C50798 * C50556;
    const double C50624 = C50575 * C50622;
    const double C50627 = C50561 * C50575;
    const double C50802 = C50575 * C50623;
    const double C50797 = C50575 / C50550;
    const double C262 = C50798 * C50575;
    const double C50652 = C50591 * C50650;
    const double C50655 = C50561 * C50591;
    const double C50806 = C50591 * C50651;
    const double C50799 = C50591 / C50550;
    const double C411 = C50798 * C50591;
    const double C50724 = C50677 * C50722;
    const double C50727 = C50530 * C50677;
    const double C50815 = C50677 * C50723;
    const double C50810 = C50677 / C49740;
    const double C2194 = C50811 * C50677;
    const double C50750 = C50689 * C50748;
    const double C50753 = C50530 * C50689;
    const double C50819 = C50689 * C50749;
    const double C50812 = C50689 / C49740;
    const double C5134 = C50811 * C50689;
    const double C49756 = C49750 / C49739;
    const double C49754 = 2 * C49750;
    const double C49753 = -4 * C49750;
    const double C50787 = C50527 / C49749;
    const double C50785 = C50527 / C49734;
    const double C50784 = C50527 * C50522;
    const double C17045 = (2 * C50530 * C50527) / C49734;
    const double C50788 = C50531 * C50522;
    const double C108 = C50531 / C50789;
    const double C7925 = C50531 / C49740;
    const double C50824 = C50786 / C49734;
    const double C17044 = (C50526 * std::pow(C50521, 2)) / C49739 + C50783;
    const double C49857 = C49856 + C49854;
    const double C49869 = C49866 * ae;
    const double C270 = C49843 * C49846 + C49866 * C50029;
    const double C417 = C49843 * C49846 + C49866 * C50088;
    const double C806 = C50075 * C50016 * C49866;
    const double C1004 =
        2 * C50016 * C49866 + C50016 * (C49866 + C49889 * C50029);
    const double C1118 = C50016 * C49866 + C50016 * C49889 * C50088;
    const double C1465 = C50075 * (C49866 + C49889 * C50029);
    const double C1749 =
        2 * C50075 * C49866 + C50075 * (C49866 + C49889 * C50088);
    const double C49873 = C49871 + C49865;
    const double C49872 = C49870 * C49850;
    const double C4533 =
        2 * C50075 * C50481 + C50075 * (C50481 + C50016 * C49881 * C50088);
    const double C6426 =
        3 * (C50481 + C50490 * C50088) +
        C50075 * (2 * C50075 * C50490 +
                  C50075 * (C50490 + C50016 * C49914 * C50088));
    const double C49899 = C49896 + C49888;
    const double C49921 = 2 * C49913;
    const double C50049 = ae * C50044;
    const double C50393 = 2 * C50044;
    const double C4537 =
        (2 * C50075 * C50381 + C50075 * (C50381 + C50044 * C50088)) / C49734;
    const double C6428 =
        (3 * (C50381 + C50044 * C50088) +
         C50075 * (2 * C50075 * C50044 + C50075 * (C50044 + C50135 * C50088))) /
        C49734;
    const double C50108 = ae * C50103;
    const double C50404 = 2 * C50103;
    const double C50372 = C49868 + C50371;
    const double C50391 = C49868 + C50390;
    const double C49898 = C49895 * C49850;
    const double C49930 = C49881 + C49926;
    const double C49929 = C49925 * ae;
    const double C49966 = 2 * C49925;
    const double C50467 = C49925 * C50029;
    const double C50488 = C50016 * C49925;
    const double C50492 = C49925 * C50088;
    const double C2370 =
        3 * (C49866 + C49889 * C50029) +
        C50016 * (2 * C50016 * C49889 + C50016 * (C49889 + C49925 * C50029));
    const double C2597 =
        C49866 + C49889 * C50029 + (C49889 + C49925 * C50029) * C50088;
    const double C3144 =
        C50075 * (2 * C50016 * C49889 + C50016 * (C49889 + C49925 * C50029));
    const double C5434 =
        3 * (C49866 + C49889 * C50088) +
        C50075 * (2 * C50075 * C49889 + C50075 * (C49889 + C49925 * C50088));
    const double C49936 = C49932 + C49924;
    const double C49935 = C49931 * C49850;
    const double C50500 = C49881 + C50499;
    const double C50509 = C50508 * C50088;
    const double C50515 = C49881 + C50513;
    const double C49986 = C49982 + C49973;
    const double C49985 = C49981 * C49850;
    const double C49897 = C49894 * ae;
    const double C129 = 3 * (C49846 + C49860 * C49847) +
                        C49843 * (2 * C49866 + C49843 * C49894);
    const double C265 = C50016 * (2 * C49866 + C49843 * C49894);
    const double C271 = C49846 + C49860 * C49847 + C49894 * C50029;
    const double C412 = C50075 * (2 * C49866 + C49843 * C49894);
    const double C418 = C49846 + C49860 * C49847 + C49894 * C50088;
    const double C807 = C50075 * C50016 * C49894;
    const double C4532 =
        2 * C50075 * C50479 + C50075 * (C50479 + C50016 * C49925 * C50088);
    const double C3441 =
        4 * (2 * C50016 * C49860 + C50016 * C50471) +
        C50016 * (3 * C50471 + C50016 * (2 * C50016 * C49881 +
                                         C50016 * (C49881 + C49914 * C50029)));
    const double C3607 =
        2 * C50016 * C49860 + C50016 * C50471 +
        (2 * C50016 * C49881 + C50016 * (C49881 + C49914 * C50029)) * C50088;
    const double C4121 =
        C50075 * (3 * C50471 + C50016 * (2 * C50016 * C49881 +
                                         C50016 * (C49881 + C49914 * C50029)));
    const double C4531 =
        2 * C50075 * C50471 +
        C50075 * (C50471 + (C49881 + C49914 * C50029) * C50088);
    const double C7321 =
        4 * (2 * C50075 * C49860 + C50075 * C50496) +
        C50075 * (3 * C50496 + C50075 * (2 * C50075 * C49881 +
                                         C50075 * (C49881 + C49914 * C50088)));
    const double C50067 = ae * C50062;
    const double C50394 = C50016 * C50062;
    const double C50126 = ae * C50121;
    const double C50405 = C50075 * C50121;
    const double C50148 = 2 * C50142;
    const double C50188 = ae * C50183;
    const double C50402 = C50044 + C50401;
    const double C50167 = 2 * C50161;
    const double C49984 = C49843 * C49980;
    const double C49983 = C49980 * ae;
    const double C50794 = C50557 / C50565;
    const double C50792 = C50557 / C50548;
    const double C50791 = C50557 * C50552;
    const double C929 = (2 * C50561 * C50557) / C50548;
    const double C50795 = C50562 * C50552;
    const double C116 = C50562 / C50796;
    const double C560 = C50562 / C50550;
    const double C50827 = C50793 / C50548;
    const double C928 = (C50556 * std::pow(C50551, 2)) / C50560 + C50790;
    const double C50804 = C50624 / C50565;
    const double C50803 = C50624 * C50623;
    const double C50800 = C50624 / C50548;
    const double C261 = (2 * C50561 * C50624) / C50548;
    const double C50805 = C50627 * C50623;
    const double C1000 = C50627 / C50796;
    const double C1232 = C50627 / C50550;
    const double C50829 = C50802 / C50548;
    const double C260 = (C50575 * std::pow(C50622, 2)) / C50560 + C50797;
    const double C50808 = C50652 / C50565;
    const double C50807 = C50652 * C50651;
    const double C50801 = C50652 / C50548;
    const double C410 = (2 * C50561 * C50652) / C50548;
    const double C50809 = C50655 * C50651;
    const double C1746 = C50655 / C50796;
    const double C1993 = C50655 / C50550;
    const double C50832 = C50806 / C50548;
    const double C409 = (C50591 * std::pow(C50650, 2)) / C50560 + C50799;
    const double C50817 = C50724 / C49749;
    const double C50816 = C50724 * C50723;
    const double C50813 = C50724 / C49734;
    const double C2193 = (2 * C50530 * C50724) / C49734;
    const double C50818 = C50727 * C50723;
    const double C19895 = C50727 / C50789;
    const double C24660 = C50727 / C49740;
    const double C50835 = C50815 / C49734;
    const double C2192 = (C50677 * std::pow(C50722, 2)) / C49739 + C50810;
    const double C50821 = C50750 / C49749;
    const double C50820 = C50750 * C50749;
    const double C50814 = C50750 / C49734;
    const double C5133 = (2 * C50530 * C50750) / C49734;
    const double C50822 = C50753 * C50749;
    const double C39183 = C50753 / C50789;
    const double C44496 = C50753 / C49740;
    const double C50838 = C50819 / C49734;
    const double C5132 = (C50689 * std::pow(C50748, 2)) / C49739 + C50812;
    const double C49760 = C49745 - C49756;
    const double C49759 = C49735 * C49754;
    const double C2198 = (-C49754 / C49734) / C49740 - (0 * be) / C49734;
    const double C19897 = -C49754 / C49734;
    const double C49758 = C49753 / C49734;
    const double C24837 = C50785 * C288;
    const double C27967 = C50785 * C435;
    const double C50823 = C50784 / C49739;
    const double C50825 = C50788 / C49734;
    const double C2190 = -C50824;
    const double C17227 = C17044 * C288;
    const double C34115 = C17044 * C435;
    const double C49858 = ae * C49857;
    const double C134 =
        (C49844 * C49842 * C49851 + C49843 * C49857 + C49843 * C49846 * ae) /
        C49734;
    const double C277 = (C50016 * C49857) / C49734;
    const double C424 = (C50075 * C49857) / C49734;
    const double C49875 = ae * C49873;
    const double C49874 = C49843 * C49873;
    const double C49884 = 2 * C49873;
    const double C50023 = C50016 * C49873;
    const double C50082 = C50075 * C49873;
    const double C280 = (C49857 + C49873 * C50029) / C49734;
    const double C427 = (C49857 + C49873 * C50088) / C49734;
    const double C287 =
        (2 * ae * C50016 * C49855 + C49843 * C50016 * C49872) / C49739;
    const double C289 = ((C49846 + C49847 * C49848 * C49852) * C49850 +
                         C49872 * std::pow(C50016, 2)) /
                        C49739;
    const double C434 =
        (2 * ae * C50075 * C49855 + C49843 * C50075 * C49872) / C49739;
    const double C436 = ((C49846 + C49847 * C49848 * C49852) * C49850 +
                         C49872 * std::pow(C50075, 2)) /
                        C49739;
    const double C815 = (C50075 * C50016 * C49872) / C49739;
    const double C49902 = ae * C49899;
    const double C49901 = C49843 * C49899;
    const double C49918 = 2 * C49899;
    const double C50019 = C50016 * C49899;
    const double C50031 = C49899 * C50029;
    const double C50078 = C50075 * C49899;
    const double C50090 = C49899 * C50088;
    const double C50054 = 2 * C50049;
    const double C50113 = 2 * C50108;
    const double C3443 =
        (4 * (2 * C50016 * C49868 + C50016 * C50372) +
         C50016 * (3 * C50372 + C50016 * (2 * C50044 + C50016 * C50062))) /
        C49734;
    const double C3609 = (2 * C50016 * C49868 + C50016 * C50372 +
                          (2 * C50044 + C50016 * C50062) * C50088) /
                         C49734;
    const double C4123 =
        (C50075 * (3 * C50372 + C50016 * (2 * C50044 + C50016 * C50062))) /
        C49734;
    const double C4535 =
        (2 * C50075 * C50372 + C50075 * (C50372 + C50062 * C50088)) / C49734;
    const double C23167 =
        (3 * (C50372 + C50062 * C50088) +
         C50075 * (2 * C50075 * C50062 +
                   C50075 * (C50062 + (C49928 + C49978 * C50029) * C50088))) /
        C49734;
    const double C7323 =
        (4 * (2 * C50075 * C49868 + C50075 * C50391) +
         C50075 * (3 * C50391 + C50075 * (2 * C50103 + C50075 * C50121))) /
        C49734;
    const double C49900 = C49843 * C49898;
    const double C50017 = C50016 * C49898;
    const double C50076 = C50075 * C49898;
    const double C290 = (2 * ae * (C49855 + C49868 * C50029) +
                         C49843 * (C49872 + C49898 * C50029)) /
                        C49739;
    const double C437 = (2 * ae * (C49855 + C49868 * C50088) +
                         C49843 * (C49872 + C49898 * C50088)) /
                        C49739;
    const double C1013 =
        (2 * C50016 * C49872 + C50016 * (C49872 + C49898 * C50029)) / C49739;
    const double C1474 = (C50075 * (C49872 + C49898 * C50029)) / C49739;
    const double C1758 =
        (2 * C50075 * C49872 + C50075 * (C49872 + C49898 * C50088)) / C49739;
    const double C49934 = C49843 * C49930;
    const double C49933 = C49930 * ae;
    const double C49967 = 3 * C49930;
    const double C50486 = C50016 * C49930;
    const double C1003 =
        2 * C50016 * C49894 + C50016 * (C49894 + C49930 * C50029);
    const double C1117 = C50016 * C49894 + C50016 * C49930 * C50088;
    const double C1464 = C50075 * (C49894 + C49930 * C50029);
    const double C1748 =
        2 * C50075 * C49894 + C50075 * (C49894 + C49930 * C50088);
    const double C2371 =
        3 * (C49894 + C49930 * C50029) +
        C50016 * (2 * C50016 * C49930 + C50016 * (C49930 + C49980 * C50029));
    const double C2598 =
        C49894 + C49930 * C50029 + (C49930 + C49980 * C50029) * C50088;
    const double C3145 =
        C50075 * (2 * C50016 * C49930 + C50016 * (C49930 + C49980 * C50029));
    const double C5435 =
        3 * (C49894 + C49930 * C50088) +
        C50075 * (2 * C50075 * C49930 + C50075 * (C49930 + C49980 * C50088));
    const double C50468 = C49889 + C50467;
    const double C6425 =
        3 * (C50479 + C50488 * C50088) +
        C50075 * (2 * C50075 * C50488 +
                  C50075 * (C50488 + C50016 * C49974 * C50088));
    const double C50493 = C49889 + C50492;
    const double C49941 = ae * C49936;
    const double C49939 = C49843 * C49936;
    const double C49965 = 2 * C49936;
    const double C50037 = C49936 * C50029;
    const double C50048 = C50016 * C49936;
    const double C50096 = C49936 * C50088;
    const double C50107 = C50075 * C49936;
    const double C49938 = C49843 * C49935;
    const double C50035 = C49935 * C50029;
    const double C50045 = C50016 * C49935;
    const double C50094 = C49935 * C50088;
    const double C50104 = C50075 * C49935;
    const double C50501 = C50016 * C50500;
    const double C23166 =
        3 * (C50471 + C50500 * C50088) +
        C50075 * (2 * C50075 * C50500 +
                  C50075 * (C50500 + (C49914 + C49960 * C50029) * C50088));
    const double C50510 = C50490 + C50509;
    const double C50516 = C50075 * C50515;
    const double C49992 = ae * C49986;
    const double C49989 = C49843 * C49986;
    const double C50061 = C49986 * C50029;
    const double C50120 = C49986 * C50088;
    const double C50140 = C50016 * C49986;
    const double C50159 = C50075 * C49986;
    const double C49988 = C49843 * C49985;
    const double C50058 = C49985 * C50029;
    const double C50117 = C49985 * C50088;
    const double C50136 = C50016 * C49985;
    const double C50155 = C50075 * C49985;
    const double C50072 = 2 * C50067;
    const double C50395 = C50393 + C50394;
    const double C50131 = 2 * C50126;
    const double C50406 = C50404 + C50405;
    const double C50193 = 2 * C50188;
    const double C24063 =
        (4 * (2 * C50075 * C50044 + C50075 * C50402) +
         C50075 * (3 * C50402 +
                   C50075 * (2 * C50183 +
                             C50075 * (C50135 + C50016 * C49978 * C50088)))) /
        C49734;
    const double C49987 = C49966 + C49984;
    const double C50826 = C50791 / C50560;
    const double C50828 = C50795 / C50548;
    const double C263 = -C50827;
    const double C50830 = C50803 / C50560;
    const double C50831 = C50805 / C50548;
    const double C926 = -C50829;
    const double C50833 = C50807 / C50560;
    const double C50834 = C50809 / C50548;
    const double C1577 = -C50832;
    const double C50836 = C50816 / C49739;
    const double C50837 = C50818 / C49734;
    const double C17047 = -C50835;
    const double C50839 = C50820 / C49739;
    const double C50840 = C50822 / C49734;
    const double C33816 = -C50838;
    const double C24667 = C49760 * C133;
    const double C124 =
        (C49760 / C49740 - (0 * be) / C49734) / C49740 + (0 * ae) / C49734;
    const double C7933 = C49760 / C49740 - (0 * be) / C49734;
    const double C17054 = C49760 / C49740 + (0 * ae) / C49734;
    const double C49762 = C49759 / C49734;
    const double C2201 = C2198 * C133;
    const double C19906 = C19897 * C133;
    const double C19902 = C19897 * C1009;
    const double C19901 = C19897 * C279;
    const double C19900 = C19897 * C278;
    const double C19899 = C19897 * C132;
    const double C20020 = C19897 * C2372;
    const double C20169 = C19897 * C2599;
    const double C20168 = C19897 * C1123;
    const double C20167 = C19897 * C426;
    const double C20166 = C19897 * C425;
    const double C20165 = C19897 * C810;
    const double C20164 = C19897 * C1470;
    const double C20163 = C19897 * C3146;
    const double C21464 = C19897 * C1754;
    const double C21463 = C19897 * C4537;
    const double C22218 = C19897 * C6428;
    const double C22217 = C19897 * C5436;
    const double C50841 = C50783 - C50823;
    const double C50842 = C50787 - C50825;
    const double C2380 = C2190 * C288;
    const double C5444 = C2190 * C435;
    const double C141 =
        ((C49846 + C49847 * C49848 * C49852) * C49850 + C49858 + C49858 +
         C49843 *
             (2 * ae * C49855 +
              C49843 *
                  (C49848 * C49852 + C49847 * bs[4] * std::pow(C49841, 4)) *
                  C49850)) /
        C49739;
    const double C2210 = C2198 * C134;
    const double C19907 = C19897 * C134;
    const double C24676 = C49760 * C134;
    const double C2203 = C2198 * C277;
    const double C19905 = C19897 * C277;
    const double C24669 = C49760 * C277;
    const double C2610 = C2198 * C424;
    const double C20171 = C19897 * C424;
    const double C25058 = C49760 * C424;
    const double C49876 = C49855 + C49874;
    const double C50024 = ae * C50023;
    const double C811 = (C50075 * C50023) / C49734;
    const double C50083 = ae * C50082;
    const double C2205 = C2198 * C280;
    const double C19904 = C19897 * C280;
    const double C24671 = C49760 * C280;
    const double C2613 = C2198 * C427;
    const double C20178 = C19897 * C427;
    const double C25061 = C49760 * C427;
    const double C2396 = C2190 * C287;
    const double C2382 = C50531 * C287;
    const double C17245 = C17044 * C287;
    const double C17229 = C17045 * C287;
    const double C20024 = C50526 * C287;
    const double C24853 = C50785 * C287;
    const double C24839 = C50531 * C287;
    const double C2384 = C2190 * C289;
    const double C17240 = C17044 * C289;
    const double C20016 = C50526 * C289;
    const double C24841 = C50785 * C289;
    const double C5458 = C2190 * C434;
    const double C5446 = C50531 * C434;
    const double C22220 = C50526 * C434;
    const double C27975 = C50785 * C434;
    const double C27969 = C50531 * C434;
    const double C34127 = C17044 * C434;
    const double C34117 = C17045 * C434;
    const double C5448 = C2190 * C436;
    const double C22212 = C50526 * C436;
    const double C27973 = C50785 * C436;
    const double C34125 = C17044 * C436;
    const double C3160 = C2190 * C815;
    const double C17983 = C17044 * C815;
    const double C20533 = C50526 * C815;
    const double C25599 = C50785 * C815;
    const double C49912 = C49898 + C49902;
    const double C49904 = C49868 + C49901;
    const double C50021 = ae * C50019;
    const double C50174 = C50075 * C50019;
    const double C50208 = 2 * C50019;
    const double C1122 = (C50023 + C50019 * C50088) / C49734;
    const double C50032 = C49873 + C50031;
    const double C50080 = ae * C50078;
    const double C50253 = 2 * C50078;
    const double C50091 = C49873 + C50090;
    const double C20022 = C19897 * C3443;
    const double C20170 = C19897 * C3609;
    const double C20534 = C19897 * C4123;
    const double C21462 = C19897 * C4535;
    const double C23176 = C19897 * C23167;
    const double C24069 = C19897 * C7323;
    const double C49903 = C49885 + C49900;
    const double C816 =
        (2 * ae * C50075 * C50016 * C49868 + C49843 * C50075 * C50017) / C49739;
    const double C1127 = (C50016 * C49872 + C50017 * C50088) / C49739;
    const double C2400 = C2190 * C290;
    const double C2386 = C50531 * C290;
    const double C17252 = C17044 * C290;
    const double C17237 = C17045 * C290;
    const double C20026 = C50526 * C290;
    const double C24857 = C50785 * C290;
    const double C24843 = C50531 * C290;
    const double C5462 = C2190 * C437;
    const double C5450 = C50531 * C437;
    const double C22222 = C50526 * C437;
    const double C27979 = C50785 * C437;
    const double C27971 = C50531 * C437;
    const double C34133 = C17044 * C437;
    const double C34123 = C17045 * C437;
    const double C2392 = C2190 * C1013;
    const double C18259 = C17044 * C1013;
    const double C20018 = C50526 * C1013;
    const double C24849 = C50785 * C1013;
    const double C3156 = C2190 * C1474;
    const double C18927 = C17044 * C1474;
    const double C20531 = C50526 * C1474;
    const double C25595 = C50785 * C1474;
    const double C5454 = C2190 * C1758;
    const double C22216 = C50526 * C1758;
    const double C30390 = C50785 * C1758;
    const double C35948 = C17044 * C1758;
    const double C49937 = C49919 + C49934;
    const double C6020 =
        2 * C50075 * C50486 + C50075 * (C50486 + C50016 * C49980 * C50088);
    const double C3440 =
        4 * (2 * C50016 * C49889 + C50016 * C50468) +
        C50016 * (3 * C50468 + C50016 * (2 * C50016 * C49925 +
                                         C50016 * (C49925 + C49974 * C50029)));
    const double C3606 =
        2 * C50016 * C49889 + C50016 * C50468 +
        (2 * C50016 * C49925 + C50016 * (C49925 + C49974 * C50029)) * C50088;
    const double C4120 =
        C50075 * (3 * C50468 + C50016 * (2 * C50016 * C49925 +
                                         C50016 * (C49925 + C49974 * C50029)));
    const double C4530 =
        2 * C50075 * C50468 +
        C50075 * (C50468 + (C49925 + C49974 * C50029) * C50088);
    const double C7320 =
        4 * (2 * C50075 * C49889 + C50075 * C50493) +
        C50075 * (3 * C50493 + C50075 * (2 * C50075 * C49925 +
                                         C50075 * (C49925 + C49974 * C50088)));
    const double C49958 = C49935 + C49941;
    const double C49943 = C49892 + C49939;
    const double C50040 = C49899 + C50037;
    const double C50053 = ae * C50048;
    const double C50179 = C50075 * C50048;
    const double C50200 = 2 * C50048;
    const double C50224 = C50048 * C50088;
    const double C50099 = C49899 + C50096;
    const double C50112 = ae * C50107;
    const double C50245 = 2 * C50107;
    const double C49942 = C49921 + C49938;
    const double C50038 = C49898 + C50035;
    const double C50050 = C49843 * C50045;
    const double C50177 = C50075 * C50045;
    const double C50196 = 2 * C50045;
    const double C1126 = (2 * ae * (C50016 * C49868 + C50044 * C50088) +
                          C49843 * (C50017 + C50045 * C50088)) /
                         C49739;
    const double C4541 =
        (2 * C50075 * C50017 + C50075 * (C50017 + C50045 * C50088)) / C49739;
    const double C50097 = C49898 + C50094;
    const double C50109 = C49843 * C50104;
    const double C50241 = 2 * C50104;
    const double C50502 = C50498 + C50501;
    const double C24062 =
        4 * (2 * C50075 * C50490 + C50075 * C50510) +
        C50075 * (3 * C50510 +
                  C50075 * (2 * C50075 * C50508 +
                            C50075 * (C50508 + C50016 * C49960 * C50088)));
    const double C50517 = C50514 + C50516;
    const double C49994 = C49928 + C49989;
    const double C50066 = C49936 + C50061;
    const double C50125 = C49936 + C50120;
    const double C50147 = ae * C50140;
    const double C50187 = C50075 * C50140;
    const double C50217 = C50140 * C50088;
    const double C50166 = ae * C50159;
    const double C49993 = C49970 + C49988;
    const double C50063 = C49935 + C50058;
    const double C50122 = C49935 + C50117;
    const double C50143 = C49843 * C50136;
    const double C50184 = C50075 * C50136;
    const double C50215 = C50136 * C50088;
    const double C50162 = C49843 * C50155;
    const double C20730 =
        (5 * (3 * C50372 + C50016 * C50395) +
         C50016 * (4 * C50395 +
                   C50016 * (3 * C50062 +
                             C50016 * (2 * C50135 +
                                       C50016 * (C49928 + C49978 * C50029))))) /
        C49734;
    const double C20838 =
        (3 * C50372 + C50016 * C50395 +
         (3 * C50062 +
          C50016 * (2 * C50135 + C50016 * (C49928 + C49978 * C50029))) *
             C50088) /
        C49734;
    const double C21186 =
        (C50075 * (4 * C50395 +
                   C50016 * (3 * C50062 +
                             C50016 * (2 * C50135 +
                                       C50016 * (C49928 + C49978 * C50029))))) /
        C49734;
    const double C21458 =
        (2 * C50075 * C50395 +
         C50075 * (C50395 + (2 * C50135 + C50016 * (C49928 + C49978 * C50029)) *
                                C50088)) /
        C49734;
    const double C40570 =
        (5 * (3 * C50391 + C50075 * C50406) +
         C50075 * (4 * C50406 +
                   C50075 * (3 * C50121 +
                             C50075 * (2 * C50154 +
                                       C50075 * (C49928 + C49978 * C50088))))) /
        C49734;
    const double C24068 = C19897 * C24063;
    const double C49991 = C49843 * C49987;
    const double C49990 = C49987 * ae;
    const double C50843 = C50790 - C50826;
    const double C50844 = C50794 - C50828;
    const double C50845 = C50797 - C50830;
    const double C50846 = C50804 - C50831;
    const double C50847 = C50799 - C50833;
    const double C50848 = C50808 - C50834;
    const double C50849 = C50810 - C50836;
    const double C50850 = C50817 - C50837;
    const double C50851 = C50812 - C50839;
    const double C50852 = C50821 - C50840;
    const double C7937 = C7933 * C134;
    const double C17058 = C17054 * C134;
    const double C49764 = C50526 - C49762;
    const double C8131 = C50841 * C290;
    const double C8124 = C50841 * C287;
    const double C8119 = C50841 * C289;
    const double C8106 = C50841 * C288;
    const double C8862 = C50841 * C815;
    const double C9138 = C50841 * C1013;
    const double C9806 = C50841 * C1474;
    const double C11119 = C50841 * C437;
    const double C11113 = C50841 * C434;
    const double C11111 = C50841 * C436;
    const double C11101 = C50841 * C435;
    const double C12934 = C50841 * C1758;
    const double C105 = (C50841 * C50521) / C49734 + (C50785 - C50824) / C49740;
    const double C8116 = C50842 * C290;
    const double C8108 = C50842 * C287;
    const double C11109 = C50842 * C437;
    const double C11103 = C50842 * C434;
    const double C106 =
        (C50842 * C50521) / C49734 + (2 * C50531 + C50841) / C49740;
    const double C107 = (C50521 * C50531) / C49749 + C50842 / C49740;
    const double C49877 = C49876 + C49869;
    const double C286 =
        (C50016 * C49872 + C50024 + C50024 +
         C49843 * (2 * ae * C50016 * C49868 + C49843 * C50017)) /
        C49739;
    const double C2608 = C2198 * C811;
    const double C20172 = C19897 * C811;
    const double C25056 = C49760 * C811;
    const double C433 =
        (C50075 * C49872 + C50083 + C50083 +
         C49843 * (2 * ae * C50075 * C49868 + C49843 * C50076)) /
        C49739;
    const double C49920 = C49912 + C49902;
    const double C49905 = C49904 + C49893;
    const double C50175 = ae * C50174;
    const double C2615 = C2198 * C1122;
    const double C20177 = C19897 * C1122;
    const double C25063 = C49760 * C1122;
    const double C50033 = ae * C50032;
    const double C1008 = (2 * C50023 + C50016 * C50032) / C49734;
    const double C1469 = (C50075 * C50032) / C49734;
    const double C50092 = ae * C50091;
    const double C1753 = (2 * C50082 + C50075 * C50091) / C49734;
    const double C3164 = C2190 * C816;
    const double C3158 = C50531 * C816;
    const double C8867 = C50841 * C816;
    const double C8860 = C50842 * C816;
    const double C17988 = C17044 * C816;
    const double C17981 = C17045 * C816;
    const double C20536 = C50526 * C816;
    const double C25603 = C50785 * C816;
    const double C25597 = C50531 * C816;
    const double C3614 = C2190 * C1127;
    const double C9302 = C50841 * C1127;
    const double C18423 = C17044 * C1127;
    const double C20842 = C50526 * C1127;
    const double C26041 = C50785 * C1127;
    const double C49940 = C49937 * ae;
    const double C130 = 4 * (2 * C49866 + C49843 * C49894) +
                        C49843 * (3 * C49894 + C49843 * C49937);
    const double C272 = 2 * C49866 + C49843 * C49894 + C49937 * C50029;
    const double C273 = C50016 * (3 * C49894 + C49843 * C49937);
    const double C419 = 2 * C49866 + C49843 * C49894 + C49937 * C50088;
    const double C420 = C50075 * (3 * C49894 + C49843 * C49937);
    const double C808 = C50075 * C50016 * C49937;
    const double C1002 =
        2 * C50016 * C49937 + C50016 * (C49937 + C49987 * C50029);
    const double C1116 = C50016 * C49937 + C50016 * C49987 * C50088;
    const double C1463 = C50075 * (C49937 + C49987 * C50029);
    const double C1747 =
        2 * C50075 * C49937 + C50075 * (C49937 + C49987 * C50088);
    const double C49969 = C49958 + C49941;
    const double C49945 = C49943 + C49929;
    const double C50042 = ae * C50040;
    const double C50209 = C50016 * C50040;
    const double C50236 = C50075 * C50040;
    const double C50262 = 3 * C50040;
    const double C2600 = (C50032 + C50040 * C50088) / C49734;
    const double C50134 = C50045 + C50053;
    const double C50181 = ae * C50179;
    const double C50295 = 2 * C50179;
    const double C50225 = C50019 + C50224;
    const double C50101 = ae * C50099;
    const double C50254 = C50075 * C50099;
    const double C50290 = 3 * C50099;
    const double C50153 = C50104 + C50112;
    const double C49944 = C49843 * C49942;
    const double C49957 = 2 * C49942;
    const double C1012 =
        (2 * ae * (2 * C50016 * C49868 + C50016 * (C49868 + C49892 * C50029)) +
         C49843 * (2 * C50017 + C50016 * C50038)) /
        C49739;
    const double C1473 = (2 * ae * C50075 * (C49868 + C49892 * C50029) +
                          C49843 * C50075 * C50038) /
                         C49739;
    const double C2375 = (3 * (C49872 + C49898 * C50029) +
                          C50016 * (2 * C50017 + C50016 * C50038)) /
                         C49739;
    const double C2602 = (C49872 + C49898 * C50029 + C50038 * C50088) / C49739;
    const double C3149 = (C50075 * (2 * C50017 + C50016 * C50038)) / C49739;
    const double C50055 = C50054 + C50050;
    const double C3616 = C50531 * C1126;
    const double C6025 = C2190 * C1126;
    const double C9304 = C50842 * C1126;
    const double C18425 = C17045 * C1126;
    const double C22050 = C50526 * C1126;
    const double C26043 = C50531 * C1126;
    const double C27983 = C50785 * C1126;
    const double C6433 = C2190 * C4541;
    const double C22214 = C50526 * C4541;
    const double C29215 = C50785 * C4541;
    const double C1757 =
        (2 * ae * (2 * C50075 * C49868 + C50075 * (C49868 + C49892 * C50088)) +
         C49843 * (2 * C50076 + C50075 * C50097)) /
        C49739;
    const double C5439 = (3 * (C49872 + C49898 * C50088) +
                          C50075 * (2 * C50076 + C50075 * C50097)) /
                         C49739;
    const double C50114 = C50113 + C50109;
    const double C20729 =
        5 * (3 * C50471 + C50016 * C50502) +
        C50016 * (4 * C50502 +
                  C50016 * (3 * C50500 +
                            C50016 * (2 * C50016 * C49914 +
                                      C50016 * (C49914 + C49960 * C50029))));
    const double C20837 =
        3 * C50471 + C50016 * C50502 +
        (3 * C50500 +
         C50016 * (2 * C50016 * C49914 + C50016 * (C49914 + C49960 * C50029))) *
            C50088;
    const double C21185 =
        C50075 * (4 * C50502 +
                  C50016 * (3 * C50500 +
                            C50016 * (2 * C50016 * C49914 +
                                      C50016 * (C49914 + C49960 * C50029))));
    const double C21457 =
        2 * C50075 * C50502 +
        C50075 * (C50502 +
                  (2 * C50016 * C49914 + C50016 * (C49914 + C49960 * C50029)) *
                      C50088);
    const double C40569 =
        5 * (3 * C50496 + C50075 * C50517) +
        C50075 * (4 * C50517 +
                  C50075 * (3 * C50515 +
                            C50075 * (2 * C50075 * C49914 +
                                      C50075 * (C49914 + C49960 * C50088))));
    const double C49997 = C49994 + C49979;
    const double C50071 = ae * C50066;
    const double C50201 = C50016 * C50066;
    const double C50232 = C50075 * C50066;
    const double C50269 = C50066 * C50088;
    const double C50130 = ae * C50125;
    const double C50246 = C50075 * C50125;
    const double C50192 = ae * C50187;
    const double C50220 = C50048 + C50217;
    const double C49996 = C49843 * C49993;
    const double C50068 = C49843 * C50063;
    const double C50197 = C50016 * C50063;
    const double C50230 = C50075 * C50063;
    const double C2603 =
        (2 * ae * (C49868 + C49892 * C50029 + C50062 * C50088) +
         C49843 * (C50038 + C50063 * C50088)) /
        C49739;
    const double C4124 =
        (2 * ae * C50075 *
             (3 * C50062 +
              C50016 * (2 * C50135 + C50016 * (C49928 + C49978 * C50029))) +
         C49843 * C50075 *
             (3 * C50063 +
              C50016 *
                  (2 * C50136 +
                   C50016 * (C49985 + (C49961 * C49962 +
                                       C49847 * bs[8] * std::pow(C49841, 8)) *
                                          C49850 * C50029)))) /
        C49739;
    const double C4539 =
        (2 * C50075 * C50038 + C50075 * (C50038 + C50063 * C50088)) / C49739;
    const double C50127 = C49843 * C50122;
    const double C50242 = C50075 * C50122;
    const double C50149 = C50148 + C50143;
    const double C50189 = C49843 * C50184;
    const double C50218 = C50045 + C50215;
    const double C50168 = C50167 + C50162;
    const double C20735 = C19897 * C20730;
    const double C20847 = C19897 * C20838;
    const double C21191 = C19897 * C21186;
    const double C21461 = C19897 * C21458;
    const double C40575 = C19897 * C40570;
    const double C49995 = C49967 + C49991;
    const double C113 = (C50843 * C50551) / C50548 + (C50792 - C50827) / C50550;
    const double C114 =
        (C50844 * C50551) / C50548 + (2 * C50562 + C50843) / C50550;
    const double C115 = (C50551 * C50562) / C50565 + C50844 / C50550;
    const double C997 = (C50845 * C50622) / C50548 + (C50800 - C50829) / C50550;
    const double C998 =
        (C50846 * C50622) / C50548 + (2 * C50627 + C50845) / C50550;
    const double C999 = (C50622 * C50627) / C50565 + C50846 / C50550;
    const double C1743 =
        (C50847 * C50650) / C50548 + (C50801 - C50832) / C50550;
    const double C1744 =
        (C50848 * C50650) / C50548 + (2 * C50655 + C50847) / C50550;
    const double C1745 = (C50650 * C50655) / C50565 + C50848 / C50550;
    const double C19892 =
        (C50849 * C50722) / C49734 + (C50813 - C50835) / C49740;
    const double C19893 =
        (C50850 * C50722) / C49734 + (2 * C50727 + C50849) / C49740;
    const double C19894 = (C50722 * C50727) / C49749 + C50850 / C49740;
    const double C39180 =
        (C50851 * C50748) / C49734 + (C50814 - C50838) / C49740;
    const double C39181 =
        (C50852 * C50748) / C49734 + (2 * C50753 + C50851) / C49740;
    const double C39182 = (C50748 * C50753) / C49749 + C50852 / C49740;
    const double C49766 = C49764 * ae;
    const double C49765 = C49764 * C49744;
    const double C2196 = (-C49736 / C49734) / C49740 - (C49764 * be) / C49734;
    const double C49878 = ae * C49877;
    const double C135 =
        (2 * C49857 + C49843 * C49877 + (C49846 + C49860 * C49847) * ae) /
        C49734;
    const double C276 = (C50016 * C49877) / C49734;
    const double C423 = (C50075 * C49877) / C49734;
    const double C2398 = C50531 * C286;
    const double C2777 = C2190 * C286;
    const double C8126 = C50842 * C286;
    const double C8110 = C7925 * C286;
    const double C8494 = C50841 * C286;
    const double C17247 = C17045 * C286;
    const double C17231 = C17046 * C286;
    const double C17615 = C17044 * C286;
    const double C20278 = C50526 * C286;
    const double C24855 = C50531 * C286;
    const double C25225 = C50785 * C286;
    const double C5460 = C50531 * C433;
    const double C5806 = C2190 * C433;
    const double C11115 = C50842 * C433;
    const double C11105 = C7925 * C433;
    const double C11456 = C50841 * C433;
    const double C22562 = C50526 * C433;
    const double C27977 = C50531 * C433;
    const double C28419 = C50785 * C433;
    const double C34129 = C17045 * C433;
    const double C34119 = C17046 * C433;
    const double C34470 = C17044 * C433;
    const double C49907 = ae * C49905;
    const double C49906 = C49843 * C49905;
    const double C49917 = 3 * C49905;
    const double C50018 = C50016 * C49905;
    const double C50077 = C50075 * C49905;
    const double C281 = (C49877 + C49905 * C50029) / C49734;
    const double C428 = (C49877 + C49905 * C50088) / C49734;
    const double C817 =
        (C50075 * C50017 + C50175 + C50175 +
         C49843 * (2 * ae * C50075 * C50044 + C49843 * C50075 * C50045)) /
        C49739;
    const double C291 = (C49872 + C49898 * C50029 + C50033 + C50033 +
                         C49843 * (2 * ae * (C49868 + C49892 * C50029) +
                                   C49843 * (C49898 + C49935 * C50029))) /
                        C49739;
    const double C2388 = C2198 * C1008;
    const double C19903 = C19897 * C1008;
    const double C24845 = C49760 * C1008;
    const double C2606 = C2198 * C1469;
    const double C20173 = C19897 * C1469;
    const double C25054 = C49760 * C1469;
    const double C438 = (C49872 + C49898 * C50088 + C50092 + C50092 +
                         C49843 * (2 * ae * (C49868 + C49892 * C50088) +
                                   C49843 * (C49898 + C49935 * C50088))) /
                        C49739;
    const double C4547 = C2198 * C1753;
    const double C22224 = C19897 * C1753;
    const double C26956 = C49760 * C1753;
    const double C49948 = ae * C49945;
    const double C49947 = C49843 * C49945;
    const double C49964 = 3 * C49945;
    const double C50036 = C49945 * C50029;
    const double C50047 = C50016 * C49945;
    const double C50095 = C49945 * C50088;
    const double C50106 = C50075 * C49945;
    const double C50210 = C50208 + C50209;
    const double C50237 = ae * C50236;
    const double C2617 = C2198 * C2600;
    const double C20176 = C19897 * C2600;
    const double C25065 = C49760 * C2600;
    const double C50141 = C50134 + C50053;
    const double C50226 = ae * C50225;
    const double C4536 = (2 * C50174 + C50075 * C50225) / C49734;
    const double C50255 = C50253 + C50254;
    const double C50160 = C50153 + C50112;
    const double C49946 = C49920 + C49944;
    const double C2405 = C2190 * C1012;
    const double C2389 = C50531 * C1012;
    const double C9140 = C50842 * C1012;
    const double C18261 = C17045 * C1012;
    const double C20028 = C50526 * C1012;
    const double C24862 = C50785 * C1012;
    const double C24846 = C50531 * C1012;
    const double C3168 = C2190 * C1473;
    const double C3154 = C50531 * C1473;
    const double C9808 = C50842 * C1473;
    const double C18929 = C17045 * C1473;
    const double C20538 = C50526 * C1473;
    const double C25607 = C50785 * C1473;
    const double C25593 = C50531 * C1473;
    const double C3449 = C2190 * C2375;
    const double C20021 = C50526 * C2375;
    const double C25882 = C50785 * C2375;
    const double C3618 = C2190 * C2602;
    const double C20844 = C50526 * C2602;
    const double C26045 = C50785 * C2602;
    const double C4129 = C2190 * C3149;
    const double C20529 = C50526 * C3149;
    const double C26550 = C50785 * C3149;
    const double C5467 = C2190 * C1757;
    const double C5452 = C50531 * C1757;
    const double C12936 = C50842 * C1757;
    const double C22225 = C50526 * C1757;
    const double C30392 = C50531 * C1757;
    const double C35950 = C17045 * C1757;
    const double C44794 = C50785 * C1757;
    const double C7329 = C2190 * C5439;
    const double C24067 = C50526 * C5439;
    const double C46572 = C50785 * C5439;
    const double C50001 = ae * C49997;
    const double C50000 = C49843 * C49997;
    const double C50060 = C49997 * C50029;
    const double C50119 = C49997 * C50088;
    const double C50139 = C50016 * C49997;
    const double C50158 = C50075 * C49997;
    const double C50204 = C50200 + C50201;
    const double C50234 = ae * C50232;
    const double C50270 = C50040 + C50269;
    const double C50249 = C50245 + C50246;
    const double C50222 = ae * C50220;
    const double C50296 = C50075 * C50220;
    const double C49999 = C49969 + C49996;
    const double C50073 = C50072 + C50068;
    const double C50202 = C50196 + C50197;
    const double C4538 =
        (2 * ae *
             (2 * C50075 * C50062 +
              C50075 * (C50062 + (C49928 + C49978 * C50029) * C50088)) +
         C49843 * (2 * C50230 +
                   C50075 * (C50063 +
                             (C49985 + (C49961 * C49962 +
                                        C49847 * bs[8] * std::pow(C49841, 8)) *
                                           C49850 * C50029) *
                                 C50088))) /
        C49739;
    const double C23168 =
        (3 * (C50038 + C50063 * C50088) +
         C50075 * (2 * C50230 +
                   C50075 * (C50063 +
                             (C49985 + (C49961 * C49962 +
                                        C49847 * bs[8] * std::pow(C49841, 8)) *
                                           C49850 * C50029) *
                                 C50088))) /
        C49739;
    const double C3620 = C50531 * C2603;
    const double C22054 = C50526 * C2603;
    const double C26047 = C50531 * C2603;
    const double C23175 = C50526 * C4539;
    const double C50132 = C50131 + C50127;
    const double C50247 = C50241 + C50242;
    const double C50150 = C49843 * C50149;
    const double C50194 = C50193 + C50189;
    const double C4540 =
        (2 * ae * (2 * C50075 * C50044 + C50075 * (C50044 + C50135 * C50088)) +
         C49843 * (2 * C50177 + C50075 * C50218)) /
        C49739;
    const double C6429 =
        (2 * ae *
             (3 * (C50044 + C50135 * C50088) +
              C50075 *
                  (2 * C50183 + C50075 * (C50135 + C50016 * C49978 * C50088))) +
         C49843 * (3 * C50218 +
                   C50075 * (2 * C50184 +
                             C50075 * (C50136 + C50016 *
                                                    (C49961 * C49962 +
                                                     C49847 * bs[8] *
                                                         std::pow(C49841, 8)) *
                                                    C49850 * C50088)))) /
        C49739;
    const double C6430 = (3 * (C50017 + C50045 * C50088) +
                          C50075 * (2 * C50177 + C50075 * C50218)) /
                         C49739;
    const double C24064 =
        (4 * (2 * C50177 + C50075 * C50218) +
         C50075 * (3 * C50218 +
                   C50075 * (2 * C50184 +
                             C50075 * (C50136 + C50016 *
                                                    (C49961 * C49962 +
                                                     C49847 * bs[8] *
                                                         std::pow(C49841, 8)) *
                                                    C49850 * C50088)))) /
        C49739;
    const double C50169 = C49843 * C50168;
    const double C49998 = C49995 * ae;
    const double C131 = 5 * (3 * C49894 + C49843 * C49937) +
                        C49843 * (4 * C49937 + C49843 * C49995);
    const double C274 = 3 * C49894 + C49843 * C49937 + C49995 * C50029;
    const double C421 = 3 * C49894 + C49843 * C49937 + C49995 * C50088;
    const double C561 = C50016 * (4 * C49937 + C49843 * C49995);
    const double C668 = C50075 * (4 * C49937 + C49843 * C49995);
    const double C809 = C50075 * C50016 * C49995;
    const double C49768 = C49766 / C49734;
    const double C49767 = C49735 * C49765;
    const double C123 = (-C49765 / C49734) / (4 * C49746);
    const double C2197 = (-C49765 / C49734) / C49740;
    const double C7932 = (-C49765 / C49734) / (4 * C49739);
    const double C17053 = (-C49765 / C49734) / (4 * C49739);
    const double C19896 = -C49765 / C49734;
    const double C24663 = (-C49765 / C49734) / C49740;
    const double C2212 = C2196 * C134;
    const double C2211 = C2196 * C133;
    const double C2209 = C2196 * C277;
    const double C2207 = C2196 * C280;
    const double C2204 = C2196 * C279;
    const double C2202 = C2196 * C278;
    const double C2200 = C2196 * C132;
    const double C2404 = C2196 * C1008;
    const double C2393 = C2196 * C2372;
    const double C2391 = C2196 * C1009;
    const double C2629 = C2196 * C427;
    const double C2627 = C2196 * C1122;
    const double C2625 = C2196 * C2600;
    const double C2622 = C2196 * C1469;
    const double C2620 = C2196 * C811;
    const double C2618 = C2196 * C424;
    const double C2616 = C2196 * C2599;
    const double C2614 = C2196 * C1123;
    const double C2612 = C2196 * C426;
    const double C2611 = C2196 * C425;
    const double C2609 = C2196 * C810;
    const double C2607 = C2196 * C1470;
    const double C3161 = C2196 * C3146;
    const double C3453 = C2196 * C3443;
    const double C3622 = C2196 * C3609;
    const double C4133 = C2196 * C4123;
    const double C4548 = C2196 * C1754;
    const double C4546 = C2196 * C4537;
    const double C4544 = C2196 * C4535;
    const double C5466 = C2196 * C1753;
    const double C5455 = C2196 * C5436;
    const double C6438 = C2196 * C6428;
    const double C7333 = C2196 * C7323;
    const double C142 =
        (2 * (2 * ae * C49855 + C49843 * C49872) + C49878 + C49878 +
         C49843 * (C49872 + C49875 + C49875 +
                   C49843 * (2 * ae * C49868 +
                             C49843 *
                                 (C49861 * C49862 +
                                  C49847 * bs[5] * std::pow(C49849, 5)) *
                                 C49850))) /
        C49739;
    const double C150 = C124 * C135;
    const double C2223 = C2196 * C135;
    const double C2213 = C2198 * C135;
    const double C7944 = C7933 * C135;
    const double C17065 = C17054 * C135;
    const double C19914 = C19897 * C135;
    const double C24679 = C49760 * C135;
    const double C2214 = C2196 * C276;
    const double C2208 = C2198 * C276;
    const double C7940 = C7933 * C276;
    const double C17061 = C17054 * C276;
    const double C19908 = C19897 * C276;
    const double C24674 = C49760 * C276;
    const double C2619 = C2198 * C423;
    const double C2949 = C2196 * C423;
    const double C8326 = C7933 * C423;
    const double C17447 = C17054 * C423;
    const double C20397 = C19897 * C423;
    const double C25067 = C49760 * C423;
    const double C49908 = C49884 + C49906;
    const double C50020 = ae * C50018;
    const double C812 = (C50075 * C50018) / C49734;
    const double C50079 = ae * C50077;
    const double C2216 = C2196 * C281;
    const double C2206 = C2198 * C281;
    const double C8112 = C7933 * C281;
    const double C17233 = C17054 * C281;
    const double C19909 = C19897 * C281;
    const double C24672 = C49760 * C281;
    const double C2628 = C2198 * C428;
    const double C5136 = C2196 * C428;
    const double C8331 = C7933 * C428;
    const double C17452 = C17054 * C428;
    const double C21889 = C19897 * C428;
    const double C25076 = C49760 * C428;
    const double C3166 = C50531 * C817;
    const double C8869 = C50842 * C817;
    const double C8858 = C7925 * C817;
    const double C14152 = C2190 * C817;
    const double C17990 = C17045 * C817;
    const double C17979 = C17046 * C817;
    const double C22403 = C50526 * C817;
    const double C25605 = C50531 * C817;
    const double C28215 = C50785 * C817;
    const double C2402 = C50531 * C291;
    const double C2781 = C2190 * C291;
    const double C8134 = C50842 * C291;
    const double C8113 = C7925 * C291;
    const double C17255 = C17045 * C291;
    const double C17234 = C17046 * C291;
    const double C20280 = C50526 * C291;
    const double C24859 = C50531 * C291;
    const double C25229 = C50785 * C291;
    const double C5464 = C50531 * C438;
    const double C5810 = C2190 * C438;
    const double C11121 = C50842 * C438;
    const double C11107 = C7925 * C438;
    const double C22564 = C50526 * C438;
    const double C27981 = C50531 * C438;
    const double C34135 = C17045 * C438;
    const double C34121 = C17046 * C438;
    const double C45099 = C50785 * C438;
    const double C49968 = C49957 + C49948;
    const double C49949 = C49918 + C49947;
    const double C50039 = C49905 + C50036;
    const double C50052 = ae * C50047;
    const double C50178 = C50075 * C50047;
    const double C50198 = 2 * C50047;
    const double C1121 = (C50018 + C50047 * C50088) / C49734;
    const double C50098 = C49905 + C50095;
    const double C50111 = ae * C50106;
    const double C50243 = 2 * C50106;
    const double C50211 = ae * C50210;
    const double C2373 = (3 * C50032 + C50016 * C50210) / C49734;
    const double C3147 = (C50075 * C50210) / C49734;
    const double C1472 =
        (C50075 * C50038 + C50237 + C50237 +
         C49843 * (2 * ae * C50075 * C50062 + C49843 * C50230)) /
        C49739;
    const double C1125 =
        (C50017 + C50045 * C50088 + C50226 + C50226 +
         C49843 * (2 * ae * (C50044 + C50135 * C50088) + C49843 * C50218)) /
        C49739;
    const double C4545 = C2198 * C4536;
    const double C6029 = C2196 * C4536;
    const double C22227 = C19897 * C4536;
    const double C26954 = C49760 * C4536;
    const double C50256 = ae * C50255;
    const double C5437 = (3 * C50091 + C50075 * C50255) / C49734;
    const double C50003 = C49965 + C50000;
    const double C50065 = C49945 + C50060;
    const double C50124 = C49945 + C50119;
    const double C50146 = ae * C50139;
    const double C50186 = C50075 * C50139;
    const double C50216 = C50139 * C50088;
    const double C50165 = ae * C50158;
    const double C50206 = ae * C50204;
    const double C50263 = C50016 * C50204;
    const double C50275 = C50075 * C50204;
    const double C3608 = (C50210 + C50204 * C50088) / C49734;
    const double C50271 = ae * C50270;
    const double C4534 = (2 * C50236 + C50075 * C50270) / C49734;
    const double C50251 = ae * C50249;
    const double C50291 = C50075 * C50249;
    const double C50297 = C50295 + C50296;
    const double C50002 = C49843 * C49999;
    const double C2376 = (2 * ae *
                              (3 * (C49868 + C49892 * C50029) +
                               C50016 * (2 * C50044 + C50016 * C50062)) +
                          C49843 * (3 * C50038 + C50016 * C50202)) /
                         C49739;
    const double C3150 = (2 * ae * C50075 * (2 * C50044 + C50016 * C50062) +
                          C49843 * C50075 * C50202) /
                         C49739;
    const double C3444 =
        (2 * ae *
             (4 * (2 * C50044 + C50016 * C50062) +
              C50016 * (3 * C50062 +
                        C50016 * (2 * C50135 +
                                  C50016 * (C49928 + C49978 * C50029)))) +
         C49843 *
             (4 * C50202 +
              C50016 * (3 * C50063 +
                        C50016 * (2 * C50136 +
                                  C50016 * (C49985 + (C49961 * C49962 +
                                                      C49847 * bs[8] *
                                                          std::pow(C49841, 8)) *
                                                         C49850 * C50029))))) /
        C49739;
    const double C3445 = (4 * (2 * C50017 + C50016 * C50038) +
                          C50016 * (3 * C50038 + C50016 * C50202)) /
                         C49739;
    const double C3610 =
        (2 * ae *
             (2 * C50044 + C50016 * C50062 +
              (2 * C50135 + C50016 * (C49928 + C49978 * C50029)) * C50088) +
         C49843 * (C50202 +
                   (2 * C50136 +
                    C50016 * (C49985 + (C49961 * C49962 +
                                        C49847 * bs[8] * std::pow(C49841, 8)) *
                                           C49850 * C50029)) *
                       C50088)) /
        C49739;
    const double C3611 =
        (2 * C50017 + C50016 * C50038 + C50202 * C50088) / C49739;
    const double C4125 = (C50075 * (3 * C50038 + C50016 * C50202)) / C49739;
    const double C20731 =
        (5 * (3 * C50038 + C50016 * C50202) +
         C50016 *
             (4 * C50202 +
              C50016 * (3 * C50063 +
                        C50016 * (2 * C50136 +
                                  C50016 * (C49985 + (C49961 * C49962 +
                                                      C49847 * bs[8] *
                                                          std::pow(C49841, 8)) *
                                                         C49850 * C50029))))) /
        C49739;
    const double C20839 =
        (3 * C50038 + C50016 * C50202 +
         (3 * C50063 +
          C50016 * (2 * C50136 +
                    C50016 * (C49985 + (C49961 * C49962 +
                                        C49847 * bs[8] * std::pow(C49841, 8)) *
                                           C49850 * C50029))) *
             C50088) /
        C49739;
    const double C21187 =
        (C50075 *
         (4 * C50202 +
          C50016 * (3 * C50063 +
                    C50016 * (2 * C50136 +
                              C50016 * (C49985 +
                                        (C49961 * C49962 +
                                         C49847 * bs[8] * std::pow(C49841, 8)) *
                                            C49850 * C50029))))) /
        C49739;
    const double C21459 =
        (2 * C50075 * C50202 +
         C50075 * (C50202 +
                   (2 * C50136 +
                    C50016 * (C49985 + (C49961 * C49962 +
                                        C49847 * bs[8] * std::pow(C49841, 8)) *
                                           C49850 * C50029)) *
                       C50088)) /
        C49739;
    const double C5440 = (2 * ae *
                              (3 * (C49868 + C49892 * C50088) +
                               C50075 * (2 * C50103 + C50075 * C50121)) +
                          C49843 * (3 * C50097 + C50075 * C50247)) /
                         C49739;
    const double C7324 =
        (2 * ae *
             (4 * (2 * C50103 + C50075 * C50121) +
              C50075 * (3 * C50121 +
                        C50075 * (2 * C50154 +
                                  C50075 * (C49928 + C49978 * C50088)))) +
         C49843 *
             (4 * C50247 +
              C50075 * (3 * C50122 +
                        C50075 * (2 * C50155 +
                                  C50075 * (C49985 + (C49961 * C49962 +
                                                      C49847 * bs[8] *
                                                          std::pow(C49841, 8)) *
                                                         C49850 * C50088))))) /
        C49739;
    const double C7325 = (4 * (2 * C50076 + C50075 * C50097) +
                          C50075 * (3 * C50097 + C50075 * C50247)) /
                         C49739;
    const double C40571 =
        (5 * (3 * C50097 + C50075 * C50247) +
         C50075 *
             (4 * C50247 +
              C50075 * (3 * C50122 +
                        C50075 * (2 * C50155 +
                                  C50075 * (C49985 + (C49961 * C49962 +
                                                      C49847 * bs[8] *
                                                          std::pow(C49841, 8)) *
                                                         C49850 * C50088))))) /
        C49739;
    const double C50151 = C50141 + C50150;
    const double C6435 = C50531 * C4540;
    const double C22228 = C50526 * C4540;
    const double C29217 = C50531 * C4540;
    const double C23173 = C50526 * C6430;
    const double C50170 = C50160 + C50169;
    const double C49770 = C49768 - C49755;
    const double C49769 = C49767 / C49734;
    const double C2406 = C2197 * C1003;
    const double C2401 = C2197 * C271;
    const double C2397 = C2197 * C266;
    const double C2387 = C2197 * C1004;
    const double C2385 = C2197 * C270;
    const double C2381 = C2197 * C267;
    const double C2782 = C2197 * C272;
    const double C2778 = C2197 * C265;
    const double C3169 = C2197 * C1464;
    const double C3165 = C2197 * C807;
    const double C3157 = C2197 * C806;
    const double C3153 = C2197 * C1465;
    const double C3450 = C2197 * C2370;
    const double C3619 = C2197 * C2597;
    const double C3615 = C2197 * C1118;
    const double C4130 = C2197 * C3144;
    const double C5468 = C2197 * C1748;
    const double C5463 = C2197 * C418;
    const double C5459 = C2197 * C413;
    const double C5451 = C2197 * C1749;
    const double C5449 = C2197 * C417;
    const double C5445 = C2197 * C414;
    const double C5811 = C2197 * C419;
    const double C5807 = C2197 * C412;
    const double C6026 = C2197 * C1117;
    const double C6434 = C2197 * C4532;
    const double C7330 = C2197 * C5434;
    const double C14153 = C2197 * C808;
    const double C8135 = C7932 * C272;
    const double C8127 = C7932 * C265;
    const double C8111 = C7932 * C271;
    const double C8109 = C7932 * C266;
    const double C8497 = C7932 * C273;
    const double C8870 = C7932 * C808;
    const double C8857 = C7932 * C807;
    const double C9141 = C7932 * C1003;
    const double C9305 = C7932 * C1117;
    const double C9809 = C7932 * C1464;
    const double C11122 = C7932 * C419;
    const double C11116 = C7932 * C412;
    const double C11106 = C7932 * C418;
    const double C11104 = C7932 * C413;
    const double C11459 = C7932 * C420;
    const double C12937 = C7932 * C1748;
    const double C17256 = C17053 * C272;
    const double C17248 = C17053 * C265;
    const double C17232 = C17053 * C271;
    const double C17230 = C17053 * C266;
    const double C17618 = C17053 * C273;
    const double C17991 = C17053 * C808;
    const double C17978 = C17053 * C807;
    const double C18262 = C17053 * C1003;
    const double C18426 = C17053 * C1117;
    const double C18930 = C17053 * C1464;
    const double C34136 = C17053 * C419;
    const double C34130 = C17053 * C412;
    const double C34120 = C17053 * C418;
    const double C34118 = C17053 * C413;
    const double C34473 = C17053 * C420;
    const double C35951 = C17053 * C1748;
    const double C20029 = C19896 * C2370;
    const double C20027 = C19896 * C1004;
    const double C20025 = C19896 * C270;
    const double C20023 = C19896 * C267;
    const double C20019 = C19896 * C2369;
    const double C20017 = C19896 * C1005;
    const double C20015 = C19896 * C269;
    const double C20013 = C19896 * C268;
    const double C20281 = C19896 * C1003;
    const double C20279 = C19896 * C271;
    const double C20277 = C19896 * C266;
    const double C20539 = C19896 * C3144;
    const double C20537 = C19896 * C1465;
    const double C20535 = C19896 * C806;
    const double C20532 = C19896 * C805;
    const double C20530 = C19896 * C1466;
    const double C20528 = C19896 * C3143;
    const double C20733 = C19896 * C3441;
    const double C20845 = C19896 * C3607;
    const double C20843 = C19896 * C2596;
    const double C20841 = C19896 * C1119;
    const double C21189 = C19896 * C4121;
    const double C22053 = C19896 * C2597;
    const double C22049 = C19896 * C1118;
    const double C22226 = C19896 * C4532;
    const double C22223 = C19896 * C1749;
    const double C22221 = C19896 * C417;
    const double C22219 = C19896 * C414;
    const double C22215 = C19896 * C1750;
    const double C22213 = C19896 * C4533;
    const double C22211 = C19896 * C416;
    const double C22209 = C19896 * C415;
    const double C22404 = C19896 * C1117;
    const double C22402 = C19896 * C807;
    const double C22563 = C19896 * C418;
    const double C22561 = C19896 * C413;
    const double C23174 = C19896 * C4531;
    const double C23172 = C19896 * C6426;
    const double C24066 = C19896 * C5433;
    const double C31603 = C19896 * C1464;
    const double C39382 = C19896 * C5434;
    const double C39584 = C19896 * C1748;
    const double C40573 = C19896 * C7321;
    const double C24863 = C24663 * C1003;
    const double C24858 = C24663 * C271;
    const double C24854 = C24663 * C266;
    const double C24844 = C24663 * C1004;
    const double C24842 = C24663 * C270;
    const double C24838 = C24663 * C267;
    const double C25230 = C24663 * C272;
    const double C25226 = C24663 * C265;
    const double C25608 = C24663 * C1464;
    const double C25604 = C24663 * C807;
    const double C25596 = C24663 * C806;
    const double C25592 = C24663 * C1465;
    const double C25883 = C24663 * C2370;
    const double C26046 = C24663 * C2597;
    const double C26042 = C24663 * C1118;
    const double C26551 = C24663 * C3144;
    const double C27984 = C24663 * C1117;
    const double C27980 = C24663 * C418;
    const double C27976 = C24663 * C413;
    const double C27970 = C24663 * C417;
    const double C27968 = C24663 * C414;
    const double C28216 = C24663 * C808;
    const double C28420 = C24663 * C412;
    const double C29216 = C24663 * C4532;
    const double C30391 = C24663 * C1749;
    const double C44795 = C24663 * C1748;
    const double C45100 = C24663 * C419;
    const double C46573 = C24663 * C5434;
    const double C49909 = C49908 + C49897;
    const double C285 =
        (2 * (2 * ae * C50016 * C49868 + C49843 * C50017) + C50020 + C50020 +
         C49843 *
             (C50017 + C50021 + C50021 +
              C49843 * (2 * ae * C50016 * C49892 + C49843 * C50016 * C49935))) /
        C49739;
    const double C2621 = C2198 * C812;
    const double C2947 = C2196 * C812;
    const double C8323 = C7933 * C812;
    const double C17444 = C17054 * C812;
    const double C20396 = C19897 * C812;
    const double C25069 = C49760 * C812;
    const double C432 =
        (2 * (2 * ae * C50075 * C49868 + C49843 * C50076) + C50079 + C50079 +
         C49843 *
             (C50076 + C50080 + C50080 +
              C49843 * (2 * ae * C50075 * C49892 + C49843 * C50075 * C49935))) /
        C49739;
    const double C49976 = C49968 + C49948;
    const double C49950 = C49949 + C49933;
    const double C50041 = ae * C50039;
    const double C1007 = (2 * C50018 + C50016 * C50039) / C49734;
    const double C1468 = (C50075 * C50039) / C49734;
    const double C50180 = ae * C50178;
    const double C2626 = C2198 * C1121;
    const double C5658 = C2196 * C1121;
    const double C8334 = C7933 * C1121;
    const double C17455 = C17054 * C1121;
    const double C21890 = C19897 * C1121;
    const double C25074 = C49760 * C1121;
    const double C50100 = ae * C50098;
    const double C1752 = (2 * C50077 + C50075 * C50098) / C49734;
    const double C1011 =
        (2 * C50017 + C50016 * C50038 + C50211 + C50211 +
         C49843 * (2 * ae * (2 * C50044 + C50016 * C50062) + C49843 * C50202)) /
        C49739;
    const double C2410 = C2196 * C2373;
    const double C2394 = C2198 * C2373;
    const double C20030 = C19897 * C2373;
    const double C24851 = C49760 * C2373;
    const double C3172 = C2196 * C3147;
    const double C3162 = C2198 * C3147;
    const double C20174 = C19897 * C3147;
    const double C25601 = C49760 * C3147;
    const double C3170 = C50531 * C1472;
    const double C9810 = C7925 * C1472;
    const double C18931 = C17046 * C1472;
    const double C25609 = C50531 * C1472;
    const double C31604 = C50526 * C1472;
    const double C6027 = C50531 * C1125;
    const double C9306 = C7925 * C1125;
    const double C18427 = C17046 * C1125;
    const double C22405 = C50526 * C1125;
    const double C27985 = C50531 * C1125;
    const double C1756 =
        (2 * C50076 + C50075 * C50097 + C50256 + C50256 +
         C49843 * (2 * ae * (2 * C50103 + C50075 * C50121) + C49843 * C50247)) /
        C49739;
    const double C5472 = C2196 * C5437;
    const double C5456 = C2198 * C5437;
    const double C22230 = C19897 * C5437;
    const double C30395 = C49760 * C5437;
    const double C50005 = C50003 + C49983;
    const double C50070 = ae * C50065;
    const double C50199 = C50016 * C50065;
    const double C50231 = C50075 * C50065;
    const double C2601 = (C50039 + C50065 * C50088) / C49734;
    const double C50129 = ae * C50124;
    const double C50244 = C50075 * C50124;
    const double C50191 = ae * C50186;
    const double C50219 = C50047 + C50216;
    const double C50264 = C50262 + C50263;
    const double C50276 = ae * C50275;
    const double C3621 = C2198 * C3608;
    const double C20175 = C19897 * C3608;
    const double C26048 = C49760 * C3608;
    const double C2604 =
        (C50038 + C50063 * C50088 + C50271 + C50271 +
         C49843 * (2 * ae * (C50062 + (C49928 + C49978 * C50029) * C50088) +
                   C49843 * (C50063 +
                             (C49985 + (C49961 * C49962 +
                                        C49847 * bs[8] * std::pow(C49841, 8)) *
                                           C49850 * C50029) *
                                 C50088))) /
        C49739;
    const double C4543 = C2198 * C4534;
    const double C22773 = C19897 * C4534;
    const double C26952 = C49760 * C4534;
    const double C50292 = C50290 + C50291;
    const double C50298 = ae * C50297;
    const double C6427 = (3 * C50225 + C50075 * C50297) / C49734;
    const double C3451 = C50531 * C2376;
    const double C20031 = C50526 * C2376;
    const double C25884 = C50531 * C2376;
    const double C4131 = C50531 * C3150;
    const double C20540 = C50526 * C3150;
    const double C26552 = C50531 * C3150;
    const double C20734 = C50526 * C3445;
    const double C20846 = C50526 * C3611;
    const double C21190 = C50526 * C4125;
    const double C7331 = C50531 * C5440;
    const double C39383 = C50526 * C5440;
    const double C46574 = C50531 * C5440;
    const double C40574 = C50526 * C7325;
    const double C24689 = C49770 * C135;
    const double C24682 = C49770 * C281;
    const double C24680 = C49770 * C276;
    const double C24678 = C49770 * C134;
    const double C24677 = C49770 * C133;
    const double C24675 = C49770 * C277;
    const double C24673 = C49770 * C280;
    const double C24670 = C49770 * C279;
    const double C24668 = C49770 * C278;
    const double C24666 = C49770 * C132;
    const double C24867 = C49770 * C2373;
    const double C24861 = C49770 * C1008;
    const double C24850 = C49770 * C2372;
    const double C24848 = C49770 * C1009;
    const double C25077 = C49770 * C427;
    const double C25075 = C49770 * C1122;
    const double C25073 = C49770 * C2600;
    const double C25070 = C49770 * C1469;
    const double C25068 = C49770 * C811;
    const double C25066 = C49770 * C424;
    const double C25064 = C49770 * C2599;
    const double C25062 = C49770 * C1123;
    const double C25060 = C49770 * C426;
    const double C25059 = C49770 * C425;
    const double C25057 = C49770 * C810;
    const double C25055 = C49770 * C1470;
    const double C25397 = C49770 * C423;
    const double C25395 = C49770 * C812;
    const double C25611 = C49770 * C3147;
    const double C25600 = C49770 * C3146;
    const double C25886 = C49770 * C3443;
    const double C26049 = C49770 * C3609;
    const double C26554 = C49770 * C4123;
    const double C26957 = C49770 * C1754;
    const double C26955 = C49770 * C4537;
    const double C26953 = C49770 * C4535;
    const double C27989 = C49770 * C1753;
    const double C27987 = C49770 * C4536;
    const double C28425 = C49770 * C428;
    const double C28423 = C49770 * C1121;
    const double C30396 = C49770 * C5436;
    const double C30394 = C49770 * C6428;
    const double C44799 = C49770 * C5437;
    const double C46576 = C49770 * C7323;
    const double C118 =
        ((((0 - (C49735 * C49733) / C49734) * ae) / C49734 - (0 * be) / C49749 +
          C49736 / C49734) /
             C49740 -
         ((C49735 * C49763 + 0) * be) / C49734) /
            C49740 +
        ((C49735 * (C49763 / C49740 -
                    ((C49735 * C49770 + C50785) * be) / C49734 + C49760) +
          C50841) *
         ae) /
            C49734 +
        C49770 / C49740 - ((C49735 * C49760 + C50531) * be) / C49734;
    const double C120 =
        (C49763 / C49740 - ((C49735 * C49770 + C50785) * be) / C49734 +
         C49760) /
            C49740 +
        ((C49735 *
              (C49770 / C49740 - ((C49735 * C49760 + C50531) * be) / C49734) +
          C50842) *
         ae) /
            C49734 +
        2 * (C49760 / C49740 - (0 * be) / C49734);
    const double C122 =
        (C49770 / C49740 - ((C49735 * C49760 + C50531) * be) / C49734) /
            C49740 +
        ((C49735 * (C49760 / C49740 - (0 * be) / C49734) + C7925) * ae) /
            C49734;
    const double C7929 =
        C49763 / C49740 - ((C49735 * C49770 + C50785) * be) / C49734 + C49760;
    const double C7931 =
        C49770 / C49740 - ((C49735 * C49760 + C50531) * be) / C49734;
    const double C17050 =
        C49763 / C49740 + ((C49735 * C49770 + C50785) * ae) / C49734 + C49760;
    const double C17052 =
        C49770 / C49740 + ((C49735 * C49760 + C50531) * ae) / C49734;
    const double C49771 = C49758 - C49769;
    const double C2420 = C2401 + C2206;
    const double C2418 = C2397 + C2208;
    const double C2415 = C2387 + C2388;
    const double C2414 = C2385 + C2205;
    const double C2412 = C2381 + C2203;
    const double C3175 = C3157 + C2608;
    const double C3173 = C3153 + C2606;
    const double C3626 = C3619 + C2617;
    const double C3624 = C3615 + C2615;
    const double C5482 = C5463 + C2628;
    const double C5480 = C5459 + C2619;
    const double C5477 = C5451 + C4547;
    const double C5476 = C5449 + C2613;
    const double C5474 = C5445 + C2610;
    const double C6440 = C6434 + C4545;
    const double C8144 = C8111 + C8112;
    const double C8143 = C8109 + C7940;
    const double C11130 = C11106 + C8331;
    const double C11129 = C11104 + C8326;
    const double C17265 = C17232 + C17233;
    const double C17264 = C17230 + C17061;
    const double C34144 = C34120 + C17452;
    const double C34143 = C34118 + C17447;
    const double C20039 = C20027 + C19903;
    const double C20038 = C20025 + C19904;
    const double C20037 = C20023 + C19905;
    const double C20036 = C20019 + C20020;
    const double C20035 = C20017 + C19902;
    const double C20034 = C20015 + C19901;
    const double C20033 = C20013 + C19900;
    const double C20285 = C20279 + C19909;
    const double C20284 = C20277 + C19908;
    const double C20546 = C20537 + C20173;
    const double C20545 = C20535 + C20172;
    const double C20544 = C20532 + C20165;
    const double C20543 = C20530 + C20164;
    const double C20542 = C20528 + C20163;
    const double C20736 = C20733 + C20022;
    const double C20850 = C20845 + C20170;
    const double C20849 = C20843 + C20169;
    const double C20848 = C20841 + C20168;
    const double C21192 = C21189 + C20534;
    const double C22056 = C22053 + C20176;
    const double C22055 = C22049 + C20177;
    const double C22238 = C22226 + C22227;
    const double C22237 = C22223 + C22224;
    const double C22236 = C22221 + C20178;
    const double C22235 = C22219 + C20171;
    const double C22234 = C22215 + C21464;
    const double C22233 = C22213 + C21463;
    const double C22232 = C22211 + C20167;
    const double C22231 = C22209 + C20166;
    const double C22568 = C22563 + C21889;
    const double C22567 = C22561 + C20397;
    const double C23178 = C23174 + C21462;
    const double C23177 = C23172 + C22218;
    const double C24070 = C24066 + C22217;
    const double C40576 = C40573 + C24069;
    const double C24877 = C24858 + C24672;
    const double C24875 = C24854 + C24674;
    const double C24872 = C24844 + C24845;
    const double C24871 = C24842 + C24671;
    const double C24869 = C24838 + C24669;
    const double C25614 = C25596 + C25056;
    const double C25612 = C25592 + C25054;
    const double C26053 = C26046 + C25065;
    const double C26051 = C26042 + C25063;
    const double C27997 = C27980 + C25076;
    const double C27995 = C27976 + C25067;
    const double C27992 = C27970 + C25061;
    const double C27991 = C27968 + C25058;
    const double C29219 = C29216 + C26954;
    const double C30398 = C30391 + C26956;
    const double C49910 = ae * C49909;
    const double C136 =
        (3 * C49877 + C49843 * C49909 + (2 * C49866 + C49843 * C49894) * ae) /
        C49734;
    const double C275 = (C50016 * C49909) / C49734;
    const double C422 = (C50075 * C49909) / C49734;
    const double C2779 = C50531 * C285;
    const double C8128 = C7925 * C285;
    const double C8496 = C50842 * C285;
    const double C17249 = C17046 * C285;
    const double C17617 = C17045 * C285;
    const double C25227 = C50531 * C285;
    const double C3178 = C3165 + C2621;
    const double C8875 = C8857 + C8323;
    const double C17996 = C17978 + C17444;
    const double C22407 = C22402 + C20396;
    const double C25617 = C25604 + C25069;
    const double C5808 = C50531 * C432;
    const double C11117 = C7925 * C432;
    const double C11458 = C50842 * C432;
    const double C28421 = C50531 * C432;
    const double C34131 = C17046 * C432;
    const double C34472 = C17045 * C432;
    const double C50004 = C49976 + C50002;
    const double C49952 = ae * C49950;
    const double C49951 = C49843 * C49950;
    const double C49963 = 4 * C49950;
    const double C50046 = C50016 * C49950;
    const double C50105 = C50075 * C49950;
    const double C282 = (C49909 + C49950 * C50029) / C49734;
    const double C429 = (C49909 + C49950 * C50088) / C49734;
    const double C292 =
        (2 * (2 * ae * (C49868 + C49892 * C50029) + C49843 * C50038) + C50041 +
         C50041 +
         C49843 * (C50038 + C50042 + C50042 +
                   C49843 * (2 * ae * (C49892 + C49928 * C50029) +
                             C49843 * (C49935 + C49985 * C50029)))) /
        C49739;
    const double C2407 = C2198 * C1007;
    const double C2785 = C2196 * C1007;
    const double C8122 = C7933 * C1007;
    const double C17243 = C17054 * C1007;
    const double C19910 = C19897 * C1007;
    const double C24864 = C49760 * C1007;
    const double C25233 = C49770 * C1007;
    const double C2623 = C2198 * C1468;
    const double C2945 = C2196 * C1468;
    const double C8865 = C7933 * C1468;
    const double C17986 = C17054 * C1468;
    const double C20395 = C19897 * C1468;
    const double C25071 = C49760 * C1468;
    const double C25393 = C49770 * C1468;
    const double C818 =
        (2 * (2 * ae * C50075 * C50044 + C49843 * C50177) + C50180 + C50180 +
         C49843 *
             (C50177 + C50181 + C50181 +
              C49843 * (2 * ae * C50075 * C50135 + C49843 * C50075 * C50136))) /
        C49739;
    const double C6031 = C6026 + C2626;
    const double C9312 = C9305 + C8334;
    const double C18433 = C18426 + C17455;
    const double C22408 = C22404 + C21890;
    const double C27999 = C27984 + C25074;
    const double C439 =
        (2 * (2 * ae * (C49868 + C49892 * C50088) + C49843 * C50097) + C50100 +
         C50100 +
         C49843 * (C50097 + C50101 + C50101 +
                   C49843 * (2 * ae * (C49892 + C49928 * C50088) +
                             C49843 * (C49935 + C49985 * C50088)))) /
        C49739;
    const double C5469 = C2198 * C1752;
    const double C5814 = C2196 * C1752;
    const double C10216 = C7933 * C1752;
    const double C19337 = C17054 * C1752;
    const double C22566 = C19897 * C1752;
    const double C27988 = C49760 * C1752;
    const double C45103 = C49770 * C1752;
    const double C2408 = C50531 * C1011;
    const double C9142 = C7925 * C1011;
    const double C18263 = C17046 * C1011;
    const double C20282 = C50526 * C1011;
    const double C24865 = C50531 * C1011;
    const double C3456 = C3450 + C2394;
    const double C20040 = C20029 + C20030;
    const double C25889 = C25883 + C24851;
    const double C4136 = C4130 + C3162;
    const double C20547 = C20539 + C20174;
    const double C26557 = C26551 + C25601;
    const double C5470 = C50531 * C1756;
    const double C12938 = C7925 * C1756;
    const double C35952 = C17046 * C1756;
    const double C39585 = C50526 * C1756;
    const double C44796 = C50531 * C1756;
    const double C7335 = C7330 + C5456;
    const double C39385 = C39382 + C22230;
    const double C46578 = C46573 + C30395;
    const double C50007 = ae * C50005;
    const double C50006 = C49843 * C50005;
    const double C50059 = C50005 * C50029;
    const double C50118 = C50005 * C50088;
    const double C50138 = C50016 * C50005;
    const double C50157 = C50075 * C50005;
    const double C50203 = C50198 + C50199;
    const double C50233 = ae * C50231;
    const double C2624 = C2198 * C2601;
    const double C9307 = C7933 * C2601;
    const double C18428 = C17054 * C2601;
    const double C22406 = C19897 * C2601;
    const double C25072 = C49760 * C2601;
    const double C50248 = C50243 + C50244;
    const double C50221 = ae * C50219;
    const double C6021 = (2 * C50178 + C50075 * C50219) / C49734;
    const double C50265 = ae * C50264;
    const double C3442 = (4 * C50210 + C50016 * C50264) / C49734;
    const double C4122 = (C50075 * C50264) / C49734;
    const double C3151 =
        (C50075 * C50202 + C50276 + C50276 +
         C49843 *
             (2 * ae * C50075 *
                  (2 * C50135 + C50016 * (C49928 + C49978 * C50029)) +
              C49843 * C50075 *
                  (2 * C50136 +
                   C50016 * (C49985 + (C49961 * C49962 +
                                       C49847 * bs[8] * std::pow(C49841, 8)) *
                                          C49850 * C50029)))) /
        C49739;
    const double C50293 = ae * C50292;
    const double C7322 = (4 * C50255 + C50075 * C50292) / C49734;
    const double C6022 =
        (2 * C50177 + C50075 * C50218 + C50298 + C50298 +
         C49843 *
             (2 * ae *
                  (2 * C50183 + C50075 * (C50135 + C50016 * C49978 * C50088)) +
              C49843 * (2 * C50184 +
                        C50075 * (C50136 +
                                  C50016 *
                                      (C49961 * C49962 +
                                       C49847 * bs[8] * std::pow(C49841, 8)) *
                                      C49850 * C50088)))) /
        C49739;
    const double C6437 = C2198 * C6427;
    const double C22229 = C19897 * C6427;
    const double C30393 = C49760 * C6427;
    const double C162 = C118 * C135;
    const double C155 = C118 * C134;
    const double C154 = C118 * C133;
    const double C147 = C118 * C132;
    const double C311 = C118 * C280;
    const double C304 = C118 * C277;
    const double C300 = C118 * C279;
    const double C299 = C118 * C278;
    const double C458 = C118 * C427;
    const double C451 = C118 * C424;
    const double C447 = C118 * C426;
    const double C446 = C118 * C425;
    const double C568 = C118 * C276;
    const double C675 = C118 * C423;
    const double C828 = C118 * C811;
    const double C821 = C118 * C810;
    const double C1018 = C118 * C1009;
    const double C1132 = C118 * C1123;
    const double C1479 = C118 * C1470;
    const double C1763 = C118 * C1754;
    const double C156 = C120 * C135;
    const double C153 = C120 * C134;
    const double C148 = C120 * C133;
    const double C310 = C120 * C281;
    const double C305 = C120 * C276;
    const double C301 = C120 * C280;
    const double C298 = C120 * C277;
    const double C457 = C120 * C428;
    const double C452 = C120 * C423;
    const double C448 = C120 * C427;
    const double C445 = C120 * C424;
    const double C827 = C120 * C812;
    const double C822 = C120 * C811;
    const double C1017 = C120 * C1008;
    const double C1131 = C120 * C1122;
    const double C1478 = C120 * C1469;
    const double C1762 = C120 * C1753;
    const double C152 = C122 * C135;
    const double C149 = C122 * C134;
    const double C302 = C122 * C281;
    const double C297 = C122 * C276;
    const double C449 = C122 * C428;
    const double C444 = C122 * C423;
    const double C823 = C122 * C812;
    const double C1016 = C122 * C1007;
    const double C1130 = C122 * C1121;
    const double C1477 = C122 * C1468;
    const double C1761 = C122 * C1752;
    const double C7958 = C7929 * C135;
    const double C7950 = C7929 * C276;
    const double C7947 = C7929 * C134;
    const double C7946 = C7929 * C133;
    const double C7943 = C7929 * C277;
    const double C7938 = C7929 * C278;
    const double C7935 = C7929 * C132;
    const double C8140 = C7929 * C1008;
    const double C8130 = C7929 * C280;
    const double C8120 = C7929 * C1009;
    const double C8118 = C7929 * C279;
    const double C8346 = C7929 * C427;
    const double C8343 = C7929 * C1122;
    const double C8338 = C7929 * C811;
    const double C8335 = C7929 * C424;
    const double C8332 = C7929 * C1123;
    const double C8329 = C7929 * C426;
    const double C8328 = C7929 * C425;
    const double C8325 = C7929 * C810;
    const double C8501 = C7929 * C281;
    const double C8662 = C7929 * C423;
    const double C8659 = C7929 * C812;
    const double C8874 = C7929 * C1469;
    const double C8863 = C7929 * C1470;
    const double C9145 = C7929 * C2372;
    const double C9309 = C7929 * C2599;
    const double C9813 = C7929 * C3146;
    const double C10218 = C7929 * C1754;
    const double C10215 = C7929 * C4537;
    const double C11126 = C7929 * C1753;
    const double C11463 = C7929 * C428;
    const double C12941 = C7929 * C5436;
    const double C7948 = C7931 * C135;
    const double C7945 = C7931 * C134;
    const double C7942 = C7931 * C276;
    const double C7939 = C7931 * C277;
    const double C7936 = C7931 * C133;
    const double C8139 = C7931 * C1007;
    const double C8133 = C7931 * C281;
    const double C8121 = C7931 * C1008;
    const double C8115 = C7931 * C280;
    const double C8345 = C7931 * C428;
    const double C8342 = C7931 * C1121;
    const double C8339 = C7931 * C812;
    const double C8336 = C7931 * C423;
    const double C8333 = C7931 * C1122;
    const double C8330 = C7931 * C427;
    const double C8327 = C7931 * C424;
    const double C8324 = C7931 * C811;
    const double C8873 = C7931 * C1468;
    const double C8864 = C7931 * C1469;
    const double C9144 = C7931 * C2373;
    const double C9308 = C7931 * C2600;
    const double C9812 = C7931 * C3147;
    const double C10217 = C7931 * C1753;
    const double C10214 = C7931 * C4536;
    const double C11125 = C7931 * C1752;
    const double C12940 = C7931 * C5437;
    const double C17079 = C17050 * C135;
    const double C17071 = C17050 * C276;
    const double C17068 = C17050 * C134;
    const double C17067 = C17050 * C133;
    const double C17064 = C17050 * C277;
    const double C17059 = C17050 * C278;
    const double C17056 = C17050 * C132;
    const double C17261 = C17050 * C1008;
    const double C17251 = C17050 * C280;
    const double C17241 = C17050 * C1009;
    const double C17239 = C17050 * C279;
    const double C17467 = C17050 * C427;
    const double C17464 = C17050 * C1122;
    const double C17459 = C17050 * C811;
    const double C17456 = C17050 * C424;
    const double C17453 = C17050 * C1123;
    const double C17450 = C17050 * C426;
    const double C17449 = C17050 * C425;
    const double C17446 = C17050 * C810;
    const double C17622 = C17050 * C281;
    const double C17783 = C17050 * C423;
    const double C17780 = C17050 * C812;
    const double C17995 = C17050 * C1469;
    const double C17984 = C17050 * C1470;
    const double C18266 = C17050 * C2372;
    const double C18430 = C17050 * C2599;
    const double C18934 = C17050 * C3146;
    const double C19339 = C17050 * C1754;
    const double C19336 = C17050 * C4537;
    const double C34140 = C17050 * C1753;
    const double C34477 = C17050 * C428;
    const double C35955 = C17050 * C5436;
    const double C17069 = C17052 * C135;
    const double C17066 = C17052 * C134;
    const double C17063 = C17052 * C276;
    const double C17060 = C17052 * C277;
    const double C17057 = C17052 * C133;
    const double C17260 = C17052 * C1007;
    const double C17254 = C17052 * C281;
    const double C17242 = C17052 * C1008;
    const double C17236 = C17052 * C280;
    const double C17466 = C17052 * C428;
    const double C17463 = C17052 * C1121;
    const double C17460 = C17052 * C812;
    const double C17457 = C17052 * C423;
    const double C17454 = C17052 * C1122;
    const double C17451 = C17052 * C427;
    const double C17448 = C17052 * C424;
    const double C17445 = C17052 * C811;
    const double C17994 = C17052 * C1468;
    const double C17985 = C17052 * C1469;
    const double C18265 = C17052 * C2373;
    const double C18429 = C17052 * C2600;
    const double C18933 = C17052 * C3147;
    const double C19338 = C17052 * C1753;
    const double C19335 = C17052 * C4536;
    const double C34139 = C17052 * C1752;
    const double C35954 = C17052 * C5437;
    const double C49772 = C49771 * ae;
    const double C2195 = -(C49771 * be) / C49734;
    const double C2432 = C2420 + C2206;
    const double C2430 = C2418 + C2208;
    const double C2427 = C2415 + C2388;
    const double C2426 = C2414 + C2205;
    const double C2424 = C2412 + C2203;
    const double C3183 = C3175 + C2608;
    const double C3181 = C3173 + C2606;
    const double C3630 = C3626 + C2617;
    const double C3628 = C3624 + C2615;
    const double C5494 = C5482 + C2628;
    const double C5492 = C5480 + C2619;
    const double C5489 = C5477 + C4547;
    const double C5488 = C5476 + C2613;
    const double C5486 = C5474 + C2610;
    const double C6442 = C6440 + C4545;
    const double C8156 = C8144 + C8112;
    const double C8155 = C8143 + C7940;
    const double C11142 = C11130 + C8331;
    const double C11141 = C11129 + C8326;
    const double C17277 = C17265 + C17233;
    const double C17276 = C17264 + C17061;
    const double C34156 = C34144 + C17452;
    const double C34155 = C34143 + C17447;
    const double C20047 = C20039 + C19903;
    const double C20046 = C20038 + C19904;
    const double C20045 = C20037 + C19905;
    const double C20044 = C20036 + C20020;
    const double C20043 = C20035 + C19902;
    const double C20042 = C20034 + C19901;
    const double C20041 = C20033 + C19900;
    const double C20288 = C20285 + C19909;
    const double C20287 = C20284 + C19908;
    const double C20552 = C20546 + C20173;
    const double C20551 = C20545 + C20172;
    const double C20550 = C20544 + C20165;
    const double C20549 = C20543 + C20164;
    const double C20548 = C20542 + C20163;
    const double C20737 = C20736 + C20022;
    const double C20853 = C20850 + C20170;
    const double C20852 = C20849 + C20169;
    const double C20851 = C20848 + C20168;
    const double C21193 = C21192 + C20534;
    const double C22058 = C22056 + C20176;
    const double C22057 = C22055 + C20177;
    const double C22246 = C22238 + C22227;
    const double C22245 = C22237 + C22224;
    const double C22244 = C22236 + C20178;
    const double C22243 = C22235 + C20171;
    const double C22242 = C22234 + C21464;
    const double C22241 = C22233 + C21463;
    const double C22240 = C22232 + C20167;
    const double C22239 = C22231 + C20166;
    const double C22570 = C22568 + C21889;
    const double C22569 = C22567 + C20397;
    const double C23180 = C23178 + C21462;
    const double C23179 = C23177 + C22218;
    const double C24071 = C24070 + C22217;
    const double C40577 = C40576 + C24069;
    const double C24889 = C24877 + C24672;
    const double C24887 = C24875 + C24674;
    const double C24884 = C24872 + C24845;
    const double C24883 = C24871 + C24671;
    const double C24881 = C24869 + C24669;
    const double C25622 = C25614 + C25056;
    const double C25620 = C25612 + C25054;
    const double C26057 = C26053 + C25065;
    const double C26055 = C26051 + C25063;
    const double C28007 = C27997 + C25076;
    const double C28005 = C27995 + C25067;
    const double C28002 = C27992 + C25061;
    const double C28001 = C27991 + C25058;
    const double C29221 = C29219 + C26954;
    const double C30400 = C30398 + C26956;
    const double C143 =
        (3 * (C49872 + C49875 + C49875 + C49843 * C49903) + C49910 + C49910 +
         C49843 *
             (2 * C49903 + C49907 + C49907 +
              C49843 * (C49898 + C49902 + C49902 +
                        C49843 * (2 * ae * C49892 +
                                  C49843 *
                                      (C49882 * C49883 +
                                       C49847 * bs[6] * std::pow(C49841, 6)) *
                                      C49850)))) /
        C49739;
    const double C161 = C120 * C136;
    const double C157 = C122 * C136;
    const double C151 = C124 * C136;
    const double C2222 = C2198 * C136;
    const double C7957 = C7931 * C136;
    const double C7949 = C7933 * C136;
    const double C17078 = C17052 * C136;
    const double C17070 = C17054 * C136;
    const double C24688 = C49760 * C136;
    const double C306 = C122 * C275;
    const double C296 = C124 * C275;
    const double C567 = C120 * C275;
    const double C2221 = C2196 * C275;
    const double C2215 = C2198 * C275;
    const double C7955 = C7929 * C275;
    const double C7951 = C7931 * C275;
    const double C7941 = C7933 * C275;
    const double C17076 = C17050 * C275;
    const double C17072 = C17052 * C275;
    const double C17062 = C17054 * C275;
    const double C19913 = C19897 * C275;
    const double C24687 = C49770 * C275;
    const double C24681 = C49760 * C275;
    const double C453 = C122 * C422;
    const double C443 = C124 * C422;
    const double C674 = C120 * C422;
    const double C2948 = C2198 * C422;
    const double C5141 = C2196 * C422;
    const double C8337 = C7933 * C422;
    const double C8661 = C7931 * C422;
    const double C10807 = C7929 * C422;
    const double C17458 = C17054 * C422;
    const double C17782 = C17052 * C422;
    const double C21894 = C19897 * C422;
    const double C25396 = C49760 * C422;
    const double C27577 = C49770 * C422;
    const double C33821 = C17050 * C422;
    const double C3186 = C3178 + C2621;
    const double C8881 = C8875 + C8323;
    const double C18002 = C17996 + C17444;
    const double C22409 = C22407 + C20396;
    const double C25625 = C25617 + C25069;
    const double C49953 = C49917 + C49951;
    const double C50051 = ae * C50046;
    const double C813 = (C50075 * C50046) / C49734;
    const double C50110 = ae * C50105;
    const double C309 = C122 * C282;
    const double C303 = C124 * C282;
    const double C2219 = C2196 * C282;
    const double C2217 = C2198 * C282;
    const double C8136 = C7933 * C282;
    const double C8500 = C7931 * C282;
    const double C17257 = C17054 * C282;
    const double C17621 = C17052 * C282;
    const double C19912 = C19897 * C282;
    const double C24685 = C49770 * C282;
    const double C24683 = C49760 * C282;
    const double C456 = C122 * C429;
    const double C450 = C124 * C429;
    const double C5139 = C2196 * C429;
    const double C5137 = C2198 * C429;
    const double C8344 = C7933 * C429;
    const double C11462 = C7931 * C429;
    const double C17465 = C17054 * C429;
    const double C21893 = C19897 * C429;
    const double C28424 = C49760 * C429;
    const double C34476 = C17052 * C429;
    const double C44499 = C49770 * C429;
    const double C2783 = C50531 * C292;
    const double C8137 = C7925 * C292;
    const double C17258 = C17046 * C292;
    const double C25231 = C50531 * C292;
    const double C2422 = C2406 + C2407;
    const double C9148 = C9141 + C8122;
    const double C18269 = C18262 + C17243;
    const double C20286 = C20281 + C19910;
    const double C24879 = C24863 + C24864;
    const double C3180 = C3169 + C2623;
    const double C9816 = C9809 + C8865;
    const double C18937 = C18930 + C17986;
    const double C31605 = C31603 + C20395;
    const double C25619 = C25608 + C25071;
    const double C8871 = C7925 * C818;
    const double C14154 = C50531 * C818;
    const double C17992 = C17046 * C818;
    const double C28217 = C50531 * C818;
    const double C6033 = C6031 + C2626;
    const double C9315 = C9312 + C8334;
    const double C18436 = C18433 + C17455;
    const double C22410 = C22408 + C21890;
    const double C28009 = C27999 + C25074;
    const double C5812 = C50531 * C439;
    const double C11123 = C7925 * C439;
    const double C34137 = C17046 * C439;
    const double C45101 = C50531 * C439;
    const double C5484 = C5468 + C5469;
    const double C12944 = C12937 + C10216;
    const double C35958 = C35951 + C19337;
    const double C39587 = C39584 + C22566;
    const double C44801 = C44795 + C27988;
    const double C3458 = C3456 + C2394;
    const double C20048 = C20040 + C20030;
    const double C25891 = C25889 + C24851;
    const double C4138 = C4136 + C3162;
    const double C20553 = C20547 + C20174;
    const double C26559 = C26557 + C25601;
    const double C7337 = C7335 + C5456;
    const double C39386 = C39385 + C22230;
    const double C46580 = C46578 + C30395;
    const double C50008 = C49964 + C50006;
    const double C50064 = C49950 + C50059;
    const double C50123 = C49950 + C50118;
    const double C50145 = ae * C50138;
    const double C50185 = C50075 * C50138;
    const double C1120 = (C50046 + C50138 * C50088) / C49734;
    const double C50164 = ae * C50157;
    const double C50205 = ae * C50203;
    const double C2374 = (3 * C50039 + C50016 * C50203) / C49734;
    const double C3148 = (C50075 * C50203) / C49734;
    const double C1471 =
        (2 * (2 * ae * C50075 * C50062 + C49843 * C50230) + C50233 + C50233 +
         C49843 *
             (C50230 + C50234 + C50234 +
              C49843 * (2 * ae * C50075 * (C49928 + C49978 * C50029) +
                        C49843 * C50075 *
                            (C49985 + (C49961 * C49962 +
                                       C49847 * bs[8] * std::pow(C49841, 8)) *
                                          C49850 * C50029)))) /
        C49739;
    const double C50250 = ae * C50248;
    const double C5438 = (3 * C50098 + C50075 * C50248) / C49734;
    const double C1124 =
        (2 * (2 * ae * (C50044 + C50135 * C50088) + C49843 * C50218) + C50221 +
         C50221 +
         C49843 * (C50218 + C50222 + C50222 +
                   C49843 * (2 * ae * (C50135 + C50016 * C49978 * C50088) +
                             C49843 * (C50136 + C50016 *
                                                    (C49961 * C49962 +
                                                     C49847 * bs[8] *
                                                         std::pow(C49841, 8)) *
                                                    C49850 * C50088)))) /
        C49739;
    const double C6028 = C2198 * C6021;
    const double C10213 = C7933 * C6021;
    const double C19334 = C17054 * C6021;
    const double C22565 = C19897 * C6021;
    const double C27986 = C49760 * C6021;
    const double C2377 =
        (3 * C50038 + C50016 * C50202 + C50265 + C50265 +
         C49843 *
             (2 * ae *
                  (3 * C50062 +
                   C50016 *
                       (2 * C50135 + C50016 * (C49928 + C49978 * C50029))) +
              C49843 * (3 * C50063 +
                        C50016 * (2 * C50136 +
                                  C50016 * (C49985 + (C49961 * C49962 +
                                                      C49847 * bs[8] *
                                                          std::pow(C49841, 8)) *
                                                         C49850 * C50029))))) /
        C49739;
    const double C3452 = C2198 * C3442;
    const double C20032 = C19897 * C3442;
    const double C25885 = C49760 * C3442;
    const double C4132 = C2198 * C4122;
    const double C20541 = C19897 * C4122;
    const double C26553 = C49760 * C4122;
    const double C5441 =
        (3 * C50097 + C50075 * C50247 + C50293 + C50293 +
         C49843 *
             (2 * ae *
                  (3 * C50121 +
                   C50075 *
                       (2 * C50154 + C50075 * (C49928 + C49978 * C50088))) +
              C49843 * (3 * C50122 +
                        C50075 * (2 * C50155 +
                                  C50075 * (C49985 + (C49961 * C49962 +
                                                      C49847 * bs[8] *
                                                          std::pow(C49841, 8)) *
                                                         C49850 * C50088))))) /
        C49739;
    const double C7332 = C2198 * C7322;
    const double C39384 = C19897 * C7322;
    const double C46575 = C49760 * C7322;
    const double C117 =
        ((ae * -2 * C49733) / C49746 -
         (((C49735 * C49747) / C49739 + 2 * C49763) * be) / C49734) /
            C49740 +
        ((C49735 * (C49747 / C49746 -
                    (((C49735 * C49772) / C49734 + 2 * C49770) * be) / C49734 -
                    C49765 / C49749) +
          2 * (C49763 / C49740 - ((C49735 * C49770 + C50785) * be) / C49734 +
               C49760)) *
         ae) /
            C49734 +
        C49772 / C49749 - ((2 * C49760 - C49767 / C49749) * be) / C49734;
    const double C119 =
        (C49747 / C49746 -
         (((C49735 * C49772) / C49734 + 2 * C49770) * be) / C49734 -
         C49765 / C49749) /
            C49740 +
        ((C49735 * (C49772 / C49749 -
                    ((2 * C49760 - C49767 / C49749) * be) / C49734) +
          2 * (C49770 / C49740 - ((C49735 * C49760 + C50531) * be) / C49734)) *
         ae) /
            C49734 +
        (-2 * C49765) / (C49734 * 4 * C49739);
    const double C121 =
        (C49772 / C49749 - ((2 * C49760 - C49767 / C49749) * be) / C49734) /
            C49740 +
        ((2 * (C49760 / C49740 - (0 * be) / C49734) -
          C49767 / (C49734 * 4 * C49739)) *
         ae) /
            C49734;
    const double C7928 =
        C49747 / C49746 -
        (((C49735 * C49772) / C49734 + 2 * C49770) * be) / C49734 -
        C49765 / C49749;
    const double C7930 =
        C49772 / C49749 - ((2 * C49760 - C49767 / C49749) * be) / C49734;
    const double C17049 =
        C49747 / C49746 +
        (((C49735 * C49772) / C49734 + 2 * C49770) * ae) / C49734 -
        C49765 / C49749;
    const double C17051 =
        C49772 / C49749 + ((2 * C49760 - C49767 / C49749) * ae) / C49734;
    const double C24661 = C49772 / C49734;
    const double C2403 = C2195 * C1004;
    const double C2399 = C2195 * C270;
    const double C2395 = C2195 * C267;
    const double C2390 = C2195 * C1005;
    const double C2383 = C2195 * C269;
    const double C2379 = C2195 * C268;
    const double C2780 = C2195 * C271;
    const double C2776 = C2195 * C266;
    const double C3167 = C2195 * C1465;
    const double C3163 = C2195 * C806;
    const double C3159 = C2195 * C805;
    const double C3155 = C2195 * C1466;
    const double C3448 = C2195 * C2369;
    const double C3617 = C2195 * C2596;
    const double C3613 = C2195 * C1119;
    const double C4128 = C2195 * C3143;
    const double C5465 = C2195 * C1749;
    const double C5461 = C2195 * C417;
    const double C5457 = C2195 * C414;
    const double C5453 = C2195 * C1750;
    const double C5447 = C2195 * C416;
    const double C5443 = C2195 * C415;
    const double C5809 = C2195 * C418;
    const double C5805 = C2195 * C413;
    const double C6024 = C2195 * C1118;
    const double C6432 = C2195 * C4533;
    const double C7328 = C2195 * C5433;
    const double C14151 = C2195 * C807;
    const double C2444 = C2432 + C2402;
    const double C2442 = C2430 + C2398;
    const double C2439 = C2427 + C2389;
    const double C2438 = C2426 + C2386;
    const double C2436 = C2424 + C2382;
    const double C3191 = C3183 + C3158;
    const double C3189 = C3181 + C3154;
    const double C3634 = C3630 + C3620;
    const double C3632 = C3628 + C3616;
    const double C5506 = C5494 + C5464;
    const double C5504 = C5492 + C5460;
    const double C5501 = C5489 + C5452;
    const double C5500 = C5488 + C5450;
    const double C5498 = C5486 + C5446;
    const double C6444 = C6442 + C6435;
    const double C8168 = C8156 + C8113;
    const double C8167 = C8155 + C8110;
    const double C11154 = C11142 + C11107;
    const double C11153 = C11141 + C11105;
    const double C17289 = C17277 + C17234;
    const double C17288 = C17276 + C17231;
    const double C34168 = C34156 + C34121;
    const double C34167 = C34155 + C34119;
    const double C20055 = C20047 + C20028;
    const double C20054 = C20046 + C20026;
    const double C20053 = C20045 + C20024;
    const double C20052 = C20044 + C20021;
    const double C20051 = C20043 + C20018;
    const double C20050 = C20042 + C20016;
    const double C20049 = C20041 + C20014;
    const double C20291 = C20288 + C20280;
    const double C20290 = C20287 + C20278;
    const double C20558 = C20552 + C20538;
    const double C20557 = C20551 + C20536;
    const double C20556 = C20550 + C20533;
    const double C20555 = C20549 + C20531;
    const double C20554 = C20548 + C20529;
    const double C20738 = C20737 + C20734;
    const double C20856 = C20853 + C20846;
    const double C20855 = C20852 + C20844;
    const double C20854 = C20851 + C20842;
    const double C21194 = C21193 + C21190;
    const double C22060 = C22058 + C22054;
    const double C22059 = C22057 + C22050;
    const double C22254 = C22246 + C22228;
    const double C22253 = C22245 + C22225;
    const double C22252 = C22244 + C22222;
    const double C22251 = C22243 + C22220;
    const double C22250 = C22242 + C22216;
    const double C22249 = C22241 + C22214;
    const double C22248 = C22240 + C22212;
    const double C22247 = C22239 + C22210;
    const double C22572 = C22570 + C22564;
    const double C22571 = C22569 + C22562;
    const double C23182 = C23180 + C23175;
    const double C23181 = C23179 + C23173;
    const double C24072 = C24071 + C24067;
    const double C40578 = C40577 + C40574;
    const double C24901 = C24889 + C24859;
    const double C24899 = C24887 + C24855;
    const double C24896 = C24884 + C24846;
    const double C24895 = C24883 + C24843;
    const double C24893 = C24881 + C24839;
    const double C25630 = C25622 + C25597;
    const double C25628 = C25620 + C25593;
    const double C26061 = C26057 + C26047;
    const double C26059 = C26055 + C26043;
    const double C28017 = C28007 + C27981;
    const double C28015 = C28005 + C27977;
    const double C28012 = C28002 + C27971;
    const double C28011 = C28001 + C27969;
    const double C29223 = C29221 + C29217;
    const double C30402 = C30400 + C30392;
    const double C2787 = C2778 + C2215;
    const double C8149 = C8127 + C7941;
    const double C17270 = C17248 + C17062;
    const double C25235 = C25226 + C24681;
    const double C5816 = C5807 + C2948;
    const double C11135 = C11116 + C8337;
    const double C34149 = C34130 + C17458;
    const double C28427 = C28420 + C25396;
    const double C3194 = C3186 + C3166;
    const double C8887 = C8881 + C8858;
    const double C18008 = C18002 + C17979;
    const double C22411 = C22409 + C22403;
    const double C25633 = C25625 + C25605;
    const double C49954 = C49953 + C49940;
    const double C293 =
        (3 * (C50017 + C50021 + C50021 + C49843 * C50055) + C50051 + C50051 +
         C49843 * (2 * C50055 + C50052 + C50052 +
                   C49843 * (C50045 + C50053 + C50053 +
                             C49843 * (2 * ae * C50016 * C49928 +
                                       C49843 * C50016 * C49985)))) /
        C49739;
    const double C826 = C122 * C813;
    const double C824 = C124 * C813;
    const double C2946 = C2198 * C813;
    const double C8340 = C7933 * C813;
    const double C8658 = C7931 * C813;
    const double C13568 = C2196 * C813;
    const double C17461 = C17054 * C813;
    const double C17779 = C17052 * C813;
    const double C21892 = C19897 * C813;
    const double C25394 = C49760 * C813;
    const double C27575 = C49770 * C813;
    const double C440 =
        (3 * (C50076 + C50080 + C50080 + C49843 * C50114) + C50110 + C50110 +
         C49843 * (2 * C50114 + C50111 + C50111 +
                   C49843 * (C50104 + C50112 + C50112 +
                             C49843 * (2 * ae * C50075 * C49928 +
                                       C49843 * C50075 * C49985)))) /
        C49739;
    const double C2789 = C2782 + C2217;
    const double C8152 = C8135 + C8136;
    const double C17273 = C17256 + C17257;
    const double C25237 = C25230 + C24683;
    const double C5818 = C5811 + C5137;
    const double C11138 = C11122 + C8344;
    const double C34152 = C34136 + C17465;
    const double C45105 = C45100 + C28424;
    const double C2434 = C2422 + C2407;
    const double C9151 = C9148 + C8122;
    const double C18272 = C18269 + C17243;
    const double C20289 = C20286 + C19910;
    const double C24891 = C24879 + C24864;
    const double C3188 = C3180 + C2623;
    const double C9819 = C9816 + C8865;
    const double C18940 = C18937 + C17986;
    const double C31606 = C31605 + C20395;
    const double C25627 = C25619 + C25071;
    const double C6035 = C6033 + C6027;
    const double C9318 = C9315 + C9306;
    const double C18439 = C18436 + C18427;
    const double C22412 = C22410 + C22405;
    const double C28019 = C28009 + C27985;
    const double C5496 = C5484 + C5469;
    const double C12947 = C12944 + C10216;
    const double C35961 = C35958 + C19337;
    const double C39588 = C39587 + C22566;
    const double C44803 = C44801 + C27988;
    const double C3460 = C3458 + C3451;
    const double C20056 = C20048 + C20031;
    const double C25893 = C25891 + C25884;
    const double C4140 = C4138 + C4131;
    const double C20559 = C20553 + C20540;
    const double C26561 = C26559 + C26552;
    const double C7339 = C7337 + C7331;
    const double C39387 = C39386 + C39383;
    const double C46582 = C46580 + C46574;
    const double C50009 = C50008 + C49990;
    const double C50069 = ae * C50064;
    const double C1006 = (2 * C50046 + C50016 * C50064) / C49734;
    const double C1467 = (C50075 * C50064) / C49734;
    const double C50128 = ae * C50123;
    const double C1751 = (2 * C50105 + C50075 * C50123) / C49734;
    const double C50190 = ae * C50185;
    const double C1129 = C124 * C1120;
    const double C5657 = C2198 * C1120;
    const double C8341 = C7933 * C1120;
    const double C17462 = C17054 * C1120;
    const double C21891 = C19897 * C1120;
    const double C28422 = C49760 * C1120;
    const double C1010 =
        (2 * (2 * ae * (2 * C50044 + C50016 * C50062) + C49843 * C50202) +
         C50205 + C50205 +
         C49843 *
             (C50202 + C50206 + C50206 +
              C49843 *
                  (2 * ae * (2 * C50135 + C50016 * (C49928 + C49978 * C50029)) +
                   C49843 * (2 * C50136 +
                             C50016 * (C49985 +
                                       (C49961 * C49962 +
                                        C49847 * bs[8] * std::pow(C49841, 8)) *
                                           C49850 * C50029))))) /
        C49739;
    const double C2409 = C2198 * C2374;
    const double C9143 = C7933 * C2374;
    const double C18264 = C17054 * C2374;
    const double C20283 = C19897 * C2374;
    const double C24866 = C49760 * C2374;
    const double C3171 = C2198 * C3148;
    const double C9811 = C7933 * C3148;
    const double C18932 = C17054 * C3148;
    const double C20394 = C19897 * C3148;
    const double C25610 = C49760 * C3148;
    const double C1755 =
        (2 * (2 * ae * (2 * C50103 + C50075 * C50121) + C49843 * C50247) +
         C50250 + C50250 +
         C49843 *
             (C50247 + C50251 + C50251 +
              C49843 *
                  (2 * ae * (2 * C50154 + C50075 * (C49928 + C49978 * C50088)) +
                   C49843 * (2 * C50155 +
                             C50075 * (C49985 +
                                       (C49961 * C49962 +
                                        C49847 * bs[8] * std::pow(C49841, 8)) *
                                           C49850 * C50088))))) /
        C49739;
    const double C5471 = C2198 * C5438;
    const double C12939 = C7933 * C5438;
    const double C35953 = C17054 * C5438;
    const double C39586 = C19897 * C5438;
    const double C44798 = C49760 * C5438;
    const double C8129 = C7928 * C270;
    const double C8123 = C7928 * C267;
    const double C8117 = C7928 * C269;
    const double C8105 = C7928 * C268;
    const double C8493 = C7928 * C266;
    const double C8866 = C7928 * C806;
    const double C8861 = C7928 * C805;
    const double C9137 = C7928 * C1005;
    const double C9301 = C7928 * C1119;
    const double C9805 = C7928 * C1466;
    const double C11118 = C7928 * C417;
    const double C11112 = C7928 * C414;
    const double C11110 = C7928 * C416;
    const double C11100 = C7928 * C415;
    const double C11455 = C7928 * C413;
    const double C12933 = C7928 * C1750;
    const double C8132 = C7930 * C271;
    const double C8125 = C7930 * C266;
    const double C8114 = C7930 * C270;
    const double C8107 = C7930 * C267;
    const double C8495 = C7930 * C265;
    const double C8868 = C7930 * C807;
    const double C8859 = C7930 * C806;
    const double C9139 = C7930 * C1004;
    const double C9303 = C7930 * C1118;
    const double C9807 = C7930 * C1465;
    const double C11120 = C7930 * C418;
    const double C11114 = C7930 * C413;
    const double C11108 = C7930 * C417;
    const double C11102 = C7930 * C414;
    const double C11457 = C7930 * C412;
    const double C12935 = C7930 * C1749;
    const double C17250 = C17049 * C270;
    const double C17244 = C17049 * C267;
    const double C17238 = C17049 * C269;
    const double C17226 = C17049 * C268;
    const double C17614 = C17049 * C266;
    const double C17987 = C17049 * C806;
    const double C17982 = C17049 * C805;
    const double C18258 = C17049 * C1005;
    const double C18422 = C17049 * C1119;
    const double C18926 = C17049 * C1466;
    const double C34132 = C17049 * C417;
    const double C34126 = C17049 * C414;
    const double C34124 = C17049 * C416;
    const double C34114 = C17049 * C415;
    const double C34469 = C17049 * C413;
    const double C35947 = C17049 * C1750;
    const double C17253 = C17051 * C271;
    const double C17246 = C17051 * C266;
    const double C17235 = C17051 * C270;
    const double C17228 = C17051 * C267;
    const double C17616 = C17051 * C265;
    const double C17989 = C17051 * C807;
    const double C17980 = C17051 * C806;
    const double C18260 = C17051 * C1004;
    const double C18424 = C17051 * C1118;
    const double C18928 = C17051 * C1465;
    const double C34134 = C17051 * C418;
    const double C34128 = C17051 * C413;
    const double C34122 = C17051 * C417;
    const double C34116 = C17051 * C414;
    const double C34471 = C17051 * C412;
    const double C35949 = C17051 * C1749;
    const double C24860 = C24661 * C1004;
    const double C24856 = C24661 * C270;
    const double C24852 = C24661 * C267;
    const double C24847 = C24661 * C1005;
    const double C24840 = C24661 * C269;
    const double C24836 = C24661 * C268;
    const double C25228 = C24661 * C271;
    const double C25224 = C24661 * C266;
    const double C25606 = C24661 * C1465;
    const double C25602 = C24661 * C806;
    const double C25598 = C24661 * C805;
    const double C25594 = C24661 * C1466;
    const double C25881 = C24661 * C2369;
    const double C26044 = C24661 * C2596;
    const double C26040 = C24661 * C1119;
    const double C26549 = C24661 * C3143;
    const double C27982 = C24661 * C1118;
    const double C27978 = C24661 * C417;
    const double C27974 = C24661 * C414;
    const double C27972 = C24661 * C416;
    const double C27966 = C24661 * C415;
    const double C28214 = C24661 * C807;
    const double C28418 = C24661 * C413;
    const double C29214 = C24661 * C4533;
    const double C30389 = C24661 * C1750;
    const double C44793 = C24661 * C1749;
    const double C45098 = C24661 * C418;
    const double C46571 = C24661 * C5433;
    const double C2421 = C2403 + C2404;
    const double C2419 = C2399 + C2207;
    const double C2417 = C2395 + C2209;
    const double C2416 = C2390 + C2391;
    const double C2413 = C2383 + C2204;
    const double C2411 = C2379 + C2202;
    const double C2788 = C2780 + C2216;
    const double C2786 = C2776 + C2214;
    const double C3179 = C3167 + C2622;
    const double C3177 = C3163 + C2620;
    const double C3176 = C3159 + C2609;
    const double C3174 = C3155 + C2607;
    const double C3455 = C3448 + C2393;
    const double C3625 = C3617 + C2616;
    const double C3623 = C3613 + C2614;
    const double C4135 = C4128 + C3161;
    const double C5483 = C5465 + C5466;
    const double C5481 = C5461 + C2629;
    const double C5479 = C5457 + C2618;
    const double C5478 = C5453 + C4548;
    const double C5475 = C5447 + C2612;
    const double C5473 = C5443 + C2611;
    const double C5817 = C5809 + C5136;
    const double C5815 = C5805 + C2949;
    const double C6030 = C6024 + C2627;
    const double C6439 = C6432 + C4546;
    const double C7334 = C7328 + C5455;
    const double C14155 = C14151 + C2947;
    const double C20063 = C20055 * C50689;
    const double C31304 = C20055 * C50814;
    const double C36705 = C20055 * C33816;
    const double C20062 = C20054 * C50689;
    const double C22051 = C20054 * C5132;
    const double C31302 = C20054 * C50814;
    const double C36703 = C20054 * C33816;
    const double C47322 = C20054 * C50851;
    const double C20061 = C20053 * C50689;
    const double C22047 = C20053 * C5132;
    const double C31300 = C20053 * C50814;
    const double C36701 = C20053 * C33816;
    const double C47319 = C20053 * C50851;
    const double C20060 = C20052 * C50689;
    const double C32202 = C20052 * C50814;
    const double C37598 = C20052 * C33816;
    const double C20059 = C20051 * C50689;
    const double C23018 = C20051 * C5132;
    const double C31299 = C20051 * C50814;
    const double C36700 = C20051 * C33816;
    const double C48210 = C20051 * C50851;
    const double C20058 = C20050 * C50689;
    const double C22046 = C20050 * C5132;
    const double C31296 = C20050 * C50814;
    const double C36697 = C20050 * C33816;
    const double C47318 = C20050 * C50851;
    const double C20057 = C20049 * C50689;
    const double C22041 = C20049 * C5132;
    const double C31294 = C20049 * C50814;
    const double C36695 = C20049 * C33816;
    const double C47313 = C20049 * C50851;
    const double C20294 = C20291 * C50689;
    const double C31602 = C20291 * C50814;
    const double C37003 = C20291 * C33816;
    const double C20293 = C20290 * C50689;
    const double C22401 = C20290 * C5132;
    const double C31600 = C20290 * C50814;
    const double C37001 = C20290 * C33816;
    const double C47617 = C20290 * C50851;
    const double C20564 = C20558 * C50689;
    const double C22052 = C20558 * C5133;
    const double C31303 = C20558 * C50753;
    const double C31955 = C20558 * C50814;
    const double C36704 = C20558 * C50753;
    const double C37351 = C20558 * C33816;
    const double C47323 = C20558 * C50852;
    const double C20563 = C20557 * C50689;
    const double C22048 = C20557 * C5133;
    const double C22770 = C20557 * C5132;
    const double C31301 = C20557 * C50753;
    const double C31953 = C20557 * C50814;
    const double C36702 = C20557 * C50753;
    const double C37349 = C20557 * C33816;
    const double C47320 = C20557 * C50852;
    const double C47963 = C20557 * C50851;
    const double C20562 = C20556 * C50689;
    const double C22042 = C20556 * C5133;
    const double C22769 = C20556 * C5132;
    const double C31295 = C20556 * C50753;
    const double C31952 = C20556 * C50814;
    const double C36696 = C20556 * C50753;
    const double C37348 = C20556 * C33816;
    const double C47314 = C20556 * C50852;
    const double C47962 = C20556 * C50851;
    const double C20561 = C20555 * C50689;
    const double C22045 = C20555 * C5133;
    const double C23670 = C20555 * C5132;
    const double C31297 = C20555 * C50753;
    const double C31950 = C20555 * C50814;
    const double C36698 = C20555 * C50753;
    const double C37346 = C20555 * C33816;
    const double C47317 = C20555 * C50852;
    const double C48848 = C20555 * C50851;
    const double C20560 = C20554 * C50689;
    const double C23019 = C20554 * C5133;
    const double C31298 = C20554 * C50753;
    const double C32841 = C20554 * C50814;
    const double C36699 = C20554 * C50753;
    const double C38237 = C20554 * C33816;
    const double C48211 = C20554 * C50852;
    const double C20739 = C20738 * C50689;
    const double C20859 = C20856 * C50689;
    const double C23020 = C20856 * C5134;
    const double C32842 = C20856 * C50753;
    const double C38238 = C20856 * C50753;
    const double C48212 = C20856 * C44496;
    const double C20858 = C20855 * C50689;
    const double C22044 = C20855 * C5134;
    const double C23671 = C20855 * C5133;
    const double C31949 = C20855 * C50753;
    const double C32352 = C20855 * C50814;
    const double C37345 = C20855 * C50753;
    const double C37748 = C20855 * C33816;
    const double C47316 = C20855 * C44496;
    const double C48849 = C20855 * C50852;
    const double C20857 = C20854 * C50689;
    const double C22043 = C20854 * C5134;
    const double C22768 = C20854 * C5133;
    const double C23170 = C20854 * C5132;
    const double C31951 = C20854 * C50753;
    const double C32350 = C20854 * C50814;
    const double C37347 = C20854 * C50753;
    const double C37746 = C20854 * C33816;
    const double C47315 = C20854 * C44496;
    const double C47961 = C20854 * C50852;
    const double C48359 = C20854 * C50851;
    const double C21195 = C21194 * C50689;
    const double C32203 = C21194 * C50753;
    const double C37599 = C21194 * C50753;
    const double C22062 = C22060 * C5134;
    const double C31956 = C22060 * C50753;
    const double C37352 = C22060 * C50753;
    const double C47324 = C22060 * C44496;
    const double C22061 = C22059 * C5134;
    const double C22771 = C22059 * C5133;
    const double C31954 = C22059 * C50753;
    const double C37350 = C22059 * C50753;
    const double C47321 = C22059 * C44496;
    const double C47964 = C22059 * C50852;
    const double C22772 = C22254 * C5134;
    const double C47965 = C22254 * C44496;
    const double C22767 = C22249 * C5134;
    const double C23171 = C22249 * C5133;
    const double C32351 = C22249 * C50753;
    const double C37747 = C22249 * C50753;
    const double C47960 = C22249 * C44496;
    const double C48360 = C22249 * C50852;
    const double C23672 = C23182 * C5134;
    const double C32353 = C23182 * C50753;
    const double C37749 = C23182 * C50753;
    const double C48850 = C23182 * C44496;
    const double C23183 = C23181 * C5134;
    const double C48361 = C23181 * C44496;
    const double C2791 = C2787 + C2215;
    const double C8161 = C8149 + C7941;
    const double C17282 = C17270 + C17062;
    const double C25239 = C25235 + C24681;
    const double C5820 = C5816 + C2948;
    const double C11147 = C11135 + C8337;
    const double C34161 = C34149 + C17458;
    const double C28429 = C28427 + C25396;
    const double C22413 = C22411 * C5133;
    const double C31601 = C22411 * C50753;
    const double C37002 = C22411 * C50753;
    const double C47618 = C22411 * C50852;
    const double C49955 = ae * C49954;
    const double C137 =
        (4 * C49909 + C49843 * C49954 + (3 * C49894 + C49843 * C49937) * ae) /
        C49734;
    const double C283 = (C50016 * C49954) / C49734;
    const double C430 = (C50075 * C49954) / C49734;
    const double C8498 = C7925 * C293;
    const double C17619 = C17046 * C293;
    const double C14156 = C14153 + C2946;
    const double C8880 = C8870 + C8340;
    const double C18001 = C17991 + C17461;
    const double C28219 = C28216 + C25394;
    const double C11460 = C7925 * C440;
    const double C34474 = C17046 * C440;
    const double C2793 = C2789 + C2217;
    const double C8164 = C8152 + C8136;
    const double C17285 = C17273 + C17257;
    const double C25241 = C25237 + C24683;
    const double C5822 = C5818 + C5137;
    const double C11150 = C11138 + C8344;
    const double C34164 = C34152 + C17465;
    const double C45107 = C45105 + C28424;
    const double C2446 = C2434 + C2408;
    const double C9154 = C9151 + C9142;
    const double C18275 = C18272 + C18263;
    const double C20292 = C20289 + C20282;
    const double C24903 = C24891 + C24865;
    const double C3196 = C3188 + C3170;
    const double C9822 = C9819 + C9810;
    const double C18943 = C18940 + C18931;
    const double C31607 = C31606 + C31604;
    const double C25635 = C25627 + C25609;
    const double C22414 = C22412 * C5134;
    const double C47619 = C22412 * C44496;
    const double C5508 = C5496 + C5470;
    const double C12950 = C12947 + C12938;
    const double C35964 = C35961 + C35952;
    const double C39589 = C39588 + C39585;
    const double C44805 = C44803 + C44796;
    const double C20064 = C20056 * C50689;
    const double C20565 = C20559 * C50689;
    const double C31305 = C20559 * C50753;
    const double C36706 = C20559 * C50753;
    const double C50011 = ae * C50009;
    const double C50010 = C49843 * C50009;
    const double C50137 = C50016 * C50009;
    const double C50156 = C50075 * C50009;
    const double C284 = (C49954 + C50009 * C50029) / C49734;
    const double C431 = (C49954 + C50009 * C50088) / C49734;
    const double C294 =
        (3 * (C50038 + C50042 + C50042 + C49843 * C50073) + C50069 + C50069 +
         C49843 *
             (2 * C50073 + C50070 + C50070 +
              C49843 * (C50063 + C50071 + C50071 +
                        C49843 * (2 * ae * (C49928 + C49978 * C50029) +
                                  C49843 * (C49985 + (C49961 * C49962 +
                                                      C49847 * bs[8] *
                                                          std::pow(C49841, 8)) *
                                                         C49850 * C50029))))) /
        C49739;
    const double C1015 = C124 * C1006;
    const double C2784 = C2198 * C1006;
    const double C8138 = C7933 * C1006;
    const double C17259 = C17054 * C1006;
    const double C19911 = C19897 * C1006;
    const double C25232 = C49760 * C1006;
    const double C1476 = C124 * C1467;
    const double C2944 = C2198 * C1467;
    const double C8872 = C7933 * C1467;
    const double C17993 = C17054 * C1467;
    const double C25392 = C49760 * C1467;
    const double C31147 = C19897 * C1467;
    const double C441 =
        (3 * (C50097 + C50101 + C50101 + C49843 * C50132) + C50128 + C50128 +
         C49843 *
             (2 * C50132 + C50129 + C50129 +
              C49843 * (C50122 + C50130 + C50130 +
                        C49843 * (2 * ae * (C49928 + C49978 * C50088) +
                                  C49843 * (C49985 + (C49961 * C49962 +
                                                      C49847 * bs[8] *
                                                          std::pow(C49841, 8)) *
                                                         C49850 * C50088))))) /
        C49739;
    const double C1760 = C124 * C1751;
    const double C5813 = C2198 * C1751;
    const double C11124 = C7933 * C1751;
    const double C34138 = C17054 * C1751;
    const double C39185 = C19897 * C1751;
    const double C45102 = C49760 * C1751;
    const double C819 =
        (3 * (C50177 + C50181 + C50181 + C49843 * C50194) + C50190 + C50190 +
         C49843 *
             (2 * C50194 + C50191 + C50191 +
              C49843 * (C50184 + C50192 + C50192 +
                        C49843 * (2 * ae * C50075 * C50016 * C49978 +
                                  C49843 * C50075 * C50016 *
                                      (C49961 * C49962 +
                                       C49847 * bs[8] * std::pow(C49841, 8)) *
                                      C49850)))) /
        C49739;
    const double C8150 = C8129 + C8130;
    const double C8147 = C8123 + C7943;
    const double C8146 = C8117 + C8118;
    const double C8141 = C8105 + C7938;
    const double C8502 = C8493 + C7950;
    const double C8878 = C8866 + C8338;
    const double C8877 = C8861 + C8325;
    const double C9146 = C9137 + C8120;
    const double C9310 = C9301 + C8332;
    const double C9814 = C9805 + C8863;
    const double C11136 = C11118 + C8346;
    const double C11133 = C11112 + C8335;
    const double C11132 = C11110 + C8329;
    const double C11127 = C11100 + C8328;
    const double C11464 = C11455 + C8662;
    const double C12942 = C12933 + C10218;
    const double C8151 = C8132 + C8133;
    const double C8148 = C8125 + C7942;
    const double C8145 = C8114 + C8115;
    const double C8142 = C8107 + C7939;
    const double C8503 = C8495 + C7951;
    const double C8879 = C8868 + C8339;
    const double C8876 = C8859 + C8324;
    const double C9147 = C9139 + C8121;
    const double C9311 = C9303 + C8333;
    const double C9815 = C9807 + C8864;
    const double C11137 = C11120 + C8345;
    const double C11134 = C11114 + C8336;
    const double C11131 = C11108 + C8330;
    const double C11128 = C11102 + C8327;
    const double C11465 = C11457 + C8661;
    const double C12943 = C12935 + C10217;
    const double C17271 = C17250 + C17251;
    const double C17268 = C17244 + C17064;
    const double C17267 = C17238 + C17239;
    const double C17262 = C17226 + C17059;
    const double C17623 = C17614 + C17071;
    const double C17999 = C17987 + C17459;
    const double C17998 = C17982 + C17446;
    const double C18267 = C18258 + C17241;
    const double C18431 = C18422 + C17453;
    const double C18935 = C18926 + C17984;
    const double C34150 = C34132 + C17467;
    const double C34147 = C34126 + C17456;
    const double C34146 = C34124 + C17450;
    const double C34141 = C34114 + C17449;
    const double C34478 = C34469 + C17783;
    const double C35956 = C35947 + C19339;
    const double C17272 = C17253 + C17254;
    const double C17269 = C17246 + C17063;
    const double C17266 = C17235 + C17236;
    const double C17263 = C17228 + C17060;
    const double C17624 = C17616 + C17072;
    const double C18000 = C17989 + C17460;
    const double C17997 = C17980 + C17445;
    const double C18268 = C18260 + C17242;
    const double C18432 = C18424 + C17454;
    const double C18936 = C18928 + C17985;
    const double C34151 = C34134 + C17466;
    const double C34148 = C34128 + C17457;
    const double C34145 = C34122 + C17451;
    const double C34142 = C34116 + C17448;
    const double C34479 = C34471 + C17782;
    const double C35957 = C35949 + C19338;
    const double C24878 = C24860 + C24861;
    const double C24876 = C24856 + C24673;
    const double C24874 = C24852 + C24675;
    const double C24873 = C24847 + C24848;
    const double C24870 = C24840 + C24670;
    const double C24868 = C24836 + C24668;
    const double C25236 = C25228 + C24682;
    const double C25234 = C25224 + C24680;
    const double C25618 = C25606 + C25070;
    const double C25616 = C25602 + C25068;
    const double C25615 = C25598 + C25057;
    const double C25613 = C25594 + C25055;
    const double C25888 = C25881 + C24850;
    const double C26052 = C26044 + C25064;
    const double C26050 = C26040 + C25062;
    const double C26556 = C26549 + C25600;
    const double C27998 = C27982 + C25075;
    const double C27996 = C27978 + C25077;
    const double C27994 = C27974 + C25066;
    const double C27993 = C27972 + C25060;
    const double C27990 = C27966 + C25059;
    const double C28218 = C28214 + C25395;
    const double C28426 = C28418 + C25397;
    const double C29218 = C29214 + C26955;
    const double C30397 = C30389 + C26957;
    const double C44800 = C44793 + C27989;
    const double C45104 = C45098 + C28425;
    const double C46577 = C46571 + C30396;
    const double C2433 = C2421 + C2404;
    const double C2431 = C2419 + C2207;
    const double C2429 = C2417 + C2209;
    const double C2428 = C2416 + C2391;
    const double C2425 = C2413 + C2204;
    const double C2423 = C2411 + C2202;
    const double C2792 = C2788 + C2216;
    const double C2790 = C2786 + C2214;
    const double C3187 = C3179 + C2622;
    const double C3185 = C3177 + C2620;
    const double C3184 = C3176 + C2609;
    const double C3182 = C3174 + C2607;
    const double C3457 = C3455 + C2393;
    const double C3629 = C3625 + C2616;
    const double C3627 = C3623 + C2614;
    const double C4137 = C4135 + C3161;
    const double C5495 = C5483 + C5466;
    const double C5493 = C5481 + C2629;
    const double C5491 = C5479 + C2618;
    const double C5490 = C5478 + C4548;
    const double C5487 = C5475 + C2612;
    const double C5485 = C5473 + C2611;
    const double C5821 = C5817 + C5136;
    const double C5819 = C5815 + C2949;
    const double C6032 = C6030 + C2627;
    const double C6441 = C6439 + C4546;
    const double C7336 = C7334 + C5455;
    const double C14157 = C14155 + C2947;
    const double C31307 = C31303 + C31302;
    const double C36708 = C36704 + C36703;
    const double C31306 = C31296 + C31297;
    const double C36707 = C36697 + C36698;
    const double C32201 = C31298 + C31299;
    const double C37597 = C36699 + C36700;
    const double C32840 = C31949 + C31950;
    const double C38236 = C37345 + C37346;
    const double C2795 = C2791 + C2779;
    const double C8173 = C8161 + C8128;
    const double C17294 = C17282 + C17249;
    const double C25243 = C25239 + C25227;
    const double C5824 = C5820 + C5808;
    const double C11159 = C11147 + C11117;
    const double C34173 = C34161 + C34131;
    const double C28431 = C28429 + C28421;
    const double C144 =
        (4 * (2 * C49903 + C49907 + C49907 + C49843 * C49946) + C49955 +
         C49955 +
         C49843 * (3 * C49946 + C49952 + C49952 +
                   C49843 * (2 * C49942 + C49948 + C49948 +
                             C49843 * (C49935 + C49941 + C49941 +
                                       C49843 * (2 * ae * C49928 +
                                                 C49843 *
                                                     (C49915 * C49916 +
                                                      C49847 * bs[7] *
                                                          std::pow(C49849, 7)) *
                                                     C49850))))) /
        C49739;
    const double C160 = C122 * C137;
    const double C158 = C124 * C137;
    const double C7956 = C7933 * C137;
    const double C17077 = C17054 * C137;
    const double C307 = C124 * C283;
    const double C566 = C122 * C283;
    const double C2220 = C2198 * C283;
    const double C7954 = C7931 * C283;
    const double C7952 = C7933 * C283;
    const double C17075 = C17052 * C283;
    const double C17073 = C17054 * C283;
    const double C24686 = C49760 * C283;
    const double C454 = C124 * C430;
    const double C673 = C122 * C430;
    const double C5140 = C2198 * C430;
    const double C8660 = C7933 * C430;
    const double C10806 = C7931 * C430;
    const double C17781 = C17054 * C430;
    const double C27576 = C49760 * C430;
    const double C33820 = C17052 * C430;
    const double C14158 = C14156 + C2946;
    const double C8886 = C8880 + C8340;
    const double C18007 = C18001 + C17461;
    const double C28221 = C28219 + C25394;
    const double C2797 = C2793 + C2783;
    const double C8176 = C8164 + C8137;
    const double C17297 = C17285 + C17258;
    const double C25245 = C25241 + C25231;
    const double C5826 = C5822 + C5812;
    const double C11162 = C11150 + C11123;
    const double C34176 = C34164 + C34137;
    const double C45109 = C45107 + C45101;
    const double C20295 = C20292 * C50689;
    const double C31608 = C31607 * C50753;
    const double C37004 = C31607 * C50753;
    const double C50012 = C49963 + C50010;
    const double C50144 = ae * C50137;
    const double C814 = (C50075 * C50137) / C49734;
    const double C50163 = ae * C50156;
    const double C308 = C124 * C284;
    const double C2218 = C2198 * C284;
    const double C8499 = C7933 * C284;
    const double C17620 = C17054 * C284;
    const double C24684 = C49760 * C284;
    const double C455 = C124 * C431;
    const double C5138 = C2198 * C431;
    const double C11461 = C7933 * C431;
    const double C34475 = C17054 * C431;
    const double C44498 = C49760 * C431;
    const double C8162 = C8150 + C8130;
    const double C8159 = C8147 + C7943;
    const double C8158 = C8146 + C8118;
    const double C8153 = C8141 + C7938;
    const double C8505 = C8502 + C7950;
    const double C8884 = C8878 + C8338;
    const double C8883 = C8877 + C8325;
    const double C9149 = C9146 + C8120;
    const double C9313 = C9310 + C8332;
    const double C9817 = C9814 + C8863;
    const double C11148 = C11136 + C8346;
    const double C11145 = C11133 + C8335;
    const double C11144 = C11132 + C8329;
    const double C11139 = C11127 + C8328;
    const double C11467 = C11464 + C8662;
    const double C12945 = C12942 + C10218;
    const double C8163 = C8151 + C8133;
    const double C8160 = C8148 + C7942;
    const double C8157 = C8145 + C8115;
    const double C8154 = C8142 + C7939;
    const double C8506 = C8503 + C7951;
    const double C8885 = C8879 + C8339;
    const double C8882 = C8876 + C8324;
    const double C9150 = C9147 + C8121;
    const double C9314 = C9311 + C8333;
    const double C9818 = C9815 + C8864;
    const double C11149 = C11137 + C8345;
    const double C11146 = C11134 + C8336;
    const double C11143 = C11131 + C8330;
    const double C11140 = C11128 + C8327;
    const double C11468 = C11465 + C8661;
    const double C12946 = C12943 + C10217;
    const double C17283 = C17271 + C17251;
    const double C17280 = C17268 + C17064;
    const double C17279 = C17267 + C17239;
    const double C17274 = C17262 + C17059;
    const double C17626 = C17623 + C17071;
    const double C18005 = C17999 + C17459;
    const double C18004 = C17998 + C17446;
    const double C18270 = C18267 + C17241;
    const double C18434 = C18431 + C17453;
    const double C18938 = C18935 + C17984;
    const double C34162 = C34150 + C17467;
    const double C34159 = C34147 + C17456;
    const double C34158 = C34146 + C17450;
    const double C34153 = C34141 + C17449;
    const double C34481 = C34478 + C17783;
    const double C35959 = C35956 + C19339;
    const double C17284 = C17272 + C17254;
    const double C17281 = C17269 + C17063;
    const double C17278 = C17266 + C17236;
    const double C17275 = C17263 + C17060;
    const double C17627 = C17624 + C17072;
    const double C18006 = C18000 + C17460;
    const double C18003 = C17997 + C17445;
    const double C18271 = C18268 + C17242;
    const double C18435 = C18432 + C17454;
    const double C18939 = C18936 + C17985;
    const double C34163 = C34151 + C17466;
    const double C34160 = C34148 + C17457;
    const double C34157 = C34145 + C17451;
    const double C34154 = C34142 + C17448;
    const double C34482 = C34479 + C17782;
    const double C35960 = C35957 + C19338;
    const double C24890 = C24878 + C24861;
    const double C24888 = C24876 + C24673;
    const double C24886 = C24874 + C24675;
    const double C24885 = C24873 + C24848;
    const double C24882 = C24870 + C24670;
    const double C24880 = C24868 + C24668;
    const double C25240 = C25236 + C24682;
    const double C25238 = C25234 + C24680;
    const double C25626 = C25618 + C25070;
    const double C25624 = C25616 + C25068;
    const double C25623 = C25615 + C25057;
    const double C25621 = C25613 + C25055;
    const double C25890 = C25888 + C24850;
    const double C26056 = C26052 + C25064;
    const double C26054 = C26050 + C25062;
    const double C26558 = C26556 + C25600;
    const double C28008 = C27998 + C25075;
    const double C28006 = C27996 + C25077;
    const double C28004 = C27994 + C25066;
    const double C28003 = C27993 + C25060;
    const double C28000 = C27990 + C25059;
    const double C28220 = C28218 + C25395;
    const double C28428 = C28426 + C25397;
    const double C29220 = C29218 + C26955;
    const double C30399 = C30397 + C26957;
    const double C44802 = C44800 + C27989;
    const double C45106 = C45104 + C28425;
    const double C46579 = C46577 + C30396;
    const double C2445 = C2433 + C2405;
    const double C2443 = C2431 + C2400;
    const double C2441 = C2429 + C2396;
    const double C2440 = C2428 + C2392;
    const double C2437 = C2425 + C2384;
    const double C2435 = C2423 + C2380;
    const double C2796 = C2792 + C2781;
    const double C2794 = C2790 + C2777;
    const double C3195 = C3187 + C3168;
    const double C3193 = C3185 + C3164;
    const double C3192 = C3184 + C3160;
    const double C3190 = C3182 + C3156;
    const double C3459 = C3457 + C3449;
    const double C3633 = C3629 + C3618;
    const double C3631 = C3627 + C3614;
    const double C4139 = C4137 + C4129;
    const double C5507 = C5495 + C5467;
    const double C5505 = C5493 + C5462;
    const double C5503 = C5491 + C5458;
    const double C5502 = C5490 + C5454;
    const double C5499 = C5487 + C5448;
    const double C5497 = C5485 + C5444;
    const double C5825 = C5821 + C5810;
    const double C5823 = C5819 + C5806;
    const double C6034 = C6032 + C6025;
    const double C6443 = C6441 + C6433;
    const double C7338 = C7336 + C7329;
    const double C14159 = C14157 + C14152;
    const double C8504 = C8497 + C7952;
    const double C17625 = C17618 + C17073;
    const double C11466 = C11459 + C8660;
    const double C34480 = C34473 + C17781;
    const double C14160 = C14158 + C14154;
    const double C8892 = C8886 + C8871;
    const double C18013 = C18007 + C17992;
    const double C28223 = C28221 + C28217;
    const double C50013 = C50012 + C49998;
    const double C563 =
        (4 * (2 * C50055 + C50052 + C50052 + C49843 * C50151) + C50144 +
         C50144 +
         C49843 * (3 * C50151 + C50145 + C50145 +
                   C49843 * (2 * C50149 + C50146 + C50146 +
                             C49843 * (C50136 + C50147 + C50147 +
                                       C49843 * (2 * ae * C50016 * C49978 +
                                                 C49843 * C50016 *
                                                     (C49961 * C49962 +
                                                      C49847 * bs[8] *
                                                          std::pow(C49841, 8)) *
                                                     C49850))))) /
        C49739;
    const double C825 = C124 * C814;
    const double C8657 = C7933 * C814;
    const double C13567 = C2198 * C814;
    const double C17778 = C17054 * C814;
    const double C27574 = C49760 * C814;
    const double C670 =
        (4 * (2 * C50114 + C50111 + C50111 + C49843 * C50170) + C50163 +
         C50163 +
         C49843 * (3 * C50170 + C50164 + C50164 +
                   C49843 * (2 * C50168 + C50165 + C50165 +
                             C49843 * (C50155 + C50166 + C50166 +
                                       C49843 * (2 * ae * C50075 * C49978 +
                                                 C49843 * C50075 *
                                                     (C49961 * C49962 +
                                                      C49847 * bs[8] *
                                                          std::pow(C49841, 8)) *
                                                     C49850))))) /
        C49739;
    const double C8174 = C8162 + C8131;
    const double C8171 = C8159 + C8124;
    const double C8170 = C8158 + C8119;
    const double C8165 = C8153 + C8106;
    const double C8508 = C8505 + C8494;
    const double C8890 = C8884 + C8867;
    const double C8889 = C8883 + C8862;
    const double C9152 = C9149 + C9138;
    const double C9316 = C9313 + C9302;
    const double C9820 = C9817 + C9806;
    const double C11160 = C11148 + C11119;
    const double C11157 = C11145 + C11113;
    const double C11156 = C11144 + C11111;
    const double C11151 = C11139 + C11101;
    const double C11470 = C11467 + C11456;
    const double C12948 = C12945 + C12934;
    const double C8175 = C8163 + C8134;
    const double C8172 = C8160 + C8126;
    const double C8169 = C8157 + C8116;
    const double C8166 = C8154 + C8108;
    const double C8509 = C8506 + C8496;
    const double C8891 = C8885 + C8869;
    const double C8888 = C8882 + C8860;
    const double C9153 = C9150 + C9140;
    const double C9317 = C9314 + C9304;
    const double C9821 = C9818 + C9808;
    const double C11161 = C11149 + C11121;
    const double C11158 = C11146 + C11115;
    const double C11155 = C11143 + C11109;
    const double C11152 = C11140 + C11103;
    const double C11471 = C11468 + C11458;
    const double C12949 = C12946 + C12936;
    const double C17295 = C17283 + C17252;
    const double C17292 = C17280 + C17245;
    const double C17291 = C17279 + C17240;
    const double C17286 = C17274 + C17227;
    const double C17629 = C17626 + C17615;
    const double C18011 = C18005 + C17988;
    const double C18010 = C18004 + C17983;
    const double C18273 = C18270 + C18259;
    const double C18437 = C18434 + C18423;
    const double C18941 = C18938 + C18927;
    const double C34174 = C34162 + C34133;
    const double C34171 = C34159 + C34127;
    const double C34170 = C34158 + C34125;
    const double C34165 = C34153 + C34115;
    const double C34484 = C34481 + C34470;
    const double C35962 = C35959 + C35948;
    const double C17296 = C17284 + C17255;
    const double C17293 = C17281 + C17247;
    const double C17290 = C17278 + C17237;
    const double C17287 = C17275 + C17229;
    const double C17630 = C17627 + C17617;
    const double C18012 = C18006 + C17990;
    const double C18009 = C18003 + C17981;
    const double C18274 = C18271 + C18261;
    const double C18438 = C18435 + C18425;
    const double C18942 = C18939 + C18929;
    const double C34175 = C34163 + C34135;
    const double C34172 = C34160 + C34129;
    const double C34169 = C34157 + C34123;
    const double C34166 = C34154 + C34117;
    const double C34485 = C34482 + C34472;
    const double C35963 = C35960 + C35950;
    const double C24902 = C24890 + C24862;
    const double C24900 = C24888 + C24857;
    const double C24898 = C24886 + C24853;
    const double C24897 = C24885 + C24849;
    const double C24894 = C24882 + C24841;
    const double C24892 = C24880 + C24837;
    const double C25244 = C25240 + C25229;
    const double C25242 = C25238 + C25225;
    const double C25634 = C25626 + C25607;
    const double C25632 = C25624 + C25603;
    const double C25631 = C25623 + C25599;
    const double C25629 = C25621 + C25595;
    const double C25892 = C25890 + C25882;
    const double C26060 = C26056 + C26045;
    const double C26058 = C26054 + C26041;
    const double C26560 = C26558 + C26550;
    const double C28018 = C28008 + C27983;
    const double C28016 = C28006 + C27979;
    const double C28014 = C28004 + C27975;
    const double C28013 = C28003 + C27973;
    const double C28010 = C28000 + C27967;
    const double C28222 = C28220 + C28215;
    const double C28430 = C28428 + C28419;
    const double C29222 = C29220 + C29215;
    const double C30401 = C30399 + C30390;
    const double C44804 = C44802 + C44794;
    const double C45108 = C45106 + C45099;
    const double C46581 = C46579 + C46572;
    const double C2448 = C2444 + C2443;
    const double C3447 = C2439 + C2440;
    const double C2447 = C2437 + C2438;
    const double C14616 = C3194 + C3193;
    const double C14615 = C3193 + C3194;
    const double C14614 = C3191 + C3192;
    const double C14613 = C3192 + C3191;
    const double C4127 = C3189 + C3190;
    const double C15782 = C3190 + C3189;
    const double C6436 = C3632 + C3631;
    const double C15135 = C3631 + C3632;
    const double C5510 = C5506 + C5505;
    const double C7327 = C5501 + C5502;
    const double C5509 = C5499 + C5500;
    const double C8507 = C8504 + C7952;
    const double C17628 = C17625 + C17073;
    const double C11469 = C11466 + C8660;
    const double C34483 = C34480 + C17781;
    const double C50014 = ae * C50013;
    const double C138 =
        (5 * C49954 + C49843 * C50013 + (4 * C49937 + C49843 * C49995) * ae) /
        C49734;
    const double C562 = (C50016 * C50013) / C49734;
    const double C669 = (C50075 * C50013) / C49734;
    const double C24905 = C24901 + C24900;
    const double C25880 = C24896 + C24897;
    const double C24904 = C24894 + C24895;
    const double C28693 = C25633 + C25632;
    const double C28692 = C25632 + C25633;
    const double C28691 = C25630 + C25631;
    const double C28690 = C25631 + C25630;
    const double C26548 = C25628 + C25629;
    const double C29870 = C25629 + C25628;
    const double C29213 = C26058 + C26059;
    const double C29212 = C26059 + C26058;
    const double C44797 = C28017 + C28016;
    const double C44792 = C28013 + C28012;
    const double C46570 = C30402 + C30401;
    const double C2450 = C2448 * C50689;
    const double C3454 = C3447 * C50689;
    const double C2449 = C2447 * C50689;
    const double C4134 = C4127 * C50689;
    const double C8510 = C8507 + C8498;
    const double C17631 = C17628 + C17619;
    const double C11472 = C11469 + C11460;
    const double C34486 = C34483 + C34474;
    const double C145 =
        (5 * (3 * C49946 + C49952 + C49952 + C49843 * C50004) + C50014 +
         C50014 +
         C49843 *
             (4 * C50004 + C50011 + C50011 +
              C49843 *
                  (3 * C49999 + C50007 + C50007 +
                   C49843 * (2 * C49993 + C50001 + C50001 +
                             C49843 * (C49985 + C49992 + C49992 +
                                       C49843 * (2 * ae * C49978 +
                                                 C49843 *
                                                     (C49961 * C49962 +
                                                      C49847 * bs[8] *
                                                          std::pow(C49841, 8)) *
                                                     C49850)))))) /
        C49739;
    const double C159 = C124 * C138;
    const double C565 = C124 * C562;
    const double C7953 = C7933 * C562;
    const double C17074 = C17054 * C562;
    const double C672 = C124 * C669;
    const double C10805 = C7933 * C669;
    const double C33819 = C17054 * C669;
    const double C24907 = C24905 * C50689;
    const double C25887 = C25880 * C50689;
    const double C24906 = C24904 * C50689;
    const double C26555 = C26548 * C50689;
    d2ee[0] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                ((((C7928 * C125 + C7935 + C7935 + C50841 * C139 +
                    C7930 * C126 + C7936 + C7936 + C50842 * C140 +
                    C7932 * C127 + C7937 + C7937 + C7925 * C141) *
                       C50689 * C50813 +
                   (C8165 + C8166 + C8167) * C50689 * C50727) *
                      C50591 * C50800 -
                  ((C8168 + C8169 + C8170) * C50689 * C50727 +
                   (C8167 + C8166 + C8165) * C50689 * C50813) *
                      C50591 * C50627) *
                     C50843 +
                 (((C8171 + C8172 + C8173) * C50689 * C50813 +
                   (C8174 + C8175 + C8176) * C50689 * C50727) *
                      C50591 * C50627 -
                  ((C8173 + C8172 + C8171) * C50689 * C50727 +
                   (C7932 * C128 + C7944 + C7944 + C7925 * C142 + C7930 * C127 +
                    C7945 + C7945 + C50842 * C141 + C7928 * C126 + C7946 +
                    C7946 + C50841 * C140) *
                       C50689 * C50813) *
                      C50591 * C50800) *
                     C50844 +
                 (((C7928 * C127 + C7947 + C7947 + C50841 * C141 +
                    C7930 * C128 + C7948 + C7948 + C50842 * C142 +
                    C7932 * C129 + C7949 + C7949 + C7925 * C143) *
                       C50689 * C50813 +
                   (C8508 + C8509 + C8510) * C50689 * C50727) *
                      C50591 * C50800 -
                  ((C7932 * C274 + C8499 + C8499 + C7925 * C294 + C7930 * C272 +
                    C8500 + C8500 + C50842 * C292 + C7928 * C271 + C8501 +
                    C8501 + C50841 * C291) *
                       C50689 * C50727 +
                   (C8510 + C8509 + C8508) * C50689 * C50813) *
                      C50591 * C50627) *
                     C560)) /
               (p * q * std::sqrt(p + q));
    d2ee[1] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C7928 * C125 + C7935 + C7935 + C50841 * C139 +
                     C7930 * C126 + C7936 + C7936 + C50842 * C140 +
                     C7932 * C127 + C7937 + C7937 + C7925 * C141) *
                        C50689 * C50813 +
                    (C8165 + C8166 + C8167) * C50689 * C50727) *
                       C50801 -
                   ((C8887 + C8888 + C8889) * C50689 * C50727 +
                    (C7932 * C413 + C8326 + C8326 + C7925 * C433 +
                     C7930 * C414 + C8327 + C8327 + C50842 * C434 +
                     C7928 * C415 + C8328 + C8328 + C50841 * C435) *
                        C50689 * C50813) *
                       C50655) *
                      C50800 +
                  (((C8889 + C8888 + C8887) * C50689 * C50813 +
                    (C7928 * C1466 + C8863 + C8863 + C50841 * C1474 +
                     C7930 * C1465 + C8864 + C8864 + C50842 * C1473 +
                     C7932 * C1464 + C8865 + C8865 + C7925 * C1472) *
                        C50689 * C50727) *
                       C50655 -
                   ((C8168 + C8169 + C8170) * C50689 * C50727 +
                    (C8167 + C8166 + C8165) * C50689 * C50813) *
                       C50801) *
                      C50627) *
                     C263 +
                 ((((C7928 * C414 + C8335 + C8335 + C50841 * C434 +
                     C7930 * C413 + C8336 + C8336 + C50842 * C433 +
                     C7932 * C412 + C8337 + C8337 + C7925 * C432) *
                        C50689 * C50813 +
                    (C8890 + C8891 + C8892) * C50689 * C50727) *
                       C50655 -
                   ((C8173 + C8172 + C8171) * C50689 * C50727 +
                    (C7932 * C128 + C7944 + C7944 + C7925 * C142 +
                     C7930 * C127 + C7945 + C7945 + C50842 * C141 +
                     C7928 * C126 + C7946 + C7946 + C50841 * C140) *
                        C50689 * C50813) *
                       C50801) *
                      C50800 +
                  (((C8171 + C8172 + C8173) * C50689 * C50813 +
                    (C8174 + C8175 + C8176) * C50689 * C50727) *
                       C50801 -
                   ((C7932 * C1463 + C8872 + C8872 + C7925 * C1471 +
                     C7930 * C1464 + C8873 + C8873 + C50842 * C1472 +
                     C7928 * C1465 + C8874 + C8874 + C50841 * C1473) *
                        C50689 * C50727 +
                    (C8892 + C8891 + C8890) * C50689 * C50813) *
                       C50655) *
                      C50627) *
                     C50562)) /
               (p * q * std::sqrt(p + q));
    d2ee[2] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                ((((C7928 * C125 + C7935 + C7935 + C50841 * C139 +
                    C7930 * C126 + C7936 + C7936 + C50842 * C140 +
                    C7932 * C127 + C7937 + C7937 + C7925 * C141) *
                       C50689 * C50813 +
                   (C8165 + C8166 + C8167) * C50689 * C50727) *
                      C50591 * C260 -
                  ((C8168 + C8169 + C8170) * C50689 * C50727 +
                   (C8167 + C8166 + C8165) * C50689 * C50813) *
                      C50591 * C261 +
                  ((C8170 + C8169 + C8168) * C50689 * C50813 +
                   (C7928 * C1005 + C8120 + C8120 + C50841 * C1013 +
                    C7930 * C1004 + C8121 + C8121 + C50842 * C1012 +
                    C7932 * C1003 + C8122 + C8122 + C7925 * C1011) *
                       C50689 * C50727) *
                      C50591 * C262) *
                     C263 +
                 (((C8171 + C8172 + C8173) * C50689 * C50813 +
                   (C8174 + C8175 + C8176) * C50689 * C50727) *
                      C50591 * C261 -
                  ((C8173 + C8172 + C8171) * C50689 * C50727 +
                   (C7932 * C128 + C7944 + C7944 + C7925 * C142 + C7930 * C127 +
                    C7945 + C7945 + C50842 * C141 + C7928 * C126 + C7946 +
                    C7946 + C50841 * C140) *
                       C50689 * C50813) *
                      C50591 * C260 -
                  ((C7932 * C1002 + C8138 + C8138 + C7925 * C1010 +
                    C7930 * C1003 + C8139 + C8139 + C50842 * C1011 +
                    C7928 * C1004 + C8140 + C8140 + C50841 * C1012) *
                       C50689 * C50727 +
                   (C8176 + C8175 + C8174) * C50689 * C50813) *
                      C50591 * C262) *
                     C50562)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                (((C7928 * C125 + C7935 + C7935 + C50841 * C139 + C7930 * C126 +
                   C7936 + C7936 + C50842 * C140 + C7932 * C127 + C7937 +
                   C7937 + C7925 * C141) *
                      C50689 * C50813 +
                  (C7928 * C268 + C7938 + C7938 + C50841 * C288 + C7930 * C267 +
                   C7939 + C7939 + C50842 * C287 + C7932 * C266 + C7940 +
                   C7940 + C7925 * C286) *
                      C50689 * C50727) *
                     C50591 * C50575 * C113 -
                 ((C7932 * C265 + C7941 + C7941 + C7925 * C285 + C7930 * C266 +
                   C7942 + C7942 + C50842 * C286 + C7928 * C267 + C7943 +
                   C7943 + C50841 * C287) *
                      C50689 * C50727 +
                  (C7932 * C128 + C7944 + C7944 + C7925 * C142 + C7930 * C127 +
                   C7945 + C7945 + C50842 * C141 + C7928 * C126 + C7946 +
                   C7946 + C50841 * C140) *
                      C50689 * C50813) *
                     C50591 * C50575 * C114 +
                 ((C7928 * C127 + C7947 + C7947 + C50841 * C141 + C7930 * C128 +
                   C7948 + C7948 + C50842 * C142 + C7932 * C129 + C7949 +
                   C7949 + C7925 * C143) *
                      C50689 * C50813 +
                  (C7928 * C266 + C7950 + C7950 + C50841 * C286 + C7930 * C265 +
                   C7951 + C7951 + C50842 * C285 + C7932 * C273 + C7952 +
                   C7952 + C7925 * C293) *
                      C50689 * C50727) *
                     C50591 * C50575 * C115 -
                 ((C7932 * C561 + C7953 + C7953 + C7925 * C563 + C7930 * C273 +
                   C7954 + C7954 + C50842 * C293 + C7928 * C265 + C7955 +
                   C7955 + C50841 * C285) *
                      C50689 * C50727 +
                  (C7932 * C130 + C7956 + C7956 + C7925 * C144 + C7930 * C129 +
                   C7957 + C7957 + C50842 * C143 + C7928 * C128 + C7958 +
                   C7958 + C50841 * C142) *
                      C50689 * C50813) *
                     C50591 * C50575 * C116)) /
                   (p * q * std::sqrt(p + q)) +
               (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                ((((C7928 * C125 + C7935 + C7935 + C50841 * C139 +
                    C7930 * C126 + C7936 + C7936 + C50842 * C140 +
                    C7932 * C127 + C7937 + C7937 + C7925 * C141) *
                       C50689 * C50813 +
                   (C8165 + C8166 + C8167) * C50689 * C50727) *
                      C409 -
                  ((C7932 * C807 + C8323 + C8323 + C7925 * C817 + C7930 * C806 +
                    C8324 + C8324 + C50842 * C816 + C7928 * C805 + C8325 +
                    C8325 + C50841 * C815) *
                       C50689 * C50727 +
                   (C7932 * C413 + C8326 + C8326 + C7925 * C433 + C7930 * C414 +
                    C8327 + C8327 + C50842 * C434 + C7928 * C415 + C8328 +
                    C8328 + C50841 * C435) *
                       C50689 * C50813) *
                      C410 +
                  ((C7928 * C416 + C8329 + C8329 + C50841 * C436 +
                    C7930 * C417 + C8330 + C8330 + C50842 * C437 +
                    C7932 * C418 + C8331 + C8331 + C7925 * C438) *
                       C50689 * C50813 +
                   (C7928 * C1119 + C8332 + C8332 + C50841 * C1127 +
                    C7930 * C1118 + C8333 + C8333 + C50842 * C1126 +
                    C7932 * C1117 + C8334 + C8334 + C7925 * C1125) *
                       C50689 * C50727) *
                      C411) *
                     C50575 * C263 +
                 (((C7928 * C414 + C8335 + C8335 + C50841 * C434 +
                    C7930 * C413 + C8336 + C8336 + C50842 * C433 +
                    C7932 * C412 + C8337 + C8337 + C7925 * C432) *
                       C50689 * C50813 +
                   (C7928 * C806 + C8338 + C8338 + C50841 * C816 +
                    C7930 * C807 + C8339 + C8339 + C50842 * C817 +
                    C7932 * C808 + C8340 + C8340 + C7925 * C818) *
                       C50689 * C50727) *
                      C410 -
                  ((C8173 + C8172 + C8171) * C50689 * C50727 +
                   (C7932 * C128 + C7944 + C7944 + C7925 * C142 + C7930 * C127 +
                    C7945 + C7945 + C50842 * C141 + C7928 * C126 + C7946 +
                    C7946 + C50841 * C140) *
                       C50689 * C50813) *
                      C409 -
                  ((C7932 * C1116 + C8341 + C8341 + C7925 * C1124 +
                    C7930 * C1117 + C8342 + C8342 + C50842 * C1125 +
                    C7928 * C1118 + C8343 + C8343 + C50841 * C1126) *
                       C50689 * C50727 +
                   (C7932 * C419 + C8344 + C8344 + C7925 * C439 + C7930 * C418 +
                    C8345 + C8345 + C50842 * C438 + C7928 * C417 + C8346 +
                    C8346 + C50841 * C437) *
                       C50689 * C50813) *
                      C411) *
                     C50575 * C50562)) /
                   (p * q * std::sqrt(p + q));
    d2ee[3] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                ((((C7928 * C125 + C7935 + C7935 + C50841 * C139 +
                    C7930 * C126 + C7936 + C7936 + C50842 * C140 +
                    C7932 * C127 + C7937 + C7937 + C7925 * C141) *
                       C50689 * C50813 +
                   (C8165 + C8166 + C8167) * C50689 * C50727) *
                      C50801 -
                  ((C7932 * C807 + C8323 + C8323 + C7925 * C817 + C7930 * C806 +
                    C8324 + C8324 + C50842 * C816 + C7928 * C805 + C8325 +
                    C8325 + C50841 * C815) *
                       C50689 * C50727 +
                   (C7932 * C413 + C8326 + C8326 + C7925 * C433 + C7930 * C414 +
                    C8327 + C8327 + C50842 * C434 + C7928 * C415 + C8328 +
                    C8328 + C50841 * C435) *
                       C50689 * C50813) *
                      C50655) *
                     C50575 * C50843 +
                 (((C7928 * C414 + C8335 + C8335 + C50841 * C434 +
                    C7930 * C413 + C8336 + C8336 + C50842 * C433 +
                    C7932 * C412 + C8337 + C8337 + C7925 * C432) *
                       C50689 * C50813 +
                   (C7928 * C806 + C8338 + C8338 + C50841 * C816 +
                    C7930 * C807 + C8339 + C8339 + C50842 * C817 +
                    C7932 * C808 + C8340 + C8340 + C7925 * C818) *
                       C50689 * C50727) *
                      C50655 -
                  ((C8173 + C8172 + C8171) * C50689 * C50727 +
                   (C7932 * C128 + C7944 + C7944 + C7925 * C142 + C7930 * C127 +
                    C7945 + C7945 + C50842 * C141 + C7928 * C126 + C7946 +
                    C7946 + C50841 * C140) *
                       C50689 * C50813) *
                      C50801) *
                     C50575 * C50844 +
                 (((C7928 * C127 + C7947 + C7947 + C50841 * C141 +
                    C7930 * C128 + C7948 + C7948 + C50842 * C142 +
                    C7932 * C129 + C7949 + C7949 + C7925 * C143) *
                       C50689 * C50813 +
                   (C8508 + C8509 + C8510) * C50689 * C50727) *
                      C50801 -
                  ((C7932 * C809 + C8657 + C8657 + C7925 * C819 + C7930 * C808 +
                    C8658 + C8658 + C50842 * C818 + C7928 * C807 + C8659 +
                    C8659 + C50841 * C817) *
                       C50689 * C50727 +
                   (C7932 * C420 + C8660 + C8660 + C7925 * C440 + C7930 * C412 +
                    C8661 + C8661 + C50842 * C432 + C7928 * C413 + C8662 +
                    C8662 + C50841 * C433) *
                       C50689 * C50813) *
                      C50655) *
                     C50575 * C560)) /
               (p * q * std::sqrt(p + q));
    d2ee[4] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                (((C7928 * C125 + C7935 + C7935 + C50841 * C139 + C7930 * C126 +
                   C7936 + C7936 + C50842 * C140 + C7932 * C127 + C7937 +
                   C7937 + C7925 * C141) *
                      C50689 * C50813 +
                  (C7928 * C268 + C7938 + C7938 + C50841 * C288 + C7930 * C267 +
                   C7939 + C7939 + C50842 * C287 + C7932 * C266 + C7940 +
                   C7940 + C7925 * C286) *
                      C50689 * C50727) *
                     C50591 * C50575 * C113 -
                 ((C7932 * C265 + C7941 + C7941 + C7925 * C285 + C7930 * C266 +
                   C7942 + C7942 + C50842 * C286 + C7928 * C267 + C7943 +
                   C7943 + C50841 * C287) *
                      C50689 * C50727 +
                  (C7932 * C128 + C7944 + C7944 + C7925 * C142 + C7930 * C127 +
                   C7945 + C7945 + C50842 * C141 + C7928 * C126 + C7946 +
                   C7946 + C50841 * C140) *
                      C50689 * C50813) *
                     C50591 * C50575 * C114 +
                 ((C7928 * C127 + C7947 + C7947 + C50841 * C141 + C7930 * C128 +
                   C7948 + C7948 + C50842 * C142 + C7932 * C129 + C7949 +
                   C7949 + C7925 * C143) *
                      C50689 * C50813 +
                  (C7928 * C266 + C7950 + C7950 + C50841 * C286 + C7930 * C265 +
                   C7951 + C7951 + C50842 * C285 + C7932 * C273 + C7952 +
                   C7952 + C7925 * C293) *
                      C50689 * C50727) *
                     C50591 * C50575 * C115 -
                 ((C7932 * C561 + C7953 + C7953 + C7925 * C563 + C7930 * C273 +
                   C7954 + C7954 + C50842 * C293 + C7928 * C265 + C7955 +
                   C7955 + C50841 * C285) *
                      C50689 * C50727 +
                  (C7932 * C130 + C7956 + C7956 + C7925 * C144 + C7930 * C129 +
                   C7957 + C7957 + C50842 * C143 + C7928 * C128 + C7958 +
                   C7958 + C50841 * C142) *
                      C50689 * C50813) *
                     C50591 * C50575 * C116)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                ((((C7928 * C125 + C7935 + C7935 + C50841 * C139 +
                    C7930 * C126 + C7936 + C7936 + C50842 * C140 +
                    C7932 * C127 + C7937 + C7937 + C7925 * C141) *
                       C50689 * C50813 +
                   (C8165 + C8166 + C8167) * C50689 * C50727) *
                      C50591 * C260 -
                  ((C8168 + C8169 + C8170) * C50689 * C50727 +
                   (C8167 + C8166 + C8165) * C50689 * C50813) *
                      C50591 * C261 +
                  ((C8170 + C8169 + C8168) * C50689 * C50813 +
                   (C7928 * C1005 + C8120 + C8120 + C50841 * C1013 +
                    C7930 * C1004 + C8121 + C8121 + C50842 * C1012 +
                    C7932 * C1003 + C8122 + C8122 + C7925 * C1011) *
                       C50689 * C50727) *
                      C50591 * C262) *
                     C263 +
                 (((C8171 + C8172 + C8173) * C50689 * C50813 +
                   (C8174 + C8175 + C8176) * C50689 * C50727) *
                      C50591 * C261 -
                  ((C8173 + C8172 + C8171) * C50689 * C50727 +
                   (C7932 * C128 + C7944 + C7944 + C7925 * C142 + C7930 * C127 +
                    C7945 + C7945 + C50842 * C141 + C7928 * C126 + C7946 +
                    C7946 + C50841 * C140) *
                       C50689 * C50813) *
                      C50591 * C260 -
                  ((C7932 * C1002 + C8138 + C8138 + C7925 * C1010 +
                    C7930 * C1003 + C8139 + C8139 + C50842 * C1011 +
                    C7928 * C1004 + C8140 + C8140 + C50841 * C1012) *
                       C50689 * C50727 +
                   (C8176 + C8175 + C8174) * C50689 * C50813) *
                      C50591 * C262) *
                     C50562)) /
                   (p * q * std::sqrt(p + q));
    d2ee[5] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                ((((C7928 * C125 + C7935 + C7935 + C50841 * C139 +
                    C7930 * C126 + C7936 + C7936 + C50842 * C140 +
                    C7932 * C127 + C7937 + C7937 + C7925 * C141) *
                       C50689 * C50813 +
                   (C8165 + C8166 + C8167) * C50689 * C50727) *
                      C50591 * C50845 -
                  ((C8168 + C8169 + C8170) * C50689 * C50727 +
                   (C8167 + C8166 + C8165) * C50689 * C50813) *
                      C50591 * C50846 +
                  ((C8170 + C8169 + C8168) * C50689 * C50813 +
                   (C9152 + C9153 + C9154) * C50689 * C50727) *
                      C50591 * C1232) *
                     C50792 +
                 (((C8171 + C8172 + C8173) * C50689 * C50813 +
                   (C8174 + C8175 + C8176) * C50689 * C50727) *
                      C50591 * C50846 -
                  ((C8173 + C8172 + C8171) * C50689 * C50727 +
                   (C7932 * C128 + C7944 + C7944 + C7925 * C142 + C7930 * C127 +
                    C7945 + C7945 + C50842 * C141 + C7928 * C126 + C7946 +
                    C7946 + C50841 * C140) *
                       C50689 * C50813) *
                      C50591 * C50845 -
                  ((C7932 * C1002 + C8138 + C8138 + C7925 * C1010 +
                    C7930 * C1003 + C8139 + C8139 + C50842 * C1011 +
                    C7928 * C1004 + C8140 + C8140 + C50841 * C1012) *
                       C50689 * C50727 +
                   (C8176 + C8175 + C8174) * C50689 * C50813) *
                      C50591 * C1232) *
                     C50562)) /
               (p * q * std::sqrt(p + q));
    d2ee[6] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                ((((C7928 * C125 + C7935 + C7935 + C50841 * C139 +
                    C7930 * C126 + C7936 + C7936 + C50842 * C140 +
                    C7932 * C127 + C7937 + C7937 + C7925 * C141) *
                       C50689 * C50813 +
                   (C8165 + C8166 + C8167) * C50689 * C50727) *
                      C50801 -
                  ((C8887 + C8888 + C8889) * C50689 * C50727 +
                   (C7932 * C413 + C8326 + C8326 + C7925 * C433 + C7930 * C414 +
                    C8327 + C8327 + C50842 * C434 + C7928 * C415 + C8328 +
                    C8328 + C50841 * C435) *
                       C50689 * C50813) *
                      C50655) *
                     C50845 +
                 (((C8889 + C8888 + C8887) * C50689 * C50813 +
                   (C9820 + C9821 + C9822) * C50689 * C50727) *
                      C50655 -
                  ((C8168 + C8169 + C8170) * C50689 * C50727 +
                   (C8167 + C8166 + C8165) * C50689 * C50813) *
                      C50801) *
                     C50846 +
                 (((C8170 + C8169 + C8168) * C50689 * C50813 +
                   (C9152 + C9153 + C9154) * C50689 * C50727) *
                      C50801 -
                  ((C7932 * C3145 + C9811 + C9811 + C7925 * C3151 +
                    C7930 * C3144 + C9812 + C9812 + C50842 * C3150 +
                    C7928 * C3143 + C9813 + C9813 + C50841 * C3149) *
                       C50689 * C50727 +
                   (C9822 + C9821 + C9820) * C50689 * C50813) *
                      C50655) *
                     C1232) *
                C50556) /
               (p * q * std::sqrt(p + q));
    d2ee[7] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                (((C7928 * C125 + C7935 + C7935 + C50841 * C139 + C7930 * C126 +
                   C7936 + C7936 + C50842 * C140 + C7932 * C127 + C7937 +
                   C7937 + C7925 * C141) *
                      C50689 * C50813 +
                  (C8165 + C8166 + C8167) * C50689 * C50727) *
                     C50591 * C997 -
                 ((C8168 + C8169 + C8170) * C50689 * C50727 +
                  (C8167 + C8166 + C8165) * C50689 * C50813) *
                     C50591 * C998 +
                 ((C8170 + C8169 + C8168) * C50689 * C50813 +
                  (C9152 + C9153 + C9154) * C50689 * C50727) *
                     C50591 * C999 -
                 ((C7932 * C2371 + C9143 + C9143 + C7925 * C2377 +
                   C7930 * C2370 + C9144 + C9144 + C50842 * C2376 +
                   C7928 * C2369 + C9145 + C9145 + C50841 * C2375) *
                      C50689 * C50727 +
                  (C9154 + C9153 + C9152) * C50689 * C50813) *
                     C50591 * C1000) *
                C50556) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                ((((C7928 * C125 + C7935 + C7935 + C50841 * C139 +
                    C7930 * C126 + C7936 + C7936 + C50842 * C140 +
                    C7932 * C127 + C7937 + C7937 + C7925 * C141) *
                       C50689 * C50813 +
                   (C8165 + C8166 + C8167) * C50689 * C50727) *
                      C50591 * C926 -
                  ((C8168 + C8169 + C8170) * C50689 * C50727 +
                   (C8167 + C8166 + C8165) * C50689 * C50813) *
                      C50591 * C50627) *
                     C928 +
                 (((C8171 + C8172 + C8173) * C50689 * C50813 +
                   (C8174 + C8175 + C8176) * C50689 * C50727) *
                      C50591 * C50627 -
                  ((C8173 + C8172 + C8171) * C50689 * C50727 +
                   (C7932 * C128 + C7944 + C7944 + C7925 * C142 + C7930 * C127 +
                    C7945 + C7945 + C50842 * C141 + C7928 * C126 + C7946 +
                    C7946 + C50841 * C140) *
                       C50689 * C50813) *
                      C50591 * C926) *
                     C929 +
                 (((C7928 * C127 + C7947 + C7947 + C50841 * C141 +
                    C7930 * C128 + C7948 + C7948 + C50842 * C142 +
                    C7932 * C129 + C7949 + C7949 + C7925 * C143) *
                       C50689 * C50813 +
                   (C8508 + C8509 + C8510) * C50689 * C50727) *
                      C50591 * C926 -
                  ((C7932 * C274 + C8499 + C8499 + C7925 * C294 + C7930 * C272 +
                    C8500 + C8500 + C50842 * C292 + C7928 * C271 + C8501 +
                    C8501 + C50841 * C291) *
                       C50689 * C50727 +
                   (C8510 + C8509 + C8508) * C50689 * C50813) *
                      C50591 * C50627) *
                     C930)) /
                   (p * q * std::sqrt(p + q)) +
               (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                ((((C7928 * C125 + C7935 + C7935 + C50841 * C139 +
                    C7930 * C126 + C7936 + C7936 + C50842 * C140 +
                    C7932 * C127 + C7937 + C7937 + C7925 * C141) *
                       C50689 * C50813 +
                   (C8165 + C8166 + C8167) * C50689 * C50727) *
                      C409 -
                  ((C8887 + C8888 + C8889) * C50689 * C50727 +
                   (C7932 * C413 + C8326 + C8326 + C7925 * C433 + C7930 * C414 +
                    C8327 + C8327 + C50842 * C434 + C7928 * C415 + C8328 +
                    C8328 + C50841 * C435) *
                       C50689 * C50813) *
                      C410 +
                  ((C7928 * C416 + C8329 + C8329 + C50841 * C436 +
                    C7930 * C417 + C8330 + C8330 + C50842 * C437 +
                    C7932 * C418 + C8331 + C8331 + C7925 * C438) *
                       C50689 * C50813 +
                   (C9316 + C9317 + C9318) * C50689 * C50727) *
                      C411) *
                     C926 +
                 (((C8889 + C8888 + C8887) * C50689 * C50813 +
                   (C7928 * C1466 + C8863 + C8863 + C50841 * C1474 +
                    C7930 * C1465 + C8864 + C8864 + C50842 * C1473 +
                    C7932 * C1464 + C8865 + C8865 + C7925 * C1472) *
                       C50689 * C50727) *
                      C410 -
                  ((C8168 + C8169 + C8170) * C50689 * C50727 +
                   (C8167 + C8166 + C8165) * C50689 * C50813) *
                      C409 -
                  ((C7932 * C2598 + C9307 + C9307 + C7925 * C2604 +
                    C7930 * C2597 + C9308 + C9308 + C50842 * C2603 +
                    C7928 * C2596 + C9309 + C9309 + C50841 * C2602) *
                       C50689 * C50727 +
                   (C9318 + C9317 + C9316) * C50689 * C50813) *
                      C411) *
                     C50627) *
                C50556) /
                   (p * q * std::sqrt(p + q));
    d2ee[8] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C7928 * C125 + C7935 + C7935 + C50841 * C139 +
                     C7930 * C126 + C7936 + C7936 + C50842 * C140 +
                     C7932 * C127 + C7937 + C7937 + C7925 * C141) *
                        C50689 * C50813 +
                    (C8165 + C8166 + C8167) * C50689 * C50727) *
                       C50801 -
                   ((C8887 + C8888 + C8889) * C50689 * C50727 +
                    (C7932 * C413 + C8326 + C8326 + C7925 * C433 +
                     C7930 * C414 + C8327 + C8327 + C50842 * C434 +
                     C7928 * C415 + C8328 + C8328 + C50841 * C435) *
                        C50689 * C50813) *
                       C50655) *
                      C926 +
                  (((C8889 + C8888 + C8887) * C50689 * C50813 +
                    (C7928 * C1466 + C8863 + C8863 + C50841 * C1474 +
                     C7930 * C1465 + C8864 + C8864 + C50842 * C1473 +
                     C7932 * C1464 + C8865 + C8865 + C7925 * C1472) *
                        C50689 * C50727) *
                       C50655 -
                   ((C8168 + C8169 + C8170) * C50689 * C50727 +
                    (C8167 + C8166 + C8165) * C50689 * C50813) *
                       C50801) *
                      C50627) *
                     C50792 +
                 ((((C7928 * C414 + C8335 + C8335 + C50841 * C434 +
                     C7930 * C413 + C8336 + C8336 + C50842 * C433 +
                     C7932 * C412 + C8337 + C8337 + C7925 * C432) *
                        C50689 * C50813 +
                    (C8890 + C8891 + C8892) * C50689 * C50727) *
                       C50655 -
                   ((C8173 + C8172 + C8171) * C50689 * C50727 +
                    (C7932 * C128 + C7944 + C7944 + C7925 * C142 +
                     C7930 * C127 + C7945 + C7945 + C50842 * C141 +
                     C7928 * C126 + C7946 + C7946 + C50841 * C140) *
                        C50689 * C50813) *
                       C50801) *
                      C926 +
                  (((C8171 + C8172 + C8173) * C50689 * C50813 +
                    (C8174 + C8175 + C8176) * C50689 * C50727) *
                       C50801 -
                   ((C7932 * C1463 + C8872 + C8872 + C7925 * C1471 +
                     C7930 * C1464 + C8873 + C8873 + C50842 * C1472 +
                     C7928 * C1465 + C8874 + C8874 + C50841 * C1473) *
                        C50689 * C50727 +
                    (C8892 + C8891 + C8890) * C50689 * C50813) *
                       C50655) *
                      C50627) *
                     C50562)) /
               (p * q * std::sqrt(p + q));
    d2ee[9] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                ((((C7928 * C125 + C7935 + C7935 + C50841 * C139 +
                    C7930 * C126 + C7936 + C7936 + C50842 * C140 +
                    C7932 * C127 + C7937 + C7937 + C7925 * C141) *
                       C50689 * C50813 +
                   (C8165 + C8166 + C8167) * C50689 * C50727) *
                      C50591 * C926 -
                  ((C8168 + C8169 + C8170) * C50689 * C50727 +
                   (C8167 + C8166 + C8165) * C50689 * C50813) *
                      C50591 * C50627) *
                     C928 +
                 (((C8171 + C8172 + C8173) * C50689 * C50813 +
                   (C8174 + C8175 + C8176) * C50689 * C50727) *
                      C50591 * C50627 -
                  ((C8173 + C8172 + C8171) * C50689 * C50727 +
                   (C7932 * C128 + C7944 + C7944 + C7925 * C142 + C7930 * C127 +
                    C7945 + C7945 + C50842 * C141 + C7928 * C126 + C7946 +
                    C7946 + C50841 * C140) *
                       C50689 * C50813) *
                      C50591 * C926) *
                     C929 +
                 (((C7928 * C127 + C7947 + C7947 + C50841 * C141 +
                    C7930 * C128 + C7948 + C7948 + C50842 * C142 +
                    C7932 * C129 + C7949 + C7949 + C7925 * C143) *
                       C50689 * C50813 +
                   (C8508 + C8509 + C8510) * C50689 * C50727) *
                      C50591 * C926 -
                  ((C7932 * C274 + C8499 + C8499 + C7925 * C294 + C7930 * C272 +
                    C8500 + C8500 + C50842 * C292 + C7928 * C271 + C8501 +
                    C8501 + C50841 * C291) *
                       C50689 * C50727 +
                   (C8510 + C8509 + C8508) * C50689 * C50813) *
                      C50591 * C50627) *
                     C930)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                (((C7928 * C125 + C7935 + C7935 + C50841 * C139 + C7930 * C126 +
                   C7936 + C7936 + C50842 * C140 + C7932 * C127 + C7937 +
                   C7937 + C7925 * C141) *
                      C50689 * C50813 +
                  (C8165 + C8166 + C8167) * C50689 * C50727) *
                     C50591 * C997 -
                 ((C8168 + C8169 + C8170) * C50689 * C50727 +
                  (C8167 + C8166 + C8165) * C50689 * C50813) *
                     C50591 * C998 +
                 ((C8170 + C8169 + C8168) * C50689 * C50813 +
                  (C9152 + C9153 + C9154) * C50689 * C50727) *
                     C50591 * C999 -
                 ((C7932 * C2371 + C9143 + C9143 + C7925 * C2377 +
                   C7930 * C2370 + C9144 + C9144 + C50842 * C2376 +
                   C7928 * C2369 + C9145 + C9145 + C50841 * C2375) *
                      C50689 * C50727 +
                  (C9154 + C9153 + C9152) * C50689 * C50813) *
                     C50591 * C1000) *
                C50556) /
                   (p * q * std::sqrt(p + q));
    d2ee[10] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C7928 * C125 + C7935 + C7935 + C50841 * C139 +
                      C7930 * C126 + C7936 + C7936 + C50842 * C140 +
                      C7932 * C127 + C7937 + C7937 + C7925 * C141) *
                         C50689 * C50813 +
                     (C8165 + C8166 + C8167) * C50689 * C50727) *
                        C1577 -
                    ((C8887 + C8888 + C8889) * C50689 * C50727 +
                     (C7932 * C413 + C8326 + C8326 + C7925 * C433 +
                      C7930 * C414 + C8327 + C8327 + C50842 * C434 +
                      C7928 * C415 + C8328 + C8328 + C50841 * C435) *
                         C50689 * C50813) *
                        C50655) *
                       C50800 +
                   (((C8889 + C8888 + C8887) * C50689 * C50813 +
                     (C9820 + C9821 + C9822) * C50689 * C50727) *
                        C50655 -
                    ((C8168 + C8169 + C8170) * C50689 * C50727 +
                     (C8167 + C8166 + C8165) * C50689 * C50813) *
                        C1577) *
                       C50627) *
                      C50792 +
                  ((((C7928 * C414 + C8335 + C8335 + C50841 * C434 +
                      C7930 * C413 + C8336 + C8336 + C50842 * C433 +
                      C7932 * C412 + C8337 + C8337 + C7925 * C432) *
                         C50689 * C50813 +
                     (C8890 + C8891 + C8892) * C50689 * C50727) *
                        C50655 -
                    ((C8173 + C8172 + C8171) * C50689 * C50727 +
                     (C7932 * C128 + C7944 + C7944 + C7925 * C142 +
                      C7930 * C127 + C7945 + C7945 + C50842 * C141 +
                      C7928 * C126 + C7946 + C7946 + C50841 * C140) *
                         C50689 * C50813) *
                        C1577) *
                       C50800 +
                   (((C8171 + C8172 + C8173) * C50689 * C50813 +
                     (C8174 + C8175 + C8176) * C50689 * C50727) *
                        C1577 -
                    ((C7932 * C1463 + C8872 + C8872 + C7925 * C1471 +
                      C7930 * C1464 + C8873 + C8873 + C50842 * C1472 +
                      C7928 * C1465 + C8874 + C8874 + C50841 * C1473) *
                         C50689 * C50727 +
                     (C8892 + C8891 + C8890) * C50689 * C50813) *
                        C50655) *
                       C50627) *
                      C50562)) /
                (p * q * std::sqrt(p + q));
    d2ee[11] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C7928 * C125 + C7935 + C7935 + C50841 * C139 +
                     C7930 * C126 + C7936 + C7936 + C50842 * C140 +
                     C7932 * C127 + C7937 + C7937 + C7925 * C141) *
                        C50689 * C50813 +
                    (C8165 + C8166 + C8167) * C50689 * C50727) *
                       C50847 -
                   ((C8887 + C8888 + C8889) * C50689 * C50727 +
                    (C7932 * C413 + C8326 + C8326 + C7925 * C433 +
                     C7930 * C414 + C8327 + C8327 + C50842 * C434 +
                     C7928 * C415 + C8328 + C8328 + C50841 * C435) *
                        C50689 * C50813) *
                       C50848 +
                   ((C7928 * C416 + C8329 + C8329 + C50841 * C436 +
                     C7930 * C417 + C8330 + C8330 + C50842 * C437 +
                     C7932 * C418 + C8331 + C8331 + C7925 * C438) *
                        C50689 * C50813 +
                    (C9316 + C9317 + C9318) * C50689 * C50727) *
                       C1993) *
                      C50800 +
                  (((C8889 + C8888 + C8887) * C50689 * C50813 +
                    (C9820 + C9821 + C9822) * C50689 * C50727) *
                       C50848 -
                   ((C8168 + C8169 + C8170) * C50689 * C50727 +
                    (C8167 + C8166 + C8165) * C50689 * C50813) *
                       C50847 -
                   ((C7932 * C2598 + C9307 + C9307 + C7925 * C2604 +
                     C7930 * C2597 + C9308 + C9308 + C50842 * C2603 +
                     C7928 * C2596 + C9309 + C9309 + C50841 * C2602) *
                        C50689 * C50727 +
                    (C9318 + C9317 + C9316) * C50689 * C50813) *
                       C1993) *
                      C50627) *
                 C50556) /
                (p * q * std::sqrt(p + q));
    d2ee[12] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C7928 * C125 + C7935 + C7935 + C50841 * C139 +
                     C7930 * C126 + C7936 + C7936 + C50842 * C140 +
                     C7932 * C127 + C7937 + C7937 + C7925 * C141) *
                        C50689 * C50813 +
                    (C8165 + C8166 + C8167) * C50689 * C50727) *
                       C1577 -
                   ((C8887 + C8888 + C8889) * C50689 * C50727 +
                    (C7932 * C413 + C8326 + C8326 + C7925 * C433 +
                     C7930 * C414 + C8327 + C8327 + C50842 * C434 +
                     C7928 * C415 + C8328 + C8328 + C50841 * C435) *
                        C50689 * C50813) *
                       C50655) *
                      C260 +
                  (((C8889 + C8888 + C8887) * C50689 * C50813 +
                    (C9820 + C9821 + C9822) * C50689 * C50727) *
                       C50655 -
                   ((C8168 + C8169 + C8170) * C50689 * C50727 +
                    (C8167 + C8166 + C8165) * C50689 * C50813) *
                       C1577) *
                      C261 +
                  (((C8170 + C8169 + C8168) * C50689 * C50813 +
                    (C9152 + C9153 + C9154) * C50689 * C50727) *
                       C1577 -
                   ((C7932 * C3145 + C9811 + C9811 + C7925 * C3151 +
                     C7930 * C3144 + C9812 + C9812 + C50842 * C3150 +
                     C7928 * C3143 + C9813 + C9813 + C50841 * C3149) *
                        C50689 * C50727 +
                    (C9822 + C9821 + C9820) * C50689 * C50813) *
                       C50655) *
                      C262) *
                 C50556) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C7928 * C125 + C7935 + C7935 + C50841 * C139 +
                     C7930 * C126 + C7936 + C7936 + C50842 * C140 +
                     C7932 * C127 + C7937 + C7937 + C7925 * C141) *
                        C50689 * C50813 +
                    (C8165 + C8166 + C8167) * C50689 * C50727) *
                       C1577 -
                   ((C8887 + C8888 + C8889) * C50689 * C50727 +
                    (C7932 * C413 + C8326 + C8326 + C7925 * C433 +
                     C7930 * C414 + C8327 + C8327 + C50842 * C434 +
                     C7928 * C415 + C8328 + C8328 + C50841 * C435) *
                        C50689 * C50813) *
                       C50655) *
                      C50575 * C928 +
                  (((C7928 * C414 + C8335 + C8335 + C50841 * C434 +
                     C7930 * C413 + C8336 + C8336 + C50842 * C433 +
                     C7932 * C412 + C8337 + C8337 + C7925 * C432) *
                        C50689 * C50813 +
                    (C8890 + C8891 + C8892) * C50689 * C50727) *
                       C50655 -
                   ((C8173 + C8172 + C8171) * C50689 * C50727 +
                    (C7932 * C128 + C7944 + C7944 + C7925 * C142 +
                     C7930 * C127 + C7945 + C7945 + C50842 * C141 +
                     C7928 * C126 + C7946 + C7946 + C50841 * C140) *
                        C50689 * C50813) *
                       C1577) *
                      C50575 * C929 +
                  (((C7928 * C127 + C7947 + C7947 + C50841 * C141 +
                     C7930 * C128 + C7948 + C7948 + C50842 * C142 +
                     C7932 * C129 + C7949 + C7949 + C7925 * C143) *
                        C50689 * C50813 +
                    (C8508 + C8509 + C8510) * C50689 * C50727) *
                       C1577 -
                   ((C7932 * C809 + C8657 + C8657 + C7925 * C819 +
                     C7930 * C808 + C8658 + C8658 + C50842 * C818 +
                     C7928 * C807 + C8659 + C8659 + C50841 * C817) *
                        C50689 * C50727 +
                    (C7932 * C420 + C8660 + C8660 + C7925 * C440 +
                     C7930 * C412 + C8661 + C8661 + C50842 * C432 +
                     C7928 * C413 + C8662 + C8662 + C50841 * C433) *
                        C50689 * C50813) *
                       C50655) *
                      C50575 * C930)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((C7928 * C125 + C7935 + C7935 + C50841 * C139 +
                    C7930 * C126 + C7936 + C7936 + C50842 * C140 +
                    C7932 * C127 + C7937 + C7937 + C7925 * C141) *
                       C50689 * C50813 +
                   (C8165 + C8166 + C8167) * C50689 * C50727) *
                      C1743 -
                  ((C8887 + C8888 + C8889) * C50689 * C50727 +
                   (C7932 * C413 + C8326 + C8326 + C7925 * C433 + C7930 * C414 +
                    C8327 + C8327 + C50842 * C434 + C7928 * C415 + C8328 +
                    C8328 + C50841 * C435) *
                       C50689 * C50813) *
                      C1744 +
                  ((C7928 * C416 + C8329 + C8329 + C50841 * C436 +
                    C7930 * C417 + C8330 + C8330 + C50842 * C437 +
                    C7932 * C418 + C8331 + C8331 + C7925 * C438) *
                       C50689 * C50813 +
                   (C9316 + C9317 + C9318) * C50689 * C50727) *
                      C1745 -
                  ((C7932 * C6020 + C10213 + C10213 + C7925 * C6022 +
                    C7930 * C4532 + C10214 + C10214 + C50842 * C4540 +
                    C7928 * C4533 + C10215 + C10215 + C50841 * C4541) *
                       C50689 * C50727 +
                   (C7932 * C1748 + C10216 + C10216 + C7925 * C1756 +
                    C7930 * C1749 + C10217 + C10217 + C50842 * C1757 +
                    C7928 * C1750 + C10218 + C10218 + C50841 * C1758) *
                       C50689 * C50813) *
                      C1746) *
                 C50575 * C50556) /
                    (p * q * std::sqrt(p + q));
    d2ee[13] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C7928 * C125 + C7935 + C7935 + C50841 * C139 +
                     C7930 * C126 + C7936 + C7936 + C50842 * C140 +
                     C7932 * C127 + C7937 + C7937 + C7925 * C141) *
                        C50689 * C50813 +
                    (C8165 + C8166 + C8167) * C50689 * C50727) *
                       C50847 -
                   ((C8887 + C8888 + C8889) * C50689 * C50727 +
                    (C7932 * C413 + C8326 + C8326 + C7925 * C433 +
                     C7930 * C414 + C8327 + C8327 + C50842 * C434 +
                     C7928 * C415 + C8328 + C8328 + C50841 * C435) *
                        C50689 * C50813) *
                       C50848 +
                   ((C7928 * C416 + C8329 + C8329 + C50841 * C436 +
                     C7930 * C417 + C8330 + C8330 + C50842 * C437 +
                     C7932 * C418 + C8331 + C8331 + C7925 * C438) *
                        C50689 * C50813 +
                    (C9316 + C9317 + C9318) * C50689 * C50727) *
                       C1993) *
                      C50575 * C50792 +
                  (((C7928 * C414 + C8335 + C8335 + C50841 * C434 +
                     C7930 * C413 + C8336 + C8336 + C50842 * C433 +
                     C7932 * C412 + C8337 + C8337 + C7925 * C432) *
                        C50689 * C50813 +
                    (C8890 + C8891 + C8892) * C50689 * C50727) *
                       C50848 -
                   ((C8173 + C8172 + C8171) * C50689 * C50727 +
                    (C7932 * C128 + C7944 + C7944 + C7925 * C142 +
                     C7930 * C127 + C7945 + C7945 + C50842 * C141 +
                     C7928 * C126 + C7946 + C7946 + C50841 * C140) *
                        C50689 * C50813) *
                       C50847 -
                   ((C7932 * C1116 + C8341 + C8341 + C7925 * C1124 +
                     C7930 * C1117 + C8342 + C8342 + C50842 * C1125 +
                     C7928 * C1118 + C8343 + C8343 + C50841 * C1126) *
                        C50689 * C50727 +
                    (C7932 * C419 + C8344 + C8344 + C7925 * C439 +
                     C7930 * C418 + C8345 + C8345 + C50842 * C438 +
                     C7928 * C417 + C8346 + C8346 + C50841 * C437) *
                        C50689 * C50813) *
                       C1993) *
                      C50575 * C50562)) /
                (p * q * std::sqrt(p + q));
    d2ee[14] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C7928 * C125 + C7935 + C7935 + C50841 * C139 +
                     C7930 * C126 + C7936 + C7936 + C50842 * C140 +
                     C7932 * C127 + C7937 + C7937 + C7925 * C141) *
                        C50689 * C50813 +
                    (C8165 + C8166 + C8167) * C50689 * C50727) *
                       C1577 -
                   ((C8887 + C8888 + C8889) * C50689 * C50727 +
                    (C7932 * C413 + C8326 + C8326 + C7925 * C433 +
                     C7930 * C414 + C8327 + C8327 + C50842 * C434 +
                     C7928 * C415 + C8328 + C8328 + C50841 * C435) *
                        C50689 * C50813) *
                       C50655) *
                      C50575 * C928 +
                  (((C7928 * C414 + C8335 + C8335 + C50841 * C434 +
                     C7930 * C413 + C8336 + C8336 + C50842 * C433 +
                     C7932 * C412 + C8337 + C8337 + C7925 * C432) *
                        C50689 * C50813 +
                    (C8890 + C8891 + C8892) * C50689 * C50727) *
                       C50655 -
                   ((C8173 + C8172 + C8171) * C50689 * C50727 +
                    (C7932 * C128 + C7944 + C7944 + C7925 * C142 +
                     C7930 * C127 + C7945 + C7945 + C50842 * C141 +
                     C7928 * C126 + C7946 + C7946 + C50841 * C140) *
                        C50689 * C50813) *
                       C1577) *
                      C50575 * C929 +
                  (((C7928 * C127 + C7947 + C7947 + C50841 * C141 +
                     C7930 * C128 + C7948 + C7948 + C50842 * C142 +
                     C7932 * C129 + C7949 + C7949 + C7925 * C143) *
                        C50689 * C50813 +
                    (C8508 + C8509 + C8510) * C50689 * C50727) *
                       C1577 -
                   ((C7932 * C809 + C8657 + C8657 + C7925 * C819 +
                     C7930 * C808 + C8658 + C8658 + C50842 * C818 +
                     C7928 * C807 + C8659 + C8659 + C50841 * C817) *
                        C50689 * C50727 +
                    (C7932 * C420 + C8660 + C8660 + C7925 * C440 +
                     C7930 * C412 + C8661 + C8661 + C50842 * C432 +
                     C7928 * C413 + C8662 + C8662 + C50841 * C433) *
                        C50689 * C50813) *
                       C50655) *
                      C50575 * C930)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C7928 * C125 + C7935 + C7935 + C50841 * C139 +
                     C7930 * C126 + C7936 + C7936 + C50842 * C140 +
                     C7932 * C127 + C7937 + C7937 + C7925 * C141) *
                        C50689 * C50813 +
                    (C8165 + C8166 + C8167) * C50689 * C50727) *
                       C1577 -
                   ((C8887 + C8888 + C8889) * C50689 * C50727 +
                    (C7932 * C413 + C8326 + C8326 + C7925 * C433 +
                     C7930 * C414 + C8327 + C8327 + C50842 * C434 +
                     C7928 * C415 + C8328 + C8328 + C50841 * C435) *
                        C50689 * C50813) *
                       C50655) *
                      C260 +
                  (((C8889 + C8888 + C8887) * C50689 * C50813 +
                    (C9820 + C9821 + C9822) * C50689 * C50727) *
                       C50655 -
                   ((C8168 + C8169 + C8170) * C50689 * C50727 +
                    (C8167 + C8166 + C8165) * C50689 * C50813) *
                       C1577) *
                      C261 +
                  (((C8170 + C8169 + C8168) * C50689 * C50813 +
                    (C9152 + C9153 + C9154) * C50689 * C50727) *
                       C1577 -
                   ((C7932 * C3145 + C9811 + C9811 + C7925 * C3151 +
                     C7930 * C3144 + C9812 + C9812 + C50842 * C3150 +
                     C7928 * C3143 + C9813 + C9813 + C50841 * C3149) *
                        C50689 * C50727 +
                    (C9822 + C9821 + C9820) * C50689 * C50813) *
                       C50655) *
                      C262) *
                 C50556) /
                    (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
              C2201 + C2201 + C50531 * C140) *
                 C50814 +
             (C5497 + C5498) * C50753) *
                C50813 +
            ((C2435 + C2436) * C50814 + (C3192 + C3191) * C50753) * C50727) *
               C50591 * C50800 -
           ((C4127 * C50753 + (C2438 + C2437) * C50814) * C50727 +
            ((C3191 + C3192) * C50753 + (C2436 + C2435) * C50814) * C50813) *
               C50591 * C50627) *
              C50843 +
          ((((C2441 + C2442) * C50814 + (C3193 + C3194) * C50753) * C50813 +
            ((C2443 + C2444) * C50814 + (C3195 + C3196) * C50753) * C50727) *
               C50591 * C50627 -
           (((C3194 + C3193) * C50753 + (C2442 + C2441) * C50814) * C50727 +
            ((C5504 + C5503) * C50753 +
             (C2197 * C127 + C2210 + C2210 + C50531 * C141 + C2195 * C126 +
              C2211 + C2211 + C2190 * C140) *
                 C50814) *
                C50813) *
               C50591 * C50800) *
              C50844 +
          ((((C2195 * C127 + C2212 + C2212 + C2190 * C141 + C2197 * C128 +
              C2213 + C2213 + C50531 * C142) *
                 C50814 +
             (C5823 + C5824) * C50753) *
                C50813 +
            ((C2794 + C2795) * C50814 + (C14159 + C14160) * C50753) * C50727) *
               C50591 * C50800 -
           (((C2197 * C1463 + C2944 + C2944 + C50531 * C1471 + C2195 * C1464 +
              C2945 + C2945 + C2190 * C1472) *
                 C50753 +
             (C2797 + C2796) * C50814) *
                C50727 +
            ((C14160 + C14159) * C50753 + (C2795 + C2794) * C50814) * C50813) *
               C50591 * C50627) *
              C560)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
               C2201 + C2201 + C50531 * C140) *
                  C50814 +
              (C5497 + C5498) * C50753) *
                 C50813 +
             ((C2435 + C2436) * C50814 + C14613 * C50753) * C50727) *
                C50801 -
            ((C6436 * C50753 + C14614 * C50814) * C50727 +
             ((C5500 + C5499) * C50753 + (C5498 + C5497) * C50814) * C50813) *
                C50655) *
               C50800 +
           (((C14613 * C50814 + (C3631 + C3632) * C50753) * C50813 +
             ((C3190 + C3189) * C50814 + (C3633 + C3634) * C50753) * C50727) *
                C50655 -
            ((C4127 * C50753 + (C2438 + C2437) * C50814) * C50727 +
             (C14614 * C50753 + (C2436 + C2435) * C50814) * C50813) *
                C50801) *
               C50627) *
              C263 +
          (((((C5503 + C5504) * C50814 + (C5505 + C5506) * C50753) * C50813 +
             (C14615 * C50814 + (C6034 + C6035) * C50753) * C50727) *
                C50655 -
            ((C14616 * C50753 + (C2442 + C2441) * C50814) * C50727 +
             ((C5504 + C5503) * C50753 +
              (C2197 * C127 + C2210 + C2210 + C50531 * C141 + C2195 * C126 +
               C2211 + C2211 + C2190 * C140) *
                  C50814) *
                 C50813) *
                C50801) *
               C50800 +
           ((((C2441 + C2442) * C50814 + C14615 * C50753) * C50813 +
             ((C2443 + C2444) * C50814 + (C3195 + C3196) * C50753) * C50727) *
                C50801 -
            (((C2197 * C2598 + C2624 + C2624 + C50531 * C2604 + C2195 * C2597 +
               C2625 + C2625 + C2190 * C2603) *
                  C50753 +
              (C3196 + C3195) * C50814) *
                 C50727 +
             ((C6035 + C6034) * C50753 + C14616 * C50814) * C50813) *
                C50655) *
               C50627) *
              C50562)) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
              C2201 + C2201 + C50531 * C140) *
                 C50814 +
             (C5497 + C5498) * C50753) *
                C50813 +
            ((C2435 + C2436) * C50814 + (C3192 + C3191) * C50753) * C50727) *
               C50591 * C260 -
           ((C4127 * C50753 + (C2438 + C2437) * C50814) * C50727 +
            ((C3191 + C3192) * C50753 + (C2436 + C2435) * C50814) * C50813) *
               C50591 * C261 +
           ((C2447 * C50814 + (C3190 + C3189) * C50753) * C50813 +
            ((C2440 + C2439) * C50814 + (C4139 + C4140) * C50753) * C50727) *
               C50591 * C262) *
              C263 +
          ((((C2441 + C2442) * C50814 + (C3193 + C3194) * C50753) * C50813 +
            ((C2443 + C2444) * C50814 + (C3195 + C3196) * C50753) * C50727) *
               C50591 * C261 -
           (((C3194 + C3193) * C50753 + (C2442 + C2441) * C50814) * C50727 +
            ((C5504 + C5503) * C50753 +
             (C2197 * C127 + C2210 + C2210 + C50531 * C141 + C2195 * C126 +
              C2211 + C2211 + C2190 * C140) *
                 C50814) *
                C50813) *
               C50591 * C260 -
           (((C2197 * C3145 + C3171 + C3171 + C50531 * C3151 + C2195 * C3144 +
              C3172 + C3172 + C2190 * C3150) *
                 C50753 +
             (C2446 + C2445) * C50814) *
                C50727 +
            ((C3196 + C3195) * C50753 + C2448 * C50814) * C50813) *
               C50591 * C262) *
              C50562)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
             C2201 + C2201 + C50531 * C140) *
                C50814 +
            (C5497 + C5498) * C50753) *
               C50813 +
           ((C2435 + C2436) * C50814 + (C3192 + C3191) * C50753) * C50727) *
              C50591 * C50575 * C113 -
          (((C3194 + C3193) * C50753 + (C2442 + C2441) * C50814) * C50727 +
           ((C5504 + C5503) * C50753 +
            (C2197 * C127 + C2210 + C2210 + C50531 * C141 + C2195 * C126 +
             C2211 + C2211 + C2190 * C140) *
                C50814) *
               C50813) *
              C50591 * C50575 * C114 +
          (((C2195 * C127 + C2212 + C2212 + C2190 * C141 + C2197 * C128 +
             C2213 + C2213 + C50531 * C142) *
                C50814 +
            (C5823 + C5824) * C50753) *
               C50813 +
           ((C2794 + C2795) * C50814 +
            (C2195 * C807 + C2947 + C2947 + C2190 * C817 + C2197 * C808 +
             C2946 + C2946 + C50531 * C818) *
                C50753) *
               C50727) *
              C50591 * C50575 * C115 -
          (((C2197 * C809 + C13567 + C13567 + C50531 * C819 + C2195 * C808 +
             C13568 + C13568 + C2190 * C818) *
                C50753 +
            (C2197 * C273 + C2220 + C2220 + C50531 * C293 + C2195 * C265 +
             C2221 + C2221 + C2190 * C285) *
                C50814) *
               C50727 +
           ((C2197 * C420 + C5140 + C5140 + C50531 * C440 + C2195 * C412 +
             C5141 + C5141 + C2190 * C432) *
                C50753 +
            (C2197 * C129 + C2222 + C2222 + C50531 * C143 + C2195 * C128 +
             C2223 + C2223 + C2190 * C142) *
                C50814) *
               C50813) *
              C50591 * C50575 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
              C2201 + C2201 + C50531 * C140) *
                 C50814 +
             (C5497 + C5498) * C50753) *
                C50813 +
            ((C2435 + C2436) * C50814 + (C3192 + C3191) * C50753) * C50727) *
               C409 -
           ((C6436 * C50753 + (C3191 + C3192) * C50814) * C50727 +
            ((C5500 + C5499) * C50753 + (C5498 + C5497) * C50814) * C50813) *
               C410 +
           ((C5509 * C50814 + (C5502 + C5501) * C50753) * C50813 +
            ((C3631 + C3632) * C50814 + (C6443 + C6444) * C50753) * C50727) *
               C411) *
              C50575 * C263 +
          ((((C5503 + C5504) * C50814 + (C5505 + C5506) * C50753) * C50813 +
            ((C3193 + C3194) * C50814 + (C6034 + C6035) * C50753) * C50727) *
               C410 -
           (((C3194 + C3193) * C50753 + (C2442 + C2441) * C50814) * C50727 +
            ((C5504 + C5503) * C50753 +
             (C2197 * C127 + C2210 + C2210 + C50531 * C141 + C2195 * C126 +
              C2211 + C2211 + C2190 * C140) *
                 C50814) *
                C50813) *
               C409 -
           (((C2197 * C6020 + C6028 + C6028 + C50531 * C6022 + C2195 * C4532 +
              C6029 + C6029 + C2190 * C4540) *
                 C50753 +
             (C6035 + C6034) * C50814) *
                C50727 +
            ((C5508 + C5507) * C50753 + C5510 * C50814) * C50813) *
               C411) *
              C50575 * C50562)) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
              C2201 + C2201 + C50531 * C140) *
                 C50814 +
             (C5497 + C5498) * C50753) *
                C50813 +
            ((C2435 + C2436) * C50814 + (C3192 + C3191) * C50753) * C50727) *
               C50801 -
           ((C6436 * C50753 + (C3191 + C3192) * C50814) * C50727 +
            ((C5500 + C5499) * C50753 + (C5498 + C5497) * C50814) * C50813) *
               C50655) *
              C50575 * C50843 +
          ((((C5503 + C5504) * C50814 + (C5505 + C5506) * C50753) * C50813 +
            ((C3193 + C3194) * C50814 + (C6034 + C6035) * C50753) * C50727) *
               C50655 -
           (((C3194 + C3193) * C50753 + (C2442 + C2441) * C50814) * C50727 +
            ((C5504 + C5503) * C50753 +
             (C2197 * C127 + C2210 + C2210 + C50531 * C141 + C2195 * C126 +
              C2211 + C2211 + C2190 * C140) *
                 C50814) *
                C50813) *
               C50801) *
              C50575 * C50844 +
          ((((C2195 * C127 + C2212 + C2212 + C2190 * C141 + C2197 * C128 +
              C2213 + C2213 + C50531 * C142) *
                 C50814 +
             (C5823 + C5824) * C50753) *
                C50813 +
            ((C2794 + C2795) * C50814 + (C14159 + C14160) * C50753) * C50727) *
               C50801 -
           (((C2197 * C1116 + C5657 + C5657 + C50531 * C1124 + C2195 * C1117 +
              C5658 + C5658 + C2190 * C1125) *
                 C50753 +
             (C14160 + C14159) * C50814) *
                C50727 +
            ((C5826 + C5825) * C50753 + (C5824 + C5823) * C50814) * C50813) *
               C50655) *
              C50575 * C560)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
             C2201 + C2201 + C50531 * C140) *
                C50814 +
            (C5497 + C5498) * C50753) *
               C50813 +
           ((C2435 + C2436) * C50814 + (C3192 + C3191) * C50753) * C50727) *
              C50591 * C50575 * C113 -
          (((C3194 + C3193) * C50753 + (C2442 + C2441) * C50814) * C50727 +
           ((C5504 + C5503) * C50753 +
            (C2197 * C127 + C2210 + C2210 + C50531 * C141 + C2195 * C126 +
             C2211 + C2211 + C2190 * C140) *
                C50814) *
               C50813) *
              C50591 * C50575 * C114 +
          (((C2195 * C127 + C2212 + C2212 + C2190 * C141 + C2197 * C128 +
             C2213 + C2213 + C50531 * C142) *
                C50814 +
            (C5823 + C5824) * C50753) *
               C50813 +
           ((C2794 + C2795) * C50814 +
            (C2195 * C807 + C2947 + C2947 + C2190 * C817 + C2197 * C808 +
             C2946 + C2946 + C50531 * C818) *
                C50753) *
               C50727) *
              C50591 * C50575 * C115 -
          (((C2197 * C809 + C13567 + C13567 + C50531 * C819 + C2195 * C808 +
             C13568 + C13568 + C2190 * C818) *
                C50753 +
            (C2197 * C273 + C2220 + C2220 + C50531 * C293 + C2195 * C265 +
             C2221 + C2221 + C2190 * C285) *
                C50814) *
               C50727 +
           ((C2197 * C420 + C5140 + C5140 + C50531 * C440 + C2195 * C412 +
             C5141 + C5141 + C2190 * C432) *
                C50753 +
            (C2197 * C129 + C2222 + C2222 + C50531 * C143 + C2195 * C128 +
             C2223 + C2223 + C2190 * C142) *
                C50814) *
               C50813) *
              C50591 * C50575 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
              C2201 + C2201 + C50531 * C140) *
                 C50814 +
             (C5497 + C5498) * C50753) *
                C50813 +
            ((C2435 + C2436) * C50814 + (C3192 + C3191) * C50753) * C50727) *
               C50591 * C260 -
           ((C4127 * C50753 + (C2438 + C2437) * C50814) * C50727 +
            ((C3191 + C3192) * C50753 + (C2436 + C2435) * C50814) * C50813) *
               C50591 * C261 +
           ((C2447 * C50814 + (C3190 + C3189) * C50753) * C50813 +
            ((C2440 + C2439) * C50814 + (C4139 + C4140) * C50753) * C50727) *
               C50591 * C262) *
              C263 +
          ((((C2441 + C2442) * C50814 + (C3193 + C3194) * C50753) * C50813 +
            ((C2443 + C2444) * C50814 + (C3195 + C3196) * C50753) * C50727) *
               C50591 * C261 -
           (((C3194 + C3193) * C50753 + (C2442 + C2441) * C50814) * C50727 +
            ((C5504 + C5503) * C50753 +
             (C2197 * C127 + C2210 + C2210 + C50531 * C141 + C2195 * C126 +
              C2211 + C2211 + C2190 * C140) *
                 C50814) *
                C50813) *
               C50591 * C260 -
           (((C2197 * C3145 + C3171 + C3171 + C50531 * C3151 + C2195 * C3144 +
              C3172 + C3172 + C2190 * C3150) *
                 C50753 +
             (C2446 + C2445) * C50814) *
                C50727 +
            ((C3196 + C3195) * C50753 + C2448 * C50814) * C50813) *
               C50591 * C262) *
              C50562)) /
            (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
              C2201 + C2201 + C50531 * C140) *
                 C50814 +
             (C5497 + C5498) * C50753) *
                C50813 +
            ((C2435 + C2436) * C50814 + C14613 * C50753) * C50727) *
               C50591 * C50845 -
           ((C4127 * C50753 + (C2438 + C2437) * C50814) * C50727 +
            (C14614 * C50753 + (C2436 + C2435) * C50814) * C50813) *
               C50591 * C50846 +
           ((C2447 * C50814 + (C3190 + C3189) * C50753) * C50813 +
            ((C2440 + C2439) * C50814 + (C4139 + C4140) * C50753) * C50727) *
               C50591 * C1232) *
              C50792 +
          ((((C2441 + C2442) * C50814 + C14615 * C50753) * C50813 +
            ((C2443 + C2444) * C50814 + (C3195 + C3196) * C50753) * C50727) *
               C50591 * C50846 -
           ((C14616 * C50753 + (C2442 + C2441) * C50814) * C50727 +
            ((C5504 + C5503) * C50753 +
             (C2197 * C127 + C2210 + C2210 + C50531 * C141 + C2195 * C126 +
              C2211 + C2211 + C2190 * C140) *
                 C50814) *
                C50813) *
               C50591 * C50845 -
           (((C2197 * C3145 + C3171 + C3171 + C50531 * C3151 + C2195 * C3144 +
              C3172 + C3172 + C2190 * C3150) *
                 C50753 +
             (C2446 + C2445) * C50814) *
                C50727 +
            ((C3196 + C3195) * C50753 + C2448 * C50814) * C50813) *
               C50591 * C1232) *
              C50562)) /
        (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
              C2201 + C2201 + C50531 * C140) *
                 C50814 +
             (C5497 + C5498) * C50753) *
                C50813 +
            ((C2435 + C2436) * C50814 + C14613 * C50753) * C50727) *
               C50801 -
           ((C6436 * C50753 + C14614 * C50814) * C50727 +
            ((C5500 + C5499) * C50753 + (C5498 + C5497) * C50814) * C50813) *
               C50655) *
              C50845 +
          (((C14613 * C50814 + C15135 * C50753) * C50813 +
            (C15782 * C50814 + (C3633 + C3634) * C50753) * C50727) *
               C50655 -
           ((C4127 * C50753 + (C2438 + C2437) * C50814) * C50727 +
            (C14614 * C50753 + (C2436 + C2435) * C50814) * C50813) *
               C50801) *
              C50846 +
          (((C2447 * C50814 + C15782 * C50753) * C50813 +
            ((C2440 + C2439) * C50814 + (C4139 + C4140) * C50753) * C50727) *
               C50801 -
           (((C2197 * C3606 + C3621 + C3621 + C50531 * C3610 + C2195 * C3607 +
              C3622 + C3622 + C2190 * C3611) *
                 C50753 +
             (C4140 + C4139) * C50814) *
                C50727 +
            ((C3634 + C3633) * C50753 + C4127 * C50814) * C50813) *
               C50655) *
              C1232) *
         C50556) /
        (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
             C2201 + C2201 + C50531 * C140) *
                C50814 +
            (C5497 + C5498) * C50753) *
               C50813 +
           ((C2435 + C2436) * C50814 + C14613 * C50753) * C50727) *
              C50591 * C997 -
          ((C4127 * C50753 + (C2438 + C2437) * C50814) * C50727 +
           (C14614 * C50753 + (C2436 + C2435) * C50814) * C50813) *
              C50591 * C998 +
          ((C2447 * C50814 + (C3190 + C3189) * C50753) * C50813 +
           ((C2440 + C2439) * C50814 + (C4139 + C4140) * C50753) * C50727) *
              C50591 * C999 -
          (((C2197 * C4120 + C4132 + C4132 + C50531 * C4124 + C2195 * C4121 +
             C4133 + C4133 + C2190 * C4125) *
                C50753 +
            (C3460 + C3459) * C50814) *
               C50727 +
           ((C4140 + C4139) * C50753 + C3447 * C50814) * C50813) *
              C50591 * C1000) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
              C2201 + C2201 + C50531 * C140) *
                 C50814 +
             (C5497 + C5498) * C50753) *
                C50813 +
            ((C2435 + C2436) * C50814 + C14613 * C50753) * C50727) *
               C50591 * C926 -
           ((C4127 * C50753 + (C2438 + C2437) * C50814) * C50727 +
            (C14614 * C50753 + (C2436 + C2435) * C50814) * C50813) *
               C50591 * C50627) *
              C928 +
          ((((C2441 + C2442) * C50814 + C14615 * C50753) * C50813 +
            ((C2443 + C2444) * C50814 + (C3195 + C3196) * C50753) * C50727) *
               C50591 * C50627 -
           ((C14616 * C50753 + (C2442 + C2441) * C50814) * C50727 +
            ((C5504 + C5503) * C50753 +
             (C2197 * C127 + C2210 + C2210 + C50531 * C141 + C2195 * C126 +
              C2211 + C2211 + C2190 * C140) *
                 C50814) *
                C50813) *
               C50591 * C926) *
              C929 +
          ((((C2195 * C127 + C2212 + C2212 + C2190 * C141 + C2197 * C128 +
              C2213 + C2213 + C50531 * C142) *
                 C50814 +
             (C5823 + C5824) * C50753) *
                C50813 +
            ((C2794 + C2795) * C50814 + (C14159 + C14160) * C50753) * C50727) *
               C50591 * C926 -
           (((C2197 * C1463 + C2944 + C2944 + C50531 * C1471 + C2195 * C1464 +
              C2945 + C2945 + C2190 * C1472) *
                 C50753 +
             (C2797 + C2796) * C50814) *
                C50727 +
            ((C14160 + C14159) * C50753 + (C2795 + C2794) * C50814) * C50813) *
               C50591 * C50627) *
              C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
              C2201 + C2201 + C50531 * C140) *
                 C50814 +
             (C5497 + C5498) * C50753) *
                C50813 +
            ((C2435 + C2436) * C50814 + C14613 * C50753) * C50727) *
               C409 -
           ((C6436 * C50753 + C14614 * C50814) * C50727 +
            ((C5500 + C5499) * C50753 + (C5498 + C5497) * C50814) * C50813) *
               C410 +
           ((C5509 * C50814 + (C5502 + C5501) * C50753) * C50813 +
            (C15135 * C50814 + (C6443 + C6444) * C50753) * C50727) *
               C411) *
              C926 +
          (((C14613 * C50814 + C15135 * C50753) * C50813 +
            ((C3190 + C3189) * C50814 + (C3633 + C3634) * C50753) * C50727) *
               C410 -
           ((C4127 * C50753 + (C2438 + C2437) * C50814) * C50727 +
            (C14614 * C50753 + (C2436 + C2435) * C50814) * C50813) *
               C409 -
           (((C2197 * C4530 + C4543 + C4543 + C50531 * C4538 + C2195 * C4531 +
              C4544 + C4544 + C2190 * C4539) *
                 C50753 +
             (C3634 + C3633) * C50814) *
                C50727 +
            ((C6444 + C6443) * C50753 + C6436 * C50814) * C50813) *
               C411) *
              C50627) *
         C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
               C2201 + C2201 + C50531 * C140) *
                  C50814 +
              (C5497 + C5498) * C50753) *
                 C50813 +
             ((C2435 + C2436) * C50814 + C14613 * C50753) * C50727) *
                C50801 -
            ((C6436 * C50753 + C14614 * C50814) * C50727 +
             ((C5500 + C5499) * C50753 + (C5498 + C5497) * C50814) * C50813) *
                C50655) *
               C926 +
           (((C14613 * C50814 + C15135 * C50753) * C50813 +
             ((C3190 + C3189) * C50814 + (C3633 + C3634) * C50753) * C50727) *
                C50655 -
            ((C4127 * C50753 + (C2438 + C2437) * C50814) * C50727 +
             (C14614 * C50753 + (C2436 + C2435) * C50814) * C50813) *
                C50801) *
               C50627) *
              C50792 +
          (((((C5503 + C5504) * C50814 + (C5505 + C5506) * C50753) * C50813 +
             (C14615 * C50814 + (C6034 + C6035) * C50753) * C50727) *
                C50655 -
            ((C14616 * C50753 + (C2442 + C2441) * C50814) * C50727 +
             ((C5504 + C5503) * C50753 +
              (C2197 * C127 + C2210 + C2210 + C50531 * C141 + C2195 * C126 +
               C2211 + C2211 + C2190 * C140) *
                  C50814) *
                 C50813) *
                C50801) *
               C926 +
           ((((C2441 + C2442) * C50814 + C14615 * C50753) * C50813 +
             ((C2443 + C2444) * C50814 + (C3195 + C3196) * C50753) * C50727) *
                C50801 -
            (((C2197 * C2598 + C2624 + C2624 + C50531 * C2604 + C2195 * C2597 +
               C2625 + C2625 + C2190 * C2603) *
                  C50753 +
              (C3196 + C3195) * C50814) *
                 C50727 +
             ((C6035 + C6034) * C50753 + C14616 * C50814) * C50813) *
                C50655) *
               C50627) *
              C50562)) /
        (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
              C2201 + C2201 + C50531 * C140) *
                 C50814 +
             (C5497 + C5498) * C50753) *
                C50813 +
            ((C2435 + C2436) * C50814 + C14613 * C50753) * C50727) *
               C50591 * C926 -
           ((C4127 * C50753 + (C2438 + C2437) * C50814) * C50727 +
            (C14614 * C50753 + (C2436 + C2435) * C50814) * C50813) *
               C50591 * C50627) *
              C928 +
          ((((C2441 + C2442) * C50814 + C14615 * C50753) * C50813 +
            ((C2443 + C2444) * C50814 + (C3195 + C3196) * C50753) * C50727) *
               C50591 * C50627 -
           ((C14616 * C50753 + (C2442 + C2441) * C50814) * C50727 +
            ((C5504 + C5503) * C50753 +
             (C2197 * C127 + C2210 + C2210 + C50531 * C141 + C2195 * C126 +
              C2211 + C2211 + C2190 * C140) *
                 C50814) *
                C50813) *
               C50591 * C926) *
              C929 +
          ((((C2195 * C127 + C2212 + C2212 + C2190 * C141 + C2197 * C128 +
              C2213 + C2213 + C50531 * C142) *
                 C50814 +
             (C5823 + C5824) * C50753) *
                C50813 +
            ((C2794 + C2795) * C50814 + (C14159 + C14160) * C50753) * C50727) *
               C50591 * C926 -
           (((C2197 * C1463 + C2944 + C2944 + C50531 * C1471 + C2195 * C1464 +
              C2945 + C2945 + C2190 * C1472) *
                 C50753 +
             (C2797 + C2796) * C50814) *
                C50727 +
            ((C14160 + C14159) * C50753 + (C2795 + C2794) * C50814) * C50813) *
               C50591 * C50627) *
              C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
             C2201 + C2201 + C50531 * C140) *
                C50814 +
            (C5497 + C5498) * C50753) *
               C50813 +
           ((C2435 + C2436) * C50814 + C14613 * C50753) * C50727) *
              C50591 * C997 -
          ((C4127 * C50753 + (C2438 + C2437) * C50814) * C50727 +
           (C14614 * C50753 + (C2436 + C2435) * C50814) * C50813) *
              C50591 * C998 +
          ((C2447 * C50814 + (C3190 + C3189) * C50753) * C50813 +
           ((C2440 + C2439) * C50814 + (C4139 + C4140) * C50753) * C50727) *
              C50591 * C999 -
          (((C2197 * C4120 + C4132 + C4132 + C50531 * C4124 + C2195 * C4121 +
             C4133 + C4133 + C2190 * C4125) *
                C50753 +
            (C3460 + C3459) * C50814) *
               C50727 +
           ((C4140 + C4139) * C50753 + C3447 * C50814) * C50813) *
              C50591 * C1000) *
         C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
               C2201 + C2201 + C50531 * C140) *
                  C50814 +
              (C5497 + C5498) * C50753) *
                 C50813 +
             ((C2435 + C2436) * C50814 + C14613 * C50753) * C50727) *
                C1577 -
            ((C6436 * C50753 + C14614 * C50814) * C50727 +
             ((C5500 + C5499) * C50753 + (C5498 + C5497) * C50814) * C50813) *
                C50655) *
               C50800 +
           (((C14613 * C50814 + C15135 * C50753) * C50813 +
             (C15782 * C50814 + (C3633 + C3634) * C50753) * C50727) *
                C50655 -
            ((C4127 * C50753 + (C2438 + C2437) * C50814) * C50727 +
             (C14614 * C50753 + (C2436 + C2435) * C50814) * C50813) *
                C1577) *
               C50627) *
              C50792 +
          (((((C5503 + C5504) * C50814 + (C5505 + C5506) * C50753) * C50813 +
             (C14615 * C50814 + (C6034 + C6035) * C50753) * C50727) *
                C50655 -
            ((C14616 * C50753 + (C2442 + C2441) * C50814) * C50727 +
             ((C5504 + C5503) * C50753 +
              (C2197 * C127 + C2210 + C2210 + C50531 * C141 + C2195 * C126 +
               C2211 + C2211 + C2190 * C140) *
                  C50814) *
                 C50813) *
                C1577) *
               C50800 +
           ((((C2441 + C2442) * C50814 + C14615 * C50753) * C50813 +
             ((C2443 + C2444) * C50814 + (C3195 + C3196) * C50753) * C50727) *
                C1577 -
            (((C2197 * C2598 + C2624 + C2624 + C50531 * C2604 + C2195 * C2597 +
               C2625 + C2625 + C2190 * C2603) *
                  C50753 +
              (C3196 + C3195) * C50814) *
                 C50727 +
             ((C6035 + C6034) * C50753 + C14616 * C50814) * C50813) *
                C50655) *
               C50627) *
              C50562)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
              C2201 + C2201 + C50531 * C140) *
                 C50814 +
             (C5497 + C5498) * C50753) *
                C50813 +
            ((C2435 + C2436) * C50814 + C14613 * C50753) * C50727) *
               C50847 -
           ((C6436 * C50753 + C14614 * C50814) * C50727 +
            ((C5500 + C5499) * C50753 + (C5498 + C5497) * C50814) * C50813) *
               C50848 +
           ((C5509 * C50814 + (C5502 + C5501) * C50753) * C50813 +
            (C15135 * C50814 + (C6443 + C6444) * C50753) * C50727) *
               C1993) *
              C50800 +
          (((C14613 * C50814 + C15135 * C50753) * C50813 +
            (C15782 * C50814 + (C3633 + C3634) * C50753) * C50727) *
               C50848 -
           ((C4127 * C50753 + (C2438 + C2437) * C50814) * C50727 +
            (C14614 * C50753 + (C2436 + C2435) * C50814) * C50813) *
               C50847 -
           (((C2197 * C4530 + C4543 + C4543 + C50531 * C4538 + C2195 * C4531 +
              C4544 + C4544 + C2190 * C4539) *
                 C50753 +
             (C3634 + C3633) * C50814) *
                C50727 +
            ((C6444 + C6443) * C50753 + C6436 * C50814) * C50813) *
               C1993) *
              C50627) *
         C50556) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
              C2201 + C2201 + C50531 * C140) *
                 C50814 +
             (C5497 + C5498) * C50753) *
                C50813 +
            ((C2435 + C2436) * C50814 + C14613 * C50753) * C50727) *
               C1577 -
           ((C6436 * C50753 + C14614 * C50814) * C50727 +
            ((C5500 + C5499) * C50753 + (C5498 + C5497) * C50814) * C50813) *
               C50655) *
              C260 +
          (((C14613 * C50814 + C15135 * C50753) * C50813 +
            (C15782 * C50814 + (C3633 + C3634) * C50753) * C50727) *
               C50655 -
           ((C4127 * C50753 + (C2438 + C2437) * C50814) * C50727 +
            (C14614 * C50753 + (C2436 + C2435) * C50814) * C50813) *
               C1577) *
              C261 +
          (((C2447 * C50814 + C15782 * C50753) * C50813 +
            ((C2440 + C2439) * C50814 + (C4139 + C4140) * C50753) * C50727) *
               C1577 -
           (((C2197 * C3606 + C3621 + C3621 + C50531 * C3610 + C2195 * C3607 +
              C3622 + C3622 + C2190 * C3611) *
                 C50753 +
             (C4140 + C4139) * C50814) *
                C50727 +
            ((C3634 + C3633) * C50753 + C4127 * C50814) * C50813) *
               C50655) *
              C262) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
              C2201 + C2201 + C50531 * C140) *
                 C50814 +
             (C5497 + C5498) * C50753) *
                C50813 +
            ((C2435 + C2436) * C50814 + C14613 * C50753) * C50727) *
               C1577 -
           ((C6436 * C50753 + C14614 * C50814) * C50727 +
            ((C5500 + C5499) * C50753 + (C5498 + C5497) * C50814) * C50813) *
               C50655) *
              C50575 * C928 +
          ((((C5503 + C5504) * C50814 + (C5505 + C5506) * C50753) * C50813 +
            (C14615 * C50814 + (C6034 + C6035) * C50753) * C50727) *
               C50655 -
           ((C14616 * C50753 + (C2442 + C2441) * C50814) * C50727 +
            ((C5504 + C5503) * C50753 +
             (C2197 * C127 + C2210 + C2210 + C50531 * C141 + C2195 * C126 +
              C2211 + C2211 + C2190 * C140) *
                 C50814) *
                C50813) *
               C1577) *
              C50575 * C929 +
          ((((C2195 * C127 + C2212 + C2212 + C2190 * C141 + C2197 * C128 +
              C2213 + C2213 + C50531 * C142) *
                 C50814 +
             (C5823 + C5824) * C50753) *
                C50813 +
            ((C2794 + C2795) * C50814 + (C14159 + C14160) * C50753) * C50727) *
               C1577 -
           (((C2197 * C1116 + C5657 + C5657 + C50531 * C1124 + C2195 * C1117 +
              C5658 + C5658 + C2190 * C1125) *
                 C50753 +
             (C14160 + C14159) * C50814) *
                C50727 +
            ((C5826 + C5825) * C50753 + (C5824 + C5823) * C50814) * C50813) *
               C50655) *
              C50575 * C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
             C2201 + C2201 + C50531 * C140) *
                C50814 +
            (C5497 + C5498) * C50753) *
               C50813 +
           ((C2435 + C2436) * C50814 + C14613 * C50753) * C50727) *
              C1743 -
          ((C6436 * C50753 + C14614 * C50814) * C50727 +
           ((C5500 + C5499) * C50753 + (C5498 + C5497) * C50814) * C50813) *
              C1744 +
          ((C5509 * C50814 + (C5502 + C5501) * C50753) * C50813 +
           (C15135 * C50814 + (C6443 + C6444) * C50753) * C50727) *
              C1745 -
          (((C2197 * C6425 + C6437 + C6437 + C50531 * C6429 + C2195 * C6426 +
             C6438 + C6438 + C2190 * C6430) *
                C50753 +
            (C6444 + C6443) * C50814) *
               C50727 +
           ((C7339 + C7338) * C50753 + C7327 * C50814) * C50813) *
              C1746) *
         C50575 * C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
              C2201 + C2201 + C50531 * C140) *
                 C50814 +
             (C5497 + C5498) * C50753) *
                C50813 +
            ((C2435 + C2436) * C50814 + C14613 * C50753) * C50727) *
               C50847 -
           ((C6436 * C50753 + C14614 * C50814) * C50727 +
            ((C5500 + C5499) * C50753 + (C5498 + C5497) * C50814) * C50813) *
               C50848 +
           ((C5509 * C50814 + (C5502 + C5501) * C50753) * C50813 +
            (C15135 * C50814 + (C6443 + C6444) * C50753) * C50727) *
               C1993) *
              C50575 * C50792 +
          ((((C5503 + C5504) * C50814 + (C5505 + C5506) * C50753) * C50813 +
            (C14615 * C50814 + (C6034 + C6035) * C50753) * C50727) *
               C50848 -
           ((C14616 * C50753 + (C2442 + C2441) * C50814) * C50727 +
            ((C5504 + C5503) * C50753 +
             (C2197 * C127 + C2210 + C2210 + C50531 * C141 + C2195 * C126 +
              C2211 + C2211 + C2190 * C140) *
                 C50814) *
                C50813) *
               C50847 -
           (((C2197 * C6020 + C6028 + C6028 + C50531 * C6022 + C2195 * C4532 +
              C6029 + C6029 + C2190 * C4540) *
                 C50753 +
             (C6035 + C6034) * C50814) *
                C50727 +
            ((C5508 + C5507) * C50753 + C5510 * C50814) * C50813) *
               C1993) *
              C50575 * C50562)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
              C2201 + C2201 + C50531 * C140) *
                 C50814 +
             (C5497 + C5498) * C50753) *
                C50813 +
            ((C2435 + C2436) * C50814 + C14613 * C50753) * C50727) *
               C1577 -
           ((C6436 * C50753 + C14614 * C50814) * C50727 +
            ((C5500 + C5499) * C50753 + (C5498 + C5497) * C50814) * C50813) *
               C50655) *
              C50575 * C928 +
          ((((C5503 + C5504) * C50814 + (C5505 + C5506) * C50753) * C50813 +
            (C14615 * C50814 + (C6034 + C6035) * C50753) * C50727) *
               C50655 -
           ((C14616 * C50753 + (C2442 + C2441) * C50814) * C50727 +
            ((C5504 + C5503) * C50753 +
             (C2197 * C127 + C2210 + C2210 + C50531 * C141 + C2195 * C126 +
              C2211 + C2211 + C2190 * C140) *
                 C50814) *
                C50813) *
               C1577) *
              C50575 * C929 +
          ((((C2195 * C127 + C2212 + C2212 + C2190 * C141 + C2197 * C128 +
              C2213 + C2213 + C50531 * C142) *
                 C50814 +
             (C5823 + C5824) * C50753) *
                C50813 +
            ((C2794 + C2795) * C50814 + (C14159 + C14160) * C50753) * C50727) *
               C1577 -
           (((C2197 * C1116 + C5657 + C5657 + C50531 * C1124 + C2195 * C1117 +
              C5658 + C5658 + C2190 * C1125) *
                 C50753 +
             (C14160 + C14159) * C50814) *
                C50727 +
            ((C5826 + C5825) * C50753 + (C5824 + C5823) * C50814) * C50813) *
               C50655) *
              C50575 * C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
              C2201 + C2201 + C50531 * C140) *
                 C50814 +
             (C5497 + C5498) * C50753) *
                C50813 +
            ((C2435 + C2436) * C50814 + C14613 * C50753) * C50727) *
               C1577 -
           ((C6436 * C50753 + C14614 * C50814) * C50727 +
            ((C5500 + C5499) * C50753 + (C5498 + C5497) * C50814) * C50813) *
               C50655) *
              C260 +
          (((C14613 * C50814 + C15135 * C50753) * C50813 +
            (C15782 * C50814 + (C3633 + C3634) * C50753) * C50727) *
               C50655 -
           ((C4127 * C50753 + (C2438 + C2437) * C50814) * C50727 +
            (C14614 * C50753 + (C2436 + C2435) * C50814) * C50813) *
               C1577) *
              C261 +
          (((C2447 * C50814 + C15782 * C50753) * C50813 +
            ((C2440 + C2439) * C50814 + (C4139 + C4140) * C50753) * C50727) *
               C1577 -
           (((C2197 * C3606 + C3621 + C3621 + C50531 * C3610 + C2195 * C3607 +
              C3622 + C3622 + C2190 * C3611) *
                 C50753 +
             (C4140 + C4139) * C50814) *
                C50727 +
            ((C3634 + C3633) * C50753 + C4127 * C50814) * C50813) *
               C50655) *
              C262) *
         C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[30] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 +
                     C2197 * C126 + C2201 + C2201 + C50531 * C140) *
                        C50689 * C2192 +
                    (C2435 + C2436) * C50689 * C2193 + C2449 * C2194) *
                       C50591 * C50800 -
                   ((C2439 + C2440) * C50689 * C2194 +
                    (C2438 + C2437) * C50689 * C2193 +
                    (C2436 + C2435) * C50689 * C2192) *
                       C50591 * C50627) *
                      C50843 +
                  (((C2441 + C2442) * C50689 * C2192 +
                    (C2443 + C2444) * C50689 * C2193 +
                    (C2445 + C2446) * C50689 * C2194) *
                       C50591 * C50627 -
                   (C2450 * C2194 + (C2442 + C2441) * C50689 * C2193 +
                    (C2197 * C127 + C2210 + C2210 + C50531 * C141 +
                     C2195 * C126 + C2211 + C2211 + C2190 * C140) *
                        C50689 * C2192) *
                       C50591 * C50800) *
                      C50844 +
                  (((C2195 * C127 + C2212 + C2212 + C2190 * C141 +
                     C2197 * C128 + C2213 + C2213 + C50531 * C142) *
                        C50689 * C2192 +
                    (C2794 + C2795) * C50689 * C2193 +
                    (C2796 + C2797) * C50689 * C2194) *
                       C50591 * C50800 -
                   ((C2197 * C1002 + C2784 + C2784 + C50531 * C1010 +
                     C2195 * C1003 + C2785 + C2785 + C2190 * C1011) *
                        C50689 * C2194 +
                    (C2797 + C2796) * C50689 * C2193 +
                    (C2795 + C2794) * C50689 * C2192) *
                       C50591 * C50627) *
                      C560)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 +
                    C148 + C148 + C106 * C140 + C121 * C127 + C149 + C149 +
                    C107 * C141 + C123 * C128 + C150 + C150 + C108 * C142) *
                       C50689 * C50677 * C50591 * C50800 -
                   (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 +
                    C297 + C297 + C107 * C286 + C119 * C267 + C298 + C298 +
                    C106 * C287 + C117 * C268 + C299 + C299 + C105 * C288) *
                       C50689 * C50677 * C50591 * C50627) *
                      C50843 +
                  ((C117 * C267 + C304 + C304 + C105 * C287 + C119 * C266 +
                    C305 + C305 + C106 * C286 + C121 * C265 + C306 + C306 +
                    C107 * C285 + C123 * C273 + C307 + C307 + C108 * C293) *
                       C50689 * C50677 * C50591 * C50627 -
                   (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 +
                    C152 + C152 + C107 * C142 + C119 * C127 + C153 + C153 +
                    C106 * C141 + C117 * C126 + C154 + C154 + C105 * C140) *
                       C50689 * C50677 * C50591 * C50800) *
                      C50844 +
                  ((C117 * C127 + C155 + C155 + C105 * C141 + C119 * C128 +
                    C156 + C156 + C106 * C142 + C121 * C129 + C157 + C157 +
                    C107 * C143 + C123 * C130 + C158 + C158 + C108 * C144) *
                       C50689 * C50677 * C50591 * C50800 -
                   (C123 * C561 + C565 + C565 + C108 * C563 + C121 * C273 +
                    C566 + C566 + C107 * C293 + C119 * C265 + C567 + C567 +
                    C106 * C285 + C117 * C266 + C568 + C568 + C105 * C286) *
                       C50689 * C50677 * C50591 * C50627) *
                      C560)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 +
                     C2197 * C126 + C2201 + C2201 + C50531 * C140) *
                        C5132 +
                    (C5497 + C5498) * C5133 + C5509 * C5134) *
                       C50677 * C50591 * C50800 -
                   ((C3632 + C3631) * C5134 + (C3191 + C3192) * C5133 +
                    (C2436 + C2435) * C5132) *
                       C50677 * C50591 * C50627) *
                      C50843 +
                  (((C2441 + C2442) * C5132 + (C3193 + C3194) * C5133 +
                    (C2195 * C1118 + C2627 + C2627 + C2190 * C1126 +
                     C2197 * C1117 + C2626 + C2626 + C50531 * C1125) *
                        C5134) *
                       C50677 * C50591 * C50627 -
                   (C5510 * C5134 + (C5504 + C5503) * C5133 +
                    (C2197 * C127 + C2210 + C2210 + C50531 * C141 +
                     C2195 * C126 + C2211 + C2211 + C2190 * C140) *
                        C5132) *
                       C50677 * C50591 * C50800) *
                      C50844 +
                  (((C2195 * C127 + C2212 + C2212 + C2190 * C141 +
                     C2197 * C128 + C2213 + C2213 + C50531 * C142) *
                        C5132 +
                    (C2195 * C413 + C2949 + C2949 + C2190 * C433 +
                     C2197 * C412 + C2948 + C2948 + C50531 * C432) *
                        C5133 +
                    (C2195 * C418 + C5136 + C5136 + C2190 * C438 +
                     C2197 * C419 + C5137 + C5137 + C50531 * C439) *
                        C5134) *
                       C50677 * C50591 * C50800 -
                   ((C2197 * C1116 + C5657 + C5657 + C50531 * C1124 +
                     C2195 * C1117 + C5658 + C5658 + C2190 * C1125) *
                        C5134 +
                    (C2197 * C808 + C2946 + C2946 + C50531 * C818 +
                     C2195 * C807 + C2947 + C2947 + C2190 * C817) *
                        C5133 +
                    (C2795 + C2794) * C5132) *
                       C50677 * C50591 * C50627) *
                      C560)) /
                    (p * q * std::sqrt(p + q));
    d2ee[31] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C2195 * C125 + C2200 + C2200 + C2190 * C139 +
                      C2197 * C126 + C2201 + C2201 + C50531 * C140) *
                         C50689 * C2192 +
                     (C2435 + C2436) * C50689 * C2193 + C2449 * C2194) *
                        C50801 -
                    ((C3189 + C3190) * C50689 * C2194 +
                     (C3191 + C3192) * C50689 * C2193 +
                     (C2197 * C414 + C2610 + C2610 + C50531 * C434 +
                      C2195 * C415 + C2611 + C2611 + C2190 * C435) *
                         C50689 * C2192) *
                        C50655) *
                       C50800 +
                   (((C3192 + C3191) * C50689 * C2192 +
                     (C3190 + C3189) * C50689 * C2193 +
                     (C2195 * C3143 + C3161 + C3161 + C2190 * C3149 +
                      C2197 * C3144 + C3162 + C3162 + C50531 * C3150) *
                         C50689 * C2194) *
                        C50655 -
                    ((C2439 + C2440) * C50689 * C2194 +
                     (C2438 + C2437) * C50689 * C2193 +
                     (C2436 + C2435) * C50689 * C2192) *
                        C50801) *
                       C50627) *
                      C263 +
                  ((((C2195 * C414 + C2618 + C2618 + C2190 * C434 +
                      C2197 * C413 + C2619 + C2619 + C50531 * C433) *
                         C50689 * C2192 +
                     (C3193 + C3194) * C50689 * C2193 +
                     (C3195 + C3196) * C50689 * C2194) *
                        C50655 -
                    (C2450 * C2194 + (C2442 + C2441) * C50689 * C2193 +
                     (C2197 * C127 + C2210 + C2210 + C50531 * C141 +
                      C2195 * C126 + C2211 + C2211 + C2190 * C140) *
                         C50689 * C2192) *
                        C50801) *
                       C50800 +
                   (((C2441 + C2442) * C50689 * C2192 +
                     (C2443 + C2444) * C50689 * C2193 +
                     (C2445 + C2446) * C50689 * C2194) *
                        C50801 -
                    ((C2197 * C3145 + C3171 + C3171 + C50531 * C3151 +
                      C2195 * C3144 + C3172 + C3172 + C2190 * C3150) *
                         C50689 * C2194 +
                     (C3196 + C3195) * C50689 * C2193 +
                     (C3194 + C3193) * C50689 * C2192) *
                        C50655) *
                       C50627) *
                      C50562)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 +
                     C148 + C148 + C106 * C140 + C121 * C127 + C149 + C149 +
                     C107 * C141 + C123 * C128 + C150 + C150 + C108 * C142) *
                        C50689 * C50677 * C50801 -
                    (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 +
                     C444 + C444 + C107 * C433 + C119 * C414 + C445 + C445 +
                     C106 * C434 + C117 * C415 + C446 + C446 + C105 * C435) *
                        C50689 * C50677 * C50655) *
                       C50800 +
                   ((C117 * C805 + C821 + C821 + C105 * C815 + C119 * C806 +
                     C822 + C822 + C106 * C816 + C121 * C807 + C823 + C823 +
                     C107 * C817 + C123 * C808 + C824 + C824 + C108 * C818) *
                        C50689 * C50677 * C50655 -
                    (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 +
                     C297 + C297 + C107 * C286 + C119 * C267 + C298 + C298 +
                     C106 * C287 + C117 * C268 + C299 + C299 + C105 * C288) *
                        C50689 * C50677 * C50801) *
                       C50627) *
                      C263 +
                  (((C117 * C414 + C451 + C451 + C105 * C434 + C119 * C413 +
                     C452 + C452 + C106 * C433 + C121 * C412 + C453 + C453 +
                     C107 * C432 + C123 * C420 + C454 + C454 + C108 * C440) *
                        C50689 * C50677 * C50655 -
                    (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 +
                     C152 + C152 + C107 * C142 + C119 * C127 + C153 + C153 +
                     C106 * C141 + C117 * C126 + C154 + C154 + C105 * C140) *
                        C50689 * C50677 * C50801) *
                       C50800 +
                   ((C117 * C267 + C304 + C304 + C105 * C287 + C119 * C266 +
                     C305 + C305 + C106 * C286 + C121 * C265 + C306 + C306 +
                     C107 * C285 + C123 * C273 + C307 + C307 + C108 * C293) *
                        C50689 * C50677 * C50801 -
                    (C123 * C809 + C825 + C825 + C108 * C819 + C121 * C808 +
                     C826 + C826 + C107 * C818 + C119 * C807 + C827 + C827 +
                     C106 * C817 + C117 * C806 + C828 + C828 + C105 * C816) *
                        C50689 * C50677 * C50655) *
                       C50627) *
                      C50562)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((((C2195 * C125 + C2200 + C2200 + C2190 * C139 +
                      C2197 * C126 + C2201 + C2201 + C50531 * C140) *
                         C5132 +
                     (C5497 + C5498) * C5133 + C5509 * C5134) *
                        C50677 * C50801 -
                    ((C5501 + C5502) * C5134 + (C5500 + C5499) * C5133 +
                     (C5498 + C5497) * C5132) *
                        C50677 * C50655) *
                       C50800 +
                   (((C3192 + C3191) * C5132 + (C3631 + C3632) * C5133 +
                     (C2195 * C4533 + C4546 + C4546 + C2190 * C4541 +
                      C2197 * C4532 + C4545 + C4545 + C50531 * C4540) *
                         C5134) *
                        C50677 * C50655 -
                    ((C3632 + C3631) * C5134 + (C3191 + C3192) * C5133 +
                     (C2436 + C2435) * C5132) *
                        C50677 * C50801) *
                       C50627) *
                      C263 +
                  ((((C5503 + C5504) * C5132 + (C5505 + C5506) * C5133 +
                     (C5507 + C5508) * C5134) *
                        C50677 * C50655 -
                    (C5510 * C5134 + (C5504 + C5503) * C5133 +
                     (C2197 * C127 + C2210 + C2210 + C50531 * C141 +
                      C2195 * C126 + C2211 + C2211 + C2190 * C140) *
                         C5132) *
                        C50677 * C50801) *
                       C50800 +
                   (((C2441 + C2442) * C5132 + (C3193 + C3194) * C5133 +
                     (C6034 + C6035) * C5134) *
                        C50677 * C50801 -
                    ((C2197 * C6020 + C6028 + C6028 + C50531 * C6022 +
                      C2195 * C4532 + C6029 + C6029 + C2190 * C4540) *
                         C5134 +
                     (C6035 + C6034) * C5133 + (C3194 + C3193) * C5132) *
                        C50677 * C50655) *
                       C50627) *
                      C50562)) /
                    (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 +
               C148 + C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 +
               C123 * C128 + C150 + C150 + C108 * C142) *
                  C50689 * C50677 * C50591 * C50575 * C113 -
              (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 + C152 +
               C152 + C107 * C142 + C119 * C127 + C153 + C153 + C106 * C141 +
               C117 * C126 + C154 + C154 + C105 * C140) *
                  C50689 * C50677 * C50591 * C50575 * C114 +
              (C117 * C127 + C155 + C155 + C105 * C141 + C119 * C128 + C156 +
               C156 + C106 * C142 + C121 * C129 + C157 + C157 + C107 * C143 +
               C123 * C130 + C158 + C158 + C108 * C144) *
                  C50689 * C50677 * C50591 * C50575 * C115 -
              (C123 * C131 + C159 + C159 + C108 * C145 + C121 * C130 + C160 +
               C160 + C107 * C144 + C119 * C129 + C161 + C161 + C106 * C143 +
               C117 * C128 + C162 + C162 + C105 * C142) *
                  C50689 * C50677 * C50591 * C50575 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 +
                C148 + C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 +
                C123 * C128 + C150 + C150 + C108 * C142) *
                   C50689 * C50677 * C50591 * C260 -
               (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 + C297 +
                C297 + C107 * C286 + C119 * C267 + C298 + C298 + C106 * C287 +
                C117 * C268 + C299 + C299 + C105 * C288) *
                   C50689 * C50677 * C50591 * C261 +
               (C117 * C269 + C300 + C300 + C105 * C289 + C119 * C270 + C301 +
                C301 + C106 * C290 + C121 * C271 + C302 + C302 + C107 * C291 +
                C123 * C272 + C303 + C303 + C108 * C292) *
                   C50689 * C50677 * C50591 * C262) *
                  C263 +
              ((C117 * C267 + C304 + C304 + C105 * C287 + C119 * C266 + C305 +
                C305 + C106 * C286 + C121 * C265 + C306 + C306 + C107 * C285 +
                C123 * C273 + C307 + C307 + C108 * C293) *
                   C50689 * C50677 * C50591 * C261 -
               (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 + C152 +
                C152 + C107 * C142 + C119 * C127 + C153 + C153 + C106 * C141 +
                C117 * C126 + C154 + C154 + C105 * C140) *
                   C50689 * C50677 * C50591 * C260 -
               (C123 * C274 + C308 + C308 + C108 * C294 + C121 * C272 + C309 +
                C309 + C107 * C292 + C119 * C271 + C310 + C310 + C106 * C291 +
                C117 * C270 + C311 + C311 + C105 * C290) *
                   C50689 * C50677 * C50591 * C262) *
                  C50562)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 +
            C148 + C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 +
            C123 * C128 + C150 + C150 + C108 * C142) *
               C50689 * C50677 * C409 -
           (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 + C444 +
            C444 + C107 * C433 + C119 * C414 + C445 + C445 + C106 * C434 +
            C117 * C415 + C446 + C446 + C105 * C435) *
               C50689 * C50677 * C410 +
           (C117 * C416 + C447 + C447 + C105 * C436 + C119 * C417 + C448 +
            C448 + C106 * C437 + C121 * C418 + C449 + C449 + C107 * C438 +
            C123 * C419 + C450 + C450 + C108 * C439) *
               C50689 * C50677 * C411) *
              C50575 * C263 +
          ((C117 * C414 + C451 + C451 + C105 * C434 + C119 * C413 + C452 +
            C452 + C106 * C433 + C121 * C412 + C453 + C453 + C107 * C432 +
            C123 * C420 + C454 + C454 + C108 * C440) *
               C50689 * C50677 * C410 -
           (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 + C152 +
            C152 + C107 * C142 + C119 * C127 + C153 + C153 + C106 * C141 +
            C117 * C126 + C154 + C154 + C105 * C140) *
               C50689 * C50677 * C409 -
           (C123 * C421 + C455 + C455 + C108 * C441 + C121 * C419 + C456 +
            C456 + C107 * C439 + C119 * C418 + C457 + C457 + C106 * C438 +
            C117 * C417 + C458 + C458 + C105 * C437) *
               C50689 * C50677 * C411) *
              C50575 * C50562)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 + C2201 +
            C2201 + C50531 * C140) *
               C50689 * C2192 +
           (C2195 * C268 + C2202 + C2202 + C2190 * C288 + C2197 * C267 + C2203 +
            C2203 + C50531 * C287) *
               C50689 * C2193 +
           (C2195 * C269 + C2204 + C2204 + C2190 * C289 + C2197 * C270 + C2205 +
            C2205 + C50531 * C290) *
               C50689 * C2194) *
              C50591 * C50575 * C113 -
          ((C2197 * C271 + C2206 + C2206 + C50531 * C291 + C2195 * C270 +
            C2207 + C2207 + C2190 * C290) *
               C50689 * C2194 +
           (C2197 * C266 + C2208 + C2208 + C50531 * C286 + C2195 * C267 +
            C2209 + C2209 + C2190 * C287) *
               C50689 * C2193 +
           (C2197 * C127 + C2210 + C2210 + C50531 * C141 + C2195 * C126 +
            C2211 + C2211 + C2190 * C140) *
               C50689 * C2192) *
              C50591 * C50575 * C114 +
          ((C2195 * C127 + C2212 + C2212 + C2190 * C141 + C2197 * C128 + C2213 +
            C2213 + C50531 * C142) *
               C50689 * C2192 +
           (C2195 * C266 + C2214 + C2214 + C2190 * C286 + C2197 * C265 + C2215 +
            C2215 + C50531 * C285) *
               C50689 * C2193 +
           (C2195 * C271 + C2216 + C2216 + C2190 * C291 + C2197 * C272 + C2217 +
            C2217 + C50531 * C292) *
               C50689 * C2194) *
              C50591 * C50575 * C115 -
          ((C2197 * C274 + C2218 + C2218 + C50531 * C294 + C2195 * C272 +
            C2219 + C2219 + C2190 * C292) *
               C50689 * C2194 +
           (C2197 * C273 + C2220 + C2220 + C50531 * C293 + C2195 * C265 +
            C2221 + C2221 + C2190 * C285) *
               C50689 * C2193 +
           (C2197 * C129 + C2222 + C2222 + C50531 * C143 + C2195 * C128 +
            C2223 + C2223 + C2190 * C142) *
               C50689 * C2192) *
              C50591 * C50575 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
             C2201 + C2201 + C50531 * C140) *
                C50689 * C2192 +
            (C2435 + C2436) * C50689 * C2193 + C2449 * C2194) *
               C50591 * C260 -
           ((C2439 + C2440) * C50689 * C2194 +
            (C2438 + C2437) * C50689 * C2193 +
            (C2436 + C2435) * C50689 * C2192) *
               C50591 * C261 +
           (C2449 * C2192 + (C2440 + C2439) * C50689 * C2193 +
            (C2195 * C2369 + C2393 + C2393 + C2190 * C2375 + C2197 * C2370 +
             C2394 + C2394 + C50531 * C2376) *
                C50689 * C2194) *
               C50591 * C262) *
              C263 +
          (((C2441 + C2442) * C50689 * C2192 +
            (C2443 + C2444) * C50689 * C2193 +
            (C2445 + C2446) * C50689 * C2194) *
               C50591 * C261 -
           (C2450 * C2194 + (C2442 + C2441) * C50689 * C2193 +
            (C2197 * C127 + C2210 + C2210 + C50531 * C141 + C2195 * C126 +
             C2211 + C2211 + C2190 * C140) *
                C50689 * C2192) *
               C50591 * C260 -
           ((C2197 * C2371 + C2409 + C2409 + C50531 * C2377 + C2195 * C2370 +
             C2410 + C2410 + C2190 * C2376) *
                C50689 * C2194 +
            (C2446 + C2445) * C50689 * C2193 + C2450 * C2192) *
               C50591 * C262) *
              C50562)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
             C2201 + C2201 + C50531 * C140) *
                C50689 * C2192 +
            (C2435 + C2436) * C50689 * C2193 + C2449 * C2194) *
               C409 -
           ((C2197 * C1465 + C2606 + C2606 + C50531 * C1473 + C2195 * C1466 +
             C2607 + C2607 + C2190 * C1474) *
                C50689 * C2194 +
            (C2197 * C806 + C2608 + C2608 + C50531 * C816 + C2195 * C805 +
             C2609 + C2609 + C2190 * C815) *
                C50689 * C2193 +
            (C2197 * C414 + C2610 + C2610 + C50531 * C434 + C2195 * C415 +
             C2611 + C2611 + C2190 * C435) *
                C50689 * C2192) *
               C410 +
           ((C2195 * C416 + C2612 + C2612 + C2190 * C436 + C2197 * C417 +
             C2613 + C2613 + C50531 * C437) *
                C50689 * C2192 +
            (C2195 * C1119 + C2614 + C2614 + C2190 * C1127 + C2197 * C1118 +
             C2615 + C2615 + C50531 * C1126) *
                C50689 * C2193 +
            (C2195 * C2596 + C2616 + C2616 + C2190 * C2602 + C2197 * C2597 +
             C2617 + C2617 + C50531 * C2603) *
                C50689 * C2194) *
               C411) *
              C50575 * C263 +
          (((C2195 * C414 + C2618 + C2618 + C2190 * C434 + C2197 * C413 +
             C2619 + C2619 + C50531 * C433) *
                C50689 * C2192 +
            (C2195 * C806 + C2620 + C2620 + C2190 * C816 + C2197 * C807 +
             C2621 + C2621 + C50531 * C817) *
                C50689 * C2193 +
            (C2195 * C1465 + C2622 + C2622 + C2190 * C1473 + C2197 * C1464 +
             C2623 + C2623 + C50531 * C1472) *
                C50689 * C2194) *
               C410 -
           (C2450 * C2194 + (C2442 + C2441) * C50689 * C2193 +
            (C2197 * C127 + C2210 + C2210 + C50531 * C141 + C2195 * C126 +
             C2211 + C2211 + C2190 * C140) *
                C50689 * C2192) *
               C409 -
           ((C2197 * C2598 + C2624 + C2624 + C50531 * C2604 + C2195 * C2597 +
             C2625 + C2625 + C2190 * C2603) *
                C50689 * C2194 +
            (C2197 * C1117 + C2626 + C2626 + C50531 * C1125 + C2195 * C1118 +
             C2627 + C2627 + C2190 * C1126) *
                C50689 * C2193 +
            (C2197 * C418 + C2628 + C2628 + C50531 * C438 + C2195 * C417 +
             C2629 + C2629 + C2190 * C437) *
                C50689 * C2192) *
               C411) *
              C50575 * C50562)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((C2195 * C125 + C2200 + C2200 + C2190 * C139 +
                                C2197 * C126 + C2201 + C2201 + C50531 * C140) *
                                   C5132 +
                               (C2195 * C415 + C2611 + C2611 + C2190 * C435 +
                                C2197 * C414 + C2610 + C2610 + C50531 * C434) *
                                   C5133 +
                               (C2195 * C416 + C2612 + C2612 + C2190 * C436 +
                                C2197 * C417 + C2613 + C2613 + C50531 * C437) *
                                   C5134) *
                                  C50677 * C50591 * C50575 * C113 -
                              ((C2197 * C418 + C2628 + C2628 + C50531 * C438 +
                                C2195 * C417 + C2629 + C2629 + C2190 * C437) *
                                   C5134 +
                               (C2197 * C413 + C2619 + C2619 + C50531 * C433 +
                                C2195 * C414 + C2618 + C2618 + C2190 * C434) *
                                   C5133 +
                               (C2197 * C127 + C2210 + C2210 + C50531 * C141 +
                                C2195 * C126 + C2211 + C2211 + C2190 * C140) *
                                   C5132) *
                                  C50677 * C50591 * C50575 * C114 +
                              ((C2195 * C127 + C2212 + C2212 + C2190 * C141 +
                                C2197 * C128 + C2213 + C2213 + C50531 * C142) *
                                   C5132 +
                               (C2195 * C413 + C2949 + C2949 + C2190 * C433 +
                                C2197 * C412 + C2948 + C2948 + C50531 * C432) *
                                   C5133 +
                               (C2195 * C418 + C5136 + C5136 + C2190 * C438 +
                                C2197 * C419 + C5137 + C5137 + C50531 * C439) *
                                   C5134) *
                                  C50677 * C50591 * C50575 * C115 -
                              ((C2197 * C421 + C5138 + C5138 + C50531 * C441 +
                                C2195 * C419 + C5139 + C5139 + C2190 * C439) *
                                   C5134 +
                               (C2197 * C420 + C5140 + C5140 + C50531 * C440 +
                                C2195 * C412 + C5141 + C5141 + C2190 * C432) *
                                   C5133 +
                               (C2197 * C129 + C2222 + C2222 + C50531 * C143 +
                                C2195 * C128 + C2223 + C2223 + C2190 * C142) *
                                   C5132) *
                                  C50677 * C50591 * C50575 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
             C2201 + C2201 + C50531 * C140) *
                C5132 +
            (C2195 * C415 + C2611 + C2611 + C2190 * C435 + C2197 * C414 +
             C2610 + C2610 + C50531 * C434) *
                C5133 +
            (C2195 * C416 + C2612 + C2612 + C2190 * C436 + C2197 * C417 +
             C2613 + C2613 + C50531 * C437) *
                C5134) *
               C50677 * C50591 * C260 -
           ((C3632 + C3631) * C5134 + (C3191 + C3192) * C5133 +
            (C2436 + C2435) * C5132) *
               C50677 * C50591 * C261 +
           (C2447 * C5132 + (C3190 + C3189) * C5133 + (C3633 + C3634) * C5134) *
               C50677 * C50591 * C262) *
              C263 +
          (((C2441 + C2442) * C5132 + (C3193 + C3194) * C5133 +
            (C2195 * C1118 + C2627 + C2627 + C2190 * C1126 + C2197 * C1117 +
             C2626 + C2626 + C50531 * C1125) *
                C5134) *
               C50677 * C50591 * C261 -
           ((C2197 * C418 + C2628 + C2628 + C50531 * C438 + C2195 * C417 +
             C2629 + C2629 + C2190 * C437) *
                C5134 +
            (C2197 * C413 + C2619 + C2619 + C50531 * C433 + C2195 * C414 +
             C2618 + C2618 + C2190 * C434) *
                C5133 +
            (C2197 * C127 + C2210 + C2210 + C50531 * C141 + C2195 * C126 +
             C2211 + C2211 + C2190 * C140) *
                C5132) *
               C50677 * C50591 * C260 -
           ((C2197 * C2598 + C2624 + C2624 + C50531 * C2604 + C2195 * C2597 +
             C2625 + C2625 + C2190 * C2603) *
                C5134 +
            (C3196 + C3195) * C5133 + C2448 * C5132) *
               C50677 * C50591 * C262) *
              C50562)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
             C2201 + C2201 + C50531 * C140) *
                C5132 +
            (C5497 + C5498) * C5133 + C5509 * C5134) *
               C50677 * C409 -
           ((C5501 + C5502) * C5134 + (C5500 + C5499) * C5133 +
            (C5498 + C5497) * C5132) *
               C50677 * C410 +
           (C5509 * C5132 + (C5502 + C5501) * C5133 +
            (C2195 * C5433 + C5455 + C5455 + C2190 * C5439 + C2197 * C5434 +
             C5456 + C5456 + C50531 * C5440) *
                C5134) *
               C50677 * C411) *
              C50575 * C263 +
          (((C5503 + C5504) * C5132 + (C5505 + C5506) * C5133 +
            (C5507 + C5508) * C5134) *
               C50677 * C410 -
           (C5510 * C5134 + (C5504 + C5503) * C5133 +
            (C2197 * C127 + C2210 + C2210 + C50531 * C141 + C2195 * C126 +
             C2211 + C2211 + C2190 * C140) *
                C5132) *
               C50677 * C409 -
           ((C2197 * C5435 + C5471 + C5471 + C50531 * C5441 + C2195 * C5434 +
             C5472 + C5472 + C2190 * C5440) *
                C5134 +
            (C5508 + C5507) * C5133 + C5510 * C5132) *
               C50677 * C411) *
              C50575 * C50562)) /
            (p * q * std::sqrt(p + q));
    d2ee[33] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 +
                     C2197 * C126 + C2201 + C2201 + C50531 * C140) *
                        C50689 * C2192 +
                    (C2435 + C2436) * C50689 * C2193 + C2449 * C2194) *
                       C50801 -
                   ((C2197 * C1465 + C2606 + C2606 + C50531 * C1473 +
                     C2195 * C1466 + C2607 + C2607 + C2190 * C1474) *
                        C50689 * C2194 +
                    (C2197 * C806 + C2608 + C2608 + C50531 * C816 +
                     C2195 * C805 + C2609 + C2609 + C2190 * C815) *
                        C50689 * C2193 +
                    (C2197 * C414 + C2610 + C2610 + C50531 * C434 +
                     C2195 * C415 + C2611 + C2611 + C2190 * C435) *
                        C50689 * C2192) *
                       C50655) *
                      C50575 * C50843 +
                  (((C2195 * C414 + C2618 + C2618 + C2190 * C434 +
                     C2197 * C413 + C2619 + C2619 + C50531 * C433) *
                        C50689 * C2192 +
                    (C2195 * C806 + C2620 + C2620 + C2190 * C816 +
                     C2197 * C807 + C2621 + C2621 + C50531 * C817) *
                        C50689 * C2193 +
                    (C2195 * C1465 + C2622 + C2622 + C2190 * C1473 +
                     C2197 * C1464 + C2623 + C2623 + C50531 * C1472) *
                        C50689 * C2194) *
                       C50655 -
                   (C2450 * C2194 + (C2442 + C2441) * C50689 * C2193 +
                    (C2197 * C127 + C2210 + C2210 + C50531 * C141 +
                     C2195 * C126 + C2211 + C2211 + C2190 * C140) *
                        C50689 * C2192) *
                       C50801) *
                      C50575 * C50844 +
                  (((C2195 * C127 + C2212 + C2212 + C2190 * C141 +
                     C2197 * C128 + C2213 + C2213 + C50531 * C142) *
                        C50689 * C2192 +
                    (C2794 + C2795) * C50689 * C2193 +
                    (C2796 + C2797) * C50689 * C2194) *
                       C50801 -
                   ((C2197 * C1463 + C2944 + C2944 + C50531 * C1471 +
                     C2195 * C1464 + C2945 + C2945 + C2190 * C1472) *
                        C50689 * C2194 +
                    (C2197 * C808 + C2946 + C2946 + C50531 * C818 +
                     C2195 * C807 + C2947 + C2947 + C2190 * C817) *
                        C50689 * C2193 +
                    (C2197 * C412 + C2948 + C2948 + C50531 * C432 +
                     C2195 * C413 + C2949 + C2949 + C2190 * C433) *
                        C50689 * C2192) *
                       C50655) *
                      C50575 * C560)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 +
                    C148 + C148 + C106 * C140 + C121 * C127 + C149 + C149 +
                    C107 * C141 + C123 * C128 + C150 + C150 + C108 * C142) *
                       C50689 * C50677 * C50801 -
                   (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 +
                    C444 + C444 + C107 * C433 + C119 * C414 + C445 + C445 +
                    C106 * C434 + C117 * C415 + C446 + C446 + C105 * C435) *
                       C50689 * C50677 * C50655) *
                      C50575 * C50843 +
                  ((C117 * C414 + C451 + C451 + C105 * C434 + C119 * C413 +
                    C452 + C452 + C106 * C433 + C121 * C412 + C453 + C453 +
                    C107 * C432 + C123 * C420 + C454 + C454 + C108 * C440) *
                       C50689 * C50677 * C50655 -
                   (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 +
                    C152 + C152 + C107 * C142 + C119 * C127 + C153 + C153 +
                    C106 * C141 + C117 * C126 + C154 + C154 + C105 * C140) *
                       C50689 * C50677 * C50801) *
                      C50575 * C50844 +
                  ((C117 * C127 + C155 + C155 + C105 * C141 + C119 * C128 +
                    C156 + C156 + C106 * C142 + C121 * C129 + C157 + C157 +
                    C107 * C143 + C123 * C130 + C158 + C158 + C108 * C144) *
                       C50689 * C50677 * C50801 -
                   (C123 * C668 + C672 + C672 + C108 * C670 + C121 * C420 +
                    C673 + C673 + C107 * C440 + C119 * C412 + C674 + C674 +
                    C106 * C432 + C117 * C413 + C675 + C675 + C105 * C433) *
                       C50689 * C50677 * C50655) *
                      C50575 * C560)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 +
                     C2197 * C126 + C2201 + C2201 + C50531 * C140) *
                        C5132 +
                    (C5497 + C5498) * C5133 + C5509 * C5134) *
                       C50677 * C50801 -
                   ((C5501 + C5502) * C5134 + (C5500 + C5499) * C5133 +
                    (C5498 + C5497) * C5132) *
                       C50677 * C50655) *
                      C50575 * C50843 +
                  (((C5503 + C5504) * C5132 + (C5505 + C5506) * C5133 +
                    (C5507 + C5508) * C5134) *
                       C50677 * C50655 -
                   (C5510 * C5134 + (C5504 + C5503) * C5133 +
                    (C2197 * C127 + C2210 + C2210 + C50531 * C141 +
                     C2195 * C126 + C2211 + C2211 + C2190 * C140) *
                        C5132) *
                       C50677 * C50801) *
                      C50575 * C50844 +
                  (((C2195 * C127 + C2212 + C2212 + C2190 * C141 +
                     C2197 * C128 + C2213 + C2213 + C50531 * C142) *
                        C5132 +
                    (C5823 + C5824) * C5133 + (C5825 + C5826) * C5134) *
                       C50677 * C50801 -
                   ((C2197 * C1747 + C5813 + C5813 + C50531 * C1755 +
                     C2195 * C1748 + C5814 + C5814 + C2190 * C1756) *
                        C5134 +
                    (C5826 + C5825) * C5133 + (C5824 + C5823) * C5132) *
                       C50677 * C50655) *
                      C50575 * C560)) /
                    (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 +
            C148 + C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 +
            C123 * C128 + C150 + C150 + C108 * C142) *
               C50689 * C50677 * C50591 * C260 -
           (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 + C297 +
            C297 + C107 * C286 + C119 * C267 + C298 + C298 + C106 * C287 +
            C117 * C268 + C299 + C299 + C105 * C288) *
               C50689 * C50677 * C50591 * C261 +
           (C117 * C269 + C300 + C300 + C105 * C289 + C119 * C270 + C301 +
            C301 + C106 * C290 + C121 * C271 + C302 + C302 + C107 * C291 +
            C123 * C272 + C303 + C303 + C108 * C292) *
               C50689 * C50677 * C50591 * C262) *
              C263 +
          ((C117 * C267 + C304 + C304 + C105 * C287 + C119 * C266 + C305 +
            C305 + C106 * C286 + C121 * C265 + C306 + C306 + C107 * C285 +
            C123 * C273 + C307 + C307 + C108 * C293) *
               C50689 * C50677 * C50591 * C261 -
           (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 + C152 +
            C152 + C107 * C142 + C119 * C127 + C153 + C153 + C106 * C141 +
            C117 * C126 + C154 + C154 + C105 * C140) *
               C50689 * C50677 * C50591 * C260 -
           (C123 * C274 + C308 + C308 + C108 * C294 + C121 * C272 + C309 +
            C309 + C107 * C292 + C119 * C271 + C310 + C310 + C106 * C291 +
            C117 * C270 + C311 + C311 + C105 * C290) *
               C50689 * C50677 * C50591 * C262) *
              C50562)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 + C148 +
           C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 + C123 * C128 +
           C150 + C150 + C108 * C142) *
              C50689 * C50677 * C50591 * C50575 * C113 -
          (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 + C152 + C152 +
           C107 * C142 + C119 * C127 + C153 + C153 + C106 * C141 + C117 * C126 +
           C154 + C154 + C105 * C140) *
              C50689 * C50677 * C50591 * C50575 * C114 +
          (C117 * C127 + C155 + C155 + C105 * C141 + C119 * C128 + C156 + C156 +
           C106 * C142 + C121 * C129 + C157 + C157 + C107 * C143 + C123 * C130 +
           C158 + C158 + C108 * C144) *
              C50689 * C50677 * C50591 * C50575 * C115 -
          (C123 * C131 + C159 + C159 + C108 * C145 + C121 * C130 + C160 + C160 +
           C107 * C144 + C119 * C129 + C161 + C161 + C106 * C143 + C117 * C128 +
           C162 + C162 + C105 * C142) *
              C50689 * C50677 * C50591 * C50575 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 + C2201 +
            C2201 + C50531 * C140) *
               C50689 * C2192 +
           (C2195 * C268 + C2202 + C2202 + C2190 * C288 + C2197 * C267 + C2203 +
            C2203 + C50531 * C287) *
               C50689 * C2193 +
           (C2195 * C269 + C2204 + C2204 + C2190 * C289 + C2197 * C270 + C2205 +
            C2205 + C50531 * C290) *
               C50689 * C2194) *
              C50591 * C50575 * C113 -
          ((C2197 * C271 + C2206 + C2206 + C50531 * C291 + C2195 * C270 +
            C2207 + C2207 + C2190 * C290) *
               C50689 * C2194 +
           (C2197 * C266 + C2208 + C2208 + C50531 * C286 + C2195 * C267 +
            C2209 + C2209 + C2190 * C287) *
               C50689 * C2193 +
           (C2197 * C127 + C2210 + C2210 + C50531 * C141 + C2195 * C126 +
            C2211 + C2211 + C2190 * C140) *
               C50689 * C2192) *
              C50591 * C50575 * C114 +
          ((C2195 * C127 + C2212 + C2212 + C2190 * C141 + C2197 * C128 + C2213 +
            C2213 + C50531 * C142) *
               C50689 * C2192 +
           (C2195 * C266 + C2214 + C2214 + C2190 * C286 + C2197 * C265 + C2215 +
            C2215 + C50531 * C285) *
               C50689 * C2193 +
           (C2195 * C271 + C2216 + C2216 + C2190 * C291 + C2197 * C272 + C2217 +
            C2217 + C50531 * C292) *
               C50689 * C2194) *
              C50591 * C50575 * C115 -
          ((C2197 * C274 + C2218 + C2218 + C50531 * C294 + C2195 * C272 +
            C2219 + C2219 + C2190 * C292) *
               C50689 * C2194 +
           (C2197 * C273 + C2220 + C2220 + C50531 * C293 + C2195 * C265 +
            C2221 + C2221 + C2190 * C285) *
               C50689 * C2193 +
           (C2197 * C129 + C2222 + C2222 + C50531 * C143 + C2195 * C128 +
            C2223 + C2223 + C2190 * C142) *
               C50689 * C2192) *
              C50591 * C50575 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
             C2201 + C2201 + C50531 * C140) *
                C50689 * C2192 +
            (C2435 + C2436) * C50689 * C2193 + C2449 * C2194) *
               C50591 * C260 -
           ((C2439 + C2440) * C50689 * C2194 +
            (C2438 + C2437) * C50689 * C2193 +
            (C2436 + C2435) * C50689 * C2192) *
               C50591 * C261 +
           (C2449 * C2192 + (C2440 + C2439) * C50689 * C2193 +
            (C2195 * C2369 + C2393 + C2393 + C2190 * C2375 + C2197 * C2370 +
             C2394 + C2394 + C50531 * C2376) *
                C50689 * C2194) *
               C50591 * C262) *
              C263 +
          (((C2441 + C2442) * C50689 * C2192 +
            (C2443 + C2444) * C50689 * C2193 +
            (C2445 + C2446) * C50689 * C2194) *
               C50591 * C261 -
           (C2450 * C2194 + (C2442 + C2441) * C50689 * C2193 +
            (C2197 * C127 + C2210 + C2210 + C50531 * C141 + C2195 * C126 +
             C2211 + C2211 + C2190 * C140) *
                C50689 * C2192) *
               C50591 * C260 -
           ((C2197 * C2371 + C2409 + C2409 + C50531 * C2377 + C2195 * C2370 +
             C2410 + C2410 + C2190 * C2376) *
                C50689 * C2194 +
            (C2446 + C2445) * C50689 * C2193 + C2450 * C2192) *
               C50591 * C262) *
              C50562)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 + C2201 +
            C2201 + C50531 * C140) *
               C5132 +
           (C2195 * C415 + C2611 + C2611 + C2190 * C435 + C2197 * C414 + C2610 +
            C2610 + C50531 * C434) *
               C5133 +
           (C2195 * C416 + C2612 + C2612 + C2190 * C436 + C2197 * C417 + C2613 +
            C2613 + C50531 * C437) *
               C5134) *
              C50677 * C50591 * C50575 * C113 -
          ((C2197 * C418 + C2628 + C2628 + C50531 * C438 + C2195 * C417 +
            C2629 + C2629 + C2190 * C437) *
               C5134 +
           (C2197 * C413 + C2619 + C2619 + C50531 * C433 + C2195 * C414 +
            C2618 + C2618 + C2190 * C434) *
               C5133 +
           (C2197 * C127 + C2210 + C2210 + C50531 * C141 + C2195 * C126 +
            C2211 + C2211 + C2190 * C140) *
               C5132) *
              C50677 * C50591 * C50575 * C114 +
          ((C2195 * C127 + C2212 + C2212 + C2190 * C141 + C2197 * C128 + C2213 +
            C2213 + C50531 * C142) *
               C5132 +
           (C2195 * C413 + C2949 + C2949 + C2190 * C433 + C2197 * C412 + C2948 +
            C2948 + C50531 * C432) *
               C5133 +
           (C2195 * C418 + C5136 + C5136 + C2190 * C438 + C2197 * C419 + C5137 +
            C5137 + C50531 * C439) *
               C5134) *
              C50677 * C50591 * C50575 * C115 -
          ((C2197 * C421 + C5138 + C5138 + C50531 * C441 + C2195 * C419 +
            C5139 + C5139 + C2190 * C439) *
               C5134 +
           (C2197 * C420 + C5140 + C5140 + C50531 * C440 + C2195 * C412 +
            C5141 + C5141 + C2190 * C432) *
               C5133 +
           (C2197 * C129 + C2222 + C2222 + C50531 * C143 + C2195 * C128 +
            C2223 + C2223 + C2190 * C142) *
               C5132) *
              C50677 * C50591 * C50575 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
             C2201 + C2201 + C50531 * C140) *
                C5132 +
            (C2195 * C415 + C2611 + C2611 + C2190 * C435 + C2197 * C414 +
             C2610 + C2610 + C50531 * C434) *
                C5133 +
            (C2195 * C416 + C2612 + C2612 + C2190 * C436 + C2197 * C417 +
             C2613 + C2613 + C50531 * C437) *
                C5134) *
               C50677 * C50591 * C260 -
           ((C3632 + C3631) * C5134 + (C3191 + C3192) * C5133 +
            (C2436 + C2435) * C5132) *
               C50677 * C50591 * C261 +
           (C2447 * C5132 + (C3190 + C3189) * C5133 + (C3633 + C3634) * C5134) *
               C50677 * C50591 * C262) *
              C263 +
          (((C2441 + C2442) * C5132 + (C3193 + C3194) * C5133 +
            (C2195 * C1118 + C2627 + C2627 + C2190 * C1126 + C2197 * C1117 +
             C2626 + C2626 + C50531 * C1125) *
                C5134) *
               C50677 * C50591 * C261 -
           ((C2197 * C418 + C2628 + C2628 + C50531 * C438 + C2195 * C417 +
             C2629 + C2629 + C2190 * C437) *
                C5134 +
            (C2197 * C413 + C2619 + C2619 + C50531 * C433 + C2195 * C414 +
             C2618 + C2618 + C2190 * C434) *
                C5133 +
            (C2197 * C127 + C2210 + C2210 + C50531 * C141 + C2195 * C126 +
             C2211 + C2211 + C2190 * C140) *
                C5132) *
               C50677 * C50591 * C260 -
           ((C2197 * C2598 + C2624 + C2624 + C50531 * C2604 + C2195 * C2597 +
             C2625 + C2625 + C2190 * C2603) *
                C5134 +
            (C3196 + C3195) * C5133 + C2448 * C5132) *
               C50677 * C50591 * C262) *
              C50562)) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
             C2201 + C2201 + C50531 * C140) *
                C50689 * C2192 +
            (C2435 + C2436) * C50689 * C2193 + C2449 * C2194) *
               C50591 * C50845 -
           (C3454 * C2194 + (C2438 + C2437) * C50689 * C2193 +
            (C2436 + C2435) * C50689 * C2192) *
               C50591 * C50846 +
           (C2449 * C2192 + (C2440 + C2439) * C50689 * C2193 +
            (C3459 + C3460) * C50689 * C2194) *
               C50591 * C1232) *
              C50792 +
          (((C2441 + C2442) * C50689 * C2192 +
            (C2443 + C2444) * C50689 * C2193 +
            (C2445 + C2446) * C50689 * C2194) *
               C50591 * C50846 -
           (C2450 * C2194 + (C2442 + C2441) * C50689 * C2193 +
            (C2197 * C127 + C2210 + C2210 + C50531 * C141 + C2195 * C126 +
             C2211 + C2211 + C2190 * C140) *
                C50689 * C2192) *
               C50591 * C50845 -
           ((C2197 * C2371 + C2409 + C2409 + C50531 * C2377 + C2195 * C2370 +
             C2410 + C2410 + C2190 * C2376) *
                C50689 * C2194 +
            (C2446 + C2445) * C50689 * C2193 + C2450 * C2192) *
               C50591 * C1232) *
              C50562)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 +
            C148 + C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 +
            C123 * C128 + C150 + C150 + C108 * C142) *
               C50689 * C50677 * C50591 * C50845 -
           (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 + C297 +
            C297 + C107 * C286 + C119 * C267 + C298 + C298 + C106 * C287 +
            C117 * C268 + C299 + C299 + C105 * C288) *
               C50689 * C50677 * C50591 * C50846 +
           (C117 * C269 + C300 + C300 + C105 * C289 + C119 * C270 + C301 +
            C301 + C106 * C290 + C121 * C271 + C302 + C302 + C107 * C291 +
            C123 * C272 + C303 + C303 + C108 * C292) *
               C50689 * C50677 * C50591 * C1232) *
              C50792 +
          ((C117 * C267 + C304 + C304 + C105 * C287 + C119 * C266 + C305 +
            C305 + C106 * C286 + C121 * C265 + C306 + C306 + C107 * C285 +
            C123 * C273 + C307 + C307 + C108 * C293) *
               C50689 * C50677 * C50591 * C50846 -
           (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 + C152 +
            C152 + C107 * C142 + C119 * C127 + C153 + C153 + C106 * C141 +
            C117 * C126 + C154 + C154 + C105 * C140) *
               C50689 * C50677 * C50591 * C50845 -
           (C123 * C274 + C308 + C308 + C108 * C294 + C121 * C272 + C309 +
            C309 + C107 * C292 + C119 * C271 + C310 + C310 + C106 * C291 +
            C117 * C270 + C311 + C311 + C105 * C290) *
               C50689 * C50677 * C50591 * C1232) *
              C50562)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
             C2201 + C2201 + C50531 * C140) *
                C5132 +
            (C5497 + C5498) * C5133 + C5509 * C5134) *
               C50677 * C50591 * C50845 -
           (C6436 * C5134 + (C3191 + C3192) * C5133 + (C2436 + C2435) * C5132) *
               C50677 * C50591 * C50846 +
           (C2447 * C5132 + (C3190 + C3189) * C5133 + (C3633 + C3634) * C5134) *
               C50677 * C50591 * C1232) *
              C50792 +
          (((C2441 + C2442) * C5132 + (C3193 + C3194) * C5133 +
            (C6034 + C6035) * C5134) *
               C50677 * C50591 * C50846 -
           (C5510 * C5134 + (C5504 + C5503) * C5133 +
            (C2197 * C127 + C2210 + C2210 + C50531 * C141 + C2195 * C126 +
             C2211 + C2211 + C2190 * C140) *
                C5132) *
               C50677 * C50591 * C50845 -
           ((C2197 * C2598 + C2624 + C2624 + C50531 * C2604 + C2195 * C2597 +
             C2625 + C2625 + C2190 * C2603) *
                C5134 +
            (C3196 + C3195) * C5133 + C2448 * C5132) *
               C50677 * C50591 * C1232) *
              C50562)) /
            (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
             C2201 + C2201 + C50531 * C140) *
                C50689 * C2192 +
            (C2435 + C2436) * C50689 * C2193 + C2449 * C2194) *
               C50801 -
           (C4134 * C2194 + (C3191 + C3192) * C50689 * C2193 +
            (C2197 * C414 + C2610 + C2610 + C50531 * C434 + C2195 * C415 +
             C2611 + C2611 + C2190 * C435) *
                C50689 * C2192) *
               C50655) *
              C50845 +
          (((C3192 + C3191) * C50689 * C2192 +
            (C3190 + C3189) * C50689 * C2193 +
            (C4139 + C4140) * C50689 * C2194) *
               C50655 -
           (C3454 * C2194 + (C2438 + C2437) * C50689 * C2193 +
            (C2436 + C2435) * C50689 * C2192) *
               C50801) *
              C50846 +
          ((C2449 * C2192 + (C2440 + C2439) * C50689 * C2193 +
            (C3459 + C3460) * C50689 * C2194) *
               C50801 -
           ((C2197 * C4120 + C4132 + C4132 + C50531 * C4124 + C2195 * C4121 +
             C4133 + C4133 + C2190 * C4125) *
                C50689 * C2194 +
            (C4140 + C4139) * C50689 * C2193 + C4134 * C2192) *
               C50655) *
              C1232) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 +
            C148 + C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 +
            C123 * C128 + C150 + C150 + C108 * C142) *
               C50689 * C50677 * C50801 -
           (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 + C444 +
            C444 + C107 * C433 + C119 * C414 + C445 + C445 + C106 * C434 +
            C117 * C415 + C446 + C446 + C105 * C435) *
               C50689 * C50677 * C50655) *
              C50845 +
          ((C117 * C805 + C821 + C821 + C105 * C815 + C119 * C806 + C822 +
            C822 + C106 * C816 + C121 * C807 + C823 + C823 + C107 * C817 +
            C123 * C808 + C824 + C824 + C108 * C818) *
               C50689 * C50677 * C50655 -
           (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 + C297 +
            C297 + C107 * C286 + C119 * C267 + C298 + C298 + C106 * C287 +
            C117 * C268 + C299 + C299 + C105 * C288) *
               C50689 * C50677 * C50801) *
              C50846 +
          ((C117 * C269 + C300 + C300 + C105 * C289 + C119 * C270 + C301 +
            C301 + C106 * C290 + C121 * C271 + C302 + C302 + C107 * C291 +
            C123 * C272 + C303 + C303 + C108 * C292) *
               C50689 * C50677 * C50801 -
           (C123 * C1463 + C1476 + C1476 + C108 * C1471 + C121 * C1464 + C1477 +
            C1477 + C107 * C1472 + C119 * C1465 + C1478 + C1478 + C106 * C1473 +
            C117 * C1466 + C1479 + C1479 + C105 * C1474) *
               C50689 * C50677 * C50655) *
              C1232) *
         C50556) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
             C2201 + C2201 + C50531 * C140) *
                C5132 +
            (C5497 + C5498) * C5133 + C5509 * C5134) *
               C50677 * C50801 -
           ((C5501 + C5502) * C5134 + (C5500 + C5499) * C5133 +
            (C5498 + C5497) * C5132) *
               C50677 * C50655) *
              C50845 +
          (((C3192 + C3191) * C5132 + (C3631 + C3632) * C5133 +
            (C6443 + C6444) * C5134) *
               C50677 * C50655 -
           (C6436 * C5134 + (C3191 + C3192) * C5133 + (C2436 + C2435) * C5132) *
               C50677 * C50801) *
              C50846 +
          ((C2447 * C5132 + (C3190 + C3189) * C5133 + (C3633 + C3634) * C5134) *
               C50677 * C50801 -
           ((C2197 * C4530 + C4543 + C4543 + C50531 * C4538 + C2195 * C4531 +
             C4544 + C4544 + C2190 * C4539) *
                C5134 +
            (C3634 + C3633) * C5133 + C4127 * C5132) *
               C50677 * C50655) *
              C1232) *
         C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 +
                C148 + C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 +
                C123 * C128 + C150 + C150 + C108 * C142) *
                   C50689 * C50677 * C50591 * C926 -
               (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 + C297 +
                C297 + C107 * C286 + C119 * C267 + C298 + C298 + C106 * C287 +
                C117 * C268 + C299 + C299 + C105 * C288) *
                   C50689 * C50677 * C50591 * C50627) *
                  C928 +
              ((C117 * C267 + C304 + C304 + C105 * C287 + C119 * C266 + C305 +
                C305 + C106 * C286 + C121 * C265 + C306 + C306 + C107 * C285 +
                C123 * C273 + C307 + C307 + C108 * C293) *
                   C50689 * C50677 * C50591 * C50627 -
               (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 + C152 +
                C152 + C107 * C142 + C119 * C127 + C153 + C153 + C106 * C141 +
                C117 * C126 + C154 + C154 + C105 * C140) *
                   C50689 * C50677 * C50591 * C926) *
                  C929 +
              ((C117 * C127 + C155 + C155 + C105 * C141 + C119 * C128 + C156 +
                C156 + C106 * C142 + C121 * C129 + C157 + C157 + C107 * C143 +
                C123 * C130 + C158 + C158 + C108 * C144) *
                   C50689 * C50677 * C50591 * C926 -
               (C123 * C561 + C565 + C565 + C108 * C563 + C121 * C273 + C566 +
                C566 + C107 * C293 + C119 * C265 + C567 + C567 + C106 * C285 +
                C117 * C266 + C568 + C568 + C105 * C286) *
                   C50689 * C50677 * C50591 * C50627) *
                  C930) +
         0.5 * std::pow(Pi, 2.5) *
             ((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 +
               C148 + C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 +
               C123 * C128 + C150 + C150 + C108 * C142) *
                  C50689 * C50677 * C50591 * C997 -
              (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 + C297 +
               C297 + C107 * C286 + C119 * C267 + C298 + C298 + C106 * C287 +
               C117 * C268 + C299 + C299 + C105 * C288) *
                  C50689 * C50677 * C50591 * C998 +
              (C117 * C269 + C300 + C300 + C105 * C289 + C119 * C270 + C301 +
               C301 + C106 * C290 + C121 * C271 + C302 + C302 + C107 * C291 +
               C123 * C272 + C303 + C303 + C108 * C292) *
                  C50689 * C50677 * C50591 * C999 -
              (C123 * C1002 + C1015 + C1015 + C108 * C1010 + C121 * C1003 +
               C1016 + C1016 + C107 * C1011 + C119 * C1004 + C1017 + C1017 +
               C106 * C1012 + C117 * C1005 + C1018 + C1018 + C105 * C1013) *
                  C50689 * C50677 * C50591 * C1000) *
             C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 +
            C148 + C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 +
            C123 * C128 + C150 + C150 + C108 * C142) *
               C50689 * C50677 * C409 -
           (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 + C444 +
            C444 + C107 * C433 + C119 * C414 + C445 + C445 + C106 * C434 +
            C117 * C415 + C446 + C446 + C105 * C435) *
               C50689 * C50677 * C410 +
           (C117 * C416 + C447 + C447 + C105 * C436 + C119 * C417 + C448 +
            C448 + C106 * C437 + C121 * C418 + C449 + C449 + C107 * C438 +
            C123 * C419 + C450 + C450 + C108 * C439) *
               C50689 * C50677 * C411) *
              C926 +
          ((C117 * C805 + C821 + C821 + C105 * C815 + C119 * C806 + C822 +
            C822 + C106 * C816 + C121 * C807 + C823 + C823 + C107 * C817 +
            C123 * C808 + C824 + C824 + C108 * C818) *
               C50689 * C50677 * C410 -
           (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 + C297 +
            C297 + C107 * C286 + C119 * C267 + C298 + C298 + C106 * C287 +
            C117 * C268 + C299 + C299 + C105 * C288) *
               C50689 * C50677 * C409 -
           (C123 * C1116 + C1129 + C1129 + C108 * C1124 + C121 * C1117 + C1130 +
            C1130 + C107 * C1125 + C119 * C1118 + C1131 + C1131 + C106 * C1126 +
            C117 * C1119 + C1132 + C1132 + C105 * C1127) *
               C50689 * C50677 * C411) *
              C50627) *
         C50556) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
             C2201 + C2201 + C50531 * C140) *
                C50689 * C2192 +
            (C2435 + C2436) * C50689 * C2193 + C2449 * C2194) *
               C50591 * C926 -
           ((C2439 + C2440) * C50689 * C2194 +
            (C2438 + C2437) * C50689 * C2193 +
            (C2436 + C2435) * C50689 * C2192) *
               C50591 * C50627) *
              C928 +
          (((C2441 + C2442) * C50689 * C2192 +
            (C2443 + C2444) * C50689 * C2193 +
            (C2445 + C2446) * C50689 * C2194) *
               C50591 * C50627 -
           (C2450 * C2194 + (C2442 + C2441) * C50689 * C2193 +
            (C2197 * C127 + C2210 + C2210 + C50531 * C141 + C2195 * C126 +
             C2211 + C2211 + C2190 * C140) *
                C50689 * C2192) *
               C50591 * C926) *
              C929 +
          (((C2195 * C127 + C2212 + C2212 + C2190 * C141 + C2197 * C128 +
             C2213 + C2213 + C50531 * C142) *
                C50689 * C2192 +
            (C2794 + C2795) * C50689 * C2193 +
            (C2796 + C2797) * C50689 * C2194) *
               C50591 * C926 -
           ((C2197 * C1002 + C2784 + C2784 + C50531 * C1010 + C2195 * C1003 +
             C2785 + C2785 + C2190 * C1011) *
                C50689 * C2194 +
            (C2797 + C2796) * C50689 * C2193 +
            (C2795 + C2794) * C50689 * C2192) *
               C50591 * C50627) *
              C930)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 + C2201 +
            C2201 + C50531 * C140) *
               C50689 * C2192 +
           (C2435 + C2436) * C50689 * C2193 + C2449 * C2194) *
              C50591 * C997 -
          (C3454 * C2194 + (C2438 + C2437) * C50689 * C2193 +
           (C2436 + C2435) * C50689 * C2192) *
              C50591 * C998 +
          (C2449 * C2192 + (C2440 + C2439) * C50689 * C2193 +
           (C3459 + C3460) * C50689 * C2194) *
              C50591 * C999 -
          ((C2197 * C3440 + C3452 + C3452 + C50531 * C3444 + C2195 * C3441 +
            C3453 + C3453 + C2190 * C3445) *
               C50689 * C2194 +
           (C3460 + C3459) * C50689 * C2193 + C3454 * C2192) *
              C50591 * C1000) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
             C2201 + C2201 + C50531 * C140) *
                C50689 * C2192 +
            (C2435 + C2436) * C50689 * C2193 + C2449 * C2194) *
               C409 -
           ((C3189 + C3190) * C50689 * C2194 +
            (C3191 + C3192) * C50689 * C2193 +
            (C2197 * C414 + C2610 + C2610 + C50531 * C434 + C2195 * C415 +
             C2611 + C2611 + C2190 * C435) *
                C50689 * C2192) *
               C410 +
           ((C2195 * C416 + C2612 + C2612 + C2190 * C436 + C2197 * C417 +
             C2613 + C2613 + C50531 * C437) *
                C50689 * C2192 +
            (C3631 + C3632) * C50689 * C2193 +
            (C3633 + C3634) * C50689 * C2194) *
               C411) *
              C926 +
          (((C3192 + C3191) * C50689 * C2192 +
            (C3190 + C3189) * C50689 * C2193 +
            (C2195 * C3143 + C3161 + C3161 + C2190 * C3149 + C2197 * C3144 +
             C3162 + C3162 + C50531 * C3150) *
                C50689 * C2194) *
               C410 -
           (C3454 * C2194 + (C2438 + C2437) * C50689 * C2193 +
            (C2436 + C2435) * C50689 * C2192) *
               C409 -
           ((C2197 * C3606 + C3621 + C3621 + C50531 * C3610 + C2195 * C3607 +
             C3622 + C3622 + C2190 * C3611) *
                C50689 * C2194 +
            (C3634 + C3633) * C50689 * C2193 +
            (C3632 + C3631) * C50689 * C2192) *
               C411) *
              C50627) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
             C2201 + C2201 + C50531 * C140) *
                C5132 +
            (C5497 + C5498) * C5133 + C5509 * C5134) *
               C50677 * C50591 * C926 -
           ((C3632 + C3631) * C5134 + (C3191 + C3192) * C5133 +
            (C2436 + C2435) * C5132) *
               C50677 * C50591 * C50627) *
              C928 +
          (((C2441 + C2442) * C5132 + (C3193 + C3194) * C5133 +
            (C6034 + C6035) * C5134) *
               C50677 * C50591 * C50627 -
           (C5510 * C5134 + (C5504 + C5503) * C5133 +
            (C2197 * C127 + C2210 + C2210 + C50531 * C141 + C2195 * C126 +
             C2211 + C2211 + C2190 * C140) *
                C5132) *
               C50677 * C50591 * C926) *
              C929 +
          (((C2195 * C127 + C2212 + C2212 + C2190 * C141 + C2197 * C128 +
             C2213 + C2213 + C50531 * C142) *
                C5132 +
            (C5823 + C5824) * C5133 + (C5825 + C5826) * C5134) *
               C50677 * C50591 * C926 -
           ((C2197 * C1116 + C5657 + C5657 + C50531 * C1124 + C2195 * C1117 +
             C5658 + C5658 + C2190 * C1125) *
                C5134 +
            (C2197 * C808 + C2946 + C2946 + C50531 * C818 + C2195 * C807 +
             C2947 + C2947 + C2190 * C817) *
                C5133 +
            (C2795 + C2794) * C5132) *
               C50677 * C50591 * C50627) *
              C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 + C2201 +
            C2201 + C50531 * C140) *
               C5132 +
           (C5497 + C5498) * C5133 + C5509 * C5134) *
              C50677 * C50591 * C997 -
          ((C3632 + C3631) * C5134 + (C3191 + C3192) * C5133 +
           (C2436 + C2435) * C5132) *
              C50677 * C50591 * C998 +
          (C2447 * C5132 + (C3190 + C3189) * C5133 + (C3633 + C3634) * C5134) *
              C50677 * C50591 * C999 -
          ((C2197 * C3606 + C3621 + C3621 + C50531 * C3610 + C2195 * C3607 +
            C3622 + C3622 + C2190 * C3611) *
               C5134 +
           (C4140 + C4139) * C5133 + C3447 * C5132) *
              C50677 * C50591 * C1000) *
         C50556) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
             C2201 + C2201 + C50531 * C140) *
                C5132 +
            (C5497 + C5498) * C5133 + C5509 * C5134) *
               C50677 * C409 -
           ((C5501 + C5502) * C5134 + (C5500 + C5499) * C5133 +
            (C5498 + C5497) * C5132) *
               C50677 * C410 +
           (C5509 * C5132 + (C5502 + C5501) * C5133 +
            (C2195 * C5433 + C5455 + C5455 + C2190 * C5439 + C2197 * C5434 +
             C5456 + C5456 + C50531 * C5440) *
                C5134) *
               C50677 * C411) *
              C926 +
          (((C3192 + C3191) * C5132 + (C3631 + C3632) * C5133 +
            (C6443 + C6444) * C5134) *
               C50677 * C410 -
           (C6436 * C5134 + (C3191 + C3192) * C5133 + (C2436 + C2435) * C5132) *
               C50677 * C409 -
           ((C2197 * C6425 + C6437 + C6437 + C50531 * C6429 + C2195 * C6426 +
             C6438 + C6438 + C2190 * C6430) *
                C5134 +
            (C6444 + C6443) * C5133 + C6436 * C5132) *
               C50677 * C411) *
              C50627) *
         C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[38] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C2195 * C125 + C2200 + C2200 + C2190 * C139 +
                      C2197 * C126 + C2201 + C2201 + C50531 * C140) *
                         C50689 * C2192 +
                     (C2435 + C2436) * C50689 * C2193 + C2449 * C2194) *
                        C50801 -
                    ((C3189 + C3190) * C50689 * C2194 +
                     (C3191 + C3192) * C50689 * C2193 +
                     (C2197 * C414 + C2610 + C2610 + C50531 * C434 +
                      C2195 * C415 + C2611 + C2611 + C2190 * C435) *
                         C50689 * C2192) *
                        C50655) *
                       C926 +
                   (((C3192 + C3191) * C50689 * C2192 +
                     (C3190 + C3189) * C50689 * C2193 +
                     (C2195 * C3143 + C3161 + C3161 + C2190 * C3149 +
                      C2197 * C3144 + C3162 + C3162 + C50531 * C3150) *
                         C50689 * C2194) *
                        C50655 -
                    (C3454 * C2194 + (C2438 + C2437) * C50689 * C2193 +
                     (C2436 + C2435) * C50689 * C2192) *
                        C50801) *
                       C50627) *
                      C50792 +
                  ((((C2195 * C414 + C2618 + C2618 + C2190 * C434 +
                      C2197 * C413 + C2619 + C2619 + C50531 * C433) *
                         C50689 * C2192 +
                     (C3193 + C3194) * C50689 * C2193 +
                     (C3195 + C3196) * C50689 * C2194) *
                        C50655 -
                    (C2450 * C2194 + (C2442 + C2441) * C50689 * C2193 +
                     (C2197 * C127 + C2210 + C2210 + C50531 * C141 +
                      C2195 * C126 + C2211 + C2211 + C2190 * C140) *
                         C50689 * C2192) *
                        C50801) *
                       C926 +
                   (((C2441 + C2442) * C50689 * C2192 +
                     (C2443 + C2444) * C50689 * C2193 +
                     (C2445 + C2446) * C50689 * C2194) *
                        C50801 -
                    ((C2197 * C3145 + C3171 + C3171 + C50531 * C3151 +
                      C2195 * C3144 + C3172 + C3172 + C2190 * C3150) *
                         C50689 * C2194 +
                     (C3196 + C3195) * C50689 * C2193 +
                     (C3194 + C3193) * C50689 * C2192) *
                        C50655) *
                       C50627) *
                      C50562)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 +
                     C148 + C148 + C106 * C140 + C121 * C127 + C149 + C149 +
                     C107 * C141 + C123 * C128 + C150 + C150 + C108 * C142) *
                        C50689 * C50677 * C50801 -
                    (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 +
                     C444 + C444 + C107 * C433 + C119 * C414 + C445 + C445 +
                     C106 * C434 + C117 * C415 + C446 + C446 + C105 * C435) *
                        C50689 * C50677 * C50655) *
                       C926 +
                   ((C117 * C805 + C821 + C821 + C105 * C815 + C119 * C806 +
                     C822 + C822 + C106 * C816 + C121 * C807 + C823 + C823 +
                     C107 * C817 + C123 * C808 + C824 + C824 + C108 * C818) *
                        C50689 * C50677 * C50655 -
                    (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 +
                     C297 + C297 + C107 * C286 + C119 * C267 + C298 + C298 +
                     C106 * C287 + C117 * C268 + C299 + C299 + C105 * C288) *
                        C50689 * C50677 * C50801) *
                       C50627) *
                      C50792 +
                  (((C117 * C414 + C451 + C451 + C105 * C434 + C119 * C413 +
                     C452 + C452 + C106 * C433 + C121 * C412 + C453 + C453 +
                     C107 * C432 + C123 * C420 + C454 + C454 + C108 * C440) *
                        C50689 * C50677 * C50655 -
                    (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 +
                     C152 + C152 + C107 * C142 + C119 * C127 + C153 + C153 +
                     C106 * C141 + C117 * C126 + C154 + C154 + C105 * C140) *
                        C50689 * C50677 * C50801) *
                       C926 +
                   ((C117 * C267 + C304 + C304 + C105 * C287 + C119 * C266 +
                     C305 + C305 + C106 * C286 + C121 * C265 + C306 + C306 +
                     C107 * C285 + C123 * C273 + C307 + C307 + C108 * C293) *
                        C50689 * C50677 * C50801 -
                    (C123 * C809 + C825 + C825 + C108 * C819 + C121 * C808 +
                     C826 + C826 + C107 * C818 + C119 * C807 + C827 + C827 +
                     C106 * C817 + C117 * C806 + C828 + C828 + C105 * C816) *
                        C50689 * C50677 * C50655) *
                       C50627) *
                      C50562)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((((C2195 * C125 + C2200 + C2200 + C2190 * C139 +
                      C2197 * C126 + C2201 + C2201 + C50531 * C140) *
                         C5132 +
                     (C5497 + C5498) * C5133 + C5509 * C5134) *
                        C50677 * C50801 -
                    ((C5501 + C5502) * C5134 + (C5500 + C5499) * C5133 +
                     (C5498 + C5497) * C5132) *
                        C50677 * C50655) *
                       C926 +
                   (((C3192 + C3191) * C5132 + (C3631 + C3632) * C5133 +
                     (C6443 + C6444) * C5134) *
                        C50677 * C50655 -
                    (C6436 * C5134 + (C3191 + C3192) * C5133 +
                     (C2436 + C2435) * C5132) *
                        C50677 * C50801) *
                       C50627) *
                      C50792 +
                  ((((C5503 + C5504) * C5132 + (C5505 + C5506) * C5133 +
                     (C5507 + C5508) * C5134) *
                        C50677 * C50655 -
                    (C5510 * C5134 + (C5504 + C5503) * C5133 +
                     (C2197 * C127 + C2210 + C2210 + C50531 * C141 +
                      C2195 * C126 + C2211 + C2211 + C2190 * C140) *
                         C5132) *
                        C50677 * C50801) *
                       C926 +
                   (((C2441 + C2442) * C5132 + (C3193 + C3194) * C5133 +
                     (C6034 + C6035) * C5134) *
                        C50677 * C50801 -
                    ((C2197 * C6020 + C6028 + C6028 + C50531 * C6022 +
                      C2195 * C4532 + C6029 + C6029 + C2190 * C4540) *
                         C5134 +
                     (C6035 + C6034) * C5133 + (C3194 + C3193) * C5132) *
                        C50677 * C50655) *
                       C50627) *
                      C50562)) /
                    (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 + C148 +
           C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 + C123 * C128 +
           C150 + C150 + C108 * C142) *
              C50689 * C50677 * C50591 * C997 -
          (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 + C297 + C297 +
           C107 * C286 + C119 * C267 + C298 + C298 + C106 * C287 + C117 * C268 +
           C299 + C299 + C105 * C288) *
              C50689 * C50677 * C50591 * C998 +
          (C117 * C269 + C300 + C300 + C105 * C289 + C119 * C270 + C301 + C301 +
           C106 * C290 + C121 * C271 + C302 + C302 + C107 * C291 + C123 * C272 +
           C303 + C303 + C108 * C292) *
              C50689 * C50677 * C50591 * C999 -
          (C123 * C1002 + C1015 + C1015 + C108 * C1010 + C121 * C1003 + C1016 +
           C1016 + C107 * C1011 + C119 * C1004 + C1017 + C1017 + C106 * C1012 +
           C117 * C1005 + C1018 + C1018 + C105 * C1013) *
              C50689 * C50677 * C50591 * C1000) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 +
            C148 + C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 +
            C123 * C128 + C150 + C150 + C108 * C142) *
               C50689 * C50677 * C50591 * C926 -
           (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 + C297 +
            C297 + C107 * C286 + C119 * C267 + C298 + C298 + C106 * C287 +
            C117 * C268 + C299 + C299 + C105 * C288) *
               C50689 * C50677 * C50591 * C50627) *
              C928 +
          ((C117 * C267 + C304 + C304 + C105 * C287 + C119 * C266 + C305 +
            C305 + C106 * C286 + C121 * C265 + C306 + C306 + C107 * C285 +
            C123 * C273 + C307 + C307 + C108 * C293) *
               C50689 * C50677 * C50591 * C50627 -
           (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 + C152 +
            C152 + C107 * C142 + C119 * C127 + C153 + C153 + C106 * C141 +
            C117 * C126 + C154 + C154 + C105 * C140) *
               C50689 * C50677 * C50591 * C926) *
              C929 +
          ((C117 * C127 + C155 + C155 + C105 * C141 + C119 * C128 + C156 +
            C156 + C106 * C142 + C121 * C129 + C157 + C157 + C107 * C143 +
            C123 * C130 + C158 + C158 + C108 * C144) *
               C50689 * C50677 * C50591 * C926 -
           (C123 * C561 + C565 + C565 + C108 * C563 + C121 * C273 + C566 +
            C566 + C107 * C293 + C119 * C265 + C567 + C567 + C106 * C285 +
            C117 * C266 + C568 + C568 + C105 * C286) *
               C50689 * C50677 * C50591 * C50627) *
              C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
             C2201 + C2201 + C50531 * C140) *
                C50689 * C2192 +
            (C2435 + C2436) * C50689 * C2193 + C2449 * C2194) *
               C50591 * C926 -
           ((C2439 + C2440) * C50689 * C2194 +
            (C2438 + C2437) * C50689 * C2193 +
            (C2436 + C2435) * C50689 * C2192) *
               C50591 * C50627) *
              C928 +
          (((C2441 + C2442) * C50689 * C2192 +
            (C2443 + C2444) * C50689 * C2193 +
            (C2445 + C2446) * C50689 * C2194) *
               C50591 * C50627 -
           (C2450 * C2194 + (C2442 + C2441) * C50689 * C2193 +
            (C2197 * C127 + C2210 + C2210 + C50531 * C141 + C2195 * C126 +
             C2211 + C2211 + C2190 * C140) *
                C50689 * C2192) *
               C50591 * C926) *
              C929 +
          (((C2195 * C127 + C2212 + C2212 + C2190 * C141 + C2197 * C128 +
             C2213 + C2213 + C50531 * C142) *
                C50689 * C2192 +
            (C2794 + C2795) * C50689 * C2193 +
            (C2796 + C2797) * C50689 * C2194) *
               C50591 * C926 -
           ((C2197 * C1002 + C2784 + C2784 + C50531 * C1010 + C2195 * C1003 +
             C2785 + C2785 + C2190 * C1011) *
                C50689 * C2194 +
            (C2797 + C2796) * C50689 * C2193 +
            (C2795 + C2794) * C50689 * C2192) *
               C50591 * C50627) *
              C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 + C2201 +
            C2201 + C50531 * C140) *
               C50689 * C2192 +
           (C2435 + C2436) * C50689 * C2193 + C2449 * C2194) *
              C50591 * C997 -
          (C3454 * C2194 + (C2438 + C2437) * C50689 * C2193 +
           (C2436 + C2435) * C50689 * C2192) *
              C50591 * C998 +
          (C2449 * C2192 + (C2440 + C2439) * C50689 * C2193 +
           (C3459 + C3460) * C50689 * C2194) *
              C50591 * C999 -
          ((C2197 * C3440 + C3452 + C3452 + C50531 * C3444 + C2195 * C3441 +
            C3453 + C3453 + C2190 * C3445) *
               C50689 * C2194 +
           (C3460 + C3459) * C50689 * C2193 + C3454 * C2192) *
              C50591 * C1000) *
         C50556) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
             C2201 + C2201 + C50531 * C140) *
                C5132 +
            (C5497 + C5498) * C5133 + C5509 * C5134) *
               C50677 * C50591 * C926 -
           ((C3632 + C3631) * C5134 + (C3191 + C3192) * C5133 +
            (C2436 + C2435) * C5132) *
               C50677 * C50591 * C50627) *
              C928 +
          (((C2441 + C2442) * C5132 + (C3193 + C3194) * C5133 +
            (C6034 + C6035) * C5134) *
               C50677 * C50591 * C50627 -
           (C5510 * C5134 + (C5504 + C5503) * C5133 +
            (C2197 * C127 + C2210 + C2210 + C50531 * C141 + C2195 * C126 +
             C2211 + C2211 + C2190 * C140) *
                C5132) *
               C50677 * C50591 * C926) *
              C929 +
          (((C2195 * C127 + C2212 + C2212 + C2190 * C141 + C2197 * C128 +
             C2213 + C2213 + C50531 * C142) *
                C5132 +
            (C5823 + C5824) * C5133 + (C5825 + C5826) * C5134) *
               C50677 * C50591 * C926 -
           ((C2197 * C1116 + C5657 + C5657 + C50531 * C1124 + C2195 * C1117 +
             C5658 + C5658 + C2190 * C1125) *
                C5134 +
            (C2197 * C808 + C2946 + C2946 + C50531 * C818 + C2195 * C807 +
             C2947 + C2947 + C2190 * C817) *
                C5133 +
            (C2795 + C2794) * C5132) *
               C50677 * C50591 * C50627) *
              C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 + C2201 +
            C2201 + C50531 * C140) *
               C5132 +
           (C5497 + C5498) * C5133 + C5509 * C5134) *
              C50677 * C50591 * C997 -
          ((C3632 + C3631) * C5134 + (C3191 + C3192) * C5133 +
           (C2436 + C2435) * C5132) *
              C50677 * C50591 * C998 +
          (C2447 * C5132 + (C3190 + C3189) * C5133 + (C3633 + C3634) * C5134) *
              C50677 * C50591 * C999 -
          ((C2197 * C3606 + C3621 + C3621 + C50531 * C3610 + C2195 * C3607 +
            C3622 + C3622 + C2190 * C3611) *
               C5134 +
           (C4140 + C4139) * C5133 + C3447 * C5132) *
              C50677 * C50591 * C1000) *
         C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[40] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C2195 * C125 + C2200 + C2200 + C2190 * C139 +
                      C2197 * C126 + C2201 + C2201 + C50531 * C140) *
                         C50689 * C2192 +
                     (C2435 + C2436) * C50689 * C2193 + C2449 * C2194) *
                        C1577 -
                    (C4134 * C2194 + (C3191 + C3192) * C50689 * C2193 +
                     (C2197 * C414 + C2610 + C2610 + C50531 * C434 +
                      C2195 * C415 + C2611 + C2611 + C2190 * C435) *
                         C50689 * C2192) *
                        C50655) *
                       C50800 +
                   (((C3192 + C3191) * C50689 * C2192 +
                     (C3190 + C3189) * C50689 * C2193 +
                     (C4139 + C4140) * C50689 * C2194) *
                        C50655 -
                    (C3454 * C2194 + (C2438 + C2437) * C50689 * C2193 +
                     (C2436 + C2435) * C50689 * C2192) *
                        C1577) *
                       C50627) *
                      C50792 +
                  ((((C2195 * C414 + C2618 + C2618 + C2190 * C434 +
                      C2197 * C413 + C2619 + C2619 + C50531 * C433) *
                         C50689 * C2192 +
                     (C3193 + C3194) * C50689 * C2193 +
                     (C3195 + C3196) * C50689 * C2194) *
                        C50655 -
                    (C2450 * C2194 + (C2442 + C2441) * C50689 * C2193 +
                     (C2197 * C127 + C2210 + C2210 + C50531 * C141 +
                      C2195 * C126 + C2211 + C2211 + C2190 * C140) *
                         C50689 * C2192) *
                        C1577) *
                       C50800 +
                   (((C2441 + C2442) * C50689 * C2192 +
                     (C2443 + C2444) * C50689 * C2193 +
                     (C2445 + C2446) * C50689 * C2194) *
                        C1577 -
                    ((C2197 * C3145 + C3171 + C3171 + C50531 * C3151 +
                      C2195 * C3144 + C3172 + C3172 + C2190 * C3150) *
                         C50689 * C2194 +
                     (C3196 + C3195) * C50689 * C2193 +
                     (C3194 + C3193) * C50689 * C2192) *
                        C50655) *
                       C50627) *
                      C50562)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 +
                     C148 + C148 + C106 * C140 + C121 * C127 + C149 + C149 +
                     C107 * C141 + C123 * C128 + C150 + C150 + C108 * C142) *
                        C50689 * C50677 * C1577 -
                    (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 +
                     C444 + C444 + C107 * C433 + C119 * C414 + C445 + C445 +
                     C106 * C434 + C117 * C415 + C446 + C446 + C105 * C435) *
                        C50689 * C50677 * C50655) *
                       C50800 +
                   ((C117 * C805 + C821 + C821 + C105 * C815 + C119 * C806 +
                     C822 + C822 + C106 * C816 + C121 * C807 + C823 + C823 +
                     C107 * C817 + C123 * C808 + C824 + C824 + C108 * C818) *
                        C50689 * C50677 * C50655 -
                    (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 +
                     C297 + C297 + C107 * C286 + C119 * C267 + C298 + C298 +
                     C106 * C287 + C117 * C268 + C299 + C299 + C105 * C288) *
                        C50689 * C50677 * C1577) *
                       C50627) *
                      C50792 +
                  (((C117 * C414 + C451 + C451 + C105 * C434 + C119 * C413 +
                     C452 + C452 + C106 * C433 + C121 * C412 + C453 + C453 +
                     C107 * C432 + C123 * C420 + C454 + C454 + C108 * C440) *
                        C50689 * C50677 * C50655 -
                    (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 +
                     C152 + C152 + C107 * C142 + C119 * C127 + C153 + C153 +
                     C106 * C141 + C117 * C126 + C154 + C154 + C105 * C140) *
                        C50689 * C50677 * C1577) *
                       C50800 +
                   ((C117 * C267 + C304 + C304 + C105 * C287 + C119 * C266 +
                     C305 + C305 + C106 * C286 + C121 * C265 + C306 + C306 +
                     C107 * C285 + C123 * C273 + C307 + C307 + C108 * C293) *
                        C50689 * C50677 * C1577 -
                    (C123 * C809 + C825 + C825 + C108 * C819 + C121 * C808 +
                     C826 + C826 + C107 * C818 + C119 * C807 + C827 + C827 +
                     C106 * C817 + C117 * C806 + C828 + C828 + C105 * C816) *
                        C50689 * C50677 * C50655) *
                       C50627) *
                      C50562)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((((C2195 * C125 + C2200 + C2200 + C2190 * C139 +
                      C2197 * C126 + C2201 + C2201 + C50531 * C140) *
                         C5132 +
                     (C5497 + C5498) * C5133 + C5509 * C5134) *
                        C50677 * C1577 -
                    (C7327 * C5134 + (C5500 + C5499) * C5133 +
                     (C5498 + C5497) * C5132) *
                        C50677 * C50655) *
                       C50800 +
                   (((C3192 + C3191) * C5132 + (C3631 + C3632) * C5133 +
                     (C6443 + C6444) * C5134) *
                        C50677 * C50655 -
                    (C6436 * C5134 + (C3191 + C3192) * C5133 +
                     (C2436 + C2435) * C5132) *
                        C50677 * C1577) *
                       C50627) *
                      C50792 +
                  ((((C5503 + C5504) * C5132 + (C5505 + C5506) * C5133 +
                     (C5507 + C5508) * C5134) *
                        C50677 * C50655 -
                    (C5510 * C5134 + (C5504 + C5503) * C5133 +
                     (C2197 * C127 + C2210 + C2210 + C50531 * C141 +
                      C2195 * C126 + C2211 + C2211 + C2190 * C140) *
                         C5132) *
                        C50677 * C1577) *
                       C50800 +
                   (((C2441 + C2442) * C5132 + (C3193 + C3194) * C5133 +
                     (C6034 + C6035) * C5134) *
                        C50677 * C1577 -
                    ((C2197 * C6020 + C6028 + C6028 + C50531 * C6022 +
                      C2195 * C4532 + C6029 + C6029 + C2190 * C4540) *
                         C5134 +
                     (C6035 + C6034) * C5133 + (C3194 + C3193) * C5132) *
                        C50677 * C50655) *
                       C50627) *
                      C50562)) /
                    (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
             C2201 + C2201 + C50531 * C140) *
                C50689 * C2192 +
            (C2435 + C2436) * C50689 * C2193 + C2449 * C2194) *
               C50847 -
           (C4134 * C2194 + (C3191 + C3192) * C50689 * C2193 +
            (C2197 * C414 + C2610 + C2610 + C50531 * C434 + C2195 * C415 +
             C2611 + C2611 + C2190 * C435) *
                C50689 * C2192) *
               C50848 +
           ((C2195 * C416 + C2612 + C2612 + C2190 * C436 + C2197 * C417 +
             C2613 + C2613 + C50531 * C437) *
                C50689 * C2192 +
            (C3631 + C3632) * C50689 * C2193 +
            (C3633 + C3634) * C50689 * C2194) *
               C1993) *
              C50800 +
          (((C3192 + C3191) * C50689 * C2192 +
            (C3190 + C3189) * C50689 * C2193 +
            (C4139 + C4140) * C50689 * C2194) *
               C50848 -
           (C3454 * C2194 + (C2438 + C2437) * C50689 * C2193 +
            (C2436 + C2435) * C50689 * C2192) *
               C50847 -
           ((C2197 * C3606 + C3621 + C3621 + C50531 * C3610 + C2195 * C3607 +
             C3622 + C3622 + C2190 * C3611) *
                C50689 * C2194 +
            (C3634 + C3633) * C50689 * C2193 +
            (C3632 + C3631) * C50689 * C2192) *
               C1993) *
              C50627) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 +
            C148 + C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 +
            C123 * C128 + C150 + C150 + C108 * C142) *
               C50689 * C50677 * C50847 -
           (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 + C444 +
            C444 + C107 * C433 + C119 * C414 + C445 + C445 + C106 * C434 +
            C117 * C415 + C446 + C446 + C105 * C435) *
               C50689 * C50677 * C50848 +
           (C117 * C416 + C447 + C447 + C105 * C436 + C119 * C417 + C448 +
            C448 + C106 * C437 + C121 * C418 + C449 + C449 + C107 * C438 +
            C123 * C419 + C450 + C450 + C108 * C439) *
               C50689 * C50677 * C1993) *
              C50800 +
          ((C117 * C805 + C821 + C821 + C105 * C815 + C119 * C806 + C822 +
            C822 + C106 * C816 + C121 * C807 + C823 + C823 + C107 * C817 +
            C123 * C808 + C824 + C824 + C108 * C818) *
               C50689 * C50677 * C50848 -
           (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 + C297 +
            C297 + C107 * C286 + C119 * C267 + C298 + C298 + C106 * C287 +
            C117 * C268 + C299 + C299 + C105 * C288) *
               C50689 * C50677 * C50847 -
           (C123 * C1116 + C1129 + C1129 + C108 * C1124 + C121 * C1117 + C1130 +
            C1130 + C107 * C1125 + C119 * C1118 + C1131 + C1131 + C106 * C1126 +
            C117 * C1119 + C1132 + C1132 + C105 * C1127) *
               C50689 * C50677 * C1993) *
              C50627) *
         C50556) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
             C2201 + C2201 + C50531 * C140) *
                C5132 +
            (C5497 + C5498) * C5133 + C5509 * C5134) *
               C50677 * C50847 -
           (C7327 * C5134 + (C5500 + C5499) * C5133 + (C5498 + C5497) * C5132) *
               C50677 * C50848 +
           (C5509 * C5132 + (C5502 + C5501) * C5133 + (C7338 + C7339) * C5134) *
               C50677 * C1993) *
              C50800 +
          (((C3192 + C3191) * C5132 + (C3631 + C3632) * C5133 +
            (C6443 + C6444) * C5134) *
               C50677 * C50848 -
           (C6436 * C5134 + (C3191 + C3192) * C5133 + (C2436 + C2435) * C5132) *
               C50677 * C50847 -
           ((C2197 * C6425 + C6437 + C6437 + C50531 * C6429 + C2195 * C6426 +
             C6438 + C6438 + C2190 * C6430) *
                C5134 +
            (C6444 + C6443) * C5133 + C6436 * C5132) *
               C50677 * C1993) *
              C50627) *
         C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 +
                C148 + C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 +
                C123 * C128 + C150 + C150 + C108 * C142) *
                   C50689 * C50677 * C1577 -
               (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 + C444 +
                C444 + C107 * C433 + C119 * C414 + C445 + C445 + C106 * C434 +
                C117 * C415 + C446 + C446 + C105 * C435) *
                   C50689 * C50677 * C50655) *
                  C50575 * C928 +
              ((C117 * C414 + C451 + C451 + C105 * C434 + C119 * C413 + C452 +
                C452 + C106 * C433 + C121 * C412 + C453 + C453 + C107 * C432 +
                C123 * C420 + C454 + C454 + C108 * C440) *
                   C50689 * C50677 * C50655 -
               (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 + C152 +
                C152 + C107 * C142 + C119 * C127 + C153 + C153 + C106 * C141 +
                C117 * C126 + C154 + C154 + C105 * C140) *
                   C50689 * C50677 * C1577) *
                  C50575 * C929 +
              ((C117 * C127 + C155 + C155 + C105 * C141 + C119 * C128 + C156 +
                C156 + C106 * C142 + C121 * C129 + C157 + C157 + C107 * C143 +
                C123 * C130 + C158 + C158 + C108 * C144) *
                   C50689 * C50677 * C1577 -
               (C123 * C668 + C672 + C672 + C108 * C670 + C121 * C420 + C673 +
                C673 + C107 * C440 + C119 * C412 + C674 + C674 + C106 * C432 +
                C117 * C413 + C675 + C675 + C105 * C433) *
                   C50689 * C50677 * C50655) *
                  C50575 * C930) +
         0.5 * std::pow(Pi, 2.5) *
             (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 +
                C148 + C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 +
                C123 * C128 + C150 + C150 + C108 * C142) *
                   C50689 * C50677 * C1577 -
               (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 + C444 +
                C444 + C107 * C433 + C119 * C414 + C445 + C445 + C106 * C434 +
                C117 * C415 + C446 + C446 + C105 * C435) *
                   C50689 * C50677 * C50655) *
                  C260 +
              ((C117 * C805 + C821 + C821 + C105 * C815 + C119 * C806 + C822 +
                C822 + C106 * C816 + C121 * C807 + C823 + C823 + C107 * C817 +
                C123 * C808 + C824 + C824 + C108 * C818) *
                   C50689 * C50677 * C50655 -
               (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 + C297 +
                C297 + C107 * C286 + C119 * C267 + C298 + C298 + C106 * C287 +
                C117 * C268 + C299 + C299 + C105 * C288) *
                   C50689 * C50677 * C1577) *
                  C261 +
              ((C117 * C269 + C300 + C300 + C105 * C289 + C119 * C270 + C301 +
                C301 + C106 * C290 + C121 * C271 + C302 + C302 + C107 * C291 +
                C123 * C272 + C303 + C303 + C108 * C292) *
                   C50689 * C50677 * C1577 -
               (C123 * C1463 + C1476 + C1476 + C108 * C1471 + C121 * C1464 +
                C1477 + C1477 + C107 * C1472 + C119 * C1465 + C1478 + C1478 +
                C106 * C1473 + C117 * C1466 + C1479 + C1479 + C105 * C1474) *
                   C50689 * C50677 * C50655) *
                  C262) *
             C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 + C148 +
           C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 + C123 * C128 +
           C150 + C150 + C108 * C142) *
              C50689 * C50677 * C1743 -
          (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 + C444 + C444 +
           C107 * C433 + C119 * C414 + C445 + C445 + C106 * C434 + C117 * C415 +
           C446 + C446 + C105 * C435) *
              C50689 * C50677 * C1744 +
          (C117 * C416 + C447 + C447 + C105 * C436 + C119 * C417 + C448 + C448 +
           C106 * C437 + C121 * C418 + C449 + C449 + C107 * C438 + C123 * C419 +
           C450 + C450 + C108 * C439) *
              C50689 * C50677 * C1745 -
          (C123 * C1747 + C1760 + C1760 + C108 * C1755 + C121 * C1748 + C1761 +
           C1761 + C107 * C1756 + C119 * C1749 + C1762 + C1762 + C106 * C1757 +
           C117 * C1750 + C1763 + C1763 + C105 * C1758) *
              C50689 * C50677 * C1746) *
         C50575 * C50556) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
             C2201 + C2201 + C50531 * C140) *
                C50689 * C2192 +
            (C2435 + C2436) * C50689 * C2193 + C2449 * C2194) *
               C1577 -
           (C4134 * C2194 + (C3191 + C3192) * C50689 * C2193 +
            (C2197 * C414 + C2610 + C2610 + C50531 * C434 + C2195 * C415 +
             C2611 + C2611 + C2190 * C435) *
                C50689 * C2192) *
               C50655) *
              C50575 * C928 +
          (((C2195 * C414 + C2618 + C2618 + C2190 * C434 + C2197 * C413 +
             C2619 + C2619 + C50531 * C433) *
                C50689 * C2192 +
            (C3193 + C3194) * C50689 * C2193 +
            (C3195 + C3196) * C50689 * C2194) *
               C50655 -
           (C2450 * C2194 + (C2442 + C2441) * C50689 * C2193 +
            (C2197 * C127 + C2210 + C2210 + C50531 * C141 + C2195 * C126 +
             C2211 + C2211 + C2190 * C140) *
                C50689 * C2192) *
               C1577) *
              C50575 * C929 +
          (((C2195 * C127 + C2212 + C2212 + C2190 * C141 + C2197 * C128 +
             C2213 + C2213 + C50531 * C142) *
                C50689 * C2192 +
            (C2794 + C2795) * C50689 * C2193 +
            (C2796 + C2797) * C50689 * C2194) *
               C1577 -
           ((C2197 * C1463 + C2944 + C2944 + C50531 * C1471 + C2195 * C1464 +
             C2945 + C2945 + C2190 * C1472) *
                C50689 * C2194 +
            (C2197 * C808 + C2946 + C2946 + C50531 * C818 + C2195 * C807 +
             C2947 + C2947 + C2190 * C817) *
                C50689 * C2193 +
            (C2197 * C412 + C2948 + C2948 + C50531 * C432 + C2195 * C413 +
             C2949 + C2949 + C2190 * C433) *
                C50689 * C2192) *
               C50655) *
              C50575 * C930)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
             C2201 + C2201 + C50531 * C140) *
                C50689 * C2192 +
            (C2435 + C2436) * C50689 * C2193 + C2449 * C2194) *
               C1577 -
           (C4134 * C2194 + (C3191 + C3192) * C50689 * C2193 +
            (C2197 * C414 + C2610 + C2610 + C50531 * C434 + C2195 * C415 +
             C2611 + C2611 + C2190 * C435) *
                C50689 * C2192) *
               C50655) *
              C260 +
          (((C3192 + C3191) * C50689 * C2192 +
            (C3190 + C3189) * C50689 * C2193 +
            (C4139 + C4140) * C50689 * C2194) *
               C50655 -
           (C3454 * C2194 + (C2438 + C2437) * C50689 * C2193 +
            (C2436 + C2435) * C50689 * C2192) *
               C1577) *
              C261 +
          ((C2449 * C2192 + (C2440 + C2439) * C50689 * C2193 +
            (C3459 + C3460) * C50689 * C2194) *
               C1577 -
           ((C2197 * C4120 + C4132 + C4132 + C50531 * C4124 + C2195 * C4121 +
             C4133 + C4133 + C2190 * C4125) *
                C50689 * C2194 +
            (C4140 + C4139) * C50689 * C2193 + C4134 * C2192) *
               C50655) *
              C262) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 + C2201 +
            C2201 + C50531 * C140) *
               C50689 * C2192 +
           (C2435 + C2436) * C50689 * C2193 + C2449 * C2194) *
              C1743 -
          (C4134 * C2194 + (C3191 + C3192) * C50689 * C2193 +
           (C2197 * C414 + C2610 + C2610 + C50531 * C434 + C2195 * C415 +
            C2611 + C2611 + C2190 * C435) *
               C50689 * C2192) *
              C1744 +
          ((C2195 * C416 + C2612 + C2612 + C2190 * C436 + C2197 * C417 + C2613 +
            C2613 + C50531 * C437) *
               C50689 * C2192 +
           (C3631 + C3632) * C50689 * C2193 +
           (C3633 + C3634) * C50689 * C2194) *
              C1745 -
          ((C2197 * C4530 + C4543 + C4543 + C50531 * C4538 + C2195 * C4531 +
            C4544 + C4544 + C2190 * C4539) *
               C50689 * C2194 +
           (C2197 * C4532 + C4545 + C4545 + C50531 * C4540 + C2195 * C4533 +
            C4546 + C4546 + C2190 * C4541) *
               C50689 * C2193 +
           (C2197 * C1749 + C4547 + C4547 + C50531 * C1757 + C2195 * C1750 +
            C4548 + C4548 + C2190 * C1758) *
               C50689 * C2192) *
              C1746) *
         C50575 * C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
             C2201 + C2201 + C50531 * C140) *
                C5132 +
            (C5497 + C5498) * C5133 + C5509 * C5134) *
               C50677 * C1577 -
           ((C5501 + C5502) * C5134 + (C5500 + C5499) * C5133 +
            (C5498 + C5497) * C5132) *
               C50677 * C50655) *
              C50575 * C928 +
          (((C5503 + C5504) * C5132 + (C5505 + C5506) * C5133 +
            (C5507 + C5508) * C5134) *
               C50677 * C50655 -
           (C5510 * C5134 + (C5504 + C5503) * C5133 +
            (C2197 * C127 + C2210 + C2210 + C50531 * C141 + C2195 * C126 +
             C2211 + C2211 + C2190 * C140) *
                C5132) *
               C50677 * C1577) *
              C50575 * C929 +
          (((C2195 * C127 + C2212 + C2212 + C2190 * C141 + C2197 * C128 +
             C2213 + C2213 + C50531 * C142) *
                C5132 +
            (C5823 + C5824) * C5133 + (C5825 + C5826) * C5134) *
               C50677 * C1577 -
           ((C2197 * C1747 + C5813 + C5813 + C50531 * C1755 + C2195 * C1748 +
             C5814 + C5814 + C2190 * C1756) *
                C5134 +
            (C5826 + C5825) * C5133 + (C5824 + C5823) * C5132) *
               C50677 * C50655) *
              C50575 * C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
             C2201 + C2201 + C50531 * C140) *
                C5132 +
            (C5497 + C5498) * C5133 + C5509 * C5134) *
               C50677 * C1577 -
           ((C5501 + C5502) * C5134 + (C5500 + C5499) * C5133 +
            (C5498 + C5497) * C5132) *
               C50677 * C50655) *
              C260 +
          (((C3192 + C3191) * C5132 + (C3631 + C3632) * C5133 +
            (C6443 + C6444) * C5134) *
               C50677 * C50655 -
           (C6436 * C5134 + (C3191 + C3192) * C5133 + (C2436 + C2435) * C5132) *
               C50677 * C1577) *
              C261 +
          ((C2447 * C5132 + (C3190 + C3189) * C5133 + (C3633 + C3634) * C5134) *
               C50677 * C1577 -
           ((C2197 * C4530 + C4543 + C4543 + C50531 * C4538 + C2195 * C4531 +
             C4544 + C4544 + C2190 * C4539) *
                C5134 +
            (C3634 + C3633) * C5133 + C4127 * C5132) *
               C50677 * C50655) *
              C262) *
         C50556) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 + C2201 +
            C2201 + C50531 * C140) *
               C5132 +
           (C5497 + C5498) * C5133 + C5509 * C5134) *
              C50677 * C1743 -
          (C7327 * C5134 + (C5500 + C5499) * C5133 + (C5498 + C5497) * C5132) *
              C50677 * C1744 +
          (C5509 * C5132 + (C5502 + C5501) * C5133 + (C7338 + C7339) * C5134) *
              C50677 * C1745 -
          ((C2197 * C7320 + C7332 + C7332 + C50531 * C7324 + C2195 * C7321 +
            C7333 + C7333 + C2190 * C7325) *
               C5134 +
           (C7339 + C7338) * C5133 + C7327 * C5132) *
              C50677 * C1746) *
         C50575 * C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
             C2201 + C2201 + C50531 * C140) *
                C50689 * C2192 +
            (C2435 + C2436) * C50689 * C2193 + C2449 * C2194) *
               C50847 -
           (C4134 * C2194 + (C3191 + C3192) * C50689 * C2193 +
            (C2197 * C414 + C2610 + C2610 + C50531 * C434 + C2195 * C415 +
             C2611 + C2611 + C2190 * C435) *
                C50689 * C2192) *
               C50848 +
           ((C2195 * C416 + C2612 + C2612 + C2190 * C436 + C2197 * C417 +
             C2613 + C2613 + C50531 * C437) *
                C50689 * C2192 +
            (C3631 + C3632) * C50689 * C2193 +
            (C3633 + C3634) * C50689 * C2194) *
               C1993) *
              C50575 * C50792 +
          (((C2195 * C414 + C2618 + C2618 + C2190 * C434 + C2197 * C413 +
             C2619 + C2619 + C50531 * C433) *
                C50689 * C2192 +
            (C3193 + C3194) * C50689 * C2193 +
            (C3195 + C3196) * C50689 * C2194) *
               C50848 -
           (C2450 * C2194 + (C2442 + C2441) * C50689 * C2193 +
            (C2197 * C127 + C2210 + C2210 + C50531 * C141 + C2195 * C126 +
             C2211 + C2211 + C2190 * C140) *
                C50689 * C2192) *
               C50847 -
           ((C2197 * C2598 + C2624 + C2624 + C50531 * C2604 + C2195 * C2597 +
             C2625 + C2625 + C2190 * C2603) *
                C50689 * C2194 +
            (C2197 * C1117 + C2626 + C2626 + C50531 * C1125 + C2195 * C1118 +
             C2627 + C2627 + C2190 * C1126) *
                C50689 * C2193 +
            (C2197 * C418 + C2628 + C2628 + C50531 * C438 + C2195 * C417 +
             C2629 + C2629 + C2190 * C437) *
                C50689 * C2192) *
               C1993) *
              C50575 * C50562)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 +
            C148 + C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 +
            C123 * C128 + C150 + C150 + C108 * C142) *
               C50689 * C50677 * C50847 -
           (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 + C444 +
            C444 + C107 * C433 + C119 * C414 + C445 + C445 + C106 * C434 +
            C117 * C415 + C446 + C446 + C105 * C435) *
               C50689 * C50677 * C50848 +
           (C117 * C416 + C447 + C447 + C105 * C436 + C119 * C417 + C448 +
            C448 + C106 * C437 + C121 * C418 + C449 + C449 + C107 * C438 +
            C123 * C419 + C450 + C450 + C108 * C439) *
               C50689 * C50677 * C1993) *
              C50575 * C50792 +
          ((C117 * C414 + C451 + C451 + C105 * C434 + C119 * C413 + C452 +
            C452 + C106 * C433 + C121 * C412 + C453 + C453 + C107 * C432 +
            C123 * C420 + C454 + C454 + C108 * C440) *
               C50689 * C50677 * C50848 -
           (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 + C152 +
            C152 + C107 * C142 + C119 * C127 + C153 + C153 + C106 * C141 +
            C117 * C126 + C154 + C154 + C105 * C140) *
               C50689 * C50677 * C50847 -
           (C123 * C421 + C455 + C455 + C108 * C441 + C121 * C419 + C456 +
            C456 + C107 * C439 + C119 * C418 + C457 + C457 + C106 * C438 +
            C117 * C417 + C458 + C458 + C105 * C437) *
               C50689 * C50677 * C1993) *
              C50575 * C50562)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
             C2201 + C2201 + C50531 * C140) *
                C5132 +
            (C5497 + C5498) * C5133 + C5509 * C5134) *
               C50677 * C50847 -
           (C7327 * C5134 + (C5500 + C5499) * C5133 + (C5498 + C5497) * C5132) *
               C50677 * C50848 +
           (C5509 * C5132 + (C5502 + C5501) * C5133 + (C7338 + C7339) * C5134) *
               C50677 * C1993) *
              C50575 * C50792 +
          (((C5503 + C5504) * C5132 + (C5505 + C5506) * C5133 +
            (C5507 + C5508) * C5134) *
               C50677 * C50848 -
           (C5510 * C5134 + (C5504 + C5503) * C5133 +
            (C2197 * C127 + C2210 + C2210 + C50531 * C141 + C2195 * C126 +
             C2211 + C2211 + C2190 * C140) *
                C5132) *
               C50677 * C50847 -
           ((C2197 * C5435 + C5471 + C5471 + C50531 * C5441 + C2195 * C5434 +
             C5472 + C5472 + C2190 * C5440) *
                C5134 +
            (C5508 + C5507) * C5133 + C5510 * C5132) *
               C50677 * C1993) *
              C50575 * C50562)) /
            (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 +
            C148 + C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 +
            C123 * C128 + C150 + C150 + C108 * C142) *
               C50689 * C50677 * C1577 -
           (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 + C444 +
            C444 + C107 * C433 + C119 * C414 + C445 + C445 + C106 * C434 +
            C117 * C415 + C446 + C446 + C105 * C435) *
               C50689 * C50677 * C50655) *
              C260 +
          ((C117 * C805 + C821 + C821 + C105 * C815 + C119 * C806 + C822 +
            C822 + C106 * C816 + C121 * C807 + C823 + C823 + C107 * C817 +
            C123 * C808 + C824 + C824 + C108 * C818) *
               C50689 * C50677 * C50655 -
           (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 + C297 +
            C297 + C107 * C286 + C119 * C267 + C298 + C298 + C106 * C287 +
            C117 * C268 + C299 + C299 + C105 * C288) *
               C50689 * C50677 * C1577) *
              C261 +
          ((C117 * C269 + C300 + C300 + C105 * C289 + C119 * C270 + C301 +
            C301 + C106 * C290 + C121 * C271 + C302 + C302 + C107 * C291 +
            C123 * C272 + C303 + C303 + C108 * C292) *
               C50689 * C50677 * C1577 -
           (C123 * C1463 + C1476 + C1476 + C108 * C1471 + C121 * C1464 + C1477 +
            C1477 + C107 * C1472 + C119 * C1465 + C1478 + C1478 + C106 * C1473 +
            C117 * C1466 + C1479 + C1479 + C105 * C1474) *
               C50689 * C50677 * C50655) *
              C262) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 +
            C148 + C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 +
            C123 * C128 + C150 + C150 + C108 * C142) *
               C50689 * C50677 * C1577 -
           (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 + C444 +
            C444 + C107 * C433 + C119 * C414 + C445 + C445 + C106 * C434 +
            C117 * C415 + C446 + C446 + C105 * C435) *
               C50689 * C50677 * C50655) *
              C50575 * C928 +
          ((C117 * C414 + C451 + C451 + C105 * C434 + C119 * C413 + C452 +
            C452 + C106 * C433 + C121 * C412 + C453 + C453 + C107 * C432 +
            C123 * C420 + C454 + C454 + C108 * C440) *
               C50689 * C50677 * C50655 -
           (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 + C152 +
            C152 + C107 * C142 + C119 * C127 + C153 + C153 + C106 * C141 +
            C117 * C126 + C154 + C154 + C105 * C140) *
               C50689 * C50677 * C1577) *
              C50575 * C929 +
          ((C117 * C127 + C155 + C155 + C105 * C141 + C119 * C128 + C156 +
            C156 + C106 * C142 + C121 * C129 + C157 + C157 + C107 * C143 +
            C123 * C130 + C158 + C158 + C108 * C144) *
               C50689 * C50677 * C1577 -
           (C123 * C668 + C672 + C672 + C108 * C670 + C121 * C420 + C673 +
            C673 + C107 * C440 + C119 * C412 + C674 + C674 + C106 * C432 +
            C117 * C413 + C675 + C675 + C105 * C433) *
               C50689 * C50677 * C50655) *
              C50575 * C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
             C2201 + C2201 + C50531 * C140) *
                C50689 * C2192 +
            (C2435 + C2436) * C50689 * C2193 + C2449 * C2194) *
               C1577 -
           (C4134 * C2194 + (C3191 + C3192) * C50689 * C2193 +
            (C2197 * C414 + C2610 + C2610 + C50531 * C434 + C2195 * C415 +
             C2611 + C2611 + C2190 * C435) *
                C50689 * C2192) *
               C50655) *
              C50575 * C928 +
          (((C2195 * C414 + C2618 + C2618 + C2190 * C434 + C2197 * C413 +
             C2619 + C2619 + C50531 * C433) *
                C50689 * C2192 +
            (C3193 + C3194) * C50689 * C2193 +
            (C3195 + C3196) * C50689 * C2194) *
               C50655 -
           (C2450 * C2194 + (C2442 + C2441) * C50689 * C2193 +
            (C2197 * C127 + C2210 + C2210 + C50531 * C141 + C2195 * C126 +
             C2211 + C2211 + C2190 * C140) *
                C50689 * C2192) *
               C1577) *
              C50575 * C929 +
          (((C2195 * C127 + C2212 + C2212 + C2190 * C141 + C2197 * C128 +
             C2213 + C2213 + C50531 * C142) *
                C50689 * C2192 +
            (C2794 + C2795) * C50689 * C2193 +
            (C2796 + C2797) * C50689 * C2194) *
               C1577 -
           ((C2197 * C1463 + C2944 + C2944 + C50531 * C1471 + C2195 * C1464 +
             C2945 + C2945 + C2190 * C1472) *
                C50689 * C2194 +
            (C2197 * C808 + C2946 + C2946 + C50531 * C818 + C2195 * C807 +
             C2947 + C2947 + C2190 * C817) *
                C50689 * C2193 +
            (C2197 * C412 + C2948 + C2948 + C50531 * C432 + C2195 * C413 +
             C2949 + C2949 + C2190 * C433) *
                C50689 * C2192) *
               C50655) *
              C50575 * C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
             C2201 + C2201 + C50531 * C140) *
                C50689 * C2192 +
            (C2435 + C2436) * C50689 * C2193 + C2449 * C2194) *
               C1577 -
           (C4134 * C2194 + (C3191 + C3192) * C50689 * C2193 +
            (C2197 * C414 + C2610 + C2610 + C50531 * C434 + C2195 * C415 +
             C2611 + C2611 + C2190 * C435) *
                C50689 * C2192) *
               C50655) *
              C260 +
          (((C3192 + C3191) * C50689 * C2192 +
            (C3190 + C3189) * C50689 * C2193 +
            (C4139 + C4140) * C50689 * C2194) *
               C50655 -
           (C3454 * C2194 + (C2438 + C2437) * C50689 * C2193 +
            (C2436 + C2435) * C50689 * C2192) *
               C1577) *
              C261 +
          ((C2449 * C2192 + (C2440 + C2439) * C50689 * C2193 +
            (C3459 + C3460) * C50689 * C2194) *
               C1577 -
           ((C2197 * C4120 + C4132 + C4132 + C50531 * C4124 + C2195 * C4121 +
             C4133 + C4133 + C2190 * C4125) *
                C50689 * C2194 +
            (C4140 + C4139) * C50689 * C2193 + C4134 * C2192) *
               C50655) *
              C262) *
         C50556) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
             C2201 + C2201 + C50531 * C140) *
                C5132 +
            (C5497 + C5498) * C5133 + C5509 * C5134) *
               C50677 * C1577 -
           ((C5501 + C5502) * C5134 + (C5500 + C5499) * C5133 +
            (C5498 + C5497) * C5132) *
               C50677 * C50655) *
              C50575 * C928 +
          (((C5503 + C5504) * C5132 + (C5505 + C5506) * C5133 +
            (C5507 + C5508) * C5134) *
               C50677 * C50655 -
           (C5510 * C5134 + (C5504 + C5503) * C5133 +
            (C2197 * C127 + C2210 + C2210 + C50531 * C141 + C2195 * C126 +
             C2211 + C2211 + C2190 * C140) *
                C5132) *
               C50677 * C1577) *
              C50575 * C929 +
          (((C2195 * C127 + C2212 + C2212 + C2190 * C141 + C2197 * C128 +
             C2213 + C2213 + C50531 * C142) *
                C5132 +
            (C5823 + C5824) * C5133 + (C5825 + C5826) * C5134) *
               C50677 * C1577 -
           ((C2197 * C1747 + C5813 + C5813 + C50531 * C1755 + C2195 * C1748 +
             C5814 + C5814 + C2190 * C1756) *
                C5134 +
            (C5826 + C5825) * C5133 + (C5824 + C5823) * C5132) *
               C50677 * C50655) *
              C50575 * C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
             C2201 + C2201 + C50531 * C140) *
                C5132 +
            (C5497 + C5498) * C5133 + C5509 * C5134) *
               C50677 * C1577 -
           ((C5501 + C5502) * C5134 + (C5500 + C5499) * C5133 +
            (C5498 + C5497) * C5132) *
               C50677 * C50655) *
              C260 +
          (((C3192 + C3191) * C5132 + (C3631 + C3632) * C5133 +
            (C6443 + C6444) * C5134) *
               C50677 * C50655 -
           (C6436 * C5134 + (C3191 + C3192) * C5133 + (C2436 + C2435) * C5132) *
               C50677 * C1577) *
              C261 +
          ((C2447 * C5132 + (C3190 + C3189) * C5133 + (C3633 + C3634) * C5134) *
               C50677 * C1577 -
           ((C2197 * C4530 + C4543 + C4543 + C50531 * C4538 + C2195 * C4531 +
             C4544 + C4544 + C2190 * C4539) *
                C5134 +
            (C3634 + C3633) * C5133 + C4127 * C5132) *
               C50677 * C50655) *
              C262) *
         C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[45] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C7928 * C125 + C7935 + C7935 + C50841 * C139 +
                     C7930 * C126 + C7936 + C7936 + C50842 * C140 +
                     C7932 * C127 + C7937 + C7937 + C7925 * C141) *
                        C50814 +
                    (C11151 + C11152 + C11153) * C50753) *
                       C50677 * C50591 * C50800 -
                   ((C8887 + C8888 + C8889) * C50753 +
                    (C8167 + C8166 + C8165) * C50814) *
                       C50677 * C50591 * C50627) *
                      C50843 +
                  (((C8171 + C8172 + C8173) * C50814 +
                    (C8890 + C8891 + C8892) * C50753) *
                       C50677 * C50591 * C50627 -
                   ((C11159 + C11158 + C11157) * C50753 +
                    (C7932 * C128 + C7944 + C7944 + C7925 * C142 +
                     C7930 * C127 + C7945 + C7945 + C50842 * C141 +
                     C7928 * C126 + C7946 + C7946 + C50841 * C140) *
                        C50814) *
                       C50677 * C50591 * C50800) *
                      C50844 +
                  (((C7928 * C127 + C7947 + C7947 + C50841 * C141 +
                     C7930 * C128 + C7948 + C7948 + C50842 * C142 +
                     C7932 * C129 + C7949 + C7949 + C7925 * C143) *
                        C50814 +
                    (C7928 * C413 + C8662 + C8662 + C50841 * C433 +
                     C7930 * C412 + C8661 + C8661 + C50842 * C432 +
                     C7932 * C420 + C8660 + C8660 + C7925 * C440) *
                        C50753) *
                       C50677 * C50591 * C50800 -
                   ((C7932 * C809 + C8657 + C8657 + C7925 * C819 +
                     C7930 * C808 + C8658 + C8658 + C50842 * C818 +
                     C7928 * C807 + C8659 + C8659 + C50841 * C817) *
                        C50753 +
                    (C8510 + C8509 + C8508) * C50814) *
                       C50677 * C50591 * C50627) *
                      C560)) /
                (p * q * std::sqrt(p + q));
    d2ee[46] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C7928 * C125 + C7935 + C7935 + C50841 * C139 +
                      C7930 * C126 + C7936 + C7936 + C50842 * C140 +
                      C7932 * C127 + C7937 + C7937 + C7925 * C141) *
                         C50814 +
                     (C11151 + C11152 + C11153) * C50753) *
                        C50677 * C50801 -
                    ((C11154 + C11155 + C11156) * C50753 +
                     (C11153 + C11152 + C11151) * C50814) *
                        C50677 * C50655) *
                       C50800 +
                   (((C8889 + C8888 + C8887) * C50814 +
                     (C9316 + C9317 + C9318) * C50753) *
                        C50677 * C50655 -
                    ((C8887 + C8888 + C8889) * C50753 +
                     (C8167 + C8166 + C8165) * C50814) *
                        C50677 * C50801) *
                       C50627) *
                      C263 +
                  ((((C11157 + C11158 + C11159) * C50814 +
                     (C11160 + C11161 + C11162) * C50753) *
                        C50677 * C50655 -
                    ((C11159 + C11158 + C11157) * C50753 +
                     (C7932 * C128 + C7944 + C7944 + C7925 * C142 +
                      C7930 * C127 + C7945 + C7945 + C50842 * C141 +
                      C7928 * C126 + C7946 + C7946 + C50841 * C140) *
                         C50814) *
                        C50677 * C50801) *
                       C50800 +
                   (((C8171 + C8172 + C8173) * C50814 +
                     (C8890 + C8891 + C8892) * C50753) *
                        C50677 * C50801 -
                    ((C7932 * C1116 + C8341 + C8341 + C7925 * C1124 +
                      C7930 * C1117 + C8342 + C8342 + C50842 * C1125 +
                      C7928 * C1118 + C8343 + C8343 + C50841 * C1126) *
                         C50753 +
                     (C8892 + C8891 + C8890) * C50814) *
                        C50677 * C50655) *
                       C50627) *
                      C50562)) /
                (p * q * std::sqrt(p + q));
    d2ee[47] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C7928 * C125 + C7935 + C7935 + C50841 * C139 +
                     C7930 * C126 + C7936 + C7936 + C50842 * C140 +
                     C7932 * C127 + C7937 + C7937 + C7925 * C141) *
                        C50814 +
                    (C7928 * C415 + C8328 + C8328 + C50841 * C435 +
                     C7930 * C414 + C8327 + C8327 + C50842 * C434 +
                     C7932 * C413 + C8326 + C8326 + C7925 * C433) *
                        C50753) *
                       C50677 * C50591 * C260 -
                   ((C8887 + C8888 + C8889) * C50753 +
                    (C8167 + C8166 + C8165) * C50814) *
                       C50677 * C50591 * C261 +
                   ((C8170 + C8169 + C8168) * C50814 +
                    (C9820 + C9821 + C9822) * C50753) *
                       C50677 * C50591 * C262) *
                      C263 +
                  (((C8171 + C8172 + C8173) * C50814 +
                    (C8890 + C8891 + C8892) * C50753) *
                       C50677 * C50591 * C261 -
                   ((C7932 * C412 + C8337 + C8337 + C7925 * C432 +
                     C7930 * C413 + C8336 + C8336 + C50842 * C433 +
                     C7928 * C414 + C8335 + C8335 + C50841 * C434) *
                        C50753 +
                    (C7932 * C128 + C7944 + C7944 + C7925 * C142 +
                     C7930 * C127 + C7945 + C7945 + C50842 * C141 +
                     C7928 * C126 + C7946 + C7946 + C50841 * C140) *
                        C50814) *
                       C50677 * C50591 * C260 -
                   ((C7932 * C1463 + C8872 + C8872 + C7925 * C1471 +
                     C7930 * C1464 + C8873 + C8873 + C50842 * C1472 +
                     C7928 * C1465 + C8874 + C8874 + C50841 * C1473) *
                        C50753 +
                    (C8176 + C8175 + C8174) * C50814) *
                       C50677 * C50591 * C262) *
                      C50562)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((C7928 * C125 + C7935 + C7935 + C50841 * C139 +
                    C7930 * C126 + C7936 + C7936 + C50842 * C140 +
                    C7932 * C127 + C7937 + C7937 + C7925 * C141) *
                       C50814 +
                   (C7928 * C415 + C8328 + C8328 + C50841 * C435 +
                    C7930 * C414 + C8327 + C8327 + C50842 * C434 +
                    C7932 * C413 + C8326 + C8326 + C7925 * C433) *
                       C50753) *
                      C50677 * C50591 * C50575 * C113 -
                  ((C7932 * C412 + C8337 + C8337 + C7925 * C432 + C7930 * C413 +
                    C8336 + C8336 + C50842 * C433 + C7928 * C414 + C8335 +
                    C8335 + C50841 * C434) *
                       C50753 +
                   (C7932 * C128 + C7944 + C7944 + C7925 * C142 + C7930 * C127 +
                    C7945 + C7945 + C50842 * C141 + C7928 * C126 + C7946 +
                    C7946 + C50841 * C140) *
                       C50814) *
                      C50677 * C50591 * C50575 * C114 +
                  ((C7928 * C127 + C7947 + C7947 + C50841 * C141 +
                    C7930 * C128 + C7948 + C7948 + C50842 * C142 +
                    C7932 * C129 + C7949 + C7949 + C7925 * C143) *
                       C50814 +
                   (C7928 * C413 + C8662 + C8662 + C50841 * C433 +
                    C7930 * C412 + C8661 + C8661 + C50842 * C432 +
                    C7932 * C420 + C8660 + C8660 + C7925 * C440) *
                       C50753) *
                      C50677 * C50591 * C50575 * C115 -
                  ((C7932 * C668 + C10805 + C10805 + C7925 * C670 +
                    C7930 * C420 + C10806 + C10806 + C50842 * C440 +
                    C7928 * C412 + C10807 + C10807 + C50841 * C432) *
                       C50753 +
                   (C7932 * C130 + C7956 + C7956 + C7925 * C144 + C7930 * C129 +
                    C7957 + C7957 + C50842 * C143 + C7928 * C128 + C7958 +
                    C7958 + C50841 * C142) *
                       C50814) *
                      C50677 * C50591 * C50575 * C116)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C7928 * C125 + C7935 + C7935 + C50841 * C139 +
                     C7930 * C126 + C7936 + C7936 + C50842 * C140 +
                     C7932 * C127 + C7937 + C7937 + C7925 * C141) *
                        C50814 +
                    (C11151 + C11152 + C11153) * C50753) *
                       C50677 * C409 -
                   ((C11154 + C11155 + C11156) * C50753 +
                    (C11153 + C11152 + C11151) * C50814) *
                       C50677 * C410 +
                   ((C11156 + C11155 + C11154) * C50814 +
                    (C7928 * C1750 + C10218 + C10218 + C50841 * C1758 +
                     C7930 * C1749 + C10217 + C10217 + C50842 * C1757 +
                     C7932 * C1748 + C10216 + C10216 + C7925 * C1756) *
                        C50753) *
                       C50677 * C411) *
                      C50575 * C263 +
                  (((C11157 + C11158 + C11159) * C50814 +
                    (C11160 + C11161 + C11162) * C50753) *
                       C50677 * C410 -
                   ((C11159 + C11158 + C11157) * C50753 +
                    (C7932 * C128 + C7944 + C7944 + C7925 * C142 +
                     C7930 * C127 + C7945 + C7945 + C50842 * C141 +
                     C7928 * C126 + C7946 + C7946 + C50841 * C140) *
                        C50814) *
                       C50677 * C409 -
                   ((C7932 * C1747 + C11124 + C11124 + C7925 * C1755 +
                     C7930 * C1748 + C11125 + C11125 + C50842 * C1756 +
                     C7928 * C1749 + C11126 + C11126 + C50841 * C1757) *
                        C50753 +
                    (C11162 + C11161 + C11160) * C50814) *
                       C50677 * C411) *
                      C50575 * C50562)) /
                    (p * q * std::sqrt(p + q));
    d2ee[48] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C7928 * C125 + C7935 + C7935 + C50841 * C139 +
                     C7930 * C126 + C7936 + C7936 + C50842 * C140 +
                     C7932 * C127 + C7937 + C7937 + C7925 * C141) *
                        C50814 +
                    (C11151 + C11152 + C11153) * C50753) *
                       C50677 * C50801 -
                   ((C11154 + C11155 + C11156) * C50753 +
                    (C11153 + C11152 + C11151) * C50814) *
                       C50677 * C50655) *
                      C50575 * C50843 +
                  (((C11157 + C11158 + C11159) * C50814 +
                    (C11160 + C11161 + C11162) * C50753) *
                       C50677 * C50655 -
                   ((C11159 + C11158 + C11157) * C50753 +
                    (C7932 * C128 + C7944 + C7944 + C7925 * C142 +
                     C7930 * C127 + C7945 + C7945 + C50842 * C141 +
                     C7928 * C126 + C7946 + C7946 + C50841 * C140) *
                        C50814) *
                       C50677 * C50801) *
                      C50575 * C50844 +
                  (((C7928 * C127 + C7947 + C7947 + C50841 * C141 +
                     C7930 * C128 + C7948 + C7948 + C50842 * C142 +
                     C7932 * C129 + C7949 + C7949 + C7925 * C143) *
                        C50814 +
                    (C11470 + C11471 + C11472) * C50753) *
                       C50677 * C50801 -
                   ((C7932 * C421 + C11461 + C11461 + C7925 * C441 +
                     C7930 * C419 + C11462 + C11462 + C50842 * C439 +
                     C7928 * C418 + C11463 + C11463 + C50841 * C438) *
                        C50753 +
                    (C11472 + C11471 + C11470) * C50814) *
                       C50677 * C50655) *
                      C50575 * C560)) /
                (p * q * std::sqrt(p + q));
    d2ee[49] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((C7928 * C125 + C7935 + C7935 + C50841 * C139 +
                    C7930 * C126 + C7936 + C7936 + C50842 * C140 +
                    C7932 * C127 + C7937 + C7937 + C7925 * C141) *
                       C50814 +
                   (C7928 * C415 + C8328 + C8328 + C50841 * C435 +
                    C7930 * C414 + C8327 + C8327 + C50842 * C434 +
                    C7932 * C413 + C8326 + C8326 + C7925 * C433) *
                       C50753) *
                      C50677 * C50591 * C50575 * C113 -
                  ((C7932 * C412 + C8337 + C8337 + C7925 * C432 + C7930 * C413 +
                    C8336 + C8336 + C50842 * C433 + C7928 * C414 + C8335 +
                    C8335 + C50841 * C434) *
                       C50753 +
                   (C7932 * C128 + C7944 + C7944 + C7925 * C142 + C7930 * C127 +
                    C7945 + C7945 + C50842 * C141 + C7928 * C126 + C7946 +
                    C7946 + C50841 * C140) *
                       C50814) *
                      C50677 * C50591 * C50575 * C114 +
                  ((C7928 * C127 + C7947 + C7947 + C50841 * C141 +
                    C7930 * C128 + C7948 + C7948 + C50842 * C142 +
                    C7932 * C129 + C7949 + C7949 + C7925 * C143) *
                       C50814 +
                   (C7928 * C413 + C8662 + C8662 + C50841 * C433 +
                    C7930 * C412 + C8661 + C8661 + C50842 * C432 +
                    C7932 * C420 + C8660 + C8660 + C7925 * C440) *
                       C50753) *
                      C50677 * C50591 * C50575 * C115 -
                  ((C7932 * C668 + C10805 + C10805 + C7925 * C670 +
                    C7930 * C420 + C10806 + C10806 + C50842 * C440 +
                    C7928 * C412 + C10807 + C10807 + C50841 * C432) *
                       C50753 +
                   (C7932 * C130 + C7956 + C7956 + C7925 * C144 + C7930 * C129 +
                    C7957 + C7957 + C50842 * C143 + C7928 * C128 + C7958 +
                    C7958 + C50841 * C142) *
                       C50814) *
                      C50677 * C50591 * C50575 * C116)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C7928 * C125 + C7935 + C7935 + C50841 * C139 +
                     C7930 * C126 + C7936 + C7936 + C50842 * C140 +
                     C7932 * C127 + C7937 + C7937 + C7925 * C141) *
                        C50814 +
                    (C7928 * C415 + C8328 + C8328 + C50841 * C435 +
                     C7930 * C414 + C8327 + C8327 + C50842 * C434 +
                     C7932 * C413 + C8326 + C8326 + C7925 * C433) *
                        C50753) *
                       C50677 * C50591 * C260 -
                   ((C8887 + C8888 + C8889) * C50753 +
                    (C8167 + C8166 + C8165) * C50814) *
                       C50677 * C50591 * C261 +
                   ((C8170 + C8169 + C8168) * C50814 +
                    (C9820 + C9821 + C9822) * C50753) *
                       C50677 * C50591 * C262) *
                      C263 +
                  (((C8171 + C8172 + C8173) * C50814 +
                    (C8890 + C8891 + C8892) * C50753) *
                       C50677 * C50591 * C261 -
                   ((C7932 * C412 + C8337 + C8337 + C7925 * C432 +
                     C7930 * C413 + C8336 + C8336 + C50842 * C433 +
                     C7928 * C414 + C8335 + C8335 + C50841 * C434) *
                        C50753 +
                    (C7932 * C128 + C7944 + C7944 + C7925 * C142 +
                     C7930 * C127 + C7945 + C7945 + C50842 * C141 +
                     C7928 * C126 + C7946 + C7946 + C50841 * C140) *
                        C50814) *
                       C50677 * C50591 * C260 -
                   ((C7932 * C1463 + C8872 + C8872 + C7925 * C1471 +
                     C7930 * C1464 + C8873 + C8873 + C50842 * C1472 +
                     C7928 * C1465 + C8874 + C8874 + C50841 * C1473) *
                        C50753 +
                    (C8176 + C8175 + C8174) * C50814) *
                       C50677 * C50591 * C262) *
                      C50562)) /
                    (p * q * std::sqrt(p + q));
    d2ee[50] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C7928 * C125 + C7935 + C7935 + C50841 * C139 +
                     C7930 * C126 + C7936 + C7936 + C50842 * C140 +
                     C7932 * C127 + C7937 + C7937 + C7925 * C141) *
                        C50814 +
                    (C11151 + C11152 + C11153) * C50753) *
                       C50677 * C50591 * C50845 -
                   ((C8887 + C8888 + C8889) * C50753 +
                    (C8167 + C8166 + C8165) * C50814) *
                       C50677 * C50591 * C50846 +
                   ((C8170 + C8169 + C8168) * C50814 +
                    (C9820 + C9821 + C9822) * C50753) *
                       C50677 * C50591 * C1232) *
                      C50792 +
                  (((C8171 + C8172 + C8173) * C50814 +
                    (C8890 + C8891 + C8892) * C50753) *
                       C50677 * C50591 * C50846 -
                   ((C11159 + C11158 + C11157) * C50753 +
                    (C7932 * C128 + C7944 + C7944 + C7925 * C142 +
                     C7930 * C127 + C7945 + C7945 + C50842 * C141 +
                     C7928 * C126 + C7946 + C7946 + C50841 * C140) *
                        C50814) *
                       C50677 * C50591 * C50845 -
                   ((C7932 * C1463 + C8872 + C8872 + C7925 * C1471 +
                     C7930 * C1464 + C8873 + C8873 + C50842 * C1472 +
                     C7928 * C1465 + C8874 + C8874 + C50841 * C1473) *
                        C50753 +
                    (C8176 + C8175 + C8174) * C50814) *
                       C50677 * C50591 * C1232) *
                      C50562)) /
                (p * q * std::sqrt(p + q));
    d2ee[51] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C7928 * C125 + C7935 + C7935 + C50841 * C139 +
                     C7930 * C126 + C7936 + C7936 + C50842 * C140 +
                     C7932 * C127 + C7937 + C7937 + C7925 * C141) *
                        C50814 +
                    (C11151 + C11152 + C11153) * C50753) *
                       C50677 * C50801 -
                   ((C11154 + C11155 + C11156) * C50753 +
                    (C11153 + C11152 + C11151) * C50814) *
                       C50677 * C50655) *
                      C50845 +
                  (((C8889 + C8888 + C8887) * C50814 +
                    (C9316 + C9317 + C9318) * C50753) *
                       C50677 * C50655 -
                   ((C8887 + C8888 + C8889) * C50753 +
                    (C8167 + C8166 + C8165) * C50814) *
                       C50677 * C50801) *
                      C50846 +
                  (((C8170 + C8169 + C8168) * C50814 +
                    (C9820 + C9821 + C9822) * C50753) *
                       C50677 * C50801 -
                   ((C7932 * C2598 + C9307 + C9307 + C7925 * C2604 +
                     C7930 * C2597 + C9308 + C9308 + C50842 * C2603 +
                     C7928 * C2596 + C9309 + C9309 + C50841 * C2602) *
                        C50753 +
                    (C9822 + C9821 + C9820) * C50814) *
                       C50677 * C50655) *
                      C1232) *
                 C50556) /
                (p * q * std::sqrt(p + q));
    d2ee[52] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((C7928 * C125 + C7935 + C7935 + C50841 * C139 +
                    C7930 * C126 + C7936 + C7936 + C50842 * C140 +
                    C7932 * C127 + C7937 + C7937 + C7925 * C141) *
                       C50814 +
                   (C11151 + C11152 + C11153) * C50753) *
                      C50677 * C50591 * C997 -
                  ((C8887 + C8888 + C8889) * C50753 +
                   (C8167 + C8166 + C8165) * C50814) *
                      C50677 * C50591 * C998 +
                  ((C8170 + C8169 + C8168) * C50814 +
                   (C9820 + C9821 + C9822) * C50753) *
                      C50677 * C50591 * C999 -
                  ((C7932 * C3145 + C9811 + C9811 + C7925 * C3151 +
                    C7930 * C3144 + C9812 + C9812 + C50842 * C3150 +
                    C7928 * C3143 + C9813 + C9813 + C50841 * C3149) *
                       C50753 +
                   (C9154 + C9153 + C9152) * C50814) *
                      C50677 * C50591 * C1000) *
                 C50556) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C7928 * C125 + C7935 + C7935 + C50841 * C139 +
                     C7930 * C126 + C7936 + C7936 + C50842 * C140 +
                     C7932 * C127 + C7937 + C7937 + C7925 * C141) *
                        C50814 +
                    (C11151 + C11152 + C11153) * C50753) *
                       C50677 * C50591 * C926 -
                   ((C8887 + C8888 + C8889) * C50753 +
                    (C8167 + C8166 + C8165) * C50814) *
                       C50677 * C50591 * C50627) *
                      C928 +
                  (((C8171 + C8172 + C8173) * C50814 +
                    (C8890 + C8891 + C8892) * C50753) *
                       C50677 * C50591 * C50627 -
                   ((C11159 + C11158 + C11157) * C50753 +
                    (C7932 * C128 + C7944 + C7944 + C7925 * C142 +
                     C7930 * C127 + C7945 + C7945 + C50842 * C141 +
                     C7928 * C126 + C7946 + C7946 + C50841 * C140) *
                        C50814) *
                       C50677 * C50591 * C926) *
                      C929 +
                  (((C7928 * C127 + C7947 + C7947 + C50841 * C141 +
                     C7930 * C128 + C7948 + C7948 + C50842 * C142 +
                     C7932 * C129 + C7949 + C7949 + C7925 * C143) *
                        C50814 +
                    (C11470 + C11471 + C11472) * C50753) *
                       C50677 * C50591 * C926 -
                   ((C7932 * C809 + C8657 + C8657 + C7925 * C819 +
                     C7930 * C808 + C8658 + C8658 + C50842 * C818 +
                     C7928 * C807 + C8659 + C8659 + C50841 * C817) *
                        C50753 +
                    (C8510 + C8509 + C8508) * C50814) *
                       C50677 * C50591 * C50627) *
                      C930)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C7928 * C125 + C7935 + C7935 + C50841 * C139 +
                     C7930 * C126 + C7936 + C7936 + C50842 * C140 +
                     C7932 * C127 + C7937 + C7937 + C7925 * C141) *
                        C50814 +
                    (C11151 + C11152 + C11153) * C50753) *
                       C50677 * C409 -
                   ((C11154 + C11155 + C11156) * C50753 +
                    (C11153 + C11152 + C11151) * C50814) *
                       C50677 * C410 +
                   ((C11156 + C11155 + C11154) * C50814 +
                    (C7928 * C1750 + C10218 + C10218 + C50841 * C1758 +
                     C7930 * C1749 + C10217 + C10217 + C50842 * C1757 +
                     C7932 * C1748 + C10216 + C10216 + C7925 * C1756) *
                        C50753) *
                       C50677 * C411) *
                      C926 +
                  (((C8889 + C8888 + C8887) * C50814 +
                    (C9316 + C9317 + C9318) * C50753) *
                       C50677 * C410 -
                   ((C8887 + C8888 + C8889) * C50753 +
                    (C8167 + C8166 + C8165) * C50814) *
                       C50677 * C409 -
                   ((C7932 * C6020 + C10213 + C10213 + C7925 * C6022 +
                     C7930 * C4532 + C10214 + C10214 + C50842 * C4540 +
                     C7928 * C4533 + C10215 + C10215 + C50841 * C4541) *
                        C50753 +
                    (C9318 + C9317 + C9316) * C50814) *
                       C50677 * C411) *
                      C50627) *
                 C50556) /
                    (p * q * std::sqrt(p + q));
    d2ee[53] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C7928 * C125 + C7935 + C7935 + C50841 * C139 +
                      C7930 * C126 + C7936 + C7936 + C50842 * C140 +
                      C7932 * C127 + C7937 + C7937 + C7925 * C141) *
                         C50814 +
                     (C11151 + C11152 + C11153) * C50753) *
                        C50677 * C50801 -
                    ((C11154 + C11155 + C11156) * C50753 +
                     (C11153 + C11152 + C11151) * C50814) *
                        C50677 * C50655) *
                       C926 +
                   (((C8889 + C8888 + C8887) * C50814 +
                     (C9316 + C9317 + C9318) * C50753) *
                        C50677 * C50655 -
                    ((C8887 + C8888 + C8889) * C50753 +
                     (C8167 + C8166 + C8165) * C50814) *
                        C50677 * C50801) *
                       C50627) *
                      C50792 +
                  ((((C11157 + C11158 + C11159) * C50814 +
                     (C11160 + C11161 + C11162) * C50753) *
                        C50677 * C50655 -
                    ((C11159 + C11158 + C11157) * C50753 +
                     (C7932 * C128 + C7944 + C7944 + C7925 * C142 +
                      C7930 * C127 + C7945 + C7945 + C50842 * C141 +
                      C7928 * C126 + C7946 + C7946 + C50841 * C140) *
                         C50814) *
                        C50677 * C50801) *
                       C926 +
                   (((C8171 + C8172 + C8173) * C50814 +
                     (C8890 + C8891 + C8892) * C50753) *
                        C50677 * C50801 -
                    ((C7932 * C1116 + C8341 + C8341 + C7925 * C1124 +
                      C7930 * C1117 + C8342 + C8342 + C50842 * C1125 +
                      C7928 * C1118 + C8343 + C8343 + C50841 * C1126) *
                         C50753 +
                     (C8892 + C8891 + C8890) * C50814) *
                        C50677 * C50655) *
                       C50627) *
                      C50562)) /
                (p * q * std::sqrt(p + q));
    d2ee[54] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C7928 * C125 + C7935 + C7935 + C50841 * C139 +
                     C7930 * C126 + C7936 + C7936 + C50842 * C140 +
                     C7932 * C127 + C7937 + C7937 + C7925 * C141) *
                        C50814 +
                    (C11151 + C11152 + C11153) * C50753) *
                       C50677 * C50591 * C926 -
                   ((C8887 + C8888 + C8889) * C50753 +
                    (C8167 + C8166 + C8165) * C50814) *
                       C50677 * C50591 * C50627) *
                      C928 +
                  (((C8171 + C8172 + C8173) * C50814 +
                    (C8890 + C8891 + C8892) * C50753) *
                       C50677 * C50591 * C50627 -
                   ((C11159 + C11158 + C11157) * C50753 +
                    (C7932 * C128 + C7944 + C7944 + C7925 * C142 +
                     C7930 * C127 + C7945 + C7945 + C50842 * C141 +
                     C7928 * C126 + C7946 + C7946 + C50841 * C140) *
                        C50814) *
                       C50677 * C50591 * C926) *
                      C929 +
                  (((C7928 * C127 + C7947 + C7947 + C50841 * C141 +
                     C7930 * C128 + C7948 + C7948 + C50842 * C142 +
                     C7932 * C129 + C7949 + C7949 + C7925 * C143) *
                        C50814 +
                    (C11470 + C11471 + C11472) * C50753) *
                       C50677 * C50591 * C926 -
                   ((C7932 * C809 + C8657 + C8657 + C7925 * C819 +
                     C7930 * C808 + C8658 + C8658 + C50842 * C818 +
                     C7928 * C807 + C8659 + C8659 + C50841 * C817) *
                        C50753 +
                    (C8510 + C8509 + C8508) * C50814) *
                       C50677 * C50591 * C50627) *
                      C930)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((C7928 * C125 + C7935 + C7935 + C50841 * C139 +
                    C7930 * C126 + C7936 + C7936 + C50842 * C140 +
                    C7932 * C127 + C7937 + C7937 + C7925 * C141) *
                       C50814 +
                   (C11151 + C11152 + C11153) * C50753) *
                      C50677 * C50591 * C997 -
                  ((C8887 + C8888 + C8889) * C50753 +
                   (C8167 + C8166 + C8165) * C50814) *
                      C50677 * C50591 * C998 +
                  ((C8170 + C8169 + C8168) * C50814 +
                   (C9820 + C9821 + C9822) * C50753) *
                      C50677 * C50591 * C999 -
                  ((C7932 * C3145 + C9811 + C9811 + C7925 * C3151 +
                    C7930 * C3144 + C9812 + C9812 + C50842 * C3150 +
                    C7928 * C3143 + C9813 + C9813 + C50841 * C3149) *
                       C50753 +
                   (C9154 + C9153 + C9152) * C50814) *
                      C50677 * C50591 * C1000) *
                 C50556) /
                    (p * q * std::sqrt(p + q));
    d2ee[55] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C7928 * C125 + C7935 + C7935 + C50841 * C139 +
                      C7930 * C126 + C7936 + C7936 + C50842 * C140 +
                      C7932 * C127 + C7937 + C7937 + C7925 * C141) *
                         C50814 +
                     (C11151 + C11152 + C11153) * C50753) *
                        C50677 * C1577 -
                    ((C11154 + C11155 + C11156) * C50753 +
                     (C11153 + C11152 + C11151) * C50814) *
                        C50677 * C50655) *
                       C50800 +
                   (((C8889 + C8888 + C8887) * C50814 +
                     (C9316 + C9317 + C9318) * C50753) *
                        C50677 * C50655 -
                    ((C8887 + C8888 + C8889) * C50753 +
                     (C8167 + C8166 + C8165) * C50814) *
                        C50677 * C1577) *
                       C50627) *
                      C50792 +
                  ((((C11157 + C11158 + C11159) * C50814 +
                     (C11160 + C11161 + C11162) * C50753) *
                        C50677 * C50655 -
                    ((C11159 + C11158 + C11157) * C50753 +
                     (C7932 * C128 + C7944 + C7944 + C7925 * C142 +
                      C7930 * C127 + C7945 + C7945 + C50842 * C141 +
                      C7928 * C126 + C7946 + C7946 + C50841 * C140) *
                         C50814) *
                        C50677 * C1577) *
                       C50800 +
                   (((C8171 + C8172 + C8173) * C50814 +
                     (C8890 + C8891 + C8892) * C50753) *
                        C50677 * C1577 -
                    ((C7932 * C1116 + C8341 + C8341 + C7925 * C1124 +
                      C7930 * C1117 + C8342 + C8342 + C50842 * C1125 +
                      C7928 * C1118 + C8343 + C8343 + C50841 * C1126) *
                         C50753 +
                     (C8892 + C8891 + C8890) * C50814) *
                        C50677 * C50655) *
                       C50627) *
                      C50562)) /
                (p * q * std::sqrt(p + q));
    d2ee[56] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C7928 * C125 + C7935 + C7935 + C50841 * C139 +
                     C7930 * C126 + C7936 + C7936 + C50842 * C140 +
                     C7932 * C127 + C7937 + C7937 + C7925 * C141) *
                        C50814 +
                    (C11151 + C11152 + C11153) * C50753) *
                       C50677 * C50847 -
                   ((C11154 + C11155 + C11156) * C50753 +
                    (C11153 + C11152 + C11151) * C50814) *
                       C50677 * C50848 +
                   ((C11156 + C11155 + C11154) * C50814 +
                    (C12948 + C12949 + C12950) * C50753) *
                       C50677 * C1993) *
                      C50800 +
                  (((C8889 + C8888 + C8887) * C50814 +
                    (C9316 + C9317 + C9318) * C50753) *
                       C50677 * C50848 -
                   ((C8887 + C8888 + C8889) * C50753 +
                    (C8167 + C8166 + C8165) * C50814) *
                       C50677 * C50847 -
                   ((C7932 * C6020 + C10213 + C10213 + C7925 * C6022 +
                     C7930 * C4532 + C10214 + C10214 + C50842 * C4540 +
                     C7928 * C4533 + C10215 + C10215 + C50841 * C4541) *
                        C50753 +
                    (C9318 + C9317 + C9316) * C50814) *
                       C50677 * C1993) *
                      C50627) *
                 C50556) /
                (p * q * std::sqrt(p + q));
    d2ee[57] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C7928 * C125 + C7935 + C7935 + C50841 * C139 +
                     C7930 * C126 + C7936 + C7936 + C50842 * C140 +
                     C7932 * C127 + C7937 + C7937 + C7925 * C141) *
                        C50814 +
                    (C11151 + C11152 + C11153) * C50753) *
                       C50677 * C1577 -
                   ((C11154 + C11155 + C11156) * C50753 +
                    (C11153 + C11152 + C11151) * C50814) *
                       C50677 * C50655) *
                      C260 +
                  (((C8889 + C8888 + C8887) * C50814 +
                    (C9316 + C9317 + C9318) * C50753) *
                       C50677 * C50655 -
                   ((C8887 + C8888 + C8889) * C50753 +
                    (C8167 + C8166 + C8165) * C50814) *
                       C50677 * C1577) *
                      C261 +
                  (((C8170 + C8169 + C8168) * C50814 +
                    (C9820 + C9821 + C9822) * C50753) *
                       C50677 * C1577 -
                   ((C7932 * C2598 + C9307 + C9307 + C7925 * C2604 +
                     C7930 * C2597 + C9308 + C9308 + C50842 * C2603 +
                     C7928 * C2596 + C9309 + C9309 + C50841 * C2602) *
                        C50753 +
                    (C9822 + C9821 + C9820) * C50814) *
                       C50677 * C50655) *
                      C262) *
                 C50556) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C7928 * C125 + C7935 + C7935 + C50841 * C139 +
                     C7930 * C126 + C7936 + C7936 + C50842 * C140 +
                     C7932 * C127 + C7937 + C7937 + C7925 * C141) *
                        C50814 +
                    (C11151 + C11152 + C11153) * C50753) *
                       C50677 * C1577 -
                   ((C11154 + C11155 + C11156) * C50753 +
                    (C11153 + C11152 + C11151) * C50814) *
                       C50677 * C50655) *
                      C50575 * C928 +
                  (((C11157 + C11158 + C11159) * C50814 +
                    (C11160 + C11161 + C11162) * C50753) *
                       C50677 * C50655 -
                   ((C11159 + C11158 + C11157) * C50753 +
                    (C7932 * C128 + C7944 + C7944 + C7925 * C142 +
                     C7930 * C127 + C7945 + C7945 + C50842 * C141 +
                     C7928 * C126 + C7946 + C7946 + C50841 * C140) *
                        C50814) *
                       C50677 * C1577) *
                      C50575 * C929 +
                  (((C7928 * C127 + C7947 + C7947 + C50841 * C141 +
                     C7930 * C128 + C7948 + C7948 + C50842 * C142 +
                     C7932 * C129 + C7949 + C7949 + C7925 * C143) *
                        C50814 +
                    (C11470 + C11471 + C11472) * C50753) *
                       C50677 * C1577 -
                   ((C7932 * C421 + C11461 + C11461 + C7925 * C441 +
                     C7930 * C419 + C11462 + C11462 + C50842 * C439 +
                     C7928 * C418 + C11463 + C11463 + C50841 * C438) *
                        C50753 +
                    (C11472 + C11471 + C11470) * C50814) *
                       C50677 * C50655) *
                      C50575 * C930)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((C7928 * C125 + C7935 + C7935 + C50841 * C139 +
                    C7930 * C126 + C7936 + C7936 + C50842 * C140 +
                    C7932 * C127 + C7937 + C7937 + C7925 * C141) *
                       C50814 +
                   (C11151 + C11152 + C11153) * C50753) *
                      C50677 * C1743 -
                  ((C11154 + C11155 + C11156) * C50753 +
                   (C11153 + C11152 + C11151) * C50814) *
                      C50677 * C1744 +
                  ((C11156 + C11155 + C11154) * C50814 +
                   (C12948 + C12949 + C12950) * C50753) *
                      C50677 * C1745 -
                  ((C7932 * C5435 + C12939 + C12939 + C7925 * C5441 +
                    C7930 * C5434 + C12940 + C12940 + C50842 * C5440 +
                    C7928 * C5433 + C12941 + C12941 + C50841 * C5439) *
                       C50753 +
                   (C12950 + C12949 + C12948) * C50814) *
                      C50677 * C1746) *
                 C50575 * C50556) /
                    (p * q * std::sqrt(p + q));
    d2ee[58] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C7928 * C125 + C7935 + C7935 + C50841 * C139 +
                     C7930 * C126 + C7936 + C7936 + C50842 * C140 +
                     C7932 * C127 + C7937 + C7937 + C7925 * C141) *
                        C50814 +
                    (C11151 + C11152 + C11153) * C50753) *
                       C50677 * C50847 -
                   ((C11154 + C11155 + C11156) * C50753 +
                    (C11153 + C11152 + C11151) * C50814) *
                       C50677 * C50848 +
                   ((C11156 + C11155 + C11154) * C50814 +
                    (C12948 + C12949 + C12950) * C50753) *
                       C50677 * C1993) *
                      C50575 * C50792 +
                  (((C11157 + C11158 + C11159) * C50814 +
                    (C11160 + C11161 + C11162) * C50753) *
                       C50677 * C50848 -
                   ((C11159 + C11158 + C11157) * C50753 +
                    (C7932 * C128 + C7944 + C7944 + C7925 * C142 +
                     C7930 * C127 + C7945 + C7945 + C50842 * C141 +
                     C7928 * C126 + C7946 + C7946 + C50841 * C140) *
                        C50814) *
                       C50677 * C50847 -
                   ((C7932 * C1747 + C11124 + C11124 + C7925 * C1755 +
                     C7930 * C1748 + C11125 + C11125 + C50842 * C1756 +
                     C7928 * C1749 + C11126 + C11126 + C50841 * C1757) *
                        C50753 +
                    (C11162 + C11161 + C11160) * C50814) *
                       C50677 * C1993) *
                      C50575 * C50562)) /
                (p * q * std::sqrt(p + q));
    d2ee[59] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C7928 * C125 + C7935 + C7935 + C50841 * C139 +
                     C7930 * C126 + C7936 + C7936 + C50842 * C140 +
                     C7932 * C127 + C7937 + C7937 + C7925 * C141) *
                        C50814 +
                    (C11151 + C11152 + C11153) * C50753) *
                       C50677 * C1577 -
                   ((C11154 + C11155 + C11156) * C50753 +
                    (C11153 + C11152 + C11151) * C50814) *
                       C50677 * C50655) *
                      C50575 * C928 +
                  (((C11157 + C11158 + C11159) * C50814 +
                    (C11160 + C11161 + C11162) * C50753) *
                       C50677 * C50655 -
                   ((C11159 + C11158 + C11157) * C50753 +
                    (C7932 * C128 + C7944 + C7944 + C7925 * C142 +
                     C7930 * C127 + C7945 + C7945 + C50842 * C141 +
                     C7928 * C126 + C7946 + C7946 + C50841 * C140) *
                        C50814) *
                       C50677 * C1577) *
                      C50575 * C929 +
                  (((C7928 * C127 + C7947 + C7947 + C50841 * C141 +
                     C7930 * C128 + C7948 + C7948 + C50842 * C142 +
                     C7932 * C129 + C7949 + C7949 + C7925 * C143) *
                        C50814 +
                    (C11470 + C11471 + C11472) * C50753) *
                       C50677 * C1577 -
                   ((C7932 * C421 + C11461 + C11461 + C7925 * C441 +
                     C7930 * C419 + C11462 + C11462 + C50842 * C439 +
                     C7928 * C418 + C11463 + C11463 + C50841 * C438) *
                        C50753 +
                    (C11472 + C11471 + C11470) * C50814) *
                       C50677 * C50655) *
                      C50575 * C930)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C7928 * C125 + C7935 + C7935 + C50841 * C139 +
                     C7930 * C126 + C7936 + C7936 + C50842 * C140 +
                     C7932 * C127 + C7937 + C7937 + C7925 * C141) *
                        C50814 +
                    (C11151 + C11152 + C11153) * C50753) *
                       C50677 * C1577 -
                   ((C11154 + C11155 + C11156) * C50753 +
                    (C11153 + C11152 + C11151) * C50814) *
                       C50677 * C50655) *
                      C260 +
                  (((C8889 + C8888 + C8887) * C50814 +
                    (C9316 + C9317 + C9318) * C50753) *
                       C50677 * C50655 -
                   ((C8887 + C8888 + C8889) * C50753 +
                    (C8167 + C8166 + C8165) * C50814) *
                       C50677 * C1577) *
                      C261 +
                  (((C8170 + C8169 + C8168) * C50814 +
                    (C9820 + C9821 + C9822) * C50753) *
                       C50677 * C1577 -
                   ((C7932 * C2598 + C9307 + C9307 + C7925 * C2604 +
                     C7930 * C2597 + C9308 + C9308 + C50842 * C2603 +
                     C7928 * C2596 + C9309 + C9309 + C50841 * C2602) *
                        C50753 +
                    (C9822 + C9821 + C9820) * C50814) *
                       C50677 * C50655) *
                      C262) *
                 C50556) /
                    (p * q * std::sqrt(p + q));
    d2ee[60] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 +
                    C148 + C148 + C106 * C140 + C121 * C127 + C149 + C149 +
                    C107 * C141 + C123 * C128 + C150 + C150 + C108 * C142) *
                       C50689 * C50677 * C50591 * C50800 -
                   (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 +
                    C297 + C297 + C107 * C286 + C119 * C267 + C298 + C298 +
                    C106 * C287 + C117 * C268 + C299 + C299 + C105 * C288) *
                       C50689 * C50677 * C50591 * C50627) *
                      C50843 +
                  ((C117 * C267 + C304 + C304 + C105 * C287 + C119 * C266 +
                    C305 + C305 + C106 * C286 + C121 * C265 + C306 + C306 +
                    C107 * C285 + C123 * C273 + C307 + C307 + C108 * C293) *
                       C50689 * C50677 * C50591 * C50627 -
                   (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 +
                    C152 + C152 + C107 * C142 + C119 * C127 + C153 + C153 +
                    C106 * C141 + C117 * C126 + C154 + C154 + C105 * C140) *
                       C50689 * C50677 * C50591 * C50800) *
                      C50844 +
                  ((C117 * C127 + C155 + C155 + C105 * C141 + C119 * C128 +
                    C156 + C156 + C106 * C142 + C121 * C129 + C157 + C157 +
                    C107 * C143 + C123 * C130 + C158 + C158 + C108 * C144) *
                       C50689 * C50677 * C50591 * C50800 -
                   (C123 * C561 + C565 + C565 + C108 * C563 + C121 * C273 +
                    C566 + C566 + C107 * C293 + C119 * C265 + C567 + C567 +
                    C106 * C285 + C117 * C266 + C568 + C568 + C105 * C286) *
                       C50689 * C50677 * C50591 * C50627) *
                      C560)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 +
                     C2197 * C126 + C2201 + C2201 + C50531 * C140) *
                        C50689 * C2192 +
                    (C2435 + C2436) * C50689 * C2193 + C2449 * C2194) *
                       C50591 * C50800 -
                   ((C2439 + C2440) * C50689 * C2194 +
                    (C2438 + C2437) * C50689 * C2193 +
                    (C2436 + C2435) * C50689 * C2192) *
                       C50591 * C50627) *
                      C50843 +
                  (((C2441 + C2442) * C50689 * C2192 +
                    (C2443 + C2444) * C50689 * C2193 +
                    (C2445 + C2446) * C50689 * C2194) *
                       C50591 * C50627 -
                   (C2450 * C2194 + (C2442 + C2441) * C50689 * C2193 +
                    (C2197 * C127 + C2210 + C2210 + C50531 * C141 +
                     C2195 * C126 + C2211 + C2211 + C2190 * C140) *
                        C50689 * C2192) *
                       C50591 * C50800) *
                      C50844 +
                  (((C2195 * C127 + C2212 + C2212 + C2190 * C141 +
                     C2197 * C128 + C2213 + C2213 + C50531 * C142) *
                        C50689 * C2192 +
                    (C2794 + C2795) * C50689 * C2193 +
                    (C2796 + C2797) * C50689 * C2194) *
                       C50591 * C50800 -
                   ((C2197 * C1002 + C2784 + C2784 + C50531 * C1010 +
                     C2195 * C1003 + C2785 + C2785 + C2190 * C1011) *
                        C50689 * C2194 +
                    (C2797 + C2796) * C50689 * C2193 +
                    (C2795 + C2794) * C50689 * C2192) *
                       C50591 * C50627) *
                      C560)) /
                    (p * q * std::sqrt(p + q));
    d2ee[61] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 +
                     C148 + C148 + C106 * C140 + C121 * C127 + C149 + C149 +
                     C107 * C141 + C123 * C128 + C150 + C150 + C108 * C142) *
                        C50689 * C50677 * C50801 -
                    (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 +
                     C444 + C444 + C107 * C433 + C119 * C414 + C445 + C445 +
                     C106 * C434 + C117 * C415 + C446 + C446 + C105 * C435) *
                        C50689 * C50677 * C50655) *
                       C50800 +
                   ((C117 * C805 + C821 + C821 + C105 * C815 + C119 * C806 +
                     C822 + C822 + C106 * C816 + C121 * C807 + C823 + C823 +
                     C107 * C817 + C123 * C808 + C824 + C824 + C108 * C818) *
                        C50689 * C50677 * C50655 -
                    (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 +
                     C297 + C297 + C107 * C286 + C119 * C267 + C298 + C298 +
                     C106 * C287 + C117 * C268 + C299 + C299 + C105 * C288) *
                        C50689 * C50677 * C50801) *
                       C50627) *
                      C263 +
                  (((C117 * C414 + C451 + C451 + C105 * C434 + C119 * C413 +
                     C452 + C452 + C106 * C433 + C121 * C412 + C453 + C453 +
                     C107 * C432 + C123 * C420 + C454 + C454 + C108 * C440) *
                        C50689 * C50677 * C50655 -
                    (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 +
                     C152 + C152 + C107 * C142 + C119 * C127 + C153 + C153 +
                     C106 * C141 + C117 * C126 + C154 + C154 + C105 * C140) *
                        C50689 * C50677 * C50801) *
                       C50800 +
                   ((C117 * C267 + C304 + C304 + C105 * C287 + C119 * C266 +
                     C305 + C305 + C106 * C286 + C121 * C265 + C306 + C306 +
                     C107 * C285 + C123 * C273 + C307 + C307 + C108 * C293) *
                        C50689 * C50677 * C50801 -
                    (C123 * C809 + C825 + C825 + C108 * C819 + C121 * C808 +
                     C826 + C826 + C107 * C818 + C119 * C807 + C827 + C827 +
                     C106 * C817 + C117 * C806 + C828 + C828 + C105 * C816) *
                        C50689 * C50677 * C50655) *
                       C50627) *
                      C50562)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C2195 * C125 + C2200 + C2200 + C2190 * C139 +
                      C2197 * C126 + C2201 + C2201 + C50531 * C140) *
                         C50689 * C2192 +
                     (C2435 + C2436) * C50689 * C2193 + C2449 * C2194) *
                        C50801 -
                    ((C3189 + C3190) * C50689 * C2194 +
                     (C3191 + C3192) * C50689 * C2193 +
                     (C2197 * C414 + C2610 + C2610 + C50531 * C434 +
                      C2195 * C415 + C2611 + C2611 + C2190 * C435) *
                         C50689 * C2192) *
                        C50655) *
                       C50800 +
                   (((C3192 + C3191) * C50689 * C2192 +
                     (C3190 + C3189) * C50689 * C2193 +
                     (C2195 * C3143 + C3161 + C3161 + C2190 * C3149 +
                      C2197 * C3144 + C3162 + C3162 + C50531 * C3150) *
                         C50689 * C2194) *
                        C50655 -
                    ((C2439 + C2440) * C50689 * C2194 +
                     (C2438 + C2437) * C50689 * C2193 +
                     (C2436 + C2435) * C50689 * C2192) *
                        C50801) *
                       C50627) *
                      C263 +
                  ((((C2195 * C414 + C2618 + C2618 + C2190 * C434 +
                      C2197 * C413 + C2619 + C2619 + C50531 * C433) *
                         C50689 * C2192 +
                     (C3193 + C3194) * C50689 * C2193 +
                     (C3195 + C3196) * C50689 * C2194) *
                        C50655 -
                    (C2450 * C2194 + (C2442 + C2441) * C50689 * C2193 +
                     (C2197 * C127 + C2210 + C2210 + C50531 * C141 +
                      C2195 * C126 + C2211 + C2211 + C2190 * C140) *
                         C50689 * C2192) *
                        C50801) *
                       C50800 +
                   (((C2441 + C2442) * C50689 * C2192 +
                     (C2443 + C2444) * C50689 * C2193 +
                     (C2445 + C2446) * C50689 * C2194) *
                        C50801 -
                    ((C2197 * C3145 + C3171 + C3171 + C50531 * C3151 +
                      C2195 * C3144 + C3172 + C3172 + C2190 * C3150) *
                         C50689 * C2194 +
                     (C3196 + C3195) * C50689 * C2193 +
                     (C3194 + C3193) * C50689 * C2192) *
                        C50655) *
                       C50627) *
                      C50562)) /
                    (p * q * std::sqrt(p + q));
    d2ee[62] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 +
                    C148 + C148 + C106 * C140 + C121 * C127 + C149 + C149 +
                    C107 * C141 + C123 * C128 + C150 + C150 + C108 * C142) *
                       C50689 * C50677 * C50591 * C260 -
                   (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 +
                    C297 + C297 + C107 * C286 + C119 * C267 + C298 + C298 +
                    C106 * C287 + C117 * C268 + C299 + C299 + C105 * C288) *
                       C50689 * C50677 * C50591 * C261 +
                   (C117 * C269 + C300 + C300 + C105 * C289 + C119 * C270 +
                    C301 + C301 + C106 * C290 + C121 * C271 + C302 + C302 +
                    C107 * C291 + C123 * C272 + C303 + C303 + C108 * C292) *
                       C50689 * C50677 * C50591 * C262) *
                      C263 +
                  ((C117 * C267 + C304 + C304 + C105 * C287 + C119 * C266 +
                    C305 + C305 + C106 * C286 + C121 * C265 + C306 + C306 +
                    C107 * C285 + C123 * C273 + C307 + C307 + C108 * C293) *
                       C50689 * C50677 * C50591 * C261 -
                   (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 +
                    C152 + C152 + C107 * C142 + C119 * C127 + C153 + C153 +
                    C106 * C141 + C117 * C126 + C154 + C154 + C105 * C140) *
                       C50689 * C50677 * C50591 * C260 -
                   (C123 * C274 + C308 + C308 + C108 * C294 + C121 * C272 +
                    C309 + C309 + C107 * C292 + C119 * C271 + C310 + C310 +
                    C106 * C291 + C117 * C270 + C311 + C311 + C105 * C290) *
                       C50689 * C50677 * C50591 * C262) *
                      C50562)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 ((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 +
                   C148 + C148 + C106 * C140 + C121 * C127 + C149 + C149 +
                   C107 * C141 + C123 * C128 + C150 + C150 + C108 * C142) *
                      C50689 * C50677 * C50591 * C50575 * C113 -
                  (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 +
                   C152 + C152 + C107 * C142 + C119 * C127 + C153 + C153 +
                   C106 * C141 + C117 * C126 + C154 + C154 + C105 * C140) *
                      C50689 * C50677 * C50591 * C50575 * C114 +
                  (C117 * C127 + C155 + C155 + C105 * C141 + C119 * C128 +
                   C156 + C156 + C106 * C142 + C121 * C129 + C157 + C157 +
                   C107 * C143 + C123 * C130 + C158 + C158 + C108 * C144) *
                      C50689 * C50677 * C50591 * C50575 * C115 -
                  (C123 * C131 + C159 + C159 + C108 * C145 + C121 * C130 +
                   C160 + C160 + C107 * C144 + C119 * C129 + C161 + C161 +
                   C106 * C143 + C117 * C128 + C162 + C162 + C105 * C142) *
                      C50689 * C50677 * C50591 * C50575 * C116)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 +
                    C148 + C148 + C106 * C140 + C121 * C127 + C149 + C149 +
                    C107 * C141 + C123 * C128 + C150 + C150 + C108 * C142) *
                       C50689 * C50677 * C409 -
                   (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 +
                    C444 + C444 + C107 * C433 + C119 * C414 + C445 + C445 +
                    C106 * C434 + C117 * C415 + C446 + C446 + C105 * C435) *
                       C50689 * C50677 * C410 +
                   (C117 * C416 + C447 + C447 + C105 * C436 + C119 * C417 +
                    C448 + C448 + C106 * C437 + C121 * C418 + C449 + C449 +
                    C107 * C438 + C123 * C419 + C450 + C450 + C108 * C439) *
                       C50689 * C50677 * C411) *
                      C50575 * C263 +
                  ((C117 * C414 + C451 + C451 + C105 * C434 + C119 * C413 +
                    C452 + C452 + C106 * C433 + C121 * C412 + C453 + C453 +
                    C107 * C432 + C123 * C420 + C454 + C454 + C108 * C440) *
                       C50689 * C50677 * C410 -
                   (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 +
                    C152 + C152 + C107 * C142 + C119 * C127 + C153 + C153 +
                    C106 * C141 + C117 * C126 + C154 + C154 + C105 * C140) *
                       C50689 * C50677 * C409 -
                   (C123 * C421 + C455 + C455 + C108 * C441 + C121 * C419 +
                    C456 + C456 + C107 * C439 + C119 * C418 + C457 + C457 +
                    C106 * C438 + C117 * C417 + C458 + C458 + C105 * C437) *
                       C50689 * C50677 * C411) *
                      C50575 * C50562)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 (((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
                    C2201 + C2201 + C50531 * C140) *
                       C50689 * C2192 +
                   (C2195 * C268 + C2202 + C2202 + C2190 * C288 + C2197 * C267 +
                    C2203 + C2203 + C50531 * C287) *
                       C50689 * C2193 +
                   (C2195 * C269 + C2204 + C2204 + C2190 * C289 + C2197 * C270 +
                    C2205 + C2205 + C50531 * C290) *
                       C50689 * C2194) *
                      C50591 * C50575 * C113 -
                  ((C2197 * C271 + C2206 + C2206 + C50531 * C291 +
                    C2195 * C270 + C2207 + C2207 + C2190 * C290) *
                       C50689 * C2194 +
                   (C2197 * C266 + C2208 + C2208 + C50531 * C286 +
                    C2195 * C267 + C2209 + C2209 + C2190 * C287) *
                       C50689 * C2193 +
                   (C2197 * C127 + C2210 + C2210 + C50531 * C141 +
                    C2195 * C126 + C2211 + C2211 + C2190 * C140) *
                       C50689 * C2192) *
                      C50591 * C50575 * C114 +
                  ((C2195 * C127 + C2212 + C2212 + C2190 * C141 + C2197 * C128 +
                    C2213 + C2213 + C50531 * C142) *
                       C50689 * C2192 +
                   (C2195 * C266 + C2214 + C2214 + C2190 * C286 + C2197 * C265 +
                    C2215 + C2215 + C50531 * C285) *
                       C50689 * C2193 +
                   (C2195 * C271 + C2216 + C2216 + C2190 * C291 + C2197 * C272 +
                    C2217 + C2217 + C50531 * C292) *
                       C50689 * C2194) *
                      C50591 * C50575 * C115 -
                  ((C2197 * C274 + C2218 + C2218 + C50531 * C294 +
                    C2195 * C272 + C2219 + C2219 + C2190 * C292) *
                       C50689 * C2194 +
                   (C2197 * C273 + C2220 + C2220 + C50531 * C293 +
                    C2195 * C265 + C2221 + C2221 + C2190 * C285) *
                       C50689 * C2193 +
                   (C2197 * C129 + C2222 + C2222 + C50531 * C143 +
                    C2195 * C128 + C2223 + C2223 + C2190 * C142) *
                       C50689 * C2192) *
                      C50591 * C50575 * C116)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 +
                     C2197 * C126 + C2201 + C2201 + C50531 * C140) *
                        C50689 * C2192 +
                    (C2435 + C2436) * C50689 * C2193 + C2449 * C2194) *
                       C50591 * C260 -
                   ((C2439 + C2440) * C50689 * C2194 +
                    (C2438 + C2437) * C50689 * C2193 +
                    (C2436 + C2435) * C50689 * C2192) *
                       C50591 * C261 +
                   (C2449 * C2192 + (C2440 + C2439) * C50689 * C2193 +
                    (C2195 * C2369 + C2393 + C2393 + C2190 * C2375 +
                     C2197 * C2370 + C2394 + C2394 + C50531 * C2376) *
                        C50689 * C2194) *
                       C50591 * C262) *
                      C263 +
                  (((C2441 + C2442) * C50689 * C2192 +
                    (C2443 + C2444) * C50689 * C2193 +
                    (C2445 + C2446) * C50689 * C2194) *
                       C50591 * C261 -
                   (C2450 * C2194 + (C2442 + C2441) * C50689 * C2193 +
                    (C2197 * C127 + C2210 + C2210 + C50531 * C141 +
                     C2195 * C126 + C2211 + C2211 + C2190 * C140) *
                        C50689 * C2192) *
                       C50591 * C260 -
                   ((C2197 * C2371 + C2409 + C2409 + C50531 * C2377 +
                     C2195 * C2370 + C2410 + C2410 + C2190 * C2376) *
                        C50689 * C2194 +
                    (C2446 + C2445) * C50689 * C2193 + C2450 * C2192) *
                       C50591 * C262) *
                      C50562)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 +
                     C2197 * C126 + C2201 + C2201 + C50531 * C140) *
                        C50689 * C2192 +
                    (C2435 + C2436) * C50689 * C2193 + C2449 * C2194) *
                       C409 -
                   ((C2197 * C1465 + C2606 + C2606 + C50531 * C1473 +
                     C2195 * C1466 + C2607 + C2607 + C2190 * C1474) *
                        C50689 * C2194 +
                    (C2197 * C806 + C2608 + C2608 + C50531 * C816 +
                     C2195 * C805 + C2609 + C2609 + C2190 * C815) *
                        C50689 * C2193 +
                    (C2197 * C414 + C2610 + C2610 + C50531 * C434 +
                     C2195 * C415 + C2611 + C2611 + C2190 * C435) *
                        C50689 * C2192) *
                       C410 +
                   ((C2195 * C416 + C2612 + C2612 + C2190 * C436 +
                     C2197 * C417 + C2613 + C2613 + C50531 * C437) *
                        C50689 * C2192 +
                    (C2195 * C1119 + C2614 + C2614 + C2190 * C1127 +
                     C2197 * C1118 + C2615 + C2615 + C50531 * C1126) *
                        C50689 * C2193 +
                    (C2195 * C2596 + C2616 + C2616 + C2190 * C2602 +
                     C2197 * C2597 + C2617 + C2617 + C50531 * C2603) *
                        C50689 * C2194) *
                       C411) *
                      C50575 * C263 +
                  (((C2195 * C414 + C2618 + C2618 + C2190 * C434 +
                     C2197 * C413 + C2619 + C2619 + C50531 * C433) *
                        C50689 * C2192 +
                    (C2195 * C806 + C2620 + C2620 + C2190 * C816 +
                     C2197 * C807 + C2621 + C2621 + C50531 * C817) *
                        C50689 * C2193 +
                    (C2195 * C1465 + C2622 + C2622 + C2190 * C1473 +
                     C2197 * C1464 + C2623 + C2623 + C50531 * C1472) *
                        C50689 * C2194) *
                       C410 -
                   (C2450 * C2194 + (C2442 + C2441) * C50689 * C2193 +
                    (C2197 * C127 + C2210 + C2210 + C50531 * C141 +
                     C2195 * C126 + C2211 + C2211 + C2190 * C140) *
                        C50689 * C2192) *
                       C409 -
                   ((C2197 * C2598 + C2624 + C2624 + C50531 * C2604 +
                     C2195 * C2597 + C2625 + C2625 + C2190 * C2603) *
                        C50689 * C2194 +
                    (C2197 * C1117 + C2626 + C2626 + C50531 * C1125 +
                     C2195 * C1118 + C2627 + C2627 + C2190 * C1126) *
                        C50689 * C2193 +
                    (C2197 * C418 + C2628 + C2628 + C50531 * C438 +
                     C2195 * C417 + C2629 + C2629 + C2190 * C437) *
                        C50689 * C2192) *
                       C411) *
                      C50575 * C50562)) /
                    (p * q * std::sqrt(p + q));
    d2ee[63] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 +
                    C148 + C148 + C106 * C140 + C121 * C127 + C149 + C149 +
                    C107 * C141 + C123 * C128 + C150 + C150 + C108 * C142) *
                       C50689 * C50677 * C50801 -
                   (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 +
                    C444 + C444 + C107 * C433 + C119 * C414 + C445 + C445 +
                    C106 * C434 + C117 * C415 + C446 + C446 + C105 * C435) *
                       C50689 * C50677 * C50655) *
                      C50575 * C50843 +
                  ((C117 * C414 + C451 + C451 + C105 * C434 + C119 * C413 +
                    C452 + C452 + C106 * C433 + C121 * C412 + C453 + C453 +
                    C107 * C432 + C123 * C420 + C454 + C454 + C108 * C440) *
                       C50689 * C50677 * C50655 -
                   (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 +
                    C152 + C152 + C107 * C142 + C119 * C127 + C153 + C153 +
                    C106 * C141 + C117 * C126 + C154 + C154 + C105 * C140) *
                       C50689 * C50677 * C50801) *
                      C50575 * C50844 +
                  ((C117 * C127 + C155 + C155 + C105 * C141 + C119 * C128 +
                    C156 + C156 + C106 * C142 + C121 * C129 + C157 + C157 +
                    C107 * C143 + C123 * C130 + C158 + C158 + C108 * C144) *
                       C50689 * C50677 * C50801 -
                   (C123 * C668 + C672 + C672 + C108 * C670 + C121 * C420 +
                    C673 + C673 + C107 * C440 + C119 * C412 + C674 + C674 +
                    C106 * C432 + C117 * C413 + C675 + C675 + C105 * C433) *
                       C50689 * C50677 * C50655) *
                      C50575 * C560)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 +
                     C2197 * C126 + C2201 + C2201 + C50531 * C140) *
                        C50689 * C2192 +
                    (C2435 + C2436) * C50689 * C2193 + C2449 * C2194) *
                       C50801 -
                   ((C2197 * C1465 + C2606 + C2606 + C50531 * C1473 +
                     C2195 * C1466 + C2607 + C2607 + C2190 * C1474) *
                        C50689 * C2194 +
                    (C2197 * C806 + C2608 + C2608 + C50531 * C816 +
                     C2195 * C805 + C2609 + C2609 + C2190 * C815) *
                        C50689 * C2193 +
                    (C2197 * C414 + C2610 + C2610 + C50531 * C434 +
                     C2195 * C415 + C2611 + C2611 + C2190 * C435) *
                        C50689 * C2192) *
                       C50655) *
                      C50575 * C50843 +
                  (((C2195 * C414 + C2618 + C2618 + C2190 * C434 +
                     C2197 * C413 + C2619 + C2619 + C50531 * C433) *
                        C50689 * C2192 +
                    (C2195 * C806 + C2620 + C2620 + C2190 * C816 +
                     C2197 * C807 + C2621 + C2621 + C50531 * C817) *
                        C50689 * C2193 +
                    (C2195 * C1465 + C2622 + C2622 + C2190 * C1473 +
                     C2197 * C1464 + C2623 + C2623 + C50531 * C1472) *
                        C50689 * C2194) *
                       C50655 -
                   (C2450 * C2194 + (C2442 + C2441) * C50689 * C2193 +
                    (C2197 * C127 + C2210 + C2210 + C50531 * C141 +
                     C2195 * C126 + C2211 + C2211 + C2190 * C140) *
                        C50689 * C2192) *
                       C50801) *
                      C50575 * C50844 +
                  (((C2195 * C127 + C2212 + C2212 + C2190 * C141 +
                     C2197 * C128 + C2213 + C2213 + C50531 * C142) *
                        C50689 * C2192 +
                    (C2794 + C2795) * C50689 * C2193 +
                    (C2796 + C2797) * C50689 * C2194) *
                       C50801 -
                   ((C2197 * C1463 + C2944 + C2944 + C50531 * C1471 +
                     C2195 * C1464 + C2945 + C2945 + C2190 * C1472) *
                        C50689 * C2194 +
                    (C2197 * C808 + C2946 + C2946 + C50531 * C818 +
                     C2195 * C807 + C2947 + C2947 + C2190 * C817) *
                        C50689 * C2193 +
                    (C2197 * C412 + C2948 + C2948 + C50531 * C432 +
                     C2195 * C413 + C2949 + C2949 + C2190 * C433) *
                        C50689 * C2192) *
                       C50655) *
                      C50575 * C560)) /
                    (p * q * std::sqrt(p + q));
    d2ee[64] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 +
                   C148 + C148 + C106 * C140 + C121 * C127 + C149 + C149 +
                   C107 * C141 + C123 * C128 + C150 + C150 + C108 * C142) *
                      C50689 * C50677 * C50591 * C50575 * C113 -
                  (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 +
                   C152 + C152 + C107 * C142 + C119 * C127 + C153 + C153 +
                   C106 * C141 + C117 * C126 + C154 + C154 + C105 * C140) *
                      C50689 * C50677 * C50591 * C50575 * C114 +
                  (C117 * C127 + C155 + C155 + C105 * C141 + C119 * C128 +
                   C156 + C156 + C106 * C142 + C121 * C129 + C157 + C157 +
                   C107 * C143 + C123 * C130 + C158 + C158 + C108 * C144) *
                      C50689 * C50677 * C50591 * C50575 * C115 -
                  (C123 * C131 + C159 + C159 + C108 * C145 + C121 * C130 +
                   C160 + C160 + C107 * C144 + C119 * C129 + C161 + C161 +
                   C106 * C143 + C117 * C128 + C162 + C162 + C105 * C142) *
                      C50689 * C50677 * C50591 * C50575 * C116)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 +
                    C148 + C148 + C106 * C140 + C121 * C127 + C149 + C149 +
                    C107 * C141 + C123 * C128 + C150 + C150 + C108 * C142) *
                       C50689 * C50677 * C50591 * C260 -
                   (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 +
                    C297 + C297 + C107 * C286 + C119 * C267 + C298 + C298 +
                    C106 * C287 + C117 * C268 + C299 + C299 + C105 * C288) *
                       C50689 * C50677 * C50591 * C261 +
                   (C117 * C269 + C300 + C300 + C105 * C289 + C119 * C270 +
                    C301 + C301 + C106 * C290 + C121 * C271 + C302 + C302 +
                    C107 * C291 + C123 * C272 + C303 + C303 + C108 * C292) *
                       C50689 * C50677 * C50591 * C262) *
                      C263 +
                  ((C117 * C267 + C304 + C304 + C105 * C287 + C119 * C266 +
                    C305 + C305 + C106 * C286 + C121 * C265 + C306 + C306 +
                    C107 * C285 + C123 * C273 + C307 + C307 + C108 * C293) *
                       C50689 * C50677 * C50591 * C261 -
                   (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 +
                    C152 + C152 + C107 * C142 + C119 * C127 + C153 + C153 +
                    C106 * C141 + C117 * C126 + C154 + C154 + C105 * C140) *
                       C50689 * C50677 * C50591 * C260 -
                   (C123 * C274 + C308 + C308 + C108 * C294 + C121 * C272 +
                    C309 + C309 + C107 * C292 + C119 * C271 + C310 + C310 +
                    C106 * C291 + C117 * C270 + C311 + C311 + C105 * C290) *
                       C50689 * C50677 * C50591 * C262) *
                      C50562)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
                    C2201 + C2201 + C50531 * C140) *
                       C50689 * C2192 +
                   (C2195 * C268 + C2202 + C2202 + C2190 * C288 + C2197 * C267 +
                    C2203 + C2203 + C50531 * C287) *
                       C50689 * C2193 +
                   (C2195 * C269 + C2204 + C2204 + C2190 * C289 + C2197 * C270 +
                    C2205 + C2205 + C50531 * C290) *
                       C50689 * C2194) *
                      C50591 * C50575 * C113 -
                  ((C2197 * C271 + C2206 + C2206 + C50531 * C291 +
                    C2195 * C270 + C2207 + C2207 + C2190 * C290) *
                       C50689 * C2194 +
                   (C2197 * C266 + C2208 + C2208 + C50531 * C286 +
                    C2195 * C267 + C2209 + C2209 + C2190 * C287) *
                       C50689 * C2193 +
                   (C2197 * C127 + C2210 + C2210 + C50531 * C141 +
                    C2195 * C126 + C2211 + C2211 + C2190 * C140) *
                       C50689 * C2192) *
                      C50591 * C50575 * C114 +
                  ((C2195 * C127 + C2212 + C2212 + C2190 * C141 + C2197 * C128 +
                    C2213 + C2213 + C50531 * C142) *
                       C50689 * C2192 +
                   (C2195 * C266 + C2214 + C2214 + C2190 * C286 + C2197 * C265 +
                    C2215 + C2215 + C50531 * C285) *
                       C50689 * C2193 +
                   (C2195 * C271 + C2216 + C2216 + C2190 * C291 + C2197 * C272 +
                    C2217 + C2217 + C50531 * C292) *
                       C50689 * C2194) *
                      C50591 * C50575 * C115 -
                  ((C2197 * C274 + C2218 + C2218 + C50531 * C294 +
                    C2195 * C272 + C2219 + C2219 + C2190 * C292) *
                       C50689 * C2194 +
                   (C2197 * C273 + C2220 + C2220 + C50531 * C293 +
                    C2195 * C265 + C2221 + C2221 + C2190 * C285) *
                       C50689 * C2193 +
                   (C2197 * C129 + C2222 + C2222 + C50531 * C143 +
                    C2195 * C128 + C2223 + C2223 + C2190 * C142) *
                       C50689 * C2192) *
                      C50591 * C50575 * C116)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 +
                     C2197 * C126 + C2201 + C2201 + C50531 * C140) *
                        C50689 * C2192 +
                    (C2435 + C2436) * C50689 * C2193 + C2449 * C2194) *
                       C50591 * C260 -
                   ((C2439 + C2440) * C50689 * C2194 +
                    (C2438 + C2437) * C50689 * C2193 +
                    (C2436 + C2435) * C50689 * C2192) *
                       C50591 * C261 +
                   (C2449 * C2192 + (C2440 + C2439) * C50689 * C2193 +
                    (C2195 * C2369 + C2393 + C2393 + C2190 * C2375 +
                     C2197 * C2370 + C2394 + C2394 + C50531 * C2376) *
                        C50689 * C2194) *
                       C50591 * C262) *
                      C263 +
                  (((C2441 + C2442) * C50689 * C2192 +
                    (C2443 + C2444) * C50689 * C2193 +
                    (C2445 + C2446) * C50689 * C2194) *
                       C50591 * C261 -
                   (C2450 * C2194 + (C2442 + C2441) * C50689 * C2193 +
                    (C2197 * C127 + C2210 + C2210 + C50531 * C141 +
                     C2195 * C126 + C2211 + C2211 + C2190 * C140) *
                        C50689 * C2192) *
                       C50591 * C260 -
                   ((C2197 * C2371 + C2409 + C2409 + C50531 * C2377 +
                     C2195 * C2370 + C2410 + C2410 + C2190 * C2376) *
                        C50689 * C2194 +
                    (C2446 + C2445) * C50689 * C2193 + C2450 * C2192) *
                       C50591 * C262) *
                      C50562)) /
                    (p * q * std::sqrt(p + q));
    d2ee[65] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 +
                    C148 + C148 + C106 * C140 + C121 * C127 + C149 + C149 +
                    C107 * C141 + C123 * C128 + C150 + C150 + C108 * C142) *
                       C50689 * C50677 * C50591 * C50845 -
                   (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 +
                    C297 + C297 + C107 * C286 + C119 * C267 + C298 + C298 +
                    C106 * C287 + C117 * C268 + C299 + C299 + C105 * C288) *
                       C50689 * C50677 * C50591 * C50846 +
                   (C117 * C269 + C300 + C300 + C105 * C289 + C119 * C270 +
                    C301 + C301 + C106 * C290 + C121 * C271 + C302 + C302 +
                    C107 * C291 + C123 * C272 + C303 + C303 + C108 * C292) *
                       C50689 * C50677 * C50591 * C1232) *
                      C50792 +
                  ((C117 * C267 + C304 + C304 + C105 * C287 + C119 * C266 +
                    C305 + C305 + C106 * C286 + C121 * C265 + C306 + C306 +
                    C107 * C285 + C123 * C273 + C307 + C307 + C108 * C293) *
                       C50689 * C50677 * C50591 * C50846 -
                   (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 +
                    C152 + C152 + C107 * C142 + C119 * C127 + C153 + C153 +
                    C106 * C141 + C117 * C126 + C154 + C154 + C105 * C140) *
                       C50689 * C50677 * C50591 * C50845 -
                   (C123 * C274 + C308 + C308 + C108 * C294 + C121 * C272 +
                    C309 + C309 + C107 * C292 + C119 * C271 + C310 + C310 +
                    C106 * C291 + C117 * C270 + C311 + C311 + C105 * C290) *
                       C50689 * C50677 * C50591 * C1232) *
                      C50562)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 +
                     C2197 * C126 + C2201 + C2201 + C50531 * C140) *
                        C50689 * C2192 +
                    (C2435 + C2436) * C50689 * C2193 + C2449 * C2194) *
                       C50591 * C50845 -
                   (C3454 * C2194 + (C2438 + C2437) * C50689 * C2193 +
                    (C2436 + C2435) * C50689 * C2192) *
                       C50591 * C50846 +
                   (C2449 * C2192 + (C2440 + C2439) * C50689 * C2193 +
                    (C3459 + C3460) * C50689 * C2194) *
                       C50591 * C1232) *
                      C50792 +
                  (((C2441 + C2442) * C50689 * C2192 +
                    (C2443 + C2444) * C50689 * C2193 +
                    (C2445 + C2446) * C50689 * C2194) *
                       C50591 * C50846 -
                   (C2450 * C2194 + (C2442 + C2441) * C50689 * C2193 +
                    (C2197 * C127 + C2210 + C2210 + C50531 * C141 +
                     C2195 * C126 + C2211 + C2211 + C2190 * C140) *
                        C50689 * C2192) *
                       C50591 * C50845 -
                   ((C2197 * C2371 + C2409 + C2409 + C50531 * C2377 +
                     C2195 * C2370 + C2410 + C2410 + C2190 * C2376) *
                        C50689 * C2194 +
                    (C2446 + C2445) * C50689 * C2193 + C2450 * C2192) *
                       C50591 * C1232) *
                      C50562)) /
                    (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 +
            C148 + C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 +
            C123 * C128 + C150 + C150 + C108 * C142) *
               C50689 * C50677 * C50801 -
           (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 + C444 +
            C444 + C107 * C433 + C119 * C414 + C445 + C445 + C106 * C434 +
            C117 * C415 + C446 + C446 + C105 * C435) *
               C50689 * C50677 * C50655) *
              C50845 +
          ((C117 * C805 + C821 + C821 + C105 * C815 + C119 * C806 + C822 +
            C822 + C106 * C816 + C121 * C807 + C823 + C823 + C107 * C817 +
            C123 * C808 + C824 + C824 + C108 * C818) *
               C50689 * C50677 * C50655 -
           (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 + C297 +
            C297 + C107 * C286 + C119 * C267 + C298 + C298 + C106 * C287 +
            C117 * C268 + C299 + C299 + C105 * C288) *
               C50689 * C50677 * C50801) *
              C50846 +
          ((C117 * C269 + C300 + C300 + C105 * C289 + C119 * C270 + C301 +
            C301 + C106 * C290 + C121 * C271 + C302 + C302 + C107 * C291 +
            C123 * C272 + C303 + C303 + C108 * C292) *
               C50689 * C50677 * C50801 -
           (C123 * C1463 + C1476 + C1476 + C108 * C1471 + C121 * C1464 + C1477 +
            C1477 + C107 * C1472 + C119 * C1465 + C1478 + C1478 + C106 * C1473 +
            C117 * C1466 + C1479 + C1479 + C105 * C1474) *
               C50689 * C50677 * C50655) *
              C1232) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
             C2201 + C2201 + C50531 * C140) *
                C50689 * C2192 +
            (C2435 + C2436) * C50689 * C2193 + C2449 * C2194) *
               C50801 -
           (C4134 * C2194 + (C3191 + C3192) * C50689 * C2193 +
            (C2197 * C414 + C2610 + C2610 + C50531 * C434 + C2195 * C415 +
             C2611 + C2611 + C2190 * C435) *
                C50689 * C2192) *
               C50655) *
              C50845 +
          (((C3192 + C3191) * C50689 * C2192 +
            (C3190 + C3189) * C50689 * C2193 +
            (C4139 + C4140) * C50689 * C2194) *
               C50655 -
           (C3454 * C2194 + (C2438 + C2437) * C50689 * C2193 +
            (C2436 + C2435) * C50689 * C2192) *
               C50801) *
              C50846 +
          ((C2449 * C2192 + (C2440 + C2439) * C50689 * C2193 +
            (C3459 + C3460) * C50689 * C2194) *
               C50801 -
           ((C2197 * C4120 + C4132 + C4132 + C50531 * C4124 + C2195 * C4121 +
             C4133 + C4133 + C2190 * C4125) *
                C50689 * C2194 +
            (C4140 + C4139) * C50689 * C2193 + C4134 * C2192) *
               C50655) *
              C1232) *
         C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 + C148 +
           C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 + C123 * C128 +
           C150 + C150 + C108 * C142) *
              C50689 * C50677 * C50591 * C997 -
          (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 + C297 + C297 +
           C107 * C286 + C119 * C267 + C298 + C298 + C106 * C287 + C117 * C268 +
           C299 + C299 + C105 * C288) *
              C50689 * C50677 * C50591 * C998 +
          (C117 * C269 + C300 + C300 + C105 * C289 + C119 * C270 + C301 + C301 +
           C106 * C290 + C121 * C271 + C302 + C302 + C107 * C291 + C123 * C272 +
           C303 + C303 + C108 * C292) *
              C50689 * C50677 * C50591 * C999 -
          (C123 * C1002 + C1015 + C1015 + C108 * C1010 + C121 * C1003 + C1016 +
           C1016 + C107 * C1011 + C119 * C1004 + C1017 + C1017 + C106 * C1012 +
           C117 * C1005 + C1018 + C1018 + C105 * C1013) *
              C50689 * C50677 * C50591 * C1000) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 +
            C148 + C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 +
            C123 * C128 + C150 + C150 + C108 * C142) *
               C50689 * C50677 * C50591 * C926 -
           (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 + C297 +
            C297 + C107 * C286 + C119 * C267 + C298 + C298 + C106 * C287 +
            C117 * C268 + C299 + C299 + C105 * C288) *
               C50689 * C50677 * C50591 * C50627) *
              C928 +
          ((C117 * C267 + C304 + C304 + C105 * C287 + C119 * C266 + C305 +
            C305 + C106 * C286 + C121 * C265 + C306 + C306 + C107 * C285 +
            C123 * C273 + C307 + C307 + C108 * C293) *
               C50689 * C50677 * C50591 * C50627 -
           (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 + C152 +
            C152 + C107 * C142 + C119 * C127 + C153 + C153 + C106 * C141 +
            C117 * C126 + C154 + C154 + C105 * C140) *
               C50689 * C50677 * C50591 * C926) *
              C929 +
          ((C117 * C127 + C155 + C155 + C105 * C141 + C119 * C128 + C156 +
            C156 + C106 * C142 + C121 * C129 + C157 + C157 + C107 * C143 +
            C123 * C130 + C158 + C158 + C108 * C144) *
               C50689 * C50677 * C50591 * C926 -
           (C123 * C561 + C565 + C565 + C108 * C563 + C121 * C273 + C566 +
            C566 + C107 * C293 + C119 * C265 + C567 + C567 + C106 * C285 +
            C117 * C266 + C568 + C568 + C105 * C286) *
               C50689 * C50677 * C50591 * C50627) *
              C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 +
            C148 + C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 +
            C123 * C128 + C150 + C150 + C108 * C142) *
               C50689 * C50677 * C409 -
           (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 + C444 +
            C444 + C107 * C433 + C119 * C414 + C445 + C445 + C106 * C434 +
            C117 * C415 + C446 + C446 + C105 * C435) *
               C50689 * C50677 * C410 +
           (C117 * C416 + C447 + C447 + C105 * C436 + C119 * C417 + C448 +
            C448 + C106 * C437 + C121 * C418 + C449 + C449 + C107 * C438 +
            C123 * C419 + C450 + C450 + C108 * C439) *
               C50689 * C50677 * C411) *
              C926 +
          ((C117 * C805 + C821 + C821 + C105 * C815 + C119 * C806 + C822 +
            C822 + C106 * C816 + C121 * C807 + C823 + C823 + C107 * C817 +
            C123 * C808 + C824 + C824 + C108 * C818) *
               C50689 * C50677 * C410 -
           (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 + C297 +
            C297 + C107 * C286 + C119 * C267 + C298 + C298 + C106 * C287 +
            C117 * C268 + C299 + C299 + C105 * C288) *
               C50689 * C50677 * C409 -
           (C123 * C1116 + C1129 + C1129 + C108 * C1124 + C121 * C1117 + C1130 +
            C1130 + C107 * C1125 + C119 * C1118 + C1131 + C1131 + C106 * C1126 +
            C117 * C1119 + C1132 + C1132 + C105 * C1127) *
               C50689 * C50677 * C411) *
              C50627) *
         C50556) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
             C2201 + C2201 + C50531 * C140) *
                C50689 * C2192 +
            (C2435 + C2436) * C50689 * C2193 + C2449 * C2194) *
               C50591 * C926 -
           ((C2439 + C2440) * C50689 * C2194 +
            (C2438 + C2437) * C50689 * C2193 +
            (C2436 + C2435) * C50689 * C2192) *
               C50591 * C50627) *
              C928 +
          (((C2441 + C2442) * C50689 * C2192 +
            (C2443 + C2444) * C50689 * C2193 +
            (C2445 + C2446) * C50689 * C2194) *
               C50591 * C50627 -
           (C2450 * C2194 + (C2442 + C2441) * C50689 * C2193 +
            (C2197 * C127 + C2210 + C2210 + C50531 * C141 + C2195 * C126 +
             C2211 + C2211 + C2190 * C140) *
                C50689 * C2192) *
               C50591 * C926) *
              C929 +
          (((C2195 * C127 + C2212 + C2212 + C2190 * C141 + C2197 * C128 +
             C2213 + C2213 + C50531 * C142) *
                C50689 * C2192 +
            (C2794 + C2795) * C50689 * C2193 +
            (C2796 + C2797) * C50689 * C2194) *
               C50591 * C926 -
           ((C2197 * C1002 + C2784 + C2784 + C50531 * C1010 + C2195 * C1003 +
             C2785 + C2785 + C2190 * C1011) *
                C50689 * C2194 +
            (C2797 + C2796) * C50689 * C2193 +
            (C2795 + C2794) * C50689 * C2192) *
               C50591 * C50627) *
              C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 + C2201 +
            C2201 + C50531 * C140) *
               C50689 * C2192 +
           (C2435 + C2436) * C50689 * C2193 + C2449 * C2194) *
              C50591 * C997 -
          (C3454 * C2194 + (C2438 + C2437) * C50689 * C2193 +
           (C2436 + C2435) * C50689 * C2192) *
              C50591 * C998 +
          (C2449 * C2192 + (C2440 + C2439) * C50689 * C2193 +
           (C3459 + C3460) * C50689 * C2194) *
              C50591 * C999 -
          ((C2197 * C3440 + C3452 + C3452 + C50531 * C3444 + C2195 * C3441 +
            C3453 + C3453 + C2190 * C3445) *
               C50689 * C2194 +
           (C3460 + C3459) * C50689 * C2193 + C3454 * C2192) *
              C50591 * C1000) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
             C2201 + C2201 + C50531 * C140) *
                C50689 * C2192 +
            (C2435 + C2436) * C50689 * C2193 + C2449 * C2194) *
               C409 -
           ((C3189 + C3190) * C50689 * C2194 +
            (C3191 + C3192) * C50689 * C2193 +
            (C2197 * C414 + C2610 + C2610 + C50531 * C434 + C2195 * C415 +
             C2611 + C2611 + C2190 * C435) *
                C50689 * C2192) *
               C410 +
           ((C2195 * C416 + C2612 + C2612 + C2190 * C436 + C2197 * C417 +
             C2613 + C2613 + C50531 * C437) *
                C50689 * C2192 +
            (C3631 + C3632) * C50689 * C2193 +
            (C3633 + C3634) * C50689 * C2194) *
               C411) *
              C926 +
          (((C3192 + C3191) * C50689 * C2192 +
            (C3190 + C3189) * C50689 * C2193 +
            (C2195 * C3143 + C3161 + C3161 + C2190 * C3149 + C2197 * C3144 +
             C3162 + C3162 + C50531 * C3150) *
                C50689 * C2194) *
               C410 -
           (C3454 * C2194 + (C2438 + C2437) * C50689 * C2193 +
            (C2436 + C2435) * C50689 * C2192) *
               C409 -
           ((C2197 * C3606 + C3621 + C3621 + C50531 * C3610 + C2195 * C3607 +
             C3622 + C3622 + C2190 * C3611) *
                C50689 * C2194 +
            (C3634 + C3633) * C50689 * C2193 +
            (C3632 + C3631) * C50689 * C2192) *
               C411) *
              C50627) *
         C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[68] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 +
                     C148 + C148 + C106 * C140 + C121 * C127 + C149 + C149 +
                     C107 * C141 + C123 * C128 + C150 + C150 + C108 * C142) *
                        C50689 * C50677 * C50801 -
                    (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 +
                     C444 + C444 + C107 * C433 + C119 * C414 + C445 + C445 +
                     C106 * C434 + C117 * C415 + C446 + C446 + C105 * C435) *
                        C50689 * C50677 * C50655) *
                       C926 +
                   ((C117 * C805 + C821 + C821 + C105 * C815 + C119 * C806 +
                     C822 + C822 + C106 * C816 + C121 * C807 + C823 + C823 +
                     C107 * C817 + C123 * C808 + C824 + C824 + C108 * C818) *
                        C50689 * C50677 * C50655 -
                    (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 +
                     C297 + C297 + C107 * C286 + C119 * C267 + C298 + C298 +
                     C106 * C287 + C117 * C268 + C299 + C299 + C105 * C288) *
                        C50689 * C50677 * C50801) *
                       C50627) *
                      C50792 +
                  (((C117 * C414 + C451 + C451 + C105 * C434 + C119 * C413 +
                     C452 + C452 + C106 * C433 + C121 * C412 + C453 + C453 +
                     C107 * C432 + C123 * C420 + C454 + C454 + C108 * C440) *
                        C50689 * C50677 * C50655 -
                    (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 +
                     C152 + C152 + C107 * C142 + C119 * C127 + C153 + C153 +
                     C106 * C141 + C117 * C126 + C154 + C154 + C105 * C140) *
                        C50689 * C50677 * C50801) *
                       C926 +
                   ((C117 * C267 + C304 + C304 + C105 * C287 + C119 * C266 +
                     C305 + C305 + C106 * C286 + C121 * C265 + C306 + C306 +
                     C107 * C285 + C123 * C273 + C307 + C307 + C108 * C293) *
                        C50689 * C50677 * C50801 -
                    (C123 * C809 + C825 + C825 + C108 * C819 + C121 * C808 +
                     C826 + C826 + C107 * C818 + C119 * C807 + C827 + C827 +
                     C106 * C817 + C117 * C806 + C828 + C828 + C105 * C816) *
                        C50689 * C50677 * C50655) *
                       C50627) *
                      C50562)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C2195 * C125 + C2200 + C2200 + C2190 * C139 +
                      C2197 * C126 + C2201 + C2201 + C50531 * C140) *
                         C50689 * C2192 +
                     (C2435 + C2436) * C50689 * C2193 + C2449 * C2194) *
                        C50801 -
                    ((C3189 + C3190) * C50689 * C2194 +
                     (C3191 + C3192) * C50689 * C2193 +
                     (C2197 * C414 + C2610 + C2610 + C50531 * C434 +
                      C2195 * C415 + C2611 + C2611 + C2190 * C435) *
                         C50689 * C2192) *
                        C50655) *
                       C926 +
                   (((C3192 + C3191) * C50689 * C2192 +
                     (C3190 + C3189) * C50689 * C2193 +
                     (C2195 * C3143 + C3161 + C3161 + C2190 * C3149 +
                      C2197 * C3144 + C3162 + C3162 + C50531 * C3150) *
                         C50689 * C2194) *
                        C50655 -
                    (C3454 * C2194 + (C2438 + C2437) * C50689 * C2193 +
                     (C2436 + C2435) * C50689 * C2192) *
                        C50801) *
                       C50627) *
                      C50792 +
                  ((((C2195 * C414 + C2618 + C2618 + C2190 * C434 +
                      C2197 * C413 + C2619 + C2619 + C50531 * C433) *
                         C50689 * C2192 +
                     (C3193 + C3194) * C50689 * C2193 +
                     (C3195 + C3196) * C50689 * C2194) *
                        C50655 -
                    (C2450 * C2194 + (C2442 + C2441) * C50689 * C2193 +
                     (C2197 * C127 + C2210 + C2210 + C50531 * C141 +
                      C2195 * C126 + C2211 + C2211 + C2190 * C140) *
                         C50689 * C2192) *
                        C50801) *
                       C926 +
                   (((C2441 + C2442) * C50689 * C2192 +
                     (C2443 + C2444) * C50689 * C2193 +
                     (C2445 + C2446) * C50689 * C2194) *
                        C50801 -
                    ((C2197 * C3145 + C3171 + C3171 + C50531 * C3151 +
                      C2195 * C3144 + C3172 + C3172 + C2190 * C3150) *
                         C50689 * C2194 +
                     (C3196 + C3195) * C50689 * C2193 +
                     (C3194 + C3193) * C50689 * C2192) *
                        C50655) *
                       C50627) *
                      C50562)) /
                    (p * q * std::sqrt(p + q));
    d2ee[69] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 +
                    C148 + C148 + C106 * C140 + C121 * C127 + C149 + C149 +
                    C107 * C141 + C123 * C128 + C150 + C150 + C108 * C142) *
                       C50689 * C50677 * C50591 * C926 -
                   (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 +
                    C297 + C297 + C107 * C286 + C119 * C267 + C298 + C298 +
                    C106 * C287 + C117 * C268 + C299 + C299 + C105 * C288) *
                       C50689 * C50677 * C50591 * C50627) *
                      C928 +
                  ((C117 * C267 + C304 + C304 + C105 * C287 + C119 * C266 +
                    C305 + C305 + C106 * C286 + C121 * C265 + C306 + C306 +
                    C107 * C285 + C123 * C273 + C307 + C307 + C108 * C293) *
                       C50689 * C50677 * C50591 * C50627 -
                   (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 +
                    C152 + C152 + C107 * C142 + C119 * C127 + C153 + C153 +
                    C106 * C141 + C117 * C126 + C154 + C154 + C105 * C140) *
                       C50689 * C50677 * C50591 * C926) *
                      C929 +
                  ((C117 * C127 + C155 + C155 + C105 * C141 + C119 * C128 +
                    C156 + C156 + C106 * C142 + C121 * C129 + C157 + C157 +
                    C107 * C143 + C123 * C130 + C158 + C158 + C108 * C144) *
                       C50689 * C50677 * C50591 * C926 -
                   (C123 * C561 + C565 + C565 + C108 * C563 + C121 * C273 +
                    C566 + C566 + C107 * C293 + C119 * C265 + C567 + C567 +
                    C106 * C285 + C117 * C266 + C568 + C568 + C105 * C286) *
                       C50689 * C50677 * C50591 * C50627) *
                      C930)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 +
                   C148 + C148 + C106 * C140 + C121 * C127 + C149 + C149 +
                   C107 * C141 + C123 * C128 + C150 + C150 + C108 * C142) *
                      C50689 * C50677 * C50591 * C997 -
                  (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 +
                   C297 + C297 + C107 * C286 + C119 * C267 + C298 + C298 +
                   C106 * C287 + C117 * C268 + C299 + C299 + C105 * C288) *
                      C50689 * C50677 * C50591 * C998 +
                  (C117 * C269 + C300 + C300 + C105 * C289 + C119 * C270 +
                   C301 + C301 + C106 * C290 + C121 * C271 + C302 + C302 +
                   C107 * C291 + C123 * C272 + C303 + C303 + C108 * C292) *
                      C50689 * C50677 * C50591 * C999 -
                  (C123 * C1002 + C1015 + C1015 + C108 * C1010 + C121 * C1003 +
                   C1016 + C1016 + C107 * C1011 + C119 * C1004 + C1017 + C1017 +
                   C106 * C1012 + C117 * C1005 + C1018 + C1018 + C105 * C1013) *
                      C50689 * C50677 * C50591 * C1000) *
                 C50556) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 +
                     C2197 * C126 + C2201 + C2201 + C50531 * C140) *
                        C50689 * C2192 +
                    (C2435 + C2436) * C50689 * C2193 + C2449 * C2194) *
                       C50591 * C926 -
                   ((C2439 + C2440) * C50689 * C2194 +
                    (C2438 + C2437) * C50689 * C2193 +
                    (C2436 + C2435) * C50689 * C2192) *
                       C50591 * C50627) *
                      C928 +
                  (((C2441 + C2442) * C50689 * C2192 +
                    (C2443 + C2444) * C50689 * C2193 +
                    (C2445 + C2446) * C50689 * C2194) *
                       C50591 * C50627 -
                   (C2450 * C2194 + (C2442 + C2441) * C50689 * C2193 +
                    (C2197 * C127 + C2210 + C2210 + C50531 * C141 +
                     C2195 * C126 + C2211 + C2211 + C2190 * C140) *
                        C50689 * C2192) *
                       C50591 * C926) *
                      C929 +
                  (((C2195 * C127 + C2212 + C2212 + C2190 * C141 +
                     C2197 * C128 + C2213 + C2213 + C50531 * C142) *
                        C50689 * C2192 +
                    (C2794 + C2795) * C50689 * C2193 +
                    (C2796 + C2797) * C50689 * C2194) *
                       C50591 * C926 -
                   ((C2197 * C1002 + C2784 + C2784 + C50531 * C1010 +
                     C2195 * C1003 + C2785 + C2785 + C2190 * C1011) *
                        C50689 * C2194 +
                    (C2797 + C2796) * C50689 * C2193 +
                    (C2795 + C2794) * C50689 * C2192) *
                       C50591 * C50627) *
                      C930)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
                    C2201 + C2201 + C50531 * C140) *
                       C50689 * C2192 +
                   (C2435 + C2436) * C50689 * C2193 + C2449 * C2194) *
                      C50591 * C997 -
                  (C3454 * C2194 + (C2438 + C2437) * C50689 * C2193 +
                   (C2436 + C2435) * C50689 * C2192) *
                      C50591 * C998 +
                  (C2449 * C2192 + (C2440 + C2439) * C50689 * C2193 +
                   (C3459 + C3460) * C50689 * C2194) *
                      C50591 * C999 -
                  ((C2197 * C3440 + C3452 + C3452 + C50531 * C3444 +
                    C2195 * C3441 + C3453 + C3453 + C2190 * C3445) *
                       C50689 * C2194 +
                   (C3460 + C3459) * C50689 * C2193 + C3454 * C2192) *
                      C50591 * C1000) *
                 C50556) /
                    (p * q * std::sqrt(p + q));
    d2ee[70] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 +
                     C148 + C148 + C106 * C140 + C121 * C127 + C149 + C149 +
                     C107 * C141 + C123 * C128 + C150 + C150 + C108 * C142) *
                        C50689 * C50677 * C1577 -
                    (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 +
                     C444 + C444 + C107 * C433 + C119 * C414 + C445 + C445 +
                     C106 * C434 + C117 * C415 + C446 + C446 + C105 * C435) *
                        C50689 * C50677 * C50655) *
                       C50800 +
                   ((C117 * C805 + C821 + C821 + C105 * C815 + C119 * C806 +
                     C822 + C822 + C106 * C816 + C121 * C807 + C823 + C823 +
                     C107 * C817 + C123 * C808 + C824 + C824 + C108 * C818) *
                        C50689 * C50677 * C50655 -
                    (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 +
                     C297 + C297 + C107 * C286 + C119 * C267 + C298 + C298 +
                     C106 * C287 + C117 * C268 + C299 + C299 + C105 * C288) *
                        C50689 * C50677 * C1577) *
                       C50627) *
                      C50792 +
                  (((C117 * C414 + C451 + C451 + C105 * C434 + C119 * C413 +
                     C452 + C452 + C106 * C433 + C121 * C412 + C453 + C453 +
                     C107 * C432 + C123 * C420 + C454 + C454 + C108 * C440) *
                        C50689 * C50677 * C50655 -
                    (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 +
                     C152 + C152 + C107 * C142 + C119 * C127 + C153 + C153 +
                     C106 * C141 + C117 * C126 + C154 + C154 + C105 * C140) *
                        C50689 * C50677 * C1577) *
                       C50800 +
                   ((C117 * C267 + C304 + C304 + C105 * C287 + C119 * C266 +
                     C305 + C305 + C106 * C286 + C121 * C265 + C306 + C306 +
                     C107 * C285 + C123 * C273 + C307 + C307 + C108 * C293) *
                        C50689 * C50677 * C1577 -
                    (C123 * C809 + C825 + C825 + C108 * C819 + C121 * C808 +
                     C826 + C826 + C107 * C818 + C119 * C807 + C827 + C827 +
                     C106 * C817 + C117 * C806 + C828 + C828 + C105 * C816) *
                        C50689 * C50677 * C50655) *
                       C50627) *
                      C50562)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C2195 * C125 + C2200 + C2200 + C2190 * C139 +
                      C2197 * C126 + C2201 + C2201 + C50531 * C140) *
                         C50689 * C2192 +
                     (C2435 + C2436) * C50689 * C2193 + C2449 * C2194) *
                        C1577 -
                    (C4134 * C2194 + (C3191 + C3192) * C50689 * C2193 +
                     (C2197 * C414 + C2610 + C2610 + C50531 * C434 +
                      C2195 * C415 + C2611 + C2611 + C2190 * C435) *
                         C50689 * C2192) *
                        C50655) *
                       C50800 +
                   (((C3192 + C3191) * C50689 * C2192 +
                     (C3190 + C3189) * C50689 * C2193 +
                     (C4139 + C4140) * C50689 * C2194) *
                        C50655 -
                    (C3454 * C2194 + (C2438 + C2437) * C50689 * C2193 +
                     (C2436 + C2435) * C50689 * C2192) *
                        C1577) *
                       C50627) *
                      C50792 +
                  ((((C2195 * C414 + C2618 + C2618 + C2190 * C434 +
                      C2197 * C413 + C2619 + C2619 + C50531 * C433) *
                         C50689 * C2192 +
                     (C3193 + C3194) * C50689 * C2193 +
                     (C3195 + C3196) * C50689 * C2194) *
                        C50655 -
                    (C2450 * C2194 + (C2442 + C2441) * C50689 * C2193 +
                     (C2197 * C127 + C2210 + C2210 + C50531 * C141 +
                      C2195 * C126 + C2211 + C2211 + C2190 * C140) *
                         C50689 * C2192) *
                        C1577) *
                       C50800 +
                   (((C2441 + C2442) * C50689 * C2192 +
                     (C2443 + C2444) * C50689 * C2193 +
                     (C2445 + C2446) * C50689 * C2194) *
                        C1577 -
                    ((C2197 * C3145 + C3171 + C3171 + C50531 * C3151 +
                      C2195 * C3144 + C3172 + C3172 + C2190 * C3150) *
                         C50689 * C2194 +
                     (C3196 + C3195) * C50689 * C2193 +
                     (C3194 + C3193) * C50689 * C2192) *
                        C50655) *
                       C50627) *
                      C50562)) /
                    (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 +
            C148 + C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 +
            C123 * C128 + C150 + C150 + C108 * C142) *
               C50689 * C50677 * C50847 -
           (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 + C444 +
            C444 + C107 * C433 + C119 * C414 + C445 + C445 + C106 * C434 +
            C117 * C415 + C446 + C446 + C105 * C435) *
               C50689 * C50677 * C50848 +
           (C117 * C416 + C447 + C447 + C105 * C436 + C119 * C417 + C448 +
            C448 + C106 * C437 + C121 * C418 + C449 + C449 + C107 * C438 +
            C123 * C419 + C450 + C450 + C108 * C439) *
               C50689 * C50677 * C1993) *
              C50800 +
          ((C117 * C805 + C821 + C821 + C105 * C815 + C119 * C806 + C822 +
            C822 + C106 * C816 + C121 * C807 + C823 + C823 + C107 * C817 +
            C123 * C808 + C824 + C824 + C108 * C818) *
               C50689 * C50677 * C50848 -
           (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 + C297 +
            C297 + C107 * C286 + C119 * C267 + C298 + C298 + C106 * C287 +
            C117 * C268 + C299 + C299 + C105 * C288) *
               C50689 * C50677 * C50847 -
           (C123 * C1116 + C1129 + C1129 + C108 * C1124 + C121 * C1117 + C1130 +
            C1130 + C107 * C1125 + C119 * C1118 + C1131 + C1131 + C106 * C1126 +
            C117 * C1119 + C1132 + C1132 + C105 * C1127) *
               C50689 * C50677 * C1993) *
              C50627) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
             C2201 + C2201 + C50531 * C140) *
                C50689 * C2192 +
            (C2435 + C2436) * C50689 * C2193 + C2449 * C2194) *
               C50847 -
           (C4134 * C2194 + (C3191 + C3192) * C50689 * C2193 +
            (C2197 * C414 + C2610 + C2610 + C50531 * C434 + C2195 * C415 +
             C2611 + C2611 + C2190 * C435) *
                C50689 * C2192) *
               C50848 +
           ((C2195 * C416 + C2612 + C2612 + C2190 * C436 + C2197 * C417 +
             C2613 + C2613 + C50531 * C437) *
                C50689 * C2192 +
            (C3631 + C3632) * C50689 * C2193 +
            (C3633 + C3634) * C50689 * C2194) *
               C1993) *
              C50800 +
          (((C3192 + C3191) * C50689 * C2192 +
            (C3190 + C3189) * C50689 * C2193 +
            (C4139 + C4140) * C50689 * C2194) *
               C50848 -
           (C3454 * C2194 + (C2438 + C2437) * C50689 * C2193 +
            (C2436 + C2435) * C50689 * C2192) *
               C50847 -
           ((C2197 * C3606 + C3621 + C3621 + C50531 * C3610 + C2195 * C3607 +
             C3622 + C3622 + C2190 * C3611) *
                C50689 * C2194 +
            (C3634 + C3633) * C50689 * C2193 +
            (C3632 + C3631) * C50689 * C2192) *
               C1993) *
              C50627) *
         C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 +
            C148 + C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 +
            C123 * C128 + C150 + C150 + C108 * C142) *
               C50689 * C50677 * C1577 -
           (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 + C444 +
            C444 + C107 * C433 + C119 * C414 + C445 + C445 + C106 * C434 +
            C117 * C415 + C446 + C446 + C105 * C435) *
               C50689 * C50677 * C50655) *
              C260 +
          ((C117 * C805 + C821 + C821 + C105 * C815 + C119 * C806 + C822 +
            C822 + C106 * C816 + C121 * C807 + C823 + C823 + C107 * C817 +
            C123 * C808 + C824 + C824 + C108 * C818) *
               C50689 * C50677 * C50655 -
           (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 + C297 +
            C297 + C107 * C286 + C119 * C267 + C298 + C298 + C106 * C287 +
            C117 * C268 + C299 + C299 + C105 * C288) *
               C50689 * C50677 * C1577) *
              C261 +
          ((C117 * C269 + C300 + C300 + C105 * C289 + C119 * C270 + C301 +
            C301 + C106 * C290 + C121 * C271 + C302 + C302 + C107 * C291 +
            C123 * C272 + C303 + C303 + C108 * C292) *
               C50689 * C50677 * C1577 -
           (C123 * C1463 + C1476 + C1476 + C108 * C1471 + C121 * C1464 + C1477 +
            C1477 + C107 * C1472 + C119 * C1465 + C1478 + C1478 + C106 * C1473 +
            C117 * C1466 + C1479 + C1479 + C105 * C1474) *
               C50689 * C50677 * C50655) *
              C262) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 +
            C148 + C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 +
            C123 * C128 + C150 + C150 + C108 * C142) *
               C50689 * C50677 * C1577 -
           (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 + C444 +
            C444 + C107 * C433 + C119 * C414 + C445 + C445 + C106 * C434 +
            C117 * C415 + C446 + C446 + C105 * C435) *
               C50689 * C50677 * C50655) *
              C50575 * C928 +
          ((C117 * C414 + C451 + C451 + C105 * C434 + C119 * C413 + C452 +
            C452 + C106 * C433 + C121 * C412 + C453 + C453 + C107 * C432 +
            C123 * C420 + C454 + C454 + C108 * C440) *
               C50689 * C50677 * C50655 -
           (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 + C152 +
            C152 + C107 * C142 + C119 * C127 + C153 + C153 + C106 * C141 +
            C117 * C126 + C154 + C154 + C105 * C140) *
               C50689 * C50677 * C1577) *
              C50575 * C929 +
          ((C117 * C127 + C155 + C155 + C105 * C141 + C119 * C128 + C156 +
            C156 + C106 * C142 + C121 * C129 + C157 + C157 + C107 * C143 +
            C123 * C130 + C158 + C158 + C108 * C144) *
               C50689 * C50677 * C1577 -
           (C123 * C668 + C672 + C672 + C108 * C670 + C121 * C420 + C673 +
            C673 + C107 * C440 + C119 * C412 + C674 + C674 + C106 * C432 +
            C117 * C413 + C675 + C675 + C105 * C433) *
               C50689 * C50677 * C50655) *
              C50575 * C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 + C148 +
           C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 + C123 * C128 +
           C150 + C150 + C108 * C142) *
              C50689 * C50677 * C1743 -
          (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 + C444 + C444 +
           C107 * C433 + C119 * C414 + C445 + C445 + C106 * C434 + C117 * C415 +
           C446 + C446 + C105 * C435) *
              C50689 * C50677 * C1744 +
          (C117 * C416 + C447 + C447 + C105 * C436 + C119 * C417 + C448 + C448 +
           C106 * C437 + C121 * C418 + C449 + C449 + C107 * C438 + C123 * C419 +
           C450 + C450 + C108 * C439) *
              C50689 * C50677 * C1745 -
          (C123 * C1747 + C1760 + C1760 + C108 * C1755 + C121 * C1748 + C1761 +
           C1761 + C107 * C1756 + C119 * C1749 + C1762 + C1762 + C106 * C1757 +
           C117 * C1750 + C1763 + C1763 + C105 * C1758) *
              C50689 * C50677 * C1746) *
         C50575 * C50556) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
             C2201 + C2201 + C50531 * C140) *
                C50689 * C2192 +
            (C2435 + C2436) * C50689 * C2193 + C2449 * C2194) *
               C1577 -
           (C4134 * C2194 + (C3191 + C3192) * C50689 * C2193 +
            (C2197 * C414 + C2610 + C2610 + C50531 * C434 + C2195 * C415 +
             C2611 + C2611 + C2190 * C435) *
                C50689 * C2192) *
               C50655) *
              C50575 * C928 +
          (((C2195 * C414 + C2618 + C2618 + C2190 * C434 + C2197 * C413 +
             C2619 + C2619 + C50531 * C433) *
                C50689 * C2192 +
            (C3193 + C3194) * C50689 * C2193 +
            (C3195 + C3196) * C50689 * C2194) *
               C50655 -
           (C2450 * C2194 + (C2442 + C2441) * C50689 * C2193 +
            (C2197 * C127 + C2210 + C2210 + C50531 * C141 + C2195 * C126 +
             C2211 + C2211 + C2190 * C140) *
                C50689 * C2192) *
               C1577) *
              C50575 * C929 +
          (((C2195 * C127 + C2212 + C2212 + C2190 * C141 + C2197 * C128 +
             C2213 + C2213 + C50531 * C142) *
                C50689 * C2192 +
            (C2794 + C2795) * C50689 * C2193 +
            (C2796 + C2797) * C50689 * C2194) *
               C1577 -
           ((C2197 * C1463 + C2944 + C2944 + C50531 * C1471 + C2195 * C1464 +
             C2945 + C2945 + C2190 * C1472) *
                C50689 * C2194 +
            (C2197 * C808 + C2946 + C2946 + C50531 * C818 + C2195 * C807 +
             C2947 + C2947 + C2190 * C817) *
                C50689 * C2193 +
            (C2197 * C412 + C2948 + C2948 + C50531 * C432 + C2195 * C413 +
             C2949 + C2949 + C2190 * C433) *
                C50689 * C2192) *
               C50655) *
              C50575 * C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
             C2201 + C2201 + C50531 * C140) *
                C50689 * C2192 +
            (C2435 + C2436) * C50689 * C2193 + C2449 * C2194) *
               C1577 -
           (C4134 * C2194 + (C3191 + C3192) * C50689 * C2193 +
            (C2197 * C414 + C2610 + C2610 + C50531 * C434 + C2195 * C415 +
             C2611 + C2611 + C2190 * C435) *
                C50689 * C2192) *
               C50655) *
              C260 +
          (((C3192 + C3191) * C50689 * C2192 +
            (C3190 + C3189) * C50689 * C2193 +
            (C4139 + C4140) * C50689 * C2194) *
               C50655 -
           (C3454 * C2194 + (C2438 + C2437) * C50689 * C2193 +
            (C2436 + C2435) * C50689 * C2192) *
               C1577) *
              C261 +
          ((C2449 * C2192 + (C2440 + C2439) * C50689 * C2193 +
            (C3459 + C3460) * C50689 * C2194) *
               C1577 -
           ((C2197 * C4120 + C4132 + C4132 + C50531 * C4124 + C2195 * C4121 +
             C4133 + C4133 + C2190 * C4125) *
                C50689 * C2194 +
            (C4140 + C4139) * C50689 * C2193 + C4134 * C2192) *
               C50655) *
              C262) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 + C2201 +
            C2201 + C50531 * C140) *
               C50689 * C2192 +
           (C2435 + C2436) * C50689 * C2193 + C2449 * C2194) *
              C1743 -
          (C4134 * C2194 + (C3191 + C3192) * C50689 * C2193 +
           (C2197 * C414 + C2610 + C2610 + C50531 * C434 + C2195 * C415 +
            C2611 + C2611 + C2190 * C435) *
               C50689 * C2192) *
              C1744 +
          ((C2195 * C416 + C2612 + C2612 + C2190 * C436 + C2197 * C417 + C2613 +
            C2613 + C50531 * C437) *
               C50689 * C2192 +
           (C3631 + C3632) * C50689 * C2193 +
           (C3633 + C3634) * C50689 * C2194) *
              C1745 -
          ((C2197 * C4530 + C4543 + C4543 + C50531 * C4538 + C2195 * C4531 +
            C4544 + C4544 + C2190 * C4539) *
               C50689 * C2194 +
           (C2197 * C4532 + C4545 + C4545 + C50531 * C4540 + C2195 * C4533 +
            C4546 + C4546 + C2190 * C4541) *
               C50689 * C2193 +
           (C2197 * C1749 + C4547 + C4547 + C50531 * C1757 + C2195 * C1750 +
            C4548 + C4548 + C2190 * C1758) *
               C50689 * C2192) *
              C1746) *
         C50575 * C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[73] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 +
                    C148 + C148 + C106 * C140 + C121 * C127 + C149 + C149 +
                    C107 * C141 + C123 * C128 + C150 + C150 + C108 * C142) *
                       C50689 * C50677 * C50847 -
                   (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 +
                    C444 + C444 + C107 * C433 + C119 * C414 + C445 + C445 +
                    C106 * C434 + C117 * C415 + C446 + C446 + C105 * C435) *
                       C50689 * C50677 * C50848 +
                   (C117 * C416 + C447 + C447 + C105 * C436 + C119 * C417 +
                    C448 + C448 + C106 * C437 + C121 * C418 + C449 + C449 +
                    C107 * C438 + C123 * C419 + C450 + C450 + C108 * C439) *
                       C50689 * C50677 * C1993) *
                      C50575 * C50792 +
                  ((C117 * C414 + C451 + C451 + C105 * C434 + C119 * C413 +
                    C452 + C452 + C106 * C433 + C121 * C412 + C453 + C453 +
                    C107 * C432 + C123 * C420 + C454 + C454 + C108 * C440) *
                       C50689 * C50677 * C50848 -
                   (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 +
                    C152 + C152 + C107 * C142 + C119 * C127 + C153 + C153 +
                    C106 * C141 + C117 * C126 + C154 + C154 + C105 * C140) *
                       C50689 * C50677 * C50847 -
                   (C123 * C421 + C455 + C455 + C108 * C441 + C121 * C419 +
                    C456 + C456 + C107 * C439 + C119 * C418 + C457 + C457 +
                    C106 * C438 + C117 * C417 + C458 + C458 + C105 * C437) *
                       C50689 * C50677 * C1993) *
                      C50575 * C50562)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 +
                     C2197 * C126 + C2201 + C2201 + C50531 * C140) *
                        C50689 * C2192 +
                    (C2435 + C2436) * C50689 * C2193 + C2449 * C2194) *
                       C50847 -
                   (C4134 * C2194 + (C3191 + C3192) * C50689 * C2193 +
                    (C2197 * C414 + C2610 + C2610 + C50531 * C434 +
                     C2195 * C415 + C2611 + C2611 + C2190 * C435) *
                        C50689 * C2192) *
                       C50848 +
                   ((C2195 * C416 + C2612 + C2612 + C2190 * C436 +
                     C2197 * C417 + C2613 + C2613 + C50531 * C437) *
                        C50689 * C2192 +
                    (C3631 + C3632) * C50689 * C2193 +
                    (C3633 + C3634) * C50689 * C2194) *
                       C1993) *
                      C50575 * C50792 +
                  (((C2195 * C414 + C2618 + C2618 + C2190 * C434 +
                     C2197 * C413 + C2619 + C2619 + C50531 * C433) *
                        C50689 * C2192 +
                    (C3193 + C3194) * C50689 * C2193 +
                    (C3195 + C3196) * C50689 * C2194) *
                       C50848 -
                   (C2450 * C2194 + (C2442 + C2441) * C50689 * C2193 +
                    (C2197 * C127 + C2210 + C2210 + C50531 * C141 +
                     C2195 * C126 + C2211 + C2211 + C2190 * C140) *
                        C50689 * C2192) *
                       C50847 -
                   ((C2197 * C2598 + C2624 + C2624 + C50531 * C2604 +
                     C2195 * C2597 + C2625 + C2625 + C2190 * C2603) *
                        C50689 * C2194 +
                    (C2197 * C1117 + C2626 + C2626 + C50531 * C1125 +
                     C2195 * C1118 + C2627 + C2627 + C2190 * C1126) *
                        C50689 * C2193 +
                    (C2197 * C418 + C2628 + C2628 + C50531 * C438 +
                     C2195 * C417 + C2629 + C2629 + C2190 * C437) *
                        C50689 * C2192) *
                       C1993) *
                      C50575 * C50562)) /
                    (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 +
            C148 + C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 +
            C123 * C128 + C150 + C150 + C108 * C142) *
               C50689 * C50677 * C1577 -
           (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 + C444 +
            C444 + C107 * C433 + C119 * C414 + C445 + C445 + C106 * C434 +
            C117 * C415 + C446 + C446 + C105 * C435) *
               C50689 * C50677 * C50655) *
              C50575 * C928 +
          ((C117 * C414 + C451 + C451 + C105 * C434 + C119 * C413 + C452 +
            C452 + C106 * C433 + C121 * C412 + C453 + C453 + C107 * C432 +
            C123 * C420 + C454 + C454 + C108 * C440) *
               C50689 * C50677 * C50655 -
           (C123 * C129 + C151 + C151 + C108 * C143 + C121 * C128 + C152 +
            C152 + C107 * C142 + C119 * C127 + C153 + C153 + C106 * C141 +
            C117 * C126 + C154 + C154 + C105 * C140) *
               C50689 * C50677 * C1577) *
              C50575 * C929 +
          ((C117 * C127 + C155 + C155 + C105 * C141 + C119 * C128 + C156 +
            C156 + C106 * C142 + C121 * C129 + C157 + C157 + C107 * C143 +
            C123 * C130 + C158 + C158 + C108 * C144) *
               C50689 * C50677 * C1577 -
           (C123 * C668 + C672 + C672 + C108 * C670 + C121 * C420 + C673 +
            C673 + C107 * C440 + C119 * C412 + C674 + C674 + C106 * C432 +
            C117 * C413 + C675 + C675 + C105 * C433) *
               C50689 * C50677 * C50655) *
              C50575 * C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C147 + C147 + C105 * C139 + C119 * C126 + C148 +
            C148 + C106 * C140 + C121 * C127 + C149 + C149 + C107 * C141 +
            C123 * C128 + C150 + C150 + C108 * C142) *
               C50689 * C50677 * C1577 -
           (C123 * C412 + C443 + C443 + C108 * C432 + C121 * C413 + C444 +
            C444 + C107 * C433 + C119 * C414 + C445 + C445 + C106 * C434 +
            C117 * C415 + C446 + C446 + C105 * C435) *
               C50689 * C50677 * C50655) *
              C260 +
          ((C117 * C805 + C821 + C821 + C105 * C815 + C119 * C806 + C822 +
            C822 + C106 * C816 + C121 * C807 + C823 + C823 + C107 * C817 +
            C123 * C808 + C824 + C824 + C108 * C818) *
               C50689 * C50677 * C50655 -
           (C123 * C265 + C296 + C296 + C108 * C285 + C121 * C266 + C297 +
            C297 + C107 * C286 + C119 * C267 + C298 + C298 + C106 * C287 +
            C117 * C268 + C299 + C299 + C105 * C288) *
               C50689 * C50677 * C1577) *
              C261 +
          ((C117 * C269 + C300 + C300 + C105 * C289 + C119 * C270 + C301 +
            C301 + C106 * C290 + C121 * C271 + C302 + C302 + C107 * C291 +
            C123 * C272 + C303 + C303 + C108 * C292) *
               C50689 * C50677 * C1577 -
           (C123 * C1463 + C1476 + C1476 + C108 * C1471 + C121 * C1464 + C1477 +
            C1477 + C107 * C1472 + C119 * C1465 + C1478 + C1478 + C106 * C1473 +
            C117 * C1466 + C1479 + C1479 + C105 * C1474) *
               C50689 * C50677 * C50655) *
              C262) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
             C2201 + C2201 + C50531 * C140) *
                C50689 * C2192 +
            (C2435 + C2436) * C50689 * C2193 + C2449 * C2194) *
               C1577 -
           (C4134 * C2194 + (C3191 + C3192) * C50689 * C2193 +
            (C2197 * C414 + C2610 + C2610 + C50531 * C434 + C2195 * C415 +
             C2611 + C2611 + C2190 * C435) *
                C50689 * C2192) *
               C50655) *
              C50575 * C928 +
          (((C2195 * C414 + C2618 + C2618 + C2190 * C434 + C2197 * C413 +
             C2619 + C2619 + C50531 * C433) *
                C50689 * C2192 +
            (C3193 + C3194) * C50689 * C2193 +
            (C3195 + C3196) * C50689 * C2194) *
               C50655 -
           (C2450 * C2194 + (C2442 + C2441) * C50689 * C2193 +
            (C2197 * C127 + C2210 + C2210 + C50531 * C141 + C2195 * C126 +
             C2211 + C2211 + C2190 * C140) *
                C50689 * C2192) *
               C1577) *
              C50575 * C929 +
          (((C2195 * C127 + C2212 + C2212 + C2190 * C141 + C2197 * C128 +
             C2213 + C2213 + C50531 * C142) *
                C50689 * C2192 +
            (C2794 + C2795) * C50689 * C2193 +
            (C2796 + C2797) * C50689 * C2194) *
               C1577 -
           ((C2197 * C1463 + C2944 + C2944 + C50531 * C1471 + C2195 * C1464 +
             C2945 + C2945 + C2190 * C1472) *
                C50689 * C2194 +
            (C2197 * C808 + C2946 + C2946 + C50531 * C818 + C2195 * C807 +
             C2947 + C2947 + C2190 * C817) *
                C50689 * C2193 +
            (C2197 * C412 + C2948 + C2948 + C50531 * C432 + C2195 * C413 +
             C2949 + C2949 + C2190 * C433) *
                C50689 * C2192) *
               C50655) *
              C50575 * C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2195 * C125 + C2200 + C2200 + C2190 * C139 + C2197 * C126 +
             C2201 + C2201 + C50531 * C140) *
                C50689 * C2192 +
            (C2435 + C2436) * C50689 * C2193 + C2449 * C2194) *
               C1577 -
           (C4134 * C2194 + (C3191 + C3192) * C50689 * C2193 +
            (C2197 * C414 + C2610 + C2610 + C50531 * C434 + C2195 * C415 +
             C2611 + C2611 + C2190 * C435) *
                C50689 * C2192) *
               C50655) *
              C260 +
          (((C3192 + C3191) * C50689 * C2192 +
            (C3190 + C3189) * C50689 * C2193 +
            (C4139 + C4140) * C50689 * C2194) *
               C50655 -
           (C3454 * C2194 + (C2438 + C2437) * C50689 * C2193 +
            (C2436 + C2435) * C50689 * C2192) *
               C1577) *
              C261 +
          ((C2449 * C2192 + (C2440 + C2439) * C50689 * C2193 +
            (C3459 + C3460) * C50689 * C2194) *
               C1577 -
           ((C2197 * C4120 + C4132 + C4132 + C50531 * C4124 + C2195 * C4121 +
             C4133 + C4133 + C2190 * C4125) *
                C50689 * C2194 +
            (C4140 + C4139) * C50689 * C2193 + C4134 * C2192) *
               C50655) *
              C262) *
         C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[75] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C24661 * C125 + C24666 + C24666 + C50785 * C139 +
                     C24663 * C126 + C24667 + C24667 + C50531 * C140) *
                        C50689 * C50849 +
                    (C24892 + C24893) * C50689 * C50850 + C24906 * C24660) *
                       C50591 * C50800 -
                   ((C24896 + C24897) * C50689 * C24660 +
                    (C24895 + C24894) * C50689 * C50850 +
                    (C24893 + C24892) * C50689 * C50849) *
                       C50591 * C50627) *
                      C50843 +
                  (((C24898 + C24899) * C50689 * C50849 +
                    (C24900 + C24901) * C50689 * C50850 +
                    (C24902 + C24903) * C50689 * C24660) *
                       C50591 * C50627 -
                   (C24907 * C24660 + (C24899 + C24898) * C50689 * C50850 +
                    (C24663 * C127 + C24676 + C24676 + C50531 * C141 +
                     C24661 * C126 + C24677 + C24677 + C50785 * C140) *
                        C50689 * C50849) *
                       C50591 * C50800) *
                      C50844 +
                  (((C24661 * C127 + C24678 + C24678 + C50785 * C141 +
                     C24663 * C128 + C24679 + C24679 + C50531 * C142) *
                        C50689 * C50849 +
                    (C25242 + C25243) * C50689 * C50850 +
                    (C25244 + C25245) * C50689 * C24660) *
                       C50591 * C50800 -
                   ((C24663 * C1002 + C25232 + C25232 + C50531 * C1010 +
                     C24661 * C1003 + C25233 + C25233 + C50785 * C1011) *
                        C50689 * C24660 +
                    (C25245 + C25244) * C50689 * C50850 +
                    (C25243 + C25242) * C50689 * C50849) *
                       C50591 * C50627) *
                      C560)) /
                (p * q * std::sqrt(p + q));
    d2ee[76] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C24661 * C125 + C24666 + C24666 + C50785 * C139 +
                      C24663 * C126 + C24667 + C24667 + C50531 * C140) *
                         C50689 * C50849 +
                     (C24892 + C24893) * C50689 * C50850 + C24906 * C24660) *
                        C50801 -
                    ((C25628 + C25629) * C50689 * C24660 +
                     (C25630 + C25631) * C50689 * C50850 +
                     (C24663 * C414 + C25058 + C25058 + C50531 * C434 +
                      C24661 * C415 + C25059 + C25059 + C50785 * C435) *
                         C50689 * C50849) *
                        C50655) *
                       C50800 +
                   (((C25631 + C25630) * C50689 * C50849 +
                     (C25629 + C25628) * C50689 * C50850 +
                     (C24661 * C3143 + C25600 + C25600 + C50785 * C3149 +
                      C24663 * C3144 + C25601 + C25601 + C50531 * C3150) *
                         C50689 * C24660) *
                        C50655 -
                    ((C24896 + C24897) * C50689 * C24660 +
                     (C24895 + C24894) * C50689 * C50850 +
                     (C24893 + C24892) * C50689 * C50849) *
                        C50801) *
                       C50627) *
                      C263 +
                  ((((C24661 * C414 + C25066 + C25066 + C50785 * C434 +
                      C24663 * C413 + C25067 + C25067 + C50531 * C433) *
                         C50689 * C50849 +
                     (C25632 + C25633) * C50689 * C50850 +
                     (C25634 + C25635) * C50689 * C24660) *
                        C50655 -
                    (C24907 * C24660 + (C24899 + C24898) * C50689 * C50850 +
                     (C24663 * C127 + C24676 + C24676 + C50531 * C141 +
                      C24661 * C126 + C24677 + C24677 + C50785 * C140) *
                         C50689 * C50849) *
                        C50801) *
                       C50800 +
                   (((C24898 + C24899) * C50689 * C50849 +
                     (C24900 + C24901) * C50689 * C50850 +
                     (C24902 + C24903) * C50689 * C24660) *
                        C50801 -
                    ((C24663 * C3145 + C25610 + C25610 + C50531 * C3151 +
                      C24661 * C3144 + C25611 + C25611 + C50785 * C3150) *
                         C50689 * C24660 +
                     (C25635 + C25634) * C50689 * C50850 +
                     (C25633 + C25632) * C50689 * C50849) *
                        C50655) *
                       C50627) *
                      C50562)) /
                (p * q * std::sqrt(p + q));
    d2ee[77] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C24661 * C125 + C24666 + C24666 + C50785 * C139 +
                     C24663 * C126 + C24667 + C24667 + C50531 * C140) *
                        C50689 * C50849 +
                    (C24892 + C24893) * C50689 * C50850 + C24906 * C24660) *
                       C50591 * C260 -
                   ((C24896 + C24897) * C50689 * C24660 +
                    (C24895 + C24894) * C50689 * C50850 +
                    (C24893 + C24892) * C50689 * C50849) *
                       C50591 * C261 +
                   (C24906 * C50849 + (C24897 + C24896) * C50689 * C50850 +
                    (C24661 * C2369 + C24850 + C24850 + C50785 * C2375 +
                     C24663 * C2370 + C24851 + C24851 + C50531 * C2376) *
                        C50689 * C24660) *
                       C50591 * C262) *
                      C263 +
                  (((C24898 + C24899) * C50689 * C50849 +
                    (C24900 + C24901) * C50689 * C50850 +
                    (C24902 + C24903) * C50689 * C24660) *
                       C50591 * C261 -
                   (C24907 * C24660 + (C24899 + C24898) * C50689 * C50850 +
                    (C24663 * C127 + C24676 + C24676 + C50531 * C141 +
                     C24661 * C126 + C24677 + C24677 + C50785 * C140) *
                        C50689 * C50849) *
                       C50591 * C260 -
                   ((C24663 * C2371 + C24866 + C24866 + C50531 * C2377 +
                     C24661 * C2370 + C24867 + C24867 + C50785 * C2376) *
                        C50689 * C24660 +
                    (C24903 + C24902) * C50689 * C50850 + C24907 * C50849) *
                       C50591 * C262) *
                      C50562)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((C24661 * C125 + C24666 + C24666 + C50785 * C139 +
                    C24663 * C126 + C24667 + C24667 + C50531 * C140) *
                       C50689 * C50849 +
                   (C24661 * C268 + C24668 + C24668 + C50785 * C288 +
                    C24663 * C267 + C24669 + C24669 + C50531 * C287) *
                       C50689 * C50850 +
                   (C24661 * C269 + C24670 + C24670 + C50785 * C289 +
                    C24663 * C270 + C24671 + C24671 + C50531 * C290) *
                       C50689 * C24660) *
                      C50591 * C50575 * C113 -
                  ((C24663 * C271 + C24672 + C24672 + C50531 * C291 +
                    C24661 * C270 + C24673 + C24673 + C50785 * C290) *
                       C50689 * C24660 +
                   (C24663 * C266 + C24674 + C24674 + C50531 * C286 +
                    C24661 * C267 + C24675 + C24675 + C50785 * C287) *
                       C50689 * C50850 +
                   (C24663 * C127 + C24676 + C24676 + C50531 * C141 +
                    C24661 * C126 + C24677 + C24677 + C50785 * C140) *
                       C50689 * C50849) *
                      C50591 * C50575 * C114 +
                  ((C24661 * C127 + C24678 + C24678 + C50785 * C141 +
                    C24663 * C128 + C24679 + C24679 + C50531 * C142) *
                       C50689 * C50849 +
                   (C24661 * C266 + C24680 + C24680 + C50785 * C286 +
                    C24663 * C265 + C24681 + C24681 + C50531 * C285) *
                       C50689 * C50850 +
                   (C24661 * C271 + C24682 + C24682 + C50785 * C291 +
                    C24663 * C272 + C24683 + C24683 + C50531 * C292) *
                       C50689 * C24660) *
                      C50591 * C50575 * C115 -
                  ((C24663 * C274 + C24684 + C24684 + C50531 * C294 +
                    C24661 * C272 + C24685 + C24685 + C50785 * C292) *
                       C50689 * C24660 +
                   (C24663 * C273 + C24686 + C24686 + C50531 * C293 +
                    C24661 * C265 + C24687 + C24687 + C50785 * C285) *
                       C50689 * C50850 +
                   (C24663 * C129 + C24688 + C24688 + C50531 * C143 +
                    C24661 * C128 + C24689 + C24689 + C50785 * C142) *
                       C50689 * C50849) *
                      C50591 * C50575 * C116)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C24661 * C125 + C24666 + C24666 + C50785 * C139 +
                     C24663 * C126 + C24667 + C24667 + C50531 * C140) *
                        C50689 * C50849 +
                    (C24892 + C24893) * C50689 * C50850 + C24906 * C24660) *
                       C409 -
                   ((C24663 * C1465 + C25054 + C25054 + C50531 * C1473 +
                     C24661 * C1466 + C25055 + C25055 + C50785 * C1474) *
                        C50689 * C24660 +
                    (C24663 * C806 + C25056 + C25056 + C50531 * C816 +
                     C24661 * C805 + C25057 + C25057 + C50785 * C815) *
                        C50689 * C50850 +
                    (C24663 * C414 + C25058 + C25058 + C50531 * C434 +
                     C24661 * C415 + C25059 + C25059 + C50785 * C435) *
                        C50689 * C50849) *
                       C410 +
                   ((C24661 * C416 + C25060 + C25060 + C50785 * C436 +
                     C24663 * C417 + C25061 + C25061 + C50531 * C437) *
                        C50689 * C50849 +
                    (C24661 * C1119 + C25062 + C25062 + C50785 * C1127 +
                     C24663 * C1118 + C25063 + C25063 + C50531 * C1126) *
                        C50689 * C50850 +
                    (C24661 * C2596 + C25064 + C25064 + C50785 * C2602 +
                     C24663 * C2597 + C25065 + C25065 + C50531 * C2603) *
                        C50689 * C24660) *
                       C411) *
                      C50575 * C263 +
                  (((C24661 * C414 + C25066 + C25066 + C50785 * C434 +
                     C24663 * C413 + C25067 + C25067 + C50531 * C433) *
                        C50689 * C50849 +
                    (C24661 * C806 + C25068 + C25068 + C50785 * C816 +
                     C24663 * C807 + C25069 + C25069 + C50531 * C817) *
                        C50689 * C50850 +
                    (C24661 * C1465 + C25070 + C25070 + C50785 * C1473 +
                     C24663 * C1464 + C25071 + C25071 + C50531 * C1472) *
                        C50689 * C24660) *
                       C410 -
                   (C24907 * C24660 + (C24899 + C24898) * C50689 * C50850 +
                    (C24663 * C127 + C24676 + C24676 + C50531 * C141 +
                     C24661 * C126 + C24677 + C24677 + C50785 * C140) *
                        C50689 * C50849) *
                       C409 -
                   ((C24663 * C2598 + C25072 + C25072 + C50531 * C2604 +
                     C24661 * C2597 + C25073 + C25073 + C50785 * C2603) *
                        C50689 * C24660 +
                    (C24663 * C1117 + C25074 + C25074 + C50531 * C1125 +
                     C24661 * C1118 + C25075 + C25075 + C50785 * C1126) *
                        C50689 * C50850 +
                    (C24663 * C418 + C25076 + C25076 + C50531 * C438 +
                     C24661 * C417 + C25077 + C25077 + C50785 * C437) *
                        C50689 * C50849) *
                       C411) *
                      C50575 * C50562)) /
                    (p * q * std::sqrt(p + q));
    d2ee[78] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C24661 * C125 + C24666 + C24666 + C50785 * C139 +
                     C24663 * C126 + C24667 + C24667 + C50531 * C140) *
                        C50689 * C50849 +
                    (C24892 + C24893) * C50689 * C50850 + C24906 * C24660) *
                       C50801 -
                   ((C24663 * C1465 + C25054 + C25054 + C50531 * C1473 +
                     C24661 * C1466 + C25055 + C25055 + C50785 * C1474) *
                        C50689 * C24660 +
                    (C24663 * C806 + C25056 + C25056 + C50531 * C816 +
                     C24661 * C805 + C25057 + C25057 + C50785 * C815) *
                        C50689 * C50850 +
                    (C24663 * C414 + C25058 + C25058 + C50531 * C434 +
                     C24661 * C415 + C25059 + C25059 + C50785 * C435) *
                        C50689 * C50849) *
                       C50655) *
                      C50575 * C50843 +
                  (((C24661 * C414 + C25066 + C25066 + C50785 * C434 +
                     C24663 * C413 + C25067 + C25067 + C50531 * C433) *
                        C50689 * C50849 +
                    (C24661 * C806 + C25068 + C25068 + C50785 * C816 +
                     C24663 * C807 + C25069 + C25069 + C50531 * C817) *
                        C50689 * C50850 +
                    (C24661 * C1465 + C25070 + C25070 + C50785 * C1473 +
                     C24663 * C1464 + C25071 + C25071 + C50531 * C1472) *
                        C50689 * C24660) *
                       C50655 -
                   (C24907 * C24660 + (C24899 + C24898) * C50689 * C50850 +
                    (C24663 * C127 + C24676 + C24676 + C50531 * C141 +
                     C24661 * C126 + C24677 + C24677 + C50785 * C140) *
                        C50689 * C50849) *
                       C50801) *
                      C50575 * C50844 +
                  (((C24661 * C127 + C24678 + C24678 + C50785 * C141 +
                     C24663 * C128 + C24679 + C24679 + C50531 * C142) *
                        C50689 * C50849 +
                    (C25242 + C25243) * C50689 * C50850 +
                    (C25244 + C25245) * C50689 * C24660) *
                       C50801 -
                   ((C24663 * C1463 + C25392 + C25392 + C50531 * C1471 +
                     C24661 * C1464 + C25393 + C25393 + C50785 * C1472) *
                        C50689 * C24660 +
                    (C24663 * C808 + C25394 + C25394 + C50531 * C818 +
                     C24661 * C807 + C25395 + C25395 + C50785 * C817) *
                        C50689 * C50850 +
                    (C24663 * C412 + C25396 + C25396 + C50531 * C432 +
                     C24661 * C413 + C25397 + C25397 + C50785 * C433) *
                        C50689 * C50849) *
                       C50655) *
                      C50575 * C560)) /
                (p * q * std::sqrt(p + q));
    d2ee[79] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((C24661 * C125 + C24666 + C24666 + C50785 * C139 +
                    C24663 * C126 + C24667 + C24667 + C50531 * C140) *
                       C50689 * C50849 +
                   (C24661 * C268 + C24668 + C24668 + C50785 * C288 +
                    C24663 * C267 + C24669 + C24669 + C50531 * C287) *
                       C50689 * C50850 +
                   (C24661 * C269 + C24670 + C24670 + C50785 * C289 +
                    C24663 * C270 + C24671 + C24671 + C50531 * C290) *
                       C50689 * C24660) *
                      C50591 * C50575 * C113 -
                  ((C24663 * C271 + C24672 + C24672 + C50531 * C291 +
                    C24661 * C270 + C24673 + C24673 + C50785 * C290) *
                       C50689 * C24660 +
                   (C24663 * C266 + C24674 + C24674 + C50531 * C286 +
                    C24661 * C267 + C24675 + C24675 + C50785 * C287) *
                       C50689 * C50850 +
                   (C24663 * C127 + C24676 + C24676 + C50531 * C141 +
                    C24661 * C126 + C24677 + C24677 + C50785 * C140) *
                       C50689 * C50849) *
                      C50591 * C50575 * C114 +
                  ((C24661 * C127 + C24678 + C24678 + C50785 * C141 +
                    C24663 * C128 + C24679 + C24679 + C50531 * C142) *
                       C50689 * C50849 +
                   (C24661 * C266 + C24680 + C24680 + C50785 * C286 +
                    C24663 * C265 + C24681 + C24681 + C50531 * C285) *
                       C50689 * C50850 +
                   (C24661 * C271 + C24682 + C24682 + C50785 * C291 +
                    C24663 * C272 + C24683 + C24683 + C50531 * C292) *
                       C50689 * C24660) *
                      C50591 * C50575 * C115 -
                  ((C24663 * C274 + C24684 + C24684 + C50531 * C294 +
                    C24661 * C272 + C24685 + C24685 + C50785 * C292) *
                       C50689 * C24660 +
                   (C24663 * C273 + C24686 + C24686 + C50531 * C293 +
                    C24661 * C265 + C24687 + C24687 + C50785 * C285) *
                       C50689 * C50850 +
                   (C24663 * C129 + C24688 + C24688 + C50531 * C143 +
                    C24661 * C128 + C24689 + C24689 + C50785 * C142) *
                       C50689 * C50849) *
                      C50591 * C50575 * C116)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C24661 * C125 + C24666 + C24666 + C50785 * C139 +
                     C24663 * C126 + C24667 + C24667 + C50531 * C140) *
                        C50689 * C50849 +
                    (C24892 + C24893) * C50689 * C50850 + C24906 * C24660) *
                       C50591 * C260 -
                   ((C24896 + C24897) * C50689 * C24660 +
                    (C24895 + C24894) * C50689 * C50850 +
                    (C24893 + C24892) * C50689 * C50849) *
                       C50591 * C261 +
                   (C24906 * C50849 + (C24897 + C24896) * C50689 * C50850 +
                    (C24661 * C2369 + C24850 + C24850 + C50785 * C2375 +
                     C24663 * C2370 + C24851 + C24851 + C50531 * C2376) *
                        C50689 * C24660) *
                       C50591 * C262) *
                      C263 +
                  (((C24898 + C24899) * C50689 * C50849 +
                    (C24900 + C24901) * C50689 * C50850 +
                    (C24902 + C24903) * C50689 * C24660) *
                       C50591 * C261 -
                   (C24907 * C24660 + (C24899 + C24898) * C50689 * C50850 +
                    (C24663 * C127 + C24676 + C24676 + C50531 * C141 +
                     C24661 * C126 + C24677 + C24677 + C50785 * C140) *
                        C50689 * C50849) *
                       C50591 * C260 -
                   ((C24663 * C2371 + C24866 + C24866 + C50531 * C2377 +
                     C24661 * C2370 + C24867 + C24867 + C50785 * C2376) *
                        C50689 * C24660 +
                    (C24903 + C24902) * C50689 * C50850 + C24907 * C50849) *
                       C50591 * C262) *
                      C50562)) /
                    (p * q * std::sqrt(p + q));
    d2ee[80] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C24661 * C125 + C24666 + C24666 + C50785 * C139 +
                     C24663 * C126 + C24667 + C24667 + C50531 * C140) *
                        C50689 * C50849 +
                    (C24892 + C24893) * C50689 * C50850 + C24906 * C24660) *
                       C50591 * C50845 -
                   (C25887 * C24660 + (C24895 + C24894) * C50689 * C50850 +
                    (C24893 + C24892) * C50689 * C50849) *
                       C50591 * C50846 +
                   (C24906 * C50849 + (C24897 + C24896) * C50689 * C50850 +
                    (C25892 + C25893) * C50689 * C24660) *
                       C50591 * C1232) *
                      C50792 +
                  (((C24898 + C24899) * C50689 * C50849 +
                    (C24900 + C24901) * C50689 * C50850 +
                    (C24902 + C24903) * C50689 * C24660) *
                       C50591 * C50846 -
                   (C24907 * C24660 + (C24899 + C24898) * C50689 * C50850 +
                    (C24663 * C127 + C24676 + C24676 + C50531 * C141 +
                     C24661 * C126 + C24677 + C24677 + C50785 * C140) *
                        C50689 * C50849) *
                       C50591 * C50845 -
                   ((C24663 * C2371 + C24866 + C24866 + C50531 * C2377 +
                     C24661 * C2370 + C24867 + C24867 + C50785 * C2376) *
                        C50689 * C24660 +
                    (C24903 + C24902) * C50689 * C50850 + C24907 * C50849) *
                       C50591 * C1232) *
                      C50562)) /
                (p * q * std::sqrt(p + q));
    d2ee[81] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C24661 * C125 + C24666 + C24666 + C50785 * C139 +
                     C24663 * C126 + C24667 + C24667 + C50531 * C140) *
                        C50689 * C50849 +
                    (C24892 + C24893) * C50689 * C50850 + C24906 * C24660) *
                       C50801 -
                   (C26555 * C24660 + (C25630 + C25631) * C50689 * C50850 +
                    (C24663 * C414 + C25058 + C25058 + C50531 * C434 +
                     C24661 * C415 + C25059 + C25059 + C50785 * C435) *
                        C50689 * C50849) *
                       C50655) *
                      C50845 +
                  (((C25631 + C25630) * C50689 * C50849 +
                    (C25629 + C25628) * C50689 * C50850 +
                    (C26560 + C26561) * C50689 * C24660) *
                       C50655 -
                   (C25887 * C24660 + (C24895 + C24894) * C50689 * C50850 +
                    (C24893 + C24892) * C50689 * C50849) *
                       C50801) *
                      C50846 +
                  ((C24906 * C50849 + (C24897 + C24896) * C50689 * C50850 +
                    (C25892 + C25893) * C50689 * C24660) *
                       C50801 -
                   ((C24663 * C4120 + C26553 + C26553 + C50531 * C4124 +
                     C24661 * C4121 + C26554 + C26554 + C50785 * C4125) *
                        C50689 * C24660 +
                    (C26561 + C26560) * C50689 * C50850 + C26555 * C50849) *
                       C50655) *
                      C1232) *
                 C50556) /
                (p * q * std::sqrt(p + q));
    d2ee[82] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((C24661 * C125 + C24666 + C24666 + C50785 * C139 +
                    C24663 * C126 + C24667 + C24667 + C50531 * C140) *
                       C50689 * C50849 +
                   (C24892 + C24893) * C50689 * C50850 + C24906 * C24660) *
                      C50591 * C997 -
                  (C25887 * C24660 + (C24895 + C24894) * C50689 * C50850 +
                   (C24893 + C24892) * C50689 * C50849) *
                      C50591 * C998 +
                  (C24906 * C50849 + (C24897 + C24896) * C50689 * C50850 +
                   (C25892 + C25893) * C50689 * C24660) *
                      C50591 * C999 -
                  ((C24663 * C3440 + C25885 + C25885 + C50531 * C3444 +
                    C24661 * C3441 + C25886 + C25886 + C50785 * C3445) *
                       C50689 * C24660 +
                   (C25893 + C25892) * C50689 * C50850 + C25887 * C50849) *
                      C50591 * C1000) *
                 C50556) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C24661 * C125 + C24666 + C24666 + C50785 * C139 +
                     C24663 * C126 + C24667 + C24667 + C50531 * C140) *
                        C50689 * C50849 +
                    (C24892 + C24893) * C50689 * C50850 + C24906 * C24660) *
                       C50591 * C926 -
                   ((C24896 + C24897) * C50689 * C24660 +
                    (C24895 + C24894) * C50689 * C50850 +
                    (C24893 + C24892) * C50689 * C50849) *
                       C50591 * C50627) *
                      C928 +
                  (((C24898 + C24899) * C50689 * C50849 +
                    (C24900 + C24901) * C50689 * C50850 +
                    (C24902 + C24903) * C50689 * C24660) *
                       C50591 * C50627 -
                   (C24907 * C24660 + (C24899 + C24898) * C50689 * C50850 +
                    (C24663 * C127 + C24676 + C24676 + C50531 * C141 +
                     C24661 * C126 + C24677 + C24677 + C50785 * C140) *
                        C50689 * C50849) *
                       C50591 * C926) *
                      C929 +
                  (((C24661 * C127 + C24678 + C24678 + C50785 * C141 +
                     C24663 * C128 + C24679 + C24679 + C50531 * C142) *
                        C50689 * C50849 +
                    (C25242 + C25243) * C50689 * C50850 +
                    (C25244 + C25245) * C50689 * C24660) *
                       C50591 * C926 -
                   ((C24663 * C1002 + C25232 + C25232 + C50531 * C1010 +
                     C24661 * C1003 + C25233 + C25233 + C50785 * C1011) *
                        C50689 * C24660 +
                    (C25245 + C25244) * C50689 * C50850 +
                    (C25243 + C25242) * C50689 * C50849) *
                       C50591 * C50627) *
                      C930)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C24661 * C125 + C24666 + C24666 + C50785 * C139 +
                     C24663 * C126 + C24667 + C24667 + C50531 * C140) *
                        C50689 * C50849 +
                    (C24892 + C24893) * C50689 * C50850 + C24906 * C24660) *
                       C409 -
                   ((C25628 + C25629) * C50689 * C24660 +
                    (C25630 + C25631) * C50689 * C50850 +
                    (C24663 * C414 + C25058 + C25058 + C50531 * C434 +
                     C24661 * C415 + C25059 + C25059 + C50785 * C435) *
                        C50689 * C50849) *
                       C410 +
                   ((C24661 * C416 + C25060 + C25060 + C50785 * C436 +
                     C24663 * C417 + C25061 + C25061 + C50531 * C437) *
                        C50689 * C50849 +
                    (C26058 + C26059) * C50689 * C50850 +
                    (C26060 + C26061) * C50689 * C24660) *
                       C411) *
                      C926 +
                  (((C25631 + C25630) * C50689 * C50849 +
                    (C25629 + C25628) * C50689 * C50850 +
                    (C24661 * C3143 + C25600 + C25600 + C50785 * C3149 +
                     C24663 * C3144 + C25601 + C25601 + C50531 * C3150) *
                        C50689 * C24660) *
                       C410 -
                   (C25887 * C24660 + (C24895 + C24894) * C50689 * C50850 +
                    (C24893 + C24892) * C50689 * C50849) *
                       C409 -
                   ((C24663 * C3606 + C26048 + C26048 + C50531 * C3610 +
                     C24661 * C3607 + C26049 + C26049 + C50785 * C3611) *
                        C50689 * C24660 +
                    (C26061 + C26060) * C50689 * C50850 +
                    (C26059 + C26058) * C50689 * C50849) *
                       C411) *
                      C50627) *
                 C50556) /
                    (p * q * std::sqrt(p + q));
    d2ee[83] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C24661 * C125 + C24666 + C24666 + C50785 * C139 +
                      C24663 * C126 + C24667 + C24667 + C50531 * C140) *
                         C50689 * C50849 +
                     (C24892 + C24893) * C50689 * C50850 + C24906 * C24660) *
                        C50801 -
                    ((C25628 + C25629) * C50689 * C24660 +
                     (C25630 + C25631) * C50689 * C50850 +
                     (C24663 * C414 + C25058 + C25058 + C50531 * C434 +
                      C24661 * C415 + C25059 + C25059 + C50785 * C435) *
                         C50689 * C50849) *
                        C50655) *
                       C926 +
                   (((C25631 + C25630) * C50689 * C50849 +
                     (C25629 + C25628) * C50689 * C50850 +
                     (C24661 * C3143 + C25600 + C25600 + C50785 * C3149 +
                      C24663 * C3144 + C25601 + C25601 + C50531 * C3150) *
                         C50689 * C24660) *
                        C50655 -
                    (C25887 * C24660 + (C24895 + C24894) * C50689 * C50850 +
                     (C24893 + C24892) * C50689 * C50849) *
                        C50801) *
                       C50627) *
                      C50792 +
                  ((((C24661 * C414 + C25066 + C25066 + C50785 * C434 +
                      C24663 * C413 + C25067 + C25067 + C50531 * C433) *
                         C50689 * C50849 +
                     (C25632 + C25633) * C50689 * C50850 +
                     (C25634 + C25635) * C50689 * C24660) *
                        C50655 -
                    (C24907 * C24660 + (C24899 + C24898) * C50689 * C50850 +
                     (C24663 * C127 + C24676 + C24676 + C50531 * C141 +
                      C24661 * C126 + C24677 + C24677 + C50785 * C140) *
                         C50689 * C50849) *
                        C50801) *
                       C926 +
                   (((C24898 + C24899) * C50689 * C50849 +
                     (C24900 + C24901) * C50689 * C50850 +
                     (C24902 + C24903) * C50689 * C24660) *
                        C50801 -
                    ((C24663 * C3145 + C25610 + C25610 + C50531 * C3151 +
                      C24661 * C3144 + C25611 + C25611 + C50785 * C3150) *
                         C50689 * C24660 +
                     (C25635 + C25634) * C50689 * C50850 +
                     (C25633 + C25632) * C50689 * C50849) *
                        C50655) *
                       C50627) *
                      C50562)) /
                (p * q * std::sqrt(p + q));
    d2ee[84] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C24661 * C125 + C24666 + C24666 + C50785 * C139 +
                     C24663 * C126 + C24667 + C24667 + C50531 * C140) *
                        C50689 * C50849 +
                    (C24892 + C24893) * C50689 * C50850 + C24906 * C24660) *
                       C50591 * C926 -
                   ((C24896 + C24897) * C50689 * C24660 +
                    (C24895 + C24894) * C50689 * C50850 +
                    (C24893 + C24892) * C50689 * C50849) *
                       C50591 * C50627) *
                      C928 +
                  (((C24898 + C24899) * C50689 * C50849 +
                    (C24900 + C24901) * C50689 * C50850 +
                    (C24902 + C24903) * C50689 * C24660) *
                       C50591 * C50627 -
                   (C24907 * C24660 + (C24899 + C24898) * C50689 * C50850 +
                    (C24663 * C127 + C24676 + C24676 + C50531 * C141 +
                     C24661 * C126 + C24677 + C24677 + C50785 * C140) *
                        C50689 * C50849) *
                       C50591 * C926) *
                      C929 +
                  (((C24661 * C127 + C24678 + C24678 + C50785 * C141 +
                     C24663 * C128 + C24679 + C24679 + C50531 * C142) *
                        C50689 * C50849 +
                    (C25242 + C25243) * C50689 * C50850 +
                    (C25244 + C25245) * C50689 * C24660) *
                       C50591 * C926 -
                   ((C24663 * C1002 + C25232 + C25232 + C50531 * C1010 +
                     C24661 * C1003 + C25233 + C25233 + C50785 * C1011) *
                        C50689 * C24660 +
                    (C25245 + C25244) * C50689 * C50850 +
                    (C25243 + C25242) * C50689 * C50849) *
                       C50591 * C50627) *
                      C930)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((C24661 * C125 + C24666 + C24666 + C50785 * C139 +
                    C24663 * C126 + C24667 + C24667 + C50531 * C140) *
                       C50689 * C50849 +
                   (C24892 + C24893) * C50689 * C50850 + C24906 * C24660) *
                      C50591 * C997 -
                  (C25887 * C24660 + (C24895 + C24894) * C50689 * C50850 +
                   (C24893 + C24892) * C50689 * C50849) *
                      C50591 * C998 +
                  (C24906 * C50849 + (C24897 + C24896) * C50689 * C50850 +
                   (C25892 + C25893) * C50689 * C24660) *
                      C50591 * C999 -
                  ((C24663 * C3440 + C25885 + C25885 + C50531 * C3444 +
                    C24661 * C3441 + C25886 + C25886 + C50785 * C3445) *
                       C50689 * C24660 +
                   (C25893 + C25892) * C50689 * C50850 + C25887 * C50849) *
                      C50591 * C1000) *
                 C50556) /
                    (p * q * std::sqrt(p + q));
    d2ee[85] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C24661 * C125 + C24666 + C24666 + C50785 * C139 +
                      C24663 * C126 + C24667 + C24667 + C50531 * C140) *
                         C50689 * C50849 +
                     (C24892 + C24893) * C50689 * C50850 + C24906 * C24660) *
                        C1577 -
                    (C26555 * C24660 + (C25630 + C25631) * C50689 * C50850 +
                     (C24663 * C414 + C25058 + C25058 + C50531 * C434 +
                      C24661 * C415 + C25059 + C25059 + C50785 * C435) *
                         C50689 * C50849) *
                        C50655) *
                       C50800 +
                   (((C25631 + C25630) * C50689 * C50849 +
                     (C25629 + C25628) * C50689 * C50850 +
                     (C26560 + C26561) * C50689 * C24660) *
                        C50655 -
                    (C25887 * C24660 + (C24895 + C24894) * C50689 * C50850 +
                     (C24893 + C24892) * C50689 * C50849) *
                        C1577) *
                       C50627) *
                      C50792 +
                  ((((C24661 * C414 + C25066 + C25066 + C50785 * C434 +
                      C24663 * C413 + C25067 + C25067 + C50531 * C433) *
                         C50689 * C50849 +
                     (C25632 + C25633) * C50689 * C50850 +
                     (C25634 + C25635) * C50689 * C24660) *
                        C50655 -
                    (C24907 * C24660 + (C24899 + C24898) * C50689 * C50850 +
                     (C24663 * C127 + C24676 + C24676 + C50531 * C141 +
                      C24661 * C126 + C24677 + C24677 + C50785 * C140) *
                         C50689 * C50849) *
                        C1577) *
                       C50800 +
                   (((C24898 + C24899) * C50689 * C50849 +
                     (C24900 + C24901) * C50689 * C50850 +
                     (C24902 + C24903) * C50689 * C24660) *
                        C1577 -
                    ((C24663 * C3145 + C25610 + C25610 + C50531 * C3151 +
                      C24661 * C3144 + C25611 + C25611 + C50785 * C3150) *
                         C50689 * C24660 +
                     (C25635 + C25634) * C50689 * C50850 +
                     (C25633 + C25632) * C50689 * C50849) *
                        C50655) *
                       C50627) *
                      C50562)) /
                (p * q * std::sqrt(p + q));
    d2ee[86] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C24661 * C125 + C24666 + C24666 + C50785 * C139 +
                     C24663 * C126 + C24667 + C24667 + C50531 * C140) *
                        C50689 * C50849 +
                    (C24892 + C24893) * C50689 * C50850 + C24906 * C24660) *
                       C50847 -
                   (C26555 * C24660 + (C25630 + C25631) * C50689 * C50850 +
                    (C24663 * C414 + C25058 + C25058 + C50531 * C434 +
                     C24661 * C415 + C25059 + C25059 + C50785 * C435) *
                        C50689 * C50849) *
                       C50848 +
                   ((C24661 * C416 + C25060 + C25060 + C50785 * C436 +
                     C24663 * C417 + C25061 + C25061 + C50531 * C437) *
                        C50689 * C50849 +
                    (C26058 + C26059) * C50689 * C50850 +
                    (C26060 + C26061) * C50689 * C24660) *
                       C1993) *
                      C50800 +
                  (((C25631 + C25630) * C50689 * C50849 +
                    (C25629 + C25628) * C50689 * C50850 +
                    (C26560 + C26561) * C50689 * C24660) *
                       C50848 -
                   (C25887 * C24660 + (C24895 + C24894) * C50689 * C50850 +
                    (C24893 + C24892) * C50689 * C50849) *
                       C50847 -
                   ((C24663 * C3606 + C26048 + C26048 + C50531 * C3610 +
                     C24661 * C3607 + C26049 + C26049 + C50785 * C3611) *
                        C50689 * C24660 +
                    (C26061 + C26060) * C50689 * C50850 +
                    (C26059 + C26058) * C50689 * C50849) *
                       C1993) *
                      C50627) *
                 C50556) /
                (p * q * std::sqrt(p + q));
    d2ee[87] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C24661 * C125 + C24666 + C24666 + C50785 * C139 +
                     C24663 * C126 + C24667 + C24667 + C50531 * C140) *
                        C50689 * C50849 +
                    (C24892 + C24893) * C50689 * C50850 + C24906 * C24660) *
                       C1577 -
                   (C26555 * C24660 + (C25630 + C25631) * C50689 * C50850 +
                    (C24663 * C414 + C25058 + C25058 + C50531 * C434 +
                     C24661 * C415 + C25059 + C25059 + C50785 * C435) *
                        C50689 * C50849) *
                       C50655) *
                      C260 +
                  (((C25631 + C25630) * C50689 * C50849 +
                    (C25629 + C25628) * C50689 * C50850 +
                    (C26560 + C26561) * C50689 * C24660) *
                       C50655 -
                   (C25887 * C24660 + (C24895 + C24894) * C50689 * C50850 +
                    (C24893 + C24892) * C50689 * C50849) *
                       C1577) *
                      C261 +
                  ((C24906 * C50849 + (C24897 + C24896) * C50689 * C50850 +
                    (C25892 + C25893) * C50689 * C24660) *
                       C1577 -
                   ((C24663 * C4120 + C26553 + C26553 + C50531 * C4124 +
                     C24661 * C4121 + C26554 + C26554 + C50785 * C4125) *
                        C50689 * C24660 +
                    (C26561 + C26560) * C50689 * C50850 + C26555 * C50849) *
                       C50655) *
                      C262) *
                 C50556) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C24661 * C125 + C24666 + C24666 + C50785 * C139 +
                     C24663 * C126 + C24667 + C24667 + C50531 * C140) *
                        C50689 * C50849 +
                    (C24892 + C24893) * C50689 * C50850 + C24906 * C24660) *
                       C1577 -
                   (C26555 * C24660 + (C25630 + C25631) * C50689 * C50850 +
                    (C24663 * C414 + C25058 + C25058 + C50531 * C434 +
                     C24661 * C415 + C25059 + C25059 + C50785 * C435) *
                        C50689 * C50849) *
                       C50655) *
                      C50575 * C928 +
                  (((C24661 * C414 + C25066 + C25066 + C50785 * C434 +
                     C24663 * C413 + C25067 + C25067 + C50531 * C433) *
                        C50689 * C50849 +
                    (C25632 + C25633) * C50689 * C50850 +
                    (C25634 + C25635) * C50689 * C24660) *
                       C50655 -
                   (C24907 * C24660 + (C24899 + C24898) * C50689 * C50850 +
                    (C24663 * C127 + C24676 + C24676 + C50531 * C141 +
                     C24661 * C126 + C24677 + C24677 + C50785 * C140) *
                        C50689 * C50849) *
                       C1577) *
                      C50575 * C929 +
                  (((C24661 * C127 + C24678 + C24678 + C50785 * C141 +
                     C24663 * C128 + C24679 + C24679 + C50531 * C142) *
                        C50689 * C50849 +
                    (C25242 + C25243) * C50689 * C50850 +
                    (C25244 + C25245) * C50689 * C24660) *
                       C1577 -
                   ((C24663 * C1463 + C25392 + C25392 + C50531 * C1471 +
                     C24661 * C1464 + C25393 + C25393 + C50785 * C1472) *
                        C50689 * C24660 +
                    (C24663 * C808 + C25394 + C25394 + C50531 * C818 +
                     C24661 * C807 + C25395 + C25395 + C50785 * C817) *
                        C50689 * C50850 +
                    (C24663 * C412 + C25396 + C25396 + C50531 * C432 +
                     C24661 * C413 + C25397 + C25397 + C50785 * C433) *
                        C50689 * C50849) *
                       C50655) *
                      C50575 * C930)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((C24661 * C125 + C24666 + C24666 + C50785 * C139 +
                    C24663 * C126 + C24667 + C24667 + C50531 * C140) *
                       C50689 * C50849 +
                   (C24892 + C24893) * C50689 * C50850 + C24906 * C24660) *
                      C1743 -
                  (C26555 * C24660 + (C25630 + C25631) * C50689 * C50850 +
                   (C24663 * C414 + C25058 + C25058 + C50531 * C434 +
                    C24661 * C415 + C25059 + C25059 + C50785 * C435) *
                       C50689 * C50849) *
                      C1744 +
                  ((C24661 * C416 + C25060 + C25060 + C50785 * C436 +
                    C24663 * C417 + C25061 + C25061 + C50531 * C437) *
                       C50689 * C50849 +
                   (C26058 + C26059) * C50689 * C50850 +
                   (C26060 + C26061) * C50689 * C24660) *
                      C1745 -
                  ((C24663 * C4530 + C26952 + C26952 + C50531 * C4538 +
                    C24661 * C4531 + C26953 + C26953 + C50785 * C4539) *
                       C50689 * C24660 +
                   (C24663 * C4532 + C26954 + C26954 + C50531 * C4540 +
                    C24661 * C4533 + C26955 + C26955 + C50785 * C4541) *
                       C50689 * C50850 +
                   (C24663 * C1749 + C26956 + C26956 + C50531 * C1757 +
                    C24661 * C1750 + C26957 + C26957 + C50785 * C1758) *
                       C50689 * C50849) *
                      C1746) *
                 C50575 * C50556) /
                    (p * q * std::sqrt(p + q));
    d2ee[88] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C24661 * C125 + C24666 + C24666 + C50785 * C139 +
                     C24663 * C126 + C24667 + C24667 + C50531 * C140) *
                        C50689 * C50849 +
                    (C24892 + C24893) * C50689 * C50850 + C24906 * C24660) *
                       C50847 -
                   (C26555 * C24660 + (C25630 + C25631) * C50689 * C50850 +
                    (C24663 * C414 + C25058 + C25058 + C50531 * C434 +
                     C24661 * C415 + C25059 + C25059 + C50785 * C435) *
                        C50689 * C50849) *
                       C50848 +
                   ((C24661 * C416 + C25060 + C25060 + C50785 * C436 +
                     C24663 * C417 + C25061 + C25061 + C50531 * C437) *
                        C50689 * C50849 +
                    (C26058 + C26059) * C50689 * C50850 +
                    (C26060 + C26061) * C50689 * C24660) *
                       C1993) *
                      C50575 * C50792 +
                  (((C24661 * C414 + C25066 + C25066 + C50785 * C434 +
                     C24663 * C413 + C25067 + C25067 + C50531 * C433) *
                        C50689 * C50849 +
                    (C25632 + C25633) * C50689 * C50850 +
                    (C25634 + C25635) * C50689 * C24660) *
                       C50848 -
                   (C24907 * C24660 + (C24899 + C24898) * C50689 * C50850 +
                    (C24663 * C127 + C24676 + C24676 + C50531 * C141 +
                     C24661 * C126 + C24677 + C24677 + C50785 * C140) *
                        C50689 * C50849) *
                       C50847 -
                   ((C24663 * C2598 + C25072 + C25072 + C50531 * C2604 +
                     C24661 * C2597 + C25073 + C25073 + C50785 * C2603) *
                        C50689 * C24660 +
                    (C24663 * C1117 + C25074 + C25074 + C50531 * C1125 +
                     C24661 * C1118 + C25075 + C25075 + C50785 * C1126) *
                        C50689 * C50850 +
                    (C24663 * C418 + C25076 + C25076 + C50531 * C438 +
                     C24661 * C417 + C25077 + C25077 + C50785 * C437) *
                        C50689 * C50849) *
                       C1993) *
                      C50575 * C50562)) /
                (p * q * std::sqrt(p + q));
    d2ee[89] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C24661 * C125 + C24666 + C24666 + C50785 * C139 +
                     C24663 * C126 + C24667 + C24667 + C50531 * C140) *
                        C50689 * C50849 +
                    (C24892 + C24893) * C50689 * C50850 + C24906 * C24660) *
                       C1577 -
                   (C26555 * C24660 + (C25630 + C25631) * C50689 * C50850 +
                    (C24663 * C414 + C25058 + C25058 + C50531 * C434 +
                     C24661 * C415 + C25059 + C25059 + C50785 * C435) *
                        C50689 * C50849) *
                       C50655) *
                      C50575 * C928 +
                  (((C24661 * C414 + C25066 + C25066 + C50785 * C434 +
                     C24663 * C413 + C25067 + C25067 + C50531 * C433) *
                        C50689 * C50849 +
                    (C25632 + C25633) * C50689 * C50850 +
                    (C25634 + C25635) * C50689 * C24660) *
                       C50655 -
                   (C24907 * C24660 + (C24899 + C24898) * C50689 * C50850 +
                    (C24663 * C127 + C24676 + C24676 + C50531 * C141 +
                     C24661 * C126 + C24677 + C24677 + C50785 * C140) *
                        C50689 * C50849) *
                       C1577) *
                      C50575 * C929 +
                  (((C24661 * C127 + C24678 + C24678 + C50785 * C141 +
                     C24663 * C128 + C24679 + C24679 + C50531 * C142) *
                        C50689 * C50849 +
                    (C25242 + C25243) * C50689 * C50850 +
                    (C25244 + C25245) * C50689 * C24660) *
                       C1577 -
                   ((C24663 * C1463 + C25392 + C25392 + C50531 * C1471 +
                     C24661 * C1464 + C25393 + C25393 + C50785 * C1472) *
                        C50689 * C24660 +
                    (C24663 * C808 + C25394 + C25394 + C50531 * C818 +
                     C24661 * C807 + C25395 + C25395 + C50785 * C817) *
                        C50689 * C50850 +
                    (C24663 * C412 + C25396 + C25396 + C50531 * C432 +
                     C24661 * C413 + C25397 + C25397 + C50785 * C433) *
                        C50689 * C50849) *
                       C50655) *
                      C50575 * C930)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C24661 * C125 + C24666 + C24666 + C50785 * C139 +
                     C24663 * C126 + C24667 + C24667 + C50531 * C140) *
                        C50689 * C50849 +
                    (C24892 + C24893) * C50689 * C50850 + C24906 * C24660) *
                       C1577 -
                   (C26555 * C24660 + (C25630 + C25631) * C50689 * C50850 +
                    (C24663 * C414 + C25058 + C25058 + C50531 * C434 +
                     C24661 * C415 + C25059 + C25059 + C50785 * C435) *
                        C50689 * C50849) *
                       C50655) *
                      C260 +
                  (((C25631 + C25630) * C50689 * C50849 +
                    (C25629 + C25628) * C50689 * C50850 +
                    (C26560 + C26561) * C50689 * C24660) *
                       C50655 -
                   (C25887 * C24660 + (C24895 + C24894) * C50689 * C50850 +
                    (C24893 + C24892) * C50689 * C50849) *
                       C1577) *
                      C261 +
                  ((C24906 * C50849 + (C24897 + C24896) * C50689 * C50850 +
                    (C25892 + C25893) * C50689 * C24660) *
                       C1577 -
                   ((C24663 * C4120 + C26553 + C26553 + C50531 * C4124 +
                     C24661 * C4121 + C26554 + C26554 + C50785 * C4125) *
                        C50689 * C24660 +
                    (C26561 + C26560) * C50689 * C50850 + C26555 * C50849) *
                       C50655) *
                      C262) *
                 C50556) /
                    (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50814 +
             C22247 * C50753) *
                C50849 +
            (C31294 + C31295) * C50850 + C31306 * C24660) *
               C50591 * C50800 -
           ((C31298 + C31299) * C24660 + (C31297 + C31296) * C50850 +
            (C31295 + C31294) * C50849) *
               C50591 * C50627) *
              C50843 +
          (((C31300 + C31301) * C50849 + (C31302 + C31303) * C50850 +
            (C31304 + C31305) * C24660) *
               C50591 * C50627 -
           (C31307 * C24660 + (C31301 + C31300) * C50850 +
            (C22251 * C50753 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50814) *
                C50849) *
               C50591 * C50800) *
              C50844 +
          ((((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C50814 +
             C22571 * C50753) *
                C50849 +
            (C31600 + C31601) * C50850 + (C31602 + C31608) * C24660) *
               C50591 * C50800 -
           (((C19896 * C3145 + C20394 + C20394 + C50526 * C3151) * C50753 +
             C20292 * C50814) *
                C24660 +
            (C31608 + C31602) * C50850 + (C31601 + C31600) * C50849) *
               C50591 * C50627) *
              C560)) /
        (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50814 +
              C22247 * C50753) *
                 C50849 +
             (C31294 + C31295) * C50850 + C31306 * C24660) *
                C50801 -
            ((C31949 + C31950) * C24660 + (C31951 + C31952) * C50850 +
             (C22248 * C50753 + C22247 * C50814) * C50849) *
                C50655) *
               C50800 +
           (((C31952 + C31951) * C50849 + (C31950 + C31949) * C50850 +
             (C20554 * C50814 + C20856 * C50753) * C24660) *
                C50655 -
            ((C31298 + C31299) * C24660 + (C31297 + C31296) * C50850 +
             (C31295 + C31294) * C50849) *
                C50801) *
               C50627) *
              C263 +
          ((((C22251 * C50814 + C22252 * C50753) * C50849 +
             (C31953 + C31954) * C50850 + (C31955 + C31956) * C24660) *
                C50655 -
            (C31307 * C24660 + (C31301 + C31300) * C50850 +
             (C22251 * C50753 +
              (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50814) *
                 C50849) *
                C50801) *
               C50800 +
           (((C31300 + C31301) * C50849 + (C31302 + C31303) * C50850 +
             (C31304 + C31305) * C24660) *
                C50801 -
            (((C19896 * C3606 + C20175 + C20175 + C50526 * C3610) * C50753 +
              C20559 * C50814) *
                 C24660 +
             (C31956 + C31955) * C50850 + (C31954 + C31953) * C50849) *
                C50655) *
               C50627) *
              C50562)) /
        (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50814 +
             C22247 * C50753) *
                C50849 +
            (C31294 + C31295) * C50850 + C31306 * C24660) *
               C50591 * C260 -
           ((C31298 + C31299) * C24660 + (C31297 + C31296) * C50850 +
            (C31295 + C31294) * C50849) *
               C50591 * C261 +
           (C31306 * C50849 + (C31299 + C31298) * C50850 +
            (C20052 * C50814 + C21194 * C50753) * C24660) *
               C50591 * C262) *
              C263 +
          (((C31300 + C31301) * C50849 + (C31302 + C31303) * C50850 +
            (C31304 + C31305) * C24660) *
               C50591 * C261 -
           (C31307 * C24660 + (C31301 + C31300) * C50850 +
            (C22251 * C50753 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50814) *
                C50849) *
               C50591 * C260 -
           (((C19896 * C4120 + C20541 + C20541 + C50526 * C4124) * C50753 +
             C20056 * C50814) *
                C24660 +
            (C31305 + C31304) * C50850 + C31307 * C50849) *
               C50591 * C262) *
              C50562)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50814 +
            C22247 * C50753) *
               C50849 +
           (C20049 * C50814 + C20556 * C50753) * C50850 +
           (C20050 * C50814 + C20555 * C50753) * C24660) *
              C50591 * C50575 * C113 -
          ((C20558 * C50753 + C20054 * C50814) * C24660 +
           (C20557 * C50753 + C20053 * C50814) * C50850 +
           (C22251 * C50753 +
            (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50814) *
               C50849) *
              C50591 * C50575 * C114 +
          (((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C50814 +
            C22571 * C50753) *
               C50849 +
           (C20290 * C50814 + C22411 * C50753) * C50850 +
           (C20291 * C50814 +
            (C19896 * C1464 + C20395 + C20395 + C50526 * C1472) * C50753) *
               C24660) *
              C50591 * C50575 * C115 -
          (((C19896 * C1463 + C31147 + C31147 + C50526 * C1471) * C50753 +
            (C19896 * C272 + C19912 + C19912 + C50526 * C292) * C50814) *
               C24660 +
           ((C19896 * C808 + C21892 + C21892 + C50526 * C818) * C50753 +
            (C19896 * C265 + C19913 + C19913 + C50526 * C285) * C50814) *
               C50850 +
           ((C19896 * C412 + C21894 + C21894 + C50526 * C432) * C50753 +
            (C19896 * C128 + C19914 + C19914 + C50526 * C142) * C50814) *
               C50849) *
              C50591 * C50575 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50814 +
             C22247 * C50753) *
                C50849 +
            (C31294 + C31295) * C50850 + C31306 * C24660) *
               C409 -
           ((C20855 * C50753 + C20555 * C50814) * C24660 +
            (C20854 * C50753 + C20556 * C50814) * C50850 +
            (C22248 * C50753 + C22247 * C50814) * C50849) *
               C410 +
           ((C22248 * C50814 + C22250 * C50753) * C50849 +
            (C20854 * C50814 + C22249 * C50753) * C50850 +
            (C20855 * C50814 + C23182 * C50753) * C24660) *
               C411) *
              C50575 * C263 +
          (((C22251 * C50814 + C22252 * C50753) * C50849 +
            (C20557 * C50814 + C22059 * C50753) * C50850 +
            (C20558 * C50814 + C22060 * C50753) * C24660) *
               C410 -
           (C31307 * C24660 + (C31301 + C31300) * C50850 +
            (C22251 * C50753 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50814) *
                C50849) *
               C409 -
           (((C19896 * C4530 + C22773 + C22773 + C50526 * C4538) * C50753 +
             C22060 * C50814) *
                C24660 +
            (C22254 * C50753 + C22059 * C50814) * C50850 +
            (C22253 * C50753 + C22252 * C50814) * C50849) *
               C411) *
              C50575 * C50562)) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50814 +
             C22247 * C50753) *
                C50849 +
            (C31294 + C31295) * C50850 + C31306 * C24660) *
               C50801 -
           ((C20855 * C50753 + C20555 * C50814) * C24660 +
            (C20854 * C50753 + C20556 * C50814) * C50850 +
            (C22248 * C50753 + C22247 * C50814) * C50849) *
               C50655) *
              C50575 * C50843 +
          (((C22251 * C50814 + C22252 * C50753) * C50849 +
            (C20557 * C50814 + C22059 * C50753) * C50850 +
            (C20558 * C50814 + C22060 * C50753) * C24660) *
               C50655 -
           (C31307 * C24660 + (C31301 + C31300) * C50850 +
            (C22251 * C50753 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50814) *
                C50849) *
               C50801) *
              C50575 * C50844 +
          ((((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C50814 +
             C22571 * C50753) *
                C50849 +
            (C31600 + C31601) * C50850 + (C31602 + C31608) * C24660) *
               C50801 -
           (((C19896 * C2598 + C22406 + C22406 + C50526 * C2604) * C50753 +
             C31607 * C50814) *
                C24660 +
            (C22412 * C50753 + C22411 * C50814) * C50850 +
            (C22572 * C50753 + C22571 * C50814) * C50849) *
               C50655) *
              C50575 * C560)) /
        (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50814 +
            C22247 * C50753) *
               C50849 +
           (C20049 * C50814 + C20556 * C50753) * C50850 +
           (C20050 * C50814 + C20555 * C50753) * C24660) *
              C50591 * C50575 * C113 -
          ((C20558 * C50753 + C20054 * C50814) * C24660 +
           (C20557 * C50753 + C20053 * C50814) * C50850 +
           (C22251 * C50753 +
            (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50814) *
               C50849) *
              C50591 * C50575 * C114 +
          (((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C50814 +
            C22571 * C50753) *
               C50849 +
           (C20290 * C50814 + C22411 * C50753) * C50850 +
           (C20291 * C50814 +
            (C19896 * C1464 + C20395 + C20395 + C50526 * C1472) * C50753) *
               C24660) *
              C50591 * C50575 * C115 -
          (((C19896 * C1463 + C31147 + C31147 + C50526 * C1471) * C50753 +
            (C19896 * C272 + C19912 + C19912 + C50526 * C292) * C50814) *
               C24660 +
           ((C19896 * C808 + C21892 + C21892 + C50526 * C818) * C50753 +
            (C19896 * C265 + C19913 + C19913 + C50526 * C285) * C50814) *
               C50850 +
           ((C19896 * C412 + C21894 + C21894 + C50526 * C432) * C50753 +
            (C19896 * C128 + C19914 + C19914 + C50526 * C142) * C50814) *
               C50849) *
              C50591 * C50575 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50814 +
             C22247 * C50753) *
                C50849 +
            (C31294 + C31295) * C50850 + C31306 * C24660) *
               C50591 * C260 -
           ((C31298 + C31299) * C24660 + (C31297 + C31296) * C50850 +
            (C31295 + C31294) * C50849) *
               C50591 * C261 +
           (C31306 * C50849 + (C31299 + C31298) * C50850 +
            (C20052 * C50814 + C21194 * C50753) * C24660) *
               C50591 * C262) *
              C263 +
          (((C31300 + C31301) * C50849 + (C31302 + C31303) * C50850 +
            (C31304 + C31305) * C24660) *
               C50591 * C261 -
           (C31307 * C24660 + (C31301 + C31300) * C50850 +
            (C22251 * C50753 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50814) *
                C50849) *
               C50591 * C260 -
           (((C19896 * C4120 + C20541 + C20541 + C50526 * C4124) * C50753 +
             C20056 * C50814) *
                C24660 +
            (C31305 + C31304) * C50850 + C31307 * C50849) *
               C50591 * C262) *
              C50562)) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50814 +
             C22247 * C50753) *
                C50849 +
            (C31294 + C31295) * C50850 + C31306 * C24660) *
               C50591 * C50845 -
           (C32201 * C24660 + (C31297 + C31296) * C50850 +
            (C31295 + C31294) * C50849) *
               C50591 * C50846 +
           (C31306 * C50849 + (C31299 + C31298) * C50850 +
            (C32202 + C32203) * C24660) *
               C50591 * C1232) *
              C50792 +
          (((C31300 + C31301) * C50849 + (C31302 + C31303) * C50850 +
            (C31304 + C31305) * C24660) *
               C50591 * C50846 -
           (C31307 * C24660 + (C31301 + C31300) * C50850 +
            (C22251 * C50753 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50814) *
                C50849) *
               C50591 * C50845 -
           (((C19896 * C4120 + C20541 + C20541 + C50526 * C4124) * C50753 +
             C20056 * C50814) *
                C24660 +
            (C31305 + C31304) * C50850 + C31307 * C50849) *
               C50591 * C1232) *
              C50562)) /
        (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50814 +
             C22247 * C50753) *
                C50849 +
            (C31294 + C31295) * C50850 + C31306 * C24660) *
               C50801 -
           (C32840 * C24660 + (C31951 + C31952) * C50850 +
            (C22248 * C50753 + C22247 * C50814) * C50849) *
               C50655) *
              C50845 +
          (((C31952 + C31951) * C50849 + (C31950 + C31949) * C50850 +
            (C32841 + C32842) * C24660) *
               C50655 -
           (C32201 * C24660 + (C31297 + C31296) * C50850 +
            (C31295 + C31294) * C50849) *
               C50801) *
              C50846 +
          ((C31306 * C50849 + (C31299 + C31298) * C50850 +
            (C32202 + C32203) * C24660) *
               C50801 -
           (((C19896 * C20837 + C20847 + C20847 + C50526 * C20839) * C50753 +
             C21194 * C50814) *
                C24660 +
            (C32842 + C32841) * C50850 + C32840 * C50849) *
               C50655) *
              C1232) *
         C50556) /
        (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50814 +
            C22247 * C50753) *
               C50849 +
           (C31294 + C31295) * C50850 + C31306 * C24660) *
              C50591 * C997 -
          (C32201 * C24660 + (C31297 + C31296) * C50850 +
           (C31295 + C31294) * C50849) *
              C50591 * C998 +
          (C31306 * C50849 + (C31299 + C31298) * C50850 +
           (C32202 + C32203) * C24660) *
              C50591 * C999 -
          (((C19896 * C21185 + C21191 + C21191 + C50526 * C21187) * C50753 +
            C20738 * C50814) *
               C24660 +
           (C32203 + C32202) * C50850 + C32201 * C50849) *
              C50591 * C1000) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50814 +
             C22247 * C50753) *
                C50849 +
            (C31294 + C31295) * C50850 + C31306 * C24660) *
               C50591 * C926 -
           ((C31298 + C31299) * C24660 + (C31297 + C31296) * C50850 +
            (C31295 + C31294) * C50849) *
               C50591 * C50627) *
              C928 +
          (((C31300 + C31301) * C50849 + (C31302 + C31303) * C50850 +
            (C31304 + C31305) * C24660) *
               C50591 * C50627 -
           (C31307 * C24660 + (C31301 + C31300) * C50850 +
            (C22251 * C50753 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50814) *
                C50849) *
               C50591 * C926) *
              C929 +
          ((((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C50814 +
             C22571 * C50753) *
                C50849 +
            (C31600 + C31601) * C50850 + (C31602 + C31608) * C24660) *
               C50591 * C926 -
           (((C19896 * C3145 + C20394 + C20394 + C50526 * C3151) * C50753 +
             C20292 * C50814) *
                C24660 +
            (C31608 + C31602) * C50850 + (C31601 + C31600) * C50849) *
               C50591 * C50627) *
              C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50814 +
             C22247 * C50753) *
                C50849 +
            (C31294 + C31295) * C50850 + C31306 * C24660) *
               C409 -
           ((C31949 + C31950) * C24660 + (C31951 + C31952) * C50850 +
            (C22248 * C50753 + C22247 * C50814) * C50849) *
               C410 +
           ((C22248 * C50814 + C22250 * C50753) * C50849 +
            (C32350 + C32351) * C50850 + (C32352 + C32353) * C24660) *
               C411) *
              C926 +
          (((C31952 + C31951) * C50849 + (C31950 + C31949) * C50850 +
            (C20554 * C50814 + C20856 * C50753) * C24660) *
               C410 -
           (C32201 * C24660 + (C31297 + C31296) * C50850 +
            (C31295 + C31294) * C50849) *
               C409 -
           (((C19896 * C21457 + C21461 + C21461 + C50526 * C21459) * C50753 +
             C20856 * C50814) *
                C24660 +
            (C32353 + C32352) * C50850 + (C32351 + C32350) * C50849) *
               C411) *
              C50627) *
         C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50814 +
              C22247 * C50753) *
                 C50849 +
             (C31294 + C31295) * C50850 + C31306 * C24660) *
                C50801 -
            ((C31949 + C31950) * C24660 + (C31951 + C31952) * C50850 +
             (C22248 * C50753 + C22247 * C50814) * C50849) *
                C50655) *
               C926 +
           (((C31952 + C31951) * C50849 + (C31950 + C31949) * C50850 +
             (C20554 * C50814 + C20856 * C50753) * C24660) *
                C50655 -
            (C32201 * C24660 + (C31297 + C31296) * C50850 +
             (C31295 + C31294) * C50849) *
                C50801) *
               C50627) *
              C50792 +
          ((((C22251 * C50814 + C22252 * C50753) * C50849 +
             (C31953 + C31954) * C50850 + (C31955 + C31956) * C24660) *
                C50655 -
            (C31307 * C24660 + (C31301 + C31300) * C50850 +
             (C22251 * C50753 +
              (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50814) *
                 C50849) *
                C50801) *
               C926 +
           (((C31300 + C31301) * C50849 + (C31302 + C31303) * C50850 +
             (C31304 + C31305) * C24660) *
                C50801 -
            (((C19896 * C3606 + C20175 + C20175 + C50526 * C3610) * C50753 +
              C20559 * C50814) *
                 C24660 +
             (C31956 + C31955) * C50850 + (C31954 + C31953) * C50849) *
                C50655) *
               C50627) *
              C50562)) /
        (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50814 +
             C22247 * C50753) *
                C50849 +
            (C31294 + C31295) * C50850 + C31306 * C24660) *
               C50591 * C926 -
           ((C31298 + C31299) * C24660 + (C31297 + C31296) * C50850 +
            (C31295 + C31294) * C50849) *
               C50591 * C50627) *
              C928 +
          (((C31300 + C31301) * C50849 + (C31302 + C31303) * C50850 +
            (C31304 + C31305) * C24660) *
               C50591 * C50627 -
           (C31307 * C24660 + (C31301 + C31300) * C50850 +
            (C22251 * C50753 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50814) *
                C50849) *
               C50591 * C926) *
              C929 +
          ((((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C50814 +
             C22571 * C50753) *
                C50849 +
            (C31600 + C31601) * C50850 + (C31602 + C31608) * C24660) *
               C50591 * C926 -
           (((C19896 * C3145 + C20394 + C20394 + C50526 * C3151) * C50753 +
             C20292 * C50814) *
                C24660 +
            (C31608 + C31602) * C50850 + (C31601 + C31600) * C50849) *
               C50591 * C50627) *
              C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50814 +
            C22247 * C50753) *
               C50849 +
           (C31294 + C31295) * C50850 + C31306 * C24660) *
              C50591 * C997 -
          (C32201 * C24660 + (C31297 + C31296) * C50850 +
           (C31295 + C31294) * C50849) *
              C50591 * C998 +
          (C31306 * C50849 + (C31299 + C31298) * C50850 +
           (C32202 + C32203) * C24660) *
              C50591 * C999 -
          (((C19896 * C21185 + C21191 + C21191 + C50526 * C21187) * C50753 +
            C20738 * C50814) *
               C24660 +
           (C32203 + C32202) * C50850 + C32201 * C50849) *
              C50591 * C1000) *
         C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50814 +
              C22247 * C50753) *
                 C50849 +
             (C31294 + C31295) * C50850 + C31306 * C24660) *
                C1577 -
            (C32840 * C24660 + (C31951 + C31952) * C50850 +
             (C22248 * C50753 + C22247 * C50814) * C50849) *
                C50655) *
               C50800 +
           (((C31952 + C31951) * C50849 + (C31950 + C31949) * C50850 +
             (C32841 + C32842) * C24660) *
                C50655 -
            (C32201 * C24660 + (C31297 + C31296) * C50850 +
             (C31295 + C31294) * C50849) *
                C1577) *
               C50627) *
              C50792 +
          ((((C22251 * C50814 + C22252 * C50753) * C50849 +
             (C31953 + C31954) * C50850 + (C31955 + C31956) * C24660) *
                C50655 -
            (C31307 * C24660 + (C31301 + C31300) * C50850 +
             (C22251 * C50753 +
              (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50814) *
                 C50849) *
                C1577) *
               C50800 +
           (((C31300 + C31301) * C50849 + (C31302 + C31303) * C50850 +
             (C31304 + C31305) * C24660) *
                C1577 -
            (((C19896 * C3606 + C20175 + C20175 + C50526 * C3610) * C50753 +
              C20559 * C50814) *
                 C24660 +
             (C31956 + C31955) * C50850 + (C31954 + C31953) * C50849) *
                C50655) *
               C50627) *
              C50562)) /
        (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50814 +
             C22247 * C50753) *
                C50849 +
            (C31294 + C31295) * C50850 + C31306 * C24660) *
               C50847 -
           (C32840 * C24660 + (C31951 + C31952) * C50850 +
            (C22248 * C50753 + C22247 * C50814) * C50849) *
               C50848 +
           ((C22248 * C50814 + C22250 * C50753) * C50849 +
            (C32350 + C32351) * C50850 + (C32352 + C32353) * C24660) *
               C1993) *
              C50800 +
          (((C31952 + C31951) * C50849 + (C31950 + C31949) * C50850 +
            (C32841 + C32842) * C24660) *
               C50848 -
           (C32201 * C24660 + (C31297 + C31296) * C50850 +
            (C31295 + C31294) * C50849) *
               C50847 -
           (((C19896 * C21457 + C21461 + C21461 + C50526 * C21459) * C50753 +
             C20856 * C50814) *
                C24660 +
            (C32353 + C32352) * C50850 + (C32351 + C32350) * C50849) *
               C1993) *
              C50627) *
         C50556) /
        (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50814 +
             C22247 * C50753) *
                C50849 +
            (C31294 + C31295) * C50850 + C31306 * C24660) *
               C1577 -
           (C32840 * C24660 + (C31951 + C31952) * C50850 +
            (C22248 * C50753 + C22247 * C50814) * C50849) *
               C50655) *
              C260 +
          (((C31952 + C31951) * C50849 + (C31950 + C31949) * C50850 +
            (C32841 + C32842) * C24660) *
               C50655 -
           (C32201 * C24660 + (C31297 + C31296) * C50850 +
            (C31295 + C31294) * C50849) *
               C1577) *
              C261 +
          ((C31306 * C50849 + (C31299 + C31298) * C50850 +
            (C32202 + C32203) * C24660) *
               C1577 -
           (((C19896 * C20837 + C20847 + C20847 + C50526 * C20839) * C50753 +
             C21194 * C50814) *
                C24660 +
            (C32842 + C32841) * C50850 + C32840 * C50849) *
               C50655) *
              C262) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50814 +
             C22247 * C50753) *
                C50849 +
            (C31294 + C31295) * C50850 + C31306 * C24660) *
               C1577 -
           (C32840 * C24660 + (C31951 + C31952) * C50850 +
            (C22248 * C50753 + C22247 * C50814) * C50849) *
               C50655) *
              C50575 * C928 +
          (((C22251 * C50814 + C22252 * C50753) * C50849 +
            (C31953 + C31954) * C50850 + (C31955 + C31956) * C24660) *
               C50655 -
           (C31307 * C24660 + (C31301 + C31300) * C50850 +
            (C22251 * C50753 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50814) *
                C50849) *
               C1577) *
              C50575 * C929 +
          ((((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C50814 +
             C22571 * C50753) *
                C50849 +
            (C31600 + C31601) * C50850 + (C31602 + C31608) * C24660) *
               C1577 -
           (((C19896 * C2598 + C22406 + C22406 + C50526 * C2604) * C50753 +
             C31607 * C50814) *
                C24660 +
            (C22412 * C50753 + C22411 * C50814) * C50850 +
            (C22572 * C50753 + C22571 * C50814) * C50849) *
               C50655) *
              C50575 * C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50814 +
            C22247 * C50753) *
               C50849 +
           (C31294 + C31295) * C50850 + C31306 * C24660) *
              C1743 -
          (C32840 * C24660 + (C31951 + C31952) * C50850 +
           (C22248 * C50753 + C22247 * C50814) * C50849) *
              C1744 +
          ((C22248 * C50814 + C22250 * C50753) * C50849 +
           (C32350 + C32351) * C50850 + (C32352 + C32353) * C24660) *
              C1745 -
          (((C19896 * C23166 + C23176 + C23176 + C50526 * C23168) * C50753 +
            C23182 * C50814) *
               C24660 +
           (C23181 * C50753 + C22249 * C50814) * C50850 +
           (C24072 * C50753 + C22250 * C50814) * C50849) *
              C1746) *
         C50575 * C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50814 +
             C22247 * C50753) *
                C50849 +
            (C31294 + C31295) * C50850 + C31306 * C24660) *
               C50847 -
           (C32840 * C24660 + (C31951 + C31952) * C50850 +
            (C22248 * C50753 + C22247 * C50814) * C50849) *
               C50848 +
           ((C22248 * C50814 + C22250 * C50753) * C50849 +
            (C32350 + C32351) * C50850 + (C32352 + C32353) * C24660) *
               C1993) *
              C50575 * C50792 +
          (((C22251 * C50814 + C22252 * C50753) * C50849 +
            (C31953 + C31954) * C50850 + (C31955 + C31956) * C24660) *
               C50848 -
           (C31307 * C24660 + (C31301 + C31300) * C50850 +
            (C22251 * C50753 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50814) *
                C50849) *
               C50847 -
           (((C19896 * C4530 + C22773 + C22773 + C50526 * C4538) * C50753 +
             C22060 * C50814) *
                C24660 +
            (C22254 * C50753 + C22059 * C50814) * C50850 +
            (C22253 * C50753 + C22252 * C50814) * C50849) *
               C1993) *
              C50575 * C50562)) /
        (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50814 +
             C22247 * C50753) *
                C50849 +
            (C31294 + C31295) * C50850 + C31306 * C24660) *
               C1577 -
           (C32840 * C24660 + (C31951 + C31952) * C50850 +
            (C22248 * C50753 + C22247 * C50814) * C50849) *
               C50655) *
              C50575 * C928 +
          (((C22251 * C50814 + C22252 * C50753) * C50849 +
            (C31953 + C31954) * C50850 + (C31955 + C31956) * C24660) *
               C50655 -
           (C31307 * C24660 + (C31301 + C31300) * C50850 +
            (C22251 * C50753 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50814) *
                C50849) *
               C1577) *
              C50575 * C929 +
          ((((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C50814 +
             C22571 * C50753) *
                C50849 +
            (C31600 + C31601) * C50850 + (C31602 + C31608) * C24660) *
               C1577 -
           (((C19896 * C2598 + C22406 + C22406 + C50526 * C2604) * C50753 +
             C31607 * C50814) *
                C24660 +
            (C22412 * C50753 + C22411 * C50814) * C50850 +
            (C22572 * C50753 + C22571 * C50814) * C50849) *
               C50655) *
              C50575 * C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50814 +
             C22247 * C50753) *
                C50849 +
            (C31294 + C31295) * C50850 + C31306 * C24660) *
               C1577 -
           (C32840 * C24660 + (C31951 + C31952) * C50850 +
            (C22248 * C50753 + C22247 * C50814) * C50849) *
               C50655) *
              C260 +
          (((C31952 + C31951) * C50849 + (C31950 + C31949) * C50850 +
            (C32841 + C32842) * C24660) *
               C50655 -
           (C32201 * C24660 + (C31297 + C31296) * C50850 +
            (C31295 + C31294) * C50849) *
               C1577) *
              C261 +
          ((C31306 * C50849 + (C31299 + C31298) * C50850 +
            (C32202 + C32203) * C24660) *
               C1577 -
           (((C19896 * C20837 + C20847 + C20847 + C50526 * C20839) * C50753 +
             C21194 * C50814) *
                C24660 +
            (C32842 + C32841) * C50850 + C32840 * C50849) *
               C50655) *
              C262) *
         C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50689 *
                C19892 +
            C20057 * C19893 + C20058 * C19894 + C20059 * C19895) *
               C50591 * C50800 -
           (C20060 * C19895 + C20059 * C19894 + C20058 * C19893 +
            C20057 * C19892) *
               C50591 * C50627) *
              C50843 +
          ((C20061 * C19892 + C20062 * C19893 + C20063 * C19894 +
            C20064 * C19895) *
               C50591 * C50627 -
           (C20063 * C19895 + C20062 * C19894 + C20061 * C19893 +
            (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50689 *
                C19892) *
               C50591 * C50800) *
              C50844 +
          (((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C50689 *
                C19892 +
            C20293 * C19893 + C20294 * C19894 + C20295 * C19895) *
               C50591 * C50800 -
           ((C19896 * C2371 + C20283 + C20283 + C50526 * C2377) * C50689 *
                C19895 +
            C20295 * C19894 + C20294 * C19893 + C20293 * C19892) *
               C50591 * C50627) *
              C560)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
             C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
             C17046 * C141) *
                C50689 * C17047 +
            (C17286 + C17287 + C17288) * C50689 * C50727) *
               C50591 * C50800 -
           ((C17289 + C17290 + C17291) * C50689 * C50727 +
            (C17288 + C17287 + C17286) * C50689 * C17047) *
               C50591 * C50627) *
              C50843 +
          (((C17292 + C17293 + C17294) * C50689 * C17047 +
            (C17295 + C17296 + C17297) * C50689 * C50727) *
               C50591 * C50627 -
           ((C17294 + C17293 + C17292) * C50689 * C50727 +
            (C17053 * C128 + C17065 + C17065 + C17046 * C142 + C17051 * C127 +
             C17066 + C17066 + C17045 * C141 + C17049 * C126 + C17067 + C17067 +
             C17044 * C140) *
                C50689 * C17047) *
               C50591 * C50800) *
              C50844 +
          (((C17049 * C127 + C17068 + C17068 + C17044 * C141 + C17051 * C128 +
             C17069 + C17069 + C17045 * C142 + C17053 * C129 + C17070 + C17070 +
             C17046 * C143) *
                C50689 * C17047 +
            (C17629 + C17630 + C17631) * C50689 * C50727) *
               C50591 * C50800 -
           ((C17053 * C274 + C17620 + C17620 + C17046 * C294 + C17051 * C272 +
             C17621 + C17621 + C17045 * C292 + C17049 * C271 + C17622 + C17622 +
             C17044 * C291) *
                C50689 * C50727 +
            (C17631 + C17630 + C17629) * C50689 * C17047) *
               C50591 * C50627) *
              C560)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C5132 +
             C22247 * C5133 + C22248 * C5134) *
                C17047 +
            (C22041 + C22042 + C22043) * C50727) *
               C50591 * C50800 -
           ((C22044 + C22045 + C22046) * C50727 +
            (C22043 + C22042 + C22041) * C17047) *
               C50591 * C50627) *
              C50843 +
          (((C22047 + C22048 + C22061) * C17047 +
            (C22051 + C22052 + C22062) * C50727) *
               C50591 * C50627 -
           ((C22061 + C22048 + C22047) * C50727 +
            (C22252 * C5134 + C22251 * C5133 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C5132) *
                C17047) *
               C50591 * C50800) *
              C50844 +
          ((((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C5132 +
             (C19896 * C413 + C20397 + C20397 + C50526 * C433) * C5133 +
             (C19896 * C418 + C21889 + C21889 + C50526 * C438) * C5134) *
                C17047 +
            (C22401 + C22413 + C22414) * C50727) *
               C50591 * C50800 -
           (((C19896 * C2598 + C22406 + C22406 + C50526 * C2604) * C5134 +
             (C19896 * C1464 + C20395 + C20395 + C50526 * C1472) * C5133 +
             C20291 * C5132) *
                C50727 +
            (C22414 + C22413 + C22401) * C17047) *
               C50591 * C50627) *
              C560)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50689 *
                 C19892 +
             C20057 * C19893 + C20058 * C19894 + C20059 * C19895) *
                C50801 -
            (C20560 * C19895 + C20561 * C19894 + C20562 * C19893 +
             (C19896 * C415 + C20166 + C20166 + C50526 * C435) * C50689 *
                 C19892) *
                C50655) *
               C50800 +
           ((C20562 * C19892 + C20561 * C19893 + C20560 * C19894 +
             (C19896 * C4121 + C20534 + C20534 + C50526 * C4125) * C50689 *
                 C19895) *
                C50655 -
            (C20060 * C19895 + C20059 * C19894 + C20058 * C19893 +
             C20057 * C19892) *
                C50801) *
               C50627) *
              C263 +
          ((((C19896 * C414 + C20171 + C20171 + C50526 * C434) * C50689 *
                 C19892 +
             C20563 * C19893 + C20564 * C19894 + C20565 * C19895) *
                C50655 -
            (C20063 * C19895 + C20062 * C19894 + C20061 * C19893 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50689 *
                 C19892) *
                C50801) *
               C50800 +
           ((C20061 * C19892 + C20062 * C19893 + C20063 * C19894 +
             C20064 * C19895) *
                C50801 -
            ((C19896 * C4120 + C20541 + C20541 + C50526 * C4124) * C50689 *
                 C19895 +
             C20565 * C19894 + C20564 * C19893 + C20563 * C19892) *
                C50655) *
               C50627) *
              C50562)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
              C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 +
              C17058 + C17046 * C141) *
                 C50689 * C17047 +
             (C17286 + C17287 + C17288) * C50689 * C50727) *
                C50801 -
            ((C18008 + C18009 + C18010) * C50689 * C50727 +
             (C17053 * C413 + C17447 + C17447 + C17046 * C433 + C17051 * C414 +
              C17448 + C17448 + C17045 * C434 + C17049 * C415 + C17449 +
              C17449 + C17044 * C435) *
                 C50689 * C17047) *
                C50655) *
               C50800 +
           (((C18010 + C18009 + C18008) * C50689 * C17047 +
             (C17049 * C1466 + C17984 + C17984 + C17044 * C1474 +
              C17051 * C1465 + C17985 + C17985 + C17045 * C1473 +
              C17053 * C1464 + C17986 + C17986 + C17046 * C1472) *
                 C50689 * C50727) *
                C50655 -
            ((C17289 + C17290 + C17291) * C50689 * C50727 +
             (C17288 + C17287 + C17286) * C50689 * C17047) *
                C50801) *
               C50627) *
              C263 +
          ((((C17049 * C414 + C17456 + C17456 + C17044 * C434 + C17051 * C413 +
              C17457 + C17457 + C17045 * C433 + C17053 * C412 + C17458 +
              C17458 + C17046 * C432) *
                 C50689 * C17047 +
             (C18011 + C18012 + C18013) * C50689 * C50727) *
                C50655 -
            ((C17294 + C17293 + C17292) * C50689 * C50727 +
             (C17053 * C128 + C17065 + C17065 + C17046 * C142 + C17051 * C127 +
              C17066 + C17066 + C17045 * C141 + C17049 * C126 + C17067 +
              C17067 + C17044 * C140) *
                 C50689 * C17047) *
                C50801) *
               C50800 +
           (((C17292 + C17293 + C17294) * C50689 * C17047 +
             (C17295 + C17296 + C17297) * C50689 * C50727) *
                C50801 -
            ((C17053 * C1463 + C17993 + C17993 + C17046 * C1471 +
              C17051 * C1464 + C17994 + C17994 + C17045 * C1472 +
              C17049 * C1465 + C17995 + C17995 + C17044 * C1473) *
                 C50689 * C50727 +
             (C18013 + C18012 + C18011) * C50689 * C17047) *
                C50655) *
               C50627) *
              C50562)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C5132 +
              C22247 * C5133 + C22248 * C5134) *
                 C17047 +
             (C22041 + C22042 + C22043) * C50727) *
                C50801 -
            ((C22767 + C22768 + C22769) * C50727 +
             (C22250 * C5134 + C22248 * C5133 + C22247 * C5132) * C17047) *
                C50655) *
               C50800 +
           (((C22769 + C22768 + C22767) * C17047 +
             (C20555 * C5132 + C20855 * C5133 +
              (C19896 * C4531 + C21462 + C21462 + C50526 * C4539) * C5134) *
                 C50727) *
                C50655 -
            ((C22044 + C22045 + C22046) * C50727 +
             (C22043 + C22042 + C22041) * C17047) *
                C50801) *
               C50627) *
              C263 +
          ((((C22251 * C5132 + C22252 * C5133 + C22253 * C5134) * C17047 +
             (C22770 + C22771 + C22772) * C50727) *
                C50655 -
            ((C22061 + C22048 + C22047) * C50727 +
             (C22252 * C5134 + C22251 * C5133 +
              (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C5132) *
                 C17047) *
                C50801) *
               C50800 +
           (((C22047 + C22048 + C22061) * C17047 +
             (C22051 + C22052 + C22062) * C50727) *
                C50801 -
            (((C19896 * C4530 + C22773 + C22773 + C50526 * C4538) * C5134 +
              C22060 * C5133 + C20558 * C5132) *
                 C50727 +
             (C22772 + C22771 + C22770) * C17047) *
                C50655) *
               C50627) *
              C50562)) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C17049 * C125 + C17056 + C17056 + C17044 * C139 +
                C17051 * C126 + C17057 + C17057 + C17045 * C140 +
                C17053 * C127 + C17058 + C17058 + C17046 * C141) *
                   C50689 * C17047 +
               (C17049 * C268 + C17059 + C17059 + C17044 * C288 +
                C17051 * C267 + C17060 + C17060 + C17045 * C287 +
                C17053 * C266 + C17061 + C17061 + C17046 * C286) *
                   C50689 * C50727) *
                  C50591 * C50575 * C113 -
              ((C17053 * C265 + C17062 + C17062 + C17046 * C285 +
                C17051 * C266 + C17063 + C17063 + C17045 * C286 +
                C17049 * C267 + C17064 + C17064 + C17044 * C287) *
                   C50689 * C50727 +
               (C17053 * C128 + C17065 + C17065 + C17046 * C142 +
                C17051 * C127 + C17066 + C17066 + C17045 * C141 +
                C17049 * C126 + C17067 + C17067 + C17044 * C140) *
                   C50689 * C17047) *
                  C50591 * C50575 * C114 +
              ((C17049 * C127 + C17068 + C17068 + C17044 * C141 +
                C17051 * C128 + C17069 + C17069 + C17045 * C142 +
                C17053 * C129 + C17070 + C17070 + C17046 * C143) *
                   C50689 * C17047 +
               (C17049 * C266 + C17071 + C17071 + C17044 * C286 +
                C17051 * C265 + C17072 + C17072 + C17045 * C285 +
                C17053 * C273 + C17073 + C17073 + C17046 * C293) *
                   C50689 * C50727) *
                  C50591 * C50575 * C115 -
              ((C17053 * C561 + C17074 + C17074 + C17046 * C563 +
                C17051 * C273 + C17075 + C17075 + C17045 * C293 +
                C17049 * C265 + C17076 + C17076 + C17044 * C285) *
                   C50689 * C50727 +
               (C17053 * C130 + C17077 + C17077 + C17046 * C144 +
                C17051 * C129 + C17078 + C17078 + C17045 * C143 +
                C17049 * C128 + C17079 + C17079 + C17044 * C142) *
                   C50689 * C17047) *
                  C50591 * C50575 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 +
                 C17051 * C126 + C17057 + C17057 + C17045 * C140 +
                 C17053 * C127 + C17058 + C17058 + C17046 * C141) *
                    C50689 * C17047 +
                (C17286 + C17287 + C17288) * C50689 * C50727) *
                   C50591 * C260 -
               ((C17289 + C17290 + C17291) * C50689 * C50727 +
                (C17288 + C17287 + C17286) * C50689 * C17047) *
                   C50591 * C261 +
               ((C17291 + C17290 + C17289) * C50689 * C17047 +
                (C17049 * C1005 + C17241 + C17241 + C17044 * C1013 +
                 C17051 * C1004 + C17242 + C17242 + C17045 * C1012 +
                 C17053 * C1003 + C17243 + C17243 + C17046 * C1011) *
                    C50689 * C50727) *
                   C50591 * C262) *
                  C263 +
              (((C17292 + C17293 + C17294) * C50689 * C17047 +
                (C17295 + C17296 + C17297) * C50689 * C50727) *
                   C50591 * C261 -
               ((C17294 + C17293 + C17292) * C50689 * C50727 +
                (C17053 * C128 + C17065 + C17065 + C17046 * C142 +
                 C17051 * C127 + C17066 + C17066 + C17045 * C141 +
                 C17049 * C126 + C17067 + C17067 + C17044 * C140) *
                    C50689 * C17047) *
                   C50591 * C260 -
               ((C17053 * C1002 + C17259 + C17259 + C17046 * C1010 +
                 C17051 * C1003 + C17260 + C17260 + C17045 * C1011 +
                 C17049 * C1004 + C17261 + C17261 + C17044 * C1012) *
                    C50689 * C50727 +
                (C17297 + C17296 + C17295) * C50689 * C17047) *
                   C50591 * C262) *
                  C50562)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
             C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
             C17046 * C141) *
                C50689 * C17047 +
            (C17286 + C17287 + C17288) * C50689 * C50727) *
               C409 -
           ((C17053 * C807 + C17444 + C17444 + C17046 * C817 + C17051 * C806 +
             C17445 + C17445 + C17045 * C816 + C17049 * C805 + C17446 + C17446 +
             C17044 * C815) *
                C50689 * C50727 +
            (C17053 * C413 + C17447 + C17447 + C17046 * C433 + C17051 * C414 +
             C17448 + C17448 + C17045 * C434 + C17049 * C415 + C17449 + C17449 +
             C17044 * C435) *
                C50689 * C17047) *
               C410 +
           ((C17049 * C416 + C17450 + C17450 + C17044 * C436 + C17051 * C417 +
             C17451 + C17451 + C17045 * C437 + C17053 * C418 + C17452 + C17452 +
             C17046 * C438) *
                C50689 * C17047 +
            (C17049 * C1119 + C17453 + C17453 + C17044 * C1127 +
             C17051 * C1118 + C17454 + C17454 + C17045 * C1126 +
             C17053 * C1117 + C17455 + C17455 + C17046 * C1125) *
                C50689 * C50727) *
               C411) *
              C50575 * C263 +
          (((C17049 * C414 + C17456 + C17456 + C17044 * C434 + C17051 * C413 +
             C17457 + C17457 + C17045 * C433 + C17053 * C412 + C17458 + C17458 +
             C17046 * C432) *
                C50689 * C17047 +
            (C17049 * C806 + C17459 + C17459 + C17044 * C816 + C17051 * C807 +
             C17460 + C17460 + C17045 * C817 + C17053 * C808 + C17461 + C17461 +
             C17046 * C818) *
                C50689 * C50727) *
               C410 -
           ((C17294 + C17293 + C17292) * C50689 * C50727 +
            (C17053 * C128 + C17065 + C17065 + C17046 * C142 + C17051 * C127 +
             C17066 + C17066 + C17045 * C141 + C17049 * C126 + C17067 + C17067 +
             C17044 * C140) *
                C50689 * C17047) *
               C409 -
           ((C17053 * C1116 + C17462 + C17462 + C17046 * C1124 +
             C17051 * C1117 + C17463 + C17463 + C17045 * C1125 +
             C17049 * C1118 + C17464 + C17464 + C17044 * C1126) *
                C50689 * C50727 +
            (C17053 * C419 + C17465 + C17465 + C17046 * C439 + C17051 * C418 +
             C17466 + C17466 + C17045 * C438 + C17049 * C417 + C17467 + C17467 +
             C17044 * C437) *
                C50689 * C17047) *
               C411) *
              C50575 * C50562)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50689 * C19892 +
           (C19896 * C268 + C19900 + C19900 + C50526 * C288) * C50689 * C19893 +
           (C19896 * C269 + C19901 + C19901 + C50526 * C289) * C50689 * C19894 +
           (C19896 * C1005 + C19902 + C19902 + C50526 * C1013) * C50689 *
               C19895) *
              C50591 * C50575 * C113 -
          ((C19896 * C1004 + C19903 + C19903 + C50526 * C1012) * C50689 *
               C19895 +
           (C19896 * C270 + C19904 + C19904 + C50526 * C290) * C50689 * C19894 +
           (C19896 * C267 + C19905 + C19905 + C50526 * C287) * C50689 * C19893 +
           (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50689 *
               C19892) *
              C50591 * C50575 * C114 +
          ((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C50689 * C19892 +
           (C19896 * C266 + C19908 + C19908 + C50526 * C286) * C50689 * C19893 +
           (C19896 * C271 + C19909 + C19909 + C50526 * C291) * C50689 * C19894 +
           (C19896 * C1003 + C19910 + C19910 + C50526 * C1011) * C50689 *
               C19895) *
              C50591 * C50575 * C115 -
          ((C19896 * C1002 + C19911 + C19911 + C50526 * C1010) * C50689 *
               C19895 +
           (C19896 * C272 + C19912 + C19912 + C50526 * C292) * C50689 * C19894 +
           (C19896 * C265 + C19913 + C19913 + C50526 * C285) * C50689 * C19893 +
           (C19896 * C128 + C19914 + C19914 + C50526 * C142) * C50689 *
               C19892) *
              C50591 * C50575 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50689 *
                C19892 +
            C20057 * C19893 + C20058 * C19894 + C20059 * C19895) *
               C50591 * C260 -
           (C20060 * C19895 + C20059 * C19894 + C20058 * C19893 +
            C20057 * C19892) *
               C50591 * C261 +
           (C20058 * C19892 + C20059 * C19893 + C20060 * C19894 +
            (C19896 * C3441 + C20022 + C20022 + C50526 * C3445) * C50689 *
                C19895) *
               C50591 * C262) *
              C263 +
          ((C20061 * C19892 + C20062 * C19893 + C20063 * C19894 +
            C20064 * C19895) *
               C50591 * C261 -
           (C20063 * C19895 + C20062 * C19894 + C20061 * C19893 +
            (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50689 *
                C19892) *
               C50591 * C260 -
           ((C19896 * C3440 + C20032 + C20032 + C50526 * C3444) * C50689 *
                C19895 +
            C20064 * C19894 + C20063 * C19893 + C20062 * C19892) *
               C50591 * C262) *
              C50562)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50689 *
                C19892 +
            C20057 * C19893 + C20058 * C19894 + C20059 * C19895) *
               C409 -
           ((C19896 * C3143 + C20163 + C20163 + C50526 * C3149) * C50689 *
                C19895 +
            (C19896 * C1466 + C20164 + C20164 + C50526 * C1474) * C50689 *
                C19894 +
            (C19896 * C805 + C20165 + C20165 + C50526 * C815) * C50689 *
                C19893 +
            (C19896 * C415 + C20166 + C20166 + C50526 * C435) * C50689 *
                C19892) *
               C410 +
           ((C19896 * C416 + C20167 + C20167 + C50526 * C436) * C50689 *
                C19892 +
            (C19896 * C1119 + C20168 + C20168 + C50526 * C1127) * C50689 *
                C19893 +
            (C19896 * C2596 + C20169 + C20169 + C50526 * C2602) * C50689 *
                C19894 +
            (C19896 * C3607 + C20170 + C20170 + C50526 * C3611) * C50689 *
                C19895) *
               C411) *
              C50575 * C263 +
          (((C19896 * C414 + C20171 + C20171 + C50526 * C434) * C50689 *
                C19892 +
            (C19896 * C806 + C20172 + C20172 + C50526 * C816) * C50689 *
                C19893 +
            (C19896 * C1465 + C20173 + C20173 + C50526 * C1473) * C50689 *
                C19894 +
            (C19896 * C3144 + C20174 + C20174 + C50526 * C3150) * C50689 *
                C19895) *
               C410 -
           (C20063 * C19895 + C20062 * C19894 + C20061 * C19893 +
            (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50689 *
                C19892) *
               C409 -
           ((C19896 * C3606 + C20175 + C20175 + C50526 * C3610) * C50689 *
                C19895 +
            (C19896 * C2597 + C20176 + C20176 + C50526 * C2603) * C50689 *
                C19894 +
            (C19896 * C1118 + C20177 + C20177 + C50526 * C1126) * C50689 *
                C19893 +
            (C19896 * C417 + C20178 + C20178 + C50526 * C437) * C50689 *
                C19892) *
               C411) *
              C50575 * C50562)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C5132 +
            (C19896 * C415 + C20166 + C20166 + C50526 * C435) * C5133 +
            (C19896 * C416 + C20167 + C20167 + C50526 * C436) * C5134) *
               C17047 +
           (C20049 * C5132 + C20556 * C5133 + C20854 * C5134) * C50727) *
              C50591 * C50575 * C113 -
          (((C19896 * C1118 + C20177 + C20177 + C50526 * C1126) * C5134 +
            C20557 * C5133 + C20053 * C5132) *
               C50727 +
           ((C19896 * C417 + C20178 + C20178 + C50526 * C437) * C5134 +
            (C19896 * C414 + C20171 + C20171 + C50526 * C434) * C5133 +
            (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C5132) *
               C17047) *
              C50591 * C50575 * C114 +
          (((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C5132 +
            (C19896 * C413 + C20397 + C20397 + C50526 * C433) * C5133 +
            (C19896 * C418 + C21889 + C21889 + C50526 * C438) * C5134) *
               C17047 +
           (C20290 * C5132 +
            (C19896 * C807 + C20396 + C20396 + C50526 * C817) * C5133 +
            (C19896 * C1117 + C21890 + C21890 + C50526 * C1125) * C5134) *
               C50727) *
              C50591 * C50575 * C115 -
          (((C19896 * C1116 + C21891 + C21891 + C50526 * C1124) * C5134 +
            (C19896 * C808 + C21892 + C21892 + C50526 * C818) * C5133 +
            (C19896 * C265 + C19913 + C19913 + C50526 * C285) * C5132) *
               C50727 +
           ((C19896 * C419 + C21893 + C21893 + C50526 * C439) * C5134 +
            (C19896 * C412 + C21894 + C21894 + C50526 * C432) * C5133 +
            (C19896 * C128 + C19914 + C19914 + C50526 * C142) * C5132) *
               C17047) *
              C50591 * C50575 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C5132 +
             (C19896 * C415 + C20166 + C20166 + C50526 * C435) * C5133 +
             (C19896 * C416 + C20167 + C20167 + C50526 * C436) * C5134) *
                C17047 +
            (C22041 + C22042 + C22043) * C50727) *
               C50591 * C260 -
           ((C22044 + C22045 + C22046) * C50727 +
            (C22043 + C22042 + C22041) * C17047) *
               C50591 * C261 +
           ((C22046 + C22045 + C22044) * C17047 +
            (C20051 * C5132 + C20554 * C5133 + C20856 * C5134) * C50727) *
               C50591 * C262) *
              C263 +
          (((C22047 + C22048 + C22061) * C17047 +
            (C22051 + C22052 + C22062) * C50727) *
               C50591 * C261 -
           ((C22061 + C22048 + C22047) * C50727 +
            ((C19896 * C417 + C20178 + C20178 + C50526 * C437) * C5134 +
             (C19896 * C414 + C20171 + C20171 + C50526 * C434) * C5133 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C5132) *
                C17047) *
               C50591 * C260 -
           (((C19896 * C3606 + C20175 + C20175 + C50526 * C3610) * C5134 +
             C20559 * C5133 + C20055 * C5132) *
                C50727 +
            (C22062 + C22052 + C22051) * C17047) *
               C50591 * C262) *
              C50562)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C5132 +
             C22247 * C5133 + C22248 * C5134) *
                C17047 +
            (C22041 + C22042 + C22043) * C50727) *
               C409 -
           ((C22249 * C5134 + C20854 * C5133 + C20556 * C5132) * C50727 +
            (C22250 * C5134 + C22248 * C5133 + C22247 * C5132) * C17047) *
               C410 +
           ((C22248 * C5132 + C22250 * C5133 +
             (C19896 * C5433 + C22217 + C22217 + C50526 * C5439) * C5134) *
                C17047 +
            (C20854 * C5132 + C22249 * C5133 +
             (C19896 * C6426 + C22218 + C22218 + C50526 * C6430) * C5134) *
                C50727) *
               C411) *
              C50575 * C263 +
          (((C22251 * C5132 + C22252 * C5133 + C22253 * C5134) * C17047 +
            (C20557 * C5132 + C22059 * C5133 + C22254 * C5134) * C50727) *
               C410 -
           ((C22061 + C22048 + C22047) * C50727 +
            (C22252 * C5134 + C22251 * C5133 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C5132) *
                C17047) *
               C409 -
           (((C19896 * C6425 + C22229 + C22229 + C50526 * C6429) * C5134 +
             C22254 * C5133 + C22059 * C5132) *
                C50727 +
            ((C19896 * C5434 + C22230 + C22230 + C50526 * C5440) * C5134 +
             C22253 * C5133 + C22252 * C5132) *
                C17047) *
               C411) *
              C50575 * C50562)) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50689 *
                C19892 +
            C20057 * C19893 + C20058 * C19894 + C20059 * C19895) *
               C50801 -
           ((C19896 * C3143 + C20163 + C20163 + C50526 * C3149) * C50689 *
                C19895 +
            (C19896 * C1466 + C20164 + C20164 + C50526 * C1474) * C50689 *
                C19894 +
            (C19896 * C805 + C20165 + C20165 + C50526 * C815) * C50689 *
                C19893 +
            (C19896 * C415 + C20166 + C20166 + C50526 * C435) * C50689 *
                C19892) *
               C50655) *
              C50575 * C50843 +
          (((C19896 * C414 + C20171 + C20171 + C50526 * C434) * C50689 *
                C19892 +
            (C19896 * C806 + C20172 + C20172 + C50526 * C816) * C50689 *
                C19893 +
            (C19896 * C1465 + C20173 + C20173 + C50526 * C1473) * C50689 *
                C19894 +
            (C19896 * C3144 + C20174 + C20174 + C50526 * C3150) * C50689 *
                C19895) *
               C50655 -
           (C20063 * C19895 + C20062 * C19894 + C20061 * C19893 +
            (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50689 *
                C19892) *
               C50801) *
              C50575 * C50844 +
          (((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C50689 *
                C19892 +
            C20293 * C19893 + C20294 * C19894 + C20295 * C19895) *
               C50801 -
           ((C19896 * C3145 + C20394 + C20394 + C50526 * C3151) * C50689 *
                C19895 +
            (C19896 * C1464 + C20395 + C20395 + C50526 * C1472) * C50689 *
                C19894 +
            (C19896 * C807 + C20396 + C20396 + C50526 * C817) * C50689 *
                C19893 +
            (C19896 * C413 + C20397 + C20397 + C50526 * C433) * C50689 *
                C19892) *
               C50655) *
              C50575 * C560)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
             C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
             C17046 * C141) *
                C50689 * C17047 +
            (C17286 + C17287 + C17288) * C50689 * C50727) *
               C50801 -
           ((C17053 * C807 + C17444 + C17444 + C17046 * C817 + C17051 * C806 +
             C17445 + C17445 + C17045 * C816 + C17049 * C805 + C17446 + C17446 +
             C17044 * C815) *
                C50689 * C50727 +
            (C17053 * C413 + C17447 + C17447 + C17046 * C433 + C17051 * C414 +
             C17448 + C17448 + C17045 * C434 + C17049 * C415 + C17449 + C17449 +
             C17044 * C435) *
                C50689 * C17047) *
               C50655) *
              C50575 * C50843 +
          (((C17049 * C414 + C17456 + C17456 + C17044 * C434 + C17051 * C413 +
             C17457 + C17457 + C17045 * C433 + C17053 * C412 + C17458 + C17458 +
             C17046 * C432) *
                C50689 * C17047 +
            (C17049 * C806 + C17459 + C17459 + C17044 * C816 + C17051 * C807 +
             C17460 + C17460 + C17045 * C817 + C17053 * C808 + C17461 + C17461 +
             C17046 * C818) *
                C50689 * C50727) *
               C50655 -
           ((C17294 + C17293 + C17292) * C50689 * C50727 +
            (C17053 * C128 + C17065 + C17065 + C17046 * C142 + C17051 * C127 +
             C17066 + C17066 + C17045 * C141 + C17049 * C126 + C17067 + C17067 +
             C17044 * C140) *
                C50689 * C17047) *
               C50801) *
              C50575 * C50844 +
          (((C17049 * C127 + C17068 + C17068 + C17044 * C141 + C17051 * C128 +
             C17069 + C17069 + C17045 * C142 + C17053 * C129 + C17070 + C17070 +
             C17046 * C143) *
                C50689 * C17047 +
            (C17629 + C17630 + C17631) * C50689 * C50727) *
               C50801 -
           ((C17053 * C809 + C17778 + C17778 + C17046 * C819 + C17051 * C808 +
             C17779 + C17779 + C17045 * C818 + C17049 * C807 + C17780 + C17780 +
             C17044 * C817) *
                C50689 * C50727 +
            (C17053 * C420 + C17781 + C17781 + C17046 * C440 + C17051 * C412 +
             C17782 + C17782 + C17045 * C432 + C17049 * C413 + C17783 + C17783 +
             C17044 * C433) *
                C50689 * C17047) *
               C50655) *
              C50575 * C560)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C5132 +
             C22247 * C5133 + C22248 * C5134) *
                C17047 +
            (C22041 + C22042 + C22043) * C50727) *
               C50801 -
           ((C22249 * C5134 + C20854 * C5133 + C20556 * C5132) * C50727 +
            (C22250 * C5134 + C22248 * C5133 + C22247 * C5132) * C17047) *
               C50655) *
              C50575 * C50843 +
          (((C22251 * C5132 + C22252 * C5133 + C22253 * C5134) * C17047 +
            (C20557 * C5132 + C22059 * C5133 + C22254 * C5134) * C50727) *
               C50655 -
           ((C22061 + C22048 + C22047) * C50727 +
            (C22252 * C5134 + C22251 * C5133 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C5132) *
                C17047) *
               C50801) *
              C50575 * C50844 +
          ((((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C5132 +
             C22571 * C5133 + C22572 * C5134) *
                C17047 +
            (C22401 + C22413 + C22414) * C50727) *
               C50801 -
           (((C19896 * C6020 + C22565 + C22565 + C50526 * C6022) * C5134 +
             C22412 * C5133 + C22411 * C5132) *
                C50727 +
            ((C19896 * C1748 + C22566 + C22566 + C50526 * C1756) * C5134 +
             C22572 * C5133 + C22571 * C5132) *
                C17047) *
               C50655) *
              C50575 * C560)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
             C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
             C17046 * C141) *
                C50689 * C17047 +
            (C17286 + C17287 + C17288) * C50689 * C50727) *
               C50591 * C260 -
           ((C17289 + C17290 + C17291) * C50689 * C50727 +
            (C17288 + C17287 + C17286) * C50689 * C17047) *
               C50591 * C261 +
           ((C17291 + C17290 + C17289) * C50689 * C17047 +
            (C17049 * C1005 + C17241 + C17241 + C17044 * C1013 +
             C17051 * C1004 + C17242 + C17242 + C17045 * C1012 +
             C17053 * C1003 + C17243 + C17243 + C17046 * C1011) *
                C50689 * C50727) *
               C50591 * C262) *
              C263 +
          (((C17292 + C17293 + C17294) * C50689 * C17047 +
            (C17295 + C17296 + C17297) * C50689 * C50727) *
               C50591 * C261 -
           ((C17294 + C17293 + C17292) * C50689 * C50727 +
            (C17053 * C128 + C17065 + C17065 + C17046 * C142 + C17051 * C127 +
             C17066 + C17066 + C17045 * C141 + C17049 * C126 + C17067 + C17067 +
             C17044 * C140) *
                C50689 * C17047) *
               C50591 * C260 -
           ((C17053 * C1002 + C17259 + C17259 + C17046 * C1010 +
             C17051 * C1003 + C17260 + C17260 + C17045 * C1011 +
             C17049 * C1004 + C17261 + C17261 + C17044 * C1012) *
                C50689 * C50727 +
            (C17297 + C17296 + C17295) * C50689 * C17047) *
               C50591 * C262) *
              C50562)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
            C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
            C17046 * C141) *
               C50689 * C17047 +
           (C17049 * C268 + C17059 + C17059 + C17044 * C288 + C17051 * C267 +
            C17060 + C17060 + C17045 * C287 + C17053 * C266 + C17061 + C17061 +
            C17046 * C286) *
               C50689 * C50727) *
              C50591 * C50575 * C113 -
          ((C17053 * C265 + C17062 + C17062 + C17046 * C285 + C17051 * C266 +
            C17063 + C17063 + C17045 * C286 + C17049 * C267 + C17064 + C17064 +
            C17044 * C287) *
               C50689 * C50727 +
           (C17053 * C128 + C17065 + C17065 + C17046 * C142 + C17051 * C127 +
            C17066 + C17066 + C17045 * C141 + C17049 * C126 + C17067 + C17067 +
            C17044 * C140) *
               C50689 * C17047) *
              C50591 * C50575 * C114 +
          ((C17049 * C127 + C17068 + C17068 + C17044 * C141 + C17051 * C128 +
            C17069 + C17069 + C17045 * C142 + C17053 * C129 + C17070 + C17070 +
            C17046 * C143) *
               C50689 * C17047 +
           (C17049 * C266 + C17071 + C17071 + C17044 * C286 + C17051 * C265 +
            C17072 + C17072 + C17045 * C285 + C17053 * C273 + C17073 + C17073 +
            C17046 * C293) *
               C50689 * C50727) *
              C50591 * C50575 * C115 -
          ((C17053 * C561 + C17074 + C17074 + C17046 * C563 + C17051 * C273 +
            C17075 + C17075 + C17045 * C293 + C17049 * C265 + C17076 + C17076 +
            C17044 * C285) *
               C50689 * C50727 +
           (C17053 * C130 + C17077 + C17077 + C17046 * C144 + C17051 * C129 +
            C17078 + C17078 + C17045 * C143 + C17049 * C128 + C17079 + C17079 +
            C17044 * C142) *
               C50689 * C17047) *
              C50591 * C50575 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50689 * C19892 +
           (C19896 * C268 + C19900 + C19900 + C50526 * C288) * C50689 * C19893 +
           (C19896 * C269 + C19901 + C19901 + C50526 * C289) * C50689 * C19894 +
           (C19896 * C1005 + C19902 + C19902 + C50526 * C1013) * C50689 *
               C19895) *
              C50591 * C50575 * C113 -
          ((C19896 * C1004 + C19903 + C19903 + C50526 * C1012) * C50689 *
               C19895 +
           (C19896 * C270 + C19904 + C19904 + C50526 * C290) * C50689 * C19894 +
           (C19896 * C267 + C19905 + C19905 + C50526 * C287) * C50689 * C19893 +
           (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50689 *
               C19892) *
              C50591 * C50575 * C114 +
          ((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C50689 * C19892 +
           (C19896 * C266 + C19908 + C19908 + C50526 * C286) * C50689 * C19893 +
           (C19896 * C271 + C19909 + C19909 + C50526 * C291) * C50689 * C19894 +
           (C19896 * C1003 + C19910 + C19910 + C50526 * C1011) * C50689 *
               C19895) *
              C50591 * C50575 * C115 -
          ((C19896 * C1002 + C19911 + C19911 + C50526 * C1010) * C50689 *
               C19895 +
           (C19896 * C272 + C19912 + C19912 + C50526 * C292) * C50689 * C19894 +
           (C19896 * C265 + C19913 + C19913 + C50526 * C285) * C50689 * C19893 +
           (C19896 * C128 + C19914 + C19914 + C50526 * C142) * C50689 *
               C19892) *
              C50591 * C50575 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50689 *
                C19892 +
            C20057 * C19893 + C20058 * C19894 + C20059 * C19895) *
               C50591 * C260 -
           (C20060 * C19895 + C20059 * C19894 + C20058 * C19893 +
            C20057 * C19892) *
               C50591 * C261 +
           (C20058 * C19892 + C20059 * C19893 + C20060 * C19894 +
            (C19896 * C3441 + C20022 + C20022 + C50526 * C3445) * C50689 *
                C19895) *
               C50591 * C262) *
              C263 +
          ((C20061 * C19892 + C20062 * C19893 + C20063 * C19894 +
            C20064 * C19895) *
               C50591 * C261 -
           (C20063 * C19895 + C20062 * C19894 + C20061 * C19893 +
            (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50689 *
                C19892) *
               C50591 * C260 -
           ((C19896 * C3440 + C20032 + C20032 + C50526 * C3444) * C50689 *
                C19895 +
            C20064 * C19894 + C20063 * C19893 + C20062 * C19892) *
               C50591 * C262) *
              C50562)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C5132 +
            (C19896 * C415 + C20166 + C20166 + C50526 * C435) * C5133 +
            (C19896 * C416 + C20167 + C20167 + C50526 * C436) * C5134) *
               C17047 +
           (C20049 * C5132 + C20556 * C5133 + C20854 * C5134) * C50727) *
              C50591 * C50575 * C113 -
          (((C19896 * C1118 + C20177 + C20177 + C50526 * C1126) * C5134 +
            C20557 * C5133 + C20053 * C5132) *
               C50727 +
           ((C19896 * C417 + C20178 + C20178 + C50526 * C437) * C5134 +
            (C19896 * C414 + C20171 + C20171 + C50526 * C434) * C5133 +
            (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C5132) *
               C17047) *
              C50591 * C50575 * C114 +
          (((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C5132 +
            (C19896 * C413 + C20397 + C20397 + C50526 * C433) * C5133 +
            (C19896 * C418 + C21889 + C21889 + C50526 * C438) * C5134) *
               C17047 +
           (C20290 * C5132 +
            (C19896 * C807 + C20396 + C20396 + C50526 * C817) * C5133 +
            (C19896 * C1117 + C21890 + C21890 + C50526 * C1125) * C5134) *
               C50727) *
              C50591 * C50575 * C115 -
          (((C19896 * C1116 + C21891 + C21891 + C50526 * C1124) * C5134 +
            (C19896 * C808 + C21892 + C21892 + C50526 * C818) * C5133 +
            (C19896 * C265 + C19913 + C19913 + C50526 * C285) * C5132) *
               C50727 +
           ((C19896 * C419 + C21893 + C21893 + C50526 * C439) * C5134 +
            (C19896 * C412 + C21894 + C21894 + C50526 * C432) * C5133 +
            (C19896 * C128 + C19914 + C19914 + C50526 * C142) * C5132) *
               C17047) *
              C50591 * C50575 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C5132 +
             (C19896 * C415 + C20166 + C20166 + C50526 * C435) * C5133 +
             (C19896 * C416 + C20167 + C20167 + C50526 * C436) * C5134) *
                C17047 +
            (C22041 + C22042 + C22043) * C50727) *
               C50591 * C260 -
           ((C22044 + C22045 + C22046) * C50727 +
            (C22043 + C22042 + C22041) * C17047) *
               C50591 * C261 +
           ((C22046 + C22045 + C22044) * C17047 +
            (C20051 * C5132 + C20554 * C5133 + C20856 * C5134) * C50727) *
               C50591 * C262) *
              C263 +
          (((C22047 + C22048 + C22061) * C17047 +
            (C22051 + C22052 + C22062) * C50727) *
               C50591 * C261 -
           ((C22061 + C22048 + C22047) * C50727 +
            ((C19896 * C417 + C20178 + C20178 + C50526 * C437) * C5134 +
             (C19896 * C414 + C20171 + C20171 + C50526 * C434) * C5133 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C5132) *
                C17047) *
               C50591 * C260 -
           (((C19896 * C3606 + C20175 + C20175 + C50526 * C3610) * C5134 +
             C20559 * C5133 + C20055 * C5132) *
                C50727 +
            (C22062 + C22052 + C22051) * C17047) *
               C50591 * C262) *
              C50562)) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50689 *
                C19892 +
            C20057 * C19893 + C20058 * C19894 + C20059 * C19895) *
               C50591 * C50845 -
           (C20060 * C19895 + C20059 * C19894 + C20058 * C19893 +
            C20057 * C19892) *
               C50591 * C50846 +
           (C20058 * C19892 + C20059 * C19893 + C20060 * C19894 +
            C20739 * C19895) *
               C50591 * C1232) *
              C50792 +
          ((C20061 * C19892 + C20062 * C19893 + C20063 * C19894 +
            C20064 * C19895) *
               C50591 * C50846 -
           (C20063 * C19895 + C20062 * C19894 + C20061 * C19893 +
            (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50689 *
                C19892) *
               C50591 * C50845 -
           ((C19896 * C3440 + C20032 + C20032 + C50526 * C3444) * C50689 *
                C19895 +
            C20064 * C19894 + C20063 * C19893 + C20062 * C19892) *
               C50591 * C1232) *
              C50562)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
             C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
             C17046 * C141) *
                C50689 * C17047 +
            (C17286 + C17287 + C17288) * C50689 * C50727) *
               C50591 * C50845 -
           ((C17289 + C17290 + C17291) * C50689 * C50727 +
            (C17288 + C17287 + C17286) * C50689 * C17047) *
               C50591 * C50846 +
           ((C17291 + C17290 + C17289) * C50689 * C17047 +
            (C18273 + C18274 + C18275) * C50689 * C50727) *
               C50591 * C1232) *
              C50792 +
          (((C17292 + C17293 + C17294) * C50689 * C17047 +
            (C17295 + C17296 + C17297) * C50689 * C50727) *
               C50591 * C50846 -
           ((C17294 + C17293 + C17292) * C50689 * C50727 +
            (C17053 * C128 + C17065 + C17065 + C17046 * C142 + C17051 * C127 +
             C17066 + C17066 + C17045 * C141 + C17049 * C126 + C17067 + C17067 +
             C17044 * C140) *
                C50689 * C17047) *
               C50591 * C50845 -
           ((C17053 * C1002 + C17259 + C17259 + C17046 * C1010 +
             C17051 * C1003 + C17260 + C17260 + C17045 * C1011 +
             C17049 * C1004 + C17261 + C17261 + C17044 * C1012) *
                C50689 * C50727 +
            (C17297 + C17296 + C17295) * C50689 * C17047) *
               C50591 * C1232) *
              C50562)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C5132 +
             C22247 * C5133 + C22248 * C5134) *
                C17047 +
            (C22041 + C22042 + C22043) * C50727) *
               C50591 * C50845 -
           ((C22044 + C22045 + C22046) * C50727 +
            (C22043 + C22042 + C22041) * C17047) *
               C50591 * C50846 +
           ((C22046 + C22045 + C22044) * C17047 +
            (C23018 + C23019 + C23020) * C50727) *
               C50591 * C1232) *
              C50792 +
          (((C22047 + C22048 + C22061) * C17047 +
            (C22051 + C22052 + C22062) * C50727) *
               C50591 * C50846 -
           ((C22061 + C22048 + C22047) * C50727 +
            (C22252 * C5134 + C22251 * C5133 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C5132) *
                C17047) *
               C50591 * C50845 -
           (((C19896 * C3606 + C20175 + C20175 + C50526 * C3610) * C5134 +
             C20559 * C5133 + C20055 * C5132) *
                C50727 +
            (C22062 + C22052 + C22051) * C17047) *
               C50591 * C1232) *
              C50562)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50689 *
                C19892 +
            C20057 * C19893 + C20058 * C19894 + C20059 * C19895) *
               C50801 -
           (C20560 * C19895 + C20561 * C19894 + C20562 * C19893 +
            (C19896 * C415 + C20166 + C20166 + C50526 * C435) * C50689 *
                C19892) *
               C50655) *
              C50845 +
          ((C20562 * C19892 + C20561 * C19893 + C20560 * C19894 +
            C21195 * C19895) *
               C50655 -
           (C20060 * C19895 + C20059 * C19894 + C20058 * C19893 +
            C20057 * C19892) *
               C50801) *
              C50846 +
          ((C20058 * C19892 + C20059 * C19893 + C20060 * C19894 +
            C20739 * C19895) *
               C50801 -
           ((C19896 * C21185 + C21191 + C21191 + C50526 * C21187) * C50689 *
                C19895 +
            C21195 * C19894 + C20560 * C19893 + C20561 * C19892) *
               C50655) *
              C1232) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
             C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
             C17046 * C141) *
                C50689 * C17047 +
            (C17286 + C17287 + C17288) * C50689 * C50727) *
               C50801 -
           ((C18008 + C18009 + C18010) * C50689 * C50727 +
            (C17053 * C413 + C17447 + C17447 + C17046 * C433 + C17051 * C414 +
             C17448 + C17448 + C17045 * C434 + C17049 * C415 + C17449 + C17449 +
             C17044 * C435) *
                C50689 * C17047) *
               C50655) *
              C50845 +
          (((C18010 + C18009 + C18008) * C50689 * C17047 +
            (C18941 + C18942 + C18943) * C50689 * C50727) *
               C50655 -
           ((C17289 + C17290 + C17291) * C50689 * C50727 +
            (C17288 + C17287 + C17286) * C50689 * C17047) *
               C50801) *
              C50846 +
          (((C17291 + C17290 + C17289) * C50689 * C17047 +
            (C18273 + C18274 + C18275) * C50689 * C50727) *
               C50801 -
           ((C17053 * C3145 + C18932 + C18932 + C17046 * C3151 +
             C17051 * C3144 + C18933 + C18933 + C17045 * C3150 +
             C17049 * C3143 + C18934 + C18934 + C17044 * C3149) *
                C50689 * C50727 +
            (C18943 + C18942 + C18941) * C50689 * C17047) *
               C50655) *
              C1232) *
         C50556) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C5132 +
             C22247 * C5133 + C22248 * C5134) *
                C17047 +
            (C22041 + C22042 + C22043) * C50727) *
               C50801 -
           ((C22767 + C22768 + C22769) * C50727 +
            (C22250 * C5134 + C22248 * C5133 + C22247 * C5132) * C17047) *
               C50655) *
              C50845 +
          (((C22769 + C22768 + C22767) * C17047 +
            (C23670 + C23671 + C23672) * C50727) *
               C50655 -
           ((C22044 + C22045 + C22046) * C50727 +
            (C22043 + C22042 + C22041) * C17047) *
               C50801) *
              C50846 +
          (((C22046 + C22045 + C22044) * C17047 +
            (C23018 + C23019 + C23020) * C50727) *
               C50801 -
           (((C19896 * C21457 + C21461 + C21461 + C50526 * C21459) * C5134 +
             C20856 * C5133 + C20554 * C5132) *
                C50727 +
            (C23672 + C23671 + C23670) * C17047) *
               C50655) *
              C1232) *
         C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 +
                 C17051 * C126 + C17057 + C17057 + C17045 * C140 +
                 C17053 * C127 + C17058 + C17058 + C17046 * C141) *
                    C50689 * C17047 +
                (C17286 + C17287 + C17288) * C50689 * C50727) *
                   C50591 * C926 -
               ((C17289 + C17290 + C17291) * C50689 * C50727 +
                (C17288 + C17287 + C17286) * C50689 * C17047) *
                   C50591 * C50627) *
                  C928 +
              (((C17292 + C17293 + C17294) * C50689 * C17047 +
                (C17295 + C17296 + C17297) * C50689 * C50727) *
                   C50591 * C50627 -
               ((C17294 + C17293 + C17292) * C50689 * C50727 +
                (C17053 * C128 + C17065 + C17065 + C17046 * C142 +
                 C17051 * C127 + C17066 + C17066 + C17045 * C141 +
                 C17049 * C126 + C17067 + C17067 + C17044 * C140) *
                    C50689 * C17047) *
                   C50591 * C926) *
                  C929 +
              (((C17049 * C127 + C17068 + C17068 + C17044 * C141 +
                 C17051 * C128 + C17069 + C17069 + C17045 * C142 +
                 C17053 * C129 + C17070 + C17070 + C17046 * C143) *
                    C50689 * C17047 +
                (C17629 + C17630 + C17631) * C50689 * C50727) *
                   C50591 * C926 -
               ((C17053 * C274 + C17620 + C17620 + C17046 * C294 +
                 C17051 * C272 + C17621 + C17621 + C17045 * C292 +
                 C17049 * C271 + C17622 + C17622 + C17044 * C291) *
                    C50689 * C50727 +
                (C17631 + C17630 + C17629) * C50689 * C17047) *
                   C50591 * C50627) *
                  C930) +
         0.5 * std::pow(Pi, 2.5) *
             (((C17049 * C125 + C17056 + C17056 + C17044 * C139 +
                C17051 * C126 + C17057 + C17057 + C17045 * C140 +
                C17053 * C127 + C17058 + C17058 + C17046 * C141) *
                   C50689 * C17047 +
               (C17286 + C17287 + C17288) * C50689 * C50727) *
                  C50591 * C997 -
              ((C17289 + C17290 + C17291) * C50689 * C50727 +
               (C17288 + C17287 + C17286) * C50689 * C17047) *
                  C50591 * C998 +
              ((C17291 + C17290 + C17289) * C50689 * C17047 +
               (C18273 + C18274 + C18275) * C50689 * C50727) *
                  C50591 * C999 -
              ((C17053 * C2371 + C18264 + C18264 + C17046 * C2377 +
                C17051 * C2370 + C18265 + C18265 + C17045 * C2376 +
                C17049 * C2369 + C18266 + C18266 + C17044 * C2375) *
                   C50689 * C50727 +
               (C18275 + C18274 + C18273) * C50689 * C17047) *
                  C50591 * C1000) *
             C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
             C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
             C17046 * C141) *
                C50689 * C17047 +
            (C17286 + C17287 + C17288) * C50689 * C50727) *
               C409 -
           ((C18008 + C18009 + C18010) * C50689 * C50727 +
            (C17053 * C413 + C17447 + C17447 + C17046 * C433 + C17051 * C414 +
             C17448 + C17448 + C17045 * C434 + C17049 * C415 + C17449 + C17449 +
             C17044 * C435) *
                C50689 * C17047) *
               C410 +
           ((C17049 * C416 + C17450 + C17450 + C17044 * C436 + C17051 * C417 +
             C17451 + C17451 + C17045 * C437 + C17053 * C418 + C17452 + C17452 +
             C17046 * C438) *
                C50689 * C17047 +
            (C18437 + C18438 + C18439) * C50689 * C50727) *
               C411) *
              C926 +
          (((C18010 + C18009 + C18008) * C50689 * C17047 +
            (C17049 * C1466 + C17984 + C17984 + C17044 * C1474 +
             C17051 * C1465 + C17985 + C17985 + C17045 * C1473 +
             C17053 * C1464 + C17986 + C17986 + C17046 * C1472) *
                C50689 * C50727) *
               C410 -
           ((C17289 + C17290 + C17291) * C50689 * C50727 +
            (C17288 + C17287 + C17286) * C50689 * C17047) *
               C409 -
           ((C17053 * C2598 + C18428 + C18428 + C17046 * C2604 +
             C17051 * C2597 + C18429 + C18429 + C17045 * C2603 +
             C17049 * C2596 + C18430 + C18430 + C17044 * C2602) *
                C50689 * C50727 +
            (C18439 + C18438 + C18437) * C50689 * C17047) *
               C411) *
              C50627) *
         C50556) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50689 *
                C19892 +
            C20057 * C19893 + C20058 * C19894 + C20059 * C19895) *
               C50591 * C926 -
           (C20060 * C19895 + C20059 * C19894 + C20058 * C19893 +
            C20057 * C19892) *
               C50591 * C50627) *
              C928 +
          ((C20061 * C19892 + C20062 * C19893 + C20063 * C19894 +
            C20064 * C19895) *
               C50591 * C50627 -
           (C20063 * C19895 + C20062 * C19894 + C20061 * C19893 +
            (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50689 *
                C19892) *
               C50591 * C926) *
              C929 +
          (((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C50689 *
                C19892 +
            C20293 * C19893 + C20294 * C19894 + C20295 * C19895) *
               C50591 * C926 -
           ((C19896 * C2371 + C20283 + C20283 + C50526 * C2377) * C50689 *
                C19895 +
            C20295 * C19894 + C20294 * C19893 + C20293 * C19892) *
               C50591 * C50627) *
              C930)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50689 * C19892 +
           C20057 * C19893 + C20058 * C19894 + C20059 * C19895) *
              C50591 * C997 -
          (C20060 * C19895 + C20059 * C19894 + C20058 * C19893 +
           C20057 * C19892) *
              C50591 * C998 +
          (C20058 * C19892 + C20059 * C19893 + C20060 * C19894 +
           C20739 * C19895) *
              C50591 * C999 -
          ((C19896 * C20729 + C20735 + C20735 + C50526 * C20731) * C50689 *
               C19895 +
           C20739 * C19894 + C20060 * C19893 + C20059 * C19892) *
              C50591 * C1000) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50689 *
                C19892 +
            C20057 * C19893 + C20058 * C19894 + C20059 * C19895) *
               C409 -
           (C20560 * C19895 + C20561 * C19894 + C20562 * C19893 +
            (C19896 * C415 + C20166 + C20166 + C50526 * C435) * C50689 *
                C19892) *
               C410 +
           ((C19896 * C416 + C20167 + C20167 + C50526 * C436) * C50689 *
                C19892 +
            C20857 * C19893 + C20858 * C19894 + C20859 * C19895) *
               C411) *
              C926 +
          ((C20562 * C19892 + C20561 * C19893 + C20560 * C19894 +
            (C19896 * C4121 + C20534 + C20534 + C50526 * C4125) * C50689 *
                C19895) *
               C410 -
           (C20060 * C19895 + C20059 * C19894 + C20058 * C19893 +
            C20057 * C19892) *
               C409 -
           ((C19896 * C20837 + C20847 + C20847 + C50526 * C20839) * C50689 *
                C19895 +
            C20859 * C19894 + C20858 * C19893 + C20857 * C19892) *
               C411) *
              C50627) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C5132 +
             C22247 * C5133 + C22248 * C5134) *
                C17047 +
            (C22041 + C22042 + C22043) * C50727) *
               C50591 * C926 -
           ((C22044 + C22045 + C22046) * C50727 +
            (C22043 + C22042 + C22041) * C17047) *
               C50591 * C50627) *
              C928 +
          (((C22047 + C22048 + C22061) * C17047 +
            (C22051 + C22052 + C22062) * C50727) *
               C50591 * C50627 -
           ((C22061 + C22048 + C22047) * C50727 +
            (C22252 * C5134 + C22251 * C5133 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C5132) *
                C17047) *
               C50591 * C926) *
              C929 +
          ((((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C5132 +
             C22571 * C5133 + C22572 * C5134) *
                C17047 +
            (C22401 + C22413 + C22414) * C50727) *
               C50591 * C926 -
           (((C19896 * C2598 + C22406 + C22406 + C50526 * C2604) * C5134 +
             (C19896 * C1464 + C20395 + C20395 + C50526 * C1472) * C5133 +
             C20291 * C5132) *
                C50727 +
            (C22414 + C22413 + C22401) * C17047) *
               C50591 * C50627) *
              C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C5132 +
            C22247 * C5133 + C22248 * C5134) *
               C17047 +
           (C22041 + C22042 + C22043) * C50727) *
              C50591 * C997 -
          ((C22044 + C22045 + C22046) * C50727 +
           (C22043 + C22042 + C22041) * C17047) *
              C50591 * C998 +
          ((C22046 + C22045 + C22044) * C17047 +
           (C23018 + C23019 + C23020) * C50727) *
              C50591 * C999 -
          (((C19896 * C20837 + C20847 + C20847 + C50526 * C20839) * C5134 +
            C21194 * C5133 + C20052 * C5132) *
               C50727 +
           (C23020 + C23019 + C23018) * C17047) *
              C50591 * C1000) *
         C50556) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C5132 +
             C22247 * C5133 + C22248 * C5134) *
                C17047 +
            (C22041 + C22042 + C22043) * C50727) *
               C409 -
           ((C22767 + C22768 + C22769) * C50727 +
            (C22250 * C5134 + C22248 * C5133 + C22247 * C5132) * C17047) *
               C410 +
           ((C22248 * C5132 + C22250 * C5133 +
             (C19896 * C5433 + C22217 + C22217 + C50526 * C5439) * C5134) *
                C17047 +
            (C23170 + C23171 + C23183) * C50727) *
               C411) *
              C926 +
          (((C22769 + C22768 + C22767) * C17047 +
            (C20555 * C5132 + C20855 * C5133 + C23182 * C5134) * C50727) *
               C410 -
           ((C22044 + C22045 + C22046) * C50727 +
            (C22043 + C22042 + C22041) * C17047) *
               C409 -
           (((C19896 * C23166 + C23176 + C23176 + C50526 * C23168) * C5134 +
             C23182 * C5133 + C20855 * C5132) *
                C50727 +
            (C23183 + C23171 + C23170) * C17047) *
               C411) *
              C50627) *
         C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50689 *
                 C19892 +
             C20057 * C19893 + C20058 * C19894 + C20059 * C19895) *
                C50801 -
            (C20560 * C19895 + C20561 * C19894 + C20562 * C19893 +
             (C19896 * C415 + C20166 + C20166 + C50526 * C435) * C50689 *
                 C19892) *
                C50655) *
               C926 +
           ((C20562 * C19892 + C20561 * C19893 + C20560 * C19894 +
             (C19896 * C4121 + C20534 + C20534 + C50526 * C4125) * C50689 *
                 C19895) *
                C50655 -
            (C20060 * C19895 + C20059 * C19894 + C20058 * C19893 +
             C20057 * C19892) *
                C50801) *
               C50627) *
              C50792 +
          ((((C19896 * C414 + C20171 + C20171 + C50526 * C434) * C50689 *
                 C19892 +
             C20563 * C19893 + C20564 * C19894 + C20565 * C19895) *
                C50655 -
            (C20063 * C19895 + C20062 * C19894 + C20061 * C19893 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50689 *
                 C19892) *
                C50801) *
               C926 +
           ((C20061 * C19892 + C20062 * C19893 + C20063 * C19894 +
             C20064 * C19895) *
                C50801 -
            ((C19896 * C4120 + C20541 + C20541 + C50526 * C4124) * C50689 *
                 C19895 +
             C20565 * C19894 + C20564 * C19893 + C20563 * C19892) *
                C50655) *
               C50627) *
              C50562)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
              C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 +
              C17058 + C17046 * C141) *
                 C50689 * C17047 +
             (C17286 + C17287 + C17288) * C50689 * C50727) *
                C50801 -
            ((C18008 + C18009 + C18010) * C50689 * C50727 +
             (C17053 * C413 + C17447 + C17447 + C17046 * C433 + C17051 * C414 +
              C17448 + C17448 + C17045 * C434 + C17049 * C415 + C17449 +
              C17449 + C17044 * C435) *
                 C50689 * C17047) *
                C50655) *
               C926 +
           (((C18010 + C18009 + C18008) * C50689 * C17047 +
             (C17049 * C1466 + C17984 + C17984 + C17044 * C1474 +
              C17051 * C1465 + C17985 + C17985 + C17045 * C1473 +
              C17053 * C1464 + C17986 + C17986 + C17046 * C1472) *
                 C50689 * C50727) *
                C50655 -
            ((C17289 + C17290 + C17291) * C50689 * C50727 +
             (C17288 + C17287 + C17286) * C50689 * C17047) *
                C50801) *
               C50627) *
              C50792 +
          ((((C17049 * C414 + C17456 + C17456 + C17044 * C434 + C17051 * C413 +
              C17457 + C17457 + C17045 * C433 + C17053 * C412 + C17458 +
              C17458 + C17046 * C432) *
                 C50689 * C17047 +
             (C18011 + C18012 + C18013) * C50689 * C50727) *
                C50655 -
            ((C17294 + C17293 + C17292) * C50689 * C50727 +
             (C17053 * C128 + C17065 + C17065 + C17046 * C142 + C17051 * C127 +
              C17066 + C17066 + C17045 * C141 + C17049 * C126 + C17067 +
              C17067 + C17044 * C140) *
                 C50689 * C17047) *
                C50801) *
               C926 +
           (((C17292 + C17293 + C17294) * C50689 * C17047 +
             (C17295 + C17296 + C17297) * C50689 * C50727) *
                C50801 -
            ((C17053 * C1463 + C17993 + C17993 + C17046 * C1471 +
              C17051 * C1464 + C17994 + C17994 + C17045 * C1472 +
              C17049 * C1465 + C17995 + C17995 + C17044 * C1473) *
                 C50689 * C50727 +
             (C18013 + C18012 + C18011) * C50689 * C17047) *
                C50655) *
               C50627) *
              C50562)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C5132 +
              C22247 * C5133 + C22248 * C5134) *
                 C17047 +
             (C22041 + C22042 + C22043) * C50727) *
                C50801 -
            ((C22767 + C22768 + C22769) * C50727 +
             (C22250 * C5134 + C22248 * C5133 + C22247 * C5132) * C17047) *
                C50655) *
               C926 +
           (((C22769 + C22768 + C22767) * C17047 +
             (C20555 * C5132 + C20855 * C5133 + C23182 * C5134) * C50727) *
                C50655 -
            ((C22044 + C22045 + C22046) * C50727 +
             (C22043 + C22042 + C22041) * C17047) *
                C50801) *
               C50627) *
              C50792 +
          ((((C22251 * C5132 + C22252 * C5133 + C22253 * C5134) * C17047 +
             (C22770 + C22771 + C22772) * C50727) *
                C50655 -
            ((C22061 + C22048 + C22047) * C50727 +
             (C22252 * C5134 + C22251 * C5133 +
              (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C5132) *
                 C17047) *
                C50801) *
               C926 +
           (((C22047 + C22048 + C22061) * C17047 +
             (C22051 + C22052 + C22062) * C50727) *
                C50801 -
            (((C19896 * C4530 + C22773 + C22773 + C50526 * C4538) * C5134 +
              C22060 * C5133 + C20558 * C5132) *
                 C50727 +
             (C22772 + C22771 + C22770) * C17047) *
                C50655) *
               C50627) *
              C50562)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
            C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
            C17046 * C141) *
               C50689 * C17047 +
           (C17286 + C17287 + C17288) * C50689 * C50727) *
              C50591 * C997 -
          ((C17289 + C17290 + C17291) * C50689 * C50727 +
           (C17288 + C17287 + C17286) * C50689 * C17047) *
              C50591 * C998 +
          ((C17291 + C17290 + C17289) * C50689 * C17047 +
           (C18273 + C18274 + C18275) * C50689 * C50727) *
              C50591 * C999 -
          ((C17053 * C2371 + C18264 + C18264 + C17046 * C2377 + C17051 * C2370 +
            C18265 + C18265 + C17045 * C2376 + C17049 * C2369 + C18266 +
            C18266 + C17044 * C2375) *
               C50689 * C50727 +
           (C18275 + C18274 + C18273) * C50689 * C17047) *
              C50591 * C1000) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
             C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
             C17046 * C141) *
                C50689 * C17047 +
            (C17286 + C17287 + C17288) * C50689 * C50727) *
               C50591 * C926 -
           ((C17289 + C17290 + C17291) * C50689 * C50727 +
            (C17288 + C17287 + C17286) * C50689 * C17047) *
               C50591 * C50627) *
              C928 +
          (((C17292 + C17293 + C17294) * C50689 * C17047 +
            (C17295 + C17296 + C17297) * C50689 * C50727) *
               C50591 * C50627 -
           ((C17294 + C17293 + C17292) * C50689 * C50727 +
            (C17053 * C128 + C17065 + C17065 + C17046 * C142 + C17051 * C127 +
             C17066 + C17066 + C17045 * C141 + C17049 * C126 + C17067 + C17067 +
             C17044 * C140) *
                C50689 * C17047) *
               C50591 * C926) *
              C929 +
          (((C17049 * C127 + C17068 + C17068 + C17044 * C141 + C17051 * C128 +
             C17069 + C17069 + C17045 * C142 + C17053 * C129 + C17070 + C17070 +
             C17046 * C143) *
                C50689 * C17047 +
            (C17629 + C17630 + C17631) * C50689 * C50727) *
               C50591 * C926 -
           ((C17053 * C274 + C17620 + C17620 + C17046 * C294 + C17051 * C272 +
             C17621 + C17621 + C17045 * C292 + C17049 * C271 + C17622 + C17622 +
             C17044 * C291) *
                C50689 * C50727 +
            (C17631 + C17630 + C17629) * C50689 * C17047) *
               C50591 * C50627) *
              C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50689 *
                C19892 +
            C20057 * C19893 + C20058 * C19894 + C20059 * C19895) *
               C50591 * C926 -
           (C20060 * C19895 + C20059 * C19894 + C20058 * C19893 +
            C20057 * C19892) *
               C50591 * C50627) *
              C928 +
          ((C20061 * C19892 + C20062 * C19893 + C20063 * C19894 +
            C20064 * C19895) *
               C50591 * C50627 -
           (C20063 * C19895 + C20062 * C19894 + C20061 * C19893 +
            (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50689 *
                C19892) *
               C50591 * C926) *
              C929 +
          (((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C50689 *
                C19892 +
            C20293 * C19893 + C20294 * C19894 + C20295 * C19895) *
               C50591 * C926 -
           ((C19896 * C2371 + C20283 + C20283 + C50526 * C2377) * C50689 *
                C19895 +
            C20295 * C19894 + C20294 * C19893 + C20293 * C19892) *
               C50591 * C50627) *
              C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50689 * C19892 +
           C20057 * C19893 + C20058 * C19894 + C20059 * C19895) *
              C50591 * C997 -
          (C20060 * C19895 + C20059 * C19894 + C20058 * C19893 +
           C20057 * C19892) *
              C50591 * C998 +
          (C20058 * C19892 + C20059 * C19893 + C20060 * C19894 +
           C20739 * C19895) *
              C50591 * C999 -
          ((C19896 * C20729 + C20735 + C20735 + C50526 * C20731) * C50689 *
               C19895 +
           C20739 * C19894 + C20060 * C19893 + C20059 * C19892) *
              C50591 * C1000) *
         C50556) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C5132 +
             C22247 * C5133 + C22248 * C5134) *
                C17047 +
            (C22041 + C22042 + C22043) * C50727) *
               C50591 * C926 -
           ((C22044 + C22045 + C22046) * C50727 +
            (C22043 + C22042 + C22041) * C17047) *
               C50591 * C50627) *
              C928 +
          (((C22047 + C22048 + C22061) * C17047 +
            (C22051 + C22052 + C22062) * C50727) *
               C50591 * C50627 -
           ((C22061 + C22048 + C22047) * C50727 +
            (C22252 * C5134 + C22251 * C5133 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C5132) *
                C17047) *
               C50591 * C926) *
              C929 +
          ((((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C5132 +
             C22571 * C5133 + C22572 * C5134) *
                C17047 +
            (C22401 + C22413 + C22414) * C50727) *
               C50591 * C926 -
           (((C19896 * C2598 + C22406 + C22406 + C50526 * C2604) * C5134 +
             (C19896 * C1464 + C20395 + C20395 + C50526 * C1472) * C5133 +
             C20291 * C5132) *
                C50727 +
            (C22414 + C22413 + C22401) * C17047) *
               C50591 * C50627) *
              C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C5132 +
            C22247 * C5133 + C22248 * C5134) *
               C17047 +
           (C22041 + C22042 + C22043) * C50727) *
              C50591 * C997 -
          ((C22044 + C22045 + C22046) * C50727 +
           (C22043 + C22042 + C22041) * C17047) *
              C50591 * C998 +
          ((C22046 + C22045 + C22044) * C17047 +
           (C23018 + C23019 + C23020) * C50727) *
              C50591 * C999 -
          (((C19896 * C20837 + C20847 + C20847 + C50526 * C20839) * C5134 +
            C21194 * C5133 + C20052 * C5132) *
               C50727 +
           (C23020 + C23019 + C23018) * C17047) *
              C50591 * C1000) *
         C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50689 *
                 C19892 +
             C20057 * C19893 + C20058 * C19894 + C20059 * C19895) *
                C1577 -
            (C20560 * C19895 + C20561 * C19894 + C20562 * C19893 +
             (C19896 * C415 + C20166 + C20166 + C50526 * C435) * C50689 *
                 C19892) *
                C50655) *
               C50800 +
           ((C20562 * C19892 + C20561 * C19893 + C20560 * C19894 +
             C21195 * C19895) *
                C50655 -
            (C20060 * C19895 + C20059 * C19894 + C20058 * C19893 +
             C20057 * C19892) *
                C1577) *
               C50627) *
              C50792 +
          ((((C19896 * C414 + C20171 + C20171 + C50526 * C434) * C50689 *
                 C19892 +
             C20563 * C19893 + C20564 * C19894 + C20565 * C19895) *
                C50655 -
            (C20063 * C19895 + C20062 * C19894 + C20061 * C19893 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50689 *
                 C19892) *
                C1577) *
               C50800 +
           ((C20061 * C19892 + C20062 * C19893 + C20063 * C19894 +
             C20064 * C19895) *
                C1577 -
            ((C19896 * C4120 + C20541 + C20541 + C50526 * C4124) * C50689 *
                 C19895 +
             C20565 * C19894 + C20564 * C19893 + C20563 * C19892) *
                C50655) *
               C50627) *
              C50562)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
              C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 +
              C17058 + C17046 * C141) *
                 C50689 * C17047 +
             (C17286 + C17287 + C17288) * C50689 * C50727) *
                C1577 -
            ((C18008 + C18009 + C18010) * C50689 * C50727 +
             (C17053 * C413 + C17447 + C17447 + C17046 * C433 + C17051 * C414 +
              C17448 + C17448 + C17045 * C434 + C17049 * C415 + C17449 +
              C17449 + C17044 * C435) *
                 C50689 * C17047) *
                C50655) *
               C50800 +
           (((C18010 + C18009 + C18008) * C50689 * C17047 +
             (C18941 + C18942 + C18943) * C50689 * C50727) *
                C50655 -
            ((C17289 + C17290 + C17291) * C50689 * C50727 +
             (C17288 + C17287 + C17286) * C50689 * C17047) *
                C1577) *
               C50627) *
              C50792 +
          ((((C17049 * C414 + C17456 + C17456 + C17044 * C434 + C17051 * C413 +
              C17457 + C17457 + C17045 * C433 + C17053 * C412 + C17458 +
              C17458 + C17046 * C432) *
                 C50689 * C17047 +
             (C18011 + C18012 + C18013) * C50689 * C50727) *
                C50655 -
            ((C17294 + C17293 + C17292) * C50689 * C50727 +
             (C17053 * C128 + C17065 + C17065 + C17046 * C142 + C17051 * C127 +
              C17066 + C17066 + C17045 * C141 + C17049 * C126 + C17067 +
              C17067 + C17044 * C140) *
                 C50689 * C17047) *
                C1577) *
               C50800 +
           (((C17292 + C17293 + C17294) * C50689 * C17047 +
             (C17295 + C17296 + C17297) * C50689 * C50727) *
                C1577 -
            ((C17053 * C1463 + C17993 + C17993 + C17046 * C1471 +
              C17051 * C1464 + C17994 + C17994 + C17045 * C1472 +
              C17049 * C1465 + C17995 + C17995 + C17044 * C1473) *
                 C50689 * C50727 +
             (C18013 + C18012 + C18011) * C50689 * C17047) *
                C50655) *
               C50627) *
              C50562)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C5132 +
              C22247 * C5133 + C22248 * C5134) *
                 C17047 +
             (C22041 + C22042 + C22043) * C50727) *
                C1577 -
            ((C22767 + C22768 + C22769) * C50727 +
             (C22250 * C5134 + C22248 * C5133 + C22247 * C5132) * C17047) *
                C50655) *
               C50800 +
           (((C22769 + C22768 + C22767) * C17047 +
             (C23670 + C23671 + C23672) * C50727) *
                C50655 -
            ((C22044 + C22045 + C22046) * C50727 +
             (C22043 + C22042 + C22041) * C17047) *
                C1577) *
               C50627) *
              C50792 +
          ((((C22251 * C5132 + C22252 * C5133 + C22253 * C5134) * C17047 +
             (C22770 + C22771 + C22772) * C50727) *
                C50655 -
            ((C22061 + C22048 + C22047) * C50727 +
             (C22252 * C5134 + C22251 * C5133 +
              (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C5132) *
                 C17047) *
                C1577) *
               C50800 +
           (((C22047 + C22048 + C22061) * C17047 +
             (C22051 + C22052 + C22062) * C50727) *
                C1577 -
            (((C19896 * C4530 + C22773 + C22773 + C50526 * C4538) * C5134 +
              C22060 * C5133 + C20558 * C5132) *
                 C50727 +
             (C22772 + C22771 + C22770) * C17047) *
                C50655) *
               C50627) *
              C50562)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50689 *
                C19892 +
            C20057 * C19893 + C20058 * C19894 + C20059 * C19895) *
               C50847 -
           (C20560 * C19895 + C20561 * C19894 + C20562 * C19893 +
            (C19896 * C415 + C20166 + C20166 + C50526 * C435) * C50689 *
                C19892) *
               C50848 +
           ((C19896 * C416 + C20167 + C20167 + C50526 * C436) * C50689 *
                C19892 +
            C20857 * C19893 + C20858 * C19894 + C20859 * C19895) *
               C1993) *
              C50800 +
          ((C20562 * C19892 + C20561 * C19893 + C20560 * C19894 +
            C21195 * C19895) *
               C50848 -
           (C20060 * C19895 + C20059 * C19894 + C20058 * C19893 +
            C20057 * C19892) *
               C50847 -
           ((C19896 * C20837 + C20847 + C20847 + C50526 * C20839) * C50689 *
                C19895 +
            C20859 * C19894 + C20858 * C19893 + C20857 * C19892) *
               C1993) *
              C50627) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
             C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
             C17046 * C141) *
                C50689 * C17047 +
            (C17286 + C17287 + C17288) * C50689 * C50727) *
               C50847 -
           ((C18008 + C18009 + C18010) * C50689 * C50727 +
            (C17053 * C413 + C17447 + C17447 + C17046 * C433 + C17051 * C414 +
             C17448 + C17448 + C17045 * C434 + C17049 * C415 + C17449 + C17449 +
             C17044 * C435) *
                C50689 * C17047) *
               C50848 +
           ((C17049 * C416 + C17450 + C17450 + C17044 * C436 + C17051 * C417 +
             C17451 + C17451 + C17045 * C437 + C17053 * C418 + C17452 + C17452 +
             C17046 * C438) *
                C50689 * C17047 +
            (C18437 + C18438 + C18439) * C50689 * C50727) *
               C1993) *
              C50800 +
          (((C18010 + C18009 + C18008) * C50689 * C17047 +
            (C18941 + C18942 + C18943) * C50689 * C50727) *
               C50848 -
           ((C17289 + C17290 + C17291) * C50689 * C50727 +
            (C17288 + C17287 + C17286) * C50689 * C17047) *
               C50847 -
           ((C17053 * C2598 + C18428 + C18428 + C17046 * C2604 +
             C17051 * C2597 + C18429 + C18429 + C17045 * C2603 +
             C17049 * C2596 + C18430 + C18430 + C17044 * C2602) *
                C50689 * C50727 +
            (C18439 + C18438 + C18437) * C50689 * C17047) *
               C1993) *
              C50627) *
         C50556) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C5132 +
             C22247 * C5133 + C22248 * C5134) *
                C17047 +
            (C22041 + C22042 + C22043) * C50727) *
               C50847 -
           ((C22767 + C22768 + C22769) * C50727 +
            (C22250 * C5134 + C22248 * C5133 + C22247 * C5132) * C17047) *
               C50848 +
           ((C22248 * C5132 + C22250 * C5133 + C24072 * C5134) * C17047 +
            (C23170 + C23171 + C23183) * C50727) *
               C1993) *
              C50800 +
          (((C22769 + C22768 + C22767) * C17047 +
            (C23670 + C23671 + C23672) * C50727) *
               C50848 -
           ((C22044 + C22045 + C22046) * C50727 +
            (C22043 + C22042 + C22041) * C17047) *
               C50847 -
           (((C19896 * C23166 + C23176 + C23176 + C50526 * C23168) * C5134 +
             C23182 * C5133 + C20855 * C5132) *
                C50727 +
            (C23183 + C23171 + C23170) * C17047) *
               C1993) *
              C50627) *
         C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 +
                 C17051 * C126 + C17057 + C17057 + C17045 * C140 +
                 C17053 * C127 + C17058 + C17058 + C17046 * C141) *
                    C50689 * C17047 +
                (C17286 + C17287 + C17288) * C50689 * C50727) *
                   C1577 -
               ((C18008 + C18009 + C18010) * C50689 * C50727 +
                (C17053 * C413 + C17447 + C17447 + C17046 * C433 +
                 C17051 * C414 + C17448 + C17448 + C17045 * C434 +
                 C17049 * C415 + C17449 + C17449 + C17044 * C435) *
                    C50689 * C17047) *
                   C50655) *
                  C50575 * C928 +
              (((C17049 * C414 + C17456 + C17456 + C17044 * C434 +
                 C17051 * C413 + C17457 + C17457 + C17045 * C433 +
                 C17053 * C412 + C17458 + C17458 + C17046 * C432) *
                    C50689 * C17047 +
                (C18011 + C18012 + C18013) * C50689 * C50727) *
                   C50655 -
               ((C17294 + C17293 + C17292) * C50689 * C50727 +
                (C17053 * C128 + C17065 + C17065 + C17046 * C142 +
                 C17051 * C127 + C17066 + C17066 + C17045 * C141 +
                 C17049 * C126 + C17067 + C17067 + C17044 * C140) *
                    C50689 * C17047) *
                   C1577) *
                  C50575 * C929 +
              (((C17049 * C127 + C17068 + C17068 + C17044 * C141 +
                 C17051 * C128 + C17069 + C17069 + C17045 * C142 +
                 C17053 * C129 + C17070 + C17070 + C17046 * C143) *
                    C50689 * C17047 +
                (C17629 + C17630 + C17631) * C50689 * C50727) *
                   C1577 -
               ((C17053 * C809 + C17778 + C17778 + C17046 * C819 +
                 C17051 * C808 + C17779 + C17779 + C17045 * C818 +
                 C17049 * C807 + C17780 + C17780 + C17044 * C817) *
                    C50689 * C50727 +
                (C17053 * C420 + C17781 + C17781 + C17046 * C440 +
                 C17051 * C412 + C17782 + C17782 + C17045 * C432 +
                 C17049 * C413 + C17783 + C17783 + C17044 * C433) *
                    C50689 * C17047) *
                   C50655) *
                  C50575 * C930) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 +
                 C17051 * C126 + C17057 + C17057 + C17045 * C140 +
                 C17053 * C127 + C17058 + C17058 + C17046 * C141) *
                    C50689 * C17047 +
                (C17286 + C17287 + C17288) * C50689 * C50727) *
                   C1577 -
               ((C18008 + C18009 + C18010) * C50689 * C50727 +
                (C17053 * C413 + C17447 + C17447 + C17046 * C433 +
                 C17051 * C414 + C17448 + C17448 + C17045 * C434 +
                 C17049 * C415 + C17449 + C17449 + C17044 * C435) *
                    C50689 * C17047) *
                   C50655) *
                  C260 +
              (((C18010 + C18009 + C18008) * C50689 * C17047 +
                (C18941 + C18942 + C18943) * C50689 * C50727) *
                   C50655 -
               ((C17289 + C17290 + C17291) * C50689 * C50727 +
                (C17288 + C17287 + C17286) * C50689 * C17047) *
                   C1577) *
                  C261 +
              (((C17291 + C17290 + C17289) * C50689 * C17047 +
                (C18273 + C18274 + C18275) * C50689 * C50727) *
                   C1577 -
               ((C17053 * C3145 + C18932 + C18932 + C17046 * C3151 +
                 C17051 * C3144 + C18933 + C18933 + C17045 * C3150 +
                 C17049 * C3143 + C18934 + C18934 + C17044 * C3149) *
                    C50689 * C50727 +
                (C18943 + C18942 + C18941) * C50689 * C17047) *
                   C50655) *
                  C262) *
             C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
            C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
            C17046 * C141) *
               C50689 * C17047 +
           (C17286 + C17287 + C17288) * C50689 * C50727) *
              C1743 -
          ((C18008 + C18009 + C18010) * C50689 * C50727 +
           (C17053 * C413 + C17447 + C17447 + C17046 * C433 + C17051 * C414 +
            C17448 + C17448 + C17045 * C434 + C17049 * C415 + C17449 + C17449 +
            C17044 * C435) *
               C50689 * C17047) *
              C1744 +
          ((C17049 * C416 + C17450 + C17450 + C17044 * C436 + C17051 * C417 +
            C17451 + C17451 + C17045 * C437 + C17053 * C418 + C17452 + C17452 +
            C17046 * C438) *
               C50689 * C17047 +
           (C18437 + C18438 + C18439) * C50689 * C50727) *
              C1745 -
          ((C17053 * C6020 + C19334 + C19334 + C17046 * C6022 + C17051 * C4532 +
            C19335 + C19335 + C17045 * C4540 + C17049 * C4533 + C19336 +
            C19336 + C17044 * C4541) *
               C50689 * C50727 +
           (C17053 * C1748 + C19337 + C19337 + C17046 * C1756 + C17051 * C1749 +
            C19338 + C19338 + C17045 * C1757 + C17049 * C1750 + C19339 +
            C19339 + C17044 * C1758) *
               C50689 * C17047) *
              C1746) *
         C50575 * C50556) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50689 *
                C19892 +
            C20057 * C19893 + C20058 * C19894 + C20059 * C19895) *
               C1577 -
           (C20560 * C19895 + C20561 * C19894 + C20562 * C19893 +
            (C19896 * C415 + C20166 + C20166 + C50526 * C435) * C50689 *
                C19892) *
               C50655) *
              C50575 * C928 +
          (((C19896 * C414 + C20171 + C20171 + C50526 * C434) * C50689 *
                C19892 +
            C20563 * C19893 + C20564 * C19894 + C20565 * C19895) *
               C50655 -
           (C20063 * C19895 + C20062 * C19894 + C20061 * C19893 +
            (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50689 *
                C19892) *
               C1577) *
              C50575 * C929 +
          (((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C50689 *
                C19892 +
            C20293 * C19893 + C20294 * C19894 + C20295 * C19895) *
               C1577 -
           ((C19896 * C3145 + C20394 + C20394 + C50526 * C3151) * C50689 *
                C19895 +
            (C19896 * C1464 + C20395 + C20395 + C50526 * C1472) * C50689 *
                C19894 +
            (C19896 * C807 + C20396 + C20396 + C50526 * C817) * C50689 *
                C19893 +
            (C19896 * C413 + C20397 + C20397 + C50526 * C433) * C50689 *
                C19892) *
               C50655) *
              C50575 * C930)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50689 *
                C19892 +
            C20057 * C19893 + C20058 * C19894 + C20059 * C19895) *
               C1577 -
           (C20560 * C19895 + C20561 * C19894 + C20562 * C19893 +
            (C19896 * C415 + C20166 + C20166 + C50526 * C435) * C50689 *
                C19892) *
               C50655) *
              C260 +
          ((C20562 * C19892 + C20561 * C19893 + C20560 * C19894 +
            C21195 * C19895) *
               C50655 -
           (C20060 * C19895 + C20059 * C19894 + C20058 * C19893 +
            C20057 * C19892) *
               C1577) *
              C261 +
          ((C20058 * C19892 + C20059 * C19893 + C20060 * C19894 +
            C20739 * C19895) *
               C1577 -
           ((C19896 * C21185 + C21191 + C21191 + C50526 * C21187) * C50689 *
                C19895 +
            C21195 * C19894 + C20560 * C19893 + C20561 * C19892) *
               C50655) *
              C262) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50689 * C19892 +
           C20057 * C19893 + C20058 * C19894 + C20059 * C19895) *
              C1743 -
          (C20560 * C19895 + C20561 * C19894 + C20562 * C19893 +
           (C19896 * C415 + C20166 + C20166 + C50526 * C435) * C50689 *
               C19892) *
              C1744 +
          ((C19896 * C416 + C20167 + C20167 + C50526 * C436) * C50689 * C19892 +
           C20857 * C19893 + C20858 * C19894 + C20859 * C19895) *
              C1745 -
          ((C19896 * C21457 + C21461 + C21461 + C50526 * C21459) * C50689 *
               C19895 +
           (C19896 * C4531 + C21462 + C21462 + C50526 * C4539) * C50689 *
               C19894 +
           (C19896 * C4533 + C21463 + C21463 + C50526 * C4541) * C50689 *
               C19893 +
           (C19896 * C1750 + C21464 + C21464 + C50526 * C1758) * C50689 *
               C19892) *
              C1746) *
         C50575 * C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C5132 +
             C22247 * C5133 + C22248 * C5134) *
                C17047 +
            (C22041 + C22042 + C22043) * C50727) *
               C1577 -
           ((C22767 + C22768 + C22769) * C50727 +
            (C22250 * C5134 + C22248 * C5133 + C22247 * C5132) * C17047) *
               C50655) *
              C50575 * C928 +
          (((C22251 * C5132 + C22252 * C5133 + C22253 * C5134) * C17047 +
            (C22770 + C22771 + C22772) * C50727) *
               C50655 -
           ((C22061 + C22048 + C22047) * C50727 +
            (C22252 * C5134 + C22251 * C5133 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C5132) *
                C17047) *
               C1577) *
              C50575 * C929 +
          ((((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C5132 +
             C22571 * C5133 + C22572 * C5134) *
                C17047 +
            (C22401 + C22413 + C22414) * C50727) *
               C1577 -
           (((C19896 * C6020 + C22565 + C22565 + C50526 * C6022) * C5134 +
             C22412 * C5133 + C22411 * C5132) *
                C50727 +
            ((C19896 * C1748 + C22566 + C22566 + C50526 * C1756) * C5134 +
             C22572 * C5133 + C22571 * C5132) *
                C17047) *
               C50655) *
              C50575 * C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C5132 +
             C22247 * C5133 + C22248 * C5134) *
                C17047 +
            (C22041 + C22042 + C22043) * C50727) *
               C1577 -
           ((C22767 + C22768 + C22769) * C50727 +
            (C22250 * C5134 + C22248 * C5133 + C22247 * C5132) * C17047) *
               C50655) *
              C260 +
          (((C22769 + C22768 + C22767) * C17047 +
            (C23670 + C23671 + C23672) * C50727) *
               C50655 -
           ((C22044 + C22045 + C22046) * C50727 +
            (C22043 + C22042 + C22041) * C17047) *
               C1577) *
              C261 +
          (((C22046 + C22045 + C22044) * C17047 +
            (C23018 + C23019 + C23020) * C50727) *
               C1577 -
           (((C19896 * C21457 + C21461 + C21461 + C50526 * C21459) * C5134 +
             C20856 * C5133 + C20554 * C5132) *
                C50727 +
            (C23672 + C23671 + C23670) * C17047) *
               C50655) *
              C262) *
         C50556) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C5132 +
            C22247 * C5133 + C22248 * C5134) *
               C17047 +
           (C22041 + C22042 + C22043) * C50727) *
              C1743 -
          ((C22767 + C22768 + C22769) * C50727 +
           (C22250 * C5134 + C22248 * C5133 + C22247 * C5132) * C17047) *
              C1744 +
          ((C22248 * C5132 + C22250 * C5133 + C24072 * C5134) * C17047 +
           (C23170 + C23171 + C23183) * C50727) *
              C1745 -
          (((C19896 * C24062 + C24068 + C24068 + C50526 * C24064) * C5134 +
            C23181 * C5133 + C22249 * C5132) *
               C50727 +
           ((C19896 * C7321 + C24069 + C24069 + C50526 * C7325) * C5134 +
            C24072 * C5133 + C22250 * C5132) *
               C17047) *
              C1746) *
         C50575 * C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50689 *
                C19892 +
            C20057 * C19893 + C20058 * C19894 + C20059 * C19895) *
               C50847 -
           (C20560 * C19895 + C20561 * C19894 + C20562 * C19893 +
            (C19896 * C415 + C20166 + C20166 + C50526 * C435) * C50689 *
                C19892) *
               C50848 +
           ((C19896 * C416 + C20167 + C20167 + C50526 * C436) * C50689 *
                C19892 +
            C20857 * C19893 + C20858 * C19894 + C20859 * C19895) *
               C1993) *
              C50575 * C50792 +
          (((C19896 * C414 + C20171 + C20171 + C50526 * C434) * C50689 *
                C19892 +
            C20563 * C19893 + C20564 * C19894 + C20565 * C19895) *
               C50848 -
           (C20063 * C19895 + C20062 * C19894 + C20061 * C19893 +
            (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50689 *
                C19892) *
               C50847 -
           ((C19896 * C3606 + C20175 + C20175 + C50526 * C3610) * C50689 *
                C19895 +
            (C19896 * C2597 + C20176 + C20176 + C50526 * C2603) * C50689 *
                C19894 +
            (C19896 * C1118 + C20177 + C20177 + C50526 * C1126) * C50689 *
                C19893 +
            (C19896 * C417 + C20178 + C20178 + C50526 * C437) * C50689 *
                C19892) *
               C1993) *
              C50575 * C50562)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
             C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
             C17046 * C141) *
                C50689 * C17047 +
            (C17286 + C17287 + C17288) * C50689 * C50727) *
               C50847 -
           ((C18008 + C18009 + C18010) * C50689 * C50727 +
            (C17053 * C413 + C17447 + C17447 + C17046 * C433 + C17051 * C414 +
             C17448 + C17448 + C17045 * C434 + C17049 * C415 + C17449 + C17449 +
             C17044 * C435) *
                C50689 * C17047) *
               C50848 +
           ((C17049 * C416 + C17450 + C17450 + C17044 * C436 + C17051 * C417 +
             C17451 + C17451 + C17045 * C437 + C17053 * C418 + C17452 + C17452 +
             C17046 * C438) *
                C50689 * C17047 +
            (C18437 + C18438 + C18439) * C50689 * C50727) *
               C1993) *
              C50575 * C50792 +
          (((C17049 * C414 + C17456 + C17456 + C17044 * C434 + C17051 * C413 +
             C17457 + C17457 + C17045 * C433 + C17053 * C412 + C17458 + C17458 +
             C17046 * C432) *
                C50689 * C17047 +
            (C18011 + C18012 + C18013) * C50689 * C50727) *
               C50848 -
           ((C17294 + C17293 + C17292) * C50689 * C50727 +
            (C17053 * C128 + C17065 + C17065 + C17046 * C142 + C17051 * C127 +
             C17066 + C17066 + C17045 * C141 + C17049 * C126 + C17067 + C17067 +
             C17044 * C140) *
                C50689 * C17047) *
               C50847 -
           ((C17053 * C1116 + C17462 + C17462 + C17046 * C1124 +
             C17051 * C1117 + C17463 + C17463 + C17045 * C1125 +
             C17049 * C1118 + C17464 + C17464 + C17044 * C1126) *
                C50689 * C50727 +
            (C17053 * C419 + C17465 + C17465 + C17046 * C439 + C17051 * C418 +
             C17466 + C17466 + C17045 * C438 + C17049 * C417 + C17467 + C17467 +
             C17044 * C437) *
                C50689 * C17047) *
               C1993) *
              C50575 * C50562)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C5132 +
             C22247 * C5133 + C22248 * C5134) *
                C17047 +
            (C22041 + C22042 + C22043) * C50727) *
               C50847 -
           ((C22767 + C22768 + C22769) * C50727 +
            (C22250 * C5134 + C22248 * C5133 + C22247 * C5132) * C17047) *
               C50848 +
           ((C22248 * C5132 + C22250 * C5133 + C24072 * C5134) * C17047 +
            (C23170 + C23171 + C23183) * C50727) *
               C1993) *
              C50575 * C50792 +
          (((C22251 * C5132 + C22252 * C5133 + C22253 * C5134) * C17047 +
            (C22770 + C22771 + C22772) * C50727) *
               C50848 -
           ((C22061 + C22048 + C22047) * C50727 +
            (C22252 * C5134 + C22251 * C5133 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C5132) *
                C17047) *
               C50847 -
           (((C19896 * C6425 + C22229 + C22229 + C50526 * C6429) * C5134 +
             C22254 * C5133 + C22059 * C5132) *
                C50727 +
            ((C19896 * C5434 + C22230 + C22230 + C50526 * C5440) * C5134 +
             C22253 * C5133 + C22252 * C5132) *
                C17047) *
               C1993) *
              C50575 * C50562)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
             C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
             C17046 * C141) *
                C50689 * C17047 +
            (C17286 + C17287 + C17288) * C50689 * C50727) *
               C1577 -
           ((C18008 + C18009 + C18010) * C50689 * C50727 +
            (C17053 * C413 + C17447 + C17447 + C17046 * C433 + C17051 * C414 +
             C17448 + C17448 + C17045 * C434 + C17049 * C415 + C17449 + C17449 +
             C17044 * C435) *
                C50689 * C17047) *
               C50655) *
              C260 +
          (((C18010 + C18009 + C18008) * C50689 * C17047 +
            (C18941 + C18942 + C18943) * C50689 * C50727) *
               C50655 -
           ((C17289 + C17290 + C17291) * C50689 * C50727 +
            (C17288 + C17287 + C17286) * C50689 * C17047) *
               C1577) *
              C261 +
          (((C17291 + C17290 + C17289) * C50689 * C17047 +
            (C18273 + C18274 + C18275) * C50689 * C50727) *
               C1577 -
           ((C17053 * C3145 + C18932 + C18932 + C17046 * C3151 +
             C17051 * C3144 + C18933 + C18933 + C17045 * C3150 +
             C17049 * C3143 + C18934 + C18934 + C17044 * C3149) *
                C50689 * C50727 +
            (C18943 + C18942 + C18941) * C50689 * C17047) *
               C50655) *
              C262) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
             C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
             C17046 * C141) *
                C50689 * C17047 +
            (C17286 + C17287 + C17288) * C50689 * C50727) *
               C1577 -
           ((C18008 + C18009 + C18010) * C50689 * C50727 +
            (C17053 * C413 + C17447 + C17447 + C17046 * C433 + C17051 * C414 +
             C17448 + C17448 + C17045 * C434 + C17049 * C415 + C17449 + C17449 +
             C17044 * C435) *
                C50689 * C17047) *
               C50655) *
              C50575 * C928 +
          (((C17049 * C414 + C17456 + C17456 + C17044 * C434 + C17051 * C413 +
             C17457 + C17457 + C17045 * C433 + C17053 * C412 + C17458 + C17458 +
             C17046 * C432) *
                C50689 * C17047 +
            (C18011 + C18012 + C18013) * C50689 * C50727) *
               C50655 -
           ((C17294 + C17293 + C17292) * C50689 * C50727 +
            (C17053 * C128 + C17065 + C17065 + C17046 * C142 + C17051 * C127 +
             C17066 + C17066 + C17045 * C141 + C17049 * C126 + C17067 + C17067 +
             C17044 * C140) *
                C50689 * C17047) *
               C1577) *
              C50575 * C929 +
          (((C17049 * C127 + C17068 + C17068 + C17044 * C141 + C17051 * C128 +
             C17069 + C17069 + C17045 * C142 + C17053 * C129 + C17070 + C17070 +
             C17046 * C143) *
                C50689 * C17047 +
            (C17629 + C17630 + C17631) * C50689 * C50727) *
               C1577 -
           ((C17053 * C809 + C17778 + C17778 + C17046 * C819 + C17051 * C808 +
             C17779 + C17779 + C17045 * C818 + C17049 * C807 + C17780 + C17780 +
             C17044 * C817) *
                C50689 * C50727 +
            (C17053 * C420 + C17781 + C17781 + C17046 * C440 + C17051 * C412 +
             C17782 + C17782 + C17045 * C432 + C17049 * C413 + C17783 + C17783 +
             C17044 * C433) *
                C50689 * C17047) *
               C50655) *
              C50575 * C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50689 *
                C19892 +
            C20057 * C19893 + C20058 * C19894 + C20059 * C19895) *
               C1577 -
           (C20560 * C19895 + C20561 * C19894 + C20562 * C19893 +
            (C19896 * C415 + C20166 + C20166 + C50526 * C435) * C50689 *
                C19892) *
               C50655) *
              C50575 * C928 +
          (((C19896 * C414 + C20171 + C20171 + C50526 * C434) * C50689 *
                C19892 +
            C20563 * C19893 + C20564 * C19894 + C20565 * C19895) *
               C50655 -
           (C20063 * C19895 + C20062 * C19894 + C20061 * C19893 +
            (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50689 *
                C19892) *
               C1577) *
              C50575 * C929 +
          (((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C50689 *
                C19892 +
            C20293 * C19893 + C20294 * C19894 + C20295 * C19895) *
               C1577 -
           ((C19896 * C3145 + C20394 + C20394 + C50526 * C3151) * C50689 *
                C19895 +
            (C19896 * C1464 + C20395 + C20395 + C50526 * C1472) * C50689 *
                C19894 +
            (C19896 * C807 + C20396 + C20396 + C50526 * C817) * C50689 *
                C19893 +
            (C19896 * C413 + C20397 + C20397 + C50526 * C433) * C50689 *
                C19892) *
               C50655) *
              C50575 * C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50689 *
                C19892 +
            C20057 * C19893 + C20058 * C19894 + C20059 * C19895) *
               C1577 -
           (C20560 * C19895 + C20561 * C19894 + C20562 * C19893 +
            (C19896 * C415 + C20166 + C20166 + C50526 * C435) * C50689 *
                C19892) *
               C50655) *
              C260 +
          ((C20562 * C19892 + C20561 * C19893 + C20560 * C19894 +
            C21195 * C19895) *
               C50655 -
           (C20060 * C19895 + C20059 * C19894 + C20058 * C19893 +
            C20057 * C19892) *
               C1577) *
              C261 +
          ((C20058 * C19892 + C20059 * C19893 + C20060 * C19894 +
            C20739 * C19895) *
               C1577 -
           ((C19896 * C21185 + C21191 + C21191 + C50526 * C21187) * C50689 *
                C19895 +
            C21195 * C19894 + C20560 * C19893 + C20561 * C19892) *
               C50655) *
              C262) *
         C50556) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C5132 +
             C22247 * C5133 + C22248 * C5134) *
                C17047 +
            (C22041 + C22042 + C22043) * C50727) *
               C1577 -
           ((C22767 + C22768 + C22769) * C50727 +
            (C22250 * C5134 + C22248 * C5133 + C22247 * C5132) * C17047) *
               C50655) *
              C50575 * C928 +
          (((C22251 * C5132 + C22252 * C5133 + C22253 * C5134) * C17047 +
            (C22770 + C22771 + C22772) * C50727) *
               C50655 -
           ((C22061 + C22048 + C22047) * C50727 +
            (C22252 * C5134 + C22251 * C5133 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C5132) *
                C17047) *
               C1577) *
              C50575 * C929 +
          ((((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C5132 +
             C22571 * C5133 + C22572 * C5134) *
                C17047 +
            (C22401 + C22413 + C22414) * C50727) *
               C1577 -
           (((C19896 * C6020 + C22565 + C22565 + C50526 * C6022) * C5134 +
             C22412 * C5133 + C22411 * C5132) *
                C50727 +
            ((C19896 * C1748 + C22566 + C22566 + C50526 * C1756) * C5134 +
             C22572 * C5133 + C22571 * C5132) *
                C17047) *
               C50655) *
              C50575 * C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C5132 +
             C22247 * C5133 + C22248 * C5134) *
                C17047 +
            (C22041 + C22042 + C22043) * C50727) *
               C1577 -
           ((C22767 + C22768 + C22769) * C50727 +
            (C22250 * C5134 + C22248 * C5133 + C22247 * C5132) * C17047) *
               C50655) *
              C260 +
          (((C22769 + C22768 + C22767) * C17047 +
            (C23670 + C23671 + C23672) * C50727) *
               C50655 -
           ((C22044 + C22045 + C22046) * C50727 +
            (C22043 + C22042 + C22041) * C17047) *
               C1577) *
              C261 +
          (((C22046 + C22045 + C22044) * C17047 +
            (C23018 + C23019 + C23020) * C50727) *
               C1577 -
           (((C19896 * C21457 + C21461 + C21461 + C50526 * C21459) * C5134 +
             C20856 * C5133 + C20554 * C5132) *
                C50727 +
            (C23672 + C23671 + C23670) * C17047) *
               C50655) *
              C262) *
         C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
              C24667 + C24667 + C50531 * C140) *
                 C50814 +
             (C28010 + C28011) * C50753) *
                C17047 +
            ((C24892 + C24893) * C50814 + (C25631 + C25630) * C50753) *
                C50727) *
               C50591 * C50800 -
           ((C26548 * C50753 + (C24895 + C24894) * C50814) * C50727 +
            ((C25630 + C25631) * C50753 + (C24893 + C24892) * C50814) *
                C17047) *
               C50591 * C50627) *
              C50843 +
          ((((C24898 + C24899) * C50814 + (C25632 + C25633) * C50753) * C17047 +
            ((C24900 + C24901) * C50814 + (C25634 + C25635) * C50753) *
                C50727) *
               C50591 * C50627 -
           (((C25633 + C25632) * C50753 + (C24899 + C24898) * C50814) * C50727 +
            ((C28015 + C28014) * C50753 +
             (C24663 * C127 + C24676 + C24676 + C50531 * C141 + C24661 * C126 +
              C24677 + C24677 + C50785 * C140) *
                 C50814) *
                C17047) *
               C50591 * C50800) *
              C50844 +
          ((((C24661 * C127 + C24678 + C24678 + C50785 * C141 + C24663 * C128 +
              C24679 + C24679 + C50531 * C142) *
                 C50814 +
             (C24661 * C413 + C25397 + C25397 + C50785 * C433 + C24663 * C412 +
              C25396 + C25396 + C50531 * C432) *
                 C50753) *
                C17047 +
            ((C25242 + C25243) * C50814 + (C28222 + C28223) * C50753) *
                C50727) *
               C50591 * C50800 -
           (((C24663 * C1463 + C25392 + C25392 + C50531 * C1471 +
              C24661 * C1464 + C25393 + C25393 + C50785 * C1472) *
                 C50753 +
             (C25245 + C25244) * C50814) *
                C50727 +
            ((C28223 + C28222) * C50753 + (C25243 + C25242) * C50814) *
                C17047) *
               C50591 * C50627) *
              C560)) /
        (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
               C24667 + C24667 + C50531 * C140) *
                  C50814 +
              (C28010 + C28011) * C50753) *
                 C17047 +
             ((C24892 + C24893) * C50814 + C28690 * C50753) * C50727) *
                C50801 -
            (((C26059 + C26058) * C50753 + C28691 * C50814) * C50727 +
             ((C28012 + C28013) * C50753 + (C28011 + C28010) * C50814) *
                 C17047) *
                C50655) *
               C50800 +
           (((C28690 * C50814 + (C26058 + C26059) * C50753) * C17047 +
             ((C25629 + C25628) * C50814 + (C26060 + C26061) * C50753) *
                 C50727) *
                C50655 -
            ((C26548 * C50753 + (C24895 + C24894) * C50814) * C50727 +
             (C28691 * C50753 + (C24893 + C24892) * C50814) * C17047) *
                C50801) *
               C50627) *
              C263 +
          (((((C28014 + C28015) * C50814 + (C28016 + C28017) * C50753) *
                 C17047 +
             (C28692 * C50814 + (C28018 + C28019) * C50753) * C50727) *
                C50655 -
            ((C28693 * C50753 + (C24899 + C24898) * C50814) * C50727 +
             ((C28015 + C28014) * C50753 +
              (C24663 * C127 + C24676 + C24676 + C50531 * C141 + C24661 * C126 +
               C24677 + C24677 + C50785 * C140) *
                  C50814) *
                 C17047) *
                C50801) *
               C50800 +
           ((((C24898 + C24899) * C50814 + C28692 * C50753) * C17047 +
             ((C24900 + C24901) * C50814 + (C25634 + C25635) * C50753) *
                 C50727) *
                C50801 -
            (((C24663 * C2598 + C25072 + C25072 + C50531 * C2604 +
               C24661 * C2597 + C25073 + C25073 + C50785 * C2603) *
                  C50753 +
              (C25635 + C25634) * C50814) *
                 C50727 +
             ((C28019 + C28018) * C50753 + C28693 * C50814) * C17047) *
                C50655) *
               C50627) *
              C50562)) /
        (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
              C24667 + C24667 + C50531 * C140) *
                 C50814 +
             (C24661 * C415 + C25059 + C25059 + C50785 * C435 + C24663 * C414 +
              C25058 + C25058 + C50531 * C434) *
                 C50753) *
                C17047 +
            ((C24892 + C24893) * C50814 + (C25631 + C25630) * C50753) *
                C50727) *
               C50591 * C260 -
           ((C26548 * C50753 + (C24895 + C24894) * C50814) * C50727 +
            ((C25630 + C25631) * C50753 + (C24893 + C24892) * C50814) *
                C17047) *
               C50591 * C261 +
           ((C24904 * C50814 + (C25629 + C25628) * C50753) * C17047 +
            ((C24897 + C24896) * C50814 + (C26560 + C26561) * C50753) *
                C50727) *
               C50591 * C262) *
              C263 +
          ((((C24898 + C24899) * C50814 + (C25632 + C25633) * C50753) * C17047 +
            ((C24900 + C24901) * C50814 + (C25634 + C25635) * C50753) *
                C50727) *
               C50591 * C261 -
           (((C25633 + C25632) * C50753 + (C24899 + C24898) * C50814) * C50727 +
            ((C24663 * C413 + C25067 + C25067 + C50531 * C433 + C24661 * C414 +
              C25066 + C25066 + C50785 * C434) *
                 C50753 +
             (C24663 * C127 + C24676 + C24676 + C50531 * C141 + C24661 * C126 +
              C24677 + C24677 + C50785 * C140) *
                 C50814) *
                C17047) *
               C50591 * C260 -
           (((C24663 * C3145 + C25610 + C25610 + C50531 * C3151 +
              C24661 * C3144 + C25611 + C25611 + C50785 * C3150) *
                 C50753 +
             (C24903 + C24902) * C50814) *
                C50727 +
            ((C25635 + C25634) * C50753 + C24905 * C50814) * C17047) *
               C50591 * C262) *
              C50562)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
             C24667 + C24667 + C50531 * C140) *
                C50814 +
            (C24661 * C415 + C25059 + C25059 + C50785 * C435 + C24663 * C414 +
             C25058 + C25058 + C50531 * C434) *
                C50753) *
               C17047 +
           ((C24892 + C24893) * C50814 + (C25631 + C25630) * C50753) * C50727) *
              C50591 * C50575 * C113 -
          (((C25633 + C25632) * C50753 + (C24899 + C24898) * C50814) * C50727 +
           ((C24663 * C413 + C25067 + C25067 + C50531 * C433 + C24661 * C414 +
             C25066 + C25066 + C50785 * C434) *
                C50753 +
            (C24663 * C127 + C24676 + C24676 + C50531 * C141 + C24661 * C126 +
             C24677 + C24677 + C50785 * C140) *
                C50814) *
               C17047) *
              C50591 * C50575 * C114 +
          (((C24661 * C127 + C24678 + C24678 + C50785 * C141 + C24663 * C128 +
             C24679 + C24679 + C50531 * C142) *
                C50814 +
            (C24661 * C413 + C25397 + C25397 + C50785 * C433 + C24663 * C412 +
             C25396 + C25396 + C50531 * C432) *
                C50753) *
               C17047 +
           ((C25242 + C25243) * C50814 +
            (C24661 * C807 + C25395 + C25395 + C50785 * C817 + C24663 * C808 +
             C25394 + C25394 + C50531 * C818) *
                C50753) *
               C50727) *
              C50591 * C50575 * C115 -
          (((C24663 * C809 + C27574 + C27574 + C50531 * C819 + C24661 * C808 +
             C27575 + C27575 + C50785 * C818) *
                C50753 +
            (C24663 * C273 + C24686 + C24686 + C50531 * C293 + C24661 * C265 +
             C24687 + C24687 + C50785 * C285) *
                C50814) *
               C50727 +
           ((C24663 * C420 + C27576 + C27576 + C50531 * C440 + C24661 * C412 +
             C27577 + C27577 + C50785 * C432) *
                C50753 +
            (C24663 * C129 + C24688 + C24688 + C50531 * C143 + C24661 * C128 +
             C24689 + C24689 + C50785 * C142) *
                C50814) *
               C17047) *
              C50591 * C50575 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
              C24667 + C24667 + C50531 * C140) *
                 C50814 +
             (C28010 + C28011) * C50753) *
                C17047 +
            ((C24892 + C24893) * C50814 + (C25631 + C25630) * C50753) *
                C50727) *
               C409 -
           (((C26059 + C26058) * C50753 + (C25630 + C25631) * C50814) * C50727 +
            ((C28012 + C28013) * C50753 + (C28011 + C28010) * C50814) *
                C17047) *
               C410 +
           (((C28013 + C28012) * C50814 +
             (C24661 * C1750 + C26957 + C26957 + C50785 * C1758 +
              C24663 * C1749 + C26956 + C26956 + C50531 * C1757) *
                 C50753) *
                C17047 +
            ((C26058 + C26059) * C50814 +
             (C24661 * C4533 + C26955 + C26955 + C50785 * C4541 +
              C24663 * C4532 + C26954 + C26954 + C50531 * C4540) *
                 C50753) *
                C50727) *
               C411) *
              C50575 * C263 +
          ((((C28014 + C28015) * C50814 + (C28016 + C28017) * C50753) * C17047 +
            ((C25632 + C25633) * C50814 + (C28018 + C28019) * C50753) *
                C50727) *
               C410 -
           (((C25633 + C25632) * C50753 + (C24899 + C24898) * C50814) * C50727 +
            ((C28015 + C28014) * C50753 +
             (C24663 * C127 + C24676 + C24676 + C50531 * C141 + C24661 * C126 +
              C24677 + C24677 + C50785 * C140) *
                 C50814) *
                C17047) *
               C409 -
           (((C24663 * C6020 + C27986 + C27986 + C50531 * C6022 +
              C24661 * C4532 + C27987 + C27987 + C50785 * C4540) *
                 C50753 +
             (C28019 + C28018) * C50814) *
                C50727 +
            ((C24663 * C1748 + C27988 + C27988 + C50531 * C1756 +
              C24661 * C1749 + C27989 + C27989 + C50785 * C1757) *
                 C50753 +
             (C28017 + C28016) * C50814) *
                C17047) *
               C411) *
              C50575 * C50562)) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
              C24667 + C24667 + C50531 * C140) *
                 C50814 +
             (C28010 + C28011) * C50753) *
                C17047 +
            ((C24892 + C24893) * C50814 + (C25631 + C25630) * C50753) *
                C50727) *
               C50801 -
           (((C26059 + C26058) * C50753 + (C25630 + C25631) * C50814) * C50727 +
            ((C28012 + C28013) * C50753 + (C28011 + C28010) * C50814) *
                C17047) *
               C50655) *
              C50575 * C50843 +
          ((((C28014 + C28015) * C50814 + (C28016 + C28017) * C50753) * C17047 +
            ((C25632 + C25633) * C50814 + (C28018 + C28019) * C50753) *
                C50727) *
               C50655 -
           (((C25633 + C25632) * C50753 + (C24899 + C24898) * C50814) * C50727 +
            ((C28015 + C28014) * C50753 +
             (C24663 * C127 + C24676 + C24676 + C50531 * C141 + C24661 * C126 +
              C24677 + C24677 + C50785 * C140) *
                 C50814) *
                C17047) *
               C50801) *
              C50575 * C50844 +
          ((((C24661 * C127 + C24678 + C24678 + C50785 * C141 + C24663 * C128 +
              C24679 + C24679 + C50531 * C142) *
                 C50814 +
             (C28430 + C28431) * C50753) *
                C17047 +
            ((C25242 + C25243) * C50814 + (C28222 + C28223) * C50753) *
                C50727) *
               C50801 -
           (((C24663 * C1116 + C28422 + C28422 + C50531 * C1124 +
              C24661 * C1117 + C28423 + C28423 + C50785 * C1125) *
                 C50753 +
             (C28223 + C28222) * C50814) *
                C50727 +
            ((C24663 * C419 + C28424 + C28424 + C50531 * C439 + C24661 * C418 +
              C28425 + C28425 + C50785 * C438) *
                 C50753 +
             (C28431 + C28430) * C50814) *
                C17047) *
               C50655) *
              C50575 * C560)) /
        (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
             C24667 + C24667 + C50531 * C140) *
                C50814 +
            (C24661 * C415 + C25059 + C25059 + C50785 * C435 + C24663 * C414 +
             C25058 + C25058 + C50531 * C434) *
                C50753) *
               C17047 +
           ((C24892 + C24893) * C50814 + (C25631 + C25630) * C50753) * C50727) *
              C50591 * C50575 * C113 -
          (((C25633 + C25632) * C50753 + (C24899 + C24898) * C50814) * C50727 +
           ((C24663 * C413 + C25067 + C25067 + C50531 * C433 + C24661 * C414 +
             C25066 + C25066 + C50785 * C434) *
                C50753 +
            (C24663 * C127 + C24676 + C24676 + C50531 * C141 + C24661 * C126 +
             C24677 + C24677 + C50785 * C140) *
                C50814) *
               C17047) *
              C50591 * C50575 * C114 +
          (((C24661 * C127 + C24678 + C24678 + C50785 * C141 + C24663 * C128 +
             C24679 + C24679 + C50531 * C142) *
                C50814 +
            (C24661 * C413 + C25397 + C25397 + C50785 * C433 + C24663 * C412 +
             C25396 + C25396 + C50531 * C432) *
                C50753) *
               C17047 +
           ((C25242 + C25243) * C50814 +
            (C24661 * C807 + C25395 + C25395 + C50785 * C817 + C24663 * C808 +
             C25394 + C25394 + C50531 * C818) *
                C50753) *
               C50727) *
              C50591 * C50575 * C115 -
          (((C24663 * C809 + C27574 + C27574 + C50531 * C819 + C24661 * C808 +
             C27575 + C27575 + C50785 * C818) *
                C50753 +
            (C24663 * C273 + C24686 + C24686 + C50531 * C293 + C24661 * C265 +
             C24687 + C24687 + C50785 * C285) *
                C50814) *
               C50727 +
           ((C24663 * C420 + C27576 + C27576 + C50531 * C440 + C24661 * C412 +
             C27577 + C27577 + C50785 * C432) *
                C50753 +
            (C24663 * C129 + C24688 + C24688 + C50531 * C143 + C24661 * C128 +
             C24689 + C24689 + C50785 * C142) *
                C50814) *
               C17047) *
              C50591 * C50575 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
              C24667 + C24667 + C50531 * C140) *
                 C50814 +
             (C24661 * C415 + C25059 + C25059 + C50785 * C435 + C24663 * C414 +
              C25058 + C25058 + C50531 * C434) *
                 C50753) *
                C17047 +
            ((C24892 + C24893) * C50814 + (C25631 + C25630) * C50753) *
                C50727) *
               C50591 * C260 -
           ((C26548 * C50753 + (C24895 + C24894) * C50814) * C50727 +
            ((C25630 + C25631) * C50753 + (C24893 + C24892) * C50814) *
                C17047) *
               C50591 * C261 +
           ((C24904 * C50814 + (C25629 + C25628) * C50753) * C17047 +
            ((C24897 + C24896) * C50814 + (C26560 + C26561) * C50753) *
                C50727) *
               C50591 * C262) *
              C263 +
          ((((C24898 + C24899) * C50814 + (C25632 + C25633) * C50753) * C17047 +
            ((C24900 + C24901) * C50814 + (C25634 + C25635) * C50753) *
                C50727) *
               C50591 * C261 -
           (((C25633 + C25632) * C50753 + (C24899 + C24898) * C50814) * C50727 +
            ((C24663 * C413 + C25067 + C25067 + C50531 * C433 + C24661 * C414 +
              C25066 + C25066 + C50785 * C434) *
                 C50753 +
             (C24663 * C127 + C24676 + C24676 + C50531 * C141 + C24661 * C126 +
              C24677 + C24677 + C50785 * C140) *
                 C50814) *
                C17047) *
               C50591 * C260 -
           (((C24663 * C3145 + C25610 + C25610 + C50531 * C3151 +
              C24661 * C3144 + C25611 + C25611 + C50785 * C3150) *
                 C50753 +
             (C24903 + C24902) * C50814) *
                C50727 +
            ((C25635 + C25634) * C50753 + C24905 * C50814) * C17047) *
               C50591 * C262) *
              C50562)) /
            (p * q * std::sqrt(p + q));
    d2ee[125] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C24661 * C125 + C24666 + C24666 + C50785 * C139 +
                       C24663 * C126 + C24667 + C24667 + C50531 * C140) *
                          C50814 +
                      (C28010 + C28011) * C50753) *
                         C17047 +
                     ((C24892 + C24893) * C50814 + C28690 * C50753) * C50727) *
                        C50591 * C50845 -
                    ((C26548 * C50753 + (C24895 + C24894) * C50814) * C50727 +
                     (C28691 * C50753 + (C24893 + C24892) * C50814) * C17047) *
                        C50591 * C50846 +
                    ((C24904 * C50814 + (C25629 + C25628) * C50753) * C17047 +
                     ((C24897 + C24896) * C50814 + (C26560 + C26561) * C50753) *
                         C50727) *
                        C50591 * C1232) *
                       C50792 +
                   ((((C24898 + C24899) * C50814 + C28692 * C50753) * C17047 +
                     ((C24900 + C24901) * C50814 + (C25634 + C25635) * C50753) *
                         C50727) *
                        C50591 * C50846 -
                    ((C28693 * C50753 + (C24899 + C24898) * C50814) * C50727 +
                     ((C28015 + C28014) * C50753 +
                      (C24663 * C127 + C24676 + C24676 + C50531 * C141 +
                       C24661 * C126 + C24677 + C24677 + C50785 * C140) *
                          C50814) *
                         C17047) *
                        C50591 * C50845 -
                    (((C24663 * C3145 + C25610 + C25610 + C50531 * C3151 +
                       C24661 * C3144 + C25611 + C25611 + C50785 * C3150) *
                          C50753 +
                      (C24903 + C24902) * C50814) *
                         C50727 +
                     ((C25635 + C25634) * C50753 + C24905 * C50814) * C17047) *
                        C50591 * C1232) *
                       C50562)) /
                 (p * q * std::sqrt(p + q));
    d2ee[126] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C24661 * C125 + C24666 + C24666 + C50785 * C139 +
                       C24663 * C126 + C24667 + C24667 + C50531 * C140) *
                          C50814 +
                      (C28010 + C28011) * C50753) *
                         C17047 +
                     ((C24892 + C24893) * C50814 + C28690 * C50753) * C50727) *
                        C50801 -
                    ((C29212 * C50753 + C28691 * C50814) * C50727 +
                     ((C28012 + C28013) * C50753 + (C28011 + C28010) * C50814) *
                         C17047) *
                        C50655) *
                       C50845 +
                   (((C28690 * C50814 + C29213 * C50753) * C17047 +
                     (C29870 * C50814 + (C26060 + C26061) * C50753) * C50727) *
                        C50655 -
                    ((C26548 * C50753 + (C24895 + C24894) * C50814) * C50727 +
                     (C28691 * C50753 + (C24893 + C24892) * C50814) * C17047) *
                        C50801) *
                       C50846 +
                   (((C24904 * C50814 + C29870 * C50753) * C17047 +
                     ((C24897 + C24896) * C50814 + (C26560 + C26561) * C50753) *
                         C50727) *
                        C50801 -
                    (((C24663 * C3606 + C26048 + C26048 + C50531 * C3610 +
                       C24661 * C3607 + C26049 + C26049 + C50785 * C3611) *
                          C50753 +
                      (C26561 + C26560) * C50814) *
                         C50727 +
                     ((C26061 + C26060) * C50753 + C26548 * C50814) * C17047) *
                        C50655) *
                       C1232) *
                  C50556) /
                 (p * q * std::sqrt(p + q));
    d2ee[127] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
             C24667 + C24667 + C50531 * C140) *
                C50814 +
            (C28010 + C28011) * C50753) *
               C17047 +
           ((C24892 + C24893) * C50814 + C28690 * C50753) * C50727) *
              C50591 * C997 -
          ((C26548 * C50753 + (C24895 + C24894) * C50814) * C50727 +
           (C28691 * C50753 + (C24893 + C24892) * C50814) * C17047) *
              C50591 * C998 +
          ((C24904 * C50814 + (C25629 + C25628) * C50753) * C17047 +
           ((C24897 + C24896) * C50814 + (C26560 + C26561) * C50753) * C50727) *
              C50591 * C999 -
          (((C24663 * C4120 + C26553 + C26553 + C50531 * C4124 +
             C24661 * C4121 + C26554 + C26554 + C50785 * C4125) *
                C50753 +
            (C25893 + C25892) * C50814) *
               C50727 +
           ((C26561 + C26560) * C50753 + C25880 * C50814) * C17047) *
              C50591 * C1000) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
              C24667 + C24667 + C50531 * C140) *
                 C50814 +
             (C28010 + C28011) * C50753) *
                C17047 +
            ((C24892 + C24893) * C50814 + C28690 * C50753) * C50727) *
               C50591 * C926 -
           ((C26548 * C50753 + (C24895 + C24894) * C50814) * C50727 +
            (C28691 * C50753 + (C24893 + C24892) * C50814) * C17047) *
               C50591 * C50627) *
              C928 +
          ((((C24898 + C24899) * C50814 + C28692 * C50753) * C17047 +
            ((C24900 + C24901) * C50814 + (C25634 + C25635) * C50753) *
                C50727) *
               C50591 * C50627 -
           ((C28693 * C50753 + (C24899 + C24898) * C50814) * C50727 +
            ((C28015 + C28014) * C50753 +
             (C24663 * C127 + C24676 + C24676 + C50531 * C141 + C24661 * C126 +
              C24677 + C24677 + C50785 * C140) *
                 C50814) *
                C17047) *
               C50591 * C926) *
              C929 +
          ((((C24661 * C127 + C24678 + C24678 + C50785 * C141 + C24663 * C128 +
              C24679 + C24679 + C50531 * C142) *
                 C50814 +
             (C28430 + C28431) * C50753) *
                C17047 +
            ((C25242 + C25243) * C50814 + (C28222 + C28223) * C50753) *
                C50727) *
               C50591 * C926 -
           (((C24663 * C1463 + C25392 + C25392 + C50531 * C1471 +
              C24661 * C1464 + C25393 + C25393 + C50785 * C1472) *
                 C50753 +
             (C25245 + C25244) * C50814) *
                C50727 +
            ((C28223 + C28222) * C50753 + (C25243 + C25242) * C50814) *
                C17047) *
               C50591 * C50627) *
              C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
              C24667 + C24667 + C50531 * C140) *
                 C50814 +
             (C28010 + C28011) * C50753) *
                C17047 +
            ((C24892 + C24893) * C50814 + C28690 * C50753) * C50727) *
               C409 -
           ((C29212 * C50753 + C28691 * C50814) * C50727 +
            ((C28012 + C28013) * C50753 + (C28011 + C28010) * C50814) *
                C17047) *
               C410 +
           (((C28013 + C28012) * C50814 +
             (C24661 * C1750 + C26957 + C26957 + C50785 * C1758 +
              C24663 * C1749 + C26956 + C26956 + C50531 * C1757) *
                 C50753) *
                C17047 +
            (C29213 * C50814 + (C29222 + C29223) * C50753) * C50727) *
               C411) *
              C926 +
          (((C28690 * C50814 + C29213 * C50753) * C17047 +
            ((C25629 + C25628) * C50814 + (C26060 + C26061) * C50753) *
                C50727) *
               C410 -
           ((C26548 * C50753 + (C24895 + C24894) * C50814) * C50727 +
            (C28691 * C50753 + (C24893 + C24892) * C50814) * C17047) *
               C409 -
           (((C24663 * C4530 + C26952 + C26952 + C50531 * C4538 +
              C24661 * C4531 + C26953 + C26953 + C50785 * C4539) *
                 C50753 +
             (C26061 + C26060) * C50814) *
                C50727 +
            ((C29223 + C29222) * C50753 + C29212 * C50814) * C17047) *
               C411) *
              C50627) *
         C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[128] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
               C24667 + C24667 + C50531 * C140) *
                  C50814 +
              (C28010 + C28011) * C50753) *
                 C17047 +
             ((C24892 + C24893) * C50814 + C28690 * C50753) * C50727) *
                C50801 -
            ((C29212 * C50753 + C28691 * C50814) * C50727 +
             ((C28012 + C28013) * C50753 + (C28011 + C28010) * C50814) *
                 C17047) *
                C50655) *
               C926 +
           (((C28690 * C50814 + C29213 * C50753) * C17047 +
             ((C25629 + C25628) * C50814 + (C26060 + C26061) * C50753) *
                 C50727) *
                C50655 -
            ((C26548 * C50753 + (C24895 + C24894) * C50814) * C50727 +
             (C28691 * C50753 + (C24893 + C24892) * C50814) * C17047) *
                C50801) *
               C50627) *
              C50792 +
          (((((C28014 + C28015) * C50814 + (C28016 + C28017) * C50753) *
                 C17047 +
             (C28692 * C50814 + (C28018 + C28019) * C50753) * C50727) *
                C50655 -
            ((C28693 * C50753 + (C24899 + C24898) * C50814) * C50727 +
             ((C28015 + C28014) * C50753 +
              (C24663 * C127 + C24676 + C24676 + C50531 * C141 + C24661 * C126 +
               C24677 + C24677 + C50785 * C140) *
                  C50814) *
                 C17047) *
                C50801) *
               C926 +
           ((((C24898 + C24899) * C50814 + C28692 * C50753) * C17047 +
             ((C24900 + C24901) * C50814 + (C25634 + C25635) * C50753) *
                 C50727) *
                C50801 -
            (((C24663 * C2598 + C25072 + C25072 + C50531 * C2604 +
               C24661 * C2597 + C25073 + C25073 + C50785 * C2603) *
                  C50753 +
              (C25635 + C25634) * C50814) *
                 C50727 +
             ((C28019 + C28018) * C50753 + C28693 * C50814) * C17047) *
                C50655) *
               C50627) *
              C50562)) /
        (p * q * std::sqrt(p + q));
    d2ee[129] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
              C24667 + C24667 + C50531 * C140) *
                 C50814 +
             (C28010 + C28011) * C50753) *
                C17047 +
            ((C24892 + C24893) * C50814 + C28690 * C50753) * C50727) *
               C50591 * C926 -
           ((C26548 * C50753 + (C24895 + C24894) * C50814) * C50727 +
            (C28691 * C50753 + (C24893 + C24892) * C50814) * C17047) *
               C50591 * C50627) *
              C928 +
          ((((C24898 + C24899) * C50814 + C28692 * C50753) * C17047 +
            ((C24900 + C24901) * C50814 + (C25634 + C25635) * C50753) *
                C50727) *
               C50591 * C50627 -
           ((C28693 * C50753 + (C24899 + C24898) * C50814) * C50727 +
            ((C28015 + C28014) * C50753 +
             (C24663 * C127 + C24676 + C24676 + C50531 * C141 + C24661 * C126 +
              C24677 + C24677 + C50785 * C140) *
                 C50814) *
                C17047) *
               C50591 * C926) *
              C929 +
          ((((C24661 * C127 + C24678 + C24678 + C50785 * C141 + C24663 * C128 +
              C24679 + C24679 + C50531 * C142) *
                 C50814 +
             (C28430 + C28431) * C50753) *
                C17047 +
            ((C25242 + C25243) * C50814 + (C28222 + C28223) * C50753) *
                C50727) *
               C50591 * C926 -
           (((C24663 * C1463 + C25392 + C25392 + C50531 * C1471 +
              C24661 * C1464 + C25393 + C25393 + C50785 * C1472) *
                 C50753 +
             (C25245 + C25244) * C50814) *
                C50727 +
            ((C28223 + C28222) * C50753 + (C25243 + C25242) * C50814) *
                C17047) *
               C50591 * C50627) *
              C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
             C24667 + C24667 + C50531 * C140) *
                C50814 +
            (C28010 + C28011) * C50753) *
               C17047 +
           ((C24892 + C24893) * C50814 + C28690 * C50753) * C50727) *
              C50591 * C997 -
          ((C26548 * C50753 + (C24895 + C24894) * C50814) * C50727 +
           (C28691 * C50753 + (C24893 + C24892) * C50814) * C17047) *
              C50591 * C998 +
          ((C24904 * C50814 + (C25629 + C25628) * C50753) * C17047 +
           ((C24897 + C24896) * C50814 + (C26560 + C26561) * C50753) * C50727) *
              C50591 * C999 -
          (((C24663 * C4120 + C26553 + C26553 + C50531 * C4124 +
             C24661 * C4121 + C26554 + C26554 + C50785 * C4125) *
                C50753 +
            (C25893 + C25892) * C50814) *
               C50727 +
           ((C26561 + C26560) * C50753 + C25880 * C50814) * C17047) *
              C50591 * C1000) *
         C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
               C24667 + C24667 + C50531 * C140) *
                  C50814 +
              (C28010 + C28011) * C50753) *
                 C17047 +
             ((C24892 + C24893) * C50814 + C28690 * C50753) * C50727) *
                C1577 -
            ((C29212 * C50753 + C28691 * C50814) * C50727 +
             ((C28012 + C28013) * C50753 + (C28011 + C28010) * C50814) *
                 C17047) *
                C50655) *
               C50800 +
           (((C28690 * C50814 + C29213 * C50753) * C17047 +
             (C29870 * C50814 + (C26060 + C26061) * C50753) * C50727) *
                C50655 -
            ((C26548 * C50753 + (C24895 + C24894) * C50814) * C50727 +
             (C28691 * C50753 + (C24893 + C24892) * C50814) * C17047) *
                C1577) *
               C50627) *
              C50792 +
          (((((C28014 + C28015) * C50814 + (C28016 + C28017) * C50753) *
                 C17047 +
             (C28692 * C50814 + (C28018 + C28019) * C50753) * C50727) *
                C50655 -
            ((C28693 * C50753 + (C24899 + C24898) * C50814) * C50727 +
             ((C28015 + C28014) * C50753 +
              (C24663 * C127 + C24676 + C24676 + C50531 * C141 + C24661 * C126 +
               C24677 + C24677 + C50785 * C140) *
                  C50814) *
                 C17047) *
                C1577) *
               C50800 +
           ((((C24898 + C24899) * C50814 + C28692 * C50753) * C17047 +
             ((C24900 + C24901) * C50814 + (C25634 + C25635) * C50753) *
                 C50727) *
                C1577 -
            (((C24663 * C2598 + C25072 + C25072 + C50531 * C2604 +
               C24661 * C2597 + C25073 + C25073 + C50785 * C2603) *
                  C50753 +
              (C25635 + C25634) * C50814) *
                 C50727 +
             ((C28019 + C28018) * C50753 + C28693 * C50814) * C17047) *
                C50655) *
               C50627) *
              C50562)) /
        (p * q * std::sqrt(p + q));
    d2ee[131] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
              C24667 + C24667 + C50531 * C140) *
                 C50814 +
             (C28010 + C28011) * C50753) *
                C17047 +
            ((C24892 + C24893) * C50814 + C28690 * C50753) * C50727) *
               C50847 -
           ((C29212 * C50753 + C28691 * C50814) * C50727 +
            ((C28012 + C28013) * C50753 + (C28011 + C28010) * C50814) *
                C17047) *
               C50848 +
           (((C28013 + C28012) * C50814 + (C30401 + C30402) * C50753) * C17047 +
            (C29213 * C50814 + (C29222 + C29223) * C50753) * C50727) *
               C1993) *
              C50800 +
          (((C28690 * C50814 + C29213 * C50753) * C17047 +
            (C29870 * C50814 + (C26060 + C26061) * C50753) * C50727) *
               C50848 -
           ((C26548 * C50753 + (C24895 + C24894) * C50814) * C50727 +
            (C28691 * C50753 + (C24893 + C24892) * C50814) * C17047) *
               C50847 -
           (((C24663 * C4530 + C26952 + C26952 + C50531 * C4538 +
              C24661 * C4531 + C26953 + C26953 + C50785 * C4539) *
                 C50753 +
             (C26061 + C26060) * C50814) *
                C50727 +
            ((C29223 + C29222) * C50753 + C29212 * C50814) * C17047) *
               C1993) *
              C50627) *
         C50556) /
        (p * q * std::sqrt(p + q));
    d2ee[132] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
              C24667 + C24667 + C50531 * C140) *
                 C50814 +
             (C28010 + C28011) * C50753) *
                C17047 +
            ((C24892 + C24893) * C50814 + C28690 * C50753) * C50727) *
               C1577 -
           ((C29212 * C50753 + C28691 * C50814) * C50727 +
            ((C28012 + C28013) * C50753 + (C28011 + C28010) * C50814) *
                C17047) *
               C50655) *
              C260 +
          (((C28690 * C50814 + C29213 * C50753) * C17047 +
            (C29870 * C50814 + (C26060 + C26061) * C50753) * C50727) *
               C50655 -
           ((C26548 * C50753 + (C24895 + C24894) * C50814) * C50727 +
            (C28691 * C50753 + (C24893 + C24892) * C50814) * C17047) *
               C1577) *
              C261 +
          (((C24904 * C50814 + C29870 * C50753) * C17047 +
            ((C24897 + C24896) * C50814 + (C26560 + C26561) * C50753) *
                C50727) *
               C1577 -
           (((C24663 * C3606 + C26048 + C26048 + C50531 * C3610 +
              C24661 * C3607 + C26049 + C26049 + C50785 * C3611) *
                 C50753 +
             (C26561 + C26560) * C50814) *
                C50727 +
            ((C26061 + C26060) * C50753 + C26548 * C50814) * C17047) *
               C50655) *
              C262) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
              C24667 + C24667 + C50531 * C140) *
                 C50814 +
             (C28010 + C28011) * C50753) *
                C17047 +
            ((C24892 + C24893) * C50814 + C28690 * C50753) * C50727) *
               C1577 -
           ((C29212 * C50753 + C28691 * C50814) * C50727 +
            ((C28012 + C28013) * C50753 + (C28011 + C28010) * C50814) *
                C17047) *
               C50655) *
              C50575 * C928 +
          ((((C28014 + C28015) * C50814 + (C28016 + C28017) * C50753) * C17047 +
            (C28692 * C50814 + (C28018 + C28019) * C50753) * C50727) *
               C50655 -
           ((C28693 * C50753 + (C24899 + C24898) * C50814) * C50727 +
            ((C28015 + C28014) * C50753 +
             (C24663 * C127 + C24676 + C24676 + C50531 * C141 + C24661 * C126 +
              C24677 + C24677 + C50785 * C140) *
                 C50814) *
                C17047) *
               C1577) *
              C50575 * C929 +
          ((((C24661 * C127 + C24678 + C24678 + C50785 * C141 + C24663 * C128 +
              C24679 + C24679 + C50531 * C142) *
                 C50814 +
             (C28430 + C28431) * C50753) *
                C17047 +
            ((C25242 + C25243) * C50814 + (C28222 + C28223) * C50753) *
                C50727) *
               C1577 -
           (((C24663 * C1116 + C28422 + C28422 + C50531 * C1124 +
              C24661 * C1117 + C28423 + C28423 + C50785 * C1125) *
                 C50753 +
             (C28223 + C28222) * C50814) *
                C50727 +
            ((C24663 * C419 + C28424 + C28424 + C50531 * C439 + C24661 * C418 +
              C28425 + C28425 + C50785 * C438) *
                 C50753 +
             (C28431 + C28430) * C50814) *
                C17047) *
               C50655) *
              C50575 * C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
             C24667 + C24667 + C50531 * C140) *
                C50814 +
            (C28010 + C28011) * C50753) *
               C17047 +
           ((C24892 + C24893) * C50814 + C28690 * C50753) * C50727) *
              C1743 -
          ((C29212 * C50753 + C28691 * C50814) * C50727 +
           ((C28012 + C28013) * C50753 + (C28011 + C28010) * C50814) * C17047) *
              C1744 +
          (((C28013 + C28012) * C50814 + (C30401 + C30402) * C50753) * C17047 +
           (C29213 * C50814 + (C29222 + C29223) * C50753) * C50727) *
              C1745 -
          (((C24663 * C6425 + C30393 + C30393 + C50531 * C6429 +
             C24661 * C6426 + C30394 + C30394 + C50785 * C6430) *
                C50753 +
            (C29223 + C29222) * C50814) *
               C50727 +
           ((C24663 * C5434 + C30395 + C30395 + C50531 * C5440 +
             C24661 * C5433 + C30396 + C30396 + C50785 * C5439) *
                C50753 +
            (C30402 + C30401) * C50814) *
               C17047) *
              C1746) *
         C50575 * C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[133] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
              C24667 + C24667 + C50531 * C140) *
                 C50814 +
             (C28010 + C28011) * C50753) *
                C17047 +
            ((C24892 + C24893) * C50814 + C28690 * C50753) * C50727) *
               C50847 -
           ((C29212 * C50753 + C28691 * C50814) * C50727 +
            ((C28012 + C28013) * C50753 + (C28011 + C28010) * C50814) *
                C17047) *
               C50848 +
           (((C28013 + C28012) * C50814 + (C30401 + C30402) * C50753) * C17047 +
            (C29213 * C50814 + (C29222 + C29223) * C50753) * C50727) *
               C1993) *
              C50575 * C50792 +
          ((((C28014 + C28015) * C50814 + (C28016 + C28017) * C50753) * C17047 +
            (C28692 * C50814 + (C28018 + C28019) * C50753) * C50727) *
               C50848 -
           ((C28693 * C50753 + (C24899 + C24898) * C50814) * C50727 +
            ((C28015 + C28014) * C50753 +
             (C24663 * C127 + C24676 + C24676 + C50531 * C141 + C24661 * C126 +
              C24677 + C24677 + C50785 * C140) *
                 C50814) *
                C17047) *
               C50847 -
           (((C24663 * C6020 + C27986 + C27986 + C50531 * C6022 +
              C24661 * C4532 + C27987 + C27987 + C50785 * C4540) *
                 C50753 +
             (C28019 + C28018) * C50814) *
                C50727 +
            ((C24663 * C1748 + C27988 + C27988 + C50531 * C1756 +
              C24661 * C1749 + C27989 + C27989 + C50785 * C1757) *
                 C50753 +
             (C28017 + C28016) * C50814) *
                C17047) *
               C1993) *
              C50575 * C50562)) /
        (p * q * std::sqrt(p + q));
    d2ee[134] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
              C24667 + C24667 + C50531 * C140) *
                 C50814 +
             (C28010 + C28011) * C50753) *
                C17047 +
            ((C24892 + C24893) * C50814 + C28690 * C50753) * C50727) *
               C1577 -
           ((C29212 * C50753 + C28691 * C50814) * C50727 +
            ((C28012 + C28013) * C50753 + (C28011 + C28010) * C50814) *
                C17047) *
               C50655) *
              C50575 * C928 +
          ((((C28014 + C28015) * C50814 + (C28016 + C28017) * C50753) * C17047 +
            (C28692 * C50814 + (C28018 + C28019) * C50753) * C50727) *
               C50655 -
           ((C28693 * C50753 + (C24899 + C24898) * C50814) * C50727 +
            ((C28015 + C28014) * C50753 +
             (C24663 * C127 + C24676 + C24676 + C50531 * C141 + C24661 * C126 +
              C24677 + C24677 + C50785 * C140) *
                 C50814) *
                C17047) *
               C1577) *
              C50575 * C929 +
          ((((C24661 * C127 + C24678 + C24678 + C50785 * C141 + C24663 * C128 +
              C24679 + C24679 + C50531 * C142) *
                 C50814 +
             (C28430 + C28431) * C50753) *
                C17047 +
            ((C25242 + C25243) * C50814 + (C28222 + C28223) * C50753) *
                C50727) *
               C1577 -
           (((C24663 * C1116 + C28422 + C28422 + C50531 * C1124 +
              C24661 * C1117 + C28423 + C28423 + C50785 * C1125) *
                 C50753 +
             (C28223 + C28222) * C50814) *
                C50727 +
            ((C24663 * C419 + C28424 + C28424 + C50531 * C439 + C24661 * C418 +
              C28425 + C28425 + C50785 * C438) *
                 C50753 +
             (C28431 + C28430) * C50814) *
                C17047) *
               C50655) *
              C50575 * C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
              C24667 + C24667 + C50531 * C140) *
                 C50814 +
             (C28010 + C28011) * C50753) *
                C17047 +
            ((C24892 + C24893) * C50814 + C28690 * C50753) * C50727) *
               C1577 -
           ((C29212 * C50753 + C28691 * C50814) * C50727 +
            ((C28012 + C28013) * C50753 + (C28011 + C28010) * C50814) *
                C17047) *
               C50655) *
              C260 +
          (((C28690 * C50814 + C29213 * C50753) * C17047 +
            (C29870 * C50814 + (C26060 + C26061) * C50753) * C50727) *
               C50655 -
           ((C26548 * C50753 + (C24895 + C24894) * C50814) * C50727 +
            (C28691 * C50753 + (C24893 + C24892) * C50814) * C17047) *
               C1577) *
              C261 +
          (((C24904 * C50814 + C29870 * C50753) * C17047 +
            ((C24897 + C24896) * C50814 + (C26560 + C26561) * C50753) *
                C50727) *
               C1577 -
           (((C24663 * C3606 + C26048 + C26048 + C50531 * C3610 +
              C24661 * C3607 + C26049 + C26049 + C50785 * C3611) *
                 C50753 +
             (C26561 + C26560) * C50814) *
                C50727 +
            ((C26061 + C26060) * C50753 + C26548 * C50814) * C17047) *
               C50655) *
              C262) *
         C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[135] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 +
                      C17051 * C126 + C17057 + C17057 + C17045 * C140 +
                      C17053 * C127 + C17058 + C17058 + C17046 * C141) *
                         C50689 * C17047 +
                     (C17286 + C17287 + C17288) * C50689 * C50727) *
                        C50591 * C50800 -
                    ((C17289 + C17290 + C17291) * C50689 * C50727 +
                     (C17288 + C17287 + C17286) * C50689 * C17047) *
                        C50591 * C50627) *
                       C50843 +
                   (((C17292 + C17293 + C17294) * C50689 * C17047 +
                     (C17295 + C17296 + C17297) * C50689 * C50727) *
                        C50591 * C50627 -
                    ((C17294 + C17293 + C17292) * C50689 * C50727 +
                     (C17053 * C128 + C17065 + C17065 + C17046 * C142 +
                      C17051 * C127 + C17066 + C17066 + C17045 * C141 +
                      C17049 * C126 + C17067 + C17067 + C17044 * C140) *
                         C50689 * C17047) *
                        C50591 * C50800) *
                       C50844 +
                   (((C17049 * C127 + C17068 + C17068 + C17044 * C141 +
                      C17051 * C128 + C17069 + C17069 + C17045 * C142 +
                      C17053 * C129 + C17070 + C17070 + C17046 * C143) *
                         C50689 * C17047 +
                     (C17629 + C17630 + C17631) * C50689 * C50727) *
                        C50591 * C50800 -
                    ((C17053 * C274 + C17620 + C17620 + C17046 * C294 +
                      C17051 * C272 + C17621 + C17621 + C17045 * C292 +
                      C17049 * C271 + C17622 + C17622 + C17044 * C291) *
                         C50689 * C50727 +
                     (C17631 + C17630 + C17629) * C50689 * C17047) *
                        C50591 * C50627) *
                       C560)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) *
                         C50689 * C19892 +
                     C20057 * C19893 + C20058 * C19894 + C20059 * C19895) *
                        C50591 * C50800 -
                    (C20060 * C19895 + C20059 * C19894 + C20058 * C19893 +
                     C20057 * C19892) *
                        C50591 * C50627) *
                       C50843 +
                   ((C20061 * C19892 + C20062 * C19893 + C20063 * C19894 +
                     C20064 * C19895) *
                        C50591 * C50627 -
                    (C20063 * C19895 + C20062 * C19894 + C20061 * C19893 +
                     (C19896 * C126 + C19906 + C19906 + C50526 * C140) *
                         C50689 * C19892) *
                        C50591 * C50800) *
                       C50844 +
                   (((C19896 * C127 + C19907 + C19907 + C50526 * C141) *
                         C50689 * C19892 +
                     C20293 * C19893 + C20294 * C19894 + C20295 * C19895) *
                        C50591 * C50800 -
                    ((C19896 * C2371 + C20283 + C20283 + C50526 * C2377) *
                         C50689 * C19895 +
                     C20295 * C19894 + C20294 * C19893 + C20293 * C19892) *
                        C50591 * C50627) *
                       C560)) /
                     (p * q * std::sqrt(p + q));
    d2ee[136] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C17049 * C125 + C17056 + C17056 + C17044 * C139 +
                       C17051 * C126 + C17057 + C17057 + C17045 * C140 +
                       C17053 * C127 + C17058 + C17058 + C17046 * C141) *
                          C50689 * C17047 +
                      (C17286 + C17287 + C17288) * C50689 * C50727) *
                         C50801 -
                     ((C18008 + C18009 + C18010) * C50689 * C50727 +
                      (C17053 * C413 + C17447 + C17447 + C17046 * C433 +
                       C17051 * C414 + C17448 + C17448 + C17045 * C434 +
                       C17049 * C415 + C17449 + C17449 + C17044 * C435) *
                          C50689 * C17047) *
                         C50655) *
                        C50800 +
                    (((C18010 + C18009 + C18008) * C50689 * C17047 +
                      (C17049 * C1466 + C17984 + C17984 + C17044 * C1474 +
                       C17051 * C1465 + C17985 + C17985 + C17045 * C1473 +
                       C17053 * C1464 + C17986 + C17986 + C17046 * C1472) *
                          C50689 * C50727) *
                         C50655 -
                     ((C17289 + C17290 + C17291) * C50689 * C50727 +
                      (C17288 + C17287 + C17286) * C50689 * C17047) *
                         C50801) *
                        C50627) *
                       C263 +
                   ((((C17049 * C414 + C17456 + C17456 + C17044 * C434 +
                       C17051 * C413 + C17457 + C17457 + C17045 * C433 +
                       C17053 * C412 + C17458 + C17458 + C17046 * C432) *
                          C50689 * C17047 +
                      (C18011 + C18012 + C18013) * C50689 * C50727) *
                         C50655 -
                     ((C17294 + C17293 + C17292) * C50689 * C50727 +
                      (C17053 * C128 + C17065 + C17065 + C17046 * C142 +
                       C17051 * C127 + C17066 + C17066 + C17045 * C141 +
                       C17049 * C126 + C17067 + C17067 + C17044 * C140) *
                          C50689 * C17047) *
                         C50801) *
                        C50800 +
                    (((C17292 + C17293 + C17294) * C50689 * C17047 +
                      (C17295 + C17296 + C17297) * C50689 * C50727) *
                         C50801 -
                     ((C17053 * C1463 + C17993 + C17993 + C17046 * C1471 +
                       C17051 * C1464 + C17994 + C17994 + C17045 * C1472 +
                       C17049 * C1465 + C17995 + C17995 + C17044 * C1473) *
                          C50689 * C50727 +
                      (C18013 + C18012 + C18011) * C50689 * C17047) *
                         C50655) *
                        C50627) *
                       C50562)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) *
                          C50689 * C19892 +
                      C20057 * C19893 + C20058 * C19894 + C20059 * C19895) *
                         C50801 -
                     (C20560 * C19895 + C20561 * C19894 + C20562 * C19893 +
                      (C19896 * C415 + C20166 + C20166 + C50526 * C435) *
                          C50689 * C19892) *
                         C50655) *
                        C50800 +
                    ((C20562 * C19892 + C20561 * C19893 + C20560 * C19894 +
                      (C19896 * C4121 + C20534 + C20534 + C50526 * C4125) *
                          C50689 * C19895) *
                         C50655 -
                     (C20060 * C19895 + C20059 * C19894 + C20058 * C19893 +
                      C20057 * C19892) *
                         C50801) *
                        C50627) *
                       C263 +
                   ((((C19896 * C414 + C20171 + C20171 + C50526 * C434) *
                          C50689 * C19892 +
                      C20563 * C19893 + C20564 * C19894 + C20565 * C19895) *
                         C50655 -
                     (C20063 * C19895 + C20062 * C19894 + C20061 * C19893 +
                      (C19896 * C126 + C19906 + C19906 + C50526 * C140) *
                          C50689 * C19892) *
                         C50801) *
                        C50800 +
                    ((C20061 * C19892 + C20062 * C19893 + C20063 * C19894 +
                      C20064 * C19895) *
                         C50801 -
                     ((C19896 * C4120 + C20541 + C20541 + C50526 * C4124) *
                          C50689 * C19895 +
                      C20565 * C19894 + C20564 * C19893 + C20563 * C19892) *
                         C50655) *
                        C50627) *
                       C50562)) /
                     (p * q * std::sqrt(p + q));
    d2ee[137] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
             C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
             C17046 * C141) *
                C50689 * C17047 +
            (C17286 + C17287 + C17288) * C50689 * C50727) *
               C50591 * C260 -
           ((C17289 + C17290 + C17291) * C50689 * C50727 +
            (C17288 + C17287 + C17286) * C50689 * C17047) *
               C50591 * C261 +
           ((C17291 + C17290 + C17289) * C50689 * C17047 +
            (C17049 * C1005 + C17241 + C17241 + C17044 * C1013 +
             C17051 * C1004 + C17242 + C17242 + C17045 * C1012 +
             C17053 * C1003 + C17243 + C17243 + C17046 * C1011) *
                C50689 * C50727) *
               C50591 * C262) *
              C263 +
          (((C17292 + C17293 + C17294) * C50689 * C17047 +
            (C17295 + C17296 + C17297) * C50689 * C50727) *
               C50591 * C261 -
           ((C17294 + C17293 + C17292) * C50689 * C50727 +
            (C17053 * C128 + C17065 + C17065 + C17046 * C142 + C17051 * C127 +
             C17066 + C17066 + C17045 * C141 + C17049 * C126 + C17067 + C17067 +
             C17044 * C140) *
                C50689 * C17047) *
               C50591 * C260 -
           ((C17053 * C1002 + C17259 + C17259 + C17046 * C1010 +
             C17051 * C1003 + C17260 + C17260 + C17045 * C1011 +
             C17049 * C1004 + C17261 + C17261 + C17044 * C1012) *
                C50689 * C50727 +
            (C17297 + C17296 + C17295) * C50689 * C17047) *
               C50591 * C262) *
              C50562)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
            C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
            C17046 * C141) *
               C50689 * C17047 +
           (C17049 * C268 + C17059 + C17059 + C17044 * C288 + C17051 * C267 +
            C17060 + C17060 + C17045 * C287 + C17053 * C266 + C17061 + C17061 +
            C17046 * C286) *
               C50689 * C50727) *
              C50591 * C50575 * C113 -
          ((C17053 * C265 + C17062 + C17062 + C17046 * C285 + C17051 * C266 +
            C17063 + C17063 + C17045 * C286 + C17049 * C267 + C17064 + C17064 +
            C17044 * C287) *
               C50689 * C50727 +
           (C17053 * C128 + C17065 + C17065 + C17046 * C142 + C17051 * C127 +
            C17066 + C17066 + C17045 * C141 + C17049 * C126 + C17067 + C17067 +
            C17044 * C140) *
               C50689 * C17047) *
              C50591 * C50575 * C114 +
          ((C17049 * C127 + C17068 + C17068 + C17044 * C141 + C17051 * C128 +
            C17069 + C17069 + C17045 * C142 + C17053 * C129 + C17070 + C17070 +
            C17046 * C143) *
               C50689 * C17047 +
           (C17049 * C266 + C17071 + C17071 + C17044 * C286 + C17051 * C265 +
            C17072 + C17072 + C17045 * C285 + C17053 * C273 + C17073 + C17073 +
            C17046 * C293) *
               C50689 * C50727) *
              C50591 * C50575 * C115 -
          ((C17053 * C561 + C17074 + C17074 + C17046 * C563 + C17051 * C273 +
            C17075 + C17075 + C17045 * C293 + C17049 * C265 + C17076 + C17076 +
            C17044 * C285) *
               C50689 * C50727 +
           (C17053 * C130 + C17077 + C17077 + C17046 * C144 + C17051 * C129 +
            C17078 + C17078 + C17045 * C143 + C17049 * C128 + C17079 + C17079 +
            C17044 * C142) *
               C50689 * C17047) *
              C50591 * C50575 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
             C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
             C17046 * C141) *
                C50689 * C17047 +
            (C17286 + C17287 + C17288) * C50689 * C50727) *
               C409 -
           ((C17053 * C807 + C17444 + C17444 + C17046 * C817 + C17051 * C806 +
             C17445 + C17445 + C17045 * C816 + C17049 * C805 + C17446 + C17446 +
             C17044 * C815) *
                C50689 * C50727 +
            (C17053 * C413 + C17447 + C17447 + C17046 * C433 + C17051 * C414 +
             C17448 + C17448 + C17045 * C434 + C17049 * C415 + C17449 + C17449 +
             C17044 * C435) *
                C50689 * C17047) *
               C410 +
           ((C17049 * C416 + C17450 + C17450 + C17044 * C436 + C17051 * C417 +
             C17451 + C17451 + C17045 * C437 + C17053 * C418 + C17452 + C17452 +
             C17046 * C438) *
                C50689 * C17047 +
            (C17049 * C1119 + C17453 + C17453 + C17044 * C1127 +
             C17051 * C1118 + C17454 + C17454 + C17045 * C1126 +
             C17053 * C1117 + C17455 + C17455 + C17046 * C1125) *
                C50689 * C50727) *
               C411) *
              C50575 * C263 +
          (((C17049 * C414 + C17456 + C17456 + C17044 * C434 + C17051 * C413 +
             C17457 + C17457 + C17045 * C433 + C17053 * C412 + C17458 + C17458 +
             C17046 * C432) *
                C50689 * C17047 +
            (C17049 * C806 + C17459 + C17459 + C17044 * C816 + C17051 * C807 +
             C17460 + C17460 + C17045 * C817 + C17053 * C808 + C17461 + C17461 +
             C17046 * C818) *
                C50689 * C50727) *
               C410 -
           ((C17294 + C17293 + C17292) * C50689 * C50727 +
            (C17053 * C128 + C17065 + C17065 + C17046 * C142 + C17051 * C127 +
             C17066 + C17066 + C17045 * C141 + C17049 * C126 + C17067 + C17067 +
             C17044 * C140) *
                C50689 * C17047) *
               C409 -
           ((C17053 * C1116 + C17462 + C17462 + C17046 * C1124 +
             C17051 * C1117 + C17463 + C17463 + C17045 * C1125 +
             C17049 * C1118 + C17464 + C17464 + C17044 * C1126) *
                C50689 * C50727 +
            (C17053 * C419 + C17465 + C17465 + C17046 * C439 + C17051 * C418 +
             C17466 + C17466 + C17045 * C438 + C17049 * C417 + C17467 + C17467 +
             C17044 * C437) *
                C50689 * C17047) *
               C411) *
              C50575 * C50562)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50689 * C19892 +
           (C19896 * C268 + C19900 + C19900 + C50526 * C288) * C50689 * C19893 +
           (C19896 * C269 + C19901 + C19901 + C50526 * C289) * C50689 * C19894 +
           (C19896 * C1005 + C19902 + C19902 + C50526 * C1013) * C50689 *
               C19895) *
              C50591 * C50575 * C113 -
          ((C19896 * C1004 + C19903 + C19903 + C50526 * C1012) * C50689 *
               C19895 +
           (C19896 * C270 + C19904 + C19904 + C50526 * C290) * C50689 * C19894 +
           (C19896 * C267 + C19905 + C19905 + C50526 * C287) * C50689 * C19893 +
           (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50689 *
               C19892) *
              C50591 * C50575 * C114 +
          ((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C50689 * C19892 +
           (C19896 * C266 + C19908 + C19908 + C50526 * C286) * C50689 * C19893 +
           (C19896 * C271 + C19909 + C19909 + C50526 * C291) * C50689 * C19894 +
           (C19896 * C1003 + C19910 + C19910 + C50526 * C1011) * C50689 *
               C19895) *
              C50591 * C50575 * C115 -
          ((C19896 * C1002 + C19911 + C19911 + C50526 * C1010) * C50689 *
               C19895 +
           (C19896 * C272 + C19912 + C19912 + C50526 * C292) * C50689 * C19894 +
           (C19896 * C265 + C19913 + C19913 + C50526 * C285) * C50689 * C19893 +
           (C19896 * C128 + C19914 + C19914 + C50526 * C142) * C50689 *
               C19892) *
              C50591 * C50575 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50689 *
                C19892 +
            C20057 * C19893 + C20058 * C19894 + C20059 * C19895) *
               C50591 * C260 -
           (C20060 * C19895 + C20059 * C19894 + C20058 * C19893 +
            C20057 * C19892) *
               C50591 * C261 +
           (C20058 * C19892 + C20059 * C19893 + C20060 * C19894 +
            (C19896 * C3441 + C20022 + C20022 + C50526 * C3445) * C50689 *
                C19895) *
               C50591 * C262) *
              C263 +
          ((C20061 * C19892 + C20062 * C19893 + C20063 * C19894 +
            C20064 * C19895) *
               C50591 * C261 -
           (C20063 * C19895 + C20062 * C19894 + C20061 * C19893 +
            (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50689 *
                C19892) *
               C50591 * C260 -
           ((C19896 * C3440 + C20032 + C20032 + C50526 * C3444) * C50689 *
                C19895 +
            C20064 * C19894 + C20063 * C19893 + C20062 * C19892) *
               C50591 * C262) *
              C50562)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50689 *
                C19892 +
            C20057 * C19893 + C20058 * C19894 + C20059 * C19895) *
               C409 -
           ((C19896 * C3143 + C20163 + C20163 + C50526 * C3149) * C50689 *
                C19895 +
            (C19896 * C1466 + C20164 + C20164 + C50526 * C1474) * C50689 *
                C19894 +
            (C19896 * C805 + C20165 + C20165 + C50526 * C815) * C50689 *
                C19893 +
            (C19896 * C415 + C20166 + C20166 + C50526 * C435) * C50689 *
                C19892) *
               C410 +
           ((C19896 * C416 + C20167 + C20167 + C50526 * C436) * C50689 *
                C19892 +
            (C19896 * C1119 + C20168 + C20168 + C50526 * C1127) * C50689 *
                C19893 +
            (C19896 * C2596 + C20169 + C20169 + C50526 * C2602) * C50689 *
                C19894 +
            (C19896 * C3607 + C20170 + C20170 + C50526 * C3611) * C50689 *
                C19895) *
               C411) *
              C50575 * C263 +
          (((C19896 * C414 + C20171 + C20171 + C50526 * C434) * C50689 *
                C19892 +
            (C19896 * C806 + C20172 + C20172 + C50526 * C816) * C50689 *
                C19893 +
            (C19896 * C1465 + C20173 + C20173 + C50526 * C1473) * C50689 *
                C19894 +
            (C19896 * C3144 + C20174 + C20174 + C50526 * C3150) * C50689 *
                C19895) *
               C410 -
           (C20063 * C19895 + C20062 * C19894 + C20061 * C19893 +
            (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50689 *
                C19892) *
               C409 -
           ((C19896 * C3606 + C20175 + C20175 + C50526 * C3610) * C50689 *
                C19895 +
            (C19896 * C2597 + C20176 + C20176 + C50526 * C2603) * C50689 *
                C19894 +
            (C19896 * C1118 + C20177 + C20177 + C50526 * C1126) * C50689 *
                C19893 +
            (C19896 * C417 + C20178 + C20178 + C50526 * C437) * C50689 *
                C19892) *
               C411) *
              C50575 * C50562)) /
            (p * q * std::sqrt(p + q));
    d2ee[138] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 +
                      C17051 * C126 + C17057 + C17057 + C17045 * C140 +
                      C17053 * C127 + C17058 + C17058 + C17046 * C141) *
                         C50689 * C17047 +
                     (C17286 + C17287 + C17288) * C50689 * C50727) *
                        C50801 -
                    ((C17053 * C807 + C17444 + C17444 + C17046 * C817 +
                      C17051 * C806 + C17445 + C17445 + C17045 * C816 +
                      C17049 * C805 + C17446 + C17446 + C17044 * C815) *
                         C50689 * C50727 +
                     (C17053 * C413 + C17447 + C17447 + C17046 * C433 +
                      C17051 * C414 + C17448 + C17448 + C17045 * C434 +
                      C17049 * C415 + C17449 + C17449 + C17044 * C435) *
                         C50689 * C17047) *
                        C50655) *
                       C50575 * C50843 +
                   (((C17049 * C414 + C17456 + C17456 + C17044 * C434 +
                      C17051 * C413 + C17457 + C17457 + C17045 * C433 +
                      C17053 * C412 + C17458 + C17458 + C17046 * C432) *
                         C50689 * C17047 +
                     (C17049 * C806 + C17459 + C17459 + C17044 * C816 +
                      C17051 * C807 + C17460 + C17460 + C17045 * C817 +
                      C17053 * C808 + C17461 + C17461 + C17046 * C818) *
                         C50689 * C50727) *
                        C50655 -
                    ((C17294 + C17293 + C17292) * C50689 * C50727 +
                     (C17053 * C128 + C17065 + C17065 + C17046 * C142 +
                      C17051 * C127 + C17066 + C17066 + C17045 * C141 +
                      C17049 * C126 + C17067 + C17067 + C17044 * C140) *
                         C50689 * C17047) *
                        C50801) *
                       C50575 * C50844 +
                   (((C17049 * C127 + C17068 + C17068 + C17044 * C141 +
                      C17051 * C128 + C17069 + C17069 + C17045 * C142 +
                      C17053 * C129 + C17070 + C17070 + C17046 * C143) *
                         C50689 * C17047 +
                     (C17629 + C17630 + C17631) * C50689 * C50727) *
                        C50801 -
                    ((C17053 * C809 + C17778 + C17778 + C17046 * C819 +
                      C17051 * C808 + C17779 + C17779 + C17045 * C818 +
                      C17049 * C807 + C17780 + C17780 + C17044 * C817) *
                         C50689 * C50727 +
                     (C17053 * C420 + C17781 + C17781 + C17046 * C440 +
                      C17051 * C412 + C17782 + C17782 + C17045 * C432 +
                      C17049 * C413 + C17783 + C17783 + C17044 * C433) *
                         C50689 * C17047) *
                        C50655) *
                       C50575 * C560)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) *
                         C50689 * C19892 +
                     C20057 * C19893 + C20058 * C19894 + C20059 * C19895) *
                        C50801 -
                    ((C19896 * C3143 + C20163 + C20163 + C50526 * C3149) *
                         C50689 * C19895 +
                     (C19896 * C1466 + C20164 + C20164 + C50526 * C1474) *
                         C50689 * C19894 +
                     (C19896 * C805 + C20165 + C20165 + C50526 * C815) *
                         C50689 * C19893 +
                     (C19896 * C415 + C20166 + C20166 + C50526 * C435) *
                         C50689 * C19892) *
                        C50655) *
                       C50575 * C50843 +
                   (((C19896 * C414 + C20171 + C20171 + C50526 * C434) *
                         C50689 * C19892 +
                     (C19896 * C806 + C20172 + C20172 + C50526 * C816) *
                         C50689 * C19893 +
                     (C19896 * C1465 + C20173 + C20173 + C50526 * C1473) *
                         C50689 * C19894 +
                     (C19896 * C3144 + C20174 + C20174 + C50526 * C3150) *
                         C50689 * C19895) *
                        C50655 -
                    (C20063 * C19895 + C20062 * C19894 + C20061 * C19893 +
                     (C19896 * C126 + C19906 + C19906 + C50526 * C140) *
                         C50689 * C19892) *
                        C50801) *
                       C50575 * C50844 +
                   (((C19896 * C127 + C19907 + C19907 + C50526 * C141) *
                         C50689 * C19892 +
                     C20293 * C19893 + C20294 * C19894 + C20295 * C19895) *
                        C50801 -
                    ((C19896 * C3145 + C20394 + C20394 + C50526 * C3151) *
                         C50689 * C19895 +
                     (C19896 * C1464 + C20395 + C20395 + C50526 * C1472) *
                         C50689 * C19894 +
                     (C19896 * C807 + C20396 + C20396 + C50526 * C817) *
                         C50689 * C19893 +
                     (C19896 * C413 + C20397 + C20397 + C50526 * C433) *
                         C50689 * C19892) *
                        C50655) *
                       C50575 * C560)) /
                     (p * q * std::sqrt(p + q));
    d2ee[139] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
            C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
            C17046 * C141) *
               C50689 * C17047 +
           (C17049 * C268 + C17059 + C17059 + C17044 * C288 + C17051 * C267 +
            C17060 + C17060 + C17045 * C287 + C17053 * C266 + C17061 + C17061 +
            C17046 * C286) *
               C50689 * C50727) *
              C50591 * C50575 * C113 -
          ((C17053 * C265 + C17062 + C17062 + C17046 * C285 + C17051 * C266 +
            C17063 + C17063 + C17045 * C286 + C17049 * C267 + C17064 + C17064 +
            C17044 * C287) *
               C50689 * C50727 +
           (C17053 * C128 + C17065 + C17065 + C17046 * C142 + C17051 * C127 +
            C17066 + C17066 + C17045 * C141 + C17049 * C126 + C17067 + C17067 +
            C17044 * C140) *
               C50689 * C17047) *
              C50591 * C50575 * C114 +
          ((C17049 * C127 + C17068 + C17068 + C17044 * C141 + C17051 * C128 +
            C17069 + C17069 + C17045 * C142 + C17053 * C129 + C17070 + C17070 +
            C17046 * C143) *
               C50689 * C17047 +
           (C17049 * C266 + C17071 + C17071 + C17044 * C286 + C17051 * C265 +
            C17072 + C17072 + C17045 * C285 + C17053 * C273 + C17073 + C17073 +
            C17046 * C293) *
               C50689 * C50727) *
              C50591 * C50575 * C115 -
          ((C17053 * C561 + C17074 + C17074 + C17046 * C563 + C17051 * C273 +
            C17075 + C17075 + C17045 * C293 + C17049 * C265 + C17076 + C17076 +
            C17044 * C285) *
               C50689 * C50727 +
           (C17053 * C130 + C17077 + C17077 + C17046 * C144 + C17051 * C129 +
            C17078 + C17078 + C17045 * C143 + C17049 * C128 + C17079 + C17079 +
            C17044 * C142) *
               C50689 * C17047) *
              C50591 * C50575 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
             C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
             C17046 * C141) *
                C50689 * C17047 +
            (C17286 + C17287 + C17288) * C50689 * C50727) *
               C50591 * C260 -
           ((C17289 + C17290 + C17291) * C50689 * C50727 +
            (C17288 + C17287 + C17286) * C50689 * C17047) *
               C50591 * C261 +
           ((C17291 + C17290 + C17289) * C50689 * C17047 +
            (C17049 * C1005 + C17241 + C17241 + C17044 * C1013 +
             C17051 * C1004 + C17242 + C17242 + C17045 * C1012 +
             C17053 * C1003 + C17243 + C17243 + C17046 * C1011) *
                C50689 * C50727) *
               C50591 * C262) *
              C263 +
          (((C17292 + C17293 + C17294) * C50689 * C17047 +
            (C17295 + C17296 + C17297) * C50689 * C50727) *
               C50591 * C261 -
           ((C17294 + C17293 + C17292) * C50689 * C50727 +
            (C17053 * C128 + C17065 + C17065 + C17046 * C142 + C17051 * C127 +
             C17066 + C17066 + C17045 * C141 + C17049 * C126 + C17067 + C17067 +
             C17044 * C140) *
                C50689 * C17047) *
               C50591 * C260 -
           ((C17053 * C1002 + C17259 + C17259 + C17046 * C1010 +
             C17051 * C1003 + C17260 + C17260 + C17045 * C1011 +
             C17049 * C1004 + C17261 + C17261 + C17044 * C1012) *
                C50689 * C50727 +
            (C17297 + C17296 + C17295) * C50689 * C17047) *
               C50591 * C262) *
              C50562)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50689 * C19892 +
           (C19896 * C268 + C19900 + C19900 + C50526 * C288) * C50689 * C19893 +
           (C19896 * C269 + C19901 + C19901 + C50526 * C289) * C50689 * C19894 +
           (C19896 * C1005 + C19902 + C19902 + C50526 * C1013) * C50689 *
               C19895) *
              C50591 * C50575 * C113 -
          ((C19896 * C1004 + C19903 + C19903 + C50526 * C1012) * C50689 *
               C19895 +
           (C19896 * C270 + C19904 + C19904 + C50526 * C290) * C50689 * C19894 +
           (C19896 * C267 + C19905 + C19905 + C50526 * C287) * C50689 * C19893 +
           (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50689 *
               C19892) *
              C50591 * C50575 * C114 +
          ((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C50689 * C19892 +
           (C19896 * C266 + C19908 + C19908 + C50526 * C286) * C50689 * C19893 +
           (C19896 * C271 + C19909 + C19909 + C50526 * C291) * C50689 * C19894 +
           (C19896 * C1003 + C19910 + C19910 + C50526 * C1011) * C50689 *
               C19895) *
              C50591 * C50575 * C115 -
          ((C19896 * C1002 + C19911 + C19911 + C50526 * C1010) * C50689 *
               C19895 +
           (C19896 * C272 + C19912 + C19912 + C50526 * C292) * C50689 * C19894 +
           (C19896 * C265 + C19913 + C19913 + C50526 * C285) * C50689 * C19893 +
           (C19896 * C128 + C19914 + C19914 + C50526 * C142) * C50689 *
               C19892) *
              C50591 * C50575 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50689 *
                C19892 +
            C20057 * C19893 + C20058 * C19894 + C20059 * C19895) *
               C50591 * C260 -
           (C20060 * C19895 + C20059 * C19894 + C20058 * C19893 +
            C20057 * C19892) *
               C50591 * C261 +
           (C20058 * C19892 + C20059 * C19893 + C20060 * C19894 +
            (C19896 * C3441 + C20022 + C20022 + C50526 * C3445) * C50689 *
                C19895) *
               C50591 * C262) *
              C263 +
          ((C20061 * C19892 + C20062 * C19893 + C20063 * C19894 +
            C20064 * C19895) *
               C50591 * C261 -
           (C20063 * C19895 + C20062 * C19894 + C20061 * C19893 +
            (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50689 *
                C19892) *
               C50591 * C260 -
           ((C19896 * C3440 + C20032 + C20032 + C50526 * C3444) * C50689 *
                C19895 +
            C20064 * C19894 + C20063 * C19893 + C20062 * C19892) *
               C50591 * C262) *
              C50562)) /
            (p * q * std::sqrt(p + q));
    d2ee[140] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 +
                      C17051 * C126 + C17057 + C17057 + C17045 * C140 +
                      C17053 * C127 + C17058 + C17058 + C17046 * C141) *
                         C50689 * C17047 +
                     (C17286 + C17287 + C17288) * C50689 * C50727) *
                        C50591 * C50845 -
                    ((C17289 + C17290 + C17291) * C50689 * C50727 +
                     (C17288 + C17287 + C17286) * C50689 * C17047) *
                        C50591 * C50846 +
                    ((C17291 + C17290 + C17289) * C50689 * C17047 +
                     (C18273 + C18274 + C18275) * C50689 * C50727) *
                        C50591 * C1232) *
                       C50792 +
                   (((C17292 + C17293 + C17294) * C50689 * C17047 +
                     (C17295 + C17296 + C17297) * C50689 * C50727) *
                        C50591 * C50846 -
                    ((C17294 + C17293 + C17292) * C50689 * C50727 +
                     (C17053 * C128 + C17065 + C17065 + C17046 * C142 +
                      C17051 * C127 + C17066 + C17066 + C17045 * C141 +
                      C17049 * C126 + C17067 + C17067 + C17044 * C140) *
                         C50689 * C17047) *
                        C50591 * C50845 -
                    ((C17053 * C1002 + C17259 + C17259 + C17046 * C1010 +
                      C17051 * C1003 + C17260 + C17260 + C17045 * C1011 +
                      C17049 * C1004 + C17261 + C17261 + C17044 * C1012) *
                         C50689 * C50727 +
                     (C17297 + C17296 + C17295) * C50689 * C17047) *
                        C50591 * C1232) *
                       C50562)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) *
                         C50689 * C19892 +
                     C20057 * C19893 + C20058 * C19894 + C20059 * C19895) *
                        C50591 * C50845 -
                    (C20060 * C19895 + C20059 * C19894 + C20058 * C19893 +
                     C20057 * C19892) *
                        C50591 * C50846 +
                    (C20058 * C19892 + C20059 * C19893 + C20060 * C19894 +
                     C20739 * C19895) *
                        C50591 * C1232) *
                       C50792 +
                   ((C20061 * C19892 + C20062 * C19893 + C20063 * C19894 +
                     C20064 * C19895) *
                        C50591 * C50846 -
                    (C20063 * C19895 + C20062 * C19894 + C20061 * C19893 +
                     (C19896 * C126 + C19906 + C19906 + C50526 * C140) *
                         C50689 * C19892) *
                        C50591 * C50845 -
                    ((C19896 * C3440 + C20032 + C20032 + C50526 * C3444) *
                         C50689 * C19895 +
                     C20064 * C19894 + C20063 * C19893 + C20062 * C19892) *
                        C50591 * C1232) *
                       C50562)) /
                     (p * q * std::sqrt(p + q));
    d2ee[141] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 +
                      C17051 * C126 + C17057 + C17057 + C17045 * C140 +
                      C17053 * C127 + C17058 + C17058 + C17046 * C141) *
                         C50689 * C17047 +
                     (C17286 + C17287 + C17288) * C50689 * C50727) *
                        C50801 -
                    ((C18008 + C18009 + C18010) * C50689 * C50727 +
                     (C17053 * C413 + C17447 + C17447 + C17046 * C433 +
                      C17051 * C414 + C17448 + C17448 + C17045 * C434 +
                      C17049 * C415 + C17449 + C17449 + C17044 * C435) *
                         C50689 * C17047) *
                        C50655) *
                       C50845 +
                   (((C18010 + C18009 + C18008) * C50689 * C17047 +
                     (C18941 + C18942 + C18943) * C50689 * C50727) *
                        C50655 -
                    ((C17289 + C17290 + C17291) * C50689 * C50727 +
                     (C17288 + C17287 + C17286) * C50689 * C17047) *
                        C50801) *
                       C50846 +
                   (((C17291 + C17290 + C17289) * C50689 * C17047 +
                     (C18273 + C18274 + C18275) * C50689 * C50727) *
                        C50801 -
                    ((C17053 * C3145 + C18932 + C18932 + C17046 * C3151 +
                      C17051 * C3144 + C18933 + C18933 + C17045 * C3150 +
                      C17049 * C3143 + C18934 + C18934 + C17044 * C3149) *
                         C50689 * C50727 +
                     (C18943 + C18942 + C18941) * C50689 * C17047) *
                        C50655) *
                       C1232) *
                  C50556) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) *
                         C50689 * C19892 +
                     C20057 * C19893 + C20058 * C19894 + C20059 * C19895) *
                        C50801 -
                    (C20560 * C19895 + C20561 * C19894 + C20562 * C19893 +
                     (C19896 * C415 + C20166 + C20166 + C50526 * C435) *
                         C50689 * C19892) *
                        C50655) *
                       C50845 +
                   ((C20562 * C19892 + C20561 * C19893 + C20560 * C19894 +
                     C21195 * C19895) *
                        C50655 -
                    (C20060 * C19895 + C20059 * C19894 + C20058 * C19893 +
                     C20057 * C19892) *
                        C50801) *
                       C50846 +
                   ((C20058 * C19892 + C20059 * C19893 + C20060 * C19894 +
                     C20739 * C19895) *
                        C50801 -
                    ((C19896 * C21185 + C21191 + C21191 + C50526 * C21187) *
                         C50689 * C19895 +
                     C21195 * C19894 + C20560 * C19893 + C20561 * C19892) *
                        C50655) *
                       C1232) *
                  C50556) /
                     (p * q * std::sqrt(p + q));
    d2ee[142] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
            C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
            C17046 * C141) *
               C50689 * C17047 +
           (C17286 + C17287 + C17288) * C50689 * C50727) *
              C50591 * C997 -
          ((C17289 + C17290 + C17291) * C50689 * C50727 +
           (C17288 + C17287 + C17286) * C50689 * C17047) *
              C50591 * C998 +
          ((C17291 + C17290 + C17289) * C50689 * C17047 +
           (C18273 + C18274 + C18275) * C50689 * C50727) *
              C50591 * C999 -
          ((C17053 * C2371 + C18264 + C18264 + C17046 * C2377 + C17051 * C2370 +
            C18265 + C18265 + C17045 * C2376 + C17049 * C2369 + C18266 +
            C18266 + C17044 * C2375) *
               C50689 * C50727 +
           (C18275 + C18274 + C18273) * C50689 * C17047) *
              C50591 * C1000) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
             C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
             C17046 * C141) *
                C50689 * C17047 +
            (C17286 + C17287 + C17288) * C50689 * C50727) *
               C50591 * C926 -
           ((C17289 + C17290 + C17291) * C50689 * C50727 +
            (C17288 + C17287 + C17286) * C50689 * C17047) *
               C50591 * C50627) *
              C928 +
          (((C17292 + C17293 + C17294) * C50689 * C17047 +
            (C17295 + C17296 + C17297) * C50689 * C50727) *
               C50591 * C50627 -
           ((C17294 + C17293 + C17292) * C50689 * C50727 +
            (C17053 * C128 + C17065 + C17065 + C17046 * C142 + C17051 * C127 +
             C17066 + C17066 + C17045 * C141 + C17049 * C126 + C17067 + C17067 +
             C17044 * C140) *
                C50689 * C17047) *
               C50591 * C926) *
              C929 +
          (((C17049 * C127 + C17068 + C17068 + C17044 * C141 + C17051 * C128 +
             C17069 + C17069 + C17045 * C142 + C17053 * C129 + C17070 + C17070 +
             C17046 * C143) *
                C50689 * C17047 +
            (C17629 + C17630 + C17631) * C50689 * C50727) *
               C50591 * C926 -
           ((C17053 * C274 + C17620 + C17620 + C17046 * C294 + C17051 * C272 +
             C17621 + C17621 + C17045 * C292 + C17049 * C271 + C17622 + C17622 +
             C17044 * C291) *
                C50689 * C50727 +
            (C17631 + C17630 + C17629) * C50689 * C17047) *
               C50591 * C50627) *
              C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
             C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
             C17046 * C141) *
                C50689 * C17047 +
            (C17286 + C17287 + C17288) * C50689 * C50727) *
               C409 -
           ((C18008 + C18009 + C18010) * C50689 * C50727 +
            (C17053 * C413 + C17447 + C17447 + C17046 * C433 + C17051 * C414 +
             C17448 + C17448 + C17045 * C434 + C17049 * C415 + C17449 + C17449 +
             C17044 * C435) *
                C50689 * C17047) *
               C410 +
           ((C17049 * C416 + C17450 + C17450 + C17044 * C436 + C17051 * C417 +
             C17451 + C17451 + C17045 * C437 + C17053 * C418 + C17452 + C17452 +
             C17046 * C438) *
                C50689 * C17047 +
            (C18437 + C18438 + C18439) * C50689 * C50727) *
               C411) *
              C926 +
          (((C18010 + C18009 + C18008) * C50689 * C17047 +
            (C17049 * C1466 + C17984 + C17984 + C17044 * C1474 +
             C17051 * C1465 + C17985 + C17985 + C17045 * C1473 +
             C17053 * C1464 + C17986 + C17986 + C17046 * C1472) *
                C50689 * C50727) *
               C410 -
           ((C17289 + C17290 + C17291) * C50689 * C50727 +
            (C17288 + C17287 + C17286) * C50689 * C17047) *
               C409 -
           ((C17053 * C2598 + C18428 + C18428 + C17046 * C2604 +
             C17051 * C2597 + C18429 + C18429 + C17045 * C2603 +
             C17049 * C2596 + C18430 + C18430 + C17044 * C2602) *
                C50689 * C50727 +
            (C18439 + C18438 + C18437) * C50689 * C17047) *
               C411) *
              C50627) *
         C50556) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50689 *
                C19892 +
            C20057 * C19893 + C20058 * C19894 + C20059 * C19895) *
               C50591 * C926 -
           (C20060 * C19895 + C20059 * C19894 + C20058 * C19893 +
            C20057 * C19892) *
               C50591 * C50627) *
              C928 +
          ((C20061 * C19892 + C20062 * C19893 + C20063 * C19894 +
            C20064 * C19895) *
               C50591 * C50627 -
           (C20063 * C19895 + C20062 * C19894 + C20061 * C19893 +
            (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50689 *
                C19892) *
               C50591 * C926) *
              C929 +
          (((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C50689 *
                C19892 +
            C20293 * C19893 + C20294 * C19894 + C20295 * C19895) *
               C50591 * C926 -
           ((C19896 * C2371 + C20283 + C20283 + C50526 * C2377) * C50689 *
                C19895 +
            C20295 * C19894 + C20294 * C19893 + C20293 * C19892) *
               C50591 * C50627) *
              C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50689 * C19892 +
           C20057 * C19893 + C20058 * C19894 + C20059 * C19895) *
              C50591 * C997 -
          (C20060 * C19895 + C20059 * C19894 + C20058 * C19893 +
           C20057 * C19892) *
              C50591 * C998 +
          (C20058 * C19892 + C20059 * C19893 + C20060 * C19894 +
           C20739 * C19895) *
              C50591 * C999 -
          ((C19896 * C20729 + C20735 + C20735 + C50526 * C20731) * C50689 *
               C19895 +
           C20739 * C19894 + C20060 * C19893 + C20059 * C19892) *
              C50591 * C1000) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50689 *
                C19892 +
            C20057 * C19893 + C20058 * C19894 + C20059 * C19895) *
               C409 -
           (C20560 * C19895 + C20561 * C19894 + C20562 * C19893 +
            (C19896 * C415 + C20166 + C20166 + C50526 * C435) * C50689 *
                C19892) *
               C410 +
           ((C19896 * C416 + C20167 + C20167 + C50526 * C436) * C50689 *
                C19892 +
            C20857 * C19893 + C20858 * C19894 + C20859 * C19895) *
               C411) *
              C926 +
          ((C20562 * C19892 + C20561 * C19893 + C20560 * C19894 +
            (C19896 * C4121 + C20534 + C20534 + C50526 * C4125) * C50689 *
                C19895) *
               C410 -
           (C20060 * C19895 + C20059 * C19894 + C20058 * C19893 +
            C20057 * C19892) *
               C409 -
           ((C19896 * C20837 + C20847 + C20847 + C50526 * C20839) * C50689 *
                C19895 +
            C20859 * C19894 + C20858 * C19893 + C20857 * C19892) *
               C411) *
              C50627) *
         C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[143] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C17049 * C125 + C17056 + C17056 + C17044 * C139 +
                       C17051 * C126 + C17057 + C17057 + C17045 * C140 +
                       C17053 * C127 + C17058 + C17058 + C17046 * C141) *
                          C50689 * C17047 +
                      (C17286 + C17287 + C17288) * C50689 * C50727) *
                         C50801 -
                     ((C18008 + C18009 + C18010) * C50689 * C50727 +
                      (C17053 * C413 + C17447 + C17447 + C17046 * C433 +
                       C17051 * C414 + C17448 + C17448 + C17045 * C434 +
                       C17049 * C415 + C17449 + C17449 + C17044 * C435) *
                          C50689 * C17047) *
                         C50655) *
                        C926 +
                    (((C18010 + C18009 + C18008) * C50689 * C17047 +
                      (C17049 * C1466 + C17984 + C17984 + C17044 * C1474 +
                       C17051 * C1465 + C17985 + C17985 + C17045 * C1473 +
                       C17053 * C1464 + C17986 + C17986 + C17046 * C1472) *
                          C50689 * C50727) *
                         C50655 -
                     ((C17289 + C17290 + C17291) * C50689 * C50727 +
                      (C17288 + C17287 + C17286) * C50689 * C17047) *
                         C50801) *
                        C50627) *
                       C50792 +
                   ((((C17049 * C414 + C17456 + C17456 + C17044 * C434 +
                       C17051 * C413 + C17457 + C17457 + C17045 * C433 +
                       C17053 * C412 + C17458 + C17458 + C17046 * C432) *
                          C50689 * C17047 +
                      (C18011 + C18012 + C18013) * C50689 * C50727) *
                         C50655 -
                     ((C17294 + C17293 + C17292) * C50689 * C50727 +
                      (C17053 * C128 + C17065 + C17065 + C17046 * C142 +
                       C17051 * C127 + C17066 + C17066 + C17045 * C141 +
                       C17049 * C126 + C17067 + C17067 + C17044 * C140) *
                          C50689 * C17047) *
                         C50801) *
                        C926 +
                    (((C17292 + C17293 + C17294) * C50689 * C17047 +
                      (C17295 + C17296 + C17297) * C50689 * C50727) *
                         C50801 -
                     ((C17053 * C1463 + C17993 + C17993 + C17046 * C1471 +
                       C17051 * C1464 + C17994 + C17994 + C17045 * C1472 +
                       C17049 * C1465 + C17995 + C17995 + C17044 * C1473) *
                          C50689 * C50727 +
                      (C18013 + C18012 + C18011) * C50689 * C17047) *
                         C50655) *
                        C50627) *
                       C50562)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) *
                          C50689 * C19892 +
                      C20057 * C19893 + C20058 * C19894 + C20059 * C19895) *
                         C50801 -
                     (C20560 * C19895 + C20561 * C19894 + C20562 * C19893 +
                      (C19896 * C415 + C20166 + C20166 + C50526 * C435) *
                          C50689 * C19892) *
                         C50655) *
                        C926 +
                    ((C20562 * C19892 + C20561 * C19893 + C20560 * C19894 +
                      (C19896 * C4121 + C20534 + C20534 + C50526 * C4125) *
                          C50689 * C19895) *
                         C50655 -
                     (C20060 * C19895 + C20059 * C19894 + C20058 * C19893 +
                      C20057 * C19892) *
                         C50801) *
                        C50627) *
                       C50792 +
                   ((((C19896 * C414 + C20171 + C20171 + C50526 * C434) *
                          C50689 * C19892 +
                      C20563 * C19893 + C20564 * C19894 + C20565 * C19895) *
                         C50655 -
                     (C20063 * C19895 + C20062 * C19894 + C20061 * C19893 +
                      (C19896 * C126 + C19906 + C19906 + C50526 * C140) *
                          C50689 * C19892) *
                         C50801) *
                        C926 +
                    ((C20061 * C19892 + C20062 * C19893 + C20063 * C19894 +
                      C20064 * C19895) *
                         C50801 -
                     ((C19896 * C4120 + C20541 + C20541 + C50526 * C4124) *
                          C50689 * C19895 +
                      C20565 * C19894 + C20564 * C19893 + C20563 * C19892) *
                         C50655) *
                        C50627) *
                       C50562)) /
                     (p * q * std::sqrt(p + q));
    d2ee[144] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
             C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
             C17046 * C141) *
                C50689 * C17047 +
            (C17286 + C17287 + C17288) * C50689 * C50727) *
               C50591 * C926 -
           ((C17289 + C17290 + C17291) * C50689 * C50727 +
            (C17288 + C17287 + C17286) * C50689 * C17047) *
               C50591 * C50627) *
              C928 +
          (((C17292 + C17293 + C17294) * C50689 * C17047 +
            (C17295 + C17296 + C17297) * C50689 * C50727) *
               C50591 * C50627 -
           ((C17294 + C17293 + C17292) * C50689 * C50727 +
            (C17053 * C128 + C17065 + C17065 + C17046 * C142 + C17051 * C127 +
             C17066 + C17066 + C17045 * C141 + C17049 * C126 + C17067 + C17067 +
             C17044 * C140) *
                C50689 * C17047) *
               C50591 * C926) *
              C929 +
          (((C17049 * C127 + C17068 + C17068 + C17044 * C141 + C17051 * C128 +
             C17069 + C17069 + C17045 * C142 + C17053 * C129 + C17070 + C17070 +
             C17046 * C143) *
                C50689 * C17047 +
            (C17629 + C17630 + C17631) * C50689 * C50727) *
               C50591 * C926 -
           ((C17053 * C274 + C17620 + C17620 + C17046 * C294 + C17051 * C272 +
             C17621 + C17621 + C17045 * C292 + C17049 * C271 + C17622 + C17622 +
             C17044 * C291) *
                C50689 * C50727 +
            (C17631 + C17630 + C17629) * C50689 * C17047) *
               C50591 * C50627) *
              C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
            C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
            C17046 * C141) *
               C50689 * C17047 +
           (C17286 + C17287 + C17288) * C50689 * C50727) *
              C50591 * C997 -
          ((C17289 + C17290 + C17291) * C50689 * C50727 +
           (C17288 + C17287 + C17286) * C50689 * C17047) *
              C50591 * C998 +
          ((C17291 + C17290 + C17289) * C50689 * C17047 +
           (C18273 + C18274 + C18275) * C50689 * C50727) *
              C50591 * C999 -
          ((C17053 * C2371 + C18264 + C18264 + C17046 * C2377 + C17051 * C2370 +
            C18265 + C18265 + C17045 * C2376 + C17049 * C2369 + C18266 +
            C18266 + C17044 * C2375) *
               C50689 * C50727 +
           (C18275 + C18274 + C18273) * C50689 * C17047) *
              C50591 * C1000) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50689 *
                C19892 +
            C20057 * C19893 + C20058 * C19894 + C20059 * C19895) *
               C50591 * C926 -
           (C20060 * C19895 + C20059 * C19894 + C20058 * C19893 +
            C20057 * C19892) *
               C50591 * C50627) *
              C928 +
          ((C20061 * C19892 + C20062 * C19893 + C20063 * C19894 +
            C20064 * C19895) *
               C50591 * C50627 -
           (C20063 * C19895 + C20062 * C19894 + C20061 * C19893 +
            (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50689 *
                C19892) *
               C50591 * C926) *
              C929 +
          (((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C50689 *
                C19892 +
            C20293 * C19893 + C20294 * C19894 + C20295 * C19895) *
               C50591 * C926 -
           ((C19896 * C2371 + C20283 + C20283 + C50526 * C2377) * C50689 *
                C19895 +
            C20295 * C19894 + C20294 * C19893 + C20293 * C19892) *
               C50591 * C50627) *
              C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50689 * C19892 +
           C20057 * C19893 + C20058 * C19894 + C20059 * C19895) *
              C50591 * C997 -
          (C20060 * C19895 + C20059 * C19894 + C20058 * C19893 +
           C20057 * C19892) *
              C50591 * C998 +
          (C20058 * C19892 + C20059 * C19893 + C20060 * C19894 +
           C20739 * C19895) *
              C50591 * C999 -
          ((C19896 * C20729 + C20735 + C20735 + C50526 * C20731) * C50689 *
               C19895 +
           C20739 * C19894 + C20060 * C19893 + C20059 * C19892) *
              C50591 * C1000) *
         C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[145] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C17049 * C125 + C17056 + C17056 + C17044 * C139 +
                       C17051 * C126 + C17057 + C17057 + C17045 * C140 +
                       C17053 * C127 + C17058 + C17058 + C17046 * C141) *
                          C50689 * C17047 +
                      (C17286 + C17287 + C17288) * C50689 * C50727) *
                         C1577 -
                     ((C18008 + C18009 + C18010) * C50689 * C50727 +
                      (C17053 * C413 + C17447 + C17447 + C17046 * C433 +
                       C17051 * C414 + C17448 + C17448 + C17045 * C434 +
                       C17049 * C415 + C17449 + C17449 + C17044 * C435) *
                          C50689 * C17047) *
                         C50655) *
                        C50800 +
                    (((C18010 + C18009 + C18008) * C50689 * C17047 +
                      (C18941 + C18942 + C18943) * C50689 * C50727) *
                         C50655 -
                     ((C17289 + C17290 + C17291) * C50689 * C50727 +
                      (C17288 + C17287 + C17286) * C50689 * C17047) *
                         C1577) *
                        C50627) *
                       C50792 +
                   ((((C17049 * C414 + C17456 + C17456 + C17044 * C434 +
                       C17051 * C413 + C17457 + C17457 + C17045 * C433 +
                       C17053 * C412 + C17458 + C17458 + C17046 * C432) *
                          C50689 * C17047 +
                      (C18011 + C18012 + C18013) * C50689 * C50727) *
                         C50655 -
                     ((C17294 + C17293 + C17292) * C50689 * C50727 +
                      (C17053 * C128 + C17065 + C17065 + C17046 * C142 +
                       C17051 * C127 + C17066 + C17066 + C17045 * C141 +
                       C17049 * C126 + C17067 + C17067 + C17044 * C140) *
                          C50689 * C17047) *
                         C1577) *
                        C50800 +
                    (((C17292 + C17293 + C17294) * C50689 * C17047 +
                      (C17295 + C17296 + C17297) * C50689 * C50727) *
                         C1577 -
                     ((C17053 * C1463 + C17993 + C17993 + C17046 * C1471 +
                       C17051 * C1464 + C17994 + C17994 + C17045 * C1472 +
                       C17049 * C1465 + C17995 + C17995 + C17044 * C1473) *
                          C50689 * C50727 +
                      (C18013 + C18012 + C18011) * C50689 * C17047) *
                         C50655) *
                        C50627) *
                       C50562)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) *
                          C50689 * C19892 +
                      C20057 * C19893 + C20058 * C19894 + C20059 * C19895) *
                         C1577 -
                     (C20560 * C19895 + C20561 * C19894 + C20562 * C19893 +
                      (C19896 * C415 + C20166 + C20166 + C50526 * C435) *
                          C50689 * C19892) *
                         C50655) *
                        C50800 +
                    ((C20562 * C19892 + C20561 * C19893 + C20560 * C19894 +
                      C21195 * C19895) *
                         C50655 -
                     (C20060 * C19895 + C20059 * C19894 + C20058 * C19893 +
                      C20057 * C19892) *
                         C1577) *
                        C50627) *
                       C50792 +
                   ((((C19896 * C414 + C20171 + C20171 + C50526 * C434) *
                          C50689 * C19892 +
                      C20563 * C19893 + C20564 * C19894 + C20565 * C19895) *
                         C50655 -
                     (C20063 * C19895 + C20062 * C19894 + C20061 * C19893 +
                      (C19896 * C126 + C19906 + C19906 + C50526 * C140) *
                          C50689 * C19892) *
                         C1577) *
                        C50800 +
                    ((C20061 * C19892 + C20062 * C19893 + C20063 * C19894 +
                      C20064 * C19895) *
                         C1577 -
                     ((C19896 * C4120 + C20541 + C20541 + C50526 * C4124) *
                          C50689 * C19895 +
                      C20565 * C19894 + C20564 * C19893 + C20563 * C19892) *
                         C50655) *
                        C50627) *
                       C50562)) /
                     (p * q * std::sqrt(p + q));
    d2ee[146] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 +
                      C17051 * C126 + C17057 + C17057 + C17045 * C140 +
                      C17053 * C127 + C17058 + C17058 + C17046 * C141) *
                         C50689 * C17047 +
                     (C17286 + C17287 + C17288) * C50689 * C50727) *
                        C50847 -
                    ((C18008 + C18009 + C18010) * C50689 * C50727 +
                     (C17053 * C413 + C17447 + C17447 + C17046 * C433 +
                      C17051 * C414 + C17448 + C17448 + C17045 * C434 +
                      C17049 * C415 + C17449 + C17449 + C17044 * C435) *
                         C50689 * C17047) *
                        C50848 +
                    ((C17049 * C416 + C17450 + C17450 + C17044 * C436 +
                      C17051 * C417 + C17451 + C17451 + C17045 * C437 +
                      C17053 * C418 + C17452 + C17452 + C17046 * C438) *
                         C50689 * C17047 +
                     (C18437 + C18438 + C18439) * C50689 * C50727) *
                        C1993) *
                       C50800 +
                   (((C18010 + C18009 + C18008) * C50689 * C17047 +
                     (C18941 + C18942 + C18943) * C50689 * C50727) *
                        C50848 -
                    ((C17289 + C17290 + C17291) * C50689 * C50727 +
                     (C17288 + C17287 + C17286) * C50689 * C17047) *
                        C50847 -
                    ((C17053 * C2598 + C18428 + C18428 + C17046 * C2604 +
                      C17051 * C2597 + C18429 + C18429 + C17045 * C2603 +
                      C17049 * C2596 + C18430 + C18430 + C17044 * C2602) *
                         C50689 * C50727 +
                     (C18439 + C18438 + C18437) * C50689 * C17047) *
                        C1993) *
                       C50627) *
                  C50556) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) *
                         C50689 * C19892 +
                     C20057 * C19893 + C20058 * C19894 + C20059 * C19895) *
                        C50847 -
                    (C20560 * C19895 + C20561 * C19894 + C20562 * C19893 +
                     (C19896 * C415 + C20166 + C20166 + C50526 * C435) *
                         C50689 * C19892) *
                        C50848 +
                    ((C19896 * C416 + C20167 + C20167 + C50526 * C436) *
                         C50689 * C19892 +
                     C20857 * C19893 + C20858 * C19894 + C20859 * C19895) *
                        C1993) *
                       C50800 +
                   ((C20562 * C19892 + C20561 * C19893 + C20560 * C19894 +
                     C21195 * C19895) *
                        C50848 -
                    (C20060 * C19895 + C20059 * C19894 + C20058 * C19893 +
                     C20057 * C19892) *
                        C50847 -
                    ((C19896 * C20837 + C20847 + C20847 + C50526 * C20839) *
                         C50689 * C19895 +
                     C20859 * C19894 + C20858 * C19893 + C20857 * C19892) *
                        C1993) *
                       C50627) *
                  C50556) /
                     (p * q * std::sqrt(p + q));
    d2ee[147] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
             C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
             C17046 * C141) *
                C50689 * C17047 +
            (C17286 + C17287 + C17288) * C50689 * C50727) *
               C1577 -
           ((C18008 + C18009 + C18010) * C50689 * C50727 +
            (C17053 * C413 + C17447 + C17447 + C17046 * C433 + C17051 * C414 +
             C17448 + C17448 + C17045 * C434 + C17049 * C415 + C17449 + C17449 +
             C17044 * C435) *
                C50689 * C17047) *
               C50655) *
              C260 +
          (((C18010 + C18009 + C18008) * C50689 * C17047 +
            (C18941 + C18942 + C18943) * C50689 * C50727) *
               C50655 -
           ((C17289 + C17290 + C17291) * C50689 * C50727 +
            (C17288 + C17287 + C17286) * C50689 * C17047) *
               C1577) *
              C261 +
          (((C17291 + C17290 + C17289) * C50689 * C17047 +
            (C18273 + C18274 + C18275) * C50689 * C50727) *
               C1577 -
           ((C17053 * C3145 + C18932 + C18932 + C17046 * C3151 +
             C17051 * C3144 + C18933 + C18933 + C17045 * C3150 +
             C17049 * C3143 + C18934 + C18934 + C17044 * C3149) *
                C50689 * C50727 +
            (C18943 + C18942 + C18941) * C50689 * C17047) *
               C50655) *
              C262) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
             C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
             C17046 * C141) *
                C50689 * C17047 +
            (C17286 + C17287 + C17288) * C50689 * C50727) *
               C1577 -
           ((C18008 + C18009 + C18010) * C50689 * C50727 +
            (C17053 * C413 + C17447 + C17447 + C17046 * C433 + C17051 * C414 +
             C17448 + C17448 + C17045 * C434 + C17049 * C415 + C17449 + C17449 +
             C17044 * C435) *
                C50689 * C17047) *
               C50655) *
              C50575 * C928 +
          (((C17049 * C414 + C17456 + C17456 + C17044 * C434 + C17051 * C413 +
             C17457 + C17457 + C17045 * C433 + C17053 * C412 + C17458 + C17458 +
             C17046 * C432) *
                C50689 * C17047 +
            (C18011 + C18012 + C18013) * C50689 * C50727) *
               C50655 -
           ((C17294 + C17293 + C17292) * C50689 * C50727 +
            (C17053 * C128 + C17065 + C17065 + C17046 * C142 + C17051 * C127 +
             C17066 + C17066 + C17045 * C141 + C17049 * C126 + C17067 + C17067 +
             C17044 * C140) *
                C50689 * C17047) *
               C1577) *
              C50575 * C929 +
          (((C17049 * C127 + C17068 + C17068 + C17044 * C141 + C17051 * C128 +
             C17069 + C17069 + C17045 * C142 + C17053 * C129 + C17070 + C17070 +
             C17046 * C143) *
                C50689 * C17047 +
            (C17629 + C17630 + C17631) * C50689 * C50727) *
               C1577 -
           ((C17053 * C809 + C17778 + C17778 + C17046 * C819 + C17051 * C808 +
             C17779 + C17779 + C17045 * C818 + C17049 * C807 + C17780 + C17780 +
             C17044 * C817) *
                C50689 * C50727 +
            (C17053 * C420 + C17781 + C17781 + C17046 * C440 + C17051 * C412 +
             C17782 + C17782 + C17045 * C432 + C17049 * C413 + C17783 + C17783 +
             C17044 * C433) *
                C50689 * C17047) *
               C50655) *
              C50575 * C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
            C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
            C17046 * C141) *
               C50689 * C17047 +
           (C17286 + C17287 + C17288) * C50689 * C50727) *
              C1743 -
          ((C18008 + C18009 + C18010) * C50689 * C50727 +
           (C17053 * C413 + C17447 + C17447 + C17046 * C433 + C17051 * C414 +
            C17448 + C17448 + C17045 * C434 + C17049 * C415 + C17449 + C17449 +
            C17044 * C435) *
               C50689 * C17047) *
              C1744 +
          ((C17049 * C416 + C17450 + C17450 + C17044 * C436 + C17051 * C417 +
            C17451 + C17451 + C17045 * C437 + C17053 * C418 + C17452 + C17452 +
            C17046 * C438) *
               C50689 * C17047 +
           (C18437 + C18438 + C18439) * C50689 * C50727) *
              C1745 -
          ((C17053 * C6020 + C19334 + C19334 + C17046 * C6022 + C17051 * C4532 +
            C19335 + C19335 + C17045 * C4540 + C17049 * C4533 + C19336 +
            C19336 + C17044 * C4541) *
               C50689 * C50727 +
           (C17053 * C1748 + C19337 + C19337 + C17046 * C1756 + C17051 * C1749 +
            C19338 + C19338 + C17045 * C1757 + C17049 * C1750 + C19339 +
            C19339 + C17044 * C1758) *
               C50689 * C17047) *
              C1746) *
         C50575 * C50556) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50689 *
                C19892 +
            C20057 * C19893 + C20058 * C19894 + C20059 * C19895) *
               C1577 -
           (C20560 * C19895 + C20561 * C19894 + C20562 * C19893 +
            (C19896 * C415 + C20166 + C20166 + C50526 * C435) * C50689 *
                C19892) *
               C50655) *
              C50575 * C928 +
          (((C19896 * C414 + C20171 + C20171 + C50526 * C434) * C50689 *
                C19892 +
            C20563 * C19893 + C20564 * C19894 + C20565 * C19895) *
               C50655 -
           (C20063 * C19895 + C20062 * C19894 + C20061 * C19893 +
            (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50689 *
                C19892) *
               C1577) *
              C50575 * C929 +
          (((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C50689 *
                C19892 +
            C20293 * C19893 + C20294 * C19894 + C20295 * C19895) *
               C1577 -
           ((C19896 * C3145 + C20394 + C20394 + C50526 * C3151) * C50689 *
                C19895 +
            (C19896 * C1464 + C20395 + C20395 + C50526 * C1472) * C50689 *
                C19894 +
            (C19896 * C807 + C20396 + C20396 + C50526 * C817) * C50689 *
                C19893 +
            (C19896 * C413 + C20397 + C20397 + C50526 * C433) * C50689 *
                C19892) *
               C50655) *
              C50575 * C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50689 *
                C19892 +
            C20057 * C19893 + C20058 * C19894 + C20059 * C19895) *
               C1577 -
           (C20560 * C19895 + C20561 * C19894 + C20562 * C19893 +
            (C19896 * C415 + C20166 + C20166 + C50526 * C435) * C50689 *
                C19892) *
               C50655) *
              C260 +
          ((C20562 * C19892 + C20561 * C19893 + C20560 * C19894 +
            C21195 * C19895) *
               C50655 -
           (C20060 * C19895 + C20059 * C19894 + C20058 * C19893 +
            C20057 * C19892) *
               C1577) *
              C261 +
          ((C20058 * C19892 + C20059 * C19893 + C20060 * C19894 +
            C20739 * C19895) *
               C1577 -
           ((C19896 * C21185 + C21191 + C21191 + C50526 * C21187) * C50689 *
                C19895 +
            C21195 * C19894 + C20560 * C19893 + C20561 * C19892) *
               C50655) *
              C262) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50689 * C19892 +
           C20057 * C19893 + C20058 * C19894 + C20059 * C19895) *
              C1743 -
          (C20560 * C19895 + C20561 * C19894 + C20562 * C19893 +
           (C19896 * C415 + C20166 + C20166 + C50526 * C435) * C50689 *
               C19892) *
              C1744 +
          ((C19896 * C416 + C20167 + C20167 + C50526 * C436) * C50689 * C19892 +
           C20857 * C19893 + C20858 * C19894 + C20859 * C19895) *
              C1745 -
          ((C19896 * C21457 + C21461 + C21461 + C50526 * C21459) * C50689 *
               C19895 +
           (C19896 * C4531 + C21462 + C21462 + C50526 * C4539) * C50689 *
               C19894 +
           (C19896 * C4533 + C21463 + C21463 + C50526 * C4541) * C50689 *
               C19893 +
           (C19896 * C1750 + C21464 + C21464 + C50526 * C1758) * C50689 *
               C19892) *
              C1746) *
         C50575 * C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[148] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 +
                      C17051 * C126 + C17057 + C17057 + C17045 * C140 +
                      C17053 * C127 + C17058 + C17058 + C17046 * C141) *
                         C50689 * C17047 +
                     (C17286 + C17287 + C17288) * C50689 * C50727) *
                        C50847 -
                    ((C18008 + C18009 + C18010) * C50689 * C50727 +
                     (C17053 * C413 + C17447 + C17447 + C17046 * C433 +
                      C17051 * C414 + C17448 + C17448 + C17045 * C434 +
                      C17049 * C415 + C17449 + C17449 + C17044 * C435) *
                         C50689 * C17047) *
                        C50848 +
                    ((C17049 * C416 + C17450 + C17450 + C17044 * C436 +
                      C17051 * C417 + C17451 + C17451 + C17045 * C437 +
                      C17053 * C418 + C17452 + C17452 + C17046 * C438) *
                         C50689 * C17047 +
                     (C18437 + C18438 + C18439) * C50689 * C50727) *
                        C1993) *
                       C50575 * C50792 +
                   (((C17049 * C414 + C17456 + C17456 + C17044 * C434 +
                      C17051 * C413 + C17457 + C17457 + C17045 * C433 +
                      C17053 * C412 + C17458 + C17458 + C17046 * C432) *
                         C50689 * C17047 +
                     (C18011 + C18012 + C18013) * C50689 * C50727) *
                        C50848 -
                    ((C17294 + C17293 + C17292) * C50689 * C50727 +
                     (C17053 * C128 + C17065 + C17065 + C17046 * C142 +
                      C17051 * C127 + C17066 + C17066 + C17045 * C141 +
                      C17049 * C126 + C17067 + C17067 + C17044 * C140) *
                         C50689 * C17047) *
                        C50847 -
                    ((C17053 * C1116 + C17462 + C17462 + C17046 * C1124 +
                      C17051 * C1117 + C17463 + C17463 + C17045 * C1125 +
                      C17049 * C1118 + C17464 + C17464 + C17044 * C1126) *
                         C50689 * C50727 +
                     (C17053 * C419 + C17465 + C17465 + C17046 * C439 +
                      C17051 * C418 + C17466 + C17466 + C17045 * C438 +
                      C17049 * C417 + C17467 + C17467 + C17044 * C437) *
                         C50689 * C17047) *
                        C1993) *
                       C50575 * C50562)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) *
                         C50689 * C19892 +
                     C20057 * C19893 + C20058 * C19894 + C20059 * C19895) *
                        C50847 -
                    (C20560 * C19895 + C20561 * C19894 + C20562 * C19893 +
                     (C19896 * C415 + C20166 + C20166 + C50526 * C435) *
                         C50689 * C19892) *
                        C50848 +
                    ((C19896 * C416 + C20167 + C20167 + C50526 * C436) *
                         C50689 * C19892 +
                     C20857 * C19893 + C20858 * C19894 + C20859 * C19895) *
                        C1993) *
                       C50575 * C50792 +
                   (((C19896 * C414 + C20171 + C20171 + C50526 * C434) *
                         C50689 * C19892 +
                     C20563 * C19893 + C20564 * C19894 + C20565 * C19895) *
                        C50848 -
                    (C20063 * C19895 + C20062 * C19894 + C20061 * C19893 +
                     (C19896 * C126 + C19906 + C19906 + C50526 * C140) *
                         C50689 * C19892) *
                        C50847 -
                    ((C19896 * C3606 + C20175 + C20175 + C50526 * C3610) *
                         C50689 * C19895 +
                     (C19896 * C2597 + C20176 + C20176 + C50526 * C2603) *
                         C50689 * C19894 +
                     (C19896 * C1118 + C20177 + C20177 + C50526 * C1126) *
                         C50689 * C19893 +
                     (C19896 * C417 + C20178 + C20178 + C50526 * C437) *
                         C50689 * C19892) *
                        C1993) *
                       C50575 * C50562)) /
                     (p * q * std::sqrt(p + q));
    d2ee[149] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 +
                      C17051 * C126 + C17057 + C17057 + C17045 * C140 +
                      C17053 * C127 + C17058 + C17058 + C17046 * C141) *
                         C50689 * C17047 +
                     (C17286 + C17287 + C17288) * C50689 * C50727) *
                        C1577 -
                    ((C18008 + C18009 + C18010) * C50689 * C50727 +
                     (C17053 * C413 + C17447 + C17447 + C17046 * C433 +
                      C17051 * C414 + C17448 + C17448 + C17045 * C434 +
                      C17049 * C415 + C17449 + C17449 + C17044 * C435) *
                         C50689 * C17047) *
                        C50655) *
                       C50575 * C928 +
                   (((C17049 * C414 + C17456 + C17456 + C17044 * C434 +
                      C17051 * C413 + C17457 + C17457 + C17045 * C433 +
                      C17053 * C412 + C17458 + C17458 + C17046 * C432) *
                         C50689 * C17047 +
                     (C18011 + C18012 + C18013) * C50689 * C50727) *
                        C50655 -
                    ((C17294 + C17293 + C17292) * C50689 * C50727 +
                     (C17053 * C128 + C17065 + C17065 + C17046 * C142 +
                      C17051 * C127 + C17066 + C17066 + C17045 * C141 +
                      C17049 * C126 + C17067 + C17067 + C17044 * C140) *
                         C50689 * C17047) *
                        C1577) *
                       C50575 * C929 +
                   (((C17049 * C127 + C17068 + C17068 + C17044 * C141 +
                      C17051 * C128 + C17069 + C17069 + C17045 * C142 +
                      C17053 * C129 + C17070 + C17070 + C17046 * C143) *
                         C50689 * C17047 +
                     (C17629 + C17630 + C17631) * C50689 * C50727) *
                        C1577 -
                    ((C17053 * C809 + C17778 + C17778 + C17046 * C819 +
                      C17051 * C808 + C17779 + C17779 + C17045 * C818 +
                      C17049 * C807 + C17780 + C17780 + C17044 * C817) *
                         C50689 * C50727 +
                     (C17053 * C420 + C17781 + C17781 + C17046 * C440 +
                      C17051 * C412 + C17782 + C17782 + C17045 * C432 +
                      C17049 * C413 + C17783 + C17783 + C17044 * C433) *
                         C50689 * C17047) *
                        C50655) *
                       C50575 * C930)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 +
                      C17051 * C126 + C17057 + C17057 + C17045 * C140 +
                      C17053 * C127 + C17058 + C17058 + C17046 * C141) *
                         C50689 * C17047 +
                     (C17286 + C17287 + C17288) * C50689 * C50727) *
                        C1577 -
                    ((C18008 + C18009 + C18010) * C50689 * C50727 +
                     (C17053 * C413 + C17447 + C17447 + C17046 * C433 +
                      C17051 * C414 + C17448 + C17448 + C17045 * C434 +
                      C17049 * C415 + C17449 + C17449 + C17044 * C435) *
                         C50689 * C17047) *
                        C50655) *
                       C260 +
                   (((C18010 + C18009 + C18008) * C50689 * C17047 +
                     (C18941 + C18942 + C18943) * C50689 * C50727) *
                        C50655 -
                    ((C17289 + C17290 + C17291) * C50689 * C50727 +
                     (C17288 + C17287 + C17286) * C50689 * C17047) *
                        C1577) *
                       C261 +
                   (((C17291 + C17290 + C17289) * C50689 * C17047 +
                     (C18273 + C18274 + C18275) * C50689 * C50727) *
                        C1577 -
                    ((C17053 * C3145 + C18932 + C18932 + C17046 * C3151 +
                      C17051 * C3144 + C18933 + C18933 + C17045 * C3150 +
                      C17049 * C3143 + C18934 + C18934 + C17044 * C3149) *
                         C50689 * C50727 +
                     (C18943 + C18942 + C18941) * C50689 * C17047) *
                        C50655) *
                       C262) *
                  C50556) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) *
                         C50689 * C19892 +
                     C20057 * C19893 + C20058 * C19894 + C20059 * C19895) *
                        C1577 -
                    (C20560 * C19895 + C20561 * C19894 + C20562 * C19893 +
                     (C19896 * C415 + C20166 + C20166 + C50526 * C435) *
                         C50689 * C19892) *
                        C50655) *
                       C50575 * C928 +
                   (((C19896 * C414 + C20171 + C20171 + C50526 * C434) *
                         C50689 * C19892 +
                     C20563 * C19893 + C20564 * C19894 + C20565 * C19895) *
                        C50655 -
                    (C20063 * C19895 + C20062 * C19894 + C20061 * C19893 +
                     (C19896 * C126 + C19906 + C19906 + C50526 * C140) *
                         C50689 * C19892) *
                        C1577) *
                       C50575 * C929 +
                   (((C19896 * C127 + C19907 + C19907 + C50526 * C141) *
                         C50689 * C19892 +
                     C20293 * C19893 + C20294 * C19894 + C20295 * C19895) *
                        C1577 -
                    ((C19896 * C3145 + C20394 + C20394 + C50526 * C3151) *
                         C50689 * C19895 +
                     (C19896 * C1464 + C20395 + C20395 + C50526 * C1472) *
                         C50689 * C19894 +
                     (C19896 * C807 + C20396 + C20396 + C50526 * C817) *
                         C50689 * C19893 +
                     (C19896 * C413 + C20397 + C20397 + C50526 * C433) *
                         C50689 * C19892) *
                        C50655) *
                       C50575 * C930)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) *
                         C50689 * C19892 +
                     C20057 * C19893 + C20058 * C19894 + C20059 * C19895) *
                        C1577 -
                    (C20560 * C19895 + C20561 * C19894 + C20562 * C19893 +
                     (C19896 * C415 + C20166 + C20166 + C50526 * C435) *
                         C50689 * C19892) *
                        C50655) *
                       C260 +
                   ((C20562 * C19892 + C20561 * C19893 + C20560 * C19894 +
                     C21195 * C19895) *
                        C50655 -
                    (C20060 * C19895 + C20059 * C19894 + C20058 * C19893 +
                     C20057 * C19892) *
                        C1577) *
                       C261 +
                   ((C20058 * C19892 + C20059 * C19893 + C20060 * C19894 +
                     C20739 * C19895) *
                        C1577 -
                    ((C19896 * C21185 + C21191 + C21191 + C50526 * C21187) *
                         C50689 * C19895 +
                     C21195 * C19894 + C20560 * C19893 + C20561 * C19892) *
                        C50655) *
                       C262) *
                  C50556) /
                     (p * q * std::sqrt(p + q));
    d2ee[150] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C24661 * C125 + C24666 + C24666 + C50785 * C139 +
                       C24663 * C126 + C24667 + C24667 + C50531 * C140) *
                          C33816 +
                      (C28010 + C28011) * C50753) *
                         C50813 +
                     ((C24892 + C24893) * C33816 + C28690 * C50753) * C50727) *
                        C50591 * C50800 -
                    ((C26548 * C50753 + (C24895 + C24894) * C33816) * C50727 +
                     (C28691 * C50753 + (C24893 + C24892) * C33816) * C50813) *
                        C50591 * C50627) *
                       C50843 +
                   ((((C24898 + C24899) * C33816 + C28692 * C50753) * C50813 +
                     ((C24900 + C24901) * C33816 + (C25634 + C25635) * C50753) *
                         C50727) *
                        C50591 * C50627 -
                    ((C28693 * C50753 + (C24899 + C24898) * C33816) * C50727 +
                     ((C28015 + C28014) * C50753 +
                      (C24663 * C127 + C24676 + C24676 + C50531 * C141 +
                       C24661 * C126 + C24677 + C24677 + C50785 * C140) *
                          C33816) *
                         C50813) *
                        C50591 * C50800) *
                       C50844 +
                   ((((C24661 * C127 + C24678 + C24678 + C50785 * C141 +
                       C24663 * C128 + C24679 + C24679 + C50531 * C142) *
                          C33816 +
                      (C28430 + C28431) * C50753) *
                         C50813 +
                     ((C25242 + C25243) * C33816 + (C28222 + C28223) * C50753) *
                         C50727) *
                        C50591 * C50800 -
                    (((C24663 * C1463 + C25392 + C25392 + C50531 * C1471 +
                       C24661 * C1464 + C25393 + C25393 + C50785 * C1472) *
                          C50753 +
                      (C25245 + C25244) * C33816) *
                         C50727 +
                     ((C28223 + C28222) * C50753 + (C25243 + C25242) * C33816) *
                         C50813) *
                        C50591 * C50627) *
                       C560)) /
                 (p * q * std::sqrt(p + q));
    d2ee[151] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
               C24667 + C24667 + C50531 * C140) *
                  C33816 +
              (C28010 + C28011) * C50753) *
                 C50813 +
             ((C24892 + C24893) * C33816 + C28690 * C50753) * C50727) *
                C50801 -
            ((C29212 * C50753 + C28691 * C33816) * C50727 +
             ((C28012 + C28013) * C50753 + (C28011 + C28010) * C33816) *
                 C50813) *
                C50655) *
               C50800 +
           (((C28690 * C33816 + C29213 * C50753) * C50813 +
             (C29870 * C33816 + (C26060 + C26061) * C50753) * C50727) *
                C50655 -
            ((C26548 * C50753 + (C24895 + C24894) * C33816) * C50727 +
             (C28691 * C50753 + (C24893 + C24892) * C33816) * C50813) *
                C50801) *
               C50627) *
              C263 +
          (((((C28014 + C28015) * C33816 + (C28016 + C28017) * C50753) *
                 C50813 +
             (C28692 * C33816 + (C28018 + C28019) * C50753) * C50727) *
                C50655 -
            ((C28693 * C50753 + (C24899 + C24898) * C33816) * C50727 +
             ((C28015 + C28014) * C50753 +
              (C24663 * C127 + C24676 + C24676 + C50531 * C141 + C24661 * C126 +
               C24677 + C24677 + C50785 * C140) *
                  C33816) *
                 C50813) *
                C50801) *
               C50800 +
           ((((C24898 + C24899) * C33816 + C28692 * C50753) * C50813 +
             ((C24900 + C24901) * C33816 + (C25634 + C25635) * C50753) *
                 C50727) *
                C50801 -
            (((C24663 * C2598 + C25072 + C25072 + C50531 * C2604 +
               C24661 * C2597 + C25073 + C25073 + C50785 * C2603) *
                  C50753 +
              (C25635 + C25634) * C33816) *
                 C50727 +
             ((C28019 + C28018) * C50753 + C28693 * C33816) * C50813) *
                C50655) *
               C50627) *
              C50562)) /
        (p * q * std::sqrt(p + q));
    d2ee[152] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
              C24667 + C24667 + C50531 * C140) *
                 C33816 +
             (C28010 + C28011) * C50753) *
                C50813 +
            ((C24892 + C24893) * C33816 + C28690 * C50753) * C50727) *
               C50591 * C260 -
           ((C26548 * C50753 + (C24895 + C24894) * C33816) * C50727 +
            (C28691 * C50753 + (C24893 + C24892) * C33816) * C50813) *
               C50591 * C261 +
           ((C24904 * C33816 + C29870 * C50753) * C50813 +
            ((C24897 + C24896) * C33816 + (C26560 + C26561) * C50753) *
                C50727) *
               C50591 * C262) *
              C263 +
          ((((C24898 + C24899) * C33816 + C28692 * C50753) * C50813 +
            ((C24900 + C24901) * C33816 + (C25634 + C25635) * C50753) *
                C50727) *
               C50591 * C261 -
           ((C28693 * C50753 + (C24899 + C24898) * C33816) * C50727 +
            ((C28015 + C28014) * C50753 +
             (C24663 * C127 + C24676 + C24676 + C50531 * C141 + C24661 * C126 +
              C24677 + C24677 + C50785 * C140) *
                 C33816) *
                C50813) *
               C50591 * C260 -
           (((C24663 * C3145 + C25610 + C25610 + C50531 * C3151 +
              C24661 * C3144 + C25611 + C25611 + C50785 * C3150) *
                 C50753 +
             (C24903 + C24902) * C33816) *
                C50727 +
            ((C25635 + C25634) * C50753 + C24905 * C33816) * C50813) *
               C50591 * C262) *
              C50562)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
             C24667 + C24667 + C50531 * C140) *
                C33816 +
            (C28010 + C28011) * C50753) *
               C50813 +
           ((C24892 + C24893) * C33816 + C28690 * C50753) * C50727) *
              C50591 * C50575 * C113 -
          ((C28693 * C50753 + (C24899 + C24898) * C33816) * C50727 +
           ((C28015 + C28014) * C50753 +
            (C24663 * C127 + C24676 + C24676 + C50531 * C141 + C24661 * C126 +
             C24677 + C24677 + C50785 * C140) *
                C33816) *
               C50813) *
              C50591 * C50575 * C114 +
          (((C24661 * C127 + C24678 + C24678 + C50785 * C141 + C24663 * C128 +
             C24679 + C24679 + C50531 * C142) *
                C33816 +
            (C28430 + C28431) * C50753) *
               C50813 +
           ((C25242 + C25243) * C33816 + (C28222 + C28223) * C50753) * C50727) *
              C50591 * C50575 * C115 -
          (((C24663 * C809 + C27574 + C27574 + C50531 * C819 + C24661 * C808 +
             C27575 + C27575 + C50785 * C818) *
                C50753 +
            (C24663 * C273 + C24686 + C24686 + C50531 * C293 + C24661 * C265 +
             C24687 + C24687 + C50785 * C285) *
                C33816) *
               C50727 +
           ((C24663 * C420 + C27576 + C27576 + C50531 * C440 + C24661 * C412 +
             C27577 + C27577 + C50785 * C432) *
                C50753 +
            (C24663 * C129 + C24688 + C24688 + C50531 * C143 + C24661 * C128 +
             C24689 + C24689 + C50785 * C142) *
                C33816) *
               C50813) *
              C50591 * C50575 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
              C24667 + C24667 + C50531 * C140) *
                 C33816 +
             (C28010 + C28011) * C50753) *
                C50813 +
            ((C24892 + C24893) * C33816 + C28690 * C50753) * C50727) *
               C409 -
           ((C29212 * C50753 + C28691 * C33816) * C50727 +
            ((C28012 + C28013) * C50753 + (C28011 + C28010) * C33816) *
                C50813) *
               C410 +
           (((C28013 + C28012) * C33816 + (C30401 + C30402) * C50753) * C50813 +
            (C29213 * C33816 + (C29222 + C29223) * C50753) * C50727) *
               C411) *
              C50575 * C263 +
          ((((C28014 + C28015) * C33816 + (C28016 + C28017) * C50753) * C50813 +
            (C28692 * C33816 + (C28018 + C28019) * C50753) * C50727) *
               C410 -
           ((C28693 * C50753 + (C24899 + C24898) * C33816) * C50727 +
            ((C28015 + C28014) * C50753 +
             (C24663 * C127 + C24676 + C24676 + C50531 * C141 + C24661 * C126 +
              C24677 + C24677 + C50785 * C140) *
                 C33816) *
                C50813) *
               C409 -
           (((C24663 * C6020 + C27986 + C27986 + C50531 * C6022 +
              C24661 * C4532 + C27987 + C27987 + C50785 * C4540) *
                 C50753 +
             (C28019 + C28018) * C33816) *
                C50727 +
            ((C24663 * C1748 + C27988 + C27988 + C50531 * C1756 +
              C24661 * C1749 + C27989 + C27989 + C50785 * C1757) *
                 C50753 +
             (C28017 + C28016) * C33816) *
                C50813) *
               C411) *
              C50575 * C50562)) /
            (p * q * std::sqrt(p + q));
    d2ee[153] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
              C24667 + C24667 + C50531 * C140) *
                 C33816 +
             (C28010 + C28011) * C50753) *
                C50813 +
            ((C24892 + C24893) * C33816 + C28690 * C50753) * C50727) *
               C50801 -
           ((C29212 * C50753 + C28691 * C33816) * C50727 +
            ((C28012 + C28013) * C50753 + (C28011 + C28010) * C33816) *
                C50813) *
               C50655) *
              C50575 * C50843 +
          ((((C28014 + C28015) * C33816 + (C28016 + C28017) * C50753) * C50813 +
            (C28692 * C33816 + (C28018 + C28019) * C50753) * C50727) *
               C50655 -
           ((C28693 * C50753 + (C24899 + C24898) * C33816) * C50727 +
            ((C28015 + C28014) * C50753 +
             (C24663 * C127 + C24676 + C24676 + C50531 * C141 + C24661 * C126 +
              C24677 + C24677 + C50785 * C140) *
                 C33816) *
                C50813) *
               C50801) *
              C50575 * C50844 +
          ((((C24661 * C127 + C24678 + C24678 + C50785 * C141 + C24663 * C128 +
              C24679 + C24679 + C50531 * C142) *
                 C33816 +
             (C28430 + C28431) * C50753) *
                C50813 +
            ((C25242 + C25243) * C33816 + (C28222 + C28223) * C50753) *
                C50727) *
               C50801 -
           (((C24663 * C1116 + C28422 + C28422 + C50531 * C1124 +
              C24661 * C1117 + C28423 + C28423 + C50785 * C1125) *
                 C50753 +
             (C28223 + C28222) * C33816) *
                C50727 +
            ((C24663 * C419 + C28424 + C28424 + C50531 * C439 + C24661 * C418 +
              C28425 + C28425 + C50785 * C438) *
                 C50753 +
             (C28431 + C28430) * C33816) *
                C50813) *
               C50655) *
              C50575 * C560)) /
        (p * q * std::sqrt(p + q));
    d2ee[154] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
             C24667 + C24667 + C50531 * C140) *
                C33816 +
            (C28010 + C28011) * C50753) *
               C50813 +
           ((C24892 + C24893) * C33816 + C28690 * C50753) * C50727) *
              C50591 * C50575 * C113 -
          ((C28693 * C50753 + (C24899 + C24898) * C33816) * C50727 +
           ((C28015 + C28014) * C50753 +
            (C24663 * C127 + C24676 + C24676 + C50531 * C141 + C24661 * C126 +
             C24677 + C24677 + C50785 * C140) *
                C33816) *
               C50813) *
              C50591 * C50575 * C114 +
          (((C24661 * C127 + C24678 + C24678 + C50785 * C141 + C24663 * C128 +
             C24679 + C24679 + C50531 * C142) *
                C33816 +
            (C28430 + C28431) * C50753) *
               C50813 +
           ((C25242 + C25243) * C33816 + (C28222 + C28223) * C50753) * C50727) *
              C50591 * C50575 * C115 -
          (((C24663 * C809 + C27574 + C27574 + C50531 * C819 + C24661 * C808 +
             C27575 + C27575 + C50785 * C818) *
                C50753 +
            (C24663 * C273 + C24686 + C24686 + C50531 * C293 + C24661 * C265 +
             C24687 + C24687 + C50785 * C285) *
                C33816) *
               C50727 +
           ((C24663 * C420 + C27576 + C27576 + C50531 * C440 + C24661 * C412 +
             C27577 + C27577 + C50785 * C432) *
                C50753 +
            (C24663 * C129 + C24688 + C24688 + C50531 * C143 + C24661 * C128 +
             C24689 + C24689 + C50785 * C142) *
                C33816) *
               C50813) *
              C50591 * C50575 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
              C24667 + C24667 + C50531 * C140) *
                 C33816 +
             (C28010 + C28011) * C50753) *
                C50813 +
            ((C24892 + C24893) * C33816 + C28690 * C50753) * C50727) *
               C50591 * C260 -
           ((C26548 * C50753 + (C24895 + C24894) * C33816) * C50727 +
            (C28691 * C50753 + (C24893 + C24892) * C33816) * C50813) *
               C50591 * C261 +
           ((C24904 * C33816 + C29870 * C50753) * C50813 +
            ((C24897 + C24896) * C33816 + (C26560 + C26561) * C50753) *
                C50727) *
               C50591 * C262) *
              C263 +
          ((((C24898 + C24899) * C33816 + C28692 * C50753) * C50813 +
            ((C24900 + C24901) * C33816 + (C25634 + C25635) * C50753) *
                C50727) *
               C50591 * C261 -
           ((C28693 * C50753 + (C24899 + C24898) * C33816) * C50727 +
            ((C28015 + C28014) * C50753 +
             (C24663 * C127 + C24676 + C24676 + C50531 * C141 + C24661 * C126 +
              C24677 + C24677 + C50785 * C140) *
                 C33816) *
                C50813) *
               C50591 * C260 -
           (((C24663 * C3145 + C25610 + C25610 + C50531 * C3151 +
              C24661 * C3144 + C25611 + C25611 + C50785 * C3150) *
                 C50753 +
             (C24903 + C24902) * C33816) *
                C50727 +
            ((C25635 + C25634) * C50753 + C24905 * C33816) * C50813) *
               C50591 * C262) *
              C50562)) /
            (p * q * std::sqrt(p + q));
    d2ee[155] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C24661 * C125 + C24666 + C24666 + C50785 * C139 +
                       C24663 * C126 + C24667 + C24667 + C50531 * C140) *
                          C33816 +
                      (C28010 + C28011) * C50753) *
                         C50813 +
                     ((C24892 + C24893) * C33816 + C28690 * C50753) * C50727) *
                        C50591 * C50845 -
                    ((C26548 * C50753 + (C24895 + C24894) * C33816) * C50727 +
                     (C28691 * C50753 + (C24893 + C24892) * C33816) * C50813) *
                        C50591 * C50846 +
                    ((C24904 * C33816 + C29870 * C50753) * C50813 +
                     ((C24897 + C24896) * C33816 + (C26560 + C26561) * C50753) *
                         C50727) *
                        C50591 * C1232) *
                       C50792 +
                   ((((C24898 + C24899) * C33816 + C28692 * C50753) * C50813 +
                     ((C24900 + C24901) * C33816 + (C25634 + C25635) * C50753) *
                         C50727) *
                        C50591 * C50846 -
                    ((C28693 * C50753 + (C24899 + C24898) * C33816) * C50727 +
                     ((C28015 + C28014) * C50753 +
                      (C24663 * C127 + C24676 + C24676 + C50531 * C141 +
                       C24661 * C126 + C24677 + C24677 + C50785 * C140) *
                          C33816) *
                         C50813) *
                        C50591 * C50845 -
                    (((C24663 * C3145 + C25610 + C25610 + C50531 * C3151 +
                       C24661 * C3144 + C25611 + C25611 + C50785 * C3150) *
                          C50753 +
                      (C24903 + C24902) * C33816) *
                         C50727 +
                     ((C25635 + C25634) * C50753 + C24905 * C33816) * C50813) *
                        C50591 * C1232) *
                       C50562)) /
                 (p * q * std::sqrt(p + q));
    d2ee[156] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C24661 * C125 + C24666 + C24666 + C50785 * C139 +
                       C24663 * C126 + C24667 + C24667 + C50531 * C140) *
                          C33816 +
                      (C28010 + C28011) * C50753) *
                         C50813 +
                     ((C24892 + C24893) * C33816 + C28690 * C50753) * C50727) *
                        C50801 -
                    ((C29212 * C50753 + C28691 * C33816) * C50727 +
                     ((C28012 + C28013) * C50753 + (C28011 + C28010) * C33816) *
                         C50813) *
                        C50655) *
                       C50845 +
                   (((C28690 * C33816 + C29213 * C50753) * C50813 +
                     (C29870 * C33816 + (C26060 + C26061) * C50753) * C50727) *
                        C50655 -
                    ((C26548 * C50753 + (C24895 + C24894) * C33816) * C50727 +
                     (C28691 * C50753 + (C24893 + C24892) * C33816) * C50813) *
                        C50801) *
                       C50846 +
                   (((C24904 * C33816 + C29870 * C50753) * C50813 +
                     ((C24897 + C24896) * C33816 + (C26560 + C26561) * C50753) *
                         C50727) *
                        C50801 -
                    (((C24663 * C3606 + C26048 + C26048 + C50531 * C3610 +
                       C24661 * C3607 + C26049 + C26049 + C50785 * C3611) *
                          C50753 +
                      (C26561 + C26560) * C33816) *
                         C50727 +
                     ((C26061 + C26060) * C50753 + C26548 * C33816) * C50813) *
                        C50655) *
                       C1232) *
                  C50556) /
                 (p * q * std::sqrt(p + q));
    d2ee[157] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
             C24667 + C24667 + C50531 * C140) *
                C33816 +
            (C28010 + C28011) * C50753) *
               C50813 +
           ((C24892 + C24893) * C33816 + C28690 * C50753) * C50727) *
              C50591 * C997 -
          ((C26548 * C50753 + (C24895 + C24894) * C33816) * C50727 +
           (C28691 * C50753 + (C24893 + C24892) * C33816) * C50813) *
              C50591 * C998 +
          ((C24904 * C33816 + C29870 * C50753) * C50813 +
           ((C24897 + C24896) * C33816 + (C26560 + C26561) * C50753) * C50727) *
              C50591 * C999 -
          (((C24663 * C4120 + C26553 + C26553 + C50531 * C4124 +
             C24661 * C4121 + C26554 + C26554 + C50785 * C4125) *
                C50753 +
            (C25893 + C25892) * C33816) *
               C50727 +
           ((C26561 + C26560) * C50753 + C25880 * C33816) * C50813) *
              C50591 * C1000) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
              C24667 + C24667 + C50531 * C140) *
                 C33816 +
             (C28010 + C28011) * C50753) *
                C50813 +
            ((C24892 + C24893) * C33816 + C28690 * C50753) * C50727) *
               C50591 * C926 -
           ((C26548 * C50753 + (C24895 + C24894) * C33816) * C50727 +
            (C28691 * C50753 + (C24893 + C24892) * C33816) * C50813) *
               C50591 * C50627) *
              C928 +
          ((((C24898 + C24899) * C33816 + C28692 * C50753) * C50813 +
            ((C24900 + C24901) * C33816 + (C25634 + C25635) * C50753) *
                C50727) *
               C50591 * C50627 -
           ((C28693 * C50753 + (C24899 + C24898) * C33816) * C50727 +
            ((C28015 + C28014) * C50753 +
             (C24663 * C127 + C24676 + C24676 + C50531 * C141 + C24661 * C126 +
              C24677 + C24677 + C50785 * C140) *
                 C33816) *
                C50813) *
               C50591 * C926) *
              C929 +
          ((((C24661 * C127 + C24678 + C24678 + C50785 * C141 + C24663 * C128 +
              C24679 + C24679 + C50531 * C142) *
                 C33816 +
             (C28430 + C28431) * C50753) *
                C50813 +
            ((C25242 + C25243) * C33816 + (C28222 + C28223) * C50753) *
                C50727) *
               C50591 * C926 -
           (((C24663 * C1463 + C25392 + C25392 + C50531 * C1471 +
              C24661 * C1464 + C25393 + C25393 + C50785 * C1472) *
                 C50753 +
             (C25245 + C25244) * C33816) *
                C50727 +
            ((C28223 + C28222) * C50753 + (C25243 + C25242) * C33816) *
                C50813) *
               C50591 * C50627) *
              C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
              C24667 + C24667 + C50531 * C140) *
                 C33816 +
             (C28010 + C28011) * C50753) *
                C50813 +
            ((C24892 + C24893) * C33816 + C28690 * C50753) * C50727) *
               C409 -
           ((C29212 * C50753 + C28691 * C33816) * C50727 +
            ((C28012 + C28013) * C50753 + (C28011 + C28010) * C33816) *
                C50813) *
               C410 +
           (((C28013 + C28012) * C33816 + (C30401 + C30402) * C50753) * C50813 +
            (C29213 * C33816 + (C29222 + C29223) * C50753) * C50727) *
               C411) *
              C926 +
          (((C28690 * C33816 + C29213 * C50753) * C50813 +
            (C29870 * C33816 + (C26060 + C26061) * C50753) * C50727) *
               C410 -
           ((C26548 * C50753 + (C24895 + C24894) * C33816) * C50727 +
            (C28691 * C50753 + (C24893 + C24892) * C33816) * C50813) *
               C409 -
           (((C24663 * C4530 + C26952 + C26952 + C50531 * C4538 +
              C24661 * C4531 + C26953 + C26953 + C50785 * C4539) *
                 C50753 +
             (C26061 + C26060) * C33816) *
                C50727 +
            ((C29223 + C29222) * C50753 + C29212 * C33816) * C50813) *
               C411) *
              C50627) *
         C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[158] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
               C24667 + C24667 + C50531 * C140) *
                  C33816 +
              (C28010 + C28011) * C50753) *
                 C50813 +
             ((C24892 + C24893) * C33816 + C28690 * C50753) * C50727) *
                C50801 -
            ((C29212 * C50753 + C28691 * C33816) * C50727 +
             ((C28012 + C28013) * C50753 + (C28011 + C28010) * C33816) *
                 C50813) *
                C50655) *
               C926 +
           (((C28690 * C33816 + C29213 * C50753) * C50813 +
             (C29870 * C33816 + (C26060 + C26061) * C50753) * C50727) *
                C50655 -
            ((C26548 * C50753 + (C24895 + C24894) * C33816) * C50727 +
             (C28691 * C50753 + (C24893 + C24892) * C33816) * C50813) *
                C50801) *
               C50627) *
              C50792 +
          (((((C28014 + C28015) * C33816 + (C28016 + C28017) * C50753) *
                 C50813 +
             (C28692 * C33816 + (C28018 + C28019) * C50753) * C50727) *
                C50655 -
            ((C28693 * C50753 + (C24899 + C24898) * C33816) * C50727 +
             ((C28015 + C28014) * C50753 +
              (C24663 * C127 + C24676 + C24676 + C50531 * C141 + C24661 * C126 +
               C24677 + C24677 + C50785 * C140) *
                  C33816) *
                 C50813) *
                C50801) *
               C926 +
           ((((C24898 + C24899) * C33816 + C28692 * C50753) * C50813 +
             ((C24900 + C24901) * C33816 + (C25634 + C25635) * C50753) *
                 C50727) *
                C50801 -
            (((C24663 * C2598 + C25072 + C25072 + C50531 * C2604 +
               C24661 * C2597 + C25073 + C25073 + C50785 * C2603) *
                  C50753 +
              (C25635 + C25634) * C33816) *
                 C50727 +
             ((C28019 + C28018) * C50753 + C28693 * C33816) * C50813) *
                C50655) *
               C50627) *
              C50562)) /
        (p * q * std::sqrt(p + q));
    d2ee[159] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
              C24667 + C24667 + C50531 * C140) *
                 C33816 +
             (C28010 + C28011) * C50753) *
                C50813 +
            ((C24892 + C24893) * C33816 + C28690 * C50753) * C50727) *
               C50591 * C926 -
           ((C26548 * C50753 + (C24895 + C24894) * C33816) * C50727 +
            (C28691 * C50753 + (C24893 + C24892) * C33816) * C50813) *
               C50591 * C50627) *
              C928 +
          ((((C24898 + C24899) * C33816 + C28692 * C50753) * C50813 +
            ((C24900 + C24901) * C33816 + (C25634 + C25635) * C50753) *
                C50727) *
               C50591 * C50627 -
           ((C28693 * C50753 + (C24899 + C24898) * C33816) * C50727 +
            ((C28015 + C28014) * C50753 +
             (C24663 * C127 + C24676 + C24676 + C50531 * C141 + C24661 * C126 +
              C24677 + C24677 + C50785 * C140) *
                 C33816) *
                C50813) *
               C50591 * C926) *
              C929 +
          ((((C24661 * C127 + C24678 + C24678 + C50785 * C141 + C24663 * C128 +
              C24679 + C24679 + C50531 * C142) *
                 C33816 +
             (C28430 + C28431) * C50753) *
                C50813 +
            ((C25242 + C25243) * C33816 + (C28222 + C28223) * C50753) *
                C50727) *
               C50591 * C926 -
           (((C24663 * C1463 + C25392 + C25392 + C50531 * C1471 +
              C24661 * C1464 + C25393 + C25393 + C50785 * C1472) *
                 C50753 +
             (C25245 + C25244) * C33816) *
                C50727 +
            ((C28223 + C28222) * C50753 + (C25243 + C25242) * C33816) *
                C50813) *
               C50591 * C50627) *
              C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
             C24667 + C24667 + C50531 * C140) *
                C33816 +
            (C28010 + C28011) * C50753) *
               C50813 +
           ((C24892 + C24893) * C33816 + C28690 * C50753) * C50727) *
              C50591 * C997 -
          ((C26548 * C50753 + (C24895 + C24894) * C33816) * C50727 +
           (C28691 * C50753 + (C24893 + C24892) * C33816) * C50813) *
              C50591 * C998 +
          ((C24904 * C33816 + C29870 * C50753) * C50813 +
           ((C24897 + C24896) * C33816 + (C26560 + C26561) * C50753) * C50727) *
              C50591 * C999 -
          (((C24663 * C4120 + C26553 + C26553 + C50531 * C4124 +
             C24661 * C4121 + C26554 + C26554 + C50785 * C4125) *
                C50753 +
            (C25893 + C25892) * C33816) *
               C50727 +
           ((C26561 + C26560) * C50753 + C25880 * C33816) * C50813) *
              C50591 * C1000) *
         C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[160] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
               C24667 + C24667 + C50531 * C140) *
                  C33816 +
              (C28010 + C28011) * C50753) *
                 C50813 +
             ((C24892 + C24893) * C33816 + C28690 * C50753) * C50727) *
                C1577 -
            ((C29212 * C50753 + C28691 * C33816) * C50727 +
             ((C28012 + C28013) * C50753 + (C28011 + C28010) * C33816) *
                 C50813) *
                C50655) *
               C50800 +
           (((C28690 * C33816 + C29213 * C50753) * C50813 +
             (C29870 * C33816 + (C26060 + C26061) * C50753) * C50727) *
                C50655 -
            ((C26548 * C50753 + (C24895 + C24894) * C33816) * C50727 +
             (C28691 * C50753 + (C24893 + C24892) * C33816) * C50813) *
                C1577) *
               C50627) *
              C50792 +
          (((((C28014 + C28015) * C33816 + (C28016 + C28017) * C50753) *
                 C50813 +
             (C28692 * C33816 + (C28018 + C28019) * C50753) * C50727) *
                C50655 -
            ((C28693 * C50753 + (C24899 + C24898) * C33816) * C50727 +
             ((C28015 + C28014) * C50753 +
              (C24663 * C127 + C24676 + C24676 + C50531 * C141 + C24661 * C126 +
               C24677 + C24677 + C50785 * C140) *
                  C33816) *
                 C50813) *
                C1577) *
               C50800 +
           ((((C24898 + C24899) * C33816 + C28692 * C50753) * C50813 +
             ((C24900 + C24901) * C33816 + (C25634 + C25635) * C50753) *
                 C50727) *
                C1577 -
            (((C24663 * C2598 + C25072 + C25072 + C50531 * C2604 +
               C24661 * C2597 + C25073 + C25073 + C50785 * C2603) *
                  C50753 +
              (C25635 + C25634) * C33816) *
                 C50727 +
             ((C28019 + C28018) * C50753 + C28693 * C33816) * C50813) *
                C50655) *
               C50627) *
              C50562)) /
        (p * q * std::sqrt(p + q));
    d2ee[161] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
              C24667 + C24667 + C50531 * C140) *
                 C33816 +
             (C28010 + C28011) * C50753) *
                C50813 +
            ((C24892 + C24893) * C33816 + C28690 * C50753) * C50727) *
               C50847 -
           ((C29212 * C50753 + C28691 * C33816) * C50727 +
            ((C28012 + C28013) * C50753 + (C28011 + C28010) * C33816) *
                C50813) *
               C50848 +
           (((C28013 + C28012) * C33816 + (C30401 + C30402) * C50753) * C50813 +
            (C29213 * C33816 + (C29222 + C29223) * C50753) * C50727) *
               C1993) *
              C50800 +
          (((C28690 * C33816 + C29213 * C50753) * C50813 +
            (C29870 * C33816 + (C26060 + C26061) * C50753) * C50727) *
               C50848 -
           ((C26548 * C50753 + (C24895 + C24894) * C33816) * C50727 +
            (C28691 * C50753 + (C24893 + C24892) * C33816) * C50813) *
               C50847 -
           (((C24663 * C4530 + C26952 + C26952 + C50531 * C4538 +
              C24661 * C4531 + C26953 + C26953 + C50785 * C4539) *
                 C50753 +
             (C26061 + C26060) * C33816) *
                C50727 +
            ((C29223 + C29222) * C50753 + C29212 * C33816) * C50813) *
               C1993) *
              C50627) *
         C50556) /
        (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
              C24667 + C24667 + C50531 * C140) *
                 C33816 +
             (C28010 + C28011) * C50753) *
                C50813 +
            ((C24892 + C24893) * C33816 + C28690 * C50753) * C50727) *
               C1577 -
           ((C29212 * C50753 + C28691 * C33816) * C50727 +
            ((C28012 + C28013) * C50753 + (C28011 + C28010) * C33816) *
                C50813) *
               C50655) *
              C260 +
          (((C28690 * C33816 + C29213 * C50753) * C50813 +
            (C29870 * C33816 + (C26060 + C26061) * C50753) * C50727) *
               C50655 -
           ((C26548 * C50753 + (C24895 + C24894) * C33816) * C50727 +
            (C28691 * C50753 + (C24893 + C24892) * C33816) * C50813) *
               C1577) *
              C261 +
          (((C24904 * C33816 + C29870 * C50753) * C50813 +
            ((C24897 + C24896) * C33816 + (C26560 + C26561) * C50753) *
                C50727) *
               C1577 -
           (((C24663 * C3606 + C26048 + C26048 + C50531 * C3610 +
              C24661 * C3607 + C26049 + C26049 + C50785 * C3611) *
                 C50753 +
             (C26561 + C26560) * C33816) *
                C50727 +
            ((C26061 + C26060) * C50753 + C26548 * C33816) * C50813) *
               C50655) *
              C262) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
              C24667 + C24667 + C50531 * C140) *
                 C33816 +
             (C28010 + C28011) * C50753) *
                C50813 +
            ((C24892 + C24893) * C33816 + C28690 * C50753) * C50727) *
               C1577 -
           ((C29212 * C50753 + C28691 * C33816) * C50727 +
            ((C28012 + C28013) * C50753 + (C28011 + C28010) * C33816) *
                C50813) *
               C50655) *
              C50575 * C928 +
          ((((C28014 + C28015) * C33816 + (C28016 + C28017) * C50753) * C50813 +
            (C28692 * C33816 + (C28018 + C28019) * C50753) * C50727) *
               C50655 -
           ((C28693 * C50753 + (C24899 + C24898) * C33816) * C50727 +
            ((C28015 + C28014) * C50753 +
             (C24663 * C127 + C24676 + C24676 + C50531 * C141 + C24661 * C126 +
              C24677 + C24677 + C50785 * C140) *
                 C33816) *
                C50813) *
               C1577) *
              C50575 * C929 +
          ((((C24661 * C127 + C24678 + C24678 + C50785 * C141 + C24663 * C128 +
              C24679 + C24679 + C50531 * C142) *
                 C33816 +
             (C28430 + C28431) * C50753) *
                C50813 +
            ((C25242 + C25243) * C33816 + (C28222 + C28223) * C50753) *
                C50727) *
               C1577 -
           (((C24663 * C1116 + C28422 + C28422 + C50531 * C1124 +
              C24661 * C1117 + C28423 + C28423 + C50785 * C1125) *
                 C50753 +
             (C28223 + C28222) * C33816) *
                C50727 +
            ((C24663 * C419 + C28424 + C28424 + C50531 * C439 + C24661 * C418 +
              C28425 + C28425 + C50785 * C438) *
                 C50753 +
             (C28431 + C28430) * C33816) *
                C50813) *
               C50655) *
              C50575 * C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
             C24667 + C24667 + C50531 * C140) *
                C33816 +
            (C28010 + C28011) * C50753) *
               C50813 +
           ((C24892 + C24893) * C33816 + C28690 * C50753) * C50727) *
              C1743 -
          ((C29212 * C50753 + C28691 * C33816) * C50727 +
           ((C28012 + C28013) * C50753 + (C28011 + C28010) * C33816) * C50813) *
              C1744 +
          (((C28013 + C28012) * C33816 + (C30401 + C30402) * C50753) * C50813 +
           (C29213 * C33816 + (C29222 + C29223) * C50753) * C50727) *
              C1745 -
          (((C24663 * C6425 + C30393 + C30393 + C50531 * C6429 +
             C24661 * C6426 + C30394 + C30394 + C50785 * C6430) *
                C50753 +
            (C29223 + C29222) * C33816) *
               C50727 +
           ((C24663 * C5434 + C30395 + C30395 + C50531 * C5440 +
             C24661 * C5433 + C30396 + C30396 + C50785 * C5439) *
                C50753 +
            (C30402 + C30401) * C33816) *
               C50813) *
              C1746) *
         C50575 * C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[163] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
              C24667 + C24667 + C50531 * C140) *
                 C33816 +
             (C28010 + C28011) * C50753) *
                C50813 +
            ((C24892 + C24893) * C33816 + C28690 * C50753) * C50727) *
               C50847 -
           ((C29212 * C50753 + C28691 * C33816) * C50727 +
            ((C28012 + C28013) * C50753 + (C28011 + C28010) * C33816) *
                C50813) *
               C50848 +
           (((C28013 + C28012) * C33816 + (C30401 + C30402) * C50753) * C50813 +
            (C29213 * C33816 + (C29222 + C29223) * C50753) * C50727) *
               C1993) *
              C50575 * C50792 +
          ((((C28014 + C28015) * C33816 + (C28016 + C28017) * C50753) * C50813 +
            (C28692 * C33816 + (C28018 + C28019) * C50753) * C50727) *
               C50848 -
           ((C28693 * C50753 + (C24899 + C24898) * C33816) * C50727 +
            ((C28015 + C28014) * C50753 +
             (C24663 * C127 + C24676 + C24676 + C50531 * C141 + C24661 * C126 +
              C24677 + C24677 + C50785 * C140) *
                 C33816) *
                C50813) *
               C50847 -
           (((C24663 * C6020 + C27986 + C27986 + C50531 * C6022 +
              C24661 * C4532 + C27987 + C27987 + C50785 * C4540) *
                 C50753 +
             (C28019 + C28018) * C33816) *
                C50727 +
            ((C24663 * C1748 + C27988 + C27988 + C50531 * C1756 +
              C24661 * C1749 + C27989 + C27989 + C50785 * C1757) *
                 C50753 +
             (C28017 + C28016) * C33816) *
                C50813) *
               C1993) *
              C50575 * C50562)) /
        (p * q * std::sqrt(p + q));
    d2ee[164] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
              C24667 + C24667 + C50531 * C140) *
                 C33816 +
             (C28010 + C28011) * C50753) *
                C50813 +
            ((C24892 + C24893) * C33816 + C28690 * C50753) * C50727) *
               C1577 -
           ((C29212 * C50753 + C28691 * C33816) * C50727 +
            ((C28012 + C28013) * C50753 + (C28011 + C28010) * C33816) *
                C50813) *
               C50655) *
              C50575 * C928 +
          ((((C28014 + C28015) * C33816 + (C28016 + C28017) * C50753) * C50813 +
            (C28692 * C33816 + (C28018 + C28019) * C50753) * C50727) *
               C50655 -
           ((C28693 * C50753 + (C24899 + C24898) * C33816) * C50727 +
            ((C28015 + C28014) * C50753 +
             (C24663 * C127 + C24676 + C24676 + C50531 * C141 + C24661 * C126 +
              C24677 + C24677 + C50785 * C140) *
                 C33816) *
                C50813) *
               C1577) *
              C50575 * C929 +
          ((((C24661 * C127 + C24678 + C24678 + C50785 * C141 + C24663 * C128 +
              C24679 + C24679 + C50531 * C142) *
                 C33816 +
             (C28430 + C28431) * C50753) *
                C50813 +
            ((C25242 + C25243) * C33816 + (C28222 + C28223) * C50753) *
                C50727) *
               C1577 -
           (((C24663 * C1116 + C28422 + C28422 + C50531 * C1124 +
              C24661 * C1117 + C28423 + C28423 + C50785 * C1125) *
                 C50753 +
             (C28223 + C28222) * C33816) *
                C50727 +
            ((C24663 * C419 + C28424 + C28424 + C50531 * C439 + C24661 * C418 +
              C28425 + C28425 + C50785 * C438) *
                 C50753 +
             (C28431 + C28430) * C33816) *
                C50813) *
               C50655) *
              C50575 * C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
              C24667 + C24667 + C50531 * C140) *
                 C33816 +
             (C28010 + C28011) * C50753) *
                C50813 +
            ((C24892 + C24893) * C33816 + C28690 * C50753) * C50727) *
               C1577 -
           ((C29212 * C50753 + C28691 * C33816) * C50727 +
            ((C28012 + C28013) * C50753 + (C28011 + C28010) * C33816) *
                C50813) *
               C50655) *
              C260 +
          (((C28690 * C33816 + C29213 * C50753) * C50813 +
            (C29870 * C33816 + (C26060 + C26061) * C50753) * C50727) *
               C50655 -
           ((C26548 * C50753 + (C24895 + C24894) * C33816) * C50727 +
            (C28691 * C50753 + (C24893 + C24892) * C33816) * C50813) *
               C1577) *
              C261 +
          (((C24904 * C33816 + C29870 * C50753) * C50813 +
            ((C24897 + C24896) * C33816 + (C26560 + C26561) * C50753) *
                C50727) *
               C1577 -
           (((C24663 * C3606 + C26048 + C26048 + C50531 * C3610 +
              C24661 * C3607 + C26049 + C26049 + C50785 * C3611) *
                 C50753 +
             (C26561 + C26560) * C33816) *
                C50727 +
            ((C26061 + C26060) * C50753 + C26548 * C33816) * C50813) *
               C50655) *
              C262) *
         C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[165] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50851 +
             C22247 * C50852 + C22248 * C44496) *
                C50813 +
            (C47313 + C47314 + C47315) * C50727) *
               C50591 * C50800 -
           ((C47316 + C47317 + C47318) * C50727 +
            (C47315 + C47314 + C47313) * C50813) *
               C50591 * C50627) *
              C50843 +
          (((C47319 + C47320 + C47321) * C50813 +
            (C47322 + C47323 + C47324) * C50727) *
               C50591 * C50627 -
           ((C47321 + C47320 + C47319) * C50727 +
            (C22252 * C44496 + C22251 * C50852 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50851) *
                C50813) *
               C50591 * C50800) *
              C50844 +
          ((((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C50851 +
             C22571 * C50852 + C22572 * C44496) *
                C50813 +
            (C47617 + C47618 + C47619) * C50727) *
               C50591 * C50800 -
           (((C19896 * C2598 + C22406 + C22406 + C50526 * C2604) * C44496 +
             C31607 * C50852 + C20291 * C50851) *
                C50727 +
            (C47619 + C47618 + C47617) * C50813) *
               C50591 * C50627) *
              C560)) /
        (p * q * std::sqrt(p + q));
    d2ee[166] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50851 +
              C22247 * C50852 + C22248 * C44496) *
                 C50813 +
             (C47313 + C47314 + C47315) * C50727) *
                C50801 -
            ((C47960 + C47961 + C47962) * C50727 +
             (C22250 * C44496 + C22248 * C50852 + C22247 * C50851) * C50813) *
                C50655) *
               C50800 +
           (((C47962 + C47961 + C47960) * C50813 +
             (C20555 * C50851 + C20855 * C50852 + C23182 * C44496) * C50727) *
                C50655 -
            ((C47316 + C47317 + C47318) * C50727 +
             (C47315 + C47314 + C47313) * C50813) *
                C50801) *
               C50627) *
              C263 +
          ((((C22251 * C50851 + C22252 * C50852 + C22253 * C44496) * C50813 +
             (C47963 + C47964 + C47965) * C50727) *
                C50655 -
            ((C47321 + C47320 + C47319) * C50727 +
             (C22252 * C44496 + C22251 * C50852 +
              (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50851) *
                 C50813) *
                C50801) *
               C50800 +
           (((C47319 + C47320 + C47321) * C50813 +
             (C47322 + C47323 + C47324) * C50727) *
                C50801 -
            (((C19896 * C4530 + C22773 + C22773 + C50526 * C4538) * C44496 +
              C22060 * C50852 + C20558 * C50851) *
                 C50727 +
             (C47965 + C47964 + C47963) * C50813) *
                C50655) *
               C50627) *
              C50562)) /
        (p * q * std::sqrt(p + q));
    d2ee[167] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50851 +
             C22247 * C50852 + C22248 * C44496) *
                C50813 +
            (C47313 + C47314 + C47315) * C50727) *
               C50591 * C260 -
           ((C47316 + C47317 + C47318) * C50727 +
            (C47315 + C47314 + C47313) * C50813) *
               C50591 * C261 +
           ((C47318 + C47317 + C47316) * C50813 +
            (C20051 * C50851 + C20554 * C50852 + C20856 * C44496) * C50727) *
               C50591 * C262) *
              C263 +
          (((C47319 + C47320 + C47321) * C50813 +
            (C47322 + C47323 + C47324) * C50727) *
               C50591 * C261 -
           ((C47321 + C47320 + C47319) * C50727 +
            (C22252 * C44496 + C22251 * C50852 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50851) *
                C50813) *
               C50591 * C260 -
           (((C19896 * C3606 + C20175 + C20175 + C50526 * C3610) * C44496 +
             C20559 * C50852 + C20055 * C50851) *
                C50727 +
            (C47324 + C47323 + C47322) * C50813) *
               C50591 * C262) *
              C50562)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50851 +
            C22247 * C50852 + C22248 * C44496) *
               C50813 +
           (C20049 * C50851 + C20556 * C50852 + C20854 * C44496) * C50727) *
              C50591 * C50575 * C113 -
          ((C22059 * C44496 + C20557 * C50852 + C20053 * C50851) * C50727 +
           (C22252 * C44496 + C22251 * C50852 +
            (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50851) *
               C50813) *
              C50591 * C50575 * C114 +
          (((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C50851 +
            C22571 * C50852 + C22572 * C44496) *
               C50813 +
           (C20290 * C50851 + C22411 * C50852 + C22412 * C44496) * C50727) *
              C50591 * C50575 * C115 -
          (((C19896 * C1116 + C21891 + C21891 + C50526 * C1124) * C44496 +
            (C19896 * C808 + C21892 + C21892 + C50526 * C818) * C50852 +
            (C19896 * C265 + C19913 + C19913 + C50526 * C285) * C50851) *
               C50727 +
           ((C19896 * C419 + C21893 + C21893 + C50526 * C439) * C44496 +
            (C19896 * C412 + C21894 + C21894 + C50526 * C432) * C50852 +
            (C19896 * C128 + C19914 + C19914 + C50526 * C142) * C50851) *
               C50813) *
              C50591 * C50575 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50851 +
             C22247 * C50852 + C22248 * C44496) *
                C50813 +
            (C47313 + C47314 + C47315) * C50727) *
               C409 -
           ((C22249 * C44496 + C20854 * C50852 + C20556 * C50851) * C50727 +
            (C22250 * C44496 + C22248 * C50852 + C22247 * C50851) * C50813) *
               C410 +
           ((C22248 * C50851 + C22250 * C50852 + C24072 * C44496) * C50813 +
            (C20854 * C50851 + C22249 * C50852 + C23181 * C44496) * C50727) *
               C411) *
              C50575 * C263 +
          (((C22251 * C50851 + C22252 * C50852 + C22253 * C44496) * C50813 +
            (C20557 * C50851 + C22059 * C50852 + C22254 * C44496) * C50727) *
               C410 -
           ((C47321 + C47320 + C47319) * C50727 +
            (C22252 * C44496 + C22251 * C50852 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50851) *
                C50813) *
               C409 -
           (((C19896 * C6425 + C22229 + C22229 + C50526 * C6429) * C44496 +
             C22254 * C50852 + C22059 * C50851) *
                C50727 +
            (C39387 * C44496 + C22253 * C50852 + C22252 * C50851) * C50813) *
               C411) *
              C50575 * C50562)) /
            (p * q * std::sqrt(p + q));
    d2ee[168] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50851 +
             C22247 * C50852 + C22248 * C44496) *
                C50813 +
            (C47313 + C47314 + C47315) * C50727) *
               C50801 -
           ((C22249 * C44496 + C20854 * C50852 + C20556 * C50851) * C50727 +
            (C22250 * C44496 + C22248 * C50852 + C22247 * C50851) * C50813) *
               C50655) *
              C50575 * C50843 +
          (((C22251 * C50851 + C22252 * C50852 + C22253 * C44496) * C50813 +
            (C20557 * C50851 + C22059 * C50852 + C22254 * C44496) * C50727) *
               C50655 -
           ((C47321 + C47320 + C47319) * C50727 +
            (C22252 * C44496 + C22251 * C50852 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50851) *
                C50813) *
               C50801) *
              C50575 * C50844 +
          ((((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C50851 +
             C22571 * C50852 + C22572 * C44496) *
                C50813 +
            (C47617 + C47618 + C47619) * C50727) *
               C50801 -
           (((C19896 * C6020 + C22565 + C22565 + C50526 * C6022) * C44496 +
             C22412 * C50852 + C22411 * C50851) *
                C50727 +
            (C39589 * C44496 + C22572 * C50852 + C22571 * C50851) * C50813) *
               C50655) *
              C50575 * C560)) /
        (p * q * std::sqrt(p + q));
    d2ee[169] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50851 +
            C22247 * C50852 + C22248 * C44496) *
               C50813 +
           (C20049 * C50851 + C20556 * C50852 + C20854 * C44496) * C50727) *
              C50591 * C50575 * C113 -
          ((C22059 * C44496 + C20557 * C50852 + C20053 * C50851) * C50727 +
           (C22252 * C44496 + C22251 * C50852 +
            (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50851) *
               C50813) *
              C50591 * C50575 * C114 +
          (((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C50851 +
            C22571 * C50852 + C22572 * C44496) *
               C50813 +
           (C20290 * C50851 + C22411 * C50852 + C22412 * C44496) * C50727) *
              C50591 * C50575 * C115 -
          (((C19896 * C1116 + C21891 + C21891 + C50526 * C1124) * C44496 +
            (C19896 * C808 + C21892 + C21892 + C50526 * C818) * C50852 +
            (C19896 * C265 + C19913 + C19913 + C50526 * C285) * C50851) *
               C50727 +
           ((C19896 * C419 + C21893 + C21893 + C50526 * C439) * C44496 +
            (C19896 * C412 + C21894 + C21894 + C50526 * C432) * C50852 +
            (C19896 * C128 + C19914 + C19914 + C50526 * C142) * C50851) *
               C50813) *
              C50591 * C50575 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50851 +
             C22247 * C50852 + C22248 * C44496) *
                C50813 +
            (C47313 + C47314 + C47315) * C50727) *
               C50591 * C260 -
           ((C47316 + C47317 + C47318) * C50727 +
            (C47315 + C47314 + C47313) * C50813) *
               C50591 * C261 +
           ((C47318 + C47317 + C47316) * C50813 +
            (C20051 * C50851 + C20554 * C50852 + C20856 * C44496) * C50727) *
               C50591 * C262) *
              C263 +
          (((C47319 + C47320 + C47321) * C50813 +
            (C47322 + C47323 + C47324) * C50727) *
               C50591 * C261 -
           ((C47321 + C47320 + C47319) * C50727 +
            (C22252 * C44496 + C22251 * C50852 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50851) *
                C50813) *
               C50591 * C260 -
           (((C19896 * C3606 + C20175 + C20175 + C50526 * C3610) * C44496 +
             C20559 * C50852 + C20055 * C50851) *
                C50727 +
            (C47324 + C47323 + C47322) * C50813) *
               C50591 * C262) *
              C50562)) /
            (p * q * std::sqrt(p + q));
    d2ee[170] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50851 +
             C22247 * C50852 + C22248 * C44496) *
                C50813 +
            (C47313 + C47314 + C47315) * C50727) *
               C50591 * C50845 -
           ((C47316 + C47317 + C47318) * C50727 +
            (C47315 + C47314 + C47313) * C50813) *
               C50591 * C50846 +
           ((C47318 + C47317 + C47316) * C50813 +
            (C48210 + C48211 + C48212) * C50727) *
               C50591 * C1232) *
              C50792 +
          (((C47319 + C47320 + C47321) * C50813 +
            (C47322 + C47323 + C47324) * C50727) *
               C50591 * C50846 -
           ((C47321 + C47320 + C47319) * C50727 +
            (C22252 * C44496 + C22251 * C50852 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50851) *
                C50813) *
               C50591 * C50845 -
           (((C19896 * C3606 + C20175 + C20175 + C50526 * C3610) * C44496 +
             C20559 * C50852 + C20055 * C50851) *
                C50727 +
            (C47324 + C47323 + C47322) * C50813) *
               C50591 * C1232) *
              C50562)) /
        (p * q * std::sqrt(p + q));
    d2ee[171] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50851 +
             C22247 * C50852 + C22248 * C44496) *
                C50813 +
            (C47313 + C47314 + C47315) * C50727) *
               C50801 -
           ((C47960 + C47961 + C47962) * C50727 +
            (C22250 * C44496 + C22248 * C50852 + C22247 * C50851) * C50813) *
               C50655) *
              C50845 +
          (((C47962 + C47961 + C47960) * C50813 +
            (C48848 + C48849 + C48850) * C50727) *
               C50655 -
           ((C47316 + C47317 + C47318) * C50727 +
            (C47315 + C47314 + C47313) * C50813) *
               C50801) *
              C50846 +
          (((C47318 + C47317 + C47316) * C50813 +
            (C48210 + C48211 + C48212) * C50727) *
               C50801 -
           (((C19896 * C21457 + C21461 + C21461 + C50526 * C21459) * C44496 +
             C20856 * C50852 + C20554 * C50851) *
                C50727 +
            (C48850 + C48849 + C48848) * C50813) *
               C50655) *
              C1232) *
         C50556) /
        (p * q * std::sqrt(p + q));
    d2ee[172] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50851 +
            C22247 * C50852 + C22248 * C44496) *
               C50813 +
           (C47313 + C47314 + C47315) * C50727) *
              C50591 * C997 -
          ((C47316 + C47317 + C47318) * C50727 +
           (C47315 + C47314 + C47313) * C50813) *
              C50591 * C998 +
          ((C47318 + C47317 + C47316) * C50813 +
           (C48210 + C48211 + C48212) * C50727) *
              C50591 * C999 -
          (((C19896 * C20837 + C20847 + C20847 + C50526 * C20839) * C44496 +
            C21194 * C50852 + C20052 * C50851) *
               C50727 +
           (C48212 + C48211 + C48210) * C50813) *
              C50591 * C1000) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50851 +
             C22247 * C50852 + C22248 * C44496) *
                C50813 +
            (C47313 + C47314 + C47315) * C50727) *
               C50591 * C926 -
           ((C47316 + C47317 + C47318) * C50727 +
            (C47315 + C47314 + C47313) * C50813) *
               C50591 * C50627) *
              C928 +
          (((C47319 + C47320 + C47321) * C50813 +
            (C47322 + C47323 + C47324) * C50727) *
               C50591 * C50627 -
           ((C47321 + C47320 + C47319) * C50727 +
            (C22252 * C44496 + C22251 * C50852 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50851) *
                C50813) *
               C50591 * C926) *
              C929 +
          ((((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C50851 +
             C22571 * C50852 + C22572 * C44496) *
                C50813 +
            (C47617 + C47618 + C47619) * C50727) *
               C50591 * C926 -
           (((C19896 * C2598 + C22406 + C22406 + C50526 * C2604) * C44496 +
             C31607 * C50852 + C20291 * C50851) *
                C50727 +
            (C47619 + C47618 + C47617) * C50813) *
               C50591 * C50627) *
              C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50851 +
             C22247 * C50852 + C22248 * C44496) *
                C50813 +
            (C47313 + C47314 + C47315) * C50727) *
               C409 -
           ((C47960 + C47961 + C47962) * C50727 +
            (C22250 * C44496 + C22248 * C50852 + C22247 * C50851) * C50813) *
               C410 +
           ((C22248 * C50851 + C22250 * C50852 + C24072 * C44496) * C50813 +
            (C48359 + C48360 + C48361) * C50727) *
               C411) *
              C926 +
          (((C47962 + C47961 + C47960) * C50813 +
            (C20555 * C50851 + C20855 * C50852 + C23182 * C44496) * C50727) *
               C410 -
           ((C47316 + C47317 + C47318) * C50727 +
            (C47315 + C47314 + C47313) * C50813) *
               C409 -
           (((C19896 * C23166 + C23176 + C23176 + C50526 * C23168) * C44496 +
             C23182 * C50852 + C20855 * C50851) *
                C50727 +
            (C48361 + C48360 + C48359) * C50813) *
               C411) *
              C50627) *
         C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[173] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50851 +
              C22247 * C50852 + C22248 * C44496) *
                 C50813 +
             (C47313 + C47314 + C47315) * C50727) *
                C50801 -
            ((C47960 + C47961 + C47962) * C50727 +
             (C22250 * C44496 + C22248 * C50852 + C22247 * C50851) * C50813) *
                C50655) *
               C926 +
           (((C47962 + C47961 + C47960) * C50813 +
             (C20555 * C50851 + C20855 * C50852 + C23182 * C44496) * C50727) *
                C50655 -
            ((C47316 + C47317 + C47318) * C50727 +
             (C47315 + C47314 + C47313) * C50813) *
                C50801) *
               C50627) *
              C50792 +
          ((((C22251 * C50851 + C22252 * C50852 + C22253 * C44496) * C50813 +
             (C47963 + C47964 + C47965) * C50727) *
                C50655 -
            ((C47321 + C47320 + C47319) * C50727 +
             (C22252 * C44496 + C22251 * C50852 +
              (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50851) *
                 C50813) *
                C50801) *
               C926 +
           (((C47319 + C47320 + C47321) * C50813 +
             (C47322 + C47323 + C47324) * C50727) *
                C50801 -
            (((C19896 * C4530 + C22773 + C22773 + C50526 * C4538) * C44496 +
              C22060 * C50852 + C20558 * C50851) *
                 C50727 +
             (C47965 + C47964 + C47963) * C50813) *
                C50655) *
               C50627) *
              C50562)) /
        (p * q * std::sqrt(p + q));
    d2ee[174] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50851 +
             C22247 * C50852 + C22248 * C44496) *
                C50813 +
            (C47313 + C47314 + C47315) * C50727) *
               C50591 * C926 -
           ((C47316 + C47317 + C47318) * C50727 +
            (C47315 + C47314 + C47313) * C50813) *
               C50591 * C50627) *
              C928 +
          (((C47319 + C47320 + C47321) * C50813 +
            (C47322 + C47323 + C47324) * C50727) *
               C50591 * C50627 -
           ((C47321 + C47320 + C47319) * C50727 +
            (C22252 * C44496 + C22251 * C50852 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50851) *
                C50813) *
               C50591 * C926) *
              C929 +
          ((((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C50851 +
             C22571 * C50852 + C22572 * C44496) *
                C50813 +
            (C47617 + C47618 + C47619) * C50727) *
               C50591 * C926 -
           (((C19896 * C2598 + C22406 + C22406 + C50526 * C2604) * C44496 +
             C31607 * C50852 + C20291 * C50851) *
                C50727 +
            (C47619 + C47618 + C47617) * C50813) *
               C50591 * C50627) *
              C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50851 +
            C22247 * C50852 + C22248 * C44496) *
               C50813 +
           (C47313 + C47314 + C47315) * C50727) *
              C50591 * C997 -
          ((C47316 + C47317 + C47318) * C50727 +
           (C47315 + C47314 + C47313) * C50813) *
              C50591 * C998 +
          ((C47318 + C47317 + C47316) * C50813 +
           (C48210 + C48211 + C48212) * C50727) *
              C50591 * C999 -
          (((C19896 * C20837 + C20847 + C20847 + C50526 * C20839) * C44496 +
            C21194 * C50852 + C20052 * C50851) *
               C50727 +
           (C48212 + C48211 + C48210) * C50813) *
              C50591 * C1000) *
         C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[175] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50851 +
              C22247 * C50852 + C22248 * C44496) *
                 C50813 +
             (C47313 + C47314 + C47315) * C50727) *
                C1577 -
            ((C47960 + C47961 + C47962) * C50727 +
             (C22250 * C44496 + C22248 * C50852 + C22247 * C50851) * C50813) *
                C50655) *
               C50800 +
           (((C47962 + C47961 + C47960) * C50813 +
             (C48848 + C48849 + C48850) * C50727) *
                C50655 -
            ((C47316 + C47317 + C47318) * C50727 +
             (C47315 + C47314 + C47313) * C50813) *
                C1577) *
               C50627) *
              C50792 +
          ((((C22251 * C50851 + C22252 * C50852 + C22253 * C44496) * C50813 +
             (C47963 + C47964 + C47965) * C50727) *
                C50655 -
            ((C47321 + C47320 + C47319) * C50727 +
             (C22252 * C44496 + C22251 * C50852 +
              (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50851) *
                 C50813) *
                C1577) *
               C50800 +
           (((C47319 + C47320 + C47321) * C50813 +
             (C47322 + C47323 + C47324) * C50727) *
                C1577 -
            (((C19896 * C4530 + C22773 + C22773 + C50526 * C4538) * C44496 +
              C22060 * C50852 + C20558 * C50851) *
                 C50727 +
             (C47965 + C47964 + C47963) * C50813) *
                C50655) *
               C50627) *
              C50562)) /
        (p * q * std::sqrt(p + q));
    d2ee[176] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50851 +
             C22247 * C50852 + C22248 * C44496) *
                C50813 +
            (C47313 + C47314 + C47315) * C50727) *
               C50847 -
           ((C47960 + C47961 + C47962) * C50727 +
            (C22250 * C44496 + C22248 * C50852 + C22247 * C50851) * C50813) *
               C50848 +
           ((C22248 * C50851 + C22250 * C50852 + C24072 * C44496) * C50813 +
            (C48359 + C48360 + C48361) * C50727) *
               C1993) *
              C50800 +
          (((C47962 + C47961 + C47960) * C50813 +
            (C48848 + C48849 + C48850) * C50727) *
               C50848 -
           ((C47316 + C47317 + C47318) * C50727 +
            (C47315 + C47314 + C47313) * C50813) *
               C50847 -
           (((C19896 * C23166 + C23176 + C23176 + C50526 * C23168) * C44496 +
             C23182 * C50852 + C20855 * C50851) *
                C50727 +
            (C48361 + C48360 + C48359) * C50813) *
               C1993) *
              C50627) *
         C50556) /
        (p * q * std::sqrt(p + q));
    d2ee[177] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50851 +
             C22247 * C50852 + C22248 * C44496) *
                C50813 +
            (C47313 + C47314 + C47315) * C50727) *
               C1577 -
           ((C47960 + C47961 + C47962) * C50727 +
            (C22250 * C44496 + C22248 * C50852 + C22247 * C50851) * C50813) *
               C50655) *
              C260 +
          (((C47962 + C47961 + C47960) * C50813 +
            (C48848 + C48849 + C48850) * C50727) *
               C50655 -
           ((C47316 + C47317 + C47318) * C50727 +
            (C47315 + C47314 + C47313) * C50813) *
               C1577) *
              C261 +
          (((C47318 + C47317 + C47316) * C50813 +
            (C48210 + C48211 + C48212) * C50727) *
               C1577 -
           (((C19896 * C21457 + C21461 + C21461 + C50526 * C21459) * C44496 +
             C20856 * C50852 + C20554 * C50851) *
                C50727 +
            (C48850 + C48849 + C48848) * C50813) *
               C50655) *
              C262) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50851 +
             C22247 * C50852 + C22248 * C44496) *
                C50813 +
            (C47313 + C47314 + C47315) * C50727) *
               C1577 -
           ((C47960 + C47961 + C47962) * C50727 +
            (C22250 * C44496 + C22248 * C50852 + C22247 * C50851) * C50813) *
               C50655) *
              C50575 * C928 +
          (((C22251 * C50851 + C22252 * C50852 + C22253 * C44496) * C50813 +
            (C47963 + C47964 + C47965) * C50727) *
               C50655 -
           ((C47321 + C47320 + C47319) * C50727 +
            (C22252 * C44496 + C22251 * C50852 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50851) *
                C50813) *
               C1577) *
              C50575 * C929 +
          ((((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C50851 +
             C22571 * C50852 + C22572 * C44496) *
                C50813 +
            (C47617 + C47618 + C47619) * C50727) *
               C1577 -
           (((C19896 * C6020 + C22565 + C22565 + C50526 * C6022) * C44496 +
             C22412 * C50852 + C22411 * C50851) *
                C50727 +
            (C39589 * C44496 + C22572 * C50852 + C22571 * C50851) * C50813) *
               C50655) *
              C50575 * C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50851 +
            C22247 * C50852 + C22248 * C44496) *
               C50813 +
           (C47313 + C47314 + C47315) * C50727) *
              C1743 -
          ((C47960 + C47961 + C47962) * C50727 +
           (C22250 * C44496 + C22248 * C50852 + C22247 * C50851) * C50813) *
              C1744 +
          ((C22248 * C50851 + C22250 * C50852 + C24072 * C44496) * C50813 +
           (C48359 + C48360 + C48361) * C50727) *
              C1745 -
          (((C19896 * C24062 + C24068 + C24068 + C50526 * C24064) * C44496 +
            C23181 * C50852 + C22249 * C50851) *
               C50727 +
           (C40578 * C44496 + C24072 * C50852 + C22250 * C50851) * C50813) *
              C1746) *
         C50575 * C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[178] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50851 +
             C22247 * C50852 + C22248 * C44496) *
                C50813 +
            (C47313 + C47314 + C47315) * C50727) *
               C50847 -
           ((C47960 + C47961 + C47962) * C50727 +
            (C22250 * C44496 + C22248 * C50852 + C22247 * C50851) * C50813) *
               C50848 +
           ((C22248 * C50851 + C22250 * C50852 + C24072 * C44496) * C50813 +
            (C48359 + C48360 + C48361) * C50727) *
               C1993) *
              C50575 * C50792 +
          (((C22251 * C50851 + C22252 * C50852 + C22253 * C44496) * C50813 +
            (C47963 + C47964 + C47965) * C50727) *
               C50848 -
           ((C47321 + C47320 + C47319) * C50727 +
            (C22252 * C44496 + C22251 * C50852 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50851) *
                C50813) *
               C50847 -
           (((C19896 * C6425 + C22229 + C22229 + C50526 * C6429) * C44496 +
             C22254 * C50852 + C22059 * C50851) *
                C50727 +
            (C39387 * C44496 + C22253 * C50852 + C22252 * C50851) * C50813) *
               C1993) *
              C50575 * C50562)) /
        (p * q * std::sqrt(p + q));
    d2ee[179] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50851 +
             C22247 * C50852 + C22248 * C44496) *
                C50813 +
            (C47313 + C47314 + C47315) * C50727) *
               C1577 -
           ((C47960 + C47961 + C47962) * C50727 +
            (C22250 * C44496 + C22248 * C50852 + C22247 * C50851) * C50813) *
               C50655) *
              C50575 * C928 +
          (((C22251 * C50851 + C22252 * C50852 + C22253 * C44496) * C50813 +
            (C47963 + C47964 + C47965) * C50727) *
               C50655 -
           ((C47321 + C47320 + C47319) * C50727 +
            (C22252 * C44496 + C22251 * C50852 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C50851) *
                C50813) *
               C1577) *
              C50575 * C929 +
          ((((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C50851 +
             C22571 * C50852 + C22572 * C44496) *
                C50813 +
            (C47617 + C47618 + C47619) * C50727) *
               C1577 -
           (((C19896 * C6020 + C22565 + C22565 + C50526 * C6022) * C44496 +
             C22412 * C50852 + C22411 * C50851) *
                C50727 +
            (C39589 * C44496 + C22572 * C50852 + C22571 * C50851) * C50813) *
               C50655) *
              C50575 * C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C50851 +
             C22247 * C50852 + C22248 * C44496) *
                C50813 +
            (C47313 + C47314 + C47315) * C50727) *
               C1577 -
           ((C47960 + C47961 + C47962) * C50727 +
            (C22250 * C44496 + C22248 * C50852 + C22247 * C50851) * C50813) *
               C50655) *
              C260 +
          (((C47962 + C47961 + C47960) * C50813 +
            (C48848 + C48849 + C48850) * C50727) *
               C50655 -
           ((C47316 + C47317 + C47318) * C50727 +
            (C47315 + C47314 + C47313) * C50813) *
               C1577) *
              C261 +
          (((C47318 + C47317 + C47316) * C50813 +
            (C48210 + C48211 + C48212) * C50727) *
               C1577 -
           (((C19896 * C21457 + C21461 + C21461 + C50526 * C21459) * C44496 +
             C20856 * C50852 + C20554 * C50851) *
                C50727 +
            (C48850 + C48849 + C48848) * C50813) *
               C50655) *
              C262) *
         C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[180] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C33816 +
             C22247 * C50753) *
                C2192 +
            (C36695 + C36696) * C2193 + C36707 * C2194) *
               C50591 * C50800 -
           ((C36699 + C36700) * C2194 + (C36698 + C36697) * C2193 +
            (C36696 + C36695) * C2192) *
               C50591 * C50627) *
              C50843 +
          (((C36701 + C36702) * C2192 + (C36703 + C36704) * C2193 +
            (C36705 + C36706) * C2194) *
               C50591 * C50627 -
           (C36708 * C2194 + (C36702 + C36701) * C2193 +
            (C22251 * C50753 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C33816) *
                C2192) *
               C50591 * C50800) *
              C50844 +
          ((((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C33816 +
             C22571 * C50753) *
                C2192 +
            (C37001 + C37002) * C2193 + (C37003 + C37004) * C2194) *
               C50591 * C50800 -
           (((C19896 * C3145 + C20394 + C20394 + C50526 * C3151) * C50753 +
             C20292 * C33816) *
                C2194 +
            (C37004 + C37003) * C2193 + (C37002 + C37001) * C2192) *
               C50591 * C50627) *
              C560)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
             C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
             C17046 * C141) *
                C33816 +
            (C34165 + C34166 + C34167) * C50753) *
               C50677 * C50591 * C50800 -
           ((C18008 + C18009 + C18010) * C50753 +
            (C17288 + C17287 + C17286) * C33816) *
               C50677 * C50591 * C50627) *
              C50843 +
          (((C17292 + C17293 + C17294) * C33816 +
            (C18011 + C18012 + C18013) * C50753) *
               C50677 * C50591 * C50627 -
           ((C34173 + C34172 + C34171) * C50753 +
            (C17053 * C128 + C17065 + C17065 + C17046 * C142 + C17051 * C127 +
             C17066 + C17066 + C17045 * C141 + C17049 * C126 + C17067 + C17067 +
             C17044 * C140) *
                C33816) *
               C50677 * C50591 * C50800) *
              C50844 +
          (((C17049 * C127 + C17068 + C17068 + C17044 * C141 + C17051 * C128 +
             C17069 + C17069 + C17045 * C142 + C17053 * C129 + C17070 + C17070 +
             C17046 * C143) *
                C33816 +
            (C17049 * C413 + C17783 + C17783 + C17044 * C433 + C17051 * C412 +
             C17782 + C17782 + C17045 * C432 + C17053 * C420 + C17781 + C17781 +
             C17046 * C440) *
                C50753) *
               C50677 * C50591 * C50800 -
           ((C17053 * C809 + C17778 + C17778 + C17046 * C819 + C17051 * C808 +
             C17779 + C17779 + C17045 * C818 + C17049 * C807 + C17780 + C17780 +
             C17044 * C817) *
                C50753 +
            (C17631 + C17630 + C17629) * C33816) *
               C50677 * C50591 * C50627) *
              C560)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C39180 +
            C22247 * C39181 + C22248 * C39182 + C22250 * C39183) *
               C50677 * C50591 * C50800 -
           (C22249 * C39183 + C20854 * C39182 + C20556 * C39181 +
            C20049 * C39180) *
               C50677 * C50591 * C50627) *
              C50843 +
          ((C20053 * C39180 + C20557 * C39181 + C22059 * C39182 +
            C22254 * C39183) *
               C50677 * C50591 * C50627 -
           (C22253 * C39183 + C22252 * C39182 + C22251 * C39181 +
            (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C39180) *
               C50677 * C50591 * C50800) *
              C50844 +
          (((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C39180 +
            C22571 * C39181 + C22572 * C39182 +
            (C19896 * C1748 + C22566 + C22566 + C50526 * C1756) * C39183) *
               C50677 * C50591 * C50800 -
           ((C19896 * C6020 + C22565 + C22565 + C50526 * C6022) * C39183 +
            C22412 * C39182 + C22411 * C39181 + C20290 * C39180) *
               C50677 * C50591 * C50627) *
              C560)) /
            (p * q * std::sqrt(p + q));
    d2ee[181] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C33816 +
              C22247 * C50753) *
                 C2192 +
             (C36695 + C36696) * C2193 + C36707 * C2194) *
                C50801 -
            ((C37345 + C37346) * C2194 + (C37347 + C37348) * C2193 +
             (C22248 * C50753 + C22247 * C33816) * C2192) *
                C50655) *
               C50800 +
           (((C37348 + C37347) * C2192 + (C37346 + C37345) * C2193 +
             (C20554 * C33816 + C20856 * C50753) * C2194) *
                C50655 -
            ((C36699 + C36700) * C2194 + (C36698 + C36697) * C2193 +
             (C36696 + C36695) * C2192) *
                C50801) *
               C50627) *
              C263 +
          ((((C22251 * C33816 + C22252 * C50753) * C2192 +
             (C37349 + C37350) * C2193 + (C37351 + C37352) * C2194) *
                C50655 -
            (C36708 * C2194 + (C36702 + C36701) * C2193 +
             (C22251 * C50753 +
              (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C33816) *
                 C2192) *
                C50801) *
               C50800 +
           (((C36701 + C36702) * C2192 + (C36703 + C36704) * C2193 +
             (C36705 + C36706) * C2194) *
                C50801 -
            (((C19896 * C3606 + C20175 + C20175 + C50526 * C3610) * C50753 +
              C20559 * C33816) *
                 C2194 +
             (C37352 + C37351) * C2193 + (C37350 + C37349) * C2192) *
                C50655) *
               C50627) *
              C50562)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
              C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 +
              C17058 + C17046 * C141) *
                 C33816 +
             (C34165 + C34166 + C34167) * C50753) *
                C50677 * C50801 -
            ((C34168 + C34169 + C34170) * C50753 +
             (C34167 + C34166 + C34165) * C33816) *
                C50677 * C50655) *
               C50800 +
           (((C18010 + C18009 + C18008) * C33816 +
             (C18437 + C18438 + C18439) * C50753) *
                C50677 * C50655 -
            ((C18008 + C18009 + C18010) * C50753 +
             (C17288 + C17287 + C17286) * C33816) *
                C50677 * C50801) *
               C50627) *
              C263 +
          ((((C34171 + C34172 + C34173) * C33816 +
             (C34174 + C34175 + C34176) * C50753) *
                C50677 * C50655 -
            ((C34173 + C34172 + C34171) * C50753 +
             (C17053 * C128 + C17065 + C17065 + C17046 * C142 + C17051 * C127 +
              C17066 + C17066 + C17045 * C141 + C17049 * C126 + C17067 +
              C17067 + C17044 * C140) *
                 C33816) *
                C50677 * C50801) *
               C50800 +
           (((C17292 + C17293 + C17294) * C33816 +
             (C18011 + C18012 + C18013) * C50753) *
                C50677 * C50801 -
            ((C17053 * C1116 + C17462 + C17462 + C17046 * C1124 +
              C17051 * C1117 + C17463 + C17463 + C17045 * C1125 +
              C17049 * C1118 + C17464 + C17464 + C17044 * C1126) *
                 C50753 +
             (C18013 + C18012 + C18011) * C33816) *
                C50677 * C50655) *
               C50627) *
              C50562)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C39180 +
             C22247 * C39181 + C22248 * C39182 + C22250 * C39183) *
                C50677 * C50801 -
            (C24072 * C39183 + C22250 * C39182 + C22248 * C39181 +
             C22247 * C39180) *
                C50677 * C50655) *
               C50800 +
           ((C20556 * C39180 + C20854 * C39181 + C22249 * C39182 +
             C23181 * C39183) *
                C50677 * C50655 -
            (C22249 * C39183 + C20854 * C39182 + C20556 * C39181 +
             C20049 * C39180) *
                C50677 * C50801) *
               C50627) *
              C263 +
          (((C22251 * C39180 + C22252 * C39181 + C22253 * C39182 +
             C39387 * C39183) *
                C50677 * C50655 -
            (C22253 * C39183 + C22252 * C39182 + C22251 * C39181 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C39180) *
                C50677 * C50801) *
               C50800 +
           ((C20053 * C39180 + C20557 * C39181 + C22059 * C39182 +
             C22254 * C39183) *
                C50677 * C50801 -
            ((C19896 * C6425 + C22229 + C22229 + C50526 * C6429) * C39183 +
             C22254 * C39182 + C22059 * C39181 + C20557 * C39180) *
                C50677 * C50655) *
               C50627) *
              C50562)) /
            (p * q * std::sqrt(p + q));
    d2ee[182] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C17049 * C125 + C17056 + C17056 + C17044 * C139 +
                C17051 * C126 + C17057 + C17057 + C17045 * C140 +
                C17053 * C127 + C17058 + C17058 + C17046 * C141) *
                   C33816 +
               (C17049 * C415 + C17449 + C17449 + C17044 * C435 +
                C17051 * C414 + C17448 + C17448 + C17045 * C434 +
                C17053 * C413 + C17447 + C17447 + C17046 * C433) *
                   C50753) *
                  C50677 * C50591 * C50575 * C113 -
              ((C17053 * C412 + C17458 + C17458 + C17046 * C432 +
                C17051 * C413 + C17457 + C17457 + C17045 * C433 +
                C17049 * C414 + C17456 + C17456 + C17044 * C434) *
                   C50753 +
               (C17053 * C128 + C17065 + C17065 + C17046 * C142 +
                C17051 * C127 + C17066 + C17066 + C17045 * C141 +
                C17049 * C126 + C17067 + C17067 + C17044 * C140) *
                   C33816) *
                  C50677 * C50591 * C50575 * C114 +
              ((C17049 * C127 + C17068 + C17068 + C17044 * C141 +
                C17051 * C128 + C17069 + C17069 + C17045 * C142 +
                C17053 * C129 + C17070 + C17070 + C17046 * C143) *
                   C33816 +
               (C17049 * C413 + C17783 + C17783 + C17044 * C433 +
                C17051 * C412 + C17782 + C17782 + C17045 * C432 +
                C17053 * C420 + C17781 + C17781 + C17046 * C440) *
                   C50753) *
                  C50677 * C50591 * C50575 * C115 -
              ((C17053 * C668 + C33819 + C33819 + C17046 * C670 +
                C17051 * C420 + C33820 + C33820 + C17045 * C440 +
                C17049 * C412 + C33821 + C33821 + C17044 * C432) *
                   C50753 +
               (C17053 * C130 + C17077 + C17077 + C17046 * C144 +
                C17051 * C129 + C17078 + C17078 + C17045 * C143 +
                C17049 * C128 + C17079 + C17079 + C17044 * C142) *
                   C33816) *
                  C50677 * C50591 * C50575 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 +
                 C17051 * C126 + C17057 + C17057 + C17045 * C140 +
                 C17053 * C127 + C17058 + C17058 + C17046 * C141) *
                    C33816 +
                (C17049 * C415 + C17449 + C17449 + C17044 * C435 +
                 C17051 * C414 + C17448 + C17448 + C17045 * C434 +
                 C17053 * C413 + C17447 + C17447 + C17046 * C433) *
                    C50753) *
                   C50677 * C50591 * C260 -
               ((C18008 + C18009 + C18010) * C50753 +
                (C17288 + C17287 + C17286) * C33816) *
                   C50677 * C50591 * C261 +
               ((C17291 + C17290 + C17289) * C33816 +
                (C18941 + C18942 + C18943) * C50753) *
                   C50677 * C50591 * C262) *
                  C263 +
              (((C17292 + C17293 + C17294) * C33816 +
                (C18011 + C18012 + C18013) * C50753) *
                   C50677 * C50591 * C261 -
               ((C17053 * C412 + C17458 + C17458 + C17046 * C432 +
                 C17051 * C413 + C17457 + C17457 + C17045 * C433 +
                 C17049 * C414 + C17456 + C17456 + C17044 * C434) *
                    C50753 +
                (C17053 * C128 + C17065 + C17065 + C17046 * C142 +
                 C17051 * C127 + C17066 + C17066 + C17045 * C141 +
                 C17049 * C126 + C17067 + C17067 + C17044 * C140) *
                    C33816) *
                   C50677 * C50591 * C260 -
               ((C17053 * C1463 + C17993 + C17993 + C17046 * C1471 +
                 C17051 * C1464 + C17994 + C17994 + C17045 * C1472 +
                 C17049 * C1465 + C17995 + C17995 + C17044 * C1473) *
                    C50753 +
                (C17297 + C17296 + C17295) * C33816) *
                   C50677 * C50591 * C262) *
                  C50562)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
             C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
             C17046 * C141) *
                C33816 +
            (C34165 + C34166 + C34167) * C50753) *
               C50677 * C409 -
           ((C34168 + C34169 + C34170) * C50753 +
            (C34167 + C34166 + C34165) * C33816) *
               C50677 * C410 +
           ((C34170 + C34169 + C34168) * C33816 +
            (C17049 * C1750 + C19339 + C19339 + C17044 * C1758 +
             C17051 * C1749 + C19338 + C19338 + C17045 * C1757 +
             C17053 * C1748 + C19337 + C19337 + C17046 * C1756) *
                C50753) *
               C50677 * C411) *
              C50575 * C263 +
          (((C34171 + C34172 + C34173) * C33816 +
            (C34174 + C34175 + C34176) * C50753) *
               C50677 * C410 -
           ((C34173 + C34172 + C34171) * C50753 +
            (C17053 * C128 + C17065 + C17065 + C17046 * C142 + C17051 * C127 +
             C17066 + C17066 + C17045 * C141 + C17049 * C126 + C17067 + C17067 +
             C17044 * C140) *
                C33816) *
               C50677 * C409 -
           ((C17053 * C1747 + C34138 + C34138 + C17046 * C1755 +
             C17051 * C1748 + C34139 + C34139 + C17045 * C1756 +
             C17049 * C1749 + C34140 + C34140 + C17044 * C1757) *
                C50753 +
            (C34176 + C34175 + C34174) * C33816) *
               C50677 * C411) *
              C50575 * C50562)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C33816 +
            C22247 * C50753) *
               C2192 +
           (C20049 * C33816 + C20556 * C50753) * C2193 +
           (C20050 * C33816 + C20555 * C50753) * C2194) *
              C50591 * C50575 * C113 -
          ((C20558 * C50753 + C20054 * C33816) * C2194 +
           (C20557 * C50753 + C20053 * C33816) * C2193 +
           (C22251 * C50753 +
            (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C33816) *
               C2192) *
              C50591 * C50575 * C114 +
          (((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C33816 +
            C22571 * C50753) *
               C2192 +
           (C20290 * C33816 + C22411 * C50753) * C2193 +
           (C20291 * C33816 + C31607 * C50753) * C2194) *
              C50591 * C50575 * C115 -
          (((C19896 * C1463 + C31147 + C31147 + C50526 * C1471) * C50753 +
            (C19896 * C272 + C19912 + C19912 + C50526 * C292) * C33816) *
               C2194 +
           ((C19896 * C808 + C21892 + C21892 + C50526 * C818) * C50753 +
            (C19896 * C265 + C19913 + C19913 + C50526 * C285) * C33816) *
               C2193 +
           ((C19896 * C412 + C21894 + C21894 + C50526 * C432) * C50753 +
            (C19896 * C128 + C19914 + C19914 + C50526 * C142) * C33816) *
               C2192) *
              C50591 * C50575 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C33816 +
             C22247 * C50753) *
                C2192 +
            (C36695 + C36696) * C2193 + C36707 * C2194) *
               C50591 * C260 -
           ((C36699 + C36700) * C2194 + (C36698 + C36697) * C2193 +
            (C36696 + C36695) * C2192) *
               C50591 * C261 +
           (C36707 * C2192 + (C36700 + C36699) * C2193 +
            (C20052 * C33816 + C21194 * C50753) * C2194) *
               C50591 * C262) *
              C263 +
          (((C36701 + C36702) * C2192 + (C36703 + C36704) * C2193 +
            (C36705 + C36706) * C2194) *
               C50591 * C261 -
           (C36708 * C2194 + (C36702 + C36701) * C2193 +
            (C22251 * C50753 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C33816) *
                C2192) *
               C50591 * C260 -
           (((C19896 * C4120 + C20541 + C20541 + C50526 * C4124) * C50753 +
             C20056 * C33816) *
                C2194 +
            (C36706 + C36705) * C2193 + C36708 * C2192) *
               C50591 * C262) *
              C50562)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C33816 +
             C22247 * C50753) *
                C2192 +
            (C36695 + C36696) * C2193 + C36707 * C2194) *
               C409 -
           ((C20855 * C50753 + C20555 * C33816) * C2194 +
            (C20854 * C50753 + C20556 * C33816) * C2193 +
            (C22248 * C50753 + C22247 * C33816) * C2192) *
               C410 +
           ((C22248 * C33816 + C22250 * C50753) * C2192 +
            (C20854 * C33816 + C22249 * C50753) * C2193 +
            (C20855 * C33816 + C23182 * C50753) * C2194) *
               C411) *
              C50575 * C263 +
          (((C22251 * C33816 + C22252 * C50753) * C2192 +
            (C20557 * C33816 + C22059 * C50753) * C2193 +
            (C20558 * C33816 + C22060 * C50753) * C2194) *
               C410 -
           (C36708 * C2194 + (C36702 + C36701) * C2193 +
            (C22251 * C50753 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C33816) *
                C2192) *
               C409 -
           (((C19896 * C4530 + C22773 + C22773 + C50526 * C4538) * C50753 +
             C22060 * C33816) *
                C2194 +
            (C22254 * C50753 + C22059 * C33816) * C2193 +
            (C22253 * C50753 + C22252 * C33816) * C2192) *
               C411) *
              C50575 * C50562)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C39180 +
           C22247 * C39181 + C22248 * C39182 + C22250 * C39183) *
              C50677 * C50591 * C50575 * C113 -
          (C22253 * C39183 + C22252 * C39182 + C22251 * C39181 +
           (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C39180) *
              C50677 * C50591 * C50575 * C114 +
          ((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C39180 +
           C22571 * C39181 + C22572 * C39182 +
           (C19896 * C1748 + C22566 + C22566 + C50526 * C1756) * C39183) *
              C50677 * C50591 * C50575 * C115 -
          ((C19896 * C1747 + C39185 + C39185 + C50526 * C1755) * C39183 +
           (C19896 * C419 + C21893 + C21893 + C50526 * C439) * C39182 +
           (C19896 * C412 + C21894 + C21894 + C50526 * C432) * C39181 +
           (C19896 * C128 + C19914 + C19914 + C50526 * C142) * C39180) *
              C50677 * C50591 * C50575 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C39180 +
            C22247 * C39181 + C22248 * C39182 + C22250 * C39183) *
               C50677 * C50591 * C260 -
           (C22249 * C39183 + C20854 * C39182 + C20556 * C39181 +
            C20049 * C39180) *
               C50677 * C50591 * C261 +
           (C20050 * C39180 + C20555 * C39181 + C20855 * C39182 +
            C23182 * C39183) *
               C50677 * C50591 * C262) *
              C263 +
          ((C20053 * C39180 + C20557 * C39181 + C22059 * C39182 +
            C22254 * C39183) *
               C50677 * C50591 * C261 -
           (C22253 * C39183 + C22252 * C39182 + C22251 * C39181 +
            (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C39180) *
               C50677 * C50591 * C260 -
           ((C19896 * C4530 + C22773 + C22773 + C50526 * C4538) * C39183 +
            C22060 * C39182 + C20558 * C39181 + C20054 * C39180) *
               C50677 * C50591 * C262) *
              C50562)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C39180 +
            C22247 * C39181 + C22248 * C39182 + C22250 * C39183) *
               C50677 * C409 -
           (C24072 * C39183 + C22250 * C39182 + C22248 * C39181 +
            C22247 * C39180) *
               C50677 * C410 +
           (C22248 * C39180 + C22250 * C39181 + C24072 * C39182 +
            (C19896 * C7321 + C24069 + C24069 + C50526 * C7325) * C39183) *
               C50677 * C411) *
              C50575 * C263 +
          ((C22251 * C39180 + C22252 * C39181 + C22253 * C39182 +
            C39387 * C39183) *
               C50677 * C410 -
           (C22253 * C39183 + C22252 * C39182 + C22251 * C39181 +
            (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C39180) *
               C50677 * C409 -
           ((C19896 * C7320 + C39384 + C39384 + C50526 * C7324) * C39183 +
            C39387 * C39182 + C22253 * C39181 + C22252 * C39180) *
               C50677 * C411) *
              C50575 * C50562)) /
            (p * q * std::sqrt(p + q));
    d2ee[183] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C33816 +
             C22247 * C50753) *
                C2192 +
            (C36695 + C36696) * C2193 + C36707 * C2194) *
               C50801 -
           ((C20855 * C50753 + C20555 * C33816) * C2194 +
            (C20854 * C50753 + C20556 * C33816) * C2193 +
            (C22248 * C50753 + C22247 * C33816) * C2192) *
               C50655) *
              C50575 * C50843 +
          (((C22251 * C33816 + C22252 * C50753) * C2192 +
            (C20557 * C33816 + C22059 * C50753) * C2193 +
            (C20558 * C33816 + C22060 * C50753) * C2194) *
               C50655 -
           (C36708 * C2194 + (C36702 + C36701) * C2193 +
            (C22251 * C50753 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C33816) *
                C2192) *
               C50801) *
              C50575 * C50844 +
          ((((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C33816 +
             C22571 * C50753) *
                C2192 +
            (C37001 + C37002) * C2193 + (C37003 + C37004) * C2194) *
               C50801 -
           (((C19896 * C2598 + C22406 + C22406 + C50526 * C2604) * C50753 +
             C31607 * C33816) *
                C2194 +
            (C22412 * C50753 + C22411 * C33816) * C2193 +
            (C22572 * C50753 + C22571 * C33816) * C2192) *
               C50655) *
              C50575 * C560)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
             C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
             C17046 * C141) *
                C33816 +
            (C34165 + C34166 + C34167) * C50753) *
               C50677 * C50801 -
           ((C34168 + C34169 + C34170) * C50753 +
            (C34167 + C34166 + C34165) * C33816) *
               C50677 * C50655) *
              C50575 * C50843 +
          (((C34171 + C34172 + C34173) * C33816 +
            (C34174 + C34175 + C34176) * C50753) *
               C50677 * C50655 -
           ((C34173 + C34172 + C34171) * C50753 +
            (C17053 * C128 + C17065 + C17065 + C17046 * C142 + C17051 * C127 +
             C17066 + C17066 + C17045 * C141 + C17049 * C126 + C17067 + C17067 +
             C17044 * C140) *
                C33816) *
               C50677 * C50801) *
              C50575 * C50844 +
          (((C17049 * C127 + C17068 + C17068 + C17044 * C141 + C17051 * C128 +
             C17069 + C17069 + C17045 * C142 + C17053 * C129 + C17070 + C17070 +
             C17046 * C143) *
                C33816 +
            (C34484 + C34485 + C34486) * C50753) *
               C50677 * C50801 -
           ((C17053 * C421 + C34475 + C34475 + C17046 * C441 + C17051 * C419 +
             C34476 + C34476 + C17045 * C439 + C17049 * C418 + C34477 + C34477 +
             C17044 * C438) *
                C50753 +
            (C34486 + C34485 + C34484) * C33816) *
               C50677 * C50655) *
              C50575 * C560)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C39180 +
            C22247 * C39181 + C22248 * C39182 + C22250 * C39183) *
               C50677 * C50801 -
           (C24072 * C39183 + C22250 * C39182 + C22248 * C39181 +
            C22247 * C39180) *
               C50677 * C50655) *
              C50575 * C50843 +
          ((C22251 * C39180 + C22252 * C39181 + C22253 * C39182 +
            C39387 * C39183) *
               C50677 * C50655 -
           (C22253 * C39183 + C22252 * C39182 + C22251 * C39181 +
            (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C39180) *
               C50677 * C50801) *
              C50575 * C50844 +
          (((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C39180 +
            C22571 * C39181 + C22572 * C39182 + C39589 * C39183) *
               C50677 * C50801 -
           ((C19896 * C5435 + C39586 + C39586 + C50526 * C5441) * C39183 +
            C39589 * C39182 + C22572 * C39181 + C22571 * C39180) *
               C50677 * C50655) *
              C50575 * C560)) /
            (p * q * std::sqrt(p + q));
    d2ee[184] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
             C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
             C17046 * C141) *
                C33816 +
            (C17049 * C415 + C17449 + C17449 + C17044 * C435 + C17051 * C414 +
             C17448 + C17448 + C17045 * C434 + C17053 * C413 + C17447 + C17447 +
             C17046 * C433) *
                C50753) *
               C50677 * C50591 * C260 -
           ((C18008 + C18009 + C18010) * C50753 +
            (C17288 + C17287 + C17286) * C33816) *
               C50677 * C50591 * C261 +
           ((C17291 + C17290 + C17289) * C33816 +
            (C18941 + C18942 + C18943) * C50753) *
               C50677 * C50591 * C262) *
              C263 +
          (((C17292 + C17293 + C17294) * C33816 +
            (C18011 + C18012 + C18013) * C50753) *
               C50677 * C50591 * C261 -
           ((C17053 * C412 + C17458 + C17458 + C17046 * C432 + C17051 * C413 +
             C17457 + C17457 + C17045 * C433 + C17049 * C414 + C17456 + C17456 +
             C17044 * C434) *
                C50753 +
            (C17053 * C128 + C17065 + C17065 + C17046 * C142 + C17051 * C127 +
             C17066 + C17066 + C17045 * C141 + C17049 * C126 + C17067 + C17067 +
             C17044 * C140) *
                C33816) *
               C50677 * C50591 * C260 -
           ((C17053 * C1463 + C17993 + C17993 + C17046 * C1471 +
             C17051 * C1464 + C17994 + C17994 + C17045 * C1472 +
             C17049 * C1465 + C17995 + C17995 + C17044 * C1473) *
                C50753 +
            (C17297 + C17296 + C17295) * C33816) *
               C50677 * C50591 * C262) *
              C50562)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
            C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
            C17046 * C141) *
               C33816 +
           (C17049 * C415 + C17449 + C17449 + C17044 * C435 + C17051 * C414 +
            C17448 + C17448 + C17045 * C434 + C17053 * C413 + C17447 + C17447 +
            C17046 * C433) *
               C50753) *
              C50677 * C50591 * C50575 * C113 -
          ((C17053 * C412 + C17458 + C17458 + C17046 * C432 + C17051 * C413 +
            C17457 + C17457 + C17045 * C433 + C17049 * C414 + C17456 + C17456 +
            C17044 * C434) *
               C50753 +
           (C17053 * C128 + C17065 + C17065 + C17046 * C142 + C17051 * C127 +
            C17066 + C17066 + C17045 * C141 + C17049 * C126 + C17067 + C17067 +
            C17044 * C140) *
               C33816) *
              C50677 * C50591 * C50575 * C114 +
          ((C17049 * C127 + C17068 + C17068 + C17044 * C141 + C17051 * C128 +
            C17069 + C17069 + C17045 * C142 + C17053 * C129 + C17070 + C17070 +
            C17046 * C143) *
               C33816 +
           (C17049 * C413 + C17783 + C17783 + C17044 * C433 + C17051 * C412 +
            C17782 + C17782 + C17045 * C432 + C17053 * C420 + C17781 + C17781 +
            C17046 * C440) *
               C50753) *
              C50677 * C50591 * C50575 * C115 -
          ((C17053 * C668 + C33819 + C33819 + C17046 * C670 + C17051 * C420 +
            C33820 + C33820 + C17045 * C440 + C17049 * C412 + C33821 + C33821 +
            C17044 * C432) *
               C50753 +
           (C17053 * C130 + C17077 + C17077 + C17046 * C144 + C17051 * C129 +
            C17078 + C17078 + C17045 * C143 + C17049 * C128 + C17079 + C17079 +
            C17044 * C142) *
               C33816) *
              C50677 * C50591 * C50575 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C33816 +
            C22247 * C50753) *
               C2192 +
           (C20049 * C33816 + C20556 * C50753) * C2193 +
           (C20050 * C33816 + C20555 * C50753) * C2194) *
              C50591 * C50575 * C113 -
          ((C20558 * C50753 + C20054 * C33816) * C2194 +
           (C20557 * C50753 + C20053 * C33816) * C2193 +
           (C22251 * C50753 +
            (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C33816) *
               C2192) *
              C50591 * C50575 * C114 +
          (((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C33816 +
            C22571 * C50753) *
               C2192 +
           (C20290 * C33816 + C22411 * C50753) * C2193 +
           (C20291 * C33816 + C31607 * C50753) * C2194) *
              C50591 * C50575 * C115 -
          (((C19896 * C1463 + C31147 + C31147 + C50526 * C1471) * C50753 +
            (C19896 * C272 + C19912 + C19912 + C50526 * C292) * C33816) *
               C2194 +
           ((C19896 * C808 + C21892 + C21892 + C50526 * C818) * C50753 +
            (C19896 * C265 + C19913 + C19913 + C50526 * C285) * C33816) *
               C2193 +
           ((C19896 * C412 + C21894 + C21894 + C50526 * C432) * C50753 +
            (C19896 * C128 + C19914 + C19914 + C50526 * C142) * C33816) *
               C2192) *
              C50591 * C50575 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C33816 +
             C22247 * C50753) *
                C2192 +
            (C36695 + C36696) * C2193 + C36707 * C2194) *
               C50591 * C260 -
           ((C36699 + C36700) * C2194 + (C36698 + C36697) * C2193 +
            (C36696 + C36695) * C2192) *
               C50591 * C261 +
           (C36707 * C2192 + (C36700 + C36699) * C2193 +
            (C20052 * C33816 + C21194 * C50753) * C2194) *
               C50591 * C262) *
              C263 +
          (((C36701 + C36702) * C2192 + (C36703 + C36704) * C2193 +
            (C36705 + C36706) * C2194) *
               C50591 * C261 -
           (C36708 * C2194 + (C36702 + C36701) * C2193 +
            (C22251 * C50753 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C33816) *
                C2192) *
               C50591 * C260 -
           (((C19896 * C4120 + C20541 + C20541 + C50526 * C4124) * C50753 +
             C20056 * C33816) *
                C2194 +
            (C36706 + C36705) * C2193 + C36708 * C2192) *
               C50591 * C262) *
              C50562)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C39180 +
           C22247 * C39181 + C22248 * C39182 + C22250 * C39183) *
              C50677 * C50591 * C50575 * C113 -
          (C22253 * C39183 + C22252 * C39182 + C22251 * C39181 +
           (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C39180) *
              C50677 * C50591 * C50575 * C114 +
          ((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C39180 +
           C22571 * C39181 + C22572 * C39182 +
           (C19896 * C1748 + C22566 + C22566 + C50526 * C1756) * C39183) *
              C50677 * C50591 * C50575 * C115 -
          ((C19896 * C1747 + C39185 + C39185 + C50526 * C1755) * C39183 +
           (C19896 * C419 + C21893 + C21893 + C50526 * C439) * C39182 +
           (C19896 * C412 + C21894 + C21894 + C50526 * C432) * C39181 +
           (C19896 * C128 + C19914 + C19914 + C50526 * C142) * C39180) *
              C50677 * C50591 * C50575 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C39180 +
            C22247 * C39181 + C22248 * C39182 + C22250 * C39183) *
               C50677 * C50591 * C260 -
           (C22249 * C39183 + C20854 * C39182 + C20556 * C39181 +
            C20049 * C39180) *
               C50677 * C50591 * C261 +
           (C20050 * C39180 + C20555 * C39181 + C20855 * C39182 +
            C23182 * C39183) *
               C50677 * C50591 * C262) *
              C263 +
          ((C20053 * C39180 + C20557 * C39181 + C22059 * C39182 +
            C22254 * C39183) *
               C50677 * C50591 * C261 -
           (C22253 * C39183 + C22252 * C39182 + C22251 * C39181 +
            (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C39180) *
               C50677 * C50591 * C260 -
           ((C19896 * C4530 + C22773 + C22773 + C50526 * C4538) * C39183 +
            C22060 * C39182 + C20558 * C39181 + C20054 * C39180) *
               C50677 * C50591 * C262) *
              C50562)) /
            (p * q * std::sqrt(p + q));
    d2ee[185] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C33816 +
             C22247 * C50753) *
                C2192 +
            (C36695 + C36696) * C2193 + C36707 * C2194) *
               C50591 * C50845 -
           (C37597 * C2194 + (C36698 + C36697) * C2193 +
            (C36696 + C36695) * C2192) *
               C50591 * C50846 +
           (C36707 * C2192 + (C36700 + C36699) * C2193 +
            (C37598 + C37599) * C2194) *
               C50591 * C1232) *
              C50792 +
          (((C36701 + C36702) * C2192 + (C36703 + C36704) * C2193 +
            (C36705 + C36706) * C2194) *
               C50591 * C50846 -
           (C36708 * C2194 + (C36702 + C36701) * C2193 +
            (C22251 * C50753 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C33816) *
                C2192) *
               C50591 * C50845 -
           (((C19896 * C4120 + C20541 + C20541 + C50526 * C4124) * C50753 +
             C20056 * C33816) *
                C2194 +
            (C36706 + C36705) * C2193 + C36708 * C2192) *
               C50591 * C1232) *
              C50562)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
             C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
             C17046 * C141) *
                C33816 +
            (C34165 + C34166 + C34167) * C50753) *
               C50677 * C50591 * C50845 -
           ((C18008 + C18009 + C18010) * C50753 +
            (C17288 + C17287 + C17286) * C33816) *
               C50677 * C50591 * C50846 +
           ((C17291 + C17290 + C17289) * C33816 +
            (C18941 + C18942 + C18943) * C50753) *
               C50677 * C50591 * C1232) *
              C50792 +
          (((C17292 + C17293 + C17294) * C33816 +
            (C18011 + C18012 + C18013) * C50753) *
               C50677 * C50591 * C50846 -
           ((C34173 + C34172 + C34171) * C50753 +
            (C17053 * C128 + C17065 + C17065 + C17046 * C142 + C17051 * C127 +
             C17066 + C17066 + C17045 * C141 + C17049 * C126 + C17067 + C17067 +
             C17044 * C140) *
                C33816) *
               C50677 * C50591 * C50845 -
           ((C17053 * C1463 + C17993 + C17993 + C17046 * C1471 +
             C17051 * C1464 + C17994 + C17994 + C17045 * C1472 +
             C17049 * C1465 + C17995 + C17995 + C17044 * C1473) *
                C50753 +
            (C17297 + C17296 + C17295) * C33816) *
               C50677 * C50591 * C1232) *
              C50562)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C39180 +
            C22247 * C39181 + C22248 * C39182 + C22250 * C39183) *
               C50677 * C50591 * C50845 -
           (C22249 * C39183 + C20854 * C39182 + C20556 * C39181 +
            C20049 * C39180) *
               C50677 * C50591 * C50846 +
           (C20050 * C39180 + C20555 * C39181 + C20855 * C39182 +
            C23182 * C39183) *
               C50677 * C50591 * C1232) *
              C50792 +
          ((C20053 * C39180 + C20557 * C39181 + C22059 * C39182 +
            C22254 * C39183) *
               C50677 * C50591 * C50846 -
           (C22253 * C39183 + C22252 * C39182 + C22251 * C39181 +
            (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C39180) *
               C50677 * C50591 * C50845 -
           ((C19896 * C4530 + C22773 + C22773 + C50526 * C4538) * C39183 +
            C22060 * C39182 + C20558 * C39181 + C20054 * C39180) *
               C50677 * C50591 * C1232) *
              C50562)) /
            (p * q * std::sqrt(p + q));
    d2ee[186] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C33816 +
             C22247 * C50753) *
                C2192 +
            (C36695 + C36696) * C2193 + C36707 * C2194) *
               C50801 -
           (C38236 * C2194 + (C37347 + C37348) * C2193 +
            (C22248 * C50753 + C22247 * C33816) * C2192) *
               C50655) *
              C50845 +
          (((C37348 + C37347) * C2192 + (C37346 + C37345) * C2193 +
            (C38237 + C38238) * C2194) *
               C50655 -
           (C37597 * C2194 + (C36698 + C36697) * C2193 +
            (C36696 + C36695) * C2192) *
               C50801) *
              C50846 +
          ((C36707 * C2192 + (C36700 + C36699) * C2193 +
            (C37598 + C37599) * C2194) *
               C50801 -
           (((C19896 * C20837 + C20847 + C20847 + C50526 * C20839) * C50753 +
             C21194 * C33816) *
                C2194 +
            (C38238 + C38237) * C2193 + C38236 * C2192) *
               C50655) *
              C1232) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
             C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
             C17046 * C141) *
                C33816 +
            (C34165 + C34166 + C34167) * C50753) *
               C50677 * C50801 -
           ((C34168 + C34169 + C34170) * C50753 +
            (C34167 + C34166 + C34165) * C33816) *
               C50677 * C50655) *
              C50845 +
          (((C18010 + C18009 + C18008) * C33816 +
            (C18437 + C18438 + C18439) * C50753) *
               C50677 * C50655 -
           ((C18008 + C18009 + C18010) * C50753 +
            (C17288 + C17287 + C17286) * C33816) *
               C50677 * C50801) *
              C50846 +
          (((C17291 + C17290 + C17289) * C33816 +
            (C18941 + C18942 + C18943) * C50753) *
               C50677 * C50801 -
           ((C17053 * C2598 + C18428 + C18428 + C17046 * C2604 +
             C17051 * C2597 + C18429 + C18429 + C17045 * C2603 +
             C17049 * C2596 + C18430 + C18430 + C17044 * C2602) *
                C50753 +
            (C18943 + C18942 + C18941) * C33816) *
               C50677 * C50655) *
              C1232) *
         C50556) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C39180 +
            C22247 * C39181 + C22248 * C39182 + C22250 * C39183) *
               C50677 * C50801 -
           (C24072 * C39183 + C22250 * C39182 + C22248 * C39181 +
            C22247 * C39180) *
               C50677 * C50655) *
              C50845 +
          ((C20556 * C39180 + C20854 * C39181 + C22249 * C39182 +
            C23181 * C39183) *
               C50677 * C50655 -
           (C22249 * C39183 + C20854 * C39182 + C20556 * C39181 +
            C20049 * C39180) *
               C50677 * C50801) *
              C50846 +
          ((C20050 * C39180 + C20555 * C39181 + C20855 * C39182 +
            C23182 * C39183) *
               C50677 * C50801 -
           ((C19896 * C23166 + C23176 + C23176 + C50526 * C23168) * C39183 +
            C23182 * C39182 + C20855 * C39181 + C20555 * C39180) *
               C50677 * C50655) *
              C1232) *
         C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 +
                 C17051 * C126 + C17057 + C17057 + C17045 * C140 +
                 C17053 * C127 + C17058 + C17058 + C17046 * C141) *
                    C33816 +
                (C34165 + C34166 + C34167) * C50753) *
                   C50677 * C50591 * C926 -
               ((C18008 + C18009 + C18010) * C50753 +
                (C17288 + C17287 + C17286) * C33816) *
                   C50677 * C50591 * C50627) *
                  C928 +
              (((C17292 + C17293 + C17294) * C33816 +
                (C18011 + C18012 + C18013) * C50753) *
                   C50677 * C50591 * C50627 -
               ((C34173 + C34172 + C34171) * C50753 +
                (C17053 * C128 + C17065 + C17065 + C17046 * C142 +
                 C17051 * C127 + C17066 + C17066 + C17045 * C141 +
                 C17049 * C126 + C17067 + C17067 + C17044 * C140) *
                    C33816) *
                   C50677 * C50591 * C926) *
                  C929 +
              (((C17049 * C127 + C17068 + C17068 + C17044 * C141 +
                 C17051 * C128 + C17069 + C17069 + C17045 * C142 +
                 C17053 * C129 + C17070 + C17070 + C17046 * C143) *
                    C33816 +
                (C34484 + C34485 + C34486) * C50753) *
                   C50677 * C50591 * C926 -
               ((C17053 * C809 + C17778 + C17778 + C17046 * C819 +
                 C17051 * C808 + C17779 + C17779 + C17045 * C818 +
                 C17049 * C807 + C17780 + C17780 + C17044 * C817) *
                    C50753 +
                (C17631 + C17630 + C17629) * C33816) *
                   C50677 * C50591 * C50627) *
                  C930) +
         0.5 * std::pow(Pi, 2.5) *
             (((C17049 * C125 + C17056 + C17056 + C17044 * C139 +
                C17051 * C126 + C17057 + C17057 + C17045 * C140 +
                C17053 * C127 + C17058 + C17058 + C17046 * C141) *
                   C33816 +
               (C34165 + C34166 + C34167) * C50753) *
                  C50677 * C50591 * C997 -
              ((C18008 + C18009 + C18010) * C50753 +
               (C17288 + C17287 + C17286) * C33816) *
                  C50677 * C50591 * C998 +
              ((C17291 + C17290 + C17289) * C33816 +
               (C18941 + C18942 + C18943) * C50753) *
                  C50677 * C50591 * C999 -
              ((C17053 * C3145 + C18932 + C18932 + C17046 * C3151 +
                C17051 * C3144 + C18933 + C18933 + C17045 * C3150 +
                C17049 * C3143 + C18934 + C18934 + C17044 * C3149) *
                   C50753 +
               (C18275 + C18274 + C18273) * C33816) *
                  C50677 * C50591 * C1000) *
             C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
             C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
             C17046 * C141) *
                C33816 +
            (C34165 + C34166 + C34167) * C50753) *
               C50677 * C409 -
           ((C34168 + C34169 + C34170) * C50753 +
            (C34167 + C34166 + C34165) * C33816) *
               C50677 * C410 +
           ((C34170 + C34169 + C34168) * C33816 +
            (C17049 * C1750 + C19339 + C19339 + C17044 * C1758 +
             C17051 * C1749 + C19338 + C19338 + C17045 * C1757 +
             C17053 * C1748 + C19337 + C19337 + C17046 * C1756) *
                C50753) *
               C50677 * C411) *
              C926 +
          (((C18010 + C18009 + C18008) * C33816 +
            (C18437 + C18438 + C18439) * C50753) *
               C50677 * C410 -
           ((C18008 + C18009 + C18010) * C50753 +
            (C17288 + C17287 + C17286) * C33816) *
               C50677 * C409 -
           ((C17053 * C6020 + C19334 + C19334 + C17046 * C6022 +
             C17051 * C4532 + C19335 + C19335 + C17045 * C4540 +
             C17049 * C4533 + C19336 + C19336 + C17044 * C4541) *
                C50753 +
            (C18439 + C18438 + C18437) * C33816) *
               C50677 * C411) *
              C50627) *
         C50556) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C33816 +
             C22247 * C50753) *
                C2192 +
            (C36695 + C36696) * C2193 + C36707 * C2194) *
               C50591 * C926 -
           ((C36699 + C36700) * C2194 + (C36698 + C36697) * C2193 +
            (C36696 + C36695) * C2192) *
               C50591 * C50627) *
              C928 +
          (((C36701 + C36702) * C2192 + (C36703 + C36704) * C2193 +
            (C36705 + C36706) * C2194) *
               C50591 * C50627 -
           (C36708 * C2194 + (C36702 + C36701) * C2193 +
            (C22251 * C50753 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C33816) *
                C2192) *
               C50591 * C926) *
              C929 +
          ((((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C33816 +
             C22571 * C50753) *
                C2192 +
            (C37001 + C37002) * C2193 + (C37003 + C37004) * C2194) *
               C50591 * C926 -
           (((C19896 * C3145 + C20394 + C20394 + C50526 * C3151) * C50753 +
             C20292 * C33816) *
                C2194 +
            (C37004 + C37003) * C2193 + (C37002 + C37001) * C2192) *
               C50591 * C50627) *
              C930)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C33816 +
            C22247 * C50753) *
               C2192 +
           (C36695 + C36696) * C2193 + C36707 * C2194) *
              C50591 * C997 -
          (C37597 * C2194 + (C36698 + C36697) * C2193 +
           (C36696 + C36695) * C2192) *
              C50591 * C998 +
          (C36707 * C2192 + (C36700 + C36699) * C2193 +
           (C37598 + C37599) * C2194) *
              C50591 * C999 -
          (((C19896 * C21185 + C21191 + C21191 + C50526 * C21187) * C50753 +
            C20738 * C33816) *
               C2194 +
           (C37599 + C37598) * C2193 + C37597 * C2192) *
              C50591 * C1000) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C33816 +
             C22247 * C50753) *
                C2192 +
            (C36695 + C36696) * C2193 + C36707 * C2194) *
               C409 -
           ((C37345 + C37346) * C2194 + (C37347 + C37348) * C2193 +
            (C22248 * C50753 + C22247 * C33816) * C2192) *
               C410 +
           ((C22248 * C33816 + C22250 * C50753) * C2192 +
            (C37746 + C37747) * C2193 + (C37748 + C37749) * C2194) *
               C411) *
              C926 +
          (((C37348 + C37347) * C2192 + (C37346 + C37345) * C2193 +
            (C20554 * C33816 + C20856 * C50753) * C2194) *
               C410 -
           (C37597 * C2194 + (C36698 + C36697) * C2193 +
            (C36696 + C36695) * C2192) *
               C409 -
           (((C19896 * C21457 + C21461 + C21461 + C50526 * C21459) * C50753 +
             C20856 * C33816) *
                C2194 +
            (C37749 + C37748) * C2193 + (C37747 + C37746) * C2192) *
               C411) *
              C50627) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C39180 +
            C22247 * C39181 + C22248 * C39182 + C22250 * C39183) *
               C50677 * C50591 * C926 -
           (C22249 * C39183 + C20854 * C39182 + C20556 * C39181 +
            C20049 * C39180) *
               C50677 * C50591 * C50627) *
              C928 +
          ((C20053 * C39180 + C20557 * C39181 + C22059 * C39182 +
            C22254 * C39183) *
               C50677 * C50591 * C50627 -
           (C22253 * C39183 + C22252 * C39182 + C22251 * C39181 +
            (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C39180) *
               C50677 * C50591 * C926) *
              C929 +
          (((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C39180 +
            C22571 * C39181 + C22572 * C39182 + C39589 * C39183) *
               C50677 * C50591 * C926 -
           ((C19896 * C6020 + C22565 + C22565 + C50526 * C6022) * C39183 +
            C22412 * C39182 + C22411 * C39181 + C20290 * C39180) *
               C50677 * C50591 * C50627) *
              C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C39180 +
           C22247 * C39181 + C22248 * C39182 + C22250 * C39183) *
              C50677 * C50591 * C997 -
          (C22249 * C39183 + C20854 * C39182 + C20556 * C39181 +
           C20049 * C39180) *
              C50677 * C50591 * C998 +
          (C20050 * C39180 + C20555 * C39181 + C20855 * C39182 +
           C23182 * C39183) *
              C50677 * C50591 * C999 -
          ((C19896 * C21457 + C21461 + C21461 + C50526 * C21459) * C39183 +
           C20856 * C39182 + C20554 * C39181 + C20051 * C39180) *
              C50677 * C50591 * C1000) *
         C50556) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C39180 +
            C22247 * C39181 + C22248 * C39182 + C22250 * C39183) *
               C50677 * C409 -
           (C24072 * C39183 + C22250 * C39182 + C22248 * C39181 +
            C22247 * C39180) *
               C50677 * C410 +
           (C22248 * C39180 + C22250 * C39181 + C24072 * C39182 +
            (C19896 * C7321 + C24069 + C24069 + C50526 * C7325) * C39183) *
               C50677 * C411) *
              C926 +
          ((C20556 * C39180 + C20854 * C39181 + C22249 * C39182 +
            C23181 * C39183) *
               C50677 * C410 -
           (C22249 * C39183 + C20854 * C39182 + C20556 * C39181 +
            C20049 * C39180) *
               C50677 * C409 -
           ((C19896 * C24062 + C24068 + C24068 + C50526 * C24064) * C39183 +
            C23181 * C39182 + C22249 * C39181 + C20854 * C39180) *
               C50677 * C411) *
              C50627) *
         C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[188] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C33816 +
              C22247 * C50753) *
                 C2192 +
             (C36695 + C36696) * C2193 + C36707 * C2194) *
                C50801 -
            ((C37345 + C37346) * C2194 + (C37347 + C37348) * C2193 +
             (C22248 * C50753 + C22247 * C33816) * C2192) *
                C50655) *
               C926 +
           (((C37348 + C37347) * C2192 + (C37346 + C37345) * C2193 +
             (C20554 * C33816 + C20856 * C50753) * C2194) *
                C50655 -
            (C37597 * C2194 + (C36698 + C36697) * C2193 +
             (C36696 + C36695) * C2192) *
                C50801) *
               C50627) *
              C50792 +
          ((((C22251 * C33816 + C22252 * C50753) * C2192 +
             (C37349 + C37350) * C2193 + (C37351 + C37352) * C2194) *
                C50655 -
            (C36708 * C2194 + (C36702 + C36701) * C2193 +
             (C22251 * C50753 +
              (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C33816) *
                 C2192) *
                C50801) *
               C926 +
           (((C36701 + C36702) * C2192 + (C36703 + C36704) * C2193 +
             (C36705 + C36706) * C2194) *
                C50801 -
            (((C19896 * C3606 + C20175 + C20175 + C50526 * C3610) * C50753 +
              C20559 * C33816) *
                 C2194 +
             (C37352 + C37351) * C2193 + (C37350 + C37349) * C2192) *
                C50655) *
               C50627) *
              C50562)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
              C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 +
              C17058 + C17046 * C141) *
                 C33816 +
             (C34165 + C34166 + C34167) * C50753) *
                C50677 * C50801 -
            ((C34168 + C34169 + C34170) * C50753 +
             (C34167 + C34166 + C34165) * C33816) *
                C50677 * C50655) *
               C926 +
           (((C18010 + C18009 + C18008) * C33816 +
             (C18437 + C18438 + C18439) * C50753) *
                C50677 * C50655 -
            ((C18008 + C18009 + C18010) * C50753 +
             (C17288 + C17287 + C17286) * C33816) *
                C50677 * C50801) *
               C50627) *
              C50792 +
          ((((C34171 + C34172 + C34173) * C33816 +
             (C34174 + C34175 + C34176) * C50753) *
                C50677 * C50655 -
            ((C34173 + C34172 + C34171) * C50753 +
             (C17053 * C128 + C17065 + C17065 + C17046 * C142 + C17051 * C127 +
              C17066 + C17066 + C17045 * C141 + C17049 * C126 + C17067 +
              C17067 + C17044 * C140) *
                 C33816) *
                C50677 * C50801) *
               C926 +
           (((C17292 + C17293 + C17294) * C33816 +
             (C18011 + C18012 + C18013) * C50753) *
                C50677 * C50801 -
            ((C17053 * C1116 + C17462 + C17462 + C17046 * C1124 +
              C17051 * C1117 + C17463 + C17463 + C17045 * C1125 +
              C17049 * C1118 + C17464 + C17464 + C17044 * C1126) *
                 C50753 +
             (C18013 + C18012 + C18011) * C33816) *
                C50677 * C50655) *
               C50627) *
              C50562)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C39180 +
             C22247 * C39181 + C22248 * C39182 + C22250 * C39183) *
                C50677 * C50801 -
            (C24072 * C39183 + C22250 * C39182 + C22248 * C39181 +
             C22247 * C39180) *
                C50677 * C50655) *
               C926 +
           ((C20556 * C39180 + C20854 * C39181 + C22249 * C39182 +
             C23181 * C39183) *
                C50677 * C50655 -
            (C22249 * C39183 + C20854 * C39182 + C20556 * C39181 +
             C20049 * C39180) *
                C50677 * C50801) *
               C50627) *
              C50792 +
          (((C22251 * C39180 + C22252 * C39181 + C22253 * C39182 +
             C39387 * C39183) *
                C50677 * C50655 -
            (C22253 * C39183 + C22252 * C39182 + C22251 * C39181 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C39180) *
                C50677 * C50801) *
               C926 +
           ((C20053 * C39180 + C20557 * C39181 + C22059 * C39182 +
             C22254 * C39183) *
                C50677 * C50801 -
            ((C19896 * C6425 + C22229 + C22229 + C50526 * C6429) * C39183 +
             C22254 * C39182 + C22059 * C39181 + C20557 * C39180) *
                C50677 * C50655) *
               C50627) *
              C50562)) /
            (p * q * std::sqrt(p + q));
    d2ee[189] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
            C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
            C17046 * C141) *
               C33816 +
           (C34165 + C34166 + C34167) * C50753) *
              C50677 * C50591 * C997 -
          ((C18008 + C18009 + C18010) * C50753 +
           (C17288 + C17287 + C17286) * C33816) *
              C50677 * C50591 * C998 +
          ((C17291 + C17290 + C17289) * C33816 +
           (C18941 + C18942 + C18943) * C50753) *
              C50677 * C50591 * C999 -
          ((C17053 * C3145 + C18932 + C18932 + C17046 * C3151 + C17051 * C3144 +
            C18933 + C18933 + C17045 * C3150 + C17049 * C3143 + C18934 +
            C18934 + C17044 * C3149) *
               C50753 +
           (C18275 + C18274 + C18273) * C33816) *
              C50677 * C50591 * C1000) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
             C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
             C17046 * C141) *
                C33816 +
            (C34165 + C34166 + C34167) * C50753) *
               C50677 * C50591 * C926 -
           ((C18008 + C18009 + C18010) * C50753 +
            (C17288 + C17287 + C17286) * C33816) *
               C50677 * C50591 * C50627) *
              C928 +
          (((C17292 + C17293 + C17294) * C33816 +
            (C18011 + C18012 + C18013) * C50753) *
               C50677 * C50591 * C50627 -
           ((C34173 + C34172 + C34171) * C50753 +
            (C17053 * C128 + C17065 + C17065 + C17046 * C142 + C17051 * C127 +
             C17066 + C17066 + C17045 * C141 + C17049 * C126 + C17067 + C17067 +
             C17044 * C140) *
                C33816) *
               C50677 * C50591 * C926) *
              C929 +
          (((C17049 * C127 + C17068 + C17068 + C17044 * C141 + C17051 * C128 +
             C17069 + C17069 + C17045 * C142 + C17053 * C129 + C17070 + C17070 +
             C17046 * C143) *
                C33816 +
            (C34484 + C34485 + C34486) * C50753) *
               C50677 * C50591 * C926 -
           ((C17053 * C809 + C17778 + C17778 + C17046 * C819 + C17051 * C808 +
             C17779 + C17779 + C17045 * C818 + C17049 * C807 + C17780 + C17780 +
             C17044 * C817) *
                C50753 +
            (C17631 + C17630 + C17629) * C33816) *
               C50677 * C50591 * C50627) *
              C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C33816 +
             C22247 * C50753) *
                C2192 +
            (C36695 + C36696) * C2193 + C36707 * C2194) *
               C50591 * C926 -
           ((C36699 + C36700) * C2194 + (C36698 + C36697) * C2193 +
            (C36696 + C36695) * C2192) *
               C50591 * C50627) *
              C928 +
          (((C36701 + C36702) * C2192 + (C36703 + C36704) * C2193 +
            (C36705 + C36706) * C2194) *
               C50591 * C50627 -
           (C36708 * C2194 + (C36702 + C36701) * C2193 +
            (C22251 * C50753 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C33816) *
                C2192) *
               C50591 * C926) *
              C929 +
          ((((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C33816 +
             C22571 * C50753) *
                C2192 +
            (C37001 + C37002) * C2193 + (C37003 + C37004) * C2194) *
               C50591 * C926 -
           (((C19896 * C3145 + C20394 + C20394 + C50526 * C3151) * C50753 +
             C20292 * C33816) *
                C2194 +
            (C37004 + C37003) * C2193 + (C37002 + C37001) * C2192) *
               C50591 * C50627) *
              C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C33816 +
            C22247 * C50753) *
               C2192 +
           (C36695 + C36696) * C2193 + C36707 * C2194) *
              C50591 * C997 -
          (C37597 * C2194 + (C36698 + C36697) * C2193 +
           (C36696 + C36695) * C2192) *
              C50591 * C998 +
          (C36707 * C2192 + (C36700 + C36699) * C2193 +
           (C37598 + C37599) * C2194) *
              C50591 * C999 -
          (((C19896 * C21185 + C21191 + C21191 + C50526 * C21187) * C50753 +
            C20738 * C33816) *
               C2194 +
           (C37599 + C37598) * C2193 + C37597 * C2192) *
              C50591 * C1000) *
         C50556) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C39180 +
            C22247 * C39181 + C22248 * C39182 + C22250 * C39183) *
               C50677 * C50591 * C926 -
           (C22249 * C39183 + C20854 * C39182 + C20556 * C39181 +
            C20049 * C39180) *
               C50677 * C50591 * C50627) *
              C928 +
          ((C20053 * C39180 + C20557 * C39181 + C22059 * C39182 +
            C22254 * C39183) *
               C50677 * C50591 * C50627 -
           (C22253 * C39183 + C22252 * C39182 + C22251 * C39181 +
            (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C39180) *
               C50677 * C50591 * C926) *
              C929 +
          (((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C39180 +
            C22571 * C39181 + C22572 * C39182 + C39589 * C39183) *
               C50677 * C50591 * C926 -
           ((C19896 * C6020 + C22565 + C22565 + C50526 * C6022) * C39183 +
            C22412 * C39182 + C22411 * C39181 + C20290 * C39180) *
               C50677 * C50591 * C50627) *
              C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C39180 +
           C22247 * C39181 + C22248 * C39182 + C22250 * C39183) *
              C50677 * C50591 * C997 -
          (C22249 * C39183 + C20854 * C39182 + C20556 * C39181 +
           C20049 * C39180) *
              C50677 * C50591 * C998 +
          (C20050 * C39180 + C20555 * C39181 + C20855 * C39182 +
           C23182 * C39183) *
              C50677 * C50591 * C999 -
          ((C19896 * C21457 + C21461 + C21461 + C50526 * C21459) * C39183 +
           C20856 * C39182 + C20554 * C39181 + C20051 * C39180) *
              C50677 * C50591 * C1000) *
         C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[190] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C33816 +
              C22247 * C50753) *
                 C2192 +
             (C36695 + C36696) * C2193 + C36707 * C2194) *
                C1577 -
            (C38236 * C2194 + (C37347 + C37348) * C2193 +
             (C22248 * C50753 + C22247 * C33816) * C2192) *
                C50655) *
               C50800 +
           (((C37348 + C37347) * C2192 + (C37346 + C37345) * C2193 +
             (C38237 + C38238) * C2194) *
                C50655 -
            (C37597 * C2194 + (C36698 + C36697) * C2193 +
             (C36696 + C36695) * C2192) *
                C1577) *
               C50627) *
              C50792 +
          ((((C22251 * C33816 + C22252 * C50753) * C2192 +
             (C37349 + C37350) * C2193 + (C37351 + C37352) * C2194) *
                C50655 -
            (C36708 * C2194 + (C36702 + C36701) * C2193 +
             (C22251 * C50753 +
              (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C33816) *
                 C2192) *
                C1577) *
               C50800 +
           (((C36701 + C36702) * C2192 + (C36703 + C36704) * C2193 +
             (C36705 + C36706) * C2194) *
                C1577 -
            (((C19896 * C3606 + C20175 + C20175 + C50526 * C3610) * C50753 +
              C20559 * C33816) *
                 C2194 +
             (C37352 + C37351) * C2193 + (C37350 + C37349) * C2192) *
                C50655) *
               C50627) *
              C50562)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
              C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 +
              C17058 + C17046 * C141) *
                 C33816 +
             (C34165 + C34166 + C34167) * C50753) *
                C50677 * C1577 -
            ((C34168 + C34169 + C34170) * C50753 +
             (C34167 + C34166 + C34165) * C33816) *
                C50677 * C50655) *
               C50800 +
           (((C18010 + C18009 + C18008) * C33816 +
             (C18437 + C18438 + C18439) * C50753) *
                C50677 * C50655 -
            ((C18008 + C18009 + C18010) * C50753 +
             (C17288 + C17287 + C17286) * C33816) *
                C50677 * C1577) *
               C50627) *
              C50792 +
          ((((C34171 + C34172 + C34173) * C33816 +
             (C34174 + C34175 + C34176) * C50753) *
                C50677 * C50655 -
            ((C34173 + C34172 + C34171) * C50753 +
             (C17053 * C128 + C17065 + C17065 + C17046 * C142 + C17051 * C127 +
              C17066 + C17066 + C17045 * C141 + C17049 * C126 + C17067 +
              C17067 + C17044 * C140) *
                 C33816) *
                C50677 * C1577) *
               C50800 +
           (((C17292 + C17293 + C17294) * C33816 +
             (C18011 + C18012 + C18013) * C50753) *
                C50677 * C1577 -
            ((C17053 * C1116 + C17462 + C17462 + C17046 * C1124 +
              C17051 * C1117 + C17463 + C17463 + C17045 * C1125 +
              C17049 * C1118 + C17464 + C17464 + C17044 * C1126) *
                 C50753 +
             (C18013 + C18012 + C18011) * C33816) *
                C50677 * C50655) *
               C50627) *
              C50562)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C39180 +
             C22247 * C39181 + C22248 * C39182 + C22250 * C39183) *
                C50677 * C1577 -
            (C24072 * C39183 + C22250 * C39182 + C22248 * C39181 +
             C22247 * C39180) *
                C50677 * C50655) *
               C50800 +
           ((C20556 * C39180 + C20854 * C39181 + C22249 * C39182 +
             C23181 * C39183) *
                C50677 * C50655 -
            (C22249 * C39183 + C20854 * C39182 + C20556 * C39181 +
             C20049 * C39180) *
                C50677 * C1577) *
               C50627) *
              C50792 +
          (((C22251 * C39180 + C22252 * C39181 + C22253 * C39182 +
             C39387 * C39183) *
                C50677 * C50655 -
            (C22253 * C39183 + C22252 * C39182 + C22251 * C39181 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C39180) *
                C50677 * C1577) *
               C50800 +
           ((C20053 * C39180 + C20557 * C39181 + C22059 * C39182 +
             C22254 * C39183) *
                C50677 * C1577 -
            ((C19896 * C6425 + C22229 + C22229 + C50526 * C6429) * C39183 +
             C22254 * C39182 + C22059 * C39181 + C20557 * C39180) *
                C50677 * C50655) *
               C50627) *
              C50562)) /
            (p * q * std::sqrt(p + q));
    d2ee[191] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C33816 +
             C22247 * C50753) *
                C2192 +
            (C36695 + C36696) * C2193 + C36707 * C2194) *
               C50847 -
           (C38236 * C2194 + (C37347 + C37348) * C2193 +
            (C22248 * C50753 + C22247 * C33816) * C2192) *
               C50848 +
           ((C22248 * C33816 + C22250 * C50753) * C2192 +
            (C37746 + C37747) * C2193 + (C37748 + C37749) * C2194) *
               C1993) *
              C50800 +
          (((C37348 + C37347) * C2192 + (C37346 + C37345) * C2193 +
            (C38237 + C38238) * C2194) *
               C50848 -
           (C37597 * C2194 + (C36698 + C36697) * C2193 +
            (C36696 + C36695) * C2192) *
               C50847 -
           (((C19896 * C21457 + C21461 + C21461 + C50526 * C21459) * C50753 +
             C20856 * C33816) *
                C2194 +
            (C37749 + C37748) * C2193 + (C37747 + C37746) * C2192) *
               C1993) *
              C50627) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
             C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
             C17046 * C141) *
                C33816 +
            (C34165 + C34166 + C34167) * C50753) *
               C50677 * C50847 -
           ((C34168 + C34169 + C34170) * C50753 +
            (C34167 + C34166 + C34165) * C33816) *
               C50677 * C50848 +
           ((C34170 + C34169 + C34168) * C33816 +
            (C35962 + C35963 + C35964) * C50753) *
               C50677 * C1993) *
              C50800 +
          (((C18010 + C18009 + C18008) * C33816 +
            (C18437 + C18438 + C18439) * C50753) *
               C50677 * C50848 -
           ((C18008 + C18009 + C18010) * C50753 +
            (C17288 + C17287 + C17286) * C33816) *
               C50677 * C50847 -
           ((C17053 * C6020 + C19334 + C19334 + C17046 * C6022 +
             C17051 * C4532 + C19335 + C19335 + C17045 * C4540 +
             C17049 * C4533 + C19336 + C19336 + C17044 * C4541) *
                C50753 +
            (C18439 + C18438 + C18437) * C33816) *
               C50677 * C1993) *
              C50627) *
         C50556) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C39180 +
            C22247 * C39181 + C22248 * C39182 + C22250 * C39183) *
               C50677 * C50847 -
           (C24072 * C39183 + C22250 * C39182 + C22248 * C39181 +
            C22247 * C39180) *
               C50677 * C50848 +
           (C22248 * C39180 + C22250 * C39181 + C24072 * C39182 +
            C40578 * C39183) *
               C50677 * C1993) *
              C50800 +
          ((C20556 * C39180 + C20854 * C39181 + C22249 * C39182 +
            C23181 * C39183) *
               C50677 * C50848 -
           (C22249 * C39183 + C20854 * C39182 + C20556 * C39181 +
            C20049 * C39180) *
               C50677 * C50847 -
           ((C19896 * C24062 + C24068 + C24068 + C50526 * C24064) * C39183 +
            C23181 * C39182 + C22249 * C39181 + C20854 * C39180) *
               C50677 * C1993) *
              C50627) *
         C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 +
                 C17051 * C126 + C17057 + C17057 + C17045 * C140 +
                 C17053 * C127 + C17058 + C17058 + C17046 * C141) *
                    C33816 +
                (C34165 + C34166 + C34167) * C50753) *
                   C50677 * C1577 -
               ((C34168 + C34169 + C34170) * C50753 +
                (C34167 + C34166 + C34165) * C33816) *
                   C50677 * C50655) *
                  C50575 * C928 +
              (((C34171 + C34172 + C34173) * C33816 +
                (C34174 + C34175 + C34176) * C50753) *
                   C50677 * C50655 -
               ((C34173 + C34172 + C34171) * C50753 +
                (C17053 * C128 + C17065 + C17065 + C17046 * C142 +
                 C17051 * C127 + C17066 + C17066 + C17045 * C141 +
                 C17049 * C126 + C17067 + C17067 + C17044 * C140) *
                    C33816) *
                   C50677 * C1577) *
                  C50575 * C929 +
              (((C17049 * C127 + C17068 + C17068 + C17044 * C141 +
                 C17051 * C128 + C17069 + C17069 + C17045 * C142 +
                 C17053 * C129 + C17070 + C17070 + C17046 * C143) *
                    C33816 +
                (C34484 + C34485 + C34486) * C50753) *
                   C50677 * C1577 -
               ((C17053 * C421 + C34475 + C34475 + C17046 * C441 +
                 C17051 * C419 + C34476 + C34476 + C17045 * C439 +
                 C17049 * C418 + C34477 + C34477 + C17044 * C438) *
                    C50753 +
                (C34486 + C34485 + C34484) * C33816) *
                   C50677 * C50655) *
                  C50575 * C930) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 +
                 C17051 * C126 + C17057 + C17057 + C17045 * C140 +
                 C17053 * C127 + C17058 + C17058 + C17046 * C141) *
                    C33816 +
                (C34165 + C34166 + C34167) * C50753) *
                   C50677 * C1577 -
               ((C34168 + C34169 + C34170) * C50753 +
                (C34167 + C34166 + C34165) * C33816) *
                   C50677 * C50655) *
                  C260 +
              (((C18010 + C18009 + C18008) * C33816 +
                (C18437 + C18438 + C18439) * C50753) *
                   C50677 * C50655 -
               ((C18008 + C18009 + C18010) * C50753 +
                (C17288 + C17287 + C17286) * C33816) *
                   C50677 * C1577) *
                  C261 +
              (((C17291 + C17290 + C17289) * C33816 +
                (C18941 + C18942 + C18943) * C50753) *
                   C50677 * C1577 -
               ((C17053 * C2598 + C18428 + C18428 + C17046 * C2604 +
                 C17051 * C2597 + C18429 + C18429 + C17045 * C2603 +
                 C17049 * C2596 + C18430 + C18430 + C17044 * C2602) *
                    C50753 +
                (C18943 + C18942 + C18941) * C33816) *
                   C50677 * C50655) *
                  C262) *
             C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
            C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
            C17046 * C141) *
               C33816 +
           (C34165 + C34166 + C34167) * C50753) *
              C50677 * C1743 -
          ((C34168 + C34169 + C34170) * C50753 +
           (C34167 + C34166 + C34165) * C33816) *
              C50677 * C1744 +
          ((C34170 + C34169 + C34168) * C33816 +
           (C35962 + C35963 + C35964) * C50753) *
              C50677 * C1745 -
          ((C17053 * C5435 + C35953 + C35953 + C17046 * C5441 + C17051 * C5434 +
            C35954 + C35954 + C17045 * C5440 + C17049 * C5433 + C35955 +
            C35955 + C17044 * C5439) *
               C50753 +
           (C35964 + C35963 + C35962) * C33816) *
              C50677 * C1746) *
         C50575 * C50556) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C33816 +
             C22247 * C50753) *
                C2192 +
            (C36695 + C36696) * C2193 + C36707 * C2194) *
               C1577 -
           (C38236 * C2194 + (C37347 + C37348) * C2193 +
            (C22248 * C50753 + C22247 * C33816) * C2192) *
               C50655) *
              C50575 * C928 +
          (((C22251 * C33816 + C22252 * C50753) * C2192 +
            (C37349 + C37350) * C2193 + (C37351 + C37352) * C2194) *
               C50655 -
           (C36708 * C2194 + (C36702 + C36701) * C2193 +
            (C22251 * C50753 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C33816) *
                C2192) *
               C1577) *
              C50575 * C929 +
          ((((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C33816 +
             C22571 * C50753) *
                C2192 +
            (C37001 + C37002) * C2193 + (C37003 + C37004) * C2194) *
               C1577 -
           (((C19896 * C2598 + C22406 + C22406 + C50526 * C2604) * C50753 +
             C31607 * C33816) *
                C2194 +
            (C22412 * C50753 + C22411 * C33816) * C2193 +
            (C22572 * C50753 + C22571 * C33816) * C2192) *
               C50655) *
              C50575 * C930)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C33816 +
             C22247 * C50753) *
                C2192 +
            (C36695 + C36696) * C2193 + C36707 * C2194) *
               C1577 -
           (C38236 * C2194 + (C37347 + C37348) * C2193 +
            (C22248 * C50753 + C22247 * C33816) * C2192) *
               C50655) *
              C260 +
          (((C37348 + C37347) * C2192 + (C37346 + C37345) * C2193 +
            (C38237 + C38238) * C2194) *
               C50655 -
           (C37597 * C2194 + (C36698 + C36697) * C2193 +
            (C36696 + C36695) * C2192) *
               C1577) *
              C261 +
          ((C36707 * C2192 + (C36700 + C36699) * C2193 +
            (C37598 + C37599) * C2194) *
               C1577 -
           (((C19896 * C20837 + C20847 + C20847 + C50526 * C20839) * C50753 +
             C21194 * C33816) *
                C2194 +
            (C38238 + C38237) * C2193 + C38236 * C2192) *
               C50655) *
              C262) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C33816 +
            C22247 * C50753) *
               C2192 +
           (C36695 + C36696) * C2193 + C36707 * C2194) *
              C1743 -
          (C38236 * C2194 + (C37347 + C37348) * C2193 +
           (C22248 * C50753 + C22247 * C33816) * C2192) *
              C1744 +
          ((C22248 * C33816 + C22250 * C50753) * C2192 +
           (C37746 + C37747) * C2193 + (C37748 + C37749) * C2194) *
              C1745 -
          (((C19896 * C23166 + C23176 + C23176 + C50526 * C23168) * C50753 +
            C23182 * C33816) *
               C2194 +
           (C23181 * C50753 + C22249 * C33816) * C2193 +
           (C24072 * C50753 + C22250 * C33816) * C2192) *
              C1746) *
         C50575 * C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C39180 +
            C22247 * C39181 + C22248 * C39182 + C22250 * C39183) *
               C50677 * C1577 -
           (C24072 * C39183 + C22250 * C39182 + C22248 * C39181 +
            C22247 * C39180) *
               C50677 * C50655) *
              C50575 * C928 +
          ((C22251 * C39180 + C22252 * C39181 + C22253 * C39182 +
            C39387 * C39183) *
               C50677 * C50655 -
           (C22253 * C39183 + C22252 * C39182 + C22251 * C39181 +
            (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C39180) *
               C50677 * C1577) *
              C50575 * C929 +
          (((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C39180 +
            C22571 * C39181 + C22572 * C39182 + C39589 * C39183) *
               C50677 * C1577 -
           ((C19896 * C5435 + C39586 + C39586 + C50526 * C5441) * C39183 +
            C39589 * C39182 + C22572 * C39181 + C22571 * C39180) *
               C50677 * C50655) *
              C50575 * C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C39180 +
            C22247 * C39181 + C22248 * C39182 + C22250 * C39183) *
               C50677 * C1577 -
           (C24072 * C39183 + C22250 * C39182 + C22248 * C39181 +
            C22247 * C39180) *
               C50677 * C50655) *
              C260 +
          ((C20556 * C39180 + C20854 * C39181 + C22249 * C39182 +
            C23181 * C39183) *
               C50677 * C50655 -
           (C22249 * C39183 + C20854 * C39182 + C20556 * C39181 +
            C20049 * C39180) *
               C50677 * C1577) *
              C261 +
          ((C20050 * C39180 + C20555 * C39181 + C20855 * C39182 +
            C23182 * C39183) *
               C50677 * C1577 -
           ((C19896 * C23166 + C23176 + C23176 + C50526 * C23168) * C39183 +
            C23182 * C39182 + C20855 * C39181 + C20555 * C39180) *
               C50677 * C50655) *
              C262) *
         C50556) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C39180 +
           C22247 * C39181 + C22248 * C39182 + C22250 * C39183) *
              C50677 * C1743 -
          (C24072 * C39183 + C22250 * C39182 + C22248 * C39181 +
           C22247 * C39180) *
              C50677 * C1744 +
          (C22248 * C39180 + C22250 * C39181 + C24072 * C39182 +
           C40578 * C39183) *
              C50677 * C1745 -
          ((C19896 * C40569 + C40575 + C40575 + C50526 * C40571) * C39183 +
           C40578 * C39182 + C24072 * C39181 + C22250 * C39180) *
              C50677 * C1746) *
         C50575 * C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[193] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C33816 +
             C22247 * C50753) *
                C2192 +
            (C36695 + C36696) * C2193 + C36707 * C2194) *
               C50847 -
           (C38236 * C2194 + (C37347 + C37348) * C2193 +
            (C22248 * C50753 + C22247 * C33816) * C2192) *
               C50848 +
           ((C22248 * C33816 + C22250 * C50753) * C2192 +
            (C37746 + C37747) * C2193 + (C37748 + C37749) * C2194) *
               C1993) *
              C50575 * C50792 +
          (((C22251 * C33816 + C22252 * C50753) * C2192 +
            (C37349 + C37350) * C2193 + (C37351 + C37352) * C2194) *
               C50848 -
           (C36708 * C2194 + (C36702 + C36701) * C2193 +
            (C22251 * C50753 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C33816) *
                C2192) *
               C50847 -
           (((C19896 * C4530 + C22773 + C22773 + C50526 * C4538) * C50753 +
             C22060 * C33816) *
                C2194 +
            (C22254 * C50753 + C22059 * C33816) * C2193 +
            (C22253 * C50753 + C22252 * C33816) * C2192) *
               C1993) *
              C50575 * C50562)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
             C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
             C17046 * C141) *
                C33816 +
            (C34165 + C34166 + C34167) * C50753) *
               C50677 * C50847 -
           ((C34168 + C34169 + C34170) * C50753 +
            (C34167 + C34166 + C34165) * C33816) *
               C50677 * C50848 +
           ((C34170 + C34169 + C34168) * C33816 +
            (C35962 + C35963 + C35964) * C50753) *
               C50677 * C1993) *
              C50575 * C50792 +
          (((C34171 + C34172 + C34173) * C33816 +
            (C34174 + C34175 + C34176) * C50753) *
               C50677 * C50848 -
           ((C34173 + C34172 + C34171) * C50753 +
            (C17053 * C128 + C17065 + C17065 + C17046 * C142 + C17051 * C127 +
             C17066 + C17066 + C17045 * C141 + C17049 * C126 + C17067 + C17067 +
             C17044 * C140) *
                C33816) *
               C50677 * C50847 -
           ((C17053 * C1747 + C34138 + C34138 + C17046 * C1755 +
             C17051 * C1748 + C34139 + C34139 + C17045 * C1756 +
             C17049 * C1749 + C34140 + C34140 + C17044 * C1757) *
                C50753 +
            (C34176 + C34175 + C34174) * C33816) *
               C50677 * C1993) *
              C50575 * C50562)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C39180 +
            C22247 * C39181 + C22248 * C39182 + C22250 * C39183) *
               C50677 * C50847 -
           (C24072 * C39183 + C22250 * C39182 + C22248 * C39181 +
            C22247 * C39180) *
               C50677 * C50848 +
           (C22248 * C39180 + C22250 * C39181 + C24072 * C39182 +
            C40578 * C39183) *
               C50677 * C1993) *
              C50575 * C50792 +
          ((C22251 * C39180 + C22252 * C39181 + C22253 * C39182 +
            C39387 * C39183) *
               C50677 * C50848 -
           (C22253 * C39183 + C22252 * C39182 + C22251 * C39181 +
            (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C39180) *
               C50677 * C50847 -
           ((C19896 * C7320 + C39384 + C39384 + C50526 * C7324) * C39183 +
            C39387 * C39182 + C22253 * C39181 + C22252 * C39180) *
               C50677 * C1993) *
              C50575 * C50562)) /
            (p * q * std::sqrt(p + q));
    d2ee[194] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
             C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
             C17046 * C141) *
                C33816 +
            (C34165 + C34166 + C34167) * C50753) *
               C50677 * C1577 -
           ((C34168 + C34169 + C34170) * C50753 +
            (C34167 + C34166 + C34165) * C33816) *
               C50677 * C50655) *
              C260 +
          (((C18010 + C18009 + C18008) * C33816 +
            (C18437 + C18438 + C18439) * C50753) *
               C50677 * C50655 -
           ((C18008 + C18009 + C18010) * C50753 +
            (C17288 + C17287 + C17286) * C33816) *
               C50677 * C1577) *
              C261 +
          (((C17291 + C17290 + C17289) * C33816 +
            (C18941 + C18942 + C18943) * C50753) *
               C50677 * C1577 -
           ((C17053 * C2598 + C18428 + C18428 + C17046 * C2604 +
             C17051 * C2597 + C18429 + C18429 + C17045 * C2603 +
             C17049 * C2596 + C18430 + C18430 + C17044 * C2602) *
                C50753 +
            (C18943 + C18942 + C18941) * C33816) *
               C50677 * C50655) *
              C262) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
             C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
             C17046 * C141) *
                C33816 +
            (C34165 + C34166 + C34167) * C50753) *
               C50677 * C1577 -
           ((C34168 + C34169 + C34170) * C50753 +
            (C34167 + C34166 + C34165) * C33816) *
               C50677 * C50655) *
              C50575 * C928 +
          (((C34171 + C34172 + C34173) * C33816 +
            (C34174 + C34175 + C34176) * C50753) *
               C50677 * C50655 -
           ((C34173 + C34172 + C34171) * C50753 +
            (C17053 * C128 + C17065 + C17065 + C17046 * C142 + C17051 * C127 +
             C17066 + C17066 + C17045 * C141 + C17049 * C126 + C17067 + C17067 +
             C17044 * C140) *
                C33816) *
               C50677 * C1577) *
              C50575 * C929 +
          (((C17049 * C127 + C17068 + C17068 + C17044 * C141 + C17051 * C128 +
             C17069 + C17069 + C17045 * C142 + C17053 * C129 + C17070 + C17070 +
             C17046 * C143) *
                C33816 +
            (C34484 + C34485 + C34486) * C50753) *
               C50677 * C1577 -
           ((C17053 * C421 + C34475 + C34475 + C17046 * C441 + C17051 * C419 +
             C34476 + C34476 + C17045 * C439 + C17049 * C418 + C34477 + C34477 +
             C17044 * C438) *
                C50753 +
            (C34486 + C34485 + C34484) * C33816) *
               C50677 * C50655) *
              C50575 * C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C33816 +
             C22247 * C50753) *
                C2192 +
            (C36695 + C36696) * C2193 + C36707 * C2194) *
               C1577 -
           (C38236 * C2194 + (C37347 + C37348) * C2193 +
            (C22248 * C50753 + C22247 * C33816) * C2192) *
               C50655) *
              C50575 * C928 +
          (((C22251 * C33816 + C22252 * C50753) * C2192 +
            (C37349 + C37350) * C2193 + (C37351 + C37352) * C2194) *
               C50655 -
           (C36708 * C2194 + (C36702 + C36701) * C2193 +
            (C22251 * C50753 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C33816) *
                C2192) *
               C1577) *
              C50575 * C929 +
          ((((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C33816 +
             C22571 * C50753) *
                C2192 +
            (C37001 + C37002) * C2193 + (C37003 + C37004) * C2194) *
               C1577 -
           (((C19896 * C2598 + C22406 + C22406 + C50526 * C2604) * C50753 +
             C31607 * C33816) *
                C2194 +
            (C22412 * C50753 + C22411 * C33816) * C2193 +
            (C22572 * C50753 + C22571 * C33816) * C2192) *
               C50655) *
              C50575 * C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C33816 +
             C22247 * C50753) *
                C2192 +
            (C36695 + C36696) * C2193 + C36707 * C2194) *
               C1577 -
           (C38236 * C2194 + (C37347 + C37348) * C2193 +
            (C22248 * C50753 + C22247 * C33816) * C2192) *
               C50655) *
              C260 +
          (((C37348 + C37347) * C2192 + (C37346 + C37345) * C2193 +
            (C38237 + C38238) * C2194) *
               C50655 -
           (C37597 * C2194 + (C36698 + C36697) * C2193 +
            (C36696 + C36695) * C2192) *
               C1577) *
              C261 +
          ((C36707 * C2192 + (C36700 + C36699) * C2193 +
            (C37598 + C37599) * C2194) *
               C1577 -
           (((C19896 * C20837 + C20847 + C20847 + C50526 * C20839) * C50753 +
             C21194 * C33816) *
                C2194 +
            (C38238 + C38237) * C2193 + C38236 * C2192) *
               C50655) *
              C262) *
         C50556) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C39180 +
            C22247 * C39181 + C22248 * C39182 + C22250 * C39183) *
               C50677 * C1577 -
           (C24072 * C39183 + C22250 * C39182 + C22248 * C39181 +
            C22247 * C39180) *
               C50677 * C50655) *
              C50575 * C928 +
          ((C22251 * C39180 + C22252 * C39181 + C22253 * C39182 +
            C39387 * C39183) *
               C50677 * C50655 -
           (C22253 * C39183 + C22252 * C39182 + C22251 * C39181 +
            (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C39180) *
               C50677 * C1577) *
              C50575 * C929 +
          (((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C39180 +
            C22571 * C39181 + C22572 * C39182 + C39589 * C39183) *
               C50677 * C1577 -
           ((C19896 * C5435 + C39586 + C39586 + C50526 * C5441) * C39183 +
            C39589 * C39182 + C22572 * C39181 + C22571 * C39180) *
               C50677 * C50655) *
              C50575 * C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C39180 +
            C22247 * C39181 + C22248 * C39182 + C22250 * C39183) *
               C50677 * C1577 -
           (C24072 * C39183 + C22250 * C39182 + C22248 * C39181 +
            C22247 * C39180) *
               C50677 * C50655) *
              C260 +
          ((C20556 * C39180 + C20854 * C39181 + C22249 * C39182 +
            C23181 * C39183) *
               C50677 * C50655 -
           (C22249 * C39183 + C20854 * C39182 + C20556 * C39181 +
            C20049 * C39180) *
               C50677 * C1577) *
              C261 +
          ((C20050 * C39180 + C20555 * C39181 + C20855 * C39182 +
            C23182 * C39183) *
               C50677 * C1577 -
           ((C19896 * C23166 + C23176 + C23176 + C50526 * C23168) * C39183 +
            C23182 * C39182 + C20855 * C39181 + C20555 * C39180) *
               C50677 * C50655) *
              C262) *
         C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[195] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
             C24667 + C24667 + C50531 * C140) *
                C50851 +
            (C28010 + C28011) * C50852 + C44792 * C44496) *
               C50677 * C50591 * C50800 -
           (C29212 * C44496 + C28691 * C50852 + (C24893 + C24892) * C50851) *
               C50677 * C50591 * C50627) *
              C50843 +
          (((C24898 + C24899) * C50851 + C28692 * C50852 +
            (C28018 + C28019) * C44496) *
               C50677 * C50591 * C50627 -
           (C44797 * C44496 + (C28015 + C28014) * C50852 +
            (C24663 * C127 + C24676 + C24676 + C50531 * C141 + C24661 * C126 +
             C24677 + C24677 + C50785 * C140) *
                C50851) *
               C50677 * C50591 * C50800) *
              C50844 +
          (((C24661 * C127 + C24678 + C24678 + C50785 * C141 + C24663 * C128 +
             C24679 + C24679 + C50531 * C142) *
                C50851 +
            (C28430 + C28431) * C50852 +
            (C24661 * C418 + C28425 + C28425 + C50785 * C438 + C24663 * C419 +
             C28424 + C28424 + C50531 * C439) *
                C44496) *
               C50677 * C50591 * C50800 -
           ((C24663 * C1116 + C28422 + C28422 + C50531 * C1124 +
             C24661 * C1117 + C28423 + C28423 + C50785 * C1125) *
                C44496 +
            (C28223 + C28222) * C50852 + (C25243 + C25242) * C50851) *
               C50677 * C50591 * C50627) *
              C560)) /
        (p * q * std::sqrt(p + q));
    d2ee[196] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
              C24667 + C24667 + C50531 * C140) *
                 C50851 +
             (C28010 + C28011) * C50852 + C44792 * C44496) *
                C50677 * C50801 -
            ((C30402 + C30401) * C44496 + (C28012 + C28013) * C50852 +
             (C28011 + C28010) * C50851) *
                C50677 * C50655) *
               C50800 +
           ((C28690 * C50851 + C29213 * C50852 + (C29222 + C29223) * C44496) *
                C50677 * C50655 -
            (C29212 * C44496 + C28691 * C50852 + (C24893 + C24892) * C50851) *
                C50677 * C50801) *
               C50627) *
              C263 +
          ((((C28014 + C28015) * C50851 + (C28016 + C28017) * C50852 +
             (C44804 + C44805) * C44496) *
                C50677 * C50655 -
            (C44797 * C44496 + (C28015 + C28014) * C50852 +
             (C24663 * C127 + C24676 + C24676 + C50531 * C141 + C24661 * C126 +
              C24677 + C24677 + C50785 * C140) *
                 C50851) *
                C50677 * C50801) *
               C50800 +
           (((C24898 + C24899) * C50851 + C28692 * C50852 +
             (C28018 + C28019) * C44496) *
                C50677 * C50801 -
            ((C24663 * C6020 + C27986 + C27986 + C50531 * C6022 +
              C24661 * C4532 + C27987 + C27987 + C50785 * C4540) *
                 C44496 +
             (C28019 + C28018) * C50852 + C28693 * C50851) *
                C50677 * C50655) *
               C50627) *
              C50562)) /
        (p * q * std::sqrt(p + q));
    d2ee[197] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
             C24667 + C24667 + C50531 * C140) *
                C50851 +
            (C28010 + C28011) * C50852 + (C28013 + C28012) * C44496) *
               C50677 * C50591 * C260 -
           (C29212 * C44496 + C28691 * C50852 + (C24893 + C24892) * C50851) *
               C50677 * C50591 * C261 +
           (C24904 * C50851 + C29870 * C50852 + (C26060 + C26061) * C44496) *
               C50677 * C50591 * C262) *
              C263 +
          (((C24898 + C24899) * C50851 + C28692 * C50852 +
            (C28018 + C28019) * C44496) *
               C50677 * C50591 * C261 -
           ((C28017 + C28016) * C44496 + (C28015 + C28014) * C50852 +
            (C24663 * C127 + C24676 + C24676 + C50531 * C141 + C24661 * C126 +
             C24677 + C24677 + C50785 * C140) *
                C50851) *
               C50677 * C50591 * C260 -
           ((C24663 * C2598 + C25072 + C25072 + C50531 * C2604 +
             C24661 * C2597 + C25073 + C25073 + C50785 * C2603) *
                C44496 +
            (C25635 + C25634) * C50852 + C24905 * C50851) *
               C50677 * C50591 * C262) *
              C50562)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
            C24667 + C24667 + C50531 * C140) *
               C50851 +
           (C28010 + C28011) * C50852 + (C28013 + C28012) * C44496) *
              C50677 * C50591 * C50575 * C113 -
          ((C28017 + C28016) * C44496 + (C28015 + C28014) * C50852 +
           (C24663 * C127 + C24676 + C24676 + C50531 * C141 + C24661 * C126 +
            C24677 + C24677 + C50785 * C140) *
               C50851) *
              C50677 * C50591 * C50575 * C114 +
          ((C24661 * C127 + C24678 + C24678 + C50785 * C141 + C24663 * C128 +
            C24679 + C24679 + C50531 * C142) *
               C50851 +
           (C28430 + C28431) * C50852 +
           (C24661 * C418 + C28425 + C28425 + C50785 * C438 + C24663 * C419 +
            C28424 + C28424 + C50531 * C439) *
               C44496) *
              C50677 * C50591 * C50575 * C115 -
          ((C24663 * C421 + C44498 + C44498 + C50531 * C441 + C24661 * C419 +
            C44499 + C44499 + C50785 * C439) *
               C44496 +
           (C24663 * C420 + C27576 + C27576 + C50531 * C440 + C24661 * C412 +
            C27577 + C27577 + C50785 * C432) *
               C50852 +
           (C24663 * C129 + C24688 + C24688 + C50531 * C143 + C24661 * C128 +
            C24689 + C24689 + C50785 * C142) *
               C50851) *
              C50677 * C50591 * C50575 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
             C24667 + C24667 + C50531 * C140) *
                C50851 +
            (C28010 + C28011) * C50852 + C44792 * C44496) *
               C50677 * C409 -
           ((C30402 + C30401) * C44496 + (C28012 + C28013) * C50852 +
            (C28011 + C28010) * C50851) *
               C50677 * C410 +
           (C44792 * C50851 + (C30401 + C30402) * C50852 +
            (C24661 * C5433 + C30396 + C30396 + C50785 * C5439 +
             C24663 * C5434 + C30395 + C30395 + C50531 * C5440) *
                C44496) *
               C50677 * C411) *
              C50575 * C263 +
          (((C28014 + C28015) * C50851 + (C28016 + C28017) * C50852 +
            (C44804 + C44805) * C44496) *
               C50677 * C410 -
           (C44797 * C44496 + (C28015 + C28014) * C50852 +
            (C24663 * C127 + C24676 + C24676 + C50531 * C141 + C24661 * C126 +
             C24677 + C24677 + C50785 * C140) *
                C50851) *
               C50677 * C409 -
           ((C24663 * C5435 + C44798 + C44798 + C50531 * C5441 +
             C24661 * C5434 + C44799 + C44799 + C50785 * C5440) *
                C44496 +
            (C44805 + C44804) * C50852 + C44797 * C50851) *
               C50677 * C411) *
              C50575 * C50562)) /
            (p * q * std::sqrt(p + q));
    d2ee[198] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C24661 * C125 + C24666 + C24666 + C50785 * C139 +
                      C24663 * C126 + C24667 + C24667 + C50531 * C140) *
                         C50851 +
                     (C28010 + C28011) * C50852 + C44792 * C44496) *
                        C50677 * C50801 -
                    ((C30402 + C30401) * C44496 + (C28012 + C28013) * C50852 +
                     (C28011 + C28010) * C50851) *
                        C50677 * C50655) *
                       C50575 * C50843 +
                   (((C28014 + C28015) * C50851 + (C28016 + C28017) * C50852 +
                     (C44804 + C44805) * C44496) *
                        C50677 * C50655 -
                    (C44797 * C44496 + (C28015 + C28014) * C50852 +
                     (C24663 * C127 + C24676 + C24676 + C50531 * C141 +
                      C24661 * C126 + C24677 + C24677 + C50785 * C140) *
                         C50851) *
                        C50677 * C50801) *
                       C50575 * C50844 +
                   (((C24661 * C127 + C24678 + C24678 + C50785 * C141 +
                      C24663 * C128 + C24679 + C24679 + C50531 * C142) *
                         C50851 +
                     (C28430 + C28431) * C50852 + (C45108 + C45109) * C44496) *
                        C50677 * C50801 -
                    ((C24663 * C1747 + C45102 + C45102 + C50531 * C1755 +
                      C24661 * C1748 + C45103 + C45103 + C50785 * C1756) *
                         C44496 +
                     (C45109 + C45108) * C50852 + (C28431 + C28430) * C50851) *
                        C50677 * C50655) *
                       C50575 * C560)) /
                 (p * q * std::sqrt(p + q));
    d2ee[199] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
            C24667 + C24667 + C50531 * C140) *
               C50851 +
           (C28010 + C28011) * C50852 + (C28013 + C28012) * C44496) *
              C50677 * C50591 * C50575 * C113 -
          ((C28017 + C28016) * C44496 + (C28015 + C28014) * C50852 +
           (C24663 * C127 + C24676 + C24676 + C50531 * C141 + C24661 * C126 +
            C24677 + C24677 + C50785 * C140) *
               C50851) *
              C50677 * C50591 * C50575 * C114 +
          ((C24661 * C127 + C24678 + C24678 + C50785 * C141 + C24663 * C128 +
            C24679 + C24679 + C50531 * C142) *
               C50851 +
           (C28430 + C28431) * C50852 +
           (C24661 * C418 + C28425 + C28425 + C50785 * C438 + C24663 * C419 +
            C28424 + C28424 + C50531 * C439) *
               C44496) *
              C50677 * C50591 * C50575 * C115 -
          ((C24663 * C421 + C44498 + C44498 + C50531 * C441 + C24661 * C419 +
            C44499 + C44499 + C50785 * C439) *
               C44496 +
           (C24663 * C420 + C27576 + C27576 + C50531 * C440 + C24661 * C412 +
            C27577 + C27577 + C50785 * C432) *
               C50852 +
           (C24663 * C129 + C24688 + C24688 + C50531 * C143 + C24661 * C128 +
            C24689 + C24689 + C50785 * C142) *
               C50851) *
              C50677 * C50591 * C50575 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
             C24667 + C24667 + C50531 * C140) *
                C50851 +
            (C28010 + C28011) * C50852 + (C28013 + C28012) * C44496) *
               C50677 * C50591 * C260 -
           (C29212 * C44496 + C28691 * C50852 + (C24893 + C24892) * C50851) *
               C50677 * C50591 * C261 +
           (C24904 * C50851 + C29870 * C50852 + (C26060 + C26061) * C44496) *
               C50677 * C50591 * C262) *
              C263 +
          (((C24898 + C24899) * C50851 + C28692 * C50852 +
            (C28018 + C28019) * C44496) *
               C50677 * C50591 * C261 -
           ((C28017 + C28016) * C44496 + (C28015 + C28014) * C50852 +
            (C24663 * C127 + C24676 + C24676 + C50531 * C141 + C24661 * C126 +
             C24677 + C24677 + C50785 * C140) *
                C50851) *
               C50677 * C50591 * C260 -
           ((C24663 * C2598 + C25072 + C25072 + C50531 * C2604 +
             C24661 * C2597 + C25073 + C25073 + C50785 * C2603) *
                C44496 +
            (C25635 + C25634) * C50852 + C24905 * C50851) *
               C50677 * C50591 * C262) *
              C50562)) /
            (p * q * std::sqrt(p + q));
    d2ee[200] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
             C24667 + C24667 + C50531 * C140) *
                C50851 +
            (C28010 + C28011) * C50852 + C44792 * C44496) *
               C50677 * C50591 * C50845 -
           (C29212 * C44496 + C28691 * C50852 + (C24893 + C24892) * C50851) *
               C50677 * C50591 * C50846 +
           (C24904 * C50851 + C29870 * C50852 + (C26060 + C26061) * C44496) *
               C50677 * C50591 * C1232) *
              C50792 +
          (((C24898 + C24899) * C50851 + C28692 * C50852 +
            (C28018 + C28019) * C44496) *
               C50677 * C50591 * C50846 -
           (C44797 * C44496 + (C28015 + C28014) * C50852 +
            (C24663 * C127 + C24676 + C24676 + C50531 * C141 + C24661 * C126 +
             C24677 + C24677 + C50785 * C140) *
                C50851) *
               C50677 * C50591 * C50845 -
           ((C24663 * C2598 + C25072 + C25072 + C50531 * C2604 +
             C24661 * C2597 + C25073 + C25073 + C50785 * C2603) *
                C44496 +
            (C25635 + C25634) * C50852 + C24905 * C50851) *
               C50677 * C50591 * C1232) *
              C50562)) /
        (p * q * std::sqrt(p + q));
    d2ee[201] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
             C24667 + C24667 + C50531 * C140) *
                C50851 +
            (C28010 + C28011) * C50852 + C44792 * C44496) *
               C50677 * C50801 -
           ((C30402 + C30401) * C44496 + (C28012 + C28013) * C50852 +
            (C28011 + C28010) * C50851) *
               C50677 * C50655) *
              C50845 +
          ((C28690 * C50851 + C29213 * C50852 + (C29222 + C29223) * C44496) *
               C50677 * C50655 -
           (C29212 * C44496 + C28691 * C50852 + (C24893 + C24892) * C50851) *
               C50677 * C50801) *
              C50846 +
          ((C24904 * C50851 + C29870 * C50852 + (C26060 + C26061) * C44496) *
               C50677 * C50801 -
           ((C24663 * C4530 + C26952 + C26952 + C50531 * C4538 +
             C24661 * C4531 + C26953 + C26953 + C50785 * C4539) *
                C44496 +
            (C26061 + C26060) * C50852 + C26548 * C50851) *
               C50677 * C50655) *
              C1232) *
         C50556) /
        (p * q * std::sqrt(p + q));
    d2ee[202] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
            C24667 + C24667 + C50531 * C140) *
               C50851 +
           (C28010 + C28011) * C50852 + C44792 * C44496) *
              C50677 * C50591 * C997 -
          (C29212 * C44496 + C28691 * C50852 + (C24893 + C24892) * C50851) *
              C50677 * C50591 * C998 +
          (C24904 * C50851 + C29870 * C50852 + (C26060 + C26061) * C44496) *
              C50677 * C50591 * C999 -
          ((C24663 * C3606 + C26048 + C26048 + C50531 * C3610 + C24661 * C3607 +
            C26049 + C26049 + C50785 * C3611) *
               C44496 +
           (C26561 + C26560) * C50852 + C25880 * C50851) *
              C50677 * C50591 * C1000) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
             C24667 + C24667 + C50531 * C140) *
                C50851 +
            (C28010 + C28011) * C50852 + C44792 * C44496) *
               C50677 * C50591 * C926 -
           (C29212 * C44496 + C28691 * C50852 + (C24893 + C24892) * C50851) *
               C50677 * C50591 * C50627) *
              C928 +
          (((C24898 + C24899) * C50851 + C28692 * C50852 +
            (C28018 + C28019) * C44496) *
               C50677 * C50591 * C50627 -
           (C44797 * C44496 + (C28015 + C28014) * C50852 +
            (C24663 * C127 + C24676 + C24676 + C50531 * C141 + C24661 * C126 +
             C24677 + C24677 + C50785 * C140) *
                C50851) *
               C50677 * C50591 * C926) *
              C929 +
          (((C24661 * C127 + C24678 + C24678 + C50785 * C141 + C24663 * C128 +
             C24679 + C24679 + C50531 * C142) *
                C50851 +
            (C28430 + C28431) * C50852 + (C45108 + C45109) * C44496) *
               C50677 * C50591 * C926 -
           ((C24663 * C1116 + C28422 + C28422 + C50531 * C1124 +
             C24661 * C1117 + C28423 + C28423 + C50785 * C1125) *
                C44496 +
            (C28223 + C28222) * C50852 + (C25243 + C25242) * C50851) *
               C50677 * C50591 * C50627) *
              C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
             C24667 + C24667 + C50531 * C140) *
                C50851 +
            (C28010 + C28011) * C50852 + C44792 * C44496) *
               C50677 * C409 -
           ((C30402 + C30401) * C44496 + (C28012 + C28013) * C50852 +
            (C28011 + C28010) * C50851) *
               C50677 * C410 +
           (C44792 * C50851 + (C30401 + C30402) * C50852 +
            (C24661 * C5433 + C30396 + C30396 + C50785 * C5439 +
             C24663 * C5434 + C30395 + C30395 + C50531 * C5440) *
                C44496) *
               C50677 * C411) *
              C926 +
          ((C28690 * C50851 + C29213 * C50852 + (C29222 + C29223) * C44496) *
               C50677 * C410 -
           (C29212 * C44496 + C28691 * C50852 + (C24893 + C24892) * C50851) *
               C50677 * C409 -
           ((C24663 * C6425 + C30393 + C30393 + C50531 * C6429 +
             C24661 * C6426 + C30394 + C30394 + C50785 * C6430) *
                C44496 +
            (C29223 + C29222) * C50852 + C29212 * C50851) *
               C50677 * C411) *
              C50627) *
         C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[203] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
              C24667 + C24667 + C50531 * C140) *
                 C50851 +
             (C28010 + C28011) * C50852 + C44792 * C44496) *
                C50677 * C50801 -
            ((C30402 + C30401) * C44496 + (C28012 + C28013) * C50852 +
             (C28011 + C28010) * C50851) *
                C50677 * C50655) *
               C926 +
           ((C28690 * C50851 + C29213 * C50852 + (C29222 + C29223) * C44496) *
                C50677 * C50655 -
            (C29212 * C44496 + C28691 * C50852 + (C24893 + C24892) * C50851) *
                C50677 * C50801) *
               C50627) *
              C50792 +
          ((((C28014 + C28015) * C50851 + (C28016 + C28017) * C50852 +
             (C44804 + C44805) * C44496) *
                C50677 * C50655 -
            (C44797 * C44496 + (C28015 + C28014) * C50852 +
             (C24663 * C127 + C24676 + C24676 + C50531 * C141 + C24661 * C126 +
              C24677 + C24677 + C50785 * C140) *
                 C50851) *
                C50677 * C50801) *
               C926 +
           (((C24898 + C24899) * C50851 + C28692 * C50852 +
             (C28018 + C28019) * C44496) *
                C50677 * C50801 -
            ((C24663 * C6020 + C27986 + C27986 + C50531 * C6022 +
              C24661 * C4532 + C27987 + C27987 + C50785 * C4540) *
                 C44496 +
             (C28019 + C28018) * C50852 + C28693 * C50851) *
                C50677 * C50655) *
               C50627) *
              C50562)) /
        (p * q * std::sqrt(p + q));
    d2ee[204] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
             C24667 + C24667 + C50531 * C140) *
                C50851 +
            (C28010 + C28011) * C50852 + C44792 * C44496) *
               C50677 * C50591 * C926 -
           (C29212 * C44496 + C28691 * C50852 + (C24893 + C24892) * C50851) *
               C50677 * C50591 * C50627) *
              C928 +
          (((C24898 + C24899) * C50851 + C28692 * C50852 +
            (C28018 + C28019) * C44496) *
               C50677 * C50591 * C50627 -
           (C44797 * C44496 + (C28015 + C28014) * C50852 +
            (C24663 * C127 + C24676 + C24676 + C50531 * C141 + C24661 * C126 +
             C24677 + C24677 + C50785 * C140) *
                C50851) *
               C50677 * C50591 * C926) *
              C929 +
          (((C24661 * C127 + C24678 + C24678 + C50785 * C141 + C24663 * C128 +
             C24679 + C24679 + C50531 * C142) *
                C50851 +
            (C28430 + C28431) * C50852 + (C45108 + C45109) * C44496) *
               C50677 * C50591 * C926 -
           ((C24663 * C1116 + C28422 + C28422 + C50531 * C1124 +
             C24661 * C1117 + C28423 + C28423 + C50785 * C1125) *
                C44496 +
            (C28223 + C28222) * C50852 + (C25243 + C25242) * C50851) *
               C50677 * C50591 * C50627) *
              C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
            C24667 + C24667 + C50531 * C140) *
               C50851 +
           (C28010 + C28011) * C50852 + C44792 * C44496) *
              C50677 * C50591 * C997 -
          (C29212 * C44496 + C28691 * C50852 + (C24893 + C24892) * C50851) *
              C50677 * C50591 * C998 +
          (C24904 * C50851 + C29870 * C50852 + (C26060 + C26061) * C44496) *
              C50677 * C50591 * C999 -
          ((C24663 * C3606 + C26048 + C26048 + C50531 * C3610 + C24661 * C3607 +
            C26049 + C26049 + C50785 * C3611) *
               C44496 +
           (C26561 + C26560) * C50852 + C25880 * C50851) *
              C50677 * C50591 * C1000) *
         C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[205] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
              C24667 + C24667 + C50531 * C140) *
                 C50851 +
             (C28010 + C28011) * C50852 + C44792 * C44496) *
                C50677 * C1577 -
            (C46570 * C44496 + (C28012 + C28013) * C50852 +
             (C28011 + C28010) * C50851) *
                C50677 * C50655) *
               C50800 +
           ((C28690 * C50851 + C29213 * C50852 + (C29222 + C29223) * C44496) *
                C50677 * C50655 -
            (C29212 * C44496 + C28691 * C50852 + (C24893 + C24892) * C50851) *
                C50677 * C1577) *
               C50627) *
              C50792 +
          ((((C28014 + C28015) * C50851 + (C28016 + C28017) * C50852 +
             (C44804 + C44805) * C44496) *
                C50677 * C50655 -
            (C44797 * C44496 + (C28015 + C28014) * C50852 +
             (C24663 * C127 + C24676 + C24676 + C50531 * C141 + C24661 * C126 +
              C24677 + C24677 + C50785 * C140) *
                 C50851) *
                C50677 * C1577) *
               C50800 +
           (((C24898 + C24899) * C50851 + C28692 * C50852 +
             (C28018 + C28019) * C44496) *
                C50677 * C1577 -
            ((C24663 * C6020 + C27986 + C27986 + C50531 * C6022 +
              C24661 * C4532 + C27987 + C27987 + C50785 * C4540) *
                 C44496 +
             (C28019 + C28018) * C50852 + C28693 * C50851) *
                C50677 * C50655) *
               C50627) *
              C50562)) /
        (p * q * std::sqrt(p + q));
    d2ee[206] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
             C24667 + C24667 + C50531 * C140) *
                C50851 +
            (C28010 + C28011) * C50852 + C44792 * C44496) *
               C50677 * C50847 -
           (C46570 * C44496 + (C28012 + C28013) * C50852 +
            (C28011 + C28010) * C50851) *
               C50677 * C50848 +
           (C44792 * C50851 + (C30401 + C30402) * C50852 +
            (C46581 + C46582) * C44496) *
               C50677 * C1993) *
              C50800 +
          ((C28690 * C50851 + C29213 * C50852 + (C29222 + C29223) * C44496) *
               C50677 * C50848 -
           (C29212 * C44496 + C28691 * C50852 + (C24893 + C24892) * C50851) *
               C50677 * C50847 -
           ((C24663 * C6425 + C30393 + C30393 + C50531 * C6429 +
             C24661 * C6426 + C30394 + C30394 + C50785 * C6430) *
                C44496 +
            (C29223 + C29222) * C50852 + C29212 * C50851) *
               C50677 * C1993) *
              C50627) *
         C50556) /
        (p * q * std::sqrt(p + q));
    d2ee[207] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
             C24667 + C24667 + C50531 * C140) *
                C50851 +
            (C28010 + C28011) * C50852 + C44792 * C44496) *
               C50677 * C1577 -
           ((C30402 + C30401) * C44496 + (C28012 + C28013) * C50852 +
            (C28011 + C28010) * C50851) *
               C50677 * C50655) *
              C260 +
          ((C28690 * C50851 + C29213 * C50852 + (C29222 + C29223) * C44496) *
               C50677 * C50655 -
           (C29212 * C44496 + C28691 * C50852 + (C24893 + C24892) * C50851) *
               C50677 * C1577) *
              C261 +
          ((C24904 * C50851 + C29870 * C50852 + (C26060 + C26061) * C44496) *
               C50677 * C1577 -
           ((C24663 * C4530 + C26952 + C26952 + C50531 * C4538 +
             C24661 * C4531 + C26953 + C26953 + C50785 * C4539) *
                C44496 +
            (C26061 + C26060) * C50852 + C26548 * C50851) *
               C50677 * C50655) *
              C262) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
             C24667 + C24667 + C50531 * C140) *
                C50851 +
            (C28010 + C28011) * C50852 + C44792 * C44496) *
               C50677 * C1577 -
           ((C30402 + C30401) * C44496 + (C28012 + C28013) * C50852 +
            (C28011 + C28010) * C50851) *
               C50677 * C50655) *
              C50575 * C928 +
          (((C28014 + C28015) * C50851 + (C28016 + C28017) * C50852 +
            (C44804 + C44805) * C44496) *
               C50677 * C50655 -
           (C44797 * C44496 + (C28015 + C28014) * C50852 +
            (C24663 * C127 + C24676 + C24676 + C50531 * C141 + C24661 * C126 +
             C24677 + C24677 + C50785 * C140) *
                C50851) *
               C50677 * C1577) *
              C50575 * C929 +
          (((C24661 * C127 + C24678 + C24678 + C50785 * C141 + C24663 * C128 +
             C24679 + C24679 + C50531 * C142) *
                C50851 +
            (C28430 + C28431) * C50852 + (C45108 + C45109) * C44496) *
               C50677 * C1577 -
           ((C24663 * C1747 + C45102 + C45102 + C50531 * C1755 +
             C24661 * C1748 + C45103 + C45103 + C50785 * C1756) *
                C44496 +
            (C45109 + C45108) * C50852 + (C28431 + C28430) * C50851) *
               C50677 * C50655) *
              C50575 * C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
            C24667 + C24667 + C50531 * C140) *
               C50851 +
           (C28010 + C28011) * C50852 + C44792 * C44496) *
              C50677 * C1743 -
          (C46570 * C44496 + (C28012 + C28013) * C50852 +
           (C28011 + C28010) * C50851) *
              C50677 * C1744 +
          (C44792 * C50851 + (C30401 + C30402) * C50852 +
           (C46581 + C46582) * C44496) *
              C50677 * C1745 -
          ((C24663 * C7320 + C46575 + C46575 + C50531 * C7324 + C24661 * C7321 +
            C46576 + C46576 + C50785 * C7325) *
               C44496 +
           (C46582 + C46581) * C50852 + C46570 * C50851) *
              C50677 * C1746) *
         C50575 * C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[208] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C24661 * C125 + C24666 + C24666 + C50785 * C139 +
                      C24663 * C126 + C24667 + C24667 + C50531 * C140) *
                         C50851 +
                     (C28010 + C28011) * C50852 + C44792 * C44496) *
                        C50677 * C50847 -
                    (C46570 * C44496 + (C28012 + C28013) * C50852 +
                     (C28011 + C28010) * C50851) *
                        C50677 * C50848 +
                    (C44792 * C50851 + (C30401 + C30402) * C50852 +
                     (C46581 + C46582) * C44496) *
                        C50677 * C1993) *
                       C50575 * C50792 +
                   (((C28014 + C28015) * C50851 + (C28016 + C28017) * C50852 +
                     (C44804 + C44805) * C44496) *
                        C50677 * C50848 -
                    (C44797 * C44496 + (C28015 + C28014) * C50852 +
                     (C24663 * C127 + C24676 + C24676 + C50531 * C141 +
                      C24661 * C126 + C24677 + C24677 + C50785 * C140) *
                         C50851) *
                        C50677 * C50847 -
                    ((C24663 * C5435 + C44798 + C44798 + C50531 * C5441 +
                      C24661 * C5434 + C44799 + C44799 + C50785 * C5440) *
                         C44496 +
                     (C44805 + C44804) * C50852 + C44797 * C50851) *
                        C50677 * C1993) *
                       C50575 * C50562)) /
                 (p * q * std::sqrt(p + q));
    d2ee[209] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
             C24667 + C24667 + C50531 * C140) *
                C50851 +
            (C28010 + C28011) * C50852 + C44792 * C44496) *
               C50677 * C1577 -
           ((C30402 + C30401) * C44496 + (C28012 + C28013) * C50852 +
            (C28011 + C28010) * C50851) *
               C50677 * C50655) *
              C50575 * C928 +
          (((C28014 + C28015) * C50851 + (C28016 + C28017) * C50852 +
            (C44804 + C44805) * C44496) *
               C50677 * C50655 -
           (C44797 * C44496 + (C28015 + C28014) * C50852 +
            (C24663 * C127 + C24676 + C24676 + C50531 * C141 + C24661 * C126 +
             C24677 + C24677 + C50785 * C140) *
                C50851) *
               C50677 * C1577) *
              C50575 * C929 +
          (((C24661 * C127 + C24678 + C24678 + C50785 * C141 + C24663 * C128 +
             C24679 + C24679 + C50531 * C142) *
                C50851 +
            (C28430 + C28431) * C50852 + (C45108 + C45109) * C44496) *
               C50677 * C1577 -
           ((C24663 * C1747 + C45102 + C45102 + C50531 * C1755 +
             C24661 * C1748 + C45103 + C45103 + C50785 * C1756) *
                C44496 +
            (C45109 + C45108) * C50852 + (C28431 + C28430) * C50851) *
               C50677 * C50655) *
              C50575 * C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C24661 * C125 + C24666 + C24666 + C50785 * C139 + C24663 * C126 +
             C24667 + C24667 + C50531 * C140) *
                C50851 +
            (C28010 + C28011) * C50852 + C44792 * C44496) *
               C50677 * C1577 -
           ((C30402 + C30401) * C44496 + (C28012 + C28013) * C50852 +
            (C28011 + C28010) * C50851) *
               C50677 * C50655) *
              C260 +
          ((C28690 * C50851 + C29213 * C50852 + (C29222 + C29223) * C44496) *
               C50677 * C50655 -
           (C29212 * C44496 + C28691 * C50852 + (C24893 + C24892) * C50851) *
               C50677 * C1577) *
              C261 +
          ((C24904 * C50851 + C29870 * C50852 + (C26060 + C26061) * C44496) *
               C50677 * C1577 -
           ((C24663 * C4530 + C26952 + C26952 + C50531 * C4538 +
             C24661 * C4531 + C26953 + C26953 + C50785 * C4539) *
                C44496 +
            (C26061 + C26060) * C50852 + C26548 * C50851) *
               C50677 * C50655) *
              C262) *
         C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[210] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
             C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
             C17046 * C141) *
                C33816 +
            (C34165 + C34166 + C34167) * C50753) *
               C50677 * C50591 * C50800 -
           ((C18008 + C18009 + C18010) * C50753 +
            (C17288 + C17287 + C17286) * C33816) *
               C50677 * C50591 * C50627) *
              C50843 +
          (((C17292 + C17293 + C17294) * C33816 +
            (C18011 + C18012 + C18013) * C50753) *
               C50677 * C50591 * C50627 -
           ((C34173 + C34172 + C34171) * C50753 +
            (C17053 * C128 + C17065 + C17065 + C17046 * C142 + C17051 * C127 +
             C17066 + C17066 + C17045 * C141 + C17049 * C126 + C17067 + C17067 +
             C17044 * C140) *
                C33816) *
               C50677 * C50591 * C50800) *
              C50844 +
          (((C17049 * C127 + C17068 + C17068 + C17044 * C141 + C17051 * C128 +
             C17069 + C17069 + C17045 * C142 + C17053 * C129 + C17070 + C17070 +
             C17046 * C143) *
                C33816 +
            (C17049 * C413 + C17783 + C17783 + C17044 * C433 + C17051 * C412 +
             C17782 + C17782 + C17045 * C432 + C17053 * C420 + C17781 + C17781 +
             C17046 * C440) *
                C50753) *
               C50677 * C50591 * C50800 -
           ((C17053 * C809 + C17778 + C17778 + C17046 * C819 + C17051 * C808 +
             C17779 + C17779 + C17045 * C818 + C17049 * C807 + C17780 + C17780 +
             C17044 * C817) *
                C50753 +
            (C17631 + C17630 + C17629) * C33816) *
               C50677 * C50591 * C50627) *
              C560)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C33816 +
             C22247 * C50753) *
                C2192 +
            (C36695 + C36696) * C2193 + C36707 * C2194) *
               C50591 * C50800 -
           ((C36699 + C36700) * C2194 + (C36698 + C36697) * C2193 +
            (C36696 + C36695) * C2192) *
               C50591 * C50627) *
              C50843 +
          (((C36701 + C36702) * C2192 + (C36703 + C36704) * C2193 +
            (C36705 + C36706) * C2194) *
               C50591 * C50627 -
           (C36708 * C2194 + (C36702 + C36701) * C2193 +
            (C22251 * C50753 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C33816) *
                C2192) *
               C50591 * C50800) *
              C50844 +
          ((((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C33816 +
             C22571 * C50753) *
                C2192 +
            (C37001 + C37002) * C2193 + (C37003 + C37004) * C2194) *
               C50591 * C50800 -
           (((C19896 * C3145 + C20394 + C20394 + C50526 * C3151) * C50753 +
             C20292 * C33816) *
                C2194 +
            (C37004 + C37003) * C2193 + (C37002 + C37001) * C2192) *
               C50591 * C50627) *
              C560)) /
            (p * q * std::sqrt(p + q));
    d2ee[211] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
              C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 +
              C17058 + C17046 * C141) *
                 C33816 +
             (C34165 + C34166 + C34167) * C50753) *
                C50677 * C50801 -
            ((C34168 + C34169 + C34170) * C50753 +
             (C34167 + C34166 + C34165) * C33816) *
                C50677 * C50655) *
               C50800 +
           (((C18010 + C18009 + C18008) * C33816 +
             (C18437 + C18438 + C18439) * C50753) *
                C50677 * C50655 -
            ((C18008 + C18009 + C18010) * C50753 +
             (C17288 + C17287 + C17286) * C33816) *
                C50677 * C50801) *
               C50627) *
              C263 +
          ((((C34171 + C34172 + C34173) * C33816 +
             (C34174 + C34175 + C34176) * C50753) *
                C50677 * C50655 -
            ((C34173 + C34172 + C34171) * C50753 +
             (C17053 * C128 + C17065 + C17065 + C17046 * C142 + C17051 * C127 +
              C17066 + C17066 + C17045 * C141 + C17049 * C126 + C17067 +
              C17067 + C17044 * C140) *
                 C33816) *
                C50677 * C50801) *
               C50800 +
           (((C17292 + C17293 + C17294) * C33816 +
             (C18011 + C18012 + C18013) * C50753) *
                C50677 * C50801 -
            ((C17053 * C1116 + C17462 + C17462 + C17046 * C1124 +
              C17051 * C1117 + C17463 + C17463 + C17045 * C1125 +
              C17049 * C1118 + C17464 + C17464 + C17044 * C1126) *
                 C50753 +
             (C18013 + C18012 + C18011) * C33816) *
                C50677 * C50655) *
               C50627) *
              C50562)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C33816 +
              C22247 * C50753) *
                 C2192 +
             (C36695 + C36696) * C2193 + C36707 * C2194) *
                C50801 -
            ((C37345 + C37346) * C2194 + (C37347 + C37348) * C2193 +
             (C22248 * C50753 + C22247 * C33816) * C2192) *
                C50655) *
               C50800 +
           (((C37348 + C37347) * C2192 + (C37346 + C37345) * C2193 +
             (C20554 * C33816 + C20856 * C50753) * C2194) *
                C50655 -
            ((C36699 + C36700) * C2194 + (C36698 + C36697) * C2193 +
             (C36696 + C36695) * C2192) *
                C50801) *
               C50627) *
              C263 +
          ((((C22251 * C33816 + C22252 * C50753) * C2192 +
             (C37349 + C37350) * C2193 + (C37351 + C37352) * C2194) *
                C50655 -
            (C36708 * C2194 + (C36702 + C36701) * C2193 +
             (C22251 * C50753 +
              (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C33816) *
                 C2192) *
                C50801) *
               C50800 +
           (((C36701 + C36702) * C2192 + (C36703 + C36704) * C2193 +
             (C36705 + C36706) * C2194) *
                C50801 -
            (((C19896 * C3606 + C20175 + C20175 + C50526 * C3610) * C50753 +
              C20559 * C33816) *
                 C2194 +
             (C37352 + C37351) * C2193 + (C37350 + C37349) * C2192) *
                C50655) *
               C50627) *
              C50562)) /
            (p * q * std::sqrt(p + q));
    d2ee[212] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
             C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
             C17046 * C141) *
                C33816 +
            (C17049 * C415 + C17449 + C17449 + C17044 * C435 + C17051 * C414 +
             C17448 + C17448 + C17045 * C434 + C17053 * C413 + C17447 + C17447 +
             C17046 * C433) *
                C50753) *
               C50677 * C50591 * C260 -
           ((C18008 + C18009 + C18010) * C50753 +
            (C17288 + C17287 + C17286) * C33816) *
               C50677 * C50591 * C261 +
           ((C17291 + C17290 + C17289) * C33816 +
            (C18941 + C18942 + C18943) * C50753) *
               C50677 * C50591 * C262) *
              C263 +
          (((C17292 + C17293 + C17294) * C33816 +
            (C18011 + C18012 + C18013) * C50753) *
               C50677 * C50591 * C261 -
           ((C17053 * C412 + C17458 + C17458 + C17046 * C432 + C17051 * C413 +
             C17457 + C17457 + C17045 * C433 + C17049 * C414 + C17456 + C17456 +
             C17044 * C434) *
                C50753 +
            (C17053 * C128 + C17065 + C17065 + C17046 * C142 + C17051 * C127 +
             C17066 + C17066 + C17045 * C141 + C17049 * C126 + C17067 + C17067 +
             C17044 * C140) *
                C33816) *
               C50677 * C50591 * C260 -
           ((C17053 * C1463 + C17993 + C17993 + C17046 * C1471 +
             C17051 * C1464 + C17994 + C17994 + C17045 * C1472 +
             C17049 * C1465 + C17995 + C17995 + C17044 * C1473) *
                C50753 +
            (C17297 + C17296 + C17295) * C33816) *
               C50677 * C50591 * C262) *
              C50562)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
            C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
            C17046 * C141) *
               C33816 +
           (C17049 * C415 + C17449 + C17449 + C17044 * C435 + C17051 * C414 +
            C17448 + C17448 + C17045 * C434 + C17053 * C413 + C17447 + C17447 +
            C17046 * C433) *
               C50753) *
              C50677 * C50591 * C50575 * C113 -
          ((C17053 * C412 + C17458 + C17458 + C17046 * C432 + C17051 * C413 +
            C17457 + C17457 + C17045 * C433 + C17049 * C414 + C17456 + C17456 +
            C17044 * C434) *
               C50753 +
           (C17053 * C128 + C17065 + C17065 + C17046 * C142 + C17051 * C127 +
            C17066 + C17066 + C17045 * C141 + C17049 * C126 + C17067 + C17067 +
            C17044 * C140) *
               C33816) *
              C50677 * C50591 * C50575 * C114 +
          ((C17049 * C127 + C17068 + C17068 + C17044 * C141 + C17051 * C128 +
            C17069 + C17069 + C17045 * C142 + C17053 * C129 + C17070 + C17070 +
            C17046 * C143) *
               C33816 +
           (C17049 * C413 + C17783 + C17783 + C17044 * C433 + C17051 * C412 +
            C17782 + C17782 + C17045 * C432 + C17053 * C420 + C17781 + C17781 +
            C17046 * C440) *
               C50753) *
              C50677 * C50591 * C50575 * C115 -
          ((C17053 * C668 + C33819 + C33819 + C17046 * C670 + C17051 * C420 +
            C33820 + C33820 + C17045 * C440 + C17049 * C412 + C33821 + C33821 +
            C17044 * C432) *
               C50753 +
           (C17053 * C130 + C17077 + C17077 + C17046 * C144 + C17051 * C129 +
            C17078 + C17078 + C17045 * C143 + C17049 * C128 + C17079 + C17079 +
            C17044 * C142) *
               C33816) *
              C50677 * C50591 * C50575 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
             C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
             C17046 * C141) *
                C33816 +
            (C34165 + C34166 + C34167) * C50753) *
               C50677 * C409 -
           ((C34168 + C34169 + C34170) * C50753 +
            (C34167 + C34166 + C34165) * C33816) *
               C50677 * C410 +
           ((C34170 + C34169 + C34168) * C33816 +
            (C17049 * C1750 + C19339 + C19339 + C17044 * C1758 +
             C17051 * C1749 + C19338 + C19338 + C17045 * C1757 +
             C17053 * C1748 + C19337 + C19337 + C17046 * C1756) *
                C50753) *
               C50677 * C411) *
              C50575 * C263 +
          (((C34171 + C34172 + C34173) * C33816 +
            (C34174 + C34175 + C34176) * C50753) *
               C50677 * C410 -
           ((C34173 + C34172 + C34171) * C50753 +
            (C17053 * C128 + C17065 + C17065 + C17046 * C142 + C17051 * C127 +
             C17066 + C17066 + C17045 * C141 + C17049 * C126 + C17067 + C17067 +
             C17044 * C140) *
                C33816) *
               C50677 * C409 -
           ((C17053 * C1747 + C34138 + C34138 + C17046 * C1755 +
             C17051 * C1748 + C34139 + C34139 + C17045 * C1756 +
             C17049 * C1749 + C34140 + C34140 + C17044 * C1757) *
                C50753 +
            (C34176 + C34175 + C34174) * C33816) *
               C50677 * C411) *
              C50575 * C50562)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C33816 +
            C22247 * C50753) *
               C2192 +
           (C20049 * C33816 + C20556 * C50753) * C2193 +
           (C20050 * C33816 + C20555 * C50753) * C2194) *
              C50591 * C50575 * C113 -
          ((C20558 * C50753 + C20054 * C33816) * C2194 +
           (C20557 * C50753 + C20053 * C33816) * C2193 +
           (C22251 * C50753 +
            (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C33816) *
               C2192) *
              C50591 * C50575 * C114 +
          (((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C33816 +
            C22571 * C50753) *
               C2192 +
           (C20290 * C33816 + C22411 * C50753) * C2193 +
           (C20291 * C33816 + C31607 * C50753) * C2194) *
              C50591 * C50575 * C115 -
          (((C19896 * C1463 + C31147 + C31147 + C50526 * C1471) * C50753 +
            (C19896 * C272 + C19912 + C19912 + C50526 * C292) * C33816) *
               C2194 +
           ((C19896 * C808 + C21892 + C21892 + C50526 * C818) * C50753 +
            (C19896 * C265 + C19913 + C19913 + C50526 * C285) * C33816) *
               C2193 +
           ((C19896 * C412 + C21894 + C21894 + C50526 * C432) * C50753 +
            (C19896 * C128 + C19914 + C19914 + C50526 * C142) * C33816) *
               C2192) *
              C50591 * C50575 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C33816 +
             C22247 * C50753) *
                C2192 +
            (C36695 + C36696) * C2193 + C36707 * C2194) *
               C50591 * C260 -
           ((C36699 + C36700) * C2194 + (C36698 + C36697) * C2193 +
            (C36696 + C36695) * C2192) *
               C50591 * C261 +
           (C36707 * C2192 + (C36700 + C36699) * C2193 +
            (C20052 * C33816 + C21194 * C50753) * C2194) *
               C50591 * C262) *
              C263 +
          (((C36701 + C36702) * C2192 + (C36703 + C36704) * C2193 +
            (C36705 + C36706) * C2194) *
               C50591 * C261 -
           (C36708 * C2194 + (C36702 + C36701) * C2193 +
            (C22251 * C50753 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C33816) *
                C2192) *
               C50591 * C260 -
           (((C19896 * C4120 + C20541 + C20541 + C50526 * C4124) * C50753 +
             C20056 * C33816) *
                C2194 +
            (C36706 + C36705) * C2193 + C36708 * C2192) *
               C50591 * C262) *
              C50562)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C33816 +
             C22247 * C50753) *
                C2192 +
            (C36695 + C36696) * C2193 + C36707 * C2194) *
               C409 -
           ((C20855 * C50753 + C20555 * C33816) * C2194 +
            (C20854 * C50753 + C20556 * C33816) * C2193 +
            (C22248 * C50753 + C22247 * C33816) * C2192) *
               C410 +
           ((C22248 * C33816 + C22250 * C50753) * C2192 +
            (C20854 * C33816 + C22249 * C50753) * C2193 +
            (C20855 * C33816 + C23182 * C50753) * C2194) *
               C411) *
              C50575 * C263 +
          (((C22251 * C33816 + C22252 * C50753) * C2192 +
            (C20557 * C33816 + C22059 * C50753) * C2193 +
            (C20558 * C33816 + C22060 * C50753) * C2194) *
               C410 -
           (C36708 * C2194 + (C36702 + C36701) * C2193 +
            (C22251 * C50753 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C33816) *
                C2192) *
               C409 -
           (((C19896 * C4530 + C22773 + C22773 + C50526 * C4538) * C50753 +
             C22060 * C33816) *
                C2194 +
            (C22254 * C50753 + C22059 * C33816) * C2193 +
            (C22253 * C50753 + C22252 * C33816) * C2192) *
               C411) *
              C50575 * C50562)) /
            (p * q * std::sqrt(p + q));
    d2ee[213] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
             C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
             C17046 * C141) *
                C33816 +
            (C34165 + C34166 + C34167) * C50753) *
               C50677 * C50801 -
           ((C34168 + C34169 + C34170) * C50753 +
            (C34167 + C34166 + C34165) * C33816) *
               C50677 * C50655) *
              C50575 * C50843 +
          (((C34171 + C34172 + C34173) * C33816 +
            (C34174 + C34175 + C34176) * C50753) *
               C50677 * C50655 -
           ((C34173 + C34172 + C34171) * C50753 +
            (C17053 * C128 + C17065 + C17065 + C17046 * C142 + C17051 * C127 +
             C17066 + C17066 + C17045 * C141 + C17049 * C126 + C17067 + C17067 +
             C17044 * C140) *
                C33816) *
               C50677 * C50801) *
              C50575 * C50844 +
          (((C17049 * C127 + C17068 + C17068 + C17044 * C141 + C17051 * C128 +
             C17069 + C17069 + C17045 * C142 + C17053 * C129 + C17070 + C17070 +
             C17046 * C143) *
                C33816 +
            (C34484 + C34485 + C34486) * C50753) *
               C50677 * C50801 -
           ((C17053 * C421 + C34475 + C34475 + C17046 * C441 + C17051 * C419 +
             C34476 + C34476 + C17045 * C439 + C17049 * C418 + C34477 + C34477 +
             C17044 * C438) *
                C50753 +
            (C34486 + C34485 + C34484) * C33816) *
               C50677 * C50655) *
              C50575 * C560)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C33816 +
             C22247 * C50753) *
                C2192 +
            (C36695 + C36696) * C2193 + C36707 * C2194) *
               C50801 -
           ((C20855 * C50753 + C20555 * C33816) * C2194 +
            (C20854 * C50753 + C20556 * C33816) * C2193 +
            (C22248 * C50753 + C22247 * C33816) * C2192) *
               C50655) *
              C50575 * C50843 +
          (((C22251 * C33816 + C22252 * C50753) * C2192 +
            (C20557 * C33816 + C22059 * C50753) * C2193 +
            (C20558 * C33816 + C22060 * C50753) * C2194) *
               C50655 -
           (C36708 * C2194 + (C36702 + C36701) * C2193 +
            (C22251 * C50753 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C33816) *
                C2192) *
               C50801) *
              C50575 * C50844 +
          ((((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C33816 +
             C22571 * C50753) *
                C2192 +
            (C37001 + C37002) * C2193 + (C37003 + C37004) * C2194) *
               C50801 -
           (((C19896 * C2598 + C22406 + C22406 + C50526 * C2604) * C50753 +
             C31607 * C33816) *
                C2194 +
            (C22412 * C50753 + C22411 * C33816) * C2193 +
            (C22572 * C50753 + C22571 * C33816) * C2192) *
               C50655) *
              C50575 * C560)) /
            (p * q * std::sqrt(p + q));
    d2ee[214] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
            C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
            C17046 * C141) *
               C33816 +
           (C17049 * C415 + C17449 + C17449 + C17044 * C435 + C17051 * C414 +
            C17448 + C17448 + C17045 * C434 + C17053 * C413 + C17447 + C17447 +
            C17046 * C433) *
               C50753) *
              C50677 * C50591 * C50575 * C113 -
          ((C17053 * C412 + C17458 + C17458 + C17046 * C432 + C17051 * C413 +
            C17457 + C17457 + C17045 * C433 + C17049 * C414 + C17456 + C17456 +
            C17044 * C434) *
               C50753 +
           (C17053 * C128 + C17065 + C17065 + C17046 * C142 + C17051 * C127 +
            C17066 + C17066 + C17045 * C141 + C17049 * C126 + C17067 + C17067 +
            C17044 * C140) *
               C33816) *
              C50677 * C50591 * C50575 * C114 +
          ((C17049 * C127 + C17068 + C17068 + C17044 * C141 + C17051 * C128 +
            C17069 + C17069 + C17045 * C142 + C17053 * C129 + C17070 + C17070 +
            C17046 * C143) *
               C33816 +
           (C17049 * C413 + C17783 + C17783 + C17044 * C433 + C17051 * C412 +
            C17782 + C17782 + C17045 * C432 + C17053 * C420 + C17781 + C17781 +
            C17046 * C440) *
               C50753) *
              C50677 * C50591 * C50575 * C115 -
          ((C17053 * C668 + C33819 + C33819 + C17046 * C670 + C17051 * C420 +
            C33820 + C33820 + C17045 * C440 + C17049 * C412 + C33821 + C33821 +
            C17044 * C432) *
               C50753 +
           (C17053 * C130 + C17077 + C17077 + C17046 * C144 + C17051 * C129 +
            C17078 + C17078 + C17045 * C143 + C17049 * C128 + C17079 + C17079 +
            C17044 * C142) *
               C33816) *
              C50677 * C50591 * C50575 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
             C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
             C17046 * C141) *
                C33816 +
            (C17049 * C415 + C17449 + C17449 + C17044 * C435 + C17051 * C414 +
             C17448 + C17448 + C17045 * C434 + C17053 * C413 + C17447 + C17447 +
             C17046 * C433) *
                C50753) *
               C50677 * C50591 * C260 -
           ((C18008 + C18009 + C18010) * C50753 +
            (C17288 + C17287 + C17286) * C33816) *
               C50677 * C50591 * C261 +
           ((C17291 + C17290 + C17289) * C33816 +
            (C18941 + C18942 + C18943) * C50753) *
               C50677 * C50591 * C262) *
              C263 +
          (((C17292 + C17293 + C17294) * C33816 +
            (C18011 + C18012 + C18013) * C50753) *
               C50677 * C50591 * C261 -
           ((C17053 * C412 + C17458 + C17458 + C17046 * C432 + C17051 * C413 +
             C17457 + C17457 + C17045 * C433 + C17049 * C414 + C17456 + C17456 +
             C17044 * C434) *
                C50753 +
            (C17053 * C128 + C17065 + C17065 + C17046 * C142 + C17051 * C127 +
             C17066 + C17066 + C17045 * C141 + C17049 * C126 + C17067 + C17067 +
             C17044 * C140) *
                C33816) *
               C50677 * C50591 * C260 -
           ((C17053 * C1463 + C17993 + C17993 + C17046 * C1471 +
             C17051 * C1464 + C17994 + C17994 + C17045 * C1472 +
             C17049 * C1465 + C17995 + C17995 + C17044 * C1473) *
                C50753 +
            (C17297 + C17296 + C17295) * C33816) *
               C50677 * C50591 * C262) *
              C50562)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C33816 +
            C22247 * C50753) *
               C2192 +
           (C20049 * C33816 + C20556 * C50753) * C2193 +
           (C20050 * C33816 + C20555 * C50753) * C2194) *
              C50591 * C50575 * C113 -
          ((C20558 * C50753 + C20054 * C33816) * C2194 +
           (C20557 * C50753 + C20053 * C33816) * C2193 +
           (C22251 * C50753 +
            (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C33816) *
               C2192) *
              C50591 * C50575 * C114 +
          (((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C33816 +
            C22571 * C50753) *
               C2192 +
           (C20290 * C33816 + C22411 * C50753) * C2193 +
           (C20291 * C33816 + C31607 * C50753) * C2194) *
              C50591 * C50575 * C115 -
          (((C19896 * C1463 + C31147 + C31147 + C50526 * C1471) * C50753 +
            (C19896 * C272 + C19912 + C19912 + C50526 * C292) * C33816) *
               C2194 +
           ((C19896 * C808 + C21892 + C21892 + C50526 * C818) * C50753 +
            (C19896 * C265 + C19913 + C19913 + C50526 * C285) * C33816) *
               C2193 +
           ((C19896 * C412 + C21894 + C21894 + C50526 * C432) * C50753 +
            (C19896 * C128 + C19914 + C19914 + C50526 * C142) * C33816) *
               C2192) *
              C50591 * C50575 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C33816 +
             C22247 * C50753) *
                C2192 +
            (C36695 + C36696) * C2193 + C36707 * C2194) *
               C50591 * C260 -
           ((C36699 + C36700) * C2194 + (C36698 + C36697) * C2193 +
            (C36696 + C36695) * C2192) *
               C50591 * C261 +
           (C36707 * C2192 + (C36700 + C36699) * C2193 +
            (C20052 * C33816 + C21194 * C50753) * C2194) *
               C50591 * C262) *
              C263 +
          (((C36701 + C36702) * C2192 + (C36703 + C36704) * C2193 +
            (C36705 + C36706) * C2194) *
               C50591 * C261 -
           (C36708 * C2194 + (C36702 + C36701) * C2193 +
            (C22251 * C50753 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C33816) *
                C2192) *
               C50591 * C260 -
           (((C19896 * C4120 + C20541 + C20541 + C50526 * C4124) * C50753 +
             C20056 * C33816) *
                C2194 +
            (C36706 + C36705) * C2193 + C36708 * C2192) *
               C50591 * C262) *
              C50562)) /
            (p * q * std::sqrt(p + q));
    d2ee[215] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
             C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
             C17046 * C141) *
                C33816 +
            (C34165 + C34166 + C34167) * C50753) *
               C50677 * C50591 * C50845 -
           ((C18008 + C18009 + C18010) * C50753 +
            (C17288 + C17287 + C17286) * C33816) *
               C50677 * C50591 * C50846 +
           ((C17291 + C17290 + C17289) * C33816 +
            (C18941 + C18942 + C18943) * C50753) *
               C50677 * C50591 * C1232) *
              C50792 +
          (((C17292 + C17293 + C17294) * C33816 +
            (C18011 + C18012 + C18013) * C50753) *
               C50677 * C50591 * C50846 -
           ((C34173 + C34172 + C34171) * C50753 +
            (C17053 * C128 + C17065 + C17065 + C17046 * C142 + C17051 * C127 +
             C17066 + C17066 + C17045 * C141 + C17049 * C126 + C17067 + C17067 +
             C17044 * C140) *
                C33816) *
               C50677 * C50591 * C50845 -
           ((C17053 * C1463 + C17993 + C17993 + C17046 * C1471 +
             C17051 * C1464 + C17994 + C17994 + C17045 * C1472 +
             C17049 * C1465 + C17995 + C17995 + C17044 * C1473) *
                C50753 +
            (C17297 + C17296 + C17295) * C33816) *
               C50677 * C50591 * C1232) *
              C50562)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C33816 +
             C22247 * C50753) *
                C2192 +
            (C36695 + C36696) * C2193 + C36707 * C2194) *
               C50591 * C50845 -
           (C37597 * C2194 + (C36698 + C36697) * C2193 +
            (C36696 + C36695) * C2192) *
               C50591 * C50846 +
           (C36707 * C2192 + (C36700 + C36699) * C2193 +
            (C37598 + C37599) * C2194) *
               C50591 * C1232) *
              C50792 +
          (((C36701 + C36702) * C2192 + (C36703 + C36704) * C2193 +
            (C36705 + C36706) * C2194) *
               C50591 * C50846 -
           (C36708 * C2194 + (C36702 + C36701) * C2193 +
            (C22251 * C50753 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C33816) *
                C2192) *
               C50591 * C50845 -
           (((C19896 * C4120 + C20541 + C20541 + C50526 * C4124) * C50753 +
             C20056 * C33816) *
                C2194 +
            (C36706 + C36705) * C2193 + C36708 * C2192) *
               C50591 * C1232) *
              C50562)) /
            (p * q * std::sqrt(p + q));
    d2ee[216] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
             C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
             C17046 * C141) *
                C33816 +
            (C34165 + C34166 + C34167) * C50753) *
               C50677 * C50801 -
           ((C34168 + C34169 + C34170) * C50753 +
            (C34167 + C34166 + C34165) * C33816) *
               C50677 * C50655) *
              C50845 +
          (((C18010 + C18009 + C18008) * C33816 +
            (C18437 + C18438 + C18439) * C50753) *
               C50677 * C50655 -
           ((C18008 + C18009 + C18010) * C50753 +
            (C17288 + C17287 + C17286) * C33816) *
               C50677 * C50801) *
              C50846 +
          (((C17291 + C17290 + C17289) * C33816 +
            (C18941 + C18942 + C18943) * C50753) *
               C50677 * C50801 -
           ((C17053 * C2598 + C18428 + C18428 + C17046 * C2604 +
             C17051 * C2597 + C18429 + C18429 + C17045 * C2603 +
             C17049 * C2596 + C18430 + C18430 + C17044 * C2602) *
                C50753 +
            (C18943 + C18942 + C18941) * C33816) *
               C50677 * C50655) *
              C1232) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C33816 +
             C22247 * C50753) *
                C2192 +
            (C36695 + C36696) * C2193 + C36707 * C2194) *
               C50801 -
           (C38236 * C2194 + (C37347 + C37348) * C2193 +
            (C22248 * C50753 + C22247 * C33816) * C2192) *
               C50655) *
              C50845 +
          (((C37348 + C37347) * C2192 + (C37346 + C37345) * C2193 +
            (C38237 + C38238) * C2194) *
               C50655 -
           (C37597 * C2194 + (C36698 + C36697) * C2193 +
            (C36696 + C36695) * C2192) *
               C50801) *
              C50846 +
          ((C36707 * C2192 + (C36700 + C36699) * C2193 +
            (C37598 + C37599) * C2194) *
               C50801 -
           (((C19896 * C20837 + C20847 + C20847 + C50526 * C20839) * C50753 +
             C21194 * C33816) *
                C2194 +
            (C38238 + C38237) * C2193 + C38236 * C2192) *
               C50655) *
              C1232) *
         C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[217] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
            C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
            C17046 * C141) *
               C33816 +
           (C34165 + C34166 + C34167) * C50753) *
              C50677 * C50591 * C997 -
          ((C18008 + C18009 + C18010) * C50753 +
           (C17288 + C17287 + C17286) * C33816) *
              C50677 * C50591 * C998 +
          ((C17291 + C17290 + C17289) * C33816 +
           (C18941 + C18942 + C18943) * C50753) *
              C50677 * C50591 * C999 -
          ((C17053 * C3145 + C18932 + C18932 + C17046 * C3151 + C17051 * C3144 +
            C18933 + C18933 + C17045 * C3150 + C17049 * C3143 + C18934 +
            C18934 + C17044 * C3149) *
               C50753 +
           (C18275 + C18274 + C18273) * C33816) *
              C50677 * C50591 * C1000) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
             C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
             C17046 * C141) *
                C33816 +
            (C34165 + C34166 + C34167) * C50753) *
               C50677 * C50591 * C926 -
           ((C18008 + C18009 + C18010) * C50753 +
            (C17288 + C17287 + C17286) * C33816) *
               C50677 * C50591 * C50627) *
              C928 +
          (((C17292 + C17293 + C17294) * C33816 +
            (C18011 + C18012 + C18013) * C50753) *
               C50677 * C50591 * C50627 -
           ((C34173 + C34172 + C34171) * C50753 +
            (C17053 * C128 + C17065 + C17065 + C17046 * C142 + C17051 * C127 +
             C17066 + C17066 + C17045 * C141 + C17049 * C126 + C17067 + C17067 +
             C17044 * C140) *
                C33816) *
               C50677 * C50591 * C926) *
              C929 +
          (((C17049 * C127 + C17068 + C17068 + C17044 * C141 + C17051 * C128 +
             C17069 + C17069 + C17045 * C142 + C17053 * C129 + C17070 + C17070 +
             C17046 * C143) *
                C33816 +
            (C34484 + C34485 + C34486) * C50753) *
               C50677 * C50591 * C926 -
           ((C17053 * C809 + C17778 + C17778 + C17046 * C819 + C17051 * C808 +
             C17779 + C17779 + C17045 * C818 + C17049 * C807 + C17780 + C17780 +
             C17044 * C817) *
                C50753 +
            (C17631 + C17630 + C17629) * C33816) *
               C50677 * C50591 * C50627) *
              C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
             C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
             C17046 * C141) *
                C33816 +
            (C34165 + C34166 + C34167) * C50753) *
               C50677 * C409 -
           ((C34168 + C34169 + C34170) * C50753 +
            (C34167 + C34166 + C34165) * C33816) *
               C50677 * C410 +
           ((C34170 + C34169 + C34168) * C33816 +
            (C17049 * C1750 + C19339 + C19339 + C17044 * C1758 +
             C17051 * C1749 + C19338 + C19338 + C17045 * C1757 +
             C17053 * C1748 + C19337 + C19337 + C17046 * C1756) *
                C50753) *
               C50677 * C411) *
              C926 +
          (((C18010 + C18009 + C18008) * C33816 +
            (C18437 + C18438 + C18439) * C50753) *
               C50677 * C410 -
           ((C18008 + C18009 + C18010) * C50753 +
            (C17288 + C17287 + C17286) * C33816) *
               C50677 * C409 -
           ((C17053 * C6020 + C19334 + C19334 + C17046 * C6022 +
             C17051 * C4532 + C19335 + C19335 + C17045 * C4540 +
             C17049 * C4533 + C19336 + C19336 + C17044 * C4541) *
                C50753 +
            (C18439 + C18438 + C18437) * C33816) *
               C50677 * C411) *
              C50627) *
         C50556) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C33816 +
             C22247 * C50753) *
                C2192 +
            (C36695 + C36696) * C2193 + C36707 * C2194) *
               C50591 * C926 -
           ((C36699 + C36700) * C2194 + (C36698 + C36697) * C2193 +
            (C36696 + C36695) * C2192) *
               C50591 * C50627) *
              C928 +
          (((C36701 + C36702) * C2192 + (C36703 + C36704) * C2193 +
            (C36705 + C36706) * C2194) *
               C50591 * C50627 -
           (C36708 * C2194 + (C36702 + C36701) * C2193 +
            (C22251 * C50753 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C33816) *
                C2192) *
               C50591 * C926) *
              C929 +
          ((((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C33816 +
             C22571 * C50753) *
                C2192 +
            (C37001 + C37002) * C2193 + (C37003 + C37004) * C2194) *
               C50591 * C926 -
           (((C19896 * C3145 + C20394 + C20394 + C50526 * C3151) * C50753 +
             C20292 * C33816) *
                C2194 +
            (C37004 + C37003) * C2193 + (C37002 + C37001) * C2192) *
               C50591 * C50627) *
              C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C33816 +
            C22247 * C50753) *
               C2192 +
           (C36695 + C36696) * C2193 + C36707 * C2194) *
              C50591 * C997 -
          (C37597 * C2194 + (C36698 + C36697) * C2193 +
           (C36696 + C36695) * C2192) *
              C50591 * C998 +
          (C36707 * C2192 + (C36700 + C36699) * C2193 +
           (C37598 + C37599) * C2194) *
              C50591 * C999 -
          (((C19896 * C21185 + C21191 + C21191 + C50526 * C21187) * C50753 +
            C20738 * C33816) *
               C2194 +
           (C37599 + C37598) * C2193 + C37597 * C2192) *
              C50591 * C1000) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C33816 +
             C22247 * C50753) *
                C2192 +
            (C36695 + C36696) * C2193 + C36707 * C2194) *
               C409 -
           ((C37345 + C37346) * C2194 + (C37347 + C37348) * C2193 +
            (C22248 * C50753 + C22247 * C33816) * C2192) *
               C410 +
           ((C22248 * C33816 + C22250 * C50753) * C2192 +
            (C37746 + C37747) * C2193 + (C37748 + C37749) * C2194) *
               C411) *
              C926 +
          (((C37348 + C37347) * C2192 + (C37346 + C37345) * C2193 +
            (C20554 * C33816 + C20856 * C50753) * C2194) *
               C410 -
           (C37597 * C2194 + (C36698 + C36697) * C2193 +
            (C36696 + C36695) * C2192) *
               C409 -
           (((C19896 * C21457 + C21461 + C21461 + C50526 * C21459) * C50753 +
             C20856 * C33816) *
                C2194 +
            (C37749 + C37748) * C2193 + (C37747 + C37746) * C2192) *
               C411) *
              C50627) *
         C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[218] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
              C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 +
              C17058 + C17046 * C141) *
                 C33816 +
             (C34165 + C34166 + C34167) * C50753) *
                C50677 * C50801 -
            ((C34168 + C34169 + C34170) * C50753 +
             (C34167 + C34166 + C34165) * C33816) *
                C50677 * C50655) *
               C926 +
           (((C18010 + C18009 + C18008) * C33816 +
             (C18437 + C18438 + C18439) * C50753) *
                C50677 * C50655 -
            ((C18008 + C18009 + C18010) * C50753 +
             (C17288 + C17287 + C17286) * C33816) *
                C50677 * C50801) *
               C50627) *
              C50792 +
          ((((C34171 + C34172 + C34173) * C33816 +
             (C34174 + C34175 + C34176) * C50753) *
                C50677 * C50655 -
            ((C34173 + C34172 + C34171) * C50753 +
             (C17053 * C128 + C17065 + C17065 + C17046 * C142 + C17051 * C127 +
              C17066 + C17066 + C17045 * C141 + C17049 * C126 + C17067 +
              C17067 + C17044 * C140) *
                 C33816) *
                C50677 * C50801) *
               C926 +
           (((C17292 + C17293 + C17294) * C33816 +
             (C18011 + C18012 + C18013) * C50753) *
                C50677 * C50801 -
            ((C17053 * C1116 + C17462 + C17462 + C17046 * C1124 +
              C17051 * C1117 + C17463 + C17463 + C17045 * C1125 +
              C17049 * C1118 + C17464 + C17464 + C17044 * C1126) *
                 C50753 +
             (C18013 + C18012 + C18011) * C33816) *
                C50677 * C50655) *
               C50627) *
              C50562)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C33816 +
              C22247 * C50753) *
                 C2192 +
             (C36695 + C36696) * C2193 + C36707 * C2194) *
                C50801 -
            ((C37345 + C37346) * C2194 + (C37347 + C37348) * C2193 +
             (C22248 * C50753 + C22247 * C33816) * C2192) *
                C50655) *
               C926 +
           (((C37348 + C37347) * C2192 + (C37346 + C37345) * C2193 +
             (C20554 * C33816 + C20856 * C50753) * C2194) *
                C50655 -
            (C37597 * C2194 + (C36698 + C36697) * C2193 +
             (C36696 + C36695) * C2192) *
                C50801) *
               C50627) *
              C50792 +
          ((((C22251 * C33816 + C22252 * C50753) * C2192 +
             (C37349 + C37350) * C2193 + (C37351 + C37352) * C2194) *
                C50655 -
            (C36708 * C2194 + (C36702 + C36701) * C2193 +
             (C22251 * C50753 +
              (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C33816) *
                 C2192) *
                C50801) *
               C926 +
           (((C36701 + C36702) * C2192 + (C36703 + C36704) * C2193 +
             (C36705 + C36706) * C2194) *
                C50801 -
            (((C19896 * C3606 + C20175 + C20175 + C50526 * C3610) * C50753 +
              C20559 * C33816) *
                 C2194 +
             (C37352 + C37351) * C2193 + (C37350 + C37349) * C2192) *
                C50655) *
               C50627) *
              C50562)) /
            (p * q * std::sqrt(p + q));
    d2ee[219] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
             C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
             C17046 * C141) *
                C33816 +
            (C34165 + C34166 + C34167) * C50753) *
               C50677 * C50591 * C926 -
           ((C18008 + C18009 + C18010) * C50753 +
            (C17288 + C17287 + C17286) * C33816) *
               C50677 * C50591 * C50627) *
              C928 +
          (((C17292 + C17293 + C17294) * C33816 +
            (C18011 + C18012 + C18013) * C50753) *
               C50677 * C50591 * C50627 -
           ((C34173 + C34172 + C34171) * C50753 +
            (C17053 * C128 + C17065 + C17065 + C17046 * C142 + C17051 * C127 +
             C17066 + C17066 + C17045 * C141 + C17049 * C126 + C17067 + C17067 +
             C17044 * C140) *
                C33816) *
               C50677 * C50591 * C926) *
              C929 +
          (((C17049 * C127 + C17068 + C17068 + C17044 * C141 + C17051 * C128 +
             C17069 + C17069 + C17045 * C142 + C17053 * C129 + C17070 + C17070 +
             C17046 * C143) *
                C33816 +
            (C34484 + C34485 + C34486) * C50753) *
               C50677 * C50591 * C926 -
           ((C17053 * C809 + C17778 + C17778 + C17046 * C819 + C17051 * C808 +
             C17779 + C17779 + C17045 * C818 + C17049 * C807 + C17780 + C17780 +
             C17044 * C817) *
                C50753 +
            (C17631 + C17630 + C17629) * C33816) *
               C50677 * C50591 * C50627) *
              C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
            C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
            C17046 * C141) *
               C33816 +
           (C34165 + C34166 + C34167) * C50753) *
              C50677 * C50591 * C997 -
          ((C18008 + C18009 + C18010) * C50753 +
           (C17288 + C17287 + C17286) * C33816) *
              C50677 * C50591 * C998 +
          ((C17291 + C17290 + C17289) * C33816 +
           (C18941 + C18942 + C18943) * C50753) *
              C50677 * C50591 * C999 -
          ((C17053 * C3145 + C18932 + C18932 + C17046 * C3151 + C17051 * C3144 +
            C18933 + C18933 + C17045 * C3150 + C17049 * C3143 + C18934 +
            C18934 + C17044 * C3149) *
               C50753 +
           (C18275 + C18274 + C18273) * C33816) *
              C50677 * C50591 * C1000) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C33816 +
             C22247 * C50753) *
                C2192 +
            (C36695 + C36696) * C2193 + C36707 * C2194) *
               C50591 * C926 -
           ((C36699 + C36700) * C2194 + (C36698 + C36697) * C2193 +
            (C36696 + C36695) * C2192) *
               C50591 * C50627) *
              C928 +
          (((C36701 + C36702) * C2192 + (C36703 + C36704) * C2193 +
            (C36705 + C36706) * C2194) *
               C50591 * C50627 -
           (C36708 * C2194 + (C36702 + C36701) * C2193 +
            (C22251 * C50753 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C33816) *
                C2192) *
               C50591 * C926) *
              C929 +
          ((((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C33816 +
             C22571 * C50753) *
                C2192 +
            (C37001 + C37002) * C2193 + (C37003 + C37004) * C2194) *
               C50591 * C926 -
           (((C19896 * C3145 + C20394 + C20394 + C50526 * C3151) * C50753 +
             C20292 * C33816) *
                C2194 +
            (C37004 + C37003) * C2193 + (C37002 + C37001) * C2192) *
               C50591 * C50627) *
              C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C33816 +
            C22247 * C50753) *
               C2192 +
           (C36695 + C36696) * C2193 + C36707 * C2194) *
              C50591 * C997 -
          (C37597 * C2194 + (C36698 + C36697) * C2193 +
           (C36696 + C36695) * C2192) *
              C50591 * C998 +
          (C36707 * C2192 + (C36700 + C36699) * C2193 +
           (C37598 + C37599) * C2194) *
              C50591 * C999 -
          (((C19896 * C21185 + C21191 + C21191 + C50526 * C21187) * C50753 +
            C20738 * C33816) *
               C2194 +
           (C37599 + C37598) * C2193 + C37597 * C2192) *
              C50591 * C1000) *
         C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[220] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
              C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 +
              C17058 + C17046 * C141) *
                 C33816 +
             (C34165 + C34166 + C34167) * C50753) *
                C50677 * C1577 -
            ((C34168 + C34169 + C34170) * C50753 +
             (C34167 + C34166 + C34165) * C33816) *
                C50677 * C50655) *
               C50800 +
           (((C18010 + C18009 + C18008) * C33816 +
             (C18437 + C18438 + C18439) * C50753) *
                C50677 * C50655 -
            ((C18008 + C18009 + C18010) * C50753 +
             (C17288 + C17287 + C17286) * C33816) *
                C50677 * C1577) *
               C50627) *
              C50792 +
          ((((C34171 + C34172 + C34173) * C33816 +
             (C34174 + C34175 + C34176) * C50753) *
                C50677 * C50655 -
            ((C34173 + C34172 + C34171) * C50753 +
             (C17053 * C128 + C17065 + C17065 + C17046 * C142 + C17051 * C127 +
              C17066 + C17066 + C17045 * C141 + C17049 * C126 + C17067 +
              C17067 + C17044 * C140) *
                 C33816) *
                C50677 * C1577) *
               C50800 +
           (((C17292 + C17293 + C17294) * C33816 +
             (C18011 + C18012 + C18013) * C50753) *
                C50677 * C1577 -
            ((C17053 * C1116 + C17462 + C17462 + C17046 * C1124 +
              C17051 * C1117 + C17463 + C17463 + C17045 * C1125 +
              C17049 * C1118 + C17464 + C17464 + C17044 * C1126) *
                 C50753 +
             (C18013 + C18012 + C18011) * C33816) *
                C50677 * C50655) *
               C50627) *
              C50562)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C33816 +
              C22247 * C50753) *
                 C2192 +
             (C36695 + C36696) * C2193 + C36707 * C2194) *
                C1577 -
            (C38236 * C2194 + (C37347 + C37348) * C2193 +
             (C22248 * C50753 + C22247 * C33816) * C2192) *
                C50655) *
               C50800 +
           (((C37348 + C37347) * C2192 + (C37346 + C37345) * C2193 +
             (C38237 + C38238) * C2194) *
                C50655 -
            (C37597 * C2194 + (C36698 + C36697) * C2193 +
             (C36696 + C36695) * C2192) *
                C1577) *
               C50627) *
              C50792 +
          ((((C22251 * C33816 + C22252 * C50753) * C2192 +
             (C37349 + C37350) * C2193 + (C37351 + C37352) * C2194) *
                C50655 -
            (C36708 * C2194 + (C36702 + C36701) * C2193 +
             (C22251 * C50753 +
              (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C33816) *
                 C2192) *
                C1577) *
               C50800 +
           (((C36701 + C36702) * C2192 + (C36703 + C36704) * C2193 +
             (C36705 + C36706) * C2194) *
                C1577 -
            (((C19896 * C3606 + C20175 + C20175 + C50526 * C3610) * C50753 +
              C20559 * C33816) *
                 C2194 +
             (C37352 + C37351) * C2193 + (C37350 + C37349) * C2192) *
                C50655) *
               C50627) *
              C50562)) /
            (p * q * std::sqrt(p + q));
    d2ee[221] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
             C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
             C17046 * C141) *
                C33816 +
            (C34165 + C34166 + C34167) * C50753) *
               C50677 * C50847 -
           ((C34168 + C34169 + C34170) * C50753 +
            (C34167 + C34166 + C34165) * C33816) *
               C50677 * C50848 +
           ((C34170 + C34169 + C34168) * C33816 +
            (C35962 + C35963 + C35964) * C50753) *
               C50677 * C1993) *
              C50800 +
          (((C18010 + C18009 + C18008) * C33816 +
            (C18437 + C18438 + C18439) * C50753) *
               C50677 * C50848 -
           ((C18008 + C18009 + C18010) * C50753 +
            (C17288 + C17287 + C17286) * C33816) *
               C50677 * C50847 -
           ((C17053 * C6020 + C19334 + C19334 + C17046 * C6022 +
             C17051 * C4532 + C19335 + C19335 + C17045 * C4540 +
             C17049 * C4533 + C19336 + C19336 + C17044 * C4541) *
                C50753 +
            (C18439 + C18438 + C18437) * C33816) *
               C50677 * C1993) *
              C50627) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C33816 +
             C22247 * C50753) *
                C2192 +
            (C36695 + C36696) * C2193 + C36707 * C2194) *
               C50847 -
           (C38236 * C2194 + (C37347 + C37348) * C2193 +
            (C22248 * C50753 + C22247 * C33816) * C2192) *
               C50848 +
           ((C22248 * C33816 + C22250 * C50753) * C2192 +
            (C37746 + C37747) * C2193 + (C37748 + C37749) * C2194) *
               C1993) *
              C50800 +
          (((C37348 + C37347) * C2192 + (C37346 + C37345) * C2193 +
            (C38237 + C38238) * C2194) *
               C50848 -
           (C37597 * C2194 + (C36698 + C36697) * C2193 +
            (C36696 + C36695) * C2192) *
               C50847 -
           (((C19896 * C21457 + C21461 + C21461 + C50526 * C21459) * C50753 +
             C20856 * C33816) *
                C2194 +
            (C37749 + C37748) * C2193 + (C37747 + C37746) * C2192) *
               C1993) *
              C50627) *
         C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[222] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
             C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
             C17046 * C141) *
                C33816 +
            (C34165 + C34166 + C34167) * C50753) *
               C50677 * C1577 -
           ((C34168 + C34169 + C34170) * C50753 +
            (C34167 + C34166 + C34165) * C33816) *
               C50677 * C50655) *
              C260 +
          (((C18010 + C18009 + C18008) * C33816 +
            (C18437 + C18438 + C18439) * C50753) *
               C50677 * C50655 -
           ((C18008 + C18009 + C18010) * C50753 +
            (C17288 + C17287 + C17286) * C33816) *
               C50677 * C1577) *
              C261 +
          (((C17291 + C17290 + C17289) * C33816 +
            (C18941 + C18942 + C18943) * C50753) *
               C50677 * C1577 -
           ((C17053 * C2598 + C18428 + C18428 + C17046 * C2604 +
             C17051 * C2597 + C18429 + C18429 + C17045 * C2603 +
             C17049 * C2596 + C18430 + C18430 + C17044 * C2602) *
                C50753 +
            (C18943 + C18942 + C18941) * C33816) *
               C50677 * C50655) *
              C262) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
             C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
             C17046 * C141) *
                C33816 +
            (C34165 + C34166 + C34167) * C50753) *
               C50677 * C1577 -
           ((C34168 + C34169 + C34170) * C50753 +
            (C34167 + C34166 + C34165) * C33816) *
               C50677 * C50655) *
              C50575 * C928 +
          (((C34171 + C34172 + C34173) * C33816 +
            (C34174 + C34175 + C34176) * C50753) *
               C50677 * C50655 -
           ((C34173 + C34172 + C34171) * C50753 +
            (C17053 * C128 + C17065 + C17065 + C17046 * C142 + C17051 * C127 +
             C17066 + C17066 + C17045 * C141 + C17049 * C126 + C17067 + C17067 +
             C17044 * C140) *
                C33816) *
               C50677 * C1577) *
              C50575 * C929 +
          (((C17049 * C127 + C17068 + C17068 + C17044 * C141 + C17051 * C128 +
             C17069 + C17069 + C17045 * C142 + C17053 * C129 + C17070 + C17070 +
             C17046 * C143) *
                C33816 +
            (C34484 + C34485 + C34486) * C50753) *
               C50677 * C1577 -
           ((C17053 * C421 + C34475 + C34475 + C17046 * C441 + C17051 * C419 +
             C34476 + C34476 + C17045 * C439 + C17049 * C418 + C34477 + C34477 +
             C17044 * C438) *
                C50753 +
            (C34486 + C34485 + C34484) * C33816) *
               C50677 * C50655) *
              C50575 * C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
            C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
            C17046 * C141) *
               C33816 +
           (C34165 + C34166 + C34167) * C50753) *
              C50677 * C1743 -
          ((C34168 + C34169 + C34170) * C50753 +
           (C34167 + C34166 + C34165) * C33816) *
              C50677 * C1744 +
          ((C34170 + C34169 + C34168) * C33816 +
           (C35962 + C35963 + C35964) * C50753) *
              C50677 * C1745 -
          ((C17053 * C5435 + C35953 + C35953 + C17046 * C5441 + C17051 * C5434 +
            C35954 + C35954 + C17045 * C5440 + C17049 * C5433 + C35955 +
            C35955 + C17044 * C5439) *
               C50753 +
           (C35964 + C35963 + C35962) * C33816) *
              C50677 * C1746) *
         C50575 * C50556) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C33816 +
             C22247 * C50753) *
                C2192 +
            (C36695 + C36696) * C2193 + C36707 * C2194) *
               C1577 -
           (C38236 * C2194 + (C37347 + C37348) * C2193 +
            (C22248 * C50753 + C22247 * C33816) * C2192) *
               C50655) *
              C50575 * C928 +
          (((C22251 * C33816 + C22252 * C50753) * C2192 +
            (C37349 + C37350) * C2193 + (C37351 + C37352) * C2194) *
               C50655 -
           (C36708 * C2194 + (C36702 + C36701) * C2193 +
            (C22251 * C50753 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C33816) *
                C2192) *
               C1577) *
              C50575 * C929 +
          ((((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C33816 +
             C22571 * C50753) *
                C2192 +
            (C37001 + C37002) * C2193 + (C37003 + C37004) * C2194) *
               C1577 -
           (((C19896 * C2598 + C22406 + C22406 + C50526 * C2604) * C50753 +
             C31607 * C33816) *
                C2194 +
            (C22412 * C50753 + C22411 * C33816) * C2193 +
            (C22572 * C50753 + C22571 * C33816) * C2192) *
               C50655) *
              C50575 * C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C33816 +
             C22247 * C50753) *
                C2192 +
            (C36695 + C36696) * C2193 + C36707 * C2194) *
               C1577 -
           (C38236 * C2194 + (C37347 + C37348) * C2193 +
            (C22248 * C50753 + C22247 * C33816) * C2192) *
               C50655) *
              C260 +
          (((C37348 + C37347) * C2192 + (C37346 + C37345) * C2193 +
            (C38237 + C38238) * C2194) *
               C50655 -
           (C37597 * C2194 + (C36698 + C36697) * C2193 +
            (C36696 + C36695) * C2192) *
               C1577) *
              C261 +
          ((C36707 * C2192 + (C36700 + C36699) * C2193 +
            (C37598 + C37599) * C2194) *
               C1577 -
           (((C19896 * C20837 + C20847 + C20847 + C50526 * C20839) * C50753 +
             C21194 * C33816) *
                C2194 +
            (C38238 + C38237) * C2193 + C38236 * C2192) *
               C50655) *
              C262) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C33816 +
            C22247 * C50753) *
               C2192 +
           (C36695 + C36696) * C2193 + C36707 * C2194) *
              C1743 -
          (C38236 * C2194 + (C37347 + C37348) * C2193 +
           (C22248 * C50753 + C22247 * C33816) * C2192) *
              C1744 +
          ((C22248 * C33816 + C22250 * C50753) * C2192 +
           (C37746 + C37747) * C2193 + (C37748 + C37749) * C2194) *
              C1745 -
          (((C19896 * C23166 + C23176 + C23176 + C50526 * C23168) * C50753 +
            C23182 * C33816) *
               C2194 +
           (C23181 * C50753 + C22249 * C33816) * C2193 +
           (C24072 * C50753 + C22250 * C33816) * C2192) *
              C1746) *
         C50575 * C50556) /
            (p * q * std::sqrt(p + q));
    d2ee[223] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
             C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
             C17046 * C141) *
                C33816 +
            (C34165 + C34166 + C34167) * C50753) *
               C50677 * C50847 -
           ((C34168 + C34169 + C34170) * C50753 +
            (C34167 + C34166 + C34165) * C33816) *
               C50677 * C50848 +
           ((C34170 + C34169 + C34168) * C33816 +
            (C35962 + C35963 + C35964) * C50753) *
               C50677 * C1993) *
              C50575 * C50792 +
          (((C34171 + C34172 + C34173) * C33816 +
            (C34174 + C34175 + C34176) * C50753) *
               C50677 * C50848 -
           ((C34173 + C34172 + C34171) * C50753 +
            (C17053 * C128 + C17065 + C17065 + C17046 * C142 + C17051 * C127 +
             C17066 + C17066 + C17045 * C141 + C17049 * C126 + C17067 + C17067 +
             C17044 * C140) *
                C33816) *
               C50677 * C50847 -
           ((C17053 * C1747 + C34138 + C34138 + C17046 * C1755 +
             C17051 * C1748 + C34139 + C34139 + C17045 * C1756 +
             C17049 * C1749 + C34140 + C34140 + C17044 * C1757) *
                C50753 +
            (C34176 + C34175 + C34174) * C33816) *
               C50677 * C1993) *
              C50575 * C50562)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C33816 +
             C22247 * C50753) *
                C2192 +
            (C36695 + C36696) * C2193 + C36707 * C2194) *
               C50847 -
           (C38236 * C2194 + (C37347 + C37348) * C2193 +
            (C22248 * C50753 + C22247 * C33816) * C2192) *
               C50848 +
           ((C22248 * C33816 + C22250 * C50753) * C2192 +
            (C37746 + C37747) * C2193 + (C37748 + C37749) * C2194) *
               C1993) *
              C50575 * C50792 +
          (((C22251 * C33816 + C22252 * C50753) * C2192 +
            (C37349 + C37350) * C2193 + (C37351 + C37352) * C2194) *
               C50848 -
           (C36708 * C2194 + (C36702 + C36701) * C2193 +
            (C22251 * C50753 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C33816) *
                C2192) *
               C50847 -
           (((C19896 * C4530 + C22773 + C22773 + C50526 * C4538) * C50753 +
             C22060 * C33816) *
                C2194 +
            (C22254 * C50753 + C22059 * C33816) * C2193 +
            (C22253 * C50753 + C22252 * C33816) * C2192) *
               C1993) *
              C50575 * C50562)) /
            (p * q * std::sqrt(p + q));
    d2ee[224] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
             C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
             C17046 * C141) *
                C33816 +
            (C34165 + C34166 + C34167) * C50753) *
               C50677 * C1577 -
           ((C34168 + C34169 + C34170) * C50753 +
            (C34167 + C34166 + C34165) * C33816) *
               C50677 * C50655) *
              C50575 * C928 +
          (((C34171 + C34172 + C34173) * C33816 +
            (C34174 + C34175 + C34176) * C50753) *
               C50677 * C50655 -
           ((C34173 + C34172 + C34171) * C50753 +
            (C17053 * C128 + C17065 + C17065 + C17046 * C142 + C17051 * C127 +
             C17066 + C17066 + C17045 * C141 + C17049 * C126 + C17067 + C17067 +
             C17044 * C140) *
                C33816) *
               C50677 * C1577) *
              C50575 * C929 +
          (((C17049 * C127 + C17068 + C17068 + C17044 * C141 + C17051 * C128 +
             C17069 + C17069 + C17045 * C142 + C17053 * C129 + C17070 + C17070 +
             C17046 * C143) *
                C33816 +
            (C34484 + C34485 + C34486) * C50753) *
               C50677 * C1577 -
           ((C17053 * C421 + C34475 + C34475 + C17046 * C441 + C17051 * C419 +
             C34476 + C34476 + C17045 * C439 + C17049 * C418 + C34477 + C34477 +
             C17044 * C438) *
                C50753 +
            (C34486 + C34485 + C34484) * C33816) *
               C50677 * C50655) *
              C50575 * C930)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C17049 * C125 + C17056 + C17056 + C17044 * C139 + C17051 * C126 +
             C17057 + C17057 + C17045 * C140 + C17053 * C127 + C17058 + C17058 +
             C17046 * C141) *
                C33816 +
            (C34165 + C34166 + C34167) * C50753) *
               C50677 * C1577 -
           ((C34168 + C34169 + C34170) * C50753 +
            (C34167 + C34166 + C34165) * C33816) *
               C50677 * C50655) *
              C260 +
          (((C18010 + C18009 + C18008) * C33816 +
            (C18437 + C18438 + C18439) * C50753) *
               C50677 * C50655 -
           ((C18008 + C18009 + C18010) * C50753 +
            (C17288 + C17287 + C17286) * C33816) *
               C50677 * C1577) *
              C261 +
          (((C17291 + C17290 + C17289) * C33816 +
            (C18941 + C18942 + C18943) * C50753) *
               C50677 * C1577 -
           ((C17053 * C2598 + C18428 + C18428 + C17046 * C2604 +
             C17051 * C2597 + C18429 + C18429 + C17045 * C2603 +
             C17049 * C2596 + C18430 + C18430 + C17044 * C2602) *
                C50753 +
            (C18943 + C18942 + C18941) * C33816) *
               C50677 * C50655) *
              C262) *
         C50556) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C33816 +
             C22247 * C50753) *
                C2192 +
            (C36695 + C36696) * C2193 + C36707 * C2194) *
               C1577 -
           (C38236 * C2194 + (C37347 + C37348) * C2193 +
            (C22248 * C50753 + C22247 * C33816) * C2192) *
               C50655) *
              C50575 * C928 +
          (((C22251 * C33816 + C22252 * C50753) * C2192 +
            (C37349 + C37350) * C2193 + (C37351 + C37352) * C2194) *
               C50655 -
           (C36708 * C2194 + (C36702 + C36701) * C2193 +
            (C22251 * C50753 +
             (C19896 * C126 + C19906 + C19906 + C50526 * C140) * C33816) *
                C2192) *
               C1577) *
              C50575 * C929 +
          ((((C19896 * C127 + C19907 + C19907 + C50526 * C141) * C33816 +
             C22571 * C50753) *
                C2192 +
            (C37001 + C37002) * C2193 + (C37003 + C37004) * C2194) *
               C1577 -
           (((C19896 * C2598 + C22406 + C22406 + C50526 * C2604) * C50753 +
             C31607 * C33816) *
                C2194 +
            (C22412 * C50753 + C22411 * C33816) * C2193 +
            (C22572 * C50753 + C22571 * C33816) * C2192) *
               C50655) *
              C50575 * C930)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C19896 * C125 + C19899 + C19899 + C50526 * C139) * C33816 +
             C22247 * C50753) *
                C2192 +
            (C36695 + C36696) * C2193 + C36707 * C2194) *
               C1577 -
           (C38236 * C2194 + (C37347 + C37348) * C2193 +
            (C22248 * C50753 + C22247 * C33816) * C2192) *
               C50655) *
              C260 +
          (((C37348 + C37347) * C2192 + (C37346 + C37345) * C2193 +
            (C38237 + C38238) * C2194) *
               C50655 -
           (C37597 * C2194 + (C36698 + C36697) * C2193 +
            (C36696 + C36695) * C2192) *
               C1577) *
              C261 +
          ((C36707 * C2192 + (C36700 + C36699) * C2193 +
            (C37598 + C37599) * C2194) *
               C1577 -
           (((C19896 * C20837 + C20847 + C20847 + C50526 * C20839) * C50753 +
             C21194 * C33816) *
                C2194 +
            (C38238 + C38237) * C2193 + C38236 * C2192) *
               C50655) *
              C262) *
         C50556) /
            (p * q * std::sqrt(p + q));
}
