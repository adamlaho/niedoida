/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_pdpd_AA_xz.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_1212_11_13(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C49726 = 0 * ae;
    const double C49725 = ae * be;
    const double C49724 = 0 * be;
    const double C49723 = ae + be;
    const double C49722 = 0 * be;
    const double C49721 = xA - xB;
    const double C49769 = 0 * be;
    const double C49768 = zA - zB;
    const double C49812 = 0 * ae;
    const double C49808 = 0 * be;
    const double C49846 = xP - xQ;
    const double C49845 = zP - zQ;
    const double C49844 = p + q;
    const double C49843 = p * q;
    const double C49853 = std::pow(ae, 2);
    const double C49851 = bs[3];
    const double C49861 = bs[4];
    const double C49870 = bs[5];
    const double C49884 = bs[6];
    const double C49906 = bs[7];
    const double C50015 = yP - yQ;
    const double C50224 = bs[2];
    const double C122 = bs[0];
    const double C50650 = ce + de;
    const double C50649 = ce * de;
    const double C50648 = xC - xD;
    const double C50672 = yC - yD;
    const double C50688 = zC - zD;
    const double C50774 = yA - yB;
    const double C49731 = C49726 / C49723;
    const double C49728 = 2 * C49723;
    const double C49727 = std::pow(C49723, 2);
    const double C49730 = C49725 * C49721;
    const double C49729 = C49721 * C49724;
    const double C50626 = C49721 * be;
    const double C50625 = C49721 * ae;
    const double C50624 = std::pow(C49721, 2);
    const double C49770 = C49725 * C49768;
    const double C49809 = C49768 * C49769;
    const double C50786 = std::pow(C49768, 2);
    const double C50850 = C49768 * be;
    const double C50849 = C49768 * ae;
    const double C49817 = C49812 / C49723;
    const double C49871 = std::pow(C49846, 2);
    const double C49939 = C49846 * ae;
    const double C49854 = C49845 * ae;
    const double C49852 = C49846 * C49845;
    const double C50088 = std::pow(C49845, 2);
    const double C49847 = 2 * C49843;
    const double C50033 = std::pow(C50015, 2);
    const double C50652 = 2 * C50650;
    const double C50662 = std::pow(C50650, 2);
    const double C50654 = C50648 * de;
    const double C50653 = C50648 * ce;
    const double C50651 = std::pow(C50648, 2);
    const double C50673 = std::pow(C50672, 2);
    const double C50725 = C50672 * de;
    const double C50724 = C50672 * ce;
    const double C50689 = std::pow(C50688, 2);
    const double C50753 = C50688 * de;
    const double C50752 = C50688 * ce;
    const double C50775 = std::pow(C50774, 2);
    const double C50824 = C50774 * be;
    const double C50823 = C50774 * ae;
    const double C50634 = std::pow(C49728, -1);
    const double C50930 = std::pow(C49728, -2);
    const double C49732 = 2 * C49727;
    const double C143 = (std::pow((2 * p * q) / (p + q), 2) * bs[2] *
                         (xP - xQ) * (zP - zQ) * std::pow(ae, 2)) /
                        C49727;
    const double C50908 = 4 * C49727;
    const double C49733 = C49729 / C49723;
    const double C50627 = C50624 * C49725;
    const double C49814 = C49809 / C49723;
    const double C50787 = C50786 * C49725;
    const double C49942 = C49861 * C49939;
    const double C49948 = C49851 * C49939;
    const double C49955 = C49870 * C49939;
    const double C49967 = C49884 * C49939;
    const double C49988 = C49906 * C49939;
    const double C49857 = C49851 * C49854;
    const double C49863 = C49861 * C49854;
    const double C49873 = C49870 * C49854;
    const double C49888 = C49884 * C49854;
    const double C49912 = C49906 * C49854;
    const double C49856 = C49852 * C49853;
    const double C49848 = C49847 / C49844;
    const double C129 = (-(bs[1] * C49854 * C49847) / C49844) / C49723;
    const double C130 = (-(bs[1] * C49939 * C49847) / C49844) / C49723;
    const double C123 = -(C49846 * bs[1] * C49847) / C49844;
    const double C286 = -(C50015 * bs[1] * C49847) / C49844;
    const double C463 = -(C49845 * bs[1] * C49847) / C49844;
    const double C50663 = std::pow(C50652, -1);
    const double C50917 = std::pow(C50652, -2);
    const double C50667 = 2 * C50662;
    const double C50915 = 4 * C50662;
    const double C50655 = C50651 * C50649;
    const double C50674 = C50673 * C50649;
    const double C50690 = C50689 * C50649;
    const double C50776 = C50775 * C49725;
    const double C49738 = C49724 / C49732;
    const double C49736 = C49722 / C49732;
    const double C49811 = C49769 / C49732;
    const double C49815 = C49808 / C49732;
    const double C49735 = 0 - C49733;
    const double C50628 = C50627 / C49723;
    const double C49818 = 0 - C49814;
    const double C50788 = C50787 / C49723;
    const double C49862 = C49861 * C49856;
    const double C49872 = C49870 * C49856;
    const double C49886 = C49884 * C49856;
    const double C49910 = C49906 * C49856;
    const double C49850 = -C49848;
    const double C49860 = std::pow(C49848, 4);
    const double C49883 = std::pow(C49848, 6);
    const double C144 = (ae * std::pow(C49848, 2) * bs[2] * C49845 * ae +
                         C49846 * std::pow(-C49848, 3) * bs[3] * C49846 *
                             C49845 * std::pow(ae, 2)) /
                        C49727;
    const double C50223 = std::pow(C49848, 2);
    const double C131 =
        (C49846 * std::pow(C49848, 2) * bs[2] * C49854) / C49723;
    const double C132 =
        (C49846 * std::pow(C49848, 2) * bs[2] * C49939) / C49723 -
        (ae * bs[1] * C49847) / (C49844 * C49723);
    const double C50656 = C50655 / C50650;
    const double C50675 = C50674 / C50650;
    const double C50691 = C50690 / C50650;
    const double C50777 = C50776 / C49723;
    const double C49740 = C49735 * ae;
    const double C50629 = -C50628;
    const double C49821 = C49818 * ae;
    const double C50789 = -C50788;
    const double C49855 = std::pow(C49850, 3);
    const double C49869 = std::pow(C49850, 5);
    const double C49905 = std::pow(C49850, 7);
    const double C49865 = C49860 * C49863;
    const double C49864 = C49860 * C49862;
    const double C49941 = C49861 * C49860;
    const double C49943 = C49860 * C49942;
    const double C49891 = C49883 * C49888;
    const double C49890 = C49883 * C49886;
    const double C49969 = C49883 * C49967;
    const double C49989 = C49884 * C49883;
    const double C50225 = C50224 * C50223;
    const double C299 = (C50015 * C50223 * C50224 * C49939) / C49723;
    const double C300 = (C50015 * C50223 * C50224 * C49854) / C49723;
    const double C476 = (C49845 * C50223 * C50224 * C49939) / C49723;
    const double C477 = (C49845 * C50223 * C50224 * C49854) / C49723 -
                        (ae * bs[1] * C49847) / (C49844 * C49723);
    const double C50657 = -C50656;
    const double C50676 = -C50675;
    const double C50692 = -C50691;
    const double C50778 = -C50777;
    const double C49743 = C49740 / C49723;
    const double C50630 = std::exp(C50629);
    const double C49823 = C49821 / C49723;
    const double C50790 = std::exp(C50789);
    const double C49858 = C49855 * C49857;
    const double C49940 = C49851 * C49855;
    const double C49949 = C49855 * C49948;
    const double C316 = ((yP - yQ) * C49855 * C49851 * C49856) / C49727;
    const double C493 = (ae * std::pow(C49848, 2) * bs[2] * C49939 +
                         C49845 * C49855 * C49851 * C49856) /
                        C49727;
    const double C49875 = C49869 * C49873;
    const double C49874 = C49869 * C49872;
    const double C49958 = C49869 * C49955;
    const double C49968 = C49870 * C49869;
    const double C49915 = C49905 * C49912;
    const double C49914 = C49905 * C49910;
    const double C49991 = C49905 * C49988;
    const double C49868 = ae * C49865;
    const double C49867 = C49846 * C49865;
    const double C50394 = C50015 * C49865;
    const double C50396 = C49845 * C49865;
    const double C317 =
        (C49855 * C49851 * C49856 + C49864 * std::pow(yP - yQ, 2)) / C49727;
    const double C49957 = C49846 * C49941;
    const double C49956 = C49941 * ae;
    const double C50230 = C49941 * C49871;
    const double C50340 = C49941 * C50033;
    const double C50375 = C50015 * C49941;
    const double C50398 = C49941 * C50088;
    const double C50457 = C49845 * C49941;
    const double C49951 = C49846 * C49943;
    const double C50031 = C50015 * C49943;
    const double C50086 = ae * C49943;
    const double C50085 = C49845 * C49943;
    const double C49893 = C49891 * C49871;
    const double C49904 = ae * C49891;
    const double C49903 = C49846 * C49891;
    const double C50471 = C49891 * C50033;
    const double C50499 = C50015 * C49891;
    const double C50517 = C49845 * C49891;
    const double C49892 = C49846 * C49890;
    const double C50060 = C49890 * C50033;
    const double C50121 = C50015 * C49890;
    const double C50144 = C49845 * C49890;
    const double C49973 = C49846 * C49969;
    const double C50071 = C49969 * C50033;
    const double C50122 = C50015 * C49969;
    const double C50145 = C49969 * C50088;
    const double C50199 = ae * C49969;
    const double C50198 = C49845 * C49969;
    const double C49994 = C49989 * C49871;
    const double C49993 = C49846 * C49989;
    const double C49992 = C49989 * ae;
    const double C50479 = C49989 * C50033;
    const double C50502 = C50015 * C49989;
    const double C50520 = C49989 * C50088;
    const double C124 = C50225 * C49871 - (bs[1] * C49847) / C49844;
    const double C285 = C50015 * C49846 * C50225;
    const double C287 = C50225 * C50033 - (bs[1] * C49847) / C49844;
    const double C462 = C49845 * C49846 * C50225;
    const double C464 = C50225 * C50088 - (bs[1] * C49847) / C49844;
    const double C889 = C49845 * C50015 * C50225;
    const double C50658 = std::exp(C50657);
    const double C50677 = std::exp(C50676);
    const double C50693 = std::exp(C50692);
    const double C50779 = std::exp(C50778);
    const double C49745 = C49743 - C49736;
    const double C49734 = C49730 * C50630;
    const double C50631 = C50630 * C50625;
    const double C50635 = C50634 * C50630;
    const double C50905 = C50630 * C50626;
    const double C50902 = C50630 / C49728;
    const double C17174 = C50930 * C50630;
    const double C49825 = C49823 - C49815;
    const double C154 = C50790 * C144;
    const double C152 = C50790 * C131;
    const double C2456 = C50790 * C300;
    const double C49771 = C49770 * C50790;
    const double C117 = -(2 * ae * be * (zA - zB) * C50790) / (ae + be);
    const double C50851 = C50790 * C50849;
    const double C50854 = C50634 * C50790;
    const double C50938 = C50790 * C50850;
    const double C50931 = C50790 / C49728;
    const double C5180 = C50930 * C50790;
    const double C145 = (C49855 * C49851 * C49856 + ae * C49846 * C49858 +
                         C49846 * (ae * C49858 + C49846 * std::pow(C49848, 4) *
                                                     bs[4] * C49856)) /
                        C49727;
    const double C146 =
        (2 * (ae * C49858 + C49846 * C49864) +
         ae * (C49858 + C49865 * std::pow(C49846, 2)) +
         C49846 * (C49864 + ae * C49846 * C49865 +
                   C49846 * (ae * C49865 +
                             C49846 * std::pow(C49850, 5) * bs[5] * C49856))) /
        C49727;
    const double C315 = ((yP - yQ) * (ae * C49858 + C49846 * C49864)) / C49727;
    const double C492 = (ae * (C49846 * C49855 * C49851 * C49939 +
                               bs[2] * std::pow(C49848, 2) * ae) +
                         C49845 * (ae * C49858 + C49846 * C49864)) /
                        C49727;
    const double C133 =
        (std::pow(C49848, 2) * bs[2] * C49854 + C49858 * C49871) / C49723;
    const double C135 =
        (2 * C49846 * C49858 + C49846 * (C49858 + C49865 * C49871)) / C49723;
    const double C296 = (C50015 * (C49858 + C49865 * C49871)) / C49723;
    const double C298 = (C50015 * C49846 * C49858) / C49723;
    const double C301 = (C50223 * C50224 * C49854 + C49858 * C50033) / C49723;
    const double C475 =
        (C49845 * C49846 * C49858 + C49846 * C50225 * ae) / C49723;
    const double C478 =
        (C50223 * C50224 * C49854 + C49845 * (C49845 * C49858 + C50225 * ae) +
         C49845 * C50225 * ae) /
        C49723;
    const double C894 =
        (C49845 * C50015 * C49858 + C50015 * C50225 * ae) / C49723;
    const double C1112 =
        (2 * C50015 * C49858 + C50015 * (C49858 + C49865 * C50033)) / C49723;
    const double C49952 = C49940 * ae;
    const double C50229 = C49846 * C49940;
    const double C50316 = C50015 * C49940;
    const double C50397 = C49845 * C49940;
    const double C473 = (C49845 * (C49858 + C49865 * C49871) +
                         (C50225 + C49940 * C49871) * ae) /
                        C49723;
    const double C1573 = (C49845 * (C49858 + C49865 * C50033) +
                          (C50225 + C49940 * C50033) * ae) /
                         C49723;
    const double C125 =
        2 * C49846 * C50225 + C49846 * (C50225 + C49940 * C49871);
    const double C284 = C50015 * (C50225 + C49940 * C49871);
    const double C461 = C49845 * (C50225 + C49940 * C49871);
    const double C1104 =
        2 * C50015 * C50225 + C50015 * (C50225 + C49940 * C50033);
    const double C1565 = C49845 * (C50225 + C49940 * C50033);
    const double C1849 =
        2 * C49845 * C50225 + C49845 * (C50225 + C49940 * C50088);
    const double C494 = (C49855 * C49851 * C49856 + ae * C49845 * C49949 +
                         C49845 * (ae * C49949 + C49845 * C49864)) /
                        C49727;
    const double C904 =
        (ae * C50015 * C49949 + C49845 * C50015 * C49864) / C49727;
    const double C134 =
        (C50223 * C50224 * C49939 + C49846 * (C49846 * C49949 + C50225 * ae) +
         C49846 * C50225 * ae) /
        C49723;
    const double C297 = (C50015 * (C49846 * C49949 + C50225 * ae)) / C49723;
    const double C302 = (C50223 * C50224 * C49939 + C49949 * C50033) / C49723;
    const double C474 = (C49845 * (C49846 * C49949 + C50225 * ae)) / C49723;
    const double C479 = (C50223 * C50224 * C49939 + C49949 * C50088) / C49723;
    const double C895 = (C49845 * C50015 * C49949) / C49723;
    const double C1111 =
        (2 * C50015 * C49949 + C50015 * (C49949 + C49943 * C50033)) / C49723;
    const double C1572 = (C49845 * (C49949 + C49943 * C50033)) / C49723;
    const double C1856 =
        (2 * C49845 * C49949 + C49845 * (C49949 + C49943 * C50088)) / C49723;
    const double C2458 = C50790 * C316;
    const double C49877 = C49875 * C49871;
    const double C49882 = ae * C49875;
    const double C49881 = C49846 * C49875;
    const double C50363 = C49875 * C50033;
    const double C50432 = C50015 * C49875;
    const double C50456 = C49845 * C49875;
    const double C2445 =
        (3 * (C49858 + C49865 * C50033) +
         C50015 * (2 * C50015 * C49865 + C50015 * (C49865 + C49875 * C50033))) /
        C49723;
    const double C49876 = C49846 * C49874;
    const double C50083 = C50015 * C49874;
    const double C50087 = C49845 * C49874;
    const double C1116 = (2 * C50015 * C49864 +
                          C50015 * (C49864 + C49874 * std::pow(C50015, 2))) /
                         C49727;
    const double C1577 = (ae * (C49949 + C49943 * C50033) +
                          C49845 * (C49864 + C49874 * C50033)) /
                         C49727;
    const double C1861 = (2 * (ae * C49949 + C49845 * C49864) +
                          ae * (C49949 + C49943 * std::pow(C49845, 2)) +
                          C49845 * (C49864 + ae * C49845 * C49943 +
                                    C49845 * (ae * C49943 + C49845 * C49874))) /
                         C49727;
    const double C2451 =
        (3 * (C49864 + C49874 * C50033) +
         C50015 * (2 * C50015 * C49874 + C50015 * (C49874 + C49890 * C50033))) /
        C49727;
    const double C49960 = C49846 * C49958;
    const double C50045 = C49958 * C50033;
    const double C50070 = C50015 * C49958;
    const double C50090 = C49958 * C50088;
    const double C50143 = ae * C49958;
    const double C50142 = C49845 * C49958;
    const double C49972 = C49968 * C49871;
    const double C49971 = C49846 * C49968;
    const double C49970 = C49968 * ae;
    const double C50376 = C49968 * C50033;
    const double C50435 = C50015 * C49968;
    const double C50458 = C49968 * C50088;
    const double C50518 = C49845 * C49968;
    const double C49917 = C49915 * C49871;
    const double C49916 = C49846 * C49914;
    const double C50157 = C49914 * C50033;
    const double C50182 = C50015 * C49914;
    const double C50200 = C49845 * C49914;
    const double C49995 = C49846 * C49991;
    const double C50164 = C49991 * C50033;
    const double C50183 = C50015 * C49991;
    const double C50202 = C49991 * C50088;
    const double C303 = (C49846 * C49858 + C49867 * C50033) / C49723;
    const double C2464 = C50790 * C317;
    const double C49959 = C49957 * ae;
    const double C50235 = 2 * C49957;
    const double C50313 = C50015 * C49957;
    const double C50404 = C49845 * C49957;
    const double C50231 = C49940 + C50230;
    const double C50341 = C49940 + C50340;
    const double C50377 = 2 * C50375;
    const double C50434 = C49845 * C50375;
    const double C50433 = C50375 * ae;
    const double C50400 = C49940 + C50398;
    const double C50462 = 2 * C50457;
    const double C50460 = C50457 * ae;
    const double C1230 = (C50015 * C49864 + ae * C49845 * C50031 +
                          C49845 * (ae * C50031 + C49845 * C50015 * C49874)) /
                         C49727;
    const double C1225 = (C50015 * C49949 + C50031 * C50088) / C49723;
    const double C49895 = C49875 + C49893;
    const double C49911 = 2 * C49903;
    const double C49909 = ae * C49903;
    const double C50359 = C49903 * C50033;
    const double C50422 = C50015 * C49903;
    const double C50442 = C49845 * C49903;
    const double C50472 = C49875 + C50471;
    const double C50503 = C49845 * C50499;
    const double C50061 = C49874 + C50060;
    const double C50123 = C49845 * C50121;
    const double C50156 = 2 * C50121;
    const double C50073 = C49958 + C50071;
    const double C50124 = C50122 * C50088;
    const double C50163 = 2 * C50122;
    const double C50181 = ae * C50122;
    const double C50180 = C49845 * C50122;
    const double C50149 = C49958 + C50145;
    const double C50206 = 2 * C50198;
    const double C50204 = ae * C50198;
    const double C49997 = C49968 + C49994;
    const double C49996 = C49993 * ae;
    const double C50368 = C49993 * C50033;
    const double C50425 = C50015 * C49993;
    const double C50444 = C49993 * C50088;
    const double C50480 = C49968 + C50479;
    const double C50505 = C50502 * C50088;
    const double C50524 = C49968 + C50520;
    const double C50659 = C50658 * C50653;
    const double C50664 = C50663 * C50658;
    const double C50912 = C50658 * C50654;
    const double C50909 = C50658 / C50652;
    const double C1029 = C50917 * C50658;
    const double C50726 = C50677 * C50724;
    const double C50729 = C50663 * C50677;
    const double C50921 = C50677 * C50725;
    const double C50916 = C50677 / C50652;
    const double C280 = C50917 * C50677;
    const double C50754 = C50693 * C50752;
    const double C50757 = C50663 * C50693;
    const double C50925 = C50693 * C50753;
    const double C50918 = C50693 / C50652;
    const double C459 = C50917 * C50693;
    const double C50825 = C50779 * C50823;
    const double C50828 = C50634 * C50779;
    const double C50934 = C50779 * C50824;
    const double C50929 = C50779 / C49728;
    const double C2293 = C50930 * C50779;
    const double C49739 = C49734 / C49727;
    const double C49737 = 2 * C49734;
    const double C50906 = C50631 / C49732;
    const double C50904 = C50631 / C49723;
    const double C50903 = C50631 * C50626;
    const double C17173 = (2 * C50634 * C50631) / C49723;
    const double C50907 = C50635 * C50626;
    const double C109 = C50635 / C50908;
    const double C8026 = C50635 / C49728;
    const double C50943 = C50905 / C49723;
    const double C17172 = (C50630 * std::pow(C50625, 2)) / C49727 + C50902;
    const double C49813 = C49771 / C49727;
    const double C49810 = 2 * C49771;
    const double C5183 =
        ((0 * ae) / C49723 - C49771 / C49727) / C49728 + (0 * ae) / C49723;
    const double C10728 =
        ((C50790 - (C49768 * 2 * C49771) / C49723) * ae) / C49723 -
        C49769 / C49732;
    const double C10729 = (0 * ae) / C49723 - C49771 / C49727;
    const double C33355 =
        (-C49769 / C49723) / C49728 -
        ((C50790 - (C49768 * 2 * C49771) / C49723) * be) / C49723;
    const double C33356 = (-(2 * C49771) / C49723) / C49728 - (0 * be) / C49723;
    const double C155 = C117 * C124;
    const double C153 = C117 * C132;
    const double C151 = C117 * C123;
    const double C334 = C117 * C285;
    const double C511 = C117 * C462;
    const double C2461 = C117 * C287;
    const double C2457 = C117 * C299;
    const double C2455 = C117 * C286;
    const double C3219 = C117 * C889;
    const double C50940 = C50851 / C49732;
    const double C50939 = C50851 * C50850;
    const double C50933 = C50851 / C49723;
    const double C5179 = (2 * C50634 * C50851) / C49723;
    const double C5182 =
        (((C50790 - (C49768 * 2 * C49771) / C49723) * ae) / C49723 -
         C49769 / C49732) /
            C49728 +
        ((C49768 * ((0 * ae) / C49723 - C49771 / C49727) + C50854) * ae) /
            C49723;
    const double C50941 = C50854 * C50850;
    const double C38936 = C50854 / C50908;
    const double C44259 = C50854 / C49728;
    const double C50957 = C50938 / C49723;
    const double C5178 = (C50790 * std::pow(C50849, 2)) / C49727 + C50931;
    const double C158 = C50790 * C145;
    const double C162 = C50790 * C146;
    const double C333 = C50790 * C315;
    const double C510 = C50790 * C492;
    const double C10738 = C50854 * C492;
    const double C33365 = C50854 * C492;
    const double C156 = C50790 * C133;
    const double C160 = C50790 * C135;
    const double C331 = C50790 * C296;
    const double C335 = C50790 * C298;
    const double C2462 = C50790 * C301;
    const double C512 = C50790 * C475;
    const double C10734 = C50854 * C475;
    const double C33361 = C50854 * C475;
    const double C3220 = C50790 * C894;
    const double C13788 = C50854 * C894;
    const double C36335 = C50854 * C894;
    const double C2474 = C50790 * C1112;
    const double C49953 = C49951 + C49952;
    const double C50399 = C50396 + C49952;
    const double C1857 =
        (2 * (C49845 * C49858 + C50225 * ae) +
         C49845 * (C49858 + C49845 * (C49845 * C49865 + C49952) +
                   C49845 * C49940 * ae) +
         (C50225 + C49940 * C50088) * ae) /
        C49723;
    const double C480 =
        (C49846 * C49858 + C49845 * (C49845 * C49867 + C50229 * ae) +
         C49845 * C50229 * ae) /
        C49723;
    const double C896 =
        (C49845 * C50015 * C49867 + C50015 * C50229 * ae) / C49723;
    const double C288 = C49846 * C50225 + C50229 * C50033;
    const double C465 = C49846 * C50225 + C50229 * C50088;
    const double C890 = C49845 * C50015 * C50229;
    const double C1103 =
        2 * C50015 * C50229 + C50015 * (C50229 + C49957 * C50033);
    const double C1564 = C49845 * (C50229 + C49957 * C50033);
    const double C1848 =
        2 * C49845 * C50229 + C49845 * (C50229 + C49957 * C50088);
    const double C1226 =
        (C50015 * C49858 + C49845 * (C49845 * C50015 * C49865 + C50316 * ae) +
         C49845 * C50316 * ae) /
        C49723;
    const double C4589 =
        (2 * (C49845 * C50394 + C50316 * ae) +
         C49845 * (C50394 + C49845 * (C49845 * C50015 * C49875 + C50375 * ae) +
                   C49845 * C50375 * ae) +
         (C50316 + C50375 * C50088) * ae) /
        C49723;
    const double C1218 = C50015 * C50225 + C50316 * C50088;
    const double C4581 =
        2 * C49845 * C50316 + C49845 * (C50316 + C50375 * C50088);
    const double C508 = C50790 * C473;
    const double C10742 = C50854 * C473;
    const double C33369 = C50854 * C473;
    const double C3214 = C50790 * C1573;
    const double C13802 = C50854 * C1573;
    const double C36343 = C50854 * C1573;
    const double C159 = C117 * C125;
    const double C330 = C117 * C284;
    const double C507 = C117 * C461;
    const double C2473 = C117 * C1104;
    const double C3213 = C117 * C1565;
    const double C3218 = C50790 * C904;
    const double C13792 = C50854 * C904;
    const double C36339 = C50854 * C904;
    const double C157 = C117 * C134;
    const double C332 = C117 * C297;
    const double C2463 = C117 * C302;
    const double C509 = C117 * C474;
    const double C3217 = C117 * C895;
    const double C2471 = C117 * C1111;
    const double C3211 = C117 * C1572;
    const double C49879 = C49865 + C49877;
    const double C49894 = C49882 + C49892;
    const double C49887 = 2 * C49881;
    const double C49885 = ae * C49881;
    const double C50391 = C50015 * C49881;
    const double C50403 = C49845 * C49881;
    const double C1110 =
        (2 * C50015 * C49867 + C50015 * (C49867 + C49881 * C50033)) / C49723;
    const double C1571 = (C49845 * (C49867 + C49881 * C50033) +
                          (C50229 + C49957 * C50033) * ae) /
                         C49723;
    const double C2447 =
        (3 * (C49867 + C49881 * C50033) +
         C50015 * (2 * C50015 * C49881 + C50015 * (C49881 + C49903 * C50033))) /
        C49723;
    const double C50364 = C49865 + C50363;
    const double C50436 = C49845 * C50432;
    const double C50470 = 2 * C50432;
    const double C50459 = C50456 + C49956;
    const double C3497 = C50790 * C2445;
    const double C49878 = C49868 + C49876;
    const double C50089 = C50086 + C50087;
    const double C2472 = C50790 * C1116;
    const double C3212 = C50790 * C1577;
    const double C13798 = C50854 * C1577;
    const double C36347 = C50854 * C1577;
    const double C3499 = C50790 * C2451;
    const double C49961 = C49960 + C49956;
    const double C50046 = C49943 + C50045;
    const double C50072 = 2 * C50070;
    const double C50120 = ae * C50070;
    const double C50119 = C49845 * C50070;
    const double C4593 =
        (2 * (ae * C50031 + C49845 * C50083) +
         ae * (C50031 + C50070 * std::pow(C49845, 2)) +
         C49845 * (C50083 + ae * C49845 * C50070 +
                   C49845 * (ae * C50070 + C49845 * C50015 * C49890))) /
        C49727;
    const double C4588 =
        (2 * C49845 * C50031 + C49845 * (C50031 + C50070 * C50088)) / C49723;
    const double C50091 = C49943 + C50090;
    const double C50147 = C50143 + C50144;
    const double C50148 = 2 * C50142;
    const double C50146 = ae * C50142;
    const double C49975 = C49941 + C49972;
    const double C49974 = C49971 * ae;
    const double C49990 = 2 * C49971;
    const double C50344 = C49971 * C50033;
    const double C50367 = C50015 * C49971;
    const double C50405 = C49971 * C50088;
    const double C50443 = C49845 * C49971;
    const double C49976 = C49973 + C49970;
    const double C50522 = C50517 + C49970;
    const double C50378 = C49941 + C50376;
    const double C50437 = C50435 * C50088;
    const double C50478 = 2 * C50435;
    const double C50501 = C49845 * C50435;
    const double C50500 = C50435 * ae;
    const double C50461 = C49941 + C50458;
    const double C50525 = 2 * C50518;
    const double C50523 = C50518 * ae;
    const double C49919 = C49891 + C49917;
    const double C49918 = C49904 + C49916;
    const double C50158 = C49890 + C50157;
    const double C50185 = C49845 * C50182;
    const double C50205 = C50199 + C50200;
    const double C49998 = C49995 + C49992;
    const double C50165 = C49969 + C50164;
    const double C50187 = C50183 * C50088;
    const double C50207 = C49969 + C50202;
    const double C337 = C50790 * C303;
    const double C1855 =
        (2 * (C49845 * C49867 + C50229 * ae) +
         C49845 * (C49867 + C49845 * (C49845 * C49881 + C49959) +
                   C49845 * C49957 * ae) +
         (C50229 + C49957 * C50088) * ae) /
        C49723;
    const double C1224 =
        (C50015 * C49867 + C49845 * (C49845 * C50015 * C49881 + C50313 * ae) +
         C49845 * C50313 * ae) /
        C49723;
    const double C1217 = C50015 * C50229 + C50313 * C50088;
    const double C126 = 3 * (C50225 + C49940 * C49871) +
                        C49846 * (2 * C50229 + C49846 * C50231);
    const double C283 = C50015 * (2 * C50229 + C49846 * C50231);
    const double C289 = C50225 + C49940 * C49871 + C50231 * C50033;
    const double C460 = C49845 * (2 * C50229 + C49846 * C50231);
    const double C466 = C50225 + C49940 * C49871 + C50231 * C50088;
    const double C891 = C49845 * C50015 * C50231;
    const double C2669 =
        (C49858 + C49865 * C50033 +
         C49845 * (C49845 * (C49865 + C49875 * C50033) + C50341 * ae) +
         C49845 * C50341 * ae) /
        C49723;
    const double C3199 =
        (C49845 * (2 * C50015 * C49865 + C50015 * (C49865 + C49875 * C50033)) +
         (2 * C50316 + C50015 * C50341) * ae) /
        C49723;
    const double C2442 = 3 * (C50225 + C49940 * C50033) +
                         C50015 * (2 * C50316 + C50015 * C50341);
    const double C2666 = C50225 + C49940 * C50033 + C50341 * C50088;
    const double C3196 = C49845 * (2 * C50316 + C50015 * C50341);
    const double C5566 = 3 * (C50225 + C49940 * C50088) +
                         C49845 * (2 * C50397 + C49845 * C50400);
    const double C3665 = C50790 * C1230;
    const double C14686 = C50854 * C1230;
    const double C21882 = C5180 * C1230;
    const double C37031 = C50854 * C1230;
    const double C3664 = C117 * C1225;
    const double C49897 = C49846 * C49895;
    const double C49907 = 3 * C49895;
    const double C49902 = ae * C49895;
    const double C50411 = C49845 * C49895;
    const double C50418 = C50015 * C49895;
    const double C49913 = C49890 + C49909;
    const double C50360 = C49881 + C50359;
    const double C50426 = C49845 * C50422;
    const double C50473 = C50015 * C50472;
    const double C50491 = C49845 * C50472;
    const double C3493 =
        (4 * (2 * C50015 * C49874 + C50015 * C50061) +
         C50015 *
             (3 * C50061 + C50015 * (2 * C50015 * C49890 +
                                     C50015 * (C49890 + C49914 * C50033)))) /
        C49727;
    const double C50074 = C50015 * C50073;
    const double C50162 = 3 * C50073;
    const double C50174 = ae * C50073;
    const double C50173 = C49845 * C50073;
    const double C50126 = C50070 + C50124;
    const double C50186 = 2 * C50180;
    const double C50184 = ae * C50180;
    const double C50152 = C49845 * C50149;
    const double C50201 = 3 * C50149;
    const double C50197 = ae * C50149;
    const double C50208 = C49890 + C50204;
    const double C50000 = C49846 * C49997;
    const double C49999 = C49997 * ae;
    const double C50349 = C49997 * C50033;
    const double C50413 = C49997 * C50088;
    const double C50419 = C50015 * C49997;
    const double C50370 = C49971 + C50368;
    const double C50427 = C50425 * C50088;
    const double C50447 = C49971 + C50444;
    const double C50481 = C50015 * C50480;
    const double C50494 = C50480 * C50088;
    const double C50508 = C50435 + C50505;
    const double C50527 = C49845 * C50524;
    const double C50913 = C50659 / C50667;
    const double C50911 = C50659 / C50650;
    const double C50910 = C50659 * C50654;
    const double C1028 = (2 * C50663 * C50659) / C50650;
    const double C50914 = C50664 * C50654;
    const double C116 = C50664 / C50915;
    const double C638 = C50664 / C50652;
    const double C50946 = C50912 / C50650;
    const double C1027 = (C50658 * std::pow(C50653, 2)) / C50662 + C50909;
    const double C50923 = C50726 / C50667;
    const double C50922 = C50726 * C50725;
    const double C50919 = C50726 / C50650;
    const double C279 = (2 * C50663 * C50726) / C50650;
    const double C50924 = C50729 * C50725;
    const double C1099 = C50729 / C50915;
    const double C1331 = C50729 / C50652;
    const double C50948 = C50921 / C50650;
    const double C278 = (C50677 * std::pow(C50724, 2)) / C50662 + C50916;
    const double C50927 = C50754 / C50667;
    const double C50926 = C50754 * C50753;
    const double C50920 = C50754 / C50650;
    const double C458 = (2 * C50663 * C50754) / C50650;
    const double C50928 = C50757 * C50753;
    const double C1845 = C50757 / C50915;
    const double C2092 = C50757 / C50652;
    const double C50951 = C50925 / C50650;
    const double C457 = (C50693 * std::pow(C50752, 2)) / C50662 + C50918;
    const double C50936 = C50825 / C49732;
    const double C50935 = C50825 * C50824;
    const double C50932 = C50825 / C49723;
    const double C2292 = (2 * C50634 * C50825) / C49723;
    const double C50937 = C50828 * C50824;
    const double C19840 = C50828 / C50908;
    const double C24472 = C50828 / C49728;
    const double C50954 = C50934 / C49723;
    const double C2291 = (C50779 * std::pow(C50823, 2)) / C49727 + C50929;
    const double C49742 = C49731 - C49739;
    const double C49741 = C49721 * C49737;
    const double C2295 = (-C49737 / C49723) / C49728 - (0 * be) / C49723;
    const double C19841 = -C49737 / C49723;
    const double C50942 = C50903 / C49727;
    const double C50944 = C50907 / C49723;
    const double C2289 = -C50943;
    const double C49820 = C49817 - C49813;
    const double C49816 = C49768 * C49810;
    const double C21881 = C5183 * C1225;
    const double C10753 = C10728 * C125;
    const double C10743 = C10728 * C134;
    const double C10739 = C10728 * C124;
    const double C10735 = C10728 * C132;
    const double C10731 = C10728 * C123;
    const double C10943 = C10728 * C285;
    const double C10939 = C10728 * C297;
    const double C10935 = C10728 * C284;
    const double C11137 = C10728 * C462;
    const double C11133 = C10728 * C474;
    const double C11129 = C10728 * C461;
    const double C13803 = C10728 * C287;
    const double C13799 = C10728 * C302;
    const double C13789 = C10728 * C299;
    const double C13785 = C10728 * C286;
    const double C14691 = C10728 * C889;
    const double C14687 = C10728 * C895;
    const double C15039 = C10728 * C1111;
    const double C15035 = C10728 * C1104;
    const double C15245 = C10728 * C1225;
    const double C15903 = C10728 * C1572;
    const double C15899 = C10728 * C1565;
    const double C10741 = C10729 * C461;
    const double C10737 = C10729 * C474;
    const double C10733 = C10729 * C462;
    const double C13801 = C10729 * C1565;
    const double C13797 = C10729 * C1572;
    const double C13791 = C10729 * C895;
    const double C13787 = C10729 * C889;
    const double C14685 = C10729 * C1225;
    const double C33380 = C33355 * C125;
    const double C33370 = C33355 * C134;
    const double C33366 = C33355 * C124;
    const double C33362 = C33355 * C132;
    const double C33358 = C33355 * C123;
    const double C33570 = C33355 * C285;
    const double C33566 = C33355 * C297;
    const double C33562 = C33355 * C284;
    const double C33764 = C33355 * C462;
    const double C33760 = C33355 * C474;
    const double C33756 = C33355 * C461;
    const double C36354 = C33355 * C1104;
    const double C36350 = C33355 * C1111;
    const double C36344 = C33355 * C302;
    const double C36340 = C33355 * C287;
    const double C36336 = C33355 * C299;
    const double C36332 = C33355 * C286;
    const double C37036 = C33355 * C889;
    const double C37032 = C33355 * C895;
    const double C37028 = C33355 * C1565;
    const double C37024 = C33355 * C1572;
    const double C37469 = C33355 * C1225;
    const double C33368 = C33356 * C461;
    const double C33364 = C33356 * C474;
    const double C33360 = C33356 * C462;
    const double C36346 = C33356 * C1572;
    const double C36342 = C33356 * C1565;
    const double C36338 = C33356 * C895;
    const double C36334 = C33356 * C889;
    const double C37030 = C33356 * C1225;
    const double C172 = C153 + C154;
    const double C171 = C151 + C152;
    const double C2492 = C2457 + C2458;
    const double C2491 = C2455 + C2456;
    const double C50958 = C50939 / C49727;
    const double C10754 = C50933 * C135;
    const double C10750 = C50933 * C146;
    const double C10744 = C50933 * C145;
    const double C10740 = C50933 * C133;
    const double C10736 = C50933 * C144;
    const double C10732 = C50933 * C131;
    const double C10946 = C50933 * C303;
    const double C10944 = C50933 * C298;
    const double C10940 = C50933 * C315;
    const double C10936 = C50933 * C296;
    const double C11138 = C50933 * C475;
    const double C11134 = C50933 * C492;
    const double C11130 = C50933 * C473;
    const double C13804 = C50933 * C301;
    const double C13800 = C50933 * C317;
    const double C13790 = C50933 * C316;
    const double C13786 = C50933 * C300;
    const double C14692 = C50933 * C894;
    const double C14688 = C50933 * C904;
    const double C15040 = C50933 * C1116;
    const double C15036 = C50933 * C1112;
    const double C15246 = C50933 * C1230;
    const double C15904 = C50933 * C1577;
    const double C15900 = C50933 * C1573;
    const double C31709 = C50933 * C2451;
    const double C31705 = C50933 * C2445;
    const double C5181 =
        (((0 - (C49768 * C49769) / C49723) * ae) / C49723 - (0 * be) / C49732) /
            C49728 +
        ((C49768 * (((C50790 - (C49768 * 2 * C49771) / C49723) * ae) / C49723 -
                    C49769 / C49732) +
          C50933) *
         ae) /
            C49723 +
        (0 * ae) / C49723 - C49771 / C49727;
    const double C5206 = C5179 * C473;
    const double C5194 = C5179 * C492;
    const double C5188 = C5179 * C475;
    const double C21892 = C5179 * C1573;
    const double C21886 = C5179 * C1577;
    const double C21880 = C5179 * C904;
    const double C21874 = C5179 * C894;
    const double C22542 = C5179 * C1230;
    const double C5205 = C5182 * C461;
    const double C5193 = C5182 * C474;
    const double C5187 = C5182 * C462;
    const double C21891 = C5182 * C1565;
    const double C21885 = C5182 * C1572;
    const double C21879 = C5182 * C895;
    const double C21873 = C5182 * C889;
    const double C22541 = C5182 * C1225;
    const double C50959 = C50941 / C49723;
    const double C47229 = C44259 * C1230;
    const double C33353 = -C50957;
    const double C5216 = C5178 * C146;
    const double C5210 = C5178 * C135;
    const double C5208 = C5178 * C133;
    const double C5202 = C5178 * C145;
    const double C5192 = C5178 * C144;
    const double C5186 = C5178 * C131;
    const double C5398 = C5178 * C303;
    const double C5396 = C5178 * C298;
    const double C5390 = C5178 * C315;
    const double C5590 = C5178 * C475;
    const double C5584 = C5178 * C492;
    const double C5762 = C5178 * C296;
    const double C5926 = C5178 * C473;
    const double C21894 = C5178 * C301;
    const double C21888 = C5178 * C317;
    const double C21878 = C5178 * C316;
    const double C21872 = C5178 * C300;
    const double C22550 = C5178 * C894;
    const double C22544 = C5178 * C904;
    const double C22808 = C5178 * C1116;
    const double C22802 = C5178 * C1112;
    const double C22976 = C5178 * C1230;
    const double C23480 = C5178 * C1577;
    const double C23474 = C5178 * C1573;
    const double C173 = C155 + C156;
    const double C353 = C334 + C335;
    const double C2493 = C2461 + C2462;
    const double C530 = C511 + C512;
    const double C3236 = C3219 + C3220;
    const double C136 =
        (2 * (C49846 * C49949 + C50225 * ae) +
         C49846 * (C49949 + C49846 * C49953 + C49846 * C49940 * ae) +
         (C50225 + C49940 * C49871) * ae) /
        C49723;
    const double C295 =
        (C50015 * (C49949 + C49846 * C49953 + C50229 * ae)) / C49723;
    const double C304 =
        (C49846 * C49949 + C50225 * ae + C49953 * C50033) / C49723;
    const double C472 =
        (C49845 * (C49949 + C49846 * C49953 + C50229 * ae)) / C49723;
    const double C481 =
        (C49846 * C49949 + C50225 * ae + C49953 * C50088) / C49723;
    const double C897 = (C49845 * C50015 * C49953) / C49723;
    const double C5569 =
        (3 * (C49858 + C49845 * C50399 + C50397 * ae) +
         C49845 * (2 * C50399 +
                   C49845 * (C49865 + C49845 * (C49845 * C49875 + C49956) +
                             C49845 * C49941 * ae) +
                   C50400 * ae) +
         (2 * C50397 + C49845 * C50400) * ae) /
        C49723;
    const double C514 = C50790 * C480;
    const double C5190 = C5180 * C480;
    const double C5592 = C5178 * C480;
    const double C5588 = C5179 * C480;
    const double C11140 = C50933 * C480;
    const double C11136 = C50854 * C480;
    const double C33763 = C50854 * C480;
    const double C44269 = C44259 * C480;
    const double C911 = C50790 * C896;
    const double C5394 = C5179 * C896;
    const double C6142 = C5178 * C896;
    const double C10942 = C50854 * C896;
    const double C11686 = C50933 * C896;
    const double C33569 = C50854 * C896;
    const double C336 = C117 * C288;
    const double C10945 = C10728 * C288;
    const double C33572 = C33355 * C288;
    const double C513 = C117 * C465;
    const double C5189 = C5183 * C465;
    const double C5587 = C5182 * C465;
    const double C11139 = C10728 * C465;
    const double C11135 = C10729 * C465;
    const double C33766 = C33355 * C465;
    const double C33762 = C33356 * C465;
    const double C910 = C117 * C890;
    const double C5393 = C5182 * C890;
    const double C10941 = C10729 * C890;
    const double C11685 = C10728 * C890;
    const double C33568 = C33356 * C890;
    const double C34312 = C33355 * C890;
    const double C2469 = C117 * C1103;
    const double C13809 = C10728 * C1103;
    const double C36356 = C33355 * C1103;
    const double C2681 = C117 * C1564;
    const double C5399 = C5182 * C1564;
    const double C10947 = C10729 * C1564;
    const double C14695 = C10728 * C1564;
    const double C33574 = C33356 * C1564;
    const double C37038 = C33355 * C1564;
    const double C5593 = C5182 * C1848;
    const double C5585 = C5183 * C1848;
    const double C11141 = C10729 * C1848;
    const double C33768 = C33356 * C1848;
    const double C3663 = C50790 * C1226;
    const double C14690 = C50854 * C1226;
    const double C15242 = C50933 * C1226;
    const double C21876 = C5180 * C1226;
    const double C22548 = C5179 * C1226;
    const double C22970 = C5178 * C1226;
    const double C37035 = C50854 * C1226;
    const double C47223 = C44259 * C1226;
    const double C15244 = C50854 * C4589;
    const double C22546 = C5180 * C4589;
    const double C22972 = C5179 * C4589;
    const double C37468 = C50854 * C4589;
    const double C47893 = C44259 * C4589;
    const double C3662 = C117 * C1218;
    const double C14689 = C10729 * C1218;
    const double C15241 = C10728 * C1218;
    const double C21875 = C5183 * C1218;
    const double C22547 = C5182 * C1218;
    const double C37034 = C33356 * C1218;
    const double C37465 = C33355 * C1218;
    const double C15243 = C10729 * C4581;
    const double C22545 = C5183 * C4581;
    const double C22971 = C5182 * C4581;
    const double C37467 = C33356 * C4581;
    const double C175 = C159 + C160;
    const double C351 = C330 + C331;
    const double C528 = C507 + C508;
    const double C2498 = C2473 + C2474;
    const double C3234 = C3213 + C3214;
    const double C174 = C157 + C158;
    const double C352 = C332 + C333;
    const double C2494 = C2463 + C2464;
    const double C529 = C509 + C510;
    const double C3235 = C3217 + C3218;
    const double C138 = (3 * (C49858 + C49865 * C49871) +
                         C49846 * (2 * C49867 + C49846 * C49879)) /
                        C49723;
    const double C294 = (C50015 * (2 * C49867 + C49846 * C49879)) / C49723;
    const double C305 = (C49858 + C49865 * C49871 + C49879 * C50033) / C49723;
    const double C471 = (C49845 * (2 * C49867 + C49846 * C49879) +
                         (2 * C50229 + C49846 * C50231) * ae) /
                        C49723;
    const double C482 =
        (C49858 + C49865 * C49871 + C49845 * (C49845 * C49879 + C50231 * ae) +
         C49845 * C50231 * ae) /
        C49723;
    const double C898 =
        (C49845 * C50015 * C49879 + C50015 * C50231 * ae) / C49723;
    const double C1108 =
        (2 * C50015 * C49879 + C50015 * (C49879 + C49895 * C50033)) / C49723;
    const double C49896 = C49846 * C49894;
    const double C49901 = 2 * C49894;
    const double C50081 = C50015 * C49894;
    const double C50095 = C49845 * C49894;
    const double C49889 = C49874 + C49885;
    const double C50406 = C50403 + C49959;
    const double C2470 = C50790 * C1110;
    const double C13810 = C50933 * C1110;
    const double C2682 = C50790 * C1571;
    const double C5400 = C5179 * C1571;
    const double C10948 = C50854 * C1571;
    const double C14696 = C50933 * C1571;
    const double C33575 = C50854 * C1571;
    const double C2476 = C50790 * C2447;
    const double C3491 =
        (4 * (2 * C50015 * C49865 + C50015 * C50364) +
         C50015 *
             (3 * C50364 + C50015 * (2 * C50015 * C49875 +
                                     C50015 * (C49875 + C49891 * C50033)))) /
        C49723;
    const double C50438 = C50436 + C50433;
    const double C50463 = C49845 * C50459;
    const double C50516 = 2 * C50459;
    const double C147 =
        (3 * (C49864 + ae * C49867 + C49846 * C49878) +
         ae * (2 * C49867 + C49846 * C49879) +
         C49846 *
             (2 * C49878 + ae * C49879 +
              C49846 * (C49874 + ae * C49846 * C49875 +
                        C49846 * (ae * C49875 + C49846 * std::pow(C49848, 6) *
                                                    bs[6] * C49856)))) /
        C49727;
    const double C314 =
        ((yP - yQ) * (C49864 + ae * C49867 + C49846 * C49878)) / C49727;
    const double C318 =
        (ae * C49858 + C49846 * C49864 + C49878 * std::pow(yP - yQ, 2)) /
        C49727;
    const double C491 = (ae * (C49855 * C49851 * C49939 +
                               C49846 * (C49846 * C49943 + C49940 * ae) +
                               C49846 * C49940 * ae) +
                         C49845 * (C49864 + ae * C49867 + C49846 * C49878)) /
                        C49727;
    const double C495 = (ae * C49858 + C49846 * C49864 + ae * C49845 * C49953 +
                         C49845 * (ae * C49953 + C49845 * C49878)) /
                        C49727;
    const double C905 =
        (ae * C50015 * C49953 + C49845 * C50015 * C49878) / C49727;
    const double C1115 = (2 * C50015 * C49878 +
                          C50015 * (C49878 + C49894 * std::pow(C50015, 2))) /
                         C49727;
    const double C2497 = C2471 + C2472;
    const double C3233 = C3211 + C3212;
    const double C49962 = C49846 * C49961;
    const double C49966 = 2 * C49961;
    const double C50029 = C50015 * C49961;
    const double C50094 = ae * C49961;
    const double C50093 = C49845 * C49961;
    const double C1576 = (ae * (C49953 + C49961 * C50033) +
                          C49845 * (C49878 + C49894 * C50033)) /
                         C49727;
    const double C1860 = (2 * (ae * C49953 + C49845 * C49878) +
                          ae * (C49953 + C49961 * std::pow(C49845, 2)) +
                          C49845 * (C49878 + ae * C49845 * C49961 +
                                    C49845 * (ae * C49961 + C49845 * C49894))) /
                         C49727;
    const double C1109 =
        (2 * C50015 * C49953 + C50015 * (C49953 + C49961 * C50033)) / C49723;
    const double C1570 = (C49845 * (C49953 + C49961 * C50033)) / C49723;
    const double C1854 =
        (2 * C49845 * C49953 + C49845 * (C49953 + C49961 * C50088)) / C49723;
    const double C2675 =
        (C49864 + C49874 * C50033 + ae * C49845 * C50046 +
         C49845 * (ae * C50046 + C49845 * (C49874 + C49890 * C50033))) /
        C49727;
    const double C3205 =
        (ae * (2 * C50031 + C50015 * C50046) +
         C49845 * (2 * C50015 * C49874 + C50015 * (C49874 + C49890 * C50033))) /
        C49727;
    const double C4591 =
        (2 * (ae * C50046 + C49845 * C50061) +
         ae * (C50046 + C50073 * std::pow(C49845, 2)) +
         C49845 *
             (C50061 + ae * C49845 * C50073 +
              C49845 * (ae * C50073 + C49845 * (C49890 + C49914 * C50033)))) /
        C49727;
    const double C2446 = (3 * (C49949 + C49943 * C50033) +
                          C50015 * (2 * C50031 + C50015 * C50046)) /
                         C49723;
    const double C2670 = (C49949 + C49943 * C50033 + C50046 * C50088) / C49723;
    const double C3200 = (C49845 * (2 * C50031 + C50015 * C50046)) / C49723;
    const double C4584 =
        (2 * C49845 * C50046 + C49845 * (C50046 + C50073 * C50088)) / C49723;
    const double C50125 = C50120 + C50123;
    const double C15248 = C50854 * C4593;
    const double C22540 = C5180 * C4593;
    const double C22978 = C5179 * C4593;
    const double C37472 = C50854 * C4593;
    const double C47887 = C44259 * C4593;
    const double C15247 = C10729 * C4588;
    const double C22539 = C5183 * C4588;
    const double C22977 = C5182 * C4588;
    const double C37471 = C33356 * C4588;
    const double C5575 =
        (3 * (C49864 + ae * C50085 + C49845 * C50089) +
         ae * (2 * C50085 + C49845 * C50091) +
         C49845 * (2 * C50089 + ae * C50091 +
                   C49845 * (C49874 + ae * C49845 * C49958 +
                             C49845 * (ae * C49958 + C49845 * C49890)))) /
        C49727;
    const double C5570 = (3 * (C49949 + C49943 * C50088) +
                          C49845 * (2 * C50085 + C49845 * C50091)) /
                         C49723;
    const double C50151 = C49845 * C50147;
    const double C50196 = 2 * C50147;
    const double C50150 = C49874 + C50146;
    const double C49977 = C49975 * ae;
    const double C50236 = C49846 * C49975;
    const double C50239 = 3 * C49975;
    const double C50310 = C50015 * C49975;
    const double C50412 = C49845 * C49975;
    const double C1569 = (C49845 * (C49879 + C49895 * C50033) +
                          (C50231 + C49975 * C50033) * ae) /
                         C49723;
    const double C1102 =
        2 * C50015 * C50231 + C50015 * (C50231 + C49975 * C50033);
    const double C1563 = C49845 * (C50231 + C49975 * C50033);
    const double C1847 =
        2 * C49845 * C50231 + C49845 * (C50231 + C49975 * C50088);
    const double C50445 = C50442 + C49974;
    const double C50345 = C49957 + C50344;
    const double C50369 = 2 * C50367;
    const double C50424 = C49845 * C50367;
    const double C50423 = C50367 * ae;
    const double C4587 =
        (2 * (C49845 * C50391 + C50313 * ae) +
         C49845 * (C50391 + C49845 * (C49845 * C50015 * C49903 + C50367 * ae) +
                   C49845 * C50367 * ae) +
         (C50313 + C50367 * C50088) * ae) /
        C49723;
    const double C4580 =
        2 * C49845 * C50313 + C49845 * (C50313 + C50367 * C50088);
    const double C50407 = C49957 + C50405;
    const double C50448 = 2 * C50443;
    const double C50446 = C50443 * ae;
    const double C49978 = C49846 * C49976;
    const double C49987 = 2 * C49976;
    const double C50048 = C49976 * C50033;
    const double C50063 = C50015 * C49976;
    const double C50096 = C49976 * C50088;
    const double C50129 = ae * C49976;
    const double C50128 = C49845 * C49976;
    const double C50526 = C49845 * C50522;
    const double C50379 = C50015 * C50378;
    const double C50477 = 3 * C50378;
    const double C50493 = C49845 * C50378;
    const double C50492 = C50378 * ae;
    const double C4585 =
        (2 * (C49845 * C50364 + C50341 * ae) +
         C49845 *
             (C50364 +
              C49845 * (C49845 * (C49875 + C49891 * C50033) + C50378 * ae) +
              C49845 * C50378 * ae) +
         (C50341 + C50378 * C50088) * ae) /
        C49723;
    const double C4579 =
        2 * C49845 * C50341 + C49845 * (C50341 + C50378 * C50088);
    const double C50439 = C50375 + C50437;
    const double C50506 = 2 * C50501;
    const double C50504 = C50501 * ae;
    const double C50507 = C50503 + C50500;
    const double C50464 = C49845 * C50461;
    const double C50521 = 3 * C50461;
    const double C50519 = C50461 * ae;
    const double C49921 = C49846 * C49919;
    const double C2450 =
        (3 * (C49879 + C49895 * C50033) +
         C50015 * (2 * C50015 * C49895 + C50015 * (C49895 + C49919 * C50033))) /
        C49723;
    const double C49920 = C49846 * C49918;
    const double C50057 = C49918 * C50033;
    const double C50112 = C50015 * C49918;
    const double C50130 = C49845 * C49918;
    const double C2452 =
        (3 * (C49878 + C49894 * C50033) +
         C50015 * (2 * C50015 * C49894 + C50015 * (C49894 + C49918 * C50033))) /
        C49727;
    const double C50159 = C50015 * C50158;
    const double C50175 = C49845 * C50158;
    const double C50189 = C50181 + C50185;
    const double C50209 = C49845 * C50205;
    const double C50001 = C49846 * C49998;
    const double C50064 = C49998 * C50033;
    const double C50113 = C50015 * C49998;
    const double C50131 = C49998 * C50088;
    const double C50166 = C50015 * C50165;
    const double C50176 = C50165 * C50088;
    const double C50190 = C50122 + C50187;
    const double C50210 = C49845 * C50207;
    const double C5594 = C5179 * C1855;
    const double C5586 = C5180 * C1855;
    const double C11142 = C50854 * C1855;
    const double C33769 = C50854 * C1855;
    const double C44653 = C44259 * C1855;
    const double C2684 = C50790 * C1224;
    const double C5392 = C5180 * C1224;
    const double C6144 = C5179 * C1224;
    const double C11688 = C50854 * C1224;
    const double C14024 = C50933 * C1224;
    const double C34315 = C50854 * C1224;
    const double C44471 = C44259 * C1224;
    const double C2683 = C117 * C1217;
    const double C5391 = C5183 * C1217;
    const double C6143 = C5182 * C1217;
    const double C11687 = C10729 * C1217;
    const double C14023 = C10728 * C1217;
    const double C34314 = C33356 * C1217;
    const double C41168 = C33355 * C1217;
    const double C165 = C117 * C126;
    const double C10755 = C10728 * C126;
    const double C33382 = C33355 * C126;
    const double C326 = C117 * C283;
    const double C11319 = C10728 * C283;
    const double C33946 = C33355 * C283;
    const double C340 = C117 * C289;
    const double C10953 = C10728 * C289;
    const double C33580 = C33355 * C289;
    const double C503 = C117 * C460;
    const double C5211 = C5182 * C460;
    const double C10751 = C10729 * C460;
    const double C11479 = C10728 * C460;
    const double C33378 = C33356 * C460;
    const double C34106 = C33355 * C460;
    const double C517 = C117 * C466;
    const double C5203 = C5183 * C466;
    const double C5927 = C5182 * C466;
    const double C11147 = C10728 * C466;
    const double C11127 = C10729 * C466;
    const double C33774 = C33355 * C466;
    const double C33754 = C33356 * C466;
    const double C914 = C117 * C891;
    const double C5763 = C5182 * C891;
    const double C10933 = C10729 * C891;
    const double C11693 = C10728 * C891;
    const double C33560 = C33356 * C891;
    const double C34320 = C33355 * C891;
    const double C3669 = C50790 * C2669;
    const double C15902 = C50854 * C2669;
    const double C21890 = C5180 * C2669;
    const double C23476 = C5179 * C2669;
    const double C31866 = C50933 * C2669;
    const double C37027 = C50854 * C2669;
    const double C47237 = C44259 * C2669;
    const double C4178 = C50790 * C3199;
    const double C15038 = C50854 * C3199;
    const double C22804 = C5179 * C3199;
    const double C32366 = C50933 * C3199;
    const double C36353 = C50854 * C3199;
    const double C3496 = C117 * C2442;
    const double C31704 = C10728 * C2442;
    const double C37304 = C33355 * C2442;
    const double C3668 = C117 * C2666;
    const double C15901 = C10729 * C2666;
    const double C21889 = C5183 * C2666;
    const double C23475 = C5182 * C2666;
    const double C31865 = C10728 * C2666;
    const double C37026 = C33356 * C2666;
    const double C37473 = C33355 * C2666;
    const double C4177 = C117 * C3196;
    const double C15037 = C10729 * C3196;
    const double C22803 = C5182 * C3196;
    const double C32365 = C10728 * C3196;
    const double C36352 = C33356 * C3196;
    const double C37977 = C33355 * C3196;
    const double C3675 = C3664 + C3665;
    const double C49899 = C49887 + C49897;
    const double C3489 =
        (4 * (2 * C50015 * C49881 + C50015 * C50360) +
         C50015 * (3 * C50360 +
                   C50015 * (2 * C50015 * C49903 +
                             C50015 * (C49903 + C49846 * C49915 * C50033)))) /
        C49723;
    const double C50474 = C50470 + C50473;
    const double C20576 = C50790 * C3493;
    const double C50075 = C50072 + C50074;
    const double C6552 = (3 * (C50031 + C50070 * C50088) +
                          C49845 * (2 * C50119 + C49845 * C50126)) /
                         C49723;
    const double C50188 = C50121 + C50184;
    const double C50154 = C50148 + C50152;
    const double C50002 = C49990 + C50000;
    const double C50350 = C49975 + C50349;
    const double C50415 = C49975 + C50413;
    const double C50371 = C50015 * C50370;
    const double C50429 = C50367 + C50427;
    const double C50450 = C49845 * C50447;
    const double C50482 = C50478 + C50481;
    const double C50496 = C50378 + C50494;
    const double C50510 = C49845 * C50508;
    const double C50529 = C50525 + C50527;
    const double C50945 = C50910 / C50662;
    const double C50947 = C50914 / C50650;
    const double C281 = -C50946;
    const double C50949 = C50922 / C50662;
    const double C50950 = C50924 / C50650;
    const double C1025 = -C50948;
    const double C50952 = C50926 / C50662;
    const double C50953 = C50928 / C50650;
    const double C1676 = -C50951;
    const double C50955 = C50935 / C49727;
    const double C50956 = C50937 / C49723;
    const double C17175 = -C50954;
    const double C121 =
        (C49742 / C49728 - (0 * be) / C49723) / C49728 + (0 * ae) / C49723;
    const double C8031 = C49742 / C49728 - (0 * be) / C49723;
    const double C17179 = C49742 / C49728 + (0 * ae) / C49723;
    const double C49744 = C49741 / C49723;
    const double C50960 = C50902 - C50942;
    const double C50961 = C50906 - C50944;
    const double C38940 =
        (C49820 / C49728 - (0 * be) / C49723) / C49728 + (0 * ae) / C49723;
    const double C44262 = C49820 / C49728 - (0 * be) / C49723;
    const double C49819 = C49816 / C49723;
    const double C21900 = C21881 + C21882;
    const double C10768 = C10741 + C10742;
    const double C10766 = C10737 + C10738;
    const double C10764 = C10733 + C10734;
    const double C13823 = C13801 + C13802;
    const double C13821 = C13797 + C13798;
    const double C13820 = C13791 + C13792;
    const double C13818 = C13787 + C13788;
    const double C14703 = C14685 + C14686;
    const double C33395 = C33368 + C33369;
    const double C33393 = C33364 + C33365;
    const double C33391 = C33360 + C33361;
    const double C36373 = C36346 + C36347;
    const double C36371 = C36342 + C36343;
    const double C36369 = C36338 + C36339;
    const double C36367 = C36334 + C36335;
    const double C37050 = C37030 + C37031;
    const double C2505 = C2492 * C2289;
    const double C17328 = C2492 * C17172;
    const double C19942 = C2492 * C50630;
    const double C24623 = C2492 * C50904;
    const double C19941 = C2491 * C19841;
    const double C50970 = C50931 - C50958;
    const double C10774 = C10753 + C10754;
    const double C10769 = C10743 + C10744;
    const double C10767 = C10739 + C10740;
    const double C10765 = C10735 + C10736;
    const double C10763 = C10731 + C10732;
    const double C10968 = C10943 + C10944;
    const double C10966 = C10939 + C10940;
    const double C10964 = C10935 + C10936;
    const double C11162 = C11137 + C11138;
    const double C11160 = C11133 + C11134;
    const double C11158 = C11129 + C11130;
    const double C13824 = C13803 + C13804;
    const double C13822 = C13799 + C13800;
    const double C13819 = C13789 + C13790;
    const double C13817 = C13785 + C13786;
    const double C14706 = C14691 + C14692;
    const double C14704 = C14687 + C14688;
    const double C15045 = C15039 + C15040;
    const double C15043 = C15035 + C15036;
    const double C15251 = C15245 + C15246;
    const double C15909 = C15903 + C15904;
    const double C15907 = C15899 + C15900;
    const double C5209 = C5181 * C125;
    const double C5207 = C5181 * C124;
    const double C5201 = C5181 * C134;
    const double C5191 = C5181 * C132;
    const double C5185 = C5181 * C123;
    const double C5397 = C5181 * C288;
    const double C5395 = C5181 * C285;
    const double C5389 = C5181 * C297;
    const double C5591 = C5181 * C465;
    const double C5589 = C5181 * C462;
    const double C5583 = C5181 * C474;
    const double C5761 = C5181 * C284;
    const double C5925 = C5181 * C461;
    const double C6141 = C5181 * C890;
    const double C21893 = C5181 * C287;
    const double C21887 = C5181 * C302;
    const double C21877 = C5181 * C299;
    const double C21871 = C5181 * C286;
    const double C22549 = C5181 * C889;
    const double C22543 = C5181 * C895;
    const double C22807 = C5181 * C1111;
    const double C22801 = C5181 * C1104;
    const double C22975 = C5181 * C1225;
    const double C22969 = C5181 * C1218;
    const double C23479 = C5181 * C1572;
    const double C23473 = C5181 * C1565;
    const double C5231 = C5205 + C5206;
    const double C5225 = C5193 + C5194;
    const double C5222 = C5187 + C5188;
    const double C21905 = C21891 + C21892;
    const double C21902 = C21885 + C21886;
    const double C21899 = C21879 + C21880;
    const double C21896 = C21873 + C21874;
    const double C22552 = C22541 + C22542;
    const double C50971 = C50940 - C50959;
    const double C33381 = C33353 * C135;
    const double C33377 = C33353 * C146;
    const double C33371 = C33353 * C145;
    const double C33367 = C33353 * C133;
    const double C33363 = C33353 * C144;
    const double C33359 = C33353 * C131;
    const double C33573 = C33353 * C303;
    const double C33571 = C33353 * C298;
    const double C33567 = C33353 * C315;
    const double C33563 = C33353 * C296;
    const double C33767 = C33353 * C480;
    const double C33765 = C33353 * C475;
    const double C33761 = C33353 * C492;
    const double C33757 = C33353 * C473;
    const double C34313 = C33353 * C896;
    const double C36357 = C33353 * C1110;
    const double C36355 = C33353 * C1112;
    const double C36351 = C33353 * C1116;
    const double C36345 = C33353 * C317;
    const double C36341 = C33353 * C301;
    const double C36337 = C33353 * C316;
    const double C36333 = C33353 * C300;
    const double C37039 = C33353 * C1571;
    const double C37037 = C33353 * C894;
    const double C37033 = C33353 * C904;
    const double C37029 = C33353 * C1573;
    const double C37025 = C33353 * C1577;
    const double C37309 = C33353 * C2451;
    const double C37305 = C33353 * C2445;
    const double C37474 = C33353 * C2669;
    const double C37470 = C33353 * C1230;
    const double C37466 = C33353 * C1226;
    const double C37978 = C33353 * C3199;
    const double C41169 = C33353 * C1224;
    const double C2459 = C353 * C2295;
    const double C19949 = C353 * C19841;
    const double C24624 = C353 * C49742;
    const double C19943 = C2493 * C19841;
    const double C20396 = C3236 * C19841;
    const double C161 = C117 * C136;
    const double C5215 = C5181 * C136;
    const double C10749 = C10728 * C136;
    const double C33376 = C33355 * C136;
    const double C328 = C117 * C295;
    const double C5767 = C5181 * C295;
    const double C10931 = C10728 * C295;
    const double C33558 = C33355 * C295;
    const double C338 = C117 * C304;
    const double C5403 = C5181 * C304;
    const double C10949 = C10728 * C304;
    const double C33576 = C33355 * C304;
    const double C505 = C117 * C472;
    const double C5199 = C5182 * C472;
    const double C5931 = C5181 * C472;
    const double C10745 = C10729 * C472;
    const double C11125 = C10728 * C472;
    const double C33372 = C33356 * C472;
    const double C33752 = C33355 * C472;
    const double C515 = C117 * C481;
    const double C5195 = C5183 * C481;
    const double C5597 = C5181 * C481;
    const double C5581 = C5182 * C481;
    const double C11143 = C10728 * C481;
    const double C11131 = C10729 * C481;
    const double C33770 = C33355 * C481;
    const double C33758 = C33356 * C481;
    const double C912 = C117 * C897;
    const double C5387 = C5182 * C897;
    const double C6147 = C5181 * C897;
    const double C10937 = C10729 * C897;
    const double C11689 = C10728 * C897;
    const double C33564 = C33356 * C897;
    const double C34316 = C33355 * C897;
    const double C354 = C336 + C337;
    const double C10969 = C10945 + C10946;
    const double C531 = C513 + C514;
    const double C5223 = C5189 + C5190;
    const double C5607 = C5587 + C5588;
    const double C11163 = C11139 + C11140;
    const double C11161 = C11135 + C11136;
    const double C33788 = C33762 + C33763;
    const double C922 = C910 + C911;
    const double C5413 = C5393 + C5394;
    const double C10967 = C10941 + C10942;
    const double C11701 = C11685 + C11686;
    const double C33594 = C33568 + C33569;
    const double C3674 = C3662 + C3663;
    const double C14705 = C14689 + C14690;
    const double C15249 = C15241 + C15242;
    const double C21897 = C21875 + C21876;
    const double C22555 = C22547 + C22548;
    const double C37052 = C37034 + C37035;
    const double C15250 = C15243 + C15244;
    const double C22554 = C22545 + C22546;
    const double C22982 = C22971 + C22972;
    const double C37482 = C37467 + C37468;
    const double C2481 = C351 * C2295;
    const double C20157 = C351 * C19841;
    const double C24636 = C351 * C49742;
    const double C19945 = C2498 * C19841;
    const double C20394 = C3234 * C19841;
    const double C2480 = C352 * C2289;
    const double C2460 = C352 * C50635;
    const double C17340 = C352 * C17172;
    const double C17330 = C352 * C17173;
    const double C19950 = C352 * C50630;
    const double C24635 = C352 * C50904;
    const double C24625 = C352 * C50635;
    const double C2507 = C2494 * C2289;
    const double C17337 = C2494 * C17172;
    const double C19944 = C2494 * C50630;
    const double C24627 = C2494 * C50904;
    const double C3241 = C3235 * C2289;
    const double C17993 = C3235 * C17172;
    const double C20395 = C3235 * C50630;
    const double C25298 = C3235 * C50904;
    const double C166 = C50790 * C138;
    const double C10756 = C50933 * C138;
    const double C33383 = C33353 * C138;
    const double C327 = C50790 * C294;
    const double C11320 = C50933 * C294;
    const double C33947 = C33353 * C294;
    const double C341 = C50790 * C305;
    const double C10954 = C50933 * C305;
    const double C33581 = C33353 * C305;
    const double C504 = C50790 * C471;
    const double C5212 = C5179 * C471;
    const double C10752 = C50854 * C471;
    const double C11480 = C50933 * C471;
    const double C33379 = C50854 * C471;
    const double C34107 = C33353 * C471;
    const double C518 = C50790 * C482;
    const double C5204 = C5180 * C482;
    const double C5928 = C5179 * C482;
    const double C11148 = C50933 * C482;
    const double C11128 = C50854 * C482;
    const double C33775 = C33353 * C482;
    const double C33755 = C50854 * C482;
    const double C44283 = C44259 * C482;
    const double C915 = C50790 * C898;
    const double C5764 = C5179 * C898;
    const double C10934 = C50854 * C898;
    const double C11694 = C50933 * C898;
    const double C33561 = C50854 * C898;
    const double C34321 = C33353 * C898;
    const double C2488 = C50790 * C1108;
    const double C49908 = C49901 + C49902;
    const double C49898 = C49889 + C49896;
    const double C2496 = C2469 + C2470;
    const double C13825 = C13809 + C13810;
    const double C2692 = C2681 + C2682;
    const double C5416 = C5399 + C5400;
    const double C10970 = C10947 + C10948;
    const double C14707 = C14695 + C14696;
    const double C33597 = C33574 + C33575;
    const double C20574 = C50790 * C3491;
    const double C50465 = C49865 + C50463;
    const double C164 = C50790 * C147;
    const double C10760 = C50933 * C147;
    const double C33387 = C33353 * C147;
    const double C329 = C50790 * C314;
    const double C5768 = C5178 * C314;
    const double C10932 = C50933 * C314;
    const double C33559 = C33353 * C314;
    const double C339 = C50790 * C318;
    const double C5404 = C5178 * C318;
    const double C10950 = C50933 * C318;
    const double C33577 = C33353 * C318;
    const double C506 = C50790 * C491;
    const double C5200 = C5179 * C491;
    const double C5932 = C5178 * C491;
    const double C10746 = C50854 * C491;
    const double C11126 = C50933 * C491;
    const double C33373 = C50854 * C491;
    const double C33753 = C33353 * C491;
    const double C516 = C50790 * C495;
    const double C5196 = C5180 * C495;
    const double C5598 = C5178 * C495;
    const double C5582 = C5179 * C495;
    const double C11144 = C50933 * C495;
    const double C11132 = C50854 * C495;
    const double C33771 = C33353 * C495;
    const double C33759 = C50854 * C495;
    const double C44275 = C44259 * C495;
    const double C913 = C50790 * C905;
    const double C5388 = C5179 * C905;
    const double C6148 = C5178 * C905;
    const double C10938 = C50854 * C905;
    const double C11690 = C50933 * C905;
    const double C33565 = C50854 * C905;
    const double C34317 = C33353 * C905;
    const double C2468 = C50790 * C1115;
    const double C13814 = C50933 * C1115;
    const double C36361 = C33353 * C1115;
    const double C2510 = C2497 * C2289;
    const double C18246 = C2497 * C17172;
    const double C19946 = C2497 * C50630;
    const double C24632 = C2497 * C50904;
    const double C3239 = C3233 * C2289;
    const double C18890 = C3233 * C17172;
    const double C20393 = C3233 * C50630;
    const double C25294 = C3233 * C50904;
    const double C49963 = C49943 + C49962;
    const double C1229 = (C50015 * C49878 + ae * C49845 * C50029 +
                          C49845 * (ae * C50029 + C49845 * C50015 * C49894)) /
                         C49727;
    const double C1223 = (C50015 * C49953 + C50029 * C50088) / C49723;
    const double C50097 = C50094 + C50095;
    const double C2680 = C50790 * C1576;
    const double C5406 = C5179 * C1576;
    const double C10952 = C50854 * C1576;
    const double C14700 = C50933 * C1576;
    const double C33579 = C50854 * C1576;
    const double C37043 = C33353 * C1576;
    const double C5600 = C5179 * C1860;
    const double C5580 = C5180 * C1860;
    const double C11146 = C50854 * C1860;
    const double C33773 = C50854 * C1860;
    const double C44647 = C44259 * C1860;
    const double C2467 = C117 * C1109;
    const double C13813 = C10728 * C1109;
    const double C36360 = C33355 * C1109;
    const double C2679 = C117 * C1570;
    const double C5405 = C5182 * C1570;
    const double C10951 = C10729 * C1570;
    const double C14699 = C10728 * C1570;
    const double C33578 = C33356 * C1570;
    const double C37042 = C33355 * C1570;
    const double C5599 = C5182 * C1854;
    const double C5579 = C5183 * C1854;
    const double C11145 = C10729 * C1854;
    const double C33772 = C33356 * C1854;
    const double C3671 = C50790 * C2675;
    const double C15906 = C50854 * C2675;
    const double C21884 = C5180 * C2675;
    const double C23482 = C5179 * C2675;
    const double C31870 = C50933 * C2675;
    const double C37023 = C50854 * C2675;
    const double C37478 = C33353 * C2675;
    const double C47231 = C44259 * C2675;
    const double C4180 = C50790 * C3205;
    const double C15042 = C50854 * C3205;
    const double C22810 = C5179 * C3205;
    const double C32370 = C50933 * C3205;
    const double C36349 = C50854 * C3205;
    const double C37982 = C33353 * C3205;
    const double C23484 = C5180 * C4591;
    const double C31872 = C50854 * C4591;
    const double C37480 = C50854 * C4591;
    const double C48827 = C44259 * C4591;
    const double C3498 = C117 * C2446;
    const double C31708 = C10728 * C2446;
    const double C37308 = C33355 * C2446;
    const double C3670 = C117 * C2670;
    const double C15905 = C10729 * C2670;
    const double C21883 = C5183 * C2670;
    const double C23481 = C5182 * C2670;
    const double C31869 = C10728 * C2670;
    const double C37022 = C33356 * C2670;
    const double C37477 = C33355 * C2670;
    const double C4179 = C117 * C3200;
    const double C15041 = C10729 * C3200;
    const double C22809 = C5182 * C3200;
    const double C32369 = C10728 * C3200;
    const double C36348 = C33356 * C3200;
    const double C37981 = C33355 * C3200;
    const double C23483 = C5183 * C4584;
    const double C31871 = C10729 * C4584;
    const double C37479 = C33356 * C4584;
    const double C6555 =
        (3 * (C50083 + ae * C50119 + C49845 * C50125) +
         ae * (2 * C50119 + C49845 * C50126) +
         C49845 *
             (2 * C50125 + ae * C50126 +
              C49845 * (C50121 + ae * C49845 * C50122 +
                        C49845 * (ae * C50122 + C49845 * C50015 * C49914)))) /
        C49727;
    const double C15252 = C15247 + C15248;
    const double C22551 = C22539 + C22540;
    const double C22985 = C22977 + C22978;
    const double C37484 = C37471 + C37472;
    const double C50203 = C50196 + C50197;
    const double C50153 = C50150 + C50151;
    const double C50414 = C50411 + C49977;
    const double C1853 =
        (2 * (C49845 * C49879 + C50231 * ae) +
         C49845 * (C49879 + C49845 * (C49845 * C49895 + C49977) +
                   C49845 * C49975 * ae) +
         (C50231 + C49975 * C50088) * ae) /
        C49723;
    const double C50237 = C50235 + C50236;
    const double C1222 =
        (C50015 * C49879 + C49845 * (C49845 * C50015 * C49895 + C50310 * ae) +
         C49845 * C50310 * ae) /
        C49723;
    const double C6138 =
        (2 * (C49845 * C50418 + C50310 * ae) +
         C49845 * (C50418 + C49845 * (C49845 * C50015 * C49919 + C50419 * ae) +
                   C49845 * C50419 * ae) +
         (C50310 + C50419 * C50088) * ae) /
        C49723;
    const double C1216 = C50015 * C50231 + C50310 * C50088;
    const double C6136 =
        2 * C49845 * C50310 + C49845 * (C50310 + C50419 * C50088);
    const double C2998 = C50790 * C1569;
    const double C10956 = C50854 * C1569;
    const double C33583 = C50854 * C1569;
    const double C2487 = C117 * C1102;
    const double C2997 = C117 * C1563;
    const double C10955 = C10729 * C1563;
    const double C33582 = C33356 * C1563;
    const double C5929 = C5183 * C1847;
    const double C11149 = C10729 * C1847;
    const double C33776 = C33356 * C1847;
    const double C50449 = C49845 * C50445;
    const double C2671 =
        (C49867 + C49881 * C50033 +
         C49845 * (C49845 * (C49881 + C49903 * C50033) + C50345 * ae) +
         C49845 * C50345 * ae) /
        C49723;
    const double C3201 =
        (C49845 * (2 * C50015 * C49881 + C50015 * (C49881 + C49903 * C50033)) +
         (2 * C50313 + C50015 * C50345) * ae) /
        C49723;
    const double C4583 =
        (2 * (C49845 * C50360 + C50345 * ae) +
         C49845 * (C50360 +
                   C49845 * (C49845 * (C49903 + C49846 * C49915 * C50033) +
                             C50370 * ae) +
                   C49845 * C50370 * ae) +
         (C50345 + C50370 * C50088) * ae) /
        C49723;
    const double C2443 = 3 * (C50229 + C49957 * C50033) +
                         C50015 * (2 * C50313 + C50015 * C50345);
    const double C2667 = C50229 + C49957 * C50033 + C50345 * C50088;
    const double C3197 = C49845 * (2 * C50313 + C50015 * C50345);
    const double C4578 =
        2 * C49845 * C50345 + C49845 * (C50345 + C50370 * C50088);
    const double C50428 = C50426 + C50423;
    const double C6146 = C5180 * C4587;
    const double C14026 = C50854 * C4587;
    const double C41171 = C50854 * C4587;
    const double C45209 = C44259 * C4587;
    const double C6145 = C5183 * C4580;
    const double C14025 = C10729 * C4580;
    const double C41170 = C33356 * C4580;
    const double C5571 =
        (3 * (C49867 + C49845 * C50406 + C50404 * ae) +
         C49845 * (2 * C50406 +
                   C49845 * (C49881 + C49845 * (C49845 * C49903 + C49974) +
                             C49845 * C49971 * ae) +
                   C50407 * ae) +
         (2 * C50404 + C49845 * C50407) * ae) /
        C49723;
    const double C5567 = 3 * (C50229 + C49957 * C50088) +
                         C49845 * (2 * C50404 + C49845 * C50407);
    const double C49979 = C49958 + C49978;
    const double C50049 = C49961 + C50048;
    const double C50065 = 2 * C50063;
    const double C50111 = ae * C50063;
    const double C50110 = C49845 * C50063;
    const double C4592 =
        (2 * (ae * C50029 + C49845 * C50081) +
         ae * (C50029 + C50063 * std::pow(C49845, 2)) +
         C49845 * (C50081 + ae * C49845 * C50063 +
                   C49845 * (ae * C50063 + C49845 * C50015 * C49918))) /
        C49727;
    const double C4586 =
        (2 * C49845 * C50029 + C49845 * (C50029 + C50063 * C50088)) / C49723;
    const double C50098 = C49961 + C50096;
    const double C50134 = 2 * C50128;
    const double C50132 = ae * C50128;
    const double C50528 = C49875 + C50526;
    const double C50380 = C50377 + C50379;
    const double C50495 = C50491 + C50492;
    const double C23478 = C5180 * C4585;
    const double C31868 = C50854 * C4585;
    const double C37476 = C50854 * C4585;
    const double C48821 = C44259 * C4585;
    const double C23477 = C5183 * C4579;
    const double C31867 = C10729 * C4579;
    const double C37475 = C33356 * C4579;
    const double C6553 =
        (3 * (C50394 + C49845 * C50438 + C50434 * ae) +
         C49845 * (2 * C50438 +
                   C49845 * (C50432 +
                             C49845 * (C49845 * C50015 * C49891 + C50435 * ae) +
                             C49845 * C50435 * ae) +
                   C50439 * ae) +
         (2 * C50434 + C49845 * C50439) * ae) /
        C49723;
    const double C6549 = 3 * (C50316 + C50375 * C50088) +
                         C49845 * (2 * C50434 + C49845 * C50439);
    const double C50509 = C49845 * C50507;
    const double C50466 = C50462 + C50464;
    const double C49923 = C49911 + C49921;
    const double C49922 = C49913 + C49920;
    const double C50058 = C49894 + C50057;
    const double C50114 = C49845 * C50112;
    const double C50133 = C50129 + C50130;
    const double C2478 = C50790 * C2452;
    const double C50160 = C50156 + C50159;
    const double C50177 = C50174 + C50175;
    const double C50191 = C49845 * C50189;
    const double C50211 = C50208 + C50209;
    const double C50003 = C49969 + C50001;
    const double C50066 = C49976 + C50064;
    const double C50115 = C50113 * C50088;
    const double C50135 = C49976 + C50131;
    const double C50167 = C50163 + C50166;
    const double C50178 = C50073 + C50176;
    const double C50192 = C49845 * C50190;
    const double C50212 = C50206 + C50210;
    const double C5610 = C5593 + C5594;
    const double C5606 = C5585 + C5586;
    const double C11164 = C11141 + C11142;
    const double C33791 = C33768 + C33769;
    const double C2693 = C2683 + C2684;
    const double C5412 = C5391 + C5392;
    const double C6154 = C6143 + C6144;
    const double C11702 = C11687 + C11688;
    const double C14031 = C14023 + C14024;
    const double C34329 = C34314 + C34315;
    const double C3503 = C3496 + C3497;
    const double C31714 = C31704 + C31705;
    const double C3676 = C3668 + C3669;
    const double C15908 = C15901 + C15902;
    const double C21904 = C21889 + C21890;
    const double C23486 = C23475 + C23476;
    const double C31873 = C31865 + C31866;
    const double C37048 = C37026 + C37027;
    const double C4184 = C4177 + C4178;
    const double C15044 = C15037 + C15038;
    const double C22814 = C22803 + C22804;
    const double C32375 = C32365 + C32366;
    const double C36376 = C36352 + C36353;
    const double C3679 = C3675 * C2289;
    const double C18398 = C3675 * C17172;
    const double C20684 = C3675 * C50630;
    const double C25706 = C3675 * C50904;
    const double C139 = (4 * (2 * C49867 + C49846 * C49879) +
                         C49846 * (3 * C49879 + C49846 * C49899)) /
                        C49723;
    const double C307 =
        (2 * C49867 + C49846 * C49879 + C49899 * C50033) / C49723;
    const double C309 = (C50015 * (3 * C49879 + C49846 * C49899)) / C49723;
    const double C20568 =
        (5 * (3 * C50364 + C50015 * C50474) +
         C50015 * (4 * C50474 +
                   C50015 * (3 * C50472 +
                             C50015 * (2 * C50015 * C49891 +
                                       C50015 * (C49891 + C49915 * C50033))))) /
        C49723;
    const double C3660 =
        (2 * C50015 * C49874 + C50015 * C50061 + ae * C49845 * C50075 +
         C49845 *
             (ae * C50075 + C49845 * (2 * C50015 * C49890 +
                                      C50015 * (C49890 + C49914 * C50033)))) /
        C49727;
    const double C4174 =
        (ae * (3 * C50046 + C50015 * C50075) +
         C49845 *
             (3 * C50061 + C50015 * (2 * C50015 * C49890 +
                                     C50015 * (C49890 + C49914 * C50033)))) /
        C49727;
    const double C3490 = (4 * (2 * C50031 + C50015 * C50046) +
                          C50015 * (3 * C50046 + C50015 * C50075)) /
                         C49723;
    const double C3657 =
        (2 * C50031 + C50015 * C50046 + C50075 * C50088) / C49723;
    const double C4171 = (C49845 * (3 * C50046 + C50015 * C50075)) / C49723;
    const double C22979 = C5183 * C6552;
    const double C7436 = (4 * (2 * C50085 + C49845 * C50091) +
                          C49845 * (3 * C50091 + C49845 * C50154)) /
                         C49723;
    const double C50004 = C50002 * ae;
    const double C50240 = C49846 * C50002;
    const double C50307 = C50015 * C50002;
    const double C2674 =
        (C49879 + C49895 * C50033 +
         C49845 * (C49845 * (C49895 + C49919 * C50033) + C50350 * ae) +
         C49845 * C50350 * ae) /
        C49723;
    const double C3204 =
        (C49845 * (2 * C50015 * C49895 + C50015 * (C49895 + C49919 * C50033)) +
         (2 * C50310 + C50015 * C50350) * ae) /
        C49723;
    const double C2444 = 3 * (C50231 + C49975 * C50033) +
                         C50015 * (2 * C50310 + C50015 * C50350);
    const double C2668 = C50231 + C49975 * C50033 + C50350 * C50088;
    const double C3198 = C49845 * (2 * C50310 + C50015 * C50350);
    const double C5568 = 3 * (C50231 + C49975 * C50088) +
                         C49845 * (2 * C50412 + C49845 * C50415);
    const double C50372 = C50369 + C50371;
    const double C6548 = 3 * (C50313 + C50367 * C50088) +
                         C49845 * (2 * C50424 + C49845 * C50429);
    const double C50452 = C50448 + C50450;
    const double C50483 = C50015 * C50482;
    const double C22964 = 3 * (C50341 + C50378 * C50088) +
                          C49845 * (2 * C50493 + C49845 * C50496);
    const double C50512 = C50506 + C50510;
    const double C50531 = C49845 * C50529;
    const double C50962 = C50909 - C50945;
    const double C50963 = C50913 - C50947;
    const double C50964 = C50916 - C50949;
    const double C50965 = C50923 - C50950;
    const double C50966 = C50918 - C50952;
    const double C50967 = C50927 - C50953;
    const double C50968 = C50929 - C50955;
    const double C50969 = C50936 - C50956;
    const double C8183 = C351 * C8031;
    const double C17331 = C351 * C17179;
    const double C49746 = C50630 - C49744;
    const double C8192 = C352 * C50960;
    const double C8189 = C2494 * C50960;
    const double C8180 = C2492 * C50960;
    const double C8851 = C3235 * C50960;
    const double C9104 = C2497 * C50960;
    const double C9256 = C3675 * C50960;
    const double C9748 = C3233 * C50960;
    const double C106 = (C50960 * C50625) / C49723 + (C50904 - C50943) / C49728;
    const double C8182 = C352 * C50961;
    const double C107 =
        (C50961 * C50625) / C49723 + (2 * C50635 + C50960) / C49728;
    const double C108 = (C50625 * C50635) / C49732 + C50961 / C49728;
    const double C44282 = C44262 * C466;
    const double C44274 = C44262 * C481;
    const double C44268 = C44262 * C465;
    const double C44470 = C44262 * C1217;
    const double C44652 = C44262 * C1848;
    const double C44646 = C44262 * C1854;
    const double C44996 = C44262 * C1847;
    const double C45208 = C44262 * C4580;
    const double C47236 = C44262 * C2666;
    const double C47230 = C44262 * C2670;
    const double C47228 = C44262 * C1225;
    const double C47222 = C44262 * C1218;
    const double C47892 = C44262 * C4581;
    const double C47886 = C44262 * C4588;
    const double C48322 = C44262 * C6552;
    const double C48826 = C44262 * C4584;
    const double C48820 = C44262 * C4579;
    const double C49822 = C50790 - C49819;
    const double C44295 = C50970 * C146;
    const double C44289 = C50970 * C135;
    const double C44287 = C50970 * C133;
    const double C44281 = C50970 * C145;
    const double C44271 = C50970 * C144;
    const double C44265 = C50970 * C131;
    const double C44483 = C50970 * C318;
    const double C44477 = C50970 * C303;
    const double C44475 = C50970 * C298;
    const double C44469 = C50970 * C315;
    const double C44665 = C50970 * C495;
    const double C44659 = C50970 * C480;
    const double C44657 = C50970 * C475;
    const double C44651 = C50970 * C492;
    const double C44835 = C50970 * C314;
    const double C44829 = C50970 * C296;
    const double C44999 = C50970 * C491;
    const double C44993 = C50970 * C473;
    const double C45211 = C50970 * C905;
    const double C45205 = C50970 * C896;
    const double C47241 = C50970 * C301;
    const double C47235 = C50970 * C317;
    const double C47225 = C50970 * C316;
    const double C47219 = C50970 * C300;
    const double C47897 = C50970 * C894;
    const double C47891 = C50970 * C904;
    const double C48155 = C50970 * C1116;
    const double C48149 = C50970 * C1112;
    const double C48319 = C50970 * C1230;
    const double C48313 = C50970 * C1226;
    const double C48823 = C50970 * C1577;
    const double C48817 = C50970 * C1573;
    const double C38933 =
        (C50970 * C50849) / C49723 + (C50933 - C50957) / C49728;
    const double C10779 = C10767 + C10768;
    const double C30818 = C13824 + C13823;
    const double C30819 = C13822 + C13821;
    const double C5233 = C5209 + C5210;
    const double C5232 = C5207 + C5208;
    const double C5229 = C5201 + C5202;
    const double C5224 = C5191 + C5192;
    const double C5221 = C5185 + C5186;
    const double C5415 = C5397 + C5398;
    const double C5414 = C5395 + C5396;
    const double C5411 = C5389 + C5390;
    const double C5609 = C5591 + C5592;
    const double C5608 = C5589 + C5590;
    const double C5605 = C5583 + C5584;
    const double C5773 = C5761 + C5762;
    const double C5937 = C5925 + C5926;
    const double C6153 = C6141 + C6142;
    const double C21906 = C21893 + C21894;
    const double C21903 = C21887 + C21888;
    const double C21898 = C21877 + C21878;
    const double C21895 = C21871 + C21872;
    const double C22556 = C22549 + C22550;
    const double C22553 = C22543 + C22544;
    const double C22816 = C22807 + C22808;
    const double C22813 = C22801 + C22802;
    const double C22984 = C22975 + C22976;
    const double C22981 = C22969 + C22970;
    const double C23488 = C23479 + C23480;
    const double C23485 = C23473 + C23474;
    const double C44291 = C50971 * C471;
    const double C44285 = C50971 * C473;
    const double C44279 = C50971 * C491;
    const double C44273 = C50971 * C492;
    const double C44267 = C50971 * C475;
    const double C44485 = C50971 * C1576;
    const double C44479 = C50971 * C1571;
    const double C44473 = C50971 * C896;
    const double C44467 = C50971 * C905;
    const double C44667 = C50971 * C1860;
    const double C44661 = C50971 * C1855;
    const double C44655 = C50971 * C480;
    const double C44649 = C50971 * C495;
    const double C44831 = C50971 * C898;
    const double C44995 = C50971 * C482;
    const double C45207 = C50971 * C1224;
    const double C47239 = C50971 * C1573;
    const double C47233 = C50971 * C1577;
    const double C47227 = C50971 * C904;
    const double C47221 = C50971 * C894;
    const double C47895 = C50971 * C1226;
    const double C47889 = C50971 * C1230;
    const double C48157 = C50971 * C3205;
    const double C48151 = C50971 * C3199;
    const double C48321 = C50971 * C4593;
    const double C48315 = C50971 * C4589;
    const double C48825 = C50971 * C2675;
    const double C48819 = C50971 * C2669;
    const double C38934 =
        (C50971 * C50849) / C49723 + (2 * C50854 + C50970) / C49728;
    const double C38935 = (C50849 * C50854) / C49732 + C50971 / C49728;
    const double C33401 = C33380 + C33381;
    const double C33396 = C33370 + C33371;
    const double C33394 = C33366 + C33367;
    const double C33392 = C33362 + C33363;
    const double C33390 = C33358 + C33359;
    const double C33596 = C33572 + C33573;
    const double C33595 = C33570 + C33571;
    const double C33593 = C33566 + C33567;
    const double C33591 = C33562 + C33563;
    const double C33790 = C33766 + C33767;
    const double C33789 = C33764 + C33765;
    const double C33787 = C33760 + C33761;
    const double C33785 = C33756 + C33757;
    const double C34328 = C34312 + C34313;
    const double C36378 = C36356 + C36357;
    const double C36377 = C36354 + C36355;
    const double C36375 = C36350 + C36351;
    const double C36372 = C36344 + C36345;
    const double C36370 = C36340 + C36341;
    const double C36368 = C36336 + C36337;
    const double C36366 = C36332 + C36333;
    const double C37054 = C37038 + C37039;
    const double C37053 = C37036 + C37037;
    const double C37051 = C37032 + C37033;
    const double C37049 = C37028 + C37029;
    const double C37047 = C37024 + C37025;
    const double C37314 = C37304 + C37305;
    const double C37485 = C37473 + C37474;
    const double C37483 = C37469 + C37470;
    const double C37481 = C37465 + C37466;
    const double C37987 = C37977 + C37978;
    const double C41176 = C41168 + C41169;
    const double C176 = C161 + C162;
    const double C5236 = C5215 + C5216;
    const double C10772 = C10749 + C10750;
    const double C33399 = C33376 + C33377;
    const double C2465 = C354 * C2295;
    const double C19951 = C354 * C19841;
    const double C24628 = C354 * C49742;
    const double C3216 = C922 * C2295;
    const double C20397 = C922 * C19841;
    const double C25297 = C922 * C49742;
    const double C13806 = C10967 + C10968;
    const double C13793 = C10968 + C10967;
    const double C20683 = C3674 * C19841;
    const double C19957 = C19943 + C19944;
    const double C178 = C165 + C166;
    const double C10775 = C10755 + C10756;
    const double C33402 = C33382 + C33383;
    const double C349 = C326 + C327;
    const double C11327 = C11319 + C11320;
    const double C33954 = C33946 + C33947;
    const double C356 = C340 + C341;
    const double C10973 = C10953 + C10954;
    const double C33600 = C33580 + C33581;
    const double C526 = C503 + C504;
    const double C5234 = C5211 + C5212;
    const double C10773 = C10751 + C10752;
    const double C11487 = C11479 + C11480;
    const double C33400 = C33378 + C33379;
    const double C34114 = C34106 + C34107;
    const double C533 = C517 + C518;
    const double C5230 = C5203 + C5204;
    const double C5938 = C5927 + C5928;
    const double C11167 = C11147 + C11148;
    const double C11157 = C11127 + C11128;
    const double C33794 = C33774 + C33775;
    const double C33784 = C33754 + C33755;
    const double C924 = C914 + C915;
    const double C5774 = C5763 + C5764;
    const double C10963 = C10933 + C10934;
    const double C11705 = C11693 + C11694;
    const double C33590 = C33560 + C33561;
    const double C34332 = C34320 + C34321;
    const double C148 =
        (4 * (2 * C49878 + ae * C49879 + C49846 * C49898) +
         ae * (3 * C49879 + C49846 * C49899) +
         C49846 * (3 * C49898 + ae * C49899 +
                   C49846 * (2 * C49894 + ae * C49895 +
                             C49846 * (C49890 + ae * C49846 * C49891 +
                                       C49846 * (ae * C49891 +
                                                 C49846 * std::pow(C49850, 7) *
                                                     bs[7] * C49856))))) /
        C49727;
    const double C313 =
        ((yP - yQ) * (2 * C49878 + ae * C49879 + C49846 * C49898)) / C49727;
    const double C319 = (C49864 + ae * C49867 + C49846 * C49878 +
                         C49898 * std::pow(yP - yQ, 2)) /
                        C49727;
    const double C490 =
        (ae * (2 * (C49846 * C49943 + C49940 * ae) +
               C49846 *
                   (C49943 +
                    C49846 * (C49846 * C49869 * C49870 * C49939 + C49941 * ae) +
                    C49846 * C49941 * ae) +
               (C49940 + C49941 * C49871) * ae) +
         C49845 * (2 * C49878 + ae * C49879 + C49846 * C49898)) /
        C49727;
    const double C2509 = C2496 * C2295;
    const double C19953 = C2496 * C19841;
    const double C24631 = C2496 * C49742;
    const double C3210 = C2692 * C2295;
    const double C20399 = C2692 * C19841;
    const double C25293 = C2692 * C49742;
    const double C13807 = C10969 + C10970;
    const double C13796 = C10970 + C10969;
    const double C50467 = C50465 + C50460;
    const double C350 = C328 + C329;
    const double C5776 = C5767 + C5768;
    const double C10962 = C10931 + C10932;
    const double C33589 = C33558 + C33559;
    const double C355 = C338 + C339;
    const double C5418 = C5403 + C5404;
    const double C10971 = C10949 + C10950;
    const double C33598 = C33576 + C33577;
    const double C527 = C505 + C506;
    const double C5228 = C5199 + C5200;
    const double C5940 = C5931 + C5932;
    const double C10770 = C10745 + C10746;
    const double C11156 = C11125 + C11126;
    const double C33397 = C33372 + C33373;
    const double C33783 = C33752 + C33753;
    const double C532 = C515 + C516;
    const double C5226 = C5195 + C5196;
    const double C5612 = C5597 + C5598;
    const double C5604 = C5581 + C5582;
    const double C11165 = C11143 + C11144;
    const double C11159 = C11131 + C11132;
    const double C33792 = C33770 + C33771;
    const double C33786 = C33758 + C33759;
    const double C923 = C912 + C913;
    const double C5410 = C5387 + C5388;
    const double C6156 = C6147 + C6148;
    const double C10965 = C10937 + C10938;
    const double C11703 = C11689 + C11690;
    const double C33592 = C33564 + C33565;
    const double C34330 = C34316 + C34317;
    const double C19958 = C19945 + C19946;
    const double C20572 = C19946 + C19945;
    const double C21026 = C20393 + C20394;
    const double C49964 = C49963 + C49959;
    const double C2686 = C50790 * C1229;
    const double C5386 = C5180 * C1229;
    const double C6150 = C5179 * C1229;
    const double C11692 = C50854 * C1229;
    const double C14028 = C50933 * C1229;
    const double C34319 = C50854 * C1229;
    const double C41173 = C33353 * C1229;
    const double C44465 = C44259 * C1229;
    const double C45213 = C50971 * C1229;
    const double C2685 = C117 * C1223;
    const double C5385 = C5183 * C1223;
    const double C6149 = C5182 * C1223;
    const double C11691 = C10729 * C1223;
    const double C14027 = C10728 * C1223;
    const double C34318 = C33356 * C1223;
    const double C41172 = C33355 * C1223;
    const double C44464 = C44262 * C1223;
    const double C2495 = C2467 + C2468;
    const double C13827 = C13813 + C13814;
    const double C36380 = C36360 + C36361;
    const double C2691 = C2679 + C2680;
    const double C5419 = C5405 + C5406;
    const double C10972 = C10951 + C10952;
    const double C14709 = C14699 + C14700;
    const double C33599 = C33578 + C33579;
    const double C37056 = C37042 + C37043;
    const double C5613 = C5599 + C5600;
    const double C5603 = C5579 + C5580;
    const double C11166 = C11145 + C11146;
    const double C33793 = C33772 + C33773;
    const double C3504 = C3498 + C3499;
    const double C31716 = C31708 + C31709;
    const double C37316 = C37308 + C37309;
    const double C3677 = C3670 + C3671;
    const double C15910 = C15905 + C15906;
    const double C21901 = C21883 + C21884;
    const double C23489 = C23481 + C23482;
    const double C31875 = C31869 + C31870;
    const double C37046 = C37022 + C37023;
    const double C37487 = C37477 + C37478;
    const double C4185 = C4179 + C4180;
    const double C15046 = C15041 + C15042;
    const double C22817 = C22809 + C22810;
    const double C32377 = C32369 + C32370;
    const double C36374 = C36348 + C36349;
    const double C37989 = C37981 + C37982;
    const double C23490 = C23483 + C23484;
    const double C31876 = C31871 + C31872;
    const double C37488 = C37479 + C37480;
    const double C22980 = C5180 * C6555;
    const double C48323 = C44259 * C6555;
    const double C7439 =
        (4 * (2 * C50089 + ae * C50091 + C49845 * C50153) +
         ae * (3 * C50091 + C49845 * C50154) +
         C49845 *
             (3 * C50153 + ae * C50154 +
              C49845 * (2 * C50147 + ae * C50149 +
                        C49845 * (C49890 + ae * C49845 * C49969 +
                                  C49845 * (ae * C49969 + C49845 * C49914))))) /
        C49727;
    const double C5574 =
        (3 * (C49879 + C49845 * C50414 + C50412 * ae) +
         C49845 * (2 * C50414 +
                   C49845 * (C49895 + C49845 * (C49845 * C49919 + C49999) +
                             C49845 * C49997 * ae) +
                   C50415 * ae) +
         (2 * C50412 + C49845 * C50415) * ae) /
        C49723;
    const double C5930 = C5180 * C1853;
    const double C11150 = C50854 * C1853;
    const double C33777 = C50854 * C1853;
    const double C44997 = C44259 * C1853;
    const double C484 =
        (2 * C49867 + C49846 * C49879 +
         C49845 * (C49845 * C49899 + C50237 * ae) + C49845 * C50237 * ae) /
        C49723;
    const double C486 = (C49845 * (3 * C49879 + C49846 * C49899) +
                         (3 * C50231 + C49846 * C50237) * ae) /
                        C49723;
    const double C900 =
        (C49845 * C50015 * C49899 + C50015 * C50237 * ae) / C49723;
    const double C127 = 4 * (2 * C50229 + C49846 * C50231) +
                        C49846 * (3 * C50231 + C49846 * C50237);
    const double C290 = 2 * C50229 + C49846 * C50231 + C50237 * C50033;
    const double C291 = C50015 * (3 * C50231 + C49846 * C50237);
    const double C467 = 2 * C50229 + C49846 * C50231 + C50237 * C50088;
    const double C468 = C49845 * (3 * C50231 + C49846 * C50237);
    const double C892 = C49845 * C50015 * C50237;
    const double C1101 =
        2 * C50015 * C50237 + C50015 * (C50237 + C50002 * C50033);
    const double C1562 = C49845 * (C50237 + C50002 * C50033);
    const double C1846 =
        2 * C49845 * C50237 + C49845 * (C50237 + C50002 * C50088);
    const double C5766 = C5180 * C1222;
    const double C8350 = C50790 * C1222;
    const double C11696 = C50854 * C1222;
    const double C34323 = C50854 * C1222;
    const double C44833 = C44259 * C1222;
    const double C5765 = C5183 * C1216;
    const double C8349 = C117 * C1216;
    const double C11695 = C10729 * C1216;
    const double C34322 = C33356 * C1216;
    const double C44832 = C44262 * C1216;
    const double C2501 = C2487 + C2488;
    const double C3001 = C2997 + C2998;
    const double C10974 = C10955 + C10956;
    const double C33601 = C33582 + C33583;
    const double C50451 = C49881 + C50449;
    const double C2688 = C50790 * C2671;
    const double C5402 = C5180 * C2671;
    const double C14698 = C50854 * C2671;
    const double C37041 = C50854 * C2671;
    const double C44481 = C44259 * C2671;
    const double C3222 = C50790 * C3201;
    const double C13812 = C50854 * C3201;
    const double C36359 = C50854 * C3201;
    const double C2475 = C117 * C2443;
    const double C2687 = C117 * C2667;
    const double C5401 = C5183 * C2667;
    const double C14697 = C10729 * C2667;
    const double C37040 = C33356 * C2667;
    const double C44480 = C44262 * C2667;
    const double C3221 = C117 * C3197;
    const double C13811 = C10729 * C3197;
    const double C36358 = C33356 * C3197;
    const double C6551 =
        (3 * (C50391 + C49845 * C50428 + C50424 * ae) +
         C49845 * (2 * C50428 +
                   C49845 * (C50422 +
                             C49845 * (C49845 * C50015 * C49846 * C49915 +
                                       C50425 * ae) +
                             C49845 * C50425 * ae) +
                   C50429 * ae) +
         (2 * C50424 + C49845 * C50429) * ae) /
        C49723;
    const double C6155 = C6145 + C6146;
    const double C14032 = C14025 + C14026;
    const double C41177 = C41170 + C41171;
    const double C5596 = C5180 * C5571;
    const double C44663 = C44259 * C5571;
    const double C5595 = C5183 * C5567;
    const double C44662 = C44262 * C5567;
    const double C49980 = C49979 + C49974;
    const double C2676 =
        (C49878 + C49894 * C50033 + ae * C49845 * C50049 +
         C49845 * (ae * C50049 + C49845 * (C49894 + C49918 * C50033))) /
        C49727;
    const double C3206 =
        (ae * (2 * C50029 + C50015 * C50049) +
         C49845 * (2 * C50015 * C49894 + C50015 * (C49894 + C49918 * C50033))) /
        C49727;
    const double C2448 = (3 * (C49953 + C49961 * C50033) +
                          C50015 * (2 * C50029 + C50015 * C50049)) /
                         C49723;
    const double C2672 = (C49953 + C49961 * C50033 + C50049 * C50088) / C49723;
    const double C3202 = (C49845 * (2 * C50029 + C50015 * C50049)) / C49723;
    const double C6152 = C5180 * C4592;
    const double C14030 = C50854 * C4592;
    const double C41175 = C50854 * C4592;
    const double C45215 = C44259 * C4592;
    const double C6151 = C5183 * C4586;
    const double C14029 = C10729 * C4586;
    const double C41174 = C33356 * C4586;
    const double C45214 = C44262 * C4586;
    const double C5576 =
        (3 * (C49878 + ae * C50093 + C49845 * C50097) +
         ae * (2 * C50093 + C49845 * C50098) +
         C49845 * (2 * C50097 + ae * C50098 +
                   C49845 * (C49894 + ae * C49845 * C49976 +
                             C49845 * (ae * C49976 + C49845 * C49918)))) /
        C49727;
    const double C5572 = (3 * (C49953 + C49961 * C50088) +
                          C49845 * (2 * C50093 + C49845 * C50098)) /
                         C49723;
    const double C50136 = C49894 + C50132;
    const double C50530 = C50528 + C50523;
    const double C3658 =
        (2 * C50015 * C49865 + C50015 * C50364 +
         C49845 * (C49845 * (2 * C50015 * C49875 +
                             C50015 * (C49875 + C49891 * C50033)) +
                   C50380 * ae) +
         C49845 * C50380 * ae) /
        C49723;
    const double C4172 =
        (C49845 *
             (3 * C50364 + C50015 * (2 * C50015 * C49875 +
                                     C50015 * (C49875 + C49891 * C50033))) +
         (3 * C50341 + C50015 * C50380) * ae) /
        C49723;
    const double C21298 =
        (2 * (C49845 * C50474 + C50380 * ae) +
         C49845 * (C50474 +
                   C49845 * (C49845 * (2 * C50015 * C49891 +
                                       C50015 * (C49891 + C49915 * C50033)) +
                             C50482 * ae) +
                   C49845 * C50482 * ae) +
         (C50380 + C50482 * C50088) * ae) /
        C49723;
    const double C3487 = 4 * (2 * C50316 + C50015 * C50341) +
                         C50015 * (3 * C50341 + C50015 * C50380);
    const double C3654 = 2 * C50316 + C50015 * C50341 + C50380 * C50088;
    const double C4168 = C49845 * (3 * C50341 + C50015 * C50380);
    const double C21296 =
        2 * C49845 * C50380 + C49845 * (C50380 + C50482 * C50088);
    const double C22966 =
        (3 * (C50364 + C49845 * C50495 + C50493 * ae) +
         C49845 * (2 * C50495 +
                   C49845 * (C50472 +
                             C49845 * (C49845 * (C49891 + C49915 * C50033) +
                                       C50480 * ae) +
                             C49845 * C50480 * ae) +
                   C50496 * ae) +
         (2 * C50493 + C49845 * C50496) * ae) /
        C49723;
    const double C23487 = C23477 + C23478;
    const double C31874 = C31867 + C31868;
    const double C37486 = C37475 + C37476;
    const double C22974 = C5180 * C6553;
    const double C48317 = C44259 * C6553;
    const double C22973 = C5183 * C6549;
    const double C48316 = C44262 * C6549;
    const double C50511 = C50432 + C50509;
    const double C7433 = 4 * (2 * C50397 + C49845 * C50400) +
                         C49845 * (3 * C50400 + C49845 * C50466);
    const double C49925 = C49846 * C49923;
    const double C1106 =
        (2 * C50015 * C49899 + C50015 * (C49899 + C49923 * C50033)) / C49723;
    const double C1567 = (C49845 * (C49899 + C49923 * C50033) +
                          (C50237 + C50002 * C50033) * ae) /
                         C49723;
    const double C49924 = C49846 * C49922;
    const double C50102 = C49845 * C49922;
    const double C50107 = C50015 * C49922;
    const double C1114 = (2 * C50015 * C49898 +
                          C50015 * (C49898 + C49922 * std::pow(C50015, 2))) /
                         C49727;
    const double C2453 =
        (3 * (C49898 + C49922 * C50033) +
         C50015 * (2 * C50015 * C49922 +
                   C50015 * (C49922 + (C49914 + ae * C49846 * C49915 +
                                       C49846 * (ae * C49915 +
                                                 C49846 * std::pow(C49848, 8) *
                                                     bs[8] * C49856)) *
                                          C50033))) /
        C49727;
    const double C3492 =
        (4 * (2 * C50015 * C49894 + C50015 * C50058) +
         C50015 * (3 * C50058 +
                   C50015 * (2 * C50015 * C49918 +
                             C50015 * (C49918 + (ae * C49915 +
                                                 C49846 * std::pow(C49848, 8) *
                                                     bs[8] * C49856) *
                                                    C50033)))) /
        C49727;
    const double C50116 = C50111 + C50114;
    const double C50137 = C49845 * C50133;
    const double C20569 =
        (5 * (3 * C50061 + C50015 * C50160) +
         C50015 * (4 * C50160 +
                   C50015 * (3 * C50158 +
                             C50015 * (2 * C50015 * C49914 +
                                       C50015 * (C49914 + std::pow(C49848, 8) *
                                                              bs[8] * C49856 *
                                                              C50033))))) /
        C49727;
    const double C50193 = C50188 + C50191;
    const double C50213 = C49845 * C50211;
    const double C50005 = C50003 + C49996;
    const double C50067 = C50015 * C50066;
    const double C4590 =
        (2 * (ae * C50049 + C49845 * C50058) +
         ae * (C50049 + C50066 * std::pow(C49845, 2)) +
         C49845 * (C50058 + ae * C49845 * C50066 +
                   C49845 * (ae * C50066 +
                             C49845 * (C49918 + (ae * C49915 +
                                                 C49846 * std::pow(C49848, 8) *
                                                     bs[8] * C49856) *
                                                    C50033)))) /
        C49727;
    const double C4582 =
        (2 * C49845 * C50049 + C49845 * (C50049 + C50066 * C50088)) / C49723;
    const double C50117 = C50063 + C50115;
    const double C50138 = C49845 * C50135;
    const double C50168 = C50015 * C50167;
    const double C21299 =
        (2 * (ae * C50075 + C49845 * C50160) + ae * (C50075 + C50167 * C50088) +
         C49845 * (C50160 + ae * C49845 * C50167 +
                   C49845 * (ae * C50167 +
                             C49845 * (2 * C50015 * C49914 +
                                       C50015 * (C49914 + std::pow(C49848, 8) *
                                                              bs[8] * C49856 *
                                                              C50033))))) /
        C49727;
    const double C21297 =
        (2 * C49845 * C50075 + C49845 * (C50075 + C50167 * C50088)) / C49723;
    const double C22967 =
        (3 * (C50061 + ae * C50173 + C49845 * C50177) +
         ae * (2 * C50173 + C49845 * C50178) +
         C49845 * (2 * C50177 + ae * C50178 +
                   C49845 * (C50158 + ae * C49845 * C50165 +
                             C49845 * (ae * C50165 +
                                       C49845 * (C49914 + std::pow(C49848, 8) *
                                                              bs[8] * C49856 *
                                                              C50033))))) /
        C49727;
    const double C22965 = (3 * (C50046 + C50073 * C50088) +
                           C49845 * (2 * C50173 + C49845 * C50178)) /
                          C49723;
    const double C50194 = C50186 + C50192;
    const double C50214 = C49845 * C50212;
    const double C3666 = C2693 * C2295;
    const double C25707 = C2693 * C49742;
    const double C14693 = C11701 + C11702;
    const double C14684 = C11702 + C11701;
    const double C19948 = C3503 * C19841;
    const double C20685 = C3676 * C19841;
    const double C32364 = C15908 + C15907;
    const double C20392 = C4184 * C19841;
    const double C31703 = C15044 + C15043;
    const double C168 = C50790 * C139;
    const double C345 = C50790 * C307;
    const double C645 = C50790 * C309;
    const double C20690 = C50790 * C3660;
    const double C22812 = C5180 * C3660;
    const double C32372 = C50854 * C3660;
    const double C37984 = C50854 * C3660;
    const double C48159 = C44259 * C3660;
    const double C21030 = C50790 * C4174;
    const double C31711 = C50854 * C4174;
    const double C37311 = C50854 * C4174;
    const double C20575 = C117 * C3490;
    const double C20689 = C117 * C3657;
    const double C22811 = C5183 * C3657;
    const double C32371 = C10729 * C3657;
    const double C37983 = C33356 * C3657;
    const double C48158 = C44262 * C3657;
    const double C21029 = C117 * C4171;
    const double C31710 = C10729 * C4171;
    const double C37310 = C33356 * C4171;
    const double C1851 =
        (2 * (C49845 * C49899 + C50237 * ae) +
         C49845 * (C49899 + C49845 * (C49845 * C49923 + C50004) +
                   C49845 * C50002 * ae) +
         (C50237 + C50002 * C50088) * ae) /
        C49723;
    const double C50241 = C50239 + C50240;
    const double C1220 =
        (C50015 * C49899 + C49845 * (C49845 * C50015 * C49923 + C50307 * ae) +
         C49845 * C50307 * ae) /
        C49723;
    const double C1215 = C50015 * C50237 + C50307 * C50088;
    const double C3656 =
        (2 * C50015 * C49881 + C50015 * C50360 +
         C49845 * (C49845 * (2 * C50015 * C49903 +
                             C50015 * (C49903 + C49846 * C49915 * C50033)) +
                   C50372 * ae) +
         C49845 * C50372 * ae) /
        C49723;
    const double C4170 =
        (C49845 * (3 * C50360 +
                   C50015 * (2 * C50015 * C49903 +
                             C50015 * (C49903 + C49846 * C49915 * C50033))) +
         (3 * C50345 + C50015 * C50372) * ae) /
        C49723;
    const double C3486 = 4 * (2 * C50313 + C50015 * C50345) +
                         C50015 * (3 * C50345 + C50015 * C50372);
    const double C3653 = 2 * C50313 + C50015 * C50345 + C50372 * C50088;
    const double C4167 = C49845 * (3 * C50345 + C50015 * C50372);
    const double C7432 = 4 * (2 * C50404 + C49845 * C50407) +
                         C49845 * (3 * C50407 + C49845 * C50452);
    const double C50484 = C50477 + C50483;
    const double C23880 = 4 * (2 * C50434 + C49845 * C50439) +
                          C49845 * (3 * C50439 + C49845 * C50512);
    const double C50533 = C50521 + C50531;
    const double C113 = (C50962 * C50653) / C50650 + (C50911 - C50946) / C50652;
    const double C114 =
        (C50963 * C50653) / C50650 + (2 * C50664 + C50962) / C50652;
    const double C115 = (C50653 * C50664) / C50667 + C50963 / C50652;
    const double C1096 =
        (C50964 * C50724) / C50650 + (C50919 - C50948) / C50652;
    const double C1097 =
        (C50965 * C50724) / C50650 + (2 * C50729 + C50964) / C50652;
    const double C1098 = (C50724 * C50729) / C50667 + C50965 / C50652;
    const double C1842 =
        (C50966 * C50752) / C50650 + (C50920 - C50951) / C50652;
    const double C1843 =
        (C50967 * C50752) / C50650 + (2 * C50757 + C50966) / C50652;
    const double C1844 = (C50752 * C50757) / C50667 + C50967 / C50652;
    const double C19837 =
        (C50968 * C50823) / C49723 + (C50932 - C50954) / C49728;
    const double C19838 =
        (C50969 * C50823) / C49723 + (2 * C50828 + C50968) / C49728;
    const double C19839 = (C50823 * C50828) / C49732 + C50969 / C49728;
    const double C49747 = C49746 * ae;
    const double C2294 = (-C49724 / C49723) / C49728 - (C49746 * be) / C49723;
    const double C44309 = C44282 + C44283;
    const double C44305 = C44274 + C44275;
    const double C44302 = C44268 + C44269;
    const double C44491 = C44470 + C44471;
    const double C44673 = C44652 + C44653;
    const double C44670 = C44646 + C44647;
    const double C45218 = C45208 + C45209;
    const double C47251 = C47236 + C47237;
    const double C47248 = C47230 + C47231;
    const double C47247 = C47228 + C47229;
    const double C47244 = C47222 + C47223;
    const double C47901 = C47892 + C47893;
    const double C47898 = C47886 + C47887;
    const double C48833 = C48826 + C48827;
    const double C48830 = C48820 + C48821;
    const double C49824 = C49822 * ae;
    const double C30822 = C30818 * C19841;
    const double C30823 = C30819 * C50630;
    const double C33406 = C33394 + C33395;
    const double C36365 = C33597 + C33596;
    const double C40972 = C33596 + C33597;
    const double C40971 = C33594 + C33595;
    const double C40968 = C33595 + C33594;
    const double C41830 = C34328 + C34329;
    const double C41829 = C34329 + C34328;
    const double C37303 = C36376 + C36377;
    const double C36385 = C36372 + C36373;
    const double C36384 = C36370 + C36371;
    const double C37976 = C37048 + C37049;
    const double C2845 = C349 * C2295;
    const double C8195 = C349 * C8031;
    const double C17343 = C349 * C17179;
    const double C24946 = C349 * C49742;
    const double C2485 = C356 * C2295;
    const double C8186 = C356 * C8031;
    const double C17334 = C356 * C17179;
    const double C20159 = C356 * C19841;
    const double C24640 = C356 * C49742;
    const double C10782 = C10773 + C10774;
    const double C33409 = C33400 + C33401;
    const double C11478 = C11157 + C11158;
    const double C34105 = C33784 + C33785;
    const double C3227 = C924 * C2295;
    const double C8848 = C924 * C8031;
    const double C17990 = C924 * C17179;
    const double C25302 = C924 * C49742;
    const double C11318 = C10963 + C10964;
    const double C14229 = C10964 + C10963;
    const double C33945 = C33590 + C33591;
    const double C41374 = C33591 + C33590;
    const double C170 = C50790 * C148;
    const double C325 = C50790 * C313;
    const double C11324 = C50933 * C313;
    const double C33951 = C33353 * C313;
    const double C343 = C50790 * C319;
    const double C10958 = C50933 * C319;
    const double C33585 = C33353 * C319;
    const double C502 = C50790 * C490;
    const double C5218 = C5179 * C490;
    const double C10748 = C50854 * C490;
    const double C11484 = C50933 * C490;
    const double C33375 = C50854 * C490;
    const double C34111 = C33353 * C490;
    const double C44297 = C50971 * C490;
    const double C30821 = C13796 * C19841;
    const double C7437 =
        (4 * (2 * C50399 + C49845 * C50467 + C50400 * ae) +
         C49845 *
             (3 * C50467 +
              C49845 * (2 * C50459 +
                        C49845 * (C49875 + C49845 * (C49845 * C49891 + C49970) +
                                  C49845 * C49968 * ae) +
                        C50461 * ae) +
              C50466 * ae) +
         (3 * C50400 + C49845 * C50466) * ae) /
        C49723;
    const double C2482 = C350 * C50635;
    const double C2844 = C350 * C2289;
    const double C8194 = C350 * C50961;
    const double C8184 = C350 * C8026;
    const double C8502 = C350 * C50960;
    const double C17342 = C350 * C17173;
    const double C17332 = C350 * C17174;
    const double C17644 = C350 * C17172;
    const double C20158 = C350 * C50630;
    const double C24637 = C350 * C50635;
    const double C24945 = C350 * C50904;
    const double C2484 = C355 * C2289;
    const double C2466 = C355 * C50635;
    const double C8198 = C355 * C50960;
    const double C8187 = C355 * C50961;
    const double C17346 = C355 * C17172;
    const double C17335 = C355 * C17173;
    const double C19952 = C355 * C50630;
    const double C24639 = C355 * C50904;
    const double C24629 = C355 * C50635;
    const double C10780 = C10769 + C10770;
    const double C33407 = C33396 + C33397;
    const double C3226 = C923 * C2289;
    const double C3215 = C923 * C50635;
    const double C8854 = C923 * C50960;
    const double C8849 = C923 * C50961;
    const double C17996 = C923 * C17172;
    const double C17991 = C923 * C17173;
    const double C20398 = C923 * C50630;
    const double C25301 = C923 * C50904;
    const double C25296 = C923 * C50635;
    const double C13805 = C10965 + C10966;
    const double C13794 = C10966 + C10965;
    const double C40970 = C33592 + C33593;
    const double C40969 = C33593 + C33592;
    const double C496 =
        (C49864 + ae * C49867 + C49846 * C49878 + ae * C49845 * C49964 +
         C49845 * (ae * C49964 + C49845 * C49898)) /
        C49727;
    const double C906 =
        (ae * C50015 * C49964 + C49845 * C50015 * C49898) / C49727;
    const double C137 = (3 * (C49949 + C49846 * C49953 + C50229 * ae) +
                         C49846 * (2 * C49953 + C49846 * C49964 + C50231 * ae) +
                         (2 * C50229 + C49846 * C50231) * ae) /
                        C49723;
    const double C293 =
        (C50015 * (2 * C49953 + C49846 * C49964 + C50231 * ae)) / C49723;
    const double C306 =
        (C49949 + C49846 * C49953 + C50229 * ae + C49964 * C50033) / C49723;
    const double C470 =
        (C49845 * (2 * C49953 + C49846 * C49964 + C50231 * ae)) / C49723;
    const double C483 =
        (C49949 + C49846 * C49953 + C50229 * ae + C49964 * C50088) / C49723;
    const double C899 = (C49845 * C50015 * C49964) / C49723;
    const double C2694 = C2685 + C2686;
    const double C5409 = C5385 + C5386;
    const double C6157 = C6149 + C6150;
    const double C11704 = C11691 + C11692;
    const double C14033 = C14027 + C14028;
    const double C34331 = C34318 + C34319;
    const double C41178 = C41172 + C41173;
    const double C44488 = C44464 + C44465;
    const double C2513 = C2495 * C2289;
    const double C2508 = C2495 * C50635;
    const double C9106 = C2495 * C50961;
    const double C18248 = C2495 * C17173;
    const double C19954 = C2495 * C50630;
    const double C24643 = C2495 * C50904;
    const double C24630 = C2495 * C50635;
    const double C3230 = C2691 * C2289;
    const double C3209 = C2691 * C50635;
    const double C9750 = C2691 * C50961;
    const double C18892 = C2691 * C17173;
    const double C20400 = C2691 * C50630;
    const double C25305 = C2691 * C50904;
    const double C25292 = C2691 * C50635;
    const double C13808 = C10971 + C10972;
    const double C13795 = C10972 + C10971;
    const double C36364 = C33599 + C33598;
    const double C40973 = C33598 + C33599;
    const double C3507 = C3504 * C2289;
    const double C19947 = C3504 * C50630;
    const double C25554 = C3504 * C50904;
    const double C3681 = C3677 * C2289;
    const double C20686 = C3677 * C50630;
    const double C25710 = C3677 * C50904;
    const double C32363 = C15910 + C15909;
    const double C37975 = C37046 + C37047;
    const double C4188 = C4185 * C2289;
    const double C20391 = C4185 * C50630;
    const double C26201 = C4185 * C50904;
    const double C31702 = C15046 + C15045;
    const double C37302 = C36374 + C36375;
    const double C22986 = C22979 + C22980;
    const double C48329 = C48322 + C48323;
    const double C5939 = C5929 + C5930;
    const double C11168 = C11149 + C11150;
    const double C33795 = C33776 + C33777;
    const double C45006 = C44996 + C44997;
    const double C522 = C50790 * C484;
    const double C5214 = C5180 * C484;
    const double C11482 = C50854 * C484;
    const double C34109 = C50854 * C484;
    const double C44293 = C44259 * C484;
    const double C755 = C50790 * C486;
    const double C10758 = C50854 * C486;
    const double C33385 = C50854 * C486;
    const double C919 = C50790 * C900;
    const double C11322 = C50854 * C900;
    const double C33949 = C50854 * C900;
    const double C167 = C117 * C127;
    const double C344 = C117 * C290;
    const double C644 = C117 * C291;
    const double C521 = C117 * C467;
    const double C5213 = C5183 * C467;
    const double C11481 = C10729 * C467;
    const double C34108 = C33356 * C467;
    const double C44292 = C44262 * C467;
    const double C754 = C117 * C468;
    const double C10757 = C10729 * C468;
    const double C33384 = C33356 * C468;
    const double C918 = C117 * C892;
    const double C11321 = C10729 * C892;
    const double C33948 = C33356 * C892;
    const double C5775 = C5765 + C5766;
    const double C8353 = C8349 + C8350;
    const double C11706 = C11695 + C11696;
    const double C34333 = C34322 + C34323;
    const double C44842 = C44832 + C44833;
    const double C2514 = C2501 * C2295;
    const double C9107 = C2501 * C8031;
    const double C18249 = C2501 * C17179;
    const double C20161 = C2501 * C19841;
    const double C24644 = C2501 * C49742;
    const double C3231 = C3001 * C2295;
    const double C9751 = C3001 * C8031;
    const double C18893 = C3001 * C17179;
    const double C25306 = C3001 * C49742;
    const double C50453 = C50451 + C50446;
    const double C2499 = C2475 + C2476;
    const double C2695 = C2687 + C2688;
    const double C5417 = C5401 + C5402;
    const double C14708 = C14697 + C14698;
    const double C37055 = C37040 + C37041;
    const double C44496 = C44480 + C44481;
    const double C3237 = C3221 + C3222;
    const double C13826 = C13811 + C13812;
    const double C36379 = C36358 + C36359;
    const double C5611 = C5595 + C5596;
    const double C44678 = C44662 + C44663;
    const double C49981 = C49846 * C49980;
    const double C49986 = 3 * C49980;
    const double C50027 = C50015 * C49980;
    const double C50101 = ae * C49980;
    const double C50100 = C49845 * C49980;
    const double C1575 = (ae * (C49964 + C49980 * C50033) +
                          C49845 * (C49898 + C49922 * C50033)) /
                         C49727;
    const double C1859 = (2 * (ae * C49964 + C49845 * C49898) +
                          ae * (C49964 + C49980 * std::pow(C49845, 2)) +
                          C49845 * (C49898 + ae * C49845 * C49980 +
                                    C49845 * (ae * C49980 + C49845 * C49922))) /
                         C49727;
    const double C1107 =
        (2 * C50015 * C49964 + C50015 * (C49964 + C49980 * C50033)) / C49723;
    const double C1568 = (C49845 * (C49964 + C49980 * C50033)) / C49723;
    const double C1852 =
        (2 * C49845 * C49964 + C49845 * (C49964 + C49980 * C50088)) / C49723;
    const double C2690 = C50790 * C2676;
    const double C5408 = C5180 * C2676;
    const double C14702 = C50854 * C2676;
    const double C37045 = C50854 * C2676;
    const double C44487 = C44259 * C2676;
    const double C3224 = C50790 * C3206;
    const double C13816 = C50854 * C3206;
    const double C36363 = C50854 * C3206;
    const double C2477 = C117 * C2448;
    const double C2689 = C117 * C2672;
    const double C5407 = C5183 * C2672;
    const double C14701 = C10729 * C2672;
    const double C37044 = C33356 * C2672;
    const double C44486 = C44262 * C2672;
    const double C3223 = C117 * C3202;
    const double C13815 = C10729 * C3202;
    const double C36362 = C33356 * C3202;
    const double C6158 = C6151 + C6152;
    const double C14034 = C14029 + C14030;
    const double C41179 = C41174 + C41175;
    const double C45221 = C45214 + C45215;
    const double C5602 = C5180 * C5576;
    const double C44669 = C44259 * C5576;
    const double C5601 = C5183 * C5572;
    const double C44668 = C44262 * C5572;
    const double C50532 = C49845 * C50530;
    const double C20688 = C50790 * C3658;
    const double C22806 = C5180 * C3658;
    const double C32368 = C50854 * C3658;
    const double C37980 = C50854 * C3658;
    const double C48153 = C44259 * C3658;
    const double C21028 = C50790 * C4172;
    const double C31707 = C50854 * C4172;
    const double C37307 = C50854 * C4172;
    const double C20573 = C117 * C3487;
    const double C20687 = C117 * C3654;
    const double C22805 = C5183 * C3654;
    const double C32367 = C10729 * C3654;
    const double C37979 = C33356 * C3654;
    const double C48152 = C44262 * C3654;
    const double C21027 = C117 * C4168;
    const double C31706 = C10729 * C4168;
    const double C37306 = C33356 * C4168;
    const double C22983 = C22973 + C22974;
    const double C48326 = C48316 + C48317;
    const double C50513 = C50511 + C50504;
    const double C49927 = C49907 + C49925;
    const double C49926 = C49908 + C49924;
    const double C2490 = C50790 * C1114;
    const double C50139 = C50136 + C50137;
    const double C50215 = C50203 + C50213;
    const double C50006 = C49846 * C50005;
    const double C50051 = C50005 * C50033;
    const double C50103 = C50005 * C50088;
    const double C50108 = C50015 * C50005;
    const double C50068 = C50065 + C50067;
    const double C6554 =
        (3 * (C50081 + ae * C50110 + C49845 * C50116) +
         ae * (2 * C50110 + C49845 * C50117) +
         C49845 * (2 * C50116 + ae * C50117 +
                   C49845 * (C50112 + ae * C49845 * C50113 +
                             C49845 * (ae * C50113 +
                                       C49845 * C50015 *
                                           (ae * C49915 +
                                            C49846 * std::pow(C49848, 8) *
                                                bs[8] * C49856))))) /
        C49727;
    const double C6550 = (3 * (C50029 + C50063 * C50088) +
                          C49845 * (2 * C50110 + C49845 * C50117)) /
                         C49723;
    const double C50140 = C50134 + C50138;
    const double C50169 = C50162 + C50168;
    const double C23883 =
        (4 * (2 * C50125 + ae * C50126 + C49845 * C50193) +
         ae * (3 * C50126 + C49845 * C50194) +
         C49845 * (3 * C50193 + ae * C50194 +
                   C49845 * (2 * C50189 + ae * C50190 +
                             C49845 * (C50182 + ae * C49845 * C50183 +
                                       C49845 * (ae * C50183 +
                                                 C49845 * C50015 *
                                                     std::pow(C49848, 8) *
                                                     bs[8] * C49856))))) /
        C49727;
    const double C23881 = (4 * (2 * C50119 + C49845 * C50126) +
                           C49845 * (3 * C50126 + C49845 * C50194)) /
                          C49723;
    const double C50216 = C50201 + C50214;
    const double C32374 = C32364 * C19841;
    const double C31713 = C31703 * C19841;
    const double C20578 = C20575 + C20576;
    const double C20692 = C20689 + C20690;
    const double C22818 = C22811 + C22812;
    const double C32378 = C32371 + C32372;
    const double C37990 = C37983 + C37984;
    const double C48165 = C48158 + C48159;
    const double C21032 = C21029 + C21030;
    const double C31717 = C31710 + C31711;
    const double C37317 = C37310 + C37311;
    const double C128 = 5 * (3 * C50231 + C49846 * C50237) +
                        C49846 * (4 * C50237 + C49846 * C50241);
    const double C292 = 3 * C50231 + C49846 * C50237 + C50241 * C50033;
    const double C469 = 3 * C50231 + C49846 * C50237 + C50241 * C50088;
    const double C639 = C50015 * (4 * C50237 + C49846 * C50241);
    const double C749 = C49845 * (4 * C50237 + C49846 * C50241);
    const double C893 = C49845 * C50015 * C50241;
    const double C20680 =
        (3 * C50364 + C50015 * C50474 +
         C49845 * (C49845 * (3 * C50472 +
                             C50015 * (2 * C50015 * C49891 +
                                       C50015 * (C49891 + C49915 * C50033))) +
                   C50484 * ae) +
         C49845 * C50484 * ae) /
        C49723;
    const double C21022 =
        (C49845 * (4 * C50474 +
                   C50015 * (3 * C50472 +
                             C50015 * (2 * C50015 * C49891 +
                                       C50015 * (C49891 + C49915 * C50033)))) +
         (4 * C50380 + C50015 * C50484) * ae) /
        C49723;
    const double C20566 = 5 * (3 * C50341 + C50015 * C50380) +
                          C50015 * (4 * C50380 + C50015 * C50484);
    const double C20678 = 3 * C50341 + C50015 * C50380 + C50484 * C50088;
    const double C21020 = C49845 * (4 * C50380 + C50015 * C50484);
    const double C40313 = 5 * (3 * C50400 + C49845 * C50466) +
                          C49845 * (4 * C50466 + C49845 * C50533);
    const double C49748 = C49747 / C49723;
    const double C2483 = C354 * C2294;
    const double C2479 = C353 * C2294;
    const double C2512 = C2496 * C2294;
    const double C2511 = C2498 * C2294;
    const double C2506 = C2493 * C2294;
    const double C2504 = C2491 * C2294;
    const double C2847 = C356 * C2294;
    const double C2843 = C351 * C2294;
    const double C3229 = C2692 * C2294;
    const double C3225 = C922 * C2294;
    const double C3242 = C3236 * C2294;
    const double C3240 = C3234 * C2294;
    const double C3506 = C3503 * C2294;
    const double C3680 = C3676 * C2294;
    const double C3678 = C3674 * C2294;
    const double C4187 = C4184 * C2294;
    const double C49826 = C49824 / C49723;
    const double C30825 = C30822 + C30823;
    const double C36383 = C36365 * C19841;
    const double C37313 = C37303 * C19841;
    const double C36388 = C36385 * C50630;
    const double C36387 = C36384 * C19841;
    const double C37986 = C37976 * C19841;
    const double C19960 = C19952 + C19951;
    const double C520 = C50790 * C496;
    const double C5198 = C5180 * C496;
    const double C5934 = C5179 * C496;
    const double C11152 = C50933 * C496;
    const double C11124 = C50854 * C496;
    const double C33779 = C33353 * C496;
    const double C33751 = C50854 * C496;
    const double C44277 = C44259 * C496;
    const double C45001 = C50971 * C496;
    const double C917 = C50790 * C906;
    const double C5770 = C5179 * C906;
    const double C10930 = C50854 * C906;
    const double C11698 = C50933 * C906;
    const double C33557 = C50854 * C906;
    const double C34325 = C33353 * C906;
    const double C44837 = C50971 * C906;
    const double C163 = C117 * C137;
    const double C10759 = C10728 * C137;
    const double C33386 = C33355 * C137;
    const double C324 = C117 * C293;
    const double C11323 = C10728 * C293;
    const double C33950 = C33355 * C293;
    const double C342 = C117 * C306;
    const double C10957 = C10728 * C306;
    const double C33584 = C33355 * C306;
    const double C501 = C117 * C470;
    const double C5217 = C5182 * C470;
    const double C10747 = C10729 * C470;
    const double C11483 = C10728 * C470;
    const double C33374 = C33356 * C470;
    const double C34110 = C33355 * C470;
    const double C519 = C117 * C483;
    const double C5197 = C5183 * C483;
    const double C5933 = C5182 * C483;
    const double C11151 = C10728 * C483;
    const double C11123 = C10729 * C483;
    const double C33778 = C33355 * C483;
    const double C33750 = C33356 * C483;
    const double C44276 = C44262 * C483;
    const double C916 = C117 * C899;
    const double C5769 = C5182 * C899;
    const double C10929 = C10729 * C899;
    const double C11697 = C10728 * C899;
    const double C33556 = C33356 * C899;
    const double C34324 = C33355 * C899;
    const double C3667 = C2694 * C50635;
    const double C9258 = C2694 * C50961;
    const double C18400 = C2694 * C17173;
    const double C25708 = C2694 * C50635;
    const double C14694 = C11703 + C11704;
    const double C14683 = C11704 + C11703;
    const double C41831 = C34330 + C34331;
    const double C41828 = C34331 + C34330;
    const double C19959 = C19954 + C19953;
    const double C30820 = C13795 * C50630;
    const double C36382 = C36364 * C50630;
    const double C20571 = C19947 + C19948;
    const double C32373 = C32363 * C50630;
    const double C37985 = C37975 * C50630;
    const double C21025 = C20391 + C20392;
    const double C31712 = C31702 * C50630;
    const double C37312 = C37302 * C50630;
    const double C179 = C167 + C168;
    const double C358 = C344 + C345;
    const double C648 = C644 + C645;
    const double C535 = C521 + C522;
    const double C5235 = C5213 + C5214;
    const double C11488 = C11481 + C11482;
    const double C34115 = C34108 + C34109;
    const double C44314 = C44292 + C44293;
    const double C758 = C754 + C755;
    const double C10776 = C10757 + C10758;
    const double C33403 = C33384 + C33385;
    const double C926 = C918 + C919;
    const double C11328 = C11321 + C11322;
    const double C33955 = C33948 + C33949;
    const double C9259 = C8353 * C8031;
    const double C18401 = C8353 * C17179;
    const double C7435 =
        (4 * (2 * C50406 + C49845 * C50453 + C50407 * ae) +
         C49845 *
             (3 * C50453 +
              C49845 * (2 * C50445 +
                        C49845 * (C49903 +
                                  C49845 * (C49845 * C49846 * C49915 + C49996) +
                                  C49845 * C49993 * ae) +
                        C50447 * ae) +
              C50452 * ae) +
         (3 * C50407 + C49845 * C50452) * ae) /
        C49723;
    const double C3500 = C2499 * C2295;
    const double C19955 = C2499 * C19841;
    const double C25555 = C2499 * C49742;
    const double C3672 = C2695 * C2295;
    const double C25711 = C2695 * C49742;
    const double C4181 = C3237 * C2295;
    const double C20401 = C3237 * C19841;
    const double C26202 = C3237 * C49742;
    const double C49982 = C49966 + C49981;
    const double C1228 = (C50015 * C49898 + ae * C49845 * C50027 +
                          C49845 * (ae * C50027 + C49845 * C50015 * C49922)) /
                         C49727;
    const double C1221 = (C50015 * C49964 + C50027 * C50088) / C49723;
    const double C50104 = C50101 + C50102;
    const double C3000 = C50790 * C1575;
    const double C10960 = C50854 * C1575;
    const double C33587 = C50854 * C1575;
    const double C5936 = C5180 * C1859;
    const double C11154 = C50854 * C1859;
    const double C33781 = C50854 * C1859;
    const double C45003 = C44259 * C1859;
    const double C2489 = C117 * C1107;
    const double C2999 = C117 * C1568;
    const double C10959 = C10729 * C1568;
    const double C33586 = C33356 * C1568;
    const double C5935 = C5183 * C1852;
    const double C11153 = C10729 * C1852;
    const double C33780 = C33356 * C1852;
    const double C45002 = C44262 * C1852;
    const double C2500 = C2477 + C2478;
    const double C2696 = C2689 + C2690;
    const double C5420 = C5407 + C5408;
    const double C14710 = C14701 + C14702;
    const double C37057 = C37044 + C37045;
    const double C44499 = C44486 + C44487;
    const double C3238 = C3223 + C3224;
    const double C13828 = C13815 + C13816;
    const double C36381 = C36362 + C36363;
    const double C5614 = C5601 + C5602;
    const double C44681 = C44668 + C44669;
    const double C50534 = C50516 + C50532;
    const double C20577 = C20573 + C20574;
    const double C20691 = C20687 + C20688;
    const double C22815 = C22805 + C22806;
    const double C32376 = C32367 + C32368;
    const double C37988 = C37979 + C37980;
    const double C48162 = C48152 + C48153;
    const double C21031 = C21027 + C21028;
    const double C31715 = C31706 + C31707;
    const double C37315 = C37306 + C37307;
    const double C23882 =
        (4 * (2 * C50438 + C49845 * C50513 + C50439 * ae) +
         C49845 * (3 * C50513 +
                   C49845 * (2 * C50507 +
                             C49845 * (C50499 +
                                       C49845 * (C49845 * C50015 * C49915 +
                                                 C50502 * ae) +
                                       C49845 * C50502 * ae) +
                             C50508 * ae) +
                   C50512 * ae) +
         (3 * C50439 + C49845 * C50512) * ae) /
        C49723;
    const double C142 = (5 * (3 * C49879 + C49846 * C49899) +
                         C49846 * (4 * C49899 + C49846 * C49927)) /
                        C49723;
    const double C312 =
        (3 * C49879 + C49846 * C49899 + C49927 * C50033) / C49723;
    const double C489 =
        (3 * C49879 + C49846 * C49899 +
         C49845 * (C49845 * C49927 + C50241 * ae) + C49845 * C50241 * ae) /
        C49723;
    const double C641 = (C50015 * (4 * C49899 + C49846 * C49927)) / C49723;
    const double C751 = (C49845 * (4 * C49899 + C49846 * C49927) +
                         (4 * C50237 + C49846 * C50241) * ae) /
                        C49723;
    const double C903 =
        (C49845 * C50015 * C49927 + C50015 * C50241 * ae) / C49723;
    const double C149 =
        (5 * (3 * C49898 + ae * C49899 + C49846 * C49926) +
         ae * (4 * C49899 + C49846 * C49927) +
         C49846 *
             (4 * C49926 + ae * C49927 +
              C49846 *
                  (3 * C49922 + ae * C49923 +
                   C49846 * (2 * C49918 + ae * C49919 +
                             C49846 * (C49914 + ae * C49846 * C49915 +
                                       C49846 * (ae * C49915 +
                                                 C49846 * std::pow(C49848, 8) *
                                                     bs[8] * C49856)))))) /
        C49727;
    const double C320 = (2 * C49878 + ae * C49879 + C49846 * C49898 +
                         C49926 * std::pow(yP - yQ, 2)) /
                        C49727;
    const double C321 =
        ((yP - yQ) * (3 * C49898 + ae * C49899 + C49846 * C49926)) / C49727;
    const double C322 =
        (3 * C49898 + ae * C49899 + C49846 * C49926 +
         (3 * C49922 + ae * C49923 +
          C49846 *
              (2 * C49918 + ae * C49919 +
               C49846 * (C49914 + ae * C49846 * C49915 +
                         C49846 * (ae * C49915 + C49846 * std::pow(C49848, 8) *
                                                     bs[8] * C49856)))) *
             std::pow(yP - yQ, 2)) /
        C49727;
    const double C642 =
        ((yP - yQ) *
         (4 * C49926 + ae * C49927 +
          C49846 * (3 * C49922 + ae * C49923 +
                    C49846 * (2 * C49918 + ae * C49919 +
                              C49846 * (C49914 + ae * C49846 * C49915 +
                                        C49846 * (ae * C49915 +
                                                  C49846 * std::pow(C49848, 8) *
                                                      bs[8] * C49856)))))) /
        C49727;
    const double C1113 =
        (2 * C50015 * C49926 +
         C50015 * (C49926 + (2 * C49918 + ae * C49919 +
                             C49846 * (C49914 + ae * C49846 * C49915 +
                                       C49846 * (ae * C49915 +
                                                 C49846 * std::pow(C49848, 8) *
                                                     bs[8] * C49856))) *
                                std::pow(C50015, 2))) /
        C49727;
    const double C50007 = C49987 + C50006;
    const double C50052 = C49980 + C50051;
    const double C50105 = C49980 + C50103;
    const double C6139 =
        (2 * (ae * C50027 + C49845 * C50107) + ae * (C50027 + C50108 * C50088) +
         C49845 * (C50107 + ae * C49845 * C50108 +
                   C49845 * (ae * C50108 +
                             C49845 * C50015 *
                                 (C49914 + ae * C49846 * C49915 +
                                  C49846 * (ae * C49915 +
                                            C49846 * std::pow(C49848, 8) *
                                                bs[8] * C49856))))) /
        C49727;
    const double C6137 =
        (2 * C49845 * C50027 + C49845 * (C50027 + C50108 * C50088)) / C49723;
    const double C3659 =
        (2 * C50015 * C49894 + C50015 * C50058 + ae * C49845 * C50068 +
         C49845 * (ae * C50068 +
                   C49845 * (2 * C50015 * C49918 +
                             C50015 * (C49918 + (ae * C49915 +
                                                 C49846 * std::pow(C49848, 8) *
                                                     bs[8] * C49856) *
                                                    C50033)))) /
        C49727;
    const double C4173 =
        (ae * (3 * C50049 + C50015 * C50068) +
         C49845 * (3 * C50058 +
                   C50015 * (2 * C50015 * C49918 +
                             C50015 * (C49918 + (ae * C49915 +
                                                 C49846 * std::pow(C49848, 8) *
                                                     bs[8] * C49856) *
                                                    C50033)))) /
        C49727;
    const double C3488 = (4 * (2 * C50029 + C50015 * C50049) +
                          C50015 * (3 * C50049 + C50015 * C50068)) /
                         C49723;
    const double C3655 =
        (2 * C50029 + C50015 * C50049 + C50068 * C50088) / C49723;
    const double C4169 = (C49845 * (3 * C50049 + C50015 * C50068)) / C49723;
    const double C7438 =
        (4 * (2 * C50097 + ae * C50098 + C49845 * C50139) +
         ae * (3 * C50098 + C49845 * C50140) +
         C49845 *
             (3 * C50139 + ae * C50140 +
              C49845 *
                  (2 * C50133 + ae * C50135 +
                   C49845 * (C49918 + ae * C49845 * C49998 +
                             C49845 * (ae * C49998 +
                                       C49845 * (ae * C49915 +
                                                 C49846 * std::pow(C49848, 8) *
                                                     bs[8] * C49856)))))) /
        C49727;
    const double C7434 = (4 * (2 * C50093 + C49845 * C50098) +
                          C49845 * (3 * C50098 + C49845 * C50140)) /
                         C49723;
    const double C20681 =
        (3 * C50061 + C50015 * C50160 + ae * C49845 * C50169 +
         C49845 * (ae * C50169 +
                   C49845 * (3 * C50158 +
                             C50015 * (2 * C50015 * C49914 +
                                       C50015 * (C49914 + std::pow(C49848, 8) *
                                                              bs[8] * C49856 *
                                                              C50033))))) /
        C49727;
    const double C21023 =
        (ae * (4 * C50075 + C50015 * C50169) +
         C49845 * (4 * C50160 +
                   C50015 * (3 * C50158 +
                             C50015 * (2 * C50015 * C49914 +
                                       C50015 * (C49914 + std::pow(C49848, 8) *
                                                              bs[8] * C49856 *
                                                              C50033))))) /
        C49727;
    const double C20567 = (5 * (3 * C50046 + C50015 * C50075) +
                           C50015 * (4 * C50075 + C50015 * C50169)) /
                          C49723;
    const double C20679 =
        (3 * C50046 + C50015 * C50075 + C50169 * C50088) / C49723;
    const double C21021 = (C49845 * (4 * C50075 + C50015 * C50169)) / C49723;
    const double C40316 =
        (5 * (3 * C50153 + ae * C50154 + C49845 * C50215) +
         ae * (4 * C50154 + C49845 * C50216) +
         C49845 *
             (4 * C50215 + ae * C50216 +
              C49845 *
                  (3 * C50211 + ae * C50212 +
                   C49845 * (2 * C50205 + ae * C50207 +
                             C49845 * (C49914 + ae * C49845 * C49991 +
                                       C49845 * (ae * C49991 +
                                                 C49845 * std::pow(C49848, 8) *
                                                     bs[8] * C49856)))))) /
        C49727;
    const double C40314 = (5 * (3 * C50091 + C49845 * C50154) +
                           C49845 * (4 * C50154 + C49845 * C50216)) /
                          C49723;
    const double C20580 = C20578 * C50630;
    const double C20694 = C20692 * C50630;
    const double C21034 = C21032 * C50630;
    const double C49749 = C49748 - C49738;
    const double C2503 = C2484 + C2483;
    const double C3495 = C2510 + C2511;
    const double C2517 = C2506 + C2507;
    const double C4176 = C3239 + C3240;
    const double C49827 = C49826 - C49811;
    const double C36389 = C36387 + C36388;
    const double C177 = C163 + C164;
    const double C10777 = C10759 + C10760;
    const double C33404 = C33386 + C33387;
    const double C348 = C324 + C325;
    const double C11329 = C11323 + C11324;
    const double C33956 = C33950 + C33951;
    const double C357 = C342 + C343;
    const double C10975 = C10957 + C10958;
    const double C33602 = C33584 + C33585;
    const double C525 = C501 + C502;
    const double C5237 = C5217 + C5218;
    const double C10771 = C10747 + C10748;
    const double C11489 = C11483 + C11484;
    const double C33398 = C33374 + C33375;
    const double C34116 = C34110 + C34111;
    const double C534 = C519 + C520;
    const double C5227 = C5197 + C5198;
    const double C5941 = C5933 + C5934;
    const double C11169 = C11151 + C11152;
    const double C11155 = C11123 + C11124;
    const double C33796 = C33778 + C33779;
    const double C33782 = C33750 + C33751;
    const double C44306 = C44276 + C44277;
    const double C925 = C916 + C917;
    const double C5777 = C5769 + C5770;
    const double C10961 = C10929 + C10930;
    const double C11707 = C11697 + C11698;
    const double C33588 = C33556 + C33557;
    const double C34334 = C34324 + C34325;
    const double C30824 = C30820 + C30821;
    const double C36386 = C36382 + C36383;
    const double C32379 = C32373 + C32374;
    const double C37991 = C37985 + C37986;
    const double C31718 = C31712 + C31713;
    const double C37318 = C37312 + C37313;
    const double C2849 = C358 * C2295;
    const double C8201 = C358 * C8031;
    const double C17349 = C358 * C17179;
    const double C24950 = C358 * C49742;
    const double C8505 = C648 * C8031;
    const double C17647 = C648 * C17179;
    const double C8857 = C926 * C8031;
    const double C17999 = C926 * C17179;
    const double C49983 = C49982 + C49977;
    const double C5772 = C5180 * C1228;
    const double C8352 = C50790 * C1228;
    const double C11700 = C50854 * C1228;
    const double C34327 = C50854 * C1228;
    const double C44839 = C44259 * C1228;
    const double C5771 = C5183 * C1221;
    const double C8351 = C117 * C1221;
    const double C11699 = C10729 * C1221;
    const double C34326 = C33356 * C1221;
    const double C44838 = C44262 * C1221;
    const double C2502 = C2489 + C2490;
    const double C3002 = C2999 + C3000;
    const double C10976 = C10959 + C10960;
    const double C33603 = C33586 + C33587;
    const double C5942 = C5935 + C5936;
    const double C11170 = C11153 + C11154;
    const double C33797 = C33780 + C33781;
    const double C45009 = C45002 + C45003;
    const double C3501 = C2500 * C50635;
    const double C19956 = C2500 * C50630;
    const double C25556 = C2500 * C50635;
    const double C3673 = C2696 * C50635;
    const double C25712 = C2696 * C50635;
    const double C4182 = C3238 * C50635;
    const double C20402 = C3238 * C50630;
    const double C26203 = C3238 * C50635;
    const double C50535 = C50534 + C50519;
    const double C20579 = C20577 * C19841;
    const double C20693 = C20691 * C19841;
    const double C21033 = C21031 * C19841;
    const double C347 = C50790 * C320;
    const double C647 = C50790 * C321;
    const double C50008 = C50007 + C49999;
    const double C2677 =
        (C49898 + C49922 * C50033 + ae * C49845 * C50052 +
         C49845 * (ae * C50052 +
                   C49845 * (C49922 + (C49914 + ae * C49846 * C49915 +
                                       C49846 * (ae * C49915 +
                                                 C49846 * std::pow(C49848, 8) *
                                                     bs[8] * C49856)) *
                                          C50033))) /
        C49727;
    const double C3207 =
        (ae * (2 * C50027 + C50015 * C50052) +
         C49845 * (2 * C50015 * C49922 +
                   C50015 * (C49922 + (C49914 + ae * C49846 * C49915 +
                                       C49846 * (ae * C49915 +
                                                 C49846 * std::pow(C49848, 8) *
                                                     bs[8] * C49856)) *
                                          C50033))) /
        C49727;
    const double C2449 = (3 * (C49964 + C49980 * C50033) +
                          C50015 * (2 * C50027 + C50015 * C50052)) /
                         C49723;
    const double C2673 = (C49964 + C49980 * C50033 + C50052 * C50088) / C49723;
    const double C3203 = (C49845 * (2 * C50027 + C50015 * C50052)) / C49723;
    const double C5577 =
        (3 * (C49898 + ae * C50100 + C49845 * C50104) +
         ae * (2 * C50100 + C49845 * C50105) +
         C49845 *
             (2 * C50104 + ae * C50105 +
              C49845 *
                  (C49922 + ae * C49845 * C50005 +
                   C49845 * (ae * C50005 +
                             C49845 * (C49914 + ae * C49846 * C49915 +
                                       C49846 * (ae * C49915 +
                                                 C49846 * std::pow(C49848, 8) *
                                                     bs[8] * C49856)))))) /
        C49727;
    const double C5573 = (3 * (C49964 + C49980 * C50088) +
                          C49845 * (2 * C50100 + C49845 * C50105)) /
                         C49723;
    const double C24642 = C2496 * C49749;
    const double C24638 = C354 * C49749;
    const double C24634 = C353 * C49749;
    const double C24633 = C2498 * C49749;
    const double C24626 = C2493 * C49749;
    const double C24622 = C2491 * C49749;
    const double C24948 = C356 * C49749;
    const double C24944 = C351 * C49749;
    const double C25304 = C2692 * C49749;
    const double C25300 = C922 * C49749;
    const double C25299 = C3236 * C49749;
    const double C25295 = C3234 * C49749;
    const double C25553 = C3503 * C49749;
    const double C25709 = C3676 * C49749;
    const double C25705 = C3674 * C49749;
    const double C26200 = C4184 * C49749;
    const double C118 =
        ((((0 - (C49721 * C49722) / C49723) * ae) / C49723 - (0 * be) / C49732 +
          C49724 / C49723) /
             C49728 -
         ((C49721 * C49745 + 0) * be) / C49723) /
            C49728 +
        ((C49721 * (C49745 / C49728 -
                    ((C49721 * C49749 + C50904) * be) / C49723 + C49742) +
          C50960) *
         ae) /
            C49723 +
        C49749 / C49728 - ((C49721 * C49742 + C50635) * be) / C49723;
    const double C119 =
        (C49745 / C49728 - ((C49721 * C49749 + C50904) * be) / C49723 +
         C49742) /
            C49728 +
        ((C49721 *
              (C49749 / C49728 - ((C49721 * C49742 + C50635) * be) / C49723) +
          C50961) *
         ae) /
            C49723 +
        2 * (C49742 / C49728 - (0 * be) / C49723);
    const double C120 =
        (C49749 / C49728 - ((C49721 * C49742 + C50635) * be) / C49723) /
            C49728 +
        ((C49721 * (C49742 / C49728 - (0 * be) / C49723) + C8026) * ae) /
            C49723;
    const double C8029 =
        C49745 / C49728 - ((C49721 * C49749 + C50904) * be) / C49723 + C49742;
    const double C8030 =
        C49749 / C49728 - ((C49721 * C49742 + C50635) * be) / C49723;
    const double C17177 =
        C49745 / C49728 + ((C49721 * C49749 + C50904) * ae) / C49723 + C49742;
    const double C17178 =
        C49749 / C49728 + ((C49721 * C49742 + C50635) * ae) / C49723;
    const double C2516 = C2485 + C2503;
    const double C3502 = C2509 + C3495;
    const double C2519 = C2517 + C2465;
    const double C4183 = C3210 + C4176;
    const double C38937 =
        ((((0 - (C49768 * C49808) / C49723) * ae) / C49723 - (0 * be) / C49732 +
          C49769 / C49723) /
             C49728 -
         ((C49768 * C49825 + 0) * be) / C49723) /
            C49728 +
        ((C49768 * (C49825 / C49728 -
                    ((C49768 * C49827 + C50933) * be) / C49723 + C49820) +
          C50970) *
         ae) /
            C49723 +
        C49827 / C49728 - ((C49768 * C49820 + C50854) * be) / C49723;
    const double C38938 =
        (C49825 / C49728 - ((C49768 * C49827 + C50933) * be) / C49723 +
         C49820) /
            C49728 +
        ((C49768 *
              (C49827 / C49728 - ((C49768 * C49820 + C50854) * be) / C49723) +
          C50971) *
         ae) /
            C49723 +
        2 * (C49820 / C49728 - (0 * be) / C49723);
    const double C38939 =
        (C49827 / C49728 - ((C49768 * C49820 + C50854) * be) / C49723) /
            C49728 +
        ((C49768 * (C49820 / C49728 - (0 * be) / C49723) + C44259) * ae) /
            C49723;
    const double C44260 =
        C49825 / C49728 - ((C49768 * C49827 + C50933) * be) / C49723 + C49820;
    const double C44261 =
        C49827 / C49728 - ((C49768 * C49820 + C50854) * be) / C49723;
    const double C2846 = C348 * C50635;
    const double C8196 = C348 * C8026;
    const double C8504 = C348 * C50961;
    const double C17344 = C348 * C17174;
    const double C17646 = C348 * C17173;
    const double C24947 = C348 * C50635;
    const double C2486 = C357 * C50635;
    const double C2848 = C357 * C2289;
    const double C8200 = C357 * C50961;
    const double C8185 = C357 * C8026;
    const double C17348 = C357 * C17173;
    const double C17333 = C357 * C17174;
    const double C20160 = C357 * C50630;
    const double C24641 = C357 * C50635;
    const double C24949 = C357 * C50904;
    const double C10781 = C10771 + C10772;
    const double C33408 = C33398 + C33399;
    const double C11477 = C11155 + C11156;
    const double C34104 = C33782 + C33783;
    const double C3228 = C925 * C50635;
    const double C8856 = C925 * C50961;
    const double C8847 = C925 * C8026;
    const double C17998 = C925 * C17173;
    const double C17989 = C925 * C17174;
    const double C25303 = C925 * C50635;
    const double C11317 = C10961 + C10962;
    const double C14230 = C10962 + C10961;
    const double C33944 = C33588 + C33589;
    const double C41375 = C33589 + C33588;
    const double C497 =
        (2 * C49878 + ae * C49879 + C49846 * C49898 + ae * C49845 * C49983 +
         C49845 * (ae * C49983 + C49845 * C49926)) /
        C49727;
    const double C498 =
        (ae * (3 * C49964 + C49846 * C49983 +
               (2 * C49957 + C49846 * C49975) * ae) +
         C49845 * (3 * C49898 + ae * C49899 + C49846 * C49926)) /
        C49727;
    const double C907 =
        (ae * C50015 * C49983 + C49845 * C50015 * C49926) / C49727;
    const double C140 = (4 * (2 * C49953 + C49846 * C49964 + C50231 * ae) +
                         C49846 * (3 * C49964 + C49846 * C49983 + C50237 * ae) +
                         (3 * C50231 + C49846 * C50237) * ae) /
                        C49723;
    const double C308 =
        (2 * C49953 + C49846 * C49964 + C50231 * ae + C49983 * C50033) / C49723;
    const double C310 =
        (C50015 * (3 * C49964 + C49846 * C49983 + C50237 * ae)) / C49723;
    const double C485 =
        (2 * C49953 + C49846 * C49964 + C50231 * ae + C49983 * C50088) / C49723;
    const double C487 =
        (C49845 * (3 * C49964 + C49846 * C49983 + C50237 * ae)) / C49723;
    const double C901 = (C49845 * C50015 * C49983) / C49723;
    const double C5778 = C5771 + C5772;
    const double C8354 = C8351 + C8352;
    const double C11708 = C11699 + C11700;
    const double C34335 = C34326 + C34327;
    const double C44845 = C44838 + C44839;
    const double C2515 = C2502 * C50635;
    const double C9108 = C2502 * C8026;
    const double C18250 = C2502 * C17174;
    const double C20162 = C2502 * C50630;
    const double C24645 = C2502 * C50635;
    const double C3232 = C3002 * C50635;
    const double C9752 = C3002 * C8026;
    const double C18894 = C3002 * C17174;
    const double C25307 = C3002 * C50635;
    const double C40315 =
        (5 * (3 * C50467 + C49845 * C50535 + C50466 * ae) +
         C49845 *
             (4 * C50535 +
              C49845 *
                  (3 * C50530 +
                   C49845 *
                       (2 * C50522 +
                        C49845 * (C49891 + C49845 * (C49845 * C49915 + C49992) +
                                  C49845 * C49989 * ae) +
                        C50524 * ae) +
                   C50529 * ae) +
              C50533 * ae) +
         (4 * C50466 + C49845 * C50533) * ae) /
        C49723;
    const double C50009 = C49846 * C50008;
    const double C50025 = C50015 * C50008;
    const double C1574 =
        (ae * (C49983 + C50008 * C50033) +
         C49845 * (C49926 + (2 * C49918 + ae * C49919 +
                             C49846 * (C49914 + ae * C49846 * C49915 +
                                       C49846 * (ae * C49915 +
                                                 C49846 * std::pow(C49848, 8) *
                                                     bs[8] * C49856))) *
                                C50033)) /
        C49727;
    const double C1858 =
        (2 * (ae * C49983 + C49845 * C49926) +
         ae * (C49983 + C50008 * std::pow(C49845, 2)) +
         C49845 *
             (C49926 + ae * C49845 * C50008 +
              C49845 *
                  (ae * C50008 +
                   C49845 * (2 * C49918 + ae * C49919 +
                             C49846 * (C49914 + ae * C49846 * C49915 +
                                       C49846 * (ae * C49915 +
                                                 C49846 * std::pow(C49848, 8) *
                                                     bs[8] * C49856)))))) /
        C49727;
    const double C1105 =
        (2 * C50015 * C49983 + C50015 * (C49983 + C50008 * C50033)) / C49723;
    const double C1566 = (C49845 * (C49983 + C50008 * C50033)) / C49723;
    const double C1850 =
        (2 * C49845 * C49983 + C49845 * (C49983 + C50008 * C50088)) / C49723;
    const double C24647 = C24639 + C24638;
    const double C25552 = C24632 + C24633;
    const double C24646 = C24626 + C24627;
    const double C26199 = C25294 + C25295;
    const double C8197 = C354 * C8029;
    const double C8191 = C353 * C8029;
    const double C8190 = C2493 * C8029;
    const double C8179 = C2491 * C8029;
    const double C8501 = C351 * C8029;
    const double C8853 = C922 * C8029;
    const double C8852 = C3236 * C8029;
    const double C9103 = C2498 * C8029;
    const double C9255 = C3674 * C8029;
    const double C9747 = C3234 * C8029;
    const double C8199 = C356 * C8030;
    const double C8193 = C351 * C8030;
    const double C8188 = C354 * C8030;
    const double C8181 = C353 * C8030;
    const double C8503 = C349 * C8030;
    const double C8855 = C924 * C8030;
    const double C8850 = C922 * C8030;
    const double C9105 = C2496 * C8030;
    const double C9257 = C2693 * C8030;
    const double C9749 = C2692 * C8030;
    const double C17345 = C354 * C17177;
    const double C17339 = C353 * C17177;
    const double C17338 = C2493 * C17177;
    const double C17327 = C2491 * C17177;
    const double C17643 = C351 * C17177;
    const double C17995 = C922 * C17177;
    const double C17994 = C3236 * C17177;
    const double C18245 = C2498 * C17177;
    const double C18397 = C3674 * C17177;
    const double C18889 = C3234 * C17177;
    const double C17347 = C356 * C17178;
    const double C17341 = C351 * C17178;
    const double C17336 = C354 * C17178;
    const double C17329 = C353 * C17178;
    const double C17645 = C349 * C17178;
    const double C17997 = C924 * C17178;
    const double C17992 = C922 * C17178;
    const double C18247 = C2496 * C17178;
    const double C18399 = C2693 * C17178;
    const double C18891 = C2692 * C17178;
    const double C3505 = C2508 + C3502;
    const double C2520 = C2519 + C2466;
    const double C4186 = C3209 + C4183;
    const double C44294 = C44260 * C136;
    const double C44288 = C44260 * C125;
    const double C44286 = C44260 * C124;
    const double C44280 = C44260 * C134;
    const double C44270 = C44260 * C132;
    const double C44264 = C44260 * C123;
    const double C44482 = C44260 * C304;
    const double C44476 = C44260 * C288;
    const double C44474 = C44260 * C285;
    const double C44468 = C44260 * C297;
    const double C44664 = C44260 * C481;
    const double C44658 = C44260 * C465;
    const double C44656 = C44260 * C462;
    const double C44650 = C44260 * C474;
    const double C44834 = C44260 * C295;
    const double C44828 = C44260 * C284;
    const double C44998 = C44260 * C472;
    const double C44992 = C44260 * C461;
    const double C45210 = C44260 * C897;
    const double C45204 = C44260 * C890;
    const double C47240 = C44260 * C287;
    const double C47234 = C44260 * C302;
    const double C47224 = C44260 * C299;
    const double C47218 = C44260 * C286;
    const double C47896 = C44260 * C889;
    const double C47890 = C44260 * C895;
    const double C48154 = C44260 * C1111;
    const double C48148 = C44260 * C1104;
    const double C48318 = C44260 * C1225;
    const double C48312 = C44260 * C1218;
    const double C48822 = C44260 * C1572;
    const double C48816 = C44260 * C1565;
    const double C44296 = C44261 * C470;
    const double C44290 = C44261 * C460;
    const double C44284 = C44261 * C461;
    const double C44278 = C44261 * C472;
    const double C44272 = C44261 * C474;
    const double C44266 = C44261 * C462;
    const double C44484 = C44261 * C1570;
    const double C44478 = C44261 * C1564;
    const double C44472 = C44261 * C890;
    const double C44466 = C44261 * C897;
    const double C44666 = C44261 * C1854;
    const double C44660 = C44261 * C1848;
    const double C44654 = C44261 * C465;
    const double C44648 = C44261 * C481;
    const double C44836 = C44261 * C899;
    const double C44830 = C44261 * C891;
    const double C45000 = C44261 * C483;
    const double C44994 = C44261 * C466;
    const double C45212 = C44261 * C1223;
    const double C45206 = C44261 * C1217;
    const double C47238 = C44261 * C1565;
    const double C47232 = C44261 * C1572;
    const double C47226 = C44261 * C895;
    const double C47220 = C44261 * C889;
    const double C47894 = C44261 * C1218;
    const double C47888 = C44261 * C1225;
    const double C48156 = C44261 * C3200;
    const double C48150 = C44261 * C3196;
    const double C48320 = C44261 * C4588;
    const double C48314 = C44261 * C4581;
    const double C48824 = C44261 * C2670;
    const double C48818 = C44261 * C2666;
    const double C2518 = C2486 + C2516;
    const double C524 = C50790 * C497;
    const double C5220 = C5180 * C497;
    const double C11486 = C50854 * C497;
    const double C34113 = C50854 * C497;
    const double C44299 = C44259 * C497;
    const double C757 = C50790 * C498;
    const double C10762 = C50854 * C498;
    const double C33389 = C50854 * C498;
    const double C921 = C50790 * C907;
    const double C11326 = C50854 * C907;
    const double C33953 = C50854 * C907;
    const double C169 = C117 * C140;
    const double C346 = C117 * C308;
    const double C646 = C117 * C310;
    const double C523 = C117 * C485;
    const double C5219 = C5183 * C485;
    const double C11485 = C10729 * C485;
    const double C34112 = C33356 * C485;
    const double C44298 = C44262 * C485;
    const double C756 = C117 * C487;
    const double C10761 = C10729 * C487;
    const double C33388 = C33356 * C487;
    const double C920 = C117 * C901;
    const double C11325 = C10729 * C901;
    const double C33952 = C33356 * C901;
    const double C9260 = C8354 * C8026;
    const double C18402 = C8354 * C17174;
    const double C50010 = C49986 + C50009;
    const double C1227 =
        (C50015 * C49926 + ae * C49845 * C50025 +
         C49845 * (ae * C50025 +
                   C49845 * C50015 *
                       (2 * C49918 + ae * C49919 +
                        C49846 * (C49914 + ae * C49846 * C49915 +
                                  C49846 * (ae * C49915 +
                                            C49846 * std::pow(C49848, 8) *
                                                bs[8] * C49856))))) /
        C49727;
    const double C1219 = (C50015 * C49983 + C50025 * C50088) / C49723;
    const double C24649 = C24640 + C24647;
    const double C25557 = C24631 + C25552;
    const double C24648 = C24646 + C24628;
    const double C26204 = C25293 + C26199;
    const double C44315 = C44294 + C44295;
    const double C44312 = C44288 + C44289;
    const double C44311 = C44286 + C44287;
    const double C44308 = C44280 + C44281;
    const double C44303 = C44270 + C44271;
    const double C44300 = C44264 + C44265;
    const double C44497 = C44482 + C44483;
    const double C44494 = C44476 + C44477;
    const double C44493 = C44474 + C44475;
    const double C44490 = C44468 + C44469;
    const double C44679 = C44664 + C44665;
    const double C44676 = C44658 + C44659;
    const double C44675 = C44656 + C44657;
    const double C44672 = C44650 + C44651;
    const double C44843 = C44834 + C44835;
    const double C44840 = C44828 + C44829;
    const double C45007 = C44998 + C44999;
    const double C45004 = C44992 + C44993;
    const double C45219 = C45210 + C45211;
    const double C45216 = C45204 + C45205;
    const double C47253 = C47240 + C47241;
    const double C47250 = C47234 + C47235;
    const double C47245 = C47224 + C47225;
    const double C47242 = C47218 + C47219;
    const double C47903 = C47896 + C47897;
    const double C47900 = C47890 + C47891;
    const double C48163 = C48154 + C48155;
    const double C48160 = C48148 + C48149;
    const double C48327 = C48318 + C48319;
    const double C48324 = C48312 + C48313;
    const double C48831 = C48822 + C48823;
    const double C48828 = C48816 + C48817;
    const double C44316 = C44296 + C44297;
    const double C44313 = C44290 + C44291;
    const double C44310 = C44284 + C44285;
    const double C44307 = C44278 + C44279;
    const double C44304 = C44272 + C44273;
    const double C44301 = C44266 + C44267;
    const double C44498 = C44484 + C44485;
    const double C44495 = C44478 + C44479;
    const double C44492 = C44472 + C44473;
    const double C44489 = C44466 + C44467;
    const double C44680 = C44666 + C44667;
    const double C44677 = C44660 + C44661;
    const double C44674 = C44654 + C44655;
    const double C44671 = C44648 + C44649;
    const double C44844 = C44836 + C44837;
    const double C44841 = C44830 + C44831;
    const double C45008 = C45000 + C45001;
    const double C45005 = C44994 + C44995;
    const double C45220 = C45212 + C45213;
    const double C45217 = C45206 + C45207;
    const double C47252 = C47238 + C47239;
    const double C47249 = C47232 + C47233;
    const double C47246 = C47226 + C47227;
    const double C47243 = C47220 + C47221;
    const double C47902 = C47894 + C47895;
    const double C47899 = C47888 + C47889;
    const double C48164 = C48156 + C48157;
    const double C48161 = C48150 + C48151;
    const double C48328 = C48320 + C48321;
    const double C48325 = C48314 + C48315;
    const double C48832 = C48824 + C48825;
    const double C48829 = C48818 + C48819;
    const double C180 = C169 + C170;
    const double C359 = C346 + C347;
    const double C649 = C646 + C647;
    const double C536 = C523 + C524;
    const double C5238 = C5219 + C5220;
    const double C11490 = C11485 + C11486;
    const double C34117 = C34112 + C34113;
    const double C44317 = C44298 + C44299;
    const double C759 = C756 + C757;
    const double C10778 = C10761 + C10762;
    const double C33405 = C33388 + C33389;
    const double C927 = C920 + C921;
    const double C11330 = C11325 + C11326;
    const double C33957 = C33952 + C33953;
    const double C50011 = C50010 + C50004;
    const double C24651 = C24641 + C24649;
    const double C25558 = C24630 + C25557;
    const double C24650 = C24648 + C24629;
    const double C26205 = C25292 + C26204;
    const double C2850 = C359 * C50635;
    const double C8202 = C359 * C8026;
    const double C17350 = C359 * C17174;
    const double C24951 = C359 * C50635;
    const double C8506 = C649 * C8026;
    const double C17648 = C649 * C17174;
    const double C8858 = C927 * C8026;
    const double C18000 = C927 * C17174;
    const double C499 =
        (3 * C49898 + ae * C49899 + C49846 * C49926 + ae * C49845 * C50011 +
         C49845 *
             (ae * C50011 +
              C49845 *
                  (3 * C49922 + ae * C49923 +
                   C49846 * (2 * C49918 + ae * C49919 +
                             C49846 * (C49914 + ae * C49846 * C49915 +
                                       C49846 * (ae * C49915 +
                                                 C49846 * std::pow(C49848, 8) *
                                                     bs[8] * C49856)))))) /
        C49727;
    const double C752 =
        (ae * (4 * C49983 + C49846 * C50011 +
               (3 * C49975 + C49846 * C50002) * ae) +
         C49845 *
             (4 * C49926 + ae * C49927 +
              C49846 *
                  (3 * C49922 + ae * C49923 +
                   C49846 * (2 * C49918 + ae * C49919 +
                             C49846 * (C49914 + ae * C49846 * C49915 +
                                       C49846 * (ae * C49915 +
                                                 C49846 * std::pow(C49848, 8) *
                                                     bs[8] * C49856)))))) /
        C49727;
    const double C908 =
        (ae * C50015 * C50011 +
         C49845 * C50015 *
             (3 * C49922 + ae * C49923 +
              C49846 * (2 * C49918 + ae * C49919 +
                        C49846 * (C49914 + ae * C49846 * C49915 +
                                  C49846 * (ae * C49915 +
                                            C49846 * std::pow(C49848, 8) *
                                                bs[8] * C49856))))) /
        C49727;
    const double C141 = (5 * (3 * C49964 + C49846 * C49983 + C50237 * ae) +
                         C49846 * (4 * C49983 + C49846 * C50011 + C50241 * ae) +
                         (4 * C50237 + C49846 * C50241) * ae) /
                        C49723;
    const double C311 =
        (3 * C49964 + C49846 * C49983 + C50237 * ae + C50011 * C50033) / C49723;
    const double C488 =
        (3 * C49964 + C49846 * C49983 + C50237 * ae + C50011 * C50088) / C49723;
    const double C640 =
        (C50015 * (4 * C49983 + C49846 * C50011 + C50241 * ae)) / C49723;
    const double C750 =
        (C49845 * (4 * C49983 + C49846 * C50011 + C50241 * ae)) / C49723;
    const double C902 = (C49845 * C50015 * C50011) / C49723;
    d2ee[0] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C117 * C122 + C50790 * C129) * C8029 +
                    (C117 * C130 + C50790 * C143) * C50960 + C171 * C8030 +
                    C172 * C50961 + C173 * C8031 + C174 * C8026) *
                       C50932 +
                   (C8179 + C8180 + C8181 + C8182 + C8183 + C8184) * C50828) *
                      C50693 * C50919 -
                  ((C8185 + C8186 + C8187 + C8188 + C8189 + C8190) * C50828 +
                   (C8184 + C8183 + C8182 + C8181 + C8180 + C8179) * C50932) *
                      C50693 * C50729) *
                     C50962 +
                 (((C8191 + C8192 + C8193 + C8194 + C8195 + C8196) * C50932 +
                   (C8197 + C8198 + C8199 + C8200 + C8201 + C8202) * C50828) *
                      C50693 * C50729 -
                  ((C8196 + C8195 + C8194 + C8193 + C8192 + C8191) * C50828 +
                   (C176 * C8026 + C175 * C8031 + C174 * C50961 + C173 * C8030 +
                    C172 * C50960 + C171 * C8029) *
                       C50932) *
                      C50693 * C50919) *
                     C50963 +
                 (((C173 * C8029 + C174 * C50960 + C175 * C8030 +
                    C176 * C50961 + C178 * C8031 + C177 * C8026) *
                       C50932 +
                   (C8501 + C8502 + C8503 + C8504 + C8505 + C8506) * C50828) *
                      C50693 * C50919 -
                  (((C117 * C311 + C50790 * C322) * C8026 +
                    (C117 * C292 + C50790 * C312) * C8031 + C359 * C50961 +
                    C358 * C8030 + C357 * C50960 + C356 * C8029) *
                       C50828 +
                   (C8506 + C8505 + C8504 + C8503 + C8502 + C8501) * C50932) *
                      C50693 * C50729) *
                     C638)) /
               (p * q * std::sqrt(p + q));
    d2ee[1] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                ((((((C117 * C122 + C50790 * C129) * C8029 +
                     (C117 * C130 + C50790 * C143) * C50960 + C171 * C8030 +
                     C172 * C50961 + C173 * C8031 + C174 * C8026) *
                        C50932 +
                    (C8179 + C8180 + C8181 + C8182 + C8183 + C8184) * C50828) *
                       C50920 -
                   ((C8847 + C8848 + C8849 + C8850 + C8851 + C8852) * C50828 +
                    (C527 * C8026 + C528 * C8031 + C529 * C50961 +
                     C530 * C8030 + (C117 * C476 + C50790 * C493) * C50960 +
                     (C117 * C463 + C50790 * C477) * C8029) *
                        C50932) *
                       C50757) *
                      C50919 +
                  (((C8852 + C8851 + C8850 + C8849 + C8848 + C8847) * C50932 +
                    (C3234 * C8029 + C3233 * C50960 + C2692 * C8030 +
                     C2691 * C50961 + C3001 * C8031 + C3002 * C8026) *
                        C50828) *
                       C50757 -
                   ((C8185 + C8186 + C8187 + C8188 + C8189 + C8190) * C50828 +
                    (C8184 + C8183 + C8182 + C8181 + C8180 + C8179) * C50932) *
                       C50920) *
                      C50729) *
                     C281 +
                 ((((C530 * C8029 + C529 * C50960 + C528 * C8030 +
                     C527 * C50961 + C526 * C8031 + C525 * C8026) *
                        C50932 +
                    (C8853 + C8854 + C8855 + C8856 + C8857 + C8858) * C50828) *
                       C50757 -
                   ((C8196 + C8195 + C8194 + C8193 + C8192 + C8191) * C50828 +
                    (C176 * C8026 + C175 * C8031 + C174 * C50961 +
                     C173 * C8030 + C172 * C50960 + C171 * C8029) *
                        C50932) *
                       C50920) *
                      C50919 +
                  (((C8191 + C8192 + C8193 + C8194 + C8195 + C8196) * C50932 +
                    (C8197 + C8198 + C8199 + C8200 + C8201 + C8202) * C50828) *
                       C50920 -
                   (((C117 * C1566 + C50790 * C1574) * C8026 +
                     (C117 * C1562 + C50790 * C1567) * C8031 + C3002 * C50961 +
                     C3001 * C8030 + C2691 * C50960 + C2692 * C8029) *
                        C50828 +
                    (C8858 + C8857 + C8856 + C8855 + C8854 + C8853) * C50932) *
                       C50757) *
                      C50729) *
                     C50664)) /
               (p * q * std::sqrt(p + q));
    d2ee[2] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                (((((C117 * C122 + C50790 * C129) * C8029 +
                    (C117 * C130 + C50790 * C143) * C50960 + C171 * C8030 +
                    C172 * C50961 + C173 * C8031 + C174 * C8026) *
                       C50932 +
                   (C8179 + C8180 + C8181 + C8182 + C8183 + C8184) * C50828) *
                      C50693 * C278 -
                  ((C8185 + C8186 + C8187 + C8188 + C8189 + C8190) * C50828 +
                   (C8184 + C8183 + C8182 + C8181 + C8180 + C8179) * C50932) *
                      C50693 * C279 +
                  ((C8190 + C8189 + C8188 + C8187 + C8186 + C8185) * C50932 +
                   (C2498 * C8029 + C2497 * C50960 + C2496 * C8030 +
                    C2495 * C50961 + C2501 * C8031 + C2502 * C8026) *
                       C50828) *
                      C50693 * C280) *
                     C281 +
                 (((C8191 + C8192 + C8193 + C8194 + C8195 + C8196) * C50932 +
                   (C8197 + C8198 + C8199 + C8200 + C8201 + C8202) * C50828) *
                      C50693 * C279 -
                  ((C8196 + C8195 + C8194 + C8193 + C8192 + C8191) * C50828 +
                   (C176 * C8026 + C175 * C8031 + C174 * C50961 + C173 * C8030 +
                    C172 * C50960 + C171 * C8029) *
                       C50932) *
                      C50693 * C278 -
                  (((C117 * C1105 + C50790 * C1113) * C8026 +
                    (C117 * C1101 + C50790 * C1106) * C8031 + C2502 * C50961 +
                    C2501 * C8030 + C2495 * C50960 + C2496 * C8029) *
                       C50828 +
                   (C8202 + C8201 + C8200 + C8199 + C8198 + C8197) * C50932) *
                      C50693 * C280) *
                     C50664)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                ((((C117 * C122 + C50790 * C129) * C8029 +
                   (C117 * C130 + C50790 * C143) * C50960 + C171 * C8030 +
                   C172 * C50961 + C173 * C8031 + C174 * C8026) *
                      C50932 +
                  (C2491 * C8029 + C2492 * C50960 + C353 * C8030 +
                   C352 * C50961 + C351 * C8031 + C350 * C8026) *
                      C50828) *
                     C50693 * C50677 * C113 -
                 ((C348 * C8026 + C349 * C8031 + C350 * C50961 + C351 * C8030 +
                   C352 * C50960 + C353 * C8029) *
                      C50828 +
                  (C176 * C8026 + C175 * C8031 + C174 * C50961 + C173 * C8030 +
                   C172 * C50960 + C171 * C8029) *
                      C50932) *
                     C50693 * C50677 * C114 +
                 ((C173 * C8029 + C174 * C50960 + C175 * C8030 + C176 * C50961 +
                   C178 * C8031 + C177 * C8026) *
                      C50932 +
                  (C351 * C8029 + C350 * C50960 + C349 * C8030 + C348 * C50961 +
                   C648 * C8031 + C649 * C8026) *
                      C50828) *
                     C50693 * C50677 * C115 -
                 (((C117 * C640 + C50790 * C642) * C8026 +
                   (C117 * C639 + C50790 * C641) * C8031 + C649 * C50961 +
                   C648 * C8030 + C348 * C50960 + C349 * C8029) *
                      C50828 +
                  (C180 * C8026 + C179 * C8031 + C177 * C50961 + C178 * C8030 +
                   C176 * C50960 + C175 * C8029) *
                      C50932) *
                     C50693 * C50677 * C116)) /
                   (p * q * std::sqrt(p + q)) +
               (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                (((((C117 * C122 + C50790 * C129) * C8029 +
                    (C117 * C130 + C50790 * C143) * C50960 + C171 * C8030 +
                    C172 * C50961 + C173 * C8031 + C174 * C8026) *
                       C50932 +
                   (C8179 + C8180 + C8181 + C8182 + C8183 + C8184) * C50828) *
                      C457 -
                  ((C925 * C8026 + C924 * C8031 + C923 * C50961 + C922 * C8030 +
                    C3235 * C50960 + C3236 * C8029) *
                       C50828 +
                   (C527 * C8026 + C528 * C8031 + C529 * C50961 + C530 * C8030 +
                    (C117 * C476 + C50790 * C493) * C50960 +
                    (C117 * C463 + C50790 * C477) * C8029) *
                       C50932) *
                      C458 +
                  (((C117 * C464 + C50790 * C478) * C8029 +
                    (C117 * C479 + C50790 * C494) * C50960 + C531 * C8030 +
                    C532 * C50961 + C533 * C8031 + C534 * C8026) *
                       C50932 +
                   (C3674 * C8029 + C3675 * C50960 + C2693 * C8030 +
                    C2694 * C50961 + C8353 * C8031 + C8354 * C8026) *
                       C50828) *
                      C459) *
                     C50677 * C281 +
                 (((C530 * C8029 + C529 * C50960 + C528 * C8030 +
                    C527 * C50961 + C526 * C8031 + C525 * C8026) *
                       C50932 +
                   (C922 * C8029 + C923 * C50960 + C924 * C8030 +
                    C925 * C50961 + C926 * C8031 + C927 * C8026) *
                       C50828) *
                      C458 -
                  ((C8196 + C8195 + C8194 + C8193 + C8192 + C8191) * C50828 +
                   (C176 * C8026 + C175 * C8031 + C174 * C50961 + C173 * C8030 +
                    C172 * C50960 + C171 * C8029) *
                       C50932) *
                      C457 -
                  (((C117 * C1219 + C50790 * C1227) * C8026 +
                    (C117 * C1215 + C50790 * C1220) * C8031 + C8354 * C50961 +
                    C8353 * C8030 + C2694 * C50960 + C2693 * C8029) *
                       C50828 +
                   (C536 * C8026 + C535 * C8031 + C534 * C50961 + C533 * C8030 +
                    C532 * C50960 + C531 * C8029) *
                       C50932) *
                      C459) *
                     C50677 * C50664)) /
                   (p * q * std::sqrt(p + q));
    d2ee[3] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C117 * C122 + C50790 * C129) * C8029 +
                    (C117 * C130 + C50790 * C143) * C50960 + C171 * C8030 +
                    C172 * C50961 + C173 * C8031 + C174 * C8026) *
                       C50932 +
                   (C8179 + C8180 + C8181 + C8182 + C8183 + C8184) * C50828) *
                      C50920 -
                  ((C925 * C8026 + C924 * C8031 + C923 * C50961 + C922 * C8030 +
                    C3235 * C50960 + C3236 * C8029) *
                       C50828 +
                   (C527 * C8026 + C528 * C8031 + C529 * C50961 + C530 * C8030 +
                    (C117 * C476 + C50790 * C493) * C50960 +
                    (C117 * C463 + C50790 * C477) * C8029) *
                       C50932) *
                      C50757) *
                     C50677 * C50962 +
                 (((C530 * C8029 + C529 * C50960 + C528 * C8030 +
                    C527 * C50961 + C526 * C8031 + C525 * C8026) *
                       C50932 +
                   (C922 * C8029 + C923 * C50960 + C924 * C8030 +
                    C925 * C50961 + C926 * C8031 + C927 * C8026) *
                       C50828) *
                      C50757 -
                  ((C8196 + C8195 + C8194 + C8193 + C8192 + C8191) * C50828 +
                   (C176 * C8026 + C175 * C8031 + C174 * C50961 + C173 * C8030 +
                    C172 * C50960 + C171 * C8029) *
                       C50932) *
                      C50920) *
                     C50677 * C50963 +
                 (((C173 * C8029 + C174 * C50960 + C175 * C8030 +
                    C176 * C50961 + C178 * C8031 + C177 * C8026) *
                       C50932 +
                   (C8501 + C8502 + C8503 + C8504 + C8505 + C8506) * C50828) *
                      C50920 -
                  (((C117 * C902 + C50790 * C908) * C8026 +
                    (C117 * C893 + C50790 * C903) * C8031 + C927 * C50961 +
                    C926 * C8030 + C925 * C50960 + C924 * C8029) *
                       C50828 +
                   (C759 * C8026 + C758 * C8031 + C525 * C50961 + C526 * C8030 +
                    C527 * C50960 + C528 * C8029) *
                       C50932) *
                      C50757) *
                     C50677 * C638)) /
               (p * q * std::sqrt(p + q));
    d2ee[4] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                ((((C117 * C122 + C50790 * C129) * C8029 +
                   (C117 * C130 + C50790 * C143) * C50960 + C171 * C8030 +
                   C172 * C50961 + C173 * C8031 + C174 * C8026) *
                      C50932 +
                  (C2491 * C8029 + C2492 * C50960 + C353 * C8030 +
                   C352 * C50961 + C351 * C8031 + C350 * C8026) *
                      C50828) *
                     C50693 * C50677 * C113 -
                 ((C348 * C8026 + C349 * C8031 + C350 * C50961 + C351 * C8030 +
                   C352 * C50960 + C353 * C8029) *
                      C50828 +
                  (C176 * C8026 + C175 * C8031 + C174 * C50961 + C173 * C8030 +
                   C172 * C50960 + C171 * C8029) *
                      C50932) *
                     C50693 * C50677 * C114 +
                 ((C173 * C8029 + C174 * C50960 + C175 * C8030 + C176 * C50961 +
                   C178 * C8031 + C177 * C8026) *
                      C50932 +
                  (C351 * C8029 + C350 * C50960 + C349 * C8030 + C348 * C50961 +
                   C648 * C8031 + C649 * C8026) *
                      C50828) *
                     C50693 * C50677 * C115 -
                 (((C117 * C640 + C50790 * C642) * C8026 +
                   (C117 * C639 + C50790 * C641) * C8031 + C649 * C50961 +
                   C648 * C8030 + C348 * C50960 + C349 * C8029) *
                      C50828 +
                  (C180 * C8026 + C179 * C8031 + C177 * C50961 + C178 * C8030 +
                   C176 * C50960 + C175 * C8029) *
                      C50932) *
                     C50693 * C50677 * C116)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                (((((C117 * C122 + C50790 * C129) * C8029 +
                    (C117 * C130 + C50790 * C143) * C50960 + C171 * C8030 +
                    C172 * C50961 + C173 * C8031 + C174 * C8026) *
                       C50932 +
                   (C8179 + C8180 + C8181 + C8182 + C8183 + C8184) * C50828) *
                      C50693 * C278 -
                  ((C8185 + C8186 + C8187 + C8188 + C8189 + C8190) * C50828 +
                   (C8184 + C8183 + C8182 + C8181 + C8180 + C8179) * C50932) *
                      C50693 * C279 +
                  ((C8190 + C8189 + C8188 + C8187 + C8186 + C8185) * C50932 +
                   (C2498 * C8029 + C2497 * C50960 + C2496 * C8030 +
                    C2495 * C50961 + C2501 * C8031 + C2502 * C8026) *
                       C50828) *
                      C50693 * C280) *
                     C281 +
                 (((C8191 + C8192 + C8193 + C8194 + C8195 + C8196) * C50932 +
                   (C8197 + C8198 + C8199 + C8200 + C8201 + C8202) * C50828) *
                      C50693 * C279 -
                  ((C8196 + C8195 + C8194 + C8193 + C8192 + C8191) * C50828 +
                   (C176 * C8026 + C175 * C8031 + C174 * C50961 + C173 * C8030 +
                    C172 * C50960 + C171 * C8029) *
                       C50932) *
                      C50693 * C278 -
                  (((C117 * C1105 + C50790 * C1113) * C8026 +
                    (C117 * C1101 + C50790 * C1106) * C8031 + C2502 * C50961 +
                    C2501 * C8030 + C2495 * C50960 + C2496 * C8029) *
                       C50828 +
                   (C8202 + C8201 + C8200 + C8199 + C8198 + C8197) * C50932) *
                      C50693 * C280) *
                     C50664)) /
                   (p * q * std::sqrt(p + q));
    d2ee[5] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C117 * C122 + C50790 * C129) * C8029 +
                    (C117 * C130 + C50790 * C143) * C50960 + C171 * C8030 +
                    C172 * C50961 + C173 * C8031 + C174 * C8026) *
                       C50932 +
                   (C8179 + C8180 + C8181 + C8182 + C8183 + C8184) * C50828) *
                      C50693 * C50964 -
                  ((C8185 + C8186 + C8187 + C8188 + C8189 + C8190) * C50828 +
                   (C8184 + C8183 + C8182 + C8181 + C8180 + C8179) * C50932) *
                      C50693 * C50965 +
                  ((C8190 + C8189 + C8188 + C8187 + C8186 + C8185) * C50932 +
                   (C9103 + C9104 + C9105 + C9106 + C9107 + C9108) * C50828) *
                      C50693 * C1331) *
                     C50911 +
                 (((C8191 + C8192 + C8193 + C8194 + C8195 + C8196) * C50932 +
                   (C8197 + C8198 + C8199 + C8200 + C8201 + C8202) * C50828) *
                      C50693 * C50965 -
                  ((C8196 + C8195 + C8194 + C8193 + C8192 + C8191) * C50828 +
                   (C176 * C8026 + C175 * C8031 + C174 * C50961 + C173 * C8030 +
                    C172 * C50960 + C171 * C8029) *
                       C50932) *
                      C50693 * C50964 -
                  (((C117 * C1105 + C50790 * C1113) * C8026 +
                    (C117 * C1101 + C50790 * C1106) * C8031 + C2502 * C50961 +
                    C2501 * C8030 + C2495 * C50960 + C2496 * C8029) *
                       C50828 +
                   (C8202 + C8201 + C8200 + C8199 + C8198 + C8197) * C50932) *
                      C50693 * C1331) *
                     C50664)) /
               (p * q * std::sqrt(p + q));
    d2ee[6] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C117 * C122 + C50790 * C129) * C8029 +
                    (C117 * C130 + C50790 * C143) * C50960 + C171 * C8030 +
                    C172 * C50961 + C173 * C8031 + C174 * C8026) *
                       C50932 +
                   (C8179 + C8180 + C8181 + C8182 + C8183 + C8184) * C50828) *
                      C50920 -
                  ((C8847 + C8848 + C8849 + C8850 + C8851 + C8852) * C50828 +
                   (C527 * C8026 + C528 * C8031 + C529 * C50961 + C530 * C8030 +
                    (C117 * C476 + C50790 * C493) * C50960 +
                    (C117 * C463 + C50790 * C477) * C8029) *
                       C50932) *
                      C50757) *
                     C50964 +
                 (((C8852 + C8851 + C8850 + C8849 + C8848 + C8847) * C50932 +
                   (C9747 + C9748 + C9749 + C9750 + C9751 + C9752) * C50828) *
                      C50757 -
                  ((C8185 + C8186 + C8187 + C8188 + C8189 + C8190) * C50828 +
                   (C8184 + C8183 + C8182 + C8181 + C8180 + C8179) * C50932) *
                      C50920) *
                     C50965 +
                 (((C8190 + C8189 + C8188 + C8187 + C8186 + C8185) * C50932 +
                   (C9103 + C9104 + C9105 + C9106 + C9107 + C9108) * C50828) *
                      C50920 -
                  (((C117 * C3203 + C50790 * C3207) * C8026 +
                    (C117 * C3198 + C50790 * C3204) * C8031 + C3238 * C50961 +
                    C3237 * C8030 + C4185 * C50960 + C4184 * C8029) *
                       C50828 +
                   (C9752 + C9751 + C9750 + C9749 + C9748 + C9747) * C50932) *
                      C50757) *
                     C1331) *
                C50658) /
               (p * q * std::sqrt(p + q));
    d2ee[7] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                ((((C117 * C122 + C50790 * C129) * C8029 +
                   (C117 * C130 + C50790 * C143) * C50960 + C171 * C8030 +
                   C172 * C50961 + C173 * C8031 + C174 * C8026) *
                      C50932 +
                  (C8179 + C8180 + C8181 + C8182 + C8183 + C8184) * C50828) *
                     C50693 * C1096 -
                 ((C8185 + C8186 + C8187 + C8188 + C8189 + C8190) * C50828 +
                  (C8184 + C8183 + C8182 + C8181 + C8180 + C8179) * C50932) *
                     C50693 * C1097 +
                 ((C8190 + C8189 + C8188 + C8187 + C8186 + C8185) * C50932 +
                  (C9103 + C9104 + C9105 + C9106 + C9107 + C9108) * C50828) *
                     C50693 * C1098 -
                 (((C117 * C2449 + C50790 * C2453) * C8026 +
                   (C117 * C2444 + C50790 * C2450) * C8031 + C2500 * C50961 +
                   C2499 * C8030 + C3504 * C50960 + C3503 * C8029) *
                      C50828 +
                  (C9108 + C9107 + C9106 + C9105 + C9104 + C9103) * C50932) *
                     C50693 * C1099) *
                C50658) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                (((((C117 * C122 + C50790 * C129) * C8029 +
                    (C117 * C130 + C50790 * C143) * C50960 + C171 * C8030 +
                    C172 * C50961 + C173 * C8031 + C174 * C8026) *
                       C50932 +
                   (C8179 + C8180 + C8181 + C8182 + C8183 + C8184) * C50828) *
                      C50693 * C1025 -
                  ((C8185 + C8186 + C8187 + C8188 + C8189 + C8190) * C50828 +
                   (C8184 + C8183 + C8182 + C8181 + C8180 + C8179) * C50932) *
                      C50693 * C50729) *
                     C1027 +
                 (((C8191 + C8192 + C8193 + C8194 + C8195 + C8196) * C50932 +
                   (C8197 + C8198 + C8199 + C8200 + C8201 + C8202) * C50828) *
                      C50693 * C50729 -
                  ((C8196 + C8195 + C8194 + C8193 + C8192 + C8191) * C50828 +
                   (C176 * C8026 + C175 * C8031 + C174 * C50961 + C173 * C8030 +
                    C172 * C50960 + C171 * C8029) *
                       C50932) *
                      C50693 * C1025) *
                     C1028 +
                 (((C173 * C8029 + C174 * C50960 + C175 * C8030 +
                    C176 * C50961 + C178 * C8031 + C177 * C8026) *
                       C50932 +
                   (C8501 + C8502 + C8503 + C8504 + C8505 + C8506) * C50828) *
                      C50693 * C1025 -
                  (((C117 * C311 + C50790 * C322) * C8026 +
                    (C117 * C292 + C50790 * C312) * C8031 + C359 * C50961 +
                    C358 * C8030 + C357 * C50960 + C356 * C8029) *
                       C50828 +
                   (C8506 + C8505 + C8504 + C8503 + C8502 + C8501) * C50932) *
                      C50693 * C50729) *
                     C1029)) /
                   (p * q * std::sqrt(p + q)) +
               (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                (((((C117 * C122 + C50790 * C129) * C8029 +
                    (C117 * C130 + C50790 * C143) * C50960 + C171 * C8030 +
                    C172 * C50961 + C173 * C8031 + C174 * C8026) *
                       C50932 +
                   (C8179 + C8180 + C8181 + C8182 + C8183 + C8184) * C50828) *
                      C457 -
                  ((C8847 + C8848 + C8849 + C8850 + C8851 + C8852) * C50828 +
                   (C527 * C8026 + C528 * C8031 + C529 * C50961 + C530 * C8030 +
                    (C117 * C476 + C50790 * C493) * C50960 +
                    (C117 * C463 + C50790 * C477) * C8029) *
                       C50932) *
                      C458 +
                  (((C117 * C464 + C50790 * C478) * C8029 +
                    (C117 * C479 + C50790 * C494) * C50960 + C531 * C8030 +
                    C532 * C50961 + C533 * C8031 + C534 * C8026) *
                       C50932 +
                   (C9255 + C9256 + C9257 + C9258 + C9259 + C9260) * C50828) *
                      C459) *
                     C1025 +
                 (((C8852 + C8851 + C8850 + C8849 + C8848 + C8847) * C50932 +
                   (C3234 * C8029 + C3233 * C50960 + C2692 * C8030 +
                    C2691 * C50961 + C3001 * C8031 + C3002 * C8026) *
                       C50828) *
                      C458 -
                  ((C8185 + C8186 + C8187 + C8188 + C8189 + C8190) * C50828 +
                   (C8184 + C8183 + C8182 + C8181 + C8180 + C8179) * C50932) *
                      C457 -
                  (((C117 * C2673 + C50790 * C2677) * C8026 +
                    (C117 * C2668 + C50790 * C2674) * C8031 + C2696 * C50961 +
                    C2695 * C8030 + C3677 * C50960 + C3676 * C8029) *
                       C50828 +
                   (C9260 + C9259 + C9258 + C9257 + C9256 + C9255) * C50932) *
                      C459) *
                     C50729) *
                C50658) /
                   (p * q * std::sqrt(p + q));
    d2ee[8] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                ((((((C117 * C122 + C50790 * C129) * C8029 +
                     (C117 * C130 + C50790 * C143) * C50960 + C171 * C8030 +
                     C172 * C50961 + C173 * C8031 + C174 * C8026) *
                        C50932 +
                    (C8179 + C8180 + C8181 + C8182 + C8183 + C8184) * C50828) *
                       C50920 -
                   ((C8847 + C8848 + C8849 + C8850 + C8851 + C8852) * C50828 +
                    (C527 * C8026 + C528 * C8031 + C529 * C50961 +
                     C530 * C8030 + (C117 * C476 + C50790 * C493) * C50960 +
                     (C117 * C463 + C50790 * C477) * C8029) *
                        C50932) *
                       C50757) *
                      C1025 +
                  (((C8852 + C8851 + C8850 + C8849 + C8848 + C8847) * C50932 +
                    (C3234 * C8029 + C3233 * C50960 + C2692 * C8030 +
                     C2691 * C50961 + C3001 * C8031 + C3002 * C8026) *
                        C50828) *
                       C50757 -
                   ((C8185 + C8186 + C8187 + C8188 + C8189 + C8190) * C50828 +
                    (C8184 + C8183 + C8182 + C8181 + C8180 + C8179) * C50932) *
                       C50920) *
                      C50729) *
                     C50911 +
                 ((((C530 * C8029 + C529 * C50960 + C528 * C8030 +
                     C527 * C50961 + C526 * C8031 + C525 * C8026) *
                        C50932 +
                    (C8853 + C8854 + C8855 + C8856 + C8857 + C8858) * C50828) *
                       C50757 -
                   ((C8196 + C8195 + C8194 + C8193 + C8192 + C8191) * C50828 +
                    (C176 * C8026 + C175 * C8031 + C174 * C50961 +
                     C173 * C8030 + C172 * C50960 + C171 * C8029) *
                        C50932) *
                       C50920) *
                      C1025 +
                  (((C8191 + C8192 + C8193 + C8194 + C8195 + C8196) * C50932 +
                    (C8197 + C8198 + C8199 + C8200 + C8201 + C8202) * C50828) *
                       C50920 -
                   (((C117 * C1566 + C50790 * C1574) * C8026 +
                     (C117 * C1562 + C50790 * C1567) * C8031 + C3002 * C50961 +
                     C3001 * C8030 + C2691 * C50960 + C2692 * C8029) *
                        C50828 +
                    (C8858 + C8857 + C8856 + C8855 + C8854 + C8853) * C50932) *
                       C50757) *
                      C50729) *
                     C50664)) /
               (p * q * std::sqrt(p + q));
    d2ee[9] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                (((((C117 * C122 + C50790 * C129) * C8029 +
                    (C117 * C130 + C50790 * C143) * C50960 + C171 * C8030 +
                    C172 * C50961 + C173 * C8031 + C174 * C8026) *
                       C50932 +
                   (C8179 + C8180 + C8181 + C8182 + C8183 + C8184) * C50828) *
                      C50693 * C1025 -
                  ((C8185 + C8186 + C8187 + C8188 + C8189 + C8190) * C50828 +
                   (C8184 + C8183 + C8182 + C8181 + C8180 + C8179) * C50932) *
                      C50693 * C50729) *
                     C1027 +
                 (((C8191 + C8192 + C8193 + C8194 + C8195 + C8196) * C50932 +
                   (C8197 + C8198 + C8199 + C8200 + C8201 + C8202) * C50828) *
                      C50693 * C50729 -
                  ((C8196 + C8195 + C8194 + C8193 + C8192 + C8191) * C50828 +
                   (C176 * C8026 + C175 * C8031 + C174 * C50961 + C173 * C8030 +
                    C172 * C50960 + C171 * C8029) *
                       C50932) *
                      C50693 * C1025) *
                     C1028 +
                 (((C173 * C8029 + C174 * C50960 + C175 * C8030 +
                    C176 * C50961 + C178 * C8031 + C177 * C8026) *
                       C50932 +
                   (C8501 + C8502 + C8503 + C8504 + C8505 + C8506) * C50828) *
                      C50693 * C1025 -
                  (((C117 * C311 + C50790 * C322) * C8026 +
                    (C117 * C292 + C50790 * C312) * C8031 + C359 * C50961 +
                    C358 * C8030 + C357 * C50960 + C356 * C8029) *
                       C50828 +
                   (C8506 + C8505 + C8504 + C8503 + C8502 + C8501) * C50932) *
                      C50693 * C50729) *
                     C1029)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                ((((C117 * C122 + C50790 * C129) * C8029 +
                   (C117 * C130 + C50790 * C143) * C50960 + C171 * C8030 +
                   C172 * C50961 + C173 * C8031 + C174 * C8026) *
                      C50932 +
                  (C8179 + C8180 + C8181 + C8182 + C8183 + C8184) * C50828) *
                     C50693 * C1096 -
                 ((C8185 + C8186 + C8187 + C8188 + C8189 + C8190) * C50828 +
                  (C8184 + C8183 + C8182 + C8181 + C8180 + C8179) * C50932) *
                     C50693 * C1097 +
                 ((C8190 + C8189 + C8188 + C8187 + C8186 + C8185) * C50932 +
                  (C9103 + C9104 + C9105 + C9106 + C9107 + C9108) * C50828) *
                     C50693 * C1098 -
                 (((C117 * C2449 + C50790 * C2453) * C8026 +
                   (C117 * C2444 + C50790 * C2450) * C8031 + C2500 * C50961 +
                   C2499 * C8030 + C3504 * C50960 + C3503 * C8029) *
                      C50828 +
                  (C9108 + C9107 + C9106 + C9105 + C9104 + C9103) * C50932) *
                     C50693 * C1099) *
                C50658) /
                   (p * q * std::sqrt(p + q));
    d2ee[10] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C117 * C122 + C50790 * C129) * C8029 +
                      (C117 * C130 + C50790 * C143) * C50960 + C171 * C8030 +
                      C172 * C50961 + C173 * C8031 + C174 * C8026) *
                         C50932 +
                     (C8179 + C8180 + C8181 + C8182 + C8183 + C8184) * C50828) *
                        C1676 -
                    ((C8847 + C8848 + C8849 + C8850 + C8851 + C8852) * C50828 +
                     (C527 * C8026 + C528 * C8031 + C529 * C50961 +
                      C530 * C8030 + (C117 * C476 + C50790 * C493) * C50960 +
                      (C117 * C463 + C50790 * C477) * C8029) *
                         C50932) *
                        C50757) *
                       C50919 +
                   (((C8852 + C8851 + C8850 + C8849 + C8848 + C8847) * C50932 +
                     (C9747 + C9748 + C9749 + C9750 + C9751 + C9752) * C50828) *
                        C50757 -
                    ((C8185 + C8186 + C8187 + C8188 + C8189 + C8190) * C50828 +
                     (C8184 + C8183 + C8182 + C8181 + C8180 + C8179) * C50932) *
                        C1676) *
                       C50729) *
                      C50911 +
                  ((((C530 * C8029 + C529 * C50960 + C528 * C8030 +
                      C527 * C50961 + C526 * C8031 + C525 * C8026) *
                         C50932 +
                     (C8853 + C8854 + C8855 + C8856 + C8857 + C8858) * C50828) *
                        C50757 -
                    ((C8196 + C8195 + C8194 + C8193 + C8192 + C8191) * C50828 +
                     (C176 * C8026 + C175 * C8031 + C174 * C50961 +
                      C173 * C8030 + C172 * C50960 + C171 * C8029) *
                         C50932) *
                        C1676) *
                       C50919 +
                   (((C8191 + C8192 + C8193 + C8194 + C8195 + C8196) * C50932 +
                     (C8197 + C8198 + C8199 + C8200 + C8201 + C8202) * C50828) *
                        C1676 -
                    (((C117 * C1566 + C50790 * C1574) * C8026 +
                      (C117 * C1562 + C50790 * C1567) * C8031 + C3002 * C50961 +
                      C3001 * C8030 + C2691 * C50960 + C2692 * C8029) *
                         C50828 +
                     (C8858 + C8857 + C8856 + C8855 + C8854 + C8853) * C50932) *
                        C50757) *
                       C50729) *
                      C50664)) /
                (p * q * std::sqrt(p + q));
    d2ee[11] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C122 + C50790 * C129) * C8029 +
                     (C117 * C130 + C50790 * C143) * C50960 + C171 * C8030 +
                     C172 * C50961 + C173 * C8031 + C174 * C8026) *
                        C50932 +
                    (C8179 + C8180 + C8181 + C8182 + C8183 + C8184) * C50828) *
                       C50966 -
                   ((C8847 + C8848 + C8849 + C8850 + C8851 + C8852) * C50828 +
                    (C527 * C8026 + C528 * C8031 + C529 * C50961 +
                     C530 * C8030 + (C117 * C476 + C50790 * C493) * C50960 +
                     (C117 * C463 + C50790 * C477) * C8029) *
                        C50932) *
                       C50967 +
                   (((C117 * C464 + C50790 * C478) * C8029 +
                     (C117 * C479 + C50790 * C494) * C50960 + C531 * C8030 +
                     C532 * C50961 + C533 * C8031 + C534 * C8026) *
                        C50932 +
                    (C9255 + C9256 + C9257 + C9258 + C9259 + C9260) * C50828) *
                       C2092) *
                      C50919 +
                  (((C8852 + C8851 + C8850 + C8849 + C8848 + C8847) * C50932 +
                    (C9747 + C9748 + C9749 + C9750 + C9751 + C9752) * C50828) *
                       C50967 -
                   ((C8185 + C8186 + C8187 + C8188 + C8189 + C8190) * C50828 +
                    (C8184 + C8183 + C8182 + C8181 + C8180 + C8179) * C50932) *
                       C50966 -
                   (((C117 * C2673 + C50790 * C2677) * C8026 +
                     (C117 * C2668 + C50790 * C2674) * C8031 + C2696 * C50961 +
                     C2695 * C8030 + C3677 * C50960 + C3676 * C8029) *
                        C50828 +
                    (C9260 + C9259 + C9258 + C9257 + C9256 + C9255) * C50932) *
                       C2092) *
                      C50729) *
                 C50658) /
                (p * q * std::sqrt(p + q));
    d2ee[12] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C122 + C50790 * C129) * C8029 +
                     (C117 * C130 + C50790 * C143) * C50960 + C171 * C8030 +
                     C172 * C50961 + C173 * C8031 + C174 * C8026) *
                        C50932 +
                    (C8179 + C8180 + C8181 + C8182 + C8183 + C8184) * C50828) *
                       C1676 -
                   ((C8847 + C8848 + C8849 + C8850 + C8851 + C8852) * C50828 +
                    (C527 * C8026 + C528 * C8031 + C529 * C50961 +
                     C530 * C8030 + (C117 * C476 + C50790 * C493) * C50960 +
                     (C117 * C463 + C50790 * C477) * C8029) *
                        C50932) *
                       C50757) *
                      C278 +
                  (((C8852 + C8851 + C8850 + C8849 + C8848 + C8847) * C50932 +
                    (C9747 + C9748 + C9749 + C9750 + C9751 + C9752) * C50828) *
                       C50757 -
                   ((C8185 + C8186 + C8187 + C8188 + C8189 + C8190) * C50828 +
                    (C8184 + C8183 + C8182 + C8181 + C8180 + C8179) * C50932) *
                       C1676) *
                      C279 +
                  (((C8190 + C8189 + C8188 + C8187 + C8186 + C8185) * C50932 +
                    (C9103 + C9104 + C9105 + C9106 + C9107 + C9108) * C50828) *
                       C1676 -
                   (((C117 * C3203 + C50790 * C3207) * C8026 +
                     (C117 * C3198 + C50790 * C3204) * C8031 + C3238 * C50961 +
                     C3237 * C8030 + C4185 * C50960 + C4184 * C8029) *
                        C50828 +
                    (C9752 + C9751 + C9750 + C9749 + C9748 + C9747) * C50932) *
                       C50757) *
                      C280) *
                 C50658) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C122 + C50790 * C129) * C8029 +
                     (C117 * C130 + C50790 * C143) * C50960 + C171 * C8030 +
                     C172 * C50961 + C173 * C8031 + C174 * C8026) *
                        C50932 +
                    (C8179 + C8180 + C8181 + C8182 + C8183 + C8184) * C50828) *
                       C1676 -
                   ((C8847 + C8848 + C8849 + C8850 + C8851 + C8852) * C50828 +
                    (C527 * C8026 + C528 * C8031 + C529 * C50961 +
                     C530 * C8030 + (C117 * C476 + C50790 * C493) * C50960 +
                     (C117 * C463 + C50790 * C477) * C8029) *
                        C50932) *
                       C50757) *
                      C50677 * C1027 +
                  (((C530 * C8029 + C529 * C50960 + C528 * C8030 +
                     C527 * C50961 + C526 * C8031 + C525 * C8026) *
                        C50932 +
                    (C8853 + C8854 + C8855 + C8856 + C8857 + C8858) * C50828) *
                       C50757 -
                   ((C8196 + C8195 + C8194 + C8193 + C8192 + C8191) * C50828 +
                    (C176 * C8026 + C175 * C8031 + C174 * C50961 +
                     C173 * C8030 + C172 * C50960 + C171 * C8029) *
                        C50932) *
                       C1676) *
                      C50677 * C1028 +
                  (((C173 * C8029 + C174 * C50960 + C175 * C8030 +
                     C176 * C50961 + C178 * C8031 + C177 * C8026) *
                        C50932 +
                    (C8501 + C8502 + C8503 + C8504 + C8505 + C8506) * C50828) *
                       C1676 -
                   (((C117 * C902 + C50790 * C908) * C8026 +
                     (C117 * C893 + C50790 * C903) * C8031 + C927 * C50961 +
                     C926 * C8030 + C925 * C50960 + C924 * C8029) *
                        C50828 +
                    (C759 * C8026 + C758 * C8031 + C525 * C50961 +
                     C526 * C8030 + C527 * C50960 + C528 * C8029) *
                        C50932) *
                       C50757) *
                      C50677 * C1029)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C117 * C122 + C50790 * C129) * C8029 +
                    (C117 * C130 + C50790 * C143) * C50960 + C171 * C8030 +
                    C172 * C50961 + C173 * C8031 + C174 * C8026) *
                       C50932 +
                   (C8179 + C8180 + C8181 + C8182 + C8183 + C8184) * C50828) *
                      C1842 -
                  ((C8847 + C8848 + C8849 + C8850 + C8851 + C8852) * C50828 +
                   (C527 * C8026 + C528 * C8031 + C529 * C50961 + C530 * C8030 +
                    (C117 * C476 + C50790 * C493) * C50960 +
                    (C117 * C463 + C50790 * C477) * C8029) *
                       C50932) *
                      C1843 +
                  (((C117 * C464 + C50790 * C478) * C8029 +
                    (C117 * C479 + C50790 * C494) * C50960 + C531 * C8030 +
                    C532 * C50961 + C533 * C8031 + C534 * C8026) *
                       C50932 +
                   (C9255 + C9256 + C9257 + C9258 + C9259 + C9260) * C50828) *
                      C1844 -
                  (((C117 * C6137 + C50790 * C6139) * C8026 +
                    (C117 * C6136 + C50790 * C6138) * C8031 +
                    (C117 * C4586 + C50790 * C4592) * C50961 +
                    (C117 * C4580 + C50790 * C4587) * C8030 +
                    (C117 * C4588 + C50790 * C4593) * C50960 +
                    (C117 * C4581 + C50790 * C4589) * C8029) *
                       C50828 +
                   ((C117 * C1852 + C50790 * C1859) * C8026 +
                    (C117 * C1847 + C50790 * C1853) * C8031 +
                    (C117 * C1854 + C50790 * C1860) * C50961 +
                    (C117 * C1848 + C50790 * C1855) * C8030 +
                    (C117 * C1856 + C50790 * C1861) * C50960 +
                    (C117 * C1849 + C50790 * C1857) * C8029) *
                       C50932) *
                      C1845) *
                 C50677 * C50658) /
                    (p * q * std::sqrt(p + q));
    d2ee[13] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C122 + C50790 * C129) * C8029 +
                     (C117 * C130 + C50790 * C143) * C50960 + C171 * C8030 +
                     C172 * C50961 + C173 * C8031 + C174 * C8026) *
                        C50932 +
                    (C8179 + C8180 + C8181 + C8182 + C8183 + C8184) * C50828) *
                       C50966 -
                   ((C8847 + C8848 + C8849 + C8850 + C8851 + C8852) * C50828 +
                    (C527 * C8026 + C528 * C8031 + C529 * C50961 +
                     C530 * C8030 + (C117 * C476 + C50790 * C493) * C50960 +
                     (C117 * C463 + C50790 * C477) * C8029) *
                        C50932) *
                       C50967 +
                   (((C117 * C464 + C50790 * C478) * C8029 +
                     (C117 * C479 + C50790 * C494) * C50960 + C531 * C8030 +
                     C532 * C50961 + C533 * C8031 + C534 * C8026) *
                        C50932 +
                    (C9255 + C9256 + C9257 + C9258 + C9259 + C9260) * C50828) *
                       C2092) *
                      C50677 * C50911 +
                  (((C530 * C8029 + C529 * C50960 + C528 * C8030 +
                     C527 * C50961 + C526 * C8031 + C525 * C8026) *
                        C50932 +
                    (C8853 + C8854 + C8855 + C8856 + C8857 + C8858) * C50828) *
                       C50967 -
                   ((C8196 + C8195 + C8194 + C8193 + C8192 + C8191) * C50828 +
                    (C176 * C8026 + C175 * C8031 + C174 * C50961 +
                     C173 * C8030 + C172 * C50960 + C171 * C8029) *
                        C50932) *
                       C50966 -
                   (((C117 * C1219 + C50790 * C1227) * C8026 +
                     (C117 * C1215 + C50790 * C1220) * C8031 + C8354 * C50961 +
                     C8353 * C8030 + C2694 * C50960 + C2693 * C8029) *
                        C50828 +
                    (C536 * C8026 + C535 * C8031 + C534 * C50961 +
                     C533 * C8030 + C532 * C50960 + C531 * C8029) *
                        C50932) *
                       C2092) *
                      C50677 * C50664)) /
                (p * q * std::sqrt(p + q));
    d2ee[14] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C122 + C50790 * C129) * C8029 +
                     (C117 * C130 + C50790 * C143) * C50960 + C171 * C8030 +
                     C172 * C50961 + C173 * C8031 + C174 * C8026) *
                        C50932 +
                    (C8179 + C8180 + C8181 + C8182 + C8183 + C8184) * C50828) *
                       C1676 -
                   ((C8847 + C8848 + C8849 + C8850 + C8851 + C8852) * C50828 +
                    (C527 * C8026 + C528 * C8031 + C529 * C50961 +
                     C530 * C8030 + (C117 * C476 + C50790 * C493) * C50960 +
                     (C117 * C463 + C50790 * C477) * C8029) *
                        C50932) *
                       C50757) *
                      C50677 * C1027 +
                  (((C530 * C8029 + C529 * C50960 + C528 * C8030 +
                     C527 * C50961 + C526 * C8031 + C525 * C8026) *
                        C50932 +
                    (C8853 + C8854 + C8855 + C8856 + C8857 + C8858) * C50828) *
                       C50757 -
                   ((C8196 + C8195 + C8194 + C8193 + C8192 + C8191) * C50828 +
                    (C176 * C8026 + C175 * C8031 + C174 * C50961 +
                     C173 * C8030 + C172 * C50960 + C171 * C8029) *
                        C50932) *
                       C1676) *
                      C50677 * C1028 +
                  (((C173 * C8029 + C174 * C50960 + C175 * C8030 +
                     C176 * C50961 + C178 * C8031 + C177 * C8026) *
                        C50932 +
                    (C8501 + C8502 + C8503 + C8504 + C8505 + C8506) * C50828) *
                       C1676 -
                   (((C117 * C902 + C50790 * C908) * C8026 +
                     (C117 * C893 + C50790 * C903) * C8031 + C927 * C50961 +
                     C926 * C8030 + C925 * C50960 + C924 * C8029) *
                        C50828 +
                    (C759 * C8026 + C758 * C8031 + C525 * C50961 +
                     C526 * C8030 + C527 * C50960 + C528 * C8029) *
                        C50932) *
                       C50757) *
                      C50677 * C1029)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C122 + C50790 * C129) * C8029 +
                     (C117 * C130 + C50790 * C143) * C50960 + C171 * C8030 +
                     C172 * C50961 + C173 * C8031 + C174 * C8026) *
                        C50932 +
                    (C8179 + C8180 + C8181 + C8182 + C8183 + C8184) * C50828) *
                       C1676 -
                   ((C8847 + C8848 + C8849 + C8850 + C8851 + C8852) * C50828 +
                    (C527 * C8026 + C528 * C8031 + C529 * C50961 +
                     C530 * C8030 + (C117 * C476 + C50790 * C493) * C50960 +
                     (C117 * C463 + C50790 * C477) * C8029) *
                        C50932) *
                       C50757) *
                      C278 +
                  (((C8852 + C8851 + C8850 + C8849 + C8848 + C8847) * C50932 +
                    (C9747 + C9748 + C9749 + C9750 + C9751 + C9752) * C50828) *
                       C50757 -
                   ((C8185 + C8186 + C8187 + C8188 + C8189 + C8190) * C50828 +
                    (C8184 + C8183 + C8182 + C8181 + C8180 + C8179) * C50932) *
                       C1676) *
                      C279 +
                  (((C8190 + C8189 + C8188 + C8187 + C8186 + C8185) * C50932 +
                    (C9103 + C9104 + C9105 + C9106 + C9107 + C9108) * C50828) *
                       C1676 -
                   (((C117 * C3203 + C50790 * C3207) * C8026 +
                     (C117 * C3198 + C50790 * C3204) * C8031 + C3238 * C50961 +
                     C3237 * C8030 + C4185 * C50960 + C4184 * C8029) *
                        C50828 +
                    (C9752 + C9751 + C9750 + C9749 + C9748 + C9747) * C50932) *
                       C50757) *
                      C280) *
                 C50658) /
                    (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C2294 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C2289 +
             (C10763 + C10764) * C2295 + (C10765 + C10766) * C50635) *
                C50932 +
            ((C13817 + C13818) * C2294 + (C13819 + C13820) * C2289 +
             C13793 * C2295 + C13794 * C50635) *
                C50828) *
               C50693 * C50919 -
           ((C13795 * C50635 + C13796 * C2295 + (C13821 + C13822) * C2289 +
             (C13823 + C13824) * C2294) *
                C50828 +
            (C13805 * C50635 + C13806 * C2295 + (C13820 + C13819) * C2289 +
             (C13818 + C13817) * C2294) *
                C50932) *
               C50693 * C50729) *
              C50962 +
          (((C13793 * C2294 + C13794 * C2289 + C14229 * C2295 +
             C14230 * C50635) *
                C50932 +
            (C13807 * C2294 + C13808 * C2289 + (C10973 + C10974) * C2295 +
             (C10975 + C10976) * C50635) *
                C50828) *
               C50693 * C50729 -
           ((C11317 * C50635 + C11318 * C2295 + C13805 * C2289 +
             C13806 * C2294) *
                C50828 +
            ((C10770 + C10769) * C50635 + (C10768 + C10767) * C2295 +
             (C10766 + C10765) * C2289 + (C10764 + C10763) * C2294) *
                C50932) *
               C50693 * C50919) *
              C50963 +
          (((C10779 * C2294 + C10780 * C2289 + (C10774 + C10773) * C2295 +
             (C10772 + C10771) * C50635) *
                C50932 +
            (C14229 * C2294 + C14230 * C2289 + (C11327 + C11328) * C2295 +
             (C11329 + C11330) * C50635) *
                C50828) *
               C50693 * C50919 -
           (((C10729 * C1566 + C50854 * C1574 + C10728 * C308 + C50933 * C320) *
                 C50635 +
             (C10729 * C1562 + C50854 * C1567 + C10728 * C290 + C50933 * C307) *
                 C2295 +
             (C10976 + C10975) * C2289 + (C10974 + C10973) * C2294) *
                C50828 +
            ((C11330 + C11329) * C50635 + (C11328 + C11327) * C2295 +
             C11317 * C2289 + C11318 * C2294) *
                C50932) *
               C50693 * C50729) *
              C638)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                  C2294 +
              (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                  C2289 +
              (C10763 + C10764) * C2295 + (C10765 + C10766) * C50635) *
                 C50932 +
             ((C13817 + C13818) * C2294 + (C13819 + C13820) * C2289 +
              C13793 * C2295 + C13794 * C50635) *
                 C50828) *
                C50920 -
            ((C14683 * C50635 + C14684 * C2295 + (C14703 + C14704) * C2289 +
              (C14705 + C14706) * C2294) *
                 C50828 +
             ((C11159 + C11160) * C50635 + (C11161 + C11162) * C2295 +
              (C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                  C2289 +
              (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                  C2294) *
                 C50932) *
                C50757) *
               C50919 +
           ((((C14706 + C14705) * C2294 + (C14704 + C14703) * C2289 +
              C14693 * C2295 + C14694 * C50635) *
                 C50932 +
             ((C10728 * C1565 + C50933 * C1573 + C10729 * C2666 +
               C50854 * C2669) *
                  C2294 +
              (C10728 * C1572 + C50933 * C1577 + C10729 * C2670 +
               C50854 * C2675) *
                  C2289 +
              (C14707 + C14708) * C2295 + (C14709 + C14710) * C50635) *
                 C50828) *
                C50757 -
            ((C13795 * C50635 + C13796 * C2295 + (C13821 + C13822) * C2289 +
              (C13823 + C13824) * C2294) *
                 C50828 +
             (C13805 * C50635 + C13806 * C2295 + (C13820 + C13819) * C2289 +
              (C13818 + C13817) * C2294) *
                 C50932) *
                C50920) *
               C50729) *
              C281 +
          (((((C11162 + C11161) * C2294 + (C11160 + C11159) * C2289 +
              (C11158 + C11157) * C2295 + (C11156 + C11155) * C50635) *
                 C50932 +
             (C14693 * C2294 + C14694 * C2289 + (C11705 + C11706) * C2295 +
              (C11707 + C11708) * C50635) *
                 C50828) *
                C50757 -
            ((C11317 * C50635 + C11318 * C2295 + C13805 * C2289 +
              C13806 * C2294) *
                 C50828 +
             ((C10770 + C10769) * C50635 + (C10768 + C10767) * C2295 +
              (C10766 + C10765) * C2289 + (C10764 + C10763) * C2294) *
                 C50932) *
                C50920) *
               C50919 +
           (((C13793 * C2294 + C13794 * C2289 + C14229 * C2295 +
              C14230 * C50635) *
                 C50932 +
             (C13807 * C2294 + C13808 * C2289 + (C10973 + C10974) * C2295 +
              (C10975 + C10976) * C50635) *
                 C50828) *
                C50920 -
            (((C10729 * C2673 + C50854 * C2677 + C10728 * C1568 +
               C50933 * C1575) *
                  C50635 +
              (C10729 * C2668 + C50854 * C2674 + C10728 * C1563 +
               C50933 * C1569) *
                  C2295 +
              (C14710 + C14709) * C2289 + (C14708 + C14707) * C2294) *
                 C50828 +
             ((C11708 + C11707) * C50635 + (C11706 + C11705) * C2295 +
              C14683 * C2289 + C14684 * C2294) *
                 C50932) *
                C50757) *
               C50729) *
              C50664)) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C2294 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C2289 +
             (C10763 + C10764) * C2295 + (C10765 + C10766) * C50635) *
                C50932 +
            ((C13817 + C13818) * C2294 + (C13819 + C13820) * C2289 +
             C13793 * C2295 + C13794 * C50635) *
                C50828) *
               C50693 * C278 -
           ((C13795 * C50635 + C13796 * C2295 + (C13821 + C13822) * C2289 +
             (C13823 + C13824) * C2294) *
                C50828 +
            (C13805 * C50635 + C13806 * C2295 + (C13820 + C13819) * C2289 +
             (C13818 + C13817) * C2294) *
                C50932) *
               C50693 * C279 +
           (((C13824 + C13823) * C2294 + (C13822 + C13821) * C2289 +
             C13807 * C2295 + C13808 * C50635) *
                C50932 +
            ((C10728 * C1104 + C50933 * C1112 + C10729 * C3196 +
              C50854 * C3199) *
                 C2294 +
             (C10728 * C1111 + C50933 * C1116 + C10729 * C3200 +
              C50854 * C3205) *
                 C2289 +
             (C13825 + C13826) * C2295 + (C13827 + C13828) * C50635) *
                C50828) *
               C50693 * C280) *
              C281 +
          (((C13793 * C2294 + C13794 * C2289 + (C10964 + C10963) * C2295 +
             (C10962 + C10961) * C50635) *
                C50932 +
            (C13807 * C2294 + C13808 * C2289 + (C10973 + C10974) * C2295 +
             (C10975 + C10976) * C50635) *
                C50828) *
               C50693 * C279 -
           ((C11317 * C50635 + C11318 * C2295 + C13805 * C2289 +
             C13806 * C2294) *
                C50828 +
            ((C10770 + C10769) * C50635 + (C10768 + C10767) * C2295 +
             (C10766 + C10765) * C2289 + (C10764 + C10763) * C2294) *
                C50932) *
               C50693 * C278 -
           (((C10729 * C3203 + C50854 * C3207 + C10728 * C1107 +
              C50933 * C1114) *
                 C50635 +
             (C10729 * C3198 + C50854 * C3204 + C10728 * C1102 +
              C50933 * C1108) *
                 C2295 +
             (C13828 + C13827) * C2289 + (C13826 + C13825) * C2294) *
                C50828 +
            ((C10976 + C10975) * C50635 + (C10974 + C10973) * C2295 +
             C13795 * C2289 + C13796 * C2294) *
                C50932) *
               C50693 * C280) *
              C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                C2294 +
            (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                C2289 +
            (C10763 + C10764) * C2295 + (C10765 + C10766) * C50635) *
               C50932 +
           ((C10728 * C286 + C50933 * C300 + C10729 * C889 + C50854 * C894) *
                C2294 +
            (C10728 * C299 + C50933 * C316 + C10729 * C895 + C50854 * C904) *
                C2289 +
            (C10968 + C10967) * C2295 + (C10966 + C10965) * C50635) *
               C50828) *
              C50693 * C50677 * C113 -
          ((C11317 * C50635 + C11318 * C2295 + (C10965 + C10966) * C2289 +
            (C10967 + C10968) * C2294) *
               C50828 +
           ((C10770 + C10769) * C50635 + (C10768 + C10767) * C2295 +
            (C10766 + C10765) * C2289 + (C10764 + C10763) * C2294) *
               C50932) *
              C50693 * C50677 * C114 +
          ((C10779 * C2294 + C10780 * C2289 + (C10774 + C10773) * C2295 +
            (C10772 + C10771) * C50635) *
               C50932 +
           ((C10964 + C10963) * C2294 + (C10962 + C10961) * C2289 +
            (C11327 + C11328) * C2295 + (C11329 + C11330) * C50635) *
               C50828) *
              C50693 * C50677 * C115 -
          (((C10729 * C902 + C50854 * C908 + C10728 * C310 + C50933 * C321) *
                C50635 +
            (C10729 * C893 + C50854 * C903 + C10728 * C291 + C50933 * C309) *
                C2295 +
            (C11330 + C11329) * C2289 + (C11328 + C11327) * C2294) *
               C50828 +
           ((C10778 + C10777) * C50635 + (C10776 + C10775) * C2295 +
            C10781 * C2289 + C10782 * C2294) *
               C50932) *
              C50693 * C50677 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C2294 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C2289 +
             (C10763 + C10764) * C2295 + (C10765 + C10766) * C50635) *
                C50932 +
            ((C13817 + C13818) * C2294 + (C13819 + C13820) * C2289 +
             C13793 * C2295 + C13794 * C50635) *
                C50828) *
               C457 -
           (((C11704 + C11703) * C50635 + (C11702 + C11701) * C2295 +
             (C10729 * C1225 + C50854 * C1230 + C10728 * C895 + C50933 * C904) *
                 C2289 +
             (C10729 * C1218 + C50854 * C1226 + C10728 * C889 + C50933 * C894) *
                 C2294) *
                C50828 +
            ((C11159 + C11160) * C50635 + (C11161 + C11162) * C2295 +
             (C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                 C2289 +
             (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                 C2294) *
                C50932) *
               C458 +
           (((C10728 * C464 + C50933 * C478 + C10729 * C1849 + C50854 * C1857) *
                 C2294 +
             (C10728 * C479 + C50933 * C494 + C10729 * C1856 + C50854 * C1861) *
                 C2289 +
             (C11163 + C11164) * C2295 + (C11165 + C11166) * C50635) *
                C50932 +
            ((C10728 * C1218 + C50933 * C1226 + C10729 * C4581 +
              C50854 * C4589) *
                 C2294 +
             (C10728 * C1225 + C50933 * C1230 + C10729 * C4588 +
              C50854 * C4593) *
                 C2289 +
             (C14031 + C14032) * C2295 + (C14033 + C14034) * C50635) *
                C50828) *
               C459) *
              C50677 * C281 +
          ((((C11162 + C11161) * C2294 + (C11160 + C11159) * C2289 +
             (C11158 + C11157) * C2295 + (C11156 + C11155) * C50635) *
                C50932 +
            ((C11701 + C11702) * C2294 + (C11703 + C11704) * C2289 +
             (C11705 + C11706) * C2295 + (C11707 + C11708) * C50635) *
                C50828) *
               C458 -
           ((C11317 * C50635 + C11318 * C2295 + C13805 * C2289 +
             C13806 * C2294) *
                C50828 +
            ((C10770 + C10769) * C50635 + (C10768 + C10767) * C2295 +
             (C10766 + C10765) * C2289 + (C10764 + C10763) * C2294) *
                C50932) *
               C457 -
           (((C10729 * C6137 + C50854 * C6139 + C10728 * C1221 +
              C50933 * C1228) *
                 C50635 +
             (C10729 * C6136 + C50854 * C6138 + C10728 * C1216 +
              C50933 * C1222) *
                 C2295 +
             (C14034 + C14033) * C2289 + (C14032 + C14031) * C2294) *
                C50828 +
            ((C11170 + C11169) * C50635 + (C11168 + C11167) * C2295 +
             (C11166 + C11165) * C2289 + (C11164 + C11163) * C2294) *
                C50932) *
               C459) *
              C50677 * C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C2294 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C2289 +
             (C10763 + C10764) * C2295 + (C10765 + C10766) * C50635) *
                C50932 +
            ((C13817 + C13818) * C2294 + (C13819 + C13820) * C2289 +
             C13793 * C2295 + C13794 * C50635) *
                C50828) *
               C50920 -
           (((C11704 + C11703) * C50635 + (C11702 + C11701) * C2295 +
             (C10729 * C1225 + C50854 * C1230 + C10728 * C895 + C50933 * C904) *
                 C2289 +
             (C10729 * C1218 + C50854 * C1226 + C10728 * C889 + C50933 * C894) *
                 C2294) *
                C50828 +
            ((C11159 + C11160) * C50635 + (C11161 + C11162) * C2295 +
             (C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                 C2289 +
             (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                 C2294) *
                C50932) *
               C50757) *
              C50677 * C50962 +
          ((((C11162 + C11161) * C2294 + (C11160 + C11159) * C2289 +
             (C11158 + C11157) * C2295 + (C11156 + C11155) * C50635) *
                C50932 +
            ((C11701 + C11702) * C2294 + (C11703 + C11704) * C2289 +
             (C11705 + C11706) * C2295 + (C11707 + C11708) * C50635) *
                C50828) *
               C50757 -
           ((C11317 * C50635 + C11318 * C2295 + C13805 * C2289 +
             C13806 * C2294) *
                C50828 +
            ((C10770 + C10769) * C50635 + (C10768 + C10767) * C2295 +
             (C10766 + C10765) * C2289 + (C10764 + C10763) * C2294) *
                C50932) *
               C50920) *
              C50677 * C50963 +
          (((C10779 * C2294 + C10780 * C2289 + (C10774 + C10773) * C2295 +
             (C10772 + C10771) * C50635) *
                C50932 +
            (C14229 * C2294 + C14230 * C2289 + (C11327 + C11328) * C2295 +
             (C11329 + C11330) * C50635) *
                C50828) *
               C50920 -
           (((C10729 * C1219 + C50854 * C1227 + C10728 * C901 + C50933 * C907) *
                 C50635 +
             (C10729 * C1215 + C50854 * C1220 + C10728 * C892 + C50933 * C900) *
                 C2295 +
             (C11708 + C11707) * C2289 + (C11706 + C11705) * C2294) *
                C50828 +
            ((C11490 + C11489) * C50635 + (C11488 + C11487) * C2295 +
             C11477 * C2289 + C11478 * C2294) *
                C50932) *
               C50757) *
              C50677 * C638)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                C2294 +
            (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                C2289 +
            (C10763 + C10764) * C2295 + (C10765 + C10766) * C50635) *
               C50932 +
           ((C10728 * C286 + C50933 * C300 + C10729 * C889 + C50854 * C894) *
                C2294 +
            (C10728 * C299 + C50933 * C316 + C10729 * C895 + C50854 * C904) *
                C2289 +
            (C10968 + C10967) * C2295 + (C10966 + C10965) * C50635) *
               C50828) *
              C50693 * C50677 * C113 -
          ((C11317 * C50635 + C11318 * C2295 + (C10965 + C10966) * C2289 +
            (C10967 + C10968) * C2294) *
               C50828 +
           ((C10770 + C10769) * C50635 + (C10768 + C10767) * C2295 +
            (C10766 + C10765) * C2289 + (C10764 + C10763) * C2294) *
               C50932) *
              C50693 * C50677 * C114 +
          ((C10779 * C2294 + C10780 * C2289 + (C10774 + C10773) * C2295 +
            (C10772 + C10771) * C50635) *
               C50932 +
           ((C10964 + C10963) * C2294 + (C10962 + C10961) * C2289 +
            (C11327 + C11328) * C2295 + (C11329 + C11330) * C50635) *
               C50828) *
              C50693 * C50677 * C115 -
          (((C10729 * C902 + C50854 * C908 + C10728 * C310 + C50933 * C321) *
                C50635 +
            (C10729 * C893 + C50854 * C903 + C10728 * C291 + C50933 * C309) *
                C2295 +
            (C11330 + C11329) * C2289 + (C11328 + C11327) * C2294) *
               C50828 +
           ((C10778 + C10777) * C50635 + (C10776 + C10775) * C2295 +
            C10781 * C2289 + C10782 * C2294) *
               C50932) *
              C50693 * C50677 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C2294 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C2289 +
             (C10763 + C10764) * C2295 + (C10765 + C10766) * C50635) *
                C50932 +
            ((C13817 + C13818) * C2294 + (C13819 + C13820) * C2289 +
             C13793 * C2295 + C13794 * C50635) *
                C50828) *
               C50693 * C278 -
           ((C13795 * C50635 + C13796 * C2295 + (C13821 + C13822) * C2289 +
             (C13823 + C13824) * C2294) *
                C50828 +
            (C13805 * C50635 + C13806 * C2295 + (C13820 + C13819) * C2289 +
             (C13818 + C13817) * C2294) *
                C50932) *
               C50693 * C279 +
           (((C13824 + C13823) * C2294 + (C13822 + C13821) * C2289 +
             C13807 * C2295 + C13808 * C50635) *
                C50932 +
            ((C10728 * C1104 + C50933 * C1112 + C10729 * C3196 +
              C50854 * C3199) *
                 C2294 +
             (C10728 * C1111 + C50933 * C1116 + C10729 * C3200 +
              C50854 * C3205) *
                 C2289 +
             (C13825 + C13826) * C2295 + (C13827 + C13828) * C50635) *
                C50828) *
               C50693 * C280) *
              C281 +
          (((C13793 * C2294 + C13794 * C2289 + (C10964 + C10963) * C2295 +
             (C10962 + C10961) * C50635) *
                C50932 +
            (C13807 * C2294 + C13808 * C2289 + (C10973 + C10974) * C2295 +
             (C10975 + C10976) * C50635) *
                C50828) *
               C50693 * C279 -
           ((C11317 * C50635 + C11318 * C2295 + C13805 * C2289 +
             C13806 * C2294) *
                C50828 +
            ((C10770 + C10769) * C50635 + (C10768 + C10767) * C2295 +
             (C10766 + C10765) * C2289 + (C10764 + C10763) * C2294) *
                C50932) *
               C50693 * C278 -
           (((C10729 * C3203 + C50854 * C3207 + C10728 * C1107 +
              C50933 * C1114) *
                 C50635 +
             (C10729 * C3198 + C50854 * C3204 + C10728 * C1102 +
              C50933 * C1108) *
                 C2295 +
             (C13828 + C13827) * C2289 + (C13826 + C13825) * C2294) *
                C50828 +
            ((C10976 + C10975) * C50635 + (C10974 + C10973) * C2295 +
             C13795 * C2289 + C13796 * C2294) *
                C50932) *
               C50693 * C280) *
              C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C2294 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C2289 +
             (C10763 + C10764) * C2295 + (C10765 + C10766) * C50635) *
                C50932 +
            ((C13817 + C13818) * C2294 + (C13819 + C13820) * C2289 +
             C13793 * C2295 + C13794 * C50635) *
                C50828) *
               C50693 * C50964 -
           ((C13795 * C50635 + C13796 * C2295 + (C13821 + C13822) * C2289 +
             (C13823 + C13824) * C2294) *
                C50828 +
            (C13805 * C50635 + C13806 * C2295 + (C13820 + C13819) * C2289 +
             (C13818 + C13817) * C2294) *
                C50932) *
               C50693 * C50965 +
           (((C13824 + C13823) * C2294 + (C13822 + C13821) * C2289 +
             C13807 * C2295 + C13808 * C50635) *
                C50932 +
            ((C15043 + C15044) * C2294 + (C15045 + C15046) * C2289 +
             (C13825 + C13826) * C2295 + (C13827 + C13828) * C50635) *
                C50828) *
               C50693 * C1331) *
              C50911 +
          (((C13793 * C2294 + C13794 * C2289 + C14229 * C2295 +
             C14230 * C50635) *
                C50932 +
            (C13807 * C2294 + C13808 * C2289 + (C10973 + C10974) * C2295 +
             (C10975 + C10976) * C50635) *
                C50828) *
               C50693 * C50965 -
           ((C11317 * C50635 + C11318 * C2295 + C13805 * C2289 +
             C13806 * C2294) *
                C50828 +
            ((C10770 + C10769) * C50635 + (C10768 + C10767) * C2295 +
             (C10766 + C10765) * C2289 + (C10764 + C10763) * C2294) *
                C50932) *
               C50693 * C50964 -
           (((C10729 * C3203 + C50854 * C3207 + C10728 * C1107 +
              C50933 * C1114) *
                 C50635 +
             (C10729 * C3198 + C50854 * C3204 + C10728 * C1102 +
              C50933 * C1108) *
                 C2295 +
             (C13828 + C13827) * C2289 + (C13826 + C13825) * C2294) *
                C50828 +
            ((C10976 + C10975) * C50635 + (C10974 + C10973) * C2295 +
             C13795 * C2289 + C13796 * C2294) *
                C50932) *
               C50693 * C1331) *
              C50664)) /
        (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C2294 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C2289 +
             (C10763 + C10764) * C2295 + (C10765 + C10766) * C50635) *
                C50932 +
            ((C13817 + C13818) * C2294 + (C13819 + C13820) * C2289 +
             C13793 * C2295 + C13794 * C50635) *
                C50828) *
               C50920 -
           ((C14683 * C50635 + C14684 * C2295 + (C14703 + C14704) * C2289 +
             (C14705 + C14706) * C2294) *
                C50828 +
            ((C11159 + C11160) * C50635 + (C11161 + C11162) * C2295 +
             (C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                 C2289 +
             (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                 C2294) *
                C50932) *
               C50757) *
              C50964 +
          ((((C14706 + C14705) * C2294 + (C14704 + C14703) * C2289 +
             C14693 * C2295 + C14694 * C50635) *
                C50932 +
            ((C15907 + C15908) * C2294 + (C15909 + C15910) * C2289 +
             (C14707 + C14708) * C2295 + (C14709 + C14710) * C50635) *
                C50828) *
               C50757 -
           ((C13795 * C50635 + C13796 * C2295 + (C13821 + C13822) * C2289 +
             (C13823 + C13824) * C2294) *
                C50828 +
            (C13805 * C50635 + C13806 * C2295 + (C13820 + C13819) * C2289 +
             (C13818 + C13817) * C2294) *
                C50932) *
               C50920) *
              C50965 +
          ((((C13824 + C13823) * C2294 + (C13822 + C13821) * C2289 +
             C13807 * C2295 + C13808 * C50635) *
                C50932 +
            ((C15043 + C15044) * C2294 + (C15045 + C15046) * C2289 +
             (C13825 + C13826) * C2295 + (C13827 + C13828) * C50635) *
                C50828) *
               C50920 -
           (((C10729 * C3655 + C50854 * C3659 + C10728 * C3202 +
              C50933 * C3206) *
                 C50635 +
             (C10729 * C3653 + C50854 * C3656 + C10728 * C3197 +
              C50933 * C3201) *
                 C2295 +
             (C10729 * C3657 + C50854 * C3660 + C10728 * C3200 +
              C50933 * C3205) *
                 C2289 +
             (C10729 * C3654 + C50854 * C3658 + C10728 * C3196 +
              C50933 * C3199) *
                 C2294) *
                C50828 +
            ((C14710 + C14709) * C50635 + (C14708 + C14707) * C2295 +
             (C15910 + C15909) * C2289 + (C15908 + C15907) * C2294) *
                C50932) *
               C50757) *
              C1331) *
         C50658) /
        (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                C2294 +
            (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                C2289 +
            (C10763 + C10764) * C2295 + (C10765 + C10766) * C50635) *
               C50932 +
           ((C13817 + C13818) * C2294 + (C13819 + C13820) * C2289 +
            C13793 * C2295 + C13794 * C50635) *
               C50828) *
              C50693 * C1096 -
          ((C13795 * C50635 + C13796 * C2295 + (C13821 + C13822) * C2289 +
            (C13823 + C13824) * C2294) *
               C50828 +
           (C13805 * C50635 + C13806 * C2295 + (C13820 + C13819) * C2289 +
            (C13818 + C13817) * C2294) *
               C50932) *
              C50693 * C1097 +
          (((C13824 + C13823) * C2294 + (C13822 + C13821) * C2289 +
            C13807 * C2295 + C13808 * C50635) *
               C50932 +
           ((C15043 + C15044) * C2294 + (C15045 + C15046) * C2289 +
            (C13825 + C13826) * C2295 + (C13827 + C13828) * C50635) *
               C50828) *
              C50693 * C1098 -
          (((C10729 * C4169 + C50854 * C4173 + C10728 * C2448 +
             C50933 * C2452) *
                C50635 +
            (C10729 * C4167 + C50854 * C4170 + C10728 * C2443 +
             C50933 * C2447) *
                C2295 +
            (C10729 * C4171 + C50854 * C4174 + C10728 * C2446 +
             C50933 * C2451) *
                C2289 +
            (C10729 * C4168 + C50854 * C4172 + C10728 * C2442 +
             C50933 * C2445) *
                C2294) *
               C50828 +
           ((C13828 + C13827) * C50635 + (C13826 + C13825) * C2295 +
            (C15046 + C15045) * C2289 + (C15044 + C15043) * C2294) *
               C50932) *
              C50693 * C1099) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C2294 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C2289 +
             (C10763 + C10764) * C2295 + (C10765 + C10766) * C50635) *
                C50932 +
            ((C13817 + C13818) * C2294 + (C13819 + C13820) * C2289 +
             C13793 * C2295 + C13794 * C50635) *
                C50828) *
               C50693 * C1025 -
           ((C13795 * C50635 + C13796 * C2295 + (C13821 + C13822) * C2289 +
             (C13823 + C13824) * C2294) *
                C50828 +
            (C13805 * C50635 + C13806 * C2295 + (C13820 + C13819) * C2289 +
             (C13818 + C13817) * C2294) *
                C50932) *
               C50693 * C50729) *
              C1027 +
          (((C13793 * C2294 + C13794 * C2289 + C14229 * C2295 +
             C14230 * C50635) *
                C50932 +
            (C13807 * C2294 + C13808 * C2289 + (C10973 + C10974) * C2295 +
             (C10975 + C10976) * C50635) *
                C50828) *
               C50693 * C50729 -
           ((C11317 * C50635 + C11318 * C2295 + C13805 * C2289 +
             C13806 * C2294) *
                C50828 +
            ((C10770 + C10769) * C50635 + (C10768 + C10767) * C2295 +
             (C10766 + C10765) * C2289 + (C10764 + C10763) * C2294) *
                C50932) *
               C50693 * C1025) *
              C1028 +
          (((C10779 * C2294 + C10780 * C2289 + (C10774 + C10773) * C2295 +
             (C10772 + C10771) * C50635) *
                C50932 +
            (C14229 * C2294 + C14230 * C2289 + (C11327 + C11328) * C2295 +
             (C11329 + C11330) * C50635) *
                C50828) *
               C50693 * C1025 -
           (((C10729 * C1566 + C50854 * C1574 + C10728 * C308 + C50933 * C320) *
                 C50635 +
             (C10729 * C1562 + C50854 * C1567 + C10728 * C290 + C50933 * C307) *
                 C2295 +
             (C10976 + C10975) * C2289 + (C10974 + C10973) * C2294) *
                C50828 +
            ((C11330 + C11329) * C50635 + (C11328 + C11327) * C2295 +
             C11317 * C2289 + C11318 * C2294) *
                C50932) *
               C50693 * C50729) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C2294 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C2289 +
             (C10763 + C10764) * C2295 + (C10765 + C10766) * C50635) *
                C50932 +
            ((C13817 + C13818) * C2294 + (C13819 + C13820) * C2289 +
             C13793 * C2295 + C13794 * C50635) *
                C50828) *
               C457 -
           ((C14683 * C50635 + C14684 * C2295 + (C14703 + C14704) * C2289 +
             (C14705 + C14706) * C2294) *
                C50828 +
            ((C11159 + C11160) * C50635 + (C11161 + C11162) * C2295 +
             (C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                 C2289 +
             (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                 C2294) *
                C50932) *
               C458 +
           (((C10728 * C464 + C50933 * C478 + C10729 * C1849 + C50854 * C1857) *
                 C2294 +
             (C10728 * C479 + C50933 * C494 + C10729 * C1856 + C50854 * C1861) *
                 C2289 +
             (C11163 + C11164) * C2295 + (C11165 + C11166) * C50635) *
                C50932 +
            ((C15249 + C15250) * C2294 + (C15251 + C15252) * C2289 +
             (C14031 + C14032) * C2295 + (C14033 + C14034) * C50635) *
                C50828) *
               C459) *
              C1025 +
          ((((C14706 + C14705) * C2294 + (C14704 + C14703) * C2289 +
             C14693 * C2295 + C14694 * C50635) *
                C50932 +
            ((C10728 * C1565 + C50933 * C1573 + C10729 * C2666 +
              C50854 * C2669) *
                 C2294 +
             (C10728 * C1572 + C50933 * C1577 + C10729 * C2670 +
              C50854 * C2675) *
                 C2289 +
             (C14707 + C14708) * C2295 + (C14709 + C14710) * C50635) *
                C50828) *
               C458 -
           ((C13795 * C50635 + C13796 * C2295 + (C13821 + C13822) * C2289 +
             (C13823 + C13824) * C2294) *
                C50828 +
            (C13805 * C50635 + C13806 * C2295 + (C13820 + C13819) * C2289 +
             (C13818 + C13817) * C2294) *
                C50932) *
               C457 -
           (((C10729 * C4582 + C50854 * C4590 + C10728 * C2672 +
              C50933 * C2676) *
                 C50635 +
             (C10729 * C4578 + C50854 * C4583 + C10728 * C2667 +
              C50933 * C2671) *
                 C2295 +
             (C10729 * C4584 + C50854 * C4591 + C10728 * C2670 +
              C50933 * C2675) *
                 C2289 +
             (C10729 * C4579 + C50854 * C4585 + C10728 * C2666 +
              C50933 * C2669) *
                 C2294) *
                C50828 +
            ((C14034 + C14033) * C50635 + (C14032 + C14031) * C2295 +
             (C15252 + C15251) * C2289 + (C15250 + C15249) * C2294) *
                C50932) *
               C459) *
              C50729) *
         C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                  C2294 +
              (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                  C2289 +
              (C10763 + C10764) * C2295 + (C10765 + C10766) * C50635) *
                 C50932 +
             ((C13817 + C13818) * C2294 + (C13819 + C13820) * C2289 +
              C13793 * C2295 + C13794 * C50635) *
                 C50828) *
                C50920 -
            ((C14683 * C50635 + C14684 * C2295 + (C14703 + C14704) * C2289 +
              (C14705 + C14706) * C2294) *
                 C50828 +
             ((C11159 + C11160) * C50635 + (C11161 + C11162) * C2295 +
              (C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                  C2289 +
              (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                  C2294) *
                 C50932) *
                C50757) *
               C1025 +
           ((((C14706 + C14705) * C2294 + (C14704 + C14703) * C2289 +
              C14693 * C2295 + C14694 * C50635) *
                 C50932 +
             ((C10728 * C1565 + C50933 * C1573 + C10729 * C2666 +
               C50854 * C2669) *
                  C2294 +
              (C10728 * C1572 + C50933 * C1577 + C10729 * C2670 +
               C50854 * C2675) *
                  C2289 +
              (C14707 + C14708) * C2295 + (C14709 + C14710) * C50635) *
                 C50828) *
                C50757 -
            ((C13795 * C50635 + C13796 * C2295 + (C13821 + C13822) * C2289 +
              (C13823 + C13824) * C2294) *
                 C50828 +
             (C13805 * C50635 + C13806 * C2295 + (C13820 + C13819) * C2289 +
              (C13818 + C13817) * C2294) *
                 C50932) *
                C50920) *
               C50729) *
              C50911 +
          (((((C11162 + C11161) * C2294 + (C11160 + C11159) * C2289 +
              (C11158 + C11157) * C2295 + (C11156 + C11155) * C50635) *
                 C50932 +
             (C14693 * C2294 + C14694 * C2289 + (C11705 + C11706) * C2295 +
              (C11707 + C11708) * C50635) *
                 C50828) *
                C50757 -
            ((C11317 * C50635 + C11318 * C2295 + C13805 * C2289 +
              C13806 * C2294) *
                 C50828 +
             ((C10770 + C10769) * C50635 + (C10768 + C10767) * C2295 +
              (C10766 + C10765) * C2289 + (C10764 + C10763) * C2294) *
                 C50932) *
                C50920) *
               C1025 +
           (((C13793 * C2294 + C13794 * C2289 + C14229 * C2295 +
              C14230 * C50635) *
                 C50932 +
             (C13807 * C2294 + C13808 * C2289 + (C10973 + C10974) * C2295 +
              (C10975 + C10976) * C50635) *
                 C50828) *
                C50920 -
            (((C10729 * C2673 + C50854 * C2677 + C10728 * C1568 +
               C50933 * C1575) *
                  C50635 +
              (C10729 * C2668 + C50854 * C2674 + C10728 * C1563 +
               C50933 * C1569) *
                  C2295 +
              (C14710 + C14709) * C2289 + (C14708 + C14707) * C2294) *
                 C50828 +
             ((C11708 + C11707) * C50635 + (C11706 + C11705) * C2295 +
              C14683 * C2289 + C14684 * C2294) *
                 C50932) *
                C50757) *
               C50729) *
              C50664)) /
        (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C2294 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C2289 +
             (C10763 + C10764) * C2295 + (C10765 + C10766) * C50635) *
                C50932 +
            ((C13817 + C13818) * C2294 + (C13819 + C13820) * C2289 +
             C13793 * C2295 + C13794 * C50635) *
                C50828) *
               C50693 * C1025 -
           ((C13795 * C50635 + C13796 * C2295 + (C13821 + C13822) * C2289 +
             (C13823 + C13824) * C2294) *
                C50828 +
            (C13805 * C50635 + C13806 * C2295 + (C13820 + C13819) * C2289 +
             (C13818 + C13817) * C2294) *
                C50932) *
               C50693 * C50729) *
              C1027 +
          (((C13793 * C2294 + C13794 * C2289 + C14229 * C2295 +
             C14230 * C50635) *
                C50932 +
            (C13807 * C2294 + C13808 * C2289 + (C10973 + C10974) * C2295 +
             (C10975 + C10976) * C50635) *
                C50828) *
               C50693 * C50729 -
           ((C11317 * C50635 + C11318 * C2295 + C13805 * C2289 +
             C13806 * C2294) *
                C50828 +
            ((C10770 + C10769) * C50635 + (C10768 + C10767) * C2295 +
             (C10766 + C10765) * C2289 + (C10764 + C10763) * C2294) *
                C50932) *
               C50693 * C1025) *
              C1028 +
          (((C10779 * C2294 + C10780 * C2289 + (C10774 + C10773) * C2295 +
             (C10772 + C10771) * C50635) *
                C50932 +
            (C14229 * C2294 + C14230 * C2289 + (C11327 + C11328) * C2295 +
             (C11329 + C11330) * C50635) *
                C50828) *
               C50693 * C1025 -
           (((C10729 * C1566 + C50854 * C1574 + C10728 * C308 + C50933 * C320) *
                 C50635 +
             (C10729 * C1562 + C50854 * C1567 + C10728 * C290 + C50933 * C307) *
                 C2295 +
             (C10976 + C10975) * C2289 + (C10974 + C10973) * C2294) *
                C50828 +
            ((C11330 + C11329) * C50635 + (C11328 + C11327) * C2295 +
             C11317 * C2289 + C11318 * C2294) *
                C50932) *
               C50693 * C50729) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                C2294 +
            (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                C2289 +
            (C10763 + C10764) * C2295 + (C10765 + C10766) * C50635) *
               C50932 +
           ((C13817 + C13818) * C2294 + (C13819 + C13820) * C2289 +
            C13793 * C2295 + C13794 * C50635) *
               C50828) *
              C50693 * C1096 -
          ((C13795 * C50635 + C13796 * C2295 + (C13821 + C13822) * C2289 +
            (C13823 + C13824) * C2294) *
               C50828 +
           (C13805 * C50635 + C13806 * C2295 + (C13820 + C13819) * C2289 +
            (C13818 + C13817) * C2294) *
               C50932) *
              C50693 * C1097 +
          (((C13824 + C13823) * C2294 + (C13822 + C13821) * C2289 +
            C13807 * C2295 + C13808 * C50635) *
               C50932 +
           ((C15043 + C15044) * C2294 + (C15045 + C15046) * C2289 +
            (C13825 + C13826) * C2295 + (C13827 + C13828) * C50635) *
               C50828) *
              C50693 * C1098 -
          (((C10729 * C4169 + C50854 * C4173 + C10728 * C2448 +
             C50933 * C2452) *
                C50635 +
            (C10729 * C4167 + C50854 * C4170 + C10728 * C2443 +
             C50933 * C2447) *
                C2295 +
            (C10729 * C4171 + C50854 * C4174 + C10728 * C2446 +
             C50933 * C2451) *
                C2289 +
            (C10729 * C4168 + C50854 * C4172 + C10728 * C2442 +
             C50933 * C2445) *
                C2294) *
               C50828 +
           ((C13828 + C13827) * C50635 + (C13826 + C13825) * C2295 +
            (C15046 + C15045) * C2289 + (C15044 + C15043) * C2294) *
               C50932) *
              C50693 * C1099) *
         C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                  C2294 +
              (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                  C2289 +
              (C10763 + C10764) * C2295 + (C10765 + C10766) * C50635) *
                 C50932 +
             ((C13817 + C13818) * C2294 + (C13819 + C13820) * C2289 +
              C13793 * C2295 + C13794 * C50635) *
                 C50828) *
                C1676 -
            ((C14683 * C50635 + C14684 * C2295 + (C14703 + C14704) * C2289 +
              (C14705 + C14706) * C2294) *
                 C50828 +
             ((C11159 + C11160) * C50635 + (C11161 + C11162) * C2295 +
              (C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                  C2289 +
              (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                  C2294) *
                 C50932) *
                C50757) *
               C50919 +
           ((((C14706 + C14705) * C2294 + (C14704 + C14703) * C2289 +
              C14693 * C2295 + C14694 * C50635) *
                 C50932 +
             ((C15907 + C15908) * C2294 + (C15909 + C15910) * C2289 +
              (C14707 + C14708) * C2295 + (C14709 + C14710) * C50635) *
                 C50828) *
                C50757 -
            ((C13795 * C50635 + C13796 * C2295 + (C13821 + C13822) * C2289 +
              (C13823 + C13824) * C2294) *
                 C50828 +
             (C13805 * C50635 + C13806 * C2295 + (C13820 + C13819) * C2289 +
              (C13818 + C13817) * C2294) *
                 C50932) *
                C1676) *
               C50729) *
              C50911 +
          (((((C11162 + C11161) * C2294 + (C11160 + C11159) * C2289 +
              (C11158 + C11157) * C2295 + (C11156 + C11155) * C50635) *
                 C50932 +
             (C14693 * C2294 + C14694 * C2289 + (C11705 + C11706) * C2295 +
              (C11707 + C11708) * C50635) *
                 C50828) *
                C50757 -
            ((C11317 * C50635 + C11318 * C2295 + C13805 * C2289 +
              C13806 * C2294) *
                 C50828 +
             ((C10770 + C10769) * C50635 + (C10768 + C10767) * C2295 +
              (C10766 + C10765) * C2289 + (C10764 + C10763) * C2294) *
                 C50932) *
                C1676) *
               C50919 +
           (((C13793 * C2294 + C13794 * C2289 + C14229 * C2295 +
              C14230 * C50635) *
                 C50932 +
             (C13807 * C2294 + C13808 * C2289 + (C10973 + C10974) * C2295 +
              (C10975 + C10976) * C50635) *
                 C50828) *
                C1676 -
            (((C10729 * C2673 + C50854 * C2677 + C10728 * C1568 +
               C50933 * C1575) *
                  C50635 +
              (C10729 * C2668 + C50854 * C2674 + C10728 * C1563 +
               C50933 * C1569) *
                  C2295 +
              (C14710 + C14709) * C2289 + (C14708 + C14707) * C2294) *
                 C50828 +
             ((C11708 + C11707) * C50635 + (C11706 + C11705) * C2295 +
              C14683 * C2289 + C14684 * C2294) *
                 C50932) *
                C50757) *
               C50729) *
              C50664)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C2294 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C2289 +
             (C10763 + C10764) * C2295 + (C10765 + C10766) * C50635) *
                C50932 +
            ((C13817 + C13818) * C2294 + (C13819 + C13820) * C2289 +
             C13793 * C2295 + C13794 * C50635) *
                C50828) *
               C50966 -
           ((C14683 * C50635 + C14684 * C2295 + (C14703 + C14704) * C2289 +
             (C14705 + C14706) * C2294) *
                C50828 +
            ((C11159 + C11160) * C50635 + (C11161 + C11162) * C2295 +
             (C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                 C2289 +
             (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                 C2294) *
                C50932) *
               C50967 +
           (((C10728 * C464 + C50933 * C478 + C10729 * C1849 + C50854 * C1857) *
                 C2294 +
             (C10728 * C479 + C50933 * C494 + C10729 * C1856 + C50854 * C1861) *
                 C2289 +
             (C11163 + C11164) * C2295 + (C11165 + C11166) * C50635) *
                C50932 +
            ((C15249 + C15250) * C2294 + (C15251 + C15252) * C2289 +
             (C14031 + C14032) * C2295 + (C14033 + C14034) * C50635) *
                C50828) *
               C2092) *
              C50919 +
          ((((C14706 + C14705) * C2294 + (C14704 + C14703) * C2289 +
             C14693 * C2295 + C14694 * C50635) *
                C50932 +
            ((C15907 + C15908) * C2294 + (C15909 + C15910) * C2289 +
             (C14707 + C14708) * C2295 + (C14709 + C14710) * C50635) *
                C50828) *
               C50967 -
           ((C13795 * C50635 + C13796 * C2295 + (C13821 + C13822) * C2289 +
             (C13823 + C13824) * C2294) *
                C50828 +
            (C13805 * C50635 + C13806 * C2295 + (C13820 + C13819) * C2289 +
             (C13818 + C13817) * C2294) *
                C50932) *
               C50966 -
           (((C10729 * C4582 + C50854 * C4590 + C10728 * C2672 +
              C50933 * C2676) *
                 C50635 +
             (C10729 * C4578 + C50854 * C4583 + C10728 * C2667 +
              C50933 * C2671) *
                 C2295 +
             (C10729 * C4584 + C50854 * C4591 + C10728 * C2670 +
              C50933 * C2675) *
                 C2289 +
             (C10729 * C4579 + C50854 * C4585 + C10728 * C2666 +
              C50933 * C2669) *
                 C2294) *
                C50828 +
            ((C14034 + C14033) * C50635 + (C14032 + C14031) * C2295 +
             (C15252 + C15251) * C2289 + (C15250 + C15249) * C2294) *
                C50932) *
               C2092) *
              C50729) *
         C50658) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C2294 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C2289 +
             (C10763 + C10764) * C2295 + (C10765 + C10766) * C50635) *
                C50932 +
            ((C13817 + C13818) * C2294 + (C13819 + C13820) * C2289 +
             C13793 * C2295 + C13794 * C50635) *
                C50828) *
               C1676 -
           ((C14683 * C50635 + C14684 * C2295 + (C14703 + C14704) * C2289 +
             (C14705 + C14706) * C2294) *
                C50828 +
            ((C11159 + C11160) * C50635 + (C11161 + C11162) * C2295 +
             (C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                 C2289 +
             (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                 C2294) *
                C50932) *
               C50757) *
              C278 +
          ((((C14706 + C14705) * C2294 + (C14704 + C14703) * C2289 +
             C14693 * C2295 + C14694 * C50635) *
                C50932 +
            ((C15907 + C15908) * C2294 + (C15909 + C15910) * C2289 +
             (C14707 + C14708) * C2295 + (C14709 + C14710) * C50635) *
                C50828) *
               C50757 -
           ((C13795 * C50635 + C13796 * C2295 + (C13821 + C13822) * C2289 +
             (C13823 + C13824) * C2294) *
                C50828 +
            (C13805 * C50635 + C13806 * C2295 + (C13820 + C13819) * C2289 +
             (C13818 + C13817) * C2294) *
                C50932) *
               C1676) *
              C279 +
          ((((C13824 + C13823) * C2294 + (C13822 + C13821) * C2289 +
             C13807 * C2295 + C13808 * C50635) *
                C50932 +
            ((C15043 + C15044) * C2294 + (C15045 + C15046) * C2289 +
             (C13825 + C13826) * C2295 + (C13827 + C13828) * C50635) *
                C50828) *
               C1676 -
           (((C10729 * C3655 + C50854 * C3659 + C10728 * C3202 +
              C50933 * C3206) *
                 C50635 +
             (C10729 * C3653 + C50854 * C3656 + C10728 * C3197 +
              C50933 * C3201) *
                 C2295 +
             (C10729 * C3657 + C50854 * C3660 + C10728 * C3200 +
              C50933 * C3205) *
                 C2289 +
             (C10729 * C3654 + C50854 * C3658 + C10728 * C3196 +
              C50933 * C3199) *
                 C2294) *
                C50828 +
            ((C14710 + C14709) * C50635 + (C14708 + C14707) * C2295 +
             (C15910 + C15909) * C2289 + (C15908 + C15907) * C2294) *
                C50932) *
               C50757) *
              C280) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C2294 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C2289 +
             (C10763 + C10764) * C2295 + (C10765 + C10766) * C50635) *
                C50932 +
            ((C13817 + C13818) * C2294 + (C13819 + C13820) * C2289 +
             C13793 * C2295 + C13794 * C50635) *
                C50828) *
               C1676 -
           ((C14683 * C50635 + C14684 * C2295 + (C14703 + C14704) * C2289 +
             (C14705 + C14706) * C2294) *
                C50828 +
            ((C11159 + C11160) * C50635 + (C11161 + C11162) * C2295 +
             (C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                 C2289 +
             (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                 C2294) *
                C50932) *
               C50757) *
              C50677 * C1027 +
          ((((C11162 + C11161) * C2294 + (C11160 + C11159) * C2289 +
             (C11158 + C11157) * C2295 + (C11156 + C11155) * C50635) *
                C50932 +
            (C14693 * C2294 + C14694 * C2289 + (C11705 + C11706) * C2295 +
             (C11707 + C11708) * C50635) *
                C50828) *
               C50757 -
           ((C11317 * C50635 + C11318 * C2295 + C13805 * C2289 +
             C13806 * C2294) *
                C50828 +
            ((C10770 + C10769) * C50635 + (C10768 + C10767) * C2295 +
             (C10766 + C10765) * C2289 + (C10764 + C10763) * C2294) *
                C50932) *
               C1676) *
              C50677 * C1028 +
          (((C10779 * C2294 + C10780 * C2289 + (C10774 + C10773) * C2295 +
             (C10772 + C10771) * C50635) *
                C50932 +
            (C14229 * C2294 + C14230 * C2289 + (C11327 + C11328) * C2295 +
             (C11329 + C11330) * C50635) *
                C50828) *
               C1676 -
           (((C10729 * C1219 + C50854 * C1227 + C10728 * C901 + C50933 * C907) *
                 C50635 +
             (C10729 * C1215 + C50854 * C1220 + C10728 * C892 + C50933 * C900) *
                 C2295 +
             (C11708 + C11707) * C2289 + (C11706 + C11705) * C2294) *
                C50828 +
            ((C11490 + C11489) * C50635 + (C11488 + C11487) * C2295 +
             C11477 * C2289 + C11478 * C2294) *
                C50932) *
               C50757) *
              C50677 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                C2294 +
            (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                C2289 +
            (C10763 + C10764) * C2295 + (C10765 + C10766) * C50635) *
               C50932 +
           ((C13817 + C13818) * C2294 + (C13819 + C13820) * C2289 +
            C13793 * C2295 + C13794 * C50635) *
               C50828) *
              C1842 -
          ((C14683 * C50635 + C14684 * C2295 + (C14703 + C14704) * C2289 +
            (C14705 + C14706) * C2294) *
               C50828 +
           ((C11159 + C11160) * C50635 + (C11161 + C11162) * C2295 +
            (C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                C2289 +
            (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                C2294) *
               C50932) *
              C1843 +
          (((C10728 * C464 + C50933 * C478 + C10729 * C1849 + C50854 * C1857) *
                C2294 +
            (C10728 * C479 + C50933 * C494 + C10729 * C1856 + C50854 * C1861) *
                C2289 +
            (C11163 + C11164) * C2295 + (C11165 + C11166) * C50635) *
               C50932 +
           ((C15249 + C15250) * C2294 + (C15251 + C15252) * C2289 +
            (C14031 + C14032) * C2295 + (C14033 + C14034) * C50635) *
               C50828) *
              C1844 -
          (((C10729 * C6550 + C50854 * C6554 + C10728 * C4586 +
             C50933 * C4592) *
                C50635 +
            (C10729 * C6548 + C50854 * C6551 + C10728 * C4580 +
             C50933 * C4587) *
                C2295 +
            (C10729 * C6552 + C50854 * C6555 + C10728 * C4588 +
             C50933 * C4593) *
                C2289 +
            (C10729 * C6549 + C50854 * C6553 + C10728 * C4581 +
             C50933 * C4589) *
                C2294) *
               C50828 +
           ((C10729 * C5572 + C50854 * C5576 + C10728 * C1854 +
             C50933 * C1860) *
                C50635 +
            (C10729 * C5567 + C50854 * C5571 + C10728 * C1848 +
             C50933 * C1855) *
                C2295 +
            (C10729 * C5570 + C50854 * C5575 + C10728 * C1856 +
             C50933 * C1861) *
                C2289 +
            (C10729 * C5566 + C50854 * C5569 + C10728 * C1849 +
             C50933 * C1857) *
                C2294) *
               C50932) *
              C1845) *
         C50677 * C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C2294 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C2289 +
             (C10763 + C10764) * C2295 + (C10765 + C10766) * C50635) *
                C50932 +
            ((C13817 + C13818) * C2294 + (C13819 + C13820) * C2289 +
             C13793 * C2295 + C13794 * C50635) *
                C50828) *
               C50966 -
           ((C14683 * C50635 + C14684 * C2295 + (C14703 + C14704) * C2289 +
             (C14705 + C14706) * C2294) *
                C50828 +
            ((C11159 + C11160) * C50635 + (C11161 + C11162) * C2295 +
             (C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                 C2289 +
             (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                 C2294) *
                C50932) *
               C50967 +
           (((C10728 * C464 + C50933 * C478 + C10729 * C1849 + C50854 * C1857) *
                 C2294 +
             (C10728 * C479 + C50933 * C494 + C10729 * C1856 + C50854 * C1861) *
                 C2289 +
             (C11163 + C11164) * C2295 + (C11165 + C11166) * C50635) *
                C50932 +
            ((C15249 + C15250) * C2294 + (C15251 + C15252) * C2289 +
             (C14031 + C14032) * C2295 + (C14033 + C14034) * C50635) *
                C50828) *
               C2092) *
              C50677 * C50911 +
          ((((C11162 + C11161) * C2294 + (C11160 + C11159) * C2289 +
             (C11158 + C11157) * C2295 + (C11156 + C11155) * C50635) *
                C50932 +
            (C14693 * C2294 + C14694 * C2289 + (C11705 + C11706) * C2295 +
             (C11707 + C11708) * C50635) *
                C50828) *
               C50967 -
           ((C11317 * C50635 + C11318 * C2295 + C13805 * C2289 +
             C13806 * C2294) *
                C50828 +
            ((C10770 + C10769) * C50635 + (C10768 + C10767) * C2295 +
             (C10766 + C10765) * C2289 + (C10764 + C10763) * C2294) *
                C50932) *
               C50966 -
           (((C10729 * C6137 + C50854 * C6139 + C10728 * C1221 +
              C50933 * C1228) *
                 C50635 +
             (C10729 * C6136 + C50854 * C6138 + C10728 * C1216 +
              C50933 * C1222) *
                 C2295 +
             (C14034 + C14033) * C2289 + (C14032 + C14031) * C2294) *
                C50828 +
            ((C11170 + C11169) * C50635 + (C11168 + C11167) * C2295 +
             (C11166 + C11165) * C2289 + (C11164 + C11163) * C2294) *
                C50932) *
               C2092) *
              C50677 * C50664)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C2294 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C2289 +
             (C10763 + C10764) * C2295 + (C10765 + C10766) * C50635) *
                C50932 +
            ((C13817 + C13818) * C2294 + (C13819 + C13820) * C2289 +
             C13793 * C2295 + C13794 * C50635) *
                C50828) *
               C1676 -
           ((C14683 * C50635 + C14684 * C2295 + (C14703 + C14704) * C2289 +
             (C14705 + C14706) * C2294) *
                C50828 +
            ((C11159 + C11160) * C50635 + (C11161 + C11162) * C2295 +
             (C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                 C2289 +
             (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                 C2294) *
                C50932) *
               C50757) *
              C50677 * C1027 +
          ((((C11162 + C11161) * C2294 + (C11160 + C11159) * C2289 +
             (C11158 + C11157) * C2295 + (C11156 + C11155) * C50635) *
                C50932 +
            (C14693 * C2294 + C14694 * C2289 + (C11705 + C11706) * C2295 +
             (C11707 + C11708) * C50635) *
                C50828) *
               C50757 -
           ((C11317 * C50635 + C11318 * C2295 + C13805 * C2289 +
             C13806 * C2294) *
                C50828 +
            ((C10770 + C10769) * C50635 + (C10768 + C10767) * C2295 +
             (C10766 + C10765) * C2289 + (C10764 + C10763) * C2294) *
                C50932) *
               C1676) *
              C50677 * C1028 +
          (((C10779 * C2294 + C10780 * C2289 + (C10774 + C10773) * C2295 +
             (C10772 + C10771) * C50635) *
                C50932 +
            (C14229 * C2294 + C14230 * C2289 + (C11327 + C11328) * C2295 +
             (C11329 + C11330) * C50635) *
                C50828) *
               C1676 -
           (((C10729 * C1219 + C50854 * C1227 + C10728 * C901 + C50933 * C907) *
                 C50635 +
             (C10729 * C1215 + C50854 * C1220 + C10728 * C892 + C50933 * C900) *
                 C2295 +
             (C11708 + C11707) * C2289 + (C11706 + C11705) * C2294) *
                C50828 +
            ((C11490 + C11489) * C50635 + (C11488 + C11487) * C2295 +
             C11477 * C2289 + C11478 * C2294) *
                C50932) *
               C50757) *
              C50677 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C2294 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C2289 +
             (C10763 + C10764) * C2295 + (C10765 + C10766) * C50635) *
                C50932 +
            ((C13817 + C13818) * C2294 + (C13819 + C13820) * C2289 +
             C13793 * C2295 + C13794 * C50635) *
                C50828) *
               C1676 -
           ((C14683 * C50635 + C14684 * C2295 + (C14703 + C14704) * C2289 +
             (C14705 + C14706) * C2294) *
                C50828 +
            ((C11159 + C11160) * C50635 + (C11161 + C11162) * C2295 +
             (C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                 C2289 +
             (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                 C2294) *
                C50932) *
               C50757) *
              C278 +
          ((((C14706 + C14705) * C2294 + (C14704 + C14703) * C2289 +
             C14693 * C2295 + C14694 * C50635) *
                C50932 +
            ((C15907 + C15908) * C2294 + (C15909 + C15910) * C2289 +
             (C14707 + C14708) * C2295 + (C14709 + C14710) * C50635) *
                C50828) *
               C50757 -
           ((C13795 * C50635 + C13796 * C2295 + (C13821 + C13822) * C2289 +
             (C13823 + C13824) * C2294) *
                C50828 +
            (C13805 * C50635 + C13806 * C2295 + (C13820 + C13819) * C2289 +
             (C13818 + C13817) * C2294) *
                C50932) *
               C1676) *
              C279 +
          ((((C13824 + C13823) * C2294 + (C13822 + C13821) * C2289 +
             C13807 * C2295 + C13808 * C50635) *
                C50932 +
            ((C15043 + C15044) * C2294 + (C15045 + C15046) * C2289 +
             (C13825 + C13826) * C2295 + (C13827 + C13828) * C50635) *
                C50828) *
               C1676 -
           (((C10729 * C3655 + C50854 * C3659 + C10728 * C3202 +
              C50933 * C3206) *
                 C50635 +
             (C10729 * C3653 + C50854 * C3656 + C10728 * C3197 +
              C50933 * C3201) *
                 C2295 +
             (C10729 * C3657 + C50854 * C3660 + C10728 * C3200 +
              C50933 * C3205) *
                 C2289 +
             (C10729 * C3654 + C50854 * C3658 + C10728 * C3196 +
              C50933 * C3199) *
                 C2294) *
                C50828 +
            ((C14710 + C14709) * C50635 + (C14708 + C14707) * C2295 +
             (C15910 + C15909) * C2289 + (C15908 + C15907) * C2294) *
                C50932) *
               C50757) *
              C280) *
         C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C2294 +
             (C117 * C130 + C50790 * C143) * C2289 + C171 * C2295 +
             C172 * C50635) *
                C2291 +
            (C2504 + C2505 + C2459 + C2460) * C2292 + C2520 * C2293) *
               C50693 * C50919 -
           ((C2508 + C2509 + C2510 + C2511) * C2293 +
            (C2466 + C2465 + C2507 + C2506) * C2292 +
            (C2460 + C2459 + C2505 + C2504) * C2291) *
               C50693 * C50729) *
              C50962 +
          (((C2479 + C2480 + C2481 + C2482) * C2291 +
            (C2483 + C2484 + C2485 + C2486) * C2292 +
            (C2512 + C2513 + C2514 + C2515) * C2293) *
               C50693 * C50729 -
           (C2518 * C2293 + (C2482 + C2481 + C2480 + C2479) * C2292 +
            (C174 * C50635 + C173 * C2295 + C172 * C2289 + C171 * C2294) *
                C2291) *
               C50693 * C50919) *
              C50963 +
          (((C173 * C2294 + C174 * C2289 + C175 * C2295 + C176 * C50635) *
                C2291 +
            (C2843 + C2844 + C2845 + C2846) * C2292 +
            (C2847 + C2848 + C2849 + C2850) * C2293) *
               C50693 * C50919 -
           (((C117 * C1105 + C50790 * C1113) * C50635 +
             (C117 * C1101 + C50790 * C1106) * C2295 + C2502 * C2289 +
             C2501 * C2294) *
                C2293 +
            (C2850 + C2849 + C2848 + C2847) * C2292 +
            (C2846 + C2845 + C2844 + C2843) * C2291) *
               C50693 * C50729) *
              C638)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C118 +
            (C117 * C130 + C50790 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50779 * C50693 * C50919 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50790 * C316) * C106 +
            (C117 * C286 + C50790 * C300) * C118) *
               C50779 * C50693 * C50729) *
              C50962 +
          ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
            C349 * C120 + C348 * C108 + C648 * C121 + C649 * C109) *
               C50779 * C50693 * C50729 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50779 * C50693 * C50919) *
              C50963 +
          ((C173 * C118 + C174 * C106 + C175 * C119 + C176 * C107 +
            C178 * C120 + C177 * C108 + C179 * C121 + C180 * C109) *
               C50779 * C50693 * C50919 -
           ((C117 * C640 + C50790 * C642) * C109 +
            (C117 * C639 + C50790 * C641) * C121 + C649 * C108 + C648 * C120 +
            C348 * C107 + C349 * C119 + C350 * C106 + C351 * C118) *
               C50779 * C50693 * C50729) *
              C638)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5181 * C122 + C5178 * C129 + C5182 * C463 + C5179 * C477 +
             C5183 * C464 + C5180 * C478) *
                C2294 +
            (C5181 * C130 + C5178 * C143 + C5182 * C476 + C5179 * C493 +
             C5183 * C479 + C5180 * C494) *
                C2289 +
            (C5221 + C5222 + C5223) * C2295 +
            (C5224 + C5225 + C5226) * C50635) *
               C50779 * C50693 * C50919 -
           ((C5409 + C5410 + C5411) * C50635 + (C5412 + C5413 + C5414) * C2295 +
            (C5183 * C1225 + C5180 * C1230 + C5182 * C895 + C5179 * C904 +
             C5181 * C299 + C5178 * C316) *
                C2289 +
            (C5183 * C1218 + C5180 * C1226 + C5182 * C889 + C5179 * C894 +
             C5181 * C286 + C5178 * C300) *
                C2294) *
               C50779 * C50693 * C50729) *
              C50962 +
          (((C5414 + C5413 + C5412) * C2294 + (C5411 + C5410 + C5409) * C2289 +
            (C5773 + C5774 + C5775) * C2295 +
            (C5776 + C5777 + C5778) * C50635) *
               C50779 * C50693 * C50729 -
           ((C5227 + C5228 + C5229) * C50635 + (C5230 + C5231 + C5232) * C2295 +
            (C5226 + C5225 + C5224) * C2289 + (C5223 + C5222 + C5221) * C2294) *
               C50779 * C50693 * C50919) *
              C50963 +
          (((C5232 + C5231 + C5230) * C2294 + (C5229 + C5228 + C5227) * C2289 +
            (C5233 + C5234 + C5235) * C2295 +
            (C5236 + C5237 + C5238) * C50635) *
               C50779 * C50693 * C50919 -
           ((C5183 * C1219 + C5180 * C1227 + C5182 * C901 + C5179 * C907 +
             C5181 * C293 + C5178 * C313) *
                C50635 +
            (C5183 * C1215 + C5180 * C1220 + C5182 * C892 + C5179 * C900 +
             C5181 * C283 + C5178 * C294) *
                C2295 +
            (C5778 + C5777 + C5776) * C2289 + (C5775 + C5774 + C5773) * C2294) *
               C50779 * C50693 * C50729) *
              C638)) /
            (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50790 * C129) * C2294 +
              (C117 * C130 + C50790 * C143) * C2289 + C171 * C2295 +
              C172 * C50635) *
                 C2291 +
             (C2504 + C2505 + C2459 + C2460) * C2292 + C2520 * C2293) *
                C50920 -
            ((C3209 + C3210 + C3239 + C3240) * C2293 +
             (C3215 + C3216 + C3241 + C3242) * C2292 +
             (C529 * C50635 + C530 * C2295 +
              (C117 * C476 + C50790 * C493) * C2289 +
              (C117 * C463 + C50790 * C477) * C2294) *
                 C2291) *
                C50757) *
               C50919 +
           (((C3242 + C3241 + C3216 + C3215) * C2291 +
             (C3240 + C3239 + C3210 + C3209) * C2292 +
             ((C117 * C3196 + C50790 * C3199) * C2294 +
              (C117 * C3200 + C50790 * C3205) * C2289 + C3237 * C2295 +
              C3238 * C50635) *
                 C2293) *
                C50757 -
            ((C2508 + C2509 + C2510 + C2511) * C2293 +
             (C2466 + C2465 + C2507 + C2506) * C2292 +
             (C2460 + C2459 + C2505 + C2504) * C2291) *
                C50920) *
               C50729) *
              C281 +
          ((((C530 * C2294 + C529 * C2289 + C528 * C2295 + C527 * C50635) *
                 C2291 +
             (C3225 + C3226 + C3227 + C3228) * C2292 +
             (C3229 + C3230 + C3231 + C3232) * C2293) *
                C50757 -
            (C2518 * C2293 + (C2482 + C2481 + C2480 + C2479) * C2292 +
             (C174 * C50635 + C173 * C2295 + C172 * C2289 + C171 * C2294) *
                 C2291) *
                C50920) *
               C50919 +
           (((C2479 + C2480 + C2481 + C2482) * C2291 +
             (C2483 + C2484 + C2485 + C2486) * C2292 +
             (C2512 + C2513 + C2514 + C2515) * C2293) *
                C50920 -
            (((C117 * C3203 + C50790 * C3207) * C50635 +
              (C117 * C3198 + C50790 * C3204) * C2295 + C3238 * C2289 +
              C3237 * C2294) *
                 C2293 +
             (C3232 + C3231 + C3230 + C3229) * C2292 +
             (C3228 + C3227 + C3226 + C3225) * C2291) *
                C50757) *
               C50729) *
              C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C118 +
             (C117 * C130 + C50790 * C143) * C106 + C171 * C119 + C172 * C107 +
             C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
                C50779 * C50920 -
            (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
             C529 * C107 + C530 * C119 + (C117 * C476 + C50790 * C493) * C106 +
             (C117 * C463 + C50790 * C477) * C118) *
                C50779 * C50757) *
               C50919 +
           (((C117 * C889 + C50790 * C894) * C118 +
             (C117 * C895 + C50790 * C904) * C106 + C922 * C119 + C923 * C107 +
             C924 * C120 + C925 * C108 + C926 * C121 + C927 * C109) *
                C50779 * C50757 -
            (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
             C352 * C107 + C353 * C119 + (C117 * C299 + C50790 * C316) * C106 +
             (C117 * C286 + C50790 * C300) * C118) *
                C50779 * C50920) *
               C50729) *
              C281 +
          (((C530 * C118 + C529 * C106 + C528 * C119 + C527 * C107 +
             C526 * C120 + C525 * C108 + C758 * C121 + C759 * C109) *
                C50779 * C50757 -
            (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
             C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
                C50779 * C50920) *
               C50919 +
           ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
             C349 * C120 + C348 * C108 + C648 * C121 + C649 * C109) *
                C50779 * C50920 -
            ((C117 * C902 + C50790 * C908) * C109 +
             (C117 * C893 + C50790 * C903) * C121 + C927 * C108 + C926 * C120 +
             C925 * C107 + C924 * C119 + C923 * C106 + C922 * C118) *
                C50779 * C50757) *
               C50729) *
              C50664)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5181 * C122 + C5178 * C129 + C5182 * C463 + C5179 * C477 +
              C5183 * C464 + C5180 * C478) *
                 C2294 +
             (C5181 * C130 + C5178 * C143 + C5182 * C476 + C5179 * C493 +
              C5183 * C479 + C5180 * C494) *
                 C2289 +
             (C5221 + C5222 + C5223) * C2295 +
             (C5224 + C5225 + C5226) * C50635) *
                C50779 * C50920 -
            ((C5603 + C5604 + C5605) * C50635 +
             (C5606 + C5607 + C5608) * C2295 +
             (C5183 * C1856 + C5180 * C1861 + C5182 * C479 + C5179 * C494 +
              C5181 * C476 + C5178 * C493) *
                 C2289 +
             (C5183 * C1849 + C5180 * C1857 + C5182 * C464 + C5179 * C478 +
              C5181 * C463 + C5178 * C477) *
                 C2294) *
                C50779 * C50757) *
               C50919 +
           (((C5181 * C889 + C5178 * C894 + C5182 * C1218 + C5179 * C1226 +
              C5183 * C4581 + C5180 * C4589) *
                 C2294 +
             (C5181 * C895 + C5178 * C904 + C5182 * C1225 + C5179 * C1230 +
              C5183 * C4588 + C5180 * C4593) *
                 C2289 +
             (C6153 + C6154 + C6155) * C2295 +
             (C6156 + C6157 + C6158) * C50635) *
                C50779 * C50757 -
            ((C5409 + C5410 + C5411) * C50635 +
             (C5412 + C5413 + C5414) * C2295 +
             (C5183 * C1225 + C5180 * C1230 + C5182 * C895 + C5179 * C904 +
              C5181 * C299 + C5178 * C316) *
                 C2289 +
             (C5183 * C1218 + C5180 * C1226 + C5182 * C889 + C5179 * C894 +
              C5181 * C286 + C5178 * C300) *
                 C2294) *
                C50779 * C50920) *
               C50729) *
              C281 +
          ((((C5608 + C5607 + C5606) * C2294 + (C5605 + C5604 + C5603) * C2289 +
             (C5937 + C5938 + C5939) * C2295 +
             (C5940 + C5941 + C5942) * C50635) *
                C50779 * C50757 -
            ((C5227 + C5228 + C5229) * C50635 +
             (C5230 + C5231 + C5232) * C2295 + (C5226 + C5225 + C5224) * C2289 +
             (C5223 + C5222 + C5221) * C2294) *
                C50779 * C50920) *
               C50919 +
           (((C5414 + C5413 + C5412) * C2294 + (C5411 + C5410 + C5409) * C2289 +
             (C5773 + C5774 + C5775) * C2295 +
             (C5776 + C5777 + C5778) * C50635) *
                C50779 * C50920 -
            ((C5183 * C6137 + C5180 * C6139 + C5182 * C1221 + C5179 * C1228 +
              C5181 * C899 + C5178 * C906) *
                 C50635 +
             (C5183 * C6136 + C5180 * C6138 + C5182 * C1216 + C5179 * C1222 +
              C5181 * C891 + C5178 * C898) *
                 C2295 +
             (C6158 + C6157 + C6156) * C2289 +
             (C6155 + C6154 + C6153) * C2294) *
                C50779 * C50757) *
               C50729) *
              C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C117 * C122 + C50790 * C129) * C118 +
               (C117 * C130 + C50790 * C143) * C106 + C171 * C119 +
               C172 * C107 + C173 * C120 + C174 * C108 + C175 * C121 +
               C176 * C109) *
                  C50779 * C50693 * C50677 * C113 -
              (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
               C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
                  C50779 * C50693 * C50677 * C114 +
              (C173 * C118 + C174 * C106 + C175 * C119 + C176 * C107 +
               C178 * C120 + C177 * C108 + C179 * C121 + C180 * C109) *
                  C50779 * C50693 * C50677 * C115 -
              ((C117 * C141 + C50790 * C149) * C109 +
               (C117 * C128 + C50790 * C142) * C121 + C180 * C108 +
               C179 * C120 + C177 * C107 + C178 * C119 + C176 * C106 +
               C175 * C118) *
                  C50779 * C50693 * C50677 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C122 + C50790 * C129) * C118 +
                (C117 * C130 + C50790 * C143) * C106 + C171 * C119 +
                C172 * C107 + C173 * C120 + C174 * C108 + C175 * C121 +
                C176 * C109) *
                   C50779 * C50693 * C278 -
               (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
                C352 * C107 + C353 * C119 +
                (C117 * C299 + C50790 * C316) * C106 +
                (C117 * C286 + C50790 * C300) * C118) *
                   C50779 * C50693 * C279 +
               ((C117 * C287 + C50790 * C301) * C118 +
                (C117 * C302 + C50790 * C317) * C106 + C354 * C119 +
                C355 * C107 + C356 * C120 + C357 * C108 + C358 * C121 +
                C359 * C109) *
                   C50779 * C50693 * C280) *
                  C281 +
              ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
                C349 * C120 + C348 * C108 +
                (C117 * C291 + C50790 * C309) * C121 +
                (C117 * C310 + C50790 * C321) * C109) *
                   C50779 * C50693 * C279 -
               (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
                C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
                   C50779 * C50693 * C278 -
               ((C117 * C311 + C50790 * C322) * C109 +
                (C117 * C292 + C50790 * C312) * C121 + C359 * C108 +
                C358 * C120 + C357 * C107 + C356 * C119 + C355 * C106 +
                C354 * C118) *
                   C50779 * C50693 * C280) *
                  C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C118 +
            (C117 * C130 + C50790 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50779 * C457 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50790 * C493) * C106 +
            (C117 * C463 + C50790 * C477) * C118) *
               C50779 * C458 +
           ((C117 * C464 + C50790 * C478) * C118 +
            (C117 * C479 + C50790 * C494) * C106 + C531 * C119 + C532 * C107 +
            C533 * C120 + C534 * C108 + C535 * C121 + C536 * C109) *
               C50779 * C459) *
              C50677 * C281 +
          ((C530 * C118 + C529 * C106 + C528 * C119 + C527 * C107 +
            C526 * C120 + C525 * C108 + (C117 * C468 + C50790 * C486) * C121 +
            (C117 * C487 + C50790 * C498) * C109) *
               C50779 * C458 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50779 * C457 -
           ((C117 * C488 + C50790 * C499) * C109 +
            (C117 * C469 + C50790 * C489) * C121 + C536 * C108 + C535 * C120 +
            C534 * C107 + C533 * C119 + C532 * C106 + C531 * C118) *
               C50779 * C459) *
              C50677 * C50664)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C2294 +
            (C117 * C130 + C50790 * C143) * C2289 + C171 * C2295 +
            C172 * C50635) *
               C2291 +
           ((C117 * C286 + C50790 * C300) * C2294 +
            (C117 * C299 + C50790 * C316) * C2289 + C353 * C2295 +
            C352 * C50635) *
               C2292 +
           ((C117 * C287 + C50790 * C301) * C2294 +
            (C117 * C302 + C50790 * C317) * C2289 + C354 * C2295 +
            C355 * C50635) *
               C2293) *
              C50693 * C50677 * C113 -
          ((C357 * C50635 + C356 * C2295 + C355 * C2289 + C354 * C2294) *
               C2293 +
           (C350 * C50635 + C351 * C2295 + C352 * C2289 + C353 * C2294) *
               C2292 +
           (C174 * C50635 + C173 * C2295 + C172 * C2289 + C171 * C2294) *
               C2291) *
              C50693 * C50677 * C114 +
          ((C173 * C2294 + C174 * C2289 + C175 * C2295 + C176 * C50635) *
               C2291 +
           (C351 * C2294 + C350 * C2289 + C349 * C2295 + C348 * C50635) *
               C2292 +
           (C356 * C2294 + C357 * C2289 + C358 * C2295 + C359 * C50635) *
               C2293) *
              C50693 * C50677 * C115 -
          (((C117 * C311 + C50790 * C322) * C50635 +
            (C117 * C292 + C50790 * C312) * C2295 + C359 * C2289 +
            C358 * C2294) *
               C2293 +
           (C649 * C50635 + C648 * C2295 + C348 * C2289 + C349 * C2294) *
               C2292 +
           (C177 * C50635 + C178 * C2295 + C176 * C2289 + C175 * C2294) *
               C2291) *
              C50693 * C50677 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C2294 +
             (C117 * C130 + C50790 * C143) * C2289 + C171 * C2295 +
             C172 * C50635) *
                C2291 +
            (C2504 + C2505 + C2459 + C2460) * C2292 + C2520 * C2293) *
               C50693 * C278 -
           ((C2508 + C2509 + C2510 + C2511) * C2293 +
            (C2466 + C2465 + C2507 + C2506) * C2292 +
            (C2460 + C2459 + C2505 + C2504) * C2291) *
               C50693 * C279 +
           (C2520 * C2291 + (C2511 + C2510 + C2509 + C2508) * C2292 +
            ((C117 * C2442 + C50790 * C2445) * C2294 +
             (C117 * C2446 + C50790 * C2451) * C2289 + C2499 * C2295 +
             C2500 * C50635) *
                C2293) *
               C50693 * C280) *
              C281 +
          (((C2479 + C2480 + C2481 + C2482) * C2291 +
            (C2483 + C2484 + C2485 + C2486) * C2292 +
            (C2512 + C2513 + C2514 + C2515) * C2293) *
               C50693 * C279 -
           (C2518 * C2293 + (C2482 + C2481 + C2480 + C2479) * C2292 +
            (C174 * C50635 + C173 * C2295 + C172 * C2289 + C171 * C2294) *
                C2291) *
               C50693 * C278 -
           (((C117 * C2449 + C50790 * C2453) * C50635 +
             (C117 * C2444 + C50790 * C2450) * C2295 + C2500 * C2289 +
             C2499 * C2294) *
                C2293 +
            (C2515 + C2514 + C2513 + C2512) * C2292 + C2518 * C2291) *
               C50693 * C280) *
              C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C2294 +
             (C117 * C130 + C50790 * C143) * C2289 + C171 * C2295 +
             C172 * C50635) *
                C2291 +
            (C2504 + C2505 + C2459 + C2460) * C2292 + C2520 * C2293) *
               C457 -
           ((C2691 * C50635 + C2692 * C2295 +
             (C117 * C1572 + C50790 * C1577) * C2289 +
             (C117 * C1565 + C50790 * C1573) * C2294) *
                C2293 +
            (C923 * C50635 + C922 * C2295 +
             (C117 * C895 + C50790 * C904) * C2289 +
             (C117 * C889 + C50790 * C894) * C2294) *
                C2292 +
            (C529 * C50635 + C530 * C2295 +
             (C117 * C476 + C50790 * C493) * C2289 +
             (C117 * C463 + C50790 * C477) * C2294) *
                C2291) *
               C458 +
           (((C117 * C464 + C50790 * C478) * C2294 +
             (C117 * C479 + C50790 * C494) * C2289 + C531 * C2295 +
             C532 * C50635) *
                C2291 +
            ((C117 * C1218 + C50790 * C1226) * C2294 +
             (C117 * C1225 + C50790 * C1230) * C2289 + C2693 * C2295 +
             C2694 * C50635) *
                C2292 +
            ((C117 * C2666 + C50790 * C2669) * C2294 +
             (C117 * C2670 + C50790 * C2675) * C2289 + C2695 * C2295 +
             C2696 * C50635) *
                C2293) *
               C459) *
              C50677 * C281 +
          (((C530 * C2294 + C529 * C2289 + C528 * C2295 + C527 * C50635) *
                C2291 +
            (C922 * C2294 + C923 * C2289 + C924 * C2295 + C925 * C50635) *
                C2292 +
            (C2692 * C2294 + C2691 * C2289 +
             (C117 * C1563 + C50790 * C1569) * C2295 +
             (C117 * C1568 + C50790 * C1575) * C50635) *
                C2293) *
               C458 -
           (C2518 * C2293 + (C2482 + C2481 + C2480 + C2479) * C2292 +
            (C174 * C50635 + C173 * C2295 + C172 * C2289 + C171 * C2294) *
                C2291) *
               C457 -
           (((C117 * C2673 + C50790 * C2677) * C50635 +
             (C117 * C2668 + C50790 * C2674) * C2295 + C2696 * C2289 +
             C2695 * C2294) *
                C2293 +
            ((C117 * C1221 + C50790 * C1228) * C50635 +
             (C117 * C1216 + C50790 * C1222) * C2295 + C2694 * C2289 +
             C2693 * C2294) *
                C2292 +
            (C534 * C50635 + C533 * C2295 + C532 * C2289 + C531 * C2294) *
                C2291) *
               C459) *
              C50677 * C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C5181 * C122 + C5178 * C129 + C5182 * C463 + C5179 * C477 +
            C5183 * C464 + C5180 * C478) *
               C2294 +
           (C5181 * C130 + C5178 * C143 + C5182 * C476 + C5179 * C493 +
            C5183 * C479 + C5180 * C494) *
               C2289 +
           (C5221 + C5222 + C5223) * C2295 + (C5224 + C5225 + C5226) * C50635) *
              C50779 * C50693 * C50677 * C113 -
          ((C5227 + C5228 + C5229) * C50635 + (C5230 + C5231 + C5232) * C2295 +
           (C5226 + C5225 + C5224) * C2289 + (C5223 + C5222 + C5221) * C2294) *
              C50779 * C50693 * C50677 * C114 +
          ((C5232 + C5231 + C5230) * C2294 + (C5229 + C5228 + C5227) * C2289 +
           (C5233 + C5234 + C5235) * C2295 + (C5236 + C5237 + C5238) * C50635) *
              C50779 * C50693 * C50677 * C115 -
          ((C5183 * C488 + C5180 * C499 + C5182 * C487 + C5179 * C498 +
            C5181 * C137 + C5178 * C147) *
               C50635 +
           (C5183 * C469 + C5180 * C489 + C5182 * C468 + C5179 * C486 +
            C5181 * C126 + C5178 * C138) *
               C2295 +
           (C5238 + C5237 + C5236) * C2289 + (C5235 + C5234 + C5233) * C2294) *
              C50779 * C50693 * C50677 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5181 * C122 + C5178 * C129 + C5182 * C463 + C5179 * C477 +
             C5183 * C464 + C5180 * C478) *
                C2294 +
            (C5181 * C130 + C5178 * C143 + C5182 * C476 + C5179 * C493 +
             C5183 * C479 + C5180 * C494) *
                C2289 +
            (C5221 + C5222 + C5223) * C2295 +
            (C5224 + C5225 + C5226) * C50635) *
               C50779 * C50693 * C278 -
           ((C5409 + C5410 + C5411) * C50635 + (C5412 + C5413 + C5414) * C2295 +
            (C5183 * C1225 + C5180 * C1230 + C5182 * C895 + C5179 * C904 +
             C5181 * C299 + C5178 * C316) *
                C2289 +
            (C5183 * C1218 + C5180 * C1226 + C5182 * C889 + C5179 * C894 +
             C5181 * C286 + C5178 * C300) *
                C2294) *
               C50779 * C50693 * C279 +
           ((C5181 * C287 + C5178 * C301 + C5182 * C1565 + C5179 * C1573 +
             C5183 * C2666 + C5180 * C2669) *
                C2294 +
            (C5181 * C302 + C5178 * C317 + C5182 * C1572 + C5179 * C1577 +
             C5183 * C2670 + C5180 * C2675) *
                C2289 +
            (C5415 + C5416 + C5417) * C2295 +
            (C5418 + C5419 + C5420) * C50635) *
               C50779 * C50693 * C280) *
              C281 +
          (((C5414 + C5413 + C5412) * C2294 + (C5411 + C5410 + C5409) * C2289 +
            (C5181 * C284 + C5178 * C296 + C5182 * C891 + C5179 * C898 +
             C5183 * C1216 + C5180 * C1222) *
                C2295 +
            (C5181 * C295 + C5178 * C314 + C5182 * C899 + C5179 * C906 +
             C5183 * C1221 + C5180 * C1228) *
                C50635) *
               C50779 * C50693 * C279 -
           ((C5227 + C5228 + C5229) * C50635 + (C5230 + C5231 + C5232) * C2295 +
            (C5226 + C5225 + C5224) * C2289 + (C5223 + C5222 + C5221) * C2294) *
               C50779 * C50693 * C278 -
           ((C5183 * C2673 + C5180 * C2677 + C5182 * C1568 + C5179 * C1575 +
             C5181 * C306 + C5178 * C319) *
                C50635 +
            (C5183 * C2668 + C5180 * C2674 + C5182 * C1563 + C5179 * C1569 +
             C5181 * C289 + C5178 * C305) *
                C2295 +
            (C5420 + C5419 + C5418) * C2289 + (C5417 + C5416 + C5415) * C2294) *
               C50779 * C50693 * C280) *
              C50664)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C5181 * C122 + C5178 * C129 + C5182 * C463 + C5179 * C477 +
             C5183 * C464 + C5180 * C478) *
                C2294 +
            (C5181 * C130 + C5178 * C143 + C5182 * C476 + C5179 * C493 +
             C5183 * C479 + C5180 * C494) *
                C2289 +
            (C5221 + C5222 + C5223) * C2295 +
            (C5224 + C5225 + C5226) * C50635) *
               C50779 * C457 -
           ((C5603 + C5604 + C5605) * C50635 + (C5606 + C5607 + C5608) * C2295 +
            (C5183 * C1856 + C5180 * C1861 + C5182 * C479 + C5179 * C494 +
             C5181 * C476 + C5178 * C493) *
                C2289 +
            (C5183 * C1849 + C5180 * C1857 + C5182 * C464 + C5179 * C478 +
             C5181 * C463 + C5178 * C477) *
                C2294) *
               C50779 * C458 +
           ((C5181 * C464 + C5178 * C478 + C5182 * C1849 + C5179 * C1857 +
             C5183 * C5566 + C5180 * C5569) *
                C2294 +
            (C5181 * C479 + C5178 * C494 + C5182 * C1856 + C5179 * C1861 +
             C5183 * C5570 + C5180 * C5575) *
                C2289 +
            (C5609 + C5610 + C5611) * C2295 +
            (C5612 + C5613 + C5614) * C50635) *
               C50779 * C459) *
              C50677 * C281 +
          (((C5608 + C5607 + C5606) * C2294 + (C5605 + C5604 + C5603) * C2289 +
            (C5181 * C461 + C5178 * C473 + C5182 * C466 + C5179 * C482 +
             C5183 * C1847 + C5180 * C1853) *
                C2295 +
            (C5181 * C472 + C5178 * C491 + C5182 * C483 + C5179 * C496 +
             C5183 * C1852 + C5180 * C1859) *
                C50635) *
               C50779 * C458 -
           ((C5227 + C5228 + C5229) * C50635 + (C5230 + C5231 + C5232) * C2295 +
            (C5226 + C5225 + C5224) * C2289 + (C5223 + C5222 + C5221) * C2294) *
               C50779 * C457 -
           ((C5183 * C5573 + C5180 * C5577 + C5182 * C1852 + C5179 * C1859 +
             C5181 * C483 + C5178 * C496) *
                C50635 +
            (C5183 * C5568 + C5180 * C5574 + C5182 * C1847 + C5179 * C1853 +
             C5181 * C466 + C5178 * C482) *
                C2295 +
            (C5614 + C5613 + C5612) * C2289 + (C5611 + C5610 + C5609) * C2294) *
               C50779 * C459) *
              C50677 * C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C2294 +
             (C117 * C130 + C50790 * C143) * C2289 + C171 * C2295 +
             C172 * C50635) *
                C2291 +
            (C2504 + C2505 + C2459 + C2460) * C2292 + C2520 * C2293) *
               C50920 -
           ((C2691 * C50635 + C2692 * C2295 +
             (C117 * C1572 + C50790 * C1577) * C2289 +
             (C117 * C1565 + C50790 * C1573) * C2294) *
                C2293 +
            (C923 * C50635 + C922 * C2295 +
             (C117 * C895 + C50790 * C904) * C2289 +
             (C117 * C889 + C50790 * C894) * C2294) *
                C2292 +
            (C529 * C50635 + C530 * C2295 +
             (C117 * C476 + C50790 * C493) * C2289 +
             (C117 * C463 + C50790 * C477) * C2294) *
                C2291) *
               C50757) *
              C50677 * C50962 +
          (((C530 * C2294 + C529 * C2289 + C528 * C2295 + C527 * C50635) *
                C2291 +
            (C922 * C2294 + C923 * C2289 + C924 * C2295 + C925 * C50635) *
                C2292 +
            (C2692 * C2294 + C2691 * C2289 + C3001 * C2295 + C3002 * C50635) *
                C2293) *
               C50757 -
           (C2518 * C2293 + (C2482 + C2481 + C2480 + C2479) * C2292 +
            (C174 * C50635 + C173 * C2295 + C172 * C2289 + C171 * C2294) *
                C2291) *
               C50920) *
              C50677 * C50963 +
          (((C173 * C2294 + C174 * C2289 + C175 * C2295 + C176 * C50635) *
                C2291 +
            (C2843 + C2844 + C2845 + C2846) * C2292 +
            (C2847 + C2848 + C2849 + C2850) * C2293) *
               C50920 -
           (((C117 * C1566 + C50790 * C1574) * C50635 +
             (C117 * C1562 + C50790 * C1567) * C2295 + C3002 * C2289 +
             C3001 * C2294) *
                C2293 +
            (C927 * C50635 + C926 * C2295 + C925 * C2289 + C924 * C2294) *
                C2292 +
            (C525 * C50635 + C526 * C2295 + C527 * C2289 + C528 * C2294) *
                C2291) *
               C50757) *
              C50677 * C638)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C118 +
            (C117 * C130 + C50790 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50779 * C50920 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50790 * C493) * C106 +
            (C117 * C463 + C50790 * C477) * C118) *
               C50779 * C50757) *
              C50677 * C50962 +
          ((C530 * C118 + C529 * C106 + C528 * C119 + C527 * C107 +
            C526 * C120 + C525 * C108 + C758 * C121 + C759 * C109) *
               C50779 * C50757 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50779 * C50920) *
              C50677 * C50963 +
          ((C173 * C118 + C174 * C106 + C175 * C119 + C176 * C107 +
            C178 * C120 + C177 * C108 + C179 * C121 + C180 * C109) *
               C50779 * C50920 -
           ((C117 * C750 + C50790 * C752) * C109 +
            (C117 * C749 + C50790 * C751) * C121 + C759 * C108 + C758 * C120 +
            C525 * C107 + C526 * C119 + C527 * C106 + C528 * C118) *
               C50779 * C50757) *
              C50677 * C638)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5181 * C122 + C5178 * C129 + C5182 * C463 + C5179 * C477 +
             C5183 * C464 + C5180 * C478) *
                C2294 +
            (C5181 * C130 + C5178 * C143 + C5182 * C476 + C5179 * C493 +
             C5183 * C479 + C5180 * C494) *
                C2289 +
            (C5221 + C5222 + C5223) * C2295 +
            (C5224 + C5225 + C5226) * C50635) *
               C50779 * C50920 -
           ((C5603 + C5604 + C5605) * C50635 + (C5606 + C5607 + C5608) * C2295 +
            (C5183 * C1856 + C5180 * C1861 + C5182 * C479 + C5179 * C494 +
             C5181 * C476 + C5178 * C493) *
                C2289 +
            (C5183 * C1849 + C5180 * C1857 + C5182 * C464 + C5179 * C478 +
             C5181 * C463 + C5178 * C477) *
                C2294) *
               C50779 * C50757) *
              C50677 * C50962 +
          (((C5608 + C5607 + C5606) * C2294 + (C5605 + C5604 + C5603) * C2289 +
            (C5937 + C5938 + C5939) * C2295 +
            (C5940 + C5941 + C5942) * C50635) *
               C50779 * C50757 -
           ((C5227 + C5228 + C5229) * C50635 + (C5230 + C5231 + C5232) * C2295 +
            (C5226 + C5225 + C5224) * C2289 + (C5223 + C5222 + C5221) * C2294) *
               C50779 * C50920) *
              C50677 * C50963 +
          (((C5232 + C5231 + C5230) * C2294 + (C5229 + C5228 + C5227) * C2289 +
            (C5233 + C5234 + C5235) * C2295 +
            (C5236 + C5237 + C5238) * C50635) *
               C50779 * C50920 -
           ((C5183 * C1850 + C5180 * C1858 + C5182 * C485 + C5179 * C497 +
             C5181 * C470 + C5178 * C490) *
                C50635 +
            (C5183 * C1846 + C5180 * C1851 + C5182 * C467 + C5179 * C484 +
             C5181 * C460 + C5178 * C471) *
                C2295 +
            (C5942 + C5941 + C5940) * C2289 + (C5939 + C5938 + C5937) * C2294) *
               C50779 * C50757) *
              C50677 * C638)) /
            (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C118 +
            (C117 * C130 + C50790 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50779 * C50693 * C278 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50790 * C316) * C106 +
            (C117 * C286 + C50790 * C300) * C118) *
               C50779 * C50693 * C279 +
           ((C117 * C287 + C50790 * C301) * C118 +
            (C117 * C302 + C50790 * C317) * C106 + C354 * C119 + C355 * C107 +
            C356 * C120 + C357 * C108 + C358 * C121 + C359 * C109) *
               C50779 * C50693 * C280) *
              C281 +
          ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
            C349 * C120 + C348 * C108 + (C117 * C291 + C50790 * C309) * C121 +
            (C117 * C310 + C50790 * C321) * C109) *
               C50779 * C50693 * C279 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50779 * C50693 * C278 -
           ((C117 * C311 + C50790 * C322) * C109 +
            (C117 * C292 + C50790 * C312) * C121 + C359 * C108 + C358 * C120 +
            C357 * C107 + C356 * C119 + C355 * C106 + C354 * C118) *
               C50779 * C50693 * C280) *
              C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C50790 * C129) * C118 +
           (C117 * C130 + C50790 * C143) * C106 + C171 * C119 + C172 * C107 +
           C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
              C50779 * C50693 * C50677 * C113 -
          (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 + C174 * C107 +
           C173 * C119 + C172 * C106 + C171 * C118) *
              C50779 * C50693 * C50677 * C114 +
          (C173 * C118 + C174 * C106 + C175 * C119 + C176 * C107 + C178 * C120 +
           C177 * C108 + C179 * C121 + C180 * C109) *
              C50779 * C50693 * C50677 * C115 -
          ((C117 * C141 + C50790 * C149) * C109 +
           (C117 * C128 + C50790 * C142) * C121 + C180 * C108 + C179 * C120 +
           C177 * C107 + C178 * C119 + C176 * C106 + C175 * C118) *
              C50779 * C50693 * C50677 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C2294 +
            (C117 * C130 + C50790 * C143) * C2289 + C171 * C2295 +
            C172 * C50635) *
               C2291 +
           ((C117 * C286 + C50790 * C300) * C2294 +
            (C117 * C299 + C50790 * C316) * C2289 + C353 * C2295 +
            C352 * C50635) *
               C2292 +
           ((C117 * C287 + C50790 * C301) * C2294 +
            (C117 * C302 + C50790 * C317) * C2289 + C354 * C2295 +
            C355 * C50635) *
               C2293) *
              C50693 * C50677 * C113 -
          ((C357 * C50635 + C356 * C2295 + C355 * C2289 + C354 * C2294) *
               C2293 +
           (C350 * C50635 + C351 * C2295 + C352 * C2289 + C353 * C2294) *
               C2292 +
           (C174 * C50635 + C173 * C2295 + C172 * C2289 + C171 * C2294) *
               C2291) *
              C50693 * C50677 * C114 +
          ((C173 * C2294 + C174 * C2289 + C175 * C2295 + C176 * C50635) *
               C2291 +
           (C351 * C2294 + C350 * C2289 + C349 * C2295 + C348 * C50635) *
               C2292 +
           (C356 * C2294 + C357 * C2289 + C358 * C2295 + C359 * C50635) *
               C2293) *
              C50693 * C50677 * C115 -
          (((C117 * C311 + C50790 * C322) * C50635 +
            (C117 * C292 + C50790 * C312) * C2295 + C359 * C2289 +
            C358 * C2294) *
               C2293 +
           (C649 * C50635 + C648 * C2295 + C348 * C2289 + C349 * C2294) *
               C2292 +
           (C177 * C50635 + C178 * C2295 + C176 * C2289 + C175 * C2294) *
               C2291) *
              C50693 * C50677 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C2294 +
             (C117 * C130 + C50790 * C143) * C2289 + C171 * C2295 +
             C172 * C50635) *
                C2291 +
            (C2504 + C2505 + C2459 + C2460) * C2292 + C2520 * C2293) *
               C50693 * C278 -
           ((C2508 + C2509 + C2510 + C2511) * C2293 +
            (C2466 + C2465 + C2507 + C2506) * C2292 +
            (C2460 + C2459 + C2505 + C2504) * C2291) *
               C50693 * C279 +
           (C2520 * C2291 + (C2511 + C2510 + C2509 + C2508) * C2292 +
            ((C117 * C2442 + C50790 * C2445) * C2294 +
             (C117 * C2446 + C50790 * C2451) * C2289 + C2499 * C2295 +
             C2500 * C50635) *
                C2293) *
               C50693 * C280) *
              C281 +
          (((C2479 + C2480 + C2481 + C2482) * C2291 +
            (C2483 + C2484 + C2485 + C2486) * C2292 +
            (C2512 + C2513 + C2514 + C2515) * C2293) *
               C50693 * C279 -
           (C2518 * C2293 + (C2482 + C2481 + C2480 + C2479) * C2292 +
            (C174 * C50635 + C173 * C2295 + C172 * C2289 + C171 * C2294) *
                C2291) *
               C50693 * C278 -
           (((C117 * C2449 + C50790 * C2453) * C50635 +
             (C117 * C2444 + C50790 * C2450) * C2295 + C2500 * C2289 +
             C2499 * C2294) *
                C2293 +
            (C2515 + C2514 + C2513 + C2512) * C2292 + C2518 * C2291) *
               C50693 * C280) *
              C50664)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C5181 * C122 + C5178 * C129 + C5182 * C463 + C5179 * C477 +
            C5183 * C464 + C5180 * C478) *
               C2294 +
           (C5181 * C130 + C5178 * C143 + C5182 * C476 + C5179 * C493 +
            C5183 * C479 + C5180 * C494) *
               C2289 +
           (C5221 + C5222 + C5223) * C2295 + (C5224 + C5225 + C5226) * C50635) *
              C50779 * C50693 * C50677 * C113 -
          ((C5227 + C5228 + C5229) * C50635 + (C5230 + C5231 + C5232) * C2295 +
           (C5226 + C5225 + C5224) * C2289 + (C5223 + C5222 + C5221) * C2294) *
              C50779 * C50693 * C50677 * C114 +
          ((C5232 + C5231 + C5230) * C2294 + (C5229 + C5228 + C5227) * C2289 +
           (C5233 + C5234 + C5235) * C2295 + (C5236 + C5237 + C5238) * C50635) *
              C50779 * C50693 * C50677 * C115 -
          ((C5183 * C488 + C5180 * C499 + C5182 * C487 + C5179 * C498 +
            C5181 * C137 + C5178 * C147) *
               C50635 +
           (C5183 * C469 + C5180 * C489 + C5182 * C468 + C5179 * C486 +
            C5181 * C126 + C5178 * C138) *
               C2295 +
           (C5238 + C5237 + C5236) * C2289 + (C5235 + C5234 + C5233) * C2294) *
              C50779 * C50693 * C50677 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5181 * C122 + C5178 * C129 + C5182 * C463 + C5179 * C477 +
             C5183 * C464 + C5180 * C478) *
                C2294 +
            (C5181 * C130 + C5178 * C143 + C5182 * C476 + C5179 * C493 +
             C5183 * C479 + C5180 * C494) *
                C2289 +
            (C5221 + C5222 + C5223) * C2295 +
            (C5224 + C5225 + C5226) * C50635) *
               C50779 * C50693 * C278 -
           ((C5409 + C5410 + C5411) * C50635 + (C5412 + C5413 + C5414) * C2295 +
            (C5183 * C1225 + C5180 * C1230 + C5182 * C895 + C5179 * C904 +
             C5181 * C299 + C5178 * C316) *
                C2289 +
            (C5183 * C1218 + C5180 * C1226 + C5182 * C889 + C5179 * C894 +
             C5181 * C286 + C5178 * C300) *
                C2294) *
               C50779 * C50693 * C279 +
           ((C5181 * C287 + C5178 * C301 + C5182 * C1565 + C5179 * C1573 +
             C5183 * C2666 + C5180 * C2669) *
                C2294 +
            (C5181 * C302 + C5178 * C317 + C5182 * C1572 + C5179 * C1577 +
             C5183 * C2670 + C5180 * C2675) *
                C2289 +
            (C5415 + C5416 + C5417) * C2295 +
            (C5418 + C5419 + C5420) * C50635) *
               C50779 * C50693 * C280) *
              C281 +
          (((C5414 + C5413 + C5412) * C2294 + (C5411 + C5410 + C5409) * C2289 +
            (C5181 * C284 + C5178 * C296 + C5182 * C891 + C5179 * C898 +
             C5183 * C1216 + C5180 * C1222) *
                C2295 +
            (C5181 * C295 + C5178 * C314 + C5182 * C899 + C5179 * C906 +
             C5183 * C1221 + C5180 * C1228) *
                C50635) *
               C50779 * C50693 * C279 -
           ((C5227 + C5228 + C5229) * C50635 + (C5230 + C5231 + C5232) * C2295 +
            (C5226 + C5225 + C5224) * C2289 + (C5223 + C5222 + C5221) * C2294) *
               C50779 * C50693 * C278 -
           ((C5183 * C2673 + C5180 * C2677 + C5182 * C1568 + C5179 * C1575 +
             C5181 * C306 + C5178 * C319) *
                C50635 +
            (C5183 * C2668 + C5180 * C2674 + C5182 * C1563 + C5179 * C1569 +
             C5181 * C289 + C5178 * C305) *
                C2295 +
            (C5420 + C5419 + C5418) * C2289 + (C5417 + C5416 + C5415) * C2294) *
               C50779 * C50693 * C280) *
              C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C2294 +
             (C117 * C130 + C50790 * C143) * C2289 + C171 * C2295 +
             C172 * C50635) *
                C2291 +
            (C2504 + C2505 + C2459 + C2460) * C2292 + C2520 * C2293) *
               C50693 * C50964 -
           (C3505 * C2293 + (C2466 + C2465 + C2507 + C2506) * C2292 +
            (C2460 + C2459 + C2505 + C2504) * C2291) *
               C50693 * C50965 +
           (C2520 * C2291 + (C2511 + C2510 + C2509 + C2508) * C2292 +
            (C3506 + C3507 + C3500 + C3501) * C2293) *
               C50693 * C1331) *
              C50911 +
          (((C2479 + C2480 + C2481 + C2482) * C2291 +
            (C2483 + C2484 + C2485 + C2486) * C2292 +
            (C2512 + C2513 + C2514 + C2515) * C2293) *
               C50693 * C50965 -
           (C2518 * C2293 + (C2482 + C2481 + C2480 + C2479) * C2292 +
            (C174 * C50635 + C173 * C2295 + C172 * C2289 + C171 * C2294) *
                C2291) *
               C50693 * C50964 -
           (((C117 * C2449 + C50790 * C2453) * C50635 +
             (C117 * C2444 + C50790 * C2450) * C2295 + C2500 * C2289 +
             C2499 * C2294) *
                C2293 +
            (C2515 + C2514 + C2513 + C2512) * C2292 + C2518 * C2291) *
               C50693 * C1331) *
              C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C118 +
            (C117 * C130 + C50790 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50779 * C50693 * C50964 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50790 * C316) * C106 +
            (C117 * C286 + C50790 * C300) * C118) *
               C50779 * C50693 * C50965 +
           ((C117 * C287 + C50790 * C301) * C118 +
            (C117 * C302 + C50790 * C317) * C106 + C354 * C119 + C355 * C107 +
            C356 * C120 + C357 * C108 + C358 * C121 + C359 * C109) *
               C50779 * C50693 * C1331) *
              C50911 +
          ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
            C349 * C120 + C348 * C108 + C648 * C121 + C649 * C109) *
               C50779 * C50693 * C50965 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50779 * C50693 * C50964 -
           ((C117 * C311 + C50790 * C322) * C109 +
            (C117 * C292 + C50790 * C312) * C121 + C359 * C108 + C358 * C120 +
            C357 * C107 + C356 * C119 + C355 * C106 + C354 * C118) *
               C50779 * C50693 * C1331) *
              C50664)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5181 * C122 + C5178 * C129 + C5182 * C463 + C5179 * C477 +
             C5183 * C464 + C5180 * C478) *
                C2294 +
            (C5181 * C130 + C5178 * C143 + C5182 * C476 + C5179 * C493 +
             C5183 * C479 + C5180 * C494) *
                C2289 +
            (C5221 + C5222 + C5223) * C2295 +
            (C5224 + C5225 + C5226) * C50635) *
               C50779 * C50693 * C50964 -
           ((C5409 + C5410 + C5411) * C50635 + (C5412 + C5413 + C5414) * C2295 +
            (C5183 * C1225 + C5180 * C1230 + C5182 * C895 + C5179 * C904 +
             C5181 * C299 + C5178 * C316) *
                C2289 +
            (C5183 * C1218 + C5180 * C1226 + C5182 * C889 + C5179 * C894 +
             C5181 * C286 + C5178 * C300) *
                C2294) *
               C50779 * C50693 * C50965 +
           ((C5181 * C287 + C5178 * C301 + C5182 * C1565 + C5179 * C1573 +
             C5183 * C2666 + C5180 * C2669) *
                C2294 +
            (C5181 * C302 + C5178 * C317 + C5182 * C1572 + C5179 * C1577 +
             C5183 * C2670 + C5180 * C2675) *
                C2289 +
            (C5415 + C5416 + C5417) * C2295 +
            (C5418 + C5419 + C5420) * C50635) *
               C50779 * C50693 * C1331) *
              C50911 +
          (((C5414 + C5413 + C5412) * C2294 + (C5411 + C5410 + C5409) * C2289 +
            (C5773 + C5774 + C5775) * C2295 +
            (C5776 + C5777 + C5778) * C50635) *
               C50779 * C50693 * C50965 -
           ((C5227 + C5228 + C5229) * C50635 + (C5230 + C5231 + C5232) * C2295 +
            (C5226 + C5225 + C5224) * C2289 + (C5223 + C5222 + C5221) * C2294) *
               C50779 * C50693 * C50964 -
           ((C5183 * C2673 + C5180 * C2677 + C5182 * C1568 + C5179 * C1575 +
             C5181 * C306 + C5178 * C319) *
                C50635 +
            (C5183 * C2668 + C5180 * C2674 + C5182 * C1563 + C5179 * C1569 +
             C5181 * C289 + C5178 * C305) *
                C2295 +
            (C5420 + C5419 + C5418) * C2289 + (C5417 + C5416 + C5415) * C2294) *
               C50779 * C50693 * C1331) *
              C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C2294 +
             (C117 * C130 + C50790 * C143) * C2289 + C171 * C2295 +
             C172 * C50635) *
                C2291 +
            (C2504 + C2505 + C2459 + C2460) * C2292 + C2520 * C2293) *
               C50920 -
           (C4186 * C2293 + (C3215 + C3216 + C3241 + C3242) * C2292 +
            (C529 * C50635 + C530 * C2295 +
             (C117 * C476 + C50790 * C493) * C2289 +
             (C117 * C463 + C50790 * C477) * C2294) *
                C2291) *
               C50757) *
              C50964 +
          (((C3242 + C3241 + C3216 + C3215) * C2291 +
            (C3240 + C3239 + C3210 + C3209) * C2292 +
            (C4187 + C4188 + C4181 + C4182) * C2293) *
               C50757 -
           (C3505 * C2293 + (C2466 + C2465 + C2507 + C2506) * C2292 +
            (C2460 + C2459 + C2505 + C2504) * C2291) *
               C50920) *
              C50965 +
          ((C2520 * C2291 + (C2511 + C2510 + C2509 + C2508) * C2292 +
            (C3506 + C3507 + C3500 + C3501) * C2293) *
               C50920 -
           (((C117 * C4169 + C50790 * C4173) * C50635 +
             (C117 * C4167 + C50790 * C4170) * C2295 +
             (C117 * C4171 + C50790 * C4174) * C2289 +
             (C117 * C4168 + C50790 * C4172) * C2294) *
                C2293 +
            (C4182 + C4181 + C4188 + C4187) * C2292 + C4186 * C2291) *
               C50757) *
              C1331) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C118 +
            (C117 * C130 + C50790 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50779 * C50920 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50790 * C493) * C106 +
            (C117 * C463 + C50790 * C477) * C118) *
               C50779 * C50757) *
              C50964 +
          (((C117 * C889 + C50790 * C894) * C118 +
            (C117 * C895 + C50790 * C904) * C106 + C922 * C119 + C923 * C107 +
            C924 * C120 + C925 * C108 + C926 * C121 + C927 * C109) *
               C50779 * C50757 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50790 * C316) * C106 +
            (C117 * C286 + C50790 * C300) * C118) *
               C50779 * C50920) *
              C50965 +
          (((C117 * C287 + C50790 * C301) * C118 +
            (C117 * C302 + C50790 * C317) * C106 + C354 * C119 + C355 * C107 +
            C356 * C120 + C357 * C108 + C358 * C121 + C359 * C109) *
               C50779 * C50920 -
           ((C117 * C1566 + C50790 * C1574) * C109 +
            (C117 * C1562 + C50790 * C1567) * C121 +
            (C117 * C1568 + C50790 * C1575) * C108 +
            (C117 * C1563 + C50790 * C1569) * C120 +
            (C117 * C1570 + C50790 * C1576) * C107 +
            (C117 * C1564 + C50790 * C1571) * C119 +
            (C117 * C1572 + C50790 * C1577) * C106 +
            (C117 * C1565 + C50790 * C1573) * C118) *
               C50779 * C50757) *
              C1331) *
         C50658) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5181 * C122 + C5178 * C129 + C5182 * C463 + C5179 * C477 +
             C5183 * C464 + C5180 * C478) *
                C2294 +
            (C5181 * C130 + C5178 * C143 + C5182 * C476 + C5179 * C493 +
             C5183 * C479 + C5180 * C494) *
                C2289 +
            (C5221 + C5222 + C5223) * C2295 +
            (C5224 + C5225 + C5226) * C50635) *
               C50779 * C50920 -
           ((C5603 + C5604 + C5605) * C50635 + (C5606 + C5607 + C5608) * C2295 +
            (C5183 * C1856 + C5180 * C1861 + C5182 * C479 + C5179 * C494 +
             C5181 * C476 + C5178 * C493) *
                C2289 +
            (C5183 * C1849 + C5180 * C1857 + C5182 * C464 + C5179 * C478 +
             C5181 * C463 + C5178 * C477) *
                C2294) *
               C50779 * C50757) *
              C50964 +
          (((C5181 * C889 + C5178 * C894 + C5182 * C1218 + C5179 * C1226 +
             C5183 * C4581 + C5180 * C4589) *
                C2294 +
            (C5181 * C895 + C5178 * C904 + C5182 * C1225 + C5179 * C1230 +
             C5183 * C4588 + C5180 * C4593) *
                C2289 +
            (C6153 + C6154 + C6155) * C2295 +
            (C6156 + C6157 + C6158) * C50635) *
               C50779 * C50757 -
           ((C5409 + C5410 + C5411) * C50635 + (C5412 + C5413 + C5414) * C2295 +
            (C5183 * C1225 + C5180 * C1230 + C5182 * C895 + C5179 * C904 +
             C5181 * C299 + C5178 * C316) *
                C2289 +
            (C5183 * C1218 + C5180 * C1226 + C5182 * C889 + C5179 * C894 +
             C5181 * C286 + C5178 * C300) *
                C2294) *
               C50779 * C50920) *
              C50965 +
          (((C5181 * C287 + C5178 * C301 + C5182 * C1565 + C5179 * C1573 +
             C5183 * C2666 + C5180 * C2669) *
                C2294 +
            (C5181 * C302 + C5178 * C317 + C5182 * C1572 + C5179 * C1577 +
             C5183 * C2670 + C5180 * C2675) *
                C2289 +
            (C5415 + C5416 + C5417) * C2295 +
            (C5418 + C5419 + C5420) * C50635) *
               C50779 * C50920 -
           ((C5183 * C4582 + C5180 * C4590 + C5182 * C2672 + C5179 * C2676 +
             C5181 * C1570 + C5178 * C1576) *
                C50635 +
            (C5183 * C4578 + C5180 * C4583 + C5182 * C2667 + C5179 * C2671 +
             C5181 * C1564 + C5178 * C1571) *
                C2295 +
            (C5183 * C4584 + C5180 * C4591 + C5182 * C2670 + C5179 * C2675 +
             C5181 * C1572 + C5178 * C1577) *
                C2289 +
            (C5183 * C4579 + C5180 * C4585 + C5182 * C2666 + C5179 * C2669 +
             C5181 * C1565 + C5178 * C1573) *
                C2294) *
               C50779 * C50757) *
              C1331) *
         C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C122 + C50790 * C129) * C118 +
                (C117 * C130 + C50790 * C143) * C106 + C171 * C119 +
                C172 * C107 + C173 * C120 + C174 * C108 + C175 * C121 +
                C176 * C109) *
                   C50779 * C50693 * C1025 -
               (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
                C352 * C107 + C353 * C119 +
                (C117 * C299 + C50790 * C316) * C106 +
                (C117 * C286 + C50790 * C300) * C118) *
                   C50779 * C50693 * C50729) *
                  C1027 +
              ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
                C349 * C120 + C348 * C108 + C648 * C121 + C649 * C109) *
                   C50779 * C50693 * C50729 -
               (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
                C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
                   C50779 * C50693 * C1025) *
                  C1028 +
              ((C173 * C118 + C174 * C106 + C175 * C119 + C176 * C107 +
                C178 * C120 + C177 * C108 + C179 * C121 + C180 * C109) *
                   C50779 * C50693 * C1025 -
               ((C117 * C640 + C50790 * C642) * C109 +
                (C117 * C639 + C50790 * C641) * C121 + C649 * C108 +
                C648 * C120 + C348 * C107 + C349 * C119 + C350 * C106 +
                C351 * C118) *
                   C50779 * C50693 * C50729) *
                  C1029) +
         0.5 * std::pow(Pi, 2.5) *
             (((C117 * C122 + C50790 * C129) * C118 +
               (C117 * C130 + C50790 * C143) * C106 + C171 * C119 +
               C172 * C107 + C173 * C120 + C174 * C108 + C175 * C121 +
               C176 * C109) *
                  C50779 * C50693 * C1096 -
              (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
               C352 * C107 + C353 * C119 +
               (C117 * C299 + C50790 * C316) * C106 +
               (C117 * C286 + C50790 * C300) * C118) *
                  C50779 * C50693 * C1097 +
              ((C117 * C287 + C50790 * C301) * C118 +
               (C117 * C302 + C50790 * C317) * C106 + C354 * C119 +
               C355 * C107 + C356 * C120 + C357 * C108 + C358 * C121 +
               C359 * C109) *
                  C50779 * C50693 * C1098 -
              ((C117 * C1105 + C50790 * C1113) * C109 +
               (C117 * C1101 + C50790 * C1106) * C121 +
               (C117 * C1107 + C50790 * C1114) * C108 +
               (C117 * C1102 + C50790 * C1108) * C120 +
               (C117 * C1109 + C50790 * C1115) * C107 +
               (C117 * C1103 + C50790 * C1110) * C119 +
               (C117 * C1111 + C50790 * C1116) * C106 +
               (C117 * C1104 + C50790 * C1112) * C118) *
                  C50779 * C50693 * C1099) *
             C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C118 +
            (C117 * C130 + C50790 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50779 * C457 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50790 * C493) * C106 +
            (C117 * C463 + C50790 * C477) * C118) *
               C50779 * C458 +
           ((C117 * C464 + C50790 * C478) * C118 +
            (C117 * C479 + C50790 * C494) * C106 + C531 * C119 + C532 * C107 +
            C533 * C120 + C534 * C108 + C535 * C121 + C536 * C109) *
               C50779 * C459) *
              C1025 +
          (((C117 * C889 + C50790 * C894) * C118 +
            (C117 * C895 + C50790 * C904) * C106 + C922 * C119 + C923 * C107 +
            C924 * C120 + C925 * C108 + C926 * C121 + C927 * C109) *
               C50779 * C458 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50790 * C316) * C106 +
            (C117 * C286 + C50790 * C300) * C118) *
               C50779 * C457 -
           ((C117 * C1219 + C50790 * C1227) * C109 +
            (C117 * C1215 + C50790 * C1220) * C121 +
            (C117 * C1221 + C50790 * C1228) * C108 +
            (C117 * C1216 + C50790 * C1222) * C120 +
            (C117 * C1223 + C50790 * C1229) * C107 +
            (C117 * C1217 + C50790 * C1224) * C119 +
            (C117 * C1225 + C50790 * C1230) * C106 +
            (C117 * C1218 + C50790 * C1226) * C118) *
               C50779 * C459) *
              C50729) *
         C50658) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C2294 +
             (C117 * C130 + C50790 * C143) * C2289 + C171 * C2295 +
             C172 * C50635) *
                C2291 +
            (C2504 + C2505 + C2459 + C2460) * C2292 + C2520 * C2293) *
               C50693 * C1025 -
           ((C2508 + C2509 + C2510 + C2511) * C2293 +
            (C2466 + C2465 + C2507 + C2506) * C2292 +
            (C2460 + C2459 + C2505 + C2504) * C2291) *
               C50693 * C50729) *
              C1027 +
          (((C2479 + C2480 + C2481 + C2482) * C2291 +
            (C2483 + C2484 + C2485 + C2486) * C2292 +
            (C2512 + C2513 + C2514 + C2515) * C2293) *
               C50693 * C50729 -
           (C2518 * C2293 + (C2482 + C2481 + C2480 + C2479) * C2292 +
            (C174 * C50635 + C173 * C2295 + C172 * C2289 + C171 * C2294) *
                C2291) *
               C50693 * C1025) *
              C1028 +
          (((C173 * C2294 + C174 * C2289 + C175 * C2295 + C176 * C50635) *
                C2291 +
            (C2843 + C2844 + C2845 + C2846) * C2292 +
            (C2847 + C2848 + C2849 + C2850) * C2293) *
               C50693 * C1025 -
           (((C117 * C1105 + C50790 * C1113) * C50635 +
             (C117 * C1101 + C50790 * C1106) * C2295 + C2502 * C2289 +
             C2501 * C2294) *
                C2293 +
            (C2850 + C2849 + C2848 + C2847) * C2292 +
            (C2846 + C2845 + C2844 + C2843) * C2291) *
               C50693 * C50729) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C2294 +
            (C117 * C130 + C50790 * C143) * C2289 + C171 * C2295 +
            C172 * C50635) *
               C2291 +
           (C2504 + C2505 + C2459 + C2460) * C2292 + C2520 * C2293) *
              C50693 * C1096 -
          (C3505 * C2293 + (C2466 + C2465 + C2507 + C2506) * C2292 +
           (C2460 + C2459 + C2505 + C2504) * C2291) *
              C50693 * C1097 +
          (C2520 * C2291 + (C2511 + C2510 + C2509 + C2508) * C2292 +
           (C3506 + C3507 + C3500 + C3501) * C2293) *
              C50693 * C1098 -
          (((C117 * C3488 + C50790 * C3492) * C50635 +
            (C117 * C3486 + C50790 * C3489) * C2295 +
            (C117 * C3490 + C50790 * C3493) * C2289 +
            (C117 * C3487 + C50790 * C3491) * C2294) *
               C2293 +
           (C3501 + C3500 + C3507 + C3506) * C2292 + C3505 * C2291) *
              C50693 * C1099) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C2294 +
             (C117 * C130 + C50790 * C143) * C2289 + C171 * C2295 +
             C172 * C50635) *
                C2291 +
            (C2504 + C2505 + C2459 + C2460) * C2292 + C2520 * C2293) *
               C457 -
           ((C3209 + C3210 + C3239 + C3240) * C2293 +
            (C3215 + C3216 + C3241 + C3242) * C2292 +
            (C529 * C50635 + C530 * C2295 +
             (C117 * C476 + C50790 * C493) * C2289 +
             (C117 * C463 + C50790 * C477) * C2294) *
                C2291) *
               C458 +
           (((C117 * C464 + C50790 * C478) * C2294 +
             (C117 * C479 + C50790 * C494) * C2289 + C531 * C2295 +
             C532 * C50635) *
                C2291 +
            (C3678 + C3679 + C3666 + C3667) * C2292 +
            (C3680 + C3681 + C3672 + C3673) * C2293) *
               C459) *
              C1025 +
          (((C3242 + C3241 + C3216 + C3215) * C2291 +
            (C3240 + C3239 + C3210 + C3209) * C2292 +
            ((C117 * C3196 + C50790 * C3199) * C2294 +
             (C117 * C3200 + C50790 * C3205) * C2289 + C3237 * C2295 +
             C3238 * C50635) *
                C2293) *
               C458 -
           (C3505 * C2293 + (C2466 + C2465 + C2507 + C2506) * C2292 +
            (C2460 + C2459 + C2505 + C2504) * C2291) *
               C457 -
           (((C117 * C3655 + C50790 * C3659) * C50635 +
             (C117 * C3653 + C50790 * C3656) * C2295 +
             (C117 * C3657 + C50790 * C3660) * C2289 +
             (C117 * C3654 + C50790 * C3658) * C2294) *
                C2293 +
            (C3673 + C3672 + C3681 + C3680) * C2292 +
            (C3667 + C3666 + C3679 + C3678) * C2291) *
               C459) *
              C50729) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5181 * C122 + C5178 * C129 + C5182 * C463 + C5179 * C477 +
             C5183 * C464 + C5180 * C478) *
                C2294 +
            (C5181 * C130 + C5178 * C143 + C5182 * C476 + C5179 * C493 +
             C5183 * C479 + C5180 * C494) *
                C2289 +
            (C5221 + C5222 + C5223) * C2295 +
            (C5224 + C5225 + C5226) * C50635) *
               C50779 * C50693 * C1025 -
           ((C5409 + C5410 + C5411) * C50635 + (C5412 + C5413 + C5414) * C2295 +
            (C5183 * C1225 + C5180 * C1230 + C5182 * C895 + C5179 * C904 +
             C5181 * C299 + C5178 * C316) *
                C2289 +
            (C5183 * C1218 + C5180 * C1226 + C5182 * C889 + C5179 * C894 +
             C5181 * C286 + C5178 * C300) *
                C2294) *
               C50779 * C50693 * C50729) *
              C1027 +
          (((C5414 + C5413 + C5412) * C2294 + (C5411 + C5410 + C5409) * C2289 +
            (C5773 + C5774 + C5775) * C2295 +
            (C5776 + C5777 + C5778) * C50635) *
               C50779 * C50693 * C50729 -
           ((C5227 + C5228 + C5229) * C50635 + (C5230 + C5231 + C5232) * C2295 +
            (C5226 + C5225 + C5224) * C2289 + (C5223 + C5222 + C5221) * C2294) *
               C50779 * C50693 * C1025) *
              C1028 +
          (((C5232 + C5231 + C5230) * C2294 + (C5229 + C5228 + C5227) * C2289 +
            (C5233 + C5234 + C5235) * C2295 +
            (C5236 + C5237 + C5238) * C50635) *
               C50779 * C50693 * C1025 -
           ((C5183 * C1219 + C5180 * C1227 + C5182 * C901 + C5179 * C907 +
             C5181 * C293 + C5178 * C313) *
                C50635 +
            (C5183 * C1215 + C5180 * C1220 + C5182 * C892 + C5179 * C900 +
             C5181 * C283 + C5178 * C294) *
                C2295 +
            (C5778 + C5777 + C5776) * C2289 + (C5775 + C5774 + C5773) * C2294) *
               C50779 * C50693 * C50729) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C5181 * C122 + C5178 * C129 + C5182 * C463 + C5179 * C477 +
            C5183 * C464 + C5180 * C478) *
               C2294 +
           (C5181 * C130 + C5178 * C143 + C5182 * C476 + C5179 * C493 +
            C5183 * C479 + C5180 * C494) *
               C2289 +
           (C5221 + C5222 + C5223) * C2295 + (C5224 + C5225 + C5226) * C50635) *
              C50779 * C50693 * C1096 -
          ((C5409 + C5410 + C5411) * C50635 + (C5412 + C5413 + C5414) * C2295 +
           (C5183 * C1225 + C5180 * C1230 + C5182 * C895 + C5179 * C904 +
            C5181 * C299 + C5178 * C316) *
               C2289 +
           (C5183 * C1218 + C5180 * C1226 + C5182 * C889 + C5179 * C894 +
            C5181 * C286 + C5178 * C300) *
               C2294) *
              C50779 * C50693 * C1097 +
          ((C5181 * C287 + C5178 * C301 + C5182 * C1565 + C5179 * C1573 +
            C5183 * C2666 + C5180 * C2669) *
               C2294 +
           (C5181 * C302 + C5178 * C317 + C5182 * C1572 + C5179 * C1577 +
            C5183 * C2670 + C5180 * C2675) *
               C2289 +
           (C5415 + C5416 + C5417) * C2295 + (C5418 + C5419 + C5420) * C50635) *
              C50779 * C50693 * C1098 -
          ((C5183 * C3655 + C5180 * C3659 + C5182 * C3202 + C5179 * C3206 +
            C5181 * C1109 + C5178 * C1115) *
               C50635 +
           (C5183 * C3653 + C5180 * C3656 + C5182 * C3197 + C5179 * C3201 +
            C5181 * C1103 + C5178 * C1110) *
               C2295 +
           (C5183 * C3657 + C5180 * C3660 + C5182 * C3200 + C5179 * C3205 +
            C5181 * C1111 + C5178 * C1116) *
               C2289 +
           (C5183 * C3654 + C5180 * C3658 + C5182 * C3196 + C5179 * C3199 +
            C5181 * C1104 + C5178 * C1112) *
               C2294) *
              C50779 * C50693 * C1099) *
         C50658) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C5181 * C122 + C5178 * C129 + C5182 * C463 + C5179 * C477 +
             C5183 * C464 + C5180 * C478) *
                C2294 +
            (C5181 * C130 + C5178 * C143 + C5182 * C476 + C5179 * C493 +
             C5183 * C479 + C5180 * C494) *
                C2289 +
            (C5221 + C5222 + C5223) * C2295 +
            (C5224 + C5225 + C5226) * C50635) *
               C50779 * C457 -
           ((C5603 + C5604 + C5605) * C50635 + (C5606 + C5607 + C5608) * C2295 +
            (C5183 * C1856 + C5180 * C1861 + C5182 * C479 + C5179 * C494 +
             C5181 * C476 + C5178 * C493) *
                C2289 +
            (C5183 * C1849 + C5180 * C1857 + C5182 * C464 + C5179 * C478 +
             C5181 * C463 + C5178 * C477) *
                C2294) *
               C50779 * C458 +
           ((C5181 * C464 + C5178 * C478 + C5182 * C1849 + C5179 * C1857 +
             C5183 * C5566 + C5180 * C5569) *
                C2294 +
            (C5181 * C479 + C5178 * C494 + C5182 * C1856 + C5179 * C1861 +
             C5183 * C5570 + C5180 * C5575) *
                C2289 +
            (C5609 + C5610 + C5611) * C2295 +
            (C5612 + C5613 + C5614) * C50635) *
               C50779 * C459) *
              C1025 +
          (((C5181 * C889 + C5178 * C894 + C5182 * C1218 + C5179 * C1226 +
             C5183 * C4581 + C5180 * C4589) *
                C2294 +
            (C5181 * C895 + C5178 * C904 + C5182 * C1225 + C5179 * C1230 +
             C5183 * C4588 + C5180 * C4593) *
                C2289 +
            (C6153 + C6154 + C6155) * C2295 +
            (C6156 + C6157 + C6158) * C50635) *
               C50779 * C458 -
           ((C5409 + C5410 + C5411) * C50635 + (C5412 + C5413 + C5414) * C2295 +
            (C5183 * C1225 + C5180 * C1230 + C5182 * C895 + C5179 * C904 +
             C5181 * C299 + C5178 * C316) *
                C2289 +
            (C5183 * C1218 + C5180 * C1226 + C5182 * C889 + C5179 * C894 +
             C5181 * C286 + C5178 * C300) *
                C2294) *
               C50779 * C457 -
           ((C5183 * C6550 + C5180 * C6554 + C5182 * C4586 + C5179 * C4592 +
             C5181 * C1223 + C5178 * C1229) *
                C50635 +
            (C5183 * C6548 + C5180 * C6551 + C5182 * C4580 + C5179 * C4587 +
             C5181 * C1217 + C5178 * C1224) *
                C2295 +
            (C5183 * C6552 + C5180 * C6555 + C5182 * C4588 + C5179 * C4593 +
             C5181 * C1225 + C5178 * C1230) *
                C2289 +
            (C5183 * C6549 + C5180 * C6553 + C5182 * C4581 + C5179 * C4589 +
             C5181 * C1218 + C5178 * C1226) *
                C2294) *
               C50779 * C459) *
              C50729) *
         C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50790 * C129) * C2294 +
              (C117 * C130 + C50790 * C143) * C2289 + C171 * C2295 +
              C172 * C50635) *
                 C2291 +
             (C2504 + C2505 + C2459 + C2460) * C2292 + C2520 * C2293) *
                C50920 -
            ((C3209 + C3210 + C3239 + C3240) * C2293 +
             (C3215 + C3216 + C3241 + C3242) * C2292 +
             (C529 * C50635 + C530 * C2295 +
              (C117 * C476 + C50790 * C493) * C2289 +
              (C117 * C463 + C50790 * C477) * C2294) *
                 C2291) *
                C50757) *
               C1025 +
           (((C3242 + C3241 + C3216 + C3215) * C2291 +
             (C3240 + C3239 + C3210 + C3209) * C2292 +
             ((C117 * C3196 + C50790 * C3199) * C2294 +
              (C117 * C3200 + C50790 * C3205) * C2289 + C3237 * C2295 +
              C3238 * C50635) *
                 C2293) *
                C50757 -
            (C3505 * C2293 + (C2466 + C2465 + C2507 + C2506) * C2292 +
             (C2460 + C2459 + C2505 + C2504) * C2291) *
                C50920) *
               C50729) *
              C50911 +
          ((((C530 * C2294 + C529 * C2289 + C528 * C2295 + C527 * C50635) *
                 C2291 +
             (C3225 + C3226 + C3227 + C3228) * C2292 +
             (C3229 + C3230 + C3231 + C3232) * C2293) *
                C50757 -
            (C2518 * C2293 + (C2482 + C2481 + C2480 + C2479) * C2292 +
             (C174 * C50635 + C173 * C2295 + C172 * C2289 + C171 * C2294) *
                 C2291) *
                C50920) *
               C1025 +
           (((C2479 + C2480 + C2481 + C2482) * C2291 +
             (C2483 + C2484 + C2485 + C2486) * C2292 +
             (C2512 + C2513 + C2514 + C2515) * C2293) *
                C50920 -
            (((C117 * C3203 + C50790 * C3207) * C50635 +
              (C117 * C3198 + C50790 * C3204) * C2295 + C3238 * C2289 +
              C3237 * C2294) *
                 C2293 +
             (C3232 + C3231 + C3230 + C3229) * C2292 +
             (C3228 + C3227 + C3226 + C3225) * C2291) *
                C50757) *
               C50729) *
              C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C118 +
             (C117 * C130 + C50790 * C143) * C106 + C171 * C119 + C172 * C107 +
             C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
                C50779 * C50920 -
            (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
             C529 * C107 + C530 * C119 + (C117 * C476 + C50790 * C493) * C106 +
             (C117 * C463 + C50790 * C477) * C118) *
                C50779 * C50757) *
               C1025 +
           (((C117 * C889 + C50790 * C894) * C118 +
             (C117 * C895 + C50790 * C904) * C106 + C922 * C119 + C923 * C107 +
             C924 * C120 + C925 * C108 + C926 * C121 + C927 * C109) *
                C50779 * C50757 -
            (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
             C352 * C107 + C353 * C119 + (C117 * C299 + C50790 * C316) * C106 +
             (C117 * C286 + C50790 * C300) * C118) *
                C50779 * C50920) *
               C50729) *
              C50911 +
          (((C530 * C118 + C529 * C106 + C528 * C119 + C527 * C107 +
             C526 * C120 + C525 * C108 + C758 * C121 + C759 * C109) *
                C50779 * C50757 -
            (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
             C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
                C50779 * C50920) *
               C1025 +
           ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
             C349 * C120 + C348 * C108 + C648 * C121 + C649 * C109) *
                C50779 * C50920 -
            ((C117 * C902 + C50790 * C908) * C109 +
             (C117 * C893 + C50790 * C903) * C121 + C927 * C108 + C926 * C120 +
             C925 * C107 + C924 * C119 + C923 * C106 + C922 * C118) *
                C50779 * C50757) *
               C50729) *
              C50664)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5181 * C122 + C5178 * C129 + C5182 * C463 + C5179 * C477 +
              C5183 * C464 + C5180 * C478) *
                 C2294 +
             (C5181 * C130 + C5178 * C143 + C5182 * C476 + C5179 * C493 +
              C5183 * C479 + C5180 * C494) *
                 C2289 +
             (C5221 + C5222 + C5223) * C2295 +
             (C5224 + C5225 + C5226) * C50635) *
                C50779 * C50920 -
            ((C5603 + C5604 + C5605) * C50635 +
             (C5606 + C5607 + C5608) * C2295 +
             (C5183 * C1856 + C5180 * C1861 + C5182 * C479 + C5179 * C494 +
              C5181 * C476 + C5178 * C493) *
                 C2289 +
             (C5183 * C1849 + C5180 * C1857 + C5182 * C464 + C5179 * C478 +
              C5181 * C463 + C5178 * C477) *
                 C2294) *
                C50779 * C50757) *
               C1025 +
           (((C5181 * C889 + C5178 * C894 + C5182 * C1218 + C5179 * C1226 +
              C5183 * C4581 + C5180 * C4589) *
                 C2294 +
             (C5181 * C895 + C5178 * C904 + C5182 * C1225 + C5179 * C1230 +
              C5183 * C4588 + C5180 * C4593) *
                 C2289 +
             (C6153 + C6154 + C6155) * C2295 +
             (C6156 + C6157 + C6158) * C50635) *
                C50779 * C50757 -
            ((C5409 + C5410 + C5411) * C50635 +
             (C5412 + C5413 + C5414) * C2295 +
             (C5183 * C1225 + C5180 * C1230 + C5182 * C895 + C5179 * C904 +
              C5181 * C299 + C5178 * C316) *
                 C2289 +
             (C5183 * C1218 + C5180 * C1226 + C5182 * C889 + C5179 * C894 +
              C5181 * C286 + C5178 * C300) *
                 C2294) *
                C50779 * C50920) *
               C50729) *
              C50911 +
          ((((C5608 + C5607 + C5606) * C2294 + (C5605 + C5604 + C5603) * C2289 +
             (C5937 + C5938 + C5939) * C2295 +
             (C5940 + C5941 + C5942) * C50635) *
                C50779 * C50757 -
            ((C5227 + C5228 + C5229) * C50635 +
             (C5230 + C5231 + C5232) * C2295 + (C5226 + C5225 + C5224) * C2289 +
             (C5223 + C5222 + C5221) * C2294) *
                C50779 * C50920) *
               C1025 +
           (((C5414 + C5413 + C5412) * C2294 + (C5411 + C5410 + C5409) * C2289 +
             (C5773 + C5774 + C5775) * C2295 +
             (C5776 + C5777 + C5778) * C50635) *
                C50779 * C50920 -
            ((C5183 * C6137 + C5180 * C6139 + C5182 * C1221 + C5179 * C1228 +
              C5181 * C899 + C5178 * C906) *
                 C50635 +
             (C5183 * C6136 + C5180 * C6138 + C5182 * C1216 + C5179 * C1222 +
              C5181 * C891 + C5178 * C898) *
                 C2295 +
             (C6158 + C6157 + C6156) * C2289 +
             (C6155 + C6154 + C6153) * C2294) *
                C50779 * C50757) *
               C50729) *
              C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C50790 * C129) * C118 +
           (C117 * C130 + C50790 * C143) * C106 + C171 * C119 + C172 * C107 +
           C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
              C50779 * C50693 * C1096 -
          (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 + C352 * C107 +
           C353 * C119 + (C117 * C299 + C50790 * C316) * C106 +
           (C117 * C286 + C50790 * C300) * C118) *
              C50779 * C50693 * C1097 +
          ((C117 * C287 + C50790 * C301) * C118 +
           (C117 * C302 + C50790 * C317) * C106 + C354 * C119 + C355 * C107 +
           C356 * C120 + C357 * C108 + C358 * C121 + C359 * C109) *
              C50779 * C50693 * C1098 -
          ((C117 * C1105 + C50790 * C1113) * C109 +
           (C117 * C1101 + C50790 * C1106) * C121 +
           (C117 * C1107 + C50790 * C1114) * C108 +
           (C117 * C1102 + C50790 * C1108) * C120 +
           (C117 * C1109 + C50790 * C1115) * C107 +
           (C117 * C1103 + C50790 * C1110) * C119 +
           (C117 * C1111 + C50790 * C1116) * C106 +
           (C117 * C1104 + C50790 * C1112) * C118) *
              C50779 * C50693 * C1099) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C118 +
            (C117 * C130 + C50790 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50779 * C50693 * C1025 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50790 * C316) * C106 +
            (C117 * C286 + C50790 * C300) * C118) *
               C50779 * C50693 * C50729) *
              C1027 +
          ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
            C349 * C120 + C348 * C108 + C648 * C121 + C649 * C109) *
               C50779 * C50693 * C50729 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50779 * C50693 * C1025) *
              C1028 +
          ((C173 * C118 + C174 * C106 + C175 * C119 + C176 * C107 +
            C178 * C120 + C177 * C108 + C179 * C121 + C180 * C109) *
               C50779 * C50693 * C1025 -
           ((C117 * C640 + C50790 * C642) * C109 +
            (C117 * C639 + C50790 * C641) * C121 + C649 * C108 + C648 * C120 +
            C348 * C107 + C349 * C119 + C350 * C106 + C351 * C118) *
               C50779 * C50693 * C50729) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C2294 +
             (C117 * C130 + C50790 * C143) * C2289 + C171 * C2295 +
             C172 * C50635) *
                C2291 +
            (C2504 + C2505 + C2459 + C2460) * C2292 + C2520 * C2293) *
               C50693 * C1025 -
           ((C2508 + C2509 + C2510 + C2511) * C2293 +
            (C2466 + C2465 + C2507 + C2506) * C2292 +
            (C2460 + C2459 + C2505 + C2504) * C2291) *
               C50693 * C50729) *
              C1027 +
          (((C2479 + C2480 + C2481 + C2482) * C2291 +
            (C2483 + C2484 + C2485 + C2486) * C2292 +
            (C2512 + C2513 + C2514 + C2515) * C2293) *
               C50693 * C50729 -
           (C2518 * C2293 + (C2482 + C2481 + C2480 + C2479) * C2292 +
            (C174 * C50635 + C173 * C2295 + C172 * C2289 + C171 * C2294) *
                C2291) *
               C50693 * C1025) *
              C1028 +
          (((C173 * C2294 + C174 * C2289 + C175 * C2295 + C176 * C50635) *
                C2291 +
            (C2843 + C2844 + C2845 + C2846) * C2292 +
            (C2847 + C2848 + C2849 + C2850) * C2293) *
               C50693 * C1025 -
           (((C117 * C1105 + C50790 * C1113) * C50635 +
             (C117 * C1101 + C50790 * C1106) * C2295 + C2502 * C2289 +
             C2501 * C2294) *
                C2293 +
            (C2850 + C2849 + C2848 + C2847) * C2292 +
            (C2846 + C2845 + C2844 + C2843) * C2291) *
               C50693 * C50729) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C2294 +
            (C117 * C130 + C50790 * C143) * C2289 + C171 * C2295 +
            C172 * C50635) *
               C2291 +
           (C2504 + C2505 + C2459 + C2460) * C2292 + C2520 * C2293) *
              C50693 * C1096 -
          (C3505 * C2293 + (C2466 + C2465 + C2507 + C2506) * C2292 +
           (C2460 + C2459 + C2505 + C2504) * C2291) *
              C50693 * C1097 +
          (C2520 * C2291 + (C2511 + C2510 + C2509 + C2508) * C2292 +
           (C3506 + C3507 + C3500 + C3501) * C2293) *
              C50693 * C1098 -
          (((C117 * C3488 + C50790 * C3492) * C50635 +
            (C117 * C3486 + C50790 * C3489) * C2295 +
            (C117 * C3490 + C50790 * C3493) * C2289 +
            (C117 * C3487 + C50790 * C3491) * C2294) *
               C2293 +
           (C3501 + C3500 + C3507 + C3506) * C2292 + C3505 * C2291) *
              C50693 * C1099) *
         C50658) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5181 * C122 + C5178 * C129 + C5182 * C463 + C5179 * C477 +
             C5183 * C464 + C5180 * C478) *
                C2294 +
            (C5181 * C130 + C5178 * C143 + C5182 * C476 + C5179 * C493 +
             C5183 * C479 + C5180 * C494) *
                C2289 +
            (C5221 + C5222 + C5223) * C2295 +
            (C5224 + C5225 + C5226) * C50635) *
               C50779 * C50693 * C1025 -
           ((C5409 + C5410 + C5411) * C50635 + (C5412 + C5413 + C5414) * C2295 +
            (C5183 * C1225 + C5180 * C1230 + C5182 * C895 + C5179 * C904 +
             C5181 * C299 + C5178 * C316) *
                C2289 +
            (C5183 * C1218 + C5180 * C1226 + C5182 * C889 + C5179 * C894 +
             C5181 * C286 + C5178 * C300) *
                C2294) *
               C50779 * C50693 * C50729) *
              C1027 +
          (((C5414 + C5413 + C5412) * C2294 + (C5411 + C5410 + C5409) * C2289 +
            (C5773 + C5774 + C5775) * C2295 +
            (C5776 + C5777 + C5778) * C50635) *
               C50779 * C50693 * C50729 -
           ((C5227 + C5228 + C5229) * C50635 + (C5230 + C5231 + C5232) * C2295 +
            (C5226 + C5225 + C5224) * C2289 + (C5223 + C5222 + C5221) * C2294) *
               C50779 * C50693 * C1025) *
              C1028 +
          (((C5232 + C5231 + C5230) * C2294 + (C5229 + C5228 + C5227) * C2289 +
            (C5233 + C5234 + C5235) * C2295 +
            (C5236 + C5237 + C5238) * C50635) *
               C50779 * C50693 * C1025 -
           ((C5183 * C1219 + C5180 * C1227 + C5182 * C901 + C5179 * C907 +
             C5181 * C293 + C5178 * C313) *
                C50635 +
            (C5183 * C1215 + C5180 * C1220 + C5182 * C892 + C5179 * C900 +
             C5181 * C283 + C5178 * C294) *
                C2295 +
            (C5778 + C5777 + C5776) * C2289 + (C5775 + C5774 + C5773) * C2294) *
               C50779 * C50693 * C50729) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C5181 * C122 + C5178 * C129 + C5182 * C463 + C5179 * C477 +
            C5183 * C464 + C5180 * C478) *
               C2294 +
           (C5181 * C130 + C5178 * C143 + C5182 * C476 + C5179 * C493 +
            C5183 * C479 + C5180 * C494) *
               C2289 +
           (C5221 + C5222 + C5223) * C2295 + (C5224 + C5225 + C5226) * C50635) *
              C50779 * C50693 * C1096 -
          ((C5409 + C5410 + C5411) * C50635 + (C5412 + C5413 + C5414) * C2295 +
           (C5183 * C1225 + C5180 * C1230 + C5182 * C895 + C5179 * C904 +
            C5181 * C299 + C5178 * C316) *
               C2289 +
           (C5183 * C1218 + C5180 * C1226 + C5182 * C889 + C5179 * C894 +
            C5181 * C286 + C5178 * C300) *
               C2294) *
              C50779 * C50693 * C1097 +
          ((C5181 * C287 + C5178 * C301 + C5182 * C1565 + C5179 * C1573 +
            C5183 * C2666 + C5180 * C2669) *
               C2294 +
           (C5181 * C302 + C5178 * C317 + C5182 * C1572 + C5179 * C1577 +
            C5183 * C2670 + C5180 * C2675) *
               C2289 +
           (C5415 + C5416 + C5417) * C2295 + (C5418 + C5419 + C5420) * C50635) *
              C50779 * C50693 * C1098 -
          ((C5183 * C3655 + C5180 * C3659 + C5182 * C3202 + C5179 * C3206 +
            C5181 * C1109 + C5178 * C1115) *
               C50635 +
           (C5183 * C3653 + C5180 * C3656 + C5182 * C3197 + C5179 * C3201 +
            C5181 * C1103 + C5178 * C1110) *
               C2295 +
           (C5183 * C3657 + C5180 * C3660 + C5182 * C3200 + C5179 * C3205 +
            C5181 * C1111 + C5178 * C1116) *
               C2289 +
           (C5183 * C3654 + C5180 * C3658 + C5182 * C3196 + C5179 * C3199 +
            C5181 * C1104 + C5178 * C1112) *
               C2294) *
              C50779 * C50693 * C1099) *
         C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50790 * C129) * C2294 +
              (C117 * C130 + C50790 * C143) * C2289 + C171 * C2295 +
              C172 * C50635) *
                 C2291 +
             (C2504 + C2505 + C2459 + C2460) * C2292 + C2520 * C2293) *
                C1676 -
            (C4186 * C2293 + (C3215 + C3216 + C3241 + C3242) * C2292 +
             (C529 * C50635 + C530 * C2295 +
              (C117 * C476 + C50790 * C493) * C2289 +
              (C117 * C463 + C50790 * C477) * C2294) *
                 C2291) *
                C50757) *
               C50919 +
           (((C3242 + C3241 + C3216 + C3215) * C2291 +
             (C3240 + C3239 + C3210 + C3209) * C2292 +
             (C4187 + C4188 + C4181 + C4182) * C2293) *
                C50757 -
            (C3505 * C2293 + (C2466 + C2465 + C2507 + C2506) * C2292 +
             (C2460 + C2459 + C2505 + C2504) * C2291) *
                C1676) *
               C50729) *
              C50911 +
          ((((C530 * C2294 + C529 * C2289 + C528 * C2295 + C527 * C50635) *
                 C2291 +
             (C3225 + C3226 + C3227 + C3228) * C2292 +
             (C3229 + C3230 + C3231 + C3232) * C2293) *
                C50757 -
            (C2518 * C2293 + (C2482 + C2481 + C2480 + C2479) * C2292 +
             (C174 * C50635 + C173 * C2295 + C172 * C2289 + C171 * C2294) *
                 C2291) *
                C1676) *
               C50919 +
           (((C2479 + C2480 + C2481 + C2482) * C2291 +
             (C2483 + C2484 + C2485 + C2486) * C2292 +
             (C2512 + C2513 + C2514 + C2515) * C2293) *
                C1676 -
            (((C117 * C3203 + C50790 * C3207) * C50635 +
              (C117 * C3198 + C50790 * C3204) * C2295 + C3238 * C2289 +
              C3237 * C2294) *
                 C2293 +
             (C3232 + C3231 + C3230 + C3229) * C2292 +
             (C3228 + C3227 + C3226 + C3225) * C2291) *
                C50757) *
               C50729) *
              C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C118 +
             (C117 * C130 + C50790 * C143) * C106 + C171 * C119 + C172 * C107 +
             C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
                C50779 * C1676 -
            (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
             C529 * C107 + C530 * C119 + (C117 * C476 + C50790 * C493) * C106 +
             (C117 * C463 + C50790 * C477) * C118) *
                C50779 * C50757) *
               C50919 +
           (((C117 * C889 + C50790 * C894) * C118 +
             (C117 * C895 + C50790 * C904) * C106 + C922 * C119 + C923 * C107 +
             C924 * C120 + C925 * C108 + C926 * C121 + C927 * C109) *
                C50779 * C50757 -
            (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
             C352 * C107 + C353 * C119 + (C117 * C299 + C50790 * C316) * C106 +
             (C117 * C286 + C50790 * C300) * C118) *
                C50779 * C1676) *
               C50729) *
              C50911 +
          (((C530 * C118 + C529 * C106 + C528 * C119 + C527 * C107 +
             C526 * C120 + C525 * C108 + C758 * C121 + C759 * C109) *
                C50779 * C50757 -
            (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
             C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
                C50779 * C1676) *
               C50919 +
           ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
             C349 * C120 + C348 * C108 + C648 * C121 + C649 * C109) *
                C50779 * C1676 -
            ((C117 * C902 + C50790 * C908) * C109 +
             (C117 * C893 + C50790 * C903) * C121 + C927 * C108 + C926 * C120 +
             C925 * C107 + C924 * C119 + C923 * C106 + C922 * C118) *
                C50779 * C50757) *
               C50729) *
              C50664)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5181 * C122 + C5178 * C129 + C5182 * C463 + C5179 * C477 +
              C5183 * C464 + C5180 * C478) *
                 C2294 +
             (C5181 * C130 + C5178 * C143 + C5182 * C476 + C5179 * C493 +
              C5183 * C479 + C5180 * C494) *
                 C2289 +
             (C5221 + C5222 + C5223) * C2295 +
             (C5224 + C5225 + C5226) * C50635) *
                C50779 * C1676 -
            ((C5603 + C5604 + C5605) * C50635 +
             (C5606 + C5607 + C5608) * C2295 +
             (C5183 * C1856 + C5180 * C1861 + C5182 * C479 + C5179 * C494 +
              C5181 * C476 + C5178 * C493) *
                 C2289 +
             (C5183 * C1849 + C5180 * C1857 + C5182 * C464 + C5179 * C478 +
              C5181 * C463 + C5178 * C477) *
                 C2294) *
                C50779 * C50757) *
               C50919 +
           (((C5181 * C889 + C5178 * C894 + C5182 * C1218 + C5179 * C1226 +
              C5183 * C4581 + C5180 * C4589) *
                 C2294 +
             (C5181 * C895 + C5178 * C904 + C5182 * C1225 + C5179 * C1230 +
              C5183 * C4588 + C5180 * C4593) *
                 C2289 +
             (C6153 + C6154 + C6155) * C2295 +
             (C6156 + C6157 + C6158) * C50635) *
                C50779 * C50757 -
            ((C5409 + C5410 + C5411) * C50635 +
             (C5412 + C5413 + C5414) * C2295 +
             (C5183 * C1225 + C5180 * C1230 + C5182 * C895 + C5179 * C904 +
              C5181 * C299 + C5178 * C316) *
                 C2289 +
             (C5183 * C1218 + C5180 * C1226 + C5182 * C889 + C5179 * C894 +
              C5181 * C286 + C5178 * C300) *
                 C2294) *
                C50779 * C1676) *
               C50729) *
              C50911 +
          ((((C5608 + C5607 + C5606) * C2294 + (C5605 + C5604 + C5603) * C2289 +
             (C5937 + C5938 + C5939) * C2295 +
             (C5940 + C5941 + C5942) * C50635) *
                C50779 * C50757 -
            ((C5227 + C5228 + C5229) * C50635 +
             (C5230 + C5231 + C5232) * C2295 + (C5226 + C5225 + C5224) * C2289 +
             (C5223 + C5222 + C5221) * C2294) *
                C50779 * C1676) *
               C50919 +
           (((C5414 + C5413 + C5412) * C2294 + (C5411 + C5410 + C5409) * C2289 +
             (C5773 + C5774 + C5775) * C2295 +
             (C5776 + C5777 + C5778) * C50635) *
                C50779 * C1676 -
            ((C5183 * C6137 + C5180 * C6139 + C5182 * C1221 + C5179 * C1228 +
              C5181 * C899 + C5178 * C906) *
                 C50635 +
             (C5183 * C6136 + C5180 * C6138 + C5182 * C1216 + C5179 * C1222 +
              C5181 * C891 + C5178 * C898) *
                 C2295 +
             (C6158 + C6157 + C6156) * C2289 +
             (C6155 + C6154 + C6153) * C2294) *
                C50779 * C50757) *
               C50729) *
              C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C2294 +
             (C117 * C130 + C50790 * C143) * C2289 + C171 * C2295 +
             C172 * C50635) *
                C2291 +
            (C2504 + C2505 + C2459 + C2460) * C2292 + C2520 * C2293) *
               C50966 -
           (C4186 * C2293 + (C3215 + C3216 + C3241 + C3242) * C2292 +
            (C529 * C50635 + C530 * C2295 +
             (C117 * C476 + C50790 * C493) * C2289 +
             (C117 * C463 + C50790 * C477) * C2294) *
                C2291) *
               C50967 +
           (((C117 * C464 + C50790 * C478) * C2294 +
             (C117 * C479 + C50790 * C494) * C2289 + C531 * C2295 +
             C532 * C50635) *
                C2291 +
            (C3678 + C3679 + C3666 + C3667) * C2292 +
            (C3680 + C3681 + C3672 + C3673) * C2293) *
               C2092) *
              C50919 +
          (((C3242 + C3241 + C3216 + C3215) * C2291 +
            (C3240 + C3239 + C3210 + C3209) * C2292 +
            (C4187 + C4188 + C4181 + C4182) * C2293) *
               C50967 -
           (C3505 * C2293 + (C2466 + C2465 + C2507 + C2506) * C2292 +
            (C2460 + C2459 + C2505 + C2504) * C2291) *
               C50966 -
           (((C117 * C3655 + C50790 * C3659) * C50635 +
             (C117 * C3653 + C50790 * C3656) * C2295 +
             (C117 * C3657 + C50790 * C3660) * C2289 +
             (C117 * C3654 + C50790 * C3658) * C2294) *
                C2293 +
            (C3673 + C3672 + C3681 + C3680) * C2292 +
            (C3667 + C3666 + C3679 + C3678) * C2291) *
               C2092) *
              C50729) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C118 +
            (C117 * C130 + C50790 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50779 * C50966 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50790 * C493) * C106 +
            (C117 * C463 + C50790 * C477) * C118) *
               C50779 * C50967 +
           ((C117 * C464 + C50790 * C478) * C118 +
            (C117 * C479 + C50790 * C494) * C106 + C531 * C119 + C532 * C107 +
            C533 * C120 + C534 * C108 + C535 * C121 + C536 * C109) *
               C50779 * C2092) *
              C50919 +
          (((C117 * C889 + C50790 * C894) * C118 +
            (C117 * C895 + C50790 * C904) * C106 + C922 * C119 + C923 * C107 +
            C924 * C120 + C925 * C108 + C926 * C121 + C927 * C109) *
               C50779 * C50967 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50790 * C316) * C106 +
            (C117 * C286 + C50790 * C300) * C118) *
               C50779 * C50966 -
           ((C117 * C1219 + C50790 * C1227) * C109 +
            (C117 * C1215 + C50790 * C1220) * C121 +
            (C117 * C1221 + C50790 * C1228) * C108 +
            (C117 * C1216 + C50790 * C1222) * C120 +
            (C117 * C1223 + C50790 * C1229) * C107 +
            (C117 * C1217 + C50790 * C1224) * C119 +
            (C117 * C1225 + C50790 * C1230) * C106 +
            (C117 * C1218 + C50790 * C1226) * C118) *
               C50779 * C2092) *
              C50729) *
         C50658) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5181 * C122 + C5178 * C129 + C5182 * C463 + C5179 * C477 +
             C5183 * C464 + C5180 * C478) *
                C2294 +
            (C5181 * C130 + C5178 * C143 + C5182 * C476 + C5179 * C493 +
             C5183 * C479 + C5180 * C494) *
                C2289 +
            (C5221 + C5222 + C5223) * C2295 +
            (C5224 + C5225 + C5226) * C50635) *
               C50779 * C50966 -
           ((C5603 + C5604 + C5605) * C50635 + (C5606 + C5607 + C5608) * C2295 +
            (C5183 * C1856 + C5180 * C1861 + C5182 * C479 + C5179 * C494 +
             C5181 * C476 + C5178 * C493) *
                C2289 +
            (C5183 * C1849 + C5180 * C1857 + C5182 * C464 + C5179 * C478 +
             C5181 * C463 + C5178 * C477) *
                C2294) *
               C50779 * C50967 +
           ((C5181 * C464 + C5178 * C478 + C5182 * C1849 + C5179 * C1857 +
             C5183 * C5566 + C5180 * C5569) *
                C2294 +
            (C5181 * C479 + C5178 * C494 + C5182 * C1856 + C5179 * C1861 +
             C5183 * C5570 + C5180 * C5575) *
                C2289 +
            (C5609 + C5610 + C5611) * C2295 +
            (C5612 + C5613 + C5614) * C50635) *
               C50779 * C2092) *
              C50919 +
          (((C5181 * C889 + C5178 * C894 + C5182 * C1218 + C5179 * C1226 +
             C5183 * C4581 + C5180 * C4589) *
                C2294 +
            (C5181 * C895 + C5178 * C904 + C5182 * C1225 + C5179 * C1230 +
             C5183 * C4588 + C5180 * C4593) *
                C2289 +
            (C6153 + C6154 + C6155) * C2295 +
            (C6156 + C6157 + C6158) * C50635) *
               C50779 * C50967 -
           ((C5409 + C5410 + C5411) * C50635 + (C5412 + C5413 + C5414) * C2295 +
            (C5183 * C1225 + C5180 * C1230 + C5182 * C895 + C5179 * C904 +
             C5181 * C299 + C5178 * C316) *
                C2289 +
            (C5183 * C1218 + C5180 * C1226 + C5182 * C889 + C5179 * C894 +
             C5181 * C286 + C5178 * C300) *
                C2294) *
               C50779 * C50966 -
           ((C5183 * C6550 + C5180 * C6554 + C5182 * C4586 + C5179 * C4592 +
             C5181 * C1223 + C5178 * C1229) *
                C50635 +
            (C5183 * C6548 + C5180 * C6551 + C5182 * C4580 + C5179 * C4587 +
             C5181 * C1217 + C5178 * C1224) *
                C2295 +
            (C5183 * C6552 + C5180 * C6555 + C5182 * C4588 + C5179 * C4593 +
             C5181 * C1225 + C5178 * C1230) *
                C2289 +
            (C5183 * C6549 + C5180 * C6553 + C5182 * C4581 + C5179 * C4589 +
             C5181 * C1218 + C5178 * C1226) *
                C2294) *
               C50779 * C2092) *
              C50729) *
         C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C122 + C50790 * C129) * C118 +
                (C117 * C130 + C50790 * C143) * C106 + C171 * C119 +
                C172 * C107 + C173 * C120 + C174 * C108 + C175 * C121 +
                C176 * C109) *
                   C50779 * C1676 -
               (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
                C529 * C107 + C530 * C119 +
                (C117 * C476 + C50790 * C493) * C106 +
                (C117 * C463 + C50790 * C477) * C118) *
                   C50779 * C50757) *
                  C50677 * C1027 +
              ((C530 * C118 + C529 * C106 + C528 * C119 + C527 * C107 +
                C526 * C120 + C525 * C108 + C758 * C121 + C759 * C109) *
                   C50779 * C50757 -
               (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
                C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
                   C50779 * C1676) *
                  C50677 * C1028 +
              ((C173 * C118 + C174 * C106 + C175 * C119 + C176 * C107 +
                C178 * C120 + C177 * C108 + C179 * C121 + C180 * C109) *
                   C50779 * C1676 -
               ((C117 * C750 + C50790 * C752) * C109 +
                (C117 * C749 + C50790 * C751) * C121 + C759 * C108 +
                C758 * C120 + C525 * C107 + C526 * C119 + C527 * C106 +
                C528 * C118) *
                   C50779 * C50757) *
                  C50677 * C1029) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C122 + C50790 * C129) * C118 +
                (C117 * C130 + C50790 * C143) * C106 + C171 * C119 +
                C172 * C107 + C173 * C120 + C174 * C108 + C175 * C121 +
                C176 * C109) *
                   C50779 * C1676 -
               (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
                C529 * C107 + C530 * C119 +
                (C117 * C476 + C50790 * C493) * C106 +
                (C117 * C463 + C50790 * C477) * C118) *
                   C50779 * C50757) *
                  C278 +
              (((C117 * C889 + C50790 * C894) * C118 +
                (C117 * C895 + C50790 * C904) * C106 + C922 * C119 +
                C923 * C107 + C924 * C120 + C925 * C108 + C926 * C121 +
                C927 * C109) *
                   C50779 * C50757 -
               (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
                C352 * C107 + C353 * C119 +
                (C117 * C299 + C50790 * C316) * C106 +
                (C117 * C286 + C50790 * C300) * C118) *
                   C50779 * C1676) *
                  C279 +
              (((C117 * C287 + C50790 * C301) * C118 +
                (C117 * C302 + C50790 * C317) * C106 + C354 * C119 +
                C355 * C107 + C356 * C120 + C357 * C108 + C358 * C121 +
                C359 * C109) *
                   C50779 * C1676 -
               ((C117 * C1566 + C50790 * C1574) * C109 +
                (C117 * C1562 + C50790 * C1567) * C121 +
                (C117 * C1568 + C50790 * C1575) * C108 +
                (C117 * C1563 + C50790 * C1569) * C120 +
                (C117 * C1570 + C50790 * C1576) * C107 +
                (C117 * C1564 + C50790 * C1571) * C119 +
                (C117 * C1572 + C50790 * C1577) * C106 +
                (C117 * C1565 + C50790 * C1573) * C118) *
                   C50779 * C50757) *
                  C280) *
             C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117 * C122 + C50790 * C129) * C118 +
           (C117 * C130 + C50790 * C143) * C106 + C171 * C119 + C172 * C107 +
           C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
              C50779 * C1842 -
          (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 + C529 * C107 +
           C530 * C119 + (C117 * C476 + C50790 * C493) * C106 +
           (C117 * C463 + C50790 * C477) * C118) *
              C50779 * C1843 +
          ((C117 * C464 + C50790 * C478) * C118 +
           (C117 * C479 + C50790 * C494) * C106 + C531 * C119 + C532 * C107 +
           C533 * C120 + C534 * C108 + C535 * C121 + C536 * C109) *
              C50779 * C1844 -
          ((C117 * C1850 + C50790 * C1858) * C109 +
           (C117 * C1846 + C50790 * C1851) * C121 +
           (C117 * C1852 + C50790 * C1859) * C108 +
           (C117 * C1847 + C50790 * C1853) * C120 +
           (C117 * C1854 + C50790 * C1860) * C107 +
           (C117 * C1848 + C50790 * C1855) * C119 +
           (C117 * C1856 + C50790 * C1861) * C106 +
           (C117 * C1849 + C50790 * C1857) * C118) *
              C50779 * C1845) *
         C50677 * C50658) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C2294 +
             (C117 * C130 + C50790 * C143) * C2289 + C171 * C2295 +
             C172 * C50635) *
                C2291 +
            (C2504 + C2505 + C2459 + C2460) * C2292 + C2520 * C2293) *
               C1676 -
           (C4186 * C2293 + (C3215 + C3216 + C3241 + C3242) * C2292 +
            (C529 * C50635 + C530 * C2295 +
             (C117 * C476 + C50790 * C493) * C2289 +
             (C117 * C463 + C50790 * C477) * C2294) *
                C2291) *
               C50757) *
              C50677 * C1027 +
          (((C530 * C2294 + C529 * C2289 + C528 * C2295 + C527 * C50635) *
                C2291 +
            (C3225 + C3226 + C3227 + C3228) * C2292 +
            (C3229 + C3230 + C3231 + C3232) * C2293) *
               C50757 -
           (C2518 * C2293 + (C2482 + C2481 + C2480 + C2479) * C2292 +
            (C174 * C50635 + C173 * C2295 + C172 * C2289 + C171 * C2294) *
                C2291) *
               C1676) *
              C50677 * C1028 +
          (((C173 * C2294 + C174 * C2289 + C175 * C2295 + C176 * C50635) *
                C2291 +
            (C2843 + C2844 + C2845 + C2846) * C2292 +
            (C2847 + C2848 + C2849 + C2850) * C2293) *
               C1676 -
           (((C117 * C1566 + C50790 * C1574) * C50635 +
             (C117 * C1562 + C50790 * C1567) * C2295 + C3002 * C2289 +
             C3001 * C2294) *
                C2293 +
            (C927 * C50635 + C926 * C2295 + C925 * C2289 + C924 * C2294) *
                C2292 +
            (C525 * C50635 + C526 * C2295 + C527 * C2289 + C528 * C2294) *
                C2291) *
               C50757) *
              C50677 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C2294 +
             (C117 * C130 + C50790 * C143) * C2289 + C171 * C2295 +
             C172 * C50635) *
                C2291 +
            (C2504 + C2505 + C2459 + C2460) * C2292 + C2520 * C2293) *
               C1676 -
           (C4186 * C2293 + (C3215 + C3216 + C3241 + C3242) * C2292 +
            (C529 * C50635 + C530 * C2295 +
             (C117 * C476 + C50790 * C493) * C2289 +
             (C117 * C463 + C50790 * C477) * C2294) *
                C2291) *
               C50757) *
              C278 +
          (((C3242 + C3241 + C3216 + C3215) * C2291 +
            (C3240 + C3239 + C3210 + C3209) * C2292 +
            (C4187 + C4188 + C4181 + C4182) * C2293) *
               C50757 -
           (C3505 * C2293 + (C2466 + C2465 + C2507 + C2506) * C2292 +
            (C2460 + C2459 + C2505 + C2504) * C2291) *
               C1676) *
              C279 +
          ((C2520 * C2291 + (C2511 + C2510 + C2509 + C2508) * C2292 +
            (C3506 + C3507 + C3500 + C3501) * C2293) *
               C1676 -
           (((C117 * C4169 + C50790 * C4173) * C50635 +
             (C117 * C4167 + C50790 * C4170) * C2295 +
             (C117 * C4171 + C50790 * C4174) * C2289 +
             (C117 * C4168 + C50790 * C4172) * C2294) *
                C2293 +
            (C4182 + C4181 + C4188 + C4187) * C2292 + C4186 * C2291) *
               C50757) *
              C280) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C2294 +
            (C117 * C130 + C50790 * C143) * C2289 + C171 * C2295 +
            C172 * C50635) *
               C2291 +
           (C2504 + C2505 + C2459 + C2460) * C2292 + C2520 * C2293) *
              C1842 -
          (C4186 * C2293 + (C3215 + C3216 + C3241 + C3242) * C2292 +
           (C529 * C50635 + C530 * C2295 +
            (C117 * C476 + C50790 * C493) * C2289 +
            (C117 * C463 + C50790 * C477) * C2294) *
               C2291) *
              C1843 +
          (((C117 * C464 + C50790 * C478) * C2294 +
            (C117 * C479 + C50790 * C494) * C2289 + C531 * C2295 +
            C532 * C50635) *
               C2291 +
           (C3678 + C3679 + C3666 + C3667) * C2292 +
           (C3680 + C3681 + C3672 + C3673) * C2293) *
              C1844 -
          (((C117 * C4582 + C50790 * C4590) * C50635 +
            (C117 * C4578 + C50790 * C4583) * C2295 +
            (C117 * C4584 + C50790 * C4591) * C2289 +
            (C117 * C4579 + C50790 * C4585) * C2294) *
               C2293 +
           ((C117 * C4586 + C50790 * C4592) * C50635 +
            (C117 * C4580 + C50790 * C4587) * C2295 +
            (C117 * C4588 + C50790 * C4593) * C2289 +
            (C117 * C4581 + C50790 * C4589) * C2294) *
               C2292 +
           ((C117 * C1854 + C50790 * C1860) * C50635 +
            (C117 * C1848 + C50790 * C1855) * C2295 +
            (C117 * C1856 + C50790 * C1861) * C2289 +
            (C117 * C1849 + C50790 * C1857) * C2294) *
               C2291) *
              C1845) *
         C50677 * C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5181 * C122 + C5178 * C129 + C5182 * C463 + C5179 * C477 +
             C5183 * C464 + C5180 * C478) *
                C2294 +
            (C5181 * C130 + C5178 * C143 + C5182 * C476 + C5179 * C493 +
             C5183 * C479 + C5180 * C494) *
                C2289 +
            (C5221 + C5222 + C5223) * C2295 +
            (C5224 + C5225 + C5226) * C50635) *
               C50779 * C1676 -
           ((C5603 + C5604 + C5605) * C50635 + (C5606 + C5607 + C5608) * C2295 +
            (C5183 * C1856 + C5180 * C1861 + C5182 * C479 + C5179 * C494 +
             C5181 * C476 + C5178 * C493) *
                C2289 +
            (C5183 * C1849 + C5180 * C1857 + C5182 * C464 + C5179 * C478 +
             C5181 * C463 + C5178 * C477) *
                C2294) *
               C50779 * C50757) *
              C50677 * C1027 +
          (((C5608 + C5607 + C5606) * C2294 + (C5605 + C5604 + C5603) * C2289 +
            (C5937 + C5938 + C5939) * C2295 +
            (C5940 + C5941 + C5942) * C50635) *
               C50779 * C50757 -
           ((C5227 + C5228 + C5229) * C50635 + (C5230 + C5231 + C5232) * C2295 +
            (C5226 + C5225 + C5224) * C2289 + (C5223 + C5222 + C5221) * C2294) *
               C50779 * C1676) *
              C50677 * C1028 +
          (((C5232 + C5231 + C5230) * C2294 + (C5229 + C5228 + C5227) * C2289 +
            (C5233 + C5234 + C5235) * C2295 +
            (C5236 + C5237 + C5238) * C50635) *
               C50779 * C1676 -
           ((C5183 * C1850 + C5180 * C1858 + C5182 * C485 + C5179 * C497 +
             C5181 * C470 + C5178 * C490) *
                C50635 +
            (C5183 * C1846 + C5180 * C1851 + C5182 * C467 + C5179 * C484 +
             C5181 * C460 + C5178 * C471) *
                C2295 +
            (C5942 + C5941 + C5940) * C2289 + (C5939 + C5938 + C5937) * C2294) *
               C50779 * C50757) *
              C50677 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5181 * C122 + C5178 * C129 + C5182 * C463 + C5179 * C477 +
             C5183 * C464 + C5180 * C478) *
                C2294 +
            (C5181 * C130 + C5178 * C143 + C5182 * C476 + C5179 * C493 +
             C5183 * C479 + C5180 * C494) *
                C2289 +
            (C5221 + C5222 + C5223) * C2295 +
            (C5224 + C5225 + C5226) * C50635) *
               C50779 * C1676 -
           ((C5603 + C5604 + C5605) * C50635 + (C5606 + C5607 + C5608) * C2295 +
            (C5183 * C1856 + C5180 * C1861 + C5182 * C479 + C5179 * C494 +
             C5181 * C476 + C5178 * C493) *
                C2289 +
            (C5183 * C1849 + C5180 * C1857 + C5182 * C464 + C5179 * C478 +
             C5181 * C463 + C5178 * C477) *
                C2294) *
               C50779 * C50757) *
              C278 +
          (((C5181 * C889 + C5178 * C894 + C5182 * C1218 + C5179 * C1226 +
             C5183 * C4581 + C5180 * C4589) *
                C2294 +
            (C5181 * C895 + C5178 * C904 + C5182 * C1225 + C5179 * C1230 +
             C5183 * C4588 + C5180 * C4593) *
                C2289 +
            (C6153 + C6154 + C6155) * C2295 +
            (C6156 + C6157 + C6158) * C50635) *
               C50779 * C50757 -
           ((C5409 + C5410 + C5411) * C50635 + (C5412 + C5413 + C5414) * C2295 +
            (C5183 * C1225 + C5180 * C1230 + C5182 * C895 + C5179 * C904 +
             C5181 * C299 + C5178 * C316) *
                C2289 +
            (C5183 * C1218 + C5180 * C1226 + C5182 * C889 + C5179 * C894 +
             C5181 * C286 + C5178 * C300) *
                C2294) *
               C50779 * C1676) *
              C279 +
          (((C5181 * C287 + C5178 * C301 + C5182 * C1565 + C5179 * C1573 +
             C5183 * C2666 + C5180 * C2669) *
                C2294 +
            (C5181 * C302 + C5178 * C317 + C5182 * C1572 + C5179 * C1577 +
             C5183 * C2670 + C5180 * C2675) *
                C2289 +
            (C5415 + C5416 + C5417) * C2295 +
            (C5418 + C5419 + C5420) * C50635) *
               C50779 * C1676 -
           ((C5183 * C4582 + C5180 * C4590 + C5182 * C2672 + C5179 * C2676 +
             C5181 * C1570 + C5178 * C1576) *
                C50635 +
            (C5183 * C4578 + C5180 * C4583 + C5182 * C2667 + C5179 * C2671 +
             C5181 * C1564 + C5178 * C1571) *
                C2295 +
            (C5183 * C4584 + C5180 * C4591 + C5182 * C2670 + C5179 * C2675 +
             C5181 * C1572 + C5178 * C1577) *
                C2289 +
            (C5183 * C4579 + C5180 * C4585 + C5182 * C2666 + C5179 * C2669 +
             C5181 * C1565 + C5178 * C1573) *
                C2294) *
               C50779 * C50757) *
              C280) *
         C50658) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C5181 * C122 + C5178 * C129 + C5182 * C463 + C5179 * C477 +
            C5183 * C464 + C5180 * C478) *
               C2294 +
           (C5181 * C130 + C5178 * C143 + C5182 * C476 + C5179 * C493 +
            C5183 * C479 + C5180 * C494) *
               C2289 +
           (C5221 + C5222 + C5223) * C2295 + (C5224 + C5225 + C5226) * C50635) *
              C50779 * C1842 -
          ((C5603 + C5604 + C5605) * C50635 + (C5606 + C5607 + C5608) * C2295 +
           (C5183 * C1856 + C5180 * C1861 + C5182 * C479 + C5179 * C494 +
            C5181 * C476 + C5178 * C493) *
               C2289 +
           (C5183 * C1849 + C5180 * C1857 + C5182 * C464 + C5179 * C478 +
            C5181 * C463 + C5178 * C477) *
               C2294) *
              C50779 * C1843 +
          ((C5181 * C464 + C5178 * C478 + C5182 * C1849 + C5179 * C1857 +
            C5183 * C5566 + C5180 * C5569) *
               C2294 +
           (C5181 * C479 + C5178 * C494 + C5182 * C1856 + C5179 * C1861 +
            C5183 * C5570 + C5180 * C5575) *
               C2289 +
           (C5609 + C5610 + C5611) * C2295 + (C5612 + C5613 + C5614) * C50635) *
              C50779 * C1844 -
          ((C5183 * C7434 + C5180 * C7438 + C5182 * C5572 + C5179 * C5576 +
            C5181 * C1854 + C5178 * C1860) *
               C50635 +
           (C5183 * C7432 + C5180 * C7435 + C5182 * C5567 + C5179 * C5571 +
            C5181 * C1848 + C5178 * C1855) *
               C2295 +
           (C5183 * C7436 + C5180 * C7439 + C5182 * C5570 + C5179 * C5575 +
            C5181 * C1856 + C5178 * C1861) *
               C2289 +
           (C5183 * C7433 + C5180 * C7437 + C5182 * C5566 + C5179 * C5569 +
            C5181 * C1849 + C5178 * C1857) *
               C2294) *
              C50779 * C1845) *
         C50677 * C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C2294 +
             (C117 * C130 + C50790 * C143) * C2289 + C171 * C2295 +
             C172 * C50635) *
                C2291 +
            (C2504 + C2505 + C2459 + C2460) * C2292 + C2520 * C2293) *
               C50966 -
           (C4186 * C2293 + (C3215 + C3216 + C3241 + C3242) * C2292 +
            (C529 * C50635 + C530 * C2295 +
             (C117 * C476 + C50790 * C493) * C2289 +
             (C117 * C463 + C50790 * C477) * C2294) *
                C2291) *
               C50967 +
           (((C117 * C464 + C50790 * C478) * C2294 +
             (C117 * C479 + C50790 * C494) * C2289 + C531 * C2295 +
             C532 * C50635) *
                C2291 +
            (C3678 + C3679 + C3666 + C3667) * C2292 +
            (C3680 + C3681 + C3672 + C3673) * C2293) *
               C2092) *
              C50677 * C50911 +
          (((C530 * C2294 + C529 * C2289 + C528 * C2295 + C527 * C50635) *
                C2291 +
            (C3225 + C3226 + C3227 + C3228) * C2292 +
            (C3229 + C3230 + C3231 + C3232) * C2293) *
               C50967 -
           (C2518 * C2293 + (C2482 + C2481 + C2480 + C2479) * C2292 +
            (C174 * C50635 + C173 * C2295 + C172 * C2289 + C171 * C2294) *
                C2291) *
               C50966 -
           (((C117 * C2673 + C50790 * C2677) * C50635 +
             (C117 * C2668 + C50790 * C2674) * C2295 + C2696 * C2289 +
             C2695 * C2294) *
                C2293 +
            ((C117 * C1221 + C50790 * C1228) * C50635 +
             (C117 * C1216 + C50790 * C1222) * C2295 + C2694 * C2289 +
             C2693 * C2294) *
                C2292 +
            (C534 * C50635 + C533 * C2295 + C532 * C2289 + C531 * C2294) *
                C2291) *
               C2092) *
              C50677 * C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C118 +
            (C117 * C130 + C50790 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50779 * C50966 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50790 * C493) * C106 +
            (C117 * C463 + C50790 * C477) * C118) *
               C50779 * C50967 +
           ((C117 * C464 + C50790 * C478) * C118 +
            (C117 * C479 + C50790 * C494) * C106 + C531 * C119 + C532 * C107 +
            C533 * C120 + C534 * C108 + C535 * C121 + C536 * C109) *
               C50779 * C2092) *
              C50677 * C50911 +
          ((C530 * C118 + C529 * C106 + C528 * C119 + C527 * C107 +
            C526 * C120 + C525 * C108 + C758 * C121 + C759 * C109) *
               C50779 * C50967 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50779 * C50966 -
           ((C117 * C488 + C50790 * C499) * C109 +
            (C117 * C469 + C50790 * C489) * C121 + C536 * C108 + C535 * C120 +
            C534 * C107 + C533 * C119 + C532 * C106 + C531 * C118) *
               C50779 * C2092) *
              C50677 * C50664)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5181 * C122 + C5178 * C129 + C5182 * C463 + C5179 * C477 +
             C5183 * C464 + C5180 * C478) *
                C2294 +
            (C5181 * C130 + C5178 * C143 + C5182 * C476 + C5179 * C493 +
             C5183 * C479 + C5180 * C494) *
                C2289 +
            (C5221 + C5222 + C5223) * C2295 +
            (C5224 + C5225 + C5226) * C50635) *
               C50779 * C50966 -
           ((C5603 + C5604 + C5605) * C50635 + (C5606 + C5607 + C5608) * C2295 +
            (C5183 * C1856 + C5180 * C1861 + C5182 * C479 + C5179 * C494 +
             C5181 * C476 + C5178 * C493) *
                C2289 +
            (C5183 * C1849 + C5180 * C1857 + C5182 * C464 + C5179 * C478 +
             C5181 * C463 + C5178 * C477) *
                C2294) *
               C50779 * C50967 +
           ((C5181 * C464 + C5178 * C478 + C5182 * C1849 + C5179 * C1857 +
             C5183 * C5566 + C5180 * C5569) *
                C2294 +
            (C5181 * C479 + C5178 * C494 + C5182 * C1856 + C5179 * C1861 +
             C5183 * C5570 + C5180 * C5575) *
                C2289 +
            (C5609 + C5610 + C5611) * C2295 +
            (C5612 + C5613 + C5614) * C50635) *
               C50779 * C2092) *
              C50677 * C50911 +
          (((C5608 + C5607 + C5606) * C2294 + (C5605 + C5604 + C5603) * C2289 +
            (C5937 + C5938 + C5939) * C2295 +
            (C5940 + C5941 + C5942) * C50635) *
               C50779 * C50967 -
           ((C5227 + C5228 + C5229) * C50635 + (C5230 + C5231 + C5232) * C2295 +
            (C5226 + C5225 + C5224) * C2289 + (C5223 + C5222 + C5221) * C2294) *
               C50779 * C50966 -
           ((C5183 * C5573 + C5180 * C5577 + C5182 * C1852 + C5179 * C1859 +
             C5181 * C483 + C5178 * C496) *
                C50635 +
            (C5183 * C5568 + C5180 * C5574 + C5182 * C1847 + C5179 * C1853 +
             C5181 * C466 + C5178 * C482) *
                C2295 +
            (C5614 + C5613 + C5612) * C2289 + (C5611 + C5610 + C5609) * C2294) *
               C50779 * C2092) *
              C50677 * C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C118 +
            (C117 * C130 + C50790 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50779 * C1676 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50790 * C493) * C106 +
            (C117 * C463 + C50790 * C477) * C118) *
               C50779 * C50757) *
              C278 +
          (((C117 * C889 + C50790 * C894) * C118 +
            (C117 * C895 + C50790 * C904) * C106 + C922 * C119 + C923 * C107 +
            C924 * C120 + C925 * C108 + C926 * C121 + C927 * C109) *
               C50779 * C50757 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50790 * C316) * C106 +
            (C117 * C286 + C50790 * C300) * C118) *
               C50779 * C1676) *
              C279 +
          (((C117 * C287 + C50790 * C301) * C118 +
            (C117 * C302 + C50790 * C317) * C106 + C354 * C119 + C355 * C107 +
            C356 * C120 + C357 * C108 + C358 * C121 + C359 * C109) *
               C50779 * C1676 -
           ((C117 * C1566 + C50790 * C1574) * C109 +
            (C117 * C1562 + C50790 * C1567) * C121 +
            (C117 * C1568 + C50790 * C1575) * C108 +
            (C117 * C1563 + C50790 * C1569) * C120 +
            (C117 * C1570 + C50790 * C1576) * C107 +
            (C117 * C1564 + C50790 * C1571) * C119 +
            (C117 * C1572 + C50790 * C1577) * C106 +
            (C117 * C1565 + C50790 * C1573) * C118) *
               C50779 * C50757) *
              C280) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C118 +
            (C117 * C130 + C50790 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50779 * C1676 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50790 * C493) * C106 +
            (C117 * C463 + C50790 * C477) * C118) *
               C50779 * C50757) *
              C50677 * C1027 +
          ((C530 * C118 + C529 * C106 + C528 * C119 + C527 * C107 +
            C526 * C120 + C525 * C108 + C758 * C121 + C759 * C109) *
               C50779 * C50757 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50779 * C1676) *
              C50677 * C1028 +
          ((C173 * C118 + C174 * C106 + C175 * C119 + C176 * C107 +
            C178 * C120 + C177 * C108 + C179 * C121 + C180 * C109) *
               C50779 * C1676 -
           ((C117 * C750 + C50790 * C752) * C109 +
            (C117 * C749 + C50790 * C751) * C121 + C759 * C108 + C758 * C120 +
            C525 * C107 + C526 * C119 + C527 * C106 + C528 * C118) *
               C50779 * C50757) *
              C50677 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C2294 +
             (C117 * C130 + C50790 * C143) * C2289 + C171 * C2295 +
             C172 * C50635) *
                C2291 +
            (C2504 + C2505 + C2459 + C2460) * C2292 + C2520 * C2293) *
               C1676 -
           (C4186 * C2293 + (C3215 + C3216 + C3241 + C3242) * C2292 +
            (C529 * C50635 + C530 * C2295 +
             (C117 * C476 + C50790 * C493) * C2289 +
             (C117 * C463 + C50790 * C477) * C2294) *
                C2291) *
               C50757) *
              C50677 * C1027 +
          (((C530 * C2294 + C529 * C2289 + C528 * C2295 + C527 * C50635) *
                C2291 +
            (C3225 + C3226 + C3227 + C3228) * C2292 +
            (C3229 + C3230 + C3231 + C3232) * C2293) *
               C50757 -
           (C2518 * C2293 + (C2482 + C2481 + C2480 + C2479) * C2292 +
            (C174 * C50635 + C173 * C2295 + C172 * C2289 + C171 * C2294) *
                C2291) *
               C1676) *
              C50677 * C1028 +
          (((C173 * C2294 + C174 * C2289 + C175 * C2295 + C176 * C50635) *
                C2291 +
            (C2843 + C2844 + C2845 + C2846) * C2292 +
            (C2847 + C2848 + C2849 + C2850) * C2293) *
               C1676 -
           (((C117 * C1566 + C50790 * C1574) * C50635 +
             (C117 * C1562 + C50790 * C1567) * C2295 + C3002 * C2289 +
             C3001 * C2294) *
                C2293 +
            (C927 * C50635 + C926 * C2295 + C925 * C2289 + C924 * C2294) *
                C2292 +
            (C525 * C50635 + C526 * C2295 + C527 * C2289 + C528 * C2294) *
                C2291) *
               C50757) *
              C50677 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C2294 +
             (C117 * C130 + C50790 * C143) * C2289 + C171 * C2295 +
             C172 * C50635) *
                C2291 +
            (C2504 + C2505 + C2459 + C2460) * C2292 + C2520 * C2293) *
               C1676 -
           (C4186 * C2293 + (C3215 + C3216 + C3241 + C3242) * C2292 +
            (C529 * C50635 + C530 * C2295 +
             (C117 * C476 + C50790 * C493) * C2289 +
             (C117 * C463 + C50790 * C477) * C2294) *
                C2291) *
               C50757) *
              C278 +
          (((C3242 + C3241 + C3216 + C3215) * C2291 +
            (C3240 + C3239 + C3210 + C3209) * C2292 +
            (C4187 + C4188 + C4181 + C4182) * C2293) *
               C50757 -
           (C3505 * C2293 + (C2466 + C2465 + C2507 + C2506) * C2292 +
            (C2460 + C2459 + C2505 + C2504) * C2291) *
               C1676) *
              C279 +
          ((C2520 * C2291 + (C2511 + C2510 + C2509 + C2508) * C2292 +
            (C3506 + C3507 + C3500 + C3501) * C2293) *
               C1676 -
           (((C117 * C4169 + C50790 * C4173) * C50635 +
             (C117 * C4167 + C50790 * C4170) * C2295 +
             (C117 * C4171 + C50790 * C4174) * C2289 +
             (C117 * C4168 + C50790 * C4172) * C2294) *
                C2293 +
            (C4182 + C4181 + C4188 + C4187) * C2292 + C4186 * C2291) *
               C50757) *
              C280) *
         C50658) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5181 * C122 + C5178 * C129 + C5182 * C463 + C5179 * C477 +
             C5183 * C464 + C5180 * C478) *
                C2294 +
            (C5181 * C130 + C5178 * C143 + C5182 * C476 + C5179 * C493 +
             C5183 * C479 + C5180 * C494) *
                C2289 +
            (C5221 + C5222 + C5223) * C2295 +
            (C5224 + C5225 + C5226) * C50635) *
               C50779 * C1676 -
           ((C5603 + C5604 + C5605) * C50635 + (C5606 + C5607 + C5608) * C2295 +
            (C5183 * C1856 + C5180 * C1861 + C5182 * C479 + C5179 * C494 +
             C5181 * C476 + C5178 * C493) *
                C2289 +
            (C5183 * C1849 + C5180 * C1857 + C5182 * C464 + C5179 * C478 +
             C5181 * C463 + C5178 * C477) *
                C2294) *
               C50779 * C50757) *
              C50677 * C1027 +
          (((C5608 + C5607 + C5606) * C2294 + (C5605 + C5604 + C5603) * C2289 +
            (C5937 + C5938 + C5939) * C2295 +
            (C5940 + C5941 + C5942) * C50635) *
               C50779 * C50757 -
           ((C5227 + C5228 + C5229) * C50635 + (C5230 + C5231 + C5232) * C2295 +
            (C5226 + C5225 + C5224) * C2289 + (C5223 + C5222 + C5221) * C2294) *
               C50779 * C1676) *
              C50677 * C1028 +
          (((C5232 + C5231 + C5230) * C2294 + (C5229 + C5228 + C5227) * C2289 +
            (C5233 + C5234 + C5235) * C2295 +
            (C5236 + C5237 + C5238) * C50635) *
               C50779 * C1676 -
           ((C5183 * C1850 + C5180 * C1858 + C5182 * C485 + C5179 * C497 +
             C5181 * C470 + C5178 * C490) *
                C50635 +
            (C5183 * C1846 + C5180 * C1851 + C5182 * C467 + C5179 * C484 +
             C5181 * C460 + C5178 * C471) *
                C2295 +
            (C5942 + C5941 + C5940) * C2289 + (C5939 + C5938 + C5937) * C2294) *
               C50779 * C50757) *
              C50677 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5181 * C122 + C5178 * C129 + C5182 * C463 + C5179 * C477 +
             C5183 * C464 + C5180 * C478) *
                C2294 +
            (C5181 * C130 + C5178 * C143 + C5182 * C476 + C5179 * C493 +
             C5183 * C479 + C5180 * C494) *
                C2289 +
            (C5221 + C5222 + C5223) * C2295 +
            (C5224 + C5225 + C5226) * C50635) *
               C50779 * C1676 -
           ((C5603 + C5604 + C5605) * C50635 + (C5606 + C5607 + C5608) * C2295 +
            (C5183 * C1856 + C5180 * C1861 + C5182 * C479 + C5179 * C494 +
             C5181 * C476 + C5178 * C493) *
                C2289 +
            (C5183 * C1849 + C5180 * C1857 + C5182 * C464 + C5179 * C478 +
             C5181 * C463 + C5178 * C477) *
                C2294) *
               C50779 * C50757) *
              C278 +
          (((C5181 * C889 + C5178 * C894 + C5182 * C1218 + C5179 * C1226 +
             C5183 * C4581 + C5180 * C4589) *
                C2294 +
            (C5181 * C895 + C5178 * C904 + C5182 * C1225 + C5179 * C1230 +
             C5183 * C4588 + C5180 * C4593) *
                C2289 +
            (C6153 + C6154 + C6155) * C2295 +
            (C6156 + C6157 + C6158) * C50635) *
               C50779 * C50757 -
           ((C5409 + C5410 + C5411) * C50635 + (C5412 + C5413 + C5414) * C2295 +
            (C5183 * C1225 + C5180 * C1230 + C5182 * C895 + C5179 * C904 +
             C5181 * C299 + C5178 * C316) *
                C2289 +
            (C5183 * C1218 + C5180 * C1226 + C5182 * C889 + C5179 * C894 +
             C5181 * C286 + C5178 * C300) *
                C2294) *
               C50779 * C1676) *
              C279 +
          (((C5181 * C287 + C5178 * C301 + C5182 * C1565 + C5179 * C1573 +
             C5183 * C2666 + C5180 * C2669) *
                C2294 +
            (C5181 * C302 + C5178 * C317 + C5182 * C1572 + C5179 * C1577 +
             C5183 * C2670 + C5180 * C2675) *
                C2289 +
            (C5415 + C5416 + C5417) * C2295 +
            (C5418 + C5419 + C5420) * C50635) *
               C50779 * C1676 -
           ((C5183 * C4582 + C5180 * C4590 + C5182 * C2672 + C5179 * C2676 +
             C5181 * C1570 + C5178 * C1576) *
                C50635 +
            (C5183 * C4578 + C5180 * C4583 + C5182 * C2667 + C5179 * C2671 +
             C5181 * C1564 + C5178 * C1571) *
                C2295 +
            (C5183 * C4584 + C5180 * C4591 + C5182 * C2670 + C5179 * C2675 +
             C5181 * C1572 + C5178 * C1577) *
                C2289 +
            (C5183 * C4579 + C5180 * C4585 + C5182 * C2666 + C5179 * C2669 +
             C5181 * C1565 + C5178 * C1573) *
                C2294) *
               C50779 * C50757) *
              C280) *
         C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                C8029 +
            (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                C50960 +
            (C10763 + C10764) * C8030 + (C10765 + C10766) * C50961 +
            C10779 * C8031 + C10780 * C8026) *
               C50779 * C50693 * C50919 -
           (C11317 * C8026 + C11318 * C8031 + (C10965 + C10966) * C50961 +
            (C10967 + C10968) * C8030 +
            (C10729 * C895 + C50854 * C904 + C10728 * C299 + C50933 * C316) *
                C50960 +
            (C10729 * C889 + C50854 * C894 + C10728 * C286 + C50933 * C300) *
                C8029) *
               C50779 * C50693 * C50729) *
              C50962 +
          (((C10968 + C10967) * C8029 + (C10966 + C10965) * C50960 +
            (C10964 + C10963) * C8030 + (C10962 + C10961) * C50961 +
            (C11327 + C11328) * C8031 + (C11329 + C11330) * C8026) *
               C50779 * C50693 * C50729 -
           (C10781 * C8026 + C10782 * C8031 + (C10770 + C10769) * C50961 +
            (C10768 + C10767) * C8030 + (C10766 + C10765) * C50960 +
            (C10764 + C10763) * C8029) *
               C50779 * C50693 * C50919) *
              C50963 +
          ((C10779 * C8029 + C10780 * C50960 + (C10774 + C10773) * C8030 +
            (C10772 + C10771) * C50961 + (C10775 + C10776) * C8031 +
            (C10777 + C10778) * C8026) *
               C50779 * C50693 * C50919 -
           ((C10729 * C902 + C50854 * C908 + C10728 * C310 + C50933 * C321) *
                C8026 +
            (C10729 * C893 + C50854 * C903 + C10728 * C291 + C50933 * C309) *
                C8031 +
            (C11330 + C11329) * C50961 + (C11328 + C11327) * C8030 +
            C11317 * C50960 + C11318 * C8029) *
               C50779 * C50693 * C50729) *
              C638)) /
        (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C8029 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C50960 +
             (C10763 + C10764) * C8030 + (C10765 + C10766) * C50961 +
             C10779 * C8031 + C10780 * C8026) *
                C50779 * C50920 -
            (C11477 * C8026 + C11478 * C8031 + (C11159 + C11160) * C50961 +
             (C11161 + C11162) * C8030 +
             (C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                 C50960 +
             (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                 C8029) *
                C50779 * C50757) *
               C50919 +
           (((C10728 * C889 + C50933 * C894 + C10729 * C1218 + C50854 * C1226) *
                 C8029 +
             (C10728 * C895 + C50933 * C904 + C10729 * C1225 + C50854 * C1230) *
                 C50960 +
             (C11701 + C11702) * C8030 + (C11703 + C11704) * C50961 +
             (C11705 + C11706) * C8031 + (C11707 + C11708) * C8026) *
                C50779 * C50757 -
            (C11317 * C8026 + C11318 * C8031 + (C10965 + C10966) * C50961 +
             (C10967 + C10968) * C8030 +
             (C10729 * C895 + C50854 * C904 + C10728 * C299 + C50933 * C316) *
                 C50960 +
             (C10729 * C889 + C50854 * C894 + C10728 * C286 + C50933 * C300) *
                 C8029) *
                C50779 * C50920) *
               C50729) *
              C281 +
          ((((C11162 + C11161) * C8029 + (C11160 + C11159) * C50960 +
             (C11158 + C11157) * C8030 + (C11156 + C11155) * C50961 +
             (C11487 + C11488) * C8031 + (C11489 + C11490) * C8026) *
                C50779 * C50757 -
            (C10781 * C8026 + C10782 * C8031 + (C10770 + C10769) * C50961 +
             (C10768 + C10767) * C8030 + (C10766 + C10765) * C50960 +
             (C10764 + C10763) * C8029) *
                C50779 * C50920) *
               C50919 +
           (((C10968 + C10967) * C8029 + (C10966 + C10965) * C50960 +
             (C10964 + C10963) * C8030 + (C10962 + C10961) * C50961 +
             (C11327 + C11328) * C8031 + (C11329 + C11330) * C8026) *
                C50779 * C50920 -
            ((C10729 * C1219 + C50854 * C1227 + C10728 * C901 + C50933 * C907) *
                 C8026 +
             (C10729 * C1215 + C50854 * C1220 + C10728 * C892 + C50933 * C900) *
                 C8031 +
             (C11708 + C11707) * C50961 + (C11706 + C11705) * C8030 +
             (C11704 + C11703) * C50960 + (C11702 + C11701) * C8029) *
                C50779 * C50757) *
               C50729) *
              C50664)) /
        (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                C8029 +
            (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                C50960 +
            (C10763 + C10764) * C8030 + (C10765 + C10766) * C50961 +
            C10779 * C8031 + C10780 * C8026) *
               C50779 * C50693 * C278 -
           ((C10961 + C10962) * C8026 + (C10963 + C10964) * C8031 +
            (C10965 + C10966) * C50961 + (C10967 + C10968) * C8030 +
            (C10729 * C895 + C50854 * C904 + C10728 * C299 + C50933 * C316) *
                C50960 +
            (C10729 * C889 + C50854 * C894 + C10728 * C286 + C50933 * C300) *
                C8029) *
               C50779 * C50693 * C279 +
           ((C10728 * C287 + C50933 * C301 + C10729 * C1565 + C50854 * C1573) *
                C8029 +
            (C10728 * C302 + C50933 * C317 + C10729 * C1572 + C50854 * C1577) *
                C50960 +
            (C10969 + C10970) * C8030 + (C10971 + C10972) * C50961 +
            (C10973 + C10974) * C8031 + (C10975 + C10976) * C8026) *
               C50779 * C50693 * C280) *
              C281 +
          (((C10968 + C10967) * C8029 + (C10966 + C10965) * C50960 +
            (C10964 + C10963) * C8030 + (C10962 + C10961) * C50961 +
            (C10728 * C283 + C50933 * C294 + C10729 * C892 + C50854 * C900) *
                C8031 +
            (C10728 * C293 + C50933 * C313 + C10729 * C901 + C50854 * C907) *
                C8026) *
               C50779 * C50693 * C279 -
           (C10781 * C8026 + C10782 * C8031 + (C10770 + C10769) * C50961 +
            (C10768 + C10767) * C8030 + (C10766 + C10765) * C50960 +
            (C10764 + C10763) * C8029) *
               C50779 * C50693 * C278 -
           ((C10729 * C1566 + C50854 * C1574 + C10728 * C308 + C50933 * C320) *
                C8026 +
            (C10729 * C1562 + C50854 * C1567 + C10728 * C290 + C50933 * C307) *
                C8031 +
            (C10976 + C10975) * C50961 + (C10974 + C10973) * C8030 +
            (C10972 + C10971) * C50960 + (C10970 + C10969) * C8029) *
               C50779 * C50693 * C280) *
              C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
               C8029 +
           (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
               C50960 +
           (C10763 + C10764) * C8030 + (C10765 + C10766) * C50961 +
           C10779 * C8031 + C10780 * C8026) *
              C50779 * C50693 * C50677 * C113 -
          (C10781 * C8026 + C10782 * C8031 + (C10770 + C10769) * C50961 +
           (C10768 + C10767) * C8030 + (C10766 + C10765) * C50960 +
           (C10764 + C10763) * C8029) *
              C50779 * C50693 * C50677 * C114 +
          (C10779 * C8029 + C10780 * C50960 + (C10774 + C10773) * C8030 +
           (C10772 + C10771) * C50961 + (C10775 + C10776) * C8031 +
           (C10777 + C10778) * C8026) *
              C50779 * C50693 * C50677 * C115 -
          ((C10729 * C750 + C50854 * C752 + C10728 * C140 + C50933 * C148) *
               C8026 +
           (C10729 * C749 + C50854 * C751 + C10728 * C127 + C50933 * C139) *
               C8031 +
           (C10778 + C10777) * C50961 + (C10776 + C10775) * C8030 +
           C10781 * C50960 + C10782 * C8029) *
              C50779 * C50693 * C50677 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                C8029 +
            (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                C50960 +
            (C10763 + C10764) * C8030 + (C10765 + C10766) * C50961 +
            C10779 * C8031 + C10780 * C8026) *
               C50779 * C457 -
           ((C11155 + C11156) * C8026 + (C11157 + C11158) * C8031 +
            (C11159 + C11160) * C50961 + (C11161 + C11162) * C8030 +
            (C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                C50960 +
            (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                C8029) *
               C50779 * C458 +
           ((C10728 * C464 + C50933 * C478 + C10729 * C1849 + C50854 * C1857) *
                C8029 +
            (C10728 * C479 + C50933 * C494 + C10729 * C1856 + C50854 * C1861) *
                C50960 +
            (C11163 + C11164) * C8030 + (C11165 + C11166) * C50961 +
            (C11167 + C11168) * C8031 + (C11169 + C11170) * C8026) *
               C50779 * C459) *
              C50677 * C281 +
          (((C11162 + C11161) * C8029 + (C11160 + C11159) * C50960 +
            (C11158 + C11157) * C8030 + (C11156 + C11155) * C50961 +
            (C10728 * C460 + C50933 * C471 + C10729 * C467 + C50854 * C484) *
                C8031 +
            (C10728 * C470 + C50933 * C490 + C10729 * C485 + C50854 * C497) *
                C8026) *
               C50779 * C458 -
           (C10781 * C8026 + C10782 * C8031 + (C10770 + C10769) * C50961 +
            (C10768 + C10767) * C8030 + (C10766 + C10765) * C50960 +
            (C10764 + C10763) * C8029) *
               C50779 * C457 -
           ((C10729 * C1850 + C50854 * C1858 + C10728 * C485 + C50933 * C497) *
                C8026 +
            (C10729 * C1846 + C50854 * C1851 + C10728 * C467 + C50933 * C484) *
                C8031 +
            (C11170 + C11169) * C50961 + (C11168 + C11167) * C8030 +
            (C11166 + C11165) * C50960 + (C11164 + C11163) * C8029) *
               C50779 * C459) *
              C50677 * C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                C8029 +
            (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                C50960 +
            (C10763 + C10764) * C8030 + (C10765 + C10766) * C50961 +
            C10779 * C8031 + C10780 * C8026) *
               C50779 * C50920 -
           (C11477 * C8026 + C11478 * C8031 + (C11159 + C11160) * C50961 +
            (C11161 + C11162) * C8030 +
            (C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                C50960 +
            (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                C8029) *
               C50779 * C50757) *
              C50677 * C50962 +
          (((C11162 + C11161) * C8029 + (C11160 + C11159) * C50960 +
            (C11158 + C11157) * C8030 + (C11156 + C11155) * C50961 +
            (C11487 + C11488) * C8031 + (C11489 + C11490) * C8026) *
               C50779 * C50757 -
           (C10781 * C8026 + C10782 * C8031 + (C10770 + C10769) * C50961 +
            (C10768 + C10767) * C8030 + (C10766 + C10765) * C50960 +
            (C10764 + C10763) * C8029) *
               C50779 * C50920) *
              C50677 * C50963 +
          ((C10779 * C8029 + C10780 * C50960 + (C10774 + C10773) * C8030 +
            (C10772 + C10771) * C50961 + (C10775 + C10776) * C8031 +
            (C10777 + C10778) * C8026) *
               C50779 * C50920 -
           ((C10729 * C488 + C50854 * C499 + C10728 * C487 + C50933 * C498) *
                C8026 +
            (C10729 * C469 + C50854 * C489 + C10728 * C468 + C50933 * C486) *
                C8031 +
            (C11490 + C11489) * C50961 + (C11488 + C11487) * C8030 +
            C11477 * C50960 + C11478 * C8029) *
               C50779 * C50757) *
              C50677 * C638)) /
        (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
               C8029 +
           (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
               C50960 +
           (C10763 + C10764) * C8030 + (C10765 + C10766) * C50961 +
           C10779 * C8031 + C10780 * C8026) *
              C50779 * C50693 * C50677 * C113 -
          (C10781 * C8026 + C10782 * C8031 + (C10770 + C10769) * C50961 +
           (C10768 + C10767) * C8030 + (C10766 + C10765) * C50960 +
           (C10764 + C10763) * C8029) *
              C50779 * C50693 * C50677 * C114 +
          (C10779 * C8029 + C10780 * C50960 + (C10774 + C10773) * C8030 +
           (C10772 + C10771) * C50961 + (C10775 + C10776) * C8031 +
           (C10777 + C10778) * C8026) *
              C50779 * C50693 * C50677 * C115 -
          ((C10729 * C750 + C50854 * C752 + C10728 * C140 + C50933 * C148) *
               C8026 +
           (C10729 * C749 + C50854 * C751 + C10728 * C127 + C50933 * C139) *
               C8031 +
           (C10778 + C10777) * C50961 + (C10776 + C10775) * C8030 +
           C10781 * C50960 + C10782 * C8029) *
              C50779 * C50693 * C50677 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                C8029 +
            (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                C50960 +
            (C10763 + C10764) * C8030 + (C10765 + C10766) * C50961 +
            C10779 * C8031 + C10780 * C8026) *
               C50779 * C50693 * C278 -
           ((C10961 + C10962) * C8026 + (C10963 + C10964) * C8031 +
            (C10965 + C10966) * C50961 + (C10967 + C10968) * C8030 +
            (C10729 * C895 + C50854 * C904 + C10728 * C299 + C50933 * C316) *
                C50960 +
            (C10729 * C889 + C50854 * C894 + C10728 * C286 + C50933 * C300) *
                C8029) *
               C50779 * C50693 * C279 +
           ((C10728 * C287 + C50933 * C301 + C10729 * C1565 + C50854 * C1573) *
                C8029 +
            (C10728 * C302 + C50933 * C317 + C10729 * C1572 + C50854 * C1577) *
                C50960 +
            (C10969 + C10970) * C8030 + (C10971 + C10972) * C50961 +
            (C10973 + C10974) * C8031 + (C10975 + C10976) * C8026) *
               C50779 * C50693 * C280) *
              C281 +
          (((C10968 + C10967) * C8029 + (C10966 + C10965) * C50960 +
            (C10964 + C10963) * C8030 + (C10962 + C10961) * C50961 +
            (C10728 * C283 + C50933 * C294 + C10729 * C892 + C50854 * C900) *
                C8031 +
            (C10728 * C293 + C50933 * C313 + C10729 * C901 + C50854 * C907) *
                C8026) *
               C50779 * C50693 * C279 -
           (C10781 * C8026 + C10782 * C8031 + (C10770 + C10769) * C50961 +
            (C10768 + C10767) * C8030 + (C10766 + C10765) * C50960 +
            (C10764 + C10763) * C8029) *
               C50779 * C50693 * C278 -
           ((C10729 * C1566 + C50854 * C1574 + C10728 * C308 + C50933 * C320) *
                C8026 +
            (C10729 * C1562 + C50854 * C1567 + C10728 * C290 + C50933 * C307) *
                C8031 +
            (C10976 + C10975) * C50961 + (C10974 + C10973) * C8030 +
            (C10972 + C10971) * C50960 + (C10970 + C10969) * C8029) *
               C50779 * C50693 * C280) *
              C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                C8029 +
            (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                C50960 +
            (C10763 + C10764) * C8030 + (C10765 + C10766) * C50961 +
            C10779 * C8031 + C10780 * C8026) *
               C50779 * C50693 * C50964 -
           (C11317 * C8026 + C11318 * C8031 + (C10965 + C10966) * C50961 +
            (C10967 + C10968) * C8030 +
            (C10729 * C895 + C50854 * C904 + C10728 * C299 + C50933 * C316) *
                C50960 +
            (C10729 * C889 + C50854 * C894 + C10728 * C286 + C50933 * C300) *
                C8029) *
               C50779 * C50693 * C50965 +
           ((C10728 * C287 + C50933 * C301 + C10729 * C1565 + C50854 * C1573) *
                C8029 +
            (C10728 * C302 + C50933 * C317 + C10729 * C1572 + C50854 * C1577) *
                C50960 +
            (C10969 + C10970) * C8030 + (C10971 + C10972) * C50961 +
            (C10973 + C10974) * C8031 + (C10975 + C10976) * C8026) *
               C50779 * C50693 * C1331) *
              C50911 +
          (((C10968 + C10967) * C8029 + (C10966 + C10965) * C50960 +
            (C10964 + C10963) * C8030 + (C10962 + C10961) * C50961 +
            (C11327 + C11328) * C8031 + (C11329 + C11330) * C8026) *
               C50779 * C50693 * C50965 -
           (C10781 * C8026 + C10782 * C8031 + (C10770 + C10769) * C50961 +
            (C10768 + C10767) * C8030 + (C10766 + C10765) * C50960 +
            (C10764 + C10763) * C8029) *
               C50779 * C50693 * C50964 -
           ((C10729 * C1566 + C50854 * C1574 + C10728 * C308 + C50933 * C320) *
                C8026 +
            (C10729 * C1562 + C50854 * C1567 + C10728 * C290 + C50933 * C307) *
                C8031 +
            (C10976 + C10975) * C50961 + (C10974 + C10973) * C8030 +
            (C10972 + C10971) * C50960 + (C10970 + C10969) * C8029) *
               C50779 * C50693 * C1331) *
              C50664)) /
        (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                C8029 +
            (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                C50960 +
            (C10763 + C10764) * C8030 + (C10765 + C10766) * C50961 +
            C10779 * C8031 + C10780 * C8026) *
               C50779 * C50920 -
           (C11477 * C8026 + C11478 * C8031 + (C11159 + C11160) * C50961 +
            (C11161 + C11162) * C8030 +
            (C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                C50960 +
            (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                C8029) *
               C50779 * C50757) *
              C50964 +
          (((C10728 * C889 + C50933 * C894 + C10729 * C1218 + C50854 * C1226) *
                C8029 +
            (C10728 * C895 + C50933 * C904 + C10729 * C1225 + C50854 * C1230) *
                C50960 +
            (C11701 + C11702) * C8030 + (C11703 + C11704) * C50961 +
            (C11705 + C11706) * C8031 + (C11707 + C11708) * C8026) *
               C50779 * C50757 -
           (C11317 * C8026 + C11318 * C8031 + (C10965 + C10966) * C50961 +
            (C10967 + C10968) * C8030 +
            (C10729 * C895 + C50854 * C904 + C10728 * C299 + C50933 * C316) *
                C50960 +
            (C10729 * C889 + C50854 * C894 + C10728 * C286 + C50933 * C300) *
                C8029) *
               C50779 * C50920) *
              C50965 +
          (((C10728 * C287 + C50933 * C301 + C10729 * C1565 + C50854 * C1573) *
                C8029 +
            (C10728 * C302 + C50933 * C317 + C10729 * C1572 + C50854 * C1577) *
                C50960 +
            (C10969 + C10970) * C8030 + (C10971 + C10972) * C50961 +
            (C10973 + C10974) * C8031 + (C10975 + C10976) * C8026) *
               C50779 * C50920 -
           ((C10729 * C2673 + C50854 * C2677 + C10728 * C1568 +
             C50933 * C1575) *
                C8026 +
            (C10729 * C2668 + C50854 * C2674 + C10728 * C1563 +
             C50933 * C1569) *
                C8031 +
            (C10729 * C2672 + C50854 * C2676 + C10728 * C1570 +
             C50933 * C1576) *
                C50961 +
            (C10729 * C2667 + C50854 * C2671 + C10728 * C1564 +
             C50933 * C1571) *
                C8030 +
            (C10729 * C2670 + C50854 * C2675 + C10728 * C1572 +
             C50933 * C1577) *
                C50960 +
            (C10729 * C2666 + C50854 * C2669 + C10728 * C1565 +
             C50933 * C1573) *
                C8029) *
               C50779 * C50757) *
              C1331) *
         C50658) /
        (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
               C8029 +
           (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
               C50960 +
           (C10763 + C10764) * C8030 + (C10765 + C10766) * C50961 +
           C10779 * C8031 + C10780 * C8026) *
              C50779 * C50693 * C1096 -
          (C11317 * C8026 + C11318 * C8031 + (C10965 + C10966) * C50961 +
           (C10967 + C10968) * C8030 +
           (C10729 * C895 + C50854 * C904 + C10728 * C299 + C50933 * C316) *
               C50960 +
           (C10729 * C889 + C50854 * C894 + C10728 * C286 + C50933 * C300) *
               C8029) *
              C50779 * C50693 * C1097 +
          ((C10728 * C287 + C50933 * C301 + C10729 * C1565 + C50854 * C1573) *
               C8029 +
           (C10728 * C302 + C50933 * C317 + C10729 * C1572 + C50854 * C1577) *
               C50960 +
           (C10969 + C10970) * C8030 + (C10971 + C10972) * C50961 +
           (C10973 + C10974) * C8031 + (C10975 + C10976) * C8026) *
              C50779 * C50693 * C1098 -
          ((C10729 * C3203 + C50854 * C3207 + C10728 * C1107 + C50933 * C1114) *
               C8026 +
           (C10729 * C3198 + C50854 * C3204 + C10728 * C1102 + C50933 * C1108) *
               C8031 +
           (C10729 * C3202 + C50854 * C3206 + C10728 * C1109 + C50933 * C1115) *
               C50961 +
           (C10729 * C3197 + C50854 * C3201 + C10728 * C1103 + C50933 * C1110) *
               C8030 +
           (C10729 * C3200 + C50854 * C3205 + C10728 * C1111 + C50933 * C1116) *
               C50960 +
           (C10729 * C3196 + C50854 * C3199 + C10728 * C1104 + C50933 * C1112) *
               C8029) *
              C50779 * C50693 * C1099) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                C8029 +
            (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                C50960 +
            (C10763 + C10764) * C8030 + (C10765 + C10766) * C50961 +
            C10779 * C8031 + C10780 * C8026) *
               C50779 * C50693 * C1025 -
           (C11317 * C8026 + C11318 * C8031 + (C10965 + C10966) * C50961 +
            (C10967 + C10968) * C8030 +
            (C10729 * C895 + C50854 * C904 + C10728 * C299 + C50933 * C316) *
                C50960 +
            (C10729 * C889 + C50854 * C894 + C10728 * C286 + C50933 * C300) *
                C8029) *
               C50779 * C50693 * C50729) *
              C1027 +
          (((C10968 + C10967) * C8029 + (C10966 + C10965) * C50960 +
            (C10964 + C10963) * C8030 + (C10962 + C10961) * C50961 +
            (C11327 + C11328) * C8031 + (C11329 + C11330) * C8026) *
               C50779 * C50693 * C50729 -
           (C10781 * C8026 + C10782 * C8031 + (C10770 + C10769) * C50961 +
            (C10768 + C10767) * C8030 + (C10766 + C10765) * C50960 +
            (C10764 + C10763) * C8029) *
               C50779 * C50693 * C1025) *
              C1028 +
          ((C10779 * C8029 + C10780 * C50960 + (C10774 + C10773) * C8030 +
            (C10772 + C10771) * C50961 + (C10775 + C10776) * C8031 +
            (C10777 + C10778) * C8026) *
               C50779 * C50693 * C1025 -
           ((C10729 * C902 + C50854 * C908 + C10728 * C310 + C50933 * C321) *
                C8026 +
            (C10729 * C893 + C50854 * C903 + C10728 * C291 + C50933 * C309) *
                C8031 +
            (C11330 + C11329) * C50961 + (C11328 + C11327) * C8030 +
            C11317 * C50960 + C11318 * C8029) *
               C50779 * C50693 * C50729) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                C8029 +
            (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                C50960 +
            (C10763 + C10764) * C8030 + (C10765 + C10766) * C50961 +
            C10779 * C8031 + C10780 * C8026) *
               C50779 * C457 -
           (C11477 * C8026 + C11478 * C8031 + (C11159 + C11160) * C50961 +
            (C11161 + C11162) * C8030 +
            (C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                C50960 +
            (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                C8029) *
               C50779 * C458 +
           ((C10728 * C464 + C50933 * C478 + C10729 * C1849 + C50854 * C1857) *
                C8029 +
            (C10728 * C479 + C50933 * C494 + C10729 * C1856 + C50854 * C1861) *
                C50960 +
            (C11163 + C11164) * C8030 + (C11165 + C11166) * C50961 +
            (C11167 + C11168) * C8031 + (C11169 + C11170) * C8026) *
               C50779 * C459) *
              C1025 +
          (((C10728 * C889 + C50933 * C894 + C10729 * C1218 + C50854 * C1226) *
                C8029 +
            (C10728 * C895 + C50933 * C904 + C10729 * C1225 + C50854 * C1230) *
                C50960 +
            (C11701 + C11702) * C8030 + (C11703 + C11704) * C50961 +
            (C11705 + C11706) * C8031 + (C11707 + C11708) * C8026) *
               C50779 * C458 -
           (C11317 * C8026 + C11318 * C8031 + (C10965 + C10966) * C50961 +
            (C10967 + C10968) * C8030 +
            (C10729 * C895 + C50854 * C904 + C10728 * C299 + C50933 * C316) *
                C50960 +
            (C10729 * C889 + C50854 * C894 + C10728 * C286 + C50933 * C300) *
                C8029) *
               C50779 * C457 -
           ((C10729 * C6137 + C50854 * C6139 + C10728 * C1221 +
             C50933 * C1228) *
                C8026 +
            (C10729 * C6136 + C50854 * C6138 + C10728 * C1216 +
             C50933 * C1222) *
                C8031 +
            (C10729 * C4586 + C50854 * C4592 + C10728 * C1223 +
             C50933 * C1229) *
                C50961 +
            (C10729 * C4580 + C50854 * C4587 + C10728 * C1217 +
             C50933 * C1224) *
                C8030 +
            (C10729 * C4588 + C50854 * C4593 + C10728 * C1225 +
             C50933 * C1230) *
                C50960 +
            (C10729 * C4581 + C50854 * C4589 + C10728 * C1218 +
             C50933 * C1226) *
                C8029) *
               C50779 * C459) *
              C50729) *
         C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C8029 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C50960 +
             (C10763 + C10764) * C8030 + (C10765 + C10766) * C50961 +
             C10779 * C8031 + C10780 * C8026) *
                C50779 * C50920 -
            (C11477 * C8026 + C11478 * C8031 + (C11159 + C11160) * C50961 +
             (C11161 + C11162) * C8030 +
             (C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                 C50960 +
             (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                 C8029) *
                C50779 * C50757) *
               C1025 +
           (((C10728 * C889 + C50933 * C894 + C10729 * C1218 + C50854 * C1226) *
                 C8029 +
             (C10728 * C895 + C50933 * C904 + C10729 * C1225 + C50854 * C1230) *
                 C50960 +
             (C11701 + C11702) * C8030 + (C11703 + C11704) * C50961 +
             (C11705 + C11706) * C8031 + (C11707 + C11708) * C8026) *
                C50779 * C50757 -
            (C11317 * C8026 + C11318 * C8031 + (C10965 + C10966) * C50961 +
             (C10967 + C10968) * C8030 +
             (C10729 * C895 + C50854 * C904 + C10728 * C299 + C50933 * C316) *
                 C50960 +
             (C10729 * C889 + C50854 * C894 + C10728 * C286 + C50933 * C300) *
                 C8029) *
                C50779 * C50920) *
               C50729) *
              C50911 +
          ((((C11162 + C11161) * C8029 + (C11160 + C11159) * C50960 +
             (C11158 + C11157) * C8030 + (C11156 + C11155) * C50961 +
             (C11487 + C11488) * C8031 + (C11489 + C11490) * C8026) *
                C50779 * C50757 -
            (C10781 * C8026 + C10782 * C8031 + (C10770 + C10769) * C50961 +
             (C10768 + C10767) * C8030 + (C10766 + C10765) * C50960 +
             (C10764 + C10763) * C8029) *
                C50779 * C50920) *
               C1025 +
           (((C10968 + C10967) * C8029 + (C10966 + C10965) * C50960 +
             (C10964 + C10963) * C8030 + (C10962 + C10961) * C50961 +
             (C11327 + C11328) * C8031 + (C11329 + C11330) * C8026) *
                C50779 * C50920 -
            ((C10729 * C1219 + C50854 * C1227 + C10728 * C901 + C50933 * C907) *
                 C8026 +
             (C10729 * C1215 + C50854 * C1220 + C10728 * C892 + C50933 * C900) *
                 C8031 +
             (C11708 + C11707) * C50961 + (C11706 + C11705) * C8030 +
             (C11704 + C11703) * C50960 + (C11702 + C11701) * C8029) *
                C50779 * C50757) *
               C50729) *
              C50664)) /
        (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                C8029 +
            (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                C50960 +
            (C10763 + C10764) * C8030 + (C10765 + C10766) * C50961 +
            C10779 * C8031 + C10780 * C8026) *
               C50779 * C50693 * C1025 -
           (C11317 * C8026 + C11318 * C8031 + (C10965 + C10966) * C50961 +
            (C10967 + C10968) * C8030 +
            (C10729 * C895 + C50854 * C904 + C10728 * C299 + C50933 * C316) *
                C50960 +
            (C10729 * C889 + C50854 * C894 + C10728 * C286 + C50933 * C300) *
                C8029) *
               C50779 * C50693 * C50729) *
              C1027 +
          (((C10968 + C10967) * C8029 + (C10966 + C10965) * C50960 +
            (C10964 + C10963) * C8030 + (C10962 + C10961) * C50961 +
            (C11327 + C11328) * C8031 + (C11329 + C11330) * C8026) *
               C50779 * C50693 * C50729 -
           (C10781 * C8026 + C10782 * C8031 + (C10770 + C10769) * C50961 +
            (C10768 + C10767) * C8030 + (C10766 + C10765) * C50960 +
            (C10764 + C10763) * C8029) *
               C50779 * C50693 * C1025) *
              C1028 +
          ((C10779 * C8029 + C10780 * C50960 + (C10774 + C10773) * C8030 +
            (C10772 + C10771) * C50961 + (C10775 + C10776) * C8031 +
            (C10777 + C10778) * C8026) *
               C50779 * C50693 * C1025 -
           ((C10729 * C902 + C50854 * C908 + C10728 * C310 + C50933 * C321) *
                C8026 +
            (C10729 * C893 + C50854 * C903 + C10728 * C291 + C50933 * C309) *
                C8031 +
            (C11330 + C11329) * C50961 + (C11328 + C11327) * C8030 +
            C11317 * C50960 + C11318 * C8029) *
               C50779 * C50693 * C50729) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
               C8029 +
           (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
               C50960 +
           (C10763 + C10764) * C8030 + (C10765 + C10766) * C50961 +
           C10779 * C8031 + C10780 * C8026) *
              C50779 * C50693 * C1096 -
          (C11317 * C8026 + C11318 * C8031 + (C10965 + C10966) * C50961 +
           (C10967 + C10968) * C8030 +
           (C10729 * C895 + C50854 * C904 + C10728 * C299 + C50933 * C316) *
               C50960 +
           (C10729 * C889 + C50854 * C894 + C10728 * C286 + C50933 * C300) *
               C8029) *
              C50779 * C50693 * C1097 +
          ((C10728 * C287 + C50933 * C301 + C10729 * C1565 + C50854 * C1573) *
               C8029 +
           (C10728 * C302 + C50933 * C317 + C10729 * C1572 + C50854 * C1577) *
               C50960 +
           (C10969 + C10970) * C8030 + (C10971 + C10972) * C50961 +
           (C10973 + C10974) * C8031 + (C10975 + C10976) * C8026) *
              C50779 * C50693 * C1098 -
          ((C10729 * C3203 + C50854 * C3207 + C10728 * C1107 + C50933 * C1114) *
               C8026 +
           (C10729 * C3198 + C50854 * C3204 + C10728 * C1102 + C50933 * C1108) *
               C8031 +
           (C10729 * C3202 + C50854 * C3206 + C10728 * C1109 + C50933 * C1115) *
               C50961 +
           (C10729 * C3197 + C50854 * C3201 + C10728 * C1103 + C50933 * C1110) *
               C8030 +
           (C10729 * C3200 + C50854 * C3205 + C10728 * C1111 + C50933 * C1116) *
               C50960 +
           (C10729 * C3196 + C50854 * C3199 + C10728 * C1104 + C50933 * C1112) *
               C8029) *
              C50779 * C50693 * C1099) *
         C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C8029 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C50960 +
             (C10763 + C10764) * C8030 + (C10765 + C10766) * C50961 +
             C10779 * C8031 + C10780 * C8026) *
                C50779 * C1676 -
            (C11477 * C8026 + C11478 * C8031 + (C11159 + C11160) * C50961 +
             (C11161 + C11162) * C8030 +
             (C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                 C50960 +
             (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                 C8029) *
                C50779 * C50757) *
               C50919 +
           (((C10728 * C889 + C50933 * C894 + C10729 * C1218 + C50854 * C1226) *
                 C8029 +
             (C10728 * C895 + C50933 * C904 + C10729 * C1225 + C50854 * C1230) *
                 C50960 +
             (C11701 + C11702) * C8030 + (C11703 + C11704) * C50961 +
             (C11705 + C11706) * C8031 + (C11707 + C11708) * C8026) *
                C50779 * C50757 -
            (C11317 * C8026 + C11318 * C8031 + (C10965 + C10966) * C50961 +
             (C10967 + C10968) * C8030 +
             (C10729 * C895 + C50854 * C904 + C10728 * C299 + C50933 * C316) *
                 C50960 +
             (C10729 * C889 + C50854 * C894 + C10728 * C286 + C50933 * C300) *
                 C8029) *
                C50779 * C1676) *
               C50729) *
              C50911 +
          ((((C11162 + C11161) * C8029 + (C11160 + C11159) * C50960 +
             (C11158 + C11157) * C8030 + (C11156 + C11155) * C50961 +
             (C11487 + C11488) * C8031 + (C11489 + C11490) * C8026) *
                C50779 * C50757 -
            (C10781 * C8026 + C10782 * C8031 + (C10770 + C10769) * C50961 +
             (C10768 + C10767) * C8030 + (C10766 + C10765) * C50960 +
             (C10764 + C10763) * C8029) *
                C50779 * C1676) *
               C50919 +
           (((C10968 + C10967) * C8029 + (C10966 + C10965) * C50960 +
             (C10964 + C10963) * C8030 + (C10962 + C10961) * C50961 +
             (C11327 + C11328) * C8031 + (C11329 + C11330) * C8026) *
                C50779 * C1676 -
            ((C10729 * C1219 + C50854 * C1227 + C10728 * C901 + C50933 * C907) *
                 C8026 +
             (C10729 * C1215 + C50854 * C1220 + C10728 * C892 + C50933 * C900) *
                 C8031 +
             (C11708 + C11707) * C50961 + (C11706 + C11705) * C8030 +
             (C11704 + C11703) * C50960 + (C11702 + C11701) * C8029) *
                C50779 * C50757) *
               C50729) *
              C50664)) /
        (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                C8029 +
            (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                C50960 +
            (C10763 + C10764) * C8030 + (C10765 + C10766) * C50961 +
            C10779 * C8031 + C10780 * C8026) *
               C50779 * C50966 -
           (C11477 * C8026 + C11478 * C8031 + (C11159 + C11160) * C50961 +
            (C11161 + C11162) * C8030 +
            (C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                C50960 +
            (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                C8029) *
               C50779 * C50967 +
           ((C10728 * C464 + C50933 * C478 + C10729 * C1849 + C50854 * C1857) *
                C8029 +
            (C10728 * C479 + C50933 * C494 + C10729 * C1856 + C50854 * C1861) *
                C50960 +
            (C11163 + C11164) * C8030 + (C11165 + C11166) * C50961 +
            (C11167 + C11168) * C8031 + (C11169 + C11170) * C8026) *
               C50779 * C2092) *
              C50919 +
          (((C10728 * C889 + C50933 * C894 + C10729 * C1218 + C50854 * C1226) *
                C8029 +
            (C10728 * C895 + C50933 * C904 + C10729 * C1225 + C50854 * C1230) *
                C50960 +
            (C11701 + C11702) * C8030 + (C11703 + C11704) * C50961 +
            (C11705 + C11706) * C8031 + (C11707 + C11708) * C8026) *
               C50779 * C50967 -
           (C11317 * C8026 + C11318 * C8031 + (C10965 + C10966) * C50961 +
            (C10967 + C10968) * C8030 +
            (C10729 * C895 + C50854 * C904 + C10728 * C299 + C50933 * C316) *
                C50960 +
            (C10729 * C889 + C50854 * C894 + C10728 * C286 + C50933 * C300) *
                C8029) *
               C50779 * C50966 -
           ((C10729 * C6137 + C50854 * C6139 + C10728 * C1221 +
             C50933 * C1228) *
                C8026 +
            (C10729 * C6136 + C50854 * C6138 + C10728 * C1216 +
             C50933 * C1222) *
                C8031 +
            (C10729 * C4586 + C50854 * C4592 + C10728 * C1223 +
             C50933 * C1229) *
                C50961 +
            (C10729 * C4580 + C50854 * C4587 + C10728 * C1217 +
             C50933 * C1224) *
                C8030 +
            (C10729 * C4588 + C50854 * C4593 + C10728 * C1225 +
             C50933 * C1230) *
                C50960 +
            (C10729 * C4581 + C50854 * C4589 + C10728 * C1218 +
             C50933 * C1226) *
                C8029) *
               C50779 * C2092) *
              C50729) *
         C50658) /
        (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                C8029 +
            (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                C50960 +
            (C10763 + C10764) * C8030 + (C10765 + C10766) * C50961 +
            C10779 * C8031 + C10780 * C8026) *
               C50779 * C1676 -
           (C11477 * C8026 + C11478 * C8031 + (C11159 + C11160) * C50961 +
            (C11161 + C11162) * C8030 +
            (C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                C50960 +
            (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                C8029) *
               C50779 * C50757) *
              C278 +
          (((C10728 * C889 + C50933 * C894 + C10729 * C1218 + C50854 * C1226) *
                C8029 +
            (C10728 * C895 + C50933 * C904 + C10729 * C1225 + C50854 * C1230) *
                C50960 +
            (C11701 + C11702) * C8030 + (C11703 + C11704) * C50961 +
            (C11705 + C11706) * C8031 + (C11707 + C11708) * C8026) *
               C50779 * C50757 -
           (C11317 * C8026 + C11318 * C8031 + (C10965 + C10966) * C50961 +
            (C10967 + C10968) * C8030 +
            (C10729 * C895 + C50854 * C904 + C10728 * C299 + C50933 * C316) *
                C50960 +
            (C10729 * C889 + C50854 * C894 + C10728 * C286 + C50933 * C300) *
                C8029) *
               C50779 * C1676) *
              C279 +
          (((C10728 * C287 + C50933 * C301 + C10729 * C1565 + C50854 * C1573) *
                C8029 +
            (C10728 * C302 + C50933 * C317 + C10729 * C1572 + C50854 * C1577) *
                C50960 +
            (C10969 + C10970) * C8030 + (C10971 + C10972) * C50961 +
            (C10973 + C10974) * C8031 + (C10975 + C10976) * C8026) *
               C50779 * C1676 -
           ((C10729 * C2673 + C50854 * C2677 + C10728 * C1568 +
             C50933 * C1575) *
                C8026 +
            (C10729 * C2668 + C50854 * C2674 + C10728 * C1563 +
             C50933 * C1569) *
                C8031 +
            (C10729 * C2672 + C50854 * C2676 + C10728 * C1570 +
             C50933 * C1576) *
                C50961 +
            (C10729 * C2667 + C50854 * C2671 + C10728 * C1564 +
             C50933 * C1571) *
                C8030 +
            (C10729 * C2670 + C50854 * C2675 + C10728 * C1572 +
             C50933 * C1577) *
                C50960 +
            (C10729 * C2666 + C50854 * C2669 + C10728 * C1565 +
             C50933 * C1573) *
                C8029) *
               C50779 * C50757) *
              C280) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                C8029 +
            (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                C50960 +
            (C10763 + C10764) * C8030 + (C10765 + C10766) * C50961 +
            C10779 * C8031 + C10780 * C8026) *
               C50779 * C1676 -
           (C11477 * C8026 + C11478 * C8031 + (C11159 + C11160) * C50961 +
            (C11161 + C11162) * C8030 +
            (C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                C50960 +
            (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                C8029) *
               C50779 * C50757) *
              C50677 * C1027 +
          (((C11162 + C11161) * C8029 + (C11160 + C11159) * C50960 +
            (C11158 + C11157) * C8030 + (C11156 + C11155) * C50961 +
            (C11487 + C11488) * C8031 + (C11489 + C11490) * C8026) *
               C50779 * C50757 -
           (C10781 * C8026 + C10782 * C8031 + (C10770 + C10769) * C50961 +
            (C10768 + C10767) * C8030 + (C10766 + C10765) * C50960 +
            (C10764 + C10763) * C8029) *
               C50779 * C1676) *
              C50677 * C1028 +
          ((C10779 * C8029 + C10780 * C50960 + (C10774 + C10773) * C8030 +
            (C10772 + C10771) * C50961 + (C10775 + C10776) * C8031 +
            (C10777 + C10778) * C8026) *
               C50779 * C1676 -
           ((C10729 * C488 + C50854 * C499 + C10728 * C487 + C50933 * C498) *
                C8026 +
            (C10729 * C469 + C50854 * C489 + C10728 * C468 + C50933 * C486) *
                C8031 +
            (C11490 + C11489) * C50961 + (C11488 + C11487) * C8030 +
            C11477 * C50960 + C11478 * C8029) *
               C50779 * C50757) *
              C50677 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
               C8029 +
           (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
               C50960 +
           (C10763 + C10764) * C8030 + (C10765 + C10766) * C50961 +
           C10779 * C8031 + C10780 * C8026) *
              C50779 * C1842 -
          (C11477 * C8026 + C11478 * C8031 + (C11159 + C11160) * C50961 +
           (C11161 + C11162) * C8030 +
           (C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
               C50960 +
           (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
               C8029) *
              C50779 * C1843 +
          ((C10728 * C464 + C50933 * C478 + C10729 * C1849 + C50854 * C1857) *
               C8029 +
           (C10728 * C479 + C50933 * C494 + C10729 * C1856 + C50854 * C1861) *
               C50960 +
           (C11163 + C11164) * C8030 + (C11165 + C11166) * C50961 +
           (C11167 + C11168) * C8031 + (C11169 + C11170) * C8026) *
              C50779 * C1844 -
          ((C10729 * C5573 + C50854 * C5577 + C10728 * C1852 + C50933 * C1859) *
               C8026 +
           (C10729 * C5568 + C50854 * C5574 + C10728 * C1847 + C50933 * C1853) *
               C8031 +
           (C10729 * C5572 + C50854 * C5576 + C10728 * C1854 + C50933 * C1860) *
               C50961 +
           (C10729 * C5567 + C50854 * C5571 + C10728 * C1848 + C50933 * C1855) *
               C8030 +
           (C10729 * C5570 + C50854 * C5575 + C10728 * C1856 + C50933 * C1861) *
               C50960 +
           (C10729 * C5566 + C50854 * C5569 + C10728 * C1849 + C50933 * C1857) *
               C8029) *
              C50779 * C1845) *
         C50677 * C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                C8029 +
            (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                C50960 +
            (C10763 + C10764) * C8030 + (C10765 + C10766) * C50961 +
            C10779 * C8031 + C10780 * C8026) *
               C50779 * C50966 -
           (C11477 * C8026 + C11478 * C8031 + (C11159 + C11160) * C50961 +
            (C11161 + C11162) * C8030 +
            (C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                C50960 +
            (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                C8029) *
               C50779 * C50967 +
           ((C10728 * C464 + C50933 * C478 + C10729 * C1849 + C50854 * C1857) *
                C8029 +
            (C10728 * C479 + C50933 * C494 + C10729 * C1856 + C50854 * C1861) *
                C50960 +
            (C11163 + C11164) * C8030 + (C11165 + C11166) * C50961 +
            (C11167 + C11168) * C8031 + (C11169 + C11170) * C8026) *
               C50779 * C2092) *
              C50677 * C50911 +
          (((C11162 + C11161) * C8029 + (C11160 + C11159) * C50960 +
            (C11158 + C11157) * C8030 + (C11156 + C11155) * C50961 +
            (C11487 + C11488) * C8031 + (C11489 + C11490) * C8026) *
               C50779 * C50967 -
           (C10781 * C8026 + C10782 * C8031 + (C10770 + C10769) * C50961 +
            (C10768 + C10767) * C8030 + (C10766 + C10765) * C50960 +
            (C10764 + C10763) * C8029) *
               C50779 * C50966 -
           ((C10729 * C1850 + C50854 * C1858 + C10728 * C485 + C50933 * C497) *
                C8026 +
            (C10729 * C1846 + C50854 * C1851 + C10728 * C467 + C50933 * C484) *
                C8031 +
            (C11170 + C11169) * C50961 + (C11168 + C11167) * C8030 +
            (C11166 + C11165) * C50960 + (C11164 + C11163) * C8029) *
               C50779 * C2092) *
              C50677 * C50664)) /
        (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                C8029 +
            (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                C50960 +
            (C10763 + C10764) * C8030 + (C10765 + C10766) * C50961 +
            C10779 * C8031 + C10780 * C8026) *
               C50779 * C1676 -
           (C11477 * C8026 + C11478 * C8031 + (C11159 + C11160) * C50961 +
            (C11161 + C11162) * C8030 +
            (C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                C50960 +
            (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                C8029) *
               C50779 * C50757) *
              C50677 * C1027 +
          (((C11162 + C11161) * C8029 + (C11160 + C11159) * C50960 +
            (C11158 + C11157) * C8030 + (C11156 + C11155) * C50961 +
            (C11487 + C11488) * C8031 + (C11489 + C11490) * C8026) *
               C50779 * C50757 -
           (C10781 * C8026 + C10782 * C8031 + (C10770 + C10769) * C50961 +
            (C10768 + C10767) * C8030 + (C10766 + C10765) * C50960 +
            (C10764 + C10763) * C8029) *
               C50779 * C1676) *
              C50677 * C1028 +
          ((C10779 * C8029 + C10780 * C50960 + (C10774 + C10773) * C8030 +
            (C10772 + C10771) * C50961 + (C10775 + C10776) * C8031 +
            (C10777 + C10778) * C8026) *
               C50779 * C1676 -
           ((C10729 * C488 + C50854 * C499 + C10728 * C487 + C50933 * C498) *
                C8026 +
            (C10729 * C469 + C50854 * C489 + C10728 * C468 + C50933 * C486) *
                C8031 +
            (C11490 + C11489) * C50961 + (C11488 + C11487) * C8030 +
            C11477 * C50960 + C11478 * C8029) *
               C50779 * C50757) *
              C50677 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                C8029 +
            (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                C50960 +
            (C10763 + C10764) * C8030 + (C10765 + C10766) * C50961 +
            C10779 * C8031 + C10780 * C8026) *
               C50779 * C1676 -
           (C11477 * C8026 + C11478 * C8031 + (C11159 + C11160) * C50961 +
            (C11161 + C11162) * C8030 +
            (C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                C50960 +
            (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                C8029) *
               C50779 * C50757) *
              C278 +
          (((C10728 * C889 + C50933 * C894 + C10729 * C1218 + C50854 * C1226) *
                C8029 +
            (C10728 * C895 + C50933 * C904 + C10729 * C1225 + C50854 * C1230) *
                C50960 +
            (C11701 + C11702) * C8030 + (C11703 + C11704) * C50961 +
            (C11705 + C11706) * C8031 + (C11707 + C11708) * C8026) *
               C50779 * C50757 -
           (C11317 * C8026 + C11318 * C8031 + (C10965 + C10966) * C50961 +
            (C10967 + C10968) * C8030 +
            (C10729 * C895 + C50854 * C904 + C10728 * C299 + C50933 * C316) *
                C50960 +
            (C10729 * C889 + C50854 * C894 + C10728 * C286 + C50933 * C300) *
                C8029) *
               C50779 * C1676) *
              C279 +
          (((C10728 * C287 + C50933 * C301 + C10729 * C1565 + C50854 * C1573) *
                C8029 +
            (C10728 * C302 + C50933 * C317 + C10729 * C1572 + C50854 * C1577) *
                C50960 +
            (C10969 + C10970) * C8030 + (C10971 + C10972) * C50961 +
            (C10973 + C10974) * C8031 + (C10975 + C10976) * C8026) *
               C50779 * C1676 -
           ((C10729 * C2673 + C50854 * C2677 + C10728 * C1568 +
             C50933 * C1575) *
                C8026 +
            (C10729 * C2668 + C50854 * C2674 + C10728 * C1563 +
             C50933 * C1569) *
                C8031 +
            (C10729 * C2672 + C50854 * C2676 + C10728 * C1570 +
             C50933 * C1576) *
                C50961 +
            (C10729 * C2667 + C50854 * C2671 + C10728 * C1564 +
             C50933 * C1571) *
                C8030 +
            (C10729 * C2670 + C50854 * C2675 + C10728 * C1572 +
             C50933 * C1577) *
                C50960 +
            (C10729 * C2666 + C50854 * C2669 + C10728 * C1565 +
             C50933 * C1573) *
                C8029) *
               C50779 * C50757) *
              C280) *
         C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C118 +
            (C117 * C130 + C50790 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50779 * C50693 * C50919 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50790 * C316) * C106 +
            (C117 * C286 + C50790 * C300) * C118) *
               C50779 * C50693 * C50729) *
              C50962 +
          ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
            C349 * C120 + C348 * C108 + C648 * C121 + C649 * C109) *
               C50779 * C50693 * C50729 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50779 * C50693 * C50919) *
              C50963 +
          ((C173 * C118 + C174 * C106 + C175 * C119 + C176 * C107 +
            C178 * C120 + C177 * C108 + C179 * C121 + C180 * C109) *
               C50779 * C50693 * C50919 -
           ((C117 * C640 + C50790 * C642) * C109 +
            (C117 * C639 + C50790 * C641) * C121 + C649 * C108 + C648 * C120 +
            C348 * C107 + C349 * C119 + C350 * C106 + C351 * C118) *
               C50779 * C50693 * C50729) *
              C638)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C2294 +
             (C117 * C130 + C50790 * C143) * C2289 + C171 * C2295 +
             C172 * C50635) *
                C2291 +
            (C2504 + C2505 + C2459 + C2460) * C2292 + C2520 * C2293) *
               C50693 * C50919 -
           ((C2508 + C2509 + C2510 + C2511) * C2293 +
            (C2466 + C2465 + C2507 + C2506) * C2292 +
            (C2460 + C2459 + C2505 + C2504) * C2291) *
               C50693 * C50729) *
              C50962 +
          (((C2479 + C2480 + C2481 + C2482) * C2291 +
            (C2483 + C2484 + C2485 + C2486) * C2292 +
            (C2512 + C2513 + C2514 + C2515) * C2293) *
               C50693 * C50729 -
           (C2518 * C2293 + (C2482 + C2481 + C2480 + C2479) * C2292 +
            (C174 * C50635 + C173 * C2295 + C172 * C2289 + C171 * C2294) *
                C2291) *
               C50693 * C50919) *
              C50963 +
          (((C173 * C2294 + C174 * C2289 + C175 * C2295 + C176 * C50635) *
                C2291 +
            (C2843 + C2844 + C2845 + C2846) * C2292 +
            (C2847 + C2848 + C2849 + C2850) * C2293) *
               C50693 * C50919 -
           (((C117 * C1105 + C50790 * C1113) * C50635 +
             (C117 * C1101 + C50790 * C1106) * C2295 + C2502 * C2289 +
             C2501 * C2294) *
                C2293 +
            (C2850 + C2849 + C2848 + C2847) * C2292 +
            (C2846 + C2845 + C2844 + C2843) * C2291) *
               C50693 * C50729) *
              C638)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C118 +
             (C117 * C130 + C50790 * C143) * C106 + C171 * C119 + C172 * C107 +
             C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
                C50779 * C50920 -
            (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
             C529 * C107 + C530 * C119 + (C117 * C476 + C50790 * C493) * C106 +
             (C117 * C463 + C50790 * C477) * C118) *
                C50779 * C50757) *
               C50919 +
           (((C117 * C889 + C50790 * C894) * C118 +
             (C117 * C895 + C50790 * C904) * C106 + C922 * C119 + C923 * C107 +
             C924 * C120 + C925 * C108 + C926 * C121 + C927 * C109) *
                C50779 * C50757 -
            (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
             C352 * C107 + C353 * C119 + (C117 * C299 + C50790 * C316) * C106 +
             (C117 * C286 + C50790 * C300) * C118) *
                C50779 * C50920) *
               C50729) *
              C281 +
          (((C530 * C118 + C529 * C106 + C528 * C119 + C527 * C107 +
             C526 * C120 + C525 * C108 + C758 * C121 + C759 * C109) *
                C50779 * C50757 -
            (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
             C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
                C50779 * C50920) *
               C50919 +
           ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
             C349 * C120 + C348 * C108 + C648 * C121 + C649 * C109) *
                C50779 * C50920 -
            ((C117 * C902 + C50790 * C908) * C109 +
             (C117 * C893 + C50790 * C903) * C121 + C927 * C108 + C926 * C120 +
             C925 * C107 + C924 * C119 + C923 * C106 + C922 * C118) *
                C50779 * C50757) *
               C50729) *
              C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50790 * C129) * C2294 +
              (C117 * C130 + C50790 * C143) * C2289 + C171 * C2295 +
              C172 * C50635) *
                 C2291 +
             (C2504 + C2505 + C2459 + C2460) * C2292 + C2520 * C2293) *
                C50920 -
            ((C3209 + C3210 + C3239 + C3240) * C2293 +
             (C3215 + C3216 + C3241 + C3242) * C2292 +
             (C529 * C50635 + C530 * C2295 +
              (C117 * C476 + C50790 * C493) * C2289 +
              (C117 * C463 + C50790 * C477) * C2294) *
                 C2291) *
                C50757) *
               C50919 +
           (((C3242 + C3241 + C3216 + C3215) * C2291 +
             (C3240 + C3239 + C3210 + C3209) * C2292 +
             ((C117 * C3196 + C50790 * C3199) * C2294 +
              (C117 * C3200 + C50790 * C3205) * C2289 + C3237 * C2295 +
              C3238 * C50635) *
                 C2293) *
                C50757 -
            ((C2508 + C2509 + C2510 + C2511) * C2293 +
             (C2466 + C2465 + C2507 + C2506) * C2292 +
             (C2460 + C2459 + C2505 + C2504) * C2291) *
                C50920) *
               C50729) *
              C281 +
          ((((C530 * C2294 + C529 * C2289 + C528 * C2295 + C527 * C50635) *
                 C2291 +
             (C3225 + C3226 + C3227 + C3228) * C2292 +
             (C3229 + C3230 + C3231 + C3232) * C2293) *
                C50757 -
            (C2518 * C2293 + (C2482 + C2481 + C2480 + C2479) * C2292 +
             (C174 * C50635 + C173 * C2295 + C172 * C2289 + C171 * C2294) *
                 C2291) *
                C50920) *
               C50919 +
           (((C2479 + C2480 + C2481 + C2482) * C2291 +
             (C2483 + C2484 + C2485 + C2486) * C2292 +
             (C2512 + C2513 + C2514 + C2515) * C2293) *
                C50920 -
            (((C117 * C3203 + C50790 * C3207) * C50635 +
              (C117 * C3198 + C50790 * C3204) * C2295 + C3238 * C2289 +
              C3237 * C2294) *
                 C2293 +
             (C3232 + C3231 + C3230 + C3229) * C2292 +
             (C3228 + C3227 + C3226 + C3225) * C2291) *
                C50757) *
               C50729) *
              C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C118 +
            (C117 * C130 + C50790 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50779 * C50693 * C278 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50790 * C316) * C106 +
            (C117 * C286 + C50790 * C300) * C118) *
               C50779 * C50693 * C279 +
           ((C117 * C287 + C50790 * C301) * C118 +
            (C117 * C302 + C50790 * C317) * C106 + C354 * C119 + C355 * C107 +
            C356 * C120 + C357 * C108 + C358 * C121 + C359 * C109) *
               C50779 * C50693 * C280) *
              C281 +
          ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
            C349 * C120 + C348 * C108 + (C117 * C291 + C50790 * C309) * C121 +
            (C117 * C310 + C50790 * C321) * C109) *
               C50779 * C50693 * C279 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50779 * C50693 * C278 -
           ((C117 * C311 + C50790 * C322) * C109 +
            (C117 * C292 + C50790 * C312) * C121 + C359 * C108 + C358 * C120 +
            C357 * C107 + C356 * C119 + C355 * C106 + C354 * C118) *
               C50779 * C50693 * C280) *
              C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C50790 * C129) * C118 +
           (C117 * C130 + C50790 * C143) * C106 + C171 * C119 + C172 * C107 +
           C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
              C50779 * C50693 * C50677 * C113 -
          (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 + C174 * C107 +
           C173 * C119 + C172 * C106 + C171 * C118) *
              C50779 * C50693 * C50677 * C114 +
          (C173 * C118 + C174 * C106 + C175 * C119 + C176 * C107 + C178 * C120 +
           C177 * C108 + C179 * C121 + C180 * C109) *
              C50779 * C50693 * C50677 * C115 -
          ((C117 * C141 + C50790 * C149) * C109 +
           (C117 * C128 + C50790 * C142) * C121 + C180 * C108 + C179 * C120 +
           C177 * C107 + C178 * C119 + C176 * C106 + C175 * C118) *
              C50779 * C50693 * C50677 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C118 +
            (C117 * C130 + C50790 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50779 * C457 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50790 * C493) * C106 +
            (C117 * C463 + C50790 * C477) * C118) *
               C50779 * C458 +
           ((C117 * C464 + C50790 * C478) * C118 +
            (C117 * C479 + C50790 * C494) * C106 + C531 * C119 + C532 * C107 +
            C533 * C120 + C534 * C108 + C535 * C121 + C536 * C109) *
               C50779 * C459) *
              C50677 * C281 +
          ((C530 * C118 + C529 * C106 + C528 * C119 + C527 * C107 +
            C526 * C120 + C525 * C108 + (C117 * C468 + C50790 * C486) * C121 +
            (C117 * C487 + C50790 * C498) * C109) *
               C50779 * C458 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50779 * C457 -
           ((C117 * C488 + C50790 * C499) * C109 +
            (C117 * C469 + C50790 * C489) * C121 + C536 * C108 + C535 * C120 +
            C534 * C107 + C533 * C119 + C532 * C106 + C531 * C118) *
               C50779 * C459) *
              C50677 * C50664)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C2294 +
            (C117 * C130 + C50790 * C143) * C2289 + C171 * C2295 +
            C172 * C50635) *
               C2291 +
           ((C117 * C286 + C50790 * C300) * C2294 +
            (C117 * C299 + C50790 * C316) * C2289 + C353 * C2295 +
            C352 * C50635) *
               C2292 +
           ((C117 * C287 + C50790 * C301) * C2294 +
            (C117 * C302 + C50790 * C317) * C2289 + C354 * C2295 +
            C355 * C50635) *
               C2293) *
              C50693 * C50677 * C113 -
          ((C357 * C50635 + C356 * C2295 + C355 * C2289 + C354 * C2294) *
               C2293 +
           (C350 * C50635 + C351 * C2295 + C352 * C2289 + C353 * C2294) *
               C2292 +
           (C174 * C50635 + C173 * C2295 + C172 * C2289 + C171 * C2294) *
               C2291) *
              C50693 * C50677 * C114 +
          ((C173 * C2294 + C174 * C2289 + C175 * C2295 + C176 * C50635) *
               C2291 +
           (C351 * C2294 + C350 * C2289 + C349 * C2295 + C348 * C50635) *
               C2292 +
           (C356 * C2294 + C357 * C2289 + C358 * C2295 + C359 * C50635) *
               C2293) *
              C50693 * C50677 * C115 -
          (((C117 * C311 + C50790 * C322) * C50635 +
            (C117 * C292 + C50790 * C312) * C2295 + C359 * C2289 +
            C358 * C2294) *
               C2293 +
           (C649 * C50635 + C648 * C2295 + C348 * C2289 + C349 * C2294) *
               C2292 +
           (C177 * C50635 + C178 * C2295 + C176 * C2289 + C175 * C2294) *
               C2291) *
              C50693 * C50677 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C2294 +
             (C117 * C130 + C50790 * C143) * C2289 + C171 * C2295 +
             C172 * C50635) *
                C2291 +
            (C2504 + C2505 + C2459 + C2460) * C2292 + C2520 * C2293) *
               C50693 * C278 -
           ((C2508 + C2509 + C2510 + C2511) * C2293 +
            (C2466 + C2465 + C2507 + C2506) * C2292 +
            (C2460 + C2459 + C2505 + C2504) * C2291) *
               C50693 * C279 +
           (C2520 * C2291 + (C2511 + C2510 + C2509 + C2508) * C2292 +
            ((C117 * C2442 + C50790 * C2445) * C2294 +
             (C117 * C2446 + C50790 * C2451) * C2289 + C2499 * C2295 +
             C2500 * C50635) *
                C2293) *
               C50693 * C280) *
              C281 +
          (((C2479 + C2480 + C2481 + C2482) * C2291 +
            (C2483 + C2484 + C2485 + C2486) * C2292 +
            (C2512 + C2513 + C2514 + C2515) * C2293) *
               C50693 * C279 -
           (C2518 * C2293 + (C2482 + C2481 + C2480 + C2479) * C2292 +
            (C174 * C50635 + C173 * C2295 + C172 * C2289 + C171 * C2294) *
                C2291) *
               C50693 * C278 -
           (((C117 * C2449 + C50790 * C2453) * C50635 +
             (C117 * C2444 + C50790 * C2450) * C2295 + C2500 * C2289 +
             C2499 * C2294) *
                C2293 +
            (C2515 + C2514 + C2513 + C2512) * C2292 + C2518 * C2291) *
               C50693 * C280) *
              C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C2294 +
             (C117 * C130 + C50790 * C143) * C2289 + C171 * C2295 +
             C172 * C50635) *
                C2291 +
            (C2504 + C2505 + C2459 + C2460) * C2292 + C2520 * C2293) *
               C457 -
           ((C2691 * C50635 + C2692 * C2295 +
             (C117 * C1572 + C50790 * C1577) * C2289 +
             (C117 * C1565 + C50790 * C1573) * C2294) *
                C2293 +
            (C923 * C50635 + C922 * C2295 +
             (C117 * C895 + C50790 * C904) * C2289 +
             (C117 * C889 + C50790 * C894) * C2294) *
                C2292 +
            (C529 * C50635 + C530 * C2295 +
             (C117 * C476 + C50790 * C493) * C2289 +
             (C117 * C463 + C50790 * C477) * C2294) *
                C2291) *
               C458 +
           (((C117 * C464 + C50790 * C478) * C2294 +
             (C117 * C479 + C50790 * C494) * C2289 + C531 * C2295 +
             C532 * C50635) *
                C2291 +
            ((C117 * C1218 + C50790 * C1226) * C2294 +
             (C117 * C1225 + C50790 * C1230) * C2289 + C2693 * C2295 +
             C2694 * C50635) *
                C2292 +
            ((C117 * C2666 + C50790 * C2669) * C2294 +
             (C117 * C2670 + C50790 * C2675) * C2289 + C2695 * C2295 +
             C2696 * C50635) *
                C2293) *
               C459) *
              C50677 * C281 +
          (((C530 * C2294 + C529 * C2289 + C528 * C2295 + C527 * C50635) *
                C2291 +
            (C922 * C2294 + C923 * C2289 + C924 * C2295 + C925 * C50635) *
                C2292 +
            (C2692 * C2294 + C2691 * C2289 +
             (C117 * C1563 + C50790 * C1569) * C2295 +
             (C117 * C1568 + C50790 * C1575) * C50635) *
                C2293) *
               C458 -
           (C2518 * C2293 + (C2482 + C2481 + C2480 + C2479) * C2292 +
            (C174 * C50635 + C173 * C2295 + C172 * C2289 + C171 * C2294) *
                C2291) *
               C457 -
           (((C117 * C2673 + C50790 * C2677) * C50635 +
             (C117 * C2668 + C50790 * C2674) * C2295 + C2696 * C2289 +
             C2695 * C2294) *
                C2293 +
            ((C117 * C1221 + C50790 * C1228) * C50635 +
             (C117 * C1216 + C50790 * C1222) * C2295 + C2694 * C2289 +
             C2693 * C2294) *
                C2292 +
            (C534 * C50635 + C533 * C2295 + C532 * C2289 + C531 * C2294) *
                C2291) *
               C459) *
              C50677 * C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C118 +
            (C117 * C130 + C50790 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50779 * C50920 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50790 * C493) * C106 +
            (C117 * C463 + C50790 * C477) * C118) *
               C50779 * C50757) *
              C50677 * C50962 +
          ((C530 * C118 + C529 * C106 + C528 * C119 + C527 * C107 +
            C526 * C120 + C525 * C108 + C758 * C121 + C759 * C109) *
               C50779 * C50757 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50779 * C50920) *
              C50677 * C50963 +
          ((C173 * C118 + C174 * C106 + C175 * C119 + C176 * C107 +
            C178 * C120 + C177 * C108 + C179 * C121 + C180 * C109) *
               C50779 * C50920 -
           ((C117 * C750 + C50790 * C752) * C109 +
            (C117 * C749 + C50790 * C751) * C121 + C759 * C108 + C758 * C120 +
            C525 * C107 + C526 * C119 + C527 * C106 + C528 * C118) *
               C50779 * C50757) *
              C50677 * C638)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C2294 +
             (C117 * C130 + C50790 * C143) * C2289 + C171 * C2295 +
             C172 * C50635) *
                C2291 +
            (C2504 + C2505 + C2459 + C2460) * C2292 + C2520 * C2293) *
               C50920 -
           ((C2691 * C50635 + C2692 * C2295 +
             (C117 * C1572 + C50790 * C1577) * C2289 +
             (C117 * C1565 + C50790 * C1573) * C2294) *
                C2293 +
            (C923 * C50635 + C922 * C2295 +
             (C117 * C895 + C50790 * C904) * C2289 +
             (C117 * C889 + C50790 * C894) * C2294) *
                C2292 +
            (C529 * C50635 + C530 * C2295 +
             (C117 * C476 + C50790 * C493) * C2289 +
             (C117 * C463 + C50790 * C477) * C2294) *
                C2291) *
               C50757) *
              C50677 * C50962 +
          (((C530 * C2294 + C529 * C2289 + C528 * C2295 + C527 * C50635) *
                C2291 +
            (C922 * C2294 + C923 * C2289 + C924 * C2295 + C925 * C50635) *
                C2292 +
            (C2692 * C2294 + C2691 * C2289 + C3001 * C2295 + C3002 * C50635) *
                C2293) *
               C50757 -
           (C2518 * C2293 + (C2482 + C2481 + C2480 + C2479) * C2292 +
            (C174 * C50635 + C173 * C2295 + C172 * C2289 + C171 * C2294) *
                C2291) *
               C50920) *
              C50677 * C50963 +
          (((C173 * C2294 + C174 * C2289 + C175 * C2295 + C176 * C50635) *
                C2291 +
            (C2843 + C2844 + C2845 + C2846) * C2292 +
            (C2847 + C2848 + C2849 + C2850) * C2293) *
               C50920 -
           (((C117 * C1566 + C50790 * C1574) * C50635 +
             (C117 * C1562 + C50790 * C1567) * C2295 + C3002 * C2289 +
             C3001 * C2294) *
                C2293 +
            (C927 * C50635 + C926 * C2295 + C925 * C2289 + C924 * C2294) *
                C2292 +
            (C525 * C50635 + C526 * C2295 + C527 * C2289 + C528 * C2294) *
                C2291) *
               C50757) *
              C50677 * C638)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C50790 * C129) * C118 +
           (C117 * C130 + C50790 * C143) * C106 + C171 * C119 + C172 * C107 +
           C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
              C50779 * C50693 * C50677 * C113 -
          (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 + C174 * C107 +
           C173 * C119 + C172 * C106 + C171 * C118) *
              C50779 * C50693 * C50677 * C114 +
          (C173 * C118 + C174 * C106 + C175 * C119 + C176 * C107 + C178 * C120 +
           C177 * C108 + C179 * C121 + C180 * C109) *
              C50779 * C50693 * C50677 * C115 -
          ((C117 * C141 + C50790 * C149) * C109 +
           (C117 * C128 + C50790 * C142) * C121 + C180 * C108 + C179 * C120 +
           C177 * C107 + C178 * C119 + C176 * C106 + C175 * C118) *
              C50779 * C50693 * C50677 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C118 +
            (C117 * C130 + C50790 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50779 * C50693 * C278 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50790 * C316) * C106 +
            (C117 * C286 + C50790 * C300) * C118) *
               C50779 * C50693 * C279 +
           ((C117 * C287 + C50790 * C301) * C118 +
            (C117 * C302 + C50790 * C317) * C106 + C354 * C119 + C355 * C107 +
            C356 * C120 + C357 * C108 + C358 * C121 + C359 * C109) *
               C50779 * C50693 * C280) *
              C281 +
          ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
            C349 * C120 + C348 * C108 + (C117 * C291 + C50790 * C309) * C121 +
            (C117 * C310 + C50790 * C321) * C109) *
               C50779 * C50693 * C279 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50779 * C50693 * C278 -
           ((C117 * C311 + C50790 * C322) * C109 +
            (C117 * C292 + C50790 * C312) * C121 + C359 * C108 + C358 * C120 +
            C357 * C107 + C356 * C119 + C355 * C106 + C354 * C118) *
               C50779 * C50693 * C280) *
              C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C2294 +
            (C117 * C130 + C50790 * C143) * C2289 + C171 * C2295 +
            C172 * C50635) *
               C2291 +
           ((C117 * C286 + C50790 * C300) * C2294 +
            (C117 * C299 + C50790 * C316) * C2289 + C353 * C2295 +
            C352 * C50635) *
               C2292 +
           ((C117 * C287 + C50790 * C301) * C2294 +
            (C117 * C302 + C50790 * C317) * C2289 + C354 * C2295 +
            C355 * C50635) *
               C2293) *
              C50693 * C50677 * C113 -
          ((C357 * C50635 + C356 * C2295 + C355 * C2289 + C354 * C2294) *
               C2293 +
           (C350 * C50635 + C351 * C2295 + C352 * C2289 + C353 * C2294) *
               C2292 +
           (C174 * C50635 + C173 * C2295 + C172 * C2289 + C171 * C2294) *
               C2291) *
              C50693 * C50677 * C114 +
          ((C173 * C2294 + C174 * C2289 + C175 * C2295 + C176 * C50635) *
               C2291 +
           (C351 * C2294 + C350 * C2289 + C349 * C2295 + C348 * C50635) *
               C2292 +
           (C356 * C2294 + C357 * C2289 + C358 * C2295 + C359 * C50635) *
               C2293) *
              C50693 * C50677 * C115 -
          (((C117 * C311 + C50790 * C322) * C50635 +
            (C117 * C292 + C50790 * C312) * C2295 + C359 * C2289 +
            C358 * C2294) *
               C2293 +
           (C649 * C50635 + C648 * C2295 + C348 * C2289 + C349 * C2294) *
               C2292 +
           (C177 * C50635 + C178 * C2295 + C176 * C2289 + C175 * C2294) *
               C2291) *
              C50693 * C50677 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C2294 +
             (C117 * C130 + C50790 * C143) * C2289 + C171 * C2295 +
             C172 * C50635) *
                C2291 +
            (C2504 + C2505 + C2459 + C2460) * C2292 + C2520 * C2293) *
               C50693 * C278 -
           ((C2508 + C2509 + C2510 + C2511) * C2293 +
            (C2466 + C2465 + C2507 + C2506) * C2292 +
            (C2460 + C2459 + C2505 + C2504) * C2291) *
               C50693 * C279 +
           (C2520 * C2291 + (C2511 + C2510 + C2509 + C2508) * C2292 +
            ((C117 * C2442 + C50790 * C2445) * C2294 +
             (C117 * C2446 + C50790 * C2451) * C2289 + C2499 * C2295 +
             C2500 * C50635) *
                C2293) *
               C50693 * C280) *
              C281 +
          (((C2479 + C2480 + C2481 + C2482) * C2291 +
            (C2483 + C2484 + C2485 + C2486) * C2292 +
            (C2512 + C2513 + C2514 + C2515) * C2293) *
               C50693 * C279 -
           (C2518 * C2293 + (C2482 + C2481 + C2480 + C2479) * C2292 +
            (C174 * C50635 + C173 * C2295 + C172 * C2289 + C171 * C2294) *
                C2291) *
               C50693 * C278 -
           (((C117 * C2449 + C50790 * C2453) * C50635 +
             (C117 * C2444 + C50790 * C2450) * C2295 + C2500 * C2289 +
             C2499 * C2294) *
                C2293 +
            (C2515 + C2514 + C2513 + C2512) * C2292 + C2518 * C2291) *
               C50693 * C280) *
              C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C118 +
            (C117 * C130 + C50790 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50779 * C50693 * C50964 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50790 * C316) * C106 +
            (C117 * C286 + C50790 * C300) * C118) *
               C50779 * C50693 * C50965 +
           ((C117 * C287 + C50790 * C301) * C118 +
            (C117 * C302 + C50790 * C317) * C106 + C354 * C119 + C355 * C107 +
            C356 * C120 + C357 * C108 + C358 * C121 + C359 * C109) *
               C50779 * C50693 * C1331) *
              C50911 +
          ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
            C349 * C120 + C348 * C108 + C648 * C121 + C649 * C109) *
               C50779 * C50693 * C50965 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50779 * C50693 * C50964 -
           ((C117 * C311 + C50790 * C322) * C109 +
            (C117 * C292 + C50790 * C312) * C121 + C359 * C108 + C358 * C120 +
            C357 * C107 + C356 * C119 + C355 * C106 + C354 * C118) *
               C50779 * C50693 * C1331) *
              C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C2294 +
             (C117 * C130 + C50790 * C143) * C2289 + C171 * C2295 +
             C172 * C50635) *
                C2291 +
            (C2504 + C2505 + C2459 + C2460) * C2292 + C2520 * C2293) *
               C50693 * C50964 -
           (C3505 * C2293 + (C2466 + C2465 + C2507 + C2506) * C2292 +
            (C2460 + C2459 + C2505 + C2504) * C2291) *
               C50693 * C50965 +
           (C2520 * C2291 + (C2511 + C2510 + C2509 + C2508) * C2292 +
            (C3506 + C3507 + C3500 + C3501) * C2293) *
               C50693 * C1331) *
              C50911 +
          (((C2479 + C2480 + C2481 + C2482) * C2291 +
            (C2483 + C2484 + C2485 + C2486) * C2292 +
            (C2512 + C2513 + C2514 + C2515) * C2293) *
               C50693 * C50965 -
           (C2518 * C2293 + (C2482 + C2481 + C2480 + C2479) * C2292 +
            (C174 * C50635 + C173 * C2295 + C172 * C2289 + C171 * C2294) *
                C2291) *
               C50693 * C50964 -
           (((C117 * C2449 + C50790 * C2453) * C50635 +
             (C117 * C2444 + C50790 * C2450) * C2295 + C2500 * C2289 +
             C2499 * C2294) *
                C2293 +
            (C2515 + C2514 + C2513 + C2512) * C2292 + C2518 * C2291) *
               C50693 * C1331) *
              C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C118 +
            (C117 * C130 + C50790 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50779 * C50920 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50790 * C493) * C106 +
            (C117 * C463 + C50790 * C477) * C118) *
               C50779 * C50757) *
              C50964 +
          (((C117 * C889 + C50790 * C894) * C118 +
            (C117 * C895 + C50790 * C904) * C106 + C922 * C119 + C923 * C107 +
            C924 * C120 + C925 * C108 + C926 * C121 + C927 * C109) *
               C50779 * C50757 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50790 * C316) * C106 +
            (C117 * C286 + C50790 * C300) * C118) *
               C50779 * C50920) *
              C50965 +
          (((C117 * C287 + C50790 * C301) * C118 +
            (C117 * C302 + C50790 * C317) * C106 + C354 * C119 + C355 * C107 +
            C356 * C120 + C357 * C108 + C358 * C121 + C359 * C109) *
               C50779 * C50920 -
           ((C117 * C1566 + C50790 * C1574) * C109 +
            (C117 * C1562 + C50790 * C1567) * C121 +
            (C117 * C1568 + C50790 * C1575) * C108 +
            (C117 * C1563 + C50790 * C1569) * C120 +
            (C117 * C1570 + C50790 * C1576) * C107 +
            (C117 * C1564 + C50790 * C1571) * C119 +
            (C117 * C1572 + C50790 * C1577) * C106 +
            (C117 * C1565 + C50790 * C1573) * C118) *
               C50779 * C50757) *
              C1331) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C2294 +
             (C117 * C130 + C50790 * C143) * C2289 + C171 * C2295 +
             C172 * C50635) *
                C2291 +
            (C2504 + C2505 + C2459 + C2460) * C2292 + C2520 * C2293) *
               C50920 -
           (C4186 * C2293 + (C3215 + C3216 + C3241 + C3242) * C2292 +
            (C529 * C50635 + C530 * C2295 +
             (C117 * C476 + C50790 * C493) * C2289 +
             (C117 * C463 + C50790 * C477) * C2294) *
                C2291) *
               C50757) *
              C50964 +
          (((C3242 + C3241 + C3216 + C3215) * C2291 +
            (C3240 + C3239 + C3210 + C3209) * C2292 +
            (C4187 + C4188 + C4181 + C4182) * C2293) *
               C50757 -
           (C3505 * C2293 + (C2466 + C2465 + C2507 + C2506) * C2292 +
            (C2460 + C2459 + C2505 + C2504) * C2291) *
               C50920) *
              C50965 +
          ((C2520 * C2291 + (C2511 + C2510 + C2509 + C2508) * C2292 +
            (C3506 + C3507 + C3500 + C3501) * C2293) *
               C50920 -
           (((C117 * C4169 + C50790 * C4173) * C50635 +
             (C117 * C4167 + C50790 * C4170) * C2295 +
             (C117 * C4171 + C50790 * C4174) * C2289 +
             (C117 * C4168 + C50790 * C4172) * C2294) *
                C2293 +
            (C4182 + C4181 + C4188 + C4187) * C2292 + C4186 * C2291) *
               C50757) *
              C1331) *
         C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C50790 * C129) * C118 +
           (C117 * C130 + C50790 * C143) * C106 + C171 * C119 + C172 * C107 +
           C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
              C50779 * C50693 * C1096 -
          (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 + C352 * C107 +
           C353 * C119 + (C117 * C299 + C50790 * C316) * C106 +
           (C117 * C286 + C50790 * C300) * C118) *
              C50779 * C50693 * C1097 +
          ((C117 * C287 + C50790 * C301) * C118 +
           (C117 * C302 + C50790 * C317) * C106 + C354 * C119 + C355 * C107 +
           C356 * C120 + C357 * C108 + C358 * C121 + C359 * C109) *
              C50779 * C50693 * C1098 -
          ((C117 * C1105 + C50790 * C1113) * C109 +
           (C117 * C1101 + C50790 * C1106) * C121 +
           (C117 * C1107 + C50790 * C1114) * C108 +
           (C117 * C1102 + C50790 * C1108) * C120 +
           (C117 * C1109 + C50790 * C1115) * C107 +
           (C117 * C1103 + C50790 * C1110) * C119 +
           (C117 * C1111 + C50790 * C1116) * C106 +
           (C117 * C1104 + C50790 * C1112) * C118) *
              C50779 * C50693 * C1099) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C118 +
            (C117 * C130 + C50790 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50779 * C50693 * C1025 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50790 * C316) * C106 +
            (C117 * C286 + C50790 * C300) * C118) *
               C50779 * C50693 * C50729) *
              C1027 +
          ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
            C349 * C120 + C348 * C108 + C648 * C121 + C649 * C109) *
               C50779 * C50693 * C50729 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50779 * C50693 * C1025) *
              C1028 +
          ((C173 * C118 + C174 * C106 + C175 * C119 + C176 * C107 +
            C178 * C120 + C177 * C108 + C179 * C121 + C180 * C109) *
               C50779 * C50693 * C1025 -
           ((C117 * C640 + C50790 * C642) * C109 +
            (C117 * C639 + C50790 * C641) * C121 + C649 * C108 + C648 * C120 +
            C348 * C107 + C349 * C119 + C350 * C106 + C351 * C118) *
               C50779 * C50693 * C50729) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C118 +
            (C117 * C130 + C50790 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50779 * C457 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50790 * C493) * C106 +
            (C117 * C463 + C50790 * C477) * C118) *
               C50779 * C458 +
           ((C117 * C464 + C50790 * C478) * C118 +
            (C117 * C479 + C50790 * C494) * C106 + C531 * C119 + C532 * C107 +
            C533 * C120 + C534 * C108 + C535 * C121 + C536 * C109) *
               C50779 * C459) *
              C1025 +
          (((C117 * C889 + C50790 * C894) * C118 +
            (C117 * C895 + C50790 * C904) * C106 + C922 * C119 + C923 * C107 +
            C924 * C120 + C925 * C108 + C926 * C121 + C927 * C109) *
               C50779 * C458 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50790 * C316) * C106 +
            (C117 * C286 + C50790 * C300) * C118) *
               C50779 * C457 -
           ((C117 * C1219 + C50790 * C1227) * C109 +
            (C117 * C1215 + C50790 * C1220) * C121 +
            (C117 * C1221 + C50790 * C1228) * C108 +
            (C117 * C1216 + C50790 * C1222) * C120 +
            (C117 * C1223 + C50790 * C1229) * C107 +
            (C117 * C1217 + C50790 * C1224) * C119 +
            (C117 * C1225 + C50790 * C1230) * C106 +
            (C117 * C1218 + C50790 * C1226) * C118) *
               C50779 * C459) *
              C50729) *
         C50658) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C2294 +
             (C117 * C130 + C50790 * C143) * C2289 + C171 * C2295 +
             C172 * C50635) *
                C2291 +
            (C2504 + C2505 + C2459 + C2460) * C2292 + C2520 * C2293) *
               C50693 * C1025 -
           ((C2508 + C2509 + C2510 + C2511) * C2293 +
            (C2466 + C2465 + C2507 + C2506) * C2292 +
            (C2460 + C2459 + C2505 + C2504) * C2291) *
               C50693 * C50729) *
              C1027 +
          (((C2479 + C2480 + C2481 + C2482) * C2291 +
            (C2483 + C2484 + C2485 + C2486) * C2292 +
            (C2512 + C2513 + C2514 + C2515) * C2293) *
               C50693 * C50729 -
           (C2518 * C2293 + (C2482 + C2481 + C2480 + C2479) * C2292 +
            (C174 * C50635 + C173 * C2295 + C172 * C2289 + C171 * C2294) *
                C2291) *
               C50693 * C1025) *
              C1028 +
          (((C173 * C2294 + C174 * C2289 + C175 * C2295 + C176 * C50635) *
                C2291 +
            (C2843 + C2844 + C2845 + C2846) * C2292 +
            (C2847 + C2848 + C2849 + C2850) * C2293) *
               C50693 * C1025 -
           (((C117 * C1105 + C50790 * C1113) * C50635 +
             (C117 * C1101 + C50790 * C1106) * C2295 + C2502 * C2289 +
             C2501 * C2294) *
                C2293 +
            (C2850 + C2849 + C2848 + C2847) * C2292 +
            (C2846 + C2845 + C2844 + C2843) * C2291) *
               C50693 * C50729) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C2294 +
            (C117 * C130 + C50790 * C143) * C2289 + C171 * C2295 +
            C172 * C50635) *
               C2291 +
           (C2504 + C2505 + C2459 + C2460) * C2292 + C2520 * C2293) *
              C50693 * C1096 -
          (C3505 * C2293 + (C2466 + C2465 + C2507 + C2506) * C2292 +
           (C2460 + C2459 + C2505 + C2504) * C2291) *
              C50693 * C1097 +
          (C2520 * C2291 + (C2511 + C2510 + C2509 + C2508) * C2292 +
           (C3506 + C3507 + C3500 + C3501) * C2293) *
              C50693 * C1098 -
          (((C117 * C3488 + C50790 * C3492) * C50635 +
            (C117 * C3486 + C50790 * C3489) * C2295 +
            (C117 * C3490 + C50790 * C3493) * C2289 +
            (C117 * C3487 + C50790 * C3491) * C2294) *
               C2293 +
           (C3501 + C3500 + C3507 + C3506) * C2292 + C3505 * C2291) *
              C50693 * C1099) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C2294 +
             (C117 * C130 + C50790 * C143) * C2289 + C171 * C2295 +
             C172 * C50635) *
                C2291 +
            (C2504 + C2505 + C2459 + C2460) * C2292 + C2520 * C2293) *
               C457 -
           ((C3209 + C3210 + C3239 + C3240) * C2293 +
            (C3215 + C3216 + C3241 + C3242) * C2292 +
            (C529 * C50635 + C530 * C2295 +
             (C117 * C476 + C50790 * C493) * C2289 +
             (C117 * C463 + C50790 * C477) * C2294) *
                C2291) *
               C458 +
           (((C117 * C464 + C50790 * C478) * C2294 +
             (C117 * C479 + C50790 * C494) * C2289 + C531 * C2295 +
             C532 * C50635) *
                C2291 +
            (C3678 + C3679 + C3666 + C3667) * C2292 +
            (C3680 + C3681 + C3672 + C3673) * C2293) *
               C459) *
              C1025 +
          (((C3242 + C3241 + C3216 + C3215) * C2291 +
            (C3240 + C3239 + C3210 + C3209) * C2292 +
            ((C117 * C3196 + C50790 * C3199) * C2294 +
             (C117 * C3200 + C50790 * C3205) * C2289 + C3237 * C2295 +
             C3238 * C50635) *
                C2293) *
               C458 -
           (C3505 * C2293 + (C2466 + C2465 + C2507 + C2506) * C2292 +
            (C2460 + C2459 + C2505 + C2504) * C2291) *
               C457 -
           (((C117 * C3655 + C50790 * C3659) * C50635 +
             (C117 * C3653 + C50790 * C3656) * C2295 +
             (C117 * C3657 + C50790 * C3660) * C2289 +
             (C117 * C3654 + C50790 * C3658) * C2294) *
                C2293 +
            (C3673 + C3672 + C3681 + C3680) * C2292 +
            (C3667 + C3666 + C3679 + C3678) * C2291) *
               C459) *
              C50729) *
         C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C118 +
             (C117 * C130 + C50790 * C143) * C106 + C171 * C119 + C172 * C107 +
             C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
                C50779 * C50920 -
            (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
             C529 * C107 + C530 * C119 + (C117 * C476 + C50790 * C493) * C106 +
             (C117 * C463 + C50790 * C477) * C118) *
                C50779 * C50757) *
               C1025 +
           (((C117 * C889 + C50790 * C894) * C118 +
             (C117 * C895 + C50790 * C904) * C106 + C922 * C119 + C923 * C107 +
             C924 * C120 + C925 * C108 + C926 * C121 + C927 * C109) *
                C50779 * C50757 -
            (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
             C352 * C107 + C353 * C119 + (C117 * C299 + C50790 * C316) * C106 +
             (C117 * C286 + C50790 * C300) * C118) *
                C50779 * C50920) *
               C50729) *
              C50911 +
          (((C530 * C118 + C529 * C106 + C528 * C119 + C527 * C107 +
             C526 * C120 + C525 * C108 + C758 * C121 + C759 * C109) *
                C50779 * C50757 -
            (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
             C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
                C50779 * C50920) *
               C1025 +
           ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
             C349 * C120 + C348 * C108 + C648 * C121 + C649 * C109) *
                C50779 * C50920 -
            ((C117 * C902 + C50790 * C908) * C109 +
             (C117 * C893 + C50790 * C903) * C121 + C927 * C108 + C926 * C120 +
             C925 * C107 + C924 * C119 + C923 * C106 + C922 * C118) *
                C50779 * C50757) *
               C50729) *
              C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50790 * C129) * C2294 +
              (C117 * C130 + C50790 * C143) * C2289 + C171 * C2295 +
              C172 * C50635) *
                 C2291 +
             (C2504 + C2505 + C2459 + C2460) * C2292 + C2520 * C2293) *
                C50920 -
            ((C3209 + C3210 + C3239 + C3240) * C2293 +
             (C3215 + C3216 + C3241 + C3242) * C2292 +
             (C529 * C50635 + C530 * C2295 +
              (C117 * C476 + C50790 * C493) * C2289 +
              (C117 * C463 + C50790 * C477) * C2294) *
                 C2291) *
                C50757) *
               C1025 +
           (((C3242 + C3241 + C3216 + C3215) * C2291 +
             (C3240 + C3239 + C3210 + C3209) * C2292 +
             ((C117 * C3196 + C50790 * C3199) * C2294 +
              (C117 * C3200 + C50790 * C3205) * C2289 + C3237 * C2295 +
              C3238 * C50635) *
                 C2293) *
                C50757 -
            (C3505 * C2293 + (C2466 + C2465 + C2507 + C2506) * C2292 +
             (C2460 + C2459 + C2505 + C2504) * C2291) *
                C50920) *
               C50729) *
              C50911 +
          ((((C530 * C2294 + C529 * C2289 + C528 * C2295 + C527 * C50635) *
                 C2291 +
             (C3225 + C3226 + C3227 + C3228) * C2292 +
             (C3229 + C3230 + C3231 + C3232) * C2293) *
                C50757 -
            (C2518 * C2293 + (C2482 + C2481 + C2480 + C2479) * C2292 +
             (C174 * C50635 + C173 * C2295 + C172 * C2289 + C171 * C2294) *
                 C2291) *
                C50920) *
               C1025 +
           (((C2479 + C2480 + C2481 + C2482) * C2291 +
             (C2483 + C2484 + C2485 + C2486) * C2292 +
             (C2512 + C2513 + C2514 + C2515) * C2293) *
                C50920 -
            (((C117 * C3203 + C50790 * C3207) * C50635 +
              (C117 * C3198 + C50790 * C3204) * C2295 + C3238 * C2289 +
              C3237 * C2294) *
                 C2293 +
             (C3232 + C3231 + C3230 + C3229) * C2292 +
             (C3228 + C3227 + C3226 + C3225) * C2291) *
                C50757) *
               C50729) *
              C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C118 +
            (C117 * C130 + C50790 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50779 * C50693 * C1025 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50790 * C316) * C106 +
            (C117 * C286 + C50790 * C300) * C118) *
               C50779 * C50693 * C50729) *
              C1027 +
          ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
            C349 * C120 + C348 * C108 + C648 * C121 + C649 * C109) *
               C50779 * C50693 * C50729 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50779 * C50693 * C1025) *
              C1028 +
          ((C173 * C118 + C174 * C106 + C175 * C119 + C176 * C107 +
            C178 * C120 + C177 * C108 + C179 * C121 + C180 * C109) *
               C50779 * C50693 * C1025 -
           ((C117 * C640 + C50790 * C642) * C109 +
            (C117 * C639 + C50790 * C641) * C121 + C649 * C108 + C648 * C120 +
            C348 * C107 + C349 * C119 + C350 * C106 + C351 * C118) *
               C50779 * C50693 * C50729) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C50790 * C129) * C118 +
           (C117 * C130 + C50790 * C143) * C106 + C171 * C119 + C172 * C107 +
           C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
              C50779 * C50693 * C1096 -
          (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 + C352 * C107 +
           C353 * C119 + (C117 * C299 + C50790 * C316) * C106 +
           (C117 * C286 + C50790 * C300) * C118) *
              C50779 * C50693 * C1097 +
          ((C117 * C287 + C50790 * C301) * C118 +
           (C117 * C302 + C50790 * C317) * C106 + C354 * C119 + C355 * C107 +
           C356 * C120 + C357 * C108 + C358 * C121 + C359 * C109) *
              C50779 * C50693 * C1098 -
          ((C117 * C1105 + C50790 * C1113) * C109 +
           (C117 * C1101 + C50790 * C1106) * C121 +
           (C117 * C1107 + C50790 * C1114) * C108 +
           (C117 * C1102 + C50790 * C1108) * C120 +
           (C117 * C1109 + C50790 * C1115) * C107 +
           (C117 * C1103 + C50790 * C1110) * C119 +
           (C117 * C1111 + C50790 * C1116) * C106 +
           (C117 * C1104 + C50790 * C1112) * C118) *
              C50779 * C50693 * C1099) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C2294 +
             (C117 * C130 + C50790 * C143) * C2289 + C171 * C2295 +
             C172 * C50635) *
                C2291 +
            (C2504 + C2505 + C2459 + C2460) * C2292 + C2520 * C2293) *
               C50693 * C1025 -
           ((C2508 + C2509 + C2510 + C2511) * C2293 +
            (C2466 + C2465 + C2507 + C2506) * C2292 +
            (C2460 + C2459 + C2505 + C2504) * C2291) *
               C50693 * C50729) *
              C1027 +
          (((C2479 + C2480 + C2481 + C2482) * C2291 +
            (C2483 + C2484 + C2485 + C2486) * C2292 +
            (C2512 + C2513 + C2514 + C2515) * C2293) *
               C50693 * C50729 -
           (C2518 * C2293 + (C2482 + C2481 + C2480 + C2479) * C2292 +
            (C174 * C50635 + C173 * C2295 + C172 * C2289 + C171 * C2294) *
                C2291) *
               C50693 * C1025) *
              C1028 +
          (((C173 * C2294 + C174 * C2289 + C175 * C2295 + C176 * C50635) *
                C2291 +
            (C2843 + C2844 + C2845 + C2846) * C2292 +
            (C2847 + C2848 + C2849 + C2850) * C2293) *
               C50693 * C1025 -
           (((C117 * C1105 + C50790 * C1113) * C50635 +
             (C117 * C1101 + C50790 * C1106) * C2295 + C2502 * C2289 +
             C2501 * C2294) *
                C2293 +
            (C2850 + C2849 + C2848 + C2847) * C2292 +
            (C2846 + C2845 + C2844 + C2843) * C2291) *
               C50693 * C50729) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C2294 +
            (C117 * C130 + C50790 * C143) * C2289 + C171 * C2295 +
            C172 * C50635) *
               C2291 +
           (C2504 + C2505 + C2459 + C2460) * C2292 + C2520 * C2293) *
              C50693 * C1096 -
          (C3505 * C2293 + (C2466 + C2465 + C2507 + C2506) * C2292 +
           (C2460 + C2459 + C2505 + C2504) * C2291) *
              C50693 * C1097 +
          (C2520 * C2291 + (C2511 + C2510 + C2509 + C2508) * C2292 +
           (C3506 + C3507 + C3500 + C3501) * C2293) *
              C50693 * C1098 -
          (((C117 * C3488 + C50790 * C3492) * C50635 +
            (C117 * C3486 + C50790 * C3489) * C2295 +
            (C117 * C3490 + C50790 * C3493) * C2289 +
            (C117 * C3487 + C50790 * C3491) * C2294) *
               C2293 +
           (C3501 + C3500 + C3507 + C3506) * C2292 + C3505 * C2291) *
              C50693 * C1099) *
         C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C118 +
             (C117 * C130 + C50790 * C143) * C106 + C171 * C119 + C172 * C107 +
             C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
                C50779 * C1676 -
            (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
             C529 * C107 + C530 * C119 + (C117 * C476 + C50790 * C493) * C106 +
             (C117 * C463 + C50790 * C477) * C118) *
                C50779 * C50757) *
               C50919 +
           (((C117 * C889 + C50790 * C894) * C118 +
             (C117 * C895 + C50790 * C904) * C106 + C922 * C119 + C923 * C107 +
             C924 * C120 + C925 * C108 + C926 * C121 + C927 * C109) *
                C50779 * C50757 -
            (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
             C352 * C107 + C353 * C119 + (C117 * C299 + C50790 * C316) * C106 +
             (C117 * C286 + C50790 * C300) * C118) *
                C50779 * C1676) *
               C50729) *
              C50911 +
          (((C530 * C118 + C529 * C106 + C528 * C119 + C527 * C107 +
             C526 * C120 + C525 * C108 + C758 * C121 + C759 * C109) *
                C50779 * C50757 -
            (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
             C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
                C50779 * C1676) *
               C50919 +
           ((C353 * C118 + C352 * C106 + C351 * C119 + C350 * C107 +
             C349 * C120 + C348 * C108 + C648 * C121 + C649 * C109) *
                C50779 * C1676 -
            ((C117 * C902 + C50790 * C908) * C109 +
             (C117 * C893 + C50790 * C903) * C121 + C927 * C108 + C926 * C120 +
             C925 * C107 + C924 * C119 + C923 * C106 + C922 * C118) *
                C50779 * C50757) *
               C50729) *
              C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50790 * C129) * C2294 +
              (C117 * C130 + C50790 * C143) * C2289 + C171 * C2295 +
              C172 * C50635) *
                 C2291 +
             (C2504 + C2505 + C2459 + C2460) * C2292 + C2520 * C2293) *
                C1676 -
            (C4186 * C2293 + (C3215 + C3216 + C3241 + C3242) * C2292 +
             (C529 * C50635 + C530 * C2295 +
              (C117 * C476 + C50790 * C493) * C2289 +
              (C117 * C463 + C50790 * C477) * C2294) *
                 C2291) *
                C50757) *
               C50919 +
           (((C3242 + C3241 + C3216 + C3215) * C2291 +
             (C3240 + C3239 + C3210 + C3209) * C2292 +
             (C4187 + C4188 + C4181 + C4182) * C2293) *
                C50757 -
            (C3505 * C2293 + (C2466 + C2465 + C2507 + C2506) * C2292 +
             (C2460 + C2459 + C2505 + C2504) * C2291) *
                C1676) *
               C50729) *
              C50911 +
          ((((C530 * C2294 + C529 * C2289 + C528 * C2295 + C527 * C50635) *
                 C2291 +
             (C3225 + C3226 + C3227 + C3228) * C2292 +
             (C3229 + C3230 + C3231 + C3232) * C2293) *
                C50757 -
            (C2518 * C2293 + (C2482 + C2481 + C2480 + C2479) * C2292 +
             (C174 * C50635 + C173 * C2295 + C172 * C2289 + C171 * C2294) *
                 C2291) *
                C1676) *
               C50919 +
           (((C2479 + C2480 + C2481 + C2482) * C2291 +
             (C2483 + C2484 + C2485 + C2486) * C2292 +
             (C2512 + C2513 + C2514 + C2515) * C2293) *
                C1676 -
            (((C117 * C3203 + C50790 * C3207) * C50635 +
              (C117 * C3198 + C50790 * C3204) * C2295 + C3238 * C2289 +
              C3237 * C2294) *
                 C2293 +
             (C3232 + C3231 + C3230 + C3229) * C2292 +
             (C3228 + C3227 + C3226 + C3225) * C2291) *
                C50757) *
               C50729) *
              C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C118 +
            (C117 * C130 + C50790 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50779 * C50966 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50790 * C493) * C106 +
            (C117 * C463 + C50790 * C477) * C118) *
               C50779 * C50967 +
           ((C117 * C464 + C50790 * C478) * C118 +
            (C117 * C479 + C50790 * C494) * C106 + C531 * C119 + C532 * C107 +
            C533 * C120 + C534 * C108 + C535 * C121 + C536 * C109) *
               C50779 * C2092) *
              C50919 +
          (((C117 * C889 + C50790 * C894) * C118 +
            (C117 * C895 + C50790 * C904) * C106 + C922 * C119 + C923 * C107 +
            C924 * C120 + C925 * C108 + C926 * C121 + C927 * C109) *
               C50779 * C50967 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50790 * C316) * C106 +
            (C117 * C286 + C50790 * C300) * C118) *
               C50779 * C50966 -
           ((C117 * C1219 + C50790 * C1227) * C109 +
            (C117 * C1215 + C50790 * C1220) * C121 +
            (C117 * C1221 + C50790 * C1228) * C108 +
            (C117 * C1216 + C50790 * C1222) * C120 +
            (C117 * C1223 + C50790 * C1229) * C107 +
            (C117 * C1217 + C50790 * C1224) * C119 +
            (C117 * C1225 + C50790 * C1230) * C106 +
            (C117 * C1218 + C50790 * C1226) * C118) *
               C50779 * C2092) *
              C50729) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C2294 +
             (C117 * C130 + C50790 * C143) * C2289 + C171 * C2295 +
             C172 * C50635) *
                C2291 +
            (C2504 + C2505 + C2459 + C2460) * C2292 + C2520 * C2293) *
               C50966 -
           (C4186 * C2293 + (C3215 + C3216 + C3241 + C3242) * C2292 +
            (C529 * C50635 + C530 * C2295 +
             (C117 * C476 + C50790 * C493) * C2289 +
             (C117 * C463 + C50790 * C477) * C2294) *
                C2291) *
               C50967 +
           (((C117 * C464 + C50790 * C478) * C2294 +
             (C117 * C479 + C50790 * C494) * C2289 + C531 * C2295 +
             C532 * C50635) *
                C2291 +
            (C3678 + C3679 + C3666 + C3667) * C2292 +
            (C3680 + C3681 + C3672 + C3673) * C2293) *
               C2092) *
              C50919 +
          (((C3242 + C3241 + C3216 + C3215) * C2291 +
            (C3240 + C3239 + C3210 + C3209) * C2292 +
            (C4187 + C4188 + C4181 + C4182) * C2293) *
               C50967 -
           (C3505 * C2293 + (C2466 + C2465 + C2507 + C2506) * C2292 +
            (C2460 + C2459 + C2505 + C2504) * C2291) *
               C50966 -
           (((C117 * C3655 + C50790 * C3659) * C50635 +
             (C117 * C3653 + C50790 * C3656) * C2295 +
             (C117 * C3657 + C50790 * C3660) * C2289 +
             (C117 * C3654 + C50790 * C3658) * C2294) *
                C2293 +
            (C3673 + C3672 + C3681 + C3680) * C2292 +
            (C3667 + C3666 + C3679 + C3678) * C2291) *
               C2092) *
              C50729) *
         C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C118 +
            (C117 * C130 + C50790 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50779 * C1676 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50790 * C493) * C106 +
            (C117 * C463 + C50790 * C477) * C118) *
               C50779 * C50757) *
              C278 +
          (((C117 * C889 + C50790 * C894) * C118 +
            (C117 * C895 + C50790 * C904) * C106 + C922 * C119 + C923 * C107 +
            C924 * C120 + C925 * C108 + C926 * C121 + C927 * C109) *
               C50779 * C50757 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50790 * C316) * C106 +
            (C117 * C286 + C50790 * C300) * C118) *
               C50779 * C1676) *
              C279 +
          (((C117 * C287 + C50790 * C301) * C118 +
            (C117 * C302 + C50790 * C317) * C106 + C354 * C119 + C355 * C107 +
            C356 * C120 + C357 * C108 + C358 * C121 + C359 * C109) *
               C50779 * C1676 -
           ((C117 * C1566 + C50790 * C1574) * C109 +
            (C117 * C1562 + C50790 * C1567) * C121 +
            (C117 * C1568 + C50790 * C1575) * C108 +
            (C117 * C1563 + C50790 * C1569) * C120 +
            (C117 * C1570 + C50790 * C1576) * C107 +
            (C117 * C1564 + C50790 * C1571) * C119 +
            (C117 * C1572 + C50790 * C1577) * C106 +
            (C117 * C1565 + C50790 * C1573) * C118) *
               C50779 * C50757) *
              C280) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C118 +
            (C117 * C130 + C50790 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50779 * C1676 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50790 * C493) * C106 +
            (C117 * C463 + C50790 * C477) * C118) *
               C50779 * C50757) *
              C50677 * C1027 +
          ((C530 * C118 + C529 * C106 + C528 * C119 + C527 * C107 +
            C526 * C120 + C525 * C108 + C758 * C121 + C759 * C109) *
               C50779 * C50757 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50779 * C1676) *
              C50677 * C1028 +
          ((C173 * C118 + C174 * C106 + C175 * C119 + C176 * C107 +
            C178 * C120 + C177 * C108 + C179 * C121 + C180 * C109) *
               C50779 * C1676 -
           ((C117 * C750 + C50790 * C752) * C109 +
            (C117 * C749 + C50790 * C751) * C121 + C759 * C108 + C758 * C120 +
            C525 * C107 + C526 * C119 + C527 * C106 + C528 * C118) *
               C50779 * C50757) *
              C50677 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C50790 * C129) * C118 +
           (C117 * C130 + C50790 * C143) * C106 + C171 * C119 + C172 * C107 +
           C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
              C50779 * C1842 -
          (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 + C529 * C107 +
           C530 * C119 + (C117 * C476 + C50790 * C493) * C106 +
           (C117 * C463 + C50790 * C477) * C118) *
              C50779 * C1843 +
          ((C117 * C464 + C50790 * C478) * C118 +
           (C117 * C479 + C50790 * C494) * C106 + C531 * C119 + C532 * C107 +
           C533 * C120 + C534 * C108 + C535 * C121 + C536 * C109) *
              C50779 * C1844 -
          ((C117 * C1850 + C50790 * C1858) * C109 +
           (C117 * C1846 + C50790 * C1851) * C121 +
           (C117 * C1852 + C50790 * C1859) * C108 +
           (C117 * C1847 + C50790 * C1853) * C120 +
           (C117 * C1854 + C50790 * C1860) * C107 +
           (C117 * C1848 + C50790 * C1855) * C119 +
           (C117 * C1856 + C50790 * C1861) * C106 +
           (C117 * C1849 + C50790 * C1857) * C118) *
              C50779 * C1845) *
         C50677 * C50658) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C2294 +
             (C117 * C130 + C50790 * C143) * C2289 + C171 * C2295 +
             C172 * C50635) *
                C2291 +
            (C2504 + C2505 + C2459 + C2460) * C2292 + C2520 * C2293) *
               C1676 -
           (C4186 * C2293 + (C3215 + C3216 + C3241 + C3242) * C2292 +
            (C529 * C50635 + C530 * C2295 +
             (C117 * C476 + C50790 * C493) * C2289 +
             (C117 * C463 + C50790 * C477) * C2294) *
                C2291) *
               C50757) *
              C50677 * C1027 +
          (((C530 * C2294 + C529 * C2289 + C528 * C2295 + C527 * C50635) *
                C2291 +
            (C3225 + C3226 + C3227 + C3228) * C2292 +
            (C3229 + C3230 + C3231 + C3232) * C2293) *
               C50757 -
           (C2518 * C2293 + (C2482 + C2481 + C2480 + C2479) * C2292 +
            (C174 * C50635 + C173 * C2295 + C172 * C2289 + C171 * C2294) *
                C2291) *
               C1676) *
              C50677 * C1028 +
          (((C173 * C2294 + C174 * C2289 + C175 * C2295 + C176 * C50635) *
                C2291 +
            (C2843 + C2844 + C2845 + C2846) * C2292 +
            (C2847 + C2848 + C2849 + C2850) * C2293) *
               C1676 -
           (((C117 * C1566 + C50790 * C1574) * C50635 +
             (C117 * C1562 + C50790 * C1567) * C2295 + C3002 * C2289 +
             C3001 * C2294) *
                C2293 +
            (C927 * C50635 + C926 * C2295 + C925 * C2289 + C924 * C2294) *
                C2292 +
            (C525 * C50635 + C526 * C2295 + C527 * C2289 + C528 * C2294) *
                C2291) *
               C50757) *
              C50677 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C2294 +
             (C117 * C130 + C50790 * C143) * C2289 + C171 * C2295 +
             C172 * C50635) *
                C2291 +
            (C2504 + C2505 + C2459 + C2460) * C2292 + C2520 * C2293) *
               C1676 -
           (C4186 * C2293 + (C3215 + C3216 + C3241 + C3242) * C2292 +
            (C529 * C50635 + C530 * C2295 +
             (C117 * C476 + C50790 * C493) * C2289 +
             (C117 * C463 + C50790 * C477) * C2294) *
                C2291) *
               C50757) *
              C278 +
          (((C3242 + C3241 + C3216 + C3215) * C2291 +
            (C3240 + C3239 + C3210 + C3209) * C2292 +
            (C4187 + C4188 + C4181 + C4182) * C2293) *
               C50757 -
           (C3505 * C2293 + (C2466 + C2465 + C2507 + C2506) * C2292 +
            (C2460 + C2459 + C2505 + C2504) * C2291) *
               C1676) *
              C279 +
          ((C2520 * C2291 + (C2511 + C2510 + C2509 + C2508) * C2292 +
            (C3506 + C3507 + C3500 + C3501) * C2293) *
               C1676 -
           (((C117 * C4169 + C50790 * C4173) * C50635 +
             (C117 * C4167 + C50790 * C4170) * C2295 +
             (C117 * C4171 + C50790 * C4174) * C2289 +
             (C117 * C4168 + C50790 * C4172) * C2294) *
                C2293 +
            (C4182 + C4181 + C4188 + C4187) * C2292 + C4186 * C2291) *
               C50757) *
              C280) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C2294 +
            (C117 * C130 + C50790 * C143) * C2289 + C171 * C2295 +
            C172 * C50635) *
               C2291 +
           (C2504 + C2505 + C2459 + C2460) * C2292 + C2520 * C2293) *
              C1842 -
          (C4186 * C2293 + (C3215 + C3216 + C3241 + C3242) * C2292 +
           (C529 * C50635 + C530 * C2295 +
            (C117 * C476 + C50790 * C493) * C2289 +
            (C117 * C463 + C50790 * C477) * C2294) *
               C2291) *
              C1843 +
          (((C117 * C464 + C50790 * C478) * C2294 +
            (C117 * C479 + C50790 * C494) * C2289 + C531 * C2295 +
            C532 * C50635) *
               C2291 +
           (C3678 + C3679 + C3666 + C3667) * C2292 +
           (C3680 + C3681 + C3672 + C3673) * C2293) *
              C1844 -
          (((C117 * C4582 + C50790 * C4590) * C50635 +
            (C117 * C4578 + C50790 * C4583) * C2295 +
            (C117 * C4584 + C50790 * C4591) * C2289 +
            (C117 * C4579 + C50790 * C4585) * C2294) *
               C2293 +
           ((C117 * C4586 + C50790 * C4592) * C50635 +
            (C117 * C4580 + C50790 * C4587) * C2295 +
            (C117 * C4588 + C50790 * C4593) * C2289 +
            (C117 * C4581 + C50790 * C4589) * C2294) *
               C2292 +
           ((C117 * C1854 + C50790 * C1860) * C50635 +
            (C117 * C1848 + C50790 * C1855) * C2295 +
            (C117 * C1856 + C50790 * C1861) * C2289 +
            (C117 * C1849 + C50790 * C1857) * C2294) *
               C2291) *
              C1845) *
         C50677 * C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C118 +
            (C117 * C130 + C50790 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50779 * C50966 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50790 * C493) * C106 +
            (C117 * C463 + C50790 * C477) * C118) *
               C50779 * C50967 +
           ((C117 * C464 + C50790 * C478) * C118 +
            (C117 * C479 + C50790 * C494) * C106 + C531 * C119 + C532 * C107 +
            C533 * C120 + C534 * C108 + C535 * C121 + C536 * C109) *
               C50779 * C2092) *
              C50677 * C50911 +
          ((C530 * C118 + C529 * C106 + C528 * C119 + C527 * C107 +
            C526 * C120 + C525 * C108 + C758 * C121 + C759 * C109) *
               C50779 * C50967 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50779 * C50966 -
           ((C117 * C488 + C50790 * C499) * C109 +
            (C117 * C469 + C50790 * C489) * C121 + C536 * C108 + C535 * C120 +
            C534 * C107 + C533 * C119 + C532 * C106 + C531 * C118) *
               C50779 * C2092) *
              C50677 * C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C2294 +
             (C117 * C130 + C50790 * C143) * C2289 + C171 * C2295 +
             C172 * C50635) *
                C2291 +
            (C2504 + C2505 + C2459 + C2460) * C2292 + C2520 * C2293) *
               C50966 -
           (C4186 * C2293 + (C3215 + C3216 + C3241 + C3242) * C2292 +
            (C529 * C50635 + C530 * C2295 +
             (C117 * C476 + C50790 * C493) * C2289 +
             (C117 * C463 + C50790 * C477) * C2294) *
                C2291) *
               C50967 +
           (((C117 * C464 + C50790 * C478) * C2294 +
             (C117 * C479 + C50790 * C494) * C2289 + C531 * C2295 +
             C532 * C50635) *
                C2291 +
            (C3678 + C3679 + C3666 + C3667) * C2292 +
            (C3680 + C3681 + C3672 + C3673) * C2293) *
               C2092) *
              C50677 * C50911 +
          (((C530 * C2294 + C529 * C2289 + C528 * C2295 + C527 * C50635) *
                C2291 +
            (C3225 + C3226 + C3227 + C3228) * C2292 +
            (C3229 + C3230 + C3231 + C3232) * C2293) *
               C50967 -
           (C2518 * C2293 + (C2482 + C2481 + C2480 + C2479) * C2292 +
            (C174 * C50635 + C173 * C2295 + C172 * C2289 + C171 * C2294) *
                C2291) *
               C50966 -
           (((C117 * C2673 + C50790 * C2677) * C50635 +
             (C117 * C2668 + C50790 * C2674) * C2295 + C2696 * C2289 +
             C2695 * C2294) *
                C2293 +
            ((C117 * C1221 + C50790 * C1228) * C50635 +
             (C117 * C1216 + C50790 * C1222) * C2295 + C2694 * C2289 +
             C2693 * C2294) *
                C2292 +
            (C534 * C50635 + C533 * C2295 + C532 * C2289 + C531 * C2294) *
                C2291) *
               C2092) *
              C50677 * C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C118 +
            (C117 * C130 + C50790 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50779 * C1676 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50790 * C493) * C106 +
            (C117 * C463 + C50790 * C477) * C118) *
               C50779 * C50757) *
              C50677 * C1027 +
          ((C530 * C118 + C529 * C106 + C528 * C119 + C527 * C107 +
            C526 * C120 + C525 * C108 + C758 * C121 + C759 * C109) *
               C50779 * C50757 -
           (C177 * C109 + C178 * C121 + C176 * C108 + C175 * C120 +
            C174 * C107 + C173 * C119 + C172 * C106 + C171 * C118) *
               C50779 * C1676) *
              C50677 * C1028 +
          ((C173 * C118 + C174 * C106 + C175 * C119 + C176 * C107 +
            C178 * C120 + C177 * C108 + C179 * C121 + C180 * C109) *
               C50779 * C1676 -
           ((C117 * C750 + C50790 * C752) * C109 +
            (C117 * C749 + C50790 * C751) * C121 + C759 * C108 + C758 * C120 +
            C525 * C107 + C526 * C119 + C527 * C106 + C528 * C118) *
               C50779 * C50757) *
              C50677 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C118 +
            (C117 * C130 + C50790 * C143) * C106 + C171 * C119 + C172 * C107 +
            C173 * C120 + C174 * C108 + C175 * C121 + C176 * C109) *
               C50779 * C1676 -
           (C525 * C109 + C526 * C121 + C527 * C108 + C528 * C120 +
            C529 * C107 + C530 * C119 + (C117 * C476 + C50790 * C493) * C106 +
            (C117 * C463 + C50790 * C477) * C118) *
               C50779 * C50757) *
              C278 +
          (((C117 * C889 + C50790 * C894) * C118 +
            (C117 * C895 + C50790 * C904) * C106 + C922 * C119 + C923 * C107 +
            C924 * C120 + C925 * C108 + C926 * C121 + C927 * C109) *
               C50779 * C50757 -
           (C348 * C109 + C349 * C121 + C350 * C108 + C351 * C120 +
            C352 * C107 + C353 * C119 + (C117 * C299 + C50790 * C316) * C106 +
            (C117 * C286 + C50790 * C300) * C118) *
               C50779 * C1676) *
              C279 +
          (((C117 * C287 + C50790 * C301) * C118 +
            (C117 * C302 + C50790 * C317) * C106 + C354 * C119 + C355 * C107 +
            C356 * C120 + C357 * C108 + C358 * C121 + C359 * C109) *
               C50779 * C1676 -
           ((C117 * C1566 + C50790 * C1574) * C109 +
            (C117 * C1562 + C50790 * C1567) * C121 +
            (C117 * C1568 + C50790 * C1575) * C108 +
            (C117 * C1563 + C50790 * C1569) * C120 +
            (C117 * C1570 + C50790 * C1576) * C107 +
            (C117 * C1564 + C50790 * C1571) * C119 +
            (C117 * C1572 + C50790 * C1577) * C106 +
            (C117 * C1565 + C50790 * C1573) * C118) *
               C50779 * C50757) *
              C280) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C2294 +
             (C117 * C130 + C50790 * C143) * C2289 + C171 * C2295 +
             C172 * C50635) *
                C2291 +
            (C2504 + C2505 + C2459 + C2460) * C2292 + C2520 * C2293) *
               C1676 -
           (C4186 * C2293 + (C3215 + C3216 + C3241 + C3242) * C2292 +
            (C529 * C50635 + C530 * C2295 +
             (C117 * C476 + C50790 * C493) * C2289 +
             (C117 * C463 + C50790 * C477) * C2294) *
                C2291) *
               C50757) *
              C50677 * C1027 +
          (((C530 * C2294 + C529 * C2289 + C528 * C2295 + C527 * C50635) *
                C2291 +
            (C3225 + C3226 + C3227 + C3228) * C2292 +
            (C3229 + C3230 + C3231 + C3232) * C2293) *
               C50757 -
           (C2518 * C2293 + (C2482 + C2481 + C2480 + C2479) * C2292 +
            (C174 * C50635 + C173 * C2295 + C172 * C2289 + C171 * C2294) *
                C2291) *
               C1676) *
              C50677 * C1028 +
          (((C173 * C2294 + C174 * C2289 + C175 * C2295 + C176 * C50635) *
                C2291 +
            (C2843 + C2844 + C2845 + C2846) * C2292 +
            (C2847 + C2848 + C2849 + C2850) * C2293) *
               C1676 -
           (((C117 * C1566 + C50790 * C1574) * C50635 +
             (C117 * C1562 + C50790 * C1567) * C2295 + C3002 * C2289 +
             C3001 * C2294) *
                C2293 +
            (C927 * C50635 + C926 * C2295 + C925 * C2289 + C924 * C2294) *
                C2292 +
            (C525 * C50635 + C526 * C2295 + C527 * C2289 + C528 * C2294) *
                C2291) *
               C50757) *
              C50677 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C2294 +
             (C117 * C130 + C50790 * C143) * C2289 + C171 * C2295 +
             C172 * C50635) *
                C2291 +
            (C2504 + C2505 + C2459 + C2460) * C2292 + C2520 * C2293) *
               C1676 -
           (C4186 * C2293 + (C3215 + C3216 + C3241 + C3242) * C2292 +
            (C529 * C50635 + C530 * C2295 +
             (C117 * C476 + C50790 * C493) * C2289 +
             (C117 * C463 + C50790 * C477) * C2294) *
                C2291) *
               C50757) *
              C278 +
          (((C3242 + C3241 + C3216 + C3215) * C2291 +
            (C3240 + C3239 + C3210 + C3209) * C2292 +
            (C4187 + C4188 + C4181 + C4182) * C2293) *
               C50757 -
           (C3505 * C2293 + (C2466 + C2465 + C2507 + C2506) * C2292 +
            (C2460 + C2459 + C2505 + C2504) * C2291) *
               C1676) *
              C279 +
          ((C2520 * C2291 + (C2511 + C2510 + C2509 + C2508) * C2292 +
            (C3506 + C3507 + C3500 + C3501) * C2293) *
               C1676 -
           (((C117 * C4169 + C50790 * C4173) * C50635 +
             (C117 * C4167 + C50790 * C4170) * C2295 +
             (C117 * C4171 + C50790 * C4174) * C2289 +
             (C117 * C4168 + C50790 * C4172) * C2294) *
                C2293 +
            (C4182 + C4181 + C4188 + C4187) * C2292 + C4186 * C2291) *
               C50757) *
              C280) *
         C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C49749 +
             (C117 * C130 + C50790 * C143) * C50904 + C171 * C49742 +
             C172 * C50635) *
                C50968 +
            (C24622 + C24623 + C24624 + C24625) * C50969 + C24650 * C24472) *
               C50693 * C50919 -
           ((C24630 + C24631 + C24632 + C24633) * C24472 +
            (C24629 + C24628 + C24627 + C24626) * C50969 +
            (C24625 + C24624 + C24623 + C24622) * C50968) *
               C50693 * C50729) *
              C50962 +
          (((C24634 + C24635 + C24636 + C24637) * C50968 +
            (C24638 + C24639 + C24640 + C24641) * C50969 +
            (C24642 + C24643 + C24644 + C24645) * C24472) *
               C50693 * C50729 -
           (C24651 * C24472 + (C24637 + C24636 + C24635 + C24634) * C50969 +
            (C174 * C50635 + C173 * C49742 + C172 * C50904 + C171 * C49749) *
                C50968) *
               C50693 * C50919) *
              C50963 +
          (((C173 * C49749 + C174 * C50904 + C175 * C49742 + C176 * C50635) *
                C50968 +
            (C24944 + C24945 + C24946 + C24947) * C50969 +
            (C24948 + C24949 + C24950 + C24951) * C24472) *
               C50693 * C50919 -
           (((C117 * C1105 + C50790 * C1113) * C50635 +
             (C117 * C1101 + C50790 * C1106) * C49742 + C2502 * C50904 +
             C2501 * C49749) *
                C24472 +
            (C24951 + C24950 + C24949 + C24948) * C50969 +
            (C24947 + C24946 + C24945 + C24944) * C50968) *
               C50693 * C50729) *
              C638)) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50790 * C129) * C49749 +
              (C117 * C130 + C50790 * C143) * C50904 + C171 * C49742 +
              C172 * C50635) *
                 C50968 +
             (C24622 + C24623 + C24624 + C24625) * C50969 + C24650 * C24472) *
                C50920 -
            ((C25292 + C25293 + C25294 + C25295) * C24472 +
             (C25296 + C25297 + C25298 + C25299) * C50969 +
             (C529 * C50635 + C530 * C49742 +
              (C117 * C476 + C50790 * C493) * C50904 +
              (C117 * C463 + C50790 * C477) * C49749) *
                 C50968) *
                C50757) *
               C50919 +
           (((C25299 + C25298 + C25297 + C25296) * C50968 +
             (C25295 + C25294 + C25293 + C25292) * C50969 +
             (C4184 * C49749 + C4185 * C50904 + C3237 * C49742 +
              C3238 * C50635) *
                 C24472) *
                C50757 -
            ((C24630 + C24631 + C24632 + C24633) * C24472 +
             (C24629 + C24628 + C24627 + C24626) * C50969 +
             (C24625 + C24624 + C24623 + C24622) * C50968) *
                C50920) *
               C50729) *
              C281 +
          ((((C530 * C49749 + C529 * C50904 + C528 * C49742 + C527 * C50635) *
                 C50968 +
             (C25300 + C25301 + C25302 + C25303) * C50969 +
             (C25304 + C25305 + C25306 + C25307) * C24472) *
                C50757 -
            (C24651 * C24472 + (C24637 + C24636 + C24635 + C24634) * C50969 +
             (C174 * C50635 + C173 * C49742 + C172 * C50904 + C171 * C49749) *
                 C50968) *
                C50920) *
               C50919 +
           (((C24634 + C24635 + C24636 + C24637) * C50968 +
             (C24638 + C24639 + C24640 + C24641) * C50969 +
             (C24642 + C24643 + C24644 + C24645) * C24472) *
                C50920 -
            (((C117 * C3203 + C50790 * C3207) * C50635 +
              (C117 * C3198 + C50790 * C3204) * C49742 + C3238 * C50904 +
              C3237 * C49749) *
                 C24472 +
             (C25307 + C25306 + C25305 + C25304) * C50969 +
             (C25303 + C25302 + C25301 + C25300) * C50968) *
                C50757) *
               C50729) *
              C50664)) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C49749 +
             (C117 * C130 + C50790 * C143) * C50904 + C171 * C49742 +
             C172 * C50635) *
                C50968 +
            (C24622 + C24623 + C24624 + C24625) * C50969 + C24650 * C24472) *
               C50693 * C278 -
           ((C24630 + C24631 + C24632 + C24633) * C24472 +
            (C24629 + C24628 + C24627 + C24626) * C50969 +
            (C24625 + C24624 + C24623 + C24622) * C50968) *
               C50693 * C279 +
           (C24650 * C50968 + (C24633 + C24632 + C24631 + C24630) * C50969 +
            (C3503 * C49749 + C3504 * C50904 + C2499 * C49742 +
             C2500 * C50635) *
                C24472) *
               C50693 * C280) *
              C281 +
          (((C24634 + C24635 + C24636 + C24637) * C50968 +
            (C24638 + C24639 + C24640 + C24641) * C50969 +
            (C24642 + C24643 + C24644 + C24645) * C24472) *
               C50693 * C279 -
           (C24651 * C24472 + (C24637 + C24636 + C24635 + C24634) * C50969 +
            (C174 * C50635 + C173 * C49742 + C172 * C50904 + C171 * C49749) *
                C50968) *
               C50693 * C278 -
           (((C117 * C2449 + C50790 * C2453) * C50635 +
             (C117 * C2444 + C50790 * C2450) * C49742 + C2500 * C50904 +
             C2499 * C49749) *
                C24472 +
            (C24645 + C24644 + C24643 + C24642) * C50969 + C24651 * C50968) *
               C50693 * C280) *
              C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C49749 +
            (C117 * C130 + C50790 * C143) * C50904 + C171 * C49742 +
            C172 * C50635) *
               C50968 +
           (C2491 * C49749 + C2492 * C50904 + C353 * C49742 + C352 * C50635) *
               C50969 +
           (C2493 * C49749 + C2494 * C50904 + C354 * C49742 + C355 * C50635) *
               C24472) *
              C50693 * C50677 * C113 -
          ((C357 * C50635 + C356 * C49742 + C355 * C50904 + C354 * C49749) *
               C24472 +
           (C350 * C50635 + C351 * C49742 + C352 * C50904 + C353 * C49749) *
               C50969 +
           (C174 * C50635 + C173 * C49742 + C172 * C50904 + C171 * C49749) *
               C50968) *
              C50693 * C50677 * C114 +
          ((C173 * C49749 + C174 * C50904 + C175 * C49742 + C176 * C50635) *
               C50968 +
           (C351 * C49749 + C350 * C50904 + C349 * C49742 + C348 * C50635) *
               C50969 +
           (C356 * C49749 + C357 * C50904 + C358 * C49742 + C359 * C50635) *
               C24472) *
              C50693 * C50677 * C115 -
          (((C117 * C311 + C50790 * C322) * C50635 +
            (C117 * C292 + C50790 * C312) * C49742 + C359 * C50904 +
            C358 * C49749) *
               C24472 +
           (C649 * C50635 + C648 * C49742 + C348 * C50904 + C349 * C49749) *
               C50969 +
           (C177 * C50635 + C178 * C49742 + C176 * C50904 + C175 * C49749) *
               C50968) *
              C50693 * C50677 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C49749 +
             (C117 * C130 + C50790 * C143) * C50904 + C171 * C49742 +
             C172 * C50635) *
                C50968 +
            (C24622 + C24623 + C24624 + C24625) * C50969 + C24650 * C24472) *
               C457 -
           ((C2691 * C50635 + C2692 * C49742 + C3233 * C50904 +
             C3234 * C49749) *
                C24472 +
            (C923 * C50635 + C922 * C49742 + C3235 * C50904 + C3236 * C49749) *
                C50969 +
            (C529 * C50635 + C530 * C49742 +
             (C117 * C476 + C50790 * C493) * C50904 +
             (C117 * C463 + C50790 * C477) * C49749) *
                C50968) *
               C458 +
           (((C117 * C464 + C50790 * C478) * C49749 +
             (C117 * C479 + C50790 * C494) * C50904 + C531 * C49742 +
             C532 * C50635) *
                C50968 +
            (C3674 * C49749 + C3675 * C50904 + C2693 * C49742 +
             C2694 * C50635) *
                C50969 +
            (C3676 * C49749 + C3677 * C50904 + C2695 * C49742 +
             C2696 * C50635) *
                C24472) *
               C459) *
              C50677 * C281 +
          (((C530 * C49749 + C529 * C50904 + C528 * C49742 + C527 * C50635) *
                C50968 +
            (C922 * C49749 + C923 * C50904 + C924 * C49742 + C925 * C50635) *
                C50969 +
            (C2692 * C49749 + C2691 * C50904 + C3001 * C49742 +
             C3002 * C50635) *
                C24472) *
               C458 -
           (C24651 * C24472 + (C24637 + C24636 + C24635 + C24634) * C50969 +
            (C174 * C50635 + C173 * C49742 + C172 * C50904 + C171 * C49749) *
                C50968) *
               C457 -
           (((C117 * C2673 + C50790 * C2677) * C50635 +
             (C117 * C2668 + C50790 * C2674) * C49742 + C2696 * C50904 +
             C2695 * C49749) *
                C24472 +
            (C8354 * C50635 + C8353 * C49742 + C2694 * C50904 +
             C2693 * C49749) *
                C50969 +
            (C534 * C50635 + C533 * C49742 + C532 * C50904 + C531 * C49749) *
                C50968) *
               C459) *
              C50677 * C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C49749 +
             (C117 * C130 + C50790 * C143) * C50904 + C171 * C49742 +
             C172 * C50635) *
                C50968 +
            (C24622 + C24623 + C24624 + C24625) * C50969 + C24650 * C24472) *
               C50920 -
           ((C2691 * C50635 + C2692 * C49742 + C3233 * C50904 +
             C3234 * C49749) *
                C24472 +
            (C923 * C50635 + C922 * C49742 + C3235 * C50904 + C3236 * C49749) *
                C50969 +
            (C529 * C50635 + C530 * C49742 +
             (C117 * C476 + C50790 * C493) * C50904 +
             (C117 * C463 + C50790 * C477) * C49749) *
                C50968) *
               C50757) *
              C50677 * C50962 +
          (((C530 * C49749 + C529 * C50904 + C528 * C49742 + C527 * C50635) *
                C50968 +
            (C922 * C49749 + C923 * C50904 + C924 * C49742 + C925 * C50635) *
                C50969 +
            (C2692 * C49749 + C2691 * C50904 + C3001 * C49742 +
             C3002 * C50635) *
                C24472) *
               C50757 -
           (C24651 * C24472 + (C24637 + C24636 + C24635 + C24634) * C50969 +
            (C174 * C50635 + C173 * C49742 + C172 * C50904 + C171 * C49749) *
                C50968) *
               C50920) *
              C50677 * C50963 +
          (((C173 * C49749 + C174 * C50904 + C175 * C49742 + C176 * C50635) *
                C50968 +
            (C24944 + C24945 + C24946 + C24947) * C50969 +
            (C24948 + C24949 + C24950 + C24951) * C24472) *
               C50920 -
           (((C117 * C1566 + C50790 * C1574) * C50635 +
             (C117 * C1562 + C50790 * C1567) * C49742 + C3002 * C50904 +
             C3001 * C49749) *
                C24472 +
            (C927 * C50635 + C926 * C49742 + C925 * C50904 + C924 * C49749) *
                C50969 +
            (C525 * C50635 + C526 * C49742 + C527 * C50904 + C528 * C49749) *
                C50968) *
               C50757) *
              C50677 * C638)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C49749 +
            (C117 * C130 + C50790 * C143) * C50904 + C171 * C49742 +
            C172 * C50635) *
               C50968 +
           (C2491 * C49749 + C2492 * C50904 + C353 * C49742 + C352 * C50635) *
               C50969 +
           (C2493 * C49749 + C2494 * C50904 + C354 * C49742 + C355 * C50635) *
               C24472) *
              C50693 * C50677 * C113 -
          ((C357 * C50635 + C356 * C49742 + C355 * C50904 + C354 * C49749) *
               C24472 +
           (C350 * C50635 + C351 * C49742 + C352 * C50904 + C353 * C49749) *
               C50969 +
           (C174 * C50635 + C173 * C49742 + C172 * C50904 + C171 * C49749) *
               C50968) *
              C50693 * C50677 * C114 +
          ((C173 * C49749 + C174 * C50904 + C175 * C49742 + C176 * C50635) *
               C50968 +
           (C351 * C49749 + C350 * C50904 + C349 * C49742 + C348 * C50635) *
               C50969 +
           (C356 * C49749 + C357 * C50904 + C358 * C49742 + C359 * C50635) *
               C24472) *
              C50693 * C50677 * C115 -
          (((C117 * C311 + C50790 * C322) * C50635 +
            (C117 * C292 + C50790 * C312) * C49742 + C359 * C50904 +
            C358 * C49749) *
               C24472 +
           (C649 * C50635 + C648 * C49742 + C348 * C50904 + C349 * C49749) *
               C50969 +
           (C177 * C50635 + C178 * C49742 + C176 * C50904 + C175 * C49749) *
               C50968) *
              C50693 * C50677 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C49749 +
             (C117 * C130 + C50790 * C143) * C50904 + C171 * C49742 +
             C172 * C50635) *
                C50968 +
            (C24622 + C24623 + C24624 + C24625) * C50969 + C24650 * C24472) *
               C50693 * C278 -
           ((C24630 + C24631 + C24632 + C24633) * C24472 +
            (C24629 + C24628 + C24627 + C24626) * C50969 +
            (C24625 + C24624 + C24623 + C24622) * C50968) *
               C50693 * C279 +
           (C24650 * C50968 + (C24633 + C24632 + C24631 + C24630) * C50969 +
            (C3503 * C49749 + C3504 * C50904 + C2499 * C49742 +
             C2500 * C50635) *
                C24472) *
               C50693 * C280) *
              C281 +
          (((C24634 + C24635 + C24636 + C24637) * C50968 +
            (C24638 + C24639 + C24640 + C24641) * C50969 +
            (C24642 + C24643 + C24644 + C24645) * C24472) *
               C50693 * C279 -
           (C24651 * C24472 + (C24637 + C24636 + C24635 + C24634) * C50969 +
            (C174 * C50635 + C173 * C49742 + C172 * C50904 + C171 * C49749) *
                C50968) *
               C50693 * C278 -
           (((C117 * C2449 + C50790 * C2453) * C50635 +
             (C117 * C2444 + C50790 * C2450) * C49742 + C2500 * C50904 +
             C2499 * C49749) *
                C24472 +
            (C24645 + C24644 + C24643 + C24642) * C50969 + C24651 * C50968) *
               C50693 * C280) *
              C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C49749 +
             (C117 * C130 + C50790 * C143) * C50904 + C171 * C49742 +
             C172 * C50635) *
                C50968 +
            (C24622 + C24623 + C24624 + C24625) * C50969 + C24650 * C24472) *
               C50693 * C50964 -
           (C25558 * C24472 + (C24629 + C24628 + C24627 + C24626) * C50969 +
            (C24625 + C24624 + C24623 + C24622) * C50968) *
               C50693 * C50965 +
           (C24650 * C50968 + (C24633 + C24632 + C24631 + C24630) * C50969 +
            (C25553 + C25554 + C25555 + C25556) * C24472) *
               C50693 * C1331) *
              C50911 +
          (((C24634 + C24635 + C24636 + C24637) * C50968 +
            (C24638 + C24639 + C24640 + C24641) * C50969 +
            (C24642 + C24643 + C24644 + C24645) * C24472) *
               C50693 * C50965 -
           (C24651 * C24472 + (C24637 + C24636 + C24635 + C24634) * C50969 +
            (C174 * C50635 + C173 * C49742 + C172 * C50904 + C171 * C49749) *
                C50968) *
               C50693 * C50964 -
           (((C117 * C2449 + C50790 * C2453) * C50635 +
             (C117 * C2444 + C50790 * C2450) * C49742 + C2500 * C50904 +
             C2499 * C49749) *
                C24472 +
            (C24645 + C24644 + C24643 + C24642) * C50969 + C24651 * C50968) *
               C50693 * C1331) *
              C50664)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C49749 +
             (C117 * C130 + C50790 * C143) * C50904 + C171 * C49742 +
             C172 * C50635) *
                C50968 +
            (C24622 + C24623 + C24624 + C24625) * C50969 + C24650 * C24472) *
               C50920 -
           (C26205 * C24472 + (C25296 + C25297 + C25298 + C25299) * C50969 +
            (C529 * C50635 + C530 * C49742 +
             (C117 * C476 + C50790 * C493) * C50904 +
             (C117 * C463 + C50790 * C477) * C49749) *
                C50968) *
               C50757) *
              C50964 +
          (((C25299 + C25298 + C25297 + C25296) * C50968 +
            (C25295 + C25294 + C25293 + C25292) * C50969 +
            (C26200 + C26201 + C26202 + C26203) * C24472) *
               C50757 -
           (C25558 * C24472 + (C24629 + C24628 + C24627 + C24626) * C50969 +
            (C24625 + C24624 + C24623 + C24622) * C50968) *
               C50920) *
              C50965 +
          ((C24650 * C50968 + (C24633 + C24632 + C24631 + C24630) * C50969 +
            (C25553 + C25554 + C25555 + C25556) * C24472) *
               C50920 -
           (((C117 * C4169 + C50790 * C4173) * C50635 +
             (C117 * C4167 + C50790 * C4170) * C49742 + C21032 * C50904 +
             C21031 * C49749) *
                C24472 +
            (C26203 + C26202 + C26201 + C26200) * C50969 + C26205 * C50968) *
               C50757) *
              C1331) *
         C50658) /
        (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C49749 +
            (C117 * C130 + C50790 * C143) * C50904 + C171 * C49742 +
            C172 * C50635) *
               C50968 +
           (C24622 + C24623 + C24624 + C24625) * C50969 + C24650 * C24472) *
              C50693 * C1096 -
          (C25558 * C24472 + (C24629 + C24628 + C24627 + C24626) * C50969 +
           (C24625 + C24624 + C24623 + C24622) * C50968) *
              C50693 * C1097 +
          (C24650 * C50968 + (C24633 + C24632 + C24631 + C24630) * C50969 +
           (C25553 + C25554 + C25555 + C25556) * C24472) *
              C50693 * C1098 -
          (((C117 * C3488 + C50790 * C3492) * C50635 +
            (C117 * C3486 + C50790 * C3489) * C49742 + C20578 * C50904 +
            C20577 * C49749) *
               C24472 +
           (C25556 + C25555 + C25554 + C25553) * C50969 + C25558 * C50968) *
              C50693 * C1099) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C49749 +
             (C117 * C130 + C50790 * C143) * C50904 + C171 * C49742 +
             C172 * C50635) *
                C50968 +
            (C24622 + C24623 + C24624 + C24625) * C50969 + C24650 * C24472) *
               C50693 * C1025 -
           ((C24630 + C24631 + C24632 + C24633) * C24472 +
            (C24629 + C24628 + C24627 + C24626) * C50969 +
            (C24625 + C24624 + C24623 + C24622) * C50968) *
               C50693 * C50729) *
              C1027 +
          (((C24634 + C24635 + C24636 + C24637) * C50968 +
            (C24638 + C24639 + C24640 + C24641) * C50969 +
            (C24642 + C24643 + C24644 + C24645) * C24472) *
               C50693 * C50729 -
           (C24651 * C24472 + (C24637 + C24636 + C24635 + C24634) * C50969 +
            (C174 * C50635 + C173 * C49742 + C172 * C50904 + C171 * C49749) *
                C50968) *
               C50693 * C1025) *
              C1028 +
          (((C173 * C49749 + C174 * C50904 + C175 * C49742 + C176 * C50635) *
                C50968 +
            (C24944 + C24945 + C24946 + C24947) * C50969 +
            (C24948 + C24949 + C24950 + C24951) * C24472) *
               C50693 * C1025 -
           (((C117 * C1105 + C50790 * C1113) * C50635 +
             (C117 * C1101 + C50790 * C1106) * C49742 + C2502 * C50904 +
             C2501 * C49749) *
                C24472 +
            (C24951 + C24950 + C24949 + C24948) * C50969 +
            (C24947 + C24946 + C24945 + C24944) * C50968) *
               C50693 * C50729) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C49749 +
             (C117 * C130 + C50790 * C143) * C50904 + C171 * C49742 +
             C172 * C50635) *
                C50968 +
            (C24622 + C24623 + C24624 + C24625) * C50969 + C24650 * C24472) *
               C457 -
           ((C25292 + C25293 + C25294 + C25295) * C24472 +
            (C25296 + C25297 + C25298 + C25299) * C50969 +
            (C529 * C50635 + C530 * C49742 +
             (C117 * C476 + C50790 * C493) * C50904 +
             (C117 * C463 + C50790 * C477) * C49749) *
                C50968) *
               C458 +
           (((C117 * C464 + C50790 * C478) * C49749 +
             (C117 * C479 + C50790 * C494) * C50904 + C531 * C49742 +
             C532 * C50635) *
                C50968 +
            (C25705 + C25706 + C25707 + C25708) * C50969 +
            (C25709 + C25710 + C25711 + C25712) * C24472) *
               C459) *
              C1025 +
          (((C25299 + C25298 + C25297 + C25296) * C50968 +
            (C25295 + C25294 + C25293 + C25292) * C50969 +
            (C4184 * C49749 + C4185 * C50904 + C3237 * C49742 +
             C3238 * C50635) *
                C24472) *
               C458 -
           (C25558 * C24472 + (C24629 + C24628 + C24627 + C24626) * C50969 +
            (C24625 + C24624 + C24623 + C24622) * C50968) *
               C457 -
           (((C117 * C3655 + C50790 * C3659) * C50635 +
             (C117 * C3653 + C50790 * C3656) * C49742 + C20692 * C50904 +
             C20691 * C49749) *
                C24472 +
            (C25712 + C25711 + C25710 + C25709) * C50969 +
            (C25708 + C25707 + C25706 + C25705) * C50968) *
               C459) *
              C50729) *
         C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50790 * C129) * C49749 +
              (C117 * C130 + C50790 * C143) * C50904 + C171 * C49742 +
              C172 * C50635) *
                 C50968 +
             (C24622 + C24623 + C24624 + C24625) * C50969 + C24650 * C24472) *
                C50920 -
            ((C25292 + C25293 + C25294 + C25295) * C24472 +
             (C25296 + C25297 + C25298 + C25299) * C50969 +
             (C529 * C50635 + C530 * C49742 +
              (C117 * C476 + C50790 * C493) * C50904 +
              (C117 * C463 + C50790 * C477) * C49749) *
                 C50968) *
                C50757) *
               C1025 +
           (((C25299 + C25298 + C25297 + C25296) * C50968 +
             (C25295 + C25294 + C25293 + C25292) * C50969 +
             (C4184 * C49749 + C4185 * C50904 + C3237 * C49742 +
              C3238 * C50635) *
                 C24472) *
                C50757 -
            (C25558 * C24472 + (C24629 + C24628 + C24627 + C24626) * C50969 +
             (C24625 + C24624 + C24623 + C24622) * C50968) *
                C50920) *
               C50729) *
              C50911 +
          ((((C530 * C49749 + C529 * C50904 + C528 * C49742 + C527 * C50635) *
                 C50968 +
             (C25300 + C25301 + C25302 + C25303) * C50969 +
             (C25304 + C25305 + C25306 + C25307) * C24472) *
                C50757 -
            (C24651 * C24472 + (C24637 + C24636 + C24635 + C24634) * C50969 +
             (C174 * C50635 + C173 * C49742 + C172 * C50904 + C171 * C49749) *
                 C50968) *
                C50920) *
               C1025 +
           (((C24634 + C24635 + C24636 + C24637) * C50968 +
             (C24638 + C24639 + C24640 + C24641) * C50969 +
             (C24642 + C24643 + C24644 + C24645) * C24472) *
                C50920 -
            (((C117 * C3203 + C50790 * C3207) * C50635 +
              (C117 * C3198 + C50790 * C3204) * C49742 + C3238 * C50904 +
              C3237 * C49749) *
                 C24472 +
             (C25307 + C25306 + C25305 + C25304) * C50969 +
             (C25303 + C25302 + C25301 + C25300) * C50968) *
                C50757) *
               C50729) *
              C50664)) /
        (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C49749 +
             (C117 * C130 + C50790 * C143) * C50904 + C171 * C49742 +
             C172 * C50635) *
                C50968 +
            (C24622 + C24623 + C24624 + C24625) * C50969 + C24650 * C24472) *
               C50693 * C1025 -
           ((C24630 + C24631 + C24632 + C24633) * C24472 +
            (C24629 + C24628 + C24627 + C24626) * C50969 +
            (C24625 + C24624 + C24623 + C24622) * C50968) *
               C50693 * C50729) *
              C1027 +
          (((C24634 + C24635 + C24636 + C24637) * C50968 +
            (C24638 + C24639 + C24640 + C24641) * C50969 +
            (C24642 + C24643 + C24644 + C24645) * C24472) *
               C50693 * C50729 -
           (C24651 * C24472 + (C24637 + C24636 + C24635 + C24634) * C50969 +
            (C174 * C50635 + C173 * C49742 + C172 * C50904 + C171 * C49749) *
                C50968) *
               C50693 * C1025) *
              C1028 +
          (((C173 * C49749 + C174 * C50904 + C175 * C49742 + C176 * C50635) *
                C50968 +
            (C24944 + C24945 + C24946 + C24947) * C50969 +
            (C24948 + C24949 + C24950 + C24951) * C24472) *
               C50693 * C1025 -
           (((C117 * C1105 + C50790 * C1113) * C50635 +
             (C117 * C1101 + C50790 * C1106) * C49742 + C2502 * C50904 +
             C2501 * C49749) *
                C24472 +
            (C24951 + C24950 + C24949 + C24948) * C50969 +
            (C24947 + C24946 + C24945 + C24944) * C50968) *
               C50693 * C50729) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C49749 +
            (C117 * C130 + C50790 * C143) * C50904 + C171 * C49742 +
            C172 * C50635) *
               C50968 +
           (C24622 + C24623 + C24624 + C24625) * C50969 + C24650 * C24472) *
              C50693 * C1096 -
          (C25558 * C24472 + (C24629 + C24628 + C24627 + C24626) * C50969 +
           (C24625 + C24624 + C24623 + C24622) * C50968) *
              C50693 * C1097 +
          (C24650 * C50968 + (C24633 + C24632 + C24631 + C24630) * C50969 +
           (C25553 + C25554 + C25555 + C25556) * C24472) *
              C50693 * C1098 -
          (((C117 * C3488 + C50790 * C3492) * C50635 +
            (C117 * C3486 + C50790 * C3489) * C49742 + C20578 * C50904 +
            C20577 * C49749) *
               C24472 +
           (C25556 + C25555 + C25554 + C25553) * C50969 + C25558 * C50968) *
              C50693 * C1099) *
         C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50790 * C129) * C49749 +
              (C117 * C130 + C50790 * C143) * C50904 + C171 * C49742 +
              C172 * C50635) *
                 C50968 +
             (C24622 + C24623 + C24624 + C24625) * C50969 + C24650 * C24472) *
                C1676 -
            (C26205 * C24472 + (C25296 + C25297 + C25298 + C25299) * C50969 +
             (C529 * C50635 + C530 * C49742 +
              (C117 * C476 + C50790 * C493) * C50904 +
              (C117 * C463 + C50790 * C477) * C49749) *
                 C50968) *
                C50757) *
               C50919 +
           (((C25299 + C25298 + C25297 + C25296) * C50968 +
             (C25295 + C25294 + C25293 + C25292) * C50969 +
             (C26200 + C26201 + C26202 + C26203) * C24472) *
                C50757 -
            (C25558 * C24472 + (C24629 + C24628 + C24627 + C24626) * C50969 +
             (C24625 + C24624 + C24623 + C24622) * C50968) *
                C1676) *
               C50729) *
              C50911 +
          ((((C530 * C49749 + C529 * C50904 + C528 * C49742 + C527 * C50635) *
                 C50968 +
             (C25300 + C25301 + C25302 + C25303) * C50969 +
             (C25304 + C25305 + C25306 + C25307) * C24472) *
                C50757 -
            (C24651 * C24472 + (C24637 + C24636 + C24635 + C24634) * C50969 +
             (C174 * C50635 + C173 * C49742 + C172 * C50904 + C171 * C49749) *
                 C50968) *
                C1676) *
               C50919 +
           (((C24634 + C24635 + C24636 + C24637) * C50968 +
             (C24638 + C24639 + C24640 + C24641) * C50969 +
             (C24642 + C24643 + C24644 + C24645) * C24472) *
                C1676 -
            (((C117 * C3203 + C50790 * C3207) * C50635 +
              (C117 * C3198 + C50790 * C3204) * C49742 + C3238 * C50904 +
              C3237 * C49749) *
                 C24472 +
             (C25307 + C25306 + C25305 + C25304) * C50969 +
             (C25303 + C25302 + C25301 + C25300) * C50968) *
                C50757) *
               C50729) *
              C50664)) /
        (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C49749 +
             (C117 * C130 + C50790 * C143) * C50904 + C171 * C49742 +
             C172 * C50635) *
                C50968 +
            (C24622 + C24623 + C24624 + C24625) * C50969 + C24650 * C24472) *
               C50966 -
           (C26205 * C24472 + (C25296 + C25297 + C25298 + C25299) * C50969 +
            (C529 * C50635 + C530 * C49742 +
             (C117 * C476 + C50790 * C493) * C50904 +
             (C117 * C463 + C50790 * C477) * C49749) *
                C50968) *
               C50967 +
           (((C117 * C464 + C50790 * C478) * C49749 +
             (C117 * C479 + C50790 * C494) * C50904 + C531 * C49742 +
             C532 * C50635) *
                C50968 +
            (C25705 + C25706 + C25707 + C25708) * C50969 +
            (C25709 + C25710 + C25711 + C25712) * C24472) *
               C2092) *
              C50919 +
          (((C25299 + C25298 + C25297 + C25296) * C50968 +
            (C25295 + C25294 + C25293 + C25292) * C50969 +
            (C26200 + C26201 + C26202 + C26203) * C24472) *
               C50967 -
           (C25558 * C24472 + (C24629 + C24628 + C24627 + C24626) * C50969 +
            (C24625 + C24624 + C24623 + C24622) * C50968) *
               C50966 -
           (((C117 * C3655 + C50790 * C3659) * C50635 +
             (C117 * C3653 + C50790 * C3656) * C49742 + C20692 * C50904 +
             C20691 * C49749) *
                C24472 +
            (C25712 + C25711 + C25710 + C25709) * C50969 +
            (C25708 + C25707 + C25706 + C25705) * C50968) *
               C2092) *
              C50729) *
         C50658) /
        (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C49749 +
             (C117 * C130 + C50790 * C143) * C50904 + C171 * C49742 +
             C172 * C50635) *
                C50968 +
            (C24622 + C24623 + C24624 + C24625) * C50969 + C24650 * C24472) *
               C1676 -
           (C26205 * C24472 + (C25296 + C25297 + C25298 + C25299) * C50969 +
            (C529 * C50635 + C530 * C49742 +
             (C117 * C476 + C50790 * C493) * C50904 +
             (C117 * C463 + C50790 * C477) * C49749) *
                C50968) *
               C50757) *
              C278 +
          (((C25299 + C25298 + C25297 + C25296) * C50968 +
            (C25295 + C25294 + C25293 + C25292) * C50969 +
            (C26200 + C26201 + C26202 + C26203) * C24472) *
               C50757 -
           (C25558 * C24472 + (C24629 + C24628 + C24627 + C24626) * C50969 +
            (C24625 + C24624 + C24623 + C24622) * C50968) *
               C1676) *
              C279 +
          ((C24650 * C50968 + (C24633 + C24632 + C24631 + C24630) * C50969 +
            (C25553 + C25554 + C25555 + C25556) * C24472) *
               C1676 -
           (((C117 * C4169 + C50790 * C4173) * C50635 +
             (C117 * C4167 + C50790 * C4170) * C49742 + C21032 * C50904 +
             C21031 * C49749) *
                C24472 +
            (C26203 + C26202 + C26201 + C26200) * C50969 + C26205 * C50968) *
               C50757) *
              C280) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C49749 +
             (C117 * C130 + C50790 * C143) * C50904 + C171 * C49742 +
             C172 * C50635) *
                C50968 +
            (C24622 + C24623 + C24624 + C24625) * C50969 + C24650 * C24472) *
               C1676 -
           (C26205 * C24472 + (C25296 + C25297 + C25298 + C25299) * C50969 +
            (C529 * C50635 + C530 * C49742 +
             (C117 * C476 + C50790 * C493) * C50904 +
             (C117 * C463 + C50790 * C477) * C49749) *
                C50968) *
               C50757) *
              C50677 * C1027 +
          (((C530 * C49749 + C529 * C50904 + C528 * C49742 + C527 * C50635) *
                C50968 +
            (C25300 + C25301 + C25302 + C25303) * C50969 +
            (C25304 + C25305 + C25306 + C25307) * C24472) *
               C50757 -
           (C24651 * C24472 + (C24637 + C24636 + C24635 + C24634) * C50969 +
            (C174 * C50635 + C173 * C49742 + C172 * C50904 + C171 * C49749) *
                C50968) *
               C1676) *
              C50677 * C1028 +
          (((C173 * C49749 + C174 * C50904 + C175 * C49742 + C176 * C50635) *
                C50968 +
            (C24944 + C24945 + C24946 + C24947) * C50969 +
            (C24948 + C24949 + C24950 + C24951) * C24472) *
               C1676 -
           (((C117 * C1566 + C50790 * C1574) * C50635 +
             (C117 * C1562 + C50790 * C1567) * C49742 + C3002 * C50904 +
             C3001 * C49749) *
                C24472 +
            (C927 * C50635 + C926 * C49742 + C925 * C50904 + C924 * C49749) *
                C50969 +
            (C525 * C50635 + C526 * C49742 + C527 * C50904 + C528 * C49749) *
                C50968) *
               C50757) *
              C50677 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C49749 +
            (C117 * C130 + C50790 * C143) * C50904 + C171 * C49742 +
            C172 * C50635) *
               C50968 +
           (C24622 + C24623 + C24624 + C24625) * C50969 + C24650 * C24472) *
              C1842 -
          (C26205 * C24472 + (C25296 + C25297 + C25298 + C25299) * C50969 +
           (C529 * C50635 + C530 * C49742 +
            (C117 * C476 + C50790 * C493) * C50904 +
            (C117 * C463 + C50790 * C477) * C49749) *
               C50968) *
              C1843 +
          (((C117 * C464 + C50790 * C478) * C49749 +
            (C117 * C479 + C50790 * C494) * C50904 + C531 * C49742 +
            C532 * C50635) *
               C50968 +
           (C25705 + C25706 + C25707 + C25708) * C50969 +
           (C25709 + C25710 + C25711 + C25712) * C24472) *
              C1844 -
          (((C117 * C4582 + C50790 * C4590) * C50635 +
            (C117 * C4578 + C50790 * C4583) * C49742 +
            (C117 * C4584 + C50790 * C4591) * C50904 +
            (C117 * C4579 + C50790 * C4585) * C49749) *
               C24472 +
           ((C117 * C4586 + C50790 * C4592) * C50635 +
            (C117 * C4580 + C50790 * C4587) * C49742 +
            (C117 * C4588 + C50790 * C4593) * C50904 +
            (C117 * C4581 + C50790 * C4589) * C49749) *
               C50969 +
           ((C117 * C1854 + C50790 * C1860) * C50635 +
            (C117 * C1848 + C50790 * C1855) * C49742 +
            (C117 * C1856 + C50790 * C1861) * C50904 +
            (C117 * C1849 + C50790 * C1857) * C49749) *
               C50968) *
              C1845) *
         C50677 * C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C49749 +
             (C117 * C130 + C50790 * C143) * C50904 + C171 * C49742 +
             C172 * C50635) *
                C50968 +
            (C24622 + C24623 + C24624 + C24625) * C50969 + C24650 * C24472) *
               C50966 -
           (C26205 * C24472 + (C25296 + C25297 + C25298 + C25299) * C50969 +
            (C529 * C50635 + C530 * C49742 +
             (C117 * C476 + C50790 * C493) * C50904 +
             (C117 * C463 + C50790 * C477) * C49749) *
                C50968) *
               C50967 +
           (((C117 * C464 + C50790 * C478) * C49749 +
             (C117 * C479 + C50790 * C494) * C50904 + C531 * C49742 +
             C532 * C50635) *
                C50968 +
            (C25705 + C25706 + C25707 + C25708) * C50969 +
            (C25709 + C25710 + C25711 + C25712) * C24472) *
               C2092) *
              C50677 * C50911 +
          (((C530 * C49749 + C529 * C50904 + C528 * C49742 + C527 * C50635) *
                C50968 +
            (C25300 + C25301 + C25302 + C25303) * C50969 +
            (C25304 + C25305 + C25306 + C25307) * C24472) *
               C50967 -
           (C24651 * C24472 + (C24637 + C24636 + C24635 + C24634) * C50969 +
            (C174 * C50635 + C173 * C49742 + C172 * C50904 + C171 * C49749) *
                C50968) *
               C50966 -
           (((C117 * C2673 + C50790 * C2677) * C50635 +
             (C117 * C2668 + C50790 * C2674) * C49742 + C2696 * C50904 +
             C2695 * C49749) *
                C24472 +
            (C8354 * C50635 + C8353 * C49742 + C2694 * C50904 +
             C2693 * C49749) *
                C50969 +
            (C534 * C50635 + C533 * C49742 + C532 * C50904 + C531 * C49749) *
                C50968) *
               C2092) *
              C50677 * C50664)) /
        (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C49749 +
             (C117 * C130 + C50790 * C143) * C50904 + C171 * C49742 +
             C172 * C50635) *
                C50968 +
            (C24622 + C24623 + C24624 + C24625) * C50969 + C24650 * C24472) *
               C1676 -
           (C26205 * C24472 + (C25296 + C25297 + C25298 + C25299) * C50969 +
            (C529 * C50635 + C530 * C49742 +
             (C117 * C476 + C50790 * C493) * C50904 +
             (C117 * C463 + C50790 * C477) * C49749) *
                C50968) *
               C50757) *
              C50677 * C1027 +
          (((C530 * C49749 + C529 * C50904 + C528 * C49742 + C527 * C50635) *
                C50968 +
            (C25300 + C25301 + C25302 + C25303) * C50969 +
            (C25304 + C25305 + C25306 + C25307) * C24472) *
               C50757 -
           (C24651 * C24472 + (C24637 + C24636 + C24635 + C24634) * C50969 +
            (C174 * C50635 + C173 * C49742 + C172 * C50904 + C171 * C49749) *
                C50968) *
               C1676) *
              C50677 * C1028 +
          (((C173 * C49749 + C174 * C50904 + C175 * C49742 + C176 * C50635) *
                C50968 +
            (C24944 + C24945 + C24946 + C24947) * C50969 +
            (C24948 + C24949 + C24950 + C24951) * C24472) *
               C1676 -
           (((C117 * C1566 + C50790 * C1574) * C50635 +
             (C117 * C1562 + C50790 * C1567) * C49742 + C3002 * C50904 +
             C3001 * C49749) *
                C24472 +
            (C927 * C50635 + C926 * C49742 + C925 * C50904 + C924 * C49749) *
                C50969 +
            (C525 * C50635 + C526 * C49742 + C527 * C50904 + C528 * C49749) *
                C50968) *
               C50757) *
              C50677 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C49749 +
             (C117 * C130 + C50790 * C143) * C50904 + C171 * C49742 +
             C172 * C50635) *
                C50968 +
            (C24622 + C24623 + C24624 + C24625) * C50969 + C24650 * C24472) *
               C1676 -
           (C26205 * C24472 + (C25296 + C25297 + C25298 + C25299) * C50969 +
            (C529 * C50635 + C530 * C49742 +
             (C117 * C476 + C50790 * C493) * C50904 +
             (C117 * C463 + C50790 * C477) * C49749) *
                C50968) *
               C50757) *
              C278 +
          (((C25299 + C25298 + C25297 + C25296) * C50968 +
            (C25295 + C25294 + C25293 + C25292) * C50969 +
            (C26200 + C26201 + C26202 + C26203) * C24472) *
               C50757 -
           (C25558 * C24472 + (C24629 + C24628 + C24627 + C24626) * C50969 +
            (C24625 + C24624 + C24623 + C24622) * C50968) *
               C1676) *
              C279 +
          ((C24650 * C50968 + (C24633 + C24632 + C24631 + C24630) * C50969 +
            (C25553 + C25554 + C25555 + C25556) * C24472) *
               C1676 -
           (((C117 * C4169 + C50790 * C4173) * C50635 +
             (C117 * C4167 + C50790 * C4170) * C49742 + C21032 * C50904 +
             C21031 * C49749) *
                C24472 +
            (C26203 + C26202 + C26201 + C26200) * C50969 + C26205 * C50968) *
               C50757) *
              C280) *
         C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C19841 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C50630) *
                C50968 +
            ((C13817 + C13818) * C19841 + (C13819 + C13820) * C50630) * C50969 +
            C30825 * C24472) *
               C50693 * C50919 -
           (((C15046 + C15045) * C50630 + (C15044 + C15043) * C19841) * C24472 +
            ((C13821 + C13822) * C50630 + (C13823 + C13824) * C19841) * C50969 +
            ((C13820 + C13819) * C50630 + (C13818 + C13817) * C19841) *
                C50968) *
               C50693 * C50729) *
              C50962 +
          (((C13793 * C19841 + C13794 * C50630) * C50968 +
            (C13807 * C19841 + C13808 * C50630) * C50969 +
            ((C13825 + C13826) * C19841 + (C13827 + C13828) * C50630) *
                C24472) *
               C50693 * C50729 -
           (C30824 * C24472 + (C13805 * C50630 + C13806 * C19841) * C50969 +
            ((C10766 + C10765) * C50630 + (C10764 + C10763) * C19841) *
                C50968) *
               C50693 * C50919) *
              C50963 +
          (((C10779 * C19841 + C10780 * C50630) * C50968 +
            (C14229 * C19841 + C14230 * C50630) * C50969 +
            ((C10973 + C10974) * C19841 + (C10975 + C10976) * C50630) *
                C24472) *
               C50693 * C50919 -
           (((C10729 * C3203 + C50854 * C3207 + C10728 * C1107 +
              C50933 * C1114) *
                 C50630 +
             (C10729 * C3198 + C50854 * C3204 + C10728 * C1102 +
              C50933 * C1108) *
                 C19841) *
                C24472 +
            ((C10976 + C10975) * C50630 + (C10974 + C10973) * C19841) * C50969 +
            (C11317 * C50630 + C11318 * C19841) * C50968) *
               C50693 * C50729) *
              C638)) /
        (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                  C19841 +
              (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                  C50630) *
                 C50968 +
             ((C13817 + C13818) * C19841 + (C13819 + C13820) * C50630) *
                 C50969 +
             C30825 * C24472) *
                C50920 -
            (((C15910 + C15909) * C50630 + (C15908 + C15907) * C19841) *
                 C24472 +
             ((C14703 + C14704) * C50630 + (C14705 + C14706) * C19841) *
                 C50969 +
             ((C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                  C50630 +
              (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                  C19841) *
                 C50968) *
                C50757) *
               C50919 +
           ((((C14706 + C14705) * C19841 + (C14704 + C14703) * C50630) *
                 C50968 +
             ((C15907 + C15908) * C19841 + (C15909 + C15910) * C50630) *
                 C50969 +
             ((C10728 * C3196 + C50933 * C3199 + C10729 * C3654 +
               C50854 * C3658) *
                  C19841 +
              (C10728 * C3200 + C50933 * C3205 + C10729 * C3657 +
               C50854 * C3660) *
                  C50630) *
                 C24472) *
                C50757 -
            (((C15046 + C15045) * C50630 + (C15044 + C15043) * C19841) *
                 C24472 +
             ((C13821 + C13822) * C50630 + (C13823 + C13824) * C19841) *
                 C50969 +
             ((C13820 + C13819) * C50630 + (C13818 + C13817) * C19841) *
                 C50968) *
                C50920) *
               C50729) *
              C281 +
          (((((C11162 + C11161) * C19841 + (C11160 + C11159) * C50630) *
                 C50968 +
             (C14693 * C19841 + C14694 * C50630) * C50969 +
             ((C14707 + C14708) * C19841 + (C14709 + C14710) * C50630) *
                 C24472) *
                C50757 -
            (C30824 * C24472 + (C13805 * C50630 + C13806 * C19841) * C50969 +
             ((C10766 + C10765) * C50630 + (C10764 + C10763) * C19841) *
                 C50968) *
                C50920) *
               C50919 +
           (((C13793 * C19841 + C13794 * C50630) * C50968 +
             (C13807 * C19841 + C13808 * C50630) * C50969 +
             ((C13825 + C13826) * C19841 + (C13827 + C13828) * C50630) *
                 C24472) *
                C50920 -
            (((C10729 * C3655 + C50854 * C3659 + C10728 * C3202 +
               C50933 * C3206) *
                  C50630 +
              (C10729 * C3653 + C50854 * C3656 + C10728 * C3197 +
               C50933 * C3201) *
                  C19841) *
                 C24472 +
             ((C14710 + C14709) * C50630 + (C14708 + C14707) * C19841) *
                 C50969 +
             (C14683 * C50630 + C14684 * C19841) * C50968) *
                C50757) *
               C50729) *
              C50664)) /
        (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C19841 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C50630) *
                C50968 +
            ((C13817 + C13818) * C19841 + (C13819 + C13820) * C50630) * C50969 +
            C30825 * C24472) *
               C50693 * C278 -
           (((C15046 + C15045) * C50630 + (C15044 + C15043) * C19841) * C24472 +
            ((C13821 + C13822) * C50630 + (C13823 + C13824) * C19841) * C50969 +
            ((C13820 + C13819) * C50630 + (C13818 + C13817) * C19841) *
                C50968) *
               C50693 * C279 +
           (C30825 * C50968 +
            ((C15043 + C15044) * C19841 + (C15045 + C15046) * C50630) * C50969 +
            ((C10728 * C2442 + C50933 * C2445 + C10729 * C4168 +
              C50854 * C4172) *
                 C19841 +
             (C10728 * C2446 + C50933 * C2451 + C10729 * C4171 +
              C50854 * C4174) *
                 C50630) *
                C24472) *
               C50693 * C280) *
              C281 +
          (((C13793 * C19841 + C13794 * C50630) * C50968 +
            (C13807 * C19841 + C13808 * C50630) * C50969 +
            ((C13825 + C13826) * C19841 + (C13827 + C13828) * C50630) *
                C24472) *
               C50693 * C279 -
           (C30824 * C24472 + (C13805 * C50630 + C13806 * C19841) * C50969 +
            ((C10766 + C10765) * C50630 + (C10764 + C10763) * C19841) *
                C50968) *
               C50693 * C278 -
           (((C10729 * C4169 + C50854 * C4173 + C10728 * C2448 +
              C50933 * C2452) *
                 C50630 +
             (C10729 * C4167 + C50854 * C4170 + C10728 * C2443 +
              C50933 * C2447) *
                 C19841) *
                C24472 +
            ((C13828 + C13827) * C50630 + (C13826 + C13825) * C19841) * C50969 +
            C30824 * C50968) *
               C50693 * C280) *
              C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                C19841 +
            (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                C50630) *
               C50968 +
           ((C13817 + C13818) * C19841 + (C13819 + C13820) * C50630) * C50969 +
           ((C13824 + C13823) * C19841 + (C13822 + C13821) * C50630) * C24472) *
              C50693 * C50677 * C113 -
          ((C13795 * C50630 + C13796 * C19841) * C24472 +
           (C13805 * C50630 + C13806 * C19841) * C50969 +
           ((C10766 + C10765) * C50630 + (C10764 + C10763) * C19841) * C50968) *
              C50693 * C50677 * C114 +
          ((C10779 * C19841 + C10780 * C50630) * C50968 +
           (C14229 * C19841 + C14230 * C50630) * C50969 +
           ((C10973 + C10974) * C19841 + (C10975 + C10976) * C50630) * C24472) *
              C50693 * C50677 * C115 -
          (((C10729 * C1566 + C50854 * C1574 + C10728 * C308 + C50933 * C320) *
                C50630 +
            (C10729 * C1562 + C50854 * C1567 + C10728 * C290 + C50933 * C307) *
                C19841) *
               C24472 +
           ((C11330 + C11329) * C50630 + (C11328 + C11327) * C19841) * C50969 +
           (C10781 * C50630 + C10782 * C19841) * C50968) *
              C50693 * C50677 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C19841 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C50630) *
                C50968 +
            ((C13817 + C13818) * C19841 + (C13819 + C13820) * C50630) * C50969 +
            C30825 * C24472) *
               C457 -
           (((C15910 + C15909) * C50630 + (C15908 + C15907) * C19841) * C24472 +
            ((C14703 + C14704) * C50630 + (C14705 + C14706) * C19841) * C50969 +
            ((C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                 C50630 +
             (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                 C19841) *
                C50968) *
               C458 +
           (((C10728 * C464 + C50933 * C478 + C10729 * C1849 + C50854 * C1857) *
                 C19841 +
             (C10728 * C479 + C50933 * C494 + C10729 * C1856 + C50854 * C1861) *
                 C50630) *
                C50968 +
            ((C15249 + C15250) * C19841 + (C15251 + C15252) * C50630) * C50969 +
            ((C10728 * C2666 + C50933 * C2669 + C10729 * C4579 +
              C50854 * C4585) *
                 C19841 +
             (C10728 * C2670 + C50933 * C2675 + C10729 * C4584 +
              C50854 * C4591) *
                 C50630) *
                C24472) *
               C459) *
              C50677 * C281 +
          ((((C11162 + C11161) * C19841 + (C11160 + C11159) * C50630) * C50968 +
            (C14693 * C19841 + C14694 * C50630) * C50969 +
            ((C14707 + C14708) * C19841 + (C14709 + C14710) * C50630) *
                C24472) *
               C458 -
           (C30824 * C24472 + (C13805 * C50630 + C13806 * C19841) * C50969 +
            ((C10766 + C10765) * C50630 + (C10764 + C10763) * C19841) *
                C50968) *
               C457 -
           (((C10729 * C4582 + C50854 * C4590 + C10728 * C2672 +
              C50933 * C2676) *
                 C50630 +
             (C10729 * C4578 + C50854 * C4583 + C10728 * C2667 +
              C50933 * C2671) *
                 C19841) *
                C24472 +
            ((C14034 + C14033) * C50630 + (C14032 + C14031) * C19841) * C50969 +
            ((C11166 + C11165) * C50630 + (C11164 + C11163) * C19841) *
                C50968) *
               C459) *
              C50677 * C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C19841 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C50630) *
                C50968 +
            ((C13817 + C13818) * C19841 + (C13819 + C13820) * C50630) * C50969 +
            C30825 * C24472) *
               C50920 -
           (((C15910 + C15909) * C50630 + (C15908 + C15907) * C19841) * C24472 +
            ((C14703 + C14704) * C50630 + (C14705 + C14706) * C19841) * C50969 +
            ((C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                 C50630 +
             (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                 C19841) *
                C50968) *
               C50757) *
              C50677 * C50962 +
          ((((C11162 + C11161) * C19841 + (C11160 + C11159) * C50630) * C50968 +
            (C14693 * C19841 + C14694 * C50630) * C50969 +
            ((C14707 + C14708) * C19841 + (C14709 + C14710) * C50630) *
                C24472) *
               C50757 -
           (C30824 * C24472 + (C13805 * C50630 + C13806 * C19841) * C50969 +
            ((C10766 + C10765) * C50630 + (C10764 + C10763) * C19841) *
                C50968) *
               C50920) *
              C50677 * C50963 +
          (((C10779 * C19841 + C10780 * C50630) * C50968 +
            (C14229 * C19841 + C14230 * C50630) * C50969 +
            ((C10973 + C10974) * C19841 + (C10975 + C10976) * C50630) *
                C24472) *
               C50920 -
           (((C10729 * C2673 + C50854 * C2677 + C10728 * C1568 +
              C50933 * C1575) *
                 C50630 +
             (C10729 * C2668 + C50854 * C2674 + C10728 * C1563 +
              C50933 * C1569) *
                 C19841) *
                C24472 +
            ((C11708 + C11707) * C50630 + (C11706 + C11705) * C19841) * C50969 +
            (C11477 * C50630 + C11478 * C19841) * C50968) *
               C50757) *
              C50677 * C638)) /
        (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                C19841 +
            (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                C50630) *
               C50968 +
           ((C13817 + C13818) * C19841 + (C13819 + C13820) * C50630) * C50969 +
           ((C13824 + C13823) * C19841 + (C13822 + C13821) * C50630) * C24472) *
              C50693 * C50677 * C113 -
          ((C13795 * C50630 + C13796 * C19841) * C24472 +
           (C13805 * C50630 + C13806 * C19841) * C50969 +
           ((C10766 + C10765) * C50630 + (C10764 + C10763) * C19841) * C50968) *
              C50693 * C50677 * C114 +
          ((C10779 * C19841 + C10780 * C50630) * C50968 +
           (C14229 * C19841 + C14230 * C50630) * C50969 +
           ((C10973 + C10974) * C19841 + (C10975 + C10976) * C50630) * C24472) *
              C50693 * C50677 * C115 -
          (((C10729 * C1566 + C50854 * C1574 + C10728 * C308 + C50933 * C320) *
                C50630 +
            (C10729 * C1562 + C50854 * C1567 + C10728 * C290 + C50933 * C307) *
                C19841) *
               C24472 +
           ((C11330 + C11329) * C50630 + (C11328 + C11327) * C19841) * C50969 +
           (C10781 * C50630 + C10782 * C19841) * C50968) *
              C50693 * C50677 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C19841 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C50630) *
                C50968 +
            ((C13817 + C13818) * C19841 + (C13819 + C13820) * C50630) * C50969 +
            C30825 * C24472) *
               C50693 * C278 -
           (((C15046 + C15045) * C50630 + (C15044 + C15043) * C19841) * C24472 +
            ((C13821 + C13822) * C50630 + (C13823 + C13824) * C19841) * C50969 +
            ((C13820 + C13819) * C50630 + (C13818 + C13817) * C19841) *
                C50968) *
               C50693 * C279 +
           (C30825 * C50968 +
            ((C15043 + C15044) * C19841 + (C15045 + C15046) * C50630) * C50969 +
            ((C10728 * C2442 + C50933 * C2445 + C10729 * C4168 +
              C50854 * C4172) *
                 C19841 +
             (C10728 * C2446 + C50933 * C2451 + C10729 * C4171 +
              C50854 * C4174) *
                 C50630) *
                C24472) *
               C50693 * C280) *
              C281 +
          (((C13793 * C19841 + C13794 * C50630) * C50968 +
            (C13807 * C19841 + C13808 * C50630) * C50969 +
            ((C13825 + C13826) * C19841 + (C13827 + C13828) * C50630) *
                C24472) *
               C50693 * C279 -
           (C30824 * C24472 + (C13805 * C50630 + C13806 * C19841) * C50969 +
            ((C10766 + C10765) * C50630 + (C10764 + C10763) * C19841) *
                C50968) *
               C50693 * C278 -
           (((C10729 * C4169 + C50854 * C4173 + C10728 * C2448 +
              C50933 * C2452) *
                 C50630 +
             (C10729 * C4167 + C50854 * C4170 + C10728 * C2443 +
              C50933 * C2447) *
                 C19841) *
                C24472 +
            ((C13828 + C13827) * C50630 + (C13826 + C13825) * C19841) * C50969 +
            C30824 * C50968) *
               C50693 * C280) *
              C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C19841 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C50630) *
                C50968 +
            ((C13817 + C13818) * C19841 + (C13819 + C13820) * C50630) * C50969 +
            C30825 * C24472) *
               C50693 * C50964 -
           (C31718 * C24472 +
            ((C13821 + C13822) * C50630 + (C13823 + C13824) * C19841) * C50969 +
            ((C13820 + C13819) * C50630 + (C13818 + C13817) * C19841) *
                C50968) *
               C50693 * C50965 +
           (C30825 * C50968 +
            ((C15043 + C15044) * C19841 + (C15045 + C15046) * C50630) * C50969 +
            ((C31714 + C31715) * C19841 + (C31716 + C31717) * C50630) *
                C24472) *
               C50693 * C1331) *
              C50911 +
          (((C13793 * C19841 + C13794 * C50630) * C50968 +
            (C13807 * C19841 + C13808 * C50630) * C50969 +
            ((C13825 + C13826) * C19841 + (C13827 + C13828) * C50630) *
                C24472) *
               C50693 * C50965 -
           (C30824 * C24472 + (C13805 * C50630 + C13806 * C19841) * C50969 +
            ((C10766 + C10765) * C50630 + (C10764 + C10763) * C19841) *
                C50968) *
               C50693 * C50964 -
           (((C10729 * C4169 + C50854 * C4173 + C10728 * C2448 +
              C50933 * C2452) *
                 C50630 +
             (C10729 * C4167 + C50854 * C4170 + C10728 * C2443 +
              C50933 * C2447) *
                 C19841) *
                C24472 +
            ((C13828 + C13827) * C50630 + (C13826 + C13825) * C19841) * C50969 +
            C30824 * C50968) *
               C50693 * C1331) *
              C50664)) /
        (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C19841 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C50630) *
                C50968 +
            ((C13817 + C13818) * C19841 + (C13819 + C13820) * C50630) * C50969 +
            C30825 * C24472) *
               C50920 -
           (C32379 * C24472 +
            ((C14703 + C14704) * C50630 + (C14705 + C14706) * C19841) * C50969 +
            ((C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                 C50630 +
             (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                 C19841) *
                C50968) *
               C50757) *
              C50964 +
          ((((C14706 + C14705) * C19841 + (C14704 + C14703) * C50630) * C50968 +
            ((C15907 + C15908) * C19841 + (C15909 + C15910) * C50630) * C50969 +
            ((C32375 + C32376) * C19841 + (C32377 + C32378) * C50630) *
                C24472) *
               C50757 -
           (C31718 * C24472 +
            ((C13821 + C13822) * C50630 + (C13823 + C13824) * C19841) * C50969 +
            ((C13820 + C13819) * C50630 + (C13818 + C13817) * C19841) *
                C50968) *
               C50920) *
              C50965 +
          ((C30825 * C50968 +
            ((C15043 + C15044) * C19841 + (C15045 + C15046) * C50630) * C50969 +
            ((C31714 + C31715) * C19841 + (C31716 + C31717) * C50630) *
                C24472) *
               C50920 -
           (((C10729 * C20679 + C50854 * C20681 + C10728 * C4171 +
              C50933 * C4174) *
                 C50630 +
             (C10729 * C20678 + C50854 * C20680 + C10728 * C4168 +
              C50933 * C4172) *
                 C19841) *
                C24472 +
            ((C32378 + C32377) * C50630 + (C32376 + C32375) * C19841) * C50969 +
            C32379 * C50968) *
               C50757) *
              C1331) *
         C50658) /
        (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                C19841 +
            (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                C50630) *
               C50968 +
           ((C13817 + C13818) * C19841 + (C13819 + C13820) * C50630) * C50969 +
           C30825 * C24472) *
              C50693 * C1096 -
          (C31718 * C24472 +
           ((C13821 + C13822) * C50630 + (C13823 + C13824) * C19841) * C50969 +
           ((C13820 + C13819) * C50630 + (C13818 + C13817) * C19841) * C50968) *
              C50693 * C1097 +
          (C30825 * C50968 +
           ((C15043 + C15044) * C19841 + (C15045 + C15046) * C50630) * C50969 +
           ((C31714 + C31715) * C19841 + (C31716 + C31717) * C50630) * C24472) *
              C50693 * C1098 -
          (((C10729 * C21021 + C50854 * C21023 + C10728 * C3490 +
             C50933 * C3493) *
                C50630 +
            (C10729 * C21020 + C50854 * C21022 + C10728 * C3487 +
             C50933 * C3491) *
                C19841) *
               C24472 +
           ((C31717 + C31716) * C50630 + (C31715 + C31714) * C19841) * C50969 +
           C31718 * C50968) *
              C50693 * C1099) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C19841 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C50630) *
                C50968 +
            ((C13817 + C13818) * C19841 + (C13819 + C13820) * C50630) * C50969 +
            C30825 * C24472) *
               C50693 * C1025 -
           (((C15046 + C15045) * C50630 + (C15044 + C15043) * C19841) * C24472 +
            ((C13821 + C13822) * C50630 + (C13823 + C13824) * C19841) * C50969 +
            ((C13820 + C13819) * C50630 + (C13818 + C13817) * C19841) *
                C50968) *
               C50693 * C50729) *
              C1027 +
          (((C13793 * C19841 + C13794 * C50630) * C50968 +
            (C13807 * C19841 + C13808 * C50630) * C50969 +
            ((C13825 + C13826) * C19841 + (C13827 + C13828) * C50630) *
                C24472) *
               C50693 * C50729 -
           (C30824 * C24472 + (C13805 * C50630 + C13806 * C19841) * C50969 +
            ((C10766 + C10765) * C50630 + (C10764 + C10763) * C19841) *
                C50968) *
               C50693 * C1025) *
              C1028 +
          (((C10779 * C19841 + C10780 * C50630) * C50968 +
            (C14229 * C19841 + C14230 * C50630) * C50969 +
            ((C10973 + C10974) * C19841 + (C10975 + C10976) * C50630) *
                C24472) *
               C50693 * C1025 -
           (((C10729 * C3203 + C50854 * C3207 + C10728 * C1107 +
              C50933 * C1114) *
                 C50630 +
             (C10729 * C3198 + C50854 * C3204 + C10728 * C1102 +
              C50933 * C1108) *
                 C19841) *
                C24472 +
            ((C10976 + C10975) * C50630 + (C10974 + C10973) * C19841) * C50969 +
            (C11317 * C50630 + C11318 * C19841) * C50968) *
               C50693 * C50729) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C19841 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C50630) *
                C50968 +
            ((C13817 + C13818) * C19841 + (C13819 + C13820) * C50630) * C50969 +
            C30825 * C24472) *
               C457 -
           (((C15910 + C15909) * C50630 + (C15908 + C15907) * C19841) * C24472 +
            ((C14703 + C14704) * C50630 + (C14705 + C14706) * C19841) * C50969 +
            ((C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                 C50630 +
             (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                 C19841) *
                C50968) *
               C458 +
           (((C10728 * C464 + C50933 * C478 + C10729 * C1849 + C50854 * C1857) *
                 C19841 +
             (C10728 * C479 + C50933 * C494 + C10729 * C1856 + C50854 * C1861) *
                 C50630) *
                C50968 +
            ((C15249 + C15250) * C19841 + (C15251 + C15252) * C50630) * C50969 +
            ((C31873 + C31874) * C19841 + (C31875 + C31876) * C50630) *
                C24472) *
               C459) *
              C1025 +
          ((((C14706 + C14705) * C19841 + (C14704 + C14703) * C50630) * C50968 +
            ((C15907 + C15908) * C19841 + (C15909 + C15910) * C50630) * C50969 +
            ((C10728 * C3196 + C50933 * C3199 + C10729 * C3654 +
              C50854 * C3658) *
                 C19841 +
             (C10728 * C3200 + C50933 * C3205 + C10729 * C3657 +
              C50854 * C3660) *
                 C50630) *
                C24472) *
               C458 -
           (C31718 * C24472 +
            ((C13821 + C13822) * C50630 + (C13823 + C13824) * C19841) * C50969 +
            ((C13820 + C13819) * C50630 + (C13818 + C13817) * C19841) *
                C50968) *
               C457 -
           (((C10729 * C21297 + C50854 * C21299 + C10728 * C3657 +
              C50933 * C3660) *
                 C50630 +
             (C10729 * C21296 + C50854 * C21298 + C10728 * C3654 +
              C50933 * C3658) *
                 C19841) *
                C24472 +
            ((C31876 + C31875) * C50630 + (C31874 + C31873) * C19841) * C50969 +
            ((C15252 + C15251) * C50630 + (C15250 + C15249) * C19841) *
                C50968) *
               C459) *
              C50729) *
         C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                  C19841 +
              (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                  C50630) *
                 C50968 +
             ((C13817 + C13818) * C19841 + (C13819 + C13820) * C50630) *
                 C50969 +
             C30825 * C24472) *
                C50920 -
            (((C15910 + C15909) * C50630 + (C15908 + C15907) * C19841) *
                 C24472 +
             ((C14703 + C14704) * C50630 + (C14705 + C14706) * C19841) *
                 C50969 +
             ((C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                  C50630 +
              (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                  C19841) *
                 C50968) *
                C50757) *
               C1025 +
           ((((C14706 + C14705) * C19841 + (C14704 + C14703) * C50630) *
                 C50968 +
             ((C15907 + C15908) * C19841 + (C15909 + C15910) * C50630) *
                 C50969 +
             ((C10728 * C3196 + C50933 * C3199 + C10729 * C3654 +
               C50854 * C3658) *
                  C19841 +
              (C10728 * C3200 + C50933 * C3205 + C10729 * C3657 +
               C50854 * C3660) *
                  C50630) *
                 C24472) *
                C50757 -
            (C31718 * C24472 +
             ((C13821 + C13822) * C50630 + (C13823 + C13824) * C19841) *
                 C50969 +
             ((C13820 + C13819) * C50630 + (C13818 + C13817) * C19841) *
                 C50968) *
                C50920) *
               C50729) *
              C50911 +
          (((((C11162 + C11161) * C19841 + (C11160 + C11159) * C50630) *
                 C50968 +
             (C14693 * C19841 + C14694 * C50630) * C50969 +
             ((C14707 + C14708) * C19841 + (C14709 + C14710) * C50630) *
                 C24472) *
                C50757 -
            (C30824 * C24472 + (C13805 * C50630 + C13806 * C19841) * C50969 +
             ((C10766 + C10765) * C50630 + (C10764 + C10763) * C19841) *
                 C50968) *
                C50920) *
               C1025 +
           (((C13793 * C19841 + C13794 * C50630) * C50968 +
             (C13807 * C19841 + C13808 * C50630) * C50969 +
             ((C13825 + C13826) * C19841 + (C13827 + C13828) * C50630) *
                 C24472) *
                C50920 -
            (((C10729 * C3655 + C50854 * C3659 + C10728 * C3202 +
               C50933 * C3206) *
                  C50630 +
              (C10729 * C3653 + C50854 * C3656 + C10728 * C3197 +
               C50933 * C3201) *
                  C19841) *
                 C24472 +
             ((C14710 + C14709) * C50630 + (C14708 + C14707) * C19841) *
                 C50969 +
             (C14683 * C50630 + C14684 * C19841) * C50968) *
                C50757) *
               C50729) *
              C50664)) /
        (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C19841 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C50630) *
                C50968 +
            ((C13817 + C13818) * C19841 + (C13819 + C13820) * C50630) * C50969 +
            C30825 * C24472) *
               C50693 * C1025 -
           (((C15046 + C15045) * C50630 + (C15044 + C15043) * C19841) * C24472 +
            ((C13821 + C13822) * C50630 + (C13823 + C13824) * C19841) * C50969 +
            ((C13820 + C13819) * C50630 + (C13818 + C13817) * C19841) *
                C50968) *
               C50693 * C50729) *
              C1027 +
          (((C13793 * C19841 + C13794 * C50630) * C50968 +
            (C13807 * C19841 + C13808 * C50630) * C50969 +
            ((C13825 + C13826) * C19841 + (C13827 + C13828) * C50630) *
                C24472) *
               C50693 * C50729 -
           (C30824 * C24472 + (C13805 * C50630 + C13806 * C19841) * C50969 +
            ((C10766 + C10765) * C50630 + (C10764 + C10763) * C19841) *
                C50968) *
               C50693 * C1025) *
              C1028 +
          (((C10779 * C19841 + C10780 * C50630) * C50968 +
            (C14229 * C19841 + C14230 * C50630) * C50969 +
            ((C10973 + C10974) * C19841 + (C10975 + C10976) * C50630) *
                C24472) *
               C50693 * C1025 -
           (((C10729 * C3203 + C50854 * C3207 + C10728 * C1107 +
              C50933 * C1114) *
                 C50630 +
             (C10729 * C3198 + C50854 * C3204 + C10728 * C1102 +
              C50933 * C1108) *
                 C19841) *
                C24472 +
            ((C10976 + C10975) * C50630 + (C10974 + C10973) * C19841) * C50969 +
            (C11317 * C50630 + C11318 * C19841) * C50968) *
               C50693 * C50729) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                C19841 +
            (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                C50630) *
               C50968 +
           ((C13817 + C13818) * C19841 + (C13819 + C13820) * C50630) * C50969 +
           C30825 * C24472) *
              C50693 * C1096 -
          (C31718 * C24472 +
           ((C13821 + C13822) * C50630 + (C13823 + C13824) * C19841) * C50969 +
           ((C13820 + C13819) * C50630 + (C13818 + C13817) * C19841) * C50968) *
              C50693 * C1097 +
          (C30825 * C50968 +
           ((C15043 + C15044) * C19841 + (C15045 + C15046) * C50630) * C50969 +
           ((C31714 + C31715) * C19841 + (C31716 + C31717) * C50630) * C24472) *
              C50693 * C1098 -
          (((C10729 * C21021 + C50854 * C21023 + C10728 * C3490 +
             C50933 * C3493) *
                C50630 +
            (C10729 * C21020 + C50854 * C21022 + C10728 * C3487 +
             C50933 * C3491) *
                C19841) *
               C24472 +
           ((C31717 + C31716) * C50630 + (C31715 + C31714) * C19841) * C50969 +
           C31718 * C50968) *
              C50693 * C1099) *
         C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                  C19841 +
              (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                  C50630) *
                 C50968 +
             ((C13817 + C13818) * C19841 + (C13819 + C13820) * C50630) *
                 C50969 +
             C30825 * C24472) *
                C1676 -
            (C32379 * C24472 +
             ((C14703 + C14704) * C50630 + (C14705 + C14706) * C19841) *
                 C50969 +
             ((C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                  C50630 +
              (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                  C19841) *
                 C50968) *
                C50757) *
               C50919 +
           ((((C14706 + C14705) * C19841 + (C14704 + C14703) * C50630) *
                 C50968 +
             ((C15907 + C15908) * C19841 + (C15909 + C15910) * C50630) *
                 C50969 +
             ((C32375 + C32376) * C19841 + (C32377 + C32378) * C50630) *
                 C24472) *
                C50757 -
            (C31718 * C24472 +
             ((C13821 + C13822) * C50630 + (C13823 + C13824) * C19841) *
                 C50969 +
             ((C13820 + C13819) * C50630 + (C13818 + C13817) * C19841) *
                 C50968) *
                C1676) *
               C50729) *
              C50911 +
          (((((C11162 + C11161) * C19841 + (C11160 + C11159) * C50630) *
                 C50968 +
             (C14693 * C19841 + C14694 * C50630) * C50969 +
             ((C14707 + C14708) * C19841 + (C14709 + C14710) * C50630) *
                 C24472) *
                C50757 -
            (C30824 * C24472 + (C13805 * C50630 + C13806 * C19841) * C50969 +
             ((C10766 + C10765) * C50630 + (C10764 + C10763) * C19841) *
                 C50968) *
                C1676) *
               C50919 +
           (((C13793 * C19841 + C13794 * C50630) * C50968 +
             (C13807 * C19841 + C13808 * C50630) * C50969 +
             ((C13825 + C13826) * C19841 + (C13827 + C13828) * C50630) *
                 C24472) *
                C1676 -
            (((C10729 * C3655 + C50854 * C3659 + C10728 * C3202 +
               C50933 * C3206) *
                  C50630 +
              (C10729 * C3653 + C50854 * C3656 + C10728 * C3197 +
               C50933 * C3201) *
                  C19841) *
                 C24472 +
             ((C14710 + C14709) * C50630 + (C14708 + C14707) * C19841) *
                 C50969 +
             (C14683 * C50630 + C14684 * C19841) * C50968) *
                C50757) *
               C50729) *
              C50664)) /
        (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C19841 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C50630) *
                C50968 +
            ((C13817 + C13818) * C19841 + (C13819 + C13820) * C50630) * C50969 +
            C30825 * C24472) *
               C50966 -
           (C32379 * C24472 +
            ((C14703 + C14704) * C50630 + (C14705 + C14706) * C19841) * C50969 +
            ((C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                 C50630 +
             (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                 C19841) *
                C50968) *
               C50967 +
           (((C10728 * C464 + C50933 * C478 + C10729 * C1849 + C50854 * C1857) *
                 C19841 +
             (C10728 * C479 + C50933 * C494 + C10729 * C1856 + C50854 * C1861) *
                 C50630) *
                C50968 +
            ((C15249 + C15250) * C19841 + (C15251 + C15252) * C50630) * C50969 +
            ((C31873 + C31874) * C19841 + (C31875 + C31876) * C50630) *
                C24472) *
               C2092) *
              C50919 +
          ((((C14706 + C14705) * C19841 + (C14704 + C14703) * C50630) * C50968 +
            ((C15907 + C15908) * C19841 + (C15909 + C15910) * C50630) * C50969 +
            ((C32375 + C32376) * C19841 + (C32377 + C32378) * C50630) *
                C24472) *
               C50967 -
           (C31718 * C24472 +
            ((C13821 + C13822) * C50630 + (C13823 + C13824) * C19841) * C50969 +
            ((C13820 + C13819) * C50630 + (C13818 + C13817) * C19841) *
                C50968) *
               C50966 -
           (((C10729 * C21297 + C50854 * C21299 + C10728 * C3657 +
              C50933 * C3660) *
                 C50630 +
             (C10729 * C21296 + C50854 * C21298 + C10728 * C3654 +
              C50933 * C3658) *
                 C19841) *
                C24472 +
            ((C31876 + C31875) * C50630 + (C31874 + C31873) * C19841) * C50969 +
            ((C15252 + C15251) * C50630 + (C15250 + C15249) * C19841) *
                C50968) *
               C2092) *
              C50729) *
         C50658) /
        (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C19841 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C50630) *
                C50968 +
            ((C13817 + C13818) * C19841 + (C13819 + C13820) * C50630) * C50969 +
            C30825 * C24472) *
               C1676 -
           (C32379 * C24472 +
            ((C14703 + C14704) * C50630 + (C14705 + C14706) * C19841) * C50969 +
            ((C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                 C50630 +
             (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                 C19841) *
                C50968) *
               C50757) *
              C278 +
          ((((C14706 + C14705) * C19841 + (C14704 + C14703) * C50630) * C50968 +
            ((C15907 + C15908) * C19841 + (C15909 + C15910) * C50630) * C50969 +
            ((C32375 + C32376) * C19841 + (C32377 + C32378) * C50630) *
                C24472) *
               C50757 -
           (C31718 * C24472 +
            ((C13821 + C13822) * C50630 + (C13823 + C13824) * C19841) * C50969 +
            ((C13820 + C13819) * C50630 + (C13818 + C13817) * C19841) *
                C50968) *
               C1676) *
              C279 +
          ((C30825 * C50968 +
            ((C15043 + C15044) * C19841 + (C15045 + C15046) * C50630) * C50969 +
            ((C31714 + C31715) * C19841 + (C31716 + C31717) * C50630) *
                C24472) *
               C1676 -
           (((C10729 * C20679 + C50854 * C20681 + C10728 * C4171 +
              C50933 * C4174) *
                 C50630 +
             (C10729 * C20678 + C50854 * C20680 + C10728 * C4168 +
              C50933 * C4172) *
                 C19841) *
                C24472 +
            ((C32378 + C32377) * C50630 + (C32376 + C32375) * C19841) * C50969 +
            C32379 * C50968) *
               C50757) *
              C280) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C19841 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C50630) *
                C50968 +
            ((C13817 + C13818) * C19841 + (C13819 + C13820) * C50630) * C50969 +
            C30825 * C24472) *
               C1676 -
           (C32379 * C24472 +
            ((C14703 + C14704) * C50630 + (C14705 + C14706) * C19841) * C50969 +
            ((C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                 C50630 +
             (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                 C19841) *
                C50968) *
               C50757) *
              C50677 * C1027 +
          ((((C11162 + C11161) * C19841 + (C11160 + C11159) * C50630) * C50968 +
            (C14693 * C19841 + C14694 * C50630) * C50969 +
            ((C14707 + C14708) * C19841 + (C14709 + C14710) * C50630) *
                C24472) *
               C50757 -
           (C30824 * C24472 + (C13805 * C50630 + C13806 * C19841) * C50969 +
            ((C10766 + C10765) * C50630 + (C10764 + C10763) * C19841) *
                C50968) *
               C1676) *
              C50677 * C1028 +
          (((C10779 * C19841 + C10780 * C50630) * C50968 +
            (C14229 * C19841 + C14230 * C50630) * C50969 +
            ((C10973 + C10974) * C19841 + (C10975 + C10976) * C50630) *
                C24472) *
               C1676 -
           (((C10729 * C2673 + C50854 * C2677 + C10728 * C1568 +
              C50933 * C1575) *
                 C50630 +
             (C10729 * C2668 + C50854 * C2674 + C10728 * C1563 +
              C50933 * C1569) *
                 C19841) *
                C24472 +
            ((C11708 + C11707) * C50630 + (C11706 + C11705) * C19841) * C50969 +
            (C11477 * C50630 + C11478 * C19841) * C50968) *
               C50757) *
              C50677 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                C19841 +
            (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                C50630) *
               C50968 +
           ((C13817 + C13818) * C19841 + (C13819 + C13820) * C50630) * C50969 +
           C30825 * C24472) *
              C1842 -
          (C32379 * C24472 +
           ((C14703 + C14704) * C50630 + (C14705 + C14706) * C19841) * C50969 +
           ((C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                C50630 +
            (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                C19841) *
               C50968) *
              C1843 +
          (((C10728 * C464 + C50933 * C478 + C10729 * C1849 + C50854 * C1857) *
                C19841 +
            (C10728 * C479 + C50933 * C494 + C10729 * C1856 + C50854 * C1861) *
                C50630) *
               C50968 +
           ((C15249 + C15250) * C19841 + (C15251 + C15252) * C50630) * C50969 +
           ((C31873 + C31874) * C19841 + (C31875 + C31876) * C50630) * C24472) *
              C1844 -
          (((C10729 * C22965 + C50854 * C22967 + C10728 * C4584 +
             C50933 * C4591) *
                C50630 +
            (C10729 * C22964 + C50854 * C22966 + C10728 * C4579 +
             C50933 * C4585) *
                C19841) *
               C24472 +
           ((C10729 * C6552 + C50854 * C6555 + C10728 * C4588 +
             C50933 * C4593) *
                C50630 +
            (C10729 * C6549 + C50854 * C6553 + C10728 * C4581 +
             C50933 * C4589) *
                C19841) *
               C50969 +
           ((C10729 * C5570 + C50854 * C5575 + C10728 * C1856 +
             C50933 * C1861) *
                C50630 +
            (C10729 * C5566 + C50854 * C5569 + C10728 * C1849 +
             C50933 * C1857) *
                C19841) *
               C50968) *
              C1845) *
         C50677 * C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C19841 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C50630) *
                C50968 +
            ((C13817 + C13818) * C19841 + (C13819 + C13820) * C50630) * C50969 +
            C30825 * C24472) *
               C50966 -
           (C32379 * C24472 +
            ((C14703 + C14704) * C50630 + (C14705 + C14706) * C19841) * C50969 +
            ((C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                 C50630 +
             (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                 C19841) *
                C50968) *
               C50967 +
           (((C10728 * C464 + C50933 * C478 + C10729 * C1849 + C50854 * C1857) *
                 C19841 +
             (C10728 * C479 + C50933 * C494 + C10729 * C1856 + C50854 * C1861) *
                 C50630) *
                C50968 +
            ((C15249 + C15250) * C19841 + (C15251 + C15252) * C50630) * C50969 +
            ((C31873 + C31874) * C19841 + (C31875 + C31876) * C50630) *
                C24472) *
               C2092) *
              C50677 * C50911 +
          ((((C11162 + C11161) * C19841 + (C11160 + C11159) * C50630) * C50968 +
            (C14693 * C19841 + C14694 * C50630) * C50969 +
            ((C14707 + C14708) * C19841 + (C14709 + C14710) * C50630) *
                C24472) *
               C50967 -
           (C30824 * C24472 + (C13805 * C50630 + C13806 * C19841) * C50969 +
            ((C10766 + C10765) * C50630 + (C10764 + C10763) * C19841) *
                C50968) *
               C50966 -
           (((C10729 * C4582 + C50854 * C4590 + C10728 * C2672 +
              C50933 * C2676) *
                 C50630 +
             (C10729 * C4578 + C50854 * C4583 + C10728 * C2667 +
              C50933 * C2671) *
                 C19841) *
                C24472 +
            ((C14034 + C14033) * C50630 + (C14032 + C14031) * C19841) * C50969 +
            ((C11166 + C11165) * C50630 + (C11164 + C11163) * C19841) *
                C50968) *
               C2092) *
              C50677 * C50664)) /
        (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C19841 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C50630) *
                C50968 +
            ((C13817 + C13818) * C19841 + (C13819 + C13820) * C50630) * C50969 +
            C30825 * C24472) *
               C1676 -
           (C32379 * C24472 +
            ((C14703 + C14704) * C50630 + (C14705 + C14706) * C19841) * C50969 +
            ((C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                 C50630 +
             (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                 C19841) *
                C50968) *
               C50757) *
              C50677 * C1027 +
          ((((C11162 + C11161) * C19841 + (C11160 + C11159) * C50630) * C50968 +
            (C14693 * C19841 + C14694 * C50630) * C50969 +
            ((C14707 + C14708) * C19841 + (C14709 + C14710) * C50630) *
                C24472) *
               C50757 -
           (C30824 * C24472 + (C13805 * C50630 + C13806 * C19841) * C50969 +
            ((C10766 + C10765) * C50630 + (C10764 + C10763) * C19841) *
                C50968) *
               C1676) *
              C50677 * C1028 +
          (((C10779 * C19841 + C10780 * C50630) * C50968 +
            (C14229 * C19841 + C14230 * C50630) * C50969 +
            ((C10973 + C10974) * C19841 + (C10975 + C10976) * C50630) *
                C24472) *
               C1676 -
           (((C10729 * C2673 + C50854 * C2677 + C10728 * C1568 +
              C50933 * C1575) *
                 C50630 +
             (C10729 * C2668 + C50854 * C2674 + C10728 * C1563 +
              C50933 * C1569) *
                 C19841) *
                C24472 +
            ((C11708 + C11707) * C50630 + (C11706 + C11705) * C19841) * C50969 +
            (C11477 * C50630 + C11478 * C19841) * C50968) *
               C50757) *
              C50677 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C19841 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C50630) *
                C50968 +
            ((C13817 + C13818) * C19841 + (C13819 + C13820) * C50630) * C50969 +
            C30825 * C24472) *
               C1676 -
           (C32379 * C24472 +
            ((C14703 + C14704) * C50630 + (C14705 + C14706) * C19841) * C50969 +
            ((C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                 C50630 +
             (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                 C19841) *
                C50968) *
               C50757) *
              C278 +
          ((((C14706 + C14705) * C19841 + (C14704 + C14703) * C50630) * C50968 +
            ((C15907 + C15908) * C19841 + (C15909 + C15910) * C50630) * C50969 +
            ((C32375 + C32376) * C19841 + (C32377 + C32378) * C50630) *
                C24472) *
               C50757 -
           (C31718 * C24472 +
            ((C13821 + C13822) * C50630 + (C13823 + C13824) * C19841) * C50969 +
            ((C13820 + C13819) * C50630 + (C13818 + C13817) * C19841) *
                C50968) *
               C1676) *
              C279 +
          ((C30825 * C50968 +
            ((C15043 + C15044) * C19841 + (C15045 + C15046) * C50630) * C50969 +
            ((C31714 + C31715) * C19841 + (C31716 + C31717) * C50630) *
                C24472) *
               C1676 -
           (((C10729 * C20679 + C50854 * C20681 + C10728 * C4171 +
              C50933 * C4174) *
                 C50630 +
             (C10729 * C20678 + C50854 * C20680 + C10728 * C4168 +
              C50933 * C4172) *
                 C19841) *
                C24472 +
            ((C32378 + C32377) * C50630 + (C32376 + C32375) * C19841) * C50969 +
            C32379 * C50968) *
               C50757) *
              C280) *
         C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C19841 +
             (C117 * C130 + C50790 * C143) * C50630) *
                C19837 +
            (C19941 + C19942) * C19838 + C19957 * C19839 + C19958 * C19840) *
               C50693 * C50919 -
           ((C19947 + C19948) * C19840 + (C19946 + C19945) * C19839 +
            (C19944 + C19943) * C19838 + (C19942 + C19941) * C19837) *
               C50693 * C50729) *
              C50962 +
          (((C19949 + C19950) * C19837 + (C19951 + C19952) * C19838 +
            (C19953 + C19954) * C19839 + (C19955 + C19956) * C19840) *
               C50693 * C50729 -
           (C19959 * C19840 + C19960 * C19839 + (C19950 + C19949) * C19838 +
            (C172 * C50630 + C171 * C19841) * C19837) *
               C50693 * C50919) *
              C50963 +
          (((C173 * C19841 + C174 * C50630) * C19837 +
            (C20157 + C20158) * C19838 + (C20159 + C20160) * C19839 +
            (C20161 + C20162) * C19840) *
               C50693 * C50919 -
           (((C117 * C2449 + C50790 * C2453) * C50630 +
             (C117 * C2444 + C50790 * C2450) * C19841) *
                C19840 +
            (C20162 + C20161) * C19839 + (C20160 + C20159) * C19838 +
            (C20158 + C20157) * C19837) *
               C50693 * C50729) *
              C638)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C17177 +
             (C117 * C130 + C50790 * C143) * C17172 + C171 * C17178 +
             C172 * C17173 + C173 * C17179 + C174 * C17174) *
                C17175 +
            (C17327 + C17328 + C17329 + C17330 + C17331 + C17332) * C50828) *
               C50693 * C50919 -
           ((C17333 + C17334 + C17335 + C17336 + C17337 + C17338) * C50828 +
            (C17332 + C17331 + C17330 + C17329 + C17328 + C17327) * C17175) *
               C50693 * C50729) *
              C50962 +
          (((C17339 + C17340 + C17341 + C17342 + C17343 + C17344) * C17175 +
            (C17345 + C17346 + C17347 + C17348 + C17349 + C17350) * C50828) *
               C50693 * C50729 -
           ((C17344 + C17343 + C17342 + C17341 + C17340 + C17339) * C50828 +
            (C176 * C17174 + C175 * C17179 + C174 * C17173 + C173 * C17178 +
             C172 * C17172 + C171 * C17177) *
                C17175) *
               C50693 * C50919) *
              C50963 +
          (((C173 * C17177 + C174 * C17172 + C175 * C17178 + C176 * C17173 +
             C178 * C17179 + C177 * C17174) *
                C17175 +
            (C17643 + C17644 + C17645 + C17646 + C17647 + C17648) * C50828) *
               C50693 * C50919 -
           (((C117 * C311 + C50790 * C322) * C17174 +
             (C117 * C292 + C50790 * C312) * C17179 + C359 * C17173 +
             C358 * C17178 + C357 * C17172 + C356 * C17177) *
                C50828 +
            (C17648 + C17647 + C17646 + C17645 + C17644 + C17643) * C17175) *
               C50693 * C50729) *
              C638)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5181 * C122 + C5178 * C129 + C5182 * C463 + C5179 * C477 +
              C5183 * C464 + C5180 * C478) *
                 C19841 +
             (C5181 * C130 + C5178 * C143 + C5182 * C476 + C5179 * C493 +
              C5183 * C479 + C5180 * C494) *
                 C50630) *
                C17175 +
            ((C21895 + C21896 + C21897) * C19841 +
             (C21898 + C21899 + C21900) * C50630) *
                C50828) *
               C50693 * C50919 -
           (((C21901 + C21902 + C21903) * C50630 +
             (C21904 + C21905 + C21906) * C19841) *
                C50828 +
            ((C21900 + C21899 + C21898) * C50630 +
             (C21897 + C21896 + C21895) * C19841) *
                C17175) *
               C50693 * C50729) *
              C50962 +
          ((((C5414 + C5413 + C5412) * C19841 +
             (C5411 + C5410 + C5409) * C50630) *
                C17175 +
            ((C5415 + C5416 + C5417) * C19841 +
             (C5418 + C5419 + C5420) * C50630) *
                C50828) *
               C50693 * C50729 -
           (((C5409 + C5410 + C5411) * C50630 +
             (C5412 + C5413 + C5414) * C19841) *
                C50828 +
            ((C5226 + C5225 + C5224) * C50630 +
             (C5223 + C5222 + C5221) * C19841) *
                C17175) *
               C50693 * C50919) *
              C50963 +
          ((((C5232 + C5231 + C5230) * C19841 +
             (C5229 + C5228 + C5227) * C50630) *
                C17175 +
            ((C5773 + C5774 + C5775) * C19841 +
             (C5776 + C5777 + C5778) * C50630) *
                C50828) *
               C50693 * C50919 -
           (((C5183 * C2673 + C5180 * C2677 + C5182 * C1568 + C5179 * C1575 +
              C5181 * C306 + C5178 * C319) *
                 C50630 +
             (C5183 * C2668 + C5180 * C2674 + C5182 * C1563 + C5179 * C1569 +
              C5181 * C289 + C5178 * C305) *
                 C19841) *
                C50828 +
            ((C5778 + C5777 + C5776) * C50630 +
             (C5775 + C5774 + C5773) * C19841) *
                C17175) *
               C50693 * C50729) *
              C638)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50790 * C129) * C19841 +
              (C117 * C130 + C50790 * C143) * C50630) *
                 C19837 +
             (C19941 + C19942) * C19838 + C19957 * C19839 + C19958 * C19840) *
                C50920 -
            ((C20391 + C20392) * C19840 + (C20393 + C20394) * C19839 +
             (C20395 + C20396) * C19838 +
             ((C117 * C476 + C50790 * C493) * C50630 +
              (C117 * C463 + C50790 * C477) * C19841) *
                 C19837) *
                C50757) *
               C50919 +
           (((C20396 + C20395) * C19837 + (C20394 + C20393) * C19838 +
             (C20392 + C20391) * C19839 +
             ((C117 * C4168 + C50790 * C4172) * C19841 +
              (C117 * C4171 + C50790 * C4174) * C50630) *
                 C19840) *
                C50757 -
            ((C19947 + C19948) * C19840 + (C19946 + C19945) * C19839 +
             (C19944 + C19943) * C19838 + (C19942 + C19941) * C19837) *
                C50920) *
               C50729) *
              C281 +
          ((((C530 * C19841 + C529 * C50630) * C19837 +
             (C20397 + C20398) * C19838 + (C20399 + C20400) * C19839 +
             (C20401 + C20402) * C19840) *
                C50757 -
            (C19959 * C19840 + C19960 * C19839 + (C19950 + C19949) * C19838 +
             (C172 * C50630 + C171 * C19841) * C19837) *
                C50920) *
               C50919 +
           (((C19949 + C19950) * C19837 + (C19951 + C19952) * C19838 +
             (C19953 + C19954) * C19839 + (C19955 + C19956) * C19840) *
                C50920 -
            (((C117 * C4169 + C50790 * C4173) * C50630 +
              (C117 * C4167 + C50790 * C4170) * C19841) *
                 C19840 +
             (C20402 + C20401) * C19839 + (C20400 + C20399) * C19838 +
             (C20398 + C20397) * C19837) *
                C50757) *
               C50729) *
              C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50790 * C129) * C17177 +
              (C117 * C130 + C50790 * C143) * C17172 + C171 * C17178 +
              C172 * C17173 + C173 * C17179 + C174 * C17174) *
                 C17175 +
             (C17327 + C17328 + C17329 + C17330 + C17331 + C17332) * C50828) *
                C50920 -
            ((C17989 + C17990 + C17991 + C17992 + C17993 + C17994) * C50828 +
             (C527 * C17174 + C528 * C17179 + C529 * C17173 + C530 * C17178 +
              (C117 * C476 + C50790 * C493) * C17172 +
              (C117 * C463 + C50790 * C477) * C17177) *
                 C17175) *
                C50757) *
               C50919 +
           (((C17994 + C17993 + C17992 + C17991 + C17990 + C17989) * C17175 +
             (C3234 * C17177 + C3233 * C17172 + C2692 * C17178 +
              C2691 * C17173 + C3001 * C17179 + C3002 * C17174) *
                 C50828) *
                C50757 -
            ((C17333 + C17334 + C17335 + C17336 + C17337 + C17338) * C50828 +
             (C17332 + C17331 + C17330 + C17329 + C17328 + C17327) * C17175) *
                C50920) *
               C50729) *
              C281 +
          ((((C530 * C17177 + C529 * C17172 + C528 * C17178 + C527 * C17173 +
              C526 * C17179 + C525 * C17174) *
                 C17175 +
             (C17995 + C17996 + C17997 + C17998 + C17999 + C18000) * C50828) *
                C50757 -
            ((C17344 + C17343 + C17342 + C17341 + C17340 + C17339) * C50828 +
             (C176 * C17174 + C175 * C17179 + C174 * C17173 + C173 * C17178 +
              C172 * C17172 + C171 * C17177) *
                 C17175) *
                C50920) *
               C50919 +
           (((C17339 + C17340 + C17341 + C17342 + C17343 + C17344) * C17175 +
             (C17345 + C17346 + C17347 + C17348 + C17349 + C17350) * C50828) *
                C50920 -
            (((C117 * C1566 + C50790 * C1574) * C17174 +
              (C117 * C1562 + C50790 * C1567) * C17179 + C3002 * C17173 +
              C3001 * C17178 + C2691 * C17172 + C2692 * C17177) *
                 C50828 +
             (C18000 + C17999 + C17998 + C17997 + C17996 + C17995) * C17175) *
                C50757) *
               C50729) *
              C50664)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C5181 * C122 + C5178 * C129 + C5182 * C463 + C5179 * C477 +
               C5183 * C464 + C5180 * C478) *
                  C19841 +
              (C5181 * C130 + C5178 * C143 + C5182 * C476 + C5179 * C493 +
               C5183 * C479 + C5180 * C494) *
                  C50630) *
                 C17175 +
             ((C21895 + C21896 + C21897) * C19841 +
              (C21898 + C21899 + C21900) * C50630) *
                 C50828) *
                C50920 -
            (((C22551 + C22552 + C22553) * C50630 +
              (C22554 + C22555 + C22556) * C19841) *
                 C50828 +
             ((C5183 * C1856 + C5180 * C1861 + C5182 * C479 + C5179 * C494 +
               C5181 * C476 + C5178 * C493) *
                  C50630 +
              (C5183 * C1849 + C5180 * C1857 + C5182 * C464 + C5179 * C478 +
               C5181 * C463 + C5178 * C477) *
                  C19841) *
                 C17175) *
                C50757) *
               C50919 +
           ((((C22556 + C22555 + C22554) * C19841 +
              (C22553 + C22552 + C22551) * C50630) *
                 C17175 +
             ((C5181 * C1565 + C5178 * C1573 + C5182 * C2666 + C5179 * C2669 +
               C5183 * C4579 + C5180 * C4585) *
                  C19841 +
              (C5181 * C1572 + C5178 * C1577 + C5182 * C2670 + C5179 * C2675 +
               C5183 * C4584 + C5180 * C4591) *
                  C50630) *
                 C50828) *
                C50757 -
            (((C21901 + C21902 + C21903) * C50630 +
              (C21904 + C21905 + C21906) * C19841) *
                 C50828 +
             ((C21900 + C21899 + C21898) * C50630 +
              (C21897 + C21896 + C21895) * C19841) *
                 C17175) *
                C50920) *
               C50729) *
              C281 +
          (((((C5608 + C5607 + C5606) * C19841 +
              (C5605 + C5604 + C5603) * C50630) *
                 C17175 +
             ((C6153 + C6154 + C6155) * C19841 +
              (C6156 + C6157 + C6158) * C50630) *
                 C50828) *
                C50757 -
            (((C5409 + C5410 + C5411) * C50630 +
              (C5412 + C5413 + C5414) * C19841) *
                 C50828 +
             ((C5226 + C5225 + C5224) * C50630 +
              (C5223 + C5222 + C5221) * C19841) *
                 C17175) *
                C50920) *
               C50919 +
           ((((C5414 + C5413 + C5412) * C19841 +
              (C5411 + C5410 + C5409) * C50630) *
                 C17175 +
             ((C5415 + C5416 + C5417) * C19841 +
              (C5418 + C5419 + C5420) * C50630) *
                 C50828) *
                C50920 -
            (((C5183 * C4582 + C5180 * C4590 + C5182 * C2672 + C5179 * C2676 +
               C5181 * C1570 + C5178 * C1576) *
                  C50630 +
              (C5183 * C4578 + C5180 * C4583 + C5182 * C2667 + C5179 * C2671 +
               C5181 * C1564 + C5178 * C1571) *
                  C19841) *
                 C50828 +
             ((C6158 + C6157 + C6156) * C50630 +
              (C6155 + C6154 + C6153) * C19841) *
                 C17175) *
                C50757) *
               C50729) *
              C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C122 + C50790 * C129) * C17177 +
                (C117 * C130 + C50790 * C143) * C17172 + C171 * C17178 +
                C172 * C17173 + C173 * C17179 + C174 * C17174) *
                   C17175 +
               (C2491 * C17177 + C2492 * C17172 + C353 * C17178 +
                C352 * C17173 + C351 * C17179 + C350 * C17174) *
                   C50828) *
                  C50693 * C50677 * C113 -
              ((C348 * C17174 + C349 * C17179 + C350 * C17173 + C351 * C17178 +
                C352 * C17172 + C353 * C17177) *
                   C50828 +
               (C176 * C17174 + C175 * C17179 + C174 * C17173 + C173 * C17178 +
                C172 * C17172 + C171 * C17177) *
                   C17175) *
                  C50693 * C50677 * C114 +
              ((C173 * C17177 + C174 * C17172 + C175 * C17178 + C176 * C17173 +
                C178 * C17179 + C177 * C17174) *
                   C17175 +
               (C351 * C17177 + C350 * C17172 + C349 * C17178 + C348 * C17173 +
                C648 * C17179 + C649 * C17174) *
                   C50828) *
                  C50693 * C50677 * C115 -
              (((C117 * C640 + C50790 * C642) * C17174 +
                (C117 * C639 + C50790 * C641) * C17179 + C649 * C17173 +
                C648 * C17178 + C348 * C17172 + C349 * C17177) *
                   C50828 +
               (C180 * C17174 + C179 * C17179 + C177 * C17173 + C178 * C17178 +
                C176 * C17172 + C175 * C17177) *
                   C17175) *
                  C50693 * C50677 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C122 + C50790 * C129) * C17177 +
                 (C117 * C130 + C50790 * C143) * C17172 + C171 * C17178 +
                 C172 * C17173 + C173 * C17179 + C174 * C17174) *
                    C17175 +
                (C17327 + C17328 + C17329 + C17330 + C17331 + C17332) *
                    C50828) *
                   C50693 * C278 -
               ((C17333 + C17334 + C17335 + C17336 + C17337 + C17338) * C50828 +
                (C17332 + C17331 + C17330 + C17329 + C17328 + C17327) *
                    C17175) *
                   C50693 * C279 +
               ((C17338 + C17337 + C17336 + C17335 + C17334 + C17333) * C17175 +
                (C2498 * C17177 + C2497 * C17172 + C2496 * C17178 +
                 C2495 * C17173 + C2501 * C17179 + C2502 * C17174) *
                    C50828) *
                   C50693 * C280) *
                  C281 +
              (((C17339 + C17340 + C17341 + C17342 + C17343 + C17344) * C17175 +
                (C17345 + C17346 + C17347 + C17348 + C17349 + C17350) *
                    C50828) *
                   C50693 * C279 -
               ((C17344 + C17343 + C17342 + C17341 + C17340 + C17339) * C50828 +
                (C176 * C17174 + C175 * C17179 + C174 * C17173 + C173 * C17178 +
                 C172 * C17172 + C171 * C17177) *
                    C17175) *
                   C50693 * C278 -
               (((C117 * C1105 + C50790 * C1113) * C17174 +
                 (C117 * C1101 + C50790 * C1106) * C17179 + C2502 * C17173 +
                 C2501 * C17178 + C2495 * C17172 + C2496 * C17177) *
                    C50828 +
                (C17350 + C17349 + C17348 + C17347 + C17346 + C17345) *
                    C17175) *
                   C50693 * C280) *
                  C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C17177 +
             (C117 * C130 + C50790 * C143) * C17172 + C171 * C17178 +
             C172 * C17173 + C173 * C17179 + C174 * C17174) *
                C17175 +
            (C17327 + C17328 + C17329 + C17330 + C17331 + C17332) * C50828) *
               C457 -
           ((C925 * C17174 + C924 * C17179 + C923 * C17173 + C922 * C17178 +
             C3235 * C17172 + C3236 * C17177) *
                C50828 +
            (C527 * C17174 + C528 * C17179 + C529 * C17173 + C530 * C17178 +
             (C117 * C476 + C50790 * C493) * C17172 +
             (C117 * C463 + C50790 * C477) * C17177) *
                C17175) *
               C458 +
           (((C117 * C464 + C50790 * C478) * C17177 +
             (C117 * C479 + C50790 * C494) * C17172 + C531 * C17178 +
             C532 * C17173 + C533 * C17179 + C534 * C17174) *
                C17175 +
            (C3674 * C17177 + C3675 * C17172 + C2693 * C17178 + C2694 * C17173 +
             C8353 * C17179 + C8354 * C17174) *
                C50828) *
               C459) *
              C50677 * C281 +
          (((C530 * C17177 + C529 * C17172 + C528 * C17178 + C527 * C17173 +
             C526 * C17179 + C525 * C17174) *
                C17175 +
            (C922 * C17177 + C923 * C17172 + C924 * C17178 + C925 * C17173 +
             C926 * C17179 + C927 * C17174) *
                C50828) *
               C458 -
           ((C17344 + C17343 + C17342 + C17341 + C17340 + C17339) * C50828 +
            (C176 * C17174 + C175 * C17179 + C174 * C17173 + C173 * C17178 +
             C172 * C17172 + C171 * C17177) *
                C17175) *
               C457 -
           (((C117 * C1219 + C50790 * C1227) * C17174 +
             (C117 * C1215 + C50790 * C1220) * C17179 + C8354 * C17173 +
             C8353 * C17178 + C2694 * C17172 + C2693 * C17177) *
                C50828 +
            (C536 * C17174 + C535 * C17179 + C534 * C17173 + C533 * C17178 +
             C532 * C17172 + C531 * C17177) *
                C17175) *
               C459) *
              C50677 * C50664)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C19841 +
            (C117 * C130 + C50790 * C143) * C50630) *
               C19837 +
           (C2491 * C19841 + C2492 * C50630) * C19838 +
           (C2493 * C19841 + C2494 * C50630) * C19839 +
           (C2498 * C19841 + C2497 * C50630) * C19840) *
              C50693 * C50677 * C113 -
          ((C2495 * C50630 + C2496 * C19841) * C19840 +
           (C355 * C50630 + C354 * C19841) * C19839 +
           (C352 * C50630 + C353 * C19841) * C19838 +
           (C172 * C50630 + C171 * C19841) * C19837) *
              C50693 * C50677 * C114 +
          ((C173 * C19841 + C174 * C50630) * C19837 +
           (C351 * C19841 + C350 * C50630) * C19838 +
           (C356 * C19841 + C357 * C50630) * C19839 +
           (C2501 * C19841 + C2502 * C50630) * C19840) *
              C50693 * C50677 * C115 -
          (((C117 * C1105 + C50790 * C1113) * C50630 +
            (C117 * C1101 + C50790 * C1106) * C19841) *
               C19840 +
           (C359 * C50630 + C358 * C19841) * C19839 +
           (C348 * C50630 + C349 * C19841) * C19838 +
           (C176 * C50630 + C175 * C19841) * C19837) *
              C50693 * C50677 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C19841 +
             (C117 * C130 + C50790 * C143) * C50630) *
                C19837 +
            (C19941 + C19942) * C19838 + C19957 * C19839 + C19958 * C19840) *
               C50693 * C278 -
           ((C19947 + C19948) * C19840 + (C19946 + C19945) * C19839 +
            (C19944 + C19943) * C19838 + (C19942 + C19941) * C19837) *
               C50693 * C279 +
           (C19957 * C19837 + C19958 * C19838 + (C19948 + C19947) * C19839 +
            ((C117 * C3487 + C50790 * C3491) * C19841 +
             (C117 * C3490 + C50790 * C3493) * C50630) *
                C19840) *
               C50693 * C280) *
              C281 +
          (((C19949 + C19950) * C19837 + (C19951 + C19952) * C19838 +
            (C19953 + C19954) * C19839 + (C19955 + C19956) * C19840) *
               C50693 * C279 -
           (C19959 * C19840 + C19960 * C19839 + (C19950 + C19949) * C19838 +
            (C172 * C50630 + C171 * C19841) * C19837) *
               C50693 * C278 -
           (((C117 * C3488 + C50790 * C3492) * C50630 +
             (C117 * C3486 + C50790 * C3489) * C19841) *
                C19840 +
            (C19956 + C19955) * C19839 + C19959 * C19838 + C19960 * C19837) *
               C50693 * C280) *
              C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C19841 +
             (C117 * C130 + C50790 * C143) * C50630) *
                C19837 +
            (C19941 + C19942) * C19838 + C19957 * C19839 + C19958 * C19840) *
               C457 -
           ((C4185 * C50630 + C4184 * C19841) * C19840 +
            (C3233 * C50630 + C3234 * C19841) * C19839 +
            (C3235 * C50630 + C3236 * C19841) * C19838 +
            ((C117 * C476 + C50790 * C493) * C50630 +
             (C117 * C463 + C50790 * C477) * C19841) *
                C19837) *
               C458 +
           (((C117 * C464 + C50790 * C478) * C19841 +
             (C117 * C479 + C50790 * C494) * C50630) *
                C19837 +
            (C3674 * C19841 + C3675 * C50630) * C19838 +
            (C3676 * C19841 + C3677 * C50630) * C19839 +
            ((C117 * C3654 + C50790 * C3658) * C19841 +
             (C117 * C3657 + C50790 * C3660) * C50630) *
                C19840) *
               C459) *
              C50677 * C281 +
          (((C530 * C19841 + C529 * C50630) * C19837 +
            (C922 * C19841 + C923 * C50630) * C19838 +
            (C2692 * C19841 + C2691 * C50630) * C19839 +
            (C3237 * C19841 + C3238 * C50630) * C19840) *
               C458 -
           (C19959 * C19840 + C19960 * C19839 + (C19950 + C19949) * C19838 +
            (C172 * C50630 + C171 * C19841) * C19837) *
               C457 -
           (((C117 * C3655 + C50790 * C3659) * C50630 +
             (C117 * C3653 + C50790 * C3656) * C19841) *
                C19840 +
            (C2696 * C50630 + C2695 * C19841) * C19839 +
            (C2694 * C50630 + C2693 * C19841) * C19838 +
            (C532 * C50630 + C531 * C19841) * C19837) *
               C459) *
              C50677 * C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * ((((C5181 * C122 + C5178 * C129 + C5182 * C463 +
                                 C5179 * C477 + C5183 * C464 + C5180 * C478) *
                                    C19841 +
                                (C5181 * C130 + C5178 * C143 + C5182 * C476 +
                                 C5179 * C493 + C5183 * C479 + C5180 * C494) *
                                    C50630) *
                                   C17175 +
                               ((C5181 * C286 + C5178 * C300 + C5182 * C889 +
                                 C5179 * C894 + C5183 * C1218 + C5180 * C1226) *
                                    C19841 +
                                (C5181 * C299 + C5178 * C316 + C5182 * C895 +
                                 C5179 * C904 + C5183 * C1225 + C5180 * C1230) *
                                    C50630) *
                                   C50828) *
                                  C50693 * C50677 * C113 -
                              (((C5409 + C5410 + C5411) * C50630 +
                                (C5412 + C5413 + C5414) * C19841) *
                                   C50828 +
                               ((C5226 + C5225 + C5224) * C50630 +
                                (C5223 + C5222 + C5221) * C19841) *
                                   C17175) *
                                  C50693 * C50677 * C114 +
                              (((C5232 + C5231 + C5230) * C19841 +
                                (C5229 + C5228 + C5227) * C50630) *
                                   C17175 +
                               ((C5773 + C5774 + C5775) * C19841 +
                                (C5776 + C5777 + C5778) * C50630) *
                                   C50828) *
                                  C50693 * C50677 * C115 -
                              (((C5183 * C1219 + C5180 * C1227 + C5182 * C901 +
                                 C5179 * C907 + C5181 * C293 + C5178 * C313) *
                                    C50630 +
                                (C5183 * C1215 + C5180 * C1220 + C5182 * C892 +
                                 C5179 * C900 + C5181 * C283 + C5178 * C294) *
                                    C19841) *
                                   C50828 +
                               ((C5238 + C5237 + C5236) * C50630 +
                                (C5235 + C5234 + C5233) * C19841) *
                                   C17175) *
                                  C50693 * C50677 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C5181 * C122 + C5178 * C129 + C5182 * C463 + C5179 * C477 +
              C5183 * C464 + C5180 * C478) *
                 C19841 +
             (C5181 * C130 + C5178 * C143 + C5182 * C476 + C5179 * C493 +
              C5183 * C479 + C5180 * C494) *
                 C50630) *
                C17175 +
            ((C21895 + C21896 + C21897) * C19841 +
             (C21898 + C21899 + C21900) * C50630) *
                C50828) *
               C50693 * C278 -
           (((C21901 + C21902 + C21903) * C50630 +
             (C21904 + C21905 + C21906) * C19841) *
                C50828 +
            ((C21900 + C21899 + C21898) * C50630 +
             (C21897 + C21896 + C21895) * C19841) *
                C17175) *
               C50693 * C279 +
           (((C21906 + C21905 + C21904) * C19841 +
             (C21903 + C21902 + C21901) * C50630) *
                C17175 +
            ((C5181 * C1104 + C5178 * C1112 + C5182 * C3196 + C5179 * C3199 +
              C5183 * C3654 + C5180 * C3658) *
                 C19841 +
             (C5181 * C1111 + C5178 * C1116 + C5182 * C3200 + C5179 * C3205 +
              C5183 * C3657 + C5180 * C3660) *
                 C50630) *
                C50828) *
               C50693 * C280) *
              C281 +
          ((((C5414 + C5413 + C5412) * C19841 +
             (C5411 + C5410 + C5409) * C50630) *
                C17175 +
            ((C5415 + C5416 + C5417) * C19841 +
             (C5418 + C5419 + C5420) * C50630) *
                C50828) *
               C50693 * C279 -
           (((C5409 + C5410 + C5411) * C50630 +
             (C5412 + C5413 + C5414) * C19841) *
                C50828 +
            ((C5226 + C5225 + C5224) * C50630 +
             (C5223 + C5222 + C5221) * C19841) *
                C17175) *
               C50693 * C278 -
           (((C5183 * C3655 + C5180 * C3659 + C5182 * C3202 + C5179 * C3206 +
              C5181 * C1109 + C5178 * C1115) *
                 C50630 +
             (C5183 * C3653 + C5180 * C3656 + C5182 * C3197 + C5179 * C3201 +
              C5181 * C1103 + C5178 * C1110) *
                 C19841) *
                C50828 +
            ((C5420 + C5419 + C5418) * C50630 +
             (C5417 + C5416 + C5415) * C19841) *
                C17175) *
               C50693 * C280) *
              C50664)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C5181 * C122 + C5178 * C129 + C5182 * C463 + C5179 * C477 +
              C5183 * C464 + C5180 * C478) *
                 C19841 +
             (C5181 * C130 + C5178 * C143 + C5182 * C476 + C5179 * C493 +
              C5183 * C479 + C5180 * C494) *
                 C50630) *
                C17175 +
            ((C21895 + C21896 + C21897) * C19841 +
             (C21898 + C21899 + C21900) * C50630) *
                C50828) *
               C457 -
           (((C5183 * C4588 + C5180 * C4593 + C5182 * C1225 + C5179 * C1230 +
              C5181 * C895 + C5178 * C904) *
                 C50630 +
             (C5183 * C4581 + C5180 * C4589 + C5182 * C1218 + C5179 * C1226 +
              C5181 * C889 + C5178 * C894) *
                 C19841) *
                C50828 +
            ((C5183 * C1856 + C5180 * C1861 + C5182 * C479 + C5179 * C494 +
              C5181 * C476 + C5178 * C493) *
                 C50630 +
             (C5183 * C1849 + C5180 * C1857 + C5182 * C464 + C5179 * C478 +
              C5181 * C463 + C5178 * C477) *
                 C19841) *
                C17175) *
               C458 +
           (((C5181 * C464 + C5178 * C478 + C5182 * C1849 + C5179 * C1857 +
              C5183 * C5566 + C5180 * C5569) *
                 C19841 +
             (C5181 * C479 + C5178 * C494 + C5182 * C1856 + C5179 * C1861 +
              C5183 * C5570 + C5180 * C5575) *
                 C50630) *
                C17175 +
            ((C5181 * C1218 + C5178 * C1226 + C5182 * C4581 + C5179 * C4589 +
              C5183 * C6549 + C5180 * C6553) *
                 C19841 +
             (C5181 * C1225 + C5178 * C1230 + C5182 * C4588 + C5179 * C4593 +
              C5183 * C6552 + C5180 * C6555) *
                 C50630) *
                C50828) *
               C459) *
              C50677 * C281 +
          ((((C5608 + C5607 + C5606) * C19841 +
             (C5605 + C5604 + C5603) * C50630) *
                C17175 +
            ((C6153 + C6154 + C6155) * C19841 +
             (C6156 + C6157 + C6158) * C50630) *
                C50828) *
               C458 -
           (((C5409 + C5410 + C5411) * C50630 +
             (C5412 + C5413 + C5414) * C19841) *
                C50828 +
            ((C5226 + C5225 + C5224) * C50630 +
             (C5223 + C5222 + C5221) * C19841) *
                C17175) *
               C457 -
           (((C5183 * C6550 + C5180 * C6554 + C5182 * C4586 + C5179 * C4592 +
              C5181 * C1223 + C5178 * C1229) *
                 C50630 +
             (C5183 * C6548 + C5180 * C6551 + C5182 * C4580 + C5179 * C4587 +
              C5181 * C1217 + C5178 * C1224) *
                 C19841) *
                C50828 +
            ((C5614 + C5613 + C5612) * C50630 +
             (C5611 + C5610 + C5609) * C19841) *
                C17175) *
               C459) *
              C50677 * C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C19841 +
             (C117 * C130 + C50790 * C143) * C50630) *
                C19837 +
            (C19941 + C19942) * C19838 + C19957 * C19839 + C19958 * C19840) *
               C50920 -
           ((C4185 * C50630 + C4184 * C19841) * C19840 +
            (C3233 * C50630 + C3234 * C19841) * C19839 +
            (C3235 * C50630 + C3236 * C19841) * C19838 +
            ((C117 * C476 + C50790 * C493) * C50630 +
             (C117 * C463 + C50790 * C477) * C19841) *
                C19837) *
               C50757) *
              C50677 * C50962 +
          (((C530 * C19841 + C529 * C50630) * C19837 +
            (C922 * C19841 + C923 * C50630) * C19838 +
            (C2692 * C19841 + C2691 * C50630) * C19839 +
            (C3237 * C19841 + C3238 * C50630) * C19840) *
               C50757 -
           (C19959 * C19840 + C19960 * C19839 + (C19950 + C19949) * C19838 +
            (C172 * C50630 + C171 * C19841) * C19837) *
               C50920) *
              C50677 * C50963 +
          (((C173 * C19841 + C174 * C50630) * C19837 +
            (C20157 + C20158) * C19838 + (C20159 + C20160) * C19839 +
            (C20161 + C20162) * C19840) *
               C50920 -
           (((C117 * C3203 + C50790 * C3207) * C50630 +
             (C117 * C3198 + C50790 * C3204) * C19841) *
                C19840 +
            (C3002 * C50630 + C3001 * C19841) * C19839 +
            (C925 * C50630 + C924 * C19841) * C19838 +
            (C527 * C50630 + C528 * C19841) * C19837) *
               C50757) *
              C50677 * C638)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C17177 +
             (C117 * C130 + C50790 * C143) * C17172 + C171 * C17178 +
             C172 * C17173 + C173 * C17179 + C174 * C17174) *
                C17175 +
            (C17327 + C17328 + C17329 + C17330 + C17331 + C17332) * C50828) *
               C50920 -
           ((C925 * C17174 + C924 * C17179 + C923 * C17173 + C922 * C17178 +
             C3235 * C17172 + C3236 * C17177) *
                C50828 +
            (C527 * C17174 + C528 * C17179 + C529 * C17173 + C530 * C17178 +
             (C117 * C476 + C50790 * C493) * C17172 +
             (C117 * C463 + C50790 * C477) * C17177) *
                C17175) *
               C50757) *
              C50677 * C50962 +
          (((C530 * C17177 + C529 * C17172 + C528 * C17178 + C527 * C17173 +
             C526 * C17179 + C525 * C17174) *
                C17175 +
            (C922 * C17177 + C923 * C17172 + C924 * C17178 + C925 * C17173 +
             C926 * C17179 + C927 * C17174) *
                C50828) *
               C50757 -
           ((C17344 + C17343 + C17342 + C17341 + C17340 + C17339) * C50828 +
            (C176 * C17174 + C175 * C17179 + C174 * C17173 + C173 * C17178 +
             C172 * C17172 + C171 * C17177) *
                C17175) *
               C50920) *
              C50677 * C50963 +
          (((C173 * C17177 + C174 * C17172 + C175 * C17178 + C176 * C17173 +
             C178 * C17179 + C177 * C17174) *
                C17175 +
            (C17643 + C17644 + C17645 + C17646 + C17647 + C17648) * C50828) *
               C50920 -
           (((C117 * C902 + C50790 * C908) * C17174 +
             (C117 * C893 + C50790 * C903) * C17179 + C927 * C17173 +
             C926 * C17178 + C925 * C17172 + C924 * C17177) *
                C50828 +
            (C759 * C17174 + C758 * C17179 + C525 * C17173 + C526 * C17178 +
             C527 * C17172 + C528 * C17177) *
                C17175) *
               C50757) *
              C50677 * C638)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5181 * C122 + C5178 * C129 + C5182 * C463 + C5179 * C477 +
              C5183 * C464 + C5180 * C478) *
                 C19841 +
             (C5181 * C130 + C5178 * C143 + C5182 * C476 + C5179 * C493 +
              C5183 * C479 + C5180 * C494) *
                 C50630) *
                C17175 +
            ((C21895 + C21896 + C21897) * C19841 +
             (C21898 + C21899 + C21900) * C50630) *
                C50828) *
               C50920 -
           (((C5183 * C4588 + C5180 * C4593 + C5182 * C1225 + C5179 * C1230 +
              C5181 * C895 + C5178 * C904) *
                 C50630 +
             (C5183 * C4581 + C5180 * C4589 + C5182 * C1218 + C5179 * C1226 +
              C5181 * C889 + C5178 * C894) *
                 C19841) *
                C50828 +
            ((C5183 * C1856 + C5180 * C1861 + C5182 * C479 + C5179 * C494 +
              C5181 * C476 + C5178 * C493) *
                 C50630 +
             (C5183 * C1849 + C5180 * C1857 + C5182 * C464 + C5179 * C478 +
              C5181 * C463 + C5178 * C477) *
                 C19841) *
                C17175) *
               C50757) *
              C50677 * C50962 +
          ((((C5608 + C5607 + C5606) * C19841 +
             (C5605 + C5604 + C5603) * C50630) *
                C17175 +
            ((C6153 + C6154 + C6155) * C19841 +
             (C6156 + C6157 + C6158) * C50630) *
                C50828) *
               C50757 -
           (((C5409 + C5410 + C5411) * C50630 +
             (C5412 + C5413 + C5414) * C19841) *
                C50828 +
            ((C5226 + C5225 + C5224) * C50630 +
             (C5223 + C5222 + C5221) * C19841) *
                C17175) *
               C50920) *
              C50677 * C50963 +
          ((((C5232 + C5231 + C5230) * C19841 +
             (C5229 + C5228 + C5227) * C50630) *
                C17175 +
            ((C5773 + C5774 + C5775) * C19841 +
             (C5776 + C5777 + C5778) * C50630) *
                C50828) *
               C50920 -
           (((C5183 * C6137 + C5180 * C6139 + C5182 * C1221 + C5179 * C1228 +
              C5181 * C899 + C5178 * C906) *
                 C50630 +
             (C5183 * C6136 + C5180 * C6138 + C5182 * C1216 + C5179 * C1222 +
              C5181 * C891 + C5178 * C898) *
                 C19841) *
                C50828 +
            ((C5942 + C5941 + C5940) * C50630 +
             (C5939 + C5938 + C5937) * C19841) *
                C17175) *
               C50757) *
              C50677 * C638)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C17177 +
             (C117 * C130 + C50790 * C143) * C17172 + C171 * C17178 +
             C172 * C17173 + C173 * C17179 + C174 * C17174) *
                C17175 +
            (C17327 + C17328 + C17329 + C17330 + C17331 + C17332) * C50828) *
               C50693 * C278 -
           ((C17333 + C17334 + C17335 + C17336 + C17337 + C17338) * C50828 +
            (C17332 + C17331 + C17330 + C17329 + C17328 + C17327) * C17175) *
               C50693 * C279 +
           ((C17338 + C17337 + C17336 + C17335 + C17334 + C17333) * C17175 +
            (C2498 * C17177 + C2497 * C17172 + C2496 * C17178 + C2495 * C17173 +
             C2501 * C17179 + C2502 * C17174) *
                C50828) *
               C50693 * C280) *
              C281 +
          (((C17339 + C17340 + C17341 + C17342 + C17343 + C17344) * C17175 +
            (C17345 + C17346 + C17347 + C17348 + C17349 + C17350) * C50828) *
               C50693 * C279 -
           ((C17344 + C17343 + C17342 + C17341 + C17340 + C17339) * C50828 +
            (C176 * C17174 + C175 * C17179 + C174 * C17173 + C173 * C17178 +
             C172 * C17172 + C171 * C17177) *
                C17175) *
               C50693 * C278 -
           (((C117 * C1105 + C50790 * C1113) * C17174 +
             (C117 * C1101 + C50790 * C1106) * C17179 + C2502 * C17173 +
             C2501 * C17178 + C2495 * C17172 + C2496 * C17177) *
                C50828 +
            (C17350 + C17349 + C17348 + C17347 + C17346 + C17345) * C17175) *
               C50693 * C280) *
              C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C17177 +
            (C117 * C130 + C50790 * C143) * C17172 + C171 * C17178 +
            C172 * C17173 + C173 * C17179 + C174 * C17174) *
               C17175 +
           (C2491 * C17177 + C2492 * C17172 + C353 * C17178 + C352 * C17173 +
            C351 * C17179 + C350 * C17174) *
               C50828) *
              C50693 * C50677 * C113 -
          ((C348 * C17174 + C349 * C17179 + C350 * C17173 + C351 * C17178 +
            C352 * C17172 + C353 * C17177) *
               C50828 +
           (C176 * C17174 + C175 * C17179 + C174 * C17173 + C173 * C17178 +
            C172 * C17172 + C171 * C17177) *
               C17175) *
              C50693 * C50677 * C114 +
          ((C173 * C17177 + C174 * C17172 + C175 * C17178 + C176 * C17173 +
            C178 * C17179 + C177 * C17174) *
               C17175 +
           (C351 * C17177 + C350 * C17172 + C349 * C17178 + C348 * C17173 +
            C648 * C17179 + C649 * C17174) *
               C50828) *
              C50693 * C50677 * C115 -
          (((C117 * C640 + C50790 * C642) * C17174 +
            (C117 * C639 + C50790 * C641) * C17179 + C649 * C17173 +
            C648 * C17178 + C348 * C17172 + C349 * C17177) *
               C50828 +
           (C180 * C17174 + C179 * C17179 + C177 * C17173 + C178 * C17178 +
            C176 * C17172 + C175 * C17177) *
               C17175) *
              C50693 * C50677 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C19841 +
            (C117 * C130 + C50790 * C143) * C50630) *
               C19837 +
           (C2491 * C19841 + C2492 * C50630) * C19838 +
           (C2493 * C19841 + C2494 * C50630) * C19839 +
           (C2498 * C19841 + C2497 * C50630) * C19840) *
              C50693 * C50677 * C113 -
          ((C2495 * C50630 + C2496 * C19841) * C19840 +
           (C355 * C50630 + C354 * C19841) * C19839 +
           (C352 * C50630 + C353 * C19841) * C19838 +
           (C172 * C50630 + C171 * C19841) * C19837) *
              C50693 * C50677 * C114 +
          ((C173 * C19841 + C174 * C50630) * C19837 +
           (C351 * C19841 + C350 * C50630) * C19838 +
           (C356 * C19841 + C357 * C50630) * C19839 +
           (C2501 * C19841 + C2502 * C50630) * C19840) *
              C50693 * C50677 * C115 -
          (((C117 * C1105 + C50790 * C1113) * C50630 +
            (C117 * C1101 + C50790 * C1106) * C19841) *
               C19840 +
           (C359 * C50630 + C358 * C19841) * C19839 +
           (C348 * C50630 + C349 * C19841) * C19838 +
           (C176 * C50630 + C175 * C19841) * C19837) *
              C50693 * C50677 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C19841 +
             (C117 * C130 + C50790 * C143) * C50630) *
                C19837 +
            (C19941 + C19942) * C19838 + C19957 * C19839 + C19958 * C19840) *
               C50693 * C278 -
           ((C19947 + C19948) * C19840 + (C19946 + C19945) * C19839 +
            (C19944 + C19943) * C19838 + (C19942 + C19941) * C19837) *
               C50693 * C279 +
           (C19957 * C19837 + C19958 * C19838 + (C19948 + C19947) * C19839 +
            ((C117 * C3487 + C50790 * C3491) * C19841 +
             (C117 * C3490 + C50790 * C3493) * C50630) *
                C19840) *
               C50693 * C280) *
              C281 +
          (((C19949 + C19950) * C19837 + (C19951 + C19952) * C19838 +
            (C19953 + C19954) * C19839 + (C19955 + C19956) * C19840) *
               C50693 * C279 -
           (C19959 * C19840 + C19960 * C19839 + (C19950 + C19949) * C19838 +
            (C172 * C50630 + C171 * C19841) * C19837) *
               C50693 * C278 -
           (((C117 * C3488 + C50790 * C3492) * C50630 +
             (C117 * C3486 + C50790 * C3489) * C19841) *
                C19840 +
            (C19956 + C19955) * C19839 + C19959 * C19838 + C19960 * C19837) *
               C50693 * C280) *
              C50664)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5181 * C122 + C5178 * C129 + C5182 * C463 + C5179 * C477 +
             C5183 * C464 + C5180 * C478) *
                C19841 +
            (C5181 * C130 + C5178 * C143 + C5182 * C476 + C5179 * C493 +
             C5183 * C479 + C5180 * C494) *
                C50630) *
               C17175 +
           ((C5181 * C286 + C5178 * C300 + C5182 * C889 + C5179 * C894 +
             C5183 * C1218 + C5180 * C1226) *
                C19841 +
            (C5181 * C299 + C5178 * C316 + C5182 * C895 + C5179 * C904 +
             C5183 * C1225 + C5180 * C1230) *
                C50630) *
               C50828) *
              C50693 * C50677 * C113 -
          (((C5409 + C5410 + C5411) * C50630 +
            (C5412 + C5413 + C5414) * C19841) *
               C50828 +
           ((C5226 + C5225 + C5224) * C50630 +
            (C5223 + C5222 + C5221) * C19841) *
               C17175) *
              C50693 * C50677 * C114 +
          (((C5232 + C5231 + C5230) * C19841 +
            (C5229 + C5228 + C5227) * C50630) *
               C17175 +
           ((C5773 + C5774 + C5775) * C19841 +
            (C5776 + C5777 + C5778) * C50630) *
               C50828) *
              C50693 * C50677 * C115 -
          (((C5183 * C1219 + C5180 * C1227 + C5182 * C901 + C5179 * C907 +
             C5181 * C293 + C5178 * C313) *
                C50630 +
            (C5183 * C1215 + C5180 * C1220 + C5182 * C892 + C5179 * C900 +
             C5181 * C283 + C5178 * C294) *
                C19841) *
               C50828 +
           ((C5238 + C5237 + C5236) * C50630 +
            (C5235 + C5234 + C5233) * C19841) *
               C17175) *
              C50693 * C50677 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5181 * C122 + C5178 * C129 + C5182 * C463 + C5179 * C477 +
              C5183 * C464 + C5180 * C478) *
                 C19841 +
             (C5181 * C130 + C5178 * C143 + C5182 * C476 + C5179 * C493 +
              C5183 * C479 + C5180 * C494) *
                 C50630) *
                C17175 +
            ((C21895 + C21896 + C21897) * C19841 +
             (C21898 + C21899 + C21900) * C50630) *
                C50828) *
               C50693 * C278 -
           (((C21901 + C21902 + C21903) * C50630 +
             (C21904 + C21905 + C21906) * C19841) *
                C50828 +
            ((C21900 + C21899 + C21898) * C50630 +
             (C21897 + C21896 + C21895) * C19841) *
                C17175) *
               C50693 * C279 +
           (((C21906 + C21905 + C21904) * C19841 +
             (C21903 + C21902 + C21901) * C50630) *
                C17175 +
            ((C5181 * C1104 + C5178 * C1112 + C5182 * C3196 + C5179 * C3199 +
              C5183 * C3654 + C5180 * C3658) *
                 C19841 +
             (C5181 * C1111 + C5178 * C1116 + C5182 * C3200 + C5179 * C3205 +
              C5183 * C3657 + C5180 * C3660) *
                 C50630) *
                C50828) *
               C50693 * C280) *
              C281 +
          ((((C5414 + C5413 + C5412) * C19841 +
             (C5411 + C5410 + C5409) * C50630) *
                C17175 +
            ((C5415 + C5416 + C5417) * C19841 +
             (C5418 + C5419 + C5420) * C50630) *
                C50828) *
               C50693 * C279 -
           (((C5409 + C5410 + C5411) * C50630 +
             (C5412 + C5413 + C5414) * C19841) *
                C50828 +
            ((C5226 + C5225 + C5224) * C50630 +
             (C5223 + C5222 + C5221) * C19841) *
                C17175) *
               C50693 * C278 -
           (((C5183 * C3655 + C5180 * C3659 + C5182 * C3202 + C5179 * C3206 +
              C5181 * C1109 + C5178 * C1115) *
                 C50630 +
             (C5183 * C3653 + C5180 * C3656 + C5182 * C3197 + C5179 * C3201 +
              C5181 * C1103 + C5178 * C1110) *
                 C19841) *
                C50828 +
            ((C5420 + C5419 + C5418) * C50630 +
             (C5417 + C5416 + C5415) * C19841) *
                C17175) *
               C50693 * C280) *
              C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C19841 +
             (C117 * C130 + C50790 * C143) * C50630) *
                C19837 +
            (C19941 + C19942) * C19838 + C19957 * C19839 + C19958 * C19840) *
               C50693 * C50964 -
           (C20571 * C19840 + C20572 * C19839 + (C19944 + C19943) * C19838 +
            (C19942 + C19941) * C19837) *
               C50693 * C50965 +
           (C19957 * C19837 + C19958 * C19838 + (C19948 + C19947) * C19839 +
            (C20579 + C20580) * C19840) *
               C50693 * C1331) *
              C50911 +
          (((C19949 + C19950) * C19837 + (C19951 + C19952) * C19838 +
            (C19953 + C19954) * C19839 + (C19955 + C19956) * C19840) *
               C50693 * C50965 -
           (C19959 * C19840 + C19960 * C19839 + (C19950 + C19949) * C19838 +
            (C172 * C50630 + C171 * C19841) * C19837) *
               C50693 * C50964 -
           (((C117 * C3488 + C50790 * C3492) * C50630 +
             (C117 * C3486 + C50790 * C3489) * C19841) *
                C19840 +
            (C19956 + C19955) * C19839 + C19959 * C19838 + C19960 * C19837) *
               C50693 * C1331) *
              C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C17177 +
             (C117 * C130 + C50790 * C143) * C17172 + C171 * C17178 +
             C172 * C17173 + C173 * C17179 + C174 * C17174) *
                C17175 +
            (C17327 + C17328 + C17329 + C17330 + C17331 + C17332) * C50828) *
               C50693 * C50964 -
           ((C17333 + C17334 + C17335 + C17336 + C17337 + C17338) * C50828 +
            (C17332 + C17331 + C17330 + C17329 + C17328 + C17327) * C17175) *
               C50693 * C50965 +
           ((C17338 + C17337 + C17336 + C17335 + C17334 + C17333) * C17175 +
            (C18245 + C18246 + C18247 + C18248 + C18249 + C18250) * C50828) *
               C50693 * C1331) *
              C50911 +
          (((C17339 + C17340 + C17341 + C17342 + C17343 + C17344) * C17175 +
            (C17345 + C17346 + C17347 + C17348 + C17349 + C17350) * C50828) *
               C50693 * C50965 -
           ((C17344 + C17343 + C17342 + C17341 + C17340 + C17339) * C50828 +
            (C176 * C17174 + C175 * C17179 + C174 * C17173 + C173 * C17178 +
             C172 * C17172 + C171 * C17177) *
                C17175) *
               C50693 * C50964 -
           (((C117 * C1105 + C50790 * C1113) * C17174 +
             (C117 * C1101 + C50790 * C1106) * C17179 + C2502 * C17173 +
             C2501 * C17178 + C2495 * C17172 + C2496 * C17177) *
                C50828 +
            (C17350 + C17349 + C17348 + C17347 + C17346 + C17345) * C17175) *
               C50693 * C1331) *
              C50664)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5181 * C122 + C5178 * C129 + C5182 * C463 + C5179 * C477 +
              C5183 * C464 + C5180 * C478) *
                 C19841 +
             (C5181 * C130 + C5178 * C143 + C5182 * C476 + C5179 * C493 +
              C5183 * C479 + C5180 * C494) *
                 C50630) *
                C17175 +
            ((C21895 + C21896 + C21897) * C19841 +
             (C21898 + C21899 + C21900) * C50630) *
                C50828) *
               C50693 * C50964 -
           (((C21901 + C21902 + C21903) * C50630 +
             (C21904 + C21905 + C21906) * C19841) *
                C50828 +
            ((C21900 + C21899 + C21898) * C50630 +
             (C21897 + C21896 + C21895) * C19841) *
                C17175) *
               C50693 * C50965 +
           (((C21906 + C21905 + C21904) * C19841 +
             (C21903 + C21902 + C21901) * C50630) *
                C17175 +
            ((C22813 + C22814 + C22815) * C19841 +
             (C22816 + C22817 + C22818) * C50630) *
                C50828) *
               C50693 * C1331) *
              C50911 +
          ((((C5414 + C5413 + C5412) * C19841 +
             (C5411 + C5410 + C5409) * C50630) *
                C17175 +
            ((C5415 + C5416 + C5417) * C19841 +
             (C5418 + C5419 + C5420) * C50630) *
                C50828) *
               C50693 * C50965 -
           (((C5409 + C5410 + C5411) * C50630 +
             (C5412 + C5413 + C5414) * C19841) *
                C50828 +
            ((C5226 + C5225 + C5224) * C50630 +
             (C5223 + C5222 + C5221) * C19841) *
                C17175) *
               C50693 * C50964 -
           (((C5183 * C3655 + C5180 * C3659 + C5182 * C3202 + C5179 * C3206 +
              C5181 * C1109 + C5178 * C1115) *
                 C50630 +
             (C5183 * C3653 + C5180 * C3656 + C5182 * C3197 + C5179 * C3201 +
              C5181 * C1103 + C5178 * C1110) *
                 C19841) *
                C50828 +
            ((C5420 + C5419 + C5418) * C50630 +
             (C5417 + C5416 + C5415) * C19841) *
                C17175) *
               C50693 * C1331) *
              C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C19841 +
             (C117 * C130 + C50790 * C143) * C50630) *
                C19837 +
            (C19941 + C19942) * C19838 + C19957 * C19839 + C19958 * C19840) *
               C50920 -
           (C21025 * C19840 + C21026 * C19839 + (C20395 + C20396) * C19838 +
            ((C117 * C476 + C50790 * C493) * C50630 +
             (C117 * C463 + C50790 * C477) * C19841) *
                C19837) *
               C50757) *
              C50964 +
          (((C20396 + C20395) * C19837 + (C20394 + C20393) * C19838 +
            (C20392 + C20391) * C19839 + (C21033 + C21034) * C19840) *
               C50757 -
           (C20571 * C19840 + C20572 * C19839 + (C19944 + C19943) * C19838 +
            (C19942 + C19941) * C19837) *
               C50920) *
              C50965 +
          ((C19957 * C19837 + C19958 * C19838 + (C19948 + C19947) * C19839 +
            (C20579 + C20580) * C19840) *
               C50920 -
           (((C117 * C21021 + C50790 * C21023) * C50630 +
             (C117 * C21020 + C50790 * C21022) * C19841) *
                C19840 +
            (C21034 + C21033) * C19839 + C21025 * C19838 + C21026 * C19837) *
               C50757) *
              C1331) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C17177 +
             (C117 * C130 + C50790 * C143) * C17172 + C171 * C17178 +
             C172 * C17173 + C173 * C17179 + C174 * C17174) *
                C17175 +
            (C17327 + C17328 + C17329 + C17330 + C17331 + C17332) * C50828) *
               C50920 -
           ((C17989 + C17990 + C17991 + C17992 + C17993 + C17994) * C50828 +
            (C527 * C17174 + C528 * C17179 + C529 * C17173 + C530 * C17178 +
             (C117 * C476 + C50790 * C493) * C17172 +
             (C117 * C463 + C50790 * C477) * C17177) *
                C17175) *
               C50757) *
              C50964 +
          (((C17994 + C17993 + C17992 + C17991 + C17990 + C17989) * C17175 +
            (C18889 + C18890 + C18891 + C18892 + C18893 + C18894) * C50828) *
               C50757 -
           ((C17333 + C17334 + C17335 + C17336 + C17337 + C17338) * C50828 +
            (C17332 + C17331 + C17330 + C17329 + C17328 + C17327) * C17175) *
               C50920) *
              C50965 +
          (((C17338 + C17337 + C17336 + C17335 + C17334 + C17333) * C17175 +
            (C18245 + C18246 + C18247 + C18248 + C18249 + C18250) * C50828) *
               C50920 -
           (((C117 * C3203 + C50790 * C3207) * C17174 +
             (C117 * C3198 + C50790 * C3204) * C17179 + C3238 * C17173 +
             C3237 * C17178 + C4185 * C17172 + C4184 * C17177) *
                C50828 +
            (C18894 + C18893 + C18892 + C18891 + C18890 + C18889) * C17175) *
               C50757) *
              C1331) *
         C50658) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5181 * C122 + C5178 * C129 + C5182 * C463 + C5179 * C477 +
              C5183 * C464 + C5180 * C478) *
                 C19841 +
             (C5181 * C130 + C5178 * C143 + C5182 * C476 + C5179 * C493 +
              C5183 * C479 + C5180 * C494) *
                 C50630) *
                C17175 +
            ((C21895 + C21896 + C21897) * C19841 +
             (C21898 + C21899 + C21900) * C50630) *
                C50828) *
               C50920 -
           (((C22551 + C22552 + C22553) * C50630 +
             (C22554 + C22555 + C22556) * C19841) *
                C50828 +
            ((C5183 * C1856 + C5180 * C1861 + C5182 * C479 + C5179 * C494 +
              C5181 * C476 + C5178 * C493) *
                 C50630 +
             (C5183 * C1849 + C5180 * C1857 + C5182 * C464 + C5179 * C478 +
              C5181 * C463 + C5178 * C477) *
                 C19841) *
                C17175) *
               C50757) *
              C50964 +
          ((((C22556 + C22555 + C22554) * C19841 +
             (C22553 + C22552 + C22551) * C50630) *
                C17175 +
            ((C23485 + C23486 + C23487) * C19841 +
             (C23488 + C23489 + C23490) * C50630) *
                C50828) *
               C50757 -
           (((C21901 + C21902 + C21903) * C50630 +
             (C21904 + C21905 + C21906) * C19841) *
                C50828 +
            ((C21900 + C21899 + C21898) * C50630 +
             (C21897 + C21896 + C21895) * C19841) *
                C17175) *
               C50920) *
              C50965 +
          ((((C21906 + C21905 + C21904) * C19841 +
             (C21903 + C21902 + C21901) * C50630) *
                C17175 +
            ((C22813 + C22814 + C22815) * C19841 +
             (C22816 + C22817 + C22818) * C50630) *
                C50828) *
               C50920 -
           (((C5183 * C21297 + C5180 * C21299 + C5182 * C3657 + C5179 * C3660 +
              C5181 * C3200 + C5178 * C3205) *
                 C50630 +
             (C5183 * C21296 + C5180 * C21298 + C5182 * C3654 + C5179 * C3658 +
              C5181 * C3196 + C5178 * C3199) *
                 C19841) *
                C50828 +
            ((C23490 + C23489 + C23488) * C50630 +
             (C23487 + C23486 + C23485) * C19841) *
                C17175) *
               C50757) *
              C1331) *
         C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C122 + C50790 * C129) * C17177 +
                 (C117 * C130 + C50790 * C143) * C17172 + C171 * C17178 +
                 C172 * C17173 + C173 * C17179 + C174 * C17174) *
                    C17175 +
                (C17327 + C17328 + C17329 + C17330 + C17331 + C17332) *
                    C50828) *
                   C50693 * C1025 -
               ((C17333 + C17334 + C17335 + C17336 + C17337 + C17338) * C50828 +
                (C17332 + C17331 + C17330 + C17329 + C17328 + C17327) *
                    C17175) *
                   C50693 * C50729) *
                  C1027 +
              (((C17339 + C17340 + C17341 + C17342 + C17343 + C17344) * C17175 +
                (C17345 + C17346 + C17347 + C17348 + C17349 + C17350) *
                    C50828) *
                   C50693 * C50729 -
               ((C17344 + C17343 + C17342 + C17341 + C17340 + C17339) * C50828 +
                (C176 * C17174 + C175 * C17179 + C174 * C17173 + C173 * C17178 +
                 C172 * C17172 + C171 * C17177) *
                    C17175) *
                   C50693 * C1025) *
                  C1028 +
              (((C173 * C17177 + C174 * C17172 + C175 * C17178 + C176 * C17173 +
                 C178 * C17179 + C177 * C17174) *
                    C17175 +
                (C17643 + C17644 + C17645 + C17646 + C17647 + C17648) *
                    C50828) *
                   C50693 * C1025 -
               (((C117 * C311 + C50790 * C322) * C17174 +
                 (C117 * C292 + C50790 * C312) * C17179 + C359 * C17173 +
                 C358 * C17178 + C357 * C17172 + C356 * C17177) *
                    C50828 +
                (C17648 + C17647 + C17646 + C17645 + C17644 + C17643) *
                    C17175) *
                   C50693 * C50729) *
                  C1029) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C122 + C50790 * C129) * C17177 +
                (C117 * C130 + C50790 * C143) * C17172 + C171 * C17178 +
                C172 * C17173 + C173 * C17179 + C174 * C17174) *
                   C17175 +
               (C17327 + C17328 + C17329 + C17330 + C17331 + C17332) * C50828) *
                  C50693 * C1096 -
              ((C17333 + C17334 + C17335 + C17336 + C17337 + C17338) * C50828 +
               (C17332 + C17331 + C17330 + C17329 + C17328 + C17327) * C17175) *
                  C50693 * C1097 +
              ((C17338 + C17337 + C17336 + C17335 + C17334 + C17333) * C17175 +
               (C18245 + C18246 + C18247 + C18248 + C18249 + C18250) * C50828) *
                  C50693 * C1098 -
              (((C117 * C2449 + C50790 * C2453) * C17174 +
                (C117 * C2444 + C50790 * C2450) * C17179 + C2500 * C17173 +
                C2499 * C17178 + C3504 * C17172 + C3503 * C17177) *
                   C50828 +
               (C18250 + C18249 + C18248 + C18247 + C18246 + C18245) * C17175) *
                  C50693 * C1099) *
             C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C17177 +
             (C117 * C130 + C50790 * C143) * C17172 + C171 * C17178 +
             C172 * C17173 + C173 * C17179 + C174 * C17174) *
                C17175 +
            (C17327 + C17328 + C17329 + C17330 + C17331 + C17332) * C50828) *
               C457 -
           ((C17989 + C17990 + C17991 + C17992 + C17993 + C17994) * C50828 +
            (C527 * C17174 + C528 * C17179 + C529 * C17173 + C530 * C17178 +
             (C117 * C476 + C50790 * C493) * C17172 +
             (C117 * C463 + C50790 * C477) * C17177) *
                C17175) *
               C458 +
           (((C117 * C464 + C50790 * C478) * C17177 +
             (C117 * C479 + C50790 * C494) * C17172 + C531 * C17178 +
             C532 * C17173 + C533 * C17179 + C534 * C17174) *
                C17175 +
            (C18397 + C18398 + C18399 + C18400 + C18401 + C18402) * C50828) *
               C459) *
              C1025 +
          (((C17994 + C17993 + C17992 + C17991 + C17990 + C17989) * C17175 +
            (C3234 * C17177 + C3233 * C17172 + C2692 * C17178 + C2691 * C17173 +
             C3001 * C17179 + C3002 * C17174) *
                C50828) *
               C458 -
           ((C17333 + C17334 + C17335 + C17336 + C17337 + C17338) * C50828 +
            (C17332 + C17331 + C17330 + C17329 + C17328 + C17327) * C17175) *
               C457 -
           (((C117 * C2673 + C50790 * C2677) * C17174 +
             (C117 * C2668 + C50790 * C2674) * C17179 + C2696 * C17173 +
             C2695 * C17178 + C3677 * C17172 + C3676 * C17177) *
                C50828 +
            (C18402 + C18401 + C18400 + C18399 + C18398 + C18397) * C17175) *
               C459) *
              C50729) *
         C50658) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C19841 +
             (C117 * C130 + C50790 * C143) * C50630) *
                C19837 +
            (C19941 + C19942) * C19838 + C19957 * C19839 + C19958 * C19840) *
               C50693 * C1025 -
           ((C19947 + C19948) * C19840 + (C19946 + C19945) * C19839 +
            (C19944 + C19943) * C19838 + (C19942 + C19941) * C19837) *
               C50693 * C50729) *
              C1027 +
          (((C19949 + C19950) * C19837 + (C19951 + C19952) * C19838 +
            (C19953 + C19954) * C19839 + (C19955 + C19956) * C19840) *
               C50693 * C50729 -
           (C19959 * C19840 + C19960 * C19839 + (C19950 + C19949) * C19838 +
            (C172 * C50630 + C171 * C19841) * C19837) *
               C50693 * C1025) *
              C1028 +
          (((C173 * C19841 + C174 * C50630) * C19837 +
            (C20157 + C20158) * C19838 + (C20159 + C20160) * C19839 +
            (C20161 + C20162) * C19840) *
               C50693 * C1025 -
           (((C117 * C2449 + C50790 * C2453) * C50630 +
             (C117 * C2444 + C50790 * C2450) * C19841) *
                C19840 +
            (C20162 + C20161) * C19839 + (C20160 + C20159) * C19838 +
            (C20158 + C20157) * C19837) *
               C50693 * C50729) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C19841 +
            (C117 * C130 + C50790 * C143) * C50630) *
               C19837 +
           (C19941 + C19942) * C19838 + C19957 * C19839 + C19958 * C19840) *
              C50693 * C1096 -
          (C20571 * C19840 + C20572 * C19839 + (C19944 + C19943) * C19838 +
           (C19942 + C19941) * C19837) *
              C50693 * C1097 +
          (C19957 * C19837 + C19958 * C19838 + (C19948 + C19947) * C19839 +
           (C20579 + C20580) * C19840) *
              C50693 * C1098 -
          (((C117 * C20567 + C50790 * C20569) * C50630 +
            (C117 * C20566 + C50790 * C20568) * C19841) *
               C19840 +
           (C20580 + C20579) * C19839 + C20571 * C19838 + C20572 * C19837) *
              C50693 * C1099) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C19841 +
             (C117 * C130 + C50790 * C143) * C50630) *
                C19837 +
            (C19941 + C19942) * C19838 + C19957 * C19839 + C19958 * C19840) *
               C457 -
           ((C20391 + C20392) * C19840 + (C20393 + C20394) * C19839 +
            (C20395 + C20396) * C19838 +
            ((C117 * C476 + C50790 * C493) * C50630 +
             (C117 * C463 + C50790 * C477) * C19841) *
                C19837) *
               C458 +
           (((C117 * C464 + C50790 * C478) * C19841 +
             (C117 * C479 + C50790 * C494) * C50630) *
                C19837 +
            (C20683 + C20684) * C19838 + (C20685 + C20686) * C19839 +
            (C20693 + C20694) * C19840) *
               C459) *
              C1025 +
          (((C20396 + C20395) * C19837 + (C20394 + C20393) * C19838 +
            (C20392 + C20391) * C19839 +
            ((C117 * C4168 + C50790 * C4172) * C19841 +
             (C117 * C4171 + C50790 * C4174) * C50630) *
                C19840) *
               C458 -
           (C20571 * C19840 + C20572 * C19839 + (C19944 + C19943) * C19838 +
            (C19942 + C19941) * C19837) *
               C457 -
           (((C117 * C20679 + C50790 * C20681) * C50630 +
             (C117 * C20678 + C50790 * C20680) * C19841) *
                C19840 +
            (C20694 + C20693) * C19839 + (C20686 + C20685) * C19838 +
            (C20684 + C20683) * C19837) *
               C459) *
              C50729) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C5181 * C122 + C5178 * C129 + C5182 * C463 + C5179 * C477 +
              C5183 * C464 + C5180 * C478) *
                 C19841 +
             (C5181 * C130 + C5178 * C143 + C5182 * C476 + C5179 * C493 +
              C5183 * C479 + C5180 * C494) *
                 C50630) *
                C17175 +
            ((C21895 + C21896 + C21897) * C19841 +
             (C21898 + C21899 + C21900) * C50630) *
                C50828) *
               C50693 * C1025 -
           (((C21901 + C21902 + C21903) * C50630 +
             (C21904 + C21905 + C21906) * C19841) *
                C50828 +
            ((C21900 + C21899 + C21898) * C50630 +
             (C21897 + C21896 + C21895) * C19841) *
                C17175) *
               C50693 * C50729) *
              C1027 +
          ((((C5414 + C5413 + C5412) * C19841 +
             (C5411 + C5410 + C5409) * C50630) *
                C17175 +
            ((C5415 + C5416 + C5417) * C19841 +
             (C5418 + C5419 + C5420) * C50630) *
                C50828) *
               C50693 * C50729 -
           (((C5409 + C5410 + C5411) * C50630 +
             (C5412 + C5413 + C5414) * C19841) *
                C50828 +
            ((C5226 + C5225 + C5224) * C50630 +
             (C5223 + C5222 + C5221) * C19841) *
                C17175) *
               C50693 * C1025) *
              C1028 +
          ((((C5232 + C5231 + C5230) * C19841 +
             (C5229 + C5228 + C5227) * C50630) *
                C17175 +
            ((C5773 + C5774 + C5775) * C19841 +
             (C5776 + C5777 + C5778) * C50630) *
                C50828) *
               C50693 * C1025 -
           (((C5183 * C2673 + C5180 * C2677 + C5182 * C1568 + C5179 * C1575 +
              C5181 * C306 + C5178 * C319) *
                 C50630 +
             (C5183 * C2668 + C5180 * C2674 + C5182 * C1563 + C5179 * C1569 +
              C5181 * C289 + C5178 * C305) *
                 C19841) *
                C50828 +
            ((C5778 + C5777 + C5776) * C50630 +
             (C5775 + C5774 + C5773) * C19841) *
                C17175) *
               C50693 * C50729) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5181 * C122 + C5178 * C129 + C5182 * C463 + C5179 * C477 +
             C5183 * C464 + C5180 * C478) *
                C19841 +
            (C5181 * C130 + C5178 * C143 + C5182 * C476 + C5179 * C493 +
             C5183 * C479 + C5180 * C494) *
                C50630) *
               C17175 +
           ((C21895 + C21896 + C21897) * C19841 +
            (C21898 + C21899 + C21900) * C50630) *
               C50828) *
              C50693 * C1096 -
          (((C21901 + C21902 + C21903) * C50630 +
            (C21904 + C21905 + C21906) * C19841) *
               C50828 +
           ((C21900 + C21899 + C21898) * C50630 +
            (C21897 + C21896 + C21895) * C19841) *
               C17175) *
              C50693 * C1097 +
          (((C21906 + C21905 + C21904) * C19841 +
            (C21903 + C21902 + C21901) * C50630) *
               C17175 +
           ((C22813 + C22814 + C22815) * C19841 +
            (C22816 + C22817 + C22818) * C50630) *
               C50828) *
              C50693 * C1098 -
          (((C5183 * C20679 + C5180 * C20681 + C5182 * C4171 + C5179 * C4174 +
             C5181 * C2446 + C5178 * C2451) *
                C50630 +
            (C5183 * C20678 + C5180 * C20680 + C5182 * C4168 + C5179 * C4172 +
             C5181 * C2442 + C5178 * C2445) *
                C19841) *
               C50828 +
           ((C22818 + C22817 + C22816) * C50630 +
            (C22815 + C22814 + C22813) * C19841) *
               C17175) *
              C50693 * C1099) *
         C50658) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C5181 * C122 + C5178 * C129 + C5182 * C463 + C5179 * C477 +
              C5183 * C464 + C5180 * C478) *
                 C19841 +
             (C5181 * C130 + C5178 * C143 + C5182 * C476 + C5179 * C493 +
              C5183 * C479 + C5180 * C494) *
                 C50630) *
                C17175 +
            ((C21895 + C21896 + C21897) * C19841 +
             (C21898 + C21899 + C21900) * C50630) *
                C50828) *
               C457 -
           (((C22551 + C22552 + C22553) * C50630 +
             (C22554 + C22555 + C22556) * C19841) *
                C50828 +
            ((C5183 * C1856 + C5180 * C1861 + C5182 * C479 + C5179 * C494 +
              C5181 * C476 + C5178 * C493) *
                 C50630 +
             (C5183 * C1849 + C5180 * C1857 + C5182 * C464 + C5179 * C478 +
              C5181 * C463 + C5178 * C477) *
                 C19841) *
                C17175) *
               C458 +
           (((C5181 * C464 + C5178 * C478 + C5182 * C1849 + C5179 * C1857 +
              C5183 * C5566 + C5180 * C5569) *
                 C19841 +
             (C5181 * C479 + C5178 * C494 + C5182 * C1856 + C5179 * C1861 +
              C5183 * C5570 + C5180 * C5575) *
                 C50630) *
                C17175 +
            ((C22981 + C22982 + C22983) * C19841 +
             (C22984 + C22985 + C22986) * C50630) *
                C50828) *
               C459) *
              C1025 +
          ((((C22556 + C22555 + C22554) * C19841 +
             (C22553 + C22552 + C22551) * C50630) *
                C17175 +
            ((C5181 * C1565 + C5178 * C1573 + C5182 * C2666 + C5179 * C2669 +
              C5183 * C4579 + C5180 * C4585) *
                 C19841 +
             (C5181 * C1572 + C5178 * C1577 + C5182 * C2670 + C5179 * C2675 +
              C5183 * C4584 + C5180 * C4591) *
                 C50630) *
                C50828) *
               C458 -
           (((C21901 + C21902 + C21903) * C50630 +
             (C21904 + C21905 + C21906) * C19841) *
                C50828 +
            ((C21900 + C21899 + C21898) * C50630 +
             (C21897 + C21896 + C21895) * C19841) *
                C17175) *
               C457 -
           (((C5183 * C22965 + C5180 * C22967 + C5182 * C4584 + C5179 * C4591 +
              C5181 * C2670 + C5178 * C2675) *
                 C50630 +
             (C5183 * C22964 + C5180 * C22966 + C5182 * C4579 + C5179 * C4585 +
              C5181 * C2666 + C5178 * C2669) *
                 C19841) *
                C50828 +
            ((C22986 + C22985 + C22984) * C50630 +
             (C22983 + C22982 + C22981) * C19841) *
                C17175) *
               C459) *
              C50729) *
         C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50790 * C129) * C19841 +
              (C117 * C130 + C50790 * C143) * C50630) *
                 C19837 +
             (C19941 + C19942) * C19838 + C19957 * C19839 + C19958 * C19840) *
                C50920 -
            ((C20391 + C20392) * C19840 + (C20393 + C20394) * C19839 +
             (C20395 + C20396) * C19838 +
             ((C117 * C476 + C50790 * C493) * C50630 +
              (C117 * C463 + C50790 * C477) * C19841) *
                 C19837) *
                C50757) *
               C1025 +
           (((C20396 + C20395) * C19837 + (C20394 + C20393) * C19838 +
             (C20392 + C20391) * C19839 +
             ((C117 * C4168 + C50790 * C4172) * C19841 +
              (C117 * C4171 + C50790 * C4174) * C50630) *
                 C19840) *
                C50757 -
            (C20571 * C19840 + C20572 * C19839 + (C19944 + C19943) * C19838 +
             (C19942 + C19941) * C19837) *
                C50920) *
               C50729) *
              C50911 +
          ((((C530 * C19841 + C529 * C50630) * C19837 +
             (C20397 + C20398) * C19838 + (C20399 + C20400) * C19839 +
             (C20401 + C20402) * C19840) *
                C50757 -
            (C19959 * C19840 + C19960 * C19839 + (C19950 + C19949) * C19838 +
             (C172 * C50630 + C171 * C19841) * C19837) *
                C50920) *
               C1025 +
           (((C19949 + C19950) * C19837 + (C19951 + C19952) * C19838 +
             (C19953 + C19954) * C19839 + (C19955 + C19956) * C19840) *
                C50920 -
            (((C117 * C4169 + C50790 * C4173) * C50630 +
              (C117 * C4167 + C50790 * C4170) * C19841) *
                 C19840 +
             (C20402 + C20401) * C19839 + (C20400 + C20399) * C19838 +
             (C20398 + C20397) * C19837) *
                C50757) *
               C50729) *
              C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50790 * C129) * C17177 +
              (C117 * C130 + C50790 * C143) * C17172 + C171 * C17178 +
              C172 * C17173 + C173 * C17179 + C174 * C17174) *
                 C17175 +
             (C17327 + C17328 + C17329 + C17330 + C17331 + C17332) * C50828) *
                C50920 -
            ((C17989 + C17990 + C17991 + C17992 + C17993 + C17994) * C50828 +
             (C527 * C17174 + C528 * C17179 + C529 * C17173 + C530 * C17178 +
              (C117 * C476 + C50790 * C493) * C17172 +
              (C117 * C463 + C50790 * C477) * C17177) *
                 C17175) *
                C50757) *
               C1025 +
           (((C17994 + C17993 + C17992 + C17991 + C17990 + C17989) * C17175 +
             (C3234 * C17177 + C3233 * C17172 + C2692 * C17178 +
              C2691 * C17173 + C3001 * C17179 + C3002 * C17174) *
                 C50828) *
                C50757 -
            ((C17333 + C17334 + C17335 + C17336 + C17337 + C17338) * C50828 +
             (C17332 + C17331 + C17330 + C17329 + C17328 + C17327) * C17175) *
                C50920) *
               C50729) *
              C50911 +
          ((((C530 * C17177 + C529 * C17172 + C528 * C17178 + C527 * C17173 +
              C526 * C17179 + C525 * C17174) *
                 C17175 +
             (C17995 + C17996 + C17997 + C17998 + C17999 + C18000) * C50828) *
                C50757 -
            ((C17344 + C17343 + C17342 + C17341 + C17340 + C17339) * C50828 +
             (C176 * C17174 + C175 * C17179 + C174 * C17173 + C173 * C17178 +
              C172 * C17172 + C171 * C17177) *
                 C17175) *
                C50920) *
               C1025 +
           (((C17339 + C17340 + C17341 + C17342 + C17343 + C17344) * C17175 +
             (C17345 + C17346 + C17347 + C17348 + C17349 + C17350) * C50828) *
                C50920 -
            (((C117 * C1566 + C50790 * C1574) * C17174 +
              (C117 * C1562 + C50790 * C1567) * C17179 + C3002 * C17173 +
              C3001 * C17178 + C2691 * C17172 + C2692 * C17177) *
                 C50828 +
             (C18000 + C17999 + C17998 + C17997 + C17996 + C17995) * C17175) *
                C50757) *
               C50729) *
              C50664)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C5181 * C122 + C5178 * C129 + C5182 * C463 + C5179 * C477 +
               C5183 * C464 + C5180 * C478) *
                  C19841 +
              (C5181 * C130 + C5178 * C143 + C5182 * C476 + C5179 * C493 +
               C5183 * C479 + C5180 * C494) *
                  C50630) *
                 C17175 +
             ((C21895 + C21896 + C21897) * C19841 +
              (C21898 + C21899 + C21900) * C50630) *
                 C50828) *
                C50920 -
            (((C22551 + C22552 + C22553) * C50630 +
              (C22554 + C22555 + C22556) * C19841) *
                 C50828 +
             ((C5183 * C1856 + C5180 * C1861 + C5182 * C479 + C5179 * C494 +
               C5181 * C476 + C5178 * C493) *
                  C50630 +
              (C5183 * C1849 + C5180 * C1857 + C5182 * C464 + C5179 * C478 +
               C5181 * C463 + C5178 * C477) *
                  C19841) *
                 C17175) *
                C50757) *
               C1025 +
           ((((C22556 + C22555 + C22554) * C19841 +
              (C22553 + C22552 + C22551) * C50630) *
                 C17175 +
             ((C5181 * C1565 + C5178 * C1573 + C5182 * C2666 + C5179 * C2669 +
               C5183 * C4579 + C5180 * C4585) *
                  C19841 +
              (C5181 * C1572 + C5178 * C1577 + C5182 * C2670 + C5179 * C2675 +
               C5183 * C4584 + C5180 * C4591) *
                  C50630) *
                 C50828) *
                C50757 -
            (((C21901 + C21902 + C21903) * C50630 +
              (C21904 + C21905 + C21906) * C19841) *
                 C50828 +
             ((C21900 + C21899 + C21898) * C50630 +
              (C21897 + C21896 + C21895) * C19841) *
                 C17175) *
                C50920) *
               C50729) *
              C50911 +
          (((((C5608 + C5607 + C5606) * C19841 +
              (C5605 + C5604 + C5603) * C50630) *
                 C17175 +
             ((C6153 + C6154 + C6155) * C19841 +
              (C6156 + C6157 + C6158) * C50630) *
                 C50828) *
                C50757 -
            (((C5409 + C5410 + C5411) * C50630 +
              (C5412 + C5413 + C5414) * C19841) *
                 C50828 +
             ((C5226 + C5225 + C5224) * C50630 +
              (C5223 + C5222 + C5221) * C19841) *
                 C17175) *
                C50920) *
               C1025 +
           ((((C5414 + C5413 + C5412) * C19841 +
              (C5411 + C5410 + C5409) * C50630) *
                 C17175 +
             ((C5415 + C5416 + C5417) * C19841 +
              (C5418 + C5419 + C5420) * C50630) *
                 C50828) *
                C50920 -
            (((C5183 * C4582 + C5180 * C4590 + C5182 * C2672 + C5179 * C2676 +
               C5181 * C1570 + C5178 * C1576) *
                  C50630 +
              (C5183 * C4578 + C5180 * C4583 + C5182 * C2667 + C5179 * C2671 +
               C5181 * C1564 + C5178 * C1571) *
                  C19841) *
                 C50828 +
             ((C6158 + C6157 + C6156) * C50630 +
              (C6155 + C6154 + C6153) * C19841) *
                 C17175) *
                C50757) *
               C50729) *
              C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C17177 +
            (C117 * C130 + C50790 * C143) * C17172 + C171 * C17178 +
            C172 * C17173 + C173 * C17179 + C174 * C17174) *
               C17175 +
           (C17327 + C17328 + C17329 + C17330 + C17331 + C17332) * C50828) *
              C50693 * C1096 -
          ((C17333 + C17334 + C17335 + C17336 + C17337 + C17338) * C50828 +
           (C17332 + C17331 + C17330 + C17329 + C17328 + C17327) * C17175) *
              C50693 * C1097 +
          ((C17338 + C17337 + C17336 + C17335 + C17334 + C17333) * C17175 +
           (C18245 + C18246 + C18247 + C18248 + C18249 + C18250) * C50828) *
              C50693 * C1098 -
          (((C117 * C2449 + C50790 * C2453) * C17174 +
            (C117 * C2444 + C50790 * C2450) * C17179 + C2500 * C17173 +
            C2499 * C17178 + C3504 * C17172 + C3503 * C17177) *
               C50828 +
           (C18250 + C18249 + C18248 + C18247 + C18246 + C18245) * C17175) *
              C50693 * C1099) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C17177 +
             (C117 * C130 + C50790 * C143) * C17172 + C171 * C17178 +
             C172 * C17173 + C173 * C17179 + C174 * C17174) *
                C17175 +
            (C17327 + C17328 + C17329 + C17330 + C17331 + C17332) * C50828) *
               C50693 * C1025 -
           ((C17333 + C17334 + C17335 + C17336 + C17337 + C17338) * C50828 +
            (C17332 + C17331 + C17330 + C17329 + C17328 + C17327) * C17175) *
               C50693 * C50729) *
              C1027 +
          (((C17339 + C17340 + C17341 + C17342 + C17343 + C17344) * C17175 +
            (C17345 + C17346 + C17347 + C17348 + C17349 + C17350) * C50828) *
               C50693 * C50729 -
           ((C17344 + C17343 + C17342 + C17341 + C17340 + C17339) * C50828 +
            (C176 * C17174 + C175 * C17179 + C174 * C17173 + C173 * C17178 +
             C172 * C17172 + C171 * C17177) *
                C17175) *
               C50693 * C1025) *
              C1028 +
          (((C173 * C17177 + C174 * C17172 + C175 * C17178 + C176 * C17173 +
             C178 * C17179 + C177 * C17174) *
                C17175 +
            (C17643 + C17644 + C17645 + C17646 + C17647 + C17648) * C50828) *
               C50693 * C1025 -
           (((C117 * C311 + C50790 * C322) * C17174 +
             (C117 * C292 + C50790 * C312) * C17179 + C359 * C17173 +
             C358 * C17178 + C357 * C17172 + C356 * C17177) *
                C50828 +
            (C17648 + C17647 + C17646 + C17645 + C17644 + C17643) * C17175) *
               C50693 * C50729) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C19841 +
             (C117 * C130 + C50790 * C143) * C50630) *
                C19837 +
            (C19941 + C19942) * C19838 + C19957 * C19839 + C19958 * C19840) *
               C50693 * C1025 -
           ((C19947 + C19948) * C19840 + (C19946 + C19945) * C19839 +
            (C19944 + C19943) * C19838 + (C19942 + C19941) * C19837) *
               C50693 * C50729) *
              C1027 +
          (((C19949 + C19950) * C19837 + (C19951 + C19952) * C19838 +
            (C19953 + C19954) * C19839 + (C19955 + C19956) * C19840) *
               C50693 * C50729 -
           (C19959 * C19840 + C19960 * C19839 + (C19950 + C19949) * C19838 +
            (C172 * C50630 + C171 * C19841) * C19837) *
               C50693 * C1025) *
              C1028 +
          (((C173 * C19841 + C174 * C50630) * C19837 +
            (C20157 + C20158) * C19838 + (C20159 + C20160) * C19839 +
            (C20161 + C20162) * C19840) *
               C50693 * C1025 -
           (((C117 * C2449 + C50790 * C2453) * C50630 +
             (C117 * C2444 + C50790 * C2450) * C19841) *
                C19840 +
            (C20162 + C20161) * C19839 + (C20160 + C20159) * C19838 +
            (C20158 + C20157) * C19837) *
               C50693 * C50729) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C19841 +
            (C117 * C130 + C50790 * C143) * C50630) *
               C19837 +
           (C19941 + C19942) * C19838 + C19957 * C19839 + C19958 * C19840) *
              C50693 * C1096 -
          (C20571 * C19840 + C20572 * C19839 + (C19944 + C19943) * C19838 +
           (C19942 + C19941) * C19837) *
              C50693 * C1097 +
          (C19957 * C19837 + C19958 * C19838 + (C19948 + C19947) * C19839 +
           (C20579 + C20580) * C19840) *
              C50693 * C1098 -
          (((C117 * C20567 + C50790 * C20569) * C50630 +
            (C117 * C20566 + C50790 * C20568) * C19841) *
               C19840 +
           (C20580 + C20579) * C19839 + C20571 * C19838 + C20572 * C19837) *
              C50693 * C1099) *
         C50658) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5181 * C122 + C5178 * C129 + C5182 * C463 + C5179 * C477 +
              C5183 * C464 + C5180 * C478) *
                 C19841 +
             (C5181 * C130 + C5178 * C143 + C5182 * C476 + C5179 * C493 +
              C5183 * C479 + C5180 * C494) *
                 C50630) *
                C17175 +
            ((C21895 + C21896 + C21897) * C19841 +
             (C21898 + C21899 + C21900) * C50630) *
                C50828) *
               C50693 * C1025 -
           (((C21901 + C21902 + C21903) * C50630 +
             (C21904 + C21905 + C21906) * C19841) *
                C50828 +
            ((C21900 + C21899 + C21898) * C50630 +
             (C21897 + C21896 + C21895) * C19841) *
                C17175) *
               C50693 * C50729) *
              C1027 +
          ((((C5414 + C5413 + C5412) * C19841 +
             (C5411 + C5410 + C5409) * C50630) *
                C17175 +
            ((C5415 + C5416 + C5417) * C19841 +
             (C5418 + C5419 + C5420) * C50630) *
                C50828) *
               C50693 * C50729 -
           (((C5409 + C5410 + C5411) * C50630 +
             (C5412 + C5413 + C5414) * C19841) *
                C50828 +
            ((C5226 + C5225 + C5224) * C50630 +
             (C5223 + C5222 + C5221) * C19841) *
                C17175) *
               C50693 * C1025) *
              C1028 +
          ((((C5232 + C5231 + C5230) * C19841 +
             (C5229 + C5228 + C5227) * C50630) *
                C17175 +
            ((C5773 + C5774 + C5775) * C19841 +
             (C5776 + C5777 + C5778) * C50630) *
                C50828) *
               C50693 * C1025 -
           (((C5183 * C2673 + C5180 * C2677 + C5182 * C1568 + C5179 * C1575 +
              C5181 * C306 + C5178 * C319) *
                 C50630 +
             (C5183 * C2668 + C5180 * C2674 + C5182 * C1563 + C5179 * C1569 +
              C5181 * C289 + C5178 * C305) *
                 C19841) *
                C50828 +
            ((C5778 + C5777 + C5776) * C50630 +
             (C5775 + C5774 + C5773) * C19841) *
                C17175) *
               C50693 * C50729) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5181 * C122 + C5178 * C129 + C5182 * C463 + C5179 * C477 +
             C5183 * C464 + C5180 * C478) *
                C19841 +
            (C5181 * C130 + C5178 * C143 + C5182 * C476 + C5179 * C493 +
             C5183 * C479 + C5180 * C494) *
                C50630) *
               C17175 +
           ((C21895 + C21896 + C21897) * C19841 +
            (C21898 + C21899 + C21900) * C50630) *
               C50828) *
              C50693 * C1096 -
          (((C21901 + C21902 + C21903) * C50630 +
            (C21904 + C21905 + C21906) * C19841) *
               C50828 +
           ((C21900 + C21899 + C21898) * C50630 +
            (C21897 + C21896 + C21895) * C19841) *
               C17175) *
              C50693 * C1097 +
          (((C21906 + C21905 + C21904) * C19841 +
            (C21903 + C21902 + C21901) * C50630) *
               C17175 +
           ((C22813 + C22814 + C22815) * C19841 +
            (C22816 + C22817 + C22818) * C50630) *
               C50828) *
              C50693 * C1098 -
          (((C5183 * C20679 + C5180 * C20681 + C5182 * C4171 + C5179 * C4174 +
             C5181 * C2446 + C5178 * C2451) *
                C50630 +
            (C5183 * C20678 + C5180 * C20680 + C5182 * C4168 + C5179 * C4172 +
             C5181 * C2442 + C5178 * C2445) *
                C19841) *
               C50828 +
           ((C22818 + C22817 + C22816) * C50630 +
            (C22815 + C22814 + C22813) * C19841) *
               C17175) *
              C50693 * C1099) *
         C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50790 * C129) * C19841 +
              (C117 * C130 + C50790 * C143) * C50630) *
                 C19837 +
             (C19941 + C19942) * C19838 + C19957 * C19839 + C19958 * C19840) *
                C1676 -
            (C21025 * C19840 + C21026 * C19839 + (C20395 + C20396) * C19838 +
             ((C117 * C476 + C50790 * C493) * C50630 +
              (C117 * C463 + C50790 * C477) * C19841) *
                 C19837) *
                C50757) *
               C50919 +
           (((C20396 + C20395) * C19837 + (C20394 + C20393) * C19838 +
             (C20392 + C20391) * C19839 + (C21033 + C21034) * C19840) *
                C50757 -
            (C20571 * C19840 + C20572 * C19839 + (C19944 + C19943) * C19838 +
             (C19942 + C19941) * C19837) *
                C1676) *
               C50729) *
              C50911 +
          ((((C530 * C19841 + C529 * C50630) * C19837 +
             (C20397 + C20398) * C19838 + (C20399 + C20400) * C19839 +
             (C20401 + C20402) * C19840) *
                C50757 -
            (C19959 * C19840 + C19960 * C19839 + (C19950 + C19949) * C19838 +
             (C172 * C50630 + C171 * C19841) * C19837) *
                C1676) *
               C50919 +
           (((C19949 + C19950) * C19837 + (C19951 + C19952) * C19838 +
             (C19953 + C19954) * C19839 + (C19955 + C19956) * C19840) *
                C1676 -
            (((C117 * C4169 + C50790 * C4173) * C50630 +
              (C117 * C4167 + C50790 * C4170) * C19841) *
                 C19840 +
             (C20402 + C20401) * C19839 + (C20400 + C20399) * C19838 +
             (C20398 + C20397) * C19837) *
                C50757) *
               C50729) *
              C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50790 * C129) * C17177 +
              (C117 * C130 + C50790 * C143) * C17172 + C171 * C17178 +
              C172 * C17173 + C173 * C17179 + C174 * C17174) *
                 C17175 +
             (C17327 + C17328 + C17329 + C17330 + C17331 + C17332) * C50828) *
                C1676 -
            ((C17989 + C17990 + C17991 + C17992 + C17993 + C17994) * C50828 +
             (C527 * C17174 + C528 * C17179 + C529 * C17173 + C530 * C17178 +
              (C117 * C476 + C50790 * C493) * C17172 +
              (C117 * C463 + C50790 * C477) * C17177) *
                 C17175) *
                C50757) *
               C50919 +
           (((C17994 + C17993 + C17992 + C17991 + C17990 + C17989) * C17175 +
             (C18889 + C18890 + C18891 + C18892 + C18893 + C18894) * C50828) *
                C50757 -
            ((C17333 + C17334 + C17335 + C17336 + C17337 + C17338) * C50828 +
             (C17332 + C17331 + C17330 + C17329 + C17328 + C17327) * C17175) *
                C1676) *
               C50729) *
              C50911 +
          ((((C530 * C17177 + C529 * C17172 + C528 * C17178 + C527 * C17173 +
              C526 * C17179 + C525 * C17174) *
                 C17175 +
             (C17995 + C17996 + C17997 + C17998 + C17999 + C18000) * C50828) *
                C50757 -
            ((C17344 + C17343 + C17342 + C17341 + C17340 + C17339) * C50828 +
             (C176 * C17174 + C175 * C17179 + C174 * C17173 + C173 * C17178 +
              C172 * C17172 + C171 * C17177) *
                 C17175) *
                C1676) *
               C50919 +
           (((C17339 + C17340 + C17341 + C17342 + C17343 + C17344) * C17175 +
             (C17345 + C17346 + C17347 + C17348 + C17349 + C17350) * C50828) *
                C1676 -
            (((C117 * C1566 + C50790 * C1574) * C17174 +
              (C117 * C1562 + C50790 * C1567) * C17179 + C3002 * C17173 +
              C3001 * C17178 + C2691 * C17172 + C2692 * C17177) *
                 C50828 +
             (C18000 + C17999 + C17998 + C17997 + C17996 + C17995) * C17175) *
                C50757) *
               C50729) *
              C50664)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C5181 * C122 + C5178 * C129 + C5182 * C463 + C5179 * C477 +
               C5183 * C464 + C5180 * C478) *
                  C19841 +
              (C5181 * C130 + C5178 * C143 + C5182 * C476 + C5179 * C493 +
               C5183 * C479 + C5180 * C494) *
                  C50630) *
                 C17175 +
             ((C21895 + C21896 + C21897) * C19841 +
              (C21898 + C21899 + C21900) * C50630) *
                 C50828) *
                C1676 -
            (((C22551 + C22552 + C22553) * C50630 +
              (C22554 + C22555 + C22556) * C19841) *
                 C50828 +
             ((C5183 * C1856 + C5180 * C1861 + C5182 * C479 + C5179 * C494 +
               C5181 * C476 + C5178 * C493) *
                  C50630 +
              (C5183 * C1849 + C5180 * C1857 + C5182 * C464 + C5179 * C478 +
               C5181 * C463 + C5178 * C477) *
                  C19841) *
                 C17175) *
                C50757) *
               C50919 +
           ((((C22556 + C22555 + C22554) * C19841 +
              (C22553 + C22552 + C22551) * C50630) *
                 C17175 +
             ((C23485 + C23486 + C23487) * C19841 +
              (C23488 + C23489 + C23490) * C50630) *
                 C50828) *
                C50757 -
            (((C21901 + C21902 + C21903) * C50630 +
              (C21904 + C21905 + C21906) * C19841) *
                 C50828 +
             ((C21900 + C21899 + C21898) * C50630 +
              (C21897 + C21896 + C21895) * C19841) *
                 C17175) *
                C1676) *
               C50729) *
              C50911 +
          (((((C5608 + C5607 + C5606) * C19841 +
              (C5605 + C5604 + C5603) * C50630) *
                 C17175 +
             ((C6153 + C6154 + C6155) * C19841 +
              (C6156 + C6157 + C6158) * C50630) *
                 C50828) *
                C50757 -
            (((C5409 + C5410 + C5411) * C50630 +
              (C5412 + C5413 + C5414) * C19841) *
                 C50828 +
             ((C5226 + C5225 + C5224) * C50630 +
              (C5223 + C5222 + C5221) * C19841) *
                 C17175) *
                C1676) *
               C50919 +
           ((((C5414 + C5413 + C5412) * C19841 +
              (C5411 + C5410 + C5409) * C50630) *
                 C17175 +
             ((C5415 + C5416 + C5417) * C19841 +
              (C5418 + C5419 + C5420) * C50630) *
                 C50828) *
                C1676 -
            (((C5183 * C4582 + C5180 * C4590 + C5182 * C2672 + C5179 * C2676 +
               C5181 * C1570 + C5178 * C1576) *
                  C50630 +
              (C5183 * C4578 + C5180 * C4583 + C5182 * C2667 + C5179 * C2671 +
               C5181 * C1564 + C5178 * C1571) *
                  C19841) *
                 C50828 +
             ((C6158 + C6157 + C6156) * C50630 +
              (C6155 + C6154 + C6153) * C19841) *
                 C17175) *
                C50757) *
               C50729) *
              C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C19841 +
             (C117 * C130 + C50790 * C143) * C50630) *
                C19837 +
            (C19941 + C19942) * C19838 + C19957 * C19839 + C19958 * C19840) *
               C50966 -
           (C21025 * C19840 + C21026 * C19839 + (C20395 + C20396) * C19838 +
            ((C117 * C476 + C50790 * C493) * C50630 +
             (C117 * C463 + C50790 * C477) * C19841) *
                C19837) *
               C50967 +
           (((C117 * C464 + C50790 * C478) * C19841 +
             (C117 * C479 + C50790 * C494) * C50630) *
                C19837 +
            (C20683 + C20684) * C19838 + (C20685 + C20686) * C19839 +
            (C20693 + C20694) * C19840) *
               C2092) *
              C50919 +
          (((C20396 + C20395) * C19837 + (C20394 + C20393) * C19838 +
            (C20392 + C20391) * C19839 + (C21033 + C21034) * C19840) *
               C50967 -
           (C20571 * C19840 + C20572 * C19839 + (C19944 + C19943) * C19838 +
            (C19942 + C19941) * C19837) *
               C50966 -
           (((C117 * C20679 + C50790 * C20681) * C50630 +
             (C117 * C20678 + C50790 * C20680) * C19841) *
                C19840 +
            (C20694 + C20693) * C19839 + (C20686 + C20685) * C19838 +
            (C20684 + C20683) * C19837) *
               C2092) *
              C50729) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C17177 +
             (C117 * C130 + C50790 * C143) * C17172 + C171 * C17178 +
             C172 * C17173 + C173 * C17179 + C174 * C17174) *
                C17175 +
            (C17327 + C17328 + C17329 + C17330 + C17331 + C17332) * C50828) *
               C50966 -
           ((C17989 + C17990 + C17991 + C17992 + C17993 + C17994) * C50828 +
            (C527 * C17174 + C528 * C17179 + C529 * C17173 + C530 * C17178 +
             (C117 * C476 + C50790 * C493) * C17172 +
             (C117 * C463 + C50790 * C477) * C17177) *
                C17175) *
               C50967 +
           (((C117 * C464 + C50790 * C478) * C17177 +
             (C117 * C479 + C50790 * C494) * C17172 + C531 * C17178 +
             C532 * C17173 + C533 * C17179 + C534 * C17174) *
                C17175 +
            (C18397 + C18398 + C18399 + C18400 + C18401 + C18402) * C50828) *
               C2092) *
              C50919 +
          (((C17994 + C17993 + C17992 + C17991 + C17990 + C17989) * C17175 +
            (C18889 + C18890 + C18891 + C18892 + C18893 + C18894) * C50828) *
               C50967 -
           ((C17333 + C17334 + C17335 + C17336 + C17337 + C17338) * C50828 +
            (C17332 + C17331 + C17330 + C17329 + C17328 + C17327) * C17175) *
               C50966 -
           (((C117 * C2673 + C50790 * C2677) * C17174 +
             (C117 * C2668 + C50790 * C2674) * C17179 + C2696 * C17173 +
             C2695 * C17178 + C3677 * C17172 + C3676 * C17177) *
                C50828 +
            (C18402 + C18401 + C18400 + C18399 + C18398 + C18397) * C17175) *
               C2092) *
              C50729) *
         C50658) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5181 * C122 + C5178 * C129 + C5182 * C463 + C5179 * C477 +
              C5183 * C464 + C5180 * C478) *
                 C19841 +
             (C5181 * C130 + C5178 * C143 + C5182 * C476 + C5179 * C493 +
              C5183 * C479 + C5180 * C494) *
                 C50630) *
                C17175 +
            ((C21895 + C21896 + C21897) * C19841 +
             (C21898 + C21899 + C21900) * C50630) *
                C50828) *
               C50966 -
           (((C22551 + C22552 + C22553) * C50630 +
             (C22554 + C22555 + C22556) * C19841) *
                C50828 +
            ((C5183 * C1856 + C5180 * C1861 + C5182 * C479 + C5179 * C494 +
              C5181 * C476 + C5178 * C493) *
                 C50630 +
             (C5183 * C1849 + C5180 * C1857 + C5182 * C464 + C5179 * C478 +
              C5181 * C463 + C5178 * C477) *
                 C19841) *
                C17175) *
               C50967 +
           (((C5181 * C464 + C5178 * C478 + C5182 * C1849 + C5179 * C1857 +
              C5183 * C5566 + C5180 * C5569) *
                 C19841 +
             (C5181 * C479 + C5178 * C494 + C5182 * C1856 + C5179 * C1861 +
              C5183 * C5570 + C5180 * C5575) *
                 C50630) *
                C17175 +
            ((C22981 + C22982 + C22983) * C19841 +
             (C22984 + C22985 + C22986) * C50630) *
                C50828) *
               C2092) *
              C50919 +
          ((((C22556 + C22555 + C22554) * C19841 +
             (C22553 + C22552 + C22551) * C50630) *
                C17175 +
            ((C23485 + C23486 + C23487) * C19841 +
             (C23488 + C23489 + C23490) * C50630) *
                C50828) *
               C50967 -
           (((C21901 + C21902 + C21903) * C50630 +
             (C21904 + C21905 + C21906) * C19841) *
                C50828 +
            ((C21900 + C21899 + C21898) * C50630 +
             (C21897 + C21896 + C21895) * C19841) *
                C17175) *
               C50966 -
           (((C5183 * C22965 + C5180 * C22967 + C5182 * C4584 + C5179 * C4591 +
              C5181 * C2670 + C5178 * C2675) *
                 C50630 +
             (C5183 * C22964 + C5180 * C22966 + C5182 * C4579 + C5179 * C4585 +
              C5181 * C2666 + C5178 * C2669) *
                 C19841) *
                C50828 +
            ((C22986 + C22985 + C22984) * C50630 +
             (C22983 + C22982 + C22981) * C19841) *
                C17175) *
               C2092) *
              C50729) *
         C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C122 + C50790 * C129) * C17177 +
                 (C117 * C130 + C50790 * C143) * C17172 + C171 * C17178 +
                 C172 * C17173 + C173 * C17179 + C174 * C17174) *
                    C17175 +
                (C17327 + C17328 + C17329 + C17330 + C17331 + C17332) *
                    C50828) *
                   C1676 -
               ((C17989 + C17990 + C17991 + C17992 + C17993 + C17994) * C50828 +
                (C527 * C17174 + C528 * C17179 + C529 * C17173 + C530 * C17178 +
                 (C117 * C476 + C50790 * C493) * C17172 +
                 (C117 * C463 + C50790 * C477) * C17177) *
                    C17175) *
                   C50757) *
                  C50677 * C1027 +
              (((C530 * C17177 + C529 * C17172 + C528 * C17178 + C527 * C17173 +
                 C526 * C17179 + C525 * C17174) *
                    C17175 +
                (C17995 + C17996 + C17997 + C17998 + C17999 + C18000) *
                    C50828) *
                   C50757 -
               ((C17344 + C17343 + C17342 + C17341 + C17340 + C17339) * C50828 +
                (C176 * C17174 + C175 * C17179 + C174 * C17173 + C173 * C17178 +
                 C172 * C17172 + C171 * C17177) *
                    C17175) *
                   C1676) *
                  C50677 * C1028 +
              (((C173 * C17177 + C174 * C17172 + C175 * C17178 + C176 * C17173 +
                 C178 * C17179 + C177 * C17174) *
                    C17175 +
                (C17643 + C17644 + C17645 + C17646 + C17647 + C17648) *
                    C50828) *
                   C1676 -
               (((C117 * C902 + C50790 * C908) * C17174 +
                 (C117 * C893 + C50790 * C903) * C17179 + C927 * C17173 +
                 C926 * C17178 + C925 * C17172 + C924 * C17177) *
                    C50828 +
                (C759 * C17174 + C758 * C17179 + C525 * C17173 + C526 * C17178 +
                 C527 * C17172 + C528 * C17177) *
                    C17175) *
                   C50757) *
                  C50677 * C1029) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C122 + C50790 * C129) * C17177 +
                 (C117 * C130 + C50790 * C143) * C17172 + C171 * C17178 +
                 C172 * C17173 + C173 * C17179 + C174 * C17174) *
                    C17175 +
                (C17327 + C17328 + C17329 + C17330 + C17331 + C17332) *
                    C50828) *
                   C1676 -
               ((C17989 + C17990 + C17991 + C17992 + C17993 + C17994) * C50828 +
                (C527 * C17174 + C528 * C17179 + C529 * C17173 + C530 * C17178 +
                 (C117 * C476 + C50790 * C493) * C17172 +
                 (C117 * C463 + C50790 * C477) * C17177) *
                    C17175) *
                   C50757) *
                  C278 +
              (((C17994 + C17993 + C17992 + C17991 + C17990 + C17989) * C17175 +
                (C18889 + C18890 + C18891 + C18892 + C18893 + C18894) *
                    C50828) *
                   C50757 -
               ((C17333 + C17334 + C17335 + C17336 + C17337 + C17338) * C50828 +
                (C17332 + C17331 + C17330 + C17329 + C17328 + C17327) *
                    C17175) *
                   C1676) *
                  C279 +
              (((C17338 + C17337 + C17336 + C17335 + C17334 + C17333) * C17175 +
                (C18245 + C18246 + C18247 + C18248 + C18249 + C18250) *
                    C50828) *
                   C1676 -
               (((C117 * C3203 + C50790 * C3207) * C17174 +
                 (C117 * C3198 + C50790 * C3204) * C17179 + C3238 * C17173 +
                 C3237 * C17178 + C4185 * C17172 + C4184 * C17177) *
                    C50828 +
                (C18894 + C18893 + C18892 + C18891 + C18890 + C18889) *
                    C17175) *
                   C50757) *
                  C280) *
             C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C17177 +
            (C117 * C130 + C50790 * C143) * C17172 + C171 * C17178 +
            C172 * C17173 + C173 * C17179 + C174 * C17174) *
               C17175 +
           (C17327 + C17328 + C17329 + C17330 + C17331 + C17332) * C50828) *
              C1842 -
          ((C17989 + C17990 + C17991 + C17992 + C17993 + C17994) * C50828 +
           (C527 * C17174 + C528 * C17179 + C529 * C17173 + C530 * C17178 +
            (C117 * C476 + C50790 * C493) * C17172 +
            (C117 * C463 + C50790 * C477) * C17177) *
               C17175) *
              C1843 +
          (((C117 * C464 + C50790 * C478) * C17177 +
            (C117 * C479 + C50790 * C494) * C17172 + C531 * C17178 +
            C532 * C17173 + C533 * C17179 + C534 * C17174) *
               C17175 +
           (C18397 + C18398 + C18399 + C18400 + C18401 + C18402) * C50828) *
              C1844 -
          (((C117 * C6137 + C50790 * C6139) * C17174 +
            (C117 * C6136 + C50790 * C6138) * C17179 +
            (C117 * C4586 + C50790 * C4592) * C17173 +
            (C117 * C4580 + C50790 * C4587) * C17178 +
            (C117 * C4588 + C50790 * C4593) * C17172 +
            (C117 * C4581 + C50790 * C4589) * C17177) *
               C50828 +
           ((C117 * C1852 + C50790 * C1859) * C17174 +
            (C117 * C1847 + C50790 * C1853) * C17179 +
            (C117 * C1854 + C50790 * C1860) * C17173 +
            (C117 * C1848 + C50790 * C1855) * C17178 +
            (C117 * C1856 + C50790 * C1861) * C17172 +
            (C117 * C1849 + C50790 * C1857) * C17177) *
               C17175) *
              C1845) *
         C50677 * C50658) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C19841 +
             (C117 * C130 + C50790 * C143) * C50630) *
                C19837 +
            (C19941 + C19942) * C19838 + C19957 * C19839 + C19958 * C19840) *
               C1676 -
           (C21025 * C19840 + C21026 * C19839 + (C20395 + C20396) * C19838 +
            ((C117 * C476 + C50790 * C493) * C50630 +
             (C117 * C463 + C50790 * C477) * C19841) *
                C19837) *
               C50757) *
              C50677 * C1027 +
          (((C530 * C19841 + C529 * C50630) * C19837 +
            (C20397 + C20398) * C19838 + (C20399 + C20400) * C19839 +
            (C20401 + C20402) * C19840) *
               C50757 -
           (C19959 * C19840 + C19960 * C19839 + (C19950 + C19949) * C19838 +
            (C172 * C50630 + C171 * C19841) * C19837) *
               C1676) *
              C50677 * C1028 +
          (((C173 * C19841 + C174 * C50630) * C19837 +
            (C20157 + C20158) * C19838 + (C20159 + C20160) * C19839 +
            (C20161 + C20162) * C19840) *
               C1676 -
           (((C117 * C3203 + C50790 * C3207) * C50630 +
             (C117 * C3198 + C50790 * C3204) * C19841) *
                C19840 +
            (C3002 * C50630 + C3001 * C19841) * C19839 +
            (C925 * C50630 + C924 * C19841) * C19838 +
            (C527 * C50630 + C528 * C19841) * C19837) *
               C50757) *
              C50677 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C19841 +
             (C117 * C130 + C50790 * C143) * C50630) *
                C19837 +
            (C19941 + C19942) * C19838 + C19957 * C19839 + C19958 * C19840) *
               C1676 -
           (C21025 * C19840 + C21026 * C19839 + (C20395 + C20396) * C19838 +
            ((C117 * C476 + C50790 * C493) * C50630 +
             (C117 * C463 + C50790 * C477) * C19841) *
                C19837) *
               C50757) *
              C278 +
          (((C20396 + C20395) * C19837 + (C20394 + C20393) * C19838 +
            (C20392 + C20391) * C19839 + (C21033 + C21034) * C19840) *
               C50757 -
           (C20571 * C19840 + C20572 * C19839 + (C19944 + C19943) * C19838 +
            (C19942 + C19941) * C19837) *
               C1676) *
              C279 +
          ((C19957 * C19837 + C19958 * C19838 + (C19948 + C19947) * C19839 +
            (C20579 + C20580) * C19840) *
               C1676 -
           (((C117 * C21021 + C50790 * C21023) * C50630 +
             (C117 * C21020 + C50790 * C21022) * C19841) *
                C19840 +
            (C21034 + C21033) * C19839 + C21025 * C19838 + C21026 * C19837) *
               C50757) *
              C280) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C19841 +
            (C117 * C130 + C50790 * C143) * C50630) *
               C19837 +
           (C19941 + C19942) * C19838 + C19957 * C19839 + C19958 * C19840) *
              C1842 -
          (C21025 * C19840 + C21026 * C19839 + (C20395 + C20396) * C19838 +
           ((C117 * C476 + C50790 * C493) * C50630 +
            (C117 * C463 + C50790 * C477) * C19841) *
               C19837) *
              C1843 +
          (((C117 * C464 + C50790 * C478) * C19841 +
            (C117 * C479 + C50790 * C494) * C50630) *
               C19837 +
           (C20683 + C20684) * C19838 + (C20685 + C20686) * C19839 +
           (C20693 + C20694) * C19840) *
              C1844 -
          (((C117 * C21297 + C50790 * C21299) * C50630 +
            (C117 * C21296 + C50790 * C21298) * C19841) *
               C19840 +
           ((C117 * C4584 + C50790 * C4591) * C50630 +
            (C117 * C4579 + C50790 * C4585) * C19841) *
               C19839 +
           ((C117 * C4588 + C50790 * C4593) * C50630 +
            (C117 * C4581 + C50790 * C4589) * C19841) *
               C19838 +
           ((C117 * C1856 + C50790 * C1861) * C50630 +
            (C117 * C1849 + C50790 * C1857) * C19841) *
               C19837) *
              C1845) *
         C50677 * C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C5181 * C122 + C5178 * C129 + C5182 * C463 + C5179 * C477 +
              C5183 * C464 + C5180 * C478) *
                 C19841 +
             (C5181 * C130 + C5178 * C143 + C5182 * C476 + C5179 * C493 +
              C5183 * C479 + C5180 * C494) *
                 C50630) *
                C17175 +
            ((C21895 + C21896 + C21897) * C19841 +
             (C21898 + C21899 + C21900) * C50630) *
                C50828) *
               C1676 -
           (((C22551 + C22552 + C22553) * C50630 +
             (C22554 + C22555 + C22556) * C19841) *
                C50828 +
            ((C5183 * C1856 + C5180 * C1861 + C5182 * C479 + C5179 * C494 +
              C5181 * C476 + C5178 * C493) *
                 C50630 +
             (C5183 * C1849 + C5180 * C1857 + C5182 * C464 + C5179 * C478 +
              C5181 * C463 + C5178 * C477) *
                 C19841) *
                C17175) *
               C50757) *
              C50677 * C1027 +
          ((((C5608 + C5607 + C5606) * C19841 +
             (C5605 + C5604 + C5603) * C50630) *
                C17175 +
            ((C6153 + C6154 + C6155) * C19841 +
             (C6156 + C6157 + C6158) * C50630) *
                C50828) *
               C50757 -
           (((C5409 + C5410 + C5411) * C50630 +
             (C5412 + C5413 + C5414) * C19841) *
                C50828 +
            ((C5226 + C5225 + C5224) * C50630 +
             (C5223 + C5222 + C5221) * C19841) *
                C17175) *
               C1676) *
              C50677 * C1028 +
          ((((C5232 + C5231 + C5230) * C19841 +
             (C5229 + C5228 + C5227) * C50630) *
                C17175 +
            ((C5773 + C5774 + C5775) * C19841 +
             (C5776 + C5777 + C5778) * C50630) *
                C50828) *
               C1676 -
           (((C5183 * C6137 + C5180 * C6139 + C5182 * C1221 + C5179 * C1228 +
              C5181 * C899 + C5178 * C906) *
                 C50630 +
             (C5183 * C6136 + C5180 * C6138 + C5182 * C1216 + C5179 * C1222 +
              C5181 * C891 + C5178 * C898) *
                 C19841) *
                C50828 +
            ((C5942 + C5941 + C5940) * C50630 +
             (C5939 + C5938 + C5937) * C19841) *
                C17175) *
               C50757) *
              C50677 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C5181 * C122 + C5178 * C129 + C5182 * C463 + C5179 * C477 +
              C5183 * C464 + C5180 * C478) *
                 C19841 +
             (C5181 * C130 + C5178 * C143 + C5182 * C476 + C5179 * C493 +
              C5183 * C479 + C5180 * C494) *
                 C50630) *
                C17175 +
            ((C21895 + C21896 + C21897) * C19841 +
             (C21898 + C21899 + C21900) * C50630) *
                C50828) *
               C1676 -
           (((C22551 + C22552 + C22553) * C50630 +
             (C22554 + C22555 + C22556) * C19841) *
                C50828 +
            ((C5183 * C1856 + C5180 * C1861 + C5182 * C479 + C5179 * C494 +
              C5181 * C476 + C5178 * C493) *
                 C50630 +
             (C5183 * C1849 + C5180 * C1857 + C5182 * C464 + C5179 * C478 +
              C5181 * C463 + C5178 * C477) *
                 C19841) *
                C17175) *
               C50757) *
              C278 +
          ((((C22556 + C22555 + C22554) * C19841 +
             (C22553 + C22552 + C22551) * C50630) *
                C17175 +
            ((C23485 + C23486 + C23487) * C19841 +
             (C23488 + C23489 + C23490) * C50630) *
                C50828) *
               C50757 -
           (((C21901 + C21902 + C21903) * C50630 +
             (C21904 + C21905 + C21906) * C19841) *
                C50828 +
            ((C21900 + C21899 + C21898) * C50630 +
             (C21897 + C21896 + C21895) * C19841) *
                C17175) *
               C1676) *
              C279 +
          ((((C21906 + C21905 + C21904) * C19841 +
             (C21903 + C21902 + C21901) * C50630) *
                C17175 +
            ((C22813 + C22814 + C22815) * C19841 +
             (C22816 + C22817 + C22818) * C50630) *
                C50828) *
               C1676 -
           (((C5183 * C21297 + C5180 * C21299 + C5182 * C3657 + C5179 * C3660 +
              C5181 * C3200 + C5178 * C3205) *
                 C50630 +
             (C5183 * C21296 + C5180 * C21298 + C5182 * C3654 + C5179 * C3658 +
              C5181 * C3196 + C5178 * C3199) *
                 C19841) *
                C50828 +
            ((C23490 + C23489 + C23488) * C50630 +
             (C23487 + C23486 + C23485) * C19841) *
                C17175) *
               C50757) *
              C280) *
         C50658) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C5181 * C122 + C5178 * C129 + C5182 * C463 + C5179 * C477 +
             C5183 * C464 + C5180 * C478) *
                C19841 +
            (C5181 * C130 + C5178 * C143 + C5182 * C476 + C5179 * C493 +
             C5183 * C479 + C5180 * C494) *
                C50630) *
               C17175 +
           ((C21895 + C21896 + C21897) * C19841 +
            (C21898 + C21899 + C21900) * C50630) *
               C50828) *
              C1842 -
          (((C22551 + C22552 + C22553) * C50630 +
            (C22554 + C22555 + C22556) * C19841) *
               C50828 +
           ((C5183 * C1856 + C5180 * C1861 + C5182 * C479 + C5179 * C494 +
             C5181 * C476 + C5178 * C493) *
                C50630 +
            (C5183 * C1849 + C5180 * C1857 + C5182 * C464 + C5179 * C478 +
             C5181 * C463 + C5178 * C477) *
                C19841) *
               C17175) *
              C1843 +
          (((C5181 * C464 + C5178 * C478 + C5182 * C1849 + C5179 * C1857 +
             C5183 * C5566 + C5180 * C5569) *
                C19841 +
            (C5181 * C479 + C5178 * C494 + C5182 * C1856 + C5179 * C1861 +
             C5183 * C5570 + C5180 * C5575) *
                C50630) *
               C17175 +
           ((C22981 + C22982 + C22983) * C19841 +
            (C22984 + C22985 + C22986) * C50630) *
               C50828) *
              C1844 -
          (((C5183 * C23881 + C5180 * C23883 + C5182 * C6552 + C5179 * C6555 +
             C5181 * C4588 + C5178 * C4593) *
                C50630 +
            (C5183 * C23880 + C5180 * C23882 + C5182 * C6549 + C5179 * C6553 +
             C5181 * C4581 + C5178 * C4589) *
                C19841) *
               C50828 +
           ((C5183 * C7436 + C5180 * C7439 + C5182 * C5570 + C5179 * C5575 +
             C5181 * C1856 + C5178 * C1861) *
                C50630 +
            (C5183 * C7433 + C5180 * C7437 + C5182 * C5566 + C5179 * C5569 +
             C5181 * C1849 + C5178 * C1857) *
                C19841) *
               C17175) *
              C1845) *
         C50677 * C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C19841 +
             (C117 * C130 + C50790 * C143) * C50630) *
                C19837 +
            (C19941 + C19942) * C19838 + C19957 * C19839 + C19958 * C19840) *
               C50966 -
           (C21025 * C19840 + C21026 * C19839 + (C20395 + C20396) * C19838 +
            ((C117 * C476 + C50790 * C493) * C50630 +
             (C117 * C463 + C50790 * C477) * C19841) *
                C19837) *
               C50967 +
           (((C117 * C464 + C50790 * C478) * C19841 +
             (C117 * C479 + C50790 * C494) * C50630) *
                C19837 +
            (C20683 + C20684) * C19838 + (C20685 + C20686) * C19839 +
            (C20693 + C20694) * C19840) *
               C2092) *
              C50677 * C50911 +
          (((C530 * C19841 + C529 * C50630) * C19837 +
            (C20397 + C20398) * C19838 + (C20399 + C20400) * C19839 +
            (C20401 + C20402) * C19840) *
               C50967 -
           (C19959 * C19840 + C19960 * C19839 + (C19950 + C19949) * C19838 +
            (C172 * C50630 + C171 * C19841) * C19837) *
               C50966 -
           (((C117 * C3655 + C50790 * C3659) * C50630 +
             (C117 * C3653 + C50790 * C3656) * C19841) *
                C19840 +
            (C2696 * C50630 + C2695 * C19841) * C19839 +
            (C2694 * C50630 + C2693 * C19841) * C19838 +
            (C532 * C50630 + C531 * C19841) * C19837) *
               C2092) *
              C50677 * C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C17177 +
             (C117 * C130 + C50790 * C143) * C17172 + C171 * C17178 +
             C172 * C17173 + C173 * C17179 + C174 * C17174) *
                C17175 +
            (C17327 + C17328 + C17329 + C17330 + C17331 + C17332) * C50828) *
               C50966 -
           ((C17989 + C17990 + C17991 + C17992 + C17993 + C17994) * C50828 +
            (C527 * C17174 + C528 * C17179 + C529 * C17173 + C530 * C17178 +
             (C117 * C476 + C50790 * C493) * C17172 +
             (C117 * C463 + C50790 * C477) * C17177) *
                C17175) *
               C50967 +
           (((C117 * C464 + C50790 * C478) * C17177 +
             (C117 * C479 + C50790 * C494) * C17172 + C531 * C17178 +
             C532 * C17173 + C533 * C17179 + C534 * C17174) *
                C17175 +
            (C18397 + C18398 + C18399 + C18400 + C18401 + C18402) * C50828) *
               C2092) *
              C50677 * C50911 +
          (((C530 * C17177 + C529 * C17172 + C528 * C17178 + C527 * C17173 +
             C526 * C17179 + C525 * C17174) *
                C17175 +
            (C17995 + C17996 + C17997 + C17998 + C17999 + C18000) * C50828) *
               C50967 -
           ((C17344 + C17343 + C17342 + C17341 + C17340 + C17339) * C50828 +
            (C176 * C17174 + C175 * C17179 + C174 * C17173 + C173 * C17178 +
             C172 * C17172 + C171 * C17177) *
                C17175) *
               C50966 -
           (((C117 * C1219 + C50790 * C1227) * C17174 +
             (C117 * C1215 + C50790 * C1220) * C17179 + C8354 * C17173 +
             C8353 * C17178 + C2694 * C17172 + C2693 * C17177) *
                C50828 +
            (C536 * C17174 + C535 * C17179 + C534 * C17173 + C533 * C17178 +
             C532 * C17172 + C531 * C17177) *
                C17175) *
               C2092) *
              C50677 * C50664)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5181 * C122 + C5178 * C129 + C5182 * C463 + C5179 * C477 +
              C5183 * C464 + C5180 * C478) *
                 C19841 +
             (C5181 * C130 + C5178 * C143 + C5182 * C476 + C5179 * C493 +
              C5183 * C479 + C5180 * C494) *
                 C50630) *
                C17175 +
            ((C21895 + C21896 + C21897) * C19841 +
             (C21898 + C21899 + C21900) * C50630) *
                C50828) *
               C50966 -
           (((C22551 + C22552 + C22553) * C50630 +
             (C22554 + C22555 + C22556) * C19841) *
                C50828 +
            ((C5183 * C1856 + C5180 * C1861 + C5182 * C479 + C5179 * C494 +
              C5181 * C476 + C5178 * C493) *
                 C50630 +
             (C5183 * C1849 + C5180 * C1857 + C5182 * C464 + C5179 * C478 +
              C5181 * C463 + C5178 * C477) *
                 C19841) *
                C17175) *
               C50967 +
           (((C5181 * C464 + C5178 * C478 + C5182 * C1849 + C5179 * C1857 +
              C5183 * C5566 + C5180 * C5569) *
                 C19841 +
             (C5181 * C479 + C5178 * C494 + C5182 * C1856 + C5179 * C1861 +
              C5183 * C5570 + C5180 * C5575) *
                 C50630) *
                C17175 +
            ((C22981 + C22982 + C22983) * C19841 +
             (C22984 + C22985 + C22986) * C50630) *
                C50828) *
               C2092) *
              C50677 * C50911 +
          ((((C5608 + C5607 + C5606) * C19841 +
             (C5605 + C5604 + C5603) * C50630) *
                C17175 +
            ((C6153 + C6154 + C6155) * C19841 +
             (C6156 + C6157 + C6158) * C50630) *
                C50828) *
               C50967 -
           (((C5409 + C5410 + C5411) * C50630 +
             (C5412 + C5413 + C5414) * C19841) *
                C50828 +
            ((C5226 + C5225 + C5224) * C50630 +
             (C5223 + C5222 + C5221) * C19841) *
                C17175) *
               C50966 -
           (((C5183 * C6550 + C5180 * C6554 + C5182 * C4586 + C5179 * C4592 +
              C5181 * C1223 + C5178 * C1229) *
                 C50630 +
             (C5183 * C6548 + C5180 * C6551 + C5182 * C4580 + C5179 * C4587 +
              C5181 * C1217 + C5178 * C1224) *
                 C19841) *
                C50828 +
            ((C5614 + C5613 + C5612) * C50630 +
             (C5611 + C5610 + C5609) * C19841) *
                C17175) *
               C2092) *
              C50677 * C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C17177 +
             (C117 * C130 + C50790 * C143) * C17172 + C171 * C17178 +
             C172 * C17173 + C173 * C17179 + C174 * C17174) *
                C17175 +
            (C17327 + C17328 + C17329 + C17330 + C17331 + C17332) * C50828) *
               C1676 -
           ((C17989 + C17990 + C17991 + C17992 + C17993 + C17994) * C50828 +
            (C527 * C17174 + C528 * C17179 + C529 * C17173 + C530 * C17178 +
             (C117 * C476 + C50790 * C493) * C17172 +
             (C117 * C463 + C50790 * C477) * C17177) *
                C17175) *
               C50757) *
              C278 +
          (((C17994 + C17993 + C17992 + C17991 + C17990 + C17989) * C17175 +
            (C18889 + C18890 + C18891 + C18892 + C18893 + C18894) * C50828) *
               C50757 -
           ((C17333 + C17334 + C17335 + C17336 + C17337 + C17338) * C50828 +
            (C17332 + C17331 + C17330 + C17329 + C17328 + C17327) * C17175) *
               C1676) *
              C279 +
          (((C17338 + C17337 + C17336 + C17335 + C17334 + C17333) * C17175 +
            (C18245 + C18246 + C18247 + C18248 + C18249 + C18250) * C50828) *
               C1676 -
           (((C117 * C3203 + C50790 * C3207) * C17174 +
             (C117 * C3198 + C50790 * C3204) * C17179 + C3238 * C17173 +
             C3237 * C17178 + C4185 * C17172 + C4184 * C17177) *
                C50828 +
            (C18894 + C18893 + C18892 + C18891 + C18890 + C18889) * C17175) *
               C50757) *
              C280) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C17177 +
             (C117 * C130 + C50790 * C143) * C17172 + C171 * C17178 +
             C172 * C17173 + C173 * C17179 + C174 * C17174) *
                C17175 +
            (C17327 + C17328 + C17329 + C17330 + C17331 + C17332) * C50828) *
               C1676 -
           ((C17989 + C17990 + C17991 + C17992 + C17993 + C17994) * C50828 +
            (C527 * C17174 + C528 * C17179 + C529 * C17173 + C530 * C17178 +
             (C117 * C476 + C50790 * C493) * C17172 +
             (C117 * C463 + C50790 * C477) * C17177) *
                C17175) *
               C50757) *
              C50677 * C1027 +
          (((C530 * C17177 + C529 * C17172 + C528 * C17178 + C527 * C17173 +
             C526 * C17179 + C525 * C17174) *
                C17175 +
            (C17995 + C17996 + C17997 + C17998 + C17999 + C18000) * C50828) *
               C50757 -
           ((C17344 + C17343 + C17342 + C17341 + C17340 + C17339) * C50828 +
            (C176 * C17174 + C175 * C17179 + C174 * C17173 + C173 * C17178 +
             C172 * C17172 + C171 * C17177) *
                C17175) *
               C1676) *
              C50677 * C1028 +
          (((C173 * C17177 + C174 * C17172 + C175 * C17178 + C176 * C17173 +
             C178 * C17179 + C177 * C17174) *
                C17175 +
            (C17643 + C17644 + C17645 + C17646 + C17647 + C17648) * C50828) *
               C1676 -
           (((C117 * C902 + C50790 * C908) * C17174 +
             (C117 * C893 + C50790 * C903) * C17179 + C927 * C17173 +
             C926 * C17178 + C925 * C17172 + C924 * C17177) *
                C50828 +
            (C759 * C17174 + C758 * C17179 + C525 * C17173 + C526 * C17178 +
             C527 * C17172 + C528 * C17177) *
                C17175) *
               C50757) *
              C50677 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C19841 +
             (C117 * C130 + C50790 * C143) * C50630) *
                C19837 +
            (C19941 + C19942) * C19838 + C19957 * C19839 + C19958 * C19840) *
               C1676 -
           (C21025 * C19840 + C21026 * C19839 + (C20395 + C20396) * C19838 +
            ((C117 * C476 + C50790 * C493) * C50630 +
             (C117 * C463 + C50790 * C477) * C19841) *
                C19837) *
               C50757) *
              C50677 * C1027 +
          (((C530 * C19841 + C529 * C50630) * C19837 +
            (C20397 + C20398) * C19838 + (C20399 + C20400) * C19839 +
            (C20401 + C20402) * C19840) *
               C50757 -
           (C19959 * C19840 + C19960 * C19839 + (C19950 + C19949) * C19838 +
            (C172 * C50630 + C171 * C19841) * C19837) *
               C1676) *
              C50677 * C1028 +
          (((C173 * C19841 + C174 * C50630) * C19837 +
            (C20157 + C20158) * C19838 + (C20159 + C20160) * C19839 +
            (C20161 + C20162) * C19840) *
               C1676 -
           (((C117 * C3203 + C50790 * C3207) * C50630 +
             (C117 * C3198 + C50790 * C3204) * C19841) *
                C19840 +
            (C3002 * C50630 + C3001 * C19841) * C19839 +
            (C925 * C50630 + C924 * C19841) * C19838 +
            (C527 * C50630 + C528 * C19841) * C19837) *
               C50757) *
              C50677 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C19841 +
             (C117 * C130 + C50790 * C143) * C50630) *
                C19837 +
            (C19941 + C19942) * C19838 + C19957 * C19839 + C19958 * C19840) *
               C1676 -
           (C21025 * C19840 + C21026 * C19839 + (C20395 + C20396) * C19838 +
            ((C117 * C476 + C50790 * C493) * C50630 +
             (C117 * C463 + C50790 * C477) * C19841) *
                C19837) *
               C50757) *
              C278 +
          (((C20396 + C20395) * C19837 + (C20394 + C20393) * C19838 +
            (C20392 + C20391) * C19839 + (C21033 + C21034) * C19840) *
               C50757 -
           (C20571 * C19840 + C20572 * C19839 + (C19944 + C19943) * C19838 +
            (C19942 + C19941) * C19837) *
               C1676) *
              C279 +
          ((C19957 * C19837 + C19958 * C19838 + (C19948 + C19947) * C19839 +
            (C20579 + C20580) * C19840) *
               C1676 -
           (((C117 * C21021 + C50790 * C21023) * C50630 +
             (C117 * C21020 + C50790 * C21022) * C19841) *
                C19840 +
            (C21034 + C21033) * C19839 + C21025 * C19838 + C21026 * C19837) *
               C50757) *
              C280) *
         C50658) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5181 * C122 + C5178 * C129 + C5182 * C463 + C5179 * C477 +
              C5183 * C464 + C5180 * C478) *
                 C19841 +
             (C5181 * C130 + C5178 * C143 + C5182 * C476 + C5179 * C493 +
              C5183 * C479 + C5180 * C494) *
                 C50630) *
                C17175 +
            ((C21895 + C21896 + C21897) * C19841 +
             (C21898 + C21899 + C21900) * C50630) *
                C50828) *
               C1676 -
           (((C22551 + C22552 + C22553) * C50630 +
             (C22554 + C22555 + C22556) * C19841) *
                C50828 +
            ((C5183 * C1856 + C5180 * C1861 + C5182 * C479 + C5179 * C494 +
              C5181 * C476 + C5178 * C493) *
                 C50630 +
             (C5183 * C1849 + C5180 * C1857 + C5182 * C464 + C5179 * C478 +
              C5181 * C463 + C5178 * C477) *
                 C19841) *
                C17175) *
               C50757) *
              C50677 * C1027 +
          ((((C5608 + C5607 + C5606) * C19841 +
             (C5605 + C5604 + C5603) * C50630) *
                C17175 +
            ((C6153 + C6154 + C6155) * C19841 +
             (C6156 + C6157 + C6158) * C50630) *
                C50828) *
               C50757 -
           (((C5409 + C5410 + C5411) * C50630 +
             (C5412 + C5413 + C5414) * C19841) *
                C50828 +
            ((C5226 + C5225 + C5224) * C50630 +
             (C5223 + C5222 + C5221) * C19841) *
                C17175) *
               C1676) *
              C50677 * C1028 +
          ((((C5232 + C5231 + C5230) * C19841 +
             (C5229 + C5228 + C5227) * C50630) *
                C17175 +
            ((C5773 + C5774 + C5775) * C19841 +
             (C5776 + C5777 + C5778) * C50630) *
                C50828) *
               C1676 -
           (((C5183 * C6137 + C5180 * C6139 + C5182 * C1221 + C5179 * C1228 +
              C5181 * C899 + C5178 * C906) *
                 C50630 +
             (C5183 * C6136 + C5180 * C6138 + C5182 * C1216 + C5179 * C1222 +
              C5181 * C891 + C5178 * C898) *
                 C19841) *
                C50828 +
            ((C5942 + C5941 + C5940) * C50630 +
             (C5939 + C5938 + C5937) * C19841) *
                C17175) *
               C50757) *
              C50677 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C5181 * C122 + C5178 * C129 + C5182 * C463 + C5179 * C477 +
              C5183 * C464 + C5180 * C478) *
                 C19841 +
             (C5181 * C130 + C5178 * C143 + C5182 * C476 + C5179 * C493 +
              C5183 * C479 + C5180 * C494) *
                 C50630) *
                C17175 +
            ((C21895 + C21896 + C21897) * C19841 +
             (C21898 + C21899 + C21900) * C50630) *
                C50828) *
               C1676 -
           (((C22551 + C22552 + C22553) * C50630 +
             (C22554 + C22555 + C22556) * C19841) *
                C50828 +
            ((C5183 * C1856 + C5180 * C1861 + C5182 * C479 + C5179 * C494 +
              C5181 * C476 + C5178 * C493) *
                 C50630 +
             (C5183 * C1849 + C5180 * C1857 + C5182 * C464 + C5179 * C478 +
              C5181 * C463 + C5178 * C477) *
                 C19841) *
                C17175) *
               C50757) *
              C278 +
          ((((C22556 + C22555 + C22554) * C19841 +
             (C22553 + C22552 + C22551) * C50630) *
                C17175 +
            ((C23485 + C23486 + C23487) * C19841 +
             (C23488 + C23489 + C23490) * C50630) *
                C50828) *
               C50757 -
           (((C21901 + C21902 + C21903) * C50630 +
             (C21904 + C21905 + C21906) * C19841) *
                C50828 +
            ((C21900 + C21899 + C21898) * C50630 +
             (C21897 + C21896 + C21895) * C19841) *
                C17175) *
               C1676) *
              C279 +
          ((((C21906 + C21905 + C21904) * C19841 +
             (C21903 + C21902 + C21901) * C50630) *
                C17175 +
            ((C22813 + C22814 + C22815) * C19841 +
             (C22816 + C22817 + C22818) * C50630) *
                C50828) *
               C1676 -
           (((C5183 * C21297 + C5180 * C21299 + C5182 * C3657 + C5179 * C3660 +
              C5181 * C3200 + C5178 * C3205) *
                 C50630 +
             (C5183 * C21296 + C5180 * C21298 + C5182 * C3654 + C5179 * C3658 +
              C5181 * C3196 + C5178 * C3199) *
                 C19841) *
                C50828 +
            ((C23490 + C23489 + C23488) * C50630 +
             (C23487 + C23486 + C23485) * C19841) *
                C17175) *
               C50757) *
              C280) *
         C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C49749 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C50904 +
             (C10763 + C10764) * C49742 + (C10765 + C10766) * C50635) *
                C17175 +
            ((C13817 + C13818) * C49749 + (C13819 + C13820) * C50904 +
             C13793 * C49742 + C13794 * C50635) *
                C50828) *
               C50693 * C50919 -
           ((C13795 * C50635 + C13796 * C49742 + (C13821 + C13822) * C50904 +
             (C13823 + C13824) * C49749) *
                C50828 +
            (C13805 * C50635 + C13806 * C49742 + (C13820 + C13819) * C50904 +
             (C13818 + C13817) * C49749) *
                C17175) *
               C50693 * C50729) *
              C50962 +
          (((C13793 * C49749 + C13794 * C50904 + C14229 * C49742 +
             C14230 * C50635) *
                C17175 +
            (C13807 * C49749 + C13808 * C50904 + (C10973 + C10974) * C49742 +
             (C10975 + C10976) * C50635) *
                C50828) *
               C50693 * C50729 -
           ((C11317 * C50635 + C11318 * C49742 + C13805 * C50904 +
             C13806 * C49749) *
                C50828 +
            ((C10770 + C10769) * C50635 + (C10768 + C10767) * C49742 +
             (C10766 + C10765) * C50904 + (C10764 + C10763) * C49749) *
                C17175) *
               C50693 * C50919) *
              C50963 +
          (((C10779 * C49749 + C10780 * C50904 + (C10774 + C10773) * C49742 +
             (C10772 + C10771) * C50635) *
                C17175 +
            (C14229 * C49749 + C14230 * C50904 + (C11327 + C11328) * C49742 +
             (C11329 + C11330) * C50635) *
                C50828) *
               C50693 * C50919 -
           (((C10729 * C1566 + C50854 * C1574 + C10728 * C308 + C50933 * C320) *
                 C50635 +
             (C10729 * C1562 + C50854 * C1567 + C10728 * C290 + C50933 * C307) *
                 C49742 +
             (C10976 + C10975) * C50904 + (C10974 + C10973) * C49749) *
                C50828 +
            ((C11330 + C11329) * C50635 + (C11328 + C11327) * C49742 +
             C11317 * C50904 + C11318 * C49749) *
                C17175) *
               C50693 * C50729) *
              C638)) /
        (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                  C49749 +
              (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                  C50904 +
              (C10763 + C10764) * C49742 + (C10765 + C10766) * C50635) *
                 C17175 +
             ((C13817 + C13818) * C49749 + (C13819 + C13820) * C50904 +
              C13793 * C49742 + C13794 * C50635) *
                 C50828) *
                C50920 -
            ((C14683 * C50635 + C14684 * C49742 + (C14703 + C14704) * C50904 +
              (C14705 + C14706) * C49749) *
                 C50828 +
             ((C11159 + C11160) * C50635 + (C11161 + C11162) * C49742 +
              (C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                  C50904 +
              (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                  C49749) *
                 C17175) *
                C50757) *
               C50919 +
           ((((C14706 + C14705) * C49749 + (C14704 + C14703) * C50904 +
              C14693 * C49742 + C14694 * C50635) *
                 C17175 +
             ((C15907 + C15908) * C49749 + (C15909 + C15910) * C50904 +
              (C14707 + C14708) * C49742 + (C14709 + C14710) * C50635) *
                 C50828) *
                C50757 -
            ((C13795 * C50635 + C13796 * C49742 + (C13821 + C13822) * C50904 +
              (C13823 + C13824) * C49749) *
                 C50828 +
             (C13805 * C50635 + C13806 * C49742 + (C13820 + C13819) * C50904 +
              (C13818 + C13817) * C49749) *
                 C17175) *
                C50920) *
               C50729) *
              C281 +
          (((((C11162 + C11161) * C49749 + (C11160 + C11159) * C50904 +
              (C11158 + C11157) * C49742 + (C11156 + C11155) * C50635) *
                 C17175 +
             (C14693 * C49749 + C14694 * C50904 + (C11705 + C11706) * C49742 +
              (C11707 + C11708) * C50635) *
                 C50828) *
                C50757 -
            ((C11317 * C50635 + C11318 * C49742 + C13805 * C50904 +
              C13806 * C49749) *
                 C50828 +
             ((C10770 + C10769) * C50635 + (C10768 + C10767) * C49742 +
              (C10766 + C10765) * C50904 + (C10764 + C10763) * C49749) *
                 C17175) *
                C50920) *
               C50919 +
           (((C13793 * C49749 + C13794 * C50904 + C14229 * C49742 +
              C14230 * C50635) *
                 C17175 +
             (C13807 * C49749 + C13808 * C50904 + (C10973 + C10974) * C49742 +
              (C10975 + C10976) * C50635) *
                 C50828) *
                C50920 -
            (((C10729 * C2673 + C50854 * C2677 + C10728 * C1568 +
               C50933 * C1575) *
                  C50635 +
              (C10729 * C2668 + C50854 * C2674 + C10728 * C1563 +
               C50933 * C1569) *
                  C49742 +
              (C14710 + C14709) * C50904 + (C14708 + C14707) * C49749) *
                 C50828 +
             ((C11708 + C11707) * C50635 + (C11706 + C11705) * C49742 +
              C14683 * C50904 + C14684 * C49749) *
                 C17175) *
                C50757) *
               C50729) *
              C50664)) /
        (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C49749 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C50904 +
             (C10763 + C10764) * C49742 + (C10765 + C10766) * C50635) *
                C17175 +
            ((C13817 + C13818) * C49749 + (C13819 + C13820) * C50904 +
             C13793 * C49742 + C13794 * C50635) *
                C50828) *
               C50693 * C278 -
           ((C13795 * C50635 + C13796 * C49742 + (C13821 + C13822) * C50904 +
             (C13823 + C13824) * C49749) *
                C50828 +
            (C13805 * C50635 + C13806 * C49742 + (C13820 + C13819) * C50904 +
             (C13818 + C13817) * C49749) *
                C17175) *
               C50693 * C279 +
           (((C13824 + C13823) * C49749 + (C13822 + C13821) * C50904 +
             C13807 * C49742 + C13808 * C50635) *
                C17175 +
            ((C15043 + C15044) * C49749 + (C15045 + C15046) * C50904 +
             (C13825 + C13826) * C49742 + (C13827 + C13828) * C50635) *
                C50828) *
               C50693 * C280) *
              C281 +
          (((C13793 * C49749 + C13794 * C50904 + C14229 * C49742 +
             C14230 * C50635) *
                C17175 +
            (C13807 * C49749 + C13808 * C50904 + (C10973 + C10974) * C49742 +
             (C10975 + C10976) * C50635) *
                C50828) *
               C50693 * C279 -
           ((C11317 * C50635 + C11318 * C49742 + C13805 * C50904 +
             C13806 * C49749) *
                C50828 +
            ((C10770 + C10769) * C50635 + (C10768 + C10767) * C49742 +
             (C10766 + C10765) * C50904 + (C10764 + C10763) * C49749) *
                C17175) *
               C50693 * C278 -
           (((C10729 * C3203 + C50854 * C3207 + C10728 * C1107 +
              C50933 * C1114) *
                 C50635 +
             (C10729 * C3198 + C50854 * C3204 + C10728 * C1102 +
              C50933 * C1108) *
                 C49742 +
             (C13828 + C13827) * C50904 + (C13826 + C13825) * C49749) *
                C50828 +
            ((C10976 + C10975) * C50635 + (C10974 + C10973) * C49742 +
             C13795 * C50904 + C13796 * C49749) *
                C17175) *
               C50693 * C280) *
              C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                C49749 +
            (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                C50904 +
            (C10763 + C10764) * C49742 + (C10765 + C10766) * C50635) *
               C17175 +
           ((C13817 + C13818) * C49749 + (C13819 + C13820) * C50904 +
            C13793 * C49742 + C13794 * C50635) *
               C50828) *
              C50693 * C50677 * C113 -
          ((C11317 * C50635 + C11318 * C49742 + C13805 * C50904 +
            C13806 * C49749) *
               C50828 +
           ((C10770 + C10769) * C50635 + (C10768 + C10767) * C49742 +
            (C10766 + C10765) * C50904 + (C10764 + C10763) * C49749) *
               C17175) *
              C50693 * C50677 * C114 +
          ((C10779 * C49749 + C10780 * C50904 + (C10774 + C10773) * C49742 +
            (C10772 + C10771) * C50635) *
               C17175 +
           (C14229 * C49749 + C14230 * C50904 + (C11327 + C11328) * C49742 +
            (C11329 + C11330) * C50635) *
               C50828) *
              C50693 * C50677 * C115 -
          (((C10729 * C902 + C50854 * C908 + C10728 * C310 + C50933 * C321) *
                C50635 +
            (C10729 * C893 + C50854 * C903 + C10728 * C291 + C50933 * C309) *
                C49742 +
            (C11330 + C11329) * C50904 + (C11328 + C11327) * C49749) *
               C50828 +
           ((C10778 + C10777) * C50635 + (C10776 + C10775) * C49742 +
            C10781 * C50904 + C10782 * C49749) *
               C17175) *
              C50693 * C50677 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C49749 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C50904 +
             (C10763 + C10764) * C49742 + (C10765 + C10766) * C50635) *
                C17175 +
            ((C13817 + C13818) * C49749 + (C13819 + C13820) * C50904 +
             C13793 * C49742 + C13794 * C50635) *
                C50828) *
               C457 -
           ((C14683 * C50635 + C14684 * C49742 + (C14703 + C14704) * C50904 +
             (C14705 + C14706) * C49749) *
                C50828 +
            ((C11159 + C11160) * C50635 + (C11161 + C11162) * C49742 +
             (C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                 C50904 +
             (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                 C49749) *
                C17175) *
               C458 +
           (((C10728 * C464 + C50933 * C478 + C10729 * C1849 + C50854 * C1857) *
                 C49749 +
             (C10728 * C479 + C50933 * C494 + C10729 * C1856 + C50854 * C1861) *
                 C50904 +
             (C11163 + C11164) * C49742 + (C11165 + C11166) * C50635) *
                C17175 +
            ((C15249 + C15250) * C49749 + (C15251 + C15252) * C50904 +
             (C14031 + C14032) * C49742 + (C14033 + C14034) * C50635) *
                C50828) *
               C459) *
              C50677 * C281 +
          ((((C11162 + C11161) * C49749 + (C11160 + C11159) * C50904 +
             (C11158 + C11157) * C49742 + (C11156 + C11155) * C50635) *
                C17175 +
            (C14693 * C49749 + C14694 * C50904 + (C11705 + C11706) * C49742 +
             (C11707 + C11708) * C50635) *
                C50828) *
               C458 -
           ((C11317 * C50635 + C11318 * C49742 + C13805 * C50904 +
             C13806 * C49749) *
                C50828 +
            ((C10770 + C10769) * C50635 + (C10768 + C10767) * C49742 +
             (C10766 + C10765) * C50904 + (C10764 + C10763) * C49749) *
                C17175) *
               C457 -
           (((C10729 * C6137 + C50854 * C6139 + C10728 * C1221 +
              C50933 * C1228) *
                 C50635 +
             (C10729 * C6136 + C50854 * C6138 + C10728 * C1216 +
              C50933 * C1222) *
                 C49742 +
             (C14034 + C14033) * C50904 + (C14032 + C14031) * C49749) *
                C50828 +
            ((C11170 + C11169) * C50635 + (C11168 + C11167) * C49742 +
             (C11166 + C11165) * C50904 + (C11164 + C11163) * C49749) *
                C17175) *
               C459) *
              C50677 * C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C49749 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C50904 +
             (C10763 + C10764) * C49742 + (C10765 + C10766) * C50635) *
                C17175 +
            ((C13817 + C13818) * C49749 + (C13819 + C13820) * C50904 +
             C13793 * C49742 + C13794 * C50635) *
                C50828) *
               C50920 -
           ((C14683 * C50635 + C14684 * C49742 + (C14703 + C14704) * C50904 +
             (C14705 + C14706) * C49749) *
                C50828 +
            ((C11159 + C11160) * C50635 + (C11161 + C11162) * C49742 +
             (C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                 C50904 +
             (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                 C49749) *
                C17175) *
               C50757) *
              C50677 * C50962 +
          ((((C11162 + C11161) * C49749 + (C11160 + C11159) * C50904 +
             (C11158 + C11157) * C49742 + (C11156 + C11155) * C50635) *
                C17175 +
            (C14693 * C49749 + C14694 * C50904 + (C11705 + C11706) * C49742 +
             (C11707 + C11708) * C50635) *
                C50828) *
               C50757 -
           ((C11317 * C50635 + C11318 * C49742 + C13805 * C50904 +
             C13806 * C49749) *
                C50828 +
            ((C10770 + C10769) * C50635 + (C10768 + C10767) * C49742 +
             (C10766 + C10765) * C50904 + (C10764 + C10763) * C49749) *
                C17175) *
               C50920) *
              C50677 * C50963 +
          (((C10779 * C49749 + C10780 * C50904 + (C10774 + C10773) * C49742 +
             (C10772 + C10771) * C50635) *
                C17175 +
            (C14229 * C49749 + C14230 * C50904 + (C11327 + C11328) * C49742 +
             (C11329 + C11330) * C50635) *
                C50828) *
               C50920 -
           (((C10729 * C1219 + C50854 * C1227 + C10728 * C901 + C50933 * C907) *
                 C50635 +
             (C10729 * C1215 + C50854 * C1220 + C10728 * C892 + C50933 * C900) *
                 C49742 +
             (C11708 + C11707) * C50904 + (C11706 + C11705) * C49749) *
                C50828 +
            ((C11490 + C11489) * C50635 + (C11488 + C11487) * C49742 +
             C11477 * C50904 + C11478 * C49749) *
                C17175) *
               C50757) *
              C50677 * C638)) /
        (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                C49749 +
            (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                C50904 +
            (C10763 + C10764) * C49742 + (C10765 + C10766) * C50635) *
               C17175 +
           ((C13817 + C13818) * C49749 + (C13819 + C13820) * C50904 +
            C13793 * C49742 + C13794 * C50635) *
               C50828) *
              C50693 * C50677 * C113 -
          ((C11317 * C50635 + C11318 * C49742 + C13805 * C50904 +
            C13806 * C49749) *
               C50828 +
           ((C10770 + C10769) * C50635 + (C10768 + C10767) * C49742 +
            (C10766 + C10765) * C50904 + (C10764 + C10763) * C49749) *
               C17175) *
              C50693 * C50677 * C114 +
          ((C10779 * C49749 + C10780 * C50904 + (C10774 + C10773) * C49742 +
            (C10772 + C10771) * C50635) *
               C17175 +
           (C14229 * C49749 + C14230 * C50904 + (C11327 + C11328) * C49742 +
            (C11329 + C11330) * C50635) *
               C50828) *
              C50693 * C50677 * C115 -
          (((C10729 * C902 + C50854 * C908 + C10728 * C310 + C50933 * C321) *
                C50635 +
            (C10729 * C893 + C50854 * C903 + C10728 * C291 + C50933 * C309) *
                C49742 +
            (C11330 + C11329) * C50904 + (C11328 + C11327) * C49749) *
               C50828 +
           ((C10778 + C10777) * C50635 + (C10776 + C10775) * C49742 +
            C10781 * C50904 + C10782 * C49749) *
               C17175) *
              C50693 * C50677 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C49749 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C50904 +
             (C10763 + C10764) * C49742 + (C10765 + C10766) * C50635) *
                C17175 +
            ((C13817 + C13818) * C49749 + (C13819 + C13820) * C50904 +
             C13793 * C49742 + C13794 * C50635) *
                C50828) *
               C50693 * C278 -
           ((C13795 * C50635 + C13796 * C49742 + (C13821 + C13822) * C50904 +
             (C13823 + C13824) * C49749) *
                C50828 +
            (C13805 * C50635 + C13806 * C49742 + (C13820 + C13819) * C50904 +
             (C13818 + C13817) * C49749) *
                C17175) *
               C50693 * C279 +
           (((C13824 + C13823) * C49749 + (C13822 + C13821) * C50904 +
             C13807 * C49742 + C13808 * C50635) *
                C17175 +
            ((C15043 + C15044) * C49749 + (C15045 + C15046) * C50904 +
             (C13825 + C13826) * C49742 + (C13827 + C13828) * C50635) *
                C50828) *
               C50693 * C280) *
              C281 +
          (((C13793 * C49749 + C13794 * C50904 + C14229 * C49742 +
             C14230 * C50635) *
                C17175 +
            (C13807 * C49749 + C13808 * C50904 + (C10973 + C10974) * C49742 +
             (C10975 + C10976) * C50635) *
                C50828) *
               C50693 * C279 -
           ((C11317 * C50635 + C11318 * C49742 + C13805 * C50904 +
             C13806 * C49749) *
                C50828 +
            ((C10770 + C10769) * C50635 + (C10768 + C10767) * C49742 +
             (C10766 + C10765) * C50904 + (C10764 + C10763) * C49749) *
                C17175) *
               C50693 * C278 -
           (((C10729 * C3203 + C50854 * C3207 + C10728 * C1107 +
              C50933 * C1114) *
                 C50635 +
             (C10729 * C3198 + C50854 * C3204 + C10728 * C1102 +
              C50933 * C1108) *
                 C49742 +
             (C13828 + C13827) * C50904 + (C13826 + C13825) * C49749) *
                C50828 +
            ((C10976 + C10975) * C50635 + (C10974 + C10973) * C49742 +
             C13795 * C50904 + C13796 * C49749) *
                C17175) *
               C50693 * C280) *
              C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[125] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C49749 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C50904 +
             (C10763 + C10764) * C49742 + (C10765 + C10766) * C50635) *
                C17175 +
            ((C13817 + C13818) * C49749 + (C13819 + C13820) * C50904 +
             C13793 * C49742 + C13794 * C50635) *
                C50828) *
               C50693 * C50964 -
           ((C13795 * C50635 + C13796 * C49742 + (C13821 + C13822) * C50904 +
             (C13823 + C13824) * C49749) *
                C50828 +
            (C13805 * C50635 + C13806 * C49742 + (C13820 + C13819) * C50904 +
             (C13818 + C13817) * C49749) *
                C17175) *
               C50693 * C50965 +
           (((C13824 + C13823) * C49749 + (C13822 + C13821) * C50904 +
             C13807 * C49742 + C13808 * C50635) *
                C17175 +
            ((C15043 + C15044) * C49749 + (C15045 + C15046) * C50904 +
             (C13825 + C13826) * C49742 + (C13827 + C13828) * C50635) *
                C50828) *
               C50693 * C1331) *
              C50911 +
          (((C13793 * C49749 + C13794 * C50904 + C14229 * C49742 +
             C14230 * C50635) *
                C17175 +
            (C13807 * C49749 + C13808 * C50904 + (C10973 + C10974) * C49742 +
             (C10975 + C10976) * C50635) *
                C50828) *
               C50693 * C50965 -
           ((C11317 * C50635 + C11318 * C49742 + C13805 * C50904 +
             C13806 * C49749) *
                C50828 +
            ((C10770 + C10769) * C50635 + (C10768 + C10767) * C49742 +
             (C10766 + C10765) * C50904 + (C10764 + C10763) * C49749) *
                C17175) *
               C50693 * C50964 -
           (((C10729 * C3203 + C50854 * C3207 + C10728 * C1107 +
              C50933 * C1114) *
                 C50635 +
             (C10729 * C3198 + C50854 * C3204 + C10728 * C1102 +
              C50933 * C1108) *
                 C49742 +
             (C13828 + C13827) * C50904 + (C13826 + C13825) * C49749) *
                C50828 +
            ((C10976 + C10975) * C50635 + (C10974 + C10973) * C49742 +
             C13795 * C50904 + C13796 * C49749) *
                C17175) *
               C50693 * C1331) *
              C50664)) /
        (p * q * std::sqrt(p + q));
    d2ee[126] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C49749 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C50904 +
             (C10763 + C10764) * C49742 + (C10765 + C10766) * C50635) *
                C17175 +
            ((C13817 + C13818) * C49749 + (C13819 + C13820) * C50904 +
             C13793 * C49742 + C13794 * C50635) *
                C50828) *
               C50920 -
           ((C14683 * C50635 + C14684 * C49742 + (C14703 + C14704) * C50904 +
             (C14705 + C14706) * C49749) *
                C50828 +
            ((C11159 + C11160) * C50635 + (C11161 + C11162) * C49742 +
             (C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                 C50904 +
             (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                 C49749) *
                C17175) *
               C50757) *
              C50964 +
          ((((C14706 + C14705) * C49749 + (C14704 + C14703) * C50904 +
             C14693 * C49742 + C14694 * C50635) *
                C17175 +
            ((C15907 + C15908) * C49749 + (C15909 + C15910) * C50904 +
             (C14707 + C14708) * C49742 + (C14709 + C14710) * C50635) *
                C50828) *
               C50757 -
           ((C13795 * C50635 + C13796 * C49742 + (C13821 + C13822) * C50904 +
             (C13823 + C13824) * C49749) *
                C50828 +
            (C13805 * C50635 + C13806 * C49742 + (C13820 + C13819) * C50904 +
             (C13818 + C13817) * C49749) *
                C17175) *
               C50920) *
              C50965 +
          ((((C13824 + C13823) * C49749 + (C13822 + C13821) * C50904 +
             C13807 * C49742 + C13808 * C50635) *
                C17175 +
            ((C15043 + C15044) * C49749 + (C15045 + C15046) * C50904 +
             (C13825 + C13826) * C49742 + (C13827 + C13828) * C50635) *
                C50828) *
               C50920 -
           (((C10729 * C3655 + C50854 * C3659 + C10728 * C3202 +
              C50933 * C3206) *
                 C50635 +
             (C10729 * C3653 + C50854 * C3656 + C10728 * C3197 +
              C50933 * C3201) *
                 C49742 +
             (C10729 * C3657 + C50854 * C3660 + C10728 * C3200 +
              C50933 * C3205) *
                 C50904 +
             (C10729 * C3654 + C50854 * C3658 + C10728 * C3196 +
              C50933 * C3199) *
                 C49749) *
                C50828 +
            ((C14710 + C14709) * C50635 + (C14708 + C14707) * C49742 +
             (C15910 + C15909) * C50904 + (C15908 + C15907) * C49749) *
                C17175) *
               C50757) *
              C1331) *
         C50658) /
        (p * q * std::sqrt(p + q));
    d2ee[127] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                C49749 +
            (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                C50904 +
            (C10763 + C10764) * C49742 + (C10765 + C10766) * C50635) *
               C17175 +
           ((C13817 + C13818) * C49749 + (C13819 + C13820) * C50904 +
            C13793 * C49742 + C13794 * C50635) *
               C50828) *
              C50693 * C1096 -
          ((C13795 * C50635 + C13796 * C49742 + (C13821 + C13822) * C50904 +
            (C13823 + C13824) * C49749) *
               C50828 +
           (C13805 * C50635 + C13806 * C49742 + (C13820 + C13819) * C50904 +
            (C13818 + C13817) * C49749) *
               C17175) *
              C50693 * C1097 +
          (((C13824 + C13823) * C49749 + (C13822 + C13821) * C50904 +
            C13807 * C49742 + C13808 * C50635) *
               C17175 +
           ((C15043 + C15044) * C49749 + (C15045 + C15046) * C50904 +
            (C13825 + C13826) * C49742 + (C13827 + C13828) * C50635) *
               C50828) *
              C50693 * C1098 -
          (((C10729 * C4169 + C50854 * C4173 + C10728 * C2448 +
             C50933 * C2452) *
                C50635 +
            (C10729 * C4167 + C50854 * C4170 + C10728 * C2443 +
             C50933 * C2447) *
                C49742 +
            (C10729 * C4171 + C50854 * C4174 + C10728 * C2446 +
             C50933 * C2451) *
                C50904 +
            (C10729 * C4168 + C50854 * C4172 + C10728 * C2442 +
             C50933 * C2445) *
                C49749) *
               C50828 +
           ((C13828 + C13827) * C50635 + (C13826 + C13825) * C49742 +
            (C15046 + C15045) * C50904 + (C15044 + C15043) * C49749) *
               C17175) *
              C50693 * C1099) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C49749 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C50904 +
             (C10763 + C10764) * C49742 + (C10765 + C10766) * C50635) *
                C17175 +
            ((C13817 + C13818) * C49749 + (C13819 + C13820) * C50904 +
             C13793 * C49742 + C13794 * C50635) *
                C50828) *
               C50693 * C1025 -
           ((C13795 * C50635 + C13796 * C49742 + (C13821 + C13822) * C50904 +
             (C13823 + C13824) * C49749) *
                C50828 +
            (C13805 * C50635 + C13806 * C49742 + (C13820 + C13819) * C50904 +
             (C13818 + C13817) * C49749) *
                C17175) *
               C50693 * C50729) *
              C1027 +
          (((C13793 * C49749 + C13794 * C50904 + C14229 * C49742 +
             C14230 * C50635) *
                C17175 +
            (C13807 * C49749 + C13808 * C50904 + (C10973 + C10974) * C49742 +
             (C10975 + C10976) * C50635) *
                C50828) *
               C50693 * C50729 -
           ((C11317 * C50635 + C11318 * C49742 + C13805 * C50904 +
             C13806 * C49749) *
                C50828 +
            ((C10770 + C10769) * C50635 + (C10768 + C10767) * C49742 +
             (C10766 + C10765) * C50904 + (C10764 + C10763) * C49749) *
                C17175) *
               C50693 * C1025) *
              C1028 +
          (((C10779 * C49749 + C10780 * C50904 + (C10774 + C10773) * C49742 +
             (C10772 + C10771) * C50635) *
                C17175 +
            (C14229 * C49749 + C14230 * C50904 + (C11327 + C11328) * C49742 +
             (C11329 + C11330) * C50635) *
                C50828) *
               C50693 * C1025 -
           (((C10729 * C1566 + C50854 * C1574 + C10728 * C308 + C50933 * C320) *
                 C50635 +
             (C10729 * C1562 + C50854 * C1567 + C10728 * C290 + C50933 * C307) *
                 C49742 +
             (C10976 + C10975) * C50904 + (C10974 + C10973) * C49749) *
                C50828 +
            ((C11330 + C11329) * C50635 + (C11328 + C11327) * C49742 +
             C11317 * C50904 + C11318 * C49749) *
                C17175) *
               C50693 * C50729) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C49749 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C50904 +
             (C10763 + C10764) * C49742 + (C10765 + C10766) * C50635) *
                C17175 +
            ((C13817 + C13818) * C49749 + (C13819 + C13820) * C50904 +
             C13793 * C49742 + C13794 * C50635) *
                C50828) *
               C457 -
           ((C14683 * C50635 + C14684 * C49742 + (C14703 + C14704) * C50904 +
             (C14705 + C14706) * C49749) *
                C50828 +
            ((C11159 + C11160) * C50635 + (C11161 + C11162) * C49742 +
             (C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                 C50904 +
             (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                 C49749) *
                C17175) *
               C458 +
           (((C10728 * C464 + C50933 * C478 + C10729 * C1849 + C50854 * C1857) *
                 C49749 +
             (C10728 * C479 + C50933 * C494 + C10729 * C1856 + C50854 * C1861) *
                 C50904 +
             (C11163 + C11164) * C49742 + (C11165 + C11166) * C50635) *
                C17175 +
            ((C15249 + C15250) * C49749 + (C15251 + C15252) * C50904 +
             (C14031 + C14032) * C49742 + (C14033 + C14034) * C50635) *
                C50828) *
               C459) *
              C1025 +
          ((((C14706 + C14705) * C49749 + (C14704 + C14703) * C50904 +
             C14693 * C49742 + C14694 * C50635) *
                C17175 +
            ((C15907 + C15908) * C49749 + (C15909 + C15910) * C50904 +
             (C14707 + C14708) * C49742 + (C14709 + C14710) * C50635) *
                C50828) *
               C458 -
           ((C13795 * C50635 + C13796 * C49742 + (C13821 + C13822) * C50904 +
             (C13823 + C13824) * C49749) *
                C50828 +
            (C13805 * C50635 + C13806 * C49742 + (C13820 + C13819) * C50904 +
             (C13818 + C13817) * C49749) *
                C17175) *
               C457 -
           (((C10729 * C4582 + C50854 * C4590 + C10728 * C2672 +
              C50933 * C2676) *
                 C50635 +
             (C10729 * C4578 + C50854 * C4583 + C10728 * C2667 +
              C50933 * C2671) *
                 C49742 +
             (C10729 * C4584 + C50854 * C4591 + C10728 * C2670 +
              C50933 * C2675) *
                 C50904 +
             (C10729 * C4579 + C50854 * C4585 + C10728 * C2666 +
              C50933 * C2669) *
                 C49749) *
                C50828 +
            ((C14034 + C14033) * C50635 + (C14032 + C14031) * C49742 +
             (C15252 + C15251) * C50904 + (C15250 + C15249) * C49749) *
                C17175) *
               C459) *
              C50729) *
         C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[128] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                  C49749 +
              (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                  C50904 +
              (C10763 + C10764) * C49742 + (C10765 + C10766) * C50635) *
                 C17175 +
             ((C13817 + C13818) * C49749 + (C13819 + C13820) * C50904 +
              C13793 * C49742 + C13794 * C50635) *
                 C50828) *
                C50920 -
            ((C14683 * C50635 + C14684 * C49742 + (C14703 + C14704) * C50904 +
              (C14705 + C14706) * C49749) *
                 C50828 +
             ((C11159 + C11160) * C50635 + (C11161 + C11162) * C49742 +
              (C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                  C50904 +
              (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                  C49749) *
                 C17175) *
                C50757) *
               C1025 +
           ((((C14706 + C14705) * C49749 + (C14704 + C14703) * C50904 +
              C14693 * C49742 + C14694 * C50635) *
                 C17175 +
             ((C15907 + C15908) * C49749 + (C15909 + C15910) * C50904 +
              (C14707 + C14708) * C49742 + (C14709 + C14710) * C50635) *
                 C50828) *
                C50757 -
            ((C13795 * C50635 + C13796 * C49742 + (C13821 + C13822) * C50904 +
              (C13823 + C13824) * C49749) *
                 C50828 +
             (C13805 * C50635 + C13806 * C49742 + (C13820 + C13819) * C50904 +
              (C13818 + C13817) * C49749) *
                 C17175) *
                C50920) *
               C50729) *
              C50911 +
          (((((C11162 + C11161) * C49749 + (C11160 + C11159) * C50904 +
              (C11158 + C11157) * C49742 + (C11156 + C11155) * C50635) *
                 C17175 +
             (C14693 * C49749 + C14694 * C50904 + (C11705 + C11706) * C49742 +
              (C11707 + C11708) * C50635) *
                 C50828) *
                C50757 -
            ((C11317 * C50635 + C11318 * C49742 + C13805 * C50904 +
              C13806 * C49749) *
                 C50828 +
             ((C10770 + C10769) * C50635 + (C10768 + C10767) * C49742 +
              (C10766 + C10765) * C50904 + (C10764 + C10763) * C49749) *
                 C17175) *
                C50920) *
               C1025 +
           (((C13793 * C49749 + C13794 * C50904 + C14229 * C49742 +
              C14230 * C50635) *
                 C17175 +
             (C13807 * C49749 + C13808 * C50904 + (C10973 + C10974) * C49742 +
              (C10975 + C10976) * C50635) *
                 C50828) *
                C50920 -
            (((C10729 * C2673 + C50854 * C2677 + C10728 * C1568 +
               C50933 * C1575) *
                  C50635 +
              (C10729 * C2668 + C50854 * C2674 + C10728 * C1563 +
               C50933 * C1569) *
                  C49742 +
              (C14710 + C14709) * C50904 + (C14708 + C14707) * C49749) *
                 C50828 +
             ((C11708 + C11707) * C50635 + (C11706 + C11705) * C49742 +
              C14683 * C50904 + C14684 * C49749) *
                 C17175) *
                C50757) *
               C50729) *
              C50664)) /
        (p * q * std::sqrt(p + q));
    d2ee[129] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C49749 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C50904 +
             (C10763 + C10764) * C49742 + (C10765 + C10766) * C50635) *
                C17175 +
            ((C13817 + C13818) * C49749 + (C13819 + C13820) * C50904 +
             C13793 * C49742 + C13794 * C50635) *
                C50828) *
               C50693 * C1025 -
           ((C13795 * C50635 + C13796 * C49742 + (C13821 + C13822) * C50904 +
             (C13823 + C13824) * C49749) *
                C50828 +
            (C13805 * C50635 + C13806 * C49742 + (C13820 + C13819) * C50904 +
             (C13818 + C13817) * C49749) *
                C17175) *
               C50693 * C50729) *
              C1027 +
          (((C13793 * C49749 + C13794 * C50904 + C14229 * C49742 +
             C14230 * C50635) *
                C17175 +
            (C13807 * C49749 + C13808 * C50904 + (C10973 + C10974) * C49742 +
             (C10975 + C10976) * C50635) *
                C50828) *
               C50693 * C50729 -
           ((C11317 * C50635 + C11318 * C49742 + C13805 * C50904 +
             C13806 * C49749) *
                C50828 +
            ((C10770 + C10769) * C50635 + (C10768 + C10767) * C49742 +
             (C10766 + C10765) * C50904 + (C10764 + C10763) * C49749) *
                C17175) *
               C50693 * C1025) *
              C1028 +
          (((C10779 * C49749 + C10780 * C50904 + (C10774 + C10773) * C49742 +
             (C10772 + C10771) * C50635) *
                C17175 +
            (C14229 * C49749 + C14230 * C50904 + (C11327 + C11328) * C49742 +
             (C11329 + C11330) * C50635) *
                C50828) *
               C50693 * C1025 -
           (((C10729 * C1566 + C50854 * C1574 + C10728 * C308 + C50933 * C320) *
                 C50635 +
             (C10729 * C1562 + C50854 * C1567 + C10728 * C290 + C50933 * C307) *
                 C49742 +
             (C10976 + C10975) * C50904 + (C10974 + C10973) * C49749) *
                C50828 +
            ((C11330 + C11329) * C50635 + (C11328 + C11327) * C49742 +
             C11317 * C50904 + C11318 * C49749) *
                C17175) *
               C50693 * C50729) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                C49749 +
            (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                C50904 +
            (C10763 + C10764) * C49742 + (C10765 + C10766) * C50635) *
               C17175 +
           ((C13817 + C13818) * C49749 + (C13819 + C13820) * C50904 +
            C13793 * C49742 + C13794 * C50635) *
               C50828) *
              C50693 * C1096 -
          ((C13795 * C50635 + C13796 * C49742 + (C13821 + C13822) * C50904 +
            (C13823 + C13824) * C49749) *
               C50828 +
           (C13805 * C50635 + C13806 * C49742 + (C13820 + C13819) * C50904 +
            (C13818 + C13817) * C49749) *
               C17175) *
              C50693 * C1097 +
          (((C13824 + C13823) * C49749 + (C13822 + C13821) * C50904 +
            C13807 * C49742 + C13808 * C50635) *
               C17175 +
           ((C15043 + C15044) * C49749 + (C15045 + C15046) * C50904 +
            (C13825 + C13826) * C49742 + (C13827 + C13828) * C50635) *
               C50828) *
              C50693 * C1098 -
          (((C10729 * C4169 + C50854 * C4173 + C10728 * C2448 +
             C50933 * C2452) *
                C50635 +
            (C10729 * C4167 + C50854 * C4170 + C10728 * C2443 +
             C50933 * C2447) *
                C49742 +
            (C10729 * C4171 + C50854 * C4174 + C10728 * C2446 +
             C50933 * C2451) *
                C50904 +
            (C10729 * C4168 + C50854 * C4172 + C10728 * C2442 +
             C50933 * C2445) *
                C49749) *
               C50828 +
           ((C13828 + C13827) * C50635 + (C13826 + C13825) * C49742 +
            (C15046 + C15045) * C50904 + (C15044 + C15043) * C49749) *
               C17175) *
              C50693 * C1099) *
         C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                  C49749 +
              (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                  C50904 +
              (C10763 + C10764) * C49742 + (C10765 + C10766) * C50635) *
                 C17175 +
             ((C13817 + C13818) * C49749 + (C13819 + C13820) * C50904 +
              C13793 * C49742 + C13794 * C50635) *
                 C50828) *
                C1676 -
            ((C14683 * C50635 + C14684 * C49742 + (C14703 + C14704) * C50904 +
              (C14705 + C14706) * C49749) *
                 C50828 +
             ((C11159 + C11160) * C50635 + (C11161 + C11162) * C49742 +
              (C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                  C50904 +
              (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                  C49749) *
                 C17175) *
                C50757) *
               C50919 +
           ((((C14706 + C14705) * C49749 + (C14704 + C14703) * C50904 +
              C14693 * C49742 + C14694 * C50635) *
                 C17175 +
             ((C15907 + C15908) * C49749 + (C15909 + C15910) * C50904 +
              (C14707 + C14708) * C49742 + (C14709 + C14710) * C50635) *
                 C50828) *
                C50757 -
            ((C13795 * C50635 + C13796 * C49742 + (C13821 + C13822) * C50904 +
              (C13823 + C13824) * C49749) *
                 C50828 +
             (C13805 * C50635 + C13806 * C49742 + (C13820 + C13819) * C50904 +
              (C13818 + C13817) * C49749) *
                 C17175) *
                C1676) *
               C50729) *
              C50911 +
          (((((C11162 + C11161) * C49749 + (C11160 + C11159) * C50904 +
              (C11158 + C11157) * C49742 + (C11156 + C11155) * C50635) *
                 C17175 +
             (C14693 * C49749 + C14694 * C50904 + (C11705 + C11706) * C49742 +
              (C11707 + C11708) * C50635) *
                 C50828) *
                C50757 -
            ((C11317 * C50635 + C11318 * C49742 + C13805 * C50904 +
              C13806 * C49749) *
                 C50828 +
             ((C10770 + C10769) * C50635 + (C10768 + C10767) * C49742 +
              (C10766 + C10765) * C50904 + (C10764 + C10763) * C49749) *
                 C17175) *
                C1676) *
               C50919 +
           (((C13793 * C49749 + C13794 * C50904 + C14229 * C49742 +
              C14230 * C50635) *
                 C17175 +
             (C13807 * C49749 + C13808 * C50904 + (C10973 + C10974) * C49742 +
              (C10975 + C10976) * C50635) *
                 C50828) *
                C1676 -
            (((C10729 * C2673 + C50854 * C2677 + C10728 * C1568 +
               C50933 * C1575) *
                  C50635 +
              (C10729 * C2668 + C50854 * C2674 + C10728 * C1563 +
               C50933 * C1569) *
                  C49742 +
              (C14710 + C14709) * C50904 + (C14708 + C14707) * C49749) *
                 C50828 +
             ((C11708 + C11707) * C50635 + (C11706 + C11705) * C49742 +
              C14683 * C50904 + C14684 * C49749) *
                 C17175) *
                C50757) *
               C50729) *
              C50664)) /
        (p * q * std::sqrt(p + q));
    d2ee[131] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C49749 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C50904 +
             (C10763 + C10764) * C49742 + (C10765 + C10766) * C50635) *
                C17175 +
            ((C13817 + C13818) * C49749 + (C13819 + C13820) * C50904 +
             C13793 * C49742 + C13794 * C50635) *
                C50828) *
               C50966 -
           ((C14683 * C50635 + C14684 * C49742 + (C14703 + C14704) * C50904 +
             (C14705 + C14706) * C49749) *
                C50828 +
            ((C11159 + C11160) * C50635 + (C11161 + C11162) * C49742 +
             (C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                 C50904 +
             (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                 C49749) *
                C17175) *
               C50967 +
           (((C10728 * C464 + C50933 * C478 + C10729 * C1849 + C50854 * C1857) *
                 C49749 +
             (C10728 * C479 + C50933 * C494 + C10729 * C1856 + C50854 * C1861) *
                 C50904 +
             (C11163 + C11164) * C49742 + (C11165 + C11166) * C50635) *
                C17175 +
            ((C15249 + C15250) * C49749 + (C15251 + C15252) * C50904 +
             (C14031 + C14032) * C49742 + (C14033 + C14034) * C50635) *
                C50828) *
               C2092) *
              C50919 +
          ((((C14706 + C14705) * C49749 + (C14704 + C14703) * C50904 +
             C14693 * C49742 + C14694 * C50635) *
                C17175 +
            ((C15907 + C15908) * C49749 + (C15909 + C15910) * C50904 +
             (C14707 + C14708) * C49742 + (C14709 + C14710) * C50635) *
                C50828) *
               C50967 -
           ((C13795 * C50635 + C13796 * C49742 + (C13821 + C13822) * C50904 +
             (C13823 + C13824) * C49749) *
                C50828 +
            (C13805 * C50635 + C13806 * C49742 + (C13820 + C13819) * C50904 +
             (C13818 + C13817) * C49749) *
                C17175) *
               C50966 -
           (((C10729 * C4582 + C50854 * C4590 + C10728 * C2672 +
              C50933 * C2676) *
                 C50635 +
             (C10729 * C4578 + C50854 * C4583 + C10728 * C2667 +
              C50933 * C2671) *
                 C49742 +
             (C10729 * C4584 + C50854 * C4591 + C10728 * C2670 +
              C50933 * C2675) *
                 C50904 +
             (C10729 * C4579 + C50854 * C4585 + C10728 * C2666 +
              C50933 * C2669) *
                 C49749) *
                C50828 +
            ((C14034 + C14033) * C50635 + (C14032 + C14031) * C49742 +
             (C15252 + C15251) * C50904 + (C15250 + C15249) * C49749) *
                C17175) *
               C2092) *
              C50729) *
         C50658) /
        (p * q * std::sqrt(p + q));
    d2ee[132] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C49749 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C50904 +
             (C10763 + C10764) * C49742 + (C10765 + C10766) * C50635) *
                C17175 +
            ((C13817 + C13818) * C49749 + (C13819 + C13820) * C50904 +
             C13793 * C49742 + C13794 * C50635) *
                C50828) *
               C1676 -
           ((C14683 * C50635 + C14684 * C49742 + (C14703 + C14704) * C50904 +
             (C14705 + C14706) * C49749) *
                C50828 +
            ((C11159 + C11160) * C50635 + (C11161 + C11162) * C49742 +
             (C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                 C50904 +
             (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                 C49749) *
                C17175) *
               C50757) *
              C278 +
          ((((C14706 + C14705) * C49749 + (C14704 + C14703) * C50904 +
             C14693 * C49742 + C14694 * C50635) *
                C17175 +
            ((C15907 + C15908) * C49749 + (C15909 + C15910) * C50904 +
             (C14707 + C14708) * C49742 + (C14709 + C14710) * C50635) *
                C50828) *
               C50757 -
           ((C13795 * C50635 + C13796 * C49742 + (C13821 + C13822) * C50904 +
             (C13823 + C13824) * C49749) *
                C50828 +
            (C13805 * C50635 + C13806 * C49742 + (C13820 + C13819) * C50904 +
             (C13818 + C13817) * C49749) *
                C17175) *
               C1676) *
              C279 +
          ((((C13824 + C13823) * C49749 + (C13822 + C13821) * C50904 +
             C13807 * C49742 + C13808 * C50635) *
                C17175 +
            ((C15043 + C15044) * C49749 + (C15045 + C15046) * C50904 +
             (C13825 + C13826) * C49742 + (C13827 + C13828) * C50635) *
                C50828) *
               C1676 -
           (((C10729 * C3655 + C50854 * C3659 + C10728 * C3202 +
              C50933 * C3206) *
                 C50635 +
             (C10729 * C3653 + C50854 * C3656 + C10728 * C3197 +
              C50933 * C3201) *
                 C49742 +
             (C10729 * C3657 + C50854 * C3660 + C10728 * C3200 +
              C50933 * C3205) *
                 C50904 +
             (C10729 * C3654 + C50854 * C3658 + C10728 * C3196 +
              C50933 * C3199) *
                 C49749) *
                C50828 +
            ((C14710 + C14709) * C50635 + (C14708 + C14707) * C49742 +
             (C15910 + C15909) * C50904 + (C15908 + C15907) * C49749) *
                C17175) *
               C50757) *
              C280) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C49749 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C50904 +
             (C10763 + C10764) * C49742 + (C10765 + C10766) * C50635) *
                C17175 +
            ((C13817 + C13818) * C49749 + (C13819 + C13820) * C50904 +
             C13793 * C49742 + C13794 * C50635) *
                C50828) *
               C1676 -
           ((C14683 * C50635 + C14684 * C49742 + (C14703 + C14704) * C50904 +
             (C14705 + C14706) * C49749) *
                C50828 +
            ((C11159 + C11160) * C50635 + (C11161 + C11162) * C49742 +
             (C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                 C50904 +
             (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                 C49749) *
                C17175) *
               C50757) *
              C50677 * C1027 +
          ((((C11162 + C11161) * C49749 + (C11160 + C11159) * C50904 +
             (C11158 + C11157) * C49742 + (C11156 + C11155) * C50635) *
                C17175 +
            (C14693 * C49749 + C14694 * C50904 + (C11705 + C11706) * C49742 +
             (C11707 + C11708) * C50635) *
                C50828) *
               C50757 -
           ((C11317 * C50635 + C11318 * C49742 + C13805 * C50904 +
             C13806 * C49749) *
                C50828 +
            ((C10770 + C10769) * C50635 + (C10768 + C10767) * C49742 +
             (C10766 + C10765) * C50904 + (C10764 + C10763) * C49749) *
                C17175) *
               C1676) *
              C50677 * C1028 +
          (((C10779 * C49749 + C10780 * C50904 + (C10774 + C10773) * C49742 +
             (C10772 + C10771) * C50635) *
                C17175 +
            (C14229 * C49749 + C14230 * C50904 + (C11327 + C11328) * C49742 +
             (C11329 + C11330) * C50635) *
                C50828) *
               C1676 -
           (((C10729 * C1219 + C50854 * C1227 + C10728 * C901 + C50933 * C907) *
                 C50635 +
             (C10729 * C1215 + C50854 * C1220 + C10728 * C892 + C50933 * C900) *
                 C49742 +
             (C11708 + C11707) * C50904 + (C11706 + C11705) * C49749) *
                C50828 +
            ((C11490 + C11489) * C50635 + (C11488 + C11487) * C49742 +
             C11477 * C50904 + C11478 * C49749) *
                C17175) *
               C50757) *
              C50677 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                C49749 +
            (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                C50904 +
            (C10763 + C10764) * C49742 + (C10765 + C10766) * C50635) *
               C17175 +
           ((C13817 + C13818) * C49749 + (C13819 + C13820) * C50904 +
            C13793 * C49742 + C13794 * C50635) *
               C50828) *
              C1842 -
          ((C14683 * C50635 + C14684 * C49742 + (C14703 + C14704) * C50904 +
            (C14705 + C14706) * C49749) *
               C50828 +
           ((C11159 + C11160) * C50635 + (C11161 + C11162) * C49742 +
            (C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                C50904 +
            (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                C49749) *
               C17175) *
              C1843 +
          (((C10728 * C464 + C50933 * C478 + C10729 * C1849 + C50854 * C1857) *
                C49749 +
            (C10728 * C479 + C50933 * C494 + C10729 * C1856 + C50854 * C1861) *
                C50904 +
            (C11163 + C11164) * C49742 + (C11165 + C11166) * C50635) *
               C17175 +
           ((C15249 + C15250) * C49749 + (C15251 + C15252) * C50904 +
            (C14031 + C14032) * C49742 + (C14033 + C14034) * C50635) *
               C50828) *
              C1844 -
          (((C10729 * C6550 + C50854 * C6554 + C10728 * C4586 +
             C50933 * C4592) *
                C50635 +
            (C10729 * C6548 + C50854 * C6551 + C10728 * C4580 +
             C50933 * C4587) *
                C49742 +
            (C10729 * C6552 + C50854 * C6555 + C10728 * C4588 +
             C50933 * C4593) *
                C50904 +
            (C10729 * C6549 + C50854 * C6553 + C10728 * C4581 +
             C50933 * C4589) *
                C49749) *
               C50828 +
           ((C10729 * C5572 + C50854 * C5576 + C10728 * C1854 +
             C50933 * C1860) *
                C50635 +
            (C10729 * C5567 + C50854 * C5571 + C10728 * C1848 +
             C50933 * C1855) *
                C49742 +
            (C10729 * C5570 + C50854 * C5575 + C10728 * C1856 +
             C50933 * C1861) *
                C50904 +
            (C10729 * C5566 + C50854 * C5569 + C10728 * C1849 +
             C50933 * C1857) *
                C49749) *
               C17175) *
              C1845) *
         C50677 * C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[133] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C49749 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C50904 +
             (C10763 + C10764) * C49742 + (C10765 + C10766) * C50635) *
                C17175 +
            ((C13817 + C13818) * C49749 + (C13819 + C13820) * C50904 +
             C13793 * C49742 + C13794 * C50635) *
                C50828) *
               C50966 -
           ((C14683 * C50635 + C14684 * C49742 + (C14703 + C14704) * C50904 +
             (C14705 + C14706) * C49749) *
                C50828 +
            ((C11159 + C11160) * C50635 + (C11161 + C11162) * C49742 +
             (C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                 C50904 +
             (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                 C49749) *
                C17175) *
               C50967 +
           (((C10728 * C464 + C50933 * C478 + C10729 * C1849 + C50854 * C1857) *
                 C49749 +
             (C10728 * C479 + C50933 * C494 + C10729 * C1856 + C50854 * C1861) *
                 C50904 +
             (C11163 + C11164) * C49742 + (C11165 + C11166) * C50635) *
                C17175 +
            ((C15249 + C15250) * C49749 + (C15251 + C15252) * C50904 +
             (C14031 + C14032) * C49742 + (C14033 + C14034) * C50635) *
                C50828) *
               C2092) *
              C50677 * C50911 +
          ((((C11162 + C11161) * C49749 + (C11160 + C11159) * C50904 +
             (C11158 + C11157) * C49742 + (C11156 + C11155) * C50635) *
                C17175 +
            (C14693 * C49749 + C14694 * C50904 + (C11705 + C11706) * C49742 +
             (C11707 + C11708) * C50635) *
                C50828) *
               C50967 -
           ((C11317 * C50635 + C11318 * C49742 + C13805 * C50904 +
             C13806 * C49749) *
                C50828 +
            ((C10770 + C10769) * C50635 + (C10768 + C10767) * C49742 +
             (C10766 + C10765) * C50904 + (C10764 + C10763) * C49749) *
                C17175) *
               C50966 -
           (((C10729 * C6137 + C50854 * C6139 + C10728 * C1221 +
              C50933 * C1228) *
                 C50635 +
             (C10729 * C6136 + C50854 * C6138 + C10728 * C1216 +
              C50933 * C1222) *
                 C49742 +
             (C14034 + C14033) * C50904 + (C14032 + C14031) * C49749) *
                C50828 +
            ((C11170 + C11169) * C50635 + (C11168 + C11167) * C49742 +
             (C11166 + C11165) * C50904 + (C11164 + C11163) * C49749) *
                C17175) *
               C2092) *
              C50677 * C50664)) /
        (p * q * std::sqrt(p + q));
    d2ee[134] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C49749 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C50904 +
             (C10763 + C10764) * C49742 + (C10765 + C10766) * C50635) *
                C17175 +
            ((C13817 + C13818) * C49749 + (C13819 + C13820) * C50904 +
             C13793 * C49742 + C13794 * C50635) *
                C50828) *
               C1676 -
           ((C14683 * C50635 + C14684 * C49742 + (C14703 + C14704) * C50904 +
             (C14705 + C14706) * C49749) *
                C50828 +
            ((C11159 + C11160) * C50635 + (C11161 + C11162) * C49742 +
             (C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                 C50904 +
             (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                 C49749) *
                C17175) *
               C50757) *
              C50677 * C1027 +
          ((((C11162 + C11161) * C49749 + (C11160 + C11159) * C50904 +
             (C11158 + C11157) * C49742 + (C11156 + C11155) * C50635) *
                C17175 +
            (C14693 * C49749 + C14694 * C50904 + (C11705 + C11706) * C49742 +
             (C11707 + C11708) * C50635) *
                C50828) *
               C50757 -
           ((C11317 * C50635 + C11318 * C49742 + C13805 * C50904 +
             C13806 * C49749) *
                C50828 +
            ((C10770 + C10769) * C50635 + (C10768 + C10767) * C49742 +
             (C10766 + C10765) * C50904 + (C10764 + C10763) * C49749) *
                C17175) *
               C1676) *
              C50677 * C1028 +
          (((C10779 * C49749 + C10780 * C50904 + (C10774 + C10773) * C49742 +
             (C10772 + C10771) * C50635) *
                C17175 +
            (C14229 * C49749 + C14230 * C50904 + (C11327 + C11328) * C49742 +
             (C11329 + C11330) * C50635) *
                C50828) *
               C1676 -
           (((C10729 * C1219 + C50854 * C1227 + C10728 * C901 + C50933 * C907) *
                 C50635 +
             (C10729 * C1215 + C50854 * C1220 + C10728 * C892 + C50933 * C900) *
                 C49742 +
             (C11708 + C11707) * C50904 + (C11706 + C11705) * C49749) *
                C50828 +
            ((C11490 + C11489) * C50635 + (C11488 + C11487) * C49742 +
             C11477 * C50904 + C11478 * C49749) *
                C17175) *
               C50757) *
              C50677 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10728 * C122 + C50933 * C129 + C10729 * C463 + C50854 * C477) *
                 C49749 +
             (C10728 * C130 + C50933 * C143 + C10729 * C476 + C50854 * C493) *
                 C50904 +
             (C10763 + C10764) * C49742 + (C10765 + C10766) * C50635) *
                C17175 +
            ((C13817 + C13818) * C49749 + (C13819 + C13820) * C50904 +
             C13793 * C49742 + C13794 * C50635) *
                C50828) *
               C1676 -
           ((C14683 * C50635 + C14684 * C49742 + (C14703 + C14704) * C50904 +
             (C14705 + C14706) * C49749) *
                C50828 +
            ((C11159 + C11160) * C50635 + (C11161 + C11162) * C49742 +
             (C10729 * C479 + C50854 * C494 + C10728 * C476 + C50933 * C493) *
                 C50904 +
             (C10729 * C464 + C50854 * C478 + C10728 * C463 + C50933 * C477) *
                 C49749) *
                C17175) *
               C50757) *
              C278 +
          ((((C14706 + C14705) * C49749 + (C14704 + C14703) * C50904 +
             C14693 * C49742 + C14694 * C50635) *
                C17175 +
            ((C15907 + C15908) * C49749 + (C15909 + C15910) * C50904 +
             (C14707 + C14708) * C49742 + (C14709 + C14710) * C50635) *
                C50828) *
               C50757 -
           ((C13795 * C50635 + C13796 * C49742 + (C13821 + C13822) * C50904 +
             (C13823 + C13824) * C49749) *
                C50828 +
            (C13805 * C50635 + C13806 * C49742 + (C13820 + C13819) * C50904 +
             (C13818 + C13817) * C49749) *
                C17175) *
               C1676) *
              C279 +
          ((((C13824 + C13823) * C49749 + (C13822 + C13821) * C50904 +
             C13807 * C49742 + C13808 * C50635) *
                C17175 +
            ((C15043 + C15044) * C49749 + (C15045 + C15046) * C50904 +
             (C13825 + C13826) * C49742 + (C13827 + C13828) * C50635) *
                C50828) *
               C1676 -
           (((C10729 * C3655 + C50854 * C3659 + C10728 * C3202 +
              C50933 * C3206) *
                 C50635 +
             (C10729 * C3653 + C50854 * C3656 + C10728 * C3197 +
              C50933 * C3201) *
                 C49742 +
             (C10729 * C3657 + C50854 * C3660 + C10728 * C3200 +
              C50933 * C3205) *
                 C50904 +
             (C10729 * C3654 + C50854 * C3658 + C10728 * C3196 +
              C50933 * C3199) *
                 C49749) *
                C50828 +
            ((C14710 + C14709) * C50635 + (C14708 + C14707) * C49742 +
             (C15910 + C15909) * C50904 + (C15908 + C15907) * C49749) *
                C17175) *
               C50757) *
              C280) *
         C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[135] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C17177 +
             (C117 * C130 + C50790 * C143) * C17172 + C171 * C17178 +
             C172 * C17173 + C173 * C17179 + C174 * C17174) *
                C17175 +
            (C17327 + C17328 + C17329 + C17330 + C17331 + C17332) * C50828) *
               C50693 * C50919 -
           ((C17333 + C17334 + C17335 + C17336 + C17337 + C17338) * C50828 +
            (C17332 + C17331 + C17330 + C17329 + C17328 + C17327) * C17175) *
               C50693 * C50729) *
              C50962 +
          (((C17339 + C17340 + C17341 + C17342 + C17343 + C17344) * C17175 +
            (C17345 + C17346 + C17347 + C17348 + C17349 + C17350) * C50828) *
               C50693 * C50729 -
           ((C17344 + C17343 + C17342 + C17341 + C17340 + C17339) * C50828 +
            (C176 * C17174 + C175 * C17179 + C174 * C17173 + C173 * C17178 +
             C172 * C17172 + C171 * C17177) *
                C17175) *
               C50693 * C50919) *
              C50963 +
          (((C173 * C17177 + C174 * C17172 + C175 * C17178 + C176 * C17173 +
             C178 * C17179 + C177 * C17174) *
                C17175 +
            (C17643 + C17644 + C17645 + C17646 + C17647 + C17648) * C50828) *
               C50693 * C50919 -
           (((C117 * C311 + C50790 * C322) * C17174 +
             (C117 * C292 + C50790 * C312) * C17179 + C359 * C17173 +
             C358 * C17178 + C357 * C17172 + C356 * C17177) *
                C50828 +
            (C17648 + C17647 + C17646 + C17645 + C17644 + C17643) * C17175) *
               C50693 * C50729) *
              C638)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C19841 +
             (C117 * C130 + C50790 * C143) * C50630) *
                C19837 +
            (C19941 + C19942) * C19838 + C19957 * C19839 + C19958 * C19840) *
               C50693 * C50919 -
           ((C19947 + C19948) * C19840 + (C19946 + C19945) * C19839 +
            (C19944 + C19943) * C19838 + (C19942 + C19941) * C19837) *
               C50693 * C50729) *
              C50962 +
          (((C19949 + C19950) * C19837 + (C19951 + C19952) * C19838 +
            (C19953 + C19954) * C19839 + (C19955 + C19956) * C19840) *
               C50693 * C50729 -
           (C19959 * C19840 + C19960 * C19839 + (C19950 + C19949) * C19838 +
            (C172 * C50630 + C171 * C19841) * C19837) *
               C50693 * C50919) *
              C50963 +
          (((C173 * C19841 + C174 * C50630) * C19837 +
            (C20157 + C20158) * C19838 + (C20159 + C20160) * C19839 +
            (C20161 + C20162) * C19840) *
               C50693 * C50919 -
           (((C117 * C2449 + C50790 * C2453) * C50630 +
             (C117 * C2444 + C50790 * C2450) * C19841) *
                C19840 +
            (C20162 + C20161) * C19839 + (C20160 + C20159) * C19838 +
            (C20158 + C20157) * C19837) *
               C50693 * C50729) *
              C638)) /
            (p * q * std::sqrt(p + q));
    d2ee[136] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50790 * C129) * C17177 +
              (C117 * C130 + C50790 * C143) * C17172 + C171 * C17178 +
              C172 * C17173 + C173 * C17179 + C174 * C17174) *
                 C17175 +
             (C17327 + C17328 + C17329 + C17330 + C17331 + C17332) * C50828) *
                C50920 -
            ((C17989 + C17990 + C17991 + C17992 + C17993 + C17994) * C50828 +
             (C527 * C17174 + C528 * C17179 + C529 * C17173 + C530 * C17178 +
              (C117 * C476 + C50790 * C493) * C17172 +
              (C117 * C463 + C50790 * C477) * C17177) *
                 C17175) *
                C50757) *
               C50919 +
           (((C17994 + C17993 + C17992 + C17991 + C17990 + C17989) * C17175 +
             (C3234 * C17177 + C3233 * C17172 + C2692 * C17178 +
              C2691 * C17173 + C3001 * C17179 + C3002 * C17174) *
                 C50828) *
                C50757 -
            ((C17333 + C17334 + C17335 + C17336 + C17337 + C17338) * C50828 +
             (C17332 + C17331 + C17330 + C17329 + C17328 + C17327) * C17175) *
                C50920) *
               C50729) *
              C281 +
          ((((C530 * C17177 + C529 * C17172 + C528 * C17178 + C527 * C17173 +
              C526 * C17179 + C525 * C17174) *
                 C17175 +
             (C17995 + C17996 + C17997 + C17998 + C17999 + C18000) * C50828) *
                C50757 -
            ((C17344 + C17343 + C17342 + C17341 + C17340 + C17339) * C50828 +
             (C176 * C17174 + C175 * C17179 + C174 * C17173 + C173 * C17178 +
              C172 * C17172 + C171 * C17177) *
                 C17175) *
                C50920) *
               C50919 +
           (((C17339 + C17340 + C17341 + C17342 + C17343 + C17344) * C17175 +
             (C17345 + C17346 + C17347 + C17348 + C17349 + C17350) * C50828) *
                C50920 -
            (((C117 * C1566 + C50790 * C1574) * C17174 +
              (C117 * C1562 + C50790 * C1567) * C17179 + C3002 * C17173 +
              C3001 * C17178 + C2691 * C17172 + C2692 * C17177) *
                 C50828 +
             (C18000 + C17999 + C17998 + C17997 + C17996 + C17995) * C17175) *
                C50757) *
               C50729) *
              C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50790 * C129) * C19841 +
              (C117 * C130 + C50790 * C143) * C50630) *
                 C19837 +
             (C19941 + C19942) * C19838 + C19957 * C19839 + C19958 * C19840) *
                C50920 -
            ((C20391 + C20392) * C19840 + (C20393 + C20394) * C19839 +
             (C20395 + C20396) * C19838 +
             ((C117 * C476 + C50790 * C493) * C50630 +
              (C117 * C463 + C50790 * C477) * C19841) *
                 C19837) *
                C50757) *
               C50919 +
           (((C20396 + C20395) * C19837 + (C20394 + C20393) * C19838 +
             (C20392 + C20391) * C19839 +
             ((C117 * C4168 + C50790 * C4172) * C19841 +
              (C117 * C4171 + C50790 * C4174) * C50630) *
                 C19840) *
                C50757 -
            ((C19947 + C19948) * C19840 + (C19946 + C19945) * C19839 +
             (C19944 + C19943) * C19838 + (C19942 + C19941) * C19837) *
                C50920) *
               C50729) *
              C281 +
          ((((C530 * C19841 + C529 * C50630) * C19837 +
             (C20397 + C20398) * C19838 + (C20399 + C20400) * C19839 +
             (C20401 + C20402) * C19840) *
                C50757 -
            (C19959 * C19840 + C19960 * C19839 + (C19950 + C19949) * C19838 +
             (C172 * C50630 + C171 * C19841) * C19837) *
                C50920) *
               C50919 +
           (((C19949 + C19950) * C19837 + (C19951 + C19952) * C19838 +
             (C19953 + C19954) * C19839 + (C19955 + C19956) * C19840) *
                C50920 -
            (((C117 * C4169 + C50790 * C4173) * C50630 +
              (C117 * C4167 + C50790 * C4170) * C19841) *
                 C19840 +
             (C20402 + C20401) * C19839 + (C20400 + C20399) * C19838 +
             (C20398 + C20397) * C19837) *
                C50757) *
               C50729) *
              C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[137] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C17177 +
             (C117 * C130 + C50790 * C143) * C17172 + C171 * C17178 +
             C172 * C17173 + C173 * C17179 + C174 * C17174) *
                C17175 +
            (C17327 + C17328 + C17329 + C17330 + C17331 + C17332) * C50828) *
               C50693 * C278 -
           ((C17333 + C17334 + C17335 + C17336 + C17337 + C17338) * C50828 +
            (C17332 + C17331 + C17330 + C17329 + C17328 + C17327) * C17175) *
               C50693 * C279 +
           ((C17338 + C17337 + C17336 + C17335 + C17334 + C17333) * C17175 +
            (C2498 * C17177 + C2497 * C17172 + C2496 * C17178 + C2495 * C17173 +
             C2501 * C17179 + C2502 * C17174) *
                C50828) *
               C50693 * C280) *
              C281 +
          (((C17339 + C17340 + C17341 + C17342 + C17343 + C17344) * C17175 +
            (C17345 + C17346 + C17347 + C17348 + C17349 + C17350) * C50828) *
               C50693 * C279 -
           ((C17344 + C17343 + C17342 + C17341 + C17340 + C17339) * C50828 +
            (C176 * C17174 + C175 * C17179 + C174 * C17173 + C173 * C17178 +
             C172 * C17172 + C171 * C17177) *
                C17175) *
               C50693 * C278 -
           (((C117 * C1105 + C50790 * C1113) * C17174 +
             (C117 * C1101 + C50790 * C1106) * C17179 + C2502 * C17173 +
             C2501 * C17178 + C2495 * C17172 + C2496 * C17177) *
                C50828 +
            (C17350 + C17349 + C17348 + C17347 + C17346 + C17345) * C17175) *
               C50693 * C280) *
              C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C17177 +
            (C117 * C130 + C50790 * C143) * C17172 + C171 * C17178 +
            C172 * C17173 + C173 * C17179 + C174 * C17174) *
               C17175 +
           (C2491 * C17177 + C2492 * C17172 + C353 * C17178 + C352 * C17173 +
            C351 * C17179 + C350 * C17174) *
               C50828) *
              C50693 * C50677 * C113 -
          ((C348 * C17174 + C349 * C17179 + C350 * C17173 + C351 * C17178 +
            C352 * C17172 + C353 * C17177) *
               C50828 +
           (C176 * C17174 + C175 * C17179 + C174 * C17173 + C173 * C17178 +
            C172 * C17172 + C171 * C17177) *
               C17175) *
              C50693 * C50677 * C114 +
          ((C173 * C17177 + C174 * C17172 + C175 * C17178 + C176 * C17173 +
            C178 * C17179 + C177 * C17174) *
               C17175 +
           (C351 * C17177 + C350 * C17172 + C349 * C17178 + C348 * C17173 +
            C648 * C17179 + C649 * C17174) *
               C50828) *
              C50693 * C50677 * C115 -
          (((C117 * C640 + C50790 * C642) * C17174 +
            (C117 * C639 + C50790 * C641) * C17179 + C649 * C17173 +
            C648 * C17178 + C348 * C17172 + C349 * C17177) *
               C50828 +
           (C180 * C17174 + C179 * C17179 + C177 * C17173 + C178 * C17178 +
            C176 * C17172 + C175 * C17177) *
               C17175) *
              C50693 * C50677 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C17177 +
             (C117 * C130 + C50790 * C143) * C17172 + C171 * C17178 +
             C172 * C17173 + C173 * C17179 + C174 * C17174) *
                C17175 +
            (C17327 + C17328 + C17329 + C17330 + C17331 + C17332) * C50828) *
               C457 -
           ((C925 * C17174 + C924 * C17179 + C923 * C17173 + C922 * C17178 +
             C3235 * C17172 + C3236 * C17177) *
                C50828 +
            (C527 * C17174 + C528 * C17179 + C529 * C17173 + C530 * C17178 +
             (C117 * C476 + C50790 * C493) * C17172 +
             (C117 * C463 + C50790 * C477) * C17177) *
                C17175) *
               C458 +
           (((C117 * C464 + C50790 * C478) * C17177 +
             (C117 * C479 + C50790 * C494) * C17172 + C531 * C17178 +
             C532 * C17173 + C533 * C17179 + C534 * C17174) *
                C17175 +
            (C3674 * C17177 + C3675 * C17172 + C2693 * C17178 + C2694 * C17173 +
             C8353 * C17179 + C8354 * C17174) *
                C50828) *
               C459) *
              C50677 * C281 +
          (((C530 * C17177 + C529 * C17172 + C528 * C17178 + C527 * C17173 +
             C526 * C17179 + C525 * C17174) *
                C17175 +
            (C922 * C17177 + C923 * C17172 + C924 * C17178 + C925 * C17173 +
             C926 * C17179 + C927 * C17174) *
                C50828) *
               C458 -
           ((C17344 + C17343 + C17342 + C17341 + C17340 + C17339) * C50828 +
            (C176 * C17174 + C175 * C17179 + C174 * C17173 + C173 * C17178 +
             C172 * C17172 + C171 * C17177) *
                C17175) *
               C457 -
           (((C117 * C1219 + C50790 * C1227) * C17174 +
             (C117 * C1215 + C50790 * C1220) * C17179 + C8354 * C17173 +
             C8353 * C17178 + C2694 * C17172 + C2693 * C17177) *
                C50828 +
            (C536 * C17174 + C535 * C17179 + C534 * C17173 + C533 * C17178 +
             C532 * C17172 + C531 * C17177) *
                C17175) *
               C459) *
              C50677 * C50664)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C19841 +
            (C117 * C130 + C50790 * C143) * C50630) *
               C19837 +
           (C2491 * C19841 + C2492 * C50630) * C19838 +
           (C2493 * C19841 + C2494 * C50630) * C19839 +
           (C2498 * C19841 + C2497 * C50630) * C19840) *
              C50693 * C50677 * C113 -
          ((C2495 * C50630 + C2496 * C19841) * C19840 +
           (C355 * C50630 + C354 * C19841) * C19839 +
           (C352 * C50630 + C353 * C19841) * C19838 +
           (C172 * C50630 + C171 * C19841) * C19837) *
              C50693 * C50677 * C114 +
          ((C173 * C19841 + C174 * C50630) * C19837 +
           (C351 * C19841 + C350 * C50630) * C19838 +
           (C356 * C19841 + C357 * C50630) * C19839 +
           (C2501 * C19841 + C2502 * C50630) * C19840) *
              C50693 * C50677 * C115 -
          (((C117 * C1105 + C50790 * C1113) * C50630 +
            (C117 * C1101 + C50790 * C1106) * C19841) *
               C19840 +
           (C359 * C50630 + C358 * C19841) * C19839 +
           (C348 * C50630 + C349 * C19841) * C19838 +
           (C176 * C50630 + C175 * C19841) * C19837) *
              C50693 * C50677 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C19841 +
             (C117 * C130 + C50790 * C143) * C50630) *
                C19837 +
            (C19941 + C19942) * C19838 + C19957 * C19839 + C19958 * C19840) *
               C50693 * C278 -
           ((C19947 + C19948) * C19840 + (C19946 + C19945) * C19839 +
            (C19944 + C19943) * C19838 + (C19942 + C19941) * C19837) *
               C50693 * C279 +
           (C19957 * C19837 + C19958 * C19838 + (C19948 + C19947) * C19839 +
            ((C117 * C3487 + C50790 * C3491) * C19841 +
             (C117 * C3490 + C50790 * C3493) * C50630) *
                C19840) *
               C50693 * C280) *
              C281 +
          (((C19949 + C19950) * C19837 + (C19951 + C19952) * C19838 +
            (C19953 + C19954) * C19839 + (C19955 + C19956) * C19840) *
               C50693 * C279 -
           (C19959 * C19840 + C19960 * C19839 + (C19950 + C19949) * C19838 +
            (C172 * C50630 + C171 * C19841) * C19837) *
               C50693 * C278 -
           (((C117 * C3488 + C50790 * C3492) * C50630 +
             (C117 * C3486 + C50790 * C3489) * C19841) *
                C19840 +
            (C19956 + C19955) * C19839 + C19959 * C19838 + C19960 * C19837) *
               C50693 * C280) *
              C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C19841 +
             (C117 * C130 + C50790 * C143) * C50630) *
                C19837 +
            (C19941 + C19942) * C19838 + C19957 * C19839 + C19958 * C19840) *
               C457 -
           ((C4185 * C50630 + C4184 * C19841) * C19840 +
            (C3233 * C50630 + C3234 * C19841) * C19839 +
            (C3235 * C50630 + C3236 * C19841) * C19838 +
            ((C117 * C476 + C50790 * C493) * C50630 +
             (C117 * C463 + C50790 * C477) * C19841) *
                C19837) *
               C458 +
           (((C117 * C464 + C50790 * C478) * C19841 +
             (C117 * C479 + C50790 * C494) * C50630) *
                C19837 +
            (C3674 * C19841 + C3675 * C50630) * C19838 +
            (C3676 * C19841 + C3677 * C50630) * C19839 +
            ((C117 * C3654 + C50790 * C3658) * C19841 +
             (C117 * C3657 + C50790 * C3660) * C50630) *
                C19840) *
               C459) *
              C50677 * C281 +
          (((C530 * C19841 + C529 * C50630) * C19837 +
            (C922 * C19841 + C923 * C50630) * C19838 +
            (C2692 * C19841 + C2691 * C50630) * C19839 +
            (C3237 * C19841 + C3238 * C50630) * C19840) *
               C458 -
           (C19959 * C19840 + C19960 * C19839 + (C19950 + C19949) * C19838 +
            (C172 * C50630 + C171 * C19841) * C19837) *
               C457 -
           (((C117 * C3655 + C50790 * C3659) * C50630 +
             (C117 * C3653 + C50790 * C3656) * C19841) *
                C19840 +
            (C2696 * C50630 + C2695 * C19841) * C19839 +
            (C2694 * C50630 + C2693 * C19841) * C19838 +
            (C532 * C50630 + C531 * C19841) * C19837) *
               C459) *
              C50677 * C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[138] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C17177 +
             (C117 * C130 + C50790 * C143) * C17172 + C171 * C17178 +
             C172 * C17173 + C173 * C17179 + C174 * C17174) *
                C17175 +
            (C17327 + C17328 + C17329 + C17330 + C17331 + C17332) * C50828) *
               C50920 -
           ((C925 * C17174 + C924 * C17179 + C923 * C17173 + C922 * C17178 +
             C3235 * C17172 + C3236 * C17177) *
                C50828 +
            (C527 * C17174 + C528 * C17179 + C529 * C17173 + C530 * C17178 +
             (C117 * C476 + C50790 * C493) * C17172 +
             (C117 * C463 + C50790 * C477) * C17177) *
                C17175) *
               C50757) *
              C50677 * C50962 +
          (((C530 * C17177 + C529 * C17172 + C528 * C17178 + C527 * C17173 +
             C526 * C17179 + C525 * C17174) *
                C17175 +
            (C922 * C17177 + C923 * C17172 + C924 * C17178 + C925 * C17173 +
             C926 * C17179 + C927 * C17174) *
                C50828) *
               C50757 -
           ((C17344 + C17343 + C17342 + C17341 + C17340 + C17339) * C50828 +
            (C176 * C17174 + C175 * C17179 + C174 * C17173 + C173 * C17178 +
             C172 * C17172 + C171 * C17177) *
                C17175) *
               C50920) *
              C50677 * C50963 +
          (((C173 * C17177 + C174 * C17172 + C175 * C17178 + C176 * C17173 +
             C178 * C17179 + C177 * C17174) *
                C17175 +
            (C17643 + C17644 + C17645 + C17646 + C17647 + C17648) * C50828) *
               C50920 -
           (((C117 * C902 + C50790 * C908) * C17174 +
             (C117 * C893 + C50790 * C903) * C17179 + C927 * C17173 +
             C926 * C17178 + C925 * C17172 + C924 * C17177) *
                C50828 +
            (C759 * C17174 + C758 * C17179 + C525 * C17173 + C526 * C17178 +
             C527 * C17172 + C528 * C17177) *
                C17175) *
               C50757) *
              C50677 * C638)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C19841 +
             (C117 * C130 + C50790 * C143) * C50630) *
                C19837 +
            (C19941 + C19942) * C19838 + C19957 * C19839 + C19958 * C19840) *
               C50920 -
           ((C4185 * C50630 + C4184 * C19841) * C19840 +
            (C3233 * C50630 + C3234 * C19841) * C19839 +
            (C3235 * C50630 + C3236 * C19841) * C19838 +
            ((C117 * C476 + C50790 * C493) * C50630 +
             (C117 * C463 + C50790 * C477) * C19841) *
                C19837) *
               C50757) *
              C50677 * C50962 +
          (((C530 * C19841 + C529 * C50630) * C19837 +
            (C922 * C19841 + C923 * C50630) * C19838 +
            (C2692 * C19841 + C2691 * C50630) * C19839 +
            (C3237 * C19841 + C3238 * C50630) * C19840) *
               C50757 -
           (C19959 * C19840 + C19960 * C19839 + (C19950 + C19949) * C19838 +
            (C172 * C50630 + C171 * C19841) * C19837) *
               C50920) *
              C50677 * C50963 +
          (((C173 * C19841 + C174 * C50630) * C19837 +
            (C20157 + C20158) * C19838 + (C20159 + C20160) * C19839 +
            (C20161 + C20162) * C19840) *
               C50920 -
           (((C117 * C3203 + C50790 * C3207) * C50630 +
             (C117 * C3198 + C50790 * C3204) * C19841) *
                C19840 +
            (C3002 * C50630 + C3001 * C19841) * C19839 +
            (C925 * C50630 + C924 * C19841) * C19838 +
            (C527 * C50630 + C528 * C19841) * C19837) *
               C50757) *
              C50677 * C638)) /
            (p * q * std::sqrt(p + q));
    d2ee[139] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C17177 +
            (C117 * C130 + C50790 * C143) * C17172 + C171 * C17178 +
            C172 * C17173 + C173 * C17179 + C174 * C17174) *
               C17175 +
           (C2491 * C17177 + C2492 * C17172 + C353 * C17178 + C352 * C17173 +
            C351 * C17179 + C350 * C17174) *
               C50828) *
              C50693 * C50677 * C113 -
          ((C348 * C17174 + C349 * C17179 + C350 * C17173 + C351 * C17178 +
            C352 * C17172 + C353 * C17177) *
               C50828 +
           (C176 * C17174 + C175 * C17179 + C174 * C17173 + C173 * C17178 +
            C172 * C17172 + C171 * C17177) *
               C17175) *
              C50693 * C50677 * C114 +
          ((C173 * C17177 + C174 * C17172 + C175 * C17178 + C176 * C17173 +
            C178 * C17179 + C177 * C17174) *
               C17175 +
           (C351 * C17177 + C350 * C17172 + C349 * C17178 + C348 * C17173 +
            C648 * C17179 + C649 * C17174) *
               C50828) *
              C50693 * C50677 * C115 -
          (((C117 * C640 + C50790 * C642) * C17174 +
            (C117 * C639 + C50790 * C641) * C17179 + C649 * C17173 +
            C648 * C17178 + C348 * C17172 + C349 * C17177) *
               C50828 +
           (C180 * C17174 + C179 * C17179 + C177 * C17173 + C178 * C17178 +
            C176 * C17172 + C175 * C17177) *
               C17175) *
              C50693 * C50677 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C17177 +
             (C117 * C130 + C50790 * C143) * C17172 + C171 * C17178 +
             C172 * C17173 + C173 * C17179 + C174 * C17174) *
                C17175 +
            (C17327 + C17328 + C17329 + C17330 + C17331 + C17332) * C50828) *
               C50693 * C278 -
           ((C17333 + C17334 + C17335 + C17336 + C17337 + C17338) * C50828 +
            (C17332 + C17331 + C17330 + C17329 + C17328 + C17327) * C17175) *
               C50693 * C279 +
           ((C17338 + C17337 + C17336 + C17335 + C17334 + C17333) * C17175 +
            (C2498 * C17177 + C2497 * C17172 + C2496 * C17178 + C2495 * C17173 +
             C2501 * C17179 + C2502 * C17174) *
                C50828) *
               C50693 * C280) *
              C281 +
          (((C17339 + C17340 + C17341 + C17342 + C17343 + C17344) * C17175 +
            (C17345 + C17346 + C17347 + C17348 + C17349 + C17350) * C50828) *
               C50693 * C279 -
           ((C17344 + C17343 + C17342 + C17341 + C17340 + C17339) * C50828 +
            (C176 * C17174 + C175 * C17179 + C174 * C17173 + C173 * C17178 +
             C172 * C17172 + C171 * C17177) *
                C17175) *
               C50693 * C278 -
           (((C117 * C1105 + C50790 * C1113) * C17174 +
             (C117 * C1101 + C50790 * C1106) * C17179 + C2502 * C17173 +
             C2501 * C17178 + C2495 * C17172 + C2496 * C17177) *
                C50828 +
            (C17350 + C17349 + C17348 + C17347 + C17346 + C17345) * C17175) *
               C50693 * C280) *
              C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C19841 +
            (C117 * C130 + C50790 * C143) * C50630) *
               C19837 +
           (C2491 * C19841 + C2492 * C50630) * C19838 +
           (C2493 * C19841 + C2494 * C50630) * C19839 +
           (C2498 * C19841 + C2497 * C50630) * C19840) *
              C50693 * C50677 * C113 -
          ((C2495 * C50630 + C2496 * C19841) * C19840 +
           (C355 * C50630 + C354 * C19841) * C19839 +
           (C352 * C50630 + C353 * C19841) * C19838 +
           (C172 * C50630 + C171 * C19841) * C19837) *
              C50693 * C50677 * C114 +
          ((C173 * C19841 + C174 * C50630) * C19837 +
           (C351 * C19841 + C350 * C50630) * C19838 +
           (C356 * C19841 + C357 * C50630) * C19839 +
           (C2501 * C19841 + C2502 * C50630) * C19840) *
              C50693 * C50677 * C115 -
          (((C117 * C1105 + C50790 * C1113) * C50630 +
            (C117 * C1101 + C50790 * C1106) * C19841) *
               C19840 +
           (C359 * C50630 + C358 * C19841) * C19839 +
           (C348 * C50630 + C349 * C19841) * C19838 +
           (C176 * C50630 + C175 * C19841) * C19837) *
              C50693 * C50677 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C19841 +
             (C117 * C130 + C50790 * C143) * C50630) *
                C19837 +
            (C19941 + C19942) * C19838 + C19957 * C19839 + C19958 * C19840) *
               C50693 * C278 -
           ((C19947 + C19948) * C19840 + (C19946 + C19945) * C19839 +
            (C19944 + C19943) * C19838 + (C19942 + C19941) * C19837) *
               C50693 * C279 +
           (C19957 * C19837 + C19958 * C19838 + (C19948 + C19947) * C19839 +
            ((C117 * C3487 + C50790 * C3491) * C19841 +
             (C117 * C3490 + C50790 * C3493) * C50630) *
                C19840) *
               C50693 * C280) *
              C281 +
          (((C19949 + C19950) * C19837 + (C19951 + C19952) * C19838 +
            (C19953 + C19954) * C19839 + (C19955 + C19956) * C19840) *
               C50693 * C279 -
           (C19959 * C19840 + C19960 * C19839 + (C19950 + C19949) * C19838 +
            (C172 * C50630 + C171 * C19841) * C19837) *
               C50693 * C278 -
           (((C117 * C3488 + C50790 * C3492) * C50630 +
             (C117 * C3486 + C50790 * C3489) * C19841) *
                C19840 +
            (C19956 + C19955) * C19839 + C19959 * C19838 + C19960 * C19837) *
               C50693 * C280) *
              C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[140] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C17177 +
             (C117 * C130 + C50790 * C143) * C17172 + C171 * C17178 +
             C172 * C17173 + C173 * C17179 + C174 * C17174) *
                C17175 +
            (C17327 + C17328 + C17329 + C17330 + C17331 + C17332) * C50828) *
               C50693 * C50964 -
           ((C17333 + C17334 + C17335 + C17336 + C17337 + C17338) * C50828 +
            (C17332 + C17331 + C17330 + C17329 + C17328 + C17327) * C17175) *
               C50693 * C50965 +
           ((C17338 + C17337 + C17336 + C17335 + C17334 + C17333) * C17175 +
            (C18245 + C18246 + C18247 + C18248 + C18249 + C18250) * C50828) *
               C50693 * C1331) *
              C50911 +
          (((C17339 + C17340 + C17341 + C17342 + C17343 + C17344) * C17175 +
            (C17345 + C17346 + C17347 + C17348 + C17349 + C17350) * C50828) *
               C50693 * C50965 -
           ((C17344 + C17343 + C17342 + C17341 + C17340 + C17339) * C50828 +
            (C176 * C17174 + C175 * C17179 + C174 * C17173 + C173 * C17178 +
             C172 * C17172 + C171 * C17177) *
                C17175) *
               C50693 * C50964 -
           (((C117 * C1105 + C50790 * C1113) * C17174 +
             (C117 * C1101 + C50790 * C1106) * C17179 + C2502 * C17173 +
             C2501 * C17178 + C2495 * C17172 + C2496 * C17177) *
                C50828 +
            (C17350 + C17349 + C17348 + C17347 + C17346 + C17345) * C17175) *
               C50693 * C1331) *
              C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C19841 +
             (C117 * C130 + C50790 * C143) * C50630) *
                C19837 +
            (C19941 + C19942) * C19838 + C19957 * C19839 + C19958 * C19840) *
               C50693 * C50964 -
           (C20571 * C19840 + C20572 * C19839 + (C19944 + C19943) * C19838 +
            (C19942 + C19941) * C19837) *
               C50693 * C50965 +
           (C19957 * C19837 + C19958 * C19838 + (C19948 + C19947) * C19839 +
            (C20579 + C20580) * C19840) *
               C50693 * C1331) *
              C50911 +
          (((C19949 + C19950) * C19837 + (C19951 + C19952) * C19838 +
            (C19953 + C19954) * C19839 + (C19955 + C19956) * C19840) *
               C50693 * C50965 -
           (C19959 * C19840 + C19960 * C19839 + (C19950 + C19949) * C19838 +
            (C172 * C50630 + C171 * C19841) * C19837) *
               C50693 * C50964 -
           (((C117 * C3488 + C50790 * C3492) * C50630 +
             (C117 * C3486 + C50790 * C3489) * C19841) *
                C19840 +
            (C19956 + C19955) * C19839 + C19959 * C19838 + C19960 * C19837) *
               C50693 * C1331) *
              C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[141] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C17177 +
             (C117 * C130 + C50790 * C143) * C17172 + C171 * C17178 +
             C172 * C17173 + C173 * C17179 + C174 * C17174) *
                C17175 +
            (C17327 + C17328 + C17329 + C17330 + C17331 + C17332) * C50828) *
               C50920 -
           ((C17989 + C17990 + C17991 + C17992 + C17993 + C17994) * C50828 +
            (C527 * C17174 + C528 * C17179 + C529 * C17173 + C530 * C17178 +
             (C117 * C476 + C50790 * C493) * C17172 +
             (C117 * C463 + C50790 * C477) * C17177) *
                C17175) *
               C50757) *
              C50964 +
          (((C17994 + C17993 + C17992 + C17991 + C17990 + C17989) * C17175 +
            (C18889 + C18890 + C18891 + C18892 + C18893 + C18894) * C50828) *
               C50757 -
           ((C17333 + C17334 + C17335 + C17336 + C17337 + C17338) * C50828 +
            (C17332 + C17331 + C17330 + C17329 + C17328 + C17327) * C17175) *
               C50920) *
              C50965 +
          (((C17338 + C17337 + C17336 + C17335 + C17334 + C17333) * C17175 +
            (C18245 + C18246 + C18247 + C18248 + C18249 + C18250) * C50828) *
               C50920 -
           (((C117 * C3203 + C50790 * C3207) * C17174 +
             (C117 * C3198 + C50790 * C3204) * C17179 + C3238 * C17173 +
             C3237 * C17178 + C4185 * C17172 + C4184 * C17177) *
                C50828 +
            (C18894 + C18893 + C18892 + C18891 + C18890 + C18889) * C17175) *
               C50757) *
              C1331) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C19841 +
             (C117 * C130 + C50790 * C143) * C50630) *
                C19837 +
            (C19941 + C19942) * C19838 + C19957 * C19839 + C19958 * C19840) *
               C50920 -
           (C21025 * C19840 + C21026 * C19839 + (C20395 + C20396) * C19838 +
            ((C117 * C476 + C50790 * C493) * C50630 +
             (C117 * C463 + C50790 * C477) * C19841) *
                C19837) *
               C50757) *
              C50964 +
          (((C20396 + C20395) * C19837 + (C20394 + C20393) * C19838 +
            (C20392 + C20391) * C19839 + (C21033 + C21034) * C19840) *
               C50757 -
           (C20571 * C19840 + C20572 * C19839 + (C19944 + C19943) * C19838 +
            (C19942 + C19941) * C19837) *
               C50920) *
              C50965 +
          ((C19957 * C19837 + C19958 * C19838 + (C19948 + C19947) * C19839 +
            (C20579 + C20580) * C19840) *
               C50920 -
           (((C117 * C21021 + C50790 * C21023) * C50630 +
             (C117 * C21020 + C50790 * C21022) * C19841) *
                C19840 +
            (C21034 + C21033) * C19839 + C21025 * C19838 + C21026 * C19837) *
               C50757) *
              C1331) *
         C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[142] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C17177 +
            (C117 * C130 + C50790 * C143) * C17172 + C171 * C17178 +
            C172 * C17173 + C173 * C17179 + C174 * C17174) *
               C17175 +
           (C17327 + C17328 + C17329 + C17330 + C17331 + C17332) * C50828) *
              C50693 * C1096 -
          ((C17333 + C17334 + C17335 + C17336 + C17337 + C17338) * C50828 +
           (C17332 + C17331 + C17330 + C17329 + C17328 + C17327) * C17175) *
              C50693 * C1097 +
          ((C17338 + C17337 + C17336 + C17335 + C17334 + C17333) * C17175 +
           (C18245 + C18246 + C18247 + C18248 + C18249 + C18250) * C50828) *
              C50693 * C1098 -
          (((C117 * C2449 + C50790 * C2453) * C17174 +
            (C117 * C2444 + C50790 * C2450) * C17179 + C2500 * C17173 +
            C2499 * C17178 + C3504 * C17172 + C3503 * C17177) *
               C50828 +
           (C18250 + C18249 + C18248 + C18247 + C18246 + C18245) * C17175) *
              C50693 * C1099) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C17177 +
             (C117 * C130 + C50790 * C143) * C17172 + C171 * C17178 +
             C172 * C17173 + C173 * C17179 + C174 * C17174) *
                C17175 +
            (C17327 + C17328 + C17329 + C17330 + C17331 + C17332) * C50828) *
               C50693 * C1025 -
           ((C17333 + C17334 + C17335 + C17336 + C17337 + C17338) * C50828 +
            (C17332 + C17331 + C17330 + C17329 + C17328 + C17327) * C17175) *
               C50693 * C50729) *
              C1027 +
          (((C17339 + C17340 + C17341 + C17342 + C17343 + C17344) * C17175 +
            (C17345 + C17346 + C17347 + C17348 + C17349 + C17350) * C50828) *
               C50693 * C50729 -
           ((C17344 + C17343 + C17342 + C17341 + C17340 + C17339) * C50828 +
            (C176 * C17174 + C175 * C17179 + C174 * C17173 + C173 * C17178 +
             C172 * C17172 + C171 * C17177) *
                C17175) *
               C50693 * C1025) *
              C1028 +
          (((C173 * C17177 + C174 * C17172 + C175 * C17178 + C176 * C17173 +
             C178 * C17179 + C177 * C17174) *
                C17175 +
            (C17643 + C17644 + C17645 + C17646 + C17647 + C17648) * C50828) *
               C50693 * C1025 -
           (((C117 * C311 + C50790 * C322) * C17174 +
             (C117 * C292 + C50790 * C312) * C17179 + C359 * C17173 +
             C358 * C17178 + C357 * C17172 + C356 * C17177) *
                C50828 +
            (C17648 + C17647 + C17646 + C17645 + C17644 + C17643) * C17175) *
               C50693 * C50729) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C17177 +
             (C117 * C130 + C50790 * C143) * C17172 + C171 * C17178 +
             C172 * C17173 + C173 * C17179 + C174 * C17174) *
                C17175 +
            (C17327 + C17328 + C17329 + C17330 + C17331 + C17332) * C50828) *
               C457 -
           ((C17989 + C17990 + C17991 + C17992 + C17993 + C17994) * C50828 +
            (C527 * C17174 + C528 * C17179 + C529 * C17173 + C530 * C17178 +
             (C117 * C476 + C50790 * C493) * C17172 +
             (C117 * C463 + C50790 * C477) * C17177) *
                C17175) *
               C458 +
           (((C117 * C464 + C50790 * C478) * C17177 +
             (C117 * C479 + C50790 * C494) * C17172 + C531 * C17178 +
             C532 * C17173 + C533 * C17179 + C534 * C17174) *
                C17175 +
            (C18397 + C18398 + C18399 + C18400 + C18401 + C18402) * C50828) *
               C459) *
              C1025 +
          (((C17994 + C17993 + C17992 + C17991 + C17990 + C17989) * C17175 +
            (C3234 * C17177 + C3233 * C17172 + C2692 * C17178 + C2691 * C17173 +
             C3001 * C17179 + C3002 * C17174) *
                C50828) *
               C458 -
           ((C17333 + C17334 + C17335 + C17336 + C17337 + C17338) * C50828 +
            (C17332 + C17331 + C17330 + C17329 + C17328 + C17327) * C17175) *
               C457 -
           (((C117 * C2673 + C50790 * C2677) * C17174 +
             (C117 * C2668 + C50790 * C2674) * C17179 + C2696 * C17173 +
             C2695 * C17178 + C3677 * C17172 + C3676 * C17177) *
                C50828 +
            (C18402 + C18401 + C18400 + C18399 + C18398 + C18397) * C17175) *
               C459) *
              C50729) *
         C50658) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C19841 +
             (C117 * C130 + C50790 * C143) * C50630) *
                C19837 +
            (C19941 + C19942) * C19838 + C19957 * C19839 + C19958 * C19840) *
               C50693 * C1025 -
           ((C19947 + C19948) * C19840 + (C19946 + C19945) * C19839 +
            (C19944 + C19943) * C19838 + (C19942 + C19941) * C19837) *
               C50693 * C50729) *
              C1027 +
          (((C19949 + C19950) * C19837 + (C19951 + C19952) * C19838 +
            (C19953 + C19954) * C19839 + (C19955 + C19956) * C19840) *
               C50693 * C50729 -
           (C19959 * C19840 + C19960 * C19839 + (C19950 + C19949) * C19838 +
            (C172 * C50630 + C171 * C19841) * C19837) *
               C50693 * C1025) *
              C1028 +
          (((C173 * C19841 + C174 * C50630) * C19837 +
            (C20157 + C20158) * C19838 + (C20159 + C20160) * C19839 +
            (C20161 + C20162) * C19840) *
               C50693 * C1025 -
           (((C117 * C2449 + C50790 * C2453) * C50630 +
             (C117 * C2444 + C50790 * C2450) * C19841) *
                C19840 +
            (C20162 + C20161) * C19839 + (C20160 + C20159) * C19838 +
            (C20158 + C20157) * C19837) *
               C50693 * C50729) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C19841 +
            (C117 * C130 + C50790 * C143) * C50630) *
               C19837 +
           (C19941 + C19942) * C19838 + C19957 * C19839 + C19958 * C19840) *
              C50693 * C1096 -
          (C20571 * C19840 + C20572 * C19839 + (C19944 + C19943) * C19838 +
           (C19942 + C19941) * C19837) *
              C50693 * C1097 +
          (C19957 * C19837 + C19958 * C19838 + (C19948 + C19947) * C19839 +
           (C20579 + C20580) * C19840) *
              C50693 * C1098 -
          (((C117 * C20567 + C50790 * C20569) * C50630 +
            (C117 * C20566 + C50790 * C20568) * C19841) *
               C19840 +
           (C20580 + C20579) * C19839 + C20571 * C19838 + C20572 * C19837) *
              C50693 * C1099) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C19841 +
             (C117 * C130 + C50790 * C143) * C50630) *
                C19837 +
            (C19941 + C19942) * C19838 + C19957 * C19839 + C19958 * C19840) *
               C457 -
           ((C20391 + C20392) * C19840 + (C20393 + C20394) * C19839 +
            (C20395 + C20396) * C19838 +
            ((C117 * C476 + C50790 * C493) * C50630 +
             (C117 * C463 + C50790 * C477) * C19841) *
                C19837) *
               C458 +
           (((C117 * C464 + C50790 * C478) * C19841 +
             (C117 * C479 + C50790 * C494) * C50630) *
                C19837 +
            (C20683 + C20684) * C19838 + (C20685 + C20686) * C19839 +
            (C20693 + C20694) * C19840) *
               C459) *
              C1025 +
          (((C20396 + C20395) * C19837 + (C20394 + C20393) * C19838 +
            (C20392 + C20391) * C19839 +
            ((C117 * C4168 + C50790 * C4172) * C19841 +
             (C117 * C4171 + C50790 * C4174) * C50630) *
                C19840) *
               C458 -
           (C20571 * C19840 + C20572 * C19839 + (C19944 + C19943) * C19838 +
            (C19942 + C19941) * C19837) *
               C457 -
           (((C117 * C20679 + C50790 * C20681) * C50630 +
             (C117 * C20678 + C50790 * C20680) * C19841) *
                C19840 +
            (C20694 + C20693) * C19839 + (C20686 + C20685) * C19838 +
            (C20684 + C20683) * C19837) *
               C459) *
              C50729) *
         C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[143] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50790 * C129) * C17177 +
              (C117 * C130 + C50790 * C143) * C17172 + C171 * C17178 +
              C172 * C17173 + C173 * C17179 + C174 * C17174) *
                 C17175 +
             (C17327 + C17328 + C17329 + C17330 + C17331 + C17332) * C50828) *
                C50920 -
            ((C17989 + C17990 + C17991 + C17992 + C17993 + C17994) * C50828 +
             (C527 * C17174 + C528 * C17179 + C529 * C17173 + C530 * C17178 +
              (C117 * C476 + C50790 * C493) * C17172 +
              (C117 * C463 + C50790 * C477) * C17177) *
                 C17175) *
                C50757) *
               C1025 +
           (((C17994 + C17993 + C17992 + C17991 + C17990 + C17989) * C17175 +
             (C3234 * C17177 + C3233 * C17172 + C2692 * C17178 +
              C2691 * C17173 + C3001 * C17179 + C3002 * C17174) *
                 C50828) *
                C50757 -
            ((C17333 + C17334 + C17335 + C17336 + C17337 + C17338) * C50828 +
             (C17332 + C17331 + C17330 + C17329 + C17328 + C17327) * C17175) *
                C50920) *
               C50729) *
              C50911 +
          ((((C530 * C17177 + C529 * C17172 + C528 * C17178 + C527 * C17173 +
              C526 * C17179 + C525 * C17174) *
                 C17175 +
             (C17995 + C17996 + C17997 + C17998 + C17999 + C18000) * C50828) *
                C50757 -
            ((C17344 + C17343 + C17342 + C17341 + C17340 + C17339) * C50828 +
             (C176 * C17174 + C175 * C17179 + C174 * C17173 + C173 * C17178 +
              C172 * C17172 + C171 * C17177) *
                 C17175) *
                C50920) *
               C1025 +
           (((C17339 + C17340 + C17341 + C17342 + C17343 + C17344) * C17175 +
             (C17345 + C17346 + C17347 + C17348 + C17349 + C17350) * C50828) *
                C50920 -
            (((C117 * C1566 + C50790 * C1574) * C17174 +
              (C117 * C1562 + C50790 * C1567) * C17179 + C3002 * C17173 +
              C3001 * C17178 + C2691 * C17172 + C2692 * C17177) *
                 C50828 +
             (C18000 + C17999 + C17998 + C17997 + C17996 + C17995) * C17175) *
                C50757) *
               C50729) *
              C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50790 * C129) * C19841 +
              (C117 * C130 + C50790 * C143) * C50630) *
                 C19837 +
             (C19941 + C19942) * C19838 + C19957 * C19839 + C19958 * C19840) *
                C50920 -
            ((C20391 + C20392) * C19840 + (C20393 + C20394) * C19839 +
             (C20395 + C20396) * C19838 +
             ((C117 * C476 + C50790 * C493) * C50630 +
              (C117 * C463 + C50790 * C477) * C19841) *
                 C19837) *
                C50757) *
               C1025 +
           (((C20396 + C20395) * C19837 + (C20394 + C20393) * C19838 +
             (C20392 + C20391) * C19839 +
             ((C117 * C4168 + C50790 * C4172) * C19841 +
              (C117 * C4171 + C50790 * C4174) * C50630) *
                 C19840) *
                C50757 -
            (C20571 * C19840 + C20572 * C19839 + (C19944 + C19943) * C19838 +
             (C19942 + C19941) * C19837) *
                C50920) *
               C50729) *
              C50911 +
          ((((C530 * C19841 + C529 * C50630) * C19837 +
             (C20397 + C20398) * C19838 + (C20399 + C20400) * C19839 +
             (C20401 + C20402) * C19840) *
                C50757 -
            (C19959 * C19840 + C19960 * C19839 + (C19950 + C19949) * C19838 +
             (C172 * C50630 + C171 * C19841) * C19837) *
                C50920) *
               C1025 +
           (((C19949 + C19950) * C19837 + (C19951 + C19952) * C19838 +
             (C19953 + C19954) * C19839 + (C19955 + C19956) * C19840) *
                C50920 -
            (((C117 * C4169 + C50790 * C4173) * C50630 +
              (C117 * C4167 + C50790 * C4170) * C19841) *
                 C19840 +
             (C20402 + C20401) * C19839 + (C20400 + C20399) * C19838 +
             (C20398 + C20397) * C19837) *
                C50757) *
               C50729) *
              C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[144] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C17177 +
             (C117 * C130 + C50790 * C143) * C17172 + C171 * C17178 +
             C172 * C17173 + C173 * C17179 + C174 * C17174) *
                C17175 +
            (C17327 + C17328 + C17329 + C17330 + C17331 + C17332) * C50828) *
               C50693 * C1025 -
           ((C17333 + C17334 + C17335 + C17336 + C17337 + C17338) * C50828 +
            (C17332 + C17331 + C17330 + C17329 + C17328 + C17327) * C17175) *
               C50693 * C50729) *
              C1027 +
          (((C17339 + C17340 + C17341 + C17342 + C17343 + C17344) * C17175 +
            (C17345 + C17346 + C17347 + C17348 + C17349 + C17350) * C50828) *
               C50693 * C50729 -
           ((C17344 + C17343 + C17342 + C17341 + C17340 + C17339) * C50828 +
            (C176 * C17174 + C175 * C17179 + C174 * C17173 + C173 * C17178 +
             C172 * C17172 + C171 * C17177) *
                C17175) *
               C50693 * C1025) *
              C1028 +
          (((C173 * C17177 + C174 * C17172 + C175 * C17178 + C176 * C17173 +
             C178 * C17179 + C177 * C17174) *
                C17175 +
            (C17643 + C17644 + C17645 + C17646 + C17647 + C17648) * C50828) *
               C50693 * C1025 -
           (((C117 * C311 + C50790 * C322) * C17174 +
             (C117 * C292 + C50790 * C312) * C17179 + C359 * C17173 +
             C358 * C17178 + C357 * C17172 + C356 * C17177) *
                C50828 +
            (C17648 + C17647 + C17646 + C17645 + C17644 + C17643) * C17175) *
               C50693 * C50729) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C17177 +
            (C117 * C130 + C50790 * C143) * C17172 + C171 * C17178 +
            C172 * C17173 + C173 * C17179 + C174 * C17174) *
               C17175 +
           (C17327 + C17328 + C17329 + C17330 + C17331 + C17332) * C50828) *
              C50693 * C1096 -
          ((C17333 + C17334 + C17335 + C17336 + C17337 + C17338) * C50828 +
           (C17332 + C17331 + C17330 + C17329 + C17328 + C17327) * C17175) *
              C50693 * C1097 +
          ((C17338 + C17337 + C17336 + C17335 + C17334 + C17333) * C17175 +
           (C18245 + C18246 + C18247 + C18248 + C18249 + C18250) * C50828) *
              C50693 * C1098 -
          (((C117 * C2449 + C50790 * C2453) * C17174 +
            (C117 * C2444 + C50790 * C2450) * C17179 + C2500 * C17173 +
            C2499 * C17178 + C3504 * C17172 + C3503 * C17177) *
               C50828 +
           (C18250 + C18249 + C18248 + C18247 + C18246 + C18245) * C17175) *
              C50693 * C1099) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C19841 +
             (C117 * C130 + C50790 * C143) * C50630) *
                C19837 +
            (C19941 + C19942) * C19838 + C19957 * C19839 + C19958 * C19840) *
               C50693 * C1025 -
           ((C19947 + C19948) * C19840 + (C19946 + C19945) * C19839 +
            (C19944 + C19943) * C19838 + (C19942 + C19941) * C19837) *
               C50693 * C50729) *
              C1027 +
          (((C19949 + C19950) * C19837 + (C19951 + C19952) * C19838 +
            (C19953 + C19954) * C19839 + (C19955 + C19956) * C19840) *
               C50693 * C50729 -
           (C19959 * C19840 + C19960 * C19839 + (C19950 + C19949) * C19838 +
            (C172 * C50630 + C171 * C19841) * C19837) *
               C50693 * C1025) *
              C1028 +
          (((C173 * C19841 + C174 * C50630) * C19837 +
            (C20157 + C20158) * C19838 + (C20159 + C20160) * C19839 +
            (C20161 + C20162) * C19840) *
               C50693 * C1025 -
           (((C117 * C2449 + C50790 * C2453) * C50630 +
             (C117 * C2444 + C50790 * C2450) * C19841) *
                C19840 +
            (C20162 + C20161) * C19839 + (C20160 + C20159) * C19838 +
            (C20158 + C20157) * C19837) *
               C50693 * C50729) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C19841 +
            (C117 * C130 + C50790 * C143) * C50630) *
               C19837 +
           (C19941 + C19942) * C19838 + C19957 * C19839 + C19958 * C19840) *
              C50693 * C1096 -
          (C20571 * C19840 + C20572 * C19839 + (C19944 + C19943) * C19838 +
           (C19942 + C19941) * C19837) *
              C50693 * C1097 +
          (C19957 * C19837 + C19958 * C19838 + (C19948 + C19947) * C19839 +
           (C20579 + C20580) * C19840) *
              C50693 * C1098 -
          (((C117 * C20567 + C50790 * C20569) * C50630 +
            (C117 * C20566 + C50790 * C20568) * C19841) *
               C19840 +
           (C20580 + C20579) * C19839 + C20571 * C19838 + C20572 * C19837) *
              C50693 * C1099) *
         C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[145] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50790 * C129) * C17177 +
              (C117 * C130 + C50790 * C143) * C17172 + C171 * C17178 +
              C172 * C17173 + C173 * C17179 + C174 * C17174) *
                 C17175 +
             (C17327 + C17328 + C17329 + C17330 + C17331 + C17332) * C50828) *
                C1676 -
            ((C17989 + C17990 + C17991 + C17992 + C17993 + C17994) * C50828 +
             (C527 * C17174 + C528 * C17179 + C529 * C17173 + C530 * C17178 +
              (C117 * C476 + C50790 * C493) * C17172 +
              (C117 * C463 + C50790 * C477) * C17177) *
                 C17175) *
                C50757) *
               C50919 +
           (((C17994 + C17993 + C17992 + C17991 + C17990 + C17989) * C17175 +
             (C18889 + C18890 + C18891 + C18892 + C18893 + C18894) * C50828) *
                C50757 -
            ((C17333 + C17334 + C17335 + C17336 + C17337 + C17338) * C50828 +
             (C17332 + C17331 + C17330 + C17329 + C17328 + C17327) * C17175) *
                C1676) *
               C50729) *
              C50911 +
          ((((C530 * C17177 + C529 * C17172 + C528 * C17178 + C527 * C17173 +
              C526 * C17179 + C525 * C17174) *
                 C17175 +
             (C17995 + C17996 + C17997 + C17998 + C17999 + C18000) * C50828) *
                C50757 -
            ((C17344 + C17343 + C17342 + C17341 + C17340 + C17339) * C50828 +
             (C176 * C17174 + C175 * C17179 + C174 * C17173 + C173 * C17178 +
              C172 * C17172 + C171 * C17177) *
                 C17175) *
                C1676) *
               C50919 +
           (((C17339 + C17340 + C17341 + C17342 + C17343 + C17344) * C17175 +
             (C17345 + C17346 + C17347 + C17348 + C17349 + C17350) * C50828) *
                C1676 -
            (((C117 * C1566 + C50790 * C1574) * C17174 +
              (C117 * C1562 + C50790 * C1567) * C17179 + C3002 * C17173 +
              C3001 * C17178 + C2691 * C17172 + C2692 * C17177) *
                 C50828 +
             (C18000 + C17999 + C17998 + C17997 + C17996 + C17995) * C17175) *
                C50757) *
               C50729) *
              C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C122 + C50790 * C129) * C19841 +
              (C117 * C130 + C50790 * C143) * C50630) *
                 C19837 +
             (C19941 + C19942) * C19838 + C19957 * C19839 + C19958 * C19840) *
                C1676 -
            (C21025 * C19840 + C21026 * C19839 + (C20395 + C20396) * C19838 +
             ((C117 * C476 + C50790 * C493) * C50630 +
              (C117 * C463 + C50790 * C477) * C19841) *
                 C19837) *
                C50757) *
               C50919 +
           (((C20396 + C20395) * C19837 + (C20394 + C20393) * C19838 +
             (C20392 + C20391) * C19839 + (C21033 + C21034) * C19840) *
                C50757 -
            (C20571 * C19840 + C20572 * C19839 + (C19944 + C19943) * C19838 +
             (C19942 + C19941) * C19837) *
                C1676) *
               C50729) *
              C50911 +
          ((((C530 * C19841 + C529 * C50630) * C19837 +
             (C20397 + C20398) * C19838 + (C20399 + C20400) * C19839 +
             (C20401 + C20402) * C19840) *
                C50757 -
            (C19959 * C19840 + C19960 * C19839 + (C19950 + C19949) * C19838 +
             (C172 * C50630 + C171 * C19841) * C19837) *
                C1676) *
               C50919 +
           (((C19949 + C19950) * C19837 + (C19951 + C19952) * C19838 +
             (C19953 + C19954) * C19839 + (C19955 + C19956) * C19840) *
                C1676 -
            (((C117 * C4169 + C50790 * C4173) * C50630 +
              (C117 * C4167 + C50790 * C4170) * C19841) *
                 C19840 +
             (C20402 + C20401) * C19839 + (C20400 + C20399) * C19838 +
             (C20398 + C20397) * C19837) *
                C50757) *
               C50729) *
              C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[146] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C17177 +
             (C117 * C130 + C50790 * C143) * C17172 + C171 * C17178 +
             C172 * C17173 + C173 * C17179 + C174 * C17174) *
                C17175 +
            (C17327 + C17328 + C17329 + C17330 + C17331 + C17332) * C50828) *
               C50966 -
           ((C17989 + C17990 + C17991 + C17992 + C17993 + C17994) * C50828 +
            (C527 * C17174 + C528 * C17179 + C529 * C17173 + C530 * C17178 +
             (C117 * C476 + C50790 * C493) * C17172 +
             (C117 * C463 + C50790 * C477) * C17177) *
                C17175) *
               C50967 +
           (((C117 * C464 + C50790 * C478) * C17177 +
             (C117 * C479 + C50790 * C494) * C17172 + C531 * C17178 +
             C532 * C17173 + C533 * C17179 + C534 * C17174) *
                C17175 +
            (C18397 + C18398 + C18399 + C18400 + C18401 + C18402) * C50828) *
               C2092) *
              C50919 +
          (((C17994 + C17993 + C17992 + C17991 + C17990 + C17989) * C17175 +
            (C18889 + C18890 + C18891 + C18892 + C18893 + C18894) * C50828) *
               C50967 -
           ((C17333 + C17334 + C17335 + C17336 + C17337 + C17338) * C50828 +
            (C17332 + C17331 + C17330 + C17329 + C17328 + C17327) * C17175) *
               C50966 -
           (((C117 * C2673 + C50790 * C2677) * C17174 +
             (C117 * C2668 + C50790 * C2674) * C17179 + C2696 * C17173 +
             C2695 * C17178 + C3677 * C17172 + C3676 * C17177) *
                C50828 +
            (C18402 + C18401 + C18400 + C18399 + C18398 + C18397) * C17175) *
               C2092) *
              C50729) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C19841 +
             (C117 * C130 + C50790 * C143) * C50630) *
                C19837 +
            (C19941 + C19942) * C19838 + C19957 * C19839 + C19958 * C19840) *
               C50966 -
           (C21025 * C19840 + C21026 * C19839 + (C20395 + C20396) * C19838 +
            ((C117 * C476 + C50790 * C493) * C50630 +
             (C117 * C463 + C50790 * C477) * C19841) *
                C19837) *
               C50967 +
           (((C117 * C464 + C50790 * C478) * C19841 +
             (C117 * C479 + C50790 * C494) * C50630) *
                C19837 +
            (C20683 + C20684) * C19838 + (C20685 + C20686) * C19839 +
            (C20693 + C20694) * C19840) *
               C2092) *
              C50919 +
          (((C20396 + C20395) * C19837 + (C20394 + C20393) * C19838 +
            (C20392 + C20391) * C19839 + (C21033 + C21034) * C19840) *
               C50967 -
           (C20571 * C19840 + C20572 * C19839 + (C19944 + C19943) * C19838 +
            (C19942 + C19941) * C19837) *
               C50966 -
           (((C117 * C20679 + C50790 * C20681) * C50630 +
             (C117 * C20678 + C50790 * C20680) * C19841) *
                C19840 +
            (C20694 + C20693) * C19839 + (C20686 + C20685) * C19838 +
            (C20684 + C20683) * C19837) *
               C2092) *
              C50729) *
         C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[147] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C17177 +
             (C117 * C130 + C50790 * C143) * C17172 + C171 * C17178 +
             C172 * C17173 + C173 * C17179 + C174 * C17174) *
                C17175 +
            (C17327 + C17328 + C17329 + C17330 + C17331 + C17332) * C50828) *
               C1676 -
           ((C17989 + C17990 + C17991 + C17992 + C17993 + C17994) * C50828 +
            (C527 * C17174 + C528 * C17179 + C529 * C17173 + C530 * C17178 +
             (C117 * C476 + C50790 * C493) * C17172 +
             (C117 * C463 + C50790 * C477) * C17177) *
                C17175) *
               C50757) *
              C278 +
          (((C17994 + C17993 + C17992 + C17991 + C17990 + C17989) * C17175 +
            (C18889 + C18890 + C18891 + C18892 + C18893 + C18894) * C50828) *
               C50757 -
           ((C17333 + C17334 + C17335 + C17336 + C17337 + C17338) * C50828 +
            (C17332 + C17331 + C17330 + C17329 + C17328 + C17327) * C17175) *
               C1676) *
              C279 +
          (((C17338 + C17337 + C17336 + C17335 + C17334 + C17333) * C17175 +
            (C18245 + C18246 + C18247 + C18248 + C18249 + C18250) * C50828) *
               C1676 -
           (((C117 * C3203 + C50790 * C3207) * C17174 +
             (C117 * C3198 + C50790 * C3204) * C17179 + C3238 * C17173 +
             C3237 * C17178 + C4185 * C17172 + C4184 * C17177) *
                C50828 +
            (C18894 + C18893 + C18892 + C18891 + C18890 + C18889) * C17175) *
               C50757) *
              C280) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C17177 +
             (C117 * C130 + C50790 * C143) * C17172 + C171 * C17178 +
             C172 * C17173 + C173 * C17179 + C174 * C17174) *
                C17175 +
            (C17327 + C17328 + C17329 + C17330 + C17331 + C17332) * C50828) *
               C1676 -
           ((C17989 + C17990 + C17991 + C17992 + C17993 + C17994) * C50828 +
            (C527 * C17174 + C528 * C17179 + C529 * C17173 + C530 * C17178 +
             (C117 * C476 + C50790 * C493) * C17172 +
             (C117 * C463 + C50790 * C477) * C17177) *
                C17175) *
               C50757) *
              C50677 * C1027 +
          (((C530 * C17177 + C529 * C17172 + C528 * C17178 + C527 * C17173 +
             C526 * C17179 + C525 * C17174) *
                C17175 +
            (C17995 + C17996 + C17997 + C17998 + C17999 + C18000) * C50828) *
               C50757 -
           ((C17344 + C17343 + C17342 + C17341 + C17340 + C17339) * C50828 +
            (C176 * C17174 + C175 * C17179 + C174 * C17173 + C173 * C17178 +
             C172 * C17172 + C171 * C17177) *
                C17175) *
               C1676) *
              C50677 * C1028 +
          (((C173 * C17177 + C174 * C17172 + C175 * C17178 + C176 * C17173 +
             C178 * C17179 + C177 * C17174) *
                C17175 +
            (C17643 + C17644 + C17645 + C17646 + C17647 + C17648) * C50828) *
               C1676 -
           (((C117 * C902 + C50790 * C908) * C17174 +
             (C117 * C893 + C50790 * C903) * C17179 + C927 * C17173 +
             C926 * C17178 + C925 * C17172 + C924 * C17177) *
                C50828 +
            (C759 * C17174 + C758 * C17179 + C525 * C17173 + C526 * C17178 +
             C527 * C17172 + C528 * C17177) *
                C17175) *
               C50757) *
              C50677 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C17177 +
            (C117 * C130 + C50790 * C143) * C17172 + C171 * C17178 +
            C172 * C17173 + C173 * C17179 + C174 * C17174) *
               C17175 +
           (C17327 + C17328 + C17329 + C17330 + C17331 + C17332) * C50828) *
              C1842 -
          ((C17989 + C17990 + C17991 + C17992 + C17993 + C17994) * C50828 +
           (C527 * C17174 + C528 * C17179 + C529 * C17173 + C530 * C17178 +
            (C117 * C476 + C50790 * C493) * C17172 +
            (C117 * C463 + C50790 * C477) * C17177) *
               C17175) *
              C1843 +
          (((C117 * C464 + C50790 * C478) * C17177 +
            (C117 * C479 + C50790 * C494) * C17172 + C531 * C17178 +
            C532 * C17173 + C533 * C17179 + C534 * C17174) *
               C17175 +
           (C18397 + C18398 + C18399 + C18400 + C18401 + C18402) * C50828) *
              C1844 -
          (((C117 * C6137 + C50790 * C6139) * C17174 +
            (C117 * C6136 + C50790 * C6138) * C17179 +
            (C117 * C4586 + C50790 * C4592) * C17173 +
            (C117 * C4580 + C50790 * C4587) * C17178 +
            (C117 * C4588 + C50790 * C4593) * C17172 +
            (C117 * C4581 + C50790 * C4589) * C17177) *
               C50828 +
           ((C117 * C1852 + C50790 * C1859) * C17174 +
            (C117 * C1847 + C50790 * C1853) * C17179 +
            (C117 * C1854 + C50790 * C1860) * C17173 +
            (C117 * C1848 + C50790 * C1855) * C17178 +
            (C117 * C1856 + C50790 * C1861) * C17172 +
            (C117 * C1849 + C50790 * C1857) * C17177) *
               C17175) *
              C1845) *
         C50677 * C50658) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C19841 +
             (C117 * C130 + C50790 * C143) * C50630) *
                C19837 +
            (C19941 + C19942) * C19838 + C19957 * C19839 + C19958 * C19840) *
               C1676 -
           (C21025 * C19840 + C21026 * C19839 + (C20395 + C20396) * C19838 +
            ((C117 * C476 + C50790 * C493) * C50630 +
             (C117 * C463 + C50790 * C477) * C19841) *
                C19837) *
               C50757) *
              C50677 * C1027 +
          (((C530 * C19841 + C529 * C50630) * C19837 +
            (C20397 + C20398) * C19838 + (C20399 + C20400) * C19839 +
            (C20401 + C20402) * C19840) *
               C50757 -
           (C19959 * C19840 + C19960 * C19839 + (C19950 + C19949) * C19838 +
            (C172 * C50630 + C171 * C19841) * C19837) *
               C1676) *
              C50677 * C1028 +
          (((C173 * C19841 + C174 * C50630) * C19837 +
            (C20157 + C20158) * C19838 + (C20159 + C20160) * C19839 +
            (C20161 + C20162) * C19840) *
               C1676 -
           (((C117 * C3203 + C50790 * C3207) * C50630 +
             (C117 * C3198 + C50790 * C3204) * C19841) *
                C19840 +
            (C3002 * C50630 + C3001 * C19841) * C19839 +
            (C925 * C50630 + C924 * C19841) * C19838 +
            (C527 * C50630 + C528 * C19841) * C19837) *
               C50757) *
              C50677 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C19841 +
             (C117 * C130 + C50790 * C143) * C50630) *
                C19837 +
            (C19941 + C19942) * C19838 + C19957 * C19839 + C19958 * C19840) *
               C1676 -
           (C21025 * C19840 + C21026 * C19839 + (C20395 + C20396) * C19838 +
            ((C117 * C476 + C50790 * C493) * C50630 +
             (C117 * C463 + C50790 * C477) * C19841) *
                C19837) *
               C50757) *
              C278 +
          (((C20396 + C20395) * C19837 + (C20394 + C20393) * C19838 +
            (C20392 + C20391) * C19839 + (C21033 + C21034) * C19840) *
               C50757 -
           (C20571 * C19840 + C20572 * C19839 + (C19944 + C19943) * C19838 +
            (C19942 + C19941) * C19837) *
               C1676) *
              C279 +
          ((C19957 * C19837 + C19958 * C19838 + (C19948 + C19947) * C19839 +
            (C20579 + C20580) * C19840) *
               C1676 -
           (((C117 * C21021 + C50790 * C21023) * C50630 +
             (C117 * C21020 + C50790 * C21022) * C19841) *
                C19840 +
            (C21034 + C21033) * C19839 + C21025 * C19838 + C21026 * C19837) *
               C50757) *
              C280) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C50790 * C129) * C19841 +
            (C117 * C130 + C50790 * C143) * C50630) *
               C19837 +
           (C19941 + C19942) * C19838 + C19957 * C19839 + C19958 * C19840) *
              C1842 -
          (C21025 * C19840 + C21026 * C19839 + (C20395 + C20396) * C19838 +
           ((C117 * C476 + C50790 * C493) * C50630 +
            (C117 * C463 + C50790 * C477) * C19841) *
               C19837) *
              C1843 +
          (((C117 * C464 + C50790 * C478) * C19841 +
            (C117 * C479 + C50790 * C494) * C50630) *
               C19837 +
           (C20683 + C20684) * C19838 + (C20685 + C20686) * C19839 +
           (C20693 + C20694) * C19840) *
              C1844 -
          (((C117 * C21297 + C50790 * C21299) * C50630 +
            (C117 * C21296 + C50790 * C21298) * C19841) *
               C19840 +
           ((C117 * C4584 + C50790 * C4591) * C50630 +
            (C117 * C4579 + C50790 * C4585) * C19841) *
               C19839 +
           ((C117 * C4588 + C50790 * C4593) * C50630 +
            (C117 * C4581 + C50790 * C4589) * C19841) *
               C19838 +
           ((C117 * C1856 + C50790 * C1861) * C50630 +
            (C117 * C1849 + C50790 * C1857) * C19841) *
               C19837) *
              C1845) *
         C50677 * C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[148] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C17177 +
             (C117 * C130 + C50790 * C143) * C17172 + C171 * C17178 +
             C172 * C17173 + C173 * C17179 + C174 * C17174) *
                C17175 +
            (C17327 + C17328 + C17329 + C17330 + C17331 + C17332) * C50828) *
               C50966 -
           ((C17989 + C17990 + C17991 + C17992 + C17993 + C17994) * C50828 +
            (C527 * C17174 + C528 * C17179 + C529 * C17173 + C530 * C17178 +
             (C117 * C476 + C50790 * C493) * C17172 +
             (C117 * C463 + C50790 * C477) * C17177) *
                C17175) *
               C50967 +
           (((C117 * C464 + C50790 * C478) * C17177 +
             (C117 * C479 + C50790 * C494) * C17172 + C531 * C17178 +
             C532 * C17173 + C533 * C17179 + C534 * C17174) *
                C17175 +
            (C18397 + C18398 + C18399 + C18400 + C18401 + C18402) * C50828) *
               C2092) *
              C50677 * C50911 +
          (((C530 * C17177 + C529 * C17172 + C528 * C17178 + C527 * C17173 +
             C526 * C17179 + C525 * C17174) *
                C17175 +
            (C17995 + C17996 + C17997 + C17998 + C17999 + C18000) * C50828) *
               C50967 -
           ((C17344 + C17343 + C17342 + C17341 + C17340 + C17339) * C50828 +
            (C176 * C17174 + C175 * C17179 + C174 * C17173 + C173 * C17178 +
             C172 * C17172 + C171 * C17177) *
                C17175) *
               C50966 -
           (((C117 * C1219 + C50790 * C1227) * C17174 +
             (C117 * C1215 + C50790 * C1220) * C17179 + C8354 * C17173 +
             C8353 * C17178 + C2694 * C17172 + C2693 * C17177) *
                C50828 +
            (C536 * C17174 + C535 * C17179 + C534 * C17173 + C533 * C17178 +
             C532 * C17172 + C531 * C17177) *
                C17175) *
               C2092) *
              C50677 * C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C19841 +
             (C117 * C130 + C50790 * C143) * C50630) *
                C19837 +
            (C19941 + C19942) * C19838 + C19957 * C19839 + C19958 * C19840) *
               C50966 -
           (C21025 * C19840 + C21026 * C19839 + (C20395 + C20396) * C19838 +
            ((C117 * C476 + C50790 * C493) * C50630 +
             (C117 * C463 + C50790 * C477) * C19841) *
                C19837) *
               C50967 +
           (((C117 * C464 + C50790 * C478) * C19841 +
             (C117 * C479 + C50790 * C494) * C50630) *
                C19837 +
            (C20683 + C20684) * C19838 + (C20685 + C20686) * C19839 +
            (C20693 + C20694) * C19840) *
               C2092) *
              C50677 * C50911 +
          (((C530 * C19841 + C529 * C50630) * C19837 +
            (C20397 + C20398) * C19838 + (C20399 + C20400) * C19839 +
            (C20401 + C20402) * C19840) *
               C50967 -
           (C19959 * C19840 + C19960 * C19839 + (C19950 + C19949) * C19838 +
            (C172 * C50630 + C171 * C19841) * C19837) *
               C50966 -
           (((C117 * C3655 + C50790 * C3659) * C50630 +
             (C117 * C3653 + C50790 * C3656) * C19841) *
                C19840 +
            (C2696 * C50630 + C2695 * C19841) * C19839 +
            (C2694 * C50630 + C2693 * C19841) * C19838 +
            (C532 * C50630 + C531 * C19841) * C19837) *
               C2092) *
              C50677 * C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[149] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C17177 +
             (C117 * C130 + C50790 * C143) * C17172 + C171 * C17178 +
             C172 * C17173 + C173 * C17179 + C174 * C17174) *
                C17175 +
            (C17327 + C17328 + C17329 + C17330 + C17331 + C17332) * C50828) *
               C1676 -
           ((C17989 + C17990 + C17991 + C17992 + C17993 + C17994) * C50828 +
            (C527 * C17174 + C528 * C17179 + C529 * C17173 + C530 * C17178 +
             (C117 * C476 + C50790 * C493) * C17172 +
             (C117 * C463 + C50790 * C477) * C17177) *
                C17175) *
               C50757) *
              C50677 * C1027 +
          (((C530 * C17177 + C529 * C17172 + C528 * C17178 + C527 * C17173 +
             C526 * C17179 + C525 * C17174) *
                C17175 +
            (C17995 + C17996 + C17997 + C17998 + C17999 + C18000) * C50828) *
               C50757 -
           ((C17344 + C17343 + C17342 + C17341 + C17340 + C17339) * C50828 +
            (C176 * C17174 + C175 * C17179 + C174 * C17173 + C173 * C17178 +
             C172 * C17172 + C171 * C17177) *
                C17175) *
               C1676) *
              C50677 * C1028 +
          (((C173 * C17177 + C174 * C17172 + C175 * C17178 + C176 * C17173 +
             C178 * C17179 + C177 * C17174) *
                C17175 +
            (C17643 + C17644 + C17645 + C17646 + C17647 + C17648) * C50828) *
               C1676 -
           (((C117 * C902 + C50790 * C908) * C17174 +
             (C117 * C893 + C50790 * C903) * C17179 + C927 * C17173 +
             C926 * C17178 + C925 * C17172 + C924 * C17177) *
                C50828 +
            (C759 * C17174 + C758 * C17179 + C525 * C17173 + C526 * C17178 +
             C527 * C17172 + C528 * C17177) *
                C17175) *
               C50757) *
              C50677 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C17177 +
             (C117 * C130 + C50790 * C143) * C17172 + C171 * C17178 +
             C172 * C17173 + C173 * C17179 + C174 * C17174) *
                C17175 +
            (C17327 + C17328 + C17329 + C17330 + C17331 + C17332) * C50828) *
               C1676 -
           ((C17989 + C17990 + C17991 + C17992 + C17993 + C17994) * C50828 +
            (C527 * C17174 + C528 * C17179 + C529 * C17173 + C530 * C17178 +
             (C117 * C476 + C50790 * C493) * C17172 +
             (C117 * C463 + C50790 * C477) * C17177) *
                C17175) *
               C50757) *
              C278 +
          (((C17994 + C17993 + C17992 + C17991 + C17990 + C17989) * C17175 +
            (C18889 + C18890 + C18891 + C18892 + C18893 + C18894) * C50828) *
               C50757 -
           ((C17333 + C17334 + C17335 + C17336 + C17337 + C17338) * C50828 +
            (C17332 + C17331 + C17330 + C17329 + C17328 + C17327) * C17175) *
               C1676) *
              C279 +
          (((C17338 + C17337 + C17336 + C17335 + C17334 + C17333) * C17175 +
            (C18245 + C18246 + C18247 + C18248 + C18249 + C18250) * C50828) *
               C1676 -
           (((C117 * C3203 + C50790 * C3207) * C17174 +
             (C117 * C3198 + C50790 * C3204) * C17179 + C3238 * C17173 +
             C3237 * C17178 + C4185 * C17172 + C4184 * C17177) *
                C50828 +
            (C18894 + C18893 + C18892 + C18891 + C18890 + C18889) * C17175) *
               C50757) *
              C280) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C19841 +
             (C117 * C130 + C50790 * C143) * C50630) *
                C19837 +
            (C19941 + C19942) * C19838 + C19957 * C19839 + C19958 * C19840) *
               C1676 -
           (C21025 * C19840 + C21026 * C19839 + (C20395 + C20396) * C19838 +
            ((C117 * C476 + C50790 * C493) * C50630 +
             (C117 * C463 + C50790 * C477) * C19841) *
                C19837) *
               C50757) *
              C50677 * C1027 +
          (((C530 * C19841 + C529 * C50630) * C19837 +
            (C20397 + C20398) * C19838 + (C20399 + C20400) * C19839 +
            (C20401 + C20402) * C19840) *
               C50757 -
           (C19959 * C19840 + C19960 * C19839 + (C19950 + C19949) * C19838 +
            (C172 * C50630 + C171 * C19841) * C19837) *
               C1676) *
              C50677 * C1028 +
          (((C173 * C19841 + C174 * C50630) * C19837 +
            (C20157 + C20158) * C19838 + (C20159 + C20160) * C19839 +
            (C20161 + C20162) * C19840) *
               C1676 -
           (((C117 * C3203 + C50790 * C3207) * C50630 +
             (C117 * C3198 + C50790 * C3204) * C19841) *
                C19840 +
            (C3002 * C50630 + C3001 * C19841) * C19839 +
            (C925 * C50630 + C924 * C19841) * C19838 +
            (C527 * C50630 + C528 * C19841) * C19837) *
               C50757) *
              C50677 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C50790 * C129) * C19841 +
             (C117 * C130 + C50790 * C143) * C50630) *
                C19837 +
            (C19941 + C19942) * C19838 + C19957 * C19839 + C19958 * C19840) *
               C1676 -
           (C21025 * C19840 + C21026 * C19839 + (C20395 + C20396) * C19838 +
            ((C117 * C476 + C50790 * C493) * C50630 +
             (C117 * C463 + C50790 * C477) * C19841) *
                C19837) *
               C50757) *
              C278 +
          (((C20396 + C20395) * C19837 + (C20394 + C20393) * C19838 +
            (C20392 + C20391) * C19839 + (C21033 + C21034) * C19840) *
               C50757 -
           (C20571 * C19840 + C20572 * C19839 + (C19944 + C19943) * C19838 +
            (C19942 + C19941) * C19837) *
               C1676) *
              C279 +
          ((C19957 * C19837 + C19958 * C19838 + (C19948 + C19947) * C19839 +
            (C20579 + C20580) * C19840) *
               C1676 -
           (((C117 * C21021 + C50790 * C21023) * C50630 +
             (C117 * C21020 + C50790 * C21022) * C19841) *
                C19840 +
            (C21034 + C21033) * C19839 + C21025 * C19838 + C21026 * C19837) *
               C50757) *
              C280) *
         C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[150] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C49749 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C50904 +
             (C33390 + C33391) * C49742 + (C33392 + C33393) * C50635) *
                C50932 +
            ((C36366 + C36367) * C49749 + (C36368 + C36369) * C50904 +
             C40968 * C49742 + C40969 * C50635) *
                C50828) *
               C50693 * C50919 -
           ((C36364 * C50635 + C36365 * C49742 + (C36373 + C36372) * C50904 +
             (C36371 + C36370) * C49749) *
                C50828 +
            (C40970 * C50635 + C40971 * C49742 + (C36369 + C36368) * C50904 +
             (C36367 + C36366) * C49749) *
                C50932) *
               C50693 * C50729) *
              C50962 +
          (((C40968 * C49749 + C40969 * C50904 + C41374 * C49742 +
             C41375 * C50635) *
                C50932 +
            (C40972 * C49749 + C40973 * C50904 + (C33600 + C33601) * C49742 +
             (C33602 + C33603) * C50635) *
                C50828) *
               C50693 * C50729 -
           ((C33944 * C50635 + C33945 * C49742 + C40970 * C50904 +
             C40971 * C49749) *
                C50828 +
            ((C33397 + C33396) * C50635 + (C33395 + C33394) * C49742 +
             (C33393 + C33392) * C50904 + (C33391 + C33390) * C49749) *
                C50932) *
               C50693 * C50919) *
              C50963 +
          (((C33406 * C49749 + C33407 * C50904 + (C33401 + C33400) * C49742 +
             (C33399 + C33398) * C50635) *
                C50932 +
            (C41374 * C49749 + C41375 * C50904 + (C33954 + C33955) * C49742 +
             (C33956 + C33957) * C50635) *
                C50828) *
               C50693 * C50919 -
           (((C33356 * C1566 + C50854 * C1574 + C33355 * C308 + C33353 * C320) *
                 C50635 +
             (C33356 * C1562 + C50854 * C1567 + C33355 * C290 + C33353 * C307) *
                 C49742 +
             (C33603 + C33602) * C50904 + (C33601 + C33600) * C49749) *
                C50828 +
            ((C33957 + C33956) * C50635 + (C33955 + C33954) * C49742 +
             C33944 * C50904 + C33945 * C49749) *
                C50932) *
               C50693 * C50729) *
              C638)) /
        (p * q * std::sqrt(p + q));
    d2ee[151] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                  C49749 +
              (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                  C50904 +
              (C33390 + C33391) * C49742 + (C33392 + C33393) * C50635) *
                 C50932 +
             ((C36366 + C36367) * C49749 + (C36368 + C36369) * C50904 +
              C40968 * C49742 + C40969 * C50635) *
                 C50828) *
                C50920 -
            ((C41828 * C50635 + C41829 * C49742 + (C37050 + C37051) * C50904 +
              (C37052 + C37053) * C49749) *
                 C50828 +
             ((C33786 + C33787) * C50635 + (C33788 + C33789) * C49742 +
              (C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                  C50904 +
              (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                  C49749) *
                 C50932) *
                C50757) *
               C50919 +
           ((((C37053 + C37052) * C49749 + (C37051 + C37050) * C50904 +
              C41830 * C49742 + C41831 * C50635) *
                 C50932 +
             ((C37049 + C37048) * C49749 + (C37047 + C37046) * C50904 +
              (C37054 + C37055) * C49742 + (C37056 + C37057) * C50635) *
                 C50828) *
                C50757 -
            ((C36364 * C50635 + C36365 * C49742 + (C36373 + C36372) * C50904 +
              (C36371 + C36370) * C49749) *
                 C50828 +
             (C40970 * C50635 + C40971 * C49742 + (C36369 + C36368) * C50904 +
              (C36367 + C36366) * C49749) *
                 C50932) *
                C50920) *
               C50729) *
              C281 +
          (((((C33789 + C33788) * C49749 + (C33787 + C33786) * C50904 +
              (C33785 + C33784) * C49742 + (C33783 + C33782) * C50635) *
                 C50932 +
             (C41830 * C49749 + C41831 * C50904 + (C34332 + C34333) * C49742 +
              (C34334 + C34335) * C50635) *
                 C50828) *
                C50757 -
            ((C33944 * C50635 + C33945 * C49742 + C40970 * C50904 +
              C40971 * C49749) *
                 C50828 +
             ((C33397 + C33396) * C50635 + (C33395 + C33394) * C49742 +
              (C33393 + C33392) * C50904 + (C33391 + C33390) * C49749) *
                 C50932) *
                C50920) *
               C50919 +
           (((C40968 * C49749 + C40969 * C50904 + C41374 * C49742 +
              C41375 * C50635) *
                 C50932 +
             (C40972 * C49749 + C40973 * C50904 + (C33600 + C33601) * C49742 +
              (C33602 + C33603) * C50635) *
                 C50828) *
                C50920 -
            (((C33356 * C2673 + C50854 * C2677 + C33355 * C1568 +
               C33353 * C1575) *
                  C50635 +
              (C33356 * C2668 + C50854 * C2674 + C33355 * C1563 +
               C33353 * C1569) *
                  C49742 +
              (C37057 + C37056) * C50904 + (C37055 + C37054) * C49749) *
                 C50828 +
             ((C34335 + C34334) * C50635 + (C34333 + C34332) * C49742 +
              C41828 * C50904 + C41829 * C49749) *
                 C50932) *
                C50757) *
               C50729) *
              C50664)) /
        (p * q * std::sqrt(p + q));
    d2ee[152] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C49749 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C50904 +
             (C33390 + C33391) * C49742 + (C33392 + C33393) * C50635) *
                C50932 +
            ((C36366 + C36367) * C49749 + (C36368 + C36369) * C50904 +
             C40968 * C49742 + C40969 * C50635) *
                C50828) *
               C50693 * C278 -
           ((C36364 * C50635 + C36365 * C49742 + (C36373 + C36372) * C50904 +
             (C36371 + C36370) * C49749) *
                C50828 +
            (C40970 * C50635 + C40971 * C49742 + (C36369 + C36368) * C50904 +
             (C36367 + C36366) * C49749) *
                C50932) *
               C50693 * C279 +
           ((C36384 * C49749 + C36385 * C50904 + C40972 * C49742 +
             C40973 * C50635) *
                C50932 +
            ((C36377 + C36376) * C49749 + (C36375 + C36374) * C50904 +
             (C36378 + C36379) * C49742 + (C36380 + C36381) * C50635) *
                C50828) *
               C50693 * C280) *
              C281 +
          (((C40968 * C49749 + C40969 * C50904 + (C33591 + C33590) * C49742 +
             (C33589 + C33588) * C50635) *
                C50932 +
            (C40972 * C49749 + C40973 * C50904 + (C33600 + C33601) * C49742 +
             (C33602 + C33603) * C50635) *
                C50828) *
               C50693 * C279 -
           ((C33944 * C50635 + C33945 * C49742 + C40970 * C50904 +
             C40971 * C49749) *
                C50828 +
            ((C33397 + C33396) * C50635 + (C33395 + C33394) * C49742 +
             (C33393 + C33392) * C50904 + (C33391 + C33390) * C49749) *
                C50932) *
               C50693 * C278 -
           (((C33356 * C3203 + C50854 * C3207 + C33355 * C1107 +
              C33353 * C1114) *
                 C50635 +
             (C33356 * C3198 + C50854 * C3204 + C33355 * C1102 +
              C33353 * C1108) *
                 C49742 +
             (C36381 + C36380) * C50904 + (C36379 + C36378) * C49749) *
                C50828 +
            ((C33603 + C33602) * C50635 + (C33601 + C33600) * C49742 +
             C36364 * C50904 + C36365 * C49749) *
                C50932) *
               C50693 * C280) *
              C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                C49749 +
            (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                C50904 +
            (C33390 + C33391) * C49742 + (C33392 + C33393) * C50635) *
               C50932 +
           ((C36366 + C36367) * C49749 + (C36368 + C36369) * C50904 +
            (C33595 + C33594) * C49742 + (C33593 + C33592) * C50635) *
               C50828) *
              C50693 * C50677 * C113 -
          ((C33944 * C50635 + C33945 * C49742 + (C33592 + C33593) * C50904 +
            (C33594 + C33595) * C49749) *
               C50828 +
           ((C33397 + C33396) * C50635 + (C33395 + C33394) * C49742 +
            (C33393 + C33392) * C50904 + (C33391 + C33390) * C49749) *
               C50932) *
              C50693 * C50677 * C114 +
          ((C33406 * C49749 + C33407 * C50904 + (C33401 + C33400) * C49742 +
            (C33399 + C33398) * C50635) *
               C50932 +
           ((C33591 + C33590) * C49749 + (C33589 + C33588) * C50904 +
            (C33954 + C33955) * C49742 + (C33956 + C33957) * C50635) *
               C50828) *
              C50693 * C50677 * C115 -
          (((C33356 * C902 + C50854 * C908 + C33355 * C310 + C33353 * C321) *
                C50635 +
            (C33356 * C893 + C50854 * C903 + C33355 * C291 + C33353 * C309) *
                C49742 +
            (C33957 + C33956) * C50904 + (C33955 + C33954) * C49749) *
               C50828 +
           ((C33405 + C33404) * C50635 + (C33403 + C33402) * C49742 +
            C33408 * C50904 + C33409 * C49749) *
               C50932) *
              C50693 * C50677 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C49749 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C50904 +
             (C33390 + C33391) * C49742 + (C33392 + C33393) * C50635) *
                C50932 +
            ((C36366 + C36367) * C49749 + (C36368 + C36369) * C50904 +
             C40968 * C49742 + C40969 * C50635) *
                C50828) *
               C457 -
           (((C34331 + C34330) * C50635 + (C34329 + C34328) * C49742 +
             (C37050 + C37051) * C50904 + (C37052 + C37053) * C49749) *
                C50828 +
            ((C33786 + C33787) * C50635 + (C33788 + C33789) * C49742 +
             (C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                 C50904 +
             (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                 C49749) *
                C50932) *
               C458 +
           (((C33355 * C464 + C33353 * C478 + C33356 * C1849 + C50854 * C1857) *
                 C49749 +
             (C33355 * C479 + C33353 * C494 + C33356 * C1856 + C50854 * C1861) *
                 C50904 +
             (C33790 + C33791) * C49742 + (C33792 + C33793) * C50635) *
                C50932 +
            ((C37481 + C37482) * C49749 + (C37483 + C37484) * C50904 +
             (C41176 + C41177) * C49742 + (C41178 + C41179) * C50635) *
                C50828) *
               C459) *
              C50677 * C281 +
          ((((C33789 + C33788) * C49749 + (C33787 + C33786) * C50904 +
             (C33785 + C33784) * C49742 + (C33783 + C33782) * C50635) *
                C50932 +
            ((C34328 + C34329) * C49749 + (C34330 + C34331) * C50904 +
             (C34332 + C34333) * C49742 + (C34334 + C34335) * C50635) *
                C50828) *
               C458 -
           ((C33944 * C50635 + C33945 * C49742 + C40970 * C50904 +
             C40971 * C49749) *
                C50828 +
            ((C33397 + C33396) * C50635 + (C33395 + C33394) * C49742 +
             (C33393 + C33392) * C50904 + (C33391 + C33390) * C49749) *
                C50932) *
               C457 -
           (((C33356 * C6137 + C50854 * C6139 + C33355 * C1221 +
              C33353 * C1228) *
                 C50635 +
             (C33356 * C6136 + C50854 * C6138 + C33355 * C1216 +
              C33353 * C1222) *
                 C49742 +
             (C41179 + C41178) * C50904 + (C41177 + C41176) * C49749) *
                C50828 +
            ((C33797 + C33796) * C50635 + (C33795 + C33794) * C49742 +
             (C33793 + C33792) * C50904 + (C33791 + C33790) * C49749) *
                C50932) *
               C459) *
              C50677 * C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[153] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C49749 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C50904 +
             (C33390 + C33391) * C49742 + (C33392 + C33393) * C50635) *
                C50932 +
            ((C36366 + C36367) * C49749 + (C36368 + C36369) * C50904 +
             C40968 * C49742 + C40969 * C50635) *
                C50828) *
               C50920 -
           (((C34331 + C34330) * C50635 + (C34329 + C34328) * C49742 +
             (C37050 + C37051) * C50904 + (C37052 + C37053) * C49749) *
                C50828 +
            ((C33786 + C33787) * C50635 + (C33788 + C33789) * C49742 +
             (C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                 C50904 +
             (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                 C49749) *
                C50932) *
               C50757) *
              C50677 * C50962 +
          ((((C33789 + C33788) * C49749 + (C33787 + C33786) * C50904 +
             (C33785 + C33784) * C49742 + (C33783 + C33782) * C50635) *
                C50932 +
            ((C34328 + C34329) * C49749 + (C34330 + C34331) * C50904 +
             (C34332 + C34333) * C49742 + (C34334 + C34335) * C50635) *
                C50828) *
               C50757 -
           ((C33944 * C50635 + C33945 * C49742 + C40970 * C50904 +
             C40971 * C49749) *
                C50828 +
            ((C33397 + C33396) * C50635 + (C33395 + C33394) * C49742 +
             (C33393 + C33392) * C50904 + (C33391 + C33390) * C49749) *
                C50932) *
               C50920) *
              C50677 * C50963 +
          (((C33406 * C49749 + C33407 * C50904 + (C33401 + C33400) * C49742 +
             (C33399 + C33398) * C50635) *
                C50932 +
            (C41374 * C49749 + C41375 * C50904 + (C33954 + C33955) * C49742 +
             (C33956 + C33957) * C50635) *
                C50828) *
               C50920 -
           (((C33356 * C1219 + C50854 * C1227 + C33355 * C901 + C33353 * C907) *
                 C50635 +
             (C33356 * C1215 + C50854 * C1220 + C33355 * C892 + C33353 * C900) *
                 C49742 +
             (C34335 + C34334) * C50904 + (C34333 + C34332) * C49749) *
                C50828 +
            ((C34117 + C34116) * C50635 + (C34115 + C34114) * C49742 +
             C34104 * C50904 + C34105 * C49749) *
                C50932) *
               C50757) *
              C50677 * C638)) /
        (p * q * std::sqrt(p + q));
    d2ee[154] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                C49749 +
            (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                C50904 +
            (C33390 + C33391) * C49742 + (C33392 + C33393) * C50635) *
               C50932 +
           ((C36366 + C36367) * C49749 + (C36368 + C36369) * C50904 +
            (C33595 + C33594) * C49742 + (C33593 + C33592) * C50635) *
               C50828) *
              C50693 * C50677 * C113 -
          ((C33944 * C50635 + C33945 * C49742 + (C33592 + C33593) * C50904 +
            (C33594 + C33595) * C49749) *
               C50828 +
           ((C33397 + C33396) * C50635 + (C33395 + C33394) * C49742 +
            (C33393 + C33392) * C50904 + (C33391 + C33390) * C49749) *
               C50932) *
              C50693 * C50677 * C114 +
          ((C33406 * C49749 + C33407 * C50904 + (C33401 + C33400) * C49742 +
            (C33399 + C33398) * C50635) *
               C50932 +
           ((C33591 + C33590) * C49749 + (C33589 + C33588) * C50904 +
            (C33954 + C33955) * C49742 + (C33956 + C33957) * C50635) *
               C50828) *
              C50693 * C50677 * C115 -
          (((C33356 * C902 + C50854 * C908 + C33355 * C310 + C33353 * C321) *
                C50635 +
            (C33356 * C893 + C50854 * C903 + C33355 * C291 + C33353 * C309) *
                C49742 +
            (C33957 + C33956) * C50904 + (C33955 + C33954) * C49749) *
               C50828 +
           ((C33405 + C33404) * C50635 + (C33403 + C33402) * C49742 +
            C33408 * C50904 + C33409 * C49749) *
               C50932) *
              C50693 * C50677 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C49749 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C50904 +
             (C33390 + C33391) * C49742 + (C33392 + C33393) * C50635) *
                C50932 +
            ((C36366 + C36367) * C49749 + (C36368 + C36369) * C50904 +
             C40968 * C49742 + C40969 * C50635) *
                C50828) *
               C50693 * C278 -
           ((C36364 * C50635 + C36365 * C49742 + (C36373 + C36372) * C50904 +
             (C36371 + C36370) * C49749) *
                C50828 +
            (C40970 * C50635 + C40971 * C49742 + (C36369 + C36368) * C50904 +
             (C36367 + C36366) * C49749) *
                C50932) *
               C50693 * C279 +
           ((C36384 * C49749 + C36385 * C50904 + C40972 * C49742 +
             C40973 * C50635) *
                C50932 +
            ((C36377 + C36376) * C49749 + (C36375 + C36374) * C50904 +
             (C36378 + C36379) * C49742 + (C36380 + C36381) * C50635) *
                C50828) *
               C50693 * C280) *
              C281 +
          (((C40968 * C49749 + C40969 * C50904 + (C33591 + C33590) * C49742 +
             (C33589 + C33588) * C50635) *
                C50932 +
            (C40972 * C49749 + C40973 * C50904 + (C33600 + C33601) * C49742 +
             (C33602 + C33603) * C50635) *
                C50828) *
               C50693 * C279 -
           ((C33944 * C50635 + C33945 * C49742 + C40970 * C50904 +
             C40971 * C49749) *
                C50828 +
            ((C33397 + C33396) * C50635 + (C33395 + C33394) * C49742 +
             (C33393 + C33392) * C50904 + (C33391 + C33390) * C49749) *
                C50932) *
               C50693 * C278 -
           (((C33356 * C3203 + C50854 * C3207 + C33355 * C1107 +
              C33353 * C1114) *
                 C50635 +
             (C33356 * C3198 + C50854 * C3204 + C33355 * C1102 +
              C33353 * C1108) *
                 C49742 +
             (C36381 + C36380) * C50904 + (C36379 + C36378) * C49749) *
                C50828 +
            ((C33603 + C33602) * C50635 + (C33601 + C33600) * C49742 +
             C36364 * C50904 + C36365 * C49749) *
                C50932) *
               C50693 * C280) *
              C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[155] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C49749 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C50904 +
             (C33390 + C33391) * C49742 + (C33392 + C33393) * C50635) *
                C50932 +
            ((C36366 + C36367) * C49749 + (C36368 + C36369) * C50904 +
             C40968 * C49742 + C40969 * C50635) *
                C50828) *
               C50693 * C50964 -
           ((C36364 * C50635 + C36365 * C49742 + (C36373 + C36372) * C50904 +
             (C36371 + C36370) * C49749) *
                C50828 +
            (C40970 * C50635 + C40971 * C49742 + (C36369 + C36368) * C50904 +
             (C36367 + C36366) * C49749) *
                C50932) *
               C50693 * C50965 +
           ((C36384 * C49749 + C36385 * C50904 + C40972 * C49742 +
             C40973 * C50635) *
                C50932 +
            ((C36377 + C36376) * C49749 + (C36375 + C36374) * C50904 +
             (C36378 + C36379) * C49742 + (C36380 + C36381) * C50635) *
                C50828) *
               C50693 * C1331) *
              C50911 +
          (((C40968 * C49749 + C40969 * C50904 + C41374 * C49742 +
             C41375 * C50635) *
                C50932 +
            (C40972 * C49749 + C40973 * C50904 + (C33600 + C33601) * C49742 +
             (C33602 + C33603) * C50635) *
                C50828) *
               C50693 * C50965 -
           ((C33944 * C50635 + C33945 * C49742 + C40970 * C50904 +
             C40971 * C49749) *
                C50828 +
            ((C33397 + C33396) * C50635 + (C33395 + C33394) * C49742 +
             (C33393 + C33392) * C50904 + (C33391 + C33390) * C49749) *
                C50932) *
               C50693 * C50964 -
           (((C33356 * C3203 + C50854 * C3207 + C33355 * C1107 +
              C33353 * C1114) *
                 C50635 +
             (C33356 * C3198 + C50854 * C3204 + C33355 * C1102 +
              C33353 * C1108) *
                 C49742 +
             (C36381 + C36380) * C50904 + (C36379 + C36378) * C49749) *
                C50828 +
            ((C33603 + C33602) * C50635 + (C33601 + C33600) * C49742 +
             C36364 * C50904 + C36365 * C49749) *
                C50932) *
               C50693 * C1331) *
              C50664)) /
        (p * q * std::sqrt(p + q));
    d2ee[156] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C49749 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C50904 +
             (C33390 + C33391) * C49742 + (C33392 + C33393) * C50635) *
                C50932 +
            ((C36366 + C36367) * C49749 + (C36368 + C36369) * C50904 +
             C40968 * C49742 + C40969 * C50635) *
                C50828) *
               C50920 -
           ((C41828 * C50635 + C41829 * C49742 + (C37050 + C37051) * C50904 +
             (C37052 + C37053) * C49749) *
                C50828 +
            ((C33786 + C33787) * C50635 + (C33788 + C33789) * C49742 +
             (C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                 C50904 +
             (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                 C49749) *
                C50932) *
               C50757) *
              C50964 +
          ((((C37053 + C37052) * C49749 + (C37051 + C37050) * C50904 +
             C41830 * C49742 + C41831 * C50635) *
                C50932 +
            ((C37049 + C37048) * C49749 + (C37047 + C37046) * C50904 +
             (C37054 + C37055) * C49742 + (C37056 + C37057) * C50635) *
                C50828) *
               C50757 -
           ((C36364 * C50635 + C36365 * C49742 + (C36373 + C36372) * C50904 +
             (C36371 + C36370) * C49749) *
                C50828 +
            (C40970 * C50635 + C40971 * C49742 + (C36369 + C36368) * C50904 +
             (C36367 + C36366) * C49749) *
                C50932) *
               C50920) *
              C50965 +
          (((C36384 * C49749 + C36385 * C50904 + C40972 * C49742 +
             C40973 * C50635) *
                C50932 +
            ((C36377 + C36376) * C49749 + (C36375 + C36374) * C50904 +
             (C36378 + C36379) * C49742 + (C36380 + C36381) * C50635) *
                C50828) *
               C50920 -
           (((C33356 * C3655 + C50854 * C3659 + C33355 * C3202 +
              C33353 * C3206) *
                 C50635 +
             (C33356 * C3653 + C50854 * C3656 + C33355 * C3197 +
              C33353 * C3201) *
                 C49742 +
             (C37990 + C37989) * C50904 + (C37988 + C37987) * C49749) *
                C50828 +
            ((C37057 + C37056) * C50635 + (C37055 + C37054) * C49742 +
             C37975 * C50904 + C37976 * C49749) *
                C50932) *
               C50757) *
              C1331) *
         C50658) /
        (p * q * std::sqrt(p + q));
    d2ee[157] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                C49749 +
            (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                C50904 +
            (C33390 + C33391) * C49742 + (C33392 + C33393) * C50635) *
               C50932 +
           ((C36366 + C36367) * C49749 + (C36368 + C36369) * C50904 +
            C40968 * C49742 + C40969 * C50635) *
               C50828) *
              C50693 * C1096 -
          ((C36364 * C50635 + C36365 * C49742 + (C36373 + C36372) * C50904 +
            (C36371 + C36370) * C49749) *
               C50828 +
           (C40970 * C50635 + C40971 * C49742 + (C36369 + C36368) * C50904 +
            (C36367 + C36366) * C49749) *
               C50932) *
              C50693 * C1097 +
          ((C36384 * C49749 + C36385 * C50904 + C40972 * C49742 +
            C40973 * C50635) *
               C50932 +
           ((C36377 + C36376) * C49749 + (C36375 + C36374) * C50904 +
            (C36378 + C36379) * C49742 + (C36380 + C36381) * C50635) *
               C50828) *
              C50693 * C1098 -
          (((C33356 * C4169 + C50854 * C4173 + C33355 * C2448 +
             C33353 * C2452) *
                C50635 +
            (C33356 * C4167 + C50854 * C4170 + C33355 * C2443 +
             C33353 * C2447) *
                C49742 +
            (C37317 + C37316) * C50904 + (C37315 + C37314) * C49749) *
               C50828 +
           ((C36381 + C36380) * C50635 + (C36379 + C36378) * C49742 +
            C37302 * C50904 + C37303 * C49749) *
               C50932) *
              C50693 * C1099) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C49749 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C50904 +
             (C33390 + C33391) * C49742 + (C33392 + C33393) * C50635) *
                C50932 +
            ((C36366 + C36367) * C49749 + (C36368 + C36369) * C50904 +
             C40968 * C49742 + C40969 * C50635) *
                C50828) *
               C50693 * C1025 -
           ((C36364 * C50635 + C36365 * C49742 + (C36373 + C36372) * C50904 +
             (C36371 + C36370) * C49749) *
                C50828 +
            (C40970 * C50635 + C40971 * C49742 + (C36369 + C36368) * C50904 +
             (C36367 + C36366) * C49749) *
                C50932) *
               C50693 * C50729) *
              C1027 +
          (((C40968 * C49749 + C40969 * C50904 + C41374 * C49742 +
             C41375 * C50635) *
                C50932 +
            (C40972 * C49749 + C40973 * C50904 + (C33600 + C33601) * C49742 +
             (C33602 + C33603) * C50635) *
                C50828) *
               C50693 * C50729 -
           ((C33944 * C50635 + C33945 * C49742 + C40970 * C50904 +
             C40971 * C49749) *
                C50828 +
            ((C33397 + C33396) * C50635 + (C33395 + C33394) * C49742 +
             (C33393 + C33392) * C50904 + (C33391 + C33390) * C49749) *
                C50932) *
               C50693 * C1025) *
              C1028 +
          (((C33406 * C49749 + C33407 * C50904 + (C33401 + C33400) * C49742 +
             (C33399 + C33398) * C50635) *
                C50932 +
            (C41374 * C49749 + C41375 * C50904 + (C33954 + C33955) * C49742 +
             (C33956 + C33957) * C50635) *
                C50828) *
               C50693 * C1025 -
           (((C33356 * C1566 + C50854 * C1574 + C33355 * C308 + C33353 * C320) *
                 C50635 +
             (C33356 * C1562 + C50854 * C1567 + C33355 * C290 + C33353 * C307) *
                 C49742 +
             (C33603 + C33602) * C50904 + (C33601 + C33600) * C49749) *
                C50828 +
            ((C33957 + C33956) * C50635 + (C33955 + C33954) * C49742 +
             C33944 * C50904 + C33945 * C49749) *
                C50932) *
               C50693 * C50729) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C49749 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C50904 +
             (C33390 + C33391) * C49742 + (C33392 + C33393) * C50635) *
                C50932 +
            ((C36366 + C36367) * C49749 + (C36368 + C36369) * C50904 +
             C40968 * C49742 + C40969 * C50635) *
                C50828) *
               C457 -
           ((C41828 * C50635 + C41829 * C49742 + (C37050 + C37051) * C50904 +
             (C37052 + C37053) * C49749) *
                C50828 +
            ((C33786 + C33787) * C50635 + (C33788 + C33789) * C49742 +
             (C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                 C50904 +
             (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                 C49749) *
                C50932) *
               C458 +
           (((C33355 * C464 + C33353 * C478 + C33356 * C1849 + C50854 * C1857) *
                 C49749 +
             (C33355 * C479 + C33353 * C494 + C33356 * C1856 + C50854 * C1861) *
                 C50904 +
             (C33790 + C33791) * C49742 + (C33792 + C33793) * C50635) *
                C50932 +
            ((C37481 + C37482) * C49749 + (C37483 + C37484) * C50904 +
             (C41176 + C41177) * C49742 + (C41178 + C41179) * C50635) *
                C50828) *
               C459) *
              C1025 +
          ((((C37053 + C37052) * C49749 + (C37051 + C37050) * C50904 +
             C41830 * C49742 + C41831 * C50635) *
                C50932 +
            ((C37049 + C37048) * C49749 + (C37047 + C37046) * C50904 +
             (C37054 + C37055) * C49742 + (C37056 + C37057) * C50635) *
                C50828) *
               C458 -
           ((C36364 * C50635 + C36365 * C49742 + (C36373 + C36372) * C50904 +
             (C36371 + C36370) * C49749) *
                C50828 +
            (C40970 * C50635 + C40971 * C49742 + (C36369 + C36368) * C50904 +
             (C36367 + C36366) * C49749) *
                C50932) *
               C457 -
           (((C33356 * C4582 + C50854 * C4590 + C33355 * C2672 +
              C33353 * C2676) *
                 C50635 +
             (C33356 * C4578 + C50854 * C4583 + C33355 * C2667 +
              C33353 * C2671) *
                 C49742 +
             (C37488 + C37487) * C50904 + (C37486 + C37485) * C49749) *
                C50828 +
            ((C41179 + C41178) * C50635 + (C41177 + C41176) * C49742 +
             (C37484 + C37483) * C50904 + (C37482 + C37481) * C49749) *
                C50932) *
               C459) *
              C50729) *
         C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[158] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                  C49749 +
              (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                  C50904 +
              (C33390 + C33391) * C49742 + (C33392 + C33393) * C50635) *
                 C50932 +
             ((C36366 + C36367) * C49749 + (C36368 + C36369) * C50904 +
              C40968 * C49742 + C40969 * C50635) *
                 C50828) *
                C50920 -
            ((C41828 * C50635 + C41829 * C49742 + (C37050 + C37051) * C50904 +
              (C37052 + C37053) * C49749) *
                 C50828 +
             ((C33786 + C33787) * C50635 + (C33788 + C33789) * C49742 +
              (C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                  C50904 +
              (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                  C49749) *
                 C50932) *
                C50757) *
               C1025 +
           ((((C37053 + C37052) * C49749 + (C37051 + C37050) * C50904 +
              C41830 * C49742 + C41831 * C50635) *
                 C50932 +
             ((C37049 + C37048) * C49749 + (C37047 + C37046) * C50904 +
              (C37054 + C37055) * C49742 + (C37056 + C37057) * C50635) *
                 C50828) *
                C50757 -
            ((C36364 * C50635 + C36365 * C49742 + (C36373 + C36372) * C50904 +
              (C36371 + C36370) * C49749) *
                 C50828 +
             (C40970 * C50635 + C40971 * C49742 + (C36369 + C36368) * C50904 +
              (C36367 + C36366) * C49749) *
                 C50932) *
                C50920) *
               C50729) *
              C50911 +
          (((((C33789 + C33788) * C49749 + (C33787 + C33786) * C50904 +
              (C33785 + C33784) * C49742 + (C33783 + C33782) * C50635) *
                 C50932 +
             (C41830 * C49749 + C41831 * C50904 + (C34332 + C34333) * C49742 +
              (C34334 + C34335) * C50635) *
                 C50828) *
                C50757 -
            ((C33944 * C50635 + C33945 * C49742 + C40970 * C50904 +
              C40971 * C49749) *
                 C50828 +
             ((C33397 + C33396) * C50635 + (C33395 + C33394) * C49742 +
              (C33393 + C33392) * C50904 + (C33391 + C33390) * C49749) *
                 C50932) *
                C50920) *
               C1025 +
           (((C40968 * C49749 + C40969 * C50904 + C41374 * C49742 +
              C41375 * C50635) *
                 C50932 +
             (C40972 * C49749 + C40973 * C50904 + (C33600 + C33601) * C49742 +
              (C33602 + C33603) * C50635) *
                 C50828) *
                C50920 -
            (((C33356 * C2673 + C50854 * C2677 + C33355 * C1568 +
               C33353 * C1575) *
                  C50635 +
              (C33356 * C2668 + C50854 * C2674 + C33355 * C1563 +
               C33353 * C1569) *
                  C49742 +
              (C37057 + C37056) * C50904 + (C37055 + C37054) * C49749) *
                 C50828 +
             ((C34335 + C34334) * C50635 + (C34333 + C34332) * C49742 +
              C41828 * C50904 + C41829 * C49749) *
                 C50932) *
                C50757) *
               C50729) *
              C50664)) /
        (p * q * std::sqrt(p + q));
    d2ee[159] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C49749 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C50904 +
             (C33390 + C33391) * C49742 + (C33392 + C33393) * C50635) *
                C50932 +
            ((C36366 + C36367) * C49749 + (C36368 + C36369) * C50904 +
             C40968 * C49742 + C40969 * C50635) *
                C50828) *
               C50693 * C1025 -
           ((C36364 * C50635 + C36365 * C49742 + (C36373 + C36372) * C50904 +
             (C36371 + C36370) * C49749) *
                C50828 +
            (C40970 * C50635 + C40971 * C49742 + (C36369 + C36368) * C50904 +
             (C36367 + C36366) * C49749) *
                C50932) *
               C50693 * C50729) *
              C1027 +
          (((C40968 * C49749 + C40969 * C50904 + C41374 * C49742 +
             C41375 * C50635) *
                C50932 +
            (C40972 * C49749 + C40973 * C50904 + (C33600 + C33601) * C49742 +
             (C33602 + C33603) * C50635) *
                C50828) *
               C50693 * C50729 -
           ((C33944 * C50635 + C33945 * C49742 + C40970 * C50904 +
             C40971 * C49749) *
                C50828 +
            ((C33397 + C33396) * C50635 + (C33395 + C33394) * C49742 +
             (C33393 + C33392) * C50904 + (C33391 + C33390) * C49749) *
                C50932) *
               C50693 * C1025) *
              C1028 +
          (((C33406 * C49749 + C33407 * C50904 + (C33401 + C33400) * C49742 +
             (C33399 + C33398) * C50635) *
                C50932 +
            (C41374 * C49749 + C41375 * C50904 + (C33954 + C33955) * C49742 +
             (C33956 + C33957) * C50635) *
                C50828) *
               C50693 * C1025 -
           (((C33356 * C1566 + C50854 * C1574 + C33355 * C308 + C33353 * C320) *
                 C50635 +
             (C33356 * C1562 + C50854 * C1567 + C33355 * C290 + C33353 * C307) *
                 C49742 +
             (C33603 + C33602) * C50904 + (C33601 + C33600) * C49749) *
                C50828 +
            ((C33957 + C33956) * C50635 + (C33955 + C33954) * C49742 +
             C33944 * C50904 + C33945 * C49749) *
                C50932) *
               C50693 * C50729) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                C49749 +
            (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                C50904 +
            (C33390 + C33391) * C49742 + (C33392 + C33393) * C50635) *
               C50932 +
           ((C36366 + C36367) * C49749 + (C36368 + C36369) * C50904 +
            C40968 * C49742 + C40969 * C50635) *
               C50828) *
              C50693 * C1096 -
          ((C36364 * C50635 + C36365 * C49742 + (C36373 + C36372) * C50904 +
            (C36371 + C36370) * C49749) *
               C50828 +
           (C40970 * C50635 + C40971 * C49742 + (C36369 + C36368) * C50904 +
            (C36367 + C36366) * C49749) *
               C50932) *
              C50693 * C1097 +
          ((C36384 * C49749 + C36385 * C50904 + C40972 * C49742 +
            C40973 * C50635) *
               C50932 +
           ((C36377 + C36376) * C49749 + (C36375 + C36374) * C50904 +
            (C36378 + C36379) * C49742 + (C36380 + C36381) * C50635) *
               C50828) *
              C50693 * C1098 -
          (((C33356 * C4169 + C50854 * C4173 + C33355 * C2448 +
             C33353 * C2452) *
                C50635 +
            (C33356 * C4167 + C50854 * C4170 + C33355 * C2443 +
             C33353 * C2447) *
                C49742 +
            (C37317 + C37316) * C50904 + (C37315 + C37314) * C49749) *
               C50828 +
           ((C36381 + C36380) * C50635 + (C36379 + C36378) * C49742 +
            C37302 * C50904 + C37303 * C49749) *
               C50932) *
              C50693 * C1099) *
         C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[160] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                  C49749 +
              (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                  C50904 +
              (C33390 + C33391) * C49742 + (C33392 + C33393) * C50635) *
                 C50932 +
             ((C36366 + C36367) * C49749 + (C36368 + C36369) * C50904 +
              C40968 * C49742 + C40969 * C50635) *
                 C50828) *
                C1676 -
            ((C41828 * C50635 + C41829 * C49742 + (C37050 + C37051) * C50904 +
              (C37052 + C37053) * C49749) *
                 C50828 +
             ((C33786 + C33787) * C50635 + (C33788 + C33789) * C49742 +
              (C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                  C50904 +
              (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                  C49749) *
                 C50932) *
                C50757) *
               C50919 +
           ((((C37053 + C37052) * C49749 + (C37051 + C37050) * C50904 +
              C41830 * C49742 + C41831 * C50635) *
                 C50932 +
             ((C37049 + C37048) * C49749 + (C37047 + C37046) * C50904 +
              (C37054 + C37055) * C49742 + (C37056 + C37057) * C50635) *
                 C50828) *
                C50757 -
            ((C36364 * C50635 + C36365 * C49742 + (C36373 + C36372) * C50904 +
              (C36371 + C36370) * C49749) *
                 C50828 +
             (C40970 * C50635 + C40971 * C49742 + (C36369 + C36368) * C50904 +
              (C36367 + C36366) * C49749) *
                 C50932) *
                C1676) *
               C50729) *
              C50911 +
          (((((C33789 + C33788) * C49749 + (C33787 + C33786) * C50904 +
              (C33785 + C33784) * C49742 + (C33783 + C33782) * C50635) *
                 C50932 +
             (C41830 * C49749 + C41831 * C50904 + (C34332 + C34333) * C49742 +
              (C34334 + C34335) * C50635) *
                 C50828) *
                C50757 -
            ((C33944 * C50635 + C33945 * C49742 + C40970 * C50904 +
              C40971 * C49749) *
                 C50828 +
             ((C33397 + C33396) * C50635 + (C33395 + C33394) * C49742 +
              (C33393 + C33392) * C50904 + (C33391 + C33390) * C49749) *
                 C50932) *
                C1676) *
               C50919 +
           (((C40968 * C49749 + C40969 * C50904 + C41374 * C49742 +
              C41375 * C50635) *
                 C50932 +
             (C40972 * C49749 + C40973 * C50904 + (C33600 + C33601) * C49742 +
              (C33602 + C33603) * C50635) *
                 C50828) *
                C1676 -
            (((C33356 * C2673 + C50854 * C2677 + C33355 * C1568 +
               C33353 * C1575) *
                  C50635 +
              (C33356 * C2668 + C50854 * C2674 + C33355 * C1563 +
               C33353 * C1569) *
                  C49742 +
              (C37057 + C37056) * C50904 + (C37055 + C37054) * C49749) *
                 C50828 +
             ((C34335 + C34334) * C50635 + (C34333 + C34332) * C49742 +
              C41828 * C50904 + C41829 * C49749) *
                 C50932) *
                C50757) *
               C50729) *
              C50664)) /
        (p * q * std::sqrt(p + q));
    d2ee[161] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C49749 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C50904 +
             (C33390 + C33391) * C49742 + (C33392 + C33393) * C50635) *
                C50932 +
            ((C36366 + C36367) * C49749 + (C36368 + C36369) * C50904 +
             C40968 * C49742 + C40969 * C50635) *
                C50828) *
               C50966 -
           ((C41828 * C50635 + C41829 * C49742 + (C37050 + C37051) * C50904 +
             (C37052 + C37053) * C49749) *
                C50828 +
            ((C33786 + C33787) * C50635 + (C33788 + C33789) * C49742 +
             (C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                 C50904 +
             (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                 C49749) *
                C50932) *
               C50967 +
           (((C33355 * C464 + C33353 * C478 + C33356 * C1849 + C50854 * C1857) *
                 C49749 +
             (C33355 * C479 + C33353 * C494 + C33356 * C1856 + C50854 * C1861) *
                 C50904 +
             (C33790 + C33791) * C49742 + (C33792 + C33793) * C50635) *
                C50932 +
            ((C37481 + C37482) * C49749 + (C37483 + C37484) * C50904 +
             (C41176 + C41177) * C49742 + (C41178 + C41179) * C50635) *
                C50828) *
               C2092) *
              C50919 +
          ((((C37053 + C37052) * C49749 + (C37051 + C37050) * C50904 +
             C41830 * C49742 + C41831 * C50635) *
                C50932 +
            ((C37049 + C37048) * C49749 + (C37047 + C37046) * C50904 +
             (C37054 + C37055) * C49742 + (C37056 + C37057) * C50635) *
                C50828) *
               C50967 -
           ((C36364 * C50635 + C36365 * C49742 + (C36373 + C36372) * C50904 +
             (C36371 + C36370) * C49749) *
                C50828 +
            (C40970 * C50635 + C40971 * C49742 + (C36369 + C36368) * C50904 +
             (C36367 + C36366) * C49749) *
                C50932) *
               C50966 -
           (((C33356 * C4582 + C50854 * C4590 + C33355 * C2672 +
              C33353 * C2676) *
                 C50635 +
             (C33356 * C4578 + C50854 * C4583 + C33355 * C2667 +
              C33353 * C2671) *
                 C49742 +
             (C37488 + C37487) * C50904 + (C37486 + C37485) * C49749) *
                C50828 +
            ((C41179 + C41178) * C50635 + (C41177 + C41176) * C49742 +
             (C37484 + C37483) * C50904 + (C37482 + C37481) * C49749) *
                C50932) *
               C2092) *
              C50729) *
         C50658) /
        (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C49749 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C50904 +
             (C33390 + C33391) * C49742 + (C33392 + C33393) * C50635) *
                C50932 +
            ((C36366 + C36367) * C49749 + (C36368 + C36369) * C50904 +
             C40968 * C49742 + C40969 * C50635) *
                C50828) *
               C1676 -
           ((C41828 * C50635 + C41829 * C49742 + (C37050 + C37051) * C50904 +
             (C37052 + C37053) * C49749) *
                C50828 +
            ((C33786 + C33787) * C50635 + (C33788 + C33789) * C49742 +
             (C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                 C50904 +
             (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                 C49749) *
                C50932) *
               C50757) *
              C278 +
          ((((C37053 + C37052) * C49749 + (C37051 + C37050) * C50904 +
             C41830 * C49742 + C41831 * C50635) *
                C50932 +
            ((C37049 + C37048) * C49749 + (C37047 + C37046) * C50904 +
             (C37054 + C37055) * C49742 + (C37056 + C37057) * C50635) *
                C50828) *
               C50757 -
           ((C36364 * C50635 + C36365 * C49742 + (C36373 + C36372) * C50904 +
             (C36371 + C36370) * C49749) *
                C50828 +
            (C40970 * C50635 + C40971 * C49742 + (C36369 + C36368) * C50904 +
             (C36367 + C36366) * C49749) *
                C50932) *
               C1676) *
              C279 +
          (((C36384 * C49749 + C36385 * C50904 + C40972 * C49742 +
             C40973 * C50635) *
                C50932 +
            ((C36377 + C36376) * C49749 + (C36375 + C36374) * C50904 +
             (C36378 + C36379) * C49742 + (C36380 + C36381) * C50635) *
                C50828) *
               C1676 -
           (((C33356 * C3655 + C50854 * C3659 + C33355 * C3202 +
              C33353 * C3206) *
                 C50635 +
             (C33356 * C3653 + C50854 * C3656 + C33355 * C3197 +
              C33353 * C3201) *
                 C49742 +
             (C37990 + C37989) * C50904 + (C37988 + C37987) * C49749) *
                C50828 +
            ((C37057 + C37056) * C50635 + (C37055 + C37054) * C49742 +
             C37975 * C50904 + C37976 * C49749) *
                C50932) *
               C50757) *
              C280) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C49749 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C50904 +
             (C33390 + C33391) * C49742 + (C33392 + C33393) * C50635) *
                C50932 +
            ((C36366 + C36367) * C49749 + (C36368 + C36369) * C50904 +
             C40968 * C49742 + C40969 * C50635) *
                C50828) *
               C1676 -
           ((C41828 * C50635 + C41829 * C49742 + (C37050 + C37051) * C50904 +
             (C37052 + C37053) * C49749) *
                C50828 +
            ((C33786 + C33787) * C50635 + (C33788 + C33789) * C49742 +
             (C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                 C50904 +
             (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                 C49749) *
                C50932) *
               C50757) *
              C50677 * C1027 +
          ((((C33789 + C33788) * C49749 + (C33787 + C33786) * C50904 +
             (C33785 + C33784) * C49742 + (C33783 + C33782) * C50635) *
                C50932 +
            (C41830 * C49749 + C41831 * C50904 + (C34332 + C34333) * C49742 +
             (C34334 + C34335) * C50635) *
                C50828) *
               C50757 -
           ((C33944 * C50635 + C33945 * C49742 + C40970 * C50904 +
             C40971 * C49749) *
                C50828 +
            ((C33397 + C33396) * C50635 + (C33395 + C33394) * C49742 +
             (C33393 + C33392) * C50904 + (C33391 + C33390) * C49749) *
                C50932) *
               C1676) *
              C50677 * C1028 +
          (((C33406 * C49749 + C33407 * C50904 + (C33401 + C33400) * C49742 +
             (C33399 + C33398) * C50635) *
                C50932 +
            (C41374 * C49749 + C41375 * C50904 + (C33954 + C33955) * C49742 +
             (C33956 + C33957) * C50635) *
                C50828) *
               C1676 -
           (((C33356 * C1219 + C50854 * C1227 + C33355 * C901 + C33353 * C907) *
                 C50635 +
             (C33356 * C1215 + C50854 * C1220 + C33355 * C892 + C33353 * C900) *
                 C49742 +
             (C34335 + C34334) * C50904 + (C34333 + C34332) * C49749) *
                C50828 +
            ((C34117 + C34116) * C50635 + (C34115 + C34114) * C49742 +
             C34104 * C50904 + C34105 * C49749) *
                C50932) *
               C50757) *
              C50677 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                C49749 +
            (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                C50904 +
            (C33390 + C33391) * C49742 + (C33392 + C33393) * C50635) *
               C50932 +
           ((C36366 + C36367) * C49749 + (C36368 + C36369) * C50904 +
            C40968 * C49742 + C40969 * C50635) *
               C50828) *
              C1842 -
          ((C41828 * C50635 + C41829 * C49742 + (C37050 + C37051) * C50904 +
            (C37052 + C37053) * C49749) *
               C50828 +
           ((C33786 + C33787) * C50635 + (C33788 + C33789) * C49742 +
            (C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                C50904 +
            (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                C49749) *
               C50932) *
              C1843 +
          (((C33355 * C464 + C33353 * C478 + C33356 * C1849 + C50854 * C1857) *
                C49749 +
            (C33355 * C479 + C33353 * C494 + C33356 * C1856 + C50854 * C1861) *
                C50904 +
            (C33790 + C33791) * C49742 + (C33792 + C33793) * C50635) *
               C50932 +
           ((C37481 + C37482) * C49749 + (C37483 + C37484) * C50904 +
            (C41176 + C41177) * C49742 + (C41178 + C41179) * C50635) *
               C50828) *
              C1844 -
          (((C33356 * C6550 + C50854 * C6554 + C33355 * C4586 +
             C33353 * C4592) *
                C50635 +
            (C33356 * C6548 + C50854 * C6551 + C33355 * C4580 +
             C33353 * C4587) *
                C49742 +
            (C33356 * C6552 + C50854 * C6555 + C33355 * C4588 +
             C33353 * C4593) *
                C50904 +
            (C33356 * C6549 + C50854 * C6553 + C33355 * C4581 +
             C33353 * C4589) *
                C49749) *
               C50828 +
           ((C33356 * C5572 + C50854 * C5576 + C33355 * C1854 +
             C33353 * C1860) *
                C50635 +
            (C33356 * C5567 + C50854 * C5571 + C33355 * C1848 +
             C33353 * C1855) *
                C49742 +
            (C33356 * C5570 + C50854 * C5575 + C33355 * C1856 +
             C33353 * C1861) *
                C50904 +
            (C33356 * C5566 + C50854 * C5569 + C33355 * C1849 +
             C33353 * C1857) *
                C49749) *
               C50932) *
              C1845) *
         C50677 * C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[163] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C49749 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C50904 +
             (C33390 + C33391) * C49742 + (C33392 + C33393) * C50635) *
                C50932 +
            ((C36366 + C36367) * C49749 + (C36368 + C36369) * C50904 +
             C40968 * C49742 + C40969 * C50635) *
                C50828) *
               C50966 -
           ((C41828 * C50635 + C41829 * C49742 + (C37050 + C37051) * C50904 +
             (C37052 + C37053) * C49749) *
                C50828 +
            ((C33786 + C33787) * C50635 + (C33788 + C33789) * C49742 +
             (C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                 C50904 +
             (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                 C49749) *
                C50932) *
               C50967 +
           (((C33355 * C464 + C33353 * C478 + C33356 * C1849 + C50854 * C1857) *
                 C49749 +
             (C33355 * C479 + C33353 * C494 + C33356 * C1856 + C50854 * C1861) *
                 C50904 +
             (C33790 + C33791) * C49742 + (C33792 + C33793) * C50635) *
                C50932 +
            ((C37481 + C37482) * C49749 + (C37483 + C37484) * C50904 +
             (C41176 + C41177) * C49742 + (C41178 + C41179) * C50635) *
                C50828) *
               C2092) *
              C50677 * C50911 +
          ((((C33789 + C33788) * C49749 + (C33787 + C33786) * C50904 +
             (C33785 + C33784) * C49742 + (C33783 + C33782) * C50635) *
                C50932 +
            (C41830 * C49749 + C41831 * C50904 + (C34332 + C34333) * C49742 +
             (C34334 + C34335) * C50635) *
                C50828) *
               C50967 -
           ((C33944 * C50635 + C33945 * C49742 + C40970 * C50904 +
             C40971 * C49749) *
                C50828 +
            ((C33397 + C33396) * C50635 + (C33395 + C33394) * C49742 +
             (C33393 + C33392) * C50904 + (C33391 + C33390) * C49749) *
                C50932) *
               C50966 -
           (((C33356 * C6137 + C50854 * C6139 + C33355 * C1221 +
              C33353 * C1228) *
                 C50635 +
             (C33356 * C6136 + C50854 * C6138 + C33355 * C1216 +
              C33353 * C1222) *
                 C49742 +
             (C41179 + C41178) * C50904 + (C41177 + C41176) * C49749) *
                C50828 +
            ((C33797 + C33796) * C50635 + (C33795 + C33794) * C49742 +
             (C33793 + C33792) * C50904 + (C33791 + C33790) * C49749) *
                C50932) *
               C2092) *
              C50677 * C50664)) /
        (p * q * std::sqrt(p + q));
    d2ee[164] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C49749 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C50904 +
             (C33390 + C33391) * C49742 + (C33392 + C33393) * C50635) *
                C50932 +
            ((C36366 + C36367) * C49749 + (C36368 + C36369) * C50904 +
             C40968 * C49742 + C40969 * C50635) *
                C50828) *
               C1676 -
           ((C41828 * C50635 + C41829 * C49742 + (C37050 + C37051) * C50904 +
             (C37052 + C37053) * C49749) *
                C50828 +
            ((C33786 + C33787) * C50635 + (C33788 + C33789) * C49742 +
             (C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                 C50904 +
             (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                 C49749) *
                C50932) *
               C50757) *
              C50677 * C1027 +
          ((((C33789 + C33788) * C49749 + (C33787 + C33786) * C50904 +
             (C33785 + C33784) * C49742 + (C33783 + C33782) * C50635) *
                C50932 +
            (C41830 * C49749 + C41831 * C50904 + (C34332 + C34333) * C49742 +
             (C34334 + C34335) * C50635) *
                C50828) *
               C50757 -
           ((C33944 * C50635 + C33945 * C49742 + C40970 * C50904 +
             C40971 * C49749) *
                C50828 +
            ((C33397 + C33396) * C50635 + (C33395 + C33394) * C49742 +
             (C33393 + C33392) * C50904 + (C33391 + C33390) * C49749) *
                C50932) *
               C1676) *
              C50677 * C1028 +
          (((C33406 * C49749 + C33407 * C50904 + (C33401 + C33400) * C49742 +
             (C33399 + C33398) * C50635) *
                C50932 +
            (C41374 * C49749 + C41375 * C50904 + (C33954 + C33955) * C49742 +
             (C33956 + C33957) * C50635) *
                C50828) *
               C1676 -
           (((C33356 * C1219 + C50854 * C1227 + C33355 * C901 + C33353 * C907) *
                 C50635 +
             (C33356 * C1215 + C50854 * C1220 + C33355 * C892 + C33353 * C900) *
                 C49742 +
             (C34335 + C34334) * C50904 + (C34333 + C34332) * C49749) *
                C50828 +
            ((C34117 + C34116) * C50635 + (C34115 + C34114) * C49742 +
             C34104 * C50904 + C34105 * C49749) *
                C50932) *
               C50757) *
              C50677 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C49749 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C50904 +
             (C33390 + C33391) * C49742 + (C33392 + C33393) * C50635) *
                C50932 +
            ((C36366 + C36367) * C49749 + (C36368 + C36369) * C50904 +
             C40968 * C49742 + C40969 * C50635) *
                C50828) *
               C1676 -
           ((C41828 * C50635 + C41829 * C49742 + (C37050 + C37051) * C50904 +
             (C37052 + C37053) * C49749) *
                C50828 +
            ((C33786 + C33787) * C50635 + (C33788 + C33789) * C49742 +
             (C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                 C50904 +
             (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                 C49749) *
                C50932) *
               C50757) *
              C278 +
          ((((C37053 + C37052) * C49749 + (C37051 + C37050) * C50904 +
             C41830 * C49742 + C41831 * C50635) *
                C50932 +
            ((C37049 + C37048) * C49749 + (C37047 + C37046) * C50904 +
             (C37054 + C37055) * C49742 + (C37056 + C37057) * C50635) *
                C50828) *
               C50757 -
           ((C36364 * C50635 + C36365 * C49742 + (C36373 + C36372) * C50904 +
             (C36371 + C36370) * C49749) *
                C50828 +
            (C40970 * C50635 + C40971 * C49742 + (C36369 + C36368) * C50904 +
             (C36367 + C36366) * C49749) *
                C50932) *
               C1676) *
              C279 +
          (((C36384 * C49749 + C36385 * C50904 + C40972 * C49742 +
             C40973 * C50635) *
                C50932 +
            ((C36377 + C36376) * C49749 + (C36375 + C36374) * C50904 +
             (C36378 + C36379) * C49742 + (C36380 + C36381) * C50635) *
                C50828) *
               C1676 -
           (((C33356 * C3655 + C50854 * C3659 + C33355 * C3202 +
              C33353 * C3206) *
                 C50635 +
             (C33356 * C3653 + C50854 * C3656 + C33355 * C3197 +
              C33353 * C3201) *
                 C49742 +
             (C37990 + C37989) * C50904 + (C37988 + C37987) * C49749) *
                C50828 +
            ((C37057 + C37056) * C50635 + (C37055 + C37054) * C49742 +
             C37975 * C50904 + C37976 * C49749) *
                C50932) *
               C50757) *
              C280) *
         C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[165] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C44260 * C122 + C50970 * C129 + C44261 * C463 +
                       C50971 * C477 + C44262 * C464 + C44259 * C478) *
                          C19841 +
                      (C44260 * C130 + C50970 * C143 + C44261 * C476 +
                       C50971 * C493 + C44262 * C479 + C44259 * C494) *
                          C50630) *
                         C50932 +
                     ((C47242 + C47243 + C47244) * C19841 +
                      (C47245 + C47246 + C47247) * C50630) *
                         C50828) *
                        C50693 * C50919 -
                    (((C47248 + C47249 + C47250) * C50630 +
                      (C47251 + C47252 + C47253) * C19841) *
                         C50828 +
                     ((C47247 + C47246 + C47245) * C50630 +
                      (C47244 + C47243 + C47242) * C19841) *
                         C50932) *
                        C50693 * C50729) *
                       C50962 +
                   ((((C44493 + C44492 + C44491) * C19841 +
                      (C44490 + C44489 + C44488) * C50630) *
                         C50932 +
                     ((C44494 + C44495 + C44496) * C19841 +
                      (C44497 + C44498 + C44499) * C50630) *
                         C50828) *
                        C50693 * C50729 -
                    (((C44488 + C44489 + C44490) * C50630 +
                      (C44491 + C44492 + C44493) * C19841) *
                         C50828 +
                     ((C44305 + C44304 + C44303) * C50630 +
                      (C44302 + C44301 + C44300) * C19841) *
                         C50932) *
                        C50693 * C50919) *
                       C50963 +
                   ((((C44311 + C44310 + C44309) * C19841 +
                      (C44308 + C44307 + C44306) * C50630) *
                         C50932 +
                     ((C44840 + C44841 + C44842) * C19841 +
                      (C44843 + C44844 + C44845) * C50630) *
                         C50828) *
                        C50693 * C50919 -
                    (((C44262 * C2673 + C44259 * C2677 + C44261 * C1568 +
                       C50971 * C1575 + C44260 * C306 + C50970 * C319) *
                          C50630 +
                      (C44262 * C2668 + C44259 * C2674 + C44261 * C1563 +
                       C50971 * C1569 + C44260 * C289 + C50970 * C305) *
                          C19841) *
                         C50828 +
                     ((C44845 + C44844 + C44843) * C50630 +
                      (C44842 + C44841 + C44840) * C19841) *
                         C50932) *
                        C50693 * C50729) *
                       C638)) /
                 (p * q * std::sqrt(p + q));
    d2ee[166] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((((C44260 * C122 + C50970 * C129 + C44261 * C463 +
                        C50971 * C477 + C44262 * C464 + C44259 * C478) *
                           C19841 +
                       (C44260 * C130 + C50970 * C143 + C44261 * C476 +
                        C50971 * C493 + C44262 * C479 + C44259 * C494) *
                           C50630) *
                          C50932 +
                      ((C47242 + C47243 + C47244) * C19841 +
                       (C47245 + C47246 + C47247) * C50630) *
                          C50828) *
                         C50920 -
                     (((C47898 + C47899 + C47900) * C50630 +
                       (C47901 + C47902 + C47903) * C19841) *
                          C50828 +
                      ((C44262 * C1856 + C44259 * C1861 + C44261 * C479 +
                        C50971 * C494 + C44260 * C476 + C50970 * C493) *
                           C50630 +
                       (C44262 * C1849 + C44259 * C1857 + C44261 * C464 +
                        C50971 * C478 + C44260 * C463 + C50970 * C477) *
                           C19841) *
                          C50932) *
                         C50757) *
                        C50919 +
                    ((((C47903 + C47902 + C47901) * C19841 +
                       (C47900 + C47899 + C47898) * C50630) *
                          C50932 +
                      ((C44260 * C1565 + C50970 * C1573 + C44261 * C2666 +
                        C50971 * C2669 + C44262 * C4579 + C44259 * C4585) *
                           C19841 +
                       (C44260 * C1572 + C50970 * C1577 + C44261 * C2670 +
                        C50971 * C2675 + C44262 * C4584 + C44259 * C4591) *
                           C50630) *
                          C50828) *
                         C50757 -
                     (((C47248 + C47249 + C47250) * C50630 +
                       (C47251 + C47252 + C47253) * C19841) *
                          C50828 +
                      ((C47247 + C47246 + C47245) * C50630 +
                       (C47244 + C47243 + C47242) * C19841) *
                          C50932) *
                         C50920) *
                        C50729) *
                       C281 +
                   (((((C44675 + C44674 + C44673) * C19841 +
                       (C44672 + C44671 + C44670) * C50630) *
                          C50932 +
                      ((C45216 + C45217 + C45218) * C19841 +
                       (C45219 + C45220 + C45221) * C50630) *
                          C50828) *
                         C50757 -
                     (((C44488 + C44489 + C44490) * C50630 +
                       (C44491 + C44492 + C44493) * C19841) *
                          C50828 +
                      ((C44305 + C44304 + C44303) * C50630 +
                       (C44302 + C44301 + C44300) * C19841) *
                          C50932) *
                         C50920) *
                        C50919 +
                    ((((C44493 + C44492 + C44491) * C19841 +
                       (C44490 + C44489 + C44488) * C50630) *
                          C50932 +
                      ((C44494 + C44495 + C44496) * C19841 +
                       (C44497 + C44498 + C44499) * C50630) *
                          C50828) *
                         C50920 -
                     (((C44262 * C4582 + C44259 * C4590 + C44261 * C2672 +
                        C50971 * C2676 + C44260 * C1570 + C50970 * C1576) *
                           C50630 +
                       (C44262 * C4578 + C44259 * C4583 + C44261 * C2667 +
                        C50971 * C2671 + C44260 * C1564 + C50970 * C1571) *
                           C19841) *
                          C50828 +
                      ((C45221 + C45220 + C45219) * C50630 +
                       (C45218 + C45217 + C45216) * C19841) *
                          C50932) *
                         C50757) *
                        C50729) *
                       C50664)) /
                 (p * q * std::sqrt(p + q));
    d2ee[167] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C44260 * C122 + C50970 * C129 + C44261 * C463 +
                       C50971 * C477 + C44262 * C464 + C44259 * C478) *
                          C19841 +
                      (C44260 * C130 + C50970 * C143 + C44261 * C476 +
                       C50971 * C493 + C44262 * C479 + C44259 * C494) *
                          C50630) *
                         C50932 +
                     ((C47242 + C47243 + C47244) * C19841 +
                      (C47245 + C47246 + C47247) * C50630) *
                         C50828) *
                        C50693 * C278 -
                    (((C47248 + C47249 + C47250) * C50630 +
                      (C47251 + C47252 + C47253) * C19841) *
                         C50828 +
                     ((C47247 + C47246 + C47245) * C50630 +
                      (C47244 + C47243 + C47242) * C19841) *
                         C50932) *
                        C50693 * C279 +
                    (((C47253 + C47252 + C47251) * C19841 +
                      (C47250 + C47249 + C47248) * C50630) *
                         C50932 +
                     ((C44260 * C1104 + C50970 * C1112 + C44261 * C3196 +
                       C50971 * C3199 + C44262 * C3654 + C44259 * C3658) *
                          C19841 +
                      (C44260 * C1111 + C50970 * C1116 + C44261 * C3200 +
                       C50971 * C3205 + C44262 * C3657 + C44259 * C3660) *
                          C50630) *
                         C50828) *
                        C50693 * C280) *
                       C281 +
                   ((((C44493 + C44492 + C44491) * C19841 +
                      (C44490 + C44489 + C44488) * C50630) *
                         C50932 +
                     ((C44494 + C44495 + C44496) * C19841 +
                      (C44497 + C44498 + C44499) * C50630) *
                         C50828) *
                        C50693 * C279 -
                    (((C44488 + C44489 + C44490) * C50630 +
                      (C44491 + C44492 + C44493) * C19841) *
                         C50828 +
                     ((C44305 + C44304 + C44303) * C50630 +
                      (C44302 + C44301 + C44300) * C19841) *
                         C50932) *
                        C50693 * C278 -
                    (((C44262 * C3655 + C44259 * C3659 + C44261 * C3202 +
                       C50971 * C3206 + C44260 * C1109 + C50970 * C1115) *
                          C50630 +
                      (C44262 * C3653 + C44259 * C3656 + C44261 * C3197 +
                       C50971 * C3201 + C44260 * C1103 + C50970 * C1110) *
                          C19841) *
                         C50828 +
                     ((C44499 + C44498 + C44497) * C50630 +
                      (C44496 + C44495 + C44494) * C19841) *
                         C50932) *
                        C50693 * C280) *
                       C50664)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C44260 * C122 + C50970 * C129 + C44261 * C463 +
                      C50971 * C477 + C44262 * C464 + C44259 * C478) *
                         C19841 +
                     (C44260 * C130 + C50970 * C143 + C44261 * C476 +
                      C50971 * C493 + C44262 * C479 + C44259 * C494) *
                         C50630) *
                        C50932 +
                    ((C44260 * C286 + C50970 * C300 + C44261 * C889 +
                      C50971 * C894 + C44262 * C1218 + C44259 * C1226) *
                         C19841 +
                     (C44260 * C299 + C50970 * C316 + C44261 * C895 +
                      C50971 * C904 + C44262 * C1225 + C44259 * C1230) *
                         C50630) *
                        C50828) *
                       C50693 * C50677 * C113 -
                   (((C44488 + C44489 + C44490) * C50630 +
                     (C44491 + C44492 + C44493) * C19841) *
                        C50828 +
                    ((C44305 + C44304 + C44303) * C50630 +
                     (C44302 + C44301 + C44300) * C19841) *
                        C50932) *
                       C50693 * C50677 * C114 +
                   (((C44311 + C44310 + C44309) * C19841 +
                     (C44308 + C44307 + C44306) * C50630) *
                        C50932 +
                    ((C44840 + C44841 + C44842) * C19841 +
                     (C44843 + C44844 + C44845) * C50630) *
                        C50828) *
                       C50693 * C50677 * C115 -
                   (((C44262 * C1219 + C44259 * C1227 + C44261 * C901 +
                      C50971 * C907 + C44260 * C293 + C50970 * C313) *
                         C50630 +
                     (C44262 * C1215 + C44259 * C1220 + C44261 * C892 +
                      C50971 * C900 + C44260 * C283 + C50970 * C294) *
                         C19841) *
                        C50828 +
                    ((C44317 + C44316 + C44315) * C50630 +
                     (C44314 + C44313 + C44312) * C19841) *
                        C50932) *
                       C50693 * C50677 * C116)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C44260 * C122 + C50970 * C129 + C44261 * C463 +
                       C50971 * C477 + C44262 * C464 + C44259 * C478) *
                          C19841 +
                      (C44260 * C130 + C50970 * C143 + C44261 * C476 +
                       C50971 * C493 + C44262 * C479 + C44259 * C494) *
                          C50630) *
                         C50932 +
                     ((C47242 + C47243 + C47244) * C19841 +
                      (C47245 + C47246 + C47247) * C50630) *
                         C50828) *
                        C457 -
                    (((C44262 * C4588 + C44259 * C4593 + C44261 * C1225 +
                       C50971 * C1230 + C44260 * C895 + C50970 * C904) *
                          C50630 +
                      (C44262 * C4581 + C44259 * C4589 + C44261 * C1218 +
                       C50971 * C1226 + C44260 * C889 + C50970 * C894) *
                          C19841) *
                         C50828 +
                     ((C44262 * C1856 + C44259 * C1861 + C44261 * C479 +
                       C50971 * C494 + C44260 * C476 + C50970 * C493) *
                          C50630 +
                      (C44262 * C1849 + C44259 * C1857 + C44261 * C464 +
                       C50971 * C478 + C44260 * C463 + C50970 * C477) *
                          C19841) *
                         C50932) *
                        C458 +
                    (((C44260 * C464 + C50970 * C478 + C44261 * C1849 +
                       C50971 * C1857 + C44262 * C5566 + C44259 * C5569) *
                          C19841 +
                      (C44260 * C479 + C50970 * C494 + C44261 * C1856 +
                       C50971 * C1861 + C44262 * C5570 + C44259 * C5575) *
                          C50630) *
                         C50932 +
                     ((C44260 * C1218 + C50970 * C1226 + C44261 * C4581 +
                       C50971 * C4589 + C44262 * C6549 + C44259 * C6553) *
                          C19841 +
                      (C44260 * C1225 + C50970 * C1230 + C44261 * C4588 +
                       C50971 * C4593 + C44262 * C6552 + C44259 * C6555) *
                          C50630) *
                         C50828) *
                        C459) *
                       C50677 * C281 +
                   ((((C44675 + C44674 + C44673) * C19841 +
                      (C44672 + C44671 + C44670) * C50630) *
                         C50932 +
                     ((C45216 + C45217 + C45218) * C19841 +
                      (C45219 + C45220 + C45221) * C50630) *
                         C50828) *
                        C458 -
                    (((C44488 + C44489 + C44490) * C50630 +
                      (C44491 + C44492 + C44493) * C19841) *
                         C50828 +
                     ((C44305 + C44304 + C44303) * C50630 +
                      (C44302 + C44301 + C44300) * C19841) *
                         C50932) *
                        C457 -
                    (((C44262 * C6550 + C44259 * C6554 + C44261 * C4586 +
                       C50971 * C4592 + C44260 * C1223 + C50970 * C1229) *
                          C50630 +
                      (C44262 * C6548 + C44259 * C6551 + C44261 * C4580 +
                       C50971 * C4587 + C44260 * C1217 + C50970 * C1224) *
                          C19841) *
                         C50828 +
                     ((C44681 + C44680 + C44679) * C50630 +
                      (C44678 + C44677 + C44676) * C19841) *
                         C50932) *
                        C459) *
                       C50677 * C50664)) /
                     (p * q * std::sqrt(p + q));
    d2ee[168] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C44260 * C122 + C50970 * C129 + C44261 * C463 +
                       C50971 * C477 + C44262 * C464 + C44259 * C478) *
                          C19841 +
                      (C44260 * C130 + C50970 * C143 + C44261 * C476 +
                       C50971 * C493 + C44262 * C479 + C44259 * C494) *
                          C50630) *
                         C50932 +
                     ((C47242 + C47243 + C47244) * C19841 +
                      (C47245 + C47246 + C47247) * C50630) *
                         C50828) *
                        C50920 -
                    (((C44262 * C4588 + C44259 * C4593 + C44261 * C1225 +
                       C50971 * C1230 + C44260 * C895 + C50970 * C904) *
                          C50630 +
                      (C44262 * C4581 + C44259 * C4589 + C44261 * C1218 +
                       C50971 * C1226 + C44260 * C889 + C50970 * C894) *
                          C19841) *
                         C50828 +
                     ((C44262 * C1856 + C44259 * C1861 + C44261 * C479 +
                       C50971 * C494 + C44260 * C476 + C50970 * C493) *
                          C50630 +
                      (C44262 * C1849 + C44259 * C1857 + C44261 * C464 +
                       C50971 * C478 + C44260 * C463 + C50970 * C477) *
                          C19841) *
                         C50932) *
                        C50757) *
                       C50677 * C50962 +
                   ((((C44675 + C44674 + C44673) * C19841 +
                      (C44672 + C44671 + C44670) * C50630) *
                         C50932 +
                     ((C45216 + C45217 + C45218) * C19841 +
                      (C45219 + C45220 + C45221) * C50630) *
                         C50828) *
                        C50757 -
                    (((C44488 + C44489 + C44490) * C50630 +
                      (C44491 + C44492 + C44493) * C19841) *
                         C50828 +
                     ((C44305 + C44304 + C44303) * C50630 +
                      (C44302 + C44301 + C44300) * C19841) *
                         C50932) *
                        C50920) *
                       C50677 * C50963 +
                   ((((C44311 + C44310 + C44309) * C19841 +
                      (C44308 + C44307 + C44306) * C50630) *
                         C50932 +
                     ((C44840 + C44841 + C44842) * C19841 +
                      (C44843 + C44844 + C44845) * C50630) *
                         C50828) *
                        C50920 -
                    (((C44262 * C6137 + C44259 * C6139 + C44261 * C1221 +
                       C50971 * C1228 + C44260 * C899 + C50970 * C906) *
                          C50630 +
                      (C44262 * C6136 + C44259 * C6138 + C44261 * C1216 +
                       C50971 * C1222 + C44260 * C891 + C50970 * C898) *
                          C19841) *
                         C50828 +
                     ((C45009 + C45008 + C45007) * C50630 +
                      (C45006 + C45005 + C45004) * C19841) *
                         C50932) *
                        C50757) *
                       C50677 * C638)) /
                 (p * q * std::sqrt(p + q));
    d2ee[169] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C44260 * C122 + C50970 * C129 + C44261 * C463 +
                      C50971 * C477 + C44262 * C464 + C44259 * C478) *
                         C19841 +
                     (C44260 * C130 + C50970 * C143 + C44261 * C476 +
                      C50971 * C493 + C44262 * C479 + C44259 * C494) *
                         C50630) *
                        C50932 +
                    ((C44260 * C286 + C50970 * C300 + C44261 * C889 +
                      C50971 * C894 + C44262 * C1218 + C44259 * C1226) *
                         C19841 +
                     (C44260 * C299 + C50970 * C316 + C44261 * C895 +
                      C50971 * C904 + C44262 * C1225 + C44259 * C1230) *
                         C50630) *
                        C50828) *
                       C50693 * C50677 * C113 -
                   (((C44488 + C44489 + C44490) * C50630 +
                     (C44491 + C44492 + C44493) * C19841) *
                        C50828 +
                    ((C44305 + C44304 + C44303) * C50630 +
                     (C44302 + C44301 + C44300) * C19841) *
                        C50932) *
                       C50693 * C50677 * C114 +
                   (((C44311 + C44310 + C44309) * C19841 +
                     (C44308 + C44307 + C44306) * C50630) *
                        C50932 +
                    ((C44840 + C44841 + C44842) * C19841 +
                     (C44843 + C44844 + C44845) * C50630) *
                        C50828) *
                       C50693 * C50677 * C115 -
                   (((C44262 * C1219 + C44259 * C1227 + C44261 * C901 +
                      C50971 * C907 + C44260 * C293 + C50970 * C313) *
                         C50630 +
                     (C44262 * C1215 + C44259 * C1220 + C44261 * C892 +
                      C50971 * C900 + C44260 * C283 + C50970 * C294) *
                         C19841) *
                        C50828 +
                    ((C44317 + C44316 + C44315) * C50630 +
                     (C44314 + C44313 + C44312) * C19841) *
                        C50932) *
                       C50693 * C50677 * C116)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C44260 * C122 + C50970 * C129 + C44261 * C463 +
                       C50971 * C477 + C44262 * C464 + C44259 * C478) *
                          C19841 +
                      (C44260 * C130 + C50970 * C143 + C44261 * C476 +
                       C50971 * C493 + C44262 * C479 + C44259 * C494) *
                          C50630) *
                         C50932 +
                     ((C47242 + C47243 + C47244) * C19841 +
                      (C47245 + C47246 + C47247) * C50630) *
                         C50828) *
                        C50693 * C278 -
                    (((C47248 + C47249 + C47250) * C50630 +
                      (C47251 + C47252 + C47253) * C19841) *
                         C50828 +
                     ((C47247 + C47246 + C47245) * C50630 +
                      (C47244 + C47243 + C47242) * C19841) *
                         C50932) *
                        C50693 * C279 +
                    (((C47253 + C47252 + C47251) * C19841 +
                      (C47250 + C47249 + C47248) * C50630) *
                         C50932 +
                     ((C44260 * C1104 + C50970 * C1112 + C44261 * C3196 +
                       C50971 * C3199 + C44262 * C3654 + C44259 * C3658) *
                          C19841 +
                      (C44260 * C1111 + C50970 * C1116 + C44261 * C3200 +
                       C50971 * C3205 + C44262 * C3657 + C44259 * C3660) *
                          C50630) *
                         C50828) *
                        C50693 * C280) *
                       C281 +
                   ((((C44493 + C44492 + C44491) * C19841 +
                      (C44490 + C44489 + C44488) * C50630) *
                         C50932 +
                     ((C44494 + C44495 + C44496) * C19841 +
                      (C44497 + C44498 + C44499) * C50630) *
                         C50828) *
                        C50693 * C279 -
                    (((C44488 + C44489 + C44490) * C50630 +
                      (C44491 + C44492 + C44493) * C19841) *
                         C50828 +
                     ((C44305 + C44304 + C44303) * C50630 +
                      (C44302 + C44301 + C44300) * C19841) *
                         C50932) *
                        C50693 * C278 -
                    (((C44262 * C3655 + C44259 * C3659 + C44261 * C3202 +
                       C50971 * C3206 + C44260 * C1109 + C50970 * C1115) *
                          C50630 +
                      (C44262 * C3653 + C44259 * C3656 + C44261 * C3197 +
                       C50971 * C3201 + C44260 * C1103 + C50970 * C1110) *
                          C19841) *
                         C50828 +
                     ((C44499 + C44498 + C44497) * C50630 +
                      (C44496 + C44495 + C44494) * C19841) *
                         C50932) *
                        C50693 * C280) *
                       C50664)) /
                     (p * q * std::sqrt(p + q));
    d2ee[170] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C44260 * C122 + C50970 * C129 + C44261 * C463 +
                       C50971 * C477 + C44262 * C464 + C44259 * C478) *
                          C19841 +
                      (C44260 * C130 + C50970 * C143 + C44261 * C476 +
                       C50971 * C493 + C44262 * C479 + C44259 * C494) *
                          C50630) *
                         C50932 +
                     ((C47242 + C47243 + C47244) * C19841 +
                      (C47245 + C47246 + C47247) * C50630) *
                         C50828) *
                        C50693 * C50964 -
                    (((C47248 + C47249 + C47250) * C50630 +
                      (C47251 + C47252 + C47253) * C19841) *
                         C50828 +
                     ((C47247 + C47246 + C47245) * C50630 +
                      (C47244 + C47243 + C47242) * C19841) *
                         C50932) *
                        C50693 * C50965 +
                    (((C47253 + C47252 + C47251) * C19841 +
                      (C47250 + C47249 + C47248) * C50630) *
                         C50932 +
                     ((C48160 + C48161 + C48162) * C19841 +
                      (C48163 + C48164 + C48165) * C50630) *
                         C50828) *
                        C50693 * C1331) *
                       C50911 +
                   ((((C44493 + C44492 + C44491) * C19841 +
                      (C44490 + C44489 + C44488) * C50630) *
                         C50932 +
                     ((C44494 + C44495 + C44496) * C19841 +
                      (C44497 + C44498 + C44499) * C50630) *
                         C50828) *
                        C50693 * C50965 -
                    (((C44488 + C44489 + C44490) * C50630 +
                      (C44491 + C44492 + C44493) * C19841) *
                         C50828 +
                     ((C44305 + C44304 + C44303) * C50630 +
                      (C44302 + C44301 + C44300) * C19841) *
                         C50932) *
                        C50693 * C50964 -
                    (((C44262 * C3655 + C44259 * C3659 + C44261 * C3202 +
                       C50971 * C3206 + C44260 * C1109 + C50970 * C1115) *
                          C50630 +
                      (C44262 * C3653 + C44259 * C3656 + C44261 * C3197 +
                       C50971 * C3201 + C44260 * C1103 + C50970 * C1110) *
                          C19841) *
                         C50828 +
                     ((C44499 + C44498 + C44497) * C50630 +
                      (C44496 + C44495 + C44494) * C19841) *
                         C50932) *
                        C50693 * C1331) *
                       C50664)) /
                 (p * q * std::sqrt(p + q));
    d2ee[171] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C44260 * C122 + C50970 * C129 + C44261 * C463 +
                       C50971 * C477 + C44262 * C464 + C44259 * C478) *
                          C19841 +
                      (C44260 * C130 + C50970 * C143 + C44261 * C476 +
                       C50971 * C493 + C44262 * C479 + C44259 * C494) *
                          C50630) *
                         C50932 +
                     ((C47242 + C47243 + C47244) * C19841 +
                      (C47245 + C47246 + C47247) * C50630) *
                         C50828) *
                        C50920 -
                    (((C47898 + C47899 + C47900) * C50630 +
                      (C47901 + C47902 + C47903) * C19841) *
                         C50828 +
                     ((C44262 * C1856 + C44259 * C1861 + C44261 * C479 +
                       C50971 * C494 + C44260 * C476 + C50970 * C493) *
                          C50630 +
                      (C44262 * C1849 + C44259 * C1857 + C44261 * C464 +
                       C50971 * C478 + C44260 * C463 + C50970 * C477) *
                          C19841) *
                         C50932) *
                        C50757) *
                       C50964 +
                   ((((C47903 + C47902 + C47901) * C19841 +
                      (C47900 + C47899 + C47898) * C50630) *
                         C50932 +
                     ((C48828 + C48829 + C48830) * C19841 +
                      (C48831 + C48832 + C48833) * C50630) *
                         C50828) *
                        C50757 -
                    (((C47248 + C47249 + C47250) * C50630 +
                      (C47251 + C47252 + C47253) * C19841) *
                         C50828 +
                     ((C47247 + C47246 + C47245) * C50630 +
                      (C47244 + C47243 + C47242) * C19841) *
                         C50932) *
                        C50920) *
                       C50965 +
                   ((((C47253 + C47252 + C47251) * C19841 +
                      (C47250 + C47249 + C47248) * C50630) *
                         C50932 +
                     ((C48160 + C48161 + C48162) * C19841 +
                      (C48163 + C48164 + C48165) * C50630) *
                         C50828) *
                        C50920 -
                    (((C44262 * C21297 + C44259 * C21299 + C44261 * C3657 +
                       C50971 * C3660 + C44260 * C3200 + C50970 * C3205) *
                          C50630 +
                      (C44262 * C21296 + C44259 * C21298 + C44261 * C3654 +
                       C50971 * C3658 + C44260 * C3196 + C50970 * C3199) *
                          C19841) *
                         C50828 +
                     ((C48833 + C48832 + C48831) * C50630 +
                      (C48830 + C48829 + C48828) * C19841) *
                         C50932) *
                        C50757) *
                       C1331) *
                  C50658) /
                 (p * q * std::sqrt(p + q));
    d2ee[172] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C44260 * C122 + C50970 * C129 + C44261 * C463 +
                      C50971 * C477 + C44262 * C464 + C44259 * C478) *
                         C19841 +
                     (C44260 * C130 + C50970 * C143 + C44261 * C476 +
                      C50971 * C493 + C44262 * C479 + C44259 * C494) *
                         C50630) *
                        C50932 +
                    ((C47242 + C47243 + C47244) * C19841 +
                     (C47245 + C47246 + C47247) * C50630) *
                        C50828) *
                       C50693 * C1096 -
                   (((C47248 + C47249 + C47250) * C50630 +
                     (C47251 + C47252 + C47253) * C19841) *
                        C50828 +
                    ((C47247 + C47246 + C47245) * C50630 +
                     (C47244 + C47243 + C47242) * C19841) *
                        C50932) *
                       C50693 * C1097 +
                   (((C47253 + C47252 + C47251) * C19841 +
                     (C47250 + C47249 + C47248) * C50630) *
                        C50932 +
                    ((C48160 + C48161 + C48162) * C19841 +
                     (C48163 + C48164 + C48165) * C50630) *
                        C50828) *
                       C50693 * C1098 -
                   (((C44262 * C20679 + C44259 * C20681 + C44261 * C4171 +
                      C50971 * C4174 + C44260 * C2446 + C50970 * C2451) *
                         C50630 +
                     (C44262 * C20678 + C44259 * C20680 + C44261 * C4168 +
                      C50971 * C4172 + C44260 * C2442 + C50970 * C2445) *
                         C19841) *
                        C50828 +
                    ((C48165 + C48164 + C48163) * C50630 +
                     (C48162 + C48161 + C48160) * C19841) *
                        C50932) *
                       C50693 * C1099) *
                  C50658) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C44260 * C122 + C50970 * C129 + C44261 * C463 +
                       C50971 * C477 + C44262 * C464 + C44259 * C478) *
                          C19841 +
                      (C44260 * C130 + C50970 * C143 + C44261 * C476 +
                       C50971 * C493 + C44262 * C479 + C44259 * C494) *
                          C50630) *
                         C50932 +
                     ((C47242 + C47243 + C47244) * C19841 +
                      (C47245 + C47246 + C47247) * C50630) *
                         C50828) *
                        C50693 * C1025 -
                    (((C47248 + C47249 + C47250) * C50630 +
                      (C47251 + C47252 + C47253) * C19841) *
                         C50828 +
                     ((C47247 + C47246 + C47245) * C50630 +
                      (C47244 + C47243 + C47242) * C19841) *
                         C50932) *
                        C50693 * C50729) *
                       C1027 +
                   ((((C44493 + C44492 + C44491) * C19841 +
                      (C44490 + C44489 + C44488) * C50630) *
                         C50932 +
                     ((C44494 + C44495 + C44496) * C19841 +
                      (C44497 + C44498 + C44499) * C50630) *
                         C50828) *
                        C50693 * C50729 -
                    (((C44488 + C44489 + C44490) * C50630 +
                      (C44491 + C44492 + C44493) * C19841) *
                         C50828 +
                     ((C44305 + C44304 + C44303) * C50630 +
                      (C44302 + C44301 + C44300) * C19841) *
                         C50932) *
                        C50693 * C1025) *
                       C1028 +
                   ((((C44311 + C44310 + C44309) * C19841 +
                      (C44308 + C44307 + C44306) * C50630) *
                         C50932 +
                     ((C44840 + C44841 + C44842) * C19841 +
                      (C44843 + C44844 + C44845) * C50630) *
                         C50828) *
                        C50693 * C1025 -
                    (((C44262 * C2673 + C44259 * C2677 + C44261 * C1568 +
                       C50971 * C1575 + C44260 * C306 + C50970 * C319) *
                          C50630 +
                      (C44262 * C2668 + C44259 * C2674 + C44261 * C1563 +
                       C50971 * C1569 + C44260 * C289 + C50970 * C305) *
                          C19841) *
                         C50828 +
                     ((C44845 + C44844 + C44843) * C50630 +
                      (C44842 + C44841 + C44840) * C19841) *
                         C50932) *
                        C50693 * C50729) *
                       C1029)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C44260 * C122 + C50970 * C129 + C44261 * C463 +
                       C50971 * C477 + C44262 * C464 + C44259 * C478) *
                          C19841 +
                      (C44260 * C130 + C50970 * C143 + C44261 * C476 +
                       C50971 * C493 + C44262 * C479 + C44259 * C494) *
                          C50630) *
                         C50932 +
                     ((C47242 + C47243 + C47244) * C19841 +
                      (C47245 + C47246 + C47247) * C50630) *
                         C50828) *
                        C457 -
                    (((C47898 + C47899 + C47900) * C50630 +
                      (C47901 + C47902 + C47903) * C19841) *
                         C50828 +
                     ((C44262 * C1856 + C44259 * C1861 + C44261 * C479 +
                       C50971 * C494 + C44260 * C476 + C50970 * C493) *
                          C50630 +
                      (C44262 * C1849 + C44259 * C1857 + C44261 * C464 +
                       C50971 * C478 + C44260 * C463 + C50970 * C477) *
                          C19841) *
                         C50932) *
                        C458 +
                    (((C44260 * C464 + C50970 * C478 + C44261 * C1849 +
                       C50971 * C1857 + C44262 * C5566 + C44259 * C5569) *
                          C19841 +
                      (C44260 * C479 + C50970 * C494 + C44261 * C1856 +
                       C50971 * C1861 + C44262 * C5570 + C44259 * C5575) *
                          C50630) *
                         C50932 +
                     ((C48324 + C48325 + C48326) * C19841 +
                      (C48327 + C48328 + C48329) * C50630) *
                         C50828) *
                        C459) *
                       C1025 +
                   ((((C47903 + C47902 + C47901) * C19841 +
                      (C47900 + C47899 + C47898) * C50630) *
                         C50932 +
                     ((C44260 * C1565 + C50970 * C1573 + C44261 * C2666 +
                       C50971 * C2669 + C44262 * C4579 + C44259 * C4585) *
                          C19841 +
                      (C44260 * C1572 + C50970 * C1577 + C44261 * C2670 +
                       C50971 * C2675 + C44262 * C4584 + C44259 * C4591) *
                          C50630) *
                         C50828) *
                        C458 -
                    (((C47248 + C47249 + C47250) * C50630 +
                      (C47251 + C47252 + C47253) * C19841) *
                         C50828 +
                     ((C47247 + C47246 + C47245) * C50630 +
                      (C47244 + C47243 + C47242) * C19841) *
                         C50932) *
                        C457 -
                    (((C44262 * C22965 + C44259 * C22967 + C44261 * C4584 +
                       C50971 * C4591 + C44260 * C2670 + C50970 * C2675) *
                          C50630 +
                      (C44262 * C22964 + C44259 * C22966 + C44261 * C4579 +
                       C50971 * C4585 + C44260 * C2666 + C50970 * C2669) *
                          C19841) *
                         C50828 +
                     ((C48329 + C48328 + C48327) * C50630 +
                      (C48326 + C48325 + C48324) * C19841) *
                         C50932) *
                        C459) *
                       C50729) *
                  C50658) /
                     (p * q * std::sqrt(p + q));
    d2ee[173] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((((C44260 * C122 + C50970 * C129 + C44261 * C463 +
                        C50971 * C477 + C44262 * C464 + C44259 * C478) *
                           C19841 +
                       (C44260 * C130 + C50970 * C143 + C44261 * C476 +
                        C50971 * C493 + C44262 * C479 + C44259 * C494) *
                           C50630) *
                          C50932 +
                      ((C47242 + C47243 + C47244) * C19841 +
                       (C47245 + C47246 + C47247) * C50630) *
                          C50828) *
                         C50920 -
                     (((C47898 + C47899 + C47900) * C50630 +
                       (C47901 + C47902 + C47903) * C19841) *
                          C50828 +
                      ((C44262 * C1856 + C44259 * C1861 + C44261 * C479 +
                        C50971 * C494 + C44260 * C476 + C50970 * C493) *
                           C50630 +
                       (C44262 * C1849 + C44259 * C1857 + C44261 * C464 +
                        C50971 * C478 + C44260 * C463 + C50970 * C477) *
                           C19841) *
                          C50932) *
                         C50757) *
                        C1025 +
                    ((((C47903 + C47902 + C47901) * C19841 +
                       (C47900 + C47899 + C47898) * C50630) *
                          C50932 +
                      ((C44260 * C1565 + C50970 * C1573 + C44261 * C2666 +
                        C50971 * C2669 + C44262 * C4579 + C44259 * C4585) *
                           C19841 +
                       (C44260 * C1572 + C50970 * C1577 + C44261 * C2670 +
                        C50971 * C2675 + C44262 * C4584 + C44259 * C4591) *
                           C50630) *
                          C50828) *
                         C50757 -
                     (((C47248 + C47249 + C47250) * C50630 +
                       (C47251 + C47252 + C47253) * C19841) *
                          C50828 +
                      ((C47247 + C47246 + C47245) * C50630 +
                       (C47244 + C47243 + C47242) * C19841) *
                          C50932) *
                         C50920) *
                        C50729) *
                       C50911 +
                   (((((C44675 + C44674 + C44673) * C19841 +
                       (C44672 + C44671 + C44670) * C50630) *
                          C50932 +
                      ((C45216 + C45217 + C45218) * C19841 +
                       (C45219 + C45220 + C45221) * C50630) *
                          C50828) *
                         C50757 -
                     (((C44488 + C44489 + C44490) * C50630 +
                       (C44491 + C44492 + C44493) * C19841) *
                          C50828 +
                      ((C44305 + C44304 + C44303) * C50630 +
                       (C44302 + C44301 + C44300) * C19841) *
                          C50932) *
                         C50920) *
                        C1025 +
                    ((((C44493 + C44492 + C44491) * C19841 +
                       (C44490 + C44489 + C44488) * C50630) *
                          C50932 +
                      ((C44494 + C44495 + C44496) * C19841 +
                       (C44497 + C44498 + C44499) * C50630) *
                          C50828) *
                         C50920 -
                     (((C44262 * C4582 + C44259 * C4590 + C44261 * C2672 +
                        C50971 * C2676 + C44260 * C1570 + C50970 * C1576) *
                           C50630 +
                       (C44262 * C4578 + C44259 * C4583 + C44261 * C2667 +
                        C50971 * C2671 + C44260 * C1564 + C50970 * C1571) *
                           C19841) *
                          C50828 +
                      ((C45221 + C45220 + C45219) * C50630 +
                       (C45218 + C45217 + C45216) * C19841) *
                          C50932) *
                         C50757) *
                        C50729) *
                       C50664)) /
                 (p * q * std::sqrt(p + q));
    d2ee[174] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C44260 * C122 + C50970 * C129 + C44261 * C463 +
                       C50971 * C477 + C44262 * C464 + C44259 * C478) *
                          C19841 +
                      (C44260 * C130 + C50970 * C143 + C44261 * C476 +
                       C50971 * C493 + C44262 * C479 + C44259 * C494) *
                          C50630) *
                         C50932 +
                     ((C47242 + C47243 + C47244) * C19841 +
                      (C47245 + C47246 + C47247) * C50630) *
                         C50828) *
                        C50693 * C1025 -
                    (((C47248 + C47249 + C47250) * C50630 +
                      (C47251 + C47252 + C47253) * C19841) *
                         C50828 +
                     ((C47247 + C47246 + C47245) * C50630 +
                      (C47244 + C47243 + C47242) * C19841) *
                         C50932) *
                        C50693 * C50729) *
                       C1027 +
                   ((((C44493 + C44492 + C44491) * C19841 +
                      (C44490 + C44489 + C44488) * C50630) *
                         C50932 +
                     ((C44494 + C44495 + C44496) * C19841 +
                      (C44497 + C44498 + C44499) * C50630) *
                         C50828) *
                        C50693 * C50729 -
                    (((C44488 + C44489 + C44490) * C50630 +
                      (C44491 + C44492 + C44493) * C19841) *
                         C50828 +
                     ((C44305 + C44304 + C44303) * C50630 +
                      (C44302 + C44301 + C44300) * C19841) *
                         C50932) *
                        C50693 * C1025) *
                       C1028 +
                   ((((C44311 + C44310 + C44309) * C19841 +
                      (C44308 + C44307 + C44306) * C50630) *
                         C50932 +
                     ((C44840 + C44841 + C44842) * C19841 +
                      (C44843 + C44844 + C44845) * C50630) *
                         C50828) *
                        C50693 * C1025 -
                    (((C44262 * C2673 + C44259 * C2677 + C44261 * C1568 +
                       C50971 * C1575 + C44260 * C306 + C50970 * C319) *
                          C50630 +
                      (C44262 * C2668 + C44259 * C2674 + C44261 * C1563 +
                       C50971 * C1569 + C44260 * C289 + C50970 * C305) *
                          C19841) *
                         C50828 +
                     ((C44845 + C44844 + C44843) * C50630 +
                      (C44842 + C44841 + C44840) * C19841) *
                         C50932) *
                        C50693 * C50729) *
                       C1029)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C44260 * C122 + C50970 * C129 + C44261 * C463 +
                      C50971 * C477 + C44262 * C464 + C44259 * C478) *
                         C19841 +
                     (C44260 * C130 + C50970 * C143 + C44261 * C476 +
                      C50971 * C493 + C44262 * C479 + C44259 * C494) *
                         C50630) *
                        C50932 +
                    ((C47242 + C47243 + C47244) * C19841 +
                     (C47245 + C47246 + C47247) * C50630) *
                        C50828) *
                       C50693 * C1096 -
                   (((C47248 + C47249 + C47250) * C50630 +
                     (C47251 + C47252 + C47253) * C19841) *
                        C50828 +
                    ((C47247 + C47246 + C47245) * C50630 +
                     (C47244 + C47243 + C47242) * C19841) *
                        C50932) *
                       C50693 * C1097 +
                   (((C47253 + C47252 + C47251) * C19841 +
                     (C47250 + C47249 + C47248) * C50630) *
                        C50932 +
                    ((C48160 + C48161 + C48162) * C19841 +
                     (C48163 + C48164 + C48165) * C50630) *
                        C50828) *
                       C50693 * C1098 -
                   (((C44262 * C20679 + C44259 * C20681 + C44261 * C4171 +
                      C50971 * C4174 + C44260 * C2446 + C50970 * C2451) *
                         C50630 +
                     (C44262 * C20678 + C44259 * C20680 + C44261 * C4168 +
                      C50971 * C4172 + C44260 * C2442 + C50970 * C2445) *
                         C19841) *
                        C50828 +
                    ((C48165 + C48164 + C48163) * C50630 +
                     (C48162 + C48161 + C48160) * C19841) *
                        C50932) *
                       C50693 * C1099) *
                  C50658) /
                     (p * q * std::sqrt(p + q));
    d2ee[175] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((((C44260 * C122 + C50970 * C129 + C44261 * C463 +
                        C50971 * C477 + C44262 * C464 + C44259 * C478) *
                           C19841 +
                       (C44260 * C130 + C50970 * C143 + C44261 * C476 +
                        C50971 * C493 + C44262 * C479 + C44259 * C494) *
                           C50630) *
                          C50932 +
                      ((C47242 + C47243 + C47244) * C19841 +
                       (C47245 + C47246 + C47247) * C50630) *
                          C50828) *
                         C1676 -
                     (((C47898 + C47899 + C47900) * C50630 +
                       (C47901 + C47902 + C47903) * C19841) *
                          C50828 +
                      ((C44262 * C1856 + C44259 * C1861 + C44261 * C479 +
                        C50971 * C494 + C44260 * C476 + C50970 * C493) *
                           C50630 +
                       (C44262 * C1849 + C44259 * C1857 + C44261 * C464 +
                        C50971 * C478 + C44260 * C463 + C50970 * C477) *
                           C19841) *
                          C50932) *
                         C50757) *
                        C50919 +
                    ((((C47903 + C47902 + C47901) * C19841 +
                       (C47900 + C47899 + C47898) * C50630) *
                          C50932 +
                      ((C48828 + C48829 + C48830) * C19841 +
                       (C48831 + C48832 + C48833) * C50630) *
                          C50828) *
                         C50757 -
                     (((C47248 + C47249 + C47250) * C50630 +
                       (C47251 + C47252 + C47253) * C19841) *
                          C50828 +
                      ((C47247 + C47246 + C47245) * C50630 +
                       (C47244 + C47243 + C47242) * C19841) *
                          C50932) *
                         C1676) *
                        C50729) *
                       C50911 +
                   (((((C44675 + C44674 + C44673) * C19841 +
                       (C44672 + C44671 + C44670) * C50630) *
                          C50932 +
                      ((C45216 + C45217 + C45218) * C19841 +
                       (C45219 + C45220 + C45221) * C50630) *
                          C50828) *
                         C50757 -
                     (((C44488 + C44489 + C44490) * C50630 +
                       (C44491 + C44492 + C44493) * C19841) *
                          C50828 +
                      ((C44305 + C44304 + C44303) * C50630 +
                       (C44302 + C44301 + C44300) * C19841) *
                          C50932) *
                         C1676) *
                        C50919 +
                    ((((C44493 + C44492 + C44491) * C19841 +
                       (C44490 + C44489 + C44488) * C50630) *
                          C50932 +
                      ((C44494 + C44495 + C44496) * C19841 +
                       (C44497 + C44498 + C44499) * C50630) *
                          C50828) *
                         C1676 -
                     (((C44262 * C4582 + C44259 * C4590 + C44261 * C2672 +
                        C50971 * C2676 + C44260 * C1570 + C50970 * C1576) *
                           C50630 +
                       (C44262 * C4578 + C44259 * C4583 + C44261 * C2667 +
                        C50971 * C2671 + C44260 * C1564 + C50970 * C1571) *
                           C19841) *
                          C50828 +
                      ((C45221 + C45220 + C45219) * C50630 +
                       (C45218 + C45217 + C45216) * C19841) *
                          C50932) *
                         C50757) *
                        C50729) *
                       C50664)) /
                 (p * q * std::sqrt(p + q));
    d2ee[176] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C44260 * C122 + C50970 * C129 + C44261 * C463 +
                       C50971 * C477 + C44262 * C464 + C44259 * C478) *
                          C19841 +
                      (C44260 * C130 + C50970 * C143 + C44261 * C476 +
                       C50971 * C493 + C44262 * C479 + C44259 * C494) *
                          C50630) *
                         C50932 +
                     ((C47242 + C47243 + C47244) * C19841 +
                      (C47245 + C47246 + C47247) * C50630) *
                         C50828) *
                        C50966 -
                    (((C47898 + C47899 + C47900) * C50630 +
                      (C47901 + C47902 + C47903) * C19841) *
                         C50828 +
                     ((C44262 * C1856 + C44259 * C1861 + C44261 * C479 +
                       C50971 * C494 + C44260 * C476 + C50970 * C493) *
                          C50630 +
                      (C44262 * C1849 + C44259 * C1857 + C44261 * C464 +
                       C50971 * C478 + C44260 * C463 + C50970 * C477) *
                          C19841) *
                         C50932) *
                        C50967 +
                    (((C44260 * C464 + C50970 * C478 + C44261 * C1849 +
                       C50971 * C1857 + C44262 * C5566 + C44259 * C5569) *
                          C19841 +
                      (C44260 * C479 + C50970 * C494 + C44261 * C1856 +
                       C50971 * C1861 + C44262 * C5570 + C44259 * C5575) *
                          C50630) *
                         C50932 +
                     ((C48324 + C48325 + C48326) * C19841 +
                      (C48327 + C48328 + C48329) * C50630) *
                         C50828) *
                        C2092) *
                       C50919 +
                   ((((C47903 + C47902 + C47901) * C19841 +
                      (C47900 + C47899 + C47898) * C50630) *
                         C50932 +
                     ((C48828 + C48829 + C48830) * C19841 +
                      (C48831 + C48832 + C48833) * C50630) *
                         C50828) *
                        C50967 -
                    (((C47248 + C47249 + C47250) * C50630 +
                      (C47251 + C47252 + C47253) * C19841) *
                         C50828 +
                     ((C47247 + C47246 + C47245) * C50630 +
                      (C47244 + C47243 + C47242) * C19841) *
                         C50932) *
                        C50966 -
                    (((C44262 * C22965 + C44259 * C22967 + C44261 * C4584 +
                       C50971 * C4591 + C44260 * C2670 + C50970 * C2675) *
                          C50630 +
                      (C44262 * C22964 + C44259 * C22966 + C44261 * C4579 +
                       C50971 * C4585 + C44260 * C2666 + C50970 * C2669) *
                          C19841) *
                         C50828 +
                     ((C48329 + C48328 + C48327) * C50630 +
                      (C48326 + C48325 + C48324) * C19841) *
                         C50932) *
                        C2092) *
                       C50729) *
                  C50658) /
                 (p * q * std::sqrt(p + q));
    d2ee[177] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C44260 * C122 + C50970 * C129 + C44261 * C463 +
                       C50971 * C477 + C44262 * C464 + C44259 * C478) *
                          C19841 +
                      (C44260 * C130 + C50970 * C143 + C44261 * C476 +
                       C50971 * C493 + C44262 * C479 + C44259 * C494) *
                          C50630) *
                         C50932 +
                     ((C47242 + C47243 + C47244) * C19841 +
                      (C47245 + C47246 + C47247) * C50630) *
                         C50828) *
                        C1676 -
                    (((C47898 + C47899 + C47900) * C50630 +
                      (C47901 + C47902 + C47903) * C19841) *
                         C50828 +
                     ((C44262 * C1856 + C44259 * C1861 + C44261 * C479 +
                       C50971 * C494 + C44260 * C476 + C50970 * C493) *
                          C50630 +
                      (C44262 * C1849 + C44259 * C1857 + C44261 * C464 +
                       C50971 * C478 + C44260 * C463 + C50970 * C477) *
                          C19841) *
                         C50932) *
                        C50757) *
                       C278 +
                   ((((C47903 + C47902 + C47901) * C19841 +
                      (C47900 + C47899 + C47898) * C50630) *
                         C50932 +
                     ((C48828 + C48829 + C48830) * C19841 +
                      (C48831 + C48832 + C48833) * C50630) *
                         C50828) *
                        C50757 -
                    (((C47248 + C47249 + C47250) * C50630 +
                      (C47251 + C47252 + C47253) * C19841) *
                         C50828 +
                     ((C47247 + C47246 + C47245) * C50630 +
                      (C47244 + C47243 + C47242) * C19841) *
                         C50932) *
                        C1676) *
                       C279 +
                   ((((C47253 + C47252 + C47251) * C19841 +
                      (C47250 + C47249 + C47248) * C50630) *
                         C50932 +
                     ((C48160 + C48161 + C48162) * C19841 +
                      (C48163 + C48164 + C48165) * C50630) *
                         C50828) *
                        C1676 -
                    (((C44262 * C21297 + C44259 * C21299 + C44261 * C3657 +
                       C50971 * C3660 + C44260 * C3200 + C50970 * C3205) *
                          C50630 +
                      (C44262 * C21296 + C44259 * C21298 + C44261 * C3654 +
                       C50971 * C3658 + C44260 * C3196 + C50970 * C3199) *
                          C19841) *
                         C50828 +
                     ((C48833 + C48832 + C48831) * C50630 +
                      (C48830 + C48829 + C48828) * C19841) *
                         C50932) *
                        C50757) *
                       C280) *
                  C50658) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C44260 * C122 + C50970 * C129 + C44261 * C463 +
                       C50971 * C477 + C44262 * C464 + C44259 * C478) *
                          C19841 +
                      (C44260 * C130 + C50970 * C143 + C44261 * C476 +
                       C50971 * C493 + C44262 * C479 + C44259 * C494) *
                          C50630) *
                         C50932 +
                     ((C47242 + C47243 + C47244) * C19841 +
                      (C47245 + C47246 + C47247) * C50630) *
                         C50828) *
                        C1676 -
                    (((C47898 + C47899 + C47900) * C50630 +
                      (C47901 + C47902 + C47903) * C19841) *
                         C50828 +
                     ((C44262 * C1856 + C44259 * C1861 + C44261 * C479 +
                       C50971 * C494 + C44260 * C476 + C50970 * C493) *
                          C50630 +
                      (C44262 * C1849 + C44259 * C1857 + C44261 * C464 +
                       C50971 * C478 + C44260 * C463 + C50970 * C477) *
                          C19841) *
                         C50932) *
                        C50757) *
                       C50677 * C1027 +
                   ((((C44675 + C44674 + C44673) * C19841 +
                      (C44672 + C44671 + C44670) * C50630) *
                         C50932 +
                     ((C45216 + C45217 + C45218) * C19841 +
                      (C45219 + C45220 + C45221) * C50630) *
                         C50828) *
                        C50757 -
                    (((C44488 + C44489 + C44490) * C50630 +
                      (C44491 + C44492 + C44493) * C19841) *
                         C50828 +
                     ((C44305 + C44304 + C44303) * C50630 +
                      (C44302 + C44301 + C44300) * C19841) *
                         C50932) *
                        C1676) *
                       C50677 * C1028 +
                   ((((C44311 + C44310 + C44309) * C19841 +
                      (C44308 + C44307 + C44306) * C50630) *
                         C50932 +
                     ((C44840 + C44841 + C44842) * C19841 +
                      (C44843 + C44844 + C44845) * C50630) *
                         C50828) *
                        C1676 -
                    (((C44262 * C6137 + C44259 * C6139 + C44261 * C1221 +
                       C50971 * C1228 + C44260 * C899 + C50970 * C906) *
                          C50630 +
                      (C44262 * C6136 + C44259 * C6138 + C44261 * C1216 +
                       C50971 * C1222 + C44260 * C891 + C50970 * C898) *
                          C19841) *
                         C50828 +
                     ((C45009 + C45008 + C45007) * C50630 +
                      (C45006 + C45005 + C45004) * C19841) *
                         C50932) *
                        C50757) *
                       C50677 * C1029)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C44260 * C122 + C50970 * C129 + C44261 * C463 +
                      C50971 * C477 + C44262 * C464 + C44259 * C478) *
                         C19841 +
                     (C44260 * C130 + C50970 * C143 + C44261 * C476 +
                      C50971 * C493 + C44262 * C479 + C44259 * C494) *
                         C50630) *
                        C50932 +
                    ((C47242 + C47243 + C47244) * C19841 +
                     (C47245 + C47246 + C47247) * C50630) *
                        C50828) *
                       C1842 -
                   (((C47898 + C47899 + C47900) * C50630 +
                     (C47901 + C47902 + C47903) * C19841) *
                        C50828 +
                    ((C44262 * C1856 + C44259 * C1861 + C44261 * C479 +
                      C50971 * C494 + C44260 * C476 + C50970 * C493) *
                         C50630 +
                     (C44262 * C1849 + C44259 * C1857 + C44261 * C464 +
                      C50971 * C478 + C44260 * C463 + C50970 * C477) *
                         C19841) *
                        C50932) *
                       C1843 +
                   (((C44260 * C464 + C50970 * C478 + C44261 * C1849 +
                      C50971 * C1857 + C44262 * C5566 + C44259 * C5569) *
                         C19841 +
                     (C44260 * C479 + C50970 * C494 + C44261 * C1856 +
                      C50971 * C1861 + C44262 * C5570 + C44259 * C5575) *
                         C50630) *
                        C50932 +
                    ((C48324 + C48325 + C48326) * C19841 +
                     (C48327 + C48328 + C48329) * C50630) *
                        C50828) *
                       C1844 -
                   (((C44262 * C23881 + C44259 * C23883 + C44261 * C6552 +
                      C50971 * C6555 + C44260 * C4588 + C50970 * C4593) *
                         C50630 +
                     (C44262 * C23880 + C44259 * C23882 + C44261 * C6549 +
                      C50971 * C6553 + C44260 * C4581 + C50970 * C4589) *
                         C19841) *
                        C50828 +
                    ((C44262 * C7436 + C44259 * C7439 + C44261 * C5570 +
                      C50971 * C5575 + C44260 * C1856 + C50970 * C1861) *
                         C50630 +
                     (C44262 * C7433 + C44259 * C7437 + C44261 * C5566 +
                      C50971 * C5569 + C44260 * C1849 + C50970 * C1857) *
                         C19841) *
                        C50932) *
                       C1845) *
                  C50677 * C50658) /
                     (p * q * std::sqrt(p + q));
    d2ee[178] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C44260 * C122 + C50970 * C129 + C44261 * C463 +
                       C50971 * C477 + C44262 * C464 + C44259 * C478) *
                          C19841 +
                      (C44260 * C130 + C50970 * C143 + C44261 * C476 +
                       C50971 * C493 + C44262 * C479 + C44259 * C494) *
                          C50630) *
                         C50932 +
                     ((C47242 + C47243 + C47244) * C19841 +
                      (C47245 + C47246 + C47247) * C50630) *
                         C50828) *
                        C50966 -
                    (((C47898 + C47899 + C47900) * C50630 +
                      (C47901 + C47902 + C47903) * C19841) *
                         C50828 +
                     ((C44262 * C1856 + C44259 * C1861 + C44261 * C479 +
                       C50971 * C494 + C44260 * C476 + C50970 * C493) *
                          C50630 +
                      (C44262 * C1849 + C44259 * C1857 + C44261 * C464 +
                       C50971 * C478 + C44260 * C463 + C50970 * C477) *
                          C19841) *
                         C50932) *
                        C50967 +
                    (((C44260 * C464 + C50970 * C478 + C44261 * C1849 +
                       C50971 * C1857 + C44262 * C5566 + C44259 * C5569) *
                          C19841 +
                      (C44260 * C479 + C50970 * C494 + C44261 * C1856 +
                       C50971 * C1861 + C44262 * C5570 + C44259 * C5575) *
                          C50630) *
                         C50932 +
                     ((C48324 + C48325 + C48326) * C19841 +
                      (C48327 + C48328 + C48329) * C50630) *
                         C50828) *
                        C2092) *
                       C50677 * C50911 +
                   ((((C44675 + C44674 + C44673) * C19841 +
                      (C44672 + C44671 + C44670) * C50630) *
                         C50932 +
                     ((C45216 + C45217 + C45218) * C19841 +
                      (C45219 + C45220 + C45221) * C50630) *
                         C50828) *
                        C50967 -
                    (((C44488 + C44489 + C44490) * C50630 +
                      (C44491 + C44492 + C44493) * C19841) *
                         C50828 +
                     ((C44305 + C44304 + C44303) * C50630 +
                      (C44302 + C44301 + C44300) * C19841) *
                         C50932) *
                        C50966 -
                    (((C44262 * C6550 + C44259 * C6554 + C44261 * C4586 +
                       C50971 * C4592 + C44260 * C1223 + C50970 * C1229) *
                          C50630 +
                      (C44262 * C6548 + C44259 * C6551 + C44261 * C4580 +
                       C50971 * C4587 + C44260 * C1217 + C50970 * C1224) *
                          C19841) *
                         C50828 +
                     ((C44681 + C44680 + C44679) * C50630 +
                      (C44678 + C44677 + C44676) * C19841) *
                         C50932) *
                        C2092) *
                       C50677 * C50664)) /
                 (p * q * std::sqrt(p + q));
    d2ee[179] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C44260 * C122 + C50970 * C129 + C44261 * C463 +
                       C50971 * C477 + C44262 * C464 + C44259 * C478) *
                          C19841 +
                      (C44260 * C130 + C50970 * C143 + C44261 * C476 +
                       C50971 * C493 + C44262 * C479 + C44259 * C494) *
                          C50630) *
                         C50932 +
                     ((C47242 + C47243 + C47244) * C19841 +
                      (C47245 + C47246 + C47247) * C50630) *
                         C50828) *
                        C1676 -
                    (((C47898 + C47899 + C47900) * C50630 +
                      (C47901 + C47902 + C47903) * C19841) *
                         C50828 +
                     ((C44262 * C1856 + C44259 * C1861 + C44261 * C479 +
                       C50971 * C494 + C44260 * C476 + C50970 * C493) *
                          C50630 +
                      (C44262 * C1849 + C44259 * C1857 + C44261 * C464 +
                       C50971 * C478 + C44260 * C463 + C50970 * C477) *
                          C19841) *
                         C50932) *
                        C50757) *
                       C50677 * C1027 +
                   ((((C44675 + C44674 + C44673) * C19841 +
                      (C44672 + C44671 + C44670) * C50630) *
                         C50932 +
                     ((C45216 + C45217 + C45218) * C19841 +
                      (C45219 + C45220 + C45221) * C50630) *
                         C50828) *
                        C50757 -
                    (((C44488 + C44489 + C44490) * C50630 +
                      (C44491 + C44492 + C44493) * C19841) *
                         C50828 +
                     ((C44305 + C44304 + C44303) * C50630 +
                      (C44302 + C44301 + C44300) * C19841) *
                         C50932) *
                        C1676) *
                       C50677 * C1028 +
                   ((((C44311 + C44310 + C44309) * C19841 +
                      (C44308 + C44307 + C44306) * C50630) *
                         C50932 +
                     ((C44840 + C44841 + C44842) * C19841 +
                      (C44843 + C44844 + C44845) * C50630) *
                         C50828) *
                        C1676 -
                    (((C44262 * C6137 + C44259 * C6139 + C44261 * C1221 +
                       C50971 * C1228 + C44260 * C899 + C50970 * C906) *
                          C50630 +
                      (C44262 * C6136 + C44259 * C6138 + C44261 * C1216 +
                       C50971 * C1222 + C44260 * C891 + C50970 * C898) *
                          C19841) *
                         C50828 +
                     ((C45009 + C45008 + C45007) * C50630 +
                      (C45006 + C45005 + C45004) * C19841) *
                         C50932) *
                        C50757) *
                       C50677 * C1029)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C44260 * C122 + C50970 * C129 + C44261 * C463 +
                       C50971 * C477 + C44262 * C464 + C44259 * C478) *
                          C19841 +
                      (C44260 * C130 + C50970 * C143 + C44261 * C476 +
                       C50971 * C493 + C44262 * C479 + C44259 * C494) *
                          C50630) *
                         C50932 +
                     ((C47242 + C47243 + C47244) * C19841 +
                      (C47245 + C47246 + C47247) * C50630) *
                         C50828) *
                        C1676 -
                    (((C47898 + C47899 + C47900) * C50630 +
                      (C47901 + C47902 + C47903) * C19841) *
                         C50828 +
                     ((C44262 * C1856 + C44259 * C1861 + C44261 * C479 +
                       C50971 * C494 + C44260 * C476 + C50970 * C493) *
                          C50630 +
                      (C44262 * C1849 + C44259 * C1857 + C44261 * C464 +
                       C50971 * C478 + C44260 * C463 + C50970 * C477) *
                          C19841) *
                         C50932) *
                        C50757) *
                       C278 +
                   ((((C47903 + C47902 + C47901) * C19841 +
                      (C47900 + C47899 + C47898) * C50630) *
                         C50932 +
                     ((C48828 + C48829 + C48830) * C19841 +
                      (C48831 + C48832 + C48833) * C50630) *
                         C50828) *
                        C50757 -
                    (((C47248 + C47249 + C47250) * C50630 +
                      (C47251 + C47252 + C47253) * C19841) *
                         C50828 +
                     ((C47247 + C47246 + C47245) * C50630 +
                      (C47244 + C47243 + C47242) * C19841) *
                         C50932) *
                        C1676) *
                       C279 +
                   ((((C47253 + C47252 + C47251) * C19841 +
                      (C47250 + C47249 + C47248) * C50630) *
                         C50932 +
                     ((C48160 + C48161 + C48162) * C19841 +
                      (C48163 + C48164 + C48165) * C50630) *
                         C50828) *
                        C1676 -
                    (((C44262 * C21297 + C44259 * C21299 + C44261 * C3657 +
                       C50971 * C3660 + C44260 * C3200 + C50970 * C3205) *
                          C50630 +
                      (C44262 * C21296 + C44259 * C21298 + C44261 * C3654 +
                       C50971 * C3658 + C44260 * C3196 + C50970 * C3199) *
                          C19841) *
                         C50828 +
                     ((C48833 + C48832 + C48831) * C50630 +
                      (C48830 + C48829 + C48828) * C19841) *
                         C50932) *
                        C50757) *
                       C280) *
                  C50658) /
                     (p * q * std::sqrt(p + q));
    d2ee[180] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C19841 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C50630) *
                C2291 +
            ((C36366 + C36367) * C19841 + (C36368 + C36369) * C50630) * C2292 +
            C36389 * C2293) *
               C50693 * C50919 -
           (((C36374 + C36375) * C50630 + (C36376 + C36377) * C19841) * C2293 +
            ((C36373 + C36372) * C50630 + (C36371 + C36370) * C19841) * C2292 +
            ((C36369 + C36368) * C50630 + (C36367 + C36366) * C19841) * C2291) *
               C50693 * C50729) *
              C50962 +
          ((((C33595 + C33594) * C19841 + (C33593 + C33592) * C50630) * C2291 +
            ((C33596 + C33597) * C19841 + (C33598 + C33599) * C50630) * C2292 +
            ((C36378 + C36379) * C19841 + (C36380 + C36381) * C50630) * C2293) *
               C50693 * C50729 -
           (C36386 * C2293 +
            ((C33592 + C33593) * C50630 + (C33594 + C33595) * C19841) * C2292 +
            ((C33393 + C33392) * C50630 + (C33391 + C33390) * C19841) * C2291) *
               C50693 * C50919) *
              C50963 +
          (((C33406 * C19841 + C33407 * C50630) * C2291 +
            ((C33591 + C33590) * C19841 + (C33589 + C33588) * C50630) * C2292 +
            ((C33600 + C33601) * C19841 + (C33602 + C33603) * C50630) * C2293) *
               C50693 * C50919 -
           (((C33356 * C3203 + C50854 * C3207 + C33355 * C1107 +
              C33353 * C1114) *
                 C50630 +
             (C33356 * C3198 + C50854 * C3204 + C33355 * C1102 +
              C33353 * C1108) *
                 C19841) *
                C2293 +
            ((C33603 + C33602) * C50630 + (C33601 + C33600) * C19841) * C2292 +
            (C33944 * C50630 + C33945 * C19841) * C2291) *
               C50693 * C50729) *
              C638)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                C17177 +
            (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                C17172 +
            (C33390 + C33391) * C17178 + (C33392 + C33393) * C17173 +
            C33406 * C17179 + C33407 * C17174) *
               C50779 * C50693 * C50919 -
           (C33944 * C17174 + C33945 * C17179 + (C33592 + C33593) * C17173 +
            (C33594 + C33595) * C17178 +
            (C33356 * C895 + C50854 * C904 + C33355 * C299 + C33353 * C316) *
                C17172 +
            (C33356 * C889 + C50854 * C894 + C33355 * C286 + C33353 * C300) *
                C17177) *
               C50779 * C50693 * C50729) *
              C50962 +
          (((C33595 + C33594) * C17177 + (C33593 + C33592) * C17172 +
            (C33591 + C33590) * C17178 + (C33589 + C33588) * C17173 +
            (C33954 + C33955) * C17179 + (C33956 + C33957) * C17174) *
               C50779 * C50693 * C50729 -
           (C33408 * C17174 + C33409 * C17179 + (C33397 + C33396) * C17173 +
            (C33395 + C33394) * C17178 + (C33393 + C33392) * C17172 +
            (C33391 + C33390) * C17177) *
               C50779 * C50693 * C50919) *
              C50963 +
          ((C33406 * C17177 + C33407 * C17172 + (C33401 + C33400) * C17178 +
            (C33399 + C33398) * C17173 + (C33402 + C33403) * C17179 +
            (C33404 + C33405) * C17174) *
               C50779 * C50693 * C50919 -
           ((C33356 * C902 + C50854 * C908 + C33355 * C310 + C33353 * C321) *
                C17174 +
            (C33356 * C893 + C50854 * C903 + C33355 * C291 + C33353 * C309) *
                C17179 +
            (C33957 + C33956) * C17173 + (C33955 + C33954) * C17178 +
            C33944 * C17172 + C33945 * C17177) *
               C50779 * C50693 * C50729) *
              C638)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C38937 * C122 + C38933 * C129 + C38938 * C463 + C38934 * C477 +
             C38939 * C464 + C38935 * C478 + C38940 * C1849 + C38936 * C1857) *
                C19841 +
            (C38937 * C130 + C38933 * C143 + C38938 * C476 + C38934 * C493 +
             C38939 * C479 + C38935 * C494 + C38940 * C1856 + C38936 * C1861) *
                C50630) *
               C50779 * C50693 * C50919 -
           ((C38940 * C4588 + C38936 * C4593 + C38939 * C1225 + C38935 * C1230 +
             C38938 * C895 + C38934 * C904 + C38937 * C299 + C38933 * C316) *
                C50630 +
            (C38940 * C4581 + C38936 * C4589 + C38939 * C1218 + C38935 * C1226 +
             C38938 * C889 + C38934 * C894 + C38937 * C286 + C38933 * C300) *
                C19841) *
               C50779 * C50693 * C50729) *
              C50962 +
          (((C38937 * C285 + C38933 * C298 + C38938 * C890 + C38934 * C896 +
             C38939 * C1217 + C38935 * C1224 + C38940 * C4580 +
             C38936 * C4587) *
                C19841 +
            (C38937 * C297 + C38933 * C315 + C38938 * C897 + C38934 * C905 +
             C38939 * C1223 + C38935 * C1229 + C38940 * C4586 +
             C38936 * C4592) *
                C50630) *
               C50779 * C50693 * C50729 -
           ((C38940 * C1854 + C38936 * C1860 + C38939 * C481 + C38935 * C495 +
             C38938 * C474 + C38934 * C492 + C38937 * C132 + C38933 * C144) *
                C50630 +
            (C38940 * C1848 + C38936 * C1855 + C38939 * C465 + C38935 * C480 +
             C38938 * C462 + C38934 * C475 + C38937 * C123 + C38933 * C131) *
                C19841) *
               C50779 * C50693 * C50919) *
              C50963 +
          (((C38937 * C124 + C38933 * C133 + C38938 * C461 + C38934 * C473 +
             C38939 * C466 + C38935 * C482 + C38940 * C1847 + C38936 * C1853) *
                C19841 +
            (C38937 * C134 + C38933 * C145 + C38938 * C472 + C38934 * C491 +
             C38939 * C483 + C38935 * C496 + C38940 * C1852 + C38936 * C1859) *
                C50630) *
               C50779 * C50693 * C50919 -
           ((C38940 * C6137 + C38936 * C6139 + C38939 * C1221 + C38935 * C1228 +
             C38938 * C899 + C38934 * C906 + C38937 * C295 + C38933 * C314) *
                C50630 +
            (C38940 * C6136 + C38936 * C6138 + C38939 * C1216 + C38935 * C1222 +
             C38938 * C891 + C38934 * C898 + C38937 * C284 + C38933 * C296) *
                C19841) *
               C50779 * C50693 * C50729) *
              C638)) /
            (p * q * std::sqrt(p + q));
    d2ee[181] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                  C19841 +
              (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                  C50630) *
                 C2291 +
             ((C36366 + C36367) * C19841 + (C36368 + C36369) * C50630) * C2292 +
             C36389 * C2293) *
                C50920 -
            (((C37046 + C37047) * C50630 + (C37048 + C37049) * C19841) * C2293 +
             ((C37050 + C37051) * C50630 + (C37052 + C37053) * C19841) * C2292 +
             ((C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                  C50630 +
              (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                  C19841) *
                 C2291) *
                C50757) *
               C50919 +
           ((((C37053 + C37052) * C19841 + (C37051 + C37050) * C50630) * C2291 +
             ((C37049 + C37048) * C19841 + (C37047 + C37046) * C50630) * C2292 +
             ((C33355 * C3196 + C33353 * C3199 + C33356 * C3654 +
               C50854 * C3658) *
                  C19841 +
              (C33355 * C3200 + C33353 * C3205 + C33356 * C3657 +
               C50854 * C3660) *
                  C50630) *
                 C2293) *
                C50757 -
            (((C36374 + C36375) * C50630 + (C36376 + C36377) * C19841) * C2293 +
             ((C36373 + C36372) * C50630 + (C36371 + C36370) * C19841) * C2292 +
             ((C36369 + C36368) * C50630 + (C36367 + C36366) * C19841) *
                 C2291) *
                C50920) *
               C50729) *
              C281 +
          (((((C33789 + C33788) * C19841 + (C33787 + C33786) * C50630) * C2291 +
             ((C34328 + C34329) * C19841 + (C34330 + C34331) * C50630) * C2292 +
             ((C37054 + C37055) * C19841 + (C37056 + C37057) * C50630) *
                 C2293) *
                C50757 -
            (C36386 * C2293 +
             ((C33592 + C33593) * C50630 + (C33594 + C33595) * C19841) * C2292 +
             ((C33393 + C33392) * C50630 + (C33391 + C33390) * C19841) *
                 C2291) *
                C50920) *
               C50919 +
           ((((C33595 + C33594) * C19841 + (C33593 + C33592) * C50630) * C2291 +
             ((C33596 + C33597) * C19841 + (C33598 + C33599) * C50630) * C2292 +
             ((C36378 + C36379) * C19841 + (C36380 + C36381) * C50630) *
                 C2293) *
                C50920 -
            (((C33356 * C3655 + C50854 * C3659 + C33355 * C3202 +
               C33353 * C3206) *
                  C50630 +
              (C33356 * C3653 + C50854 * C3656 + C33355 * C3197 +
               C33353 * C3201) *
                  C19841) *
                 C2293 +
             ((C37057 + C37056) * C50630 + (C37055 + C37054) * C19841) * C2292 +
             ((C34331 + C34330) * C50630 + (C34329 + C34328) * C19841) *
                 C2291) *
                C50757) *
               C50729) *
              C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C17177 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C17172 +
             (C33390 + C33391) * C17178 + (C33392 + C33393) * C17173 +
             C33406 * C17179 + C33407 * C17174) *
                C50779 * C50920 -
            (C34104 * C17174 + C34105 * C17179 + (C33786 + C33787) * C17173 +
             (C33788 + C33789) * C17178 +
             (C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                 C17172 +
             (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                 C17177) *
                C50779 * C50757) *
               C50919 +
           (((C33355 * C889 + C33353 * C894 + C33356 * C1218 + C50854 * C1226) *
                 C17177 +
             (C33355 * C895 + C33353 * C904 + C33356 * C1225 + C50854 * C1230) *
                 C17172 +
             (C34328 + C34329) * C17178 + (C34330 + C34331) * C17173 +
             (C34332 + C34333) * C17179 + (C34334 + C34335) * C17174) *
                C50779 * C50757 -
            (C33944 * C17174 + C33945 * C17179 + (C33592 + C33593) * C17173 +
             (C33594 + C33595) * C17178 +
             (C33356 * C895 + C50854 * C904 + C33355 * C299 + C33353 * C316) *
                 C17172 +
             (C33356 * C889 + C50854 * C894 + C33355 * C286 + C33353 * C300) *
                 C17177) *
                C50779 * C50920) *
               C50729) *
              C281 +
          ((((C33789 + C33788) * C17177 + (C33787 + C33786) * C17172 +
             (C33785 + C33784) * C17178 + (C33783 + C33782) * C17173 +
             (C34114 + C34115) * C17179 + (C34116 + C34117) * C17174) *
                C50779 * C50757 -
            (C33408 * C17174 + C33409 * C17179 + (C33397 + C33396) * C17173 +
             (C33395 + C33394) * C17178 + (C33393 + C33392) * C17172 +
             (C33391 + C33390) * C17177) *
                C50779 * C50920) *
               C50919 +
           (((C33595 + C33594) * C17177 + (C33593 + C33592) * C17172 +
             (C33591 + C33590) * C17178 + (C33589 + C33588) * C17173 +
             (C33954 + C33955) * C17179 + (C33956 + C33957) * C17174) *
                C50779 * C50920 -
            ((C33356 * C1219 + C50854 * C1227 + C33355 * C901 + C33353 * C907) *
                 C17174 +
             (C33356 * C1215 + C50854 * C1220 + C33355 * C892 + C33353 * C900) *
                 C17179 +
             (C34335 + C34334) * C17173 + (C34333 + C34332) * C17178 +
             (C34331 + C34330) * C17172 + (C34329 + C34328) * C17177) *
                C50779 * C50757) *
               C50729) *
              C50664)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C38937 * C122 + C38933 * C129 + C38938 * C463 + C38934 * C477 +
              C38939 * C464 + C38935 * C478 + C38940 * C1849 + C38936 * C1857) *
                 C19841 +
             (C38937 * C130 + C38933 * C143 + C38938 * C476 + C38934 * C493 +
              C38939 * C479 + C38935 * C494 + C38940 * C1856 + C38936 * C1861) *
                 C50630) *
                C50779 * C50920 -
            ((C38940 * C5570 + C38936 * C5575 + C38939 * C1856 +
              C38935 * C1861 + C38938 * C479 + C38934 * C494 + C38937 * C476 +
              C38933 * C493) *
                 C50630 +
             (C38940 * C5566 + C38936 * C5569 + C38939 * C1849 +
              C38935 * C1857 + C38938 * C464 + C38934 * C478 + C38937 * C463 +
              C38933 * C477) *
                 C19841) *
                C50779 * C50757) *
               C50919 +
           (((C38937 * C889 + C38933 * C894 + C38938 * C1218 + C38934 * C1226 +
              C38939 * C4581 + C38935 * C4589 + C38940 * C6549 +
              C38936 * C6553) *
                 C19841 +
             (C38937 * C895 + C38933 * C904 + C38938 * C1225 + C38934 * C1230 +
              C38939 * C4588 + C38935 * C4593 + C38940 * C6552 +
              C38936 * C6555) *
                 C50630) *
                C50779 * C50757 -
            ((C38940 * C4588 + C38936 * C4593 + C38939 * C1225 +
              C38935 * C1230 + C38938 * C895 + C38934 * C904 + C38937 * C299 +
              C38933 * C316) *
                 C50630 +
             (C38940 * C4581 + C38936 * C4589 + C38939 * C1218 +
              C38935 * C1226 + C38938 * C889 + C38934 * C894 + C38937 * C286 +
              C38933 * C300) *
                 C19841) *
                C50779 * C50920) *
               C50729) *
              C281 +
          ((((C38937 * C462 + C38933 * C475 + C38938 * C465 + C38934 * C480 +
              C38939 * C1848 + C38935 * C1855 + C38940 * C5567 +
              C38936 * C5571) *
                 C19841 +
             (C38937 * C474 + C38933 * C492 + C38938 * C481 + C38934 * C495 +
              C38939 * C1854 + C38935 * C1860 + C38940 * C5572 +
              C38936 * C5576) *
                 C50630) *
                C50779 * C50757 -
            ((C38940 * C1854 + C38936 * C1860 + C38939 * C481 + C38935 * C495 +
              C38938 * C474 + C38934 * C492 + C38937 * C132 + C38933 * C144) *
                 C50630 +
             (C38940 * C1848 + C38936 * C1855 + C38939 * C465 + C38935 * C480 +
              C38938 * C462 + C38934 * C475 + C38937 * C123 + C38933 * C131) *
                 C19841) *
                C50779 * C50920) *
               C50919 +
           (((C38937 * C285 + C38933 * C298 + C38938 * C890 + C38934 * C896 +
              C38939 * C1217 + C38935 * C1224 + C38940 * C4580 +
              C38936 * C4587) *
                 C19841 +
             (C38937 * C297 + C38933 * C315 + C38938 * C897 + C38934 * C905 +
              C38939 * C1223 + C38935 * C1229 + C38940 * C4586 +
              C38936 * C4592) *
                 C50630) *
                C50779 * C50920 -
            ((C38940 * C6550 + C38936 * C6554 + C38939 * C4586 +
              C38935 * C4592 + C38938 * C1223 + C38934 * C1229 + C38937 * C897 +
              C38933 * C905) *
                 C50630 +
             (C38940 * C6548 + C38936 * C6551 + C38939 * C4580 +
              C38935 * C4587 + C38938 * C1217 + C38934 * C1224 + C38937 * C890 +
              C38933 * C896) *
                 C19841) *
                C50779 * C50757) *
               C50729) *
              C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[182] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                   C17177 +
               (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                   C17172 +
               (C33390 + C33391) * C17178 + (C33392 + C33393) * C17173 +
               C33406 * C17179 + C33407 * C17174) *
                  C50779 * C50693 * C50677 * C113 -
              (C33408 * C17174 + C33409 * C17179 + (C33397 + C33396) * C17173 +
               (C33395 + C33394) * C17178 + (C33393 + C33392) * C17172 +
               (C33391 + C33390) * C17177) *
                  C50779 * C50693 * C50677 * C114 +
              (C33406 * C17177 + C33407 * C17172 + (C33401 + C33400) * C17178 +
               (C33399 + C33398) * C17173 + (C33402 + C33403) * C17179 +
               (C33404 + C33405) * C17174) *
                  C50779 * C50693 * C50677 * C115 -
              ((C33356 * C750 + C50854 * C752 + C33355 * C140 + C33353 * C148) *
                   C17174 +
               (C33356 * C749 + C50854 * C751 + C33355 * C127 + C33353 * C139) *
                   C17179 +
               (C33405 + C33404) * C17173 + (C33403 + C33402) * C17178 +
               C33408 * C17172 + C33409 * C17177) *
                  C50779 * C50693 * C50677 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C33355 * C122 + C33353 * C129 + C33356 * C463 +
                 C50854 * C477) *
                    C17177 +
                (C33355 * C130 + C33353 * C143 + C33356 * C476 +
                 C50854 * C493) *
                    C17172 +
                (C33390 + C33391) * C17178 + (C33392 + C33393) * C17173 +
                C33406 * C17179 + C33407 * C17174) *
                   C50779 * C50693 * C278 -
               ((C33588 + C33589) * C17174 + (C33590 + C33591) * C17179 +
                (C33592 + C33593) * C17173 + (C33594 + C33595) * C17178 +
                (C33356 * C895 + C50854 * C904 + C33355 * C299 +
                 C33353 * C316) *
                    C17172 +
                (C33356 * C889 + C50854 * C894 + C33355 * C286 +
                 C33353 * C300) *
                    C17177) *
                   C50779 * C50693 * C279 +
               ((C33355 * C287 + C33353 * C301 + C33356 * C1565 +
                 C50854 * C1573) *
                    C17177 +
                (C33355 * C302 + C33353 * C317 + C33356 * C1572 +
                 C50854 * C1577) *
                    C17172 +
                (C33596 + C33597) * C17178 + (C33598 + C33599) * C17173 +
                (C33600 + C33601) * C17179 + (C33602 + C33603) * C17174) *
                   C50779 * C50693 * C280) *
                  C281 +
              (((C33595 + C33594) * C17177 + (C33593 + C33592) * C17172 +
                (C33591 + C33590) * C17178 + (C33589 + C33588) * C17173 +
                (C33355 * C283 + C33353 * C294 + C33356 * C892 +
                 C50854 * C900) *
                    C17179 +
                (C33355 * C293 + C33353 * C313 + C33356 * C901 +
                 C50854 * C907) *
                    C17174) *
                   C50779 * C50693 * C279 -
               (C33408 * C17174 + C33409 * C17179 + (C33397 + C33396) * C17173 +
                (C33395 + C33394) * C17178 + (C33393 + C33392) * C17172 +
                (C33391 + C33390) * C17177) *
                   C50779 * C50693 * C278 -
               ((C33356 * C1566 + C50854 * C1574 + C33355 * C308 +
                 C33353 * C320) *
                    C17174 +
                (C33356 * C1562 + C50854 * C1567 + C33355 * C290 +
                 C33353 * C307) *
                    C17179 +
                (C33603 + C33602) * C17173 + (C33601 + C33600) * C17178 +
                (C33599 + C33598) * C17172 + (C33597 + C33596) * C17177) *
                   C50779 * C50693 * C280) *
                  C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                C17177 +
            (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                C17172 +
            (C33390 + C33391) * C17178 + (C33392 + C33393) * C17173 +
            C33406 * C17179 + C33407 * C17174) *
               C50779 * C457 -
           ((C33782 + C33783) * C17174 + (C33784 + C33785) * C17179 +
            (C33786 + C33787) * C17173 + (C33788 + C33789) * C17178 +
            (C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                C17172 +
            (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                C17177) *
               C50779 * C458 +
           ((C33355 * C464 + C33353 * C478 + C33356 * C1849 + C50854 * C1857) *
                C17177 +
            (C33355 * C479 + C33353 * C494 + C33356 * C1856 + C50854 * C1861) *
                C17172 +
            (C33790 + C33791) * C17178 + (C33792 + C33793) * C17173 +
            (C33794 + C33795) * C17179 + (C33796 + C33797) * C17174) *
               C50779 * C459) *
              C50677 * C281 +
          (((C33789 + C33788) * C17177 + (C33787 + C33786) * C17172 +
            (C33785 + C33784) * C17178 + (C33783 + C33782) * C17173 +
            (C33355 * C460 + C33353 * C471 + C33356 * C467 + C50854 * C484) *
                C17179 +
            (C33355 * C470 + C33353 * C490 + C33356 * C485 + C50854 * C497) *
                C17174) *
               C50779 * C458 -
           (C33408 * C17174 + C33409 * C17179 + (C33397 + C33396) * C17173 +
            (C33395 + C33394) * C17178 + (C33393 + C33392) * C17172 +
            (C33391 + C33390) * C17177) *
               C50779 * C457 -
           ((C33356 * C1850 + C50854 * C1858 + C33355 * C485 + C33353 * C497) *
                C17174 +
            (C33356 * C1846 + C50854 * C1851 + C33355 * C467 + C33353 * C484) *
                C17179 +
            (C33797 + C33796) * C17173 + (C33795 + C33794) * C17178 +
            (C33793 + C33792) * C17172 + (C33791 + C33790) * C17177) *
               C50779 * C459) *
              C50677 * C50664)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                C19841 +
            (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                C50630) *
               C2291 +
           ((C33355 * C286 + C33353 * C300 + C33356 * C889 + C50854 * C894) *
                C19841 +
            (C33355 * C299 + C33353 * C316 + C33356 * C895 + C50854 * C904) *
                C50630) *
               C2292 +
           ((C33355 * C287 + C33353 * C301 + C33356 * C1565 + C50854 * C1573) *
                C19841 +
            (C33355 * C302 + C33353 * C317 + C33356 * C1572 + C50854 * C1577) *
                C50630) *
               C2293) *
              C50693 * C50677 * C113 -
          (((C33599 + C33598) * C50630 + (C33597 + C33596) * C19841) * C2293 +
           ((C33592 + C33593) * C50630 + (C33594 + C33595) * C19841) * C2292 +
           ((C33393 + C33392) * C50630 + (C33391 + C33390) * C19841) * C2291) *
              C50693 * C50677 * C114 +
          ((C33406 * C19841 + C33407 * C50630) * C2291 +
           ((C33591 + C33590) * C19841 + (C33589 + C33588) * C50630) * C2292 +
           ((C33600 + C33601) * C19841 + (C33602 + C33603) * C50630) * C2293) *
              C50693 * C50677 * C115 -
          (((C33356 * C1566 + C50854 * C1574 + C33355 * C308 + C33353 * C320) *
                C50630 +
            (C33356 * C1562 + C50854 * C1567 + C33355 * C290 + C33353 * C307) *
                C19841) *
               C2293 +
           ((C33957 + C33956) * C50630 + (C33955 + C33954) * C19841) * C2292 +
           (C33408 * C50630 + C33409 * C19841) * C2291) *
              C50693 * C50677 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C19841 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C50630) *
                C2291 +
            ((C36366 + C36367) * C19841 + (C36368 + C36369) * C50630) * C2292 +
            C36389 * C2293) *
               C50693 * C278 -
           (((C36374 + C36375) * C50630 + (C36376 + C36377) * C19841) * C2293 +
            ((C36373 + C36372) * C50630 + (C36371 + C36370) * C19841) * C2292 +
            ((C36369 + C36368) * C50630 + (C36367 + C36366) * C19841) * C2291) *
               C50693 * C279 +
           (C36389 * C2291 +
            ((C36377 + C36376) * C19841 + (C36375 + C36374) * C50630) * C2292 +
            ((C33355 * C2442 + C33353 * C2445 + C33356 * C4168 +
              C50854 * C4172) *
                 C19841 +
             (C33355 * C2446 + C33353 * C2451 + C33356 * C4171 +
              C50854 * C4174) *
                 C50630) *
                C2293) *
               C50693 * C280) *
              C281 +
          ((((C33595 + C33594) * C19841 + (C33593 + C33592) * C50630) * C2291 +
            ((C33596 + C33597) * C19841 + (C33598 + C33599) * C50630) * C2292 +
            ((C36378 + C36379) * C19841 + (C36380 + C36381) * C50630) * C2293) *
               C50693 * C279 -
           (C36386 * C2293 +
            ((C33592 + C33593) * C50630 + (C33594 + C33595) * C19841) * C2292 +
            ((C33393 + C33392) * C50630 + (C33391 + C33390) * C19841) * C2291) *
               C50693 * C278 -
           (((C33356 * C4169 + C50854 * C4173 + C33355 * C2448 +
              C33353 * C2452) *
                 C50630 +
             (C33356 * C4167 + C50854 * C4170 + C33355 * C2443 +
              C33353 * C2447) *
                 C19841) *
                C2293 +
            ((C36381 + C36380) * C50630 + (C36379 + C36378) * C19841) * C2292 +
            C36386 * C2291) *
               C50693 * C280) *
              C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C19841 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C50630) *
                C2291 +
            ((C36366 + C36367) * C19841 + (C36368 + C36369) * C50630) * C2292 +
            C36389 * C2293) *
               C457 -
           (((C33356 * C2670 + C50854 * C2675 + C33355 * C1572 +
              C33353 * C1577) *
                 C50630 +
             (C33356 * C2666 + C50854 * C2669 + C33355 * C1565 +
              C33353 * C1573) *
                 C19841) *
                C2293 +
            ((C33356 * C1225 + C50854 * C1230 + C33355 * C895 + C33353 * C904) *
                 C50630 +
             (C33356 * C1218 + C50854 * C1226 + C33355 * C889 + C33353 * C894) *
                 C19841) *
                C2292 +
            ((C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                 C50630 +
             (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                 C19841) *
                C2291) *
               C458 +
           (((C33355 * C464 + C33353 * C478 + C33356 * C1849 + C50854 * C1857) *
                 C19841 +
             (C33355 * C479 + C33353 * C494 + C33356 * C1856 + C50854 * C1861) *
                 C50630) *
                C2291 +
            ((C33355 * C1218 + C33353 * C1226 + C33356 * C4581 +
              C50854 * C4589) *
                 C19841 +
             (C33355 * C1225 + C33353 * C1230 + C33356 * C4588 +
              C50854 * C4593) *
                 C50630) *
                C2292 +
            ((C33355 * C2666 + C33353 * C2669 + C33356 * C4579 +
              C50854 * C4585) *
                 C19841 +
             (C33355 * C2670 + C33353 * C2675 + C33356 * C4584 +
              C50854 * C4591) *
                 C50630) *
                C2293) *
               C459) *
              C50677 * C281 +
          ((((C33789 + C33788) * C19841 + (C33787 + C33786) * C50630) * C2291 +
            ((C34328 + C34329) * C19841 + (C34330 + C34331) * C50630) * C2292 +
            ((C33355 * C1564 + C33353 * C1571 + C33356 * C2667 +
              C50854 * C2671) *
                 C19841 +
             (C33355 * C1570 + C33353 * C1576 + C33356 * C2672 +
              C50854 * C2676) *
                 C50630) *
                C2293) *
               C458 -
           (C36386 * C2293 +
            ((C33592 + C33593) * C50630 + (C33594 + C33595) * C19841) * C2292 +
            ((C33393 + C33392) * C50630 + (C33391 + C33390) * C19841) * C2291) *
               C457 -
           (((C33356 * C4582 + C50854 * C4590 + C33355 * C2672 +
              C33353 * C2676) *
                 C50630 +
             (C33356 * C4578 + C50854 * C4583 + C33355 * C2667 +
              C33353 * C2671) *
                 C19841) *
                C2293 +
            ((C33356 * C4586 + C50854 * C4592 + C33355 * C1223 +
              C33353 * C1229) *
                 C50630 +
             (C33356 * C4580 + C50854 * C4587 + C33355 * C1217 +
              C33353 * C1224) *
                 C19841) *
                C2292 +
            ((C33793 + C33792) * C50630 + (C33791 + C33790) * C19841) * C2291) *
               C459) *
              C50677 * C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C38937 * C122 + C38933 * C129 + C38938 * C463 + C38934 * C477 +
            C38939 * C464 + C38935 * C478 + C38940 * C1849 + C38936 * C1857) *
               C19841 +
           (C38937 * C130 + C38933 * C143 + C38938 * C476 + C38934 * C493 +
            C38939 * C479 + C38935 * C494 + C38940 * C1856 + C38936 * C1861) *
               C50630) *
              C50779 * C50693 * C50677 * C113 -
          ((C38940 * C1854 + C38936 * C1860 + C38939 * C481 + C38935 * C495 +
            C38938 * C474 + C38934 * C492 + C38937 * C132 + C38933 * C144) *
               C50630 +
           (C38940 * C1848 + C38936 * C1855 + C38939 * C465 + C38935 * C480 +
            C38938 * C462 + C38934 * C475 + C38937 * C123 + C38933 * C131) *
               C19841) *
              C50779 * C50693 * C50677 * C114 +
          ((C38937 * C124 + C38933 * C133 + C38938 * C461 + C38934 * C473 +
            C38939 * C466 + C38935 * C482 + C38940 * C1847 + C38936 * C1853) *
               C19841 +
           (C38937 * C134 + C38933 * C145 + C38938 * C472 + C38934 * C491 +
            C38939 * C483 + C38935 * C496 + C38940 * C1852 + C38936 * C1859) *
               C50630) *
              C50779 * C50693 * C50677 * C115 -
          ((C38940 * C1850 + C38936 * C1858 + C38939 * C485 + C38935 * C497 +
            C38938 * C470 + C38934 * C490 + C38937 * C136 + C38933 * C146) *
               C50630 +
           (C38940 * C1846 + C38936 * C1851 + C38939 * C467 + C38935 * C484 +
            C38938 * C460 + C38934 * C471 + C38937 * C125 + C38933 * C135) *
               C19841) *
              C50779 * C50693 * C50677 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C38937 * C122 + C38933 * C129 + C38938 * C463 + C38934 * C477 +
             C38939 * C464 + C38935 * C478 + C38940 * C1849 + C38936 * C1857) *
                C19841 +
            (C38937 * C130 + C38933 * C143 + C38938 * C476 + C38934 * C493 +
             C38939 * C479 + C38935 * C494 + C38940 * C1856 + C38936 * C1861) *
                C50630) *
               C50779 * C50693 * C278 -
           ((C38940 * C4588 + C38936 * C4593 + C38939 * C1225 + C38935 * C1230 +
             C38938 * C895 + C38934 * C904 + C38937 * C299 + C38933 * C316) *
                C50630 +
            (C38940 * C4581 + C38936 * C4589 + C38939 * C1218 + C38935 * C1226 +
             C38938 * C889 + C38934 * C894 + C38937 * C286 + C38933 * C300) *
                C19841) *
               C50779 * C50693 * C279 +
           ((C38937 * C287 + C38933 * C301 + C38938 * C1565 + C38934 * C1573 +
             C38939 * C2666 + C38935 * C2669 + C38940 * C4579 +
             C38936 * C4585) *
                C19841 +
            (C38937 * C302 + C38933 * C317 + C38938 * C1572 + C38934 * C1577 +
             C38939 * C2670 + C38935 * C2675 + C38940 * C4584 +
             C38936 * C4591) *
                C50630) *
               C50779 * C50693 * C280) *
              C281 +
          (((C38937 * C285 + C38933 * C298 + C38938 * C890 + C38934 * C896 +
             C38939 * C1217 + C38935 * C1224 + C38940 * C4580 +
             C38936 * C4587) *
                C19841 +
            (C38937 * C297 + C38933 * C315 + C38938 * C897 + C38934 * C905 +
             C38939 * C1223 + C38935 * C1229 + C38940 * C4586 +
             C38936 * C4592) *
                C50630) *
               C50779 * C50693 * C279 -
           ((C38940 * C1854 + C38936 * C1860 + C38939 * C481 + C38935 * C495 +
             C38938 * C474 + C38934 * C492 + C38937 * C132 + C38933 * C144) *
                C50630 +
            (C38940 * C1848 + C38936 * C1855 + C38939 * C465 + C38935 * C480 +
             C38938 * C462 + C38934 * C475 + C38937 * C123 + C38933 * C131) *
                C19841) *
               C50779 * C50693 * C278 -
           ((C38940 * C4582 + C38936 * C4590 + C38939 * C2672 + C38935 * C2676 +
             C38938 * C1570 + C38934 * C1576 + C38937 * C304 + C38933 * C318) *
                C50630 +
            (C38940 * C4578 + C38936 * C4583 + C38939 * C2667 + C38935 * C2671 +
             C38938 * C1564 + C38934 * C1571 + C38937 * C288 + C38933 * C303) *
                C19841) *
               C50779 * C50693 * C280) *
              C50664)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C38937 * C122 + C38933 * C129 + C38938 * C463 + C38934 * C477 +
             C38939 * C464 + C38935 * C478 + C38940 * C1849 + C38936 * C1857) *
                C19841 +
            (C38937 * C130 + C38933 * C143 + C38938 * C476 + C38934 * C493 +
             C38939 * C479 + C38935 * C494 + C38940 * C1856 + C38936 * C1861) *
                C50630) *
               C50779 * C457 -
           ((C38940 * C5570 + C38936 * C5575 + C38939 * C1856 + C38935 * C1861 +
             C38938 * C479 + C38934 * C494 + C38937 * C476 + C38933 * C493) *
                C50630 +
            (C38940 * C5566 + C38936 * C5569 + C38939 * C1849 + C38935 * C1857 +
             C38938 * C464 + C38934 * C478 + C38937 * C463 + C38933 * C477) *
                C19841) *
               C50779 * C458 +
           ((C38937 * C464 + C38933 * C478 + C38938 * C1849 + C38934 * C1857 +
             C38939 * C5566 + C38935 * C5569 + C38940 * C7433 +
             C38936 * C7437) *
                C19841 +
            (C38937 * C479 + C38933 * C494 + C38938 * C1856 + C38934 * C1861 +
             C38939 * C5570 + C38935 * C5575 + C38940 * C7436 +
             C38936 * C7439) *
                C50630) *
               C50779 * C459) *
              C50677 * C281 +
          (((C38937 * C462 + C38933 * C475 + C38938 * C465 + C38934 * C480 +
             C38939 * C1848 + C38935 * C1855 + C38940 * C5567 +
             C38936 * C5571) *
                C19841 +
            (C38937 * C474 + C38933 * C492 + C38938 * C481 + C38934 * C495 +
             C38939 * C1854 + C38935 * C1860 + C38940 * C5572 +
             C38936 * C5576) *
                C50630) *
               C50779 * C458 -
           ((C38940 * C1854 + C38936 * C1860 + C38939 * C481 + C38935 * C495 +
             C38938 * C474 + C38934 * C492 + C38937 * C132 + C38933 * C144) *
                C50630 +
            (C38940 * C1848 + C38936 * C1855 + C38939 * C465 + C38935 * C480 +
             C38938 * C462 + C38934 * C475 + C38937 * C123 + C38933 * C131) *
                C19841) *
               C50779 * C457 -
           ((C38940 * C7434 + C38936 * C7438 + C38939 * C5572 + C38935 * C5576 +
             C38938 * C1854 + C38934 * C1860 + C38937 * C481 + C38933 * C495) *
                C50630 +
            (C38940 * C7432 + C38936 * C7435 + C38939 * C5567 + C38935 * C5571 +
             C38938 * C1848 + C38934 * C1855 + C38937 * C465 + C38933 * C480) *
                C19841) *
               C50779 * C459) *
              C50677 * C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[183] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C19841 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C50630) *
                C2291 +
            ((C36366 + C36367) * C19841 + (C36368 + C36369) * C50630) * C2292 +
            C36389 * C2293) *
               C50920 -
           (((C33356 * C2670 + C50854 * C2675 + C33355 * C1572 +
              C33353 * C1577) *
                 C50630 +
             (C33356 * C2666 + C50854 * C2669 + C33355 * C1565 +
              C33353 * C1573) *
                 C19841) *
                C2293 +
            ((C33356 * C1225 + C50854 * C1230 + C33355 * C895 + C33353 * C904) *
                 C50630 +
             (C33356 * C1218 + C50854 * C1226 + C33355 * C889 + C33353 * C894) *
                 C19841) *
                C2292 +
            ((C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                 C50630 +
             (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                 C19841) *
                C2291) *
               C50757) *
              C50677 * C50962 +
          ((((C33789 + C33788) * C19841 + (C33787 + C33786) * C50630) * C2291 +
            ((C34328 + C34329) * C19841 + (C34330 + C34331) * C50630) * C2292 +
            ((C33355 * C1564 + C33353 * C1571 + C33356 * C2667 +
              C50854 * C2671) *
                 C19841 +
             (C33355 * C1570 + C33353 * C1576 + C33356 * C2672 +
              C50854 * C2676) *
                 C50630) *
                C2293) *
               C50757 -
           (C36386 * C2293 +
            ((C33592 + C33593) * C50630 + (C33594 + C33595) * C19841) * C2292 +
            ((C33393 + C33392) * C50630 + (C33391 + C33390) * C19841) * C2291) *
               C50920) *
              C50677 * C50963 +
          (((C33406 * C19841 + C33407 * C50630) * C2291 +
            ((C33591 + C33590) * C19841 + (C33589 + C33588) * C50630) * C2292 +
            ((C33600 + C33601) * C19841 + (C33602 + C33603) * C50630) * C2293) *
               C50920 -
           (((C33356 * C2673 + C50854 * C2677 + C33355 * C1568 +
              C33353 * C1575) *
                 C50630 +
             (C33356 * C2668 + C50854 * C2674 + C33355 * C1563 +
              C33353 * C1569) *
                 C19841) *
                C2293 +
            ((C34335 + C34334) * C50630 + (C34333 + C34332) * C19841) * C2292 +
            (C34104 * C50630 + C34105 * C19841) * C2291) *
               C50757) *
              C50677 * C638)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                C17177 +
            (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                C17172 +
            (C33390 + C33391) * C17178 + (C33392 + C33393) * C17173 +
            C33406 * C17179 + C33407 * C17174) *
               C50779 * C50920 -
           (C34104 * C17174 + C34105 * C17179 + (C33786 + C33787) * C17173 +
            (C33788 + C33789) * C17178 +
            (C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                C17172 +
            (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                C17177) *
               C50779 * C50757) *
              C50677 * C50962 +
          (((C33789 + C33788) * C17177 + (C33787 + C33786) * C17172 +
            (C33785 + C33784) * C17178 + (C33783 + C33782) * C17173 +
            (C34114 + C34115) * C17179 + (C34116 + C34117) * C17174) *
               C50779 * C50757 -
           (C33408 * C17174 + C33409 * C17179 + (C33397 + C33396) * C17173 +
            (C33395 + C33394) * C17178 + (C33393 + C33392) * C17172 +
            (C33391 + C33390) * C17177) *
               C50779 * C50920) *
              C50677 * C50963 +
          ((C33406 * C17177 + C33407 * C17172 + (C33401 + C33400) * C17178 +
            (C33399 + C33398) * C17173 + (C33402 + C33403) * C17179 +
            (C33404 + C33405) * C17174) *
               C50779 * C50920 -
           ((C33356 * C488 + C50854 * C499 + C33355 * C487 + C33353 * C498) *
                C17174 +
            (C33356 * C469 + C50854 * C489 + C33355 * C468 + C33353 * C486) *
                C17179 +
            (C34117 + C34116) * C17173 + (C34115 + C34114) * C17178 +
            C34104 * C17172 + C34105 * C17177) *
               C50779 * C50757) *
              C50677 * C638)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C38937 * C122 + C38933 * C129 + C38938 * C463 + C38934 * C477 +
             C38939 * C464 + C38935 * C478 + C38940 * C1849 + C38936 * C1857) *
                C19841 +
            (C38937 * C130 + C38933 * C143 + C38938 * C476 + C38934 * C493 +
             C38939 * C479 + C38935 * C494 + C38940 * C1856 + C38936 * C1861) *
                C50630) *
               C50779 * C50920 -
           ((C38940 * C5570 + C38936 * C5575 + C38939 * C1856 + C38935 * C1861 +
             C38938 * C479 + C38934 * C494 + C38937 * C476 + C38933 * C493) *
                C50630 +
            (C38940 * C5566 + C38936 * C5569 + C38939 * C1849 + C38935 * C1857 +
             C38938 * C464 + C38934 * C478 + C38937 * C463 + C38933 * C477) *
                C19841) *
               C50779 * C50757) *
              C50677 * C50962 +
          (((C38937 * C462 + C38933 * C475 + C38938 * C465 + C38934 * C480 +
             C38939 * C1848 + C38935 * C1855 + C38940 * C5567 +
             C38936 * C5571) *
                C19841 +
            (C38937 * C474 + C38933 * C492 + C38938 * C481 + C38934 * C495 +
             C38939 * C1854 + C38935 * C1860 + C38940 * C5572 +
             C38936 * C5576) *
                C50630) *
               C50779 * C50757 -
           ((C38940 * C1854 + C38936 * C1860 + C38939 * C481 + C38935 * C495 +
             C38938 * C474 + C38934 * C492 + C38937 * C132 + C38933 * C144) *
                C50630 +
            (C38940 * C1848 + C38936 * C1855 + C38939 * C465 + C38935 * C480 +
             C38938 * C462 + C38934 * C475 + C38937 * C123 + C38933 * C131) *
                C19841) *
               C50779 * C50920) *
              C50677 * C50963 +
          (((C38937 * C124 + C38933 * C133 + C38938 * C461 + C38934 * C473 +
             C38939 * C466 + C38935 * C482 + C38940 * C1847 + C38936 * C1853) *
                C19841 +
            (C38937 * C134 + C38933 * C145 + C38938 * C472 + C38934 * C491 +
             C38939 * C483 + C38935 * C496 + C38940 * C1852 + C38936 * C1859) *
                C50630) *
               C50779 * C50920 -
           ((C38940 * C5573 + C38936 * C5577 + C38939 * C1852 + C38935 * C1859 +
             C38938 * C483 + C38934 * C496 + C38937 * C472 + C38933 * C491) *
                C50630 +
            (C38940 * C5568 + C38936 * C5574 + C38939 * C1847 + C38935 * C1853 +
             C38938 * C466 + C38934 * C482 + C38937 * C461 + C38933 * C473) *
                C19841) *
               C50779 * C50757) *
              C50677 * C638)) /
            (p * q * std::sqrt(p + q));
    d2ee[184] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                C17177 +
            (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                C17172 +
            (C33390 + C33391) * C17178 + (C33392 + C33393) * C17173 +
            C33406 * C17179 + C33407 * C17174) *
               C50779 * C50693 * C278 -
           ((C33588 + C33589) * C17174 + (C33590 + C33591) * C17179 +
            (C33592 + C33593) * C17173 + (C33594 + C33595) * C17178 +
            (C33356 * C895 + C50854 * C904 + C33355 * C299 + C33353 * C316) *
                C17172 +
            (C33356 * C889 + C50854 * C894 + C33355 * C286 + C33353 * C300) *
                C17177) *
               C50779 * C50693 * C279 +
           ((C33355 * C287 + C33353 * C301 + C33356 * C1565 + C50854 * C1573) *
                C17177 +
            (C33355 * C302 + C33353 * C317 + C33356 * C1572 + C50854 * C1577) *
                C17172 +
            (C33596 + C33597) * C17178 + (C33598 + C33599) * C17173 +
            (C33600 + C33601) * C17179 + (C33602 + C33603) * C17174) *
               C50779 * C50693 * C280) *
              C281 +
          (((C33595 + C33594) * C17177 + (C33593 + C33592) * C17172 +
            (C33591 + C33590) * C17178 + (C33589 + C33588) * C17173 +
            (C33355 * C283 + C33353 * C294 + C33356 * C892 + C50854 * C900) *
                C17179 +
            (C33355 * C293 + C33353 * C313 + C33356 * C901 + C50854 * C907) *
                C17174) *
               C50779 * C50693 * C279 -
           (C33408 * C17174 + C33409 * C17179 + (C33397 + C33396) * C17173 +
            (C33395 + C33394) * C17178 + (C33393 + C33392) * C17172 +
            (C33391 + C33390) * C17177) *
               C50779 * C50693 * C278 -
           ((C33356 * C1566 + C50854 * C1574 + C33355 * C308 + C33353 * C320) *
                C17174 +
            (C33356 * C1562 + C50854 * C1567 + C33355 * C290 + C33353 * C307) *
                C17179 +
            (C33603 + C33602) * C17173 + (C33601 + C33600) * C17178 +
            (C33599 + C33598) * C17172 + (C33597 + C33596) * C17177) *
               C50779 * C50693 * C280) *
              C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
               C17177 +
           (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
               C17172 +
           (C33390 + C33391) * C17178 + (C33392 + C33393) * C17173 +
           C33406 * C17179 + C33407 * C17174) *
              C50779 * C50693 * C50677 * C113 -
          (C33408 * C17174 + C33409 * C17179 + (C33397 + C33396) * C17173 +
           (C33395 + C33394) * C17178 + (C33393 + C33392) * C17172 +
           (C33391 + C33390) * C17177) *
              C50779 * C50693 * C50677 * C114 +
          (C33406 * C17177 + C33407 * C17172 + (C33401 + C33400) * C17178 +
           (C33399 + C33398) * C17173 + (C33402 + C33403) * C17179 +
           (C33404 + C33405) * C17174) *
              C50779 * C50693 * C50677 * C115 -
          ((C33356 * C750 + C50854 * C752 + C33355 * C140 + C33353 * C148) *
               C17174 +
           (C33356 * C749 + C50854 * C751 + C33355 * C127 + C33353 * C139) *
               C17179 +
           (C33405 + C33404) * C17173 + (C33403 + C33402) * C17178 +
           C33408 * C17172 + C33409 * C17177) *
              C50779 * C50693 * C50677 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                C19841 +
            (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                C50630) *
               C2291 +
           ((C33355 * C286 + C33353 * C300 + C33356 * C889 + C50854 * C894) *
                C19841 +
            (C33355 * C299 + C33353 * C316 + C33356 * C895 + C50854 * C904) *
                C50630) *
               C2292 +
           ((C33355 * C287 + C33353 * C301 + C33356 * C1565 + C50854 * C1573) *
                C19841 +
            (C33355 * C302 + C33353 * C317 + C33356 * C1572 + C50854 * C1577) *
                C50630) *
               C2293) *
              C50693 * C50677 * C113 -
          (((C33599 + C33598) * C50630 + (C33597 + C33596) * C19841) * C2293 +
           ((C33592 + C33593) * C50630 + (C33594 + C33595) * C19841) * C2292 +
           ((C33393 + C33392) * C50630 + (C33391 + C33390) * C19841) * C2291) *
              C50693 * C50677 * C114 +
          ((C33406 * C19841 + C33407 * C50630) * C2291 +
           ((C33591 + C33590) * C19841 + (C33589 + C33588) * C50630) * C2292 +
           ((C33600 + C33601) * C19841 + (C33602 + C33603) * C50630) * C2293) *
              C50693 * C50677 * C115 -
          (((C33356 * C1566 + C50854 * C1574 + C33355 * C308 + C33353 * C320) *
                C50630 +
            (C33356 * C1562 + C50854 * C1567 + C33355 * C290 + C33353 * C307) *
                C19841) *
               C2293 +
           ((C33957 + C33956) * C50630 + (C33955 + C33954) * C19841) * C2292 +
           (C33408 * C50630 + C33409 * C19841) * C2291) *
              C50693 * C50677 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C19841 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C50630) *
                C2291 +
            ((C36366 + C36367) * C19841 + (C36368 + C36369) * C50630) * C2292 +
            C36389 * C2293) *
               C50693 * C278 -
           (((C36374 + C36375) * C50630 + (C36376 + C36377) * C19841) * C2293 +
            ((C36373 + C36372) * C50630 + (C36371 + C36370) * C19841) * C2292 +
            ((C36369 + C36368) * C50630 + (C36367 + C36366) * C19841) * C2291) *
               C50693 * C279 +
           (C36389 * C2291 +
            ((C36377 + C36376) * C19841 + (C36375 + C36374) * C50630) * C2292 +
            ((C33355 * C2442 + C33353 * C2445 + C33356 * C4168 +
              C50854 * C4172) *
                 C19841 +
             (C33355 * C2446 + C33353 * C2451 + C33356 * C4171 +
              C50854 * C4174) *
                 C50630) *
                C2293) *
               C50693 * C280) *
              C281 +
          ((((C33595 + C33594) * C19841 + (C33593 + C33592) * C50630) * C2291 +
            ((C33596 + C33597) * C19841 + (C33598 + C33599) * C50630) * C2292 +
            ((C36378 + C36379) * C19841 + (C36380 + C36381) * C50630) * C2293) *
               C50693 * C279 -
           (C36386 * C2293 +
            ((C33592 + C33593) * C50630 + (C33594 + C33595) * C19841) * C2292 +
            ((C33393 + C33392) * C50630 + (C33391 + C33390) * C19841) * C2291) *
               C50693 * C278 -
           (((C33356 * C4169 + C50854 * C4173 + C33355 * C2448 +
              C33353 * C2452) *
                 C50630 +
             (C33356 * C4167 + C50854 * C4170 + C33355 * C2443 +
              C33353 * C2447) *
                 C19841) *
                C2293 +
            ((C36381 + C36380) * C50630 + (C36379 + C36378) * C19841) * C2292 +
            C36386 * C2291) *
               C50693 * C280) *
              C50664)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C38937 * C122 + C38933 * C129 + C38938 * C463 + C38934 * C477 +
            C38939 * C464 + C38935 * C478 + C38940 * C1849 + C38936 * C1857) *
               C19841 +
           (C38937 * C130 + C38933 * C143 + C38938 * C476 + C38934 * C493 +
            C38939 * C479 + C38935 * C494 + C38940 * C1856 + C38936 * C1861) *
               C50630) *
              C50779 * C50693 * C50677 * C113 -
          ((C38940 * C1854 + C38936 * C1860 + C38939 * C481 + C38935 * C495 +
            C38938 * C474 + C38934 * C492 + C38937 * C132 + C38933 * C144) *
               C50630 +
           (C38940 * C1848 + C38936 * C1855 + C38939 * C465 + C38935 * C480 +
            C38938 * C462 + C38934 * C475 + C38937 * C123 + C38933 * C131) *
               C19841) *
              C50779 * C50693 * C50677 * C114 +
          ((C38937 * C124 + C38933 * C133 + C38938 * C461 + C38934 * C473 +
            C38939 * C466 + C38935 * C482 + C38940 * C1847 + C38936 * C1853) *
               C19841 +
           (C38937 * C134 + C38933 * C145 + C38938 * C472 + C38934 * C491 +
            C38939 * C483 + C38935 * C496 + C38940 * C1852 + C38936 * C1859) *
               C50630) *
              C50779 * C50693 * C50677 * C115 -
          ((C38940 * C1850 + C38936 * C1858 + C38939 * C485 + C38935 * C497 +
            C38938 * C470 + C38934 * C490 + C38937 * C136 + C38933 * C146) *
               C50630 +
           (C38940 * C1846 + C38936 * C1851 + C38939 * C467 + C38935 * C484 +
            C38938 * C460 + C38934 * C471 + C38937 * C125 + C38933 * C135) *
               C19841) *
              C50779 * C50693 * C50677 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C38937 * C122 + C38933 * C129 + C38938 * C463 + C38934 * C477 +
             C38939 * C464 + C38935 * C478 + C38940 * C1849 + C38936 * C1857) *
                C19841 +
            (C38937 * C130 + C38933 * C143 + C38938 * C476 + C38934 * C493 +
             C38939 * C479 + C38935 * C494 + C38940 * C1856 + C38936 * C1861) *
                C50630) *
               C50779 * C50693 * C278 -
           ((C38940 * C4588 + C38936 * C4593 + C38939 * C1225 + C38935 * C1230 +
             C38938 * C895 + C38934 * C904 + C38937 * C299 + C38933 * C316) *
                C50630 +
            (C38940 * C4581 + C38936 * C4589 + C38939 * C1218 + C38935 * C1226 +
             C38938 * C889 + C38934 * C894 + C38937 * C286 + C38933 * C300) *
                C19841) *
               C50779 * C50693 * C279 +
           ((C38937 * C287 + C38933 * C301 + C38938 * C1565 + C38934 * C1573 +
             C38939 * C2666 + C38935 * C2669 + C38940 * C4579 +
             C38936 * C4585) *
                C19841 +
            (C38937 * C302 + C38933 * C317 + C38938 * C1572 + C38934 * C1577 +
             C38939 * C2670 + C38935 * C2675 + C38940 * C4584 +
             C38936 * C4591) *
                C50630) *
               C50779 * C50693 * C280) *
              C281 +
          (((C38937 * C285 + C38933 * C298 + C38938 * C890 + C38934 * C896 +
             C38939 * C1217 + C38935 * C1224 + C38940 * C4580 +
             C38936 * C4587) *
                C19841 +
            (C38937 * C297 + C38933 * C315 + C38938 * C897 + C38934 * C905 +
             C38939 * C1223 + C38935 * C1229 + C38940 * C4586 +
             C38936 * C4592) *
                C50630) *
               C50779 * C50693 * C279 -
           ((C38940 * C1854 + C38936 * C1860 + C38939 * C481 + C38935 * C495 +
             C38938 * C474 + C38934 * C492 + C38937 * C132 + C38933 * C144) *
                C50630 +
            (C38940 * C1848 + C38936 * C1855 + C38939 * C465 + C38935 * C480 +
             C38938 * C462 + C38934 * C475 + C38937 * C123 + C38933 * C131) *
                C19841) *
               C50779 * C50693 * C278 -
           ((C38940 * C4582 + C38936 * C4590 + C38939 * C2672 + C38935 * C2676 +
             C38938 * C1570 + C38934 * C1576 + C38937 * C304 + C38933 * C318) *
                C50630 +
            (C38940 * C4578 + C38936 * C4583 + C38939 * C2667 + C38935 * C2671 +
             C38938 * C1564 + C38934 * C1571 + C38937 * C288 + C38933 * C303) *
                C19841) *
               C50779 * C50693 * C280) *
              C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[185] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C19841 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C50630) *
                C2291 +
            ((C36366 + C36367) * C19841 + (C36368 + C36369) * C50630) * C2292 +
            C36389 * C2293) *
               C50693 * C50964 -
           (C37318 * C2293 +
            ((C36373 + C36372) * C50630 + (C36371 + C36370) * C19841) * C2292 +
            ((C36369 + C36368) * C50630 + (C36367 + C36366) * C19841) * C2291) *
               C50693 * C50965 +
           (C36389 * C2291 +
            ((C36377 + C36376) * C19841 + (C36375 + C36374) * C50630) * C2292 +
            ((C37314 + C37315) * C19841 + (C37316 + C37317) * C50630) * C2293) *
               C50693 * C1331) *
              C50911 +
          ((((C33595 + C33594) * C19841 + (C33593 + C33592) * C50630) * C2291 +
            ((C33596 + C33597) * C19841 + (C33598 + C33599) * C50630) * C2292 +
            ((C36378 + C36379) * C19841 + (C36380 + C36381) * C50630) * C2293) *
               C50693 * C50965 -
           (C36386 * C2293 +
            ((C33592 + C33593) * C50630 + (C33594 + C33595) * C19841) * C2292 +
            ((C33393 + C33392) * C50630 + (C33391 + C33390) * C19841) * C2291) *
               C50693 * C50964 -
           (((C33356 * C4169 + C50854 * C4173 + C33355 * C2448 +
              C33353 * C2452) *
                 C50630 +
             (C33356 * C4167 + C50854 * C4170 + C33355 * C2443 +
              C33353 * C2447) *
                 C19841) *
                C2293 +
            ((C36381 + C36380) * C50630 + (C36379 + C36378) * C19841) * C2292 +
            C36386 * C2291) *
               C50693 * C1331) *
              C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                C17177 +
            (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                C17172 +
            (C33390 + C33391) * C17178 + (C33392 + C33393) * C17173 +
            C33406 * C17179 + C33407 * C17174) *
               C50779 * C50693 * C50964 -
           (C33944 * C17174 + C33945 * C17179 + (C33592 + C33593) * C17173 +
            (C33594 + C33595) * C17178 +
            (C33356 * C895 + C50854 * C904 + C33355 * C299 + C33353 * C316) *
                C17172 +
            (C33356 * C889 + C50854 * C894 + C33355 * C286 + C33353 * C300) *
                C17177) *
               C50779 * C50693 * C50965 +
           ((C33355 * C287 + C33353 * C301 + C33356 * C1565 + C50854 * C1573) *
                C17177 +
            (C33355 * C302 + C33353 * C317 + C33356 * C1572 + C50854 * C1577) *
                C17172 +
            (C33596 + C33597) * C17178 + (C33598 + C33599) * C17173 +
            (C33600 + C33601) * C17179 + (C33602 + C33603) * C17174) *
               C50779 * C50693 * C1331) *
              C50911 +
          (((C33595 + C33594) * C17177 + (C33593 + C33592) * C17172 +
            (C33591 + C33590) * C17178 + (C33589 + C33588) * C17173 +
            (C33954 + C33955) * C17179 + (C33956 + C33957) * C17174) *
               C50779 * C50693 * C50965 -
           (C33408 * C17174 + C33409 * C17179 + (C33397 + C33396) * C17173 +
            (C33395 + C33394) * C17178 + (C33393 + C33392) * C17172 +
            (C33391 + C33390) * C17177) *
               C50779 * C50693 * C50964 -
           ((C33356 * C1566 + C50854 * C1574 + C33355 * C308 + C33353 * C320) *
                C17174 +
            (C33356 * C1562 + C50854 * C1567 + C33355 * C290 + C33353 * C307) *
                C17179 +
            (C33603 + C33602) * C17173 + (C33601 + C33600) * C17178 +
            (C33599 + C33598) * C17172 + (C33597 + C33596) * C17177) *
               C50779 * C50693 * C1331) *
              C50664)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C38937 * C122 + C38933 * C129 + C38938 * C463 + C38934 * C477 +
             C38939 * C464 + C38935 * C478 + C38940 * C1849 + C38936 * C1857) *
                C19841 +
            (C38937 * C130 + C38933 * C143 + C38938 * C476 + C38934 * C493 +
             C38939 * C479 + C38935 * C494 + C38940 * C1856 + C38936 * C1861) *
                C50630) *
               C50779 * C50693 * C50964 -
           ((C38940 * C4588 + C38936 * C4593 + C38939 * C1225 + C38935 * C1230 +
             C38938 * C895 + C38934 * C904 + C38937 * C299 + C38933 * C316) *
                C50630 +
            (C38940 * C4581 + C38936 * C4589 + C38939 * C1218 + C38935 * C1226 +
             C38938 * C889 + C38934 * C894 + C38937 * C286 + C38933 * C300) *
                C19841) *
               C50779 * C50693 * C50965 +
           ((C38937 * C287 + C38933 * C301 + C38938 * C1565 + C38934 * C1573 +
             C38939 * C2666 + C38935 * C2669 + C38940 * C4579 +
             C38936 * C4585) *
                C19841 +
            (C38937 * C302 + C38933 * C317 + C38938 * C1572 + C38934 * C1577 +
             C38939 * C2670 + C38935 * C2675 + C38940 * C4584 +
             C38936 * C4591) *
                C50630) *
               C50779 * C50693 * C1331) *
              C50911 +
          (((C38937 * C285 + C38933 * C298 + C38938 * C890 + C38934 * C896 +
             C38939 * C1217 + C38935 * C1224 + C38940 * C4580 +
             C38936 * C4587) *
                C19841 +
            (C38937 * C297 + C38933 * C315 + C38938 * C897 + C38934 * C905 +
             C38939 * C1223 + C38935 * C1229 + C38940 * C4586 +
             C38936 * C4592) *
                C50630) *
               C50779 * C50693 * C50965 -
           ((C38940 * C1854 + C38936 * C1860 + C38939 * C481 + C38935 * C495 +
             C38938 * C474 + C38934 * C492 + C38937 * C132 + C38933 * C144) *
                C50630 +
            (C38940 * C1848 + C38936 * C1855 + C38939 * C465 + C38935 * C480 +
             C38938 * C462 + C38934 * C475 + C38937 * C123 + C38933 * C131) *
                C19841) *
               C50779 * C50693 * C50964 -
           ((C38940 * C4582 + C38936 * C4590 + C38939 * C2672 + C38935 * C2676 +
             C38938 * C1570 + C38934 * C1576 + C38937 * C304 + C38933 * C318) *
                C50630 +
            (C38940 * C4578 + C38936 * C4583 + C38939 * C2667 + C38935 * C2671 +
             C38938 * C1564 + C38934 * C1571 + C38937 * C288 + C38933 * C303) *
                C19841) *
               C50779 * C50693 * C1331) *
              C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[186] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C19841 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C50630) *
                C2291 +
            ((C36366 + C36367) * C19841 + (C36368 + C36369) * C50630) * C2292 +
            C36389 * C2293) *
               C50920 -
           (C37991 * C2293 +
            ((C37050 + C37051) * C50630 + (C37052 + C37053) * C19841) * C2292 +
            ((C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                 C50630 +
             (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                 C19841) *
                C2291) *
               C50757) *
              C50964 +
          ((((C37053 + C37052) * C19841 + (C37051 + C37050) * C50630) * C2291 +
            ((C37049 + C37048) * C19841 + (C37047 + C37046) * C50630) * C2292 +
            ((C37987 + C37988) * C19841 + (C37989 + C37990) * C50630) * C2293) *
               C50757 -
           (C37318 * C2293 +
            ((C36373 + C36372) * C50630 + (C36371 + C36370) * C19841) * C2292 +
            ((C36369 + C36368) * C50630 + (C36367 + C36366) * C19841) * C2291) *
               C50920) *
              C50965 +
          ((C36389 * C2291 +
            ((C36377 + C36376) * C19841 + (C36375 + C36374) * C50630) * C2292 +
            ((C37314 + C37315) * C19841 + (C37316 + C37317) * C50630) * C2293) *
               C50920 -
           (((C33356 * C20679 + C50854 * C20681 + C33355 * C4171 +
              C33353 * C4174) *
                 C50630 +
             (C33356 * C20678 + C50854 * C20680 + C33355 * C4168 +
              C33353 * C4172) *
                 C19841) *
                C2293 +
            ((C37990 + C37989) * C50630 + (C37988 + C37987) * C19841) * C2292 +
            C37991 * C2291) *
               C50757) *
              C1331) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                C17177 +
            (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                C17172 +
            (C33390 + C33391) * C17178 + (C33392 + C33393) * C17173 +
            C33406 * C17179 + C33407 * C17174) *
               C50779 * C50920 -
           (C34104 * C17174 + C34105 * C17179 + (C33786 + C33787) * C17173 +
            (C33788 + C33789) * C17178 +
            (C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                C17172 +
            (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                C17177) *
               C50779 * C50757) *
              C50964 +
          (((C33355 * C889 + C33353 * C894 + C33356 * C1218 + C50854 * C1226) *
                C17177 +
            (C33355 * C895 + C33353 * C904 + C33356 * C1225 + C50854 * C1230) *
                C17172 +
            (C34328 + C34329) * C17178 + (C34330 + C34331) * C17173 +
            (C34332 + C34333) * C17179 + (C34334 + C34335) * C17174) *
               C50779 * C50757 -
           (C33944 * C17174 + C33945 * C17179 + (C33592 + C33593) * C17173 +
            (C33594 + C33595) * C17178 +
            (C33356 * C895 + C50854 * C904 + C33355 * C299 + C33353 * C316) *
                C17172 +
            (C33356 * C889 + C50854 * C894 + C33355 * C286 + C33353 * C300) *
                C17177) *
               C50779 * C50920) *
              C50965 +
          (((C33355 * C287 + C33353 * C301 + C33356 * C1565 + C50854 * C1573) *
                C17177 +
            (C33355 * C302 + C33353 * C317 + C33356 * C1572 + C50854 * C1577) *
                C17172 +
            (C33596 + C33597) * C17178 + (C33598 + C33599) * C17173 +
            (C33600 + C33601) * C17179 + (C33602 + C33603) * C17174) *
               C50779 * C50920 -
           ((C33356 * C2673 + C50854 * C2677 + C33355 * C1568 +
             C33353 * C1575) *
                C17174 +
            (C33356 * C2668 + C50854 * C2674 + C33355 * C1563 +
             C33353 * C1569) *
                C17179 +
            (C33356 * C2672 + C50854 * C2676 + C33355 * C1570 +
             C33353 * C1576) *
                C17173 +
            (C33356 * C2667 + C50854 * C2671 + C33355 * C1564 +
             C33353 * C1571) *
                C17178 +
            (C33356 * C2670 + C50854 * C2675 + C33355 * C1572 +
             C33353 * C1577) *
                C17172 +
            (C33356 * C2666 + C50854 * C2669 + C33355 * C1565 +
             C33353 * C1573) *
                C17177) *
               C50779 * C50757) *
              C1331) *
         C50658) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C38937 * C122 + C38933 * C129 + C38938 * C463 + C38934 * C477 +
             C38939 * C464 + C38935 * C478 + C38940 * C1849 + C38936 * C1857) *
                C19841 +
            (C38937 * C130 + C38933 * C143 + C38938 * C476 + C38934 * C493 +
             C38939 * C479 + C38935 * C494 + C38940 * C1856 + C38936 * C1861) *
                C50630) *
               C50779 * C50920 -
           ((C38940 * C5570 + C38936 * C5575 + C38939 * C1856 + C38935 * C1861 +
             C38938 * C479 + C38934 * C494 + C38937 * C476 + C38933 * C493) *
                C50630 +
            (C38940 * C5566 + C38936 * C5569 + C38939 * C1849 + C38935 * C1857 +
             C38938 * C464 + C38934 * C478 + C38937 * C463 + C38933 * C477) *
                C19841) *
               C50779 * C50757) *
              C50964 +
          (((C38937 * C889 + C38933 * C894 + C38938 * C1218 + C38934 * C1226 +
             C38939 * C4581 + C38935 * C4589 + C38940 * C6549 +
             C38936 * C6553) *
                C19841 +
            (C38937 * C895 + C38933 * C904 + C38938 * C1225 + C38934 * C1230 +
             C38939 * C4588 + C38935 * C4593 + C38940 * C6552 +
             C38936 * C6555) *
                C50630) *
               C50779 * C50757 -
           ((C38940 * C4588 + C38936 * C4593 + C38939 * C1225 + C38935 * C1230 +
             C38938 * C895 + C38934 * C904 + C38937 * C299 + C38933 * C316) *
                C50630 +
            (C38940 * C4581 + C38936 * C4589 + C38939 * C1218 + C38935 * C1226 +
             C38938 * C889 + C38934 * C894 + C38937 * C286 + C38933 * C300) *
                C19841) *
               C50779 * C50920) *
              C50965 +
          (((C38937 * C287 + C38933 * C301 + C38938 * C1565 + C38934 * C1573 +
             C38939 * C2666 + C38935 * C2669 + C38940 * C4579 +
             C38936 * C4585) *
                C19841 +
            (C38937 * C302 + C38933 * C317 + C38938 * C1572 + C38934 * C1577 +
             C38939 * C2670 + C38935 * C2675 + C38940 * C4584 +
             C38936 * C4591) *
                C50630) *
               C50779 * C50920 -
           ((C38940 * C22965 + C38936 * C22967 + C38939 * C4584 +
             C38935 * C4591 + C38938 * C2670 + C38934 * C2675 + C38937 * C1572 +
             C38933 * C1577) *
                C50630 +
            (C38940 * C22964 + C38936 * C22966 + C38939 * C4579 +
             C38935 * C4585 + C38938 * C2666 + C38934 * C2669 + C38937 * C1565 +
             C38933 * C1573) *
                C19841) *
               C50779 * C50757) *
              C1331) *
         C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C33355 * C122 + C33353 * C129 + C33356 * C463 +
                 C50854 * C477) *
                    C17177 +
                (C33355 * C130 + C33353 * C143 + C33356 * C476 +
                 C50854 * C493) *
                    C17172 +
                (C33390 + C33391) * C17178 + (C33392 + C33393) * C17173 +
                C33406 * C17179 + C33407 * C17174) *
                   C50779 * C50693 * C1025 -
               (C33944 * C17174 + C33945 * C17179 + (C33592 + C33593) * C17173 +
                (C33594 + C33595) * C17178 +
                (C33356 * C895 + C50854 * C904 + C33355 * C299 +
                 C33353 * C316) *
                    C17172 +
                (C33356 * C889 + C50854 * C894 + C33355 * C286 +
                 C33353 * C300) *
                    C17177) *
                   C50779 * C50693 * C50729) *
                  C1027 +
              (((C33595 + C33594) * C17177 + (C33593 + C33592) * C17172 +
                (C33591 + C33590) * C17178 + (C33589 + C33588) * C17173 +
                (C33954 + C33955) * C17179 + (C33956 + C33957) * C17174) *
                   C50779 * C50693 * C50729 -
               (C33408 * C17174 + C33409 * C17179 + (C33397 + C33396) * C17173 +
                (C33395 + C33394) * C17178 + (C33393 + C33392) * C17172 +
                (C33391 + C33390) * C17177) *
                   C50779 * C50693 * C1025) *
                  C1028 +
              ((C33406 * C17177 + C33407 * C17172 + (C33401 + C33400) * C17178 +
                (C33399 + C33398) * C17173 + (C33402 + C33403) * C17179 +
                (C33404 + C33405) * C17174) *
                   C50779 * C50693 * C1025 -
               ((C33356 * C902 + C50854 * C908 + C33355 * C310 +
                 C33353 * C321) *
                    C17174 +
                (C33356 * C893 + C50854 * C903 + C33355 * C291 +
                 C33353 * C309) *
                    C17179 +
                (C33957 + C33956) * C17173 + (C33955 + C33954) * C17178 +
                C33944 * C17172 + C33945 * C17177) *
                   C50779 * C50693 * C50729) *
                  C1029) +
         0.5 * std::pow(Pi, 2.5) *
             (((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                   C17177 +
               (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                   C17172 +
               (C33390 + C33391) * C17178 + (C33392 + C33393) * C17173 +
               C33406 * C17179 + C33407 * C17174) *
                  C50779 * C50693 * C1096 -
              (C33944 * C17174 + C33945 * C17179 + (C33592 + C33593) * C17173 +
               (C33594 + C33595) * C17178 +
               (C33356 * C895 + C50854 * C904 + C33355 * C299 + C33353 * C316) *
                   C17172 +
               (C33356 * C889 + C50854 * C894 + C33355 * C286 + C33353 * C300) *
                   C17177) *
                  C50779 * C50693 * C1097 +
              ((C33355 * C287 + C33353 * C301 + C33356 * C1565 +
                C50854 * C1573) *
                   C17177 +
               (C33355 * C302 + C33353 * C317 + C33356 * C1572 +
                C50854 * C1577) *
                   C17172 +
               (C33596 + C33597) * C17178 + (C33598 + C33599) * C17173 +
               (C33600 + C33601) * C17179 + (C33602 + C33603) * C17174) *
                  C50779 * C50693 * C1098 -
              ((C33356 * C3203 + C50854 * C3207 + C33355 * C1107 +
                C33353 * C1114) *
                   C17174 +
               (C33356 * C3198 + C50854 * C3204 + C33355 * C1102 +
                C33353 * C1108) *
                   C17179 +
               (C33356 * C3202 + C50854 * C3206 + C33355 * C1109 +
                C33353 * C1115) *
                   C17173 +
               (C33356 * C3197 + C50854 * C3201 + C33355 * C1103 +
                C33353 * C1110) *
                   C17178 +
               (C33356 * C3200 + C50854 * C3205 + C33355 * C1111 +
                C33353 * C1116) *
                   C17172 +
               (C33356 * C3196 + C50854 * C3199 + C33355 * C1104 +
                C33353 * C1112) *
                   C17177) *
                  C50779 * C50693 * C1099) *
             C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                C17177 +
            (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                C17172 +
            (C33390 + C33391) * C17178 + (C33392 + C33393) * C17173 +
            C33406 * C17179 + C33407 * C17174) *
               C50779 * C457 -
           (C34104 * C17174 + C34105 * C17179 + (C33786 + C33787) * C17173 +
            (C33788 + C33789) * C17178 +
            (C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                C17172 +
            (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                C17177) *
               C50779 * C458 +
           ((C33355 * C464 + C33353 * C478 + C33356 * C1849 + C50854 * C1857) *
                C17177 +
            (C33355 * C479 + C33353 * C494 + C33356 * C1856 + C50854 * C1861) *
                C17172 +
            (C33790 + C33791) * C17178 + (C33792 + C33793) * C17173 +
            (C33794 + C33795) * C17179 + (C33796 + C33797) * C17174) *
               C50779 * C459) *
              C1025 +
          (((C33355 * C889 + C33353 * C894 + C33356 * C1218 + C50854 * C1226) *
                C17177 +
            (C33355 * C895 + C33353 * C904 + C33356 * C1225 + C50854 * C1230) *
                C17172 +
            (C34328 + C34329) * C17178 + (C34330 + C34331) * C17173 +
            (C34332 + C34333) * C17179 + (C34334 + C34335) * C17174) *
               C50779 * C458 -
           (C33944 * C17174 + C33945 * C17179 + (C33592 + C33593) * C17173 +
            (C33594 + C33595) * C17178 +
            (C33356 * C895 + C50854 * C904 + C33355 * C299 + C33353 * C316) *
                C17172 +
            (C33356 * C889 + C50854 * C894 + C33355 * C286 + C33353 * C300) *
                C17177) *
               C50779 * C457 -
           ((C33356 * C6137 + C50854 * C6139 + C33355 * C1221 +
             C33353 * C1228) *
                C17174 +
            (C33356 * C6136 + C50854 * C6138 + C33355 * C1216 +
             C33353 * C1222) *
                C17179 +
            (C33356 * C4586 + C50854 * C4592 + C33355 * C1223 +
             C33353 * C1229) *
                C17173 +
            (C33356 * C4580 + C50854 * C4587 + C33355 * C1217 +
             C33353 * C1224) *
                C17178 +
            (C33356 * C4588 + C50854 * C4593 + C33355 * C1225 +
             C33353 * C1230) *
                C17172 +
            (C33356 * C4581 + C50854 * C4589 + C33355 * C1218 +
             C33353 * C1226) *
                C17177) *
               C50779 * C459) *
              C50729) *
         C50658) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C19841 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C50630) *
                C2291 +
            ((C36366 + C36367) * C19841 + (C36368 + C36369) * C50630) * C2292 +
            C36389 * C2293) *
               C50693 * C1025 -
           (((C36374 + C36375) * C50630 + (C36376 + C36377) * C19841) * C2293 +
            ((C36373 + C36372) * C50630 + (C36371 + C36370) * C19841) * C2292 +
            ((C36369 + C36368) * C50630 + (C36367 + C36366) * C19841) * C2291) *
               C50693 * C50729) *
              C1027 +
          ((((C33595 + C33594) * C19841 + (C33593 + C33592) * C50630) * C2291 +
            ((C33596 + C33597) * C19841 + (C33598 + C33599) * C50630) * C2292 +
            ((C36378 + C36379) * C19841 + (C36380 + C36381) * C50630) * C2293) *
               C50693 * C50729 -
           (C36386 * C2293 +
            ((C33592 + C33593) * C50630 + (C33594 + C33595) * C19841) * C2292 +
            ((C33393 + C33392) * C50630 + (C33391 + C33390) * C19841) * C2291) *
               C50693 * C1025) *
              C1028 +
          (((C33406 * C19841 + C33407 * C50630) * C2291 +
            ((C33591 + C33590) * C19841 + (C33589 + C33588) * C50630) * C2292 +
            ((C33600 + C33601) * C19841 + (C33602 + C33603) * C50630) * C2293) *
               C50693 * C1025 -
           (((C33356 * C3203 + C50854 * C3207 + C33355 * C1107 +
              C33353 * C1114) *
                 C50630 +
             (C33356 * C3198 + C50854 * C3204 + C33355 * C1102 +
              C33353 * C1108) *
                 C19841) *
                C2293 +
            ((C33603 + C33602) * C50630 + (C33601 + C33600) * C19841) * C2292 +
            (C33944 * C50630 + C33945 * C19841) * C2291) *
               C50693 * C50729) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                C19841 +
            (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                C50630) *
               C2291 +
           ((C36366 + C36367) * C19841 + (C36368 + C36369) * C50630) * C2292 +
           C36389 * C2293) *
              C50693 * C1096 -
          (C37318 * C2293 +
           ((C36373 + C36372) * C50630 + (C36371 + C36370) * C19841) * C2292 +
           ((C36369 + C36368) * C50630 + (C36367 + C36366) * C19841) * C2291) *
              C50693 * C1097 +
          (C36389 * C2291 +
           ((C36377 + C36376) * C19841 + (C36375 + C36374) * C50630) * C2292 +
           ((C37314 + C37315) * C19841 + (C37316 + C37317) * C50630) * C2293) *
              C50693 * C1098 -
          (((C33356 * C21021 + C50854 * C21023 + C33355 * C3490 +
             C33353 * C3493) *
                C50630 +
            (C33356 * C21020 + C50854 * C21022 + C33355 * C3487 +
             C33353 * C3491) *
                C19841) *
               C2293 +
           ((C37317 + C37316) * C50630 + (C37315 + C37314) * C19841) * C2292 +
           C37318 * C2291) *
              C50693 * C1099) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C19841 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C50630) *
                C2291 +
            ((C36366 + C36367) * C19841 + (C36368 + C36369) * C50630) * C2292 +
            C36389 * C2293) *
               C457 -
           (((C37046 + C37047) * C50630 + (C37048 + C37049) * C19841) * C2293 +
            ((C37050 + C37051) * C50630 + (C37052 + C37053) * C19841) * C2292 +
            ((C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                 C50630 +
             (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                 C19841) *
                C2291) *
               C458 +
           (((C33355 * C464 + C33353 * C478 + C33356 * C1849 + C50854 * C1857) *
                 C19841 +
             (C33355 * C479 + C33353 * C494 + C33356 * C1856 + C50854 * C1861) *
                 C50630) *
                C2291 +
            ((C37481 + C37482) * C19841 + (C37483 + C37484) * C50630) * C2292 +
            ((C37485 + C37486) * C19841 + (C37487 + C37488) * C50630) * C2293) *
               C459) *
              C1025 +
          ((((C37053 + C37052) * C19841 + (C37051 + C37050) * C50630) * C2291 +
            ((C37049 + C37048) * C19841 + (C37047 + C37046) * C50630) * C2292 +
            ((C33355 * C3196 + C33353 * C3199 + C33356 * C3654 +
              C50854 * C3658) *
                 C19841 +
             (C33355 * C3200 + C33353 * C3205 + C33356 * C3657 +
              C50854 * C3660) *
                 C50630) *
                C2293) *
               C458 -
           (C37318 * C2293 +
            ((C36373 + C36372) * C50630 + (C36371 + C36370) * C19841) * C2292 +
            ((C36369 + C36368) * C50630 + (C36367 + C36366) * C19841) * C2291) *
               C457 -
           (((C33356 * C21297 + C50854 * C21299 + C33355 * C3657 +
              C33353 * C3660) *
                 C50630 +
             (C33356 * C21296 + C50854 * C21298 + C33355 * C3654 +
              C33353 * C3658) *
                 C19841) *
                C2293 +
            ((C37488 + C37487) * C50630 + (C37486 + C37485) * C19841) * C2292 +
            ((C37484 + C37483) * C50630 + (C37482 + C37481) * C19841) * C2291) *
               C459) *
              C50729) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C38937 * C122 + C38933 * C129 + C38938 * C463 + C38934 * C477 +
             C38939 * C464 + C38935 * C478 + C38940 * C1849 + C38936 * C1857) *
                C19841 +
            (C38937 * C130 + C38933 * C143 + C38938 * C476 + C38934 * C493 +
             C38939 * C479 + C38935 * C494 + C38940 * C1856 + C38936 * C1861) *
                C50630) *
               C50779 * C50693 * C1025 -
           ((C38940 * C4588 + C38936 * C4593 + C38939 * C1225 + C38935 * C1230 +
             C38938 * C895 + C38934 * C904 + C38937 * C299 + C38933 * C316) *
                C50630 +
            (C38940 * C4581 + C38936 * C4589 + C38939 * C1218 + C38935 * C1226 +
             C38938 * C889 + C38934 * C894 + C38937 * C286 + C38933 * C300) *
                C19841) *
               C50779 * C50693 * C50729) *
              C1027 +
          (((C38937 * C285 + C38933 * C298 + C38938 * C890 + C38934 * C896 +
             C38939 * C1217 + C38935 * C1224 + C38940 * C4580 +
             C38936 * C4587) *
                C19841 +
            (C38937 * C297 + C38933 * C315 + C38938 * C897 + C38934 * C905 +
             C38939 * C1223 + C38935 * C1229 + C38940 * C4586 +
             C38936 * C4592) *
                C50630) *
               C50779 * C50693 * C50729 -
           ((C38940 * C1854 + C38936 * C1860 + C38939 * C481 + C38935 * C495 +
             C38938 * C474 + C38934 * C492 + C38937 * C132 + C38933 * C144) *
                C50630 +
            (C38940 * C1848 + C38936 * C1855 + C38939 * C465 + C38935 * C480 +
             C38938 * C462 + C38934 * C475 + C38937 * C123 + C38933 * C131) *
                C19841) *
               C50779 * C50693 * C1025) *
              C1028 +
          (((C38937 * C124 + C38933 * C133 + C38938 * C461 + C38934 * C473 +
             C38939 * C466 + C38935 * C482 + C38940 * C1847 + C38936 * C1853) *
                C19841 +
            (C38937 * C134 + C38933 * C145 + C38938 * C472 + C38934 * C491 +
             C38939 * C483 + C38935 * C496 + C38940 * C1852 + C38936 * C1859) *
                C50630) *
               C50779 * C50693 * C1025 -
           ((C38940 * C6137 + C38936 * C6139 + C38939 * C1221 + C38935 * C1228 +
             C38938 * C899 + C38934 * C906 + C38937 * C295 + C38933 * C314) *
                C50630 +
            (C38940 * C6136 + C38936 * C6138 + C38939 * C1216 + C38935 * C1222 +
             C38938 * C891 + C38934 * C898 + C38937 * C284 + C38933 * C296) *
                C19841) *
               C50779 * C50693 * C50729) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C38937 * C122 + C38933 * C129 + C38938 * C463 + C38934 * C477 +
            C38939 * C464 + C38935 * C478 + C38940 * C1849 + C38936 * C1857) *
               C19841 +
           (C38937 * C130 + C38933 * C143 + C38938 * C476 + C38934 * C493 +
            C38939 * C479 + C38935 * C494 + C38940 * C1856 + C38936 * C1861) *
               C50630) *
              C50779 * C50693 * C1096 -
          ((C38940 * C4588 + C38936 * C4593 + C38939 * C1225 + C38935 * C1230 +
            C38938 * C895 + C38934 * C904 + C38937 * C299 + C38933 * C316) *
               C50630 +
           (C38940 * C4581 + C38936 * C4589 + C38939 * C1218 + C38935 * C1226 +
            C38938 * C889 + C38934 * C894 + C38937 * C286 + C38933 * C300) *
               C19841) *
              C50779 * C50693 * C1097 +
          ((C38937 * C287 + C38933 * C301 + C38938 * C1565 + C38934 * C1573 +
            C38939 * C2666 + C38935 * C2669 + C38940 * C4579 + C38936 * C4585) *
               C19841 +
           (C38937 * C302 + C38933 * C317 + C38938 * C1572 + C38934 * C1577 +
            C38939 * C2670 + C38935 * C2675 + C38940 * C4584 + C38936 * C4591) *
               C50630) *
              C50779 * C50693 * C1098 -
          ((C38940 * C21297 + C38936 * C21299 + C38939 * C3657 +
            C38935 * C3660 + C38938 * C3200 + C38934 * C3205 + C38937 * C1111 +
            C38933 * C1116) *
               C50630 +
           (C38940 * C21296 + C38936 * C21298 + C38939 * C3654 +
            C38935 * C3658 + C38938 * C3196 + C38934 * C3199 + C38937 * C1104 +
            C38933 * C1112) *
               C19841) *
              C50779 * C50693 * C1099) *
         C50658) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C38937 * C122 + C38933 * C129 + C38938 * C463 + C38934 * C477 +
             C38939 * C464 + C38935 * C478 + C38940 * C1849 + C38936 * C1857) *
                C19841 +
            (C38937 * C130 + C38933 * C143 + C38938 * C476 + C38934 * C493 +
             C38939 * C479 + C38935 * C494 + C38940 * C1856 + C38936 * C1861) *
                C50630) *
               C50779 * C457 -
           ((C38940 * C5570 + C38936 * C5575 + C38939 * C1856 + C38935 * C1861 +
             C38938 * C479 + C38934 * C494 + C38937 * C476 + C38933 * C493) *
                C50630 +
            (C38940 * C5566 + C38936 * C5569 + C38939 * C1849 + C38935 * C1857 +
             C38938 * C464 + C38934 * C478 + C38937 * C463 + C38933 * C477) *
                C19841) *
               C50779 * C458 +
           ((C38937 * C464 + C38933 * C478 + C38938 * C1849 + C38934 * C1857 +
             C38939 * C5566 + C38935 * C5569 + C38940 * C7433 +
             C38936 * C7437) *
                C19841 +
            (C38937 * C479 + C38933 * C494 + C38938 * C1856 + C38934 * C1861 +
             C38939 * C5570 + C38935 * C5575 + C38940 * C7436 +
             C38936 * C7439) *
                C50630) *
               C50779 * C459) *
              C1025 +
          (((C38937 * C889 + C38933 * C894 + C38938 * C1218 + C38934 * C1226 +
             C38939 * C4581 + C38935 * C4589 + C38940 * C6549 +
             C38936 * C6553) *
                C19841 +
            (C38937 * C895 + C38933 * C904 + C38938 * C1225 + C38934 * C1230 +
             C38939 * C4588 + C38935 * C4593 + C38940 * C6552 +
             C38936 * C6555) *
                C50630) *
               C50779 * C458 -
           ((C38940 * C4588 + C38936 * C4593 + C38939 * C1225 + C38935 * C1230 +
             C38938 * C895 + C38934 * C904 + C38937 * C299 + C38933 * C316) *
                C50630 +
            (C38940 * C4581 + C38936 * C4589 + C38939 * C1218 + C38935 * C1226 +
             C38938 * C889 + C38934 * C894 + C38937 * C286 + C38933 * C300) *
                C19841) *
               C50779 * C457 -
           ((C38940 * C23881 + C38936 * C23883 + C38939 * C6552 +
             C38935 * C6555 + C38938 * C4588 + C38934 * C4593 + C38937 * C1225 +
             C38933 * C1230) *
                C50630 +
            (C38940 * C23880 + C38936 * C23882 + C38939 * C6549 +
             C38935 * C6553 + C38938 * C4581 + C38934 * C4589 + C38937 * C1218 +
             C38933 * C1226) *
                C19841) *
               C50779 * C459) *
              C50729) *
         C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[188] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                  C19841 +
              (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                  C50630) *
                 C2291 +
             ((C36366 + C36367) * C19841 + (C36368 + C36369) * C50630) * C2292 +
             C36389 * C2293) *
                C50920 -
            (((C37046 + C37047) * C50630 + (C37048 + C37049) * C19841) * C2293 +
             ((C37050 + C37051) * C50630 + (C37052 + C37053) * C19841) * C2292 +
             ((C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                  C50630 +
              (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                  C19841) *
                 C2291) *
                C50757) *
               C1025 +
           ((((C37053 + C37052) * C19841 + (C37051 + C37050) * C50630) * C2291 +
             ((C37049 + C37048) * C19841 + (C37047 + C37046) * C50630) * C2292 +
             ((C33355 * C3196 + C33353 * C3199 + C33356 * C3654 +
               C50854 * C3658) *
                  C19841 +
              (C33355 * C3200 + C33353 * C3205 + C33356 * C3657 +
               C50854 * C3660) *
                  C50630) *
                 C2293) *
                C50757 -
            (C37318 * C2293 +
             ((C36373 + C36372) * C50630 + (C36371 + C36370) * C19841) * C2292 +
             ((C36369 + C36368) * C50630 + (C36367 + C36366) * C19841) *
                 C2291) *
                C50920) *
               C50729) *
              C50911 +
          (((((C33789 + C33788) * C19841 + (C33787 + C33786) * C50630) * C2291 +
             ((C34328 + C34329) * C19841 + (C34330 + C34331) * C50630) * C2292 +
             ((C37054 + C37055) * C19841 + (C37056 + C37057) * C50630) *
                 C2293) *
                C50757 -
            (C36386 * C2293 +
             ((C33592 + C33593) * C50630 + (C33594 + C33595) * C19841) * C2292 +
             ((C33393 + C33392) * C50630 + (C33391 + C33390) * C19841) *
                 C2291) *
                C50920) *
               C1025 +
           ((((C33595 + C33594) * C19841 + (C33593 + C33592) * C50630) * C2291 +
             ((C33596 + C33597) * C19841 + (C33598 + C33599) * C50630) * C2292 +
             ((C36378 + C36379) * C19841 + (C36380 + C36381) * C50630) *
                 C2293) *
                C50920 -
            (((C33356 * C3655 + C50854 * C3659 + C33355 * C3202 +
               C33353 * C3206) *
                  C50630 +
              (C33356 * C3653 + C50854 * C3656 + C33355 * C3197 +
               C33353 * C3201) *
                  C19841) *
                 C2293 +
             ((C37057 + C37056) * C50630 + (C37055 + C37054) * C19841) * C2292 +
             ((C34331 + C34330) * C50630 + (C34329 + C34328) * C19841) *
                 C2291) *
                C50757) *
               C50729) *
              C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C17177 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C17172 +
             (C33390 + C33391) * C17178 + (C33392 + C33393) * C17173 +
             C33406 * C17179 + C33407 * C17174) *
                C50779 * C50920 -
            (C34104 * C17174 + C34105 * C17179 + (C33786 + C33787) * C17173 +
             (C33788 + C33789) * C17178 +
             (C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                 C17172 +
             (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                 C17177) *
                C50779 * C50757) *
               C1025 +
           (((C33355 * C889 + C33353 * C894 + C33356 * C1218 + C50854 * C1226) *
                 C17177 +
             (C33355 * C895 + C33353 * C904 + C33356 * C1225 + C50854 * C1230) *
                 C17172 +
             (C34328 + C34329) * C17178 + (C34330 + C34331) * C17173 +
             (C34332 + C34333) * C17179 + (C34334 + C34335) * C17174) *
                C50779 * C50757 -
            (C33944 * C17174 + C33945 * C17179 + (C33592 + C33593) * C17173 +
             (C33594 + C33595) * C17178 +
             (C33356 * C895 + C50854 * C904 + C33355 * C299 + C33353 * C316) *
                 C17172 +
             (C33356 * C889 + C50854 * C894 + C33355 * C286 + C33353 * C300) *
                 C17177) *
                C50779 * C50920) *
               C50729) *
              C50911 +
          ((((C33789 + C33788) * C17177 + (C33787 + C33786) * C17172 +
             (C33785 + C33784) * C17178 + (C33783 + C33782) * C17173 +
             (C34114 + C34115) * C17179 + (C34116 + C34117) * C17174) *
                C50779 * C50757 -
            (C33408 * C17174 + C33409 * C17179 + (C33397 + C33396) * C17173 +
             (C33395 + C33394) * C17178 + (C33393 + C33392) * C17172 +
             (C33391 + C33390) * C17177) *
                C50779 * C50920) *
               C1025 +
           (((C33595 + C33594) * C17177 + (C33593 + C33592) * C17172 +
             (C33591 + C33590) * C17178 + (C33589 + C33588) * C17173 +
             (C33954 + C33955) * C17179 + (C33956 + C33957) * C17174) *
                C50779 * C50920 -
            ((C33356 * C1219 + C50854 * C1227 + C33355 * C901 + C33353 * C907) *
                 C17174 +
             (C33356 * C1215 + C50854 * C1220 + C33355 * C892 + C33353 * C900) *
                 C17179 +
             (C34335 + C34334) * C17173 + (C34333 + C34332) * C17178 +
             (C34331 + C34330) * C17172 + (C34329 + C34328) * C17177) *
                C50779 * C50757) *
               C50729) *
              C50664)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C38937 * C122 + C38933 * C129 + C38938 * C463 + C38934 * C477 +
              C38939 * C464 + C38935 * C478 + C38940 * C1849 + C38936 * C1857) *
                 C19841 +
             (C38937 * C130 + C38933 * C143 + C38938 * C476 + C38934 * C493 +
              C38939 * C479 + C38935 * C494 + C38940 * C1856 + C38936 * C1861) *
                 C50630) *
                C50779 * C50920 -
            ((C38940 * C5570 + C38936 * C5575 + C38939 * C1856 +
              C38935 * C1861 + C38938 * C479 + C38934 * C494 + C38937 * C476 +
              C38933 * C493) *
                 C50630 +
             (C38940 * C5566 + C38936 * C5569 + C38939 * C1849 +
              C38935 * C1857 + C38938 * C464 + C38934 * C478 + C38937 * C463 +
              C38933 * C477) *
                 C19841) *
                C50779 * C50757) *
               C1025 +
           (((C38937 * C889 + C38933 * C894 + C38938 * C1218 + C38934 * C1226 +
              C38939 * C4581 + C38935 * C4589 + C38940 * C6549 +
              C38936 * C6553) *
                 C19841 +
             (C38937 * C895 + C38933 * C904 + C38938 * C1225 + C38934 * C1230 +
              C38939 * C4588 + C38935 * C4593 + C38940 * C6552 +
              C38936 * C6555) *
                 C50630) *
                C50779 * C50757 -
            ((C38940 * C4588 + C38936 * C4593 + C38939 * C1225 +
              C38935 * C1230 + C38938 * C895 + C38934 * C904 + C38937 * C299 +
              C38933 * C316) *
                 C50630 +
             (C38940 * C4581 + C38936 * C4589 + C38939 * C1218 +
              C38935 * C1226 + C38938 * C889 + C38934 * C894 + C38937 * C286 +
              C38933 * C300) *
                 C19841) *
                C50779 * C50920) *
               C50729) *
              C50911 +
          ((((C38937 * C462 + C38933 * C475 + C38938 * C465 + C38934 * C480 +
              C38939 * C1848 + C38935 * C1855 + C38940 * C5567 +
              C38936 * C5571) *
                 C19841 +
             (C38937 * C474 + C38933 * C492 + C38938 * C481 + C38934 * C495 +
              C38939 * C1854 + C38935 * C1860 + C38940 * C5572 +
              C38936 * C5576) *
                 C50630) *
                C50779 * C50757 -
            ((C38940 * C1854 + C38936 * C1860 + C38939 * C481 + C38935 * C495 +
              C38938 * C474 + C38934 * C492 + C38937 * C132 + C38933 * C144) *
                 C50630 +
             (C38940 * C1848 + C38936 * C1855 + C38939 * C465 + C38935 * C480 +
              C38938 * C462 + C38934 * C475 + C38937 * C123 + C38933 * C131) *
                 C19841) *
                C50779 * C50920) *
               C1025 +
           (((C38937 * C285 + C38933 * C298 + C38938 * C890 + C38934 * C896 +
              C38939 * C1217 + C38935 * C1224 + C38940 * C4580 +
              C38936 * C4587) *
                 C19841 +
             (C38937 * C297 + C38933 * C315 + C38938 * C897 + C38934 * C905 +
              C38939 * C1223 + C38935 * C1229 + C38940 * C4586 +
              C38936 * C4592) *
                 C50630) *
                C50779 * C50920 -
            ((C38940 * C6550 + C38936 * C6554 + C38939 * C4586 +
              C38935 * C4592 + C38938 * C1223 + C38934 * C1229 + C38937 * C897 +
              C38933 * C905) *
                 C50630 +
             (C38940 * C6548 + C38936 * C6551 + C38939 * C4580 +
              C38935 * C4587 + C38938 * C1217 + C38934 * C1224 + C38937 * C890 +
              C38933 * C896) *
                 C19841) *
                C50779 * C50757) *
               C50729) *
              C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[189] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
               C17177 +
           (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
               C17172 +
           (C33390 + C33391) * C17178 + (C33392 + C33393) * C17173 +
           C33406 * C17179 + C33407 * C17174) *
              C50779 * C50693 * C1096 -
          (C33944 * C17174 + C33945 * C17179 + (C33592 + C33593) * C17173 +
           (C33594 + C33595) * C17178 +
           (C33356 * C895 + C50854 * C904 + C33355 * C299 + C33353 * C316) *
               C17172 +
           (C33356 * C889 + C50854 * C894 + C33355 * C286 + C33353 * C300) *
               C17177) *
              C50779 * C50693 * C1097 +
          ((C33355 * C287 + C33353 * C301 + C33356 * C1565 + C50854 * C1573) *
               C17177 +
           (C33355 * C302 + C33353 * C317 + C33356 * C1572 + C50854 * C1577) *
               C17172 +
           (C33596 + C33597) * C17178 + (C33598 + C33599) * C17173 +
           (C33600 + C33601) * C17179 + (C33602 + C33603) * C17174) *
              C50779 * C50693 * C1098 -
          ((C33356 * C3203 + C50854 * C3207 + C33355 * C1107 + C33353 * C1114) *
               C17174 +
           (C33356 * C3198 + C50854 * C3204 + C33355 * C1102 + C33353 * C1108) *
               C17179 +
           (C33356 * C3202 + C50854 * C3206 + C33355 * C1109 + C33353 * C1115) *
               C17173 +
           (C33356 * C3197 + C50854 * C3201 + C33355 * C1103 + C33353 * C1110) *
               C17178 +
           (C33356 * C3200 + C50854 * C3205 + C33355 * C1111 + C33353 * C1116) *
               C17172 +
           (C33356 * C3196 + C50854 * C3199 + C33355 * C1104 + C33353 * C1112) *
               C17177) *
              C50779 * C50693 * C1099) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                C17177 +
            (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                C17172 +
            (C33390 + C33391) * C17178 + (C33392 + C33393) * C17173 +
            C33406 * C17179 + C33407 * C17174) *
               C50779 * C50693 * C1025 -
           (C33944 * C17174 + C33945 * C17179 + (C33592 + C33593) * C17173 +
            (C33594 + C33595) * C17178 +
            (C33356 * C895 + C50854 * C904 + C33355 * C299 + C33353 * C316) *
                C17172 +
            (C33356 * C889 + C50854 * C894 + C33355 * C286 + C33353 * C300) *
                C17177) *
               C50779 * C50693 * C50729) *
              C1027 +
          (((C33595 + C33594) * C17177 + (C33593 + C33592) * C17172 +
            (C33591 + C33590) * C17178 + (C33589 + C33588) * C17173 +
            (C33954 + C33955) * C17179 + (C33956 + C33957) * C17174) *
               C50779 * C50693 * C50729 -
           (C33408 * C17174 + C33409 * C17179 + (C33397 + C33396) * C17173 +
            (C33395 + C33394) * C17178 + (C33393 + C33392) * C17172 +
            (C33391 + C33390) * C17177) *
               C50779 * C50693 * C1025) *
              C1028 +
          ((C33406 * C17177 + C33407 * C17172 + (C33401 + C33400) * C17178 +
            (C33399 + C33398) * C17173 + (C33402 + C33403) * C17179 +
            (C33404 + C33405) * C17174) *
               C50779 * C50693 * C1025 -
           ((C33356 * C902 + C50854 * C908 + C33355 * C310 + C33353 * C321) *
                C17174 +
            (C33356 * C893 + C50854 * C903 + C33355 * C291 + C33353 * C309) *
                C17179 +
            (C33957 + C33956) * C17173 + (C33955 + C33954) * C17178 +
            C33944 * C17172 + C33945 * C17177) *
               C50779 * C50693 * C50729) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C19841 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C50630) *
                C2291 +
            ((C36366 + C36367) * C19841 + (C36368 + C36369) * C50630) * C2292 +
            C36389 * C2293) *
               C50693 * C1025 -
           (((C36374 + C36375) * C50630 + (C36376 + C36377) * C19841) * C2293 +
            ((C36373 + C36372) * C50630 + (C36371 + C36370) * C19841) * C2292 +
            ((C36369 + C36368) * C50630 + (C36367 + C36366) * C19841) * C2291) *
               C50693 * C50729) *
              C1027 +
          ((((C33595 + C33594) * C19841 + (C33593 + C33592) * C50630) * C2291 +
            ((C33596 + C33597) * C19841 + (C33598 + C33599) * C50630) * C2292 +
            ((C36378 + C36379) * C19841 + (C36380 + C36381) * C50630) * C2293) *
               C50693 * C50729 -
           (C36386 * C2293 +
            ((C33592 + C33593) * C50630 + (C33594 + C33595) * C19841) * C2292 +
            ((C33393 + C33392) * C50630 + (C33391 + C33390) * C19841) * C2291) *
               C50693 * C1025) *
              C1028 +
          (((C33406 * C19841 + C33407 * C50630) * C2291 +
            ((C33591 + C33590) * C19841 + (C33589 + C33588) * C50630) * C2292 +
            ((C33600 + C33601) * C19841 + (C33602 + C33603) * C50630) * C2293) *
               C50693 * C1025 -
           (((C33356 * C3203 + C50854 * C3207 + C33355 * C1107 +
              C33353 * C1114) *
                 C50630 +
             (C33356 * C3198 + C50854 * C3204 + C33355 * C1102 +
              C33353 * C1108) *
                 C19841) *
                C2293 +
            ((C33603 + C33602) * C50630 + (C33601 + C33600) * C19841) * C2292 +
            (C33944 * C50630 + C33945 * C19841) * C2291) *
               C50693 * C50729) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                C19841 +
            (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                C50630) *
               C2291 +
           ((C36366 + C36367) * C19841 + (C36368 + C36369) * C50630) * C2292 +
           C36389 * C2293) *
              C50693 * C1096 -
          (C37318 * C2293 +
           ((C36373 + C36372) * C50630 + (C36371 + C36370) * C19841) * C2292 +
           ((C36369 + C36368) * C50630 + (C36367 + C36366) * C19841) * C2291) *
              C50693 * C1097 +
          (C36389 * C2291 +
           ((C36377 + C36376) * C19841 + (C36375 + C36374) * C50630) * C2292 +
           ((C37314 + C37315) * C19841 + (C37316 + C37317) * C50630) * C2293) *
              C50693 * C1098 -
          (((C33356 * C21021 + C50854 * C21023 + C33355 * C3490 +
             C33353 * C3493) *
                C50630 +
            (C33356 * C21020 + C50854 * C21022 + C33355 * C3487 +
             C33353 * C3491) *
                C19841) *
               C2293 +
           ((C37317 + C37316) * C50630 + (C37315 + C37314) * C19841) * C2292 +
           C37318 * C2291) *
              C50693 * C1099) *
         C50658) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C38937 * C122 + C38933 * C129 + C38938 * C463 + C38934 * C477 +
             C38939 * C464 + C38935 * C478 + C38940 * C1849 + C38936 * C1857) *
                C19841 +
            (C38937 * C130 + C38933 * C143 + C38938 * C476 + C38934 * C493 +
             C38939 * C479 + C38935 * C494 + C38940 * C1856 + C38936 * C1861) *
                C50630) *
               C50779 * C50693 * C1025 -
           ((C38940 * C4588 + C38936 * C4593 + C38939 * C1225 + C38935 * C1230 +
             C38938 * C895 + C38934 * C904 + C38937 * C299 + C38933 * C316) *
                C50630 +
            (C38940 * C4581 + C38936 * C4589 + C38939 * C1218 + C38935 * C1226 +
             C38938 * C889 + C38934 * C894 + C38937 * C286 + C38933 * C300) *
                C19841) *
               C50779 * C50693 * C50729) *
              C1027 +
          (((C38937 * C285 + C38933 * C298 + C38938 * C890 + C38934 * C896 +
             C38939 * C1217 + C38935 * C1224 + C38940 * C4580 +
             C38936 * C4587) *
                C19841 +
            (C38937 * C297 + C38933 * C315 + C38938 * C897 + C38934 * C905 +
             C38939 * C1223 + C38935 * C1229 + C38940 * C4586 +
             C38936 * C4592) *
                C50630) *
               C50779 * C50693 * C50729 -
           ((C38940 * C1854 + C38936 * C1860 + C38939 * C481 + C38935 * C495 +
             C38938 * C474 + C38934 * C492 + C38937 * C132 + C38933 * C144) *
                C50630 +
            (C38940 * C1848 + C38936 * C1855 + C38939 * C465 + C38935 * C480 +
             C38938 * C462 + C38934 * C475 + C38937 * C123 + C38933 * C131) *
                C19841) *
               C50779 * C50693 * C1025) *
              C1028 +
          (((C38937 * C124 + C38933 * C133 + C38938 * C461 + C38934 * C473 +
             C38939 * C466 + C38935 * C482 + C38940 * C1847 + C38936 * C1853) *
                C19841 +
            (C38937 * C134 + C38933 * C145 + C38938 * C472 + C38934 * C491 +
             C38939 * C483 + C38935 * C496 + C38940 * C1852 + C38936 * C1859) *
                C50630) *
               C50779 * C50693 * C1025 -
           ((C38940 * C6137 + C38936 * C6139 + C38939 * C1221 + C38935 * C1228 +
             C38938 * C899 + C38934 * C906 + C38937 * C295 + C38933 * C314) *
                C50630 +
            (C38940 * C6136 + C38936 * C6138 + C38939 * C1216 + C38935 * C1222 +
             C38938 * C891 + C38934 * C898 + C38937 * C284 + C38933 * C296) *
                C19841) *
               C50779 * C50693 * C50729) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C38937 * C122 + C38933 * C129 + C38938 * C463 + C38934 * C477 +
            C38939 * C464 + C38935 * C478 + C38940 * C1849 + C38936 * C1857) *
               C19841 +
           (C38937 * C130 + C38933 * C143 + C38938 * C476 + C38934 * C493 +
            C38939 * C479 + C38935 * C494 + C38940 * C1856 + C38936 * C1861) *
               C50630) *
              C50779 * C50693 * C1096 -
          ((C38940 * C4588 + C38936 * C4593 + C38939 * C1225 + C38935 * C1230 +
            C38938 * C895 + C38934 * C904 + C38937 * C299 + C38933 * C316) *
               C50630 +
           (C38940 * C4581 + C38936 * C4589 + C38939 * C1218 + C38935 * C1226 +
            C38938 * C889 + C38934 * C894 + C38937 * C286 + C38933 * C300) *
               C19841) *
              C50779 * C50693 * C1097 +
          ((C38937 * C287 + C38933 * C301 + C38938 * C1565 + C38934 * C1573 +
            C38939 * C2666 + C38935 * C2669 + C38940 * C4579 + C38936 * C4585) *
               C19841 +
           (C38937 * C302 + C38933 * C317 + C38938 * C1572 + C38934 * C1577 +
            C38939 * C2670 + C38935 * C2675 + C38940 * C4584 + C38936 * C4591) *
               C50630) *
              C50779 * C50693 * C1098 -
          ((C38940 * C21297 + C38936 * C21299 + C38939 * C3657 +
            C38935 * C3660 + C38938 * C3200 + C38934 * C3205 + C38937 * C1111 +
            C38933 * C1116) *
               C50630 +
           (C38940 * C21296 + C38936 * C21298 + C38939 * C3654 +
            C38935 * C3658 + C38938 * C3196 + C38934 * C3199 + C38937 * C1104 +
            C38933 * C1112) *
               C19841) *
              C50779 * C50693 * C1099) *
         C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[190] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                  C19841 +
              (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                  C50630) *
                 C2291 +
             ((C36366 + C36367) * C19841 + (C36368 + C36369) * C50630) * C2292 +
             C36389 * C2293) *
                C1676 -
            (C37991 * C2293 +
             ((C37050 + C37051) * C50630 + (C37052 + C37053) * C19841) * C2292 +
             ((C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                  C50630 +
              (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                  C19841) *
                 C2291) *
                C50757) *
               C50919 +
           ((((C37053 + C37052) * C19841 + (C37051 + C37050) * C50630) * C2291 +
             ((C37049 + C37048) * C19841 + (C37047 + C37046) * C50630) * C2292 +
             ((C37987 + C37988) * C19841 + (C37989 + C37990) * C50630) *
                 C2293) *
                C50757 -
            (C37318 * C2293 +
             ((C36373 + C36372) * C50630 + (C36371 + C36370) * C19841) * C2292 +
             ((C36369 + C36368) * C50630 + (C36367 + C36366) * C19841) *
                 C2291) *
                C1676) *
               C50729) *
              C50911 +
          (((((C33789 + C33788) * C19841 + (C33787 + C33786) * C50630) * C2291 +
             ((C34328 + C34329) * C19841 + (C34330 + C34331) * C50630) * C2292 +
             ((C37054 + C37055) * C19841 + (C37056 + C37057) * C50630) *
                 C2293) *
                C50757 -
            (C36386 * C2293 +
             ((C33592 + C33593) * C50630 + (C33594 + C33595) * C19841) * C2292 +
             ((C33393 + C33392) * C50630 + (C33391 + C33390) * C19841) *
                 C2291) *
                C1676) *
               C50919 +
           ((((C33595 + C33594) * C19841 + (C33593 + C33592) * C50630) * C2291 +
             ((C33596 + C33597) * C19841 + (C33598 + C33599) * C50630) * C2292 +
             ((C36378 + C36379) * C19841 + (C36380 + C36381) * C50630) *
                 C2293) *
                C1676 -
            (((C33356 * C3655 + C50854 * C3659 + C33355 * C3202 +
               C33353 * C3206) *
                  C50630 +
              (C33356 * C3653 + C50854 * C3656 + C33355 * C3197 +
               C33353 * C3201) *
                  C19841) *
                 C2293 +
             ((C37057 + C37056) * C50630 + (C37055 + C37054) * C19841) * C2292 +
             ((C34331 + C34330) * C50630 + (C34329 + C34328) * C19841) *
                 C2291) *
                C50757) *
               C50729) *
              C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C17177 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C17172 +
             (C33390 + C33391) * C17178 + (C33392 + C33393) * C17173 +
             C33406 * C17179 + C33407 * C17174) *
                C50779 * C1676 -
            (C34104 * C17174 + C34105 * C17179 + (C33786 + C33787) * C17173 +
             (C33788 + C33789) * C17178 +
             (C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                 C17172 +
             (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                 C17177) *
                C50779 * C50757) *
               C50919 +
           (((C33355 * C889 + C33353 * C894 + C33356 * C1218 + C50854 * C1226) *
                 C17177 +
             (C33355 * C895 + C33353 * C904 + C33356 * C1225 + C50854 * C1230) *
                 C17172 +
             (C34328 + C34329) * C17178 + (C34330 + C34331) * C17173 +
             (C34332 + C34333) * C17179 + (C34334 + C34335) * C17174) *
                C50779 * C50757 -
            (C33944 * C17174 + C33945 * C17179 + (C33592 + C33593) * C17173 +
             (C33594 + C33595) * C17178 +
             (C33356 * C895 + C50854 * C904 + C33355 * C299 + C33353 * C316) *
                 C17172 +
             (C33356 * C889 + C50854 * C894 + C33355 * C286 + C33353 * C300) *
                 C17177) *
                C50779 * C1676) *
               C50729) *
              C50911 +
          ((((C33789 + C33788) * C17177 + (C33787 + C33786) * C17172 +
             (C33785 + C33784) * C17178 + (C33783 + C33782) * C17173 +
             (C34114 + C34115) * C17179 + (C34116 + C34117) * C17174) *
                C50779 * C50757 -
            (C33408 * C17174 + C33409 * C17179 + (C33397 + C33396) * C17173 +
             (C33395 + C33394) * C17178 + (C33393 + C33392) * C17172 +
             (C33391 + C33390) * C17177) *
                C50779 * C1676) *
               C50919 +
           (((C33595 + C33594) * C17177 + (C33593 + C33592) * C17172 +
             (C33591 + C33590) * C17178 + (C33589 + C33588) * C17173 +
             (C33954 + C33955) * C17179 + (C33956 + C33957) * C17174) *
                C50779 * C1676 -
            ((C33356 * C1219 + C50854 * C1227 + C33355 * C901 + C33353 * C907) *
                 C17174 +
             (C33356 * C1215 + C50854 * C1220 + C33355 * C892 + C33353 * C900) *
                 C17179 +
             (C34335 + C34334) * C17173 + (C34333 + C34332) * C17178 +
             (C34331 + C34330) * C17172 + (C34329 + C34328) * C17177) *
                C50779 * C50757) *
               C50729) *
              C50664)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C38937 * C122 + C38933 * C129 + C38938 * C463 + C38934 * C477 +
              C38939 * C464 + C38935 * C478 + C38940 * C1849 + C38936 * C1857) *
                 C19841 +
             (C38937 * C130 + C38933 * C143 + C38938 * C476 + C38934 * C493 +
              C38939 * C479 + C38935 * C494 + C38940 * C1856 + C38936 * C1861) *
                 C50630) *
                C50779 * C1676 -
            ((C38940 * C5570 + C38936 * C5575 + C38939 * C1856 +
              C38935 * C1861 + C38938 * C479 + C38934 * C494 + C38937 * C476 +
              C38933 * C493) *
                 C50630 +
             (C38940 * C5566 + C38936 * C5569 + C38939 * C1849 +
              C38935 * C1857 + C38938 * C464 + C38934 * C478 + C38937 * C463 +
              C38933 * C477) *
                 C19841) *
                C50779 * C50757) *
               C50919 +
           (((C38937 * C889 + C38933 * C894 + C38938 * C1218 + C38934 * C1226 +
              C38939 * C4581 + C38935 * C4589 + C38940 * C6549 +
              C38936 * C6553) *
                 C19841 +
             (C38937 * C895 + C38933 * C904 + C38938 * C1225 + C38934 * C1230 +
              C38939 * C4588 + C38935 * C4593 + C38940 * C6552 +
              C38936 * C6555) *
                 C50630) *
                C50779 * C50757 -
            ((C38940 * C4588 + C38936 * C4593 + C38939 * C1225 +
              C38935 * C1230 + C38938 * C895 + C38934 * C904 + C38937 * C299 +
              C38933 * C316) *
                 C50630 +
             (C38940 * C4581 + C38936 * C4589 + C38939 * C1218 +
              C38935 * C1226 + C38938 * C889 + C38934 * C894 + C38937 * C286 +
              C38933 * C300) *
                 C19841) *
                C50779 * C1676) *
               C50729) *
              C50911 +
          ((((C38937 * C462 + C38933 * C475 + C38938 * C465 + C38934 * C480 +
              C38939 * C1848 + C38935 * C1855 + C38940 * C5567 +
              C38936 * C5571) *
                 C19841 +
             (C38937 * C474 + C38933 * C492 + C38938 * C481 + C38934 * C495 +
              C38939 * C1854 + C38935 * C1860 + C38940 * C5572 +
              C38936 * C5576) *
                 C50630) *
                C50779 * C50757 -
            ((C38940 * C1854 + C38936 * C1860 + C38939 * C481 + C38935 * C495 +
              C38938 * C474 + C38934 * C492 + C38937 * C132 + C38933 * C144) *
                 C50630 +
             (C38940 * C1848 + C38936 * C1855 + C38939 * C465 + C38935 * C480 +
              C38938 * C462 + C38934 * C475 + C38937 * C123 + C38933 * C131) *
                 C19841) *
                C50779 * C1676) *
               C50919 +
           (((C38937 * C285 + C38933 * C298 + C38938 * C890 + C38934 * C896 +
              C38939 * C1217 + C38935 * C1224 + C38940 * C4580 +
              C38936 * C4587) *
                 C19841 +
             (C38937 * C297 + C38933 * C315 + C38938 * C897 + C38934 * C905 +
              C38939 * C1223 + C38935 * C1229 + C38940 * C4586 +
              C38936 * C4592) *
                 C50630) *
                C50779 * C1676 -
            ((C38940 * C6550 + C38936 * C6554 + C38939 * C4586 +
              C38935 * C4592 + C38938 * C1223 + C38934 * C1229 + C38937 * C897 +
              C38933 * C905) *
                 C50630 +
             (C38940 * C6548 + C38936 * C6551 + C38939 * C4580 +
              C38935 * C4587 + C38938 * C1217 + C38934 * C1224 + C38937 * C890 +
              C38933 * C896) *
                 C19841) *
                C50779 * C50757) *
               C50729) *
              C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[191] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C19841 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C50630) *
                C2291 +
            ((C36366 + C36367) * C19841 + (C36368 + C36369) * C50630) * C2292 +
            C36389 * C2293) *
               C50966 -
           (C37991 * C2293 +
            ((C37050 + C37051) * C50630 + (C37052 + C37053) * C19841) * C2292 +
            ((C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                 C50630 +
             (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                 C19841) *
                C2291) *
               C50967 +
           (((C33355 * C464 + C33353 * C478 + C33356 * C1849 + C50854 * C1857) *
                 C19841 +
             (C33355 * C479 + C33353 * C494 + C33356 * C1856 + C50854 * C1861) *
                 C50630) *
                C2291 +
            ((C37481 + C37482) * C19841 + (C37483 + C37484) * C50630) * C2292 +
            ((C37485 + C37486) * C19841 + (C37487 + C37488) * C50630) * C2293) *
               C2092) *
              C50919 +
          ((((C37053 + C37052) * C19841 + (C37051 + C37050) * C50630) * C2291 +
            ((C37049 + C37048) * C19841 + (C37047 + C37046) * C50630) * C2292 +
            ((C37987 + C37988) * C19841 + (C37989 + C37990) * C50630) * C2293) *
               C50967 -
           (C37318 * C2293 +
            ((C36373 + C36372) * C50630 + (C36371 + C36370) * C19841) * C2292 +
            ((C36369 + C36368) * C50630 + (C36367 + C36366) * C19841) * C2291) *
               C50966 -
           (((C33356 * C21297 + C50854 * C21299 + C33355 * C3657 +
              C33353 * C3660) *
                 C50630 +
             (C33356 * C21296 + C50854 * C21298 + C33355 * C3654 +
              C33353 * C3658) *
                 C19841) *
                C2293 +
            ((C37488 + C37487) * C50630 + (C37486 + C37485) * C19841) * C2292 +
            ((C37484 + C37483) * C50630 + (C37482 + C37481) * C19841) * C2291) *
               C2092) *
              C50729) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                C17177 +
            (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                C17172 +
            (C33390 + C33391) * C17178 + (C33392 + C33393) * C17173 +
            C33406 * C17179 + C33407 * C17174) *
               C50779 * C50966 -
           (C34104 * C17174 + C34105 * C17179 + (C33786 + C33787) * C17173 +
            (C33788 + C33789) * C17178 +
            (C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                C17172 +
            (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                C17177) *
               C50779 * C50967 +
           ((C33355 * C464 + C33353 * C478 + C33356 * C1849 + C50854 * C1857) *
                C17177 +
            (C33355 * C479 + C33353 * C494 + C33356 * C1856 + C50854 * C1861) *
                C17172 +
            (C33790 + C33791) * C17178 + (C33792 + C33793) * C17173 +
            (C33794 + C33795) * C17179 + (C33796 + C33797) * C17174) *
               C50779 * C2092) *
              C50919 +
          (((C33355 * C889 + C33353 * C894 + C33356 * C1218 + C50854 * C1226) *
                C17177 +
            (C33355 * C895 + C33353 * C904 + C33356 * C1225 + C50854 * C1230) *
                C17172 +
            (C34328 + C34329) * C17178 + (C34330 + C34331) * C17173 +
            (C34332 + C34333) * C17179 + (C34334 + C34335) * C17174) *
               C50779 * C50967 -
           (C33944 * C17174 + C33945 * C17179 + (C33592 + C33593) * C17173 +
            (C33594 + C33595) * C17178 +
            (C33356 * C895 + C50854 * C904 + C33355 * C299 + C33353 * C316) *
                C17172 +
            (C33356 * C889 + C50854 * C894 + C33355 * C286 + C33353 * C300) *
                C17177) *
               C50779 * C50966 -
           ((C33356 * C6137 + C50854 * C6139 + C33355 * C1221 +
             C33353 * C1228) *
                C17174 +
            (C33356 * C6136 + C50854 * C6138 + C33355 * C1216 +
             C33353 * C1222) *
                C17179 +
            (C33356 * C4586 + C50854 * C4592 + C33355 * C1223 +
             C33353 * C1229) *
                C17173 +
            (C33356 * C4580 + C50854 * C4587 + C33355 * C1217 +
             C33353 * C1224) *
                C17178 +
            (C33356 * C4588 + C50854 * C4593 + C33355 * C1225 +
             C33353 * C1230) *
                C17172 +
            (C33356 * C4581 + C50854 * C4589 + C33355 * C1218 +
             C33353 * C1226) *
                C17177) *
               C50779 * C2092) *
              C50729) *
         C50658) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C38937 * C122 + C38933 * C129 + C38938 * C463 + C38934 * C477 +
             C38939 * C464 + C38935 * C478 + C38940 * C1849 + C38936 * C1857) *
                C19841 +
            (C38937 * C130 + C38933 * C143 + C38938 * C476 + C38934 * C493 +
             C38939 * C479 + C38935 * C494 + C38940 * C1856 + C38936 * C1861) *
                C50630) *
               C50779 * C50966 -
           ((C38940 * C5570 + C38936 * C5575 + C38939 * C1856 + C38935 * C1861 +
             C38938 * C479 + C38934 * C494 + C38937 * C476 + C38933 * C493) *
                C50630 +
            (C38940 * C5566 + C38936 * C5569 + C38939 * C1849 + C38935 * C1857 +
             C38938 * C464 + C38934 * C478 + C38937 * C463 + C38933 * C477) *
                C19841) *
               C50779 * C50967 +
           ((C38937 * C464 + C38933 * C478 + C38938 * C1849 + C38934 * C1857 +
             C38939 * C5566 + C38935 * C5569 + C38940 * C7433 +
             C38936 * C7437) *
                C19841 +
            (C38937 * C479 + C38933 * C494 + C38938 * C1856 + C38934 * C1861 +
             C38939 * C5570 + C38935 * C5575 + C38940 * C7436 +
             C38936 * C7439) *
                C50630) *
               C50779 * C2092) *
              C50919 +
          (((C38937 * C889 + C38933 * C894 + C38938 * C1218 + C38934 * C1226 +
             C38939 * C4581 + C38935 * C4589 + C38940 * C6549 +
             C38936 * C6553) *
                C19841 +
            (C38937 * C895 + C38933 * C904 + C38938 * C1225 + C38934 * C1230 +
             C38939 * C4588 + C38935 * C4593 + C38940 * C6552 +
             C38936 * C6555) *
                C50630) *
               C50779 * C50967 -
           ((C38940 * C4588 + C38936 * C4593 + C38939 * C1225 + C38935 * C1230 +
             C38938 * C895 + C38934 * C904 + C38937 * C299 + C38933 * C316) *
                C50630 +
            (C38940 * C4581 + C38936 * C4589 + C38939 * C1218 + C38935 * C1226 +
             C38938 * C889 + C38934 * C894 + C38937 * C286 + C38933 * C300) *
                C19841) *
               C50779 * C50966 -
           ((C38940 * C23881 + C38936 * C23883 + C38939 * C6552 +
             C38935 * C6555 + C38938 * C4588 + C38934 * C4593 + C38937 * C1225 +
             C38933 * C1230) *
                C50630 +
            (C38940 * C23880 + C38936 * C23882 + C38939 * C6549 +
             C38935 * C6553 + C38938 * C4581 + C38934 * C4589 + C38937 * C1218 +
             C38933 * C1226) *
                C19841) *
               C50779 * C2092) *
              C50729) *
         C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C33355 * C122 + C33353 * C129 + C33356 * C463 +
                 C50854 * C477) *
                    C17177 +
                (C33355 * C130 + C33353 * C143 + C33356 * C476 +
                 C50854 * C493) *
                    C17172 +
                (C33390 + C33391) * C17178 + (C33392 + C33393) * C17173 +
                C33406 * C17179 + C33407 * C17174) *
                   C50779 * C1676 -
               (C34104 * C17174 + C34105 * C17179 + (C33786 + C33787) * C17173 +
                (C33788 + C33789) * C17178 +
                (C33356 * C479 + C50854 * C494 + C33355 * C476 +
                 C33353 * C493) *
                    C17172 +
                (C33356 * C464 + C50854 * C478 + C33355 * C463 +
                 C33353 * C477) *
                    C17177) *
                   C50779 * C50757) *
                  C50677 * C1027 +
              (((C33789 + C33788) * C17177 + (C33787 + C33786) * C17172 +
                (C33785 + C33784) * C17178 + (C33783 + C33782) * C17173 +
                (C34114 + C34115) * C17179 + (C34116 + C34117) * C17174) *
                   C50779 * C50757 -
               (C33408 * C17174 + C33409 * C17179 + (C33397 + C33396) * C17173 +
                (C33395 + C33394) * C17178 + (C33393 + C33392) * C17172 +
                (C33391 + C33390) * C17177) *
                   C50779 * C1676) *
                  C50677 * C1028 +
              ((C33406 * C17177 + C33407 * C17172 + (C33401 + C33400) * C17178 +
                (C33399 + C33398) * C17173 + (C33402 + C33403) * C17179 +
                (C33404 + C33405) * C17174) *
                   C50779 * C1676 -
               ((C33356 * C488 + C50854 * C499 + C33355 * C487 +
                 C33353 * C498) *
                    C17174 +
                (C33356 * C469 + C50854 * C489 + C33355 * C468 +
                 C33353 * C486) *
                    C17179 +
                (C34117 + C34116) * C17173 + (C34115 + C34114) * C17178 +
                C34104 * C17172 + C34105 * C17177) *
                   C50779 * C50757) *
                  C50677 * C1029) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C33355 * C122 + C33353 * C129 + C33356 * C463 +
                 C50854 * C477) *
                    C17177 +
                (C33355 * C130 + C33353 * C143 + C33356 * C476 +
                 C50854 * C493) *
                    C17172 +
                (C33390 + C33391) * C17178 + (C33392 + C33393) * C17173 +
                C33406 * C17179 + C33407 * C17174) *
                   C50779 * C1676 -
               (C34104 * C17174 + C34105 * C17179 + (C33786 + C33787) * C17173 +
                (C33788 + C33789) * C17178 +
                (C33356 * C479 + C50854 * C494 + C33355 * C476 +
                 C33353 * C493) *
                    C17172 +
                (C33356 * C464 + C50854 * C478 + C33355 * C463 +
                 C33353 * C477) *
                    C17177) *
                   C50779 * C50757) *
                  C278 +
              (((C33355 * C889 + C33353 * C894 + C33356 * C1218 +
                 C50854 * C1226) *
                    C17177 +
                (C33355 * C895 + C33353 * C904 + C33356 * C1225 +
                 C50854 * C1230) *
                    C17172 +
                (C34328 + C34329) * C17178 + (C34330 + C34331) * C17173 +
                (C34332 + C34333) * C17179 + (C34334 + C34335) * C17174) *
                   C50779 * C50757 -
               (C33944 * C17174 + C33945 * C17179 + (C33592 + C33593) * C17173 +
                (C33594 + C33595) * C17178 +
                (C33356 * C895 + C50854 * C904 + C33355 * C299 +
                 C33353 * C316) *
                    C17172 +
                (C33356 * C889 + C50854 * C894 + C33355 * C286 +
                 C33353 * C300) *
                    C17177) *
                   C50779 * C1676) *
                  C279 +
              (((C33355 * C287 + C33353 * C301 + C33356 * C1565 +
                 C50854 * C1573) *
                    C17177 +
                (C33355 * C302 + C33353 * C317 + C33356 * C1572 +
                 C50854 * C1577) *
                    C17172 +
                (C33596 + C33597) * C17178 + (C33598 + C33599) * C17173 +
                (C33600 + C33601) * C17179 + (C33602 + C33603) * C17174) *
                   C50779 * C1676 -
               ((C33356 * C2673 + C50854 * C2677 + C33355 * C1568 +
                 C33353 * C1575) *
                    C17174 +
                (C33356 * C2668 + C50854 * C2674 + C33355 * C1563 +
                 C33353 * C1569) *
                    C17179 +
                (C33356 * C2672 + C50854 * C2676 + C33355 * C1570 +
                 C33353 * C1576) *
                    C17173 +
                (C33356 * C2667 + C50854 * C2671 + C33355 * C1564 +
                 C33353 * C1571) *
                    C17178 +
                (C33356 * C2670 + C50854 * C2675 + C33355 * C1572 +
                 C33353 * C1577) *
                    C17172 +
                (C33356 * C2666 + C50854 * C2669 + C33355 * C1565 +
                 C33353 * C1573) *
                    C17177) *
                   C50779 * C50757) *
                  C280) *
             C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
               C17177 +
           (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
               C17172 +
           (C33390 + C33391) * C17178 + (C33392 + C33393) * C17173 +
           C33406 * C17179 + C33407 * C17174) *
              C50779 * C1842 -
          (C34104 * C17174 + C34105 * C17179 + (C33786 + C33787) * C17173 +
           (C33788 + C33789) * C17178 +
           (C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
               C17172 +
           (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
               C17177) *
              C50779 * C1843 +
          ((C33355 * C464 + C33353 * C478 + C33356 * C1849 + C50854 * C1857) *
               C17177 +
           (C33355 * C479 + C33353 * C494 + C33356 * C1856 + C50854 * C1861) *
               C17172 +
           (C33790 + C33791) * C17178 + (C33792 + C33793) * C17173 +
           (C33794 + C33795) * C17179 + (C33796 + C33797) * C17174) *
              C50779 * C1844 -
          ((C33356 * C5573 + C50854 * C5577 + C33355 * C1852 + C33353 * C1859) *
               C17174 +
           (C33356 * C5568 + C50854 * C5574 + C33355 * C1847 + C33353 * C1853) *
               C17179 +
           (C33356 * C5572 + C50854 * C5576 + C33355 * C1854 + C33353 * C1860) *
               C17173 +
           (C33356 * C5567 + C50854 * C5571 + C33355 * C1848 + C33353 * C1855) *
               C17178 +
           (C33356 * C5570 + C50854 * C5575 + C33355 * C1856 + C33353 * C1861) *
               C17172 +
           (C33356 * C5566 + C50854 * C5569 + C33355 * C1849 + C33353 * C1857) *
               C17177) *
              C50779 * C1845) *
         C50677 * C50658) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C19841 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C50630) *
                C2291 +
            ((C36366 + C36367) * C19841 + (C36368 + C36369) * C50630) * C2292 +
            C36389 * C2293) *
               C1676 -
           (C37991 * C2293 +
            ((C37050 + C37051) * C50630 + (C37052 + C37053) * C19841) * C2292 +
            ((C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                 C50630 +
             (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                 C19841) *
                C2291) *
               C50757) *
              C50677 * C1027 +
          ((((C33789 + C33788) * C19841 + (C33787 + C33786) * C50630) * C2291 +
            ((C34328 + C34329) * C19841 + (C34330 + C34331) * C50630) * C2292 +
            ((C37054 + C37055) * C19841 + (C37056 + C37057) * C50630) * C2293) *
               C50757 -
           (C36386 * C2293 +
            ((C33592 + C33593) * C50630 + (C33594 + C33595) * C19841) * C2292 +
            ((C33393 + C33392) * C50630 + (C33391 + C33390) * C19841) * C2291) *
               C1676) *
              C50677 * C1028 +
          (((C33406 * C19841 + C33407 * C50630) * C2291 +
            ((C33591 + C33590) * C19841 + (C33589 + C33588) * C50630) * C2292 +
            ((C33600 + C33601) * C19841 + (C33602 + C33603) * C50630) * C2293) *
               C1676 -
           (((C33356 * C2673 + C50854 * C2677 + C33355 * C1568 +
              C33353 * C1575) *
                 C50630 +
             (C33356 * C2668 + C50854 * C2674 + C33355 * C1563 +
              C33353 * C1569) *
                 C19841) *
                C2293 +
            ((C34335 + C34334) * C50630 + (C34333 + C34332) * C19841) * C2292 +
            (C34104 * C50630 + C34105 * C19841) * C2291) *
               C50757) *
              C50677 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C19841 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C50630) *
                C2291 +
            ((C36366 + C36367) * C19841 + (C36368 + C36369) * C50630) * C2292 +
            C36389 * C2293) *
               C1676 -
           (C37991 * C2293 +
            ((C37050 + C37051) * C50630 + (C37052 + C37053) * C19841) * C2292 +
            ((C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                 C50630 +
             (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                 C19841) *
                C2291) *
               C50757) *
              C278 +
          ((((C37053 + C37052) * C19841 + (C37051 + C37050) * C50630) * C2291 +
            ((C37049 + C37048) * C19841 + (C37047 + C37046) * C50630) * C2292 +
            ((C37987 + C37988) * C19841 + (C37989 + C37990) * C50630) * C2293) *
               C50757 -
           (C37318 * C2293 +
            ((C36373 + C36372) * C50630 + (C36371 + C36370) * C19841) * C2292 +
            ((C36369 + C36368) * C50630 + (C36367 + C36366) * C19841) * C2291) *
               C1676) *
              C279 +
          ((C36389 * C2291 +
            ((C36377 + C36376) * C19841 + (C36375 + C36374) * C50630) * C2292 +
            ((C37314 + C37315) * C19841 + (C37316 + C37317) * C50630) * C2293) *
               C1676 -
           (((C33356 * C20679 + C50854 * C20681 + C33355 * C4171 +
              C33353 * C4174) *
                 C50630 +
             (C33356 * C20678 + C50854 * C20680 + C33355 * C4168 +
              C33353 * C4172) *
                 C19841) *
                C2293 +
            ((C37990 + C37989) * C50630 + (C37988 + C37987) * C19841) * C2292 +
            C37991 * C2291) *
               C50757) *
              C280) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                C19841 +
            (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                C50630) *
               C2291 +
           ((C36366 + C36367) * C19841 + (C36368 + C36369) * C50630) * C2292 +
           C36389 * C2293) *
              C1842 -
          (C37991 * C2293 +
           ((C37050 + C37051) * C50630 + (C37052 + C37053) * C19841) * C2292 +
           ((C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                C50630 +
            (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                C19841) *
               C2291) *
              C1843 +
          (((C33355 * C464 + C33353 * C478 + C33356 * C1849 + C50854 * C1857) *
                C19841 +
            (C33355 * C479 + C33353 * C494 + C33356 * C1856 + C50854 * C1861) *
                C50630) *
               C2291 +
           ((C37481 + C37482) * C19841 + (C37483 + C37484) * C50630) * C2292 +
           ((C37485 + C37486) * C19841 + (C37487 + C37488) * C50630) * C2293) *
              C1844 -
          (((C33356 * C22965 + C50854 * C22967 + C33355 * C4584 +
             C33353 * C4591) *
                C50630 +
            (C33356 * C22964 + C50854 * C22966 + C33355 * C4579 +
             C33353 * C4585) *
                C19841) *
               C2293 +
           ((C33356 * C6552 + C50854 * C6555 + C33355 * C4588 +
             C33353 * C4593) *
                C50630 +
            (C33356 * C6549 + C50854 * C6553 + C33355 * C4581 +
             C33353 * C4589) *
                C19841) *
               C2292 +
           ((C33356 * C5570 + C50854 * C5575 + C33355 * C1856 +
             C33353 * C1861) *
                C50630 +
            (C33356 * C5566 + C50854 * C5569 + C33355 * C1849 +
             C33353 * C1857) *
                C19841) *
               C2291) *
              C1845) *
         C50677 * C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C38937 * C122 + C38933 * C129 + C38938 * C463 + C38934 * C477 +
             C38939 * C464 + C38935 * C478 + C38940 * C1849 + C38936 * C1857) *
                C19841 +
            (C38937 * C130 + C38933 * C143 + C38938 * C476 + C38934 * C493 +
             C38939 * C479 + C38935 * C494 + C38940 * C1856 + C38936 * C1861) *
                C50630) *
               C50779 * C1676 -
           ((C38940 * C5570 + C38936 * C5575 + C38939 * C1856 + C38935 * C1861 +
             C38938 * C479 + C38934 * C494 + C38937 * C476 + C38933 * C493) *
                C50630 +
            (C38940 * C5566 + C38936 * C5569 + C38939 * C1849 + C38935 * C1857 +
             C38938 * C464 + C38934 * C478 + C38937 * C463 + C38933 * C477) *
                C19841) *
               C50779 * C50757) *
              C50677 * C1027 +
          (((C38937 * C462 + C38933 * C475 + C38938 * C465 + C38934 * C480 +
             C38939 * C1848 + C38935 * C1855 + C38940 * C5567 +
             C38936 * C5571) *
                C19841 +
            (C38937 * C474 + C38933 * C492 + C38938 * C481 + C38934 * C495 +
             C38939 * C1854 + C38935 * C1860 + C38940 * C5572 +
             C38936 * C5576) *
                C50630) *
               C50779 * C50757 -
           ((C38940 * C1854 + C38936 * C1860 + C38939 * C481 + C38935 * C495 +
             C38938 * C474 + C38934 * C492 + C38937 * C132 + C38933 * C144) *
                C50630 +
            (C38940 * C1848 + C38936 * C1855 + C38939 * C465 + C38935 * C480 +
             C38938 * C462 + C38934 * C475 + C38937 * C123 + C38933 * C131) *
                C19841) *
               C50779 * C1676) *
              C50677 * C1028 +
          (((C38937 * C124 + C38933 * C133 + C38938 * C461 + C38934 * C473 +
             C38939 * C466 + C38935 * C482 + C38940 * C1847 + C38936 * C1853) *
                C19841 +
            (C38937 * C134 + C38933 * C145 + C38938 * C472 + C38934 * C491 +
             C38939 * C483 + C38935 * C496 + C38940 * C1852 + C38936 * C1859) *
                C50630) *
               C50779 * C1676 -
           ((C38940 * C5573 + C38936 * C5577 + C38939 * C1852 + C38935 * C1859 +
             C38938 * C483 + C38934 * C496 + C38937 * C472 + C38933 * C491) *
                C50630 +
            (C38940 * C5568 + C38936 * C5574 + C38939 * C1847 + C38935 * C1853 +
             C38938 * C466 + C38934 * C482 + C38937 * C461 + C38933 * C473) *
                C19841) *
               C50779 * C50757) *
              C50677 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C38937 * C122 + C38933 * C129 + C38938 * C463 + C38934 * C477 +
             C38939 * C464 + C38935 * C478 + C38940 * C1849 + C38936 * C1857) *
                C19841 +
            (C38937 * C130 + C38933 * C143 + C38938 * C476 + C38934 * C493 +
             C38939 * C479 + C38935 * C494 + C38940 * C1856 + C38936 * C1861) *
                C50630) *
               C50779 * C1676 -
           ((C38940 * C5570 + C38936 * C5575 + C38939 * C1856 + C38935 * C1861 +
             C38938 * C479 + C38934 * C494 + C38937 * C476 + C38933 * C493) *
                C50630 +
            (C38940 * C5566 + C38936 * C5569 + C38939 * C1849 + C38935 * C1857 +
             C38938 * C464 + C38934 * C478 + C38937 * C463 + C38933 * C477) *
                C19841) *
               C50779 * C50757) *
              C278 +
          (((C38937 * C889 + C38933 * C894 + C38938 * C1218 + C38934 * C1226 +
             C38939 * C4581 + C38935 * C4589 + C38940 * C6549 +
             C38936 * C6553) *
                C19841 +
            (C38937 * C895 + C38933 * C904 + C38938 * C1225 + C38934 * C1230 +
             C38939 * C4588 + C38935 * C4593 + C38940 * C6552 +
             C38936 * C6555) *
                C50630) *
               C50779 * C50757 -
           ((C38940 * C4588 + C38936 * C4593 + C38939 * C1225 + C38935 * C1230 +
             C38938 * C895 + C38934 * C904 + C38937 * C299 + C38933 * C316) *
                C50630 +
            (C38940 * C4581 + C38936 * C4589 + C38939 * C1218 + C38935 * C1226 +
             C38938 * C889 + C38934 * C894 + C38937 * C286 + C38933 * C300) *
                C19841) *
               C50779 * C1676) *
              C279 +
          (((C38937 * C287 + C38933 * C301 + C38938 * C1565 + C38934 * C1573 +
             C38939 * C2666 + C38935 * C2669 + C38940 * C4579 +
             C38936 * C4585) *
                C19841 +
            (C38937 * C302 + C38933 * C317 + C38938 * C1572 + C38934 * C1577 +
             C38939 * C2670 + C38935 * C2675 + C38940 * C4584 +
             C38936 * C4591) *
                C50630) *
               C50779 * C1676 -
           ((C38940 * C22965 + C38936 * C22967 + C38939 * C4584 +
             C38935 * C4591 + C38938 * C2670 + C38934 * C2675 + C38937 * C1572 +
             C38933 * C1577) *
                C50630 +
            (C38940 * C22964 + C38936 * C22966 + C38939 * C4579 +
             C38935 * C4585 + C38938 * C2666 + C38934 * C2669 + C38937 * C1565 +
             C38933 * C1573) *
                C19841) *
               C50779 * C50757) *
              C280) *
         C50658) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C38937 * C122 + C38933 * C129 + C38938 * C463 + C38934 * C477 +
            C38939 * C464 + C38935 * C478 + C38940 * C1849 + C38936 * C1857) *
               C19841 +
           (C38937 * C130 + C38933 * C143 + C38938 * C476 + C38934 * C493 +
            C38939 * C479 + C38935 * C494 + C38940 * C1856 + C38936 * C1861) *
               C50630) *
              C50779 * C1842 -
          ((C38940 * C5570 + C38936 * C5575 + C38939 * C1856 + C38935 * C1861 +
            C38938 * C479 + C38934 * C494 + C38937 * C476 + C38933 * C493) *
               C50630 +
           (C38940 * C5566 + C38936 * C5569 + C38939 * C1849 + C38935 * C1857 +
            C38938 * C464 + C38934 * C478 + C38937 * C463 + C38933 * C477) *
               C19841) *
              C50779 * C1843 +
          ((C38937 * C464 + C38933 * C478 + C38938 * C1849 + C38934 * C1857 +
            C38939 * C5566 + C38935 * C5569 + C38940 * C7433 + C38936 * C7437) *
               C19841 +
           (C38937 * C479 + C38933 * C494 + C38938 * C1856 + C38934 * C1861 +
            C38939 * C5570 + C38935 * C5575 + C38940 * C7436 + C38936 * C7439) *
               C50630) *
              C50779 * C1844 -
          ((C38940 * C40314 + C38936 * C40316 + C38939 * C7436 +
            C38935 * C7439 + C38938 * C5570 + C38934 * C5575 + C38937 * C1856 +
            C38933 * C1861) *
               C50630 +
           (C38940 * C40313 + C38936 * C40315 + C38939 * C7433 +
            C38935 * C7437 + C38938 * C5566 + C38934 * C5569 + C38937 * C1849 +
            C38933 * C1857) *
               C19841) *
              C50779 * C1845) *
         C50677 * C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[193] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C19841 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C50630) *
                C2291 +
            ((C36366 + C36367) * C19841 + (C36368 + C36369) * C50630) * C2292 +
            C36389 * C2293) *
               C50966 -
           (C37991 * C2293 +
            ((C37050 + C37051) * C50630 + (C37052 + C37053) * C19841) * C2292 +
            ((C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                 C50630 +
             (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                 C19841) *
                C2291) *
               C50967 +
           (((C33355 * C464 + C33353 * C478 + C33356 * C1849 + C50854 * C1857) *
                 C19841 +
             (C33355 * C479 + C33353 * C494 + C33356 * C1856 + C50854 * C1861) *
                 C50630) *
                C2291 +
            ((C37481 + C37482) * C19841 + (C37483 + C37484) * C50630) * C2292 +
            ((C37485 + C37486) * C19841 + (C37487 + C37488) * C50630) * C2293) *
               C2092) *
              C50677 * C50911 +
          ((((C33789 + C33788) * C19841 + (C33787 + C33786) * C50630) * C2291 +
            ((C34328 + C34329) * C19841 + (C34330 + C34331) * C50630) * C2292 +
            ((C37054 + C37055) * C19841 + (C37056 + C37057) * C50630) * C2293) *
               C50967 -
           (C36386 * C2293 +
            ((C33592 + C33593) * C50630 + (C33594 + C33595) * C19841) * C2292 +
            ((C33393 + C33392) * C50630 + (C33391 + C33390) * C19841) * C2291) *
               C50966 -
           (((C33356 * C4582 + C50854 * C4590 + C33355 * C2672 +
              C33353 * C2676) *
                 C50630 +
             (C33356 * C4578 + C50854 * C4583 + C33355 * C2667 +
              C33353 * C2671) *
                 C19841) *
                C2293 +
            ((C33356 * C4586 + C50854 * C4592 + C33355 * C1223 +
              C33353 * C1229) *
                 C50630 +
             (C33356 * C4580 + C50854 * C4587 + C33355 * C1217 +
              C33353 * C1224) *
                 C19841) *
                C2292 +
            ((C33793 + C33792) * C50630 + (C33791 + C33790) * C19841) * C2291) *
               C2092) *
              C50677 * C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                C17177 +
            (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                C17172 +
            (C33390 + C33391) * C17178 + (C33392 + C33393) * C17173 +
            C33406 * C17179 + C33407 * C17174) *
               C50779 * C50966 -
           (C34104 * C17174 + C34105 * C17179 + (C33786 + C33787) * C17173 +
            (C33788 + C33789) * C17178 +
            (C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                C17172 +
            (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                C17177) *
               C50779 * C50967 +
           ((C33355 * C464 + C33353 * C478 + C33356 * C1849 + C50854 * C1857) *
                C17177 +
            (C33355 * C479 + C33353 * C494 + C33356 * C1856 + C50854 * C1861) *
                C17172 +
            (C33790 + C33791) * C17178 + (C33792 + C33793) * C17173 +
            (C33794 + C33795) * C17179 + (C33796 + C33797) * C17174) *
               C50779 * C2092) *
              C50677 * C50911 +
          (((C33789 + C33788) * C17177 + (C33787 + C33786) * C17172 +
            (C33785 + C33784) * C17178 + (C33783 + C33782) * C17173 +
            (C34114 + C34115) * C17179 + (C34116 + C34117) * C17174) *
               C50779 * C50967 -
           (C33408 * C17174 + C33409 * C17179 + (C33397 + C33396) * C17173 +
            (C33395 + C33394) * C17178 + (C33393 + C33392) * C17172 +
            (C33391 + C33390) * C17177) *
               C50779 * C50966 -
           ((C33356 * C1850 + C50854 * C1858 + C33355 * C485 + C33353 * C497) *
                C17174 +
            (C33356 * C1846 + C50854 * C1851 + C33355 * C467 + C33353 * C484) *
                C17179 +
            (C33797 + C33796) * C17173 + (C33795 + C33794) * C17178 +
            (C33793 + C33792) * C17172 + (C33791 + C33790) * C17177) *
               C50779 * C2092) *
              C50677 * C50664)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C38937 * C122 + C38933 * C129 + C38938 * C463 + C38934 * C477 +
             C38939 * C464 + C38935 * C478 + C38940 * C1849 + C38936 * C1857) *
                C19841 +
            (C38937 * C130 + C38933 * C143 + C38938 * C476 + C38934 * C493 +
             C38939 * C479 + C38935 * C494 + C38940 * C1856 + C38936 * C1861) *
                C50630) *
               C50779 * C50966 -
           ((C38940 * C5570 + C38936 * C5575 + C38939 * C1856 + C38935 * C1861 +
             C38938 * C479 + C38934 * C494 + C38937 * C476 + C38933 * C493) *
                C50630 +
            (C38940 * C5566 + C38936 * C5569 + C38939 * C1849 + C38935 * C1857 +
             C38938 * C464 + C38934 * C478 + C38937 * C463 + C38933 * C477) *
                C19841) *
               C50779 * C50967 +
           ((C38937 * C464 + C38933 * C478 + C38938 * C1849 + C38934 * C1857 +
             C38939 * C5566 + C38935 * C5569 + C38940 * C7433 +
             C38936 * C7437) *
                C19841 +
            (C38937 * C479 + C38933 * C494 + C38938 * C1856 + C38934 * C1861 +
             C38939 * C5570 + C38935 * C5575 + C38940 * C7436 +
             C38936 * C7439) *
                C50630) *
               C50779 * C2092) *
              C50677 * C50911 +
          (((C38937 * C462 + C38933 * C475 + C38938 * C465 + C38934 * C480 +
             C38939 * C1848 + C38935 * C1855 + C38940 * C5567 +
             C38936 * C5571) *
                C19841 +
            (C38937 * C474 + C38933 * C492 + C38938 * C481 + C38934 * C495 +
             C38939 * C1854 + C38935 * C1860 + C38940 * C5572 +
             C38936 * C5576) *
                C50630) *
               C50779 * C50967 -
           ((C38940 * C1854 + C38936 * C1860 + C38939 * C481 + C38935 * C495 +
             C38938 * C474 + C38934 * C492 + C38937 * C132 + C38933 * C144) *
                C50630 +
            (C38940 * C1848 + C38936 * C1855 + C38939 * C465 + C38935 * C480 +
             C38938 * C462 + C38934 * C475 + C38937 * C123 + C38933 * C131) *
                C19841) *
               C50779 * C50966 -
           ((C38940 * C7434 + C38936 * C7438 + C38939 * C5572 + C38935 * C5576 +
             C38938 * C1854 + C38934 * C1860 + C38937 * C481 + C38933 * C495) *
                C50630 +
            (C38940 * C7432 + C38936 * C7435 + C38939 * C5567 + C38935 * C5571 +
             C38938 * C1848 + C38934 * C1855 + C38937 * C465 + C38933 * C480) *
                C19841) *
               C50779 * C2092) *
              C50677 * C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[194] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                C17177 +
            (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                C17172 +
            (C33390 + C33391) * C17178 + (C33392 + C33393) * C17173 +
            C33406 * C17179 + C33407 * C17174) *
               C50779 * C1676 -
           (C34104 * C17174 + C34105 * C17179 + (C33786 + C33787) * C17173 +
            (C33788 + C33789) * C17178 +
            (C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                C17172 +
            (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                C17177) *
               C50779 * C50757) *
              C278 +
          (((C33355 * C889 + C33353 * C894 + C33356 * C1218 + C50854 * C1226) *
                C17177 +
            (C33355 * C895 + C33353 * C904 + C33356 * C1225 + C50854 * C1230) *
                C17172 +
            (C34328 + C34329) * C17178 + (C34330 + C34331) * C17173 +
            (C34332 + C34333) * C17179 + (C34334 + C34335) * C17174) *
               C50779 * C50757 -
           (C33944 * C17174 + C33945 * C17179 + (C33592 + C33593) * C17173 +
            (C33594 + C33595) * C17178 +
            (C33356 * C895 + C50854 * C904 + C33355 * C299 + C33353 * C316) *
                C17172 +
            (C33356 * C889 + C50854 * C894 + C33355 * C286 + C33353 * C300) *
                C17177) *
               C50779 * C1676) *
              C279 +
          (((C33355 * C287 + C33353 * C301 + C33356 * C1565 + C50854 * C1573) *
                C17177 +
            (C33355 * C302 + C33353 * C317 + C33356 * C1572 + C50854 * C1577) *
                C17172 +
            (C33596 + C33597) * C17178 + (C33598 + C33599) * C17173 +
            (C33600 + C33601) * C17179 + (C33602 + C33603) * C17174) *
               C50779 * C1676 -
           ((C33356 * C2673 + C50854 * C2677 + C33355 * C1568 +
             C33353 * C1575) *
                C17174 +
            (C33356 * C2668 + C50854 * C2674 + C33355 * C1563 +
             C33353 * C1569) *
                C17179 +
            (C33356 * C2672 + C50854 * C2676 + C33355 * C1570 +
             C33353 * C1576) *
                C17173 +
            (C33356 * C2667 + C50854 * C2671 + C33355 * C1564 +
             C33353 * C1571) *
                C17178 +
            (C33356 * C2670 + C50854 * C2675 + C33355 * C1572 +
             C33353 * C1577) *
                C17172 +
            (C33356 * C2666 + C50854 * C2669 + C33355 * C1565 +
             C33353 * C1573) *
                C17177) *
               C50779 * C50757) *
              C280) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                C17177 +
            (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                C17172 +
            (C33390 + C33391) * C17178 + (C33392 + C33393) * C17173 +
            C33406 * C17179 + C33407 * C17174) *
               C50779 * C1676 -
           (C34104 * C17174 + C34105 * C17179 + (C33786 + C33787) * C17173 +
            (C33788 + C33789) * C17178 +
            (C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                C17172 +
            (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                C17177) *
               C50779 * C50757) *
              C50677 * C1027 +
          (((C33789 + C33788) * C17177 + (C33787 + C33786) * C17172 +
            (C33785 + C33784) * C17178 + (C33783 + C33782) * C17173 +
            (C34114 + C34115) * C17179 + (C34116 + C34117) * C17174) *
               C50779 * C50757 -
           (C33408 * C17174 + C33409 * C17179 + (C33397 + C33396) * C17173 +
            (C33395 + C33394) * C17178 + (C33393 + C33392) * C17172 +
            (C33391 + C33390) * C17177) *
               C50779 * C1676) *
              C50677 * C1028 +
          ((C33406 * C17177 + C33407 * C17172 + (C33401 + C33400) * C17178 +
            (C33399 + C33398) * C17173 + (C33402 + C33403) * C17179 +
            (C33404 + C33405) * C17174) *
               C50779 * C1676 -
           ((C33356 * C488 + C50854 * C499 + C33355 * C487 + C33353 * C498) *
                C17174 +
            (C33356 * C469 + C50854 * C489 + C33355 * C468 + C33353 * C486) *
                C17179 +
            (C34117 + C34116) * C17173 + (C34115 + C34114) * C17178 +
            C34104 * C17172 + C34105 * C17177) *
               C50779 * C50757) *
              C50677 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C19841 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C50630) *
                C2291 +
            ((C36366 + C36367) * C19841 + (C36368 + C36369) * C50630) * C2292 +
            C36389 * C2293) *
               C1676 -
           (C37991 * C2293 +
            ((C37050 + C37051) * C50630 + (C37052 + C37053) * C19841) * C2292 +
            ((C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                 C50630 +
             (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                 C19841) *
                C2291) *
               C50757) *
              C50677 * C1027 +
          ((((C33789 + C33788) * C19841 + (C33787 + C33786) * C50630) * C2291 +
            ((C34328 + C34329) * C19841 + (C34330 + C34331) * C50630) * C2292 +
            ((C37054 + C37055) * C19841 + (C37056 + C37057) * C50630) * C2293) *
               C50757 -
           (C36386 * C2293 +
            ((C33592 + C33593) * C50630 + (C33594 + C33595) * C19841) * C2292 +
            ((C33393 + C33392) * C50630 + (C33391 + C33390) * C19841) * C2291) *
               C1676) *
              C50677 * C1028 +
          (((C33406 * C19841 + C33407 * C50630) * C2291 +
            ((C33591 + C33590) * C19841 + (C33589 + C33588) * C50630) * C2292 +
            ((C33600 + C33601) * C19841 + (C33602 + C33603) * C50630) * C2293) *
               C1676 -
           (((C33356 * C2673 + C50854 * C2677 + C33355 * C1568 +
              C33353 * C1575) *
                 C50630 +
             (C33356 * C2668 + C50854 * C2674 + C33355 * C1563 +
              C33353 * C1569) *
                 C19841) *
                C2293 +
            ((C34335 + C34334) * C50630 + (C34333 + C34332) * C19841) * C2292 +
            (C34104 * C50630 + C34105 * C19841) * C2291) *
               C50757) *
              C50677 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C19841 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C50630) *
                C2291 +
            ((C36366 + C36367) * C19841 + (C36368 + C36369) * C50630) * C2292 +
            C36389 * C2293) *
               C1676 -
           (C37991 * C2293 +
            ((C37050 + C37051) * C50630 + (C37052 + C37053) * C19841) * C2292 +
            ((C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                 C50630 +
             (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                 C19841) *
                C2291) *
               C50757) *
              C278 +
          ((((C37053 + C37052) * C19841 + (C37051 + C37050) * C50630) * C2291 +
            ((C37049 + C37048) * C19841 + (C37047 + C37046) * C50630) * C2292 +
            ((C37987 + C37988) * C19841 + (C37989 + C37990) * C50630) * C2293) *
               C50757 -
           (C37318 * C2293 +
            ((C36373 + C36372) * C50630 + (C36371 + C36370) * C19841) * C2292 +
            ((C36369 + C36368) * C50630 + (C36367 + C36366) * C19841) * C2291) *
               C1676) *
              C279 +
          ((C36389 * C2291 +
            ((C36377 + C36376) * C19841 + (C36375 + C36374) * C50630) * C2292 +
            ((C37314 + C37315) * C19841 + (C37316 + C37317) * C50630) * C2293) *
               C1676 -
           (((C33356 * C20679 + C50854 * C20681 + C33355 * C4171 +
              C33353 * C4174) *
                 C50630 +
             (C33356 * C20678 + C50854 * C20680 + C33355 * C4168 +
              C33353 * C4172) *
                 C19841) *
                C2293 +
            ((C37990 + C37989) * C50630 + (C37988 + C37987) * C19841) * C2292 +
            C37991 * C2291) *
               C50757) *
              C280) *
         C50658) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C38937 * C122 + C38933 * C129 + C38938 * C463 + C38934 * C477 +
             C38939 * C464 + C38935 * C478 + C38940 * C1849 + C38936 * C1857) *
                C19841 +
            (C38937 * C130 + C38933 * C143 + C38938 * C476 + C38934 * C493 +
             C38939 * C479 + C38935 * C494 + C38940 * C1856 + C38936 * C1861) *
                C50630) *
               C50779 * C1676 -
           ((C38940 * C5570 + C38936 * C5575 + C38939 * C1856 + C38935 * C1861 +
             C38938 * C479 + C38934 * C494 + C38937 * C476 + C38933 * C493) *
                C50630 +
            (C38940 * C5566 + C38936 * C5569 + C38939 * C1849 + C38935 * C1857 +
             C38938 * C464 + C38934 * C478 + C38937 * C463 + C38933 * C477) *
                C19841) *
               C50779 * C50757) *
              C50677 * C1027 +
          (((C38937 * C462 + C38933 * C475 + C38938 * C465 + C38934 * C480 +
             C38939 * C1848 + C38935 * C1855 + C38940 * C5567 +
             C38936 * C5571) *
                C19841 +
            (C38937 * C474 + C38933 * C492 + C38938 * C481 + C38934 * C495 +
             C38939 * C1854 + C38935 * C1860 + C38940 * C5572 +
             C38936 * C5576) *
                C50630) *
               C50779 * C50757 -
           ((C38940 * C1854 + C38936 * C1860 + C38939 * C481 + C38935 * C495 +
             C38938 * C474 + C38934 * C492 + C38937 * C132 + C38933 * C144) *
                C50630 +
            (C38940 * C1848 + C38936 * C1855 + C38939 * C465 + C38935 * C480 +
             C38938 * C462 + C38934 * C475 + C38937 * C123 + C38933 * C131) *
                C19841) *
               C50779 * C1676) *
              C50677 * C1028 +
          (((C38937 * C124 + C38933 * C133 + C38938 * C461 + C38934 * C473 +
             C38939 * C466 + C38935 * C482 + C38940 * C1847 + C38936 * C1853) *
                C19841 +
            (C38937 * C134 + C38933 * C145 + C38938 * C472 + C38934 * C491 +
             C38939 * C483 + C38935 * C496 + C38940 * C1852 + C38936 * C1859) *
                C50630) *
               C50779 * C1676 -
           ((C38940 * C5573 + C38936 * C5577 + C38939 * C1852 + C38935 * C1859 +
             C38938 * C483 + C38934 * C496 + C38937 * C472 + C38933 * C491) *
                C50630 +
            (C38940 * C5568 + C38936 * C5574 + C38939 * C1847 + C38935 * C1853 +
             C38938 * C466 + C38934 * C482 + C38937 * C461 + C38933 * C473) *
                C19841) *
               C50779 * C50757) *
              C50677 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C38937 * C122 + C38933 * C129 + C38938 * C463 + C38934 * C477 +
             C38939 * C464 + C38935 * C478 + C38940 * C1849 + C38936 * C1857) *
                C19841 +
            (C38937 * C130 + C38933 * C143 + C38938 * C476 + C38934 * C493 +
             C38939 * C479 + C38935 * C494 + C38940 * C1856 + C38936 * C1861) *
                C50630) *
               C50779 * C1676 -
           ((C38940 * C5570 + C38936 * C5575 + C38939 * C1856 + C38935 * C1861 +
             C38938 * C479 + C38934 * C494 + C38937 * C476 + C38933 * C493) *
                C50630 +
            (C38940 * C5566 + C38936 * C5569 + C38939 * C1849 + C38935 * C1857 +
             C38938 * C464 + C38934 * C478 + C38937 * C463 + C38933 * C477) *
                C19841) *
               C50779 * C50757) *
              C278 +
          (((C38937 * C889 + C38933 * C894 + C38938 * C1218 + C38934 * C1226 +
             C38939 * C4581 + C38935 * C4589 + C38940 * C6549 +
             C38936 * C6553) *
                C19841 +
            (C38937 * C895 + C38933 * C904 + C38938 * C1225 + C38934 * C1230 +
             C38939 * C4588 + C38935 * C4593 + C38940 * C6552 +
             C38936 * C6555) *
                C50630) *
               C50779 * C50757 -
           ((C38940 * C4588 + C38936 * C4593 + C38939 * C1225 + C38935 * C1230 +
             C38938 * C895 + C38934 * C904 + C38937 * C299 + C38933 * C316) *
                C50630 +
            (C38940 * C4581 + C38936 * C4589 + C38939 * C1218 + C38935 * C1226 +
             C38938 * C889 + C38934 * C894 + C38937 * C286 + C38933 * C300) *
                C19841) *
               C50779 * C1676) *
              C279 +
          (((C38937 * C287 + C38933 * C301 + C38938 * C1565 + C38934 * C1573 +
             C38939 * C2666 + C38935 * C2669 + C38940 * C4579 +
             C38936 * C4585) *
                C19841 +
            (C38937 * C302 + C38933 * C317 + C38938 * C1572 + C38934 * C1577 +
             C38939 * C2670 + C38935 * C2675 + C38940 * C4584 +
             C38936 * C4591) *
                C50630) *
               C50779 * C1676 -
           ((C38940 * C22965 + C38936 * C22967 + C38939 * C4584 +
             C38935 * C4591 + C38938 * C2670 + C38934 * C2675 + C38937 * C1572 +
             C38933 * C1577) *
                C50630 +
            (C38940 * C22964 + C38936 * C22966 + C38939 * C4579 +
             C38935 * C4585 + C38938 * C2666 + C38934 * C2669 + C38937 * C1565 +
             C38933 * C1573) *
                C19841) *
               C50779 * C50757) *
              C280) *
         C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[195] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C44260 * C122 + C50970 * C129 + C44261 * C463 +
                      C50971 * C477 + C44262 * C464 + C44259 * C478) *
                         C49749 +
                     (C44260 * C130 + C50970 * C143 + C44261 * C476 +
                      C50971 * C493 + C44262 * C479 + C44259 * C494) *
                         C50904 +
                     (C44300 + C44301 + C44302) * C49742 +
                     (C44303 + C44304 + C44305) * C50635) *
                        C50779 * C50693 * C50919 -
                    ((C44488 + C44489 + C44490) * C50635 +
                     (C44491 + C44492 + C44493) * C49742 +
                     (C44262 * C1225 + C44259 * C1230 + C44261 * C895 +
                      C50971 * C904 + C44260 * C299 + C50970 * C316) *
                         C50904 +
                     (C44262 * C1218 + C44259 * C1226 + C44261 * C889 +
                      C50971 * C894 + C44260 * C286 + C50970 * C300) *
                         C49749) *
                        C50779 * C50693 * C50729) *
                       C50962 +
                   (((C44493 + C44492 + C44491) * C49749 +
                     (C44490 + C44489 + C44488) * C50904 +
                     (C44840 + C44841 + C44842) * C49742 +
                     (C44843 + C44844 + C44845) * C50635) *
                        C50779 * C50693 * C50729 -
                    ((C44306 + C44307 + C44308) * C50635 +
                     (C44309 + C44310 + C44311) * C49742 +
                     (C44305 + C44304 + C44303) * C50904 +
                     (C44302 + C44301 + C44300) * C49749) *
                        C50779 * C50693 * C50919) *
                       C50963 +
                   (((C44311 + C44310 + C44309) * C49749 +
                     (C44308 + C44307 + C44306) * C50904 +
                     (C44312 + C44313 + C44314) * C49742 +
                     (C44315 + C44316 + C44317) * C50635) *
                        C50779 * C50693 * C50919 -
                    ((C44262 * C1219 + C44259 * C1227 + C44261 * C901 +
                      C50971 * C907 + C44260 * C293 + C50970 * C313) *
                         C50635 +
                     (C44262 * C1215 + C44259 * C1220 + C44261 * C892 +
                      C50971 * C900 + C44260 * C283 + C50970 * C294) *
                         C49742 +
                     (C44845 + C44844 + C44843) * C50904 +
                     (C44842 + C44841 + C44840) * C49749) *
                        C50779 * C50693 * C50729) *
                       C638)) /
                 (p * q * std::sqrt(p + q));
    d2ee[196] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C44260 * C122 + C50970 * C129 + C44261 * C463 +
                       C50971 * C477 + C44262 * C464 + C44259 * C478) *
                          C49749 +
                      (C44260 * C130 + C50970 * C143 + C44261 * C476 +
                       C50971 * C493 + C44262 * C479 + C44259 * C494) *
                          C50904 +
                      (C44300 + C44301 + C44302) * C49742 +
                      (C44303 + C44304 + C44305) * C50635) *
                         C50779 * C50920 -
                     ((C44670 + C44671 + C44672) * C50635 +
                      (C44673 + C44674 + C44675) * C49742 +
                      (C44262 * C1856 + C44259 * C1861 + C44261 * C479 +
                       C50971 * C494 + C44260 * C476 + C50970 * C493) *
                          C50904 +
                      (C44262 * C1849 + C44259 * C1857 + C44261 * C464 +
                       C50971 * C478 + C44260 * C463 + C50970 * C477) *
                          C49749) *
                         C50779 * C50757) *
                        C50919 +
                    (((C44260 * C889 + C50970 * C894 + C44261 * C1218 +
                       C50971 * C1226 + C44262 * C4581 + C44259 * C4589) *
                          C49749 +
                      (C44260 * C895 + C50970 * C904 + C44261 * C1225 +
                       C50971 * C1230 + C44262 * C4588 + C44259 * C4593) *
                          C50904 +
                      (C45216 + C45217 + C45218) * C49742 +
                      (C45219 + C45220 + C45221) * C50635) *
                         C50779 * C50757 -
                     ((C44488 + C44489 + C44490) * C50635 +
                      (C44491 + C44492 + C44493) * C49742 +
                      (C44262 * C1225 + C44259 * C1230 + C44261 * C895 +
                       C50971 * C904 + C44260 * C299 + C50970 * C316) *
                          C50904 +
                      (C44262 * C1218 + C44259 * C1226 + C44261 * C889 +
                       C50971 * C894 + C44260 * C286 + C50970 * C300) *
                          C49749) *
                         C50779 * C50920) *
                        C50729) *
                       C281 +
                   ((((C44675 + C44674 + C44673) * C49749 +
                      (C44672 + C44671 + C44670) * C50904 +
                      (C45004 + C45005 + C45006) * C49742 +
                      (C45007 + C45008 + C45009) * C50635) *
                         C50779 * C50757 -
                     ((C44306 + C44307 + C44308) * C50635 +
                      (C44309 + C44310 + C44311) * C49742 +
                      (C44305 + C44304 + C44303) * C50904 +
                      (C44302 + C44301 + C44300) * C49749) *
                         C50779 * C50920) *
                        C50919 +
                    (((C44493 + C44492 + C44491) * C49749 +
                      (C44490 + C44489 + C44488) * C50904 +
                      (C44840 + C44841 + C44842) * C49742 +
                      (C44843 + C44844 + C44845) * C50635) *
                         C50779 * C50920 -
                     ((C44262 * C6137 + C44259 * C6139 + C44261 * C1221 +
                       C50971 * C1228 + C44260 * C899 + C50970 * C906) *
                          C50635 +
                      (C44262 * C6136 + C44259 * C6138 + C44261 * C1216 +
                       C50971 * C1222 + C44260 * C891 + C50970 * C898) *
                          C49742 +
                      (C45221 + C45220 + C45219) * C50904 +
                      (C45218 + C45217 + C45216) * C49749) *
                         C50779 * C50757) *
                        C50729) *
                       C50664)) /
                 (p * q * std::sqrt(p + q));
    d2ee[197] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C44260 * C122 + C50970 * C129 + C44261 * C463 +
                      C50971 * C477 + C44262 * C464 + C44259 * C478) *
                         C49749 +
                     (C44260 * C130 + C50970 * C143 + C44261 * C476 +
                      C50971 * C493 + C44262 * C479 + C44259 * C494) *
                         C50904 +
                     (C44300 + C44301 + C44302) * C49742 +
                     (C44303 + C44304 + C44305) * C50635) *
                        C50779 * C50693 * C278 -
                    ((C44488 + C44489 + C44490) * C50635 +
                     (C44491 + C44492 + C44493) * C49742 +
                     (C44262 * C1225 + C44259 * C1230 + C44261 * C895 +
                      C50971 * C904 + C44260 * C299 + C50970 * C316) *
                         C50904 +
                     (C44262 * C1218 + C44259 * C1226 + C44261 * C889 +
                      C50971 * C894 + C44260 * C286 + C50970 * C300) *
                         C49749) *
                        C50779 * C50693 * C279 +
                    ((C44260 * C287 + C50970 * C301 + C44261 * C1565 +
                      C50971 * C1573 + C44262 * C2666 + C44259 * C2669) *
                         C49749 +
                     (C44260 * C302 + C50970 * C317 + C44261 * C1572 +
                      C50971 * C1577 + C44262 * C2670 + C44259 * C2675) *
                         C50904 +
                     (C44494 + C44495 + C44496) * C49742 +
                     (C44497 + C44498 + C44499) * C50635) *
                        C50779 * C50693 * C280) *
                       C281 +
                   (((C44493 + C44492 + C44491) * C49749 +
                     (C44490 + C44489 + C44488) * C50904 +
                     (C44260 * C284 + C50970 * C296 + C44261 * C891 +
                      C50971 * C898 + C44262 * C1216 + C44259 * C1222) *
                         C49742 +
                     (C44260 * C295 + C50970 * C314 + C44261 * C899 +
                      C50971 * C906 + C44262 * C1221 + C44259 * C1228) *
                         C50635) *
                        C50779 * C50693 * C279 -
                    ((C44306 + C44307 + C44308) * C50635 +
                     (C44309 + C44310 + C44311) * C49742 +
                     (C44305 + C44304 + C44303) * C50904 +
                     (C44302 + C44301 + C44300) * C49749) *
                        C50779 * C50693 * C278 -
                    ((C44262 * C2673 + C44259 * C2677 + C44261 * C1568 +
                      C50971 * C1575 + C44260 * C306 + C50970 * C319) *
                         C50635 +
                     (C44262 * C2668 + C44259 * C2674 + C44261 * C1563 +
                      C50971 * C1569 + C44260 * C289 + C50970 * C305) *
                         C49742 +
                     (C44499 + C44498 + C44497) * C50904 +
                     (C44496 + C44495 + C44494) * C49749) *
                        C50779 * C50693 * C280) *
                       C50664)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C44260 * C122 + C50970 * C129 + C44261 * C463 +
                     C50971 * C477 + C44262 * C464 + C44259 * C478) *
                        C49749 +
                    (C44260 * C130 + C50970 * C143 + C44261 * C476 +
                     C50971 * C493 + C44262 * C479 + C44259 * C494) *
                        C50904 +
                    (C44300 + C44301 + C44302) * C49742 +
                    (C44303 + C44304 + C44305) * C50635) *
                       C50779 * C50693 * C50677 * C113 -
                   ((C44306 + C44307 + C44308) * C50635 +
                    (C44309 + C44310 + C44311) * C49742 +
                    (C44305 + C44304 + C44303) * C50904 +
                    (C44302 + C44301 + C44300) * C49749) *
                       C50779 * C50693 * C50677 * C114 +
                   ((C44311 + C44310 + C44309) * C49749 +
                    (C44308 + C44307 + C44306) * C50904 +
                    (C44312 + C44313 + C44314) * C49742 +
                    (C44315 + C44316 + C44317) * C50635) *
                       C50779 * C50693 * C50677 * C115 -
                   ((C44262 * C488 + C44259 * C499 + C44261 * C487 +
                     C50971 * C498 + C44260 * C137 + C50970 * C147) *
                        C50635 +
                    (C44262 * C469 + C44259 * C489 + C44261 * C468 +
                     C50971 * C486 + C44260 * C126 + C50970 * C138) *
                        C49742 +
                    (C44317 + C44316 + C44315) * C50904 +
                    (C44314 + C44313 + C44312) * C49749) *
                       C50779 * C50693 * C50677 * C116)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C44260 * C122 + C50970 * C129 + C44261 * C463 +
                      C50971 * C477 + C44262 * C464 + C44259 * C478) *
                         C49749 +
                     (C44260 * C130 + C50970 * C143 + C44261 * C476 +
                      C50971 * C493 + C44262 * C479 + C44259 * C494) *
                         C50904 +
                     (C44300 + C44301 + C44302) * C49742 +
                     (C44303 + C44304 + C44305) * C50635) *
                        C50779 * C457 -
                    ((C44670 + C44671 + C44672) * C50635 +
                     (C44673 + C44674 + C44675) * C49742 +
                     (C44262 * C1856 + C44259 * C1861 + C44261 * C479 +
                      C50971 * C494 + C44260 * C476 + C50970 * C493) *
                         C50904 +
                     (C44262 * C1849 + C44259 * C1857 + C44261 * C464 +
                      C50971 * C478 + C44260 * C463 + C50970 * C477) *
                         C49749) *
                        C50779 * C458 +
                    ((C44260 * C464 + C50970 * C478 + C44261 * C1849 +
                      C50971 * C1857 + C44262 * C5566 + C44259 * C5569) *
                         C49749 +
                     (C44260 * C479 + C50970 * C494 + C44261 * C1856 +
                      C50971 * C1861 + C44262 * C5570 + C44259 * C5575) *
                         C50904 +
                     (C44676 + C44677 + C44678) * C49742 +
                     (C44679 + C44680 + C44681) * C50635) *
                        C50779 * C459) *
                       C50677 * C281 +
                   (((C44675 + C44674 + C44673) * C49749 +
                     (C44672 + C44671 + C44670) * C50904 +
                     (C44260 * C461 + C50970 * C473 + C44261 * C466 +
                      C50971 * C482 + C44262 * C1847 + C44259 * C1853) *
                         C49742 +
                     (C44260 * C472 + C50970 * C491 + C44261 * C483 +
                      C50971 * C496 + C44262 * C1852 + C44259 * C1859) *
                         C50635) *
                        C50779 * C458 -
                    ((C44306 + C44307 + C44308) * C50635 +
                     (C44309 + C44310 + C44311) * C49742 +
                     (C44305 + C44304 + C44303) * C50904 +
                     (C44302 + C44301 + C44300) * C49749) *
                        C50779 * C457 -
                    ((C44262 * C5573 + C44259 * C5577 + C44261 * C1852 +
                      C50971 * C1859 + C44260 * C483 + C50970 * C496) *
                         C50635 +
                     (C44262 * C5568 + C44259 * C5574 + C44261 * C1847 +
                      C50971 * C1853 + C44260 * C466 + C50970 * C482) *
                         C49742 +
                     (C44681 + C44680 + C44679) * C50904 +
                     (C44678 + C44677 + C44676) * C49749) *
                        C50779 * C459) *
                       C50677 * C50664)) /
                     (p * q * std::sqrt(p + q));
    d2ee[198] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C44260 * C122 + C50970 * C129 + C44261 * C463 +
                      C50971 * C477 + C44262 * C464 + C44259 * C478) *
                         C49749 +
                     (C44260 * C130 + C50970 * C143 + C44261 * C476 +
                      C50971 * C493 + C44262 * C479 + C44259 * C494) *
                         C50904 +
                     (C44300 + C44301 + C44302) * C49742 +
                     (C44303 + C44304 + C44305) * C50635) *
                        C50779 * C50920 -
                    ((C44670 + C44671 + C44672) * C50635 +
                     (C44673 + C44674 + C44675) * C49742 +
                     (C44262 * C1856 + C44259 * C1861 + C44261 * C479 +
                      C50971 * C494 + C44260 * C476 + C50970 * C493) *
                         C50904 +
                     (C44262 * C1849 + C44259 * C1857 + C44261 * C464 +
                      C50971 * C478 + C44260 * C463 + C50970 * C477) *
                         C49749) *
                        C50779 * C50757) *
                       C50677 * C50962 +
                   (((C44675 + C44674 + C44673) * C49749 +
                     (C44672 + C44671 + C44670) * C50904 +
                     (C45004 + C45005 + C45006) * C49742 +
                     (C45007 + C45008 + C45009) * C50635) *
                        C50779 * C50757 -
                    ((C44306 + C44307 + C44308) * C50635 +
                     (C44309 + C44310 + C44311) * C49742 +
                     (C44305 + C44304 + C44303) * C50904 +
                     (C44302 + C44301 + C44300) * C49749) *
                        C50779 * C50920) *
                       C50677 * C50963 +
                   (((C44311 + C44310 + C44309) * C49749 +
                     (C44308 + C44307 + C44306) * C50904 +
                     (C44312 + C44313 + C44314) * C49742 +
                     (C44315 + C44316 + C44317) * C50635) *
                        C50779 * C50920 -
                    ((C44262 * C1850 + C44259 * C1858 + C44261 * C485 +
                      C50971 * C497 + C44260 * C470 + C50970 * C490) *
                         C50635 +
                     (C44262 * C1846 + C44259 * C1851 + C44261 * C467 +
                      C50971 * C484 + C44260 * C460 + C50970 * C471) *
                         C49742 +
                     (C45009 + C45008 + C45007) * C50904 +
                     (C45006 + C45005 + C45004) * C49749) *
                        C50779 * C50757) *
                       C50677 * C638)) /
                 (p * q * std::sqrt(p + q));
    d2ee[199] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((C44260 * C122 + C50970 * C129 + C44261 * C463 +
                     C50971 * C477 + C44262 * C464 + C44259 * C478) *
                        C49749 +
                    (C44260 * C130 + C50970 * C143 + C44261 * C476 +
                     C50971 * C493 + C44262 * C479 + C44259 * C494) *
                        C50904 +
                    (C44300 + C44301 + C44302) * C49742 +
                    (C44303 + C44304 + C44305) * C50635) *
                       C50779 * C50693 * C50677 * C113 -
                   ((C44306 + C44307 + C44308) * C50635 +
                    (C44309 + C44310 + C44311) * C49742 +
                    (C44305 + C44304 + C44303) * C50904 +
                    (C44302 + C44301 + C44300) * C49749) *
                       C50779 * C50693 * C50677 * C114 +
                   ((C44311 + C44310 + C44309) * C49749 +
                    (C44308 + C44307 + C44306) * C50904 +
                    (C44312 + C44313 + C44314) * C49742 +
                    (C44315 + C44316 + C44317) * C50635) *
                       C50779 * C50693 * C50677 * C115 -
                   ((C44262 * C488 + C44259 * C499 + C44261 * C487 +
                     C50971 * C498 + C44260 * C137 + C50970 * C147) *
                        C50635 +
                    (C44262 * C469 + C44259 * C489 + C44261 * C468 +
                     C50971 * C486 + C44260 * C126 + C50970 * C138) *
                        C49742 +
                    (C44317 + C44316 + C44315) * C50904 +
                    (C44314 + C44313 + C44312) * C49749) *
                       C50779 * C50693 * C50677 * C116)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C44260 * C122 + C50970 * C129 + C44261 * C463 +
                      C50971 * C477 + C44262 * C464 + C44259 * C478) *
                         C49749 +
                     (C44260 * C130 + C50970 * C143 + C44261 * C476 +
                      C50971 * C493 + C44262 * C479 + C44259 * C494) *
                         C50904 +
                     (C44300 + C44301 + C44302) * C49742 +
                     (C44303 + C44304 + C44305) * C50635) *
                        C50779 * C50693 * C278 -
                    ((C44488 + C44489 + C44490) * C50635 +
                     (C44491 + C44492 + C44493) * C49742 +
                     (C44262 * C1225 + C44259 * C1230 + C44261 * C895 +
                      C50971 * C904 + C44260 * C299 + C50970 * C316) *
                         C50904 +
                     (C44262 * C1218 + C44259 * C1226 + C44261 * C889 +
                      C50971 * C894 + C44260 * C286 + C50970 * C300) *
                         C49749) *
                        C50779 * C50693 * C279 +
                    ((C44260 * C287 + C50970 * C301 + C44261 * C1565 +
                      C50971 * C1573 + C44262 * C2666 + C44259 * C2669) *
                         C49749 +
                     (C44260 * C302 + C50970 * C317 + C44261 * C1572 +
                      C50971 * C1577 + C44262 * C2670 + C44259 * C2675) *
                         C50904 +
                     (C44494 + C44495 + C44496) * C49742 +
                     (C44497 + C44498 + C44499) * C50635) *
                        C50779 * C50693 * C280) *
                       C281 +
                   (((C44493 + C44492 + C44491) * C49749 +
                     (C44490 + C44489 + C44488) * C50904 +
                     (C44260 * C284 + C50970 * C296 + C44261 * C891 +
                      C50971 * C898 + C44262 * C1216 + C44259 * C1222) *
                         C49742 +
                     (C44260 * C295 + C50970 * C314 + C44261 * C899 +
                      C50971 * C906 + C44262 * C1221 + C44259 * C1228) *
                         C50635) *
                        C50779 * C50693 * C279 -
                    ((C44306 + C44307 + C44308) * C50635 +
                     (C44309 + C44310 + C44311) * C49742 +
                     (C44305 + C44304 + C44303) * C50904 +
                     (C44302 + C44301 + C44300) * C49749) *
                        C50779 * C50693 * C278 -
                    ((C44262 * C2673 + C44259 * C2677 + C44261 * C1568 +
                      C50971 * C1575 + C44260 * C306 + C50970 * C319) *
                         C50635 +
                     (C44262 * C2668 + C44259 * C2674 + C44261 * C1563 +
                      C50971 * C1569 + C44260 * C289 + C50970 * C305) *
                         C49742 +
                     (C44499 + C44498 + C44497) * C50904 +
                     (C44496 + C44495 + C44494) * C49749) *
                        C50779 * C50693 * C280) *
                       C50664)) /
                     (p * q * std::sqrt(p + q));
    d2ee[200] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C44260 * C122 + C50970 * C129 + C44261 * C463 +
                      C50971 * C477 + C44262 * C464 + C44259 * C478) *
                         C49749 +
                     (C44260 * C130 + C50970 * C143 + C44261 * C476 +
                      C50971 * C493 + C44262 * C479 + C44259 * C494) *
                         C50904 +
                     (C44300 + C44301 + C44302) * C49742 +
                     (C44303 + C44304 + C44305) * C50635) *
                        C50779 * C50693 * C50964 -
                    ((C44488 + C44489 + C44490) * C50635 +
                     (C44491 + C44492 + C44493) * C49742 +
                     (C44262 * C1225 + C44259 * C1230 + C44261 * C895 +
                      C50971 * C904 + C44260 * C299 + C50970 * C316) *
                         C50904 +
                     (C44262 * C1218 + C44259 * C1226 + C44261 * C889 +
                      C50971 * C894 + C44260 * C286 + C50970 * C300) *
                         C49749) *
                        C50779 * C50693 * C50965 +
                    ((C44260 * C287 + C50970 * C301 + C44261 * C1565 +
                      C50971 * C1573 + C44262 * C2666 + C44259 * C2669) *
                         C49749 +
                     (C44260 * C302 + C50970 * C317 + C44261 * C1572 +
                      C50971 * C1577 + C44262 * C2670 + C44259 * C2675) *
                         C50904 +
                     (C44494 + C44495 + C44496) * C49742 +
                     (C44497 + C44498 + C44499) * C50635) *
                        C50779 * C50693 * C1331) *
                       C50911 +
                   (((C44493 + C44492 + C44491) * C49749 +
                     (C44490 + C44489 + C44488) * C50904 +
                     (C44840 + C44841 + C44842) * C49742 +
                     (C44843 + C44844 + C44845) * C50635) *
                        C50779 * C50693 * C50965 -
                    ((C44306 + C44307 + C44308) * C50635 +
                     (C44309 + C44310 + C44311) * C49742 +
                     (C44305 + C44304 + C44303) * C50904 +
                     (C44302 + C44301 + C44300) * C49749) *
                        C50779 * C50693 * C50964 -
                    ((C44262 * C2673 + C44259 * C2677 + C44261 * C1568 +
                      C50971 * C1575 + C44260 * C306 + C50970 * C319) *
                         C50635 +
                     (C44262 * C2668 + C44259 * C2674 + C44261 * C1563 +
                      C50971 * C1569 + C44260 * C289 + C50970 * C305) *
                         C49742 +
                     (C44499 + C44498 + C44497) * C50904 +
                     (C44496 + C44495 + C44494) * C49749) *
                        C50779 * C50693 * C1331) *
                       C50664)) /
                 (p * q * std::sqrt(p + q));
    d2ee[201] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C44260 * C122 + C50970 * C129 + C44261 * C463 +
                      C50971 * C477 + C44262 * C464 + C44259 * C478) *
                         C49749 +
                     (C44260 * C130 + C50970 * C143 + C44261 * C476 +
                      C50971 * C493 + C44262 * C479 + C44259 * C494) *
                         C50904 +
                     (C44300 + C44301 + C44302) * C49742 +
                     (C44303 + C44304 + C44305) * C50635) *
                        C50779 * C50920 -
                    ((C44670 + C44671 + C44672) * C50635 +
                     (C44673 + C44674 + C44675) * C49742 +
                     (C44262 * C1856 + C44259 * C1861 + C44261 * C479 +
                      C50971 * C494 + C44260 * C476 + C50970 * C493) *
                         C50904 +
                     (C44262 * C1849 + C44259 * C1857 + C44261 * C464 +
                      C50971 * C478 + C44260 * C463 + C50970 * C477) *
                         C49749) *
                        C50779 * C50757) *
                       C50964 +
                   (((C44260 * C889 + C50970 * C894 + C44261 * C1218 +
                      C50971 * C1226 + C44262 * C4581 + C44259 * C4589) *
                         C49749 +
                     (C44260 * C895 + C50970 * C904 + C44261 * C1225 +
                      C50971 * C1230 + C44262 * C4588 + C44259 * C4593) *
                         C50904 +
                     (C45216 + C45217 + C45218) * C49742 +
                     (C45219 + C45220 + C45221) * C50635) *
                        C50779 * C50757 -
                    ((C44488 + C44489 + C44490) * C50635 +
                     (C44491 + C44492 + C44493) * C49742 +
                     (C44262 * C1225 + C44259 * C1230 + C44261 * C895 +
                      C50971 * C904 + C44260 * C299 + C50970 * C316) *
                         C50904 +
                     (C44262 * C1218 + C44259 * C1226 + C44261 * C889 +
                      C50971 * C894 + C44260 * C286 + C50970 * C300) *
                         C49749) *
                        C50779 * C50920) *
                       C50965 +
                   (((C44260 * C287 + C50970 * C301 + C44261 * C1565 +
                      C50971 * C1573 + C44262 * C2666 + C44259 * C2669) *
                         C49749 +
                     (C44260 * C302 + C50970 * C317 + C44261 * C1572 +
                      C50971 * C1577 + C44262 * C2670 + C44259 * C2675) *
                         C50904 +
                     (C44494 + C44495 + C44496) * C49742 +
                     (C44497 + C44498 + C44499) * C50635) *
                        C50779 * C50920 -
                    ((C44262 * C4582 + C44259 * C4590 + C44261 * C2672 +
                      C50971 * C2676 + C44260 * C1570 + C50970 * C1576) *
                         C50635 +
                     (C44262 * C4578 + C44259 * C4583 + C44261 * C2667 +
                      C50971 * C2671 + C44260 * C1564 + C50970 * C1571) *
                         C49742 +
                     (C44262 * C4584 + C44259 * C4591 + C44261 * C2670 +
                      C50971 * C2675 + C44260 * C1572 + C50970 * C1577) *
                         C50904 +
                     (C44262 * C4579 + C44259 * C4585 + C44261 * C2666 +
                      C50971 * C2669 + C44260 * C1565 + C50970 * C1573) *
                         C49749) *
                        C50779 * C50757) *
                       C1331) *
                  C50658) /
                 (p * q * std::sqrt(p + q));
    d2ee[202] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C44260 * C122 + C50970 * C129 + C44261 * C463 +
                     C50971 * C477 + C44262 * C464 + C44259 * C478) *
                        C49749 +
                    (C44260 * C130 + C50970 * C143 + C44261 * C476 +
                     C50971 * C493 + C44262 * C479 + C44259 * C494) *
                        C50904 +
                    (C44300 + C44301 + C44302) * C49742 +
                    (C44303 + C44304 + C44305) * C50635) *
                       C50779 * C50693 * C1096 -
                   ((C44488 + C44489 + C44490) * C50635 +
                    (C44491 + C44492 + C44493) * C49742 +
                    (C44262 * C1225 + C44259 * C1230 + C44261 * C895 +
                     C50971 * C904 + C44260 * C299 + C50970 * C316) *
                        C50904 +
                    (C44262 * C1218 + C44259 * C1226 + C44261 * C889 +
                     C50971 * C894 + C44260 * C286 + C50970 * C300) *
                        C49749) *
                       C50779 * C50693 * C1097 +
                   ((C44260 * C287 + C50970 * C301 + C44261 * C1565 +
                     C50971 * C1573 + C44262 * C2666 + C44259 * C2669) *
                        C49749 +
                    (C44260 * C302 + C50970 * C317 + C44261 * C1572 +
                     C50971 * C1577 + C44262 * C2670 + C44259 * C2675) *
                        C50904 +
                    (C44494 + C44495 + C44496) * C49742 +
                    (C44497 + C44498 + C44499) * C50635) *
                       C50779 * C50693 * C1098 -
                   ((C44262 * C3655 + C44259 * C3659 + C44261 * C3202 +
                     C50971 * C3206 + C44260 * C1109 + C50970 * C1115) *
                        C50635 +
                    (C44262 * C3653 + C44259 * C3656 + C44261 * C3197 +
                     C50971 * C3201 + C44260 * C1103 + C50970 * C1110) *
                        C49742 +
                    (C44262 * C3657 + C44259 * C3660 + C44261 * C3200 +
                     C50971 * C3205 + C44260 * C1111 + C50970 * C1116) *
                        C50904 +
                    (C44262 * C3654 + C44259 * C3658 + C44261 * C3196 +
                     C50971 * C3199 + C44260 * C1104 + C50970 * C1112) *
                        C49749) *
                       C50779 * C50693 * C1099) *
                  C50658) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C44260 * C122 + C50970 * C129 + C44261 * C463 +
                      C50971 * C477 + C44262 * C464 + C44259 * C478) *
                         C49749 +
                     (C44260 * C130 + C50970 * C143 + C44261 * C476 +
                      C50971 * C493 + C44262 * C479 + C44259 * C494) *
                         C50904 +
                     (C44300 + C44301 + C44302) * C49742 +
                     (C44303 + C44304 + C44305) * C50635) *
                        C50779 * C50693 * C1025 -
                    ((C44488 + C44489 + C44490) * C50635 +
                     (C44491 + C44492 + C44493) * C49742 +
                     (C44262 * C1225 + C44259 * C1230 + C44261 * C895 +
                      C50971 * C904 + C44260 * C299 + C50970 * C316) *
                         C50904 +
                     (C44262 * C1218 + C44259 * C1226 + C44261 * C889 +
                      C50971 * C894 + C44260 * C286 + C50970 * C300) *
                         C49749) *
                        C50779 * C50693 * C50729) *
                       C1027 +
                   (((C44493 + C44492 + C44491) * C49749 +
                     (C44490 + C44489 + C44488) * C50904 +
                     (C44840 + C44841 + C44842) * C49742 +
                     (C44843 + C44844 + C44845) * C50635) *
                        C50779 * C50693 * C50729 -
                    ((C44306 + C44307 + C44308) * C50635 +
                     (C44309 + C44310 + C44311) * C49742 +
                     (C44305 + C44304 + C44303) * C50904 +
                     (C44302 + C44301 + C44300) * C49749) *
                        C50779 * C50693 * C1025) *
                       C1028 +
                   (((C44311 + C44310 + C44309) * C49749 +
                     (C44308 + C44307 + C44306) * C50904 +
                     (C44312 + C44313 + C44314) * C49742 +
                     (C44315 + C44316 + C44317) * C50635) *
                        C50779 * C50693 * C1025 -
                    ((C44262 * C1219 + C44259 * C1227 + C44261 * C901 +
                      C50971 * C907 + C44260 * C293 + C50970 * C313) *
                         C50635 +
                     (C44262 * C1215 + C44259 * C1220 + C44261 * C892 +
                      C50971 * C900 + C44260 * C283 + C50970 * C294) *
                         C49742 +
                     (C44845 + C44844 + C44843) * C50904 +
                     (C44842 + C44841 + C44840) * C49749) *
                        C50779 * C50693 * C50729) *
                       C1029)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C44260 * C122 + C50970 * C129 + C44261 * C463 +
                      C50971 * C477 + C44262 * C464 + C44259 * C478) *
                         C49749 +
                     (C44260 * C130 + C50970 * C143 + C44261 * C476 +
                      C50971 * C493 + C44262 * C479 + C44259 * C494) *
                         C50904 +
                     (C44300 + C44301 + C44302) * C49742 +
                     (C44303 + C44304 + C44305) * C50635) *
                        C50779 * C457 -
                    ((C44670 + C44671 + C44672) * C50635 +
                     (C44673 + C44674 + C44675) * C49742 +
                     (C44262 * C1856 + C44259 * C1861 + C44261 * C479 +
                      C50971 * C494 + C44260 * C476 + C50970 * C493) *
                         C50904 +
                     (C44262 * C1849 + C44259 * C1857 + C44261 * C464 +
                      C50971 * C478 + C44260 * C463 + C50970 * C477) *
                         C49749) *
                        C50779 * C458 +
                    ((C44260 * C464 + C50970 * C478 + C44261 * C1849 +
                      C50971 * C1857 + C44262 * C5566 + C44259 * C5569) *
                         C49749 +
                     (C44260 * C479 + C50970 * C494 + C44261 * C1856 +
                      C50971 * C1861 + C44262 * C5570 + C44259 * C5575) *
                         C50904 +
                     (C44676 + C44677 + C44678) * C49742 +
                     (C44679 + C44680 + C44681) * C50635) *
                        C50779 * C459) *
                       C1025 +
                   (((C44260 * C889 + C50970 * C894 + C44261 * C1218 +
                      C50971 * C1226 + C44262 * C4581 + C44259 * C4589) *
                         C49749 +
                     (C44260 * C895 + C50970 * C904 + C44261 * C1225 +
                      C50971 * C1230 + C44262 * C4588 + C44259 * C4593) *
                         C50904 +
                     (C45216 + C45217 + C45218) * C49742 +
                     (C45219 + C45220 + C45221) * C50635) *
                        C50779 * C458 -
                    ((C44488 + C44489 + C44490) * C50635 +
                     (C44491 + C44492 + C44493) * C49742 +
                     (C44262 * C1225 + C44259 * C1230 + C44261 * C895 +
                      C50971 * C904 + C44260 * C299 + C50970 * C316) *
                         C50904 +
                     (C44262 * C1218 + C44259 * C1226 + C44261 * C889 +
                      C50971 * C894 + C44260 * C286 + C50970 * C300) *
                         C49749) *
                        C50779 * C457 -
                    ((C44262 * C6550 + C44259 * C6554 + C44261 * C4586 +
                      C50971 * C4592 + C44260 * C1223 + C50970 * C1229) *
                         C50635 +
                     (C44262 * C6548 + C44259 * C6551 + C44261 * C4580 +
                      C50971 * C4587 + C44260 * C1217 + C50970 * C1224) *
                         C49742 +
                     (C44262 * C6552 + C44259 * C6555 + C44261 * C4588 +
                      C50971 * C4593 + C44260 * C1225 + C50970 * C1230) *
                         C50904 +
                     (C44262 * C6549 + C44259 * C6553 + C44261 * C4581 +
                      C50971 * C4589 + C44260 * C1218 + C50970 * C1226) *
                         C49749) *
                        C50779 * C459) *
                       C50729) *
                  C50658) /
                     (p * q * std::sqrt(p + q));
    d2ee[203] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C44260 * C122 + C50970 * C129 + C44261 * C463 +
                       C50971 * C477 + C44262 * C464 + C44259 * C478) *
                          C49749 +
                      (C44260 * C130 + C50970 * C143 + C44261 * C476 +
                       C50971 * C493 + C44262 * C479 + C44259 * C494) *
                          C50904 +
                      (C44300 + C44301 + C44302) * C49742 +
                      (C44303 + C44304 + C44305) * C50635) *
                         C50779 * C50920 -
                     ((C44670 + C44671 + C44672) * C50635 +
                      (C44673 + C44674 + C44675) * C49742 +
                      (C44262 * C1856 + C44259 * C1861 + C44261 * C479 +
                       C50971 * C494 + C44260 * C476 + C50970 * C493) *
                          C50904 +
                      (C44262 * C1849 + C44259 * C1857 + C44261 * C464 +
                       C50971 * C478 + C44260 * C463 + C50970 * C477) *
                          C49749) *
                         C50779 * C50757) *
                        C1025 +
                    (((C44260 * C889 + C50970 * C894 + C44261 * C1218 +
                       C50971 * C1226 + C44262 * C4581 + C44259 * C4589) *
                          C49749 +
                      (C44260 * C895 + C50970 * C904 + C44261 * C1225 +
                       C50971 * C1230 + C44262 * C4588 + C44259 * C4593) *
                          C50904 +
                      (C45216 + C45217 + C45218) * C49742 +
                      (C45219 + C45220 + C45221) * C50635) *
                         C50779 * C50757 -
                     ((C44488 + C44489 + C44490) * C50635 +
                      (C44491 + C44492 + C44493) * C49742 +
                      (C44262 * C1225 + C44259 * C1230 + C44261 * C895 +
                       C50971 * C904 + C44260 * C299 + C50970 * C316) *
                          C50904 +
                      (C44262 * C1218 + C44259 * C1226 + C44261 * C889 +
                       C50971 * C894 + C44260 * C286 + C50970 * C300) *
                          C49749) *
                         C50779 * C50920) *
                        C50729) *
                       C50911 +
                   ((((C44675 + C44674 + C44673) * C49749 +
                      (C44672 + C44671 + C44670) * C50904 +
                      (C45004 + C45005 + C45006) * C49742 +
                      (C45007 + C45008 + C45009) * C50635) *
                         C50779 * C50757 -
                     ((C44306 + C44307 + C44308) * C50635 +
                      (C44309 + C44310 + C44311) * C49742 +
                      (C44305 + C44304 + C44303) * C50904 +
                      (C44302 + C44301 + C44300) * C49749) *
                         C50779 * C50920) *
                        C1025 +
                    (((C44493 + C44492 + C44491) * C49749 +
                      (C44490 + C44489 + C44488) * C50904 +
                      (C44840 + C44841 + C44842) * C49742 +
                      (C44843 + C44844 + C44845) * C50635) *
                         C50779 * C50920 -
                     ((C44262 * C6137 + C44259 * C6139 + C44261 * C1221 +
                       C50971 * C1228 + C44260 * C899 + C50970 * C906) *
                          C50635 +
                      (C44262 * C6136 + C44259 * C6138 + C44261 * C1216 +
                       C50971 * C1222 + C44260 * C891 + C50970 * C898) *
                          C49742 +
                      (C45221 + C45220 + C45219) * C50904 +
                      (C45218 + C45217 + C45216) * C49749) *
                         C50779 * C50757) *
                        C50729) *
                       C50664)) /
                 (p * q * std::sqrt(p + q));
    d2ee[204] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C44260 * C122 + C50970 * C129 + C44261 * C463 +
                      C50971 * C477 + C44262 * C464 + C44259 * C478) *
                         C49749 +
                     (C44260 * C130 + C50970 * C143 + C44261 * C476 +
                      C50971 * C493 + C44262 * C479 + C44259 * C494) *
                         C50904 +
                     (C44300 + C44301 + C44302) * C49742 +
                     (C44303 + C44304 + C44305) * C50635) *
                        C50779 * C50693 * C1025 -
                    ((C44488 + C44489 + C44490) * C50635 +
                     (C44491 + C44492 + C44493) * C49742 +
                     (C44262 * C1225 + C44259 * C1230 + C44261 * C895 +
                      C50971 * C904 + C44260 * C299 + C50970 * C316) *
                         C50904 +
                     (C44262 * C1218 + C44259 * C1226 + C44261 * C889 +
                      C50971 * C894 + C44260 * C286 + C50970 * C300) *
                         C49749) *
                        C50779 * C50693 * C50729) *
                       C1027 +
                   (((C44493 + C44492 + C44491) * C49749 +
                     (C44490 + C44489 + C44488) * C50904 +
                     (C44840 + C44841 + C44842) * C49742 +
                     (C44843 + C44844 + C44845) * C50635) *
                        C50779 * C50693 * C50729 -
                    ((C44306 + C44307 + C44308) * C50635 +
                     (C44309 + C44310 + C44311) * C49742 +
                     (C44305 + C44304 + C44303) * C50904 +
                     (C44302 + C44301 + C44300) * C49749) *
                        C50779 * C50693 * C1025) *
                       C1028 +
                   (((C44311 + C44310 + C44309) * C49749 +
                     (C44308 + C44307 + C44306) * C50904 +
                     (C44312 + C44313 + C44314) * C49742 +
                     (C44315 + C44316 + C44317) * C50635) *
                        C50779 * C50693 * C1025 -
                    ((C44262 * C1219 + C44259 * C1227 + C44261 * C901 +
                      C50971 * C907 + C44260 * C293 + C50970 * C313) *
                         C50635 +
                     (C44262 * C1215 + C44259 * C1220 + C44261 * C892 +
                      C50971 * C900 + C44260 * C283 + C50970 * C294) *
                         C49742 +
                     (C44845 + C44844 + C44843) * C50904 +
                     (C44842 + C44841 + C44840) * C49749) *
                        C50779 * C50693 * C50729) *
                       C1029)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((C44260 * C122 + C50970 * C129 + C44261 * C463 +
                     C50971 * C477 + C44262 * C464 + C44259 * C478) *
                        C49749 +
                    (C44260 * C130 + C50970 * C143 + C44261 * C476 +
                     C50971 * C493 + C44262 * C479 + C44259 * C494) *
                        C50904 +
                    (C44300 + C44301 + C44302) * C49742 +
                    (C44303 + C44304 + C44305) * C50635) *
                       C50779 * C50693 * C1096 -
                   ((C44488 + C44489 + C44490) * C50635 +
                    (C44491 + C44492 + C44493) * C49742 +
                    (C44262 * C1225 + C44259 * C1230 + C44261 * C895 +
                     C50971 * C904 + C44260 * C299 + C50970 * C316) *
                        C50904 +
                    (C44262 * C1218 + C44259 * C1226 + C44261 * C889 +
                     C50971 * C894 + C44260 * C286 + C50970 * C300) *
                        C49749) *
                       C50779 * C50693 * C1097 +
                   ((C44260 * C287 + C50970 * C301 + C44261 * C1565 +
                     C50971 * C1573 + C44262 * C2666 + C44259 * C2669) *
                        C49749 +
                    (C44260 * C302 + C50970 * C317 + C44261 * C1572 +
                     C50971 * C1577 + C44262 * C2670 + C44259 * C2675) *
                        C50904 +
                    (C44494 + C44495 + C44496) * C49742 +
                    (C44497 + C44498 + C44499) * C50635) *
                       C50779 * C50693 * C1098 -
                   ((C44262 * C3655 + C44259 * C3659 + C44261 * C3202 +
                     C50971 * C3206 + C44260 * C1109 + C50970 * C1115) *
                        C50635 +
                    (C44262 * C3653 + C44259 * C3656 + C44261 * C3197 +
                     C50971 * C3201 + C44260 * C1103 + C50970 * C1110) *
                        C49742 +
                    (C44262 * C3657 + C44259 * C3660 + C44261 * C3200 +
                     C50971 * C3205 + C44260 * C1111 + C50970 * C1116) *
                        C50904 +
                    (C44262 * C3654 + C44259 * C3658 + C44261 * C3196 +
                     C50971 * C3199 + C44260 * C1104 + C50970 * C1112) *
                        C49749) *
                       C50779 * C50693 * C1099) *
                  C50658) /
                     (p * q * std::sqrt(p + q));
    d2ee[205] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C44260 * C122 + C50970 * C129 + C44261 * C463 +
                       C50971 * C477 + C44262 * C464 + C44259 * C478) *
                          C49749 +
                      (C44260 * C130 + C50970 * C143 + C44261 * C476 +
                       C50971 * C493 + C44262 * C479 + C44259 * C494) *
                          C50904 +
                      (C44300 + C44301 + C44302) * C49742 +
                      (C44303 + C44304 + C44305) * C50635) *
                         C50779 * C1676 -
                     ((C44670 + C44671 + C44672) * C50635 +
                      (C44673 + C44674 + C44675) * C49742 +
                      (C44262 * C1856 + C44259 * C1861 + C44261 * C479 +
                       C50971 * C494 + C44260 * C476 + C50970 * C493) *
                          C50904 +
                      (C44262 * C1849 + C44259 * C1857 + C44261 * C464 +
                       C50971 * C478 + C44260 * C463 + C50970 * C477) *
                          C49749) *
                         C50779 * C50757) *
                        C50919 +
                    (((C44260 * C889 + C50970 * C894 + C44261 * C1218 +
                       C50971 * C1226 + C44262 * C4581 + C44259 * C4589) *
                          C49749 +
                      (C44260 * C895 + C50970 * C904 + C44261 * C1225 +
                       C50971 * C1230 + C44262 * C4588 + C44259 * C4593) *
                          C50904 +
                      (C45216 + C45217 + C45218) * C49742 +
                      (C45219 + C45220 + C45221) * C50635) *
                         C50779 * C50757 -
                     ((C44488 + C44489 + C44490) * C50635 +
                      (C44491 + C44492 + C44493) * C49742 +
                      (C44262 * C1225 + C44259 * C1230 + C44261 * C895 +
                       C50971 * C904 + C44260 * C299 + C50970 * C316) *
                          C50904 +
                      (C44262 * C1218 + C44259 * C1226 + C44261 * C889 +
                       C50971 * C894 + C44260 * C286 + C50970 * C300) *
                          C49749) *
                         C50779 * C1676) *
                        C50729) *
                       C50911 +
                   ((((C44675 + C44674 + C44673) * C49749 +
                      (C44672 + C44671 + C44670) * C50904 +
                      (C45004 + C45005 + C45006) * C49742 +
                      (C45007 + C45008 + C45009) * C50635) *
                         C50779 * C50757 -
                     ((C44306 + C44307 + C44308) * C50635 +
                      (C44309 + C44310 + C44311) * C49742 +
                      (C44305 + C44304 + C44303) * C50904 +
                      (C44302 + C44301 + C44300) * C49749) *
                         C50779 * C1676) *
                        C50919 +
                    (((C44493 + C44492 + C44491) * C49749 +
                      (C44490 + C44489 + C44488) * C50904 +
                      (C44840 + C44841 + C44842) * C49742 +
                      (C44843 + C44844 + C44845) * C50635) *
                         C50779 * C1676 -
                     ((C44262 * C6137 + C44259 * C6139 + C44261 * C1221 +
                       C50971 * C1228 + C44260 * C899 + C50970 * C906) *
                          C50635 +
                      (C44262 * C6136 + C44259 * C6138 + C44261 * C1216 +
                       C50971 * C1222 + C44260 * C891 + C50970 * C898) *
                          C49742 +
                      (C45221 + C45220 + C45219) * C50904 +
                      (C45218 + C45217 + C45216) * C49749) *
                         C50779 * C50757) *
                        C50729) *
                       C50664)) /
                 (p * q * std::sqrt(p + q));
    d2ee[206] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C44260 * C122 + C50970 * C129 + C44261 * C463 +
                      C50971 * C477 + C44262 * C464 + C44259 * C478) *
                         C49749 +
                     (C44260 * C130 + C50970 * C143 + C44261 * C476 +
                      C50971 * C493 + C44262 * C479 + C44259 * C494) *
                         C50904 +
                     (C44300 + C44301 + C44302) * C49742 +
                     (C44303 + C44304 + C44305) * C50635) *
                        C50779 * C50966 -
                    ((C44670 + C44671 + C44672) * C50635 +
                     (C44673 + C44674 + C44675) * C49742 +
                     (C44262 * C1856 + C44259 * C1861 + C44261 * C479 +
                      C50971 * C494 + C44260 * C476 + C50970 * C493) *
                         C50904 +
                     (C44262 * C1849 + C44259 * C1857 + C44261 * C464 +
                      C50971 * C478 + C44260 * C463 + C50970 * C477) *
                         C49749) *
                        C50779 * C50967 +
                    ((C44260 * C464 + C50970 * C478 + C44261 * C1849 +
                      C50971 * C1857 + C44262 * C5566 + C44259 * C5569) *
                         C49749 +
                     (C44260 * C479 + C50970 * C494 + C44261 * C1856 +
                      C50971 * C1861 + C44262 * C5570 + C44259 * C5575) *
                         C50904 +
                     (C44676 + C44677 + C44678) * C49742 +
                     (C44679 + C44680 + C44681) * C50635) *
                        C50779 * C2092) *
                       C50919 +
                   (((C44260 * C889 + C50970 * C894 + C44261 * C1218 +
                      C50971 * C1226 + C44262 * C4581 + C44259 * C4589) *
                         C49749 +
                     (C44260 * C895 + C50970 * C904 + C44261 * C1225 +
                      C50971 * C1230 + C44262 * C4588 + C44259 * C4593) *
                         C50904 +
                     (C45216 + C45217 + C45218) * C49742 +
                     (C45219 + C45220 + C45221) * C50635) *
                        C50779 * C50967 -
                    ((C44488 + C44489 + C44490) * C50635 +
                     (C44491 + C44492 + C44493) * C49742 +
                     (C44262 * C1225 + C44259 * C1230 + C44261 * C895 +
                      C50971 * C904 + C44260 * C299 + C50970 * C316) *
                         C50904 +
                     (C44262 * C1218 + C44259 * C1226 + C44261 * C889 +
                      C50971 * C894 + C44260 * C286 + C50970 * C300) *
                         C49749) *
                        C50779 * C50966 -
                    ((C44262 * C6550 + C44259 * C6554 + C44261 * C4586 +
                      C50971 * C4592 + C44260 * C1223 + C50970 * C1229) *
                         C50635 +
                     (C44262 * C6548 + C44259 * C6551 + C44261 * C4580 +
                      C50971 * C4587 + C44260 * C1217 + C50970 * C1224) *
                         C49742 +
                     (C44262 * C6552 + C44259 * C6555 + C44261 * C4588 +
                      C50971 * C4593 + C44260 * C1225 + C50970 * C1230) *
                         C50904 +
                     (C44262 * C6549 + C44259 * C6553 + C44261 * C4581 +
                      C50971 * C4589 + C44260 * C1218 + C50970 * C1226) *
                         C49749) *
                        C50779 * C2092) *
                       C50729) *
                  C50658) /
                 (p * q * std::sqrt(p + q));
    d2ee[207] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C44260 * C122 + C50970 * C129 + C44261 * C463 +
                      C50971 * C477 + C44262 * C464 + C44259 * C478) *
                         C49749 +
                     (C44260 * C130 + C50970 * C143 + C44261 * C476 +
                      C50971 * C493 + C44262 * C479 + C44259 * C494) *
                         C50904 +
                     (C44300 + C44301 + C44302) * C49742 +
                     (C44303 + C44304 + C44305) * C50635) *
                        C50779 * C1676 -
                    ((C44670 + C44671 + C44672) * C50635 +
                     (C44673 + C44674 + C44675) * C49742 +
                     (C44262 * C1856 + C44259 * C1861 + C44261 * C479 +
                      C50971 * C494 + C44260 * C476 + C50970 * C493) *
                         C50904 +
                     (C44262 * C1849 + C44259 * C1857 + C44261 * C464 +
                      C50971 * C478 + C44260 * C463 + C50970 * C477) *
                         C49749) *
                        C50779 * C50757) *
                       C278 +
                   (((C44260 * C889 + C50970 * C894 + C44261 * C1218 +
                      C50971 * C1226 + C44262 * C4581 + C44259 * C4589) *
                         C49749 +
                     (C44260 * C895 + C50970 * C904 + C44261 * C1225 +
                      C50971 * C1230 + C44262 * C4588 + C44259 * C4593) *
                         C50904 +
                     (C45216 + C45217 + C45218) * C49742 +
                     (C45219 + C45220 + C45221) * C50635) *
                        C50779 * C50757 -
                    ((C44488 + C44489 + C44490) * C50635 +
                     (C44491 + C44492 + C44493) * C49742 +
                     (C44262 * C1225 + C44259 * C1230 + C44261 * C895 +
                      C50971 * C904 + C44260 * C299 + C50970 * C316) *
                         C50904 +
                     (C44262 * C1218 + C44259 * C1226 + C44261 * C889 +
                      C50971 * C894 + C44260 * C286 + C50970 * C300) *
                         C49749) *
                        C50779 * C1676) *
                       C279 +
                   (((C44260 * C287 + C50970 * C301 + C44261 * C1565 +
                      C50971 * C1573 + C44262 * C2666 + C44259 * C2669) *
                         C49749 +
                     (C44260 * C302 + C50970 * C317 + C44261 * C1572 +
                      C50971 * C1577 + C44262 * C2670 + C44259 * C2675) *
                         C50904 +
                     (C44494 + C44495 + C44496) * C49742 +
                     (C44497 + C44498 + C44499) * C50635) *
                        C50779 * C1676 -
                    ((C44262 * C4582 + C44259 * C4590 + C44261 * C2672 +
                      C50971 * C2676 + C44260 * C1570 + C50970 * C1576) *
                         C50635 +
                     (C44262 * C4578 + C44259 * C4583 + C44261 * C2667 +
                      C50971 * C2671 + C44260 * C1564 + C50970 * C1571) *
                         C49742 +
                     (C44262 * C4584 + C44259 * C4591 + C44261 * C2670 +
                      C50971 * C2675 + C44260 * C1572 + C50970 * C1577) *
                         C50904 +
                     (C44262 * C4579 + C44259 * C4585 + C44261 * C2666 +
                      C50971 * C2669 + C44260 * C1565 + C50970 * C1573) *
                         C49749) *
                        C50779 * C50757) *
                       C280) *
                  C50658) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C44260 * C122 + C50970 * C129 + C44261 * C463 +
                      C50971 * C477 + C44262 * C464 + C44259 * C478) *
                         C49749 +
                     (C44260 * C130 + C50970 * C143 + C44261 * C476 +
                      C50971 * C493 + C44262 * C479 + C44259 * C494) *
                         C50904 +
                     (C44300 + C44301 + C44302) * C49742 +
                     (C44303 + C44304 + C44305) * C50635) *
                        C50779 * C1676 -
                    ((C44670 + C44671 + C44672) * C50635 +
                     (C44673 + C44674 + C44675) * C49742 +
                     (C44262 * C1856 + C44259 * C1861 + C44261 * C479 +
                      C50971 * C494 + C44260 * C476 + C50970 * C493) *
                         C50904 +
                     (C44262 * C1849 + C44259 * C1857 + C44261 * C464 +
                      C50971 * C478 + C44260 * C463 + C50970 * C477) *
                         C49749) *
                        C50779 * C50757) *
                       C50677 * C1027 +
                   (((C44675 + C44674 + C44673) * C49749 +
                     (C44672 + C44671 + C44670) * C50904 +
                     (C45004 + C45005 + C45006) * C49742 +
                     (C45007 + C45008 + C45009) * C50635) *
                        C50779 * C50757 -
                    ((C44306 + C44307 + C44308) * C50635 +
                     (C44309 + C44310 + C44311) * C49742 +
                     (C44305 + C44304 + C44303) * C50904 +
                     (C44302 + C44301 + C44300) * C49749) *
                        C50779 * C1676) *
                       C50677 * C1028 +
                   (((C44311 + C44310 + C44309) * C49749 +
                     (C44308 + C44307 + C44306) * C50904 +
                     (C44312 + C44313 + C44314) * C49742 +
                     (C44315 + C44316 + C44317) * C50635) *
                        C50779 * C1676 -
                    ((C44262 * C1850 + C44259 * C1858 + C44261 * C485 +
                      C50971 * C497 + C44260 * C470 + C50970 * C490) *
                         C50635 +
                     (C44262 * C1846 + C44259 * C1851 + C44261 * C467 +
                      C50971 * C484 + C44260 * C460 + C50970 * C471) *
                         C49742 +
                     (C45009 + C45008 + C45007) * C50904 +
                     (C45006 + C45005 + C45004) * C49749) *
                        C50779 * C50757) *
                       C50677 * C1029)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((C44260 * C122 + C50970 * C129 + C44261 * C463 +
                     C50971 * C477 + C44262 * C464 + C44259 * C478) *
                        C49749 +
                    (C44260 * C130 + C50970 * C143 + C44261 * C476 +
                     C50971 * C493 + C44262 * C479 + C44259 * C494) *
                        C50904 +
                    (C44300 + C44301 + C44302) * C49742 +
                    (C44303 + C44304 + C44305) * C50635) *
                       C50779 * C1842 -
                   ((C44670 + C44671 + C44672) * C50635 +
                    (C44673 + C44674 + C44675) * C49742 +
                    (C44262 * C1856 + C44259 * C1861 + C44261 * C479 +
                     C50971 * C494 + C44260 * C476 + C50970 * C493) *
                        C50904 +
                    (C44262 * C1849 + C44259 * C1857 + C44261 * C464 +
                     C50971 * C478 + C44260 * C463 + C50970 * C477) *
                        C49749) *
                       C50779 * C1843 +
                   ((C44260 * C464 + C50970 * C478 + C44261 * C1849 +
                     C50971 * C1857 + C44262 * C5566 + C44259 * C5569) *
                        C49749 +
                    (C44260 * C479 + C50970 * C494 + C44261 * C1856 +
                     C50971 * C1861 + C44262 * C5570 + C44259 * C5575) *
                        C50904 +
                    (C44676 + C44677 + C44678) * C49742 +
                    (C44679 + C44680 + C44681) * C50635) *
                       C50779 * C1844 -
                   ((C44262 * C7434 + C44259 * C7438 + C44261 * C5572 +
                     C50971 * C5576 + C44260 * C1854 + C50970 * C1860) *
                        C50635 +
                    (C44262 * C7432 + C44259 * C7435 + C44261 * C5567 +
                     C50971 * C5571 + C44260 * C1848 + C50970 * C1855) *
                        C49742 +
                    (C44262 * C7436 + C44259 * C7439 + C44261 * C5570 +
                     C50971 * C5575 + C44260 * C1856 + C50970 * C1861) *
                        C50904 +
                    (C44262 * C7433 + C44259 * C7437 + C44261 * C5566 +
                     C50971 * C5569 + C44260 * C1849 + C50970 * C1857) *
                        C49749) *
                       C50779 * C1845) *
                  C50677 * C50658) /
                     (p * q * std::sqrt(p + q));
    d2ee[208] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C44260 * C122 + C50970 * C129 + C44261 * C463 +
                      C50971 * C477 + C44262 * C464 + C44259 * C478) *
                         C49749 +
                     (C44260 * C130 + C50970 * C143 + C44261 * C476 +
                      C50971 * C493 + C44262 * C479 + C44259 * C494) *
                         C50904 +
                     (C44300 + C44301 + C44302) * C49742 +
                     (C44303 + C44304 + C44305) * C50635) *
                        C50779 * C50966 -
                    ((C44670 + C44671 + C44672) * C50635 +
                     (C44673 + C44674 + C44675) * C49742 +
                     (C44262 * C1856 + C44259 * C1861 + C44261 * C479 +
                      C50971 * C494 + C44260 * C476 + C50970 * C493) *
                         C50904 +
                     (C44262 * C1849 + C44259 * C1857 + C44261 * C464 +
                      C50971 * C478 + C44260 * C463 + C50970 * C477) *
                         C49749) *
                        C50779 * C50967 +
                    ((C44260 * C464 + C50970 * C478 + C44261 * C1849 +
                      C50971 * C1857 + C44262 * C5566 + C44259 * C5569) *
                         C49749 +
                     (C44260 * C479 + C50970 * C494 + C44261 * C1856 +
                      C50971 * C1861 + C44262 * C5570 + C44259 * C5575) *
                         C50904 +
                     (C44676 + C44677 + C44678) * C49742 +
                     (C44679 + C44680 + C44681) * C50635) *
                        C50779 * C2092) *
                       C50677 * C50911 +
                   (((C44675 + C44674 + C44673) * C49749 +
                     (C44672 + C44671 + C44670) * C50904 +
                     (C45004 + C45005 + C45006) * C49742 +
                     (C45007 + C45008 + C45009) * C50635) *
                        C50779 * C50967 -
                    ((C44306 + C44307 + C44308) * C50635 +
                     (C44309 + C44310 + C44311) * C49742 +
                     (C44305 + C44304 + C44303) * C50904 +
                     (C44302 + C44301 + C44300) * C49749) *
                        C50779 * C50966 -
                    ((C44262 * C5573 + C44259 * C5577 + C44261 * C1852 +
                      C50971 * C1859 + C44260 * C483 + C50970 * C496) *
                         C50635 +
                     (C44262 * C5568 + C44259 * C5574 + C44261 * C1847 +
                      C50971 * C1853 + C44260 * C466 + C50970 * C482) *
                         C49742 +
                     (C44681 + C44680 + C44679) * C50904 +
                     (C44678 + C44677 + C44676) * C49749) *
                        C50779 * C2092) *
                       C50677 * C50664)) /
                 (p * q * std::sqrt(p + q));
    d2ee[209] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C44260 * C122 + C50970 * C129 + C44261 * C463 +
                      C50971 * C477 + C44262 * C464 + C44259 * C478) *
                         C49749 +
                     (C44260 * C130 + C50970 * C143 + C44261 * C476 +
                      C50971 * C493 + C44262 * C479 + C44259 * C494) *
                         C50904 +
                     (C44300 + C44301 + C44302) * C49742 +
                     (C44303 + C44304 + C44305) * C50635) *
                        C50779 * C1676 -
                    ((C44670 + C44671 + C44672) * C50635 +
                     (C44673 + C44674 + C44675) * C49742 +
                     (C44262 * C1856 + C44259 * C1861 + C44261 * C479 +
                      C50971 * C494 + C44260 * C476 + C50970 * C493) *
                         C50904 +
                     (C44262 * C1849 + C44259 * C1857 + C44261 * C464 +
                      C50971 * C478 + C44260 * C463 + C50970 * C477) *
                         C49749) *
                        C50779 * C50757) *
                       C50677 * C1027 +
                   (((C44675 + C44674 + C44673) * C49749 +
                     (C44672 + C44671 + C44670) * C50904 +
                     (C45004 + C45005 + C45006) * C49742 +
                     (C45007 + C45008 + C45009) * C50635) *
                        C50779 * C50757 -
                    ((C44306 + C44307 + C44308) * C50635 +
                     (C44309 + C44310 + C44311) * C49742 +
                     (C44305 + C44304 + C44303) * C50904 +
                     (C44302 + C44301 + C44300) * C49749) *
                        C50779 * C1676) *
                       C50677 * C1028 +
                   (((C44311 + C44310 + C44309) * C49749 +
                     (C44308 + C44307 + C44306) * C50904 +
                     (C44312 + C44313 + C44314) * C49742 +
                     (C44315 + C44316 + C44317) * C50635) *
                        C50779 * C1676 -
                    ((C44262 * C1850 + C44259 * C1858 + C44261 * C485 +
                      C50971 * C497 + C44260 * C470 + C50970 * C490) *
                         C50635 +
                     (C44262 * C1846 + C44259 * C1851 + C44261 * C467 +
                      C50971 * C484 + C44260 * C460 + C50970 * C471) *
                         C49742 +
                     (C45009 + C45008 + C45007) * C50904 +
                     (C45006 + C45005 + C45004) * C49749) *
                        C50779 * C50757) *
                       C50677 * C1029)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C44260 * C122 + C50970 * C129 + C44261 * C463 +
                      C50971 * C477 + C44262 * C464 + C44259 * C478) *
                         C49749 +
                     (C44260 * C130 + C50970 * C143 + C44261 * C476 +
                      C50971 * C493 + C44262 * C479 + C44259 * C494) *
                         C50904 +
                     (C44300 + C44301 + C44302) * C49742 +
                     (C44303 + C44304 + C44305) * C50635) *
                        C50779 * C1676 -
                    ((C44670 + C44671 + C44672) * C50635 +
                     (C44673 + C44674 + C44675) * C49742 +
                     (C44262 * C1856 + C44259 * C1861 + C44261 * C479 +
                      C50971 * C494 + C44260 * C476 + C50970 * C493) *
                         C50904 +
                     (C44262 * C1849 + C44259 * C1857 + C44261 * C464 +
                      C50971 * C478 + C44260 * C463 + C50970 * C477) *
                         C49749) *
                        C50779 * C50757) *
                       C278 +
                   (((C44260 * C889 + C50970 * C894 + C44261 * C1218 +
                      C50971 * C1226 + C44262 * C4581 + C44259 * C4589) *
                         C49749 +
                     (C44260 * C895 + C50970 * C904 + C44261 * C1225 +
                      C50971 * C1230 + C44262 * C4588 + C44259 * C4593) *
                         C50904 +
                     (C45216 + C45217 + C45218) * C49742 +
                     (C45219 + C45220 + C45221) * C50635) *
                        C50779 * C50757 -
                    ((C44488 + C44489 + C44490) * C50635 +
                     (C44491 + C44492 + C44493) * C49742 +
                     (C44262 * C1225 + C44259 * C1230 + C44261 * C895 +
                      C50971 * C904 + C44260 * C299 + C50970 * C316) *
                         C50904 +
                     (C44262 * C1218 + C44259 * C1226 + C44261 * C889 +
                      C50971 * C894 + C44260 * C286 + C50970 * C300) *
                         C49749) *
                        C50779 * C1676) *
                       C279 +
                   (((C44260 * C287 + C50970 * C301 + C44261 * C1565 +
                      C50971 * C1573 + C44262 * C2666 + C44259 * C2669) *
                         C49749 +
                     (C44260 * C302 + C50970 * C317 + C44261 * C1572 +
                      C50971 * C1577 + C44262 * C2670 + C44259 * C2675) *
                         C50904 +
                     (C44494 + C44495 + C44496) * C49742 +
                     (C44497 + C44498 + C44499) * C50635) *
                        C50779 * C1676 -
                    ((C44262 * C4582 + C44259 * C4590 + C44261 * C2672 +
                      C50971 * C2676 + C44260 * C1570 + C50970 * C1576) *
                         C50635 +
                     (C44262 * C4578 + C44259 * C4583 + C44261 * C2667 +
                      C50971 * C2671 + C44260 * C1564 + C50970 * C1571) *
                         C49742 +
                     (C44262 * C4584 + C44259 * C4591 + C44261 * C2670 +
                      C50971 * C2675 + C44260 * C1572 + C50970 * C1577) *
                         C50904 +
                     (C44262 * C4579 + C44259 * C4585 + C44261 * C2666 +
                      C50971 * C2669 + C44260 * C1565 + C50970 * C1573) *
                         C49749) *
                        C50779 * C50757) *
                       C280) *
                  C50658) /
                     (p * q * std::sqrt(p + q));
    d2ee[210] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                C17177 +
            (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                C17172 +
            (C33390 + C33391) * C17178 + (C33392 + C33393) * C17173 +
            C33406 * C17179 + C33407 * C17174) *
               C50779 * C50693 * C50919 -
           (C33944 * C17174 + C33945 * C17179 + (C33592 + C33593) * C17173 +
            (C33594 + C33595) * C17178 +
            (C33356 * C895 + C50854 * C904 + C33355 * C299 + C33353 * C316) *
                C17172 +
            (C33356 * C889 + C50854 * C894 + C33355 * C286 + C33353 * C300) *
                C17177) *
               C50779 * C50693 * C50729) *
              C50962 +
          (((C33595 + C33594) * C17177 + (C33593 + C33592) * C17172 +
            (C33591 + C33590) * C17178 + (C33589 + C33588) * C17173 +
            (C33954 + C33955) * C17179 + (C33956 + C33957) * C17174) *
               C50779 * C50693 * C50729 -
           (C33408 * C17174 + C33409 * C17179 + (C33397 + C33396) * C17173 +
            (C33395 + C33394) * C17178 + (C33393 + C33392) * C17172 +
            (C33391 + C33390) * C17177) *
               C50779 * C50693 * C50919) *
              C50963 +
          ((C33406 * C17177 + C33407 * C17172 + (C33401 + C33400) * C17178 +
            (C33399 + C33398) * C17173 + (C33402 + C33403) * C17179 +
            (C33404 + C33405) * C17174) *
               C50779 * C50693 * C50919 -
           ((C33356 * C902 + C50854 * C908 + C33355 * C310 + C33353 * C321) *
                C17174 +
            (C33356 * C893 + C50854 * C903 + C33355 * C291 + C33353 * C309) *
                C17179 +
            (C33957 + C33956) * C17173 + (C33955 + C33954) * C17178 +
            C33944 * C17172 + C33945 * C17177) *
               C50779 * C50693 * C50729) *
              C638)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C19841 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C50630) *
                C2291 +
            ((C36366 + C36367) * C19841 + (C36368 + C36369) * C50630) * C2292 +
            C36389 * C2293) *
               C50693 * C50919 -
           (((C36374 + C36375) * C50630 + (C36376 + C36377) * C19841) * C2293 +
            ((C36373 + C36372) * C50630 + (C36371 + C36370) * C19841) * C2292 +
            ((C36369 + C36368) * C50630 + (C36367 + C36366) * C19841) * C2291) *
               C50693 * C50729) *
              C50962 +
          ((((C33595 + C33594) * C19841 + (C33593 + C33592) * C50630) * C2291 +
            ((C33596 + C33597) * C19841 + (C33598 + C33599) * C50630) * C2292 +
            ((C36378 + C36379) * C19841 + (C36380 + C36381) * C50630) * C2293) *
               C50693 * C50729 -
           (C36386 * C2293 +
            ((C33592 + C33593) * C50630 + (C33594 + C33595) * C19841) * C2292 +
            ((C33393 + C33392) * C50630 + (C33391 + C33390) * C19841) * C2291) *
               C50693 * C50919) *
              C50963 +
          (((C33406 * C19841 + C33407 * C50630) * C2291 +
            ((C33591 + C33590) * C19841 + (C33589 + C33588) * C50630) * C2292 +
            ((C33600 + C33601) * C19841 + (C33602 + C33603) * C50630) * C2293) *
               C50693 * C50919 -
           (((C33356 * C3203 + C50854 * C3207 + C33355 * C1107 +
              C33353 * C1114) *
                 C50630 +
             (C33356 * C3198 + C50854 * C3204 + C33355 * C1102 +
              C33353 * C1108) *
                 C19841) *
                C2293 +
            ((C33603 + C33602) * C50630 + (C33601 + C33600) * C19841) * C2292 +
            (C33944 * C50630 + C33945 * C19841) * C2291) *
               C50693 * C50729) *
              C638)) /
            (p * q * std::sqrt(p + q));
    d2ee[211] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C17177 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C17172 +
             (C33390 + C33391) * C17178 + (C33392 + C33393) * C17173 +
             C33406 * C17179 + C33407 * C17174) *
                C50779 * C50920 -
            (C34104 * C17174 + C34105 * C17179 + (C33786 + C33787) * C17173 +
             (C33788 + C33789) * C17178 +
             (C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                 C17172 +
             (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                 C17177) *
                C50779 * C50757) *
               C50919 +
           (((C33355 * C889 + C33353 * C894 + C33356 * C1218 + C50854 * C1226) *
                 C17177 +
             (C33355 * C895 + C33353 * C904 + C33356 * C1225 + C50854 * C1230) *
                 C17172 +
             (C34328 + C34329) * C17178 + (C34330 + C34331) * C17173 +
             (C34332 + C34333) * C17179 + (C34334 + C34335) * C17174) *
                C50779 * C50757 -
            (C33944 * C17174 + C33945 * C17179 + (C33592 + C33593) * C17173 +
             (C33594 + C33595) * C17178 +
             (C33356 * C895 + C50854 * C904 + C33355 * C299 + C33353 * C316) *
                 C17172 +
             (C33356 * C889 + C50854 * C894 + C33355 * C286 + C33353 * C300) *
                 C17177) *
                C50779 * C50920) *
               C50729) *
              C281 +
          ((((C33789 + C33788) * C17177 + (C33787 + C33786) * C17172 +
             (C33785 + C33784) * C17178 + (C33783 + C33782) * C17173 +
             (C34114 + C34115) * C17179 + (C34116 + C34117) * C17174) *
                C50779 * C50757 -
            (C33408 * C17174 + C33409 * C17179 + (C33397 + C33396) * C17173 +
             (C33395 + C33394) * C17178 + (C33393 + C33392) * C17172 +
             (C33391 + C33390) * C17177) *
                C50779 * C50920) *
               C50919 +
           (((C33595 + C33594) * C17177 + (C33593 + C33592) * C17172 +
             (C33591 + C33590) * C17178 + (C33589 + C33588) * C17173 +
             (C33954 + C33955) * C17179 + (C33956 + C33957) * C17174) *
                C50779 * C50920 -
            ((C33356 * C1219 + C50854 * C1227 + C33355 * C901 + C33353 * C907) *
                 C17174 +
             (C33356 * C1215 + C50854 * C1220 + C33355 * C892 + C33353 * C900) *
                 C17179 +
             (C34335 + C34334) * C17173 + (C34333 + C34332) * C17178 +
             (C34331 + C34330) * C17172 + (C34329 + C34328) * C17177) *
                C50779 * C50757) *
               C50729) *
              C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                  C19841 +
              (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                  C50630) *
                 C2291 +
             ((C36366 + C36367) * C19841 + (C36368 + C36369) * C50630) * C2292 +
             C36389 * C2293) *
                C50920 -
            (((C37046 + C37047) * C50630 + (C37048 + C37049) * C19841) * C2293 +
             ((C37050 + C37051) * C50630 + (C37052 + C37053) * C19841) * C2292 +
             ((C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                  C50630 +
              (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                  C19841) *
                 C2291) *
                C50757) *
               C50919 +
           ((((C37053 + C37052) * C19841 + (C37051 + C37050) * C50630) * C2291 +
             ((C37049 + C37048) * C19841 + (C37047 + C37046) * C50630) * C2292 +
             ((C33355 * C3196 + C33353 * C3199 + C33356 * C3654 +
               C50854 * C3658) *
                  C19841 +
              (C33355 * C3200 + C33353 * C3205 + C33356 * C3657 +
               C50854 * C3660) *
                  C50630) *
                 C2293) *
                C50757 -
            (((C36374 + C36375) * C50630 + (C36376 + C36377) * C19841) * C2293 +
             ((C36373 + C36372) * C50630 + (C36371 + C36370) * C19841) * C2292 +
             ((C36369 + C36368) * C50630 + (C36367 + C36366) * C19841) *
                 C2291) *
                C50920) *
               C50729) *
              C281 +
          (((((C33789 + C33788) * C19841 + (C33787 + C33786) * C50630) * C2291 +
             ((C34328 + C34329) * C19841 + (C34330 + C34331) * C50630) * C2292 +
             ((C37054 + C37055) * C19841 + (C37056 + C37057) * C50630) *
                 C2293) *
                C50757 -
            (C36386 * C2293 +
             ((C33592 + C33593) * C50630 + (C33594 + C33595) * C19841) * C2292 +
             ((C33393 + C33392) * C50630 + (C33391 + C33390) * C19841) *
                 C2291) *
                C50920) *
               C50919 +
           ((((C33595 + C33594) * C19841 + (C33593 + C33592) * C50630) * C2291 +
             ((C33596 + C33597) * C19841 + (C33598 + C33599) * C50630) * C2292 +
             ((C36378 + C36379) * C19841 + (C36380 + C36381) * C50630) *
                 C2293) *
                C50920 -
            (((C33356 * C3655 + C50854 * C3659 + C33355 * C3202 +
               C33353 * C3206) *
                  C50630 +
              (C33356 * C3653 + C50854 * C3656 + C33355 * C3197 +
               C33353 * C3201) *
                  C19841) *
                 C2293 +
             ((C37057 + C37056) * C50630 + (C37055 + C37054) * C19841) * C2292 +
             ((C34331 + C34330) * C50630 + (C34329 + C34328) * C19841) *
                 C2291) *
                C50757) *
               C50729) *
              C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[212] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                C17177 +
            (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                C17172 +
            (C33390 + C33391) * C17178 + (C33392 + C33393) * C17173 +
            C33406 * C17179 + C33407 * C17174) *
               C50779 * C50693 * C278 -
           ((C33588 + C33589) * C17174 + (C33590 + C33591) * C17179 +
            (C33592 + C33593) * C17173 + (C33594 + C33595) * C17178 +
            (C33356 * C895 + C50854 * C904 + C33355 * C299 + C33353 * C316) *
                C17172 +
            (C33356 * C889 + C50854 * C894 + C33355 * C286 + C33353 * C300) *
                C17177) *
               C50779 * C50693 * C279 +
           ((C33355 * C287 + C33353 * C301 + C33356 * C1565 + C50854 * C1573) *
                C17177 +
            (C33355 * C302 + C33353 * C317 + C33356 * C1572 + C50854 * C1577) *
                C17172 +
            (C33596 + C33597) * C17178 + (C33598 + C33599) * C17173 +
            (C33600 + C33601) * C17179 + (C33602 + C33603) * C17174) *
               C50779 * C50693 * C280) *
              C281 +
          (((C33595 + C33594) * C17177 + (C33593 + C33592) * C17172 +
            (C33591 + C33590) * C17178 + (C33589 + C33588) * C17173 +
            (C33355 * C283 + C33353 * C294 + C33356 * C892 + C50854 * C900) *
                C17179 +
            (C33355 * C293 + C33353 * C313 + C33356 * C901 + C50854 * C907) *
                C17174) *
               C50779 * C50693 * C279 -
           (C33408 * C17174 + C33409 * C17179 + (C33397 + C33396) * C17173 +
            (C33395 + C33394) * C17178 + (C33393 + C33392) * C17172 +
            (C33391 + C33390) * C17177) *
               C50779 * C50693 * C278 -
           ((C33356 * C1566 + C50854 * C1574 + C33355 * C308 + C33353 * C320) *
                C17174 +
            (C33356 * C1562 + C50854 * C1567 + C33355 * C290 + C33353 * C307) *
                C17179 +
            (C33603 + C33602) * C17173 + (C33601 + C33600) * C17178 +
            (C33599 + C33598) * C17172 + (C33597 + C33596) * C17177) *
               C50779 * C50693 * C280) *
              C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
               C17177 +
           (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
               C17172 +
           (C33390 + C33391) * C17178 + (C33392 + C33393) * C17173 +
           C33406 * C17179 + C33407 * C17174) *
              C50779 * C50693 * C50677 * C113 -
          (C33408 * C17174 + C33409 * C17179 + (C33397 + C33396) * C17173 +
           (C33395 + C33394) * C17178 + (C33393 + C33392) * C17172 +
           (C33391 + C33390) * C17177) *
              C50779 * C50693 * C50677 * C114 +
          (C33406 * C17177 + C33407 * C17172 + (C33401 + C33400) * C17178 +
           (C33399 + C33398) * C17173 + (C33402 + C33403) * C17179 +
           (C33404 + C33405) * C17174) *
              C50779 * C50693 * C50677 * C115 -
          ((C33356 * C750 + C50854 * C752 + C33355 * C140 + C33353 * C148) *
               C17174 +
           (C33356 * C749 + C50854 * C751 + C33355 * C127 + C33353 * C139) *
               C17179 +
           (C33405 + C33404) * C17173 + (C33403 + C33402) * C17178 +
           C33408 * C17172 + C33409 * C17177) *
              C50779 * C50693 * C50677 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                C17177 +
            (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                C17172 +
            (C33390 + C33391) * C17178 + (C33392 + C33393) * C17173 +
            C33406 * C17179 + C33407 * C17174) *
               C50779 * C457 -
           ((C33782 + C33783) * C17174 + (C33784 + C33785) * C17179 +
            (C33786 + C33787) * C17173 + (C33788 + C33789) * C17178 +
            (C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                C17172 +
            (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                C17177) *
               C50779 * C458 +
           ((C33355 * C464 + C33353 * C478 + C33356 * C1849 + C50854 * C1857) *
                C17177 +
            (C33355 * C479 + C33353 * C494 + C33356 * C1856 + C50854 * C1861) *
                C17172 +
            (C33790 + C33791) * C17178 + (C33792 + C33793) * C17173 +
            (C33794 + C33795) * C17179 + (C33796 + C33797) * C17174) *
               C50779 * C459) *
              C50677 * C281 +
          (((C33789 + C33788) * C17177 + (C33787 + C33786) * C17172 +
            (C33785 + C33784) * C17178 + (C33783 + C33782) * C17173 +
            (C33355 * C460 + C33353 * C471 + C33356 * C467 + C50854 * C484) *
                C17179 +
            (C33355 * C470 + C33353 * C490 + C33356 * C485 + C50854 * C497) *
                C17174) *
               C50779 * C458 -
           (C33408 * C17174 + C33409 * C17179 + (C33397 + C33396) * C17173 +
            (C33395 + C33394) * C17178 + (C33393 + C33392) * C17172 +
            (C33391 + C33390) * C17177) *
               C50779 * C457 -
           ((C33356 * C1850 + C50854 * C1858 + C33355 * C485 + C33353 * C497) *
                C17174 +
            (C33356 * C1846 + C50854 * C1851 + C33355 * C467 + C33353 * C484) *
                C17179 +
            (C33797 + C33796) * C17173 + (C33795 + C33794) * C17178 +
            (C33793 + C33792) * C17172 + (C33791 + C33790) * C17177) *
               C50779 * C459) *
              C50677 * C50664)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                C19841 +
            (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                C50630) *
               C2291 +
           ((C33355 * C286 + C33353 * C300 + C33356 * C889 + C50854 * C894) *
                C19841 +
            (C33355 * C299 + C33353 * C316 + C33356 * C895 + C50854 * C904) *
                C50630) *
               C2292 +
           ((C33355 * C287 + C33353 * C301 + C33356 * C1565 + C50854 * C1573) *
                C19841 +
            (C33355 * C302 + C33353 * C317 + C33356 * C1572 + C50854 * C1577) *
                C50630) *
               C2293) *
              C50693 * C50677 * C113 -
          (((C33599 + C33598) * C50630 + (C33597 + C33596) * C19841) * C2293 +
           ((C33592 + C33593) * C50630 + (C33594 + C33595) * C19841) * C2292 +
           ((C33393 + C33392) * C50630 + (C33391 + C33390) * C19841) * C2291) *
              C50693 * C50677 * C114 +
          ((C33406 * C19841 + C33407 * C50630) * C2291 +
           ((C33591 + C33590) * C19841 + (C33589 + C33588) * C50630) * C2292 +
           ((C33600 + C33601) * C19841 + (C33602 + C33603) * C50630) * C2293) *
              C50693 * C50677 * C115 -
          (((C33356 * C1566 + C50854 * C1574 + C33355 * C308 + C33353 * C320) *
                C50630 +
            (C33356 * C1562 + C50854 * C1567 + C33355 * C290 + C33353 * C307) *
                C19841) *
               C2293 +
           ((C33957 + C33956) * C50630 + (C33955 + C33954) * C19841) * C2292 +
           (C33408 * C50630 + C33409 * C19841) * C2291) *
              C50693 * C50677 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C19841 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C50630) *
                C2291 +
            ((C36366 + C36367) * C19841 + (C36368 + C36369) * C50630) * C2292 +
            C36389 * C2293) *
               C50693 * C278 -
           (((C36374 + C36375) * C50630 + (C36376 + C36377) * C19841) * C2293 +
            ((C36373 + C36372) * C50630 + (C36371 + C36370) * C19841) * C2292 +
            ((C36369 + C36368) * C50630 + (C36367 + C36366) * C19841) * C2291) *
               C50693 * C279 +
           (C36389 * C2291 +
            ((C36377 + C36376) * C19841 + (C36375 + C36374) * C50630) * C2292 +
            ((C33355 * C2442 + C33353 * C2445 + C33356 * C4168 +
              C50854 * C4172) *
                 C19841 +
             (C33355 * C2446 + C33353 * C2451 + C33356 * C4171 +
              C50854 * C4174) *
                 C50630) *
                C2293) *
               C50693 * C280) *
              C281 +
          ((((C33595 + C33594) * C19841 + (C33593 + C33592) * C50630) * C2291 +
            ((C33596 + C33597) * C19841 + (C33598 + C33599) * C50630) * C2292 +
            ((C36378 + C36379) * C19841 + (C36380 + C36381) * C50630) * C2293) *
               C50693 * C279 -
           (C36386 * C2293 +
            ((C33592 + C33593) * C50630 + (C33594 + C33595) * C19841) * C2292 +
            ((C33393 + C33392) * C50630 + (C33391 + C33390) * C19841) * C2291) *
               C50693 * C278 -
           (((C33356 * C4169 + C50854 * C4173 + C33355 * C2448 +
              C33353 * C2452) *
                 C50630 +
             (C33356 * C4167 + C50854 * C4170 + C33355 * C2443 +
              C33353 * C2447) *
                 C19841) *
                C2293 +
            ((C36381 + C36380) * C50630 + (C36379 + C36378) * C19841) * C2292 +
            C36386 * C2291) *
               C50693 * C280) *
              C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C19841 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C50630) *
                C2291 +
            ((C36366 + C36367) * C19841 + (C36368 + C36369) * C50630) * C2292 +
            C36389 * C2293) *
               C457 -
           (((C33356 * C2670 + C50854 * C2675 + C33355 * C1572 +
              C33353 * C1577) *
                 C50630 +
             (C33356 * C2666 + C50854 * C2669 + C33355 * C1565 +
              C33353 * C1573) *
                 C19841) *
                C2293 +
            ((C33356 * C1225 + C50854 * C1230 + C33355 * C895 + C33353 * C904) *
                 C50630 +
             (C33356 * C1218 + C50854 * C1226 + C33355 * C889 + C33353 * C894) *
                 C19841) *
                C2292 +
            ((C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                 C50630 +
             (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                 C19841) *
                C2291) *
               C458 +
           (((C33355 * C464 + C33353 * C478 + C33356 * C1849 + C50854 * C1857) *
                 C19841 +
             (C33355 * C479 + C33353 * C494 + C33356 * C1856 + C50854 * C1861) *
                 C50630) *
                C2291 +
            ((C33355 * C1218 + C33353 * C1226 + C33356 * C4581 +
              C50854 * C4589) *
                 C19841 +
             (C33355 * C1225 + C33353 * C1230 + C33356 * C4588 +
              C50854 * C4593) *
                 C50630) *
                C2292 +
            ((C33355 * C2666 + C33353 * C2669 + C33356 * C4579 +
              C50854 * C4585) *
                 C19841 +
             (C33355 * C2670 + C33353 * C2675 + C33356 * C4584 +
              C50854 * C4591) *
                 C50630) *
                C2293) *
               C459) *
              C50677 * C281 +
          ((((C33789 + C33788) * C19841 + (C33787 + C33786) * C50630) * C2291 +
            ((C34328 + C34329) * C19841 + (C34330 + C34331) * C50630) * C2292 +
            ((C33355 * C1564 + C33353 * C1571 + C33356 * C2667 +
              C50854 * C2671) *
                 C19841 +
             (C33355 * C1570 + C33353 * C1576 + C33356 * C2672 +
              C50854 * C2676) *
                 C50630) *
                C2293) *
               C458 -
           (C36386 * C2293 +
            ((C33592 + C33593) * C50630 + (C33594 + C33595) * C19841) * C2292 +
            ((C33393 + C33392) * C50630 + (C33391 + C33390) * C19841) * C2291) *
               C457 -
           (((C33356 * C4582 + C50854 * C4590 + C33355 * C2672 +
              C33353 * C2676) *
                 C50630 +
             (C33356 * C4578 + C50854 * C4583 + C33355 * C2667 +
              C33353 * C2671) *
                 C19841) *
                C2293 +
            ((C33356 * C4586 + C50854 * C4592 + C33355 * C1223 +
              C33353 * C1229) *
                 C50630 +
             (C33356 * C4580 + C50854 * C4587 + C33355 * C1217 +
              C33353 * C1224) *
                 C19841) *
                C2292 +
            ((C33793 + C33792) * C50630 + (C33791 + C33790) * C19841) * C2291) *
               C459) *
              C50677 * C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[213] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                C17177 +
            (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                C17172 +
            (C33390 + C33391) * C17178 + (C33392 + C33393) * C17173 +
            C33406 * C17179 + C33407 * C17174) *
               C50779 * C50920 -
           (C34104 * C17174 + C34105 * C17179 + (C33786 + C33787) * C17173 +
            (C33788 + C33789) * C17178 +
            (C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                C17172 +
            (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                C17177) *
               C50779 * C50757) *
              C50677 * C50962 +
          (((C33789 + C33788) * C17177 + (C33787 + C33786) * C17172 +
            (C33785 + C33784) * C17178 + (C33783 + C33782) * C17173 +
            (C34114 + C34115) * C17179 + (C34116 + C34117) * C17174) *
               C50779 * C50757 -
           (C33408 * C17174 + C33409 * C17179 + (C33397 + C33396) * C17173 +
            (C33395 + C33394) * C17178 + (C33393 + C33392) * C17172 +
            (C33391 + C33390) * C17177) *
               C50779 * C50920) *
              C50677 * C50963 +
          ((C33406 * C17177 + C33407 * C17172 + (C33401 + C33400) * C17178 +
            (C33399 + C33398) * C17173 + (C33402 + C33403) * C17179 +
            (C33404 + C33405) * C17174) *
               C50779 * C50920 -
           ((C33356 * C488 + C50854 * C499 + C33355 * C487 + C33353 * C498) *
                C17174 +
            (C33356 * C469 + C50854 * C489 + C33355 * C468 + C33353 * C486) *
                C17179 +
            (C34117 + C34116) * C17173 + (C34115 + C34114) * C17178 +
            C34104 * C17172 + C34105 * C17177) *
               C50779 * C50757) *
              C50677 * C638)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C19841 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C50630) *
                C2291 +
            ((C36366 + C36367) * C19841 + (C36368 + C36369) * C50630) * C2292 +
            C36389 * C2293) *
               C50920 -
           (((C33356 * C2670 + C50854 * C2675 + C33355 * C1572 +
              C33353 * C1577) *
                 C50630 +
             (C33356 * C2666 + C50854 * C2669 + C33355 * C1565 +
              C33353 * C1573) *
                 C19841) *
                C2293 +
            ((C33356 * C1225 + C50854 * C1230 + C33355 * C895 + C33353 * C904) *
                 C50630 +
             (C33356 * C1218 + C50854 * C1226 + C33355 * C889 + C33353 * C894) *
                 C19841) *
                C2292 +
            ((C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                 C50630 +
             (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                 C19841) *
                C2291) *
               C50757) *
              C50677 * C50962 +
          ((((C33789 + C33788) * C19841 + (C33787 + C33786) * C50630) * C2291 +
            ((C34328 + C34329) * C19841 + (C34330 + C34331) * C50630) * C2292 +
            ((C33355 * C1564 + C33353 * C1571 + C33356 * C2667 +
              C50854 * C2671) *
                 C19841 +
             (C33355 * C1570 + C33353 * C1576 + C33356 * C2672 +
              C50854 * C2676) *
                 C50630) *
                C2293) *
               C50757 -
           (C36386 * C2293 +
            ((C33592 + C33593) * C50630 + (C33594 + C33595) * C19841) * C2292 +
            ((C33393 + C33392) * C50630 + (C33391 + C33390) * C19841) * C2291) *
               C50920) *
              C50677 * C50963 +
          (((C33406 * C19841 + C33407 * C50630) * C2291 +
            ((C33591 + C33590) * C19841 + (C33589 + C33588) * C50630) * C2292 +
            ((C33600 + C33601) * C19841 + (C33602 + C33603) * C50630) * C2293) *
               C50920 -
           (((C33356 * C2673 + C50854 * C2677 + C33355 * C1568 +
              C33353 * C1575) *
                 C50630 +
             (C33356 * C2668 + C50854 * C2674 + C33355 * C1563 +
              C33353 * C1569) *
                 C19841) *
                C2293 +
            ((C34335 + C34334) * C50630 + (C34333 + C34332) * C19841) * C2292 +
            (C34104 * C50630 + C34105 * C19841) * C2291) *
               C50757) *
              C50677 * C638)) /
            (p * q * std::sqrt(p + q));
    d2ee[214] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
               C17177 +
           (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
               C17172 +
           (C33390 + C33391) * C17178 + (C33392 + C33393) * C17173 +
           C33406 * C17179 + C33407 * C17174) *
              C50779 * C50693 * C50677 * C113 -
          (C33408 * C17174 + C33409 * C17179 + (C33397 + C33396) * C17173 +
           (C33395 + C33394) * C17178 + (C33393 + C33392) * C17172 +
           (C33391 + C33390) * C17177) *
              C50779 * C50693 * C50677 * C114 +
          (C33406 * C17177 + C33407 * C17172 + (C33401 + C33400) * C17178 +
           (C33399 + C33398) * C17173 + (C33402 + C33403) * C17179 +
           (C33404 + C33405) * C17174) *
              C50779 * C50693 * C50677 * C115 -
          ((C33356 * C750 + C50854 * C752 + C33355 * C140 + C33353 * C148) *
               C17174 +
           (C33356 * C749 + C50854 * C751 + C33355 * C127 + C33353 * C139) *
               C17179 +
           (C33405 + C33404) * C17173 + (C33403 + C33402) * C17178 +
           C33408 * C17172 + C33409 * C17177) *
              C50779 * C50693 * C50677 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                C17177 +
            (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                C17172 +
            (C33390 + C33391) * C17178 + (C33392 + C33393) * C17173 +
            C33406 * C17179 + C33407 * C17174) *
               C50779 * C50693 * C278 -
           ((C33588 + C33589) * C17174 + (C33590 + C33591) * C17179 +
            (C33592 + C33593) * C17173 + (C33594 + C33595) * C17178 +
            (C33356 * C895 + C50854 * C904 + C33355 * C299 + C33353 * C316) *
                C17172 +
            (C33356 * C889 + C50854 * C894 + C33355 * C286 + C33353 * C300) *
                C17177) *
               C50779 * C50693 * C279 +
           ((C33355 * C287 + C33353 * C301 + C33356 * C1565 + C50854 * C1573) *
                C17177 +
            (C33355 * C302 + C33353 * C317 + C33356 * C1572 + C50854 * C1577) *
                C17172 +
            (C33596 + C33597) * C17178 + (C33598 + C33599) * C17173 +
            (C33600 + C33601) * C17179 + (C33602 + C33603) * C17174) *
               C50779 * C50693 * C280) *
              C281 +
          (((C33595 + C33594) * C17177 + (C33593 + C33592) * C17172 +
            (C33591 + C33590) * C17178 + (C33589 + C33588) * C17173 +
            (C33355 * C283 + C33353 * C294 + C33356 * C892 + C50854 * C900) *
                C17179 +
            (C33355 * C293 + C33353 * C313 + C33356 * C901 + C50854 * C907) *
                C17174) *
               C50779 * C50693 * C279 -
           (C33408 * C17174 + C33409 * C17179 + (C33397 + C33396) * C17173 +
            (C33395 + C33394) * C17178 + (C33393 + C33392) * C17172 +
            (C33391 + C33390) * C17177) *
               C50779 * C50693 * C278 -
           ((C33356 * C1566 + C50854 * C1574 + C33355 * C308 + C33353 * C320) *
                C17174 +
            (C33356 * C1562 + C50854 * C1567 + C33355 * C290 + C33353 * C307) *
                C17179 +
            (C33603 + C33602) * C17173 + (C33601 + C33600) * C17178 +
            (C33599 + C33598) * C17172 + (C33597 + C33596) * C17177) *
               C50779 * C50693 * C280) *
              C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                C19841 +
            (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                C50630) *
               C2291 +
           ((C33355 * C286 + C33353 * C300 + C33356 * C889 + C50854 * C894) *
                C19841 +
            (C33355 * C299 + C33353 * C316 + C33356 * C895 + C50854 * C904) *
                C50630) *
               C2292 +
           ((C33355 * C287 + C33353 * C301 + C33356 * C1565 + C50854 * C1573) *
                C19841 +
            (C33355 * C302 + C33353 * C317 + C33356 * C1572 + C50854 * C1577) *
                C50630) *
               C2293) *
              C50693 * C50677 * C113 -
          (((C33599 + C33598) * C50630 + (C33597 + C33596) * C19841) * C2293 +
           ((C33592 + C33593) * C50630 + (C33594 + C33595) * C19841) * C2292 +
           ((C33393 + C33392) * C50630 + (C33391 + C33390) * C19841) * C2291) *
              C50693 * C50677 * C114 +
          ((C33406 * C19841 + C33407 * C50630) * C2291 +
           ((C33591 + C33590) * C19841 + (C33589 + C33588) * C50630) * C2292 +
           ((C33600 + C33601) * C19841 + (C33602 + C33603) * C50630) * C2293) *
              C50693 * C50677 * C115 -
          (((C33356 * C1566 + C50854 * C1574 + C33355 * C308 + C33353 * C320) *
                C50630 +
            (C33356 * C1562 + C50854 * C1567 + C33355 * C290 + C33353 * C307) *
                C19841) *
               C2293 +
           ((C33957 + C33956) * C50630 + (C33955 + C33954) * C19841) * C2292 +
           (C33408 * C50630 + C33409 * C19841) * C2291) *
              C50693 * C50677 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C19841 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C50630) *
                C2291 +
            ((C36366 + C36367) * C19841 + (C36368 + C36369) * C50630) * C2292 +
            C36389 * C2293) *
               C50693 * C278 -
           (((C36374 + C36375) * C50630 + (C36376 + C36377) * C19841) * C2293 +
            ((C36373 + C36372) * C50630 + (C36371 + C36370) * C19841) * C2292 +
            ((C36369 + C36368) * C50630 + (C36367 + C36366) * C19841) * C2291) *
               C50693 * C279 +
           (C36389 * C2291 +
            ((C36377 + C36376) * C19841 + (C36375 + C36374) * C50630) * C2292 +
            ((C33355 * C2442 + C33353 * C2445 + C33356 * C4168 +
              C50854 * C4172) *
                 C19841 +
             (C33355 * C2446 + C33353 * C2451 + C33356 * C4171 +
              C50854 * C4174) *
                 C50630) *
                C2293) *
               C50693 * C280) *
              C281 +
          ((((C33595 + C33594) * C19841 + (C33593 + C33592) * C50630) * C2291 +
            ((C33596 + C33597) * C19841 + (C33598 + C33599) * C50630) * C2292 +
            ((C36378 + C36379) * C19841 + (C36380 + C36381) * C50630) * C2293) *
               C50693 * C279 -
           (C36386 * C2293 +
            ((C33592 + C33593) * C50630 + (C33594 + C33595) * C19841) * C2292 +
            ((C33393 + C33392) * C50630 + (C33391 + C33390) * C19841) * C2291) *
               C50693 * C278 -
           (((C33356 * C4169 + C50854 * C4173 + C33355 * C2448 +
              C33353 * C2452) *
                 C50630 +
             (C33356 * C4167 + C50854 * C4170 + C33355 * C2443 +
              C33353 * C2447) *
                 C19841) *
                C2293 +
            ((C36381 + C36380) * C50630 + (C36379 + C36378) * C19841) * C2292 +
            C36386 * C2291) *
               C50693 * C280) *
              C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[215] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                C17177 +
            (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                C17172 +
            (C33390 + C33391) * C17178 + (C33392 + C33393) * C17173 +
            C33406 * C17179 + C33407 * C17174) *
               C50779 * C50693 * C50964 -
           (C33944 * C17174 + C33945 * C17179 + (C33592 + C33593) * C17173 +
            (C33594 + C33595) * C17178 +
            (C33356 * C895 + C50854 * C904 + C33355 * C299 + C33353 * C316) *
                C17172 +
            (C33356 * C889 + C50854 * C894 + C33355 * C286 + C33353 * C300) *
                C17177) *
               C50779 * C50693 * C50965 +
           ((C33355 * C287 + C33353 * C301 + C33356 * C1565 + C50854 * C1573) *
                C17177 +
            (C33355 * C302 + C33353 * C317 + C33356 * C1572 + C50854 * C1577) *
                C17172 +
            (C33596 + C33597) * C17178 + (C33598 + C33599) * C17173 +
            (C33600 + C33601) * C17179 + (C33602 + C33603) * C17174) *
               C50779 * C50693 * C1331) *
              C50911 +
          (((C33595 + C33594) * C17177 + (C33593 + C33592) * C17172 +
            (C33591 + C33590) * C17178 + (C33589 + C33588) * C17173 +
            (C33954 + C33955) * C17179 + (C33956 + C33957) * C17174) *
               C50779 * C50693 * C50965 -
           (C33408 * C17174 + C33409 * C17179 + (C33397 + C33396) * C17173 +
            (C33395 + C33394) * C17178 + (C33393 + C33392) * C17172 +
            (C33391 + C33390) * C17177) *
               C50779 * C50693 * C50964 -
           ((C33356 * C1566 + C50854 * C1574 + C33355 * C308 + C33353 * C320) *
                C17174 +
            (C33356 * C1562 + C50854 * C1567 + C33355 * C290 + C33353 * C307) *
                C17179 +
            (C33603 + C33602) * C17173 + (C33601 + C33600) * C17178 +
            (C33599 + C33598) * C17172 + (C33597 + C33596) * C17177) *
               C50779 * C50693 * C1331) *
              C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C19841 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C50630) *
                C2291 +
            ((C36366 + C36367) * C19841 + (C36368 + C36369) * C50630) * C2292 +
            C36389 * C2293) *
               C50693 * C50964 -
           (C37318 * C2293 +
            ((C36373 + C36372) * C50630 + (C36371 + C36370) * C19841) * C2292 +
            ((C36369 + C36368) * C50630 + (C36367 + C36366) * C19841) * C2291) *
               C50693 * C50965 +
           (C36389 * C2291 +
            ((C36377 + C36376) * C19841 + (C36375 + C36374) * C50630) * C2292 +
            ((C37314 + C37315) * C19841 + (C37316 + C37317) * C50630) * C2293) *
               C50693 * C1331) *
              C50911 +
          ((((C33595 + C33594) * C19841 + (C33593 + C33592) * C50630) * C2291 +
            ((C33596 + C33597) * C19841 + (C33598 + C33599) * C50630) * C2292 +
            ((C36378 + C36379) * C19841 + (C36380 + C36381) * C50630) * C2293) *
               C50693 * C50965 -
           (C36386 * C2293 +
            ((C33592 + C33593) * C50630 + (C33594 + C33595) * C19841) * C2292 +
            ((C33393 + C33392) * C50630 + (C33391 + C33390) * C19841) * C2291) *
               C50693 * C50964 -
           (((C33356 * C4169 + C50854 * C4173 + C33355 * C2448 +
              C33353 * C2452) *
                 C50630 +
             (C33356 * C4167 + C50854 * C4170 + C33355 * C2443 +
              C33353 * C2447) *
                 C19841) *
                C2293 +
            ((C36381 + C36380) * C50630 + (C36379 + C36378) * C19841) * C2292 +
            C36386 * C2291) *
               C50693 * C1331) *
              C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[216] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                C17177 +
            (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                C17172 +
            (C33390 + C33391) * C17178 + (C33392 + C33393) * C17173 +
            C33406 * C17179 + C33407 * C17174) *
               C50779 * C50920 -
           (C34104 * C17174 + C34105 * C17179 + (C33786 + C33787) * C17173 +
            (C33788 + C33789) * C17178 +
            (C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                C17172 +
            (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                C17177) *
               C50779 * C50757) *
              C50964 +
          (((C33355 * C889 + C33353 * C894 + C33356 * C1218 + C50854 * C1226) *
                C17177 +
            (C33355 * C895 + C33353 * C904 + C33356 * C1225 + C50854 * C1230) *
                C17172 +
            (C34328 + C34329) * C17178 + (C34330 + C34331) * C17173 +
            (C34332 + C34333) * C17179 + (C34334 + C34335) * C17174) *
               C50779 * C50757 -
           (C33944 * C17174 + C33945 * C17179 + (C33592 + C33593) * C17173 +
            (C33594 + C33595) * C17178 +
            (C33356 * C895 + C50854 * C904 + C33355 * C299 + C33353 * C316) *
                C17172 +
            (C33356 * C889 + C50854 * C894 + C33355 * C286 + C33353 * C300) *
                C17177) *
               C50779 * C50920) *
              C50965 +
          (((C33355 * C287 + C33353 * C301 + C33356 * C1565 + C50854 * C1573) *
                C17177 +
            (C33355 * C302 + C33353 * C317 + C33356 * C1572 + C50854 * C1577) *
                C17172 +
            (C33596 + C33597) * C17178 + (C33598 + C33599) * C17173 +
            (C33600 + C33601) * C17179 + (C33602 + C33603) * C17174) *
               C50779 * C50920 -
           ((C33356 * C2673 + C50854 * C2677 + C33355 * C1568 +
             C33353 * C1575) *
                C17174 +
            (C33356 * C2668 + C50854 * C2674 + C33355 * C1563 +
             C33353 * C1569) *
                C17179 +
            (C33356 * C2672 + C50854 * C2676 + C33355 * C1570 +
             C33353 * C1576) *
                C17173 +
            (C33356 * C2667 + C50854 * C2671 + C33355 * C1564 +
             C33353 * C1571) *
                C17178 +
            (C33356 * C2670 + C50854 * C2675 + C33355 * C1572 +
             C33353 * C1577) *
                C17172 +
            (C33356 * C2666 + C50854 * C2669 + C33355 * C1565 +
             C33353 * C1573) *
                C17177) *
               C50779 * C50757) *
              C1331) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C19841 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C50630) *
                C2291 +
            ((C36366 + C36367) * C19841 + (C36368 + C36369) * C50630) * C2292 +
            C36389 * C2293) *
               C50920 -
           (C37991 * C2293 +
            ((C37050 + C37051) * C50630 + (C37052 + C37053) * C19841) * C2292 +
            ((C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                 C50630 +
             (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                 C19841) *
                C2291) *
               C50757) *
              C50964 +
          ((((C37053 + C37052) * C19841 + (C37051 + C37050) * C50630) * C2291 +
            ((C37049 + C37048) * C19841 + (C37047 + C37046) * C50630) * C2292 +
            ((C37987 + C37988) * C19841 + (C37989 + C37990) * C50630) * C2293) *
               C50757 -
           (C37318 * C2293 +
            ((C36373 + C36372) * C50630 + (C36371 + C36370) * C19841) * C2292 +
            ((C36369 + C36368) * C50630 + (C36367 + C36366) * C19841) * C2291) *
               C50920) *
              C50965 +
          ((C36389 * C2291 +
            ((C36377 + C36376) * C19841 + (C36375 + C36374) * C50630) * C2292 +
            ((C37314 + C37315) * C19841 + (C37316 + C37317) * C50630) * C2293) *
               C50920 -
           (((C33356 * C20679 + C50854 * C20681 + C33355 * C4171 +
              C33353 * C4174) *
                 C50630 +
             (C33356 * C20678 + C50854 * C20680 + C33355 * C4168 +
              C33353 * C4172) *
                 C19841) *
                C2293 +
            ((C37990 + C37989) * C50630 + (C37988 + C37987) * C19841) * C2292 +
            C37991 * C2291) *
               C50757) *
              C1331) *
         C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[217] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
               C17177 +
           (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
               C17172 +
           (C33390 + C33391) * C17178 + (C33392 + C33393) * C17173 +
           C33406 * C17179 + C33407 * C17174) *
              C50779 * C50693 * C1096 -
          (C33944 * C17174 + C33945 * C17179 + (C33592 + C33593) * C17173 +
           (C33594 + C33595) * C17178 +
           (C33356 * C895 + C50854 * C904 + C33355 * C299 + C33353 * C316) *
               C17172 +
           (C33356 * C889 + C50854 * C894 + C33355 * C286 + C33353 * C300) *
               C17177) *
              C50779 * C50693 * C1097 +
          ((C33355 * C287 + C33353 * C301 + C33356 * C1565 + C50854 * C1573) *
               C17177 +
           (C33355 * C302 + C33353 * C317 + C33356 * C1572 + C50854 * C1577) *
               C17172 +
           (C33596 + C33597) * C17178 + (C33598 + C33599) * C17173 +
           (C33600 + C33601) * C17179 + (C33602 + C33603) * C17174) *
              C50779 * C50693 * C1098 -
          ((C33356 * C3203 + C50854 * C3207 + C33355 * C1107 + C33353 * C1114) *
               C17174 +
           (C33356 * C3198 + C50854 * C3204 + C33355 * C1102 + C33353 * C1108) *
               C17179 +
           (C33356 * C3202 + C50854 * C3206 + C33355 * C1109 + C33353 * C1115) *
               C17173 +
           (C33356 * C3197 + C50854 * C3201 + C33355 * C1103 + C33353 * C1110) *
               C17178 +
           (C33356 * C3200 + C50854 * C3205 + C33355 * C1111 + C33353 * C1116) *
               C17172 +
           (C33356 * C3196 + C50854 * C3199 + C33355 * C1104 + C33353 * C1112) *
               C17177) *
              C50779 * C50693 * C1099) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                C17177 +
            (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                C17172 +
            (C33390 + C33391) * C17178 + (C33392 + C33393) * C17173 +
            C33406 * C17179 + C33407 * C17174) *
               C50779 * C50693 * C1025 -
           (C33944 * C17174 + C33945 * C17179 + (C33592 + C33593) * C17173 +
            (C33594 + C33595) * C17178 +
            (C33356 * C895 + C50854 * C904 + C33355 * C299 + C33353 * C316) *
                C17172 +
            (C33356 * C889 + C50854 * C894 + C33355 * C286 + C33353 * C300) *
                C17177) *
               C50779 * C50693 * C50729) *
              C1027 +
          (((C33595 + C33594) * C17177 + (C33593 + C33592) * C17172 +
            (C33591 + C33590) * C17178 + (C33589 + C33588) * C17173 +
            (C33954 + C33955) * C17179 + (C33956 + C33957) * C17174) *
               C50779 * C50693 * C50729 -
           (C33408 * C17174 + C33409 * C17179 + (C33397 + C33396) * C17173 +
            (C33395 + C33394) * C17178 + (C33393 + C33392) * C17172 +
            (C33391 + C33390) * C17177) *
               C50779 * C50693 * C1025) *
              C1028 +
          ((C33406 * C17177 + C33407 * C17172 + (C33401 + C33400) * C17178 +
            (C33399 + C33398) * C17173 + (C33402 + C33403) * C17179 +
            (C33404 + C33405) * C17174) *
               C50779 * C50693 * C1025 -
           ((C33356 * C902 + C50854 * C908 + C33355 * C310 + C33353 * C321) *
                C17174 +
            (C33356 * C893 + C50854 * C903 + C33355 * C291 + C33353 * C309) *
                C17179 +
            (C33957 + C33956) * C17173 + (C33955 + C33954) * C17178 +
            C33944 * C17172 + C33945 * C17177) *
               C50779 * C50693 * C50729) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                C17177 +
            (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                C17172 +
            (C33390 + C33391) * C17178 + (C33392 + C33393) * C17173 +
            C33406 * C17179 + C33407 * C17174) *
               C50779 * C457 -
           (C34104 * C17174 + C34105 * C17179 + (C33786 + C33787) * C17173 +
            (C33788 + C33789) * C17178 +
            (C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                C17172 +
            (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                C17177) *
               C50779 * C458 +
           ((C33355 * C464 + C33353 * C478 + C33356 * C1849 + C50854 * C1857) *
                C17177 +
            (C33355 * C479 + C33353 * C494 + C33356 * C1856 + C50854 * C1861) *
                C17172 +
            (C33790 + C33791) * C17178 + (C33792 + C33793) * C17173 +
            (C33794 + C33795) * C17179 + (C33796 + C33797) * C17174) *
               C50779 * C459) *
              C1025 +
          (((C33355 * C889 + C33353 * C894 + C33356 * C1218 + C50854 * C1226) *
                C17177 +
            (C33355 * C895 + C33353 * C904 + C33356 * C1225 + C50854 * C1230) *
                C17172 +
            (C34328 + C34329) * C17178 + (C34330 + C34331) * C17173 +
            (C34332 + C34333) * C17179 + (C34334 + C34335) * C17174) *
               C50779 * C458 -
           (C33944 * C17174 + C33945 * C17179 + (C33592 + C33593) * C17173 +
            (C33594 + C33595) * C17178 +
            (C33356 * C895 + C50854 * C904 + C33355 * C299 + C33353 * C316) *
                C17172 +
            (C33356 * C889 + C50854 * C894 + C33355 * C286 + C33353 * C300) *
                C17177) *
               C50779 * C457 -
           ((C33356 * C6137 + C50854 * C6139 + C33355 * C1221 +
             C33353 * C1228) *
                C17174 +
            (C33356 * C6136 + C50854 * C6138 + C33355 * C1216 +
             C33353 * C1222) *
                C17179 +
            (C33356 * C4586 + C50854 * C4592 + C33355 * C1223 +
             C33353 * C1229) *
                C17173 +
            (C33356 * C4580 + C50854 * C4587 + C33355 * C1217 +
             C33353 * C1224) *
                C17178 +
            (C33356 * C4588 + C50854 * C4593 + C33355 * C1225 +
             C33353 * C1230) *
                C17172 +
            (C33356 * C4581 + C50854 * C4589 + C33355 * C1218 +
             C33353 * C1226) *
                C17177) *
               C50779 * C459) *
              C50729) *
         C50658) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C19841 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C50630) *
                C2291 +
            ((C36366 + C36367) * C19841 + (C36368 + C36369) * C50630) * C2292 +
            C36389 * C2293) *
               C50693 * C1025 -
           (((C36374 + C36375) * C50630 + (C36376 + C36377) * C19841) * C2293 +
            ((C36373 + C36372) * C50630 + (C36371 + C36370) * C19841) * C2292 +
            ((C36369 + C36368) * C50630 + (C36367 + C36366) * C19841) * C2291) *
               C50693 * C50729) *
              C1027 +
          ((((C33595 + C33594) * C19841 + (C33593 + C33592) * C50630) * C2291 +
            ((C33596 + C33597) * C19841 + (C33598 + C33599) * C50630) * C2292 +
            ((C36378 + C36379) * C19841 + (C36380 + C36381) * C50630) * C2293) *
               C50693 * C50729 -
           (C36386 * C2293 +
            ((C33592 + C33593) * C50630 + (C33594 + C33595) * C19841) * C2292 +
            ((C33393 + C33392) * C50630 + (C33391 + C33390) * C19841) * C2291) *
               C50693 * C1025) *
              C1028 +
          (((C33406 * C19841 + C33407 * C50630) * C2291 +
            ((C33591 + C33590) * C19841 + (C33589 + C33588) * C50630) * C2292 +
            ((C33600 + C33601) * C19841 + (C33602 + C33603) * C50630) * C2293) *
               C50693 * C1025 -
           (((C33356 * C3203 + C50854 * C3207 + C33355 * C1107 +
              C33353 * C1114) *
                 C50630 +
             (C33356 * C3198 + C50854 * C3204 + C33355 * C1102 +
              C33353 * C1108) *
                 C19841) *
                C2293 +
            ((C33603 + C33602) * C50630 + (C33601 + C33600) * C19841) * C2292 +
            (C33944 * C50630 + C33945 * C19841) * C2291) *
               C50693 * C50729) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                C19841 +
            (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                C50630) *
               C2291 +
           ((C36366 + C36367) * C19841 + (C36368 + C36369) * C50630) * C2292 +
           C36389 * C2293) *
              C50693 * C1096 -
          (C37318 * C2293 +
           ((C36373 + C36372) * C50630 + (C36371 + C36370) * C19841) * C2292 +
           ((C36369 + C36368) * C50630 + (C36367 + C36366) * C19841) * C2291) *
              C50693 * C1097 +
          (C36389 * C2291 +
           ((C36377 + C36376) * C19841 + (C36375 + C36374) * C50630) * C2292 +
           ((C37314 + C37315) * C19841 + (C37316 + C37317) * C50630) * C2293) *
              C50693 * C1098 -
          (((C33356 * C21021 + C50854 * C21023 + C33355 * C3490 +
             C33353 * C3493) *
                C50630 +
            (C33356 * C21020 + C50854 * C21022 + C33355 * C3487 +
             C33353 * C3491) *
                C19841) *
               C2293 +
           ((C37317 + C37316) * C50630 + (C37315 + C37314) * C19841) * C2292 +
           C37318 * C2291) *
              C50693 * C1099) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C19841 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C50630) *
                C2291 +
            ((C36366 + C36367) * C19841 + (C36368 + C36369) * C50630) * C2292 +
            C36389 * C2293) *
               C457 -
           (((C37046 + C37047) * C50630 + (C37048 + C37049) * C19841) * C2293 +
            ((C37050 + C37051) * C50630 + (C37052 + C37053) * C19841) * C2292 +
            ((C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                 C50630 +
             (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                 C19841) *
                C2291) *
               C458 +
           (((C33355 * C464 + C33353 * C478 + C33356 * C1849 + C50854 * C1857) *
                 C19841 +
             (C33355 * C479 + C33353 * C494 + C33356 * C1856 + C50854 * C1861) *
                 C50630) *
                C2291 +
            ((C37481 + C37482) * C19841 + (C37483 + C37484) * C50630) * C2292 +
            ((C37485 + C37486) * C19841 + (C37487 + C37488) * C50630) * C2293) *
               C459) *
              C1025 +
          ((((C37053 + C37052) * C19841 + (C37051 + C37050) * C50630) * C2291 +
            ((C37049 + C37048) * C19841 + (C37047 + C37046) * C50630) * C2292 +
            ((C33355 * C3196 + C33353 * C3199 + C33356 * C3654 +
              C50854 * C3658) *
                 C19841 +
             (C33355 * C3200 + C33353 * C3205 + C33356 * C3657 +
              C50854 * C3660) *
                 C50630) *
                C2293) *
               C458 -
           (C37318 * C2293 +
            ((C36373 + C36372) * C50630 + (C36371 + C36370) * C19841) * C2292 +
            ((C36369 + C36368) * C50630 + (C36367 + C36366) * C19841) * C2291) *
               C457 -
           (((C33356 * C21297 + C50854 * C21299 + C33355 * C3657 +
              C33353 * C3660) *
                 C50630 +
             (C33356 * C21296 + C50854 * C21298 + C33355 * C3654 +
              C33353 * C3658) *
                 C19841) *
                C2293 +
            ((C37488 + C37487) * C50630 + (C37486 + C37485) * C19841) * C2292 +
            ((C37484 + C37483) * C50630 + (C37482 + C37481) * C19841) * C2291) *
               C459) *
              C50729) *
         C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[218] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C17177 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C17172 +
             (C33390 + C33391) * C17178 + (C33392 + C33393) * C17173 +
             C33406 * C17179 + C33407 * C17174) *
                C50779 * C50920 -
            (C34104 * C17174 + C34105 * C17179 + (C33786 + C33787) * C17173 +
             (C33788 + C33789) * C17178 +
             (C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                 C17172 +
             (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                 C17177) *
                C50779 * C50757) *
               C1025 +
           (((C33355 * C889 + C33353 * C894 + C33356 * C1218 + C50854 * C1226) *
                 C17177 +
             (C33355 * C895 + C33353 * C904 + C33356 * C1225 + C50854 * C1230) *
                 C17172 +
             (C34328 + C34329) * C17178 + (C34330 + C34331) * C17173 +
             (C34332 + C34333) * C17179 + (C34334 + C34335) * C17174) *
                C50779 * C50757 -
            (C33944 * C17174 + C33945 * C17179 + (C33592 + C33593) * C17173 +
             (C33594 + C33595) * C17178 +
             (C33356 * C895 + C50854 * C904 + C33355 * C299 + C33353 * C316) *
                 C17172 +
             (C33356 * C889 + C50854 * C894 + C33355 * C286 + C33353 * C300) *
                 C17177) *
                C50779 * C50920) *
               C50729) *
              C50911 +
          ((((C33789 + C33788) * C17177 + (C33787 + C33786) * C17172 +
             (C33785 + C33784) * C17178 + (C33783 + C33782) * C17173 +
             (C34114 + C34115) * C17179 + (C34116 + C34117) * C17174) *
                C50779 * C50757 -
            (C33408 * C17174 + C33409 * C17179 + (C33397 + C33396) * C17173 +
             (C33395 + C33394) * C17178 + (C33393 + C33392) * C17172 +
             (C33391 + C33390) * C17177) *
                C50779 * C50920) *
               C1025 +
           (((C33595 + C33594) * C17177 + (C33593 + C33592) * C17172 +
             (C33591 + C33590) * C17178 + (C33589 + C33588) * C17173 +
             (C33954 + C33955) * C17179 + (C33956 + C33957) * C17174) *
                C50779 * C50920 -
            ((C33356 * C1219 + C50854 * C1227 + C33355 * C901 + C33353 * C907) *
                 C17174 +
             (C33356 * C1215 + C50854 * C1220 + C33355 * C892 + C33353 * C900) *
                 C17179 +
             (C34335 + C34334) * C17173 + (C34333 + C34332) * C17178 +
             (C34331 + C34330) * C17172 + (C34329 + C34328) * C17177) *
                C50779 * C50757) *
               C50729) *
              C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                  C19841 +
              (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                  C50630) *
                 C2291 +
             ((C36366 + C36367) * C19841 + (C36368 + C36369) * C50630) * C2292 +
             C36389 * C2293) *
                C50920 -
            (((C37046 + C37047) * C50630 + (C37048 + C37049) * C19841) * C2293 +
             ((C37050 + C37051) * C50630 + (C37052 + C37053) * C19841) * C2292 +
             ((C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                  C50630 +
              (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                  C19841) *
                 C2291) *
                C50757) *
               C1025 +
           ((((C37053 + C37052) * C19841 + (C37051 + C37050) * C50630) * C2291 +
             ((C37049 + C37048) * C19841 + (C37047 + C37046) * C50630) * C2292 +
             ((C33355 * C3196 + C33353 * C3199 + C33356 * C3654 +
               C50854 * C3658) *
                  C19841 +
              (C33355 * C3200 + C33353 * C3205 + C33356 * C3657 +
               C50854 * C3660) *
                  C50630) *
                 C2293) *
                C50757 -
            (C37318 * C2293 +
             ((C36373 + C36372) * C50630 + (C36371 + C36370) * C19841) * C2292 +
             ((C36369 + C36368) * C50630 + (C36367 + C36366) * C19841) *
                 C2291) *
                C50920) *
               C50729) *
              C50911 +
          (((((C33789 + C33788) * C19841 + (C33787 + C33786) * C50630) * C2291 +
             ((C34328 + C34329) * C19841 + (C34330 + C34331) * C50630) * C2292 +
             ((C37054 + C37055) * C19841 + (C37056 + C37057) * C50630) *
                 C2293) *
                C50757 -
            (C36386 * C2293 +
             ((C33592 + C33593) * C50630 + (C33594 + C33595) * C19841) * C2292 +
             ((C33393 + C33392) * C50630 + (C33391 + C33390) * C19841) *
                 C2291) *
                C50920) *
               C1025 +
           ((((C33595 + C33594) * C19841 + (C33593 + C33592) * C50630) * C2291 +
             ((C33596 + C33597) * C19841 + (C33598 + C33599) * C50630) * C2292 +
             ((C36378 + C36379) * C19841 + (C36380 + C36381) * C50630) *
                 C2293) *
                C50920 -
            (((C33356 * C3655 + C50854 * C3659 + C33355 * C3202 +
               C33353 * C3206) *
                  C50630 +
              (C33356 * C3653 + C50854 * C3656 + C33355 * C3197 +
               C33353 * C3201) *
                  C19841) *
                 C2293 +
             ((C37057 + C37056) * C50630 + (C37055 + C37054) * C19841) * C2292 +
             ((C34331 + C34330) * C50630 + (C34329 + C34328) * C19841) *
                 C2291) *
                C50757) *
               C50729) *
              C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[219] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                C17177 +
            (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                C17172 +
            (C33390 + C33391) * C17178 + (C33392 + C33393) * C17173 +
            C33406 * C17179 + C33407 * C17174) *
               C50779 * C50693 * C1025 -
           (C33944 * C17174 + C33945 * C17179 + (C33592 + C33593) * C17173 +
            (C33594 + C33595) * C17178 +
            (C33356 * C895 + C50854 * C904 + C33355 * C299 + C33353 * C316) *
                C17172 +
            (C33356 * C889 + C50854 * C894 + C33355 * C286 + C33353 * C300) *
                C17177) *
               C50779 * C50693 * C50729) *
              C1027 +
          (((C33595 + C33594) * C17177 + (C33593 + C33592) * C17172 +
            (C33591 + C33590) * C17178 + (C33589 + C33588) * C17173 +
            (C33954 + C33955) * C17179 + (C33956 + C33957) * C17174) *
               C50779 * C50693 * C50729 -
           (C33408 * C17174 + C33409 * C17179 + (C33397 + C33396) * C17173 +
            (C33395 + C33394) * C17178 + (C33393 + C33392) * C17172 +
            (C33391 + C33390) * C17177) *
               C50779 * C50693 * C1025) *
              C1028 +
          ((C33406 * C17177 + C33407 * C17172 + (C33401 + C33400) * C17178 +
            (C33399 + C33398) * C17173 + (C33402 + C33403) * C17179 +
            (C33404 + C33405) * C17174) *
               C50779 * C50693 * C1025 -
           ((C33356 * C902 + C50854 * C908 + C33355 * C310 + C33353 * C321) *
                C17174 +
            (C33356 * C893 + C50854 * C903 + C33355 * C291 + C33353 * C309) *
                C17179 +
            (C33957 + C33956) * C17173 + (C33955 + C33954) * C17178 +
            C33944 * C17172 + C33945 * C17177) *
               C50779 * C50693 * C50729) *
              C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
               C17177 +
           (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
               C17172 +
           (C33390 + C33391) * C17178 + (C33392 + C33393) * C17173 +
           C33406 * C17179 + C33407 * C17174) *
              C50779 * C50693 * C1096 -
          (C33944 * C17174 + C33945 * C17179 + (C33592 + C33593) * C17173 +
           (C33594 + C33595) * C17178 +
           (C33356 * C895 + C50854 * C904 + C33355 * C299 + C33353 * C316) *
               C17172 +
           (C33356 * C889 + C50854 * C894 + C33355 * C286 + C33353 * C300) *
               C17177) *
              C50779 * C50693 * C1097 +
          ((C33355 * C287 + C33353 * C301 + C33356 * C1565 + C50854 * C1573) *
               C17177 +
           (C33355 * C302 + C33353 * C317 + C33356 * C1572 + C50854 * C1577) *
               C17172 +
           (C33596 + C33597) * C17178 + (C33598 + C33599) * C17173 +
           (C33600 + C33601) * C17179 + (C33602 + C33603) * C17174) *
              C50779 * C50693 * C1098 -
          ((C33356 * C3203 + C50854 * C3207 + C33355 * C1107 + C33353 * C1114) *
               C17174 +
           (C33356 * C3198 + C50854 * C3204 + C33355 * C1102 + C33353 * C1108) *
               C17179 +
           (C33356 * C3202 + C50854 * C3206 + C33355 * C1109 + C33353 * C1115) *
               C17173 +
           (C33356 * C3197 + C50854 * C3201 + C33355 * C1103 + C33353 * C1110) *
               C17178 +
           (C33356 * C3200 + C50854 * C3205 + C33355 * C1111 + C33353 * C1116) *
               C17172 +
           (C33356 * C3196 + C50854 * C3199 + C33355 * C1104 + C33353 * C1112) *
               C17177) *
              C50779 * C50693 * C1099) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C19841 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C50630) *
                C2291 +
            ((C36366 + C36367) * C19841 + (C36368 + C36369) * C50630) * C2292 +
            C36389 * C2293) *
               C50693 * C1025 -
           (((C36374 + C36375) * C50630 + (C36376 + C36377) * C19841) * C2293 +
            ((C36373 + C36372) * C50630 + (C36371 + C36370) * C19841) * C2292 +
            ((C36369 + C36368) * C50630 + (C36367 + C36366) * C19841) * C2291) *
               C50693 * C50729) *
              C1027 +
          ((((C33595 + C33594) * C19841 + (C33593 + C33592) * C50630) * C2291 +
            ((C33596 + C33597) * C19841 + (C33598 + C33599) * C50630) * C2292 +
            ((C36378 + C36379) * C19841 + (C36380 + C36381) * C50630) * C2293) *
               C50693 * C50729 -
           (C36386 * C2293 +
            ((C33592 + C33593) * C50630 + (C33594 + C33595) * C19841) * C2292 +
            ((C33393 + C33392) * C50630 + (C33391 + C33390) * C19841) * C2291) *
               C50693 * C1025) *
              C1028 +
          (((C33406 * C19841 + C33407 * C50630) * C2291 +
            ((C33591 + C33590) * C19841 + (C33589 + C33588) * C50630) * C2292 +
            ((C33600 + C33601) * C19841 + (C33602 + C33603) * C50630) * C2293) *
               C50693 * C1025 -
           (((C33356 * C3203 + C50854 * C3207 + C33355 * C1107 +
              C33353 * C1114) *
                 C50630 +
             (C33356 * C3198 + C50854 * C3204 + C33355 * C1102 +
              C33353 * C1108) *
                 C19841) *
                C2293 +
            ((C33603 + C33602) * C50630 + (C33601 + C33600) * C19841) * C2292 +
            (C33944 * C50630 + C33945 * C19841) * C2291) *
               C50693 * C50729) *
              C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                C19841 +
            (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                C50630) *
               C2291 +
           ((C36366 + C36367) * C19841 + (C36368 + C36369) * C50630) * C2292 +
           C36389 * C2293) *
              C50693 * C1096 -
          (C37318 * C2293 +
           ((C36373 + C36372) * C50630 + (C36371 + C36370) * C19841) * C2292 +
           ((C36369 + C36368) * C50630 + (C36367 + C36366) * C19841) * C2291) *
              C50693 * C1097 +
          (C36389 * C2291 +
           ((C36377 + C36376) * C19841 + (C36375 + C36374) * C50630) * C2292 +
           ((C37314 + C37315) * C19841 + (C37316 + C37317) * C50630) * C2293) *
              C50693 * C1098 -
          (((C33356 * C21021 + C50854 * C21023 + C33355 * C3490 +
             C33353 * C3493) *
                C50630 +
            (C33356 * C21020 + C50854 * C21022 + C33355 * C3487 +
             C33353 * C3491) *
                C19841) *
               C2293 +
           ((C37317 + C37316) * C50630 + (C37315 + C37314) * C19841) * C2292 +
           C37318 * C2291) *
              C50693 * C1099) *
         C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[220] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C17177 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C17172 +
             (C33390 + C33391) * C17178 + (C33392 + C33393) * C17173 +
             C33406 * C17179 + C33407 * C17174) *
                C50779 * C1676 -
            (C34104 * C17174 + C34105 * C17179 + (C33786 + C33787) * C17173 +
             (C33788 + C33789) * C17178 +
             (C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                 C17172 +
             (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                 C17177) *
                C50779 * C50757) *
               C50919 +
           (((C33355 * C889 + C33353 * C894 + C33356 * C1218 + C50854 * C1226) *
                 C17177 +
             (C33355 * C895 + C33353 * C904 + C33356 * C1225 + C50854 * C1230) *
                 C17172 +
             (C34328 + C34329) * C17178 + (C34330 + C34331) * C17173 +
             (C34332 + C34333) * C17179 + (C34334 + C34335) * C17174) *
                C50779 * C50757 -
            (C33944 * C17174 + C33945 * C17179 + (C33592 + C33593) * C17173 +
             (C33594 + C33595) * C17178 +
             (C33356 * C895 + C50854 * C904 + C33355 * C299 + C33353 * C316) *
                 C17172 +
             (C33356 * C889 + C50854 * C894 + C33355 * C286 + C33353 * C300) *
                 C17177) *
                C50779 * C1676) *
               C50729) *
              C50911 +
          ((((C33789 + C33788) * C17177 + (C33787 + C33786) * C17172 +
             (C33785 + C33784) * C17178 + (C33783 + C33782) * C17173 +
             (C34114 + C34115) * C17179 + (C34116 + C34117) * C17174) *
                C50779 * C50757 -
            (C33408 * C17174 + C33409 * C17179 + (C33397 + C33396) * C17173 +
             (C33395 + C33394) * C17178 + (C33393 + C33392) * C17172 +
             (C33391 + C33390) * C17177) *
                C50779 * C1676) *
               C50919 +
           (((C33595 + C33594) * C17177 + (C33593 + C33592) * C17172 +
             (C33591 + C33590) * C17178 + (C33589 + C33588) * C17173 +
             (C33954 + C33955) * C17179 + (C33956 + C33957) * C17174) *
                C50779 * C1676 -
            ((C33356 * C1219 + C50854 * C1227 + C33355 * C901 + C33353 * C907) *
                 C17174 +
             (C33356 * C1215 + C50854 * C1220 + C33355 * C892 + C33353 * C900) *
                 C17179 +
             (C34335 + C34334) * C17173 + (C34333 + C34332) * C17178 +
             (C34331 + C34330) * C17172 + (C34329 + C34328) * C17177) *
                C50779 * C50757) *
               C50729) *
              C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                  C19841 +
              (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                  C50630) *
                 C2291 +
             ((C36366 + C36367) * C19841 + (C36368 + C36369) * C50630) * C2292 +
             C36389 * C2293) *
                C1676 -
            (C37991 * C2293 +
             ((C37050 + C37051) * C50630 + (C37052 + C37053) * C19841) * C2292 +
             ((C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                  C50630 +
              (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                  C19841) *
                 C2291) *
                C50757) *
               C50919 +
           ((((C37053 + C37052) * C19841 + (C37051 + C37050) * C50630) * C2291 +
             ((C37049 + C37048) * C19841 + (C37047 + C37046) * C50630) * C2292 +
             ((C37987 + C37988) * C19841 + (C37989 + C37990) * C50630) *
                 C2293) *
                C50757 -
            (C37318 * C2293 +
             ((C36373 + C36372) * C50630 + (C36371 + C36370) * C19841) * C2292 +
             ((C36369 + C36368) * C50630 + (C36367 + C36366) * C19841) *
                 C2291) *
                C1676) *
               C50729) *
              C50911 +
          (((((C33789 + C33788) * C19841 + (C33787 + C33786) * C50630) * C2291 +
             ((C34328 + C34329) * C19841 + (C34330 + C34331) * C50630) * C2292 +
             ((C37054 + C37055) * C19841 + (C37056 + C37057) * C50630) *
                 C2293) *
                C50757 -
            (C36386 * C2293 +
             ((C33592 + C33593) * C50630 + (C33594 + C33595) * C19841) * C2292 +
             ((C33393 + C33392) * C50630 + (C33391 + C33390) * C19841) *
                 C2291) *
                C1676) *
               C50919 +
           ((((C33595 + C33594) * C19841 + (C33593 + C33592) * C50630) * C2291 +
             ((C33596 + C33597) * C19841 + (C33598 + C33599) * C50630) * C2292 +
             ((C36378 + C36379) * C19841 + (C36380 + C36381) * C50630) *
                 C2293) *
                C1676 -
            (((C33356 * C3655 + C50854 * C3659 + C33355 * C3202 +
               C33353 * C3206) *
                  C50630 +
              (C33356 * C3653 + C50854 * C3656 + C33355 * C3197 +
               C33353 * C3201) *
                  C19841) *
                 C2293 +
             ((C37057 + C37056) * C50630 + (C37055 + C37054) * C19841) * C2292 +
             ((C34331 + C34330) * C50630 + (C34329 + C34328) * C19841) *
                 C2291) *
                C50757) *
               C50729) *
              C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[221] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                C17177 +
            (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                C17172 +
            (C33390 + C33391) * C17178 + (C33392 + C33393) * C17173 +
            C33406 * C17179 + C33407 * C17174) *
               C50779 * C50966 -
           (C34104 * C17174 + C34105 * C17179 + (C33786 + C33787) * C17173 +
            (C33788 + C33789) * C17178 +
            (C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                C17172 +
            (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                C17177) *
               C50779 * C50967 +
           ((C33355 * C464 + C33353 * C478 + C33356 * C1849 + C50854 * C1857) *
                C17177 +
            (C33355 * C479 + C33353 * C494 + C33356 * C1856 + C50854 * C1861) *
                C17172 +
            (C33790 + C33791) * C17178 + (C33792 + C33793) * C17173 +
            (C33794 + C33795) * C17179 + (C33796 + C33797) * C17174) *
               C50779 * C2092) *
              C50919 +
          (((C33355 * C889 + C33353 * C894 + C33356 * C1218 + C50854 * C1226) *
                C17177 +
            (C33355 * C895 + C33353 * C904 + C33356 * C1225 + C50854 * C1230) *
                C17172 +
            (C34328 + C34329) * C17178 + (C34330 + C34331) * C17173 +
            (C34332 + C34333) * C17179 + (C34334 + C34335) * C17174) *
               C50779 * C50967 -
           (C33944 * C17174 + C33945 * C17179 + (C33592 + C33593) * C17173 +
            (C33594 + C33595) * C17178 +
            (C33356 * C895 + C50854 * C904 + C33355 * C299 + C33353 * C316) *
                C17172 +
            (C33356 * C889 + C50854 * C894 + C33355 * C286 + C33353 * C300) *
                C17177) *
               C50779 * C50966 -
           ((C33356 * C6137 + C50854 * C6139 + C33355 * C1221 +
             C33353 * C1228) *
                C17174 +
            (C33356 * C6136 + C50854 * C6138 + C33355 * C1216 +
             C33353 * C1222) *
                C17179 +
            (C33356 * C4586 + C50854 * C4592 + C33355 * C1223 +
             C33353 * C1229) *
                C17173 +
            (C33356 * C4580 + C50854 * C4587 + C33355 * C1217 +
             C33353 * C1224) *
                C17178 +
            (C33356 * C4588 + C50854 * C4593 + C33355 * C1225 +
             C33353 * C1230) *
                C17172 +
            (C33356 * C4581 + C50854 * C4589 + C33355 * C1218 +
             C33353 * C1226) *
                C17177) *
               C50779 * C2092) *
              C50729) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C19841 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C50630) *
                C2291 +
            ((C36366 + C36367) * C19841 + (C36368 + C36369) * C50630) * C2292 +
            C36389 * C2293) *
               C50966 -
           (C37991 * C2293 +
            ((C37050 + C37051) * C50630 + (C37052 + C37053) * C19841) * C2292 +
            ((C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                 C50630 +
             (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                 C19841) *
                C2291) *
               C50967 +
           (((C33355 * C464 + C33353 * C478 + C33356 * C1849 + C50854 * C1857) *
                 C19841 +
             (C33355 * C479 + C33353 * C494 + C33356 * C1856 + C50854 * C1861) *
                 C50630) *
                C2291 +
            ((C37481 + C37482) * C19841 + (C37483 + C37484) * C50630) * C2292 +
            ((C37485 + C37486) * C19841 + (C37487 + C37488) * C50630) * C2293) *
               C2092) *
              C50919 +
          ((((C37053 + C37052) * C19841 + (C37051 + C37050) * C50630) * C2291 +
            ((C37049 + C37048) * C19841 + (C37047 + C37046) * C50630) * C2292 +
            ((C37987 + C37988) * C19841 + (C37989 + C37990) * C50630) * C2293) *
               C50967 -
           (C37318 * C2293 +
            ((C36373 + C36372) * C50630 + (C36371 + C36370) * C19841) * C2292 +
            ((C36369 + C36368) * C50630 + (C36367 + C36366) * C19841) * C2291) *
               C50966 -
           (((C33356 * C21297 + C50854 * C21299 + C33355 * C3657 +
              C33353 * C3660) *
                 C50630 +
             (C33356 * C21296 + C50854 * C21298 + C33355 * C3654 +
              C33353 * C3658) *
                 C19841) *
                C2293 +
            ((C37488 + C37487) * C50630 + (C37486 + C37485) * C19841) * C2292 +
            ((C37484 + C37483) * C50630 + (C37482 + C37481) * C19841) * C2291) *
               C2092) *
              C50729) *
         C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[222] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                C17177 +
            (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                C17172 +
            (C33390 + C33391) * C17178 + (C33392 + C33393) * C17173 +
            C33406 * C17179 + C33407 * C17174) *
               C50779 * C1676 -
           (C34104 * C17174 + C34105 * C17179 + (C33786 + C33787) * C17173 +
            (C33788 + C33789) * C17178 +
            (C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                C17172 +
            (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                C17177) *
               C50779 * C50757) *
              C278 +
          (((C33355 * C889 + C33353 * C894 + C33356 * C1218 + C50854 * C1226) *
                C17177 +
            (C33355 * C895 + C33353 * C904 + C33356 * C1225 + C50854 * C1230) *
                C17172 +
            (C34328 + C34329) * C17178 + (C34330 + C34331) * C17173 +
            (C34332 + C34333) * C17179 + (C34334 + C34335) * C17174) *
               C50779 * C50757 -
           (C33944 * C17174 + C33945 * C17179 + (C33592 + C33593) * C17173 +
            (C33594 + C33595) * C17178 +
            (C33356 * C895 + C50854 * C904 + C33355 * C299 + C33353 * C316) *
                C17172 +
            (C33356 * C889 + C50854 * C894 + C33355 * C286 + C33353 * C300) *
                C17177) *
               C50779 * C1676) *
              C279 +
          (((C33355 * C287 + C33353 * C301 + C33356 * C1565 + C50854 * C1573) *
                C17177 +
            (C33355 * C302 + C33353 * C317 + C33356 * C1572 + C50854 * C1577) *
                C17172 +
            (C33596 + C33597) * C17178 + (C33598 + C33599) * C17173 +
            (C33600 + C33601) * C17179 + (C33602 + C33603) * C17174) *
               C50779 * C1676 -
           ((C33356 * C2673 + C50854 * C2677 + C33355 * C1568 +
             C33353 * C1575) *
                C17174 +
            (C33356 * C2668 + C50854 * C2674 + C33355 * C1563 +
             C33353 * C1569) *
                C17179 +
            (C33356 * C2672 + C50854 * C2676 + C33355 * C1570 +
             C33353 * C1576) *
                C17173 +
            (C33356 * C2667 + C50854 * C2671 + C33355 * C1564 +
             C33353 * C1571) *
                C17178 +
            (C33356 * C2670 + C50854 * C2675 + C33355 * C1572 +
             C33353 * C1577) *
                C17172 +
            (C33356 * C2666 + C50854 * C2669 + C33355 * C1565 +
             C33353 * C1573) *
                C17177) *
               C50779 * C50757) *
              C280) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                C17177 +
            (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                C17172 +
            (C33390 + C33391) * C17178 + (C33392 + C33393) * C17173 +
            C33406 * C17179 + C33407 * C17174) *
               C50779 * C1676 -
           (C34104 * C17174 + C34105 * C17179 + (C33786 + C33787) * C17173 +
            (C33788 + C33789) * C17178 +
            (C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                C17172 +
            (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                C17177) *
               C50779 * C50757) *
              C50677 * C1027 +
          (((C33789 + C33788) * C17177 + (C33787 + C33786) * C17172 +
            (C33785 + C33784) * C17178 + (C33783 + C33782) * C17173 +
            (C34114 + C34115) * C17179 + (C34116 + C34117) * C17174) *
               C50779 * C50757 -
           (C33408 * C17174 + C33409 * C17179 + (C33397 + C33396) * C17173 +
            (C33395 + C33394) * C17178 + (C33393 + C33392) * C17172 +
            (C33391 + C33390) * C17177) *
               C50779 * C1676) *
              C50677 * C1028 +
          ((C33406 * C17177 + C33407 * C17172 + (C33401 + C33400) * C17178 +
            (C33399 + C33398) * C17173 + (C33402 + C33403) * C17179 +
            (C33404 + C33405) * C17174) *
               C50779 * C1676 -
           ((C33356 * C488 + C50854 * C499 + C33355 * C487 + C33353 * C498) *
                C17174 +
            (C33356 * C469 + C50854 * C489 + C33355 * C468 + C33353 * C486) *
                C17179 +
            (C34117 + C34116) * C17173 + (C34115 + C34114) * C17178 +
            C34104 * C17172 + C34105 * C17177) *
               C50779 * C50757) *
              C50677 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
               C17177 +
           (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
               C17172 +
           (C33390 + C33391) * C17178 + (C33392 + C33393) * C17173 +
           C33406 * C17179 + C33407 * C17174) *
              C50779 * C1842 -
          (C34104 * C17174 + C34105 * C17179 + (C33786 + C33787) * C17173 +
           (C33788 + C33789) * C17178 +
           (C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
               C17172 +
           (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
               C17177) *
              C50779 * C1843 +
          ((C33355 * C464 + C33353 * C478 + C33356 * C1849 + C50854 * C1857) *
               C17177 +
           (C33355 * C479 + C33353 * C494 + C33356 * C1856 + C50854 * C1861) *
               C17172 +
           (C33790 + C33791) * C17178 + (C33792 + C33793) * C17173 +
           (C33794 + C33795) * C17179 + (C33796 + C33797) * C17174) *
              C50779 * C1844 -
          ((C33356 * C5573 + C50854 * C5577 + C33355 * C1852 + C33353 * C1859) *
               C17174 +
           (C33356 * C5568 + C50854 * C5574 + C33355 * C1847 + C33353 * C1853) *
               C17179 +
           (C33356 * C5572 + C50854 * C5576 + C33355 * C1854 + C33353 * C1860) *
               C17173 +
           (C33356 * C5567 + C50854 * C5571 + C33355 * C1848 + C33353 * C1855) *
               C17178 +
           (C33356 * C5570 + C50854 * C5575 + C33355 * C1856 + C33353 * C1861) *
               C17172 +
           (C33356 * C5566 + C50854 * C5569 + C33355 * C1849 + C33353 * C1857) *
               C17177) *
              C50779 * C1845) *
         C50677 * C50658) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C19841 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C50630) *
                C2291 +
            ((C36366 + C36367) * C19841 + (C36368 + C36369) * C50630) * C2292 +
            C36389 * C2293) *
               C1676 -
           (C37991 * C2293 +
            ((C37050 + C37051) * C50630 + (C37052 + C37053) * C19841) * C2292 +
            ((C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                 C50630 +
             (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                 C19841) *
                C2291) *
               C50757) *
              C50677 * C1027 +
          ((((C33789 + C33788) * C19841 + (C33787 + C33786) * C50630) * C2291 +
            ((C34328 + C34329) * C19841 + (C34330 + C34331) * C50630) * C2292 +
            ((C37054 + C37055) * C19841 + (C37056 + C37057) * C50630) * C2293) *
               C50757 -
           (C36386 * C2293 +
            ((C33592 + C33593) * C50630 + (C33594 + C33595) * C19841) * C2292 +
            ((C33393 + C33392) * C50630 + (C33391 + C33390) * C19841) * C2291) *
               C1676) *
              C50677 * C1028 +
          (((C33406 * C19841 + C33407 * C50630) * C2291 +
            ((C33591 + C33590) * C19841 + (C33589 + C33588) * C50630) * C2292 +
            ((C33600 + C33601) * C19841 + (C33602 + C33603) * C50630) * C2293) *
               C1676 -
           (((C33356 * C2673 + C50854 * C2677 + C33355 * C1568 +
              C33353 * C1575) *
                 C50630 +
             (C33356 * C2668 + C50854 * C2674 + C33355 * C1563 +
              C33353 * C1569) *
                 C19841) *
                C2293 +
            ((C34335 + C34334) * C50630 + (C34333 + C34332) * C19841) * C2292 +
            (C34104 * C50630 + C34105 * C19841) * C2291) *
               C50757) *
              C50677 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C19841 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C50630) *
                C2291 +
            ((C36366 + C36367) * C19841 + (C36368 + C36369) * C50630) * C2292 +
            C36389 * C2293) *
               C1676 -
           (C37991 * C2293 +
            ((C37050 + C37051) * C50630 + (C37052 + C37053) * C19841) * C2292 +
            ((C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                 C50630 +
             (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                 C19841) *
                C2291) *
               C50757) *
              C278 +
          ((((C37053 + C37052) * C19841 + (C37051 + C37050) * C50630) * C2291 +
            ((C37049 + C37048) * C19841 + (C37047 + C37046) * C50630) * C2292 +
            ((C37987 + C37988) * C19841 + (C37989 + C37990) * C50630) * C2293) *
               C50757 -
           (C37318 * C2293 +
            ((C36373 + C36372) * C50630 + (C36371 + C36370) * C19841) * C2292 +
            ((C36369 + C36368) * C50630 + (C36367 + C36366) * C19841) * C2291) *
               C1676) *
              C279 +
          ((C36389 * C2291 +
            ((C36377 + C36376) * C19841 + (C36375 + C36374) * C50630) * C2292 +
            ((C37314 + C37315) * C19841 + (C37316 + C37317) * C50630) * C2293) *
               C1676 -
           (((C33356 * C20679 + C50854 * C20681 + C33355 * C4171 +
              C33353 * C4174) *
                 C50630 +
             (C33356 * C20678 + C50854 * C20680 + C33355 * C4168 +
              C33353 * C4172) *
                 C19841) *
                C2293 +
            ((C37990 + C37989) * C50630 + (C37988 + C37987) * C19841) * C2292 +
            C37991 * C2291) *
               C50757) *
              C280) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                C19841 +
            (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                C50630) *
               C2291 +
           ((C36366 + C36367) * C19841 + (C36368 + C36369) * C50630) * C2292 +
           C36389 * C2293) *
              C1842 -
          (C37991 * C2293 +
           ((C37050 + C37051) * C50630 + (C37052 + C37053) * C19841) * C2292 +
           ((C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                C50630 +
            (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                C19841) *
               C2291) *
              C1843 +
          (((C33355 * C464 + C33353 * C478 + C33356 * C1849 + C50854 * C1857) *
                C19841 +
            (C33355 * C479 + C33353 * C494 + C33356 * C1856 + C50854 * C1861) *
                C50630) *
               C2291 +
           ((C37481 + C37482) * C19841 + (C37483 + C37484) * C50630) * C2292 +
           ((C37485 + C37486) * C19841 + (C37487 + C37488) * C50630) * C2293) *
              C1844 -
          (((C33356 * C22965 + C50854 * C22967 + C33355 * C4584 +
             C33353 * C4591) *
                C50630 +
            (C33356 * C22964 + C50854 * C22966 + C33355 * C4579 +
             C33353 * C4585) *
                C19841) *
               C2293 +
           ((C33356 * C6552 + C50854 * C6555 + C33355 * C4588 +
             C33353 * C4593) *
                C50630 +
            (C33356 * C6549 + C50854 * C6553 + C33355 * C4581 +
             C33353 * C4589) *
                C19841) *
               C2292 +
           ((C33356 * C5570 + C50854 * C5575 + C33355 * C1856 +
             C33353 * C1861) *
                C50630 +
            (C33356 * C5566 + C50854 * C5569 + C33355 * C1849 +
             C33353 * C1857) *
                C19841) *
               C2291) *
              C1845) *
         C50677 * C50658) /
            (p * q * std::sqrt(p + q));
    d2ee[223] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                C17177 +
            (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                C17172 +
            (C33390 + C33391) * C17178 + (C33392 + C33393) * C17173 +
            C33406 * C17179 + C33407 * C17174) *
               C50779 * C50966 -
           (C34104 * C17174 + C34105 * C17179 + (C33786 + C33787) * C17173 +
            (C33788 + C33789) * C17178 +
            (C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                C17172 +
            (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                C17177) *
               C50779 * C50967 +
           ((C33355 * C464 + C33353 * C478 + C33356 * C1849 + C50854 * C1857) *
                C17177 +
            (C33355 * C479 + C33353 * C494 + C33356 * C1856 + C50854 * C1861) *
                C17172 +
            (C33790 + C33791) * C17178 + (C33792 + C33793) * C17173 +
            (C33794 + C33795) * C17179 + (C33796 + C33797) * C17174) *
               C50779 * C2092) *
              C50677 * C50911 +
          (((C33789 + C33788) * C17177 + (C33787 + C33786) * C17172 +
            (C33785 + C33784) * C17178 + (C33783 + C33782) * C17173 +
            (C34114 + C34115) * C17179 + (C34116 + C34117) * C17174) *
               C50779 * C50967 -
           (C33408 * C17174 + C33409 * C17179 + (C33397 + C33396) * C17173 +
            (C33395 + C33394) * C17178 + (C33393 + C33392) * C17172 +
            (C33391 + C33390) * C17177) *
               C50779 * C50966 -
           ((C33356 * C1850 + C50854 * C1858 + C33355 * C485 + C33353 * C497) *
                C17174 +
            (C33356 * C1846 + C50854 * C1851 + C33355 * C467 + C33353 * C484) *
                C17179 +
            (C33797 + C33796) * C17173 + (C33795 + C33794) * C17178 +
            (C33793 + C33792) * C17172 + (C33791 + C33790) * C17177) *
               C50779 * C2092) *
              C50677 * C50664)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C19841 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C50630) *
                C2291 +
            ((C36366 + C36367) * C19841 + (C36368 + C36369) * C50630) * C2292 +
            C36389 * C2293) *
               C50966 -
           (C37991 * C2293 +
            ((C37050 + C37051) * C50630 + (C37052 + C37053) * C19841) * C2292 +
            ((C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                 C50630 +
             (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                 C19841) *
                C2291) *
               C50967 +
           (((C33355 * C464 + C33353 * C478 + C33356 * C1849 + C50854 * C1857) *
                 C19841 +
             (C33355 * C479 + C33353 * C494 + C33356 * C1856 + C50854 * C1861) *
                 C50630) *
                C2291 +
            ((C37481 + C37482) * C19841 + (C37483 + C37484) * C50630) * C2292 +
            ((C37485 + C37486) * C19841 + (C37487 + C37488) * C50630) * C2293) *
               C2092) *
              C50677 * C50911 +
          ((((C33789 + C33788) * C19841 + (C33787 + C33786) * C50630) * C2291 +
            ((C34328 + C34329) * C19841 + (C34330 + C34331) * C50630) * C2292 +
            ((C37054 + C37055) * C19841 + (C37056 + C37057) * C50630) * C2293) *
               C50967 -
           (C36386 * C2293 +
            ((C33592 + C33593) * C50630 + (C33594 + C33595) * C19841) * C2292 +
            ((C33393 + C33392) * C50630 + (C33391 + C33390) * C19841) * C2291) *
               C50966 -
           (((C33356 * C4582 + C50854 * C4590 + C33355 * C2672 +
              C33353 * C2676) *
                 C50630 +
             (C33356 * C4578 + C50854 * C4583 + C33355 * C2667 +
              C33353 * C2671) *
                 C19841) *
                C2293 +
            ((C33356 * C4586 + C50854 * C4592 + C33355 * C1223 +
              C33353 * C1229) *
                 C50630 +
             (C33356 * C4580 + C50854 * C4587 + C33355 * C1217 +
              C33353 * C1224) *
                 C19841) *
                C2292 +
            ((C33793 + C33792) * C50630 + (C33791 + C33790) * C19841) * C2291) *
               C2092) *
              C50677 * C50664)) /
            (p * q * std::sqrt(p + q));
    d2ee[224] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                C17177 +
            (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                C17172 +
            (C33390 + C33391) * C17178 + (C33392 + C33393) * C17173 +
            C33406 * C17179 + C33407 * C17174) *
               C50779 * C1676 -
           (C34104 * C17174 + C34105 * C17179 + (C33786 + C33787) * C17173 +
            (C33788 + C33789) * C17178 +
            (C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                C17172 +
            (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                C17177) *
               C50779 * C50757) *
              C50677 * C1027 +
          (((C33789 + C33788) * C17177 + (C33787 + C33786) * C17172 +
            (C33785 + C33784) * C17178 + (C33783 + C33782) * C17173 +
            (C34114 + C34115) * C17179 + (C34116 + C34117) * C17174) *
               C50779 * C50757 -
           (C33408 * C17174 + C33409 * C17179 + (C33397 + C33396) * C17173 +
            (C33395 + C33394) * C17178 + (C33393 + C33392) * C17172 +
            (C33391 + C33390) * C17177) *
               C50779 * C1676) *
              C50677 * C1028 +
          ((C33406 * C17177 + C33407 * C17172 + (C33401 + C33400) * C17178 +
            (C33399 + C33398) * C17173 + (C33402 + C33403) * C17179 +
            (C33404 + C33405) * C17174) *
               C50779 * C1676 -
           ((C33356 * C488 + C50854 * C499 + C33355 * C487 + C33353 * C498) *
                C17174 +
            (C33356 * C469 + C50854 * C489 + C33355 * C468 + C33353 * C486) *
                C17179 +
            (C34117 + C34116) * C17173 + (C34115 + C34114) * C17178 +
            C34104 * C17172 + C34105 * C17177) *
               C50779 * C50757) *
              C50677 * C1029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                C17177 +
            (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                C17172 +
            (C33390 + C33391) * C17178 + (C33392 + C33393) * C17173 +
            C33406 * C17179 + C33407 * C17174) *
               C50779 * C1676 -
           (C34104 * C17174 + C34105 * C17179 + (C33786 + C33787) * C17173 +
            (C33788 + C33789) * C17178 +
            (C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                C17172 +
            (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                C17177) *
               C50779 * C50757) *
              C278 +
          (((C33355 * C889 + C33353 * C894 + C33356 * C1218 + C50854 * C1226) *
                C17177 +
            (C33355 * C895 + C33353 * C904 + C33356 * C1225 + C50854 * C1230) *
                C17172 +
            (C34328 + C34329) * C17178 + (C34330 + C34331) * C17173 +
            (C34332 + C34333) * C17179 + (C34334 + C34335) * C17174) *
               C50779 * C50757 -
           (C33944 * C17174 + C33945 * C17179 + (C33592 + C33593) * C17173 +
            (C33594 + C33595) * C17178 +
            (C33356 * C895 + C50854 * C904 + C33355 * C299 + C33353 * C316) *
                C17172 +
            (C33356 * C889 + C50854 * C894 + C33355 * C286 + C33353 * C300) *
                C17177) *
               C50779 * C1676) *
              C279 +
          (((C33355 * C287 + C33353 * C301 + C33356 * C1565 + C50854 * C1573) *
                C17177 +
            (C33355 * C302 + C33353 * C317 + C33356 * C1572 + C50854 * C1577) *
                C17172 +
            (C33596 + C33597) * C17178 + (C33598 + C33599) * C17173 +
            (C33600 + C33601) * C17179 + (C33602 + C33603) * C17174) *
               C50779 * C1676 -
           ((C33356 * C2673 + C50854 * C2677 + C33355 * C1568 +
             C33353 * C1575) *
                C17174 +
            (C33356 * C2668 + C50854 * C2674 + C33355 * C1563 +
             C33353 * C1569) *
                C17179 +
            (C33356 * C2672 + C50854 * C2676 + C33355 * C1570 +
             C33353 * C1576) *
                C17173 +
            (C33356 * C2667 + C50854 * C2671 + C33355 * C1564 +
             C33353 * C1571) *
                C17178 +
            (C33356 * C2670 + C50854 * C2675 + C33355 * C1572 +
             C33353 * C1577) *
                C17172 +
            (C33356 * C2666 + C50854 * C2669 + C33355 * C1565 +
             C33353 * C1573) *
                C17177) *
               C50779 * C50757) *
              C280) *
         C50658) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C19841 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C50630) *
                C2291 +
            ((C36366 + C36367) * C19841 + (C36368 + C36369) * C50630) * C2292 +
            C36389 * C2293) *
               C1676 -
           (C37991 * C2293 +
            ((C37050 + C37051) * C50630 + (C37052 + C37053) * C19841) * C2292 +
            ((C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                 C50630 +
             (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                 C19841) *
                C2291) *
               C50757) *
              C50677 * C1027 +
          ((((C33789 + C33788) * C19841 + (C33787 + C33786) * C50630) * C2291 +
            ((C34328 + C34329) * C19841 + (C34330 + C34331) * C50630) * C2292 +
            ((C37054 + C37055) * C19841 + (C37056 + C37057) * C50630) * C2293) *
               C50757 -
           (C36386 * C2293 +
            ((C33592 + C33593) * C50630 + (C33594 + C33595) * C19841) * C2292 +
            ((C33393 + C33392) * C50630 + (C33391 + C33390) * C19841) * C2291) *
               C1676) *
              C50677 * C1028 +
          (((C33406 * C19841 + C33407 * C50630) * C2291 +
            ((C33591 + C33590) * C19841 + (C33589 + C33588) * C50630) * C2292 +
            ((C33600 + C33601) * C19841 + (C33602 + C33603) * C50630) * C2293) *
               C1676 -
           (((C33356 * C2673 + C50854 * C2677 + C33355 * C1568 +
              C33353 * C1575) *
                 C50630 +
             (C33356 * C2668 + C50854 * C2674 + C33355 * C1563 +
              C33353 * C1569) *
                 C19841) *
                C2293 +
            ((C34335 + C34334) * C50630 + (C34333 + C34332) * C19841) * C2292 +
            (C34104 * C50630 + C34105 * C19841) * C2291) *
               C50757) *
              C50677 * C1029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C33355 * C122 + C33353 * C129 + C33356 * C463 + C50854 * C477) *
                 C19841 +
             (C33355 * C130 + C33353 * C143 + C33356 * C476 + C50854 * C493) *
                 C50630) *
                C2291 +
            ((C36366 + C36367) * C19841 + (C36368 + C36369) * C50630) * C2292 +
            C36389 * C2293) *
               C1676 -
           (C37991 * C2293 +
            ((C37050 + C37051) * C50630 + (C37052 + C37053) * C19841) * C2292 +
            ((C33356 * C479 + C50854 * C494 + C33355 * C476 + C33353 * C493) *
                 C50630 +
             (C33356 * C464 + C50854 * C478 + C33355 * C463 + C33353 * C477) *
                 C19841) *
                C2291) *
               C50757) *
              C278 +
          ((((C37053 + C37052) * C19841 + (C37051 + C37050) * C50630) * C2291 +
            ((C37049 + C37048) * C19841 + (C37047 + C37046) * C50630) * C2292 +
            ((C37987 + C37988) * C19841 + (C37989 + C37990) * C50630) * C2293) *
               C50757 -
           (C37318 * C2293 +
            ((C36373 + C36372) * C50630 + (C36371 + C36370) * C19841) * C2292 +
            ((C36369 + C36368) * C50630 + (C36367 + C36366) * C19841) * C2291) *
               C1676) *
              C279 +
          ((C36389 * C2291 +
            ((C36377 + C36376) * C19841 + (C36375 + C36374) * C50630) * C2292 +
            ((C37314 + C37315) * C19841 + (C37316 + C37317) * C50630) * C2293) *
               C1676 -
           (((C33356 * C20679 + C50854 * C20681 + C33355 * C4171 +
              C33353 * C4174) *
                 C50630 +
             (C33356 * C20678 + C50854 * C20680 + C33355 * C4168 +
              C33353 * C4172) *
                 C19841) *
                C2293 +
            ((C37990 + C37989) * C50630 + (C37988 + C37987) * C19841) * C2292 +
            C37991 * C2291) *
               C50757) *
              C280) *
         C50658) /
            (p * q * std::sqrt(p + q));
}
