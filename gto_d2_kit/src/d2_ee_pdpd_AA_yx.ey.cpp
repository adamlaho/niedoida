/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_pdpd_AA_yx.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_1212_11_21(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C49724 = 0 * ae;
    const double C49723 = ae * be;
    const double C49722 = 0 * be;
    const double C49721 = ae + be;
    const double C49720 = 0 * be;
    const double C49719 = xA - xB;
    const double C49769 = 0 * be;
    const double C49768 = yA - yB;
    const double C49808 = 0 * ae;
    const double C49804 = 0 * be;
    const double C49846 = xP - xQ;
    const double C49845 = yP - yQ;
    const double C49844 = p + q;
    const double C49843 = p * q;
    const double C49853 = std::pow(ae, 2);
    const double C49851 = bs[3];
    const double C49861 = bs[4];
    const double C49870 = bs[5];
    const double C49884 = bs[6];
    const double C49906 = bs[7];
    const double C50015 = zP - zQ;
    const double C50178 = bs[2];
    const double C122 = bs[0];
    const double C50560 = ce + de;
    const double C50559 = ce * de;
    const double C50558 = xC - xD;
    const double C50582 = yC - yD;
    const double C50598 = zC - zD;
    const double C50695 = zA - zB;
    const double C49729 = C49724 / C49721;
    const double C49726 = 2 * C49721;
    const double C49725 = std::pow(C49721, 2);
    const double C49728 = C49723 * C49719;
    const double C49727 = C49719 * C49722;
    const double C50534 = C49719 * be;
    const double C50533 = C49719 * ae;
    const double C50532 = std::pow(C49719, 2);
    const double C49770 = C49723 * C49768;
    const double C49805 = C49768 * C49769;
    const double C50684 = std::pow(C49768, 2);
    const double C50734 = C49768 * be;
    const double C50733 = C49768 * ae;
    const double C49813 = C49808 / C49721;
    const double C49871 = std::pow(C49846, 2);
    const double C49929 = C49846 * ae;
    const double C49854 = C49845 * ae;
    const double C49852 = C49845 * C49846;
    const double C50041 = std::pow(C49845, 2);
    const double C49847 = 2 * C49843;
    const double C50025 = std::pow(C50015, 2);
    const double C50562 = 2 * C50560;
    const double C50572 = std::pow(C50560, 2);
    const double C50564 = C50558 * de;
    const double C50563 = C50558 * ce;
    const double C50561 = std::pow(C50558, 2);
    const double C50583 = std::pow(C50582, 2);
    const double C50635 = C50582 * de;
    const double C50634 = C50582 * ce;
    const double C50599 = std::pow(C50598, 2);
    const double C50663 = C50598 * de;
    const double C50662 = C50598 * ce;
    const double C50696 = std::pow(C50695, 2);
    const double C50760 = C50695 * be;
    const double C50759 = C50695 * ae;
    const double C50542 = std::pow(C49726, -1);
    const double C50840 = std::pow(C49726, -2);
    const double C49730 = 2 * C49725;
    const double C143 = (std::pow((2 * p * q) / (p + q), 2) * bs[2] *
                         (yP - yQ) * (xP - xQ) * std::pow(ae, 2)) /
                        C49725;
    const double C50818 = 4 * C49725;
    const double C49731 = C49727 / C49721;
    const double C50535 = C50532 * C49723;
    const double C49810 = C49805 / C49721;
    const double C50685 = C50684 * C49723;
    const double C49932 = C49861 * C49929;
    const double C49938 = C49851 * C49929;
    const double C49945 = C49870 * C49929;
    const double C49957 = C49884 * C49929;
    const double C49978 = C49906 * C49929;
    const double C49857 = C49851 * C49854;
    const double C49863 = C49861 * C49854;
    const double C49873 = C49870 * C49854;
    const double C49888 = C49884 * C49854;
    const double C49912 = C49906 * C49854;
    const double C49856 = C49852 * C49853;
    const double C49848 = C49847 / C49844;
    const double C129 = (-(bs[1] * C49929 * C49847) / C49844) / C49721;
    const double C133 = (-(bs[1] * C49854 * C49847) / C49844) / C49721;
    const double C123 = -(C49846 * bs[1] * C49847) / C49844;
    const double C256 = -(C49845 * bs[1] * C49847) / C49844;
    const double C397 = -(C50015 * bs[1] * C49847) / C49844;
    const double C50573 = std::pow(C50562, -1);
    const double C50827 = std::pow(C50562, -2);
    const double C50577 = 2 * C50572;
    const double C50825 = 4 * C50572;
    const double C50565 = C50561 * C50559;
    const double C50584 = C50583 * C50559;
    const double C50600 = C50599 * C50559;
    const double C50697 = C50696 * C49723;
    const double C49736 = C49722 / C49730;
    const double C49734 = C49720 / C49730;
    const double C49807 = C49769 / C49730;
    const double C49811 = C49804 / C49730;
    const double C49733 = 0 - C49731;
    const double C50536 = C50535 / C49721;
    const double C49814 = 0 - C49810;
    const double C50686 = C50685 / C49721;
    const double C49862 = C49861 * C49856;
    const double C49872 = C49870 * C49856;
    const double C49886 = C49884 * C49856;
    const double C49910 = C49906 * C49856;
    const double C49850 = -C49848;
    const double C49860 = std::pow(C49848, 4);
    const double C49883 = std::pow(C49848, 6);
    const double C144 = (ae * std::pow(C49848, 2) * bs[2] * C49845 * ae +
                         C49846 * std::pow(-C49848, 3) * bs[3] * C49845 *
                             C49846 * std::pow(ae, 2)) /
                        C49725;
    const double C50177 = std::pow(C49848, 2);
    const double C130 =
        (C49846 * std::pow(C49848, 2) * bs[2] * C49929) / C49721 -
        (ae * bs[1] * C49847) / (C49844 * C49721);
    const double C50566 = C50565 / C50560;
    const double C50585 = C50584 / C50560;
    const double C50601 = C50600 / C50560;
    const double C50698 = C50697 / C49721;
    const double C49738 = C49733 * ae;
    const double C50537 = -C50536;
    const double C49817 = C49814 * ae;
    const double C50687 = -C50686;
    const double C49855 = std::pow(C49850, 3);
    const double C49869 = std::pow(C49850, 5);
    const double C49905 = std::pow(C49850, 7);
    const double C49865 = C49860 * C49863;
    const double C49864 = C49860 * C49862;
    const double C49931 = C49861 * C49860;
    const double C49933 = C49860 * C49932;
    const double C49891 = C49883 * C49888;
    const double C49890 = C49883 * C49886;
    const double C49959 = C49883 * C49957;
    const double C49979 = C49884 * C49883;
    const double C50179 = C50178 * C50177;
    const double C134 = (C49846 * C50177 * C50178 * C49854) / C49721;
    const double C266 = (C49845 * C50177 * C50178 * C49854) / C49721 -
                        (ae * bs[1] * C49847) / (C49844 * C49721);
    const double C270 = (C49845 * C50177 * C50178 * C49929) / C49721;
    const double C407 = (C50015 * C50177 * C50178 * C49854) / C49721;
    const double C411 = (C50015 * C50177 * C50178 * C49929) / C49721;
    const double C50567 = -C50566;
    const double C50586 = -C50585;
    const double C50602 = -C50601;
    const double C50699 = -C50698;
    const double C49741 = C49738 / C49721;
    const double C50538 = std::exp(C50537);
    const double C49819 = C49817 / C49721;
    const double C50688 = std::exp(C50687);
    const double C49858 = C49855 * C49857;
    const double C49930 = C49851 * C49855;
    const double C49939 = C49855 * C49938;
    const double C286 = (ae * std::pow(C49848, 2) * bs[2] * C49929 +
                         C49845 * C49855 * C49851 * C49856) /
                        C49725;
    const double C427 = ((zP - zQ) * C49855 * C49851 * C49856) / C49725;
    const double C49875 = C49869 * C49873;
    const double C49874 = C49869 * C49872;
    const double C49948 = C49869 * C49945;
    const double C49958 = C49870 * C49869;
    const double C49915 = C49905 * C49912;
    const double C49914 = C49905 * C49910;
    const double C49981 = C49905 * C49978;
    const double C49868 = ae * C49865;
    const double C49867 = C49846 * C49865;
    const double C50289 = C49845 * C49865;
    const double C428 =
        (C49855 * C49851 * C49856 + C49864 * std::pow(zP - zQ, 2)) / C49725;
    const double C49947 = C49846 * C49931;
    const double C49946 = C49931 * ae;
    const double C50188 = C49931 * C49871;
    const double C50291 = C49931 * C50041;
    const double C50334 = C49845 * C49931;
    const double C50513 = C49931 * C50025;
    const double C50524 = C50015 * C49931;
    const double C49941 = C49846 * C49933;
    const double C50039 = ae * C49933;
    const double C50038 = C49845 * C49933;
    const double C49893 = C49891 * C49871;
    const double C49904 = ae * C49891;
    const double C49903 = C49846 * C49891;
    const double C50389 = C49845 * C49891;
    const double C50425 = C49891 * C50025;
    const double C49892 = C49846 * C49890;
    const double C50085 = C49845 * C49890;
    const double C50100 = C49890 * C50025;
    const double C50110 = C50015 * C49890;
    const double C49963 = C49846 * C49959;
    const double C50086 = C49959 * C50041;
    const double C50130 = ae * C49959;
    const double C50129 = C49845 * C49959;
    const double C50149 = C49959 * C50025;
    const double C50158 = C50015 * C49959;
    const double C49984 = C49979 * C49871;
    const double C49983 = C49846 * C49979;
    const double C49982 = C49979 * ae;
    const double C50392 = C49979 * C50041;
    const double C124 = C50179 * C49871 - (bs[1] * C49847) / C49844;
    const double C255 = C49845 * C49846 * C50179;
    const double C257 = C50179 * C50041 - (bs[1] * C49847) / C49844;
    const double C396 = C50015 * C49846 * C50179;
    const double C398 = C50179 * C50025 - (bs[1] * C49847) / C49844;
    const double C775 = C50015 * C49845 * C50179;
    const double C50568 = std::exp(C50567);
    const double C50587 = std::exp(C50586);
    const double C50603 = std::exp(C50602);
    const double C50700 = std::exp(C50699);
    const double C49743 = C49741 - C49734;
    const double C19854 = C50538 * C270;
    const double C22004 = C50538 * C411;
    const double C49732 = C49728 * C50538;
    const double C50539 = C50538 * C50533;
    const double C50543 = C50542 * C50538;
    const double C50815 = C50538 * C50534;
    const double C50812 = C50538 / C49726;
    const double C16960 = C50840 * C50538;
    const double C49821 = C49819 - C49811;
    const double C49771 = C49770 * C50688;
    const double C121 = -(2 * C49723 * (yA - yB) * C50688) / C49721;
    const double C50735 = C50688 * C50733;
    const double C50738 = C50542 * C50688;
    const double C50844 = C50688 * C50734;
    const double C50839 = C50688 / C49726;
    const double C2161 = C50840 * C50688;
    const double C145 = (C49855 * C49851 * C49856 + ae * C49846 * C49858 +
                         C49846 * (ae * C49858 + C49846 * std::pow(C49848, 4) *
                                                     bs[4] * C49856)) /
                        C49725;
    const double C146 =
        (2 * (ae * C49858 + C49846 * C49864) +
         ae * (C49858 + C49865 * std::pow(C49846, 2)) +
         C49846 * (C49864 + ae * C49846 * C49865 +
                   C49846 * (ae * C49865 +
                             C49846 * std::pow(C49850, 5) * bs[5] * C49856))) /
        C49725;
    const double C285 = (ae * (C49846 * C49855 * C49851 * C49929 +
                               bs[2] * std::pow(C49848, 2) * ae) +
                         C49845 * (ae * C49858 + C49846 * C49864)) /
                        C49725;
    const double C426 = ((zP - zQ) * (ae * C49858 + C49846 * C49864)) / C49725;
    const double C135 = (C50177 * C50178 * C49854 + C49858 * C49871) / C49721;
    const double C136 =
        (2 * C49846 * C49858 + C49846 * (C49858 + C49865 * C49871)) / C49721;
    const double C265 =
        (C49845 * C49846 * C49858 + C49846 * C50179 * ae) / C49721;
    const double C275 =
        (C50177 * C50178 * C49854 + C49845 * (C49845 * C49858 + C50179 * ae) +
         C49845 * C50179 * ae) /
        C49721;
    const double C405 = (C50015 * (C49858 + C49865 * C49871)) / C49721;
    const double C406 = (C50015 * C49846 * C49858) / C49721;
    const double C416 = (C50177 * C50178 * C49854 + C49858 * C50025) / C49721;
    const double C784 = (C50015 * (C49845 * C49858 + C50179 * ae)) / C49721;
    const double C1721 =
        (2 * C50015 * C49858 + C50015 * (C49858 + C49865 * C50025)) / C49721;
    const double C49942 = C49930 * ae;
    const double C50187 = C49846 * C49930;
    const double C50290 = C49845 * C49930;
    const double C264 = (C49845 * (C49858 + C49865 * C49871) +
                         (C50179 + C49930 * C49871) * ae) /
                        C49721;
    const double C125 =
        2 * C49846 * C50179 + C49846 * (C50179 + C49930 * C49871);
    const double C254 = C49845 * (C50179 + C49930 * C49871);
    const double C395 = C50015 * (C50179 + C49930 * C49871);
    const double C972 =
        2 * C49845 * C50179 + C49845 * (C50179 + C49930 * C50041);
    const double C1433 = C50015 * (C50179 + C49930 * C50041);
    const double C1717 =
        2 * C50015 * C50179 + C50015 * (C50179 + C49930 * C50025);
    const double C5366 =
        3 * (C50179 + C49930 * C50025) +
        C50015 * (2 * C50015 * C49930 + C50015 * (C49930 + C49931 * C50025));
    const double C287 = (C49855 * C49851 * C49856 + ae * C49845 * C49939 +
                         C49845 * (ae * C49939 + C49845 * C49864)) /
                        C49725;
    const double C790 =
        (ae * C50015 * C49939 + C49845 * C50015 * C49864) / C49725;
    const double C131 =
        (C50177 * C50178 * C49929 + C49846 * (C49846 * C49939 + C50179 * ae) +
         C49846 * C50179 * ae) /
        C49721;
    const double C269 = (C49845 * (C49846 * C49939 + C50179 * ae)) / C49721;
    const double C271 = (C50177 * C50178 * C49929 + C49939 * C50041) / C49721;
    const double C410 = (C50015 * (C49846 * C49939 + C50179 * ae)) / C49721;
    const double C412 = (C50177 * C50178 * C49929 + C49939 * C50025) / C49721;
    const double C780 = (C50015 * C49845 * C49939) / C49721;
    const double C980 =
        (2 * C49845 * C49939 + C49845 * (C49939 + C49933 * C50041)) / C49721;
    const double C1441 = (C50015 * (C49939 + C49933 * C50041)) / C49721;
    const double C1725 =
        (2 * C50015 * C49939 + C50015 * (C49939 + C49933 * C50025)) / C49721;
    const double C19856 = C50538 * C286;
    const double C22006 = C50538 * C427;
    const double C49877 = C49875 * C49871;
    const double C49882 = ae * C49875;
    const double C49881 = C49846 * C49875;
    const double C50333 = C49845 * C49875;
    const double C50379 = C49875 * C50025;
    const double C50424 = C50015 * C49875;
    const double C5371 =
        (3 * (C49858 + C49865 * C50025) +
         C50015 * (2 * C50015 * C49865 + C50015 * (C49865 + C49875 * C50025))) /
        C49721;
    const double C49876 = C49846 * C49874;
    const double C50040 = C49845 * C49874;
    const double C50063 = C50015 * C49874;
    const double C984 = (2 * (ae * C49939 + C49845 * C49864) +
                         ae * (C49939 + C49933 * std::pow(C49845, 2)) +
                         C49845 * (C49864 + ae * C49845 * C49933 +
                                   C49845 * (ae * C49933 + C49845 * C49874))) /
                        C49725;
    const double C1098 = (ae * (C49939 + C49933 * C50025) +
                          C49845 * (C49864 + C49874 * C50025)) /
                         C49725;
    const double C1445 =
        (C50015 * C49864 + ae * C50015 * C49845 * C49933 +
         C49845 * (ae * C50015 * C49933 + C49845 * C50015 * C49874)) /
        C49725;
    const double C1729 =
        (2 * C50015 * C49864 + C50015 * (C49864 + C49874 * C50025)) / C49725;
    const double C49950 = C49846 * C49948;
    const double C50043 = C49948 * C50041;
    const double C50084 = ae * C49948;
    const double C50083 = C49845 * C49948;
    const double C50109 = C50015 * C49948;
    const double C50385 = C49948 * C50025;
    const double C5369 =
        (3 * (C49939 + C49933 * C50025) +
         C50015 * (2 * C50015 * C49933 + C50015 * (C49933 + C49948 * C50025))) /
        C49721;
    const double C49962 = C49958 * C49871;
    const double C49961 = C49846 * C49958;
    const double C49960 = C49958 * ae;
    const double C50335 = C49958 * C50041;
    const double C50390 = C49845 * C49958;
    const double C50525 = C49958 * C50025;
    const double C49917 = C49915 * C49871;
    const double C49916 = C49846 * C49914;
    const double C50131 = C49845 * C49914;
    const double C50150 = C49914 * C50025;
    const double C50159 = C50015 * C49914;
    const double C49985 = C49846 * C49981;
    const double C50133 = C49981 * C50041;
    const double C417 = (C49846 * C49858 + C49867 * C50025) / C49721;
    const double C22012 = C50538 * C428;
    const double C49949 = C49947 * ae;
    const double C50191 = 2 * C49947;
    const double C50296 = C49845 * C49947;
    const double C50189 = C49930 + C50188;
    const double C50293 = C49930 + C50291;
    const double C50339 = 2 * C50334;
    const double C50337 = C50334 * ae;
    const double C50514 = C49930 + C50513;
    const double C50526 = 2 * C50524;
    const double C2556 =
        (C49864 + C49874 * C50025 + ae * (C50038 + C49845 * C49948 * C50025) +
         C49845 * (ae * (C49933 + C49948 * C50025) +
                   C49845 * (C49874 + C49890 * C50025))) /
        C49725;
    const double C1094 = (C49845 * C49939 + C50038 * C50025) / C49721;
    const double C49895 = C49875 + C49893;
    const double C49911 = 2 * C49903;
    const double C49909 = ae * C49903;
    const double C50320 = C49845 * C49903;
    const double C50376 = C49903 * C50025;
    const double C50427 = C49875 + C50425;
    const double C50101 = C49874 + C50100;
    const double C50112 = C49845 * C50110;
    const double C50168 = 2 * C50110;
    const double C50090 = C49948 + C50086;
    const double C50137 = 2 * C50129;
    const double C50135 = ae * C50129;
    const double C50157 = C50015 * C50129;
    const double C50421 = C50129 * C50025;
    const double C50151 = C49948 + C50149;
    const double C50161 = ae * C50158;
    const double C49987 = C49958 + C49984;
    const double C49986 = C49983 * ae;
    const double C50322 = C49983 * C50041;
    const double C50396 = C49958 + C50392;
    const double C50569 = C50568 * C50563;
    const double C50574 = C50573 * C50568;
    const double C50822 = C50568 * C50564;
    const double C50819 = C50568 / C50562;
    const double C897 = C50827 * C50568;
    const double C50636 = C50587 * C50634;
    const double C50639 = C50573 * C50587;
    const double C50831 = C50587 * C50635;
    const double C50826 = C50587 / C50562;
    const double C250 = C50827 * C50587;
    const double C50664 = C50603 * C50662;
    const double C50667 = C50573 * C50603;
    const double C50835 = C50603 * C50663;
    const double C50828 = C50603 / C50562;
    const double C393 = C50827 * C50603;
    const double C50761 = C50700 * C50759;
    const double C50764 = C50542 * C50700;
    const double C50848 = C50700 * C50760;
    const double C50841 = C50700 / C49726;
    const double C5073 = C50840 * C50700;
    const double C49737 = C49732 / C49725;
    const double C49735 = 2 * C49732;
    const double C50816 = C50539 / C49730;
    const double C50814 = C50539 / C49721;
    const double C50813 = C50539 * C50534;
    const double C16959 = (2 * C50542 * C50539) / C49721;
    const double C50817 = C50543 * C50534;
    const double C108 = C50543 / C50818;
    const double C7888 = C50543 / C49726;
    const double C50853 = C50815 / C49721;
    const double C16958 = (C50538 * std::pow(C50533, 2)) / C49725 + C50812;
    const double C49809 = C49771 / C49725;
    const double C49806 = 2 * C49771;
    const double C2166 =
        ((0 * ae) / C49721 - C49771 / C49725) / C49726 + (0 * ae) / C49721;
    const double C7894 =
        ((C50688 - (C49768 * 2 * C49771) / C49721) * ae) / C49721 -
        C49769 / C49730;
    const double C7895 = (0 * ae) / C49721 - C49771 / C49725;
    const double C16966 =
        (-C49769 / C49721) / C49726 -
        ((C50688 - (C49768 * 2 * C49771) / C49721) * be) / C49721;
    const double C16967 = (-(2 * C49771) / C49721) / C49726 - (0 * be) / C49721;
    const double C50846 = C50735 / C49730;
    const double C50845 = C50735 * C50734;
    const double C50842 = C50735 / C49721;
    const double C2160 = (2 * C50542 * C50735) / C49721;
    const double C2165 =
        (((C50688 - (C49768 * 2 * C49771) / C49721) * ae) / C49721 -
         C49769 / C49730) /
            C49726 +
        ((C49768 * ((0 * ae) / C49721 - C49771 / C49725) + C50738) * ae) /
            C49721;
    const double C50847 = C50738 * C50734;
    const double C19748 = C50738 / C50818;
    const double C24516 = C50738 / C49726;
    const double C50864 = C50844 / C49721;
    const double C2159 = (C50688 * std::pow(C50733, 2)) / C49725 + C50839;
    const double C2333 = C50543 * C285;
    const double C19872 = C50538 * C285;
    const double C24676 = C50543 * C285;
    const double C5386 = C50543 * C426;
    const double C22026 = C50538 * C426;
    const double C27778 = C50543 * C426;
    const double C49943 = C49941 + C49942;
    const double C50292 = C50289 + C49942;
    const double C976 =
        (2 * (C49845 * C49858 + C50179 * ae) +
         C49845 * (C49858 + C49845 * (C49845 * C49865 + C49942) +
                   C49845 * C49930 * ae) +
         (C50179 + C49930 * C50041) * ae) /
        C49721;
    const double C1090 =
        (C49845 * C49858 + C50179 * ae + (C49845 * C49865 + C49942) * C50025) /
        C49721;
    const double C1437 =
        (C50015 * (C49858 + C49845 * (C49845 * C49865 + C49942) +
                   C49845 * C49930 * ae)) /
        C49721;
    const double C276 =
        (C49846 * C49858 + C49845 * (C49845 * C49867 + C50187 * ae) +
         C49845 * C50187 * ae) /
        C49721;
    const double C785 = (C50015 * (C49845 * C49867 + C50187 * ae)) / C49721;
    const double C258 = C49846 * C50179 + C50187 * C50041;
    const double C399 = C49846 * C50179 + C50187 * C50025;
    const double C776 = C50015 * C49845 * C50187;
    const double C971 =
        2 * C49845 * C50187 + C49845 * (C50187 + C49947 * C50041);
    const double C1432 = C50015 * (C50187 + C49947 * C50041);
    const double C1716 =
        2 * C50015 * C50187 + C50015 * (C50187 + C49947 * C50025);
    const double C1086 = C49845 * C50179 + C50290 * C50025;
    const double C4474 =
        2 * C50015 * C50290 + C50015 * (C50290 + C50334 * C50025);
    const double C19860 = C50538 * C287;
    const double C20352 = C50538 * C790;
    const double C2329 = C50543 * C269;
    const double C19870 = C50538 * C269;
    const double C24672 = C50543 * C269;
    const double C19858 = C50538 * C271;
    const double C5382 = C50543 * C410;
    const double C22024 = C50538 * C410;
    const double C27774 = C50543 * C410;
    const double C22010 = C50538 * C412;
    const double C20354 = C50538 * C780;
    const double C19862 = C50538 * C980;
    const double C20350 = C50538 * C1441;
    const double C22022 = C50538 * C1725;
    const double C49879 = C49865 + C49877;
    const double C49894 = C49882 + C49892;
    const double C49887 = 2 * C49881;
    const double C49885 = ae * C49881;
    const double C50295 = C49845 * C49881;
    const double C1720 =
        (2 * C50015 * C49867 + C50015 * (C49867 + C49881 * C50025)) / C49721;
    const double C5372 =
        (3 * (C49867 + C49881 * C50025) +
         C50015 * (2 * C50015 * C49881 + C50015 * (C49881 + C49903 * C50025))) /
        C49721;
    const double C50336 = C50333 + C49946;
    const double C50380 = C49865 + C50379;
    const double C50426 = 2 * C50424;
    const double C49878 = C49868 + C49876;
    const double C50042 = C50039 + C50040;
    const double C19864 = C50538 * C984;
    const double C20658 = C50538 * C1098;
    const double C20348 = C50538 * C1445;
    const double C22020 = C50538 * C1729;
    const double C49951 = C49950 + C49946;
    const double C50044 = C49933 + C50043;
    const double C50088 = C50084 + C50085;
    const double C50089 = 2 * C50083;
    const double C50087 = ae * C50083;
    const double C4482 =
        (2 * C50015 * C50038 + C50015 * (C50038 + C50083 * C50025)) / C49721;
    const double C6381 =
        (3 * (C50038 + C50083 * C50025) +
         C50015 * (2 * C50015 * C50083 + C50015 * (C50083 + C50129 * C50025))) /
        C49721;
    const double C50111 = ae * C50109;
    const double C50431 = 2 * C50109;
    const double C50386 = C49933 + C50385;
    const double C23918 = C50538 * C5369;
    const double C49965 = C49931 + C49962;
    const double C49964 = C49961 * ae;
    const double C49980 = 2 * C49961;
    const double C50297 = C49961 * C50041;
    const double C50321 = C49845 * C49961;
    const double C50510 = C49961 * C50025;
    const double C5367 =
        3 * (C50187 + C49947 * C50025) +
        C50015 * (2 * C50015 * C49947 + C50015 * (C49947 + C49961 * C50025));
    const double C49966 = C49963 + C49960;
    const double C50394 = C50389 + C49960;
    const double C50338 = C49931 + C50335;
    const double C50397 = 2 * C50390;
    const double C50395 = C50390 * ae;
    const double C50521 = C50390 * C50025;
    const double C6377 =
        3 * (C50290 + C50334 * C50025) +
        C50015 * (2 * C50015 * C50334 + C50015 * (C50334 + C50390 * C50025));
    const double C50527 = C49931 + C50525;
    const double C49919 = C49891 + C49917;
    const double C49918 = C49904 + C49916;
    const double C50136 = C50130 + C50131;
    const double C50152 = C49890 + C50150;
    const double C50162 = C49845 * C50159;
    const double C49988 = C49985 + C49982;
    const double C50138 = C49959 + C50133;
    const double C975 =
        (2 * (C49845 * C49867 + C50187 * ae) +
         C49845 * (C49867 + C49845 * (C49845 * C49881 + C49949) +
                   C49845 * C49947 * ae) +
         (C50187 + C49947 * C50041) * ae) /
        C49721;
    const double C1089 =
        (C49845 * C49867 + C50187 * ae + (C49845 * C49881 + C49949) * C50025) /
        C49721;
    const double C1436 =
        (C50015 * (C49867 + C49845 * (C49845 * C49881 + C49949) +
                   C49845 * C49947 * ae)) /
        C49721;
    const double C1085 = C49845 * C50187 + C50296 * C50025;
    const double C126 = 3 * (C50179 + C49930 * C49871) +
                        C49846 * (2 * C50187 + C49846 * C50189);
    const double C253 = C49845 * (2 * C50187 + C49846 * C50189);
    const double C259 = C50179 + C49930 * C49871 + C50189 * C50041;
    const double C394 = C50015 * (2 * C50187 + C49846 * C50189);
    const double C400 = C50179 + C49930 * C49871 + C50189 * C50025;
    const double C777 = C50015 * C49845 * C50189;
    const double C2313 = 3 * (C50179 + C49930 * C50041) +
                         C49845 * (2 * C50290 + C49845 * C50293);
    const double C2547 = C50179 + C49930 * C50041 + C50293 * C50025;
    const double C3069 = C50015 * (2 * C50290 + C49845 * C50293);
    const double C7278 =
        4 * (2 * C50015 * C49930 + C50015 * C50514) +
        C50015 * (3 * C50514 + C50015 * (2 * C50015 * C49931 +
                                         C50015 * (C49931 + C49958 * C50025)));
    const double C20662 = C50538 * C2556;
    const double C20656 = C50538 * C1094;
    const double C49897 = C49846 * C49895;
    const double C49907 = 3 * C49895;
    const double C49902 = ae * C49895;
    const double C50301 = C49845 * C49895;
    const double C49913 = C49890 + C49909;
    const double C50377 = C49881 + C50376;
    const double C50428 = C50015 * C50427;
    const double C4484 =
        (2 * C50063 + C50015 * C50101 +
         ae * (2 * C50015 * C50083 +
               C50015 * (C50083 + C49845 * C49959 * C50025)) +
         C49845 *
             (ae * (2 * C50109 + C50015 * (C49948 + C49959 * C50025)) +
              C49845 * (2 * C50110 + C50015 * (C49890 + C49914 * C50025)))) /
        C49725;
    const double C4486 =
        (ae * (2 * C50015 * C49933 + C50015 * (C49933 + C49948 * C50025)) +
         C49845 * (2 * C50063 + C50015 * C50101)) /
        C49725;
    const double C5375 = (3 * (C49864 + C49874 * C50025) +
                          C50015 * (2 * C50063 + C50015 * C50101)) /
                         C49725;
    const double C6383 =
        (ae * (3 * (C49933 + C49948 * C50025) +
               C50015 * (2 * C50109 + C50015 * (C49948 + C49959 * C50025))) +
         C49845 *
             (3 * C50101 +
              C50015 * (2 * C50110 + C50015 * (C49890 + C49914 * C50025)))) /
        C49725;
    const double C7284 =
        (4 * (2 * C50063 + C50015 * C50101) +
         C50015 *
             (3 * C50101 +
              C50015 * (2 * C50110 + C50015 * (C49890 + C49914 * C50025)))) /
        C49725;
    const double C50093 = C49845 * C50090;
    const double C50132 = 3 * C50090;
    const double C50128 = ae * C50090;
    const double C50139 = C49890 + C50135;
    const double C50160 = ae * C50157;
    const double C50422 = C50083 + C50421;
    const double C50153 = ae * C50151;
    const double C50432 = C50015 * C50151;
    const double C49990 = C49846 * C49987;
    const double C49989 = C49987 * ae;
    const double C50303 = C49987 * C50041;
    const double C50325 = C49961 + C50322;
    const double C50399 = C49845 * C50396;
    const double C50823 = C50569 / C50577;
    const double C50821 = C50569 / C50560;
    const double C50820 = C50569 * C50564;
    const double C896 = (2 * C50573 * C50569) / C50560;
    const double C50824 = C50574 * C50564;
    const double C116 = C50574 / C50825;
    const double C536 = C50574 / C50562;
    const double C50856 = C50822 / C50560;
    const double C895 = (C50568 * std::pow(C50563, 2)) / C50572 + C50819;
    const double C50833 = C50636 / C50577;
    const double C50832 = C50636 * C50635;
    const double C50829 = C50636 / C50560;
    const double C249 = (2 * C50573 * C50636) / C50560;
    const double C50834 = C50639 * C50635;
    const double C967 = C50639 / C50825;
    const double C1199 = C50639 / C50562;
    const double C50858 = C50831 / C50560;
    const double C248 = (C50587 * std::pow(C50634, 2)) / C50572 + C50826;
    const double C50837 = C50664 / C50577;
    const double C50836 = C50664 * C50663;
    const double C50830 = C50664 / C50560;
    const double C392 = (2 * C50573 * C50664) / C50560;
    const double C50838 = C50667 * C50663;
    const double C1713 = C50667 / C50825;
    const double C1960 = C50667 / C50562;
    const double C50861 = C50835 / C50560;
    const double C391 = (C50603 * std::pow(C50662, 2)) / C50572 + C50828;
    const double C50850 = C50761 / C49730;
    const double C50849 = C50761 * C50760;
    const double C50843 = C50761 / C49721;
    const double C5072 = (2 * C50542 * C50761) / C49721;
    const double C50851 = C50764 * C50760;
    const double C39055 = C50764 / C50818;
    const double C44420 = C50764 / C49726;
    const double C50867 = C50848 / C49721;
    const double C5071 = (C50700 * std::pow(C50759, 2)) / C49725 + C50841;
    const double C49740 = C49729 - C49737;
    const double C49739 = C49719 * C49735;
    const double C2163 = (-C49735 / C49721) / C49726 - (0 * be) / C49721;
    const double C19749 = -C49735 / C49721;
    const double C24698 = C50814 * C285;
    const double C24694 = C50814 * C269;
    const double C24692 = C50814 * C980;
    const double C24688 = C50814 * C984;
    const double C24682 = C50814 * C287;
    const double C24678 = C50814 * C271;
    const double C24674 = C50814 * C286;
    const double C24670 = C50814 * C270;
    const double C25416 = C50814 * C780;
    const double C25412 = C50814 * C790;
    const double C25408 = C50814 * C1441;
    const double C25404 = C50814 * C1445;
    const double C25866 = C50814 * C2556;
    const double C25858 = C50814 * C1098;
    const double C25854 = C50814 * C1094;
    const double C27792 = C50814 * C426;
    const double C27788 = C50814 * C410;
    const double C27786 = C50814 * C412;
    const double C27782 = C50814 * C428;
    const double C27776 = C50814 * C427;
    const double C27772 = C50814 * C411;
    const double C30214 = C50814 * C1729;
    const double C30210 = C50814 * C1725;
    const double C46506 = C50814 * C5369;
    const double C50852 = C50813 / C49725;
    const double C17124 = C16959 * C285;
    const double C17118 = C16959 * C269;
    const double C33962 = C16959 * C426;
    const double C33956 = C16959 * C410;
    const double C50854 = C50817 / C49721;
    const double C2157 = -C50853;
    const double C17146 = C16958 * C285;
    const double C17140 = C16958 * C269;
    const double C17138 = C16958 * C271;
    const double C17132 = C16958 * C287;
    const double C17122 = C16958 * C286;
    const double C17116 = C16958 * C270;
    const double C17848 = C16958 * C780;
    const double C17842 = C16958 * C790;
    const double C18124 = C16958 * C984;
    const double C18118 = C16958 * C980;
    const double C18288 = C16958 * C1098;
    const double C18282 = C16958 * C1094;
    const double C18792 = C16958 * C1445;
    const double C18786 = C16958 * C1441;
    const double C33984 = C16958 * C426;
    const double C33978 = C16958 * C410;
    const double C33976 = C16958 * C412;
    const double C33970 = C16958 * C428;
    const double C33960 = C16958 * C427;
    const double C33954 = C16958 * C411;
    const double C35802 = C16958 * C1729;
    const double C35796 = C16958 * C1725;
    const double C49816 = C49813 - C49809;
    const double C49812 = C49768 * C49806;
    const double C50865 = C50845 / C49725;
    const double C2164 =
        (((0 - (C49768 * C49769) / C49721) * ae) / C49721 - (0 * be) / C49730) /
            C49726 +
        ((C49768 * (((C50688 - (C49768 * 2 * C49771) / C49721) * ae) / C49721 -
                    C49769 / C49730) +
          C50842) *
         ae) /
            C49721 +
        (0 * ae) / C49721 - C49771 / C49725;
    const double C50866 = C50847 / C49721;
    const double C16961 = -C50864;
    const double C132 =
        (2 * (C49846 * C49939 + C50179 * ae) +
         C49846 * (C49939 + C49846 * C49943 + C49846 * C49930 * ae) +
         (C50179 + C49930 * C49871) * ae) /
        C49721;
    const double C268 =
        (C49845 * (C49939 + C49846 * C49943 + C50187 * ae)) / C49721;
    const double C272 =
        (C49846 * C49939 + C50179 * ae + C49943 * C50041) / C49721;
    const double C409 =
        (C50015 * (C49939 + C49846 * C49943 + C50187 * ae)) / C49721;
    const double C413 =
        (C49846 * C49939 + C50179 * ae + C49943 * C50025) / C49721;
    const double C781 = (C50015 * C49845 * C49943) / C49721;
    const double C2318 =
        (3 * (C49858 + C49845 * C50292 + C50290 * ae) +
         C49845 * (2 * C50292 +
                   C49845 * (C49865 + C49845 * (C49845 * C49875 + C49946) +
                             C49845 * C49931 * ae) +
                   C50293 * ae) +
         (2 * C50290 + C49845 * C50293) * ae) /
        C49721;
    const double C2552 =
        (C49858 + C49845 * C50292 + C50290 * ae +
         (C49865 + C49845 * (C49845 * C49875 + C49946) + C49845 * C49931 * ae) *
             C50025) /
        C49721;
    const double C3074 =
        (C50015 * (2 * C50292 +
                   C49845 * (C49865 + C49845 * (C49845 * C49875 + C49946) +
                             C49845 * C49931 * ae) +
                   C50293 * ae)) /
        C49721;
    const double C137 = (3 * (C49858 + C49865 * C49871) +
                         C49846 * (2 * C49867 + C49846 * C49879)) /
                        C49721;
    const double C263 = (C49845 * (2 * C49867 + C49846 * C49879) +
                         (2 * C50187 + C49846 * C50189) * ae) /
                        C49721;
    const double C277 =
        (C49858 + C49865 * C49871 + C49845 * (C49845 * C49879 + C50189 * ae) +
         C49845 * C50189 * ae) /
        C49721;
    const double C404 = (C50015 * (2 * C49867 + C49846 * C49879)) / C49721;
    const double C418 = (C49858 + C49865 * C49871 + C49879 * C50025) / C49721;
    const double C786 = (C50015 * (C49845 * C49879 + C50189 * ae)) / C49721;
    const double C1719 =
        (2 * C50015 * C49879 + C50015 * (C49879 + C49895 * C50025)) / C49721;
    const double C49896 = C49846 * C49894;
    const double C49901 = 2 * C49894;
    const double C50048 = C49845 * C49894;
    const double C50065 = C50015 * C49894;
    const double C49889 = C49874 + C49885;
    const double C50298 = C50295 + C49949;
    const double C50340 = C49845 * C50336;
    const double C50388 = 2 * C50336;
    const double C4480 =
        (2 * C50015 * C50292 + C50015 * (C50292 + C50336 * C50025)) / C49721;
    const double C6379 =
        (3 * (C50292 + C50336 * C50025) +
         C50015 * (2 * C50015 * C50336 +
                   C50015 * (C50336 + (C49845 * C49891 + C49960) * C50025))) /
        C49721;
    const double C7280 =
        (4 * (2 * C50015 * C49865 + C50015 * C50380) +
         C50015 *
             (3 * C50380 + C50015 * (2 * C50015 * C49875 +
                                     C50015 * (C49875 + C49891 * C50025)))) /
        C49721;
    const double C147 =
        (3 * (C49864 + ae * C49867 + C49846 * C49878) +
         ae * (2 * C49867 + C49846 * C49879) +
         C49846 *
             (2 * C49878 + ae * C49879 +
              C49846 * (C49874 + ae * C49846 * C49875 +
                        C49846 * (ae * C49875 + C49846 * std::pow(C49848, 6) *
                                                    bs[6] * C49856)))) /
        C49725;
    const double C284 = (ae * (C49855 * C49851 * C49929 +
                               C49846 * (C49846 * C49933 + C49930 * ae) +
                               C49846 * C49930 * ae) +
                         C49845 * (C49864 + ae * C49867 + C49846 * C49878)) /
                        C49725;
    const double C288 = (ae * C49858 + C49846 * C49864 + ae * C49845 * C49943 +
                         C49845 * (ae * C49943 + C49845 * C49878)) /
                        C49725;
    const double C425 =
        ((zP - zQ) * (C49864 + ae * C49867 + C49846 * C49878)) / C49725;
    const double C429 =
        (ae * C49858 + C49846 * C49864 + C49878 * std::pow(zP - zQ, 2)) /
        C49725;
    const double C791 =
        (ae * C50015 * C49943 + C49845 * C50015 * C49878) / C49725;
    const double C1728 =
        (2 * C50015 * C49878 + C50015 * (C49878 + C49894 * C50025)) / C49725;
    const double C49952 = C49846 * C49951;
    const double C49956 = 2 * C49951;
    const double C50047 = ae * C49951;
    const double C50046 = C49845 * C49951;
    const double C983 = (2 * (ae * C49943 + C49845 * C49878) +
                         ae * (C49943 + C49951 * std::pow(C49845, 2)) +
                         C49845 * (C49878 + ae * C49845 * C49951 +
                                   C49845 * (ae * C49951 + C49845 * C49894))) /
                        C49725;
    const double C1097 = (ae * (C49943 + C49951 * C50025) +
                          C49845 * (C49878 + C49894 * C50025)) /
                         C49725;
    const double C1444 =
        (C50015 * C49878 + ae * C50015 * C49845 * C49951 +
         C49845 * (ae * C50015 * C49951 + C49845 * C50015 * C49894)) /
        C49725;
    const double C979 =
        (2 * C49845 * C49943 + C49845 * (C49943 + C49951 * C50041)) / C49721;
    const double C1440 = (C50015 * (C49943 + C49951 * C50041)) / C49721;
    const double C1724 =
        (2 * C50015 * C49943 + C50015 * (C49943 + C49951 * C50025)) / C49721;
    const double C2322 =
        (3 * (C49864 + ae * C50038 + C49845 * C50042) +
         ae * (2 * C50038 + C49845 * C50044) +
         C49845 * (2 * C50042 + ae * C50044 +
                   C49845 * (C49874 + ae * C49845 * C49948 +
                             C49845 * (ae * C49948 + C49845 * C49890)))) /
        C49725;
    const double C3078 =
        (2 * (ae * C50015 * C49933 + C49845 * C50063) + ae * C50015 * C50044 +
         C49845 *
             (C50063 + ae * C50015 * C49845 * C49948 +
              C49845 * (ae * C50015 * C49948 + C49845 * C50015 * C49890))) /
        C49725;
    const double C3548 =
        (2 * (ae * (C49933 + C49948 * C50025) + C49845 * C50101) +
         ae * (C50044 + C50090 * C50025) +
         C49845 * (C50101 + ae * (C50083 + C49845 * C49959 * C50025) +
                   C49845 * (ae * (C49948 + C49959 * C50025) +
                             C49845 * (C49890 + C49914 * C50025)))) /
        C49725;
    const double C2316 = (3 * (C49939 + C49933 * C50041) +
                          C49845 * (2 * C50038 + C49845 * C50044)) /
                         C49721;
    const double C2550 = (C49939 + C49933 * C50041 + C50044 * C50025) / C49721;
    const double C3072 = (C50015 * (2 * C50038 + C49845 * C50044)) / C49721;
    const double C4478 =
        (2 * C50015 * C50044 + C50015 * (C50044 + C50090 * C50025)) / C49721;
    const double C50092 = C49845 * C50088;
    const double C50127 = 2 * C50088;
    const double C50091 = C49874 + C50087;
    const double C22018 = C50538 * C4482;
    const double C29032 = C50814 * C4482;
    const double C23010 = C50538 * C6381;
    const double C50113 = C50111 + C50112;
    const double C7282 =
        (4 * (2 * C50015 * C49933 + C50015 * C50386) +
         C50015 * (3 * C50386 + C50015 * (2 * C50109 + C50015 * C50151))) /
        C49721;
    const double C49967 = C49965 * ae;
    const double C50192 = C49846 * C49965;
    const double C50197 = 3 * C49965;
    const double C50302 = C49845 * C49965;
    const double C970 =
        2 * C49845 * C50189 + C49845 * (C50189 + C49965 * C50041);
    const double C1431 = C50015 * (C50189 + C49965 * C50041);
    const double C1715 =
        2 * C50015 * C50189 + C50015 * (C50189 + C49965 * C50025);
    const double C5368 =
        3 * (C50189 + C49965 * C50025) +
        C50015 * (2 * C50015 * C49965 + C50015 * (C49965 + C49987 * C50025));
    const double C50323 = C50320 + C49964;
    const double C50299 = C49947 + C50297;
    const double C50326 = 2 * C50321;
    const double C50324 = C50321 * ae;
    const double C4473 =
        2 * C50015 * C50296 + C50015 * (C50296 + C50321 * C50025);
    const double C6376 =
        3 * (C50296 + C50321 * C50025) +
        C50015 * (2 * C50015 * C50321 +
                  C50015 * (C50321 + C49845 * C49983 * C50025));
    const double C50511 = C49947 + C50510;
    const double C49968 = C49846 * C49966;
    const double C49977 = 2 * C49966;
    const double C50049 = C49966 * C50041;
    const double C50070 = ae * C49966;
    const double C50069 = C49845 * C49966;
    const double C50103 = C50015 * C49966;
    const double C50382 = C49966 * C50025;
    const double C5370 =
        (3 * (C49943 + C49951 * C50025) +
         C50015 * (2 * C50015 * C49951 + C50015 * (C49951 + C49966 * C50025))) /
        C49721;
    const double C50398 = C49845 * C50394;
    const double C50418 = C50394 * C50025;
    const double C50341 = C49845 * C50338;
    const double C50393 = 3 * C50338;
    const double C50391 = C50338 * ae;
    const double C4472 =
        2 * C50015 * C50293 + C50015 * (C50293 + C50338 * C50025);
    const double C23004 =
        3 * (C50293 + C50338 * C50025) +
        C50015 * (2 * C50015 * C50338 + C50015 * (C50338 + C50396 * C50025));
    const double C50522 = C50334 + C50521;
    const double C50528 = C50015 * C50527;
    const double C49921 = C49846 * C49919;
    const double C5373 =
        (3 * (C49879 + C49895 * C50025) +
         C50015 * (2 * C50015 * C49895 + C50015 * (C49895 + C49919 * C50025))) /
        C49721;
    const double C49920 = C49846 * C49918;
    const double C50071 = C49845 * C49918;
    const double C50097 = C49918 * C50025;
    const double C50104 = C50015 * C49918;
    const double C50140 = C49845 * C50136;
    const double C50154 = C49845 * C50152;
    const double C50169 = C50015 * C50152;
    const double C50164 = C50161 + C50162;
    const double C49991 = C49846 * C49988;
    const double C50072 = C49988 * C50041;
    const double C50141 = C49845 * C50138;
    const double C23006 =
        (3 * (C50044 + C50090 * C50025) +
         C50015 * (2 * C50015 * C50090 + C50015 * (C50090 + C50138 * C50025))) /
        C49721;
    const double C49899 = C49887 + C49897;
    const double C7279 =
        (4 * (2 * C50015 * C49881 + C50015 * C50377) +
         C50015 * (3 * C50377 +
                   C50015 * (2 * C50015 * C49903 +
                             C50015 * (C49903 + C49846 * C49915 * C50025)))) /
        C49721;
    const double C50429 = C50426 + C50428;
    const double C23018 = C50538 * C4484;
    const double C22016 = C50538 * C4486;
    const double C29036 = C50814 * C4486;
    const double C23920 = C50538 * C5375;
    const double C46510 = C50814 * C5375;
    const double C23012 = C50538 * C6383;
    const double C40498 = C50538 * C7284;
    const double C50095 = C50089 + C50093;
    const double C50163 = C50110 + C50160;
    const double C23913 =
        (4 * (2 * C50015 * C50083 + C50015 * C50422) +
         C50015 * (3 * C50422 +
                   C50015 * (2 * C50157 +
                             C50015 * (C50129 + C49845 * C49981 * C50025)))) /
        C49721;
    const double C50433 = C50431 + C50432;
    const double C49992 = C49980 + C49990;
    const double C50305 = C49965 + C50303;
    const double C50328 = C49845 * C50325;
    const double C50401 = C50397 + C50399;
    const double C50855 = C50820 / C50572;
    const double C50857 = C50824 / C50560;
    const double C251 = -C50856;
    const double C50859 = C50832 / C50572;
    const double C50860 = C50834 / C50560;
    const double C893 = -C50858;
    const double C50862 = C50836 / C50572;
    const double C50863 = C50838 / C50560;
    const double C1544 = -C50861;
    const double C50868 = C50849 / C49725;
    const double C50869 = C50851 / C49721;
    const double C33658 = -C50867;
    const double C24703 = C49740 * C259;
    const double C24699 = C49740 * C264;
    const double C24695 = C49740 * C254;
    const double C24689 = C49740 * C971;
    const double C24685 = C49740 * C975;
    const double C24683 = C49740 * C276;
    const double C24679 = C49740 * C258;
    const double C24675 = C49740 * C265;
    const double C24671 = C49740 * C255;
    const double C25039 = C49740 * C253;
    const double C25419 = C49740 * C777;
    const double C25413 = C49740 * C776;
    const double C25409 = C49740 * C785;
    const double C25405 = C49740 * C1432;
    const double C25401 = C49740 * C1436;
    const double C25859 = C49740 * C1089;
    const double C25855 = C49740 * C1085;
    const double C27797 = C49740 * C400;
    const double C27793 = C49740 * C405;
    const double C27789 = C49740 * C395;
    const double C27783 = C49740 * C399;
    const double C27779 = C49740 * C417;
    const double C27777 = C49740 * C406;
    const double C27773 = C49740 * C396;
    const double C28233 = C49740 * C394;
    const double C30215 = C49740 * C1720;
    const double C30211 = C49740 * C1716;
    const double C46511 = C49740 * C5372;
    const double C46507 = C49740 * C5367;
    const double C120 =
        (C49740 / C49726 - (0 * be) / C49721) / C49726 + (0 * ae) / C49721;
    const double C7893 = C49740 / C49726 - (0 * be) / C49721;
    const double C16965 = C49740 / C49726 + (0 * ae) / C49721;
    const double C49742 = C49739 / C49721;
    const double C2360 = C2163 * C259;
    const double C2356 = C2163 * C264;
    const double C2352 = C2163 * C254;
    const double C2346 = C2163 * C971;
    const double C2342 = C2163 * C975;
    const double C2340 = C2163 * C276;
    const double C2336 = C2163 * C258;
    const double C2332 = C2163 * C265;
    const double C2328 = C2163 * C255;
    const double C2708 = C2163 * C253;
    const double C3100 = C2163 * C777;
    const double C3094 = C2163 * C776;
    const double C3090 = C2163 * C785;
    const double C3086 = C2163 * C1432;
    const double C3082 = C2163 * C1436;
    const double C3556 = C2163 * C1089;
    const double C3552 = C2163 * C1085;
    const double C5413 = C2163 * C400;
    const double C5409 = C2163 * C405;
    const double C5405 = C2163 * C395;
    const double C5399 = C2163 * C1716;
    const double C5395 = C2163 * C1720;
    const double C5393 = C2163 * C417;
    const double C5389 = C2163 * C399;
    const double C5385 = C2163 * C406;
    const double C5381 = C2163 * C396;
    const double C5755 = C2163 * C394;
    const double C7294 = C2163 * C5372;
    const double C7290 = C2163 * C5367;
    const double C19879 = C19749 * C975;
    const double C19877 = C19749 * C971;
    const double C19875 = C19749 * C276;
    const double C19873 = C19749 * C258;
    const double C19871 = C19749 * C265;
    const double C19869 = C19749 * C255;
    const double C19867 = C19749 * C2313;
    const double C19863 = C19749 * C976;
    const double C19861 = C19749 * C972;
    const double C19859 = C19749 * C275;
    const double C19857 = C19749 * C257;
    const double C19855 = C19749 * C266;
    const double C19853 = C19749 * C256;
    const double C20101 = C19749 * C259;
    const double C20099 = C19749 * C264;
    const double C20097 = C19749 * C254;
    const double C20361 = C19749 * C1436;
    const double C20359 = C19749 * C1432;
    const double C20357 = C19749 * C785;
    const double C20355 = C19749 * C776;
    const double C20353 = C19749 * C775;
    const double C20351 = C19749 * C784;
    const double C20349 = C19749 * C1433;
    const double C20347 = C19749 * C1437;
    const double C20345 = C19749 * C3069;
    const double C20659 = C19749 * C2547;
    const double C20657 = C19749 * C1090;
    const double C20655 = C19749 * C1086;
    const double C21847 = C19749 * C1089;
    const double C21845 = C19749 * C1085;
    const double C22037 = C19749 * C1720;
    const double C22035 = C19749 * C1716;
    const double C22031 = C19749 * C417;
    const double C22029 = C19749 * C399;
    const double C22025 = C19749 * C406;
    const double C22023 = C19749 * C396;
    const double C22021 = C19749 * C1717;
    const double C22019 = C19749 * C1721;
    const double C22017 = C19749 * C4474;
    const double C22011 = C19749 * C416;
    const double C22009 = C19749 * C398;
    const double C22005 = C19749 * C407;
    const double C22003 = C19749 * C397;
    const double C22227 = C19749 * C777;
    const double C22391 = C19749 * C400;
    const double C22387 = C19749 * C405;
    const double C22385 = C19749 * C395;
    const double C23009 = C19749 * C6377;
    const double C23919 = C19749 * C5371;
    const double C23917 = C19749 * C5366;
    const double C39269 = C19749 * C5372;
    const double C39267 = C19749 * C5367;
    const double C40495 = C19749 * C7278;
    const double C50870 = C50812 - C50852;
    const double C50871 = C50816 - C50854;
    const double C2355 = C2157 * C285;
    const double C2351 = C2157 * C269;
    const double C2349 = C2157 * C980;
    const double C2345 = C2157 * C984;
    const double C2339 = C2157 * C287;
    const double C2335 = C2157 * C271;
    const double C2331 = C2157 * C286;
    const double C2327 = C2157 * C270;
    const double C3097 = C2157 * C780;
    const double C3093 = C2157 * C790;
    const double C3089 = C2157 * C1441;
    const double C3085 = C2157 * C1445;
    const double C3563 = C2157 * C2556;
    const double C3555 = C2157 * C1098;
    const double C3551 = C2157 * C1094;
    const double C5408 = C2157 * C426;
    const double C5404 = C2157 * C410;
    const double C5402 = C2157 * C1725;
    const double C5398 = C2157 * C1729;
    const double C5392 = C2157 * C428;
    const double C5388 = C2157 * C412;
    const double C5384 = C2157 * C427;
    const double C5380 = C2157 * C411;
    const double C6390 = C2157 * C4486;
    const double C6386 = C2157 * C4482;
    const double C7293 = C2157 * C5375;
    const double C7289 = C2157 * C5369;
    const double C19753 =
        (C49816 / C49726 - (0 * be) / C49721) / C49726 + (0 * ae) / C49721;
    const double C24521 = C49816 / C49726 - (0 * be) / C49721;
    const double C49815 = C49812 / C49721;
    const double C50878 = C50839 - C50865;
    const double C50879 = C50846 - C50866;
    const double C2353 = C50543 * C268;
    const double C2707 = C2157 * C268;
    const double C8048 = C7888 * C268;
    const double C17142 = C16959 * C268;
    const double C17120 = C16960 * C268;
    const double C17480 = C16958 * C268;
    const double C20098 = C50538 * C268;
    const double C24696 = C50543 * C268;
    const double C25038 = C50814 * C268;
    const double C2359 = C2157 * C272;
    const double C2337 = C50543 * C272;
    const double C17152 = C16958 * C272;
    const double C17136 = C16959 * C272;
    const double C19874 = C50538 * C272;
    const double C24702 = C50814 * C272;
    const double C24680 = C50543 * C272;
    const double C5406 = C50543 * C409;
    const double C5754 = C2157 * C409;
    const double C11004 = C7888 * C409;
    const double C22386 = C50538 * C409;
    const double C27790 = C50543 * C409;
    const double C28232 = C50814 * C409;
    const double C33980 = C16959 * C409;
    const double C33958 = C16960 * C409;
    const double C34318 = C16958 * C409;
    const double C5412 = C2157 * C413;
    const double C5390 = C50543 * C413;
    const double C22030 = C50538 * C413;
    const double C27796 = C50814 * C413;
    const double C27784 = C50543 * C413;
    const double C33990 = C16958 * C413;
    const double C33974 = C16959 * C413;
    const double C3099 = C2157 * C781;
    const double C3095 = C50543 * C781;
    const double C17850 = C16958 * C781;
    const double C17846 = C16959 * C781;
    const double C20356 = C50538 * C781;
    const double C25418 = C50814 * C781;
    const double C25414 = C50543 * C781;
    const double C19865 = C19749 * C2318;
    const double C20661 = C19749 * C2552;
    const double C20343 = C19749 * C3074;
    const double C2712 = C2163 * C263;
    const double C25043 = C49740 * C263;
    const double C2364 = C2163 * C277;
    const double C20103 = C19749 * C277;
    const double C24707 = C49740 * C277;
    const double C5759 = C2163 * C404;
    const double C28237 = C49740 * C404;
    const double C5417 = C2163 * C418;
    const double C22393 = C19749 * C418;
    const double C27801 = C49740 * C418;
    const double C3104 = C2163 * C786;
    const double C22229 = C19749 * C786;
    const double C25423 = C49740 * C786;
    const double C5425 = C2163 * C1719;
    const double C39481 = C19749 * C1719;
    const double C44722 = C49740 * C1719;
    const double C49908 = C49901 + C49902;
    const double C49898 = C49889 + C49896;
    const double C2553 =
        (C49867 + C49845 * C50298 + C50296 * ae +
         (C49881 + C49845 * (C49845 * C49903 + C49964) + C49845 * C49961 * ae) *
             C50025) /
        C49721;
    const double C50342 = C49865 + C50340;
    const double C22015 = C19749 * C4480;
    const double C23011 = C19749 * C6379;
    const double C40497 = C19749 * C7280;
    const double C2357 = C50543 * C284;
    const double C2711 = C2157 * C284;
    const double C8054 = C7888 * C284;
    const double C17148 = C16959 * C284;
    const double C17126 = C16960 * C284;
    const double C17486 = C16958 * C284;
    const double C20100 = C50538 * C284;
    const double C24700 = C50543 * C284;
    const double C25042 = C50814 * C284;
    const double C2363 = C2157 * C288;
    const double C2341 = C50543 * C288;
    const double C17158 = C16958 * C288;
    const double C17130 = C16959 * C288;
    const double C19876 = C50538 * C288;
    const double C24706 = C50814 * C288;
    const double C24684 = C50543 * C288;
    const double C5410 = C50543 * C425;
    const double C5758 = C2157 * C425;
    const double C11010 = C7888 * C425;
    const double C22388 = C50538 * C425;
    const double C27794 = C50543 * C425;
    const double C28236 = C50814 * C425;
    const double C33986 = C16959 * C425;
    const double C33964 = C16960 * C425;
    const double C34324 = C16958 * C425;
    const double C5416 = C2157 * C429;
    const double C5394 = C50543 * C429;
    const double C22032 = C50538 * C429;
    const double C27800 = C50814 * C429;
    const double C27780 = C50543 * C429;
    const double C33996 = C16958 * C429;
    const double C33968 = C16959 * C429;
    const double C3103 = C2157 * C791;
    const double C3091 = C50543 * C791;
    const double C17856 = C16958 * C791;
    const double C17840 = C16959 * C791;
    const double C20358 = C50538 * C791;
    const double C25422 = C50814 * C791;
    const double C25410 = C50543 * C791;
    const double C5424 = C2157 * C1728;
    const double C5396 = C50543 * C1728;
    const double C22038 = C50538 * C1728;
    const double C30216 = C50543 * C1728;
    const double C35804 = C16959 * C1728;
    const double C44721 = C50814 * C1728;
    const double C49953 = C49933 + C49952;
    const double C50050 = C50047 + C50048;
    const double C2557 =
        (C49878 + C49894 * C50025 + ae * (C50046 + C49845 * C49966 * C50025) +
         C49845 * (ae * (C49951 + C49966 * C50025) +
                   C49845 * (C49894 + C49918 * C50025))) /
        C49725;
    const double C1093 = (C49845 * C49943 + C50046 * C50025) / C49721;
    const double C2371 = C2157 * C983;
    const double C2343 = C50543 * C983;
    const double C18126 = C16959 * C983;
    const double C19880 = C50538 * C983;
    const double C24714 = C50814 * C983;
    const double C24686 = C50543 * C983;
    const double C3557 = C50543 * C1097;
    const double C5980 = C2157 * C1097;
    const double C18290 = C16959 * C1097;
    const double C21848 = C50538 * C1097;
    const double C25860 = C50543 * C1097;
    const double C27808 = C50814 * C1097;
    const double C3111 = C2157 * C1444;
    const double C3083 = C50543 * C1444;
    const double C18794 = C16959 * C1444;
    const double C20362 = C50538 * C1444;
    const double C25430 = C50814 * C1444;
    const double C25402 = C50543 * C1444;
    const double C2367 = C2157 * C979;
    const double C2347 = C50543 * C979;
    const double C18120 = C16959 * C979;
    const double C19878 = C50538 * C979;
    const double C24710 = C50814 * C979;
    const double C24690 = C50543 * C979;
    const double C3107 = C2157 * C1440;
    const double C3087 = C50543 * C1440;
    const double C18788 = C16959 * C1440;
    const double C20360 = C50538 * C1440;
    const double C25426 = C50814 * C1440;
    const double C25406 = C50543 * C1440;
    const double C5420 = C2157 * C1724;
    const double C5400 = C50543 * C1724;
    const double C22036 = C50538 * C1724;
    const double C30212 = C50543 * C1724;
    const double C35798 = C16959 * C1724;
    const double C44717 = C50814 * C1724;
    const double C3389 = C2157 * C2322;
    const double C19866 = C50538 * C2322;
    const double C25700 = C50814 * C2322;
    const double C4075 = C2157 * C3078;
    const double C20344 = C50538 * C3078;
    const double C26370 = C50814 * C3078;
    const double C20666 = C50538 * C3548;
    const double C3385 = C2157 * C2316;
    const double C19868 = C50538 * C2316;
    const double C25696 = C50814 * C2316;
    const double C3559 = C2157 * C2550;
    const double C20660 = C50538 * C2550;
    const double C25862 = C50814 * C2550;
    const double C4071 = C2157 * C3072;
    const double C20346 = C50538 * C3072;
    const double C26366 = C50814 * C3072;
    const double C23016 = C50538 * C4478;
    const double C50134 = C50127 + C50128;
    const double C50094 = C50091 + C50092;
    const double C40496 = C50538 * C7282;
    const double C50304 = C50301 + C49967;
    const double C974 =
        (2 * (C49845 * C49879 + C50189 * ae) +
         C49845 * (C49879 + C49845 * (C49845 * C49895 + C49967) +
                   C49845 * C49965 * ae) +
         (C50189 + C49965 * C50041) * ae) /
        C49721;
    const double C1088 =
        (C49845 * C49879 + C50189 * ae + (C49845 * C49895 + C49967) * C50025) /
        C49721;
    const double C1435 =
        (C50015 * (C49879 + C49845 * (C49845 * C49895 + C49967) +
                   C49845 * C49965 * ae)) /
        C49721;
    const double C50193 = C50191 + C50192;
    const double C1084 = C49845 * C50189 + C50302 * C50025;
    const double C5970 =
        2 * C50015 * C50302 + C50015 * (C50302 + C49845 * C49987 * C50025);
    const double C2368 = C2163 * C970;
    const double C20105 = C19749 * C970;
    const double C24711 = C49740 * C970;
    const double C3108 = C2163 * C1431;
    const double C25427 = C49740 * C1431;
    const double C31427 = C19749 * C1431;
    const double C5421 = C2163 * C1715;
    const double C39479 = C19749 * C1715;
    const double C44718 = C49740 * C1715;
    const double C50327 = C49845 * C50323;
    const double C4479 =
        (2 * C50015 * C50298 + C50015 * (C50298 + C50323 * C50025)) / C49721;
    const double C6378 =
        (3 * (C50298 + C50323 * C50025) +
         C50015 * (2 * C50015 * C50323 +
                   C50015 * (C50323 +
                             (C49845 * C49846 * C49915 + C49986) * C50025))) /
        C49721;
    const double C2319 =
        (3 * (C49867 + C49845 * C50298 + C50296 * ae) +
         C49845 * (2 * C50298 +
                   C49845 * (C49881 + C49845 * (C49845 * C49903 + C49964) +
                             C49845 * C49961 * ae) +
                   C50299 * ae) +
         (2 * C50296 + C49845 * C50299) * ae) /
        C49721;
    const double C3075 =
        (C50015 * (2 * C50298 +
                   C49845 * (C49881 + C49845 * (C49845 * C49903 + C49964) +
                             C49845 * C49961 * ae) +
                   C50299 * ae)) /
        C49721;
    const double C2314 = 3 * (C50187 + C49947 * C50041) +
                         C49845 * (2 * C50296 + C49845 * C50299);
    const double C2548 = C50187 + C49947 * C50041 + C50299 * C50025;
    const double C3070 = C50015 * (2 * C50296 + C49845 * C50299);
    const double C4471 =
        2 * C50015 * C50299 + C50015 * (C50299 + C50325 * C50025);
    const double C6387 = C2163 * C4473;
    const double C22039 = C19749 * C4473;
    const double C29033 = C49740 * C4473;
    const double C7277 =
        4 * (2 * C50015 * C49947 + C50015 * C50511) +
        C50015 * (3 * C50511 + C50015 * (2 * C50015 * C49961 +
                                         C50015 * (C49961 + C49983 * C50025)));
    const double C49969 = C49948 + C49968;
    const double C50051 = C49951 + C50049;
    const double C50075 = 2 * C50069;
    const double C50073 = ae * C50069;
    const double C4481 =
        (2 * C50015 * C50046 + C50015 * (C50046 + C50069 * C50025)) / C49721;
    const double C6380 =
        (3 * (C50046 + C50069 * C50025) +
         C50015 * (2 * C50015 * C50069 +
                   C50015 * (C50069 + C49845 * C49988 * C50025))) /
        C49721;
    const double C50105 = ae * C50103;
    const double C50383 = C49951 + C50382;
    const double C7291 = C50543 * C5370;
    const double C39268 = C50538 * C5370;
    const double C46508 = C50543 * C5370;
    const double C50400 = C49875 + C50398;
    const double C50419 = C50336 + C50418;
    const double C50343 = C50339 + C50341;
    const double C23015 = C19749 * C4472;
    const double C23911 =
        4 * (2 * C50015 * C50334 + C50015 * C50522) +
        C50015 * (3 * C50522 +
                  C50015 * (2 * C50015 * C50390 +
                            C50015 * (C50390 + C49845 * C49979 * C50025)));
    const double C50529 = C50526 + C50528;
    const double C49923 = C49911 + C49921;
    const double C49922 = C49913 + C49920;
    const double C50074 = C50070 + C50071;
    const double C50098 = C49894 + C50097;
    const double C50106 = C49845 * C50104;
    const double C50142 = C50139 + C50140;
    const double C50155 = C50153 + C50154;
    const double C50170 = C50168 + C50169;
    const double C50165 = C49845 * C50164;
    const double C49993 = C49959 + C49991;
    const double C50076 = C49966 + C50072;
    const double C50143 = C50137 + C50141;
    const double C140 = (4 * (2 * C49867 + C49846 * C49879) +
                         C49846 * (3 * C49879 + C49846 * C49899)) /
                        C49721;
    const double C419 =
        (2 * C49867 + C49846 * C49879 + C49899 * C50025) / C49721;
    const double C421 = (C50015 * (3 * C49879 + C49846 * C49899)) / C49721;
    const double C40489 =
        (5 * (3 * C50380 + C50015 * C50429) +
         C50015 * (4 * C50429 +
                   C50015 * (3 * C50427 +
                             C50015 * (2 * C50015 * C49891 +
                                       C50015 * (C49891 + C49915 * C50025))))) /
        C49721;
    const double C4066 =
        (3 * (C50063 + ae * C50015 * C50083 + C49845 * C50113) +
         ae * C50015 * C50095 +
         C49845 * (2 * C50113 + ae * C50015 * C50090 +
                   C49845 * (C50110 + ae * C50015 * C49845 * C49959 +
                             C49845 * (ae * C50015 * C49959 +
                                       C49845 * C50015 * C49914)))) /
        C49725;
    const double C3378 = (4 * (2 * C50038 + C49845 * C50044) +
                          C49845 * (3 * C50044 + C49845 * C50095)) /
                         C49721;
    const double C3546 =
        (2 * C50038 + C49845 * C50044 + C50095 * C50025) / C49721;
    const double C4064 = (C50015 * (3 * C50044 + C49845 * C50095)) / C49721;
    const double C40490 =
        (5 * (3 * C50386 + C50015 * C50433) +
         C50015 * (4 * C50433 +
                   C50015 * (3 * C50151 +
                             C50015 * (2 * C50158 +
                                       C50015 * (C49959 + C49981 * C50025))))) /
        C49721;
    const double C49994 = C49992 * ae;
    const double C50198 = C49846 * C49992;
    const double C2315 = 3 * (C50189 + C49965 * C50041) +
                         C49845 * (2 * C50302 + C49845 * C50305);
    const double C2549 = C50189 + C49965 * C50041 + C50305 * C50025;
    const double C3071 = C50015 * (2 * C50302 + C49845 * C50305);
    const double C50330 = C50326 + C50328;
    const double C50403 = C49845 * C50401;
    const double C50872 = C50819 - C50855;
    const double C50873 = C50823 - C50857;
    const double C50874 = C50826 - C50859;
    const double C50875 = C50833 - C50860;
    const double C50876 = C50828 - C50862;
    const double C50877 = C50837 - C50863;
    const double C50880 = C50841 - C50868;
    const double C50881 = C50850 - C50869;
    const double C24720 = C24675 + C24676;
    const double C24718 = C24671 + C24672;
    const double C27814 = C27777 + C27778;
    const double C27812 = C27773 + C27774;
    const double C8077 = C7893 * C263;
    const double C8071 = C7893 * C253;
    const double C8061 = C7893 * C259;
    const double C8055 = C7893 * C277;
    const double C8053 = C7893 * C264;
    const double C8047 = C7893 * C254;
    const double C8771 = C7893 * C777;
    const double C8765 = C7893 * C786;
    const double C9049 = C7893 * C970;
    const double C9717 = C7893 * C1431;
    const double C11033 = C7893 * C404;
    const double C11027 = C7893 * C394;
    const double C11017 = C7893 * C400;
    const double C11011 = C7893 * C418;
    const double C11009 = C7893 * C405;
    const double C11003 = C7893 * C395;
    const double C12851 = C7893 * C1719;
    const double C12845 = C7893 * C1715;
    const double C17149 = C16965 * C263;
    const double C17143 = C16965 * C253;
    const double C17133 = C16965 * C259;
    const double C17127 = C16965 * C277;
    const double C17125 = C16965 * C264;
    const double C17119 = C16965 * C254;
    const double C17843 = C16965 * C777;
    const double C17837 = C16965 * C786;
    const double C18121 = C16965 * C970;
    const double C18789 = C16965 * C1431;
    const double C33987 = C16965 * C404;
    const double C33981 = C16965 * C394;
    const double C33971 = C16965 * C400;
    const double C33965 = C16965 * C418;
    const double C33963 = C16965 * C405;
    const double C33957 = C16965 * C395;
    const double C35805 = C16965 * C1719;
    const double C35799 = C16965 * C1715;
    const double C49744 = C50538 - C49742;
    const double C2377 = C2332 + C2333;
    const double C2375 = C2328 + C2329;
    const double C5430 = C5385 + C5386;
    const double C5428 = C5381 + C5382;
    const double C19894 = C19871 + C19872;
    const double C19893 = C19869 + C19870;
    const double C19890 = C19863 + C19864;
    const double C19889 = C19861 + C19862;
    const double C19888 = C19859 + C19860;
    const double C19887 = C19857 + C19858;
    const double C19886 = C19855 + C19856;
    const double C19885 = C19853 + C19854;
    const double C20372 = C20353 + C20354;
    const double C20371 = C20351 + C20352;
    const double C20370 = C20349 + C20350;
    const double C20369 = C20347 + C20348;
    const double C20668 = C20657 + C20658;
    const double C20667 = C20655 + C20656;
    const double C22052 = C22025 + C22026;
    const double C22051 = C22023 + C22024;
    const double C22050 = C22021 + C22022;
    const double C22049 = C22019 + C22020;
    const double C22048 = C22017 + C22018;
    const double C22046 = C22011 + C22012;
    const double C22045 = C22009 + C22010;
    const double C22044 = C22005 + C22006;
    const double C22043 = C22003 + C22004;
    const double C23020 = C23009 + C23010;
    const double C23925 = C23919 + C23920;
    const double C23924 = C23917 + C23918;
    const double C8086 = C50870 * C288;
    const double C8080 = C50870 * C272;
    const double C8074 = C50870 * C285;
    const double C8068 = C50870 * C269;
    const double C8066 = C50870 * C271;
    const double C8060 = C50870 * C287;
    const double C8050 = C50870 * C286;
    const double C8044 = C50870 * C270;
    const double C8414 = C50870 * C284;
    const double C8408 = C50870 * C268;
    const double C8784 = C50870 * C791;
    const double C8778 = C50870 * C781;
    const double C8776 = C50870 * C780;
    const double C8770 = C50870 * C790;
    const double C9052 = C50870 * C984;
    const double C9046 = C50870 * C980;
    const double C9216 = C50870 * C1098;
    const double C9210 = C50870 * C1094;
    const double C9720 = C50870 * C1445;
    const double C9714 = C50870 * C1441;
    const double C11042 = C50870 * C429;
    const double C11036 = C50870 * C413;
    const double C11030 = C50870 * C426;
    const double C11024 = C50870 * C410;
    const double C11022 = C50870 * C412;
    const double C11016 = C50870 * C428;
    const double C11006 = C50870 * C427;
    const double C11000 = C50870 * C411;
    const double C11370 = C50870 * C425;
    const double C11364 = C50870 * C409;
    const double C12848 = C50870 * C1729;
    const double C12842 = C50870 * C1725;
    const double C105 = (C50870 * C50533) / C49721 + (C50814 - C50853) / C49726;
    const double C8076 = C50871 * C284;
    const double C8070 = C50871 * C268;
    const double C8064 = C50871 * C272;
    const double C8058 = C50871 * C288;
    const double C8052 = C50871 * C285;
    const double C8046 = C50871 * C269;
    const double C8774 = C50871 * C781;
    const double C8768 = C50871 * C791;
    const double C9054 = C50871 * C983;
    const double C9048 = C50871 * C979;
    const double C9218 = C50871 * C1097;
    const double C9722 = C50871 * C1444;
    const double C9716 = C50871 * C1440;
    const double C11032 = C50871 * C425;
    const double C11026 = C50871 * C409;
    const double C11020 = C50871 * C413;
    const double C11014 = C50871 * C429;
    const double C11008 = C50871 * C426;
    const double C11002 = C50871 * C410;
    const double C12850 = C50871 * C1728;
    const double C12844 = C50871 * C1724;
    const double C106 =
        (C50871 * C50533) / C49721 + (2 * C50543 + C50870) / C49726;
    const double C107 = (C50533 * C50543) / C49730 + C50871 / C49726;
    const double C49818 = C50688 - C49815;
    const double C19745 =
        (C50878 * C50733) / C49721 + (C50842 - C50864) / C49726;
    const double C19746 =
        (C50879 * C50733) / C49721 + (2 * C50738 + C50878) / C49726;
    const double C19747 = (C50733 * C50738) / C49730 + C50879 / C49726;
    const double C2387 = C2352 + C2353;
    const double C20109 = C20097 + C20098;
    const double C24730 = C24695 + C24696;
    const double C2379 = C2336 + C2337;
    const double C19895 = C19873 + C19874;
    const double C24722 = C24679 + C24680;
    const double C5440 = C5405 + C5406;
    const double C22397 = C22385 + C22386;
    const double C27820 = C27789 + C27790;
    const double C5432 = C5389 + C5390;
    const double C22053 = C22029 + C22030;
    const double C27817 = C27783 + C27784;
    const double C3120 = C3094 + C3095;
    const double C20373 = C20355 + C20356;
    const double C25439 = C25413 + C25414;
    const double C20670 = C20661 + C20662;
    const double C148 =
        (4 * (2 * C49878 + ae * C49879 + C49846 * C49898) +
         ae * (3 * C49879 + C49846 * C49899) +
         C49846 * (3 * C49898 + ae * C49899 +
                   C49846 * (2 * C49894 + ae * C49895 +
                             C49846 * (C49890 + ae * C49846 * C49891 +
                                       C49846 * (ae * C49891 +
                                                 C49846 * std::pow(C49850, 7) *
                                                     bs[7] * C49856))))) /
        C49725;
    const double C283 =
        (ae * (2 * (C49846 * C49933 + C49930 * ae) +
               C49846 *
                   (C49933 +
                    C49846 * (C49846 * C49869 * C49870 * C49929 + C49931 * ae) +
                    C49846 * C49931 * ae) +
               (C49930 + C49931 * C49871) * ae) +
         C49845 * (2 * C49878 + ae * C49879 + C49846 * C49898)) /
        C49725;
    const double C424 =
        ((zP - zQ) * (2 * C49878 + ae * C49879 + C49846 * C49898)) / C49725;
    const double C430 = (C49864 + ae * C49867 + C49846 * C49878 +
                         C49898 * std::pow(zP - zQ, 2)) /
                        C49725;
    const double C3564 = C2163 * C2553;
    const double C21851 = C19749 * C2553;
    const double C25867 = C49740 * C2553;
    const double C50344 = C50342 + C50337;
    const double C22047 = C22015 + C22016;
    const double C23021 = C23011 + C23012;
    const double C40500 = C40497 + C40498;
    const double C2389 = C2356 + C2357;
    const double C20110 = C20099 + C20100;
    const double C24732 = C24699 + C24700;
    const double C2381 = C2340 + C2341;
    const double C19896 = C19875 + C19876;
    const double C24724 = C24683 + C24684;
    const double C5442 = C5409 + C5410;
    const double C22398 = C22387 + C22388;
    const double C27822 = C27793 + C27794;
    const double C5434 = C5393 + C5394;
    const double C22054 = C22031 + C22032;
    const double C27815 = C27779 + C27780;
    const double C3118 = C3090 + C3091;
    const double C20374 = C20357 + C20358;
    const double C25437 = C25409 + C25410;
    const double C5435 = C5395 + C5396;
    const double C22056 = C22037 + C22038;
    const double C30220 = C30215 + C30216;
    const double C49954 = C49953 + C49949;
    const double C3565 = C50543 * C2557;
    const double C21852 = C50538 * C2557;
    const double C25868 = C50543 * C2557;
    const double C3553 = C50543 * C1093;
    const double C5976 = C2157 * C1093;
    const double C9212 = C50871 * C1093;
    const double C18284 = C16959 * C1093;
    const double C21846 = C50538 * C1093;
    const double C25856 = C50543 * C1093;
    const double C27804 = C50814 * C1093;
    const double C2382 = C2342 + C2343;
    const double C19898 = C19879 + C19880;
    const double C24725 = C24685 + C24686;
    const double C3569 = C3556 + C3557;
    const double C21854 = C21847 + C21848;
    const double C25872 = C25859 + C25860;
    const double C3114 = C3082 + C3083;
    const double C20376 = C20361 + C20362;
    const double C25433 = C25401 + C25402;
    const double C2384 = C2346 + C2347;
    const double C19897 = C19877 + C19878;
    const double C24727 = C24689 + C24690;
    const double C3116 = C3086 + C3087;
    const double C20375 = C20359 + C20360;
    const double C25435 = C25405 + C25406;
    const double C5437 = C5399 + C5400;
    const double C22055 = C22035 + C22036;
    const double C30218 = C30211 + C30212;
    const double C19891 = C19865 + C19866;
    const double C20367 = C20343 + C20344;
    const double C19892 = C19867 + C19868;
    const double C20669 = C20659 + C20660;
    const double C20368 = C20345 + C20346;
    const double C3380 =
        (4 * (2 * C50042 + ae * C50044 + C49845 * C50094) +
         ae * (3 * C50044 + C49845 * C50095) +
         C49845 *
             (3 * C50094 + ae * C50095 +
              C49845 * (2 * C50088 + ae * C50090 +
                        C49845 * (C49890 + ae * C49845 * C49959 +
                                  C49845 * (ae * C49959 + C49845 * C49914))))) /
        C49725;
    const double C40499 = C40495 + C40496;
    const double C2320 =
        (3 * (C49879 + C49845 * C50304 + C50302 * ae) +
         C49845 * (2 * C50304 +
                   C49845 * (C49895 + C49845 * (C49845 * C49919 + C49989) +
                             C49845 * C49987 * ae) +
                   C50305 * ae) +
         (2 * C50302 + C49845 * C50305) * ae) /
        C49721;
    const double C2554 =
        (C49879 + C49845 * C50304 + C50302 * ae +
         (C49895 + C49845 * (C49845 * C49919 + C49989) + C49845 * C49987 * ae) *
             C50025) /
        C49721;
    const double C3076 =
        (C50015 * (2 * C50304 +
                   C49845 * (C49895 + C49845 * (C49845 * C49919 + C49989) +
                             C49845 * C49987 * ae) +
                   C50305 * ae)) /
        C49721;
    const double C5971 =
        (2 * C50015 * C50304 +
         C50015 * (C50304 + (C49845 * C49919 + C49989) * C50025)) /
        C49721;
    const double C2372 = C2163 * C974;
    const double C9055 = C7893 * C974;
    const double C18127 = C16965 * C974;
    const double C20107 = C19749 * C974;
    const double C24715 = C49740 * C974;
    const double C5981 = C2163 * C1088;
    const double C9219 = C7893 * C1088;
    const double C18291 = C16965 * C1088;
    const double C22233 = C19749 * C1088;
    const double C27809 = C49740 * C1088;
    const double C3112 = C2163 * C1435;
    const double C9723 = C7893 * C1435;
    const double C18795 = C16965 * C1435;
    const double C25431 = C49740 * C1435;
    const double C31429 = C19749 * C1435;
    const double C278 =
        (2 * C49867 + C49846 * C49879 +
         C49845 * (C49845 * C49899 + C50193 * ae) + C49845 * C50193 * ae) /
        C49721;
    const double C280 = (C49845 * (3 * C49879 + C49846 * C49899) +
                         (3 * C50189 + C49846 * C50193) * ae) /
                        C49721;
    const double C787 = (C50015 * (C49845 * C49899 + C50193 * ae)) / C49721;
    const double C127 = 4 * (2 * C50187 + C49846 * C50189) +
                        C49846 * (3 * C50189 + C49846 * C50193);
    const double C260 = 2 * C50187 + C49846 * C50189 + C50193 * C50041;
    const double C261 = C49845 * (3 * C50189 + C49846 * C50193);
    const double C401 = 2 * C50187 + C49846 * C50189 + C50193 * C50025;
    const double C402 = C50015 * (3 * C50189 + C49846 * C50193);
    const double C778 = C50015 * C49845 * C50193;
    const double C969 =
        2 * C49845 * C50193 + C49845 * (C50193 + C49992 * C50041);
    const double C1083 = C49845 * C50193 + C49845 * C49992 * C50025;
    const double C1430 = C50015 * (C50193 + C49992 * C50041);
    const double C1714 =
        2 * C50015 * C50193 + C50015 * (C50193 + C49992 * C50025);
    const double C5977 = C2163 * C1084;
    const double C9213 = C7893 * C1084;
    const double C18285 = C16965 * C1084;
    const double C22231 = C19749 * C1084;
    const double C27805 = C49740 * C1084;
    const double C50329 = C49881 + C50327;
    const double C6391 = C2163 * C4479;
    const double C22041 = C19749 * C4479;
    const double C29037 = C49740 * C4479;
    const double C3390 = C2163 * C2319;
    const double C19883 = C19749 * C2319;
    const double C25701 = C49740 * C2319;
    const double C4076 = C2163 * C3075;
    const double C20365 = C19749 * C3075;
    const double C26371 = C49740 * C3075;
    const double C3386 = C2163 * C2314;
    const double C19881 = C19749 * C2314;
    const double C25697 = C49740 * C2314;
    const double C3560 = C2163 * C2548;
    const double C21849 = C19749 * C2548;
    const double C25863 = C49740 * C2548;
    const double C4072 = C2163 * C3070;
    const double C20363 = C19749 * C3070;
    const double C26367 = C49740 * C3070;
    const double C49970 = C49969 + C49964;
    const double C2323 =
        (3 * (C49878 + ae * C50046 + C49845 * C50050) +
         ae * (2 * C50046 + C49845 * C50051) +
         C49845 * (2 * C50050 + ae * C50051 +
                   C49845 * (C49894 + ae * C49845 * C49966 +
                             C49845 * (ae * C49966 + C49845 * C49918)))) /
        C49725;
    const double C3079 =
        (2 * (ae * C50015 * C49951 + C49845 * C50065) + ae * C50015 * C50051 +
         C49845 *
             (C50065 + ae * C50015 * C49845 * C49966 +
              C49845 * (ae * C50015 * C49966 + C49845 * C50015 * C49918))) /
        C49725;
    const double C2317 = (3 * (C49943 + C49951 * C50041) +
                          C49845 * (2 * C50046 + C49845 * C50051)) /
                         C49721;
    const double C2551 = (C49943 + C49951 * C50041 + C50051 * C50025) / C49721;
    const double C3073 = (C50015 * (2 * C50046 + C49845 * C50051)) / C49721;
    const double C50077 = C49894 + C50073;
    const double C6388 = C50543 * C4481;
    const double C22040 = C50538 * C4481;
    const double C29034 = C50543 * C4481;
    const double C7281 =
        (4 * (2 * C50015 * C49951 + C50015 * C50383) +
         C50015 *
             (3 * C50383 +
              C50015 * (2 * C50103 + C50015 * (C49966 + C49988 * C50025)))) /
        C49721;
    const double C7299 = C7290 + C7291;
    const double C39273 = C39267 + C39268;
    const double C46516 = C46507 + C46508;
    const double C50402 = C50400 + C50395;
    const double C23912 =
        (4 * (2 * C50015 * C50336 + C50015 * C50419) +
         C50015 * (3 * C50419 +
                   C50015 * (2 * C50015 * C50394 +
                             C50015 * (C50394 +
                                       (C49845 * C49915 + C49982) * C50025)))) /
        C49721;
    const double C3374 = 4 * (2 * C50290 + C49845 * C50293) +
                         C49845 * (3 * C50293 + C49845 * C50343);
    const double C3542 = 2 * C50290 + C49845 * C50293 + C50343 * C50025;
    const double C4060 = C50015 * (3 * C50293 + C49845 * C50343);
    const double C21270 =
        2 * C50015 * C50343 + C50015 * (C50343 + C50401 * C50025);
    const double C23022 = C23015 + C23016;
    const double C40488 =
        5 * (3 * C50514 + C50015 * C50529) +
        C50015 * (4 * C50529 +
                  C50015 * (3 * C50527 +
                            C50015 * (2 * C50015 * C49958 +
                                      C50015 * (C49958 + C49979 * C50025))));
    const double C49925 = C49846 * C49923;
    const double C1718 =
        (2 * C50015 * C49899 + C50015 * (C49899 + C49923 * C50025)) / C49721;
    const double C49924 = C49846 * C49922;
    const double C50055 = C49845 * C49922;
    const double C50067 = C50015 * C49922;
    const double C1727 =
        (2 * C50015 * C49898 + C50015 * (C49898 + C49922 * C50025)) / C49725;
    const double C50078 = C49845 * C50074;
    const double C4483 =
        (2 * C50065 + C50015 * C50098 +
         ae * (2 * C50015 * C50069 +
               C50015 * (C50069 + C49845 * C49988 * C50025)) +
         C49845 * (ae * (2 * C50103 + C50015 * (C49966 + C49988 * C50025)) +
                   C49845 * (2 * C50104 +
                             C50015 * (C49918 + (ae * C49915 +
                                                 C49846 * std::pow(C49848, 8) *
                                                     bs[8] * C49856) *
                                                    C50025)))) /
        C49725;
    const double C4485 =
        (ae * (2 * C50015 * C49951 + C50015 * (C49951 + C49966 * C50025)) +
         C49845 * (2 * C50065 + C50015 * C50098)) /
        C49725;
    const double C5376 = (3 * (C49878 + C49894 * C50025) +
                          C50015 * (2 * C50065 + C50015 * C50098)) /
                         C49725;
    const double C6382 =
        (ae * (3 * (C49951 + C49966 * C50025) +
               C50015 * (2 * C50103 + C50015 * (C49966 + C49988 * C50025))) +
         C49845 * (3 * C50098 +
                   C50015 * (2 * C50104 +
                             C50015 * (C49918 + (ae * C49915 +
                                                 C49846 * std::pow(C49848, 8) *
                                                     bs[8] * C49856) *
                                                    C50025)))) /
        C49725;
    const double C7283 =
        (4 * (2 * C50065 + C50015 * C50098) +
         C50015 * (3 * C50098 +
                   C50015 * (2 * C50104 +
                             C50015 * (C49918 + (ae * C49915 +
                                                 C49846 * std::pow(C49848, 8) *
                                                     bs[8] * C49856) *
                                                    C50025)))) /
        C49725;
    const double C50107 = C50105 + C50106;
    const double C50144 = C49845 * C50142;
    const double C21273 =
        (2 * (ae * (2 * C50109 + C50015 * C50151) + C49845 * C50170) +
         ae * (2 * C50015 * C50090 + C50015 * (C50090 + C50138 * C50025)) +
         C49845 *
             (C50170 +
              ae * (2 * C50157 + C50015 * (C50129 + C49845 * C49981 * C50025)) +
              C49845 *
                  (ae * (2 * C50158 + C50015 * (C49959 + C49981 * C50025)) +
                   C49845 * (2 * C50159 +
                             C50015 * (C49914 + std::pow(C49848, 8) * bs[8] *
                                                    C49856 * C50025))))) /
        C49725;
    const double C23007 =
        (3 * C50101 + C50015 * C50170 +
         ae * (3 * (C50083 + C50129 * C50025) +
               C50015 * (2 * C50157 +
                         C50015 * (C50129 + C49845 * C49981 * C50025))) +
         C49845 * (ae * (3 * C50151 +
                         C50015 * (2 * C50158 +
                                   C50015 * (C49959 + C49981 * C50025))) +
                   C49845 * (3 * C50152 +
                             C50015 * (2 * C50159 +
                                       C50015 * (C49914 + std::pow(C49848, 8) *
                                                              bs[8] * C49856 *
                                                              C50025))))) /
        C49725;
    const double C23914 =
        (ae * (4 * (2 * C50109 + C50015 * C50151) +
               C50015 * (3 * C50151 +
                         C50015 * (2 * C50158 +
                                   C50015 * (C49959 + C49981 * C50025)))) +
         C49845 * (4 * C50170 +
                   C50015 * (3 * C50152 +
                             C50015 * (2 * C50159 +
                                       C50015 * (C49914 + std::pow(C49848, 8) *
                                                              bs[8] * C49856 *
                                                              C50025))))) /
        C49725;
    const double C40491 =
        (5 * (3 * C50101 + C50015 * C50170) +
         C50015 * (4 * C50170 +
                   C50015 * (3 * C50152 +
                             C50015 * (2 * C50159 +
                                       C50015 * (C49914 + std::pow(C49848, 8) *
                                                              bs[8] * C49856 *
                                                              C50025))))) /
        C49725;
    const double C50166 = C50163 + C50165;
    const double C49995 = C49993 + C49986;
    const double C50079 = C49845 * C50076;
    const double C3547 =
        (2 * (ae * (C49951 + C49966 * C50025) + C49845 * C50098) +
         ae * (C50051 + C50076 * C50025) +
         C49845 * (C50098 + ae * (C50069 + C49845 * C49988 * C50025) +
                   C49845 * (ae * (C49966 + C49988 * C50025) +
                             C49845 * (C49918 + (ae * C49915 +
                                                 C49846 * std::pow(C49848, 8) *
                                                     bs[8] * C49856) *
                                                    C50025)))) /
        C49725;
    const double C4477 =
        (2 * C50015 * C50051 + C50015 * (C50051 + C50076 * C50025)) / C49721;
    const double C50145 = C49845 * C50143;
    const double C20653 =
        (3 * (C50101 + ae * (C50083 + C50129 * C50025) + C49845 * C50155) +
         ae * (C50095 + C50143 * C50025) +
         C49845 * (2 * C50155 + ae * (C50090 + C50138 * C50025) +
                   C49845 * (C50152 + ae * (C50129 + C49845 * C49981 * C50025) +
                             C49845 * (ae * (C49959 + C49981 * C50025) +
                                       C49845 * (C49914 + std::pow(C49848, 8) *
                                                              bs[8] * C49856 *
                                                              C50025))))) /
        C49725;
    const double C21272 =
        (2 * C50015 * C50095 + C50015 * (C50095 + C50143 * C50025)) / C49721;
    const double C5767 = C2163 * C419;
    const double C11045 = C7893 * C419;
    const double C33999 = C16965 * C419;
    const double C45034 = C49740 * C419;
    const double C11373 = C7893 * C421;
    const double C34327 = C16965 * C421;
    const double C21006 = C50538 * C4066;
    const double C20548 = C50538 * C3378;
    const double C20664 = C50538 * C3546;
    const double C21004 = C50538 * C4064;
    const double C973 =
        (2 * (C49845 * C49899 + C50193 * ae) +
         C49845 * (C49899 + C49845 * (C49845 * C49923 + C49994) +
                   C49845 * C49992 * ae) +
         (C50193 + C49992 * C50041) * ae) /
        C49721;
    const double C1087 =
        (C49845 * C49899 + C50193 * ae + (C49845 * C49923 + C49994) * C50025) /
        C49721;
    const double C1434 =
        (C50015 * (C49899 + C49845 * (C49845 * C49923 + C49994) +
                   C49845 * C49992 * ae)) /
        C49721;
    const double C50199 = C50197 + C50198;
    const double C3373 = 4 * (2 * C50296 + C49845 * C50299) +
                         C49845 * (3 * C50299 + C49845 * C50330);
    const double C3541 = 2 * C50296 + C49845 * C50299 + C50330 * C50025;
    const double C4059 = C50015 * (3 * C50299 + C49845 * C50330);
    const double C50405 = C50393 + C50403;
    const double C113 = (C50872 * C50563) / C50560 + (C50821 - C50856) / C50562;
    const double C114 =
        (C50873 * C50563) / C50560 + (2 * C50574 + C50872) / C50562;
    const double C115 = (C50563 * C50574) / C50577 + C50873 / C50562;
    const double C964 = (C50874 * C50634) / C50560 + (C50829 - C50858) / C50562;
    const double C965 =
        (C50875 * C50634) / C50560 + (2 * C50639 + C50874) / C50562;
    const double C966 = (C50634 * C50639) / C50577 + C50875 / C50562;
    const double C1710 =
        (C50876 * C50662) / C50560 + (C50830 - C50861) / C50562;
    const double C1711 =
        (C50877 * C50662) / C50560 + (2 * C50667 + C50876) / C50562;
    const double C1712 = (C50662 * C50667) / C50577 + C50877 / C50562;
    const double C39052 =
        (C50880 * C50759) / C49721 + (C50843 - C50867) / C49726;
    const double C39053 =
        (C50881 * C50759) / C49721 + (2 * C50764 + C50880) / C49726;
    const double C39054 = (C50759 * C50764) / C49730 + C50881 / C49726;
    const double C8096 = C8053 + C8054;
    const double C8093 = C8047 + C8048;
    const double C11052 = C11009 + C11010;
    const double C11049 = C11003 + C11004;
    const double C17168 = C17125 + C17126;
    const double C17165 = C17119 + C17120;
    const double C34006 = C33963 + C33964;
    const double C34003 = C33957 + C33958;
    const double C49745 = C49744 * ae;
    const double C2162 = (-C49722 / C49721) / C49726 - (C49744 * be) / C49721;
    const double C22007 = C20372 * C16967;
    const double C22599 = C20372 * C16966;
    const double C36691 = C20372 * C2165;
    const double C37205 = C20372 * C2164;
    const double C39617 = C20372 * C121;
    const double C47398 = C20372 * C7895;
    const double C47920 = C20372 * C7894;
    const double C22008 = C20371 * C50738;
    const double C22600 = C20371 * C16961;
    const double C31260 = C20371 * C50879;
    const double C31780 = C20371 * C50878;
    const double C36692 = C20371 * C2160;
    const double C37206 = C20371 * C2159;
    const double C39618 = C20371 * C50688;
    const double C47399 = C20371 * C50738;
    const double C47921 = C20371 * C50842;
    const double C22601 = C20370 * C16967;
    const double C23514 = C20370 * C16966;
    const double C31261 = C20370 * C24521;
    const double C36693 = C20370 * C2166;
    const double C37207 = C20370 * C2165;
    const double C38099 = C20370 * C2164;
    const double C40221 = C20370 * C121;
    const double C47922 = C20370 * C7895;
    const double C48819 = C20370 * C7894;
    const double C22602 = C20369 * C50738;
    const double C23515 = C20369 * C16961;
    const double C31262 = C20369 * C24516;
    const double C31782 = C20369 * C50879;
    const double C32674 = C20369 * C50878;
    const double C36694 = C20369 * C2161;
    const double C37208 = C20369 * C2160;
    const double C38100 = C20369 * C2159;
    const double C40222 = C20369 * C50688;
    const double C47923 = C20369 * C50738;
    const double C48820 = C20369 * C50842;
    const double C22014 = C20668 * C50738;
    const double C22604 = C20668 * C16961;
    const double C31265 = C20668 * C50879;
    const double C32182 = C20668 * C50878;
    const double C36697 = C20668 * C2160;
    const double C37608 = C20668 * C2159;
    const double C39620 = C20668 * C50688;
    const double C47403 = C20668 * C50738;
    const double C47925 = C20668 * C50842;
    const double C22013 = C20667 * C16967;
    const double C22603 = C20667 * C16966;
    const double C36698 = C20667 * C2165;
    const double C37607 = C20667 * C2164;
    const double C39619 = C20667 * C121;
    const double C47402 = C20667 * C7895;
    const double C47924 = C20667 * C7894;
    const double C22068 = C22052 * C16961;
    const double C31270 = C22052 * C50878;
    const double C36702 = C22052 * C2159;
    const double C39262 = C22052 * C50688;
    const double C47409 = C22052 * C50842;
    const double C22067 = C22051 * C16966;
    const double C36701 = C22051 * C2164;
    const double C39261 = C22051 * C121;
    const double C47408 = C22051 * C7894;
    const double C22066 = C22050 * C16966;
    const double C38495 = C22050 * C2164;
    const double C39257 = C22050 * C121;
    const double C47407 = C22050 * C7894;
    const double C22065 = C22049 * C16961;
    const double C33070 = C22049 * C50878;
    const double C38496 = C22049 * C2159;
    const double C39258 = C22049 * C50688;
    const double C47406 = C22049 * C50842;
    const double C22064 = C22048 * C16967;
    const double C23013 = C22048 * C16966;
    const double C38497 = C22048 * C2165;
    const double C39621 = C22048 * C121;
    const double C47405 = C22048 * C7895;
    const double C48326 = C22048 * C7894;
    const double C22062 = C22046 * C16961;
    const double C31267 = C22046 * C50878;
    const double C36699 = C22046 * C2159;
    const double C39256 = C22046 * C50688;
    const double C47401 = C22046 * C50842;
    const double C22061 = C22045 * C16966;
    const double C36700 = C22045 * C2164;
    const double C39255 = C22045 * C121;
    const double C47400 = C22045 * C7894;
    const double C22060 = C22044 * C16961;
    const double C31258 = C22044 * C50878;
    const double C36690 = C22044 * C2159;
    const double C39254 = C22044 * C50688;
    const double C47397 = C22044 * C50842;
    const double C22059 = C22043 * C16966;
    const double C36689 = C22043 * C2164;
    const double C39253 = C22043 * C121;
    const double C47396 = C22043 * C7894;
    const double C23921 = C23020 * C16967;
    const double C39891 = C23020 * C121;
    const double C49220 = C23020 * C7895;
    const double C23928 = C23925 * C16961;
    const double C39259 = C23925 * C50688;
    const double C49219 = C23925 * C50842;
    const double C23927 = C23924 * C16966;
    const double C39260 = C23924 * C121;
    const double C49218 = C23924 * C7894;
    const double C49820 = C49818 * ae;
    const double C22401 = C22397 * C16966;
    const double C37005 = C22397 * C2164;
    const double C39475 = C22397 * C121;
    const double C47718 = C22397 * C7894;
    const double C22069 = C22053 * C16966;
    const double C36707 = C22053 * C2164;
    const double C39263 = C22053 * C121;
    const double C47412 = C22053 * C7894;
    const double C22027 = C20373 * C16967;
    const double C22607 = C20373 * C16966;
    const double C36703 = C20373 * C2165;
    const double C37211 = C20373 * C2164;
    const double C39623 = C20373 * C121;
    const double C47410 = C20373 * C7895;
    const double C47928 = C20373 * C7894;
    const double C22606 = C20670 * C50738;
    const double C23519 = C20670 * C16961;
    const double C31263 = C20670 * C24516;
    const double C32184 = C20670 * C50879;
    const double C36695 = C20670 * C2161;
    const double C37610 = C20670 * C2160;
    const double C40224 = C20670 * C50688;
    const double C47927 = C20670 * C50738;
    const double C48824 = C20670 * C50842;
    const double C2713 = C50543 * C283;
    const double C8078 = C7888 * C283;
    const double C8416 = C50871 * C283;
    const double C17150 = C16960 * C283;
    const double C17488 = C16959 * C283;
    const double C25044 = C50543 * C283;
    const double C5760 = C50543 * C424;
    const double C11034 = C7888 * C424;
    const double C11372 = C50871 * C424;
    const double C28238 = C50543 * C424;
    const double C33988 = C16960 * C424;
    const double C34326 = C16959 * C424;
    const double C5418 = C50543 * C430;
    const double C5766 = C2157 * C430;
    const double C11044 = C50871 * C430;
    const double C11012 = C7888 * C430;
    const double C22394 = C50538 * C430;
    const double C27802 = C50543 * C430;
    const double C33998 = C16959 * C430;
    const double C33966 = C16960 * C430;
    const double C45033 = C50814 * C430;
    const double C3376 =
        (4 * (2 * C50292 + C49845 * C50344 + C50293 * ae) +
         C49845 *
             (3 * C50344 +
              C49845 * (2 * C50336 +
                        C49845 * (C49875 + C49845 * (C49845 * C49891 + C49960) +
                                  C49845 * C49958 * ae) +
                        C50338 * ae) +
              C50343 * ae) +
         (3 * C50293 + C49845 * C50343) * ae) /
        C49721;
    const double C3544 =
        (2 * C50292 + C49845 * C50344 + C50293 * ae +
         (2 * C50336 +
          C49845 * (C49875 + C49845 * (C49845 * C49891 + C49960) +
                    C49845 * C49958 * ae) +
          C50338 * ae) *
             C50025) /
        C49721;
    const double C4062 =
        (C50015 *
         (3 * C50344 +
          C49845 * (2 * C50336 +
                    C49845 * (C49875 + C49845 * (C49845 * C49891 + C49960) +
                              C49845 * C49958 * ae) +
                    C50338 * ae) +
          C50343 * ae)) /
        C49721;
    const double C4476 =
        (2 * C50015 * C50344 +
         C50015 * (C50344 + (C49875 + C49845 * (C49845 * C49891 + C49960) +
                             C49845 * C49958 * ae) *
                                C50025)) /
        C49721;
    const double C22063 = C22047 * C50738;
    const double C23014 = C22047 * C16961;
    const double C33072 = C22047 * C50879;
    const double C38498 = C22047 * C2160;
    const double C39622 = C22047 * C50688;
    const double C47404 = C22047 * C50738;
    const double C48327 = C22047 * C50842;
    const double C23922 = C23021 * C50738;
    const double C39892 = C23021 * C50688;
    const double C49221 = C23021 * C50738;
    const double C40502 = C40500 * C50688;
    const double C22402 = C22398 * C16961;
    const double C31580 = C22398 * C50878;
    const double C37006 = C22398 * C2159;
    const double C39476 = C22398 * C50688;
    const double C47719 = C22398 * C50842;
    const double C22070 = C22054 * C16961;
    const double C31276 = C22054 * C50878;
    const double C36708 = C22054 * C2159;
    const double C39264 = C22054 * C50688;
    const double C47413 = C22054 * C50842;
    const double C22028 = C20374 * C50738;
    const double C22608 = C20374 * C16961;
    const double C31272 = C20374 * C50879;
    const double C31786 = C20374 * C50878;
    const double C36704 = C20374 * C2160;
    const double C37212 = C20374 * C2159;
    const double C39624 = C20374 * C50688;
    const double C47411 = C20374 * C50738;
    const double C47929 = C20374 * C50842;
    const double C22072 = C22056 * C16961;
    const double C39266 = C22056 * C50688;
    const double C47417 = C22056 * C50842;
    const double C289 =
        (C49864 + ae * C49867 + C49846 * C49878 + ae * C49845 * C49954 +
         C49845 * (ae * C49954 + C49845 * C49898)) /
        C49725;
    const double C792 =
        (ae * C50015 * C49954 + C49845 * C50015 * C49898) / C49725;
    const double C138 = (3 * (C49939 + C49846 * C49943 + C50187 * ae) +
                         C49846 * (2 * C49943 + C49846 * C49954 + C50189 * ae) +
                         (2 * C50187 + C49846 * C50189) * ae) /
                        C49721;
    const double C267 =
        (C49845 * (2 * C49943 + C49846 * C49954 + C50189 * ae)) / C49721;
    const double C273 =
        (C49939 + C49846 * C49943 + C50187 * ae + C49954 * C50041) / C49721;
    const double C408 =
        (C50015 * (2 * C49943 + C49846 * C49954 + C50189 * ae)) / C49721;
    const double C414 =
        (C49939 + C49846 * C49943 + C50187 * ae + C49954 * C50025) / C49721;
    const double C782 = (C50015 * C49845 * C49954) / C49721;
    const double C3573 = C3564 + C3565;
    const double C21856 = C21851 + C21852;
    const double C25876 = C25867 + C25868;
    const double C3567 = C3552 + C3553;
    const double C21853 = C21845 + C21846;
    const double C25870 = C25855 + C25856;
    const double C22034 = C21854 * C50738;
    const double C22612 = C21854 * C16961;
    const double C31278 = C21854 * C50879;
    const double C36710 = C21854 * C2160;
    const double C39626 = C21854 * C50688;
    const double C47415 = C21854 * C50738;
    const double C47933 = C21854 * C50842;
    const double C22610 = C20376 * C50738;
    const double C31274 = C20376 * C24516;
    const double C31788 = C20376 * C50879;
    const double C36706 = C20376 * C2161;
    const double C37214 = C20376 * C2160;
    const double C47931 = C20376 * C50738;
    const double C22609 = C20375 * C16967;
    const double C31273 = C20375 * C24521;
    const double C36705 = C20375 * C2166;
    const double C37213 = C20375 * C2165;
    const double C47930 = C20375 * C7895;
    const double C22071 = C22055 * C16966;
    const double C39265 = C22055 * C121;
    const double C47416 = C22055 * C7894;
    const double C23517 = C20367 * C50738;
    const double C31784 = C20367 * C24516;
    const double C32676 = C20367 * C50879;
    const double C37210 = C20367 * C2161;
    const double C38102 = C20367 * C2160;
    const double C48822 = C20367 * C50738;
    const double C22605 = C20669 * C16967;
    const double C23518 = C20669 * C16966;
    const double C31264 = C20669 * C24521;
    const double C36696 = C20669 * C2166;
    const double C37609 = C20669 * C2165;
    const double C40223 = C20669 * C121;
    const double C47926 = C20669 * C7895;
    const double C48823 = C20669 * C7894;
    const double C23516 = C20368 * C16967;
    const double C31783 = C20368 * C24521;
    const double C37209 = C20368 * C2166;
    const double C38101 = C20368 * C2165;
    const double C48821 = C20368 * C7895;
    const double C20550 = C50538 * C3380;
    const double C40501 = C40499 * C121;
    const double C2720 = C2163 * C278;
    const double C8089 = C7893 * C278;
    const double C17161 = C16965 * C278;
    const double C25051 = C49740 * C278;
    const double C8417 = C7893 * C280;
    const double C17489 = C16965 * C280;
    const double C8787 = C7893 * C787;
    const double C14063 = C2163 * C787;
    const double C17859 = C16965 * C787;
    const double C28031 = C49740 * C787;
    const double C2716 = C2163 * C260;
    const double C8083 = C7893 * C260;
    const double C17155 = C16965 * C260;
    const double C25047 = C49740 * C260;
    const double C8411 = C7893 * C261;
    const double C17483 = C16965 * C261;
    const double C5763 = C2163 * C401;
    const double C11039 = C7893 * C401;
    const double C33993 = C16965 * C401;
    const double C45030 = C49740 * C401;
    const double C11367 = C7893 * C402;
    const double C34321 = C16965 * C402;
    const double C8781 = C7893 * C778;
    const double C14059 = C2163 * C778;
    const double C17853 = C16965 * C778;
    const double C28027 = C49740 * C778;
    const double C50331 = C50329 + C50324;
    const double C49971 = C49846 * C49970;
    const double C49976 = 3 * C49970;
    const double C50054 = ae * C49970;
    const double C50053 = C49845 * C49970;
    const double C982 = (2 * (ae * C49954 + C49845 * C49898) +
                         ae * (C49954 + C49970 * std::pow(C49845, 2)) +
                         C49845 * (C49898 + ae * C49845 * C49970 +
                                   C49845 * (ae * C49970 + C49845 * C49922))) /
                        C49725;
    const double C1096 = (ae * (C49954 + C49970 * C50025) +
                          C49845 * (C49898 + C49922 * C50025)) /
                         C49725;
    const double C1443 =
        (C50015 * C49898 + ae * C50015 * C49845 * C49970 +
         C49845 * (ae * C50015 * C49970 + C49845 * C50015 * C49922)) /
        C49725;
    const double C978 =
        (2 * C49845 * C49954 + C49845 * (C49954 + C49970 * C50041)) / C49721;
    const double C1439 = (C50015 * (C49954 + C49970 * C50041)) / C49721;
    const double C1723 =
        (2 * C50015 * C49954 + C50015 * (C49954 + C49970 * C50025)) / C49721;
    const double C3391 = C50543 * C2323;
    const double C19884 = C50538 * C2323;
    const double C25702 = C50543 * C2323;
    const double C4077 = C50543 * C3079;
    const double C20366 = C50538 * C3079;
    const double C26372 = C50543 * C3079;
    const double C3387 = C50543 * C2317;
    const double C19882 = C50538 * C2317;
    const double C25698 = C50543 * C2317;
    const double C3561 = C50543 * C2551;
    const double C21850 = C50538 * C2551;
    const double C25864 = C50543 * C2551;
    const double C4073 = C50543 * C3073;
    const double C20364 = C50538 * C3073;
    const double C26368 = C50543 * C3073;
    const double C6396 = C6387 + C6388;
    const double C22057 = C22039 + C22040;
    const double C29040 = C29033 + C29034;
    const double C39277 = C39273 * C121;
    const double C50404 = C49845 * C50402;
    const double C23005 =
        (3 * (C50344 + C50402 * C50025) +
         C50015 *
             (2 * C50015 * C50402 +
              C50015 * (C50402 + (C49891 + C49845 * (C49845 * C49915 + C49982) +
                                  C49845 * C49979 * ae) *
                                     C50025))) /
        C49721;
    const double C20547 = C19749 * C3374;
    const double C20663 = C19749 * C3542;
    const double C21003 = C19749 * C4060;
    const double C23025 = C23022 * C16967;
    const double C33073 = C23022 * C24521;
    const double C38499 = C23022 * C2166;
    const double C40225 = C23022 * C121;
    const double C48328 = C23022 * C7895;
    const double C49927 = C49907 + C49925;
    const double C49926 = C49908 + C49924;
    const double C5377 =
        (3 * (C49898 + C49922 * C50025) +
         C50015 * (2 * C50067 +
                   C50015 * (C49922 + (C49914 + ae * C49846 * C49915 +
                                       C49846 * (ae * C49915 +
                                                 C49846 * std::pow(C49848, 8) *
                                                     bs[8] * C49856)) *
                                          C50025))) /
        C49725;
    const double C5426 = C50543 * C1727;
    const double C12852 = C7888 * C1727;
    const double C35806 = C16960 * C1727;
    const double C39482 = C50538 * C1727;
    const double C44723 = C50543 * C1727;
    const double C50080 = C50077 + C50078;
    const double C6392 = C50543 * C4485;
    const double C22042 = C50538 * C4485;
    const double C29038 = C50543 * C4485;
    const double C7295 = C50543 * C5376;
    const double C39270 = C50538 * C5376;
    const double C46512 = C50543 * C5376;
    const double C50146 = C50134 + C50144;
    const double C49996 = C49846 * C49995;
    const double C50056 = C49995 * C50041;
    const double C5973 =
        (ae * (2 * C50015 * C49970 + C50015 * (C49970 + C49995 * C50025)) +
         C49845 * (2 * C50067 +
                   C50015 * (C49922 + (C49914 + ae * C49846 * C49915 +
                                       C49846 * (ae * C49915 +
                                                 C49846 * std::pow(C49848, 8) *
                                                     bs[8] * C49856)) *
                                          C50025))) /
        C49725;
    const double C5374 =
        (3 * (C49954 + C49970 * C50025) +
         C50015 * (2 * C50015 * C49970 + C50015 * (C49970 + C49995 * C50025))) /
        C49721;
    const double C50081 = C50075 + C50079;
    const double C50147 = C50132 + C50145;
    const double C128 = 5 * (3 * C50189 + C49846 * C50193) +
                        C49846 * (4 * C50193 + C49846 * C50199);
    const double C262 = 3 * C50189 + C49846 * C50193 + C50199 * C50041;
    const double C403 = 3 * C50189 + C49846 * C50193 + C50199 * C50025;
    const double C537 = C49845 * (4 * C50193 + C49846 * C50199);
    const double C641 = C50015 * (4 * C50193 + C49846 * C50199);
    const double C779 = C50015 * C49845 * C50199;
    const double C20542 = 5 * (3 * C50293 + C49845 * C50343) +
                          C49845 * (4 * C50343 + C49845 * C50405);
    const double C20650 = 3 * C50293 + C49845 * C50343 + C50405 * C50025;
    const double C20998 = C50015 * (4 * C50343 + C49845 * C50405);
    const double C49746 = C49745 / C49721;
    const double C2370 = C2162 * C975;
    const double C2366 = C2162 * C971;
    const double C2362 = C2162 * C276;
    const double C2358 = C2162 * C258;
    const double C2354 = C2162 * C265;
    const double C2350 = C2162 * C255;
    const double C2348 = C2162 * C972;
    const double C2344 = C2162 * C976;
    const double C2338 = C2162 * C275;
    const double C2334 = C2162 * C257;
    const double C2330 = C2162 * C266;
    const double C2326 = C2162 * C256;
    const double C2718 = C2162 * C277;
    const double C2714 = C2162 * C259;
    const double C2710 = C2162 * C264;
    const double C2706 = C2162 * C254;
    const double C3110 = C2162 * C1436;
    const double C3106 = C2162 * C1432;
    const double C3102 = C2162 * C785;
    const double C3098 = C2162 * C776;
    const double C3096 = C2162 * C775;
    const double C3092 = C2162 * C784;
    const double C3088 = C2162 * C1433;
    const double C3084 = C2162 * C1437;
    const double C3388 = C2162 * C2318;
    const double C3384 = C2162 * C2313;
    const double C3562 = C2162 * C2552;
    const double C3558 = C2162 * C2547;
    const double C3554 = C2162 * C1090;
    const double C3550 = C2162 * C1086;
    const double C4074 = C2162 * C3074;
    const double C4070 = C2162 * C3069;
    const double C5423 = C2162 * C1720;
    const double C5419 = C2162 * C1716;
    const double C5415 = C2162 * C417;
    const double C5411 = C2162 * C399;
    const double C5407 = C2162 * C406;
    const double C5403 = C2162 * C396;
    const double C5401 = C2162 * C1717;
    const double C5397 = C2162 * C1721;
    const double C5391 = C2162 * C416;
    const double C5387 = C2162 * C398;
    const double C5383 = C2162 * C407;
    const double C5379 = C2162 * C397;
    const double C5765 = C2162 * C418;
    const double C5761 = C2162 * C400;
    const double C5757 = C2162 * C405;
    const double C5753 = C2162 * C395;
    const double C5979 = C2162 * C1089;
    const double C5975 = C2162 * C1085;
    const double C6389 = C2162 * C4480;
    const double C6385 = C2162 * C4474;
    const double C7292 = C2162 * C5371;
    const double C7288 = C2162 * C5366;
    const double C14061 = C2162 * C786;
    const double C14057 = C2162 * C777;
    const double C23019 = C22604 + C22603;
    const double C39894 = C39620 + C39619;
    const double C48330 = C47925 + C47924;
    const double C23916 = C22065 + C22066;
    const double C39272 = C39257 + C39258;
    const double C40494 = C39258 + C39257;
    const double C49217 = C47406 + C47407;
    const double C22075 = C22061 + C22062;
    const double C39271 = C39255 + C39256;
    const double C47420 = C47400 + C47401;
    const double C40493 = C39259 + C39260;
    const double C49822 = C49820 / C49721;
    const double C2725 = C2712 + C2713;
    const double C8108 = C8077 + C8078;
    const double C17180 = C17149 + C17150;
    const double C25056 = C25043 + C25044;
    const double C5772 = C5759 + C5760;
    const double C11064 = C11033 + C11034;
    const double C28242 = C28237 + C28238;
    const double C34018 = C33987 + C33988;
    const double C5446 = C5417 + C5418;
    const double C11053 = C11011 + C11012;
    const double C22400 = C22393 + C22394;
    const double C27826 = C27801 + C27802;
    const double C34007 = C33965 + C33966;
    const double C20549 = C19749 * C3376;
    const double C20665 = C19749 * C3544;
    const double C21005 = C19749 * C4062;
    const double C23017 = C19749 * C4476;
    const double C39893 = C39622 + C39621;
    const double C22076 = C22070 + C22069;
    const double C39276 = C39264 + C39263;
    const double C47421 = C47413 + C47412;
    const double C2365 = C50543 * C289;
    const double C2719 = C2157 * C289;
    const double C8088 = C50871 * C289;
    const double C8056 = C7888 * C289;
    const double C17160 = C16959 * C289;
    const double C17128 = C16960 * C289;
    const double C20104 = C50538 * C289;
    const double C24708 = C50543 * C289;
    const double C25050 = C50814 * C289;
    const double C3105 = C50543 * C792;
    const double C8786 = C50871 * C792;
    const double C8766 = C7888 * C792;
    const double C14062 = C2157 * C792;
    const double C17858 = C16959 * C792;
    const double C17838 = C16960 * C792;
    const double C22230 = C50538 * C792;
    const double C25424 = C50543 * C792;
    const double C28030 = C50814 * C792;
    const double C2709 = C50543 * C267;
    const double C8072 = C7888 * C267;
    const double C8410 = C50871 * C267;
    const double C17144 = C16960 * C267;
    const double C17482 = C16959 * C267;
    const double C25040 = C50543 * C267;
    const double C2361 = C50543 * C273;
    const double C2715 = C2157 * C273;
    const double C8082 = C50871 * C273;
    const double C8062 = C7888 * C273;
    const double C17154 = C16959 * C273;
    const double C17134 = C16960 * C273;
    const double C20102 = C50538 * C273;
    const double C24704 = C50543 * C273;
    const double C25046 = C50814 * C273;
    const double C5756 = C50543 * C408;
    const double C11028 = C7888 * C408;
    const double C11366 = C50871 * C408;
    const double C28234 = C50543 * C408;
    const double C33982 = C16960 * C408;
    const double C34320 = C16959 * C408;
    const double C5414 = C50543 * C414;
    const double C5762 = C2157 * C414;
    const double C11038 = C50871 * C414;
    const double C11018 = C7888 * C414;
    const double C22392 = C50538 * C414;
    const double C27798 = C50543 * C414;
    const double C33992 = C16959 * C414;
    const double C33972 = C16960 * C414;
    const double C45029 = C50814 * C414;
    const double C3101 = C50543 * C782;
    const double C8780 = C50871 * C782;
    const double C8772 = C7888 * C782;
    const double C14058 = C2157 * C782;
    const double C17852 = C16959 * C782;
    const double C17844 = C16960 * C782;
    const double C22228 = C50538 * C782;
    const double C25420 = C50543 * C782;
    const double C28026 = C50814 * C782;
    const double C22614 = C21856 * C50738;
    const double C31280 = C21856 * C24516;
    const double C36712 = C21856 * C2161;
    const double C47935 = C21856 * C50738;
    const double C22033 = C21853 * C16967;
    const double C22611 = C21853 * C16966;
    const double C36709 = C21853 * C2165;
    const double C39625 = C21853 * C121;
    const double C47414 = C21853 * C7895;
    const double C47932 = C21853 * C7894;
    const double C39275 = C39266 + C39265;
    const double C3375 =
        (4 * (2 * C50298 + C49845 * C50331 + C50299 * ae) +
         C49845 *
             (3 * C50331 +
              C49845 * (2 * C50323 +
                        C49845 * (C49903 +
                                  C49845 * (C49845 * C49846 * C49915 + C49986) +
                                  C49845 * C49983 * ae) +
                        C50325 * ae) +
              C50330 * ae) +
         (3 * C50299 + C49845 * C50330) * ae) /
        C49721;
    const double C3543 =
        (2 * C50298 + C49845 * C50331 + C50299 * ae +
         (2 * C50323 +
          C49845 * (C49903 + C49845 * (C49845 * C49846 * C49915 + C49986) +
                    C49845 * C49983 * ae) +
          C50325 * ae) *
             C50025) /
        C49721;
    const double C4061 =
        (C50015 *
         (3 * C50331 +
          C49845 *
              (2 * C50323 +
               C49845 * (C49903 + C49845 * (C49845 * C49846 * C49915 + C49986) +
                         C49845 * C49983 * ae) +
               C50325 * ae) +
          C50330 * ae)) /
        C49721;
    const double C4475 =
        (2 * C50015 * C50331 +
         C50015 *
             (C50331 + (C49903 + C49845 * (C49845 * C49846 * C49915 + C49986) +
                        C49845 * C49983 * ae) *
                           C50025)) /
        C49721;
    const double C49972 = C49956 + C49971;
    const double C50057 = C50054 + C50055;
    const double C2558 =
        (C49898 + C49922 * C50025 + ae * (C50053 + C49845 * C49995 * C50025) +
         C49845 * (ae * (C49970 + C49995 * C50025) +
                   C49845 * (C49922 + (C49914 + ae * C49846 * C49915 +
                                       C49846 * (ae * C49915 +
                                                 C49846 * std::pow(C49848, 8) *
                                                     bs[8] * C49856)) *
                                          C50025))) /
        C49725;
    const double C1092 = (C49845 * C49954 + C50053 * C50025) / C49721;
    const double C5972 =
        (2 * C50015 * C50053 + C50015 * (C50053 + C49845 * C49995 * C50025)) /
        C49721;
    const double C2373 = C50543 * C982;
    const double C9056 = C7888 * C982;
    const double C18128 = C16960 * C982;
    const double C20108 = C50538 * C982;
    const double C24716 = C50543 * C982;
    const double C5982 = C50543 * C1096;
    const double C9220 = C7888 * C1096;
    const double C18292 = C16960 * C1096;
    const double C22234 = C50538 * C1096;
    const double C27810 = C50543 * C1096;
    const double C3113 = C50543 * C1443;
    const double C9724 = C7888 * C1443;
    const double C18796 = C16960 * C1443;
    const double C25432 = C50543 * C1443;
    const double C31430 = C50538 * C1443;
    const double C2369 = C50543 * C978;
    const double C9050 = C7888 * C978;
    const double C18122 = C16960 * C978;
    const double C20106 = C50538 * C978;
    const double C24712 = C50543 * C978;
    const double C3109 = C50543 * C1439;
    const double C9718 = C7888 * C1439;
    const double C18790 = C16960 * C1439;
    const double C25428 = C50543 * C1439;
    const double C31428 = C50538 * C1439;
    const double C5422 = C50543 * C1723;
    const double C12846 = C7888 * C1723;
    const double C35800 = C16960 * C1723;
    const double C39480 = C50538 * C1723;
    const double C44719 = C50543 * C1723;
    const double C3395 = C3390 + C3391;
    const double C19900 = C19883 + C19884;
    const double C25706 = C25701 + C25702;
    const double C4081 = C4076 + C4077;
    const double C20378 = C20365 + C20366;
    const double C26376 = C26371 + C26372;
    const double C3393 = C3386 + C3387;
    const double C19899 = C19881 + C19882;
    const double C25704 = C25697 + C25698;
    const double C3571 = C3560 + C3561;
    const double C21855 = C21849 + C21850;
    const double C25874 = C25863 + C25864;
    const double C4079 = C4072 + C4073;
    const double C20377 = C20363 + C20364;
    const double C26374 = C26367 + C26368;
    const double C22073 = C22057 * C16967;
    const double C39627 = C22057 * C121;
    const double C47418 = C22057 * C7895;
    const double C50406 = C50388 + C50404;
    const double C20551 = C20547 + C20548;
    const double C20671 = C20663 + C20664;
    const double C21007 = C21003 + C21004;
    const double C141 = (5 * (3 * C49879 + C49846 * C49899) +
                         C49846 * (4 * C49899 + C49846 * C49927)) /
                        C49721;
    const double C281 =
        (3 * C49879 + C49846 * C49899 +
         C49845 * (C49845 * C49927 + C50199 * ae) + C49845 * C50199 * ae) /
        C49721;
    const double C422 =
        (3 * C49879 + C49846 * C49899 + C49927 * C50025) / C49721;
    const double C538 = (C49845 * (4 * C49899 + C49846 * C49927) +
                         (4 * C50193 + C49846 * C50199) * ae) /
                        C49721;
    const double C642 = (C50015 * (4 * C49899 + C49846 * C49927)) / C49721;
    const double C788 = (C50015 * (C49845 * C49927 + C50199 * ae)) / C49721;
    const double C149 =
        (5 * (3 * C49898 + ae * C49899 + C49846 * C49926) +
         ae * (4 * C49899 + C49846 * C49927) +
         C49846 *
             (4 * C49926 + ae * C49927 +
              C49846 *
                  (3 * C49922 + ae * C49923 +
                   C49846 * (2 * C49918 + ae * C49919 +
                             C49846 * (C49914 + ae * C49846 * C49915 +
                                       C49846 * (ae * C49915 +
                                                 C49846 * std::pow(C49848, 8) *
                                                     bs[8] * C49856)))))) /
        C49725;
    const double C431 = (2 * C49878 + ae * C49879 + C49846 * C49898 +
                         C49926 * std::pow(zP - zQ, 2)) /
                        C49725;
    const double C432 =
        ((zP - zQ) * (3 * C49898 + ae * C49899 + C49846 * C49926)) / C49725;
    const double C433 =
        (3 * C49898 + ae * C49899 + C49846 * C49926 +
         (3 * C49922 + ae * C49923 +
          C49846 *
              (2 * C49918 + ae * C49919 +
               C49846 * (C49914 + ae * C49846 * C49915 +
                         C49846 * (ae * C49915 + C49846 * std::pow(C49848, 8) *
                                                     bs[8] * C49856)))) *
             std::pow(zP - zQ, 2)) /
        C49725;
    const double C644 =
        ((zP - zQ) *
         (4 * C49926 + ae * C49927 +
          C49846 * (3 * C49922 + ae * C49923 +
                    C49846 * (2 * C49918 + ae * C49919 +
                              C49846 * (C49914 + ae * C49846 * C49915 +
                                        C49846 * (ae * C49915 +
                                                  C49846 * std::pow(C49848, 8) *
                                                      bs[8] * C49856)))))) /
        C49725;
    const double C1726 =
        (2 * C50015 * C49926 +
         C50015 * (C49926 + (2 * C49918 + ae * C49919 +
                             C49846 * (C49914 + ae * C49846 * C49915 +
                                       C49846 * (ae * C49915 +
                                                 C49846 * std::pow(C49848, 8) *
                                                     bs[8] * C49856))) *
                                C50025)) /
        C49725;
    const double C5450 = C5425 + C5426;
    const double C12858 = C12851 + C12852;
    const double C35812 = C35805 + C35806;
    const double C39484 = C39481 + C39482;
    const double C44731 = C44722 + C44723;
    const double C6398 = C6391 + C6392;
    const double C22058 = C22041 + C22042;
    const double C29042 = C29037 + C29038;
    const double C7301 = C7294 + C7295;
    const double C39274 = C39269 + C39270;
    const double C46518 = C46511 + C46512;
    const double C49997 = C49977 + C49996;
    const double C50058 = C49970 + C50056;
    const double C3379 =
        (4 * (2 * C50050 + ae * C50051 + C49845 * C50080) +
         ae * (3 * C50051 + C49845 * C50081) +
         C49845 *
             (3 * C50080 + ae * C50081 +
              C49845 *
                  (2 * C50074 + ae * C50076 +
                   C49845 * (C49918 + ae * C49845 * C49988 +
                             C49845 * (ae * C49988 +
                                       C49845 * (ae * C49915 +
                                                 C49846 * std::pow(C49848, 8) *
                                                     bs[8] * C49856)))))) /
        C49725;
    const double C4065 =
        (3 * (C50065 + ae * C50015 * C50069 + C49845 * C50107) +
         ae * C50015 * C50081 +
         C49845 * (2 * C50107 + ae * C50015 * C50076 +
                   C49845 * (C50104 + ae * C50015 * C49845 * C49988 +
                             C49845 * (ae * C50015 * C49988 +
                                       C49845 * C50015 *
                                           (ae * C49915 +
                                            C49846 * std::pow(C49848, 8) *
                                                bs[8] * C49856))))) /
        C49725;
    const double C3377 = (4 * (2 * C50046 + C49845 * C50051) +
                          C49845 * (3 * C50051 + C49845 * C50081)) /
                         C49721;
    const double C3545 =
        (2 * C50046 + C49845 * C50051 + C50081 * C50025) / C49721;
    const double C4063 = (C50015 * (3 * C50051 + C49845 * C50081)) / C49721;
    const double C20545 =
        (5 * (3 * C50094 + ae * C50095 + C49845 * C50146) +
         ae * (4 * C50095 + C49845 * C50147) +
         C49845 *
             (4 * C50146 + ae * C50147 +
              C49845 *
                  (3 * C50142 + ae * C50143 +
                   C49845 * (2 * C50136 + ae * C50138 +
                             C49845 * (C49914 + ae * C49845 * C49981 +
                                       C49845 * (ae * C49981 +
                                                 C49845 * std::pow(C49848, 8) *
                                                     bs[8] * C49856)))))) /
        C49725;
    const double C21001 =
        (4 * (2 * C50113 + ae * C50015 * C50090 + C49845 * C50166) +
         ae * C50015 * C50147 +
         C49845 * (3 * C50166 + ae * C50015 * C50143 +
                   C49845 * (2 * C50164 + ae * C50015 * C50138 +
                             C49845 * (C50159 + ae * C50015 * C49845 * C49981 +
                                       C49845 * (ae * C50015 * C49981 +
                                                 C49845 * C50015 *
                                                     std::pow(C49848, 8) *
                                                     bs[8] * C49856))))) /
        C49725;
    const double C20544 = (5 * (3 * C50044 + C49845 * C50095) +
                           C49845 * (4 * C50095 + C49845 * C50147)) /
                          C49721;
    const double C20652 =
        (3 * C50044 + C49845 * C50095 + C50147 * C50025) / C49721;
    const double C21000 = (C50015 * (4 * C50095 + C49845 * C50147)) / C49721;
    const double C49747 = C49746 - C49736;
    const double C2396 = C2370 + C2371;
    const double C2394 = C2366 + C2367;
    const double C2392 = C2362 + C2363;
    const double C2390 = C2358 + C2359;
    const double C2388 = C2354 + C2355;
    const double C2386 = C2350 + C2351;
    const double C2385 = C2348 + C2349;
    const double C2383 = C2344 + C2345;
    const double C2380 = C2338 + C2339;
    const double C2378 = C2334 + C2335;
    const double C2376 = C2330 + C2331;
    const double C2374 = C2326 + C2327;
    const double C2724 = C2710 + C2711;
    const double C2722 = C2706 + C2707;
    const double C3128 = C3110 + C3111;
    const double C3126 = C3106 + C3107;
    const double C3124 = C3102 + C3103;
    const double C3122 = C3098 + C3099;
    const double C3121 = C3096 + C3097;
    const double C3119 = C3092 + C3093;
    const double C3117 = C3088 + C3089;
    const double C3115 = C3084 + C3085;
    const double C3394 = C3388 + C3389;
    const double C3392 = C3384 + C3385;
    const double C3572 = C3562 + C3563;
    const double C3570 = C3558 + C3559;
    const double C3568 = C3554 + C3555;
    const double C3566 = C3550 + C3551;
    const double C4080 = C4074 + C4075;
    const double C4078 = C4070 + C4071;
    const double C5449 = C5423 + C5424;
    const double C5447 = C5419 + C5420;
    const double C5445 = C5415 + C5416;
    const double C5443 = C5411 + C5412;
    const double C5441 = C5407 + C5408;
    const double C5439 = C5403 + C5404;
    const double C5438 = C5401 + C5402;
    const double C5436 = C5397 + C5398;
    const double C5433 = C5391 + C5392;
    const double C5431 = C5387 + C5388;
    const double C5429 = C5383 + C5384;
    const double C5427 = C5379 + C5380;
    const double C5775 = C5765 + C5766;
    const double C5771 = C5757 + C5758;
    const double C5769 = C5753 + C5754;
    const double C5985 = C5979 + C5980;
    const double C5983 = C5975 + C5976;
    const double C6397 = C6389 + C6390;
    const double C6395 = C6385 + C6386;
    const double C7300 = C7292 + C7293;
    const double C7298 = C7288 + C7289;
    const double C23024 = C22605 + C23019;
    const double C48331 = C47926 + C48330;
    const double C23923 = C22064 + C23916;
    const double C49222 = C47405 + C49217;
    const double C22077 = C22075 + C22013;
    const double C47422 = C47420 + C47402;
    const double C49823 = C49822 - C49807;
    const double C22404 = C22400 * C16961;
    const double C39478 = C22400 * C50688;
    const double C47723 = C22400 * C50842;
    const double C20552 = C20549 + C20550;
    const double C20672 = C20665 + C20666;
    const double C21008 = C21005 + C21006;
    const double C23023 = C23017 + C23018;
    const double C2393 = C2364 + C2365;
    const double C2728 = C2718 + C2719;
    const double C8097 = C8055 + C8056;
    const double C17169 = C17127 + C17128;
    const double C20112 = C20103 + C20104;
    const double C24736 = C24707 + C24708;
    const double C3125 = C3104 + C3105;
    const double C8789 = C8765 + C8766;
    const double C14067 = C14061 + C14062;
    const double C17861 = C17837 + C17838;
    const double C22236 = C22229 + C22230;
    const double C25444 = C25423 + C25424;
    const double C2723 = C2708 + C2709;
    const double C8105 = C8071 + C8072;
    const double C17177 = C17143 + C17144;
    const double C25054 = C25039 + C25040;
    const double C2391 = C2360 + C2361;
    const double C2726 = C2714 + C2715;
    const double C8100 = C8061 + C8062;
    const double C17172 = C17133 + C17134;
    const double C20111 = C20101 + C20102;
    const double C24734 = C24703 + C24704;
    const double C5770 = C5755 + C5756;
    const double C11061 = C11027 + C11028;
    const double C28240 = C28233 + C28234;
    const double C34015 = C33981 + C33982;
    const double C5444 = C5413 + C5414;
    const double C5773 = C5761 + C5762;
    const double C11056 = C11017 + C11018;
    const double C22399 = C22391 + C22392;
    const double C27824 = C27797 + C27798;
    const double C34010 = C33971 + C33972;
    const double C3123 = C3100 + C3101;
    const double C8792 = C8771 + C8772;
    const double C14065 = C14057 + C14058;
    const double C17864 = C17843 + C17844;
    const double C22235 = C22227 + C22228;
    const double C25442 = C25419 + C25420;
    const double C22078 = C22033 + C22076;
    const double C47423 = C47414 + C47421;
    const double C49973 = C49972 + C49967;
    const double C5978 = C50543 * C1092;
    const double C9214 = C7888 * C1092;
    const double C18286 = C16960 * C1092;
    const double C22232 = C50538 * C1092;
    const double C27806 = C50543 * C1092;
    const double C2397 = C2372 + C2373;
    const double C9062 = C9055 + C9056;
    const double C18134 = C18127 + C18128;
    const double C20114 = C20107 + C20108;
    const double C24740 = C24715 + C24716;
    const double C5986 = C5981 + C5982;
    const double C9226 = C9219 + C9220;
    const double C18298 = C18291 + C18292;
    const double C22238 = C22233 + C22234;
    const double C27830 = C27809 + C27810;
    const double C3129 = C3112 + C3113;
    const double C9730 = C9723 + C9724;
    const double C18802 = C18795 + C18796;
    const double C25448 = C25431 + C25432;
    const double C31432 = C31429 + C31430;
    const double C2395 = C2368 + C2369;
    const double C9059 = C9049 + C9050;
    const double C18131 = C18121 + C18122;
    const double C20113 = C20105 + C20106;
    const double C24738 = C24711 + C24712;
    const double C3127 = C3108 + C3109;
    const double C9727 = C9717 + C9718;
    const double C18799 = C18789 + C18790;
    const double C25446 = C25427 + C25428;
    const double C31431 = C31427 + C31428;
    const double C5448 = C5421 + C5422;
    const double C12855 = C12845 + C12846;
    const double C35809 = C35799 + C35800;
    const double C39483 = C39479 + C39480;
    const double C44729 = C44718 + C44719;
    const double C31790 = C20378 * C24516;
    const double C37216 = C20378 * C2161;
    const double C22613 = C21855 * C16967;
    const double C31279 = C21855 * C24521;
    const double C36711 = C21855 * C2166;
    const double C47934 = C21855 * C7895;
    const double C31789 = C20377 * C24521;
    const double C37215 = C20377 * C2166;
    const double C50407 = C50406 + C50391;
    const double C23520 = C20671 * C16967;
    const double C32185 = C20671 * C24521;
    const double C37611 = C20671 * C2166;
    const double C48825 = C20671 * C7895;
    const double C32677 = C21007 * C24521;
    const double C38103 = C21007 * C2166;
    const double C5768 = C50543 * C431;
    const double C11046 = C7888 * C431;
    const double C34000 = C16960 * C431;
    const double C45035 = C50543 * C431;
    const double C11374 = C7888 * C432;
    const double C34328 = C16960 * C432;
    const double C39486 = C39484 * C50688;
    const double C22074 = C22058 * C50738;
    const double C39628 = C22058 * C50688;
    const double C47419 = C22058 * C50738;
    const double C39278 = C39274 * C50688;
    const double C49998 = C49997 + C49989;
    const double C2324 =
        (3 * (C49898 + ae * C50053 + C49845 * C50057) +
         ae * (2 * C50053 + C49845 * C50058) +
         C49845 *
             (2 * C50057 + ae * C50058 +
              C49845 *
                  (C49922 + ae * C49845 * C49995 +
                   C49845 * (ae * C49995 +
                             C49845 * (C49914 + ae * C49846 * C49915 +
                                       C49846 * (ae * C49915 +
                                                 C49846 * std::pow(C49848, 8) *
                                                     bs[8] * C49856)))))) /
        C49725;
    const double C3080 =
        (2 * (ae * C50015 * C49970 + C49845 * C50067) + ae * C50015 * C50058 +
         C49845 * (C50067 + ae * C50015 * C49845 * C49995 +
                   C49845 * (ae * C50015 * C49995 +
                             C49845 * C50015 *
                                 (C49914 + ae * C49846 * C49915 +
                                  C49846 * (ae * C49915 +
                                            C49846 * std::pow(C49848, 8) *
                                                bs[8] * C49856))))) /
        C49725;
    const double C2321 = (3 * (C49954 + C49970 * C50041) +
                          C49845 * (2 * C50053 + C49845 * C50058)) /
                         C49721;
    const double C2555 = (C49954 + C49970 * C50041 + C50058 * C50025) / C49721;
    const double C3077 = (C50015 * (2 * C50053 + C49845 * C50058)) / C49721;
    const double C24713 = C49747 * C975;
    const double C24709 = C49747 * C971;
    const double C24705 = C49747 * C276;
    const double C24701 = C49747 * C258;
    const double C24697 = C49747 * C265;
    const double C24693 = C49747 * C255;
    const double C24691 = C49747 * C972;
    const double C24687 = C49747 * C976;
    const double C24681 = C49747 * C275;
    const double C24677 = C49747 * C257;
    const double C24673 = C49747 * C266;
    const double C24669 = C49747 * C256;
    const double C25049 = C49747 * C277;
    const double C25045 = C49747 * C259;
    const double C25041 = C49747 * C264;
    const double C25037 = C49747 * C254;
    const double C25429 = C49747 * C1436;
    const double C25425 = C49747 * C1432;
    const double C25421 = C49747 * C785;
    const double C25417 = C49747 * C776;
    const double C25415 = C49747 * C775;
    const double C25411 = C49747 * C784;
    const double C25407 = C49747 * C1433;
    const double C25403 = C49747 * C1437;
    const double C25699 = C49747 * C2318;
    const double C25695 = C49747 * C2313;
    const double C25865 = C49747 * C2552;
    const double C25861 = C49747 * C2547;
    const double C25857 = C49747 * C1090;
    const double C25853 = C49747 * C1086;
    const double C26369 = C49747 * C3074;
    const double C26365 = C49747 * C3069;
    const double C27807 = C49747 * C1089;
    const double C27803 = C49747 * C1085;
    const double C27799 = C49747 * C417;
    const double C27795 = C49747 * C399;
    const double C27791 = C49747 * C406;
    const double C27787 = C49747 * C396;
    const double C27785 = C49747 * C398;
    const double C27781 = C49747 * C416;
    const double C27775 = C49747 * C407;
    const double C27771 = C49747 * C397;
    const double C28029 = C49747 * C786;
    const double C28025 = C49747 * C777;
    const double C28235 = C49747 * C405;
    const double C28231 = C49747 * C395;
    const double C29035 = C49747 * C4480;
    const double C29031 = C49747 * C4474;
    const double C30213 = C49747 * C1721;
    const double C30209 = C49747 * C1717;
    const double C44720 = C49747 * C1720;
    const double C44716 = C49747 * C1716;
    const double C45032 = C49747 * C418;
    const double C45028 = C49747 * C400;
    const double C46509 = C49747 * C5371;
    const double C46505 = C49747 * C5366;
    const double C117 =
        ((((0 - (C49719 * C49720) / C49721) * ae) / C49721 - (0 * be) / C49730 +
          C49722 / C49721) /
             C49726 -
         ((C49719 * C49743 + 0) * be) / C49721) /
            C49726 +
        ((C49719 * (C49743 / C49726 -
                    ((C49719 * C49747 + C50814) * be) / C49721 + C49740) +
          C50870) *
         ae) /
            C49721 +
        C49747 / C49726 - ((C49719 * C49740 + C50543) * be) / C49721;
    const double C118 =
        (C49743 / C49726 - ((C49719 * C49747 + C50814) * be) / C49721 +
         C49740) /
            C49726 +
        ((C49719 *
              (C49747 / C49726 - ((C49719 * C49740 + C50543) * be) / C49721) +
          C50871) *
         ae) /
            C49721 +
        2 * (C49740 / C49726 - (0 * be) / C49721);
    const double C119 =
        (C49747 / C49726 - ((C49719 * C49740 + C50543) * be) / C49721) /
            C49726 +
        ((C49719 * (C49740 / C49726 - (0 * be) / C49721) + C7888) * ae) /
            C49721;
    const double C7891 =
        C49743 / C49726 - ((C49719 * C49747 + C50814) * be) / C49721 + C49740;
    const double C7892 =
        C49747 / C49726 - ((C49719 * C49740 + C50543) * be) / C49721;
    const double C16963 =
        C49743 / C49726 + ((C49719 * C49747 + C50814) * ae) / C49721 + C49740;
    const double C16964 =
        C49747 / C49726 + ((C49719 * C49740 + C50543) * ae) / C49721;
    const double C3383 = C2384 + C2385;
    const double C3382 = C2382 + C2383;
    const double C2399 = C2380 + C2381;
    const double C2398 = C2378 + C2379;
    const double C14524 = C3120 + C3121;
    const double C14521 = C3121 + C3120;
    const double C14523 = C3118 + C3119;
    const double C14522 = C3119 + C3118;
    const double C4069 = C3116 + C3117;
    const double C15695 = C3117 + C3116;
    const double C4068 = C3114 + C3115;
    const double C15696 = C3115 + C3114;
    const double C6393 = C3569 + C3568;
    const double C15048 = C3568 + C3569;
    const double C6394 = C3567 + C3566;
    const double C15047 = C3566 + C3567;
    const double C5453 = C5446 + C5445;
    const double C7287 = C5437 + C5438;
    const double C7286 = C5435 + C5436;
    const double C5452 = C5433 + C5434;
    const double C5451 = C5431 + C5432;
    const double C23027 = C22606 + C23024;
    const double C48332 = C47927 + C48331;
    const double C23926 = C22063 + C23923;
    const double C49223 = C47404 + C49222;
    const double C22079 = C22077 + C22014;
    const double C47424 = C47422 + C47403;
    const double C19750 =
        ((((0 - (C49768 * C49804) / C49721) * ae) / C49721 - (0 * be) / C49730 +
          C49769 / C49721) /
             C49726 -
         ((C49768 * C49821 + 0) * be) / C49721) /
            C49726 +
        ((C49768 * (C49821 / C49726 -
                    ((C49768 * C49823 + C50842) * be) / C49721 + C49816) +
          C50878) *
         ae) /
            C49721 +
        C49823 / C49726 - ((C49768 * C49816 + C50738) * be) / C49721;
    const double C19751 =
        (C49821 / C49726 - ((C49768 * C49823 + C50842) * be) / C49721 +
         C49816) /
            C49726 +
        ((C49768 *
              (C49823 / C49726 - ((C49768 * C49816 + C50738) * be) / C49721) +
          C50879) *
         ae) /
            C49721 +
        2 * (C49816 / C49726 - (0 * be) / C49721);
    const double C19752 =
        (C49823 / C49726 - ((C49768 * C49816 + C50738) * be) / C49721) /
            C49726 +
        ((C49768 * (C49816 / C49726 - (0 * be) / C49721) + C24516) * ae) /
            C49721;
    const double C24519 =
        C49821 / C49726 - ((C49768 * C49823 + C50842) * be) / C49721 + C49816;
    const double C24520 =
        C49823 / C49726 - ((C49768 * C49816 + C50738) * be) / C49721;
    const double C23521 = C20672 * C50738;
    const double C32186 = C20672 * C24516;
    const double C37612 = C20672 * C2161;
    const double C48826 = C20672 * C50738;
    const double C32678 = C21008 * C24516;
    const double C38104 = C21008 * C2161;
    const double C23026 = C23023 * C50738;
    const double C33074 = C23023 * C24516;
    const double C38500 = C23023 * C2161;
    const double C40226 = C23023 * C50688;
    const double C48329 = C23023 * C50738;
    const double C2400 = C2393 + C2392;
    const double C14527 = C3125 + C3124;
    const double C14526 = C3124 + C3125;
    const double C22390 = C22236 * C50738;
    const double C31582 = C22236 * C50879;
    const double C37008 = C22236 * C2160;
    const double C47721 = C22236 * C50738;
    const double C2401 = C2391 + C2390;
    const double C5454 = C5444 + C5443;
    const double C22403 = C22399 * C16966;
    const double C39477 = C22399 * C121;
    const double C47722 = C22399 * C7894;
    const double C14528 = C3123 + C3122;
    const double C14525 = C3122 + C3123;
    const double C22389 = C22235 * C16967;
    const double C37007 = C22235 * C2165;
    const double C47720 = C22235 * C7895;
    const double C22080 = C22034 + C22078;
    const double C47425 = C47415 + C47423;
    const double C290 =
        (2 * C49878 + ae * C49879 + C49846 * C49898 + ae * C49845 * C49973 +
         C49845 * (ae * C49973 + C49845 * C49926)) /
        C49725;
    const double C291 =
        (ae * (3 * C49954 + C49846 * C49973 +
               (2 * C49947 + C49846 * C49965) * ae) +
         C49845 * (3 * C49898 + ae * C49899 + C49846 * C49926)) /
        C49725;
    const double C793 =
        (ae * C50015 * C49973 + C49845 * C50015 * C49926) / C49725;
    const double C139 = (4 * (2 * C49943 + C49846 * C49954 + C50189 * ae) +
                         C49846 * (3 * C49954 + C49846 * C49973 + C50193 * ae) +
                         (3 * C50189 + C49846 * C50193) * ae) /
                        C49721;
    const double C274 =
        (2 * C49943 + C49846 * C49954 + C50189 * ae + C49973 * C50041) / C49721;
    const double C279 =
        (C49845 * (3 * C49954 + C49846 * C49973 + C50193 * ae)) / C49721;
    const double C415 =
        (2 * C49943 + C49846 * C49954 + C50189 * ae + C49973 * C50025) / C49721;
    const double C420 =
        (C50015 * (3 * C49954 + C49846 * C49973 + C50193 * ae)) / C49721;
    const double C783 = (C50015 * C49845 * C49973) / C49721;
    const double C5984 = C5977 + C5978;
    const double C9223 = C9213 + C9214;
    const double C18295 = C18285 + C18286;
    const double C22237 = C22231 + C22232;
    const double C27828 = C27805 + C27806;
    const double C22396 = C22238 * C50738;
    const double C47725 = C22238 * C50738;
    const double C31584 = C31432 * C24516;
    const double C37010 = C31432 * C2161;
    const double C31583 = C31431 * C24521;
    const double C37009 = C31431 * C2166;
    const double C39485 = C39483 * C121;
    const double C20543 =
        (5 * (3 * C50344 + C49845 * C50407 + C50343 * ae) +
         C49845 *
             (4 * C50407 +
              C49845 *
                  (3 * C50402 +
                   C49845 *
                       (2 * C50394 +
                        C49845 * (C49891 + C49845 * (C49845 * C49915 + C49982) +
                                  C49845 * C49979 * ae) +
                        C50396 * ae) +
                   C50401 * ae) +
              C50405 * ae) +
         (4 * C50343 + C49845 * C50405) * ae) /
        C49721;
    const double C20651 =
        (3 * C50344 + C49845 * C50407 + C50343 * ae +
         (3 * C50402 +
          C49845 * (2 * C50394 +
                    C49845 * (C49891 + C49845 * (C49845 * C49915 + C49982) +
                              C49845 * C49979 * ae) +
                    C50396 * ae) +
          C50401 * ae) *
             C50025) /
        C49721;
    const double C20999 =
        (C50015 *
         (4 * C50407 +
          C49845 * (3 * C50402 +
                    C49845 * (2 * C50394 +
                              C49845 * (C49891 +
                                        C49845 * (C49845 * C49915 + C49982) +
                                        C49845 * C49979 * ae) +
                              C50396 * ae) +
                    C50401 * ae) +
          C50405 * ae)) /
        C49721;
    const double C21271 =
        (2 * C50015 * C50407 +
         C50015 *
             (C50407 + (2 * C50394 +
                        C49845 * (C49891 + C49845 * (C49845 * C49915 + C49982) +
                                  C49845 * C49979 * ae) +
                        C50396 * ae) *
                           C50025)) /
        C49721;
    const double C5776 = C5767 + C5768;
    const double C11070 = C11045 + C11046;
    const double C34024 = C33999 + C34000;
    const double C45039 = C45034 + C45035;
    const double C11380 = C11373 + C11374;
    const double C34334 = C34327 + C34328;
    const double C49999 = C49846 * C49998;
    const double C981 =
        (2 * (ae * C49973 + C49845 * C49926) +
         ae * (C49973 + C49998 * std::pow(C49845, 2)) +
         C49845 *
             (C49926 + ae * C49845 * C49998 +
              C49845 *
                  (ae * C49998 +
                   C49845 * (2 * C49918 + ae * C49919 +
                             C49846 * (C49914 + ae * C49846 * C49915 +
                                       C49846 * (ae * C49915 +
                                                 C49846 * std::pow(C49848, 8) *
                                                     bs[8] * C49856)))))) /
        C49725;
    const double C1095 =
        (ae * (C49973 + C49998 * C50025) +
         C49845 * (C49926 + (2 * C49918 + ae * C49919 +
                             C49846 * (C49914 + ae * C49846 * C49915 +
                                       C49846 * (ae * C49915 +
                                                 C49846 * std::pow(C49848, 8) *
                                                     bs[8] * C49856))) *
                                C50025)) /
        C49725;
    const double C1442 =
        (C50015 * C49926 + ae * C50015 * C49845 * C49998 +
         C49845 * (ae * C50015 * C49998 +
                   C49845 * C50015 *
                       (2 * C49918 + ae * C49919 +
                        C49846 * (C49914 + ae * C49846 * C49915 +
                                  C49846 * (ae * C49915 +
                                            C49846 * std::pow(C49848, 8) *
                                                bs[8] * C49856))))) /
        C49725;
    const double C977 =
        (2 * C49845 * C49973 + C49845 * (C49973 + C49998 * C50041)) / C49721;
    const double C1091 = (C49845 * C49973 + C49845 * C49998 * C50025) / C49721;
    const double C1438 = (C50015 * (C49973 + C49998 * C50041)) / C49721;
    const double C1722 =
        (2 * C50015 * C49973 + C50015 * (C49973 + C49998 * C50025)) / C49721;
    const double C24739 = C24713 + C24714;
    const double C24737 = C24709 + C24710;
    const double C24735 = C24705 + C24706;
    const double C24733 = C24701 + C24702;
    const double C24731 = C24697 + C24698;
    const double C24729 = C24693 + C24694;
    const double C24728 = C24691 + C24692;
    const double C24726 = C24687 + C24688;
    const double C24723 = C24681 + C24682;
    const double C24721 = C24677 + C24678;
    const double C24719 = C24673 + C24674;
    const double C24717 = C24669 + C24670;
    const double C25059 = C25049 + C25050;
    const double C25057 = C25045 + C25046;
    const double C25055 = C25041 + C25042;
    const double C25053 = C25037 + C25038;
    const double C25447 = C25429 + C25430;
    const double C25445 = C25425 + C25426;
    const double C25443 = C25421 + C25422;
    const double C25441 = C25417 + C25418;
    const double C25440 = C25415 + C25416;
    const double C25438 = C25411 + C25412;
    const double C25436 = C25407 + C25408;
    const double C25434 = C25403 + C25404;
    const double C25705 = C25699 + C25700;
    const double C25703 = C25695 + C25696;
    const double C25875 = C25865 + C25866;
    const double C25873 = C25861 + C25862;
    const double C25871 = C25857 + C25858;
    const double C25869 = C25853 + C25854;
    const double C26375 = C26369 + C26370;
    const double C26373 = C26365 + C26366;
    const double C27829 = C27807 + C27808;
    const double C27827 = C27803 + C27804;
    const double C27825 = C27799 + C27800;
    const double C27823 = C27795 + C27796;
    const double C27821 = C27791 + C27792;
    const double C27819 = C27787 + C27788;
    const double C27818 = C27785 + C27786;
    const double C27816 = C27781 + C27782;
    const double C27813 = C27775 + C27776;
    const double C27811 = C27771 + C27772;
    const double C28035 = C28029 + C28030;
    const double C28033 = C28025 + C28026;
    const double C28241 = C28235 + C28236;
    const double C28239 = C28231 + C28232;
    const double C29041 = C29035 + C29036;
    const double C29039 = C29031 + C29032;
    const double C30219 = C30213 + C30214;
    const double C30217 = C30209 + C30210;
    const double C44730 = C44720 + C44721;
    const double C44728 = C44716 + C44717;
    const double C45038 = C45032 + C45033;
    const double C45036 = C45028 + C45029;
    const double C46517 = C46509 + C46510;
    const double C46515 = C46505 + C46506;
    const double C8085 = C7891 * C276;
    const double C8079 = C7891 * C258;
    const double C8073 = C7891 * C265;
    const double C8067 = C7891 * C255;
    const double C8065 = C7891 * C257;
    const double C8059 = C7891 * C275;
    const double C8049 = C7891 * C266;
    const double C8043 = C7891 * C256;
    const double C8413 = C7891 * C264;
    const double C8407 = C7891 * C254;
    const double C8783 = C7891 * C785;
    const double C8777 = C7891 * C776;
    const double C8775 = C7891 * C775;
    const double C8769 = C7891 * C784;
    const double C9051 = C7891 * C976;
    const double C9045 = C7891 * C972;
    const double C9215 = C7891 * C1090;
    const double C9209 = C7891 * C1086;
    const double C9719 = C7891 * C1437;
    const double C9713 = C7891 * C1433;
    const double C11041 = C7891 * C417;
    const double C11035 = C7891 * C399;
    const double C11029 = C7891 * C406;
    const double C11023 = C7891 * C396;
    const double C11021 = C7891 * C398;
    const double C11015 = C7891 * C416;
    const double C11005 = C7891 * C407;
    const double C10999 = C7891 * C397;
    const double C11369 = C7891 * C405;
    const double C11363 = C7891 * C395;
    const double C12847 = C7891 * C1721;
    const double C12841 = C7891 * C1717;
    const double C8087 = C7892 * C277;
    const double C8081 = C7892 * C259;
    const double C8075 = C7892 * C264;
    const double C8069 = C7892 * C254;
    const double C8063 = C7892 * C258;
    const double C8057 = C7892 * C276;
    const double C8051 = C7892 * C265;
    const double C8045 = C7892 * C255;
    const double C8415 = C7892 * C263;
    const double C8409 = C7892 * C253;
    const double C8785 = C7892 * C786;
    const double C8779 = C7892 * C777;
    const double C8773 = C7892 * C776;
    const double C8767 = C7892 * C785;
    const double C9053 = C7892 * C975;
    const double C9047 = C7892 * C971;
    const double C9217 = C7892 * C1089;
    const double C9211 = C7892 * C1085;
    const double C9721 = C7892 * C1436;
    const double C9715 = C7892 * C1432;
    const double C11043 = C7892 * C418;
    const double C11037 = C7892 * C400;
    const double C11031 = C7892 * C405;
    const double C11025 = C7892 * C395;
    const double C11019 = C7892 * C399;
    const double C11013 = C7892 * C417;
    const double C11007 = C7892 * C406;
    const double C11001 = C7892 * C396;
    const double C11371 = C7892 * C404;
    const double C11365 = C7892 * C394;
    const double C12849 = C7892 * C1720;
    const double C12843 = C7892 * C1716;
    const double C17157 = C16963 * C276;
    const double C17151 = C16963 * C258;
    const double C17145 = C16963 * C265;
    const double C17139 = C16963 * C255;
    const double C17137 = C16963 * C257;
    const double C17131 = C16963 * C275;
    const double C17121 = C16963 * C266;
    const double C17115 = C16963 * C256;
    const double C17485 = C16963 * C264;
    const double C17479 = C16963 * C254;
    const double C17855 = C16963 * C785;
    const double C17849 = C16963 * C776;
    const double C17847 = C16963 * C775;
    const double C17841 = C16963 * C784;
    const double C18123 = C16963 * C976;
    const double C18117 = C16963 * C972;
    const double C18287 = C16963 * C1090;
    const double C18281 = C16963 * C1086;
    const double C18791 = C16963 * C1437;
    const double C18785 = C16963 * C1433;
    const double C33995 = C16963 * C417;
    const double C33989 = C16963 * C399;
    const double C33983 = C16963 * C406;
    const double C33977 = C16963 * C396;
    const double C33975 = C16963 * C398;
    const double C33969 = C16963 * C416;
    const double C33959 = C16963 * C407;
    const double C33953 = C16963 * C397;
    const double C34323 = C16963 * C405;
    const double C34317 = C16963 * C395;
    const double C35801 = C16963 * C1721;
    const double C35795 = C16963 * C1717;
    const double C17159 = C16964 * C277;
    const double C17153 = C16964 * C259;
    const double C17147 = C16964 * C264;
    const double C17141 = C16964 * C254;
    const double C17135 = C16964 * C258;
    const double C17129 = C16964 * C276;
    const double C17123 = C16964 * C265;
    const double C17117 = C16964 * C255;
    const double C17487 = C16964 * C263;
    const double C17481 = C16964 * C253;
    const double C17857 = C16964 * C786;
    const double C17851 = C16964 * C777;
    const double C17845 = C16964 * C776;
    const double C17839 = C16964 * C785;
    const double C18125 = C16964 * C975;
    const double C18119 = C16964 * C971;
    const double C18289 = C16964 * C1089;
    const double C18283 = C16964 * C1085;
    const double C18793 = C16964 * C1436;
    const double C18787 = C16964 * C1432;
    const double C33997 = C16964 * C418;
    const double C33991 = C16964 * C400;
    const double C33985 = C16964 * C405;
    const double C33979 = C16964 * C395;
    const double C33973 = C16964 * C399;
    const double C33967 = C16964 * C417;
    const double C33961 = C16964 * C406;
    const double C33955 = C16964 * C396;
    const double C34325 = C16964 * C404;
    const double C34319 = C16964 * C394;
    const double C35803 = C16964 * C1720;
    const double C35797 = C16964 * C1716;
    const double C6399 = C6393 * C50688;
    const double C6400 = C6394 * C121;
    const double C5457 = C5453 * C50688;
    const double C7297 = C7287 * C121;
    const double C7296 = C7286 * C50688;
    const double C5456 = C5452 * C50688;
    const double C5455 = C5451 * C121;
    const double C31275 = C22053 * C24519;
    const double C31269 = C22051 * C24519;
    const double C31268 = C22045 * C24519;
    const double C31257 = C22043 * C24519;
    const double C31579 = C22397 * C24519;
    const double C31785 = C20373 * C24519;
    const double C31779 = C20372 * C24519;
    const double C32181 = C20667 * C24519;
    const double C32673 = C20370 * C24519;
    const double C33069 = C22050 * C24519;
    const double C31277 = C21853 * C24520;
    const double C31271 = C20373 * C24520;
    const double C31266 = C20667 * C24520;
    const double C31259 = C20372 * C24520;
    const double C31581 = C22235 * C24520;
    const double C31787 = C20375 * C24520;
    const double C31781 = C20370 * C24520;
    const double C32183 = C20669 * C24520;
    const double C32675 = C20368 * C24520;
    const double C33071 = C22048 * C24520;
    const double C5458 = C5454 * C121;
    const double C2721 = C50543 * C290;
    const double C8090 = C7888 * C290;
    const double C17162 = C16960 * C290;
    const double C25052 = C50543 * C290;
    const double C8418 = C7888 * C291;
    const double C17490 = C16960 * C291;
    const double C8788 = C7888 * C793;
    const double C14064 = C50543 * C793;
    const double C17860 = C16960 * C793;
    const double C28032 = C50543 * C793;
    const double C2717 = C50543 * C274;
    const double C8084 = C7888 * C274;
    const double C17156 = C16960 * C274;
    const double C25048 = C50543 * C274;
    const double C8412 = C7888 * C279;
    const double C17484 = C16960 * C279;
    const double C5764 = C50543 * C415;
    const double C11040 = C7888 * C415;
    const double C33994 = C16960 * C415;
    const double C45031 = C50543 * C415;
    const double C11368 = C7888 * C420;
    const double C34322 = C16960 * C420;
    const double C8782 = C7888 * C783;
    const double C14060 = C50543 * C783;
    const double C17854 = C16960 * C783;
    const double C28028 = C50543 * C783;
    const double C22395 = C22237 * C16967;
    const double C47724 = C22237 * C7895;
    const double C50000 = C49976 + C49999;
    const double C24743 = C24736 + C24735;
    const double C24744 = C24734 + C24733;
    const double C25694 = C24727 + C24728;
    const double C25693 = C24725 + C24726;
    const double C24742 = C24723 + C24724;
    const double C24741 = C24721 + C24722;
    const double C28507 = C25444 + C25443;
    const double C28506 = C25443 + C25444;
    const double C28508 = C25442 + C25441;
    const double C28505 = C25441 + C25442;
    const double C28504 = C25439 + C25440;
    const double C28501 = C25440 + C25439;
    const double C28503 = C25437 + C25438;
    const double C28502 = C25438 + C25437;
    const double C26364 = C25435 + C25436;
    const double C29689 = C25436 + C25435;
    const double C26363 = C25433 + C25434;
    const double C29690 = C25434 + C25433;
    const double C29030 = C25871 + C25872;
    const double C29027 = C25872 + C25871;
    const double C29029 = C25869 + C25870;
    const double C29028 = C25870 + C25869;
    const double C44724 = C27826 + C27825;
    const double C44725 = C27824 + C27823;
    const double C44714 = C27818 + C27817;
    const double C44715 = C27816 + C27815;
    const double C46503 = C30220 + C30219;
    const double C46504 = C30218 + C30217;
    const double C8112 = C8085 + C8086;
    const double C8109 = C8079 + C8080;
    const double C8106 = C8073 + C8074;
    const double C8103 = C8067 + C8068;
    const double C8102 = C8065 + C8066;
    const double C8099 = C8059 + C8060;
    const double C8094 = C8049 + C8050;
    const double C8091 = C8043 + C8044;
    const double C8422 = C8413 + C8414;
    const double C8419 = C8407 + C8408;
    const double C8798 = C8783 + C8784;
    const double C8795 = C8777 + C8778;
    const double C8794 = C8775 + C8776;
    const double C8791 = C8769 + C8770;
    const double C9060 = C9051 + C9052;
    const double C9057 = C9045 + C9046;
    const double C9224 = C9215 + C9216;
    const double C9221 = C9209 + C9210;
    const double C9728 = C9719 + C9720;
    const double C9725 = C9713 + C9714;
    const double C11068 = C11041 + C11042;
    const double C11065 = C11035 + C11036;
    const double C11062 = C11029 + C11030;
    const double C11059 = C11023 + C11024;
    const double C11058 = C11021 + C11022;
    const double C11055 = C11015 + C11016;
    const double C11050 = C11005 + C11006;
    const double C11047 = C10999 + C11000;
    const double C11378 = C11369 + C11370;
    const double C11375 = C11363 + C11364;
    const double C12856 = C12847 + C12848;
    const double C12853 = C12841 + C12842;
    const double C8113 = C8087 + C8088;
    const double C8110 = C8081 + C8082;
    const double C8107 = C8075 + C8076;
    const double C8104 = C8069 + C8070;
    const double C8101 = C8063 + C8064;
    const double C8098 = C8057 + C8058;
    const double C8095 = C8051 + C8052;
    const double C8092 = C8045 + C8046;
    const double C8423 = C8415 + C8416;
    const double C8420 = C8409 + C8410;
    const double C8799 = C8785 + C8786;
    const double C8796 = C8779 + C8780;
    const double C8793 = C8773 + C8774;
    const double C8790 = C8767 + C8768;
    const double C9061 = C9053 + C9054;
    const double C9058 = C9047 + C9048;
    const double C9225 = C9217 + C9218;
    const double C9222 = C9211 + C9212;
    const double C9729 = C9721 + C9722;
    const double C9726 = C9715 + C9716;
    const double C11069 = C11043 + C11044;
    const double C11066 = C11037 + C11038;
    const double C11063 = C11031 + C11032;
    const double C11060 = C11025 + C11026;
    const double C11057 = C11019 + C11020;
    const double C11054 = C11013 + C11014;
    const double C11051 = C11007 + C11008;
    const double C11048 = C11001 + C11002;
    const double C11379 = C11371 + C11372;
    const double C11376 = C11365 + C11366;
    const double C12857 = C12849 + C12850;
    const double C12854 = C12843 + C12844;
    const double C17184 = C17157 + C17158;
    const double C17181 = C17151 + C17152;
    const double C17178 = C17145 + C17146;
    const double C17175 = C17139 + C17140;
    const double C17174 = C17137 + C17138;
    const double C17171 = C17131 + C17132;
    const double C17166 = C17121 + C17122;
    const double C17163 = C17115 + C17116;
    const double C17494 = C17485 + C17486;
    const double C17491 = C17479 + C17480;
    const double C17870 = C17855 + C17856;
    const double C17867 = C17849 + C17850;
    const double C17866 = C17847 + C17848;
    const double C17863 = C17841 + C17842;
    const double C18132 = C18123 + C18124;
    const double C18129 = C18117 + C18118;
    const double C18296 = C18287 + C18288;
    const double C18293 = C18281 + C18282;
    const double C18800 = C18791 + C18792;
    const double C18797 = C18785 + C18786;
    const double C34022 = C33995 + C33996;
    const double C34019 = C33989 + C33990;
    const double C34016 = C33983 + C33984;
    const double C34013 = C33977 + C33978;
    const double C34012 = C33975 + C33976;
    const double C34009 = C33969 + C33970;
    const double C34004 = C33959 + C33960;
    const double C34001 = C33953 + C33954;
    const double C34332 = C34323 + C34324;
    const double C34329 = C34317 + C34318;
    const double C35810 = C35801 + C35802;
    const double C35807 = C35795 + C35796;
    const double C17185 = C17159 + C17160;
    const double C17182 = C17153 + C17154;
    const double C17179 = C17147 + C17148;
    const double C17176 = C17141 + C17142;
    const double C17173 = C17135 + C17136;
    const double C17170 = C17129 + C17130;
    const double C17167 = C17123 + C17124;
    const double C17164 = C17117 + C17118;
    const double C17495 = C17487 + C17488;
    const double C17492 = C17481 + C17482;
    const double C17871 = C17857 + C17858;
    const double C17868 = C17851 + C17852;
    const double C17865 = C17845 + C17846;
    const double C17862 = C17839 + C17840;
    const double C18133 = C18125 + C18126;
    const double C18130 = C18119 + C18120;
    const double C18297 = C18289 + C18290;
    const double C18294 = C18283 + C18284;
    const double C18801 = C18793 + C18794;
    const double C18798 = C18787 + C18788;
    const double C34023 = C33997 + C33998;
    const double C34020 = C33991 + C33992;
    const double C34017 = C33985 + C33986;
    const double C34014 = C33979 + C33980;
    const double C34011 = C33973 + C33974;
    const double C34008 = C33967 + C33968;
    const double C34005 = C33961 + C33962;
    const double C34002 = C33955 + C33956;
    const double C34333 = C34325 + C34326;
    const double C34330 = C34319 + C34320;
    const double C35811 = C35803 + C35804;
    const double C35808 = C35797 + C35798;
    const double C6401 = C6399 + C6400;
    const double C7302 = C7296 + C7297;
    const double C5459 = C5455 + C5456;
    const double C5460 = C5457 + C5458;
    const double C2729 = C2720 + C2721;
    const double C8114 = C8089 + C8090;
    const double C17186 = C17161 + C17162;
    const double C25060 = C25051 + C25052;
    const double C8424 = C8417 + C8418;
    const double C17496 = C17489 + C17490;
    const double C8800 = C8787 + C8788;
    const double C14068 = C14063 + C14064;
    const double C17872 = C17859 + C17860;
    const double C28036 = C28031 + C28032;
    const double C2727 = C2716 + C2717;
    const double C8111 = C8083 + C8084;
    const double C17183 = C17155 + C17156;
    const double C25058 = C25047 + C25048;
    const double C8421 = C8411 + C8412;
    const double C17493 = C17483 + C17484;
    const double C5774 = C5763 + C5764;
    const double C11067 = C11039 + C11040;
    const double C34021 = C33993 + C33994;
    const double C45037 = C45030 + C45031;
    const double C11377 = C11367 + C11368;
    const double C34331 = C34321 + C34322;
    const double C8797 = C8781 + C8782;
    const double C14066 = C14059 + C14060;
    const double C17869 = C17853 + C17854;
    const double C28034 = C28027 + C28028;
    const double C50001 = C50000 + C49994;
    const double C45624 = C29027 * C50688;
    const double C45625 = C29028 * C121;
    const double C44732 = C44724 * C50688;
    const double C44733 = C44725 * C121;
    const double C44726 = C44714 * C121;
    const double C44727 = C44715 * C50688;
    const double C46513 = C46503 * C50688;
    const double C46514 = C46504 * C121;
    const double C292 =
        (3 * C49898 + ae * C49899 + C49846 * C49926 + ae * C49845 * C50001 +
         C49845 *
             (ae * C50001 +
              C49845 *
                  (3 * C49922 + ae * C49923 +
                   C49846 * (2 * C49918 + ae * C49919 +
                             C49846 * (C49914 + ae * C49846 * C49915 +
                                       C49846 * (ae * C49915 +
                                                 C49846 * std::pow(C49848, 8) *
                                                     bs[8] * C49856)))))) /
        C49725;
    const double C540 =
        (ae * (4 * C49973 + C49846 * C50001 +
               (3 * C49965 + C49846 * C49992) * ae) +
         C49845 *
             (4 * C49926 + ae * C49927 +
              C49846 *
                  (3 * C49922 + ae * C49923 +
                   C49846 * (2 * C49918 + ae * C49919 +
                             C49846 * (C49914 + ae * C49846 * C49915 +
                                       C49846 * (ae * C49915 +
                                                 C49846 * std::pow(C49848, 8) *
                                                     bs[8] * C49856)))))) /
        C49725;
    const double C794 =
        (ae * C50015 * C50001 +
         C49845 * C50015 *
             (3 * C49922 + ae * C49923 +
              C49846 * (2 * C49918 + ae * C49919 +
                        C49846 * (C49914 + ae * C49846 * C49915 +
                                  C49846 * (ae * C49915 +
                                            C49846 * std::pow(C49848, 8) *
                                                bs[8] * C49856))))) /
        C49725;
    const double C142 = (5 * (3 * C49954 + C49846 * C49973 + C50193 * ae) +
                         C49846 * (4 * C49973 + C49846 * C50001 + C50199 * ae) +
                         (4 * C50193 + C49846 * C50199) * ae) /
                        C49721;
    const double C282 =
        (3 * C49954 + C49846 * C49973 + C50193 * ae + C50001 * C50041) / C49721;
    const double C423 =
        (3 * C49954 + C49846 * C49973 + C50193 * ae + C50001 * C50025) / C49721;
    const double C539 =
        (C49845 * (4 * C49973 + C49846 * C50001 + C50199 * ae)) / C49721;
    const double C643 =
        (C50015 * (4 * C49973 + C49846 * C50001 + C50199 * ae)) / C49721;
    const double C789 = (C50015 * C49845 * C50001) / C49721;
    const double C45626 = C45624 + C45625;
    const double C44735 = C44732 + C44733;
    const double C44734 = C44726 + C44727;
    const double C46519 = C46513 + C46514;
    d2ee[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C7891 * C122 + C50870 * C129 + C7892 * C123 + C50871 * C130 +
             C7893 * C124 + C7888 * C131) *
                C7894 +
            (C7891 * C133 + C50870 * C143 + C7892 * C134 + C50871 * C144 +
             C7893 * C135 + C7888 * C145) *
                C50842 +
            (C8091 + C8092 + C8093) * C7895 +
            (C8094 + C8095 + C8096) * C50738) *
               C50700 * C50603 * C50829 -
           ((C8097 + C8098 + C8099) * C50738 + (C8100 + C8101 + C8102) * C7895 +
            (C8096 + C8095 + C8094) * C50842 +
            (C8093 + C8092 + C8091) * C7894) *
               C50700 * C50603 * C50639) *
              C50872 +
          (((C8103 + C8104 + C8105) * C7894 + (C8106 + C8107 + C8108) * C50842 +
            (C8109 + C8110 + C8111) * C7895 +
            (C8112 + C8113 + C8114) * C50738) *
               C50700 * C50603 * C50639 -
           ((C8108 + C8107 + C8106) * C50738 + (C8105 + C8104 + C8103) * C7895 +
            (C7893 * C136 + C7888 * C146 + C7892 * C135 + C50871 * C145 +
             C7891 * C134 + C50870 * C144) *
                C50842 +
            (C7893 * C125 + C7888 * C132 + C7892 * C124 + C50871 * C131 +
             C7891 * C123 + C50870 * C130) *
                C7894) *
               C50700 * C50603 * C50829) *
              C50873 +
          (((C7891 * C124 + C50870 * C131 + C7892 * C125 + C50871 * C132 +
             C7893 * C126 + C7888 * C138) *
                C7894 +
            (C7891 * C135 + C50870 * C145 + C7892 * C136 + C50871 * C146 +
             C7893 * C137 + C7888 * C147) *
                C50842 +
            (C8419 + C8420 + C8421) * C7895 +
            (C8422 + C8423 + C8424) * C50738) *
               C50700 * C50603 * C50829 -
           ((C7893 * C281 + C7888 * C292 + C7892 * C278 + C50871 * C290 +
             C7891 * C277 + C50870 * C289) *
                C50738 +
            (C7893 * C262 + C7888 * C282 + C7892 * C260 + C50871 * C274 +
             C7891 * C259 + C50870 * C273) *
                C7895 +
            (C8424 + C8423 + C8422) * C50842 +
            (C8421 + C8420 + C8419) * C7894) *
               C50700 * C50603 * C50639) *
              C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[1] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C7891 * C122 + C50870 * C129 + C7892 * C123 +
                     C50871 * C130 + C7893 * C124 + C7888 * C131) *
                        C7894 +
                    (C7891 * C133 + C50870 * C143 + C7892 * C134 +
                     C50871 * C144 + C7893 * C135 + C7888 * C145) *
                        C50842 +
                    (C8091 + C8092 + C8093) * C7895 +
                    (C8094 + C8095 + C8096) * C50738) *
                       C50700 * C50830 -
                   ((C8789 + C8790 + C8791) * C50738 +
                    (C8792 + C8793 + C8794) * C7895 +
                    (C7893 * C405 + C7888 * C425 + C7892 * C406 +
                     C50871 * C426 + C7891 * C407 + C50870 * C427) *
                        C50842 +
                    (C7893 * C395 + C7888 * C409 + C7892 * C396 +
                     C50871 * C410 + C7891 * C397 + C50870 * C411) *
                        C7894) *
                       C50700 * C50667) *
                      C50829 +
                  (((C8794 + C8793 + C8792) * C7894 +
                    (C8791 + C8790 + C8789) * C50842 +
                    (C7891 * C1433 + C50870 * C1441 + C7892 * C1432 +
                     C50871 * C1440 + C7893 * C1431 + C7888 * C1439) *
                        C7895 +
                    (C7891 * C1437 + C50870 * C1445 + C7892 * C1436 +
                     C50871 * C1444 + C7893 * C1435 + C7888 * C1443) *
                        C50738) *
                       C50700 * C50667 -
                   ((C8097 + C8098 + C8099) * C50738 +
                    (C8100 + C8101 + C8102) * C7895 +
                    (C8096 + C8095 + C8094) * C50842 +
                    (C8093 + C8092 + C8091) * C7894) *
                       C50700 * C50830) *
                      C50639) *
                     C251 +
                 ((((C7891 * C396 + C50870 * C410 + C7892 * C395 +
                     C50871 * C409 + C7893 * C394 + C7888 * C408) *
                        C7894 +
                    (C7891 * C406 + C50870 * C426 + C7892 * C405 +
                     C50871 * C425 + C7893 * C404 + C7888 * C424) *
                        C50842 +
                    (C8795 + C8796 + C8797) * C7895 +
                    (C8798 + C8799 + C8800) * C50738) *
                       C50700 * C50667 -
                   ((C8108 + C8107 + C8106) * C50738 +
                    (C8105 + C8104 + C8103) * C7895 +
                    (C7893 * C136 + C7888 * C146 + C7892 * C135 +
                     C50871 * C145 + C7891 * C134 + C50870 * C144) *
                        C50842 +
                    (C7893 * C125 + C7888 * C132 + C7892 * C124 +
                     C50871 * C131 + C7891 * C123 + C50870 * C130) *
                        C7894) *
                       C50700 * C50830) *
                      C50829 +
                  (((C8103 + C8104 + C8105) * C7894 +
                    (C8106 + C8107 + C8108) * C50842 +
                    (C8109 + C8110 + C8111) * C7895 +
                    (C8112 + C8113 + C8114) * C50738) *
                       C50700 * C50830 -
                   ((C7893 * C1434 + C7888 * C1442 + C7892 * C1435 +
                     C50871 * C1443 + C7891 * C1436 + C50870 * C1444) *
                        C50738 +
                    (C7893 * C1430 + C7888 * C1438 + C7892 * C1431 +
                     C50871 * C1439 + C7891 * C1432 + C50870 * C1440) *
                        C7895 +
                    (C8800 + C8799 + C8798) * C50842 +
                    (C8797 + C8796 + C8795) * C7894) *
                       C50700 * C50667) *
                      C50639) *
                     C50574)) /
               (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7891 * C122 + C50870 * C129 + C7892 * C123 + C50871 * C130 +
             C7893 * C124 + C7888 * C131) *
                C7894 +
            (C7891 * C133 + C50870 * C143 + C7892 * C134 + C50871 * C144 +
             C7893 * C135 + C7888 * C145) *
                C50842 +
            (C8091 + C8092 + C8093) * C7895 +
            (C8094 + C8095 + C8096) * C50738) *
               C50700 * C50603 * C248 -
           ((C8097 + C8098 + C8099) * C50738 + (C8100 + C8101 + C8102) * C7895 +
            (C8096 + C8095 + C8094) * C50842 +
            (C8093 + C8092 + C8091) * C7894) *
               C50700 * C50603 * C249 +
           ((C8102 + C8101 + C8100) * C7894 + (C8099 + C8098 + C8097) * C50842 +
            (C7891 * C972 + C50870 * C980 + C7892 * C971 + C50871 * C979 +
             C7893 * C970 + C7888 * C978) *
                C7895 +
            (C7891 * C976 + C50870 * C984 + C7892 * C975 + C50871 * C983 +
             C7893 * C974 + C7888 * C982) *
                C50738) *
               C50700 * C50603 * C250) *
              C251 +
          (((C8103 + C8104 + C8105) * C7894 + (C8106 + C8107 + C8108) * C50842 +
            (C8109 + C8110 + C8111) * C7895 +
            (C8112 + C8113 + C8114) * C50738) *
               C50700 * C50603 * C249 -
           ((C8108 + C8107 + C8106) * C50738 + (C8105 + C8104 + C8103) * C7895 +
            (C7893 * C136 + C7888 * C146 + C7892 * C135 + C50871 * C145 +
             C7891 * C134 + C50870 * C144) *
                C50842 +
            (C7893 * C125 + C7888 * C132 + C7892 * C124 + C50871 * C131 +
             C7891 * C123 + C50870 * C130) *
                C7894) *
               C50700 * C50603 * C248 -
           ((C7893 * C973 + C7888 * C981 + C7892 * C974 + C50871 * C982 +
             C7891 * C975 + C50870 * C983) *
                C50738 +
            (C7893 * C969 + C7888 * C977 + C7892 * C970 + C50871 * C978 +
             C7891 * C971 + C50870 * C979) *
                C7895 +
            (C8114 + C8113 + C8112) * C50842 +
            (C8111 + C8110 + C8109) * C7894) *
               C50700 * C50603 * C250) *
              C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C7891 * C122 + C50870 * C129 + C7892 * C123 + C50871 * C130 +
            C7893 * C124 + C7888 * C131) *
               C7894 +
           (C7891 * C133 + C50870 * C143 + C7892 * C134 + C50871 * C144 +
            C7893 * C135 + C7888 * C145) *
               C50842 +
           (C7891 * C256 + C50870 * C270 + C7892 * C255 + C50871 * C269 +
            C7893 * C254 + C7888 * C268) *
               C7895 +
           (C7891 * C266 + C50870 * C286 + C7892 * C265 + C50871 * C285 +
            C7893 * C264 + C7888 * C284) *
               C50738) *
              C50700 * C50603 * C50587 * C113 -
          ((C7893 * C263 + C7888 * C283 + C7892 * C264 + C50871 * C284 +
            C7891 * C265 + C50870 * C285) *
               C50738 +
           (C7893 * C253 + C7888 * C267 + C7892 * C254 + C50871 * C268 +
            C7891 * C255 + C50870 * C269) *
               C7895 +
           (C7893 * C136 + C7888 * C146 + C7892 * C135 + C50871 * C145 +
            C7891 * C134 + C50870 * C144) *
               C50842 +
           (C7893 * C125 + C7888 * C132 + C7892 * C124 + C50871 * C131 +
            C7891 * C123 + C50870 * C130) *
               C7894) *
              C50700 * C50603 * C50587 * C114 +
          ((C7891 * C124 + C50870 * C131 + C7892 * C125 + C50871 * C132 +
            C7893 * C126 + C7888 * C138) *
               C7894 +
           (C7891 * C135 + C50870 * C145 + C7892 * C136 + C50871 * C146 +
            C7893 * C137 + C7888 * C147) *
               C50842 +
           (C7891 * C254 + C50870 * C268 + C7892 * C253 + C50871 * C267 +
            C7893 * C261 + C7888 * C279) *
               C7895 +
           (C7891 * C264 + C50870 * C284 + C7892 * C263 + C50871 * C283 +
            C7893 * C280 + C7888 * C291) *
               C50738) *
              C50700 * C50603 * C50587 * C115 -
          ((C7893 * C538 + C7888 * C540 + C7892 * C280 + C50871 * C291 +
            C7891 * C263 + C50870 * C283) *
               C50738 +
           (C7893 * C537 + C7888 * C539 + C7892 * C261 + C50871 * C279 +
            C7891 * C253 + C50870 * C267) *
               C7895 +
           (C7893 * C140 + C7888 * C148 + C7892 * C137 + C50871 * C147 +
            C7891 * C136 + C50870 * C146) *
               C50842 +
           (C7893 * C127 + C7888 * C139 + C7892 * C126 + C50871 * C138 +
            C7891 * C125 + C50870 * C132) *
               C7894) *
              C50700 * C50603 * C50587 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C7891 * C122 + C50870 * C129 + C7892 * C123 + C50871 * C130 +
             C7893 * C124 + C7888 * C131) *
                C7894 +
            (C7891 * C133 + C50870 * C143 + C7892 * C134 + C50871 * C144 +
             C7893 * C135 + C7888 * C145) *
                C50842 +
            (C8091 + C8092 + C8093) * C7895 +
            (C8094 + C8095 + C8096) * C50738) *
               C50700 * C391 -
           ((C7893 * C786 + C7888 * C792 + C7892 * C785 + C50871 * C791 +
             C7891 * C784 + C50870 * C790) *
                C50738 +
            (C7893 * C777 + C7888 * C782 + C7892 * C776 + C50871 * C781 +
             C7891 * C775 + C50870 * C780) *
                C7895 +
            (C7893 * C405 + C7888 * C425 + C7892 * C406 + C50871 * C426 +
             C7891 * C407 + C50870 * C427) *
                C50842 +
            (C7893 * C395 + C7888 * C409 + C7892 * C396 + C50871 * C410 +
             C7891 * C397 + C50870 * C411) *
                C7894) *
               C50700 * C392 +
           ((C7891 * C398 + C50870 * C412 + C7892 * C399 + C50871 * C413 +
             C7893 * C400 + C7888 * C414) *
                C7894 +
            (C7891 * C416 + C50870 * C428 + C7892 * C417 + C50871 * C429 +
             C7893 * C418 + C7888 * C430) *
                C50842 +
            (C7891 * C1086 + C50870 * C1094 + C7892 * C1085 + C50871 * C1093 +
             C7893 * C1084 + C7888 * C1092) *
                C7895 +
            (C7891 * C1090 + C50870 * C1098 + C7892 * C1089 + C50871 * C1097 +
             C7893 * C1088 + C7888 * C1096) *
                C50738) *
               C50700 * C393) *
              C50587 * C251 +
          (((C7891 * C396 + C50870 * C410 + C7892 * C395 + C50871 * C409 +
             C7893 * C394 + C7888 * C408) *
                C7894 +
            (C7891 * C406 + C50870 * C426 + C7892 * C405 + C50871 * C425 +
             C7893 * C404 + C7888 * C424) *
                C50842 +
            (C7891 * C776 + C50870 * C781 + C7892 * C777 + C50871 * C782 +
             C7893 * C778 + C7888 * C783) *
                C7895 +
            (C7891 * C785 + C50870 * C791 + C7892 * C786 + C50871 * C792 +
             C7893 * C787 + C7888 * C793) *
                C50738) *
               C50700 * C392 -
           ((C8108 + C8107 + C8106) * C50738 + (C8105 + C8104 + C8103) * C7895 +
            (C7893 * C136 + C7888 * C146 + C7892 * C135 + C50871 * C145 +
             C7891 * C134 + C50870 * C144) *
                C50842 +
            (C7893 * C125 + C7888 * C132 + C7892 * C124 + C50871 * C131 +
             C7891 * C123 + C50870 * C130) *
                C7894) *
               C50700 * C391 -
           ((C7893 * C1087 + C7888 * C1095 + C7892 * C1088 + C50871 * C1096 +
             C7891 * C1089 + C50870 * C1097) *
                C50738 +
            (C7893 * C1083 + C7888 * C1091 + C7892 * C1084 + C50871 * C1092 +
             C7891 * C1085 + C50870 * C1093) *
                C7895 +
            (C7893 * C419 + C7888 * C431 + C7892 * C418 + C50871 * C430 +
             C7891 * C417 + C50870 * C429) *
                C50842 +
            (C7893 * C401 + C7888 * C415 + C7892 * C400 + C50871 * C414 +
             C7891 * C399 + C50870 * C413) *
                C7894) *
               C50700 * C393) *
              C50587 * C50574)) /
            (p * q * std::sqrt(p + q));
    d2ee[3] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C7891 * C122 + C50870 * C129 + C7892 * C123 + C50871 * C130 +
             C7893 * C124 + C7888 * C131) *
                C7894 +
            (C7891 * C133 + C50870 * C143 + C7892 * C134 + C50871 * C144 +
             C7893 * C135 + C7888 * C145) *
                C50842 +
            (C8091 + C8092 + C8093) * C7895 +
            (C8094 + C8095 + C8096) * C50738) *
               C50700 * C50830 -
           ((C7893 * C786 + C7888 * C792 + C7892 * C785 + C50871 * C791 +
             C7891 * C784 + C50870 * C790) *
                C50738 +
            (C7893 * C777 + C7888 * C782 + C7892 * C776 + C50871 * C781 +
             C7891 * C775 + C50870 * C780) *
                C7895 +
            (C7893 * C405 + C7888 * C425 + C7892 * C406 + C50871 * C426 +
             C7891 * C407 + C50870 * C427) *
                C50842 +
            (C7893 * C395 + C7888 * C409 + C7892 * C396 + C50871 * C410 +
             C7891 * C397 + C50870 * C411) *
                C7894) *
               C50700 * C50667) *
              C50587 * C50872 +
          (((C7891 * C396 + C50870 * C410 + C7892 * C395 + C50871 * C409 +
             C7893 * C394 + C7888 * C408) *
                C7894 +
            (C7891 * C406 + C50870 * C426 + C7892 * C405 + C50871 * C425 +
             C7893 * C404 + C7888 * C424) *
                C50842 +
            (C7891 * C776 + C50870 * C781 + C7892 * C777 + C50871 * C782 +
             C7893 * C778 + C7888 * C783) *
                C7895 +
            (C7891 * C785 + C50870 * C791 + C7892 * C786 + C50871 * C792 +
             C7893 * C787 + C7888 * C793) *
                C50738) *
               C50700 * C50667 -
           ((C8108 + C8107 + C8106) * C50738 + (C8105 + C8104 + C8103) * C7895 +
            (C7893 * C136 + C7888 * C146 + C7892 * C135 + C50871 * C145 +
             C7891 * C134 + C50870 * C144) *
                C50842 +
            (C7893 * C125 + C7888 * C132 + C7892 * C124 + C50871 * C131 +
             C7891 * C123 + C50870 * C130) *
                C7894) *
               C50700 * C50830) *
              C50587 * C50873 +
          (((C7891 * C124 + C50870 * C131 + C7892 * C125 + C50871 * C132 +
             C7893 * C126 + C7888 * C138) *
                C7894 +
            (C7891 * C135 + C50870 * C145 + C7892 * C136 + C50871 * C146 +
             C7893 * C137 + C7888 * C147) *
                C50842 +
            (C8419 + C8420 + C8421) * C7895 +
            (C8422 + C8423 + C8424) * C50738) *
               C50700 * C50830 -
           ((C7893 * C788 + C7888 * C794 + C7892 * C787 + C50871 * C793 +
             C7891 * C786 + C50870 * C792) *
                C50738 +
            (C7893 * C779 + C7888 * C789 + C7892 * C778 + C50871 * C783 +
             C7891 * C777 + C50870 * C782) *
                C7895 +
            (C7893 * C421 + C7888 * C432 + C7892 * C404 + C50871 * C424 +
             C7891 * C405 + C50870 * C425) *
                C50842 +
            (C7893 * C402 + C7888 * C420 + C7892 * C394 + C50871 * C408 +
             C7891 * C395 + C50870 * C409) *
                C7894) *
               C50700 * C50667) *
              C50587 * C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[4] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C7891 * C122 + C50870 * C129 + C7892 * C123 + C50871 * C130 +
            C7893 * C124 + C7888 * C131) *
               C7894 +
           (C7891 * C133 + C50870 * C143 + C7892 * C134 + C50871 * C144 +
            C7893 * C135 + C7888 * C145) *
               C50842 +
           (C7891 * C256 + C50870 * C270 + C7892 * C255 + C50871 * C269 +
            C7893 * C254 + C7888 * C268) *
               C7895 +
           (C7891 * C266 + C50870 * C286 + C7892 * C265 + C50871 * C285 +
            C7893 * C264 + C7888 * C284) *
               C50738) *
              C50700 * C50603 * C50587 * C113 -
          ((C7893 * C263 + C7888 * C283 + C7892 * C264 + C50871 * C284 +
            C7891 * C265 + C50870 * C285) *
               C50738 +
           (C7893 * C253 + C7888 * C267 + C7892 * C254 + C50871 * C268 +
            C7891 * C255 + C50870 * C269) *
               C7895 +
           (C7893 * C136 + C7888 * C146 + C7892 * C135 + C50871 * C145 +
            C7891 * C134 + C50870 * C144) *
               C50842 +
           (C7893 * C125 + C7888 * C132 + C7892 * C124 + C50871 * C131 +
            C7891 * C123 + C50870 * C130) *
               C7894) *
              C50700 * C50603 * C50587 * C114 +
          ((C7891 * C124 + C50870 * C131 + C7892 * C125 + C50871 * C132 +
            C7893 * C126 + C7888 * C138) *
               C7894 +
           (C7891 * C135 + C50870 * C145 + C7892 * C136 + C50871 * C146 +
            C7893 * C137 + C7888 * C147) *
               C50842 +
           (C7891 * C254 + C50870 * C268 + C7892 * C253 + C50871 * C267 +
            C7893 * C261 + C7888 * C279) *
               C7895 +
           (C7891 * C264 + C50870 * C284 + C7892 * C263 + C50871 * C283 +
            C7893 * C280 + C7888 * C291) *
               C50738) *
              C50700 * C50603 * C50587 * C115 -
          ((C7893 * C538 + C7888 * C540 + C7892 * C280 + C50871 * C291 +
            C7891 * C263 + C50870 * C283) *
               C50738 +
           (C7893 * C537 + C7888 * C539 + C7892 * C261 + C50871 * C279 +
            C7891 * C253 + C50870 * C267) *
               C7895 +
           (C7893 * C140 + C7888 * C148 + C7892 * C137 + C50871 * C147 +
            C7891 * C136 + C50870 * C146) *
               C50842 +
           (C7893 * C127 + C7888 * C139 + C7892 * C126 + C50871 * C138 +
            C7891 * C125 + C50870 * C132) *
               C7894) *
              C50700 * C50603 * C50587 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7891 * C122 + C50870 * C129 + C7892 * C123 + C50871 * C130 +
             C7893 * C124 + C7888 * C131) *
                C7894 +
            (C7891 * C133 + C50870 * C143 + C7892 * C134 + C50871 * C144 +
             C7893 * C135 + C7888 * C145) *
                C50842 +
            (C8091 + C8092 + C8093) * C7895 +
            (C8094 + C8095 + C8096) * C50738) *
               C50700 * C50603 * C248 -
           ((C8097 + C8098 + C8099) * C50738 + (C8100 + C8101 + C8102) * C7895 +
            (C8096 + C8095 + C8094) * C50842 +
            (C8093 + C8092 + C8091) * C7894) *
               C50700 * C50603 * C249 +
           ((C8102 + C8101 + C8100) * C7894 + (C8099 + C8098 + C8097) * C50842 +
            (C7891 * C972 + C50870 * C980 + C7892 * C971 + C50871 * C979 +
             C7893 * C970 + C7888 * C978) *
                C7895 +
            (C7891 * C976 + C50870 * C984 + C7892 * C975 + C50871 * C983 +
             C7893 * C974 + C7888 * C982) *
                C50738) *
               C50700 * C50603 * C250) *
              C251 +
          (((C8103 + C8104 + C8105) * C7894 + (C8106 + C8107 + C8108) * C50842 +
            (C8109 + C8110 + C8111) * C7895 +
            (C8112 + C8113 + C8114) * C50738) *
               C50700 * C50603 * C249 -
           ((C8108 + C8107 + C8106) * C50738 + (C8105 + C8104 + C8103) * C7895 +
            (C7893 * C136 + C7888 * C146 + C7892 * C135 + C50871 * C145 +
             C7891 * C134 + C50870 * C144) *
                C50842 +
            (C7893 * C125 + C7888 * C132 + C7892 * C124 + C50871 * C131 +
             C7891 * C123 + C50870 * C130) *
                C7894) *
               C50700 * C50603 * C248 -
           ((C7893 * C973 + C7888 * C981 + C7892 * C974 + C50871 * C982 +
             C7891 * C975 + C50870 * C983) *
                C50738 +
            (C7893 * C969 + C7888 * C977 + C7892 * C970 + C50871 * C978 +
             C7891 * C971 + C50870 * C979) *
                C7895 +
            (C8114 + C8113 + C8112) * C50842 +
            (C8111 + C8110 + C8109) * C7894) *
               C50700 * C50603 * C250) *
              C50574)) /
            (p * q * std::sqrt(p + q));
    d2ee[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C7891 * C122 + C50870 * C129 + C7892 * C123 + C50871 * C130 +
             C7893 * C124 + C7888 * C131) *
                C7894 +
            (C7891 * C133 + C50870 * C143 + C7892 * C134 + C50871 * C144 +
             C7893 * C135 + C7888 * C145) *
                C50842 +
            (C8091 + C8092 + C8093) * C7895 +
            (C8094 + C8095 + C8096) * C50738) *
               C50700 * C50603 * C50874 -
           ((C8097 + C8098 + C8099) * C50738 + (C8100 + C8101 + C8102) * C7895 +
            (C8096 + C8095 + C8094) * C50842 +
            (C8093 + C8092 + C8091) * C7894) *
               C50700 * C50603 * C50875 +
           ((C8102 + C8101 + C8100) * C7894 + (C8099 + C8098 + C8097) * C50842 +
            (C9057 + C9058 + C9059) * C7895 +
            (C9060 + C9061 + C9062) * C50738) *
               C50700 * C50603 * C1199) *
              C50821 +
          (((C8103 + C8104 + C8105) * C7894 + (C8106 + C8107 + C8108) * C50842 +
            (C8109 + C8110 + C8111) * C7895 +
            (C8112 + C8113 + C8114) * C50738) *
               C50700 * C50603 * C50875 -
           ((C8108 + C8107 + C8106) * C50738 + (C8105 + C8104 + C8103) * C7895 +
            (C7893 * C136 + C7888 * C146 + C7892 * C135 + C50871 * C145 +
             C7891 * C134 + C50870 * C144) *
                C50842 +
            (C7893 * C125 + C7888 * C132 + C7892 * C124 + C50871 * C131 +
             C7891 * C123 + C50870 * C130) *
                C7894) *
               C50700 * C50603 * C50874 -
           ((C7893 * C973 + C7888 * C981 + C7892 * C974 + C50871 * C982 +
             C7891 * C975 + C50870 * C983) *
                C50738 +
            (C7893 * C969 + C7888 * C977 + C7892 * C970 + C50871 * C978 +
             C7891 * C971 + C50870 * C979) *
                C7895 +
            (C8114 + C8113 + C8112) * C50842 +
            (C8111 + C8110 + C8109) * C7894) *
               C50700 * C50603 * C1199) *
              C50574)) /
        (p * q * std::sqrt(p + q));
    d2ee[6] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C7891 * C122 + C50870 * C129 + C7892 * C123 + C50871 * C130 +
             C7893 * C124 + C7888 * C131) *
                C7894 +
            (C7891 * C133 + C50870 * C143 + C7892 * C134 + C50871 * C144 +
             C7893 * C135 + C7888 * C145) *
                C50842 +
            (C8091 + C8092 + C8093) * C7895 +
            (C8094 + C8095 + C8096) * C50738) *
               C50700 * C50830 -
           ((C8789 + C8790 + C8791) * C50738 + (C8792 + C8793 + C8794) * C7895 +
            (C7893 * C405 + C7888 * C425 + C7892 * C406 + C50871 * C426 +
             C7891 * C407 + C50870 * C427) *
                C50842 +
            (C7893 * C395 + C7888 * C409 + C7892 * C396 + C50871 * C410 +
             C7891 * C397 + C50870 * C411) *
                C7894) *
               C50700 * C50667) *
              C50874 +
          (((C8794 + C8793 + C8792) * C7894 + (C8791 + C8790 + C8789) * C50842 +
            (C9725 + C9726 + C9727) * C7895 +
            (C9728 + C9729 + C9730) * C50738) *
               C50700 * C50667 -
           ((C8097 + C8098 + C8099) * C50738 + (C8100 + C8101 + C8102) * C7895 +
            (C8096 + C8095 + C8094) * C50842 +
            (C8093 + C8092 + C8091) * C7894) *
               C50700 * C50830) *
              C50875 +
          (((C8102 + C8101 + C8100) * C7894 + (C8099 + C8098 + C8097) * C50842 +
            (C9057 + C9058 + C9059) * C7895 +
            (C9060 + C9061 + C9062) * C50738) *
               C50700 * C50830 -
           ((C7893 * C3076 + C7888 * C3080 + C7892 * C3075 + C50871 * C3079 +
             C7891 * C3074 + C50870 * C3078) *
                C50738 +
            (C7893 * C3071 + C7888 * C3077 + C7892 * C3070 + C50871 * C3073 +
             C7891 * C3069 + C50870 * C3072) *
                C7895 +
            (C9730 + C9729 + C9728) * C50842 +
            (C9727 + C9726 + C9725) * C7894) *
               C50700 * C50667) *
              C1199) *
         C50568) /
        (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C7891 * C122 + C50870 * C129 + C7892 * C123 + C50871 * C130 +
            C7893 * C124 + C7888 * C131) *
               C7894 +
           (C7891 * C133 + C50870 * C143 + C7892 * C134 + C50871 * C144 +
            C7893 * C135 + C7888 * C145) *
               C50842 +
           (C8091 + C8092 + C8093) * C7895 + (C8094 + C8095 + C8096) * C50738) *
              C50700 * C50603 * C964 -
          ((C8097 + C8098 + C8099) * C50738 + (C8100 + C8101 + C8102) * C7895 +
           (C8096 + C8095 + C8094) * C50842 + (C8093 + C8092 + C8091) * C7894) *
              C50700 * C50603 * C965 +
          ((C8102 + C8101 + C8100) * C7894 + (C8099 + C8098 + C8097) * C50842 +
           (C9057 + C9058 + C9059) * C7895 + (C9060 + C9061 + C9062) * C50738) *
              C50700 * C50603 * C966 -
          ((C7893 * C2320 + C7888 * C2324 + C7892 * C2319 + C50871 * C2323 +
            C7891 * C2318 + C50870 * C2322) *
               C50738 +
           (C7893 * C2315 + C7888 * C2321 + C7892 * C2314 + C50871 * C2317 +
            C7891 * C2313 + C50870 * C2316) *
               C7895 +
           (C9062 + C9061 + C9060) * C50842 + (C9059 + C9058 + C9057) * C7894) *
              C50700 * C50603 * C967) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7891 * C122 + C50870 * C129 + C7892 * C123 + C50871 * C130 +
             C7893 * C124 + C7888 * C131) *
                C7894 +
            (C7891 * C133 + C50870 * C143 + C7892 * C134 + C50871 * C144 +
             C7893 * C135 + C7888 * C145) *
                C50842 +
            (C8091 + C8092 + C8093) * C7895 +
            (C8094 + C8095 + C8096) * C50738) *
               C50700 * C50603 * C893 -
           ((C8097 + C8098 + C8099) * C50738 + (C8100 + C8101 + C8102) * C7895 +
            (C8096 + C8095 + C8094) * C50842 +
            (C8093 + C8092 + C8091) * C7894) *
               C50700 * C50603 * C50639) *
              C895 +
          (((C8103 + C8104 + C8105) * C7894 + (C8106 + C8107 + C8108) * C50842 +
            (C8109 + C8110 + C8111) * C7895 +
            (C8112 + C8113 + C8114) * C50738) *
               C50700 * C50603 * C50639 -
           ((C8108 + C8107 + C8106) * C50738 + (C8105 + C8104 + C8103) * C7895 +
            (C7893 * C136 + C7888 * C146 + C7892 * C135 + C50871 * C145 +
             C7891 * C134 + C50870 * C144) *
                C50842 +
            (C7893 * C125 + C7888 * C132 + C7892 * C124 + C50871 * C131 +
             C7891 * C123 + C50870 * C130) *
                C7894) *
               C50700 * C50603 * C893) *
              C896 +
          (((C7891 * C124 + C50870 * C131 + C7892 * C125 + C50871 * C132 +
             C7893 * C126 + C7888 * C138) *
                C7894 +
            (C7891 * C135 + C50870 * C145 + C7892 * C136 + C50871 * C146 +
             C7893 * C137 + C7888 * C147) *
                C50842 +
            (C8419 + C8420 + C8421) * C7895 +
            (C8422 + C8423 + C8424) * C50738) *
               C50700 * C50603 * C893 -
           ((C7893 * C281 + C7888 * C292 + C7892 * C278 + C50871 * C290 +
             C7891 * C277 + C50870 * C289) *
                C50738 +
            (C7893 * C262 + C7888 * C282 + C7892 * C260 + C50871 * C274 +
             C7891 * C259 + C50870 * C273) *
                C7895 +
            (C8424 + C8423 + C8422) * C50842 +
            (C8421 + C8420 + C8419) * C7894) *
               C50700 * C50603 * C50639) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C7891 * C122 + C50870 * C129 + C7892 * C123 + C50871 * C130 +
             C7893 * C124 + C7888 * C131) *
                C7894 +
            (C7891 * C133 + C50870 * C143 + C7892 * C134 + C50871 * C144 +
             C7893 * C135 + C7888 * C145) *
                C50842 +
            (C8091 + C8092 + C8093) * C7895 +
            (C8094 + C8095 + C8096) * C50738) *
               C50700 * C391 -
           ((C8789 + C8790 + C8791) * C50738 + (C8792 + C8793 + C8794) * C7895 +
            (C7893 * C405 + C7888 * C425 + C7892 * C406 + C50871 * C426 +
             C7891 * C407 + C50870 * C427) *
                C50842 +
            (C7893 * C395 + C7888 * C409 + C7892 * C396 + C50871 * C410 +
             C7891 * C397 + C50870 * C411) *
                C7894) *
               C50700 * C392 +
           ((C7891 * C398 + C50870 * C412 + C7892 * C399 + C50871 * C413 +
             C7893 * C400 + C7888 * C414) *
                C7894 +
            (C7891 * C416 + C50870 * C428 + C7892 * C417 + C50871 * C429 +
             C7893 * C418 + C7888 * C430) *
                C50842 +
            (C9221 + C9222 + C9223) * C7895 +
            (C9224 + C9225 + C9226) * C50738) *
               C50700 * C393) *
              C893 +
          (((C8794 + C8793 + C8792) * C7894 + (C8791 + C8790 + C8789) * C50842 +
            (C7891 * C1433 + C50870 * C1441 + C7892 * C1432 + C50871 * C1440 +
             C7893 * C1431 + C7888 * C1439) *
                C7895 +
            (C7891 * C1437 + C50870 * C1445 + C7892 * C1436 + C50871 * C1444 +
             C7893 * C1435 + C7888 * C1443) *
                C50738) *
               C50700 * C392 -
           ((C8097 + C8098 + C8099) * C50738 + (C8100 + C8101 + C8102) * C7895 +
            (C8096 + C8095 + C8094) * C50842 +
            (C8093 + C8092 + C8091) * C7894) *
               C50700 * C391 -
           ((C7893 * C2554 + C7888 * C2558 + C7892 * C2553 + C50871 * C2557 +
             C7891 * C2552 + C50870 * C2556) *
                C50738 +
            (C7893 * C2549 + C7888 * C2555 + C7892 * C2548 + C50871 * C2551 +
             C7891 * C2547 + C50870 * C2550) *
                C7895 +
            (C9226 + C9225 + C9224) * C50842 +
            (C9223 + C9222 + C9221) * C7894) *
               C50700 * C393) *
              C50639) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[8] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C7891 * C122 + C50870 * C129 + C7892 * C123 +
                     C50871 * C130 + C7893 * C124 + C7888 * C131) *
                        C7894 +
                    (C7891 * C133 + C50870 * C143 + C7892 * C134 +
                     C50871 * C144 + C7893 * C135 + C7888 * C145) *
                        C50842 +
                    (C8091 + C8092 + C8093) * C7895 +
                    (C8094 + C8095 + C8096) * C50738) *
                       C50700 * C50830 -
                   ((C8789 + C8790 + C8791) * C50738 +
                    (C8792 + C8793 + C8794) * C7895 +
                    (C7893 * C405 + C7888 * C425 + C7892 * C406 +
                     C50871 * C426 + C7891 * C407 + C50870 * C427) *
                        C50842 +
                    (C7893 * C395 + C7888 * C409 + C7892 * C396 +
                     C50871 * C410 + C7891 * C397 + C50870 * C411) *
                        C7894) *
                       C50700 * C50667) *
                      C893 +
                  (((C8794 + C8793 + C8792) * C7894 +
                    (C8791 + C8790 + C8789) * C50842 +
                    (C7891 * C1433 + C50870 * C1441 + C7892 * C1432 +
                     C50871 * C1440 + C7893 * C1431 + C7888 * C1439) *
                        C7895 +
                    (C7891 * C1437 + C50870 * C1445 + C7892 * C1436 +
                     C50871 * C1444 + C7893 * C1435 + C7888 * C1443) *
                        C50738) *
                       C50700 * C50667 -
                   ((C8097 + C8098 + C8099) * C50738 +
                    (C8100 + C8101 + C8102) * C7895 +
                    (C8096 + C8095 + C8094) * C50842 +
                    (C8093 + C8092 + C8091) * C7894) *
                       C50700 * C50830) *
                      C50639) *
                     C50821 +
                 ((((C7891 * C396 + C50870 * C410 + C7892 * C395 +
                     C50871 * C409 + C7893 * C394 + C7888 * C408) *
                        C7894 +
                    (C7891 * C406 + C50870 * C426 + C7892 * C405 +
                     C50871 * C425 + C7893 * C404 + C7888 * C424) *
                        C50842 +
                    (C8795 + C8796 + C8797) * C7895 +
                    (C8798 + C8799 + C8800) * C50738) *
                       C50700 * C50667 -
                   ((C8108 + C8107 + C8106) * C50738 +
                    (C8105 + C8104 + C8103) * C7895 +
                    (C7893 * C136 + C7888 * C146 + C7892 * C135 +
                     C50871 * C145 + C7891 * C134 + C50870 * C144) *
                        C50842 +
                    (C7893 * C125 + C7888 * C132 + C7892 * C124 +
                     C50871 * C131 + C7891 * C123 + C50870 * C130) *
                        C7894) *
                       C50700 * C50830) *
                      C893 +
                  (((C8103 + C8104 + C8105) * C7894 +
                    (C8106 + C8107 + C8108) * C50842 +
                    (C8109 + C8110 + C8111) * C7895 +
                    (C8112 + C8113 + C8114) * C50738) *
                       C50700 * C50830 -
                   ((C7893 * C1434 + C7888 * C1442 + C7892 * C1435 +
                     C50871 * C1443 + C7891 * C1436 + C50870 * C1444) *
                        C50738 +
                    (C7893 * C1430 + C7888 * C1438 + C7892 * C1431 +
                     C50871 * C1439 + C7891 * C1432 + C50870 * C1440) *
                        C7895 +
                    (C8800 + C8799 + C8798) * C50842 +
                    (C8797 + C8796 + C8795) * C7894) *
                       C50700 * C50667) *
                      C50639) *
                     C50574)) /
               (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7891 * C122 + C50870 * C129 + C7892 * C123 + C50871 * C130 +
             C7893 * C124 + C7888 * C131) *
                C7894 +
            (C7891 * C133 + C50870 * C143 + C7892 * C134 + C50871 * C144 +
             C7893 * C135 + C7888 * C145) *
                C50842 +
            (C8091 + C8092 + C8093) * C7895 +
            (C8094 + C8095 + C8096) * C50738) *
               C50700 * C50603 * C893 -
           ((C8097 + C8098 + C8099) * C50738 + (C8100 + C8101 + C8102) * C7895 +
            (C8096 + C8095 + C8094) * C50842 +
            (C8093 + C8092 + C8091) * C7894) *
               C50700 * C50603 * C50639) *
              C895 +
          (((C8103 + C8104 + C8105) * C7894 + (C8106 + C8107 + C8108) * C50842 +
            (C8109 + C8110 + C8111) * C7895 +
            (C8112 + C8113 + C8114) * C50738) *
               C50700 * C50603 * C50639 -
           ((C8108 + C8107 + C8106) * C50738 + (C8105 + C8104 + C8103) * C7895 +
            (C7893 * C136 + C7888 * C146 + C7892 * C135 + C50871 * C145 +
             C7891 * C134 + C50870 * C144) *
                C50842 +
            (C7893 * C125 + C7888 * C132 + C7892 * C124 + C50871 * C131 +
             C7891 * C123 + C50870 * C130) *
                C7894) *
               C50700 * C50603 * C893) *
              C896 +
          (((C7891 * C124 + C50870 * C131 + C7892 * C125 + C50871 * C132 +
             C7893 * C126 + C7888 * C138) *
                C7894 +
            (C7891 * C135 + C50870 * C145 + C7892 * C136 + C50871 * C146 +
             C7893 * C137 + C7888 * C147) *
                C50842 +
            (C8419 + C8420 + C8421) * C7895 +
            (C8422 + C8423 + C8424) * C50738) *
               C50700 * C50603 * C893 -
           ((C7893 * C281 + C7888 * C292 + C7892 * C278 + C50871 * C290 +
             C7891 * C277 + C50870 * C289) *
                C50738 +
            (C7893 * C262 + C7888 * C282 + C7892 * C260 + C50871 * C274 +
             C7891 * C259 + C50870 * C273) *
                C7895 +
            (C8424 + C8423 + C8422) * C50842 +
            (C8421 + C8420 + C8419) * C7894) *
               C50700 * C50603 * C50639) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C7891 * C122 + C50870 * C129 + C7892 * C123 + C50871 * C130 +
            C7893 * C124 + C7888 * C131) *
               C7894 +
           (C7891 * C133 + C50870 * C143 + C7892 * C134 + C50871 * C144 +
            C7893 * C135 + C7888 * C145) *
               C50842 +
           (C8091 + C8092 + C8093) * C7895 + (C8094 + C8095 + C8096) * C50738) *
              C50700 * C50603 * C964 -
          ((C8097 + C8098 + C8099) * C50738 + (C8100 + C8101 + C8102) * C7895 +
           (C8096 + C8095 + C8094) * C50842 + (C8093 + C8092 + C8091) * C7894) *
              C50700 * C50603 * C965 +
          ((C8102 + C8101 + C8100) * C7894 + (C8099 + C8098 + C8097) * C50842 +
           (C9057 + C9058 + C9059) * C7895 + (C9060 + C9061 + C9062) * C50738) *
              C50700 * C50603 * C966 -
          ((C7893 * C2320 + C7888 * C2324 + C7892 * C2319 + C50871 * C2323 +
            C7891 * C2318 + C50870 * C2322) *
               C50738 +
           (C7893 * C2315 + C7888 * C2321 + C7892 * C2314 + C50871 * C2317 +
            C7891 * C2313 + C50870 * C2316) *
               C7895 +
           (C9062 + C9061 + C9060) * C50842 + (C9059 + C9058 + C9057) * C7894) *
              C50700 * C50603 * C967) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[10] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C7891 * C122 + C50870 * C129 + C7892 * C123 +
                      C50871 * C130 + C7893 * C124 + C7888 * C131) *
                         C7894 +
                     (C7891 * C133 + C50870 * C143 + C7892 * C134 +
                      C50871 * C144 + C7893 * C135 + C7888 * C145) *
                         C50842 +
                     (C8091 + C8092 + C8093) * C7895 +
                     (C8094 + C8095 + C8096) * C50738) *
                        C50700 * C1544 -
                    ((C8789 + C8790 + C8791) * C50738 +
                     (C8792 + C8793 + C8794) * C7895 +
                     (C7893 * C405 + C7888 * C425 + C7892 * C406 +
                      C50871 * C426 + C7891 * C407 + C50870 * C427) *
                         C50842 +
                     (C7893 * C395 + C7888 * C409 + C7892 * C396 +
                      C50871 * C410 + C7891 * C397 + C50870 * C411) *
                         C7894) *
                        C50700 * C50667) *
                       C50829 +
                   (((C8794 + C8793 + C8792) * C7894 +
                     (C8791 + C8790 + C8789) * C50842 +
                     (C9725 + C9726 + C9727) * C7895 +
                     (C9728 + C9729 + C9730) * C50738) *
                        C50700 * C50667 -
                    ((C8097 + C8098 + C8099) * C50738 +
                     (C8100 + C8101 + C8102) * C7895 +
                     (C8096 + C8095 + C8094) * C50842 +
                     (C8093 + C8092 + C8091) * C7894) *
                        C50700 * C1544) *
                       C50639) *
                      C50821 +
                  ((((C7891 * C396 + C50870 * C410 + C7892 * C395 +
                      C50871 * C409 + C7893 * C394 + C7888 * C408) *
                         C7894 +
                     (C7891 * C406 + C50870 * C426 + C7892 * C405 +
                      C50871 * C425 + C7893 * C404 + C7888 * C424) *
                         C50842 +
                     (C8795 + C8796 + C8797) * C7895 +
                     (C8798 + C8799 + C8800) * C50738) *
                        C50700 * C50667 -
                    ((C8108 + C8107 + C8106) * C50738 +
                     (C8105 + C8104 + C8103) * C7895 +
                     (C7893 * C136 + C7888 * C146 + C7892 * C135 +
                      C50871 * C145 + C7891 * C134 + C50870 * C144) *
                         C50842 +
                     (C7893 * C125 + C7888 * C132 + C7892 * C124 +
                      C50871 * C131 + C7891 * C123 + C50870 * C130) *
                         C7894) *
                        C50700 * C1544) *
                       C50829 +
                   (((C8103 + C8104 + C8105) * C7894 +
                     (C8106 + C8107 + C8108) * C50842 +
                     (C8109 + C8110 + C8111) * C7895 +
                     (C8112 + C8113 + C8114) * C50738) *
                        C50700 * C1544 -
                    ((C7893 * C1434 + C7888 * C1442 + C7892 * C1435 +
                      C50871 * C1443 + C7891 * C1436 + C50870 * C1444) *
                         C50738 +
                     (C7893 * C1430 + C7888 * C1438 + C7892 * C1431 +
                      C50871 * C1439 + C7891 * C1432 + C50870 * C1440) *
                         C7895 +
                     (C8800 + C8799 + C8798) * C50842 +
                     (C8797 + C8796 + C8795) * C7894) *
                        C50700 * C50667) *
                       C50639) *
                      C50574)) /
                (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C7891 * C122 + C50870 * C129 + C7892 * C123 + C50871 * C130 +
             C7893 * C124 + C7888 * C131) *
                C7894 +
            (C7891 * C133 + C50870 * C143 + C7892 * C134 + C50871 * C144 +
             C7893 * C135 + C7888 * C145) *
                C50842 +
            (C8091 + C8092 + C8093) * C7895 +
            (C8094 + C8095 + C8096) * C50738) *
               C50700 * C50876 -
           ((C8789 + C8790 + C8791) * C50738 + (C8792 + C8793 + C8794) * C7895 +
            (C7893 * C405 + C7888 * C425 + C7892 * C406 + C50871 * C426 +
             C7891 * C407 + C50870 * C427) *
                C50842 +
            (C7893 * C395 + C7888 * C409 + C7892 * C396 + C50871 * C410 +
             C7891 * C397 + C50870 * C411) *
                C7894) *
               C50700 * C50877 +
           ((C7891 * C398 + C50870 * C412 + C7892 * C399 + C50871 * C413 +
             C7893 * C400 + C7888 * C414) *
                C7894 +
            (C7891 * C416 + C50870 * C428 + C7892 * C417 + C50871 * C429 +
             C7893 * C418 + C7888 * C430) *
                C50842 +
            (C9221 + C9222 + C9223) * C7895 +
            (C9224 + C9225 + C9226) * C50738) *
               C50700 * C1960) *
              C50829 +
          (((C8794 + C8793 + C8792) * C7894 + (C8791 + C8790 + C8789) * C50842 +
            (C9725 + C9726 + C9727) * C7895 +
            (C9728 + C9729 + C9730) * C50738) *
               C50700 * C50877 -
           ((C8097 + C8098 + C8099) * C50738 + (C8100 + C8101 + C8102) * C7895 +
            (C8096 + C8095 + C8094) * C50842 +
            (C8093 + C8092 + C8091) * C7894) *
               C50700 * C50876 -
           ((C7893 * C2554 + C7888 * C2558 + C7892 * C2553 + C50871 * C2557 +
             C7891 * C2552 + C50870 * C2556) *
                C50738 +
            (C7893 * C2549 + C7888 * C2555 + C7892 * C2548 + C50871 * C2551 +
             C7891 * C2547 + C50870 * C2550) *
                C7895 +
            (C9226 + C9225 + C9224) * C50842 +
            (C9223 + C9222 + C9221) * C7894) *
               C50700 * C1960) *
              C50639) *
         C50568) /
        (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7891 * C122 + C50870 * C129 + C7892 * C123 + C50871 * C130 +
             C7893 * C124 + C7888 * C131) *
                C7894 +
            (C7891 * C133 + C50870 * C143 + C7892 * C134 + C50871 * C144 +
             C7893 * C135 + C7888 * C145) *
                C50842 +
            (C8091 + C8092 + C8093) * C7895 +
            (C8094 + C8095 + C8096) * C50738) *
               C50700 * C1544 -
           ((C8789 + C8790 + C8791) * C50738 + (C8792 + C8793 + C8794) * C7895 +
            (C7893 * C405 + C7888 * C425 + C7892 * C406 + C50871 * C426 +
             C7891 * C407 + C50870 * C427) *
                C50842 +
            (C7893 * C395 + C7888 * C409 + C7892 * C396 + C50871 * C410 +
             C7891 * C397 + C50870 * C411) *
                C7894) *
               C50700 * C50667) *
              C248 +
          (((C8794 + C8793 + C8792) * C7894 + (C8791 + C8790 + C8789) * C50842 +
            (C9725 + C9726 + C9727) * C7895 +
            (C9728 + C9729 + C9730) * C50738) *
               C50700 * C50667 -
           ((C8097 + C8098 + C8099) * C50738 + (C8100 + C8101 + C8102) * C7895 +
            (C8096 + C8095 + C8094) * C50842 +
            (C8093 + C8092 + C8091) * C7894) *
               C50700 * C1544) *
              C249 +
          (((C8102 + C8101 + C8100) * C7894 + (C8099 + C8098 + C8097) * C50842 +
            (C9057 + C9058 + C9059) * C7895 +
            (C9060 + C9061 + C9062) * C50738) *
               C50700 * C1544 -
           ((C7893 * C3076 + C7888 * C3080 + C7892 * C3075 + C50871 * C3079 +
             C7891 * C3074 + C50870 * C3078) *
                C50738 +
            (C7893 * C3071 + C7888 * C3077 + C7892 * C3070 + C50871 * C3073 +
             C7891 * C3069 + C50870 * C3072) *
                C7895 +
            (C9730 + C9729 + C9728) * C50842 +
            (C9727 + C9726 + C9725) * C7894) *
               C50700 * C50667) *
              C250) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7891 * C122 + C50870 * C129 + C7892 * C123 + C50871 * C130 +
             C7893 * C124 + C7888 * C131) *
                C7894 +
            (C7891 * C133 + C50870 * C143 + C7892 * C134 + C50871 * C144 +
             C7893 * C135 + C7888 * C145) *
                C50842 +
            (C8091 + C8092 + C8093) * C7895 +
            (C8094 + C8095 + C8096) * C50738) *
               C50700 * C1544 -
           ((C8789 + C8790 + C8791) * C50738 + (C8792 + C8793 + C8794) * C7895 +
            (C7893 * C405 + C7888 * C425 + C7892 * C406 + C50871 * C426 +
             C7891 * C407 + C50870 * C427) *
                C50842 +
            (C7893 * C395 + C7888 * C409 + C7892 * C396 + C50871 * C410 +
             C7891 * C397 + C50870 * C411) *
                C7894) *
               C50700 * C50667) *
              C50587 * C895 +
          (((C7891 * C396 + C50870 * C410 + C7892 * C395 + C50871 * C409 +
             C7893 * C394 + C7888 * C408) *
                C7894 +
            (C7891 * C406 + C50870 * C426 + C7892 * C405 + C50871 * C425 +
             C7893 * C404 + C7888 * C424) *
                C50842 +
            (C8795 + C8796 + C8797) * C7895 +
            (C8798 + C8799 + C8800) * C50738) *
               C50700 * C50667 -
           ((C8108 + C8107 + C8106) * C50738 + (C8105 + C8104 + C8103) * C7895 +
            (C7893 * C136 + C7888 * C146 + C7892 * C135 + C50871 * C145 +
             C7891 * C134 + C50870 * C144) *
                C50842 +
            (C7893 * C125 + C7888 * C132 + C7892 * C124 + C50871 * C131 +
             C7891 * C123 + C50870 * C130) *
                C7894) *
               C50700 * C1544) *
              C50587 * C896 +
          (((C7891 * C124 + C50870 * C131 + C7892 * C125 + C50871 * C132 +
             C7893 * C126 + C7888 * C138) *
                C7894 +
            (C7891 * C135 + C50870 * C145 + C7892 * C136 + C50871 * C146 +
             C7893 * C137 + C7888 * C147) *
                C50842 +
            (C8419 + C8420 + C8421) * C7895 +
            (C8422 + C8423 + C8424) * C50738) *
               C50700 * C1544 -
           ((C7893 * C788 + C7888 * C794 + C7892 * C787 + C50871 * C793 +
             C7891 * C786 + C50870 * C792) *
                C50738 +
            (C7893 * C779 + C7888 * C789 + C7892 * C778 + C50871 * C783 +
             C7891 * C777 + C50870 * C782) *
                C7895 +
            (C7893 * C421 + C7888 * C432 + C7892 * C404 + C50871 * C424 +
             C7891 * C405 + C50870 * C425) *
                C50842 +
            (C7893 * C402 + C7888 * C420 + C7892 * C394 + C50871 * C408 +
             C7891 * C395 + C50870 * C409) *
                C7894) *
               C50700 * C50667) *
              C50587 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C7891 * C122 + C50870 * C129 + C7892 * C123 + C50871 * C130 +
            C7893 * C124 + C7888 * C131) *
               C7894 +
           (C7891 * C133 + C50870 * C143 + C7892 * C134 + C50871 * C144 +
            C7893 * C135 + C7888 * C145) *
               C50842 +
           (C8091 + C8092 + C8093) * C7895 + (C8094 + C8095 + C8096) * C50738) *
              C50700 * C1710 -
          ((C8789 + C8790 + C8791) * C50738 + (C8792 + C8793 + C8794) * C7895 +
           (C7893 * C405 + C7888 * C425 + C7892 * C406 + C50871 * C426 +
            C7891 * C407 + C50870 * C427) *
               C50842 +
           (C7893 * C395 + C7888 * C409 + C7892 * C396 + C50871 * C410 +
            C7891 * C397 + C50870 * C411) *
               C7894) *
              C50700 * C1711 +
          ((C7891 * C398 + C50870 * C412 + C7892 * C399 + C50871 * C413 +
            C7893 * C400 + C7888 * C414) *
               C7894 +
           (C7891 * C416 + C50870 * C428 + C7892 * C417 + C50871 * C429 +
            C7893 * C418 + C7888 * C430) *
               C50842 +
           (C9221 + C9222 + C9223) * C7895 + (C9224 + C9225 + C9226) * C50738) *
              C50700 * C1712 -
          ((C7893 * C5971 + C7888 * C5973 + C7892 * C4479 + C50871 * C4485 +
            C7891 * C4480 + C50870 * C4486) *
               C50738 +
           (C7893 * C5970 + C7888 * C5972 + C7892 * C4473 + C50871 * C4481 +
            C7891 * C4474 + C50870 * C4482) *
               C7895 +
           (C7893 * C1719 + C7888 * C1727 + C7892 * C1720 + C50871 * C1728 +
            C7891 * C1721 + C50870 * C1729) *
               C50842 +
           (C7893 * C1715 + C7888 * C1723 + C7892 * C1716 + C50871 * C1724 +
            C7891 * C1717 + C50870 * C1725) *
               C7894) *
              C50700 * C1713) *
         C50587 * C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C7891 * C122 + C50870 * C129 + C7892 * C123 + C50871 * C130 +
             C7893 * C124 + C7888 * C131) *
                C7894 +
            (C7891 * C133 + C50870 * C143 + C7892 * C134 + C50871 * C144 +
             C7893 * C135 + C7888 * C145) *
                C50842 +
            (C8091 + C8092 + C8093) * C7895 +
            (C8094 + C8095 + C8096) * C50738) *
               C50700 * C50876 -
           ((C8789 + C8790 + C8791) * C50738 + (C8792 + C8793 + C8794) * C7895 +
            (C7893 * C405 + C7888 * C425 + C7892 * C406 + C50871 * C426 +
             C7891 * C407 + C50870 * C427) *
                C50842 +
            (C7893 * C395 + C7888 * C409 + C7892 * C396 + C50871 * C410 +
             C7891 * C397 + C50870 * C411) *
                C7894) *
               C50700 * C50877 +
           ((C7891 * C398 + C50870 * C412 + C7892 * C399 + C50871 * C413 +
             C7893 * C400 + C7888 * C414) *
                C7894 +
            (C7891 * C416 + C50870 * C428 + C7892 * C417 + C50871 * C429 +
             C7893 * C418 + C7888 * C430) *
                C50842 +
            (C9221 + C9222 + C9223) * C7895 +
            (C9224 + C9225 + C9226) * C50738) *
               C50700 * C1960) *
              C50587 * C50821 +
          (((C7891 * C396 + C50870 * C410 + C7892 * C395 + C50871 * C409 +
             C7893 * C394 + C7888 * C408) *
                C7894 +
            (C7891 * C406 + C50870 * C426 + C7892 * C405 + C50871 * C425 +
             C7893 * C404 + C7888 * C424) *
                C50842 +
            (C8795 + C8796 + C8797) * C7895 +
            (C8798 + C8799 + C8800) * C50738) *
               C50700 * C50877 -
           ((C8108 + C8107 + C8106) * C50738 + (C8105 + C8104 + C8103) * C7895 +
            (C7893 * C136 + C7888 * C146 + C7892 * C135 + C50871 * C145 +
             C7891 * C134 + C50870 * C144) *
                C50842 +
            (C7893 * C125 + C7888 * C132 + C7892 * C124 + C50871 * C131 +
             C7891 * C123 + C50870 * C130) *
                C7894) *
               C50700 * C50876 -
           ((C7893 * C1087 + C7888 * C1095 + C7892 * C1088 + C50871 * C1096 +
             C7891 * C1089 + C50870 * C1097) *
                C50738 +
            (C7893 * C1083 + C7888 * C1091 + C7892 * C1084 + C50871 * C1092 +
             C7891 * C1085 + C50870 * C1093) *
                C7895 +
            (C7893 * C419 + C7888 * C431 + C7892 * C418 + C50871 * C430 +
             C7891 * C417 + C50870 * C429) *
                C50842 +
            (C7893 * C401 + C7888 * C415 + C7892 * C400 + C50871 * C414 +
             C7891 * C399 + C50870 * C413) *
                C7894) *
               C50700 * C1960) *
              C50587 * C50574)) /
        (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7891 * C122 + C50870 * C129 + C7892 * C123 + C50871 * C130 +
             C7893 * C124 + C7888 * C131) *
                C7894 +
            (C7891 * C133 + C50870 * C143 + C7892 * C134 + C50871 * C144 +
             C7893 * C135 + C7888 * C145) *
                C50842 +
            (C8091 + C8092 + C8093) * C7895 +
            (C8094 + C8095 + C8096) * C50738) *
               C50700 * C1544 -
           ((C8789 + C8790 + C8791) * C50738 + (C8792 + C8793 + C8794) * C7895 +
            (C7893 * C405 + C7888 * C425 + C7892 * C406 + C50871 * C426 +
             C7891 * C407 + C50870 * C427) *
                C50842 +
            (C7893 * C395 + C7888 * C409 + C7892 * C396 + C50871 * C410 +
             C7891 * C397 + C50870 * C411) *
                C7894) *
               C50700 * C50667) *
              C50587 * C895 +
          (((C7891 * C396 + C50870 * C410 + C7892 * C395 + C50871 * C409 +
             C7893 * C394 + C7888 * C408) *
                C7894 +
            (C7891 * C406 + C50870 * C426 + C7892 * C405 + C50871 * C425 +
             C7893 * C404 + C7888 * C424) *
                C50842 +
            (C8795 + C8796 + C8797) * C7895 +
            (C8798 + C8799 + C8800) * C50738) *
               C50700 * C50667 -
           ((C8108 + C8107 + C8106) * C50738 + (C8105 + C8104 + C8103) * C7895 +
            (C7893 * C136 + C7888 * C146 + C7892 * C135 + C50871 * C145 +
             C7891 * C134 + C50870 * C144) *
                C50842 +
            (C7893 * C125 + C7888 * C132 + C7892 * C124 + C50871 * C131 +
             C7891 * C123 + C50870 * C130) *
                C7894) *
               C50700 * C1544) *
              C50587 * C896 +
          (((C7891 * C124 + C50870 * C131 + C7892 * C125 + C50871 * C132 +
             C7893 * C126 + C7888 * C138) *
                C7894 +
            (C7891 * C135 + C50870 * C145 + C7892 * C136 + C50871 * C146 +
             C7893 * C137 + C7888 * C147) *
                C50842 +
            (C8419 + C8420 + C8421) * C7895 +
            (C8422 + C8423 + C8424) * C50738) *
               C50700 * C1544 -
           ((C7893 * C788 + C7888 * C794 + C7892 * C787 + C50871 * C793 +
             C7891 * C786 + C50870 * C792) *
                C50738 +
            (C7893 * C779 + C7888 * C789 + C7892 * C778 + C50871 * C783 +
             C7891 * C777 + C50870 * C782) *
                C7895 +
            (C7893 * C421 + C7888 * C432 + C7892 * C404 + C50871 * C424 +
             C7891 * C405 + C50870 * C425) *
                C50842 +
            (C7893 * C402 + C7888 * C420 + C7892 * C394 + C50871 * C408 +
             C7891 * C395 + C50870 * C409) *
                C7894) *
               C50700 * C50667) *
              C50587 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7891 * C122 + C50870 * C129 + C7892 * C123 + C50871 * C130 +
             C7893 * C124 + C7888 * C131) *
                C7894 +
            (C7891 * C133 + C50870 * C143 + C7892 * C134 + C50871 * C144 +
             C7893 * C135 + C7888 * C145) *
                C50842 +
            (C8091 + C8092 + C8093) * C7895 +
            (C8094 + C8095 + C8096) * C50738) *
               C50700 * C1544 -
           ((C8789 + C8790 + C8791) * C50738 + (C8792 + C8793 + C8794) * C7895 +
            (C7893 * C405 + C7888 * C425 + C7892 * C406 + C50871 * C426 +
             C7891 * C407 + C50870 * C427) *
                C50842 +
            (C7893 * C395 + C7888 * C409 + C7892 * C396 + C50871 * C410 +
             C7891 * C397 + C50870 * C411) *
                C7894) *
               C50700 * C50667) *
              C248 +
          (((C8794 + C8793 + C8792) * C7894 + (C8791 + C8790 + C8789) * C50842 +
            (C9725 + C9726 + C9727) * C7895 +
            (C9728 + C9729 + C9730) * C50738) *
               C50700 * C50667 -
           ((C8097 + C8098 + C8099) * C50738 + (C8100 + C8101 + C8102) * C7895 +
            (C8096 + C8095 + C8094) * C50842 +
            (C8093 + C8092 + C8091) * C7894) *
               C50700 * C1544) *
              C249 +
          (((C8102 + C8101 + C8100) * C7894 + (C8099 + C8098 + C8097) * C50842 +
            (C9057 + C9058 + C9059) * C7895 +
            (C9060 + C9061 + C9062) * C50738) *
               C50700 * C1544 -
           ((C7893 * C3076 + C7888 * C3080 + C7892 * C3075 + C50871 * C3079 +
             C7891 * C3074 + C50870 * C3078) *
                C50738 +
            (C7893 * C3071 + C7888 * C3077 + C7892 * C3070 + C50871 * C3073 +
             C7891 * C3069 + C50870 * C3072) *
                C7895 +
            (C9730 + C9729 + C9728) * C50842 +
            (C9727 + C9726 + C9725) * C7894) *
               C50700 * C50667) *
              C250) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                 C7894 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                 C50842 +
             (C2374 + C2375) * C7895 + (C2376 + C2377) * C50738) *
                C50843 +
            ((C5427 + C5428) * C7894 + (C5429 + C5430) * C50842 +
             (C3121 + C3120) * C7895 + (C3119 + C3118) * C50738) *
                C50764) *
               C50603 * C50829 -
           ((C4068 * C50738 + C4069 * C7895 + (C3118 + C3119) * C50842 +
             (C3120 + C3121) * C7894) *
                C50764 +
            ((C2381 + C2380) * C50738 + (C2379 + C2378) * C7895 +
             (C2377 + C2376) * C50842 + (C2375 + C2374) * C7894) *
                C50843) *
               C50603 * C50639) *
              C50872 +
          ((((C2386 + C2387) * C7894 + (C2388 + C2389) * C50842 +
             (C2390 + C2391) * C7895 + (C2392 + C2393) * C50738) *
                C50843 +
            ((C3122 + C3123) * C7894 + (C3124 + C3125) * C50842 +
             (C3126 + C3127) * C7895 + (C3128 + C3129) * C50738) *
                C50764) *
               C50603 * C50639 -
           (((C3125 + C3124) * C50738 + (C3123 + C3122) * C7895 +
             (C5442 + C5441) * C50842 + (C5440 + C5439) * C7894) *
                C50764 +
            ((C2389 + C2388) * C50738 + (C2387 + C2386) * C7895 +
             (C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                 C50842 +
             (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                 C7894) *
                C50843) *
               C50603 * C50829) *
              C50873 +
          ((((C2162 * C124 + C2157 * C131 + C2163 * C125 + C50543 * C132) *
                 C7894 +
             (C2162 * C135 + C2157 * C145 + C2163 * C136 + C50543 * C146) *
                 C50842 +
             (C2722 + C2723) * C7895 + (C2724 + C2725) * C50738) *
                C50843 +
            ((C5769 + C5770) * C7894 + (C5771 + C5772) * C50842 +
             (C14065 + C14066) * C7895 + (C14067 + C14068) * C50738) *
                C50764) *
               C50603 * C50829 -
           (((C2163 * C1434 + C50543 * C1442 + C2162 * C1435 + C2157 * C1443) *
                 C50738 +
             (C2163 * C1430 + C50543 * C1438 + C2162 * C1431 + C2157 * C1439) *
                 C7895 +
             (C14068 + C14067) * C50842 + (C14066 + C14065) * C7894) *
                C50764 +
            ((C2729 + C2728) * C50738 + (C2727 + C2726) * C7895 +
             (C2725 + C2724) * C50842 + (C2723 + C2722) * C7894) *
                C50843) *
               C50603 * C50639) *
              C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                  C7894 +
              (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                  C50842 +
              (C2374 + C2375) * C7895 + (C2376 + C2377) * C50738) *
                 C50843 +
             ((C5427 + C5428) * C7894 + (C5429 + C5430) * C50842 +
              C14521 * C7895 + C14522 * C50738) *
                 C50764) *
                C50830 -
            ((C6393 * C50738 + C6394 * C7895 + (C5434 + C5433) * C50842 +
              (C5432 + C5431) * C7894) *
                 C50764 +
             (C14523 * C50738 + C14524 * C7895 + (C5430 + C5429) * C50842 +
              (C5428 + C5427) * C7894) *
                 C50843) *
                C50667) *
               C50829 +
           (((C14521 * C7894 + C14522 * C50842 + (C3117 + C3116) * C7895 +
              (C3115 + C3114) * C50738) *
                 C50843 +
             ((C3566 + C3567) * C7894 + (C3568 + C3569) * C50842 +
              (C3570 + C3571) * C7895 + (C3572 + C3573) * C50738) *
                 C50764) *
                C50667 -
            ((C4068 * C50738 + C4069 * C7895 + C14523 * C50842 +
              C14524 * C7894) *
                 C50764 +
             ((C2381 + C2380) * C50738 + (C2379 + C2378) * C7895 +
              (C2377 + C2376) * C50842 + (C2375 + C2374) * C7894) *
                 C50843) *
                C50830) *
               C50639) *
              C251 +
          (((((C5439 + C5440) * C7894 + (C5441 + C5442) * C50842 +
              C14525 * C7895 + C14526 * C50738) *
                 C50843 +
             ((C5443 + C5444) * C7894 + (C5445 + C5446) * C50842 +
              (C5983 + C5984) * C7895 + (C5985 + C5986) * C50738) *
                 C50764) *
                C50667 -
            ((C14527 * C50738 + C14528 * C7895 + (C5442 + C5441) * C50842 +
              (C5440 + C5439) * C7894) *
                 C50764 +
             ((C2389 + C2388) * C50738 + (C2387 + C2386) * C7895 +
              (C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                  C50842 +
              (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                  C7894) *
                 C50843) *
                C50830) *
               C50829 +
           ((((C2386 + C2387) * C7894 + (C2388 + C2389) * C50842 +
              (C2390 + C2391) * C7895 + (C2392 + C2393) * C50738) *
                 C50843 +
             (C14525 * C7894 + C14526 * C50842 + (C3126 + C3127) * C7895 +
              (C3128 + C3129) * C50738) *
                 C50764) *
                C50830 -
            (((C2163 * C2554 + C50543 * C2558 + C2162 * C2553 + C2157 * C2557) *
                  C50738 +
              (C2163 * C2549 + C50543 * C2555 + C2162 * C2548 + C2157 * C2551) *
                  C7895 +
              (C5986 + C5985) * C50842 + (C5984 + C5983) * C7894) *
                 C50764 +
             ((C3129 + C3128) * C50738 + (C3127 + C3126) * C7895 +
              C14527 * C50842 + C14528 * C7894) *
                 C50843) *
                C50667) *
               C50639) *
              C50574)) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                 C7894 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                 C50842 +
             (C2374 + C2375) * C7895 + (C2376 + C2377) * C50738) *
                C50843 +
            ((C5427 + C5428) * C7894 + (C5429 + C5430) * C50842 +
             (C3121 + C3120) * C7895 + (C3119 + C3118) * C50738) *
                C50764) *
               C50603 * C248 -
           ((C4068 * C50738 + C4069 * C7895 + (C3118 + C3119) * C50842 +
             (C3120 + C3121) * C7894) *
                C50764 +
            ((C2381 + C2380) * C50738 + (C2379 + C2378) * C7895 +
             (C2377 + C2376) * C50842 + (C2375 + C2374) * C7894) *
                C50843) *
               C50603 * C249 +
           ((C2398 * C7894 + C2399 * C50842 + (C2385 + C2384) * C7895 +
             (C2383 + C2382) * C50738) *
                C50843 +
            ((C3117 + C3116) * C7894 + (C3115 + C3114) * C50842 +
             (C4078 + C4079) * C7895 + (C4080 + C4081) * C50738) *
                C50764) *
               C50603 * C250) *
              C251 +
          ((((C2386 + C2387) * C7894 + (C2388 + C2389) * C50842 +
             (C2390 + C2391) * C7895 + (C2392 + C2393) * C50738) *
                C50843 +
            ((C3122 + C3123) * C7894 + (C3124 + C3125) * C50842 +
             (C3126 + C3127) * C7895 + (C3128 + C3129) * C50738) *
                C50764) *
               C50603 * C249 -
           (((C3125 + C3124) * C50738 + (C3123 + C3122) * C7895 +
             (C5442 + C5441) * C50842 + (C5440 + C5439) * C7894) *
                C50764 +
            ((C2389 + C2388) * C50738 + (C2387 + C2386) * C7895 +
             (C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                 C50842 +
             (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                 C7894) *
                C50843) *
               C50603 * C248 -
           (((C2163 * C3076 + C50543 * C3080 + C2162 * C3075 + C2157 * C3079) *
                 C50738 +
             (C2163 * C3071 + C50543 * C3077 + C2162 * C3070 + C2157 * C3073) *
                 C7895 +
             (C3129 + C3128) * C50842 + (C3127 + C3126) * C7894) *
                C50764 +
            ((C2397 + C2396) * C50738 + (C2395 + C2394) * C7895 +
             C2400 * C50842 + C2401 * C7894) *
                C50843) *
               C50603 * C250) *
              C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                C7894 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                C50842 +
            (C2374 + C2375) * C7895 + (C2376 + C2377) * C50738) *
               C50843 +
           ((C5427 + C5428) * C7894 + (C5429 + C5430) * C50842 +
            (C3121 + C3120) * C7895 + (C3119 + C3118) * C50738) *
               C50764) *
              C50603 * C50587 * C113 -
          (((C3125 + C3124) * C50738 + (C3123 + C3122) * C7895 +
            (C5442 + C5441) * C50842 + (C5440 + C5439) * C7894) *
               C50764 +
           ((C2389 + C2388) * C50738 + (C2387 + C2386) * C7895 +
            (C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                C50842 +
            (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                C7894) *
               C50843) *
              C50603 * C50587 * C114 +
          (((C2162 * C124 + C2157 * C131 + C2163 * C125 + C50543 * C132) *
                C7894 +
            (C2162 * C135 + C2157 * C145 + C2163 * C136 + C50543 * C146) *
                C50842 +
            (C2722 + C2723) * C7895 + (C2724 + C2725) * C50738) *
               C50843 +
           ((C5769 + C5770) * C7894 + (C5771 + C5772) * C50842 +
            (C2162 * C777 + C2157 * C782 + C2163 * C778 + C50543 * C783) *
                C7895 +
            (C2162 * C786 + C2157 * C792 + C2163 * C787 + C50543 * C793) *
                C50738) *
               C50764) *
              C50603 * C50587 * C115 -
          (((C2163 * C788 + C50543 * C794 + C2162 * C787 + C2157 * C793) *
                C50738 +
            (C2163 * C779 + C50543 * C789 + C2162 * C778 + C2157 * C783) *
                C7895 +
            (C2163 * C421 + C50543 * C432 + C2162 * C404 + C2157 * C424) *
                C50842 +
            (C2163 * C402 + C50543 * C420 + C2162 * C394 + C2157 * C408) *
                C7894) *
               C50764 +
           ((C2163 * C280 + C50543 * C291 + C2162 * C263 + C2157 * C283) *
                C50738 +
            (C2163 * C261 + C50543 * C279 + C2162 * C253 + C2157 * C267) *
                C7895 +
            (C2163 * C137 + C50543 * C147 + C2162 * C136 + C2157 * C146) *
                C50842 +
            (C2163 * C126 + C50543 * C138 + C2162 * C125 + C2157 * C132) *
                C7894) *
               C50843) *
              C50603 * C50587 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                 C7894 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                 C50842 +
             (C2374 + C2375) * C7895 + (C2376 + C2377) * C50738) *
                C50843 +
            ((C5427 + C5428) * C7894 + (C5429 + C5430) * C50842 +
             (C3121 + C3120) * C7895 + (C3119 + C3118) * C50738) *
                C50764) *
               C391 -
           ((C6393 * C50738 + C6394 * C7895 + (C5434 + C5433) * C50842 +
             (C5432 + C5431) * C7894) *
                C50764 +
            ((C3118 + C3119) * C50738 + (C3120 + C3121) * C7895 +
             (C5430 + C5429) * C50842 + (C5428 + C5427) * C7894) *
                C50843) *
               C392 +
           ((C5451 * C7894 + C5452 * C50842 + (C3566 + C3567) * C7895 +
             (C3568 + C3569) * C50738) *
                C50843 +
            ((C5438 + C5437) * C7894 + (C5436 + C5435) * C50842 +
             (C6395 + C6396) * C7895 + (C6397 + C6398) * C50738) *
                C50764) *
               C393) *
              C50587 * C251 +
          ((((C5439 + C5440) * C7894 + (C5441 + C5442) * C50842 +
             (C3122 + C3123) * C7895 + (C3124 + C3125) * C50738) *
                C50843 +
            ((C5443 + C5444) * C7894 + (C5445 + C5446) * C50842 +
             (C5983 + C5984) * C7895 + (C5985 + C5986) * C50738) *
                C50764) *
               C392 -
           (((C3125 + C3124) * C50738 + (C3123 + C3122) * C7895 +
             (C5442 + C5441) * C50842 + (C5440 + C5439) * C7894) *
                C50764 +
            ((C2389 + C2388) * C50738 + (C2387 + C2386) * C7895 +
             (C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                 C50842 +
             (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                 C7894) *
                C50843) *
               C391 -
           (((C2163 * C5971 + C50543 * C5973 + C2162 * C4479 + C2157 * C4485) *
                 C50738 +
             (C2163 * C5970 + C50543 * C5972 + C2162 * C4473 + C2157 * C4481) *
                 C7895 +
             (C5450 + C5449) * C50842 + (C5448 + C5447) * C7894) *
                C50764 +
            ((C5986 + C5985) * C50738 + (C5984 + C5983) * C7895 +
             C5453 * C50842 + C5454 * C7894) *
                C50843) *
               C393) *
              C50587 * C50574)) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                 C7894 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                 C50842 +
             (C2374 + C2375) * C7895 + (C2376 + C2377) * C50738) *
                C50843 +
            ((C5427 + C5428) * C7894 + (C5429 + C5430) * C50842 +
             (C3121 + C3120) * C7895 + (C3119 + C3118) * C50738) *
                C50764) *
               C50830 -
           ((C6393 * C50738 + C6394 * C7895 + (C5434 + C5433) * C50842 +
             (C5432 + C5431) * C7894) *
                C50764 +
            ((C3118 + C3119) * C50738 + (C3120 + C3121) * C7895 +
             (C5430 + C5429) * C50842 + (C5428 + C5427) * C7894) *
                C50843) *
               C50667) *
              C50587 * C50872 +
          ((((C5439 + C5440) * C7894 + (C5441 + C5442) * C50842 +
             (C3122 + C3123) * C7895 + (C3124 + C3125) * C50738) *
                C50843 +
            ((C5443 + C5444) * C7894 + (C5445 + C5446) * C50842 +
             (C5983 + C5984) * C7895 + (C5985 + C5986) * C50738) *
                C50764) *
               C50667 -
           (((C3125 + C3124) * C50738 + (C3123 + C3122) * C7895 +
             (C5442 + C5441) * C50842 + (C5440 + C5439) * C7894) *
                C50764 +
            ((C2389 + C2388) * C50738 + (C2387 + C2386) * C7895 +
             (C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                 C50842 +
             (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                 C7894) *
                C50843) *
               C50830) *
              C50587 * C50873 +
          ((((C2162 * C124 + C2157 * C131 + C2163 * C125 + C50543 * C132) *
                 C7894 +
             (C2162 * C135 + C2157 * C145 + C2163 * C136 + C50543 * C146) *
                 C50842 +
             (C2722 + C2723) * C7895 + (C2724 + C2725) * C50738) *
                C50843 +
            ((C5769 + C5770) * C7894 + (C5771 + C5772) * C50842 +
             (C14065 + C14066) * C7895 + (C14067 + C14068) * C50738) *
                C50764) *
               C50830 -
           (((C2163 * C1087 + C50543 * C1095 + C2162 * C1088 + C2157 * C1096) *
                 C50738 +
             (C2163 * C1083 + C50543 * C1091 + C2162 * C1084 + C2157 * C1092) *
                 C7895 +
             (C5776 + C5775) * C50842 + (C5774 + C5773) * C7894) *
                C50764 +
            ((C14068 + C14067) * C50738 + (C14066 + C14065) * C7895 +
             (C5772 + C5771) * C50842 + (C5770 + C5769) * C7894) *
                C50843) *
               C50667) *
              C50587 * C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                C7894 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                C50842 +
            (C2374 + C2375) * C7895 + (C2376 + C2377) * C50738) *
               C50843 +
           ((C5427 + C5428) * C7894 + (C5429 + C5430) * C50842 +
            (C3121 + C3120) * C7895 + (C3119 + C3118) * C50738) *
               C50764) *
              C50603 * C50587 * C113 -
          (((C3125 + C3124) * C50738 + (C3123 + C3122) * C7895 +
            (C5442 + C5441) * C50842 + (C5440 + C5439) * C7894) *
               C50764 +
           ((C2389 + C2388) * C50738 + (C2387 + C2386) * C7895 +
            (C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                C50842 +
            (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                C7894) *
               C50843) *
              C50603 * C50587 * C114 +
          (((C2162 * C124 + C2157 * C131 + C2163 * C125 + C50543 * C132) *
                C7894 +
            (C2162 * C135 + C2157 * C145 + C2163 * C136 + C50543 * C146) *
                C50842 +
            (C2722 + C2723) * C7895 + (C2724 + C2725) * C50738) *
               C50843 +
           ((C5769 + C5770) * C7894 + (C5771 + C5772) * C50842 +
            (C2162 * C777 + C2157 * C782 + C2163 * C778 + C50543 * C783) *
                C7895 +
            (C2162 * C786 + C2157 * C792 + C2163 * C787 + C50543 * C793) *
                C50738) *
               C50764) *
              C50603 * C50587 * C115 -
          (((C2163 * C788 + C50543 * C794 + C2162 * C787 + C2157 * C793) *
                C50738 +
            (C2163 * C779 + C50543 * C789 + C2162 * C778 + C2157 * C783) *
                C7895 +
            (C2163 * C421 + C50543 * C432 + C2162 * C404 + C2157 * C424) *
                C50842 +
            (C2163 * C402 + C50543 * C420 + C2162 * C394 + C2157 * C408) *
                C7894) *
               C50764 +
           ((C2163 * C280 + C50543 * C291 + C2162 * C263 + C2157 * C283) *
                C50738 +
            (C2163 * C261 + C50543 * C279 + C2162 * C253 + C2157 * C267) *
                C7895 +
            (C2163 * C137 + C50543 * C147 + C2162 * C136 + C2157 * C146) *
                C50842 +
            (C2163 * C126 + C50543 * C138 + C2162 * C125 + C2157 * C132) *
                C7894) *
               C50843) *
              C50603 * C50587 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                 C7894 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                 C50842 +
             (C2374 + C2375) * C7895 + (C2376 + C2377) * C50738) *
                C50843 +
            ((C5427 + C5428) * C7894 + (C5429 + C5430) * C50842 +
             (C3121 + C3120) * C7895 + (C3119 + C3118) * C50738) *
                C50764) *
               C50603 * C248 -
           ((C4068 * C50738 + C4069 * C7895 + (C3118 + C3119) * C50842 +
             (C3120 + C3121) * C7894) *
                C50764 +
            ((C2381 + C2380) * C50738 + (C2379 + C2378) * C7895 +
             (C2377 + C2376) * C50842 + (C2375 + C2374) * C7894) *
                C50843) *
               C50603 * C249 +
           ((C2398 * C7894 + C2399 * C50842 + (C2385 + C2384) * C7895 +
             (C2383 + C2382) * C50738) *
                C50843 +
            ((C3117 + C3116) * C7894 + (C3115 + C3114) * C50842 +
             (C4078 + C4079) * C7895 + (C4080 + C4081) * C50738) *
                C50764) *
               C50603 * C250) *
              C251 +
          ((((C2386 + C2387) * C7894 + (C2388 + C2389) * C50842 +
             (C2390 + C2391) * C7895 + (C2392 + C2393) * C50738) *
                C50843 +
            ((C3122 + C3123) * C7894 + (C3124 + C3125) * C50842 +
             (C3126 + C3127) * C7895 + (C3128 + C3129) * C50738) *
                C50764) *
               C50603 * C249 -
           (((C3125 + C3124) * C50738 + (C3123 + C3122) * C7895 +
             (C5442 + C5441) * C50842 + (C5440 + C5439) * C7894) *
                C50764 +
            ((C2389 + C2388) * C50738 + (C2387 + C2386) * C7895 +
             (C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                 C50842 +
             (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                 C7894) *
                C50843) *
               C50603 * C248 -
           (((C2163 * C3076 + C50543 * C3080 + C2162 * C3075 + C2157 * C3079) *
                 C50738 +
             (C2163 * C3071 + C50543 * C3077 + C2162 * C3070 + C2157 * C3073) *
                 C7895 +
             (C3129 + C3128) * C50842 + (C3127 + C3126) * C7894) *
                C50764 +
            ((C2397 + C2396) * C50738 + (C2395 + C2394) * C7895 +
             C2400 * C50842 + C2401 * C7894) *
                C50843) *
               C50603 * C250) *
              C50574)) /
            (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                 C7894 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                 C50842 +
             (C2374 + C2375) * C7895 + (C2376 + C2377) * C50738) *
                C50843 +
            ((C5427 + C5428) * C7894 + (C5429 + C5430) * C50842 +
             C14521 * C7895 + C14522 * C50738) *
                C50764) *
               C50603 * C50874 -
           ((C4068 * C50738 + C4069 * C7895 + C14523 * C50842 +
             C14524 * C7894) *
                C50764 +
            ((C2381 + C2380) * C50738 + (C2379 + C2378) * C7895 +
             (C2377 + C2376) * C50842 + (C2375 + C2374) * C7894) *
                C50843) *
               C50603 * C50875 +
           ((C2398 * C7894 + C2399 * C50842 + (C2385 + C2384) * C7895 +
             (C2383 + C2382) * C50738) *
                C50843 +
            ((C3117 + C3116) * C7894 + (C3115 + C3114) * C50842 +
             (C4078 + C4079) * C7895 + (C4080 + C4081) * C50738) *
                C50764) *
               C50603 * C1199) *
              C50821 +
          ((((C2386 + C2387) * C7894 + (C2388 + C2389) * C50842 +
             (C2390 + C2391) * C7895 + (C2392 + C2393) * C50738) *
                C50843 +
            (C14525 * C7894 + C14526 * C50842 + (C3126 + C3127) * C7895 +
             (C3128 + C3129) * C50738) *
                C50764) *
               C50603 * C50875 -
           ((C14527 * C50738 + C14528 * C7895 + (C5442 + C5441) * C50842 +
             (C5440 + C5439) * C7894) *
                C50764 +
            ((C2389 + C2388) * C50738 + (C2387 + C2386) * C7895 +
             (C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                 C50842 +
             (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                 C7894) *
                C50843) *
               C50603 * C50874 -
           (((C2163 * C3076 + C50543 * C3080 + C2162 * C3075 + C2157 * C3079) *
                 C50738 +
             (C2163 * C3071 + C50543 * C3077 + C2162 * C3070 + C2157 * C3073) *
                 C7895 +
             (C3129 + C3128) * C50842 + (C3127 + C3126) * C7894) *
                C50764 +
            ((C2397 + C2396) * C50738 + (C2395 + C2394) * C7895 +
             C2400 * C50842 + C2401 * C7894) *
                C50843) *
               C50603 * C1199) *
              C50574)) /
        (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                 C7894 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                 C50842 +
             (C2374 + C2375) * C7895 + (C2376 + C2377) * C50738) *
                C50843 +
            ((C5427 + C5428) * C7894 + (C5429 + C5430) * C50842 +
             C14521 * C7895 + C14522 * C50738) *
                C50764) *
               C50830 -
           ((C6393 * C50738 + C6394 * C7895 + (C5434 + C5433) * C50842 +
             (C5432 + C5431) * C7894) *
                C50764 +
            (C14523 * C50738 + C14524 * C7895 + (C5430 + C5429) * C50842 +
             (C5428 + C5427) * C7894) *
                C50843) *
               C50667) *
              C50874 +
          (((C14521 * C7894 + C14522 * C50842 + C15695 * C7895 +
             C15696 * C50738) *
                C50843 +
            (C15047 * C7894 + C15048 * C50842 + (C3570 + C3571) * C7895 +
             (C3572 + C3573) * C50738) *
                C50764) *
               C50667 -
           ((C4068 * C50738 + C4069 * C7895 + C14523 * C50842 +
             C14524 * C7894) *
                C50764 +
            ((C2381 + C2380) * C50738 + (C2379 + C2378) * C7895 +
             (C2377 + C2376) * C50842 + (C2375 + C2374) * C7894) *
                C50843) *
               C50830) *
              C50875 +
          (((C2398 * C7894 + C2399 * C50842 + (C2385 + C2384) * C7895 +
             (C2383 + C2382) * C50738) *
                C50843 +
            (C15695 * C7894 + C15696 * C50842 + (C4078 + C4079) * C7895 +
             (C4080 + C4081) * C50738) *
                C50764) *
               C50830 -
           (((C2163 * C3543 + C50543 * C3547 + C2162 * C3544 + C2157 * C3548) *
                 C50738 +
             (C2163 * C3541 + C50543 * C3545 + C2162 * C3542 + C2157 * C3546) *
                 C7895 +
             (C3573 + C3572) * C50842 + (C3571 + C3570) * C7894) *
                C50764 +
            ((C4081 + C4080) * C50738 + (C4079 + C4078) * C7895 +
             C4068 * C50842 + C4069 * C7894) *
                C50843) *
               C50667) *
              C1199) *
         C50568) /
        (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                C7894 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                C50842 +
            (C2374 + C2375) * C7895 + (C2376 + C2377) * C50738) *
               C50843 +
           ((C5427 + C5428) * C7894 + (C5429 + C5430) * C50842 +
            C14521 * C7895 + C14522 * C50738) *
               C50764) *
              C50603 * C964 -
          ((C4068 * C50738 + C4069 * C7895 + C14523 * C50842 + C14524 * C7894) *
               C50764 +
           ((C2381 + C2380) * C50738 + (C2379 + C2378) * C7895 +
            (C2377 + C2376) * C50842 + (C2375 + C2374) * C7894) *
               C50843) *
              C50603 * C965 +
          ((C2398 * C7894 + C2399 * C50842 + (C2385 + C2384) * C7895 +
            (C2383 + C2382) * C50738) *
               C50843 +
           ((C3117 + C3116) * C7894 + (C3115 + C3114) * C50842 +
            (C4078 + C4079) * C7895 + (C4080 + C4081) * C50738) *
               C50764) *
              C50603 * C966 -
          (((C2163 * C4061 + C50543 * C4065 + C2162 * C4062 + C2157 * C4066) *
                C50738 +
            (C2163 * C4059 + C50543 * C4063 + C2162 * C4060 + C2157 * C4064) *
                C7895 +
            (C4081 + C4080) * C50842 + (C4079 + C4078) * C7894) *
               C50764 +
           ((C3395 + C3394) * C50738 + (C3393 + C3392) * C7895 +
            C3382 * C50842 + C3383 * C7894) *
               C50843) *
              C50603 * C967) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                 C7894 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                 C50842 +
             (C2374 + C2375) * C7895 + (C2376 + C2377) * C50738) *
                C50843 +
            ((C5427 + C5428) * C7894 + (C5429 + C5430) * C50842 +
             C14521 * C7895 + C14522 * C50738) *
                C50764) *
               C50603 * C893 -
           ((C4068 * C50738 + C4069 * C7895 + C14523 * C50842 +
             C14524 * C7894) *
                C50764 +
            ((C2381 + C2380) * C50738 + (C2379 + C2378) * C7895 +
             (C2377 + C2376) * C50842 + (C2375 + C2374) * C7894) *
                C50843) *
               C50603 * C50639) *
              C895 +
          ((((C2386 + C2387) * C7894 + (C2388 + C2389) * C50842 +
             (C2390 + C2391) * C7895 + (C2392 + C2393) * C50738) *
                C50843 +
            (C14525 * C7894 + C14526 * C50842 + (C3126 + C3127) * C7895 +
             (C3128 + C3129) * C50738) *
                C50764) *
               C50603 * C50639 -
           ((C14527 * C50738 + C14528 * C7895 + (C5442 + C5441) * C50842 +
             (C5440 + C5439) * C7894) *
                C50764 +
            ((C2389 + C2388) * C50738 + (C2387 + C2386) * C7895 +
             (C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                 C50842 +
             (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                 C7894) *
                C50843) *
               C50603 * C893) *
              C896 +
          ((((C2162 * C124 + C2157 * C131 + C2163 * C125 + C50543 * C132) *
                 C7894 +
             (C2162 * C135 + C2157 * C145 + C2163 * C136 + C50543 * C146) *
                 C50842 +
             (C2722 + C2723) * C7895 + (C2724 + C2725) * C50738) *
                C50843 +
            ((C5769 + C5770) * C7894 + (C5771 + C5772) * C50842 +
             (C14065 + C14066) * C7895 + (C14067 + C14068) * C50738) *
                C50764) *
               C50603 * C893 -
           (((C2163 * C1434 + C50543 * C1442 + C2162 * C1435 + C2157 * C1443) *
                 C50738 +
             (C2163 * C1430 + C50543 * C1438 + C2162 * C1431 + C2157 * C1439) *
                 C7895 +
             (C14068 + C14067) * C50842 + (C14066 + C14065) * C7894) *
                C50764 +
            ((C2729 + C2728) * C50738 + (C2727 + C2726) * C7895 +
             (C2725 + C2724) * C50842 + (C2723 + C2722) * C7894) *
                C50843) *
               C50603 * C50639) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                 C7894 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                 C50842 +
             (C2374 + C2375) * C7895 + (C2376 + C2377) * C50738) *
                C50843 +
            ((C5427 + C5428) * C7894 + (C5429 + C5430) * C50842 +
             C14521 * C7895 + C14522 * C50738) *
                C50764) *
               C391 -
           ((C6393 * C50738 + C6394 * C7895 + (C5434 + C5433) * C50842 +
             (C5432 + C5431) * C7894) *
                C50764 +
            (C14523 * C50738 + C14524 * C7895 + (C5430 + C5429) * C50842 +
             (C5428 + C5427) * C7894) *
                C50843) *
               C392 +
           ((C5451 * C7894 + C5452 * C50842 + C15047 * C7895 +
             C15048 * C50738) *
                C50843 +
            ((C5438 + C5437) * C7894 + (C5436 + C5435) * C50842 +
             (C6395 + C6396) * C7895 + (C6397 + C6398) * C50738) *
                C50764) *
               C393) *
              C893 +
          (((C14521 * C7894 + C14522 * C50842 + (C3117 + C3116) * C7895 +
             (C3115 + C3114) * C50738) *
                C50843 +
            (C15047 * C7894 + C15048 * C50842 + (C3570 + C3571) * C7895 +
             (C3572 + C3573) * C50738) *
                C50764) *
               C392 -
           ((C4068 * C50738 + C4069 * C7895 + C14523 * C50842 +
             C14524 * C7894) *
                C50764 +
            ((C2381 + C2380) * C50738 + (C2379 + C2378) * C7895 +
             (C2377 + C2376) * C50842 + (C2375 + C2374) * C7894) *
                C50843) *
               C391 -
           (((C2163 * C4475 + C50543 * C4483 + C2162 * C4476 + C2157 * C4484) *
                 C50738 +
             (C2163 * C4471 + C50543 * C4477 + C2162 * C4472 + C2157 * C4478) *
                 C7895 +
             (C6398 + C6397) * C50842 + (C6396 + C6395) * C7894) *
                C50764 +
            ((C3573 + C3572) * C50738 + (C3571 + C3570) * C7895 +
             C6393 * C50842 + C6394 * C7894) *
                C50843) *
               C393) *
              C50639) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                  C7894 +
              (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                  C50842 +
              (C2374 + C2375) * C7895 + (C2376 + C2377) * C50738) *
                 C50843 +
             ((C5427 + C5428) * C7894 + (C5429 + C5430) * C50842 +
              C14521 * C7895 + C14522 * C50738) *
                 C50764) *
                C50830 -
            ((C6393 * C50738 + C6394 * C7895 + (C5434 + C5433) * C50842 +
              (C5432 + C5431) * C7894) *
                 C50764 +
             (C14523 * C50738 + C14524 * C7895 + (C5430 + C5429) * C50842 +
              (C5428 + C5427) * C7894) *
                 C50843) *
                C50667) *
               C893 +
           (((C14521 * C7894 + C14522 * C50842 + (C3117 + C3116) * C7895 +
              (C3115 + C3114) * C50738) *
                 C50843 +
             (C15047 * C7894 + C15048 * C50842 + (C3570 + C3571) * C7895 +
              (C3572 + C3573) * C50738) *
                 C50764) *
                C50667 -
            ((C4068 * C50738 + C4069 * C7895 + C14523 * C50842 +
              C14524 * C7894) *
                 C50764 +
             ((C2381 + C2380) * C50738 + (C2379 + C2378) * C7895 +
              (C2377 + C2376) * C50842 + (C2375 + C2374) * C7894) *
                 C50843) *
                C50830) *
               C50639) *
              C50821 +
          (((((C5439 + C5440) * C7894 + (C5441 + C5442) * C50842 +
              C14525 * C7895 + C14526 * C50738) *
                 C50843 +
             ((C5443 + C5444) * C7894 + (C5445 + C5446) * C50842 +
              (C5983 + C5984) * C7895 + (C5985 + C5986) * C50738) *
                 C50764) *
                C50667 -
            ((C14527 * C50738 + C14528 * C7895 + (C5442 + C5441) * C50842 +
              (C5440 + C5439) * C7894) *
                 C50764 +
             ((C2389 + C2388) * C50738 + (C2387 + C2386) * C7895 +
              (C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                  C50842 +
              (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                  C7894) *
                 C50843) *
                C50830) *
               C893 +
           ((((C2386 + C2387) * C7894 + (C2388 + C2389) * C50842 +
              (C2390 + C2391) * C7895 + (C2392 + C2393) * C50738) *
                 C50843 +
             (C14525 * C7894 + C14526 * C50842 + (C3126 + C3127) * C7895 +
              (C3128 + C3129) * C50738) *
                 C50764) *
                C50830 -
            (((C2163 * C2554 + C50543 * C2558 + C2162 * C2553 + C2157 * C2557) *
                  C50738 +
              (C2163 * C2549 + C50543 * C2555 + C2162 * C2548 + C2157 * C2551) *
                  C7895 +
              (C5986 + C5985) * C50842 + (C5984 + C5983) * C7894) *
                 C50764 +
             ((C3129 + C3128) * C50738 + (C3127 + C3126) * C7895 +
              C14527 * C50842 + C14528 * C7894) *
                 C50843) *
                C50667) *
               C50639) *
              C50574)) /
        (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                 C7894 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                 C50842 +
             (C2374 + C2375) * C7895 + (C2376 + C2377) * C50738) *
                C50843 +
            ((C5427 + C5428) * C7894 + (C5429 + C5430) * C50842 +
             C14521 * C7895 + C14522 * C50738) *
                C50764) *
               C50603 * C893 -
           ((C4068 * C50738 + C4069 * C7895 + C14523 * C50842 +
             C14524 * C7894) *
                C50764 +
            ((C2381 + C2380) * C50738 + (C2379 + C2378) * C7895 +
             (C2377 + C2376) * C50842 + (C2375 + C2374) * C7894) *
                C50843) *
               C50603 * C50639) *
              C895 +
          ((((C2386 + C2387) * C7894 + (C2388 + C2389) * C50842 +
             (C2390 + C2391) * C7895 + (C2392 + C2393) * C50738) *
                C50843 +
            (C14525 * C7894 + C14526 * C50842 + (C3126 + C3127) * C7895 +
             (C3128 + C3129) * C50738) *
                C50764) *
               C50603 * C50639 -
           ((C14527 * C50738 + C14528 * C7895 + (C5442 + C5441) * C50842 +
             (C5440 + C5439) * C7894) *
                C50764 +
            ((C2389 + C2388) * C50738 + (C2387 + C2386) * C7895 +
             (C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                 C50842 +
             (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                 C7894) *
                C50843) *
               C50603 * C893) *
              C896 +
          ((((C2162 * C124 + C2157 * C131 + C2163 * C125 + C50543 * C132) *
                 C7894 +
             (C2162 * C135 + C2157 * C145 + C2163 * C136 + C50543 * C146) *
                 C50842 +
             (C2722 + C2723) * C7895 + (C2724 + C2725) * C50738) *
                C50843 +
            ((C5769 + C5770) * C7894 + (C5771 + C5772) * C50842 +
             (C14065 + C14066) * C7895 + (C14067 + C14068) * C50738) *
                C50764) *
               C50603 * C893 -
           (((C2163 * C1434 + C50543 * C1442 + C2162 * C1435 + C2157 * C1443) *
                 C50738 +
             (C2163 * C1430 + C50543 * C1438 + C2162 * C1431 + C2157 * C1439) *
                 C7895 +
             (C14068 + C14067) * C50842 + (C14066 + C14065) * C7894) *
                C50764 +
            ((C2729 + C2728) * C50738 + (C2727 + C2726) * C7895 +
             (C2725 + C2724) * C50842 + (C2723 + C2722) * C7894) *
                C50843) *
               C50603 * C50639) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                C7894 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                C50842 +
            (C2374 + C2375) * C7895 + (C2376 + C2377) * C50738) *
               C50843 +
           ((C5427 + C5428) * C7894 + (C5429 + C5430) * C50842 +
            C14521 * C7895 + C14522 * C50738) *
               C50764) *
              C50603 * C964 -
          ((C4068 * C50738 + C4069 * C7895 + C14523 * C50842 + C14524 * C7894) *
               C50764 +
           ((C2381 + C2380) * C50738 + (C2379 + C2378) * C7895 +
            (C2377 + C2376) * C50842 + (C2375 + C2374) * C7894) *
               C50843) *
              C50603 * C965 +
          ((C2398 * C7894 + C2399 * C50842 + (C2385 + C2384) * C7895 +
            (C2383 + C2382) * C50738) *
               C50843 +
           ((C3117 + C3116) * C7894 + (C3115 + C3114) * C50842 +
            (C4078 + C4079) * C7895 + (C4080 + C4081) * C50738) *
               C50764) *
              C50603 * C966 -
          (((C2163 * C4061 + C50543 * C4065 + C2162 * C4062 + C2157 * C4066) *
                C50738 +
            (C2163 * C4059 + C50543 * C4063 + C2162 * C4060 + C2157 * C4064) *
                C7895 +
            (C4081 + C4080) * C50842 + (C4079 + C4078) * C7894) *
               C50764 +
           ((C3395 + C3394) * C50738 + (C3393 + C3392) * C7895 +
            C3382 * C50842 + C3383 * C7894) *
               C50843) *
              C50603 * C967) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                  C7894 +
              (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                  C50842 +
              (C2374 + C2375) * C7895 + (C2376 + C2377) * C50738) *
                 C50843 +
             ((C5427 + C5428) * C7894 + (C5429 + C5430) * C50842 +
              C14521 * C7895 + C14522 * C50738) *
                 C50764) *
                C1544 -
            ((C6393 * C50738 + C6394 * C7895 + (C5434 + C5433) * C50842 +
              (C5432 + C5431) * C7894) *
                 C50764 +
             (C14523 * C50738 + C14524 * C7895 + (C5430 + C5429) * C50842 +
              (C5428 + C5427) * C7894) *
                 C50843) *
                C50667) *
               C50829 +
           (((C14521 * C7894 + C14522 * C50842 + C15695 * C7895 +
              C15696 * C50738) *
                 C50843 +
             (C15047 * C7894 + C15048 * C50842 + (C3570 + C3571) * C7895 +
              (C3572 + C3573) * C50738) *
                 C50764) *
                C50667 -
            ((C4068 * C50738 + C4069 * C7895 + C14523 * C50842 +
              C14524 * C7894) *
                 C50764 +
             ((C2381 + C2380) * C50738 + (C2379 + C2378) * C7895 +
              (C2377 + C2376) * C50842 + (C2375 + C2374) * C7894) *
                 C50843) *
                C1544) *
               C50639) *
              C50821 +
          (((((C5439 + C5440) * C7894 + (C5441 + C5442) * C50842 +
              C14525 * C7895 + C14526 * C50738) *
                 C50843 +
             ((C5443 + C5444) * C7894 + (C5445 + C5446) * C50842 +
              (C5983 + C5984) * C7895 + (C5985 + C5986) * C50738) *
                 C50764) *
                C50667 -
            ((C14527 * C50738 + C14528 * C7895 + (C5442 + C5441) * C50842 +
              (C5440 + C5439) * C7894) *
                 C50764 +
             ((C2389 + C2388) * C50738 + (C2387 + C2386) * C7895 +
              (C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                  C50842 +
              (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                  C7894) *
                 C50843) *
                C1544) *
               C50829 +
           ((((C2386 + C2387) * C7894 + (C2388 + C2389) * C50842 +
              (C2390 + C2391) * C7895 + (C2392 + C2393) * C50738) *
                 C50843 +
             (C14525 * C7894 + C14526 * C50842 + (C3126 + C3127) * C7895 +
              (C3128 + C3129) * C50738) *
                 C50764) *
                C1544 -
            (((C2163 * C2554 + C50543 * C2558 + C2162 * C2553 + C2157 * C2557) *
                  C50738 +
              (C2163 * C2549 + C50543 * C2555 + C2162 * C2548 + C2157 * C2551) *
                  C7895 +
              (C5986 + C5985) * C50842 + (C5984 + C5983) * C7894) *
                 C50764 +
             ((C3129 + C3128) * C50738 + (C3127 + C3126) * C7895 +
              C14527 * C50842 + C14528 * C7894) *
                 C50843) *
                C50667) *
               C50639) *
              C50574)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                 C7894 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                 C50842 +
             (C2374 + C2375) * C7895 + (C2376 + C2377) * C50738) *
                C50843 +
            ((C5427 + C5428) * C7894 + (C5429 + C5430) * C50842 +
             C14521 * C7895 + C14522 * C50738) *
                C50764) *
               C50876 -
           ((C6393 * C50738 + C6394 * C7895 + (C5434 + C5433) * C50842 +
             (C5432 + C5431) * C7894) *
                C50764 +
            (C14523 * C50738 + C14524 * C7895 + (C5430 + C5429) * C50842 +
             (C5428 + C5427) * C7894) *
                C50843) *
               C50877 +
           ((C5451 * C7894 + C5452 * C50842 + C15047 * C7895 +
             C15048 * C50738) *
                C50843 +
            ((C5438 + C5437) * C7894 + (C5436 + C5435) * C50842 +
             (C6395 + C6396) * C7895 + (C6397 + C6398) * C50738) *
                C50764) *
               C1960) *
              C50829 +
          (((C14521 * C7894 + C14522 * C50842 + C15695 * C7895 +
             C15696 * C50738) *
                C50843 +
            (C15047 * C7894 + C15048 * C50842 + (C3570 + C3571) * C7895 +
             (C3572 + C3573) * C50738) *
                C50764) *
               C50877 -
           ((C4068 * C50738 + C4069 * C7895 + C14523 * C50842 +
             C14524 * C7894) *
                C50764 +
            ((C2381 + C2380) * C50738 + (C2379 + C2378) * C7895 +
             (C2377 + C2376) * C50842 + (C2375 + C2374) * C7894) *
                C50843) *
               C50876 -
           (((C2163 * C4475 + C50543 * C4483 + C2162 * C4476 + C2157 * C4484) *
                 C50738 +
             (C2163 * C4471 + C50543 * C4477 + C2162 * C4472 + C2157 * C4478) *
                 C7895 +
             (C6398 + C6397) * C50842 + (C6396 + C6395) * C7894) *
                C50764 +
            ((C3573 + C3572) * C50738 + (C3571 + C3570) * C7895 +
             C6393 * C50842 + C6394 * C7894) *
                C50843) *
               C1960) *
              C50639) *
         C50568) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                 C7894 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                 C50842 +
             (C2374 + C2375) * C7895 + (C2376 + C2377) * C50738) *
                C50843 +
            ((C5427 + C5428) * C7894 + (C5429 + C5430) * C50842 +
             C14521 * C7895 + C14522 * C50738) *
                C50764) *
               C1544 -
           ((C6393 * C50738 + C6394 * C7895 + (C5434 + C5433) * C50842 +
             (C5432 + C5431) * C7894) *
                C50764 +
            (C14523 * C50738 + C14524 * C7895 + (C5430 + C5429) * C50842 +
             (C5428 + C5427) * C7894) *
                C50843) *
               C50667) *
              C248 +
          (((C14521 * C7894 + C14522 * C50842 + C15695 * C7895 +
             C15696 * C50738) *
                C50843 +
            (C15047 * C7894 + C15048 * C50842 + (C3570 + C3571) * C7895 +
             (C3572 + C3573) * C50738) *
                C50764) *
               C50667 -
           ((C4068 * C50738 + C4069 * C7895 + C14523 * C50842 +
             C14524 * C7894) *
                C50764 +
            ((C2381 + C2380) * C50738 + (C2379 + C2378) * C7895 +
             (C2377 + C2376) * C50842 + (C2375 + C2374) * C7894) *
                C50843) *
               C1544) *
              C249 +
          (((C2398 * C7894 + C2399 * C50842 + (C2385 + C2384) * C7895 +
             (C2383 + C2382) * C50738) *
                C50843 +
            (C15695 * C7894 + C15696 * C50842 + (C4078 + C4079) * C7895 +
             (C4080 + C4081) * C50738) *
                C50764) *
               C1544 -
           (((C2163 * C3543 + C50543 * C3547 + C2162 * C3544 + C2157 * C3548) *
                 C50738 +
             (C2163 * C3541 + C50543 * C3545 + C2162 * C3542 + C2157 * C3546) *
                 C7895 +
             (C3573 + C3572) * C50842 + (C3571 + C3570) * C7894) *
                C50764 +
            ((C4081 + C4080) * C50738 + (C4079 + C4078) * C7895 +
             C4068 * C50842 + C4069 * C7894) *
                C50843) *
               C50667) *
              C250) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                 C7894 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                 C50842 +
             (C2374 + C2375) * C7895 + (C2376 + C2377) * C50738) *
                C50843 +
            ((C5427 + C5428) * C7894 + (C5429 + C5430) * C50842 +
             C14521 * C7895 + C14522 * C50738) *
                C50764) *
               C1544 -
           ((C6393 * C50738 + C6394 * C7895 + (C5434 + C5433) * C50842 +
             (C5432 + C5431) * C7894) *
                C50764 +
            (C14523 * C50738 + C14524 * C7895 + (C5430 + C5429) * C50842 +
             (C5428 + C5427) * C7894) *
                C50843) *
               C50667) *
              C50587 * C895 +
          ((((C5439 + C5440) * C7894 + (C5441 + C5442) * C50842 +
             C14525 * C7895 + C14526 * C50738) *
                C50843 +
            ((C5443 + C5444) * C7894 + (C5445 + C5446) * C50842 +
             (C5983 + C5984) * C7895 + (C5985 + C5986) * C50738) *
                C50764) *
               C50667 -
           ((C14527 * C50738 + C14528 * C7895 + (C5442 + C5441) * C50842 +
             (C5440 + C5439) * C7894) *
                C50764 +
            ((C2389 + C2388) * C50738 + (C2387 + C2386) * C7895 +
             (C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                 C50842 +
             (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                 C7894) *
                C50843) *
               C1544) *
              C50587 * C896 +
          ((((C2162 * C124 + C2157 * C131 + C2163 * C125 + C50543 * C132) *
                 C7894 +
             (C2162 * C135 + C2157 * C145 + C2163 * C136 + C50543 * C146) *
                 C50842 +
             (C2722 + C2723) * C7895 + (C2724 + C2725) * C50738) *
                C50843 +
            ((C5769 + C5770) * C7894 + (C5771 + C5772) * C50842 +
             (C14065 + C14066) * C7895 + (C14067 + C14068) * C50738) *
                C50764) *
               C1544 -
           (((C2163 * C1087 + C50543 * C1095 + C2162 * C1088 + C2157 * C1096) *
                 C50738 +
             (C2163 * C1083 + C50543 * C1091 + C2162 * C1084 + C2157 * C1092) *
                 C7895 +
             (C5776 + C5775) * C50842 + (C5774 + C5773) * C7894) *
                C50764 +
            ((C14068 + C14067) * C50738 + (C14066 + C14065) * C7895 +
             (C5772 + C5771) * C50842 + (C5770 + C5769) * C7894) *
                C50843) *
               C50667) *
              C50587 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                C7894 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                C50842 +
            (C2374 + C2375) * C7895 + (C2376 + C2377) * C50738) *
               C50843 +
           ((C5427 + C5428) * C7894 + (C5429 + C5430) * C50842 +
            C14521 * C7895 + C14522 * C50738) *
               C50764) *
              C1710 -
          ((C6393 * C50738 + C6394 * C7895 + (C5434 + C5433) * C50842 +
            (C5432 + C5431) * C7894) *
               C50764 +
           (C14523 * C50738 + C14524 * C7895 + (C5430 + C5429) * C50842 +
            (C5428 + C5427) * C7894) *
               C50843) *
              C1711 +
          ((C5451 * C7894 + C5452 * C50842 + C15047 * C7895 + C15048 * C50738) *
               C50843 +
           ((C5438 + C5437) * C7894 + (C5436 + C5435) * C50842 +
            (C6395 + C6396) * C7895 + (C6397 + C6398) * C50738) *
               C50764) *
              C1712 -
          (((C2163 * C6378 + C50543 * C6382 + C2162 * C6379 + C2157 * C6383) *
                C50738 +
            (C2163 * C6376 + C50543 * C6380 + C2162 * C6377 + C2157 * C6381) *
                C7895 +
            (C7301 + C7300) * C50842 + (C7299 + C7298) * C7894) *
               C50764 +
           ((C6398 + C6397) * C50738 + (C6396 + C6395) * C7895 +
            C7286 * C50842 + C7287 * C7894) *
               C50843) *
              C1713) *
         C50587 * C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                 C7894 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                 C50842 +
             (C2374 + C2375) * C7895 + (C2376 + C2377) * C50738) *
                C50843 +
            ((C5427 + C5428) * C7894 + (C5429 + C5430) * C50842 +
             C14521 * C7895 + C14522 * C50738) *
                C50764) *
               C50876 -
           ((C6393 * C50738 + C6394 * C7895 + (C5434 + C5433) * C50842 +
             (C5432 + C5431) * C7894) *
                C50764 +
            (C14523 * C50738 + C14524 * C7895 + (C5430 + C5429) * C50842 +
             (C5428 + C5427) * C7894) *
                C50843) *
               C50877 +
           ((C5451 * C7894 + C5452 * C50842 + C15047 * C7895 +
             C15048 * C50738) *
                C50843 +
            ((C5438 + C5437) * C7894 + (C5436 + C5435) * C50842 +
             (C6395 + C6396) * C7895 + (C6397 + C6398) * C50738) *
                C50764) *
               C1960) *
              C50587 * C50821 +
          ((((C5439 + C5440) * C7894 + (C5441 + C5442) * C50842 +
             C14525 * C7895 + C14526 * C50738) *
                C50843 +
            ((C5443 + C5444) * C7894 + (C5445 + C5446) * C50842 +
             (C5983 + C5984) * C7895 + (C5985 + C5986) * C50738) *
                C50764) *
               C50877 -
           ((C14527 * C50738 + C14528 * C7895 + (C5442 + C5441) * C50842 +
             (C5440 + C5439) * C7894) *
                C50764 +
            ((C2389 + C2388) * C50738 + (C2387 + C2386) * C7895 +
             (C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                 C50842 +
             (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                 C7894) *
                C50843) *
               C50876 -
           (((C2163 * C5971 + C50543 * C5973 + C2162 * C4479 + C2157 * C4485) *
                 C50738 +
             (C2163 * C5970 + C50543 * C5972 + C2162 * C4473 + C2157 * C4481) *
                 C7895 +
             (C5450 + C5449) * C50842 + (C5448 + C5447) * C7894) *
                C50764 +
            ((C5986 + C5985) * C50738 + (C5984 + C5983) * C7895 +
             C5453 * C50842 + C5454 * C7894) *
                C50843) *
               C1960) *
              C50587 * C50574)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                 C7894 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                 C50842 +
             (C2374 + C2375) * C7895 + (C2376 + C2377) * C50738) *
                C50843 +
            ((C5427 + C5428) * C7894 + (C5429 + C5430) * C50842 +
             C14521 * C7895 + C14522 * C50738) *
                C50764) *
               C1544 -
           ((C6393 * C50738 + C6394 * C7895 + (C5434 + C5433) * C50842 +
             (C5432 + C5431) * C7894) *
                C50764 +
            (C14523 * C50738 + C14524 * C7895 + (C5430 + C5429) * C50842 +
             (C5428 + C5427) * C7894) *
                C50843) *
               C50667) *
              C50587 * C895 +
          ((((C5439 + C5440) * C7894 + (C5441 + C5442) * C50842 +
             C14525 * C7895 + C14526 * C50738) *
                C50843 +
            ((C5443 + C5444) * C7894 + (C5445 + C5446) * C50842 +
             (C5983 + C5984) * C7895 + (C5985 + C5986) * C50738) *
                C50764) *
               C50667 -
           ((C14527 * C50738 + C14528 * C7895 + (C5442 + C5441) * C50842 +
             (C5440 + C5439) * C7894) *
                C50764 +
            ((C2389 + C2388) * C50738 + (C2387 + C2386) * C7895 +
             (C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                 C50842 +
             (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                 C7894) *
                C50843) *
               C1544) *
              C50587 * C896 +
          ((((C2162 * C124 + C2157 * C131 + C2163 * C125 + C50543 * C132) *
                 C7894 +
             (C2162 * C135 + C2157 * C145 + C2163 * C136 + C50543 * C146) *
                 C50842 +
             (C2722 + C2723) * C7895 + (C2724 + C2725) * C50738) *
                C50843 +
            ((C5769 + C5770) * C7894 + (C5771 + C5772) * C50842 +
             (C14065 + C14066) * C7895 + (C14067 + C14068) * C50738) *
                C50764) *
               C1544 -
           (((C2163 * C1087 + C50543 * C1095 + C2162 * C1088 + C2157 * C1096) *
                 C50738 +
             (C2163 * C1083 + C50543 * C1091 + C2162 * C1084 + C2157 * C1092) *
                 C7895 +
             (C5776 + C5775) * C50842 + (C5774 + C5773) * C7894) *
                C50764 +
            ((C14068 + C14067) * C50738 + (C14066 + C14065) * C7895 +
             (C5772 + C5771) * C50842 + (C5770 + C5769) * C7894) *
                C50843) *
               C50667) *
              C50587 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                 C7894 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                 C50842 +
             (C2374 + C2375) * C7895 + (C2376 + C2377) * C50738) *
                C50843 +
            ((C5427 + C5428) * C7894 + (C5429 + C5430) * C50842 +
             C14521 * C7895 + C14522 * C50738) *
                C50764) *
               C1544 -
           ((C6393 * C50738 + C6394 * C7895 + (C5434 + C5433) * C50842 +
             (C5432 + C5431) * C7894) *
                C50764 +
            (C14523 * C50738 + C14524 * C7895 + (C5430 + C5429) * C50842 +
             (C5428 + C5427) * C7894) *
                C50843) *
               C50667) *
              C248 +
          (((C14521 * C7894 + C14522 * C50842 + C15695 * C7895 +
             C15696 * C50738) *
                C50843 +
            (C15047 * C7894 + C15048 * C50842 + (C3570 + C3571) * C7895 +
             (C3572 + C3573) * C50738) *
                C50764) *
               C50667 -
           ((C4068 * C50738 + C4069 * C7895 + C14523 * C50842 +
             C14524 * C7894) *
                C50764 +
            ((C2381 + C2380) * C50738 + (C2379 + C2378) * C7895 +
             (C2377 + C2376) * C50842 + (C2375 + C2374) * C7894) *
                C50843) *
               C1544) *
              C249 +
          (((C2398 * C7894 + C2399 * C50842 + (C2385 + C2384) * C7895 +
             (C2383 + C2382) * C50738) *
                C50843 +
            (C15695 * C7894 + C15696 * C50842 + (C4078 + C4079) * C7895 +
             (C4080 + C4081) * C50738) *
                C50764) *
               C1544 -
           (((C2163 * C3543 + C50543 * C3547 + C2162 * C3544 + C2157 * C3548) *
                 C50738 +
             (C2163 * C3541 + C50543 * C3545 + C2162 * C3542 + C2157 * C3546) *
                 C7895 +
             (C3573 + C3572) * C50842 + (C3571 + C3570) * C7894) *
                C50764 +
            ((C4081 + C4080) * C50738 + (C4079 + C4078) * C7895 +
             C4068 * C50842 + C4069 * C7894) *
                C50843) *
               C50667) *
              C250) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                C2164 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                C2159 +
            (C2374 + C2375) * C2165 + (C2376 + C2377) * C2160 + C2398 * C2166 +
            C2399 * C2161) *
               C50700 * C50603 * C50829 -
           ((C2382 + C2383) * C2161 + (C2384 + C2385) * C2166 +
            (C2381 + C2380) * C2160 + (C2379 + C2378) * C2165 +
            (C2377 + C2376) * C2159 + (C2375 + C2374) * C2164) *
               C50700 * C50603 * C50639) *
              C50872 +
          (((C2386 + C2387) * C2164 + (C2388 + C2389) * C2159 +
            (C2390 + C2391) * C2165 + (C2392 + C2393) * C2160 +
            (C2394 + C2395) * C2166 + (C2396 + C2397) * C2161) *
               C50700 * C50603 * C50639 -
           (C2400 * C2161 + C2401 * C2166 + (C2389 + C2388) * C2160 +
            (C2387 + C2386) * C2165 +
            (C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                C2159 +
            (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                C2164) *
               C50700 * C50603 * C50829) *
              C50873 +
          (((C2162 * C124 + C2157 * C131 + C2163 * C125 + C50543 * C132) *
                C2164 +
            (C2162 * C135 + C2157 * C145 + C2163 * C136 + C50543 * C146) *
                C2159 +
            (C2722 + C2723) * C2165 + (C2724 + C2725) * C2160 +
            (C2726 + C2727) * C2166 + (C2728 + C2729) * C2161) *
               C50700 * C50603 * C50829 -
           ((C2163 * C973 + C50543 * C981 + C2162 * C974 + C2157 * C982) *
                C2161 +
            (C2163 * C969 + C50543 * C977 + C2162 * C970 + C2157 * C978) *
                C2166 +
            (C2729 + C2728) * C2160 + (C2727 + C2726) * C2165 +
            (C2725 + C2724) * C2159 + (C2723 + C2722) * C2164) *
               C50700 * C50603 * C50639) *
              C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50688) *
               C50700 * C50603 * C50829 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50688 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50700 * C50603 * C50639) *
              C50872 +
          (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
             C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                C121 +
            (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
             C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                C50688) *
               C50700 * C50603 * C50639 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50688 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50700 * C50603 * C50829) *
              C50873 +
          (((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
             C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                C121 +
            (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
             C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                C50688) *
               C50700 * C50603 * C50829 -
           ((C120 * C538 + C108 * C540 + C119 * C280 + C107 * C291 +
             C118 * C263 + C106 * C283 + C117 * C264 + C105 * C284) *
                C50688 +
            (C120 * C537 + C108 * C539 + C119 * C261 + C107 * C279 +
             C118 * C253 + C106 * C267 + C117 * C254 + C105 * C268) *
                C121) *
               C50700 * C50603 * C50639) *
              C536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                 C50688) *
                C5071 +
            ((C5427 + C5428) * C121 + (C5429 + C5430) * C50688) * C5072 +
            C5459 * C5073) *
               C50603 * C50829 -
           (((C3569 + C3568) * C50688 + (C3567 + C3566) * C121) * C5073 +
            ((C3118 + C3119) * C50688 + (C3120 + C3121) * C121) * C5072 +
            ((C2377 + C2376) * C50688 + (C2375 + C2374) * C121) * C5071) *
               C50603 * C50639) *
              C50872 +
          ((((C2386 + C2387) * C121 + (C2388 + C2389) * C50688) * C5071 +
            ((C3122 + C3123) * C121 + (C3124 + C3125) * C50688) * C5072 +
            ((C2162 * C1085 + C2157 * C1093 + C2163 * C1084 + C50543 * C1092) *
                 C121 +
             (C2162 * C1089 + C2157 * C1097 + C2163 * C1088 + C50543 * C1096) *
                 C50688) *
                C5073) *
               C50603 * C50639 -
           (C5460 * C5073 +
            ((C5442 + C5441) * C50688 + (C5440 + C5439) * C121) * C5072 +
            ((C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                 C50688 +
             (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                 C121) *
                C5071) *
               C50603 * C50829) *
              C50873 +
          ((((C2162 * C124 + C2157 * C131 + C2163 * C125 + C50543 * C132) *
                 C121 +
             (C2162 * C135 + C2157 * C145 + C2163 * C136 + C50543 * C146) *
                 C50688) *
                C5071 +
            ((C2162 * C395 + C2157 * C409 + C2163 * C394 + C50543 * C408) *
                 C121 +
             (C2162 * C405 + C2157 * C425 + C2163 * C404 + C50543 * C424) *
                 C50688) *
                C5072 +
            ((C2162 * C400 + C2157 * C414 + C2163 * C401 + C50543 * C415) *
                 C121 +
             (C2162 * C418 + C2157 * C430 + C2163 * C419 + C50543 * C431) *
                 C50688) *
                C5073) *
               C50603 * C50829 -
           (((C2163 * C1087 + C50543 * C1095 + C2162 * C1088 + C2157 * C1096) *
                 C50688 +
             (C2163 * C1083 + C50543 * C1091 + C2162 * C1084 + C2157 * C1092) *
                 C121) *
                C5073 +
            ((C2163 * C787 + C50543 * C793 + C2162 * C786 + C2157 * C792) *
                 C50688 +
             (C2163 * C778 + C50543 * C783 + C2162 * C777 + C2157 * C782) *
                 C121) *
                C5072 +
            ((C2725 + C2724) * C50688 + (C2723 + C2722) * C121) * C5071) *
               C50603 * C50639) *
              C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                 C2164 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                 C2159 +
             (C2374 + C2375) * C2165 + (C2376 + C2377) * C2160 + C2398 * C2166 +
             C2399 * C2161) *
                C50700 * C50830 -
            ((C3114 + C3115) * C2161 + (C3116 + C3117) * C2166 +
             (C3118 + C3119) * C2160 + (C3120 + C3121) * C2165 +
             (C2163 * C406 + C50543 * C426 + C2162 * C407 + C2157 * C427) *
                 C2159 +
             (C2163 * C396 + C50543 * C410 + C2162 * C397 + C2157 * C411) *
                 C2164) *
                C50700 * C50667) *
               C50829 +
           (((C3121 + C3120) * C2164 + (C3119 + C3118) * C2159 +
             (C3117 + C3116) * C2165 + (C3115 + C3114) * C2160 +
             (C2162 * C3069 + C2157 * C3072 + C2163 * C3070 + C50543 * C3073) *
                 C2166 +
             (C2162 * C3074 + C2157 * C3078 + C2163 * C3075 + C50543 * C3079) *
                 C2161) *
                C50700 * C50667 -
            ((C2382 + C2383) * C2161 + (C2384 + C2385) * C2166 +
             (C2381 + C2380) * C2160 + (C2379 + C2378) * C2165 +
             (C2377 + C2376) * C2159 + (C2375 + C2374) * C2164) *
                C50700 * C50830) *
               C50639) *
              C251 +
          ((((C2162 * C396 + C2157 * C410 + C2163 * C395 + C50543 * C409) *
                 C2164 +
             (C2162 * C406 + C2157 * C426 + C2163 * C405 + C50543 * C425) *
                 C2159 +
             (C3122 + C3123) * C2165 + (C3124 + C3125) * C2160 +
             (C3126 + C3127) * C2166 + (C3128 + C3129) * C2161) *
                C50700 * C50667 -
            (C2400 * C2161 + C2401 * C2166 + (C2389 + C2388) * C2160 +
             (C2387 + C2386) * C2165 +
             (C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                 C2159 +
             (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                 C2164) *
                C50700 * C50830) *
               C50829 +
           (((C2386 + C2387) * C2164 + (C2388 + C2389) * C2159 +
             (C2390 + C2391) * C2165 + (C2392 + C2393) * C2160 +
             (C2394 + C2395) * C2166 + (C2396 + C2397) * C2161) *
                C50700 * C50830 -
            ((C2163 * C3076 + C50543 * C3080 + C2162 * C3075 + C2157 * C3079) *
                 C2161 +
             (C2163 * C3071 + C50543 * C3077 + C2162 * C3070 + C2157 * C3073) *
                 C2166 +
             (C3129 + C3128) * C2160 + (C3127 + C3126) * C2165 +
             (C3125 + C3124) * C2159 + (C3123 + C3122) * C2164) *
                C50700 * C50667) *
               C50639) *
              C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
              C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                 C121 +
             (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
              C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                 C50688) *
                C50700 * C50830 -
            ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
              C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                 C50688 +
             (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
              C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                 C121) *
                C50700 * C50667) *
               C50829 +
           (((C117 * C775 + C105 * C780 + C118 * C776 + C106 * C781 +
              C119 * C777 + C107 * C782 + C120 * C778 + C108 * C783) *
                 C121 +
             (C117 * C784 + C105 * C790 + C118 * C785 + C106 * C791 +
              C119 * C786 + C107 * C792 + C120 * C787 + C108 * C793) *
                 C50688) *
                C50700 * C50667 -
            ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
              C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                 C50688 +
             (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
              C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                 C121) *
                C50700 * C50830) *
               C50639) *
              C251 +
          ((((C117 * C396 + C105 * C410 + C118 * C395 + C106 * C409 +
              C119 * C394 + C107 * C408 + C120 * C402 + C108 * C420) *
                 C121 +
             (C117 * C406 + C105 * C426 + C118 * C405 + C106 * C425 +
              C119 * C404 + C107 * C424 + C120 * C421 + C108 * C432) *
                 C50688) *
                C50700 * C50667 -
            ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
              C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                 C50688 +
             (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
              C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                 C121) *
                C50700 * C50830) *
               C50829 +
           (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
              C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                 C121 +
             (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
              C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                 C50688) *
                C50700 * C50830 -
            ((C120 * C788 + C108 * C794 + C119 * C787 + C107 * C793 +
              C118 * C786 + C106 * C792 + C117 * C785 + C105 * C791) *
                 C50688 +
             (C120 * C779 + C108 * C789 + C119 * C778 + C107 * C783 +
              C118 * C777 + C106 * C782 + C117 * C776 + C105 * C781) *
                 C121) *
                C50700 * C50667) *
               C50639) *
              C50574)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                  C121 +
              (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                  C50688) *
                 C5071 +
             ((C5427 + C5428) * C121 + (C5429 + C5430) * C50688) * C5072 +
             C5459 * C5073) *
                C50830 -
            (((C5435 + C5436) * C50688 + (C5437 + C5438) * C121) * C5073 +
             ((C5434 + C5433) * C50688 + (C5432 + C5431) * C121) * C5072 +
             ((C5430 + C5429) * C50688 + (C5428 + C5427) * C121) * C5071) *
                C50667) *
               C50829 +
           ((((C3121 + C3120) * C121 + (C3119 + C3118) * C50688) * C5071 +
             ((C3566 + C3567) * C121 + (C3568 + C3569) * C50688) * C5072 +
             ((C2162 * C4474 + C2157 * C4482 + C2163 * C4473 + C50543 * C4481) *
                  C121 +
              (C2162 * C4480 + C2157 * C4486 + C2163 * C4479 + C50543 * C4485) *
                  C50688) *
                 C5073) *
                C50667 -
            (((C3569 + C3568) * C50688 + (C3567 + C3566) * C121) * C5073 +
             ((C3118 + C3119) * C50688 + (C3120 + C3121) * C121) * C5072 +
             ((C2377 + C2376) * C50688 + (C2375 + C2374) * C121) * C5071) *
                C50830) *
               C50639) *
              C251 +
          (((((C5439 + C5440) * C121 + (C5441 + C5442) * C50688) * C5071 +
             ((C5443 + C5444) * C121 + (C5445 + C5446) * C50688) * C5072 +
             ((C5447 + C5448) * C121 + (C5449 + C5450) * C50688) * C5073) *
                C50667 -
            (C5460 * C5073 +
             ((C5442 + C5441) * C50688 + (C5440 + C5439) * C121) * C5072 +
             ((C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                  C50688 +
              (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                  C121) *
                 C5071) *
                C50830) *
               C50829 +
           ((((C2386 + C2387) * C121 + (C2388 + C2389) * C50688) * C5071 +
             ((C3122 + C3123) * C121 + (C3124 + C3125) * C50688) * C5072 +
             ((C5983 + C5984) * C121 + (C5985 + C5986) * C50688) * C5073) *
                C50830 -
            (((C2163 * C5971 + C50543 * C5973 + C2162 * C4479 + C2157 * C4485) *
                  C50688 +
              (C2163 * C5970 + C50543 * C5972 + C2162 * C4473 + C2157 * C4481) *
                  C121) *
                 C5073 +
             ((C5986 + C5985) * C50688 + (C5984 + C5983) * C121) * C5072 +
             ((C3125 + C3124) * C50688 + (C3123 + C3122) * C121) * C5071) *
                C50667) *
               C50639) *
              C50574)) /
            (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
                C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                   C121 +
               (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
                C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                   C50688) *
                  C50700 * C50603 * C50587 * C113 -
              ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
                C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                   C50688 +
               (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
                C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                   C121) *
                  C50700 * C50603 * C50587 * C114 +
              ((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
                C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                   C121 +
               (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
                C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                   C50688) *
                  C50700 * C50603 * C50587 * C115 -
              ((C120 * C141 + C108 * C149 + C119 * C140 + C107 * C148 +
                C118 * C137 + C106 * C147 + C117 * C136 + C105 * C146) *
                   C50688 +
               (C120 * C128 + C108 * C142 + C119 * C127 + C107 * C139 +
                C118 * C126 + C106 * C138 + C117 * C125 + C105 * C132) *
                   C121) *
                  C50700 * C50603 * C50587 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
                 C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                    C121 +
                (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
                 C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                    C50688) *
                   C50700 * C50603 * C248 -
               ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
                 C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                    C50688 +
                (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
                 C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                    C121) *
                   C50700 * C50603 * C249 +
               ((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
                 C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
                    C121 +
                (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
                 C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
                    C50688) *
                   C50700 * C50603 * C250) *
                  C251 +
              (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
                 C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                    C121 +
                (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
                 C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                    C50688) *
                   C50700 * C50603 * C249 -
               ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
                 C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                    C50688 +
                (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
                 C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                    C121) *
                   C50700 * C50603 * C248 -
               ((C120 * C281 + C108 * C292 + C119 * C278 + C107 * C290 +
                 C118 * C277 + C106 * C289 + C117 * C276 + C105 * C288) *
                    C50688 +
                (C120 * C262 + C108 * C282 + C119 * C260 + C107 * C274 +
                 C118 * C259 + C106 * C273 + C117 * C258 + C105 * C272) *
                    C121) *
                   C50700 * C50603 * C250) *
                  C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50688) *
               C50700 * C391 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50688 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50700 * C392 +
           ((C117 * C398 + C105 * C412 + C118 * C399 + C106 * C413 +
             C119 * C400 + C107 * C414 + C120 * C401 + C108 * C415) *
                C121 +
            (C117 * C416 + C105 * C428 + C118 * C417 + C106 * C429 +
             C119 * C418 + C107 * C430 + C120 * C419 + C108 * C431) *
                C50688) *
               C50700 * C393) *
              C50587 * C251 +
          (((C117 * C396 + C105 * C410 + C118 * C395 + C106 * C409 +
             C119 * C394 + C107 * C408 + C120 * C402 + C108 * C420) *
                C121 +
            (C117 * C406 + C105 * C426 + C118 * C405 + C106 * C425 +
             C119 * C404 + C107 * C424 + C120 * C421 + C108 * C432) *
                C50688) *
               C50700 * C392 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50688 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50700 * C391 -
           ((C120 * C422 + C108 * C433 + C119 * C419 + C107 * C431 +
             C118 * C418 + C106 * C430 + C117 * C417 + C105 * C429) *
                C50688 +
            (C120 * C403 + C108 * C423 + C119 * C401 + C107 * C415 +
             C118 * C400 + C106 * C414 + C117 * C399 + C105 * C413) *
                C121) *
               C50700 * C393) *
              C50587 * C50574)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
               C2164 +
           (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
               C2159 +
           (C2162 * C256 + C2157 * C270 + C2163 * C255 + C50543 * C269) *
               C2165 +
           (C2162 * C266 + C2157 * C286 + C2163 * C265 + C50543 * C285) *
               C2160 +
           (C2162 * C257 + C2157 * C271 + C2163 * C258 + C50543 * C272) *
               C2166 +
           (C2162 * C275 + C2157 * C287 + C2163 * C276 + C50543 * C288) *
               C2161) *
              C50700 * C50603 * C50587 * C113 -
          ((C2163 * C277 + C50543 * C289 + C2162 * C276 + C2157 * C288) *
               C2161 +
           (C2163 * C259 + C50543 * C273 + C2162 * C258 + C2157 * C272) *
               C2166 +
           (C2163 * C264 + C50543 * C284 + C2162 * C265 + C2157 * C285) *
               C2160 +
           (C2163 * C254 + C50543 * C268 + C2162 * C255 + C2157 * C269) *
               C2165 +
           (C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
               C2159 +
           (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
               C2164) *
              C50700 * C50603 * C50587 * C114 +
          ((C2162 * C124 + C2157 * C131 + C2163 * C125 + C50543 * C132) *
               C2164 +
           (C2162 * C135 + C2157 * C145 + C2163 * C136 + C50543 * C146) *
               C2159 +
           (C2162 * C254 + C2157 * C268 + C2163 * C253 + C50543 * C267) *
               C2165 +
           (C2162 * C264 + C2157 * C284 + C2163 * C263 + C50543 * C283) *
               C2160 +
           (C2162 * C259 + C2157 * C273 + C2163 * C260 + C50543 * C274) *
               C2166 +
           (C2162 * C277 + C2157 * C289 + C2163 * C278 + C50543 * C290) *
               C2161) *
              C50700 * C50603 * C50587 * C115 -
          ((C2163 * C281 + C50543 * C292 + C2162 * C278 + C2157 * C290) *
               C2161 +
           (C2163 * C262 + C50543 * C282 + C2162 * C260 + C2157 * C274) *
               C2166 +
           (C2163 * C280 + C50543 * C291 + C2162 * C263 + C2157 * C283) *
               C2160 +
           (C2163 * C261 + C50543 * C279 + C2162 * C253 + C2157 * C267) *
               C2165 +
           (C2163 * C137 + C50543 * C147 + C2162 * C136 + C2157 * C146) *
               C2159 +
           (C2163 * C126 + C50543 * C138 + C2162 * C125 + C2157 * C132) *
               C2164) *
              C50700 * C50603 * C50587 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                C2164 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                C2159 +
            (C2374 + C2375) * C2165 + (C2376 + C2377) * C2160 + C2398 * C2166 +
            C2399 * C2161) *
               C50700 * C50603 * C248 -
           ((C2382 + C2383) * C2161 + (C2384 + C2385) * C2166 +
            (C2381 + C2380) * C2160 + (C2379 + C2378) * C2165 +
            (C2377 + C2376) * C2159 + (C2375 + C2374) * C2164) *
               C50700 * C50603 * C249 +
           (C2398 * C2164 + C2399 * C2159 + (C2385 + C2384) * C2165 +
            (C2383 + C2382) * C2160 +
            (C2162 * C2313 + C2157 * C2316 + C2163 * C2314 + C50543 * C2317) *
                C2166 +
            (C2162 * C2318 + C2157 * C2322 + C2163 * C2319 + C50543 * C2323) *
                C2161) *
               C50700 * C50603 * C250) *
              C251 +
          (((C2386 + C2387) * C2164 + (C2388 + C2389) * C2159 +
            (C2390 + C2391) * C2165 + (C2392 + C2393) * C2160 +
            (C2394 + C2395) * C2166 + (C2396 + C2397) * C2161) *
               C50700 * C50603 * C249 -
           (C2400 * C2161 + C2401 * C2166 + (C2389 + C2388) * C2160 +
            (C2387 + C2386) * C2165 +
            (C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                C2159 +
            (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                C2164) *
               C50700 * C50603 * C248 -
           ((C2163 * C2320 + C50543 * C2324 + C2162 * C2319 + C2157 * C2323) *
                C2161 +
            (C2163 * C2315 + C50543 * C2321 + C2162 * C2314 + C2157 * C2317) *
                C2166 +
            (C2397 + C2396) * C2160 + (C2395 + C2394) * C2165 + C2400 * C2159 +
            C2401 * C2164) *
               C50700 * C50603 * C250) *
              C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                C2164 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                C2159 +
            (C2374 + C2375) * C2165 + (C2376 + C2377) * C2160 + C2398 * C2166 +
            C2399 * C2161) *
               C50700 * C391 -
           ((C2163 * C1436 + C50543 * C1444 + C2162 * C1437 + C2157 * C1445) *
                C2161 +
            (C2163 * C1432 + C50543 * C1440 + C2162 * C1433 + C2157 * C1441) *
                C2166 +
            (C2163 * C785 + C50543 * C791 + C2162 * C784 + C2157 * C790) *
                C2160 +
            (C2163 * C776 + C50543 * C781 + C2162 * C775 + C2157 * C780) *
                C2165 +
            (C2163 * C406 + C50543 * C426 + C2162 * C407 + C2157 * C427) *
                C2159 +
            (C2163 * C396 + C50543 * C410 + C2162 * C397 + C2157 * C411) *
                C2164) *
               C50700 * C392 +
           ((C2162 * C398 + C2157 * C412 + C2163 * C399 + C50543 * C413) *
                C2164 +
            (C2162 * C416 + C2157 * C428 + C2163 * C417 + C50543 * C429) *
                C2159 +
            (C2162 * C1086 + C2157 * C1094 + C2163 * C1085 + C50543 * C1093) *
                C2165 +
            (C2162 * C1090 + C2157 * C1098 + C2163 * C1089 + C50543 * C1097) *
                C2160 +
            (C2162 * C2547 + C2157 * C2550 + C2163 * C2548 + C50543 * C2551) *
                C2166 +
            (C2162 * C2552 + C2157 * C2556 + C2163 * C2553 + C50543 * C2557) *
                C2161) *
               C50700 * C393) *
              C50587 * C251 +
          (((C2162 * C396 + C2157 * C410 + C2163 * C395 + C50543 * C409) *
                C2164 +
            (C2162 * C406 + C2157 * C426 + C2163 * C405 + C50543 * C425) *
                C2159 +
            (C2162 * C776 + C2157 * C781 + C2163 * C777 + C50543 * C782) *
                C2165 +
            (C2162 * C785 + C2157 * C791 + C2163 * C786 + C50543 * C792) *
                C2160 +
            (C2162 * C1432 + C2157 * C1440 + C2163 * C1431 + C50543 * C1439) *
                C2166 +
            (C2162 * C1436 + C2157 * C1444 + C2163 * C1435 + C50543 * C1443) *
                C2161) *
               C50700 * C392 -
           (C2400 * C2161 + C2401 * C2166 + (C2389 + C2388) * C2160 +
            (C2387 + C2386) * C2165 +
            (C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                C2159 +
            (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                C2164) *
               C50700 * C391 -
           ((C2163 * C2554 + C50543 * C2558 + C2162 * C2553 + C2157 * C2557) *
                C2161 +
            (C2163 * C2549 + C50543 * C2555 + C2162 * C2548 + C2157 * C2551) *
                C2166 +
            (C2163 * C1088 + C50543 * C1096 + C2162 * C1089 + C2157 * C1097) *
                C2160 +
            (C2163 * C1084 + C50543 * C1092 + C2162 * C1085 + C2157 * C1093) *
                C2165 +
            (C2163 * C418 + C50543 * C430 + C2162 * C417 + C2157 * C429) *
                C2159 +
            (C2163 * C400 + C50543 * C414 + C2162 * C399 + C2157 * C413) *
                C2164) *
               C50700 * C393) *
              C50587 * C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                C121 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                C50688) *
               C5071 +
           ((C2162 * C397 + C2157 * C411 + C2163 * C396 + C50543 * C410) *
                C121 +
            (C2162 * C407 + C2157 * C427 + C2163 * C406 + C50543 * C426) *
                C50688) *
               C5072 +
           ((C2162 * C398 + C2157 * C412 + C2163 * C399 + C50543 * C413) *
                C121 +
            (C2162 * C416 + C2157 * C428 + C2163 * C417 + C50543 * C429) *
                C50688) *
               C5073) *
              C50603 * C50587 * C113 -
          (((C2163 * C418 + C50543 * C430 + C2162 * C417 + C2157 * C429) *
                C50688 +
            (C2163 * C400 + C50543 * C414 + C2162 * C399 + C2157 * C413) *
                C121) *
               C5073 +
           ((C2163 * C405 + C50543 * C425 + C2162 * C406 + C2157 * C426) *
                C50688 +
            (C2163 * C395 + C50543 * C409 + C2162 * C396 + C2157 * C410) *
                C121) *
               C5072 +
           ((C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                C50688 +
            (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                C121) *
               C5071) *
              C50603 * C50587 * C114 +
          (((C2162 * C124 + C2157 * C131 + C2163 * C125 + C50543 * C132) *
                C121 +
            (C2162 * C135 + C2157 * C145 + C2163 * C136 + C50543 * C146) *
                C50688) *
               C5071 +
           ((C2162 * C395 + C2157 * C409 + C2163 * C394 + C50543 * C408) *
                C121 +
            (C2162 * C405 + C2157 * C425 + C2163 * C404 + C50543 * C424) *
                C50688) *
               C5072 +
           ((C2162 * C400 + C2157 * C414 + C2163 * C401 + C50543 * C415) *
                C121 +
            (C2162 * C418 + C2157 * C430 + C2163 * C419 + C50543 * C431) *
                C50688) *
               C5073) *
              C50603 * C50587 * C115 -
          (((C2163 * C422 + C50543 * C433 + C2162 * C419 + C2157 * C431) *
                C50688 +
            (C2163 * C403 + C50543 * C423 + C2162 * C401 + C2157 * C415) *
                C121) *
               C5073 +
           ((C2163 * C421 + C50543 * C432 + C2162 * C404 + C2157 * C424) *
                C50688 +
            (C2163 * C402 + C50543 * C420 + C2162 * C394 + C2157 * C408) *
                C121) *
               C5072 +
           ((C2163 * C137 + C50543 * C147 + C2162 * C136 + C2157 * C146) *
                C50688 +
            (C2163 * C126 + C50543 * C138 + C2162 * C125 + C2157 * C132) *
                C121) *
               C5071) *
              C50603 * C50587 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                 C50688) *
                C5071 +
            ((C2162 * C397 + C2157 * C411 + C2163 * C396 + C50543 * C410) *
                 C121 +
             (C2162 * C407 + C2157 * C427 + C2163 * C406 + C50543 * C426) *
                 C50688) *
                C5072 +
            ((C2162 * C398 + C2157 * C412 + C2163 * C399 + C50543 * C413) *
                 C121 +
             (C2162 * C416 + C2157 * C428 + C2163 * C417 + C50543 * C429) *
                 C50688) *
                C5073) *
               C50603 * C248 -
           (((C3569 + C3568) * C50688 + (C3567 + C3566) * C121) * C5073 +
            ((C3118 + C3119) * C50688 + (C3120 + C3121) * C121) * C5072 +
            ((C2377 + C2376) * C50688 + (C2375 + C2374) * C121) * C5071) *
               C50603 * C249 +
           ((C2398 * C121 + C2399 * C50688) * C5071 +
            ((C3117 + C3116) * C121 + (C3115 + C3114) * C50688) * C5072 +
            ((C3570 + C3571) * C121 + (C3572 + C3573) * C50688) * C5073) *
               C50603 * C250) *
              C251 +
          ((((C2386 + C2387) * C121 + (C2388 + C2389) * C50688) * C5071 +
            ((C3122 + C3123) * C121 + (C3124 + C3125) * C50688) * C5072 +
            ((C2162 * C1085 + C2157 * C1093 + C2163 * C1084 + C50543 * C1092) *
                 C121 +
             (C2162 * C1089 + C2157 * C1097 + C2163 * C1088 + C50543 * C1096) *
                 C50688) *
                C5073) *
               C50603 * C249 -
           (((C2163 * C418 + C50543 * C430 + C2162 * C417 + C2157 * C429) *
                 C50688 +
             (C2163 * C400 + C50543 * C414 + C2162 * C399 + C2157 * C413) *
                 C121) *
                C5073 +
            ((C2163 * C405 + C50543 * C425 + C2162 * C406 + C2157 * C426) *
                 C50688 +
             (C2163 * C395 + C50543 * C409 + C2162 * C396 + C2157 * C410) *
                 C121) *
                C5072 +
            ((C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                 C50688 +
             (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                 C121) *
                C5071) *
               C50603 * C248 -
           (((C2163 * C2554 + C50543 * C2558 + C2162 * C2553 + C2157 * C2557) *
                 C50688 +
             (C2163 * C2549 + C50543 * C2555 + C2162 * C2548 + C2157 * C2551) *
                 C121) *
                C5073 +
            ((C3129 + C3128) * C50688 + (C3127 + C3126) * C121) * C5072 +
            (C2400 * C50688 + C2401 * C121) * C5071) *
               C50603 * C250) *
              C50574)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                 C50688) *
                C5071 +
            ((C5427 + C5428) * C121 + (C5429 + C5430) * C50688) * C5072 +
            C5459 * C5073) *
               C391 -
           (((C5435 + C5436) * C50688 + (C5437 + C5438) * C121) * C5073 +
            ((C5434 + C5433) * C50688 + (C5432 + C5431) * C121) * C5072 +
            ((C5430 + C5429) * C50688 + (C5428 + C5427) * C121) * C5071) *
               C392 +
           (C5459 * C5071 +
            ((C5438 + C5437) * C121 + (C5436 + C5435) * C50688) * C5072 +
            ((C2162 * C5366 + C2157 * C5369 + C2163 * C5367 + C50543 * C5370) *
                 C121 +
             (C2162 * C5371 + C2157 * C5375 + C2163 * C5372 + C50543 * C5376) *
                 C50688) *
                C5073) *
               C393) *
              C50587 * C251 +
          ((((C5439 + C5440) * C121 + (C5441 + C5442) * C50688) * C5071 +
            ((C5443 + C5444) * C121 + (C5445 + C5446) * C50688) * C5072 +
            ((C5447 + C5448) * C121 + (C5449 + C5450) * C50688) * C5073) *
               C392 -
           (C5460 * C5073 +
            ((C5442 + C5441) * C50688 + (C5440 + C5439) * C121) * C5072 +
            ((C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                 C50688 +
             (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                 C121) *
                C5071) *
               C391 -
           (((C2163 * C5373 + C50543 * C5377 + C2162 * C5372 + C2157 * C5376) *
                 C50688 +
             (C2163 * C5368 + C50543 * C5374 + C2162 * C5367 + C2157 * C5370) *
                 C121) *
                C5073 +
            ((C5450 + C5449) * C50688 + (C5448 + C5447) * C121) * C5072 +
            C5460 * C5071) *
               C393) *
              C50587 * C50574)) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                C2164 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                C2159 +
            (C2374 + C2375) * C2165 + (C2376 + C2377) * C2160 + C2398 * C2166 +
            C2399 * C2161) *
               C50700 * C50830 -
           ((C2163 * C1436 + C50543 * C1444 + C2162 * C1437 + C2157 * C1445) *
                C2161 +
            (C2163 * C1432 + C50543 * C1440 + C2162 * C1433 + C2157 * C1441) *
                C2166 +
            (C2163 * C785 + C50543 * C791 + C2162 * C784 + C2157 * C790) *
                C2160 +
            (C2163 * C776 + C50543 * C781 + C2162 * C775 + C2157 * C780) *
                C2165 +
            (C2163 * C406 + C50543 * C426 + C2162 * C407 + C2157 * C427) *
                C2159 +
            (C2163 * C396 + C50543 * C410 + C2162 * C397 + C2157 * C411) *
                C2164) *
               C50700 * C50667) *
              C50587 * C50872 +
          (((C2162 * C396 + C2157 * C410 + C2163 * C395 + C50543 * C409) *
                C2164 +
            (C2162 * C406 + C2157 * C426 + C2163 * C405 + C50543 * C425) *
                C2159 +
            (C2162 * C776 + C2157 * C781 + C2163 * C777 + C50543 * C782) *
                C2165 +
            (C2162 * C785 + C2157 * C791 + C2163 * C786 + C50543 * C792) *
                C2160 +
            (C2162 * C1432 + C2157 * C1440 + C2163 * C1431 + C50543 * C1439) *
                C2166 +
            (C2162 * C1436 + C2157 * C1444 + C2163 * C1435 + C50543 * C1443) *
                C2161) *
               C50700 * C50667 -
           (C2400 * C2161 + C2401 * C2166 + (C2389 + C2388) * C2160 +
            (C2387 + C2386) * C2165 +
            (C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                C2159 +
            (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                C2164) *
               C50700 * C50830) *
              C50587 * C50873 +
          (((C2162 * C124 + C2157 * C131 + C2163 * C125 + C50543 * C132) *
                C2164 +
            (C2162 * C135 + C2157 * C145 + C2163 * C136 + C50543 * C146) *
                C2159 +
            (C2722 + C2723) * C2165 + (C2724 + C2725) * C2160 +
            (C2726 + C2727) * C2166 + (C2728 + C2729) * C2161) *
               C50700 * C50830 -
           ((C2163 * C1434 + C50543 * C1442 + C2162 * C1435 + C2157 * C1443) *
                C2161 +
            (C2163 * C1430 + C50543 * C1438 + C2162 * C1431 + C2157 * C1439) *
                C2166 +
            (C2163 * C787 + C50543 * C793 + C2162 * C786 + C2157 * C792) *
                C2160 +
            (C2163 * C778 + C50543 * C783 + C2162 * C777 + C2157 * C782) *
                C2165 +
            (C2163 * C404 + C50543 * C424 + C2162 * C405 + C2157 * C425) *
                C2159 +
            (C2163 * C394 + C50543 * C408 + C2162 * C395 + C2157 * C409) *
                C2164) *
               C50700 * C50667) *
              C50587 * C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50688) *
               C50700 * C50830 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50688 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50700 * C50667) *
              C50587 * C50872 +
          (((C117 * C396 + C105 * C410 + C118 * C395 + C106 * C409 +
             C119 * C394 + C107 * C408 + C120 * C402 + C108 * C420) *
                C121 +
            (C117 * C406 + C105 * C426 + C118 * C405 + C106 * C425 +
             C119 * C404 + C107 * C424 + C120 * C421 + C108 * C432) *
                C50688) *
               C50700 * C50667 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50688 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50700 * C50830) *
              C50587 * C50873 +
          (((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
             C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                C121 +
            (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
             C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                C50688) *
               C50700 * C50830 -
           ((C120 * C642 + C108 * C644 + C119 * C421 + C107 * C432 +
             C118 * C404 + C106 * C424 + C117 * C405 + C105 * C425) *
                C50688 +
            (C120 * C641 + C108 * C643 + C119 * C402 + C107 * C420 +
             C118 * C394 + C106 * C408 + C117 * C395 + C105 * C409) *
                C121) *
               C50700 * C50667) *
              C50587 * C536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                 C50688) *
                C5071 +
            ((C5427 + C5428) * C121 + (C5429 + C5430) * C50688) * C5072 +
            C5459 * C5073) *
               C50830 -
           (((C5435 + C5436) * C50688 + (C5437 + C5438) * C121) * C5073 +
            ((C5434 + C5433) * C50688 + (C5432 + C5431) * C121) * C5072 +
            ((C5430 + C5429) * C50688 + (C5428 + C5427) * C121) * C5071) *
               C50667) *
              C50587 * C50872 +
          ((((C5439 + C5440) * C121 + (C5441 + C5442) * C50688) * C5071 +
            ((C5443 + C5444) * C121 + (C5445 + C5446) * C50688) * C5072 +
            ((C5447 + C5448) * C121 + (C5449 + C5450) * C50688) * C5073) *
               C50667 -
           (C5460 * C5073 +
            ((C5442 + C5441) * C50688 + (C5440 + C5439) * C121) * C5072 +
            ((C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                 C50688 +
             (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                 C121) *
                C5071) *
               C50830) *
              C50587 * C50873 +
          ((((C2162 * C124 + C2157 * C131 + C2163 * C125 + C50543 * C132) *
                 C121 +
             (C2162 * C135 + C2157 * C145 + C2163 * C136 + C50543 * C146) *
                 C50688) *
                C5071 +
            ((C5769 + C5770) * C121 + (C5771 + C5772) * C50688) * C5072 +
            ((C5773 + C5774) * C121 + (C5775 + C5776) * C50688) * C5073) *
               C50830 -
           (((C2163 * C1718 + C50543 * C1726 + C2162 * C1719 + C2157 * C1727) *
                 C50688 +
             (C2163 * C1714 + C50543 * C1722 + C2162 * C1715 + C2157 * C1723) *
                 C121) *
                C5073 +
            ((C5776 + C5775) * C50688 + (C5774 + C5773) * C121) * C5072 +
            ((C5772 + C5771) * C50688 + (C5770 + C5769) * C121) * C5071) *
               C50667) *
              C50587 * C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50688) *
               C50700 * C50603 * C248 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50688 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50700 * C50603 * C249 +
           ((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
             C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
                C121 +
            (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
             C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
                C50688) *
               C50700 * C50603 * C250) *
              C251 +
          (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
             C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                C121 +
            (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
             C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                C50688) *
               C50700 * C50603 * C249 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50688 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50700 * C50603 * C248 -
           ((C120 * C281 + C108 * C292 + C119 * C278 + C107 * C290 +
             C118 * C277 + C106 * C289 + C117 * C276 + C105 * C288) *
                C50688 +
            (C120 * C262 + C108 * C282 + C119 * C260 + C107 * C274 +
             C118 * C259 + C106 * C273 + C117 * C258 + C105 * C272) *
                C121) *
               C50700 * C50603 * C250) *
              C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C121 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50688) *
              C50700 * C50603 * C50587 * C113 -
          ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
            C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
               C50688 +
           (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
            C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
               C121) *
              C50700 * C50603 * C50587 * C114 +
          ((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
            C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
               C121 +
           (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
            C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
               C50688) *
              C50700 * C50603 * C50587 * C115 -
          ((C120 * C141 + C108 * C149 + C119 * C140 + C107 * C148 +
            C118 * C137 + C106 * C147 + C117 * C136 + C105 * C146) *
               C50688 +
           (C120 * C128 + C108 * C142 + C119 * C127 + C107 * C139 +
            C118 * C126 + C106 * C138 + C117 * C125 + C105 * C132) *
               C121) *
              C50700 * C50603 * C50587 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
               C2164 +
           (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
               C2159 +
           (C2162 * C256 + C2157 * C270 + C2163 * C255 + C50543 * C269) *
               C2165 +
           (C2162 * C266 + C2157 * C286 + C2163 * C265 + C50543 * C285) *
               C2160 +
           (C2162 * C257 + C2157 * C271 + C2163 * C258 + C50543 * C272) *
               C2166 +
           (C2162 * C275 + C2157 * C287 + C2163 * C276 + C50543 * C288) *
               C2161) *
              C50700 * C50603 * C50587 * C113 -
          ((C2163 * C277 + C50543 * C289 + C2162 * C276 + C2157 * C288) *
               C2161 +
           (C2163 * C259 + C50543 * C273 + C2162 * C258 + C2157 * C272) *
               C2166 +
           (C2163 * C264 + C50543 * C284 + C2162 * C265 + C2157 * C285) *
               C2160 +
           (C2163 * C254 + C50543 * C268 + C2162 * C255 + C2157 * C269) *
               C2165 +
           (C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
               C2159 +
           (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
               C2164) *
              C50700 * C50603 * C50587 * C114 +
          ((C2162 * C124 + C2157 * C131 + C2163 * C125 + C50543 * C132) *
               C2164 +
           (C2162 * C135 + C2157 * C145 + C2163 * C136 + C50543 * C146) *
               C2159 +
           (C2162 * C254 + C2157 * C268 + C2163 * C253 + C50543 * C267) *
               C2165 +
           (C2162 * C264 + C2157 * C284 + C2163 * C263 + C50543 * C283) *
               C2160 +
           (C2162 * C259 + C2157 * C273 + C2163 * C260 + C50543 * C274) *
               C2166 +
           (C2162 * C277 + C2157 * C289 + C2163 * C278 + C50543 * C290) *
               C2161) *
              C50700 * C50603 * C50587 * C115 -
          ((C2163 * C281 + C50543 * C292 + C2162 * C278 + C2157 * C290) *
               C2161 +
           (C2163 * C262 + C50543 * C282 + C2162 * C260 + C2157 * C274) *
               C2166 +
           (C2163 * C280 + C50543 * C291 + C2162 * C263 + C2157 * C283) *
               C2160 +
           (C2163 * C261 + C50543 * C279 + C2162 * C253 + C2157 * C267) *
               C2165 +
           (C2163 * C137 + C50543 * C147 + C2162 * C136 + C2157 * C146) *
               C2159 +
           (C2163 * C126 + C50543 * C138 + C2162 * C125 + C2157 * C132) *
               C2164) *
              C50700 * C50603 * C50587 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                C2164 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                C2159 +
            (C2374 + C2375) * C2165 + (C2376 + C2377) * C2160 + C2398 * C2166 +
            C2399 * C2161) *
               C50700 * C50603 * C248 -
           ((C2382 + C2383) * C2161 + (C2384 + C2385) * C2166 +
            (C2381 + C2380) * C2160 + (C2379 + C2378) * C2165 +
            (C2377 + C2376) * C2159 + (C2375 + C2374) * C2164) *
               C50700 * C50603 * C249 +
           (C2398 * C2164 + C2399 * C2159 + (C2385 + C2384) * C2165 +
            (C2383 + C2382) * C2160 +
            (C2162 * C2313 + C2157 * C2316 + C2163 * C2314 + C50543 * C2317) *
                C2166 +
            (C2162 * C2318 + C2157 * C2322 + C2163 * C2319 + C50543 * C2323) *
                C2161) *
               C50700 * C50603 * C250) *
              C251 +
          (((C2386 + C2387) * C2164 + (C2388 + C2389) * C2159 +
            (C2390 + C2391) * C2165 + (C2392 + C2393) * C2160 +
            (C2394 + C2395) * C2166 + (C2396 + C2397) * C2161) *
               C50700 * C50603 * C249 -
           (C2400 * C2161 + C2401 * C2166 + (C2389 + C2388) * C2160 +
            (C2387 + C2386) * C2165 +
            (C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                C2159 +
            (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                C2164) *
               C50700 * C50603 * C248 -
           ((C2163 * C2320 + C50543 * C2324 + C2162 * C2319 + C2157 * C2323) *
                C2161 +
            (C2163 * C2315 + C50543 * C2321 + C2162 * C2314 + C2157 * C2317) *
                C2166 +
            (C2397 + C2396) * C2160 + (C2395 + C2394) * C2165 + C2400 * C2159 +
            C2401 * C2164) *
               C50700 * C50603 * C250) *
              C50574)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                C121 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                C50688) *
               C5071 +
           ((C2162 * C397 + C2157 * C411 + C2163 * C396 + C50543 * C410) *
                C121 +
            (C2162 * C407 + C2157 * C427 + C2163 * C406 + C50543 * C426) *
                C50688) *
               C5072 +
           ((C2162 * C398 + C2157 * C412 + C2163 * C399 + C50543 * C413) *
                C121 +
            (C2162 * C416 + C2157 * C428 + C2163 * C417 + C50543 * C429) *
                C50688) *
               C5073) *
              C50603 * C50587 * C113 -
          (((C2163 * C418 + C50543 * C430 + C2162 * C417 + C2157 * C429) *
                C50688 +
            (C2163 * C400 + C50543 * C414 + C2162 * C399 + C2157 * C413) *
                C121) *
               C5073 +
           ((C2163 * C405 + C50543 * C425 + C2162 * C406 + C2157 * C426) *
                C50688 +
            (C2163 * C395 + C50543 * C409 + C2162 * C396 + C2157 * C410) *
                C121) *
               C5072 +
           ((C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                C50688 +
            (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                C121) *
               C5071) *
              C50603 * C50587 * C114 +
          (((C2162 * C124 + C2157 * C131 + C2163 * C125 + C50543 * C132) *
                C121 +
            (C2162 * C135 + C2157 * C145 + C2163 * C136 + C50543 * C146) *
                C50688) *
               C5071 +
           ((C2162 * C395 + C2157 * C409 + C2163 * C394 + C50543 * C408) *
                C121 +
            (C2162 * C405 + C2157 * C425 + C2163 * C404 + C50543 * C424) *
                C50688) *
               C5072 +
           ((C2162 * C400 + C2157 * C414 + C2163 * C401 + C50543 * C415) *
                C121 +
            (C2162 * C418 + C2157 * C430 + C2163 * C419 + C50543 * C431) *
                C50688) *
               C5073) *
              C50603 * C50587 * C115 -
          (((C2163 * C422 + C50543 * C433 + C2162 * C419 + C2157 * C431) *
                C50688 +
            (C2163 * C403 + C50543 * C423 + C2162 * C401 + C2157 * C415) *
                C121) *
               C5073 +
           ((C2163 * C421 + C50543 * C432 + C2162 * C404 + C2157 * C424) *
                C50688 +
            (C2163 * C402 + C50543 * C420 + C2162 * C394 + C2157 * C408) *
                C121) *
               C5072 +
           ((C2163 * C137 + C50543 * C147 + C2162 * C136 + C2157 * C146) *
                C50688 +
            (C2163 * C126 + C50543 * C138 + C2162 * C125 + C2157 * C132) *
                C121) *
               C5071) *
              C50603 * C50587 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                 C50688) *
                C5071 +
            ((C2162 * C397 + C2157 * C411 + C2163 * C396 + C50543 * C410) *
                 C121 +
             (C2162 * C407 + C2157 * C427 + C2163 * C406 + C50543 * C426) *
                 C50688) *
                C5072 +
            ((C2162 * C398 + C2157 * C412 + C2163 * C399 + C50543 * C413) *
                 C121 +
             (C2162 * C416 + C2157 * C428 + C2163 * C417 + C50543 * C429) *
                 C50688) *
                C5073) *
               C50603 * C248 -
           (((C3569 + C3568) * C50688 + (C3567 + C3566) * C121) * C5073 +
            ((C3118 + C3119) * C50688 + (C3120 + C3121) * C121) * C5072 +
            ((C2377 + C2376) * C50688 + (C2375 + C2374) * C121) * C5071) *
               C50603 * C249 +
           ((C2398 * C121 + C2399 * C50688) * C5071 +
            ((C3117 + C3116) * C121 + (C3115 + C3114) * C50688) * C5072 +
            ((C3570 + C3571) * C121 + (C3572 + C3573) * C50688) * C5073) *
               C50603 * C250) *
              C251 +
          ((((C2386 + C2387) * C121 + (C2388 + C2389) * C50688) * C5071 +
            ((C3122 + C3123) * C121 + (C3124 + C3125) * C50688) * C5072 +
            ((C2162 * C1085 + C2157 * C1093 + C2163 * C1084 + C50543 * C1092) *
                 C121 +
             (C2162 * C1089 + C2157 * C1097 + C2163 * C1088 + C50543 * C1096) *
                 C50688) *
                C5073) *
               C50603 * C249 -
           (((C2163 * C418 + C50543 * C430 + C2162 * C417 + C2157 * C429) *
                 C50688 +
             (C2163 * C400 + C50543 * C414 + C2162 * C399 + C2157 * C413) *
                 C121) *
                C5073 +
            ((C2163 * C405 + C50543 * C425 + C2162 * C406 + C2157 * C426) *
                 C50688 +
             (C2163 * C395 + C50543 * C409 + C2162 * C396 + C2157 * C410) *
                 C121) *
                C5072 +
            ((C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                 C50688 +
             (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                 C121) *
                C5071) *
               C50603 * C248 -
           (((C2163 * C2554 + C50543 * C2558 + C2162 * C2553 + C2157 * C2557) *
                 C50688 +
             (C2163 * C2549 + C50543 * C2555 + C2162 * C2548 + C2157 * C2551) *
                 C121) *
                C5073 +
            ((C3129 + C3128) * C50688 + (C3127 + C3126) * C121) * C5072 +
            (C2400 * C50688 + C2401 * C121) * C5071) *
               C50603 * C250) *
              C50574)) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                C2164 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                C2159 +
            (C2374 + C2375) * C2165 + (C2376 + C2377) * C2160 + C2398 * C2166 +
            C2399 * C2161) *
               C50700 * C50603 * C50874 -
           (C3382 * C2161 + C3383 * C2166 + (C2381 + C2380) * C2160 +
            (C2379 + C2378) * C2165 + (C2377 + C2376) * C2159 +
            (C2375 + C2374) * C2164) *
               C50700 * C50603 * C50875 +
           (C2398 * C2164 + C2399 * C2159 + (C2385 + C2384) * C2165 +
            (C2383 + C2382) * C2160 + (C3392 + C3393) * C2166 +
            (C3394 + C3395) * C2161) *
               C50700 * C50603 * C1199) *
              C50821 +
          (((C2386 + C2387) * C2164 + (C2388 + C2389) * C2159 +
            (C2390 + C2391) * C2165 + (C2392 + C2393) * C2160 +
            (C2394 + C2395) * C2166 + (C2396 + C2397) * C2161) *
               C50700 * C50603 * C50875 -
           (C2400 * C2161 + C2401 * C2166 + (C2389 + C2388) * C2160 +
            (C2387 + C2386) * C2165 +
            (C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                C2159 +
            (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                C2164) *
               C50700 * C50603 * C50874 -
           ((C2163 * C2320 + C50543 * C2324 + C2162 * C2319 + C2157 * C2323) *
                C2161 +
            (C2163 * C2315 + C50543 * C2321 + C2162 * C2314 + C2157 * C2317) *
                C2166 +
            (C2397 + C2396) * C2160 + (C2395 + C2394) * C2165 + C2400 * C2159 +
            C2401 * C2164) *
               C50700 * C50603 * C1199) *
              C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50688) *
               C50700 * C50603 * C50874 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50688 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50700 * C50603 * C50875 +
           ((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
             C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
                C121 +
            (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
             C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
                C50688) *
               C50700 * C50603 * C1199) *
              C50821 +
          (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
             C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                C121 +
            (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
             C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                C50688) *
               C50700 * C50603 * C50875 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50688 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50700 * C50603 * C50874 -
           ((C120 * C281 + C108 * C292 + C119 * C278 + C107 * C290 +
             C118 * C277 + C106 * C289 + C117 * C276 + C105 * C288) *
                C50688 +
            (C120 * C262 + C108 * C282 + C119 * C260 + C107 * C274 +
             C118 * C259 + C106 * C273 + C117 * C258 + C105 * C272) *
                C121) *
               C50700 * C50603 * C1199) *
              C50574)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                 C50688) *
                C5071 +
            ((C5427 + C5428) * C121 + (C5429 + C5430) * C50688) * C5072 +
            C5459 * C5073) *
               C50603 * C50874 -
           (C6401 * C5073 +
            ((C3118 + C3119) * C50688 + (C3120 + C3121) * C121) * C5072 +
            ((C2377 + C2376) * C50688 + (C2375 + C2374) * C121) * C5071) *
               C50603 * C50875 +
           ((C2398 * C121 + C2399 * C50688) * C5071 +
            ((C3117 + C3116) * C121 + (C3115 + C3114) * C50688) * C5072 +
            ((C3570 + C3571) * C121 + (C3572 + C3573) * C50688) * C5073) *
               C50603 * C1199) *
              C50821 +
          ((((C2386 + C2387) * C121 + (C2388 + C2389) * C50688) * C5071 +
            ((C3122 + C3123) * C121 + (C3124 + C3125) * C50688) * C5072 +
            ((C5983 + C5984) * C121 + (C5985 + C5986) * C50688) * C5073) *
               C50603 * C50875 -
           (C5460 * C5073 +
            ((C5442 + C5441) * C50688 + (C5440 + C5439) * C121) * C5072 +
            ((C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                 C50688 +
             (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                 C121) *
                C5071) *
               C50603 * C50874 -
           (((C2163 * C2554 + C50543 * C2558 + C2162 * C2553 + C2157 * C2557) *
                 C50688 +
             (C2163 * C2549 + C50543 * C2555 + C2162 * C2548 + C2157 * C2551) *
                 C121) *
                C5073 +
            ((C3129 + C3128) * C50688 + (C3127 + C3126) * C121) * C5072 +
            (C2400 * C50688 + C2401 * C121) * C5071) *
               C50603 * C1199) *
              C50574)) /
            (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                C2164 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                C2159 +
            (C2374 + C2375) * C2165 + (C2376 + C2377) * C2160 + C2398 * C2166 +
            C2399 * C2161) *
               C50700 * C50830 -
           (C4068 * C2161 + C4069 * C2166 + (C3118 + C3119) * C2160 +
            (C3120 + C3121) * C2165 +
            (C2163 * C406 + C50543 * C426 + C2162 * C407 + C2157 * C427) *
                C2159 +
            (C2163 * C396 + C50543 * C410 + C2162 * C397 + C2157 * C411) *
                C2164) *
               C50700 * C50667) *
              C50874 +
          (((C3121 + C3120) * C2164 + (C3119 + C3118) * C2159 +
            (C3117 + C3116) * C2165 + (C3115 + C3114) * C2160 +
            (C4078 + C4079) * C2166 + (C4080 + C4081) * C2161) *
               C50700 * C50667 -
           (C3382 * C2161 + C3383 * C2166 + (C2381 + C2380) * C2160 +
            (C2379 + C2378) * C2165 + (C2377 + C2376) * C2159 +
            (C2375 + C2374) * C2164) *
               C50700 * C50830) *
              C50875 +
          ((C2398 * C2164 + C2399 * C2159 + (C2385 + C2384) * C2165 +
            (C2383 + C2382) * C2160 + (C3392 + C3393) * C2166 +
            (C3394 + C3395) * C2161) *
               C50700 * C50830 -
           ((C2163 * C4061 + C50543 * C4065 + C2162 * C4062 + C2157 * C4066) *
                C2161 +
            (C2163 * C4059 + C50543 * C4063 + C2162 * C4060 + C2157 * C4064) *
                C2166 +
            (C4081 + C4080) * C2160 + (C4079 + C4078) * C2165 + C4068 * C2159 +
            C4069 * C2164) *
               C50700 * C50667) *
              C1199) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50688) *
               C50700 * C50830 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50688 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50700 * C50667) *
              C50874 +
          (((C117 * C775 + C105 * C780 + C118 * C776 + C106 * C781 +
             C119 * C777 + C107 * C782 + C120 * C778 + C108 * C783) *
                C121 +
            (C117 * C784 + C105 * C790 + C118 * C785 + C106 * C791 +
             C119 * C786 + C107 * C792 + C120 * C787 + C108 * C793) *
                C50688) *
               C50700 * C50667 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50688 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50700 * C50830) *
              C50875 +
          (((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
             C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
                C121 +
            (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
             C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
                C50688) *
               C50700 * C50830 -
           ((C120 * C1434 + C108 * C1442 + C119 * C1435 + C107 * C1443 +
             C118 * C1436 + C106 * C1444 + C117 * C1437 + C105 * C1445) *
                C50688 +
            (C120 * C1430 + C108 * C1438 + C119 * C1431 + C107 * C1439 +
             C118 * C1432 + C106 * C1440 + C117 * C1433 + C105 * C1441) *
                C121) *
               C50700 * C50667) *
              C1199) *
         C50568) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                 C50688) *
                C5071 +
            ((C5427 + C5428) * C121 + (C5429 + C5430) * C50688) * C5072 +
            C5459 * C5073) *
               C50830 -
           (((C5435 + C5436) * C50688 + (C5437 + C5438) * C121) * C5073 +
            ((C5434 + C5433) * C50688 + (C5432 + C5431) * C121) * C5072 +
            ((C5430 + C5429) * C50688 + (C5428 + C5427) * C121) * C5071) *
               C50667) *
              C50874 +
          ((((C3121 + C3120) * C121 + (C3119 + C3118) * C50688) * C5071 +
            ((C3566 + C3567) * C121 + (C3568 + C3569) * C50688) * C5072 +
            ((C6395 + C6396) * C121 + (C6397 + C6398) * C50688) * C5073) *
               C50667 -
           (C6401 * C5073 +
            ((C3118 + C3119) * C50688 + (C3120 + C3121) * C121) * C5072 +
            ((C2377 + C2376) * C50688 + (C2375 + C2374) * C121) * C5071) *
               C50830) *
              C50875 +
          (((C2398 * C121 + C2399 * C50688) * C5071 +
            ((C3117 + C3116) * C121 + (C3115 + C3114) * C50688) * C5072 +
            ((C3570 + C3571) * C121 + (C3572 + C3573) * C50688) * C5073) *
               C50830 -
           (((C2163 * C4475 + C50543 * C4483 + C2162 * C4476 + C2157 * C4484) *
                 C50688 +
             (C2163 * C4471 + C50543 * C4477 + C2162 * C4472 + C2157 * C4478) *
                 C121) *
                C5073 +
            ((C3573 + C3572) * C50688 + (C3571 + C3570) * C121) * C5072 +
            (C4068 * C50688 + C4069 * C121) * C5071) *
               C50667) *
              C1199) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
                 C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                    C121 +
                (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
                 C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                    C50688) *
                   C50700 * C50603 * C893 -
               ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
                 C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                    C50688 +
                (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
                 C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                    C121) *
                   C50700 * C50603 * C50639) *
                  C895 +
              (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
                 C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                    C121 +
                (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
                 C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                    C50688) *
                   C50700 * C50603 * C50639 -
               ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
                 C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                    C50688 +
                (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
                 C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                    C121) *
                   C50700 * C50603 * C893) *
                  C896 +
              (((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
                 C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                    C121 +
                (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
                 C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                    C50688) *
                   C50700 * C50603 * C893 -
               ((C120 * C538 + C108 * C540 + C119 * C280 + C107 * C291 +
                 C118 * C263 + C106 * C283 + C117 * C264 + C105 * C284) *
                    C50688 +
                (C120 * C537 + C108 * C539 + C119 * C261 + C107 * C279 +
                 C118 * C253 + C106 * C267 + C117 * C254 + C105 * C268) *
                    C121) *
                   C50700 * C50603 * C50639) *
                  C897) +
         0.5 * std::pow(Pi, 2.5) *
             (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
                C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                   C121 +
               (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
                C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                   C50688) *
                  C50700 * C50603 * C964 -
              ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
                C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                   C50688 +
               (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
                C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                   C121) *
                  C50700 * C50603 * C965 +
              ((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
                C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
                   C121 +
               (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
                C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
                   C50688) *
                  C50700 * C50603 * C966 -
              ((C120 * C973 + C108 * C981 + C119 * C974 + C107 * C982 +
                C118 * C975 + C106 * C983 + C117 * C976 + C105 * C984) *
                   C50688 +
               (C120 * C969 + C108 * C977 + C119 * C970 + C107 * C978 +
                C118 * C971 + C106 * C979 + C117 * C972 + C105 * C980) *
                   C121) *
                  C50700 * C50603 * C967) *
             C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50688) *
               C50700 * C391 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50688 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50700 * C392 +
           ((C117 * C398 + C105 * C412 + C118 * C399 + C106 * C413 +
             C119 * C400 + C107 * C414 + C120 * C401 + C108 * C415) *
                C121 +
            (C117 * C416 + C105 * C428 + C118 * C417 + C106 * C429 +
             C119 * C418 + C107 * C430 + C120 * C419 + C108 * C431) *
                C50688) *
               C50700 * C393) *
              C893 +
          (((C117 * C775 + C105 * C780 + C118 * C776 + C106 * C781 +
             C119 * C777 + C107 * C782 + C120 * C778 + C108 * C783) *
                C121 +
            (C117 * C784 + C105 * C790 + C118 * C785 + C106 * C791 +
             C119 * C786 + C107 * C792 + C120 * C787 + C108 * C793) *
                C50688) *
               C50700 * C392 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50688 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50700 * C391 -
           ((C120 * C1087 + C108 * C1095 + C119 * C1088 + C107 * C1096 +
             C118 * C1089 + C106 * C1097 + C117 * C1090 + C105 * C1098) *
                C50688 +
            (C120 * C1083 + C108 * C1091 + C119 * C1084 + C107 * C1092 +
             C118 * C1085 + C106 * C1093 + C117 * C1086 + C105 * C1094) *
                C121) *
               C50700 * C393) *
              C50639) *
         C50568) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                C2164 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                C2159 +
            (C2374 + C2375) * C2165 + (C2376 + C2377) * C2160 + C2398 * C2166 +
            C2399 * C2161) *
               C50700 * C50603 * C893 -
           ((C2382 + C2383) * C2161 + (C2384 + C2385) * C2166 +
            (C2381 + C2380) * C2160 + (C2379 + C2378) * C2165 +
            (C2377 + C2376) * C2159 + (C2375 + C2374) * C2164) *
               C50700 * C50603 * C50639) *
              C895 +
          (((C2386 + C2387) * C2164 + (C2388 + C2389) * C2159 +
            (C2390 + C2391) * C2165 + (C2392 + C2393) * C2160 +
            (C2394 + C2395) * C2166 + (C2396 + C2397) * C2161) *
               C50700 * C50603 * C50639 -
           (C2400 * C2161 + C2401 * C2166 + (C2389 + C2388) * C2160 +
            (C2387 + C2386) * C2165 +
            (C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                C2159 +
            (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                C2164) *
               C50700 * C50603 * C893) *
              C896 +
          (((C2162 * C124 + C2157 * C131 + C2163 * C125 + C50543 * C132) *
                C2164 +
            (C2162 * C135 + C2157 * C145 + C2163 * C136 + C50543 * C146) *
                C2159 +
            (C2722 + C2723) * C2165 + (C2724 + C2725) * C2160 +
            (C2726 + C2727) * C2166 + (C2728 + C2729) * C2161) *
               C50700 * C50603 * C893 -
           ((C2163 * C973 + C50543 * C981 + C2162 * C974 + C2157 * C982) *
                C2161 +
            (C2163 * C969 + C50543 * C977 + C2162 * C970 + C2157 * C978) *
                C2166 +
            (C2729 + C2728) * C2160 + (C2727 + C2726) * C2165 +
            (C2725 + C2724) * C2159 + (C2723 + C2722) * C2164) *
               C50700 * C50603 * C50639) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
               C2164 +
           (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
               C2159 +
           (C2374 + C2375) * C2165 + (C2376 + C2377) * C2160 + C2398 * C2166 +
           C2399 * C2161) *
              C50700 * C50603 * C964 -
          (C3382 * C2161 + C3383 * C2166 + (C2381 + C2380) * C2160 +
           (C2379 + C2378) * C2165 + (C2377 + C2376) * C2159 +
           (C2375 + C2374) * C2164) *
              C50700 * C50603 * C965 +
          (C2398 * C2164 + C2399 * C2159 + (C2385 + C2384) * C2165 +
           (C2383 + C2382) * C2160 + (C3392 + C3393) * C2166 +
           (C3394 + C3395) * C2161) *
              C50700 * C50603 * C966 -
          ((C2163 * C3375 + C50543 * C3379 + C2162 * C3376 + C2157 * C3380) *
               C2161 +
           (C2163 * C3373 + C50543 * C3377 + C2162 * C3374 + C2157 * C3378) *
               C2166 +
           (C3395 + C3394) * C2160 + (C3393 + C3392) * C2165 + C3382 * C2159 +
           C3383 * C2164) *
              C50700 * C50603 * C967) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                C2164 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                C2159 +
            (C2374 + C2375) * C2165 + (C2376 + C2377) * C2160 + C2398 * C2166 +
            C2399 * C2161) *
               C50700 * C391 -
           ((C3114 + C3115) * C2161 + (C3116 + C3117) * C2166 +
            (C3118 + C3119) * C2160 + (C3120 + C3121) * C2165 +
            (C2163 * C406 + C50543 * C426 + C2162 * C407 + C2157 * C427) *
                C2159 +
            (C2163 * C396 + C50543 * C410 + C2162 * C397 + C2157 * C411) *
                C2164) *
               C50700 * C392 +
           ((C2162 * C398 + C2157 * C412 + C2163 * C399 + C50543 * C413) *
                C2164 +
            (C2162 * C416 + C2157 * C428 + C2163 * C417 + C50543 * C429) *
                C2159 +
            (C3566 + C3567) * C2165 + (C3568 + C3569) * C2160 +
            (C3570 + C3571) * C2166 + (C3572 + C3573) * C2161) *
               C50700 * C393) *
              C893 +
          (((C3121 + C3120) * C2164 + (C3119 + C3118) * C2159 +
            (C3117 + C3116) * C2165 + (C3115 + C3114) * C2160 +
            (C2162 * C3069 + C2157 * C3072 + C2163 * C3070 + C50543 * C3073) *
                C2166 +
            (C2162 * C3074 + C2157 * C3078 + C2163 * C3075 + C50543 * C3079) *
                C2161) *
               C50700 * C392 -
           (C3382 * C2161 + C3383 * C2166 + (C2381 + C2380) * C2160 +
            (C2379 + C2378) * C2165 + (C2377 + C2376) * C2159 +
            (C2375 + C2374) * C2164) *
               C50700 * C391 -
           ((C2163 * C3543 + C50543 * C3547 + C2162 * C3544 + C2157 * C3548) *
                C2161 +
            (C2163 * C3541 + C50543 * C3545 + C2162 * C3542 + C2157 * C3546) *
                C2166 +
            (C3573 + C3572) * C2160 + (C3571 + C3570) * C2165 +
            (C3569 + C3568) * C2159 + (C3567 + C3566) * C2164) *
               C50700 * C393) *
              C50639) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                 C50688) *
                C5071 +
            ((C5427 + C5428) * C121 + (C5429 + C5430) * C50688) * C5072 +
            C5459 * C5073) *
               C50603 * C893 -
           (((C3569 + C3568) * C50688 + (C3567 + C3566) * C121) * C5073 +
            ((C3118 + C3119) * C50688 + (C3120 + C3121) * C121) * C5072 +
            ((C2377 + C2376) * C50688 + (C2375 + C2374) * C121) * C5071) *
               C50603 * C50639) *
              C895 +
          ((((C2386 + C2387) * C121 + (C2388 + C2389) * C50688) * C5071 +
            ((C3122 + C3123) * C121 + (C3124 + C3125) * C50688) * C5072 +
            ((C5983 + C5984) * C121 + (C5985 + C5986) * C50688) * C5073) *
               C50603 * C50639 -
           (C5460 * C5073 +
            ((C5442 + C5441) * C50688 + (C5440 + C5439) * C121) * C5072 +
            ((C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                 C50688 +
             (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                 C121) *
                C5071) *
               C50603 * C893) *
              C896 +
          ((((C2162 * C124 + C2157 * C131 + C2163 * C125 + C50543 * C132) *
                 C121 +
             (C2162 * C135 + C2157 * C145 + C2163 * C136 + C50543 * C146) *
                 C50688) *
                C5071 +
            ((C5769 + C5770) * C121 + (C5771 + C5772) * C50688) * C5072 +
            ((C5773 + C5774) * C121 + (C5775 + C5776) * C50688) * C5073) *
               C50603 * C893 -
           (((C2163 * C1087 + C50543 * C1095 + C2162 * C1088 + C2157 * C1096) *
                 C50688 +
             (C2163 * C1083 + C50543 * C1091 + C2162 * C1084 + C2157 * C1092) *
                 C121) *
                C5073 +
            ((C2163 * C787 + C50543 * C793 + C2162 * C786 + C2157 * C792) *
                 C50688 +
             (C2163 * C778 + C50543 * C783 + C2162 * C777 + C2157 * C782) *
                 C121) *
                C5072 +
            ((C2725 + C2724) * C50688 + (C2723 + C2722) * C121) * C5071) *
               C50603 * C50639) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                C121 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                C50688) *
               C5071 +
           ((C5427 + C5428) * C121 + (C5429 + C5430) * C50688) * C5072 +
           C5459 * C5073) *
              C50603 * C964 -
          (((C3569 + C3568) * C50688 + (C3567 + C3566) * C121) * C5073 +
           ((C3118 + C3119) * C50688 + (C3120 + C3121) * C121) * C5072 +
           ((C2377 + C2376) * C50688 + (C2375 + C2374) * C121) * C5071) *
              C50603 * C965 +
          ((C2398 * C121 + C2399 * C50688) * C5071 +
           ((C3117 + C3116) * C121 + (C3115 + C3114) * C50688) * C5072 +
           ((C3570 + C3571) * C121 + (C3572 + C3573) * C50688) * C5073) *
              C50603 * C966 -
          (((C2163 * C3543 + C50543 * C3547 + C2162 * C3544 + C2157 * C3548) *
                C50688 +
            (C2163 * C3541 + C50543 * C3545 + C2162 * C3542 + C2157 * C3546) *
                C121) *
               C5073 +
           ((C4081 + C4080) * C50688 + (C4079 + C4078) * C121) * C5072 +
           (C3382 * C50688 + C3383 * C121) * C5071) *
              C50603 * C967) *
         C50568) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                 C50688) *
                C5071 +
            ((C5427 + C5428) * C121 + (C5429 + C5430) * C50688) * C5072 +
            C5459 * C5073) *
               C391 -
           (((C5435 + C5436) * C50688 + (C5437 + C5438) * C121) * C5073 +
            ((C5434 + C5433) * C50688 + (C5432 + C5431) * C121) * C5072 +
            ((C5430 + C5429) * C50688 + (C5428 + C5427) * C121) * C5071) *
               C392 +
           (C5459 * C5071 +
            ((C5438 + C5437) * C121 + (C5436 + C5435) * C50688) * C5072 +
            ((C2162 * C5366 + C2157 * C5369 + C2163 * C5367 + C50543 * C5370) *
                 C121 +
             (C2162 * C5371 + C2157 * C5375 + C2163 * C5372 + C50543 * C5376) *
                 C50688) *
                C5073) *
               C393) *
              C893 +
          ((((C3121 + C3120) * C121 + (C3119 + C3118) * C50688) * C5071 +
            ((C3566 + C3567) * C121 + (C3568 + C3569) * C50688) * C5072 +
            ((C6395 + C6396) * C121 + (C6397 + C6398) * C50688) * C5073) *
               C392 -
           (C6401 * C5073 +
            ((C3118 + C3119) * C50688 + (C3120 + C3121) * C121) * C5072 +
            ((C2377 + C2376) * C50688 + (C2375 + C2374) * C121) * C5071) *
               C391 -
           (((C2163 * C6378 + C50543 * C6382 + C2162 * C6379 + C2157 * C6383) *
                 C50688 +
             (C2163 * C6376 + C50543 * C6380 + C2162 * C6377 + C2157 * C6381) *
                 C121) *
                C5073 +
            ((C6398 + C6397) * C50688 + (C6396 + C6395) * C121) * C5072 +
            C6401 * C5071) *
               C393) *
              C50639) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                 C2164 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                 C2159 +
             (C2374 + C2375) * C2165 + (C2376 + C2377) * C2160 + C2398 * C2166 +
             C2399 * C2161) *
                C50700 * C50830 -
            ((C3114 + C3115) * C2161 + (C3116 + C3117) * C2166 +
             (C3118 + C3119) * C2160 + (C3120 + C3121) * C2165 +
             (C2163 * C406 + C50543 * C426 + C2162 * C407 + C2157 * C427) *
                 C2159 +
             (C2163 * C396 + C50543 * C410 + C2162 * C397 + C2157 * C411) *
                 C2164) *
                C50700 * C50667) *
               C893 +
           (((C3121 + C3120) * C2164 + (C3119 + C3118) * C2159 +
             (C3117 + C3116) * C2165 + (C3115 + C3114) * C2160 +
             (C2162 * C3069 + C2157 * C3072 + C2163 * C3070 + C50543 * C3073) *
                 C2166 +
             (C2162 * C3074 + C2157 * C3078 + C2163 * C3075 + C50543 * C3079) *
                 C2161) *
                C50700 * C50667 -
            (C3382 * C2161 + C3383 * C2166 + (C2381 + C2380) * C2160 +
             (C2379 + C2378) * C2165 + (C2377 + C2376) * C2159 +
             (C2375 + C2374) * C2164) *
                C50700 * C50830) *
               C50639) *
              C50821 +
          ((((C2162 * C396 + C2157 * C410 + C2163 * C395 + C50543 * C409) *
                 C2164 +
             (C2162 * C406 + C2157 * C426 + C2163 * C405 + C50543 * C425) *
                 C2159 +
             (C3122 + C3123) * C2165 + (C3124 + C3125) * C2160 +
             (C3126 + C3127) * C2166 + (C3128 + C3129) * C2161) *
                C50700 * C50667 -
            (C2400 * C2161 + C2401 * C2166 + (C2389 + C2388) * C2160 +
             (C2387 + C2386) * C2165 +
             (C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                 C2159 +
             (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                 C2164) *
                C50700 * C50830) *
               C893 +
           (((C2386 + C2387) * C2164 + (C2388 + C2389) * C2159 +
             (C2390 + C2391) * C2165 + (C2392 + C2393) * C2160 +
             (C2394 + C2395) * C2166 + (C2396 + C2397) * C2161) *
                C50700 * C50830 -
            ((C2163 * C3076 + C50543 * C3080 + C2162 * C3075 + C2157 * C3079) *
                 C2161 +
             (C2163 * C3071 + C50543 * C3077 + C2162 * C3070 + C2157 * C3073) *
                 C2166 +
             (C3129 + C3128) * C2160 + (C3127 + C3126) * C2165 +
             (C3125 + C3124) * C2159 + (C3123 + C3122) * C2164) *
                C50700 * C50667) *
               C50639) *
              C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
              C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                 C121 +
             (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
              C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                 C50688) *
                C50700 * C50830 -
            ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
              C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                 C50688 +
             (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
              C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                 C121) *
                C50700 * C50667) *
               C893 +
           (((C117 * C775 + C105 * C780 + C118 * C776 + C106 * C781 +
              C119 * C777 + C107 * C782 + C120 * C778 + C108 * C783) *
                 C121 +
             (C117 * C784 + C105 * C790 + C118 * C785 + C106 * C791 +
              C119 * C786 + C107 * C792 + C120 * C787 + C108 * C793) *
                 C50688) *
                C50700 * C50667 -
            ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
              C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                 C50688 +
             (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
              C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                 C121) *
                C50700 * C50830) *
               C50639) *
              C50821 +
          ((((C117 * C396 + C105 * C410 + C118 * C395 + C106 * C409 +
              C119 * C394 + C107 * C408 + C120 * C402 + C108 * C420) *
                 C121 +
             (C117 * C406 + C105 * C426 + C118 * C405 + C106 * C425 +
              C119 * C404 + C107 * C424 + C120 * C421 + C108 * C432) *
                 C50688) *
                C50700 * C50667 -
            ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
              C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                 C50688 +
             (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
              C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                 C121) *
                C50700 * C50830) *
               C893 +
           (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
              C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                 C121 +
             (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
              C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                 C50688) *
                C50700 * C50830 -
            ((C120 * C788 + C108 * C794 + C119 * C787 + C107 * C793 +
              C118 * C786 + C106 * C792 + C117 * C785 + C105 * C791) *
                 C50688 +
             (C120 * C779 + C108 * C789 + C119 * C778 + C107 * C783 +
              C118 * C777 + C106 * C782 + C117 * C776 + C105 * C781) *
                 C121) *
                C50700 * C50667) *
               C50639) *
              C50574)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                  C121 +
              (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                  C50688) *
                 C5071 +
             ((C5427 + C5428) * C121 + (C5429 + C5430) * C50688) * C5072 +
             C5459 * C5073) *
                C50830 -
            (((C5435 + C5436) * C50688 + (C5437 + C5438) * C121) * C5073 +
             ((C5434 + C5433) * C50688 + (C5432 + C5431) * C121) * C5072 +
             ((C5430 + C5429) * C50688 + (C5428 + C5427) * C121) * C5071) *
                C50667) *
               C893 +
           ((((C3121 + C3120) * C121 + (C3119 + C3118) * C50688) * C5071 +
             ((C3566 + C3567) * C121 + (C3568 + C3569) * C50688) * C5072 +
             ((C6395 + C6396) * C121 + (C6397 + C6398) * C50688) * C5073) *
                C50667 -
            (C6401 * C5073 +
             ((C3118 + C3119) * C50688 + (C3120 + C3121) * C121) * C5072 +
             ((C2377 + C2376) * C50688 + (C2375 + C2374) * C121) * C5071) *
                C50830) *
               C50639) *
              C50821 +
          (((((C5439 + C5440) * C121 + (C5441 + C5442) * C50688) * C5071 +
             ((C5443 + C5444) * C121 + (C5445 + C5446) * C50688) * C5072 +
             ((C5447 + C5448) * C121 + (C5449 + C5450) * C50688) * C5073) *
                C50667 -
            (C5460 * C5073 +
             ((C5442 + C5441) * C50688 + (C5440 + C5439) * C121) * C5072 +
             ((C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                  C50688 +
              (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                  C121) *
                 C5071) *
                C50830) *
               C893 +
           ((((C2386 + C2387) * C121 + (C2388 + C2389) * C50688) * C5071 +
             ((C3122 + C3123) * C121 + (C3124 + C3125) * C50688) * C5072 +
             ((C5983 + C5984) * C121 + (C5985 + C5986) * C50688) * C5073) *
                C50830 -
            (((C2163 * C5971 + C50543 * C5973 + C2162 * C4479 + C2157 * C4485) *
                  C50688 +
              (C2163 * C5970 + C50543 * C5972 + C2162 * C4473 + C2157 * C4481) *
                  C121) *
                 C5073 +
             ((C5986 + C5985) * C50688 + (C5984 + C5983) * C121) * C5072 +
             ((C3125 + C3124) * C50688 + (C3123 + C3122) * C121) * C5071) *
                C50667) *
               C50639) *
              C50574)) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C121 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50688) *
              C50700 * C50603 * C964 -
          ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
            C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
               C50688 +
           (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
            C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
               C121) *
              C50700 * C50603 * C965 +
          ((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
            C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
               C121 +
           (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
            C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
               C50688) *
              C50700 * C50603 * C966 -
          ((C120 * C973 + C108 * C981 + C119 * C974 + C107 * C982 +
            C118 * C975 + C106 * C983 + C117 * C976 + C105 * C984) *
               C50688 +
           (C120 * C969 + C108 * C977 + C119 * C970 + C107 * C978 +
            C118 * C971 + C106 * C979 + C117 * C972 + C105 * C980) *
               C121) *
              C50700 * C50603 * C967) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50688) *
               C50700 * C50603 * C893 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50688 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50700 * C50603 * C50639) *
              C895 +
          (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
             C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                C121 +
            (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
             C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                C50688) *
               C50700 * C50603 * C50639 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50688 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50700 * C50603 * C893) *
              C896 +
          (((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
             C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                C121 +
            (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
             C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                C50688) *
               C50700 * C50603 * C893 -
           ((C120 * C538 + C108 * C540 + C119 * C280 + C107 * C291 +
             C118 * C263 + C106 * C283 + C117 * C264 + C105 * C284) *
                C50688 +
            (C120 * C537 + C108 * C539 + C119 * C261 + C107 * C279 +
             C118 * C253 + C106 * C267 + C117 * C254 + C105 * C268) *
                C121) *
               C50700 * C50603 * C50639) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                C2164 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                C2159 +
            (C2374 + C2375) * C2165 + (C2376 + C2377) * C2160 + C2398 * C2166 +
            C2399 * C2161) *
               C50700 * C50603 * C893 -
           ((C2382 + C2383) * C2161 + (C2384 + C2385) * C2166 +
            (C2381 + C2380) * C2160 + (C2379 + C2378) * C2165 +
            (C2377 + C2376) * C2159 + (C2375 + C2374) * C2164) *
               C50700 * C50603 * C50639) *
              C895 +
          (((C2386 + C2387) * C2164 + (C2388 + C2389) * C2159 +
            (C2390 + C2391) * C2165 + (C2392 + C2393) * C2160 +
            (C2394 + C2395) * C2166 + (C2396 + C2397) * C2161) *
               C50700 * C50603 * C50639 -
           (C2400 * C2161 + C2401 * C2166 + (C2389 + C2388) * C2160 +
            (C2387 + C2386) * C2165 +
            (C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                C2159 +
            (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                C2164) *
               C50700 * C50603 * C893) *
              C896 +
          (((C2162 * C124 + C2157 * C131 + C2163 * C125 + C50543 * C132) *
                C2164 +
            (C2162 * C135 + C2157 * C145 + C2163 * C136 + C50543 * C146) *
                C2159 +
            (C2722 + C2723) * C2165 + (C2724 + C2725) * C2160 +
            (C2726 + C2727) * C2166 + (C2728 + C2729) * C2161) *
               C50700 * C50603 * C893 -
           ((C2163 * C973 + C50543 * C981 + C2162 * C974 + C2157 * C982) *
                C2161 +
            (C2163 * C969 + C50543 * C977 + C2162 * C970 + C2157 * C978) *
                C2166 +
            (C2729 + C2728) * C2160 + (C2727 + C2726) * C2165 +
            (C2725 + C2724) * C2159 + (C2723 + C2722) * C2164) *
               C50700 * C50603 * C50639) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
               C2164 +
           (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
               C2159 +
           (C2374 + C2375) * C2165 + (C2376 + C2377) * C2160 + C2398 * C2166 +
           C2399 * C2161) *
              C50700 * C50603 * C964 -
          (C3382 * C2161 + C3383 * C2166 + (C2381 + C2380) * C2160 +
           (C2379 + C2378) * C2165 + (C2377 + C2376) * C2159 +
           (C2375 + C2374) * C2164) *
              C50700 * C50603 * C965 +
          (C2398 * C2164 + C2399 * C2159 + (C2385 + C2384) * C2165 +
           (C2383 + C2382) * C2160 + (C3392 + C3393) * C2166 +
           (C3394 + C3395) * C2161) *
              C50700 * C50603 * C966 -
          ((C2163 * C3375 + C50543 * C3379 + C2162 * C3376 + C2157 * C3380) *
               C2161 +
           (C2163 * C3373 + C50543 * C3377 + C2162 * C3374 + C2157 * C3378) *
               C2166 +
           (C3395 + C3394) * C2160 + (C3393 + C3392) * C2165 + C3382 * C2159 +
           C3383 * C2164) *
              C50700 * C50603 * C967) *
         C50568) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                 C50688) *
                C5071 +
            ((C5427 + C5428) * C121 + (C5429 + C5430) * C50688) * C5072 +
            C5459 * C5073) *
               C50603 * C893 -
           (((C3569 + C3568) * C50688 + (C3567 + C3566) * C121) * C5073 +
            ((C3118 + C3119) * C50688 + (C3120 + C3121) * C121) * C5072 +
            ((C2377 + C2376) * C50688 + (C2375 + C2374) * C121) * C5071) *
               C50603 * C50639) *
              C895 +
          ((((C2386 + C2387) * C121 + (C2388 + C2389) * C50688) * C5071 +
            ((C3122 + C3123) * C121 + (C3124 + C3125) * C50688) * C5072 +
            ((C5983 + C5984) * C121 + (C5985 + C5986) * C50688) * C5073) *
               C50603 * C50639 -
           (C5460 * C5073 +
            ((C5442 + C5441) * C50688 + (C5440 + C5439) * C121) * C5072 +
            ((C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                 C50688 +
             (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                 C121) *
                C5071) *
               C50603 * C893) *
              C896 +
          ((((C2162 * C124 + C2157 * C131 + C2163 * C125 + C50543 * C132) *
                 C121 +
             (C2162 * C135 + C2157 * C145 + C2163 * C136 + C50543 * C146) *
                 C50688) *
                C5071 +
            ((C5769 + C5770) * C121 + (C5771 + C5772) * C50688) * C5072 +
            ((C5773 + C5774) * C121 + (C5775 + C5776) * C50688) * C5073) *
               C50603 * C893 -
           (((C2163 * C1087 + C50543 * C1095 + C2162 * C1088 + C2157 * C1096) *
                 C50688 +
             (C2163 * C1083 + C50543 * C1091 + C2162 * C1084 + C2157 * C1092) *
                 C121) *
                C5073 +
            ((C2163 * C787 + C50543 * C793 + C2162 * C786 + C2157 * C792) *
                 C50688 +
             (C2163 * C778 + C50543 * C783 + C2162 * C777 + C2157 * C782) *
                 C121) *
                C5072 +
            ((C2725 + C2724) * C50688 + (C2723 + C2722) * C121) * C5071) *
               C50603 * C50639) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                C121 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                C50688) *
               C5071 +
           ((C5427 + C5428) * C121 + (C5429 + C5430) * C50688) * C5072 +
           C5459 * C5073) *
              C50603 * C964 -
          (((C3569 + C3568) * C50688 + (C3567 + C3566) * C121) * C5073 +
           ((C3118 + C3119) * C50688 + (C3120 + C3121) * C121) * C5072 +
           ((C2377 + C2376) * C50688 + (C2375 + C2374) * C121) * C5071) *
              C50603 * C965 +
          ((C2398 * C121 + C2399 * C50688) * C5071 +
           ((C3117 + C3116) * C121 + (C3115 + C3114) * C50688) * C5072 +
           ((C3570 + C3571) * C121 + (C3572 + C3573) * C50688) * C5073) *
              C50603 * C966 -
          (((C2163 * C3543 + C50543 * C3547 + C2162 * C3544 + C2157 * C3548) *
                C50688 +
            (C2163 * C3541 + C50543 * C3545 + C2162 * C3542 + C2157 * C3546) *
                C121) *
               C5073 +
           ((C4081 + C4080) * C50688 + (C4079 + C4078) * C121) * C5072 +
           (C3382 * C50688 + C3383 * C121) * C5071) *
              C50603 * C967) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                 C2164 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                 C2159 +
             (C2374 + C2375) * C2165 + (C2376 + C2377) * C2160 + C2398 * C2166 +
             C2399 * C2161) *
                C50700 * C1544 -
            (C4068 * C2161 + C4069 * C2166 + (C3118 + C3119) * C2160 +
             (C3120 + C3121) * C2165 +
             (C2163 * C406 + C50543 * C426 + C2162 * C407 + C2157 * C427) *
                 C2159 +
             (C2163 * C396 + C50543 * C410 + C2162 * C397 + C2157 * C411) *
                 C2164) *
                C50700 * C50667) *
               C50829 +
           (((C3121 + C3120) * C2164 + (C3119 + C3118) * C2159 +
             (C3117 + C3116) * C2165 + (C3115 + C3114) * C2160 +
             (C4078 + C4079) * C2166 + (C4080 + C4081) * C2161) *
                C50700 * C50667 -
            (C3382 * C2161 + C3383 * C2166 + (C2381 + C2380) * C2160 +
             (C2379 + C2378) * C2165 + (C2377 + C2376) * C2159 +
             (C2375 + C2374) * C2164) *
                C50700 * C1544) *
               C50639) *
              C50821 +
          ((((C2162 * C396 + C2157 * C410 + C2163 * C395 + C50543 * C409) *
                 C2164 +
             (C2162 * C406 + C2157 * C426 + C2163 * C405 + C50543 * C425) *
                 C2159 +
             (C3122 + C3123) * C2165 + (C3124 + C3125) * C2160 +
             (C3126 + C3127) * C2166 + (C3128 + C3129) * C2161) *
                C50700 * C50667 -
            (C2400 * C2161 + C2401 * C2166 + (C2389 + C2388) * C2160 +
             (C2387 + C2386) * C2165 +
             (C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                 C2159 +
             (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                 C2164) *
                C50700 * C1544) *
               C50829 +
           (((C2386 + C2387) * C2164 + (C2388 + C2389) * C2159 +
             (C2390 + C2391) * C2165 + (C2392 + C2393) * C2160 +
             (C2394 + C2395) * C2166 + (C2396 + C2397) * C2161) *
                C50700 * C1544 -
            ((C2163 * C3076 + C50543 * C3080 + C2162 * C3075 + C2157 * C3079) *
                 C2161 +
             (C2163 * C3071 + C50543 * C3077 + C2162 * C3070 + C2157 * C3073) *
                 C2166 +
             (C3129 + C3128) * C2160 + (C3127 + C3126) * C2165 +
             (C3125 + C3124) * C2159 + (C3123 + C3122) * C2164) *
                C50700 * C50667) *
               C50639) *
              C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
              C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                 C121 +
             (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
              C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                 C50688) *
                C50700 * C1544 -
            ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
              C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                 C50688 +
             (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
              C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                 C121) *
                C50700 * C50667) *
               C50829 +
           (((C117 * C775 + C105 * C780 + C118 * C776 + C106 * C781 +
              C119 * C777 + C107 * C782 + C120 * C778 + C108 * C783) *
                 C121 +
             (C117 * C784 + C105 * C790 + C118 * C785 + C106 * C791 +
              C119 * C786 + C107 * C792 + C120 * C787 + C108 * C793) *
                 C50688) *
                C50700 * C50667 -
            ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
              C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                 C50688 +
             (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
              C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                 C121) *
                C50700 * C1544) *
               C50639) *
              C50821 +
          ((((C117 * C396 + C105 * C410 + C118 * C395 + C106 * C409 +
              C119 * C394 + C107 * C408 + C120 * C402 + C108 * C420) *
                 C121 +
             (C117 * C406 + C105 * C426 + C118 * C405 + C106 * C425 +
              C119 * C404 + C107 * C424 + C120 * C421 + C108 * C432) *
                 C50688) *
                C50700 * C50667 -
            ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
              C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                 C50688 +
             (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
              C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                 C121) *
                C50700 * C1544) *
               C50829 +
           (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
              C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                 C121 +
             (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
              C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                 C50688) *
                C50700 * C1544 -
            ((C120 * C788 + C108 * C794 + C119 * C787 + C107 * C793 +
              C118 * C786 + C106 * C792 + C117 * C785 + C105 * C791) *
                 C50688 +
             (C120 * C779 + C108 * C789 + C119 * C778 + C107 * C783 +
              C118 * C777 + C106 * C782 + C117 * C776 + C105 * C781) *
                 C121) *
                C50700 * C50667) *
               C50639) *
              C50574)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                  C121 +
              (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                  C50688) *
                 C5071 +
             ((C5427 + C5428) * C121 + (C5429 + C5430) * C50688) * C5072 +
             C5459 * C5073) *
                C1544 -
            (C7302 * C5073 +
             ((C5434 + C5433) * C50688 + (C5432 + C5431) * C121) * C5072 +
             ((C5430 + C5429) * C50688 + (C5428 + C5427) * C121) * C5071) *
                C50667) *
               C50829 +
           ((((C3121 + C3120) * C121 + (C3119 + C3118) * C50688) * C5071 +
             ((C3566 + C3567) * C121 + (C3568 + C3569) * C50688) * C5072 +
             ((C6395 + C6396) * C121 + (C6397 + C6398) * C50688) * C5073) *
                C50667 -
            (C6401 * C5073 +
             ((C3118 + C3119) * C50688 + (C3120 + C3121) * C121) * C5072 +
             ((C2377 + C2376) * C50688 + (C2375 + C2374) * C121) * C5071) *
                C1544) *
               C50639) *
              C50821 +
          (((((C5439 + C5440) * C121 + (C5441 + C5442) * C50688) * C5071 +
             ((C5443 + C5444) * C121 + (C5445 + C5446) * C50688) * C5072 +
             ((C5447 + C5448) * C121 + (C5449 + C5450) * C50688) * C5073) *
                C50667 -
            (C5460 * C5073 +
             ((C5442 + C5441) * C50688 + (C5440 + C5439) * C121) * C5072 +
             ((C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                  C50688 +
              (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                  C121) *
                 C5071) *
                C1544) *
               C50829 +
           ((((C2386 + C2387) * C121 + (C2388 + C2389) * C50688) * C5071 +
             ((C3122 + C3123) * C121 + (C3124 + C3125) * C50688) * C5072 +
             ((C5983 + C5984) * C121 + (C5985 + C5986) * C50688) * C5073) *
                C1544 -
            (((C2163 * C5971 + C50543 * C5973 + C2162 * C4479 + C2157 * C4485) *
                  C50688 +
              (C2163 * C5970 + C50543 * C5972 + C2162 * C4473 + C2157 * C4481) *
                  C121) *
                 C5073 +
             ((C5986 + C5985) * C50688 + (C5984 + C5983) * C121) * C5072 +
             ((C3125 + C3124) * C50688 + (C3123 + C3122) * C121) * C5071) *
                C50667) *
               C50639) *
              C50574)) /
            (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                C2164 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                C2159 +
            (C2374 + C2375) * C2165 + (C2376 + C2377) * C2160 + C2398 * C2166 +
            C2399 * C2161) *
               C50700 * C50876 -
           (C4068 * C2161 + C4069 * C2166 + (C3118 + C3119) * C2160 +
            (C3120 + C3121) * C2165 +
            (C2163 * C406 + C50543 * C426 + C2162 * C407 + C2157 * C427) *
                C2159 +
            (C2163 * C396 + C50543 * C410 + C2162 * C397 + C2157 * C411) *
                C2164) *
               C50700 * C50877 +
           ((C2162 * C398 + C2157 * C412 + C2163 * C399 + C50543 * C413) *
                C2164 +
            (C2162 * C416 + C2157 * C428 + C2163 * C417 + C50543 * C429) *
                C2159 +
            (C3566 + C3567) * C2165 + (C3568 + C3569) * C2160 +
            (C3570 + C3571) * C2166 + (C3572 + C3573) * C2161) *
               C50700 * C1960) *
              C50829 +
          (((C3121 + C3120) * C2164 + (C3119 + C3118) * C2159 +
            (C3117 + C3116) * C2165 + (C3115 + C3114) * C2160 +
            (C4078 + C4079) * C2166 + (C4080 + C4081) * C2161) *
               C50700 * C50877 -
           (C3382 * C2161 + C3383 * C2166 + (C2381 + C2380) * C2160 +
            (C2379 + C2378) * C2165 + (C2377 + C2376) * C2159 +
            (C2375 + C2374) * C2164) *
               C50700 * C50876 -
           ((C2163 * C3543 + C50543 * C3547 + C2162 * C3544 + C2157 * C3548) *
                C2161 +
            (C2163 * C3541 + C50543 * C3545 + C2162 * C3542 + C2157 * C3546) *
                C2166 +
            (C3573 + C3572) * C2160 + (C3571 + C3570) * C2165 +
            (C3569 + C3568) * C2159 + (C3567 + C3566) * C2164) *
               C50700 * C1960) *
              C50639) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50688) *
               C50700 * C50876 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50688 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50700 * C50877 +
           ((C117 * C398 + C105 * C412 + C118 * C399 + C106 * C413 +
             C119 * C400 + C107 * C414 + C120 * C401 + C108 * C415) *
                C121 +
            (C117 * C416 + C105 * C428 + C118 * C417 + C106 * C429 +
             C119 * C418 + C107 * C430 + C120 * C419 + C108 * C431) *
                C50688) *
               C50700 * C1960) *
              C50829 +
          (((C117 * C775 + C105 * C780 + C118 * C776 + C106 * C781 +
             C119 * C777 + C107 * C782 + C120 * C778 + C108 * C783) *
                C121 +
            (C117 * C784 + C105 * C790 + C118 * C785 + C106 * C791 +
             C119 * C786 + C107 * C792 + C120 * C787 + C108 * C793) *
                C50688) *
               C50700 * C50877 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50688 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50700 * C50876 -
           ((C120 * C1087 + C108 * C1095 + C119 * C1088 + C107 * C1096 +
             C118 * C1089 + C106 * C1097 + C117 * C1090 + C105 * C1098) *
                C50688 +
            (C120 * C1083 + C108 * C1091 + C119 * C1084 + C107 * C1092 +
             C118 * C1085 + C106 * C1093 + C117 * C1086 + C105 * C1094) *
                C121) *
               C50700 * C1960) *
              C50639) *
         C50568) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                 C50688) *
                C5071 +
            ((C5427 + C5428) * C121 + (C5429 + C5430) * C50688) * C5072 +
            C5459 * C5073) *
               C50876 -
           (C7302 * C5073 +
            ((C5434 + C5433) * C50688 + (C5432 + C5431) * C121) * C5072 +
            ((C5430 + C5429) * C50688 + (C5428 + C5427) * C121) * C5071) *
               C50877 +
           (C5459 * C5071 +
            ((C5438 + C5437) * C121 + (C5436 + C5435) * C50688) * C5072 +
            ((C7298 + C7299) * C121 + (C7300 + C7301) * C50688) * C5073) *
               C1960) *
              C50829 +
          ((((C3121 + C3120) * C121 + (C3119 + C3118) * C50688) * C5071 +
            ((C3566 + C3567) * C121 + (C3568 + C3569) * C50688) * C5072 +
            ((C6395 + C6396) * C121 + (C6397 + C6398) * C50688) * C5073) *
               C50877 -
           (C6401 * C5073 +
            ((C3118 + C3119) * C50688 + (C3120 + C3121) * C121) * C5072 +
            ((C2377 + C2376) * C50688 + (C2375 + C2374) * C121) * C5071) *
               C50876 -
           (((C2163 * C6378 + C50543 * C6382 + C2162 * C6379 + C2157 * C6383) *
                 C50688 +
             (C2163 * C6376 + C50543 * C6380 + C2162 * C6377 + C2157 * C6381) *
                 C121) *
                C5073 +
            ((C6398 + C6397) * C50688 + (C6396 + C6395) * C121) * C5072 +
            C6401 * C5071) *
               C1960) *
              C50639) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
                 C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                    C121 +
                (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
                 C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                    C50688) *
                   C50700 * C1544 -
               ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
                 C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                    C50688 +
                (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
                 C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                    C121) *
                   C50700 * C50667) *
                  C50587 * C895 +
              (((C117 * C396 + C105 * C410 + C118 * C395 + C106 * C409 +
                 C119 * C394 + C107 * C408 + C120 * C402 + C108 * C420) *
                    C121 +
                (C117 * C406 + C105 * C426 + C118 * C405 + C106 * C425 +
                 C119 * C404 + C107 * C424 + C120 * C421 + C108 * C432) *
                    C50688) *
                   C50700 * C50667 -
               ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
                 C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                    C50688 +
                (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
                 C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                    C121) *
                   C50700 * C1544) *
                  C50587 * C896 +
              (((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
                 C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                    C121 +
                (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
                 C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                    C50688) *
                   C50700 * C1544 -
               ((C120 * C642 + C108 * C644 + C119 * C421 + C107 * C432 +
                 C118 * C404 + C106 * C424 + C117 * C405 + C105 * C425) *
                    C50688 +
                (C120 * C641 + C108 * C643 + C119 * C402 + C107 * C420 +
                 C118 * C394 + C106 * C408 + C117 * C395 + C105 * C409) *
                    C121) *
                   C50700 * C50667) *
                  C50587 * C897) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
                 C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                    C121 +
                (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
                 C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                    C50688) *
                   C50700 * C1544 -
               ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
                 C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                    C50688 +
                (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
                 C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                    C121) *
                   C50700 * C50667) *
                  C248 +
              (((C117 * C775 + C105 * C780 + C118 * C776 + C106 * C781 +
                 C119 * C777 + C107 * C782 + C120 * C778 + C108 * C783) *
                    C121 +
                (C117 * C784 + C105 * C790 + C118 * C785 + C106 * C791 +
                 C119 * C786 + C107 * C792 + C120 * C787 + C108 * C793) *
                    C50688) *
                   C50700 * C50667 -
               ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
                 C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                    C50688 +
                (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
                 C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                    C121) *
                   C50700 * C1544) *
                  C249 +
              (((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
                 C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
                    C121 +
                (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
                 C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
                    C50688) *
                   C50700 * C1544 -
               ((C120 * C1434 + C108 * C1442 + C119 * C1435 + C107 * C1443 +
                 C118 * C1436 + C106 * C1444 + C117 * C1437 + C105 * C1445) *
                    C50688 +
                (C120 * C1430 + C108 * C1438 + C119 * C1431 + C107 * C1439 +
                 C118 * C1432 + C106 * C1440 + C117 * C1433 + C105 * C1441) *
                    C121) *
                   C50700 * C50667) *
                  C250) *
             C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C121 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50688) *
              C50700 * C1710 -
          ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
            C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
               C50688 +
           (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
            C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
               C121) *
              C50700 * C1711 +
          ((C117 * C398 + C105 * C412 + C118 * C399 + C106 * C413 +
            C119 * C400 + C107 * C414 + C120 * C401 + C108 * C415) *
               C121 +
           (C117 * C416 + C105 * C428 + C118 * C417 + C106 * C429 +
            C119 * C418 + C107 * C430 + C120 * C419 + C108 * C431) *
               C50688) *
              C50700 * C1712 -
          ((C120 * C1718 + C108 * C1726 + C119 * C1719 + C107 * C1727 +
            C118 * C1720 + C106 * C1728 + C117 * C1721 + C105 * C1729) *
               C50688 +
           (C120 * C1714 + C108 * C1722 + C119 * C1715 + C107 * C1723 +
            C118 * C1716 + C106 * C1724 + C117 * C1717 + C105 * C1725) *
               C121) *
              C50700 * C1713) *
         C50587 * C50568) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                C2164 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                C2159 +
            (C2374 + C2375) * C2165 + (C2376 + C2377) * C2160 + C2398 * C2166 +
            C2399 * C2161) *
               C50700 * C1544 -
           (C4068 * C2161 + C4069 * C2166 + (C3118 + C3119) * C2160 +
            (C3120 + C3121) * C2165 +
            (C2163 * C406 + C50543 * C426 + C2162 * C407 + C2157 * C427) *
                C2159 +
            (C2163 * C396 + C50543 * C410 + C2162 * C397 + C2157 * C411) *
                C2164) *
               C50700 * C50667) *
              C50587 * C895 +
          (((C2162 * C396 + C2157 * C410 + C2163 * C395 + C50543 * C409) *
                C2164 +
            (C2162 * C406 + C2157 * C426 + C2163 * C405 + C50543 * C425) *
                C2159 +
            (C3122 + C3123) * C2165 + (C3124 + C3125) * C2160 +
            (C3126 + C3127) * C2166 + (C3128 + C3129) * C2161) *
               C50700 * C50667 -
           (C2400 * C2161 + C2401 * C2166 + (C2389 + C2388) * C2160 +
            (C2387 + C2386) * C2165 +
            (C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                C2159 +
            (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                C2164) *
               C50700 * C1544) *
              C50587 * C896 +
          (((C2162 * C124 + C2157 * C131 + C2163 * C125 + C50543 * C132) *
                C2164 +
            (C2162 * C135 + C2157 * C145 + C2163 * C136 + C50543 * C146) *
                C2159 +
            (C2722 + C2723) * C2165 + (C2724 + C2725) * C2160 +
            (C2726 + C2727) * C2166 + (C2728 + C2729) * C2161) *
               C50700 * C1544 -
           ((C2163 * C1434 + C50543 * C1442 + C2162 * C1435 + C2157 * C1443) *
                C2161 +
            (C2163 * C1430 + C50543 * C1438 + C2162 * C1431 + C2157 * C1439) *
                C2166 +
            (C2163 * C787 + C50543 * C793 + C2162 * C786 + C2157 * C792) *
                C2160 +
            (C2163 * C778 + C50543 * C783 + C2162 * C777 + C2157 * C782) *
                C2165 +
            (C2163 * C404 + C50543 * C424 + C2162 * C405 + C2157 * C425) *
                C2159 +
            (C2163 * C394 + C50543 * C408 + C2162 * C395 + C2157 * C409) *
                C2164) *
               C50700 * C50667) *
              C50587 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                C2164 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                C2159 +
            (C2374 + C2375) * C2165 + (C2376 + C2377) * C2160 + C2398 * C2166 +
            C2399 * C2161) *
               C50700 * C1544 -
           (C4068 * C2161 + C4069 * C2166 + (C3118 + C3119) * C2160 +
            (C3120 + C3121) * C2165 +
            (C2163 * C406 + C50543 * C426 + C2162 * C407 + C2157 * C427) *
                C2159 +
            (C2163 * C396 + C50543 * C410 + C2162 * C397 + C2157 * C411) *
                C2164) *
               C50700 * C50667) *
              C248 +
          (((C3121 + C3120) * C2164 + (C3119 + C3118) * C2159 +
            (C3117 + C3116) * C2165 + (C3115 + C3114) * C2160 +
            (C4078 + C4079) * C2166 + (C4080 + C4081) * C2161) *
               C50700 * C50667 -
           (C3382 * C2161 + C3383 * C2166 + (C2381 + C2380) * C2160 +
            (C2379 + C2378) * C2165 + (C2377 + C2376) * C2159 +
            (C2375 + C2374) * C2164) *
               C50700 * C1544) *
              C249 +
          ((C2398 * C2164 + C2399 * C2159 + (C2385 + C2384) * C2165 +
            (C2383 + C2382) * C2160 + (C3392 + C3393) * C2166 +
            (C3394 + C3395) * C2161) *
               C50700 * C1544 -
           ((C2163 * C4061 + C50543 * C4065 + C2162 * C4062 + C2157 * C4066) *
                C2161 +
            (C2163 * C4059 + C50543 * C4063 + C2162 * C4060 + C2157 * C4064) *
                C2166 +
            (C4081 + C4080) * C2160 + (C4079 + C4078) * C2165 + C4068 * C2159 +
            C4069 * C2164) *
               C50700 * C50667) *
              C250) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
               C2164 +
           (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
               C2159 +
           (C2374 + C2375) * C2165 + (C2376 + C2377) * C2160 + C2398 * C2166 +
           C2399 * C2161) *
              C50700 * C1710 -
          (C4068 * C2161 + C4069 * C2166 + (C3118 + C3119) * C2160 +
           (C3120 + C3121) * C2165 +
           (C2163 * C406 + C50543 * C426 + C2162 * C407 + C2157 * C427) *
               C2159 +
           (C2163 * C396 + C50543 * C410 + C2162 * C397 + C2157 * C411) *
               C2164) *
              C50700 * C1711 +
          ((C2162 * C398 + C2157 * C412 + C2163 * C399 + C50543 * C413) *
               C2164 +
           (C2162 * C416 + C2157 * C428 + C2163 * C417 + C50543 * C429) *
               C2159 +
           (C3566 + C3567) * C2165 + (C3568 + C3569) * C2160 +
           (C3570 + C3571) * C2166 + (C3572 + C3573) * C2161) *
              C50700 * C1712 -
          ((C2163 * C4475 + C50543 * C4483 + C2162 * C4476 + C2157 * C4484) *
               C2161 +
           (C2163 * C4471 + C50543 * C4477 + C2162 * C4472 + C2157 * C4478) *
               C2166 +
           (C2163 * C4479 + C50543 * C4485 + C2162 * C4480 + C2157 * C4486) *
               C2160 +
           (C2163 * C4473 + C50543 * C4481 + C2162 * C4474 + C2157 * C4482) *
               C2165 +
           (C2163 * C1720 + C50543 * C1728 + C2162 * C1721 + C2157 * C1729) *
               C2159 +
           (C2163 * C1716 + C50543 * C1724 + C2162 * C1717 + C2157 * C1725) *
               C2164) *
              C50700 * C1713) *
         C50587 * C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                 C50688) *
                C5071 +
            ((C5427 + C5428) * C121 + (C5429 + C5430) * C50688) * C5072 +
            C5459 * C5073) *
               C1544 -
           (((C5435 + C5436) * C50688 + (C5437 + C5438) * C121) * C5073 +
            ((C5434 + C5433) * C50688 + (C5432 + C5431) * C121) * C5072 +
            ((C5430 + C5429) * C50688 + (C5428 + C5427) * C121) * C5071) *
               C50667) *
              C50587 * C895 +
          ((((C5439 + C5440) * C121 + (C5441 + C5442) * C50688) * C5071 +
            ((C5443 + C5444) * C121 + (C5445 + C5446) * C50688) * C5072 +
            ((C5447 + C5448) * C121 + (C5449 + C5450) * C50688) * C5073) *
               C50667 -
           (C5460 * C5073 +
            ((C5442 + C5441) * C50688 + (C5440 + C5439) * C121) * C5072 +
            ((C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                 C50688 +
             (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                 C121) *
                C5071) *
               C1544) *
              C50587 * C896 +
          ((((C2162 * C124 + C2157 * C131 + C2163 * C125 + C50543 * C132) *
                 C121 +
             (C2162 * C135 + C2157 * C145 + C2163 * C136 + C50543 * C146) *
                 C50688) *
                C5071 +
            ((C5769 + C5770) * C121 + (C5771 + C5772) * C50688) * C5072 +
            ((C5773 + C5774) * C121 + (C5775 + C5776) * C50688) * C5073) *
               C1544 -
           (((C2163 * C1718 + C50543 * C1726 + C2162 * C1719 + C2157 * C1727) *
                 C50688 +
             (C2163 * C1714 + C50543 * C1722 + C2162 * C1715 + C2157 * C1723) *
                 C121) *
                C5073 +
            ((C5776 + C5775) * C50688 + (C5774 + C5773) * C121) * C5072 +
            ((C5772 + C5771) * C50688 + (C5770 + C5769) * C121) * C5071) *
               C50667) *
              C50587 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                 C50688) *
                C5071 +
            ((C5427 + C5428) * C121 + (C5429 + C5430) * C50688) * C5072 +
            C5459 * C5073) *
               C1544 -
           (((C5435 + C5436) * C50688 + (C5437 + C5438) * C121) * C5073 +
            ((C5434 + C5433) * C50688 + (C5432 + C5431) * C121) * C5072 +
            ((C5430 + C5429) * C50688 + (C5428 + C5427) * C121) * C5071) *
               C50667) *
              C248 +
          ((((C3121 + C3120) * C121 + (C3119 + C3118) * C50688) * C5071 +
            ((C3566 + C3567) * C121 + (C3568 + C3569) * C50688) * C5072 +
            ((C6395 + C6396) * C121 + (C6397 + C6398) * C50688) * C5073) *
               C50667 -
           (C6401 * C5073 +
            ((C3118 + C3119) * C50688 + (C3120 + C3121) * C121) * C5072 +
            ((C2377 + C2376) * C50688 + (C2375 + C2374) * C121) * C5071) *
               C1544) *
              C249 +
          (((C2398 * C121 + C2399 * C50688) * C5071 +
            ((C3117 + C3116) * C121 + (C3115 + C3114) * C50688) * C5072 +
            ((C3570 + C3571) * C121 + (C3572 + C3573) * C50688) * C5073) *
               C1544 -
           (((C2163 * C4475 + C50543 * C4483 + C2162 * C4476 + C2157 * C4484) *
                 C50688 +
             (C2163 * C4471 + C50543 * C4477 + C2162 * C4472 + C2157 * C4478) *
                 C121) *
                C5073 +
            ((C3573 + C3572) * C50688 + (C3571 + C3570) * C121) * C5072 +
            (C4068 * C50688 + C4069 * C121) * C5071) *
               C50667) *
              C250) *
         C50568) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                C121 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                C50688) *
               C5071 +
           ((C5427 + C5428) * C121 + (C5429 + C5430) * C50688) * C5072 +
           C5459 * C5073) *
              C1710 -
          (C7302 * C5073 +
           ((C5434 + C5433) * C50688 + (C5432 + C5431) * C121) * C5072 +
           ((C5430 + C5429) * C50688 + (C5428 + C5427) * C121) * C5071) *
              C1711 +
          (C5459 * C5071 +
           ((C5438 + C5437) * C121 + (C5436 + C5435) * C50688) * C5072 +
           ((C7298 + C7299) * C121 + (C7300 + C7301) * C50688) * C5073) *
              C1712 -
          (((C2163 * C7279 + C50543 * C7283 + C2162 * C7280 + C2157 * C7284) *
                C50688 +
            (C2163 * C7277 + C50543 * C7281 + C2162 * C7278 + C2157 * C7282) *
                C121) *
               C5073 +
           ((C7301 + C7300) * C50688 + (C7299 + C7298) * C121) * C5072 +
           C7302 * C5071) *
              C1713) *
         C50587 * C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                C2164 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                C2159 +
            (C2374 + C2375) * C2165 + (C2376 + C2377) * C2160 + C2398 * C2166 +
            C2399 * C2161) *
               C50700 * C50876 -
           (C4068 * C2161 + C4069 * C2166 + (C3118 + C3119) * C2160 +
            (C3120 + C3121) * C2165 +
            (C2163 * C406 + C50543 * C426 + C2162 * C407 + C2157 * C427) *
                C2159 +
            (C2163 * C396 + C50543 * C410 + C2162 * C397 + C2157 * C411) *
                C2164) *
               C50700 * C50877 +
           ((C2162 * C398 + C2157 * C412 + C2163 * C399 + C50543 * C413) *
                C2164 +
            (C2162 * C416 + C2157 * C428 + C2163 * C417 + C50543 * C429) *
                C2159 +
            (C3566 + C3567) * C2165 + (C3568 + C3569) * C2160 +
            (C3570 + C3571) * C2166 + (C3572 + C3573) * C2161) *
               C50700 * C1960) *
              C50587 * C50821 +
          (((C2162 * C396 + C2157 * C410 + C2163 * C395 + C50543 * C409) *
                C2164 +
            (C2162 * C406 + C2157 * C426 + C2163 * C405 + C50543 * C425) *
                C2159 +
            (C3122 + C3123) * C2165 + (C3124 + C3125) * C2160 +
            (C3126 + C3127) * C2166 + (C3128 + C3129) * C2161) *
               C50700 * C50877 -
           (C2400 * C2161 + C2401 * C2166 + (C2389 + C2388) * C2160 +
            (C2387 + C2386) * C2165 +
            (C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                C2159 +
            (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                C2164) *
               C50700 * C50876 -
           ((C2163 * C2554 + C50543 * C2558 + C2162 * C2553 + C2157 * C2557) *
                C2161 +
            (C2163 * C2549 + C50543 * C2555 + C2162 * C2548 + C2157 * C2551) *
                C2166 +
            (C2163 * C1088 + C50543 * C1096 + C2162 * C1089 + C2157 * C1097) *
                C2160 +
            (C2163 * C1084 + C50543 * C1092 + C2162 * C1085 + C2157 * C1093) *
                C2165 +
            (C2163 * C418 + C50543 * C430 + C2162 * C417 + C2157 * C429) *
                C2159 +
            (C2163 * C400 + C50543 * C414 + C2162 * C399 + C2157 * C413) *
                C2164) *
               C50700 * C1960) *
              C50587 * C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50688) *
               C50700 * C50876 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50688 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50700 * C50877 +
           ((C117 * C398 + C105 * C412 + C118 * C399 + C106 * C413 +
             C119 * C400 + C107 * C414 + C120 * C401 + C108 * C415) *
                C121 +
            (C117 * C416 + C105 * C428 + C118 * C417 + C106 * C429 +
             C119 * C418 + C107 * C430 + C120 * C419 + C108 * C431) *
                C50688) *
               C50700 * C1960) *
              C50587 * C50821 +
          (((C117 * C396 + C105 * C410 + C118 * C395 + C106 * C409 +
             C119 * C394 + C107 * C408 + C120 * C402 + C108 * C420) *
                C121 +
            (C117 * C406 + C105 * C426 + C118 * C405 + C106 * C425 +
             C119 * C404 + C107 * C424 + C120 * C421 + C108 * C432) *
                C50688) *
               C50700 * C50877 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50688 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50700 * C50876 -
           ((C120 * C422 + C108 * C433 + C119 * C419 + C107 * C431 +
             C118 * C418 + C106 * C430 + C117 * C417 + C105 * C429) *
                C50688 +
            (C120 * C403 + C108 * C423 + C119 * C401 + C107 * C415 +
             C118 * C400 + C106 * C414 + C117 * C399 + C105 * C413) *
                C121) *
               C50700 * C1960) *
              C50587 * C50574)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                 C50688) *
                C5071 +
            ((C5427 + C5428) * C121 + (C5429 + C5430) * C50688) * C5072 +
            C5459 * C5073) *
               C50876 -
           (C7302 * C5073 +
            ((C5434 + C5433) * C50688 + (C5432 + C5431) * C121) * C5072 +
            ((C5430 + C5429) * C50688 + (C5428 + C5427) * C121) * C5071) *
               C50877 +
           (C5459 * C5071 +
            ((C5438 + C5437) * C121 + (C5436 + C5435) * C50688) * C5072 +
            ((C7298 + C7299) * C121 + (C7300 + C7301) * C50688) * C5073) *
               C1960) *
              C50587 * C50821 +
          ((((C5439 + C5440) * C121 + (C5441 + C5442) * C50688) * C5071 +
            ((C5443 + C5444) * C121 + (C5445 + C5446) * C50688) * C5072 +
            ((C5447 + C5448) * C121 + (C5449 + C5450) * C50688) * C5073) *
               C50877 -
           (C5460 * C5073 +
            ((C5442 + C5441) * C50688 + (C5440 + C5439) * C121) * C5072 +
            ((C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                 C50688 +
             (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                 C121) *
                C5071) *
               C50876 -
           (((C2163 * C5373 + C50543 * C5377 + C2162 * C5372 + C2157 * C5376) *
                 C50688 +
             (C2163 * C5368 + C50543 * C5374 + C2162 * C5367 + C2157 * C5370) *
                 C121) *
                C5073 +
            ((C5450 + C5449) * C50688 + (C5448 + C5447) * C121) * C5072 +
            C5460 * C5071) *
               C1960) *
              C50587 * C50574)) /
            (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50688) *
               C50700 * C1544 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50688 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50700 * C50667) *
              C248 +
          (((C117 * C775 + C105 * C780 + C118 * C776 + C106 * C781 +
             C119 * C777 + C107 * C782 + C120 * C778 + C108 * C783) *
                C121 +
            (C117 * C784 + C105 * C790 + C118 * C785 + C106 * C791 +
             C119 * C786 + C107 * C792 + C120 * C787 + C108 * C793) *
                C50688) *
               C50700 * C50667 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50688 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50700 * C1544) *
              C249 +
          (((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
             C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
                C121 +
            (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
             C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
                C50688) *
               C50700 * C1544 -
           ((C120 * C1434 + C108 * C1442 + C119 * C1435 + C107 * C1443 +
             C118 * C1436 + C106 * C1444 + C117 * C1437 + C105 * C1445) *
                C50688 +
            (C120 * C1430 + C108 * C1438 + C119 * C1431 + C107 * C1439 +
             C118 * C1432 + C106 * C1440 + C117 * C1433 + C105 * C1441) *
                C121) *
               C50700 * C50667) *
              C250) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50688) *
               C50700 * C1544 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50688 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50700 * C50667) *
              C50587 * C895 +
          (((C117 * C396 + C105 * C410 + C118 * C395 + C106 * C409 +
             C119 * C394 + C107 * C408 + C120 * C402 + C108 * C420) *
                C121 +
            (C117 * C406 + C105 * C426 + C118 * C405 + C106 * C425 +
             C119 * C404 + C107 * C424 + C120 * C421 + C108 * C432) *
                C50688) *
               C50700 * C50667 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50688 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50700 * C1544) *
              C50587 * C896 +
          (((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
             C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                C121 +
            (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
             C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                C50688) *
               C50700 * C1544 -
           ((C120 * C642 + C108 * C644 + C119 * C421 + C107 * C432 +
             C118 * C404 + C106 * C424 + C117 * C405 + C105 * C425) *
                C50688 +
            (C120 * C641 + C108 * C643 + C119 * C402 + C107 * C420 +
             C118 * C394 + C106 * C408 + C117 * C395 + C105 * C409) *
                C121) *
               C50700 * C50667) *
              C50587 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                C2164 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                C2159 +
            (C2374 + C2375) * C2165 + (C2376 + C2377) * C2160 + C2398 * C2166 +
            C2399 * C2161) *
               C50700 * C1544 -
           (C4068 * C2161 + C4069 * C2166 + (C3118 + C3119) * C2160 +
            (C3120 + C3121) * C2165 +
            (C2163 * C406 + C50543 * C426 + C2162 * C407 + C2157 * C427) *
                C2159 +
            (C2163 * C396 + C50543 * C410 + C2162 * C397 + C2157 * C411) *
                C2164) *
               C50700 * C50667) *
              C50587 * C895 +
          (((C2162 * C396 + C2157 * C410 + C2163 * C395 + C50543 * C409) *
                C2164 +
            (C2162 * C406 + C2157 * C426 + C2163 * C405 + C50543 * C425) *
                C2159 +
            (C3122 + C3123) * C2165 + (C3124 + C3125) * C2160 +
            (C3126 + C3127) * C2166 + (C3128 + C3129) * C2161) *
               C50700 * C50667 -
           (C2400 * C2161 + C2401 * C2166 + (C2389 + C2388) * C2160 +
            (C2387 + C2386) * C2165 +
            (C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                C2159 +
            (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                C2164) *
               C50700 * C1544) *
              C50587 * C896 +
          (((C2162 * C124 + C2157 * C131 + C2163 * C125 + C50543 * C132) *
                C2164 +
            (C2162 * C135 + C2157 * C145 + C2163 * C136 + C50543 * C146) *
                C2159 +
            (C2722 + C2723) * C2165 + (C2724 + C2725) * C2160 +
            (C2726 + C2727) * C2166 + (C2728 + C2729) * C2161) *
               C50700 * C1544 -
           ((C2163 * C1434 + C50543 * C1442 + C2162 * C1435 + C2157 * C1443) *
                C2161 +
            (C2163 * C1430 + C50543 * C1438 + C2162 * C1431 + C2157 * C1439) *
                C2166 +
            (C2163 * C787 + C50543 * C793 + C2162 * C786 + C2157 * C792) *
                C2160 +
            (C2163 * C778 + C50543 * C783 + C2162 * C777 + C2157 * C782) *
                C2165 +
            (C2163 * C404 + C50543 * C424 + C2162 * C405 + C2157 * C425) *
                C2159 +
            (C2163 * C394 + C50543 * C408 + C2162 * C395 + C2157 * C409) *
                C2164) *
               C50700 * C50667) *
              C50587 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                C2164 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                C2159 +
            (C2374 + C2375) * C2165 + (C2376 + C2377) * C2160 + C2398 * C2166 +
            C2399 * C2161) *
               C50700 * C1544 -
           (C4068 * C2161 + C4069 * C2166 + (C3118 + C3119) * C2160 +
            (C3120 + C3121) * C2165 +
            (C2163 * C406 + C50543 * C426 + C2162 * C407 + C2157 * C427) *
                C2159 +
            (C2163 * C396 + C50543 * C410 + C2162 * C397 + C2157 * C411) *
                C2164) *
               C50700 * C50667) *
              C248 +
          (((C3121 + C3120) * C2164 + (C3119 + C3118) * C2159 +
            (C3117 + C3116) * C2165 + (C3115 + C3114) * C2160 +
            (C4078 + C4079) * C2166 + (C4080 + C4081) * C2161) *
               C50700 * C50667 -
           (C3382 * C2161 + C3383 * C2166 + (C2381 + C2380) * C2160 +
            (C2379 + C2378) * C2165 + (C2377 + C2376) * C2159 +
            (C2375 + C2374) * C2164) *
               C50700 * C1544) *
              C249 +
          ((C2398 * C2164 + C2399 * C2159 + (C2385 + C2384) * C2165 +
            (C2383 + C2382) * C2160 + (C3392 + C3393) * C2166 +
            (C3394 + C3395) * C2161) *
               C50700 * C1544 -
           ((C2163 * C4061 + C50543 * C4065 + C2162 * C4062 + C2157 * C4066) *
                C2161 +
            (C2163 * C4059 + C50543 * C4063 + C2162 * C4060 + C2157 * C4064) *
                C2166 +
            (C4081 + C4080) * C2160 + (C4079 + C4078) * C2165 + C4068 * C2159 +
            C4069 * C2164) *
               C50700 * C50667) *
              C250) *
         C50568) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                 C50688) *
                C5071 +
            ((C5427 + C5428) * C121 + (C5429 + C5430) * C50688) * C5072 +
            C5459 * C5073) *
               C1544 -
           (((C5435 + C5436) * C50688 + (C5437 + C5438) * C121) * C5073 +
            ((C5434 + C5433) * C50688 + (C5432 + C5431) * C121) * C5072 +
            ((C5430 + C5429) * C50688 + (C5428 + C5427) * C121) * C5071) *
               C50667) *
              C50587 * C895 +
          ((((C5439 + C5440) * C121 + (C5441 + C5442) * C50688) * C5071 +
            ((C5443 + C5444) * C121 + (C5445 + C5446) * C50688) * C5072 +
            ((C5447 + C5448) * C121 + (C5449 + C5450) * C50688) * C5073) *
               C50667 -
           (C5460 * C5073 +
            ((C5442 + C5441) * C50688 + (C5440 + C5439) * C121) * C5072 +
            ((C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                 C50688 +
             (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                 C121) *
                C5071) *
               C1544) *
              C50587 * C896 +
          ((((C2162 * C124 + C2157 * C131 + C2163 * C125 + C50543 * C132) *
                 C121 +
             (C2162 * C135 + C2157 * C145 + C2163 * C136 + C50543 * C146) *
                 C50688) *
                C5071 +
            ((C5769 + C5770) * C121 + (C5771 + C5772) * C50688) * C5072 +
            ((C5773 + C5774) * C121 + (C5775 + C5776) * C50688) * C5073) *
               C1544 -
           (((C2163 * C1718 + C50543 * C1726 + C2162 * C1719 + C2157 * C1727) *
                 C50688 +
             (C2163 * C1714 + C50543 * C1722 + C2162 * C1715 + C2157 * C1723) *
                 C121) *
                C5073 +
            ((C5776 + C5775) * C50688 + (C5774 + C5773) * C121) * C5072 +
            ((C5772 + C5771) * C50688 + (C5770 + C5769) * C121) * C5071) *
               C50667) *
              C50587 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                 C121 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                 C50688) *
                C5071 +
            ((C5427 + C5428) * C121 + (C5429 + C5430) * C50688) * C5072 +
            C5459 * C5073) *
               C1544 -
           (((C5435 + C5436) * C50688 + (C5437 + C5438) * C121) * C5073 +
            ((C5434 + C5433) * C50688 + (C5432 + C5431) * C121) * C5072 +
            ((C5430 + C5429) * C50688 + (C5428 + C5427) * C121) * C5071) *
               C50667) *
              C248 +
          ((((C3121 + C3120) * C121 + (C3119 + C3118) * C50688) * C5071 +
            ((C3566 + C3567) * C121 + (C3568 + C3569) * C50688) * C5072 +
            ((C6395 + C6396) * C121 + (C6397 + C6398) * C50688) * C5073) *
               C50667 -
           (C6401 * C5073 +
            ((C3118 + C3119) * C50688 + (C3120 + C3121) * C121) * C5072 +
            ((C2377 + C2376) * C50688 + (C2375 + C2374) * C121) * C5071) *
               C1544) *
              C249 +
          (((C2398 * C121 + C2399 * C50688) * C5071 +
            ((C3117 + C3116) * C121 + (C3115 + C3114) * C50688) * C5072 +
            ((C3570 + C3571) * C121 + (C3572 + C3573) * C50688) * C5073) *
               C1544 -
           (((C2163 * C4475 + C50543 * C4483 + C2162 * C4476 + C2157 * C4484) *
                 C50688 +
             (C2163 * C4471 + C50543 * C4477 + C2162 * C4472 + C2157 * C4478) *
                 C121) *
                C5073 +
            ((C3573 + C3572) * C50688 + (C3571 + C3570) * C121) * C5072 +
            (C4068 * C50688 + C4069 * C121) * C5071) *
               C50667) *
              C250) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[45] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C7891 * C122 + C50870 * C129 + C7892 * C123 +
                      C50871 * C130 + C7893 * C124 + C7888 * C131) *
                         C121 +
                     (C7891 * C133 + C50870 * C143 + C7892 * C134 +
                      C50871 * C144 + C7893 * C135 + C7888 * C145) *
                         C50688) *
                        C50843 +
                    ((C11047 + C11048 + C11049) * C121 +
                     (C11050 + C11051 + C11052) * C50688) *
                        C50764) *
                       C50603 * C50829 -
                   (((C8789 + C8790 + C8791) * C50688 +
                     (C8792 + C8793 + C8794) * C121) *
                        C50764 +
                    ((C8096 + C8095 + C8094) * C50688 +
                     (C8093 + C8092 + C8091) * C121) *
                        C50843) *
                       C50603 * C50639) *
                      C50872 +
                  ((((C8103 + C8104 + C8105) * C121 +
                     (C8106 + C8107 + C8108) * C50688) *
                        C50843 +
                    ((C8795 + C8796 + C8797) * C121 +
                     (C8798 + C8799 + C8800) * C50688) *
                        C50764) *
                       C50603 * C50639 -
                   (((C11064 + C11063 + C11062) * C50688 +
                     (C11061 + C11060 + C11059) * C121) *
                        C50764 +
                    ((C7893 * C136 + C7888 * C146 + C7892 * C135 +
                      C50871 * C145 + C7891 * C134 + C50870 * C144) *
                         C50688 +
                     (C7893 * C125 + C7888 * C132 + C7892 * C124 +
                      C50871 * C131 + C7891 * C123 + C50870 * C130) *
                         C121) *
                        C50843) *
                       C50603 * C50829) *
                      C50873 +
                  ((((C7891 * C124 + C50870 * C131 + C7892 * C125 +
                      C50871 * C132 + C7893 * C126 + C7888 * C138) *
                         C121 +
                     (C7891 * C135 + C50870 * C145 + C7892 * C136 +
                      C50871 * C146 + C7893 * C137 + C7888 * C147) *
                         C50688) *
                        C50843 +
                    ((C7891 * C395 + C50870 * C409 + C7892 * C394 +
                      C50871 * C408 + C7893 * C402 + C7888 * C420) *
                         C121 +
                     (C7891 * C405 + C50870 * C425 + C7892 * C404 +
                      C50871 * C424 + C7893 * C421 + C7888 * C432) *
                         C50688) *
                        C50764) *
                       C50603 * C50829 -
                   (((C7893 * C788 + C7888 * C794 + C7892 * C787 +
                      C50871 * C793 + C7891 * C786 + C50870 * C792) *
                         C50688 +
                     (C7893 * C779 + C7888 * C789 + C7892 * C778 +
                      C50871 * C783 + C7891 * C777 + C50870 * C782) *
                         C121) *
                        C50764 +
                    ((C8424 + C8423 + C8422) * C50688 +
                     (C8421 + C8420 + C8419) * C121) *
                        C50843) *
                       C50603 * C50639) *
                      C536)) /
                (p * q * std::sqrt(p + q));
    d2ee[46] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C7891 * C122 + C50870 * C129 + C7892 * C123 +
                       C50871 * C130 + C7893 * C124 + C7888 * C131) *
                          C121 +
                      (C7891 * C133 + C50870 * C143 + C7892 * C134 +
                       C50871 * C144 + C7893 * C135 + C7888 * C145) *
                          C50688) *
                         C50843 +
                     ((C11047 + C11048 + C11049) * C121 +
                      (C11050 + C11051 + C11052) * C50688) *
                         C50764) *
                        C50830 -
                    (((C11053 + C11054 + C11055) * C50688 +
                      (C11056 + C11057 + C11058) * C121) *
                         C50764 +
                     ((C11052 + C11051 + C11050) * C50688 +
                      (C11049 + C11048 + C11047) * C121) *
                         C50843) *
                        C50667) *
                       C50829 +
                   ((((C8794 + C8793 + C8792) * C121 +
                      (C8791 + C8790 + C8789) * C50688) *
                         C50843 +
                     ((C9221 + C9222 + C9223) * C121 +
                      (C9224 + C9225 + C9226) * C50688) *
                         C50764) *
                        C50667 -
                    (((C8789 + C8790 + C8791) * C50688 +
                      (C8792 + C8793 + C8794) * C121) *
                         C50764 +
                     ((C8096 + C8095 + C8094) * C50688 +
                      (C8093 + C8092 + C8091) * C121) *
                         C50843) *
                        C50830) *
                       C50639) *
                      C251 +
                  (((((C11059 + C11060 + C11061) * C121 +
                      (C11062 + C11063 + C11064) * C50688) *
                         C50843 +
                     ((C11065 + C11066 + C11067) * C121 +
                      (C11068 + C11069 + C11070) * C50688) *
                         C50764) *
                        C50667 -
                    (((C11064 + C11063 + C11062) * C50688 +
                      (C11061 + C11060 + C11059) * C121) *
                         C50764 +
                     ((C7893 * C136 + C7888 * C146 + C7892 * C135 +
                       C50871 * C145 + C7891 * C134 + C50870 * C144) *
                          C50688 +
                      (C7893 * C125 + C7888 * C132 + C7892 * C124 +
                       C50871 * C131 + C7891 * C123 + C50870 * C130) *
                          C121) *
                         C50843) *
                        C50830) *
                       C50829 +
                   ((((C8103 + C8104 + C8105) * C121 +
                      (C8106 + C8107 + C8108) * C50688) *
                         C50843 +
                     ((C8795 + C8796 + C8797) * C121 +
                      (C8798 + C8799 + C8800) * C50688) *
                         C50764) *
                        C50830 -
                    (((C7893 * C1087 + C7888 * C1095 + C7892 * C1088 +
                       C50871 * C1096 + C7891 * C1089 + C50870 * C1097) *
                          C50688 +
                      (C7893 * C1083 + C7888 * C1091 + C7892 * C1084 +
                       C50871 * C1092 + C7891 * C1085 + C50870 * C1093) *
                          C121) *
                         C50764 +
                     ((C8800 + C8799 + C8798) * C50688 +
                      (C8797 + C8796 + C8795) * C121) *
                         C50843) *
                        C50667) *
                       C50639) *
                      C50574)) /
                (p * q * std::sqrt(p + q));
    d2ee[47] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C7891 * C122 + C50870 * C129 + C7892 * C123 +
                      C50871 * C130 + C7893 * C124 + C7888 * C131) *
                         C121 +
                     (C7891 * C133 + C50870 * C143 + C7892 * C134 +
                      C50871 * C144 + C7893 * C135 + C7888 * C145) *
                         C50688) *
                        C50843 +
                    ((C7891 * C397 + C50870 * C411 + C7892 * C396 +
                      C50871 * C410 + C7893 * C395 + C7888 * C409) *
                         C121 +
                     (C7891 * C407 + C50870 * C427 + C7892 * C406 +
                      C50871 * C426 + C7893 * C405 + C7888 * C425) *
                         C50688) *
                        C50764) *
                       C50603 * C248 -
                   (((C8789 + C8790 + C8791) * C50688 +
                     (C8792 + C8793 + C8794) * C121) *
                        C50764 +
                    ((C8096 + C8095 + C8094) * C50688 +
                     (C8093 + C8092 + C8091) * C121) *
                        C50843) *
                       C50603 * C249 +
                   (((C8102 + C8101 + C8100) * C121 +
                     (C8099 + C8098 + C8097) * C50688) *
                        C50843 +
                    ((C9725 + C9726 + C9727) * C121 +
                     (C9728 + C9729 + C9730) * C50688) *
                        C50764) *
                       C50603 * C250) *
                      C251 +
                  ((((C8103 + C8104 + C8105) * C121 +
                     (C8106 + C8107 + C8108) * C50688) *
                        C50843 +
                    ((C8795 + C8796 + C8797) * C121 +
                     (C8798 + C8799 + C8800) * C50688) *
                        C50764) *
                       C50603 * C249 -
                   (((C7893 * C404 + C7888 * C424 + C7892 * C405 +
                      C50871 * C425 + C7891 * C406 + C50870 * C426) *
                         C50688 +
                     (C7893 * C394 + C7888 * C408 + C7892 * C395 +
                      C50871 * C409 + C7891 * C396 + C50870 * C410) *
                         C121) *
                        C50764 +
                    ((C7893 * C136 + C7888 * C146 + C7892 * C135 +
                      C50871 * C145 + C7891 * C134 + C50870 * C144) *
                         C50688 +
                     (C7893 * C125 + C7888 * C132 + C7892 * C124 +
                      C50871 * C131 + C7891 * C123 + C50870 * C130) *
                         C121) *
                        C50843) *
                       C50603 * C248 -
                   (((C7893 * C1434 + C7888 * C1442 + C7892 * C1435 +
                      C50871 * C1443 + C7891 * C1436 + C50870 * C1444) *
                         C50688 +
                     (C7893 * C1430 + C7888 * C1438 + C7892 * C1431 +
                      C50871 * C1439 + C7891 * C1432 + C50870 * C1440) *
                         C121) *
                        C50764 +
                    ((C8114 + C8113 + C8112) * C50688 +
                     (C8111 + C8110 + C8109) * C121) *
                        C50843) *
                       C50603 * C250) *
                      C50574)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C7891 * C122 + C50870 * C129 + C7892 * C123 +
                     C50871 * C130 + C7893 * C124 + C7888 * C131) *
                        C121 +
                    (C7891 * C133 + C50870 * C143 + C7892 * C134 +
                     C50871 * C144 + C7893 * C135 + C7888 * C145) *
                        C50688) *
                       C50843 +
                   ((C7891 * C397 + C50870 * C411 + C7892 * C396 +
                     C50871 * C410 + C7893 * C395 + C7888 * C409) *
                        C121 +
                    (C7891 * C407 + C50870 * C427 + C7892 * C406 +
                     C50871 * C426 + C7893 * C405 + C7888 * C425) *
                        C50688) *
                       C50764) *
                      C50603 * C50587 * C113 -
                  (((C7893 * C404 + C7888 * C424 + C7892 * C405 +
                     C50871 * C425 + C7891 * C406 + C50870 * C426) *
                        C50688 +
                    (C7893 * C394 + C7888 * C408 + C7892 * C395 +
                     C50871 * C409 + C7891 * C396 + C50870 * C410) *
                        C121) *
                       C50764 +
                   ((C7893 * C136 + C7888 * C146 + C7892 * C135 +
                     C50871 * C145 + C7891 * C134 + C50870 * C144) *
                        C50688 +
                    (C7893 * C125 + C7888 * C132 + C7892 * C124 +
                     C50871 * C131 + C7891 * C123 + C50870 * C130) *
                        C121) *
                       C50843) *
                      C50603 * C50587 * C114 +
                  (((C7891 * C124 + C50870 * C131 + C7892 * C125 +
                     C50871 * C132 + C7893 * C126 + C7888 * C138) *
                        C121 +
                    (C7891 * C135 + C50870 * C145 + C7892 * C136 +
                     C50871 * C146 + C7893 * C137 + C7888 * C147) *
                        C50688) *
                       C50843 +
                   ((C7891 * C395 + C50870 * C409 + C7892 * C394 +
                     C50871 * C408 + C7893 * C402 + C7888 * C420) *
                        C121 +
                    (C7891 * C405 + C50870 * C425 + C7892 * C404 +
                     C50871 * C424 + C7893 * C421 + C7888 * C432) *
                        C50688) *
                       C50764) *
                      C50603 * C50587 * C115 -
                  (((C7893 * C642 + C7888 * C644 + C7892 * C421 +
                     C50871 * C432 + C7891 * C404 + C50870 * C424) *
                        C50688 +
                    (C7893 * C641 + C7888 * C643 + C7892 * C402 +
                     C50871 * C420 + C7891 * C394 + C50870 * C408) *
                        C121) *
                       C50764 +
                   ((C7893 * C140 + C7888 * C148 + C7892 * C137 +
                     C50871 * C147 + C7891 * C136 + C50870 * C146) *
                        C50688 +
                    (C7893 * C127 + C7888 * C139 + C7892 * C126 +
                     C50871 * C138 + C7891 * C125 + C50870 * C132) *
                        C121) *
                       C50843) *
                      C50603 * C50587 * C116)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((((C7891 * C122 + C50870 * C129 + C7892 * C123 +
                      C50871 * C130 + C7893 * C124 + C7888 * C131) *
                         C121 +
                     (C7891 * C133 + C50870 * C143 + C7892 * C134 +
                      C50871 * C144 + C7893 * C135 + C7888 * C145) *
                         C50688) *
                        C50843 +
                    ((C11047 + C11048 + C11049) * C121 +
                     (C11050 + C11051 + C11052) * C50688) *
                        C50764) *
                       C391 -
                   (((C11053 + C11054 + C11055) * C50688 +
                     (C11056 + C11057 + C11058) * C121) *
                        C50764 +
                    ((C11052 + C11051 + C11050) * C50688 +
                     (C11049 + C11048 + C11047) * C121) *
                        C50843) *
                       C392 +
                   (((C11058 + C11057 + C11056) * C121 +
                     (C11055 + C11054 + C11053) * C50688) *
                        C50843 +
                    ((C7891 * C1717 + C50870 * C1725 + C7892 * C1716 +
                      C50871 * C1724 + C7893 * C1715 + C7888 * C1723) *
                         C121 +
                     (C7891 * C1721 + C50870 * C1729 + C7892 * C1720 +
                      C50871 * C1728 + C7893 * C1719 + C7888 * C1727) *
                         C50688) *
                        C50764) *
                       C393) *
                      C50587 * C251 +
                  ((((C11059 + C11060 + C11061) * C121 +
                     (C11062 + C11063 + C11064) * C50688) *
                        C50843 +
                    ((C11065 + C11066 + C11067) * C121 +
                     (C11068 + C11069 + C11070) * C50688) *
                        C50764) *
                       C392 -
                   (((C11064 + C11063 + C11062) * C50688 +
                     (C11061 + C11060 + C11059) * C121) *
                        C50764 +
                    ((C7893 * C136 + C7888 * C146 + C7892 * C135 +
                      C50871 * C145 + C7891 * C134 + C50870 * C144) *
                         C50688 +
                     (C7893 * C125 + C7888 * C132 + C7892 * C124 +
                      C50871 * C131 + C7891 * C123 + C50870 * C130) *
                         C121) *
                        C50843) *
                       C391 -
                   (((C7893 * C1718 + C7888 * C1726 + C7892 * C1719 +
                      C50871 * C1727 + C7891 * C1720 + C50870 * C1728) *
                         C50688 +
                     (C7893 * C1714 + C7888 * C1722 + C7892 * C1715 +
                      C50871 * C1723 + C7891 * C1716 + C50870 * C1724) *
                         C121) *
                        C50764 +
                    ((C11070 + C11069 + C11068) * C50688 +
                     (C11067 + C11066 + C11065) * C121) *
                        C50843) *
                       C393) *
                      C50587 * C50574)) /
                    (p * q * std::sqrt(p + q));
    d2ee[48] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C7891 * C122 + C50870 * C129 + C7892 * C123 +
                      C50871 * C130 + C7893 * C124 + C7888 * C131) *
                         C121 +
                     (C7891 * C133 + C50870 * C143 + C7892 * C134 +
                      C50871 * C144 + C7893 * C135 + C7888 * C145) *
                         C50688) *
                        C50843 +
                    ((C11047 + C11048 + C11049) * C121 +
                     (C11050 + C11051 + C11052) * C50688) *
                        C50764) *
                       C50830 -
                   (((C11053 + C11054 + C11055) * C50688 +
                     (C11056 + C11057 + C11058) * C121) *
                        C50764 +
                    ((C11052 + C11051 + C11050) * C50688 +
                     (C11049 + C11048 + C11047) * C121) *
                        C50843) *
                       C50667) *
                      C50587 * C50872 +
                  ((((C11059 + C11060 + C11061) * C121 +
                     (C11062 + C11063 + C11064) * C50688) *
                        C50843 +
                    ((C11065 + C11066 + C11067) * C121 +
                     (C11068 + C11069 + C11070) * C50688) *
                        C50764) *
                       C50667 -
                   (((C11064 + C11063 + C11062) * C50688 +
                     (C11061 + C11060 + C11059) * C121) *
                        C50764 +
                    ((C7893 * C136 + C7888 * C146 + C7892 * C135 +
                      C50871 * C145 + C7891 * C134 + C50870 * C144) *
                         C50688 +
                     (C7893 * C125 + C7888 * C132 + C7892 * C124 +
                      C50871 * C131 + C7891 * C123 + C50870 * C130) *
                         C121) *
                        C50843) *
                       C50830) *
                      C50587 * C50873 +
                  ((((C7891 * C124 + C50870 * C131 + C7892 * C125 +
                      C50871 * C132 + C7893 * C126 + C7888 * C138) *
                         C121 +
                     (C7891 * C135 + C50870 * C145 + C7892 * C136 +
                      C50871 * C146 + C7893 * C137 + C7888 * C147) *
                         C50688) *
                        C50843 +
                    ((C11375 + C11376 + C11377) * C121 +
                     (C11378 + C11379 + C11380) * C50688) *
                        C50764) *
                       C50830 -
                   (((C7893 * C422 + C7888 * C433 + C7892 * C419 +
                      C50871 * C431 + C7891 * C418 + C50870 * C430) *
                         C50688 +
                     (C7893 * C403 + C7888 * C423 + C7892 * C401 +
                      C50871 * C415 + C7891 * C400 + C50870 * C414) *
                         C121) *
                        C50764 +
                    ((C11380 + C11379 + C11378) * C50688 +
                     (C11377 + C11376 + C11375) * C121) *
                        C50843) *
                       C50667) *
                      C50587 * C536)) /
                (p * q * std::sqrt(p + q));
    d2ee[49] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C7891 * C122 + C50870 * C129 + C7892 * C123 +
                     C50871 * C130 + C7893 * C124 + C7888 * C131) *
                        C121 +
                    (C7891 * C133 + C50870 * C143 + C7892 * C134 +
                     C50871 * C144 + C7893 * C135 + C7888 * C145) *
                        C50688) *
                       C50843 +
                   ((C7891 * C397 + C50870 * C411 + C7892 * C396 +
                     C50871 * C410 + C7893 * C395 + C7888 * C409) *
                        C121 +
                    (C7891 * C407 + C50870 * C427 + C7892 * C406 +
                     C50871 * C426 + C7893 * C405 + C7888 * C425) *
                        C50688) *
                       C50764) *
                      C50603 * C50587 * C113 -
                  (((C7893 * C404 + C7888 * C424 + C7892 * C405 +
                     C50871 * C425 + C7891 * C406 + C50870 * C426) *
                        C50688 +
                    (C7893 * C394 + C7888 * C408 + C7892 * C395 +
                     C50871 * C409 + C7891 * C396 + C50870 * C410) *
                        C121) *
                       C50764 +
                   ((C7893 * C136 + C7888 * C146 + C7892 * C135 +
                     C50871 * C145 + C7891 * C134 + C50870 * C144) *
                        C50688 +
                    (C7893 * C125 + C7888 * C132 + C7892 * C124 +
                     C50871 * C131 + C7891 * C123 + C50870 * C130) *
                        C121) *
                       C50843) *
                      C50603 * C50587 * C114 +
                  (((C7891 * C124 + C50870 * C131 + C7892 * C125 +
                     C50871 * C132 + C7893 * C126 + C7888 * C138) *
                        C121 +
                    (C7891 * C135 + C50870 * C145 + C7892 * C136 +
                     C50871 * C146 + C7893 * C137 + C7888 * C147) *
                        C50688) *
                       C50843 +
                   ((C7891 * C395 + C50870 * C409 + C7892 * C394 +
                     C50871 * C408 + C7893 * C402 + C7888 * C420) *
                        C121 +
                    (C7891 * C405 + C50870 * C425 + C7892 * C404 +
                     C50871 * C424 + C7893 * C421 + C7888 * C432) *
                        C50688) *
                       C50764) *
                      C50603 * C50587 * C115 -
                  (((C7893 * C642 + C7888 * C644 + C7892 * C421 +
                     C50871 * C432 + C7891 * C404 + C50870 * C424) *
                        C50688 +
                    (C7893 * C641 + C7888 * C643 + C7892 * C402 +
                     C50871 * C420 + C7891 * C394 + C50870 * C408) *
                        C121) *
                       C50764 +
                   ((C7893 * C140 + C7888 * C148 + C7892 * C137 +
                     C50871 * C147 + C7891 * C136 + C50870 * C146) *
                        C50688 +
                    (C7893 * C127 + C7888 * C139 + C7892 * C126 +
                     C50871 * C138 + C7891 * C125 + C50870 * C132) *
                        C121) *
                       C50843) *
                      C50603 * C50587 * C116)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C7891 * C122 + C50870 * C129 + C7892 * C123 +
                      C50871 * C130 + C7893 * C124 + C7888 * C131) *
                         C121 +
                     (C7891 * C133 + C50870 * C143 + C7892 * C134 +
                      C50871 * C144 + C7893 * C135 + C7888 * C145) *
                         C50688) *
                        C50843 +
                    ((C7891 * C397 + C50870 * C411 + C7892 * C396 +
                      C50871 * C410 + C7893 * C395 + C7888 * C409) *
                         C121 +
                     (C7891 * C407 + C50870 * C427 + C7892 * C406 +
                      C50871 * C426 + C7893 * C405 + C7888 * C425) *
                         C50688) *
                        C50764) *
                       C50603 * C248 -
                   (((C8789 + C8790 + C8791) * C50688 +
                     (C8792 + C8793 + C8794) * C121) *
                        C50764 +
                    ((C8096 + C8095 + C8094) * C50688 +
                     (C8093 + C8092 + C8091) * C121) *
                        C50843) *
                       C50603 * C249 +
                   (((C8102 + C8101 + C8100) * C121 +
                     (C8099 + C8098 + C8097) * C50688) *
                        C50843 +
                    ((C9725 + C9726 + C9727) * C121 +
                     (C9728 + C9729 + C9730) * C50688) *
                        C50764) *
                       C50603 * C250) *
                      C251 +
                  ((((C8103 + C8104 + C8105) * C121 +
                     (C8106 + C8107 + C8108) * C50688) *
                        C50843 +
                    ((C8795 + C8796 + C8797) * C121 +
                     (C8798 + C8799 + C8800) * C50688) *
                        C50764) *
                       C50603 * C249 -
                   (((C7893 * C404 + C7888 * C424 + C7892 * C405 +
                      C50871 * C425 + C7891 * C406 + C50870 * C426) *
                         C50688 +
                     (C7893 * C394 + C7888 * C408 + C7892 * C395 +
                      C50871 * C409 + C7891 * C396 + C50870 * C410) *
                         C121) *
                        C50764 +
                    ((C7893 * C136 + C7888 * C146 + C7892 * C135 +
                      C50871 * C145 + C7891 * C134 + C50870 * C144) *
                         C50688 +
                     (C7893 * C125 + C7888 * C132 + C7892 * C124 +
                      C50871 * C131 + C7891 * C123 + C50870 * C130) *
                         C121) *
                        C50843) *
                       C50603 * C248 -
                   (((C7893 * C1434 + C7888 * C1442 + C7892 * C1435 +
                      C50871 * C1443 + C7891 * C1436 + C50870 * C1444) *
                         C50688 +
                     (C7893 * C1430 + C7888 * C1438 + C7892 * C1431 +
                      C50871 * C1439 + C7891 * C1432 + C50870 * C1440) *
                         C121) *
                        C50764 +
                    ((C8114 + C8113 + C8112) * C50688 +
                     (C8111 + C8110 + C8109) * C121) *
                        C50843) *
                       C50603 * C250) *
                      C50574)) /
                    (p * q * std::sqrt(p + q));
    d2ee[50] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C7891 * C122 + C50870 * C129 + C7892 * C123 +
                      C50871 * C130 + C7893 * C124 + C7888 * C131) *
                         C121 +
                     (C7891 * C133 + C50870 * C143 + C7892 * C134 +
                      C50871 * C144 + C7893 * C135 + C7888 * C145) *
                         C50688) *
                        C50843 +
                    ((C11047 + C11048 + C11049) * C121 +
                     (C11050 + C11051 + C11052) * C50688) *
                        C50764) *
                       C50603 * C50874 -
                   (((C8789 + C8790 + C8791) * C50688 +
                     (C8792 + C8793 + C8794) * C121) *
                        C50764 +
                    ((C8096 + C8095 + C8094) * C50688 +
                     (C8093 + C8092 + C8091) * C121) *
                        C50843) *
                       C50603 * C50875 +
                   (((C8102 + C8101 + C8100) * C121 +
                     (C8099 + C8098 + C8097) * C50688) *
                        C50843 +
                    ((C9725 + C9726 + C9727) * C121 +
                     (C9728 + C9729 + C9730) * C50688) *
                        C50764) *
                       C50603 * C1199) *
                      C50821 +
                  ((((C8103 + C8104 + C8105) * C121 +
                     (C8106 + C8107 + C8108) * C50688) *
                        C50843 +
                    ((C8795 + C8796 + C8797) * C121 +
                     (C8798 + C8799 + C8800) * C50688) *
                        C50764) *
                       C50603 * C50875 -
                   (((C11064 + C11063 + C11062) * C50688 +
                     (C11061 + C11060 + C11059) * C121) *
                        C50764 +
                    ((C7893 * C136 + C7888 * C146 + C7892 * C135 +
                      C50871 * C145 + C7891 * C134 + C50870 * C144) *
                         C50688 +
                     (C7893 * C125 + C7888 * C132 + C7892 * C124 +
                      C50871 * C131 + C7891 * C123 + C50870 * C130) *
                         C121) *
                        C50843) *
                       C50603 * C50874 -
                   (((C7893 * C1434 + C7888 * C1442 + C7892 * C1435 +
                      C50871 * C1443 + C7891 * C1436 + C50870 * C1444) *
                         C50688 +
                     (C7893 * C1430 + C7888 * C1438 + C7892 * C1431 +
                      C50871 * C1439 + C7891 * C1432 + C50870 * C1440) *
                         C121) *
                        C50764 +
                    ((C8114 + C8113 + C8112) * C50688 +
                     (C8111 + C8110 + C8109) * C121) *
                        C50843) *
                       C50603 * C1199) *
                      C50574)) /
                (p * q * std::sqrt(p + q));
    d2ee[51] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C7891 * C122 + C50870 * C129 + C7892 * C123 +
                      C50871 * C130 + C7893 * C124 + C7888 * C131) *
                         C121 +
                     (C7891 * C133 + C50870 * C143 + C7892 * C134 +
                      C50871 * C144 + C7893 * C135 + C7888 * C145) *
                         C50688) *
                        C50843 +
                    ((C11047 + C11048 + C11049) * C121 +
                     (C11050 + C11051 + C11052) * C50688) *
                        C50764) *
                       C50830 -
                   (((C11053 + C11054 + C11055) * C50688 +
                     (C11056 + C11057 + C11058) * C121) *
                        C50764 +
                    ((C11052 + C11051 + C11050) * C50688 +
                     (C11049 + C11048 + C11047) * C121) *
                        C50843) *
                       C50667) *
                      C50874 +
                  ((((C8794 + C8793 + C8792) * C121 +
                     (C8791 + C8790 + C8789) * C50688) *
                        C50843 +
                    ((C9221 + C9222 + C9223) * C121 +
                     (C9224 + C9225 + C9226) * C50688) *
                        C50764) *
                       C50667 -
                   (((C8789 + C8790 + C8791) * C50688 +
                     (C8792 + C8793 + C8794) * C121) *
                        C50764 +
                    ((C8096 + C8095 + C8094) * C50688 +
                     (C8093 + C8092 + C8091) * C121) *
                        C50843) *
                       C50830) *
                      C50875 +
                  ((((C8102 + C8101 + C8100) * C121 +
                     (C8099 + C8098 + C8097) * C50688) *
                        C50843 +
                    ((C9725 + C9726 + C9727) * C121 +
                     (C9728 + C9729 + C9730) * C50688) *
                        C50764) *
                       C50830 -
                   (((C7893 * C2554 + C7888 * C2558 + C7892 * C2553 +
                      C50871 * C2557 + C7891 * C2552 + C50870 * C2556) *
                         C50688 +
                     (C7893 * C2549 + C7888 * C2555 + C7892 * C2548 +
                      C50871 * C2551 + C7891 * C2547 + C50870 * C2550) *
                         C121) *
                        C50764 +
                    ((C9730 + C9729 + C9728) * C50688 +
                     (C9727 + C9726 + C9725) * C121) *
                        C50843) *
                       C50667) *
                      C1199) *
                 C50568) /
                (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C7891 * C122 + C50870 * C129 + C7892 * C123 + C50871 * C130 +
             C7893 * C124 + C7888 * C131) *
                C121 +
            (C7891 * C133 + C50870 * C143 + C7892 * C134 + C50871 * C144 +
             C7893 * C135 + C7888 * C145) *
                C50688) *
               C50843 +
           ((C11047 + C11048 + C11049) * C121 +
            (C11050 + C11051 + C11052) * C50688) *
               C50764) *
              C50603 * C964 -
          (((C8789 + C8790 + C8791) * C50688 + (C8792 + C8793 + C8794) * C121) *
               C50764 +
           ((C8096 + C8095 + C8094) * C50688 + (C8093 + C8092 + C8091) * C121) *
               C50843) *
              C50603 * C965 +
          (((C8102 + C8101 + C8100) * C121 + (C8099 + C8098 + C8097) * C50688) *
               C50843 +
           ((C9725 + C9726 + C9727) * C121 + (C9728 + C9729 + C9730) * C50688) *
               C50764) *
              C50603 * C966 -
          (((C7893 * C3076 + C7888 * C3080 + C7892 * C3075 + C50871 * C3079 +
             C7891 * C3074 + C50870 * C3078) *
                C50688 +
            (C7893 * C3071 + C7888 * C3077 + C7892 * C3070 + C50871 * C3073 +
             C7891 * C3069 + C50870 * C3072) *
                C121) *
               C50764 +
           ((C9062 + C9061 + C9060) * C50688 + (C9059 + C9058 + C9057) * C121) *
               C50843) *
              C50603 * C967) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C7891 * C122 + C50870 * C129 + C7892 * C123 + C50871 * C130 +
              C7893 * C124 + C7888 * C131) *
                 C121 +
             (C7891 * C133 + C50870 * C143 + C7892 * C134 + C50871 * C144 +
              C7893 * C135 + C7888 * C145) *
                 C50688) *
                C50843 +
            ((C11047 + C11048 + C11049) * C121 +
             (C11050 + C11051 + C11052) * C50688) *
                C50764) *
               C50603 * C893 -
           (((C8789 + C8790 + C8791) * C50688 +
             (C8792 + C8793 + C8794) * C121) *
                C50764 +
            ((C8096 + C8095 + C8094) * C50688 +
             (C8093 + C8092 + C8091) * C121) *
                C50843) *
               C50603 * C50639) *
              C895 +
          ((((C8103 + C8104 + C8105) * C121 +
             (C8106 + C8107 + C8108) * C50688) *
                C50843 +
            ((C8795 + C8796 + C8797) * C121 +
             (C8798 + C8799 + C8800) * C50688) *
                C50764) *
               C50603 * C50639 -
           (((C11064 + C11063 + C11062) * C50688 +
             (C11061 + C11060 + C11059) * C121) *
                C50764 +
            ((C7893 * C136 + C7888 * C146 + C7892 * C135 + C50871 * C145 +
              C7891 * C134 + C50870 * C144) *
                 C50688 +
             (C7893 * C125 + C7888 * C132 + C7892 * C124 + C50871 * C131 +
              C7891 * C123 + C50870 * C130) *
                 C121) *
                C50843) *
               C50603 * C893) *
              C896 +
          ((((C7891 * C124 + C50870 * C131 + C7892 * C125 + C50871 * C132 +
              C7893 * C126 + C7888 * C138) *
                 C121 +
             (C7891 * C135 + C50870 * C145 + C7892 * C136 + C50871 * C146 +
              C7893 * C137 + C7888 * C147) *
                 C50688) *
                C50843 +
            ((C11375 + C11376 + C11377) * C121 +
             (C11378 + C11379 + C11380) * C50688) *
                C50764) *
               C50603 * C893 -
           (((C7893 * C788 + C7888 * C794 + C7892 * C787 + C50871 * C793 +
              C7891 * C786 + C50870 * C792) *
                 C50688 +
             (C7893 * C779 + C7888 * C789 + C7892 * C778 + C50871 * C783 +
              C7891 * C777 + C50870 * C782) *
                 C121) *
                C50764 +
            ((C8424 + C8423 + C8422) * C50688 +
             (C8421 + C8420 + C8419) * C121) *
                C50843) *
               C50603 * C50639) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C7891 * C122 + C50870 * C129 + C7892 * C123 + C50871 * C130 +
              C7893 * C124 + C7888 * C131) *
                 C121 +
             (C7891 * C133 + C50870 * C143 + C7892 * C134 + C50871 * C144 +
              C7893 * C135 + C7888 * C145) *
                 C50688) *
                C50843 +
            ((C11047 + C11048 + C11049) * C121 +
             (C11050 + C11051 + C11052) * C50688) *
                C50764) *
               C391 -
           (((C11053 + C11054 + C11055) * C50688 +
             (C11056 + C11057 + C11058) * C121) *
                C50764 +
            ((C11052 + C11051 + C11050) * C50688 +
             (C11049 + C11048 + C11047) * C121) *
                C50843) *
               C392 +
           (((C11058 + C11057 + C11056) * C121 +
             (C11055 + C11054 + C11053) * C50688) *
                C50843 +
            ((C7891 * C1717 + C50870 * C1725 + C7892 * C1716 + C50871 * C1724 +
              C7893 * C1715 + C7888 * C1723) *
                 C121 +
             (C7891 * C1721 + C50870 * C1729 + C7892 * C1720 + C50871 * C1728 +
              C7893 * C1719 + C7888 * C1727) *
                 C50688) *
                C50764) *
               C393) *
              C893 +
          ((((C8794 + C8793 + C8792) * C121 +
             (C8791 + C8790 + C8789) * C50688) *
                C50843 +
            ((C9221 + C9222 + C9223) * C121 +
             (C9224 + C9225 + C9226) * C50688) *
                C50764) *
               C392 -
           (((C8789 + C8790 + C8791) * C50688 +
             (C8792 + C8793 + C8794) * C121) *
                C50764 +
            ((C8096 + C8095 + C8094) * C50688 +
             (C8093 + C8092 + C8091) * C121) *
                C50843) *
               C391 -
           (((C7893 * C5971 + C7888 * C5973 + C7892 * C4479 + C50871 * C4485 +
              C7891 * C4480 + C50870 * C4486) *
                 C50688 +
             (C7893 * C5970 + C7888 * C5972 + C7892 * C4473 + C50871 * C4481 +
              C7891 * C4474 + C50870 * C4482) *
                 C121) *
                C50764 +
            ((C9226 + C9225 + C9224) * C50688 +
             (C9223 + C9222 + C9221) * C121) *
                C50843) *
               C393) *
              C50639) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[53] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C7891 * C122 + C50870 * C129 + C7892 * C123 +
                       C50871 * C130 + C7893 * C124 + C7888 * C131) *
                          C121 +
                      (C7891 * C133 + C50870 * C143 + C7892 * C134 +
                       C50871 * C144 + C7893 * C135 + C7888 * C145) *
                          C50688) *
                         C50843 +
                     ((C11047 + C11048 + C11049) * C121 +
                      (C11050 + C11051 + C11052) * C50688) *
                         C50764) *
                        C50830 -
                    (((C11053 + C11054 + C11055) * C50688 +
                      (C11056 + C11057 + C11058) * C121) *
                         C50764 +
                     ((C11052 + C11051 + C11050) * C50688 +
                      (C11049 + C11048 + C11047) * C121) *
                         C50843) *
                        C50667) *
                       C893 +
                   ((((C8794 + C8793 + C8792) * C121 +
                      (C8791 + C8790 + C8789) * C50688) *
                         C50843 +
                     ((C9221 + C9222 + C9223) * C121 +
                      (C9224 + C9225 + C9226) * C50688) *
                         C50764) *
                        C50667 -
                    (((C8789 + C8790 + C8791) * C50688 +
                      (C8792 + C8793 + C8794) * C121) *
                         C50764 +
                     ((C8096 + C8095 + C8094) * C50688 +
                      (C8093 + C8092 + C8091) * C121) *
                         C50843) *
                        C50830) *
                       C50639) *
                      C50821 +
                  (((((C11059 + C11060 + C11061) * C121 +
                      (C11062 + C11063 + C11064) * C50688) *
                         C50843 +
                     ((C11065 + C11066 + C11067) * C121 +
                      (C11068 + C11069 + C11070) * C50688) *
                         C50764) *
                        C50667 -
                    (((C11064 + C11063 + C11062) * C50688 +
                      (C11061 + C11060 + C11059) * C121) *
                         C50764 +
                     ((C7893 * C136 + C7888 * C146 + C7892 * C135 +
                       C50871 * C145 + C7891 * C134 + C50870 * C144) *
                          C50688 +
                      (C7893 * C125 + C7888 * C132 + C7892 * C124 +
                       C50871 * C131 + C7891 * C123 + C50870 * C130) *
                          C121) *
                         C50843) *
                        C50830) *
                       C893 +
                   ((((C8103 + C8104 + C8105) * C121 +
                      (C8106 + C8107 + C8108) * C50688) *
                         C50843 +
                     ((C8795 + C8796 + C8797) * C121 +
                      (C8798 + C8799 + C8800) * C50688) *
                         C50764) *
                        C50830 -
                    (((C7893 * C1087 + C7888 * C1095 + C7892 * C1088 +
                       C50871 * C1096 + C7891 * C1089 + C50870 * C1097) *
                          C50688 +
                      (C7893 * C1083 + C7888 * C1091 + C7892 * C1084 +
                       C50871 * C1092 + C7891 * C1085 + C50870 * C1093) *
                          C121) *
                         C50764 +
                     ((C8800 + C8799 + C8798) * C50688 +
                      (C8797 + C8796 + C8795) * C121) *
                         C50843) *
                        C50667) *
                       C50639) *
                      C50574)) /
                (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C7891 * C122 + C50870 * C129 + C7892 * C123 + C50871 * C130 +
              C7893 * C124 + C7888 * C131) *
                 C121 +
             (C7891 * C133 + C50870 * C143 + C7892 * C134 + C50871 * C144 +
              C7893 * C135 + C7888 * C145) *
                 C50688) *
                C50843 +
            ((C11047 + C11048 + C11049) * C121 +
             (C11050 + C11051 + C11052) * C50688) *
                C50764) *
               C50603 * C893 -
           (((C8789 + C8790 + C8791) * C50688 +
             (C8792 + C8793 + C8794) * C121) *
                C50764 +
            ((C8096 + C8095 + C8094) * C50688 +
             (C8093 + C8092 + C8091) * C121) *
                C50843) *
               C50603 * C50639) *
              C895 +
          ((((C8103 + C8104 + C8105) * C121 +
             (C8106 + C8107 + C8108) * C50688) *
                C50843 +
            ((C8795 + C8796 + C8797) * C121 +
             (C8798 + C8799 + C8800) * C50688) *
                C50764) *
               C50603 * C50639 -
           (((C11064 + C11063 + C11062) * C50688 +
             (C11061 + C11060 + C11059) * C121) *
                C50764 +
            ((C7893 * C136 + C7888 * C146 + C7892 * C135 + C50871 * C145 +
              C7891 * C134 + C50870 * C144) *
                 C50688 +
             (C7893 * C125 + C7888 * C132 + C7892 * C124 + C50871 * C131 +
              C7891 * C123 + C50870 * C130) *
                 C121) *
                C50843) *
               C50603 * C893) *
              C896 +
          ((((C7891 * C124 + C50870 * C131 + C7892 * C125 + C50871 * C132 +
              C7893 * C126 + C7888 * C138) *
                 C121 +
             (C7891 * C135 + C50870 * C145 + C7892 * C136 + C50871 * C146 +
              C7893 * C137 + C7888 * C147) *
                 C50688) *
                C50843 +
            ((C11375 + C11376 + C11377) * C121 +
             (C11378 + C11379 + C11380) * C50688) *
                C50764) *
               C50603 * C893 -
           (((C7893 * C788 + C7888 * C794 + C7892 * C787 + C50871 * C793 +
              C7891 * C786 + C50870 * C792) *
                 C50688 +
             (C7893 * C779 + C7888 * C789 + C7892 * C778 + C50871 * C783 +
              C7891 * C777 + C50870 * C782) *
                 C121) *
                C50764 +
            ((C8424 + C8423 + C8422) * C50688 +
             (C8421 + C8420 + C8419) * C121) *
                C50843) *
               C50603 * C50639) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C7891 * C122 + C50870 * C129 + C7892 * C123 + C50871 * C130 +
             C7893 * C124 + C7888 * C131) *
                C121 +
            (C7891 * C133 + C50870 * C143 + C7892 * C134 + C50871 * C144 +
             C7893 * C135 + C7888 * C145) *
                C50688) *
               C50843 +
           ((C11047 + C11048 + C11049) * C121 +
            (C11050 + C11051 + C11052) * C50688) *
               C50764) *
              C50603 * C964 -
          (((C8789 + C8790 + C8791) * C50688 + (C8792 + C8793 + C8794) * C121) *
               C50764 +
           ((C8096 + C8095 + C8094) * C50688 + (C8093 + C8092 + C8091) * C121) *
               C50843) *
              C50603 * C965 +
          (((C8102 + C8101 + C8100) * C121 + (C8099 + C8098 + C8097) * C50688) *
               C50843 +
           ((C9725 + C9726 + C9727) * C121 + (C9728 + C9729 + C9730) * C50688) *
               C50764) *
              C50603 * C966 -
          (((C7893 * C3076 + C7888 * C3080 + C7892 * C3075 + C50871 * C3079 +
             C7891 * C3074 + C50870 * C3078) *
                C50688 +
            (C7893 * C3071 + C7888 * C3077 + C7892 * C3070 + C50871 * C3073 +
             C7891 * C3069 + C50870 * C3072) *
                C121) *
               C50764 +
           ((C9062 + C9061 + C9060) * C50688 + (C9059 + C9058 + C9057) * C121) *
               C50843) *
              C50603 * C967) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[55] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C7891 * C122 + C50870 * C129 + C7892 * C123 +
                       C50871 * C130 + C7893 * C124 + C7888 * C131) *
                          C121 +
                      (C7891 * C133 + C50870 * C143 + C7892 * C134 +
                       C50871 * C144 + C7893 * C135 + C7888 * C145) *
                          C50688) *
                         C50843 +
                     ((C11047 + C11048 + C11049) * C121 +
                      (C11050 + C11051 + C11052) * C50688) *
                         C50764) *
                        C1544 -
                    (((C11053 + C11054 + C11055) * C50688 +
                      (C11056 + C11057 + C11058) * C121) *
                         C50764 +
                     ((C11052 + C11051 + C11050) * C50688 +
                      (C11049 + C11048 + C11047) * C121) *
                         C50843) *
                        C50667) *
                       C50829 +
                   ((((C8794 + C8793 + C8792) * C121 +
                      (C8791 + C8790 + C8789) * C50688) *
                         C50843 +
                     ((C9221 + C9222 + C9223) * C121 +
                      (C9224 + C9225 + C9226) * C50688) *
                         C50764) *
                        C50667 -
                    (((C8789 + C8790 + C8791) * C50688 +
                      (C8792 + C8793 + C8794) * C121) *
                         C50764 +
                     ((C8096 + C8095 + C8094) * C50688 +
                      (C8093 + C8092 + C8091) * C121) *
                         C50843) *
                        C1544) *
                       C50639) *
                      C50821 +
                  (((((C11059 + C11060 + C11061) * C121 +
                      (C11062 + C11063 + C11064) * C50688) *
                         C50843 +
                     ((C11065 + C11066 + C11067) * C121 +
                      (C11068 + C11069 + C11070) * C50688) *
                         C50764) *
                        C50667 -
                    (((C11064 + C11063 + C11062) * C50688 +
                      (C11061 + C11060 + C11059) * C121) *
                         C50764 +
                     ((C7893 * C136 + C7888 * C146 + C7892 * C135 +
                       C50871 * C145 + C7891 * C134 + C50870 * C144) *
                          C50688 +
                      (C7893 * C125 + C7888 * C132 + C7892 * C124 +
                       C50871 * C131 + C7891 * C123 + C50870 * C130) *
                          C121) *
                         C50843) *
                        C1544) *
                       C50829 +
                   ((((C8103 + C8104 + C8105) * C121 +
                      (C8106 + C8107 + C8108) * C50688) *
                         C50843 +
                     ((C8795 + C8796 + C8797) * C121 +
                      (C8798 + C8799 + C8800) * C50688) *
                         C50764) *
                        C1544 -
                    (((C7893 * C1087 + C7888 * C1095 + C7892 * C1088 +
                       C50871 * C1096 + C7891 * C1089 + C50870 * C1097) *
                          C50688 +
                      (C7893 * C1083 + C7888 * C1091 + C7892 * C1084 +
                       C50871 * C1092 + C7891 * C1085 + C50870 * C1093) *
                          C121) *
                         C50764 +
                     ((C8800 + C8799 + C8798) * C50688 +
                      (C8797 + C8796 + C8795) * C121) *
                         C50843) *
                        C50667) *
                       C50639) *
                      C50574)) /
                (p * q * std::sqrt(p + q));
    d2ee[56] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C7891 * C122 + C50870 * C129 + C7892 * C123 +
                      C50871 * C130 + C7893 * C124 + C7888 * C131) *
                         C121 +
                     (C7891 * C133 + C50870 * C143 + C7892 * C134 +
                      C50871 * C144 + C7893 * C135 + C7888 * C145) *
                         C50688) *
                        C50843 +
                    ((C11047 + C11048 + C11049) * C121 +
                     (C11050 + C11051 + C11052) * C50688) *
                        C50764) *
                       C50876 -
                   (((C11053 + C11054 + C11055) * C50688 +
                     (C11056 + C11057 + C11058) * C121) *
                        C50764 +
                    ((C11052 + C11051 + C11050) * C50688 +
                     (C11049 + C11048 + C11047) * C121) *
                        C50843) *
                       C50877 +
                   (((C11058 + C11057 + C11056) * C121 +
                     (C11055 + C11054 + C11053) * C50688) *
                        C50843 +
                    ((C12853 + C12854 + C12855) * C121 +
                     (C12856 + C12857 + C12858) * C50688) *
                        C50764) *
                       C1960) *
                      C50829 +
                  ((((C8794 + C8793 + C8792) * C121 +
                     (C8791 + C8790 + C8789) * C50688) *
                        C50843 +
                    ((C9221 + C9222 + C9223) * C121 +
                     (C9224 + C9225 + C9226) * C50688) *
                        C50764) *
                       C50877 -
                   (((C8789 + C8790 + C8791) * C50688 +
                     (C8792 + C8793 + C8794) * C121) *
                        C50764 +
                    ((C8096 + C8095 + C8094) * C50688 +
                     (C8093 + C8092 + C8091) * C121) *
                        C50843) *
                       C50876 -
                   (((C7893 * C5971 + C7888 * C5973 + C7892 * C4479 +
                      C50871 * C4485 + C7891 * C4480 + C50870 * C4486) *
                         C50688 +
                     (C7893 * C5970 + C7888 * C5972 + C7892 * C4473 +
                      C50871 * C4481 + C7891 * C4474 + C50870 * C4482) *
                         C121) *
                        C50764 +
                    ((C9226 + C9225 + C9224) * C50688 +
                     (C9223 + C9222 + C9221) * C121) *
                        C50843) *
                       C1960) *
                      C50639) *
                 C50568) /
                (p * q * std::sqrt(p + q));
    d2ee[57] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C7891 * C122 + C50870 * C129 + C7892 * C123 +
                      C50871 * C130 + C7893 * C124 + C7888 * C131) *
                         C121 +
                     (C7891 * C133 + C50870 * C143 + C7892 * C134 +
                      C50871 * C144 + C7893 * C135 + C7888 * C145) *
                         C50688) *
                        C50843 +
                    ((C11047 + C11048 + C11049) * C121 +
                     (C11050 + C11051 + C11052) * C50688) *
                        C50764) *
                       C1544 -
                   (((C11053 + C11054 + C11055) * C50688 +
                     (C11056 + C11057 + C11058) * C121) *
                        C50764 +
                    ((C11052 + C11051 + C11050) * C50688 +
                     (C11049 + C11048 + C11047) * C121) *
                        C50843) *
                       C50667) *
                      C248 +
                  ((((C8794 + C8793 + C8792) * C121 +
                     (C8791 + C8790 + C8789) * C50688) *
                        C50843 +
                    ((C9221 + C9222 + C9223) * C121 +
                     (C9224 + C9225 + C9226) * C50688) *
                        C50764) *
                       C50667 -
                   (((C8789 + C8790 + C8791) * C50688 +
                     (C8792 + C8793 + C8794) * C121) *
                        C50764 +
                    ((C8096 + C8095 + C8094) * C50688 +
                     (C8093 + C8092 + C8091) * C121) *
                        C50843) *
                       C1544) *
                      C249 +
                  ((((C8102 + C8101 + C8100) * C121 +
                     (C8099 + C8098 + C8097) * C50688) *
                        C50843 +
                    ((C9725 + C9726 + C9727) * C121 +
                     (C9728 + C9729 + C9730) * C50688) *
                        C50764) *
                       C1544 -
                   (((C7893 * C2554 + C7888 * C2558 + C7892 * C2553 +
                      C50871 * C2557 + C7891 * C2552 + C50870 * C2556) *
                         C50688 +
                     (C7893 * C2549 + C7888 * C2555 + C7892 * C2548 +
                      C50871 * C2551 + C7891 * C2547 + C50870 * C2550) *
                         C121) *
                        C50764 +
                    ((C9730 + C9729 + C9728) * C50688 +
                     (C9727 + C9726 + C9725) * C121) *
                        C50843) *
                       C50667) *
                      C250) *
                 C50568) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C7891 * C122 + C50870 * C129 + C7892 * C123 +
                      C50871 * C130 + C7893 * C124 + C7888 * C131) *
                         C121 +
                     (C7891 * C133 + C50870 * C143 + C7892 * C134 +
                      C50871 * C144 + C7893 * C135 + C7888 * C145) *
                         C50688) *
                        C50843 +
                    ((C11047 + C11048 + C11049) * C121 +
                     (C11050 + C11051 + C11052) * C50688) *
                        C50764) *
                       C1544 -
                   (((C11053 + C11054 + C11055) * C50688 +
                     (C11056 + C11057 + C11058) * C121) *
                        C50764 +
                    ((C11052 + C11051 + C11050) * C50688 +
                     (C11049 + C11048 + C11047) * C121) *
                        C50843) *
                       C50667) *
                      C50587 * C895 +
                  ((((C11059 + C11060 + C11061) * C121 +
                     (C11062 + C11063 + C11064) * C50688) *
                        C50843 +
                    ((C11065 + C11066 + C11067) * C121 +
                     (C11068 + C11069 + C11070) * C50688) *
                        C50764) *
                       C50667 -
                   (((C11064 + C11063 + C11062) * C50688 +
                     (C11061 + C11060 + C11059) * C121) *
                        C50764 +
                    ((C7893 * C136 + C7888 * C146 + C7892 * C135 +
                      C50871 * C145 + C7891 * C134 + C50870 * C144) *
                         C50688 +
                     (C7893 * C125 + C7888 * C132 + C7892 * C124 +
                      C50871 * C131 + C7891 * C123 + C50870 * C130) *
                         C121) *
                        C50843) *
                       C1544) *
                      C50587 * C896 +
                  ((((C7891 * C124 + C50870 * C131 + C7892 * C125 +
                      C50871 * C132 + C7893 * C126 + C7888 * C138) *
                         C121 +
                     (C7891 * C135 + C50870 * C145 + C7892 * C136 +
                      C50871 * C146 + C7893 * C137 + C7888 * C147) *
                         C50688) *
                        C50843 +
                    ((C11375 + C11376 + C11377) * C121 +
                     (C11378 + C11379 + C11380) * C50688) *
                        C50764) *
                       C1544 -
                   (((C7893 * C422 + C7888 * C433 + C7892 * C419 +
                      C50871 * C431 + C7891 * C418 + C50870 * C430) *
                         C50688 +
                     (C7893 * C403 + C7888 * C423 + C7892 * C401 +
                      C50871 * C415 + C7891 * C400 + C50870 * C414) *
                         C121) *
                        C50764 +
                    ((C11380 + C11379 + C11378) * C50688 +
                     (C11377 + C11376 + C11375) * C121) *
                        C50843) *
                       C50667) *
                      C50587 * C897)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C7891 * C122 + C50870 * C129 + C7892 * C123 +
                     C50871 * C130 + C7893 * C124 + C7888 * C131) *
                        C121 +
                    (C7891 * C133 + C50870 * C143 + C7892 * C134 +
                     C50871 * C144 + C7893 * C135 + C7888 * C145) *
                        C50688) *
                       C50843 +
                   ((C11047 + C11048 + C11049) * C121 +
                    (C11050 + C11051 + C11052) * C50688) *
                       C50764) *
                      C1710 -
                  (((C11053 + C11054 + C11055) * C50688 +
                    (C11056 + C11057 + C11058) * C121) *
                       C50764 +
                   ((C11052 + C11051 + C11050) * C50688 +
                    (C11049 + C11048 + C11047) * C121) *
                       C50843) *
                      C1711 +
                  (((C11058 + C11057 + C11056) * C121 +
                    (C11055 + C11054 + C11053) * C50688) *
                       C50843 +
                   ((C12853 + C12854 + C12855) * C121 +
                    (C12856 + C12857 + C12858) * C50688) *
                       C50764) *
                      C1712 -
                  (((C7893 * C5373 + C7888 * C5377 + C7892 * C5372 +
                     C50871 * C5376 + C7891 * C5371 + C50870 * C5375) *
                        C50688 +
                    (C7893 * C5368 + C7888 * C5374 + C7892 * C5367 +
                     C50871 * C5370 + C7891 * C5366 + C50870 * C5369) *
                        C121) *
                       C50764 +
                   ((C12858 + C12857 + C12856) * C50688 +
                    (C12855 + C12854 + C12853) * C121) *
                       C50843) *
                      C1713) *
                 C50587 * C50568) /
                    (p * q * std::sqrt(p + q));
    d2ee[58] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C7891 * C122 + C50870 * C129 + C7892 * C123 +
                      C50871 * C130 + C7893 * C124 + C7888 * C131) *
                         C121 +
                     (C7891 * C133 + C50870 * C143 + C7892 * C134 +
                      C50871 * C144 + C7893 * C135 + C7888 * C145) *
                         C50688) *
                        C50843 +
                    ((C11047 + C11048 + C11049) * C121 +
                     (C11050 + C11051 + C11052) * C50688) *
                        C50764) *
                       C50876 -
                   (((C11053 + C11054 + C11055) * C50688 +
                     (C11056 + C11057 + C11058) * C121) *
                        C50764 +
                    ((C11052 + C11051 + C11050) * C50688 +
                     (C11049 + C11048 + C11047) * C121) *
                        C50843) *
                       C50877 +
                   (((C11058 + C11057 + C11056) * C121 +
                     (C11055 + C11054 + C11053) * C50688) *
                        C50843 +
                    ((C12853 + C12854 + C12855) * C121 +
                     (C12856 + C12857 + C12858) * C50688) *
                        C50764) *
                       C1960) *
                      C50587 * C50821 +
                  ((((C11059 + C11060 + C11061) * C121 +
                     (C11062 + C11063 + C11064) * C50688) *
                        C50843 +
                    ((C11065 + C11066 + C11067) * C121 +
                     (C11068 + C11069 + C11070) * C50688) *
                        C50764) *
                       C50877 -
                   (((C11064 + C11063 + C11062) * C50688 +
                     (C11061 + C11060 + C11059) * C121) *
                        C50764 +
                    ((C7893 * C136 + C7888 * C146 + C7892 * C135 +
                      C50871 * C145 + C7891 * C134 + C50870 * C144) *
                         C50688 +
                     (C7893 * C125 + C7888 * C132 + C7892 * C124 +
                      C50871 * C131 + C7891 * C123 + C50870 * C130) *
                         C121) *
                        C50843) *
                       C50876 -
                   (((C7893 * C1718 + C7888 * C1726 + C7892 * C1719 +
                      C50871 * C1727 + C7891 * C1720 + C50870 * C1728) *
                         C50688 +
                     (C7893 * C1714 + C7888 * C1722 + C7892 * C1715 +
                      C50871 * C1723 + C7891 * C1716 + C50870 * C1724) *
                         C121) *
                        C50764 +
                    ((C11070 + C11069 + C11068) * C50688 +
                     (C11067 + C11066 + C11065) * C121) *
                        C50843) *
                       C1960) *
                      C50587 * C50574)) /
                (p * q * std::sqrt(p + q));
    d2ee[59] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C7891 * C122 + C50870 * C129 + C7892 * C123 +
                      C50871 * C130 + C7893 * C124 + C7888 * C131) *
                         C121 +
                     (C7891 * C133 + C50870 * C143 + C7892 * C134 +
                      C50871 * C144 + C7893 * C135 + C7888 * C145) *
                         C50688) *
                        C50843 +
                    ((C11047 + C11048 + C11049) * C121 +
                     (C11050 + C11051 + C11052) * C50688) *
                        C50764) *
                       C1544 -
                   (((C11053 + C11054 + C11055) * C50688 +
                     (C11056 + C11057 + C11058) * C121) *
                        C50764 +
                    ((C11052 + C11051 + C11050) * C50688 +
                     (C11049 + C11048 + C11047) * C121) *
                        C50843) *
                       C50667) *
                      C50587 * C895 +
                  ((((C11059 + C11060 + C11061) * C121 +
                     (C11062 + C11063 + C11064) * C50688) *
                        C50843 +
                    ((C11065 + C11066 + C11067) * C121 +
                     (C11068 + C11069 + C11070) * C50688) *
                        C50764) *
                       C50667 -
                   (((C11064 + C11063 + C11062) * C50688 +
                     (C11061 + C11060 + C11059) * C121) *
                        C50764 +
                    ((C7893 * C136 + C7888 * C146 + C7892 * C135 +
                      C50871 * C145 + C7891 * C134 + C50870 * C144) *
                         C50688 +
                     (C7893 * C125 + C7888 * C132 + C7892 * C124 +
                      C50871 * C131 + C7891 * C123 + C50870 * C130) *
                         C121) *
                        C50843) *
                       C1544) *
                      C50587 * C896 +
                  ((((C7891 * C124 + C50870 * C131 + C7892 * C125 +
                      C50871 * C132 + C7893 * C126 + C7888 * C138) *
                         C121 +
                     (C7891 * C135 + C50870 * C145 + C7892 * C136 +
                      C50871 * C146 + C7893 * C137 + C7888 * C147) *
                         C50688) *
                        C50843 +
                    ((C11375 + C11376 + C11377) * C121 +
                     (C11378 + C11379 + C11380) * C50688) *
                        C50764) *
                       C1544 -
                   (((C7893 * C422 + C7888 * C433 + C7892 * C419 +
                      C50871 * C431 + C7891 * C418 + C50870 * C430) *
                         C50688 +
                     (C7893 * C403 + C7888 * C423 + C7892 * C401 +
                      C50871 * C415 + C7891 * C400 + C50870 * C414) *
                         C121) *
                        C50764 +
                    ((C11380 + C11379 + C11378) * C50688 +
                     (C11377 + C11376 + C11375) * C121) *
                        C50843) *
                       C50667) *
                      C50587 * C897)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C7891 * C122 + C50870 * C129 + C7892 * C123 +
                      C50871 * C130 + C7893 * C124 + C7888 * C131) *
                         C121 +
                     (C7891 * C133 + C50870 * C143 + C7892 * C134 +
                      C50871 * C144 + C7893 * C135 + C7888 * C145) *
                         C50688) *
                        C50843 +
                    ((C11047 + C11048 + C11049) * C121 +
                     (C11050 + C11051 + C11052) * C50688) *
                        C50764) *
                       C1544 -
                   (((C11053 + C11054 + C11055) * C50688 +
                     (C11056 + C11057 + C11058) * C121) *
                        C50764 +
                    ((C11052 + C11051 + C11050) * C50688 +
                     (C11049 + C11048 + C11047) * C121) *
                        C50843) *
                       C50667) *
                      C248 +
                  ((((C8794 + C8793 + C8792) * C121 +
                     (C8791 + C8790 + C8789) * C50688) *
                        C50843 +
                    ((C9221 + C9222 + C9223) * C121 +
                     (C9224 + C9225 + C9226) * C50688) *
                        C50764) *
                       C50667 -
                   (((C8789 + C8790 + C8791) * C50688 +
                     (C8792 + C8793 + C8794) * C121) *
                        C50764 +
                    ((C8096 + C8095 + C8094) * C50688 +
                     (C8093 + C8092 + C8091) * C121) *
                        C50843) *
                       C1544) *
                      C249 +
                  ((((C8102 + C8101 + C8100) * C121 +
                     (C8099 + C8098 + C8097) * C50688) *
                        C50843 +
                    ((C9725 + C9726 + C9727) * C121 +
                     (C9728 + C9729 + C9730) * C50688) *
                        C50764) *
                       C1544 -
                   (((C7893 * C2554 + C7888 * C2558 + C7892 * C2553 +
                      C50871 * C2557 + C7891 * C2552 + C50870 * C2556) *
                         C50688 +
                     (C7893 * C2549 + C7888 * C2555 + C7892 * C2548 +
                      C50871 * C2551 + C7891 * C2547 + C50870 * C2550) *
                         C121) *
                        C50764 +
                    ((C9730 + C9729 + C9728) * C50688 +
                     (C9727 + C9726 + C9725) * C121) *
                        C50843) *
                       C50667) *
                      C250) *
                 C50568) /
                    (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50688) *
               C50700 * C50603 * C50829 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50688 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50700 * C50603 * C50639) *
              C50872 +
          (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
             C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                C121 +
            (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
             C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                C50688) *
               C50700 * C50603 * C50639 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50688 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50700 * C50603 * C50829) *
              C50873 +
          (((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
             C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                C121 +
            (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
             C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                C50688) *
               C50700 * C50603 * C50829 -
           ((C120 * C538 + C108 * C540 + C119 * C280 + C107 * C291 +
             C118 * C263 + C106 * C283 + C117 * C264 + C105 * C284) *
                C50688 +
            (C120 * C537 + C108 * C539 + C119 * C261 + C107 * C279 +
             C118 * C253 + C106 * C267 + C117 * C254 + C105 * C268) *
                C121) *
               C50700 * C50603 * C50639) *
              C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                C2164 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                C2159 +
            (C2374 + C2375) * C2165 + (C2376 + C2377) * C2160 + C2398 * C2166 +
            C2399 * C2161) *
               C50700 * C50603 * C50829 -
           ((C2382 + C2383) * C2161 + (C2384 + C2385) * C2166 +
            (C2381 + C2380) * C2160 + (C2379 + C2378) * C2165 +
            (C2377 + C2376) * C2159 + (C2375 + C2374) * C2164) *
               C50700 * C50603 * C50639) *
              C50872 +
          (((C2386 + C2387) * C2164 + (C2388 + C2389) * C2159 +
            (C2390 + C2391) * C2165 + (C2392 + C2393) * C2160 +
            (C2394 + C2395) * C2166 + (C2396 + C2397) * C2161) *
               C50700 * C50603 * C50639 -
           (C2400 * C2161 + C2401 * C2166 + (C2389 + C2388) * C2160 +
            (C2387 + C2386) * C2165 +
            (C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                C2159 +
            (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                C2164) *
               C50700 * C50603 * C50829) *
              C50873 +
          (((C2162 * C124 + C2157 * C131 + C2163 * C125 + C50543 * C132) *
                C2164 +
            (C2162 * C135 + C2157 * C145 + C2163 * C136 + C50543 * C146) *
                C2159 +
            (C2722 + C2723) * C2165 + (C2724 + C2725) * C2160 +
            (C2726 + C2727) * C2166 + (C2728 + C2729) * C2161) *
               C50700 * C50603 * C50829 -
           ((C2163 * C973 + C50543 * C981 + C2162 * C974 + C2157 * C982) *
                C2161 +
            (C2163 * C969 + C50543 * C977 + C2162 * C970 + C2157 * C978) *
                C2166 +
            (C2729 + C2728) * C2160 + (C2727 + C2726) * C2165 +
            (C2725 + C2724) * C2159 + (C2723 + C2722) * C2164) *
               C50700 * C50603 * C50639) *
              C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
              C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                 C121 +
             (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
              C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                 C50688) *
                C50700 * C50830 -
            ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
              C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                 C50688 +
             (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
              C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                 C121) *
                C50700 * C50667) *
               C50829 +
           (((C117 * C775 + C105 * C780 + C118 * C776 + C106 * C781 +
              C119 * C777 + C107 * C782 + C120 * C778 + C108 * C783) *
                 C121 +
             (C117 * C784 + C105 * C790 + C118 * C785 + C106 * C791 +
              C119 * C786 + C107 * C792 + C120 * C787 + C108 * C793) *
                 C50688) *
                C50700 * C50667 -
            ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
              C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                 C50688 +
             (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
              C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                 C121) *
                C50700 * C50830) *
               C50639) *
              C251 +
          ((((C117 * C396 + C105 * C410 + C118 * C395 + C106 * C409 +
              C119 * C394 + C107 * C408 + C120 * C402 + C108 * C420) *
                 C121 +
             (C117 * C406 + C105 * C426 + C118 * C405 + C106 * C425 +
              C119 * C404 + C107 * C424 + C120 * C421 + C108 * C432) *
                 C50688) *
                C50700 * C50667 -
            ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
              C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                 C50688 +
             (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
              C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                 C121) *
                C50700 * C50830) *
               C50829 +
           (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
              C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                 C121 +
             (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
              C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                 C50688) *
                C50700 * C50830 -
            ((C120 * C788 + C108 * C794 + C119 * C787 + C107 * C793 +
              C118 * C786 + C106 * C792 + C117 * C785 + C105 * C791) *
                 C50688 +
             (C120 * C779 + C108 * C789 + C119 * C778 + C107 * C783 +
              C118 * C777 + C106 * C782 + C117 * C776 + C105 * C781) *
                 C121) *
                C50700 * C50667) *
               C50639) *
              C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                 C2164 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                 C2159 +
             (C2374 + C2375) * C2165 + (C2376 + C2377) * C2160 + C2398 * C2166 +
             C2399 * C2161) *
                C50700 * C50830 -
            ((C3114 + C3115) * C2161 + (C3116 + C3117) * C2166 +
             (C3118 + C3119) * C2160 + (C3120 + C3121) * C2165 +
             (C2163 * C406 + C50543 * C426 + C2162 * C407 + C2157 * C427) *
                 C2159 +
             (C2163 * C396 + C50543 * C410 + C2162 * C397 + C2157 * C411) *
                 C2164) *
                C50700 * C50667) *
               C50829 +
           (((C3121 + C3120) * C2164 + (C3119 + C3118) * C2159 +
             (C3117 + C3116) * C2165 + (C3115 + C3114) * C2160 +
             (C2162 * C3069 + C2157 * C3072 + C2163 * C3070 + C50543 * C3073) *
                 C2166 +
             (C2162 * C3074 + C2157 * C3078 + C2163 * C3075 + C50543 * C3079) *
                 C2161) *
                C50700 * C50667 -
            ((C2382 + C2383) * C2161 + (C2384 + C2385) * C2166 +
             (C2381 + C2380) * C2160 + (C2379 + C2378) * C2165 +
             (C2377 + C2376) * C2159 + (C2375 + C2374) * C2164) *
                C50700 * C50830) *
               C50639) *
              C251 +
          ((((C2162 * C396 + C2157 * C410 + C2163 * C395 + C50543 * C409) *
                 C2164 +
             (C2162 * C406 + C2157 * C426 + C2163 * C405 + C50543 * C425) *
                 C2159 +
             (C3122 + C3123) * C2165 + (C3124 + C3125) * C2160 +
             (C3126 + C3127) * C2166 + (C3128 + C3129) * C2161) *
                C50700 * C50667 -
            (C2400 * C2161 + C2401 * C2166 + (C2389 + C2388) * C2160 +
             (C2387 + C2386) * C2165 +
             (C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                 C2159 +
             (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                 C2164) *
                C50700 * C50830) *
               C50829 +
           (((C2386 + C2387) * C2164 + (C2388 + C2389) * C2159 +
             (C2390 + C2391) * C2165 + (C2392 + C2393) * C2160 +
             (C2394 + C2395) * C2166 + (C2396 + C2397) * C2161) *
                C50700 * C50830 -
            ((C2163 * C3076 + C50543 * C3080 + C2162 * C3075 + C2157 * C3079) *
                 C2161 +
             (C2163 * C3071 + C50543 * C3077 + C2162 * C3070 + C2157 * C3073) *
                 C2166 +
             (C3129 + C3128) * C2160 + (C3127 + C3126) * C2165 +
             (C3125 + C3124) * C2159 + (C3123 + C3122) * C2164) *
                C50700 * C50667) *
               C50639) *
              C50574)) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50688) *
               C50700 * C50603 * C248 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50688 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50700 * C50603 * C249 +
           ((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
             C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
                C121 +
            (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
             C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
                C50688) *
               C50700 * C50603 * C250) *
              C251 +
          (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
             C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                C121 +
            (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
             C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                C50688) *
               C50700 * C50603 * C249 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50688 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50700 * C50603 * C248 -
           ((C120 * C281 + C108 * C292 + C119 * C278 + C107 * C290 +
             C118 * C277 + C106 * C289 + C117 * C276 + C105 * C288) *
                C50688 +
            (C120 * C262 + C108 * C282 + C119 * C260 + C107 * C274 +
             C118 * C259 + C106 * C273 + C117 * C258 + C105 * C272) *
                C121) *
               C50700 * C50603 * C250) *
              C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C121 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50688) *
              C50700 * C50603 * C50587 * C113 -
          ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
            C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
               C50688 +
           (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
            C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
               C121) *
              C50700 * C50603 * C50587 * C114 +
          ((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
            C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
               C121 +
           (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
            C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
               C50688) *
              C50700 * C50603 * C50587 * C115 -
          ((C120 * C141 + C108 * C149 + C119 * C140 + C107 * C148 +
            C118 * C137 + C106 * C147 + C117 * C136 + C105 * C146) *
               C50688 +
           (C120 * C128 + C108 * C142 + C119 * C127 + C107 * C139 +
            C118 * C126 + C106 * C138 + C117 * C125 + C105 * C132) *
               C121) *
              C50700 * C50603 * C50587 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50688) *
               C50700 * C391 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50688 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50700 * C392 +
           ((C117 * C398 + C105 * C412 + C118 * C399 + C106 * C413 +
             C119 * C400 + C107 * C414 + C120 * C401 + C108 * C415) *
                C121 +
            (C117 * C416 + C105 * C428 + C118 * C417 + C106 * C429 +
             C119 * C418 + C107 * C430 + C120 * C419 + C108 * C431) *
                C50688) *
               C50700 * C393) *
              C50587 * C251 +
          (((C117 * C396 + C105 * C410 + C118 * C395 + C106 * C409 +
             C119 * C394 + C107 * C408 + C120 * C402 + C108 * C420) *
                C121 +
            (C117 * C406 + C105 * C426 + C118 * C405 + C106 * C425 +
             C119 * C404 + C107 * C424 + C120 * C421 + C108 * C432) *
                C50688) *
               C50700 * C392 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50688 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50700 * C391 -
           ((C120 * C422 + C108 * C433 + C119 * C419 + C107 * C431 +
             C118 * C418 + C106 * C430 + C117 * C417 + C105 * C429) *
                C50688 +
            (C120 * C403 + C108 * C423 + C119 * C401 + C107 * C415 +
             C118 * C400 + C106 * C414 + C117 * C399 + C105 * C413) *
                C121) *
               C50700 * C393) *
              C50587 * C50574)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
               C2164 +
           (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
               C2159 +
           (C2162 * C256 + C2157 * C270 + C2163 * C255 + C50543 * C269) *
               C2165 +
           (C2162 * C266 + C2157 * C286 + C2163 * C265 + C50543 * C285) *
               C2160 +
           (C2162 * C257 + C2157 * C271 + C2163 * C258 + C50543 * C272) *
               C2166 +
           (C2162 * C275 + C2157 * C287 + C2163 * C276 + C50543 * C288) *
               C2161) *
              C50700 * C50603 * C50587 * C113 -
          ((C2163 * C277 + C50543 * C289 + C2162 * C276 + C2157 * C288) *
               C2161 +
           (C2163 * C259 + C50543 * C273 + C2162 * C258 + C2157 * C272) *
               C2166 +
           (C2163 * C264 + C50543 * C284 + C2162 * C265 + C2157 * C285) *
               C2160 +
           (C2163 * C254 + C50543 * C268 + C2162 * C255 + C2157 * C269) *
               C2165 +
           (C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
               C2159 +
           (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
               C2164) *
              C50700 * C50603 * C50587 * C114 +
          ((C2162 * C124 + C2157 * C131 + C2163 * C125 + C50543 * C132) *
               C2164 +
           (C2162 * C135 + C2157 * C145 + C2163 * C136 + C50543 * C146) *
               C2159 +
           (C2162 * C254 + C2157 * C268 + C2163 * C253 + C50543 * C267) *
               C2165 +
           (C2162 * C264 + C2157 * C284 + C2163 * C263 + C50543 * C283) *
               C2160 +
           (C2162 * C259 + C2157 * C273 + C2163 * C260 + C50543 * C274) *
               C2166 +
           (C2162 * C277 + C2157 * C289 + C2163 * C278 + C50543 * C290) *
               C2161) *
              C50700 * C50603 * C50587 * C115 -
          ((C2163 * C281 + C50543 * C292 + C2162 * C278 + C2157 * C290) *
               C2161 +
           (C2163 * C262 + C50543 * C282 + C2162 * C260 + C2157 * C274) *
               C2166 +
           (C2163 * C280 + C50543 * C291 + C2162 * C263 + C2157 * C283) *
               C2160 +
           (C2163 * C261 + C50543 * C279 + C2162 * C253 + C2157 * C267) *
               C2165 +
           (C2163 * C137 + C50543 * C147 + C2162 * C136 + C2157 * C146) *
               C2159 +
           (C2163 * C126 + C50543 * C138 + C2162 * C125 + C2157 * C132) *
               C2164) *
              C50700 * C50603 * C50587 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                C2164 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                C2159 +
            (C2374 + C2375) * C2165 + (C2376 + C2377) * C2160 + C2398 * C2166 +
            C2399 * C2161) *
               C50700 * C50603 * C248 -
           ((C2382 + C2383) * C2161 + (C2384 + C2385) * C2166 +
            (C2381 + C2380) * C2160 + (C2379 + C2378) * C2165 +
            (C2377 + C2376) * C2159 + (C2375 + C2374) * C2164) *
               C50700 * C50603 * C249 +
           (C2398 * C2164 + C2399 * C2159 + (C2385 + C2384) * C2165 +
            (C2383 + C2382) * C2160 +
            (C2162 * C2313 + C2157 * C2316 + C2163 * C2314 + C50543 * C2317) *
                C2166 +
            (C2162 * C2318 + C2157 * C2322 + C2163 * C2319 + C50543 * C2323) *
                C2161) *
               C50700 * C50603 * C250) *
              C251 +
          (((C2386 + C2387) * C2164 + (C2388 + C2389) * C2159 +
            (C2390 + C2391) * C2165 + (C2392 + C2393) * C2160 +
            (C2394 + C2395) * C2166 + (C2396 + C2397) * C2161) *
               C50700 * C50603 * C249 -
           (C2400 * C2161 + C2401 * C2166 + (C2389 + C2388) * C2160 +
            (C2387 + C2386) * C2165 +
            (C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                C2159 +
            (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                C2164) *
               C50700 * C50603 * C248 -
           ((C2163 * C2320 + C50543 * C2324 + C2162 * C2319 + C2157 * C2323) *
                C2161 +
            (C2163 * C2315 + C50543 * C2321 + C2162 * C2314 + C2157 * C2317) *
                C2166 +
            (C2397 + C2396) * C2160 + (C2395 + C2394) * C2165 + C2400 * C2159 +
            C2401 * C2164) *
               C50700 * C50603 * C250) *
              C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                C2164 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                C2159 +
            (C2374 + C2375) * C2165 + (C2376 + C2377) * C2160 + C2398 * C2166 +
            C2399 * C2161) *
               C50700 * C391 -
           ((C2163 * C1436 + C50543 * C1444 + C2162 * C1437 + C2157 * C1445) *
                C2161 +
            (C2163 * C1432 + C50543 * C1440 + C2162 * C1433 + C2157 * C1441) *
                C2166 +
            (C2163 * C785 + C50543 * C791 + C2162 * C784 + C2157 * C790) *
                C2160 +
            (C2163 * C776 + C50543 * C781 + C2162 * C775 + C2157 * C780) *
                C2165 +
            (C2163 * C406 + C50543 * C426 + C2162 * C407 + C2157 * C427) *
                C2159 +
            (C2163 * C396 + C50543 * C410 + C2162 * C397 + C2157 * C411) *
                C2164) *
               C50700 * C392 +
           ((C2162 * C398 + C2157 * C412 + C2163 * C399 + C50543 * C413) *
                C2164 +
            (C2162 * C416 + C2157 * C428 + C2163 * C417 + C50543 * C429) *
                C2159 +
            (C2162 * C1086 + C2157 * C1094 + C2163 * C1085 + C50543 * C1093) *
                C2165 +
            (C2162 * C1090 + C2157 * C1098 + C2163 * C1089 + C50543 * C1097) *
                C2160 +
            (C2162 * C2547 + C2157 * C2550 + C2163 * C2548 + C50543 * C2551) *
                C2166 +
            (C2162 * C2552 + C2157 * C2556 + C2163 * C2553 + C50543 * C2557) *
                C2161) *
               C50700 * C393) *
              C50587 * C251 +
          (((C2162 * C396 + C2157 * C410 + C2163 * C395 + C50543 * C409) *
                C2164 +
            (C2162 * C406 + C2157 * C426 + C2163 * C405 + C50543 * C425) *
                C2159 +
            (C2162 * C776 + C2157 * C781 + C2163 * C777 + C50543 * C782) *
                C2165 +
            (C2162 * C785 + C2157 * C791 + C2163 * C786 + C50543 * C792) *
                C2160 +
            (C2162 * C1432 + C2157 * C1440 + C2163 * C1431 + C50543 * C1439) *
                C2166 +
            (C2162 * C1436 + C2157 * C1444 + C2163 * C1435 + C50543 * C1443) *
                C2161) *
               C50700 * C392 -
           (C2400 * C2161 + C2401 * C2166 + (C2389 + C2388) * C2160 +
            (C2387 + C2386) * C2165 +
            (C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                C2159 +
            (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                C2164) *
               C50700 * C391 -
           ((C2163 * C2554 + C50543 * C2558 + C2162 * C2553 + C2157 * C2557) *
                C2161 +
            (C2163 * C2549 + C50543 * C2555 + C2162 * C2548 + C2157 * C2551) *
                C2166 +
            (C2163 * C1088 + C50543 * C1096 + C2162 * C1089 + C2157 * C1097) *
                C2160 +
            (C2163 * C1084 + C50543 * C1092 + C2162 * C1085 + C2157 * C1093) *
                C2165 +
            (C2163 * C418 + C50543 * C430 + C2162 * C417 + C2157 * C429) *
                C2159 +
            (C2163 * C400 + C50543 * C414 + C2162 * C399 + C2157 * C413) *
                C2164) *
               C50700 * C393) *
              C50587 * C50574)) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50688) *
               C50700 * C50830 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50688 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50700 * C50667) *
              C50587 * C50872 +
          (((C117 * C396 + C105 * C410 + C118 * C395 + C106 * C409 +
             C119 * C394 + C107 * C408 + C120 * C402 + C108 * C420) *
                C121 +
            (C117 * C406 + C105 * C426 + C118 * C405 + C106 * C425 +
             C119 * C404 + C107 * C424 + C120 * C421 + C108 * C432) *
                C50688) *
               C50700 * C50667 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50688 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50700 * C50830) *
              C50587 * C50873 +
          (((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
             C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                C121 +
            (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
             C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                C50688) *
               C50700 * C50830 -
           ((C120 * C642 + C108 * C644 + C119 * C421 + C107 * C432 +
             C118 * C404 + C106 * C424 + C117 * C405 + C105 * C425) *
                C50688 +
            (C120 * C641 + C108 * C643 + C119 * C402 + C107 * C420 +
             C118 * C394 + C106 * C408 + C117 * C395 + C105 * C409) *
                C121) *
               C50700 * C50667) *
              C50587 * C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                C2164 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                C2159 +
            (C2374 + C2375) * C2165 + (C2376 + C2377) * C2160 + C2398 * C2166 +
            C2399 * C2161) *
               C50700 * C50830 -
           ((C2163 * C1436 + C50543 * C1444 + C2162 * C1437 + C2157 * C1445) *
                C2161 +
            (C2163 * C1432 + C50543 * C1440 + C2162 * C1433 + C2157 * C1441) *
                C2166 +
            (C2163 * C785 + C50543 * C791 + C2162 * C784 + C2157 * C790) *
                C2160 +
            (C2163 * C776 + C50543 * C781 + C2162 * C775 + C2157 * C780) *
                C2165 +
            (C2163 * C406 + C50543 * C426 + C2162 * C407 + C2157 * C427) *
                C2159 +
            (C2163 * C396 + C50543 * C410 + C2162 * C397 + C2157 * C411) *
                C2164) *
               C50700 * C50667) *
              C50587 * C50872 +
          (((C2162 * C396 + C2157 * C410 + C2163 * C395 + C50543 * C409) *
                C2164 +
            (C2162 * C406 + C2157 * C426 + C2163 * C405 + C50543 * C425) *
                C2159 +
            (C2162 * C776 + C2157 * C781 + C2163 * C777 + C50543 * C782) *
                C2165 +
            (C2162 * C785 + C2157 * C791 + C2163 * C786 + C50543 * C792) *
                C2160 +
            (C2162 * C1432 + C2157 * C1440 + C2163 * C1431 + C50543 * C1439) *
                C2166 +
            (C2162 * C1436 + C2157 * C1444 + C2163 * C1435 + C50543 * C1443) *
                C2161) *
               C50700 * C50667 -
           (C2400 * C2161 + C2401 * C2166 + (C2389 + C2388) * C2160 +
            (C2387 + C2386) * C2165 +
            (C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                C2159 +
            (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                C2164) *
               C50700 * C50830) *
              C50587 * C50873 +
          (((C2162 * C124 + C2157 * C131 + C2163 * C125 + C50543 * C132) *
                C2164 +
            (C2162 * C135 + C2157 * C145 + C2163 * C136 + C50543 * C146) *
                C2159 +
            (C2722 + C2723) * C2165 + (C2724 + C2725) * C2160 +
            (C2726 + C2727) * C2166 + (C2728 + C2729) * C2161) *
               C50700 * C50830 -
           ((C2163 * C1434 + C50543 * C1442 + C2162 * C1435 + C2157 * C1443) *
                C2161 +
            (C2163 * C1430 + C50543 * C1438 + C2162 * C1431 + C2157 * C1439) *
                C2166 +
            (C2163 * C787 + C50543 * C793 + C2162 * C786 + C2157 * C792) *
                C2160 +
            (C2163 * C778 + C50543 * C783 + C2162 * C777 + C2157 * C782) *
                C2165 +
            (C2163 * C404 + C50543 * C424 + C2162 * C405 + C2157 * C425) *
                C2159 +
            (C2163 * C394 + C50543 * C408 + C2162 * C395 + C2157 * C409) *
                C2164) *
               C50700 * C50667) *
              C50587 * C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C121 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50688) *
              C50700 * C50603 * C50587 * C113 -
          ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
            C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
               C50688 +
           (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
            C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
               C121) *
              C50700 * C50603 * C50587 * C114 +
          ((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
            C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
               C121 +
           (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
            C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
               C50688) *
              C50700 * C50603 * C50587 * C115 -
          ((C120 * C141 + C108 * C149 + C119 * C140 + C107 * C148 +
            C118 * C137 + C106 * C147 + C117 * C136 + C105 * C146) *
               C50688 +
           (C120 * C128 + C108 * C142 + C119 * C127 + C107 * C139 +
            C118 * C126 + C106 * C138 + C117 * C125 + C105 * C132) *
               C121) *
              C50700 * C50603 * C50587 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50688) *
               C50700 * C50603 * C248 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50688 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50700 * C50603 * C249 +
           ((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
             C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
                C121 +
            (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
             C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
                C50688) *
               C50700 * C50603 * C250) *
              C251 +
          (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
             C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                C121 +
            (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
             C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                C50688) *
               C50700 * C50603 * C249 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50688 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50700 * C50603 * C248 -
           ((C120 * C281 + C108 * C292 + C119 * C278 + C107 * C290 +
             C118 * C277 + C106 * C289 + C117 * C276 + C105 * C288) *
                C50688 +
            (C120 * C262 + C108 * C282 + C119 * C260 + C107 * C274 +
             C118 * C259 + C106 * C273 + C117 * C258 + C105 * C272) *
                C121) *
               C50700 * C50603 * C250) *
              C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
               C2164 +
           (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
               C2159 +
           (C2162 * C256 + C2157 * C270 + C2163 * C255 + C50543 * C269) *
               C2165 +
           (C2162 * C266 + C2157 * C286 + C2163 * C265 + C50543 * C285) *
               C2160 +
           (C2162 * C257 + C2157 * C271 + C2163 * C258 + C50543 * C272) *
               C2166 +
           (C2162 * C275 + C2157 * C287 + C2163 * C276 + C50543 * C288) *
               C2161) *
              C50700 * C50603 * C50587 * C113 -
          ((C2163 * C277 + C50543 * C289 + C2162 * C276 + C2157 * C288) *
               C2161 +
           (C2163 * C259 + C50543 * C273 + C2162 * C258 + C2157 * C272) *
               C2166 +
           (C2163 * C264 + C50543 * C284 + C2162 * C265 + C2157 * C285) *
               C2160 +
           (C2163 * C254 + C50543 * C268 + C2162 * C255 + C2157 * C269) *
               C2165 +
           (C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
               C2159 +
           (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
               C2164) *
              C50700 * C50603 * C50587 * C114 +
          ((C2162 * C124 + C2157 * C131 + C2163 * C125 + C50543 * C132) *
               C2164 +
           (C2162 * C135 + C2157 * C145 + C2163 * C136 + C50543 * C146) *
               C2159 +
           (C2162 * C254 + C2157 * C268 + C2163 * C253 + C50543 * C267) *
               C2165 +
           (C2162 * C264 + C2157 * C284 + C2163 * C263 + C50543 * C283) *
               C2160 +
           (C2162 * C259 + C2157 * C273 + C2163 * C260 + C50543 * C274) *
               C2166 +
           (C2162 * C277 + C2157 * C289 + C2163 * C278 + C50543 * C290) *
               C2161) *
              C50700 * C50603 * C50587 * C115 -
          ((C2163 * C281 + C50543 * C292 + C2162 * C278 + C2157 * C290) *
               C2161 +
           (C2163 * C262 + C50543 * C282 + C2162 * C260 + C2157 * C274) *
               C2166 +
           (C2163 * C280 + C50543 * C291 + C2162 * C263 + C2157 * C283) *
               C2160 +
           (C2163 * C261 + C50543 * C279 + C2162 * C253 + C2157 * C267) *
               C2165 +
           (C2163 * C137 + C50543 * C147 + C2162 * C136 + C2157 * C146) *
               C2159 +
           (C2163 * C126 + C50543 * C138 + C2162 * C125 + C2157 * C132) *
               C2164) *
              C50700 * C50603 * C50587 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                C2164 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                C2159 +
            (C2374 + C2375) * C2165 + (C2376 + C2377) * C2160 + C2398 * C2166 +
            C2399 * C2161) *
               C50700 * C50603 * C248 -
           ((C2382 + C2383) * C2161 + (C2384 + C2385) * C2166 +
            (C2381 + C2380) * C2160 + (C2379 + C2378) * C2165 +
            (C2377 + C2376) * C2159 + (C2375 + C2374) * C2164) *
               C50700 * C50603 * C249 +
           (C2398 * C2164 + C2399 * C2159 + (C2385 + C2384) * C2165 +
            (C2383 + C2382) * C2160 +
            (C2162 * C2313 + C2157 * C2316 + C2163 * C2314 + C50543 * C2317) *
                C2166 +
            (C2162 * C2318 + C2157 * C2322 + C2163 * C2319 + C50543 * C2323) *
                C2161) *
               C50700 * C50603 * C250) *
              C251 +
          (((C2386 + C2387) * C2164 + (C2388 + C2389) * C2159 +
            (C2390 + C2391) * C2165 + (C2392 + C2393) * C2160 +
            (C2394 + C2395) * C2166 + (C2396 + C2397) * C2161) *
               C50700 * C50603 * C249 -
           (C2400 * C2161 + C2401 * C2166 + (C2389 + C2388) * C2160 +
            (C2387 + C2386) * C2165 +
            (C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                C2159 +
            (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                C2164) *
               C50700 * C50603 * C248 -
           ((C2163 * C2320 + C50543 * C2324 + C2162 * C2319 + C2157 * C2323) *
                C2161 +
            (C2163 * C2315 + C50543 * C2321 + C2162 * C2314 + C2157 * C2317) *
                C2166 +
            (C2397 + C2396) * C2160 + (C2395 + C2394) * C2165 + C2400 * C2159 +
            C2401 * C2164) *
               C50700 * C50603 * C250) *
              C50574)) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50688) *
               C50700 * C50603 * C50874 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50688 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50700 * C50603 * C50875 +
           ((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
             C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
                C121 +
            (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
             C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
                C50688) *
               C50700 * C50603 * C1199) *
              C50821 +
          (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
             C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                C121 +
            (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
             C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                C50688) *
               C50700 * C50603 * C50875 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50688 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50700 * C50603 * C50874 -
           ((C120 * C281 + C108 * C292 + C119 * C278 + C107 * C290 +
             C118 * C277 + C106 * C289 + C117 * C276 + C105 * C288) *
                C50688 +
            (C120 * C262 + C108 * C282 + C119 * C260 + C107 * C274 +
             C118 * C259 + C106 * C273 + C117 * C258 + C105 * C272) *
                C121) *
               C50700 * C50603 * C1199) *
              C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                C2164 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                C2159 +
            (C2374 + C2375) * C2165 + (C2376 + C2377) * C2160 + C2398 * C2166 +
            C2399 * C2161) *
               C50700 * C50603 * C50874 -
           (C3382 * C2161 + C3383 * C2166 + (C2381 + C2380) * C2160 +
            (C2379 + C2378) * C2165 + (C2377 + C2376) * C2159 +
            (C2375 + C2374) * C2164) *
               C50700 * C50603 * C50875 +
           (C2398 * C2164 + C2399 * C2159 + (C2385 + C2384) * C2165 +
            (C2383 + C2382) * C2160 + (C3392 + C3393) * C2166 +
            (C3394 + C3395) * C2161) *
               C50700 * C50603 * C1199) *
              C50821 +
          (((C2386 + C2387) * C2164 + (C2388 + C2389) * C2159 +
            (C2390 + C2391) * C2165 + (C2392 + C2393) * C2160 +
            (C2394 + C2395) * C2166 + (C2396 + C2397) * C2161) *
               C50700 * C50603 * C50875 -
           (C2400 * C2161 + C2401 * C2166 + (C2389 + C2388) * C2160 +
            (C2387 + C2386) * C2165 +
            (C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                C2159 +
            (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                C2164) *
               C50700 * C50603 * C50874 -
           ((C2163 * C2320 + C50543 * C2324 + C2162 * C2319 + C2157 * C2323) *
                C2161 +
            (C2163 * C2315 + C50543 * C2321 + C2162 * C2314 + C2157 * C2317) *
                C2166 +
            (C2397 + C2396) * C2160 + (C2395 + C2394) * C2165 + C2400 * C2159 +
            C2401 * C2164) *
               C50700 * C50603 * C1199) *
              C50574)) /
            (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50688) *
               C50700 * C50830 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50688 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50700 * C50667) *
              C50874 +
          (((C117 * C775 + C105 * C780 + C118 * C776 + C106 * C781 +
             C119 * C777 + C107 * C782 + C120 * C778 + C108 * C783) *
                C121 +
            (C117 * C784 + C105 * C790 + C118 * C785 + C106 * C791 +
             C119 * C786 + C107 * C792 + C120 * C787 + C108 * C793) *
                C50688) *
               C50700 * C50667 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50688 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50700 * C50830) *
              C50875 +
          (((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
             C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
                C121 +
            (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
             C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
                C50688) *
               C50700 * C50830 -
           ((C120 * C1434 + C108 * C1442 + C119 * C1435 + C107 * C1443 +
             C118 * C1436 + C106 * C1444 + C117 * C1437 + C105 * C1445) *
                C50688 +
            (C120 * C1430 + C108 * C1438 + C119 * C1431 + C107 * C1439 +
             C118 * C1432 + C106 * C1440 + C117 * C1433 + C105 * C1441) *
                C121) *
               C50700 * C50667) *
              C1199) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                C2164 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                C2159 +
            (C2374 + C2375) * C2165 + (C2376 + C2377) * C2160 + C2398 * C2166 +
            C2399 * C2161) *
               C50700 * C50830 -
           (C4068 * C2161 + C4069 * C2166 + (C3118 + C3119) * C2160 +
            (C3120 + C3121) * C2165 +
            (C2163 * C406 + C50543 * C426 + C2162 * C407 + C2157 * C427) *
                C2159 +
            (C2163 * C396 + C50543 * C410 + C2162 * C397 + C2157 * C411) *
                C2164) *
               C50700 * C50667) *
              C50874 +
          (((C3121 + C3120) * C2164 + (C3119 + C3118) * C2159 +
            (C3117 + C3116) * C2165 + (C3115 + C3114) * C2160 +
            (C4078 + C4079) * C2166 + (C4080 + C4081) * C2161) *
               C50700 * C50667 -
           (C3382 * C2161 + C3383 * C2166 + (C2381 + C2380) * C2160 +
            (C2379 + C2378) * C2165 + (C2377 + C2376) * C2159 +
            (C2375 + C2374) * C2164) *
               C50700 * C50830) *
              C50875 +
          ((C2398 * C2164 + C2399 * C2159 + (C2385 + C2384) * C2165 +
            (C2383 + C2382) * C2160 + (C3392 + C3393) * C2166 +
            (C3394 + C3395) * C2161) *
               C50700 * C50830 -
           ((C2163 * C4061 + C50543 * C4065 + C2162 * C4062 + C2157 * C4066) *
                C2161 +
            (C2163 * C4059 + C50543 * C4063 + C2162 * C4060 + C2157 * C4064) *
                C2166 +
            (C4081 + C4080) * C2160 + (C4079 + C4078) * C2165 + C4068 * C2159 +
            C4069 * C2164) *
               C50700 * C50667) *
              C1199) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C121 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50688) *
              C50700 * C50603 * C964 -
          ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
            C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
               C50688 +
           (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
            C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
               C121) *
              C50700 * C50603 * C965 +
          ((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
            C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
               C121 +
           (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
            C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
               C50688) *
              C50700 * C50603 * C966 -
          ((C120 * C973 + C108 * C981 + C119 * C974 + C107 * C982 +
            C118 * C975 + C106 * C983 + C117 * C976 + C105 * C984) *
               C50688 +
           (C120 * C969 + C108 * C977 + C119 * C970 + C107 * C978 +
            C118 * C971 + C106 * C979 + C117 * C972 + C105 * C980) *
               C121) *
              C50700 * C50603 * C967) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50688) *
               C50700 * C50603 * C893 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50688 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50700 * C50603 * C50639) *
              C895 +
          (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
             C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                C121 +
            (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
             C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                C50688) *
               C50700 * C50603 * C50639 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50688 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50700 * C50603 * C893) *
              C896 +
          (((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
             C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                C121 +
            (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
             C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                C50688) *
               C50700 * C50603 * C893 -
           ((C120 * C538 + C108 * C540 + C119 * C280 + C107 * C291 +
             C118 * C263 + C106 * C283 + C117 * C264 + C105 * C284) *
                C50688 +
            (C120 * C537 + C108 * C539 + C119 * C261 + C107 * C279 +
             C118 * C253 + C106 * C267 + C117 * C254 + C105 * C268) *
                C121) *
               C50700 * C50603 * C50639) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50688) *
               C50700 * C391 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50688 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50700 * C392 +
           ((C117 * C398 + C105 * C412 + C118 * C399 + C106 * C413 +
             C119 * C400 + C107 * C414 + C120 * C401 + C108 * C415) *
                C121 +
            (C117 * C416 + C105 * C428 + C118 * C417 + C106 * C429 +
             C119 * C418 + C107 * C430 + C120 * C419 + C108 * C431) *
                C50688) *
               C50700 * C393) *
              C893 +
          (((C117 * C775 + C105 * C780 + C118 * C776 + C106 * C781 +
             C119 * C777 + C107 * C782 + C120 * C778 + C108 * C783) *
                C121 +
            (C117 * C784 + C105 * C790 + C118 * C785 + C106 * C791 +
             C119 * C786 + C107 * C792 + C120 * C787 + C108 * C793) *
                C50688) *
               C50700 * C392 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50688 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50700 * C391 -
           ((C120 * C1087 + C108 * C1095 + C119 * C1088 + C107 * C1096 +
             C118 * C1089 + C106 * C1097 + C117 * C1090 + C105 * C1098) *
                C50688 +
            (C120 * C1083 + C108 * C1091 + C119 * C1084 + C107 * C1092 +
             C118 * C1085 + C106 * C1093 + C117 * C1086 + C105 * C1094) *
                C121) *
               C50700 * C393) *
              C50639) *
         C50568) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                C2164 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                C2159 +
            (C2374 + C2375) * C2165 + (C2376 + C2377) * C2160 + C2398 * C2166 +
            C2399 * C2161) *
               C50700 * C50603 * C893 -
           ((C2382 + C2383) * C2161 + (C2384 + C2385) * C2166 +
            (C2381 + C2380) * C2160 + (C2379 + C2378) * C2165 +
            (C2377 + C2376) * C2159 + (C2375 + C2374) * C2164) *
               C50700 * C50603 * C50639) *
              C895 +
          (((C2386 + C2387) * C2164 + (C2388 + C2389) * C2159 +
            (C2390 + C2391) * C2165 + (C2392 + C2393) * C2160 +
            (C2394 + C2395) * C2166 + (C2396 + C2397) * C2161) *
               C50700 * C50603 * C50639 -
           (C2400 * C2161 + C2401 * C2166 + (C2389 + C2388) * C2160 +
            (C2387 + C2386) * C2165 +
            (C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                C2159 +
            (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                C2164) *
               C50700 * C50603 * C893) *
              C896 +
          (((C2162 * C124 + C2157 * C131 + C2163 * C125 + C50543 * C132) *
                C2164 +
            (C2162 * C135 + C2157 * C145 + C2163 * C136 + C50543 * C146) *
                C2159 +
            (C2722 + C2723) * C2165 + (C2724 + C2725) * C2160 +
            (C2726 + C2727) * C2166 + (C2728 + C2729) * C2161) *
               C50700 * C50603 * C893 -
           ((C2163 * C973 + C50543 * C981 + C2162 * C974 + C2157 * C982) *
                C2161 +
            (C2163 * C969 + C50543 * C977 + C2162 * C970 + C2157 * C978) *
                C2166 +
            (C2729 + C2728) * C2160 + (C2727 + C2726) * C2165 +
            (C2725 + C2724) * C2159 + (C2723 + C2722) * C2164) *
               C50700 * C50603 * C50639) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
               C2164 +
           (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
               C2159 +
           (C2374 + C2375) * C2165 + (C2376 + C2377) * C2160 + C2398 * C2166 +
           C2399 * C2161) *
              C50700 * C50603 * C964 -
          (C3382 * C2161 + C3383 * C2166 + (C2381 + C2380) * C2160 +
           (C2379 + C2378) * C2165 + (C2377 + C2376) * C2159 +
           (C2375 + C2374) * C2164) *
              C50700 * C50603 * C965 +
          (C2398 * C2164 + C2399 * C2159 + (C2385 + C2384) * C2165 +
           (C2383 + C2382) * C2160 + (C3392 + C3393) * C2166 +
           (C3394 + C3395) * C2161) *
              C50700 * C50603 * C966 -
          ((C2163 * C3375 + C50543 * C3379 + C2162 * C3376 + C2157 * C3380) *
               C2161 +
           (C2163 * C3373 + C50543 * C3377 + C2162 * C3374 + C2157 * C3378) *
               C2166 +
           (C3395 + C3394) * C2160 + (C3393 + C3392) * C2165 + C3382 * C2159 +
           C3383 * C2164) *
              C50700 * C50603 * C967) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                C2164 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                C2159 +
            (C2374 + C2375) * C2165 + (C2376 + C2377) * C2160 + C2398 * C2166 +
            C2399 * C2161) *
               C50700 * C391 -
           ((C3114 + C3115) * C2161 + (C3116 + C3117) * C2166 +
            (C3118 + C3119) * C2160 + (C3120 + C3121) * C2165 +
            (C2163 * C406 + C50543 * C426 + C2162 * C407 + C2157 * C427) *
                C2159 +
            (C2163 * C396 + C50543 * C410 + C2162 * C397 + C2157 * C411) *
                C2164) *
               C50700 * C392 +
           ((C2162 * C398 + C2157 * C412 + C2163 * C399 + C50543 * C413) *
                C2164 +
            (C2162 * C416 + C2157 * C428 + C2163 * C417 + C50543 * C429) *
                C2159 +
            (C3566 + C3567) * C2165 + (C3568 + C3569) * C2160 +
            (C3570 + C3571) * C2166 + (C3572 + C3573) * C2161) *
               C50700 * C393) *
              C893 +
          (((C3121 + C3120) * C2164 + (C3119 + C3118) * C2159 +
            (C3117 + C3116) * C2165 + (C3115 + C3114) * C2160 +
            (C2162 * C3069 + C2157 * C3072 + C2163 * C3070 + C50543 * C3073) *
                C2166 +
            (C2162 * C3074 + C2157 * C3078 + C2163 * C3075 + C50543 * C3079) *
                C2161) *
               C50700 * C392 -
           (C3382 * C2161 + C3383 * C2166 + (C2381 + C2380) * C2160 +
            (C2379 + C2378) * C2165 + (C2377 + C2376) * C2159 +
            (C2375 + C2374) * C2164) *
               C50700 * C391 -
           ((C2163 * C3543 + C50543 * C3547 + C2162 * C3544 + C2157 * C3548) *
                C2161 +
            (C2163 * C3541 + C50543 * C3545 + C2162 * C3542 + C2157 * C3546) *
                C2166 +
            (C3573 + C3572) * C2160 + (C3571 + C3570) * C2165 +
            (C3569 + C3568) * C2159 + (C3567 + C3566) * C2164) *
               C50700 * C393) *
              C50639) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
              C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                 C121 +
             (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
              C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                 C50688) *
                C50700 * C50830 -
            ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
              C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                 C50688 +
             (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
              C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                 C121) *
                C50700 * C50667) *
               C893 +
           (((C117 * C775 + C105 * C780 + C118 * C776 + C106 * C781 +
              C119 * C777 + C107 * C782 + C120 * C778 + C108 * C783) *
                 C121 +
             (C117 * C784 + C105 * C790 + C118 * C785 + C106 * C791 +
              C119 * C786 + C107 * C792 + C120 * C787 + C108 * C793) *
                 C50688) *
                C50700 * C50667 -
            ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
              C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                 C50688 +
             (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
              C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                 C121) *
                C50700 * C50830) *
               C50639) *
              C50821 +
          ((((C117 * C396 + C105 * C410 + C118 * C395 + C106 * C409 +
              C119 * C394 + C107 * C408 + C120 * C402 + C108 * C420) *
                 C121 +
             (C117 * C406 + C105 * C426 + C118 * C405 + C106 * C425 +
              C119 * C404 + C107 * C424 + C120 * C421 + C108 * C432) *
                 C50688) *
                C50700 * C50667 -
            ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
              C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                 C50688 +
             (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
              C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                 C121) *
                C50700 * C50830) *
               C893 +
           (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
              C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                 C121 +
             (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
              C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                 C50688) *
                C50700 * C50830 -
            ((C120 * C788 + C108 * C794 + C119 * C787 + C107 * C793 +
              C118 * C786 + C106 * C792 + C117 * C785 + C105 * C791) *
                 C50688 +
             (C120 * C779 + C108 * C789 + C119 * C778 + C107 * C783 +
              C118 * C777 + C106 * C782 + C117 * C776 + C105 * C781) *
                 C121) *
                C50700 * C50667) *
               C50639) *
              C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                 C2164 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                 C2159 +
             (C2374 + C2375) * C2165 + (C2376 + C2377) * C2160 + C2398 * C2166 +
             C2399 * C2161) *
                C50700 * C50830 -
            ((C3114 + C3115) * C2161 + (C3116 + C3117) * C2166 +
             (C3118 + C3119) * C2160 + (C3120 + C3121) * C2165 +
             (C2163 * C406 + C50543 * C426 + C2162 * C407 + C2157 * C427) *
                 C2159 +
             (C2163 * C396 + C50543 * C410 + C2162 * C397 + C2157 * C411) *
                 C2164) *
                C50700 * C50667) *
               C893 +
           (((C3121 + C3120) * C2164 + (C3119 + C3118) * C2159 +
             (C3117 + C3116) * C2165 + (C3115 + C3114) * C2160 +
             (C2162 * C3069 + C2157 * C3072 + C2163 * C3070 + C50543 * C3073) *
                 C2166 +
             (C2162 * C3074 + C2157 * C3078 + C2163 * C3075 + C50543 * C3079) *
                 C2161) *
                C50700 * C50667 -
            (C3382 * C2161 + C3383 * C2166 + (C2381 + C2380) * C2160 +
             (C2379 + C2378) * C2165 + (C2377 + C2376) * C2159 +
             (C2375 + C2374) * C2164) *
                C50700 * C50830) *
               C50639) *
              C50821 +
          ((((C2162 * C396 + C2157 * C410 + C2163 * C395 + C50543 * C409) *
                 C2164 +
             (C2162 * C406 + C2157 * C426 + C2163 * C405 + C50543 * C425) *
                 C2159 +
             (C3122 + C3123) * C2165 + (C3124 + C3125) * C2160 +
             (C3126 + C3127) * C2166 + (C3128 + C3129) * C2161) *
                C50700 * C50667 -
            (C2400 * C2161 + C2401 * C2166 + (C2389 + C2388) * C2160 +
             (C2387 + C2386) * C2165 +
             (C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                 C2159 +
             (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                 C2164) *
                C50700 * C50830) *
               C893 +
           (((C2386 + C2387) * C2164 + (C2388 + C2389) * C2159 +
             (C2390 + C2391) * C2165 + (C2392 + C2393) * C2160 +
             (C2394 + C2395) * C2166 + (C2396 + C2397) * C2161) *
                C50700 * C50830 -
            ((C2163 * C3076 + C50543 * C3080 + C2162 * C3075 + C2157 * C3079) *
                 C2161 +
             (C2163 * C3071 + C50543 * C3077 + C2162 * C3070 + C2157 * C3073) *
                 C2166 +
             (C3129 + C3128) * C2160 + (C3127 + C3126) * C2165 +
             (C3125 + C3124) * C2159 + (C3123 + C3122) * C2164) *
                C50700 * C50667) *
               C50639) *
              C50574)) /
            (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50688) *
               C50700 * C50603 * C893 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50688 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50700 * C50603 * C50639) *
              C895 +
          (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
             C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                C121 +
            (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
             C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                C50688) *
               C50700 * C50603 * C50639 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50688 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50700 * C50603 * C893) *
              C896 +
          (((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
             C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                C121 +
            (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
             C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                C50688) *
               C50700 * C50603 * C893 -
           ((C120 * C538 + C108 * C540 + C119 * C280 + C107 * C291 +
             C118 * C263 + C106 * C283 + C117 * C264 + C105 * C284) *
                C50688 +
            (C120 * C537 + C108 * C539 + C119 * C261 + C107 * C279 +
             C118 * C253 + C106 * C267 + C117 * C254 + C105 * C268) *
                C121) *
               C50700 * C50603 * C50639) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C121 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50688) *
              C50700 * C50603 * C964 -
          ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
            C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
               C50688 +
           (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
            C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
               C121) *
              C50700 * C50603 * C965 +
          ((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
            C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
               C121 +
           (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
            C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
               C50688) *
              C50700 * C50603 * C966 -
          ((C120 * C973 + C108 * C981 + C119 * C974 + C107 * C982 +
            C118 * C975 + C106 * C983 + C117 * C976 + C105 * C984) *
               C50688 +
           (C120 * C969 + C108 * C977 + C119 * C970 + C107 * C978 +
            C118 * C971 + C106 * C979 + C117 * C972 + C105 * C980) *
               C121) *
              C50700 * C50603 * C967) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                C2164 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                C2159 +
            (C2374 + C2375) * C2165 + (C2376 + C2377) * C2160 + C2398 * C2166 +
            C2399 * C2161) *
               C50700 * C50603 * C893 -
           ((C2382 + C2383) * C2161 + (C2384 + C2385) * C2166 +
            (C2381 + C2380) * C2160 + (C2379 + C2378) * C2165 +
            (C2377 + C2376) * C2159 + (C2375 + C2374) * C2164) *
               C50700 * C50603 * C50639) *
              C895 +
          (((C2386 + C2387) * C2164 + (C2388 + C2389) * C2159 +
            (C2390 + C2391) * C2165 + (C2392 + C2393) * C2160 +
            (C2394 + C2395) * C2166 + (C2396 + C2397) * C2161) *
               C50700 * C50603 * C50639 -
           (C2400 * C2161 + C2401 * C2166 + (C2389 + C2388) * C2160 +
            (C2387 + C2386) * C2165 +
            (C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                C2159 +
            (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                C2164) *
               C50700 * C50603 * C893) *
              C896 +
          (((C2162 * C124 + C2157 * C131 + C2163 * C125 + C50543 * C132) *
                C2164 +
            (C2162 * C135 + C2157 * C145 + C2163 * C136 + C50543 * C146) *
                C2159 +
            (C2722 + C2723) * C2165 + (C2724 + C2725) * C2160 +
            (C2726 + C2727) * C2166 + (C2728 + C2729) * C2161) *
               C50700 * C50603 * C893 -
           ((C2163 * C973 + C50543 * C981 + C2162 * C974 + C2157 * C982) *
                C2161 +
            (C2163 * C969 + C50543 * C977 + C2162 * C970 + C2157 * C978) *
                C2166 +
            (C2729 + C2728) * C2160 + (C2727 + C2726) * C2165 +
            (C2725 + C2724) * C2159 + (C2723 + C2722) * C2164) *
               C50700 * C50603 * C50639) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
               C2164 +
           (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
               C2159 +
           (C2374 + C2375) * C2165 + (C2376 + C2377) * C2160 + C2398 * C2166 +
           C2399 * C2161) *
              C50700 * C50603 * C964 -
          (C3382 * C2161 + C3383 * C2166 + (C2381 + C2380) * C2160 +
           (C2379 + C2378) * C2165 + (C2377 + C2376) * C2159 +
           (C2375 + C2374) * C2164) *
              C50700 * C50603 * C965 +
          (C2398 * C2164 + C2399 * C2159 + (C2385 + C2384) * C2165 +
           (C2383 + C2382) * C2160 + (C3392 + C3393) * C2166 +
           (C3394 + C3395) * C2161) *
              C50700 * C50603 * C966 -
          ((C2163 * C3375 + C50543 * C3379 + C2162 * C3376 + C2157 * C3380) *
               C2161 +
           (C2163 * C3373 + C50543 * C3377 + C2162 * C3374 + C2157 * C3378) *
               C2166 +
           (C3395 + C3394) * C2160 + (C3393 + C3392) * C2165 + C3382 * C2159 +
           C3383 * C2164) *
              C50700 * C50603 * C967) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
              C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                 C121 +
             (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
              C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                 C50688) *
                C50700 * C1544 -
            ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
              C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                 C50688 +
             (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
              C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                 C121) *
                C50700 * C50667) *
               C50829 +
           (((C117 * C775 + C105 * C780 + C118 * C776 + C106 * C781 +
              C119 * C777 + C107 * C782 + C120 * C778 + C108 * C783) *
                 C121 +
             (C117 * C784 + C105 * C790 + C118 * C785 + C106 * C791 +
              C119 * C786 + C107 * C792 + C120 * C787 + C108 * C793) *
                 C50688) *
                C50700 * C50667 -
            ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
              C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                 C50688 +
             (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
              C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                 C121) *
                C50700 * C1544) *
               C50639) *
              C50821 +
          ((((C117 * C396 + C105 * C410 + C118 * C395 + C106 * C409 +
              C119 * C394 + C107 * C408 + C120 * C402 + C108 * C420) *
                 C121 +
             (C117 * C406 + C105 * C426 + C118 * C405 + C106 * C425 +
              C119 * C404 + C107 * C424 + C120 * C421 + C108 * C432) *
                 C50688) *
                C50700 * C50667 -
            ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
              C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                 C50688 +
             (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
              C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                 C121) *
                C50700 * C1544) *
               C50829 +
           (((C117 * C255 + C105 * C269 + C118 * C254 + C106 * C268 +
              C119 * C253 + C107 * C267 + C120 * C261 + C108 * C279) *
                 C121 +
             (C117 * C265 + C105 * C285 + C118 * C264 + C106 * C284 +
              C119 * C263 + C107 * C283 + C120 * C280 + C108 * C291) *
                 C50688) *
                C50700 * C1544 -
            ((C120 * C788 + C108 * C794 + C119 * C787 + C107 * C793 +
              C118 * C786 + C106 * C792 + C117 * C785 + C105 * C791) *
                 C50688 +
             (C120 * C779 + C108 * C789 + C119 * C778 + C107 * C783 +
              C118 * C777 + C106 * C782 + C117 * C776 + C105 * C781) *
                 C121) *
                C50700 * C50667) *
               C50639) *
              C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                 C2164 +
             (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                 C2159 +
             (C2374 + C2375) * C2165 + (C2376 + C2377) * C2160 + C2398 * C2166 +
             C2399 * C2161) *
                C50700 * C1544 -
            (C4068 * C2161 + C4069 * C2166 + (C3118 + C3119) * C2160 +
             (C3120 + C3121) * C2165 +
             (C2163 * C406 + C50543 * C426 + C2162 * C407 + C2157 * C427) *
                 C2159 +
             (C2163 * C396 + C50543 * C410 + C2162 * C397 + C2157 * C411) *
                 C2164) *
                C50700 * C50667) *
               C50829 +
           (((C3121 + C3120) * C2164 + (C3119 + C3118) * C2159 +
             (C3117 + C3116) * C2165 + (C3115 + C3114) * C2160 +
             (C4078 + C4079) * C2166 + (C4080 + C4081) * C2161) *
                C50700 * C50667 -
            (C3382 * C2161 + C3383 * C2166 + (C2381 + C2380) * C2160 +
             (C2379 + C2378) * C2165 + (C2377 + C2376) * C2159 +
             (C2375 + C2374) * C2164) *
                C50700 * C1544) *
               C50639) *
              C50821 +
          ((((C2162 * C396 + C2157 * C410 + C2163 * C395 + C50543 * C409) *
                 C2164 +
             (C2162 * C406 + C2157 * C426 + C2163 * C405 + C50543 * C425) *
                 C2159 +
             (C3122 + C3123) * C2165 + (C3124 + C3125) * C2160 +
             (C3126 + C3127) * C2166 + (C3128 + C3129) * C2161) *
                C50700 * C50667 -
            (C2400 * C2161 + C2401 * C2166 + (C2389 + C2388) * C2160 +
             (C2387 + C2386) * C2165 +
             (C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                 C2159 +
             (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                 C2164) *
                C50700 * C1544) *
               C50829 +
           (((C2386 + C2387) * C2164 + (C2388 + C2389) * C2159 +
             (C2390 + C2391) * C2165 + (C2392 + C2393) * C2160 +
             (C2394 + C2395) * C2166 + (C2396 + C2397) * C2161) *
                C50700 * C1544 -
            ((C2163 * C3076 + C50543 * C3080 + C2162 * C3075 + C2157 * C3079) *
                 C2161 +
             (C2163 * C3071 + C50543 * C3077 + C2162 * C3070 + C2157 * C3073) *
                 C2166 +
             (C3129 + C3128) * C2160 + (C3127 + C3126) * C2165 +
             (C3125 + C3124) * C2159 + (C3123 + C3122) * C2164) *
                C50700 * C50667) *
               C50639) *
              C50574)) /
            (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50688) *
               C50700 * C50876 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50688 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50700 * C50877 +
           ((C117 * C398 + C105 * C412 + C118 * C399 + C106 * C413 +
             C119 * C400 + C107 * C414 + C120 * C401 + C108 * C415) *
                C121 +
            (C117 * C416 + C105 * C428 + C118 * C417 + C106 * C429 +
             C119 * C418 + C107 * C430 + C120 * C419 + C108 * C431) *
                C50688) *
               C50700 * C1960) *
              C50829 +
          (((C117 * C775 + C105 * C780 + C118 * C776 + C106 * C781 +
             C119 * C777 + C107 * C782 + C120 * C778 + C108 * C783) *
                C121 +
            (C117 * C784 + C105 * C790 + C118 * C785 + C106 * C791 +
             C119 * C786 + C107 * C792 + C120 * C787 + C108 * C793) *
                C50688) *
               C50700 * C50877 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50688 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50700 * C50876 -
           ((C120 * C1087 + C108 * C1095 + C119 * C1088 + C107 * C1096 +
             C118 * C1089 + C106 * C1097 + C117 * C1090 + C105 * C1098) *
                C50688 +
            (C120 * C1083 + C108 * C1091 + C119 * C1084 + C107 * C1092 +
             C118 * C1085 + C106 * C1093 + C117 * C1086 + C105 * C1094) *
                C121) *
               C50700 * C1960) *
              C50639) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                C2164 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                C2159 +
            (C2374 + C2375) * C2165 + (C2376 + C2377) * C2160 + C2398 * C2166 +
            C2399 * C2161) *
               C50700 * C50876 -
           (C4068 * C2161 + C4069 * C2166 + (C3118 + C3119) * C2160 +
            (C3120 + C3121) * C2165 +
            (C2163 * C406 + C50543 * C426 + C2162 * C407 + C2157 * C427) *
                C2159 +
            (C2163 * C396 + C50543 * C410 + C2162 * C397 + C2157 * C411) *
                C2164) *
               C50700 * C50877 +
           ((C2162 * C398 + C2157 * C412 + C2163 * C399 + C50543 * C413) *
                C2164 +
            (C2162 * C416 + C2157 * C428 + C2163 * C417 + C50543 * C429) *
                C2159 +
            (C3566 + C3567) * C2165 + (C3568 + C3569) * C2160 +
            (C3570 + C3571) * C2166 + (C3572 + C3573) * C2161) *
               C50700 * C1960) *
              C50829 +
          (((C3121 + C3120) * C2164 + (C3119 + C3118) * C2159 +
            (C3117 + C3116) * C2165 + (C3115 + C3114) * C2160 +
            (C4078 + C4079) * C2166 + (C4080 + C4081) * C2161) *
               C50700 * C50877 -
           (C3382 * C2161 + C3383 * C2166 + (C2381 + C2380) * C2160 +
            (C2379 + C2378) * C2165 + (C2377 + C2376) * C2159 +
            (C2375 + C2374) * C2164) *
               C50700 * C50876 -
           ((C2163 * C3543 + C50543 * C3547 + C2162 * C3544 + C2157 * C3548) *
                C2161 +
            (C2163 * C3541 + C50543 * C3545 + C2162 * C3542 + C2157 * C3546) *
                C2166 +
            (C3573 + C3572) * C2160 + (C3571 + C3570) * C2165 +
            (C3569 + C3568) * C2159 + (C3567 + C3566) * C2164) *
               C50700 * C1960) *
              C50639) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50688) *
               C50700 * C1544 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50688 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50700 * C50667) *
              C248 +
          (((C117 * C775 + C105 * C780 + C118 * C776 + C106 * C781 +
             C119 * C777 + C107 * C782 + C120 * C778 + C108 * C783) *
                C121 +
            (C117 * C784 + C105 * C790 + C118 * C785 + C106 * C791 +
             C119 * C786 + C107 * C792 + C120 * C787 + C108 * C793) *
                C50688) *
               C50700 * C50667 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50688 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50700 * C1544) *
              C249 +
          (((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
             C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
                C121 +
            (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
             C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
                C50688) *
               C50700 * C1544 -
           ((C120 * C1434 + C108 * C1442 + C119 * C1435 + C107 * C1443 +
             C118 * C1436 + C106 * C1444 + C117 * C1437 + C105 * C1445) *
                C50688 +
            (C120 * C1430 + C108 * C1438 + C119 * C1431 + C107 * C1439 +
             C118 * C1432 + C106 * C1440 + C117 * C1433 + C105 * C1441) *
                C121) *
               C50700 * C50667) *
              C250) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50688) *
               C50700 * C1544 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50688 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50700 * C50667) *
              C50587 * C895 +
          (((C117 * C396 + C105 * C410 + C118 * C395 + C106 * C409 +
             C119 * C394 + C107 * C408 + C120 * C402 + C108 * C420) *
                C121 +
            (C117 * C406 + C105 * C426 + C118 * C405 + C106 * C425 +
             C119 * C404 + C107 * C424 + C120 * C421 + C108 * C432) *
                C50688) *
               C50700 * C50667 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50688 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50700 * C1544) *
              C50587 * C896 +
          (((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
             C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                C121 +
            (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
             C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                C50688) *
               C50700 * C1544 -
           ((C120 * C642 + C108 * C644 + C119 * C421 + C107 * C432 +
             C118 * C404 + C106 * C424 + C117 * C405 + C105 * C425) *
                C50688 +
            (C120 * C641 + C108 * C643 + C119 * C402 + C107 * C420 +
             C118 * C394 + C106 * C408 + C117 * C395 + C105 * C409) *
                C121) *
               C50700 * C50667) *
              C50587 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
            C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
               C121 +
           (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
            C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
               C50688) *
              C50700 * C1710 -
          ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
            C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
               C50688 +
           (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
            C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
               C121) *
              C50700 * C1711 +
          ((C117 * C398 + C105 * C412 + C118 * C399 + C106 * C413 +
            C119 * C400 + C107 * C414 + C120 * C401 + C108 * C415) *
               C121 +
           (C117 * C416 + C105 * C428 + C118 * C417 + C106 * C429 +
            C119 * C418 + C107 * C430 + C120 * C419 + C108 * C431) *
               C50688) *
              C50700 * C1712 -
          ((C120 * C1718 + C108 * C1726 + C119 * C1719 + C107 * C1727 +
            C118 * C1720 + C106 * C1728 + C117 * C1721 + C105 * C1729) *
               C50688 +
           (C120 * C1714 + C108 * C1722 + C119 * C1715 + C107 * C1723 +
            C118 * C1716 + C106 * C1724 + C117 * C1717 + C105 * C1725) *
               C121) *
              C50700 * C1713) *
         C50587 * C50568) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                C2164 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                C2159 +
            (C2374 + C2375) * C2165 + (C2376 + C2377) * C2160 + C2398 * C2166 +
            C2399 * C2161) *
               C50700 * C1544 -
           (C4068 * C2161 + C4069 * C2166 + (C3118 + C3119) * C2160 +
            (C3120 + C3121) * C2165 +
            (C2163 * C406 + C50543 * C426 + C2162 * C407 + C2157 * C427) *
                C2159 +
            (C2163 * C396 + C50543 * C410 + C2162 * C397 + C2157 * C411) *
                C2164) *
               C50700 * C50667) *
              C50587 * C895 +
          (((C2162 * C396 + C2157 * C410 + C2163 * C395 + C50543 * C409) *
                C2164 +
            (C2162 * C406 + C2157 * C426 + C2163 * C405 + C50543 * C425) *
                C2159 +
            (C3122 + C3123) * C2165 + (C3124 + C3125) * C2160 +
            (C3126 + C3127) * C2166 + (C3128 + C3129) * C2161) *
               C50700 * C50667 -
           (C2400 * C2161 + C2401 * C2166 + (C2389 + C2388) * C2160 +
            (C2387 + C2386) * C2165 +
            (C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                C2159 +
            (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                C2164) *
               C50700 * C1544) *
              C50587 * C896 +
          (((C2162 * C124 + C2157 * C131 + C2163 * C125 + C50543 * C132) *
                C2164 +
            (C2162 * C135 + C2157 * C145 + C2163 * C136 + C50543 * C146) *
                C2159 +
            (C2722 + C2723) * C2165 + (C2724 + C2725) * C2160 +
            (C2726 + C2727) * C2166 + (C2728 + C2729) * C2161) *
               C50700 * C1544 -
           ((C2163 * C1434 + C50543 * C1442 + C2162 * C1435 + C2157 * C1443) *
                C2161 +
            (C2163 * C1430 + C50543 * C1438 + C2162 * C1431 + C2157 * C1439) *
                C2166 +
            (C2163 * C787 + C50543 * C793 + C2162 * C786 + C2157 * C792) *
                C2160 +
            (C2163 * C778 + C50543 * C783 + C2162 * C777 + C2157 * C782) *
                C2165 +
            (C2163 * C404 + C50543 * C424 + C2162 * C405 + C2157 * C425) *
                C2159 +
            (C2163 * C394 + C50543 * C408 + C2162 * C395 + C2157 * C409) *
                C2164) *
               C50700 * C50667) *
              C50587 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                C2164 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                C2159 +
            (C2374 + C2375) * C2165 + (C2376 + C2377) * C2160 + C2398 * C2166 +
            C2399 * C2161) *
               C50700 * C1544 -
           (C4068 * C2161 + C4069 * C2166 + (C3118 + C3119) * C2160 +
            (C3120 + C3121) * C2165 +
            (C2163 * C406 + C50543 * C426 + C2162 * C407 + C2157 * C427) *
                C2159 +
            (C2163 * C396 + C50543 * C410 + C2162 * C397 + C2157 * C411) *
                C2164) *
               C50700 * C50667) *
              C248 +
          (((C3121 + C3120) * C2164 + (C3119 + C3118) * C2159 +
            (C3117 + C3116) * C2165 + (C3115 + C3114) * C2160 +
            (C4078 + C4079) * C2166 + (C4080 + C4081) * C2161) *
               C50700 * C50667 -
           (C3382 * C2161 + C3383 * C2166 + (C2381 + C2380) * C2160 +
            (C2379 + C2378) * C2165 + (C2377 + C2376) * C2159 +
            (C2375 + C2374) * C2164) *
               C50700 * C1544) *
              C249 +
          ((C2398 * C2164 + C2399 * C2159 + (C2385 + C2384) * C2165 +
            (C2383 + C2382) * C2160 + (C3392 + C3393) * C2166 +
            (C3394 + C3395) * C2161) *
               C50700 * C1544 -
           ((C2163 * C4061 + C50543 * C4065 + C2162 * C4062 + C2157 * C4066) *
                C2161 +
            (C2163 * C4059 + C50543 * C4063 + C2162 * C4060 + C2157 * C4064) *
                C2166 +
            (C4081 + C4080) * C2160 + (C4079 + C4078) * C2165 + C4068 * C2159 +
            C4069 * C2164) *
               C50700 * C50667) *
              C250) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
               C2164 +
           (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
               C2159 +
           (C2374 + C2375) * C2165 + (C2376 + C2377) * C2160 + C2398 * C2166 +
           C2399 * C2161) *
              C50700 * C1710 -
          (C4068 * C2161 + C4069 * C2166 + (C3118 + C3119) * C2160 +
           (C3120 + C3121) * C2165 +
           (C2163 * C406 + C50543 * C426 + C2162 * C407 + C2157 * C427) *
               C2159 +
           (C2163 * C396 + C50543 * C410 + C2162 * C397 + C2157 * C411) *
               C2164) *
              C50700 * C1711 +
          ((C2162 * C398 + C2157 * C412 + C2163 * C399 + C50543 * C413) *
               C2164 +
           (C2162 * C416 + C2157 * C428 + C2163 * C417 + C50543 * C429) *
               C2159 +
           (C3566 + C3567) * C2165 + (C3568 + C3569) * C2160 +
           (C3570 + C3571) * C2166 + (C3572 + C3573) * C2161) *
              C50700 * C1712 -
          ((C2163 * C4475 + C50543 * C4483 + C2162 * C4476 + C2157 * C4484) *
               C2161 +
           (C2163 * C4471 + C50543 * C4477 + C2162 * C4472 + C2157 * C4478) *
               C2166 +
           (C2163 * C4479 + C50543 * C4485 + C2162 * C4480 + C2157 * C4486) *
               C2160 +
           (C2163 * C4473 + C50543 * C4481 + C2162 * C4474 + C2157 * C4482) *
               C2165 +
           (C2163 * C1720 + C50543 * C1728 + C2162 * C1721 + C2157 * C1729) *
               C2159 +
           (C2163 * C1716 + C50543 * C1724 + C2162 * C1717 + C2157 * C1725) *
               C2164) *
              C50700 * C1713) *
         C50587 * C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50688) *
               C50700 * C50876 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50688 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50700 * C50877 +
           ((C117 * C398 + C105 * C412 + C118 * C399 + C106 * C413 +
             C119 * C400 + C107 * C414 + C120 * C401 + C108 * C415) *
                C121 +
            (C117 * C416 + C105 * C428 + C118 * C417 + C106 * C429 +
             C119 * C418 + C107 * C430 + C120 * C419 + C108 * C431) *
                C50688) *
               C50700 * C1960) *
              C50587 * C50821 +
          (((C117 * C396 + C105 * C410 + C118 * C395 + C106 * C409 +
             C119 * C394 + C107 * C408 + C120 * C402 + C108 * C420) *
                C121 +
            (C117 * C406 + C105 * C426 + C118 * C405 + C106 * C425 +
             C119 * C404 + C107 * C424 + C120 * C421 + C108 * C432) *
                C50688) *
               C50700 * C50877 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50688 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50700 * C50876 -
           ((C120 * C422 + C108 * C433 + C119 * C419 + C107 * C431 +
             C118 * C418 + C106 * C430 + C117 * C417 + C105 * C429) *
                C50688 +
            (C120 * C403 + C108 * C423 + C119 * C401 + C107 * C415 +
             C118 * C400 + C106 * C414 + C117 * C399 + C105 * C413) *
                C121) *
               C50700 * C1960) *
              C50587 * C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                C2164 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                C2159 +
            (C2374 + C2375) * C2165 + (C2376 + C2377) * C2160 + C2398 * C2166 +
            C2399 * C2161) *
               C50700 * C50876 -
           (C4068 * C2161 + C4069 * C2166 + (C3118 + C3119) * C2160 +
            (C3120 + C3121) * C2165 +
            (C2163 * C406 + C50543 * C426 + C2162 * C407 + C2157 * C427) *
                C2159 +
            (C2163 * C396 + C50543 * C410 + C2162 * C397 + C2157 * C411) *
                C2164) *
               C50700 * C50877 +
           ((C2162 * C398 + C2157 * C412 + C2163 * C399 + C50543 * C413) *
                C2164 +
            (C2162 * C416 + C2157 * C428 + C2163 * C417 + C50543 * C429) *
                C2159 +
            (C3566 + C3567) * C2165 + (C3568 + C3569) * C2160 +
            (C3570 + C3571) * C2166 + (C3572 + C3573) * C2161) *
               C50700 * C1960) *
              C50587 * C50821 +
          (((C2162 * C396 + C2157 * C410 + C2163 * C395 + C50543 * C409) *
                C2164 +
            (C2162 * C406 + C2157 * C426 + C2163 * C405 + C50543 * C425) *
                C2159 +
            (C3122 + C3123) * C2165 + (C3124 + C3125) * C2160 +
            (C3126 + C3127) * C2166 + (C3128 + C3129) * C2161) *
               C50700 * C50877 -
           (C2400 * C2161 + C2401 * C2166 + (C2389 + C2388) * C2160 +
            (C2387 + C2386) * C2165 +
            (C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                C2159 +
            (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                C2164) *
               C50700 * C50876 -
           ((C2163 * C2554 + C50543 * C2558 + C2162 * C2553 + C2157 * C2557) *
                C2161 +
            (C2163 * C2549 + C50543 * C2555 + C2162 * C2548 + C2157 * C2551) *
                C2166 +
            (C2163 * C1088 + C50543 * C1096 + C2162 * C1089 + C2157 * C1097) *
                C2160 +
            (C2163 * C1084 + C50543 * C1092 + C2162 * C1085 + C2157 * C1093) *
                C2165 +
            (C2163 * C418 + C50543 * C430 + C2162 * C417 + C2157 * C429) *
                C2159 +
            (C2163 * C400 + C50543 * C414 + C2162 * C399 + C2157 * C413) *
                C2164) *
               C50700 * C1960) *
              C50587 * C50574)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50688) *
               C50700 * C1544 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50688 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50700 * C50667) *
              C50587 * C895 +
          (((C117 * C396 + C105 * C410 + C118 * C395 + C106 * C409 +
             C119 * C394 + C107 * C408 + C120 * C402 + C108 * C420) *
                C121 +
            (C117 * C406 + C105 * C426 + C118 * C405 + C106 * C425 +
             C119 * C404 + C107 * C424 + C120 * C421 + C108 * C432) *
                C50688) *
               C50700 * C50667 -
           ((C120 * C137 + C108 * C147 + C119 * C136 + C107 * C146 +
             C118 * C135 + C106 * C145 + C117 * C134 + C105 * C144) *
                C50688 +
            (C120 * C126 + C108 * C138 + C119 * C125 + C107 * C132 +
             C118 * C124 + C106 * C131 + C117 * C123 + C105 * C130) *
                C121) *
               C50700 * C1544) *
              C50587 * C896 +
          (((C117 * C124 + C105 * C131 + C118 * C125 + C106 * C132 +
             C119 * C126 + C107 * C138 + C120 * C127 + C108 * C139) *
                C121 +
            (C117 * C135 + C105 * C145 + C118 * C136 + C106 * C146 +
             C119 * C137 + C107 * C147 + C120 * C140 + C108 * C148) *
                C50688) *
               C50700 * C1544 -
           ((C120 * C642 + C108 * C644 + C119 * C421 + C107 * C432 +
             C118 * C404 + C106 * C424 + C117 * C405 + C105 * C425) *
                C50688 +
            (C120 * C641 + C108 * C643 + C119 * C402 + C107 * C420 +
             C118 * C394 + C106 * C408 + C117 * C395 + C105 * C409) *
                C121) *
               C50700 * C50667) *
              C50587 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C122 + C105 * C129 + C118 * C123 + C106 * C130 +
             C119 * C124 + C107 * C131 + C120 * C125 + C108 * C132) *
                C121 +
            (C117 * C133 + C105 * C143 + C118 * C134 + C106 * C144 +
             C119 * C135 + C107 * C145 + C120 * C136 + C108 * C146) *
                C50688) *
               C50700 * C1544 -
           ((C120 * C404 + C108 * C424 + C119 * C405 + C107 * C425 +
             C118 * C406 + C106 * C426 + C117 * C407 + C105 * C427) *
                C50688 +
            (C120 * C394 + C108 * C408 + C119 * C395 + C107 * C409 +
             C118 * C396 + C106 * C410 + C117 * C397 + C105 * C411) *
                C121) *
               C50700 * C50667) *
              C248 +
          (((C117 * C775 + C105 * C780 + C118 * C776 + C106 * C781 +
             C119 * C777 + C107 * C782 + C120 * C778 + C108 * C783) *
                C121 +
            (C117 * C784 + C105 * C790 + C118 * C785 + C106 * C791 +
             C119 * C786 + C107 * C792 + C120 * C787 + C108 * C793) *
                C50688) *
               C50700 * C50667 -
           ((C120 * C263 + C108 * C283 + C119 * C264 + C107 * C284 +
             C118 * C265 + C106 * C285 + C117 * C266 + C105 * C286) *
                C50688 +
            (C120 * C253 + C108 * C267 + C119 * C254 + C107 * C268 +
             C118 * C255 + C106 * C269 + C117 * C256 + C105 * C270) *
                C121) *
               C50700 * C1544) *
              C249 +
          (((C117 * C257 + C105 * C271 + C118 * C258 + C106 * C272 +
             C119 * C259 + C107 * C273 + C120 * C260 + C108 * C274) *
                C121 +
            (C117 * C275 + C105 * C287 + C118 * C276 + C106 * C288 +
             C119 * C277 + C107 * C289 + C120 * C278 + C108 * C290) *
                C50688) *
               C50700 * C1544 -
           ((C120 * C1434 + C108 * C1442 + C119 * C1435 + C107 * C1443 +
             C118 * C1436 + C106 * C1444 + C117 * C1437 + C105 * C1445) *
                C50688 +
            (C120 * C1430 + C108 * C1438 + C119 * C1431 + C107 * C1439 +
             C118 * C1432 + C106 * C1440 + C117 * C1433 + C105 * C1441) *
                C121) *
               C50700 * C50667) *
              C250) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                C2164 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                C2159 +
            (C2374 + C2375) * C2165 + (C2376 + C2377) * C2160 + C2398 * C2166 +
            C2399 * C2161) *
               C50700 * C1544 -
           (C4068 * C2161 + C4069 * C2166 + (C3118 + C3119) * C2160 +
            (C3120 + C3121) * C2165 +
            (C2163 * C406 + C50543 * C426 + C2162 * C407 + C2157 * C427) *
                C2159 +
            (C2163 * C396 + C50543 * C410 + C2162 * C397 + C2157 * C411) *
                C2164) *
               C50700 * C50667) *
              C50587 * C895 +
          (((C2162 * C396 + C2157 * C410 + C2163 * C395 + C50543 * C409) *
                C2164 +
            (C2162 * C406 + C2157 * C426 + C2163 * C405 + C50543 * C425) *
                C2159 +
            (C3122 + C3123) * C2165 + (C3124 + C3125) * C2160 +
            (C3126 + C3127) * C2166 + (C3128 + C3129) * C2161) *
               C50700 * C50667 -
           (C2400 * C2161 + C2401 * C2166 + (C2389 + C2388) * C2160 +
            (C2387 + C2386) * C2165 +
            (C2163 * C135 + C50543 * C145 + C2162 * C134 + C2157 * C144) *
                C2159 +
            (C2163 * C124 + C50543 * C131 + C2162 * C123 + C2157 * C130) *
                C2164) *
               C50700 * C1544) *
              C50587 * C896 +
          (((C2162 * C124 + C2157 * C131 + C2163 * C125 + C50543 * C132) *
                C2164 +
            (C2162 * C135 + C2157 * C145 + C2163 * C136 + C50543 * C146) *
                C2159 +
            (C2722 + C2723) * C2165 + (C2724 + C2725) * C2160 +
            (C2726 + C2727) * C2166 + (C2728 + C2729) * C2161) *
               C50700 * C1544 -
           ((C2163 * C1434 + C50543 * C1442 + C2162 * C1435 + C2157 * C1443) *
                C2161 +
            (C2163 * C1430 + C50543 * C1438 + C2162 * C1431 + C2157 * C1439) *
                C2166 +
            (C2163 * C787 + C50543 * C793 + C2162 * C786 + C2157 * C792) *
                C2160 +
            (C2163 * C778 + C50543 * C783 + C2162 * C777 + C2157 * C782) *
                C2165 +
            (C2163 * C404 + C50543 * C424 + C2162 * C405 + C2157 * C425) *
                C2159 +
            (C2163 * C394 + C50543 * C408 + C2162 * C395 + C2157 * C409) *
                C2164) *
               C50700 * C50667) *
              C50587 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2162 * C122 + C2157 * C129 + C2163 * C123 + C50543 * C130) *
                C2164 +
            (C2162 * C133 + C2157 * C143 + C2163 * C134 + C50543 * C144) *
                C2159 +
            (C2374 + C2375) * C2165 + (C2376 + C2377) * C2160 + C2398 * C2166 +
            C2399 * C2161) *
               C50700 * C1544 -
           (C4068 * C2161 + C4069 * C2166 + (C3118 + C3119) * C2160 +
            (C3120 + C3121) * C2165 +
            (C2163 * C406 + C50543 * C426 + C2162 * C407 + C2157 * C427) *
                C2159 +
            (C2163 * C396 + C50543 * C410 + C2162 * C397 + C2157 * C411) *
                C2164) *
               C50700 * C50667) *
              C248 +
          (((C3121 + C3120) * C2164 + (C3119 + C3118) * C2159 +
            (C3117 + C3116) * C2165 + (C3115 + C3114) * C2160 +
            (C4078 + C4079) * C2166 + (C4080 + C4081) * C2161) *
               C50700 * C50667 -
           (C3382 * C2161 + C3383 * C2166 + (C2381 + C2380) * C2160 +
            (C2379 + C2378) * C2165 + (C2377 + C2376) * C2159 +
            (C2375 + C2374) * C2164) *
               C50700 * C1544) *
              C249 +
          ((C2398 * C2164 + C2399 * C2159 + (C2385 + C2384) * C2165 +
            (C2383 + C2382) * C2160 + (C3392 + C3393) * C2166 +
            (C3394 + C3395) * C2161) *
               C50700 * C1544 -
           ((C2163 * C4061 + C50543 * C4065 + C2162 * C4062 + C2157 * C4066) *
                C2161 +
            (C2163 * C4059 + C50543 * C4063 + C2162 * C4060 + C2157 * C4064) *
                C2166 +
            (C4081 + C4080) * C2160 + (C4079 + C4078) * C2165 + C4068 * C2159 +
            C4069 * C2164) *
               C50700 * C50667) *
              C250) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                C24519 +
            (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                C50878 +
            (C24717 + C24718) * C24520 + (C24719 + C24720) * C50879 +
            C24741 * C24521 + C24742 * C24516) *
               C50700 * C50603 * C50829 -
           ((C24725 + C24726) * C24516 + (C24727 + C24728) * C24521 +
            (C24724 + C24723) * C50879 + (C24722 + C24721) * C24520 +
            (C24720 + C24719) * C50878 + (C24718 + C24717) * C24519) *
               C50700 * C50603 * C50639) *
              C50872 +
          (((C24729 + C24730) * C24519 + (C24731 + C24732) * C50878 +
            (C24733 + C24734) * C24520 + (C24735 + C24736) * C50879 +
            (C24737 + C24738) * C24521 + (C24739 + C24740) * C24516) *
               C50700 * C50603 * C50639 -
           (C24743 * C24516 + C24744 * C24521 + (C24732 + C24731) * C50879 +
            (C24730 + C24729) * C24520 +
            (C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                C50878 +
            (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                C24519) *
               C50700 * C50603 * C50829) *
              C50873 +
          (((C49747 * C124 + C50814 * C131 + C49740 * C125 + C50543 * C132) *
                C24519 +
            (C49747 * C135 + C50814 * C145 + C49740 * C136 + C50543 * C146) *
                C50878 +
            (C25053 + C25054) * C24520 + (C25055 + C25056) * C50879 +
            (C25057 + C25058) * C24521 + (C25059 + C25060) * C24516) *
               C50700 * C50603 * C50829 -
           ((C49740 * C973 + C50543 * C981 + C49747 * C974 + C50814 * C982) *
                C24516 +
            (C49740 * C969 + C50543 * C977 + C49747 * C970 + C50814 * C978) *
                C24521 +
            (C25060 + C25059) * C50879 + (C25058 + C25057) * C24520 +
            (C25056 + C25055) * C50878 + (C25054 + C25053) * C24519) *
               C50700 * C50603 * C50639) *
              C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C24519 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C50878 +
             (C24717 + C24718) * C24520 + (C24719 + C24720) * C50879 +
             C24741 * C24521 + C24742 * C24516) *
                C50700 * C50830 -
            ((C25433 + C25434) * C24516 + (C25435 + C25436) * C24521 +
             (C25437 + C25438) * C50879 + (C25439 + C25440) * C24520 +
             (C49740 * C406 + C50543 * C426 + C49747 * C407 + C50814 * C427) *
                 C50878 +
             (C49740 * C396 + C50543 * C410 + C49747 * C397 + C50814 * C411) *
                 C24519) *
                C50700 * C50667) *
               C50829 +
           (((C25440 + C25439) * C24519 + (C25438 + C25437) * C50878 +
             (C25436 + C25435) * C24520 + (C25434 + C25433) * C50879 +
             (C49747 * C3069 + C50814 * C3072 + C49740 * C3070 +
              C50543 * C3073) *
                 C24521 +
             (C49747 * C3074 + C50814 * C3078 + C49740 * C3075 +
              C50543 * C3079) *
                 C24516) *
                C50700 * C50667 -
            ((C24725 + C24726) * C24516 + (C24727 + C24728) * C24521 +
             (C24724 + C24723) * C50879 + (C24722 + C24721) * C24520 +
             (C24720 + C24719) * C50878 + (C24718 + C24717) * C24519) *
                C50700 * C50830) *
               C50639) *
              C251 +
          ((((C49747 * C396 + C50814 * C410 + C49740 * C395 + C50543 * C409) *
                 C24519 +
             (C49747 * C406 + C50814 * C426 + C49740 * C405 + C50543 * C425) *
                 C50878 +
             (C25441 + C25442) * C24520 + (C25443 + C25444) * C50879 +
             (C25445 + C25446) * C24521 + (C25447 + C25448) * C24516) *
                C50700 * C50667 -
            (C24743 * C24516 + C24744 * C24521 + (C24732 + C24731) * C50879 +
             (C24730 + C24729) * C24520 +
             (C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                 C50878 +
             (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                 C24519) *
                C50700 * C50830) *
               C50829 +
           (((C24729 + C24730) * C24519 + (C24731 + C24732) * C50878 +
             (C24733 + C24734) * C24520 + (C24735 + C24736) * C50879 +
             (C24737 + C24738) * C24521 + (C24739 + C24740) * C24516) *
                C50700 * C50830 -
            ((C49740 * C3076 + C50543 * C3080 + C49747 * C3075 +
              C50814 * C3079) *
                 C24516 +
             (C49740 * C3071 + C50543 * C3077 + C49747 * C3070 +
              C50814 * C3073) *
                 C24521 +
             (C25448 + C25447) * C50879 + (C25446 + C25445) * C24520 +
             (C25444 + C25443) * C50878 + (C25442 + C25441) * C24519) *
                C50700 * C50667) *
               C50639) *
              C50574)) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                C24519 +
            (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                C50878 +
            (C24717 + C24718) * C24520 + (C24719 + C24720) * C50879 +
            C24741 * C24521 + C24742 * C24516) *
               C50700 * C50603 * C248 -
           ((C24725 + C24726) * C24516 + (C24727 + C24728) * C24521 +
            (C24724 + C24723) * C50879 + (C24722 + C24721) * C24520 +
            (C24720 + C24719) * C50878 + (C24718 + C24717) * C24519) *
               C50700 * C50603 * C249 +
           (C24741 * C24519 + C24742 * C50878 + (C24728 + C24727) * C24520 +
            (C24726 + C24725) * C50879 +
            (C49747 * C2313 + C50814 * C2316 + C49740 * C2314 +
             C50543 * C2317) *
                C24521 +
            (C49747 * C2318 + C50814 * C2322 + C49740 * C2319 +
             C50543 * C2323) *
                C24516) *
               C50700 * C50603 * C250) *
              C251 +
          (((C24729 + C24730) * C24519 + (C24731 + C24732) * C50878 +
            (C24733 + C24734) * C24520 + (C24735 + C24736) * C50879 +
            (C24737 + C24738) * C24521 + (C24739 + C24740) * C24516) *
               C50700 * C50603 * C249 -
           (C24743 * C24516 + C24744 * C24521 + (C24732 + C24731) * C50879 +
            (C24730 + C24729) * C24520 +
            (C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                C50878 +
            (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                C24519) *
               C50700 * C50603 * C248 -
           ((C49740 * C2320 + C50543 * C2324 + C49747 * C2319 +
             C50814 * C2323) *
                C24516 +
            (C49740 * C2315 + C50543 * C2321 + C49747 * C2314 +
             C50814 * C2317) *
                C24521 +
            (C24740 + C24739) * C50879 + (C24738 + C24737) * C24520 +
            C24743 * C50878 + C24744 * C24519) *
               C50700 * C50603 * C250) *
              C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
               C24519 +
           (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
               C50878 +
           (C49747 * C256 + C50814 * C270 + C49740 * C255 + C50543 * C269) *
               C24520 +
           (C49747 * C266 + C50814 * C286 + C49740 * C265 + C50543 * C285) *
               C50879 +
           (C49747 * C257 + C50814 * C271 + C49740 * C258 + C50543 * C272) *
               C24521 +
           (C49747 * C275 + C50814 * C287 + C49740 * C276 + C50543 * C288) *
               C24516) *
              C50700 * C50603 * C50587 * C113 -
          ((C49740 * C277 + C50543 * C289 + C49747 * C276 + C50814 * C288) *
               C24516 +
           (C49740 * C259 + C50543 * C273 + C49747 * C258 + C50814 * C272) *
               C24521 +
           (C49740 * C264 + C50543 * C284 + C49747 * C265 + C50814 * C285) *
               C50879 +
           (C49740 * C254 + C50543 * C268 + C49747 * C255 + C50814 * C269) *
               C24520 +
           (C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
               C50878 +
           (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
               C24519) *
              C50700 * C50603 * C50587 * C114 +
          ((C49747 * C124 + C50814 * C131 + C49740 * C125 + C50543 * C132) *
               C24519 +
           (C49747 * C135 + C50814 * C145 + C49740 * C136 + C50543 * C146) *
               C50878 +
           (C49747 * C254 + C50814 * C268 + C49740 * C253 + C50543 * C267) *
               C24520 +
           (C49747 * C264 + C50814 * C284 + C49740 * C263 + C50543 * C283) *
               C50879 +
           (C49747 * C259 + C50814 * C273 + C49740 * C260 + C50543 * C274) *
               C24521 +
           (C49747 * C277 + C50814 * C289 + C49740 * C278 + C50543 * C290) *
               C24516) *
              C50700 * C50603 * C50587 * C115 -
          ((C49740 * C281 + C50543 * C292 + C49747 * C278 + C50814 * C290) *
               C24516 +
           (C49740 * C262 + C50543 * C282 + C49747 * C260 + C50814 * C274) *
               C24521 +
           (C49740 * C280 + C50543 * C291 + C49747 * C263 + C50814 * C283) *
               C50879 +
           (C49740 * C261 + C50543 * C279 + C49747 * C253 + C50814 * C267) *
               C24520 +
           (C49740 * C137 + C50543 * C147 + C49747 * C136 + C50814 * C146) *
               C50878 +
           (C49740 * C126 + C50543 * C138 + C49747 * C125 + C50814 * C132) *
               C24519) *
              C50700 * C50603 * C50587 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                C24519 +
            (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                C50878 +
            (C24717 + C24718) * C24520 + (C24719 + C24720) * C50879 +
            C24741 * C24521 + C24742 * C24516) *
               C50700 * C391 -
           ((C49740 * C1436 + C50543 * C1444 + C49747 * C1437 +
             C50814 * C1445) *
                C24516 +
            (C49740 * C1432 + C50543 * C1440 + C49747 * C1433 +
             C50814 * C1441) *
                C24521 +
            (C49740 * C785 + C50543 * C791 + C49747 * C784 + C50814 * C790) *
                C50879 +
            (C49740 * C776 + C50543 * C781 + C49747 * C775 + C50814 * C780) *
                C24520 +
            (C49740 * C406 + C50543 * C426 + C49747 * C407 + C50814 * C427) *
                C50878 +
            (C49740 * C396 + C50543 * C410 + C49747 * C397 + C50814 * C411) *
                C24519) *
               C50700 * C392 +
           ((C49747 * C398 + C50814 * C412 + C49740 * C399 + C50543 * C413) *
                C24519 +
            (C49747 * C416 + C50814 * C428 + C49740 * C417 + C50543 * C429) *
                C50878 +
            (C49747 * C1086 + C50814 * C1094 + C49740 * C1085 +
             C50543 * C1093) *
                C24520 +
            (C49747 * C1090 + C50814 * C1098 + C49740 * C1089 +
             C50543 * C1097) *
                C50879 +
            (C49747 * C2547 + C50814 * C2550 + C49740 * C2548 +
             C50543 * C2551) *
                C24521 +
            (C49747 * C2552 + C50814 * C2556 + C49740 * C2553 +
             C50543 * C2557) *
                C24516) *
               C50700 * C393) *
              C50587 * C251 +
          (((C49747 * C396 + C50814 * C410 + C49740 * C395 + C50543 * C409) *
                C24519 +
            (C49747 * C406 + C50814 * C426 + C49740 * C405 + C50543 * C425) *
                C50878 +
            (C49747 * C776 + C50814 * C781 + C49740 * C777 + C50543 * C782) *
                C24520 +
            (C49747 * C785 + C50814 * C791 + C49740 * C786 + C50543 * C792) *
                C50879 +
            (C49747 * C1432 + C50814 * C1440 + C49740 * C1431 +
             C50543 * C1439) *
                C24521 +
            (C49747 * C1436 + C50814 * C1444 + C49740 * C1435 +
             C50543 * C1443) *
                C24516) *
               C50700 * C392 -
           (C24743 * C24516 + C24744 * C24521 + (C24732 + C24731) * C50879 +
            (C24730 + C24729) * C24520 +
            (C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                C50878 +
            (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                C24519) *
               C50700 * C391 -
           ((C49740 * C2554 + C50543 * C2558 + C49747 * C2553 +
             C50814 * C2557) *
                C24516 +
            (C49740 * C2549 + C50543 * C2555 + C49747 * C2548 +
             C50814 * C2551) *
                C24521 +
            (C49740 * C1088 + C50543 * C1096 + C49747 * C1089 +
             C50814 * C1097) *
                C50879 +
            (C49740 * C1084 + C50543 * C1092 + C49747 * C1085 +
             C50814 * C1093) *
                C24520 +
            (C49740 * C418 + C50543 * C430 + C49747 * C417 + C50814 * C429) *
                C50878 +
            (C49740 * C400 + C50543 * C414 + C49747 * C399 + C50814 * C413) *
                C24519) *
               C50700 * C393) *
              C50587 * C50574)) /
            (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                C24519 +
            (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                C50878 +
            (C24717 + C24718) * C24520 + (C24719 + C24720) * C50879 +
            C24741 * C24521 + C24742 * C24516) *
               C50700 * C50830 -
           ((C49740 * C1436 + C50543 * C1444 + C49747 * C1437 +
             C50814 * C1445) *
                C24516 +
            (C49740 * C1432 + C50543 * C1440 + C49747 * C1433 +
             C50814 * C1441) *
                C24521 +
            (C49740 * C785 + C50543 * C791 + C49747 * C784 + C50814 * C790) *
                C50879 +
            (C49740 * C776 + C50543 * C781 + C49747 * C775 + C50814 * C780) *
                C24520 +
            (C49740 * C406 + C50543 * C426 + C49747 * C407 + C50814 * C427) *
                C50878 +
            (C49740 * C396 + C50543 * C410 + C49747 * C397 + C50814 * C411) *
                C24519) *
               C50700 * C50667) *
              C50587 * C50872 +
          (((C49747 * C396 + C50814 * C410 + C49740 * C395 + C50543 * C409) *
                C24519 +
            (C49747 * C406 + C50814 * C426 + C49740 * C405 + C50543 * C425) *
                C50878 +
            (C49747 * C776 + C50814 * C781 + C49740 * C777 + C50543 * C782) *
                C24520 +
            (C49747 * C785 + C50814 * C791 + C49740 * C786 + C50543 * C792) *
                C50879 +
            (C49747 * C1432 + C50814 * C1440 + C49740 * C1431 +
             C50543 * C1439) *
                C24521 +
            (C49747 * C1436 + C50814 * C1444 + C49740 * C1435 +
             C50543 * C1443) *
                C24516) *
               C50700 * C50667 -
           (C24743 * C24516 + C24744 * C24521 + (C24732 + C24731) * C50879 +
            (C24730 + C24729) * C24520 +
            (C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                C50878 +
            (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                C24519) *
               C50700 * C50830) *
              C50587 * C50873 +
          (((C49747 * C124 + C50814 * C131 + C49740 * C125 + C50543 * C132) *
                C24519 +
            (C49747 * C135 + C50814 * C145 + C49740 * C136 + C50543 * C146) *
                C50878 +
            (C25053 + C25054) * C24520 + (C25055 + C25056) * C50879 +
            (C25057 + C25058) * C24521 + (C25059 + C25060) * C24516) *
               C50700 * C50830 -
           ((C49740 * C1434 + C50543 * C1442 + C49747 * C1435 +
             C50814 * C1443) *
                C24516 +
            (C49740 * C1430 + C50543 * C1438 + C49747 * C1431 +
             C50814 * C1439) *
                C24521 +
            (C49740 * C787 + C50543 * C793 + C49747 * C786 + C50814 * C792) *
                C50879 +
            (C49740 * C778 + C50543 * C783 + C49747 * C777 + C50814 * C782) *
                C24520 +
            (C49740 * C404 + C50543 * C424 + C49747 * C405 + C50814 * C425) *
                C50878 +
            (C49740 * C394 + C50543 * C408 + C49747 * C395 + C50814 * C409) *
                C24519) *
               C50700 * C50667) *
              C50587 * C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
               C24519 +
           (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
               C50878 +
           (C49747 * C256 + C50814 * C270 + C49740 * C255 + C50543 * C269) *
               C24520 +
           (C49747 * C266 + C50814 * C286 + C49740 * C265 + C50543 * C285) *
               C50879 +
           (C49747 * C257 + C50814 * C271 + C49740 * C258 + C50543 * C272) *
               C24521 +
           (C49747 * C275 + C50814 * C287 + C49740 * C276 + C50543 * C288) *
               C24516) *
              C50700 * C50603 * C50587 * C113 -
          ((C49740 * C277 + C50543 * C289 + C49747 * C276 + C50814 * C288) *
               C24516 +
           (C49740 * C259 + C50543 * C273 + C49747 * C258 + C50814 * C272) *
               C24521 +
           (C49740 * C264 + C50543 * C284 + C49747 * C265 + C50814 * C285) *
               C50879 +
           (C49740 * C254 + C50543 * C268 + C49747 * C255 + C50814 * C269) *
               C24520 +
           (C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
               C50878 +
           (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
               C24519) *
              C50700 * C50603 * C50587 * C114 +
          ((C49747 * C124 + C50814 * C131 + C49740 * C125 + C50543 * C132) *
               C24519 +
           (C49747 * C135 + C50814 * C145 + C49740 * C136 + C50543 * C146) *
               C50878 +
           (C49747 * C254 + C50814 * C268 + C49740 * C253 + C50543 * C267) *
               C24520 +
           (C49747 * C264 + C50814 * C284 + C49740 * C263 + C50543 * C283) *
               C50879 +
           (C49747 * C259 + C50814 * C273 + C49740 * C260 + C50543 * C274) *
               C24521 +
           (C49747 * C277 + C50814 * C289 + C49740 * C278 + C50543 * C290) *
               C24516) *
              C50700 * C50603 * C50587 * C115 -
          ((C49740 * C281 + C50543 * C292 + C49747 * C278 + C50814 * C290) *
               C24516 +
           (C49740 * C262 + C50543 * C282 + C49747 * C260 + C50814 * C274) *
               C24521 +
           (C49740 * C280 + C50543 * C291 + C49747 * C263 + C50814 * C283) *
               C50879 +
           (C49740 * C261 + C50543 * C279 + C49747 * C253 + C50814 * C267) *
               C24520 +
           (C49740 * C137 + C50543 * C147 + C49747 * C136 + C50814 * C146) *
               C50878 +
           (C49740 * C126 + C50543 * C138 + C49747 * C125 + C50814 * C132) *
               C24519) *
              C50700 * C50603 * C50587 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                C24519 +
            (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                C50878 +
            (C24717 + C24718) * C24520 + (C24719 + C24720) * C50879 +
            C24741 * C24521 + C24742 * C24516) *
               C50700 * C50603 * C248 -
           ((C24725 + C24726) * C24516 + (C24727 + C24728) * C24521 +
            (C24724 + C24723) * C50879 + (C24722 + C24721) * C24520 +
            (C24720 + C24719) * C50878 + (C24718 + C24717) * C24519) *
               C50700 * C50603 * C249 +
           (C24741 * C24519 + C24742 * C50878 + (C24728 + C24727) * C24520 +
            (C24726 + C24725) * C50879 +
            (C49747 * C2313 + C50814 * C2316 + C49740 * C2314 +
             C50543 * C2317) *
                C24521 +
            (C49747 * C2318 + C50814 * C2322 + C49740 * C2319 +
             C50543 * C2323) *
                C24516) *
               C50700 * C50603 * C250) *
              C251 +
          (((C24729 + C24730) * C24519 + (C24731 + C24732) * C50878 +
            (C24733 + C24734) * C24520 + (C24735 + C24736) * C50879 +
            (C24737 + C24738) * C24521 + (C24739 + C24740) * C24516) *
               C50700 * C50603 * C249 -
           (C24743 * C24516 + C24744 * C24521 + (C24732 + C24731) * C50879 +
            (C24730 + C24729) * C24520 +
            (C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                C50878 +
            (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                C24519) *
               C50700 * C50603 * C248 -
           ((C49740 * C2320 + C50543 * C2324 + C49747 * C2319 +
             C50814 * C2323) *
                C24516 +
            (C49740 * C2315 + C50543 * C2321 + C49747 * C2314 +
             C50814 * C2317) *
                C24521 +
            (C24740 + C24739) * C50879 + (C24738 + C24737) * C24520 +
            C24743 * C50878 + C24744 * C24519) *
               C50700 * C50603 * C250) *
              C50574)) /
            (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                C24519 +
            (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                C50878 +
            (C24717 + C24718) * C24520 + (C24719 + C24720) * C50879 +
            C24741 * C24521 + C24742 * C24516) *
               C50700 * C50603 * C50874 -
           (C25693 * C24516 + C25694 * C24521 + (C24724 + C24723) * C50879 +
            (C24722 + C24721) * C24520 + (C24720 + C24719) * C50878 +
            (C24718 + C24717) * C24519) *
               C50700 * C50603 * C50875 +
           (C24741 * C24519 + C24742 * C50878 + (C24728 + C24727) * C24520 +
            (C24726 + C24725) * C50879 + (C25703 + C25704) * C24521 +
            (C25705 + C25706) * C24516) *
               C50700 * C50603 * C1199) *
              C50821 +
          (((C24729 + C24730) * C24519 + (C24731 + C24732) * C50878 +
            (C24733 + C24734) * C24520 + (C24735 + C24736) * C50879 +
            (C24737 + C24738) * C24521 + (C24739 + C24740) * C24516) *
               C50700 * C50603 * C50875 -
           (C24743 * C24516 + C24744 * C24521 + (C24732 + C24731) * C50879 +
            (C24730 + C24729) * C24520 +
            (C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                C50878 +
            (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                C24519) *
               C50700 * C50603 * C50874 -
           ((C49740 * C2320 + C50543 * C2324 + C49747 * C2319 +
             C50814 * C2323) *
                C24516 +
            (C49740 * C2315 + C50543 * C2321 + C49747 * C2314 +
             C50814 * C2317) *
                C24521 +
            (C24740 + C24739) * C50879 + (C24738 + C24737) * C24520 +
            C24743 * C50878 + C24744 * C24519) *
               C50700 * C50603 * C1199) *
              C50574)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                C24519 +
            (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                C50878 +
            (C24717 + C24718) * C24520 + (C24719 + C24720) * C50879 +
            C24741 * C24521 + C24742 * C24516) *
               C50700 * C50830 -
           (C26363 * C24516 + C26364 * C24521 + (C25437 + C25438) * C50879 +
            (C25439 + C25440) * C24520 +
            (C49740 * C406 + C50543 * C426 + C49747 * C407 + C50814 * C427) *
                C50878 +
            (C49740 * C396 + C50543 * C410 + C49747 * C397 + C50814 * C411) *
                C24519) *
               C50700 * C50667) *
              C50874 +
          (((C25440 + C25439) * C24519 + (C25438 + C25437) * C50878 +
            (C25436 + C25435) * C24520 + (C25434 + C25433) * C50879 +
            (C26373 + C26374) * C24521 + (C26375 + C26376) * C24516) *
               C50700 * C50667 -
           (C25693 * C24516 + C25694 * C24521 + (C24724 + C24723) * C50879 +
            (C24722 + C24721) * C24520 + (C24720 + C24719) * C50878 +
            (C24718 + C24717) * C24519) *
               C50700 * C50830) *
              C50875 +
          ((C24741 * C24519 + C24742 * C50878 + (C24728 + C24727) * C24520 +
            (C24726 + C24725) * C50879 + (C25703 + C25704) * C24521 +
            (C25705 + C25706) * C24516) *
               C50700 * C50830 -
           ((C49740 * C4061 + C50543 * C4065 + C49747 * C4062 +
             C50814 * C4066) *
                C24516 +
            (C49740 * C4059 + C50543 * C4063 + C49747 * C4060 +
             C50814 * C4064) *
                C24521 +
            (C26376 + C26375) * C50879 + (C26374 + C26373) * C24520 +
            C26363 * C50878 + C26364 * C24519) *
               C50700 * C50667) *
              C1199) *
         C50568) /
        (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
               C24519 +
           (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
               C50878 +
           (C24717 + C24718) * C24520 + (C24719 + C24720) * C50879 +
           C24741 * C24521 + C24742 * C24516) *
              C50700 * C50603 * C964 -
          (C25693 * C24516 + C25694 * C24521 + (C24724 + C24723) * C50879 +
           (C24722 + C24721) * C24520 + (C24720 + C24719) * C50878 +
           (C24718 + C24717) * C24519) *
              C50700 * C50603 * C965 +
          (C24741 * C24519 + C24742 * C50878 + (C24728 + C24727) * C24520 +
           (C24726 + C24725) * C50879 + (C25703 + C25704) * C24521 +
           (C25705 + C25706) * C24516) *
              C50700 * C50603 * C966 -
          ((C49740 * C3375 + C50543 * C3379 + C49747 * C3376 + C50814 * C3380) *
               C24516 +
           (C49740 * C3373 + C50543 * C3377 + C49747 * C3374 + C50814 * C3378) *
               C24521 +
           (C25706 + C25705) * C50879 + (C25704 + C25703) * C24520 +
           C25693 * C50878 + C25694 * C24519) *
              C50700 * C50603 * C967) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                C24519 +
            (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                C50878 +
            (C24717 + C24718) * C24520 + (C24719 + C24720) * C50879 +
            C24741 * C24521 + C24742 * C24516) *
               C50700 * C50603 * C893 -
           ((C24725 + C24726) * C24516 + (C24727 + C24728) * C24521 +
            (C24724 + C24723) * C50879 + (C24722 + C24721) * C24520 +
            (C24720 + C24719) * C50878 + (C24718 + C24717) * C24519) *
               C50700 * C50603 * C50639) *
              C895 +
          (((C24729 + C24730) * C24519 + (C24731 + C24732) * C50878 +
            (C24733 + C24734) * C24520 + (C24735 + C24736) * C50879 +
            (C24737 + C24738) * C24521 + (C24739 + C24740) * C24516) *
               C50700 * C50603 * C50639 -
           (C24743 * C24516 + C24744 * C24521 + (C24732 + C24731) * C50879 +
            (C24730 + C24729) * C24520 +
            (C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                C50878 +
            (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                C24519) *
               C50700 * C50603 * C893) *
              C896 +
          (((C49747 * C124 + C50814 * C131 + C49740 * C125 + C50543 * C132) *
                C24519 +
            (C49747 * C135 + C50814 * C145 + C49740 * C136 + C50543 * C146) *
                C50878 +
            (C25053 + C25054) * C24520 + (C25055 + C25056) * C50879 +
            (C25057 + C25058) * C24521 + (C25059 + C25060) * C24516) *
               C50700 * C50603 * C893 -
           ((C49740 * C973 + C50543 * C981 + C49747 * C974 + C50814 * C982) *
                C24516 +
            (C49740 * C969 + C50543 * C977 + C49747 * C970 + C50814 * C978) *
                C24521 +
            (C25060 + C25059) * C50879 + (C25058 + C25057) * C24520 +
            (C25056 + C25055) * C50878 + (C25054 + C25053) * C24519) *
               C50700 * C50603 * C50639) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                C24519 +
            (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                C50878 +
            (C24717 + C24718) * C24520 + (C24719 + C24720) * C50879 +
            C24741 * C24521 + C24742 * C24516) *
               C50700 * C391 -
           ((C25433 + C25434) * C24516 + (C25435 + C25436) * C24521 +
            (C25437 + C25438) * C50879 + (C25439 + C25440) * C24520 +
            (C49740 * C406 + C50543 * C426 + C49747 * C407 + C50814 * C427) *
                C50878 +
            (C49740 * C396 + C50543 * C410 + C49747 * C397 + C50814 * C411) *
                C24519) *
               C50700 * C392 +
           ((C49747 * C398 + C50814 * C412 + C49740 * C399 + C50543 * C413) *
                C24519 +
            (C49747 * C416 + C50814 * C428 + C49740 * C417 + C50543 * C429) *
                C50878 +
            (C25869 + C25870) * C24520 + (C25871 + C25872) * C50879 +
            (C25873 + C25874) * C24521 + (C25875 + C25876) * C24516) *
               C50700 * C393) *
              C893 +
          (((C25440 + C25439) * C24519 + (C25438 + C25437) * C50878 +
            (C25436 + C25435) * C24520 + (C25434 + C25433) * C50879 +
            (C49747 * C3069 + C50814 * C3072 + C49740 * C3070 +
             C50543 * C3073) *
                C24521 +
            (C49747 * C3074 + C50814 * C3078 + C49740 * C3075 +
             C50543 * C3079) *
                C24516) *
               C50700 * C392 -
           (C25693 * C24516 + C25694 * C24521 + (C24724 + C24723) * C50879 +
            (C24722 + C24721) * C24520 + (C24720 + C24719) * C50878 +
            (C24718 + C24717) * C24519) *
               C50700 * C391 -
           ((C49740 * C3543 + C50543 * C3547 + C49747 * C3544 +
             C50814 * C3548) *
                C24516 +
            (C49740 * C3541 + C50543 * C3545 + C49747 * C3542 +
             C50814 * C3546) *
                C24521 +
            (C25876 + C25875) * C50879 + (C25874 + C25873) * C24520 +
            (C25872 + C25871) * C50878 + (C25870 + C25869) * C24519) *
               C50700 * C393) *
              C50639) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C24519 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C50878 +
             (C24717 + C24718) * C24520 + (C24719 + C24720) * C50879 +
             C24741 * C24521 + C24742 * C24516) *
                C50700 * C50830 -
            ((C25433 + C25434) * C24516 + (C25435 + C25436) * C24521 +
             (C25437 + C25438) * C50879 + (C25439 + C25440) * C24520 +
             (C49740 * C406 + C50543 * C426 + C49747 * C407 + C50814 * C427) *
                 C50878 +
             (C49740 * C396 + C50543 * C410 + C49747 * C397 + C50814 * C411) *
                 C24519) *
                C50700 * C50667) *
               C893 +
           (((C25440 + C25439) * C24519 + (C25438 + C25437) * C50878 +
             (C25436 + C25435) * C24520 + (C25434 + C25433) * C50879 +
             (C49747 * C3069 + C50814 * C3072 + C49740 * C3070 +
              C50543 * C3073) *
                 C24521 +
             (C49747 * C3074 + C50814 * C3078 + C49740 * C3075 +
              C50543 * C3079) *
                 C24516) *
                C50700 * C50667 -
            (C25693 * C24516 + C25694 * C24521 + (C24724 + C24723) * C50879 +
             (C24722 + C24721) * C24520 + (C24720 + C24719) * C50878 +
             (C24718 + C24717) * C24519) *
                C50700 * C50830) *
               C50639) *
              C50821 +
          ((((C49747 * C396 + C50814 * C410 + C49740 * C395 + C50543 * C409) *
                 C24519 +
             (C49747 * C406 + C50814 * C426 + C49740 * C405 + C50543 * C425) *
                 C50878 +
             (C25441 + C25442) * C24520 + (C25443 + C25444) * C50879 +
             (C25445 + C25446) * C24521 + (C25447 + C25448) * C24516) *
                C50700 * C50667 -
            (C24743 * C24516 + C24744 * C24521 + (C24732 + C24731) * C50879 +
             (C24730 + C24729) * C24520 +
             (C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                 C50878 +
             (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                 C24519) *
                C50700 * C50830) *
               C893 +
           (((C24729 + C24730) * C24519 + (C24731 + C24732) * C50878 +
             (C24733 + C24734) * C24520 + (C24735 + C24736) * C50879 +
             (C24737 + C24738) * C24521 + (C24739 + C24740) * C24516) *
                C50700 * C50830 -
            ((C49740 * C3076 + C50543 * C3080 + C49747 * C3075 +
              C50814 * C3079) *
                 C24516 +
             (C49740 * C3071 + C50543 * C3077 + C49747 * C3070 +
              C50814 * C3073) *
                 C24521 +
             (C25448 + C25447) * C50879 + (C25446 + C25445) * C24520 +
             (C25444 + C25443) * C50878 + (C25442 + C25441) * C24519) *
                C50700 * C50667) *
               C50639) *
              C50574)) /
        (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                C24519 +
            (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                C50878 +
            (C24717 + C24718) * C24520 + (C24719 + C24720) * C50879 +
            C24741 * C24521 + C24742 * C24516) *
               C50700 * C50603 * C893 -
           ((C24725 + C24726) * C24516 + (C24727 + C24728) * C24521 +
            (C24724 + C24723) * C50879 + (C24722 + C24721) * C24520 +
            (C24720 + C24719) * C50878 + (C24718 + C24717) * C24519) *
               C50700 * C50603 * C50639) *
              C895 +
          (((C24729 + C24730) * C24519 + (C24731 + C24732) * C50878 +
            (C24733 + C24734) * C24520 + (C24735 + C24736) * C50879 +
            (C24737 + C24738) * C24521 + (C24739 + C24740) * C24516) *
               C50700 * C50603 * C50639 -
           (C24743 * C24516 + C24744 * C24521 + (C24732 + C24731) * C50879 +
            (C24730 + C24729) * C24520 +
            (C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                C50878 +
            (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                C24519) *
               C50700 * C50603 * C893) *
              C896 +
          (((C49747 * C124 + C50814 * C131 + C49740 * C125 + C50543 * C132) *
                C24519 +
            (C49747 * C135 + C50814 * C145 + C49740 * C136 + C50543 * C146) *
                C50878 +
            (C25053 + C25054) * C24520 + (C25055 + C25056) * C50879 +
            (C25057 + C25058) * C24521 + (C25059 + C25060) * C24516) *
               C50700 * C50603 * C893 -
           ((C49740 * C973 + C50543 * C981 + C49747 * C974 + C50814 * C982) *
                C24516 +
            (C49740 * C969 + C50543 * C977 + C49747 * C970 + C50814 * C978) *
                C24521 +
            (C25060 + C25059) * C50879 + (C25058 + C25057) * C24520 +
            (C25056 + C25055) * C50878 + (C25054 + C25053) * C24519) *
               C50700 * C50603 * C50639) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
               C24519 +
           (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
               C50878 +
           (C24717 + C24718) * C24520 + (C24719 + C24720) * C50879 +
           C24741 * C24521 + C24742 * C24516) *
              C50700 * C50603 * C964 -
          (C25693 * C24516 + C25694 * C24521 + (C24724 + C24723) * C50879 +
           (C24722 + C24721) * C24520 + (C24720 + C24719) * C50878 +
           (C24718 + C24717) * C24519) *
              C50700 * C50603 * C965 +
          (C24741 * C24519 + C24742 * C50878 + (C24728 + C24727) * C24520 +
           (C24726 + C24725) * C50879 + (C25703 + C25704) * C24521 +
           (C25705 + C25706) * C24516) *
              C50700 * C50603 * C966 -
          ((C49740 * C3375 + C50543 * C3379 + C49747 * C3376 + C50814 * C3380) *
               C24516 +
           (C49740 * C3373 + C50543 * C3377 + C49747 * C3374 + C50814 * C3378) *
               C24521 +
           (C25706 + C25705) * C50879 + (C25704 + C25703) * C24520 +
           C25693 * C50878 + C25694 * C24519) *
              C50700 * C50603 * C967) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C24519 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C50878 +
             (C24717 + C24718) * C24520 + (C24719 + C24720) * C50879 +
             C24741 * C24521 + C24742 * C24516) *
                C50700 * C1544 -
            (C26363 * C24516 + C26364 * C24521 + (C25437 + C25438) * C50879 +
             (C25439 + C25440) * C24520 +
             (C49740 * C406 + C50543 * C426 + C49747 * C407 + C50814 * C427) *
                 C50878 +
             (C49740 * C396 + C50543 * C410 + C49747 * C397 + C50814 * C411) *
                 C24519) *
                C50700 * C50667) *
               C50829 +
           (((C25440 + C25439) * C24519 + (C25438 + C25437) * C50878 +
             (C25436 + C25435) * C24520 + (C25434 + C25433) * C50879 +
             (C26373 + C26374) * C24521 + (C26375 + C26376) * C24516) *
                C50700 * C50667 -
            (C25693 * C24516 + C25694 * C24521 + (C24724 + C24723) * C50879 +
             (C24722 + C24721) * C24520 + (C24720 + C24719) * C50878 +
             (C24718 + C24717) * C24519) *
                C50700 * C1544) *
               C50639) *
              C50821 +
          ((((C49747 * C396 + C50814 * C410 + C49740 * C395 + C50543 * C409) *
                 C24519 +
             (C49747 * C406 + C50814 * C426 + C49740 * C405 + C50543 * C425) *
                 C50878 +
             (C25441 + C25442) * C24520 + (C25443 + C25444) * C50879 +
             (C25445 + C25446) * C24521 + (C25447 + C25448) * C24516) *
                C50700 * C50667 -
            (C24743 * C24516 + C24744 * C24521 + (C24732 + C24731) * C50879 +
             (C24730 + C24729) * C24520 +
             (C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                 C50878 +
             (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                 C24519) *
                C50700 * C1544) *
               C50829 +
           (((C24729 + C24730) * C24519 + (C24731 + C24732) * C50878 +
             (C24733 + C24734) * C24520 + (C24735 + C24736) * C50879 +
             (C24737 + C24738) * C24521 + (C24739 + C24740) * C24516) *
                C50700 * C1544 -
            ((C49740 * C3076 + C50543 * C3080 + C49747 * C3075 +
              C50814 * C3079) *
                 C24516 +
             (C49740 * C3071 + C50543 * C3077 + C49747 * C3070 +
              C50814 * C3073) *
                 C24521 +
             (C25448 + C25447) * C50879 + (C25446 + C25445) * C24520 +
             (C25444 + C25443) * C50878 + (C25442 + C25441) * C24519) *
                C50700 * C50667) *
               C50639) *
              C50574)) /
        (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                C24519 +
            (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                C50878 +
            (C24717 + C24718) * C24520 + (C24719 + C24720) * C50879 +
            C24741 * C24521 + C24742 * C24516) *
               C50700 * C50876 -
           (C26363 * C24516 + C26364 * C24521 + (C25437 + C25438) * C50879 +
            (C25439 + C25440) * C24520 +
            (C49740 * C406 + C50543 * C426 + C49747 * C407 + C50814 * C427) *
                C50878 +
            (C49740 * C396 + C50543 * C410 + C49747 * C397 + C50814 * C411) *
                C24519) *
               C50700 * C50877 +
           ((C49747 * C398 + C50814 * C412 + C49740 * C399 + C50543 * C413) *
                C24519 +
            (C49747 * C416 + C50814 * C428 + C49740 * C417 + C50543 * C429) *
                C50878 +
            (C25869 + C25870) * C24520 + (C25871 + C25872) * C50879 +
            (C25873 + C25874) * C24521 + (C25875 + C25876) * C24516) *
               C50700 * C1960) *
              C50829 +
          (((C25440 + C25439) * C24519 + (C25438 + C25437) * C50878 +
            (C25436 + C25435) * C24520 + (C25434 + C25433) * C50879 +
            (C26373 + C26374) * C24521 + (C26375 + C26376) * C24516) *
               C50700 * C50877 -
           (C25693 * C24516 + C25694 * C24521 + (C24724 + C24723) * C50879 +
            (C24722 + C24721) * C24520 + (C24720 + C24719) * C50878 +
            (C24718 + C24717) * C24519) *
               C50700 * C50876 -
           ((C49740 * C3543 + C50543 * C3547 + C49747 * C3544 +
             C50814 * C3548) *
                C24516 +
            (C49740 * C3541 + C50543 * C3545 + C49747 * C3542 +
             C50814 * C3546) *
                C24521 +
            (C25876 + C25875) * C50879 + (C25874 + C25873) * C24520 +
            (C25872 + C25871) * C50878 + (C25870 + C25869) * C24519) *
               C50700 * C1960) *
              C50639) *
         C50568) /
        (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                C24519 +
            (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                C50878 +
            (C24717 + C24718) * C24520 + (C24719 + C24720) * C50879 +
            C24741 * C24521 + C24742 * C24516) *
               C50700 * C1544 -
           (C26363 * C24516 + C26364 * C24521 + (C25437 + C25438) * C50879 +
            (C25439 + C25440) * C24520 +
            (C49740 * C406 + C50543 * C426 + C49747 * C407 + C50814 * C427) *
                C50878 +
            (C49740 * C396 + C50543 * C410 + C49747 * C397 + C50814 * C411) *
                C24519) *
               C50700 * C50667) *
              C248 +
          (((C25440 + C25439) * C24519 + (C25438 + C25437) * C50878 +
            (C25436 + C25435) * C24520 + (C25434 + C25433) * C50879 +
            (C26373 + C26374) * C24521 + (C26375 + C26376) * C24516) *
               C50700 * C50667 -
           (C25693 * C24516 + C25694 * C24521 + (C24724 + C24723) * C50879 +
            (C24722 + C24721) * C24520 + (C24720 + C24719) * C50878 +
            (C24718 + C24717) * C24519) *
               C50700 * C1544) *
              C249 +
          ((C24741 * C24519 + C24742 * C50878 + (C24728 + C24727) * C24520 +
            (C24726 + C24725) * C50879 + (C25703 + C25704) * C24521 +
            (C25705 + C25706) * C24516) *
               C50700 * C1544 -
           ((C49740 * C4061 + C50543 * C4065 + C49747 * C4062 +
             C50814 * C4066) *
                C24516 +
            (C49740 * C4059 + C50543 * C4063 + C49747 * C4060 +
             C50814 * C4064) *
                C24521 +
            (C26376 + C26375) * C50879 + (C26374 + C26373) * C24520 +
            C26363 * C50878 + C26364 * C24519) *
               C50700 * C50667) *
              C250) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                C24519 +
            (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                C50878 +
            (C24717 + C24718) * C24520 + (C24719 + C24720) * C50879 +
            C24741 * C24521 + C24742 * C24516) *
               C50700 * C1544 -
           (C26363 * C24516 + C26364 * C24521 + (C25437 + C25438) * C50879 +
            (C25439 + C25440) * C24520 +
            (C49740 * C406 + C50543 * C426 + C49747 * C407 + C50814 * C427) *
                C50878 +
            (C49740 * C396 + C50543 * C410 + C49747 * C397 + C50814 * C411) *
                C24519) *
               C50700 * C50667) *
              C50587 * C895 +
          (((C49747 * C396 + C50814 * C410 + C49740 * C395 + C50543 * C409) *
                C24519 +
            (C49747 * C406 + C50814 * C426 + C49740 * C405 + C50543 * C425) *
                C50878 +
            (C25441 + C25442) * C24520 + (C25443 + C25444) * C50879 +
            (C25445 + C25446) * C24521 + (C25447 + C25448) * C24516) *
               C50700 * C50667 -
           (C24743 * C24516 + C24744 * C24521 + (C24732 + C24731) * C50879 +
            (C24730 + C24729) * C24520 +
            (C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                C50878 +
            (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                C24519) *
               C50700 * C1544) *
              C50587 * C896 +
          (((C49747 * C124 + C50814 * C131 + C49740 * C125 + C50543 * C132) *
                C24519 +
            (C49747 * C135 + C50814 * C145 + C49740 * C136 + C50543 * C146) *
                C50878 +
            (C25053 + C25054) * C24520 + (C25055 + C25056) * C50879 +
            (C25057 + C25058) * C24521 + (C25059 + C25060) * C24516) *
               C50700 * C1544 -
           ((C49740 * C1434 + C50543 * C1442 + C49747 * C1435 +
             C50814 * C1443) *
                C24516 +
            (C49740 * C1430 + C50543 * C1438 + C49747 * C1431 +
             C50814 * C1439) *
                C24521 +
            (C49740 * C787 + C50543 * C793 + C49747 * C786 + C50814 * C792) *
                C50879 +
            (C49740 * C778 + C50543 * C783 + C49747 * C777 + C50814 * C782) *
                C24520 +
            (C49740 * C404 + C50543 * C424 + C49747 * C405 + C50814 * C425) *
                C50878 +
            (C49740 * C394 + C50543 * C408 + C49747 * C395 + C50814 * C409) *
                C24519) *
               C50700 * C50667) *
              C50587 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
               C24519 +
           (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
               C50878 +
           (C24717 + C24718) * C24520 + (C24719 + C24720) * C50879 +
           C24741 * C24521 + C24742 * C24516) *
              C50700 * C1710 -
          (C26363 * C24516 + C26364 * C24521 + (C25437 + C25438) * C50879 +
           (C25439 + C25440) * C24520 +
           (C49740 * C406 + C50543 * C426 + C49747 * C407 + C50814 * C427) *
               C50878 +
           (C49740 * C396 + C50543 * C410 + C49747 * C397 + C50814 * C411) *
               C24519) *
              C50700 * C1711 +
          ((C49747 * C398 + C50814 * C412 + C49740 * C399 + C50543 * C413) *
               C24519 +
           (C49747 * C416 + C50814 * C428 + C49740 * C417 + C50543 * C429) *
               C50878 +
           (C25869 + C25870) * C24520 + (C25871 + C25872) * C50879 +
           (C25873 + C25874) * C24521 + (C25875 + C25876) * C24516) *
              C50700 * C1712 -
          ((C49740 * C4475 + C50543 * C4483 + C49747 * C4476 + C50814 * C4484) *
               C24516 +
           (C49740 * C4471 + C50543 * C4477 + C49747 * C4472 + C50814 * C4478) *
               C24521 +
           (C49740 * C4479 + C50543 * C4485 + C49747 * C4480 + C50814 * C4486) *
               C50879 +
           (C49740 * C4473 + C50543 * C4481 + C49747 * C4474 + C50814 * C4482) *
               C24520 +
           (C49740 * C1720 + C50543 * C1728 + C49747 * C1721 + C50814 * C1729) *
               C50878 +
           (C49740 * C1716 + C50543 * C1724 + C49747 * C1717 + C50814 * C1725) *
               C24519) *
              C50700 * C1713) *
         C50587 * C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                C24519 +
            (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                C50878 +
            (C24717 + C24718) * C24520 + (C24719 + C24720) * C50879 +
            C24741 * C24521 + C24742 * C24516) *
               C50700 * C50876 -
           (C26363 * C24516 + C26364 * C24521 + (C25437 + C25438) * C50879 +
            (C25439 + C25440) * C24520 +
            (C49740 * C406 + C50543 * C426 + C49747 * C407 + C50814 * C427) *
                C50878 +
            (C49740 * C396 + C50543 * C410 + C49747 * C397 + C50814 * C411) *
                C24519) *
               C50700 * C50877 +
           ((C49747 * C398 + C50814 * C412 + C49740 * C399 + C50543 * C413) *
                C24519 +
            (C49747 * C416 + C50814 * C428 + C49740 * C417 + C50543 * C429) *
                C50878 +
            (C25869 + C25870) * C24520 + (C25871 + C25872) * C50879 +
            (C25873 + C25874) * C24521 + (C25875 + C25876) * C24516) *
               C50700 * C1960) *
              C50587 * C50821 +
          (((C49747 * C396 + C50814 * C410 + C49740 * C395 + C50543 * C409) *
                C24519 +
            (C49747 * C406 + C50814 * C426 + C49740 * C405 + C50543 * C425) *
                C50878 +
            (C25441 + C25442) * C24520 + (C25443 + C25444) * C50879 +
            (C25445 + C25446) * C24521 + (C25447 + C25448) * C24516) *
               C50700 * C50877 -
           (C24743 * C24516 + C24744 * C24521 + (C24732 + C24731) * C50879 +
            (C24730 + C24729) * C24520 +
            (C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                C50878 +
            (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                C24519) *
               C50700 * C50876 -
           ((C49740 * C2554 + C50543 * C2558 + C49747 * C2553 +
             C50814 * C2557) *
                C24516 +
            (C49740 * C2549 + C50543 * C2555 + C49747 * C2548 +
             C50814 * C2551) *
                C24521 +
            (C49740 * C1088 + C50543 * C1096 + C49747 * C1089 +
             C50814 * C1097) *
                C50879 +
            (C49740 * C1084 + C50543 * C1092 + C49747 * C1085 +
             C50814 * C1093) *
                C24520 +
            (C49740 * C418 + C50543 * C430 + C49747 * C417 + C50814 * C429) *
                C50878 +
            (C49740 * C400 + C50543 * C414 + C49747 * C399 + C50814 * C413) *
                C24519) *
               C50700 * C1960) *
              C50587 * C50574)) /
        (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                C24519 +
            (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                C50878 +
            (C24717 + C24718) * C24520 + (C24719 + C24720) * C50879 +
            C24741 * C24521 + C24742 * C24516) *
               C50700 * C1544 -
           (C26363 * C24516 + C26364 * C24521 + (C25437 + C25438) * C50879 +
            (C25439 + C25440) * C24520 +
            (C49740 * C406 + C50543 * C426 + C49747 * C407 + C50814 * C427) *
                C50878 +
            (C49740 * C396 + C50543 * C410 + C49747 * C397 + C50814 * C411) *
                C24519) *
               C50700 * C50667) *
              C50587 * C895 +
          (((C49747 * C396 + C50814 * C410 + C49740 * C395 + C50543 * C409) *
                C24519 +
            (C49747 * C406 + C50814 * C426 + C49740 * C405 + C50543 * C425) *
                C50878 +
            (C25441 + C25442) * C24520 + (C25443 + C25444) * C50879 +
            (C25445 + C25446) * C24521 + (C25447 + C25448) * C24516) *
               C50700 * C50667 -
           (C24743 * C24516 + C24744 * C24521 + (C24732 + C24731) * C50879 +
            (C24730 + C24729) * C24520 +
            (C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                C50878 +
            (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                C24519) *
               C50700 * C1544) *
              C50587 * C896 +
          (((C49747 * C124 + C50814 * C131 + C49740 * C125 + C50543 * C132) *
                C24519 +
            (C49747 * C135 + C50814 * C145 + C49740 * C136 + C50543 * C146) *
                C50878 +
            (C25053 + C25054) * C24520 + (C25055 + C25056) * C50879 +
            (C25057 + C25058) * C24521 + (C25059 + C25060) * C24516) *
               C50700 * C1544 -
           ((C49740 * C1434 + C50543 * C1442 + C49747 * C1435 +
             C50814 * C1443) *
                C24516 +
            (C49740 * C1430 + C50543 * C1438 + C49747 * C1431 +
             C50814 * C1439) *
                C24521 +
            (C49740 * C787 + C50543 * C793 + C49747 * C786 + C50814 * C792) *
                C50879 +
            (C49740 * C778 + C50543 * C783 + C49747 * C777 + C50814 * C782) *
                C24520 +
            (C49740 * C404 + C50543 * C424 + C49747 * C405 + C50814 * C425) *
                C50878 +
            (C49740 * C394 + C50543 * C408 + C49747 * C395 + C50814 * C409) *
                C24519) *
               C50700 * C50667) *
              C50587 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                C24519 +
            (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                C50878 +
            (C24717 + C24718) * C24520 + (C24719 + C24720) * C50879 +
            C24741 * C24521 + C24742 * C24516) *
               C50700 * C1544 -
           (C26363 * C24516 + C26364 * C24521 + (C25437 + C25438) * C50879 +
            (C25439 + C25440) * C24520 +
            (C49740 * C406 + C50543 * C426 + C49747 * C407 + C50814 * C427) *
                C50878 +
            (C49740 * C396 + C50543 * C410 + C49747 * C397 + C50814 * C411) *
                C24519) *
               C50700 * C50667) *
              C248 +
          (((C25440 + C25439) * C24519 + (C25438 + C25437) * C50878 +
            (C25436 + C25435) * C24520 + (C25434 + C25433) * C50879 +
            (C26373 + C26374) * C24521 + (C26375 + C26376) * C24516) *
               C50700 * C50667 -
           (C25693 * C24516 + C25694 * C24521 + (C24724 + C24723) * C50879 +
            (C24722 + C24721) * C24520 + (C24720 + C24719) * C50878 +
            (C24718 + C24717) * C24519) *
               C50700 * C1544) *
              C249 +
          ((C24741 * C24519 + C24742 * C50878 + (C24728 + C24727) * C24520 +
            (C24726 + C24725) * C50879 + (C25703 + C25704) * C24521 +
            (C25705 + C25706) * C24516) *
               C50700 * C1544 -
           ((C49740 * C4061 + C50543 * C4065 + C49747 * C4062 +
             C50814 * C4066) *
                C24516 +
            (C49740 * C4059 + C50543 * C4063 + C49747 * C4060 +
             C50814 * C4064) *
                C24521 +
            (C26376 + C26375) * C50879 + (C26374 + C26373) * C24520 +
            C26363 * C50878 + C26364 * C24519) *
               C50700 * C50667) *
              C250) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C24519 +
             (C19749 * C133 + C50538 * C143) * C50878 + C19885 * C24520 +
             C19886 * C50879 + C19887 * C24521 + C19888 * C24516) *
                C50843 +
            (C31257 + C31258 + C31259 + C31260 + C31261 + C31262) * C50764) *
               C50603 * C50829 -
           ((C20367 * C24516 + C20368 * C24521 + C20369 * C50879 +
             C20370 * C24520 + C20371 * C50878 + C20372 * C24519) *
                C50764 +
            (C19890 * C24516 + C19889 * C24521 + C19888 * C50879 +
             C19887 * C24520 + C19886 * C50878 + C19885 * C24519) *
                C50843) *
               C50603 * C50639) *
              C50872 +
          (((C19893 * C24519 + C19894 * C50878 + C19895 * C24520 +
             C19896 * C50879 + C19897 * C24521 + C19898 * C24516) *
                C50843 +
            (C20373 * C24519 + C20374 * C50878 + C20375 * C24520 +
             C20376 * C50879 + C20377 * C24521 + C20378 * C24516) *
                C50764) *
               C50603 * C50639 -
           ((C31274 + C31273 + C31272 + C31271 + C31270 + C31269) * C50764 +
            (C19896 * C24516 + C19895 * C24521 + C19894 * C50879 +
             C19893 * C24520 + (C19749 * C134 + C50538 * C144) * C50878 +
             (C19749 * C123 + C50538 * C130) * C24519) *
                C50843) *
               C50603 * C50829) *
              C50873 +
          ((((C19749 * C124 + C50538 * C131) * C24519 +
             (C19749 * C135 + C50538 * C145) * C50878 + C20109 * C24520 +
             C20110 * C50879 + C20111 * C24521 + C20112 * C24516) *
                C50843 +
            (C22397 * C24519 + C22398 * C50878 + C22235 * C24520 +
             C22236 * C50879 + C31431 * C24521 + C31432 * C24516) *
                C50764) *
               C50603 * C50829 -
           (((C19749 * C3076 + C50538 * C3080) * C24516 +
             (C19749 * C3071 + C50538 * C3077) * C24521 + C31432 * C50879 +
             C31431 * C24520 + C22236 * C50878 + C22235 * C24519) *
                C50764 +
            (C20114 * C24516 + C20113 * C24521 + C20112 * C50879 +
             C20111 * C24520 + C20110 * C50878 + C20109 * C24519) *
                C50843) *
               C50603 * C50639) *
              C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19749 * C122 + C50538 * C129) * C24519 +
              (C19749 * C133 + C50538 * C143) * C50878 + C19885 * C24520 +
              C19886 * C50879 + C19887 * C24521 + C19888 * C24516) *
                 C50843 +
             (C31257 + C31258 + C31259 + C31260 + C31261 + C31262) * C50764) *
                C50830 -
            ((C31263 + C31264 + C31265 + C31266 + C31267 + C31268) * C50764 +
             (C31262 + C31261 + C31260 + C31259 + C31258 + C31257) * C50843) *
                C50667) *
               C50829 +
           (((C31779 + C31780 + C31781 + C31782 + C31783 + C31784) * C50843 +
             (C20667 * C24519 + C20668 * C50878 + C20669 * C24520 +
              C20670 * C50879 + C20671 * C24521 + C20672 * C24516) *
                 C50764) *
                C50667 -
            ((C31784 + C31783 + C31782 + C31781 + C31780 + C31779) * C50764 +
             (C19890 * C24516 + C19889 * C24521 + C19888 * C50879 +
              C19887 * C24520 + C19886 * C50878 + C19885 * C24519) *
                 C50843) *
                C50830) *
               C50639) *
              C251 +
          ((((C31269 + C31270 + C31271 + C31272 + C31273 + C31274) * C50843 +
             (C31275 + C31276 + C31277 + C31278 + C31279 + C31280) * C50764) *
                C50667 -
            ((C31274 + C31273 + C31272 + C31271 + C31270 + C31269) * C50764 +
             (C19896 * C24516 + C19895 * C24521 + C19894 * C50879 +
              C19893 * C24520 + (C19749 * C134 + C50538 * C144) * C50878 +
              (C19749 * C123 + C50538 * C130) * C24519) *
                 C50843) *
                C50830) *
               C50829 +
           (((C19893 * C24519 + C19894 * C50878 + C19895 * C24520 +
              C19896 * C50879 + C19897 * C24521 + C19898 * C24516) *
                 C50843 +
             (C31785 + C31786 + C31787 + C31788 + C31789 + C31790) * C50764) *
                C50830 -
            (((C19749 * C3543 + C50538 * C3547) * C24516 +
              (C19749 * C3541 + C50538 * C3545) * C24521 + C21856 * C50879 +
              C21855 * C24520 + C21854 * C50878 + C21853 * C24519) *
                 C50764 +
             (C31790 + C31789 + C31788 + C31787 + C31786 + C31785) * C50843) *
                C50667) *
               C50639) *
              C50574)) /
        (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C24519 +
             (C19749 * C133 + C50538 * C143) * C50878 + C19885 * C24520 +
             C19886 * C50879 + C19887 * C24521 + C19888 * C24516) *
                C50843 +
            (C22043 * C24519 + C22044 * C50878 + C20372 * C24520 +
             C20371 * C50879 + C20370 * C24521 + C20369 * C24516) *
                C50764) *
               C50603 * C248 -
           ((C20367 * C24516 + C20368 * C24521 + C20369 * C50879 +
             C20370 * C24520 + C20371 * C50878 + C20372 * C24519) *
                C50764 +
            (C19890 * C24516 + C19889 * C24521 + C19888 * C50879 +
             C19887 * C24520 + C19886 * C50878 + C19885 * C24519) *
                C50843) *
               C50603 * C249 +
           ((C19887 * C24519 + C19888 * C50878 + C19889 * C24520 +
             C19890 * C50879 + C19892 * C24521 + C19891 * C24516) *
                C50843 +
            (C20370 * C24519 + C20369 * C50878 + C20368 * C24520 +
             C20367 * C50879 + C21007 * C24521 + C21008 * C24516) *
                C50764) *
               C50603 * C250) *
              C251 +
          (((C19893 * C24519 + C19894 * C50878 + C19895 * C24520 +
             C19896 * C50879 + C19897 * C24521 + C19898 * C24516) *
                C50843 +
            (C20373 * C24519 + C20374 * C50878 + C20375 * C24520 +
             C20376 * C50879 + C20377 * C24521 + C20378 * C24516) *
                C50764) *
               C50603 * C249 -
           ((C20376 * C24516 + C20375 * C24521 + C20374 * C50879 +
             C20373 * C24520 + C22052 * C50878 + C22051 * C24519) *
                C50764 +
            (C19896 * C24516 + C19895 * C24521 + C19894 * C50879 +
             C19893 * C24520 + (C19749 * C134 + C50538 * C144) * C50878 +
             (C19749 * C123 + C50538 * C130) * C24519) *
                C50843) *
               C50603 * C248 -
           (((C19749 * C4061 + C50538 * C4065) * C24516 +
             (C19749 * C4059 + C50538 * C4063) * C24521 + C20378 * C50879 +
             C20377 * C24520 + C20376 * C50878 + C20375 * C24519) *
                C50764 +
            (C19900 * C24516 + C19899 * C24521 + C19898 * C50879 +
             C19897 * C24520 + C19896 * C50878 + C19895 * C24519) *
                C50843) *
               C50603 * C250) *
              C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19749 * C122 + C50538 * C129) * C24519 +
            (C19749 * C133 + C50538 * C143) * C50878 + C19885 * C24520 +
            C19886 * C50879 + C19887 * C24521 + C19888 * C24516) *
               C50843 +
           (C22043 * C24519 + C22044 * C50878 + C20372 * C24520 +
            C20371 * C50879 + C20370 * C24521 + C20369 * C24516) *
               C50764) *
              C50603 * C50587 * C113 -
          ((C20376 * C24516 + C20375 * C24521 + C20374 * C50879 +
            C20373 * C24520 + C22052 * C50878 + C22051 * C24519) *
               C50764 +
           (C19896 * C24516 + C19895 * C24521 + C19894 * C50879 +
            C19893 * C24520 + (C19749 * C134 + C50538 * C144) * C50878 +
            (C19749 * C123 + C50538 * C130) * C24519) *
               C50843) *
              C50603 * C50587 * C114 +
          (((C19749 * C124 + C50538 * C131) * C24519 +
            (C19749 * C135 + C50538 * C145) * C50878 + C20109 * C24520 +
            C20110 * C50879 + C20111 * C24521 + C20112 * C24516) *
               C50843 +
           (C22397 * C24519 + C22398 * C50878 + C22235 * C24520 +
            C22236 * C50879 + (C19749 * C1431 + C50538 * C1439) * C24521 +
            (C19749 * C1435 + C50538 * C1443) * C24516) *
               C50764) *
              C50603 * C50587 * C115 -
          (((C19749 * C1434 + C50538 * C1442) * C24516 +
            (C19749 * C1430 + C50538 * C1438) * C24521 +
            (C19749 * C787 + C50538 * C793) * C50879 +
            (C19749 * C778 + C50538 * C783) * C24520 +
            (C19749 * C404 + C50538 * C424) * C50878 +
            (C19749 * C394 + C50538 * C408) * C24519) *
               C50764 +
           ((C19749 * C278 + C50538 * C290) * C24516 +
            (C19749 * C260 + C50538 * C274) * C24521 +
            (C19749 * C263 + C50538 * C283) * C50879 +
            (C19749 * C253 + C50538 * C267) * C24520 +
            (C19749 * C136 + C50538 * C146) * C50878 +
            (C19749 * C125 + C50538 * C132) * C24519) *
               C50843) *
              C50603 * C50587 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C24519 +
             (C19749 * C133 + C50538 * C143) * C50878 + C19885 * C24520 +
             C19886 * C50879 + C19887 * C24521 + C19888 * C24516) *
                C50843 +
            (C31257 + C31258 + C31259 + C31260 + C31261 + C31262) * C50764) *
               C391 -
           ((C31263 + C31264 + C31265 + C31266 + C31267 + C31268) * C50764 +
            (C31262 + C31261 + C31260 + C31259 + C31258 + C31257) * C50843) *
               C392 +
           ((C31268 + C31267 + C31266 + C31265 + C31264 + C31263) * C50843 +
            (C22050 * C24519 + C22049 * C50878 + C22048 * C24520 +
             C22047 * C50879 + C23022 * C24521 + C23023 * C24516) *
                C50764) *
               C393) *
              C50587 * C251 +
          (((C31269 + C31270 + C31271 + C31272 + C31273 + C31274) * C50843 +
            (C31275 + C31276 + C31277 + C31278 + C31279 + C31280) * C50764) *
               C392 -
           ((C31274 + C31273 + C31272 + C31271 + C31270 + C31269) * C50764 +
            (C19896 * C24516 + C19895 * C24521 + C19894 * C50879 +
             C19893 * C24520 + (C19749 * C134 + C50538 * C144) * C50878 +
             (C19749 * C123 + C50538 * C130) * C24519) *
                C50843) *
               C391 -
           (((C19749 * C4475 + C50538 * C4483) * C24516 +
             (C19749 * C4471 + C50538 * C4477) * C24521 + C22058 * C50879 +
             C22057 * C24520 + C22056 * C50878 + C22055 * C24519) *
                C50764 +
            (C31280 + C31279 + C31278 + C31277 + C31276 + C31275) * C50843) *
               C393) *
              C50587 * C50574)) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C24519 +
             (C19749 * C133 + C50538 * C143) * C50878 + C19885 * C24520 +
             C19886 * C50879 + C19887 * C24521 + C19888 * C24516) *
                C50843 +
            (C31257 + C31258 + C31259 + C31260 + C31261 + C31262) * C50764) *
               C50830 -
           ((C31263 + C31264 + C31265 + C31266 + C31267 + C31268) * C50764 +
            (C31262 + C31261 + C31260 + C31259 + C31258 + C31257) * C50843) *
               C50667) *
              C50587 * C50872 +
          (((C31269 + C31270 + C31271 + C31272 + C31273 + C31274) * C50843 +
            (C31275 + C31276 + C31277 + C31278 + C31279 + C31280) * C50764) *
               C50667 -
           ((C31274 + C31273 + C31272 + C31271 + C31270 + C31269) * C50764 +
            (C19896 * C24516 + C19895 * C24521 + C19894 * C50879 +
             C19893 * C24520 + (C19749 * C134 + C50538 * C144) * C50878 +
             (C19749 * C123 + C50538 * C130) * C24519) *
                C50843) *
               C50830) *
              C50587 * C50873 +
          ((((C19749 * C124 + C50538 * C131) * C24519 +
             (C19749 * C135 + C50538 * C145) * C50878 + C20109 * C24520 +
             C20110 * C50879 + C20111 * C24521 + C20112 * C24516) *
                C50843 +
            (C31579 + C31580 + C31581 + C31582 + C31583 + C31584) * C50764) *
               C50830 -
           (((C19749 * C2554 + C50538 * C2558) * C24516 +
             (C19749 * C2549 + C50538 * C2555) * C24521 + C22238 * C50879 +
             C22237 * C24520 + C22400 * C50878 + C22399 * C24519) *
                C50764 +
            (C31584 + C31583 + C31582 + C31581 + C31580 + C31579) * C50843) *
               C50667) *
              C50587 * C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19749 * C122 + C50538 * C129) * C24519 +
            (C19749 * C133 + C50538 * C143) * C50878 + C19885 * C24520 +
            C19886 * C50879 + C19887 * C24521 + C19888 * C24516) *
               C50843 +
           (C22043 * C24519 + C22044 * C50878 + C20372 * C24520 +
            C20371 * C50879 + C20370 * C24521 + C20369 * C24516) *
               C50764) *
              C50603 * C50587 * C113 -
          ((C20376 * C24516 + C20375 * C24521 + C20374 * C50879 +
            C20373 * C24520 + C22052 * C50878 + C22051 * C24519) *
               C50764 +
           (C19896 * C24516 + C19895 * C24521 + C19894 * C50879 +
            C19893 * C24520 + (C19749 * C134 + C50538 * C144) * C50878 +
            (C19749 * C123 + C50538 * C130) * C24519) *
               C50843) *
              C50603 * C50587 * C114 +
          (((C19749 * C124 + C50538 * C131) * C24519 +
            (C19749 * C135 + C50538 * C145) * C50878 + C20109 * C24520 +
            C20110 * C50879 + C20111 * C24521 + C20112 * C24516) *
               C50843 +
           (C22397 * C24519 + C22398 * C50878 + C22235 * C24520 +
            C22236 * C50879 + (C19749 * C1431 + C50538 * C1439) * C24521 +
            (C19749 * C1435 + C50538 * C1443) * C24516) *
               C50764) *
              C50603 * C50587 * C115 -
          (((C19749 * C1434 + C50538 * C1442) * C24516 +
            (C19749 * C1430 + C50538 * C1438) * C24521 +
            (C19749 * C787 + C50538 * C793) * C50879 +
            (C19749 * C778 + C50538 * C783) * C24520 +
            (C19749 * C404 + C50538 * C424) * C50878 +
            (C19749 * C394 + C50538 * C408) * C24519) *
               C50764 +
           ((C19749 * C278 + C50538 * C290) * C24516 +
            (C19749 * C260 + C50538 * C274) * C24521 +
            (C19749 * C263 + C50538 * C283) * C50879 +
            (C19749 * C253 + C50538 * C267) * C24520 +
            (C19749 * C136 + C50538 * C146) * C50878 +
            (C19749 * C125 + C50538 * C132) * C24519) *
               C50843) *
              C50603 * C50587 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C24519 +
             (C19749 * C133 + C50538 * C143) * C50878 + C19885 * C24520 +
             C19886 * C50879 + C19887 * C24521 + C19888 * C24516) *
                C50843 +
            (C22043 * C24519 + C22044 * C50878 + C20372 * C24520 +
             C20371 * C50879 + C20370 * C24521 + C20369 * C24516) *
                C50764) *
               C50603 * C248 -
           ((C20367 * C24516 + C20368 * C24521 + C20369 * C50879 +
             C20370 * C24520 + C20371 * C50878 + C20372 * C24519) *
                C50764 +
            (C19890 * C24516 + C19889 * C24521 + C19888 * C50879 +
             C19887 * C24520 + C19886 * C50878 + C19885 * C24519) *
                C50843) *
               C50603 * C249 +
           ((C19887 * C24519 + C19888 * C50878 + C19889 * C24520 +
             C19890 * C50879 + C19892 * C24521 + C19891 * C24516) *
                C50843 +
            (C20370 * C24519 + C20369 * C50878 + C20368 * C24520 +
             C20367 * C50879 + C21007 * C24521 + C21008 * C24516) *
                C50764) *
               C50603 * C250) *
              C251 +
          (((C19893 * C24519 + C19894 * C50878 + C19895 * C24520 +
             C19896 * C50879 + C19897 * C24521 + C19898 * C24516) *
                C50843 +
            (C20373 * C24519 + C20374 * C50878 + C20375 * C24520 +
             C20376 * C50879 + C20377 * C24521 + C20378 * C24516) *
                C50764) *
               C50603 * C249 -
           ((C20376 * C24516 + C20375 * C24521 + C20374 * C50879 +
             C20373 * C24520 + C22052 * C50878 + C22051 * C24519) *
                C50764 +
            (C19896 * C24516 + C19895 * C24521 + C19894 * C50879 +
             C19893 * C24520 + (C19749 * C134 + C50538 * C144) * C50878 +
             (C19749 * C123 + C50538 * C130) * C24519) *
                C50843) *
               C50603 * C248 -
           (((C19749 * C4061 + C50538 * C4065) * C24516 +
             (C19749 * C4059 + C50538 * C4063) * C24521 + C20378 * C50879 +
             C20377 * C24520 + C20376 * C50878 + C20375 * C24519) *
                C50764 +
            (C19900 * C24516 + C19899 * C24521 + C19898 * C50879 +
             C19897 * C24520 + C19896 * C50878 + C19895 * C24519) *
                C50843) *
               C50603 * C250) *
              C50574)) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C24519 +
             (C19749 * C133 + C50538 * C143) * C50878 + C19885 * C24520 +
             C19886 * C50879 + C19887 * C24521 + C19888 * C24516) *
                C50843 +
            (C31257 + C31258 + C31259 + C31260 + C31261 + C31262) * C50764) *
               C50603 * C50874 -
           ((C31784 + C31783 + C31782 + C31781 + C31780 + C31779) * C50764 +
            (C19890 * C24516 + C19889 * C24521 + C19888 * C50879 +
             C19887 * C24520 + C19886 * C50878 + C19885 * C24519) *
                C50843) *
               C50603 * C50875 +
           ((C19887 * C24519 + C19888 * C50878 + C19889 * C24520 +
             C19890 * C50879 + C19892 * C24521 + C19891 * C24516) *
                C50843 +
            (C20370 * C24519 + C20369 * C50878 + C20368 * C24520 +
             C20367 * C50879 + C21007 * C24521 + C21008 * C24516) *
                C50764) *
               C50603 * C1199) *
              C50821 +
          (((C19893 * C24519 + C19894 * C50878 + C19895 * C24520 +
             C19896 * C50879 + C19897 * C24521 + C19898 * C24516) *
                C50843 +
            (C31785 + C31786 + C31787 + C31788 + C31789 + C31790) * C50764) *
               C50603 * C50875 -
           ((C31274 + C31273 + C31272 + C31271 + C31270 + C31269) * C50764 +
            (C19896 * C24516 + C19895 * C24521 + C19894 * C50879 +
             C19893 * C24520 + (C19749 * C134 + C50538 * C144) * C50878 +
             (C19749 * C123 + C50538 * C130) * C24519) *
                C50843) *
               C50603 * C50874 -
           (((C19749 * C4061 + C50538 * C4065) * C24516 +
             (C19749 * C4059 + C50538 * C4063) * C24521 + C20378 * C50879 +
             C20377 * C24520 + C20376 * C50878 + C20375 * C24519) *
                C50764 +
            (C19900 * C24516 + C19899 * C24521 + C19898 * C50879 +
             C19897 * C24520 + C19896 * C50878 + C19895 * C24519) *
                C50843) *
               C50603 * C1199) *
              C50574)) /
        (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C24519 +
             (C19749 * C133 + C50538 * C143) * C50878 + C19885 * C24520 +
             C19886 * C50879 + C19887 * C24521 + C19888 * C24516) *
                C50843 +
            (C31257 + C31258 + C31259 + C31260 + C31261 + C31262) * C50764) *
               C50830 -
           ((C31263 + C31264 + C31265 + C31266 + C31267 + C31268) * C50764 +
            (C31262 + C31261 + C31260 + C31259 + C31258 + C31257) * C50843) *
               C50667) *
              C50874 +
          (((C31779 + C31780 + C31781 + C31782 + C31783 + C31784) * C50843 +
            (C32181 + C32182 + C32183 + C32184 + C32185 + C32186) * C50764) *
               C50667 -
           ((C31784 + C31783 + C31782 + C31781 + C31780 + C31779) * C50764 +
            (C19890 * C24516 + C19889 * C24521 + C19888 * C50879 +
             C19887 * C24520 + C19886 * C50878 + C19885 * C24519) *
                C50843) *
               C50830) *
              C50875 +
          (((C19887 * C24519 + C19888 * C50878 + C19889 * C24520 +
             C19890 * C50879 + C19892 * C24521 + C19891 * C24516) *
                C50843 +
            (C32673 + C32674 + C32675 + C32676 + C32677 + C32678) * C50764) *
               C50830 -
           (((C19749 * C20651 + C50538 * C20653) * C24516 +
             (C19749 * C20650 + C50538 * C20652) * C24521 + C20672 * C50879 +
             C20671 * C24520 + C20670 * C50878 + C20669 * C24519) *
                C50764 +
            (C32678 + C32677 + C32676 + C32675 + C32674 + C32673) * C50843) *
               C50667) *
              C1199) *
         C50568) /
        (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19749 * C122 + C50538 * C129) * C24519 +
            (C19749 * C133 + C50538 * C143) * C50878 + C19885 * C24520 +
            C19886 * C50879 + C19887 * C24521 + C19888 * C24516) *
               C50843 +
           (C31257 + C31258 + C31259 + C31260 + C31261 + C31262) * C50764) *
              C50603 * C964 -
          ((C31784 + C31783 + C31782 + C31781 + C31780 + C31779) * C50764 +
           (C19890 * C24516 + C19889 * C24521 + C19888 * C50879 +
            C19887 * C24520 + C19886 * C50878 + C19885 * C24519) *
               C50843) *
              C50603 * C965 +
          ((C19887 * C24519 + C19888 * C50878 + C19889 * C24520 +
            C19890 * C50879 + C19892 * C24521 + C19891 * C24516) *
               C50843 +
           (C20370 * C24519 + C20369 * C50878 + C20368 * C24520 +
            C20367 * C50879 + C21007 * C24521 + C21008 * C24516) *
               C50764) *
              C50603 * C966 -
          (((C19749 * C20999 + C50538 * C21001) * C24516 +
            (C19749 * C20998 + C50538 * C21000) * C24521 + C21008 * C50879 +
            C21007 * C24520 + C20367 * C50878 + C20368 * C24519) *
               C50764 +
           (C20552 * C24516 + C20551 * C24521 + C19891 * C50879 +
            C19892 * C24520 + C19890 * C50878 + C19889 * C24519) *
               C50843) *
              C50603 * C967) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C24519 +
             (C19749 * C133 + C50538 * C143) * C50878 + C19885 * C24520 +
             C19886 * C50879 + C19887 * C24521 + C19888 * C24516) *
                C50843 +
            (C31257 + C31258 + C31259 + C31260 + C31261 + C31262) * C50764) *
               C50603 * C893 -
           ((C31784 + C31783 + C31782 + C31781 + C31780 + C31779) * C50764 +
            (C19890 * C24516 + C19889 * C24521 + C19888 * C50879 +
             C19887 * C24520 + C19886 * C50878 + C19885 * C24519) *
                C50843) *
               C50603 * C50639) *
              C895 +
          (((C19893 * C24519 + C19894 * C50878 + C19895 * C24520 +
             C19896 * C50879 + C19897 * C24521 + C19898 * C24516) *
                C50843 +
            (C31785 + C31786 + C31787 + C31788 + C31789 + C31790) * C50764) *
               C50603 * C50639 -
           ((C31274 + C31273 + C31272 + C31271 + C31270 + C31269) * C50764 +
            (C19896 * C24516 + C19895 * C24521 + C19894 * C50879 +
             C19893 * C24520 + (C19749 * C134 + C50538 * C144) * C50878 +
             (C19749 * C123 + C50538 * C130) * C24519) *
                C50843) *
               C50603 * C893) *
              C896 +
          ((((C19749 * C124 + C50538 * C131) * C24519 +
             (C19749 * C135 + C50538 * C145) * C50878 + C20109 * C24520 +
             C20110 * C50879 + C20111 * C24521 + C20112 * C24516) *
                C50843 +
            (C31579 + C31580 + C31581 + C31582 + C31583 + C31584) * C50764) *
               C50603 * C893 -
           (((C19749 * C3076 + C50538 * C3080) * C24516 +
             (C19749 * C3071 + C50538 * C3077) * C24521 + C31432 * C50879 +
             C31431 * C24520 + C22236 * C50878 + C22235 * C24519) *
                C50764 +
            (C20114 * C24516 + C20113 * C24521 + C20112 * C50879 +
             C20111 * C24520 + C20110 * C50878 + C20109 * C24519) *
                C50843) *
               C50603 * C50639) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C24519 +
             (C19749 * C133 + C50538 * C143) * C50878 + C19885 * C24520 +
             C19886 * C50879 + C19887 * C24521 + C19888 * C24516) *
                C50843 +
            (C31257 + C31258 + C31259 + C31260 + C31261 + C31262) * C50764) *
               C391 -
           ((C31263 + C31264 + C31265 + C31266 + C31267 + C31268) * C50764 +
            (C31262 + C31261 + C31260 + C31259 + C31258 + C31257) * C50843) *
               C392 +
           ((C31268 + C31267 + C31266 + C31265 + C31264 + C31263) * C50843 +
            (C22050 * C24519 + C22049 * C50878 + C22048 * C24520 +
             C22047 * C50879 + C23022 * C24521 + C23023 * C24516) *
                C50764) *
               C393) *
              C893 +
          (((C31779 + C31780 + C31781 + C31782 + C31783 + C31784) * C50843 +
            (C32181 + C32182 + C32183 + C32184 + C32185 + C32186) * C50764) *
               C392 -
           ((C31784 + C31783 + C31782 + C31781 + C31780 + C31779) * C50764 +
            (C19890 * C24516 + C19889 * C24521 + C19888 * C50879 +
             C19887 * C24520 + C19886 * C50878 + C19885 * C24519) *
                C50843) *
               C391 -
           (((C19749 * C21271 + C50538 * C21273) * C24516 +
             (C19749 * C21270 + C50538 * C21272) * C24521 + C23023 * C50879 +
             C23022 * C24520 + C22047 * C50878 + C22048 * C24519) *
                C50764 +
            (C32186 + C32185 + C32184 + C32183 + C32182 + C32181) * C50843) *
               C393) *
              C50639) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19749 * C122 + C50538 * C129) * C24519 +
              (C19749 * C133 + C50538 * C143) * C50878 + C19885 * C24520 +
              C19886 * C50879 + C19887 * C24521 + C19888 * C24516) *
                 C50843 +
             (C31257 + C31258 + C31259 + C31260 + C31261 + C31262) * C50764) *
                C50830 -
            ((C31263 + C31264 + C31265 + C31266 + C31267 + C31268) * C50764 +
             (C31262 + C31261 + C31260 + C31259 + C31258 + C31257) * C50843) *
                C50667) *
               C893 +
           (((C31779 + C31780 + C31781 + C31782 + C31783 + C31784) * C50843 +
             (C32181 + C32182 + C32183 + C32184 + C32185 + C32186) * C50764) *
                C50667 -
            ((C31784 + C31783 + C31782 + C31781 + C31780 + C31779) * C50764 +
             (C19890 * C24516 + C19889 * C24521 + C19888 * C50879 +
              C19887 * C24520 + C19886 * C50878 + C19885 * C24519) *
                 C50843) *
                C50830) *
               C50639) *
              C50821 +
          ((((C31269 + C31270 + C31271 + C31272 + C31273 + C31274) * C50843 +
             (C31275 + C31276 + C31277 + C31278 + C31279 + C31280) * C50764) *
                C50667 -
            ((C31274 + C31273 + C31272 + C31271 + C31270 + C31269) * C50764 +
             (C19896 * C24516 + C19895 * C24521 + C19894 * C50879 +
              C19893 * C24520 + (C19749 * C134 + C50538 * C144) * C50878 +
              (C19749 * C123 + C50538 * C130) * C24519) *
                 C50843) *
                C50830) *
               C893 +
           (((C19893 * C24519 + C19894 * C50878 + C19895 * C24520 +
              C19896 * C50879 + C19897 * C24521 + C19898 * C24516) *
                 C50843 +
             (C31785 + C31786 + C31787 + C31788 + C31789 + C31790) * C50764) *
                C50830 -
            (((C19749 * C3543 + C50538 * C3547) * C24516 +
              (C19749 * C3541 + C50538 * C3545) * C24521 + C21856 * C50879 +
              C21855 * C24520 + C21854 * C50878 + C21853 * C24519) *
                 C50764 +
             (C31790 + C31789 + C31788 + C31787 + C31786 + C31785) * C50843) *
                C50667) *
               C50639) *
              C50574)) /
        (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C24519 +
             (C19749 * C133 + C50538 * C143) * C50878 + C19885 * C24520 +
             C19886 * C50879 + C19887 * C24521 + C19888 * C24516) *
                C50843 +
            (C31257 + C31258 + C31259 + C31260 + C31261 + C31262) * C50764) *
               C50603 * C893 -
           ((C31784 + C31783 + C31782 + C31781 + C31780 + C31779) * C50764 +
            (C19890 * C24516 + C19889 * C24521 + C19888 * C50879 +
             C19887 * C24520 + C19886 * C50878 + C19885 * C24519) *
                C50843) *
               C50603 * C50639) *
              C895 +
          (((C19893 * C24519 + C19894 * C50878 + C19895 * C24520 +
             C19896 * C50879 + C19897 * C24521 + C19898 * C24516) *
                C50843 +
            (C31785 + C31786 + C31787 + C31788 + C31789 + C31790) * C50764) *
               C50603 * C50639 -
           ((C31274 + C31273 + C31272 + C31271 + C31270 + C31269) * C50764 +
            (C19896 * C24516 + C19895 * C24521 + C19894 * C50879 +
             C19893 * C24520 + (C19749 * C134 + C50538 * C144) * C50878 +
             (C19749 * C123 + C50538 * C130) * C24519) *
                C50843) *
               C50603 * C893) *
              C896 +
          ((((C19749 * C124 + C50538 * C131) * C24519 +
             (C19749 * C135 + C50538 * C145) * C50878 + C20109 * C24520 +
             C20110 * C50879 + C20111 * C24521 + C20112 * C24516) *
                C50843 +
            (C31579 + C31580 + C31581 + C31582 + C31583 + C31584) * C50764) *
               C50603 * C893 -
           (((C19749 * C3076 + C50538 * C3080) * C24516 +
             (C19749 * C3071 + C50538 * C3077) * C24521 + C31432 * C50879 +
             C31431 * C24520 + C22236 * C50878 + C22235 * C24519) *
                C50764 +
            (C20114 * C24516 + C20113 * C24521 + C20112 * C50879 +
             C20111 * C24520 + C20110 * C50878 + C20109 * C24519) *
                C50843) *
               C50603 * C50639) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19749 * C122 + C50538 * C129) * C24519 +
            (C19749 * C133 + C50538 * C143) * C50878 + C19885 * C24520 +
            C19886 * C50879 + C19887 * C24521 + C19888 * C24516) *
               C50843 +
           (C31257 + C31258 + C31259 + C31260 + C31261 + C31262) * C50764) *
              C50603 * C964 -
          ((C31784 + C31783 + C31782 + C31781 + C31780 + C31779) * C50764 +
           (C19890 * C24516 + C19889 * C24521 + C19888 * C50879 +
            C19887 * C24520 + C19886 * C50878 + C19885 * C24519) *
               C50843) *
              C50603 * C965 +
          ((C19887 * C24519 + C19888 * C50878 + C19889 * C24520 +
            C19890 * C50879 + C19892 * C24521 + C19891 * C24516) *
               C50843 +
           (C20370 * C24519 + C20369 * C50878 + C20368 * C24520 +
            C20367 * C50879 + C21007 * C24521 + C21008 * C24516) *
               C50764) *
              C50603 * C966 -
          (((C19749 * C20999 + C50538 * C21001) * C24516 +
            (C19749 * C20998 + C50538 * C21000) * C24521 + C21008 * C50879 +
            C21007 * C24520 + C20367 * C50878 + C20368 * C24519) *
               C50764 +
           (C20552 * C24516 + C20551 * C24521 + C19891 * C50879 +
            C19892 * C24520 + C19890 * C50878 + C19889 * C24519) *
               C50843) *
              C50603 * C967) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19749 * C122 + C50538 * C129) * C24519 +
              (C19749 * C133 + C50538 * C143) * C50878 + C19885 * C24520 +
              C19886 * C50879 + C19887 * C24521 + C19888 * C24516) *
                 C50843 +
             (C31257 + C31258 + C31259 + C31260 + C31261 + C31262) * C50764) *
                C1544 -
            ((C31263 + C31264 + C31265 + C31266 + C31267 + C31268) * C50764 +
             (C31262 + C31261 + C31260 + C31259 + C31258 + C31257) * C50843) *
                C50667) *
               C50829 +
           (((C31779 + C31780 + C31781 + C31782 + C31783 + C31784) * C50843 +
             (C32181 + C32182 + C32183 + C32184 + C32185 + C32186) * C50764) *
                C50667 -
            ((C31784 + C31783 + C31782 + C31781 + C31780 + C31779) * C50764 +
             (C19890 * C24516 + C19889 * C24521 + C19888 * C50879 +
              C19887 * C24520 + C19886 * C50878 + C19885 * C24519) *
                 C50843) *
                C1544) *
               C50639) *
              C50821 +
          ((((C31269 + C31270 + C31271 + C31272 + C31273 + C31274) * C50843 +
             (C31275 + C31276 + C31277 + C31278 + C31279 + C31280) * C50764) *
                C50667 -
            ((C31274 + C31273 + C31272 + C31271 + C31270 + C31269) * C50764 +
             (C19896 * C24516 + C19895 * C24521 + C19894 * C50879 +
              C19893 * C24520 + (C19749 * C134 + C50538 * C144) * C50878 +
              (C19749 * C123 + C50538 * C130) * C24519) *
                 C50843) *
                C1544) *
               C50829 +
           (((C19893 * C24519 + C19894 * C50878 + C19895 * C24520 +
              C19896 * C50879 + C19897 * C24521 + C19898 * C24516) *
                 C50843 +
             (C31785 + C31786 + C31787 + C31788 + C31789 + C31790) * C50764) *
                C1544 -
            (((C19749 * C3543 + C50538 * C3547) * C24516 +
              (C19749 * C3541 + C50538 * C3545) * C24521 + C21856 * C50879 +
              C21855 * C24520 + C21854 * C50878 + C21853 * C24519) *
                 C50764 +
             (C31790 + C31789 + C31788 + C31787 + C31786 + C31785) * C50843) *
                C50667) *
               C50639) *
              C50574)) /
        (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C24519 +
             (C19749 * C133 + C50538 * C143) * C50878 + C19885 * C24520 +
             C19886 * C50879 + C19887 * C24521 + C19888 * C24516) *
                C50843 +
            (C31257 + C31258 + C31259 + C31260 + C31261 + C31262) * C50764) *
               C50876 -
           ((C31263 + C31264 + C31265 + C31266 + C31267 + C31268) * C50764 +
            (C31262 + C31261 + C31260 + C31259 + C31258 + C31257) * C50843) *
               C50877 +
           ((C31268 + C31267 + C31266 + C31265 + C31264 + C31263) * C50843 +
            (C33069 + C33070 + C33071 + C33072 + C33073 + C33074) * C50764) *
               C1960) *
              C50829 +
          (((C31779 + C31780 + C31781 + C31782 + C31783 + C31784) * C50843 +
            (C32181 + C32182 + C32183 + C32184 + C32185 + C32186) * C50764) *
               C50877 -
           ((C31784 + C31783 + C31782 + C31781 + C31780 + C31779) * C50764 +
            (C19890 * C24516 + C19889 * C24521 + C19888 * C50879 +
             C19887 * C24520 + C19886 * C50878 + C19885 * C24519) *
                C50843) *
               C50876 -
           (((C19749 * C21271 + C50538 * C21273) * C24516 +
             (C19749 * C21270 + C50538 * C21272) * C24521 + C23023 * C50879 +
             C23022 * C24520 + C22047 * C50878 + C22048 * C24519) *
                C50764 +
            (C32186 + C32185 + C32184 + C32183 + C32182 + C32181) * C50843) *
               C1960) *
              C50639) *
         C50568) /
        (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C24519 +
             (C19749 * C133 + C50538 * C143) * C50878 + C19885 * C24520 +
             C19886 * C50879 + C19887 * C24521 + C19888 * C24516) *
                C50843 +
            (C31257 + C31258 + C31259 + C31260 + C31261 + C31262) * C50764) *
               C1544 -
           ((C31263 + C31264 + C31265 + C31266 + C31267 + C31268) * C50764 +
            (C31262 + C31261 + C31260 + C31259 + C31258 + C31257) * C50843) *
               C50667) *
              C248 +
          (((C31779 + C31780 + C31781 + C31782 + C31783 + C31784) * C50843 +
            (C32181 + C32182 + C32183 + C32184 + C32185 + C32186) * C50764) *
               C50667 -
           ((C31784 + C31783 + C31782 + C31781 + C31780 + C31779) * C50764 +
            (C19890 * C24516 + C19889 * C24521 + C19888 * C50879 +
             C19887 * C24520 + C19886 * C50878 + C19885 * C24519) *
                C50843) *
               C1544) *
              C249 +
          (((C19887 * C24519 + C19888 * C50878 + C19889 * C24520 +
             C19890 * C50879 + C19892 * C24521 + C19891 * C24516) *
                C50843 +
            (C32673 + C32674 + C32675 + C32676 + C32677 + C32678) * C50764) *
               C1544 -
           (((C19749 * C20651 + C50538 * C20653) * C24516 +
             (C19749 * C20650 + C50538 * C20652) * C24521 + C20672 * C50879 +
             C20671 * C24520 + C20670 * C50878 + C20669 * C24519) *
                C50764 +
            (C32678 + C32677 + C32676 + C32675 + C32674 + C32673) * C50843) *
               C50667) *
              C250) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C24519 +
             (C19749 * C133 + C50538 * C143) * C50878 + C19885 * C24520 +
             C19886 * C50879 + C19887 * C24521 + C19888 * C24516) *
                C50843 +
            (C31257 + C31258 + C31259 + C31260 + C31261 + C31262) * C50764) *
               C1544 -
           ((C31263 + C31264 + C31265 + C31266 + C31267 + C31268) * C50764 +
            (C31262 + C31261 + C31260 + C31259 + C31258 + C31257) * C50843) *
               C50667) *
              C50587 * C895 +
          (((C31269 + C31270 + C31271 + C31272 + C31273 + C31274) * C50843 +
            (C31275 + C31276 + C31277 + C31278 + C31279 + C31280) * C50764) *
               C50667 -
           ((C31274 + C31273 + C31272 + C31271 + C31270 + C31269) * C50764 +
            (C19896 * C24516 + C19895 * C24521 + C19894 * C50879 +
             C19893 * C24520 + (C19749 * C134 + C50538 * C144) * C50878 +
             (C19749 * C123 + C50538 * C130) * C24519) *
                C50843) *
               C1544) *
              C50587 * C896 +
          ((((C19749 * C124 + C50538 * C131) * C24519 +
             (C19749 * C135 + C50538 * C145) * C50878 + C20109 * C24520 +
             C20110 * C50879 + C20111 * C24521 + C20112 * C24516) *
                C50843 +
            (C31579 + C31580 + C31581 + C31582 + C31583 + C31584) * C50764) *
               C1544 -
           (((C19749 * C2554 + C50538 * C2558) * C24516 +
             (C19749 * C2549 + C50538 * C2555) * C24521 + C22238 * C50879 +
             C22237 * C24520 + C22400 * C50878 + C22399 * C24519) *
                C50764 +
            (C31584 + C31583 + C31582 + C31581 + C31580 + C31579) * C50843) *
               C50667) *
              C50587 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19749 * C122 + C50538 * C129) * C24519 +
            (C19749 * C133 + C50538 * C143) * C50878 + C19885 * C24520 +
            C19886 * C50879 + C19887 * C24521 + C19888 * C24516) *
               C50843 +
           (C31257 + C31258 + C31259 + C31260 + C31261 + C31262) * C50764) *
              C1710 -
          ((C31263 + C31264 + C31265 + C31266 + C31267 + C31268) * C50764 +
           (C31262 + C31261 + C31260 + C31259 + C31258 + C31257) * C50843) *
              C1711 +
          ((C31268 + C31267 + C31266 + C31265 + C31264 + C31263) * C50843 +
           (C33069 + C33070 + C33071 + C33072 + C33073 + C33074) * C50764) *
              C1712 -
          (((C19749 * C23005 + C50538 * C23007) * C24516 +
            (C19749 * C23004 + C50538 * C23006) * C24521 + C23021 * C50879 +
            C23020 * C24520 + C23925 * C50878 + C23924 * C24519) *
               C50764 +
           (C33074 + C33073 + C33072 + C33071 + C33070 + C33069) * C50843) *
              C1713) *
         C50587 * C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C24519 +
             (C19749 * C133 + C50538 * C143) * C50878 + C19885 * C24520 +
             C19886 * C50879 + C19887 * C24521 + C19888 * C24516) *
                C50843 +
            (C31257 + C31258 + C31259 + C31260 + C31261 + C31262) * C50764) *
               C50876 -
           ((C31263 + C31264 + C31265 + C31266 + C31267 + C31268) * C50764 +
            (C31262 + C31261 + C31260 + C31259 + C31258 + C31257) * C50843) *
               C50877 +
           ((C31268 + C31267 + C31266 + C31265 + C31264 + C31263) * C50843 +
            (C33069 + C33070 + C33071 + C33072 + C33073 + C33074) * C50764) *
               C1960) *
              C50587 * C50821 +
          (((C31269 + C31270 + C31271 + C31272 + C31273 + C31274) * C50843 +
            (C31275 + C31276 + C31277 + C31278 + C31279 + C31280) * C50764) *
               C50877 -
           ((C31274 + C31273 + C31272 + C31271 + C31270 + C31269) * C50764 +
            (C19896 * C24516 + C19895 * C24521 + C19894 * C50879 +
             C19893 * C24520 + (C19749 * C134 + C50538 * C144) * C50878 +
             (C19749 * C123 + C50538 * C130) * C24519) *
                C50843) *
               C50876 -
           (((C19749 * C4475 + C50538 * C4483) * C24516 +
             (C19749 * C4471 + C50538 * C4477) * C24521 + C22058 * C50879 +
             C22057 * C24520 + C22056 * C50878 + C22055 * C24519) *
                C50764 +
            (C31280 + C31279 + C31278 + C31277 + C31276 + C31275) * C50843) *
               C1960) *
              C50587 * C50574)) /
        (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C24519 +
             (C19749 * C133 + C50538 * C143) * C50878 + C19885 * C24520 +
             C19886 * C50879 + C19887 * C24521 + C19888 * C24516) *
                C50843 +
            (C31257 + C31258 + C31259 + C31260 + C31261 + C31262) * C50764) *
               C1544 -
           ((C31263 + C31264 + C31265 + C31266 + C31267 + C31268) * C50764 +
            (C31262 + C31261 + C31260 + C31259 + C31258 + C31257) * C50843) *
               C50667) *
              C50587 * C895 +
          (((C31269 + C31270 + C31271 + C31272 + C31273 + C31274) * C50843 +
            (C31275 + C31276 + C31277 + C31278 + C31279 + C31280) * C50764) *
               C50667 -
           ((C31274 + C31273 + C31272 + C31271 + C31270 + C31269) * C50764 +
            (C19896 * C24516 + C19895 * C24521 + C19894 * C50879 +
             C19893 * C24520 + (C19749 * C134 + C50538 * C144) * C50878 +
             (C19749 * C123 + C50538 * C130) * C24519) *
                C50843) *
               C1544) *
              C50587 * C896 +
          ((((C19749 * C124 + C50538 * C131) * C24519 +
             (C19749 * C135 + C50538 * C145) * C50878 + C20109 * C24520 +
             C20110 * C50879 + C20111 * C24521 + C20112 * C24516) *
                C50843 +
            (C31579 + C31580 + C31581 + C31582 + C31583 + C31584) * C50764) *
               C1544 -
           (((C19749 * C2554 + C50538 * C2558) * C24516 +
             (C19749 * C2549 + C50538 * C2555) * C24521 + C22238 * C50879 +
             C22237 * C24520 + C22400 * C50878 + C22399 * C24519) *
                C50764 +
            (C31584 + C31583 + C31582 + C31581 + C31580 + C31579) * C50843) *
               C50667) *
              C50587 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C24519 +
             (C19749 * C133 + C50538 * C143) * C50878 + C19885 * C24520 +
             C19886 * C50879 + C19887 * C24521 + C19888 * C24516) *
                C50843 +
            (C31257 + C31258 + C31259 + C31260 + C31261 + C31262) * C50764) *
               C1544 -
           ((C31263 + C31264 + C31265 + C31266 + C31267 + C31268) * C50764 +
            (C31262 + C31261 + C31260 + C31259 + C31258 + C31257) * C50843) *
               C50667) *
              C248 +
          (((C31779 + C31780 + C31781 + C31782 + C31783 + C31784) * C50843 +
            (C32181 + C32182 + C32183 + C32184 + C32185 + C32186) * C50764) *
               C50667 -
           ((C31784 + C31783 + C31782 + C31781 + C31780 + C31779) * C50764 +
            (C19890 * C24516 + C19889 * C24521 + C19888 * C50879 +
             C19887 * C24520 + C19886 * C50878 + C19885 * C24519) *
                C50843) *
               C1544) *
              C249 +
          (((C19887 * C24519 + C19888 * C50878 + C19889 * C24520 +
             C19890 * C50879 + C19892 * C24521 + C19891 * C24516) *
                C50843 +
            (C32673 + C32674 + C32675 + C32676 + C32677 + C32678) * C50764) *
               C1544 -
           (((C19749 * C20651 + C50538 * C20653) * C24516 +
             (C19749 * C20650 + C50538 * C20652) * C24521 + C20672 * C50879 +
             C20671 * C24520 + C20670 * C50878 + C20669 * C24519) *
                C50764 +
            (C32678 + C32677 + C32676 + C32675 + C32674 + C32673) * C50843) *
               C50667) *
              C250) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19749 * C122 + C50538 * C129) * C19750 +
            (C19749 * C133 + C50538 * C143) * C19745 + C19885 * C19751 +
            C19886 * C19746 + C19887 * C19752 + C19888 * C19747 +
            C19889 * C19753 + C19890 * C19748) *
               C50700 * C50603 * C50829 -
           (C19891 * C19748 + C19892 * C19753 + C19890 * C19747 +
            C19889 * C19752 + C19888 * C19746 + C19887 * C19751 +
            C19886 * C19745 + C19885 * C19750) *
               C50700 * C50603 * C50639) *
              C50872 +
          ((C19893 * C19750 + C19894 * C19745 + C19895 * C19751 +
            C19896 * C19746 + C19897 * C19752 + C19898 * C19747 +
            C19899 * C19753 + C19900 * C19748) *
               C50700 * C50603 * C50639 -
           (C19898 * C19748 + C19897 * C19753 + C19896 * C19747 +
            C19895 * C19752 + C19894 * C19746 + C19893 * C19751 +
            (C19749 * C134 + C50538 * C144) * C19745 +
            (C19749 * C123 + C50538 * C130) * C19750) *
               C50700 * C50603 * C50829) *
              C50873 +
          (((C19749 * C124 + C50538 * C131) * C19750 +
            (C19749 * C135 + C50538 * C145) * C19745 + C20109 * C19751 +
            C20110 * C19746 + C20111 * C19752 + C20112 * C19747 +
            C20113 * C19753 + C20114 * C19748) *
               C50700 * C50603 * C50829 -
           ((C19749 * C2320 + C50538 * C2324) * C19748 +
            (C19749 * C2315 + C50538 * C2321) * C19753 + C20114 * C19747 +
            C20113 * C19752 + C20112 * C19746 + C20111 * C19751 +
            C20110 * C19745 + C20109 * C19750) *
               C50700 * C50603 * C50639) *
              C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
             C16965 * C124 + C16960 * C131) *
                C16966 +
            (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
             C16965 * C135 + C16960 * C145) *
                C16961 +
            (C17163 + C17164 + C17165) * C16967 +
            (C17166 + C17167 + C17168) * C50738) *
               C50700 * C50603 * C50829 -
           ((C17169 + C17170 + C17171) * C50738 +
            (C17172 + C17173 + C17174) * C16967 +
            (C17168 + C17167 + C17166) * C16961 +
            (C17165 + C17164 + C17163) * C16966) *
               C50700 * C50603 * C50639) *
              C50872 +
          (((C17175 + C17176 + C17177) * C16966 +
            (C17178 + C17179 + C17180) * C16961 +
            (C17181 + C17182 + C17183) * C16967 +
            (C17184 + C17185 + C17186) * C50738) *
               C50700 * C50603 * C50639 -
           ((C17180 + C17179 + C17178) * C50738 +
            (C17177 + C17176 + C17175) * C16967 +
            (C16965 * C136 + C16960 * C146 + C16964 * C135 + C16959 * C145 +
             C16963 * C134 + C16958 * C144) *
                C16961 +
            (C16965 * C125 + C16960 * C132 + C16964 * C124 + C16959 * C131 +
             C16963 * C123 + C16958 * C130) *
                C16966) *
               C50700 * C50603 * C50829) *
              C50873 +
          (((C16963 * C124 + C16958 * C131 + C16964 * C125 + C16959 * C132 +
             C16965 * C126 + C16960 * C138) *
                C16966 +
            (C16963 * C135 + C16958 * C145 + C16964 * C136 + C16959 * C146 +
             C16965 * C137 + C16960 * C147) *
                C16961 +
            (C17491 + C17492 + C17493) * C16967 +
            (C17494 + C17495 + C17496) * C50738) *
               C50700 * C50603 * C50829 -
           ((C16965 * C281 + C16960 * C292 + C16964 * C278 + C16959 * C290 +
             C16963 * C277 + C16958 * C289) *
                C50738 +
            (C16965 * C262 + C16960 * C282 + C16964 * C260 + C16959 * C274 +
             C16963 * C259 + C16958 * C273) *
                C16967 +
            (C17496 + C17495 + C17494) * C16961 +
            (C17493 + C17492 + C17491) * C16966) *
               C50700 * C50603 * C50639) *
              C536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C16966 +
             (C19749 * C133 + C50538 * C143) * C16961 + C19885 * C16967 +
             C19886 * C50738) *
                C5071 +
            (C22059 + C22060 + C22007 + C22008) * C5072 + C22079 * C5073) *
               C50603 * C50829 -
           ((C20670 * C50738 + C20669 * C16967 + C20668 * C16961 +
             C20667 * C16966) *
                C5073 +
            (C20369 * C50738 + C20370 * C16967 + C20371 * C16961 +
             C20372 * C16966) *
                C5072 +
            (C19888 * C50738 + C19887 * C16967 + C19886 * C16961 +
             C19885 * C16966) *
                C5071) *
               C50603 * C50639) *
              C50872 +
          (((C19893 * C16966 + C19894 * C16961 + C19895 * C16967 +
             C19896 * C50738) *
                C5071 +
            (C20373 * C16966 + C20374 * C16961 + C20375 * C16967 +
             C20376 * C50738) *
                C5072 +
            (C21853 * C16966 + C21854 * C16961 + C21855 * C16967 +
             C21856 * C50738) *
                C5073) *
               C50603 * C50639 -
           (C22080 * C5073 + (C22028 + C22027 + C22068 + C22067) * C5072 +
            (C19894 * C50738 + C19893 * C16967 +
             (C19749 * C134 + C50538 * C144) * C16961 +
             (C19749 * C123 + C50538 * C130) * C16966) *
                C5071) *
               C50603 * C50829) *
              C50873 +
          ((((C19749 * C124 + C50538 * C131) * C16966 +
             (C19749 * C135 + C50538 * C145) * C16961 + C20109 * C16967 +
             C20110 * C50738) *
                C5071 +
            ((C19749 * C395 + C50538 * C409) * C16966 +
             (C19749 * C405 + C50538 * C425) * C16961 + C22235 * C16967 +
             C22236 * C50738) *
                C5072 +
            ((C19749 * C400 + C50538 * C414) * C16966 +
             (C19749 * C418 + C50538 * C430) * C16961 + C22237 * C16967 +
             C22238 * C50738) *
                C5073) *
               C50603 * C50829 -
           (((C19749 * C2554 + C50538 * C2558) * C50738 +
             (C19749 * C2549 + C50538 * C2555) * C16967 + C22238 * C16961 +
             C22237 * C16966) *
                C5073 +
            ((C19749 * C1435 + C50538 * C1443) * C50738 +
             (C19749 * C1431 + C50538 * C1439) * C16967 + C22236 * C16961 +
             C22235 * C16966) *
                C5072 +
            (C20112 * C50738 + C20111 * C16967 + C20110 * C16961 +
             C20109 * C16966) *
                C5071) *
               C50603 * C50639) *
              C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C19750 +
             (C19749 * C133 + C50538 * C143) * C19745 + C19885 * C19751 +
             C19886 * C19746 + C19887 * C19752 + C19888 * C19747 +
             C19889 * C19753 + C19890 * C19748) *
                C50700 * C50830 -
            (C20367 * C19748 + C20368 * C19753 + C20369 * C19747 +
             C20370 * C19752 + C20371 * C19746 + C20372 * C19751 +
             (C19749 * C407 + C50538 * C427) * C19745 +
             (C19749 * C397 + C50538 * C411) * C19750) *
                C50700 * C50667) *
               C50829 +
           ((C20372 * C19750 + C20371 * C19745 + C20370 * C19751 +
             C20369 * C19746 + C20368 * C19752 + C20367 * C19747 +
             (C19749 * C4060 + C50538 * C4064) * C19753 +
             (C19749 * C4062 + C50538 * C4066) * C19748) *
                C50700 * C50667 -
            (C19891 * C19748 + C19892 * C19753 + C19890 * C19747 +
             C19889 * C19752 + C19888 * C19746 + C19887 * C19751 +
             C19886 * C19745 + C19885 * C19750) *
                C50700 * C50830) *
               C50639) *
              C251 +
          ((((C19749 * C396 + C50538 * C410) * C19750 +
             (C19749 * C406 + C50538 * C426) * C19745 + C20373 * C19751 +
             C20374 * C19746 + C20375 * C19752 + C20376 * C19747 +
             C20377 * C19753 + C20378 * C19748) *
                C50700 * C50667 -
            (C19898 * C19748 + C19897 * C19753 + C19896 * C19747 +
             C19895 * C19752 + C19894 * C19746 + C19893 * C19751 +
             (C19749 * C134 + C50538 * C144) * C19745 +
             (C19749 * C123 + C50538 * C130) * C19750) *
                C50700 * C50830) *
               C50829 +
           ((C19893 * C19750 + C19894 * C19745 + C19895 * C19751 +
             C19896 * C19746 + C19897 * C19752 + C19898 * C19747 +
             C19899 * C19753 + C19900 * C19748) *
                C50700 * C50830 -
            ((C19749 * C4061 + C50538 * C4065) * C19748 +
             (C19749 * C4059 + C50538 * C4063) * C19753 + C20378 * C19747 +
             C20377 * C19752 + C20376 * C19746 + C20375 * C19751 +
             C20374 * C19745 + C20373 * C19750) *
                C50700 * C50667) *
               C50639) *
              C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
              C16965 * C124 + C16960 * C131) *
                 C16966 +
             (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
              C16965 * C135 + C16960 * C145) *
                 C16961 +
             (C17163 + C17164 + C17165) * C16967 +
             (C17166 + C17167 + C17168) * C50738) *
                C50700 * C50830 -
            ((C17861 + C17862 + C17863) * C50738 +
             (C17864 + C17865 + C17866) * C16967 +
             (C16965 * C405 + C16960 * C425 + C16964 * C406 + C16959 * C426 +
              C16963 * C407 + C16958 * C427) *
                 C16961 +
             (C16965 * C395 + C16960 * C409 + C16964 * C396 + C16959 * C410 +
              C16963 * C397 + C16958 * C411) *
                 C16966) *
                C50700 * C50667) *
               C50829 +
           (((C17866 + C17865 + C17864) * C16966 +
             (C17863 + C17862 + C17861) * C16961 +
             (C16963 * C1433 + C16958 * C1441 + C16964 * C1432 +
              C16959 * C1440 + C16965 * C1431 + C16960 * C1439) *
                 C16967 +
             (C16963 * C1437 + C16958 * C1445 + C16964 * C1436 +
              C16959 * C1444 + C16965 * C1435 + C16960 * C1443) *
                 C50738) *
                C50700 * C50667 -
            ((C17169 + C17170 + C17171) * C50738 +
             (C17172 + C17173 + C17174) * C16967 +
             (C17168 + C17167 + C17166) * C16961 +
             (C17165 + C17164 + C17163) * C16966) *
                C50700 * C50830) *
               C50639) *
              C251 +
          ((((C16963 * C396 + C16958 * C410 + C16964 * C395 + C16959 * C409 +
              C16965 * C394 + C16960 * C408) *
                 C16966 +
             (C16963 * C406 + C16958 * C426 + C16964 * C405 + C16959 * C425 +
              C16965 * C404 + C16960 * C424) *
                 C16961 +
             (C17867 + C17868 + C17869) * C16967 +
             (C17870 + C17871 + C17872) * C50738) *
                C50700 * C50667 -
            ((C17180 + C17179 + C17178) * C50738 +
             (C17177 + C17176 + C17175) * C16967 +
             (C16965 * C136 + C16960 * C146 + C16964 * C135 + C16959 * C145 +
              C16963 * C134 + C16958 * C144) *
                 C16961 +
             (C16965 * C125 + C16960 * C132 + C16964 * C124 + C16959 * C131 +
              C16963 * C123 + C16958 * C130) *
                 C16966) *
                C50700 * C50830) *
               C50829 +
           (((C17175 + C17176 + C17177) * C16966 +
             (C17178 + C17179 + C17180) * C16961 +
             (C17181 + C17182 + C17183) * C16967 +
             (C17184 + C17185 + C17186) * C50738) *
                C50700 * C50830 -
            ((C16965 * C1434 + C16960 * C1442 + C16964 * C1435 +
              C16959 * C1443 + C16963 * C1436 + C16958 * C1444) *
                 C50738 +
             (C16965 * C1430 + C16960 * C1438 + C16964 * C1431 +
              C16959 * C1439 + C16963 * C1432 + C16958 * C1440) *
                 C16967 +
             (C17872 + C17871 + C17870) * C16961 +
             (C17869 + C17868 + C17867) * C16966) *
                C50700 * C50667) *
               C50639) *
              C50574)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C19749 * C122 + C50538 * C129) * C16966 +
              (C19749 * C133 + C50538 * C143) * C16961 + C19885 * C16967 +
              C19886 * C50738) *
                 C5071 +
             (C22059 + C22060 + C22007 + C22008) * C5072 + C22079 * C5073) *
                C50830 -
            ((C22063 + C22064 + C22065 + C22066) * C5073 +
             (C22014 + C22013 + C22062 + C22061) * C5072 +
             (C22008 + C22007 + C22060 + C22059) * C5071) *
                C50667) *
               C50829 +
           (((C22599 + C22600 + C22601 + C22602) * C5071 +
             (C22603 + C22604 + C22605 + C22606) * C5072 +
             (C22048 * C16966 + C22047 * C16961 +
              (C19749 * C4472 + C50538 * C4478) * C16967 +
              (C19749 * C4476 + C50538 * C4484) * C50738) *
                 C5073) *
                C50667 -
            ((C22606 + C22605 + C22604 + C22603) * C5073 +
             (C22602 + C22601 + C22600 + C22599) * C5072 +
             (C19888 * C50738 + C19887 * C16967 + C19886 * C16961 +
              C19885 * C16966) *
                 C5071) *
                C50830) *
               C50639) *
              C251 +
          ((((C22067 + C22068 + C22027 + C22028) * C5071 +
             (C22069 + C22070 + C22033 + C22034) * C5072 +
             (C22071 + C22072 + C22073 + C22074) * C5073) *
                C50667 -
            (C22080 * C5073 + (C22028 + C22027 + C22068 + C22067) * C5072 +
             (C19894 * C50738 + C19893 * C16967 +
              (C19749 * C134 + C50538 * C144) * C16961 +
              (C19749 * C123 + C50538 * C130) * C16966) *
                 C5071) *
                C50830) *
               C50829 +
           (((C19893 * C16966 + C19894 * C16961 + C19895 * C16967 +
              C19896 * C50738) *
                 C5071 +
             (C22607 + C22608 + C22609 + C22610) * C5072 +
             (C22611 + C22612 + C22613 + C22614) * C5073) *
                C50830 -
            (((C19749 * C4475 + C50538 * C4483) * C50738 +
              (C19749 * C4471 + C50538 * C4477) * C16967 + C22058 * C16961 +
              C22057 * C16966) *
                 C5073 +
             (C22614 + C22613 + C22612 + C22611) * C5072 +
             (C22610 + C22609 + C22608 + C22607) * C5071) *
                C50667) *
               C50639) *
              C50574)) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
                C16965 * C124 + C16960 * C131) *
                   C16966 +
               (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
                C16965 * C135 + C16960 * C145) *
                   C16961 +
               (C16963 * C256 + C16958 * C270 + C16964 * C255 + C16959 * C269 +
                C16965 * C254 + C16960 * C268) *
                   C16967 +
               (C16963 * C266 + C16958 * C286 + C16964 * C265 + C16959 * C285 +
                C16965 * C264 + C16960 * C284) *
                   C50738) *
                  C50700 * C50603 * C50587 * C113 -
              ((C16965 * C263 + C16960 * C283 + C16964 * C264 + C16959 * C284 +
                C16963 * C265 + C16958 * C285) *
                   C50738 +
               (C16965 * C253 + C16960 * C267 + C16964 * C254 + C16959 * C268 +
                C16963 * C255 + C16958 * C269) *
                   C16967 +
               (C16965 * C136 + C16960 * C146 + C16964 * C135 + C16959 * C145 +
                C16963 * C134 + C16958 * C144) *
                   C16961 +
               (C16965 * C125 + C16960 * C132 + C16964 * C124 + C16959 * C131 +
                C16963 * C123 + C16958 * C130) *
                   C16966) *
                  C50700 * C50603 * C50587 * C114 +
              ((C16963 * C124 + C16958 * C131 + C16964 * C125 + C16959 * C132 +
                C16965 * C126 + C16960 * C138) *
                   C16966 +
               (C16963 * C135 + C16958 * C145 + C16964 * C136 + C16959 * C146 +
                C16965 * C137 + C16960 * C147) *
                   C16961 +
               (C16963 * C254 + C16958 * C268 + C16964 * C253 + C16959 * C267 +
                C16965 * C261 + C16960 * C279) *
                   C16967 +
               (C16963 * C264 + C16958 * C284 + C16964 * C263 + C16959 * C283 +
                C16965 * C280 + C16960 * C291) *
                   C50738) *
                  C50700 * C50603 * C50587 * C115 -
              ((C16965 * C538 + C16960 * C540 + C16964 * C280 + C16959 * C291 +
                C16963 * C263 + C16958 * C283) *
                   C50738 +
               (C16965 * C537 + C16960 * C539 + C16964 * C261 + C16959 * C279 +
                C16963 * C253 + C16958 * C267) *
                   C16967 +
               (C16965 * C140 + C16960 * C148 + C16964 * C137 + C16959 * C147 +
                C16963 * C136 + C16958 * C146) *
                   C16961 +
               (C16965 * C127 + C16960 * C139 + C16964 * C126 + C16959 * C138 +
                C16963 * C125 + C16958 * C132) *
                   C16966) *
                  C50700 * C50603 * C50587 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
                 C16965 * C124 + C16960 * C131) *
                    C16966 +
                (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
                 C16965 * C135 + C16960 * C145) *
                    C16961 +
                (C17163 + C17164 + C17165) * C16967 +
                (C17166 + C17167 + C17168) * C50738) *
                   C50700 * C50603 * C248 -
               ((C17169 + C17170 + C17171) * C50738 +
                (C17172 + C17173 + C17174) * C16967 +
                (C17168 + C17167 + C17166) * C16961 +
                (C17165 + C17164 + C17163) * C16966) *
                   C50700 * C50603 * C249 +
               ((C17174 + C17173 + C17172) * C16966 +
                (C17171 + C17170 + C17169) * C16961 +
                (C16963 * C972 + C16958 * C980 + C16964 * C971 + C16959 * C979 +
                 C16965 * C970 + C16960 * C978) *
                    C16967 +
                (C16963 * C976 + C16958 * C984 + C16964 * C975 + C16959 * C983 +
                 C16965 * C974 + C16960 * C982) *
                    C50738) *
                   C50700 * C50603 * C250) *
                  C251 +
              (((C17175 + C17176 + C17177) * C16966 +
                (C17178 + C17179 + C17180) * C16961 +
                (C17181 + C17182 + C17183) * C16967 +
                (C17184 + C17185 + C17186) * C50738) *
                   C50700 * C50603 * C249 -
               ((C17180 + C17179 + C17178) * C50738 +
                (C17177 + C17176 + C17175) * C16967 +
                (C16965 * C136 + C16960 * C146 + C16964 * C135 + C16959 * C145 +
                 C16963 * C134 + C16958 * C144) *
                    C16961 +
                (C16965 * C125 + C16960 * C132 + C16964 * C124 + C16959 * C131 +
                 C16963 * C123 + C16958 * C130) *
                    C16966) *
                   C50700 * C50603 * C248 -
               ((C16965 * C973 + C16960 * C981 + C16964 * C974 + C16959 * C982 +
                 C16963 * C975 + C16958 * C983) *
                    C50738 +
                (C16965 * C969 + C16960 * C977 + C16964 * C970 + C16959 * C978 +
                 C16963 * C971 + C16958 * C979) *
                    C16967 +
                (C17186 + C17185 + C17184) * C16961 +
                (C17183 + C17182 + C17181) * C16966) *
                   C50700 * C50603 * C250) *
                  C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
             C16965 * C124 + C16960 * C131) *
                C16966 +
            (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
             C16965 * C135 + C16960 * C145) *
                C16961 +
            (C17163 + C17164 + C17165) * C16967 +
            (C17166 + C17167 + C17168) * C50738) *
               C50700 * C391 -
           ((C16965 * C786 + C16960 * C792 + C16964 * C785 + C16959 * C791 +
             C16963 * C784 + C16958 * C790) *
                C50738 +
            (C16965 * C777 + C16960 * C782 + C16964 * C776 + C16959 * C781 +
             C16963 * C775 + C16958 * C780) *
                C16967 +
            (C16965 * C405 + C16960 * C425 + C16964 * C406 + C16959 * C426 +
             C16963 * C407 + C16958 * C427) *
                C16961 +
            (C16965 * C395 + C16960 * C409 + C16964 * C396 + C16959 * C410 +
             C16963 * C397 + C16958 * C411) *
                C16966) *
               C50700 * C392 +
           ((C16963 * C398 + C16958 * C412 + C16964 * C399 + C16959 * C413 +
             C16965 * C400 + C16960 * C414) *
                C16966 +
            (C16963 * C416 + C16958 * C428 + C16964 * C417 + C16959 * C429 +
             C16965 * C418 + C16960 * C430) *
                C16961 +
            (C16963 * C1086 + C16958 * C1094 + C16964 * C1085 + C16959 * C1093 +
             C16965 * C1084 + C16960 * C1092) *
                C16967 +
            (C16963 * C1090 + C16958 * C1098 + C16964 * C1089 + C16959 * C1097 +
             C16965 * C1088 + C16960 * C1096) *
                C50738) *
               C50700 * C393) *
              C50587 * C251 +
          (((C16963 * C396 + C16958 * C410 + C16964 * C395 + C16959 * C409 +
             C16965 * C394 + C16960 * C408) *
                C16966 +
            (C16963 * C406 + C16958 * C426 + C16964 * C405 + C16959 * C425 +
             C16965 * C404 + C16960 * C424) *
                C16961 +
            (C16963 * C776 + C16958 * C781 + C16964 * C777 + C16959 * C782 +
             C16965 * C778 + C16960 * C783) *
                C16967 +
            (C16963 * C785 + C16958 * C791 + C16964 * C786 + C16959 * C792 +
             C16965 * C787 + C16960 * C793) *
                C50738) *
               C50700 * C392 -
           ((C17180 + C17179 + C17178) * C50738 +
            (C17177 + C17176 + C17175) * C16967 +
            (C16965 * C136 + C16960 * C146 + C16964 * C135 + C16959 * C145 +
             C16963 * C134 + C16958 * C144) *
                C16961 +
            (C16965 * C125 + C16960 * C132 + C16964 * C124 + C16959 * C131 +
             C16963 * C123 + C16958 * C130) *
                C16966) *
               C50700 * C391 -
           ((C16965 * C1087 + C16960 * C1095 + C16964 * C1088 + C16959 * C1096 +
             C16963 * C1089 + C16958 * C1097) *
                C50738 +
            (C16965 * C1083 + C16960 * C1091 + C16964 * C1084 + C16959 * C1092 +
             C16963 * C1085 + C16958 * C1093) *
                C16967 +
            (C16965 * C419 + C16960 * C431 + C16964 * C418 + C16959 * C430 +
             C16963 * C417 + C16958 * C429) *
                C16961 +
            (C16965 * C401 + C16960 * C415 + C16964 * C400 + C16959 * C414 +
             C16963 * C399 + C16958 * C413) *
                C16966) *
               C50700 * C393) *
              C50587 * C50574)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C19749 * C122 + C50538 * C129) * C19750 +
           (C19749 * C133 + C50538 * C143) * C19745 +
           (C19749 * C256 + C50538 * C270) * C19751 +
           (C19749 * C266 + C50538 * C286) * C19746 +
           (C19749 * C257 + C50538 * C271) * C19752 +
           (C19749 * C275 + C50538 * C287) * C19747 +
           (C19749 * C972 + C50538 * C980) * C19753 +
           (C19749 * C976 + C50538 * C984) * C19748) *
              C50700 * C50603 * C50587 * C113 -
          ((C19749 * C975 + C50538 * C983) * C19748 +
           (C19749 * C971 + C50538 * C979) * C19753 +
           (C19749 * C276 + C50538 * C288) * C19747 +
           (C19749 * C258 + C50538 * C272) * C19752 +
           (C19749 * C265 + C50538 * C285) * C19746 +
           (C19749 * C255 + C50538 * C269) * C19751 +
           (C19749 * C134 + C50538 * C144) * C19745 +
           (C19749 * C123 + C50538 * C130) * C19750) *
              C50700 * C50603 * C50587 * C114 +
          ((C19749 * C124 + C50538 * C131) * C19750 +
           (C19749 * C135 + C50538 * C145) * C19745 +
           (C19749 * C254 + C50538 * C268) * C19751 +
           (C19749 * C264 + C50538 * C284) * C19746 +
           (C19749 * C259 + C50538 * C273) * C19752 +
           (C19749 * C277 + C50538 * C289) * C19747 +
           (C19749 * C970 + C50538 * C978) * C19753 +
           (C19749 * C974 + C50538 * C982) * C19748) *
              C50700 * C50603 * C50587 * C115 -
          ((C19749 * C973 + C50538 * C981) * C19748 +
           (C19749 * C969 + C50538 * C977) * C19753 +
           (C19749 * C278 + C50538 * C290) * C19747 +
           (C19749 * C260 + C50538 * C274) * C19752 +
           (C19749 * C263 + C50538 * C283) * C19746 +
           (C19749 * C253 + C50538 * C267) * C19751 +
           (C19749 * C136 + C50538 * C146) * C19745 +
           (C19749 * C125 + C50538 * C132) * C19750) *
              C50700 * C50603 * C50587 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C19749 * C122 + C50538 * C129) * C19750 +
            (C19749 * C133 + C50538 * C143) * C19745 + C19885 * C19751 +
            C19886 * C19746 + C19887 * C19752 + C19888 * C19747 +
            C19889 * C19753 + C19890 * C19748) *
               C50700 * C50603 * C248 -
           (C19891 * C19748 + C19892 * C19753 + C19890 * C19747 +
            C19889 * C19752 + C19888 * C19746 + C19887 * C19751 +
            C19886 * C19745 + C19885 * C19750) *
               C50700 * C50603 * C249 +
           (C19887 * C19750 + C19888 * C19745 + C19889 * C19751 +
            C19890 * C19746 + C19892 * C19752 + C19891 * C19747 +
            (C19749 * C3374 + C50538 * C3378) * C19753 +
            (C19749 * C3376 + C50538 * C3380) * C19748) *
               C50700 * C50603 * C250) *
              C251 +
          ((C19893 * C19750 + C19894 * C19745 + C19895 * C19751 +
            C19896 * C19746 + C19897 * C19752 + C19898 * C19747 +
            C19899 * C19753 + C19900 * C19748) *
               C50700 * C50603 * C249 -
           (C19898 * C19748 + C19897 * C19753 + C19896 * C19747 +
            C19895 * C19752 + C19894 * C19746 + C19893 * C19751 +
            (C19749 * C134 + C50538 * C144) * C19745 +
            (C19749 * C123 + C50538 * C130) * C19750) *
               C50700 * C50603 * C248 -
           ((C19749 * C3375 + C50538 * C3379) * C19748 +
            (C19749 * C3373 + C50538 * C3377) * C19753 + C19900 * C19747 +
            C19899 * C19752 + C19898 * C19746 + C19897 * C19751 +
            C19896 * C19745 + C19895 * C19750) *
               C50700 * C50603 * C250) *
              C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19749 * C122 + C50538 * C129) * C19750 +
            (C19749 * C133 + C50538 * C143) * C19745 + C19885 * C19751 +
            C19886 * C19746 + C19887 * C19752 + C19888 * C19747 +
            C19889 * C19753 + C19890 * C19748) *
               C50700 * C391 -
           ((C19749 * C3074 + C50538 * C3078) * C19748 +
            (C19749 * C3069 + C50538 * C3072) * C19753 +
            (C19749 * C1437 + C50538 * C1445) * C19747 +
            (C19749 * C1433 + C50538 * C1441) * C19752 +
            (C19749 * C784 + C50538 * C790) * C19746 +
            (C19749 * C775 + C50538 * C780) * C19751 +
            (C19749 * C407 + C50538 * C427) * C19745 +
            (C19749 * C397 + C50538 * C411) * C19750) *
               C50700 * C392 +
           ((C19749 * C398 + C50538 * C412) * C19750 +
            (C19749 * C416 + C50538 * C428) * C19745 +
            (C19749 * C1086 + C50538 * C1094) * C19751 +
            (C19749 * C1090 + C50538 * C1098) * C19746 +
            (C19749 * C2547 + C50538 * C2550) * C19752 +
            (C19749 * C2552 + C50538 * C2556) * C19747 +
            (C19749 * C3542 + C50538 * C3546) * C19753 +
            (C19749 * C3544 + C50538 * C3548) * C19748) *
               C50700 * C393) *
              C50587 * C251 +
          (((C19749 * C396 + C50538 * C410) * C19750 +
            (C19749 * C406 + C50538 * C426) * C19745 +
            (C19749 * C776 + C50538 * C781) * C19751 +
            (C19749 * C785 + C50538 * C791) * C19746 +
            (C19749 * C1432 + C50538 * C1440) * C19752 +
            (C19749 * C1436 + C50538 * C1444) * C19747 +
            (C19749 * C3070 + C50538 * C3073) * C19753 +
            (C19749 * C3075 + C50538 * C3079) * C19748) *
               C50700 * C392 -
           (C19898 * C19748 + C19897 * C19753 + C19896 * C19747 +
            C19895 * C19752 + C19894 * C19746 + C19893 * C19751 +
            (C19749 * C134 + C50538 * C144) * C19745 +
            (C19749 * C123 + C50538 * C130) * C19750) *
               C50700 * C391 -
           ((C19749 * C3543 + C50538 * C3547) * C19748 +
            (C19749 * C3541 + C50538 * C3545) * C19753 +
            (C19749 * C2553 + C50538 * C2557) * C19747 +
            (C19749 * C2548 + C50538 * C2551) * C19752 +
            (C19749 * C1089 + C50538 * C1097) * C19746 +
            (C19749 * C1085 + C50538 * C1093) * C19751 +
            (C19749 * C417 + C50538 * C429) * C19745 +
            (C19749 * C399 + C50538 * C413) * C19750) *
               C50700 * C393) *
              C50587 * C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * ((((C19749 * C122 + C50538 * C129) * C16966 +
                                (C19749 * C133 + C50538 * C143) * C16961 +
                                C19885 * C16967 + C19886 * C50738) *
                                   C5071 +
                               ((C19749 * C397 + C50538 * C411) * C16966 +
                                (C19749 * C407 + C50538 * C427) * C16961 +
                                C20372 * C16967 + C20371 * C50738) *
                                   C5072 +
                               ((C19749 * C398 + C50538 * C412) * C16966 +
                                (C19749 * C416 + C50538 * C428) * C16961 +
                                C20667 * C16967 + C20668 * C50738) *
                                   C5073) *
                                  C50603 * C50587 * C113 -
                              (((C19749 * C1089 + C50538 * C1097) * C50738 +
                                (C19749 * C1085 + C50538 * C1093) * C16967 +
                                (C19749 * C417 + C50538 * C429) * C16961 +
                                (C19749 * C399 + C50538 * C413) * C16966) *
                                   C5073 +
                               (C20374 * C50738 + C20373 * C16967 +
                                (C19749 * C406 + C50538 * C426) * C16961 +
                                (C19749 * C396 + C50538 * C410) * C16966) *
                                   C5072 +
                               (C19894 * C50738 + C19893 * C16967 +
                                (C19749 * C134 + C50538 * C144) * C16961 +
                                (C19749 * C123 + C50538 * C130) * C16966) *
                                   C5071) *
                                  C50603 * C50587 * C114 +
                              (((C19749 * C124 + C50538 * C131) * C16966 +
                                (C19749 * C135 + C50538 * C145) * C16961 +
                                C20109 * C16967 + C20110 * C50738) *
                                   C5071 +
                               ((C19749 * C395 + C50538 * C409) * C16966 +
                                (C19749 * C405 + C50538 * C425) * C16961 +
                                (C19749 * C777 + C50538 * C782) * C16967 +
                                (C19749 * C786 + C50538 * C792) * C50738) *
                                   C5072 +
                               ((C19749 * C400 + C50538 * C414) * C16966 +
                                (C19749 * C418 + C50538 * C430) * C16961 +
                                (C19749 * C1084 + C50538 * C1092) * C16967 +
                                (C19749 * C1088 + C50538 * C1096) * C50738) *
                                   C5073) *
                                  C50603 * C50587 * C115 -
                              (((C19749 * C1087 + C50538 * C1095) * C50738 +
                                (C19749 * C1083 + C50538 * C1091) * C16967 +
                                (C19749 * C419 + C50538 * C431) * C16961 +
                                (C19749 * C401 + C50538 * C415) * C16966) *
                                   C5073 +
                               ((C19749 * C787 + C50538 * C793) * C50738 +
                                (C19749 * C778 + C50538 * C783) * C16967 +
                                (C19749 * C404 + C50538 * C424) * C16961 +
                                (C19749 * C394 + C50538 * C408) * C16966) *
                                   C5072 +
                               ((C19749 * C263 + C50538 * C283) * C50738 +
                                (C19749 * C253 + C50538 * C267) * C16967 +
                                (C19749 * C136 + C50538 * C146) * C16961 +
                                (C19749 * C125 + C50538 * C132) * C16966) *
                                   C5071) *
                                  C50603 * C50587 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((((C19749 * C122 + C50538 * C129) * C16966 +
                                 (C19749 * C133 + C50538 * C143) * C16961 +
                                 C19885 * C16967 + C19886 * C50738) *
                                    C5071 +
                                ((C19749 * C397 + C50538 * C411) * C16966 +
                                 (C19749 * C407 + C50538 * C427) * C16961 +
                                 C20372 * C16967 + C20371 * C50738) *
                                    C5072 +
                                ((C19749 * C398 + C50538 * C412) * C16966 +
                                 (C19749 * C416 + C50538 * C428) * C16961 +
                                 C20667 * C16967 + C20668 * C50738) *
                                    C5073) *
                                   C50603 * C248 -
                               ((C20670 * C50738 + C20669 * C16967 +
                                 C20668 * C16961 + C20667 * C16966) *
                                    C5073 +
                                (C20369 * C50738 + C20370 * C16967 +
                                 C20371 * C16961 + C20372 * C16966) *
                                    C5072 +
                                (C19888 * C50738 + C19887 * C16967 +
                                 C19886 * C16961 + C19885 * C16966) *
                                    C5071) *
                                   C50603 * C249 +
                               ((C19887 * C16966 + C19888 * C16961 +
                                 C19889 * C16967 + C19890 * C50738) *
                                    C5071 +
                                (C20370 * C16966 + C20369 * C16961 +
                                 C20368 * C16967 + C20367 * C50738) *
                                    C5072 +
                                (C20669 * C16966 + C20670 * C16961 +
                                 C20671 * C16967 + C20672 * C50738) *
                                    C5073) *
                                   C50603 * C250) *
                                  C251 +
                              (((C19893 * C16966 + C19894 * C16961 +
                                 C19895 * C16967 + C19896 * C50738) *
                                    C5071 +
                                (C20373 * C16966 + C20374 * C16961 +
                                 C20375 * C16967 + C20376 * C50738) *
                                    C5072 +
                                (C21853 * C16966 + C21854 * C16961 +
                                 C21855 * C16967 + C21856 * C50738) *
                                    C5073) *
                                   C50603 * C249 -
                               ((C21854 * C50738 + C21853 * C16967 +
                                 (C19749 * C417 + C50538 * C429) * C16961 +
                                 (C19749 * C399 + C50538 * C413) * C16966) *
                                    C5073 +
                                (C20374 * C50738 + C20373 * C16967 +
                                 (C19749 * C406 + C50538 * C426) * C16961 +
                                 (C19749 * C396 + C50538 * C410) * C16966) *
                                    C5072 +
                                (C19894 * C50738 + C19893 * C16967 +
                                 (C19749 * C134 + C50538 * C144) * C16961 +
                                 (C19749 * C123 + C50538 * C130) * C16966) *
                                    C5071) *
                                   C50603 * C248 -
                               (((C19749 * C3543 + C50538 * C3547) * C50738 +
                                 (C19749 * C3541 + C50538 * C3545) * C16967 +
                                 C21856 * C16961 + C21855 * C16966) *
                                    C5073 +
                                (C20378 * C50738 + C20377 * C16967 +
                                 C20376 * C16961 + C20375 * C16966) *
                                    C5072 +
                                (C19898 * C50738 + C19897 * C16967 +
                                 C19896 * C16961 + C19895 * C16966) *
                                    C5071) *
                                   C50603 * C250) *
                                  C50574)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C16966 +
             (C19749 * C133 + C50538 * C143) * C16961 + C19885 * C16967 +
             C19886 * C50738) *
                C5071 +
            (C22059 + C22060 + C22007 + C22008) * C5072 + C22079 * C5073) *
               C391 -
           ((C22063 + C22064 + C22065 + C22066) * C5073 +
            (C22014 + C22013 + C22062 + C22061) * C5072 +
            (C22008 + C22007 + C22060 + C22059) * C5071) *
               C392 +
           (C22079 * C5071 + (C22066 + C22065 + C22064 + C22063) * C5072 +
            ((C19749 * C5366 + C50538 * C5369) * C16966 +
             (C19749 * C5371 + C50538 * C5375) * C16961 +
             (C19749 * C6377 + C50538 * C6381) * C16967 +
             (C19749 * C6379 + C50538 * C6383) * C50738) *
                C5073) *
               C393) *
              C50587 * C251 +
          (((C22067 + C22068 + C22027 + C22028) * C5071 +
            (C22069 + C22070 + C22033 + C22034) * C5072 +
            (C22071 + C22072 + C22073 + C22074) * C5073) *
               C392 -
           (C22080 * C5073 + (C22028 + C22027 + C22068 + C22067) * C5072 +
            (C19894 * C50738 + C19893 * C16967 +
             (C19749 * C134 + C50538 * C144) * C16961 +
             (C19749 * C123 + C50538 * C130) * C16966) *
                C5071) *
               C391 -
           (((C19749 * C6378 + C50538 * C6382) * C50738 +
             (C19749 * C6376 + C50538 * C6380) * C16967 +
             (C19749 * C5372 + C50538 * C5376) * C16961 +
             (C19749 * C5367 + C50538 * C5370) * C16966) *
                C5073 +
            (C22074 + C22073 + C22072 + C22071) * C5072 + C22080 * C5071) *
               C393) *
              C50587 * C50574)) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19749 * C122 + C50538 * C129) * C19750 +
            (C19749 * C133 + C50538 * C143) * C19745 + C19885 * C19751 +
            C19886 * C19746 + C19887 * C19752 + C19888 * C19747 +
            C19889 * C19753 + C19890 * C19748) *
               C50700 * C50830 -
           ((C19749 * C3074 + C50538 * C3078) * C19748 +
            (C19749 * C3069 + C50538 * C3072) * C19753 +
            (C19749 * C1437 + C50538 * C1445) * C19747 +
            (C19749 * C1433 + C50538 * C1441) * C19752 +
            (C19749 * C784 + C50538 * C790) * C19746 +
            (C19749 * C775 + C50538 * C780) * C19751 +
            (C19749 * C407 + C50538 * C427) * C19745 +
            (C19749 * C397 + C50538 * C411) * C19750) *
               C50700 * C50667) *
              C50587 * C50872 +
          (((C19749 * C396 + C50538 * C410) * C19750 +
            (C19749 * C406 + C50538 * C426) * C19745 +
            (C19749 * C776 + C50538 * C781) * C19751 +
            (C19749 * C785 + C50538 * C791) * C19746 +
            (C19749 * C1432 + C50538 * C1440) * C19752 +
            (C19749 * C1436 + C50538 * C1444) * C19747 +
            (C19749 * C3070 + C50538 * C3073) * C19753 +
            (C19749 * C3075 + C50538 * C3079) * C19748) *
               C50700 * C50667 -
           (C19898 * C19748 + C19897 * C19753 + C19896 * C19747 +
            C19895 * C19752 + C19894 * C19746 + C19893 * C19751 +
            (C19749 * C134 + C50538 * C144) * C19745 +
            (C19749 * C123 + C50538 * C130) * C19750) *
               C50700 * C50830) *
              C50587 * C50873 +
          (((C19749 * C124 + C50538 * C131) * C19750 +
            (C19749 * C135 + C50538 * C145) * C19745 + C20109 * C19751 +
            C20110 * C19746 + C20111 * C19752 + C20112 * C19747 +
            C20113 * C19753 + C20114 * C19748) *
               C50700 * C50830 -
           ((C19749 * C3076 + C50538 * C3080) * C19748 +
            (C19749 * C3071 + C50538 * C3077) * C19753 +
            (C19749 * C1435 + C50538 * C1443) * C19747 +
            (C19749 * C1431 + C50538 * C1439) * C19752 +
            (C19749 * C786 + C50538 * C792) * C19746 +
            (C19749 * C777 + C50538 * C782) * C19751 +
            (C19749 * C405 + C50538 * C425) * C19745 +
            (C19749 * C395 + C50538 * C409) * C19750) *
               C50700 * C50667) *
              C50587 * C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
             C16965 * C124 + C16960 * C131) *
                C16966 +
            (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
             C16965 * C135 + C16960 * C145) *
                C16961 +
            (C17163 + C17164 + C17165) * C16967 +
            (C17166 + C17167 + C17168) * C50738) *
               C50700 * C50830 -
           ((C16965 * C786 + C16960 * C792 + C16964 * C785 + C16959 * C791 +
             C16963 * C784 + C16958 * C790) *
                C50738 +
            (C16965 * C777 + C16960 * C782 + C16964 * C776 + C16959 * C781 +
             C16963 * C775 + C16958 * C780) *
                C16967 +
            (C16965 * C405 + C16960 * C425 + C16964 * C406 + C16959 * C426 +
             C16963 * C407 + C16958 * C427) *
                C16961 +
            (C16965 * C395 + C16960 * C409 + C16964 * C396 + C16959 * C410 +
             C16963 * C397 + C16958 * C411) *
                C16966) *
               C50700 * C50667) *
              C50587 * C50872 +
          (((C16963 * C396 + C16958 * C410 + C16964 * C395 + C16959 * C409 +
             C16965 * C394 + C16960 * C408) *
                C16966 +
            (C16963 * C406 + C16958 * C426 + C16964 * C405 + C16959 * C425 +
             C16965 * C404 + C16960 * C424) *
                C16961 +
            (C16963 * C776 + C16958 * C781 + C16964 * C777 + C16959 * C782 +
             C16965 * C778 + C16960 * C783) *
                C16967 +
            (C16963 * C785 + C16958 * C791 + C16964 * C786 + C16959 * C792 +
             C16965 * C787 + C16960 * C793) *
                C50738) *
               C50700 * C50667 -
           ((C17180 + C17179 + C17178) * C50738 +
            (C17177 + C17176 + C17175) * C16967 +
            (C16965 * C136 + C16960 * C146 + C16964 * C135 + C16959 * C145 +
             C16963 * C134 + C16958 * C144) *
                C16961 +
            (C16965 * C125 + C16960 * C132 + C16964 * C124 + C16959 * C131 +
             C16963 * C123 + C16958 * C130) *
                C16966) *
               C50700 * C50830) *
              C50587 * C50873 +
          (((C16963 * C124 + C16958 * C131 + C16964 * C125 + C16959 * C132 +
             C16965 * C126 + C16960 * C138) *
                C16966 +
            (C16963 * C135 + C16958 * C145 + C16964 * C136 + C16959 * C146 +
             C16965 * C137 + C16960 * C147) *
                C16961 +
            (C17491 + C17492 + C17493) * C16967 +
            (C17494 + C17495 + C17496) * C50738) *
               C50700 * C50830 -
           ((C16965 * C788 + C16960 * C794 + C16964 * C787 + C16959 * C793 +
             C16963 * C786 + C16958 * C792) *
                C50738 +
            (C16965 * C779 + C16960 * C789 + C16964 * C778 + C16959 * C783 +
             C16963 * C777 + C16958 * C782) *
                C16967 +
            (C16965 * C421 + C16960 * C432 + C16964 * C404 + C16959 * C424 +
             C16963 * C405 + C16958 * C425) *
                C16961 +
            (C16965 * C402 + C16960 * C420 + C16964 * C394 + C16959 * C408 +
             C16963 * C395 + C16958 * C409) *
                C16966) *
               C50700 * C50667) *
              C50587 * C536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C16966 +
             (C19749 * C133 + C50538 * C143) * C16961 + C19885 * C16967 +
             C19886 * C50738) *
                C5071 +
            (C22059 + C22060 + C22007 + C22008) * C5072 + C22079 * C5073) *
               C50830 -
           ((C22063 + C22064 + C22065 + C22066) * C5073 +
            (C22014 + C22013 + C22062 + C22061) * C5072 +
            (C22008 + C22007 + C22060 + C22059) * C5071) *
               C50667) *
              C50587 * C50872 +
          (((C22067 + C22068 + C22027 + C22028) * C5071 +
            (C22069 + C22070 + C22033 + C22034) * C5072 +
            (C22071 + C22072 + C22073 + C22074) * C5073) *
               C50667 -
           (C22080 * C5073 + (C22028 + C22027 + C22068 + C22067) * C5072 +
            (C19894 * C50738 + C19893 * C16967 +
             (C19749 * C134 + C50538 * C144) * C16961 +
             (C19749 * C123 + C50538 * C130) * C16966) *
                C5071) *
               C50830) *
              C50587 * C50873 +
          ((((C19749 * C124 + C50538 * C131) * C16966 +
             (C19749 * C135 + C50538 * C145) * C16961 + C20109 * C16967 +
             C20110 * C50738) *
                C5071 +
            (C22401 + C22402 + C22389 + C22390) * C5072 +
            (C22403 + C22404 + C22395 + C22396) * C5073) *
               C50830 -
           (((C19749 * C5971 + C50538 * C5973) * C50738 +
             (C19749 * C5970 + C50538 * C5972) * C16967 +
             (C19749 * C1719 + C50538 * C1727) * C16961 +
             (C19749 * C1715 + C50538 * C1723) * C16966) *
                C5073 +
            (C22396 + C22395 + C22404 + C22403) * C5072 +
            (C22390 + C22389 + C22402 + C22401) * C5071) *
               C50667) *
              C50587 * C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] += (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C16963 * C122 + C16958 * C129 + C16964 * C123 +
                      C16959 * C130 + C16965 * C124 + C16960 * C131) *
                         C16966 +
                     (C16963 * C133 + C16958 * C143 + C16964 * C134 +
                      C16959 * C144 + C16965 * C135 + C16960 * C145) *
                         C16961 +
                     (C17163 + C17164 + C17165) * C16967 +
                     (C17166 + C17167 + C17168) * C50738) *
                        C50700 * C50603 * C248 -
                    ((C17169 + C17170 + C17171) * C50738 +
                     (C17172 + C17173 + C17174) * C16967 +
                     (C17168 + C17167 + C17166) * C16961 +
                     (C17165 + C17164 + C17163) * C16966) *
                        C50700 * C50603 * C249 +
                    ((C17174 + C17173 + C17172) * C16966 +
                     (C17171 + C17170 + C17169) * C16961 +
                     (C16963 * C972 + C16958 * C980 + C16964 * C971 +
                      C16959 * C979 + C16965 * C970 + C16960 * C978) *
                         C16967 +
                     (C16963 * C976 + C16958 * C984 + C16964 * C975 +
                      C16959 * C983 + C16965 * C974 + C16960 * C982) *
                         C50738) *
                        C50700 * C50603 * C250) *
                       C251 +
                   (((C17175 + C17176 + C17177) * C16966 +
                     (C17178 + C17179 + C17180) * C16961 +
                     (C17181 + C17182 + C17183) * C16967 +
                     (C17184 + C17185 + C17186) * C50738) *
                        C50700 * C50603 * C249 -
                    ((C17180 + C17179 + C17178) * C50738 +
                     (C17177 + C17176 + C17175) * C16967 +
                     (C16965 * C136 + C16960 * C146 + C16964 * C135 +
                      C16959 * C145 + C16963 * C134 + C16958 * C144) *
                         C16961 +
                     (C16965 * C125 + C16960 * C132 + C16964 * C124 +
                      C16959 * C131 + C16963 * C123 + C16958 * C130) *
                         C16966) *
                        C50700 * C50603 * C248 -
                    ((C16965 * C973 + C16960 * C981 + C16964 * C974 +
                      C16959 * C982 + C16963 * C975 + C16958 * C983) *
                         C50738 +
                     (C16965 * C969 + C16960 * C977 + C16964 * C970 +
                      C16959 * C978 + C16963 * C971 + C16958 * C979) *
                         C16967 +
                     (C17186 + C17185 + C17184) * C16961 +
                     (C17183 + C17182 + C17181) * C16966) *
                        C50700 * C50603 * C250) *
                       C50574)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((C16963 * C122 + C16958 * C129 + C16964 * C123 +
                     C16959 * C130 + C16965 * C124 + C16960 * C131) *
                        C16966 +
                    (C16963 * C133 + C16958 * C143 + C16964 * C134 +
                     C16959 * C144 + C16965 * C135 + C16960 * C145) *
                        C16961 +
                    (C16963 * C256 + C16958 * C270 + C16964 * C255 +
                     C16959 * C269 + C16965 * C254 + C16960 * C268) *
                        C16967 +
                    (C16963 * C266 + C16958 * C286 + C16964 * C265 +
                     C16959 * C285 + C16965 * C264 + C16960 * C284) *
                        C50738) *
                       C50700 * C50603 * C50587 * C113 -
                   ((C16965 * C263 + C16960 * C283 + C16964 * C264 +
                     C16959 * C284 + C16963 * C265 + C16958 * C285) *
                        C50738 +
                    (C16965 * C253 + C16960 * C267 + C16964 * C254 +
                     C16959 * C268 + C16963 * C255 + C16958 * C269) *
                        C16967 +
                    (C16965 * C136 + C16960 * C146 + C16964 * C135 +
                     C16959 * C145 + C16963 * C134 + C16958 * C144) *
                        C16961 +
                    (C16965 * C125 + C16960 * C132 + C16964 * C124 +
                     C16959 * C131 + C16963 * C123 + C16958 * C130) *
                        C16966) *
                       C50700 * C50603 * C50587 * C114 +
                   ((C16963 * C124 + C16958 * C131 + C16964 * C125 +
                     C16959 * C132 + C16965 * C126 + C16960 * C138) *
                        C16966 +
                    (C16963 * C135 + C16958 * C145 + C16964 * C136 +
                     C16959 * C146 + C16965 * C137 + C16960 * C147) *
                        C16961 +
                    (C16963 * C254 + C16958 * C268 + C16964 * C253 +
                     C16959 * C267 + C16965 * C261 + C16960 * C279) *
                        C16967 +
                    (C16963 * C264 + C16958 * C284 + C16964 * C263 +
                     C16959 * C283 + C16965 * C280 + C16960 * C291) *
                        C50738) *
                       C50700 * C50603 * C50587 * C115 -
                   ((C16965 * C538 + C16960 * C540 + C16964 * C280 +
                     C16959 * C291 + C16963 * C263 + C16958 * C283) *
                        C50738 +
                    (C16965 * C537 + C16960 * C539 + C16964 * C261 +
                     C16959 * C279 + C16963 * C253 + C16958 * C267) *
                        C16967 +
                    (C16965 * C140 + C16960 * C148 + C16964 * C137 +
                     C16959 * C147 + C16963 * C136 + C16958 * C146) *
                        C16961 +
                    (C16965 * C127 + C16960 * C139 + C16964 * C126 +
                     C16959 * C138 + C16963 * C125 + C16958 * C132) *
                        C16966) *
                       C50700 * C50603 * C50587 * C116)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((C19749 * C122 + C50538 * C129) * C19750 +
                    (C19749 * C133 + C50538 * C143) * C19745 +
                    (C19749 * C256 + C50538 * C270) * C19751 +
                    (C19749 * C266 + C50538 * C286) * C19746 +
                    (C19749 * C257 + C50538 * C271) * C19752 +
                    (C19749 * C275 + C50538 * C287) * C19747 +
                    (C19749 * C972 + C50538 * C980) * C19753 +
                    (C19749 * C976 + C50538 * C984) * C19748) *
                       C50700 * C50603 * C50587 * C113 -
                   ((C19749 * C975 + C50538 * C983) * C19748 +
                    (C19749 * C971 + C50538 * C979) * C19753 +
                    (C19749 * C276 + C50538 * C288) * C19747 +
                    (C19749 * C258 + C50538 * C272) * C19752 +
                    (C19749 * C265 + C50538 * C285) * C19746 +
                    (C19749 * C255 + C50538 * C269) * C19751 +
                    (C19749 * C134 + C50538 * C144) * C19745 +
                    (C19749 * C123 + C50538 * C130) * C19750) *
                       C50700 * C50603 * C50587 * C114 +
                   ((C19749 * C124 + C50538 * C131) * C19750 +
                    (C19749 * C135 + C50538 * C145) * C19745 +
                    (C19749 * C254 + C50538 * C268) * C19751 +
                    (C19749 * C264 + C50538 * C284) * C19746 +
                    (C19749 * C259 + C50538 * C273) * C19752 +
                    (C19749 * C277 + C50538 * C289) * C19747 +
                    (C19749 * C970 + C50538 * C978) * C19753 +
                    (C19749 * C974 + C50538 * C982) * C19748) *
                       C50700 * C50603 * C50587 * C115 -
                   ((C19749 * C973 + C50538 * C981) * C19748 +
                    (C19749 * C969 + C50538 * C977) * C19753 +
                    (C19749 * C278 + C50538 * C290) * C19747 +
                    (C19749 * C260 + C50538 * C274) * C19752 +
                    (C19749 * C263 + C50538 * C283) * C19746 +
                    (C19749 * C253 + C50538 * C267) * C19751 +
                    (C19749 * C136 + C50538 * C146) * C19745 +
                    (C19749 * C125 + C50538 * C132) * C19750) *
                       C50700 * C50603 * C50587 * C116)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C19749 * C122 + C50538 * C129) * C19750 +
                     (C19749 * C133 + C50538 * C143) * C19745 +
                     C19885 * C19751 + C19886 * C19746 + C19887 * C19752 +
                     C19888 * C19747 + C19889 * C19753 + C19890 * C19748) *
                        C50700 * C50603 * C248 -
                    (C19891 * C19748 + C19892 * C19753 + C19890 * C19747 +
                     C19889 * C19752 + C19888 * C19746 + C19887 * C19751 +
                     C19886 * C19745 + C19885 * C19750) *
                        C50700 * C50603 * C249 +
                    (C19887 * C19750 + C19888 * C19745 + C19889 * C19751 +
                     C19890 * C19746 + C19892 * C19752 + C19891 * C19747 +
                     (C19749 * C3374 + C50538 * C3378) * C19753 +
                     (C19749 * C3376 + C50538 * C3380) * C19748) *
                        C50700 * C50603 * C250) *
                       C251 +
                   ((C19893 * C19750 + C19894 * C19745 + C19895 * C19751 +
                     C19896 * C19746 + C19897 * C19752 + C19898 * C19747 +
                     C19899 * C19753 + C19900 * C19748) *
                        C50700 * C50603 * C249 -
                    (C19898 * C19748 + C19897 * C19753 + C19896 * C19747 +
                     C19895 * C19752 + C19894 * C19746 + C19893 * C19751 +
                     (C19749 * C134 + C50538 * C144) * C19745 +
                     (C19749 * C123 + C50538 * C130) * C19750) *
                        C50700 * C50603 * C248 -
                    ((C19749 * C3375 + C50538 * C3379) * C19748 +
                     (C19749 * C3373 + C50538 * C3377) * C19753 +
                     C19900 * C19747 + C19899 * C19752 + C19898 * C19746 +
                     C19897 * C19751 + C19896 * C19745 + C19895 * C19750) *
                        C50700 * C50603 * C250) *
                       C50574)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C19749 * C122 + C50538 * C129) * C16966 +
                     (C19749 * C133 + C50538 * C143) * C16961 +
                     C19885 * C16967 + C19886 * C50738) *
                        C5071 +
                    ((C19749 * C397 + C50538 * C411) * C16966 +
                     (C19749 * C407 + C50538 * C427) * C16961 +
                     C20372 * C16967 + C20371 * C50738) *
                        C5072 +
                    ((C19749 * C398 + C50538 * C412) * C16966 +
                     (C19749 * C416 + C50538 * C428) * C16961 +
                     C20667 * C16967 + C20668 * C50738) *
                        C5073) *
                       C50603 * C50587 * C113 -
                   (((C19749 * C1089 + C50538 * C1097) * C50738 +
                     (C19749 * C1085 + C50538 * C1093) * C16967 +
                     (C19749 * C417 + C50538 * C429) * C16961 +
                     (C19749 * C399 + C50538 * C413) * C16966) *
                        C5073 +
                    (C20374 * C50738 + C20373 * C16967 +
                     (C19749 * C406 + C50538 * C426) * C16961 +
                     (C19749 * C396 + C50538 * C410) * C16966) *
                        C5072 +
                    (C19894 * C50738 + C19893 * C16967 +
                     (C19749 * C134 + C50538 * C144) * C16961 +
                     (C19749 * C123 + C50538 * C130) * C16966) *
                        C5071) *
                       C50603 * C50587 * C114 +
                   (((C19749 * C124 + C50538 * C131) * C16966 +
                     (C19749 * C135 + C50538 * C145) * C16961 +
                     C20109 * C16967 + C20110 * C50738) *
                        C5071 +
                    ((C19749 * C395 + C50538 * C409) * C16966 +
                     (C19749 * C405 + C50538 * C425) * C16961 +
                     (C19749 * C777 + C50538 * C782) * C16967 +
                     (C19749 * C786 + C50538 * C792) * C50738) *
                        C5072 +
                    ((C19749 * C400 + C50538 * C414) * C16966 +
                     (C19749 * C418 + C50538 * C430) * C16961 +
                     (C19749 * C1084 + C50538 * C1092) * C16967 +
                     (C19749 * C1088 + C50538 * C1096) * C50738) *
                        C5073) *
                       C50603 * C50587 * C115 -
                   (((C19749 * C1087 + C50538 * C1095) * C50738 +
                     (C19749 * C1083 + C50538 * C1091) * C16967 +
                     (C19749 * C419 + C50538 * C431) * C16961 +
                     (C19749 * C401 + C50538 * C415) * C16966) *
                        C5073 +
                    ((C19749 * C787 + C50538 * C793) * C50738 +
                     (C19749 * C778 + C50538 * C783) * C16967 +
                     (C19749 * C404 + C50538 * C424) * C16961 +
                     (C19749 * C394 + C50538 * C408) * C16966) *
                        C5072 +
                    ((C19749 * C263 + C50538 * C283) * C50738 +
                     (C19749 * C253 + C50538 * C267) * C16967 +
                     (C19749 * C136 + C50538 * C146) * C16961 +
                     (C19749 * C125 + C50538 * C132) * C16966) *
                        C5071) *
                       C50603 * C50587 * C116)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C19749 * C122 + C50538 * C129) * C16966 +
                      (C19749 * C133 + C50538 * C143) * C16961 +
                      C19885 * C16967 + C19886 * C50738) *
                         C5071 +
                     ((C19749 * C397 + C50538 * C411) * C16966 +
                      (C19749 * C407 + C50538 * C427) * C16961 +
                      C20372 * C16967 + C20371 * C50738) *
                         C5072 +
                     ((C19749 * C398 + C50538 * C412) * C16966 +
                      (C19749 * C416 + C50538 * C428) * C16961 +
                      C20667 * C16967 + C20668 * C50738) *
                         C5073) *
                        C50603 * C248 -
                    ((C20670 * C50738 + C20669 * C16967 + C20668 * C16961 +
                      C20667 * C16966) *
                         C5073 +
                     (C20369 * C50738 + C20370 * C16967 + C20371 * C16961 +
                      C20372 * C16966) *
                         C5072 +
                     (C19888 * C50738 + C19887 * C16967 + C19886 * C16961 +
                      C19885 * C16966) *
                         C5071) *
                        C50603 * C249 +
                    ((C19887 * C16966 + C19888 * C16961 + C19889 * C16967 +
                      C19890 * C50738) *
                         C5071 +
                     (C20370 * C16966 + C20369 * C16961 + C20368 * C16967 +
                      C20367 * C50738) *
                         C5072 +
                     (C20669 * C16966 + C20670 * C16961 + C20671 * C16967 +
                      C20672 * C50738) *
                         C5073) *
                        C50603 * C250) *
                       C251 +
                   (((C19893 * C16966 + C19894 * C16961 + C19895 * C16967 +
                      C19896 * C50738) *
                         C5071 +
                     (C20373 * C16966 + C20374 * C16961 + C20375 * C16967 +
                      C20376 * C50738) *
                         C5072 +
                     (C21853 * C16966 + C21854 * C16961 + C21855 * C16967 +
                      C21856 * C50738) *
                         C5073) *
                        C50603 * C249 -
                    ((C21854 * C50738 + C21853 * C16967 +
                      (C19749 * C417 + C50538 * C429) * C16961 +
                      (C19749 * C399 + C50538 * C413) * C16966) *
                         C5073 +
                     (C20374 * C50738 + C20373 * C16967 +
                      (C19749 * C406 + C50538 * C426) * C16961 +
                      (C19749 * C396 + C50538 * C410) * C16966) *
                         C5072 +
                     (C19894 * C50738 + C19893 * C16967 +
                      (C19749 * C134 + C50538 * C144) * C16961 +
                      (C19749 * C123 + C50538 * C130) * C16966) *
                         C5071) *
                        C50603 * C248 -
                    (((C19749 * C3543 + C50538 * C3547) * C50738 +
                      (C19749 * C3541 + C50538 * C3545) * C16967 +
                      C21856 * C16961 + C21855 * C16966) *
                         C5073 +
                     (C20378 * C50738 + C20377 * C16967 + C20376 * C16961 +
                      C20375 * C16966) *
                         C5072 +
                     (C19898 * C50738 + C19897 * C16967 + C19896 * C16961 +
                      C19895 * C16966) *
                         C5071) *
                        C50603 * C250) *
                       C50574)) /
                     (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19749 * C122 + C50538 * C129) * C19750 +
            (C19749 * C133 + C50538 * C143) * C19745 + C19885 * C19751 +
            C19886 * C19746 + C19887 * C19752 + C19888 * C19747 +
            C19889 * C19753 + C19890 * C19748) *
               C50700 * C50603 * C50874 -
           (C19891 * C19748 + C19892 * C19753 + C19890 * C19747 +
            C19889 * C19752 + C19888 * C19746 + C19887 * C19751 +
            C19886 * C19745 + C19885 * C19750) *
               C50700 * C50603 * C50875 +
           (C19887 * C19750 + C19888 * C19745 + C19889 * C19751 +
            C19890 * C19746 + C19892 * C19752 + C19891 * C19747 +
            C20551 * C19753 + C20552 * C19748) *
               C50700 * C50603 * C1199) *
              C50821 +
          ((C19893 * C19750 + C19894 * C19745 + C19895 * C19751 +
            C19896 * C19746 + C19897 * C19752 + C19898 * C19747 +
            C19899 * C19753 + C19900 * C19748) *
               C50700 * C50603 * C50875 -
           (C19898 * C19748 + C19897 * C19753 + C19896 * C19747 +
            C19895 * C19752 + C19894 * C19746 + C19893 * C19751 +
            (C19749 * C134 + C50538 * C144) * C19745 +
            (C19749 * C123 + C50538 * C130) * C19750) *
               C50700 * C50603 * C50874 -
           ((C19749 * C3375 + C50538 * C3379) * C19748 +
            (C19749 * C3373 + C50538 * C3377) * C19753 + C19900 * C19747 +
            C19899 * C19752 + C19898 * C19746 + C19897 * C19751 +
            C19896 * C19745 + C19895 * C19750) *
               C50700 * C50603 * C1199) *
              C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
             C16965 * C124 + C16960 * C131) *
                C16966 +
            (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
             C16965 * C135 + C16960 * C145) *
                C16961 +
            (C17163 + C17164 + C17165) * C16967 +
            (C17166 + C17167 + C17168) * C50738) *
               C50700 * C50603 * C50874 -
           ((C17169 + C17170 + C17171) * C50738 +
            (C17172 + C17173 + C17174) * C16967 +
            (C17168 + C17167 + C17166) * C16961 +
            (C17165 + C17164 + C17163) * C16966) *
               C50700 * C50603 * C50875 +
           ((C17174 + C17173 + C17172) * C16966 +
            (C17171 + C17170 + C17169) * C16961 +
            (C18129 + C18130 + C18131) * C16967 +
            (C18132 + C18133 + C18134) * C50738) *
               C50700 * C50603 * C1199) *
              C50821 +
          (((C17175 + C17176 + C17177) * C16966 +
            (C17178 + C17179 + C17180) * C16961 +
            (C17181 + C17182 + C17183) * C16967 +
            (C17184 + C17185 + C17186) * C50738) *
               C50700 * C50603 * C50875 -
           ((C17180 + C17179 + C17178) * C50738 +
            (C17177 + C17176 + C17175) * C16967 +
            (C16965 * C136 + C16960 * C146 + C16964 * C135 + C16959 * C145 +
             C16963 * C134 + C16958 * C144) *
                C16961 +
            (C16965 * C125 + C16960 * C132 + C16964 * C124 + C16959 * C131 +
             C16963 * C123 + C16958 * C130) *
                C16966) *
               C50700 * C50603 * C50874 -
           ((C16965 * C973 + C16960 * C981 + C16964 * C974 + C16959 * C982 +
             C16963 * C975 + C16958 * C983) *
                C50738 +
            (C16965 * C969 + C16960 * C977 + C16964 * C970 + C16959 * C978 +
             C16963 * C971 + C16958 * C979) *
                C16967 +
            (C17186 + C17185 + C17184) * C16961 +
            (C17183 + C17182 + C17181) * C16966) *
               C50700 * C50603 * C1199) *
              C50574)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C16966 +
             (C19749 * C133 + C50538 * C143) * C16961 + C19885 * C16967 +
             C19886 * C50738) *
                C5071 +
            (C22059 + C22060 + C22007 + C22008) * C5072 + C22079 * C5073) *
               C50603 * C50874 -
           (C23027 * C5073 + (C22602 + C22601 + C22600 + C22599) * C5072 +
            (C19888 * C50738 + C19887 * C16967 + C19886 * C16961 +
             C19885 * C16966) *
                C5071) *
               C50603 * C50875 +
           ((C19887 * C16966 + C19888 * C16961 + C19889 * C16967 +
             C19890 * C50738) *
                C5071 +
            (C20370 * C16966 + C20369 * C16961 + C20368 * C16967 +
             C20367 * C50738) *
                C5072 +
            (C20669 * C16966 + C20670 * C16961 + C20671 * C16967 +
             C20672 * C50738) *
                C5073) *
               C50603 * C1199) *
              C50821 +
          (((C19893 * C16966 + C19894 * C16961 + C19895 * C16967 +
             C19896 * C50738) *
                C5071 +
            (C22607 + C22608 + C22609 + C22610) * C5072 +
            (C22611 + C22612 + C22613 + C22614) * C5073) *
               C50603 * C50875 -
           (C22080 * C5073 + (C22028 + C22027 + C22068 + C22067) * C5072 +
            (C19894 * C50738 + C19893 * C16967 +
             (C19749 * C134 + C50538 * C144) * C16961 +
             (C19749 * C123 + C50538 * C130) * C16966) *
                C5071) *
               C50603 * C50874 -
           (((C19749 * C3543 + C50538 * C3547) * C50738 +
             (C19749 * C3541 + C50538 * C3545) * C16967 + C21856 * C16961 +
             C21855 * C16966) *
                C5073 +
            (C20378 * C50738 + C20377 * C16967 + C20376 * C16961 +
             C20375 * C16966) *
                C5072 +
            (C19898 * C50738 + C19897 * C16967 + C19896 * C16961 +
             C19895 * C16966) *
                C5071) *
               C50603 * C1199) *
              C50574)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19749 * C122 + C50538 * C129) * C19750 +
            (C19749 * C133 + C50538 * C143) * C19745 + C19885 * C19751 +
            C19886 * C19746 + C19887 * C19752 + C19888 * C19747 +
            C19889 * C19753 + C19890 * C19748) *
               C50700 * C50830 -
           (C20367 * C19748 + C20368 * C19753 + C20369 * C19747 +
            C20370 * C19752 + C20371 * C19746 + C20372 * C19751 +
            (C19749 * C407 + C50538 * C427) * C19745 +
            (C19749 * C397 + C50538 * C411) * C19750) *
               C50700 * C50667) *
              C50874 +
          ((C20372 * C19750 + C20371 * C19745 + C20370 * C19751 +
            C20369 * C19746 + C20368 * C19752 + C20367 * C19747 +
            C21007 * C19753 + C21008 * C19748) *
               C50700 * C50667 -
           (C19891 * C19748 + C19892 * C19753 + C19890 * C19747 +
            C19889 * C19752 + C19888 * C19746 + C19887 * C19751 +
            C19886 * C19745 + C19885 * C19750) *
               C50700 * C50830) *
              C50875 +
          ((C19887 * C19750 + C19888 * C19745 + C19889 * C19751 +
            C19890 * C19746 + C19892 * C19752 + C19891 * C19747 +
            C20551 * C19753 + C20552 * C19748) *
               C50700 * C50830 -
           ((C19749 * C20999 + C50538 * C21001) * C19748 +
            (C19749 * C20998 + C50538 * C21000) * C19753 + C21008 * C19747 +
            C21007 * C19752 + C20367 * C19746 + C20368 * C19751 +
            C20369 * C19745 + C20370 * C19750) *
               C50700 * C50667) *
              C1199) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
             C16965 * C124 + C16960 * C131) *
                C16966 +
            (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
             C16965 * C135 + C16960 * C145) *
                C16961 +
            (C17163 + C17164 + C17165) * C16967 +
            (C17166 + C17167 + C17168) * C50738) *
               C50700 * C50830 -
           ((C17861 + C17862 + C17863) * C50738 +
            (C17864 + C17865 + C17866) * C16967 +
            (C16965 * C405 + C16960 * C425 + C16964 * C406 + C16959 * C426 +
             C16963 * C407 + C16958 * C427) *
                C16961 +
            (C16965 * C395 + C16960 * C409 + C16964 * C396 + C16959 * C410 +
             C16963 * C397 + C16958 * C411) *
                C16966) *
               C50700 * C50667) *
              C50874 +
          (((C17866 + C17865 + C17864) * C16966 +
            (C17863 + C17862 + C17861) * C16961 +
            (C18797 + C18798 + C18799) * C16967 +
            (C18800 + C18801 + C18802) * C50738) *
               C50700 * C50667 -
           ((C17169 + C17170 + C17171) * C50738 +
            (C17172 + C17173 + C17174) * C16967 +
            (C17168 + C17167 + C17166) * C16961 +
            (C17165 + C17164 + C17163) * C16966) *
               C50700 * C50830) *
              C50875 +
          (((C17174 + C17173 + C17172) * C16966 +
            (C17171 + C17170 + C17169) * C16961 +
            (C18129 + C18130 + C18131) * C16967 +
            (C18132 + C18133 + C18134) * C50738) *
               C50700 * C50830 -
           ((C16965 * C3076 + C16960 * C3080 + C16964 * C3075 + C16959 * C3079 +
             C16963 * C3074 + C16958 * C3078) *
                C50738 +
            (C16965 * C3071 + C16960 * C3077 + C16964 * C3070 + C16959 * C3073 +
             C16963 * C3069 + C16958 * C3072) *
                C16967 +
            (C18802 + C18801 + C18800) * C16961 +
            (C18799 + C18798 + C18797) * C16966) *
               C50700 * C50667) *
              C1199) *
         C50568) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C16966 +
             (C19749 * C133 + C50538 * C143) * C16961 + C19885 * C16967 +
             C19886 * C50738) *
                C5071 +
            (C22059 + C22060 + C22007 + C22008) * C5072 + C22079 * C5073) *
               C50830 -
           ((C22063 + C22064 + C22065 + C22066) * C5073 +
            (C22014 + C22013 + C22062 + C22061) * C5072 +
            (C22008 + C22007 + C22060 + C22059) * C5071) *
               C50667) *
              C50874 +
          (((C22599 + C22600 + C22601 + C22602) * C5071 +
            (C22603 + C22604 + C22605 + C22606) * C5072 +
            (C23013 + C23014 + C23025 + C23026) * C5073) *
               C50667 -
           (C23027 * C5073 + (C22602 + C22601 + C22600 + C22599) * C5072 +
            (C19888 * C50738 + C19887 * C16967 + C19886 * C16961 +
             C19885 * C16966) *
                C5071) *
               C50830) *
              C50875 +
          (((C19887 * C16966 + C19888 * C16961 + C19889 * C16967 +
             C19890 * C50738) *
                C5071 +
            (C23514 + C23515 + C23516 + C23517) * C5072 +
            (C23518 + C23519 + C23520 + C23521) * C5073) *
               C50830 -
           (((C19749 * C21271 + C50538 * C21273) * C50738 +
             (C19749 * C21270 + C50538 * C21272) * C16967 + C23023 * C16961 +
             C23022 * C16966) *
                C5073 +
            (C23521 + C23520 + C23519 + C23518) * C5072 +
            (C23517 + C23516 + C23515 + C23514) * C5071) *
               C50667) *
              C1199) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
                 C16965 * C124 + C16960 * C131) *
                    C16966 +
                (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
                 C16965 * C135 + C16960 * C145) *
                    C16961 +
                (C17163 + C17164 + C17165) * C16967 +
                (C17166 + C17167 + C17168) * C50738) *
                   C50700 * C50603 * C893 -
               ((C17169 + C17170 + C17171) * C50738 +
                (C17172 + C17173 + C17174) * C16967 +
                (C17168 + C17167 + C17166) * C16961 +
                (C17165 + C17164 + C17163) * C16966) *
                   C50700 * C50603 * C50639) *
                  C895 +
              (((C17175 + C17176 + C17177) * C16966 +
                (C17178 + C17179 + C17180) * C16961 +
                (C17181 + C17182 + C17183) * C16967 +
                (C17184 + C17185 + C17186) * C50738) *
                   C50700 * C50603 * C50639 -
               ((C17180 + C17179 + C17178) * C50738 +
                (C17177 + C17176 + C17175) * C16967 +
                (C16965 * C136 + C16960 * C146 + C16964 * C135 + C16959 * C145 +
                 C16963 * C134 + C16958 * C144) *
                    C16961 +
                (C16965 * C125 + C16960 * C132 + C16964 * C124 + C16959 * C131 +
                 C16963 * C123 + C16958 * C130) *
                    C16966) *
                   C50700 * C50603 * C893) *
                  C896 +
              (((C16963 * C124 + C16958 * C131 + C16964 * C125 + C16959 * C132 +
                 C16965 * C126 + C16960 * C138) *
                    C16966 +
                (C16963 * C135 + C16958 * C145 + C16964 * C136 + C16959 * C146 +
                 C16965 * C137 + C16960 * C147) *
                    C16961 +
                (C17491 + C17492 + C17493) * C16967 +
                (C17494 + C17495 + C17496) * C50738) *
                   C50700 * C50603 * C893 -
               ((C16965 * C281 + C16960 * C292 + C16964 * C278 + C16959 * C290 +
                 C16963 * C277 + C16958 * C289) *
                    C50738 +
                (C16965 * C262 + C16960 * C282 + C16964 * C260 + C16959 * C274 +
                 C16963 * C259 + C16958 * C273) *
                    C16967 +
                (C17496 + C17495 + C17494) * C16961 +
                (C17493 + C17492 + C17491) * C16966) *
                   C50700 * C50603 * C50639) *
                  C897) +
         0.5 * std::pow(Pi, 2.5) *
             (((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
                C16965 * C124 + C16960 * C131) *
                   C16966 +
               (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
                C16965 * C135 + C16960 * C145) *
                   C16961 +
               (C17163 + C17164 + C17165) * C16967 +
               (C17166 + C17167 + C17168) * C50738) *
                  C50700 * C50603 * C964 -
              ((C17169 + C17170 + C17171) * C50738 +
               (C17172 + C17173 + C17174) * C16967 +
               (C17168 + C17167 + C17166) * C16961 +
               (C17165 + C17164 + C17163) * C16966) *
                  C50700 * C50603 * C965 +
              ((C17174 + C17173 + C17172) * C16966 +
               (C17171 + C17170 + C17169) * C16961 +
               (C18129 + C18130 + C18131) * C16967 +
               (C18132 + C18133 + C18134) * C50738) *
                  C50700 * C50603 * C966 -
              ((C16965 * C2320 + C16960 * C2324 + C16964 * C2319 +
                C16959 * C2323 + C16963 * C2318 + C16958 * C2322) *
                   C50738 +
               (C16965 * C2315 + C16960 * C2321 + C16964 * C2314 +
                C16959 * C2317 + C16963 * C2313 + C16958 * C2316) *
                   C16967 +
               (C18134 + C18133 + C18132) * C16961 +
               (C18131 + C18130 + C18129) * C16966) *
                  C50700 * C50603 * C967) *
             C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
             C16965 * C124 + C16960 * C131) *
                C16966 +
            (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
             C16965 * C135 + C16960 * C145) *
                C16961 +
            (C17163 + C17164 + C17165) * C16967 +
            (C17166 + C17167 + C17168) * C50738) *
               C50700 * C391 -
           ((C17861 + C17862 + C17863) * C50738 +
            (C17864 + C17865 + C17866) * C16967 +
            (C16965 * C405 + C16960 * C425 + C16964 * C406 + C16959 * C426 +
             C16963 * C407 + C16958 * C427) *
                C16961 +
            (C16965 * C395 + C16960 * C409 + C16964 * C396 + C16959 * C410 +
             C16963 * C397 + C16958 * C411) *
                C16966) *
               C50700 * C392 +
           ((C16963 * C398 + C16958 * C412 + C16964 * C399 + C16959 * C413 +
             C16965 * C400 + C16960 * C414) *
                C16966 +
            (C16963 * C416 + C16958 * C428 + C16964 * C417 + C16959 * C429 +
             C16965 * C418 + C16960 * C430) *
                C16961 +
            (C18293 + C18294 + C18295) * C16967 +
            (C18296 + C18297 + C18298) * C50738) *
               C50700 * C393) *
              C893 +
          (((C17866 + C17865 + C17864) * C16966 +
            (C17863 + C17862 + C17861) * C16961 +
            (C16963 * C1433 + C16958 * C1441 + C16964 * C1432 + C16959 * C1440 +
             C16965 * C1431 + C16960 * C1439) *
                C16967 +
            (C16963 * C1437 + C16958 * C1445 + C16964 * C1436 + C16959 * C1444 +
             C16965 * C1435 + C16960 * C1443) *
                C50738) *
               C50700 * C392 -
           ((C17169 + C17170 + C17171) * C50738 +
            (C17172 + C17173 + C17174) * C16967 +
            (C17168 + C17167 + C17166) * C16961 +
            (C17165 + C17164 + C17163) * C16966) *
               C50700 * C391 -
           ((C16965 * C2554 + C16960 * C2558 + C16964 * C2553 + C16959 * C2557 +
             C16963 * C2552 + C16958 * C2556) *
                C50738 +
            (C16965 * C2549 + C16960 * C2555 + C16964 * C2548 + C16959 * C2551 +
             C16963 * C2547 + C16958 * C2550) *
                C16967 +
            (C18298 + C18297 + C18296) * C16961 +
            (C18295 + C18294 + C18293) * C16966) *
               C50700 * C393) *
              C50639) *
         C50568) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C19749 * C122 + C50538 * C129) * C19750 +
            (C19749 * C133 + C50538 * C143) * C19745 + C19885 * C19751 +
            C19886 * C19746 + C19887 * C19752 + C19888 * C19747 +
            C19889 * C19753 + C19890 * C19748) *
               C50700 * C50603 * C893 -
           (C19891 * C19748 + C19892 * C19753 + C19890 * C19747 +
            C19889 * C19752 + C19888 * C19746 + C19887 * C19751 +
            C19886 * C19745 + C19885 * C19750) *
               C50700 * C50603 * C50639) *
              C895 +
          ((C19893 * C19750 + C19894 * C19745 + C19895 * C19751 +
            C19896 * C19746 + C19897 * C19752 + C19898 * C19747 +
            C19899 * C19753 + C19900 * C19748) *
               C50700 * C50603 * C50639 -
           (C19898 * C19748 + C19897 * C19753 + C19896 * C19747 +
            C19895 * C19752 + C19894 * C19746 + C19893 * C19751 +
            (C19749 * C134 + C50538 * C144) * C19745 +
            (C19749 * C123 + C50538 * C130) * C19750) *
               C50700 * C50603 * C893) *
              C896 +
          (((C19749 * C124 + C50538 * C131) * C19750 +
            (C19749 * C135 + C50538 * C145) * C19745 + C20109 * C19751 +
            C20110 * C19746 + C20111 * C19752 + C20112 * C19747 +
            C20113 * C19753 + C20114 * C19748) *
               C50700 * C50603 * C893 -
           ((C19749 * C2320 + C50538 * C2324) * C19748 +
            (C19749 * C2315 + C50538 * C2321) * C19753 + C20114 * C19747 +
            C20113 * C19752 + C20112 * C19746 + C20111 * C19751 +
            C20110 * C19745 + C20109 * C19750) *
               C50700 * C50603 * C50639) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C19749 * C122 + C50538 * C129) * C19750 +
           (C19749 * C133 + C50538 * C143) * C19745 + C19885 * C19751 +
           C19886 * C19746 + C19887 * C19752 + C19888 * C19747 +
           C19889 * C19753 + C19890 * C19748) *
              C50700 * C50603 * C964 -
          (C19891 * C19748 + C19892 * C19753 + C19890 * C19747 +
           C19889 * C19752 + C19888 * C19746 + C19887 * C19751 +
           C19886 * C19745 + C19885 * C19750) *
              C50700 * C50603 * C965 +
          (C19887 * C19750 + C19888 * C19745 + C19889 * C19751 +
           C19890 * C19746 + C19892 * C19752 + C19891 * C19747 +
           C20551 * C19753 + C20552 * C19748) *
              C50700 * C50603 * C966 -
          ((C19749 * C20543 + C50538 * C20545) * C19748 +
           (C19749 * C20542 + C50538 * C20544) * C19753 + C20552 * C19747 +
           C20551 * C19752 + C19891 * C19746 + C19892 * C19751 +
           C19890 * C19745 + C19889 * C19750) *
              C50700 * C50603 * C967) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19749 * C122 + C50538 * C129) * C19750 +
            (C19749 * C133 + C50538 * C143) * C19745 + C19885 * C19751 +
            C19886 * C19746 + C19887 * C19752 + C19888 * C19747 +
            C19889 * C19753 + C19890 * C19748) *
               C50700 * C391 -
           (C20367 * C19748 + C20368 * C19753 + C20369 * C19747 +
            C20370 * C19752 + C20371 * C19746 + C20372 * C19751 +
            (C19749 * C407 + C50538 * C427) * C19745 +
            (C19749 * C397 + C50538 * C411) * C19750) *
               C50700 * C392 +
           ((C19749 * C398 + C50538 * C412) * C19750 +
            (C19749 * C416 + C50538 * C428) * C19745 + C20667 * C19751 +
            C20668 * C19746 + C20669 * C19752 + C20670 * C19747 +
            C20671 * C19753 + C20672 * C19748) *
               C50700 * C393) *
              C893 +
          ((C20372 * C19750 + C20371 * C19745 + C20370 * C19751 +
            C20369 * C19746 + C20368 * C19752 + C20367 * C19747 +
            (C19749 * C4060 + C50538 * C4064) * C19753 +
            (C19749 * C4062 + C50538 * C4066) * C19748) *
               C50700 * C392 -
           (C19891 * C19748 + C19892 * C19753 + C19890 * C19747 +
            C19889 * C19752 + C19888 * C19746 + C19887 * C19751 +
            C19886 * C19745 + C19885 * C19750) *
               C50700 * C391 -
           ((C19749 * C20651 + C50538 * C20653) * C19748 +
            (C19749 * C20650 + C50538 * C20652) * C19753 + C20672 * C19747 +
            C20671 * C19752 + C20670 * C19746 + C20669 * C19751 +
            C20668 * C19745 + C20667 * C19750) *
               C50700 * C393) *
              C50639) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C16966 +
             (C19749 * C133 + C50538 * C143) * C16961 + C19885 * C16967 +
             C19886 * C50738) *
                C5071 +
            (C22059 + C22060 + C22007 + C22008) * C5072 + C22079 * C5073) *
               C50603 * C893 -
           ((C22606 + C22605 + C22604 + C22603) * C5073 +
            (C22602 + C22601 + C22600 + C22599) * C5072 +
            (C19888 * C50738 + C19887 * C16967 + C19886 * C16961 +
             C19885 * C16966) *
                C5071) *
               C50603 * C50639) *
              C895 +
          (((C19893 * C16966 + C19894 * C16961 + C19895 * C16967 +
             C19896 * C50738) *
                C5071 +
            (C22607 + C22608 + C22609 + C22610) * C5072 +
            (C22611 + C22612 + C22613 + C22614) * C5073) *
               C50603 * C50639 -
           (C22080 * C5073 + (C22028 + C22027 + C22068 + C22067) * C5072 +
            (C19894 * C50738 + C19893 * C16967 +
             (C19749 * C134 + C50538 * C144) * C16961 +
             (C19749 * C123 + C50538 * C130) * C16966) *
                C5071) *
               C50603 * C893) *
              C896 +
          ((((C19749 * C124 + C50538 * C131) * C16966 +
             (C19749 * C135 + C50538 * C145) * C16961 + C20109 * C16967 +
             C20110 * C50738) *
                C5071 +
            (C22401 + C22402 + C22389 + C22390) * C5072 +
            (C22403 + C22404 + C22395 + C22396) * C5073) *
               C50603 * C893 -
           (((C19749 * C2554 + C50538 * C2558) * C50738 +
             (C19749 * C2549 + C50538 * C2555) * C16967 + C22238 * C16961 +
             C22237 * C16966) *
                C5073 +
            ((C19749 * C1435 + C50538 * C1443) * C50738 +
             (C19749 * C1431 + C50538 * C1439) * C16967 + C22236 * C16961 +
             C22235 * C16966) *
                C5072 +
            (C20112 * C50738 + C20111 * C16967 + C20110 * C16961 +
             C20109 * C16966) *
                C5071) *
               C50603 * C50639) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19749 * C122 + C50538 * C129) * C16966 +
            (C19749 * C133 + C50538 * C143) * C16961 + C19885 * C16967 +
            C19886 * C50738) *
               C5071 +
           (C22059 + C22060 + C22007 + C22008) * C5072 + C22079 * C5073) *
              C50603 * C964 -
          ((C22606 + C22605 + C22604 + C22603) * C5073 +
           (C22602 + C22601 + C22600 + C22599) * C5072 +
           (C19888 * C50738 + C19887 * C16967 + C19886 * C16961 +
            C19885 * C16966) *
               C5071) *
              C50603 * C965 +
          ((C19887 * C16966 + C19888 * C16961 + C19889 * C16967 +
            C19890 * C50738) *
               C5071 +
           (C20370 * C16966 + C20369 * C16961 + C20368 * C16967 +
            C20367 * C50738) *
               C5072 +
           (C20669 * C16966 + C20670 * C16961 + C20671 * C16967 +
            C20672 * C50738) *
               C5073) *
              C50603 * C966 -
          (((C19749 * C20651 + C50538 * C20653) * C50738 +
            (C19749 * C20650 + C50538 * C20652) * C16967 + C20672 * C16961 +
            C20671 * C16966) *
               C5073 +
           (C21008 * C50738 + C21007 * C16967 + C20367 * C16961 +
            C20368 * C16966) *
               C5072 +
           (C19891 * C50738 + C19892 * C16967 + C19890 * C16961 +
            C19889 * C16966) *
               C5071) *
              C50603 * C967) *
         C50568) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C16966 +
             (C19749 * C133 + C50538 * C143) * C16961 + C19885 * C16967 +
             C19886 * C50738) *
                C5071 +
            (C22059 + C22060 + C22007 + C22008) * C5072 + C22079 * C5073) *
               C391 -
           ((C22063 + C22064 + C22065 + C22066) * C5073 +
            (C22014 + C22013 + C22062 + C22061) * C5072 +
            (C22008 + C22007 + C22060 + C22059) * C5071) *
               C392 +
           (C22079 * C5071 + (C22066 + C22065 + C22064 + C22063) * C5072 +
            ((C19749 * C5366 + C50538 * C5369) * C16966 +
             (C19749 * C5371 + C50538 * C5375) * C16961 + C23020 * C16967 +
             C23021 * C50738) *
                C5073) *
               C393) *
              C893 +
          (((C22599 + C22600 + C22601 + C22602) * C5071 +
            (C22603 + C22604 + C22605 + C22606) * C5072 +
            (C23013 + C23014 + C23025 + C23026) * C5073) *
               C392 -
           (C23027 * C5073 + (C22602 + C22601 + C22600 + C22599) * C5072 +
            (C19888 * C50738 + C19887 * C16967 + C19886 * C16961 +
             C19885 * C16966) *
                C5071) *
               C391 -
           (((C19749 * C23005 + C50538 * C23007) * C50738 +
             (C19749 * C23004 + C50538 * C23006) * C16967 + C23021 * C16961 +
             C23020 * C16966) *
                C5073 +
            (C23026 + C23025 + C23014 + C23013) * C5072 + C23027 * C5071) *
               C393) *
              C50639) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C19750 +
             (C19749 * C133 + C50538 * C143) * C19745 + C19885 * C19751 +
             C19886 * C19746 + C19887 * C19752 + C19888 * C19747 +
             C19889 * C19753 + C19890 * C19748) *
                C50700 * C50830 -
            (C20367 * C19748 + C20368 * C19753 + C20369 * C19747 +
             C20370 * C19752 + C20371 * C19746 + C20372 * C19751 +
             (C19749 * C407 + C50538 * C427) * C19745 +
             (C19749 * C397 + C50538 * C411) * C19750) *
                C50700 * C50667) *
               C893 +
           ((C20372 * C19750 + C20371 * C19745 + C20370 * C19751 +
             C20369 * C19746 + C20368 * C19752 + C20367 * C19747 +
             (C19749 * C4060 + C50538 * C4064) * C19753 +
             (C19749 * C4062 + C50538 * C4066) * C19748) *
                C50700 * C50667 -
            (C19891 * C19748 + C19892 * C19753 + C19890 * C19747 +
             C19889 * C19752 + C19888 * C19746 + C19887 * C19751 +
             C19886 * C19745 + C19885 * C19750) *
                C50700 * C50830) *
               C50639) *
              C50821 +
          ((((C19749 * C396 + C50538 * C410) * C19750 +
             (C19749 * C406 + C50538 * C426) * C19745 + C20373 * C19751 +
             C20374 * C19746 + C20375 * C19752 + C20376 * C19747 +
             C20377 * C19753 + C20378 * C19748) *
                C50700 * C50667 -
            (C19898 * C19748 + C19897 * C19753 + C19896 * C19747 +
             C19895 * C19752 + C19894 * C19746 + C19893 * C19751 +
             (C19749 * C134 + C50538 * C144) * C19745 +
             (C19749 * C123 + C50538 * C130) * C19750) *
                C50700 * C50830) *
               C893 +
           ((C19893 * C19750 + C19894 * C19745 + C19895 * C19751 +
             C19896 * C19746 + C19897 * C19752 + C19898 * C19747 +
             C19899 * C19753 + C19900 * C19748) *
                C50700 * C50830 -
            ((C19749 * C4061 + C50538 * C4065) * C19748 +
             (C19749 * C4059 + C50538 * C4063) * C19753 + C20378 * C19747 +
             C20377 * C19752 + C20376 * C19746 + C20375 * C19751 +
             C20374 * C19745 + C20373 * C19750) *
                C50700 * C50667) *
               C50639) *
              C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
              C16965 * C124 + C16960 * C131) *
                 C16966 +
             (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
              C16965 * C135 + C16960 * C145) *
                 C16961 +
             (C17163 + C17164 + C17165) * C16967 +
             (C17166 + C17167 + C17168) * C50738) *
                C50700 * C50830 -
            ((C17861 + C17862 + C17863) * C50738 +
             (C17864 + C17865 + C17866) * C16967 +
             (C16965 * C405 + C16960 * C425 + C16964 * C406 + C16959 * C426 +
              C16963 * C407 + C16958 * C427) *
                 C16961 +
             (C16965 * C395 + C16960 * C409 + C16964 * C396 + C16959 * C410 +
              C16963 * C397 + C16958 * C411) *
                 C16966) *
                C50700 * C50667) *
               C893 +
           (((C17866 + C17865 + C17864) * C16966 +
             (C17863 + C17862 + C17861) * C16961 +
             (C16963 * C1433 + C16958 * C1441 + C16964 * C1432 +
              C16959 * C1440 + C16965 * C1431 + C16960 * C1439) *
                 C16967 +
             (C16963 * C1437 + C16958 * C1445 + C16964 * C1436 +
              C16959 * C1444 + C16965 * C1435 + C16960 * C1443) *
                 C50738) *
                C50700 * C50667 -
            ((C17169 + C17170 + C17171) * C50738 +
             (C17172 + C17173 + C17174) * C16967 +
             (C17168 + C17167 + C17166) * C16961 +
             (C17165 + C17164 + C17163) * C16966) *
                C50700 * C50830) *
               C50639) *
              C50821 +
          ((((C16963 * C396 + C16958 * C410 + C16964 * C395 + C16959 * C409 +
              C16965 * C394 + C16960 * C408) *
                 C16966 +
             (C16963 * C406 + C16958 * C426 + C16964 * C405 + C16959 * C425 +
              C16965 * C404 + C16960 * C424) *
                 C16961 +
             (C17867 + C17868 + C17869) * C16967 +
             (C17870 + C17871 + C17872) * C50738) *
                C50700 * C50667 -
            ((C17180 + C17179 + C17178) * C50738 +
             (C17177 + C17176 + C17175) * C16967 +
             (C16965 * C136 + C16960 * C146 + C16964 * C135 + C16959 * C145 +
              C16963 * C134 + C16958 * C144) *
                 C16961 +
             (C16965 * C125 + C16960 * C132 + C16964 * C124 + C16959 * C131 +
              C16963 * C123 + C16958 * C130) *
                 C16966) *
                C50700 * C50830) *
               C893 +
           (((C17175 + C17176 + C17177) * C16966 +
             (C17178 + C17179 + C17180) * C16961 +
             (C17181 + C17182 + C17183) * C16967 +
             (C17184 + C17185 + C17186) * C50738) *
                C50700 * C50830 -
            ((C16965 * C1434 + C16960 * C1442 + C16964 * C1435 +
              C16959 * C1443 + C16963 * C1436 + C16958 * C1444) *
                 C50738 +
             (C16965 * C1430 + C16960 * C1438 + C16964 * C1431 +
              C16959 * C1439 + C16963 * C1432 + C16958 * C1440) *
                 C16967 +
             (C17872 + C17871 + C17870) * C16961 +
             (C17869 + C17868 + C17867) * C16966) *
                C50700 * C50667) *
               C50639) *
              C50574)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C19749 * C122 + C50538 * C129) * C16966 +
              (C19749 * C133 + C50538 * C143) * C16961 + C19885 * C16967 +
              C19886 * C50738) *
                 C5071 +
             (C22059 + C22060 + C22007 + C22008) * C5072 + C22079 * C5073) *
                C50830 -
            ((C22063 + C22064 + C22065 + C22066) * C5073 +
             (C22014 + C22013 + C22062 + C22061) * C5072 +
             (C22008 + C22007 + C22060 + C22059) * C5071) *
                C50667) *
               C893 +
           (((C22599 + C22600 + C22601 + C22602) * C5071 +
             (C22603 + C22604 + C22605 + C22606) * C5072 +
             (C23013 + C23014 + C23025 + C23026) * C5073) *
                C50667 -
            (C23027 * C5073 + (C22602 + C22601 + C22600 + C22599) * C5072 +
             (C19888 * C50738 + C19887 * C16967 + C19886 * C16961 +
              C19885 * C16966) *
                 C5071) *
                C50830) *
               C50639) *
              C50821 +
          ((((C22067 + C22068 + C22027 + C22028) * C5071 +
             (C22069 + C22070 + C22033 + C22034) * C5072 +
             (C22071 + C22072 + C22073 + C22074) * C5073) *
                C50667 -
            (C22080 * C5073 + (C22028 + C22027 + C22068 + C22067) * C5072 +
             (C19894 * C50738 + C19893 * C16967 +
              (C19749 * C134 + C50538 * C144) * C16961 +
              (C19749 * C123 + C50538 * C130) * C16966) *
                 C5071) *
                C50830) *
               C893 +
           (((C19893 * C16966 + C19894 * C16961 + C19895 * C16967 +
              C19896 * C50738) *
                 C5071 +
             (C22607 + C22608 + C22609 + C22610) * C5072 +
             (C22611 + C22612 + C22613 + C22614) * C5073) *
                C50830 -
            (((C19749 * C4475 + C50538 * C4483) * C50738 +
              (C19749 * C4471 + C50538 * C4477) * C16967 + C22058 * C16961 +
              C22057 * C16966) *
                 C5073 +
             (C22614 + C22613 + C22612 + C22611) * C5072 +
             (C22610 + C22609 + C22608 + C22607) * C5071) *
                C50667) *
               C50639) *
              C50574)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
            C16965 * C124 + C16960 * C131) *
               C16966 +
           (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
            C16965 * C135 + C16960 * C145) *
               C16961 +
           (C17163 + C17164 + C17165) * C16967 +
           (C17166 + C17167 + C17168) * C50738) *
              C50700 * C50603 * C964 -
          ((C17169 + C17170 + C17171) * C50738 +
           (C17172 + C17173 + C17174) * C16967 +
           (C17168 + C17167 + C17166) * C16961 +
           (C17165 + C17164 + C17163) * C16966) *
              C50700 * C50603 * C965 +
          ((C17174 + C17173 + C17172) * C16966 +
           (C17171 + C17170 + C17169) * C16961 +
           (C18129 + C18130 + C18131) * C16967 +
           (C18132 + C18133 + C18134) * C50738) *
              C50700 * C50603 * C966 -
          ((C16965 * C2320 + C16960 * C2324 + C16964 * C2319 + C16959 * C2323 +
            C16963 * C2318 + C16958 * C2322) *
               C50738 +
           (C16965 * C2315 + C16960 * C2321 + C16964 * C2314 + C16959 * C2317 +
            C16963 * C2313 + C16958 * C2316) *
               C16967 +
           (C18134 + C18133 + C18132) * C16961 +
           (C18131 + C18130 + C18129) * C16966) *
              C50700 * C50603 * C967) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
             C16965 * C124 + C16960 * C131) *
                C16966 +
            (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
             C16965 * C135 + C16960 * C145) *
                C16961 +
            (C17163 + C17164 + C17165) * C16967 +
            (C17166 + C17167 + C17168) * C50738) *
               C50700 * C50603 * C893 -
           ((C17169 + C17170 + C17171) * C50738 +
            (C17172 + C17173 + C17174) * C16967 +
            (C17168 + C17167 + C17166) * C16961 +
            (C17165 + C17164 + C17163) * C16966) *
               C50700 * C50603 * C50639) *
              C895 +
          (((C17175 + C17176 + C17177) * C16966 +
            (C17178 + C17179 + C17180) * C16961 +
            (C17181 + C17182 + C17183) * C16967 +
            (C17184 + C17185 + C17186) * C50738) *
               C50700 * C50603 * C50639 -
           ((C17180 + C17179 + C17178) * C50738 +
            (C17177 + C17176 + C17175) * C16967 +
            (C16965 * C136 + C16960 * C146 + C16964 * C135 + C16959 * C145 +
             C16963 * C134 + C16958 * C144) *
                C16961 +
            (C16965 * C125 + C16960 * C132 + C16964 * C124 + C16959 * C131 +
             C16963 * C123 + C16958 * C130) *
                C16966) *
               C50700 * C50603 * C893) *
              C896 +
          (((C16963 * C124 + C16958 * C131 + C16964 * C125 + C16959 * C132 +
             C16965 * C126 + C16960 * C138) *
                C16966 +
            (C16963 * C135 + C16958 * C145 + C16964 * C136 + C16959 * C146 +
             C16965 * C137 + C16960 * C147) *
                C16961 +
            (C17491 + C17492 + C17493) * C16967 +
            (C17494 + C17495 + C17496) * C50738) *
               C50700 * C50603 * C893 -
           ((C16965 * C281 + C16960 * C292 + C16964 * C278 + C16959 * C290 +
             C16963 * C277 + C16958 * C289) *
                C50738 +
            (C16965 * C262 + C16960 * C282 + C16964 * C260 + C16959 * C274 +
             C16963 * C259 + C16958 * C273) *
                C16967 +
            (C17496 + C17495 + C17494) * C16961 +
            (C17493 + C17492 + C17491) * C16966) *
               C50700 * C50603 * C50639) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19749 * C122 + C50538 * C129) * C19750 +
            (C19749 * C133 + C50538 * C143) * C19745 + C19885 * C19751 +
            C19886 * C19746 + C19887 * C19752 + C19888 * C19747 +
            C19889 * C19753 + C19890 * C19748) *
               C50700 * C50603 * C893 -
           (C19891 * C19748 + C19892 * C19753 + C19890 * C19747 +
            C19889 * C19752 + C19888 * C19746 + C19887 * C19751 +
            C19886 * C19745 + C19885 * C19750) *
               C50700 * C50603 * C50639) *
              C895 +
          ((C19893 * C19750 + C19894 * C19745 + C19895 * C19751 +
            C19896 * C19746 + C19897 * C19752 + C19898 * C19747 +
            C19899 * C19753 + C19900 * C19748) *
               C50700 * C50603 * C50639 -
           (C19898 * C19748 + C19897 * C19753 + C19896 * C19747 +
            C19895 * C19752 + C19894 * C19746 + C19893 * C19751 +
            (C19749 * C134 + C50538 * C144) * C19745 +
            (C19749 * C123 + C50538 * C130) * C19750) *
               C50700 * C50603 * C893) *
              C896 +
          (((C19749 * C124 + C50538 * C131) * C19750 +
            (C19749 * C135 + C50538 * C145) * C19745 + C20109 * C19751 +
            C20110 * C19746 + C20111 * C19752 + C20112 * C19747 +
            C20113 * C19753 + C20114 * C19748) *
               C50700 * C50603 * C893 -
           ((C19749 * C2320 + C50538 * C2324) * C19748 +
            (C19749 * C2315 + C50538 * C2321) * C19753 + C20114 * C19747 +
            C20113 * C19752 + C20112 * C19746 + C20111 * C19751 +
            C20110 * C19745 + C20109 * C19750) *
               C50700 * C50603 * C50639) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C19749 * C122 + C50538 * C129) * C19750 +
           (C19749 * C133 + C50538 * C143) * C19745 + C19885 * C19751 +
           C19886 * C19746 + C19887 * C19752 + C19888 * C19747 +
           C19889 * C19753 + C19890 * C19748) *
              C50700 * C50603 * C964 -
          (C19891 * C19748 + C19892 * C19753 + C19890 * C19747 +
           C19889 * C19752 + C19888 * C19746 + C19887 * C19751 +
           C19886 * C19745 + C19885 * C19750) *
              C50700 * C50603 * C965 +
          (C19887 * C19750 + C19888 * C19745 + C19889 * C19751 +
           C19890 * C19746 + C19892 * C19752 + C19891 * C19747 +
           C20551 * C19753 + C20552 * C19748) *
              C50700 * C50603 * C966 -
          ((C19749 * C20543 + C50538 * C20545) * C19748 +
           (C19749 * C20542 + C50538 * C20544) * C19753 + C20552 * C19747 +
           C20551 * C19752 + C19891 * C19746 + C19892 * C19751 +
           C19890 * C19745 + C19889 * C19750) *
              C50700 * C50603 * C967) *
         C50568) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C16966 +
             (C19749 * C133 + C50538 * C143) * C16961 + C19885 * C16967 +
             C19886 * C50738) *
                C5071 +
            (C22059 + C22060 + C22007 + C22008) * C5072 + C22079 * C5073) *
               C50603 * C893 -
           ((C22606 + C22605 + C22604 + C22603) * C5073 +
            (C22602 + C22601 + C22600 + C22599) * C5072 +
            (C19888 * C50738 + C19887 * C16967 + C19886 * C16961 +
             C19885 * C16966) *
                C5071) *
               C50603 * C50639) *
              C895 +
          (((C19893 * C16966 + C19894 * C16961 + C19895 * C16967 +
             C19896 * C50738) *
                C5071 +
            (C22607 + C22608 + C22609 + C22610) * C5072 +
            (C22611 + C22612 + C22613 + C22614) * C5073) *
               C50603 * C50639 -
           (C22080 * C5073 + (C22028 + C22027 + C22068 + C22067) * C5072 +
            (C19894 * C50738 + C19893 * C16967 +
             (C19749 * C134 + C50538 * C144) * C16961 +
             (C19749 * C123 + C50538 * C130) * C16966) *
                C5071) *
               C50603 * C893) *
              C896 +
          ((((C19749 * C124 + C50538 * C131) * C16966 +
             (C19749 * C135 + C50538 * C145) * C16961 + C20109 * C16967 +
             C20110 * C50738) *
                C5071 +
            (C22401 + C22402 + C22389 + C22390) * C5072 +
            (C22403 + C22404 + C22395 + C22396) * C5073) *
               C50603 * C893 -
           (((C19749 * C2554 + C50538 * C2558) * C50738 +
             (C19749 * C2549 + C50538 * C2555) * C16967 + C22238 * C16961 +
             C22237 * C16966) *
                C5073 +
            ((C19749 * C1435 + C50538 * C1443) * C50738 +
             (C19749 * C1431 + C50538 * C1439) * C16967 + C22236 * C16961 +
             C22235 * C16966) *
                C5072 +
            (C20112 * C50738 + C20111 * C16967 + C20110 * C16961 +
             C20109 * C16966) *
                C5071) *
               C50603 * C50639) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19749 * C122 + C50538 * C129) * C16966 +
            (C19749 * C133 + C50538 * C143) * C16961 + C19885 * C16967 +
            C19886 * C50738) *
               C5071 +
           (C22059 + C22060 + C22007 + C22008) * C5072 + C22079 * C5073) *
              C50603 * C964 -
          ((C22606 + C22605 + C22604 + C22603) * C5073 +
           (C22602 + C22601 + C22600 + C22599) * C5072 +
           (C19888 * C50738 + C19887 * C16967 + C19886 * C16961 +
            C19885 * C16966) *
               C5071) *
              C50603 * C965 +
          ((C19887 * C16966 + C19888 * C16961 + C19889 * C16967 +
            C19890 * C50738) *
               C5071 +
           (C20370 * C16966 + C20369 * C16961 + C20368 * C16967 +
            C20367 * C50738) *
               C5072 +
           (C20669 * C16966 + C20670 * C16961 + C20671 * C16967 +
            C20672 * C50738) *
               C5073) *
              C50603 * C966 -
          (((C19749 * C20651 + C50538 * C20653) * C50738 +
            (C19749 * C20650 + C50538 * C20652) * C16967 + C20672 * C16961 +
            C20671 * C16966) *
               C5073 +
           (C21008 * C50738 + C21007 * C16967 + C20367 * C16961 +
            C20368 * C16966) *
               C5072 +
           (C19891 * C50738 + C19892 * C16967 + C19890 * C16961 +
            C19889 * C16966) *
               C5071) *
              C50603 * C967) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C19750 +
             (C19749 * C133 + C50538 * C143) * C19745 + C19885 * C19751 +
             C19886 * C19746 + C19887 * C19752 + C19888 * C19747 +
             C19889 * C19753 + C19890 * C19748) *
                C50700 * C1544 -
            (C20367 * C19748 + C20368 * C19753 + C20369 * C19747 +
             C20370 * C19752 + C20371 * C19746 + C20372 * C19751 +
             (C19749 * C407 + C50538 * C427) * C19745 +
             (C19749 * C397 + C50538 * C411) * C19750) *
                C50700 * C50667) *
               C50829 +
           ((C20372 * C19750 + C20371 * C19745 + C20370 * C19751 +
             C20369 * C19746 + C20368 * C19752 + C20367 * C19747 +
             C21007 * C19753 + C21008 * C19748) *
                C50700 * C50667 -
            (C19891 * C19748 + C19892 * C19753 + C19890 * C19747 +
             C19889 * C19752 + C19888 * C19746 + C19887 * C19751 +
             C19886 * C19745 + C19885 * C19750) *
                C50700 * C1544) *
               C50639) *
              C50821 +
          ((((C19749 * C396 + C50538 * C410) * C19750 +
             (C19749 * C406 + C50538 * C426) * C19745 + C20373 * C19751 +
             C20374 * C19746 + C20375 * C19752 + C20376 * C19747 +
             C20377 * C19753 + C20378 * C19748) *
                C50700 * C50667 -
            (C19898 * C19748 + C19897 * C19753 + C19896 * C19747 +
             C19895 * C19752 + C19894 * C19746 + C19893 * C19751 +
             (C19749 * C134 + C50538 * C144) * C19745 +
             (C19749 * C123 + C50538 * C130) * C19750) *
                C50700 * C1544) *
               C50829 +
           ((C19893 * C19750 + C19894 * C19745 + C19895 * C19751 +
             C19896 * C19746 + C19897 * C19752 + C19898 * C19747 +
             C19899 * C19753 + C19900 * C19748) *
                C50700 * C1544 -
            ((C19749 * C4061 + C50538 * C4065) * C19748 +
             (C19749 * C4059 + C50538 * C4063) * C19753 + C20378 * C19747 +
             C20377 * C19752 + C20376 * C19746 + C20375 * C19751 +
             C20374 * C19745 + C20373 * C19750) *
                C50700 * C50667) *
               C50639) *
              C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
              C16965 * C124 + C16960 * C131) *
                 C16966 +
             (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
              C16965 * C135 + C16960 * C145) *
                 C16961 +
             (C17163 + C17164 + C17165) * C16967 +
             (C17166 + C17167 + C17168) * C50738) *
                C50700 * C1544 -
            ((C17861 + C17862 + C17863) * C50738 +
             (C17864 + C17865 + C17866) * C16967 +
             (C16965 * C405 + C16960 * C425 + C16964 * C406 + C16959 * C426 +
              C16963 * C407 + C16958 * C427) *
                 C16961 +
             (C16965 * C395 + C16960 * C409 + C16964 * C396 + C16959 * C410 +
              C16963 * C397 + C16958 * C411) *
                 C16966) *
                C50700 * C50667) *
               C50829 +
           (((C17866 + C17865 + C17864) * C16966 +
             (C17863 + C17862 + C17861) * C16961 +
             (C18797 + C18798 + C18799) * C16967 +
             (C18800 + C18801 + C18802) * C50738) *
                C50700 * C50667 -
            ((C17169 + C17170 + C17171) * C50738 +
             (C17172 + C17173 + C17174) * C16967 +
             (C17168 + C17167 + C17166) * C16961 +
             (C17165 + C17164 + C17163) * C16966) *
                C50700 * C1544) *
               C50639) *
              C50821 +
          ((((C16963 * C396 + C16958 * C410 + C16964 * C395 + C16959 * C409 +
              C16965 * C394 + C16960 * C408) *
                 C16966 +
             (C16963 * C406 + C16958 * C426 + C16964 * C405 + C16959 * C425 +
              C16965 * C404 + C16960 * C424) *
                 C16961 +
             (C17867 + C17868 + C17869) * C16967 +
             (C17870 + C17871 + C17872) * C50738) *
                C50700 * C50667 -
            ((C17180 + C17179 + C17178) * C50738 +
             (C17177 + C17176 + C17175) * C16967 +
             (C16965 * C136 + C16960 * C146 + C16964 * C135 + C16959 * C145 +
              C16963 * C134 + C16958 * C144) *
                 C16961 +
             (C16965 * C125 + C16960 * C132 + C16964 * C124 + C16959 * C131 +
              C16963 * C123 + C16958 * C130) *
                 C16966) *
                C50700 * C1544) *
               C50829 +
           (((C17175 + C17176 + C17177) * C16966 +
             (C17178 + C17179 + C17180) * C16961 +
             (C17181 + C17182 + C17183) * C16967 +
             (C17184 + C17185 + C17186) * C50738) *
                C50700 * C1544 -
            ((C16965 * C1434 + C16960 * C1442 + C16964 * C1435 +
              C16959 * C1443 + C16963 * C1436 + C16958 * C1444) *
                 C50738 +
             (C16965 * C1430 + C16960 * C1438 + C16964 * C1431 +
              C16959 * C1439 + C16963 * C1432 + C16958 * C1440) *
                 C16967 +
             (C17872 + C17871 + C17870) * C16961 +
             (C17869 + C17868 + C17867) * C16966) *
                C50700 * C50667) *
               C50639) *
              C50574)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C19749 * C122 + C50538 * C129) * C16966 +
              (C19749 * C133 + C50538 * C143) * C16961 + C19885 * C16967 +
              C19886 * C50738) *
                 C5071 +
             (C22059 + C22060 + C22007 + C22008) * C5072 + C22079 * C5073) *
                C1544 -
            (C23926 * C5073 + (C22014 + C22013 + C22062 + C22061) * C5072 +
             (C22008 + C22007 + C22060 + C22059) * C5071) *
                C50667) *
               C50829 +
           (((C22599 + C22600 + C22601 + C22602) * C5071 +
             (C22603 + C22604 + C22605 + C22606) * C5072 +
             (C23013 + C23014 + C23025 + C23026) * C5073) *
                C50667 -
            (C23027 * C5073 + (C22602 + C22601 + C22600 + C22599) * C5072 +
             (C19888 * C50738 + C19887 * C16967 + C19886 * C16961 +
              C19885 * C16966) *
                 C5071) *
                C1544) *
               C50639) *
              C50821 +
          ((((C22067 + C22068 + C22027 + C22028) * C5071 +
             (C22069 + C22070 + C22033 + C22034) * C5072 +
             (C22071 + C22072 + C22073 + C22074) * C5073) *
                C50667 -
            (C22080 * C5073 + (C22028 + C22027 + C22068 + C22067) * C5072 +
             (C19894 * C50738 + C19893 * C16967 +
              (C19749 * C134 + C50538 * C144) * C16961 +
              (C19749 * C123 + C50538 * C130) * C16966) *
                 C5071) *
                C1544) *
               C50829 +
           (((C19893 * C16966 + C19894 * C16961 + C19895 * C16967 +
              C19896 * C50738) *
                 C5071 +
             (C22607 + C22608 + C22609 + C22610) * C5072 +
             (C22611 + C22612 + C22613 + C22614) * C5073) *
                C1544 -
            (((C19749 * C4475 + C50538 * C4483) * C50738 +
              (C19749 * C4471 + C50538 * C4477) * C16967 + C22058 * C16961 +
              C22057 * C16966) *
                 C5073 +
             (C22614 + C22613 + C22612 + C22611) * C5072 +
             (C22610 + C22609 + C22608 + C22607) * C5071) *
                C50667) *
               C50639) *
              C50574)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19749 * C122 + C50538 * C129) * C19750 +
            (C19749 * C133 + C50538 * C143) * C19745 + C19885 * C19751 +
            C19886 * C19746 + C19887 * C19752 + C19888 * C19747 +
            C19889 * C19753 + C19890 * C19748) *
               C50700 * C50876 -
           (C20367 * C19748 + C20368 * C19753 + C20369 * C19747 +
            C20370 * C19752 + C20371 * C19746 + C20372 * C19751 +
            (C19749 * C407 + C50538 * C427) * C19745 +
            (C19749 * C397 + C50538 * C411) * C19750) *
               C50700 * C50877 +
           ((C19749 * C398 + C50538 * C412) * C19750 +
            (C19749 * C416 + C50538 * C428) * C19745 + C20667 * C19751 +
            C20668 * C19746 + C20669 * C19752 + C20670 * C19747 +
            C20671 * C19753 + C20672 * C19748) *
               C50700 * C1960) *
              C50829 +
          ((C20372 * C19750 + C20371 * C19745 + C20370 * C19751 +
            C20369 * C19746 + C20368 * C19752 + C20367 * C19747 +
            C21007 * C19753 + C21008 * C19748) *
               C50700 * C50877 -
           (C19891 * C19748 + C19892 * C19753 + C19890 * C19747 +
            C19889 * C19752 + C19888 * C19746 + C19887 * C19751 +
            C19886 * C19745 + C19885 * C19750) *
               C50700 * C50876 -
           ((C19749 * C20651 + C50538 * C20653) * C19748 +
            (C19749 * C20650 + C50538 * C20652) * C19753 + C20672 * C19747 +
            C20671 * C19752 + C20670 * C19746 + C20669 * C19751 +
            C20668 * C19745 + C20667 * C19750) *
               C50700 * C1960) *
              C50639) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
             C16965 * C124 + C16960 * C131) *
                C16966 +
            (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
             C16965 * C135 + C16960 * C145) *
                C16961 +
            (C17163 + C17164 + C17165) * C16967 +
            (C17166 + C17167 + C17168) * C50738) *
               C50700 * C50876 -
           ((C17861 + C17862 + C17863) * C50738 +
            (C17864 + C17865 + C17866) * C16967 +
            (C16965 * C405 + C16960 * C425 + C16964 * C406 + C16959 * C426 +
             C16963 * C407 + C16958 * C427) *
                C16961 +
            (C16965 * C395 + C16960 * C409 + C16964 * C396 + C16959 * C410 +
             C16963 * C397 + C16958 * C411) *
                C16966) *
               C50700 * C50877 +
           ((C16963 * C398 + C16958 * C412 + C16964 * C399 + C16959 * C413 +
             C16965 * C400 + C16960 * C414) *
                C16966 +
            (C16963 * C416 + C16958 * C428 + C16964 * C417 + C16959 * C429 +
             C16965 * C418 + C16960 * C430) *
                C16961 +
            (C18293 + C18294 + C18295) * C16967 +
            (C18296 + C18297 + C18298) * C50738) *
               C50700 * C1960) *
              C50829 +
          (((C17866 + C17865 + C17864) * C16966 +
            (C17863 + C17862 + C17861) * C16961 +
            (C18797 + C18798 + C18799) * C16967 +
            (C18800 + C18801 + C18802) * C50738) *
               C50700 * C50877 -
           ((C17169 + C17170 + C17171) * C50738 +
            (C17172 + C17173 + C17174) * C16967 +
            (C17168 + C17167 + C17166) * C16961 +
            (C17165 + C17164 + C17163) * C16966) *
               C50700 * C50876 -
           ((C16965 * C2554 + C16960 * C2558 + C16964 * C2553 + C16959 * C2557 +
             C16963 * C2552 + C16958 * C2556) *
                C50738 +
            (C16965 * C2549 + C16960 * C2555 + C16964 * C2548 + C16959 * C2551 +
             C16963 * C2547 + C16958 * C2550) *
                C16967 +
            (C18298 + C18297 + C18296) * C16961 +
            (C18295 + C18294 + C18293) * C16966) *
               C50700 * C1960) *
              C50639) *
         C50568) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C16966 +
             (C19749 * C133 + C50538 * C143) * C16961 + C19885 * C16967 +
             C19886 * C50738) *
                C5071 +
            (C22059 + C22060 + C22007 + C22008) * C5072 + C22079 * C5073) *
               C50876 -
           (C23926 * C5073 + (C22014 + C22013 + C22062 + C22061) * C5072 +
            (C22008 + C22007 + C22060 + C22059) * C5071) *
               C50877 +
           (C22079 * C5071 + (C22066 + C22065 + C22064 + C22063) * C5072 +
            (C23927 + C23928 + C23921 + C23922) * C5073) *
               C1960) *
              C50829 +
          (((C22599 + C22600 + C22601 + C22602) * C5071 +
            (C22603 + C22604 + C22605 + C22606) * C5072 +
            (C23013 + C23014 + C23025 + C23026) * C5073) *
               C50877 -
           (C23027 * C5073 + (C22602 + C22601 + C22600 + C22599) * C5072 +
            (C19888 * C50738 + C19887 * C16967 + C19886 * C16961 +
             C19885 * C16966) *
                C5071) *
               C50876 -
           (((C19749 * C23005 + C50538 * C23007) * C50738 +
             (C19749 * C23004 + C50538 * C23006) * C16967 + C23021 * C16961 +
             C23020 * C16966) *
                C5073 +
            (C23026 + C23025 + C23014 + C23013) * C5072 + C23027 * C5071) *
               C1960) *
              C50639) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
                 C16965 * C124 + C16960 * C131) *
                    C16966 +
                (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
                 C16965 * C135 + C16960 * C145) *
                    C16961 +
                (C17163 + C17164 + C17165) * C16967 +
                (C17166 + C17167 + C17168) * C50738) *
                   C50700 * C1544 -
               ((C17861 + C17862 + C17863) * C50738 +
                (C17864 + C17865 + C17866) * C16967 +
                (C16965 * C405 + C16960 * C425 + C16964 * C406 + C16959 * C426 +
                 C16963 * C407 + C16958 * C427) *
                    C16961 +
                (C16965 * C395 + C16960 * C409 + C16964 * C396 + C16959 * C410 +
                 C16963 * C397 + C16958 * C411) *
                    C16966) *
                   C50700 * C50667) *
                  C50587 * C895 +
              (((C16963 * C396 + C16958 * C410 + C16964 * C395 + C16959 * C409 +
                 C16965 * C394 + C16960 * C408) *
                    C16966 +
                (C16963 * C406 + C16958 * C426 + C16964 * C405 + C16959 * C425 +
                 C16965 * C404 + C16960 * C424) *
                    C16961 +
                (C17867 + C17868 + C17869) * C16967 +
                (C17870 + C17871 + C17872) * C50738) *
                   C50700 * C50667 -
               ((C17180 + C17179 + C17178) * C50738 +
                (C17177 + C17176 + C17175) * C16967 +
                (C16965 * C136 + C16960 * C146 + C16964 * C135 + C16959 * C145 +
                 C16963 * C134 + C16958 * C144) *
                    C16961 +
                (C16965 * C125 + C16960 * C132 + C16964 * C124 + C16959 * C131 +
                 C16963 * C123 + C16958 * C130) *
                    C16966) *
                   C50700 * C1544) *
                  C50587 * C896 +
              (((C16963 * C124 + C16958 * C131 + C16964 * C125 + C16959 * C132 +
                 C16965 * C126 + C16960 * C138) *
                    C16966 +
                (C16963 * C135 + C16958 * C145 + C16964 * C136 + C16959 * C146 +
                 C16965 * C137 + C16960 * C147) *
                    C16961 +
                (C17491 + C17492 + C17493) * C16967 +
                (C17494 + C17495 + C17496) * C50738) *
                   C50700 * C1544 -
               ((C16965 * C788 + C16960 * C794 + C16964 * C787 + C16959 * C793 +
                 C16963 * C786 + C16958 * C792) *
                    C50738 +
                (C16965 * C779 + C16960 * C789 + C16964 * C778 + C16959 * C783 +
                 C16963 * C777 + C16958 * C782) *
                    C16967 +
                (C16965 * C421 + C16960 * C432 + C16964 * C404 + C16959 * C424 +
                 C16963 * C405 + C16958 * C425) *
                    C16961 +
                (C16965 * C402 + C16960 * C420 + C16964 * C394 + C16959 * C408 +
                 C16963 * C395 + C16958 * C409) *
                    C16966) *
                   C50700 * C50667) *
                  C50587 * C897) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
                 C16965 * C124 + C16960 * C131) *
                    C16966 +
                (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
                 C16965 * C135 + C16960 * C145) *
                    C16961 +
                (C17163 + C17164 + C17165) * C16967 +
                (C17166 + C17167 + C17168) * C50738) *
                   C50700 * C1544 -
               ((C17861 + C17862 + C17863) * C50738 +
                (C17864 + C17865 + C17866) * C16967 +
                (C16965 * C405 + C16960 * C425 + C16964 * C406 + C16959 * C426 +
                 C16963 * C407 + C16958 * C427) *
                    C16961 +
                (C16965 * C395 + C16960 * C409 + C16964 * C396 + C16959 * C410 +
                 C16963 * C397 + C16958 * C411) *
                    C16966) *
                   C50700 * C50667) *
                  C248 +
              (((C17866 + C17865 + C17864) * C16966 +
                (C17863 + C17862 + C17861) * C16961 +
                (C18797 + C18798 + C18799) * C16967 +
                (C18800 + C18801 + C18802) * C50738) *
                   C50700 * C50667 -
               ((C17169 + C17170 + C17171) * C50738 +
                (C17172 + C17173 + C17174) * C16967 +
                (C17168 + C17167 + C17166) * C16961 +
                (C17165 + C17164 + C17163) * C16966) *
                   C50700 * C1544) *
                  C249 +
              (((C17174 + C17173 + C17172) * C16966 +
                (C17171 + C17170 + C17169) * C16961 +
                (C18129 + C18130 + C18131) * C16967 +
                (C18132 + C18133 + C18134) * C50738) *
                   C50700 * C1544 -
               ((C16965 * C3076 + C16960 * C3080 + C16964 * C3075 +
                 C16959 * C3079 + C16963 * C3074 + C16958 * C3078) *
                    C50738 +
                (C16965 * C3071 + C16960 * C3077 + C16964 * C3070 +
                 C16959 * C3073 + C16963 * C3069 + C16958 * C3072) *
                    C16967 +
                (C18802 + C18801 + C18800) * C16961 +
                (C18799 + C18798 + C18797) * C16966) *
                   C50700 * C50667) *
                  C250) *
             C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
            C16965 * C124 + C16960 * C131) *
               C16966 +
           (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
            C16965 * C135 + C16960 * C145) *
               C16961 +
           (C17163 + C17164 + C17165) * C16967 +
           (C17166 + C17167 + C17168) * C50738) *
              C50700 * C1710 -
          ((C17861 + C17862 + C17863) * C50738 +
           (C17864 + C17865 + C17866) * C16967 +
           (C16965 * C405 + C16960 * C425 + C16964 * C406 + C16959 * C426 +
            C16963 * C407 + C16958 * C427) *
               C16961 +
           (C16965 * C395 + C16960 * C409 + C16964 * C396 + C16959 * C410 +
            C16963 * C397 + C16958 * C411) *
               C16966) *
              C50700 * C1711 +
          ((C16963 * C398 + C16958 * C412 + C16964 * C399 + C16959 * C413 +
            C16965 * C400 + C16960 * C414) *
               C16966 +
           (C16963 * C416 + C16958 * C428 + C16964 * C417 + C16959 * C429 +
            C16965 * C418 + C16960 * C430) *
               C16961 +
           (C18293 + C18294 + C18295) * C16967 +
           (C18296 + C18297 + C18298) * C50738) *
              C50700 * C1712 -
          ((C16965 * C5971 + C16960 * C5973 + C16964 * C4479 + C16959 * C4485 +
            C16963 * C4480 + C16958 * C4486) *
               C50738 +
           (C16965 * C5970 + C16960 * C5972 + C16964 * C4473 + C16959 * C4481 +
            C16963 * C4474 + C16958 * C4482) *
               C16967 +
           (C16965 * C1719 + C16960 * C1727 + C16964 * C1720 + C16959 * C1728 +
            C16963 * C1721 + C16958 * C1729) *
               C16961 +
           (C16965 * C1715 + C16960 * C1723 + C16964 * C1716 + C16959 * C1724 +
            C16963 * C1717 + C16958 * C1725) *
               C16966) *
              C50700 * C1713) *
         C50587 * C50568) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C19749 * C122 + C50538 * C129) * C19750 +
            (C19749 * C133 + C50538 * C143) * C19745 + C19885 * C19751 +
            C19886 * C19746 + C19887 * C19752 + C19888 * C19747 +
            C19889 * C19753 + C19890 * C19748) *
               C50700 * C1544 -
           (C20367 * C19748 + C20368 * C19753 + C20369 * C19747 +
            C20370 * C19752 + C20371 * C19746 + C20372 * C19751 +
            (C19749 * C407 + C50538 * C427) * C19745 +
            (C19749 * C397 + C50538 * C411) * C19750) *
               C50700 * C50667) *
              C50587 * C895 +
          (((C19749 * C396 + C50538 * C410) * C19750 +
            (C19749 * C406 + C50538 * C426) * C19745 + C20373 * C19751 +
            C20374 * C19746 + C20375 * C19752 + C20376 * C19747 +
            C20377 * C19753 + C20378 * C19748) *
               C50700 * C50667 -
           (C19898 * C19748 + C19897 * C19753 + C19896 * C19747 +
            C19895 * C19752 + C19894 * C19746 + C19893 * C19751 +
            (C19749 * C134 + C50538 * C144) * C19745 +
            (C19749 * C123 + C50538 * C130) * C19750) *
               C50700 * C1544) *
              C50587 * C896 +
          (((C19749 * C124 + C50538 * C131) * C19750 +
            (C19749 * C135 + C50538 * C145) * C19745 + C20109 * C19751 +
            C20110 * C19746 + C20111 * C19752 + C20112 * C19747 +
            C20113 * C19753 + C20114 * C19748) *
               C50700 * C1544 -
           ((C19749 * C3076 + C50538 * C3080) * C19748 +
            (C19749 * C3071 + C50538 * C3077) * C19753 +
            (C19749 * C1435 + C50538 * C1443) * C19747 +
            (C19749 * C1431 + C50538 * C1439) * C19752 +
            (C19749 * C786 + C50538 * C792) * C19746 +
            (C19749 * C777 + C50538 * C782) * C19751 +
            (C19749 * C405 + C50538 * C425) * C19745 +
            (C19749 * C395 + C50538 * C409) * C19750) *
               C50700 * C50667) *
              C50587 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C19749 * C122 + C50538 * C129) * C19750 +
            (C19749 * C133 + C50538 * C143) * C19745 + C19885 * C19751 +
            C19886 * C19746 + C19887 * C19752 + C19888 * C19747 +
            C19889 * C19753 + C19890 * C19748) *
               C50700 * C1544 -
           (C20367 * C19748 + C20368 * C19753 + C20369 * C19747 +
            C20370 * C19752 + C20371 * C19746 + C20372 * C19751 +
            (C19749 * C407 + C50538 * C427) * C19745 +
            (C19749 * C397 + C50538 * C411) * C19750) *
               C50700 * C50667) *
              C248 +
          ((C20372 * C19750 + C20371 * C19745 + C20370 * C19751 +
            C20369 * C19746 + C20368 * C19752 + C20367 * C19747 +
            C21007 * C19753 + C21008 * C19748) *
               C50700 * C50667 -
           (C19891 * C19748 + C19892 * C19753 + C19890 * C19747 +
            C19889 * C19752 + C19888 * C19746 + C19887 * C19751 +
            C19886 * C19745 + C19885 * C19750) *
               C50700 * C1544) *
              C249 +
          ((C19887 * C19750 + C19888 * C19745 + C19889 * C19751 +
            C19890 * C19746 + C19892 * C19752 + C19891 * C19747 +
            C20551 * C19753 + C20552 * C19748) *
               C50700 * C1544 -
           ((C19749 * C20999 + C50538 * C21001) * C19748 +
            (C19749 * C20998 + C50538 * C21000) * C19753 + C21008 * C19747 +
            C21007 * C19752 + C20367 * C19746 + C20368 * C19751 +
            C20369 * C19745 + C20370 * C19750) *
               C50700 * C50667) *
              C250) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C19749 * C122 + C50538 * C129) * C19750 +
           (C19749 * C133 + C50538 * C143) * C19745 + C19885 * C19751 +
           C19886 * C19746 + C19887 * C19752 + C19888 * C19747 +
           C19889 * C19753 + C19890 * C19748) *
              C50700 * C1710 -
          (C20367 * C19748 + C20368 * C19753 + C20369 * C19747 +
           C20370 * C19752 + C20371 * C19746 + C20372 * C19751 +
           (C19749 * C407 + C50538 * C427) * C19745 +
           (C19749 * C397 + C50538 * C411) * C19750) *
              C50700 * C1711 +
          ((C19749 * C398 + C50538 * C412) * C19750 +
           (C19749 * C416 + C50538 * C428) * C19745 + C20667 * C19751 +
           C20668 * C19746 + C20669 * C19752 + C20670 * C19747 +
           C20671 * C19753 + C20672 * C19748) *
              C50700 * C1712 -
          ((C19749 * C21271 + C50538 * C21273) * C19748 +
           (C19749 * C21270 + C50538 * C21272) * C19753 +
           (C19749 * C4476 + C50538 * C4484) * C19747 +
           (C19749 * C4472 + C50538 * C4478) * C19752 +
           (C19749 * C4480 + C50538 * C4486) * C19746 +
           (C19749 * C4474 + C50538 * C4482) * C19751 +
           (C19749 * C1721 + C50538 * C1729) * C19745 +
           (C19749 * C1717 + C50538 * C1725) * C19750) *
              C50700 * C1713) *
         C50587 * C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C16966 +
             (C19749 * C133 + C50538 * C143) * C16961 + C19885 * C16967 +
             C19886 * C50738) *
                C5071 +
            (C22059 + C22060 + C22007 + C22008) * C5072 + C22079 * C5073) *
               C1544 -
           ((C22063 + C22064 + C22065 + C22066) * C5073 +
            (C22014 + C22013 + C22062 + C22061) * C5072 +
            (C22008 + C22007 + C22060 + C22059) * C5071) *
               C50667) *
              C50587 * C895 +
          (((C22067 + C22068 + C22027 + C22028) * C5071 +
            (C22069 + C22070 + C22033 + C22034) * C5072 +
            (C22071 + C22072 + C22073 + C22074) * C5073) *
               C50667 -
           (C22080 * C5073 + (C22028 + C22027 + C22068 + C22067) * C5072 +
            (C19894 * C50738 + C19893 * C16967 +
             (C19749 * C134 + C50538 * C144) * C16961 +
             (C19749 * C123 + C50538 * C130) * C16966) *
                C5071) *
               C1544) *
              C50587 * C896 +
          ((((C19749 * C124 + C50538 * C131) * C16966 +
             (C19749 * C135 + C50538 * C145) * C16961 + C20109 * C16967 +
             C20110 * C50738) *
                C5071 +
            (C22401 + C22402 + C22389 + C22390) * C5072 +
            (C22403 + C22404 + C22395 + C22396) * C5073) *
               C1544 -
           (((C19749 * C5971 + C50538 * C5973) * C50738 +
             (C19749 * C5970 + C50538 * C5972) * C16967 +
             (C19749 * C1719 + C50538 * C1727) * C16961 +
             (C19749 * C1715 + C50538 * C1723) * C16966) *
                C5073 +
            (C22396 + C22395 + C22404 + C22403) * C5072 +
            (C22390 + C22389 + C22402 + C22401) * C5071) *
               C50667) *
              C50587 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C16966 +
             (C19749 * C133 + C50538 * C143) * C16961 + C19885 * C16967 +
             C19886 * C50738) *
                C5071 +
            (C22059 + C22060 + C22007 + C22008) * C5072 + C22079 * C5073) *
               C1544 -
           ((C22063 + C22064 + C22065 + C22066) * C5073 +
            (C22014 + C22013 + C22062 + C22061) * C5072 +
            (C22008 + C22007 + C22060 + C22059) * C5071) *
               C50667) *
              C248 +
          (((C22599 + C22600 + C22601 + C22602) * C5071 +
            (C22603 + C22604 + C22605 + C22606) * C5072 +
            (C23013 + C23014 + C23025 + C23026) * C5073) *
               C50667 -
           (C23027 * C5073 + (C22602 + C22601 + C22600 + C22599) * C5072 +
            (C19888 * C50738 + C19887 * C16967 + C19886 * C16961 +
             C19885 * C16966) *
                C5071) *
               C1544) *
              C249 +
          (((C19887 * C16966 + C19888 * C16961 + C19889 * C16967 +
             C19890 * C50738) *
                C5071 +
            (C23514 + C23515 + C23516 + C23517) * C5072 +
            (C23518 + C23519 + C23520 + C23521) * C5073) *
               C1544 -
           (((C19749 * C21271 + C50538 * C21273) * C50738 +
             (C19749 * C21270 + C50538 * C21272) * C16967 + C23023 * C16961 +
             C23022 * C16966) *
                C5073 +
            (C23521 + C23520 + C23519 + C23518) * C5072 +
            (C23517 + C23516 + C23515 + C23514) * C5071) *
               C50667) *
              C250) *
         C50568) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C19749 * C122 + C50538 * C129) * C16966 +
            (C19749 * C133 + C50538 * C143) * C16961 + C19885 * C16967 +
            C19886 * C50738) *
               C5071 +
           (C22059 + C22060 + C22007 + C22008) * C5072 + C22079 * C5073) *
              C1710 -
          (C23926 * C5073 + (C22014 + C22013 + C22062 + C22061) * C5072 +
           (C22008 + C22007 + C22060 + C22059) * C5071) *
              C1711 +
          (C22079 * C5071 + (C22066 + C22065 + C22064 + C22063) * C5072 +
           (C23927 + C23928 + C23921 + C23922) * C5073) *
              C1712 -
          (((C19749 * C23912 + C50538 * C23914) * C50738 +
            (C19749 * C23911 + C50538 * C23913) * C16967 +
            (C19749 * C7280 + C50538 * C7284) * C16961 +
            (C19749 * C7278 + C50538 * C7282) * C16966) *
               C5073 +
           (C23922 + C23921 + C23928 + C23927) * C5072 + C23926 * C5071) *
              C1713) *
         C50587 * C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19749 * C122 + C50538 * C129) * C19750 +
            (C19749 * C133 + C50538 * C143) * C19745 + C19885 * C19751 +
            C19886 * C19746 + C19887 * C19752 + C19888 * C19747 +
            C19889 * C19753 + C19890 * C19748) *
               C50700 * C50876 -
           (C20367 * C19748 + C20368 * C19753 + C20369 * C19747 +
            C20370 * C19752 + C20371 * C19746 + C20372 * C19751 +
            (C19749 * C407 + C50538 * C427) * C19745 +
            (C19749 * C397 + C50538 * C411) * C19750) *
               C50700 * C50877 +
           ((C19749 * C398 + C50538 * C412) * C19750 +
            (C19749 * C416 + C50538 * C428) * C19745 + C20667 * C19751 +
            C20668 * C19746 + C20669 * C19752 + C20670 * C19747 +
            C20671 * C19753 + C20672 * C19748) *
               C50700 * C1960) *
              C50587 * C50821 +
          (((C19749 * C396 + C50538 * C410) * C19750 +
            (C19749 * C406 + C50538 * C426) * C19745 + C20373 * C19751 +
            C20374 * C19746 + C20375 * C19752 + C20376 * C19747 +
            C20377 * C19753 + C20378 * C19748) *
               C50700 * C50877 -
           (C19898 * C19748 + C19897 * C19753 + C19896 * C19747 +
            C19895 * C19752 + C19894 * C19746 + C19893 * C19751 +
            (C19749 * C134 + C50538 * C144) * C19745 +
            (C19749 * C123 + C50538 * C130) * C19750) *
               C50700 * C50876 -
           ((C19749 * C3543 + C50538 * C3547) * C19748 +
            (C19749 * C3541 + C50538 * C3545) * C19753 +
            (C19749 * C2553 + C50538 * C2557) * C19747 +
            (C19749 * C2548 + C50538 * C2551) * C19752 +
            (C19749 * C1089 + C50538 * C1097) * C19746 +
            (C19749 * C1085 + C50538 * C1093) * C19751 +
            (C19749 * C417 + C50538 * C429) * C19745 +
            (C19749 * C399 + C50538 * C413) * C19750) *
               C50700 * C1960) *
              C50587 * C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
             C16965 * C124 + C16960 * C131) *
                C16966 +
            (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
             C16965 * C135 + C16960 * C145) *
                C16961 +
            (C17163 + C17164 + C17165) * C16967 +
            (C17166 + C17167 + C17168) * C50738) *
               C50700 * C50876 -
           ((C17861 + C17862 + C17863) * C50738 +
            (C17864 + C17865 + C17866) * C16967 +
            (C16965 * C405 + C16960 * C425 + C16964 * C406 + C16959 * C426 +
             C16963 * C407 + C16958 * C427) *
                C16961 +
            (C16965 * C395 + C16960 * C409 + C16964 * C396 + C16959 * C410 +
             C16963 * C397 + C16958 * C411) *
                C16966) *
               C50700 * C50877 +
           ((C16963 * C398 + C16958 * C412 + C16964 * C399 + C16959 * C413 +
             C16965 * C400 + C16960 * C414) *
                C16966 +
            (C16963 * C416 + C16958 * C428 + C16964 * C417 + C16959 * C429 +
             C16965 * C418 + C16960 * C430) *
                C16961 +
            (C18293 + C18294 + C18295) * C16967 +
            (C18296 + C18297 + C18298) * C50738) *
               C50700 * C1960) *
              C50587 * C50821 +
          (((C16963 * C396 + C16958 * C410 + C16964 * C395 + C16959 * C409 +
             C16965 * C394 + C16960 * C408) *
                C16966 +
            (C16963 * C406 + C16958 * C426 + C16964 * C405 + C16959 * C425 +
             C16965 * C404 + C16960 * C424) *
                C16961 +
            (C17867 + C17868 + C17869) * C16967 +
            (C17870 + C17871 + C17872) * C50738) *
               C50700 * C50877 -
           ((C17180 + C17179 + C17178) * C50738 +
            (C17177 + C17176 + C17175) * C16967 +
            (C16965 * C136 + C16960 * C146 + C16964 * C135 + C16959 * C145 +
             C16963 * C134 + C16958 * C144) *
                C16961 +
            (C16965 * C125 + C16960 * C132 + C16964 * C124 + C16959 * C131 +
             C16963 * C123 + C16958 * C130) *
                C16966) *
               C50700 * C50876 -
           ((C16965 * C1087 + C16960 * C1095 + C16964 * C1088 + C16959 * C1096 +
             C16963 * C1089 + C16958 * C1097) *
                C50738 +
            (C16965 * C1083 + C16960 * C1091 + C16964 * C1084 + C16959 * C1092 +
             C16963 * C1085 + C16958 * C1093) *
                C16967 +
            (C16965 * C419 + C16960 * C431 + C16964 * C418 + C16959 * C430 +
             C16963 * C417 + C16958 * C429) *
                C16961 +
            (C16965 * C401 + C16960 * C415 + C16964 * C400 + C16959 * C414 +
             C16963 * C399 + C16958 * C413) *
                C16966) *
               C50700 * C1960) *
              C50587 * C50574)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C16966 +
             (C19749 * C133 + C50538 * C143) * C16961 + C19885 * C16967 +
             C19886 * C50738) *
                C5071 +
            (C22059 + C22060 + C22007 + C22008) * C5072 + C22079 * C5073) *
               C50876 -
           (C23926 * C5073 + (C22014 + C22013 + C22062 + C22061) * C5072 +
            (C22008 + C22007 + C22060 + C22059) * C5071) *
               C50877 +
           (C22079 * C5071 + (C22066 + C22065 + C22064 + C22063) * C5072 +
            (C23927 + C23928 + C23921 + C23922) * C5073) *
               C1960) *
              C50587 * C50821 +
          (((C22067 + C22068 + C22027 + C22028) * C5071 +
            (C22069 + C22070 + C22033 + C22034) * C5072 +
            (C22071 + C22072 + C22073 + C22074) * C5073) *
               C50877 -
           (C22080 * C5073 + (C22028 + C22027 + C22068 + C22067) * C5072 +
            (C19894 * C50738 + C19893 * C16967 +
             (C19749 * C134 + C50538 * C144) * C16961 +
             (C19749 * C123 + C50538 * C130) * C16966) *
                C5071) *
               C50876 -
           (((C19749 * C6378 + C50538 * C6382) * C50738 +
             (C19749 * C6376 + C50538 * C6380) * C16967 +
             (C19749 * C5372 + C50538 * C5376) * C16961 +
             (C19749 * C5367 + C50538 * C5370) * C16966) *
                C5073 +
            (C22074 + C22073 + C22072 + C22071) * C5072 + C22080 * C5071) *
               C1960) *
              C50587 * C50574)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
             C16965 * C124 + C16960 * C131) *
                C16966 +
            (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
             C16965 * C135 + C16960 * C145) *
                C16961 +
            (C17163 + C17164 + C17165) * C16967 +
            (C17166 + C17167 + C17168) * C50738) *
               C50700 * C1544 -
           ((C17861 + C17862 + C17863) * C50738 +
            (C17864 + C17865 + C17866) * C16967 +
            (C16965 * C405 + C16960 * C425 + C16964 * C406 + C16959 * C426 +
             C16963 * C407 + C16958 * C427) *
                C16961 +
            (C16965 * C395 + C16960 * C409 + C16964 * C396 + C16959 * C410 +
             C16963 * C397 + C16958 * C411) *
                C16966) *
               C50700 * C50667) *
              C248 +
          (((C17866 + C17865 + C17864) * C16966 +
            (C17863 + C17862 + C17861) * C16961 +
            (C18797 + C18798 + C18799) * C16967 +
            (C18800 + C18801 + C18802) * C50738) *
               C50700 * C50667 -
           ((C17169 + C17170 + C17171) * C50738 +
            (C17172 + C17173 + C17174) * C16967 +
            (C17168 + C17167 + C17166) * C16961 +
            (C17165 + C17164 + C17163) * C16966) *
               C50700 * C1544) *
              C249 +
          (((C17174 + C17173 + C17172) * C16966 +
            (C17171 + C17170 + C17169) * C16961 +
            (C18129 + C18130 + C18131) * C16967 +
            (C18132 + C18133 + C18134) * C50738) *
               C50700 * C1544 -
           ((C16965 * C3076 + C16960 * C3080 + C16964 * C3075 + C16959 * C3079 +
             C16963 * C3074 + C16958 * C3078) *
                C50738 +
            (C16965 * C3071 + C16960 * C3077 + C16964 * C3070 + C16959 * C3073 +
             C16963 * C3069 + C16958 * C3072) *
                C16967 +
            (C18802 + C18801 + C18800) * C16961 +
            (C18799 + C18798 + C18797) * C16966) *
               C50700 * C50667) *
              C250) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
             C16965 * C124 + C16960 * C131) *
                C16966 +
            (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
             C16965 * C135 + C16960 * C145) *
                C16961 +
            (C17163 + C17164 + C17165) * C16967 +
            (C17166 + C17167 + C17168) * C50738) *
               C50700 * C1544 -
           ((C17861 + C17862 + C17863) * C50738 +
            (C17864 + C17865 + C17866) * C16967 +
            (C16965 * C405 + C16960 * C425 + C16964 * C406 + C16959 * C426 +
             C16963 * C407 + C16958 * C427) *
                C16961 +
            (C16965 * C395 + C16960 * C409 + C16964 * C396 + C16959 * C410 +
             C16963 * C397 + C16958 * C411) *
                C16966) *
               C50700 * C50667) *
              C50587 * C895 +
          (((C16963 * C396 + C16958 * C410 + C16964 * C395 + C16959 * C409 +
             C16965 * C394 + C16960 * C408) *
                C16966 +
            (C16963 * C406 + C16958 * C426 + C16964 * C405 + C16959 * C425 +
             C16965 * C404 + C16960 * C424) *
                C16961 +
            (C17867 + C17868 + C17869) * C16967 +
            (C17870 + C17871 + C17872) * C50738) *
               C50700 * C50667 -
           ((C17180 + C17179 + C17178) * C50738 +
            (C17177 + C17176 + C17175) * C16967 +
            (C16965 * C136 + C16960 * C146 + C16964 * C135 + C16959 * C145 +
             C16963 * C134 + C16958 * C144) *
                C16961 +
            (C16965 * C125 + C16960 * C132 + C16964 * C124 + C16959 * C131 +
             C16963 * C123 + C16958 * C130) *
                C16966) *
               C50700 * C1544) *
              C50587 * C896 +
          (((C16963 * C124 + C16958 * C131 + C16964 * C125 + C16959 * C132 +
             C16965 * C126 + C16960 * C138) *
                C16966 +
            (C16963 * C135 + C16958 * C145 + C16964 * C136 + C16959 * C146 +
             C16965 * C137 + C16960 * C147) *
                C16961 +
            (C17491 + C17492 + C17493) * C16967 +
            (C17494 + C17495 + C17496) * C50738) *
               C50700 * C1544 -
           ((C16965 * C788 + C16960 * C794 + C16964 * C787 + C16959 * C793 +
             C16963 * C786 + C16958 * C792) *
                C50738 +
            (C16965 * C779 + C16960 * C789 + C16964 * C778 + C16959 * C783 +
             C16963 * C777 + C16958 * C782) *
                C16967 +
            (C16965 * C421 + C16960 * C432 + C16964 * C404 + C16959 * C424 +
             C16963 * C405 + C16958 * C425) *
                C16961 +
            (C16965 * C402 + C16960 * C420 + C16964 * C394 + C16959 * C408 +
             C16963 * C395 + C16958 * C409) *
                C16966) *
               C50700 * C50667) *
              C50587 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19749 * C122 + C50538 * C129) * C19750 +
            (C19749 * C133 + C50538 * C143) * C19745 + C19885 * C19751 +
            C19886 * C19746 + C19887 * C19752 + C19888 * C19747 +
            C19889 * C19753 + C19890 * C19748) *
               C50700 * C1544 -
           (C20367 * C19748 + C20368 * C19753 + C20369 * C19747 +
            C20370 * C19752 + C20371 * C19746 + C20372 * C19751 +
            (C19749 * C407 + C50538 * C427) * C19745 +
            (C19749 * C397 + C50538 * C411) * C19750) *
               C50700 * C50667) *
              C50587 * C895 +
          (((C19749 * C396 + C50538 * C410) * C19750 +
            (C19749 * C406 + C50538 * C426) * C19745 + C20373 * C19751 +
            C20374 * C19746 + C20375 * C19752 + C20376 * C19747 +
            C20377 * C19753 + C20378 * C19748) *
               C50700 * C50667 -
           (C19898 * C19748 + C19897 * C19753 + C19896 * C19747 +
            C19895 * C19752 + C19894 * C19746 + C19893 * C19751 +
            (C19749 * C134 + C50538 * C144) * C19745 +
            (C19749 * C123 + C50538 * C130) * C19750) *
               C50700 * C1544) *
              C50587 * C896 +
          (((C19749 * C124 + C50538 * C131) * C19750 +
            (C19749 * C135 + C50538 * C145) * C19745 + C20109 * C19751 +
            C20110 * C19746 + C20111 * C19752 + C20112 * C19747 +
            C20113 * C19753 + C20114 * C19748) *
               C50700 * C1544 -
           ((C19749 * C3076 + C50538 * C3080) * C19748 +
            (C19749 * C3071 + C50538 * C3077) * C19753 +
            (C19749 * C1435 + C50538 * C1443) * C19747 +
            (C19749 * C1431 + C50538 * C1439) * C19752 +
            (C19749 * C786 + C50538 * C792) * C19746 +
            (C19749 * C777 + C50538 * C782) * C19751 +
            (C19749 * C405 + C50538 * C425) * C19745 +
            (C19749 * C395 + C50538 * C409) * C19750) *
               C50700 * C50667) *
              C50587 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19749 * C122 + C50538 * C129) * C19750 +
            (C19749 * C133 + C50538 * C143) * C19745 + C19885 * C19751 +
            C19886 * C19746 + C19887 * C19752 + C19888 * C19747 +
            C19889 * C19753 + C19890 * C19748) *
               C50700 * C1544 -
           (C20367 * C19748 + C20368 * C19753 + C20369 * C19747 +
            C20370 * C19752 + C20371 * C19746 + C20372 * C19751 +
            (C19749 * C407 + C50538 * C427) * C19745 +
            (C19749 * C397 + C50538 * C411) * C19750) *
               C50700 * C50667) *
              C248 +
          ((C20372 * C19750 + C20371 * C19745 + C20370 * C19751 +
            C20369 * C19746 + C20368 * C19752 + C20367 * C19747 +
            C21007 * C19753 + C21008 * C19748) *
               C50700 * C50667 -
           (C19891 * C19748 + C19892 * C19753 + C19890 * C19747 +
            C19889 * C19752 + C19888 * C19746 + C19887 * C19751 +
            C19886 * C19745 + C19885 * C19750) *
               C50700 * C1544) *
              C249 +
          ((C19887 * C19750 + C19888 * C19745 + C19889 * C19751 +
            C19890 * C19746 + C19892 * C19752 + C19891 * C19747 +
            C20551 * C19753 + C20552 * C19748) *
               C50700 * C1544 -
           ((C19749 * C20999 + C50538 * C21001) * C19748 +
            (C19749 * C20998 + C50538 * C21000) * C19753 + C21008 * C19747 +
            C21007 * C19752 + C20367 * C19746 + C20368 * C19751 +
            C20369 * C19745 + C20370 * C19750) *
               C50700 * C50667) *
              C250) *
         C50568) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C16966 +
             (C19749 * C133 + C50538 * C143) * C16961 + C19885 * C16967 +
             C19886 * C50738) *
                C5071 +
            (C22059 + C22060 + C22007 + C22008) * C5072 + C22079 * C5073) *
               C1544 -
           ((C22063 + C22064 + C22065 + C22066) * C5073 +
            (C22014 + C22013 + C22062 + C22061) * C5072 +
            (C22008 + C22007 + C22060 + C22059) * C5071) *
               C50667) *
              C50587 * C895 +
          (((C22067 + C22068 + C22027 + C22028) * C5071 +
            (C22069 + C22070 + C22033 + C22034) * C5072 +
            (C22071 + C22072 + C22073 + C22074) * C5073) *
               C50667 -
           (C22080 * C5073 + (C22028 + C22027 + C22068 + C22067) * C5072 +
            (C19894 * C50738 + C19893 * C16967 +
             (C19749 * C134 + C50538 * C144) * C16961 +
             (C19749 * C123 + C50538 * C130) * C16966) *
                C5071) *
               C1544) *
              C50587 * C896 +
          ((((C19749 * C124 + C50538 * C131) * C16966 +
             (C19749 * C135 + C50538 * C145) * C16961 + C20109 * C16967 +
             C20110 * C50738) *
                C5071 +
            (C22401 + C22402 + C22389 + C22390) * C5072 +
            (C22403 + C22404 + C22395 + C22396) * C5073) *
               C1544 -
           (((C19749 * C5971 + C50538 * C5973) * C50738 +
             (C19749 * C5970 + C50538 * C5972) * C16967 +
             (C19749 * C1719 + C50538 * C1727) * C16961 +
             (C19749 * C1715 + C50538 * C1723) * C16966) *
                C5073 +
            (C22396 + C22395 + C22404 + C22403) * C5072 +
            (C22390 + C22389 + C22402 + C22401) * C5071) *
               C50667) *
              C50587 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C16966 +
             (C19749 * C133 + C50538 * C143) * C16961 + C19885 * C16967 +
             C19886 * C50738) *
                C5071 +
            (C22059 + C22060 + C22007 + C22008) * C5072 + C22079 * C5073) *
               C1544 -
           ((C22063 + C22064 + C22065 + C22066) * C5073 +
            (C22014 + C22013 + C22062 + C22061) * C5072 +
            (C22008 + C22007 + C22060 + C22059) * C5071) *
               C50667) *
              C248 +
          (((C22599 + C22600 + C22601 + C22602) * C5071 +
            (C22603 + C22604 + C22605 + C22606) * C5072 +
            (C23013 + C23014 + C23025 + C23026) * C5073) *
               C50667 -
           (C23027 * C5073 + (C22602 + C22601 + C22600 + C22599) * C5072 +
            (C19888 * C50738 + C19887 * C16967 + C19886 * C16961 +
             C19885 * C16966) *
                C5071) *
               C1544) *
              C249 +
          (((C19887 * C16966 + C19888 * C16961 + C19889 * C16967 +
             C19890 * C50738) *
                C5071 +
            (C23514 + C23515 + C23516 + C23517) * C5072 +
            (C23518 + C23519 + C23520 + C23521) * C5073) *
               C1544 -
           (((C19749 * C21271 + C50538 * C21273) * C50738 +
             (C19749 * C21270 + C50538 * C21272) * C16967 + C23023 * C16961 +
             C23022 * C16966) *
                C5073 +
            (C23521 + C23520 + C23519 + C23518) * C5072 +
            (C23517 + C23516 + C23515 + C23514) * C5071) *
               C50667) *
              C250) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C16966 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C16961 +
             (C24717 + C24718) * C16967 + (C24719 + C24720) * C50738) *
                C50843 +
            ((C27811 + C27812) * C16966 + (C27813 + C27814) * C16961 +
             (C25440 + C25439) * C16967 + (C25438 + C25437) * C50738) *
                C50764) *
               C50603 * C50829 -
           ((C26363 * C50738 + C26364 * C16967 + (C25437 + C25438) * C16961 +
             (C25439 + C25440) * C16966) *
                C50764 +
            ((C24724 + C24723) * C50738 + (C24722 + C24721) * C16967 +
             (C24720 + C24719) * C16961 + (C24718 + C24717) * C16966) *
                C50843) *
               C50603 * C50639) *
              C50872 +
          ((((C24729 + C24730) * C16966 + (C24731 + C24732) * C16961 +
             (C24733 + C24734) * C16967 + (C24735 + C24736) * C50738) *
                C50843 +
            ((C25441 + C25442) * C16966 + (C25443 + C25444) * C16961 +
             (C25445 + C25446) * C16967 + (C25447 + C25448) * C50738) *
                C50764) *
               C50603 * C50639 -
           (((C25444 + C25443) * C50738 + (C25442 + C25441) * C16967 +
             (C27822 + C27821) * C16961 + (C27820 + C27819) * C16966) *
                C50764 +
            ((C24732 + C24731) * C50738 + (C24730 + C24729) * C16967 +
             (C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                 C16961 +
             (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                 C16966) *
                C50843) *
               C50603 * C50829) *
              C50873 +
          ((((C49747 * C124 + C50814 * C131 + C49740 * C125 + C50543 * C132) *
                 C16966 +
             (C49747 * C135 + C50814 * C145 + C49740 * C136 + C50543 * C146) *
                 C16961 +
             (C25053 + C25054) * C16967 + (C25055 + C25056) * C50738) *
                C50843 +
            ((C49747 * C395 + C50814 * C409 + C49740 * C394 + C50543 * C408) *
                 C16966 +
             (C49747 * C405 + C50814 * C425 + C49740 * C404 + C50543 * C424) *
                 C16961 +
             (C28033 + C28034) * C16967 + (C28035 + C28036) * C50738) *
                C50764) *
               C50603 * C50829 -
           (((C49740 * C1434 + C50543 * C1442 + C49747 * C1435 +
              C50814 * C1443) *
                 C50738 +
             (C49740 * C1430 + C50543 * C1438 + C49747 * C1431 +
              C50814 * C1439) *
                 C16967 +
             (C28036 + C28035) * C16961 + (C28034 + C28033) * C16966) *
                C50764 +
            ((C25060 + C25059) * C50738 + (C25058 + C25057) * C16967 +
             (C25056 + C25055) * C16961 + (C25054 + C25053) * C16966) *
                C50843) *
               C50603 * C50639) *
              C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                  C16966 +
              (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                  C16961 +
              (C24717 + C24718) * C16967 + (C24719 + C24720) * C50738) *
                 C50843 +
             ((C27811 + C27812) * C16966 + (C27813 + C27814) * C16961 +
              C28501 * C16967 + C28502 * C50738) *
                 C50764) *
                C50830 -
            (((C25872 + C25871) * C50738 + (C25870 + C25869) * C16967 +
              (C27815 + C27816) * C16961 + (C27817 + C27818) * C16966) *
                 C50764 +
             (C28503 * C50738 + C28504 * C16967 + (C27814 + C27813) * C16961 +
              (C27812 + C27811) * C16966) *
                 C50843) *
                C50667) *
               C50829 +
           (((C28501 * C16966 + C28502 * C16961 + (C25436 + C25435) * C16967 +
              (C25434 + C25433) * C50738) *
                 C50843 +
             ((C25869 + C25870) * C16966 + (C25871 + C25872) * C16961 +
              (C25873 + C25874) * C16967 + (C25875 + C25876) * C50738) *
                 C50764) *
                C50667 -
            ((C26363 * C50738 + C26364 * C16967 + C28503 * C16961 +
              C28504 * C16966) *
                 C50764 +
             ((C24724 + C24723) * C50738 + (C24722 + C24721) * C16967 +
              (C24720 + C24719) * C16961 + (C24718 + C24717) * C16966) *
                 C50843) *
                C50830) *
               C50639) *
              C251 +
          (((((C27819 + C27820) * C16966 + (C27821 + C27822) * C16961 +
              C28505 * C16967 + C28506 * C50738) *
                 C50843 +
             ((C27823 + C27824) * C16966 + (C27825 + C27826) * C16961 +
              (C27827 + C27828) * C16967 + (C27829 + C27830) * C50738) *
                 C50764) *
                C50667 -
            ((C28507 * C50738 + C28508 * C16967 + (C27822 + C27821) * C16961 +
              (C27820 + C27819) * C16966) *
                 C50764 +
             ((C24732 + C24731) * C50738 + (C24730 + C24729) * C16967 +
              (C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                  C16961 +
              (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                  C16966) *
                 C50843) *
                C50830) *
               C50829 +
           ((((C24729 + C24730) * C16966 + (C24731 + C24732) * C16961 +
              (C24733 + C24734) * C16967 + (C24735 + C24736) * C50738) *
                 C50843 +
             (C28505 * C16966 + C28506 * C16961 + (C25445 + C25446) * C16967 +
              (C25447 + C25448) * C50738) *
                 C50764) *
                C50830 -
            (((C49740 * C2554 + C50543 * C2558 + C49747 * C2553 +
               C50814 * C2557) *
                  C50738 +
              (C49740 * C2549 + C50543 * C2555 + C49747 * C2548 +
               C50814 * C2551) *
                  C16967 +
              (C27830 + C27829) * C16961 + (C27828 + C27827) * C16966) *
                 C50764 +
             ((C25448 + C25447) * C50738 + (C25446 + C25445) * C16967 +
              C28507 * C16961 + C28508 * C16966) *
                 C50843) *
                C50667) *
               C50639) *
              C50574)) /
        (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C16966 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C16961 +
             (C24717 + C24718) * C16967 + (C24719 + C24720) * C50738) *
                C50843 +
            ((C49747 * C397 + C50814 * C411 + C49740 * C396 + C50543 * C410) *
                 C16966 +
             (C49747 * C407 + C50814 * C427 + C49740 * C406 + C50543 * C426) *
                 C16961 +
             (C25440 + C25439) * C16967 + (C25438 + C25437) * C50738) *
                C50764) *
               C50603 * C248 -
           ((C26363 * C50738 + C26364 * C16967 + (C25437 + C25438) * C16961 +
             (C25439 + C25440) * C16966) *
                C50764 +
            ((C24724 + C24723) * C50738 + (C24722 + C24721) * C16967 +
             (C24720 + C24719) * C16961 + (C24718 + C24717) * C16966) *
                C50843) *
               C50603 * C249 +
           ((C24741 * C16966 + C24742 * C16961 + (C24728 + C24727) * C16967 +
             (C24726 + C24725) * C50738) *
                C50843 +
            ((C25436 + C25435) * C16966 + (C25434 + C25433) * C16961 +
             (C26373 + C26374) * C16967 + (C26375 + C26376) * C50738) *
                C50764) *
               C50603 * C250) *
              C251 +
          ((((C24729 + C24730) * C16966 + (C24731 + C24732) * C16961 +
             (C24733 + C24734) * C16967 + (C24735 + C24736) * C50738) *
                C50843 +
            ((C25441 + C25442) * C16966 + (C25443 + C25444) * C16961 +
             (C25445 + C25446) * C16967 + (C25447 + C25448) * C50738) *
                C50764) *
               C50603 * C249 -
           (((C25444 + C25443) * C50738 + (C25442 + C25441) * C16967 +
             (C49740 * C405 + C50543 * C425 + C49747 * C406 + C50814 * C426) *
                 C16961 +
             (C49740 * C395 + C50543 * C409 + C49747 * C396 + C50814 * C410) *
                 C16966) *
                C50764 +
            ((C24732 + C24731) * C50738 + (C24730 + C24729) * C16967 +
             (C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                 C16961 +
             (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                 C16966) *
                C50843) *
               C50603 * C248 -
           (((C49740 * C3076 + C50543 * C3080 + C49747 * C3075 +
              C50814 * C3079) *
                 C50738 +
             (C49740 * C3071 + C50543 * C3077 + C49747 * C3070 +
              C50814 * C3073) *
                 C16967 +
             (C25448 + C25447) * C16961 + (C25446 + C25445) * C16966) *
                C50764 +
            ((C24740 + C24739) * C50738 + (C24738 + C24737) * C16967 +
             C24743 * C16961 + C24744 * C16966) *
                C50843) *
               C50603 * C250) *
              C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                C16966 +
            (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                C16961 +
            (C24717 + C24718) * C16967 + (C24719 + C24720) * C50738) *
               C50843 +
           ((C49747 * C397 + C50814 * C411 + C49740 * C396 + C50543 * C410) *
                C16966 +
            (C49747 * C407 + C50814 * C427 + C49740 * C406 + C50543 * C426) *
                C16961 +
            (C25440 + C25439) * C16967 + (C25438 + C25437) * C50738) *
               C50764) *
              C50603 * C50587 * C113 -
          (((C25444 + C25443) * C50738 + (C25442 + C25441) * C16967 +
            (C49740 * C405 + C50543 * C425 + C49747 * C406 + C50814 * C426) *
                C16961 +
            (C49740 * C395 + C50543 * C409 + C49747 * C396 + C50814 * C410) *
                C16966) *
               C50764 +
           ((C24732 + C24731) * C50738 + (C24730 + C24729) * C16967 +
            (C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                C16961 +
            (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                C16966) *
               C50843) *
              C50603 * C50587 * C114 +
          (((C49747 * C124 + C50814 * C131 + C49740 * C125 + C50543 * C132) *
                C16966 +
            (C49747 * C135 + C50814 * C145 + C49740 * C136 + C50543 * C146) *
                C16961 +
            (C25053 + C25054) * C16967 + (C25055 + C25056) * C50738) *
               C50843 +
           ((C49747 * C395 + C50814 * C409 + C49740 * C394 + C50543 * C408) *
                C16966 +
            (C49747 * C405 + C50814 * C425 + C49740 * C404 + C50543 * C424) *
                C16961 +
            (C49747 * C777 + C50814 * C782 + C49740 * C778 + C50543 * C783) *
                C16967 +
            (C49747 * C786 + C50814 * C792 + C49740 * C787 + C50543 * C793) *
                C50738) *
               C50764) *
              C50603 * C50587 * C115 -
          (((C49740 * C788 + C50543 * C794 + C49747 * C787 + C50814 * C793) *
                C50738 +
            (C49740 * C779 + C50543 * C789 + C49747 * C778 + C50814 * C783) *
                C16967 +
            (C49740 * C421 + C50543 * C432 + C49747 * C404 + C50814 * C424) *
                C16961 +
            (C49740 * C402 + C50543 * C420 + C49747 * C394 + C50814 * C408) *
                C16966) *
               C50764 +
           ((C49740 * C280 + C50543 * C291 + C49747 * C263 + C50814 * C283) *
                C50738 +
            (C49740 * C261 + C50543 * C279 + C49747 * C253 + C50814 * C267) *
                C16967 +
            (C49740 * C137 + C50543 * C147 + C49747 * C136 + C50814 * C146) *
                C16961 +
            (C49740 * C126 + C50543 * C138 + C49747 * C125 + C50814 * C132) *
                C16966) *
               C50843) *
              C50603 * C50587 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C16966 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C16961 +
             (C24717 + C24718) * C16967 + (C24719 + C24720) * C50738) *
                C50843 +
            ((C27811 + C27812) * C16966 + (C27813 + C27814) * C16961 +
             (C25440 + C25439) * C16967 + (C25438 + C25437) * C50738) *
                C50764) *
               C391 -
           (((C25872 + C25871) * C50738 + (C25870 + C25869) * C16967 +
             (C27815 + C27816) * C16961 + (C27817 + C27818) * C16966) *
                C50764 +
            ((C25437 + C25438) * C50738 + (C25439 + C25440) * C16967 +
             (C27814 + C27813) * C16961 + (C27812 + C27811) * C16966) *
                C50843) *
               C392 +
           (((C27818 + C27817) * C16966 + (C27816 + C27815) * C16961 +
             (C25869 + C25870) * C16967 + (C25871 + C25872) * C50738) *
                C50843 +
            ((C49747 * C1717 + C50814 * C1725 + C49740 * C1716 +
              C50543 * C1724) *
                 C16966 +
             (C49747 * C1721 + C50814 * C1729 + C49740 * C1720 +
              C50543 * C1728) *
                 C16961 +
             (C49747 * C4474 + C50814 * C4482 + C49740 * C4473 +
              C50543 * C4481) *
                 C16967 +
             (C49747 * C4480 + C50814 * C4486 + C49740 * C4479 +
              C50543 * C4485) *
                 C50738) *
                C50764) *
               C393) *
              C50587 * C251 +
          ((((C27819 + C27820) * C16966 + (C27821 + C27822) * C16961 +
             (C25441 + C25442) * C16967 + (C25443 + C25444) * C50738) *
                C50843 +
            ((C27823 + C27824) * C16966 + (C27825 + C27826) * C16961 +
             (C27827 + C27828) * C16967 + (C27829 + C27830) * C50738) *
                C50764) *
               C392 -
           (((C25444 + C25443) * C50738 + (C25442 + C25441) * C16967 +
             (C27822 + C27821) * C16961 + (C27820 + C27819) * C16966) *
                C50764 +
            ((C24732 + C24731) * C50738 + (C24730 + C24729) * C16967 +
             (C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                 C16961 +
             (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                 C16966) *
                C50843) *
               C391 -
           (((C49740 * C5971 + C50543 * C5973 + C49747 * C4479 +
              C50814 * C4485) *
                 C50738 +
             (C49740 * C5970 + C50543 * C5972 + C49747 * C4473 +
              C50814 * C4481) *
                 C16967 +
             (C49740 * C1719 + C50543 * C1727 + C49747 * C1720 +
              C50814 * C1728) *
                 C16961 +
             (C49740 * C1715 + C50543 * C1723 + C49747 * C1716 +
              C50814 * C1724) *
                 C16966) *
                C50764 +
            ((C27830 + C27829) * C50738 + (C27828 + C27827) * C16967 +
             (C27826 + C27825) * C16961 + (C27824 + C27823) * C16966) *
                C50843) *
               C393) *
              C50587 * C50574)) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C16966 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C16961 +
             (C24717 + C24718) * C16967 + (C24719 + C24720) * C50738) *
                C50843 +
            ((C27811 + C27812) * C16966 + (C27813 + C27814) * C16961 +
             (C25440 + C25439) * C16967 + (C25438 + C25437) * C50738) *
                C50764) *
               C50830 -
           (((C25872 + C25871) * C50738 + (C25870 + C25869) * C16967 +
             (C27815 + C27816) * C16961 + (C27817 + C27818) * C16966) *
                C50764 +
            ((C25437 + C25438) * C50738 + (C25439 + C25440) * C16967 +
             (C27814 + C27813) * C16961 + (C27812 + C27811) * C16966) *
                C50843) *
               C50667) *
              C50587 * C50872 +
          ((((C27819 + C27820) * C16966 + (C27821 + C27822) * C16961 +
             (C25441 + C25442) * C16967 + (C25443 + C25444) * C50738) *
                C50843 +
            ((C27823 + C27824) * C16966 + (C27825 + C27826) * C16961 +
             (C27827 + C27828) * C16967 + (C27829 + C27830) * C50738) *
                C50764) *
               C50667 -
           (((C25444 + C25443) * C50738 + (C25442 + C25441) * C16967 +
             (C27822 + C27821) * C16961 + (C27820 + C27819) * C16966) *
                C50764 +
            ((C24732 + C24731) * C50738 + (C24730 + C24729) * C16967 +
             (C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                 C16961 +
             (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                 C16966) *
                C50843) *
               C50830) *
              C50587 * C50873 +
          ((((C49747 * C124 + C50814 * C131 + C49740 * C125 + C50543 * C132) *
                 C16966 +
             (C49747 * C135 + C50814 * C145 + C49740 * C136 + C50543 * C146) *
                 C16961 +
             (C25053 + C25054) * C16967 + (C25055 + C25056) * C50738) *
                C50843 +
            ((C28239 + C28240) * C16966 + (C28241 + C28242) * C16961 +
             (C28033 + C28034) * C16967 + (C28035 + C28036) * C50738) *
                C50764) *
               C50830 -
           (((C49740 * C1087 + C50543 * C1095 + C49747 * C1088 +
              C50814 * C1096) *
                 C50738 +
             (C49740 * C1083 + C50543 * C1091 + C49747 * C1084 +
              C50814 * C1092) *
                 C16967 +
             (C49740 * C419 + C50543 * C431 + C49747 * C418 + C50814 * C430) *
                 C16961 +
             (C49740 * C401 + C50543 * C415 + C49747 * C400 + C50814 * C414) *
                 C16966) *
                C50764 +
            ((C28036 + C28035) * C50738 + (C28034 + C28033) * C16967 +
             (C28242 + C28241) * C16961 + (C28240 + C28239) * C16966) *
                C50843) *
               C50667) *
              C50587 * C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                C16966 +
            (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                C16961 +
            (C24717 + C24718) * C16967 + (C24719 + C24720) * C50738) *
               C50843 +
           ((C49747 * C397 + C50814 * C411 + C49740 * C396 + C50543 * C410) *
                C16966 +
            (C49747 * C407 + C50814 * C427 + C49740 * C406 + C50543 * C426) *
                C16961 +
            (C25440 + C25439) * C16967 + (C25438 + C25437) * C50738) *
               C50764) *
              C50603 * C50587 * C113 -
          (((C25444 + C25443) * C50738 + (C25442 + C25441) * C16967 +
            (C49740 * C405 + C50543 * C425 + C49747 * C406 + C50814 * C426) *
                C16961 +
            (C49740 * C395 + C50543 * C409 + C49747 * C396 + C50814 * C410) *
                C16966) *
               C50764 +
           ((C24732 + C24731) * C50738 + (C24730 + C24729) * C16967 +
            (C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                C16961 +
            (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                C16966) *
               C50843) *
              C50603 * C50587 * C114 +
          (((C49747 * C124 + C50814 * C131 + C49740 * C125 + C50543 * C132) *
                C16966 +
            (C49747 * C135 + C50814 * C145 + C49740 * C136 + C50543 * C146) *
                C16961 +
            (C25053 + C25054) * C16967 + (C25055 + C25056) * C50738) *
               C50843 +
           ((C49747 * C395 + C50814 * C409 + C49740 * C394 + C50543 * C408) *
                C16966 +
            (C49747 * C405 + C50814 * C425 + C49740 * C404 + C50543 * C424) *
                C16961 +
            (C49747 * C777 + C50814 * C782 + C49740 * C778 + C50543 * C783) *
                C16967 +
            (C49747 * C786 + C50814 * C792 + C49740 * C787 + C50543 * C793) *
                C50738) *
               C50764) *
              C50603 * C50587 * C115 -
          (((C49740 * C788 + C50543 * C794 + C49747 * C787 + C50814 * C793) *
                C50738 +
            (C49740 * C779 + C50543 * C789 + C49747 * C778 + C50814 * C783) *
                C16967 +
            (C49740 * C421 + C50543 * C432 + C49747 * C404 + C50814 * C424) *
                C16961 +
            (C49740 * C402 + C50543 * C420 + C49747 * C394 + C50814 * C408) *
                C16966) *
               C50764 +
           ((C49740 * C280 + C50543 * C291 + C49747 * C263 + C50814 * C283) *
                C50738 +
            (C49740 * C261 + C50543 * C279 + C49747 * C253 + C50814 * C267) *
                C16967 +
            (C49740 * C137 + C50543 * C147 + C49747 * C136 + C50814 * C146) *
                C16961 +
            (C49740 * C126 + C50543 * C138 + C49747 * C125 + C50814 * C132) *
                C16966) *
               C50843) *
              C50603 * C50587 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C16966 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C16961 +
             (C24717 + C24718) * C16967 + (C24719 + C24720) * C50738) *
                C50843 +
            ((C49747 * C397 + C50814 * C411 + C49740 * C396 + C50543 * C410) *
                 C16966 +
             (C49747 * C407 + C50814 * C427 + C49740 * C406 + C50543 * C426) *
                 C16961 +
             (C25440 + C25439) * C16967 + (C25438 + C25437) * C50738) *
                C50764) *
               C50603 * C248 -
           ((C26363 * C50738 + C26364 * C16967 + (C25437 + C25438) * C16961 +
             (C25439 + C25440) * C16966) *
                C50764 +
            ((C24724 + C24723) * C50738 + (C24722 + C24721) * C16967 +
             (C24720 + C24719) * C16961 + (C24718 + C24717) * C16966) *
                C50843) *
               C50603 * C249 +
           ((C24741 * C16966 + C24742 * C16961 + (C24728 + C24727) * C16967 +
             (C24726 + C24725) * C50738) *
                C50843 +
            ((C25436 + C25435) * C16966 + (C25434 + C25433) * C16961 +
             (C26373 + C26374) * C16967 + (C26375 + C26376) * C50738) *
                C50764) *
               C50603 * C250) *
              C251 +
          ((((C24729 + C24730) * C16966 + (C24731 + C24732) * C16961 +
             (C24733 + C24734) * C16967 + (C24735 + C24736) * C50738) *
                C50843 +
            ((C25441 + C25442) * C16966 + (C25443 + C25444) * C16961 +
             (C25445 + C25446) * C16967 + (C25447 + C25448) * C50738) *
                C50764) *
               C50603 * C249 -
           (((C25444 + C25443) * C50738 + (C25442 + C25441) * C16967 +
             (C49740 * C405 + C50543 * C425 + C49747 * C406 + C50814 * C426) *
                 C16961 +
             (C49740 * C395 + C50543 * C409 + C49747 * C396 + C50814 * C410) *
                 C16966) *
                C50764 +
            ((C24732 + C24731) * C50738 + (C24730 + C24729) * C16967 +
             (C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                 C16961 +
             (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                 C16966) *
                C50843) *
               C50603 * C248 -
           (((C49740 * C3076 + C50543 * C3080 + C49747 * C3075 +
              C50814 * C3079) *
                 C50738 +
             (C49740 * C3071 + C50543 * C3077 + C49747 * C3070 +
              C50814 * C3073) *
                 C16967 +
             (C25448 + C25447) * C16961 + (C25446 + C25445) * C16966) *
                C50764 +
            ((C24740 + C24739) * C50738 + (C24738 + C24737) * C16967 +
             C24743 * C16961 + C24744 * C16966) *
                C50843) *
               C50603 * C250) *
              C50574)) /
            (p * q * std::sqrt(p + q));
    d2ee[125] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C16966 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C16961 +
             (C24717 + C24718) * C16967 + (C24719 + C24720) * C50738) *
                C50843 +
            ((C27811 + C27812) * C16966 + (C27813 + C27814) * C16961 +
             C28501 * C16967 + C28502 * C50738) *
                C50764) *
               C50603 * C50874 -
           ((C26363 * C50738 + C26364 * C16967 + C28503 * C16961 +
             C28504 * C16966) *
                C50764 +
            ((C24724 + C24723) * C50738 + (C24722 + C24721) * C16967 +
             (C24720 + C24719) * C16961 + (C24718 + C24717) * C16966) *
                C50843) *
               C50603 * C50875 +
           ((C24741 * C16966 + C24742 * C16961 + (C24728 + C24727) * C16967 +
             (C24726 + C24725) * C50738) *
                C50843 +
            ((C25436 + C25435) * C16966 + (C25434 + C25433) * C16961 +
             (C26373 + C26374) * C16967 + (C26375 + C26376) * C50738) *
                C50764) *
               C50603 * C1199) *
              C50821 +
          ((((C24729 + C24730) * C16966 + (C24731 + C24732) * C16961 +
             (C24733 + C24734) * C16967 + (C24735 + C24736) * C50738) *
                C50843 +
            (C28505 * C16966 + C28506 * C16961 + (C25445 + C25446) * C16967 +
             (C25447 + C25448) * C50738) *
                C50764) *
               C50603 * C50875 -
           ((C28507 * C50738 + C28508 * C16967 + (C27822 + C27821) * C16961 +
             (C27820 + C27819) * C16966) *
                C50764 +
            ((C24732 + C24731) * C50738 + (C24730 + C24729) * C16967 +
             (C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                 C16961 +
             (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                 C16966) *
                C50843) *
               C50603 * C50874 -
           (((C49740 * C3076 + C50543 * C3080 + C49747 * C3075 +
              C50814 * C3079) *
                 C50738 +
             (C49740 * C3071 + C50543 * C3077 + C49747 * C3070 +
              C50814 * C3073) *
                 C16967 +
             (C25448 + C25447) * C16961 + (C25446 + C25445) * C16966) *
                C50764 +
            ((C24740 + C24739) * C50738 + (C24738 + C24737) * C16967 +
             C24743 * C16961 + C24744 * C16966) *
                C50843) *
               C50603 * C1199) *
              C50574)) /
        (p * q * std::sqrt(p + q));
    d2ee[126] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C16966 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C16961 +
             (C24717 + C24718) * C16967 + (C24719 + C24720) * C50738) *
                C50843 +
            ((C27811 + C27812) * C16966 + (C27813 + C27814) * C16961 +
             C28501 * C16967 + C28502 * C50738) *
                C50764) *
               C50830 -
           ((C29027 * C50738 + C29028 * C16967 + (C27815 + C27816) * C16961 +
             (C27817 + C27818) * C16966) *
                C50764 +
            (C28503 * C50738 + C28504 * C16967 + (C27814 + C27813) * C16961 +
             (C27812 + C27811) * C16966) *
                C50843) *
               C50667) *
              C50874 +
          (((C28501 * C16966 + C28502 * C16961 + C29689 * C16967 +
             C29690 * C50738) *
                C50843 +
            (C29029 * C16966 + C29030 * C16961 + (C25873 + C25874) * C16967 +
             (C25875 + C25876) * C50738) *
                C50764) *
               C50667 -
           ((C26363 * C50738 + C26364 * C16967 + C28503 * C16961 +
             C28504 * C16966) *
                C50764 +
            ((C24724 + C24723) * C50738 + (C24722 + C24721) * C16967 +
             (C24720 + C24719) * C16961 + (C24718 + C24717) * C16966) *
                C50843) *
               C50830) *
              C50875 +
          (((C24741 * C16966 + C24742 * C16961 + (C24728 + C24727) * C16967 +
             (C24726 + C24725) * C50738) *
                C50843 +
            (C29689 * C16966 + C29690 * C16961 + (C26373 + C26374) * C16967 +
             (C26375 + C26376) * C50738) *
                C50764) *
               C50830 -
           (((C49740 * C3543 + C50543 * C3547 + C49747 * C3544 +
              C50814 * C3548) *
                 C50738 +
             (C49740 * C3541 + C50543 * C3545 + C49747 * C3542 +
              C50814 * C3546) *
                 C16967 +
             (C25876 + C25875) * C16961 + (C25874 + C25873) * C16966) *
                C50764 +
            ((C26376 + C26375) * C50738 + (C26374 + C26373) * C16967 +
             C26363 * C16961 + C26364 * C16966) *
                C50843) *
               C50667) *
              C1199) *
         C50568) /
        (p * q * std::sqrt(p + q));
    d2ee[127] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                C16966 +
            (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                C16961 +
            (C24717 + C24718) * C16967 + (C24719 + C24720) * C50738) *
               C50843 +
           ((C27811 + C27812) * C16966 + (C27813 + C27814) * C16961 +
            C28501 * C16967 + C28502 * C50738) *
               C50764) *
              C50603 * C964 -
          ((C26363 * C50738 + C26364 * C16967 + C28503 * C16961 +
            C28504 * C16966) *
               C50764 +
           ((C24724 + C24723) * C50738 + (C24722 + C24721) * C16967 +
            (C24720 + C24719) * C16961 + (C24718 + C24717) * C16966) *
               C50843) *
              C50603 * C965 +
          ((C24741 * C16966 + C24742 * C16961 + (C24728 + C24727) * C16967 +
            (C24726 + C24725) * C50738) *
               C50843 +
           ((C25436 + C25435) * C16966 + (C25434 + C25433) * C16961 +
            (C26373 + C26374) * C16967 + (C26375 + C26376) * C50738) *
               C50764) *
              C50603 * C966 -
          (((C49740 * C4061 + C50543 * C4065 + C49747 * C4062 +
             C50814 * C4066) *
                C50738 +
            (C49740 * C4059 + C50543 * C4063 + C49747 * C4060 +
             C50814 * C4064) *
                C16967 +
            (C26376 + C26375) * C16961 + (C26374 + C26373) * C16966) *
               C50764 +
           ((C25706 + C25705) * C50738 + (C25704 + C25703) * C16967 +
            C25693 * C16961 + C25694 * C16966) *
               C50843) *
              C50603 * C967) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C16966 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C16961 +
             (C24717 + C24718) * C16967 + (C24719 + C24720) * C50738) *
                C50843 +
            ((C27811 + C27812) * C16966 + (C27813 + C27814) * C16961 +
             C28501 * C16967 + C28502 * C50738) *
                C50764) *
               C50603 * C893 -
           ((C26363 * C50738 + C26364 * C16967 + C28503 * C16961 +
             C28504 * C16966) *
                C50764 +
            ((C24724 + C24723) * C50738 + (C24722 + C24721) * C16967 +
             (C24720 + C24719) * C16961 + (C24718 + C24717) * C16966) *
                C50843) *
               C50603 * C50639) *
              C895 +
          ((((C24729 + C24730) * C16966 + (C24731 + C24732) * C16961 +
             (C24733 + C24734) * C16967 + (C24735 + C24736) * C50738) *
                C50843 +
            (C28505 * C16966 + C28506 * C16961 + (C25445 + C25446) * C16967 +
             (C25447 + C25448) * C50738) *
                C50764) *
               C50603 * C50639 -
           ((C28507 * C50738 + C28508 * C16967 + (C27822 + C27821) * C16961 +
             (C27820 + C27819) * C16966) *
                C50764 +
            ((C24732 + C24731) * C50738 + (C24730 + C24729) * C16967 +
             (C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                 C16961 +
             (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                 C16966) *
                C50843) *
               C50603 * C893) *
              C896 +
          ((((C49747 * C124 + C50814 * C131 + C49740 * C125 + C50543 * C132) *
                 C16966 +
             (C49747 * C135 + C50814 * C145 + C49740 * C136 + C50543 * C146) *
                 C16961 +
             (C25053 + C25054) * C16967 + (C25055 + C25056) * C50738) *
                C50843 +
            ((C28239 + C28240) * C16966 + (C28241 + C28242) * C16961 +
             (C28033 + C28034) * C16967 + (C28035 + C28036) * C50738) *
                C50764) *
               C50603 * C893 -
           (((C49740 * C1434 + C50543 * C1442 + C49747 * C1435 +
              C50814 * C1443) *
                 C50738 +
             (C49740 * C1430 + C50543 * C1438 + C49747 * C1431 +
              C50814 * C1439) *
                 C16967 +
             (C28036 + C28035) * C16961 + (C28034 + C28033) * C16966) *
                C50764 +
            ((C25060 + C25059) * C50738 + (C25058 + C25057) * C16967 +
             (C25056 + C25055) * C16961 + (C25054 + C25053) * C16966) *
                C50843) *
               C50603 * C50639) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C16966 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C16961 +
             (C24717 + C24718) * C16967 + (C24719 + C24720) * C50738) *
                C50843 +
            ((C27811 + C27812) * C16966 + (C27813 + C27814) * C16961 +
             C28501 * C16967 + C28502 * C50738) *
                C50764) *
               C391 -
           ((C29027 * C50738 + C29028 * C16967 + (C27815 + C27816) * C16961 +
             (C27817 + C27818) * C16966) *
                C50764 +
            (C28503 * C50738 + C28504 * C16967 + (C27814 + C27813) * C16961 +
             (C27812 + C27811) * C16966) *
                C50843) *
               C392 +
           (((C27818 + C27817) * C16966 + (C27816 + C27815) * C16961 +
             C29029 * C16967 + C29030 * C50738) *
                C50843 +
            ((C49747 * C1717 + C50814 * C1725 + C49740 * C1716 +
              C50543 * C1724) *
                 C16966 +
             (C49747 * C1721 + C50814 * C1729 + C49740 * C1720 +
              C50543 * C1728) *
                 C16961 +
             (C29039 + C29040) * C16967 + (C29041 + C29042) * C50738) *
                C50764) *
               C393) *
              C893 +
          (((C28501 * C16966 + C28502 * C16961 + (C25436 + C25435) * C16967 +
             (C25434 + C25433) * C50738) *
                C50843 +
            (C29029 * C16966 + C29030 * C16961 + (C25873 + C25874) * C16967 +
             (C25875 + C25876) * C50738) *
                C50764) *
               C392 -
           ((C26363 * C50738 + C26364 * C16967 + C28503 * C16961 +
             C28504 * C16966) *
                C50764 +
            ((C24724 + C24723) * C50738 + (C24722 + C24721) * C16967 +
             (C24720 + C24719) * C16961 + (C24718 + C24717) * C16966) *
                C50843) *
               C391 -
           (((C49740 * C4475 + C50543 * C4483 + C49747 * C4476 +
              C50814 * C4484) *
                 C50738 +
             (C49740 * C4471 + C50543 * C4477 + C49747 * C4472 +
              C50814 * C4478) *
                 C16967 +
             (C29042 + C29041) * C16961 + (C29040 + C29039) * C16966) *
                C50764 +
            ((C25876 + C25875) * C50738 + (C25874 + C25873) * C16967 +
             C29027 * C16961 + C29028 * C16966) *
                C50843) *
               C393) *
              C50639) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[128] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                  C16966 +
              (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                  C16961 +
              (C24717 + C24718) * C16967 + (C24719 + C24720) * C50738) *
                 C50843 +
             ((C27811 + C27812) * C16966 + (C27813 + C27814) * C16961 +
              C28501 * C16967 + C28502 * C50738) *
                 C50764) *
                C50830 -
            ((C29027 * C50738 + C29028 * C16967 + (C27815 + C27816) * C16961 +
              (C27817 + C27818) * C16966) *
                 C50764 +
             (C28503 * C50738 + C28504 * C16967 + (C27814 + C27813) * C16961 +
              (C27812 + C27811) * C16966) *
                 C50843) *
                C50667) *
               C893 +
           (((C28501 * C16966 + C28502 * C16961 + (C25436 + C25435) * C16967 +
              (C25434 + C25433) * C50738) *
                 C50843 +
             (C29029 * C16966 + C29030 * C16961 + (C25873 + C25874) * C16967 +
              (C25875 + C25876) * C50738) *
                 C50764) *
                C50667 -
            ((C26363 * C50738 + C26364 * C16967 + C28503 * C16961 +
              C28504 * C16966) *
                 C50764 +
             ((C24724 + C24723) * C50738 + (C24722 + C24721) * C16967 +
              (C24720 + C24719) * C16961 + (C24718 + C24717) * C16966) *
                 C50843) *
                C50830) *
               C50639) *
              C50821 +
          (((((C27819 + C27820) * C16966 + (C27821 + C27822) * C16961 +
              C28505 * C16967 + C28506 * C50738) *
                 C50843 +
             ((C27823 + C27824) * C16966 + (C27825 + C27826) * C16961 +
              (C27827 + C27828) * C16967 + (C27829 + C27830) * C50738) *
                 C50764) *
                C50667 -
            ((C28507 * C50738 + C28508 * C16967 + (C27822 + C27821) * C16961 +
              (C27820 + C27819) * C16966) *
                 C50764 +
             ((C24732 + C24731) * C50738 + (C24730 + C24729) * C16967 +
              (C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                  C16961 +
              (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                  C16966) *
                 C50843) *
                C50830) *
               C893 +
           ((((C24729 + C24730) * C16966 + (C24731 + C24732) * C16961 +
              (C24733 + C24734) * C16967 + (C24735 + C24736) * C50738) *
                 C50843 +
             (C28505 * C16966 + C28506 * C16961 + (C25445 + C25446) * C16967 +
              (C25447 + C25448) * C50738) *
                 C50764) *
                C50830 -
            (((C49740 * C2554 + C50543 * C2558 + C49747 * C2553 +
               C50814 * C2557) *
                  C50738 +
              (C49740 * C2549 + C50543 * C2555 + C49747 * C2548 +
               C50814 * C2551) *
                  C16967 +
              (C27830 + C27829) * C16961 + (C27828 + C27827) * C16966) *
                 C50764 +
             ((C25448 + C25447) * C50738 + (C25446 + C25445) * C16967 +
              C28507 * C16961 + C28508 * C16966) *
                 C50843) *
                C50667) *
               C50639) *
              C50574)) /
        (p * q * std::sqrt(p + q));
    d2ee[129] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C16966 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C16961 +
             (C24717 + C24718) * C16967 + (C24719 + C24720) * C50738) *
                C50843 +
            ((C27811 + C27812) * C16966 + (C27813 + C27814) * C16961 +
             C28501 * C16967 + C28502 * C50738) *
                C50764) *
               C50603 * C893 -
           ((C26363 * C50738 + C26364 * C16967 + C28503 * C16961 +
             C28504 * C16966) *
                C50764 +
            ((C24724 + C24723) * C50738 + (C24722 + C24721) * C16967 +
             (C24720 + C24719) * C16961 + (C24718 + C24717) * C16966) *
                C50843) *
               C50603 * C50639) *
              C895 +
          ((((C24729 + C24730) * C16966 + (C24731 + C24732) * C16961 +
             (C24733 + C24734) * C16967 + (C24735 + C24736) * C50738) *
                C50843 +
            (C28505 * C16966 + C28506 * C16961 + (C25445 + C25446) * C16967 +
             (C25447 + C25448) * C50738) *
                C50764) *
               C50603 * C50639 -
           ((C28507 * C50738 + C28508 * C16967 + (C27822 + C27821) * C16961 +
             (C27820 + C27819) * C16966) *
                C50764 +
            ((C24732 + C24731) * C50738 + (C24730 + C24729) * C16967 +
             (C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                 C16961 +
             (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                 C16966) *
                C50843) *
               C50603 * C893) *
              C896 +
          ((((C49747 * C124 + C50814 * C131 + C49740 * C125 + C50543 * C132) *
                 C16966 +
             (C49747 * C135 + C50814 * C145 + C49740 * C136 + C50543 * C146) *
                 C16961 +
             (C25053 + C25054) * C16967 + (C25055 + C25056) * C50738) *
                C50843 +
            ((C28239 + C28240) * C16966 + (C28241 + C28242) * C16961 +
             (C28033 + C28034) * C16967 + (C28035 + C28036) * C50738) *
                C50764) *
               C50603 * C893 -
           (((C49740 * C1434 + C50543 * C1442 + C49747 * C1435 +
              C50814 * C1443) *
                 C50738 +
             (C49740 * C1430 + C50543 * C1438 + C49747 * C1431 +
              C50814 * C1439) *
                 C16967 +
             (C28036 + C28035) * C16961 + (C28034 + C28033) * C16966) *
                C50764 +
            ((C25060 + C25059) * C50738 + (C25058 + C25057) * C16967 +
             (C25056 + C25055) * C16961 + (C25054 + C25053) * C16966) *
                C50843) *
               C50603 * C50639) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                C16966 +
            (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                C16961 +
            (C24717 + C24718) * C16967 + (C24719 + C24720) * C50738) *
               C50843 +
           ((C27811 + C27812) * C16966 + (C27813 + C27814) * C16961 +
            C28501 * C16967 + C28502 * C50738) *
               C50764) *
              C50603 * C964 -
          ((C26363 * C50738 + C26364 * C16967 + C28503 * C16961 +
            C28504 * C16966) *
               C50764 +
           ((C24724 + C24723) * C50738 + (C24722 + C24721) * C16967 +
            (C24720 + C24719) * C16961 + (C24718 + C24717) * C16966) *
               C50843) *
              C50603 * C965 +
          ((C24741 * C16966 + C24742 * C16961 + (C24728 + C24727) * C16967 +
            (C24726 + C24725) * C50738) *
               C50843 +
           ((C25436 + C25435) * C16966 + (C25434 + C25433) * C16961 +
            (C26373 + C26374) * C16967 + (C26375 + C26376) * C50738) *
               C50764) *
              C50603 * C966 -
          (((C49740 * C4061 + C50543 * C4065 + C49747 * C4062 +
             C50814 * C4066) *
                C50738 +
            (C49740 * C4059 + C50543 * C4063 + C49747 * C4060 +
             C50814 * C4064) *
                C16967 +
            (C26376 + C26375) * C16961 + (C26374 + C26373) * C16966) *
               C50764 +
           ((C25706 + C25705) * C50738 + (C25704 + C25703) * C16967 +
            C25693 * C16961 + C25694 * C16966) *
               C50843) *
              C50603 * C967) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                  C16966 +
              (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                  C16961 +
              (C24717 + C24718) * C16967 + (C24719 + C24720) * C50738) *
                 C50843 +
             ((C27811 + C27812) * C16966 + (C27813 + C27814) * C16961 +
              C28501 * C16967 + C28502 * C50738) *
                 C50764) *
                C1544 -
            ((C29027 * C50738 + C29028 * C16967 + (C27815 + C27816) * C16961 +
              (C27817 + C27818) * C16966) *
                 C50764 +
             (C28503 * C50738 + C28504 * C16967 + (C27814 + C27813) * C16961 +
              (C27812 + C27811) * C16966) *
                 C50843) *
                C50667) *
               C50829 +
           (((C28501 * C16966 + C28502 * C16961 + C29689 * C16967 +
              C29690 * C50738) *
                 C50843 +
             (C29029 * C16966 + C29030 * C16961 + (C25873 + C25874) * C16967 +
              (C25875 + C25876) * C50738) *
                 C50764) *
                C50667 -
            ((C26363 * C50738 + C26364 * C16967 + C28503 * C16961 +
              C28504 * C16966) *
                 C50764 +
             ((C24724 + C24723) * C50738 + (C24722 + C24721) * C16967 +
              (C24720 + C24719) * C16961 + (C24718 + C24717) * C16966) *
                 C50843) *
                C1544) *
               C50639) *
              C50821 +
          (((((C27819 + C27820) * C16966 + (C27821 + C27822) * C16961 +
              C28505 * C16967 + C28506 * C50738) *
                 C50843 +
             ((C27823 + C27824) * C16966 + (C27825 + C27826) * C16961 +
              (C27827 + C27828) * C16967 + (C27829 + C27830) * C50738) *
                 C50764) *
                C50667 -
            ((C28507 * C50738 + C28508 * C16967 + (C27822 + C27821) * C16961 +
              (C27820 + C27819) * C16966) *
                 C50764 +
             ((C24732 + C24731) * C50738 + (C24730 + C24729) * C16967 +
              (C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                  C16961 +
              (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                  C16966) *
                 C50843) *
                C1544) *
               C50829 +
           ((((C24729 + C24730) * C16966 + (C24731 + C24732) * C16961 +
              (C24733 + C24734) * C16967 + (C24735 + C24736) * C50738) *
                 C50843 +
             (C28505 * C16966 + C28506 * C16961 + (C25445 + C25446) * C16967 +
              (C25447 + C25448) * C50738) *
                 C50764) *
                C1544 -
            (((C49740 * C2554 + C50543 * C2558 + C49747 * C2553 +
               C50814 * C2557) *
                  C50738 +
              (C49740 * C2549 + C50543 * C2555 + C49747 * C2548 +
               C50814 * C2551) *
                  C16967 +
              (C27830 + C27829) * C16961 + (C27828 + C27827) * C16966) *
                 C50764 +
             ((C25448 + C25447) * C50738 + (C25446 + C25445) * C16967 +
              C28507 * C16961 + C28508 * C16966) *
                 C50843) *
                C50667) *
               C50639) *
              C50574)) /
        (p * q * std::sqrt(p + q));
    d2ee[131] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C16966 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C16961 +
             (C24717 + C24718) * C16967 + (C24719 + C24720) * C50738) *
                C50843 +
            ((C27811 + C27812) * C16966 + (C27813 + C27814) * C16961 +
             C28501 * C16967 + C28502 * C50738) *
                C50764) *
               C50876 -
           ((C29027 * C50738 + C29028 * C16967 + (C27815 + C27816) * C16961 +
             (C27817 + C27818) * C16966) *
                C50764 +
            (C28503 * C50738 + C28504 * C16967 + (C27814 + C27813) * C16961 +
             (C27812 + C27811) * C16966) *
                C50843) *
               C50877 +
           (((C27818 + C27817) * C16966 + (C27816 + C27815) * C16961 +
             C29029 * C16967 + C29030 * C50738) *
                C50843 +
            ((C30217 + C30218) * C16966 + (C30219 + C30220) * C16961 +
             (C29039 + C29040) * C16967 + (C29041 + C29042) * C50738) *
                C50764) *
               C1960) *
              C50829 +
          (((C28501 * C16966 + C28502 * C16961 + C29689 * C16967 +
             C29690 * C50738) *
                C50843 +
            (C29029 * C16966 + C29030 * C16961 + (C25873 + C25874) * C16967 +
             (C25875 + C25876) * C50738) *
                C50764) *
               C50877 -
           ((C26363 * C50738 + C26364 * C16967 + C28503 * C16961 +
             C28504 * C16966) *
                C50764 +
            ((C24724 + C24723) * C50738 + (C24722 + C24721) * C16967 +
             (C24720 + C24719) * C16961 + (C24718 + C24717) * C16966) *
                C50843) *
               C50876 -
           (((C49740 * C4475 + C50543 * C4483 + C49747 * C4476 +
              C50814 * C4484) *
                 C50738 +
             (C49740 * C4471 + C50543 * C4477 + C49747 * C4472 +
              C50814 * C4478) *
                 C16967 +
             (C29042 + C29041) * C16961 + (C29040 + C29039) * C16966) *
                C50764 +
            ((C25876 + C25875) * C50738 + (C25874 + C25873) * C16967 +
             C29027 * C16961 + C29028 * C16966) *
                C50843) *
               C1960) *
              C50639) *
         C50568) /
        (p * q * std::sqrt(p + q));
    d2ee[132] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C16966 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C16961 +
             (C24717 + C24718) * C16967 + (C24719 + C24720) * C50738) *
                C50843 +
            ((C27811 + C27812) * C16966 + (C27813 + C27814) * C16961 +
             C28501 * C16967 + C28502 * C50738) *
                C50764) *
               C1544 -
           ((C29027 * C50738 + C29028 * C16967 + (C27815 + C27816) * C16961 +
             (C27817 + C27818) * C16966) *
                C50764 +
            (C28503 * C50738 + C28504 * C16967 + (C27814 + C27813) * C16961 +
             (C27812 + C27811) * C16966) *
                C50843) *
               C50667) *
              C248 +
          (((C28501 * C16966 + C28502 * C16961 + C29689 * C16967 +
             C29690 * C50738) *
                C50843 +
            (C29029 * C16966 + C29030 * C16961 + (C25873 + C25874) * C16967 +
             (C25875 + C25876) * C50738) *
                C50764) *
               C50667 -
           ((C26363 * C50738 + C26364 * C16967 + C28503 * C16961 +
             C28504 * C16966) *
                C50764 +
            ((C24724 + C24723) * C50738 + (C24722 + C24721) * C16967 +
             (C24720 + C24719) * C16961 + (C24718 + C24717) * C16966) *
                C50843) *
               C1544) *
              C249 +
          (((C24741 * C16966 + C24742 * C16961 + (C24728 + C24727) * C16967 +
             (C24726 + C24725) * C50738) *
                C50843 +
            (C29689 * C16966 + C29690 * C16961 + (C26373 + C26374) * C16967 +
             (C26375 + C26376) * C50738) *
                C50764) *
               C1544 -
           (((C49740 * C3543 + C50543 * C3547 + C49747 * C3544 +
              C50814 * C3548) *
                 C50738 +
             (C49740 * C3541 + C50543 * C3545 + C49747 * C3542 +
              C50814 * C3546) *
                 C16967 +
             (C25876 + C25875) * C16961 + (C25874 + C25873) * C16966) *
                C50764 +
            ((C26376 + C26375) * C50738 + (C26374 + C26373) * C16967 +
             C26363 * C16961 + C26364 * C16966) *
                C50843) *
               C50667) *
              C250) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C16966 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C16961 +
             (C24717 + C24718) * C16967 + (C24719 + C24720) * C50738) *
                C50843 +
            ((C27811 + C27812) * C16966 + (C27813 + C27814) * C16961 +
             C28501 * C16967 + C28502 * C50738) *
                C50764) *
               C1544 -
           ((C29027 * C50738 + C29028 * C16967 + (C27815 + C27816) * C16961 +
             (C27817 + C27818) * C16966) *
                C50764 +
            (C28503 * C50738 + C28504 * C16967 + (C27814 + C27813) * C16961 +
             (C27812 + C27811) * C16966) *
                C50843) *
               C50667) *
              C50587 * C895 +
          ((((C27819 + C27820) * C16966 + (C27821 + C27822) * C16961 +
             C28505 * C16967 + C28506 * C50738) *
                C50843 +
            ((C27823 + C27824) * C16966 + (C27825 + C27826) * C16961 +
             (C27827 + C27828) * C16967 + (C27829 + C27830) * C50738) *
                C50764) *
               C50667 -
           ((C28507 * C50738 + C28508 * C16967 + (C27822 + C27821) * C16961 +
             (C27820 + C27819) * C16966) *
                C50764 +
            ((C24732 + C24731) * C50738 + (C24730 + C24729) * C16967 +
             (C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                 C16961 +
             (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                 C16966) *
                C50843) *
               C1544) *
              C50587 * C896 +
          ((((C49747 * C124 + C50814 * C131 + C49740 * C125 + C50543 * C132) *
                 C16966 +
             (C49747 * C135 + C50814 * C145 + C49740 * C136 + C50543 * C146) *
                 C16961 +
             (C25053 + C25054) * C16967 + (C25055 + C25056) * C50738) *
                C50843 +
            ((C28239 + C28240) * C16966 + (C28241 + C28242) * C16961 +
             (C28033 + C28034) * C16967 + (C28035 + C28036) * C50738) *
                C50764) *
               C1544 -
           (((C49740 * C1087 + C50543 * C1095 + C49747 * C1088 +
              C50814 * C1096) *
                 C50738 +
             (C49740 * C1083 + C50543 * C1091 + C49747 * C1084 +
              C50814 * C1092) *
                 C16967 +
             (C49740 * C419 + C50543 * C431 + C49747 * C418 + C50814 * C430) *
                 C16961 +
             (C49740 * C401 + C50543 * C415 + C49747 * C400 + C50814 * C414) *
                 C16966) *
                C50764 +
            ((C28036 + C28035) * C50738 + (C28034 + C28033) * C16967 +
             (C28242 + C28241) * C16961 + (C28240 + C28239) * C16966) *
                C50843) *
               C50667) *
              C50587 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                C16966 +
            (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                C16961 +
            (C24717 + C24718) * C16967 + (C24719 + C24720) * C50738) *
               C50843 +
           ((C27811 + C27812) * C16966 + (C27813 + C27814) * C16961 +
            C28501 * C16967 + C28502 * C50738) *
               C50764) *
              C1710 -
          ((C29027 * C50738 + C29028 * C16967 + (C27815 + C27816) * C16961 +
            (C27817 + C27818) * C16966) *
               C50764 +
           (C28503 * C50738 + C28504 * C16967 + (C27814 + C27813) * C16961 +
            (C27812 + C27811) * C16966) *
               C50843) *
              C1711 +
          (((C27818 + C27817) * C16966 + (C27816 + C27815) * C16961 +
            C29029 * C16967 + C29030 * C50738) *
               C50843 +
           ((C30217 + C30218) * C16966 + (C30219 + C30220) * C16961 +
            (C29039 + C29040) * C16967 + (C29041 + C29042) * C50738) *
               C50764) *
              C1712 -
          (((C49740 * C6378 + C50543 * C6382 + C49747 * C6379 +
             C50814 * C6383) *
                C50738 +
            (C49740 * C6376 + C50543 * C6380 + C49747 * C6377 +
             C50814 * C6381) *
                C16967 +
            (C49740 * C5372 + C50543 * C5376 + C49747 * C5371 +
             C50814 * C5375) *
                C16961 +
            (C49740 * C5367 + C50543 * C5370 + C49747 * C5366 +
             C50814 * C5369) *
                C16966) *
               C50764 +
           ((C29042 + C29041) * C50738 + (C29040 + C29039) * C16967 +
            (C30220 + C30219) * C16961 + (C30218 + C30217) * C16966) *
               C50843) *
              C1713) *
         C50587 * C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[133] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C16966 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C16961 +
             (C24717 + C24718) * C16967 + (C24719 + C24720) * C50738) *
                C50843 +
            ((C27811 + C27812) * C16966 + (C27813 + C27814) * C16961 +
             C28501 * C16967 + C28502 * C50738) *
                C50764) *
               C50876 -
           ((C29027 * C50738 + C29028 * C16967 + (C27815 + C27816) * C16961 +
             (C27817 + C27818) * C16966) *
                C50764 +
            (C28503 * C50738 + C28504 * C16967 + (C27814 + C27813) * C16961 +
             (C27812 + C27811) * C16966) *
                C50843) *
               C50877 +
           (((C27818 + C27817) * C16966 + (C27816 + C27815) * C16961 +
             C29029 * C16967 + C29030 * C50738) *
                C50843 +
            ((C30217 + C30218) * C16966 + (C30219 + C30220) * C16961 +
             (C29039 + C29040) * C16967 + (C29041 + C29042) * C50738) *
                C50764) *
               C1960) *
              C50587 * C50821 +
          ((((C27819 + C27820) * C16966 + (C27821 + C27822) * C16961 +
             C28505 * C16967 + C28506 * C50738) *
                C50843 +
            ((C27823 + C27824) * C16966 + (C27825 + C27826) * C16961 +
             (C27827 + C27828) * C16967 + (C27829 + C27830) * C50738) *
                C50764) *
               C50877 -
           ((C28507 * C50738 + C28508 * C16967 + (C27822 + C27821) * C16961 +
             (C27820 + C27819) * C16966) *
                C50764 +
            ((C24732 + C24731) * C50738 + (C24730 + C24729) * C16967 +
             (C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                 C16961 +
             (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                 C16966) *
                C50843) *
               C50876 -
           (((C49740 * C5971 + C50543 * C5973 + C49747 * C4479 +
              C50814 * C4485) *
                 C50738 +
             (C49740 * C5970 + C50543 * C5972 + C49747 * C4473 +
              C50814 * C4481) *
                 C16967 +
             (C49740 * C1719 + C50543 * C1727 + C49747 * C1720 +
              C50814 * C1728) *
                 C16961 +
             (C49740 * C1715 + C50543 * C1723 + C49747 * C1716 +
              C50814 * C1724) *
                 C16966) *
                C50764 +
            ((C27830 + C27829) * C50738 + (C27828 + C27827) * C16967 +
             (C27826 + C27825) * C16961 + (C27824 + C27823) * C16966) *
                C50843) *
               C1960) *
              C50587 * C50574)) /
        (p * q * std::sqrt(p + q));
    d2ee[134] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C16966 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C16961 +
             (C24717 + C24718) * C16967 + (C24719 + C24720) * C50738) *
                C50843 +
            ((C27811 + C27812) * C16966 + (C27813 + C27814) * C16961 +
             C28501 * C16967 + C28502 * C50738) *
                C50764) *
               C1544 -
           ((C29027 * C50738 + C29028 * C16967 + (C27815 + C27816) * C16961 +
             (C27817 + C27818) * C16966) *
                C50764 +
            (C28503 * C50738 + C28504 * C16967 + (C27814 + C27813) * C16961 +
             (C27812 + C27811) * C16966) *
                C50843) *
               C50667) *
              C50587 * C895 +
          ((((C27819 + C27820) * C16966 + (C27821 + C27822) * C16961 +
             C28505 * C16967 + C28506 * C50738) *
                C50843 +
            ((C27823 + C27824) * C16966 + (C27825 + C27826) * C16961 +
             (C27827 + C27828) * C16967 + (C27829 + C27830) * C50738) *
                C50764) *
               C50667 -
           ((C28507 * C50738 + C28508 * C16967 + (C27822 + C27821) * C16961 +
             (C27820 + C27819) * C16966) *
                C50764 +
            ((C24732 + C24731) * C50738 + (C24730 + C24729) * C16967 +
             (C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                 C16961 +
             (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                 C16966) *
                C50843) *
               C1544) *
              C50587 * C896 +
          ((((C49747 * C124 + C50814 * C131 + C49740 * C125 + C50543 * C132) *
                 C16966 +
             (C49747 * C135 + C50814 * C145 + C49740 * C136 + C50543 * C146) *
                 C16961 +
             (C25053 + C25054) * C16967 + (C25055 + C25056) * C50738) *
                C50843 +
            ((C28239 + C28240) * C16966 + (C28241 + C28242) * C16961 +
             (C28033 + C28034) * C16967 + (C28035 + C28036) * C50738) *
                C50764) *
               C1544 -
           (((C49740 * C1087 + C50543 * C1095 + C49747 * C1088 +
              C50814 * C1096) *
                 C50738 +
             (C49740 * C1083 + C50543 * C1091 + C49747 * C1084 +
              C50814 * C1092) *
                 C16967 +
             (C49740 * C419 + C50543 * C431 + C49747 * C418 + C50814 * C430) *
                 C16961 +
             (C49740 * C401 + C50543 * C415 + C49747 * C400 + C50814 * C414) *
                 C16966) *
                C50764 +
            ((C28036 + C28035) * C50738 + (C28034 + C28033) * C16967 +
             (C28242 + C28241) * C16961 + (C28240 + C28239) * C16966) *
                C50843) *
               C50667) *
              C50587 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C16966 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C16961 +
             (C24717 + C24718) * C16967 + (C24719 + C24720) * C50738) *
                C50843 +
            ((C27811 + C27812) * C16966 + (C27813 + C27814) * C16961 +
             C28501 * C16967 + C28502 * C50738) *
                C50764) *
               C1544 -
           ((C29027 * C50738 + C29028 * C16967 + (C27815 + C27816) * C16961 +
             (C27817 + C27818) * C16966) *
                C50764 +
            (C28503 * C50738 + C28504 * C16967 + (C27814 + C27813) * C16961 +
             (C27812 + C27811) * C16966) *
                C50843) *
               C50667) *
              C248 +
          (((C28501 * C16966 + C28502 * C16961 + C29689 * C16967 +
             C29690 * C50738) *
                C50843 +
            (C29029 * C16966 + C29030 * C16961 + (C25873 + C25874) * C16967 +
             (C25875 + C25876) * C50738) *
                C50764) *
               C50667 -
           ((C26363 * C50738 + C26364 * C16967 + C28503 * C16961 +
             C28504 * C16966) *
                C50764 +
            ((C24724 + C24723) * C50738 + (C24722 + C24721) * C16967 +
             (C24720 + C24719) * C16961 + (C24718 + C24717) * C16966) *
                C50843) *
               C1544) *
              C249 +
          (((C24741 * C16966 + C24742 * C16961 + (C24728 + C24727) * C16967 +
             (C24726 + C24725) * C50738) *
                C50843 +
            (C29689 * C16966 + C29690 * C16961 + (C26373 + C26374) * C16967 +
             (C26375 + C26376) * C50738) *
                C50764) *
               C1544 -
           (((C49740 * C3543 + C50543 * C3547 + C49747 * C3544 +
              C50814 * C3548) *
                 C50738 +
             (C49740 * C3541 + C50543 * C3545 + C49747 * C3542 +
              C50814 * C3546) *
                 C16967 +
             (C25876 + C25875) * C16961 + (C25874 + C25873) * C16966) *
                C50764 +
            ((C26376 + C26375) * C50738 + (C26374 + C26373) * C16967 +
             C26363 * C16961 + C26364 * C16966) *
                C50843) *
               C50667) *
              C250) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[135] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C16963 * C122 + C16958 * C129 + C16964 * C123 +
                      C16959 * C130 + C16965 * C124 + C16960 * C131) *
                         C16966 +
                     (C16963 * C133 + C16958 * C143 + C16964 * C134 +
                      C16959 * C144 + C16965 * C135 + C16960 * C145) *
                         C16961 +
                     (C17163 + C17164 + C17165) * C16967 +
                     (C17166 + C17167 + C17168) * C50738) *
                        C50700 * C50603 * C50829 -
                    ((C17169 + C17170 + C17171) * C50738 +
                     (C17172 + C17173 + C17174) * C16967 +
                     (C17168 + C17167 + C17166) * C16961 +
                     (C17165 + C17164 + C17163) * C16966) *
                        C50700 * C50603 * C50639) *
                       C50872 +
                   (((C17175 + C17176 + C17177) * C16966 +
                     (C17178 + C17179 + C17180) * C16961 +
                     (C17181 + C17182 + C17183) * C16967 +
                     (C17184 + C17185 + C17186) * C50738) *
                        C50700 * C50603 * C50639 -
                    ((C17180 + C17179 + C17178) * C50738 +
                     (C17177 + C17176 + C17175) * C16967 +
                     (C16965 * C136 + C16960 * C146 + C16964 * C135 +
                      C16959 * C145 + C16963 * C134 + C16958 * C144) *
                         C16961 +
                     (C16965 * C125 + C16960 * C132 + C16964 * C124 +
                      C16959 * C131 + C16963 * C123 + C16958 * C130) *
                         C16966) *
                        C50700 * C50603 * C50829) *
                       C50873 +
                   (((C16963 * C124 + C16958 * C131 + C16964 * C125 +
                      C16959 * C132 + C16965 * C126 + C16960 * C138) *
                         C16966 +
                     (C16963 * C135 + C16958 * C145 + C16964 * C136 +
                      C16959 * C146 + C16965 * C137 + C16960 * C147) *
                         C16961 +
                     (C17491 + C17492 + C17493) * C16967 +
                     (C17494 + C17495 + C17496) * C50738) *
                        C50700 * C50603 * C50829 -
                    ((C16965 * C281 + C16960 * C292 + C16964 * C278 +
                      C16959 * C290 + C16963 * C277 + C16958 * C289) *
                         C50738 +
                     (C16965 * C262 + C16960 * C282 + C16964 * C260 +
                      C16959 * C274 + C16963 * C259 + C16958 * C273) *
                         C16967 +
                     (C17496 + C17495 + C17494) * C16961 +
                     (C17493 + C17492 + C17491) * C16966) *
                        C50700 * C50603 * C50639) *
                       C536)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C19749 * C122 + C50538 * C129) * C19750 +
                     (C19749 * C133 + C50538 * C143) * C19745 +
                     C19885 * C19751 + C19886 * C19746 + C19887 * C19752 +
                     C19888 * C19747 + C19889 * C19753 + C19890 * C19748) *
                        C50700 * C50603 * C50829 -
                    (C19891 * C19748 + C19892 * C19753 + C19890 * C19747 +
                     C19889 * C19752 + C19888 * C19746 + C19887 * C19751 +
                     C19886 * C19745 + C19885 * C19750) *
                        C50700 * C50603 * C50639) *
                       C50872 +
                   ((C19893 * C19750 + C19894 * C19745 + C19895 * C19751 +
                     C19896 * C19746 + C19897 * C19752 + C19898 * C19747 +
                     C19899 * C19753 + C19900 * C19748) *
                        C50700 * C50603 * C50639 -
                    (C19898 * C19748 + C19897 * C19753 + C19896 * C19747 +
                     C19895 * C19752 + C19894 * C19746 + C19893 * C19751 +
                     (C19749 * C134 + C50538 * C144) * C19745 +
                     (C19749 * C123 + C50538 * C130) * C19750) *
                        C50700 * C50603 * C50829) *
                       C50873 +
                   (((C19749 * C124 + C50538 * C131) * C19750 +
                     (C19749 * C135 + C50538 * C145) * C19745 +
                     C20109 * C19751 + C20110 * C19746 + C20111 * C19752 +
                     C20112 * C19747 + C20113 * C19753 + C20114 * C19748) *
                        C50700 * C50603 * C50829 -
                    ((C19749 * C2320 + C50538 * C2324) * C19748 +
                     (C19749 * C2315 + C50538 * C2321) * C19753 +
                     C20114 * C19747 + C20113 * C19752 + C20112 * C19746 +
                     C20111 * C19751 + C20110 * C19745 + C20109 * C19750) *
                        C50700 * C50603 * C50639) *
                       C536)) /
                     (p * q * std::sqrt(p + q));
    d2ee[136] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C16963 * C122 + C16958 * C129 + C16964 * C123 +
                       C16959 * C130 + C16965 * C124 + C16960 * C131) *
                          C16966 +
                      (C16963 * C133 + C16958 * C143 + C16964 * C134 +
                       C16959 * C144 + C16965 * C135 + C16960 * C145) *
                          C16961 +
                      (C17163 + C17164 + C17165) * C16967 +
                      (C17166 + C17167 + C17168) * C50738) *
                         C50700 * C50830 -
                     ((C17861 + C17862 + C17863) * C50738 +
                      (C17864 + C17865 + C17866) * C16967 +
                      (C16965 * C405 + C16960 * C425 + C16964 * C406 +
                       C16959 * C426 + C16963 * C407 + C16958 * C427) *
                          C16961 +
                      (C16965 * C395 + C16960 * C409 + C16964 * C396 +
                       C16959 * C410 + C16963 * C397 + C16958 * C411) *
                          C16966) *
                         C50700 * C50667) *
                        C50829 +
                    (((C17866 + C17865 + C17864) * C16966 +
                      (C17863 + C17862 + C17861) * C16961 +
                      (C16963 * C1433 + C16958 * C1441 + C16964 * C1432 +
                       C16959 * C1440 + C16965 * C1431 + C16960 * C1439) *
                          C16967 +
                      (C16963 * C1437 + C16958 * C1445 + C16964 * C1436 +
                       C16959 * C1444 + C16965 * C1435 + C16960 * C1443) *
                          C50738) *
                         C50700 * C50667 -
                     ((C17169 + C17170 + C17171) * C50738 +
                      (C17172 + C17173 + C17174) * C16967 +
                      (C17168 + C17167 + C17166) * C16961 +
                      (C17165 + C17164 + C17163) * C16966) *
                         C50700 * C50830) *
                        C50639) *
                       C251 +
                   ((((C16963 * C396 + C16958 * C410 + C16964 * C395 +
                       C16959 * C409 + C16965 * C394 + C16960 * C408) *
                          C16966 +
                      (C16963 * C406 + C16958 * C426 + C16964 * C405 +
                       C16959 * C425 + C16965 * C404 + C16960 * C424) *
                          C16961 +
                      (C17867 + C17868 + C17869) * C16967 +
                      (C17870 + C17871 + C17872) * C50738) *
                         C50700 * C50667 -
                     ((C17180 + C17179 + C17178) * C50738 +
                      (C17177 + C17176 + C17175) * C16967 +
                      (C16965 * C136 + C16960 * C146 + C16964 * C135 +
                       C16959 * C145 + C16963 * C134 + C16958 * C144) *
                          C16961 +
                      (C16965 * C125 + C16960 * C132 + C16964 * C124 +
                       C16959 * C131 + C16963 * C123 + C16958 * C130) *
                          C16966) *
                         C50700 * C50830) *
                        C50829 +
                    (((C17175 + C17176 + C17177) * C16966 +
                      (C17178 + C17179 + C17180) * C16961 +
                      (C17181 + C17182 + C17183) * C16967 +
                      (C17184 + C17185 + C17186) * C50738) *
                         C50700 * C50830 -
                     ((C16965 * C1434 + C16960 * C1442 + C16964 * C1435 +
                       C16959 * C1443 + C16963 * C1436 + C16958 * C1444) *
                          C50738 +
                      (C16965 * C1430 + C16960 * C1438 + C16964 * C1431 +
                       C16959 * C1439 + C16963 * C1432 + C16958 * C1440) *
                          C16967 +
                      (C17872 + C17871 + C17870) * C16961 +
                      (C17869 + C17868 + C17867) * C16966) *
                         C50700 * C50667) *
                        C50639) *
                       C50574)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C19749 * C122 + C50538 * C129) * C19750 +
                      (C19749 * C133 + C50538 * C143) * C19745 +
                      C19885 * C19751 + C19886 * C19746 + C19887 * C19752 +
                      C19888 * C19747 + C19889 * C19753 + C19890 * C19748) *
                         C50700 * C50830 -
                     (C20367 * C19748 + C20368 * C19753 + C20369 * C19747 +
                      C20370 * C19752 + C20371 * C19746 + C20372 * C19751 +
                      (C19749 * C407 + C50538 * C427) * C19745 +
                      (C19749 * C397 + C50538 * C411) * C19750) *
                         C50700 * C50667) *
                        C50829 +
                    ((C20372 * C19750 + C20371 * C19745 + C20370 * C19751 +
                      C20369 * C19746 + C20368 * C19752 + C20367 * C19747 +
                      (C19749 * C4060 + C50538 * C4064) * C19753 +
                      (C19749 * C4062 + C50538 * C4066) * C19748) *
                         C50700 * C50667 -
                     (C19891 * C19748 + C19892 * C19753 + C19890 * C19747 +
                      C19889 * C19752 + C19888 * C19746 + C19887 * C19751 +
                      C19886 * C19745 + C19885 * C19750) *
                         C50700 * C50830) *
                        C50639) *
                       C251 +
                   ((((C19749 * C396 + C50538 * C410) * C19750 +
                      (C19749 * C406 + C50538 * C426) * C19745 +
                      C20373 * C19751 + C20374 * C19746 + C20375 * C19752 +
                      C20376 * C19747 + C20377 * C19753 + C20378 * C19748) *
                         C50700 * C50667 -
                     (C19898 * C19748 + C19897 * C19753 + C19896 * C19747 +
                      C19895 * C19752 + C19894 * C19746 + C19893 * C19751 +
                      (C19749 * C134 + C50538 * C144) * C19745 +
                      (C19749 * C123 + C50538 * C130) * C19750) *
                         C50700 * C50830) *
                        C50829 +
                    ((C19893 * C19750 + C19894 * C19745 + C19895 * C19751 +
                      C19896 * C19746 + C19897 * C19752 + C19898 * C19747 +
                      C19899 * C19753 + C19900 * C19748) *
                         C50700 * C50830 -
                     ((C19749 * C4061 + C50538 * C4065) * C19748 +
                      (C19749 * C4059 + C50538 * C4063) * C19753 +
                      C20378 * C19747 + C20377 * C19752 + C20376 * C19746 +
                      C20375 * C19751 + C20374 * C19745 + C20373 * C19750) *
                         C50700 * C50667) *
                        C50639) *
                       C50574)) /
                     (p * q * std::sqrt(p + q));
    d2ee[137] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C16963 * C122 + C16958 * C129 + C16964 * C123 +
                      C16959 * C130 + C16965 * C124 + C16960 * C131) *
                         C16966 +
                     (C16963 * C133 + C16958 * C143 + C16964 * C134 +
                      C16959 * C144 + C16965 * C135 + C16960 * C145) *
                         C16961 +
                     (C17163 + C17164 + C17165) * C16967 +
                     (C17166 + C17167 + C17168) * C50738) *
                        C50700 * C50603 * C248 -
                    ((C17169 + C17170 + C17171) * C50738 +
                     (C17172 + C17173 + C17174) * C16967 +
                     (C17168 + C17167 + C17166) * C16961 +
                     (C17165 + C17164 + C17163) * C16966) *
                        C50700 * C50603 * C249 +
                    ((C17174 + C17173 + C17172) * C16966 +
                     (C17171 + C17170 + C17169) * C16961 +
                     (C16963 * C972 + C16958 * C980 + C16964 * C971 +
                      C16959 * C979 + C16965 * C970 + C16960 * C978) *
                         C16967 +
                     (C16963 * C976 + C16958 * C984 + C16964 * C975 +
                      C16959 * C983 + C16965 * C974 + C16960 * C982) *
                         C50738) *
                        C50700 * C50603 * C250) *
                       C251 +
                   (((C17175 + C17176 + C17177) * C16966 +
                     (C17178 + C17179 + C17180) * C16961 +
                     (C17181 + C17182 + C17183) * C16967 +
                     (C17184 + C17185 + C17186) * C50738) *
                        C50700 * C50603 * C249 -
                    ((C17180 + C17179 + C17178) * C50738 +
                     (C17177 + C17176 + C17175) * C16967 +
                     (C16965 * C136 + C16960 * C146 + C16964 * C135 +
                      C16959 * C145 + C16963 * C134 + C16958 * C144) *
                         C16961 +
                     (C16965 * C125 + C16960 * C132 + C16964 * C124 +
                      C16959 * C131 + C16963 * C123 + C16958 * C130) *
                         C16966) *
                        C50700 * C50603 * C248 -
                    ((C16965 * C973 + C16960 * C981 + C16964 * C974 +
                      C16959 * C982 + C16963 * C975 + C16958 * C983) *
                         C50738 +
                     (C16965 * C969 + C16960 * C977 + C16964 * C970 +
                      C16959 * C978 + C16963 * C971 + C16958 * C979) *
                         C16967 +
                     (C17186 + C17185 + C17184) * C16961 +
                     (C17183 + C17182 + C17181) * C16966) *
                        C50700 * C50603 * C250) *
                       C50574)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((C16963 * C122 + C16958 * C129 + C16964 * C123 +
                     C16959 * C130 + C16965 * C124 + C16960 * C131) *
                        C16966 +
                    (C16963 * C133 + C16958 * C143 + C16964 * C134 +
                     C16959 * C144 + C16965 * C135 + C16960 * C145) *
                        C16961 +
                    (C16963 * C256 + C16958 * C270 + C16964 * C255 +
                     C16959 * C269 + C16965 * C254 + C16960 * C268) *
                        C16967 +
                    (C16963 * C266 + C16958 * C286 + C16964 * C265 +
                     C16959 * C285 + C16965 * C264 + C16960 * C284) *
                        C50738) *
                       C50700 * C50603 * C50587 * C113 -
                   ((C16965 * C263 + C16960 * C283 + C16964 * C264 +
                     C16959 * C284 + C16963 * C265 + C16958 * C285) *
                        C50738 +
                    (C16965 * C253 + C16960 * C267 + C16964 * C254 +
                     C16959 * C268 + C16963 * C255 + C16958 * C269) *
                        C16967 +
                    (C16965 * C136 + C16960 * C146 + C16964 * C135 +
                     C16959 * C145 + C16963 * C134 + C16958 * C144) *
                        C16961 +
                    (C16965 * C125 + C16960 * C132 + C16964 * C124 +
                     C16959 * C131 + C16963 * C123 + C16958 * C130) *
                        C16966) *
                       C50700 * C50603 * C50587 * C114 +
                   ((C16963 * C124 + C16958 * C131 + C16964 * C125 +
                     C16959 * C132 + C16965 * C126 + C16960 * C138) *
                        C16966 +
                    (C16963 * C135 + C16958 * C145 + C16964 * C136 +
                     C16959 * C146 + C16965 * C137 + C16960 * C147) *
                        C16961 +
                    (C16963 * C254 + C16958 * C268 + C16964 * C253 +
                     C16959 * C267 + C16965 * C261 + C16960 * C279) *
                        C16967 +
                    (C16963 * C264 + C16958 * C284 + C16964 * C263 +
                     C16959 * C283 + C16965 * C280 + C16960 * C291) *
                        C50738) *
                       C50700 * C50603 * C50587 * C115 -
                   ((C16965 * C538 + C16960 * C540 + C16964 * C280 +
                     C16959 * C291 + C16963 * C263 + C16958 * C283) *
                        C50738 +
                    (C16965 * C537 + C16960 * C539 + C16964 * C261 +
                     C16959 * C279 + C16963 * C253 + C16958 * C267) *
                        C16967 +
                    (C16965 * C140 + C16960 * C148 + C16964 * C137 +
                     C16959 * C147 + C16963 * C136 + C16958 * C146) *
                        C16961 +
                    (C16965 * C127 + C16960 * C139 + C16964 * C126 +
                     C16959 * C138 + C16963 * C125 + C16958 * C132) *
                        C16966) *
                       C50700 * C50603 * C50587 * C116)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C16963 * C122 + C16958 * C129 + C16964 * C123 +
                      C16959 * C130 + C16965 * C124 + C16960 * C131) *
                         C16966 +
                     (C16963 * C133 + C16958 * C143 + C16964 * C134 +
                      C16959 * C144 + C16965 * C135 + C16960 * C145) *
                         C16961 +
                     (C17163 + C17164 + C17165) * C16967 +
                     (C17166 + C17167 + C17168) * C50738) *
                        C50700 * C391 -
                    ((C16965 * C786 + C16960 * C792 + C16964 * C785 +
                      C16959 * C791 + C16963 * C784 + C16958 * C790) *
                         C50738 +
                     (C16965 * C777 + C16960 * C782 + C16964 * C776 +
                      C16959 * C781 + C16963 * C775 + C16958 * C780) *
                         C16967 +
                     (C16965 * C405 + C16960 * C425 + C16964 * C406 +
                      C16959 * C426 + C16963 * C407 + C16958 * C427) *
                         C16961 +
                     (C16965 * C395 + C16960 * C409 + C16964 * C396 +
                      C16959 * C410 + C16963 * C397 + C16958 * C411) *
                         C16966) *
                        C50700 * C392 +
                    ((C16963 * C398 + C16958 * C412 + C16964 * C399 +
                      C16959 * C413 + C16965 * C400 + C16960 * C414) *
                         C16966 +
                     (C16963 * C416 + C16958 * C428 + C16964 * C417 +
                      C16959 * C429 + C16965 * C418 + C16960 * C430) *
                         C16961 +
                     (C16963 * C1086 + C16958 * C1094 + C16964 * C1085 +
                      C16959 * C1093 + C16965 * C1084 + C16960 * C1092) *
                         C16967 +
                     (C16963 * C1090 + C16958 * C1098 + C16964 * C1089 +
                      C16959 * C1097 + C16965 * C1088 + C16960 * C1096) *
                         C50738) *
                        C50700 * C393) *
                       C50587 * C251 +
                   (((C16963 * C396 + C16958 * C410 + C16964 * C395 +
                      C16959 * C409 + C16965 * C394 + C16960 * C408) *
                         C16966 +
                     (C16963 * C406 + C16958 * C426 + C16964 * C405 +
                      C16959 * C425 + C16965 * C404 + C16960 * C424) *
                         C16961 +
                     (C16963 * C776 + C16958 * C781 + C16964 * C777 +
                      C16959 * C782 + C16965 * C778 + C16960 * C783) *
                         C16967 +
                     (C16963 * C785 + C16958 * C791 + C16964 * C786 +
                      C16959 * C792 + C16965 * C787 + C16960 * C793) *
                         C50738) *
                        C50700 * C392 -
                    ((C17180 + C17179 + C17178) * C50738 +
                     (C17177 + C17176 + C17175) * C16967 +
                     (C16965 * C136 + C16960 * C146 + C16964 * C135 +
                      C16959 * C145 + C16963 * C134 + C16958 * C144) *
                         C16961 +
                     (C16965 * C125 + C16960 * C132 + C16964 * C124 +
                      C16959 * C131 + C16963 * C123 + C16958 * C130) *
                         C16966) *
                        C50700 * C391 -
                    ((C16965 * C1087 + C16960 * C1095 + C16964 * C1088 +
                      C16959 * C1096 + C16963 * C1089 + C16958 * C1097) *
                         C50738 +
                     (C16965 * C1083 + C16960 * C1091 + C16964 * C1084 +
                      C16959 * C1092 + C16963 * C1085 + C16958 * C1093) *
                         C16967 +
                     (C16965 * C419 + C16960 * C431 + C16964 * C418 +
                      C16959 * C430 + C16963 * C417 + C16958 * C429) *
                         C16961 +
                     (C16965 * C401 + C16960 * C415 + C16964 * C400 +
                      C16959 * C414 + C16963 * C399 + C16958 * C413) *
                         C16966) *
                        C50700 * C393) *
                       C50587 * C50574)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((C19749 * C122 + C50538 * C129) * C19750 +
                    (C19749 * C133 + C50538 * C143) * C19745 +
                    (C19749 * C256 + C50538 * C270) * C19751 +
                    (C19749 * C266 + C50538 * C286) * C19746 +
                    (C19749 * C257 + C50538 * C271) * C19752 +
                    (C19749 * C275 + C50538 * C287) * C19747 +
                    (C19749 * C972 + C50538 * C980) * C19753 +
                    (C19749 * C976 + C50538 * C984) * C19748) *
                       C50700 * C50603 * C50587 * C113 -
                   ((C19749 * C975 + C50538 * C983) * C19748 +
                    (C19749 * C971 + C50538 * C979) * C19753 +
                    (C19749 * C276 + C50538 * C288) * C19747 +
                    (C19749 * C258 + C50538 * C272) * C19752 +
                    (C19749 * C265 + C50538 * C285) * C19746 +
                    (C19749 * C255 + C50538 * C269) * C19751 +
                    (C19749 * C134 + C50538 * C144) * C19745 +
                    (C19749 * C123 + C50538 * C130) * C19750) *
                       C50700 * C50603 * C50587 * C114 +
                   ((C19749 * C124 + C50538 * C131) * C19750 +
                    (C19749 * C135 + C50538 * C145) * C19745 +
                    (C19749 * C254 + C50538 * C268) * C19751 +
                    (C19749 * C264 + C50538 * C284) * C19746 +
                    (C19749 * C259 + C50538 * C273) * C19752 +
                    (C19749 * C277 + C50538 * C289) * C19747 +
                    (C19749 * C970 + C50538 * C978) * C19753 +
                    (C19749 * C974 + C50538 * C982) * C19748) *
                       C50700 * C50603 * C50587 * C115 -
                   ((C19749 * C973 + C50538 * C981) * C19748 +
                    (C19749 * C969 + C50538 * C977) * C19753 +
                    (C19749 * C278 + C50538 * C290) * C19747 +
                    (C19749 * C260 + C50538 * C274) * C19752 +
                    (C19749 * C263 + C50538 * C283) * C19746 +
                    (C19749 * C253 + C50538 * C267) * C19751 +
                    (C19749 * C136 + C50538 * C146) * C19745 +
                    (C19749 * C125 + C50538 * C132) * C19750) *
                       C50700 * C50603 * C50587 * C116)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C19749 * C122 + C50538 * C129) * C19750 +
                     (C19749 * C133 + C50538 * C143) * C19745 +
                     C19885 * C19751 + C19886 * C19746 + C19887 * C19752 +
                     C19888 * C19747 + C19889 * C19753 + C19890 * C19748) *
                        C50700 * C50603 * C248 -
                    (C19891 * C19748 + C19892 * C19753 + C19890 * C19747 +
                     C19889 * C19752 + C19888 * C19746 + C19887 * C19751 +
                     C19886 * C19745 + C19885 * C19750) *
                        C50700 * C50603 * C249 +
                    (C19887 * C19750 + C19888 * C19745 + C19889 * C19751 +
                     C19890 * C19746 + C19892 * C19752 + C19891 * C19747 +
                     (C19749 * C3374 + C50538 * C3378) * C19753 +
                     (C19749 * C3376 + C50538 * C3380) * C19748) *
                        C50700 * C50603 * C250) *
                       C251 +
                   ((C19893 * C19750 + C19894 * C19745 + C19895 * C19751 +
                     C19896 * C19746 + C19897 * C19752 + C19898 * C19747 +
                     C19899 * C19753 + C19900 * C19748) *
                        C50700 * C50603 * C249 -
                    (C19898 * C19748 + C19897 * C19753 + C19896 * C19747 +
                     C19895 * C19752 + C19894 * C19746 + C19893 * C19751 +
                     (C19749 * C134 + C50538 * C144) * C19745 +
                     (C19749 * C123 + C50538 * C130) * C19750) *
                        C50700 * C50603 * C248 -
                    ((C19749 * C3375 + C50538 * C3379) * C19748 +
                     (C19749 * C3373 + C50538 * C3377) * C19753 +
                     C19900 * C19747 + C19899 * C19752 + C19898 * C19746 +
                     C19897 * C19751 + C19896 * C19745 + C19895 * C19750) *
                        C50700 * C50603 * C250) *
                       C50574)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C19749 * C122 + C50538 * C129) * C19750 +
                     (C19749 * C133 + C50538 * C143) * C19745 +
                     C19885 * C19751 + C19886 * C19746 + C19887 * C19752 +
                     C19888 * C19747 + C19889 * C19753 + C19890 * C19748) *
                        C50700 * C391 -
                    ((C19749 * C3074 + C50538 * C3078) * C19748 +
                     (C19749 * C3069 + C50538 * C3072) * C19753 +
                     (C19749 * C1437 + C50538 * C1445) * C19747 +
                     (C19749 * C1433 + C50538 * C1441) * C19752 +
                     (C19749 * C784 + C50538 * C790) * C19746 +
                     (C19749 * C775 + C50538 * C780) * C19751 +
                     (C19749 * C407 + C50538 * C427) * C19745 +
                     (C19749 * C397 + C50538 * C411) * C19750) *
                        C50700 * C392 +
                    ((C19749 * C398 + C50538 * C412) * C19750 +
                     (C19749 * C416 + C50538 * C428) * C19745 +
                     (C19749 * C1086 + C50538 * C1094) * C19751 +
                     (C19749 * C1090 + C50538 * C1098) * C19746 +
                     (C19749 * C2547 + C50538 * C2550) * C19752 +
                     (C19749 * C2552 + C50538 * C2556) * C19747 +
                     (C19749 * C3542 + C50538 * C3546) * C19753 +
                     (C19749 * C3544 + C50538 * C3548) * C19748) *
                        C50700 * C393) *
                       C50587 * C251 +
                   (((C19749 * C396 + C50538 * C410) * C19750 +
                     (C19749 * C406 + C50538 * C426) * C19745 +
                     (C19749 * C776 + C50538 * C781) * C19751 +
                     (C19749 * C785 + C50538 * C791) * C19746 +
                     (C19749 * C1432 + C50538 * C1440) * C19752 +
                     (C19749 * C1436 + C50538 * C1444) * C19747 +
                     (C19749 * C3070 + C50538 * C3073) * C19753 +
                     (C19749 * C3075 + C50538 * C3079) * C19748) *
                        C50700 * C392 -
                    (C19898 * C19748 + C19897 * C19753 + C19896 * C19747 +
                     C19895 * C19752 + C19894 * C19746 + C19893 * C19751 +
                     (C19749 * C134 + C50538 * C144) * C19745 +
                     (C19749 * C123 + C50538 * C130) * C19750) *
                        C50700 * C391 -
                    ((C19749 * C3543 + C50538 * C3547) * C19748 +
                     (C19749 * C3541 + C50538 * C3545) * C19753 +
                     (C19749 * C2553 + C50538 * C2557) * C19747 +
                     (C19749 * C2548 + C50538 * C2551) * C19752 +
                     (C19749 * C1089 + C50538 * C1097) * C19746 +
                     (C19749 * C1085 + C50538 * C1093) * C19751 +
                     (C19749 * C417 + C50538 * C429) * C19745 +
                     (C19749 * C399 + C50538 * C413) * C19750) *
                        C50700 * C393) *
                       C50587 * C50574)) /
                     (p * q * std::sqrt(p + q));
    d2ee[138] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C16963 * C122 + C16958 * C129 + C16964 * C123 +
                      C16959 * C130 + C16965 * C124 + C16960 * C131) *
                         C16966 +
                     (C16963 * C133 + C16958 * C143 + C16964 * C134 +
                      C16959 * C144 + C16965 * C135 + C16960 * C145) *
                         C16961 +
                     (C17163 + C17164 + C17165) * C16967 +
                     (C17166 + C17167 + C17168) * C50738) *
                        C50700 * C50830 -
                    ((C16965 * C786 + C16960 * C792 + C16964 * C785 +
                      C16959 * C791 + C16963 * C784 + C16958 * C790) *
                         C50738 +
                     (C16965 * C777 + C16960 * C782 + C16964 * C776 +
                      C16959 * C781 + C16963 * C775 + C16958 * C780) *
                         C16967 +
                     (C16965 * C405 + C16960 * C425 + C16964 * C406 +
                      C16959 * C426 + C16963 * C407 + C16958 * C427) *
                         C16961 +
                     (C16965 * C395 + C16960 * C409 + C16964 * C396 +
                      C16959 * C410 + C16963 * C397 + C16958 * C411) *
                         C16966) *
                        C50700 * C50667) *
                       C50587 * C50872 +
                   (((C16963 * C396 + C16958 * C410 + C16964 * C395 +
                      C16959 * C409 + C16965 * C394 + C16960 * C408) *
                         C16966 +
                     (C16963 * C406 + C16958 * C426 + C16964 * C405 +
                      C16959 * C425 + C16965 * C404 + C16960 * C424) *
                         C16961 +
                     (C16963 * C776 + C16958 * C781 + C16964 * C777 +
                      C16959 * C782 + C16965 * C778 + C16960 * C783) *
                         C16967 +
                     (C16963 * C785 + C16958 * C791 + C16964 * C786 +
                      C16959 * C792 + C16965 * C787 + C16960 * C793) *
                         C50738) *
                        C50700 * C50667 -
                    ((C17180 + C17179 + C17178) * C50738 +
                     (C17177 + C17176 + C17175) * C16967 +
                     (C16965 * C136 + C16960 * C146 + C16964 * C135 +
                      C16959 * C145 + C16963 * C134 + C16958 * C144) *
                         C16961 +
                     (C16965 * C125 + C16960 * C132 + C16964 * C124 +
                      C16959 * C131 + C16963 * C123 + C16958 * C130) *
                         C16966) *
                        C50700 * C50830) *
                       C50587 * C50873 +
                   (((C16963 * C124 + C16958 * C131 + C16964 * C125 +
                      C16959 * C132 + C16965 * C126 + C16960 * C138) *
                         C16966 +
                     (C16963 * C135 + C16958 * C145 + C16964 * C136 +
                      C16959 * C146 + C16965 * C137 + C16960 * C147) *
                         C16961 +
                     (C17491 + C17492 + C17493) * C16967 +
                     (C17494 + C17495 + C17496) * C50738) *
                        C50700 * C50830 -
                    ((C16965 * C788 + C16960 * C794 + C16964 * C787 +
                      C16959 * C793 + C16963 * C786 + C16958 * C792) *
                         C50738 +
                     (C16965 * C779 + C16960 * C789 + C16964 * C778 +
                      C16959 * C783 + C16963 * C777 + C16958 * C782) *
                         C16967 +
                     (C16965 * C421 + C16960 * C432 + C16964 * C404 +
                      C16959 * C424 + C16963 * C405 + C16958 * C425) *
                         C16961 +
                     (C16965 * C402 + C16960 * C420 + C16964 * C394 +
                      C16959 * C408 + C16963 * C395 + C16958 * C409) *
                         C16966) *
                        C50700 * C50667) *
                       C50587 * C536)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C19749 * C122 + C50538 * C129) * C19750 +
                     (C19749 * C133 + C50538 * C143) * C19745 +
                     C19885 * C19751 + C19886 * C19746 + C19887 * C19752 +
                     C19888 * C19747 + C19889 * C19753 + C19890 * C19748) *
                        C50700 * C50830 -
                    ((C19749 * C3074 + C50538 * C3078) * C19748 +
                     (C19749 * C3069 + C50538 * C3072) * C19753 +
                     (C19749 * C1437 + C50538 * C1445) * C19747 +
                     (C19749 * C1433 + C50538 * C1441) * C19752 +
                     (C19749 * C784 + C50538 * C790) * C19746 +
                     (C19749 * C775 + C50538 * C780) * C19751 +
                     (C19749 * C407 + C50538 * C427) * C19745 +
                     (C19749 * C397 + C50538 * C411) * C19750) *
                        C50700 * C50667) *
                       C50587 * C50872 +
                   (((C19749 * C396 + C50538 * C410) * C19750 +
                     (C19749 * C406 + C50538 * C426) * C19745 +
                     (C19749 * C776 + C50538 * C781) * C19751 +
                     (C19749 * C785 + C50538 * C791) * C19746 +
                     (C19749 * C1432 + C50538 * C1440) * C19752 +
                     (C19749 * C1436 + C50538 * C1444) * C19747 +
                     (C19749 * C3070 + C50538 * C3073) * C19753 +
                     (C19749 * C3075 + C50538 * C3079) * C19748) *
                        C50700 * C50667 -
                    (C19898 * C19748 + C19897 * C19753 + C19896 * C19747 +
                     C19895 * C19752 + C19894 * C19746 + C19893 * C19751 +
                     (C19749 * C134 + C50538 * C144) * C19745 +
                     (C19749 * C123 + C50538 * C130) * C19750) *
                        C50700 * C50830) *
                       C50587 * C50873 +
                   (((C19749 * C124 + C50538 * C131) * C19750 +
                     (C19749 * C135 + C50538 * C145) * C19745 +
                     C20109 * C19751 + C20110 * C19746 + C20111 * C19752 +
                     C20112 * C19747 + C20113 * C19753 + C20114 * C19748) *
                        C50700 * C50830 -
                    ((C19749 * C3076 + C50538 * C3080) * C19748 +
                     (C19749 * C3071 + C50538 * C3077) * C19753 +
                     (C19749 * C1435 + C50538 * C1443) * C19747 +
                     (C19749 * C1431 + C50538 * C1439) * C19752 +
                     (C19749 * C786 + C50538 * C792) * C19746 +
                     (C19749 * C777 + C50538 * C782) * C19751 +
                     (C19749 * C405 + C50538 * C425) * C19745 +
                     (C19749 * C395 + C50538 * C409) * C19750) *
                        C50700 * C50667) *
                       C50587 * C536)) /
                     (p * q * std::sqrt(p + q));
    d2ee[139] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C16963 * C122 + C16958 * C129 + C16964 * C123 +
                     C16959 * C130 + C16965 * C124 + C16960 * C131) *
                        C16966 +
                    (C16963 * C133 + C16958 * C143 + C16964 * C134 +
                     C16959 * C144 + C16965 * C135 + C16960 * C145) *
                        C16961 +
                    (C16963 * C256 + C16958 * C270 + C16964 * C255 +
                     C16959 * C269 + C16965 * C254 + C16960 * C268) *
                        C16967 +
                    (C16963 * C266 + C16958 * C286 + C16964 * C265 +
                     C16959 * C285 + C16965 * C264 + C16960 * C284) *
                        C50738) *
                       C50700 * C50603 * C50587 * C113 -
                   ((C16965 * C263 + C16960 * C283 + C16964 * C264 +
                     C16959 * C284 + C16963 * C265 + C16958 * C285) *
                        C50738 +
                    (C16965 * C253 + C16960 * C267 + C16964 * C254 +
                     C16959 * C268 + C16963 * C255 + C16958 * C269) *
                        C16967 +
                    (C16965 * C136 + C16960 * C146 + C16964 * C135 +
                     C16959 * C145 + C16963 * C134 + C16958 * C144) *
                        C16961 +
                    (C16965 * C125 + C16960 * C132 + C16964 * C124 +
                     C16959 * C131 + C16963 * C123 + C16958 * C130) *
                        C16966) *
                       C50700 * C50603 * C50587 * C114 +
                   ((C16963 * C124 + C16958 * C131 + C16964 * C125 +
                     C16959 * C132 + C16965 * C126 + C16960 * C138) *
                        C16966 +
                    (C16963 * C135 + C16958 * C145 + C16964 * C136 +
                     C16959 * C146 + C16965 * C137 + C16960 * C147) *
                        C16961 +
                    (C16963 * C254 + C16958 * C268 + C16964 * C253 +
                     C16959 * C267 + C16965 * C261 + C16960 * C279) *
                        C16967 +
                    (C16963 * C264 + C16958 * C284 + C16964 * C263 +
                     C16959 * C283 + C16965 * C280 + C16960 * C291) *
                        C50738) *
                       C50700 * C50603 * C50587 * C115 -
                   ((C16965 * C538 + C16960 * C540 + C16964 * C280 +
                     C16959 * C291 + C16963 * C263 + C16958 * C283) *
                        C50738 +
                    (C16965 * C537 + C16960 * C539 + C16964 * C261 +
                     C16959 * C279 + C16963 * C253 + C16958 * C267) *
                        C16967 +
                    (C16965 * C140 + C16960 * C148 + C16964 * C137 +
                     C16959 * C147 + C16963 * C136 + C16958 * C146) *
                        C16961 +
                    (C16965 * C127 + C16960 * C139 + C16964 * C126 +
                     C16959 * C138 + C16963 * C125 + C16958 * C132) *
                        C16966) *
                       C50700 * C50603 * C50587 * C116)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C16963 * C122 + C16958 * C129 + C16964 * C123 +
                      C16959 * C130 + C16965 * C124 + C16960 * C131) *
                         C16966 +
                     (C16963 * C133 + C16958 * C143 + C16964 * C134 +
                      C16959 * C144 + C16965 * C135 + C16960 * C145) *
                         C16961 +
                     (C17163 + C17164 + C17165) * C16967 +
                     (C17166 + C17167 + C17168) * C50738) *
                        C50700 * C50603 * C248 -
                    ((C17169 + C17170 + C17171) * C50738 +
                     (C17172 + C17173 + C17174) * C16967 +
                     (C17168 + C17167 + C17166) * C16961 +
                     (C17165 + C17164 + C17163) * C16966) *
                        C50700 * C50603 * C249 +
                    ((C17174 + C17173 + C17172) * C16966 +
                     (C17171 + C17170 + C17169) * C16961 +
                     (C16963 * C972 + C16958 * C980 + C16964 * C971 +
                      C16959 * C979 + C16965 * C970 + C16960 * C978) *
                         C16967 +
                     (C16963 * C976 + C16958 * C984 + C16964 * C975 +
                      C16959 * C983 + C16965 * C974 + C16960 * C982) *
                         C50738) *
                        C50700 * C50603 * C250) *
                       C251 +
                   (((C17175 + C17176 + C17177) * C16966 +
                     (C17178 + C17179 + C17180) * C16961 +
                     (C17181 + C17182 + C17183) * C16967 +
                     (C17184 + C17185 + C17186) * C50738) *
                        C50700 * C50603 * C249 -
                    ((C17180 + C17179 + C17178) * C50738 +
                     (C17177 + C17176 + C17175) * C16967 +
                     (C16965 * C136 + C16960 * C146 + C16964 * C135 +
                      C16959 * C145 + C16963 * C134 + C16958 * C144) *
                         C16961 +
                     (C16965 * C125 + C16960 * C132 + C16964 * C124 +
                      C16959 * C131 + C16963 * C123 + C16958 * C130) *
                         C16966) *
                        C50700 * C50603 * C248 -
                    ((C16965 * C973 + C16960 * C981 + C16964 * C974 +
                      C16959 * C982 + C16963 * C975 + C16958 * C983) *
                         C50738 +
                     (C16965 * C969 + C16960 * C977 + C16964 * C970 +
                      C16959 * C978 + C16963 * C971 + C16958 * C979) *
                         C16967 +
                     (C17186 + C17185 + C17184) * C16961 +
                     (C17183 + C17182 + C17181) * C16966) *
                        C50700 * C50603 * C250) *
                       C50574)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C19749 * C122 + C50538 * C129) * C19750 +
                    (C19749 * C133 + C50538 * C143) * C19745 +
                    (C19749 * C256 + C50538 * C270) * C19751 +
                    (C19749 * C266 + C50538 * C286) * C19746 +
                    (C19749 * C257 + C50538 * C271) * C19752 +
                    (C19749 * C275 + C50538 * C287) * C19747 +
                    (C19749 * C972 + C50538 * C980) * C19753 +
                    (C19749 * C976 + C50538 * C984) * C19748) *
                       C50700 * C50603 * C50587 * C113 -
                   ((C19749 * C975 + C50538 * C983) * C19748 +
                    (C19749 * C971 + C50538 * C979) * C19753 +
                    (C19749 * C276 + C50538 * C288) * C19747 +
                    (C19749 * C258 + C50538 * C272) * C19752 +
                    (C19749 * C265 + C50538 * C285) * C19746 +
                    (C19749 * C255 + C50538 * C269) * C19751 +
                    (C19749 * C134 + C50538 * C144) * C19745 +
                    (C19749 * C123 + C50538 * C130) * C19750) *
                       C50700 * C50603 * C50587 * C114 +
                   ((C19749 * C124 + C50538 * C131) * C19750 +
                    (C19749 * C135 + C50538 * C145) * C19745 +
                    (C19749 * C254 + C50538 * C268) * C19751 +
                    (C19749 * C264 + C50538 * C284) * C19746 +
                    (C19749 * C259 + C50538 * C273) * C19752 +
                    (C19749 * C277 + C50538 * C289) * C19747 +
                    (C19749 * C970 + C50538 * C978) * C19753 +
                    (C19749 * C974 + C50538 * C982) * C19748) *
                       C50700 * C50603 * C50587 * C115 -
                   ((C19749 * C973 + C50538 * C981) * C19748 +
                    (C19749 * C969 + C50538 * C977) * C19753 +
                    (C19749 * C278 + C50538 * C290) * C19747 +
                    (C19749 * C260 + C50538 * C274) * C19752 +
                    (C19749 * C263 + C50538 * C283) * C19746 +
                    (C19749 * C253 + C50538 * C267) * C19751 +
                    (C19749 * C136 + C50538 * C146) * C19745 +
                    (C19749 * C125 + C50538 * C132) * C19750) *
                       C50700 * C50603 * C50587 * C116)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C19749 * C122 + C50538 * C129) * C19750 +
                     (C19749 * C133 + C50538 * C143) * C19745 +
                     C19885 * C19751 + C19886 * C19746 + C19887 * C19752 +
                     C19888 * C19747 + C19889 * C19753 + C19890 * C19748) *
                        C50700 * C50603 * C248 -
                    (C19891 * C19748 + C19892 * C19753 + C19890 * C19747 +
                     C19889 * C19752 + C19888 * C19746 + C19887 * C19751 +
                     C19886 * C19745 + C19885 * C19750) *
                        C50700 * C50603 * C249 +
                    (C19887 * C19750 + C19888 * C19745 + C19889 * C19751 +
                     C19890 * C19746 + C19892 * C19752 + C19891 * C19747 +
                     (C19749 * C3374 + C50538 * C3378) * C19753 +
                     (C19749 * C3376 + C50538 * C3380) * C19748) *
                        C50700 * C50603 * C250) *
                       C251 +
                   ((C19893 * C19750 + C19894 * C19745 + C19895 * C19751 +
                     C19896 * C19746 + C19897 * C19752 + C19898 * C19747 +
                     C19899 * C19753 + C19900 * C19748) *
                        C50700 * C50603 * C249 -
                    (C19898 * C19748 + C19897 * C19753 + C19896 * C19747 +
                     C19895 * C19752 + C19894 * C19746 + C19893 * C19751 +
                     (C19749 * C134 + C50538 * C144) * C19745 +
                     (C19749 * C123 + C50538 * C130) * C19750) *
                        C50700 * C50603 * C248 -
                    ((C19749 * C3375 + C50538 * C3379) * C19748 +
                     (C19749 * C3373 + C50538 * C3377) * C19753 +
                     C19900 * C19747 + C19899 * C19752 + C19898 * C19746 +
                     C19897 * C19751 + C19896 * C19745 + C19895 * C19750) *
                        C50700 * C50603 * C250) *
                       C50574)) /
                     (p * q * std::sqrt(p + q));
    d2ee[140] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C16963 * C122 + C16958 * C129 + C16964 * C123 +
                      C16959 * C130 + C16965 * C124 + C16960 * C131) *
                         C16966 +
                     (C16963 * C133 + C16958 * C143 + C16964 * C134 +
                      C16959 * C144 + C16965 * C135 + C16960 * C145) *
                         C16961 +
                     (C17163 + C17164 + C17165) * C16967 +
                     (C17166 + C17167 + C17168) * C50738) *
                        C50700 * C50603 * C50874 -
                    ((C17169 + C17170 + C17171) * C50738 +
                     (C17172 + C17173 + C17174) * C16967 +
                     (C17168 + C17167 + C17166) * C16961 +
                     (C17165 + C17164 + C17163) * C16966) *
                        C50700 * C50603 * C50875 +
                    ((C17174 + C17173 + C17172) * C16966 +
                     (C17171 + C17170 + C17169) * C16961 +
                     (C18129 + C18130 + C18131) * C16967 +
                     (C18132 + C18133 + C18134) * C50738) *
                        C50700 * C50603 * C1199) *
                       C50821 +
                   (((C17175 + C17176 + C17177) * C16966 +
                     (C17178 + C17179 + C17180) * C16961 +
                     (C17181 + C17182 + C17183) * C16967 +
                     (C17184 + C17185 + C17186) * C50738) *
                        C50700 * C50603 * C50875 -
                    ((C17180 + C17179 + C17178) * C50738 +
                     (C17177 + C17176 + C17175) * C16967 +
                     (C16965 * C136 + C16960 * C146 + C16964 * C135 +
                      C16959 * C145 + C16963 * C134 + C16958 * C144) *
                         C16961 +
                     (C16965 * C125 + C16960 * C132 + C16964 * C124 +
                      C16959 * C131 + C16963 * C123 + C16958 * C130) *
                         C16966) *
                        C50700 * C50603 * C50874 -
                    ((C16965 * C973 + C16960 * C981 + C16964 * C974 +
                      C16959 * C982 + C16963 * C975 + C16958 * C983) *
                         C50738 +
                     (C16965 * C969 + C16960 * C977 + C16964 * C970 +
                      C16959 * C978 + C16963 * C971 + C16958 * C979) *
                         C16967 +
                     (C17186 + C17185 + C17184) * C16961 +
                     (C17183 + C17182 + C17181) * C16966) *
                        C50700 * C50603 * C1199) *
                       C50574)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C19749 * C122 + C50538 * C129) * C19750 +
                     (C19749 * C133 + C50538 * C143) * C19745 +
                     C19885 * C19751 + C19886 * C19746 + C19887 * C19752 +
                     C19888 * C19747 + C19889 * C19753 + C19890 * C19748) *
                        C50700 * C50603 * C50874 -
                    (C19891 * C19748 + C19892 * C19753 + C19890 * C19747 +
                     C19889 * C19752 + C19888 * C19746 + C19887 * C19751 +
                     C19886 * C19745 + C19885 * C19750) *
                        C50700 * C50603 * C50875 +
                    (C19887 * C19750 + C19888 * C19745 + C19889 * C19751 +
                     C19890 * C19746 + C19892 * C19752 + C19891 * C19747 +
                     C20551 * C19753 + C20552 * C19748) *
                        C50700 * C50603 * C1199) *
                       C50821 +
                   ((C19893 * C19750 + C19894 * C19745 + C19895 * C19751 +
                     C19896 * C19746 + C19897 * C19752 + C19898 * C19747 +
                     C19899 * C19753 + C19900 * C19748) *
                        C50700 * C50603 * C50875 -
                    (C19898 * C19748 + C19897 * C19753 + C19896 * C19747 +
                     C19895 * C19752 + C19894 * C19746 + C19893 * C19751 +
                     (C19749 * C134 + C50538 * C144) * C19745 +
                     (C19749 * C123 + C50538 * C130) * C19750) *
                        C50700 * C50603 * C50874 -
                    ((C19749 * C3375 + C50538 * C3379) * C19748 +
                     (C19749 * C3373 + C50538 * C3377) * C19753 +
                     C19900 * C19747 + C19899 * C19752 + C19898 * C19746 +
                     C19897 * C19751 + C19896 * C19745 + C19895 * C19750) *
                        C50700 * C50603 * C1199) *
                       C50574)) /
                     (p * q * std::sqrt(p + q));
    d2ee[141] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C16963 * C122 + C16958 * C129 + C16964 * C123 +
                      C16959 * C130 + C16965 * C124 + C16960 * C131) *
                         C16966 +
                     (C16963 * C133 + C16958 * C143 + C16964 * C134 +
                      C16959 * C144 + C16965 * C135 + C16960 * C145) *
                         C16961 +
                     (C17163 + C17164 + C17165) * C16967 +
                     (C17166 + C17167 + C17168) * C50738) *
                        C50700 * C50830 -
                    ((C17861 + C17862 + C17863) * C50738 +
                     (C17864 + C17865 + C17866) * C16967 +
                     (C16965 * C405 + C16960 * C425 + C16964 * C406 +
                      C16959 * C426 + C16963 * C407 + C16958 * C427) *
                         C16961 +
                     (C16965 * C395 + C16960 * C409 + C16964 * C396 +
                      C16959 * C410 + C16963 * C397 + C16958 * C411) *
                         C16966) *
                        C50700 * C50667) *
                       C50874 +
                   (((C17866 + C17865 + C17864) * C16966 +
                     (C17863 + C17862 + C17861) * C16961 +
                     (C18797 + C18798 + C18799) * C16967 +
                     (C18800 + C18801 + C18802) * C50738) *
                        C50700 * C50667 -
                    ((C17169 + C17170 + C17171) * C50738 +
                     (C17172 + C17173 + C17174) * C16967 +
                     (C17168 + C17167 + C17166) * C16961 +
                     (C17165 + C17164 + C17163) * C16966) *
                        C50700 * C50830) *
                       C50875 +
                   (((C17174 + C17173 + C17172) * C16966 +
                     (C17171 + C17170 + C17169) * C16961 +
                     (C18129 + C18130 + C18131) * C16967 +
                     (C18132 + C18133 + C18134) * C50738) *
                        C50700 * C50830 -
                    ((C16965 * C3076 + C16960 * C3080 + C16964 * C3075 +
                      C16959 * C3079 + C16963 * C3074 + C16958 * C3078) *
                         C50738 +
                     (C16965 * C3071 + C16960 * C3077 + C16964 * C3070 +
                      C16959 * C3073 + C16963 * C3069 + C16958 * C3072) *
                         C16967 +
                     (C18802 + C18801 + C18800) * C16961 +
                     (C18799 + C18798 + C18797) * C16966) *
                        C50700 * C50667) *
                       C1199) *
                  C50568) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C19749 * C122 + C50538 * C129) * C19750 +
                     (C19749 * C133 + C50538 * C143) * C19745 +
                     C19885 * C19751 + C19886 * C19746 + C19887 * C19752 +
                     C19888 * C19747 + C19889 * C19753 + C19890 * C19748) *
                        C50700 * C50830 -
                    (C20367 * C19748 + C20368 * C19753 + C20369 * C19747 +
                     C20370 * C19752 + C20371 * C19746 + C20372 * C19751 +
                     (C19749 * C407 + C50538 * C427) * C19745 +
                     (C19749 * C397 + C50538 * C411) * C19750) *
                        C50700 * C50667) *
                       C50874 +
                   ((C20372 * C19750 + C20371 * C19745 + C20370 * C19751 +
                     C20369 * C19746 + C20368 * C19752 + C20367 * C19747 +
                     C21007 * C19753 + C21008 * C19748) *
                        C50700 * C50667 -
                    (C19891 * C19748 + C19892 * C19753 + C19890 * C19747 +
                     C19889 * C19752 + C19888 * C19746 + C19887 * C19751 +
                     C19886 * C19745 + C19885 * C19750) *
                        C50700 * C50830) *
                       C50875 +
                   ((C19887 * C19750 + C19888 * C19745 + C19889 * C19751 +
                     C19890 * C19746 + C19892 * C19752 + C19891 * C19747 +
                     C20551 * C19753 + C20552 * C19748) *
                        C50700 * C50830 -
                    ((C19749 * C20999 + C50538 * C21001) * C19748 +
                     (C19749 * C20998 + C50538 * C21000) * C19753 +
                     C21008 * C19747 + C21007 * C19752 + C20367 * C19746 +
                     C20368 * C19751 + C20369 * C19745 + C20370 * C19750) *
                        C50700 * C50667) *
                       C1199) *
                  C50568) /
                     (p * q * std::sqrt(p + q));
    d2ee[142] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((C16963 * C122 + C16958 * C129 + C16964 * C123 +
                     C16959 * C130 + C16965 * C124 + C16960 * C131) *
                        C16966 +
                    (C16963 * C133 + C16958 * C143 + C16964 * C134 +
                     C16959 * C144 + C16965 * C135 + C16960 * C145) *
                        C16961 +
                    (C17163 + C17164 + C17165) * C16967 +
                    (C17166 + C17167 + C17168) * C50738) *
                       C50700 * C50603 * C964 -
                   ((C17169 + C17170 + C17171) * C50738 +
                    (C17172 + C17173 + C17174) * C16967 +
                    (C17168 + C17167 + C17166) * C16961 +
                    (C17165 + C17164 + C17163) * C16966) *
                       C50700 * C50603 * C965 +
                   ((C17174 + C17173 + C17172) * C16966 +
                    (C17171 + C17170 + C17169) * C16961 +
                    (C18129 + C18130 + C18131) * C16967 +
                    (C18132 + C18133 + C18134) * C50738) *
                       C50700 * C50603 * C966 -
                   ((C16965 * C2320 + C16960 * C2324 + C16964 * C2319 +
                     C16959 * C2323 + C16963 * C2318 + C16958 * C2322) *
                        C50738 +
                    (C16965 * C2315 + C16960 * C2321 + C16964 * C2314 +
                     C16959 * C2317 + C16963 * C2313 + C16958 * C2316) *
                        C16967 +
                    (C18134 + C18133 + C18132) * C16961 +
                    (C18131 + C18130 + C18129) * C16966) *
                       C50700 * C50603 * C967) *
                  C50568) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C16963 * C122 + C16958 * C129 + C16964 * C123 +
                      C16959 * C130 + C16965 * C124 + C16960 * C131) *
                         C16966 +
                     (C16963 * C133 + C16958 * C143 + C16964 * C134 +
                      C16959 * C144 + C16965 * C135 + C16960 * C145) *
                         C16961 +
                     (C17163 + C17164 + C17165) * C16967 +
                     (C17166 + C17167 + C17168) * C50738) *
                        C50700 * C50603 * C893 -
                    ((C17169 + C17170 + C17171) * C50738 +
                     (C17172 + C17173 + C17174) * C16967 +
                     (C17168 + C17167 + C17166) * C16961 +
                     (C17165 + C17164 + C17163) * C16966) *
                        C50700 * C50603 * C50639) *
                       C895 +
                   (((C17175 + C17176 + C17177) * C16966 +
                     (C17178 + C17179 + C17180) * C16961 +
                     (C17181 + C17182 + C17183) * C16967 +
                     (C17184 + C17185 + C17186) * C50738) *
                        C50700 * C50603 * C50639 -
                    ((C17180 + C17179 + C17178) * C50738 +
                     (C17177 + C17176 + C17175) * C16967 +
                     (C16965 * C136 + C16960 * C146 + C16964 * C135 +
                      C16959 * C145 + C16963 * C134 + C16958 * C144) *
                         C16961 +
                     (C16965 * C125 + C16960 * C132 + C16964 * C124 +
                      C16959 * C131 + C16963 * C123 + C16958 * C130) *
                         C16966) *
                        C50700 * C50603 * C893) *
                       C896 +
                   (((C16963 * C124 + C16958 * C131 + C16964 * C125 +
                      C16959 * C132 + C16965 * C126 + C16960 * C138) *
                         C16966 +
                     (C16963 * C135 + C16958 * C145 + C16964 * C136 +
                      C16959 * C146 + C16965 * C137 + C16960 * C147) *
                         C16961 +
                     (C17491 + C17492 + C17493) * C16967 +
                     (C17494 + C17495 + C17496) * C50738) *
                        C50700 * C50603 * C893 -
                    ((C16965 * C281 + C16960 * C292 + C16964 * C278 +
                      C16959 * C290 + C16963 * C277 + C16958 * C289) *
                         C50738 +
                     (C16965 * C262 + C16960 * C282 + C16964 * C260 +
                      C16959 * C274 + C16963 * C259 + C16958 * C273) *
                         C16967 +
                     (C17496 + C17495 + C17494) * C16961 +
                     (C17493 + C17492 + C17491) * C16966) *
                        C50700 * C50603 * C50639) *
                       C897)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C16963 * C122 + C16958 * C129 + C16964 * C123 +
                      C16959 * C130 + C16965 * C124 + C16960 * C131) *
                         C16966 +
                     (C16963 * C133 + C16958 * C143 + C16964 * C134 +
                      C16959 * C144 + C16965 * C135 + C16960 * C145) *
                         C16961 +
                     (C17163 + C17164 + C17165) * C16967 +
                     (C17166 + C17167 + C17168) * C50738) *
                        C50700 * C391 -
                    ((C17861 + C17862 + C17863) * C50738 +
                     (C17864 + C17865 + C17866) * C16967 +
                     (C16965 * C405 + C16960 * C425 + C16964 * C406 +
                      C16959 * C426 + C16963 * C407 + C16958 * C427) *
                         C16961 +
                     (C16965 * C395 + C16960 * C409 + C16964 * C396 +
                      C16959 * C410 + C16963 * C397 + C16958 * C411) *
                         C16966) *
                        C50700 * C392 +
                    ((C16963 * C398 + C16958 * C412 + C16964 * C399 +
                      C16959 * C413 + C16965 * C400 + C16960 * C414) *
                         C16966 +
                     (C16963 * C416 + C16958 * C428 + C16964 * C417 +
                      C16959 * C429 + C16965 * C418 + C16960 * C430) *
                         C16961 +
                     (C18293 + C18294 + C18295) * C16967 +
                     (C18296 + C18297 + C18298) * C50738) *
                        C50700 * C393) *
                       C893 +
                   (((C17866 + C17865 + C17864) * C16966 +
                     (C17863 + C17862 + C17861) * C16961 +
                     (C16963 * C1433 + C16958 * C1441 + C16964 * C1432 +
                      C16959 * C1440 + C16965 * C1431 + C16960 * C1439) *
                         C16967 +
                     (C16963 * C1437 + C16958 * C1445 + C16964 * C1436 +
                      C16959 * C1444 + C16965 * C1435 + C16960 * C1443) *
                         C50738) *
                        C50700 * C392 -
                    ((C17169 + C17170 + C17171) * C50738 +
                     (C17172 + C17173 + C17174) * C16967 +
                     (C17168 + C17167 + C17166) * C16961 +
                     (C17165 + C17164 + C17163) * C16966) *
                        C50700 * C391 -
                    ((C16965 * C2554 + C16960 * C2558 + C16964 * C2553 +
                      C16959 * C2557 + C16963 * C2552 + C16958 * C2556) *
                         C50738 +
                     (C16965 * C2549 + C16960 * C2555 + C16964 * C2548 +
                      C16959 * C2551 + C16963 * C2547 + C16958 * C2550) *
                         C16967 +
                     (C18298 + C18297 + C18296) * C16961 +
                     (C18295 + C18294 + C18293) * C16966) *
                        C50700 * C393) *
                       C50639) *
                  C50568) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C19749 * C122 + C50538 * C129) * C19750 +
                     (C19749 * C133 + C50538 * C143) * C19745 +
                     C19885 * C19751 + C19886 * C19746 + C19887 * C19752 +
                     C19888 * C19747 + C19889 * C19753 + C19890 * C19748) *
                        C50700 * C50603 * C893 -
                    (C19891 * C19748 + C19892 * C19753 + C19890 * C19747 +
                     C19889 * C19752 + C19888 * C19746 + C19887 * C19751 +
                     C19886 * C19745 + C19885 * C19750) *
                        C50700 * C50603 * C50639) *
                       C895 +
                   ((C19893 * C19750 + C19894 * C19745 + C19895 * C19751 +
                     C19896 * C19746 + C19897 * C19752 + C19898 * C19747 +
                     C19899 * C19753 + C19900 * C19748) *
                        C50700 * C50603 * C50639 -
                    (C19898 * C19748 + C19897 * C19753 + C19896 * C19747 +
                     C19895 * C19752 + C19894 * C19746 + C19893 * C19751 +
                     (C19749 * C134 + C50538 * C144) * C19745 +
                     (C19749 * C123 + C50538 * C130) * C19750) *
                        C50700 * C50603 * C893) *
                       C896 +
                   (((C19749 * C124 + C50538 * C131) * C19750 +
                     (C19749 * C135 + C50538 * C145) * C19745 +
                     C20109 * C19751 + C20110 * C19746 + C20111 * C19752 +
                     C20112 * C19747 + C20113 * C19753 + C20114 * C19748) *
                        C50700 * C50603 * C893 -
                    ((C19749 * C2320 + C50538 * C2324) * C19748 +
                     (C19749 * C2315 + C50538 * C2321) * C19753 +
                     C20114 * C19747 + C20113 * C19752 + C20112 * C19746 +
                     C20111 * C19751 + C20110 * C19745 + C20109 * C19750) *
                        C50700 * C50603 * C50639) *
                       C897)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((C19749 * C122 + C50538 * C129) * C19750 +
                    (C19749 * C133 + C50538 * C143) * C19745 + C19885 * C19751 +
                    C19886 * C19746 + C19887 * C19752 + C19888 * C19747 +
                    C19889 * C19753 + C19890 * C19748) *
                       C50700 * C50603 * C964 -
                   (C19891 * C19748 + C19892 * C19753 + C19890 * C19747 +
                    C19889 * C19752 + C19888 * C19746 + C19887 * C19751 +
                    C19886 * C19745 + C19885 * C19750) *
                       C50700 * C50603 * C965 +
                   (C19887 * C19750 + C19888 * C19745 + C19889 * C19751 +
                    C19890 * C19746 + C19892 * C19752 + C19891 * C19747 +
                    C20551 * C19753 + C20552 * C19748) *
                       C50700 * C50603 * C966 -
                   ((C19749 * C20543 + C50538 * C20545) * C19748 +
                    (C19749 * C20542 + C50538 * C20544) * C19753 +
                    C20552 * C19747 + C20551 * C19752 + C19891 * C19746 +
                    C19892 * C19751 + C19890 * C19745 + C19889 * C19750) *
                       C50700 * C50603 * C967) *
                  C50568) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C19749 * C122 + C50538 * C129) * C19750 +
                     (C19749 * C133 + C50538 * C143) * C19745 +
                     C19885 * C19751 + C19886 * C19746 + C19887 * C19752 +
                     C19888 * C19747 + C19889 * C19753 + C19890 * C19748) *
                        C50700 * C391 -
                    (C20367 * C19748 + C20368 * C19753 + C20369 * C19747 +
                     C20370 * C19752 + C20371 * C19746 + C20372 * C19751 +
                     (C19749 * C407 + C50538 * C427) * C19745 +
                     (C19749 * C397 + C50538 * C411) * C19750) *
                        C50700 * C392 +
                    ((C19749 * C398 + C50538 * C412) * C19750 +
                     (C19749 * C416 + C50538 * C428) * C19745 +
                     C20667 * C19751 + C20668 * C19746 + C20669 * C19752 +
                     C20670 * C19747 + C20671 * C19753 + C20672 * C19748) *
                        C50700 * C393) *
                       C893 +
                   ((C20372 * C19750 + C20371 * C19745 + C20370 * C19751 +
                     C20369 * C19746 + C20368 * C19752 + C20367 * C19747 +
                     (C19749 * C4060 + C50538 * C4064) * C19753 +
                     (C19749 * C4062 + C50538 * C4066) * C19748) *
                        C50700 * C392 -
                    (C19891 * C19748 + C19892 * C19753 + C19890 * C19747 +
                     C19889 * C19752 + C19888 * C19746 + C19887 * C19751 +
                     C19886 * C19745 + C19885 * C19750) *
                        C50700 * C391 -
                    ((C19749 * C20651 + C50538 * C20653) * C19748 +
                     (C19749 * C20650 + C50538 * C20652) * C19753 +
                     C20672 * C19747 + C20671 * C19752 + C20670 * C19746 +
                     C20669 * C19751 + C20668 * C19745 + C20667 * C19750) *
                        C50700 * C393) *
                       C50639) *
                  C50568) /
                     (p * q * std::sqrt(p + q));
    d2ee[143] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C16963 * C122 + C16958 * C129 + C16964 * C123 +
                       C16959 * C130 + C16965 * C124 + C16960 * C131) *
                          C16966 +
                      (C16963 * C133 + C16958 * C143 + C16964 * C134 +
                       C16959 * C144 + C16965 * C135 + C16960 * C145) *
                          C16961 +
                      (C17163 + C17164 + C17165) * C16967 +
                      (C17166 + C17167 + C17168) * C50738) *
                         C50700 * C50830 -
                     ((C17861 + C17862 + C17863) * C50738 +
                      (C17864 + C17865 + C17866) * C16967 +
                      (C16965 * C405 + C16960 * C425 + C16964 * C406 +
                       C16959 * C426 + C16963 * C407 + C16958 * C427) *
                          C16961 +
                      (C16965 * C395 + C16960 * C409 + C16964 * C396 +
                       C16959 * C410 + C16963 * C397 + C16958 * C411) *
                          C16966) *
                         C50700 * C50667) *
                        C893 +
                    (((C17866 + C17865 + C17864) * C16966 +
                      (C17863 + C17862 + C17861) * C16961 +
                      (C16963 * C1433 + C16958 * C1441 + C16964 * C1432 +
                       C16959 * C1440 + C16965 * C1431 + C16960 * C1439) *
                          C16967 +
                      (C16963 * C1437 + C16958 * C1445 + C16964 * C1436 +
                       C16959 * C1444 + C16965 * C1435 + C16960 * C1443) *
                          C50738) *
                         C50700 * C50667 -
                     ((C17169 + C17170 + C17171) * C50738 +
                      (C17172 + C17173 + C17174) * C16967 +
                      (C17168 + C17167 + C17166) * C16961 +
                      (C17165 + C17164 + C17163) * C16966) *
                         C50700 * C50830) *
                        C50639) *
                       C50821 +
                   ((((C16963 * C396 + C16958 * C410 + C16964 * C395 +
                       C16959 * C409 + C16965 * C394 + C16960 * C408) *
                          C16966 +
                      (C16963 * C406 + C16958 * C426 + C16964 * C405 +
                       C16959 * C425 + C16965 * C404 + C16960 * C424) *
                          C16961 +
                      (C17867 + C17868 + C17869) * C16967 +
                      (C17870 + C17871 + C17872) * C50738) *
                         C50700 * C50667 -
                     ((C17180 + C17179 + C17178) * C50738 +
                      (C17177 + C17176 + C17175) * C16967 +
                      (C16965 * C136 + C16960 * C146 + C16964 * C135 +
                       C16959 * C145 + C16963 * C134 + C16958 * C144) *
                          C16961 +
                      (C16965 * C125 + C16960 * C132 + C16964 * C124 +
                       C16959 * C131 + C16963 * C123 + C16958 * C130) *
                          C16966) *
                         C50700 * C50830) *
                        C893 +
                    (((C17175 + C17176 + C17177) * C16966 +
                      (C17178 + C17179 + C17180) * C16961 +
                      (C17181 + C17182 + C17183) * C16967 +
                      (C17184 + C17185 + C17186) * C50738) *
                         C50700 * C50830 -
                     ((C16965 * C1434 + C16960 * C1442 + C16964 * C1435 +
                       C16959 * C1443 + C16963 * C1436 + C16958 * C1444) *
                          C50738 +
                      (C16965 * C1430 + C16960 * C1438 + C16964 * C1431 +
                       C16959 * C1439 + C16963 * C1432 + C16958 * C1440) *
                          C16967 +
                      (C17872 + C17871 + C17870) * C16961 +
                      (C17869 + C17868 + C17867) * C16966) *
                         C50700 * C50667) *
                        C50639) *
                       C50574)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C19749 * C122 + C50538 * C129) * C19750 +
                      (C19749 * C133 + C50538 * C143) * C19745 +
                      C19885 * C19751 + C19886 * C19746 + C19887 * C19752 +
                      C19888 * C19747 + C19889 * C19753 + C19890 * C19748) *
                         C50700 * C50830 -
                     (C20367 * C19748 + C20368 * C19753 + C20369 * C19747 +
                      C20370 * C19752 + C20371 * C19746 + C20372 * C19751 +
                      (C19749 * C407 + C50538 * C427) * C19745 +
                      (C19749 * C397 + C50538 * C411) * C19750) *
                         C50700 * C50667) *
                        C893 +
                    ((C20372 * C19750 + C20371 * C19745 + C20370 * C19751 +
                      C20369 * C19746 + C20368 * C19752 + C20367 * C19747 +
                      (C19749 * C4060 + C50538 * C4064) * C19753 +
                      (C19749 * C4062 + C50538 * C4066) * C19748) *
                         C50700 * C50667 -
                     (C19891 * C19748 + C19892 * C19753 + C19890 * C19747 +
                      C19889 * C19752 + C19888 * C19746 + C19887 * C19751 +
                      C19886 * C19745 + C19885 * C19750) *
                         C50700 * C50830) *
                        C50639) *
                       C50821 +
                   ((((C19749 * C396 + C50538 * C410) * C19750 +
                      (C19749 * C406 + C50538 * C426) * C19745 +
                      C20373 * C19751 + C20374 * C19746 + C20375 * C19752 +
                      C20376 * C19747 + C20377 * C19753 + C20378 * C19748) *
                         C50700 * C50667 -
                     (C19898 * C19748 + C19897 * C19753 + C19896 * C19747 +
                      C19895 * C19752 + C19894 * C19746 + C19893 * C19751 +
                      (C19749 * C134 + C50538 * C144) * C19745 +
                      (C19749 * C123 + C50538 * C130) * C19750) *
                         C50700 * C50830) *
                        C893 +
                    ((C19893 * C19750 + C19894 * C19745 + C19895 * C19751 +
                      C19896 * C19746 + C19897 * C19752 + C19898 * C19747 +
                      C19899 * C19753 + C19900 * C19748) *
                         C50700 * C50830 -
                     ((C19749 * C4061 + C50538 * C4065) * C19748 +
                      (C19749 * C4059 + C50538 * C4063) * C19753 +
                      C20378 * C19747 + C20377 * C19752 + C20376 * C19746 +
                      C20375 * C19751 + C20374 * C19745 + C20373 * C19750) *
                         C50700 * C50667) *
                        C50639) *
                       C50574)) /
                     (p * q * std::sqrt(p + q));
    d2ee[144] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C16963 * C122 + C16958 * C129 + C16964 * C123 +
                      C16959 * C130 + C16965 * C124 + C16960 * C131) *
                         C16966 +
                     (C16963 * C133 + C16958 * C143 + C16964 * C134 +
                      C16959 * C144 + C16965 * C135 + C16960 * C145) *
                         C16961 +
                     (C17163 + C17164 + C17165) * C16967 +
                     (C17166 + C17167 + C17168) * C50738) *
                        C50700 * C50603 * C893 -
                    ((C17169 + C17170 + C17171) * C50738 +
                     (C17172 + C17173 + C17174) * C16967 +
                     (C17168 + C17167 + C17166) * C16961 +
                     (C17165 + C17164 + C17163) * C16966) *
                        C50700 * C50603 * C50639) *
                       C895 +
                   (((C17175 + C17176 + C17177) * C16966 +
                     (C17178 + C17179 + C17180) * C16961 +
                     (C17181 + C17182 + C17183) * C16967 +
                     (C17184 + C17185 + C17186) * C50738) *
                        C50700 * C50603 * C50639 -
                    ((C17180 + C17179 + C17178) * C50738 +
                     (C17177 + C17176 + C17175) * C16967 +
                     (C16965 * C136 + C16960 * C146 + C16964 * C135 +
                      C16959 * C145 + C16963 * C134 + C16958 * C144) *
                         C16961 +
                     (C16965 * C125 + C16960 * C132 + C16964 * C124 +
                      C16959 * C131 + C16963 * C123 + C16958 * C130) *
                         C16966) *
                        C50700 * C50603 * C893) *
                       C896 +
                   (((C16963 * C124 + C16958 * C131 + C16964 * C125 +
                      C16959 * C132 + C16965 * C126 + C16960 * C138) *
                         C16966 +
                     (C16963 * C135 + C16958 * C145 + C16964 * C136 +
                      C16959 * C146 + C16965 * C137 + C16960 * C147) *
                         C16961 +
                     (C17491 + C17492 + C17493) * C16967 +
                     (C17494 + C17495 + C17496) * C50738) *
                        C50700 * C50603 * C893 -
                    ((C16965 * C281 + C16960 * C292 + C16964 * C278 +
                      C16959 * C290 + C16963 * C277 + C16958 * C289) *
                         C50738 +
                     (C16965 * C262 + C16960 * C282 + C16964 * C260 +
                      C16959 * C274 + C16963 * C259 + C16958 * C273) *
                         C16967 +
                     (C17496 + C17495 + C17494) * C16961 +
                     (C17493 + C17492 + C17491) * C16966) *
                        C50700 * C50603 * C50639) *
                       C897)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C16963 * C122 + C16958 * C129 + C16964 * C123 +
                     C16959 * C130 + C16965 * C124 + C16960 * C131) *
                        C16966 +
                    (C16963 * C133 + C16958 * C143 + C16964 * C134 +
                     C16959 * C144 + C16965 * C135 + C16960 * C145) *
                        C16961 +
                    (C17163 + C17164 + C17165) * C16967 +
                    (C17166 + C17167 + C17168) * C50738) *
                       C50700 * C50603 * C964 -
                   ((C17169 + C17170 + C17171) * C50738 +
                    (C17172 + C17173 + C17174) * C16967 +
                    (C17168 + C17167 + C17166) * C16961 +
                    (C17165 + C17164 + C17163) * C16966) *
                       C50700 * C50603 * C965 +
                   ((C17174 + C17173 + C17172) * C16966 +
                    (C17171 + C17170 + C17169) * C16961 +
                    (C18129 + C18130 + C18131) * C16967 +
                    (C18132 + C18133 + C18134) * C50738) *
                       C50700 * C50603 * C966 -
                   ((C16965 * C2320 + C16960 * C2324 + C16964 * C2319 +
                     C16959 * C2323 + C16963 * C2318 + C16958 * C2322) *
                        C50738 +
                    (C16965 * C2315 + C16960 * C2321 + C16964 * C2314 +
                     C16959 * C2317 + C16963 * C2313 + C16958 * C2316) *
                        C16967 +
                    (C18134 + C18133 + C18132) * C16961 +
                    (C18131 + C18130 + C18129) * C16966) *
                       C50700 * C50603 * C967) *
                  C50568) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C19749 * C122 + C50538 * C129) * C19750 +
                     (C19749 * C133 + C50538 * C143) * C19745 +
                     C19885 * C19751 + C19886 * C19746 + C19887 * C19752 +
                     C19888 * C19747 + C19889 * C19753 + C19890 * C19748) *
                        C50700 * C50603 * C893 -
                    (C19891 * C19748 + C19892 * C19753 + C19890 * C19747 +
                     C19889 * C19752 + C19888 * C19746 + C19887 * C19751 +
                     C19886 * C19745 + C19885 * C19750) *
                        C50700 * C50603 * C50639) *
                       C895 +
                   ((C19893 * C19750 + C19894 * C19745 + C19895 * C19751 +
                     C19896 * C19746 + C19897 * C19752 + C19898 * C19747 +
                     C19899 * C19753 + C19900 * C19748) *
                        C50700 * C50603 * C50639 -
                    (C19898 * C19748 + C19897 * C19753 + C19896 * C19747 +
                     C19895 * C19752 + C19894 * C19746 + C19893 * C19751 +
                     (C19749 * C134 + C50538 * C144) * C19745 +
                     (C19749 * C123 + C50538 * C130) * C19750) *
                        C50700 * C50603 * C893) *
                       C896 +
                   (((C19749 * C124 + C50538 * C131) * C19750 +
                     (C19749 * C135 + C50538 * C145) * C19745 +
                     C20109 * C19751 + C20110 * C19746 + C20111 * C19752 +
                     C20112 * C19747 + C20113 * C19753 + C20114 * C19748) *
                        C50700 * C50603 * C893 -
                    ((C19749 * C2320 + C50538 * C2324) * C19748 +
                     (C19749 * C2315 + C50538 * C2321) * C19753 +
                     C20114 * C19747 + C20113 * C19752 + C20112 * C19746 +
                     C20111 * C19751 + C20110 * C19745 + C20109 * C19750) *
                        C50700 * C50603 * C50639) *
                       C897)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C19749 * C122 + C50538 * C129) * C19750 +
                    (C19749 * C133 + C50538 * C143) * C19745 + C19885 * C19751 +
                    C19886 * C19746 + C19887 * C19752 + C19888 * C19747 +
                    C19889 * C19753 + C19890 * C19748) *
                       C50700 * C50603 * C964 -
                   (C19891 * C19748 + C19892 * C19753 + C19890 * C19747 +
                    C19889 * C19752 + C19888 * C19746 + C19887 * C19751 +
                    C19886 * C19745 + C19885 * C19750) *
                       C50700 * C50603 * C965 +
                   (C19887 * C19750 + C19888 * C19745 + C19889 * C19751 +
                    C19890 * C19746 + C19892 * C19752 + C19891 * C19747 +
                    C20551 * C19753 + C20552 * C19748) *
                       C50700 * C50603 * C966 -
                   ((C19749 * C20543 + C50538 * C20545) * C19748 +
                    (C19749 * C20542 + C50538 * C20544) * C19753 +
                    C20552 * C19747 + C20551 * C19752 + C19891 * C19746 +
                    C19892 * C19751 + C19890 * C19745 + C19889 * C19750) *
                       C50700 * C50603 * C967) *
                  C50568) /
                     (p * q * std::sqrt(p + q));
    d2ee[145] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C16963 * C122 + C16958 * C129 + C16964 * C123 +
                       C16959 * C130 + C16965 * C124 + C16960 * C131) *
                          C16966 +
                      (C16963 * C133 + C16958 * C143 + C16964 * C134 +
                       C16959 * C144 + C16965 * C135 + C16960 * C145) *
                          C16961 +
                      (C17163 + C17164 + C17165) * C16967 +
                      (C17166 + C17167 + C17168) * C50738) *
                         C50700 * C1544 -
                     ((C17861 + C17862 + C17863) * C50738 +
                      (C17864 + C17865 + C17866) * C16967 +
                      (C16965 * C405 + C16960 * C425 + C16964 * C406 +
                       C16959 * C426 + C16963 * C407 + C16958 * C427) *
                          C16961 +
                      (C16965 * C395 + C16960 * C409 + C16964 * C396 +
                       C16959 * C410 + C16963 * C397 + C16958 * C411) *
                          C16966) *
                         C50700 * C50667) *
                        C50829 +
                    (((C17866 + C17865 + C17864) * C16966 +
                      (C17863 + C17862 + C17861) * C16961 +
                      (C18797 + C18798 + C18799) * C16967 +
                      (C18800 + C18801 + C18802) * C50738) *
                         C50700 * C50667 -
                     ((C17169 + C17170 + C17171) * C50738 +
                      (C17172 + C17173 + C17174) * C16967 +
                      (C17168 + C17167 + C17166) * C16961 +
                      (C17165 + C17164 + C17163) * C16966) *
                         C50700 * C1544) *
                        C50639) *
                       C50821 +
                   ((((C16963 * C396 + C16958 * C410 + C16964 * C395 +
                       C16959 * C409 + C16965 * C394 + C16960 * C408) *
                          C16966 +
                      (C16963 * C406 + C16958 * C426 + C16964 * C405 +
                       C16959 * C425 + C16965 * C404 + C16960 * C424) *
                          C16961 +
                      (C17867 + C17868 + C17869) * C16967 +
                      (C17870 + C17871 + C17872) * C50738) *
                         C50700 * C50667 -
                     ((C17180 + C17179 + C17178) * C50738 +
                      (C17177 + C17176 + C17175) * C16967 +
                      (C16965 * C136 + C16960 * C146 + C16964 * C135 +
                       C16959 * C145 + C16963 * C134 + C16958 * C144) *
                          C16961 +
                      (C16965 * C125 + C16960 * C132 + C16964 * C124 +
                       C16959 * C131 + C16963 * C123 + C16958 * C130) *
                          C16966) *
                         C50700 * C1544) *
                        C50829 +
                    (((C17175 + C17176 + C17177) * C16966 +
                      (C17178 + C17179 + C17180) * C16961 +
                      (C17181 + C17182 + C17183) * C16967 +
                      (C17184 + C17185 + C17186) * C50738) *
                         C50700 * C1544 -
                     ((C16965 * C1434 + C16960 * C1442 + C16964 * C1435 +
                       C16959 * C1443 + C16963 * C1436 + C16958 * C1444) *
                          C50738 +
                      (C16965 * C1430 + C16960 * C1438 + C16964 * C1431 +
                       C16959 * C1439 + C16963 * C1432 + C16958 * C1440) *
                          C16967 +
                      (C17872 + C17871 + C17870) * C16961 +
                      (C17869 + C17868 + C17867) * C16966) *
                         C50700 * C50667) *
                        C50639) *
                       C50574)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C19749 * C122 + C50538 * C129) * C19750 +
                      (C19749 * C133 + C50538 * C143) * C19745 +
                      C19885 * C19751 + C19886 * C19746 + C19887 * C19752 +
                      C19888 * C19747 + C19889 * C19753 + C19890 * C19748) *
                         C50700 * C1544 -
                     (C20367 * C19748 + C20368 * C19753 + C20369 * C19747 +
                      C20370 * C19752 + C20371 * C19746 + C20372 * C19751 +
                      (C19749 * C407 + C50538 * C427) * C19745 +
                      (C19749 * C397 + C50538 * C411) * C19750) *
                         C50700 * C50667) *
                        C50829 +
                    ((C20372 * C19750 + C20371 * C19745 + C20370 * C19751 +
                      C20369 * C19746 + C20368 * C19752 + C20367 * C19747 +
                      C21007 * C19753 + C21008 * C19748) *
                         C50700 * C50667 -
                     (C19891 * C19748 + C19892 * C19753 + C19890 * C19747 +
                      C19889 * C19752 + C19888 * C19746 + C19887 * C19751 +
                      C19886 * C19745 + C19885 * C19750) *
                         C50700 * C1544) *
                        C50639) *
                       C50821 +
                   ((((C19749 * C396 + C50538 * C410) * C19750 +
                      (C19749 * C406 + C50538 * C426) * C19745 +
                      C20373 * C19751 + C20374 * C19746 + C20375 * C19752 +
                      C20376 * C19747 + C20377 * C19753 + C20378 * C19748) *
                         C50700 * C50667 -
                     (C19898 * C19748 + C19897 * C19753 + C19896 * C19747 +
                      C19895 * C19752 + C19894 * C19746 + C19893 * C19751 +
                      (C19749 * C134 + C50538 * C144) * C19745 +
                      (C19749 * C123 + C50538 * C130) * C19750) *
                         C50700 * C1544) *
                        C50829 +
                    ((C19893 * C19750 + C19894 * C19745 + C19895 * C19751 +
                      C19896 * C19746 + C19897 * C19752 + C19898 * C19747 +
                      C19899 * C19753 + C19900 * C19748) *
                         C50700 * C1544 -
                     ((C19749 * C4061 + C50538 * C4065) * C19748 +
                      (C19749 * C4059 + C50538 * C4063) * C19753 +
                      C20378 * C19747 + C20377 * C19752 + C20376 * C19746 +
                      C20375 * C19751 + C20374 * C19745 + C20373 * C19750) *
                         C50700 * C50667) *
                        C50639) *
                       C50574)) /
                     (p * q * std::sqrt(p + q));
    d2ee[146] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C16963 * C122 + C16958 * C129 + C16964 * C123 +
                      C16959 * C130 + C16965 * C124 + C16960 * C131) *
                         C16966 +
                     (C16963 * C133 + C16958 * C143 + C16964 * C134 +
                      C16959 * C144 + C16965 * C135 + C16960 * C145) *
                         C16961 +
                     (C17163 + C17164 + C17165) * C16967 +
                     (C17166 + C17167 + C17168) * C50738) *
                        C50700 * C50876 -
                    ((C17861 + C17862 + C17863) * C50738 +
                     (C17864 + C17865 + C17866) * C16967 +
                     (C16965 * C405 + C16960 * C425 + C16964 * C406 +
                      C16959 * C426 + C16963 * C407 + C16958 * C427) *
                         C16961 +
                     (C16965 * C395 + C16960 * C409 + C16964 * C396 +
                      C16959 * C410 + C16963 * C397 + C16958 * C411) *
                         C16966) *
                        C50700 * C50877 +
                    ((C16963 * C398 + C16958 * C412 + C16964 * C399 +
                      C16959 * C413 + C16965 * C400 + C16960 * C414) *
                         C16966 +
                     (C16963 * C416 + C16958 * C428 + C16964 * C417 +
                      C16959 * C429 + C16965 * C418 + C16960 * C430) *
                         C16961 +
                     (C18293 + C18294 + C18295) * C16967 +
                     (C18296 + C18297 + C18298) * C50738) *
                        C50700 * C1960) *
                       C50829 +
                   (((C17866 + C17865 + C17864) * C16966 +
                     (C17863 + C17862 + C17861) * C16961 +
                     (C18797 + C18798 + C18799) * C16967 +
                     (C18800 + C18801 + C18802) * C50738) *
                        C50700 * C50877 -
                    ((C17169 + C17170 + C17171) * C50738 +
                     (C17172 + C17173 + C17174) * C16967 +
                     (C17168 + C17167 + C17166) * C16961 +
                     (C17165 + C17164 + C17163) * C16966) *
                        C50700 * C50876 -
                    ((C16965 * C2554 + C16960 * C2558 + C16964 * C2553 +
                      C16959 * C2557 + C16963 * C2552 + C16958 * C2556) *
                         C50738 +
                     (C16965 * C2549 + C16960 * C2555 + C16964 * C2548 +
                      C16959 * C2551 + C16963 * C2547 + C16958 * C2550) *
                         C16967 +
                     (C18298 + C18297 + C18296) * C16961 +
                     (C18295 + C18294 + C18293) * C16966) *
                        C50700 * C1960) *
                       C50639) *
                  C50568) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C19749 * C122 + C50538 * C129) * C19750 +
                     (C19749 * C133 + C50538 * C143) * C19745 +
                     C19885 * C19751 + C19886 * C19746 + C19887 * C19752 +
                     C19888 * C19747 + C19889 * C19753 + C19890 * C19748) *
                        C50700 * C50876 -
                    (C20367 * C19748 + C20368 * C19753 + C20369 * C19747 +
                     C20370 * C19752 + C20371 * C19746 + C20372 * C19751 +
                     (C19749 * C407 + C50538 * C427) * C19745 +
                     (C19749 * C397 + C50538 * C411) * C19750) *
                        C50700 * C50877 +
                    ((C19749 * C398 + C50538 * C412) * C19750 +
                     (C19749 * C416 + C50538 * C428) * C19745 +
                     C20667 * C19751 + C20668 * C19746 + C20669 * C19752 +
                     C20670 * C19747 + C20671 * C19753 + C20672 * C19748) *
                        C50700 * C1960) *
                       C50829 +
                   ((C20372 * C19750 + C20371 * C19745 + C20370 * C19751 +
                     C20369 * C19746 + C20368 * C19752 + C20367 * C19747 +
                     C21007 * C19753 + C21008 * C19748) *
                        C50700 * C50877 -
                    (C19891 * C19748 + C19892 * C19753 + C19890 * C19747 +
                     C19889 * C19752 + C19888 * C19746 + C19887 * C19751 +
                     C19886 * C19745 + C19885 * C19750) *
                        C50700 * C50876 -
                    ((C19749 * C20651 + C50538 * C20653) * C19748 +
                     (C19749 * C20650 + C50538 * C20652) * C19753 +
                     C20672 * C19747 + C20671 * C19752 + C20670 * C19746 +
                     C20669 * C19751 + C20668 * C19745 + C20667 * C19750) *
                        C50700 * C1960) *
                       C50639) *
                  C50568) /
                     (p * q * std::sqrt(p + q));
    d2ee[147] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C16963 * C122 + C16958 * C129 + C16964 * C123 +
                      C16959 * C130 + C16965 * C124 + C16960 * C131) *
                         C16966 +
                     (C16963 * C133 + C16958 * C143 + C16964 * C134 +
                      C16959 * C144 + C16965 * C135 + C16960 * C145) *
                         C16961 +
                     (C17163 + C17164 + C17165) * C16967 +
                     (C17166 + C17167 + C17168) * C50738) *
                        C50700 * C1544 -
                    ((C17861 + C17862 + C17863) * C50738 +
                     (C17864 + C17865 + C17866) * C16967 +
                     (C16965 * C405 + C16960 * C425 + C16964 * C406 +
                      C16959 * C426 + C16963 * C407 + C16958 * C427) *
                         C16961 +
                     (C16965 * C395 + C16960 * C409 + C16964 * C396 +
                      C16959 * C410 + C16963 * C397 + C16958 * C411) *
                         C16966) *
                        C50700 * C50667) *
                       C248 +
                   (((C17866 + C17865 + C17864) * C16966 +
                     (C17863 + C17862 + C17861) * C16961 +
                     (C18797 + C18798 + C18799) * C16967 +
                     (C18800 + C18801 + C18802) * C50738) *
                        C50700 * C50667 -
                    ((C17169 + C17170 + C17171) * C50738 +
                     (C17172 + C17173 + C17174) * C16967 +
                     (C17168 + C17167 + C17166) * C16961 +
                     (C17165 + C17164 + C17163) * C16966) *
                        C50700 * C1544) *
                       C249 +
                   (((C17174 + C17173 + C17172) * C16966 +
                     (C17171 + C17170 + C17169) * C16961 +
                     (C18129 + C18130 + C18131) * C16967 +
                     (C18132 + C18133 + C18134) * C50738) *
                        C50700 * C1544 -
                    ((C16965 * C3076 + C16960 * C3080 + C16964 * C3075 +
                      C16959 * C3079 + C16963 * C3074 + C16958 * C3078) *
                         C50738 +
                     (C16965 * C3071 + C16960 * C3077 + C16964 * C3070 +
                      C16959 * C3073 + C16963 * C3069 + C16958 * C3072) *
                         C16967 +
                     (C18802 + C18801 + C18800) * C16961 +
                     (C18799 + C18798 + C18797) * C16966) *
                        C50700 * C50667) *
                       C250) *
                  C50568) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C16963 * C122 + C16958 * C129 + C16964 * C123 +
                      C16959 * C130 + C16965 * C124 + C16960 * C131) *
                         C16966 +
                     (C16963 * C133 + C16958 * C143 + C16964 * C134 +
                      C16959 * C144 + C16965 * C135 + C16960 * C145) *
                         C16961 +
                     (C17163 + C17164 + C17165) * C16967 +
                     (C17166 + C17167 + C17168) * C50738) *
                        C50700 * C1544 -
                    ((C17861 + C17862 + C17863) * C50738 +
                     (C17864 + C17865 + C17866) * C16967 +
                     (C16965 * C405 + C16960 * C425 + C16964 * C406 +
                      C16959 * C426 + C16963 * C407 + C16958 * C427) *
                         C16961 +
                     (C16965 * C395 + C16960 * C409 + C16964 * C396 +
                      C16959 * C410 + C16963 * C397 + C16958 * C411) *
                         C16966) *
                        C50700 * C50667) *
                       C50587 * C895 +
                   (((C16963 * C396 + C16958 * C410 + C16964 * C395 +
                      C16959 * C409 + C16965 * C394 + C16960 * C408) *
                         C16966 +
                     (C16963 * C406 + C16958 * C426 + C16964 * C405 +
                      C16959 * C425 + C16965 * C404 + C16960 * C424) *
                         C16961 +
                     (C17867 + C17868 + C17869) * C16967 +
                     (C17870 + C17871 + C17872) * C50738) *
                        C50700 * C50667 -
                    ((C17180 + C17179 + C17178) * C50738 +
                     (C17177 + C17176 + C17175) * C16967 +
                     (C16965 * C136 + C16960 * C146 + C16964 * C135 +
                      C16959 * C145 + C16963 * C134 + C16958 * C144) *
                         C16961 +
                     (C16965 * C125 + C16960 * C132 + C16964 * C124 +
                      C16959 * C131 + C16963 * C123 + C16958 * C130) *
                         C16966) *
                        C50700 * C1544) *
                       C50587 * C896 +
                   (((C16963 * C124 + C16958 * C131 + C16964 * C125 +
                      C16959 * C132 + C16965 * C126 + C16960 * C138) *
                         C16966 +
                     (C16963 * C135 + C16958 * C145 + C16964 * C136 +
                      C16959 * C146 + C16965 * C137 + C16960 * C147) *
                         C16961 +
                     (C17491 + C17492 + C17493) * C16967 +
                     (C17494 + C17495 + C17496) * C50738) *
                        C50700 * C1544 -
                    ((C16965 * C788 + C16960 * C794 + C16964 * C787 +
                      C16959 * C793 + C16963 * C786 + C16958 * C792) *
                         C50738 +
                     (C16965 * C779 + C16960 * C789 + C16964 * C778 +
                      C16959 * C783 + C16963 * C777 + C16958 * C782) *
                         C16967 +
                     (C16965 * C421 + C16960 * C432 + C16964 * C404 +
                      C16959 * C424 + C16963 * C405 + C16958 * C425) *
                         C16961 +
                     (C16965 * C402 + C16960 * C420 + C16964 * C394 +
                      C16959 * C408 + C16963 * C395 + C16958 * C409) *
                         C16966) *
                        C50700 * C50667) *
                       C50587 * C897)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C16963 * C122 + C16958 * C129 + C16964 * C123 +
                     C16959 * C130 + C16965 * C124 + C16960 * C131) *
                        C16966 +
                    (C16963 * C133 + C16958 * C143 + C16964 * C134 +
                     C16959 * C144 + C16965 * C135 + C16960 * C145) *
                        C16961 +
                    (C17163 + C17164 + C17165) * C16967 +
                    (C17166 + C17167 + C17168) * C50738) *
                       C50700 * C1710 -
                   ((C17861 + C17862 + C17863) * C50738 +
                    (C17864 + C17865 + C17866) * C16967 +
                    (C16965 * C405 + C16960 * C425 + C16964 * C406 +
                     C16959 * C426 + C16963 * C407 + C16958 * C427) *
                        C16961 +
                    (C16965 * C395 + C16960 * C409 + C16964 * C396 +
                     C16959 * C410 + C16963 * C397 + C16958 * C411) *
                        C16966) *
                       C50700 * C1711 +
                   ((C16963 * C398 + C16958 * C412 + C16964 * C399 +
                     C16959 * C413 + C16965 * C400 + C16960 * C414) *
                        C16966 +
                    (C16963 * C416 + C16958 * C428 + C16964 * C417 +
                     C16959 * C429 + C16965 * C418 + C16960 * C430) *
                        C16961 +
                    (C18293 + C18294 + C18295) * C16967 +
                    (C18296 + C18297 + C18298) * C50738) *
                       C50700 * C1712 -
                   ((C16965 * C5971 + C16960 * C5973 + C16964 * C4479 +
                     C16959 * C4485 + C16963 * C4480 + C16958 * C4486) *
                        C50738 +
                    (C16965 * C5970 + C16960 * C5972 + C16964 * C4473 +
                     C16959 * C4481 + C16963 * C4474 + C16958 * C4482) *
                        C16967 +
                    (C16965 * C1719 + C16960 * C1727 + C16964 * C1720 +
                     C16959 * C1728 + C16963 * C1721 + C16958 * C1729) *
                        C16961 +
                    (C16965 * C1715 + C16960 * C1723 + C16964 * C1716 +
                     C16959 * C1724 + C16963 * C1717 + C16958 * C1725) *
                        C16966) *
                       C50700 * C1713) *
                  C50587 * C50568) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C19749 * C122 + C50538 * C129) * C19750 +
                     (C19749 * C133 + C50538 * C143) * C19745 +
                     C19885 * C19751 + C19886 * C19746 + C19887 * C19752 +
                     C19888 * C19747 + C19889 * C19753 + C19890 * C19748) *
                        C50700 * C1544 -
                    (C20367 * C19748 + C20368 * C19753 + C20369 * C19747 +
                     C20370 * C19752 + C20371 * C19746 + C20372 * C19751 +
                     (C19749 * C407 + C50538 * C427) * C19745 +
                     (C19749 * C397 + C50538 * C411) * C19750) *
                        C50700 * C50667) *
                       C50587 * C895 +
                   (((C19749 * C396 + C50538 * C410) * C19750 +
                     (C19749 * C406 + C50538 * C426) * C19745 +
                     C20373 * C19751 + C20374 * C19746 + C20375 * C19752 +
                     C20376 * C19747 + C20377 * C19753 + C20378 * C19748) *
                        C50700 * C50667 -
                    (C19898 * C19748 + C19897 * C19753 + C19896 * C19747 +
                     C19895 * C19752 + C19894 * C19746 + C19893 * C19751 +
                     (C19749 * C134 + C50538 * C144) * C19745 +
                     (C19749 * C123 + C50538 * C130) * C19750) *
                        C50700 * C1544) *
                       C50587 * C896 +
                   (((C19749 * C124 + C50538 * C131) * C19750 +
                     (C19749 * C135 + C50538 * C145) * C19745 +
                     C20109 * C19751 + C20110 * C19746 + C20111 * C19752 +
                     C20112 * C19747 + C20113 * C19753 + C20114 * C19748) *
                        C50700 * C1544 -
                    ((C19749 * C3076 + C50538 * C3080) * C19748 +
                     (C19749 * C3071 + C50538 * C3077) * C19753 +
                     (C19749 * C1435 + C50538 * C1443) * C19747 +
                     (C19749 * C1431 + C50538 * C1439) * C19752 +
                     (C19749 * C786 + C50538 * C792) * C19746 +
                     (C19749 * C777 + C50538 * C782) * C19751 +
                     (C19749 * C405 + C50538 * C425) * C19745 +
                     (C19749 * C395 + C50538 * C409) * C19750) *
                        C50700 * C50667) *
                       C50587 * C897)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C19749 * C122 + C50538 * C129) * C19750 +
                     (C19749 * C133 + C50538 * C143) * C19745 +
                     C19885 * C19751 + C19886 * C19746 + C19887 * C19752 +
                     C19888 * C19747 + C19889 * C19753 + C19890 * C19748) *
                        C50700 * C1544 -
                    (C20367 * C19748 + C20368 * C19753 + C20369 * C19747 +
                     C20370 * C19752 + C20371 * C19746 + C20372 * C19751 +
                     (C19749 * C407 + C50538 * C427) * C19745 +
                     (C19749 * C397 + C50538 * C411) * C19750) *
                        C50700 * C50667) *
                       C248 +
                   ((C20372 * C19750 + C20371 * C19745 + C20370 * C19751 +
                     C20369 * C19746 + C20368 * C19752 + C20367 * C19747 +
                     C21007 * C19753 + C21008 * C19748) *
                        C50700 * C50667 -
                    (C19891 * C19748 + C19892 * C19753 + C19890 * C19747 +
                     C19889 * C19752 + C19888 * C19746 + C19887 * C19751 +
                     C19886 * C19745 + C19885 * C19750) *
                        C50700 * C1544) *
                       C249 +
                   ((C19887 * C19750 + C19888 * C19745 + C19889 * C19751 +
                     C19890 * C19746 + C19892 * C19752 + C19891 * C19747 +
                     C20551 * C19753 + C20552 * C19748) *
                        C50700 * C1544 -
                    ((C19749 * C20999 + C50538 * C21001) * C19748 +
                     (C19749 * C20998 + C50538 * C21000) * C19753 +
                     C21008 * C19747 + C21007 * C19752 + C20367 * C19746 +
                     C20368 * C19751 + C20369 * C19745 + C20370 * C19750) *
                        C50700 * C50667) *
                       C250) *
                  C50568) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C19749 * C122 + C50538 * C129) * C19750 +
                    (C19749 * C133 + C50538 * C143) * C19745 + C19885 * C19751 +
                    C19886 * C19746 + C19887 * C19752 + C19888 * C19747 +
                    C19889 * C19753 + C19890 * C19748) *
                       C50700 * C1710 -
                   (C20367 * C19748 + C20368 * C19753 + C20369 * C19747 +
                    C20370 * C19752 + C20371 * C19746 + C20372 * C19751 +
                    (C19749 * C407 + C50538 * C427) * C19745 +
                    (C19749 * C397 + C50538 * C411) * C19750) *
                       C50700 * C1711 +
                   ((C19749 * C398 + C50538 * C412) * C19750 +
                    (C19749 * C416 + C50538 * C428) * C19745 + C20667 * C19751 +
                    C20668 * C19746 + C20669 * C19752 + C20670 * C19747 +
                    C20671 * C19753 + C20672 * C19748) *
                       C50700 * C1712 -
                   ((C19749 * C21271 + C50538 * C21273) * C19748 +
                    (C19749 * C21270 + C50538 * C21272) * C19753 +
                    (C19749 * C4476 + C50538 * C4484) * C19747 +
                    (C19749 * C4472 + C50538 * C4478) * C19752 +
                    (C19749 * C4480 + C50538 * C4486) * C19746 +
                    (C19749 * C4474 + C50538 * C4482) * C19751 +
                    (C19749 * C1721 + C50538 * C1729) * C19745 +
                    (C19749 * C1717 + C50538 * C1725) * C19750) *
                       C50700 * C1713) *
                  C50587 * C50568) /
                     (p * q * std::sqrt(p + q));
    d2ee[148] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C16963 * C122 + C16958 * C129 + C16964 * C123 +
                      C16959 * C130 + C16965 * C124 + C16960 * C131) *
                         C16966 +
                     (C16963 * C133 + C16958 * C143 + C16964 * C134 +
                      C16959 * C144 + C16965 * C135 + C16960 * C145) *
                         C16961 +
                     (C17163 + C17164 + C17165) * C16967 +
                     (C17166 + C17167 + C17168) * C50738) *
                        C50700 * C50876 -
                    ((C17861 + C17862 + C17863) * C50738 +
                     (C17864 + C17865 + C17866) * C16967 +
                     (C16965 * C405 + C16960 * C425 + C16964 * C406 +
                      C16959 * C426 + C16963 * C407 + C16958 * C427) *
                         C16961 +
                     (C16965 * C395 + C16960 * C409 + C16964 * C396 +
                      C16959 * C410 + C16963 * C397 + C16958 * C411) *
                         C16966) *
                        C50700 * C50877 +
                    ((C16963 * C398 + C16958 * C412 + C16964 * C399 +
                      C16959 * C413 + C16965 * C400 + C16960 * C414) *
                         C16966 +
                     (C16963 * C416 + C16958 * C428 + C16964 * C417 +
                      C16959 * C429 + C16965 * C418 + C16960 * C430) *
                         C16961 +
                     (C18293 + C18294 + C18295) * C16967 +
                     (C18296 + C18297 + C18298) * C50738) *
                        C50700 * C1960) *
                       C50587 * C50821 +
                   (((C16963 * C396 + C16958 * C410 + C16964 * C395 +
                      C16959 * C409 + C16965 * C394 + C16960 * C408) *
                         C16966 +
                     (C16963 * C406 + C16958 * C426 + C16964 * C405 +
                      C16959 * C425 + C16965 * C404 + C16960 * C424) *
                         C16961 +
                     (C17867 + C17868 + C17869) * C16967 +
                     (C17870 + C17871 + C17872) * C50738) *
                        C50700 * C50877 -
                    ((C17180 + C17179 + C17178) * C50738 +
                     (C17177 + C17176 + C17175) * C16967 +
                     (C16965 * C136 + C16960 * C146 + C16964 * C135 +
                      C16959 * C145 + C16963 * C134 + C16958 * C144) *
                         C16961 +
                     (C16965 * C125 + C16960 * C132 + C16964 * C124 +
                      C16959 * C131 + C16963 * C123 + C16958 * C130) *
                         C16966) *
                        C50700 * C50876 -
                    ((C16965 * C1087 + C16960 * C1095 + C16964 * C1088 +
                      C16959 * C1096 + C16963 * C1089 + C16958 * C1097) *
                         C50738 +
                     (C16965 * C1083 + C16960 * C1091 + C16964 * C1084 +
                      C16959 * C1092 + C16963 * C1085 + C16958 * C1093) *
                         C16967 +
                     (C16965 * C419 + C16960 * C431 + C16964 * C418 +
                      C16959 * C430 + C16963 * C417 + C16958 * C429) *
                         C16961 +
                     (C16965 * C401 + C16960 * C415 + C16964 * C400 +
                      C16959 * C414 + C16963 * C399 + C16958 * C413) *
                         C16966) *
                        C50700 * C1960) *
                       C50587 * C50574)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C19749 * C122 + C50538 * C129) * C19750 +
                     (C19749 * C133 + C50538 * C143) * C19745 +
                     C19885 * C19751 + C19886 * C19746 + C19887 * C19752 +
                     C19888 * C19747 + C19889 * C19753 + C19890 * C19748) *
                        C50700 * C50876 -
                    (C20367 * C19748 + C20368 * C19753 + C20369 * C19747 +
                     C20370 * C19752 + C20371 * C19746 + C20372 * C19751 +
                     (C19749 * C407 + C50538 * C427) * C19745 +
                     (C19749 * C397 + C50538 * C411) * C19750) *
                        C50700 * C50877 +
                    ((C19749 * C398 + C50538 * C412) * C19750 +
                     (C19749 * C416 + C50538 * C428) * C19745 +
                     C20667 * C19751 + C20668 * C19746 + C20669 * C19752 +
                     C20670 * C19747 + C20671 * C19753 + C20672 * C19748) *
                        C50700 * C1960) *
                       C50587 * C50821 +
                   (((C19749 * C396 + C50538 * C410) * C19750 +
                     (C19749 * C406 + C50538 * C426) * C19745 +
                     C20373 * C19751 + C20374 * C19746 + C20375 * C19752 +
                     C20376 * C19747 + C20377 * C19753 + C20378 * C19748) *
                        C50700 * C50877 -
                    (C19898 * C19748 + C19897 * C19753 + C19896 * C19747 +
                     C19895 * C19752 + C19894 * C19746 + C19893 * C19751 +
                     (C19749 * C134 + C50538 * C144) * C19745 +
                     (C19749 * C123 + C50538 * C130) * C19750) *
                        C50700 * C50876 -
                    ((C19749 * C3543 + C50538 * C3547) * C19748 +
                     (C19749 * C3541 + C50538 * C3545) * C19753 +
                     (C19749 * C2553 + C50538 * C2557) * C19747 +
                     (C19749 * C2548 + C50538 * C2551) * C19752 +
                     (C19749 * C1089 + C50538 * C1097) * C19746 +
                     (C19749 * C1085 + C50538 * C1093) * C19751 +
                     (C19749 * C417 + C50538 * C429) * C19745 +
                     (C19749 * C399 + C50538 * C413) * C19750) *
                        C50700 * C1960) *
                       C50587 * C50574)) /
                     (p * q * std::sqrt(p + q));
    d2ee[149] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C16963 * C122 + C16958 * C129 + C16964 * C123 +
                      C16959 * C130 + C16965 * C124 + C16960 * C131) *
                         C16966 +
                     (C16963 * C133 + C16958 * C143 + C16964 * C134 +
                      C16959 * C144 + C16965 * C135 + C16960 * C145) *
                         C16961 +
                     (C17163 + C17164 + C17165) * C16967 +
                     (C17166 + C17167 + C17168) * C50738) *
                        C50700 * C1544 -
                    ((C17861 + C17862 + C17863) * C50738 +
                     (C17864 + C17865 + C17866) * C16967 +
                     (C16965 * C405 + C16960 * C425 + C16964 * C406 +
                      C16959 * C426 + C16963 * C407 + C16958 * C427) *
                         C16961 +
                     (C16965 * C395 + C16960 * C409 + C16964 * C396 +
                      C16959 * C410 + C16963 * C397 + C16958 * C411) *
                         C16966) *
                        C50700 * C50667) *
                       C50587 * C895 +
                   (((C16963 * C396 + C16958 * C410 + C16964 * C395 +
                      C16959 * C409 + C16965 * C394 + C16960 * C408) *
                         C16966 +
                     (C16963 * C406 + C16958 * C426 + C16964 * C405 +
                      C16959 * C425 + C16965 * C404 + C16960 * C424) *
                         C16961 +
                     (C17867 + C17868 + C17869) * C16967 +
                     (C17870 + C17871 + C17872) * C50738) *
                        C50700 * C50667 -
                    ((C17180 + C17179 + C17178) * C50738 +
                     (C17177 + C17176 + C17175) * C16967 +
                     (C16965 * C136 + C16960 * C146 + C16964 * C135 +
                      C16959 * C145 + C16963 * C134 + C16958 * C144) *
                         C16961 +
                     (C16965 * C125 + C16960 * C132 + C16964 * C124 +
                      C16959 * C131 + C16963 * C123 + C16958 * C130) *
                         C16966) *
                        C50700 * C1544) *
                       C50587 * C896 +
                   (((C16963 * C124 + C16958 * C131 + C16964 * C125 +
                      C16959 * C132 + C16965 * C126 + C16960 * C138) *
                         C16966 +
                     (C16963 * C135 + C16958 * C145 + C16964 * C136 +
                      C16959 * C146 + C16965 * C137 + C16960 * C147) *
                         C16961 +
                     (C17491 + C17492 + C17493) * C16967 +
                     (C17494 + C17495 + C17496) * C50738) *
                        C50700 * C1544 -
                    ((C16965 * C788 + C16960 * C794 + C16964 * C787 +
                      C16959 * C793 + C16963 * C786 + C16958 * C792) *
                         C50738 +
                     (C16965 * C779 + C16960 * C789 + C16964 * C778 +
                      C16959 * C783 + C16963 * C777 + C16958 * C782) *
                         C16967 +
                     (C16965 * C421 + C16960 * C432 + C16964 * C404 +
                      C16959 * C424 + C16963 * C405 + C16958 * C425) *
                         C16961 +
                     (C16965 * C402 + C16960 * C420 + C16964 * C394 +
                      C16959 * C408 + C16963 * C395 + C16958 * C409) *
                         C16966) *
                        C50700 * C50667) *
                       C50587 * C897)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C16963 * C122 + C16958 * C129 + C16964 * C123 +
                      C16959 * C130 + C16965 * C124 + C16960 * C131) *
                         C16966 +
                     (C16963 * C133 + C16958 * C143 + C16964 * C134 +
                      C16959 * C144 + C16965 * C135 + C16960 * C145) *
                         C16961 +
                     (C17163 + C17164 + C17165) * C16967 +
                     (C17166 + C17167 + C17168) * C50738) *
                        C50700 * C1544 -
                    ((C17861 + C17862 + C17863) * C50738 +
                     (C17864 + C17865 + C17866) * C16967 +
                     (C16965 * C405 + C16960 * C425 + C16964 * C406 +
                      C16959 * C426 + C16963 * C407 + C16958 * C427) *
                         C16961 +
                     (C16965 * C395 + C16960 * C409 + C16964 * C396 +
                      C16959 * C410 + C16963 * C397 + C16958 * C411) *
                         C16966) *
                        C50700 * C50667) *
                       C248 +
                   (((C17866 + C17865 + C17864) * C16966 +
                     (C17863 + C17862 + C17861) * C16961 +
                     (C18797 + C18798 + C18799) * C16967 +
                     (C18800 + C18801 + C18802) * C50738) *
                        C50700 * C50667 -
                    ((C17169 + C17170 + C17171) * C50738 +
                     (C17172 + C17173 + C17174) * C16967 +
                     (C17168 + C17167 + C17166) * C16961 +
                     (C17165 + C17164 + C17163) * C16966) *
                        C50700 * C1544) *
                       C249 +
                   (((C17174 + C17173 + C17172) * C16966 +
                     (C17171 + C17170 + C17169) * C16961 +
                     (C18129 + C18130 + C18131) * C16967 +
                     (C18132 + C18133 + C18134) * C50738) *
                        C50700 * C1544 -
                    ((C16965 * C3076 + C16960 * C3080 + C16964 * C3075 +
                      C16959 * C3079 + C16963 * C3074 + C16958 * C3078) *
                         C50738 +
                     (C16965 * C3071 + C16960 * C3077 + C16964 * C3070 +
                      C16959 * C3073 + C16963 * C3069 + C16958 * C3072) *
                         C16967 +
                     (C18802 + C18801 + C18800) * C16961 +
                     (C18799 + C18798 + C18797) * C16966) *
                        C50700 * C50667) *
                       C250) *
                  C50568) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C19749 * C122 + C50538 * C129) * C19750 +
                     (C19749 * C133 + C50538 * C143) * C19745 +
                     C19885 * C19751 + C19886 * C19746 + C19887 * C19752 +
                     C19888 * C19747 + C19889 * C19753 + C19890 * C19748) *
                        C50700 * C1544 -
                    (C20367 * C19748 + C20368 * C19753 + C20369 * C19747 +
                     C20370 * C19752 + C20371 * C19746 + C20372 * C19751 +
                     (C19749 * C407 + C50538 * C427) * C19745 +
                     (C19749 * C397 + C50538 * C411) * C19750) *
                        C50700 * C50667) *
                       C50587 * C895 +
                   (((C19749 * C396 + C50538 * C410) * C19750 +
                     (C19749 * C406 + C50538 * C426) * C19745 +
                     C20373 * C19751 + C20374 * C19746 + C20375 * C19752 +
                     C20376 * C19747 + C20377 * C19753 + C20378 * C19748) *
                        C50700 * C50667 -
                    (C19898 * C19748 + C19897 * C19753 + C19896 * C19747 +
                     C19895 * C19752 + C19894 * C19746 + C19893 * C19751 +
                     (C19749 * C134 + C50538 * C144) * C19745 +
                     (C19749 * C123 + C50538 * C130) * C19750) *
                        C50700 * C1544) *
                       C50587 * C896 +
                   (((C19749 * C124 + C50538 * C131) * C19750 +
                     (C19749 * C135 + C50538 * C145) * C19745 +
                     C20109 * C19751 + C20110 * C19746 + C20111 * C19752 +
                     C20112 * C19747 + C20113 * C19753 + C20114 * C19748) *
                        C50700 * C1544 -
                    ((C19749 * C3076 + C50538 * C3080) * C19748 +
                     (C19749 * C3071 + C50538 * C3077) * C19753 +
                     (C19749 * C1435 + C50538 * C1443) * C19747 +
                     (C19749 * C1431 + C50538 * C1439) * C19752 +
                     (C19749 * C786 + C50538 * C792) * C19746 +
                     (C19749 * C777 + C50538 * C782) * C19751 +
                     (C19749 * C405 + C50538 * C425) * C19745 +
                     (C19749 * C395 + C50538 * C409) * C19750) *
                        C50700 * C50667) *
                       C50587 * C897)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C19749 * C122 + C50538 * C129) * C19750 +
                     (C19749 * C133 + C50538 * C143) * C19745 +
                     C19885 * C19751 + C19886 * C19746 + C19887 * C19752 +
                     C19888 * C19747 + C19889 * C19753 + C19890 * C19748) *
                        C50700 * C1544 -
                    (C20367 * C19748 + C20368 * C19753 + C20369 * C19747 +
                     C20370 * C19752 + C20371 * C19746 + C20372 * C19751 +
                     (C19749 * C407 + C50538 * C427) * C19745 +
                     (C19749 * C397 + C50538 * C411) * C19750) *
                        C50700 * C50667) *
                       C248 +
                   ((C20372 * C19750 + C20371 * C19745 + C20370 * C19751 +
                     C20369 * C19746 + C20368 * C19752 + C20367 * C19747 +
                     C21007 * C19753 + C21008 * C19748) *
                        C50700 * C50667 -
                    (C19891 * C19748 + C19892 * C19753 + C19890 * C19747 +
                     C19889 * C19752 + C19888 * C19746 + C19887 * C19751 +
                     C19886 * C19745 + C19885 * C19750) *
                        C50700 * C1544) *
                       C249 +
                   ((C19887 * C19750 + C19888 * C19745 + C19889 * C19751 +
                     C19890 * C19746 + C19892 * C19752 + C19891 * C19747 +
                     C20551 * C19753 + C20552 * C19748) *
                        C50700 * C1544 -
                    ((C19749 * C20999 + C50538 * C21001) * C19748 +
                     (C19749 * C20998 + C50538 * C21000) * C19753 +
                     C21008 * C19747 + C21007 * C19752 + C20367 * C19746 +
                     C20368 * C19751 + C20369 * C19745 + C20370 * C19750) *
                        C50700 * C50667) *
                       C250) *
                  C50568) /
                     (p * q * std::sqrt(p + q));
    d2ee[150] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C7894 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C50842 +
             (C24717 + C24718) * C7895 + (C24719 + C24720) * C50738) *
                C33658 +
            ((C27811 + C27812) * C7894 + (C27813 + C27814) * C50842 +
             C28501 * C7895 + C28502 * C50738) *
                C50764) *
               C50603 * C50829 -
           ((C26363 * C50738 + C26364 * C7895 + C28503 * C50842 +
             C28504 * C7894) *
                C50764 +
            ((C24724 + C24723) * C50738 + (C24722 + C24721) * C7895 +
             (C24720 + C24719) * C50842 + (C24718 + C24717) * C7894) *
                C33658) *
               C50603 * C50639) *
              C50872 +
          ((((C24729 + C24730) * C7894 + (C24731 + C24732) * C50842 +
             (C24733 + C24734) * C7895 + (C24735 + C24736) * C50738) *
                C33658 +
            (C28505 * C7894 + C28506 * C50842 + (C25445 + C25446) * C7895 +
             (C25447 + C25448) * C50738) *
                C50764) *
               C50603 * C50639 -
           ((C28507 * C50738 + C28508 * C7895 + (C27822 + C27821) * C50842 +
             (C27820 + C27819) * C7894) *
                C50764 +
            ((C24732 + C24731) * C50738 + (C24730 + C24729) * C7895 +
             (C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                 C50842 +
             (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                 C7894) *
                C33658) *
               C50603 * C50829) *
              C50873 +
          ((((C49747 * C124 + C50814 * C131 + C49740 * C125 + C50543 * C132) *
                 C7894 +
             (C49747 * C135 + C50814 * C145 + C49740 * C136 + C50543 * C146) *
                 C50842 +
             (C25053 + C25054) * C7895 + (C25055 + C25056) * C50738) *
                C33658 +
            ((C28239 + C28240) * C7894 + (C28241 + C28242) * C50842 +
             (C28033 + C28034) * C7895 + (C28035 + C28036) * C50738) *
                C50764) *
               C50603 * C50829 -
           (((C49740 * C1434 + C50543 * C1442 + C49747 * C1435 +
              C50814 * C1443) *
                 C50738 +
             (C49740 * C1430 + C50543 * C1438 + C49747 * C1431 +
              C50814 * C1439) *
                 C7895 +
             (C28036 + C28035) * C50842 + (C28034 + C28033) * C7894) *
                C50764 +
            ((C25060 + C25059) * C50738 + (C25058 + C25057) * C7895 +
             (C25056 + C25055) * C50842 + (C25054 + C25053) * C7894) *
                C33658) *
               C50603 * C50639) *
              C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[151] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                  C7894 +
              (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                  C50842 +
              (C24717 + C24718) * C7895 + (C24719 + C24720) * C50738) *
                 C33658 +
             ((C27811 + C27812) * C7894 + (C27813 + C27814) * C50842 +
              C28501 * C7895 + C28502 * C50738) *
                 C50764) *
                C50830 -
            ((C29027 * C50738 + C29028 * C7895 + (C27815 + C27816) * C50842 +
              (C27817 + C27818) * C7894) *
                 C50764 +
             (C28503 * C50738 + C28504 * C7895 + (C27814 + C27813) * C50842 +
              (C27812 + C27811) * C7894) *
                 C33658) *
                C50667) *
               C50829 +
           (((C28501 * C7894 + C28502 * C50842 + C29689 * C7895 +
              C29690 * C50738) *
                 C33658 +
             (C29029 * C7894 + C29030 * C50842 + (C25873 + C25874) * C7895 +
              (C25875 + C25876) * C50738) *
                 C50764) *
                C50667 -
            ((C26363 * C50738 + C26364 * C7895 + C28503 * C50842 +
              C28504 * C7894) *
                 C50764 +
             ((C24724 + C24723) * C50738 + (C24722 + C24721) * C7895 +
              (C24720 + C24719) * C50842 + (C24718 + C24717) * C7894) *
                 C33658) *
                C50830) *
               C50639) *
              C251 +
          (((((C27819 + C27820) * C7894 + (C27821 + C27822) * C50842 +
              C28505 * C7895 + C28506 * C50738) *
                 C33658 +
             ((C27823 + C27824) * C7894 + (C27825 + C27826) * C50842 +
              (C27827 + C27828) * C7895 + (C27829 + C27830) * C50738) *
                 C50764) *
                C50667 -
            ((C28507 * C50738 + C28508 * C7895 + (C27822 + C27821) * C50842 +
              (C27820 + C27819) * C7894) *
                 C50764 +
             ((C24732 + C24731) * C50738 + (C24730 + C24729) * C7895 +
              (C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                  C50842 +
              (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                  C7894) *
                 C33658) *
                C50830) *
               C50829 +
           ((((C24729 + C24730) * C7894 + (C24731 + C24732) * C50842 +
              (C24733 + C24734) * C7895 + (C24735 + C24736) * C50738) *
                 C33658 +
             (C28505 * C7894 + C28506 * C50842 + (C25445 + C25446) * C7895 +
              (C25447 + C25448) * C50738) *
                 C50764) *
                C50830 -
            (((C49740 * C2554 + C50543 * C2558 + C49747 * C2553 +
               C50814 * C2557) *
                  C50738 +
              (C49740 * C2549 + C50543 * C2555 + C49747 * C2548 +
               C50814 * C2551) *
                  C7895 +
              (C27830 + C27829) * C50842 + (C27828 + C27827) * C7894) *
                 C50764 +
             ((C25448 + C25447) * C50738 + (C25446 + C25445) * C7895 +
              C28507 * C50842 + C28508 * C7894) *
                 C33658) *
                C50667) *
               C50639) *
              C50574)) /
        (p * q * std::sqrt(p + q));
    d2ee[152] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C7894 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C50842 +
             (C24717 + C24718) * C7895 + (C24719 + C24720) * C50738) *
                C33658 +
            ((C27811 + C27812) * C7894 + (C27813 + C27814) * C50842 +
             C28501 * C7895 + C28502 * C50738) *
                C50764) *
               C50603 * C248 -
           ((C26363 * C50738 + C26364 * C7895 + C28503 * C50842 +
             C28504 * C7894) *
                C50764 +
            ((C24724 + C24723) * C50738 + (C24722 + C24721) * C7895 +
             (C24720 + C24719) * C50842 + (C24718 + C24717) * C7894) *
                C33658) *
               C50603 * C249 +
           ((C24741 * C7894 + C24742 * C50842 + (C24728 + C24727) * C7895 +
             (C24726 + C24725) * C50738) *
                C33658 +
            (C29689 * C7894 + C29690 * C50842 + (C26373 + C26374) * C7895 +
             (C26375 + C26376) * C50738) *
                C50764) *
               C50603 * C250) *
              C251 +
          ((((C24729 + C24730) * C7894 + (C24731 + C24732) * C50842 +
             (C24733 + C24734) * C7895 + (C24735 + C24736) * C50738) *
                C33658 +
            (C28505 * C7894 + C28506 * C50842 + (C25445 + C25446) * C7895 +
             (C25447 + C25448) * C50738) *
                C50764) *
               C50603 * C249 -
           ((C28507 * C50738 + C28508 * C7895 + (C27822 + C27821) * C50842 +
             (C27820 + C27819) * C7894) *
                C50764 +
            ((C24732 + C24731) * C50738 + (C24730 + C24729) * C7895 +
             (C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                 C50842 +
             (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                 C7894) *
                C33658) *
               C50603 * C248 -
           (((C49740 * C3076 + C50543 * C3080 + C49747 * C3075 +
              C50814 * C3079) *
                 C50738 +
             (C49740 * C3071 + C50543 * C3077 + C49747 * C3070 +
              C50814 * C3073) *
                 C7895 +
             (C25448 + C25447) * C50842 + (C25446 + C25445) * C7894) *
                C50764 +
            ((C24740 + C24739) * C50738 + (C24738 + C24737) * C7895 +
             C24743 * C50842 + C24744 * C7894) *
                C33658) *
               C50603 * C250) *
              C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                C7894 +
            (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                C50842 +
            (C24717 + C24718) * C7895 + (C24719 + C24720) * C50738) *
               C33658 +
           ((C27811 + C27812) * C7894 + (C27813 + C27814) * C50842 +
            C28501 * C7895 + C28502 * C50738) *
               C50764) *
              C50603 * C50587 * C113 -
          ((C28507 * C50738 + C28508 * C7895 + (C27822 + C27821) * C50842 +
            (C27820 + C27819) * C7894) *
               C50764 +
           ((C24732 + C24731) * C50738 + (C24730 + C24729) * C7895 +
            (C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                C50842 +
            (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                C7894) *
               C33658) *
              C50603 * C50587 * C114 +
          (((C49747 * C124 + C50814 * C131 + C49740 * C125 + C50543 * C132) *
                C7894 +
            (C49747 * C135 + C50814 * C145 + C49740 * C136 + C50543 * C146) *
                C50842 +
            (C25053 + C25054) * C7895 + (C25055 + C25056) * C50738) *
               C33658 +
           ((C28239 + C28240) * C7894 + (C28241 + C28242) * C50842 +
            (C28033 + C28034) * C7895 + (C28035 + C28036) * C50738) *
               C50764) *
              C50603 * C50587 * C115 -
          (((C49740 * C788 + C50543 * C794 + C49747 * C787 + C50814 * C793) *
                C50738 +
            (C49740 * C779 + C50543 * C789 + C49747 * C778 + C50814 * C783) *
                C7895 +
            (C49740 * C421 + C50543 * C432 + C49747 * C404 + C50814 * C424) *
                C50842 +
            (C49740 * C402 + C50543 * C420 + C49747 * C394 + C50814 * C408) *
                C7894) *
               C50764 +
           ((C49740 * C280 + C50543 * C291 + C49747 * C263 + C50814 * C283) *
                C50738 +
            (C49740 * C261 + C50543 * C279 + C49747 * C253 + C50814 * C267) *
                C7895 +
            (C49740 * C137 + C50543 * C147 + C49747 * C136 + C50814 * C146) *
                C50842 +
            (C49740 * C126 + C50543 * C138 + C49747 * C125 + C50814 * C132) *
                C7894) *
               C33658) *
              C50603 * C50587 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C7894 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C50842 +
             (C24717 + C24718) * C7895 + (C24719 + C24720) * C50738) *
                C33658 +
            ((C27811 + C27812) * C7894 + (C27813 + C27814) * C50842 +
             C28501 * C7895 + C28502 * C50738) *
                C50764) *
               C391 -
           ((C29027 * C50738 + C29028 * C7895 + (C27815 + C27816) * C50842 +
             (C27817 + C27818) * C7894) *
                C50764 +
            (C28503 * C50738 + C28504 * C7895 + (C27814 + C27813) * C50842 +
             (C27812 + C27811) * C7894) *
                C33658) *
               C392 +
           (((C27818 + C27817) * C7894 + (C27816 + C27815) * C50842 +
             C29029 * C7895 + C29030 * C50738) *
                C33658 +
            ((C30217 + C30218) * C7894 + (C30219 + C30220) * C50842 +
             (C29039 + C29040) * C7895 + (C29041 + C29042) * C50738) *
                C50764) *
               C393) *
              C50587 * C251 +
          ((((C27819 + C27820) * C7894 + (C27821 + C27822) * C50842 +
             C28505 * C7895 + C28506 * C50738) *
                C33658 +
            ((C27823 + C27824) * C7894 + (C27825 + C27826) * C50842 +
             (C27827 + C27828) * C7895 + (C27829 + C27830) * C50738) *
                C50764) *
               C392 -
           ((C28507 * C50738 + C28508 * C7895 + (C27822 + C27821) * C50842 +
             (C27820 + C27819) * C7894) *
                C50764 +
            ((C24732 + C24731) * C50738 + (C24730 + C24729) * C7895 +
             (C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                 C50842 +
             (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                 C7894) *
                C33658) *
               C391 -
           (((C49740 * C5971 + C50543 * C5973 + C49747 * C4479 +
              C50814 * C4485) *
                 C50738 +
             (C49740 * C5970 + C50543 * C5972 + C49747 * C4473 +
              C50814 * C4481) *
                 C7895 +
             (C49740 * C1719 + C50543 * C1727 + C49747 * C1720 +
              C50814 * C1728) *
                 C50842 +
             (C49740 * C1715 + C50543 * C1723 + C49747 * C1716 +
              C50814 * C1724) *
                 C7894) *
                C50764 +
            ((C27830 + C27829) * C50738 + (C27828 + C27827) * C7895 +
             (C27826 + C27825) * C50842 + (C27824 + C27823) * C7894) *
                C33658) *
               C393) *
              C50587 * C50574)) /
            (p * q * std::sqrt(p + q));
    d2ee[153] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C7894 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C50842 +
             (C24717 + C24718) * C7895 + (C24719 + C24720) * C50738) *
                C33658 +
            ((C27811 + C27812) * C7894 + (C27813 + C27814) * C50842 +
             C28501 * C7895 + C28502 * C50738) *
                C50764) *
               C50830 -
           ((C29027 * C50738 + C29028 * C7895 + (C27815 + C27816) * C50842 +
             (C27817 + C27818) * C7894) *
                C50764 +
            (C28503 * C50738 + C28504 * C7895 + (C27814 + C27813) * C50842 +
             (C27812 + C27811) * C7894) *
                C33658) *
               C50667) *
              C50587 * C50872 +
          ((((C27819 + C27820) * C7894 + (C27821 + C27822) * C50842 +
             C28505 * C7895 + C28506 * C50738) *
                C33658 +
            ((C27823 + C27824) * C7894 + (C27825 + C27826) * C50842 +
             (C27827 + C27828) * C7895 + (C27829 + C27830) * C50738) *
                C50764) *
               C50667 -
           ((C28507 * C50738 + C28508 * C7895 + (C27822 + C27821) * C50842 +
             (C27820 + C27819) * C7894) *
                C50764 +
            ((C24732 + C24731) * C50738 + (C24730 + C24729) * C7895 +
             (C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                 C50842 +
             (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                 C7894) *
                C33658) *
               C50830) *
              C50587 * C50873 +
          ((((C49747 * C124 + C50814 * C131 + C49740 * C125 + C50543 * C132) *
                 C7894 +
             (C49747 * C135 + C50814 * C145 + C49740 * C136 + C50543 * C146) *
                 C50842 +
             (C25053 + C25054) * C7895 + (C25055 + C25056) * C50738) *
                C33658 +
            ((C28239 + C28240) * C7894 + (C28241 + C28242) * C50842 +
             (C28033 + C28034) * C7895 + (C28035 + C28036) * C50738) *
                C50764) *
               C50830 -
           (((C49740 * C1087 + C50543 * C1095 + C49747 * C1088 +
              C50814 * C1096) *
                 C50738 +
             (C49740 * C1083 + C50543 * C1091 + C49747 * C1084 +
              C50814 * C1092) *
                 C7895 +
             (C49740 * C419 + C50543 * C431 + C49747 * C418 + C50814 * C430) *
                 C50842 +
             (C49740 * C401 + C50543 * C415 + C49747 * C400 + C50814 * C414) *
                 C7894) *
                C50764 +
            ((C28036 + C28035) * C50738 + (C28034 + C28033) * C7895 +
             (C28242 + C28241) * C50842 + (C28240 + C28239) * C7894) *
                C33658) *
               C50667) *
              C50587 * C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[154] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                C7894 +
            (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                C50842 +
            (C24717 + C24718) * C7895 + (C24719 + C24720) * C50738) *
               C33658 +
           ((C27811 + C27812) * C7894 + (C27813 + C27814) * C50842 +
            C28501 * C7895 + C28502 * C50738) *
               C50764) *
              C50603 * C50587 * C113 -
          ((C28507 * C50738 + C28508 * C7895 + (C27822 + C27821) * C50842 +
            (C27820 + C27819) * C7894) *
               C50764 +
           ((C24732 + C24731) * C50738 + (C24730 + C24729) * C7895 +
            (C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                C50842 +
            (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                C7894) *
               C33658) *
              C50603 * C50587 * C114 +
          (((C49747 * C124 + C50814 * C131 + C49740 * C125 + C50543 * C132) *
                C7894 +
            (C49747 * C135 + C50814 * C145 + C49740 * C136 + C50543 * C146) *
                C50842 +
            (C25053 + C25054) * C7895 + (C25055 + C25056) * C50738) *
               C33658 +
           ((C28239 + C28240) * C7894 + (C28241 + C28242) * C50842 +
            (C28033 + C28034) * C7895 + (C28035 + C28036) * C50738) *
               C50764) *
              C50603 * C50587 * C115 -
          (((C49740 * C788 + C50543 * C794 + C49747 * C787 + C50814 * C793) *
                C50738 +
            (C49740 * C779 + C50543 * C789 + C49747 * C778 + C50814 * C783) *
                C7895 +
            (C49740 * C421 + C50543 * C432 + C49747 * C404 + C50814 * C424) *
                C50842 +
            (C49740 * C402 + C50543 * C420 + C49747 * C394 + C50814 * C408) *
                C7894) *
               C50764 +
           ((C49740 * C280 + C50543 * C291 + C49747 * C263 + C50814 * C283) *
                C50738 +
            (C49740 * C261 + C50543 * C279 + C49747 * C253 + C50814 * C267) *
                C7895 +
            (C49740 * C137 + C50543 * C147 + C49747 * C136 + C50814 * C146) *
                C50842 +
            (C49740 * C126 + C50543 * C138 + C49747 * C125 + C50814 * C132) *
                C7894) *
               C33658) *
              C50603 * C50587 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C7894 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C50842 +
             (C24717 + C24718) * C7895 + (C24719 + C24720) * C50738) *
                C33658 +
            ((C27811 + C27812) * C7894 + (C27813 + C27814) * C50842 +
             C28501 * C7895 + C28502 * C50738) *
                C50764) *
               C50603 * C248 -
           ((C26363 * C50738 + C26364 * C7895 + C28503 * C50842 +
             C28504 * C7894) *
                C50764 +
            ((C24724 + C24723) * C50738 + (C24722 + C24721) * C7895 +
             (C24720 + C24719) * C50842 + (C24718 + C24717) * C7894) *
                C33658) *
               C50603 * C249 +
           ((C24741 * C7894 + C24742 * C50842 + (C24728 + C24727) * C7895 +
             (C24726 + C24725) * C50738) *
                C33658 +
            (C29689 * C7894 + C29690 * C50842 + (C26373 + C26374) * C7895 +
             (C26375 + C26376) * C50738) *
                C50764) *
               C50603 * C250) *
              C251 +
          ((((C24729 + C24730) * C7894 + (C24731 + C24732) * C50842 +
             (C24733 + C24734) * C7895 + (C24735 + C24736) * C50738) *
                C33658 +
            (C28505 * C7894 + C28506 * C50842 + (C25445 + C25446) * C7895 +
             (C25447 + C25448) * C50738) *
                C50764) *
               C50603 * C249 -
           ((C28507 * C50738 + C28508 * C7895 + (C27822 + C27821) * C50842 +
             (C27820 + C27819) * C7894) *
                C50764 +
            ((C24732 + C24731) * C50738 + (C24730 + C24729) * C7895 +
             (C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                 C50842 +
             (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                 C7894) *
                C33658) *
               C50603 * C248 -
           (((C49740 * C3076 + C50543 * C3080 + C49747 * C3075 +
              C50814 * C3079) *
                 C50738 +
             (C49740 * C3071 + C50543 * C3077 + C49747 * C3070 +
              C50814 * C3073) *
                 C7895 +
             (C25448 + C25447) * C50842 + (C25446 + C25445) * C7894) *
                C50764 +
            ((C24740 + C24739) * C50738 + (C24738 + C24737) * C7895 +
             C24743 * C50842 + C24744 * C7894) *
                C33658) *
               C50603 * C250) *
              C50574)) /
            (p * q * std::sqrt(p + q));
    d2ee[155] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C7894 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C50842 +
             (C24717 + C24718) * C7895 + (C24719 + C24720) * C50738) *
                C33658 +
            ((C27811 + C27812) * C7894 + (C27813 + C27814) * C50842 +
             C28501 * C7895 + C28502 * C50738) *
                C50764) *
               C50603 * C50874 -
           ((C26363 * C50738 + C26364 * C7895 + C28503 * C50842 +
             C28504 * C7894) *
                C50764 +
            ((C24724 + C24723) * C50738 + (C24722 + C24721) * C7895 +
             (C24720 + C24719) * C50842 + (C24718 + C24717) * C7894) *
                C33658) *
               C50603 * C50875 +
           ((C24741 * C7894 + C24742 * C50842 + (C24728 + C24727) * C7895 +
             (C24726 + C24725) * C50738) *
                C33658 +
            (C29689 * C7894 + C29690 * C50842 + (C26373 + C26374) * C7895 +
             (C26375 + C26376) * C50738) *
                C50764) *
               C50603 * C1199) *
              C50821 +
          ((((C24729 + C24730) * C7894 + (C24731 + C24732) * C50842 +
             (C24733 + C24734) * C7895 + (C24735 + C24736) * C50738) *
                C33658 +
            (C28505 * C7894 + C28506 * C50842 + (C25445 + C25446) * C7895 +
             (C25447 + C25448) * C50738) *
                C50764) *
               C50603 * C50875 -
           ((C28507 * C50738 + C28508 * C7895 + (C27822 + C27821) * C50842 +
             (C27820 + C27819) * C7894) *
                C50764 +
            ((C24732 + C24731) * C50738 + (C24730 + C24729) * C7895 +
             (C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                 C50842 +
             (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                 C7894) *
                C33658) *
               C50603 * C50874 -
           (((C49740 * C3076 + C50543 * C3080 + C49747 * C3075 +
              C50814 * C3079) *
                 C50738 +
             (C49740 * C3071 + C50543 * C3077 + C49747 * C3070 +
              C50814 * C3073) *
                 C7895 +
             (C25448 + C25447) * C50842 + (C25446 + C25445) * C7894) *
                C50764 +
            ((C24740 + C24739) * C50738 + (C24738 + C24737) * C7895 +
             C24743 * C50842 + C24744 * C7894) *
                C33658) *
               C50603 * C1199) *
              C50574)) /
        (p * q * std::sqrt(p + q));
    d2ee[156] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C7894 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C50842 +
             (C24717 + C24718) * C7895 + (C24719 + C24720) * C50738) *
                C33658 +
            ((C27811 + C27812) * C7894 + (C27813 + C27814) * C50842 +
             C28501 * C7895 + C28502 * C50738) *
                C50764) *
               C50830 -
           ((C29027 * C50738 + C29028 * C7895 + (C27815 + C27816) * C50842 +
             (C27817 + C27818) * C7894) *
                C50764 +
            (C28503 * C50738 + C28504 * C7895 + (C27814 + C27813) * C50842 +
             (C27812 + C27811) * C7894) *
                C33658) *
               C50667) *
              C50874 +
          (((C28501 * C7894 + C28502 * C50842 + C29689 * C7895 +
             C29690 * C50738) *
                C33658 +
            (C29029 * C7894 + C29030 * C50842 + (C25873 + C25874) * C7895 +
             (C25875 + C25876) * C50738) *
                C50764) *
               C50667 -
           ((C26363 * C50738 + C26364 * C7895 + C28503 * C50842 +
             C28504 * C7894) *
                C50764 +
            ((C24724 + C24723) * C50738 + (C24722 + C24721) * C7895 +
             (C24720 + C24719) * C50842 + (C24718 + C24717) * C7894) *
                C33658) *
               C50830) *
              C50875 +
          (((C24741 * C7894 + C24742 * C50842 + (C24728 + C24727) * C7895 +
             (C24726 + C24725) * C50738) *
                C33658 +
            (C29689 * C7894 + C29690 * C50842 + (C26373 + C26374) * C7895 +
             (C26375 + C26376) * C50738) *
                C50764) *
               C50830 -
           (((C49740 * C3543 + C50543 * C3547 + C49747 * C3544 +
              C50814 * C3548) *
                 C50738 +
             (C49740 * C3541 + C50543 * C3545 + C49747 * C3542 +
              C50814 * C3546) *
                 C7895 +
             (C25876 + C25875) * C50842 + (C25874 + C25873) * C7894) *
                C50764 +
            ((C26376 + C26375) * C50738 + (C26374 + C26373) * C7895 +
             C26363 * C50842 + C26364 * C7894) *
                C33658) *
               C50667) *
              C1199) *
         C50568) /
        (p * q * std::sqrt(p + q));
    d2ee[157] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                C7894 +
            (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                C50842 +
            (C24717 + C24718) * C7895 + (C24719 + C24720) * C50738) *
               C33658 +
           ((C27811 + C27812) * C7894 + (C27813 + C27814) * C50842 +
            C28501 * C7895 + C28502 * C50738) *
               C50764) *
              C50603 * C964 -
          ((C26363 * C50738 + C26364 * C7895 + C28503 * C50842 +
            C28504 * C7894) *
               C50764 +
           ((C24724 + C24723) * C50738 + (C24722 + C24721) * C7895 +
            (C24720 + C24719) * C50842 + (C24718 + C24717) * C7894) *
               C33658) *
              C50603 * C965 +
          ((C24741 * C7894 + C24742 * C50842 + (C24728 + C24727) * C7895 +
            (C24726 + C24725) * C50738) *
               C33658 +
           (C29689 * C7894 + C29690 * C50842 + (C26373 + C26374) * C7895 +
            (C26375 + C26376) * C50738) *
               C50764) *
              C50603 * C966 -
          (((C49740 * C4061 + C50543 * C4065 + C49747 * C4062 +
             C50814 * C4066) *
                C50738 +
            (C49740 * C4059 + C50543 * C4063 + C49747 * C4060 +
             C50814 * C4064) *
                C7895 +
            (C26376 + C26375) * C50842 + (C26374 + C26373) * C7894) *
               C50764 +
           ((C25706 + C25705) * C50738 + (C25704 + C25703) * C7895 +
            C25693 * C50842 + C25694 * C7894) *
               C33658) *
              C50603 * C967) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C7894 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C50842 +
             (C24717 + C24718) * C7895 + (C24719 + C24720) * C50738) *
                C33658 +
            ((C27811 + C27812) * C7894 + (C27813 + C27814) * C50842 +
             C28501 * C7895 + C28502 * C50738) *
                C50764) *
               C50603 * C893 -
           ((C26363 * C50738 + C26364 * C7895 + C28503 * C50842 +
             C28504 * C7894) *
                C50764 +
            ((C24724 + C24723) * C50738 + (C24722 + C24721) * C7895 +
             (C24720 + C24719) * C50842 + (C24718 + C24717) * C7894) *
                C33658) *
               C50603 * C50639) *
              C895 +
          ((((C24729 + C24730) * C7894 + (C24731 + C24732) * C50842 +
             (C24733 + C24734) * C7895 + (C24735 + C24736) * C50738) *
                C33658 +
            (C28505 * C7894 + C28506 * C50842 + (C25445 + C25446) * C7895 +
             (C25447 + C25448) * C50738) *
                C50764) *
               C50603 * C50639 -
           ((C28507 * C50738 + C28508 * C7895 + (C27822 + C27821) * C50842 +
             (C27820 + C27819) * C7894) *
                C50764 +
            ((C24732 + C24731) * C50738 + (C24730 + C24729) * C7895 +
             (C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                 C50842 +
             (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                 C7894) *
                C33658) *
               C50603 * C893) *
              C896 +
          ((((C49747 * C124 + C50814 * C131 + C49740 * C125 + C50543 * C132) *
                 C7894 +
             (C49747 * C135 + C50814 * C145 + C49740 * C136 + C50543 * C146) *
                 C50842 +
             (C25053 + C25054) * C7895 + (C25055 + C25056) * C50738) *
                C33658 +
            ((C28239 + C28240) * C7894 + (C28241 + C28242) * C50842 +
             (C28033 + C28034) * C7895 + (C28035 + C28036) * C50738) *
                C50764) *
               C50603 * C893 -
           (((C49740 * C1434 + C50543 * C1442 + C49747 * C1435 +
              C50814 * C1443) *
                 C50738 +
             (C49740 * C1430 + C50543 * C1438 + C49747 * C1431 +
              C50814 * C1439) *
                 C7895 +
             (C28036 + C28035) * C50842 + (C28034 + C28033) * C7894) *
                C50764 +
            ((C25060 + C25059) * C50738 + (C25058 + C25057) * C7895 +
             (C25056 + C25055) * C50842 + (C25054 + C25053) * C7894) *
                C33658) *
               C50603 * C50639) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C7894 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C50842 +
             (C24717 + C24718) * C7895 + (C24719 + C24720) * C50738) *
                C33658 +
            ((C27811 + C27812) * C7894 + (C27813 + C27814) * C50842 +
             C28501 * C7895 + C28502 * C50738) *
                C50764) *
               C391 -
           ((C29027 * C50738 + C29028 * C7895 + (C27815 + C27816) * C50842 +
             (C27817 + C27818) * C7894) *
                C50764 +
            (C28503 * C50738 + C28504 * C7895 + (C27814 + C27813) * C50842 +
             (C27812 + C27811) * C7894) *
                C33658) *
               C392 +
           (((C27818 + C27817) * C7894 + (C27816 + C27815) * C50842 +
             C29029 * C7895 + C29030 * C50738) *
                C33658 +
            ((C30217 + C30218) * C7894 + (C30219 + C30220) * C50842 +
             (C29039 + C29040) * C7895 + (C29041 + C29042) * C50738) *
                C50764) *
               C393) *
              C893 +
          (((C28501 * C7894 + C28502 * C50842 + C29689 * C7895 +
             C29690 * C50738) *
                C33658 +
            (C29029 * C7894 + C29030 * C50842 + (C25873 + C25874) * C7895 +
             (C25875 + C25876) * C50738) *
                C50764) *
               C392 -
           ((C26363 * C50738 + C26364 * C7895 + C28503 * C50842 +
             C28504 * C7894) *
                C50764 +
            ((C24724 + C24723) * C50738 + (C24722 + C24721) * C7895 +
             (C24720 + C24719) * C50842 + (C24718 + C24717) * C7894) *
                C33658) *
               C391 -
           (((C49740 * C4475 + C50543 * C4483 + C49747 * C4476 +
              C50814 * C4484) *
                 C50738 +
             (C49740 * C4471 + C50543 * C4477 + C49747 * C4472 +
              C50814 * C4478) *
                 C7895 +
             (C29042 + C29041) * C50842 + (C29040 + C29039) * C7894) *
                C50764 +
            ((C25876 + C25875) * C50738 + (C25874 + C25873) * C7895 +
             C29027 * C50842 + C29028 * C7894) *
                C33658) *
               C393) *
              C50639) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[158] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                  C7894 +
              (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                  C50842 +
              (C24717 + C24718) * C7895 + (C24719 + C24720) * C50738) *
                 C33658 +
             ((C27811 + C27812) * C7894 + (C27813 + C27814) * C50842 +
              C28501 * C7895 + C28502 * C50738) *
                 C50764) *
                C50830 -
            ((C29027 * C50738 + C29028 * C7895 + (C27815 + C27816) * C50842 +
              (C27817 + C27818) * C7894) *
                 C50764 +
             (C28503 * C50738 + C28504 * C7895 + (C27814 + C27813) * C50842 +
              (C27812 + C27811) * C7894) *
                 C33658) *
                C50667) *
               C893 +
           (((C28501 * C7894 + C28502 * C50842 + C29689 * C7895 +
              C29690 * C50738) *
                 C33658 +
             (C29029 * C7894 + C29030 * C50842 + (C25873 + C25874) * C7895 +
              (C25875 + C25876) * C50738) *
                 C50764) *
                C50667 -
            ((C26363 * C50738 + C26364 * C7895 + C28503 * C50842 +
              C28504 * C7894) *
                 C50764 +
             ((C24724 + C24723) * C50738 + (C24722 + C24721) * C7895 +
              (C24720 + C24719) * C50842 + (C24718 + C24717) * C7894) *
                 C33658) *
                C50830) *
               C50639) *
              C50821 +
          (((((C27819 + C27820) * C7894 + (C27821 + C27822) * C50842 +
              C28505 * C7895 + C28506 * C50738) *
                 C33658 +
             ((C27823 + C27824) * C7894 + (C27825 + C27826) * C50842 +
              (C27827 + C27828) * C7895 + (C27829 + C27830) * C50738) *
                 C50764) *
                C50667 -
            ((C28507 * C50738 + C28508 * C7895 + (C27822 + C27821) * C50842 +
              (C27820 + C27819) * C7894) *
                 C50764 +
             ((C24732 + C24731) * C50738 + (C24730 + C24729) * C7895 +
              (C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                  C50842 +
              (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                  C7894) *
                 C33658) *
                C50830) *
               C893 +
           ((((C24729 + C24730) * C7894 + (C24731 + C24732) * C50842 +
              (C24733 + C24734) * C7895 + (C24735 + C24736) * C50738) *
                 C33658 +
             (C28505 * C7894 + C28506 * C50842 + (C25445 + C25446) * C7895 +
              (C25447 + C25448) * C50738) *
                 C50764) *
                C50830 -
            (((C49740 * C2554 + C50543 * C2558 + C49747 * C2553 +
               C50814 * C2557) *
                  C50738 +
              (C49740 * C2549 + C50543 * C2555 + C49747 * C2548 +
               C50814 * C2551) *
                  C7895 +
              (C27830 + C27829) * C50842 + (C27828 + C27827) * C7894) *
                 C50764 +
             ((C25448 + C25447) * C50738 + (C25446 + C25445) * C7895 +
              C28507 * C50842 + C28508 * C7894) *
                 C33658) *
                C50667) *
               C50639) *
              C50574)) /
        (p * q * std::sqrt(p + q));
    d2ee[159] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C7894 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C50842 +
             (C24717 + C24718) * C7895 + (C24719 + C24720) * C50738) *
                C33658 +
            ((C27811 + C27812) * C7894 + (C27813 + C27814) * C50842 +
             C28501 * C7895 + C28502 * C50738) *
                C50764) *
               C50603 * C893 -
           ((C26363 * C50738 + C26364 * C7895 + C28503 * C50842 +
             C28504 * C7894) *
                C50764 +
            ((C24724 + C24723) * C50738 + (C24722 + C24721) * C7895 +
             (C24720 + C24719) * C50842 + (C24718 + C24717) * C7894) *
                C33658) *
               C50603 * C50639) *
              C895 +
          ((((C24729 + C24730) * C7894 + (C24731 + C24732) * C50842 +
             (C24733 + C24734) * C7895 + (C24735 + C24736) * C50738) *
                C33658 +
            (C28505 * C7894 + C28506 * C50842 + (C25445 + C25446) * C7895 +
             (C25447 + C25448) * C50738) *
                C50764) *
               C50603 * C50639 -
           ((C28507 * C50738 + C28508 * C7895 + (C27822 + C27821) * C50842 +
             (C27820 + C27819) * C7894) *
                C50764 +
            ((C24732 + C24731) * C50738 + (C24730 + C24729) * C7895 +
             (C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                 C50842 +
             (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                 C7894) *
                C33658) *
               C50603 * C893) *
              C896 +
          ((((C49747 * C124 + C50814 * C131 + C49740 * C125 + C50543 * C132) *
                 C7894 +
             (C49747 * C135 + C50814 * C145 + C49740 * C136 + C50543 * C146) *
                 C50842 +
             (C25053 + C25054) * C7895 + (C25055 + C25056) * C50738) *
                C33658 +
            ((C28239 + C28240) * C7894 + (C28241 + C28242) * C50842 +
             (C28033 + C28034) * C7895 + (C28035 + C28036) * C50738) *
                C50764) *
               C50603 * C893 -
           (((C49740 * C1434 + C50543 * C1442 + C49747 * C1435 +
              C50814 * C1443) *
                 C50738 +
             (C49740 * C1430 + C50543 * C1438 + C49747 * C1431 +
              C50814 * C1439) *
                 C7895 +
             (C28036 + C28035) * C50842 + (C28034 + C28033) * C7894) *
                C50764 +
            ((C25060 + C25059) * C50738 + (C25058 + C25057) * C7895 +
             (C25056 + C25055) * C50842 + (C25054 + C25053) * C7894) *
                C33658) *
               C50603 * C50639) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                C7894 +
            (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                C50842 +
            (C24717 + C24718) * C7895 + (C24719 + C24720) * C50738) *
               C33658 +
           ((C27811 + C27812) * C7894 + (C27813 + C27814) * C50842 +
            C28501 * C7895 + C28502 * C50738) *
               C50764) *
              C50603 * C964 -
          ((C26363 * C50738 + C26364 * C7895 + C28503 * C50842 +
            C28504 * C7894) *
               C50764 +
           ((C24724 + C24723) * C50738 + (C24722 + C24721) * C7895 +
            (C24720 + C24719) * C50842 + (C24718 + C24717) * C7894) *
               C33658) *
              C50603 * C965 +
          ((C24741 * C7894 + C24742 * C50842 + (C24728 + C24727) * C7895 +
            (C24726 + C24725) * C50738) *
               C33658 +
           (C29689 * C7894 + C29690 * C50842 + (C26373 + C26374) * C7895 +
            (C26375 + C26376) * C50738) *
               C50764) *
              C50603 * C966 -
          (((C49740 * C4061 + C50543 * C4065 + C49747 * C4062 +
             C50814 * C4066) *
                C50738 +
            (C49740 * C4059 + C50543 * C4063 + C49747 * C4060 +
             C50814 * C4064) *
                C7895 +
            (C26376 + C26375) * C50842 + (C26374 + C26373) * C7894) *
               C50764 +
           ((C25706 + C25705) * C50738 + (C25704 + C25703) * C7895 +
            C25693 * C50842 + C25694 * C7894) *
               C33658) *
              C50603 * C967) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[160] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                  C7894 +
              (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                  C50842 +
              (C24717 + C24718) * C7895 + (C24719 + C24720) * C50738) *
                 C33658 +
             ((C27811 + C27812) * C7894 + (C27813 + C27814) * C50842 +
              C28501 * C7895 + C28502 * C50738) *
                 C50764) *
                C1544 -
            ((C29027 * C50738 + C29028 * C7895 + (C27815 + C27816) * C50842 +
              (C27817 + C27818) * C7894) *
                 C50764 +
             (C28503 * C50738 + C28504 * C7895 + (C27814 + C27813) * C50842 +
              (C27812 + C27811) * C7894) *
                 C33658) *
                C50667) *
               C50829 +
           (((C28501 * C7894 + C28502 * C50842 + C29689 * C7895 +
              C29690 * C50738) *
                 C33658 +
             (C29029 * C7894 + C29030 * C50842 + (C25873 + C25874) * C7895 +
              (C25875 + C25876) * C50738) *
                 C50764) *
                C50667 -
            ((C26363 * C50738 + C26364 * C7895 + C28503 * C50842 +
              C28504 * C7894) *
                 C50764 +
             ((C24724 + C24723) * C50738 + (C24722 + C24721) * C7895 +
              (C24720 + C24719) * C50842 + (C24718 + C24717) * C7894) *
                 C33658) *
                C1544) *
               C50639) *
              C50821 +
          (((((C27819 + C27820) * C7894 + (C27821 + C27822) * C50842 +
              C28505 * C7895 + C28506 * C50738) *
                 C33658 +
             ((C27823 + C27824) * C7894 + (C27825 + C27826) * C50842 +
              (C27827 + C27828) * C7895 + (C27829 + C27830) * C50738) *
                 C50764) *
                C50667 -
            ((C28507 * C50738 + C28508 * C7895 + (C27822 + C27821) * C50842 +
              (C27820 + C27819) * C7894) *
                 C50764 +
             ((C24732 + C24731) * C50738 + (C24730 + C24729) * C7895 +
              (C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                  C50842 +
              (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                  C7894) *
                 C33658) *
                C1544) *
               C50829 +
           ((((C24729 + C24730) * C7894 + (C24731 + C24732) * C50842 +
              (C24733 + C24734) * C7895 + (C24735 + C24736) * C50738) *
                 C33658 +
             (C28505 * C7894 + C28506 * C50842 + (C25445 + C25446) * C7895 +
              (C25447 + C25448) * C50738) *
                 C50764) *
                C1544 -
            (((C49740 * C2554 + C50543 * C2558 + C49747 * C2553 +
               C50814 * C2557) *
                  C50738 +
              (C49740 * C2549 + C50543 * C2555 + C49747 * C2548 +
               C50814 * C2551) *
                  C7895 +
              (C27830 + C27829) * C50842 + (C27828 + C27827) * C7894) *
                 C50764 +
             ((C25448 + C25447) * C50738 + (C25446 + C25445) * C7895 +
              C28507 * C50842 + C28508 * C7894) *
                 C33658) *
                C50667) *
               C50639) *
              C50574)) /
        (p * q * std::sqrt(p + q));
    d2ee[161] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C7894 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C50842 +
             (C24717 + C24718) * C7895 + (C24719 + C24720) * C50738) *
                C33658 +
            ((C27811 + C27812) * C7894 + (C27813 + C27814) * C50842 +
             C28501 * C7895 + C28502 * C50738) *
                C50764) *
               C50876 -
           ((C29027 * C50738 + C29028 * C7895 + (C27815 + C27816) * C50842 +
             (C27817 + C27818) * C7894) *
                C50764 +
            (C28503 * C50738 + C28504 * C7895 + (C27814 + C27813) * C50842 +
             (C27812 + C27811) * C7894) *
                C33658) *
               C50877 +
           (((C27818 + C27817) * C7894 + (C27816 + C27815) * C50842 +
             C29029 * C7895 + C29030 * C50738) *
                C33658 +
            ((C30217 + C30218) * C7894 + (C30219 + C30220) * C50842 +
             (C29039 + C29040) * C7895 + (C29041 + C29042) * C50738) *
                C50764) *
               C1960) *
              C50829 +
          (((C28501 * C7894 + C28502 * C50842 + C29689 * C7895 +
             C29690 * C50738) *
                C33658 +
            (C29029 * C7894 + C29030 * C50842 + (C25873 + C25874) * C7895 +
             (C25875 + C25876) * C50738) *
                C50764) *
               C50877 -
           ((C26363 * C50738 + C26364 * C7895 + C28503 * C50842 +
             C28504 * C7894) *
                C50764 +
            ((C24724 + C24723) * C50738 + (C24722 + C24721) * C7895 +
             (C24720 + C24719) * C50842 + (C24718 + C24717) * C7894) *
                C33658) *
               C50876 -
           (((C49740 * C4475 + C50543 * C4483 + C49747 * C4476 +
              C50814 * C4484) *
                 C50738 +
             (C49740 * C4471 + C50543 * C4477 + C49747 * C4472 +
              C50814 * C4478) *
                 C7895 +
             (C29042 + C29041) * C50842 + (C29040 + C29039) * C7894) *
                C50764 +
            ((C25876 + C25875) * C50738 + (C25874 + C25873) * C7895 +
             C29027 * C50842 + C29028 * C7894) *
                C33658) *
               C1960) *
              C50639) *
         C50568) /
        (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C7894 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C50842 +
             (C24717 + C24718) * C7895 + (C24719 + C24720) * C50738) *
                C33658 +
            ((C27811 + C27812) * C7894 + (C27813 + C27814) * C50842 +
             C28501 * C7895 + C28502 * C50738) *
                C50764) *
               C1544 -
           ((C29027 * C50738 + C29028 * C7895 + (C27815 + C27816) * C50842 +
             (C27817 + C27818) * C7894) *
                C50764 +
            (C28503 * C50738 + C28504 * C7895 + (C27814 + C27813) * C50842 +
             (C27812 + C27811) * C7894) *
                C33658) *
               C50667) *
              C248 +
          (((C28501 * C7894 + C28502 * C50842 + C29689 * C7895 +
             C29690 * C50738) *
                C33658 +
            (C29029 * C7894 + C29030 * C50842 + (C25873 + C25874) * C7895 +
             (C25875 + C25876) * C50738) *
                C50764) *
               C50667 -
           ((C26363 * C50738 + C26364 * C7895 + C28503 * C50842 +
             C28504 * C7894) *
                C50764 +
            ((C24724 + C24723) * C50738 + (C24722 + C24721) * C7895 +
             (C24720 + C24719) * C50842 + (C24718 + C24717) * C7894) *
                C33658) *
               C1544) *
              C249 +
          (((C24741 * C7894 + C24742 * C50842 + (C24728 + C24727) * C7895 +
             (C24726 + C24725) * C50738) *
                C33658 +
            (C29689 * C7894 + C29690 * C50842 + (C26373 + C26374) * C7895 +
             (C26375 + C26376) * C50738) *
                C50764) *
               C1544 -
           (((C49740 * C3543 + C50543 * C3547 + C49747 * C3544 +
              C50814 * C3548) *
                 C50738 +
             (C49740 * C3541 + C50543 * C3545 + C49747 * C3542 +
              C50814 * C3546) *
                 C7895 +
             (C25876 + C25875) * C50842 + (C25874 + C25873) * C7894) *
                C50764 +
            ((C26376 + C26375) * C50738 + (C26374 + C26373) * C7895 +
             C26363 * C50842 + C26364 * C7894) *
                C33658) *
               C50667) *
              C250) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C7894 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C50842 +
             (C24717 + C24718) * C7895 + (C24719 + C24720) * C50738) *
                C33658 +
            ((C27811 + C27812) * C7894 + (C27813 + C27814) * C50842 +
             C28501 * C7895 + C28502 * C50738) *
                C50764) *
               C1544 -
           ((C29027 * C50738 + C29028 * C7895 + (C27815 + C27816) * C50842 +
             (C27817 + C27818) * C7894) *
                C50764 +
            (C28503 * C50738 + C28504 * C7895 + (C27814 + C27813) * C50842 +
             (C27812 + C27811) * C7894) *
                C33658) *
               C50667) *
              C50587 * C895 +
          ((((C27819 + C27820) * C7894 + (C27821 + C27822) * C50842 +
             C28505 * C7895 + C28506 * C50738) *
                C33658 +
            ((C27823 + C27824) * C7894 + (C27825 + C27826) * C50842 +
             (C27827 + C27828) * C7895 + (C27829 + C27830) * C50738) *
                C50764) *
               C50667 -
           ((C28507 * C50738 + C28508 * C7895 + (C27822 + C27821) * C50842 +
             (C27820 + C27819) * C7894) *
                C50764 +
            ((C24732 + C24731) * C50738 + (C24730 + C24729) * C7895 +
             (C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                 C50842 +
             (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                 C7894) *
                C33658) *
               C1544) *
              C50587 * C896 +
          ((((C49747 * C124 + C50814 * C131 + C49740 * C125 + C50543 * C132) *
                 C7894 +
             (C49747 * C135 + C50814 * C145 + C49740 * C136 + C50543 * C146) *
                 C50842 +
             (C25053 + C25054) * C7895 + (C25055 + C25056) * C50738) *
                C33658 +
            ((C28239 + C28240) * C7894 + (C28241 + C28242) * C50842 +
             (C28033 + C28034) * C7895 + (C28035 + C28036) * C50738) *
                C50764) *
               C1544 -
           (((C49740 * C1087 + C50543 * C1095 + C49747 * C1088 +
              C50814 * C1096) *
                 C50738 +
             (C49740 * C1083 + C50543 * C1091 + C49747 * C1084 +
              C50814 * C1092) *
                 C7895 +
             (C49740 * C419 + C50543 * C431 + C49747 * C418 + C50814 * C430) *
                 C50842 +
             (C49740 * C401 + C50543 * C415 + C49747 * C400 + C50814 * C414) *
                 C7894) *
                C50764 +
            ((C28036 + C28035) * C50738 + (C28034 + C28033) * C7895 +
             (C28242 + C28241) * C50842 + (C28240 + C28239) * C7894) *
                C33658) *
               C50667) *
              C50587 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                C7894 +
            (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                C50842 +
            (C24717 + C24718) * C7895 + (C24719 + C24720) * C50738) *
               C33658 +
           ((C27811 + C27812) * C7894 + (C27813 + C27814) * C50842 +
            C28501 * C7895 + C28502 * C50738) *
               C50764) *
              C1710 -
          ((C29027 * C50738 + C29028 * C7895 + (C27815 + C27816) * C50842 +
            (C27817 + C27818) * C7894) *
               C50764 +
           (C28503 * C50738 + C28504 * C7895 + (C27814 + C27813) * C50842 +
            (C27812 + C27811) * C7894) *
               C33658) *
              C1711 +
          (((C27818 + C27817) * C7894 + (C27816 + C27815) * C50842 +
            C29029 * C7895 + C29030 * C50738) *
               C33658 +
           ((C30217 + C30218) * C7894 + (C30219 + C30220) * C50842 +
            (C29039 + C29040) * C7895 + (C29041 + C29042) * C50738) *
               C50764) *
              C1712 -
          (((C49740 * C6378 + C50543 * C6382 + C49747 * C6379 +
             C50814 * C6383) *
                C50738 +
            (C49740 * C6376 + C50543 * C6380 + C49747 * C6377 +
             C50814 * C6381) *
                C7895 +
            (C49740 * C5372 + C50543 * C5376 + C49747 * C5371 +
             C50814 * C5375) *
                C50842 +
            (C49740 * C5367 + C50543 * C5370 + C49747 * C5366 +
             C50814 * C5369) *
                C7894) *
               C50764 +
           ((C29042 + C29041) * C50738 + (C29040 + C29039) * C7895 +
            (C30220 + C30219) * C50842 + (C30218 + C30217) * C7894) *
               C33658) *
              C1713) *
         C50587 * C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[163] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C7894 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C50842 +
             (C24717 + C24718) * C7895 + (C24719 + C24720) * C50738) *
                C33658 +
            ((C27811 + C27812) * C7894 + (C27813 + C27814) * C50842 +
             C28501 * C7895 + C28502 * C50738) *
                C50764) *
               C50876 -
           ((C29027 * C50738 + C29028 * C7895 + (C27815 + C27816) * C50842 +
             (C27817 + C27818) * C7894) *
                C50764 +
            (C28503 * C50738 + C28504 * C7895 + (C27814 + C27813) * C50842 +
             (C27812 + C27811) * C7894) *
                C33658) *
               C50877 +
           (((C27818 + C27817) * C7894 + (C27816 + C27815) * C50842 +
             C29029 * C7895 + C29030 * C50738) *
                C33658 +
            ((C30217 + C30218) * C7894 + (C30219 + C30220) * C50842 +
             (C29039 + C29040) * C7895 + (C29041 + C29042) * C50738) *
                C50764) *
               C1960) *
              C50587 * C50821 +
          ((((C27819 + C27820) * C7894 + (C27821 + C27822) * C50842 +
             C28505 * C7895 + C28506 * C50738) *
                C33658 +
            ((C27823 + C27824) * C7894 + (C27825 + C27826) * C50842 +
             (C27827 + C27828) * C7895 + (C27829 + C27830) * C50738) *
                C50764) *
               C50877 -
           ((C28507 * C50738 + C28508 * C7895 + (C27822 + C27821) * C50842 +
             (C27820 + C27819) * C7894) *
                C50764 +
            ((C24732 + C24731) * C50738 + (C24730 + C24729) * C7895 +
             (C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                 C50842 +
             (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                 C7894) *
                C33658) *
               C50876 -
           (((C49740 * C5971 + C50543 * C5973 + C49747 * C4479 +
              C50814 * C4485) *
                 C50738 +
             (C49740 * C5970 + C50543 * C5972 + C49747 * C4473 +
              C50814 * C4481) *
                 C7895 +
             (C49740 * C1719 + C50543 * C1727 + C49747 * C1720 +
              C50814 * C1728) *
                 C50842 +
             (C49740 * C1715 + C50543 * C1723 + C49747 * C1716 +
              C50814 * C1724) *
                 C7894) *
                C50764 +
            ((C27830 + C27829) * C50738 + (C27828 + C27827) * C7895 +
             (C27826 + C27825) * C50842 + (C27824 + C27823) * C7894) *
                C33658) *
               C1960) *
              C50587 * C50574)) /
        (p * q * std::sqrt(p + q));
    d2ee[164] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C7894 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C50842 +
             (C24717 + C24718) * C7895 + (C24719 + C24720) * C50738) *
                C33658 +
            ((C27811 + C27812) * C7894 + (C27813 + C27814) * C50842 +
             C28501 * C7895 + C28502 * C50738) *
                C50764) *
               C1544 -
           ((C29027 * C50738 + C29028 * C7895 + (C27815 + C27816) * C50842 +
             (C27817 + C27818) * C7894) *
                C50764 +
            (C28503 * C50738 + C28504 * C7895 + (C27814 + C27813) * C50842 +
             (C27812 + C27811) * C7894) *
                C33658) *
               C50667) *
              C50587 * C895 +
          ((((C27819 + C27820) * C7894 + (C27821 + C27822) * C50842 +
             C28505 * C7895 + C28506 * C50738) *
                C33658 +
            ((C27823 + C27824) * C7894 + (C27825 + C27826) * C50842 +
             (C27827 + C27828) * C7895 + (C27829 + C27830) * C50738) *
                C50764) *
               C50667 -
           ((C28507 * C50738 + C28508 * C7895 + (C27822 + C27821) * C50842 +
             (C27820 + C27819) * C7894) *
                C50764 +
            ((C24732 + C24731) * C50738 + (C24730 + C24729) * C7895 +
             (C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                 C50842 +
             (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                 C7894) *
                C33658) *
               C1544) *
              C50587 * C896 +
          ((((C49747 * C124 + C50814 * C131 + C49740 * C125 + C50543 * C132) *
                 C7894 +
             (C49747 * C135 + C50814 * C145 + C49740 * C136 + C50543 * C146) *
                 C50842 +
             (C25053 + C25054) * C7895 + (C25055 + C25056) * C50738) *
                C33658 +
            ((C28239 + C28240) * C7894 + (C28241 + C28242) * C50842 +
             (C28033 + C28034) * C7895 + (C28035 + C28036) * C50738) *
                C50764) *
               C1544 -
           (((C49740 * C1087 + C50543 * C1095 + C49747 * C1088 +
              C50814 * C1096) *
                 C50738 +
             (C49740 * C1083 + C50543 * C1091 + C49747 * C1084 +
              C50814 * C1092) *
                 C7895 +
             (C49740 * C419 + C50543 * C431 + C49747 * C418 + C50814 * C430) *
                 C50842 +
             (C49740 * C401 + C50543 * C415 + C49747 * C400 + C50814 * C414) *
                 C7894) *
                C50764 +
            ((C28036 + C28035) * C50738 + (C28034 + C28033) * C7895 +
             (C28242 + C28241) * C50842 + (C28240 + C28239) * C7894) *
                C33658) *
               C50667) *
              C50587 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C7894 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C50842 +
             (C24717 + C24718) * C7895 + (C24719 + C24720) * C50738) *
                C33658 +
            ((C27811 + C27812) * C7894 + (C27813 + C27814) * C50842 +
             C28501 * C7895 + C28502 * C50738) *
                C50764) *
               C1544 -
           ((C29027 * C50738 + C29028 * C7895 + (C27815 + C27816) * C50842 +
             (C27817 + C27818) * C7894) *
                C50764 +
            (C28503 * C50738 + C28504 * C7895 + (C27814 + C27813) * C50842 +
             (C27812 + C27811) * C7894) *
                C33658) *
               C50667) *
              C248 +
          (((C28501 * C7894 + C28502 * C50842 + C29689 * C7895 +
             C29690 * C50738) *
                C33658 +
            (C29029 * C7894 + C29030 * C50842 + (C25873 + C25874) * C7895 +
             (C25875 + C25876) * C50738) *
                C50764) *
               C50667 -
           ((C26363 * C50738 + C26364 * C7895 + C28503 * C50842 +
             C28504 * C7894) *
                C50764 +
            ((C24724 + C24723) * C50738 + (C24722 + C24721) * C7895 +
             (C24720 + C24719) * C50842 + (C24718 + C24717) * C7894) *
                C33658) *
               C1544) *
              C249 +
          (((C24741 * C7894 + C24742 * C50842 + (C24728 + C24727) * C7895 +
             (C24726 + C24725) * C50738) *
                C33658 +
            (C29689 * C7894 + C29690 * C50842 + (C26373 + C26374) * C7895 +
             (C26375 + C26376) * C50738) *
                C50764) *
               C1544 -
           (((C49740 * C3543 + C50543 * C3547 + C49747 * C3544 +
              C50814 * C3548) *
                 C50738 +
             (C49740 * C3541 + C50543 * C3545 + C49747 * C3542 +
              C50814 * C3546) *
                 C7895 +
             (C25876 + C25875) * C50842 + (C25874 + C25873) * C7894) *
                C50764 +
            ((C26376 + C26375) * C50738 + (C26374 + C26373) * C7895 +
             C26363 * C50842 + C26364 * C7894) *
                C33658) *
               C50667) *
              C250) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[165] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C7894 +
             (C19749 * C133 + C50538 * C143) * C50842 + C19885 * C7895 +
             C19886 * C50738) *
                C50880 +
            (C47396 + C47397 + C47398 + C47399) * C50881 + C47424 * C44420) *
               C50603 * C50829 -
           ((C20670 * C50738 + C20669 * C7895 + C20668 * C50842 +
             C20667 * C7894) *
                C44420 +
            (C20369 * C50738 + C20370 * C7895 + C20371 * C50842 +
             C20372 * C7894) *
                C50881 +
            (C19888 * C50738 + C19887 * C7895 + C19886 * C50842 +
             C19885 * C7894) *
                C50880) *
               C50603 * C50639) *
              C50872 +
          (((C19893 * C7894 + C19894 * C50842 + C19895 * C7895 +
             C19896 * C50738) *
                C50880 +
            (C20373 * C7894 + C20374 * C50842 + C20375 * C7895 +
             C20376 * C50738) *
                C50881 +
            (C21853 * C7894 + C21854 * C50842 + C21855 * C7895 +
             C21856 * C50738) *
                C44420) *
               C50603 * C50639 -
           (C47425 * C44420 + (C47411 + C47410 + C47409 + C47408) * C50881 +
            (C19894 * C50738 + C19893 * C7895 +
             (C19749 * C134 + C50538 * C144) * C50842 +
             (C19749 * C123 + C50538 * C130) * C7894) *
                C50880) *
               C50603 * C50829) *
              C50873 +
          ((((C19749 * C124 + C50538 * C131) * C7894 +
             (C19749 * C135 + C50538 * C145) * C50842 + C20109 * C7895 +
             C20110 * C50738) *
                C50880 +
            (C22397 * C7894 + C22398 * C50842 + C22235 * C7895 +
             C22236 * C50738) *
                C50881 +
            (C22399 * C7894 + C22400 * C50842 + C22237 * C7895 +
             C22238 * C50738) *
                C44420) *
               C50603 * C50829 -
           (((C19749 * C2554 + C50538 * C2558) * C50738 +
             (C19749 * C2549 + C50538 * C2555) * C7895 + C22238 * C50842 +
             C22237 * C7894) *
                C44420 +
            (C31432 * C50738 + C31431 * C7895 + C22236 * C50842 +
             C22235 * C7894) *
                C50881 +
            (C20112 * C50738 + C20111 * C7895 + C20110 * C50842 +
             C20109 * C7894) *
                C50880) *
               C50603 * C50639) *
              C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[166] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19749 * C122 + C50538 * C129) * C7894 +
              (C19749 * C133 + C50538 * C143) * C50842 + C19885 * C7895 +
              C19886 * C50738) *
                 C50880 +
             (C47396 + C47397 + C47398 + C47399) * C50881 + C47424 * C44420) *
                C50830 -
            ((C47404 + C47405 + C47406 + C47407) * C44420 +
             (C47403 + C47402 + C47401 + C47400) * C50881 +
             (C47399 + C47398 + C47397 + C47396) * C50880) *
                C50667) *
               C50829 +
           (((C47920 + C47921 + C47922 + C47923) * C50880 +
             (C47924 + C47925 + C47926 + C47927) * C50881 +
             (C22048 * C7894 + C22047 * C50842 + C23022 * C7895 +
              C23023 * C50738) *
                 C44420) *
                C50667 -
            ((C47927 + C47926 + C47925 + C47924) * C44420 +
             (C47923 + C47922 + C47921 + C47920) * C50881 +
             (C19888 * C50738 + C19887 * C7895 + C19886 * C50842 +
              C19885 * C7894) *
                 C50880) *
                C50830) *
               C50639) *
              C251 +
          ((((C47408 + C47409 + C47410 + C47411) * C50880 +
             (C47412 + C47413 + C47414 + C47415) * C50881 +
             (C47416 + C47417 + C47418 + C47419) * C44420) *
                C50667 -
            (C47425 * C44420 + (C47411 + C47410 + C47409 + C47408) * C50881 +
             (C19894 * C50738 + C19893 * C7895 +
              (C19749 * C134 + C50538 * C144) * C50842 +
              (C19749 * C123 + C50538 * C130) * C7894) *
                 C50880) *
                C50830) *
               C50829 +
           (((C19893 * C7894 + C19894 * C50842 + C19895 * C7895 +
              C19896 * C50738) *
                 C50880 +
             (C47928 + C47929 + C47930 + C47931) * C50881 +
             (C47932 + C47933 + C47934 + C47935) * C44420) *
                C50830 -
            (((C19749 * C4475 + C50538 * C4483) * C50738 +
              (C19749 * C4471 + C50538 * C4477) * C7895 + C22058 * C50842 +
              C22057 * C7894) *
                 C44420 +
             (C47935 + C47934 + C47933 + C47932) * C50881 +
             (C47931 + C47930 + C47929 + C47928) * C50880) *
                C50667) *
               C50639) *
              C50574)) /
        (p * q * std::sqrt(p + q));
    d2ee[167] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C7894 +
             (C19749 * C133 + C50538 * C143) * C50842 + C19885 * C7895 +
             C19886 * C50738) *
                C50880 +
            (C22043 * C7894 + C22044 * C50842 + C20372 * C7895 +
             C20371 * C50738) *
                C50881 +
            (C22045 * C7894 + C22046 * C50842 + C20667 * C7895 +
             C20668 * C50738) *
                C44420) *
               C50603 * C248 -
           ((C20670 * C50738 + C20669 * C7895 + C20668 * C50842 +
             C20667 * C7894) *
                C44420 +
            (C20369 * C50738 + C20370 * C7895 + C20371 * C50842 +
             C20372 * C7894) *
                C50881 +
            (C19888 * C50738 + C19887 * C7895 + C19886 * C50842 +
             C19885 * C7894) *
                C50880) *
               C50603 * C249 +
           ((C19887 * C7894 + C19888 * C50842 + C19889 * C7895 +
             C19890 * C50738) *
                C50880 +
            (C20370 * C7894 + C20369 * C50842 + C20368 * C7895 +
             C20367 * C50738) *
                C50881 +
            (C20669 * C7894 + C20670 * C50842 + C20671 * C7895 +
             C20672 * C50738) *
                C44420) *
               C50603 * C250) *
              C251 +
          (((C19893 * C7894 + C19894 * C50842 + C19895 * C7895 +
             C19896 * C50738) *
                C50880 +
            (C20373 * C7894 + C20374 * C50842 + C20375 * C7895 +
             C20376 * C50738) *
                C50881 +
            (C21853 * C7894 + C21854 * C50842 + C21855 * C7895 +
             C21856 * C50738) *
                C44420) *
               C50603 * C249 -
           ((C21854 * C50738 + C21853 * C7895 + C22054 * C50842 +
             C22053 * C7894) *
                C44420 +
            (C20374 * C50738 + C20373 * C7895 + C22052 * C50842 +
             C22051 * C7894) *
                C50881 +
            (C19894 * C50738 + C19893 * C7895 +
             (C19749 * C134 + C50538 * C144) * C50842 +
             (C19749 * C123 + C50538 * C130) * C7894) *
                C50880) *
               C50603 * C248 -
           (((C19749 * C3543 + C50538 * C3547) * C50738 +
             (C19749 * C3541 + C50538 * C3545) * C7895 + C21856 * C50842 +
             C21855 * C7894) *
                C44420 +
            (C20378 * C50738 + C20377 * C7895 + C20376 * C50842 +
             C20375 * C7894) *
                C50881 +
            (C19898 * C50738 + C19897 * C7895 + C19896 * C50842 +
             C19895 * C7894) *
                C50880) *
               C50603 * C250) *
              C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19749 * C122 + C50538 * C129) * C7894 +
            (C19749 * C133 + C50538 * C143) * C50842 + C19885 * C7895 +
            C19886 * C50738) *
               C50880 +
           (C22043 * C7894 + C22044 * C50842 + C20372 * C7895 +
            C20371 * C50738) *
               C50881 +
           (C22045 * C7894 + C22046 * C50842 + C20667 * C7895 +
            C20668 * C50738) *
               C44420) *
              C50603 * C50587 * C113 -
          ((C21854 * C50738 + C21853 * C7895 + C22054 * C50842 +
            C22053 * C7894) *
               C44420 +
           (C20374 * C50738 + C20373 * C7895 + C22052 * C50842 +
            C22051 * C7894) *
               C50881 +
           (C19894 * C50738 + C19893 * C7895 +
            (C19749 * C134 + C50538 * C144) * C50842 +
            (C19749 * C123 + C50538 * C130) * C7894) *
               C50880) *
              C50603 * C50587 * C114 +
          (((C19749 * C124 + C50538 * C131) * C7894 +
            (C19749 * C135 + C50538 * C145) * C50842 + C20109 * C7895 +
            C20110 * C50738) *
               C50880 +
           (C22397 * C7894 + C22398 * C50842 + C22235 * C7895 +
            C22236 * C50738) *
               C50881 +
           (C22399 * C7894 + C22400 * C50842 + C22237 * C7895 +
            C22238 * C50738) *
               C44420) *
              C50603 * C50587 * C115 -
          (((C19749 * C1087 + C50538 * C1095) * C50738 +
            (C19749 * C1083 + C50538 * C1091) * C7895 +
            (C19749 * C419 + C50538 * C431) * C50842 +
            (C19749 * C401 + C50538 * C415) * C7894) *
               C44420 +
           ((C19749 * C787 + C50538 * C793) * C50738 +
            (C19749 * C778 + C50538 * C783) * C7895 +
            (C19749 * C404 + C50538 * C424) * C50842 +
            (C19749 * C394 + C50538 * C408) * C7894) *
               C50881 +
           ((C19749 * C263 + C50538 * C283) * C50738 +
            (C19749 * C253 + C50538 * C267) * C7895 +
            (C19749 * C136 + C50538 * C146) * C50842 +
            (C19749 * C125 + C50538 * C132) * C7894) *
               C50880) *
              C50603 * C50587 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C7894 +
             (C19749 * C133 + C50538 * C143) * C50842 + C19885 * C7895 +
             C19886 * C50738) *
                C50880 +
            (C47396 + C47397 + C47398 + C47399) * C50881 + C47424 * C44420) *
               C391 -
           ((C47404 + C47405 + C47406 + C47407) * C44420 +
            (C47403 + C47402 + C47401 + C47400) * C50881 +
            (C47399 + C47398 + C47397 + C47396) * C50880) *
               C392 +
           (C47424 * C50880 + (C47407 + C47406 + C47405 + C47404) * C50881 +
            (C23924 * C7894 + C23925 * C50842 + C23020 * C7895 +
             C23021 * C50738) *
                C44420) *
               C393) *
              C50587 * C251 +
          (((C47408 + C47409 + C47410 + C47411) * C50880 +
            (C47412 + C47413 + C47414 + C47415) * C50881 +
            (C47416 + C47417 + C47418 + C47419) * C44420) *
               C392 -
           (C47425 * C44420 + (C47411 + C47410 + C47409 + C47408) * C50881 +
            (C19894 * C50738 + C19893 * C7895 +
             (C19749 * C134 + C50538 * C144) * C50842 +
             (C19749 * C123 + C50538 * C130) * C7894) *
                C50880) *
               C391 -
           (((C19749 * C6378 + C50538 * C6382) * C50738 +
             (C19749 * C6376 + C50538 * C6380) * C7895 + C39274 * C50842 +
             C39273 * C7894) *
                C44420 +
            (C47419 + C47418 + C47417 + C47416) * C50881 + C47425 * C50880) *
               C393) *
              C50587 * C50574)) /
            (p * q * std::sqrt(p + q));
    d2ee[168] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C7894 +
             (C19749 * C133 + C50538 * C143) * C50842 + C19885 * C7895 +
             C19886 * C50738) *
                C50880 +
            (C47396 + C47397 + C47398 + C47399) * C50881 + C47424 * C44420) *
               C50830 -
           ((C47404 + C47405 + C47406 + C47407) * C44420 +
            (C47403 + C47402 + C47401 + C47400) * C50881 +
            (C47399 + C47398 + C47397 + C47396) * C50880) *
               C50667) *
              C50587 * C50872 +
          (((C47408 + C47409 + C47410 + C47411) * C50880 +
            (C47412 + C47413 + C47414 + C47415) * C50881 +
            (C47416 + C47417 + C47418 + C47419) * C44420) *
               C50667 -
           (C47425 * C44420 + (C47411 + C47410 + C47409 + C47408) * C50881 +
            (C19894 * C50738 + C19893 * C7895 +
             (C19749 * C134 + C50538 * C144) * C50842 +
             (C19749 * C123 + C50538 * C130) * C7894) *
                C50880) *
               C50830) *
              C50587 * C50873 +
          ((((C19749 * C124 + C50538 * C131) * C7894 +
             (C19749 * C135 + C50538 * C145) * C50842 + C20109 * C7895 +
             C20110 * C50738) *
                C50880 +
            (C47718 + C47719 + C47720 + C47721) * C50881 +
            (C47722 + C47723 + C47724 + C47725) * C44420) *
               C50830 -
           (((C19749 * C5971 + C50538 * C5973) * C50738 +
             (C19749 * C5970 + C50538 * C5972) * C7895 + C39484 * C50842 +
             C39483 * C7894) *
                C44420 +
            (C47725 + C47724 + C47723 + C47722) * C50881 +
            (C47721 + C47720 + C47719 + C47718) * C50880) *
               C50667) *
              C50587 * C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[169] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C19749 * C122 + C50538 * C129) * C7894 +
                     (C19749 * C133 + C50538 * C143) * C50842 + C19885 * C7895 +
                     C19886 * C50738) *
                        C50880 +
                    (C22043 * C7894 + C22044 * C50842 + C20372 * C7895 +
                     C20371 * C50738) *
                        C50881 +
                    (C22045 * C7894 + C22046 * C50842 + C20667 * C7895 +
                     C20668 * C50738) *
                        C44420) *
                       C50603 * C50587 * C113 -
                   ((C21854 * C50738 + C21853 * C7895 + C22054 * C50842 +
                     C22053 * C7894) *
                        C44420 +
                    (C20374 * C50738 + C20373 * C7895 + C22052 * C50842 +
                     C22051 * C7894) *
                        C50881 +
                    (C19894 * C50738 + C19893 * C7895 +
                     (C19749 * C134 + C50538 * C144) * C50842 +
                     (C19749 * C123 + C50538 * C130) * C7894) *
                        C50880) *
                       C50603 * C50587 * C114 +
                   (((C19749 * C124 + C50538 * C131) * C7894 +
                     (C19749 * C135 + C50538 * C145) * C50842 + C20109 * C7895 +
                     C20110 * C50738) *
                        C50880 +
                    (C22397 * C7894 + C22398 * C50842 + C22235 * C7895 +
                     C22236 * C50738) *
                        C50881 +
                    (C22399 * C7894 + C22400 * C50842 + C22237 * C7895 +
                     C22238 * C50738) *
                        C44420) *
                       C50603 * C50587 * C115 -
                   (((C19749 * C1087 + C50538 * C1095) * C50738 +
                     (C19749 * C1083 + C50538 * C1091) * C7895 +
                     (C19749 * C419 + C50538 * C431) * C50842 +
                     (C19749 * C401 + C50538 * C415) * C7894) *
                        C44420 +
                    ((C19749 * C787 + C50538 * C793) * C50738 +
                     (C19749 * C778 + C50538 * C783) * C7895 +
                     (C19749 * C404 + C50538 * C424) * C50842 +
                     (C19749 * C394 + C50538 * C408) * C7894) *
                        C50881 +
                    ((C19749 * C263 + C50538 * C283) * C50738 +
                     (C19749 * C253 + C50538 * C267) * C7895 +
                     (C19749 * C136 + C50538 * C146) * C50842 +
                     (C19749 * C125 + C50538 * C132) * C7894) *
                        C50880) *
                       C50603 * C50587 * C116)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C19749 * C122 + C50538 * C129) * C7894 +
                      (C19749 * C133 + C50538 * C143) * C50842 +
                      C19885 * C7895 + C19886 * C50738) *
                         C50880 +
                     (C22043 * C7894 + C22044 * C50842 + C20372 * C7895 +
                      C20371 * C50738) *
                         C50881 +
                     (C22045 * C7894 + C22046 * C50842 + C20667 * C7895 +
                      C20668 * C50738) *
                         C44420) *
                        C50603 * C248 -
                    ((C20670 * C50738 + C20669 * C7895 + C20668 * C50842 +
                      C20667 * C7894) *
                         C44420 +
                     (C20369 * C50738 + C20370 * C7895 + C20371 * C50842 +
                      C20372 * C7894) *
                         C50881 +
                     (C19888 * C50738 + C19887 * C7895 + C19886 * C50842 +
                      C19885 * C7894) *
                         C50880) *
                        C50603 * C249 +
                    ((C19887 * C7894 + C19888 * C50842 + C19889 * C7895 +
                      C19890 * C50738) *
                         C50880 +
                     (C20370 * C7894 + C20369 * C50842 + C20368 * C7895 +
                      C20367 * C50738) *
                         C50881 +
                     (C20669 * C7894 + C20670 * C50842 + C20671 * C7895 +
                      C20672 * C50738) *
                         C44420) *
                        C50603 * C250) *
                       C251 +
                   (((C19893 * C7894 + C19894 * C50842 + C19895 * C7895 +
                      C19896 * C50738) *
                         C50880 +
                     (C20373 * C7894 + C20374 * C50842 + C20375 * C7895 +
                      C20376 * C50738) *
                         C50881 +
                     (C21853 * C7894 + C21854 * C50842 + C21855 * C7895 +
                      C21856 * C50738) *
                         C44420) *
                        C50603 * C249 -
                    ((C21854 * C50738 + C21853 * C7895 + C22054 * C50842 +
                      C22053 * C7894) *
                         C44420 +
                     (C20374 * C50738 + C20373 * C7895 + C22052 * C50842 +
                      C22051 * C7894) *
                         C50881 +
                     (C19894 * C50738 + C19893 * C7895 +
                      (C19749 * C134 + C50538 * C144) * C50842 +
                      (C19749 * C123 + C50538 * C130) * C7894) *
                         C50880) *
                        C50603 * C248 -
                    (((C19749 * C3543 + C50538 * C3547) * C50738 +
                      (C19749 * C3541 + C50538 * C3545) * C7895 +
                      C21856 * C50842 + C21855 * C7894) *
                         C44420 +
                     (C20378 * C50738 + C20377 * C7895 + C20376 * C50842 +
                      C20375 * C7894) *
                         C50881 +
                     (C19898 * C50738 + C19897 * C7895 + C19896 * C50842 +
                      C19895 * C7894) *
                         C50880) *
                        C50603 * C250) *
                       C50574)) /
                     (p * q * std::sqrt(p + q));
    d2ee[170] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C7894 +
             (C19749 * C133 + C50538 * C143) * C50842 + C19885 * C7895 +
             C19886 * C50738) *
                C50880 +
            (C47396 + C47397 + C47398 + C47399) * C50881 + C47424 * C44420) *
               C50603 * C50874 -
           (C48332 * C44420 + (C47923 + C47922 + C47921 + C47920) * C50881 +
            (C19888 * C50738 + C19887 * C7895 + C19886 * C50842 +
             C19885 * C7894) *
                C50880) *
               C50603 * C50875 +
           ((C19887 * C7894 + C19888 * C50842 + C19889 * C7895 +
             C19890 * C50738) *
                C50880 +
            (C20370 * C7894 + C20369 * C50842 + C20368 * C7895 +
             C20367 * C50738) *
                C50881 +
            (C20669 * C7894 + C20670 * C50842 + C20671 * C7895 +
             C20672 * C50738) *
                C44420) *
               C50603 * C1199) *
              C50821 +
          (((C19893 * C7894 + C19894 * C50842 + C19895 * C7895 +
             C19896 * C50738) *
                C50880 +
            (C47928 + C47929 + C47930 + C47931) * C50881 +
            (C47932 + C47933 + C47934 + C47935) * C44420) *
               C50603 * C50875 -
           (C47425 * C44420 + (C47411 + C47410 + C47409 + C47408) * C50881 +
            (C19894 * C50738 + C19893 * C7895 +
             (C19749 * C134 + C50538 * C144) * C50842 +
             (C19749 * C123 + C50538 * C130) * C7894) *
                C50880) *
               C50603 * C50874 -
           (((C19749 * C3543 + C50538 * C3547) * C50738 +
             (C19749 * C3541 + C50538 * C3545) * C7895 + C21856 * C50842 +
             C21855 * C7894) *
                C44420 +
            (C20378 * C50738 + C20377 * C7895 + C20376 * C50842 +
             C20375 * C7894) *
                C50881 +
            (C19898 * C50738 + C19897 * C7895 + C19896 * C50842 +
             C19895 * C7894) *
                C50880) *
               C50603 * C1199) *
              C50574)) /
        (p * q * std::sqrt(p + q));
    d2ee[171] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C7894 +
             (C19749 * C133 + C50538 * C143) * C50842 + C19885 * C7895 +
             C19886 * C50738) *
                C50880 +
            (C47396 + C47397 + C47398 + C47399) * C50881 + C47424 * C44420) *
               C50830 -
           ((C47404 + C47405 + C47406 + C47407) * C44420 +
            (C47403 + C47402 + C47401 + C47400) * C50881 +
            (C47399 + C47398 + C47397 + C47396) * C50880) *
               C50667) *
              C50874 +
          (((C47920 + C47921 + C47922 + C47923) * C50880 +
            (C47924 + C47925 + C47926 + C47927) * C50881 +
            (C48326 + C48327 + C48328 + C48329) * C44420) *
               C50667 -
           (C48332 * C44420 + (C47923 + C47922 + C47921 + C47920) * C50881 +
            (C19888 * C50738 + C19887 * C7895 + C19886 * C50842 +
             C19885 * C7894) *
                C50880) *
               C50830) *
              C50875 +
          (((C19887 * C7894 + C19888 * C50842 + C19889 * C7895 +
             C19890 * C50738) *
                C50880 +
            (C48819 + C48820 + C48821 + C48822) * C50881 +
            (C48823 + C48824 + C48825 + C48826) * C44420) *
               C50830 -
           (((C19749 * C21271 + C50538 * C21273) * C50738 +
             (C19749 * C21270 + C50538 * C21272) * C7895 + C23023 * C50842 +
             C23022 * C7894) *
                C44420 +
            (C48826 + C48825 + C48824 + C48823) * C50881 +
            (C48822 + C48821 + C48820 + C48819) * C50880) *
               C50667) *
              C1199) *
         C50568) /
        (p * q * std::sqrt(p + q));
    d2ee[172] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19749 * C122 + C50538 * C129) * C7894 +
            (C19749 * C133 + C50538 * C143) * C50842 + C19885 * C7895 +
            C19886 * C50738) *
               C50880 +
           (C47396 + C47397 + C47398 + C47399) * C50881 + C47424 * C44420) *
              C50603 * C964 -
          ((C47927 + C47926 + C47925 + C47924) * C44420 +
           (C47923 + C47922 + C47921 + C47920) * C50881 +
           (C19888 * C50738 + C19887 * C7895 + C19886 * C50842 +
            C19885 * C7894) *
               C50880) *
              C50603 * C965 +
          ((C19887 * C7894 + C19888 * C50842 + C19889 * C7895 +
            C19890 * C50738) *
               C50880 +
           (C20370 * C7894 + C20369 * C50842 + C20368 * C7895 +
            C20367 * C50738) *
               C50881 +
           (C20669 * C7894 + C20670 * C50842 + C20671 * C7895 +
            C20672 * C50738) *
               C44420) *
              C50603 * C966 -
          (((C19749 * C20651 + C50538 * C20653) * C50738 +
            (C19749 * C20650 + C50538 * C20652) * C7895 + C20672 * C50842 +
            C20671 * C7894) *
               C44420 +
           (C21008 * C50738 + C21007 * C7895 + C20367 * C50842 +
            C20368 * C7894) *
               C50881 +
           (C19891 * C50738 + C19892 * C7895 + C19890 * C50842 +
            C19889 * C7894) *
               C50880) *
              C50603 * C967) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C7894 +
             (C19749 * C133 + C50538 * C143) * C50842 + C19885 * C7895 +
             C19886 * C50738) *
                C50880 +
            (C47396 + C47397 + C47398 + C47399) * C50881 + C47424 * C44420) *
               C50603 * C893 -
           ((C47927 + C47926 + C47925 + C47924) * C44420 +
            (C47923 + C47922 + C47921 + C47920) * C50881 +
            (C19888 * C50738 + C19887 * C7895 + C19886 * C50842 +
             C19885 * C7894) *
                C50880) *
               C50603 * C50639) *
              C895 +
          (((C19893 * C7894 + C19894 * C50842 + C19895 * C7895 +
             C19896 * C50738) *
                C50880 +
            (C47928 + C47929 + C47930 + C47931) * C50881 +
            (C47932 + C47933 + C47934 + C47935) * C44420) *
               C50603 * C50639 -
           (C47425 * C44420 + (C47411 + C47410 + C47409 + C47408) * C50881 +
            (C19894 * C50738 + C19893 * C7895 +
             (C19749 * C134 + C50538 * C144) * C50842 +
             (C19749 * C123 + C50538 * C130) * C7894) *
                C50880) *
               C50603 * C893) *
              C896 +
          ((((C19749 * C124 + C50538 * C131) * C7894 +
             (C19749 * C135 + C50538 * C145) * C50842 + C20109 * C7895 +
             C20110 * C50738) *
                C50880 +
            (C47718 + C47719 + C47720 + C47721) * C50881 +
            (C47722 + C47723 + C47724 + C47725) * C44420) *
               C50603 * C893 -
           (((C19749 * C2554 + C50538 * C2558) * C50738 +
             (C19749 * C2549 + C50538 * C2555) * C7895 + C22238 * C50842 +
             C22237 * C7894) *
                C44420 +
            (C31432 * C50738 + C31431 * C7895 + C22236 * C50842 +
             C22235 * C7894) *
                C50881 +
            (C20112 * C50738 + C20111 * C7895 + C20110 * C50842 +
             C20109 * C7894) *
                C50880) *
               C50603 * C50639) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C7894 +
             (C19749 * C133 + C50538 * C143) * C50842 + C19885 * C7895 +
             C19886 * C50738) *
                C50880 +
            (C47396 + C47397 + C47398 + C47399) * C50881 + C47424 * C44420) *
               C391 -
           ((C47404 + C47405 + C47406 + C47407) * C44420 +
            (C47403 + C47402 + C47401 + C47400) * C50881 +
            (C47399 + C47398 + C47397 + C47396) * C50880) *
               C392 +
           (C47424 * C50880 + (C47407 + C47406 + C47405 + C47404) * C50881 +
            (C23924 * C7894 + C23925 * C50842 + C23020 * C7895 +
             C23021 * C50738) *
                C44420) *
               C393) *
              C893 +
          (((C47920 + C47921 + C47922 + C47923) * C50880 +
            (C47924 + C47925 + C47926 + C47927) * C50881 +
            (C48326 + C48327 + C48328 + C48329) * C44420) *
               C392 -
           (C48332 * C44420 + (C47923 + C47922 + C47921 + C47920) * C50881 +
            (C19888 * C50738 + C19887 * C7895 + C19886 * C50842 +
             C19885 * C7894) *
                C50880) *
               C391 -
           (((C19749 * C23005 + C50538 * C23007) * C50738 +
             (C19749 * C23004 + C50538 * C23006) * C7895 + C23021 * C50842 +
             C23020 * C7894) *
                C44420 +
            (C48329 + C48328 + C48327 + C48326) * C50881 + C48332 * C50880) *
               C393) *
              C50639) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[173] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19749 * C122 + C50538 * C129) * C7894 +
              (C19749 * C133 + C50538 * C143) * C50842 + C19885 * C7895 +
              C19886 * C50738) *
                 C50880 +
             (C47396 + C47397 + C47398 + C47399) * C50881 + C47424 * C44420) *
                C50830 -
            ((C47404 + C47405 + C47406 + C47407) * C44420 +
             (C47403 + C47402 + C47401 + C47400) * C50881 +
             (C47399 + C47398 + C47397 + C47396) * C50880) *
                C50667) *
               C893 +
           (((C47920 + C47921 + C47922 + C47923) * C50880 +
             (C47924 + C47925 + C47926 + C47927) * C50881 +
             (C48326 + C48327 + C48328 + C48329) * C44420) *
                C50667 -
            (C48332 * C44420 + (C47923 + C47922 + C47921 + C47920) * C50881 +
             (C19888 * C50738 + C19887 * C7895 + C19886 * C50842 +
              C19885 * C7894) *
                 C50880) *
                C50830) *
               C50639) *
              C50821 +
          ((((C47408 + C47409 + C47410 + C47411) * C50880 +
             (C47412 + C47413 + C47414 + C47415) * C50881 +
             (C47416 + C47417 + C47418 + C47419) * C44420) *
                C50667 -
            (C47425 * C44420 + (C47411 + C47410 + C47409 + C47408) * C50881 +
             (C19894 * C50738 + C19893 * C7895 +
              (C19749 * C134 + C50538 * C144) * C50842 +
              (C19749 * C123 + C50538 * C130) * C7894) *
                 C50880) *
                C50830) *
               C893 +
           (((C19893 * C7894 + C19894 * C50842 + C19895 * C7895 +
              C19896 * C50738) *
                 C50880 +
             (C47928 + C47929 + C47930 + C47931) * C50881 +
             (C47932 + C47933 + C47934 + C47935) * C44420) *
                C50830 -
            (((C19749 * C4475 + C50538 * C4483) * C50738 +
              (C19749 * C4471 + C50538 * C4477) * C7895 + C22058 * C50842 +
              C22057 * C7894) *
                 C44420 +
             (C47935 + C47934 + C47933 + C47932) * C50881 +
             (C47931 + C47930 + C47929 + C47928) * C50880) *
                C50667) *
               C50639) *
              C50574)) /
        (p * q * std::sqrt(p + q));
    d2ee[174] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C7894 +
             (C19749 * C133 + C50538 * C143) * C50842 + C19885 * C7895 +
             C19886 * C50738) *
                C50880 +
            (C47396 + C47397 + C47398 + C47399) * C50881 + C47424 * C44420) *
               C50603 * C893 -
           ((C47927 + C47926 + C47925 + C47924) * C44420 +
            (C47923 + C47922 + C47921 + C47920) * C50881 +
            (C19888 * C50738 + C19887 * C7895 + C19886 * C50842 +
             C19885 * C7894) *
                C50880) *
               C50603 * C50639) *
              C895 +
          (((C19893 * C7894 + C19894 * C50842 + C19895 * C7895 +
             C19896 * C50738) *
                C50880 +
            (C47928 + C47929 + C47930 + C47931) * C50881 +
            (C47932 + C47933 + C47934 + C47935) * C44420) *
               C50603 * C50639 -
           (C47425 * C44420 + (C47411 + C47410 + C47409 + C47408) * C50881 +
            (C19894 * C50738 + C19893 * C7895 +
             (C19749 * C134 + C50538 * C144) * C50842 +
             (C19749 * C123 + C50538 * C130) * C7894) *
                C50880) *
               C50603 * C893) *
              C896 +
          ((((C19749 * C124 + C50538 * C131) * C7894 +
             (C19749 * C135 + C50538 * C145) * C50842 + C20109 * C7895 +
             C20110 * C50738) *
                C50880 +
            (C47718 + C47719 + C47720 + C47721) * C50881 +
            (C47722 + C47723 + C47724 + C47725) * C44420) *
               C50603 * C893 -
           (((C19749 * C2554 + C50538 * C2558) * C50738 +
             (C19749 * C2549 + C50538 * C2555) * C7895 + C22238 * C50842 +
             C22237 * C7894) *
                C44420 +
            (C31432 * C50738 + C31431 * C7895 + C22236 * C50842 +
             C22235 * C7894) *
                C50881 +
            (C20112 * C50738 + C20111 * C7895 + C20110 * C50842 +
             C20109 * C7894) *
                C50880) *
               C50603 * C50639) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19749 * C122 + C50538 * C129) * C7894 +
            (C19749 * C133 + C50538 * C143) * C50842 + C19885 * C7895 +
            C19886 * C50738) *
               C50880 +
           (C47396 + C47397 + C47398 + C47399) * C50881 + C47424 * C44420) *
              C50603 * C964 -
          ((C47927 + C47926 + C47925 + C47924) * C44420 +
           (C47923 + C47922 + C47921 + C47920) * C50881 +
           (C19888 * C50738 + C19887 * C7895 + C19886 * C50842 +
            C19885 * C7894) *
               C50880) *
              C50603 * C965 +
          ((C19887 * C7894 + C19888 * C50842 + C19889 * C7895 +
            C19890 * C50738) *
               C50880 +
           (C20370 * C7894 + C20369 * C50842 + C20368 * C7895 +
            C20367 * C50738) *
               C50881 +
           (C20669 * C7894 + C20670 * C50842 + C20671 * C7895 +
            C20672 * C50738) *
               C44420) *
              C50603 * C966 -
          (((C19749 * C20651 + C50538 * C20653) * C50738 +
            (C19749 * C20650 + C50538 * C20652) * C7895 + C20672 * C50842 +
            C20671 * C7894) *
               C44420 +
           (C21008 * C50738 + C21007 * C7895 + C20367 * C50842 +
            C20368 * C7894) *
               C50881 +
           (C19891 * C50738 + C19892 * C7895 + C19890 * C50842 +
            C19889 * C7894) *
               C50880) *
              C50603 * C967) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[175] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C19749 * C122 + C50538 * C129) * C7894 +
              (C19749 * C133 + C50538 * C143) * C50842 + C19885 * C7895 +
              C19886 * C50738) *
                 C50880 +
             (C47396 + C47397 + C47398 + C47399) * C50881 + C47424 * C44420) *
                C1544 -
            (C49223 * C44420 + (C47403 + C47402 + C47401 + C47400) * C50881 +
             (C47399 + C47398 + C47397 + C47396) * C50880) *
                C50667) *
               C50829 +
           (((C47920 + C47921 + C47922 + C47923) * C50880 +
             (C47924 + C47925 + C47926 + C47927) * C50881 +
             (C48326 + C48327 + C48328 + C48329) * C44420) *
                C50667 -
            (C48332 * C44420 + (C47923 + C47922 + C47921 + C47920) * C50881 +
             (C19888 * C50738 + C19887 * C7895 + C19886 * C50842 +
              C19885 * C7894) *
                 C50880) *
                C1544) *
               C50639) *
              C50821 +
          ((((C47408 + C47409 + C47410 + C47411) * C50880 +
             (C47412 + C47413 + C47414 + C47415) * C50881 +
             (C47416 + C47417 + C47418 + C47419) * C44420) *
                C50667 -
            (C47425 * C44420 + (C47411 + C47410 + C47409 + C47408) * C50881 +
             (C19894 * C50738 + C19893 * C7895 +
              (C19749 * C134 + C50538 * C144) * C50842 +
              (C19749 * C123 + C50538 * C130) * C7894) *
                 C50880) *
                C1544) *
               C50829 +
           (((C19893 * C7894 + C19894 * C50842 + C19895 * C7895 +
              C19896 * C50738) *
                 C50880 +
             (C47928 + C47929 + C47930 + C47931) * C50881 +
             (C47932 + C47933 + C47934 + C47935) * C44420) *
                C1544 -
            (((C19749 * C4475 + C50538 * C4483) * C50738 +
              (C19749 * C4471 + C50538 * C4477) * C7895 + C22058 * C50842 +
              C22057 * C7894) *
                 C44420 +
             (C47935 + C47934 + C47933 + C47932) * C50881 +
             (C47931 + C47930 + C47929 + C47928) * C50880) *
                C50667) *
               C50639) *
              C50574)) /
        (p * q * std::sqrt(p + q));
    d2ee[176] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C7894 +
             (C19749 * C133 + C50538 * C143) * C50842 + C19885 * C7895 +
             C19886 * C50738) *
                C50880 +
            (C47396 + C47397 + C47398 + C47399) * C50881 + C47424 * C44420) *
               C50876 -
           (C49223 * C44420 + (C47403 + C47402 + C47401 + C47400) * C50881 +
            (C47399 + C47398 + C47397 + C47396) * C50880) *
               C50877 +
           (C47424 * C50880 + (C47407 + C47406 + C47405 + C47404) * C50881 +
            (C49218 + C49219 + C49220 + C49221) * C44420) *
               C1960) *
              C50829 +
          (((C47920 + C47921 + C47922 + C47923) * C50880 +
            (C47924 + C47925 + C47926 + C47927) * C50881 +
            (C48326 + C48327 + C48328 + C48329) * C44420) *
               C50877 -
           (C48332 * C44420 + (C47923 + C47922 + C47921 + C47920) * C50881 +
            (C19888 * C50738 + C19887 * C7895 + C19886 * C50842 +
             C19885 * C7894) *
                C50880) *
               C50876 -
           (((C19749 * C23005 + C50538 * C23007) * C50738 +
             (C19749 * C23004 + C50538 * C23006) * C7895 + C23021 * C50842 +
             C23020 * C7894) *
                C44420 +
            (C48329 + C48328 + C48327 + C48326) * C50881 + C48332 * C50880) *
               C1960) *
              C50639) *
         C50568) /
        (p * q * std::sqrt(p + q));
    d2ee[177] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C7894 +
             (C19749 * C133 + C50538 * C143) * C50842 + C19885 * C7895 +
             C19886 * C50738) *
                C50880 +
            (C47396 + C47397 + C47398 + C47399) * C50881 + C47424 * C44420) *
               C1544 -
           ((C47404 + C47405 + C47406 + C47407) * C44420 +
            (C47403 + C47402 + C47401 + C47400) * C50881 +
            (C47399 + C47398 + C47397 + C47396) * C50880) *
               C50667) *
              C248 +
          (((C47920 + C47921 + C47922 + C47923) * C50880 +
            (C47924 + C47925 + C47926 + C47927) * C50881 +
            (C48326 + C48327 + C48328 + C48329) * C44420) *
               C50667 -
           (C48332 * C44420 + (C47923 + C47922 + C47921 + C47920) * C50881 +
            (C19888 * C50738 + C19887 * C7895 + C19886 * C50842 +
             C19885 * C7894) *
                C50880) *
               C1544) *
              C249 +
          (((C19887 * C7894 + C19888 * C50842 + C19889 * C7895 +
             C19890 * C50738) *
                C50880 +
            (C48819 + C48820 + C48821 + C48822) * C50881 +
            (C48823 + C48824 + C48825 + C48826) * C44420) *
               C1544 -
           (((C19749 * C21271 + C50538 * C21273) * C50738 +
             (C19749 * C21270 + C50538 * C21272) * C7895 + C23023 * C50842 +
             C23022 * C7894) *
                C44420 +
            (C48826 + C48825 + C48824 + C48823) * C50881 +
            (C48822 + C48821 + C48820 + C48819) * C50880) *
               C50667) *
              C250) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C7894 +
             (C19749 * C133 + C50538 * C143) * C50842 + C19885 * C7895 +
             C19886 * C50738) *
                C50880 +
            (C47396 + C47397 + C47398 + C47399) * C50881 + C47424 * C44420) *
               C1544 -
           ((C47404 + C47405 + C47406 + C47407) * C44420 +
            (C47403 + C47402 + C47401 + C47400) * C50881 +
            (C47399 + C47398 + C47397 + C47396) * C50880) *
               C50667) *
              C50587 * C895 +
          (((C47408 + C47409 + C47410 + C47411) * C50880 +
            (C47412 + C47413 + C47414 + C47415) * C50881 +
            (C47416 + C47417 + C47418 + C47419) * C44420) *
               C50667 -
           (C47425 * C44420 + (C47411 + C47410 + C47409 + C47408) * C50881 +
            (C19894 * C50738 + C19893 * C7895 +
             (C19749 * C134 + C50538 * C144) * C50842 +
             (C19749 * C123 + C50538 * C130) * C7894) *
                C50880) *
               C1544) *
              C50587 * C896 +
          ((((C19749 * C124 + C50538 * C131) * C7894 +
             (C19749 * C135 + C50538 * C145) * C50842 + C20109 * C7895 +
             C20110 * C50738) *
                C50880 +
            (C47718 + C47719 + C47720 + C47721) * C50881 +
            (C47722 + C47723 + C47724 + C47725) * C44420) *
               C1544 -
           (((C19749 * C5971 + C50538 * C5973) * C50738 +
             (C19749 * C5970 + C50538 * C5972) * C7895 + C39484 * C50842 +
             C39483 * C7894) *
                C44420 +
            (C47725 + C47724 + C47723 + C47722) * C50881 +
            (C47721 + C47720 + C47719 + C47718) * C50880) *
               C50667) *
              C50587 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C19749 * C122 + C50538 * C129) * C7894 +
            (C19749 * C133 + C50538 * C143) * C50842 + C19885 * C7895 +
            C19886 * C50738) *
               C50880 +
           (C47396 + C47397 + C47398 + C47399) * C50881 + C47424 * C44420) *
              C1710 -
          (C49223 * C44420 + (C47403 + C47402 + C47401 + C47400) * C50881 +
           (C47399 + C47398 + C47397 + C47396) * C50880) *
              C1711 +
          (C47424 * C50880 + (C47407 + C47406 + C47405 + C47404) * C50881 +
           (C49218 + C49219 + C49220 + C49221) * C44420) *
              C1712 -
          (((C19749 * C23912 + C50538 * C23914) * C50738 +
            (C19749 * C23911 + C50538 * C23913) * C7895 + C40500 * C50842 +
            C40499 * C7894) *
               C44420 +
           (C49221 + C49220 + C49219 + C49218) * C50881 + C49223 * C50880) *
              C1713) *
         C50587 * C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[178] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C7894 +
             (C19749 * C133 + C50538 * C143) * C50842 + C19885 * C7895 +
             C19886 * C50738) *
                C50880 +
            (C47396 + C47397 + C47398 + C47399) * C50881 + C47424 * C44420) *
               C50876 -
           (C49223 * C44420 + (C47403 + C47402 + C47401 + C47400) * C50881 +
            (C47399 + C47398 + C47397 + C47396) * C50880) *
               C50877 +
           (C47424 * C50880 + (C47407 + C47406 + C47405 + C47404) * C50881 +
            (C49218 + C49219 + C49220 + C49221) * C44420) *
               C1960) *
              C50587 * C50821 +
          (((C47408 + C47409 + C47410 + C47411) * C50880 +
            (C47412 + C47413 + C47414 + C47415) * C50881 +
            (C47416 + C47417 + C47418 + C47419) * C44420) *
               C50877 -
           (C47425 * C44420 + (C47411 + C47410 + C47409 + C47408) * C50881 +
            (C19894 * C50738 + C19893 * C7895 +
             (C19749 * C134 + C50538 * C144) * C50842 +
             (C19749 * C123 + C50538 * C130) * C7894) *
                C50880) *
               C50876 -
           (((C19749 * C6378 + C50538 * C6382) * C50738 +
             (C19749 * C6376 + C50538 * C6380) * C7895 + C39274 * C50842 +
             C39273 * C7894) *
                C44420 +
            (C47419 + C47418 + C47417 + C47416) * C50881 + C47425 * C50880) *
               C1960) *
              C50587 * C50574)) /
        (p * q * std::sqrt(p + q));
    d2ee[179] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C7894 +
             (C19749 * C133 + C50538 * C143) * C50842 + C19885 * C7895 +
             C19886 * C50738) *
                C50880 +
            (C47396 + C47397 + C47398 + C47399) * C50881 + C47424 * C44420) *
               C1544 -
           ((C47404 + C47405 + C47406 + C47407) * C44420 +
            (C47403 + C47402 + C47401 + C47400) * C50881 +
            (C47399 + C47398 + C47397 + C47396) * C50880) *
               C50667) *
              C50587 * C895 +
          (((C47408 + C47409 + C47410 + C47411) * C50880 +
            (C47412 + C47413 + C47414 + C47415) * C50881 +
            (C47416 + C47417 + C47418 + C47419) * C44420) *
               C50667 -
           (C47425 * C44420 + (C47411 + C47410 + C47409 + C47408) * C50881 +
            (C19894 * C50738 + C19893 * C7895 +
             (C19749 * C134 + C50538 * C144) * C50842 +
             (C19749 * C123 + C50538 * C130) * C7894) *
                C50880) *
               C1544) *
              C50587 * C896 +
          ((((C19749 * C124 + C50538 * C131) * C7894 +
             (C19749 * C135 + C50538 * C145) * C50842 + C20109 * C7895 +
             C20110 * C50738) *
                C50880 +
            (C47718 + C47719 + C47720 + C47721) * C50881 +
            (C47722 + C47723 + C47724 + C47725) * C44420) *
               C1544 -
           (((C19749 * C5971 + C50538 * C5973) * C50738 +
             (C19749 * C5970 + C50538 * C5972) * C7895 + C39484 * C50842 +
             C39483 * C7894) *
                C44420 +
            (C47725 + C47724 + C47723 + C47722) * C50881 +
            (C47721 + C47720 + C47719 + C47718) * C50880) *
               C50667) *
              C50587 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C7894 +
             (C19749 * C133 + C50538 * C143) * C50842 + C19885 * C7895 +
             C19886 * C50738) *
                C50880 +
            (C47396 + C47397 + C47398 + C47399) * C50881 + C47424 * C44420) *
               C1544 -
           ((C47404 + C47405 + C47406 + C47407) * C44420 +
            (C47403 + C47402 + C47401 + C47400) * C50881 +
            (C47399 + C47398 + C47397 + C47396) * C50880) *
               C50667) *
              C248 +
          (((C47920 + C47921 + C47922 + C47923) * C50880 +
            (C47924 + C47925 + C47926 + C47927) * C50881 +
            (C48326 + C48327 + C48328 + C48329) * C44420) *
               C50667 -
           (C48332 * C44420 + (C47923 + C47922 + C47921 + C47920) * C50881 +
            (C19888 * C50738 + C19887 * C7895 + C19886 * C50842 +
             C19885 * C7894) *
                C50880) *
               C1544) *
              C249 +
          (((C19887 * C7894 + C19888 * C50842 + C19889 * C7895 +
             C19890 * C50738) *
                C50880 +
            (C48819 + C48820 + C48821 + C48822) * C50881 +
            (C48823 + C48824 + C48825 + C48826) * C44420) *
               C1544 -
           (((C19749 * C21271 + C50538 * C21273) * C50738 +
             (C19749 * C21270 + C50538 * C21272) * C7895 + C23023 * C50842 +
             C23022 * C7894) *
                C44420 +
            (C48826 + C48825 + C48824 + C48823) * C50881 +
            (C48822 + C48821 + C48820 + C48819) * C50880) *
               C50667) *
              C250) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[180] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C2164 +
             (C19749 * C133 + C50538 * C143) * C2159 + C19885 * C2165 +
             C19886 * C2160 + C19887 * C2166 + C19888 * C2161) *
                C33658 +
            (C36689 + C36690 + C36691 + C36692 + C36693 + C36694) * C50764) *
               C50603 * C50829 -
           ((C20367 * C2161 + C20368 * C2166 + C20369 * C2160 + C20370 * C2165 +
             C20371 * C2159 + C20372 * C2164) *
                C50764 +
            (C19890 * C2161 + C19889 * C2166 + C19888 * C2160 + C19887 * C2165 +
             C19886 * C2159 + C19885 * C2164) *
                C33658) *
               C50603 * C50639) *
              C50872 +
          (((C19893 * C2164 + C19894 * C2159 + C19895 * C2165 + C19896 * C2160 +
             C19897 * C2166 + C19898 * C2161) *
                C33658 +
            (C20373 * C2164 + C20374 * C2159 + C20375 * C2165 + C20376 * C2160 +
             C20377 * C2166 + C20378 * C2161) *
                C50764) *
               C50603 * C50639 -
           ((C36706 + C36705 + C36704 + C36703 + C36702 + C36701) * C50764 +
            (C19896 * C2161 + C19895 * C2166 + C19894 * C2160 + C19893 * C2165 +
             (C19749 * C134 + C50538 * C144) * C2159 +
             (C19749 * C123 + C50538 * C130) * C2164) *
                C33658) *
               C50603 * C50829) *
              C50873 +
          ((((C19749 * C124 + C50538 * C131) * C2164 +
             (C19749 * C135 + C50538 * C145) * C2159 + C20109 * C2165 +
             C20110 * C2160 + C20111 * C2166 + C20112 * C2161) *
                C33658 +
            (C22397 * C2164 + C22398 * C2159 + C22235 * C2165 + C22236 * C2160 +
             C31431 * C2166 + C31432 * C2161) *
                C50764) *
               C50603 * C50829 -
           (((C19749 * C3076 + C50538 * C3080) * C2161 +
             (C19749 * C3071 + C50538 * C3077) * C2166 + C31432 * C2160 +
             C31431 * C2165 + C22236 * C2159 + C22235 * C2164) *
                C50764 +
            (C20114 * C2161 + C20113 * C2166 + C20112 * C2160 + C20111 * C2165 +
             C20110 * C2159 + C20109 * C2164) *
                C33658) *
               C50603 * C50639) *
              C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
              C16965 * C124 + C16960 * C131) *
                 C121 +
             (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
              C16965 * C135 + C16960 * C145) *
                 C50688) *
                C33658 +
            ((C34001 + C34002 + C34003) * C121 +
             (C34004 + C34005 + C34006) * C50688) *
                C50764) *
               C50603 * C50829 -
           (((C17861 + C17862 + C17863) * C50688 +
             (C17864 + C17865 + C17866) * C121) *
                C50764 +
            ((C17168 + C17167 + C17166) * C50688 +
             (C17165 + C17164 + C17163) * C121) *
                C33658) *
               C50603 * C50639) *
              C50872 +
          ((((C17175 + C17176 + C17177) * C121 +
             (C17178 + C17179 + C17180) * C50688) *
                C33658 +
            ((C17867 + C17868 + C17869) * C121 +
             (C17870 + C17871 + C17872) * C50688) *
                C50764) *
               C50603 * C50639 -
           (((C34018 + C34017 + C34016) * C50688 +
             (C34015 + C34014 + C34013) * C121) *
                C50764 +
            ((C16965 * C136 + C16960 * C146 + C16964 * C135 + C16959 * C145 +
              C16963 * C134 + C16958 * C144) *
                 C50688 +
             (C16965 * C125 + C16960 * C132 + C16964 * C124 + C16959 * C131 +
              C16963 * C123 + C16958 * C130) *
                 C121) *
                C33658) *
               C50603 * C50829) *
              C50873 +
          ((((C16963 * C124 + C16958 * C131 + C16964 * C125 + C16959 * C132 +
              C16965 * C126 + C16960 * C138) *
                 C121 +
             (C16963 * C135 + C16958 * C145 + C16964 * C136 + C16959 * C146 +
              C16965 * C137 + C16960 * C147) *
                 C50688) *
                C33658 +
            ((C16963 * C395 + C16958 * C409 + C16964 * C394 + C16959 * C408 +
              C16965 * C402 + C16960 * C420) *
                 C121 +
             (C16963 * C405 + C16958 * C425 + C16964 * C404 + C16959 * C424 +
              C16965 * C421 + C16960 * C432) *
                 C50688) *
                C50764) *
               C50603 * C50829 -
           (((C16965 * C788 + C16960 * C794 + C16964 * C787 + C16959 * C793 +
              C16963 * C786 + C16958 * C792) *
                 C50688 +
             (C16965 * C779 + C16960 * C789 + C16964 * C778 + C16959 * C783 +
              C16963 * C777 + C16958 * C782) *
                 C121) *
                C50764 +
            ((C17496 + C17495 + C17494) * C50688 +
             (C17493 + C17492 + C17491) * C121) *
                C33658) *
               C50603 * C50639) *
              C536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C121 +
             (C19749 * C133 + C50538 * C143) * C50688) *
                C39052 +
            (C39253 + C39254) * C39053 + C39271 * C39054 + C39272 * C39055) *
               C50603 * C50829 -
           ((C22047 * C50688 + C22048 * C121) * C39055 +
            (C20668 * C50688 + C20667 * C121) * C39054 +
            (C20371 * C50688 + C20372 * C121) * C39053 +
            (C19886 * C50688 + C19885 * C121) * C39052) *
               C50603 * C50639) *
              C50872 +
          (((C19893 * C121 + C19894 * C50688) * C39052 +
            (C20373 * C121 + C20374 * C50688) * C39053 +
            (C21853 * C121 + C21854 * C50688) * C39054 +
            (C22057 * C121 + C22058 * C50688) * C39055) *
               C50603 * C50639 -
           (C39275 * C39055 + C39276 * C39054 + (C39262 + C39261) * C39053 +
            ((C19749 * C134 + C50538 * C144) * C50688 +
             (C19749 * C123 + C50538 * C130) * C121) *
                C39052) *
               C50603 * C50829) *
              C50873 +
          ((((C19749 * C124 + C50538 * C131) * C121 +
             (C19749 * C135 + C50538 * C145) * C50688) *
                C39052 +
            (C22397 * C121 + C22398 * C50688) * C39053 +
            (C22399 * C121 + C22400 * C50688) * C39054 +
            ((C19749 * C1715 + C50538 * C1723) * C121 +
             (C19749 * C1719 + C50538 * C1727) * C50688) *
                C39055) *
               C50603 * C50829 -
           (((C19749 * C5971 + C50538 * C5973) * C50688 +
             (C19749 * C5970 + C50538 * C5972) * C121) *
                C39055 +
            (C22238 * C50688 + C22237 * C121) * C39054 +
            (C22236 * C50688 + C22235 * C121) * C39053 +
            (C20110 * C50688 + C20109 * C121) * C39052) *
               C50603 * C50639) *
              C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[181] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19749 * C122 + C50538 * C129) * C2164 +
              (C19749 * C133 + C50538 * C143) * C2159 + C19885 * C2165 +
              C19886 * C2160 + C19887 * C2166 + C19888 * C2161) *
                 C33658 +
             (C36689 + C36690 + C36691 + C36692 + C36693 + C36694) * C50764) *
                C50830 -
            ((C36695 + C36696 + C36697 + C36698 + C36699 + C36700) * C50764 +
             (C36694 + C36693 + C36692 + C36691 + C36690 + C36689) * C33658) *
                C50667) *
               C50829 +
           (((C37205 + C37206 + C37207 + C37208 + C37209 + C37210) * C33658 +
             (C20667 * C2164 + C20668 * C2159 + C20669 * C2165 +
              C20670 * C2160 + C20671 * C2166 + C20672 * C2161) *
                 C50764) *
                C50667 -
            ((C37210 + C37209 + C37208 + C37207 + C37206 + C37205) * C50764 +
             (C19890 * C2161 + C19889 * C2166 + C19888 * C2160 +
              C19887 * C2165 + C19886 * C2159 + C19885 * C2164) *
                 C33658) *
                C50830) *
               C50639) *
              C251 +
          ((((C36701 + C36702 + C36703 + C36704 + C36705 + C36706) * C33658 +
             (C36707 + C36708 + C36709 + C36710 + C36711 + C36712) * C50764) *
                C50667 -
            ((C36706 + C36705 + C36704 + C36703 + C36702 + C36701) * C50764 +
             (C19896 * C2161 + C19895 * C2166 + C19894 * C2160 +
              C19893 * C2165 + (C19749 * C134 + C50538 * C144) * C2159 +
              (C19749 * C123 + C50538 * C130) * C2164) *
                 C33658) *
                C50830) *
               C50829 +
           (((C19893 * C2164 + C19894 * C2159 + C19895 * C2165 +
              C19896 * C2160 + C19897 * C2166 + C19898 * C2161) *
                 C33658 +
             (C37211 + C37212 + C37213 + C37214 + C37215 + C37216) * C50764) *
                C50830 -
            (((C19749 * C3543 + C50538 * C3547) * C2161 +
              (C19749 * C3541 + C50538 * C3545) * C2166 + C21856 * C2160 +
              C21855 * C2165 + C21854 * C2159 + C21853 * C2164) *
                 C50764 +
             (C37216 + C37215 + C37214 + C37213 + C37212 + C37211) * C33658) *
                C50667) *
               C50639) *
              C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
               C16965 * C124 + C16960 * C131) *
                  C121 +
              (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
               C16965 * C135 + C16960 * C145) *
                  C50688) *
                 C33658 +
             ((C34001 + C34002 + C34003) * C121 +
              (C34004 + C34005 + C34006) * C50688) *
                 C50764) *
                C50830 -
            (((C34007 + C34008 + C34009) * C50688 +
              (C34010 + C34011 + C34012) * C121) *
                 C50764 +
             ((C34006 + C34005 + C34004) * C50688 +
              (C34003 + C34002 + C34001) * C121) *
                 C33658) *
                C50667) *
               C50829 +
           ((((C17866 + C17865 + C17864) * C121 +
              (C17863 + C17862 + C17861) * C50688) *
                 C33658 +
             ((C18293 + C18294 + C18295) * C121 +
              (C18296 + C18297 + C18298) * C50688) *
                 C50764) *
                C50667 -
            (((C17861 + C17862 + C17863) * C50688 +
              (C17864 + C17865 + C17866) * C121) *
                 C50764 +
             ((C17168 + C17167 + C17166) * C50688 +
              (C17165 + C17164 + C17163) * C121) *
                 C33658) *
                C50830) *
               C50639) *
              C251 +
          (((((C34013 + C34014 + C34015) * C121 +
              (C34016 + C34017 + C34018) * C50688) *
                 C33658 +
             ((C34019 + C34020 + C34021) * C121 +
              (C34022 + C34023 + C34024) * C50688) *
                 C50764) *
                C50667 -
            (((C34018 + C34017 + C34016) * C50688 +
              (C34015 + C34014 + C34013) * C121) *
                 C50764 +
             ((C16965 * C136 + C16960 * C146 + C16964 * C135 + C16959 * C145 +
               C16963 * C134 + C16958 * C144) *
                  C50688 +
              (C16965 * C125 + C16960 * C132 + C16964 * C124 + C16959 * C131 +
               C16963 * C123 + C16958 * C130) *
                  C121) *
                 C33658) *
                C50830) *
               C50829 +
           ((((C17175 + C17176 + C17177) * C121 +
              (C17178 + C17179 + C17180) * C50688) *
                 C33658 +
             ((C17867 + C17868 + C17869) * C121 +
              (C17870 + C17871 + C17872) * C50688) *
                 C50764) *
                C50830 -
            (((C16965 * C1087 + C16960 * C1095 + C16964 * C1088 +
               C16959 * C1096 + C16963 * C1089 + C16958 * C1097) *
                  C50688 +
              (C16965 * C1083 + C16960 * C1091 + C16964 * C1084 +
               C16959 * C1092 + C16963 * C1085 + C16958 * C1093) *
                  C121) *
                 C50764 +
             ((C17872 + C17871 + C17870) * C50688 +
              (C17869 + C17868 + C17867) * C121) *
                 C33658) *
                C50667) *
               C50639) *
              C50574)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C19749 * C122 + C50538 * C129) * C121 +
              (C19749 * C133 + C50538 * C143) * C50688) *
                 C39052 +
             (C39253 + C39254) * C39053 + C39271 * C39054 + C39272 * C39055) *
                C50830 -
            ((C39259 + C39260) * C39055 + (C39258 + C39257) * C39054 +
             (C39256 + C39255) * C39053 + (C39254 + C39253) * C39052) *
                C50667) *
               C50829 +
           (((C39617 + C39618) * C39052 + (C39619 + C39620) * C39053 +
             (C39621 + C39622) * C39054 +
             (C23020 * C121 + C23021 * C50688) * C39055) *
                C50667 -
            ((C39622 + C39621) * C39055 + (C39620 + C39619) * C39054 +
             (C39618 + C39617) * C39053 +
             (C19886 * C50688 + C19885 * C121) * C39052) *
                C50830) *
               C50639) *
              C251 +
          ((((C39261 + C39262) * C39052 + (C39263 + C39264) * C39053 +
             (C39265 + C39266) * C39054 + (C39277 + C39278) * C39055) *
                C50667 -
            (C39275 * C39055 + C39276 * C39054 + (C39262 + C39261) * C39053 +
             ((C19749 * C134 + C50538 * C144) * C50688 +
              (C19749 * C123 + C50538 * C130) * C121) *
                 C39052) *
                C50830) *
               C50829 +
           (((C19893 * C121 + C19894 * C50688) * C39052 +
             (C39623 + C39624) * C39053 + (C39625 + C39626) * C39054 +
             (C39627 + C39628) * C39055) *
                C50830 -
            (((C19749 * C6378 + C50538 * C6382) * C50688 +
              (C19749 * C6376 + C50538 * C6380) * C121) *
                 C39055 +
             (C39628 + C39627) * C39054 + (C39626 + C39625) * C39053 +
             (C39624 + C39623) * C39052) *
                C50667) *
               C50639) *
              C50574)) /
            (p * q * std::sqrt(p + q));
    d2ee[182] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
                 C16965 * C124 + C16960 * C131) *
                    C121 +
                (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
                 C16965 * C135 + C16960 * C145) *
                    C50688) *
                   C33658 +
               ((C16963 * C397 + C16958 * C411 + C16964 * C396 + C16959 * C410 +
                 C16965 * C395 + C16960 * C409) *
                    C121 +
                (C16963 * C407 + C16958 * C427 + C16964 * C406 + C16959 * C426 +
                 C16965 * C405 + C16960 * C425) *
                    C50688) *
                   C50764) *
                  C50603 * C50587 * C113 -
              (((C16965 * C404 + C16960 * C424 + C16964 * C405 + C16959 * C425 +
                 C16963 * C406 + C16958 * C426) *
                    C50688 +
                (C16965 * C394 + C16960 * C408 + C16964 * C395 + C16959 * C409 +
                 C16963 * C396 + C16958 * C410) *
                    C121) *
                   C50764 +
               ((C16965 * C136 + C16960 * C146 + C16964 * C135 + C16959 * C145 +
                 C16963 * C134 + C16958 * C144) *
                    C50688 +
                (C16965 * C125 + C16960 * C132 + C16964 * C124 + C16959 * C131 +
                 C16963 * C123 + C16958 * C130) *
                    C121) *
                   C33658) *
                  C50603 * C50587 * C114 +
              (((C16963 * C124 + C16958 * C131 + C16964 * C125 + C16959 * C132 +
                 C16965 * C126 + C16960 * C138) *
                    C121 +
                (C16963 * C135 + C16958 * C145 + C16964 * C136 + C16959 * C146 +
                 C16965 * C137 + C16960 * C147) *
                    C50688) *
                   C33658 +
               ((C16963 * C395 + C16958 * C409 + C16964 * C394 + C16959 * C408 +
                 C16965 * C402 + C16960 * C420) *
                    C121 +
                (C16963 * C405 + C16958 * C425 + C16964 * C404 + C16959 * C424 +
                 C16965 * C421 + C16960 * C432) *
                    C50688) *
                   C50764) *
                  C50603 * C50587 * C115 -
              (((C16965 * C642 + C16960 * C644 + C16964 * C421 + C16959 * C432 +
                 C16963 * C404 + C16958 * C424) *
                    C50688 +
                (C16965 * C641 + C16960 * C643 + C16964 * C402 + C16959 * C420 +
                 C16963 * C394 + C16958 * C408) *
                    C121) *
                   C50764 +
               ((C16965 * C140 + C16960 * C148 + C16964 * C137 + C16959 * C147 +
                 C16963 * C136 + C16958 * C146) *
                    C50688 +
                (C16965 * C127 + C16960 * C139 + C16964 * C126 + C16959 * C138 +
                 C16963 * C125 + C16958 * C132) *
                    C121) *
                   C33658) *
                  C50603 * C50587 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C16963 * C122 + C16958 * C129 + C16964 * C123 +
                  C16959 * C130 + C16965 * C124 + C16960 * C131) *
                     C121 +
                 (C16963 * C133 + C16958 * C143 + C16964 * C134 +
                  C16959 * C144 + C16965 * C135 + C16960 * C145) *
                     C50688) *
                    C33658 +
                ((C16963 * C397 + C16958 * C411 + C16964 * C396 +
                  C16959 * C410 + C16965 * C395 + C16960 * C409) *
                     C121 +
                 (C16963 * C407 + C16958 * C427 + C16964 * C406 +
                  C16959 * C426 + C16965 * C405 + C16960 * C425) *
                     C50688) *
                    C50764) *
                   C50603 * C248 -
               (((C17861 + C17862 + C17863) * C50688 +
                 (C17864 + C17865 + C17866) * C121) *
                    C50764 +
                ((C17168 + C17167 + C17166) * C50688 +
                 (C17165 + C17164 + C17163) * C121) *
                    C33658) *
                   C50603 * C249 +
               (((C17174 + C17173 + C17172) * C121 +
                 (C17171 + C17170 + C17169) * C50688) *
                    C33658 +
                ((C18797 + C18798 + C18799) * C121 +
                 (C18800 + C18801 + C18802) * C50688) *
                    C50764) *
                   C50603 * C250) *
                  C251 +
              ((((C17175 + C17176 + C17177) * C121 +
                 (C17178 + C17179 + C17180) * C50688) *
                    C33658 +
                ((C17867 + C17868 + C17869) * C121 +
                 (C17870 + C17871 + C17872) * C50688) *
                    C50764) *
                   C50603 * C249 -
               (((C16965 * C404 + C16960 * C424 + C16964 * C405 +
                  C16959 * C425 + C16963 * C406 + C16958 * C426) *
                     C50688 +
                 (C16965 * C394 + C16960 * C408 + C16964 * C395 +
                  C16959 * C409 + C16963 * C396 + C16958 * C410) *
                     C121) *
                    C50764 +
                ((C16965 * C136 + C16960 * C146 + C16964 * C135 +
                  C16959 * C145 + C16963 * C134 + C16958 * C144) *
                     C50688 +
                 (C16965 * C125 + C16960 * C132 + C16964 * C124 +
                  C16959 * C131 + C16963 * C123 + C16958 * C130) *
                     C121) *
                    C33658) *
                   C50603 * C248 -
               (((C16965 * C1434 + C16960 * C1442 + C16964 * C1435 +
                  C16959 * C1443 + C16963 * C1436 + C16958 * C1444) *
                     C50688 +
                 (C16965 * C1430 + C16960 * C1438 + C16964 * C1431 +
                  C16959 * C1439 + C16963 * C1432 + C16958 * C1440) *
                     C121) *
                    C50764 +
                ((C17186 + C17185 + C17184) * C50688 +
                 (C17183 + C17182 + C17181) * C121) *
                    C33658) *
                   C50603 * C250) *
                  C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
              C16965 * C124 + C16960 * C131) *
                 C121 +
             (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
              C16965 * C135 + C16960 * C145) *
                 C50688) *
                C33658 +
            ((C34001 + C34002 + C34003) * C121 +
             (C34004 + C34005 + C34006) * C50688) *
                C50764) *
               C391 -
           (((C34007 + C34008 + C34009) * C50688 +
             (C34010 + C34011 + C34012) * C121) *
                C50764 +
            ((C34006 + C34005 + C34004) * C50688 +
             (C34003 + C34002 + C34001) * C121) *
                C33658) *
               C392 +
           (((C34012 + C34011 + C34010) * C121 +
             (C34009 + C34008 + C34007) * C50688) *
                C33658 +
            ((C16963 * C1717 + C16958 * C1725 + C16964 * C1716 +
              C16959 * C1724 + C16965 * C1715 + C16960 * C1723) *
                 C121 +
             (C16963 * C1721 + C16958 * C1729 + C16964 * C1720 +
              C16959 * C1728 + C16965 * C1719 + C16960 * C1727) *
                 C50688) *
                C50764) *
               C393) *
              C50587 * C251 +
          ((((C34013 + C34014 + C34015) * C121 +
             (C34016 + C34017 + C34018) * C50688) *
                C33658 +
            ((C34019 + C34020 + C34021) * C121 +
             (C34022 + C34023 + C34024) * C50688) *
                C50764) *
               C392 -
           (((C34018 + C34017 + C34016) * C50688 +
             (C34015 + C34014 + C34013) * C121) *
                C50764 +
            ((C16965 * C136 + C16960 * C146 + C16964 * C135 + C16959 * C145 +
              C16963 * C134 + C16958 * C144) *
                 C50688 +
             (C16965 * C125 + C16960 * C132 + C16964 * C124 + C16959 * C131 +
              C16963 * C123 + C16958 * C130) *
                 C121) *
                C33658) *
               C391 -
           (((C16965 * C1718 + C16960 * C1726 + C16964 * C1719 +
              C16959 * C1727 + C16963 * C1720 + C16958 * C1728) *
                 C50688 +
             (C16965 * C1714 + C16960 * C1722 + C16964 * C1715 +
              C16959 * C1723 + C16963 * C1716 + C16958 * C1724) *
                 C121) *
                C50764 +
            ((C34024 + C34023 + C34022) * C50688 +
             (C34021 + C34020 + C34019) * C121) *
                C33658) *
               C393) *
              C50587 * C50574)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C19749 * C122 + C50538 * C129) * C2164 +
            (C19749 * C133 + C50538 * C143) * C2159 + C19885 * C2165 +
            C19886 * C2160 + C19887 * C2166 + C19888 * C2161) *
               C33658 +
           (C22043 * C2164 + C22044 * C2159 + C20372 * C2165 + C20371 * C2160 +
            C20370 * C2166 + C20369 * C2161) *
               C50764) *
              C50603 * C50587 * C113 -
          ((C20376 * C2161 + C20375 * C2166 + C20374 * C2160 + C20373 * C2165 +
            C22052 * C2159 + C22051 * C2164) *
               C50764 +
           (C19896 * C2161 + C19895 * C2166 + C19894 * C2160 + C19893 * C2165 +
            (C19749 * C134 + C50538 * C144) * C2159 +
            (C19749 * C123 + C50538 * C130) * C2164) *
               C33658) *
              C50603 * C50587 * C114 +
          (((C19749 * C124 + C50538 * C131) * C2164 +
            (C19749 * C135 + C50538 * C145) * C2159 + C20109 * C2165 +
            C20110 * C2160 + C20111 * C2166 + C20112 * C2161) *
               C33658 +
           (C22397 * C2164 + C22398 * C2159 + C22235 * C2165 + C22236 * C2160 +
            C31431 * C2166 + C31432 * C2161) *
               C50764) *
              C50603 * C50587 * C115 -
          (((C19749 * C1434 + C50538 * C1442) * C2161 +
            (C19749 * C1430 + C50538 * C1438) * C2166 +
            (C19749 * C787 + C50538 * C793) * C2160 +
            (C19749 * C778 + C50538 * C783) * C2165 +
            (C19749 * C404 + C50538 * C424) * C2159 +
            (C19749 * C394 + C50538 * C408) * C2164) *
               C50764 +
           ((C19749 * C278 + C50538 * C290) * C2161 +
            (C19749 * C260 + C50538 * C274) * C2166 +
            (C19749 * C263 + C50538 * C283) * C2160 +
            (C19749 * C253 + C50538 * C267) * C2165 +
            (C19749 * C136 + C50538 * C146) * C2159 +
            (C19749 * C125 + C50538 * C132) * C2164) *
               C33658) *
              C50603 * C50587 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C2164 +
             (C19749 * C133 + C50538 * C143) * C2159 + C19885 * C2165 +
             C19886 * C2160 + C19887 * C2166 + C19888 * C2161) *
                C33658 +
            (C22043 * C2164 + C22044 * C2159 + C20372 * C2165 + C20371 * C2160 +
             C20370 * C2166 + C20369 * C2161) *
                C50764) *
               C50603 * C248 -
           ((C20367 * C2161 + C20368 * C2166 + C20369 * C2160 + C20370 * C2165 +
             C20371 * C2159 + C20372 * C2164) *
                C50764 +
            (C19890 * C2161 + C19889 * C2166 + C19888 * C2160 + C19887 * C2165 +
             C19886 * C2159 + C19885 * C2164) *
                C33658) *
               C50603 * C249 +
           ((C19887 * C2164 + C19888 * C2159 + C19889 * C2165 + C19890 * C2160 +
             C19892 * C2166 + C19891 * C2161) *
                C33658 +
            (C20370 * C2164 + C20369 * C2159 + C20368 * C2165 + C20367 * C2160 +
             C21007 * C2166 + C21008 * C2161) *
                C50764) *
               C50603 * C250) *
              C251 +
          (((C19893 * C2164 + C19894 * C2159 + C19895 * C2165 + C19896 * C2160 +
             C19897 * C2166 + C19898 * C2161) *
                C33658 +
            (C20373 * C2164 + C20374 * C2159 + C20375 * C2165 + C20376 * C2160 +
             C20377 * C2166 + C20378 * C2161) *
                C50764) *
               C50603 * C249 -
           ((C20376 * C2161 + C20375 * C2166 + C20374 * C2160 + C20373 * C2165 +
             C22052 * C2159 + C22051 * C2164) *
                C50764 +
            (C19896 * C2161 + C19895 * C2166 + C19894 * C2160 + C19893 * C2165 +
             (C19749 * C134 + C50538 * C144) * C2159 +
             (C19749 * C123 + C50538 * C130) * C2164) *
                C33658) *
               C50603 * C248 -
           (((C19749 * C4061 + C50538 * C4065) * C2161 +
             (C19749 * C4059 + C50538 * C4063) * C2166 + C20378 * C2160 +
             C20377 * C2165 + C20376 * C2159 + C20375 * C2164) *
                C50764 +
            (C19900 * C2161 + C19899 * C2166 + C19898 * C2160 + C19897 * C2165 +
             C19896 * C2159 + C19895 * C2164) *
                C33658) *
               C50603 * C250) *
              C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C2164 +
             (C19749 * C133 + C50538 * C143) * C2159 + C19885 * C2165 +
             C19886 * C2160 + C19887 * C2166 + C19888 * C2161) *
                C33658 +
            (C36689 + C36690 + C36691 + C36692 + C36693 + C36694) * C50764) *
               C391 -
           ((C36695 + C36696 + C36697 + C36698 + C36699 + C36700) * C50764 +
            (C36694 + C36693 + C36692 + C36691 + C36690 + C36689) * C33658) *
               C392 +
           ((C36700 + C36699 + C36698 + C36697 + C36696 + C36695) * C33658 +
            (C22050 * C2164 + C22049 * C2159 + C22048 * C2165 + C22047 * C2160 +
             C23022 * C2166 + C23023 * C2161) *
                C50764) *
               C393) *
              C50587 * C251 +
          (((C36701 + C36702 + C36703 + C36704 + C36705 + C36706) * C33658 +
            (C36707 + C36708 + C36709 + C36710 + C36711 + C36712) * C50764) *
               C392 -
           ((C36706 + C36705 + C36704 + C36703 + C36702 + C36701) * C50764 +
            (C19896 * C2161 + C19895 * C2166 + C19894 * C2160 + C19893 * C2165 +
             (C19749 * C134 + C50538 * C144) * C2159 +
             (C19749 * C123 + C50538 * C130) * C2164) *
                C33658) *
               C391 -
           (((C19749 * C4475 + C50538 * C4483) * C2161 +
             (C19749 * C4471 + C50538 * C4477) * C2166 + C22058 * C2160 +
             C22057 * C2165 + C22056 * C2159 + C22055 * C2164) *
                C50764 +
            (C36712 + C36711 + C36710 + C36709 + C36708 + C36707) * C33658) *
               C393) *
              C50587 * C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * ((((C19749 * C122 + C50538 * C129) * C121 +
                                (C19749 * C133 + C50538 * C143) * C50688) *
                                   C39052 +
                               (C22043 * C121 + C22044 * C50688) * C39053 +
                               (C22045 * C121 + C22046 * C50688) * C39054 +
                               (C22050 * C121 + C22049 * C50688) * C39055) *
                                  C50603 * C50587 * C113 -
                              ((C22056 * C50688 + C22055 * C121) * C39055 +
                               (C22054 * C50688 + C22053 * C121) * C39054 +
                               (C22052 * C50688 + C22051 * C121) * C39053 +
                               ((C19749 * C134 + C50538 * C144) * C50688 +
                                (C19749 * C123 + C50538 * C130) * C121) *
                                   C39052) *
                                  C50603 * C50587 * C114 +
                              (((C19749 * C124 + C50538 * C131) * C121 +
                                (C19749 * C135 + C50538 * C145) * C50688) *
                                   C39052 +
                               (C22397 * C121 + C22398 * C50688) * C39053 +
                               (C22399 * C121 + C22400 * C50688) * C39054 +
                               ((C19749 * C1715 + C50538 * C1723) * C121 +
                                (C19749 * C1719 + C50538 * C1727) * C50688) *
                                   C39055) *
                                  C50603 * C50587 * C115 -
                              (((C19749 * C1718 + C50538 * C1726) * C50688 +
                                (C19749 * C1714 + C50538 * C1722) * C121) *
                                   C39055 +
                               ((C19749 * C419 + C50538 * C431) * C50688 +
                                (C19749 * C401 + C50538 * C415) * C121) *
                                   C39054 +
                               ((C19749 * C404 + C50538 * C424) * C50688 +
                                (C19749 * C394 + C50538 * C408) * C121) *
                                   C39053 +
                               ((C19749 * C136 + C50538 * C146) * C50688 +
                                (C19749 * C125 + C50538 * C132) * C121) *
                                   C39052) *
                                  C50603 * C50587 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((((C19749 * C122 + C50538 * C129) * C121 +
                                 (C19749 * C133 + C50538 * C143) * C50688) *
                                    C39052 +
                                (C22043 * C121 + C22044 * C50688) * C39053 +
                                (C22045 * C121 + C22046 * C50688) * C39054 +
                                (C22050 * C121 + C22049 * C50688) * C39055) *
                                   C50603 * C248 -
                               ((C22047 * C50688 + C22048 * C121) * C39055 +
                                (C20668 * C50688 + C20667 * C121) * C39054 +
                                (C20371 * C50688 + C20372 * C121) * C39053 +
                                (C19886 * C50688 + C19885 * C121) * C39052) *
                                   C50603 * C249 +
                               ((C19887 * C121 + C19888 * C50688) * C39052 +
                                (C20370 * C121 + C20369 * C50688) * C39053 +
                                (C20669 * C121 + C20670 * C50688) * C39054 +
                                (C23022 * C121 + C23023 * C50688) * C39055) *
                                   C50603 * C250) *
                                  C251 +
                              (((C19893 * C121 + C19894 * C50688) * C39052 +
                                (C20373 * C121 + C20374 * C50688) * C39053 +
                                (C21853 * C121 + C21854 * C50688) * C39054 +
                                (C22057 * C121 + C22058 * C50688) * C39055) *
                                   C50603 * C249 -
                               ((C22056 * C50688 + C22055 * C121) * C39055 +
                                (C22054 * C50688 + C22053 * C121) * C39054 +
                                (C22052 * C50688 + C22051 * C121) * C39053 +
                                ((C19749 * C134 + C50538 * C144) * C50688 +
                                 (C19749 * C123 + C50538 * C130) * C121) *
                                    C39052) *
                                   C50603 * C248 -
                               (((C19749 * C4475 + C50538 * C4483) * C50688 +
                                 (C19749 * C4471 + C50538 * C4477) * C121) *
                                    C39055 +
                                (C21856 * C50688 + C21855 * C121) * C39054 +
                                (C20376 * C50688 + C20375 * C121) * C39053 +
                                (C19896 * C50688 + C19895 * C121) * C39052) *
                                   C50603 * C250) *
                                  C50574)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C121 +
             (C19749 * C133 + C50538 * C143) * C50688) *
                C39052 +
            (C39253 + C39254) * C39053 + C39271 * C39054 + C39272 * C39055) *
               C391 -
           ((C39259 + C39260) * C39055 + (C39258 + C39257) * C39054 +
            (C39256 + C39255) * C39053 + (C39254 + C39253) * C39052) *
               C392 +
           (C39271 * C39052 + C39272 * C39053 + (C39260 + C39259) * C39054 +
            ((C19749 * C7278 + C50538 * C7282) * C121 +
             (C19749 * C7280 + C50538 * C7284) * C50688) *
                C39055) *
               C393) *
              C50587 * C251 +
          (((C39261 + C39262) * C39052 + (C39263 + C39264) * C39053 +
            (C39265 + C39266) * C39054 + (C39277 + C39278) * C39055) *
               C392 -
           (C39275 * C39055 + C39276 * C39054 + (C39262 + C39261) * C39053 +
            ((C19749 * C134 + C50538 * C144) * C50688 +
             (C19749 * C123 + C50538 * C130) * C121) *
                C39052) *
               C391 -
           (((C19749 * C7279 + C50538 * C7283) * C50688 +
             (C19749 * C7277 + C50538 * C7281) * C121) *
                C39055 +
            (C39278 + C39277) * C39054 + C39275 * C39053 + C39276 * C39052) *
               C393) *
              C50587 * C50574)) /
            (p * q * std::sqrt(p + q));
    d2ee[183] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C2164 +
             (C19749 * C133 + C50538 * C143) * C2159 + C19885 * C2165 +
             C19886 * C2160 + C19887 * C2166 + C19888 * C2161) *
                C33658 +
            (C36689 + C36690 + C36691 + C36692 + C36693 + C36694) * C50764) *
               C50830 -
           ((C36695 + C36696 + C36697 + C36698 + C36699 + C36700) * C50764 +
            (C36694 + C36693 + C36692 + C36691 + C36690 + C36689) * C33658) *
               C50667) *
              C50587 * C50872 +
          (((C36701 + C36702 + C36703 + C36704 + C36705 + C36706) * C33658 +
            (C36707 + C36708 + C36709 + C36710 + C36711 + C36712) * C50764) *
               C50667 -
           ((C36706 + C36705 + C36704 + C36703 + C36702 + C36701) * C50764 +
            (C19896 * C2161 + C19895 * C2166 + C19894 * C2160 + C19893 * C2165 +
             (C19749 * C134 + C50538 * C144) * C2159 +
             (C19749 * C123 + C50538 * C130) * C2164) *
                C33658) *
               C50830) *
              C50587 * C50873 +
          ((((C19749 * C124 + C50538 * C131) * C2164 +
             (C19749 * C135 + C50538 * C145) * C2159 + C20109 * C2165 +
             C20110 * C2160 + C20111 * C2166 + C20112 * C2161) *
                C33658 +
            (C37005 + C37006 + C37007 + C37008 + C37009 + C37010) * C50764) *
               C50830 -
           (((C19749 * C2554 + C50538 * C2558) * C2161 +
             (C19749 * C2549 + C50538 * C2555) * C2166 + C22238 * C2160 +
             C22237 * C2165 + C22400 * C2159 + C22399 * C2164) *
                C50764 +
            (C37010 + C37009 + C37008 + C37007 + C37006 + C37005) * C33658) *
               C50667) *
              C50587 * C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
              C16965 * C124 + C16960 * C131) *
                 C121 +
             (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
              C16965 * C135 + C16960 * C145) *
                 C50688) *
                C33658 +
            ((C34001 + C34002 + C34003) * C121 +
             (C34004 + C34005 + C34006) * C50688) *
                C50764) *
               C50830 -
           (((C34007 + C34008 + C34009) * C50688 +
             (C34010 + C34011 + C34012) * C121) *
                C50764 +
            ((C34006 + C34005 + C34004) * C50688 +
             (C34003 + C34002 + C34001) * C121) *
                C33658) *
               C50667) *
              C50587 * C50872 +
          ((((C34013 + C34014 + C34015) * C121 +
             (C34016 + C34017 + C34018) * C50688) *
                C33658 +
            ((C34019 + C34020 + C34021) * C121 +
             (C34022 + C34023 + C34024) * C50688) *
                C50764) *
               C50667 -
           (((C34018 + C34017 + C34016) * C50688 +
             (C34015 + C34014 + C34013) * C121) *
                C50764 +
            ((C16965 * C136 + C16960 * C146 + C16964 * C135 + C16959 * C145 +
              C16963 * C134 + C16958 * C144) *
                 C50688 +
             (C16965 * C125 + C16960 * C132 + C16964 * C124 + C16959 * C131 +
              C16963 * C123 + C16958 * C130) *
                 C121) *
                C33658) *
               C50830) *
              C50587 * C50873 +
          ((((C16963 * C124 + C16958 * C131 + C16964 * C125 + C16959 * C132 +
              C16965 * C126 + C16960 * C138) *
                 C121 +
             (C16963 * C135 + C16958 * C145 + C16964 * C136 + C16959 * C146 +
              C16965 * C137 + C16960 * C147) *
                 C50688) *
                C33658 +
            ((C34329 + C34330 + C34331) * C121 +
             (C34332 + C34333 + C34334) * C50688) *
                C50764) *
               C50830 -
           (((C16965 * C422 + C16960 * C433 + C16964 * C419 + C16959 * C431 +
              C16963 * C418 + C16958 * C430) *
                 C50688 +
             (C16965 * C403 + C16960 * C423 + C16964 * C401 + C16959 * C415 +
              C16963 * C400 + C16958 * C414) *
                 C121) *
                C50764 +
            ((C34334 + C34333 + C34332) * C50688 +
             (C34331 + C34330 + C34329) * C121) *
                C33658) *
               C50667) *
              C50587 * C536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C121 +
             (C19749 * C133 + C50538 * C143) * C50688) *
                C39052 +
            (C39253 + C39254) * C39053 + C39271 * C39054 + C39272 * C39055) *
               C50830 -
           ((C39259 + C39260) * C39055 + (C39258 + C39257) * C39054 +
            (C39256 + C39255) * C39053 + (C39254 + C39253) * C39052) *
               C50667) *
              C50587 * C50872 +
          (((C39261 + C39262) * C39052 + (C39263 + C39264) * C39053 +
            (C39265 + C39266) * C39054 + (C39277 + C39278) * C39055) *
               C50667 -
           (C39275 * C39055 + C39276 * C39054 + (C39262 + C39261) * C39053 +
            ((C19749 * C134 + C50538 * C144) * C50688 +
             (C19749 * C123 + C50538 * C130) * C121) *
                C39052) *
               C50830) *
              C50587 * C50873 +
          ((((C19749 * C124 + C50538 * C131) * C121 +
             (C19749 * C135 + C50538 * C145) * C50688) *
                C39052 +
            (C39475 + C39476) * C39053 + (C39477 + C39478) * C39054 +
            (C39485 + C39486) * C39055) *
               C50830 -
           (((C19749 * C5373 + C50538 * C5377) * C50688 +
             (C19749 * C5368 + C50538 * C5374) * C121) *
                C39055 +
            (C39486 + C39485) * C39054 + (C39478 + C39477) * C39053 +
            (C39476 + C39475) * C39052) *
               C50667) *
              C50587 * C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[184] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
              C16965 * C124 + C16960 * C131) *
                 C121 +
             (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
              C16965 * C135 + C16960 * C145) *
                 C50688) *
                C33658 +
            ((C16963 * C397 + C16958 * C411 + C16964 * C396 + C16959 * C410 +
              C16965 * C395 + C16960 * C409) *
                 C121 +
             (C16963 * C407 + C16958 * C427 + C16964 * C406 + C16959 * C426 +
              C16965 * C405 + C16960 * C425) *
                 C50688) *
                C50764) *
               C50603 * C248 -
           (((C17861 + C17862 + C17863) * C50688 +
             (C17864 + C17865 + C17866) * C121) *
                C50764 +
            ((C17168 + C17167 + C17166) * C50688 +
             (C17165 + C17164 + C17163) * C121) *
                C33658) *
               C50603 * C249 +
           (((C17174 + C17173 + C17172) * C121 +
             (C17171 + C17170 + C17169) * C50688) *
                C33658 +
            ((C18797 + C18798 + C18799) * C121 +
             (C18800 + C18801 + C18802) * C50688) *
                C50764) *
               C50603 * C250) *
              C251 +
          ((((C17175 + C17176 + C17177) * C121 +
             (C17178 + C17179 + C17180) * C50688) *
                C33658 +
            ((C17867 + C17868 + C17869) * C121 +
             (C17870 + C17871 + C17872) * C50688) *
                C50764) *
               C50603 * C249 -
           (((C16965 * C404 + C16960 * C424 + C16964 * C405 + C16959 * C425 +
              C16963 * C406 + C16958 * C426) *
                 C50688 +
             (C16965 * C394 + C16960 * C408 + C16964 * C395 + C16959 * C409 +
              C16963 * C396 + C16958 * C410) *
                 C121) *
                C50764 +
            ((C16965 * C136 + C16960 * C146 + C16964 * C135 + C16959 * C145 +
              C16963 * C134 + C16958 * C144) *
                 C50688 +
             (C16965 * C125 + C16960 * C132 + C16964 * C124 + C16959 * C131 +
              C16963 * C123 + C16958 * C130) *
                 C121) *
                C33658) *
               C50603 * C248 -
           (((C16965 * C1434 + C16960 * C1442 + C16964 * C1435 +
              C16959 * C1443 + C16963 * C1436 + C16958 * C1444) *
                 C50688 +
             (C16965 * C1430 + C16960 * C1438 + C16964 * C1431 +
              C16959 * C1439 + C16963 * C1432 + C16958 * C1440) *
                 C121) *
                C50764 +
            ((C17186 + C17185 + C17184) * C50688 +
             (C17183 + C17182 + C17181) * C121) *
                C33658) *
               C50603 * C250) *
              C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
             C16965 * C124 + C16960 * C131) *
                C121 +
            (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
             C16965 * C135 + C16960 * C145) *
                C50688) *
               C33658 +
           ((C16963 * C397 + C16958 * C411 + C16964 * C396 + C16959 * C410 +
             C16965 * C395 + C16960 * C409) *
                C121 +
            (C16963 * C407 + C16958 * C427 + C16964 * C406 + C16959 * C426 +
             C16965 * C405 + C16960 * C425) *
                C50688) *
               C50764) *
              C50603 * C50587 * C113 -
          (((C16965 * C404 + C16960 * C424 + C16964 * C405 + C16959 * C425 +
             C16963 * C406 + C16958 * C426) *
                C50688 +
            (C16965 * C394 + C16960 * C408 + C16964 * C395 + C16959 * C409 +
             C16963 * C396 + C16958 * C410) *
                C121) *
               C50764 +
           ((C16965 * C136 + C16960 * C146 + C16964 * C135 + C16959 * C145 +
             C16963 * C134 + C16958 * C144) *
                C50688 +
            (C16965 * C125 + C16960 * C132 + C16964 * C124 + C16959 * C131 +
             C16963 * C123 + C16958 * C130) *
                C121) *
               C33658) *
              C50603 * C50587 * C114 +
          (((C16963 * C124 + C16958 * C131 + C16964 * C125 + C16959 * C132 +
             C16965 * C126 + C16960 * C138) *
                C121 +
            (C16963 * C135 + C16958 * C145 + C16964 * C136 + C16959 * C146 +
             C16965 * C137 + C16960 * C147) *
                C50688) *
               C33658 +
           ((C16963 * C395 + C16958 * C409 + C16964 * C394 + C16959 * C408 +
             C16965 * C402 + C16960 * C420) *
                C121 +
            (C16963 * C405 + C16958 * C425 + C16964 * C404 + C16959 * C424 +
             C16965 * C421 + C16960 * C432) *
                C50688) *
               C50764) *
              C50603 * C50587 * C115 -
          (((C16965 * C642 + C16960 * C644 + C16964 * C421 + C16959 * C432 +
             C16963 * C404 + C16958 * C424) *
                C50688 +
            (C16965 * C641 + C16960 * C643 + C16964 * C402 + C16959 * C420 +
             C16963 * C394 + C16958 * C408) *
                C121) *
               C50764 +
           ((C16965 * C140 + C16960 * C148 + C16964 * C137 + C16959 * C147 +
             C16963 * C136 + C16958 * C146) *
                C50688 +
            (C16965 * C127 + C16960 * C139 + C16964 * C126 + C16959 * C138 +
             C16963 * C125 + C16958 * C132) *
                C121) *
               C33658) *
              C50603 * C50587 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19749 * C122 + C50538 * C129) * C2164 +
            (C19749 * C133 + C50538 * C143) * C2159 + C19885 * C2165 +
            C19886 * C2160 + C19887 * C2166 + C19888 * C2161) *
               C33658 +
           (C22043 * C2164 + C22044 * C2159 + C20372 * C2165 + C20371 * C2160 +
            C20370 * C2166 + C20369 * C2161) *
               C50764) *
              C50603 * C50587 * C113 -
          ((C20376 * C2161 + C20375 * C2166 + C20374 * C2160 + C20373 * C2165 +
            C22052 * C2159 + C22051 * C2164) *
               C50764 +
           (C19896 * C2161 + C19895 * C2166 + C19894 * C2160 + C19893 * C2165 +
            (C19749 * C134 + C50538 * C144) * C2159 +
            (C19749 * C123 + C50538 * C130) * C2164) *
               C33658) *
              C50603 * C50587 * C114 +
          (((C19749 * C124 + C50538 * C131) * C2164 +
            (C19749 * C135 + C50538 * C145) * C2159 + C20109 * C2165 +
            C20110 * C2160 + C20111 * C2166 + C20112 * C2161) *
               C33658 +
           (C22397 * C2164 + C22398 * C2159 + C22235 * C2165 + C22236 * C2160 +
            C31431 * C2166 + C31432 * C2161) *
               C50764) *
              C50603 * C50587 * C115 -
          (((C19749 * C1434 + C50538 * C1442) * C2161 +
            (C19749 * C1430 + C50538 * C1438) * C2166 +
            (C19749 * C787 + C50538 * C793) * C2160 +
            (C19749 * C778 + C50538 * C783) * C2165 +
            (C19749 * C404 + C50538 * C424) * C2159 +
            (C19749 * C394 + C50538 * C408) * C2164) *
               C50764 +
           ((C19749 * C278 + C50538 * C290) * C2161 +
            (C19749 * C260 + C50538 * C274) * C2166 +
            (C19749 * C263 + C50538 * C283) * C2160 +
            (C19749 * C253 + C50538 * C267) * C2165 +
            (C19749 * C136 + C50538 * C146) * C2159 +
            (C19749 * C125 + C50538 * C132) * C2164) *
               C33658) *
              C50603 * C50587 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C2164 +
             (C19749 * C133 + C50538 * C143) * C2159 + C19885 * C2165 +
             C19886 * C2160 + C19887 * C2166 + C19888 * C2161) *
                C33658 +
            (C22043 * C2164 + C22044 * C2159 + C20372 * C2165 + C20371 * C2160 +
             C20370 * C2166 + C20369 * C2161) *
                C50764) *
               C50603 * C248 -
           ((C20367 * C2161 + C20368 * C2166 + C20369 * C2160 + C20370 * C2165 +
             C20371 * C2159 + C20372 * C2164) *
                C50764 +
            (C19890 * C2161 + C19889 * C2166 + C19888 * C2160 + C19887 * C2165 +
             C19886 * C2159 + C19885 * C2164) *
                C33658) *
               C50603 * C249 +
           ((C19887 * C2164 + C19888 * C2159 + C19889 * C2165 + C19890 * C2160 +
             C19892 * C2166 + C19891 * C2161) *
                C33658 +
            (C20370 * C2164 + C20369 * C2159 + C20368 * C2165 + C20367 * C2160 +
             C21007 * C2166 + C21008 * C2161) *
                C50764) *
               C50603 * C250) *
              C251 +
          (((C19893 * C2164 + C19894 * C2159 + C19895 * C2165 + C19896 * C2160 +
             C19897 * C2166 + C19898 * C2161) *
                C33658 +
            (C20373 * C2164 + C20374 * C2159 + C20375 * C2165 + C20376 * C2160 +
             C20377 * C2166 + C20378 * C2161) *
                C50764) *
               C50603 * C249 -
           ((C20376 * C2161 + C20375 * C2166 + C20374 * C2160 + C20373 * C2165 +
             C22052 * C2159 + C22051 * C2164) *
                C50764 +
            (C19896 * C2161 + C19895 * C2166 + C19894 * C2160 + C19893 * C2165 +
             (C19749 * C134 + C50538 * C144) * C2159 +
             (C19749 * C123 + C50538 * C130) * C2164) *
                C33658) *
               C50603 * C248 -
           (((C19749 * C4061 + C50538 * C4065) * C2161 +
             (C19749 * C4059 + C50538 * C4063) * C2166 + C20378 * C2160 +
             C20377 * C2165 + C20376 * C2159 + C20375 * C2164) *
                C50764 +
            (C19900 * C2161 + C19899 * C2166 + C19898 * C2160 + C19897 * C2165 +
             C19896 * C2159 + C19895 * C2164) *
                C33658) *
               C50603 * C250) *
              C50574)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19749 * C122 + C50538 * C129) * C121 +
            (C19749 * C133 + C50538 * C143) * C50688) *
               C39052 +
           (C22043 * C121 + C22044 * C50688) * C39053 +
           (C22045 * C121 + C22046 * C50688) * C39054 +
           (C22050 * C121 + C22049 * C50688) * C39055) *
              C50603 * C50587 * C113 -
          ((C22056 * C50688 + C22055 * C121) * C39055 +
           (C22054 * C50688 + C22053 * C121) * C39054 +
           (C22052 * C50688 + C22051 * C121) * C39053 +
           ((C19749 * C134 + C50538 * C144) * C50688 +
            (C19749 * C123 + C50538 * C130) * C121) *
               C39052) *
              C50603 * C50587 * C114 +
          (((C19749 * C124 + C50538 * C131) * C121 +
            (C19749 * C135 + C50538 * C145) * C50688) *
               C39052 +
           (C22397 * C121 + C22398 * C50688) * C39053 +
           (C22399 * C121 + C22400 * C50688) * C39054 +
           ((C19749 * C1715 + C50538 * C1723) * C121 +
            (C19749 * C1719 + C50538 * C1727) * C50688) *
               C39055) *
              C50603 * C50587 * C115 -
          (((C19749 * C1718 + C50538 * C1726) * C50688 +
            (C19749 * C1714 + C50538 * C1722) * C121) *
               C39055 +
           ((C19749 * C419 + C50538 * C431) * C50688 +
            (C19749 * C401 + C50538 * C415) * C121) *
               C39054 +
           ((C19749 * C404 + C50538 * C424) * C50688 +
            (C19749 * C394 + C50538 * C408) * C121) *
               C39053 +
           ((C19749 * C136 + C50538 * C146) * C50688 +
            (C19749 * C125 + C50538 * C132) * C121) *
               C39052) *
              C50603 * C50587 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C121 +
             (C19749 * C133 + C50538 * C143) * C50688) *
                C39052 +
            (C22043 * C121 + C22044 * C50688) * C39053 +
            (C22045 * C121 + C22046 * C50688) * C39054 +
            (C22050 * C121 + C22049 * C50688) * C39055) *
               C50603 * C248 -
           ((C22047 * C50688 + C22048 * C121) * C39055 +
            (C20668 * C50688 + C20667 * C121) * C39054 +
            (C20371 * C50688 + C20372 * C121) * C39053 +
            (C19886 * C50688 + C19885 * C121) * C39052) *
               C50603 * C249 +
           ((C19887 * C121 + C19888 * C50688) * C39052 +
            (C20370 * C121 + C20369 * C50688) * C39053 +
            (C20669 * C121 + C20670 * C50688) * C39054 +
            (C23022 * C121 + C23023 * C50688) * C39055) *
               C50603 * C250) *
              C251 +
          (((C19893 * C121 + C19894 * C50688) * C39052 +
            (C20373 * C121 + C20374 * C50688) * C39053 +
            (C21853 * C121 + C21854 * C50688) * C39054 +
            (C22057 * C121 + C22058 * C50688) * C39055) *
               C50603 * C249 -
           ((C22056 * C50688 + C22055 * C121) * C39055 +
            (C22054 * C50688 + C22053 * C121) * C39054 +
            (C22052 * C50688 + C22051 * C121) * C39053 +
            ((C19749 * C134 + C50538 * C144) * C50688 +
             (C19749 * C123 + C50538 * C130) * C121) *
                C39052) *
               C50603 * C248 -
           (((C19749 * C4475 + C50538 * C4483) * C50688 +
             (C19749 * C4471 + C50538 * C4477) * C121) *
                C39055 +
            (C21856 * C50688 + C21855 * C121) * C39054 +
            (C20376 * C50688 + C20375 * C121) * C39053 +
            (C19896 * C50688 + C19895 * C121) * C39052) *
               C50603 * C250) *
              C50574)) /
            (p * q * std::sqrt(p + q));
    d2ee[185] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C2164 +
             (C19749 * C133 + C50538 * C143) * C2159 + C19885 * C2165 +
             C19886 * C2160 + C19887 * C2166 + C19888 * C2161) *
                C33658 +
            (C36689 + C36690 + C36691 + C36692 + C36693 + C36694) * C50764) *
               C50603 * C50874 -
           ((C37210 + C37209 + C37208 + C37207 + C37206 + C37205) * C50764 +
            (C19890 * C2161 + C19889 * C2166 + C19888 * C2160 + C19887 * C2165 +
             C19886 * C2159 + C19885 * C2164) *
                C33658) *
               C50603 * C50875 +
           ((C19887 * C2164 + C19888 * C2159 + C19889 * C2165 + C19890 * C2160 +
             C19892 * C2166 + C19891 * C2161) *
                C33658 +
            (C20370 * C2164 + C20369 * C2159 + C20368 * C2165 + C20367 * C2160 +
             C21007 * C2166 + C21008 * C2161) *
                C50764) *
               C50603 * C1199) *
              C50821 +
          (((C19893 * C2164 + C19894 * C2159 + C19895 * C2165 + C19896 * C2160 +
             C19897 * C2166 + C19898 * C2161) *
                C33658 +
            (C37211 + C37212 + C37213 + C37214 + C37215 + C37216) * C50764) *
               C50603 * C50875 -
           ((C36706 + C36705 + C36704 + C36703 + C36702 + C36701) * C50764 +
            (C19896 * C2161 + C19895 * C2166 + C19894 * C2160 + C19893 * C2165 +
             (C19749 * C134 + C50538 * C144) * C2159 +
             (C19749 * C123 + C50538 * C130) * C2164) *
                C33658) *
               C50603 * C50874 -
           (((C19749 * C4061 + C50538 * C4065) * C2161 +
             (C19749 * C4059 + C50538 * C4063) * C2166 + C20378 * C2160 +
             C20377 * C2165 + C20376 * C2159 + C20375 * C2164) *
                C50764 +
            (C19900 * C2161 + C19899 * C2166 + C19898 * C2160 + C19897 * C2165 +
             C19896 * C2159 + C19895 * C2164) *
                C33658) *
               C50603 * C1199) *
              C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
              C16965 * C124 + C16960 * C131) *
                 C121 +
             (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
              C16965 * C135 + C16960 * C145) *
                 C50688) *
                C33658 +
            ((C34001 + C34002 + C34003) * C121 +
             (C34004 + C34005 + C34006) * C50688) *
                C50764) *
               C50603 * C50874 -
           (((C17861 + C17862 + C17863) * C50688 +
             (C17864 + C17865 + C17866) * C121) *
                C50764 +
            ((C17168 + C17167 + C17166) * C50688 +
             (C17165 + C17164 + C17163) * C121) *
                C33658) *
               C50603 * C50875 +
           (((C17174 + C17173 + C17172) * C121 +
             (C17171 + C17170 + C17169) * C50688) *
                C33658 +
            ((C18797 + C18798 + C18799) * C121 +
             (C18800 + C18801 + C18802) * C50688) *
                C50764) *
               C50603 * C1199) *
              C50821 +
          ((((C17175 + C17176 + C17177) * C121 +
             (C17178 + C17179 + C17180) * C50688) *
                C33658 +
            ((C17867 + C17868 + C17869) * C121 +
             (C17870 + C17871 + C17872) * C50688) *
                C50764) *
               C50603 * C50875 -
           (((C34018 + C34017 + C34016) * C50688 +
             (C34015 + C34014 + C34013) * C121) *
                C50764 +
            ((C16965 * C136 + C16960 * C146 + C16964 * C135 + C16959 * C145 +
              C16963 * C134 + C16958 * C144) *
                 C50688 +
             (C16965 * C125 + C16960 * C132 + C16964 * C124 + C16959 * C131 +
              C16963 * C123 + C16958 * C130) *
                 C121) *
                C33658) *
               C50603 * C50874 -
           (((C16965 * C1434 + C16960 * C1442 + C16964 * C1435 +
              C16959 * C1443 + C16963 * C1436 + C16958 * C1444) *
                 C50688 +
             (C16965 * C1430 + C16960 * C1438 + C16964 * C1431 +
              C16959 * C1439 + C16963 * C1432 + C16958 * C1440) *
                 C121) *
                C50764 +
            ((C17186 + C17185 + C17184) * C50688 +
             (C17183 + C17182 + C17181) * C121) *
                C33658) *
               C50603 * C1199) *
              C50574)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C121 +
             (C19749 * C133 + C50538 * C143) * C50688) *
                C39052 +
            (C39253 + C39254) * C39053 + C39271 * C39054 + C39272 * C39055) *
               C50603 * C50874 -
           (C39893 * C39055 + C39894 * C39054 + (C39618 + C39617) * C39053 +
            (C19886 * C50688 + C19885 * C121) * C39052) *
               C50603 * C50875 +
           ((C19887 * C121 + C19888 * C50688) * C39052 +
            (C20370 * C121 + C20369 * C50688) * C39053 +
            (C20669 * C121 + C20670 * C50688) * C39054 +
            (C23022 * C121 + C23023 * C50688) * C39055) *
               C50603 * C1199) *
              C50821 +
          (((C19893 * C121 + C19894 * C50688) * C39052 +
            (C39623 + C39624) * C39053 + (C39625 + C39626) * C39054 +
            (C39627 + C39628) * C39055) *
               C50603 * C50875 -
           (C39275 * C39055 + C39276 * C39054 + (C39262 + C39261) * C39053 +
            ((C19749 * C134 + C50538 * C144) * C50688 +
             (C19749 * C123 + C50538 * C130) * C121) *
                C39052) *
               C50603 * C50874 -
           (((C19749 * C4475 + C50538 * C4483) * C50688 +
             (C19749 * C4471 + C50538 * C4477) * C121) *
                C39055 +
            (C21856 * C50688 + C21855 * C121) * C39054 +
            (C20376 * C50688 + C20375 * C121) * C39053 +
            (C19896 * C50688 + C19895 * C121) * C39052) *
               C50603 * C1199) *
              C50574)) /
            (p * q * std::sqrt(p + q));
    d2ee[186] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C2164 +
             (C19749 * C133 + C50538 * C143) * C2159 + C19885 * C2165 +
             C19886 * C2160 + C19887 * C2166 + C19888 * C2161) *
                C33658 +
            (C36689 + C36690 + C36691 + C36692 + C36693 + C36694) * C50764) *
               C50830 -
           ((C36695 + C36696 + C36697 + C36698 + C36699 + C36700) * C50764 +
            (C36694 + C36693 + C36692 + C36691 + C36690 + C36689) * C33658) *
               C50667) *
              C50874 +
          (((C37205 + C37206 + C37207 + C37208 + C37209 + C37210) * C33658 +
            (C37607 + C37608 + C37609 + C37610 + C37611 + C37612) * C50764) *
               C50667 -
           ((C37210 + C37209 + C37208 + C37207 + C37206 + C37205) * C50764 +
            (C19890 * C2161 + C19889 * C2166 + C19888 * C2160 + C19887 * C2165 +
             C19886 * C2159 + C19885 * C2164) *
                C33658) *
               C50830) *
              C50875 +
          (((C19887 * C2164 + C19888 * C2159 + C19889 * C2165 + C19890 * C2160 +
             C19892 * C2166 + C19891 * C2161) *
                C33658 +
            (C38099 + C38100 + C38101 + C38102 + C38103 + C38104) * C50764) *
               C50830 -
           (((C19749 * C20651 + C50538 * C20653) * C2161 +
             (C19749 * C20650 + C50538 * C20652) * C2166 + C20672 * C2160 +
             C20671 * C2165 + C20670 * C2159 + C20669 * C2164) *
                C50764 +
            (C38104 + C38103 + C38102 + C38101 + C38100 + C38099) * C33658) *
               C50667) *
              C1199) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
              C16965 * C124 + C16960 * C131) *
                 C121 +
             (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
              C16965 * C135 + C16960 * C145) *
                 C50688) *
                C33658 +
            ((C34001 + C34002 + C34003) * C121 +
             (C34004 + C34005 + C34006) * C50688) *
                C50764) *
               C50830 -
           (((C34007 + C34008 + C34009) * C50688 +
             (C34010 + C34011 + C34012) * C121) *
                C50764 +
            ((C34006 + C34005 + C34004) * C50688 +
             (C34003 + C34002 + C34001) * C121) *
                C33658) *
               C50667) *
              C50874 +
          ((((C17866 + C17865 + C17864) * C121 +
             (C17863 + C17862 + C17861) * C50688) *
                C33658 +
            ((C18293 + C18294 + C18295) * C121 +
             (C18296 + C18297 + C18298) * C50688) *
                C50764) *
               C50667 -
           (((C17861 + C17862 + C17863) * C50688 +
             (C17864 + C17865 + C17866) * C121) *
                C50764 +
            ((C17168 + C17167 + C17166) * C50688 +
             (C17165 + C17164 + C17163) * C121) *
                C33658) *
               C50830) *
              C50875 +
          ((((C17174 + C17173 + C17172) * C121 +
             (C17171 + C17170 + C17169) * C50688) *
                C33658 +
            ((C18797 + C18798 + C18799) * C121 +
             (C18800 + C18801 + C18802) * C50688) *
                C50764) *
               C50830 -
           (((C16965 * C2554 + C16960 * C2558 + C16964 * C2553 +
              C16959 * C2557 + C16963 * C2552 + C16958 * C2556) *
                 C50688 +
             (C16965 * C2549 + C16960 * C2555 + C16964 * C2548 +
              C16959 * C2551 + C16963 * C2547 + C16958 * C2550) *
                 C121) *
                C50764 +
            ((C18802 + C18801 + C18800) * C50688 +
             (C18799 + C18798 + C18797) * C121) *
                C33658) *
               C50667) *
              C1199) *
         C50568) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C121 +
             (C19749 * C133 + C50538 * C143) * C50688) *
                C39052 +
            (C39253 + C39254) * C39053 + C39271 * C39054 + C39272 * C39055) *
               C50830 -
           ((C39259 + C39260) * C39055 + (C39258 + C39257) * C39054 +
            (C39256 + C39255) * C39053 + (C39254 + C39253) * C39052) *
               C50667) *
              C50874 +
          (((C39617 + C39618) * C39052 + (C39619 + C39620) * C39053 +
            (C39621 + C39622) * C39054 + (C39891 + C39892) * C39055) *
               C50667 -
           (C39893 * C39055 + C39894 * C39054 + (C39618 + C39617) * C39053 +
            (C19886 * C50688 + C19885 * C121) * C39052) *
               C50830) *
              C50875 +
          (((C19887 * C121 + C19888 * C50688) * C39052 +
            (C40221 + C40222) * C39053 + (C40223 + C40224) * C39054 +
            (C40225 + C40226) * C39055) *
               C50830 -
           (((C19749 * C23005 + C50538 * C23007) * C50688 +
             (C19749 * C23004 + C50538 * C23006) * C121) *
                C39055 +
            (C40226 + C40225) * C39054 + (C40224 + C40223) * C39053 +
            (C40222 + C40221) * C39052) *
               C50667) *
              C1199) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C16963 * C122 + C16958 * C129 + C16964 * C123 +
                  C16959 * C130 + C16965 * C124 + C16960 * C131) *
                     C121 +
                 (C16963 * C133 + C16958 * C143 + C16964 * C134 +
                  C16959 * C144 + C16965 * C135 + C16960 * C145) *
                     C50688) *
                    C33658 +
                ((C34001 + C34002 + C34003) * C121 +
                 (C34004 + C34005 + C34006) * C50688) *
                    C50764) *
                   C50603 * C893 -
               (((C17861 + C17862 + C17863) * C50688 +
                 (C17864 + C17865 + C17866) * C121) *
                    C50764 +
                ((C17168 + C17167 + C17166) * C50688 +
                 (C17165 + C17164 + C17163) * C121) *
                    C33658) *
                   C50603 * C50639) *
                  C895 +
              ((((C17175 + C17176 + C17177) * C121 +
                 (C17178 + C17179 + C17180) * C50688) *
                    C33658 +
                ((C17867 + C17868 + C17869) * C121 +
                 (C17870 + C17871 + C17872) * C50688) *
                    C50764) *
                   C50603 * C50639 -
               (((C34018 + C34017 + C34016) * C50688 +
                 (C34015 + C34014 + C34013) * C121) *
                    C50764 +
                ((C16965 * C136 + C16960 * C146 + C16964 * C135 +
                  C16959 * C145 + C16963 * C134 + C16958 * C144) *
                     C50688 +
                 (C16965 * C125 + C16960 * C132 + C16964 * C124 +
                  C16959 * C131 + C16963 * C123 + C16958 * C130) *
                     C121) *
                    C33658) *
                   C50603 * C893) *
                  C896 +
              ((((C16963 * C124 + C16958 * C131 + C16964 * C125 +
                  C16959 * C132 + C16965 * C126 + C16960 * C138) *
                     C121 +
                 (C16963 * C135 + C16958 * C145 + C16964 * C136 +
                  C16959 * C146 + C16965 * C137 + C16960 * C147) *
                     C50688) *
                    C33658 +
                ((C34329 + C34330 + C34331) * C121 +
                 (C34332 + C34333 + C34334) * C50688) *
                    C50764) *
                   C50603 * C893 -
               (((C16965 * C788 + C16960 * C794 + C16964 * C787 +
                  C16959 * C793 + C16963 * C786 + C16958 * C792) *
                     C50688 +
                 (C16965 * C779 + C16960 * C789 + C16964 * C778 +
                  C16959 * C783 + C16963 * C777 + C16958 * C782) *
                     C121) *
                    C50764 +
                ((C17496 + C17495 + C17494) * C50688 +
                 (C17493 + C17492 + C17491) * C121) *
                    C33658) *
                   C50603 * C50639) *
                  C897) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
                 C16965 * C124 + C16960 * C131) *
                    C121 +
                (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
                 C16965 * C135 + C16960 * C145) *
                    C50688) *
                   C33658 +
               ((C34001 + C34002 + C34003) * C121 +
                (C34004 + C34005 + C34006) * C50688) *
                   C50764) *
                  C50603 * C964 -
              (((C17861 + C17862 + C17863) * C50688 +
                (C17864 + C17865 + C17866) * C121) *
                   C50764 +
               ((C17168 + C17167 + C17166) * C50688 +
                (C17165 + C17164 + C17163) * C121) *
                   C33658) *
                  C50603 * C965 +
              (((C17174 + C17173 + C17172) * C121 +
                (C17171 + C17170 + C17169) * C50688) *
                   C33658 +
               ((C18797 + C18798 + C18799) * C121 +
                (C18800 + C18801 + C18802) * C50688) *
                   C50764) *
                  C50603 * C966 -
              (((C16965 * C3076 + C16960 * C3080 + C16964 * C3075 +
                 C16959 * C3079 + C16963 * C3074 + C16958 * C3078) *
                    C50688 +
                (C16965 * C3071 + C16960 * C3077 + C16964 * C3070 +
                 C16959 * C3073 + C16963 * C3069 + C16958 * C3072) *
                    C121) *
                   C50764 +
               ((C18134 + C18133 + C18132) * C50688 +
                (C18131 + C18130 + C18129) * C121) *
                   C33658) *
                  C50603 * C967) *
             C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
              C16965 * C124 + C16960 * C131) *
                 C121 +
             (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
              C16965 * C135 + C16960 * C145) *
                 C50688) *
                C33658 +
            ((C34001 + C34002 + C34003) * C121 +
             (C34004 + C34005 + C34006) * C50688) *
                C50764) *
               C391 -
           (((C34007 + C34008 + C34009) * C50688 +
             (C34010 + C34011 + C34012) * C121) *
                C50764 +
            ((C34006 + C34005 + C34004) * C50688 +
             (C34003 + C34002 + C34001) * C121) *
                C33658) *
               C392 +
           (((C34012 + C34011 + C34010) * C121 +
             (C34009 + C34008 + C34007) * C50688) *
                C33658 +
            ((C16963 * C1717 + C16958 * C1725 + C16964 * C1716 +
              C16959 * C1724 + C16965 * C1715 + C16960 * C1723) *
                 C121 +
             (C16963 * C1721 + C16958 * C1729 + C16964 * C1720 +
              C16959 * C1728 + C16965 * C1719 + C16960 * C1727) *
                 C50688) *
                C50764) *
               C393) *
              C893 +
          ((((C17866 + C17865 + C17864) * C121 +
             (C17863 + C17862 + C17861) * C50688) *
                C33658 +
            ((C18293 + C18294 + C18295) * C121 +
             (C18296 + C18297 + C18298) * C50688) *
                C50764) *
               C392 -
           (((C17861 + C17862 + C17863) * C50688 +
             (C17864 + C17865 + C17866) * C121) *
                C50764 +
            ((C17168 + C17167 + C17166) * C50688 +
             (C17165 + C17164 + C17163) * C121) *
                C33658) *
               C391 -
           (((C16965 * C5971 + C16960 * C5973 + C16964 * C4479 +
              C16959 * C4485 + C16963 * C4480 + C16958 * C4486) *
                 C50688 +
             (C16965 * C5970 + C16960 * C5972 + C16964 * C4473 +
              C16959 * C4481 + C16963 * C4474 + C16958 * C4482) *
                 C121) *
                C50764 +
            ((C18298 + C18297 + C18296) * C50688 +
             (C18295 + C18294 + C18293) * C121) *
                C33658) *
               C393) *
              C50639) *
         C50568) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C2164 +
             (C19749 * C133 + C50538 * C143) * C2159 + C19885 * C2165 +
             C19886 * C2160 + C19887 * C2166 + C19888 * C2161) *
                C33658 +
            (C36689 + C36690 + C36691 + C36692 + C36693 + C36694) * C50764) *
               C50603 * C893 -
           ((C37210 + C37209 + C37208 + C37207 + C37206 + C37205) * C50764 +
            (C19890 * C2161 + C19889 * C2166 + C19888 * C2160 + C19887 * C2165 +
             C19886 * C2159 + C19885 * C2164) *
                C33658) *
               C50603 * C50639) *
              C895 +
          (((C19893 * C2164 + C19894 * C2159 + C19895 * C2165 + C19896 * C2160 +
             C19897 * C2166 + C19898 * C2161) *
                C33658 +
            (C37211 + C37212 + C37213 + C37214 + C37215 + C37216) * C50764) *
               C50603 * C50639 -
           ((C36706 + C36705 + C36704 + C36703 + C36702 + C36701) * C50764 +
            (C19896 * C2161 + C19895 * C2166 + C19894 * C2160 + C19893 * C2165 +
             (C19749 * C134 + C50538 * C144) * C2159 +
             (C19749 * C123 + C50538 * C130) * C2164) *
                C33658) *
               C50603 * C893) *
              C896 +
          ((((C19749 * C124 + C50538 * C131) * C2164 +
             (C19749 * C135 + C50538 * C145) * C2159 + C20109 * C2165 +
             C20110 * C2160 + C20111 * C2166 + C20112 * C2161) *
                C33658 +
            (C37005 + C37006 + C37007 + C37008 + C37009 + C37010) * C50764) *
               C50603 * C893 -
           (((C19749 * C3076 + C50538 * C3080) * C2161 +
             (C19749 * C3071 + C50538 * C3077) * C2166 + C31432 * C2160 +
             C31431 * C2165 + C22236 * C2159 + C22235 * C2164) *
                C50764 +
            (C20114 * C2161 + C20113 * C2166 + C20112 * C2160 + C20111 * C2165 +
             C20110 * C2159 + C20109 * C2164) *
                C33658) *
               C50603 * C50639) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C19749 * C122 + C50538 * C129) * C2164 +
            (C19749 * C133 + C50538 * C143) * C2159 + C19885 * C2165 +
            C19886 * C2160 + C19887 * C2166 + C19888 * C2161) *
               C33658 +
           (C36689 + C36690 + C36691 + C36692 + C36693 + C36694) * C50764) *
              C50603 * C964 -
          ((C37210 + C37209 + C37208 + C37207 + C37206 + C37205) * C50764 +
           (C19890 * C2161 + C19889 * C2166 + C19888 * C2160 + C19887 * C2165 +
            C19886 * C2159 + C19885 * C2164) *
               C33658) *
              C50603 * C965 +
          ((C19887 * C2164 + C19888 * C2159 + C19889 * C2165 + C19890 * C2160 +
            C19892 * C2166 + C19891 * C2161) *
               C33658 +
           (C20370 * C2164 + C20369 * C2159 + C20368 * C2165 + C20367 * C2160 +
            C21007 * C2166 + C21008 * C2161) *
               C50764) *
              C50603 * C966 -
          (((C19749 * C20999 + C50538 * C21001) * C2161 +
            (C19749 * C20998 + C50538 * C21000) * C2166 + C21008 * C2160 +
            C21007 * C2165 + C20367 * C2159 + C20368 * C2164) *
               C50764 +
           (C20552 * C2161 + C20551 * C2166 + C19891 * C2160 + C19892 * C2165 +
            C19890 * C2159 + C19889 * C2164) *
               C33658) *
              C50603 * C967) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C2164 +
             (C19749 * C133 + C50538 * C143) * C2159 + C19885 * C2165 +
             C19886 * C2160 + C19887 * C2166 + C19888 * C2161) *
                C33658 +
            (C36689 + C36690 + C36691 + C36692 + C36693 + C36694) * C50764) *
               C391 -
           ((C36695 + C36696 + C36697 + C36698 + C36699 + C36700) * C50764 +
            (C36694 + C36693 + C36692 + C36691 + C36690 + C36689) * C33658) *
               C392 +
           ((C36700 + C36699 + C36698 + C36697 + C36696 + C36695) * C33658 +
            (C22050 * C2164 + C22049 * C2159 + C22048 * C2165 + C22047 * C2160 +
             C23022 * C2166 + C23023 * C2161) *
                C50764) *
               C393) *
              C893 +
          (((C37205 + C37206 + C37207 + C37208 + C37209 + C37210) * C33658 +
            (C37607 + C37608 + C37609 + C37610 + C37611 + C37612) * C50764) *
               C392 -
           ((C37210 + C37209 + C37208 + C37207 + C37206 + C37205) * C50764 +
            (C19890 * C2161 + C19889 * C2166 + C19888 * C2160 + C19887 * C2165 +
             C19886 * C2159 + C19885 * C2164) *
                C33658) *
               C391 -
           (((C19749 * C21271 + C50538 * C21273) * C2161 +
             (C19749 * C21270 + C50538 * C21272) * C2166 + C23023 * C2160 +
             C23022 * C2165 + C22047 * C2159 + C22048 * C2164) *
                C50764 +
            (C37612 + C37611 + C37610 + C37609 + C37608 + C37607) * C33658) *
               C393) *
              C50639) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C121 +
             (C19749 * C133 + C50538 * C143) * C50688) *
                C39052 +
            (C39253 + C39254) * C39053 + C39271 * C39054 + C39272 * C39055) *
               C50603 * C893 -
           ((C39622 + C39621) * C39055 + (C39620 + C39619) * C39054 +
            (C39618 + C39617) * C39053 +
            (C19886 * C50688 + C19885 * C121) * C39052) *
               C50603 * C50639) *
              C895 +
          (((C19893 * C121 + C19894 * C50688) * C39052 +
            (C39623 + C39624) * C39053 + (C39625 + C39626) * C39054 +
            (C39627 + C39628) * C39055) *
               C50603 * C50639 -
           (C39275 * C39055 + C39276 * C39054 + (C39262 + C39261) * C39053 +
            ((C19749 * C134 + C50538 * C144) * C50688 +
             (C19749 * C123 + C50538 * C130) * C121) *
                C39052) *
               C50603 * C893) *
              C896 +
          ((((C19749 * C124 + C50538 * C131) * C121 +
             (C19749 * C135 + C50538 * C145) * C50688) *
                C39052 +
            (C39475 + C39476) * C39053 + (C39477 + C39478) * C39054 +
            (C39485 + C39486) * C39055) *
               C50603 * C893 -
           (((C19749 * C5971 + C50538 * C5973) * C50688 +
             (C19749 * C5970 + C50538 * C5972) * C121) *
                C39055 +
            (C22238 * C50688 + C22237 * C121) * C39054 +
            (C22236 * C50688 + C22235 * C121) * C39053 +
            (C20110 * C50688 + C20109 * C121) * C39052) *
               C50603 * C50639) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19749 * C122 + C50538 * C129) * C121 +
            (C19749 * C133 + C50538 * C143) * C50688) *
               C39052 +
           (C39253 + C39254) * C39053 + C39271 * C39054 + C39272 * C39055) *
              C50603 * C964 -
          ((C39622 + C39621) * C39055 + (C39620 + C39619) * C39054 +
           (C39618 + C39617) * C39053 +
           (C19886 * C50688 + C19885 * C121) * C39052) *
              C50603 * C965 +
          ((C19887 * C121 + C19888 * C50688) * C39052 +
           (C20370 * C121 + C20369 * C50688) * C39053 +
           (C20669 * C121 + C20670 * C50688) * C39054 +
           (C23022 * C121 + C23023 * C50688) * C39055) *
              C50603 * C966 -
          (((C19749 * C21271 + C50538 * C21273) * C50688 +
            (C19749 * C21270 + C50538 * C21272) * C121) *
               C39055 +
           (C20672 * C50688 + C20671 * C121) * C39054 +
           (C20367 * C50688 + C20368 * C121) * C39053 +
           (C19890 * C50688 + C19889 * C121) * C39052) *
              C50603 * C967) *
         C50568) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C121 +
             (C19749 * C133 + C50538 * C143) * C50688) *
                C39052 +
            (C39253 + C39254) * C39053 + C39271 * C39054 + C39272 * C39055) *
               C391 -
           ((C39259 + C39260) * C39055 + (C39258 + C39257) * C39054 +
            (C39256 + C39255) * C39053 + (C39254 + C39253) * C39052) *
               C392 +
           (C39271 * C39052 + C39272 * C39053 + (C39260 + C39259) * C39054 +
            ((C19749 * C7278 + C50538 * C7282) * C121 +
             (C19749 * C7280 + C50538 * C7284) * C50688) *
                C39055) *
               C393) *
              C893 +
          (((C39617 + C39618) * C39052 + (C39619 + C39620) * C39053 +
            (C39621 + C39622) * C39054 + (C39891 + C39892) * C39055) *
               C392 -
           (C39893 * C39055 + C39894 * C39054 + (C39618 + C39617) * C39053 +
            (C19886 * C50688 + C19885 * C121) * C39052) *
               C391 -
           (((C19749 * C23912 + C50538 * C23914) * C50688 +
             (C19749 * C23911 + C50538 * C23913) * C121) *
                C39055 +
            (C39892 + C39891) * C39054 + C39893 * C39053 + C39894 * C39052) *
               C393) *
              C50639) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[188] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19749 * C122 + C50538 * C129) * C2164 +
              (C19749 * C133 + C50538 * C143) * C2159 + C19885 * C2165 +
              C19886 * C2160 + C19887 * C2166 + C19888 * C2161) *
                 C33658 +
             (C36689 + C36690 + C36691 + C36692 + C36693 + C36694) * C50764) *
                C50830 -
            ((C36695 + C36696 + C36697 + C36698 + C36699 + C36700) * C50764 +
             (C36694 + C36693 + C36692 + C36691 + C36690 + C36689) * C33658) *
                C50667) *
               C893 +
           (((C37205 + C37206 + C37207 + C37208 + C37209 + C37210) * C33658 +
             (C37607 + C37608 + C37609 + C37610 + C37611 + C37612) * C50764) *
                C50667 -
            ((C37210 + C37209 + C37208 + C37207 + C37206 + C37205) * C50764 +
             (C19890 * C2161 + C19889 * C2166 + C19888 * C2160 +
              C19887 * C2165 + C19886 * C2159 + C19885 * C2164) *
                 C33658) *
                C50830) *
               C50639) *
              C50821 +
          ((((C36701 + C36702 + C36703 + C36704 + C36705 + C36706) * C33658 +
             (C36707 + C36708 + C36709 + C36710 + C36711 + C36712) * C50764) *
                C50667 -
            ((C36706 + C36705 + C36704 + C36703 + C36702 + C36701) * C50764 +
             (C19896 * C2161 + C19895 * C2166 + C19894 * C2160 +
              C19893 * C2165 + (C19749 * C134 + C50538 * C144) * C2159 +
              (C19749 * C123 + C50538 * C130) * C2164) *
                 C33658) *
                C50830) *
               C893 +
           (((C19893 * C2164 + C19894 * C2159 + C19895 * C2165 +
              C19896 * C2160 + C19897 * C2166 + C19898 * C2161) *
                 C33658 +
             (C37211 + C37212 + C37213 + C37214 + C37215 + C37216) * C50764) *
                C50830 -
            (((C19749 * C3543 + C50538 * C3547) * C2161 +
              (C19749 * C3541 + C50538 * C3545) * C2166 + C21856 * C2160 +
              C21855 * C2165 + C21854 * C2159 + C21853 * C2164) *
                 C50764 +
             (C37216 + C37215 + C37214 + C37213 + C37212 + C37211) * C33658) *
                C50667) *
               C50639) *
              C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
               C16965 * C124 + C16960 * C131) *
                  C121 +
              (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
               C16965 * C135 + C16960 * C145) *
                  C50688) *
                 C33658 +
             ((C34001 + C34002 + C34003) * C121 +
              (C34004 + C34005 + C34006) * C50688) *
                 C50764) *
                C50830 -
            (((C34007 + C34008 + C34009) * C50688 +
              (C34010 + C34011 + C34012) * C121) *
                 C50764 +
             ((C34006 + C34005 + C34004) * C50688 +
              (C34003 + C34002 + C34001) * C121) *
                 C33658) *
                C50667) *
               C893 +
           ((((C17866 + C17865 + C17864) * C121 +
              (C17863 + C17862 + C17861) * C50688) *
                 C33658 +
             ((C18293 + C18294 + C18295) * C121 +
              (C18296 + C18297 + C18298) * C50688) *
                 C50764) *
                C50667 -
            (((C17861 + C17862 + C17863) * C50688 +
              (C17864 + C17865 + C17866) * C121) *
                 C50764 +
             ((C17168 + C17167 + C17166) * C50688 +
              (C17165 + C17164 + C17163) * C121) *
                 C33658) *
                C50830) *
               C50639) *
              C50821 +
          (((((C34013 + C34014 + C34015) * C121 +
              (C34016 + C34017 + C34018) * C50688) *
                 C33658 +
             ((C34019 + C34020 + C34021) * C121 +
              (C34022 + C34023 + C34024) * C50688) *
                 C50764) *
                C50667 -
            (((C34018 + C34017 + C34016) * C50688 +
              (C34015 + C34014 + C34013) * C121) *
                 C50764 +
             ((C16965 * C136 + C16960 * C146 + C16964 * C135 + C16959 * C145 +
               C16963 * C134 + C16958 * C144) *
                  C50688 +
              (C16965 * C125 + C16960 * C132 + C16964 * C124 + C16959 * C131 +
               C16963 * C123 + C16958 * C130) *
                  C121) *
                 C33658) *
                C50830) *
               C893 +
           ((((C17175 + C17176 + C17177) * C121 +
              (C17178 + C17179 + C17180) * C50688) *
                 C33658 +
             ((C17867 + C17868 + C17869) * C121 +
              (C17870 + C17871 + C17872) * C50688) *
                 C50764) *
                C50830 -
            (((C16965 * C1087 + C16960 * C1095 + C16964 * C1088 +
               C16959 * C1096 + C16963 * C1089 + C16958 * C1097) *
                  C50688 +
              (C16965 * C1083 + C16960 * C1091 + C16964 * C1084 +
               C16959 * C1092 + C16963 * C1085 + C16958 * C1093) *
                  C121) *
                 C50764 +
             ((C17872 + C17871 + C17870) * C50688 +
              (C17869 + C17868 + C17867) * C121) *
                 C33658) *
                C50667) *
               C50639) *
              C50574)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C19749 * C122 + C50538 * C129) * C121 +
              (C19749 * C133 + C50538 * C143) * C50688) *
                 C39052 +
             (C39253 + C39254) * C39053 + C39271 * C39054 + C39272 * C39055) *
                C50830 -
            ((C39259 + C39260) * C39055 + (C39258 + C39257) * C39054 +
             (C39256 + C39255) * C39053 + (C39254 + C39253) * C39052) *
                C50667) *
               C893 +
           (((C39617 + C39618) * C39052 + (C39619 + C39620) * C39053 +
             (C39621 + C39622) * C39054 + (C39891 + C39892) * C39055) *
                C50667 -
            (C39893 * C39055 + C39894 * C39054 + (C39618 + C39617) * C39053 +
             (C19886 * C50688 + C19885 * C121) * C39052) *
                C50830) *
               C50639) *
              C50821 +
          ((((C39261 + C39262) * C39052 + (C39263 + C39264) * C39053 +
             (C39265 + C39266) * C39054 + (C39277 + C39278) * C39055) *
                C50667 -
            (C39275 * C39055 + C39276 * C39054 + (C39262 + C39261) * C39053 +
             ((C19749 * C134 + C50538 * C144) * C50688 +
              (C19749 * C123 + C50538 * C130) * C121) *
                 C39052) *
                C50830) *
               C893 +
           (((C19893 * C121 + C19894 * C50688) * C39052 +
             (C39623 + C39624) * C39053 + (C39625 + C39626) * C39054 +
             (C39627 + C39628) * C39055) *
                C50830 -
            (((C19749 * C6378 + C50538 * C6382) * C50688 +
              (C19749 * C6376 + C50538 * C6380) * C121) *
                 C39055 +
             (C39628 + C39627) * C39054 + (C39626 + C39625) * C39053 +
             (C39624 + C39623) * C39052) *
                C50667) *
               C50639) *
              C50574)) /
            (p * q * std::sqrt(p + q));
    d2ee[189] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
             C16965 * C124 + C16960 * C131) *
                C121 +
            (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
             C16965 * C135 + C16960 * C145) *
                C50688) *
               C33658 +
           ((C34001 + C34002 + C34003) * C121 +
            (C34004 + C34005 + C34006) * C50688) *
               C50764) *
              C50603 * C964 -
          (((C17861 + C17862 + C17863) * C50688 +
            (C17864 + C17865 + C17866) * C121) *
               C50764 +
           ((C17168 + C17167 + C17166) * C50688 +
            (C17165 + C17164 + C17163) * C121) *
               C33658) *
              C50603 * C965 +
          (((C17174 + C17173 + C17172) * C121 +
            (C17171 + C17170 + C17169) * C50688) *
               C33658 +
           ((C18797 + C18798 + C18799) * C121 +
            (C18800 + C18801 + C18802) * C50688) *
               C50764) *
              C50603 * C966 -
          (((C16965 * C3076 + C16960 * C3080 + C16964 * C3075 + C16959 * C3079 +
             C16963 * C3074 + C16958 * C3078) *
                C50688 +
            (C16965 * C3071 + C16960 * C3077 + C16964 * C3070 + C16959 * C3073 +
             C16963 * C3069 + C16958 * C3072) *
                C121) *
               C50764 +
           ((C18134 + C18133 + C18132) * C50688 +
            (C18131 + C18130 + C18129) * C121) *
               C33658) *
              C50603 * C967) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
              C16965 * C124 + C16960 * C131) *
                 C121 +
             (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
              C16965 * C135 + C16960 * C145) *
                 C50688) *
                C33658 +
            ((C34001 + C34002 + C34003) * C121 +
             (C34004 + C34005 + C34006) * C50688) *
                C50764) *
               C50603 * C893 -
           (((C17861 + C17862 + C17863) * C50688 +
             (C17864 + C17865 + C17866) * C121) *
                C50764 +
            ((C17168 + C17167 + C17166) * C50688 +
             (C17165 + C17164 + C17163) * C121) *
                C33658) *
               C50603 * C50639) *
              C895 +
          ((((C17175 + C17176 + C17177) * C121 +
             (C17178 + C17179 + C17180) * C50688) *
                C33658 +
            ((C17867 + C17868 + C17869) * C121 +
             (C17870 + C17871 + C17872) * C50688) *
                C50764) *
               C50603 * C50639 -
           (((C34018 + C34017 + C34016) * C50688 +
             (C34015 + C34014 + C34013) * C121) *
                C50764 +
            ((C16965 * C136 + C16960 * C146 + C16964 * C135 + C16959 * C145 +
              C16963 * C134 + C16958 * C144) *
                 C50688 +
             (C16965 * C125 + C16960 * C132 + C16964 * C124 + C16959 * C131 +
              C16963 * C123 + C16958 * C130) *
                 C121) *
                C33658) *
               C50603 * C893) *
              C896 +
          ((((C16963 * C124 + C16958 * C131 + C16964 * C125 + C16959 * C132 +
              C16965 * C126 + C16960 * C138) *
                 C121 +
             (C16963 * C135 + C16958 * C145 + C16964 * C136 + C16959 * C146 +
              C16965 * C137 + C16960 * C147) *
                 C50688) *
                C33658 +
            ((C34329 + C34330 + C34331) * C121 +
             (C34332 + C34333 + C34334) * C50688) *
                C50764) *
               C50603 * C893 -
           (((C16965 * C788 + C16960 * C794 + C16964 * C787 + C16959 * C793 +
              C16963 * C786 + C16958 * C792) *
                 C50688 +
             (C16965 * C779 + C16960 * C789 + C16964 * C778 + C16959 * C783 +
              C16963 * C777 + C16958 * C782) *
                 C121) *
                C50764 +
            ((C17496 + C17495 + C17494) * C50688 +
             (C17493 + C17492 + C17491) * C121) *
                C33658) *
               C50603 * C50639) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C2164 +
             (C19749 * C133 + C50538 * C143) * C2159 + C19885 * C2165 +
             C19886 * C2160 + C19887 * C2166 + C19888 * C2161) *
                C33658 +
            (C36689 + C36690 + C36691 + C36692 + C36693 + C36694) * C50764) *
               C50603 * C893 -
           ((C37210 + C37209 + C37208 + C37207 + C37206 + C37205) * C50764 +
            (C19890 * C2161 + C19889 * C2166 + C19888 * C2160 + C19887 * C2165 +
             C19886 * C2159 + C19885 * C2164) *
                C33658) *
               C50603 * C50639) *
              C895 +
          (((C19893 * C2164 + C19894 * C2159 + C19895 * C2165 + C19896 * C2160 +
             C19897 * C2166 + C19898 * C2161) *
                C33658 +
            (C37211 + C37212 + C37213 + C37214 + C37215 + C37216) * C50764) *
               C50603 * C50639 -
           ((C36706 + C36705 + C36704 + C36703 + C36702 + C36701) * C50764 +
            (C19896 * C2161 + C19895 * C2166 + C19894 * C2160 + C19893 * C2165 +
             (C19749 * C134 + C50538 * C144) * C2159 +
             (C19749 * C123 + C50538 * C130) * C2164) *
                C33658) *
               C50603 * C893) *
              C896 +
          ((((C19749 * C124 + C50538 * C131) * C2164 +
             (C19749 * C135 + C50538 * C145) * C2159 + C20109 * C2165 +
             C20110 * C2160 + C20111 * C2166 + C20112 * C2161) *
                C33658 +
            (C37005 + C37006 + C37007 + C37008 + C37009 + C37010) * C50764) *
               C50603 * C893 -
           (((C19749 * C3076 + C50538 * C3080) * C2161 +
             (C19749 * C3071 + C50538 * C3077) * C2166 + C31432 * C2160 +
             C31431 * C2165 + C22236 * C2159 + C22235 * C2164) *
                C50764 +
            (C20114 * C2161 + C20113 * C2166 + C20112 * C2160 + C20111 * C2165 +
             C20110 * C2159 + C20109 * C2164) *
                C33658) *
               C50603 * C50639) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19749 * C122 + C50538 * C129) * C2164 +
            (C19749 * C133 + C50538 * C143) * C2159 + C19885 * C2165 +
            C19886 * C2160 + C19887 * C2166 + C19888 * C2161) *
               C33658 +
           (C36689 + C36690 + C36691 + C36692 + C36693 + C36694) * C50764) *
              C50603 * C964 -
          ((C37210 + C37209 + C37208 + C37207 + C37206 + C37205) * C50764 +
           (C19890 * C2161 + C19889 * C2166 + C19888 * C2160 + C19887 * C2165 +
            C19886 * C2159 + C19885 * C2164) *
               C33658) *
              C50603 * C965 +
          ((C19887 * C2164 + C19888 * C2159 + C19889 * C2165 + C19890 * C2160 +
            C19892 * C2166 + C19891 * C2161) *
               C33658 +
           (C20370 * C2164 + C20369 * C2159 + C20368 * C2165 + C20367 * C2160 +
            C21007 * C2166 + C21008 * C2161) *
               C50764) *
              C50603 * C966 -
          (((C19749 * C20999 + C50538 * C21001) * C2161 +
            (C19749 * C20998 + C50538 * C21000) * C2166 + C21008 * C2160 +
            C21007 * C2165 + C20367 * C2159 + C20368 * C2164) *
               C50764 +
           (C20552 * C2161 + C20551 * C2166 + C19891 * C2160 + C19892 * C2165 +
            C19890 * C2159 + C19889 * C2164) *
               C33658) *
              C50603 * C967) *
         C50568) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C121 +
             (C19749 * C133 + C50538 * C143) * C50688) *
                C39052 +
            (C39253 + C39254) * C39053 + C39271 * C39054 + C39272 * C39055) *
               C50603 * C893 -
           ((C39622 + C39621) * C39055 + (C39620 + C39619) * C39054 +
            (C39618 + C39617) * C39053 +
            (C19886 * C50688 + C19885 * C121) * C39052) *
               C50603 * C50639) *
              C895 +
          (((C19893 * C121 + C19894 * C50688) * C39052 +
            (C39623 + C39624) * C39053 + (C39625 + C39626) * C39054 +
            (C39627 + C39628) * C39055) *
               C50603 * C50639 -
           (C39275 * C39055 + C39276 * C39054 + (C39262 + C39261) * C39053 +
            ((C19749 * C134 + C50538 * C144) * C50688 +
             (C19749 * C123 + C50538 * C130) * C121) *
                C39052) *
               C50603 * C893) *
              C896 +
          ((((C19749 * C124 + C50538 * C131) * C121 +
             (C19749 * C135 + C50538 * C145) * C50688) *
                C39052 +
            (C39475 + C39476) * C39053 + (C39477 + C39478) * C39054 +
            (C39485 + C39486) * C39055) *
               C50603 * C893 -
           (((C19749 * C5971 + C50538 * C5973) * C50688 +
             (C19749 * C5970 + C50538 * C5972) * C121) *
                C39055 +
            (C22238 * C50688 + C22237 * C121) * C39054 +
            (C22236 * C50688 + C22235 * C121) * C39053 +
            (C20110 * C50688 + C20109 * C121) * C39052) *
               C50603 * C50639) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19749 * C122 + C50538 * C129) * C121 +
            (C19749 * C133 + C50538 * C143) * C50688) *
               C39052 +
           (C39253 + C39254) * C39053 + C39271 * C39054 + C39272 * C39055) *
              C50603 * C964 -
          ((C39622 + C39621) * C39055 + (C39620 + C39619) * C39054 +
           (C39618 + C39617) * C39053 +
           (C19886 * C50688 + C19885 * C121) * C39052) *
              C50603 * C965 +
          ((C19887 * C121 + C19888 * C50688) * C39052 +
           (C20370 * C121 + C20369 * C50688) * C39053 +
           (C20669 * C121 + C20670 * C50688) * C39054 +
           (C23022 * C121 + C23023 * C50688) * C39055) *
              C50603 * C966 -
          (((C19749 * C21271 + C50538 * C21273) * C50688 +
            (C19749 * C21270 + C50538 * C21272) * C121) *
               C39055 +
           (C20672 * C50688 + C20671 * C121) * C39054 +
           (C20367 * C50688 + C20368 * C121) * C39053 +
           (C19890 * C50688 + C19889 * C121) * C39052) *
              C50603 * C967) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[190] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C19749 * C122 + C50538 * C129) * C2164 +
              (C19749 * C133 + C50538 * C143) * C2159 + C19885 * C2165 +
              C19886 * C2160 + C19887 * C2166 + C19888 * C2161) *
                 C33658 +
             (C36689 + C36690 + C36691 + C36692 + C36693 + C36694) * C50764) *
                C1544 -
            ((C36695 + C36696 + C36697 + C36698 + C36699 + C36700) * C50764 +
             (C36694 + C36693 + C36692 + C36691 + C36690 + C36689) * C33658) *
                C50667) *
               C50829 +
           (((C37205 + C37206 + C37207 + C37208 + C37209 + C37210) * C33658 +
             (C37607 + C37608 + C37609 + C37610 + C37611 + C37612) * C50764) *
                C50667 -
            ((C37210 + C37209 + C37208 + C37207 + C37206 + C37205) * C50764 +
             (C19890 * C2161 + C19889 * C2166 + C19888 * C2160 +
              C19887 * C2165 + C19886 * C2159 + C19885 * C2164) *
                 C33658) *
                C1544) *
               C50639) *
              C50821 +
          ((((C36701 + C36702 + C36703 + C36704 + C36705 + C36706) * C33658 +
             (C36707 + C36708 + C36709 + C36710 + C36711 + C36712) * C50764) *
                C50667 -
            ((C36706 + C36705 + C36704 + C36703 + C36702 + C36701) * C50764 +
             (C19896 * C2161 + C19895 * C2166 + C19894 * C2160 +
              C19893 * C2165 + (C19749 * C134 + C50538 * C144) * C2159 +
              (C19749 * C123 + C50538 * C130) * C2164) *
                 C33658) *
                C1544) *
               C50829 +
           (((C19893 * C2164 + C19894 * C2159 + C19895 * C2165 +
              C19896 * C2160 + C19897 * C2166 + C19898 * C2161) *
                 C33658 +
             (C37211 + C37212 + C37213 + C37214 + C37215 + C37216) * C50764) *
                C1544 -
            (((C19749 * C3543 + C50538 * C3547) * C2161 +
              (C19749 * C3541 + C50538 * C3545) * C2166 + C21856 * C2160 +
              C21855 * C2165 + C21854 * C2159 + C21853 * C2164) *
                 C50764 +
             (C37216 + C37215 + C37214 + C37213 + C37212 + C37211) * C33658) *
                C50667) *
               C50639) *
              C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
               C16965 * C124 + C16960 * C131) *
                  C121 +
              (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
               C16965 * C135 + C16960 * C145) *
                  C50688) *
                 C33658 +
             ((C34001 + C34002 + C34003) * C121 +
              (C34004 + C34005 + C34006) * C50688) *
                 C50764) *
                C1544 -
            (((C34007 + C34008 + C34009) * C50688 +
              (C34010 + C34011 + C34012) * C121) *
                 C50764 +
             ((C34006 + C34005 + C34004) * C50688 +
              (C34003 + C34002 + C34001) * C121) *
                 C33658) *
                C50667) *
               C50829 +
           ((((C17866 + C17865 + C17864) * C121 +
              (C17863 + C17862 + C17861) * C50688) *
                 C33658 +
             ((C18293 + C18294 + C18295) * C121 +
              (C18296 + C18297 + C18298) * C50688) *
                 C50764) *
                C50667 -
            (((C17861 + C17862 + C17863) * C50688 +
              (C17864 + C17865 + C17866) * C121) *
                 C50764 +
             ((C17168 + C17167 + C17166) * C50688 +
              (C17165 + C17164 + C17163) * C121) *
                 C33658) *
                C1544) *
               C50639) *
              C50821 +
          (((((C34013 + C34014 + C34015) * C121 +
              (C34016 + C34017 + C34018) * C50688) *
                 C33658 +
             ((C34019 + C34020 + C34021) * C121 +
              (C34022 + C34023 + C34024) * C50688) *
                 C50764) *
                C50667 -
            (((C34018 + C34017 + C34016) * C50688 +
              (C34015 + C34014 + C34013) * C121) *
                 C50764 +
             ((C16965 * C136 + C16960 * C146 + C16964 * C135 + C16959 * C145 +
               C16963 * C134 + C16958 * C144) *
                  C50688 +
              (C16965 * C125 + C16960 * C132 + C16964 * C124 + C16959 * C131 +
               C16963 * C123 + C16958 * C130) *
                  C121) *
                 C33658) *
                C1544) *
               C50829 +
           ((((C17175 + C17176 + C17177) * C121 +
              (C17178 + C17179 + C17180) * C50688) *
                 C33658 +
             ((C17867 + C17868 + C17869) * C121 +
              (C17870 + C17871 + C17872) * C50688) *
                 C50764) *
                C1544 -
            (((C16965 * C1087 + C16960 * C1095 + C16964 * C1088 +
               C16959 * C1096 + C16963 * C1089 + C16958 * C1097) *
                  C50688 +
              (C16965 * C1083 + C16960 * C1091 + C16964 * C1084 +
               C16959 * C1092 + C16963 * C1085 + C16958 * C1093) *
                  C121) *
                 C50764 +
             ((C17872 + C17871 + C17870) * C50688 +
              (C17869 + C17868 + C17867) * C121) *
                 C33658) *
                C50667) *
               C50639) *
              C50574)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C19749 * C122 + C50538 * C129) * C121 +
              (C19749 * C133 + C50538 * C143) * C50688) *
                 C39052 +
             (C39253 + C39254) * C39053 + C39271 * C39054 + C39272 * C39055) *
                C1544 -
            (C40493 * C39055 + C40494 * C39054 + (C39256 + C39255) * C39053 +
             (C39254 + C39253) * C39052) *
                C50667) *
               C50829 +
           (((C39617 + C39618) * C39052 + (C39619 + C39620) * C39053 +
             (C39621 + C39622) * C39054 + (C39891 + C39892) * C39055) *
                C50667 -
            (C39893 * C39055 + C39894 * C39054 + (C39618 + C39617) * C39053 +
             (C19886 * C50688 + C19885 * C121) * C39052) *
                C1544) *
               C50639) *
              C50821 +
          ((((C39261 + C39262) * C39052 + (C39263 + C39264) * C39053 +
             (C39265 + C39266) * C39054 + (C39277 + C39278) * C39055) *
                C50667 -
            (C39275 * C39055 + C39276 * C39054 + (C39262 + C39261) * C39053 +
             ((C19749 * C134 + C50538 * C144) * C50688 +
              (C19749 * C123 + C50538 * C130) * C121) *
                 C39052) *
                C1544) *
               C50829 +
           (((C19893 * C121 + C19894 * C50688) * C39052 +
             (C39623 + C39624) * C39053 + (C39625 + C39626) * C39054 +
             (C39627 + C39628) * C39055) *
                C1544 -
            (((C19749 * C6378 + C50538 * C6382) * C50688 +
              (C19749 * C6376 + C50538 * C6380) * C121) *
                 C39055 +
             (C39628 + C39627) * C39054 + (C39626 + C39625) * C39053 +
             (C39624 + C39623) * C39052) *
                C50667) *
               C50639) *
              C50574)) /
            (p * q * std::sqrt(p + q));
    d2ee[191] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C2164 +
             (C19749 * C133 + C50538 * C143) * C2159 + C19885 * C2165 +
             C19886 * C2160 + C19887 * C2166 + C19888 * C2161) *
                C33658 +
            (C36689 + C36690 + C36691 + C36692 + C36693 + C36694) * C50764) *
               C50876 -
           ((C36695 + C36696 + C36697 + C36698 + C36699 + C36700) * C50764 +
            (C36694 + C36693 + C36692 + C36691 + C36690 + C36689) * C33658) *
               C50877 +
           ((C36700 + C36699 + C36698 + C36697 + C36696 + C36695) * C33658 +
            (C38495 + C38496 + C38497 + C38498 + C38499 + C38500) * C50764) *
               C1960) *
              C50829 +
          (((C37205 + C37206 + C37207 + C37208 + C37209 + C37210) * C33658 +
            (C37607 + C37608 + C37609 + C37610 + C37611 + C37612) * C50764) *
               C50877 -
           ((C37210 + C37209 + C37208 + C37207 + C37206 + C37205) * C50764 +
            (C19890 * C2161 + C19889 * C2166 + C19888 * C2160 + C19887 * C2165 +
             C19886 * C2159 + C19885 * C2164) *
                C33658) *
               C50876 -
           (((C19749 * C21271 + C50538 * C21273) * C2161 +
             (C19749 * C21270 + C50538 * C21272) * C2166 + C23023 * C2160 +
             C23022 * C2165 + C22047 * C2159 + C22048 * C2164) *
                C50764 +
            (C37612 + C37611 + C37610 + C37609 + C37608 + C37607) * C33658) *
               C1960) *
              C50639) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
              C16965 * C124 + C16960 * C131) *
                 C121 +
             (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
              C16965 * C135 + C16960 * C145) *
                 C50688) *
                C33658 +
            ((C34001 + C34002 + C34003) * C121 +
             (C34004 + C34005 + C34006) * C50688) *
                C50764) *
               C50876 -
           (((C34007 + C34008 + C34009) * C50688 +
             (C34010 + C34011 + C34012) * C121) *
                C50764 +
            ((C34006 + C34005 + C34004) * C50688 +
             (C34003 + C34002 + C34001) * C121) *
                C33658) *
               C50877 +
           (((C34012 + C34011 + C34010) * C121 +
             (C34009 + C34008 + C34007) * C50688) *
                C33658 +
            ((C35807 + C35808 + C35809) * C121 +
             (C35810 + C35811 + C35812) * C50688) *
                C50764) *
               C1960) *
              C50829 +
          ((((C17866 + C17865 + C17864) * C121 +
             (C17863 + C17862 + C17861) * C50688) *
                C33658 +
            ((C18293 + C18294 + C18295) * C121 +
             (C18296 + C18297 + C18298) * C50688) *
                C50764) *
               C50877 -
           (((C17861 + C17862 + C17863) * C50688 +
             (C17864 + C17865 + C17866) * C121) *
                C50764 +
            ((C17168 + C17167 + C17166) * C50688 +
             (C17165 + C17164 + C17163) * C121) *
                C33658) *
               C50876 -
           (((C16965 * C5971 + C16960 * C5973 + C16964 * C4479 +
              C16959 * C4485 + C16963 * C4480 + C16958 * C4486) *
                 C50688 +
             (C16965 * C5970 + C16960 * C5972 + C16964 * C4473 +
              C16959 * C4481 + C16963 * C4474 + C16958 * C4482) *
                 C121) *
                C50764 +
            ((C18298 + C18297 + C18296) * C50688 +
             (C18295 + C18294 + C18293) * C121) *
                C33658) *
               C1960) *
              C50639) *
         C50568) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C121 +
             (C19749 * C133 + C50538 * C143) * C50688) *
                C39052 +
            (C39253 + C39254) * C39053 + C39271 * C39054 + C39272 * C39055) *
               C50876 -
           (C40493 * C39055 + C40494 * C39054 + (C39256 + C39255) * C39053 +
            (C39254 + C39253) * C39052) *
               C50877 +
           (C39271 * C39052 + C39272 * C39053 + (C39260 + C39259) * C39054 +
            (C40501 + C40502) * C39055) *
               C1960) *
              C50829 +
          (((C39617 + C39618) * C39052 + (C39619 + C39620) * C39053 +
            (C39621 + C39622) * C39054 + (C39891 + C39892) * C39055) *
               C50877 -
           (C39893 * C39055 + C39894 * C39054 + (C39618 + C39617) * C39053 +
            (C19886 * C50688 + C19885 * C121) * C39052) *
               C50876 -
           (((C19749 * C23912 + C50538 * C23914) * C50688 +
             (C19749 * C23911 + C50538 * C23913) * C121) *
                C39055 +
            (C39892 + C39891) * C39054 + C39893 * C39053 + C39894 * C39052) *
               C1960) *
              C50639) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C16963 * C122 + C16958 * C129 + C16964 * C123 +
                  C16959 * C130 + C16965 * C124 + C16960 * C131) *
                     C121 +
                 (C16963 * C133 + C16958 * C143 + C16964 * C134 +
                  C16959 * C144 + C16965 * C135 + C16960 * C145) *
                     C50688) *
                    C33658 +
                ((C34001 + C34002 + C34003) * C121 +
                 (C34004 + C34005 + C34006) * C50688) *
                    C50764) *
                   C1544 -
               (((C34007 + C34008 + C34009) * C50688 +
                 (C34010 + C34011 + C34012) * C121) *
                    C50764 +
                ((C34006 + C34005 + C34004) * C50688 +
                 (C34003 + C34002 + C34001) * C121) *
                    C33658) *
                   C50667) *
                  C50587 * C895 +
              ((((C34013 + C34014 + C34015) * C121 +
                 (C34016 + C34017 + C34018) * C50688) *
                    C33658 +
                ((C34019 + C34020 + C34021) * C121 +
                 (C34022 + C34023 + C34024) * C50688) *
                    C50764) *
                   C50667 -
               (((C34018 + C34017 + C34016) * C50688 +
                 (C34015 + C34014 + C34013) * C121) *
                    C50764 +
                ((C16965 * C136 + C16960 * C146 + C16964 * C135 +
                  C16959 * C145 + C16963 * C134 + C16958 * C144) *
                     C50688 +
                 (C16965 * C125 + C16960 * C132 + C16964 * C124 +
                  C16959 * C131 + C16963 * C123 + C16958 * C130) *
                     C121) *
                    C33658) *
                   C1544) *
                  C50587 * C896 +
              ((((C16963 * C124 + C16958 * C131 + C16964 * C125 +
                  C16959 * C132 + C16965 * C126 + C16960 * C138) *
                     C121 +
                 (C16963 * C135 + C16958 * C145 + C16964 * C136 +
                  C16959 * C146 + C16965 * C137 + C16960 * C147) *
                     C50688) *
                    C33658 +
                ((C34329 + C34330 + C34331) * C121 +
                 (C34332 + C34333 + C34334) * C50688) *
                    C50764) *
                   C1544 -
               (((C16965 * C422 + C16960 * C433 + C16964 * C419 +
                  C16959 * C431 + C16963 * C418 + C16958 * C430) *
                     C50688 +
                 (C16965 * C403 + C16960 * C423 + C16964 * C401 +
                  C16959 * C415 + C16963 * C400 + C16958 * C414) *
                     C121) *
                    C50764 +
                ((C34334 + C34333 + C34332) * C50688 +
                 (C34331 + C34330 + C34329) * C121) *
                    C33658) *
                   C50667) *
                  C50587 * C897) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C16963 * C122 + C16958 * C129 + C16964 * C123 +
                  C16959 * C130 + C16965 * C124 + C16960 * C131) *
                     C121 +
                 (C16963 * C133 + C16958 * C143 + C16964 * C134 +
                  C16959 * C144 + C16965 * C135 + C16960 * C145) *
                     C50688) *
                    C33658 +
                ((C34001 + C34002 + C34003) * C121 +
                 (C34004 + C34005 + C34006) * C50688) *
                    C50764) *
                   C1544 -
               (((C34007 + C34008 + C34009) * C50688 +
                 (C34010 + C34011 + C34012) * C121) *
                    C50764 +
                ((C34006 + C34005 + C34004) * C50688 +
                 (C34003 + C34002 + C34001) * C121) *
                    C33658) *
                   C50667) *
                  C248 +
              ((((C17866 + C17865 + C17864) * C121 +
                 (C17863 + C17862 + C17861) * C50688) *
                    C33658 +
                ((C18293 + C18294 + C18295) * C121 +
                 (C18296 + C18297 + C18298) * C50688) *
                    C50764) *
                   C50667 -
               (((C17861 + C17862 + C17863) * C50688 +
                 (C17864 + C17865 + C17866) * C121) *
                    C50764 +
                ((C17168 + C17167 + C17166) * C50688 +
                 (C17165 + C17164 + C17163) * C121) *
                    C33658) *
                   C1544) *
                  C249 +
              ((((C17174 + C17173 + C17172) * C121 +
                 (C17171 + C17170 + C17169) * C50688) *
                    C33658 +
                ((C18797 + C18798 + C18799) * C121 +
                 (C18800 + C18801 + C18802) * C50688) *
                    C50764) *
                   C1544 -
               (((C16965 * C2554 + C16960 * C2558 + C16964 * C2553 +
                  C16959 * C2557 + C16963 * C2552 + C16958 * C2556) *
                     C50688 +
                 (C16965 * C2549 + C16960 * C2555 + C16964 * C2548 +
                  C16959 * C2551 + C16963 * C2547 + C16958 * C2550) *
                     C121) *
                    C50764 +
                ((C18802 + C18801 + C18800) * C50688 +
                 (C18799 + C18798 + C18797) * C121) *
                    C33658) *
                   C50667) *
                  C250) *
             C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
             C16965 * C124 + C16960 * C131) *
                C121 +
            (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
             C16965 * C135 + C16960 * C145) *
                C50688) *
               C33658 +
           ((C34001 + C34002 + C34003) * C121 +
            (C34004 + C34005 + C34006) * C50688) *
               C50764) *
              C1710 -
          (((C34007 + C34008 + C34009) * C50688 +
            (C34010 + C34011 + C34012) * C121) *
               C50764 +
           ((C34006 + C34005 + C34004) * C50688 +
            (C34003 + C34002 + C34001) * C121) *
               C33658) *
              C1711 +
          (((C34012 + C34011 + C34010) * C121 +
            (C34009 + C34008 + C34007) * C50688) *
               C33658 +
           ((C35807 + C35808 + C35809) * C121 +
            (C35810 + C35811 + C35812) * C50688) *
               C50764) *
              C1712 -
          (((C16965 * C5373 + C16960 * C5377 + C16964 * C5372 + C16959 * C5376 +
             C16963 * C5371 + C16958 * C5375) *
                C50688 +
            (C16965 * C5368 + C16960 * C5374 + C16964 * C5367 + C16959 * C5370 +
             C16963 * C5366 + C16958 * C5369) *
                C121) *
               C50764 +
           ((C35812 + C35811 + C35810) * C50688 +
            (C35809 + C35808 + C35807) * C121) *
               C33658) *
              C1713) *
         C50587 * C50568) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C2164 +
             (C19749 * C133 + C50538 * C143) * C2159 + C19885 * C2165 +
             C19886 * C2160 + C19887 * C2166 + C19888 * C2161) *
                C33658 +
            (C36689 + C36690 + C36691 + C36692 + C36693 + C36694) * C50764) *
               C1544 -
           ((C36695 + C36696 + C36697 + C36698 + C36699 + C36700) * C50764 +
            (C36694 + C36693 + C36692 + C36691 + C36690 + C36689) * C33658) *
               C50667) *
              C50587 * C895 +
          (((C36701 + C36702 + C36703 + C36704 + C36705 + C36706) * C33658 +
            (C36707 + C36708 + C36709 + C36710 + C36711 + C36712) * C50764) *
               C50667 -
           ((C36706 + C36705 + C36704 + C36703 + C36702 + C36701) * C50764 +
            (C19896 * C2161 + C19895 * C2166 + C19894 * C2160 + C19893 * C2165 +
             (C19749 * C134 + C50538 * C144) * C2159 +
             (C19749 * C123 + C50538 * C130) * C2164) *
                C33658) *
               C1544) *
              C50587 * C896 +
          ((((C19749 * C124 + C50538 * C131) * C2164 +
             (C19749 * C135 + C50538 * C145) * C2159 + C20109 * C2165 +
             C20110 * C2160 + C20111 * C2166 + C20112 * C2161) *
                C33658 +
            (C37005 + C37006 + C37007 + C37008 + C37009 + C37010) * C50764) *
               C1544 -
           (((C19749 * C2554 + C50538 * C2558) * C2161 +
             (C19749 * C2549 + C50538 * C2555) * C2166 + C22238 * C2160 +
             C22237 * C2165 + C22400 * C2159 + C22399 * C2164) *
                C50764 +
            (C37010 + C37009 + C37008 + C37007 + C37006 + C37005) * C33658) *
               C50667) *
              C50587 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C2164 +
             (C19749 * C133 + C50538 * C143) * C2159 + C19885 * C2165 +
             C19886 * C2160 + C19887 * C2166 + C19888 * C2161) *
                C33658 +
            (C36689 + C36690 + C36691 + C36692 + C36693 + C36694) * C50764) *
               C1544 -
           ((C36695 + C36696 + C36697 + C36698 + C36699 + C36700) * C50764 +
            (C36694 + C36693 + C36692 + C36691 + C36690 + C36689) * C33658) *
               C50667) *
              C248 +
          (((C37205 + C37206 + C37207 + C37208 + C37209 + C37210) * C33658 +
            (C37607 + C37608 + C37609 + C37610 + C37611 + C37612) * C50764) *
               C50667 -
           ((C37210 + C37209 + C37208 + C37207 + C37206 + C37205) * C50764 +
            (C19890 * C2161 + C19889 * C2166 + C19888 * C2160 + C19887 * C2165 +
             C19886 * C2159 + C19885 * C2164) *
                C33658) *
               C1544) *
              C249 +
          (((C19887 * C2164 + C19888 * C2159 + C19889 * C2165 + C19890 * C2160 +
             C19892 * C2166 + C19891 * C2161) *
                C33658 +
            (C38099 + C38100 + C38101 + C38102 + C38103 + C38104) * C50764) *
               C1544 -
           (((C19749 * C20651 + C50538 * C20653) * C2161 +
             (C19749 * C20650 + C50538 * C20652) * C2166 + C20672 * C2160 +
             C20671 * C2165 + C20670 * C2159 + C20669 * C2164) *
                C50764 +
            (C38104 + C38103 + C38102 + C38101 + C38100 + C38099) * C33658) *
               C50667) *
              C250) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19749 * C122 + C50538 * C129) * C2164 +
            (C19749 * C133 + C50538 * C143) * C2159 + C19885 * C2165 +
            C19886 * C2160 + C19887 * C2166 + C19888 * C2161) *
               C33658 +
           (C36689 + C36690 + C36691 + C36692 + C36693 + C36694) * C50764) *
              C1710 -
          ((C36695 + C36696 + C36697 + C36698 + C36699 + C36700) * C50764 +
           (C36694 + C36693 + C36692 + C36691 + C36690 + C36689) * C33658) *
              C1711 +
          ((C36700 + C36699 + C36698 + C36697 + C36696 + C36695) * C33658 +
           (C38495 + C38496 + C38497 + C38498 + C38499 + C38500) * C50764) *
              C1712 -
          (((C19749 * C23005 + C50538 * C23007) * C2161 +
            (C19749 * C23004 + C50538 * C23006) * C2166 + C23021 * C2160 +
            C23020 * C2165 + C23925 * C2159 + C23924 * C2164) *
               C50764 +
           (C38500 + C38499 + C38498 + C38497 + C38496 + C38495) * C33658) *
              C1713) *
         C50587 * C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C121 +
             (C19749 * C133 + C50538 * C143) * C50688) *
                C39052 +
            (C39253 + C39254) * C39053 + C39271 * C39054 + C39272 * C39055) *
               C1544 -
           ((C39259 + C39260) * C39055 + (C39258 + C39257) * C39054 +
            (C39256 + C39255) * C39053 + (C39254 + C39253) * C39052) *
               C50667) *
              C50587 * C895 +
          (((C39261 + C39262) * C39052 + (C39263 + C39264) * C39053 +
            (C39265 + C39266) * C39054 + (C39277 + C39278) * C39055) *
               C50667 -
           (C39275 * C39055 + C39276 * C39054 + (C39262 + C39261) * C39053 +
            ((C19749 * C134 + C50538 * C144) * C50688 +
             (C19749 * C123 + C50538 * C130) * C121) *
                C39052) *
               C1544) *
              C50587 * C896 +
          ((((C19749 * C124 + C50538 * C131) * C121 +
             (C19749 * C135 + C50538 * C145) * C50688) *
                C39052 +
            (C39475 + C39476) * C39053 + (C39477 + C39478) * C39054 +
            (C39485 + C39486) * C39055) *
               C1544 -
           (((C19749 * C5373 + C50538 * C5377) * C50688 +
             (C19749 * C5368 + C50538 * C5374) * C121) *
                C39055 +
            (C39486 + C39485) * C39054 + (C39478 + C39477) * C39053 +
            (C39476 + C39475) * C39052) *
               C50667) *
              C50587 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C121 +
             (C19749 * C133 + C50538 * C143) * C50688) *
                C39052 +
            (C39253 + C39254) * C39053 + C39271 * C39054 + C39272 * C39055) *
               C1544 -
           ((C39259 + C39260) * C39055 + (C39258 + C39257) * C39054 +
            (C39256 + C39255) * C39053 + (C39254 + C39253) * C39052) *
               C50667) *
              C248 +
          (((C39617 + C39618) * C39052 + (C39619 + C39620) * C39053 +
            (C39621 + C39622) * C39054 + (C39891 + C39892) * C39055) *
               C50667 -
           (C39893 * C39055 + C39894 * C39054 + (C39618 + C39617) * C39053 +
            (C19886 * C50688 + C19885 * C121) * C39052) *
               C1544) *
              C249 +
          (((C19887 * C121 + C19888 * C50688) * C39052 +
            (C40221 + C40222) * C39053 + (C40223 + C40224) * C39054 +
            (C40225 + C40226) * C39055) *
               C1544 -
           (((C19749 * C23005 + C50538 * C23007) * C50688 +
             (C19749 * C23004 + C50538 * C23006) * C121) *
                C39055 +
            (C40226 + C40225) * C39054 + (C40224 + C40223) * C39053 +
            (C40222 + C40221) * C39052) *
               C50667) *
              C250) *
         C50568) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C19749 * C122 + C50538 * C129) * C121 +
            (C19749 * C133 + C50538 * C143) * C50688) *
               C39052 +
           (C39253 + C39254) * C39053 + C39271 * C39054 + C39272 * C39055) *
              C1710 -
          (C40493 * C39055 + C40494 * C39054 + (C39256 + C39255) * C39053 +
           (C39254 + C39253) * C39052) *
              C1711 +
          (C39271 * C39052 + C39272 * C39053 + (C39260 + C39259) * C39054 +
           (C40501 + C40502) * C39055) *
              C1712 -
          (((C19749 * C40489 + C50538 * C40491) * C50688 +
            (C19749 * C40488 + C50538 * C40490) * C121) *
               C39055 +
           (C40502 + C40501) * C39054 + C40493 * C39053 + C40494 * C39052) *
              C1713) *
         C50587 * C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[193] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C2164 +
             (C19749 * C133 + C50538 * C143) * C2159 + C19885 * C2165 +
             C19886 * C2160 + C19887 * C2166 + C19888 * C2161) *
                C33658 +
            (C36689 + C36690 + C36691 + C36692 + C36693 + C36694) * C50764) *
               C50876 -
           ((C36695 + C36696 + C36697 + C36698 + C36699 + C36700) * C50764 +
            (C36694 + C36693 + C36692 + C36691 + C36690 + C36689) * C33658) *
               C50877 +
           ((C36700 + C36699 + C36698 + C36697 + C36696 + C36695) * C33658 +
            (C38495 + C38496 + C38497 + C38498 + C38499 + C38500) * C50764) *
               C1960) *
              C50587 * C50821 +
          (((C36701 + C36702 + C36703 + C36704 + C36705 + C36706) * C33658 +
            (C36707 + C36708 + C36709 + C36710 + C36711 + C36712) * C50764) *
               C50877 -
           ((C36706 + C36705 + C36704 + C36703 + C36702 + C36701) * C50764 +
            (C19896 * C2161 + C19895 * C2166 + C19894 * C2160 + C19893 * C2165 +
             (C19749 * C134 + C50538 * C144) * C2159 +
             (C19749 * C123 + C50538 * C130) * C2164) *
                C33658) *
               C50876 -
           (((C19749 * C4475 + C50538 * C4483) * C2161 +
             (C19749 * C4471 + C50538 * C4477) * C2166 + C22058 * C2160 +
             C22057 * C2165 + C22056 * C2159 + C22055 * C2164) *
                C50764 +
            (C36712 + C36711 + C36710 + C36709 + C36708 + C36707) * C33658) *
               C1960) *
              C50587 * C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
              C16965 * C124 + C16960 * C131) *
                 C121 +
             (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
              C16965 * C135 + C16960 * C145) *
                 C50688) *
                C33658 +
            ((C34001 + C34002 + C34003) * C121 +
             (C34004 + C34005 + C34006) * C50688) *
                C50764) *
               C50876 -
           (((C34007 + C34008 + C34009) * C50688 +
             (C34010 + C34011 + C34012) * C121) *
                C50764 +
            ((C34006 + C34005 + C34004) * C50688 +
             (C34003 + C34002 + C34001) * C121) *
                C33658) *
               C50877 +
           (((C34012 + C34011 + C34010) * C121 +
             (C34009 + C34008 + C34007) * C50688) *
                C33658 +
            ((C35807 + C35808 + C35809) * C121 +
             (C35810 + C35811 + C35812) * C50688) *
                C50764) *
               C1960) *
              C50587 * C50821 +
          ((((C34013 + C34014 + C34015) * C121 +
             (C34016 + C34017 + C34018) * C50688) *
                C33658 +
            ((C34019 + C34020 + C34021) * C121 +
             (C34022 + C34023 + C34024) * C50688) *
                C50764) *
               C50877 -
           (((C34018 + C34017 + C34016) * C50688 +
             (C34015 + C34014 + C34013) * C121) *
                C50764 +
            ((C16965 * C136 + C16960 * C146 + C16964 * C135 + C16959 * C145 +
              C16963 * C134 + C16958 * C144) *
                 C50688 +
             (C16965 * C125 + C16960 * C132 + C16964 * C124 + C16959 * C131 +
              C16963 * C123 + C16958 * C130) *
                 C121) *
                C33658) *
               C50876 -
           (((C16965 * C1718 + C16960 * C1726 + C16964 * C1719 +
              C16959 * C1727 + C16963 * C1720 + C16958 * C1728) *
                 C50688 +
             (C16965 * C1714 + C16960 * C1722 + C16964 * C1715 +
              C16959 * C1723 + C16963 * C1716 + C16958 * C1724) *
                 C121) *
                C50764 +
            ((C34024 + C34023 + C34022) * C50688 +
             (C34021 + C34020 + C34019) * C121) *
                C33658) *
               C1960) *
              C50587 * C50574)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C121 +
             (C19749 * C133 + C50538 * C143) * C50688) *
                C39052 +
            (C39253 + C39254) * C39053 + C39271 * C39054 + C39272 * C39055) *
               C50876 -
           (C40493 * C39055 + C40494 * C39054 + (C39256 + C39255) * C39053 +
            (C39254 + C39253) * C39052) *
               C50877 +
           (C39271 * C39052 + C39272 * C39053 + (C39260 + C39259) * C39054 +
            (C40501 + C40502) * C39055) *
               C1960) *
              C50587 * C50821 +
          (((C39261 + C39262) * C39052 + (C39263 + C39264) * C39053 +
            (C39265 + C39266) * C39054 + (C39277 + C39278) * C39055) *
               C50877 -
           (C39275 * C39055 + C39276 * C39054 + (C39262 + C39261) * C39053 +
            ((C19749 * C134 + C50538 * C144) * C50688 +
             (C19749 * C123 + C50538 * C130) * C121) *
                C39052) *
               C50876 -
           (((C19749 * C7279 + C50538 * C7283) * C50688 +
             (C19749 * C7277 + C50538 * C7281) * C121) *
                C39055 +
            (C39278 + C39277) * C39054 + C39275 * C39053 + C39276 * C39052) *
               C1960) *
              C50587 * C50574)) /
            (p * q * std::sqrt(p + q));
    d2ee[194] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
              C16965 * C124 + C16960 * C131) *
                 C121 +
             (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
              C16965 * C135 + C16960 * C145) *
                 C50688) *
                C33658 +
            ((C34001 + C34002 + C34003) * C121 +
             (C34004 + C34005 + C34006) * C50688) *
                C50764) *
               C1544 -
           (((C34007 + C34008 + C34009) * C50688 +
             (C34010 + C34011 + C34012) * C121) *
                C50764 +
            ((C34006 + C34005 + C34004) * C50688 +
             (C34003 + C34002 + C34001) * C121) *
                C33658) *
               C50667) *
              C248 +
          ((((C17866 + C17865 + C17864) * C121 +
             (C17863 + C17862 + C17861) * C50688) *
                C33658 +
            ((C18293 + C18294 + C18295) * C121 +
             (C18296 + C18297 + C18298) * C50688) *
                C50764) *
               C50667 -
           (((C17861 + C17862 + C17863) * C50688 +
             (C17864 + C17865 + C17866) * C121) *
                C50764 +
            ((C17168 + C17167 + C17166) * C50688 +
             (C17165 + C17164 + C17163) * C121) *
                C33658) *
               C1544) *
              C249 +
          ((((C17174 + C17173 + C17172) * C121 +
             (C17171 + C17170 + C17169) * C50688) *
                C33658 +
            ((C18797 + C18798 + C18799) * C121 +
             (C18800 + C18801 + C18802) * C50688) *
                C50764) *
               C1544 -
           (((C16965 * C2554 + C16960 * C2558 + C16964 * C2553 +
              C16959 * C2557 + C16963 * C2552 + C16958 * C2556) *
                 C50688 +
             (C16965 * C2549 + C16960 * C2555 + C16964 * C2548 +
              C16959 * C2551 + C16963 * C2547 + C16958 * C2550) *
                 C121) *
                C50764 +
            ((C18802 + C18801 + C18800) * C50688 +
             (C18799 + C18798 + C18797) * C121) *
                C33658) *
               C50667) *
              C250) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
              C16965 * C124 + C16960 * C131) *
                 C121 +
             (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
              C16965 * C135 + C16960 * C145) *
                 C50688) *
                C33658 +
            ((C34001 + C34002 + C34003) * C121 +
             (C34004 + C34005 + C34006) * C50688) *
                C50764) *
               C1544 -
           (((C34007 + C34008 + C34009) * C50688 +
             (C34010 + C34011 + C34012) * C121) *
                C50764 +
            ((C34006 + C34005 + C34004) * C50688 +
             (C34003 + C34002 + C34001) * C121) *
                C33658) *
               C50667) *
              C50587 * C895 +
          ((((C34013 + C34014 + C34015) * C121 +
             (C34016 + C34017 + C34018) * C50688) *
                C33658 +
            ((C34019 + C34020 + C34021) * C121 +
             (C34022 + C34023 + C34024) * C50688) *
                C50764) *
               C50667 -
           (((C34018 + C34017 + C34016) * C50688 +
             (C34015 + C34014 + C34013) * C121) *
                C50764 +
            ((C16965 * C136 + C16960 * C146 + C16964 * C135 + C16959 * C145 +
              C16963 * C134 + C16958 * C144) *
                 C50688 +
             (C16965 * C125 + C16960 * C132 + C16964 * C124 + C16959 * C131 +
              C16963 * C123 + C16958 * C130) *
                 C121) *
                C33658) *
               C1544) *
              C50587 * C896 +
          ((((C16963 * C124 + C16958 * C131 + C16964 * C125 + C16959 * C132 +
              C16965 * C126 + C16960 * C138) *
                 C121 +
             (C16963 * C135 + C16958 * C145 + C16964 * C136 + C16959 * C146 +
              C16965 * C137 + C16960 * C147) *
                 C50688) *
                C33658 +
            ((C34329 + C34330 + C34331) * C121 +
             (C34332 + C34333 + C34334) * C50688) *
                C50764) *
               C1544 -
           (((C16965 * C422 + C16960 * C433 + C16964 * C419 + C16959 * C431 +
              C16963 * C418 + C16958 * C430) *
                 C50688 +
             (C16965 * C403 + C16960 * C423 + C16964 * C401 + C16959 * C415 +
              C16963 * C400 + C16958 * C414) *
                 C121) *
                C50764 +
            ((C34334 + C34333 + C34332) * C50688 +
             (C34331 + C34330 + C34329) * C121) *
                C33658) *
               C50667) *
              C50587 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C2164 +
             (C19749 * C133 + C50538 * C143) * C2159 + C19885 * C2165 +
             C19886 * C2160 + C19887 * C2166 + C19888 * C2161) *
                C33658 +
            (C36689 + C36690 + C36691 + C36692 + C36693 + C36694) * C50764) *
               C1544 -
           ((C36695 + C36696 + C36697 + C36698 + C36699 + C36700) * C50764 +
            (C36694 + C36693 + C36692 + C36691 + C36690 + C36689) * C33658) *
               C50667) *
              C50587 * C895 +
          (((C36701 + C36702 + C36703 + C36704 + C36705 + C36706) * C33658 +
            (C36707 + C36708 + C36709 + C36710 + C36711 + C36712) * C50764) *
               C50667 -
           ((C36706 + C36705 + C36704 + C36703 + C36702 + C36701) * C50764 +
            (C19896 * C2161 + C19895 * C2166 + C19894 * C2160 + C19893 * C2165 +
             (C19749 * C134 + C50538 * C144) * C2159 +
             (C19749 * C123 + C50538 * C130) * C2164) *
                C33658) *
               C1544) *
              C50587 * C896 +
          ((((C19749 * C124 + C50538 * C131) * C2164 +
             (C19749 * C135 + C50538 * C145) * C2159 + C20109 * C2165 +
             C20110 * C2160 + C20111 * C2166 + C20112 * C2161) *
                C33658 +
            (C37005 + C37006 + C37007 + C37008 + C37009 + C37010) * C50764) *
               C1544 -
           (((C19749 * C2554 + C50538 * C2558) * C2161 +
             (C19749 * C2549 + C50538 * C2555) * C2166 + C22238 * C2160 +
             C22237 * C2165 + C22400 * C2159 + C22399 * C2164) *
                C50764 +
            (C37010 + C37009 + C37008 + C37007 + C37006 + C37005) * C33658) *
               C50667) *
              C50587 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C2164 +
             (C19749 * C133 + C50538 * C143) * C2159 + C19885 * C2165 +
             C19886 * C2160 + C19887 * C2166 + C19888 * C2161) *
                C33658 +
            (C36689 + C36690 + C36691 + C36692 + C36693 + C36694) * C50764) *
               C1544 -
           ((C36695 + C36696 + C36697 + C36698 + C36699 + C36700) * C50764 +
            (C36694 + C36693 + C36692 + C36691 + C36690 + C36689) * C33658) *
               C50667) *
              C248 +
          (((C37205 + C37206 + C37207 + C37208 + C37209 + C37210) * C33658 +
            (C37607 + C37608 + C37609 + C37610 + C37611 + C37612) * C50764) *
               C50667 -
           ((C37210 + C37209 + C37208 + C37207 + C37206 + C37205) * C50764 +
            (C19890 * C2161 + C19889 * C2166 + C19888 * C2160 + C19887 * C2165 +
             C19886 * C2159 + C19885 * C2164) *
                C33658) *
               C1544) *
              C249 +
          (((C19887 * C2164 + C19888 * C2159 + C19889 * C2165 + C19890 * C2160 +
             C19892 * C2166 + C19891 * C2161) *
                C33658 +
            (C38099 + C38100 + C38101 + C38102 + C38103 + C38104) * C50764) *
               C1544 -
           (((C19749 * C20651 + C50538 * C20653) * C2161 +
             (C19749 * C20650 + C50538 * C20652) * C2166 + C20672 * C2160 +
             C20671 * C2165 + C20670 * C2159 + C20669 * C2164) *
                C50764 +
            (C38104 + C38103 + C38102 + C38101 + C38100 + C38099) * C33658) *
               C50667) *
              C250) *
         C50568) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C121 +
             (C19749 * C133 + C50538 * C143) * C50688) *
                C39052 +
            (C39253 + C39254) * C39053 + C39271 * C39054 + C39272 * C39055) *
               C1544 -
           ((C39259 + C39260) * C39055 + (C39258 + C39257) * C39054 +
            (C39256 + C39255) * C39053 + (C39254 + C39253) * C39052) *
               C50667) *
              C50587 * C895 +
          (((C39261 + C39262) * C39052 + (C39263 + C39264) * C39053 +
            (C39265 + C39266) * C39054 + (C39277 + C39278) * C39055) *
               C50667 -
           (C39275 * C39055 + C39276 * C39054 + (C39262 + C39261) * C39053 +
            ((C19749 * C134 + C50538 * C144) * C50688 +
             (C19749 * C123 + C50538 * C130) * C121) *
                C39052) *
               C1544) *
              C50587 * C896 +
          ((((C19749 * C124 + C50538 * C131) * C121 +
             (C19749 * C135 + C50538 * C145) * C50688) *
                C39052 +
            (C39475 + C39476) * C39053 + (C39477 + C39478) * C39054 +
            (C39485 + C39486) * C39055) *
               C1544 -
           (((C19749 * C5373 + C50538 * C5377) * C50688 +
             (C19749 * C5368 + C50538 * C5374) * C121) *
                C39055 +
            (C39486 + C39485) * C39054 + (C39478 + C39477) * C39053 +
            (C39476 + C39475) * C39052) *
               C50667) *
              C50587 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C121 +
             (C19749 * C133 + C50538 * C143) * C50688) *
                C39052 +
            (C39253 + C39254) * C39053 + C39271 * C39054 + C39272 * C39055) *
               C1544 -
           ((C39259 + C39260) * C39055 + (C39258 + C39257) * C39054 +
            (C39256 + C39255) * C39053 + (C39254 + C39253) * C39052) *
               C50667) *
              C248 +
          (((C39617 + C39618) * C39052 + (C39619 + C39620) * C39053 +
            (C39621 + C39622) * C39054 + (C39891 + C39892) * C39055) *
               C50667 -
           (C39893 * C39055 + C39894 * C39054 + (C39618 + C39617) * C39053 +
            (C19886 * C50688 + C19885 * C121) * C39052) *
               C1544) *
              C249 +
          (((C19887 * C121 + C19888 * C50688) * C39052 +
            (C40221 + C40222) * C39053 + (C40223 + C40224) * C39054 +
            (C40225 + C40226) * C39055) *
               C1544 -
           (((C19749 * C23005 + C50538 * C23007) * C50688 +
             (C19749 * C23004 + C50538 * C23006) * C121) *
                C39055 +
            (C40226 + C40225) * C39054 + (C40224 + C40223) * C39053 +
            (C40222 + C40221) * C39052) *
               C50667) *
              C250) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[195] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C121 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C50688) *
                C50880 +
            ((C27811 + C27812) * C121 + (C27813 + C27814) * C50688) * C50881 +
            C44734 * C44420) *
               C50603 * C50829 -
           ((C29027 * C50688 + C29028 * C121) * C44420 +
            (C28503 * C50688 + C28504 * C121) * C50881 +
            ((C24720 + C24719) * C50688 + (C24718 + C24717) * C121) * C50880) *
               C50603 * C50639) *
              C50872 +
          ((((C24729 + C24730) * C121 + (C24731 + C24732) * C50688) * C50880 +
            (C28505 * C121 + C28506 * C50688) * C50881 +
            ((C27827 + C27828) * C121 + (C27829 + C27830) * C50688) * C44420) *
               C50603 * C50639 -
           (C44735 * C44420 +
            ((C27822 + C27821) * C50688 + (C27820 + C27819) * C121) * C50881 +
            ((C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                 C50688 +
             (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                 C121) *
                C50880) *
               C50603 * C50829) *
              C50873 +
          ((((C49747 * C124 + C50814 * C131 + C49740 * C125 + C50543 * C132) *
                 C121 +
             (C49747 * C135 + C50814 * C145 + C49740 * C136 + C50543 * C146) *
                 C50688) *
                C50880 +
            ((C28239 + C28240) * C121 + (C28241 + C28242) * C50688) * C50881 +
            ((C49747 * C400 + C50814 * C414 + C49740 * C401 + C50543 * C415) *
                 C121 +
             (C49747 * C418 + C50814 * C430 + C49740 * C419 + C50543 * C431) *
                 C50688) *
                C44420) *
               C50603 * C50829 -
           (((C49740 * C1087 + C50543 * C1095 + C49747 * C1088 +
              C50814 * C1096) *
                 C50688 +
             (C49740 * C1083 + C50543 * C1091 + C49747 * C1084 +
              C50814 * C1092) *
                 C121) *
                C44420 +
            ((C28036 + C28035) * C50688 + (C28034 + C28033) * C121) * C50881 +
            ((C25056 + C25055) * C50688 + (C25054 + C25053) * C121) * C50880) *
               C50603 * C50639) *
              C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[196] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                  C121 +
              (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                  C50688) *
                 C50880 +
             ((C27811 + C27812) * C121 + (C27813 + C27814) * C50688) * C50881 +
             C44734 * C44420) *
                C50830 -
            (((C30220 + C30219) * C50688 + (C30218 + C30217) * C121) * C44420 +
             ((C27815 + C27816) * C50688 + (C27817 + C27818) * C121) * C50881 +
             ((C27814 + C27813) * C50688 + (C27812 + C27811) * C121) * C50880) *
                C50667) *
               C50829 +
           (((C28501 * C121 + C28502 * C50688) * C50880 +
             (C29029 * C121 + C29030 * C50688) * C50881 +
             ((C29039 + C29040) * C121 + (C29041 + C29042) * C50688) * C44420) *
                C50667 -
            ((C29027 * C50688 + C29028 * C121) * C44420 +
             (C28503 * C50688 + C28504 * C121) * C50881 +
             ((C24720 + C24719) * C50688 + (C24718 + C24717) * C121) * C50880) *
                C50830) *
               C50639) *
              C251 +
          (((((C27819 + C27820) * C121 + (C27821 + C27822) * C50688) * C50880 +
             ((C27823 + C27824) * C121 + (C27825 + C27826) * C50688) * C50881 +
             ((C44728 + C44729) * C121 + (C44730 + C44731) * C50688) * C44420) *
                C50667 -
            (C44735 * C44420 +
             ((C27822 + C27821) * C50688 + (C27820 + C27819) * C121) * C50881 +
             ((C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                  C50688 +
              (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                  C121) *
                 C50880) *
                C50830) *
               C50829 +
           ((((C24729 + C24730) * C121 + (C24731 + C24732) * C50688) * C50880 +
             (C28505 * C121 + C28506 * C50688) * C50881 +
             ((C27827 + C27828) * C121 + (C27829 + C27830) * C50688) * C44420) *
                C50830 -
            (((C49740 * C5971 + C50543 * C5973 + C49747 * C4479 +
               C50814 * C4485) *
                  C50688 +
              (C49740 * C5970 + C50543 * C5972 + C49747 * C4473 +
               C50814 * C4481) *
                  C121) *
                 C44420 +
             ((C27830 + C27829) * C50688 + (C27828 + C27827) * C121) * C50881 +
             (C28507 * C50688 + C28508 * C121) * C50880) *
                C50667) *
               C50639) *
              C50574)) /
        (p * q * std::sqrt(p + q));
    d2ee[197] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C121 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C50688) *
                C50880 +
            ((C27811 + C27812) * C121 + (C27813 + C27814) * C50688) * C50881 +
            ((C27818 + C27817) * C121 + (C27816 + C27815) * C50688) * C44420) *
               C50603 * C248 -
           ((C29027 * C50688 + C29028 * C121) * C44420 +
            (C28503 * C50688 + C28504 * C121) * C50881 +
            ((C24720 + C24719) * C50688 + (C24718 + C24717) * C121) * C50880) *
               C50603 * C249 +
           ((C24741 * C121 + C24742 * C50688) * C50880 +
            (C29689 * C121 + C29690 * C50688) * C50881 +
            ((C25873 + C25874) * C121 + (C25875 + C25876) * C50688) * C44420) *
               C50603 * C250) *
              C251 +
          ((((C24729 + C24730) * C121 + (C24731 + C24732) * C50688) * C50880 +
            (C28505 * C121 + C28506 * C50688) * C50881 +
            ((C27827 + C27828) * C121 + (C27829 + C27830) * C50688) * C44420) *
               C50603 * C249 -
           (((C27826 + C27825) * C50688 + (C27824 + C27823) * C121) * C44420 +
            ((C27822 + C27821) * C50688 + (C27820 + C27819) * C121) * C50881 +
            ((C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                 C50688 +
             (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                 C121) *
                C50880) *
               C50603 * C248 -
           (((C49740 * C2554 + C50543 * C2558 + C49747 * C2553 +
              C50814 * C2557) *
                 C50688 +
             (C49740 * C2549 + C50543 * C2555 + C49747 * C2548 +
              C50814 * C2551) *
                 C121) *
                C44420 +
            ((C25448 + C25447) * C50688 + (C25446 + C25445) * C121) * C50881 +
            (C24743 * C50688 + C24744 * C121) * C50880) *
               C50603 * C250) *
              C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                C121 +
            (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                C50688) *
               C50880 +
           ((C27811 + C27812) * C121 + (C27813 + C27814) * C50688) * C50881 +
           ((C27818 + C27817) * C121 + (C27816 + C27815) * C50688) * C44420) *
              C50603 * C50587 * C113 -
          (((C27826 + C27825) * C50688 + (C27824 + C27823) * C121) * C44420 +
           ((C27822 + C27821) * C50688 + (C27820 + C27819) * C121) * C50881 +
           ((C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                C50688 +
            (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                C121) *
               C50880) *
              C50603 * C50587 * C114 +
          (((C49747 * C124 + C50814 * C131 + C49740 * C125 + C50543 * C132) *
                C121 +
            (C49747 * C135 + C50814 * C145 + C49740 * C136 + C50543 * C146) *
                C50688) *
               C50880 +
           ((C28239 + C28240) * C121 + (C28241 + C28242) * C50688) * C50881 +
           ((C49747 * C400 + C50814 * C414 + C49740 * C401 + C50543 * C415) *
                C121 +
            (C49747 * C418 + C50814 * C430 + C49740 * C419 + C50543 * C431) *
                C50688) *
               C44420) *
              C50603 * C50587 * C115 -
          (((C49740 * C422 + C50543 * C433 + C49747 * C419 + C50814 * C431) *
                C50688 +
            (C49740 * C403 + C50543 * C423 + C49747 * C401 + C50814 * C415) *
                C121) *
               C44420 +
           ((C49740 * C421 + C50543 * C432 + C49747 * C404 + C50814 * C424) *
                C50688 +
            (C49740 * C402 + C50543 * C420 + C49747 * C394 + C50814 * C408) *
                C121) *
               C50881 +
           ((C49740 * C137 + C50543 * C147 + C49747 * C136 + C50814 * C146) *
                C50688 +
            (C49740 * C126 + C50543 * C138 + C49747 * C125 + C50814 * C132) *
                C121) *
               C50880) *
              C50603 * C50587 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C121 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C50688) *
                C50880 +
            ((C27811 + C27812) * C121 + (C27813 + C27814) * C50688) * C50881 +
            C44734 * C44420) *
               C391 -
           (((C30220 + C30219) * C50688 + (C30218 + C30217) * C121) * C44420 +
            ((C27815 + C27816) * C50688 + (C27817 + C27818) * C121) * C50881 +
            ((C27814 + C27813) * C50688 + (C27812 + C27811) * C121) * C50880) *
               C392 +
           (C44734 * C50880 +
            ((C30217 + C30218) * C121 + (C30219 + C30220) * C50688) * C50881 +
            ((C49747 * C5366 + C50814 * C5369 + C49740 * C5367 +
              C50543 * C5370) *
                 C121 +
             (C49747 * C5371 + C50814 * C5375 + C49740 * C5372 +
              C50543 * C5376) *
                 C50688) *
                C44420) *
               C393) *
              C50587 * C251 +
          ((((C27819 + C27820) * C121 + (C27821 + C27822) * C50688) * C50880 +
            ((C27823 + C27824) * C121 + (C27825 + C27826) * C50688) * C50881 +
            ((C44728 + C44729) * C121 + (C44730 + C44731) * C50688) * C44420) *
               C392 -
           (C44735 * C44420 +
            ((C27822 + C27821) * C50688 + (C27820 + C27819) * C121) * C50881 +
            ((C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                 C50688 +
             (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                 C121) *
                C50880) *
               C391 -
           (((C49740 * C5373 + C50543 * C5377 + C49747 * C5372 +
              C50814 * C5376) *
                 C50688 +
             (C49740 * C5368 + C50543 * C5374 + C49747 * C5367 +
              C50814 * C5370) *
                 C121) *
                C44420 +
            ((C44731 + C44730) * C50688 + (C44729 + C44728) * C121) * C50881 +
            C44735 * C50880) *
               C393) *
              C50587 * C50574)) /
            (p * q * std::sqrt(p + q));
    d2ee[198] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C121 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C50688) *
                C50880 +
            ((C27811 + C27812) * C121 + (C27813 + C27814) * C50688) * C50881 +
            C44734 * C44420) *
               C50830 -
           (((C30220 + C30219) * C50688 + (C30218 + C30217) * C121) * C44420 +
            ((C27815 + C27816) * C50688 + (C27817 + C27818) * C121) * C50881 +
            ((C27814 + C27813) * C50688 + (C27812 + C27811) * C121) * C50880) *
               C50667) *
              C50587 * C50872 +
          ((((C27819 + C27820) * C121 + (C27821 + C27822) * C50688) * C50880 +
            ((C27823 + C27824) * C121 + (C27825 + C27826) * C50688) * C50881 +
            ((C44728 + C44729) * C121 + (C44730 + C44731) * C50688) * C44420) *
               C50667 -
           (C44735 * C44420 +
            ((C27822 + C27821) * C50688 + (C27820 + C27819) * C121) * C50881 +
            ((C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                 C50688 +
             (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                 C121) *
                C50880) *
               C50830) *
              C50587 * C50873 +
          ((((C49747 * C124 + C50814 * C131 + C49740 * C125 + C50543 * C132) *
                 C121 +
             (C49747 * C135 + C50814 * C145 + C49740 * C136 + C50543 * C146) *
                 C50688) *
                C50880 +
            ((C28239 + C28240) * C121 + (C28241 + C28242) * C50688) * C50881 +
            ((C45036 + C45037) * C121 + (C45038 + C45039) * C50688) * C44420) *
               C50830 -
           (((C49740 * C1718 + C50543 * C1726 + C49747 * C1719 +
              C50814 * C1727) *
                 C50688 +
             (C49740 * C1714 + C50543 * C1722 + C49747 * C1715 +
              C50814 * C1723) *
                 C121) *
                C44420 +
            ((C45039 + C45038) * C50688 + (C45037 + C45036) * C121) * C50881 +
            ((C28242 + C28241) * C50688 + (C28240 + C28239) * C121) * C50880) *
               C50667) *
              C50587 * C536)) /
        (p * q * std::sqrt(p + q));
    d2ee[199] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                C121 +
            (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                C50688) *
               C50880 +
           ((C27811 + C27812) * C121 + (C27813 + C27814) * C50688) * C50881 +
           ((C27818 + C27817) * C121 + (C27816 + C27815) * C50688) * C44420) *
              C50603 * C50587 * C113 -
          (((C27826 + C27825) * C50688 + (C27824 + C27823) * C121) * C44420 +
           ((C27822 + C27821) * C50688 + (C27820 + C27819) * C121) * C50881 +
           ((C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                C50688 +
            (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                C121) *
               C50880) *
              C50603 * C50587 * C114 +
          (((C49747 * C124 + C50814 * C131 + C49740 * C125 + C50543 * C132) *
                C121 +
            (C49747 * C135 + C50814 * C145 + C49740 * C136 + C50543 * C146) *
                C50688) *
               C50880 +
           ((C28239 + C28240) * C121 + (C28241 + C28242) * C50688) * C50881 +
           ((C49747 * C400 + C50814 * C414 + C49740 * C401 + C50543 * C415) *
                C121 +
            (C49747 * C418 + C50814 * C430 + C49740 * C419 + C50543 * C431) *
                C50688) *
               C44420) *
              C50603 * C50587 * C115 -
          (((C49740 * C422 + C50543 * C433 + C49747 * C419 + C50814 * C431) *
                C50688 +
            (C49740 * C403 + C50543 * C423 + C49747 * C401 + C50814 * C415) *
                C121) *
               C44420 +
           ((C49740 * C421 + C50543 * C432 + C49747 * C404 + C50814 * C424) *
                C50688 +
            (C49740 * C402 + C50543 * C420 + C49747 * C394 + C50814 * C408) *
                C121) *
               C50881 +
           ((C49740 * C137 + C50543 * C147 + C49747 * C136 + C50814 * C146) *
                C50688 +
            (C49740 * C126 + C50543 * C138 + C49747 * C125 + C50814 * C132) *
                C121) *
               C50880) *
              C50603 * C50587 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C121 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C50688) *
                C50880 +
            ((C27811 + C27812) * C121 + (C27813 + C27814) * C50688) * C50881 +
            ((C27818 + C27817) * C121 + (C27816 + C27815) * C50688) * C44420) *
               C50603 * C248 -
           ((C29027 * C50688 + C29028 * C121) * C44420 +
            (C28503 * C50688 + C28504 * C121) * C50881 +
            ((C24720 + C24719) * C50688 + (C24718 + C24717) * C121) * C50880) *
               C50603 * C249 +
           ((C24741 * C121 + C24742 * C50688) * C50880 +
            (C29689 * C121 + C29690 * C50688) * C50881 +
            ((C25873 + C25874) * C121 + (C25875 + C25876) * C50688) * C44420) *
               C50603 * C250) *
              C251 +
          ((((C24729 + C24730) * C121 + (C24731 + C24732) * C50688) * C50880 +
            (C28505 * C121 + C28506 * C50688) * C50881 +
            ((C27827 + C27828) * C121 + (C27829 + C27830) * C50688) * C44420) *
               C50603 * C249 -
           (((C27826 + C27825) * C50688 + (C27824 + C27823) * C121) * C44420 +
            ((C27822 + C27821) * C50688 + (C27820 + C27819) * C121) * C50881 +
            ((C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                 C50688 +
             (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                 C121) *
                C50880) *
               C50603 * C248 -
           (((C49740 * C2554 + C50543 * C2558 + C49747 * C2553 +
              C50814 * C2557) *
                 C50688 +
             (C49740 * C2549 + C50543 * C2555 + C49747 * C2548 +
              C50814 * C2551) *
                 C121) *
                C44420 +
            ((C25448 + C25447) * C50688 + (C25446 + C25445) * C121) * C50881 +
            (C24743 * C50688 + C24744 * C121) * C50880) *
               C50603 * C250) *
              C50574)) /
            (p * q * std::sqrt(p + q));
    d2ee[200] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C121 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C50688) *
                C50880 +
            ((C27811 + C27812) * C121 + (C27813 + C27814) * C50688) * C50881 +
            C44734 * C44420) *
               C50603 * C50874 -
           (C45626 * C44420 + (C28503 * C50688 + C28504 * C121) * C50881 +
            ((C24720 + C24719) * C50688 + (C24718 + C24717) * C121) * C50880) *
               C50603 * C50875 +
           ((C24741 * C121 + C24742 * C50688) * C50880 +
            (C29689 * C121 + C29690 * C50688) * C50881 +
            ((C25873 + C25874) * C121 + (C25875 + C25876) * C50688) * C44420) *
               C50603 * C1199) *
              C50821 +
          ((((C24729 + C24730) * C121 + (C24731 + C24732) * C50688) * C50880 +
            (C28505 * C121 + C28506 * C50688) * C50881 +
            ((C27827 + C27828) * C121 + (C27829 + C27830) * C50688) * C44420) *
               C50603 * C50875 -
           (C44735 * C44420 +
            ((C27822 + C27821) * C50688 + (C27820 + C27819) * C121) * C50881 +
            ((C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                 C50688 +
             (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                 C121) *
                C50880) *
               C50603 * C50874 -
           (((C49740 * C2554 + C50543 * C2558 + C49747 * C2553 +
              C50814 * C2557) *
                 C50688 +
             (C49740 * C2549 + C50543 * C2555 + C49747 * C2548 +
              C50814 * C2551) *
                 C121) *
                C44420 +
            ((C25448 + C25447) * C50688 + (C25446 + C25445) * C121) * C50881 +
            (C24743 * C50688 + C24744 * C121) * C50880) *
               C50603 * C1199) *
              C50574)) /
        (p * q * std::sqrt(p + q));
    d2ee[201] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C121 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C50688) *
                C50880 +
            ((C27811 + C27812) * C121 + (C27813 + C27814) * C50688) * C50881 +
            C44734 * C44420) *
               C50830 -
           (((C30220 + C30219) * C50688 + (C30218 + C30217) * C121) * C44420 +
            ((C27815 + C27816) * C50688 + (C27817 + C27818) * C121) * C50881 +
            ((C27814 + C27813) * C50688 + (C27812 + C27811) * C121) * C50880) *
               C50667) *
              C50874 +
          (((C28501 * C121 + C28502 * C50688) * C50880 +
            (C29029 * C121 + C29030 * C50688) * C50881 +
            ((C29039 + C29040) * C121 + (C29041 + C29042) * C50688) * C44420) *
               C50667 -
           (C45626 * C44420 + (C28503 * C50688 + C28504 * C121) * C50881 +
            ((C24720 + C24719) * C50688 + (C24718 + C24717) * C121) * C50880) *
               C50830) *
              C50875 +
          (((C24741 * C121 + C24742 * C50688) * C50880 +
            (C29689 * C121 + C29690 * C50688) * C50881 +
            ((C25873 + C25874) * C121 + (C25875 + C25876) * C50688) * C44420) *
               C50830 -
           (((C49740 * C4475 + C50543 * C4483 + C49747 * C4476 +
              C50814 * C4484) *
                 C50688 +
             (C49740 * C4471 + C50543 * C4477 + C49747 * C4472 +
              C50814 * C4478) *
                 C121) *
                C44420 +
            ((C25876 + C25875) * C50688 + (C25874 + C25873) * C121) * C50881 +
            (C26363 * C50688 + C26364 * C121) * C50880) *
               C50667) *
              C1199) *
         C50568) /
        (p * q * std::sqrt(p + q));
    d2ee[202] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                C121 +
            (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                C50688) *
               C50880 +
           ((C27811 + C27812) * C121 + (C27813 + C27814) * C50688) * C50881 +
           C44734 * C44420) *
              C50603 * C964 -
          ((C29027 * C50688 + C29028 * C121) * C44420 +
           (C28503 * C50688 + C28504 * C121) * C50881 +
           ((C24720 + C24719) * C50688 + (C24718 + C24717) * C121) * C50880) *
              C50603 * C965 +
          ((C24741 * C121 + C24742 * C50688) * C50880 +
           (C29689 * C121 + C29690 * C50688) * C50881 +
           ((C25873 + C25874) * C121 + (C25875 + C25876) * C50688) * C44420) *
              C50603 * C966 -
          (((C49740 * C3543 + C50543 * C3547 + C49747 * C3544 +
             C50814 * C3548) *
                C50688 +
            (C49740 * C3541 + C50543 * C3545 + C49747 * C3542 +
             C50814 * C3546) *
                C121) *
               C44420 +
           ((C26376 + C26375) * C50688 + (C26374 + C26373) * C121) * C50881 +
           (C25693 * C50688 + C25694 * C121) * C50880) *
              C50603 * C967) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C121 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C50688) *
                C50880 +
            ((C27811 + C27812) * C121 + (C27813 + C27814) * C50688) * C50881 +
            C44734 * C44420) *
               C50603 * C893 -
           ((C29027 * C50688 + C29028 * C121) * C44420 +
            (C28503 * C50688 + C28504 * C121) * C50881 +
            ((C24720 + C24719) * C50688 + (C24718 + C24717) * C121) * C50880) *
               C50603 * C50639) *
              C895 +
          ((((C24729 + C24730) * C121 + (C24731 + C24732) * C50688) * C50880 +
            (C28505 * C121 + C28506 * C50688) * C50881 +
            ((C27827 + C27828) * C121 + (C27829 + C27830) * C50688) * C44420) *
               C50603 * C50639 -
           (C44735 * C44420 +
            ((C27822 + C27821) * C50688 + (C27820 + C27819) * C121) * C50881 +
            ((C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                 C50688 +
             (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                 C121) *
                C50880) *
               C50603 * C893) *
              C896 +
          ((((C49747 * C124 + C50814 * C131 + C49740 * C125 + C50543 * C132) *
                 C121 +
             (C49747 * C135 + C50814 * C145 + C49740 * C136 + C50543 * C146) *
                 C50688) *
                C50880 +
            ((C28239 + C28240) * C121 + (C28241 + C28242) * C50688) * C50881 +
            ((C45036 + C45037) * C121 + (C45038 + C45039) * C50688) * C44420) *
               C50603 * C893 -
           (((C49740 * C1087 + C50543 * C1095 + C49747 * C1088 +
              C50814 * C1096) *
                 C50688 +
             (C49740 * C1083 + C50543 * C1091 + C49747 * C1084 +
              C50814 * C1092) *
                 C121) *
                C44420 +
            ((C28036 + C28035) * C50688 + (C28034 + C28033) * C121) * C50881 +
            ((C25056 + C25055) * C50688 + (C25054 + C25053) * C121) * C50880) *
               C50603 * C50639) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C121 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C50688) *
                C50880 +
            ((C27811 + C27812) * C121 + (C27813 + C27814) * C50688) * C50881 +
            C44734 * C44420) *
               C391 -
           (((C30220 + C30219) * C50688 + (C30218 + C30217) * C121) * C44420 +
            ((C27815 + C27816) * C50688 + (C27817 + C27818) * C121) * C50881 +
            ((C27814 + C27813) * C50688 + (C27812 + C27811) * C121) * C50880) *
               C392 +
           (C44734 * C50880 +
            ((C30217 + C30218) * C121 + (C30219 + C30220) * C50688) * C50881 +
            ((C49747 * C5366 + C50814 * C5369 + C49740 * C5367 +
              C50543 * C5370) *
                 C121 +
             (C49747 * C5371 + C50814 * C5375 + C49740 * C5372 +
              C50543 * C5376) *
                 C50688) *
                C44420) *
               C393) *
              C893 +
          (((C28501 * C121 + C28502 * C50688) * C50880 +
            (C29029 * C121 + C29030 * C50688) * C50881 +
            ((C29039 + C29040) * C121 + (C29041 + C29042) * C50688) * C44420) *
               C392 -
           (C45626 * C44420 + (C28503 * C50688 + C28504 * C121) * C50881 +
            ((C24720 + C24719) * C50688 + (C24718 + C24717) * C121) * C50880) *
               C391 -
           (((C49740 * C6378 + C50543 * C6382 + C49747 * C6379 +
              C50814 * C6383) *
                 C50688 +
             (C49740 * C6376 + C50543 * C6380 + C49747 * C6377 +
              C50814 * C6381) *
                 C121) *
                C44420 +
            ((C29042 + C29041) * C50688 + (C29040 + C29039) * C121) * C50881 +
            C45626 * C50880) *
               C393) *
              C50639) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[203] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                  C121 +
              (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                  C50688) *
                 C50880 +
             ((C27811 + C27812) * C121 + (C27813 + C27814) * C50688) * C50881 +
             C44734 * C44420) *
                C50830 -
            (((C30220 + C30219) * C50688 + (C30218 + C30217) * C121) * C44420 +
             ((C27815 + C27816) * C50688 + (C27817 + C27818) * C121) * C50881 +
             ((C27814 + C27813) * C50688 + (C27812 + C27811) * C121) * C50880) *
                C50667) *
               C893 +
           (((C28501 * C121 + C28502 * C50688) * C50880 +
             (C29029 * C121 + C29030 * C50688) * C50881 +
             ((C29039 + C29040) * C121 + (C29041 + C29042) * C50688) * C44420) *
                C50667 -
            (C45626 * C44420 + (C28503 * C50688 + C28504 * C121) * C50881 +
             ((C24720 + C24719) * C50688 + (C24718 + C24717) * C121) * C50880) *
                C50830) *
               C50639) *
              C50821 +
          (((((C27819 + C27820) * C121 + (C27821 + C27822) * C50688) * C50880 +
             ((C27823 + C27824) * C121 + (C27825 + C27826) * C50688) * C50881 +
             ((C44728 + C44729) * C121 + (C44730 + C44731) * C50688) * C44420) *
                C50667 -
            (C44735 * C44420 +
             ((C27822 + C27821) * C50688 + (C27820 + C27819) * C121) * C50881 +
             ((C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                  C50688 +
              (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                  C121) *
                 C50880) *
                C50830) *
               C893 +
           ((((C24729 + C24730) * C121 + (C24731 + C24732) * C50688) * C50880 +
             (C28505 * C121 + C28506 * C50688) * C50881 +
             ((C27827 + C27828) * C121 + (C27829 + C27830) * C50688) * C44420) *
                C50830 -
            (((C49740 * C5971 + C50543 * C5973 + C49747 * C4479 +
               C50814 * C4485) *
                  C50688 +
              (C49740 * C5970 + C50543 * C5972 + C49747 * C4473 +
               C50814 * C4481) *
                  C121) *
                 C44420 +
             ((C27830 + C27829) * C50688 + (C27828 + C27827) * C121) * C50881 +
             (C28507 * C50688 + C28508 * C121) * C50880) *
                C50667) *
               C50639) *
              C50574)) /
        (p * q * std::sqrt(p + q));
    d2ee[204] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C121 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C50688) *
                C50880 +
            ((C27811 + C27812) * C121 + (C27813 + C27814) * C50688) * C50881 +
            C44734 * C44420) *
               C50603 * C893 -
           ((C29027 * C50688 + C29028 * C121) * C44420 +
            (C28503 * C50688 + C28504 * C121) * C50881 +
            ((C24720 + C24719) * C50688 + (C24718 + C24717) * C121) * C50880) *
               C50603 * C50639) *
              C895 +
          ((((C24729 + C24730) * C121 + (C24731 + C24732) * C50688) * C50880 +
            (C28505 * C121 + C28506 * C50688) * C50881 +
            ((C27827 + C27828) * C121 + (C27829 + C27830) * C50688) * C44420) *
               C50603 * C50639 -
           (C44735 * C44420 +
            ((C27822 + C27821) * C50688 + (C27820 + C27819) * C121) * C50881 +
            ((C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                 C50688 +
             (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                 C121) *
                C50880) *
               C50603 * C893) *
              C896 +
          ((((C49747 * C124 + C50814 * C131 + C49740 * C125 + C50543 * C132) *
                 C121 +
             (C49747 * C135 + C50814 * C145 + C49740 * C136 + C50543 * C146) *
                 C50688) *
                C50880 +
            ((C28239 + C28240) * C121 + (C28241 + C28242) * C50688) * C50881 +
            ((C45036 + C45037) * C121 + (C45038 + C45039) * C50688) * C44420) *
               C50603 * C893 -
           (((C49740 * C1087 + C50543 * C1095 + C49747 * C1088 +
              C50814 * C1096) *
                 C50688 +
             (C49740 * C1083 + C50543 * C1091 + C49747 * C1084 +
              C50814 * C1092) *
                 C121) *
                C44420 +
            ((C28036 + C28035) * C50688 + (C28034 + C28033) * C121) * C50881 +
            ((C25056 + C25055) * C50688 + (C25054 + C25053) * C121) * C50880) *
               C50603 * C50639) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                C121 +
            (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                C50688) *
               C50880 +
           ((C27811 + C27812) * C121 + (C27813 + C27814) * C50688) * C50881 +
           C44734 * C44420) *
              C50603 * C964 -
          ((C29027 * C50688 + C29028 * C121) * C44420 +
           (C28503 * C50688 + C28504 * C121) * C50881 +
           ((C24720 + C24719) * C50688 + (C24718 + C24717) * C121) * C50880) *
              C50603 * C965 +
          ((C24741 * C121 + C24742 * C50688) * C50880 +
           (C29689 * C121 + C29690 * C50688) * C50881 +
           ((C25873 + C25874) * C121 + (C25875 + C25876) * C50688) * C44420) *
              C50603 * C966 -
          (((C49740 * C3543 + C50543 * C3547 + C49747 * C3544 +
             C50814 * C3548) *
                C50688 +
            (C49740 * C3541 + C50543 * C3545 + C49747 * C3542 +
             C50814 * C3546) *
                C121) *
               C44420 +
           ((C26376 + C26375) * C50688 + (C26374 + C26373) * C121) * C50881 +
           (C25693 * C50688 + C25694 * C121) * C50880) *
              C50603 * C967) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[205] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                  C121 +
              (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                  C50688) *
                 C50880 +
             ((C27811 + C27812) * C121 + (C27813 + C27814) * C50688) * C50881 +
             C44734 * C44420) *
                C1544 -
            (C46519 * C44420 +
             ((C27815 + C27816) * C50688 + (C27817 + C27818) * C121) * C50881 +
             ((C27814 + C27813) * C50688 + (C27812 + C27811) * C121) * C50880) *
                C50667) *
               C50829 +
           (((C28501 * C121 + C28502 * C50688) * C50880 +
             (C29029 * C121 + C29030 * C50688) * C50881 +
             ((C29039 + C29040) * C121 + (C29041 + C29042) * C50688) * C44420) *
                C50667 -
            (C45626 * C44420 + (C28503 * C50688 + C28504 * C121) * C50881 +
             ((C24720 + C24719) * C50688 + (C24718 + C24717) * C121) * C50880) *
                C1544) *
               C50639) *
              C50821 +
          (((((C27819 + C27820) * C121 + (C27821 + C27822) * C50688) * C50880 +
             ((C27823 + C27824) * C121 + (C27825 + C27826) * C50688) * C50881 +
             ((C44728 + C44729) * C121 + (C44730 + C44731) * C50688) * C44420) *
                C50667 -
            (C44735 * C44420 +
             ((C27822 + C27821) * C50688 + (C27820 + C27819) * C121) * C50881 +
             ((C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                  C50688 +
              (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                  C121) *
                 C50880) *
                C1544) *
               C50829 +
           ((((C24729 + C24730) * C121 + (C24731 + C24732) * C50688) * C50880 +
             (C28505 * C121 + C28506 * C50688) * C50881 +
             ((C27827 + C27828) * C121 + (C27829 + C27830) * C50688) * C44420) *
                C1544 -
            (((C49740 * C5971 + C50543 * C5973 + C49747 * C4479 +
               C50814 * C4485) *
                  C50688 +
              (C49740 * C5970 + C50543 * C5972 + C49747 * C4473 +
               C50814 * C4481) *
                  C121) *
                 C44420 +
             ((C27830 + C27829) * C50688 + (C27828 + C27827) * C121) * C50881 +
             (C28507 * C50688 + C28508 * C121) * C50880) *
                C50667) *
               C50639) *
              C50574)) /
        (p * q * std::sqrt(p + q));
    d2ee[206] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C121 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C50688) *
                C50880 +
            ((C27811 + C27812) * C121 + (C27813 + C27814) * C50688) * C50881 +
            C44734 * C44420) *
               C50876 -
           (C46519 * C44420 +
            ((C27815 + C27816) * C50688 + (C27817 + C27818) * C121) * C50881 +
            ((C27814 + C27813) * C50688 + (C27812 + C27811) * C121) * C50880) *
               C50877 +
           (C44734 * C50880 +
            ((C30217 + C30218) * C121 + (C30219 + C30220) * C50688) * C50881 +
            ((C46515 + C46516) * C121 + (C46517 + C46518) * C50688) * C44420) *
               C1960) *
              C50829 +
          (((C28501 * C121 + C28502 * C50688) * C50880 +
            (C29029 * C121 + C29030 * C50688) * C50881 +
            ((C29039 + C29040) * C121 + (C29041 + C29042) * C50688) * C44420) *
               C50877 -
           (C45626 * C44420 + (C28503 * C50688 + C28504 * C121) * C50881 +
            ((C24720 + C24719) * C50688 + (C24718 + C24717) * C121) * C50880) *
               C50876 -
           (((C49740 * C6378 + C50543 * C6382 + C49747 * C6379 +
              C50814 * C6383) *
                 C50688 +
             (C49740 * C6376 + C50543 * C6380 + C49747 * C6377 +
              C50814 * C6381) *
                 C121) *
                C44420 +
            ((C29042 + C29041) * C50688 + (C29040 + C29039) * C121) * C50881 +
            C45626 * C50880) *
               C1960) *
              C50639) *
         C50568) /
        (p * q * std::sqrt(p + q));
    d2ee[207] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C121 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C50688) *
                C50880 +
            ((C27811 + C27812) * C121 + (C27813 + C27814) * C50688) * C50881 +
            C44734 * C44420) *
               C1544 -
           (((C30220 + C30219) * C50688 + (C30218 + C30217) * C121) * C44420 +
            ((C27815 + C27816) * C50688 + (C27817 + C27818) * C121) * C50881 +
            ((C27814 + C27813) * C50688 + (C27812 + C27811) * C121) * C50880) *
               C50667) *
              C248 +
          (((C28501 * C121 + C28502 * C50688) * C50880 +
            (C29029 * C121 + C29030 * C50688) * C50881 +
            ((C29039 + C29040) * C121 + (C29041 + C29042) * C50688) * C44420) *
               C50667 -
           (C45626 * C44420 + (C28503 * C50688 + C28504 * C121) * C50881 +
            ((C24720 + C24719) * C50688 + (C24718 + C24717) * C121) * C50880) *
               C1544) *
              C249 +
          (((C24741 * C121 + C24742 * C50688) * C50880 +
            (C29689 * C121 + C29690 * C50688) * C50881 +
            ((C25873 + C25874) * C121 + (C25875 + C25876) * C50688) * C44420) *
               C1544 -
           (((C49740 * C4475 + C50543 * C4483 + C49747 * C4476 +
              C50814 * C4484) *
                 C50688 +
             (C49740 * C4471 + C50543 * C4477 + C49747 * C4472 +
              C50814 * C4478) *
                 C121) *
                C44420 +
            ((C25876 + C25875) * C50688 + (C25874 + C25873) * C121) * C50881 +
            (C26363 * C50688 + C26364 * C121) * C50880) *
               C50667) *
              C250) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C121 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C50688) *
                C50880 +
            ((C27811 + C27812) * C121 + (C27813 + C27814) * C50688) * C50881 +
            C44734 * C44420) *
               C1544 -
           (((C30220 + C30219) * C50688 + (C30218 + C30217) * C121) * C44420 +
            ((C27815 + C27816) * C50688 + (C27817 + C27818) * C121) * C50881 +
            ((C27814 + C27813) * C50688 + (C27812 + C27811) * C121) * C50880) *
               C50667) *
              C50587 * C895 +
          ((((C27819 + C27820) * C121 + (C27821 + C27822) * C50688) * C50880 +
            ((C27823 + C27824) * C121 + (C27825 + C27826) * C50688) * C50881 +
            ((C44728 + C44729) * C121 + (C44730 + C44731) * C50688) * C44420) *
               C50667 -
           (C44735 * C44420 +
            ((C27822 + C27821) * C50688 + (C27820 + C27819) * C121) * C50881 +
            ((C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                 C50688 +
             (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                 C121) *
                C50880) *
               C1544) *
              C50587 * C896 +
          ((((C49747 * C124 + C50814 * C131 + C49740 * C125 + C50543 * C132) *
                 C121 +
             (C49747 * C135 + C50814 * C145 + C49740 * C136 + C50543 * C146) *
                 C50688) *
                C50880 +
            ((C28239 + C28240) * C121 + (C28241 + C28242) * C50688) * C50881 +
            ((C45036 + C45037) * C121 + (C45038 + C45039) * C50688) * C44420) *
               C1544 -
           (((C49740 * C1718 + C50543 * C1726 + C49747 * C1719 +
              C50814 * C1727) *
                 C50688 +
             (C49740 * C1714 + C50543 * C1722 + C49747 * C1715 +
              C50814 * C1723) *
                 C121) *
                C44420 +
            ((C45039 + C45038) * C50688 + (C45037 + C45036) * C121) * C50881 +
            ((C28242 + C28241) * C50688 + (C28240 + C28239) * C121) * C50880) *
               C50667) *
              C50587 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                C121 +
            (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                C50688) *
               C50880 +
           ((C27811 + C27812) * C121 + (C27813 + C27814) * C50688) * C50881 +
           C44734 * C44420) *
              C1710 -
          (C46519 * C44420 +
           ((C27815 + C27816) * C50688 + (C27817 + C27818) * C121) * C50881 +
           ((C27814 + C27813) * C50688 + (C27812 + C27811) * C121) * C50880) *
              C1711 +
          (C44734 * C50880 +
           ((C30217 + C30218) * C121 + (C30219 + C30220) * C50688) * C50881 +
           ((C46515 + C46516) * C121 + (C46517 + C46518) * C50688) * C44420) *
              C1712 -
          (((C49740 * C7279 + C50543 * C7283 + C49747 * C7280 +
             C50814 * C7284) *
                C50688 +
            (C49740 * C7277 + C50543 * C7281 + C49747 * C7278 +
             C50814 * C7282) *
                C121) *
               C44420 +
           ((C46518 + C46517) * C50688 + (C46516 + C46515) * C121) * C50881 +
           C46519 * C50880) *
              C1713) *
         C50587 * C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[208] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C121 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C50688) *
                C50880 +
            ((C27811 + C27812) * C121 + (C27813 + C27814) * C50688) * C50881 +
            C44734 * C44420) *
               C50876 -
           (C46519 * C44420 +
            ((C27815 + C27816) * C50688 + (C27817 + C27818) * C121) * C50881 +
            ((C27814 + C27813) * C50688 + (C27812 + C27811) * C121) * C50880) *
               C50877 +
           (C44734 * C50880 +
            ((C30217 + C30218) * C121 + (C30219 + C30220) * C50688) * C50881 +
            ((C46515 + C46516) * C121 + (C46517 + C46518) * C50688) * C44420) *
               C1960) *
              C50587 * C50821 +
          ((((C27819 + C27820) * C121 + (C27821 + C27822) * C50688) * C50880 +
            ((C27823 + C27824) * C121 + (C27825 + C27826) * C50688) * C50881 +
            ((C44728 + C44729) * C121 + (C44730 + C44731) * C50688) * C44420) *
               C50877 -
           (C44735 * C44420 +
            ((C27822 + C27821) * C50688 + (C27820 + C27819) * C121) * C50881 +
            ((C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                 C50688 +
             (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                 C121) *
                C50880) *
               C50876 -
           (((C49740 * C5373 + C50543 * C5377 + C49747 * C5372 +
              C50814 * C5376) *
                 C50688 +
             (C49740 * C5368 + C50543 * C5374 + C49747 * C5367 +
              C50814 * C5370) *
                 C121) *
                C44420 +
            ((C44731 + C44730) * C50688 + (C44729 + C44728) * C121) * C50881 +
            C44735 * C50880) *
               C1960) *
              C50587 * C50574)) /
        (p * q * std::sqrt(p + q));
    d2ee[209] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C121 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C50688) *
                C50880 +
            ((C27811 + C27812) * C121 + (C27813 + C27814) * C50688) * C50881 +
            C44734 * C44420) *
               C1544 -
           (((C30220 + C30219) * C50688 + (C30218 + C30217) * C121) * C44420 +
            ((C27815 + C27816) * C50688 + (C27817 + C27818) * C121) * C50881 +
            ((C27814 + C27813) * C50688 + (C27812 + C27811) * C121) * C50880) *
               C50667) *
              C50587 * C895 +
          ((((C27819 + C27820) * C121 + (C27821 + C27822) * C50688) * C50880 +
            ((C27823 + C27824) * C121 + (C27825 + C27826) * C50688) * C50881 +
            ((C44728 + C44729) * C121 + (C44730 + C44731) * C50688) * C44420) *
               C50667 -
           (C44735 * C44420 +
            ((C27822 + C27821) * C50688 + (C27820 + C27819) * C121) * C50881 +
            ((C49740 * C135 + C50543 * C145 + C49747 * C134 + C50814 * C144) *
                 C50688 +
             (C49740 * C124 + C50543 * C131 + C49747 * C123 + C50814 * C130) *
                 C121) *
                C50880) *
               C1544) *
              C50587 * C896 +
          ((((C49747 * C124 + C50814 * C131 + C49740 * C125 + C50543 * C132) *
                 C121 +
             (C49747 * C135 + C50814 * C145 + C49740 * C136 + C50543 * C146) *
                 C50688) *
                C50880 +
            ((C28239 + C28240) * C121 + (C28241 + C28242) * C50688) * C50881 +
            ((C45036 + C45037) * C121 + (C45038 + C45039) * C50688) * C44420) *
               C1544 -
           (((C49740 * C1718 + C50543 * C1726 + C49747 * C1719 +
              C50814 * C1727) *
                 C50688 +
             (C49740 * C1714 + C50543 * C1722 + C49747 * C1715 +
              C50814 * C1723) *
                 C121) *
                C44420 +
            ((C45039 + C45038) * C50688 + (C45037 + C45036) * C121) * C50881 +
            ((C28242 + C28241) * C50688 + (C28240 + C28239) * C121) * C50880) *
               C50667) *
              C50587 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49747 * C122 + C50814 * C129 + C49740 * C123 + C50543 * C130) *
                 C121 +
             (C49747 * C133 + C50814 * C143 + C49740 * C134 + C50543 * C144) *
                 C50688) *
                C50880 +
            ((C27811 + C27812) * C121 + (C27813 + C27814) * C50688) * C50881 +
            C44734 * C44420) *
               C1544 -
           (((C30220 + C30219) * C50688 + (C30218 + C30217) * C121) * C44420 +
            ((C27815 + C27816) * C50688 + (C27817 + C27818) * C121) * C50881 +
            ((C27814 + C27813) * C50688 + (C27812 + C27811) * C121) * C50880) *
               C50667) *
              C248 +
          (((C28501 * C121 + C28502 * C50688) * C50880 +
            (C29029 * C121 + C29030 * C50688) * C50881 +
            ((C29039 + C29040) * C121 + (C29041 + C29042) * C50688) * C44420) *
               C50667 -
           (C45626 * C44420 + (C28503 * C50688 + C28504 * C121) * C50881 +
            ((C24720 + C24719) * C50688 + (C24718 + C24717) * C121) * C50880) *
               C1544) *
              C249 +
          (((C24741 * C121 + C24742 * C50688) * C50880 +
            (C29689 * C121 + C29690 * C50688) * C50881 +
            ((C25873 + C25874) * C121 + (C25875 + C25876) * C50688) * C44420) *
               C1544 -
           (((C49740 * C4475 + C50543 * C4483 + C49747 * C4476 +
              C50814 * C4484) *
                 C50688 +
             (C49740 * C4471 + C50543 * C4477 + C49747 * C4472 +
              C50814 * C4478) *
                 C121) *
                C44420 +
            ((C25876 + C25875) * C50688 + (C25874 + C25873) * C121) * C50881 +
            (C26363 * C50688 + C26364 * C121) * C50880) *
               C50667) *
              C250) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[210] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
              C16965 * C124 + C16960 * C131) *
                 C121 +
             (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
              C16965 * C135 + C16960 * C145) *
                 C50688) *
                C33658 +
            ((C34001 + C34002 + C34003) * C121 +
             (C34004 + C34005 + C34006) * C50688) *
                C50764) *
               C50603 * C50829 -
           (((C17861 + C17862 + C17863) * C50688 +
             (C17864 + C17865 + C17866) * C121) *
                C50764 +
            ((C17168 + C17167 + C17166) * C50688 +
             (C17165 + C17164 + C17163) * C121) *
                C33658) *
               C50603 * C50639) *
              C50872 +
          ((((C17175 + C17176 + C17177) * C121 +
             (C17178 + C17179 + C17180) * C50688) *
                C33658 +
            ((C17867 + C17868 + C17869) * C121 +
             (C17870 + C17871 + C17872) * C50688) *
                C50764) *
               C50603 * C50639 -
           (((C34018 + C34017 + C34016) * C50688 +
             (C34015 + C34014 + C34013) * C121) *
                C50764 +
            ((C16965 * C136 + C16960 * C146 + C16964 * C135 + C16959 * C145 +
              C16963 * C134 + C16958 * C144) *
                 C50688 +
             (C16965 * C125 + C16960 * C132 + C16964 * C124 + C16959 * C131 +
              C16963 * C123 + C16958 * C130) *
                 C121) *
                C33658) *
               C50603 * C50829) *
              C50873 +
          ((((C16963 * C124 + C16958 * C131 + C16964 * C125 + C16959 * C132 +
              C16965 * C126 + C16960 * C138) *
                 C121 +
             (C16963 * C135 + C16958 * C145 + C16964 * C136 + C16959 * C146 +
              C16965 * C137 + C16960 * C147) *
                 C50688) *
                C33658 +
            ((C16963 * C395 + C16958 * C409 + C16964 * C394 + C16959 * C408 +
              C16965 * C402 + C16960 * C420) *
                 C121 +
             (C16963 * C405 + C16958 * C425 + C16964 * C404 + C16959 * C424 +
              C16965 * C421 + C16960 * C432) *
                 C50688) *
                C50764) *
               C50603 * C50829 -
           (((C16965 * C788 + C16960 * C794 + C16964 * C787 + C16959 * C793 +
              C16963 * C786 + C16958 * C792) *
                 C50688 +
             (C16965 * C779 + C16960 * C789 + C16964 * C778 + C16959 * C783 +
              C16963 * C777 + C16958 * C782) *
                 C121) *
                C50764 +
            ((C17496 + C17495 + C17494) * C50688 +
             (C17493 + C17492 + C17491) * C121) *
                C33658) *
               C50603 * C50639) *
              C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C2164 +
             (C19749 * C133 + C50538 * C143) * C2159 + C19885 * C2165 +
             C19886 * C2160 + C19887 * C2166 + C19888 * C2161) *
                C33658 +
            (C36689 + C36690 + C36691 + C36692 + C36693 + C36694) * C50764) *
               C50603 * C50829 -
           ((C20367 * C2161 + C20368 * C2166 + C20369 * C2160 + C20370 * C2165 +
             C20371 * C2159 + C20372 * C2164) *
                C50764 +
            (C19890 * C2161 + C19889 * C2166 + C19888 * C2160 + C19887 * C2165 +
             C19886 * C2159 + C19885 * C2164) *
                C33658) *
               C50603 * C50639) *
              C50872 +
          (((C19893 * C2164 + C19894 * C2159 + C19895 * C2165 + C19896 * C2160 +
             C19897 * C2166 + C19898 * C2161) *
                C33658 +
            (C20373 * C2164 + C20374 * C2159 + C20375 * C2165 + C20376 * C2160 +
             C20377 * C2166 + C20378 * C2161) *
                C50764) *
               C50603 * C50639 -
           ((C36706 + C36705 + C36704 + C36703 + C36702 + C36701) * C50764 +
            (C19896 * C2161 + C19895 * C2166 + C19894 * C2160 + C19893 * C2165 +
             (C19749 * C134 + C50538 * C144) * C2159 +
             (C19749 * C123 + C50538 * C130) * C2164) *
                C33658) *
               C50603 * C50829) *
              C50873 +
          ((((C19749 * C124 + C50538 * C131) * C2164 +
             (C19749 * C135 + C50538 * C145) * C2159 + C20109 * C2165 +
             C20110 * C2160 + C20111 * C2166 + C20112 * C2161) *
                C33658 +
            (C22397 * C2164 + C22398 * C2159 + C22235 * C2165 + C22236 * C2160 +
             C31431 * C2166 + C31432 * C2161) *
                C50764) *
               C50603 * C50829 -
           (((C19749 * C3076 + C50538 * C3080) * C2161 +
             (C19749 * C3071 + C50538 * C3077) * C2166 + C31432 * C2160 +
             C31431 * C2165 + C22236 * C2159 + C22235 * C2164) *
                C50764 +
            (C20114 * C2161 + C20113 * C2166 + C20112 * C2160 + C20111 * C2165 +
             C20110 * C2159 + C20109 * C2164) *
                C33658) *
               C50603 * C50639) *
              C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[211] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
               C16965 * C124 + C16960 * C131) *
                  C121 +
              (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
               C16965 * C135 + C16960 * C145) *
                  C50688) *
                 C33658 +
             ((C34001 + C34002 + C34003) * C121 +
              (C34004 + C34005 + C34006) * C50688) *
                 C50764) *
                C50830 -
            (((C34007 + C34008 + C34009) * C50688 +
              (C34010 + C34011 + C34012) * C121) *
                 C50764 +
             ((C34006 + C34005 + C34004) * C50688 +
              (C34003 + C34002 + C34001) * C121) *
                 C33658) *
                C50667) *
               C50829 +
           ((((C17866 + C17865 + C17864) * C121 +
              (C17863 + C17862 + C17861) * C50688) *
                 C33658 +
             ((C18293 + C18294 + C18295) * C121 +
              (C18296 + C18297 + C18298) * C50688) *
                 C50764) *
                C50667 -
            (((C17861 + C17862 + C17863) * C50688 +
              (C17864 + C17865 + C17866) * C121) *
                 C50764 +
             ((C17168 + C17167 + C17166) * C50688 +
              (C17165 + C17164 + C17163) * C121) *
                 C33658) *
                C50830) *
               C50639) *
              C251 +
          (((((C34013 + C34014 + C34015) * C121 +
              (C34016 + C34017 + C34018) * C50688) *
                 C33658 +
             ((C34019 + C34020 + C34021) * C121 +
              (C34022 + C34023 + C34024) * C50688) *
                 C50764) *
                C50667 -
            (((C34018 + C34017 + C34016) * C50688 +
              (C34015 + C34014 + C34013) * C121) *
                 C50764 +
             ((C16965 * C136 + C16960 * C146 + C16964 * C135 + C16959 * C145 +
               C16963 * C134 + C16958 * C144) *
                  C50688 +
              (C16965 * C125 + C16960 * C132 + C16964 * C124 + C16959 * C131 +
               C16963 * C123 + C16958 * C130) *
                  C121) *
                 C33658) *
                C50830) *
               C50829 +
           ((((C17175 + C17176 + C17177) * C121 +
              (C17178 + C17179 + C17180) * C50688) *
                 C33658 +
             ((C17867 + C17868 + C17869) * C121 +
              (C17870 + C17871 + C17872) * C50688) *
                 C50764) *
                C50830 -
            (((C16965 * C1087 + C16960 * C1095 + C16964 * C1088 +
               C16959 * C1096 + C16963 * C1089 + C16958 * C1097) *
                  C50688 +
              (C16965 * C1083 + C16960 * C1091 + C16964 * C1084 +
               C16959 * C1092 + C16963 * C1085 + C16958 * C1093) *
                  C121) *
                 C50764 +
             ((C17872 + C17871 + C17870) * C50688 +
              (C17869 + C17868 + C17867) * C121) *
                 C33658) *
                C50667) *
               C50639) *
              C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C19749 * C122 + C50538 * C129) * C2164 +
              (C19749 * C133 + C50538 * C143) * C2159 + C19885 * C2165 +
              C19886 * C2160 + C19887 * C2166 + C19888 * C2161) *
                 C33658 +
             (C36689 + C36690 + C36691 + C36692 + C36693 + C36694) * C50764) *
                C50830 -
            ((C36695 + C36696 + C36697 + C36698 + C36699 + C36700) * C50764 +
             (C36694 + C36693 + C36692 + C36691 + C36690 + C36689) * C33658) *
                C50667) *
               C50829 +
           (((C37205 + C37206 + C37207 + C37208 + C37209 + C37210) * C33658 +
             (C20667 * C2164 + C20668 * C2159 + C20669 * C2165 +
              C20670 * C2160 + C20671 * C2166 + C20672 * C2161) *
                 C50764) *
                C50667 -
            ((C37210 + C37209 + C37208 + C37207 + C37206 + C37205) * C50764 +
             (C19890 * C2161 + C19889 * C2166 + C19888 * C2160 +
              C19887 * C2165 + C19886 * C2159 + C19885 * C2164) *
                 C33658) *
                C50830) *
               C50639) *
              C251 +
          ((((C36701 + C36702 + C36703 + C36704 + C36705 + C36706) * C33658 +
             (C36707 + C36708 + C36709 + C36710 + C36711 + C36712) * C50764) *
                C50667 -
            ((C36706 + C36705 + C36704 + C36703 + C36702 + C36701) * C50764 +
             (C19896 * C2161 + C19895 * C2166 + C19894 * C2160 +
              C19893 * C2165 + (C19749 * C134 + C50538 * C144) * C2159 +
              (C19749 * C123 + C50538 * C130) * C2164) *
                 C33658) *
                C50830) *
               C50829 +
           (((C19893 * C2164 + C19894 * C2159 + C19895 * C2165 +
              C19896 * C2160 + C19897 * C2166 + C19898 * C2161) *
                 C33658 +
             (C37211 + C37212 + C37213 + C37214 + C37215 + C37216) * C50764) *
                C50830 -
            (((C19749 * C3543 + C50538 * C3547) * C2161 +
              (C19749 * C3541 + C50538 * C3545) * C2166 + C21856 * C2160 +
              C21855 * C2165 + C21854 * C2159 + C21853 * C2164) *
                 C50764 +
             (C37216 + C37215 + C37214 + C37213 + C37212 + C37211) * C33658) *
                C50667) *
               C50639) *
              C50574)) /
            (p * q * std::sqrt(p + q));
    d2ee[212] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
              C16965 * C124 + C16960 * C131) *
                 C121 +
             (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
              C16965 * C135 + C16960 * C145) *
                 C50688) *
                C33658 +
            ((C16963 * C397 + C16958 * C411 + C16964 * C396 + C16959 * C410 +
              C16965 * C395 + C16960 * C409) *
                 C121 +
             (C16963 * C407 + C16958 * C427 + C16964 * C406 + C16959 * C426 +
              C16965 * C405 + C16960 * C425) *
                 C50688) *
                C50764) *
               C50603 * C248 -
           (((C17861 + C17862 + C17863) * C50688 +
             (C17864 + C17865 + C17866) * C121) *
                C50764 +
            ((C17168 + C17167 + C17166) * C50688 +
             (C17165 + C17164 + C17163) * C121) *
                C33658) *
               C50603 * C249 +
           (((C17174 + C17173 + C17172) * C121 +
             (C17171 + C17170 + C17169) * C50688) *
                C33658 +
            ((C18797 + C18798 + C18799) * C121 +
             (C18800 + C18801 + C18802) * C50688) *
                C50764) *
               C50603 * C250) *
              C251 +
          ((((C17175 + C17176 + C17177) * C121 +
             (C17178 + C17179 + C17180) * C50688) *
                C33658 +
            ((C17867 + C17868 + C17869) * C121 +
             (C17870 + C17871 + C17872) * C50688) *
                C50764) *
               C50603 * C249 -
           (((C16965 * C404 + C16960 * C424 + C16964 * C405 + C16959 * C425 +
              C16963 * C406 + C16958 * C426) *
                 C50688 +
             (C16965 * C394 + C16960 * C408 + C16964 * C395 + C16959 * C409 +
              C16963 * C396 + C16958 * C410) *
                 C121) *
                C50764 +
            ((C16965 * C136 + C16960 * C146 + C16964 * C135 + C16959 * C145 +
              C16963 * C134 + C16958 * C144) *
                 C50688 +
             (C16965 * C125 + C16960 * C132 + C16964 * C124 + C16959 * C131 +
              C16963 * C123 + C16958 * C130) *
                 C121) *
                C33658) *
               C50603 * C248 -
           (((C16965 * C1434 + C16960 * C1442 + C16964 * C1435 +
              C16959 * C1443 + C16963 * C1436 + C16958 * C1444) *
                 C50688 +
             (C16965 * C1430 + C16960 * C1438 + C16964 * C1431 +
              C16959 * C1439 + C16963 * C1432 + C16958 * C1440) *
                 C121) *
                C50764 +
            ((C17186 + C17185 + C17184) * C50688 +
             (C17183 + C17182 + C17181) * C121) *
                C33658) *
               C50603 * C250) *
              C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
             C16965 * C124 + C16960 * C131) *
                C121 +
            (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
             C16965 * C135 + C16960 * C145) *
                C50688) *
               C33658 +
           ((C16963 * C397 + C16958 * C411 + C16964 * C396 + C16959 * C410 +
             C16965 * C395 + C16960 * C409) *
                C121 +
            (C16963 * C407 + C16958 * C427 + C16964 * C406 + C16959 * C426 +
             C16965 * C405 + C16960 * C425) *
                C50688) *
               C50764) *
              C50603 * C50587 * C113 -
          (((C16965 * C404 + C16960 * C424 + C16964 * C405 + C16959 * C425 +
             C16963 * C406 + C16958 * C426) *
                C50688 +
            (C16965 * C394 + C16960 * C408 + C16964 * C395 + C16959 * C409 +
             C16963 * C396 + C16958 * C410) *
                C121) *
               C50764 +
           ((C16965 * C136 + C16960 * C146 + C16964 * C135 + C16959 * C145 +
             C16963 * C134 + C16958 * C144) *
                C50688 +
            (C16965 * C125 + C16960 * C132 + C16964 * C124 + C16959 * C131 +
             C16963 * C123 + C16958 * C130) *
                C121) *
               C33658) *
              C50603 * C50587 * C114 +
          (((C16963 * C124 + C16958 * C131 + C16964 * C125 + C16959 * C132 +
             C16965 * C126 + C16960 * C138) *
                C121 +
            (C16963 * C135 + C16958 * C145 + C16964 * C136 + C16959 * C146 +
             C16965 * C137 + C16960 * C147) *
                C50688) *
               C33658 +
           ((C16963 * C395 + C16958 * C409 + C16964 * C394 + C16959 * C408 +
             C16965 * C402 + C16960 * C420) *
                C121 +
            (C16963 * C405 + C16958 * C425 + C16964 * C404 + C16959 * C424 +
             C16965 * C421 + C16960 * C432) *
                C50688) *
               C50764) *
              C50603 * C50587 * C115 -
          (((C16965 * C642 + C16960 * C644 + C16964 * C421 + C16959 * C432 +
             C16963 * C404 + C16958 * C424) *
                C50688 +
            (C16965 * C641 + C16960 * C643 + C16964 * C402 + C16959 * C420 +
             C16963 * C394 + C16958 * C408) *
                C121) *
               C50764 +
           ((C16965 * C140 + C16960 * C148 + C16964 * C137 + C16959 * C147 +
             C16963 * C136 + C16958 * C146) *
                C50688 +
            (C16965 * C127 + C16960 * C139 + C16964 * C126 + C16959 * C138 +
             C16963 * C125 + C16958 * C132) *
                C121) *
               C33658) *
              C50603 * C50587 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
              C16965 * C124 + C16960 * C131) *
                 C121 +
             (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
              C16965 * C135 + C16960 * C145) *
                 C50688) *
                C33658 +
            ((C34001 + C34002 + C34003) * C121 +
             (C34004 + C34005 + C34006) * C50688) *
                C50764) *
               C391 -
           (((C34007 + C34008 + C34009) * C50688 +
             (C34010 + C34011 + C34012) * C121) *
                C50764 +
            ((C34006 + C34005 + C34004) * C50688 +
             (C34003 + C34002 + C34001) * C121) *
                C33658) *
               C392 +
           (((C34012 + C34011 + C34010) * C121 +
             (C34009 + C34008 + C34007) * C50688) *
                C33658 +
            ((C16963 * C1717 + C16958 * C1725 + C16964 * C1716 +
              C16959 * C1724 + C16965 * C1715 + C16960 * C1723) *
                 C121 +
             (C16963 * C1721 + C16958 * C1729 + C16964 * C1720 +
              C16959 * C1728 + C16965 * C1719 + C16960 * C1727) *
                 C50688) *
                C50764) *
               C393) *
              C50587 * C251 +
          ((((C34013 + C34014 + C34015) * C121 +
             (C34016 + C34017 + C34018) * C50688) *
                C33658 +
            ((C34019 + C34020 + C34021) * C121 +
             (C34022 + C34023 + C34024) * C50688) *
                C50764) *
               C392 -
           (((C34018 + C34017 + C34016) * C50688 +
             (C34015 + C34014 + C34013) * C121) *
                C50764 +
            ((C16965 * C136 + C16960 * C146 + C16964 * C135 + C16959 * C145 +
              C16963 * C134 + C16958 * C144) *
                 C50688 +
             (C16965 * C125 + C16960 * C132 + C16964 * C124 + C16959 * C131 +
              C16963 * C123 + C16958 * C130) *
                 C121) *
                C33658) *
               C391 -
           (((C16965 * C1718 + C16960 * C1726 + C16964 * C1719 +
              C16959 * C1727 + C16963 * C1720 + C16958 * C1728) *
                 C50688 +
             (C16965 * C1714 + C16960 * C1722 + C16964 * C1715 +
              C16959 * C1723 + C16963 * C1716 + C16958 * C1724) *
                 C121) *
                C50764 +
            ((C34024 + C34023 + C34022) * C50688 +
             (C34021 + C34020 + C34019) * C121) *
                C33658) *
               C393) *
              C50587 * C50574)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19749 * C122 + C50538 * C129) * C2164 +
            (C19749 * C133 + C50538 * C143) * C2159 + C19885 * C2165 +
            C19886 * C2160 + C19887 * C2166 + C19888 * C2161) *
               C33658 +
           (C22043 * C2164 + C22044 * C2159 + C20372 * C2165 + C20371 * C2160 +
            C20370 * C2166 + C20369 * C2161) *
               C50764) *
              C50603 * C50587 * C113 -
          ((C20376 * C2161 + C20375 * C2166 + C20374 * C2160 + C20373 * C2165 +
            C22052 * C2159 + C22051 * C2164) *
               C50764 +
           (C19896 * C2161 + C19895 * C2166 + C19894 * C2160 + C19893 * C2165 +
            (C19749 * C134 + C50538 * C144) * C2159 +
            (C19749 * C123 + C50538 * C130) * C2164) *
               C33658) *
              C50603 * C50587 * C114 +
          (((C19749 * C124 + C50538 * C131) * C2164 +
            (C19749 * C135 + C50538 * C145) * C2159 + C20109 * C2165 +
            C20110 * C2160 + C20111 * C2166 + C20112 * C2161) *
               C33658 +
           (C22397 * C2164 + C22398 * C2159 + C22235 * C2165 + C22236 * C2160 +
            C31431 * C2166 + C31432 * C2161) *
               C50764) *
              C50603 * C50587 * C115 -
          (((C19749 * C1434 + C50538 * C1442) * C2161 +
            (C19749 * C1430 + C50538 * C1438) * C2166 +
            (C19749 * C787 + C50538 * C793) * C2160 +
            (C19749 * C778 + C50538 * C783) * C2165 +
            (C19749 * C404 + C50538 * C424) * C2159 +
            (C19749 * C394 + C50538 * C408) * C2164) *
               C50764 +
           ((C19749 * C278 + C50538 * C290) * C2161 +
            (C19749 * C260 + C50538 * C274) * C2166 +
            (C19749 * C263 + C50538 * C283) * C2160 +
            (C19749 * C253 + C50538 * C267) * C2165 +
            (C19749 * C136 + C50538 * C146) * C2159 +
            (C19749 * C125 + C50538 * C132) * C2164) *
               C33658) *
              C50603 * C50587 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C2164 +
             (C19749 * C133 + C50538 * C143) * C2159 + C19885 * C2165 +
             C19886 * C2160 + C19887 * C2166 + C19888 * C2161) *
                C33658 +
            (C22043 * C2164 + C22044 * C2159 + C20372 * C2165 + C20371 * C2160 +
             C20370 * C2166 + C20369 * C2161) *
                C50764) *
               C50603 * C248 -
           ((C20367 * C2161 + C20368 * C2166 + C20369 * C2160 + C20370 * C2165 +
             C20371 * C2159 + C20372 * C2164) *
                C50764 +
            (C19890 * C2161 + C19889 * C2166 + C19888 * C2160 + C19887 * C2165 +
             C19886 * C2159 + C19885 * C2164) *
                C33658) *
               C50603 * C249 +
           ((C19887 * C2164 + C19888 * C2159 + C19889 * C2165 + C19890 * C2160 +
             C19892 * C2166 + C19891 * C2161) *
                C33658 +
            (C20370 * C2164 + C20369 * C2159 + C20368 * C2165 + C20367 * C2160 +
             C21007 * C2166 + C21008 * C2161) *
                C50764) *
               C50603 * C250) *
              C251 +
          (((C19893 * C2164 + C19894 * C2159 + C19895 * C2165 + C19896 * C2160 +
             C19897 * C2166 + C19898 * C2161) *
                C33658 +
            (C20373 * C2164 + C20374 * C2159 + C20375 * C2165 + C20376 * C2160 +
             C20377 * C2166 + C20378 * C2161) *
                C50764) *
               C50603 * C249 -
           ((C20376 * C2161 + C20375 * C2166 + C20374 * C2160 + C20373 * C2165 +
             C22052 * C2159 + C22051 * C2164) *
                C50764 +
            (C19896 * C2161 + C19895 * C2166 + C19894 * C2160 + C19893 * C2165 +
             (C19749 * C134 + C50538 * C144) * C2159 +
             (C19749 * C123 + C50538 * C130) * C2164) *
                C33658) *
               C50603 * C248 -
           (((C19749 * C4061 + C50538 * C4065) * C2161 +
             (C19749 * C4059 + C50538 * C4063) * C2166 + C20378 * C2160 +
             C20377 * C2165 + C20376 * C2159 + C20375 * C2164) *
                C50764 +
            (C19900 * C2161 + C19899 * C2166 + C19898 * C2160 + C19897 * C2165 +
             C19896 * C2159 + C19895 * C2164) *
                C33658) *
               C50603 * C250) *
              C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C2164 +
             (C19749 * C133 + C50538 * C143) * C2159 + C19885 * C2165 +
             C19886 * C2160 + C19887 * C2166 + C19888 * C2161) *
                C33658 +
            (C36689 + C36690 + C36691 + C36692 + C36693 + C36694) * C50764) *
               C391 -
           ((C36695 + C36696 + C36697 + C36698 + C36699 + C36700) * C50764 +
            (C36694 + C36693 + C36692 + C36691 + C36690 + C36689) * C33658) *
               C392 +
           ((C36700 + C36699 + C36698 + C36697 + C36696 + C36695) * C33658 +
            (C22050 * C2164 + C22049 * C2159 + C22048 * C2165 + C22047 * C2160 +
             C23022 * C2166 + C23023 * C2161) *
                C50764) *
               C393) *
              C50587 * C251 +
          (((C36701 + C36702 + C36703 + C36704 + C36705 + C36706) * C33658 +
            (C36707 + C36708 + C36709 + C36710 + C36711 + C36712) * C50764) *
               C392 -
           ((C36706 + C36705 + C36704 + C36703 + C36702 + C36701) * C50764 +
            (C19896 * C2161 + C19895 * C2166 + C19894 * C2160 + C19893 * C2165 +
             (C19749 * C134 + C50538 * C144) * C2159 +
             (C19749 * C123 + C50538 * C130) * C2164) *
                C33658) *
               C391 -
           (((C19749 * C4475 + C50538 * C4483) * C2161 +
             (C19749 * C4471 + C50538 * C4477) * C2166 + C22058 * C2160 +
             C22057 * C2165 + C22056 * C2159 + C22055 * C2164) *
                C50764 +
            (C36712 + C36711 + C36710 + C36709 + C36708 + C36707) * C33658) *
               C393) *
              C50587 * C50574)) /
            (p * q * std::sqrt(p + q));
    d2ee[213] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
              C16965 * C124 + C16960 * C131) *
                 C121 +
             (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
              C16965 * C135 + C16960 * C145) *
                 C50688) *
                C33658 +
            ((C34001 + C34002 + C34003) * C121 +
             (C34004 + C34005 + C34006) * C50688) *
                C50764) *
               C50830 -
           (((C34007 + C34008 + C34009) * C50688 +
             (C34010 + C34011 + C34012) * C121) *
                C50764 +
            ((C34006 + C34005 + C34004) * C50688 +
             (C34003 + C34002 + C34001) * C121) *
                C33658) *
               C50667) *
              C50587 * C50872 +
          ((((C34013 + C34014 + C34015) * C121 +
             (C34016 + C34017 + C34018) * C50688) *
                C33658 +
            ((C34019 + C34020 + C34021) * C121 +
             (C34022 + C34023 + C34024) * C50688) *
                C50764) *
               C50667 -
           (((C34018 + C34017 + C34016) * C50688 +
             (C34015 + C34014 + C34013) * C121) *
                C50764 +
            ((C16965 * C136 + C16960 * C146 + C16964 * C135 + C16959 * C145 +
              C16963 * C134 + C16958 * C144) *
                 C50688 +
             (C16965 * C125 + C16960 * C132 + C16964 * C124 + C16959 * C131 +
              C16963 * C123 + C16958 * C130) *
                 C121) *
                C33658) *
               C50830) *
              C50587 * C50873 +
          ((((C16963 * C124 + C16958 * C131 + C16964 * C125 + C16959 * C132 +
              C16965 * C126 + C16960 * C138) *
                 C121 +
             (C16963 * C135 + C16958 * C145 + C16964 * C136 + C16959 * C146 +
              C16965 * C137 + C16960 * C147) *
                 C50688) *
                C33658 +
            ((C34329 + C34330 + C34331) * C121 +
             (C34332 + C34333 + C34334) * C50688) *
                C50764) *
               C50830 -
           (((C16965 * C422 + C16960 * C433 + C16964 * C419 + C16959 * C431 +
              C16963 * C418 + C16958 * C430) *
                 C50688 +
             (C16965 * C403 + C16960 * C423 + C16964 * C401 + C16959 * C415 +
              C16963 * C400 + C16958 * C414) *
                 C121) *
                C50764 +
            ((C34334 + C34333 + C34332) * C50688 +
             (C34331 + C34330 + C34329) * C121) *
                C33658) *
               C50667) *
              C50587 * C536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C2164 +
             (C19749 * C133 + C50538 * C143) * C2159 + C19885 * C2165 +
             C19886 * C2160 + C19887 * C2166 + C19888 * C2161) *
                C33658 +
            (C36689 + C36690 + C36691 + C36692 + C36693 + C36694) * C50764) *
               C50830 -
           ((C36695 + C36696 + C36697 + C36698 + C36699 + C36700) * C50764 +
            (C36694 + C36693 + C36692 + C36691 + C36690 + C36689) * C33658) *
               C50667) *
              C50587 * C50872 +
          (((C36701 + C36702 + C36703 + C36704 + C36705 + C36706) * C33658 +
            (C36707 + C36708 + C36709 + C36710 + C36711 + C36712) * C50764) *
               C50667 -
           ((C36706 + C36705 + C36704 + C36703 + C36702 + C36701) * C50764 +
            (C19896 * C2161 + C19895 * C2166 + C19894 * C2160 + C19893 * C2165 +
             (C19749 * C134 + C50538 * C144) * C2159 +
             (C19749 * C123 + C50538 * C130) * C2164) *
                C33658) *
               C50830) *
              C50587 * C50873 +
          ((((C19749 * C124 + C50538 * C131) * C2164 +
             (C19749 * C135 + C50538 * C145) * C2159 + C20109 * C2165 +
             C20110 * C2160 + C20111 * C2166 + C20112 * C2161) *
                C33658 +
            (C37005 + C37006 + C37007 + C37008 + C37009 + C37010) * C50764) *
               C50830 -
           (((C19749 * C2554 + C50538 * C2558) * C2161 +
             (C19749 * C2549 + C50538 * C2555) * C2166 + C22238 * C2160 +
             C22237 * C2165 + C22400 * C2159 + C22399 * C2164) *
                C50764 +
            (C37010 + C37009 + C37008 + C37007 + C37006 + C37005) * C33658) *
               C50667) *
              C50587 * C536)) /
            (p * q * std::sqrt(p + q));
    d2ee[214] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
             C16965 * C124 + C16960 * C131) *
                C121 +
            (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
             C16965 * C135 + C16960 * C145) *
                C50688) *
               C33658 +
           ((C16963 * C397 + C16958 * C411 + C16964 * C396 + C16959 * C410 +
             C16965 * C395 + C16960 * C409) *
                C121 +
            (C16963 * C407 + C16958 * C427 + C16964 * C406 + C16959 * C426 +
             C16965 * C405 + C16960 * C425) *
                C50688) *
               C50764) *
              C50603 * C50587 * C113 -
          (((C16965 * C404 + C16960 * C424 + C16964 * C405 + C16959 * C425 +
             C16963 * C406 + C16958 * C426) *
                C50688 +
            (C16965 * C394 + C16960 * C408 + C16964 * C395 + C16959 * C409 +
             C16963 * C396 + C16958 * C410) *
                C121) *
               C50764 +
           ((C16965 * C136 + C16960 * C146 + C16964 * C135 + C16959 * C145 +
             C16963 * C134 + C16958 * C144) *
                C50688 +
            (C16965 * C125 + C16960 * C132 + C16964 * C124 + C16959 * C131 +
             C16963 * C123 + C16958 * C130) *
                C121) *
               C33658) *
              C50603 * C50587 * C114 +
          (((C16963 * C124 + C16958 * C131 + C16964 * C125 + C16959 * C132 +
             C16965 * C126 + C16960 * C138) *
                C121 +
            (C16963 * C135 + C16958 * C145 + C16964 * C136 + C16959 * C146 +
             C16965 * C137 + C16960 * C147) *
                C50688) *
               C33658 +
           ((C16963 * C395 + C16958 * C409 + C16964 * C394 + C16959 * C408 +
             C16965 * C402 + C16960 * C420) *
                C121 +
            (C16963 * C405 + C16958 * C425 + C16964 * C404 + C16959 * C424 +
             C16965 * C421 + C16960 * C432) *
                C50688) *
               C50764) *
              C50603 * C50587 * C115 -
          (((C16965 * C642 + C16960 * C644 + C16964 * C421 + C16959 * C432 +
             C16963 * C404 + C16958 * C424) *
                C50688 +
            (C16965 * C641 + C16960 * C643 + C16964 * C402 + C16959 * C420 +
             C16963 * C394 + C16958 * C408) *
                C121) *
               C50764 +
           ((C16965 * C140 + C16960 * C148 + C16964 * C137 + C16959 * C147 +
             C16963 * C136 + C16958 * C146) *
                C50688 +
            (C16965 * C127 + C16960 * C139 + C16964 * C126 + C16959 * C138 +
             C16963 * C125 + C16958 * C132) *
                C121) *
               C33658) *
              C50603 * C50587 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
              C16965 * C124 + C16960 * C131) *
                 C121 +
             (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
              C16965 * C135 + C16960 * C145) *
                 C50688) *
                C33658 +
            ((C16963 * C397 + C16958 * C411 + C16964 * C396 + C16959 * C410 +
              C16965 * C395 + C16960 * C409) *
                 C121 +
             (C16963 * C407 + C16958 * C427 + C16964 * C406 + C16959 * C426 +
              C16965 * C405 + C16960 * C425) *
                 C50688) *
                C50764) *
               C50603 * C248 -
           (((C17861 + C17862 + C17863) * C50688 +
             (C17864 + C17865 + C17866) * C121) *
                C50764 +
            ((C17168 + C17167 + C17166) * C50688 +
             (C17165 + C17164 + C17163) * C121) *
                C33658) *
               C50603 * C249 +
           (((C17174 + C17173 + C17172) * C121 +
             (C17171 + C17170 + C17169) * C50688) *
                C33658 +
            ((C18797 + C18798 + C18799) * C121 +
             (C18800 + C18801 + C18802) * C50688) *
                C50764) *
               C50603 * C250) *
              C251 +
          ((((C17175 + C17176 + C17177) * C121 +
             (C17178 + C17179 + C17180) * C50688) *
                C33658 +
            ((C17867 + C17868 + C17869) * C121 +
             (C17870 + C17871 + C17872) * C50688) *
                C50764) *
               C50603 * C249 -
           (((C16965 * C404 + C16960 * C424 + C16964 * C405 + C16959 * C425 +
              C16963 * C406 + C16958 * C426) *
                 C50688 +
             (C16965 * C394 + C16960 * C408 + C16964 * C395 + C16959 * C409 +
              C16963 * C396 + C16958 * C410) *
                 C121) *
                C50764 +
            ((C16965 * C136 + C16960 * C146 + C16964 * C135 + C16959 * C145 +
              C16963 * C134 + C16958 * C144) *
                 C50688 +
             (C16965 * C125 + C16960 * C132 + C16964 * C124 + C16959 * C131 +
              C16963 * C123 + C16958 * C130) *
                 C121) *
                C33658) *
               C50603 * C248 -
           (((C16965 * C1434 + C16960 * C1442 + C16964 * C1435 +
              C16959 * C1443 + C16963 * C1436 + C16958 * C1444) *
                 C50688 +
             (C16965 * C1430 + C16960 * C1438 + C16964 * C1431 +
              C16959 * C1439 + C16963 * C1432 + C16958 * C1440) *
                 C121) *
                C50764 +
            ((C17186 + C17185 + C17184) * C50688 +
             (C17183 + C17182 + C17181) * C121) *
                C33658) *
               C50603 * C250) *
              C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19749 * C122 + C50538 * C129) * C2164 +
            (C19749 * C133 + C50538 * C143) * C2159 + C19885 * C2165 +
            C19886 * C2160 + C19887 * C2166 + C19888 * C2161) *
               C33658 +
           (C22043 * C2164 + C22044 * C2159 + C20372 * C2165 + C20371 * C2160 +
            C20370 * C2166 + C20369 * C2161) *
               C50764) *
              C50603 * C50587 * C113 -
          ((C20376 * C2161 + C20375 * C2166 + C20374 * C2160 + C20373 * C2165 +
            C22052 * C2159 + C22051 * C2164) *
               C50764 +
           (C19896 * C2161 + C19895 * C2166 + C19894 * C2160 + C19893 * C2165 +
            (C19749 * C134 + C50538 * C144) * C2159 +
            (C19749 * C123 + C50538 * C130) * C2164) *
               C33658) *
              C50603 * C50587 * C114 +
          (((C19749 * C124 + C50538 * C131) * C2164 +
            (C19749 * C135 + C50538 * C145) * C2159 + C20109 * C2165 +
            C20110 * C2160 + C20111 * C2166 + C20112 * C2161) *
               C33658 +
           (C22397 * C2164 + C22398 * C2159 + C22235 * C2165 + C22236 * C2160 +
            C31431 * C2166 + C31432 * C2161) *
               C50764) *
              C50603 * C50587 * C115 -
          (((C19749 * C1434 + C50538 * C1442) * C2161 +
            (C19749 * C1430 + C50538 * C1438) * C2166 +
            (C19749 * C787 + C50538 * C793) * C2160 +
            (C19749 * C778 + C50538 * C783) * C2165 +
            (C19749 * C404 + C50538 * C424) * C2159 +
            (C19749 * C394 + C50538 * C408) * C2164) *
               C50764 +
           ((C19749 * C278 + C50538 * C290) * C2161 +
            (C19749 * C260 + C50538 * C274) * C2166 +
            (C19749 * C263 + C50538 * C283) * C2160 +
            (C19749 * C253 + C50538 * C267) * C2165 +
            (C19749 * C136 + C50538 * C146) * C2159 +
            (C19749 * C125 + C50538 * C132) * C2164) *
               C33658) *
              C50603 * C50587 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C2164 +
             (C19749 * C133 + C50538 * C143) * C2159 + C19885 * C2165 +
             C19886 * C2160 + C19887 * C2166 + C19888 * C2161) *
                C33658 +
            (C22043 * C2164 + C22044 * C2159 + C20372 * C2165 + C20371 * C2160 +
             C20370 * C2166 + C20369 * C2161) *
                C50764) *
               C50603 * C248 -
           ((C20367 * C2161 + C20368 * C2166 + C20369 * C2160 + C20370 * C2165 +
             C20371 * C2159 + C20372 * C2164) *
                C50764 +
            (C19890 * C2161 + C19889 * C2166 + C19888 * C2160 + C19887 * C2165 +
             C19886 * C2159 + C19885 * C2164) *
                C33658) *
               C50603 * C249 +
           ((C19887 * C2164 + C19888 * C2159 + C19889 * C2165 + C19890 * C2160 +
             C19892 * C2166 + C19891 * C2161) *
                C33658 +
            (C20370 * C2164 + C20369 * C2159 + C20368 * C2165 + C20367 * C2160 +
             C21007 * C2166 + C21008 * C2161) *
                C50764) *
               C50603 * C250) *
              C251 +
          (((C19893 * C2164 + C19894 * C2159 + C19895 * C2165 + C19896 * C2160 +
             C19897 * C2166 + C19898 * C2161) *
                C33658 +
            (C20373 * C2164 + C20374 * C2159 + C20375 * C2165 + C20376 * C2160 +
             C20377 * C2166 + C20378 * C2161) *
                C50764) *
               C50603 * C249 -
           ((C20376 * C2161 + C20375 * C2166 + C20374 * C2160 + C20373 * C2165 +
             C22052 * C2159 + C22051 * C2164) *
                C50764 +
            (C19896 * C2161 + C19895 * C2166 + C19894 * C2160 + C19893 * C2165 +
             (C19749 * C134 + C50538 * C144) * C2159 +
             (C19749 * C123 + C50538 * C130) * C2164) *
                C33658) *
               C50603 * C248 -
           (((C19749 * C4061 + C50538 * C4065) * C2161 +
             (C19749 * C4059 + C50538 * C4063) * C2166 + C20378 * C2160 +
             C20377 * C2165 + C20376 * C2159 + C20375 * C2164) *
                C50764 +
            (C19900 * C2161 + C19899 * C2166 + C19898 * C2160 + C19897 * C2165 +
             C19896 * C2159 + C19895 * C2164) *
                C33658) *
               C50603 * C250) *
              C50574)) /
            (p * q * std::sqrt(p + q));
    d2ee[215] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
              C16965 * C124 + C16960 * C131) *
                 C121 +
             (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
              C16965 * C135 + C16960 * C145) *
                 C50688) *
                C33658 +
            ((C34001 + C34002 + C34003) * C121 +
             (C34004 + C34005 + C34006) * C50688) *
                C50764) *
               C50603 * C50874 -
           (((C17861 + C17862 + C17863) * C50688 +
             (C17864 + C17865 + C17866) * C121) *
                C50764 +
            ((C17168 + C17167 + C17166) * C50688 +
             (C17165 + C17164 + C17163) * C121) *
                C33658) *
               C50603 * C50875 +
           (((C17174 + C17173 + C17172) * C121 +
             (C17171 + C17170 + C17169) * C50688) *
                C33658 +
            ((C18797 + C18798 + C18799) * C121 +
             (C18800 + C18801 + C18802) * C50688) *
                C50764) *
               C50603 * C1199) *
              C50821 +
          ((((C17175 + C17176 + C17177) * C121 +
             (C17178 + C17179 + C17180) * C50688) *
                C33658 +
            ((C17867 + C17868 + C17869) * C121 +
             (C17870 + C17871 + C17872) * C50688) *
                C50764) *
               C50603 * C50875 -
           (((C34018 + C34017 + C34016) * C50688 +
             (C34015 + C34014 + C34013) * C121) *
                C50764 +
            ((C16965 * C136 + C16960 * C146 + C16964 * C135 + C16959 * C145 +
              C16963 * C134 + C16958 * C144) *
                 C50688 +
             (C16965 * C125 + C16960 * C132 + C16964 * C124 + C16959 * C131 +
              C16963 * C123 + C16958 * C130) *
                 C121) *
                C33658) *
               C50603 * C50874 -
           (((C16965 * C1434 + C16960 * C1442 + C16964 * C1435 +
              C16959 * C1443 + C16963 * C1436 + C16958 * C1444) *
                 C50688 +
             (C16965 * C1430 + C16960 * C1438 + C16964 * C1431 +
              C16959 * C1439 + C16963 * C1432 + C16958 * C1440) *
                 C121) *
                C50764 +
            ((C17186 + C17185 + C17184) * C50688 +
             (C17183 + C17182 + C17181) * C121) *
                C33658) *
               C50603 * C1199) *
              C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C2164 +
             (C19749 * C133 + C50538 * C143) * C2159 + C19885 * C2165 +
             C19886 * C2160 + C19887 * C2166 + C19888 * C2161) *
                C33658 +
            (C36689 + C36690 + C36691 + C36692 + C36693 + C36694) * C50764) *
               C50603 * C50874 -
           ((C37210 + C37209 + C37208 + C37207 + C37206 + C37205) * C50764 +
            (C19890 * C2161 + C19889 * C2166 + C19888 * C2160 + C19887 * C2165 +
             C19886 * C2159 + C19885 * C2164) *
                C33658) *
               C50603 * C50875 +
           ((C19887 * C2164 + C19888 * C2159 + C19889 * C2165 + C19890 * C2160 +
             C19892 * C2166 + C19891 * C2161) *
                C33658 +
            (C20370 * C2164 + C20369 * C2159 + C20368 * C2165 + C20367 * C2160 +
             C21007 * C2166 + C21008 * C2161) *
                C50764) *
               C50603 * C1199) *
              C50821 +
          (((C19893 * C2164 + C19894 * C2159 + C19895 * C2165 + C19896 * C2160 +
             C19897 * C2166 + C19898 * C2161) *
                C33658 +
            (C37211 + C37212 + C37213 + C37214 + C37215 + C37216) * C50764) *
               C50603 * C50875 -
           ((C36706 + C36705 + C36704 + C36703 + C36702 + C36701) * C50764 +
            (C19896 * C2161 + C19895 * C2166 + C19894 * C2160 + C19893 * C2165 +
             (C19749 * C134 + C50538 * C144) * C2159 +
             (C19749 * C123 + C50538 * C130) * C2164) *
                C33658) *
               C50603 * C50874 -
           (((C19749 * C4061 + C50538 * C4065) * C2161 +
             (C19749 * C4059 + C50538 * C4063) * C2166 + C20378 * C2160 +
             C20377 * C2165 + C20376 * C2159 + C20375 * C2164) *
                C50764 +
            (C19900 * C2161 + C19899 * C2166 + C19898 * C2160 + C19897 * C2165 +
             C19896 * C2159 + C19895 * C2164) *
                C33658) *
               C50603 * C1199) *
              C50574)) /
            (p * q * std::sqrt(p + q));
    d2ee[216] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
              C16965 * C124 + C16960 * C131) *
                 C121 +
             (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
              C16965 * C135 + C16960 * C145) *
                 C50688) *
                C33658 +
            ((C34001 + C34002 + C34003) * C121 +
             (C34004 + C34005 + C34006) * C50688) *
                C50764) *
               C50830 -
           (((C34007 + C34008 + C34009) * C50688 +
             (C34010 + C34011 + C34012) * C121) *
                C50764 +
            ((C34006 + C34005 + C34004) * C50688 +
             (C34003 + C34002 + C34001) * C121) *
                C33658) *
               C50667) *
              C50874 +
          ((((C17866 + C17865 + C17864) * C121 +
             (C17863 + C17862 + C17861) * C50688) *
                C33658 +
            ((C18293 + C18294 + C18295) * C121 +
             (C18296 + C18297 + C18298) * C50688) *
                C50764) *
               C50667 -
           (((C17861 + C17862 + C17863) * C50688 +
             (C17864 + C17865 + C17866) * C121) *
                C50764 +
            ((C17168 + C17167 + C17166) * C50688 +
             (C17165 + C17164 + C17163) * C121) *
                C33658) *
               C50830) *
              C50875 +
          ((((C17174 + C17173 + C17172) * C121 +
             (C17171 + C17170 + C17169) * C50688) *
                C33658 +
            ((C18797 + C18798 + C18799) * C121 +
             (C18800 + C18801 + C18802) * C50688) *
                C50764) *
               C50830 -
           (((C16965 * C2554 + C16960 * C2558 + C16964 * C2553 +
              C16959 * C2557 + C16963 * C2552 + C16958 * C2556) *
                 C50688 +
             (C16965 * C2549 + C16960 * C2555 + C16964 * C2548 +
              C16959 * C2551 + C16963 * C2547 + C16958 * C2550) *
                 C121) *
                C50764 +
            ((C18802 + C18801 + C18800) * C50688 +
             (C18799 + C18798 + C18797) * C121) *
                C33658) *
               C50667) *
              C1199) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C2164 +
             (C19749 * C133 + C50538 * C143) * C2159 + C19885 * C2165 +
             C19886 * C2160 + C19887 * C2166 + C19888 * C2161) *
                C33658 +
            (C36689 + C36690 + C36691 + C36692 + C36693 + C36694) * C50764) *
               C50830 -
           ((C36695 + C36696 + C36697 + C36698 + C36699 + C36700) * C50764 +
            (C36694 + C36693 + C36692 + C36691 + C36690 + C36689) * C33658) *
               C50667) *
              C50874 +
          (((C37205 + C37206 + C37207 + C37208 + C37209 + C37210) * C33658 +
            (C37607 + C37608 + C37609 + C37610 + C37611 + C37612) * C50764) *
               C50667 -
           ((C37210 + C37209 + C37208 + C37207 + C37206 + C37205) * C50764 +
            (C19890 * C2161 + C19889 * C2166 + C19888 * C2160 + C19887 * C2165 +
             C19886 * C2159 + C19885 * C2164) *
                C33658) *
               C50830) *
              C50875 +
          (((C19887 * C2164 + C19888 * C2159 + C19889 * C2165 + C19890 * C2160 +
             C19892 * C2166 + C19891 * C2161) *
                C33658 +
            (C38099 + C38100 + C38101 + C38102 + C38103 + C38104) * C50764) *
               C50830 -
           (((C19749 * C20651 + C50538 * C20653) * C2161 +
             (C19749 * C20650 + C50538 * C20652) * C2166 + C20672 * C2160 +
             C20671 * C2165 + C20670 * C2159 + C20669 * C2164) *
                C50764 +
            (C38104 + C38103 + C38102 + C38101 + C38100 + C38099) * C33658) *
               C50667) *
              C1199) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[217] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
             C16965 * C124 + C16960 * C131) *
                C121 +
            (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
             C16965 * C135 + C16960 * C145) *
                C50688) *
               C33658 +
           ((C34001 + C34002 + C34003) * C121 +
            (C34004 + C34005 + C34006) * C50688) *
               C50764) *
              C50603 * C964 -
          (((C17861 + C17862 + C17863) * C50688 +
            (C17864 + C17865 + C17866) * C121) *
               C50764 +
           ((C17168 + C17167 + C17166) * C50688 +
            (C17165 + C17164 + C17163) * C121) *
               C33658) *
              C50603 * C965 +
          (((C17174 + C17173 + C17172) * C121 +
            (C17171 + C17170 + C17169) * C50688) *
               C33658 +
           ((C18797 + C18798 + C18799) * C121 +
            (C18800 + C18801 + C18802) * C50688) *
               C50764) *
              C50603 * C966 -
          (((C16965 * C3076 + C16960 * C3080 + C16964 * C3075 + C16959 * C3079 +
             C16963 * C3074 + C16958 * C3078) *
                C50688 +
            (C16965 * C3071 + C16960 * C3077 + C16964 * C3070 + C16959 * C3073 +
             C16963 * C3069 + C16958 * C3072) *
                C121) *
               C50764 +
           ((C18134 + C18133 + C18132) * C50688 +
            (C18131 + C18130 + C18129) * C121) *
               C33658) *
              C50603 * C967) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
              C16965 * C124 + C16960 * C131) *
                 C121 +
             (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
              C16965 * C135 + C16960 * C145) *
                 C50688) *
                C33658 +
            ((C34001 + C34002 + C34003) * C121 +
             (C34004 + C34005 + C34006) * C50688) *
                C50764) *
               C50603 * C893 -
           (((C17861 + C17862 + C17863) * C50688 +
             (C17864 + C17865 + C17866) * C121) *
                C50764 +
            ((C17168 + C17167 + C17166) * C50688 +
             (C17165 + C17164 + C17163) * C121) *
                C33658) *
               C50603 * C50639) *
              C895 +
          ((((C17175 + C17176 + C17177) * C121 +
             (C17178 + C17179 + C17180) * C50688) *
                C33658 +
            ((C17867 + C17868 + C17869) * C121 +
             (C17870 + C17871 + C17872) * C50688) *
                C50764) *
               C50603 * C50639 -
           (((C34018 + C34017 + C34016) * C50688 +
             (C34015 + C34014 + C34013) * C121) *
                C50764 +
            ((C16965 * C136 + C16960 * C146 + C16964 * C135 + C16959 * C145 +
              C16963 * C134 + C16958 * C144) *
                 C50688 +
             (C16965 * C125 + C16960 * C132 + C16964 * C124 + C16959 * C131 +
              C16963 * C123 + C16958 * C130) *
                 C121) *
                C33658) *
               C50603 * C893) *
              C896 +
          ((((C16963 * C124 + C16958 * C131 + C16964 * C125 + C16959 * C132 +
              C16965 * C126 + C16960 * C138) *
                 C121 +
             (C16963 * C135 + C16958 * C145 + C16964 * C136 + C16959 * C146 +
              C16965 * C137 + C16960 * C147) *
                 C50688) *
                C33658 +
            ((C34329 + C34330 + C34331) * C121 +
             (C34332 + C34333 + C34334) * C50688) *
                C50764) *
               C50603 * C893 -
           (((C16965 * C788 + C16960 * C794 + C16964 * C787 + C16959 * C793 +
              C16963 * C786 + C16958 * C792) *
                 C50688 +
             (C16965 * C779 + C16960 * C789 + C16964 * C778 + C16959 * C783 +
              C16963 * C777 + C16958 * C782) *
                 C121) *
                C50764 +
            ((C17496 + C17495 + C17494) * C50688 +
             (C17493 + C17492 + C17491) * C121) *
                C33658) *
               C50603 * C50639) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
              C16965 * C124 + C16960 * C131) *
                 C121 +
             (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
              C16965 * C135 + C16960 * C145) *
                 C50688) *
                C33658 +
            ((C34001 + C34002 + C34003) * C121 +
             (C34004 + C34005 + C34006) * C50688) *
                C50764) *
               C391 -
           (((C34007 + C34008 + C34009) * C50688 +
             (C34010 + C34011 + C34012) * C121) *
                C50764 +
            ((C34006 + C34005 + C34004) * C50688 +
             (C34003 + C34002 + C34001) * C121) *
                C33658) *
               C392 +
           (((C34012 + C34011 + C34010) * C121 +
             (C34009 + C34008 + C34007) * C50688) *
                C33658 +
            ((C16963 * C1717 + C16958 * C1725 + C16964 * C1716 +
              C16959 * C1724 + C16965 * C1715 + C16960 * C1723) *
                 C121 +
             (C16963 * C1721 + C16958 * C1729 + C16964 * C1720 +
              C16959 * C1728 + C16965 * C1719 + C16960 * C1727) *
                 C50688) *
                C50764) *
               C393) *
              C893 +
          ((((C17866 + C17865 + C17864) * C121 +
             (C17863 + C17862 + C17861) * C50688) *
                C33658 +
            ((C18293 + C18294 + C18295) * C121 +
             (C18296 + C18297 + C18298) * C50688) *
                C50764) *
               C392 -
           (((C17861 + C17862 + C17863) * C50688 +
             (C17864 + C17865 + C17866) * C121) *
                C50764 +
            ((C17168 + C17167 + C17166) * C50688 +
             (C17165 + C17164 + C17163) * C121) *
                C33658) *
               C391 -
           (((C16965 * C5971 + C16960 * C5973 + C16964 * C4479 +
              C16959 * C4485 + C16963 * C4480 + C16958 * C4486) *
                 C50688 +
             (C16965 * C5970 + C16960 * C5972 + C16964 * C4473 +
              C16959 * C4481 + C16963 * C4474 + C16958 * C4482) *
                 C121) *
                C50764 +
            ((C18298 + C18297 + C18296) * C50688 +
             (C18295 + C18294 + C18293) * C121) *
                C33658) *
               C393) *
              C50639) *
         C50568) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C2164 +
             (C19749 * C133 + C50538 * C143) * C2159 + C19885 * C2165 +
             C19886 * C2160 + C19887 * C2166 + C19888 * C2161) *
                C33658 +
            (C36689 + C36690 + C36691 + C36692 + C36693 + C36694) * C50764) *
               C50603 * C893 -
           ((C37210 + C37209 + C37208 + C37207 + C37206 + C37205) * C50764 +
            (C19890 * C2161 + C19889 * C2166 + C19888 * C2160 + C19887 * C2165 +
             C19886 * C2159 + C19885 * C2164) *
                C33658) *
               C50603 * C50639) *
              C895 +
          (((C19893 * C2164 + C19894 * C2159 + C19895 * C2165 + C19896 * C2160 +
             C19897 * C2166 + C19898 * C2161) *
                C33658 +
            (C37211 + C37212 + C37213 + C37214 + C37215 + C37216) * C50764) *
               C50603 * C50639 -
           ((C36706 + C36705 + C36704 + C36703 + C36702 + C36701) * C50764 +
            (C19896 * C2161 + C19895 * C2166 + C19894 * C2160 + C19893 * C2165 +
             (C19749 * C134 + C50538 * C144) * C2159 +
             (C19749 * C123 + C50538 * C130) * C2164) *
                C33658) *
               C50603 * C893) *
              C896 +
          ((((C19749 * C124 + C50538 * C131) * C2164 +
             (C19749 * C135 + C50538 * C145) * C2159 + C20109 * C2165 +
             C20110 * C2160 + C20111 * C2166 + C20112 * C2161) *
                C33658 +
            (C37005 + C37006 + C37007 + C37008 + C37009 + C37010) * C50764) *
               C50603 * C893 -
           (((C19749 * C3076 + C50538 * C3080) * C2161 +
             (C19749 * C3071 + C50538 * C3077) * C2166 + C31432 * C2160 +
             C31431 * C2165 + C22236 * C2159 + C22235 * C2164) *
                C50764 +
            (C20114 * C2161 + C20113 * C2166 + C20112 * C2160 + C20111 * C2165 +
             C20110 * C2159 + C20109 * C2164) *
                C33658) *
               C50603 * C50639) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19749 * C122 + C50538 * C129) * C2164 +
            (C19749 * C133 + C50538 * C143) * C2159 + C19885 * C2165 +
            C19886 * C2160 + C19887 * C2166 + C19888 * C2161) *
               C33658 +
           (C36689 + C36690 + C36691 + C36692 + C36693 + C36694) * C50764) *
              C50603 * C964 -
          ((C37210 + C37209 + C37208 + C37207 + C37206 + C37205) * C50764 +
           (C19890 * C2161 + C19889 * C2166 + C19888 * C2160 + C19887 * C2165 +
            C19886 * C2159 + C19885 * C2164) *
               C33658) *
              C50603 * C965 +
          ((C19887 * C2164 + C19888 * C2159 + C19889 * C2165 + C19890 * C2160 +
            C19892 * C2166 + C19891 * C2161) *
               C33658 +
           (C20370 * C2164 + C20369 * C2159 + C20368 * C2165 + C20367 * C2160 +
            C21007 * C2166 + C21008 * C2161) *
               C50764) *
              C50603 * C966 -
          (((C19749 * C20999 + C50538 * C21001) * C2161 +
            (C19749 * C20998 + C50538 * C21000) * C2166 + C21008 * C2160 +
            C21007 * C2165 + C20367 * C2159 + C20368 * C2164) *
               C50764 +
           (C20552 * C2161 + C20551 * C2166 + C19891 * C2160 + C19892 * C2165 +
            C19890 * C2159 + C19889 * C2164) *
               C33658) *
              C50603 * C967) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C2164 +
             (C19749 * C133 + C50538 * C143) * C2159 + C19885 * C2165 +
             C19886 * C2160 + C19887 * C2166 + C19888 * C2161) *
                C33658 +
            (C36689 + C36690 + C36691 + C36692 + C36693 + C36694) * C50764) *
               C391 -
           ((C36695 + C36696 + C36697 + C36698 + C36699 + C36700) * C50764 +
            (C36694 + C36693 + C36692 + C36691 + C36690 + C36689) * C33658) *
               C392 +
           ((C36700 + C36699 + C36698 + C36697 + C36696 + C36695) * C33658 +
            (C22050 * C2164 + C22049 * C2159 + C22048 * C2165 + C22047 * C2160 +
             C23022 * C2166 + C23023 * C2161) *
                C50764) *
               C393) *
              C893 +
          (((C37205 + C37206 + C37207 + C37208 + C37209 + C37210) * C33658 +
            (C37607 + C37608 + C37609 + C37610 + C37611 + C37612) * C50764) *
               C392 -
           ((C37210 + C37209 + C37208 + C37207 + C37206 + C37205) * C50764 +
            (C19890 * C2161 + C19889 * C2166 + C19888 * C2160 + C19887 * C2165 +
             C19886 * C2159 + C19885 * C2164) *
                C33658) *
               C391 -
           (((C19749 * C21271 + C50538 * C21273) * C2161 +
             (C19749 * C21270 + C50538 * C21272) * C2166 + C23023 * C2160 +
             C23022 * C2165 + C22047 * C2159 + C22048 * C2164) *
                C50764 +
            (C37612 + C37611 + C37610 + C37609 + C37608 + C37607) * C33658) *
               C393) *
              C50639) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[218] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
               C16965 * C124 + C16960 * C131) *
                  C121 +
              (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
               C16965 * C135 + C16960 * C145) *
                  C50688) *
                 C33658 +
             ((C34001 + C34002 + C34003) * C121 +
              (C34004 + C34005 + C34006) * C50688) *
                 C50764) *
                C50830 -
            (((C34007 + C34008 + C34009) * C50688 +
              (C34010 + C34011 + C34012) * C121) *
                 C50764 +
             ((C34006 + C34005 + C34004) * C50688 +
              (C34003 + C34002 + C34001) * C121) *
                 C33658) *
                C50667) *
               C893 +
           ((((C17866 + C17865 + C17864) * C121 +
              (C17863 + C17862 + C17861) * C50688) *
                 C33658 +
             ((C18293 + C18294 + C18295) * C121 +
              (C18296 + C18297 + C18298) * C50688) *
                 C50764) *
                C50667 -
            (((C17861 + C17862 + C17863) * C50688 +
              (C17864 + C17865 + C17866) * C121) *
                 C50764 +
             ((C17168 + C17167 + C17166) * C50688 +
              (C17165 + C17164 + C17163) * C121) *
                 C33658) *
                C50830) *
               C50639) *
              C50821 +
          (((((C34013 + C34014 + C34015) * C121 +
              (C34016 + C34017 + C34018) * C50688) *
                 C33658 +
             ((C34019 + C34020 + C34021) * C121 +
              (C34022 + C34023 + C34024) * C50688) *
                 C50764) *
                C50667 -
            (((C34018 + C34017 + C34016) * C50688 +
              (C34015 + C34014 + C34013) * C121) *
                 C50764 +
             ((C16965 * C136 + C16960 * C146 + C16964 * C135 + C16959 * C145 +
               C16963 * C134 + C16958 * C144) *
                  C50688 +
              (C16965 * C125 + C16960 * C132 + C16964 * C124 + C16959 * C131 +
               C16963 * C123 + C16958 * C130) *
                  C121) *
                 C33658) *
                C50830) *
               C893 +
           ((((C17175 + C17176 + C17177) * C121 +
              (C17178 + C17179 + C17180) * C50688) *
                 C33658 +
             ((C17867 + C17868 + C17869) * C121 +
              (C17870 + C17871 + C17872) * C50688) *
                 C50764) *
                C50830 -
            (((C16965 * C1087 + C16960 * C1095 + C16964 * C1088 +
               C16959 * C1096 + C16963 * C1089 + C16958 * C1097) *
                  C50688 +
              (C16965 * C1083 + C16960 * C1091 + C16964 * C1084 +
               C16959 * C1092 + C16963 * C1085 + C16958 * C1093) *
                  C121) *
                 C50764 +
             ((C17872 + C17871 + C17870) * C50688 +
              (C17869 + C17868 + C17867) * C121) *
                 C33658) *
                C50667) *
               C50639) *
              C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C19749 * C122 + C50538 * C129) * C2164 +
              (C19749 * C133 + C50538 * C143) * C2159 + C19885 * C2165 +
              C19886 * C2160 + C19887 * C2166 + C19888 * C2161) *
                 C33658 +
             (C36689 + C36690 + C36691 + C36692 + C36693 + C36694) * C50764) *
                C50830 -
            ((C36695 + C36696 + C36697 + C36698 + C36699 + C36700) * C50764 +
             (C36694 + C36693 + C36692 + C36691 + C36690 + C36689) * C33658) *
                C50667) *
               C893 +
           (((C37205 + C37206 + C37207 + C37208 + C37209 + C37210) * C33658 +
             (C37607 + C37608 + C37609 + C37610 + C37611 + C37612) * C50764) *
                C50667 -
            ((C37210 + C37209 + C37208 + C37207 + C37206 + C37205) * C50764 +
             (C19890 * C2161 + C19889 * C2166 + C19888 * C2160 +
              C19887 * C2165 + C19886 * C2159 + C19885 * C2164) *
                 C33658) *
                C50830) *
               C50639) *
              C50821 +
          ((((C36701 + C36702 + C36703 + C36704 + C36705 + C36706) * C33658 +
             (C36707 + C36708 + C36709 + C36710 + C36711 + C36712) * C50764) *
                C50667 -
            ((C36706 + C36705 + C36704 + C36703 + C36702 + C36701) * C50764 +
             (C19896 * C2161 + C19895 * C2166 + C19894 * C2160 +
              C19893 * C2165 + (C19749 * C134 + C50538 * C144) * C2159 +
              (C19749 * C123 + C50538 * C130) * C2164) *
                 C33658) *
                C50830) *
               C893 +
           (((C19893 * C2164 + C19894 * C2159 + C19895 * C2165 +
              C19896 * C2160 + C19897 * C2166 + C19898 * C2161) *
                 C33658 +
             (C37211 + C37212 + C37213 + C37214 + C37215 + C37216) * C50764) *
                C50830 -
            (((C19749 * C3543 + C50538 * C3547) * C2161 +
              (C19749 * C3541 + C50538 * C3545) * C2166 + C21856 * C2160 +
              C21855 * C2165 + C21854 * C2159 + C21853 * C2164) *
                 C50764 +
             (C37216 + C37215 + C37214 + C37213 + C37212 + C37211) * C33658) *
                C50667) *
               C50639) *
              C50574)) /
            (p * q * std::sqrt(p + q));
    d2ee[219] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
              C16965 * C124 + C16960 * C131) *
                 C121 +
             (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
              C16965 * C135 + C16960 * C145) *
                 C50688) *
                C33658 +
            ((C34001 + C34002 + C34003) * C121 +
             (C34004 + C34005 + C34006) * C50688) *
                C50764) *
               C50603 * C893 -
           (((C17861 + C17862 + C17863) * C50688 +
             (C17864 + C17865 + C17866) * C121) *
                C50764 +
            ((C17168 + C17167 + C17166) * C50688 +
             (C17165 + C17164 + C17163) * C121) *
                C33658) *
               C50603 * C50639) *
              C895 +
          ((((C17175 + C17176 + C17177) * C121 +
             (C17178 + C17179 + C17180) * C50688) *
                C33658 +
            ((C17867 + C17868 + C17869) * C121 +
             (C17870 + C17871 + C17872) * C50688) *
                C50764) *
               C50603 * C50639 -
           (((C34018 + C34017 + C34016) * C50688 +
             (C34015 + C34014 + C34013) * C121) *
                C50764 +
            ((C16965 * C136 + C16960 * C146 + C16964 * C135 + C16959 * C145 +
              C16963 * C134 + C16958 * C144) *
                 C50688 +
             (C16965 * C125 + C16960 * C132 + C16964 * C124 + C16959 * C131 +
              C16963 * C123 + C16958 * C130) *
                 C121) *
                C33658) *
               C50603 * C893) *
              C896 +
          ((((C16963 * C124 + C16958 * C131 + C16964 * C125 + C16959 * C132 +
              C16965 * C126 + C16960 * C138) *
                 C121 +
             (C16963 * C135 + C16958 * C145 + C16964 * C136 + C16959 * C146 +
              C16965 * C137 + C16960 * C147) *
                 C50688) *
                C33658 +
            ((C34329 + C34330 + C34331) * C121 +
             (C34332 + C34333 + C34334) * C50688) *
                C50764) *
               C50603 * C893 -
           (((C16965 * C788 + C16960 * C794 + C16964 * C787 + C16959 * C793 +
              C16963 * C786 + C16958 * C792) *
                 C50688 +
             (C16965 * C779 + C16960 * C789 + C16964 * C778 + C16959 * C783 +
              C16963 * C777 + C16958 * C782) *
                 C121) *
                C50764 +
            ((C17496 + C17495 + C17494) * C50688 +
             (C17493 + C17492 + C17491) * C121) *
                C33658) *
               C50603 * C50639) *
              C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
             C16965 * C124 + C16960 * C131) *
                C121 +
            (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
             C16965 * C135 + C16960 * C145) *
                C50688) *
               C33658 +
           ((C34001 + C34002 + C34003) * C121 +
            (C34004 + C34005 + C34006) * C50688) *
               C50764) *
              C50603 * C964 -
          (((C17861 + C17862 + C17863) * C50688 +
            (C17864 + C17865 + C17866) * C121) *
               C50764 +
           ((C17168 + C17167 + C17166) * C50688 +
            (C17165 + C17164 + C17163) * C121) *
               C33658) *
              C50603 * C965 +
          (((C17174 + C17173 + C17172) * C121 +
            (C17171 + C17170 + C17169) * C50688) *
               C33658 +
           ((C18797 + C18798 + C18799) * C121 +
            (C18800 + C18801 + C18802) * C50688) *
               C50764) *
              C50603 * C966 -
          (((C16965 * C3076 + C16960 * C3080 + C16964 * C3075 + C16959 * C3079 +
             C16963 * C3074 + C16958 * C3078) *
                C50688 +
            (C16965 * C3071 + C16960 * C3077 + C16964 * C3070 + C16959 * C3073 +
             C16963 * C3069 + C16958 * C3072) *
                C121) *
               C50764 +
           ((C18134 + C18133 + C18132) * C50688 +
            (C18131 + C18130 + C18129) * C121) *
               C33658) *
              C50603 * C967) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C2164 +
             (C19749 * C133 + C50538 * C143) * C2159 + C19885 * C2165 +
             C19886 * C2160 + C19887 * C2166 + C19888 * C2161) *
                C33658 +
            (C36689 + C36690 + C36691 + C36692 + C36693 + C36694) * C50764) *
               C50603 * C893 -
           ((C37210 + C37209 + C37208 + C37207 + C37206 + C37205) * C50764 +
            (C19890 * C2161 + C19889 * C2166 + C19888 * C2160 + C19887 * C2165 +
             C19886 * C2159 + C19885 * C2164) *
                C33658) *
               C50603 * C50639) *
              C895 +
          (((C19893 * C2164 + C19894 * C2159 + C19895 * C2165 + C19896 * C2160 +
             C19897 * C2166 + C19898 * C2161) *
                C33658 +
            (C37211 + C37212 + C37213 + C37214 + C37215 + C37216) * C50764) *
               C50603 * C50639 -
           ((C36706 + C36705 + C36704 + C36703 + C36702 + C36701) * C50764 +
            (C19896 * C2161 + C19895 * C2166 + C19894 * C2160 + C19893 * C2165 +
             (C19749 * C134 + C50538 * C144) * C2159 +
             (C19749 * C123 + C50538 * C130) * C2164) *
                C33658) *
               C50603 * C893) *
              C896 +
          ((((C19749 * C124 + C50538 * C131) * C2164 +
             (C19749 * C135 + C50538 * C145) * C2159 + C20109 * C2165 +
             C20110 * C2160 + C20111 * C2166 + C20112 * C2161) *
                C33658 +
            (C37005 + C37006 + C37007 + C37008 + C37009 + C37010) * C50764) *
               C50603 * C893 -
           (((C19749 * C3076 + C50538 * C3080) * C2161 +
             (C19749 * C3071 + C50538 * C3077) * C2166 + C31432 * C2160 +
             C31431 * C2165 + C22236 * C2159 + C22235 * C2164) *
                C50764 +
            (C20114 * C2161 + C20113 * C2166 + C20112 * C2160 + C20111 * C2165 +
             C20110 * C2159 + C20109 * C2164) *
                C33658) *
               C50603 * C50639) *
              C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19749 * C122 + C50538 * C129) * C2164 +
            (C19749 * C133 + C50538 * C143) * C2159 + C19885 * C2165 +
            C19886 * C2160 + C19887 * C2166 + C19888 * C2161) *
               C33658 +
           (C36689 + C36690 + C36691 + C36692 + C36693 + C36694) * C50764) *
              C50603 * C964 -
          ((C37210 + C37209 + C37208 + C37207 + C37206 + C37205) * C50764 +
           (C19890 * C2161 + C19889 * C2166 + C19888 * C2160 + C19887 * C2165 +
            C19886 * C2159 + C19885 * C2164) *
               C33658) *
              C50603 * C965 +
          ((C19887 * C2164 + C19888 * C2159 + C19889 * C2165 + C19890 * C2160 +
            C19892 * C2166 + C19891 * C2161) *
               C33658 +
           (C20370 * C2164 + C20369 * C2159 + C20368 * C2165 + C20367 * C2160 +
            C21007 * C2166 + C21008 * C2161) *
               C50764) *
              C50603 * C966 -
          (((C19749 * C20999 + C50538 * C21001) * C2161 +
            (C19749 * C20998 + C50538 * C21000) * C2166 + C21008 * C2160 +
            C21007 * C2165 + C20367 * C2159 + C20368 * C2164) *
               C50764 +
           (C20552 * C2161 + C20551 * C2166 + C19891 * C2160 + C19892 * C2165 +
            C19890 * C2159 + C19889 * C2164) *
               C33658) *
              C50603 * C967) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[220] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
               C16965 * C124 + C16960 * C131) *
                  C121 +
              (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
               C16965 * C135 + C16960 * C145) *
                  C50688) *
                 C33658 +
             ((C34001 + C34002 + C34003) * C121 +
              (C34004 + C34005 + C34006) * C50688) *
                 C50764) *
                C1544 -
            (((C34007 + C34008 + C34009) * C50688 +
              (C34010 + C34011 + C34012) * C121) *
                 C50764 +
             ((C34006 + C34005 + C34004) * C50688 +
              (C34003 + C34002 + C34001) * C121) *
                 C33658) *
                C50667) *
               C50829 +
           ((((C17866 + C17865 + C17864) * C121 +
              (C17863 + C17862 + C17861) * C50688) *
                 C33658 +
             ((C18293 + C18294 + C18295) * C121 +
              (C18296 + C18297 + C18298) * C50688) *
                 C50764) *
                C50667 -
            (((C17861 + C17862 + C17863) * C50688 +
              (C17864 + C17865 + C17866) * C121) *
                 C50764 +
             ((C17168 + C17167 + C17166) * C50688 +
              (C17165 + C17164 + C17163) * C121) *
                 C33658) *
                C1544) *
               C50639) *
              C50821 +
          (((((C34013 + C34014 + C34015) * C121 +
              (C34016 + C34017 + C34018) * C50688) *
                 C33658 +
             ((C34019 + C34020 + C34021) * C121 +
              (C34022 + C34023 + C34024) * C50688) *
                 C50764) *
                C50667 -
            (((C34018 + C34017 + C34016) * C50688 +
              (C34015 + C34014 + C34013) * C121) *
                 C50764 +
             ((C16965 * C136 + C16960 * C146 + C16964 * C135 + C16959 * C145 +
               C16963 * C134 + C16958 * C144) *
                  C50688 +
              (C16965 * C125 + C16960 * C132 + C16964 * C124 + C16959 * C131 +
               C16963 * C123 + C16958 * C130) *
                  C121) *
                 C33658) *
                C1544) *
               C50829 +
           ((((C17175 + C17176 + C17177) * C121 +
              (C17178 + C17179 + C17180) * C50688) *
                 C33658 +
             ((C17867 + C17868 + C17869) * C121 +
              (C17870 + C17871 + C17872) * C50688) *
                 C50764) *
                C1544 -
            (((C16965 * C1087 + C16960 * C1095 + C16964 * C1088 +
               C16959 * C1096 + C16963 * C1089 + C16958 * C1097) *
                  C50688 +
              (C16965 * C1083 + C16960 * C1091 + C16964 * C1084 +
               C16959 * C1092 + C16963 * C1085 + C16958 * C1093) *
                  C121) *
                 C50764 +
             ((C17872 + C17871 + C17870) * C50688 +
              (C17869 + C17868 + C17867) * C121) *
                 C33658) *
                C50667) *
               C50639) *
              C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C19749 * C122 + C50538 * C129) * C2164 +
              (C19749 * C133 + C50538 * C143) * C2159 + C19885 * C2165 +
              C19886 * C2160 + C19887 * C2166 + C19888 * C2161) *
                 C33658 +
             (C36689 + C36690 + C36691 + C36692 + C36693 + C36694) * C50764) *
                C1544 -
            ((C36695 + C36696 + C36697 + C36698 + C36699 + C36700) * C50764 +
             (C36694 + C36693 + C36692 + C36691 + C36690 + C36689) * C33658) *
                C50667) *
               C50829 +
           (((C37205 + C37206 + C37207 + C37208 + C37209 + C37210) * C33658 +
             (C37607 + C37608 + C37609 + C37610 + C37611 + C37612) * C50764) *
                C50667 -
            ((C37210 + C37209 + C37208 + C37207 + C37206 + C37205) * C50764 +
             (C19890 * C2161 + C19889 * C2166 + C19888 * C2160 +
              C19887 * C2165 + C19886 * C2159 + C19885 * C2164) *
                 C33658) *
                C1544) *
               C50639) *
              C50821 +
          ((((C36701 + C36702 + C36703 + C36704 + C36705 + C36706) * C33658 +
             (C36707 + C36708 + C36709 + C36710 + C36711 + C36712) * C50764) *
                C50667 -
            ((C36706 + C36705 + C36704 + C36703 + C36702 + C36701) * C50764 +
             (C19896 * C2161 + C19895 * C2166 + C19894 * C2160 +
              C19893 * C2165 + (C19749 * C134 + C50538 * C144) * C2159 +
              (C19749 * C123 + C50538 * C130) * C2164) *
                 C33658) *
                C1544) *
               C50829 +
           (((C19893 * C2164 + C19894 * C2159 + C19895 * C2165 +
              C19896 * C2160 + C19897 * C2166 + C19898 * C2161) *
                 C33658 +
             (C37211 + C37212 + C37213 + C37214 + C37215 + C37216) * C50764) *
                C1544 -
            (((C19749 * C3543 + C50538 * C3547) * C2161 +
              (C19749 * C3541 + C50538 * C3545) * C2166 + C21856 * C2160 +
              C21855 * C2165 + C21854 * C2159 + C21853 * C2164) *
                 C50764 +
             (C37216 + C37215 + C37214 + C37213 + C37212 + C37211) * C33658) *
                C50667) *
               C50639) *
              C50574)) /
            (p * q * std::sqrt(p + q));
    d2ee[221] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
              C16965 * C124 + C16960 * C131) *
                 C121 +
             (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
              C16965 * C135 + C16960 * C145) *
                 C50688) *
                C33658 +
            ((C34001 + C34002 + C34003) * C121 +
             (C34004 + C34005 + C34006) * C50688) *
                C50764) *
               C50876 -
           (((C34007 + C34008 + C34009) * C50688 +
             (C34010 + C34011 + C34012) * C121) *
                C50764 +
            ((C34006 + C34005 + C34004) * C50688 +
             (C34003 + C34002 + C34001) * C121) *
                C33658) *
               C50877 +
           (((C34012 + C34011 + C34010) * C121 +
             (C34009 + C34008 + C34007) * C50688) *
                C33658 +
            ((C35807 + C35808 + C35809) * C121 +
             (C35810 + C35811 + C35812) * C50688) *
                C50764) *
               C1960) *
              C50829 +
          ((((C17866 + C17865 + C17864) * C121 +
             (C17863 + C17862 + C17861) * C50688) *
                C33658 +
            ((C18293 + C18294 + C18295) * C121 +
             (C18296 + C18297 + C18298) * C50688) *
                C50764) *
               C50877 -
           (((C17861 + C17862 + C17863) * C50688 +
             (C17864 + C17865 + C17866) * C121) *
                C50764 +
            ((C17168 + C17167 + C17166) * C50688 +
             (C17165 + C17164 + C17163) * C121) *
                C33658) *
               C50876 -
           (((C16965 * C5971 + C16960 * C5973 + C16964 * C4479 +
              C16959 * C4485 + C16963 * C4480 + C16958 * C4486) *
                 C50688 +
             (C16965 * C5970 + C16960 * C5972 + C16964 * C4473 +
              C16959 * C4481 + C16963 * C4474 + C16958 * C4482) *
                 C121) *
                C50764 +
            ((C18298 + C18297 + C18296) * C50688 +
             (C18295 + C18294 + C18293) * C121) *
                C33658) *
               C1960) *
              C50639) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C2164 +
             (C19749 * C133 + C50538 * C143) * C2159 + C19885 * C2165 +
             C19886 * C2160 + C19887 * C2166 + C19888 * C2161) *
                C33658 +
            (C36689 + C36690 + C36691 + C36692 + C36693 + C36694) * C50764) *
               C50876 -
           ((C36695 + C36696 + C36697 + C36698 + C36699 + C36700) * C50764 +
            (C36694 + C36693 + C36692 + C36691 + C36690 + C36689) * C33658) *
               C50877 +
           ((C36700 + C36699 + C36698 + C36697 + C36696 + C36695) * C33658 +
            (C38495 + C38496 + C38497 + C38498 + C38499 + C38500) * C50764) *
               C1960) *
              C50829 +
          (((C37205 + C37206 + C37207 + C37208 + C37209 + C37210) * C33658 +
            (C37607 + C37608 + C37609 + C37610 + C37611 + C37612) * C50764) *
               C50877 -
           ((C37210 + C37209 + C37208 + C37207 + C37206 + C37205) * C50764 +
            (C19890 * C2161 + C19889 * C2166 + C19888 * C2160 + C19887 * C2165 +
             C19886 * C2159 + C19885 * C2164) *
                C33658) *
               C50876 -
           (((C19749 * C21271 + C50538 * C21273) * C2161 +
             (C19749 * C21270 + C50538 * C21272) * C2166 + C23023 * C2160 +
             C23022 * C2165 + C22047 * C2159 + C22048 * C2164) *
                C50764 +
            (C37612 + C37611 + C37610 + C37609 + C37608 + C37607) * C33658) *
               C1960) *
              C50639) *
         C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[222] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
              C16965 * C124 + C16960 * C131) *
                 C121 +
             (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
              C16965 * C135 + C16960 * C145) *
                 C50688) *
                C33658 +
            ((C34001 + C34002 + C34003) * C121 +
             (C34004 + C34005 + C34006) * C50688) *
                C50764) *
               C1544 -
           (((C34007 + C34008 + C34009) * C50688 +
             (C34010 + C34011 + C34012) * C121) *
                C50764 +
            ((C34006 + C34005 + C34004) * C50688 +
             (C34003 + C34002 + C34001) * C121) *
                C33658) *
               C50667) *
              C248 +
          ((((C17866 + C17865 + C17864) * C121 +
             (C17863 + C17862 + C17861) * C50688) *
                C33658 +
            ((C18293 + C18294 + C18295) * C121 +
             (C18296 + C18297 + C18298) * C50688) *
                C50764) *
               C50667 -
           (((C17861 + C17862 + C17863) * C50688 +
             (C17864 + C17865 + C17866) * C121) *
                C50764 +
            ((C17168 + C17167 + C17166) * C50688 +
             (C17165 + C17164 + C17163) * C121) *
                C33658) *
               C1544) *
              C249 +
          ((((C17174 + C17173 + C17172) * C121 +
             (C17171 + C17170 + C17169) * C50688) *
                C33658 +
            ((C18797 + C18798 + C18799) * C121 +
             (C18800 + C18801 + C18802) * C50688) *
                C50764) *
               C1544 -
           (((C16965 * C2554 + C16960 * C2558 + C16964 * C2553 +
              C16959 * C2557 + C16963 * C2552 + C16958 * C2556) *
                 C50688 +
             (C16965 * C2549 + C16960 * C2555 + C16964 * C2548 +
              C16959 * C2551 + C16963 * C2547 + C16958 * C2550) *
                 C121) *
                C50764 +
            ((C18802 + C18801 + C18800) * C50688 +
             (C18799 + C18798 + C18797) * C121) *
                C33658) *
               C50667) *
              C250) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
              C16965 * C124 + C16960 * C131) *
                 C121 +
             (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
              C16965 * C135 + C16960 * C145) *
                 C50688) *
                C33658 +
            ((C34001 + C34002 + C34003) * C121 +
             (C34004 + C34005 + C34006) * C50688) *
                C50764) *
               C1544 -
           (((C34007 + C34008 + C34009) * C50688 +
             (C34010 + C34011 + C34012) * C121) *
                C50764 +
            ((C34006 + C34005 + C34004) * C50688 +
             (C34003 + C34002 + C34001) * C121) *
                C33658) *
               C50667) *
              C50587 * C895 +
          ((((C34013 + C34014 + C34015) * C121 +
             (C34016 + C34017 + C34018) * C50688) *
                C33658 +
            ((C34019 + C34020 + C34021) * C121 +
             (C34022 + C34023 + C34024) * C50688) *
                C50764) *
               C50667 -
           (((C34018 + C34017 + C34016) * C50688 +
             (C34015 + C34014 + C34013) * C121) *
                C50764 +
            ((C16965 * C136 + C16960 * C146 + C16964 * C135 + C16959 * C145 +
              C16963 * C134 + C16958 * C144) *
                 C50688 +
             (C16965 * C125 + C16960 * C132 + C16964 * C124 + C16959 * C131 +
              C16963 * C123 + C16958 * C130) *
                 C121) *
                C33658) *
               C1544) *
              C50587 * C896 +
          ((((C16963 * C124 + C16958 * C131 + C16964 * C125 + C16959 * C132 +
              C16965 * C126 + C16960 * C138) *
                 C121 +
             (C16963 * C135 + C16958 * C145 + C16964 * C136 + C16959 * C146 +
              C16965 * C137 + C16960 * C147) *
                 C50688) *
                C33658 +
            ((C34329 + C34330 + C34331) * C121 +
             (C34332 + C34333 + C34334) * C50688) *
                C50764) *
               C1544 -
           (((C16965 * C422 + C16960 * C433 + C16964 * C419 + C16959 * C431 +
              C16963 * C418 + C16958 * C430) *
                 C50688 +
             (C16965 * C403 + C16960 * C423 + C16964 * C401 + C16959 * C415 +
              C16963 * C400 + C16958 * C414) *
                 C121) *
                C50764 +
            ((C34334 + C34333 + C34332) * C50688 +
             (C34331 + C34330 + C34329) * C121) *
                C33658) *
               C50667) *
              C50587 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
             C16965 * C124 + C16960 * C131) *
                C121 +
            (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
             C16965 * C135 + C16960 * C145) *
                C50688) *
               C33658 +
           ((C34001 + C34002 + C34003) * C121 +
            (C34004 + C34005 + C34006) * C50688) *
               C50764) *
              C1710 -
          (((C34007 + C34008 + C34009) * C50688 +
            (C34010 + C34011 + C34012) * C121) *
               C50764 +
           ((C34006 + C34005 + C34004) * C50688 +
            (C34003 + C34002 + C34001) * C121) *
               C33658) *
              C1711 +
          (((C34012 + C34011 + C34010) * C121 +
            (C34009 + C34008 + C34007) * C50688) *
               C33658 +
           ((C35807 + C35808 + C35809) * C121 +
            (C35810 + C35811 + C35812) * C50688) *
               C50764) *
              C1712 -
          (((C16965 * C5373 + C16960 * C5377 + C16964 * C5372 + C16959 * C5376 +
             C16963 * C5371 + C16958 * C5375) *
                C50688 +
            (C16965 * C5368 + C16960 * C5374 + C16964 * C5367 + C16959 * C5370 +
             C16963 * C5366 + C16958 * C5369) *
                C121) *
               C50764 +
           ((C35812 + C35811 + C35810) * C50688 +
            (C35809 + C35808 + C35807) * C121) *
               C33658) *
              C1713) *
         C50587 * C50568) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C2164 +
             (C19749 * C133 + C50538 * C143) * C2159 + C19885 * C2165 +
             C19886 * C2160 + C19887 * C2166 + C19888 * C2161) *
                C33658 +
            (C36689 + C36690 + C36691 + C36692 + C36693 + C36694) * C50764) *
               C1544 -
           ((C36695 + C36696 + C36697 + C36698 + C36699 + C36700) * C50764 +
            (C36694 + C36693 + C36692 + C36691 + C36690 + C36689) * C33658) *
               C50667) *
              C50587 * C895 +
          (((C36701 + C36702 + C36703 + C36704 + C36705 + C36706) * C33658 +
            (C36707 + C36708 + C36709 + C36710 + C36711 + C36712) * C50764) *
               C50667 -
           ((C36706 + C36705 + C36704 + C36703 + C36702 + C36701) * C50764 +
            (C19896 * C2161 + C19895 * C2166 + C19894 * C2160 + C19893 * C2165 +
             (C19749 * C134 + C50538 * C144) * C2159 +
             (C19749 * C123 + C50538 * C130) * C2164) *
                C33658) *
               C1544) *
              C50587 * C896 +
          ((((C19749 * C124 + C50538 * C131) * C2164 +
             (C19749 * C135 + C50538 * C145) * C2159 + C20109 * C2165 +
             C20110 * C2160 + C20111 * C2166 + C20112 * C2161) *
                C33658 +
            (C37005 + C37006 + C37007 + C37008 + C37009 + C37010) * C50764) *
               C1544 -
           (((C19749 * C2554 + C50538 * C2558) * C2161 +
             (C19749 * C2549 + C50538 * C2555) * C2166 + C22238 * C2160 +
             C22237 * C2165 + C22400 * C2159 + C22399 * C2164) *
                C50764 +
            (C37010 + C37009 + C37008 + C37007 + C37006 + C37005) * C33658) *
               C50667) *
              C50587 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C2164 +
             (C19749 * C133 + C50538 * C143) * C2159 + C19885 * C2165 +
             C19886 * C2160 + C19887 * C2166 + C19888 * C2161) *
                C33658 +
            (C36689 + C36690 + C36691 + C36692 + C36693 + C36694) * C50764) *
               C1544 -
           ((C36695 + C36696 + C36697 + C36698 + C36699 + C36700) * C50764 +
            (C36694 + C36693 + C36692 + C36691 + C36690 + C36689) * C33658) *
               C50667) *
              C248 +
          (((C37205 + C37206 + C37207 + C37208 + C37209 + C37210) * C33658 +
            (C37607 + C37608 + C37609 + C37610 + C37611 + C37612) * C50764) *
               C50667 -
           ((C37210 + C37209 + C37208 + C37207 + C37206 + C37205) * C50764 +
            (C19890 * C2161 + C19889 * C2166 + C19888 * C2160 + C19887 * C2165 +
             C19886 * C2159 + C19885 * C2164) *
                C33658) *
               C1544) *
              C249 +
          (((C19887 * C2164 + C19888 * C2159 + C19889 * C2165 + C19890 * C2160 +
             C19892 * C2166 + C19891 * C2161) *
                C33658 +
            (C38099 + C38100 + C38101 + C38102 + C38103 + C38104) * C50764) *
               C1544 -
           (((C19749 * C20651 + C50538 * C20653) * C2161 +
             (C19749 * C20650 + C50538 * C20652) * C2166 + C20672 * C2160 +
             C20671 * C2165 + C20670 * C2159 + C20669 * C2164) *
                C50764 +
            (C38104 + C38103 + C38102 + C38101 + C38100 + C38099) * C33658) *
               C50667) *
              C250) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19749 * C122 + C50538 * C129) * C2164 +
            (C19749 * C133 + C50538 * C143) * C2159 + C19885 * C2165 +
            C19886 * C2160 + C19887 * C2166 + C19888 * C2161) *
               C33658 +
           (C36689 + C36690 + C36691 + C36692 + C36693 + C36694) * C50764) *
              C1710 -
          ((C36695 + C36696 + C36697 + C36698 + C36699 + C36700) * C50764 +
           (C36694 + C36693 + C36692 + C36691 + C36690 + C36689) * C33658) *
              C1711 +
          ((C36700 + C36699 + C36698 + C36697 + C36696 + C36695) * C33658 +
           (C38495 + C38496 + C38497 + C38498 + C38499 + C38500) * C50764) *
              C1712 -
          (((C19749 * C23005 + C50538 * C23007) * C2161 +
            (C19749 * C23004 + C50538 * C23006) * C2166 + C23021 * C2160 +
            C23020 * C2165 + C23925 * C2159 + C23924 * C2164) *
               C50764 +
           (C38500 + C38499 + C38498 + C38497 + C38496 + C38495) * C33658) *
              C1713) *
         C50587 * C50568) /
            (p * q * std::sqrt(p + q));
    d2ee[223] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
              C16965 * C124 + C16960 * C131) *
                 C121 +
             (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
              C16965 * C135 + C16960 * C145) *
                 C50688) *
                C33658 +
            ((C34001 + C34002 + C34003) * C121 +
             (C34004 + C34005 + C34006) * C50688) *
                C50764) *
               C50876 -
           (((C34007 + C34008 + C34009) * C50688 +
             (C34010 + C34011 + C34012) * C121) *
                C50764 +
            ((C34006 + C34005 + C34004) * C50688 +
             (C34003 + C34002 + C34001) * C121) *
                C33658) *
               C50877 +
           (((C34012 + C34011 + C34010) * C121 +
             (C34009 + C34008 + C34007) * C50688) *
                C33658 +
            ((C35807 + C35808 + C35809) * C121 +
             (C35810 + C35811 + C35812) * C50688) *
                C50764) *
               C1960) *
              C50587 * C50821 +
          ((((C34013 + C34014 + C34015) * C121 +
             (C34016 + C34017 + C34018) * C50688) *
                C33658 +
            ((C34019 + C34020 + C34021) * C121 +
             (C34022 + C34023 + C34024) * C50688) *
                C50764) *
               C50877 -
           (((C34018 + C34017 + C34016) * C50688 +
             (C34015 + C34014 + C34013) * C121) *
                C50764 +
            ((C16965 * C136 + C16960 * C146 + C16964 * C135 + C16959 * C145 +
              C16963 * C134 + C16958 * C144) *
                 C50688 +
             (C16965 * C125 + C16960 * C132 + C16964 * C124 + C16959 * C131 +
              C16963 * C123 + C16958 * C130) *
                 C121) *
                C33658) *
               C50876 -
           (((C16965 * C1718 + C16960 * C1726 + C16964 * C1719 +
              C16959 * C1727 + C16963 * C1720 + C16958 * C1728) *
                 C50688 +
             (C16965 * C1714 + C16960 * C1722 + C16964 * C1715 +
              C16959 * C1723 + C16963 * C1716 + C16958 * C1724) *
                 C121) *
                C50764 +
            ((C34024 + C34023 + C34022) * C50688 +
             (C34021 + C34020 + C34019) * C121) *
                C33658) *
               C1960) *
              C50587 * C50574)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C2164 +
             (C19749 * C133 + C50538 * C143) * C2159 + C19885 * C2165 +
             C19886 * C2160 + C19887 * C2166 + C19888 * C2161) *
                C33658 +
            (C36689 + C36690 + C36691 + C36692 + C36693 + C36694) * C50764) *
               C50876 -
           ((C36695 + C36696 + C36697 + C36698 + C36699 + C36700) * C50764 +
            (C36694 + C36693 + C36692 + C36691 + C36690 + C36689) * C33658) *
               C50877 +
           ((C36700 + C36699 + C36698 + C36697 + C36696 + C36695) * C33658 +
            (C38495 + C38496 + C38497 + C38498 + C38499 + C38500) * C50764) *
               C1960) *
              C50587 * C50821 +
          (((C36701 + C36702 + C36703 + C36704 + C36705 + C36706) * C33658 +
            (C36707 + C36708 + C36709 + C36710 + C36711 + C36712) * C50764) *
               C50877 -
           ((C36706 + C36705 + C36704 + C36703 + C36702 + C36701) * C50764 +
            (C19896 * C2161 + C19895 * C2166 + C19894 * C2160 + C19893 * C2165 +
             (C19749 * C134 + C50538 * C144) * C2159 +
             (C19749 * C123 + C50538 * C130) * C2164) *
                C33658) *
               C50876 -
           (((C19749 * C4475 + C50538 * C4483) * C2161 +
             (C19749 * C4471 + C50538 * C4477) * C2166 + C22058 * C2160 +
             C22057 * C2165 + C22056 * C2159 + C22055 * C2164) *
                C50764 +
            (C36712 + C36711 + C36710 + C36709 + C36708 + C36707) * C33658) *
               C1960) *
              C50587 * C50574)) /
            (p * q * std::sqrt(p + q));
    d2ee[224] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
              C16965 * C124 + C16960 * C131) *
                 C121 +
             (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
              C16965 * C135 + C16960 * C145) *
                 C50688) *
                C33658 +
            ((C34001 + C34002 + C34003) * C121 +
             (C34004 + C34005 + C34006) * C50688) *
                C50764) *
               C1544 -
           (((C34007 + C34008 + C34009) * C50688 +
             (C34010 + C34011 + C34012) * C121) *
                C50764 +
            ((C34006 + C34005 + C34004) * C50688 +
             (C34003 + C34002 + C34001) * C121) *
                C33658) *
               C50667) *
              C50587 * C895 +
          ((((C34013 + C34014 + C34015) * C121 +
             (C34016 + C34017 + C34018) * C50688) *
                C33658 +
            ((C34019 + C34020 + C34021) * C121 +
             (C34022 + C34023 + C34024) * C50688) *
                C50764) *
               C50667 -
           (((C34018 + C34017 + C34016) * C50688 +
             (C34015 + C34014 + C34013) * C121) *
                C50764 +
            ((C16965 * C136 + C16960 * C146 + C16964 * C135 + C16959 * C145 +
              C16963 * C134 + C16958 * C144) *
                 C50688 +
             (C16965 * C125 + C16960 * C132 + C16964 * C124 + C16959 * C131 +
              C16963 * C123 + C16958 * C130) *
                 C121) *
                C33658) *
               C1544) *
              C50587 * C896 +
          ((((C16963 * C124 + C16958 * C131 + C16964 * C125 + C16959 * C132 +
              C16965 * C126 + C16960 * C138) *
                 C121 +
             (C16963 * C135 + C16958 * C145 + C16964 * C136 + C16959 * C146 +
              C16965 * C137 + C16960 * C147) *
                 C50688) *
                C33658 +
            ((C34329 + C34330 + C34331) * C121 +
             (C34332 + C34333 + C34334) * C50688) *
                C50764) *
               C1544 -
           (((C16965 * C422 + C16960 * C433 + C16964 * C419 + C16959 * C431 +
              C16963 * C418 + C16958 * C430) *
                 C50688 +
             (C16965 * C403 + C16960 * C423 + C16964 * C401 + C16959 * C415 +
              C16963 * C400 + C16958 * C414) *
                 C121) *
                C50764 +
            ((C34334 + C34333 + C34332) * C50688 +
             (C34331 + C34330 + C34329) * C121) *
                C33658) *
               C50667) *
              C50587 * C897)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C16963 * C122 + C16958 * C129 + C16964 * C123 + C16959 * C130 +
              C16965 * C124 + C16960 * C131) *
                 C121 +
             (C16963 * C133 + C16958 * C143 + C16964 * C134 + C16959 * C144 +
              C16965 * C135 + C16960 * C145) *
                 C50688) *
                C33658 +
            ((C34001 + C34002 + C34003) * C121 +
             (C34004 + C34005 + C34006) * C50688) *
                C50764) *
               C1544 -
           (((C34007 + C34008 + C34009) * C50688 +
             (C34010 + C34011 + C34012) * C121) *
                C50764 +
            ((C34006 + C34005 + C34004) * C50688 +
             (C34003 + C34002 + C34001) * C121) *
                C33658) *
               C50667) *
              C248 +
          ((((C17866 + C17865 + C17864) * C121 +
             (C17863 + C17862 + C17861) * C50688) *
                C33658 +
            ((C18293 + C18294 + C18295) * C121 +
             (C18296 + C18297 + C18298) * C50688) *
                C50764) *
               C50667 -
           (((C17861 + C17862 + C17863) * C50688 +
             (C17864 + C17865 + C17866) * C121) *
                C50764 +
            ((C17168 + C17167 + C17166) * C50688 +
             (C17165 + C17164 + C17163) * C121) *
                C33658) *
               C1544) *
              C249 +
          ((((C17174 + C17173 + C17172) * C121 +
             (C17171 + C17170 + C17169) * C50688) *
                C33658 +
            ((C18797 + C18798 + C18799) * C121 +
             (C18800 + C18801 + C18802) * C50688) *
                C50764) *
               C1544 -
           (((C16965 * C2554 + C16960 * C2558 + C16964 * C2553 +
              C16959 * C2557 + C16963 * C2552 + C16958 * C2556) *
                 C50688 +
             (C16965 * C2549 + C16960 * C2555 + C16964 * C2548 +
              C16959 * C2551 + C16963 * C2547 + C16958 * C2550) *
                 C121) *
                C50764 +
            ((C18802 + C18801 + C18800) * C50688 +
             (C18799 + C18798 + C18797) * C121) *
                C33658) *
               C50667) *
              C250) *
         C50568) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C2164 +
             (C19749 * C133 + C50538 * C143) * C2159 + C19885 * C2165 +
             C19886 * C2160 + C19887 * C2166 + C19888 * C2161) *
                C33658 +
            (C36689 + C36690 + C36691 + C36692 + C36693 + C36694) * C50764) *
               C1544 -
           ((C36695 + C36696 + C36697 + C36698 + C36699 + C36700) * C50764 +
            (C36694 + C36693 + C36692 + C36691 + C36690 + C36689) * C33658) *
               C50667) *
              C50587 * C895 +
          (((C36701 + C36702 + C36703 + C36704 + C36705 + C36706) * C33658 +
            (C36707 + C36708 + C36709 + C36710 + C36711 + C36712) * C50764) *
               C50667 -
           ((C36706 + C36705 + C36704 + C36703 + C36702 + C36701) * C50764 +
            (C19896 * C2161 + C19895 * C2166 + C19894 * C2160 + C19893 * C2165 +
             (C19749 * C134 + C50538 * C144) * C2159 +
             (C19749 * C123 + C50538 * C130) * C2164) *
                C33658) *
               C1544) *
              C50587 * C896 +
          ((((C19749 * C124 + C50538 * C131) * C2164 +
             (C19749 * C135 + C50538 * C145) * C2159 + C20109 * C2165 +
             C20110 * C2160 + C20111 * C2166 + C20112 * C2161) *
                C33658 +
            (C37005 + C37006 + C37007 + C37008 + C37009 + C37010) * C50764) *
               C1544 -
           (((C19749 * C2554 + C50538 * C2558) * C2161 +
             (C19749 * C2549 + C50538 * C2555) * C2166 + C22238 * C2160 +
             C22237 * C2165 + C22400 * C2159 + C22399 * C2164) *
                C50764 +
            (C37010 + C37009 + C37008 + C37007 + C37006 + C37005) * C33658) *
               C50667) *
              C50587 * C897)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C19749 * C122 + C50538 * C129) * C2164 +
             (C19749 * C133 + C50538 * C143) * C2159 + C19885 * C2165 +
             C19886 * C2160 + C19887 * C2166 + C19888 * C2161) *
                C33658 +
            (C36689 + C36690 + C36691 + C36692 + C36693 + C36694) * C50764) *
               C1544 -
           ((C36695 + C36696 + C36697 + C36698 + C36699 + C36700) * C50764 +
            (C36694 + C36693 + C36692 + C36691 + C36690 + C36689) * C33658) *
               C50667) *
              C248 +
          (((C37205 + C37206 + C37207 + C37208 + C37209 + C37210) * C33658 +
            (C37607 + C37608 + C37609 + C37610 + C37611 + C37612) * C50764) *
               C50667 -
           ((C37210 + C37209 + C37208 + C37207 + C37206 + C37205) * C50764 +
            (C19890 * C2161 + C19889 * C2166 + C19888 * C2160 + C19887 * C2165 +
             C19886 * C2159 + C19885 * C2164) *
                C33658) *
               C1544) *
              C249 +
          (((C19887 * C2164 + C19888 * C2159 + C19889 * C2165 + C19890 * C2160 +
             C19892 * C2166 + C19891 * C2161) *
                C33658 +
            (C38099 + C38100 + C38101 + C38102 + C38103 + C38104) * C50764) *
               C1544 -
           (((C19749 * C20651 + C50538 * C20653) * C2161 +
             (C19749 * C20650 + C50538 * C20652) * C2166 + C20672 * C2160 +
             C20671 * C2165 + C20670 * C2159 + C20669 * C2164) *
                C50764 +
            (C38104 + C38103 + C38102 + C38101 + C38100 + C38099) * C33658) *
               C50667) *
              C250) *
         C50568) /
            (p * q * std::sqrt(p + q));
}
