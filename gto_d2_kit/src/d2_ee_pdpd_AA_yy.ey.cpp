/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_pdpd_AA_yy.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_1212_11_22(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C49731 = ae + be;
    const double C49730 = ae * be;
    const double C49729 = yA - yB;
    const double C49737 = 0 * be;
    const double C49789 = 0 * ae;
    const double C49781 = 0 * be;
    const double C49838 = p + q;
    const double C49837 = p * q;
    const double C49846 = std::pow(ae, 2);
    const double C49844 = bs[3];
    const double C49843 = yP - yQ;
    const double C49852 = bs[4];
    const double C49850 = xP - xQ;
    const double C49860 = bs[5];
    const double C49869 = bs[6];
    const double C49880 = bs[7];
    const double C49899 = bs[2];
    const double C49984 = zP - zQ;
    const double C119 = bs[0];
    const double C50590 = xA - xB;
    const double C50617 = ce + de;
    const double C50616 = ce * de;
    const double C50615 = xC - xD;
    const double C50639 = yC - yD;
    const double C50655 = zC - zD;
    const double C50752 = zA - zB;
    const double C49738 = std::pow(C49731, 2);
    const double C49782 = 2 * C49731;
    const double C49740 = 2 * C49730;
    const double C49739 = C49730 * C49729;
    const double C50737 = std::pow(C49729, 2);
    const double C50789 = C49729 * be;
    const double C50788 = C49729 * ae;
    const double C49784 = C49729 * C49737;
    const double C49783 = -2 * C49737;
    const double C49797 = C49789 / C49731;
    const double C49839 = 2 * C49837;
    const double C49847 = std::pow(C49843, 2);
    const double C49892 = C49843 * ae;
    const double C49862 = std::pow(C49850, 2);
    const double C50035 = std::pow(C49984, 2);
    const double C50593 = C50590 * be;
    const double C50592 = C50590 * ae;
    const double C50591 = std::pow(C50590, 2);
    const double C50619 = 2 * C50617;
    const double C50629 = std::pow(C50617, 2);
    const double C50621 = C50615 * de;
    const double C50620 = C50615 * ce;
    const double C50618 = std::pow(C50615, 2);
    const double C50640 = std::pow(C50639, 2);
    const double C50692 = C50639 * de;
    const double C50691 = C50639 * ce;
    const double C50656 = std::pow(C50655, 2);
    const double C50720 = C50655 * de;
    const double C50719 = C50655 * ce;
    const double C50753 = std::pow(C50752, 2);
    const double C50817 = C50752 * be;
    const double C50816 = C50752 * ae;
    const double C49742 = 2 * C49738;
    const double C50857 = 4 * C49738;
    const double C49791 = C49738 * C49782;
    const double C50601 = std::pow(C49782, -1);
    const double C50879 = std::pow(C49782, -2);
    const double C50738 = C50737 * C49730;
    const double C49793 = C49784 / C49731;
    const double C49792 = ae * C49783;
    const double C49841 = C49839 / C49838;
    const double C133 =
        ((std::pow(yP - yQ, 2) * bs[2] * std::pow(C49839 / C49838, 2) -
          (bs[1] * C49839) / C49838) *
         std::pow(ae, 2)) /
        C49738;
    const double C120 = -(C49850 * bs[1] * C49839) / C49838;
    const double C278 = -(C49843 * bs[1] * C49839) / C49838;
    const double C449 = -(C49984 * bs[1] * C49839) / C49838;
    const double C49854 = C49847 * C49852;
    const double C49863 = C49847 * C49860;
    const double C49871 = C49847 * C49869;
    const double C49883 = C49847 * C49880;
    const double C49893 = C49852 * C49892;
    const double C49902 = C49844 * C49892;
    const double C49916 = C49860 * C49892;
    const double C49928 = C49869 * C49892;
    const double C49949 = C49880 * C49892;
    const double C126 = (-(bs[1] * C49892 * C49839) / C49838) / C49731;
    const double C50594 = C50591 * C49730;
    const double C50630 = std::pow(C50619, -1);
    const double C50866 = std::pow(C50619, -2);
    const double C50634 = 2 * C50629;
    const double C50864 = 4 * C50629;
    const double C50622 = C50618 * C50616;
    const double C50641 = C50640 * C50616;
    const double C50657 = C50656 * C50616;
    const double C50754 = C50753 * C49730;
    const double C49788 = C49737 / C49742;
    const double C49794 = C49781 / C49742;
    const double C50739 = C50738 / C49731;
    const double C49798 = 0 - C49793;
    const double C49845 = -C49841;
    const double C49853 = std::pow(C49841, 4);
    const double C49870 = std::pow(C49841, 6);
    const double C49898 = std::pow(C49841, 2);
    const double C134 = ((xP - xQ) *
                         (bs[2] * std::pow(C49841, 2) +
                          std::pow(yP - yQ, 2) * bs[3] * std::pow(-C49841, 3)) *
                         std::pow(ae, 2)) /
                        C49738;
    const double C50595 = C50594 / C49731;
    const double C50623 = C50622 / C50617;
    const double C50642 = C50641 / C50617;
    const double C50658 = C50657 / C50617;
    const double C50755 = C50754 / C49731;
    const double C50740 = -C50739;
    const double C49802 = C49798 * ae;
    const double C49848 = std::pow(C49845, 3);
    const double C49861 = std::pow(C49845, 5);
    const double C49881 = std::pow(C49845, 7);
    const double C49855 = C49854 * C49853;
    const double C49859 = C49852 * C49853;
    const double C49894 = C49853 * C49893;
    const double C49872 = C49871 * C49870;
    const double C49879 = C49869 * C49870;
    const double C49932 = C49870 * C49928;
    const double C49901 = C49899 * C49898;
    const double C127 = (C49850 * C49898 * C49899 * C49892) / C49731;
    const double C288 = (C49843 * C49898 * C49899 * C49892) / C49731 -
                        (ae * bs[1] * C49839) / (C49838 * C49731);
    const double C459 = (C49984 * C49898 * C49899 * C49892) / C49731;
    const double C50596 = -C50595;
    const double C50624 = -C50623;
    const double C50643 = -C50642;
    const double C50659 = -C50658;
    const double C50756 = -C50755;
    const double C50741 = std::exp(C50740);
    const double C49804 = C49802 / C49731;
    const double C49851 = C49844 * C49848;
    const double C49903 = C49848 * C49902;
    const double C135 =
        ((bs[2] * std::pow(C49841, 2) + C49847 * C49844 * C49848) * C49846 +
         (C49844 * C49848 + C49847 * bs[4] * std::pow(C49841, 4)) * C49846 *
             std::pow(xP - xQ, 2)) /
        C49738;
    const double C298 =
        (2 * ae * C49898 * C49899 * C49892 +
         C49843 * (C49899 * C49898 + C49847 * C49844 * C49848) * C49846) /
        C49738;
    const double C49864 = C49863 * C49861;
    const double C49868 = C49860 * C49861;
    const double C49918 = C49861 * C49916;
    const double C49884 = C49883 * C49881;
    const double C49954 = C49881 * C49949;
    const double C49917 = C49859 * C49862;
    const double C49929 = C49850 * C49859;
    const double C50062 = C49859 * C49847;
    const double C50061 = C49843 * C49859;
    const double C50060 = C49859 * ae;
    const double C50569 = C49859 * C50035;
    const double C50580 = C49984 * C49859;
    const double C49909 = C49850 * C49894;
    const double C50024 = C49843 * C49894;
    const double C50056 = ae * C49894;
    const double C49952 = C49879 * C49862;
    const double C50161 = C49850 * C49879;
    const double C50304 = C49879 * C49847;
    const double C50303 = C49843 * C49879;
    const double C50302 = C49879 * ae;
    const double C49935 = C49932 * C49862;
    const double C49948 = C49850 * C49932;
    const double C50199 = C49843 * C49932;
    const double C50296 = ae * C49932;
    const double C50344 = C49932 * C50035;
    const double C50363 = C49984 * C49932;
    const double C49904 = C49901 * ae;
    const double C469 =
        ((zP - zQ) * (C49901 + C49847 * C49844 * C49848) * C49846) / C49738;
    const double C121 = C49901 * C49862 - (bs[1] * C49839) / C49838;
    const double C277 = C49843 * C49850 * C49901;
    const double C279 = C49901 * C49847 - (bs[1] * C49839) / C49838;
    const double C448 = C49984 * C49850 * C49901;
    const double C450 = C49901 * C50035 - (bs[1] * C49839) / C49838;
    const double C867 = C49984 * C49843 * C49901;
    const double C50597 = std::exp(C50596);
    const double C50625 = std::exp(C50624);
    const double C50644 = std::exp(C50643);
    const double C50660 = std::exp(C50659);
    const double C50757 = std::exp(C50756);
    const double C144 = C50741 * C134;
    const double C49741 = C49739 * C50741;
    const double C117 =
        -((C50741 - (C49729 * 2 * C49730 * C49729 * C50741) / C49731) * 2 *
          C49730) /
        C49731;
    const double C118 = -(2 * C49730 * C49729 * C50741) / C49731;
    const double C50790 = C50741 * C50788;
    const double C50793 = C50601 * C50741;
    const double C50883 = C50741 * C50789;
    const double C50878 = C50741 / C49782;
    const double C2266 = C50879 * C50741;
    const double C49805 = C49804 - C49794;
    const double C49856 = C49851 + C49855;
    const double C49910 = C49850 * C49851;
    const double C50026 = C49843 * C49851;
    const double C50025 = C49851 * ae;
    const double C122 =
        2 * C49850 * C49901 + C49850 * (C49901 + C49851 * C49862);
    const double C276 = C49843 * (C49901 + C49851 * C49862);
    const double C447 = C49984 * (C49901 + C49851 * C49862);
    const double C1079 =
        2 * C49843 * C49901 + C49843 * (C49901 + C49851 * C49847);
    const double C1540 = C49984 * (C49901 + C49851 * C49847);
    const double C1824 =
        2 * C49984 * C49901 + C49984 * (C49901 + C49851 * C50035);
    const double C5513 =
        3 * (C49901 + C49851 * C50035) +
        C49984 * (2 * C49984 * C49851 + C49984 * (C49851 + C49859 * C50035));
    const double C49905 = C49843 * C49903;
    const double C128 = (C49898 * C49899 * C49892 + C49903 * C49862) / C49731;
    const double C129 =
        (2 * C49850 * C49903 + C49850 * (C49903 + C49894 * C49862)) / C49731;
    const double C286 = (C49843 * (C49903 + C49894 * C49862) +
                         (C49901 + C49851 * C49862) * ae) /
                        C49731;
    const double C287 =
        (C49843 * C49850 * C49903 + C49850 * C49901 * ae) / C49731;
    const double C457 = (C49984 * (C49903 + C49894 * C49862)) / C49731;
    const double C458 = (C49984 * C49850 * C49903) / C49731;
    const double C460 = (C49898 * C49899 * C49892 + C49903 * C50035) / C49731;
    const double C1828 =
        (2 * C49984 * C49903 + C49984 * (C49903 + C49894 * C50035)) / C49731;
    const double C147 = C50741 * C135;
    const double C49865 = C49859 + C49864;
    const double C49873 = C49868 + C49872;
    const double C49930 = C49868 * C49862;
    const double C49951 = C49850 * C49868;
    const double C50202 = C49868 * C49847;
    const double C50201 = C49843 * C49868;
    const double C50200 = C49868 * ae;
    const double C50581 = C49868 * C50035;
    const double C49920 = C49918 * C49862;
    const double C49927 = C49850 * C49918;
    const double C50059 = C49843 * C49918;
    const double C50195 = ae * C49918;
    const double C50261 = C49984 * C49918;
    const double C50478 = C49918 * C50035;
    const double C5516 =
        (3 * (C49903 + C49894 * C50035) +
         C49984 * (2 * C49984 * C49894 + C49984 * (C49894 + C49918 * C50035))) /
        C49731;
    const double C49885 = C49879 + C49884;
    const double C49957 = C49954 * C49862;
    const double C50160 = C49850 * C49954;
    const double C50301 = C49843 * C49954;
    const double C49919 = C49851 + C49917;
    const double C49933 = 2 * C49929;
    const double C50015 = C49843 * C49929;
    const double C50014 = C49929 * ae;
    const double C50066 = C49851 + C50062;
    const double C50065 = C50061 * ae;
    const double C50203 = 2 * C50061;
    const double C50570 = C49851 + C50569;
    const double C50582 = 2 * C50580;
    const double C49911 = C49843 * C49909;
    const double C461 = (C49850 * C49903 + C49909 * C50035) / C49731;
    const double C50063 = 2 * C50056;
    const double C49956 = C49868 + C49952;
    const double C50169 = C50161 * C49847;
    const double C50168 = C49843 * C50161;
    const double C50167 = C50161 * ae;
    const double C50312 = C49868 + C50304;
    const double C50311 = C50303 * ae;
    const double C49937 = C49918 + C49935;
    const double C49953 = 2 * C49948;
    const double C50082 = C49843 * C49948;
    const double C50156 = ae * C49948;
    const double C50248 = C49984 * C49948;
    const double C50475 = C49948 * C50035;
    const double C50309 = 2 * C50296;
    const double C50349 = C49918 + C50344;
    const double C50370 = ae * C50363;
    const double C5524 = C50741 * C469;
    const double C50598 = C50597 * C50592;
    const double C50602 = C50601 * C50597;
    const double C50854 = C50597 * C50593;
    const double C50851 = C50597 / C49782;
    const double C17151 = C50879 * C50597;
    const double C50626 = C50625 * C50620;
    const double C50631 = C50630 * C50625;
    const double C50861 = C50625 * C50621;
    const double C50858 = C50625 / C50619;
    const double C1004 = C50866 * C50625;
    const double C50693 = C50644 * C50691;
    const double C50696 = C50630 * C50644;
    const double C50870 = C50644 * C50692;
    const double C50865 = C50644 / C50619;
    const double C272 = C50866 * C50644;
    const double C50721 = C50660 * C50719;
    const double C50724 = C50630 * C50660;
    const double C50874 = C50660 * C50720;
    const double C50867 = C50660 / C50619;
    const double C445 = C50866 * C50660;
    const double C50818 = C50757 * C50816;
    const double C50821 = C50601 * C50757;
    const double C50887 = C50757 * C50817;
    const double C50880 = C50757 / C49782;
    const double C5202 = C50879 * C50757;
    const double C49743 = 2 * C49741;
    const double C49790 = C49741 / C49738;
    const double C49785 = -4 * C49741;
    const double C2274 = ((0 * ae) / C49731 - C49741 / C49738) / (2 * C49731) +
                         (0 * ae) / C49731;
    const double C8003 = (0 * ae) / C49731 - C49741 / C49738;
    const double C145 = C117 * C121;
    const double C142 = C117 * C120;
    const double C312 = C117 * C277;
    const double C483 = C117 * C448;
    const double C5526 = C117 * C450;
    const double C5523 = C117 * C449;
    const double C6068 = C117 * C867;
    const double C143 = C118 * C127;
    const double C141 = C118 * C126;
    const double C315 = C118 * C288;
    const double C486 = C118 * C459;
    const double C50885 = C50790 / C49742;
    const double C50884 = C50790 * C50789;
    const double C50881 = C50790 / C49731;
    const double C2265 = (2 * C50601 * C50790) / C49731;
    const double C50886 = C50793 * C50789;
    const double C19999 = C50793 / C50857;
    const double C24673 = C50793 / C49782;
    const double C50903 = C50883 / C49731;
    const double C2264 = (C50741 * std::pow(C50788, 2)) / C49738 + C50878;
    const double C49857 = C49856 * C49846;
    const double C49912 = C49910 * ae;
    const double C280 = C49850 * C49901 + C49910 * C49847;
    const double C451 = C49850 * C49901 + C49910 * C50035;
    const double C868 = C49984 * C49843 * C49910;
    const double C1078 =
        2 * C49843 * C49910 + C49843 * (C49910 + C49929 * C49847);
    const double C1539 = C49984 * (C49910 + C49929 * C49847);
    const double C1823 =
        2 * C49984 * C49910 + C49984 * (C49910 + C49929 * C50035);
    const double C50028 = C50026 * ae;
    const double C1193 = C49843 * C49901 + C50026 * C50035;
    const double C4601 =
        2 * C49984 * C50026 + C49984 * (C50026 + C50061 * C50035);
    const double C50027 = C50024 + C50025;
    const double C148 = C117 * C122;
    const double C309 = C117 * C276;
    const double C480 = C117 * C447;
    const double C6990 = C117 * C1540;
    const double C5531 = C117 * C1824;
    const double C7403 = C117 * C5513;
    const double C49906 = C49905 + C49904;
    const double C146 = C118 * C128;
    const double C149 = C118 * C129;
    const double C310 = C118 * C286;
    const double C313 = C118 * C287;
    const double C481 = C118 * C457;
    const double C484 = C118 * C458;
    const double C487 = C118 * C460;
    const double C1837 = C118 * C1828;
    const double C49866 = C49865 * C49846;
    const double C49874 = C49873 * C49846;
    const double C49934 = C49859 + C49930;
    const double C49955 = 2 * C49951;
    const double C50085 = C49951 * C49847;
    const double C50084 = C49843 * C49951;
    const double C50083 = C49951 * ae;
    const double C50566 = C49951 * C50035;
    const double C5514 =
        3 * (C49910 + C49929 * C50035) +
        C49984 * (2 * C49984 * C49929 + C49984 * (C49929 + C49951 * C50035));
    const double C50208 = C49859 + C50202;
    const double C50207 = C50201 * ae;
    const double C50305 = 2 * C50201;
    const double C50577 = C50201 * C50035;
    const double C6488 =
        3 * (C50026 + C50061 * C50035) +
        C49984 * (2 * C49984 * C50061 + C49984 * (C50061 + C50201 * C50035));
    const double C50206 = C50199 + C50200;
    const double C50583 = C49859 + C50581;
    const double C49922 = C49894 + C49920;
    const double C49931 = 2 * C49927;
    const double C50013 = C49843 * C49927;
    const double C50079 = ae * C49927;
    const double C1827 =
        (2 * C49984 * C49909 + C49984 * (C49909 + C49927 * C50035)) / C49731;
    const double C5517 =
        (3 * (C49909 + C49927 * C50035) +
         C49984 * (2 * C49984 * C49927 + C49984 * (C49927 + C49948 * C50035))) /
        C49731;
    const double C50064 = C50059 + C50060;
    const double C50205 = 2 * C50195;
    const double C50266 = ae * C50261;
    const double C50487 = 2 * C50261;
    const double C50479 = C49894 + C50478;
    const double C5533 = C118 * C5516;
    const double C49886 = C49885 * C49846;
    const double C49959 = C49932 + C49957;
    const double C50166 = C49843 * C50160;
    const double C50310 = C50301 + C50302;
    const double C49921 = C49919 * ae;
    const double C123 = 3 * (C49901 + C49851 * C49862) +
                        C49850 * (2 * C49910 + C49850 * C49919);
    const double C275 = C49843 * (2 * C49910 + C49850 * C49919);
    const double C281 = C49901 + C49851 * C49862 + C49919 * C49847;
    const double C446 = C49984 * (2 * C49910 + C49850 * C49919);
    const double C452 = C49901 + C49851 * C49862 + C49919 * C50035;
    const double C869 = C49984 * C49843 * C49919;
    const double C50017 = C50015 * ae;
    const double C1192 = C49843 * C49910 + C50015 * C50035;
    const double C50069 = C50066 * ae;
    const double C2481 = 3 * (C49901 + C49851 * C49847) +
                         C49843 * (2 * C50026 + C49843 * C50066);
    const double C2684 = C49901 + C49851 * C49847 + C50066 * C50035;
    const double C3263 = C49984 * (2 * C50026 + C49843 * C50066);
    const double C7396 =
        4 * (2 * C49984 * C49851 + C49984 * C50570) +
        C49984 * (3 * C50570 + C49984 * (2 * C49984 * C49859 +
                                         C49984 * (C49859 + C49868 * C50035)));
    const double C489 = C118 * C461;
    const double C49958 = C49850 * C49956;
    const double C50108 = C49956 * C49847;
    const double C50107 = C49843 * C49956;
    const double C50106 = C49956 * ae;
    const double C50173 = C49951 + C50169;
    const double C50172 = C50168 * ae;
    const double C50317 = C49843 * C50312;
    const double C50316 = C50312 * ae;
    const double C49939 = C49850 * C49937;
    const double C49947 = 3 * C49937;
    const double C50001 = C49843 * C49937;
    const double C50102 = ae * C49937;
    const double C50164 = 2 * C50156;
    const double C50253 = ae * C50248;
    const double C50476 = C49927 + C50475;
    const double C50354 = ae * C50349;
    const double C50488 = C49984 * C50349;
    const double C50376 = 2 * C50370;
    const double C50855 = C50598 / C49742;
    const double C50853 = C50598 / C49731;
    const double C50852 = C50598 * C50593;
    const double C17150 = (2 * C50601 * C50598) / C49731;
    const double C50856 = C50602 * C50593;
    const double C109 = C50602 / C50857;
    const double C7999 = C50602 / C49782;
    const double C50892 = C50854 / C49731;
    const double C17149 = (C50597 * std::pow(C50592, 2)) / C49738 + C50851;
    const double C50862 = C50626 / C50634;
    const double C50860 = C50626 / C50617;
    const double C50859 = C50626 * C50621;
    const double C1003 = (2 * C50630 * C50626) / C50617;
    const double C50863 = C50631 * C50621;
    const double C116 = C50631 / C50864;
    const double C618 = C50631 / C50619;
    const double C50895 = C50861 / C50617;
    const double C1002 = (C50625 * std::pow(C50620, 2)) / C50629 + C50858;
    const double C50872 = C50693 / C50634;
    const double C50871 = C50693 * C50692;
    const double C50868 = C50693 / C50617;
    const double C271 = (2 * C50630 * C50693) / C50617;
    const double C50873 = C50696 * C50692;
    const double C1074 = C50696 / C50864;
    const double C1306 = C50696 / C50619;
    const double C50897 = C50870 / C50617;
    const double C270 = (C50644 * std::pow(C50691, 2)) / C50629 + C50865;
    const double C50876 = C50721 / C50634;
    const double C50875 = C50721 * C50720;
    const double C50869 = C50721 / C50617;
    const double C444 = (2 * C50630 * C50721) / C50617;
    const double C50877 = C50724 * C50720;
    const double C1820 = C50724 / C50864;
    const double C2067 = C50724 / C50619;
    const double C50900 = C50874 / C50617;
    const double C443 = (C50660 * std::pow(C50719, 2)) / C50629 + C50867;
    const double C50889 = C50818 / C49742;
    const double C50888 = C50818 * C50817;
    const double C50882 = C50818 / C49731;
    const double C5201 = (2 * C50601 * C50818) / C49731;
    const double C50890 = C50821 * C50817;
    const double C39151 = C50821 / C50857;
    const double C44486 = C50821 / C49782;
    const double C50906 = C50887 / C49731;
    const double C5200 = (C50757 * std::pow(C50816, 2)) / C49738 + C50880;
    const double C49744 = C49729 * C49743;
    const double C17155 = (-C49743 / C49731) / (2 * C49731) - (0 * be) / C49731;
    const double C49801 = C49797 - C49790;
    const double C49795 = C49785 / C49731;
    const double C8017 = C8003 * C286;
    const double C8011 = C8003 * C287;
    const double C8006 = C8003 * C288;
    const double C158 = C142 + C143;
    const double C5544 = C5523 + C486;
    const double C50904 = C50884 / C49738;
    const double C8015 = C50881 * C135;
    const double C8009 = C50881 * C134;
    const double C13974 = C50881 * C469;
    const double C50905 = C50886 / C49731;
    const double C17147 = -C50903;
    const double C2296 = C2264 * C135;
    const double C2281 = C2264 * C134;
    const double C36744 = C2264 * C469;
    const double C136 =
        (2 * C49850 * C49857 +
         C49850 * (C49857 +
                   (C49852 * C49853 + C49847 * bs[5] * std::pow(C49845, 5)) *
                       C49846 * std::pow(C49850, 2))) /
        C49738;
    const double C297 = (2 * ae * C49850 * C49848 * C49844 * C49892 +
                         C49843 * C49850 * C49857) /
                        C49738;
    const double C468 = ((zP - zQ) * C49850 * C49857) / C49738;
    const double C470 = ((C49901 + C49847 * C49844 * C49848) * C49846 +
                         C49857 * std::pow(zP - zQ, 2)) /
                        C49738;
    const double C877 =
        (2 * ae * C49984 * C49903 + C49843 * C49984 * C49857) / C49738;
    const double C49913 = C49911 + C49912;
    const double C317 = C117 * C280;
    const double C488 = C117 * C451;
    const double C884 = C117 * C868;
    const double C5352 = C117 * C1539;
    const double C5529 = C117 * C1823;
    const double C6071 = C117 * C1193;
    const double C6494 = C117 * C4601;
    const double C50030 = ae * C50027;
    const double C50029 = C49843 * C50027;
    const double C50049 = C49984 * C50027;
    const double C50058 = 2 * C50027;
    const double C49907 = ae * C49906;
    const double C289 =
        (C49898 * C49899 * C49892 + C49843 * C49906 + C49843 * C49901 * ae) /
        C49731;
    const double C872 = (C49984 * C49906) / C49731;
    const double C1197 = (C49906 + C50027 * C50035) / C49731;
    const double C159 = C145 + C146;
    const double C160 = C148 + C149;
    const double C329 = C309 + C310;
    const double C330 = C312 + C313;
    const double C500 = C480 + C481;
    const double C501 = C483 + C484;
    const double C5545 = C5526 + C487;
    const double C5547 = C5531 + C1837;
    const double C50012 = C49850 * C49866;
    const double C50057 = C49843 * C49866;
    const double C50137 = C49984 * C49866;
    const double C137 =
        (3 * (C49857 + C49866 * C49862) +
         C49850 * (2 * C49850 * C49866 +
                   C49850 * (C49866 + (C49860 * C49861 +
                                       C49847 * bs[6] * std::pow(C49841, 6)) *
                                          C49846 * C49862))) /
        C49738;
    const double C296 = (2 * ae * (C49848 * C49844 * C49892 + C49894 * C49862) +
                         C49843 * (C49857 + C49866 * C49862)) /
                        C49738;
    const double C467 = ((zP - zQ) * (C49857 + C49866 * C49862)) / C49738;
    const double C471 =
        (C49850 * C49857 + C49850 * C49866 * std::pow(zP - zQ, 2)) / C49738;
    const double C878 =
        (2 * ae * C49984 * C49909 + C49843 * C49984 * C49850 * C49866) / C49738;
    const double C1201 = (2 * ae * (C49903 + C49894 * C50035) +
                          C49843 * (C49857 + C49866 * C50035)) /
                         C49738;
    const double C1832 =
        (2 * C49984 * C49857 + C49984 * (C49857 + C49866 * C50035)) / C49738;
    const double C49875 = C49874 * C49862;
    const double C49878 = C49850 * C49874;
    const double C50196 = C49843 * C49874;
    const double C50239 = C49874 * C50035;
    const double C50262 = C49984 * C49874;
    const double C49936 = C49850 * C49934;
    const double C49950 = 3 * C49934;
    const double C50003 = C49843 * C49934;
    const double C50002 = C49934 * ae;
    const double C1077 =
        2 * C49843 * C49919 + C49843 * (C49919 + C49934 * C49847);
    const double C1538 = C49984 * (C49919 + C49934 * C49847);
    const double C1822 =
        2 * C49984 * C49919 + C49984 * (C49919 + C49934 * C50035);
    const double C5515 =
        3 * (C49919 + C49934 * C50035) +
        C49984 * (2 * C49984 * C49934 + C49984 * (C49934 + C49956 * C50035));
    const double C50089 = C49929 + C50085;
    const double C50088 = C50084 * ae;
    const double C50162 = 2 * C50084;
    const double C4599 =
        2 * C49984 * C50015 + C49984 * (C50015 + C50084 * C50035);
    const double C6487 =
        3 * (C50015 + C50084 * C50035) +
        C49984 * (2 * C49984 * C50084 + C49984 * (C50084 + C50168 * C50035));
    const double C50087 = C50082 + C50083;
    const double C50567 = C49929 + C50566;
    const double C5534 = C117 * C5514;
    const double C50212 = C49843 * C50208;
    const double C50211 = C50208 * ae;
    const double C50306 = 3 * C50208;
    const double C4600 =
        2 * C49984 * C50066 + C49984 * (C50066 + C50208 * C50035);
    const double C23155 =
        3 * (C50066 + C50208 * C50035) +
        C49984 * (2 * C49984 * C50208 + C49984 * (C50208 + C50312 * C50035));
    const double C50578 = C50061 + C50577;
    const double C39955 = C117 * C6488;
    const double C50213 = ae * C50206;
    const double C50210 = C49843 * C50206;
    const double C50241 = C50206 * C50035;
    const double C50265 = C49984 * C50206;
    const double C50300 = 2 * C50206;
    const double C50584 = C49984 * C50583;
    const double C49923 = C49843 * C49922;
    const double C130 = (3 * (C49903 + C49894 * C49862) +
                         C49850 * (2 * C49909 + C49850 * C49922)) /
                        C49731;
    const double C285 = (C49843 * (2 * C49909 + C49850 * C49922) +
                         (2 * C49910 + C49850 * C49919) * ae) /
                        C49731;
    const double C456 = (C49984 * (2 * C49909 + C49850 * C49922)) / C49731;
    const double C462 = (C49903 + C49894 * C49862 + C49922 * C50035) / C49731;
    const double C1826 =
        (2 * C49984 * C49922 + C49984 * (C49922 + C49937 * C50035)) / C49731;
    const double C50016 = C50013 + C50014;
    const double C50086 = 2 * C50079;
    const double C1836 = C118 * C1827;
    const double C5535 = C118 * C5517;
    const double C50070 = ae * C50064;
    const double C50068 = C49843 * C50064;
    const double C50125 = C50064 * C50035;
    const double C50139 = C49984 * C50064;
    const double C50198 = 2 * C50064;
    const double C50271 = 2 * C50266;
    const double C7398 =
        (4 * (2 * C49984 * C49894 + C49984 * C50479) +
         C49984 * (3 * C50479 + C49984 * (2 * C50261 + C49984 * C50349))) /
        C49731;
    const double C7408 = C7403 + C5533;
    const double C49887 = C49886 * C49862;
    const double C50157 = C49850 * C49886;
    const double C50297 = C49843 * C49886;
    const double C50345 = C49886 * C50035;
    const double C50364 = C49984 * C49886;
    const double C49961 = C49850 * C49959;
    const double C50105 = C49843 * C49959;
    const double C5518 =
        (3 * (C49922 + C49937 * C50035) +
         C49984 * (2 * C49984 * C49937 + C49984 * (C49937 + C49959 * C50035))) /
        C49731;
    const double C50171 = C50166 + C50167;
    const double C50318 = ae * C50310;
    const double C50315 = C49843 * C50310;
    const double C50348 = C50310 * C50035;
    const double C50368 = C49984 * C50310;
    const double C151 = C117 * C123;
    const double C306 = C117 * C275;
    const double C320 = C117 * C281;
    const double C477 = C117 * C446;
    const double C491 = C117 * C452;
    const double C887 = C117 * C869;
    const double C5350 = C117 * C1192;
    const double C6993 = C117 * C2684;
    const double C40562 = C117 * C7396;
    const double C49960 = C49955 + C49958;
    const double C50112 = C49934 + C50108;
    const double C50111 = C50107 * ae;
    const double C50177 = C49843 * C50173;
    const double C50176 = C50173 * ae;
    const double C50321 = C50305 + C50317;
    const double C49941 = C49931 + C49939;
    const double C50109 = 2 * C50102;
    const double C50258 = 2 * C50253;
    const double C7397 =
        (4 * (2 * C49984 * C49927 + C49984 * C50476) +
         C49984 *
             (3 * C50476 +
              C49984 * (2 * C50248 + C49984 * (C49948 + C50160 * C50035)))) /
        C49731;
    const double C50359 = 2 * C50354;
    const double C50489 = C50487 + C50488;
    const double C50891 = C50852 / C49738;
    const double C50893 = C50856 / C49731;
    const double C2267 = -C50892;
    const double C50894 = C50859 / C50629;
    const double C50896 = C50863 / C50617;
    const double C273 = -C50895;
    const double C50898 = C50871 / C50629;
    const double C50899 = C50873 / C50617;
    const double C1000 = -C50897;
    const double C50901 = C50875 / C50629;
    const double C50902 = C50877 / C50617;
    const double C1651 = -C50900;
    const double C50907 = C50888 / C49738;
    const double C50908 = C50890 / C49731;
    const double C33790 = -C50906;
    const double C49745 = C49744 / C49731;
    const double C17169 = C17155 * C286;
    const double C17163 = C17155 * C287;
    const double C17158 = C17155 * C288;
    const double C20008 =
        (C49801 / C49782 - (0 * be) / C49731) / C49782 + (0 * ae) / C49731;
    const double C24681 = C49801 / C49782 - (0 * be) / C49731;
    const double C163 = C158 + C143;
    const double C5551 = C5544 + C486;
    const double C50917 = C50878 - C50904;
    const double C50918 = C50885 - C50905;
    const double C17167 = C17147 * C135;
    const double C17161 = C17147 * C134;
    const double C22195 = C17147 * C469;
    const double C150 = C50741 * C136;
    const double C2299 = C2264 * C136;
    const double C8024 = C50881 * C136;
    const double C17176 = C17147 * C136;
    const double C314 = C50741 * C297;
    const double C2284 = C2265 * C297;
    const double C2499 = C2264 * C297;
    const double C8012 = C50793 * C297;
    const double C8216 = C50881 * C297;
    const double C17164 = C50793 * C297;
    const double C17368 = C17147 * C297;
    const double C485 = C50741 * C468;
    const double C2702 = C2264 * C468;
    const double C8418 = C50881 * C468;
    const double C17570 = C17147 * C468;
    const double C5527 = C50741 * C470;
    const double C13982 = C50881 * C470;
    const double C22199 = C17147 * C470;
    const double C36754 = C2264 * C470;
    const double C6069 = C50741 * C877;
    const double C13976 = C50793 * C877;
    const double C14655 = C50881 * C877;
    const double C22197 = C50793 * C877;
    const double C22729 = C17147 * C877;
    const double C36746 = C2265 * C877;
    const double C37260 = C2264 * C877;
    const double C49914 = ae * C49913;
    const double C290 =
        (C49850 * C49903 + C49843 * C49913 + C49843 * C49910 * ae) / C49731;
    const double C873 = (C49984 * C49913) / C49731;
    const double C502 = C488 + C489;
    const double C50031 = C49903 + C50029;
    const double C50050 = ae * C50049;
    const double C299 =
        ((C49901 + C49847 * C49844 * C49848) * C49846 + C49907 + C49907 +
         C49843 * (2 * ae * C49903 + C49843 * C49857)) /
        C49738;
    const double C316 = C118 * C289;
    const double C2278 = C2274 * C289;
    const double C8217 = C8003 * C289;
    const double C17369 = C17155 * C289;
    const double C883 = C118 * C872;
    const double C8419 = C8003 * C872;
    const double C17571 = C17155 * C872;
    const double C1206 = C118 * C1197;
    const double C8422 = C8003 * C1197;
    const double C17574 = C17155 * C1197;
    const double C164 = C159 + C146;
    const double C165 = C160 + C149;
    const double C335 = C329 + C310;
    const double C336 = C330 + C313;
    const double C506 = C500 + C481;
    const double C507 = C501 + C484;
    const double C5552 = C5545 + C487;
    const double C5554 = C5547 + C1837;
    const double C50067 = C50063 + C50057;
    const double C153 = C50741 * C137;
    const double C8027 = C50881 * C137;
    const double C17179 = C17147 * C137;
    const double C311 = C50741 * C296;
    const double C2293 = C2265 * C296;
    const double C2889 = C2264 * C296;
    const double C8018 = C50793 * C296;
    const double C8210 = C50881 * C296;
    const double C17170 = C50793 * C296;
    const double C17362 = C17147 * C296;
    const double C482 = C50741 * C467;
    const double C3053 = C2264 * C467;
    const double C8412 = C50881 * C467;
    const double C17564 = C17147 * C467;
    const double C490 = C50741 * C471;
    const double C2711 = C2264 * C471;
    const double C8425 = C50881 * C471;
    const double C17577 = C17147 * C471;
    const double C886 = C50741 * C878;
    const double C2699 = C2265 * C878;
    const double C3278 = C2264 * C878;
    const double C8415 = C50793 * C878;
    const double C8979 = C50881 * C878;
    const double C17567 = C50793 * C878;
    const double C18131 = C17147 * C878;
    const double C6072 = C50741 * C1201;
    const double C13980 = C50793 * C1201;
    const double C15199 = C50881 * C1201;
    const double C22201 = C50793 * C1201;
    const double C22733 = C17147 * C1201;
    const double C36752 = C2265 * C1201;
    const double C37668 = C2264 * C1201;
    const double C5532 = C50741 * C1832;
    const double C16391 = C50881 * C1832;
    const double C22205 = C17147 * C1832;
    const double C38580 = C2264 * C1832;
    const double C49876 = C49866 + C49875;
    const double C49882 = 2 * C49878;
    const double C50080 = C49843 * C49878;
    const double C50143 = C49984 * C49878;
    const double C1200 = (2 * ae * (C49909 + C49927 * C50035) +
                          C49843 * (C50012 + C49878 * C50035)) /
                         C49738;
    const double C1831 =
        (2 * C49984 * C50012 + C49984 * (C50012 + C49878 * C50035)) / C49738;
    const double C50209 = C50205 + C50196;
    const double C50242 = C49866 + C50239;
    const double C50267 = C49843 * C50262;
    const double C50381 = 2 * C50262;
    const double C49938 = C49933 + C49936;
    const double C50005 = C50003 * ae;
    const double C1191 = C49843 * C49919 + C50003 * C50035;
    const double C6064 =
        2 * C49984 * C50003 + C49984 * (C50003 + C50107 * C50035);
    const double C50004 = C50001 + C50002;
    const double C11025 = C117 * C1538;
    const double C5541 = C117 * C1822;
    const double C50092 = C50089 * ae;
    const double C2482 = 3 * (C49910 + C49929 * C49847) +
                         C49843 * (2 * C50015 + C49843 * C50089);
    const double C2685 = C49910 + C49929 * C49847 + C50089 * C50035;
    const double C3264 = C49984 * (2 * C50015 + C49843 * C50089);
    const double C4598 =
        2 * C49984 * C50089 + C49984 * (C50089 + C50173 * C50035);
    const double C6075 = C117 * C4599;
    const double C50093 = ae * C50087;
    const double C50091 = C49843 * C50087;
    const double C50129 = C50087 * C50035;
    const double C50145 = C49984 * C50087;
    const double C50159 = 2 * C50087;
    const double C7395 =
        4 * (2 * C49984 * C49929 + C49984 * C50567) +
        C49984 * (3 * C50567 + C49984 * (2 * C49984 * C49951 +
                                         C49984 * (C49951 + C50161 * C50035)));
    const double C50216 = C50203 + C50212;
    const double C40290 = C117 * C4600;
    const double C24070 =
        4 * (2 * C49984 * C50061 + C49984 * C50578) +
        C49984 * (3 * C50578 + C49984 * (2 * C49984 * C50201 +
                                         C49984 * (C50201 + C50303 * C50035)));
    const double C50295 = C49874 + C50213;
    const double C50215 = C49918 + C50210;
    const double C50244 = C50064 + C50241;
    const double C50270 = ae * C50265;
    const double C50385 = 2 * C50265;
    const double C50585 = C50582 + C50584;
    const double C49924 = C49923 + C49921;
    const double C152 = C118 * C130;
    const double C307 = C118 * C285;
    const double C8020 = C8003 * C285;
    const double C17172 = C17155 * C285;
    const double C478 = C118 * C456;
    const double C492 = C118 * C462;
    const double C1835 = C118 * C1826;
    const double C50019 = ae * C50016;
    const double C50018 = C49843 * C50016;
    const double C50046 = C49984 * C50016;
    const double C50081 = 2 * C50016;
    const double C1196 = (C49913 + C50016 * C50035) / C49731;
    const double C5546 = C5529 + C1836;
    const double C5548 = C5534 + C5535;
    const double C50194 = C49866 + C50070;
    const double C50071 = C49894 + C50068;
    const double C50126 = C50027 + C50125;
    const double C50141 = ae * C50139;
    const double C50280 = 2 * C50139;
    const double C7407 = C118 * C7398;
    const double C7409 = C7408 + C5533;
    const double C49888 = C49874 + C49887;
    const double C50165 = C49843 * C50157;
    const double C50230 = C50157 * C50035;
    const double C50249 = C49984 * C50157;
    const double C50314 = C50309 + C50297;
    const double C50350 = C49874 + C50345;
    const double C50371 = C49843 * C50364;
    const double C49963 = C49953 + C49961;
    const double C50110 = C50105 + C50106;
    const double C5543 = C118 * C5518;
    const double C50178 = ae * C50171;
    const double C50175 = C49843 * C50171;
    const double C50232 = C50171 * C50035;
    const double C50252 = C49984 * C50171;
    const double C50320 = C49932 + C50315;
    const double C50353 = C50206 + C50348;
    const double C50375 = ae * C50368;
    const double C49962 = C49850 * C49960;
    const double C49992 = C49843 * C49960;
    const double C49991 = C49960 * ae;
    const double C50115 = C50112 * ae;
    const double C2483 = 3 * (C49919 + C49934 * C49847) +
                         C49843 * (2 * C50003 + C49843 * C50112);
    const double C2686 = C49919 + C49934 * C49847 + C50112 * C50035;
    const double C3265 = C49984 * (2 * C50003 + C49843 * C50112);
    const double C50181 = C50162 + C50177;
    const double C50325 = C49843 * C50321;
    const double C50324 = C50321 * ae;
    const double C49942 = C49843 * C49941;
    const double C131 = (4 * (2 * C49909 + C49850 * C49922) +
                         C49850 * (3 * C49922 + C49850 * C49941)) /
                        C49731;
    const double C463 =
        (2 * C49909 + C49850 * C49922 + C49941 * C50035) / C49731;
    const double C464 = (C49984 * (3 * C49922 + C49850 * C49941)) / C49731;
    const double C7406 = C118 * C7397;
    const double C40559 =
        (5 * (3 * C50479 + C49984 * C50489) +
         C49984 * (4 * C50489 +
                   C49984 * (3 * C50349 +
                             C49984 * (2 * C50363 +
                                       C49984 * (C49932 + C49954 * C50035))))) /
        C49731;
    const double C50909 = C50851 - C50891;
    const double C50910 = C50855 - C50893;
    const double C50911 = C50858 - C50894;
    const double C50912 = C50862 - C50896;
    const double C50913 = C50865 - C50898;
    const double C50914 = C50872 - C50899;
    const double C50915 = C50867 - C50901;
    const double C50916 = C50876 - C50902;
    const double C50919 = C50880 - C50907;
    const double C50920 = C50889 - C50908;
    const double C49746 = C50741 - C49745;
    const double C24685 = C24681 * C289;
    const double C168 = C163 + C144;
    const double C5557 = C5551 + C5524;
    const double C24706 = C50917 * C136;
    const double C24703 = C50917 * C135;
    const double C24688 = C50917 * C134;
    const double C24897 = C50917 * C297;
    const double C25100 = C50917 * C471;
    const double C25091 = C50917 * C468;
    const double C25278 = C50917 * C296;
    const double C25442 = C50917 * C467;
    const double C25658 = C50917 * C878;
    const double C31364 = C50917 * C470;
    const double C31354 = C50917 * C469;
    const double C31870 = C50917 * C877;
    const double C32278 = C50917 * C1201;
    const double C33190 = C50917 * C1832;
    const double C19996 =
        (C50917 * C50788) / C49731 + (C50881 - C50903) / C49782;
    const double C24700 = C50918 * C296;
    const double C24691 = C50918 * C297;
    const double C25088 = C50918 * C878;
    const double C31362 = C50918 * C1201;
    const double C31356 = C50918 * C877;
    const double C19997 =
        (C50918 * C50788) / C49731 + (2 * C50793 + C50917) / C49782;
    const double C19998 = (C50788 * C50793) / C49742 + C50918 / C49782;
    const double C300 =
        (C49850 * C49857 + C49914 + C49914 +
         C49843 * (2 * ae * C49909 + C49843 * C49850 * C49866)) /
        C49738;
    const double C318 = C118 * C290;
    const double C2286 = C2274 * C290;
    const double C8212 = C8003 * C290;
    const double C17364 = C17155 * C290;
    const double C24693 = C24681 * C290;
    const double C885 = C118 * C873;
    const double C8414 = C8003 * C873;
    const double C17566 = C17155 * C873;
    const double C508 = C502 + C489;
    const double C50032 = C50031 + C50028;
    const double C1548 =
        (C49984 * C49857 + C50050 + C50050 +
         C49843 * (2 * ae * C49984 * C49894 + C49843 * C49984 * C49866)) /
        C49738;
    const double C6083 = C6068 + C883;
    const double C6084 = C6071 + C1206;
    const double C169 = C164 + C147;
    const double C170 = C165 + C150;
    const double C342 = C336 + C314;
    const double C513 = C507 + C485;
    const double C5558 = C5552 + C5527;
    const double C341 = C335 + C311;
    const double C512 = C506 + C482;
    const double C5560 = C5554 + C5532;
    const double C138 =
        (4 * (2 * C49850 * C49866 + C49850 * C49876) +
         C49850 * (3 * C49876 +
                   C49850 * (2 * C49850 * C49874 +
                             C49850 * (C49874 +
                                       (C49869 * C49870 +
                                        C49847 * bs[7] * std::pow(C49845, 7)) *
                                           C49846 * C49862)))) /
        C49738;
    const double C295 =
        (2 * ae *
             (2 * C49850 * C49894 +
              C49850 * (C49894 + C49861 * C49860 * C49892 * C49862)) +
         C49843 * (2 * C49850 * C49866 + C49850 * C49876)) /
        C49738;
    const double C466 =
        ((zP - zQ) * (2 * C49850 * C49866 + C49850 * C49876)) / C49738;
    const double C472 =
        (C49857 + C49866 * C49862 + C49876 * std::pow(zP - zQ, 2)) / C49738;
    const double C879 =
        (2 * ae * C49984 * C49922 + C49843 * C49984 * C49876) / C49738;
    const double C50090 = C50086 + C50080;
    const double C2714 = C2265 * C1200;
    const double C5351 = C50741 * C1200;
    const double C8428 = C50793 * C1200;
    const double C14660 = C50881 * C1200;
    const double C17580 = C50793 * C1200;
    const double C22739 = C17147 * C1200;
    const double C25103 = C50918 * C1200;
    const double C5530 = C50741 * C1831;
    const double C13986 = C50881 * C1831;
    const double C22209 = C17147 * C1831;
    const double C50214 = C49843 * C50209;
    const double C50294 = 2 * C50209;
    const double C4609 =
        (2 * ae * (2 * C49984 * C49894 + C49984 * (C49894 + C49918 * C50035)) +
         C49843 * (2 * C50137 + C49984 * C50242)) /
        C49738;
    const double C5519 = (3 * (C49857 + C49866 * C50035) +
                          C49984 * (2 * C50137 + C49984 * C50242)) /
                         C49738;
    const double C6492 =
        (2 * ae *
             (3 * (C49894 + C49918 * C50035) +
              C49984 * (2 * C50261 + C49984 * (C49918 + C49932 * C50035))) +
         C49843 *
             (3 * C50242 +
              C49984 * (2 * C50262 + C49984 * (C49874 + C49886 * C50035)))) /
        C49738;
    const double C7400 =
        (4 * (2 * C50137 + C49984 * C50242) +
         C49984 *
             (3 * C50242 +
              C49984 * (2 * C50262 + C49984 * (C49874 + C49886 * C50035)))) /
        C49738;
    const double C50272 = C50271 + C50267;
    const double C49940 = C49938 * ae;
    const double C293 = (C49843 * (3 * C49922 + C49850 * C49941) +
                         (3 * C49919 + C49850 * C49938) * ae) /
                        C49731;
    const double C124 = 4 * (2 * C49910 + C49850 * C49919) +
                        C49850 * (3 * C49919 + C49850 * C49938);
    const double C282 = 2 * C49910 + C49850 * C49919 + C49938 * C49847;
    const double C283 = C49843 * (3 * C49919 + C49850 * C49938);
    const double C453 = 2 * C49910 + C49850 * C49919 + C49938 * C50035;
    const double C454 = C49984 * (3 * C49919 + C49850 * C49938);
    const double C870 = C49984 * C49843 * C49938;
    const double C1076 =
        2 * C49843 * C49938 + C49843 * (C49938 + C49960 * C49847);
    const double C1537 = C49984 * (C49938 + C49960 * C49847);
    const double C1821 =
        2 * C49984 * C49938 + C49984 * (C49938 + C49960 * C50035);
    const double C5716 = C117 * C1191;
    const double C50007 = ae * C50004;
    const double C50006 = C49843 * C50004;
    const double C50043 = C49984 * C50004;
    const double C50104 = 2 * C50004;
    const double C5355 = C117 * C2685;
    const double C50155 = C49878 + C50093;
    const double C50094 = C49927 + C50091;
    const double C50130 = C50016 + C50129;
    const double C50147 = ae * C50145;
    const double C50274 = 2 * C50145;
    const double C50219 = C50216 * ae;
    const double C3541 = 4 * (2 * C50026 + C49843 * C50066) +
                         C49843 * (3 * C50066 + C49843 * C50216);
    const double C3699 = 2 * C50026 + C49843 * C50066 + C50216 * C50035;
    const double C4197 = C49984 * (3 * C50066 + C49843 * C50216);
    const double C21466 =
        2 * C49984 * C50216 + C49984 * (C50216 + C50321 * C50035);
    const double C50308 = C50295 + C50213;
    const double C50218 = C50215 + C50207;
    const double C50246 = ae * C50244;
    const double C50281 = C49984 * C50244;
    const double C50393 = 3 * C50244;
    const double C50362 = C50262 + C50270;
    const double C40558 =
        5 * (3 * C50570 + C49984 * C50585) +
        C49984 * (4 * C50585 +
                  C49984 * (3 * C50583 +
                            C49984 * (2 * C49984 * C49868 +
                                      C49984 * (C49868 + C49879 * C50035))));
    const double C49925 = ae * C49924;
    const double C291 =
        (C49903 + C49894 * C49862 + C49843 * C49924 + C49843 * C49919 * ae) /
        C49731;
    const double C874 = (C49984 * C49924) / C49731;
    const double C1195 = (C49924 + C50004 * C50035) / C49731;
    const double C161 = C151 + C152;
    const double C328 = C306 + C307;
    const double C499 = C477 + C478;
    const double C503 = C491 + C492;
    const double C5549 = C5541 + C1835;
    const double C50020 = C49909 + C50018;
    const double C50047 = ae * C50046;
    const double C1205 = C118 * C1196;
    const double C8427 = C8003 * C1196;
    const double C17579 = C17155 * C1196;
    const double C5553 = C5546 + C1836;
    const double C5555 = C5548 + C5535;
    const double C50204 = C50194 + C50070;
    const double C50072 = C50071 + C50065;
    const double C50127 = ae * C50126;
    const double C4605 = (2 * C50049 + C49984 * C50126) / C49731;
    const double C40565 = C40562 + C7407;
    const double C49889 = C49850 * C49888;
    const double C50103 = C49843 * C49888;
    const double C50149 = C49984 * C49888;
    const double C1199 = (2 * ae * (C49922 + C49937 * C50035) +
                          C49843 * (C49876 + C49888 * C50035)) /
                         C49738;
    const double C1830 =
        (2 * C49984 * C49876 + C49984 * (C49876 + C49888 * C50035)) / C49738;
    const double C50170 = C50164 + C50165;
    const double C50233 = C49878 + C50230;
    const double C50254 = C49843 * C50249;
    const double C50319 = C49843 * C50314;
    const double C50355 = C49843 * C50350;
    const double C50382 = C49984 * C50350;
    const double C50377 = C50376 + C50371;
    const double C49965 = C49850 * C49963;
    const double C49990 = C49843 * C49963;
    const double C1825 =
        (2 * C49984 * C49941 + C49984 * (C49941 + C49963 * C50035)) / C49731;
    const double C50116 = ae * C50110;
    const double C50114 = C49843 * C50110;
    const double C50133 = C50110 * C50035;
    const double C50151 = C49984 * C50110;
    const double C50180 = C49948 + C50175;
    const double C50235 = C50087 + C50232;
    const double C50257 = ae * C50252;
    const double C50323 = C50320 + C50311;
    const double C50358 = ae * C50353;
    const double C50386 = C49984 * C50353;
    const double C49964 = C49950 + C49962;
    const double C49994 = C49992 * ae;
    const double C1190 = C49843 * C49938 + C49992 * C50035;
    const double C50183 = C50181 * ae;
    const double C3540 = 4 * (2 * C50015 + C49843 * C50089) +
                         C49843 * (3 * C50089 + C49843 * C50181);
    const double C3698 = 2 * C50015 + C49843 * C50089 + C50181 * C50035;
    const double C4196 = C49984 * (3 * C50089 + C49843 * C50181);
    const double C50328 = C50306 + C50325;
    const double C155 = C118 * C131;
    const double C495 = C118 * C463;
    const double C497 = C118 * C464;
    const double C40564 = C118 * C40559;
    const double C106 = (C50909 * C50592) / C49731 + (C50853 - C50892) / C49782;
    const double C107 =
        (C50910 * C50592) / C49731 + (2 * C50602 + C50909) / C49782;
    const double C108 = (C50592 * C50602) / C49742 + C50910 / C49782;
    const double C113 = (C50911 * C50620) / C50617 + (C50860 - C50895) / C50619;
    const double C114 =
        (C50912 * C50620) / C50617 + (2 * C50631 + C50911) / C50619;
    const double C115 = (C50620 * C50631) / C50634 + C50912 / C50619;
    const double C1071 =
        (C50913 * C50691) / C50617 + (C50868 - C50897) / C50619;
    const double C1072 =
        (C50914 * C50691) / C50617 + (2 * C50696 + C50913) / C50619;
    const double C1073 = (C50691 * C50696) / C50634 + C50914 / C50619;
    const double C1817 =
        (C50915 * C50719) / C50617 + (C50869 - C50900) / C50619;
    const double C1818 =
        (C50916 * C50719) / C50617 + (2 * C50724 + C50915) / C50619;
    const double C1819 = (C50719 * C50724) / C50634 + C50916 / C50619;
    const double C39148 =
        (C50919 * C50816) / C49731 + (C50882 - C50906) / C49782;
    const double C39149 =
        (C50920 * C50816) / C49731 + (2 * C50821 + C50919) / C49782;
    const double C39150 = (C50816 * C50821) / C49742 + C50920 / C49782;
    const double C49747 = C49746 * C49740;
    const double C49787 = C49746 * ae;
    const double C2270 =
        (((0 - (C49729 * C49737) / C49731) * ae) / C49731 - (0 * be) / C49742) /
            (2 * C49731) +
        ((C49729 * ((C49746 * ae) / C49731 - C49737 / C49742) + C50881) * ae) /
            C49731 +
        (0 * ae) / C49731 - C49741 / C49738;
    const double C2272 =
        ((C49746 * ae) / C49731 - C49737 / C49742) / (2 * C49731) +
        ((C49729 * ((0 * ae) / C49731 - C49741 / C49738) + C50793) * ae) /
            C49731;
    const double C8001 = (C49746 * ae) / C49731 - C49737 / C49742;
    const double C17153 =
        (-C49737 / C49731) / (2 * C49731) - (C49746 * be) / C49731;
    const double C5563 = C5557 * C2267;
    const double C11176 = C5557 * C50909;
    const double C34085 = C5557 * C17149;
    const double C39349 = C5557 * C50597;
    const double C44780 = C5557 * C50853;
    const double C319 = C50741 * C300;
    const double C2287 = C2266 * C300;
    const double C2508 = C2264 * C300;
    const double C2496 = C2265 * C300;
    const double C8223 = C50881 * C300;
    const double C8213 = C50793 * C300;
    const double C17375 = C17147 * C300;
    const double C17365 = C50793 * C300;
    const double C24694 = C24673 * C300;
    const double C24906 = C50917 * C300;
    const double C24894 = C50918 * C300;
    const double C331 = C317 + C318;
    const double C894 = C884 + C885;
    const double C514 = C508 + C490;
    const double C50033 = ae * C50032;
    const double C1083 =
        (2 * C49906 + C49843 * C50032 + (C49901 + C49851 * C49847) * ae) /
        C49731;
    const double C1544 = (C49984 * C50032) / C49731;
    const double C6991 = C50741 * C1548;
    const double C14657 = C50793 * C1548;
    const double C15859 = C50881 * C1548;
    const double C22731 = C50793 * C1548;
    const double C23660 = C17147 * C1548;
    const double C31358 = C24673 * C1548;
    const double C31872 = C50918 * C1548;
    const double C32782 = C50917 * C1548;
    const double C36748 = C2266 * C1548;
    const double C37262 = C2265 * C1548;
    const double C38172 = C2264 * C1548;
    const double C6086 = C6083 + C883;
    const double C6087 = C6084 + C1206;
    const double C5537 = C513 * C2267;
    const double C5525 = C513 * C50602;
    const double C11182 = C513 * C50909;
    const double C11177 = C513 * C50910;
    const double C34091 = C513 * C17149;
    const double C34086 = C513 * C17150;
    const double C39353 = C513 * C50597;
    const double C44786 = C513 * C50853;
    const double C44781 = C513 * C50602;
    const double C5564 = C5558 * C2267;
    const double C11181 = C5558 * C50909;
    const double C34090 = C5558 * C17149;
    const double C39350 = C5558 * C50597;
    const double C44782 = C5558 * C50853;
    const double C5538 = C512 * C50602;
    const double C5867 = C512 * C2267;
    const double C11183 = C512 * C50910;
    const double C11178 = C512 * C7999;
    const double C11480 = C512 * C50909;
    const double C34092 = C512 * C17150;
    const double C34087 = C512 * C17151;
    const double C34389 = C512 * C17149;
    const double C39553 = C512 * C50597;
    const double C44787 = C512 * C50602;
    const double C45086 = C512 * C50853;
    const double C5566 = C5560 * C2267;
    const double C12956 = C5560 * C50909;
    const double C35864 = C5560 * C17149;
    const double C39351 = C5560 * C50597;
    const double C44785 = C5560 * C50853;
    const double C156 = C50741 * C138;
    const double C308 = C50741 * C295;
    const double C2302 = C2265 * C295;
    const double C8021 = C50793 * C295;
    const double C8611 = C50881 * C295;
    const double C17173 = C50793 * C295;
    const double C17763 = C17147 * C295;
    const double C24709 = C50918 * C295;
    const double C479 = C50741 * C466;
    const double C8770 = C50881 * C466;
    const double C17922 = C17147 * C466;
    const double C493 = C50741 * C472;
    const double C8431 = C50881 * C472;
    const double C17583 = C17147 * C472;
    const double C889 = C50741 * C879;
    const double C3055 = C2265 * C879;
    const double C8409 = C50793 * C879;
    const double C8985 = C50881 * C879;
    const double C17561 = C50793 * C879;
    const double C18137 = C17147 * C879;
    const double C25444 = C50918 * C879;
    const double C6495 = C50741 * C4609;
    const double C16393 = C50793 * C4609;
    const double C22203 = C50793 * C4609;
    const double C23160 = C17147 * C4609;
    const double C33192 = C50918 * C4609;
    const double C38582 = C2265 * C4609;
    const double C48326 = C50881 * C4609;
    const double C7404 = C50741 * C5519;
    const double C24076 = C17147 * C5519;
    const double C49229 = C50881 * C5519;
    const double C24078 = C50793 * C6492;
    const double C39956 = C50741 * C6492;
    const double C49231 = C50793 * C6492;
    const double C40563 = C50741 * C7400;
    const double C49943 = C49942 + C49940;
    const double C326 = C118 * C293;
    const double C8029 = C8003 * C293;
    const double C17181 = C17155 * C293;
    const double C154 = C117 * C124;
    const double C323 = C117 * C282;
    const double C623 = C117 * C283;
    const double C494 = C117 * C453;
    const double C732 = C117 * C454;
    const double C890 = C117 * C870;
    const double C50008 = C49922 + C50006;
    const double C50044 = ae * C50043;
    const double C50163 = C50155 + C50093;
    const double C50095 = C50094 + C50088;
    const double C50131 = ae * C50130;
    const double C4603 = (2 * C50046 + C49984 * C50130) / C49731;
    const double C50221 = ae * C50218;
    const double C50220 = C49843 * C50218;
    const double C50240 = C50218 * C50035;
    const double C50264 = C49984 * C50218;
    const double C50299 = 3 * C50218;
    const double C50282 = C50280 + C50281;
    const double C50369 = C50362 + C50270;
    const double C301 = (C49857 + C49866 * C49862 + C49925 + C49925 +
                         C49843 * (2 * ae * C49922 + C49843 * C49876)) /
                        C49738;
    const double C321 = C118 * C291;
    const double C2289 = C2274 * C291;
    const double C8206 = C8003 * C291;
    const double C17358 = C17155 * C291;
    const double C24696 = C24681 * C291;
    const double C888 = C118 * C874;
    const double C8408 = C8003 * C874;
    const double C17560 = C17155 * C874;
    const double C1204 = C118 * C1195;
    const double C8433 = C8003 * C1195;
    const double C17585 = C17155 * C1195;
    const double C166 = C161 + C152;
    const double C334 = C328 + C307;
    const double C505 = C499 + C478;
    const double C509 = C503 + C492;
    const double C5556 = C5549 + C1835;
    const double C50021 = C50020 + C50017;
    const double C1547 =
        (C49984 * C50012 + C50047 + C50047 +
         C49843 * (2 * ae * C49984 * C49927 + C49843 * C49984 * C49878)) /
        C49738;
    const double C5359 = C5350 + C1205;
    const double C5559 = C5553 + C5530;
    const double C50217 = C50204 + C50214;
    const double C50074 = ae * C50072;
    const double C50073 = C49843 * C50072;
    const double C50138 = C49984 * C50072;
    const double C50197 = 3 * C50072;
    const double C2687 = (C50032 + C50072 * C50035) / C49731;
    const double C2690 = (C49857 + C49866 * C50035 + C50127 + C50127 +
                          C49843 * (2 * ae * (C49894 + C49918 * C50035) +
                                    C49843 * (C49866 + C49874 * C50035))) /
                         C49738;
    const double C6074 = C118 * C4605;
    const double C10291 = C8003 * C4605;
    const double C19443 = C17155 * C4605;
    const double C40566 = C40565 + C7407;
    const double C49890 = C49882 + C49889;
    const double C50113 = C50109 + C50103;
    const double C5521 =
        (3 * (C49876 + C49888 * C50035) +
         C49984 * (2 * C50149 +
                   C49984 * (C49888 +
                             (C49886 + (C49880 * C49881 +
                                        C49847 * bs[8] * std::pow(C49841, 8)) *
                                           C49846 * C49862) *
                                 C50035))) /
        C49738;
    const double C6066 =
        (2 * ae * (2 * C49984 * C49937 + C49984 * (C49937 + C49959 * C50035)) +
         C49843 * (2 * C50149 +
                   C49984 * (C49888 +
                             (C49886 + (C49880 * C49881 +
                                        C49847 * bs[8] * std::pow(C49841, 8)) *
                                           C49846 * C49862) *
                                 C50035))) /
        C49738;
    const double C5717 = C50741 * C1199;
    const double C8434 = C50793 * C1199;
    const double C17586 = C50793 * C1199;
    const double C5542 = C50741 * C1830;
    const double C50174 = C49843 * C50170;
    const double C4607 =
        (2 * ae * (2 * C49984 * C49927 + C49984 * (C49927 + C49948 * C50035)) +
         C49843 * (2 * C50143 + C49984 * C50233)) /
        C49738;
    const double C5520 = (3 * (C50012 + C49878 * C50035) +
                          C49984 * (2 * C50143 + C49984 * C50233)) /
                         C49738;
    const double C6491 =
        (2 * ae *
             (3 * (C49927 + C49948 * C50035) +
              C49984 * (2 * C50248 + C49984 * (C49948 + C50160 * C50035))) +
         C49843 * (3 * C50233 +
                   C49984 * (2 * C50249 +
                             C49984 * (C50157 + C49850 *
                                                    (C49880 * C49881 +
                                                     C49847 * bs[8] *
                                                         std::pow(C49841, 8)) *
                                                    C49846 * C50035)))) /
        C49738;
    const double C7399 =
        (4 * (2 * C50143 + C49984 * C50233) +
         C49984 * (3 * C50233 +
                   C49984 * (2 * C50249 +
                             C49984 * (C50157 + C49850 *
                                                    (C49880 * C49881 +
                                                     C49847 * bs[8] *
                                                         std::pow(C49841, 8)) *
                                                    C49846 * C50035)))) /
        C49738;
    const double C50259 = C50258 + C50254;
    const double C50322 = C50308 + C50319;
    const double C50360 = C50359 + C50355;
    const double C50387 = C50381 + C50382;
    const double C50378 = C49843 * C50377;
    const double C49967 = C49947 + C49965;
    const double C49993 = C49990 + C49991;
    const double C1834 = C118 * C1825;
    const double C50117 = C49937 + C50114;
    const double C50134 = C50004 + C50133;
    const double C50153 = ae * C50151;
    const double C50182 = C50180 + C50172;
    const double C50237 = ae * C50235;
    const double C50275 = C49984 * C50235;
    const double C50329 = ae * C50323;
    const double C50327 = C49843 * C50323;
    const double C50347 = C50323 * C50035;
    const double C50367 = C49984 * C50323;
    const double C50389 = C50385 + C50386;
    const double C49966 = C49964 * ae;
    const double C125 = 5 * (3 * C49919 + C49850 * C49938) +
                        C49850 * (4 * C49938 + C49850 * C49964);
    const double C284 = 3 * C49919 + C49850 * C49938 + C49964 * C49847;
    const double C455 = 3 * C49919 + C49850 * C49938 + C49964 * C50035;
    const double C619 = C49843 * (4 * C49938 + C49850 * C49964);
    const double C728 = C49984 * (4 * C49938 + C49850 * C49964);
    const double C871 = C49984 * C49843 * C49964;
    const double C50332 = C50328 * ae;
    const double C20759 = 5 * (3 * C50066 + C49843 * C50216) +
                          C49843 * (4 * C50216 + C49843 * C50328);
    const double C20864 = 3 * C50066 + C49843 * C50216 + C50328 * C50035;
    const double C21197 = C49984 * (4 * C50216 + C49843 * C50328);
    const double C49755 = C49729 * C49747;
    const double C2269 =
        (ae * -2 * C49737) / (C49738 * 2 * C49731) +
        (((C49729 * ((-4 * C49741) / C49731 - (C49729 * C49747) / C49731) *
           ae) /
              C49731 +
          2 * ((C49746 * ae) / C49731 - C49737 / C49742)) *
         ae) /
            C49731 -
        C49747 / C49742;
    const double C2273 = (-C49747 / C49731) / (4 * C49738);
    const double C8002 = (-C49747 / C49731) / (2 * C49731);
    const double C17154 = (-C49747 / C49731) / (2 * C49731);
    const double C20007 = (-C49747 / C49731) / (4 * C49791);
    const double C24680 = (-C49747 / C49731) / (4 * C49738);
    const double C49796 = C49787 / C49731;
    const double C2308 = C2270 * C130;
    const double C2298 = C2270 * C129;
    const double C2295 = C2270 * C128;
    const double C2280 = C2270 * C127;
    const double C2276 = C2270 * C126;
    const double C2520 = C2270 * C291;
    const double C2515 = C2270 * C286;
    const double C2507 = C2270 * C290;
    const double C2503 = C2270 * C289;
    const double C2502 = C2270 * C288;
    const double C2498 = C2270 * C287;
    const double C2723 = C2270 * C462;
    const double C2718 = C2270 * C457;
    const double C2710 = C2270 * C461;
    const double C2706 = C2270 * C460;
    const double C2705 = C2270 * C459;
    const double C2701 = C2270 * C458;
    const double C2896 = C2270 * C285;
    const double C3060 = C2270 * C456;
    const double C3287 = C2270 * C874;
    const double C3277 = C2270 * C873;
    const double C3273 = C2270 * C872;
    const double C3710 = C2270 * C1197;
    const double C3707 = C2270 * C1196;
    const double C4616 = C2270 * C1828;
    const double C4613 = C2270 * C1827;
    const double C37675 = C2270 * C4605;
    const double C38587 = C2270 * C5516;
    const double C2307 = C2272 * C293;
    const double C2301 = C2272 * C285;
    const double C2292 = C2272 * C286;
    const double C2283 = C2272 * C287;
    const double C2277 = C2272 * C288;
    const double C2516 = C2272 * C291;
    const double C2501 = C2272 * C289;
    const double C2495 = C2272 * C290;
    const double C2722 = C2272 * C1195;
    const double C2719 = C2272 * C874;
    const double C2713 = C2272 * C1196;
    const double C2707 = C2272 * C1197;
    const double C2704 = C2272 * C872;
    const double C2698 = C2272 * C873;
    const double C4615 = C2272 * C4605;
    const double C8032 = C8001 * C131;
    const double C8026 = C8001 * C130;
    const double C8023 = C8001 * C129;
    const double C8014 = C8001 * C128;
    const double C8008 = C8001 * C127;
    const double C8005 = C8001 * C126;
    const double C8233 = C8001 * C285;
    const double C8228 = C8001 * C291;
    const double C8222 = C8001 * C290;
    const double C8219 = C8001 * C289;
    const double C8218 = C8001 * C288;
    const double C8215 = C8001 * C287;
    const double C8209 = C8001 * C286;
    const double C8438 = C8001 * C463;
    const double C8435 = C8001 * C456;
    const double C8430 = C8001 * C462;
    const double C8424 = C8001 * C461;
    const double C8421 = C8001 * C460;
    const double C8420 = C8001 * C459;
    const double C8417 = C8001 * C458;
    const double C8411 = C8001 * C457;
    const double C8615 = C8001 * C293;
    const double C8774 = C8001 * C464;
    const double C8984 = C8001 * C874;
    const double C8978 = C8001 * C873;
    const double C8975 = C8001 * C872;
    const double C9404 = C8001 * C1197;
    const double C9402 = C8001 * C1196;
    const double C9400 = C8001 * C1195;
    const double C10292 = C8001 * C1828;
    const double C10290 = C8001 * C1827;
    const double C10288 = C8001 * C1826;
    const double C15205 = C8001 * C4605;
    const double C16397 = C8001 * C5516;
    const double C16395 = C8001 * C5517;
    const double C49233 = C8001 * C7398;
    const double C17184 = C17153 * C131;
    const double C17178 = C17153 * C130;
    const double C17175 = C17153 * C129;
    const double C17166 = C17153 * C128;
    const double C17160 = C17153 * C127;
    const double C17157 = C17153 * C126;
    const double C17385 = C17153 * C285;
    const double C17380 = C17153 * C291;
    const double C17374 = C17153 * C290;
    const double C17371 = C17153 * C289;
    const double C17370 = C17153 * C288;
    const double C17367 = C17153 * C287;
    const double C17361 = C17153 * C286;
    const double C17590 = C17153 * C463;
    const double C17587 = C17153 * C456;
    const double C17582 = C17153 * C462;
    const double C17576 = C17153 * C461;
    const double C17573 = C17153 * C460;
    const double C17572 = C17153 * C459;
    const double C17569 = C17153 * C458;
    const double C17563 = C17153 * C457;
    const double C17767 = C17153 * C293;
    const double C17926 = C17153 * C464;
    const double C18136 = C17153 * C874;
    const double C18130 = C17153 * C873;
    const double C18127 = C17153 * C872;
    const double C18556 = C17153 * C1197;
    const double C18554 = C17153 * C1196;
    const double C18552 = C17153 * C1195;
    const double C19444 = C17153 * C1828;
    const double C19442 = C17153 * C1827;
    const double C19440 = C17153 * C1826;
    const double C22214 = C17153 * C5517;
    const double C22206 = C17153 * C5516;
    const double C22736 = C17153 * C4605;
    const double C24080 = C17153 * C7398;
    const double C337 = C331 + C318;
    const double C897 = C894 + C885;
    const double C5539 = C514 * C2267;
    const double C5528 = C514 * C50602;
    const double C11185 = C514 * C50909;
    const double C11180 = C514 * C50910;
    const double C34094 = C514 * C17149;
    const double C34089 = C514 * C17150;
    const double C39354 = C514 * C50597;
    const double C44788 = C514 * C50853;
    const double C44783 = C514 * C50602;
    const double C1087 =
        (2 * (2 * ae * C49903 + C49843 * C49857) + C50033 + C50033 +
         C49843 * (C49857 + C50030 + C50030 +
                   C49843 * (2 * ae * C49894 + C49843 * C49866))) /
        C49738;
    const double C1092 = C118 * C1083;
    const double C2504 = C2272 * C1083;
    const double C2500 = C2274 * C1083;
    const double C3552 = C2270 * C1083;
    const double C8220 = C8003 * C1083;
    const double C9252 = C8001 * C1083;
    const double C17372 = C17155 * C1083;
    const double C18404 = C17153 * C1083;
    const double C20013 = C20008 * C1083;
    const double C24898 = C24681 * C1083;
    const double C1553 = C118 * C1544;
    const double C2703 = C2274 * C1544;
    const double C3274 = C2272 * C1544;
    const double C4208 = C2270 * C1544;
    const double C8976 = C8003 * C1544;
    const double C9896 = C8001 * C1544;
    const double C18128 = C17155 * C1544;
    const double C19048 = C17153 * C1544;
    const double C25092 = C24681 * C1544;
    const double C6089 = C6086 + C6069;
    const double C6090 = C6087 + C6072;
    const double C7410 = C7409 + C7404;
    const double C49944 = ae * C49943;
    const double C292 = (2 * C49909 + C49850 * C49922 + C49843 * C49943 +
                         C49843 * C49938 * ae) /
                        C49731;
    const double C875 = (C49984 * C49943) / C49731;
    const double C162 = C154 + C155;
    const double C626 = C623 + C326;
    const double C504 = C494 + C495;
    const double C735 = C732 + C497;
    const double C50009 = C50008 + C50005;
    const double C1546 =
        (C49984 * C49876 + C50044 + C50044 +
         C49843 * (2 * ae * C49984 * C49937 + C49843 * C49984 * C49888)) /
        C49738;
    const double C50097 = ae * C50095;
    const double C50096 = C49843 * C50095;
    const double C50144 = C49984 * C50095;
    const double C50158 = 3 * C50095;
    const double C2691 =
        (C50012 + C49878 * C50035 + C50131 + C50131 +
         C49843 * (2 * ae * (C49927 + C49948 * C50035) +
                   C49843 * (C49878 + C49850 * C49886 * C50035))) /
        C49738;
    const double C4612 = C2272 * C4603;
    const double C6076 = C118 * C4603;
    const double C10289 = C8003 * C4603;
    const double C15203 = C8001 * C4603;
    const double C19441 = C17155 * C4603;
    const double C22743 = C17153 * C4603;
    const double C50307 = C50294 + C50221;
    const double C50222 = C50198 + C50220;
    const double C50243 = C50072 + C50240;
    const double C50269 = ae * C50264;
    const double C50383 = 2 * C50264;
    const double C50283 = ae * C50282;
    const double C6490 = (3 * C50126 + C49984 * C50282) / C49731;
    const double C322 = C50741 * C301;
    const double C2290 = C2266 * C301;
    const double C2891 = C2265 * C301;
    const double C8229 = C50881 * C301;
    const double C8207 = C50793 * C301;
    const double C17381 = C17147 * C301;
    const double C17359 = C50793 * C301;
    const double C24697 = C24673 * C301;
    const double C25280 = C50918 * C301;
    const double C332 = C320 + C321;
    const double C895 = C887 + C888;
    const double C5718 = C5716 + C1204;
    const double C171 = C166 + C153;
    const double C340 = C334 + C308;
    const double C511 = C505 + C479;
    const double C515 = C509 + C493;
    const double C50022 = ae * C50021;
    const double C1082 =
        (2 * C49913 + C49843 * C50021 + (C49910 + C49929 * C49847) * ae) /
        C49731;
    const double C1543 = (C49984 * C50021) / C49731;
    const double C2688 = (C50021 + C50095 * C50035) / C49731;
    const double C2696 = C2266 * C1547;
    const double C3281 = C2265 * C1547;
    const double C5353 = C50741 * C1547;
    const double C8982 = C50793 * C1547;
    const double C13770 = C50881 * C1547;
    const double C18134 = C50793 * C1547;
    const double C25085 = C24673 * C1547;
    const double C25661 = C50918 * C1547;
    const double C27778 = C17147 * C1547;
    const double C5362 = C5359 + C1205;
    const double C5567 = C5559 * C2267;
    const double C5565 = C5559 * C50602;
    const double C12957 = C5559 * C50910;
    const double C35865 = C5559 * C17150;
    const double C39355 = C5559 * C50597;
    const double C44790 = C5559 * C50853;
    const double C44784 = C5559 * C50602;
    const double C50075 = C50058 + C50073;
    const double C50140 = ae * C50138;
    const double C2708 = C2274 * C2687;
    const double C3709 = C2272 * C2687;
    const double C5354 = C118 * C2687;
    const double C9403 = C8003 * C2687;
    const double C15865 = C8001 * C2687;
    const double C18555 = C17155 * C2687;
    const double C22044 = C17153 * C2687;
    const double C25097 = C24681 * C2687;
    const double C38179 = C2270 * C2687;
    const double C6994 = C50741 * C2690;
    const double C15201 = C50793 * C2690;
    const double C22735 = C50793 * C2690;
    const double C23664 = C17147 * C2690;
    const double C31360 = C24673 * C2690;
    const double C32280 = C50918 * C2690;
    const double C36750 = C2266 * C2690;
    const double C37670 = C2265 * C2690;
    const double C48826 = C50881 * C2690;
    const double C6500 = C6494 + C6074;
    const double C40567 = C40566 + C40563;
    const double C139 =
        (5 * (3 * C49876 + C49850 * C49890) +
         C49850 *
             (4 * C49890 +
              C49850 * (3 * C49888 +
                        C49850 * (2 * C49850 * C49886 +
                                  C49850 * (C49886 + (C49880 * C49881 +
                                                      C49847 * bs[8] *
                                                          std::pow(C49841, 8)) *
                                                         C49846 * C49862))))) /
        C49738;
    const double C303 = (2 * ae * (3 * C49922 + C49850 * C49941) +
                         C49843 * (3 * C49876 + C49850 * C49890)) /
                        C49738;
    const double C473 = (2 * C49850 * C49866 + C49850 * C49876 +
                         C49890 * std::pow(zP - zQ, 2)) /
                        C49738;
    const double C474 = ((zP - zQ) * (3 * C49876 + C49850 * C49890)) / C49738;
    const double C475 =
        (3 * C49876 + C49850 * C49890 +
         (3 * C49888 +
          C49850 * (2 * C49850 * C49886 +
                    C49850 * (C49886 + (C49880 * C49881 +
                                        C49847 * bs[8] * std::pow(C49841, 8)) *
                                           C49846 * C49862))) *
             std::pow(zP - zQ, 2)) /
        C49738;
    const double C730 =
        ((zP - zQ) *
         (4 * C49890 +
          C49850 * (3 * C49888 +
                    C49850 * (2 * C49850 * C49886 +
                              C49850 * (C49886 +
                                        (C49880 * C49881 +
                                         C49847 * bs[8] * std::pow(C49841, 8)) *
                                            C49846 * C49862))))) /
        C49738;
    const double C880 =
        (2 * ae * C49984 * C49941 + C49843 * C49984 * C49890) / C49738;
    const double C1198 =
        (2 * ae * (C49941 + C49963 * C50035) +
         C49843 * (C49890 +
                   (2 * C49850 * C49886 +
                    C49850 * (C49886 + (C49880 * C49881 +
                                        C49847 * bs[8] * std::pow(C49841, 8)) *
                                           C49846 * C49862)) *
                       C50035)) /
        C49738;
    const double C1829 =
        (2 * C49984 * C49890 +
         C49984 * (C49890 +
                   (2 * C49850 * C49886 +
                    C49850 * (C49886 + (C49880 * C49881 +
                                        C49847 * bs[8] * std::pow(C49841, 8)) *
                                           C49846 * C49862)) *
                       C50035)) /
        C49738;
    const double C5562 = C5556 + C5542;
    const double C50179 = C50163 + C50174;
    const double C6077 = C50741 * C4607;
    const double C13988 = C50793 * C4607;
    const double C22211 = C50793 * C4607;
    const double C5536 = C50741 * C5520;
    const double C50326 = C49843 * C50322;
    const double C24072 =
        (2 * ae *
             (4 * (2 * C50261 + C49984 * C50349) +
              C49984 * (3 * C50349 +
                        C49984 * (2 * C50363 +
                                  C49984 * (C49932 + C49954 * C50035)))) +
         C49843 *
             (4 * C50387 +
              C49984 * (3 * C50350 +
                        C49984 * (2 * C50364 +
                                  C49984 * (C49886 + (C49880 * C49881 +
                                                      C49847 * bs[8] *
                                                          std::pow(C49841, 8)) *
                                                         C49846 * C50035))))) /
        C49738;
    const double C40560 =
        (5 * (3 * C50242 + C49984 * C50387) +
         C49984 *
             (4 * C50387 +
              C49984 * (3 * C50350 +
                        C49984 * (2 * C50364 +
                                  C49984 * (C49886 + (C49880 * C49881 +
                                                      C49847 * bs[8] *
                                                          std::pow(C49841, 8)) *
                                                         C49846 * C50035))))) /
        C49738;
    const double C50379 = C50369 + C50378;
    const double C49968 = C49843 * C49967;
    const double C621 =
        (2 * ae * (4 * C49941 + C49850 * C49967) +
         C49843 *
             (4 * C49890 +
              C49850 * (3 * C49888 +
                        C49850 * (2 * C49850 * C49886 +
                                  C49850 * (C49886 + (C49880 * C49881 +
                                                      C49847 * bs[8] *
                                                          std::pow(C49841, 8)) *
                                                         C49846 * C49862))))) /
        C49738;
    const double C881 =
        (2 * ae * C49984 * C49967 +
         C49843 * C49984 *
             (3 * C49888 +
              C49850 *
                  (2 * C49850 * C49886 +
                   C49850 * (C49886 + (C49880 * C49881 +
                                       C49847 * bs[8] * std::pow(C49841, 8)) *
                                          C49846 * C49862)))) /
        C49738;
    const double C132 = (5 * (3 * C49922 + C49850 * C49941) +
                         C49850 * (4 * C49941 + C49850 * C49967)) /
                        C49731;
    const double C465 =
        (3 * C49922 + C49850 * C49941 + C49967 * C50035) / C49731;
    const double C620 = (C49843 * (4 * C49941 + C49850 * C49967) +
                         (4 * C49938 + C49850 * C49964) * ae) /
                        C49731;
    const double C729 = (C49984 * (4 * C49941 + C49850 * C49967)) / C49731;
    const double C49996 = ae * C49993;
    const double C49995 = C49843 * C49993;
    const double C50040 = C49984 * C49993;
    const double C1194 = (C49943 + C49993 * C50035) / C49731;
    const double C50118 = C50117 + C50111;
    const double C50135 = ae * C50134;
    const double C6065 = (2 * C50043 + C49984 * C50134) / C49731;
    const double C50185 = ae * C50182;
    const double C50184 = C49843 * C50182;
    const double C50231 = C50182 * C50035;
    const double C50251 = C49984 * C50182;
    const double C50276 = C50274 + C50275;
    const double C50331 = C50300 + C50327;
    const double C50352 = C50218 + C50347;
    const double C50374 = ae * C50367;
    const double C50391 = ae * C50389;
    const double C50394 = C49984 * C50389;
    const double C49786 = C49755 / C49731;
    const double C2271 =
        (((-4 * C49741) / C49731 - C49755 / C49731) * ae) / C49742 +
        ((2 * ((0 * ae) / C49731 - C49741 / C49738) - C49755 / C49742) * ae) /
            C49731;
    const double C8000 =
        (((-4 * C49741) / C49731 - C49755 / C49731) * ae) / C49731;
    const double C17152 =
        -(((-4 * C49741) / C49731 - C49755 / C49731) * be) / C49731;
    const double C2297 = C2269 * C122;
    const double C2294 = C2269 * C121;
    const double C2279 = C2269 * C120;
    const double C2506 = C2269 * C280;
    const double C2497 = C2269 * C277;
    const double C2709 = C2269 * C451;
    const double C2700 = C2269 * C448;
    const double C2888 = C2269 * C276;
    const double C3052 = C2269 * C447;
    const double C3276 = C2269 * C868;
    const double C36753 = C2269 * C450;
    const double C36743 = C2269 * C449;
    const double C37259 = C2269 * C867;
    const double C37667 = C2269 * C1193;
    const double C38171 = C2269 * C1540;
    const double C38579 = C2269 * C1824;
    const double C2303 = C2273 * C282;
    const double C2288 = C2273 * C281;
    const double C2285 = C2273 * C280;
    const double C2512 = C2273 * C2482;
    const double C2491 = C2273 * C1078;
    const double C2715 = C2273 * C2685;
    const double C2694 = C2273 * C1539;
    const double C2892 = C2273 * C1077;
    const double C3056 = C2273 * C1538;
    const double C3282 = C2273 * C3264;
    const double C36749 = C2273 * C2684;
    const double C36747 = C2273 * C1540;
    const double C37263 = C2273 * C3263;
    const double C37671 = C2273 * C3699;
    const double C38175 = C2273 * C4197;
    const double C38583 = C2273 * C4600;
    const double C8028 = C8002 * C283;
    const double C8019 = C8002 * C275;
    const double C8016 = C8002 * C276;
    const double C8010 = C8002 * C277;
    const double C8230 = C8002 * C1077;
    const double C8224 = C8002 * C1078;
    const double C8211 = C8002 * C280;
    const double C8205 = C8002 * C281;
    const double C8432 = C8002 * C1191;
    const double C8426 = C8002 * C1192;
    const double C8413 = C8002 * C868;
    const double C8407 = C8002 * C869;
    const double C8612 = C8002 * C282;
    const double C8771 = C8002 * C870;
    const double C8986 = C8002 * C1538;
    const double C8980 = C8002 * C1539;
    const double C13771 = C8002 * C3264;
    const double C13987 = C8002 * C4599;
    const double C13979 = C8002 * C1193;
    const double C13975 = C8002 * C867;
    const double C14661 = C8002 * C2685;
    const double C14656 = C8002 * C1540;
    const double C15200 = C8002 * C2684;
    const double C15860 = C8002 * C3263;
    const double C16392 = C8002 * C4601;
    const double C48327 = C8002 * C4600;
    const double C48827 = C8002 * C3699;
    const double C49230 = C8002 * C6488;
    const double C17180 = C17154 * C283;
    const double C17171 = C17154 * C275;
    const double C17168 = C17154 * C276;
    const double C17162 = C17154 * C277;
    const double C17382 = C17154 * C1077;
    const double C17376 = C17154 * C1078;
    const double C17363 = C17154 * C280;
    const double C17357 = C17154 * C281;
    const double C17584 = C17154 * C1191;
    const double C17578 = C17154 * C1192;
    const double C17565 = C17154 * C868;
    const double C17559 = C17154 * C869;
    const double C17764 = C17154 * C282;
    const double C17923 = C17154 * C870;
    const double C18138 = C17154 * C1538;
    const double C18132 = C17154 * C1539;
    const double C22210 = C17154 * C4599;
    const double C22202 = C17154 * C4601;
    const double C22200 = C17154 * C1193;
    const double C22196 = C17154 * C867;
    const double C22740 = C17154 * C2685;
    const double C22734 = C17154 * C2684;
    const double C22730 = C17154 * C1540;
    const double C23161 = C17154 * C4600;
    const double C23665 = C17154 * C3699;
    const double C23661 = C17154 * C3263;
    const double C24077 = C17154 * C6488;
    const double C27779 = C17154 * C3264;
    const double C24710 = C24680 * C282;
    const double C24695 = C24680 * C281;
    const double C24692 = C24680 * C280;
    const double C24910 = C24680 * C2482;
    const double C24889 = C24680 * C1078;
    const double C25104 = C24680 * C2685;
    const double C25083 = C24680 * C1539;
    const double C25281 = C24680 * C1077;
    const double C25445 = C24680 * C1538;
    const double C25662 = C24680 * C3264;
    const double C31359 = C24680 * C2684;
    const double C31357 = C24680 * C1540;
    const double C31873 = C24680 * C3263;
    const double C32281 = C24680 * C3699;
    const double C32785 = C24680 * C4197;
    const double C33193 = C24680 * C4600;
    const double C49800 = C49796 - C49788;
    const double C343 = C337 + C319;
    const double C900 = C897 + C886;
    const double C5569 = C5564 + C5528;
    const double C44792 = C44782 + C44783;
    const double C6998 = C6990 + C1553;
    const double C6092 = C6089 * C2267;
    const double C11677 = C6089 * C50909;
    const double C34586 = C6089 * C17149;
    const double C39686 = C6089 * C50597;
    const double C45284 = C6089 * C50853;
    const double C6093 = C6090 * C2267;
    const double C12074 = C6090 * C50909;
    const double C34982 = C6090 * C17149;
    const double C39687 = C6090 * C50597;
    const double C45286 = C6090 * C50853;
    const double C7411 = C7410 * C2267;
    const double C39352 = C7410 * C50597;
    const double C46566 = C7410 * C50853;
    const double C302 =
        (2 * C49850 * C49866 + C49850 * C49876 + C49944 + C49944 +
         C49843 * (2 * ae * C49941 + C49843 * C49890)) /
        C49738;
    const double C324 = C118 * C292;
    const double C2304 = C2274 * C292;
    const double C2895 = C2272 * C292;
    const double C8236 = C8001 * C292;
    const double C8234 = C8003 * C292;
    const double C17388 = C17153 * C292;
    const double C17386 = C17155 * C292;
    const double C24711 = C24681 * C292;
    const double C891 = C118 * C875;
    const double C3059 = C2272 * C875;
    const double C8436 = C8003 * C875;
    const double C8990 = C8001 * C875;
    const double C17588 = C17155 * C875;
    const double C18142 = C17153 * C875;
    const double C167 = C162 + C155;
    const double C627 = C626 + C326;
    const double C510 = C504 + C495;
    const double C736 = C735 + C497;
    const double C50010 = ae * C50009;
    const double C1081 =
        (2 * C49924 + C49843 * C50009 + (C49919 + C49934 * C49847) * ae) /
        C49731;
    const double C1542 = (C49984 * C50009) / C49731;
    const double C3057 = C2266 * C1546;
    const double C8988 = C50793 * C1546;
    const double C11026 = C50741 * C1546;
    const double C18140 = C50793 * C1546;
    const double C25446 = C24673 * C1546;
    const double C50098 = C50081 + C50096;
    const double C50146 = ae * C50144;
    const double C2717 = C2266 * C2691;
    const double C5357 = C50741 * C2691;
    const double C14662 = C50793 * C2691;
    const double C22741 = C50793 * C2691;
    const double C25106 = C24673 * C2691;
    const double C6085 = C6075 + C6076;
    const double C50313 = C50307 + C50221;
    const double C50223 = C50222 + C50211;
    const double C50245 = ae * C50243;
    const double C4604 = (2 * C50138 + C49984 * C50243) / C49731;
    const double C4608 =
        (2 * C50137 + C49984 * C50242 + C50283 + C50283 +
         C49843 *
             (2 * ae * (2 * C50261 + C49984 * (C49918 + C49932 * C50035)) +
              C49843 * (2 * C50262 + C49984 * (C49874 + C49886 * C50035)))) /
        C49738;
    const double C6499 = C118 * C6490;
    const double C16396 = C8003 * C6490;
    const double C22207 = C17155 * C6490;
    const double C23165 = C17153 * C6490;
    const double C38586 = C2272 * C6490;
    const double C48331 = C8001 * C6490;
    const double C338 = C332 + C321;
    const double C898 = C895 + C888;
    const double C5719 = C5718 + C1204;
    const double C5868 = C511 * C50602;
    const double C11184 = C511 * C7999;
    const double C11481 = C511 * C50910;
    const double C34093 = C511 * C17151;
    const double C34390 = C511 * C17150;
    const double C45087 = C511 * C50602;
    const double C5540 = C515 * C50602;
    const double C5869 = C515 * C2267;
    const double C11186 = C515 * C50910;
    const double C11179 = C515 * C7999;
    const double C34095 = C515 * C17150;
    const double C34088 = C515 * C17151;
    const double C39554 = C515 * C50597;
    const double C44789 = C515 * C50602;
    const double C45088 = C515 * C50853;
    const double C1086 =
        (2 * (2 * ae * C49909 + C49843 * C50012) + C50022 + C50022 +
         C49843 * (C50012 + C50019 + C50019 +
                   C49843 * (2 * ae * C49927 + C49843 * C49878))) /
        C49738;
    const double C1091 = C118 * C1082;
    const double C2510 = C2272 * C1082;
    const double C2492 = C2274 * C1082;
    const double C3549 = C2270 * C1082;
    const double C8225 = C8003 * C1082;
    const double C9250 = C8001 * C1082;
    const double C17377 = C17155 * C1082;
    const double C18402 = C17153 * C1082;
    const double C20014 = C20008 * C1082;
    const double C24890 = C24681 * C1082;
    const double C1552 = C118 * C1543;
    const double C2695 = C2274 * C1543;
    const double C3280 = C2272 * C1543;
    const double C4205 = C2270 * C1543;
    const double C8981 = C8003 * C1543;
    const double C9894 = C8001 * C1543;
    const double C18133 = C17155 * C1543;
    const double C19046 = C17153 * C1543;
    const double C25084 = C24681 * C1543;
    const double C2716 = C2274 * C2688;
    const double C3706 = C2272 * C2688;
    const double C5356 = C118 * C2688;
    const double C9401 = C8003 * C2688;
    const double C15863 = C8001 * C2688;
    const double C18553 = C17155 * C2688;
    const double C22047 = C17153 * C2688;
    const double C25105 = C24681 * C2688;
    const double C5365 = C5362 + C5351;
    const double C7402 = C5565 + C5566;
    const double C46565 = C44784 + C44785;
    const double C50076 = C50075 + C50069;
    const double C3269 =
        (2 * (2 * ae * C49984 * C49894 + C49843 * C50137) + C50140 + C50140 +
         C49843 *
             (C50137 + C50141 + C50141 +
              C49843 * (2 * ae * C49984 * C49918 + C49843 * C49984 * C49874))) /
        C49738;
    const double C6999 = C6993 + C5354;
    const double C6501 = C6500 + C6074;
    const double C40568 = C40567 * C50597;
    const double C624 = C50741 * C303;
    const double C8030 = C50793 * C303;
    const double C17182 = C50793 * C303;
    const double C496 = C50741 * C473;
    const double C733 = C50741 * C474;
    const double C892 = C50741 * C880;
    const double C8772 = C50793 * C880;
    const double C17924 = C50793 * C880;
    const double C5568 = C5562 * C50602;
    const double C12958 = C5562 * C7999;
    const double C35866 = C5562 * C17151;
    const double C39555 = C5562 * C50597;
    const double C44791 = C5562 * C50602;
    const double C5561 = C5555 + C5536;
    const double C49969 = C49968 + C49966;
    const double C157 = C118 * C132;
    const double C498 = C118 * C465;
    const double C625 = C118 * C620;
    const double C8031 = C8003 * C620;
    const double C17183 = C17155 * C620;
    const double C734 = C118 * C729;
    const double C49997 = C49941 + C49995;
    const double C50041 = ae * C50040;
    const double C1203 = C118 * C1194;
    const double C8437 = C8003 * C1194;
    const double C17589 = C17155 * C1194;
    const double C50120 = ae * C50118;
    const double C50119 = C49843 * C50118;
    const double C50150 = C49984 * C50118;
    const double C2689 = (C50009 + C50118 * C50035) / C49731;
    const double C2692 =
        (C49876 + C49888 * C50035 + C50135 + C50135 +
         C49843 * (2 * ae * (C49937 + C49959 * C50035) +
                   C49843 * (C49888 +
                             (C49886 + (C49880 * C49881 +
                                        C49847 * bs[8] * std::pow(C49841, 8)) *
                                           C49846 * C49862) *
                                 C50035))) /
        C49738;
    const double C6082 = C118 * C6065;
    const double C10287 = C8003 * C6065;
    const double C19439 = C17155 * C6065;
    const double C50186 = C50159 + C50184;
    const double C50234 = C50095 + C50231;
    const double C50256 = ae * C50251;
    const double C50277 = ae * C50276;
    const double C6489 = (3 * C50130 + C49984 * C50276) / C49731;
    const double C50333 = C50331 + C50316;
    const double C50357 = ae * C50352;
    const double C50384 = C49984 * C50352;
    const double C50395 = C50393 + C50394;
    const double C49799 = C49795 - C49786;
    const double C2300 = C2271 * C275;
    const double C2291 = C2271 * C276;
    const double C2282 = C2271 * C277;
    const double C2509 = C2271 * C1078;
    const double C2494 = C2271 * C280;
    const double C2712 = C2271 * C1192;
    const double C2697 = C2271 * C868;
    const double C2890 = C2271 * C281;
    const double C3054 = C2271 * C869;
    const double C3279 = C2271 * C1539;
    const double C36751 = C2271 * C1193;
    const double C36745 = C2271 * C867;
    const double C37261 = C2271 * C1540;
    const double C37669 = C2271 * C2684;
    const double C38173 = C2271 * C3263;
    const double C38581 = C2271 * C4601;
    const double C8025 = C8000 * C123;
    const double C8022 = C8000 * C122;
    const double C8013 = C8000 * C121;
    const double C8007 = C8000 * C120;
    const double C8227 = C8000 * C281;
    const double C8221 = C8000 * C280;
    const double C8214 = C8000 * C277;
    const double C8208 = C8000 * C276;
    const double C8429 = C8000 * C452;
    const double C8423 = C8000 * C451;
    const double C8416 = C8000 * C448;
    const double C8410 = C8000 * C447;
    const double C8610 = C8000 * C275;
    const double C8769 = C8000 * C446;
    const double C8983 = C8000 * C869;
    const double C8977 = C8000 * C868;
    const double C13769 = C8000 * C1539;
    const double C13985 = C8000 * C1823;
    const double C13981 = C8000 * C450;
    const double C13973 = C8000 * C449;
    const double C14659 = C8000 * C1192;
    const double C14654 = C8000 * C867;
    const double C15198 = C8000 * C1193;
    const double C15858 = C8000 * C1540;
    const double C16390 = C8000 * C1824;
    const double C48325 = C8000 * C4601;
    const double C48825 = C8000 * C2684;
    const double C49228 = C8000 * C5513;
    const double C17177 = C17152 * C123;
    const double C17174 = C17152 * C122;
    const double C17165 = C17152 * C121;
    const double C17159 = C17152 * C120;
    const double C17379 = C17152 * C281;
    const double C17373 = C17152 * C280;
    const double C17366 = C17152 * C277;
    const double C17360 = C17152 * C276;
    const double C17581 = C17152 * C452;
    const double C17575 = C17152 * C451;
    const double C17568 = C17152 * C448;
    const double C17562 = C17152 * C447;
    const double C17762 = C17152 * C275;
    const double C17921 = C17152 * C446;
    const double C18135 = C17152 * C869;
    const double C18129 = C17152 * C868;
    const double C22208 = C17152 * C1823;
    const double C22204 = C17152 * C1824;
    const double C22198 = C17152 * C450;
    const double C22194 = C17152 * C449;
    const double C22738 = C17152 * C1192;
    const double C22732 = C17152 * C1193;
    const double C22728 = C17152 * C867;
    const double C23159 = C17152 * C4601;
    const double C23663 = C17152 * C2684;
    const double C23659 = C17152 * C1540;
    const double C24075 = C17152 * C5513;
    const double C27777 = C17152 * C1539;
    const double C2315 = C2297 + C2298;
    const double C2314 = C2294 + C2295;
    const double C2309 = C2279 + C2280;
    const double C2524 = C2506 + C2507;
    const double C2523 = C2497 + C2498;
    const double C2727 = C2709 + C2710;
    const double C2726 = C2700 + C2701;
    const double C2897 = C2888 + C2515;
    const double C3061 = C3052 + C2718;
    const double C3288 = C3276 + C3277;
    const double C36760 = C36753 + C2706;
    const double C36755 = C36743 + C2705;
    const double C37265 = C37259 + C3273;
    const double C37676 = C37667 + C3710;
    const double C38180 = C38171 + C4208;
    const double C38588 = C38579 + C4616;
    const double C2312 = C2288 + C2289;
    const double C2311 = C2285 + C2286;
    const double C36758 = C36749 + C2708;
    const double C36757 = C36747 + C2703;
    const double C8040 = C8028 + C8029;
    const double C8037 = C8019 + C8020;
    const double C8036 = C8016 + C8017;
    const double C8034 = C8010 + C8011;
    const double C8239 = C8211 + C8212;
    const double C8237 = C8205 + C8206;
    const double C8446 = C8432 + C8433;
    const double C8444 = C8426 + C8427;
    const double C8441 = C8413 + C8414;
    const double C8439 = C8407 + C8408;
    const double C13994 = C13987 + C10289;
    const double C13991 = C13979 + C8422;
    const double C13990 = C13975 + C8419;
    const double C14665 = C14656 + C8976;
    const double C15207 = C15200 + C9403;
    const double C16399 = C16392 + C10291;
    const double C17192 = C17180 + C17181;
    const double C17189 = C17171 + C17172;
    const double C17188 = C17168 + C17169;
    const double C17186 = C17162 + C17163;
    const double C17391 = C17363 + C17364;
    const double C17389 = C17357 + C17358;
    const double C17598 = C17584 + C17585;
    const double C17596 = C17578 + C17579;
    const double C17593 = C17565 + C17566;
    const double C17591 = C17559 + C17560;
    const double C22222 = C22210 + C19441;
    const double C22219 = C22202 + C19443;
    const double C22218 = C22200 + C17574;
    const double C22216 = C22196 + C17571;
    const double C22747 = C22734 + C18555;
    const double C22745 = C22730 + C18128;
    const double C24719 = C24695 + C24696;
    const double C24718 = C24692 + C24693;
    const double C31368 = C31359 + C25097;
    const double C31367 = C31357 + C25092;
    const double C20002 =
        ((((0 - (C49729 * C49781) / C49731) * ae) / C49731 - (0 * be) / C49742 +
          C49737 / C49731) /
             C49782 -
         ((C49729 * C49805 + 0) * be) / C49731) /
            C49782 +
        ((C49729 * (C49805 / C49782 -
                    ((C49729 * C49800 + C50881) * be) / C49731 + C49801) +
          C50917) *
         ae) /
            C49731 +
        C49800 / C49782 - ((C49729 * C49801 + C50793) * be) / C49731;
    const double C20004 =
        (C49805 / C49782 - ((C49729 * C49800 + C50881) * be) / C49731 +
         C49801) /
            C49782 +
        ((C49729 *
              (C49800 / C49782 - ((C49729 * C49801 + C50793) * be) / C49731) +
          C50918) *
         ae) /
            C49731 +
        2 * (C49801 / C49782 - (0 * be) / C49731);
    const double C20006 =
        (C49800 / C49782 - ((C49729 * C49801 + C50793) * be) / C49731) /
            C49782 +
        ((C49729 * (C49801 / C49782 - (0 * be) / C49731) + C24673) * ae) /
            C49731;
    const double C24677 =
        C49805 / C49782 - ((C49729 * C49800 + C50881) * be) / C49731 + C49801;
    const double C24679 =
        C49800 / C49782 - ((C49729 * C49801 + C50793) * be) / C49731;
    const double C6078 = C900 * C2267;
    const double C6070 = C900 * C50602;
    const double C11680 = C900 * C50909;
    const double C11678 = C900 * C50910;
    const double C34589 = C900 * C17149;
    const double C34587 = C900 * C17150;
    const double C39689 = C900 * C50597;
    const double C45288 = C900 * C50853;
    const double C45285 = C900 * C50602;
    const double C7000 = C6998 + C1553;
    const double C325 = C50741 * C302;
    const double C2305 = C2266 * C302;
    const double C8613 = C50793 * C302;
    const double C17765 = C50793 * C302;
    const double C24712 = C24673 * C302;
    const double C333 = C323 + C324;
    const double C2317 = C2303 + C2304;
    const double C8617 = C8612 + C8234;
    const double C17769 = C17764 + C17386;
    const double C24724 = C24710 + C24711;
    const double C896 = C890 + C891;
    const double C8776 = C8771 + C8436;
    const double C17928 = C17923 + C17588;
    const double C172 = C167 + C156;
    const double C1085 =
        (2 * (2 * ae * C49922 + C49843 * C49876) + C50010 + C50010 +
         C49843 * (C49876 + C50007 + C50007 +
                   C49843 * (2 * ae * C49937 + C49843 * C49888))) /
        C49738;
    const double C1090 = C118 * C1081;
    const double C2519 = C2272 * C1081;
    const double C2517 = C2274 * C1081;
    const double C8231 = C8003 * C1081;
    const double C9248 = C8001 * C1081;
    const double C17383 = C17155 * C1081;
    const double C18400 = C17153 * C1081;
    const double C20021 = C20008 * C1081;
    const double C24915 = C24681 * C1081;
    const double C1551 = C118 * C1542;
    const double C2720 = C2274 * C1542;
    const double C3286 = C2272 * C1542;
    const double C8987 = C8003 * C1542;
    const double C9892 = C8001 * C1542;
    const double C18139 = C17155 * C1542;
    const double C19044 = C17153 * C1542;
    const double C25109 = C24681 * C1542;
    const double C50099 = C50098 + C50092;
    const double C3270 =
        (2 * (2 * ae * C49984 * C49927 + C49843 * C50143) + C50146 + C50146 +
         C49843 * (C50143 + C50147 + C50147 +
                   C49843 * (2 * ae * C49984 * C49948 +
                             C49843 * C49984 * C49850 * C49886))) /
        C49738;
    const double C6088 = C6085 + C6076;
    const double C50330 = C50313 + C50326;
    const double C50225 = ae * C50223;
    const double C50224 = C49843 * C50223;
    const double C50263 = C49984 * C50223;
    const double C50298 = 4 * C50223;
    const double C3703 =
        (2 * (2 * ae * (C49894 + C49918 * C50035) + C49843 * C50242) + C50245 +
         C50245 +
         C49843 * (C50242 + C50246 + C50246 +
                   C49843 * (2 * ae * (C49918 + C49932 * C50035) +
                             C49843 * (C49874 + C49886 * C50035)))) /
        C49738;
    const double C4614 = C2274 * C4604;
    const double C6997 = C118 * C4604;
    const double C15204 = C8003 * C4604;
    const double C22737 = C17155 * C4604;
    const double C23668 = C17153 * C4604;
    const double C26964 = C24681 * C4604;
    const double C37674 = C2272 * C4604;
    const double C48830 = C8001 * C4604;
    const double C23162 = C50793 * C4608;
    const double C33194 = C24673 * C4608;
    const double C38584 = C2266 * C4608;
    const double C40291 = C50741 * C4608;
    const double C48328 = C50793 * C4608;
    const double C39958 = C39955 + C6499;
    const double C49236 = C49230 + C16396;
    const double C24083 = C24077 + C22207;
    const double C344 = C338 + C322;
    const double C901 = C898 + C889;
    const double C5720 = C5719 + C5717;
    const double C5550 = C5540 + C5539;
    const double C44793 = C44789 + C44788;
    const double C2511 = C2265 * C1086;
    const double C2493 = C2266 * C1086;
    const double C8226 = C50793 * C1086;
    const double C17378 = C50793 * C1086;
    const double C24909 = C50918 * C1086;
    const double C24891 = C24673 * C1086;
    const double C2521 = C2491 + C2492;
    const double C8242 = C8224 + C8225;
    const double C17394 = C17376 + C17377;
    const double C24919 = C24889 + C24890;
    const double C5360 = C5352 + C1552;
    const double C2724 = C2694 + C2695;
    const double C8992 = C8980 + C8981;
    const double C18144 = C18132 + C18133;
    const double C25113 = C25083 + C25084;
    const double C2729 = C2715 + C2716;
    const double C5361 = C5355 + C5356;
    const double C14667 = C14661 + C9401;
    const double C22749 = C22740 + C18553;
    const double C25118 = C25104 + C25105;
    const double C6080 = C5365 * C2267;
    const double C6073 = C5365 * C50602;
    const double C12075 = C5365 * C50910;
    const double C34983 = C5365 * C17150;
    const double C39690 = C5365 * C50597;
    const double C45290 = C5365 * C50853;
    const double C45287 = C5365 * C50602;
    const double C50077 = ae * C50076;
    const double C2484 =
        (3 * C50032 + C49843 * C50076 + (2 * C50026 + C49843 * C50066) * ae) /
        C49731;
    const double C3266 = (C49984 * C50076) / C49731;
    const double C3701 = (C50076 + C50223 * C50035) / C49731;
    const double C15861 = C50793 * C3269;
    const double C23662 = C50793 * C3269;
    const double C31874 = C24673 * C3269;
    const double C32784 = C50918 * C3269;
    const double C37264 = C2266 * C3269;
    const double C38174 = C2265 * C3269;
    const double C7001 = C6999 + C5354;
    const double C6502 = C6501 + C6495;
    const double C628 = C627 + C624;
    const double C516 = C510 + C496;
    const double C737 = C736 + C733;
    const double C7405 = C5561 * C50602;
    const double C39356 = C5561 * C50597;
    const double C46567 = C5561 * C50602;
    const double C49970 = ae * C49969;
    const double C294 = (3 * C49922 + C49850 * C49941 + C49843 * C49969 +
                         C49843 * C49964 * ae) /
                        C49731;
    const double C876 = (C49984 * C49969) / C49731;
    const double C49998 = C49997 + C49994;
    const double C1545 =
        (C49984 * C49890 + C50041 + C50041 +
         C49843 *
             (2 * ae * C49984 * C49963 +
              C49843 * C49984 *
                  (2 * C49850 * C49886 +
                   C49850 * (C49886 + (C49880 * C49881 +
                                       C49847 * bs[8] * std::pow(C49841, 8)) *
                                          C49846 * C49862)))) /
        C49738;
    const double C50121 = C50104 + C50119;
    const double C50152 = ae * C50150;
    const double C2721 = C2274 * C2689;
    const double C5358 = C118 * C2689;
    const double C9399 = C8003 * C2689;
    const double C18551 = C17155 * C2689;
    const double C25110 = C24681 * C2689;
    const double C50187 = C50186 + C50176;
    const double C50236 = ae * C50234;
    const double C4602 = (2 * C50144 + C49984 * C50234) / C49731;
    const double C4606 =
        (2 * C50143 + C49984 * C50233 + C50277 + C50277 +
         C49843 * (2 * ae * (2 * C50248 + C49984 * (C49948 + C50160 * C50035)) +
                   C49843 * (2 * C50249 +
                             C49984 * (C50157 + C49850 *
                                                    (C49880 * C49881 +
                                                     C49847 * bs[8] *
                                                         std::pow(C49841, 8)) *
                                                    C49846 * C50035)))) /
        C49738;
    const double C6498 = C118 * C6489;
    const double C16394 = C8003 * C6489;
    const double C22213 = C17155 * C6489;
    const double C50335 = ae * C50333;
    const double C50334 = C49843 * C50333;
    const double C50346 = C50333 * C50035;
    const double C50366 = C49984 * C50333;
    const double C50388 = C50383 + C50384;
    const double C50396 = ae * C50395;
    const double C24071 = (4 * C50282 + C49984 * C50395) / C49731;
    const double C49803 = C49799 * ae;
    const double C2316 = C2300 + C2301;
    const double C2313 = C2291 + C2292;
    const double C2310 = C2282 + C2283;
    const double C2525 = C2509 + C2510;
    const double C2522 = C2494 + C2495;
    const double C2728 = C2712 + C2713;
    const double C2725 = C2697 + C2698;
    const double C2898 = C2890 + C2516;
    const double C3062 = C3054 + C2719;
    const double C3289 = C3279 + C3280;
    const double C36759 = C36751 + C2707;
    const double C36756 = C36745 + C2704;
    const double C37266 = C37261 + C3274;
    const double C37677 = C37669 + C3709;
    const double C38589 = C38581 + C4615;
    const double C8039 = C8025 + C8026;
    const double C8038 = C8022 + C8023;
    const double C8035 = C8013 + C8014;
    const double C8033 = C8007 + C8008;
    const double C8243 = C8227 + C8228;
    const double C8241 = C8221 + C8222;
    const double C8240 = C8214 + C8215;
    const double C8238 = C8208 + C8209;
    const double C8445 = C8429 + C8430;
    const double C8443 = C8423 + C8424;
    const double C8442 = C8416 + C8417;
    const double C8440 = C8410 + C8411;
    const double C8616 = C8610 + C8233;
    const double C8775 = C8769 + C8435;
    const double C8993 = C8983 + C8984;
    const double C8991 = C8977 + C8978;
    const double C13773 = C13769 + C9894;
    const double C13993 = C13985 + C10290;
    const double C13992 = C13981 + C8421;
    const double C13989 = C13973 + C8420;
    const double C14666 = C14659 + C9402;
    const double C14664 = C14654 + C8975;
    const double C15206 = C15198 + C9404;
    const double C15866 = C15858 + C9896;
    const double C16398 = C16390 + C10292;
    const double C48332 = C48325 + C15205;
    const double C48831 = C48825 + C15865;
    const double C49235 = C49228 + C16397;
    const double C17191 = C17177 + C17178;
    const double C17190 = C17174 + C17175;
    const double C17187 = C17165 + C17166;
    const double C17185 = C17159 + C17160;
    const double C17395 = C17379 + C17380;
    const double C17393 = C17373 + C17374;
    const double C17392 = C17366 + C17367;
    const double C17390 = C17360 + C17361;
    const double C17597 = C17581 + C17582;
    const double C17595 = C17575 + C17576;
    const double C17594 = C17568 + C17569;
    const double C17592 = C17562 + C17563;
    const double C17768 = C17762 + C17385;
    const double C17927 = C17921 + C17587;
    const double C18145 = C18135 + C18136;
    const double C18143 = C18129 + C18130;
    const double C22221 = C22208 + C19442;
    const double C22220 = C22204 + C19444;
    const double C22217 = C22198 + C17573;
    const double C22215 = C22194 + C17572;
    const double C22748 = C22738 + C18554;
    const double C22746 = C22732 + C18556;
    const double C22744 = C22728 + C18127;
    const double C23166 = C23159 + C22736;
    const double C23671 = C23663 + C22044;
    const double C23669 = C23659 + C19048;
    const double C24082 = C24075 + C22206;
    const double C27781 = C27777 + C19046;
    const double C2324 = C2315 + C2298;
    const double C2323 = C2314 + C2295;
    const double C2318 = C2309 + C2280;
    const double C2530 = C2524 + C2507;
    const double C2529 = C2523 + C2498;
    const double C2733 = C2727 + C2710;
    const double C2732 = C2726 + C2701;
    const double C2900 = C2897 + C2515;
    const double C3064 = C3061 + C2718;
    const double C3291 = C3288 + C3277;
    const double C36766 = C36760 + C2706;
    const double C36761 = C36755 + C2705;
    const double C37268 = C37265 + C3273;
    const double C37679 = C37676 + C3710;
    const double C38183 = C38180 + C4208;
    const double C38591 = C38588 + C4616;
    const double C2321 = C2312 + C2289;
    const double C2320 = C2311 + C2286;
    const double C36764 = C36758 + C2708;
    const double C36763 = C36757 + C2703;
    const double C8048 = C8040 + C8029;
    const double C8045 = C8037 + C8020;
    const double C8044 = C8036 + C8017;
    const double C8042 = C8034 + C8011;
    const double C8247 = C8239 + C8212;
    const double C8245 = C8237 + C8206;
    const double C8454 = C8446 + C8433;
    const double C8452 = C8444 + C8427;
    const double C8449 = C8441 + C8414;
    const double C8447 = C8439 + C8408;
    const double C14000 = C13994 + C10289;
    const double C13997 = C13991 + C8422;
    const double C13996 = C13990 + C8419;
    const double C14669 = C14665 + C8976;
    const double C15209 = C15207 + C9403;
    const double C16401 = C16399 + C10291;
    const double C17200 = C17192 + C17181;
    const double C17197 = C17189 + C17172;
    const double C17196 = C17188 + C17169;
    const double C17194 = C17186 + C17163;
    const double C17399 = C17391 + C17364;
    const double C17397 = C17389 + C17358;
    const double C17606 = C17598 + C17585;
    const double C17604 = C17596 + C17579;
    const double C17601 = C17593 + C17566;
    const double C17599 = C17591 + C17560;
    const double C22231 = C22222 + C19441;
    const double C22228 = C22219 + C19443;
    const double C22227 = C22218 + C17574;
    const double C22225 = C22216 + C17571;
    const double C22753 = C22747 + C18555;
    const double C22751 = C22745 + C18128;
    const double C24728 = C24719 + C24696;
    const double C24727 = C24718 + C24693;
    const double C31374 = C31368 + C25097;
    const double C31373 = C31367 + C25092;
    const double C20025 = C20002 * C129;
    const double C20018 = C20002 * C128;
    const double C20017 = C20002 * C127;
    const double C20010 = C20002 * C126;
    const double C20139 = C20002 * C290;
    const double C20132 = C20002 * C287;
    const double C20128 = C20002 * C289;
    const double C20127 = C20002 * C288;
    const double C20253 = C20002 * C461;
    const double C20246 = C20002 * C458;
    const double C20242 = C20002 * C460;
    const double C20241 = C20002 * C459;
    const double C20355 = C20002 * C286;
    const double C20457 = C20002 * C457;
    const double C20595 = C20002 * C873;
    const double C20588 = C20002 * C872;
    const double C20766 = C20002 * C1083;
    const double C20871 = C20002 * C1197;
    const double C21204 = C20002 * C1544;
    const double C21473 = C20002 * C1828;
    const double C20024 = C20004 * C285;
    const double C20019 = C20004 * C286;
    const double C20016 = C20004 * C287;
    const double C20011 = C20004 * C288;
    const double C20138 = C20004 * C1082;
    const double C20133 = C20004 * C290;
    const double C20129 = C20004 * C1083;
    const double C20126 = C20004 * C289;
    const double C20252 = C20004 * C1196;
    const double C20247 = C20004 * C873;
    const double C20243 = C20004 * C1197;
    const double C20240 = C20004 * C872;
    const double C20354 = C20004 * C291;
    const double C20456 = C20004 * C874;
    const double C20594 = C20004 * C1543;
    const double C20589 = C20004 * C1544;
    const double C20870 = C20004 * C2687;
    const double C21472 = C20004 * C4605;
    const double C20023 = C20006 * C292;
    const double C20020 = C20006 * C291;
    const double C20015 = C20006 * C290;
    const double C20012 = C20006 * C289;
    const double C20134 = C20006 * C1082;
    const double C20125 = C20006 * C1083;
    const double C20251 = C20006 * C2688;
    const double C20248 = C20006 * C1543;
    const double C20244 = C20006 * C2687;
    const double C20239 = C20006 * C1544;
    const double C20353 = C20006 * C1081;
    const double C20455 = C20006 * C1542;
    const double C21471 = C20006 * C4604;
    const double C24715 = C24677 * C130;
    const double C24705 = C24677 * C129;
    const double C24702 = C24677 * C128;
    const double C24687 = C24677 * C127;
    const double C24683 = C24677 * C126;
    const double C24918 = C24677 * C291;
    const double C24913 = C24677 * C286;
    const double C24905 = C24677 * C290;
    const double C24901 = C24677 * C289;
    const double C24900 = C24677 * C288;
    const double C24896 = C24677 * C287;
    const double C25112 = C24677 * C462;
    const double C25107 = C24677 * C457;
    const double C25099 = C24677 * C461;
    const double C25095 = C24677 * C460;
    const double C25094 = C24677 * C459;
    const double C25090 = C24677 * C458;
    const double C25285 = C24677 * C285;
    const double C25449 = C24677 * C456;
    const double C25667 = C24677 * C874;
    const double C25657 = C24677 * C873;
    const double C25653 = C24677 * C872;
    const double C25926 = C24677 * C1083;
    const double C25923 = C24677 * C1082;
    const double C26078 = C24677 * C1197;
    const double C26075 = C24677 * C1196;
    const double C26570 = C24677 * C1544;
    const double C26567 = C24677 * C1543;
    const double C26966 = C24677 * C1828;
    const double C26963 = C24677 * C1827;
    const double C32285 = C24677 * C4605;
    const double C32789 = C24677 * C2687;
    const double C33197 = C24677 * C5516;
    const double C24714 = C24679 * C293;
    const double C24708 = C24679 * C285;
    const double C24699 = C24679 * C286;
    const double C24690 = C24679 * C287;
    const double C24684 = C24679 * C288;
    const double C24917 = C24679 * C1081;
    const double C24914 = C24679 * C291;
    const double C24908 = C24679 * C1082;
    const double C24902 = C24679 * C1083;
    const double C24899 = C24679 * C289;
    const double C24893 = C24679 * C290;
    const double C25111 = C24679 * C1195;
    const double C25108 = C24679 * C874;
    const double C25102 = C24679 * C1196;
    const double C25096 = C24679 * C1197;
    const double C25093 = C24679 * C872;
    const double C25087 = C24679 * C873;
    const double C25284 = C24679 * C292;
    const double C25448 = C24679 * C875;
    const double C25666 = C24679 * C1542;
    const double C25660 = C24679 * C1543;
    const double C25654 = C24679 * C1544;
    const double C26077 = C24679 * C2687;
    const double C26074 = C24679 * C2688;
    const double C26965 = C24679 * C4605;
    const double C26962 = C24679 * C4603;
    const double C32284 = C24679 * C4604;
    const double C33196 = C24679 * C6490;
    const double C7002 = C7000 + C6991;
    const double C339 = C333 + C324;
    const double C2326 = C2317 + C2304;
    const double C8619 = C8617 + C8234;
    const double C17771 = C17769 + C17386;
    const double C24733 = C24724 + C24711;
    const double C899 = C896 + C891;
    const double C8778 = C8776 + C8436;
    const double C17930 = C17928 + C17588;
    const double C2893 = C2266 * C1085;
    const double C8232 = C50793 * C1085;
    const double C17384 = C50793 * C1085;
    const double C25282 = C24673 * C1085;
    const double C2899 = C2892 + C2517;
    const double C8244 = C8230 + C8231;
    const double C17396 = C17382 + C17383;
    const double C25288 = C25281 + C24915;
    const double C11027 = C11025 + C1551;
    const double C3063 = C3056 + C2720;
    const double C8994 = C8986 + C8987;
    const double C18146 = C18138 + C18139;
    const double C25452 = C25445 + C25109;
    const double C50100 = ae * C50099;
    const double C2485 =
        (3 * C50021 + C49843 * C50099 + (2 * C50015 + C49843 * C50089) * ae) /
        C49731;
    const double C3267 = (C49984 * C50099) / C49731;
    const double C3284 = C2266 * C3270;
    const double C13772 = C50793 * C3270;
    const double C25664 = C24673 * C3270;
    const double C27780 = C50793 * C3270;
    const double C6091 = C6088 + C6077;
    const double C50226 = C50197 + C50224;
    const double C50268 = ae * C50263;
    const double C23666 = C50793 * C3703;
    const double C32282 = C24673 * C3703;
    const double C37672 = C2266 * C3703;
    const double C48828 = C50793 * C3703;
    const double C38590 = C38583 + C4614;
    const double C40293 = C40290 + C6997;
    const double C48333 = C48327 + C15204;
    const double C23167 = C23161 + C22737;
    const double C33200 = C33193 + C26964;
    const double C39959 = C39958 + C6499;
    const double C49238 = C49236 + C16396;
    const double C24085 = C24083 + C22207;
    const double C6079 = C901 * C50602;
    const double C11681 = C901 * C50910;
    const double C11679 = C901 * C7999;
    const double C34590 = C901 * C17150;
    const double C34588 = C901 * C17151;
    const double C45289 = C901 * C50602;
    const double C6081 = C5720 * C50602;
    const double C12076 = C5720 * C7999;
    const double C34984 = C5720 * C17151;
    const double C45291 = C5720 * C50602;
    const double C2527 = C2521 + C2492;
    const double C8250 = C8242 + C8225;
    const double C17402 = C17394 + C17377;
    const double C24925 = C24919 + C24890;
    const double C5363 = C5360 + C1552;
    const double C2730 = C2724 + C2695;
    const double C8996 = C8992 + C8981;
    const double C18148 = C18144 + C18133;
    const double C25119 = C25113 + C25084;
    const double C2735 = C2729 + C2716;
    const double C5364 = C5361 + C5356;
    const double C14671 = C14667 + C9401;
    const double C22755 = C22749 + C18553;
    const double C25124 = C25118 + C25105;
    const double C6497 = C6073 + C6093;
    const double C45684 = C45287 + C45286;
    const double C2487 =
        (3 * (C49857 + C50030 + C50030 + C49843 * C50067) + C50077 + C50077 +
         C49843 * (2 * C50067 + C50074 + C50074 +
                   C49843 * (C49866 + C50070 + C50070 +
                             C49843 * (2 * ae * C49918 + C49843 * C49874)))) /
        C49738;
    const double C2505 = C2274 * C2484;
    const double C3551 = C2272 * C2484;
    const double C9251 = C8003 * C2484;
    const double C18403 = C17155 * C2484;
    const double C20130 = C20006 * C2484;
    const double C20124 = C20008 * C2484;
    const double C20765 = C20004 * C2484;
    const double C24903 = C24681 * C2484;
    const double C25925 = C24679 * C2484;
    const double C3275 = C2274 * C3266;
    const double C4207 = C2272 * C3266;
    const double C6341 = C118 * C3266;
    const double C9895 = C8003 * C3266;
    const double C15003 = C8001 * C3266;
    const double C19047 = C17155 * C3266;
    const double C20238 = C20008 * C3266;
    const double C20590 = C20006 * C3266;
    const double C21203 = C20004 * C3266;
    const double C23009 = C17153 * C3266;
    const double C25655 = C24681 * C3266;
    const double C26569 = C24679 * C3266;
    const double C32130 = C24677 * C3266;
    const double C37520 = C2270 * C3266;
    const double C3708 = C2274 * C3701;
    const double C6339 = C118 * C3701;
    const double C15864 = C8003 * C3701;
    const double C20245 = C20008 * C3701;
    const double C20869 = C20006 * C3701;
    const double C22045 = C17155 * C3701;
    const double C23007 = C17153 * C3701;
    const double C26076 = C24681 * C3701;
    const double C32788 = C24679 * C3701;
    const double C38178 = C2272 * C3701;
    const double C48178 = C8001 * C3701;
    const double C7003 = C7001 + C6994;
    const double C6503 = C6502 * C2267;
    const double C39688 = C6502 * C50597;
    const double C45682 = C6502 * C50853;
    const double C5870 = C516 * C50602;
    const double C11187 = C516 * C7999;
    const double C34096 = C516 * C17151;
    const double C45089 = C516 * C50602;
    const double C11482 = C737 * C7999;
    const double C34391 = C737 * C17151;
    const double C304 =
        (3 * C49876 + C49850 * C49890 + C49970 + C49970 +
         C49843 *
             (2 * ae * C49967 +
              C49843 * (3 * C49888 +
                        C49850 * (2 * C49850 * C49886 +
                                  C49850 * (C49886 + (C49880 * C49881 +
                                                      C49847 * bs[8] *
                                                          std::pow(C49841, 8)) *
                                                         C49846 * C49862))))) /
        C49738;
    const double C327 = C118 * C294;
    const double C2306 = C2274 * C294;
    const double C8614 = C8003 * C294;
    const double C17766 = C17155 * C294;
    const double C24713 = C24681 * C294;
    const double C893 = C118 * C876;
    const double C8773 = C8003 * C876;
    const double C17925 = C17155 * C876;
    const double C49999 = ae * C49998;
    const double C1080 =
        (2 * C49943 + C49843 * C49998 + (C49938 + C49960 * C49847) * ae) /
        C49731;
    const double C1541 = (C49984 * C49998) / C49731;
    const double C50122 = C50121 + C50115;
    const double C3271 =
        (2 * (2 * ae * C49984 * C49937 + C49843 * C50149) + C50152 + C50152 +
         C49843 *
             (C50149 + C50153 + C50153 +
              C49843 * (2 * ae * C49984 * C49959 +
                        C49843 * C49984 *
                            (C49886 + (C49880 * C49881 +
                                       C49847 * bs[8] * std::pow(C49841, 8)) *
                                          C49846 * C49862)))) /
        C49738;
    const double C50189 = ae * C50187;
    const double C50188 = C49843 * C50187;
    const double C50250 = C49984 * C50187;
    const double C3700 = (C50099 + C50187 * C50035) / C49731;
    const double C3702 =
        (2 * (2 * ae * (C49927 + C49948 * C50035) + C49843 * C50233) + C50236 +
         C50236 +
         C49843 * (C50233 + C50237 + C50237 +
                   C49843 * (2 * ae * (C49948 + C50160 * C50035) +
                             C49843 * (C50157 + C49850 *
                                                    (C49880 * C49881 +
                                                     C49847 * bs[8] *
                                                         std::pow(C49841, 8)) *
                                                    C49846 * C50035)))) /
        C49738;
    const double C4611 = C2274 * C4602;
    const double C6996 = C118 * C4602;
    const double C15202 = C8003 * C4602;
    const double C22742 = C17155 * C4602;
    const double C26961 = C24681 * C4602;
    const double C50336 = C50299 + C50334;
    const double C50351 = C50223 + C50346;
    const double C50373 = ae * C50366;
    const double C50390 = ae * C50388;
    const double C23156 = (3 * C50243 + C49984 * C50388) / C49731;
    const double C23157 =
        (3 * C50242 + C49984 * C50387 + C50396 + C50396 +
         C49843 *
             (2 * ae *
                  (3 * C50349 +
                   C49984 *
                       (2 * C50363 + C49984 * (C49932 + C49954 * C50035))) +
              C49843 * (3 * C50350 +
                        C49984 * (2 * C50364 +
                                  C49984 * (C49886 + (C49880 * C49881 +
                                                      C49847 * bs[8] *
                                                          std::pow(C49841, 8)) *
                                                         C49846 * C50035))))) /
        C49738;
    const double C24079 = C17155 * C24071;
    const double C39957 = C118 * C24071;
    const double C49232 = C8003 * C24071;
    const double C20001 =
        ((ae * -2 * C49781) / C49791 -
         (((C49729 * C49792) / C49738 + 2 * C49805) * be) / C49731) /
            C49782 +
        ((C49729 * (C49792 / C49791 -
                    (((C49729 * C49803) / C49731 + 2 * C49800) * be) / C49731 -
                    C49747 / C49742) +
          2 * (C49805 / C49782 - ((C49729 * C49800 + C50881) * be) / C49731 +
               C49801)) *
         ae) /
            C49731 +
        C49803 / C49742 - ((2 * C49801 - C49755 / C49742) * be) / C49731;
    const double C20003 =
        (C49792 / C49791 -
         (((C49729 * C49803) / C49731 + 2 * C49800) * be) / C49731 -
         C49747 / C49742) /
            C49782 +
        ((C49729 * (C49803 / C49742 -
                    ((2 * C49801 - C49755 / C49742) * be) / C49731) +
          2 * (C49800 / C49782 - ((C49729 * C49801 + C50793) * be) / C49731)) *
         ae) /
            C49731 +
        (-2 * C49747) / (C49731 * 4 * C49738);
    const double C20005 =
        (C49803 / C49742 - ((2 * C49801 - C49755 / C49742) * be) / C49731) /
            C49782 +
        ((2 * (C49801 / C49782 - (0 * be) / C49731) -
          C49755 / (C49731 * 4 * C49738)) *
         ae) /
            C49731;
    const double C24676 =
        C49792 / C49791 -
        (((C49729 * C49803) / C49731 + 2 * C49800) * be) / C49731 -
        C49747 / C49742;
    const double C24678 =
        C49803 / C49742 - ((2 * C49801 - C49755 / C49742) * be) / C49731;
    const double C2325 = C2316 + C2301;
    const double C2322 = C2313 + C2292;
    const double C2319 = C2310 + C2283;
    const double C2531 = C2525 + C2510;
    const double C2528 = C2522 + C2495;
    const double C2734 = C2728 + C2713;
    const double C2731 = C2725 + C2698;
    const double C2901 = C2898 + C2516;
    const double C3065 = C3062 + C2719;
    const double C3292 = C3289 + C3280;
    const double C36765 = C36759 + C2707;
    const double C36762 = C36756 + C2704;
    const double C37269 = C37266 + C3274;
    const double C37680 = C37677 + C3709;
    const double C38592 = C38589 + C4615;
    const double C8047 = C8039 + C8026;
    const double C8046 = C8038 + C8023;
    const double C8043 = C8035 + C8014;
    const double C8041 = C8033 + C8008;
    const double C8251 = C8243 + C8228;
    const double C8249 = C8241 + C8222;
    const double C8248 = C8240 + C8215;
    const double C8246 = C8238 + C8209;
    const double C8453 = C8445 + C8430;
    const double C8451 = C8443 + C8424;
    const double C8450 = C8442 + C8417;
    const double C8448 = C8440 + C8411;
    const double C8618 = C8616 + C8233;
    const double C8777 = C8775 + C8435;
    const double C8997 = C8993 + C8984;
    const double C8995 = C8991 + C8978;
    const double C13775 = C13773 + C9894;
    const double C13999 = C13993 + C10290;
    const double C13998 = C13992 + C8421;
    const double C13995 = C13989 + C8420;
    const double C14670 = C14666 + C9402;
    const double C14668 = C14664 + C8975;
    const double C15208 = C15206 + C9404;
    const double C15868 = C15866 + C9896;
    const double C16400 = C16398 + C10292;
    const double C48335 = C48332 + C15205;
    const double C48833 = C48831 + C15865;
    const double C49237 = C49235 + C16397;
    const double C17199 = C17191 + C17178;
    const double C17198 = C17190 + C17175;
    const double C17195 = C17187 + C17166;
    const double C17193 = C17185 + C17160;
    const double C17403 = C17395 + C17380;
    const double C17401 = C17393 + C17374;
    const double C17400 = C17392 + C17367;
    const double C17398 = C17390 + C17361;
    const double C17605 = C17597 + C17582;
    const double C17603 = C17595 + C17576;
    const double C17602 = C17594 + C17569;
    const double C17600 = C17592 + C17563;
    const double C17770 = C17768 + C17385;
    const double C17929 = C17927 + C17587;
    const double C18149 = C18145 + C18136;
    const double C18147 = C18143 + C18130;
    const double C22230 = C22221 + C19442;
    const double C22229 = C22220 + C19444;
    const double C22226 = C22217 + C17573;
    const double C22224 = C22215 + C17572;
    const double C22754 = C22748 + C18554;
    const double C22752 = C22746 + C18556;
    const double C22750 = C22744 + C18127;
    const double C23169 = C23166 + C22736;
    const double C23675 = C23671 + C22044;
    const double C23673 = C23669 + C19048;
    const double C24084 = C24082 + C22206;
    const double C27783 = C27781 + C19046;
    const double C2333 = C2324 + C2299;
    const double C2332 = C2323 + C2296;
    const double C2327 = C2318 + C2281;
    const double C2536 = C2530 + C2508;
    const double C2535 = C2529 + C2499;
    const double C2739 = C2733 + C2711;
    const double C2738 = C2732 + C2702;
    const double C2903 = C2900 + C2889;
    const double C3067 = C3064 + C3053;
    const double C3294 = C3291 + C3278;
    const double C36772 = C36766 + C36754;
    const double C36767 = C36761 + C36744;
    const double C37271 = C37268 + C37260;
    const double C37682 = C37679 + C37668;
    const double C38186 = C38183 + C38172;
    const double C38594 = C38591 + C38580;
    const double C2330 = C2321 + C2290;
    const double C2329 = C2320 + C2287;
    const double C36770 = C36764 + C36750;
    const double C36769 = C36763 + C36748;
    const double C8056 = C8048 + C8030;
    const double C8053 = C8045 + C8021;
    const double C8052 = C8044 + C8018;
    const double C8050 = C8042 + C8012;
    const double C8255 = C8247 + C8213;
    const double C8253 = C8245 + C8207;
    const double C8462 = C8454 + C8434;
    const double C8460 = C8452 + C8428;
    const double C8457 = C8449 + C8415;
    const double C8455 = C8447 + C8409;
    const double C14006 = C14000 + C13988;
    const double C14003 = C13997 + C13980;
    const double C14002 = C13996 + C13976;
    const double C14673 = C14669 + C14657;
    const double C15211 = C15209 + C15201;
    const double C16403 = C16401 + C16393;
    const double C17208 = C17200 + C17182;
    const double C17205 = C17197 + C17173;
    const double C17204 = C17196 + C17170;
    const double C17202 = C17194 + C17164;
    const double C17407 = C17399 + C17365;
    const double C17405 = C17397 + C17359;
    const double C17614 = C17606 + C17586;
    const double C17612 = C17604 + C17580;
    const double C17609 = C17601 + C17567;
    const double C17607 = C17599 + C17561;
    const double C22239 = C22231 + C22211;
    const double C22236 = C22228 + C22203;
    const double C22235 = C22227 + C22201;
    const double C22233 = C22225 + C22197;
    const double C22759 = C22753 + C22735;
    const double C22757 = C22751 + C22731;
    const double C24737 = C24728 + C24697;
    const double C24736 = C24727 + C24694;
    const double C31380 = C31374 + C31360;
    const double C31379 = C31373 + C31358;
    const double C7004 = C7002 * C2267;
    const double C12563 = C7002 * C50909;
    const double C35471 = C7002 * C17149;
    const double C40288 = C7002 * C50597;
    const double C46171 = C7002 * C50853;
    const double C345 = C339 + C325;
    const double C2335 = C2326 + C2305;
    const double C8621 = C8619 + C8613;
    const double C17773 = C17771 + C17765;
    const double C24742 = C24733 + C24712;
    const double C902 = C899 + C892;
    const double C8780 = C8778 + C8772;
    const double C17932 = C17930 + C17924;
    const double C2902 = C2899 + C2517;
    const double C8252 = C8244 + C8231;
    const double C17404 = C17396 + C17383;
    const double C25291 = C25288 + C24915;
    const double C11028 = C11027 + C1551;
    const double C3066 = C3063 + C2720;
    const double C8998 = C8994 + C8987;
    const double C18150 = C18146 + C18139;
    const double C25455 = C25452 + C25109;
    const double C2488 =
        (3 * (C50012 + C50019 + C50019 + C49843 * C50090) + C50100 + C50100 +
         C49843 * (2 * C50090 + C50097 + C50097 +
                   C49843 * (C49878 + C50093 + C50093 +
                             C49843 * (2 * ae * C49948 +
                                       C49843 * C49850 * C49886)))) /
        C49738;
    const double C2513 = C2274 * C2485;
    const double C3548 = C2272 * C2485;
    const double C9249 = C8003 * C2485;
    const double C18401 = C17155 * C2485;
    const double C20137 = C20006 * C2485;
    const double C20135 = C20008 * C2485;
    const double C24911 = C24681 * C2485;
    const double C25922 = C24679 * C2485;
    const double C3283 = C2274 * C3267;
    const double C4204 = C2272 * C3267;
    const double C6340 = C118 * C3267;
    const double C9893 = C8003 * C3267;
    const double C15001 = C8001 * C3267;
    const double C19045 = C17155 * C3267;
    const double C20249 = C20008 * C3267;
    const double C20593 = C20006 * C3267;
    const double C25663 = C24681 * C3267;
    const double C26566 = C24679 * C3267;
    const double C28958 = C17153 * C3267;
    const double C6496 = C6091 * C50602;
    const double C39691 = C6091 * C50597;
    const double C45683 = C6091 * C50602;
    const double C50227 = C50226 + C50219;
    const double C4201 =
        (3 * (C50137 + C50141 + C50141 + C49843 * C50272) + C50268 + C50268 +
         C49843 * (2 * C50272 + C50269 + C50269 +
                   C49843 * (C50262 + C50270 + C50270 +
                             C49843 * (2 * ae * C49984 * C49932 +
                                       C49843 * C49984 * C49886)))) /
        C49738;
    const double C38593 = C38590 + C4614;
    const double C40294 = C40293 + C6997;
    const double C48336 = C48333 + C15204;
    const double C23170 = C23167 + C22737;
    const double C33203 = C33200 + C26964;
    const double C39960 = C39959 + C39956;
    const double C49240 = C49238 + C49231;
    const double C24087 = C24085 + C24078;
    const double C2533 = C2527 + C2493;
    const double C8258 = C8250 + C8226;
    const double C17410 = C17402 + C17378;
    const double C24931 = C24925 + C24891;
    const double C5366 = C5363 + C5353;
    const double C2736 = C2730 + C2696;
    const double C9000 = C8996 + C8982;
    const double C18152 = C18148 + C18134;
    const double C25125 = C25119 + C25085;
    const double C2741 = C2735 + C2717;
    const double C5367 = C5364 + C5357;
    const double C14675 = C14671 + C14662;
    const double C22761 = C22755 + C22741;
    const double C25130 = C25124 + C25106;
    const double C37267 = C37263 + C3275;
    const double C38181 = C38173 + C4207;
    const double C15867 = C15860 + C9895;
    const double C23670 = C23661 + C19047;
    const double C31877 = C31873 + C25655;
    const double C37678 = C37671 + C3708;
    const double C48832 = C48827 + C15864;
    const double C23672 = C23665 + C22045;
    const double C32288 = C32281 + C26076;
    const double C7005 = C7003 * C2267;
    const double C40289 = C7003 * C50597;
    const double C46173 = C7003 * C50853;
    const double C1084 =
        (2 * (2 * ae * C49941 + C49843 * C49890) + C49999 + C49999 +
         C49843 *
             (C49890 + C49996 + C49996 +
              C49843 * (2 * ae * C49963 +
                        C49843 * (2 * C49850 * C49886 +
                                  C49850 * (C49886 + (C49880 * C49881 +
                                                      C49847 * bs[8] *
                                                          std::pow(C49841, 8)) *
                                                         C49846 * C49862))))) /
        C49738;
    const double C1089 = C118 * C1080;
    const double C2894 = C2274 * C1080;
    const double C8235 = C8003 * C1080;
    const double C17387 = C17155 * C1080;
    const double C20022 = C20008 * C1080;
    const double C25283 = C24681 * C1080;
    const double C1550 = C118 * C1541;
    const double C3058 = C2274 * C1541;
    const double C8989 = C8003 * C1541;
    const double C18141 = C17155 * C1541;
    const double C25447 = C24681 * C1541;
    const double C50123 = ae * C50122;
    const double C2486 =
        (3 * C50009 + C49843 * C50122 + (2 * C50003 + C49843 * C50112) * ae) /
        C49731;
    const double C3268 = (C49984 * C50122) / C49731;
    const double C50190 = C50158 + C50188;
    const double C50255 = ae * C50250;
    const double C3705 = C2274 * C3700;
    const double C6338 = C118 * C3700;
    const double C15862 = C8003 * C3700;
    const double C20250 = C20008 * C3700;
    const double C22046 = C17155 * C3700;
    const double C26073 = C24681 * C3700;
    const double C50337 = C50336 + C50324;
    const double C50356 = ae * C50351;
    const double C21467 = (2 * C50263 + C49984 * C50351) / C49731;
    const double C21468 =
        (2 * (2 * ae * (2 * C50261 + C49984 * C50349) + C49843 * C50387) +
         C50390 + C50390 +
         C49843 *
             (C50387 + C50391 + C50391 +
              C49843 *
                  (2 * ae * (2 * C50363 + C49984 * (C49932 + C49954 * C50035)) +
                   C49843 * (2 * C50364 +
                             C49984 * (C49886 +
                                       (C49880 * C49881 +
                                        C49847 * bs[8] * std::pow(C49841, 8)) *
                                           C49846 * C50035))))) /
        C49738;
    const double C23164 = C17155 * C23156;
    const double C33195 = C24681 * C23156;
    const double C38585 = C2274 * C23156;
    const double C40292 = C118 * C23156;
    const double C48330 = C8003 * C23156;
    const double C24704 = C24676 * C122;
    const double C24701 = C24676 * C121;
    const double C24686 = C24676 * C120;
    const double C24904 = C24676 * C280;
    const double C24895 = C24676 * C277;
    const double C25098 = C24676 * C451;
    const double C25089 = C24676 * C448;
    const double C25277 = C24676 * C276;
    const double C25441 = C24676 * C447;
    const double C25656 = C24676 * C868;
    const double C31363 = C24676 * C450;
    const double C31353 = C24676 * C449;
    const double C31869 = C24676 * C867;
    const double C32277 = C24676 * C1193;
    const double C32781 = C24676 * C1540;
    const double C33189 = C24676 * C1824;
    const double C24707 = C24678 * C275;
    const double C24698 = C24678 * C276;
    const double C24689 = C24678 * C277;
    const double C24907 = C24678 * C1078;
    const double C24892 = C24678 * C280;
    const double C25101 = C24678 * C1192;
    const double C25086 = C24678 * C868;
    const double C25279 = C24678 * C281;
    const double C25443 = C24678 * C869;
    const double C25659 = C24678 * C1539;
    const double C31361 = C24678 * C1193;
    const double C31355 = C24678 * C867;
    const double C31871 = C24678 * C1540;
    const double C32279 = C24678 * C2684;
    const double C32783 = C24678 * C3263;
    const double C33191 = C24678 * C4601;
    const double C2334 = C2325 + C2302;
    const double C2331 = C2322 + C2293;
    const double C2328 = C2319 + C2284;
    const double C2537 = C2531 + C2511;
    const double C2534 = C2528 + C2496;
    const double C2740 = C2734 + C2714;
    const double C2737 = C2731 + C2699;
    const double C2904 = C2901 + C2891;
    const double C3068 = C3065 + C3055;
    const double C3295 = C3292 + C3281;
    const double C36771 = C36765 + C36752;
    const double C36768 = C36762 + C36746;
    const double C37272 = C37269 + C37262;
    const double C37683 = C37680 + C37670;
    const double C38595 = C38592 + C38582;
    const double C8055 = C8047 + C8027;
    const double C8054 = C8046 + C8024;
    const double C8051 = C8043 + C8015;
    const double C8049 = C8041 + C8009;
    const double C8259 = C8251 + C8229;
    const double C8257 = C8249 + C8223;
    const double C8256 = C8248 + C8216;
    const double C8254 = C8246 + C8210;
    const double C8461 = C8453 + C8431;
    const double C8459 = C8451 + C8425;
    const double C8458 = C8450 + C8418;
    const double C8456 = C8448 + C8412;
    const double C8620 = C8618 + C8611;
    const double C8779 = C8777 + C8770;
    const double C9001 = C8997 + C8985;
    const double C8999 = C8995 + C8979;
    const double C13777 = C13775 + C13770;
    const double C14005 = C13999 + C13986;
    const double C14004 = C13998 + C13982;
    const double C14001 = C13995 + C13974;
    const double C14674 = C14670 + C14660;
    const double C14672 = C14668 + C14655;
    const double C15210 = C15208 + C15199;
    const double C15870 = C15868 + C15859;
    const double C16402 = C16400 + C16391;
    const double C48337 = C48335 + C48326;
    const double C48835 = C48833 + C48826;
    const double C49239 = C49237 + C49229;
    const double C17207 = C17199 + C17179;
    const double C17206 = C17198 + C17176;
    const double C17203 = C17195 + C17167;
    const double C17201 = C17193 + C17161;
    const double C17411 = C17403 + C17381;
    const double C17409 = C17401 + C17375;
    const double C17408 = C17400 + C17368;
    const double C17406 = C17398 + C17362;
    const double C17613 = C17605 + C17583;
    const double C17611 = C17603 + C17577;
    const double C17610 = C17602 + C17570;
    const double C17608 = C17600 + C17564;
    const double C17772 = C17770 + C17763;
    const double C17931 = C17929 + C17922;
    const double C18153 = C18149 + C18137;
    const double C18151 = C18147 + C18131;
    const double C22238 = C22230 + C22209;
    const double C22237 = C22229 + C22205;
    const double C22234 = C22226 + C22199;
    const double C22232 = C22224 + C22195;
    const double C22760 = C22754 + C22739;
    const double C22758 = C22752 + C22733;
    const double C22756 = C22750 + C22729;
    const double C23171 = C23169 + C23160;
    const double C23679 = C23675 + C23664;
    const double C23677 = C23673 + C23660;
    const double C24086 = C24084 + C24076;
    const double C27785 = C27783 + C27778;
    const double C11682 = C902 * C7999;
    const double C34591 = C902 * C17151;
    const double C2905 = C2902 + C2893;
    const double C8260 = C8252 + C8232;
    const double C17412 = C17404 + C17384;
    const double C25294 = C25291 + C25282;
    const double C11029 = C11028 + C11026;
    const double C3069 = C3066 + C3057;
    const double C9002 = C8998 + C8988;
    const double C18154 = C18150 + C18140;
    const double C25458 = C25455 + C25446;
    const double C2514 = C2266 * C2488;
    const double C24912 = C24673 * C2488;
    const double C2526 = C2512 + C2513;
    const double C24924 = C24910 + C24911;
    const double C3290 = C3282 + C3283;
    const double C13774 = C13771 + C9893;
    const double C27782 = C27779 + C19045;
    const double C25670 = C25662 + C25663;
    const double C50228 = ae * C50227;
    const double C3543 =
        (4 * C50076 + C49843 * C50227 + (3 * C50066 + C49843 * C50216) * ae) /
        C49731;
    const double C4199 = (C49984 * C50227) / C49731;
    const double C32786 = C24673 * C4201;
    const double C38176 = C2266 * C4201;
    const double C38596 = C38593 + C38584;
    const double C40295 = C40294 + C40291;
    const double C48338 = C48336 + C48328;
    const double C23172 = C23170 + C23162;
    const double C33206 = C33203 + C33194;
    const double C39961 = C39960 * C50597;
    const double C6992 = C5366 * C50602;
    const double C12564 = C5366 * C50910;
    const double C35472 = C5366 * C17150;
    const double C46172 = C5366 * C50602;
    const double C6995 = C5367 * C50602;
    const double C46174 = C5367 * C50602;
    const double C37270 = C37267 + C3275;
    const double C38184 = C38181 + C4207;
    const double C15869 = C15867 + C9895;
    const double C23674 = C23670 + C19047;
    const double C31880 = C31877 + C25655;
    const double C37681 = C37678 + C3708;
    const double C48834 = C48832 + C15864;
    const double C23676 = C23672 + C22045;
    const double C32291 = C32288 + C26076;
    const double C2489 =
        (3 * (C49876 + C50007 + C50007 + C49843 * C50113) + C50123 + C50123 +
         C49843 *
             (2 * C50113 + C50120 + C50120 +
              C49843 * (C49888 + C50116 + C50116 +
                        C49843 * (2 * ae * C49959 +
                                  C49843 * (C49886 + (C49880 * C49881 +
                                                      C49847 * bs[8] *
                                                          std::pow(C49841, 8)) *
                                                         C49846 * C49862))))) /
        C49738;
    const double C2518 = C2274 * C2486;
    const double C9247 = C8003 * C2486;
    const double C18399 = C17155 * C2486;
    const double C20352 = C20008 * C2486;
    const double C24916 = C24681 * C2486;
    const double C3285 = C2274 * C3268;
    const double C9891 = C8003 * C3268;
    const double C11927 = C118 * C3268;
    const double C19043 = C17155 * C3268;
    const double C20454 = C20008 * C3268;
    const double C25665 = C24681 * C3268;
    const double C50191 = C50190 + C50183;
    const double C4200 =
        (3 * (C50143 + C50147 + C50147 + C49843 * C50259) + C50255 + C50255 +
         C49843 *
             (2 * C50259 + C50256 + C50256 +
              C49843 * (C50249 + C50257 + C50257 +
                        C49843 * (2 * ae * C49984 * C50160 +
                                  C49843 * C49984 * C49850 *
                                      (C49880 * C49881 +
                                       C49847 * bs[8] * std::pow(C49841, 8)) *
                                      C49846)))) /
        C49738;
    const double C50339 = ae * C50337;
    const double C50338 = C49843 * C50337;
    const double C50365 = C49984 * C50337;
    const double C20865 = (C50227 + C50337 * C50035) / C49731;
    const double C20866 =
        (3 * (C50242 + C50246 + C50246 + C49843 * C50360) + C50356 + C50356 +
         C49843 *
             (2 * C50360 + C50357 + C50357 +
              C49843 * (C50350 + C50358 + C50358 +
                        C49843 * (2 * ae * (C49932 + C49954 * C50035) +
                                  C49843 * (C49886 + (C49880 * C49881 +
                                                      C49847 * bs[8] *
                                                          std::pow(C49841, 8)) *
                                                         C49846 * C50035))))) /
        C49738;
    const double C21470 = C20008 * C21467;
    const double C23667 = C17155 * C21467;
    const double C32283 = C24681 * C21467;
    const double C37673 = C2274 * C21467;
    const double C39856 = C118 * C21467;
    const double C48829 = C8003 * C21467;
    const double C24722 = C24704 + C24705;
    const double C24721 = C24701 + C24702;
    const double C24716 = C24686 + C24687;
    const double C24922 = C24904 + C24905;
    const double C24921 = C24895 + C24896;
    const double C25116 = C25098 + C25099;
    const double C25115 = C25089 + C25090;
    const double C25286 = C25277 + C24913;
    const double C25450 = C25441 + C25107;
    const double C25668 = C25656 + C25657;
    const double C31370 = C31363 + C25095;
    const double C31365 = C31353 + C25094;
    const double C31875 = C31869 + C25653;
    const double C32286 = C32277 + C26078;
    const double C32790 = C32781 + C26570;
    const double C33198 = C33189 + C26966;
    const double C24723 = C24707 + C24708;
    const double C24720 = C24698 + C24699;
    const double C24717 = C24689 + C24690;
    const double C24923 = C24907 + C24908;
    const double C24920 = C24892 + C24893;
    const double C25117 = C25101 + C25102;
    const double C25114 = C25086 + C25087;
    const double C25287 = C25279 + C24914;
    const double C25451 = C25443 + C25108;
    const double C25669 = C25659 + C25660;
    const double C31369 = C31361 + C25096;
    const double C31366 = C31355 + C25093;
    const double C31876 = C31871 + C25654;
    const double C32287 = C32279 + C26077;
    const double C32791 = C32783 + C26569;
    const double C33199 = C33191 + C26965;
    const double C8058 = C8053 + C8054;
    const double C8057 = C8051 + C8052;
    const double C8609 = C8253 + C8254;
    const double C13984 = C8459 + C8460;
    const double C13978 = C8460 + C8459;
    const double C13983 = C8457 + C8458;
    const double C13977 = C8458 + C8457;
    const double C8768 = C8455 + C8456;
    const double C14395 = C8456 + C8455;
    const double C14663 = C9000 + C8999;
    const double C14658 = C8999 + C9000;
    const double C47444 = C14004 + C14003;
    const double C48329 = C15211 + C15210;
    const double C49227 = C16403 + C16402;
    const double C17210 = C17205 + C17206;
    const double C17209 = C17203 + C17204;
    const double C17761 = C17405 + C17406;
    const double C22212 = C17612 + C17611;
    const double C27983 = C17611 + C17612;
    const double C27982 = C17609 + C17610;
    const double C27981 = C17610 + C17609;
    const double C17920 = C17607 + C17608;
    const double C28372 = C17608 + C17607;
    const double C28632 = C18152 + C18151;
    const double C28631 = C18151 + C18152;
    const double C24074 = C22236 + C22237;
    const double C22240 = C22234 + C22235;
    const double C23163 = C22759 + C22758;
    const double C12565 = C11029 * C7999;
    const double C35473 = C11029 * C17151;
    const double C2532 = C2526 + C2513;
    const double C24930 = C24924 + C24911;
    const double C3293 = C3290 + C3283;
    const double C13776 = C13774 + C9893;
    const double C27784 = C27782 + C19045;
    const double C25673 = C25670 + C25663;
    const double C3545 =
        (4 * (2 * C50067 + C50074 + C50074 + C49843 * C50217) + C50228 +
         C50228 +
         C49843 * (3 * C50217 + C50225 + C50225 +
                   C49843 * (2 * C50209 + C50221 + C50221 +
                             C49843 * (C49874 + C50213 + C50213 +
                                       C49843 * (2 * ae * C49932 +
                                                 C49843 * C49886))))) /
        C49738;
    const double C3550 = C2274 * C3543;
    const double C20131 = C20008 * C3543;
    const double C20764 = C20006 * C3543;
    const double C25924 = C24681 * C3543;
    const double C4206 = C2274 * C4199;
    const double C15002 = C8003 * C4199;
    const double C20591 = C20008 * C4199;
    const double C21202 = C20006 * C4199;
    const double C23008 = C17155 * C4199;
    const double C26568 = C24681 * C4199;
    const double C32129 = C24679 * C4199;
    const double C37519 = C2272 * C4199;
    const double C40296 = C40295 * C50597;
    const double C37273 = C37270 + C37264;
    const double C38187 = C38184 + C38174;
    const double C15871 = C15869 + C15861;
    const double C23678 = C23674 + C23662;
    const double C31883 = C31880 + C31874;
    const double C37684 = C37681 + C37672;
    const double C48836 = C48834 + C48828;
    const double C23680 = C23676 + C23666;
    const double C32294 = C32291 + C32282;
    const double C50192 = ae * C50191;
    const double C3542 =
        (4 * C50099 + C49843 * C50191 + (3 * C50089 + C49843 * C50181) * ae) /
        C49731;
    const double C4198 = (C49984 * C50191) / C49731;
    const double C50340 = C50298 + C50338;
    const double C50372 = ae * C50365;
    const double C20868 = C20008 * C20865;
    const double C23006 = C17155 * C20865;
    const double C32787 = C24681 * C20865;
    const double C38177 = C2274 * C20865;
    const double C48177 = C8003 * C20865;
    const double C24731 = C24722 + C24705;
    const double C24730 = C24721 + C24702;
    const double C24725 = C24716 + C24687;
    const double C24928 = C24922 + C24905;
    const double C24927 = C24921 + C24896;
    const double C25122 = C25116 + C25099;
    const double C25121 = C25115 + C25090;
    const double C25289 = C25286 + C24913;
    const double C25453 = C25450 + C25107;
    const double C25671 = C25668 + C25657;
    const double C31376 = C31370 + C25095;
    const double C31371 = C31365 + C25094;
    const double C31878 = C31875 + C25653;
    const double C32289 = C32286 + C26078;
    const double C32793 = C32790 + C26570;
    const double C33201 = C33198 + C26966;
    const double C24732 = C24723 + C24708;
    const double C24729 = C24720 + C24699;
    const double C24726 = C24717 + C24690;
    const double C24929 = C24923 + C24908;
    const double C24926 = C24920 + C24893;
    const double C25123 = C25117 + C25102;
    const double C25120 = C25114 + C25087;
    const double C25290 = C25287 + C24914;
    const double C25454 = C25451 + C25108;
    const double C25672 = C25669 + C25660;
    const double C31375 = C31369 + C25096;
    const double C31372 = C31366 + C25093;
    const double C31879 = C31876 + C25654;
    const double C32290 = C32287 + C26077;
    const double C32794 = C32791 + C26569;
    const double C33202 = C33199 + C26965;
    const double C47445 = C13978 * C50597;
    const double C47446 = C47444 * C50597;
    const double C48334 = C48329 * C50597;
    const double C49234 = C49227 * C50597;
    const double C22223 = C22212 * C50597;
    const double C24081 = C24074 * C50597;
    const double C22241 = C22240 * C50597;
    const double C23168 = C23163 * C50597;
    const double C2538 = C2532 + C2514;
    const double C24936 = C24930 + C24912;
    const double C3296 = C3293 + C3284;
    const double C13778 = C13776 + C13772;
    const double C27786 = C27784 + C27780;
    const double C25676 = C25673 + C25664;
    const double C38182 = C38175 + C4206;
    const double C32792 = C32785 + C26568;
    const double C3544 =
        (4 * (2 * C50090 + C50097 + C50097 + C49843 * C50179) + C50192 +
         C50192 +
         C49843 * (3 * C50179 + C50189 + C50189 +
                   C49843 * (2 * C50170 + C50185 + C50185 +
                             C49843 * (C50157 + C50178 + C50178 +
                                       C49843 * (2 * ae * C50160 +
                                                 C49843 * C49850 *
                                                     (C49880 * C49881 +
                                                      C49847 * bs[8] *
                                                          std::pow(C49841, 8)) *
                                                     C49846))))) /
        C49738;
    const double C3547 = C2274 * C3542;
    const double C20136 = C20008 * C3542;
    const double C25921 = C24681 * C3542;
    const double C4203 = C2274 * C4198;
    const double C15000 = C8003 * C4198;
    const double C20592 = C20008 * C4198;
    const double C26565 = C24681 * C4198;
    const double C28957 = C17155 * C4198;
    const double C50341 = C50340 + C50332;
    const double C21199 =
        (4 * (2 * C50272 + C50269 + C50269 + C49843 * C50379) + C50372 +
         C50372 +
         C49843 * (3 * C50379 + C50373 + C50373 +
                   C49843 * (2 * C50377 + C50374 + C50374 +
                             C49843 * (C50364 + C50375 + C50375 +
                                       C49843 * (2 * ae * C49984 * C49954 +
                                                 C49843 * C49984 *
                                                     (C49880 * C49881 +
                                                      C49847 * bs[8] *
                                                          std::pow(C49841, 8)) *
                                                     C49846))))) /
        C49738;
    const double C24740 = C24731 + C24706;
    const double C24739 = C24730 + C24703;
    const double C24734 = C24725 + C24688;
    const double C24934 = C24928 + C24906;
    const double C24933 = C24927 + C24897;
    const double C25128 = C25122 + C25100;
    const double C25127 = C25121 + C25091;
    const double C25292 = C25289 + C25278;
    const double C25456 = C25453 + C25442;
    const double C25674 = C25671 + C25658;
    const double C31382 = C31376 + C31364;
    const double C31377 = C31371 + C31354;
    const double C31881 = C31878 + C31870;
    const double C32292 = C32289 + C32278;
    const double C32796 = C32793 + C32782;
    const double C33204 = C33201 + C33190;
    const double C24741 = C24732 + C24709;
    const double C24738 = C24729 + C24700;
    const double C24735 = C24726 + C24691;
    const double C24935 = C24929 + C24909;
    const double C24932 = C24926 + C24894;
    const double C25129 = C25123 + C25103;
    const double C25126 = C25120 + C25088;
    const double C25293 = C25290 + C25280;
    const double C25457 = C25454 + C25444;
    const double C25675 = C25672 + C25661;
    const double C31381 = C31375 + C31362;
    const double C31378 = C31372 + C31356;
    const double C31882 = C31879 + C31872;
    const double C32293 = C32290 + C32280;
    const double C32797 = C32794 + C32784;
    const double C33205 = C33202 + C33192;
    const double C38185 = C38182 + C4206;
    const double C32795 = C32792 + C26568;
    const double C50342 = ae * C50341;
    const double C20760 =
        (5 * C50227 + C49843 * C50341 + (4 * C50216 + C49843 * C50328) * ae) /
        C49731;
    const double C21198 = (C49984 * C50341) / C49731;
    const double C38188 = C38185 + C38176;
    const double C32798 = C32795 + C32786;
    const double C20761 =
        (5 * (3 * C50217 + C50225 + C50225 + C49843 * C50330) + C50342 +
         C50342 +
         C49843 *
             (4 * C50330 + C50339 + C50339 +
              C49843 *
                  (3 * C50322 + C50335 + C50335 +
                   C49843 * (2 * C50314 + C50329 + C50329 +
                             C49843 * (C49886 + C50318 + C50318 +
                                       C49843 * (2 * ae * C49954 +
                                                 C49843 *
                                                     (C49880 * C49881 +
                                                      C49847 * bs[8] *
                                                          std::pow(C49841, 8)) *
                                                     C49846)))))) /
        C49738;
    const double C20763 = C20008 * C20760;
    const double C21201 = C20008 * C21198;
    const double C32128 = C24681 * C21198;
    const double C37518 = C2274 * C21198;
    d2ee[0] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                ((((C8000 * C119 + C8005 + C8005 + C50881 * C133 +
                    C8002 * C278 + C8006 + C8006 + C50793 * C298) *
                       C50909 +
                   (C8049 + C8050) * C50910 + C8057 * C7999) *
                      C50757 * C50660 * C50868 -
                  (C8609 * C7999 + (C8255 + C8256) * C50910 +
                   (C8002 * C279 + C8217 + C8217 + C50793 * C299 +
                    C8000 * C278 + C8218 + C8218 + C50881 * C298) *
                       C50909) *
                      C50757 * C50660 * C50696) *
                     C50911 +
                 (((C8256 + C8255) * C50909 + (C8254 + C8253) * C50910 +
                   (C8620 + C8621) * C7999) *
                      C50757 * C50660 * C50696 -
                  (C8058 * C7999 + (C8052 + C8051) * C50910 +
                   (C8050 + C8049) * C50909) *
                      C50757 * C50660 * C50868) *
                     C50912 +
                 ((C8057 * C50909 + (C8054 + C8053) * C50910 +
                   (C8055 + C8056) * C7999) *
                      C50757 * C50660 * C50868 -
                  ((C8002 * C284 + C8614 + C8614 + C50793 * C304 +
                    C8000 * C283 + C8615 + C8615 + C50881 * C303) *
                       C7999 +
                   (C8621 + C8620) * C50910 + C8609 * C50909) *
                      C50757 * C50660 * C50696) *
                     C618)) /
               (p * q * std::sqrt(p + q));
    d2ee[1] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C8000 * C119 + C8005 + C8005 + C50881 * C133 +
                     C8002 * C278 + C8006 + C8006 + C50793 * C298) *
                        C50909 +
                    (C8049 + C8050) * C50910 + C8057 * C7999) *
                       C50757 * C50869 -
                   (C8768 * C7999 + (C8457 + C8458) * C50910 +
                    (C8002 * C867 + C8419 + C8419 + C50793 * C877 +
                     C8000 * C449 + C8420 + C8420 + C50881 * C469) *
                        C50909) *
                       C50757 * C50724) *
                      C50868 +
                  (((C8000 * C867 + C8975 + C8975 + C50881 * C877 +
                     C8002 * C1540 + C8976 + C8976 + C50793 * C1548) *
                        C50909 +
                    (C8999 + C9000) * C50910 + (C9001 + C9002) * C7999) *
                       C50757 * C50724 -
                   (C8609 * C7999 + (C8255 + C8256) * C50910 +
                    (C8002 * C279 + C8217 + C8217 + C50793 * C299 +
                     C8000 * C278 + C8218 + C8218 + C50881 * C298) *
                        C50909) *
                       C50757 * C50869) *
                      C50696) *
                     C273 +
                 ((((C8458 + C8457) * C50909 + (C8456 + C8455) * C50910 +
                    (C8779 + C8780) * C7999) *
                       C50757 * C50724 -
                   (C8058 * C7999 + (C8052 + C8051) * C50910 +
                    (C8050 + C8049) * C50909) *
                       C50757 * C50869) *
                      C50868 +
                  (((C8256 + C8255) * C50909 + (C8254 + C8253) * C50910 +
                    (C8620 + C8621) * C7999) *
                       C50757 * C50869 -
                   ((C8002 * C1537 + C8989 + C8989 + C50793 * C1545 +
                     C8000 * C870 + C8990 + C8990 + C50881 * C880) *
                        C7999 +
                    (C9002 + C9001) * C50910 + (C9000 + C8999) * C50909) *
                       C50757 * C50724) *
                      C50696) *
                     C50631)) /
               (p * q * std::sqrt(p + q));
    d2ee[2] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                ((((C8000 * C119 + C8005 + C8005 + C50881 * C133 +
                    C8002 * C278 + C8006 + C8006 + C50793 * C298) *
                       C50909 +
                   (C8049 + C8050) * C50910 + C8057 * C7999) *
                      C50757 * C50660 * C270 -
                  ((C8253 + C8254) * C7999 + (C8255 + C8256) * C50910 +
                   (C8002 * C279 + C8217 + C8217 + C50793 * C299 +
                    C8000 * C278 + C8218 + C8218 + C50881 * C298) *
                       C50909) *
                      C50757 * C50660 * C271 +
                  ((C8000 * C279 + C8219 + C8219 + C50881 * C299 +
                    C8002 * C1079 + C8220 + C8220 + C50793 * C1087) *
                       C50909 +
                   (C8257 + C8258) * C50910 + (C8259 + C8260) * C7999) *
                      C50757 * C50660 * C272) *
                     C273 +
                 (((C8256 + C8255) * C50909 + (C8254 + C8253) * C50910 +
                   (C8000 * C275 + C8233 + C8233 + C50881 * C295 +
                    C8002 * C282 + C8234 + C8234 + C50793 * C302) *
                       C7999) *
                      C50757 * C50660 * C271 -
                  (C8058 * C7999 + (C8052 + C8051) * C50910 +
                   (C8050 + C8049) * C50909) *
                      C50757 * C50660 * C270 -
                  ((C8002 * C1076 + C8235 + C8235 + C50793 * C1084 +
                    C8000 * C282 + C8236 + C8236 + C50881 * C302) *
                       C7999 +
                   (C8260 + C8259) * C50910 + (C8258 + C8257) * C50909) *
                      C50757 * C50660 * C272) *
                     C50631)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                (((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
                   C8006 + C8006 + C50793 * C298) *
                      C50909 +
                  (C8049 + C8050) * C50910 + C8057 * C7999) *
                     C50757 * C50660 * C50644 * C113 -
                 (C8058 * C7999 + (C8052 + C8051) * C50910 +
                  (C8050 + C8049) * C50909) *
                     C50757 * C50660 * C50644 * C114 +
                 (C8057 * C50909 + (C8054 + C8053) * C50910 +
                  (C8055 + C8056) * C7999) *
                     C50757 * C50660 * C50644 * C115 -
                 ((C8002 * C619 + C8031 + C8031 + C50793 * C621 + C8000 * C124 +
                   C8032 + C8032 + C50881 * C138) *
                      C7999 +
                  (C8056 + C8055) * C50910 + C8058 * C50909) *
                     C50757 * C50660 * C50644 * C116)) /
                   (p * q * std::sqrt(p + q)) +
               (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                ((((C8000 * C119 + C8005 + C8005 + C50881 * C133 +
                    C8002 * C278 + C8006 + C8006 + C50793 * C298) *
                       C50909 +
                   (C8049 + C8050) * C50910 + C8057 * C7999) *
                      C50757 * C443 -
                  ((C8455 + C8456) * C7999 + (C8457 + C8458) * C50910 +
                   (C8002 * C867 + C8419 + C8419 + C50793 * C877 +
                    C8000 * C449 + C8420 + C8420 + C50881 * C469) *
                       C50909) *
                      C50757 * C444 +
                  ((C8000 * C450 + C8421 + C8421 + C50881 * C470 +
                    C8002 * C1193 + C8422 + C8422 + C50793 * C1201) *
                       C50909 +
                   (C8459 + C8460) * C50910 + (C8461 + C8462) * C7999) *
                      C50757 * C445) *
                     C50644 * C273 +
                 (((C8458 + C8457) * C50909 + (C8456 + C8455) * C50910 +
                   (C8000 * C446 + C8435 + C8435 + C50881 * C466 +
                    C8002 * C870 + C8436 + C8436 + C50793 * C880) *
                       C7999) *
                      C50757 * C444 -
                  (C8058 * C7999 + (C8052 + C8051) * C50910 +
                   (C8050 + C8049) * C50909) *
                      C50757 * C443 -
                  ((C8002 * C1190 + C8437 + C8437 + C50793 * C1198 +
                    C8000 * C453 + C8438 + C8438 + C50881 * C473) *
                       C7999 +
                   (C8462 + C8461) * C50910 + (C8460 + C8459) * C50909) *
                      C50757 * C445) *
                     C50644 * C50631)) /
                   (p * q * std::sqrt(p + q));
    d2ee[3] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                ((((C8000 * C119 + C8005 + C8005 + C50881 * C133 +
                    C8002 * C278 + C8006 + C8006 + C50793 * C298) *
                       C50909 +
                   (C8049 + C8050) * C50910 + C8057 * C7999) *
                      C50757 * C50869 -
                  (C8768 * C7999 + (C8457 + C8458) * C50910 +
                   (C8002 * C867 + C8419 + C8419 + C50793 * C877 +
                    C8000 * C449 + C8420 + C8420 + C50881 * C469) *
                       C50909) *
                      C50757 * C50724) *
                     C50644 * C50911 +
                 (((C8458 + C8457) * C50909 + (C8456 + C8455) * C50910 +
                   (C8779 + C8780) * C7999) *
                      C50757 * C50724 -
                  (C8058 * C7999 + (C8052 + C8051) * C50910 +
                   (C8050 + C8049) * C50909) *
                      C50757 * C50869) *
                     C50644 * C50912 +
                 ((C8057 * C50909 + (C8054 + C8053) * C50910 +
                   (C8055 + C8056) * C7999) *
                      C50757 * C50869 -
                  ((C8002 * C871 + C8773 + C8773 + C50793 * C881 +
                    C8000 * C454 + C8774 + C8774 + C50881 * C474) *
                       C7999 +
                   (C8780 + C8779) * C50910 + C8768 * C50909) *
                      C50757 * C50724) *
                     C50644 * C618)) /
               (p * q * std::sqrt(p + q));
    d2ee[4] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                (((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
                   C8006 + C8006 + C50793 * C298) *
                      C50909 +
                  (C8049 + C8050) * C50910 + C8057 * C7999) *
                     C50757 * C50660 * C50644 * C113 -
                 (C8058 * C7999 + (C8052 + C8051) * C50910 +
                  (C8050 + C8049) * C50909) *
                     C50757 * C50660 * C50644 * C114 +
                 (C8057 * C50909 + (C8054 + C8053) * C50910 +
                  (C8055 + C8056) * C7999) *
                     C50757 * C50660 * C50644 * C115 -
                 ((C8002 * C619 + C8031 + C8031 + C50793 * C621 + C8000 * C124 +
                   C8032 + C8032 + C50881 * C138) *
                      C7999 +
                  (C8056 + C8055) * C50910 + C8058 * C50909) *
                     C50757 * C50660 * C50644 * C116)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                ((((C8000 * C119 + C8005 + C8005 + C50881 * C133 +
                    C8002 * C278 + C8006 + C8006 + C50793 * C298) *
                       C50909 +
                   (C8049 + C8050) * C50910 + C8057 * C7999) *
                      C50757 * C50660 * C270 -
                  ((C8253 + C8254) * C7999 + (C8255 + C8256) * C50910 +
                   (C8002 * C279 + C8217 + C8217 + C50793 * C299 +
                    C8000 * C278 + C8218 + C8218 + C50881 * C298) *
                       C50909) *
                      C50757 * C50660 * C271 +
                  ((C8000 * C279 + C8219 + C8219 + C50881 * C299 +
                    C8002 * C1079 + C8220 + C8220 + C50793 * C1087) *
                       C50909 +
                   (C8257 + C8258) * C50910 + (C8259 + C8260) * C7999) *
                      C50757 * C50660 * C272) *
                     C273 +
                 (((C8256 + C8255) * C50909 + (C8254 + C8253) * C50910 +
                   (C8000 * C275 + C8233 + C8233 + C50881 * C295 +
                    C8002 * C282 + C8234 + C8234 + C50793 * C302) *
                       C7999) *
                      C50757 * C50660 * C271 -
                  (C8058 * C7999 + (C8052 + C8051) * C50910 +
                   (C8050 + C8049) * C50909) *
                      C50757 * C50660 * C270 -
                  ((C8002 * C1076 + C8235 + C8235 + C50793 * C1084 +
                    C8000 * C282 + C8236 + C8236 + C50881 * C302) *
                       C7999 +
                   (C8260 + C8259) * C50910 + (C8258 + C8257) * C50909) *
                      C50757 * C50660 * C272) *
                     C50631)) /
                   (p * q * std::sqrt(p + q));
    d2ee[5] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                ((((C8000 * C119 + C8005 + C8005 + C50881 * C133 +
                    C8002 * C278 + C8006 + C8006 + C50793 * C298) *
                       C50909 +
                   (C8049 + C8050) * C50910 + C8057 * C7999) *
                      C50757 * C50660 * C50913 -
                  (C8609 * C7999 + (C8255 + C8256) * C50910 +
                   (C8002 * C279 + C8217 + C8217 + C50793 * C299 +
                    C8000 * C278 + C8218 + C8218 + C50881 * C298) *
                       C50909) *
                      C50757 * C50660 * C50914 +
                  ((C8000 * C279 + C8219 + C8219 + C50881 * C299 +
                    C8002 * C1079 + C8220 + C8220 + C50793 * C1087) *
                       C50909 +
                   (C8257 + C8258) * C50910 + (C8259 + C8260) * C7999) *
                      C50757 * C50660 * C1306) *
                     C50860 +
                 (((C8256 + C8255) * C50909 + (C8254 + C8253) * C50910 +
                   (C8620 + C8621) * C7999) *
                      C50757 * C50660 * C50914 -
                  (C8058 * C7999 + (C8052 + C8051) * C50910 +
                   (C8050 + C8049) * C50909) *
                      C50757 * C50660 * C50913 -
                  ((C8002 * C1076 + C8235 + C8235 + C50793 * C1084 +
                    C8000 * C282 + C8236 + C8236 + C50881 * C302) *
                       C7999 +
                   (C8260 + C8259) * C50910 + (C8258 + C8257) * C50909) *
                      C50757 * C50660 * C1306) *
                     C50631)) /
               (p * q * std::sqrt(p + q));
    d2ee[6] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                ((((C8000 * C119 + C8005 + C8005 + C50881 * C133 +
                    C8002 * C278 + C8006 + C8006 + C50793 * C298) *
                       C50909 +
                   (C8049 + C8050) * C50910 + C8057 * C7999) *
                      C50757 * C50869 -
                  (C8768 * C7999 + (C8457 + C8458) * C50910 +
                   (C8002 * C867 + C8419 + C8419 + C50793 * C877 +
                    C8000 * C449 + C8420 + C8420 + C50881 * C469) *
                       C50909) *
                      C50757 * C50724) *
                     C50913 +
                 (((C8000 * C867 + C8975 + C8975 + C50881 * C877 +
                    C8002 * C1540 + C8976 + C8976 + C50793 * C1548) *
                       C50909 +
                   (C8999 + C9000) * C50910 + (C9001 + C9002) * C7999) *
                      C50757 * C50724 -
                  (C8609 * C7999 + (C8255 + C8256) * C50910 +
                   (C8002 * C279 + C8217 + C8217 + C50793 * C299 +
                    C8000 * C278 + C8218 + C8218 + C50881 * C298) *
                       C50909) *
                      C50757 * C50869) *
                     C50914 +
                 (((C8000 * C279 + C8219 + C8219 + C50881 * C299 +
                    C8002 * C1079 + C8220 + C8220 + C50793 * C1087) *
                       C50909 +
                   (C8257 + C8258) * C50910 + (C8259 + C8260) * C7999) *
                      C50757 * C50869 -
                  ((C8002 * C3265 + C9891 + C9891 + C50793 * C3271 +
                    C8000 * C1538 + C9892 + C9892 + C50881 * C1546) *
                       C7999 +
                   (C8002 * C3264 + C9893 + C9893 + C50793 * C3270 +
                    C8000 * C1539 + C9894 + C9894 + C50881 * C1547) *
                       C50910 +
                   (C8002 * C3263 + C9895 + C9895 + C50793 * C3269 +
                    C8000 * C1540 + C9896 + C9896 + C50881 * C1548) *
                       C50909) *
                      C50757 * C50724) *
                     C1306) *
                C50625) /
               (p * q * std::sqrt(p + q));
    d2ee[7] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                (((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
                   C8006 + C8006 + C50793 * C298) *
                      C50909 +
                  (C8049 + C8050) * C50910 + C8057 * C7999) *
                     C50757 * C50660 * C1071 -
                 (C8609 * C7999 + (C8255 + C8256) * C50910 +
                  (C8002 * C279 + C8217 + C8217 + C50793 * C299 + C8000 * C278 +
                   C8218 + C8218 + C50881 * C298) *
                      C50909) *
                     C50757 * C50660 * C1072 +
                 ((C8000 * C279 + C8219 + C8219 + C50881 * C299 +
                   C8002 * C1079 + C8220 + C8220 + C50793 * C1087) *
                      C50909 +
                  (C8257 + C8258) * C50910 + (C8259 + C8260) * C7999) *
                     C50757 * C50660 * C1073 -
                 ((C8002 * C2483 + C9247 + C9247 + C50793 * C2489 +
                   C8000 * C1077 + C9248 + C9248 + C50881 * C1085) *
                      C7999 +
                  (C8002 * C2482 + C9249 + C9249 + C50793 * C2488 +
                   C8000 * C1078 + C9250 + C9250 + C50881 * C1086) *
                      C50910 +
                  (C8002 * C2481 + C9251 + C9251 + C50793 * C2487 +
                   C8000 * C1079 + C9252 + C9252 + C50881 * C1087) *
                      C50909) *
                     C50757 * C50660 * C1074) *
                C50625) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                ((((C8000 * C119 + C8005 + C8005 + C50881 * C133 +
                    C8002 * C278 + C8006 + C8006 + C50793 * C298) *
                       C50909 +
                   (C8049 + C8050) * C50910 + C8057 * C7999) *
                      C50757 * C50660 * C1000 -
                  (C8609 * C7999 + (C8255 + C8256) * C50910 +
                   (C8002 * C279 + C8217 + C8217 + C50793 * C299 +
                    C8000 * C278 + C8218 + C8218 + C50881 * C298) *
                       C50909) *
                      C50757 * C50660 * C50696) *
                     C1002 +
                 (((C8256 + C8255) * C50909 + (C8254 + C8253) * C50910 +
                   (C8620 + C8621) * C7999) *
                      C50757 * C50660 * C50696 -
                  (C8058 * C7999 + (C8052 + C8051) * C50910 +
                   (C8050 + C8049) * C50909) *
                      C50757 * C50660 * C1000) *
                     C1003 +
                 ((C8057 * C50909 + (C8054 + C8053) * C50910 +
                   (C8055 + C8056) * C7999) *
                      C50757 * C50660 * C1000 -
                  ((C8002 * C284 + C8614 + C8614 + C50793 * C304 +
                    C8000 * C283 + C8615 + C8615 + C50881 * C303) *
                       C7999 +
                   (C8621 + C8620) * C50910 + C8609 * C50909) *
                      C50757 * C50660 * C50696) *
                     C1004)) /
                   (p * q * std::sqrt(p + q)) +
               (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                ((((C8000 * C119 + C8005 + C8005 + C50881 * C133 +
                    C8002 * C278 + C8006 + C8006 + C50793 * C298) *
                       C50909 +
                   (C8049 + C8050) * C50910 + C8057 * C7999) *
                      C50757 * C443 -
                  (C8768 * C7999 + (C8457 + C8458) * C50910 +
                   (C8002 * C867 + C8419 + C8419 + C50793 * C877 +
                    C8000 * C449 + C8420 + C8420 + C50881 * C469) *
                       C50909) *
                      C50757 * C444 +
                  ((C8000 * C450 + C8421 + C8421 + C50881 * C470 +
                    C8002 * C1193 + C8422 + C8422 + C50793 * C1201) *
                       C50909 +
                   (C8459 + C8460) * C50910 + (C8461 + C8462) * C7999) *
                      C50757 * C445) *
                     C1000 +
                 (((C8000 * C867 + C8975 + C8975 + C50881 * C877 +
                    C8002 * C1540 + C8976 + C8976 + C50793 * C1548) *
                       C50909 +
                   (C8999 + C9000) * C50910 + (C9001 + C9002) * C7999) *
                      C50757 * C444 -
                  (C8609 * C7999 + (C8255 + C8256) * C50910 +
                   (C8002 * C279 + C8217 + C8217 + C50793 * C299 +
                    C8000 * C278 + C8218 + C8218 + C50881 * C298) *
                       C50909) *
                      C50757 * C443 -
                  ((C8002 * C2686 + C9399 + C9399 + C50793 * C2692 +
                    C8000 * C1191 + C9400 + C9400 + C50881 * C1199) *
                       C7999 +
                   (C8002 * C2685 + C9401 + C9401 + C50793 * C2691 +
                    C8000 * C1192 + C9402 + C9402 + C50881 * C1200) *
                       C50910 +
                   (C8002 * C2684 + C9403 + C9403 + C50793 * C2690 +
                    C8000 * C1193 + C9404 + C9404 + C50881 * C1201) *
                       C50909) *
                      C50757 * C445) *
                     C50696) *
                C50625) /
                   (p * q * std::sqrt(p + q));
    d2ee[8] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C8000 * C119 + C8005 + C8005 + C50881 * C133 +
                     C8002 * C278 + C8006 + C8006 + C50793 * C298) *
                        C50909 +
                    (C8049 + C8050) * C50910 + C8057 * C7999) *
                       C50757 * C50869 -
                   (C8768 * C7999 + (C8457 + C8458) * C50910 +
                    (C8002 * C867 + C8419 + C8419 + C50793 * C877 +
                     C8000 * C449 + C8420 + C8420 + C50881 * C469) *
                        C50909) *
                       C50757 * C50724) *
                      C1000 +
                  (((C8000 * C867 + C8975 + C8975 + C50881 * C877 +
                     C8002 * C1540 + C8976 + C8976 + C50793 * C1548) *
                        C50909 +
                    (C8999 + C9000) * C50910 + (C9001 + C9002) * C7999) *
                       C50757 * C50724 -
                   (C8609 * C7999 + (C8255 + C8256) * C50910 +
                    (C8002 * C279 + C8217 + C8217 + C50793 * C299 +
                     C8000 * C278 + C8218 + C8218 + C50881 * C298) *
                        C50909) *
                       C50757 * C50869) *
                      C50696) *
                     C50860 +
                 ((((C8458 + C8457) * C50909 + (C8456 + C8455) * C50910 +
                    (C8779 + C8780) * C7999) *
                       C50757 * C50724 -
                   (C8058 * C7999 + (C8052 + C8051) * C50910 +
                    (C8050 + C8049) * C50909) *
                       C50757 * C50869) *
                      C1000 +
                  (((C8256 + C8255) * C50909 + (C8254 + C8253) * C50910 +
                    (C8620 + C8621) * C7999) *
                       C50757 * C50869 -
                   ((C8002 * C1537 + C8989 + C8989 + C50793 * C1545 +
                     C8000 * C870 + C8990 + C8990 + C50881 * C880) *
                        C7999 +
                    (C9002 + C9001) * C50910 + (C9000 + C8999) * C50909) *
                       C50757 * C50724) *
                      C50696) *
                     C50631)) /
               (p * q * std::sqrt(p + q));
    d2ee[9] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                ((((C8000 * C119 + C8005 + C8005 + C50881 * C133 +
                    C8002 * C278 + C8006 + C8006 + C50793 * C298) *
                       C50909 +
                   (C8049 + C8050) * C50910 + C8057 * C7999) *
                      C50757 * C50660 * C1000 -
                  (C8609 * C7999 + (C8255 + C8256) * C50910 +
                   (C8002 * C279 + C8217 + C8217 + C50793 * C299 +
                    C8000 * C278 + C8218 + C8218 + C50881 * C298) *
                       C50909) *
                      C50757 * C50660 * C50696) *
                     C1002 +
                 (((C8256 + C8255) * C50909 + (C8254 + C8253) * C50910 +
                   (C8620 + C8621) * C7999) *
                      C50757 * C50660 * C50696 -
                  (C8058 * C7999 + (C8052 + C8051) * C50910 +
                   (C8050 + C8049) * C50909) *
                      C50757 * C50660 * C1000) *
                     C1003 +
                 ((C8057 * C50909 + (C8054 + C8053) * C50910 +
                   (C8055 + C8056) * C7999) *
                      C50757 * C50660 * C1000 -
                  ((C8002 * C284 + C8614 + C8614 + C50793 * C304 +
                    C8000 * C283 + C8615 + C8615 + C50881 * C303) *
                       C7999 +
                   (C8621 + C8620) * C50910 + C8609 * C50909) *
                      C50757 * C50660 * C50696) *
                     C1004)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                (((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
                   C8006 + C8006 + C50793 * C298) *
                      C50909 +
                  (C8049 + C8050) * C50910 + C8057 * C7999) *
                     C50757 * C50660 * C1071 -
                 (C8609 * C7999 + (C8255 + C8256) * C50910 +
                  (C8002 * C279 + C8217 + C8217 + C50793 * C299 + C8000 * C278 +
                   C8218 + C8218 + C50881 * C298) *
                      C50909) *
                     C50757 * C50660 * C1072 +
                 ((C8000 * C279 + C8219 + C8219 + C50881 * C299 +
                   C8002 * C1079 + C8220 + C8220 + C50793 * C1087) *
                      C50909 +
                  (C8257 + C8258) * C50910 + (C8259 + C8260) * C7999) *
                     C50757 * C50660 * C1073 -
                 ((C8002 * C2483 + C9247 + C9247 + C50793 * C2489 +
                   C8000 * C1077 + C9248 + C9248 + C50881 * C1085) *
                      C7999 +
                  (C8002 * C2482 + C9249 + C9249 + C50793 * C2488 +
                   C8000 * C1078 + C9250 + C9250 + C50881 * C1086) *
                      C50910 +
                  (C8002 * C2481 + C9251 + C9251 + C50793 * C2487 +
                   C8000 * C1079 + C9252 + C9252 + C50881 * C1087) *
                      C50909) *
                     C50757 * C50660 * C1074) *
                C50625) /
                   (p * q * std::sqrt(p + q));
    d2ee[10] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C8000 * C119 + C8005 + C8005 + C50881 * C133 +
                      C8002 * C278 + C8006 + C8006 + C50793 * C298) *
                         C50909 +
                     (C8049 + C8050) * C50910 + C8057 * C7999) *
                        C50757 * C1651 -
                    (C8768 * C7999 + (C8457 + C8458) * C50910 +
                     (C8002 * C867 + C8419 + C8419 + C50793 * C877 +
                      C8000 * C449 + C8420 + C8420 + C50881 * C469) *
                         C50909) *
                        C50757 * C50724) *
                       C50868 +
                   (((C8000 * C867 + C8975 + C8975 + C50881 * C877 +
                      C8002 * C1540 + C8976 + C8976 + C50793 * C1548) *
                         C50909 +
                     (C8999 + C9000) * C50910 + (C9001 + C9002) * C7999) *
                        C50757 * C50724 -
                    (C8609 * C7999 + (C8255 + C8256) * C50910 +
                     (C8002 * C279 + C8217 + C8217 + C50793 * C299 +
                      C8000 * C278 + C8218 + C8218 + C50881 * C298) *
                         C50909) *
                        C50757 * C1651) *
                       C50696) *
                      C50860 +
                  ((((C8458 + C8457) * C50909 + (C8456 + C8455) * C50910 +
                     (C8779 + C8780) * C7999) *
                        C50757 * C50724 -
                    (C8058 * C7999 + (C8052 + C8051) * C50910 +
                     (C8050 + C8049) * C50909) *
                        C50757 * C1651) *
                       C50868 +
                   (((C8256 + C8255) * C50909 + (C8254 + C8253) * C50910 +
                     (C8620 + C8621) * C7999) *
                        C50757 * C1651 -
                    ((C8002 * C1537 + C8989 + C8989 + C50793 * C1545 +
                      C8000 * C870 + C8990 + C8990 + C50881 * C880) *
                         C7999 +
                     (C9002 + C9001) * C50910 + (C9000 + C8999) * C50909) *
                        C50757 * C50724) *
                       C50696) *
                      C50631)) /
                (p * q * std::sqrt(p + q));
    d2ee[11] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C8000 * C119 + C8005 + C8005 + C50881 * C133 +
                     C8002 * C278 + C8006 + C8006 + C50793 * C298) *
                        C50909 +
                    (C8049 + C8050) * C50910 + C8057 * C7999) *
                       C50757 * C50915 -
                   (C8768 * C7999 + (C8457 + C8458) * C50910 +
                    (C8002 * C867 + C8419 + C8419 + C50793 * C877 +
                     C8000 * C449 + C8420 + C8420 + C50881 * C469) *
                        C50909) *
                       C50757 * C50916 +
                   ((C8000 * C450 + C8421 + C8421 + C50881 * C470 +
                     C8002 * C1193 + C8422 + C8422 + C50793 * C1201) *
                        C50909 +
                    (C8459 + C8460) * C50910 + (C8461 + C8462) * C7999) *
                       C50757 * C2067) *
                      C50868 +
                  (((C8000 * C867 + C8975 + C8975 + C50881 * C877 +
                     C8002 * C1540 + C8976 + C8976 + C50793 * C1548) *
                        C50909 +
                    (C8999 + C9000) * C50910 + (C9001 + C9002) * C7999) *
                       C50757 * C50916 -
                   (C8609 * C7999 + (C8255 + C8256) * C50910 +
                    (C8002 * C279 + C8217 + C8217 + C50793 * C299 +
                     C8000 * C278 + C8218 + C8218 + C50881 * C298) *
                        C50909) *
                       C50757 * C50915 -
                   ((C8002 * C2686 + C9399 + C9399 + C50793 * C2692 +
                     C8000 * C1191 + C9400 + C9400 + C50881 * C1199) *
                        C7999 +
                    (C8002 * C2685 + C9401 + C9401 + C50793 * C2691 +
                     C8000 * C1192 + C9402 + C9402 + C50881 * C1200) *
                        C50910 +
                    (C8002 * C2684 + C9403 + C9403 + C50793 * C2690 +
                     C8000 * C1193 + C9404 + C9404 + C50881 * C1201) *
                        C50909) *
                       C50757 * C2067) *
                      C50696) *
                 C50625) /
                (p * q * std::sqrt(p + q));
    d2ee[12] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C8000 * C119 + C8005 + C8005 + C50881 * C133 +
                     C8002 * C278 + C8006 + C8006 + C50793 * C298) *
                        C50909 +
                    (C8049 + C8050) * C50910 + C8057 * C7999) *
                       C50757 * C1651 -
                   (C8768 * C7999 + (C8457 + C8458) * C50910 +
                    (C8002 * C867 + C8419 + C8419 + C50793 * C877 +
                     C8000 * C449 + C8420 + C8420 + C50881 * C469) *
                        C50909) *
                       C50757 * C50724) *
                      C270 +
                  (((C8000 * C867 + C8975 + C8975 + C50881 * C877 +
                     C8002 * C1540 + C8976 + C8976 + C50793 * C1548) *
                        C50909 +
                    (C8999 + C9000) * C50910 + (C9001 + C9002) * C7999) *
                       C50757 * C50724 -
                   (C8609 * C7999 + (C8255 + C8256) * C50910 +
                    (C8002 * C279 + C8217 + C8217 + C50793 * C299 +
                     C8000 * C278 + C8218 + C8218 + C50881 * C298) *
                        C50909) *
                       C50757 * C1651) *
                      C271 +
                  (((C8000 * C279 + C8219 + C8219 + C50881 * C299 +
                     C8002 * C1079 + C8220 + C8220 + C50793 * C1087) *
                        C50909 +
                    (C8257 + C8258) * C50910 + (C8259 + C8260) * C7999) *
                       C50757 * C1651 -
                   ((C8002 * C3265 + C9891 + C9891 + C50793 * C3271 +
                     C8000 * C1538 + C9892 + C9892 + C50881 * C1546) *
                        C7999 +
                    (C8002 * C3264 + C9893 + C9893 + C50793 * C3270 +
                     C8000 * C1539 + C9894 + C9894 + C50881 * C1547) *
                        C50910 +
                    (C8002 * C3263 + C9895 + C9895 + C50793 * C3269 +
                     C8000 * C1540 + C9896 + C9896 + C50881 * C1548) *
                        C50909) *
                       C50757 * C50724) *
                      C272) *
                 C50625) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C8000 * C119 + C8005 + C8005 + C50881 * C133 +
                     C8002 * C278 + C8006 + C8006 + C50793 * C298) *
                        C50909 +
                    (C8049 + C8050) * C50910 + C8057 * C7999) *
                       C50757 * C1651 -
                   (C8768 * C7999 + (C8457 + C8458) * C50910 +
                    (C8002 * C867 + C8419 + C8419 + C50793 * C877 +
                     C8000 * C449 + C8420 + C8420 + C50881 * C469) *
                        C50909) *
                       C50757 * C50724) *
                      C50644 * C1002 +
                  (((C8458 + C8457) * C50909 + (C8456 + C8455) * C50910 +
                    (C8779 + C8780) * C7999) *
                       C50757 * C50724 -
                   (C8058 * C7999 + (C8052 + C8051) * C50910 +
                    (C8050 + C8049) * C50909) *
                       C50757 * C1651) *
                      C50644 * C1003 +
                  ((C8057 * C50909 + (C8054 + C8053) * C50910 +
                    (C8055 + C8056) * C7999) *
                       C50757 * C1651 -
                   ((C8002 * C871 + C8773 + C8773 + C50793 * C881 +
                     C8000 * C454 + C8774 + C8774 + C50881 * C474) *
                        C7999 +
                    (C8780 + C8779) * C50910 + C8768 * C50909) *
                       C50757 * C50724) *
                      C50644 * C1004)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((C8000 * C119 + C8005 + C8005 + C50881 * C133 +
                    C8002 * C278 + C8006 + C8006 + C50793 * C298) *
                       C50909 +
                   (C8049 + C8050) * C50910 + C8057 * C7999) *
                      C50757 * C1817 -
                  (C8768 * C7999 + (C8457 + C8458) * C50910 +
                   (C8002 * C867 + C8419 + C8419 + C50793 * C877 +
                    C8000 * C449 + C8420 + C8420 + C50881 * C469) *
                       C50909) *
                      C50757 * C1818 +
                  ((C8000 * C450 + C8421 + C8421 + C50881 * C470 +
                    C8002 * C1193 + C8422 + C8422 + C50793 * C1201) *
                       C50909 +
                   (C8459 + C8460) * C50910 + (C8461 + C8462) * C7999) *
                      C50757 * C1819 -
                  ((C8002 * C6064 + C10287 + C10287 + C50793 * C6066 +
                    C8000 * C1822 + C10288 + C10288 + C50881 * C1830) *
                       C7999 +
                   (C8002 * C4599 + C10289 + C10289 + C50793 * C4607 +
                    C8000 * C1823 + C10290 + C10290 + C50881 * C1831) *
                       C50910 +
                   (C8002 * C4601 + C10291 + C10291 + C50793 * C4609 +
                    C8000 * C1824 + C10292 + C10292 + C50881 * C1832) *
                       C50909) *
                      C50757 * C1820) *
                 C50644 * C50625) /
                    (p * q * std::sqrt(p + q));
    d2ee[13] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C8000 * C119 + C8005 + C8005 + C50881 * C133 +
                     C8002 * C278 + C8006 + C8006 + C50793 * C298) *
                        C50909 +
                    (C8049 + C8050) * C50910 + C8057 * C7999) *
                       C50757 * C50915 -
                   (C8768 * C7999 + (C8457 + C8458) * C50910 +
                    (C8002 * C867 + C8419 + C8419 + C50793 * C877 +
                     C8000 * C449 + C8420 + C8420 + C50881 * C469) *
                        C50909) *
                       C50757 * C50916 +
                   ((C8000 * C450 + C8421 + C8421 + C50881 * C470 +
                     C8002 * C1193 + C8422 + C8422 + C50793 * C1201) *
                        C50909 +
                    (C8459 + C8460) * C50910 + (C8461 + C8462) * C7999) *
                       C50757 * C2067) *
                      C50644 * C50860 +
                  (((C8458 + C8457) * C50909 + (C8456 + C8455) * C50910 +
                    (C8779 + C8780) * C7999) *
                       C50757 * C50916 -
                   (C8058 * C7999 + (C8052 + C8051) * C50910 +
                    (C8050 + C8049) * C50909) *
                       C50757 * C50915 -
                   ((C8002 * C1190 + C8437 + C8437 + C50793 * C1198 +
                     C8000 * C453 + C8438 + C8438 + C50881 * C473) *
                        C7999 +
                    (C8462 + C8461) * C50910 + (C8460 + C8459) * C50909) *
                       C50757 * C2067) *
                      C50644 * C50631)) /
                (p * q * std::sqrt(p + q));
    d2ee[14] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C8000 * C119 + C8005 + C8005 + C50881 * C133 +
                     C8002 * C278 + C8006 + C8006 + C50793 * C298) *
                        C50909 +
                    (C8049 + C8050) * C50910 + C8057 * C7999) *
                       C50757 * C1651 -
                   (C8768 * C7999 + (C8457 + C8458) * C50910 +
                    (C8002 * C867 + C8419 + C8419 + C50793 * C877 +
                     C8000 * C449 + C8420 + C8420 + C50881 * C469) *
                        C50909) *
                       C50757 * C50724) *
                      C50644 * C1002 +
                  (((C8458 + C8457) * C50909 + (C8456 + C8455) * C50910 +
                    (C8779 + C8780) * C7999) *
                       C50757 * C50724 -
                   (C8058 * C7999 + (C8052 + C8051) * C50910 +
                    (C8050 + C8049) * C50909) *
                       C50757 * C1651) *
                      C50644 * C1003 +
                  ((C8057 * C50909 + (C8054 + C8053) * C50910 +
                    (C8055 + C8056) * C7999) *
                       C50757 * C1651 -
                   ((C8002 * C871 + C8773 + C8773 + C50793 * C881 +
                     C8000 * C454 + C8774 + C8774 + C50881 * C474) *
                        C7999 +
                    (C8780 + C8779) * C50910 + C8768 * C50909) *
                       C50757 * C50724) *
                      C50644 * C1004)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C8000 * C119 + C8005 + C8005 + C50881 * C133 +
                     C8002 * C278 + C8006 + C8006 + C50793 * C298) *
                        C50909 +
                    (C8049 + C8050) * C50910 + C8057 * C7999) *
                       C50757 * C1651 -
                   (C8768 * C7999 + (C8457 + C8458) * C50910 +
                    (C8002 * C867 + C8419 + C8419 + C50793 * C877 +
                     C8000 * C449 + C8420 + C8420 + C50881 * C469) *
                        C50909) *
                       C50757 * C50724) *
                      C270 +
                  (((C8000 * C867 + C8975 + C8975 + C50881 * C877 +
                     C8002 * C1540 + C8976 + C8976 + C50793 * C1548) *
                        C50909 +
                    (C8999 + C9000) * C50910 + (C9001 + C9002) * C7999) *
                       C50757 * C50724 -
                   (C8609 * C7999 + (C8255 + C8256) * C50910 +
                    (C8002 * C279 + C8217 + C8217 + C50793 * C299 +
                     C8000 * C278 + C8218 + C8218 + C50881 * C298) *
                        C50909) *
                       C50757 * C1651) *
                      C271 +
                  (((C8000 * C279 + C8219 + C8219 + C50881 * C299 +
                     C8002 * C1079 + C8220 + C8220 + C50793 * C1087) *
                        C50909 +
                    (C8257 + C8258) * C50910 + (C8259 + C8260) * C7999) *
                       C50757 * C1651 -
                   ((C8002 * C3265 + C9891 + C9891 + C50793 * C3271 +
                     C8000 * C1538 + C9892 + C9892 + C50881 * C1546) *
                        C7999 +
                    (C8002 * C3264 + C9893 + C9893 + C50793 * C3270 +
                     C8000 * C1539 + C9894 + C9894 + C50881 * C1547) *
                        C50910 +
                    (C8002 * C3263 + C9895 + C9895 + C50793 * C3269 +
                     C8000 * C1540 + C9896 + C9896 + C50881 * C1548) *
                        C50909) *
                       C50757 * C50724) *
                      C272) *
                 C50625) /
                    (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
              C8006 + C8006 + C50793 * C298) *
                 C2267 +
             (C8049 + C8050) * C50602) *
                C50882 +
            ((C14001 + C14002) * C2267 + C13977 * C50602) * C50821) *
               C50660 * C50868 -
           (((C9000 + C8999) * C50602 +
             (C8002 * C1540 + C8976 + C8976 + C50793 * C1548 + C8000 * C867 +
              C8975 + C8975 + C50881 * C877) *
                 C2267) *
                C50821 +
            ((C8255 + C8256) * C50602 +
             (C8002 * C279 + C8217 + C8217 + C50793 * C299 + C8000 * C278 +
              C8218 + C8218 + C50881 * C298) *
                 C2267) *
                C50882) *
               C50660 * C50696) *
              C50911 +
          ((((C8256 + C8255) * C2267 + (C8254 + C8253) * C50602) * C50882 +
            ((C8999 + C9000) * C2267 + (C9001 + C9002) * C50602) * C50821) *
               C50660 * C50696 -
           ((C8768 * C50602 + C13983 * C2267) * C50821 +
            ((C8052 + C8051) * C50602 + (C8050 + C8049) * C2267) * C50882) *
               C50660 * C50868) *
              C50912 +
          (((C8057 * C2267 + (C8054 + C8053) * C50602) * C50882 +
            ((C8456 + C8455) * C2267 + (C8779 + C8780) * C50602) * C50821) *
               C50660 * C50868 -
           (((C8002 * C1537 + C8989 + C8989 + C50793 * C1545 + C8000 * C870 +
              C8990 + C8990 + C50881 * C880) *
                 C50602 +
             (C9002 + C9001) * C2267) *
                C50821 +
            ((C8621 + C8620) * C50602 + C8609 * C2267) * C50882) *
               C50660 * C50696) *
              C618)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
               C8006 + C8006 + C50793 * C298) *
                  C2267 +
              (C8049 + C8050) * C50602) *
                 C50882 +
             ((C14001 + C14002) * C2267 + C13977 * C50602) * C50821) *
                C50869 -
            ((C13978 * C50602 + (C14003 + C14004) * C2267) * C50821 +
             (C13983 * C50602 + (C14002 + C14001) * C2267) * C50882) *
                C50724) *
               C50868 +
           ((((C14672 + C14673) * C2267 + C14658 * C50602) * C50882 +
             ((C8000 * C1193 + C9404 + C9404 + C50881 * C1201 + C8002 * C2684 +
               C9403 + C9403 + C50793 * C2690) *
                  C2267 +
              (C14674 + C14675) * C50602) *
                 C50821) *
                C50724 -
            ((C14663 * C50602 + (C14673 + C14672) * C2267) * C50821 +
             ((C8255 + C8256) * C50602 +
              (C8002 * C279 + C8217 + C8217 + C50793 * C299 + C8000 * C278 +
               C8218 + C8218 + C50881 * C298) *
                  C2267) *
                 C50882) *
                C50869) *
               C50696) *
              C273 +
          ((((C13977 * C2267 + C14395 * C50602) * C50882 +
             (C13984 * C2267 + (C8461 + C8462) * C50602) * C50821) *
                C50724 -
            ((C8768 * C50602 + C13983 * C2267) * C50821 +
             ((C8052 + C8051) * C50602 + (C8050 + C8049) * C2267) * C50882) *
                C50869) *
               C50868 +
           ((((C8256 + C8255) * C2267 + (C8254 + C8253) * C50602) * C50882 +
             (C14658 * C2267 + (C9001 + C9002) * C50602) * C50821) *
                C50869 -
            (((C8002 * C2686 + C9399 + C9399 + C50793 * C2692 + C8000 * C1191 +
               C9400 + C9400 + C50881 * C1199) *
                  C50602 +
              (C14675 + C14674) * C2267) *
                 C50821 +
             ((C9002 + C9001) * C50602 + C14663 * C2267) * C50882) *
                C50724) *
               C50696) *
              C50631)) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
              C8006 + C8006 + C50793 * C298) *
                 C2267 +
             (C8049 + C8050) * C50602) *
                C50882 +
            ((C8000 * C449 + C8420 + C8420 + C50881 * C469 + C8002 * C867 +
              C8419 + C8419 + C50793 * C877) *
                 C2267 +
             (C8458 + C8457) * C50602) *
                C50821) *
               C50660 * C270 -
           (((C9000 + C8999) * C50602 +
             (C8002 * C1540 + C8976 + C8976 + C50793 * C1548 + C8000 * C867 +
              C8975 + C8975 + C50881 * C877) *
                 C2267) *
                C50821 +
            ((C8255 + C8256) * C50602 +
             (C8002 * C279 + C8217 + C8217 + C50793 * C299 + C8000 * C278 +
              C8218 + C8218 + C50881 * C298) *
                 C2267) *
                C50882) *
               C50660 * C271 +
           (((C8000 * C279 + C8219 + C8219 + C50881 * C299 + C8002 * C1079 +
              C8220 + C8220 + C50793 * C1087) *
                 C2267 +
             (C8257 + C8258) * C50602) *
                C50882 +
            ((C8000 * C1540 + C9896 + C9896 + C50881 * C1548 + C8002 * C3263 +
              C9895 + C9895 + C50793 * C3269) *
                 C2267 +
             (C13777 + C13778) * C50602) *
                C50821) *
               C50660 * C272) *
              C273 +
          ((((C8256 + C8255) * C2267 + (C8254 + C8253) * C50602) * C50882 +
            ((C8999 + C9000) * C2267 + (C9001 + C9002) * C50602) * C50821) *
               C50660 * C271 -
           ((C8768 * C50602 + (C8457 + C8458) * C2267) * C50821 +
            ((C8052 + C8051) * C50602 + (C8050 + C8049) * C2267) * C50882) *
               C50660 * C270 -
           (((C8002 * C3265 + C9891 + C9891 + C50793 * C3271 + C8000 * C1538 +
              C9892 + C9892 + C50881 * C1546) *
                 C50602 +
             (C13778 + C13777) * C2267) *
                C50821 +
            ((C8260 + C8259) * C50602 + (C8258 + C8257) * C2267) * C50882) *
               C50660 * C272) *
              C50631)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
             C8006 + C8006 + C50793 * C298) *
                C2267 +
            (C8049 + C8050) * C50602) *
               C50882 +
           ((C8000 * C449 + C8420 + C8420 + C50881 * C469 + C8002 * C867 +
             C8419 + C8419 + C50793 * C877) *
                C2267 +
            (C8458 + C8457) * C50602) *
               C50821) *
              C50660 * C50644 * C113 -
          ((C8768 * C50602 + (C8457 + C8458) * C2267) * C50821 +
           ((C8052 + C8051) * C50602 + (C8050 + C8049) * C2267) * C50882) *
              C50660 * C50644 * C114 +
          ((C8057 * C2267 + (C8054 + C8053) * C50602) * C50882 +
           ((C8456 + C8455) * C2267 + (C8779 + C8780) * C50602) * C50821) *
              C50660 * C50644 * C115 -
          (((C8002 * C871 + C8773 + C8773 + C50793 * C881 + C8000 * C454 +
             C8774 + C8774 + C50881 * C474) *
                C50602 +
            (C8780 + C8779) * C2267) *
               C50821 +
           ((C8056 + C8055) * C50602 + C8058 * C2267) * C50882) *
              C50660 * C50644 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
              C8006 + C8006 + C50793 * C298) *
                 C2267 +
             (C8049 + C8050) * C50602) *
                C50882 +
            ((C14001 + C14002) * C2267 + C13977 * C50602) * C50821) *
               C443 -
           ((C13978 * C50602 + (C14003 + C14004) * C2267) * C50821 +
            (C13983 * C50602 + (C14002 + C14001) * C2267) * C50882) *
               C444 +
           (((C14004 + C14003) * C2267 + C13984 * C50602) * C50882 +
            ((C8000 * C1824 + C10292 + C10292 + C50881 * C1832 + C8002 * C4601 +
              C10291 + C10291 + C50793 * C4609) *
                 C2267 +
             (C14005 + C14006) * C50602) *
                C50821) *
               C445) *
              C50644 * C273 +
          (((C13977 * C2267 + (C8456 + C8455) * C50602) * C50882 +
            (C13984 * C2267 + (C8461 + C8462) * C50602) * C50821) *
               C444 -
           ((C8768 * C50602 + C13983 * C2267) * C50821 +
            ((C8052 + C8051) * C50602 + (C8050 + C8049) * C2267) * C50882) *
               C443 -
           (((C8002 * C6064 + C10287 + C10287 + C50793 * C6066 + C8000 * C1822 +
              C10288 + C10288 + C50881 * C1830) *
                 C50602 +
             (C14006 + C14005) * C2267) *
                C50821 +
            ((C8462 + C8461) * C50602 + C13978 * C2267) * C50882) *
               C445) *
              C50644 * C50631)) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
              C8006 + C8006 + C50793 * C298) *
                 C2267 +
             (C8049 + C8050) * C50602) *
                C50882 +
            ((C14001 + C14002) * C2267 + C13977 * C50602) * C50821) *
               C50869 -
           ((C13978 * C50602 + (C14003 + C14004) * C2267) * C50821 +
            (C13983 * C50602 + (C14002 + C14001) * C2267) * C50882) *
               C50724) *
              C50644 * C50911 +
          (((C13977 * C2267 + C14395 * C50602) * C50882 +
            (C13984 * C2267 + (C8461 + C8462) * C50602) * C50821) *
               C50724 -
           ((C8768 * C50602 + C13983 * C2267) * C50821 +
            ((C8052 + C8051) * C50602 + (C8050 + C8049) * C2267) * C50882) *
               C50869) *
              C50644 * C50912 +
          (((C8057 * C2267 + (C8054 + C8053) * C50602) * C50882 +
            (C14395 * C2267 + (C8779 + C8780) * C50602) * C50821) *
               C50869 -
           (((C8002 * C1190 + C8437 + C8437 + C50793 * C1198 + C8000 * C453 +
              C8438 + C8438 + C50881 * C473) *
                 C50602 +
             (C8462 + C8461) * C2267) *
                C50821 +
            ((C8780 + C8779) * C50602 + C8768 * C2267) * C50882) *
               C50724) *
              C50644 * C618)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
             C8006 + C8006 + C50793 * C298) *
                C2267 +
            (C8049 + C8050) * C50602) *
               C50882 +
           ((C8000 * C449 + C8420 + C8420 + C50881 * C469 + C8002 * C867 +
             C8419 + C8419 + C50793 * C877) *
                C2267 +
            (C8458 + C8457) * C50602) *
               C50821) *
              C50660 * C50644 * C113 -
          ((C8768 * C50602 + (C8457 + C8458) * C2267) * C50821 +
           ((C8052 + C8051) * C50602 + (C8050 + C8049) * C2267) * C50882) *
              C50660 * C50644 * C114 +
          ((C8057 * C2267 + (C8054 + C8053) * C50602) * C50882 +
           ((C8456 + C8455) * C2267 + (C8779 + C8780) * C50602) * C50821) *
              C50660 * C50644 * C115 -
          (((C8002 * C871 + C8773 + C8773 + C50793 * C881 + C8000 * C454 +
             C8774 + C8774 + C50881 * C474) *
                C50602 +
            (C8780 + C8779) * C2267) *
               C50821 +
           ((C8056 + C8055) * C50602 + C8058 * C2267) * C50882) *
              C50660 * C50644 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
              C8006 + C8006 + C50793 * C298) *
                 C2267 +
             (C8049 + C8050) * C50602) *
                C50882 +
            ((C8000 * C449 + C8420 + C8420 + C50881 * C469 + C8002 * C867 +
              C8419 + C8419 + C50793 * C877) *
                 C2267 +
             (C8458 + C8457) * C50602) *
                C50821) *
               C50660 * C270 -
           (((C9000 + C8999) * C50602 +
             (C8002 * C1540 + C8976 + C8976 + C50793 * C1548 + C8000 * C867 +
              C8975 + C8975 + C50881 * C877) *
                 C2267) *
                C50821 +
            ((C8255 + C8256) * C50602 +
             (C8002 * C279 + C8217 + C8217 + C50793 * C299 + C8000 * C278 +
              C8218 + C8218 + C50881 * C298) *
                 C2267) *
                C50882) *
               C50660 * C271 +
           (((C8000 * C279 + C8219 + C8219 + C50881 * C299 + C8002 * C1079 +
              C8220 + C8220 + C50793 * C1087) *
                 C2267 +
             (C8257 + C8258) * C50602) *
                C50882 +
            ((C8000 * C1540 + C9896 + C9896 + C50881 * C1548 + C8002 * C3263 +
              C9895 + C9895 + C50793 * C3269) *
                 C2267 +
             (C13777 + C13778) * C50602) *
                C50821) *
               C50660 * C272) *
              C273 +
          ((((C8256 + C8255) * C2267 + (C8254 + C8253) * C50602) * C50882 +
            ((C8999 + C9000) * C2267 + (C9001 + C9002) * C50602) * C50821) *
               C50660 * C271 -
           ((C8768 * C50602 + (C8457 + C8458) * C2267) * C50821 +
            ((C8052 + C8051) * C50602 + (C8050 + C8049) * C2267) * C50882) *
               C50660 * C270 -
           (((C8002 * C3265 + C9891 + C9891 + C50793 * C3271 + C8000 * C1538 +
              C9892 + C9892 + C50881 * C1546) *
                 C50602 +
             (C13778 + C13777) * C2267) *
                C50821 +
            ((C8260 + C8259) * C50602 + (C8258 + C8257) * C2267) * C50882) *
               C50660 * C272) *
              C50631)) /
            (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
              C8006 + C8006 + C50793 * C298) *
                 C2267 +
             (C8049 + C8050) * C50602) *
                C50882 +
            ((C14001 + C14002) * C2267 + C13977 * C50602) * C50821) *
               C50660 * C50913 -
           ((C14663 * C50602 + (C14673 + C14672) * C2267) * C50821 +
            ((C8255 + C8256) * C50602 +
             (C8002 * C279 + C8217 + C8217 + C50793 * C299 + C8000 * C278 +
              C8218 + C8218 + C50881 * C298) *
                 C2267) *
                C50882) *
               C50660 * C50914 +
           (((C8000 * C279 + C8219 + C8219 + C50881 * C299 + C8002 * C1079 +
              C8220 + C8220 + C50793 * C1087) *
                 C2267 +
             (C8257 + C8258) * C50602) *
                C50882 +
            ((C8000 * C1540 + C9896 + C9896 + C50881 * C1548 + C8002 * C3263 +
              C9895 + C9895 + C50793 * C3269) *
                 C2267 +
             (C13777 + C13778) * C50602) *
                C50821) *
               C50660 * C1306) *
              C50860 +
          ((((C8256 + C8255) * C2267 + (C8254 + C8253) * C50602) * C50882 +
            (C14658 * C2267 + (C9001 + C9002) * C50602) * C50821) *
               C50660 * C50914 -
           ((C8768 * C50602 + C13983 * C2267) * C50821 +
            ((C8052 + C8051) * C50602 + (C8050 + C8049) * C2267) * C50882) *
               C50660 * C50913 -
           (((C8002 * C3265 + C9891 + C9891 + C50793 * C3271 + C8000 * C1538 +
              C9892 + C9892 + C50881 * C1546) *
                 C50602 +
             (C13778 + C13777) * C2267) *
                C50821 +
            ((C8260 + C8259) * C50602 + (C8258 + C8257) * C2267) * C50882) *
               C50660 * C1306) *
              C50631)) /
        (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
              C8006 + C8006 + C50793 * C298) *
                 C2267 +
             (C8049 + C8050) * C50602) *
                C50882 +
            ((C14001 + C14002) * C2267 + C13977 * C50602) * C50821) *
               C50869 -
           ((C13978 * C50602 + (C14003 + C14004) * C2267) * C50821 +
            (C13983 * C50602 + (C14002 + C14001) * C2267) * C50882) *
               C50724) *
              C50913 +
          ((((C14672 + C14673) * C2267 + C14658 * C50602) * C50882 +
            ((C15210 + C15211) * C2267 + (C14674 + C14675) * C50602) * C50821) *
               C50724 -
           ((C14663 * C50602 + (C14673 + C14672) * C2267) * C50821 +
            ((C8255 + C8256) * C50602 +
             (C8002 * C279 + C8217 + C8217 + C50793 * C299 + C8000 * C278 +
              C8218 + C8218 + C50881 * C298) *
                 C2267) *
                C50882) *
               C50869) *
              C50914 +
          ((((C8000 * C279 + C8219 + C8219 + C50881 * C299 + C8002 * C1079 +
              C8220 + C8220 + C50793 * C1087) *
                 C2267 +
             (C8257 + C8258) * C50602) *
                C50882 +
            ((C15870 + C15871) * C2267 + (C13777 + C13778) * C50602) * C50821) *
               C50869 -
           (((C8002 * C3698 + C15862 + C15862 + C50793 * C3702 + C8000 * C2685 +
              C15863 + C15863 + C50881 * C2691) *
                 C50602 +
             (C8002 * C3699 + C15864 + C15864 + C50793 * C3703 + C8000 * C2684 +
              C15865 + C15865 + C50881 * C2690) *
                 C2267) *
                C50821 +
            ((C13778 + C13777) * C50602 + (C15871 + C15870) * C2267) * C50882) *
               C50724) *
              C1306) *
         C50625) /
        (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
             C8006 + C8006 + C50793 * C298) *
                C2267 +
            (C8049 + C8050) * C50602) *
               C50882 +
           ((C14001 + C14002) * C2267 + C13977 * C50602) * C50821) *
              C50660 * C1071 -
          ((C14663 * C50602 + (C14673 + C14672) * C2267) * C50821 +
           ((C8255 + C8256) * C50602 +
            (C8002 * C279 + C8217 + C8217 + C50793 * C299 + C8000 * C278 +
             C8218 + C8218 + C50881 * C298) *
                C2267) *
               C50882) *
              C50660 * C1072 +
          (((C8000 * C279 + C8219 + C8219 + C50881 * C299 + C8002 * C1079 +
             C8220 + C8220 + C50793 * C1087) *
                C2267 +
            (C8257 + C8258) * C50602) *
               C50882 +
           ((C8000 * C1540 + C9896 + C9896 + C50881 * C1548 + C8002 * C3263 +
             C9895 + C9895 + C50793 * C3269) *
                C2267 +
            (C13777 + C13778) * C50602) *
               C50821) *
              C50660 * C1073 -
          (((C8002 * C4196 + C15000 + C15000 + C50793 * C4200 + C8000 * C3264 +
             C15001 + C15001 + C50881 * C3270) *
                C50602 +
            (C8002 * C4197 + C15002 + C15002 + C50793 * C4201 + C8000 * C3263 +
             C15003 + C15003 + C50881 * C3269) *
                C2267) *
               C50821 +
           ((C8002 * C2482 + C9249 + C9249 + C50793 * C2488 + C8000 * C1078 +
             C9250 + C9250 + C50881 * C1086) *
                C50602 +
            (C8002 * C2481 + C9251 + C9251 + C50793 * C2487 + C8000 * C1079 +
             C9252 + C9252 + C50881 * C1087) *
                C2267) *
               C50882) *
              C50660 * C1074) *
         C50625) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
              C8006 + C8006 + C50793 * C298) *
                 C2267 +
             (C8049 + C8050) * C50602) *
                C50882 +
            ((C14001 + C14002) * C2267 + C13977 * C50602) * C50821) *
               C50660 * C1000 -
           ((C14663 * C50602 + (C14673 + C14672) * C2267) * C50821 +
            ((C8255 + C8256) * C50602 +
             (C8002 * C279 + C8217 + C8217 + C50793 * C299 + C8000 * C278 +
              C8218 + C8218 + C50881 * C298) *
                 C2267) *
                C50882) *
               C50660 * C50696) *
              C1002 +
          ((((C8256 + C8255) * C2267 + (C8254 + C8253) * C50602) * C50882 +
            (C14658 * C2267 + (C9001 + C9002) * C50602) * C50821) *
               C50660 * C50696 -
           ((C8768 * C50602 + C13983 * C2267) * C50821 +
            ((C8052 + C8051) * C50602 + (C8050 + C8049) * C2267) * C50882) *
               C50660 * C1000) *
              C1003 +
          (((C8057 * C2267 + (C8054 + C8053) * C50602) * C50882 +
            (C14395 * C2267 + (C8779 + C8780) * C50602) * C50821) *
               C50660 * C1000 -
           (((C8002 * C1537 + C8989 + C8989 + C50793 * C1545 + C8000 * C870 +
              C8990 + C8990 + C50881 * C880) *
                 C50602 +
             (C9002 + C9001) * C2267) *
                C50821 +
            ((C8621 + C8620) * C50602 + C8609 * C2267) * C50882) *
               C50660 * C50696) *
              C1004)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
              C8006 + C8006 + C50793 * C298) *
                 C2267 +
             (C8049 + C8050) * C50602) *
                C50882 +
            ((C14001 + C14002) * C2267 + C13977 * C50602) * C50821) *
               C443 -
           ((C13978 * C50602 + (C14003 + C14004) * C2267) * C50821 +
            (C13983 * C50602 + (C14002 + C14001) * C2267) * C50882) *
               C444 +
           (((C14004 + C14003) * C2267 + C13984 * C50602) * C50882 +
            ((C8000 * C1824 + C10292 + C10292 + C50881 * C1832 + C8002 * C4601 +
              C10291 + C10291 + C50793 * C4609) *
                 C2267 +
             (C14005 + C14006) * C50602) *
                C50821) *
               C445) *
              C1000 +
          ((((C14672 + C14673) * C2267 + C14658 * C50602) * C50882 +
            ((C15210 + C15211) * C2267 + (C14674 + C14675) * C50602) * C50821) *
               C444 -
           ((C14663 * C50602 + (C14673 + C14672) * C2267) * C50821 +
            ((C8255 + C8256) * C50602 +
             (C8002 * C279 + C8217 + C8217 + C50793 * C299 + C8000 * C278 +
              C8218 + C8218 + C50881 * C298) *
                 C2267) *
                C50882) *
               C443 -
           (((C8002 * C4598 + C15202 + C15202 + C50793 * C4606 + C8000 * C4599 +
              C15203 + C15203 + C50881 * C4607) *
                 C50602 +
             (C8002 * C4600 + C15204 + C15204 + C50793 * C4608 + C8000 * C4601 +
              C15205 + C15205 + C50881 * C4609) *
                 C2267) *
                C50821 +
            ((C14675 + C14674) * C50602 + (C15211 + C15210) * C2267) * C50882) *
               C445) *
              C50696) *
         C50625) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
               C8006 + C8006 + C50793 * C298) *
                  C2267 +
              (C8049 + C8050) * C50602) *
                 C50882 +
             ((C14001 + C14002) * C2267 + C13977 * C50602) * C50821) *
                C50869 -
            ((C13978 * C50602 + (C14003 + C14004) * C2267) * C50821 +
             (C13983 * C50602 + (C14002 + C14001) * C2267) * C50882) *
                C50724) *
               C1000 +
           ((((C14672 + C14673) * C2267 + C14658 * C50602) * C50882 +
             ((C15210 + C15211) * C2267 + (C14674 + C14675) * C50602) *
                 C50821) *
                C50724 -
            ((C14663 * C50602 + (C14673 + C14672) * C2267) * C50821 +
             ((C8255 + C8256) * C50602 +
              (C8002 * C279 + C8217 + C8217 + C50793 * C299 + C8000 * C278 +
               C8218 + C8218 + C50881 * C298) *
                  C2267) *
                 C50882) *
                C50869) *
               C50696) *
              C50860 +
          ((((C13977 * C2267 + C14395 * C50602) * C50882 +
             (C13984 * C2267 + (C8461 + C8462) * C50602) * C50821) *
                C50724 -
            ((C8768 * C50602 + C13983 * C2267) * C50821 +
             ((C8052 + C8051) * C50602 + (C8050 + C8049) * C2267) * C50882) *
                C50869) *
               C1000 +
           ((((C8256 + C8255) * C2267 + (C8254 + C8253) * C50602) * C50882 +
             (C14658 * C2267 + (C9001 + C9002) * C50602) * C50821) *
                C50869 -
            (((C8002 * C2686 + C9399 + C9399 + C50793 * C2692 + C8000 * C1191 +
               C9400 + C9400 + C50881 * C1199) *
                  C50602 +
              (C14675 + C14674) * C2267) *
                 C50821 +
             ((C9002 + C9001) * C50602 + C14663 * C2267) * C50882) *
                C50724) *
               C50696) *
              C50631)) /
        (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
              C8006 + C8006 + C50793 * C298) *
                 C2267 +
             (C8049 + C8050) * C50602) *
                C50882 +
            ((C14001 + C14002) * C2267 + C13977 * C50602) * C50821) *
               C50660 * C1000 -
           ((C14663 * C50602 + (C14673 + C14672) * C2267) * C50821 +
            ((C8255 + C8256) * C50602 +
             (C8002 * C279 + C8217 + C8217 + C50793 * C299 + C8000 * C278 +
              C8218 + C8218 + C50881 * C298) *
                 C2267) *
                C50882) *
               C50660 * C50696) *
              C1002 +
          ((((C8256 + C8255) * C2267 + (C8254 + C8253) * C50602) * C50882 +
            (C14658 * C2267 + (C9001 + C9002) * C50602) * C50821) *
               C50660 * C50696 -
           ((C8768 * C50602 + C13983 * C2267) * C50821 +
            ((C8052 + C8051) * C50602 + (C8050 + C8049) * C2267) * C50882) *
               C50660 * C1000) *
              C1003 +
          (((C8057 * C2267 + (C8054 + C8053) * C50602) * C50882 +
            (C14395 * C2267 + (C8779 + C8780) * C50602) * C50821) *
               C50660 * C1000 -
           (((C8002 * C1537 + C8989 + C8989 + C50793 * C1545 + C8000 * C870 +
              C8990 + C8990 + C50881 * C880) *
                 C50602 +
             (C9002 + C9001) * C2267) *
                C50821 +
            ((C8621 + C8620) * C50602 + C8609 * C2267) * C50882) *
               C50660 * C50696) *
              C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
             C8006 + C8006 + C50793 * C298) *
                C2267 +
            (C8049 + C8050) * C50602) *
               C50882 +
           ((C14001 + C14002) * C2267 + C13977 * C50602) * C50821) *
              C50660 * C1071 -
          ((C14663 * C50602 + (C14673 + C14672) * C2267) * C50821 +
           ((C8255 + C8256) * C50602 +
            (C8002 * C279 + C8217 + C8217 + C50793 * C299 + C8000 * C278 +
             C8218 + C8218 + C50881 * C298) *
                C2267) *
               C50882) *
              C50660 * C1072 +
          (((C8000 * C279 + C8219 + C8219 + C50881 * C299 + C8002 * C1079 +
             C8220 + C8220 + C50793 * C1087) *
                C2267 +
            (C8257 + C8258) * C50602) *
               C50882 +
           ((C8000 * C1540 + C9896 + C9896 + C50881 * C1548 + C8002 * C3263 +
             C9895 + C9895 + C50793 * C3269) *
                C2267 +
            (C13777 + C13778) * C50602) *
               C50821) *
              C50660 * C1073 -
          (((C8002 * C4196 + C15000 + C15000 + C50793 * C4200 + C8000 * C3264 +
             C15001 + C15001 + C50881 * C3270) *
                C50602 +
            (C8002 * C4197 + C15002 + C15002 + C50793 * C4201 + C8000 * C3263 +
             C15003 + C15003 + C50881 * C3269) *
                C2267) *
               C50821 +
           ((C8002 * C2482 + C9249 + C9249 + C50793 * C2488 + C8000 * C1078 +
             C9250 + C9250 + C50881 * C1086) *
                C50602 +
            (C8002 * C2481 + C9251 + C9251 + C50793 * C2487 + C8000 * C1079 +
             C9252 + C9252 + C50881 * C1087) *
                C2267) *
               C50882) *
              C50660 * C1074) *
         C50625) /
            (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
               C8006 + C8006 + C50793 * C298) *
                  C2267 +
              (C8049 + C8050) * C50602) *
                 C50882 +
             ((C14001 + C14002) * C2267 + C13977 * C50602) * C50821) *
                C1651 -
            ((C13978 * C50602 + (C14003 + C14004) * C2267) * C50821 +
             (C13983 * C50602 + (C14002 + C14001) * C2267) * C50882) *
                C50724) *
               C50868 +
           ((((C14672 + C14673) * C2267 + C14658 * C50602) * C50882 +
             ((C15210 + C15211) * C2267 + (C14674 + C14675) * C50602) *
                 C50821) *
                C50724 -
            ((C14663 * C50602 + (C14673 + C14672) * C2267) * C50821 +
             ((C8255 + C8256) * C50602 +
              (C8002 * C279 + C8217 + C8217 + C50793 * C299 + C8000 * C278 +
               C8218 + C8218 + C50881 * C298) *
                  C2267) *
                 C50882) *
                C1651) *
               C50696) *
              C50860 +
          ((((C13977 * C2267 + C14395 * C50602) * C50882 +
             (C13984 * C2267 + (C8461 + C8462) * C50602) * C50821) *
                C50724 -
            ((C8768 * C50602 + C13983 * C2267) * C50821 +
             ((C8052 + C8051) * C50602 + (C8050 + C8049) * C2267) * C50882) *
                C1651) *
               C50868 +
           ((((C8256 + C8255) * C2267 + (C8254 + C8253) * C50602) * C50882 +
             (C14658 * C2267 + (C9001 + C9002) * C50602) * C50821) *
                C1651 -
            (((C8002 * C2686 + C9399 + C9399 + C50793 * C2692 + C8000 * C1191 +
               C9400 + C9400 + C50881 * C1199) *
                  C50602 +
              (C14675 + C14674) * C2267) *
                 C50821 +
             ((C9002 + C9001) * C50602 + C14663 * C2267) * C50882) *
                C50724) *
               C50696) *
              C50631)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
              C8006 + C8006 + C50793 * C298) *
                 C2267 +
             (C8049 + C8050) * C50602) *
                C50882 +
            ((C14001 + C14002) * C2267 + C13977 * C50602) * C50821) *
               C50915 -
           ((C13978 * C50602 + (C14003 + C14004) * C2267) * C50821 +
            (C13983 * C50602 + (C14002 + C14001) * C2267) * C50882) *
               C50916 +
           (((C14004 + C14003) * C2267 + C13984 * C50602) * C50882 +
            ((C16402 + C16403) * C2267 + (C14005 + C14006) * C50602) * C50821) *
               C2067) *
              C50868 +
          ((((C14672 + C14673) * C2267 + C14658 * C50602) * C50882 +
            ((C15210 + C15211) * C2267 + (C14674 + C14675) * C50602) * C50821) *
               C50916 -
           ((C14663 * C50602 + (C14673 + C14672) * C2267) * C50821 +
            ((C8255 + C8256) * C50602 +
             (C8002 * C279 + C8217 + C8217 + C50793 * C299 + C8000 * C278 +
              C8218 + C8218 + C50881 * C298) *
                 C2267) *
                C50882) *
               C50915 -
           (((C8002 * C4598 + C15202 + C15202 + C50793 * C4606 + C8000 * C4599 +
              C15203 + C15203 + C50881 * C4607) *
                 C50602 +
             (C8002 * C4600 + C15204 + C15204 + C50793 * C4608 + C8000 * C4601 +
              C15205 + C15205 + C50881 * C4609) *
                 C2267) *
                C50821 +
            ((C14675 + C14674) * C50602 + (C15211 + C15210) * C2267) * C50882) *
               C2067) *
              C50696) *
         C50625) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
              C8006 + C8006 + C50793 * C298) *
                 C2267 +
             (C8049 + C8050) * C50602) *
                C50882 +
            ((C14001 + C14002) * C2267 + C13977 * C50602) * C50821) *
               C1651 -
           ((C13978 * C50602 + (C14003 + C14004) * C2267) * C50821 +
            (C13983 * C50602 + (C14002 + C14001) * C2267) * C50882) *
               C50724) *
              C270 +
          ((((C14672 + C14673) * C2267 + C14658 * C50602) * C50882 +
            ((C15210 + C15211) * C2267 + (C14674 + C14675) * C50602) * C50821) *
               C50724 -
           ((C14663 * C50602 + (C14673 + C14672) * C2267) * C50821 +
            ((C8255 + C8256) * C50602 +
             (C8002 * C279 + C8217 + C8217 + C50793 * C299 + C8000 * C278 +
              C8218 + C8218 + C50881 * C298) *
                 C2267) *
                C50882) *
               C1651) *
              C271 +
          ((((C8000 * C279 + C8219 + C8219 + C50881 * C299 + C8002 * C1079 +
              C8220 + C8220 + C50793 * C1087) *
                 C2267 +
             (C8257 + C8258) * C50602) *
                C50882 +
            ((C15870 + C15871) * C2267 + (C13777 + C13778) * C50602) * C50821) *
               C1651 -
           (((C8002 * C3698 + C15862 + C15862 + C50793 * C3702 + C8000 * C2685 +
              C15863 + C15863 + C50881 * C2691) *
                 C50602 +
             (C8002 * C3699 + C15864 + C15864 + C50793 * C3703 + C8000 * C2684 +
              C15865 + C15865 + C50881 * C2690) *
                 C2267) *
                C50821 +
            ((C13778 + C13777) * C50602 + (C15871 + C15870) * C2267) * C50882) *
               C50724) *
              C272) *
         C50625) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
              C8006 + C8006 + C50793 * C298) *
                 C2267 +
             (C8049 + C8050) * C50602) *
                C50882 +
            ((C14001 + C14002) * C2267 + C13977 * C50602) * C50821) *
               C1651 -
           ((C13978 * C50602 + (C14003 + C14004) * C2267) * C50821 +
            (C13983 * C50602 + (C14002 + C14001) * C2267) * C50882) *
               C50724) *
              C50644 * C1002 +
          (((C13977 * C2267 + C14395 * C50602) * C50882 +
            (C13984 * C2267 + (C8461 + C8462) * C50602) * C50821) *
               C50724 -
           ((C8768 * C50602 + C13983 * C2267) * C50821 +
            ((C8052 + C8051) * C50602 + (C8050 + C8049) * C2267) * C50882) *
               C1651) *
              C50644 * C1003 +
          (((C8057 * C2267 + (C8054 + C8053) * C50602) * C50882 +
            (C14395 * C2267 + (C8779 + C8780) * C50602) * C50821) *
               C1651 -
           (((C8002 * C1190 + C8437 + C8437 + C50793 * C1198 + C8000 * C453 +
              C8438 + C8438 + C50881 * C473) *
                 C50602 +
             (C8462 + C8461) * C2267) *
                C50821 +
            ((C8780 + C8779) * C50602 + C8768 * C2267) * C50882) *
               C50724) *
              C50644 * C1004)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
             C8006 + C8006 + C50793 * C298) *
                C2267 +
            (C8049 + C8050) * C50602) *
               C50882 +
           ((C14001 + C14002) * C2267 + C13977 * C50602) * C50821) *
              C1817 -
          ((C13978 * C50602 + (C14003 + C14004) * C2267) * C50821 +
           (C13983 * C50602 + (C14002 + C14001) * C2267) * C50882) *
              C1818 +
          (((C14004 + C14003) * C2267 + C13984 * C50602) * C50882 +
           ((C16402 + C16403) * C2267 + (C14005 + C14006) * C50602) * C50821) *
              C1819 -
          (((C8002 * C6487 + C16394 + C16394 + C50793 * C6491 + C8000 * C5514 +
             C16395 + C16395 + C50881 * C5520) *
                C50602 +
            (C8002 * C6488 + C16396 + C16396 + C50793 * C6492 + C8000 * C5513 +
             C16397 + C16397 + C50881 * C5519) *
                C2267) *
               C50821 +
           ((C14006 + C14005) * C50602 + (C16403 + C16402) * C2267) * C50882) *
              C1820) *
         C50644 * C50625) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
              C8006 + C8006 + C50793 * C298) *
                 C2267 +
             (C8049 + C8050) * C50602) *
                C50882 +
            ((C14001 + C14002) * C2267 + C13977 * C50602) * C50821) *
               C50915 -
           ((C13978 * C50602 + (C14003 + C14004) * C2267) * C50821 +
            (C13983 * C50602 + (C14002 + C14001) * C2267) * C50882) *
               C50916 +
           (((C14004 + C14003) * C2267 + C13984 * C50602) * C50882 +
            ((C16402 + C16403) * C2267 + (C14005 + C14006) * C50602) * C50821) *
               C2067) *
              C50644 * C50860 +
          (((C13977 * C2267 + C14395 * C50602) * C50882 +
            (C13984 * C2267 + (C8461 + C8462) * C50602) * C50821) *
               C50916 -
           ((C8768 * C50602 + C13983 * C2267) * C50821 +
            ((C8052 + C8051) * C50602 + (C8050 + C8049) * C2267) * C50882) *
               C50915 -
           (((C8002 * C6064 + C10287 + C10287 + C50793 * C6066 + C8000 * C1822 +
              C10288 + C10288 + C50881 * C1830) *
                 C50602 +
             (C14006 + C14005) * C2267) *
                C50821 +
            ((C8462 + C8461) * C50602 + C13978 * C2267) * C50882) *
               C2067) *
              C50644 * C50631)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
              C8006 + C8006 + C50793 * C298) *
                 C2267 +
             (C8049 + C8050) * C50602) *
                C50882 +
            ((C14001 + C14002) * C2267 + C13977 * C50602) * C50821) *
               C1651 -
           ((C13978 * C50602 + (C14003 + C14004) * C2267) * C50821 +
            (C13983 * C50602 + (C14002 + C14001) * C2267) * C50882) *
               C50724) *
              C50644 * C1002 +
          (((C13977 * C2267 + C14395 * C50602) * C50882 +
            (C13984 * C2267 + (C8461 + C8462) * C50602) * C50821) *
               C50724 -
           ((C8768 * C50602 + C13983 * C2267) * C50821 +
            ((C8052 + C8051) * C50602 + (C8050 + C8049) * C2267) * C50882) *
               C1651) *
              C50644 * C1003 +
          (((C8057 * C2267 + (C8054 + C8053) * C50602) * C50882 +
            (C14395 * C2267 + (C8779 + C8780) * C50602) * C50821) *
               C1651 -
           (((C8002 * C1190 + C8437 + C8437 + C50793 * C1198 + C8000 * C453 +
              C8438 + C8438 + C50881 * C473) *
                 C50602 +
             (C8462 + C8461) * C2267) *
                C50821 +
            ((C8780 + C8779) * C50602 + C8768 * C2267) * C50882) *
               C50724) *
              C50644 * C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
              C8006 + C8006 + C50793 * C298) *
                 C2267 +
             (C8049 + C8050) * C50602) *
                C50882 +
            ((C14001 + C14002) * C2267 + C13977 * C50602) * C50821) *
               C1651 -
           ((C13978 * C50602 + (C14003 + C14004) * C2267) * C50821 +
            (C13983 * C50602 + (C14002 + C14001) * C2267) * C50882) *
               C50724) *
              C270 +
          ((((C14672 + C14673) * C2267 + C14658 * C50602) * C50882 +
            ((C15210 + C15211) * C2267 + (C14674 + C14675) * C50602) * C50821) *
               C50724 -
           ((C14663 * C50602 + (C14673 + C14672) * C2267) * C50821 +
            ((C8255 + C8256) * C50602 +
             (C8002 * C279 + C8217 + C8217 + C50793 * C299 + C8000 * C278 +
              C8218 + C8218 + C50881 * C298) *
                 C2267) *
                C50882) *
               C1651) *
              C271 +
          ((((C8000 * C279 + C8219 + C8219 + C50881 * C299 + C8002 * C1079 +
              C8220 + C8220 + C50793 * C1087) *
                 C2267 +
             (C8257 + C8258) * C50602) *
                C50882 +
            ((C15870 + C15871) * C2267 + (C13777 + C13778) * C50602) * C50821) *
               C1651 -
           (((C8002 * C3698 + C15862 + C15862 + C50793 * C3702 + C8000 * C2685 +
              C15863 + C15863 + C50881 * C2691) *
                 C50602 +
             (C8002 * C3699 + C15864 + C15864 + C50793 * C3703 + C8000 * C2684 +
              C15865 + C15865 + C50881 * C2690) *
                 C2267) *
                C50821 +
            ((C13778 + C13777) * C50602 + (C15871 + C15870) * C2267) * C50882) *
               C50724) *
              C272) *
         C50625) /
            (p * q * std::sqrt(p + q));
    d2ee[30] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 +
                     C2271 * C278 + C2277 + C2277 + C2265 * C298 +
                     C2273 * C279 + C2278 + C2278 + C2266 * C299) *
                        C2267 +
                    (C2327 + C2328 + C2329) * C50602) *
                       C50757 * C50660 * C50868 -
                   ((C2533 + C2534 + C2535) * C50602 +
                    (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 +
                     C2271 * C279 + C2501 + C2501 + C2265 * C299 +
                     C2269 * C278 + C2502 + C2502 + C2264 * C298) *
                        C2267) *
                       C50757 * C50660 * C50696) *
                      C50911 +
                  (((C2535 + C2534 + C2533) * C2267 +
                    (C2903 + C2904 + C2905) * C50602) *
                       C50757 * C50660 * C50696 -
                   ((C2330 + C2331 + C2332) * C50602 +
                    (C2329 + C2328 + C2327) * C2267) *
                       C50757 * C50660 * C50868) *
                      C50912 +
                  (((C2332 + C2331 + C2330) * C2267 +
                    (C2333 + C2334 + C2335) * C50602) *
                       C50757 * C50660 * C50868 -
                   ((C2273 * C1076 + C2894 + C2894 + C2266 * C1084 +
                     C2271 * C282 + C2895 + C2895 + C2265 * C302 +
                     C2269 * C275 + C2896 + C2896 + C2264 * C295) *
                        C50602 +
                    (C2905 + C2904 + C2903) * C2267) *
                       C50757 * C50660 * C50696) *
                      C618)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C117 * C119 + C141 + C141 + C50741 * C133) * C106 +
                    C168 * C107 + C169 * C108 + C170 * C109) *
                       C50757 * C50660 * C50868 -
                   (C340 * C109 + C341 * C108 + C342 * C107 +
                    (C117 * C278 + C315 + C315 + C50741 * C298) * C106) *
                       C50757 * C50660 * C50696) *
                      C50911 +
                  ((C342 * C106 + C341 * C107 + C340 * C108 + C628 * C109) *
                       C50757 * C50660 * C50696 -
                   (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                       C50757 * C50660 * C50868) *
                      C50912 +
                  ((C169 * C106 + C170 * C107 + C171 * C108 + C172 * C109) *
                       C50757 * C50660 * C50868 -
                   ((C117 * C619 + C625 + C625 + C50741 * C621) * C109 +
                    C628 * C108 + C340 * C107 + C341 * C106) *
                       C50757 * C50660 * C50696) *
                      C618)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C141 + C141 + C50741 * C133) * C2267 +
                     C168 * C50602) *
                        C5200 +
                    (C5563 + C5525) * C5201 + C5569 * C5202) *
                       C50660 * C50868 -
                   ((C5365 * C50602 +
                     (C117 * C1193 + C1206 + C1206 + C50741 * C1201) * C2267) *
                        C5202 +
                    (C900 * C50602 +
                     (C117 * C867 + C883 + C883 + C50741 * C877) * C2267) *
                        C5201 +
                    (C342 * C50602 +
                     (C117 * C278 + C315 + C315 + C50741 * C298) * C2267) *
                        C5200) *
                       C50660 * C50696) *
                      C50911 +
                  (((C342 * C2267 + C341 * C50602) * C5200 +
                    (C900 * C2267 + C901 * C50602) * C5201 +
                    (C5365 * C2267 + C5720 * C50602) * C5202) *
                       C50660 * C50696 -
                   (C5550 * C5202 + (C5538 + C5537) * C5201 +
                    (C169 * C50602 + C168 * C2267) * C5200) *
                       C50660 * C50868) *
                      C50912 +
                  (((C169 * C2267 + C170 * C50602) * C5200 +
                    (C512 * C2267 + C511 * C50602) * C5201 +
                    (C515 * C2267 + C516 * C50602) * C5202) *
                       C50660 * C50868 -
                   (((C117 * C1190 + C1203 + C1203 + C50741 * C1198) * C50602 +
                     C5720 * C2267) *
                        C5202 +
                    (C902 * C50602 + C901 * C2267) * C5201 +
                    (C340 * C50602 + C341 * C2267) * C5200) *
                       C50660 * C50696) *
                      C618)) /
                    (p * q * std::sqrt(p + q));
    d2ee[31] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C2269 * C119 + C2276 + C2276 + C2264 * C133 +
                      C2271 * C278 + C2277 + C2277 + C2265 * C298 +
                      C2273 * C279 + C2278 + C2278 + C2266 * C299) *
                         C2267 +
                     (C2327 + C2328 + C2329) * C50602) *
                        C50757 * C50869 -
                    ((C2736 + C2737 + C2738) * C50602 +
                     (C2273 * C1540 + C2703 + C2703 + C2266 * C1548 +
                      C2271 * C867 + C2704 + C2704 + C2265 * C877 +
                      C2269 * C449 + C2705 + C2705 + C2264 * C469) *
                         C2267) *
                        C50757 * C50724) *
                       C50868 +
                   (((C2269 * C867 + C3273 + C3273 + C2264 * C877 +
                      C2271 * C1540 + C3274 + C3274 + C2265 * C1548 +
                      C2273 * C3263 + C3275 + C3275 + C2266 * C3269) *
                         C2267 +
                     (C3294 + C3295 + C3296) * C50602) *
                        C50757 * C50724 -
                    ((C2533 + C2534 + C2535) * C50602 +
                     (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 +
                      C2271 * C279 + C2501 + C2501 + C2265 * C299 +
                      C2269 * C278 + C2502 + C2502 + C2264 * C298) *
                         C2267) *
                        C50757 * C50869) *
                       C50696) *
                      C273 +
                  ((((C2738 + C2737 + C2736) * C2267 +
                     (C3067 + C3068 + C3069) * C50602) *
                        C50757 * C50724 -
                    ((C2330 + C2331 + C2332) * C50602 +
                     (C2329 + C2328 + C2327) * C2267) *
                        C50757 * C50869) *
                       C50868 +
                   (((C2535 + C2534 + C2533) * C2267 +
                     (C2903 + C2904 + C2905) * C50602) *
                        C50757 * C50869 -
                    ((C2273 * C3265 + C3285 + C3285 + C2266 * C3271 +
                      C2271 * C1538 + C3286 + C3286 + C2265 * C1546 +
                      C2269 * C869 + C3287 + C3287 + C2264 * C879) *
                         C50602 +
                     (C3296 + C3295 + C3294) * C2267) *
                        C50757 * C50724) *
                       C50696) *
                      C50631)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C141 + C141 + C50741 * C133) * C106 +
                     C168 * C107 + C169 * C108 + C170 * C109) *
                        C50757 * C50869 -
                    (C511 * C109 + C512 * C108 + C513 * C107 +
                     (C117 * C449 + C486 + C486 + C50741 * C469) * C106) *
                        C50757 * C50724) *
                       C50868 +
                   (((C117 * C867 + C883 + C883 + C50741 * C877) * C106 +
                     C900 * C107 + C901 * C108 + C902 * C109) *
                        C50757 * C50724 -
                    (C340 * C109 + C341 * C108 + C342 * C107 +
                     (C117 * C278 + C315 + C315 + C50741 * C298) * C106) *
                        C50757 * C50869) *
                       C50696) *
                      C273 +
                  (((C513 * C106 + C512 * C107 + C511 * C108 + C737 * C109) *
                        C50757 * C50724 -
                    (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                        C50757 * C50869) *
                       C50868 +
                   ((C342 * C106 + C341 * C107 + C340 * C108 + C628 * C109) *
                        C50757 * C50869 -
                    ((C117 * C871 + C893 + C893 + C50741 * C881) * C109 +
                     C902 * C108 + C901 * C107 + C900 * C106) *
                        C50757 * C50724) *
                       C50696) *
                      C50631)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((((C117 * C119 + C141 + C141 + C50741 * C133) * C2267 +
                      C168 * C50602) *
                         C5200 +
                     (C5563 + C5525) * C5201 + C5569 * C5202) *
                        C50869 -
                    ((C5565 + C5566) * C5202 + (C5528 + C5564) * C5201 +
                     (C5525 + C5563) * C5200) *
                        C50724) *
                       C50868 +
                   (((C6092 + C6070) * C5200 + (C6093 + C6073) * C5201 +
                     ((C117 * C4601 + C6074 + C6074 + C50741 * C4609) * C2267 +
                      C6091 * C50602) *
                         C5202) *
                        C50724 -
                    ((C6073 + C6093) * C5202 + (C6070 + C6092) * C5201 +
                     (C342 * C50602 +
                      (C117 * C278 + C315 + C315 + C50741 * C298) * C2267) *
                         C5200) *
                        C50869) *
                       C50696) *
                      C273 +
                  ((((C5537 + C5538) * C5200 + (C5539 + C5540) * C5201 +
                     (C5567 + C5568) * C5202) *
                        C50724 -
                    (C5550 * C5202 + (C5538 + C5537) * C5201 +
                     (C169 * C50602 + C168 * C2267) * C5200) *
                        C50869) *
                       C50868 +
                   (((C342 * C2267 + C341 * C50602) * C5200 +
                     (C6078 + C6079) * C5201 + (C6080 + C6081) * C5202) *
                        C50869 -
                    (((C117 * C6064 + C6082 + C6082 + C50741 * C6066) * C50602 +
                      C6091 * C2267) *
                         C5202 +
                     (C6081 + C6080) * C5201 + (C6079 + C6078) * C5200) *
                        C50724) *
                       C50696) *
                      C50631)) /
                    (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C117 * C119 + C141 + C141 + C50741 * C133) * C106 +
               C168 * C107 + C169 * C108 + C170 * C109) *
                  C50757 * C50660 * C50644 * C113 -
              (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) * C50757 *
                  C50660 * C50644 * C114 +
              (C169 * C106 + C170 * C107 + C171 * C108 + C172 * C109) * C50757 *
                  C50660 * C50644 * C115 -
              ((C117 * C125 + C157 + C157 + C50741 * C139) * C109 +
               C172 * C108 + C171 * C107 + C170 * C106) *
                  C50757 * C50660 * C50644 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C141 + C141 + C50741 * C133) * C106 +
                C168 * C107 + C169 * C108 + C170 * C109) *
                   C50757 * C50660 * C270 -
               (C340 * C109 + C341 * C108 + C342 * C107 +
                (C117 * C278 + C315 + C315 + C50741 * C298) * C106) *
                   C50757 * C50660 * C271 +
               ((C117 * C279 + C316 + C316 + C50741 * C299) * C106 +
                C343 * C107 + C344 * C108 + C345 * C109) *
                   C50757 * C50660 * C272) *
                  C273 +
              ((C342 * C106 + C341 * C107 + C340 * C108 +
                (C117 * C283 + C326 + C326 + C50741 * C303) * C109) *
                   C50757 * C50660 * C271 -
               (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                   C50757 * C50660 * C270 -
               ((C117 * C284 + C327 + C327 + C50741 * C304) * C109 +
                C345 * C108 + C344 * C107 + C343 * C106) *
                   C50757 * C50660 * C272) *
                  C50631)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50741 * C133) * C106 + C168 * C107 +
            C169 * C108 + C170 * C109) *
               C50757 * C443 -
           (C511 * C109 + C512 * C108 + C513 * C107 +
            (C117 * C449 + C486 + C486 + C50741 * C469) * C106) *
               C50757 * C444 +
           ((C117 * C450 + C487 + C487 + C50741 * C470) * C106 + C514 * C107 +
            C515 * C108 + C516 * C109) *
               C50757 * C445) *
              C50644 * C273 +
          ((C513 * C106 + C512 * C107 + C511 * C108 +
            (C117 * C454 + C497 + C497 + C50741 * C474) * C109) *
               C50757 * C444 -
           (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) * C50757 *
               C443 -
           ((C117 * C455 + C498 + C498 + C50741 * C475) * C109 + C516 * C108 +
            C515 * C107 + C514 * C106) *
               C50757 * C445) *
              C50644 * C50631)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 + C2277 +
            C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
            C2266 * C299) *
               C2267 +
           (C2327 + C2328 + C2329) * C50602) *
              C50757 * C50660 * C50644 * C113 -
          ((C2330 + C2331 + C2332) * C50602 + (C2329 + C2328 + C2327) * C2267) *
              C50757 * C50660 * C50644 * C114 +
          ((C2332 + C2331 + C2330) * C2267 + (C2333 + C2334 + C2335) * C50602) *
              C50757 * C50660 * C50644 * C115 -
          ((C2273 * C284 + C2306 + C2306 + C2266 * C304 + C2271 * C283 + C2307 +
            C2307 + C2265 * C303 + C2269 * C123 + C2308 + C2308 +
            C2264 * C137) *
               C50602 +
           (C2335 + C2334 + C2333) * C2267) *
              C50757 * C50660 * C50644 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 +
             C2277 + C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
             C2266 * C299) *
                C2267 +
            (C2327 + C2328 + C2329) * C50602) *
               C50757 * C50660 * C270 -
           ((C2533 + C2534 + C2535) * C50602 +
            (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 + C2271 * C279 +
             C2501 + C2501 + C2265 * C299 + C2269 * C278 + C2502 + C2502 +
             C2264 * C298) *
                C2267) *
               C50757 * C50660 * C271 +
           ((C2269 * C279 + C2503 + C2503 + C2264 * C299 + C2271 * C1079 +
             C2504 + C2504 + C2265 * C1087 + C2273 * C2481 + C2505 + C2505 +
             C2266 * C2487) *
                C2267 +
            (C2536 + C2537 + C2538) * C50602) *
               C50757 * C50660 * C272) *
              C273 +
          (((C2535 + C2534 + C2533) * C2267 +
            (C2269 * C276 + C2515 + C2515 + C2264 * C296 + C2271 * C281 +
             C2516 + C2516 + C2265 * C301 + C2273 * C1077 + C2517 + C2517 +
             C2266 * C1085) *
                C50602) *
               C50757 * C50660 * C271 -
           ((C2330 + C2331 + C2332) * C50602 +
            (C2329 + C2328 + C2327) * C2267) *
               C50757 * C50660 * C270 -
           ((C2273 * C2483 + C2518 + C2518 + C2266 * C2489 + C2271 * C1077 +
             C2519 + C2519 + C2265 * C1085 + C2269 * C281 + C2520 + C2520 +
             C2264 * C301) *
                C50602 +
            (C2538 + C2537 + C2536) * C2267) *
               C50757 * C50660 * C272) *
              C50631)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 +
             C2277 + C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
             C2266 * C299) *
                C2267 +
            (C2327 + C2328 + C2329) * C50602) *
               C50757 * C443 -
           ((C2736 + C2737 + C2738) * C50602 +
            (C2273 * C1540 + C2703 + C2703 + C2266 * C1548 + C2271 * C867 +
             C2704 + C2704 + C2265 * C877 + C2269 * C449 + C2705 + C2705 +
             C2264 * C469) *
                C2267) *
               C50757 * C444 +
           ((C2269 * C450 + C2706 + C2706 + C2264 * C470 + C2271 * C1193 +
             C2707 + C2707 + C2265 * C1201 + C2273 * C2684 + C2708 + C2708 +
             C2266 * C2690) *
                C2267 +
            (C2739 + C2740 + C2741) * C50602) *
               C50757 * C445) *
              C50644 * C273 +
          (((C2738 + C2737 + C2736) * C2267 +
            (C2269 * C447 + C2718 + C2718 + C2264 * C467 + C2271 * C869 +
             C2719 + C2719 + C2265 * C879 + C2273 * C1538 + C2720 + C2720 +
             C2266 * C1546) *
                C50602) *
               C50757 * C444 -
           ((C2330 + C2331 + C2332) * C50602 +
            (C2329 + C2328 + C2327) * C2267) *
               C50757 * C443 -
           ((C2273 * C2686 + C2721 + C2721 + C2266 * C2692 + C2271 * C1191 +
             C2722 + C2722 + C2265 * C1199 + C2269 * C452 + C2723 + C2723 +
             C2264 * C472) *
                C50602 +
            (C2741 + C2740 + C2739) * C2267) *
               C50757 * C445) *
              C50644 * C50631)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50741 * C133) * C2267 +
            C168 * C50602) *
               C5200 +
           ((C117 * C449 + C486 + C486 + C50741 * C469) * C2267 +
            C513 * C50602) *
               C5201 +
           ((C117 * C450 + C487 + C487 + C50741 * C470) * C2267 +
            C514 * C50602) *
               C5202) *
              C50660 * C50644 * C113 -
          ((C515 * C50602 + C514 * C2267) * C5202 +
           (C512 * C50602 + C513 * C2267) * C5201 +
           (C169 * C50602 + C168 * C2267) * C5200) *
              C50660 * C50644 * C114 +
          ((C169 * C2267 + C170 * C50602) * C5200 +
           (C512 * C2267 + C511 * C50602) * C5201 +
           (C515 * C2267 + C516 * C50602) * C5202) *
              C50660 * C50644 * C115 -
          (((C117 * C455 + C498 + C498 + C50741 * C475) * C50602 +
            C516 * C2267) *
               C5202 +
           (C737 * C50602 + C511 * C2267) * C5201 +
           (C171 * C50602 + C170 * C2267) * C5200) *
              C50660 * C50644 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50741 * C133) * C2267 +
             C168 * C50602) *
                C5200 +
            ((C117 * C449 + C486 + C486 + C50741 * C469) * C2267 +
             C513 * C50602) *
                C5201 +
            ((C117 * C450 + C487 + C487 + C50741 * C470) * C2267 +
             C514 * C50602) *
                C5202) *
               C50660 * C270 -
           ((C5365 * C50602 +
             (C117 * C1193 + C1206 + C1206 + C50741 * C1201) * C2267) *
                C5202 +
            (C900 * C50602 +
             (C117 * C867 + C883 + C883 + C50741 * C877) * C2267) *
                C5201 +
            (C342 * C50602 +
             (C117 * C278 + C315 + C315 + C50741 * C298) * C2267) *
                C5200) *
               C50660 * C271 +
           (((C117 * C279 + C316 + C316 + C50741 * C299) * C2267 +
             C343 * C50602) *
                C5200 +
            ((C117 * C1540 + C1553 + C1553 + C50741 * C1548) * C2267 +
             C5366 * C50602) *
                C5201 +
            ((C117 * C2684 + C5354 + C5354 + C50741 * C2690) * C2267 +
             C5367 * C50602) *
                C5202) *
               C50660 * C272) *
              C273 +
          (((C342 * C2267 + C341 * C50602) * C5200 +
            (C900 * C2267 + C901 * C50602) * C5201 +
            (C5365 * C2267 +
             (C117 * C1191 + C1204 + C1204 + C50741 * C1199) * C50602) *
                C5202) *
               C50660 * C271 -
           ((C515 * C50602 + C514 * C2267) * C5202 +
            (C512 * C50602 + C513 * C2267) * C5201 +
            (C169 * C50602 + C168 * C2267) * C5200) *
               C50660 * C270 -
           (((C117 * C2686 + C5358 + C5358 + C50741 * C2692) * C50602 +
             C5367 * C2267) *
                C5202 +
            ((C117 * C1538 + C1551 + C1551 + C50741 * C1546) * C50602 +
             C5366 * C2267) *
                C5201 +
            (C344 * C50602 + C343 * C2267) * C5200) *
               C50660 * C272) *
              C50631)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50741 * C133) * C2267 +
             C168 * C50602) *
                C5200 +
            (C5563 + C5525) * C5201 + C5569 * C5202) *
               C443 -
           ((C5565 + C5566) * C5202 + (C5528 + C5564) * C5201 +
            (C5525 + C5563) * C5200) *
               C444 +
           (C5569 * C5200 + (C5566 + C5565) * C5201 +
            ((C117 * C5513 + C5533 + C5533 + C50741 * C5519) * C2267 +
             C5561 * C50602) *
                C5202) *
               C445) *
              C50644 * C273 +
          (((C5537 + C5538) * C5200 + (C5539 + C5540) * C5201 +
            (C5567 + C5568) * C5202) *
               C444 -
           (C5550 * C5202 + (C5538 + C5537) * C5201 +
            (C169 * C50602 + C168 * C2267) * C5200) *
               C443 -
           (((C117 * C5515 + C5543 + C5543 + C50741 * C5521) * C50602 +
             C5561 * C2267) *
                C5202 +
            (C5568 + C5567) * C5201 + C5550 * C5200) *
               C445) *
              C50644 * C50631)) /
            (p * q * std::sqrt(p + q));
    d2ee[33] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 +
                     C2271 * C278 + C2277 + C2277 + C2265 * C298 +
                     C2273 * C279 + C2278 + C2278 + C2266 * C299) *
                        C2267 +
                    (C2327 + C2328 + C2329) * C50602) *
                       C50757 * C50869 -
                   ((C2736 + C2737 + C2738) * C50602 +
                    (C2273 * C1540 + C2703 + C2703 + C2266 * C1548 +
                     C2271 * C867 + C2704 + C2704 + C2265 * C877 +
                     C2269 * C449 + C2705 + C2705 + C2264 * C469) *
                        C2267) *
                       C50757 * C50724) *
                      C50644 * C50911 +
                  (((C2738 + C2737 + C2736) * C2267 +
                    (C3067 + C3068 + C3069) * C50602) *
                       C50757 * C50724 -
                   ((C2330 + C2331 + C2332) * C50602 +
                    (C2329 + C2328 + C2327) * C2267) *
                       C50757 * C50869) *
                      C50644 * C50912 +
                  (((C2332 + C2331 + C2330) * C2267 +
                    (C2333 + C2334 + C2335) * C50602) *
                       C50757 * C50869 -
                   ((C2273 * C1537 + C3058 + C3058 + C2266 * C1545 +
                     C2271 * C870 + C3059 + C3059 + C2265 * C880 +
                     C2269 * C446 + C3060 + C3060 + C2264 * C466) *
                        C50602 +
                    (C3069 + C3068 + C3067) * C2267) *
                       C50757 * C50724) *
                      C50644 * C618)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C117 * C119 + C141 + C141 + C50741 * C133) * C106 +
                    C168 * C107 + C169 * C108 + C170 * C109) *
                       C50757 * C50869 -
                   (C511 * C109 + C512 * C108 + C513 * C107 +
                    (C117 * C449 + C486 + C486 + C50741 * C469) * C106) *
                       C50757 * C50724) *
                      C50644 * C50911 +
                  ((C513 * C106 + C512 * C107 + C511 * C108 + C737 * C109) *
                       C50757 * C50724 -
                   (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                       C50757 * C50869) *
                      C50644 * C50912 +
                  ((C169 * C106 + C170 * C107 + C171 * C108 + C172 * C109) *
                       C50757 * C50869 -
                   ((C117 * C728 + C734 + C734 + C50741 * C730) * C109 +
                    C737 * C108 + C511 * C107 + C512 * C106) *
                       C50757 * C50724) *
                      C50644 * C618)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C141 + C141 + C50741 * C133) * C2267 +
                     C168 * C50602) *
                        C5200 +
                    (C5563 + C5525) * C5201 + C5569 * C5202) *
                       C50869 -
                   ((C5565 + C5566) * C5202 + (C5528 + C5564) * C5201 +
                    (C5525 + C5563) * C5200) *
                       C50724) *
                      C50644 * C50911 +
                  (((C5537 + C5538) * C5200 + (C5539 + C5540) * C5201 +
                    (C5567 + C5568) * C5202) *
                       C50724 -
                   (C5550 * C5202 + (C5538 + C5537) * C5201 +
                    (C169 * C50602 + C168 * C2267) * C5200) *
                       C50869) *
                      C50644 * C50912 +
                  (((C169 * C2267 + C170 * C50602) * C5200 +
                    (C5867 + C5868) * C5201 + (C5869 + C5870) * C5202) *
                       C50869 -
                   (((C117 * C1821 + C1834 + C1834 + C50741 * C1829) * C50602 +
                     C5562 * C2267) *
                        C5202 +
                    (C5870 + C5869) * C5201 + (C5868 + C5867) * C5200) *
                       C50724) *
                      C50644 * C618)) /
                    (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50741 * C133) * C106 + C168 * C107 +
            C169 * C108 + C170 * C109) *
               C50757 * C50660 * C270 -
           (C340 * C109 + C341 * C108 + C342 * C107 +
            (C117 * C278 + C315 + C315 + C50741 * C298) * C106) *
               C50757 * C50660 * C271 +
           ((C117 * C279 + C316 + C316 + C50741 * C299) * C106 + C343 * C107 +
            C344 * C108 + C345 * C109) *
               C50757 * C50660 * C272) *
              C273 +
          ((C342 * C106 + C341 * C107 + C340 * C108 +
            (C117 * C283 + C326 + C326 + C50741 * C303) * C109) *
               C50757 * C50660 * C271 -
           (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) * C50757 *
               C50660 * C270 -
           ((C117 * C284 + C327 + C327 + C50741 * C304) * C109 + C345 * C108 +
            C344 * C107 + C343 * C106) *
               C50757 * C50660 * C272) *
              C50631)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50741 * C133) * C106 + C168 * C107 +
           C169 * C108 + C170 * C109) *
              C50757 * C50660 * C50644 * C113 -
          (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) * C50757 *
              C50660 * C50644 * C114 +
          (C169 * C106 + C170 * C107 + C171 * C108 + C172 * C109) * C50757 *
              C50660 * C50644 * C115 -
          ((C117 * C125 + C157 + C157 + C50741 * C139) * C109 + C172 * C108 +
           C171 * C107 + C170 * C106) *
              C50757 * C50660 * C50644 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 + C2277 +
            C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
            C2266 * C299) *
               C2267 +
           (C2327 + C2328 + C2329) * C50602) *
              C50757 * C50660 * C50644 * C113 -
          ((C2330 + C2331 + C2332) * C50602 + (C2329 + C2328 + C2327) * C2267) *
              C50757 * C50660 * C50644 * C114 +
          ((C2332 + C2331 + C2330) * C2267 + (C2333 + C2334 + C2335) * C50602) *
              C50757 * C50660 * C50644 * C115 -
          ((C2273 * C284 + C2306 + C2306 + C2266 * C304 + C2271 * C283 + C2307 +
            C2307 + C2265 * C303 + C2269 * C123 + C2308 + C2308 +
            C2264 * C137) *
               C50602 +
           (C2335 + C2334 + C2333) * C2267) *
              C50757 * C50660 * C50644 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 +
             C2277 + C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
             C2266 * C299) *
                C2267 +
            (C2327 + C2328 + C2329) * C50602) *
               C50757 * C50660 * C270 -
           ((C2533 + C2534 + C2535) * C50602 +
            (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 + C2271 * C279 +
             C2501 + C2501 + C2265 * C299 + C2269 * C278 + C2502 + C2502 +
             C2264 * C298) *
                C2267) *
               C50757 * C50660 * C271 +
           ((C2269 * C279 + C2503 + C2503 + C2264 * C299 + C2271 * C1079 +
             C2504 + C2504 + C2265 * C1087 + C2273 * C2481 + C2505 + C2505 +
             C2266 * C2487) *
                C2267 +
            (C2536 + C2537 + C2538) * C50602) *
               C50757 * C50660 * C272) *
              C273 +
          (((C2535 + C2534 + C2533) * C2267 +
            (C2269 * C276 + C2515 + C2515 + C2264 * C296 + C2271 * C281 +
             C2516 + C2516 + C2265 * C301 + C2273 * C1077 + C2517 + C2517 +
             C2266 * C1085) *
                C50602) *
               C50757 * C50660 * C271 -
           ((C2330 + C2331 + C2332) * C50602 +
            (C2329 + C2328 + C2327) * C2267) *
               C50757 * C50660 * C270 -
           ((C2273 * C2483 + C2518 + C2518 + C2266 * C2489 + C2271 * C1077 +
             C2519 + C2519 + C2265 * C1085 + C2269 * C281 + C2520 + C2520 +
             C2264 * C301) *
                C50602 +
            (C2538 + C2537 + C2536) * C2267) *
               C50757 * C50660 * C272) *
              C50631)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50741 * C133) * C2267 +
            C168 * C50602) *
               C5200 +
           ((C117 * C449 + C486 + C486 + C50741 * C469) * C2267 +
            C513 * C50602) *
               C5201 +
           ((C117 * C450 + C487 + C487 + C50741 * C470) * C2267 +
            C514 * C50602) *
               C5202) *
              C50660 * C50644 * C113 -
          ((C515 * C50602 + C514 * C2267) * C5202 +
           (C512 * C50602 + C513 * C2267) * C5201 +
           (C169 * C50602 + C168 * C2267) * C5200) *
              C50660 * C50644 * C114 +
          ((C169 * C2267 + C170 * C50602) * C5200 +
           (C512 * C2267 + C511 * C50602) * C5201 +
           (C515 * C2267 + C516 * C50602) * C5202) *
              C50660 * C50644 * C115 -
          (((C117 * C455 + C498 + C498 + C50741 * C475) * C50602 +
            C516 * C2267) *
               C5202 +
           (C737 * C50602 + C511 * C2267) * C5201 +
           (C171 * C50602 + C170 * C2267) * C5200) *
              C50660 * C50644 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50741 * C133) * C2267 +
             C168 * C50602) *
                C5200 +
            ((C117 * C449 + C486 + C486 + C50741 * C469) * C2267 +
             C513 * C50602) *
                C5201 +
            ((C117 * C450 + C487 + C487 + C50741 * C470) * C2267 +
             C514 * C50602) *
                C5202) *
               C50660 * C270 -
           ((C5365 * C50602 +
             (C117 * C1193 + C1206 + C1206 + C50741 * C1201) * C2267) *
                C5202 +
            (C900 * C50602 +
             (C117 * C867 + C883 + C883 + C50741 * C877) * C2267) *
                C5201 +
            (C342 * C50602 +
             (C117 * C278 + C315 + C315 + C50741 * C298) * C2267) *
                C5200) *
               C50660 * C271 +
           (((C117 * C279 + C316 + C316 + C50741 * C299) * C2267 +
             C343 * C50602) *
                C5200 +
            ((C117 * C1540 + C1553 + C1553 + C50741 * C1548) * C2267 +
             C5366 * C50602) *
                C5201 +
            ((C117 * C2684 + C5354 + C5354 + C50741 * C2690) * C2267 +
             C5367 * C50602) *
                C5202) *
               C50660 * C272) *
              C273 +
          (((C342 * C2267 + C341 * C50602) * C5200 +
            (C900 * C2267 + C901 * C50602) * C5201 +
            (C5365 * C2267 +
             (C117 * C1191 + C1204 + C1204 + C50741 * C1199) * C50602) *
                C5202) *
               C50660 * C271 -
           ((C515 * C50602 + C514 * C2267) * C5202 +
            (C512 * C50602 + C513 * C2267) * C5201 +
            (C169 * C50602 + C168 * C2267) * C5200) *
               C50660 * C270 -
           (((C117 * C2686 + C5358 + C5358 + C50741 * C2692) * C50602 +
             C5367 * C2267) *
                C5202 +
            ((C117 * C1538 + C1551 + C1551 + C50741 * C1546) * C50602 +
             C5366 * C2267) *
                C5201 +
            (C344 * C50602 + C343 * C2267) * C5200) *
               C50660 * C272) *
              C50631)) /
            (p * q * std::sqrt(p + q));
    d2ee[35] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 +
                     C2271 * C278 + C2277 + C2277 + C2265 * C298 +
                     C2273 * C279 + C2278 + C2278 + C2266 * C299) *
                        C2267 +
                    (C2327 + C2328 + C2329) * C50602) *
                       C50757 * C50660 * C50913 -
                   ((C2533 + C2534 + C2535) * C50602 +
                    (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 +
                     C2271 * C279 + C2501 + C2501 + C2265 * C299 +
                     C2269 * C278 + C2502 + C2502 + C2264 * C298) *
                        C2267) *
                       C50757 * C50660 * C50914 +
                   ((C2269 * C279 + C2503 + C2503 + C2264 * C299 +
                     C2271 * C1079 + C2504 + C2504 + C2265 * C1087 +
                     C2273 * C2481 + C2505 + C2505 + C2266 * C2487) *
                        C2267 +
                    (C2536 + C2537 + C2538) * C50602) *
                       C50757 * C50660 * C1306) *
                      C50860 +
                  (((C2535 + C2534 + C2533) * C2267 +
                    (C2903 + C2904 + C2905) * C50602) *
                       C50757 * C50660 * C50914 -
                   ((C2330 + C2331 + C2332) * C50602 +
                    (C2329 + C2328 + C2327) * C2267) *
                       C50757 * C50660 * C50913 -
                   ((C2273 * C2483 + C2518 + C2518 + C2266 * C2489 +
                     C2271 * C1077 + C2519 + C2519 + C2265 * C1085 +
                     C2269 * C281 + C2520 + C2520 + C2264 * C301) *
                        C50602 +
                    (C2538 + C2537 + C2536) * C2267) *
                       C50757 * C50660 * C1306) *
                      C50631)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C117 * C119 + C141 + C141 + C50741 * C133) * C106 +
                    C168 * C107 + C169 * C108 + C170 * C109) *
                       C50757 * C50660 * C50913 -
                   (C340 * C109 + C341 * C108 + C342 * C107 +
                    (C117 * C278 + C315 + C315 + C50741 * C298) * C106) *
                       C50757 * C50660 * C50914 +
                   ((C117 * C279 + C316 + C316 + C50741 * C299) * C106 +
                    C343 * C107 + C344 * C108 + C345 * C109) *
                       C50757 * C50660 * C1306) *
                      C50860 +
                  ((C342 * C106 + C341 * C107 + C340 * C108 + C628 * C109) *
                       C50757 * C50660 * C50914 -
                   (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                       C50757 * C50660 * C50913 -
                   ((C117 * C284 + C327 + C327 + C50741 * C304) * C109 +
                    C345 * C108 + C344 * C107 + C343 * C106) *
                       C50757 * C50660 * C1306) *
                      C50631)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C141 + C141 + C50741 * C133) * C2267 +
                     C168 * C50602) *
                        C5200 +
                    (C5563 + C5525) * C5201 + C5569 * C5202) *
                       C50660 * C50913 -
                   (C6497 * C5202 + (C6070 + C6092) * C5201 +
                    (C342 * C50602 +
                     (C117 * C278 + C315 + C315 + C50741 * C298) * C2267) *
                        C5200) *
                       C50660 * C50914 +
                   (((C117 * C279 + C316 + C316 + C50741 * C299) * C2267 +
                     C343 * C50602) *
                        C5200 +
                    ((C117 * C1540 + C1553 + C1553 + C50741 * C1548) * C2267 +
                     C5366 * C50602) *
                        C5201 +
                    ((C117 * C2684 + C5354 + C5354 + C50741 * C2690) * C2267 +
                     C5367 * C50602) *
                        C5202) *
                       C50660 * C1306) *
                      C50860 +
                  (((C342 * C2267 + C341 * C50602) * C5200 +
                    (C6078 + C6079) * C5201 + (C6080 + C6081) * C5202) *
                       C50660 * C50914 -
                   (C5550 * C5202 + (C5538 + C5537) * C5201 +
                    (C169 * C50602 + C168 * C2267) * C5200) *
                       C50660 * C50913 -
                   (((C117 * C2686 + C5358 + C5358 + C50741 * C2692) * C50602 +
                     C5367 * C2267) *
                        C5202 +
                    ((C117 * C1538 + C1551 + C1551 + C50741 * C1546) * C50602 +
                     C5366 * C2267) *
                        C5201 +
                    (C344 * C50602 + C343 * C2267) * C5200) *
                       C50660 * C1306) *
                      C50631)) /
                    (p * q * std::sqrt(p + q));
    d2ee[36] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 +
                     C2271 * C278 + C2277 + C2277 + C2265 * C298 +
                     C2273 * C279 + C2278 + C2278 + C2266 * C299) *
                        C2267 +
                    (C2327 + C2328 + C2329) * C50602) *
                       C50757 * C50869 -
                   ((C2736 + C2737 + C2738) * C50602 +
                    (C2273 * C1540 + C2703 + C2703 + C2266 * C1548 +
                     C2271 * C867 + C2704 + C2704 + C2265 * C877 +
                     C2269 * C449 + C2705 + C2705 + C2264 * C469) *
                        C2267) *
                       C50757 * C50724) *
                      C50913 +
                  (((C2269 * C867 + C3273 + C3273 + C2264 * C877 +
                     C2271 * C1540 + C3274 + C3274 + C2265 * C1548 +
                     C2273 * C3263 + C3275 + C3275 + C2266 * C3269) *
                        C2267 +
                    (C3294 + C3295 + C3296) * C50602) *
                       C50757 * C50724 -
                   ((C2533 + C2534 + C2535) * C50602 +
                    (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 +
                     C2271 * C279 + C2501 + C2501 + C2265 * C299 +
                     C2269 * C278 + C2502 + C2502 + C2264 * C298) *
                        C2267) *
                       C50757 * C50869) *
                      C50914 +
                  (((C2269 * C279 + C2503 + C2503 + C2264 * C299 +
                     C2271 * C1079 + C2504 + C2504 + C2265 * C1087 +
                     C2273 * C2481 + C2505 + C2505 + C2266 * C2487) *
                        C2267 +
                    (C2536 + C2537 + C2538) * C50602) *
                       C50757 * C50869 -
                   ((C2273 * C4196 + C4203 + C4203 + C2266 * C4200 +
                     C2271 * C3264 + C4204 + C4204 + C2265 * C3270 +
                     C2269 * C1539 + C4205 + C4205 + C2264 * C1547) *
                        C50602 +
                    (C2273 * C4197 + C4206 + C4206 + C2266 * C4201 +
                     C2271 * C3263 + C4207 + C4207 + C2265 * C3269 +
                     C2269 * C1540 + C4208 + C4208 + C2264 * C1548) *
                        C2267) *
                       C50757 * C50724) *
                      C1306) *
                 C50625) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C117 * C119 + C141 + C141 + C50741 * C133) * C106 +
                    C168 * C107 + C169 * C108 + C170 * C109) *
                       C50757 * C50869 -
                   (C511 * C109 + C512 * C108 + C513 * C107 +
                    (C117 * C449 + C486 + C486 + C50741 * C469) * C106) *
                       C50757 * C50724) *
                      C50913 +
                  (((C117 * C867 + C883 + C883 + C50741 * C877) * C106 +
                    C900 * C107 + C901 * C108 + C902 * C109) *
                       C50757 * C50724 -
                   (C340 * C109 + C341 * C108 + C342 * C107 +
                    (C117 * C278 + C315 + C315 + C50741 * C298) * C106) *
                       C50757 * C50869) *
                      C50914 +
                  (((C117 * C279 + C316 + C316 + C50741 * C299) * C106 +
                    C343 * C107 + C344 * C108 + C345 * C109) *
                       C50757 * C50869 -
                   ((C117 * C1537 + C1550 + C1550 + C50741 * C1545) * C109 +
                    (C117 * C1538 + C1551 + C1551 + C50741 * C1546) * C108 +
                    (C117 * C1539 + C1552 + C1552 + C50741 * C1547) * C107 +
                    (C117 * C1540 + C1553 + C1553 + C50741 * C1548) * C106) *
                       C50757 * C50724) *
                      C1306) *
                 C50625) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C141 + C141 + C50741 * C133) * C2267 +
                     C168 * C50602) *
                        C5200 +
                    (C5563 + C5525) * C5201 + C5569 * C5202) *
                       C50869 -
                   ((C5565 + C5566) * C5202 + (C5528 + C5564) * C5201 +
                    (C5525 + C5563) * C5200) *
                       C50724) *
                      C50913 +
                  (((C6092 + C6070) * C5200 + (C6093 + C6073) * C5201 +
                    (C6503 + C6496) * C5202) *
                       C50724 -
                   (C6497 * C5202 + (C6070 + C6092) * C5201 +
                    (C342 * C50602 +
                     (C117 * C278 + C315 + C315 + C50741 * C298) * C2267) *
                        C5200) *
                       C50869) *
                      C50914 +
                  ((((C117 * C279 + C316 + C316 + C50741 * C299) * C2267 +
                     C343 * C50602) *
                        C5200 +
                    (C7004 + C6992) * C5201 + (C7005 + C6995) * C5202) *
                       C50869 -
                   (((C117 * C4598 + C6996 + C6996 + C50741 * C4606) * C50602 +
                     (C117 * C4600 + C6997 + C6997 + C50741 * C4608) * C2267) *
                        C5202 +
                    (C6995 + C7005) * C5201 + (C6992 + C7004) * C5200) *
                       C50724) *
                      C1306) *
                 C50625) /
                    (p * q * std::sqrt(p + q));
    d2ee[37] += (0.5 * std::pow(Pi, 2.5) *
                     ((((C117 * C119 + C141 + C141 + C50741 * C133) * C106 +
                        C168 * C107 + C169 * C108 + C170 * C109) *
                           C50757 * C50660 * C1000 -
                       (C340 * C109 + C341 * C108 + C342 * C107 +
                        (C117 * C278 + C315 + C315 + C50741 * C298) * C106) *
                           C50757 * C50660 * C50696) *
                          C1002 +
                      ((C342 * C106 + C341 * C107 + C340 * C108 + C628 * C109) *
                           C50757 * C50660 * C50696 -
                       (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                           C50757 * C50660 * C1000) *
                          C1003 +
                      ((C169 * C106 + C170 * C107 + C171 * C108 + C172 * C109) *
                           C50757 * C50660 * C1000 -
                       ((C117 * C619 + C625 + C625 + C50741 * C621) * C109 +
                        C628 * C108 + C340 * C107 + C341 * C106) *
                           C50757 * C50660 * C50696) *
                          C1004) +
                 0.5 * std::pow(Pi, 2.5) *
                     (((C117 * C119 + C141 + C141 + C50741 * C133) * C106 +
                       C168 * C107 + C169 * C108 + C170 * C109) *
                          C50757 * C50660 * C1071 -
                      (C340 * C109 + C341 * C108 + C342 * C107 +
                       (C117 * C278 + C315 + C315 + C50741 * C298) * C106) *
                          C50757 * C50660 * C1072 +
                      ((C117 * C279 + C316 + C316 + C50741 * C299) * C106 +
                       C343 * C107 + C344 * C108 + C345 * C109) *
                          C50757 * C50660 * C1073 -
                      ((C117 * C1076 + C1089 + C1089 + C50741 * C1084) * C109 +
                       (C117 * C1077 + C1090 + C1090 + C50741 * C1085) * C108 +
                       (C117 * C1078 + C1091 + C1091 + C50741 * C1086) * C107 +
                       (C117 * C1079 + C1092 + C1092 + C50741 * C1087) * C106) *
                          C50757 * C50660 * C1074) *
                     C50625) /
                    (p * q * std::sqrt(p + q)) -
                (std::pow(Pi, 2.5) *
                 ((((C117 * C119 + C141 + C141 + C50741 * C133) * C106 +
                    C168 * C107 + C169 * C108 + C170 * C109) *
                       C50757 * C443 -
                   (C511 * C109 + C512 * C108 + C513 * C107 +
                    (C117 * C449 + C486 + C486 + C50741 * C469) * C106) *
                       C50757 * C444 +
                   ((C117 * C450 + C487 + C487 + C50741 * C470) * C106 +
                    C514 * C107 + C515 * C108 + C516 * C109) *
                       C50757 * C445) *
                      C1000 +
                  (((C117 * C867 + C883 + C883 + C50741 * C877) * C106 +
                    C900 * C107 + C901 * C108 + C902 * C109) *
                       C50757 * C444 -
                   (C340 * C109 + C341 * C108 + C342 * C107 +
                    (C117 * C278 + C315 + C315 + C50741 * C298) * C106) *
                       C50757 * C443 -
                   ((C117 * C1190 + C1203 + C1203 + C50741 * C1198) * C109 +
                    (C117 * C1191 + C1204 + C1204 + C50741 * C1199) * C108 +
                    (C117 * C1192 + C1205 + C1205 + C50741 * C1200) * C107 +
                    (C117 * C1193 + C1206 + C1206 + C50741 * C1201) * C106) *
                       C50757 * C445) *
                      C50696) *
                 C50625) /
                    (p * q * std::sqrt(p + q)) +
                (0.5 * std::pow(Pi, 2.5) *
                 ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 +
                     C2271 * C278 + C2277 + C2277 + C2265 * C298 +
                     C2273 * C279 + C2278 + C2278 + C2266 * C299) *
                        C2267 +
                    (C2327 + C2328 + C2329) * C50602) *
                       C50757 * C50660 * C1000 -
                   ((C2533 + C2534 + C2535) * C50602 +
                    (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 +
                     C2271 * C279 + C2501 + C2501 + C2265 * C299 +
                     C2269 * C278 + C2502 + C2502 + C2264 * C298) *
                        C2267) *
                       C50757 * C50660 * C50696) *
                      C1002 +
                  (((C2535 + C2534 + C2533) * C2267 +
                    (C2903 + C2904 + C2905) * C50602) *
                       C50757 * C50660 * C50696 -
                   ((C2330 + C2331 + C2332) * C50602 +
                    (C2329 + C2328 + C2327) * C2267) *
                       C50757 * C50660 * C1000) *
                      C1003 +
                  (((C2332 + C2331 + C2330) * C2267 +
                    (C2333 + C2334 + C2335) * C50602) *
                       C50757 * C50660 * C1000 -
                   ((C2273 * C1076 + C2894 + C2894 + C2266 * C1084 +
                     C2271 * C282 + C2895 + C2895 + C2265 * C302 +
                     C2269 * C275 + C2896 + C2896 + C2264 * C295) *
                        C50602 +
                    (C2905 + C2904 + C2903) * C2267) *
                       C50757 * C50660 * C50696) *
                      C1004)) /
                    (p * q * std::sqrt(p + q)) +
                (0.5 * std::pow(Pi, 2.5) *
                 (((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 +
                    C2277 + C2277 + C2265 * C298 + C2273 * C279 + C2278 +
                    C2278 + C2266 * C299) *
                       C2267 +
                   (C2327 + C2328 + C2329) * C50602) *
                      C50757 * C50660 * C1071 -
                  ((C2533 + C2534 + C2535) * C50602 +
                   (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 +
                    C2271 * C279 + C2501 + C2501 + C2265 * C299 + C2269 * C278 +
                    C2502 + C2502 + C2264 * C298) *
                       C2267) *
                      C50757 * C50660 * C1072 +
                  ((C2269 * C279 + C2503 + C2503 + C2264 * C299 +
                    C2271 * C1079 + C2504 + C2504 + C2265 * C1087 +
                    C2273 * C2481 + C2505 + C2505 + C2266 * C2487) *
                       C2267 +
                   (C2536 + C2537 + C2538) * C50602) *
                      C50757 * C50660 * C1073 -
                  ((C2273 * C3540 + C3547 + C3547 + C2266 * C3544 +
                    C2271 * C2482 + C3548 + C3548 + C2265 * C2488 +
                    C2269 * C1078 + C3549 + C3549 + C2264 * C1086) *
                       C50602 +
                   (C2273 * C3541 + C3550 + C3550 + C2266 * C3545 +
                    C2271 * C2481 + C3551 + C3551 + C2265 * C2487 +
                    C2269 * C1079 + C3552 + C3552 + C2264 * C1087) *
                       C2267) *
                      C50757 * C50660 * C1074) *
                 C50625) /
                    (p * q * std::sqrt(p + q)) -
                (std::pow(Pi, 2.5) *
                 ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 +
                     C2271 * C278 + C2277 + C2277 + C2265 * C298 +
                     C2273 * C279 + C2278 + C2278 + C2266 * C299) *
                        C2267 +
                    (C2327 + C2328 + C2329) * C50602) *
                       C50757 * C443 -
                   ((C2736 + C2737 + C2738) * C50602 +
                    (C2273 * C1540 + C2703 + C2703 + C2266 * C1548 +
                     C2271 * C867 + C2704 + C2704 + C2265 * C877 +
                     C2269 * C449 + C2705 + C2705 + C2264 * C469) *
                        C2267) *
                       C50757 * C444 +
                   ((C2269 * C450 + C2706 + C2706 + C2264 * C470 +
                     C2271 * C1193 + C2707 + C2707 + C2265 * C1201 +
                     C2273 * C2684 + C2708 + C2708 + C2266 * C2690) *
                        C2267 +
                    (C2739 + C2740 + C2741) * C50602) *
                       C50757 * C445) *
                      C1000 +
                  (((C2269 * C867 + C3273 + C3273 + C2264 * C877 +
                     C2271 * C1540 + C3274 + C3274 + C2265 * C1548 +
                     C2273 * C3263 + C3275 + C3275 + C2266 * C3269) *
                        C2267 +
                    (C3294 + C3295 + C3296) * C50602) *
                       C50757 * C444 -
                   ((C2533 + C2534 + C2535) * C50602 +
                    (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 +
                     C2271 * C279 + C2501 + C2501 + C2265 * C299 +
                     C2269 * C278 + C2502 + C2502 + C2264 * C298) *
                        C2267) *
                       C50757 * C443 -
                   ((C2273 * C3698 + C3705 + C3705 + C2266 * C3702 +
                     C2271 * C2685 + C3706 + C3706 + C2265 * C2691 +
                     C2269 * C1192 + C3707 + C3707 + C2264 * C1200) *
                        C50602 +
                    (C2273 * C3699 + C3708 + C3708 + C2266 * C3703 +
                     C2271 * C2684 + C3709 + C3709 + C2265 * C2690 +
                     C2269 * C1193 + C3710 + C3710 + C2264 * C1201) *
                        C2267) *
                       C50757 * C445) *
                      C50696) *
                 C50625) /
                    (p * q * std::sqrt(p + q)) -
                (std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C141 + C141 + C50741 * C133) * C2267 +
                     C168 * C50602) *
                        C5200 +
                    (C5563 + C5525) * C5201 + C5569 * C5202) *
                       C50660 * C1000 -
                   ((C6073 + C6093) * C5202 + (C6070 + C6092) * C5201 +
                    (C342 * C50602 +
                     (C117 * C278 + C315 + C315 + C50741 * C298) * C2267) *
                        C5200) *
                       C50660 * C50696) *
                      C1002 +
                  (((C342 * C2267 + C341 * C50602) * C5200 +
                    (C6078 + C6079) * C5201 + (C6080 + C6081) * C5202) *
                       C50660 * C50696 -
                   (C5550 * C5202 + (C5538 + C5537) * C5201 +
                    (C169 * C50602 + C168 * C2267) * C5200) *
                       C50660 * C1000) *
                      C1003 +
                  (((C169 * C2267 + C170 * C50602) * C5200 +
                    (C5867 + C5868) * C5201 + (C5869 + C5870) * C5202) *
                       C50660 * C1000 -
                   (((C117 * C1190 + C1203 + C1203 + C50741 * C1198) * C50602 +
                     C5720 * C2267) *
                        C5202 +
                    (C902 * C50602 + C901 * C2267) * C5201 +
                    (C340 * C50602 + C341 * C2267) * C5200) *
                       C50660 * C50696) *
                      C1004)) /
                    (p * q * std::sqrt(p + q)) -
                (std::pow(Pi, 2.5) *
                 ((((C117 * C119 + C141 + C141 + C50741 * C133) * C2267 +
                    C168 * C50602) *
                       C5200 +
                   (C5563 + C5525) * C5201 + C5569 * C5202) *
                      C50660 * C1071 -
                  ((C6073 + C6093) * C5202 + (C6070 + C6092) * C5201 +
                   (C342 * C50602 +
                    (C117 * C278 + C315 + C315 + C50741 * C298) * C2267) *
                       C5200) *
                      C50660 * C1072 +
                  (((C117 * C279 + C316 + C316 + C50741 * C299) * C2267 +
                    C343 * C50602) *
                       C5200 +
                   ((C117 * C1540 + C1553 + C1553 + C50741 * C1548) * C2267 +
                    C5366 * C50602) *
                       C5201 +
                   ((C117 * C2684 + C5354 + C5354 + C50741 * C2690) * C2267 +
                    C5367 * C50602) *
                       C5202) *
                      C50660 * C1073 -
                  (((C117 * C3698 + C6338 + C6338 + C50741 * C3702) * C50602 +
                    (C117 * C3699 + C6339 + C6339 + C50741 * C3703) * C2267) *
                       C5202 +
                   ((C117 * C3264 + C6340 + C6340 + C50741 * C3270) * C50602 +
                    (C117 * C3263 + C6341 + C6341 + C50741 * C3269) * C2267) *
                       C5201 +
                   ((C117 * C1078 + C1091 + C1091 + C50741 * C1086) * C50602 +
                    (C117 * C1079 + C1092 + C1092 + C50741 * C1087) * C2267) *
                       C5200) *
                      C50660 * C1074) *
                 C50625) /
                    (p * q * std::sqrt(p + q)) +
                (2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C141 + C141 + C50741 * C133) * C2267 +
                     C168 * C50602) *
                        C5200 +
                    (C5563 + C5525) * C5201 + C5569 * C5202) *
                       C443 -
                   ((C5565 + C5566) * C5202 + (C5528 + C5564) * C5201 +
                    (C5525 + C5563) * C5200) *
                       C444 +
                   (C5569 * C5200 + (C5566 + C5565) * C5201 +
                    ((C117 * C5513 + C5533 + C5533 + C50741 * C5519) * C2267 +
                     C5561 * C50602) *
                        C5202) *
                       C445) *
                      C1000 +
                  (((C6092 + C6070) * C5200 + (C6093 + C6073) * C5201 +
                    (C6503 + C6496) * C5202) *
                       C444 -
                   (C6497 * C5202 + (C6070 + C6092) * C5201 +
                    (C342 * C50602 +
                     (C117 * C278 + C315 + C315 + C50741 * C298) * C2267) *
                        C5200) *
                       C443 -
                   (((C117 * C6487 + C6498 + C6498 + C50741 * C6491) * C50602 +
                     (C117 * C6488 + C6499 + C6499 + C50741 * C6492) * C2267) *
                        C5202 +
                    (C6496 + C6503) * C5201 + C6497 * C5200) *
                       C445) *
                      C50696) *
                 C50625) /
                    (p * q * std::sqrt(p + q));
    d2ee[38] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C2269 * C119 + C2276 + C2276 + C2264 * C133 +
                      C2271 * C278 + C2277 + C2277 + C2265 * C298 +
                      C2273 * C279 + C2278 + C2278 + C2266 * C299) *
                         C2267 +
                     (C2327 + C2328 + C2329) * C50602) *
                        C50757 * C50869 -
                    ((C2736 + C2737 + C2738) * C50602 +
                     (C2273 * C1540 + C2703 + C2703 + C2266 * C1548 +
                      C2271 * C867 + C2704 + C2704 + C2265 * C877 +
                      C2269 * C449 + C2705 + C2705 + C2264 * C469) *
                         C2267) *
                        C50757 * C50724) *
                       C1000 +
                   (((C2269 * C867 + C3273 + C3273 + C2264 * C877 +
                      C2271 * C1540 + C3274 + C3274 + C2265 * C1548 +
                      C2273 * C3263 + C3275 + C3275 + C2266 * C3269) *
                         C2267 +
                     (C3294 + C3295 + C3296) * C50602) *
                        C50757 * C50724 -
                    ((C2533 + C2534 + C2535) * C50602 +
                     (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 +
                      C2271 * C279 + C2501 + C2501 + C2265 * C299 +
                      C2269 * C278 + C2502 + C2502 + C2264 * C298) *
                         C2267) *
                        C50757 * C50869) *
                       C50696) *
                      C50860 +
                  ((((C2738 + C2737 + C2736) * C2267 +
                     (C3067 + C3068 + C3069) * C50602) *
                        C50757 * C50724 -
                    ((C2330 + C2331 + C2332) * C50602 +
                     (C2329 + C2328 + C2327) * C2267) *
                        C50757 * C50869) *
                       C1000 +
                   (((C2535 + C2534 + C2533) * C2267 +
                     (C2903 + C2904 + C2905) * C50602) *
                        C50757 * C50869 -
                    ((C2273 * C3265 + C3285 + C3285 + C2266 * C3271 +
                      C2271 * C1538 + C3286 + C3286 + C2265 * C1546 +
                      C2269 * C869 + C3287 + C3287 + C2264 * C879) *
                         C50602 +
                     (C3296 + C3295 + C3294) * C2267) *
                        C50757 * C50724) *
                       C50696) *
                      C50631)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C141 + C141 + C50741 * C133) * C106 +
                     C168 * C107 + C169 * C108 + C170 * C109) *
                        C50757 * C50869 -
                    (C511 * C109 + C512 * C108 + C513 * C107 +
                     (C117 * C449 + C486 + C486 + C50741 * C469) * C106) *
                        C50757 * C50724) *
                       C1000 +
                   (((C117 * C867 + C883 + C883 + C50741 * C877) * C106 +
                     C900 * C107 + C901 * C108 + C902 * C109) *
                        C50757 * C50724 -
                    (C340 * C109 + C341 * C108 + C342 * C107 +
                     (C117 * C278 + C315 + C315 + C50741 * C298) * C106) *
                        C50757 * C50869) *
                       C50696) *
                      C50860 +
                  (((C513 * C106 + C512 * C107 + C511 * C108 + C737 * C109) *
                        C50757 * C50724 -
                    (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                        C50757 * C50869) *
                       C1000 +
                   ((C342 * C106 + C341 * C107 + C340 * C108 + C628 * C109) *
                        C50757 * C50869 -
                    ((C117 * C871 + C893 + C893 + C50741 * C881) * C109 +
                     C902 * C108 + C901 * C107 + C900 * C106) *
                        C50757 * C50724) *
                       C50696) *
                      C50631)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((((C117 * C119 + C141 + C141 + C50741 * C133) * C2267 +
                      C168 * C50602) *
                         C5200 +
                     (C5563 + C5525) * C5201 + C5569 * C5202) *
                        C50869 -
                    ((C5565 + C5566) * C5202 + (C5528 + C5564) * C5201 +
                     (C5525 + C5563) * C5200) *
                        C50724) *
                       C1000 +
                   (((C6092 + C6070) * C5200 + (C6093 + C6073) * C5201 +
                     (C6503 + C6496) * C5202) *
                        C50724 -
                    (C6497 * C5202 + (C6070 + C6092) * C5201 +
                     (C342 * C50602 +
                      (C117 * C278 + C315 + C315 + C50741 * C298) * C2267) *
                         C5200) *
                        C50869) *
                       C50696) *
                      C50860 +
                  ((((C5537 + C5538) * C5200 + (C5539 + C5540) * C5201 +
                     (C5567 + C5568) * C5202) *
                        C50724 -
                    (C5550 * C5202 + (C5538 + C5537) * C5201 +
                     (C169 * C50602 + C168 * C2267) * C5200) *
                        C50869) *
                       C1000 +
                   (((C342 * C2267 + C341 * C50602) * C5200 +
                     (C6078 + C6079) * C5201 + (C6080 + C6081) * C5202) *
                        C50869 -
                    (((C117 * C6064 + C6082 + C6082 + C50741 * C6066) * C50602 +
                      C6091 * C2267) *
                         C5202 +
                     (C6081 + C6080) * C5201 + (C6079 + C6078) * C5200) *
                        C50724) *
                       C50696) *
                      C50631)) /
                    (p * q * std::sqrt(p + q));
    d2ee[39] += (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 (((C117 * C119 + C141 + C141 + C50741 * C133) * C106 +
                   C168 * C107 + C169 * C108 + C170 * C109) *
                      C50757 * C50660 * C1071 -
                  (C340 * C109 + C341 * C108 + C342 * C107 +
                   (C117 * C278 + C315 + C315 + C50741 * C298) * C106) *
                      C50757 * C50660 * C1072 +
                  ((C117 * C279 + C316 + C316 + C50741 * C299) * C106 +
                   C343 * C107 + C344 * C108 + C345 * C109) *
                      C50757 * C50660 * C1073 -
                  ((C117 * C1076 + C1089 + C1089 + C50741 * C1084) * C109 +
                   (C117 * C1077 + C1090 + C1090 + C50741 * C1085) * C108 +
                   (C117 * C1078 + C1091 + C1091 + C50741 * C1086) * C107 +
                   (C117 * C1079 + C1092 + C1092 + C50741 * C1087) * C106) *
                      C50757 * C50660 * C1074) *
                 C50625) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 ((((C117 * C119 + C141 + C141 + C50741 * C133) * C106 +
                    C168 * C107 + C169 * C108 + C170 * C109) *
                       C50757 * C50660 * C1000 -
                   (C340 * C109 + C341 * C108 + C342 * C107 +
                    (C117 * C278 + C315 + C315 + C50741 * C298) * C106) *
                       C50757 * C50660 * C50696) *
                      C1002 +
                  ((C342 * C106 + C341 * C107 + C340 * C108 + C628 * C109) *
                       C50757 * C50660 * C50696 -
                   (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                       C50757 * C50660 * C1000) *
                      C1003 +
                  ((C169 * C106 + C170 * C107 + C171 * C108 + C172 * C109) *
                       C50757 * C50660 * C1000 -
                   ((C117 * C619 + C625 + C625 + C50741 * C621) * C109 +
                    C628 * C108 + C340 * C107 + C341 * C106) *
                       C50757 * C50660 * C50696) *
                      C1004)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 +
                     C2271 * C278 + C2277 + C2277 + C2265 * C298 +
                     C2273 * C279 + C2278 + C2278 + C2266 * C299) *
                        C2267 +
                    (C2327 + C2328 + C2329) * C50602) *
                       C50757 * C50660 * C1000 -
                   ((C2533 + C2534 + C2535) * C50602 +
                    (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 +
                     C2271 * C279 + C2501 + C2501 + C2265 * C299 +
                     C2269 * C278 + C2502 + C2502 + C2264 * C298) *
                        C2267) *
                       C50757 * C50660 * C50696) *
                      C1002 +
                  (((C2535 + C2534 + C2533) * C2267 +
                    (C2903 + C2904 + C2905) * C50602) *
                       C50757 * C50660 * C50696 -
                   ((C2330 + C2331 + C2332) * C50602 +
                    (C2329 + C2328 + C2327) * C2267) *
                       C50757 * C50660 * C1000) *
                      C1003 +
                  (((C2332 + C2331 + C2330) * C2267 +
                    (C2333 + C2334 + C2335) * C50602) *
                       C50757 * C50660 * C1000 -
                   ((C2273 * C1076 + C2894 + C2894 + C2266 * C1084 +
                     C2271 * C282 + C2895 + C2895 + C2265 * C302 +
                     C2269 * C275 + C2896 + C2896 + C2264 * C295) *
                        C50602 +
                    (C2905 + C2904 + C2903) * C2267) *
                       C50757 * C50660 * C50696) *
                      C1004)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 (((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 +
                    C2277 + C2277 + C2265 * C298 + C2273 * C279 + C2278 +
                    C2278 + C2266 * C299) *
                       C2267 +
                   (C2327 + C2328 + C2329) * C50602) *
                      C50757 * C50660 * C1071 -
                  ((C2533 + C2534 + C2535) * C50602 +
                   (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 +
                    C2271 * C279 + C2501 + C2501 + C2265 * C299 + C2269 * C278 +
                    C2502 + C2502 + C2264 * C298) *
                       C2267) *
                      C50757 * C50660 * C1072 +
                  ((C2269 * C279 + C2503 + C2503 + C2264 * C299 +
                    C2271 * C1079 + C2504 + C2504 + C2265 * C1087 +
                    C2273 * C2481 + C2505 + C2505 + C2266 * C2487) *
                       C2267 +
                   (C2536 + C2537 + C2538) * C50602) *
                      C50757 * C50660 * C1073 -
                  ((C2273 * C3540 + C3547 + C3547 + C2266 * C3544 +
                    C2271 * C2482 + C3548 + C3548 + C2265 * C2488 +
                    C2269 * C1078 + C3549 + C3549 + C2264 * C1086) *
                       C50602 +
                   (C2273 * C3541 + C3550 + C3550 + C2266 * C3545 +
                    C2271 * C2481 + C3551 + C3551 + C2265 * C2487 +
                    C2269 * C1079 + C3552 + C3552 + C2264 * C1087) *
                       C2267) *
                      C50757 * C50660 * C1074) *
                 C50625) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C141 + C141 + C50741 * C133) * C2267 +
                     C168 * C50602) *
                        C5200 +
                    (C5563 + C5525) * C5201 + C5569 * C5202) *
                       C50660 * C1000 -
                   ((C6073 + C6093) * C5202 + (C6070 + C6092) * C5201 +
                    (C342 * C50602 +
                     (C117 * C278 + C315 + C315 + C50741 * C298) * C2267) *
                        C5200) *
                       C50660 * C50696) *
                      C1002 +
                  (((C342 * C2267 + C341 * C50602) * C5200 +
                    (C6078 + C6079) * C5201 + (C6080 + C6081) * C5202) *
                       C50660 * C50696 -
                   (C5550 * C5202 + (C5538 + C5537) * C5201 +
                    (C169 * C50602 + C168 * C2267) * C5200) *
                       C50660 * C1000) *
                      C1003 +
                  (((C169 * C2267 + C170 * C50602) * C5200 +
                    (C5867 + C5868) * C5201 + (C5869 + C5870) * C5202) *
                       C50660 * C1000 -
                   (((C117 * C1190 + C1203 + C1203 + C50741 * C1198) * C50602 +
                     C5720 * C2267) *
                        C5202 +
                    (C902 * C50602 + C901 * C2267) * C5201 +
                    (C340 * C50602 + C341 * C2267) * C5200) *
                       C50660 * C50696) *
                      C1004)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C117 * C119 + C141 + C141 + C50741 * C133) * C2267 +
                    C168 * C50602) *
                       C5200 +
                   (C5563 + C5525) * C5201 + C5569 * C5202) *
                      C50660 * C1071 -
                  ((C6073 + C6093) * C5202 + (C6070 + C6092) * C5201 +
                   (C342 * C50602 +
                    (C117 * C278 + C315 + C315 + C50741 * C298) * C2267) *
                       C5200) *
                      C50660 * C1072 +
                  (((C117 * C279 + C316 + C316 + C50741 * C299) * C2267 +
                    C343 * C50602) *
                       C5200 +
                   ((C117 * C1540 + C1553 + C1553 + C50741 * C1548) * C2267 +
                    C5366 * C50602) *
                       C5201 +
                   ((C117 * C2684 + C5354 + C5354 + C50741 * C2690) * C2267 +
                    C5367 * C50602) *
                       C5202) *
                      C50660 * C1073 -
                  (((C117 * C3698 + C6338 + C6338 + C50741 * C3702) * C50602 +
                    (C117 * C3699 + C6339 + C6339 + C50741 * C3703) * C2267) *
                       C5202 +
                   ((C117 * C3264 + C6340 + C6340 + C50741 * C3270) * C50602 +
                    (C117 * C3263 + C6341 + C6341 + C50741 * C3269) * C2267) *
                       C5201 +
                   ((C117 * C1078 + C1091 + C1091 + C50741 * C1086) * C50602 +
                    (C117 * C1079 + C1092 + C1092 + C50741 * C1087) * C2267) *
                       C5200) *
                      C50660 * C1074) *
                 C50625) /
                    (p * q * std::sqrt(p + q));
    d2ee[40] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C2269 * C119 + C2276 + C2276 + C2264 * C133 +
                      C2271 * C278 + C2277 + C2277 + C2265 * C298 +
                      C2273 * C279 + C2278 + C2278 + C2266 * C299) *
                         C2267 +
                     (C2327 + C2328 + C2329) * C50602) *
                        C50757 * C1651 -
                    ((C2736 + C2737 + C2738) * C50602 +
                     (C2273 * C1540 + C2703 + C2703 + C2266 * C1548 +
                      C2271 * C867 + C2704 + C2704 + C2265 * C877 +
                      C2269 * C449 + C2705 + C2705 + C2264 * C469) *
                         C2267) *
                        C50757 * C50724) *
                       C50868 +
                   (((C2269 * C867 + C3273 + C3273 + C2264 * C877 +
                      C2271 * C1540 + C3274 + C3274 + C2265 * C1548 +
                      C2273 * C3263 + C3275 + C3275 + C2266 * C3269) *
                         C2267 +
                     (C3294 + C3295 + C3296) * C50602) *
                        C50757 * C50724 -
                    ((C2533 + C2534 + C2535) * C50602 +
                     (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 +
                      C2271 * C279 + C2501 + C2501 + C2265 * C299 +
                      C2269 * C278 + C2502 + C2502 + C2264 * C298) *
                         C2267) *
                        C50757 * C1651) *
                       C50696) *
                      C50860 +
                  ((((C2738 + C2737 + C2736) * C2267 +
                     (C3067 + C3068 + C3069) * C50602) *
                        C50757 * C50724 -
                    ((C2330 + C2331 + C2332) * C50602 +
                     (C2329 + C2328 + C2327) * C2267) *
                        C50757 * C1651) *
                       C50868 +
                   (((C2535 + C2534 + C2533) * C2267 +
                     (C2903 + C2904 + C2905) * C50602) *
                        C50757 * C1651 -
                    ((C2273 * C3265 + C3285 + C3285 + C2266 * C3271 +
                      C2271 * C1538 + C3286 + C3286 + C2265 * C1546 +
                      C2269 * C869 + C3287 + C3287 + C2264 * C879) *
                         C50602 +
                     (C3296 + C3295 + C3294) * C2267) *
                        C50757 * C50724) *
                       C50696) *
                      C50631)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C141 + C141 + C50741 * C133) * C106 +
                     C168 * C107 + C169 * C108 + C170 * C109) *
                        C50757 * C1651 -
                    (C511 * C109 + C512 * C108 + C513 * C107 +
                     (C117 * C449 + C486 + C486 + C50741 * C469) * C106) *
                        C50757 * C50724) *
                       C50868 +
                   (((C117 * C867 + C883 + C883 + C50741 * C877) * C106 +
                     C900 * C107 + C901 * C108 + C902 * C109) *
                        C50757 * C50724 -
                    (C340 * C109 + C341 * C108 + C342 * C107 +
                     (C117 * C278 + C315 + C315 + C50741 * C298) * C106) *
                        C50757 * C1651) *
                       C50696) *
                      C50860 +
                  (((C513 * C106 + C512 * C107 + C511 * C108 + C737 * C109) *
                        C50757 * C50724 -
                    (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                        C50757 * C1651) *
                       C50868 +
                   ((C342 * C106 + C341 * C107 + C340 * C108 + C628 * C109) *
                        C50757 * C1651 -
                    ((C117 * C871 + C893 + C893 + C50741 * C881) * C109 +
                     C902 * C108 + C901 * C107 + C900 * C106) *
                        C50757 * C50724) *
                       C50696) *
                      C50631)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((((C117 * C119 + C141 + C141 + C50741 * C133) * C2267 +
                      C168 * C50602) *
                         C5200 +
                     (C5563 + C5525) * C5201 + C5569 * C5202) *
                        C1651 -
                    (C7402 * C5202 + (C5528 + C5564) * C5201 +
                     (C5525 + C5563) * C5200) *
                        C50724) *
                       C50868 +
                   (((C6092 + C6070) * C5200 + (C6093 + C6073) * C5201 +
                     (C6503 + C6496) * C5202) *
                        C50724 -
                    (C6497 * C5202 + (C6070 + C6092) * C5201 +
                     (C342 * C50602 +
                      (C117 * C278 + C315 + C315 + C50741 * C298) * C2267) *
                         C5200) *
                        C1651) *
                       C50696) *
                      C50860 +
                  ((((C5537 + C5538) * C5200 + (C5539 + C5540) * C5201 +
                     (C5567 + C5568) * C5202) *
                        C50724 -
                    (C5550 * C5202 + (C5538 + C5537) * C5201 +
                     (C169 * C50602 + C168 * C2267) * C5200) *
                        C1651) *
                       C50868 +
                   (((C342 * C2267 + C341 * C50602) * C5200 +
                     (C6078 + C6079) * C5201 + (C6080 + C6081) * C5202) *
                        C1651 -
                    (((C117 * C6064 + C6082 + C6082 + C50741 * C6066) * C50602 +
                      C6091 * C2267) *
                         C5202 +
                     (C6081 + C6080) * C5201 + (C6079 + C6078) * C5200) *
                        C50724) *
                       C50696) *
                      C50631)) /
                    (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 +
             C2277 + C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
             C2266 * C299) *
                C2267 +
            (C2327 + C2328 + C2329) * C50602) *
               C50757 * C50915 -
           ((C2736 + C2737 + C2738) * C50602 +
            (C2273 * C1540 + C2703 + C2703 + C2266 * C1548 + C2271 * C867 +
             C2704 + C2704 + C2265 * C877 + C2269 * C449 + C2705 + C2705 +
             C2264 * C469) *
                C2267) *
               C50757 * C50916 +
           ((C2269 * C450 + C2706 + C2706 + C2264 * C470 + C2271 * C1193 +
             C2707 + C2707 + C2265 * C1201 + C2273 * C2684 + C2708 + C2708 +
             C2266 * C2690) *
                C2267 +
            (C2739 + C2740 + C2741) * C50602) *
               C50757 * C2067) *
              C50868 +
          (((C2269 * C867 + C3273 + C3273 + C2264 * C877 + C2271 * C1540 +
             C3274 + C3274 + C2265 * C1548 + C2273 * C3263 + C3275 + C3275 +
             C2266 * C3269) *
                C2267 +
            (C3294 + C3295 + C3296) * C50602) *
               C50757 * C50916 -
           ((C2533 + C2534 + C2535) * C50602 +
            (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 + C2271 * C279 +
             C2501 + C2501 + C2265 * C299 + C2269 * C278 + C2502 + C2502 +
             C2264 * C298) *
                C2267) *
               C50757 * C50915 -
           ((C2273 * C3698 + C3705 + C3705 + C2266 * C3702 + C2271 * C2685 +
             C3706 + C3706 + C2265 * C2691 + C2269 * C1192 + C3707 + C3707 +
             C2264 * C1200) *
                C50602 +
            (C2273 * C3699 + C3708 + C3708 + C2266 * C3703 + C2271 * C2684 +
             C3709 + C3709 + C2265 * C2690 + C2269 * C1193 + C3710 + C3710 +
             C2264 * C1201) *
                C2267) *
               C50757 * C2067) *
              C50696) *
         C50625) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50741 * C133) * C106 + C168 * C107 +
            C169 * C108 + C170 * C109) *
               C50757 * C50915 -
           (C511 * C109 + C512 * C108 + C513 * C107 +
            (C117 * C449 + C486 + C486 + C50741 * C469) * C106) *
               C50757 * C50916 +
           ((C117 * C450 + C487 + C487 + C50741 * C470) * C106 + C514 * C107 +
            C515 * C108 + C516 * C109) *
               C50757 * C2067) *
              C50868 +
          (((C117 * C867 + C883 + C883 + C50741 * C877) * C106 + C900 * C107 +
            C901 * C108 + C902 * C109) *
               C50757 * C50916 -
           (C340 * C109 + C341 * C108 + C342 * C107 +
            (C117 * C278 + C315 + C315 + C50741 * C298) * C106) *
               C50757 * C50915 -
           ((C117 * C1190 + C1203 + C1203 + C50741 * C1198) * C109 +
            (C117 * C1191 + C1204 + C1204 + C50741 * C1199) * C108 +
            (C117 * C1192 + C1205 + C1205 + C50741 * C1200) * C107 +
            (C117 * C1193 + C1206 + C1206 + C50741 * C1201) * C106) *
               C50757 * C2067) *
              C50696) *
         C50625) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50741 * C133) * C2267 +
             C168 * C50602) *
                C5200 +
            (C5563 + C5525) * C5201 + C5569 * C5202) *
               C50915 -
           (C7402 * C5202 + (C5528 + C5564) * C5201 + (C5525 + C5563) * C5200) *
               C50916 +
           (C5569 * C5200 + (C5566 + C5565) * C5201 + (C7411 + C7405) * C5202) *
               C2067) *
              C50868 +
          (((C6092 + C6070) * C5200 + (C6093 + C6073) * C5201 +
            (C6503 + C6496) * C5202) *
               C50916 -
           (C6497 * C5202 + (C6070 + C6092) * C5201 +
            (C342 * C50602 +
             (C117 * C278 + C315 + C315 + C50741 * C298) * C2267) *
                C5200) *
               C50915 -
           (((C117 * C6487 + C6498 + C6498 + C50741 * C6491) * C50602 +
             (C117 * C6488 + C6499 + C6499 + C50741 * C6492) * C2267) *
                C5202 +
            (C6496 + C6503) * C5201 + C6497 * C5200) *
               C2067) *
              C50696) *
         C50625) /
            (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C141 + C141 + C50741 * C133) * C106 +
                C168 * C107 + C169 * C108 + C170 * C109) *
                   C50757 * C1651 -
               (C511 * C109 + C512 * C108 + C513 * C107 +
                (C117 * C449 + C486 + C486 + C50741 * C469) * C106) *
                   C50757 * C50724) *
                  C50644 * C1002 +
              ((C513 * C106 + C512 * C107 + C511 * C108 + C737 * C109) *
                   C50757 * C50724 -
               (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                   C50757 * C1651) *
                  C50644 * C1003 +
              ((C169 * C106 + C170 * C107 + C171 * C108 + C172 * C109) *
                   C50757 * C1651 -
               ((C117 * C728 + C734 + C734 + C50741 * C730) * C109 +
                C737 * C108 + C511 * C107 + C512 * C106) *
                   C50757 * C50724) *
                  C50644 * C1004) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C141 + C141 + C50741 * C133) * C106 +
                C168 * C107 + C169 * C108 + C170 * C109) *
                   C50757 * C1651 -
               (C511 * C109 + C512 * C108 + C513 * C107 +
                (C117 * C449 + C486 + C486 + C50741 * C469) * C106) *
                   C50757 * C50724) *
                  C270 +
              (((C117 * C867 + C883 + C883 + C50741 * C877) * C106 +
                C900 * C107 + C901 * C108 + C902 * C109) *
                   C50757 * C50724 -
               (C340 * C109 + C341 * C108 + C342 * C107 +
                (C117 * C278 + C315 + C315 + C50741 * C298) * C106) *
                   C50757 * C1651) *
                  C271 +
              (((C117 * C279 + C316 + C316 + C50741 * C299) * C106 +
                C343 * C107 + C344 * C108 + C345 * C109) *
                   C50757 * C1651 -
               ((C117 * C1537 + C1550 + C1550 + C50741 * C1545) * C109 +
                (C117 * C1538 + C1551 + C1551 + C50741 * C1546) * C108 +
                (C117 * C1539 + C1552 + C1552 + C50741 * C1547) * C107 +
                (C117 * C1540 + C1553 + C1553 + C50741 * C1548) * C106) *
                   C50757 * C50724) *
                  C272) *
             C50625) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50741 * C133) * C106 + C168 * C107 +
           C169 * C108 + C170 * C109) *
              C50757 * C1817 -
          (C511 * C109 + C512 * C108 + C513 * C107 +
           (C117 * C449 + C486 + C486 + C50741 * C469) * C106) *
              C50757 * C1818 +
          ((C117 * C450 + C487 + C487 + C50741 * C470) * C106 + C514 * C107 +
           C515 * C108 + C516 * C109) *
              C50757 * C1819 -
          ((C117 * C1821 + C1834 + C1834 + C50741 * C1829) * C109 +
           (C117 * C1822 + C1835 + C1835 + C50741 * C1830) * C108 +
           (C117 * C1823 + C1836 + C1836 + C50741 * C1831) * C107 +
           (C117 * C1824 + C1837 + C1837 + C50741 * C1832) * C106) *
              C50757 * C1820) *
         C50644 * C50625) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 +
             C2277 + C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
             C2266 * C299) *
                C2267 +
            (C2327 + C2328 + C2329) * C50602) *
               C50757 * C1651 -
           ((C2736 + C2737 + C2738) * C50602 +
            (C2273 * C1540 + C2703 + C2703 + C2266 * C1548 + C2271 * C867 +
             C2704 + C2704 + C2265 * C877 + C2269 * C449 + C2705 + C2705 +
             C2264 * C469) *
                C2267) *
               C50757 * C50724) *
              C50644 * C1002 +
          (((C2738 + C2737 + C2736) * C2267 +
            (C3067 + C3068 + C3069) * C50602) *
               C50757 * C50724 -
           ((C2330 + C2331 + C2332) * C50602 +
            (C2329 + C2328 + C2327) * C2267) *
               C50757 * C1651) *
              C50644 * C1003 +
          (((C2332 + C2331 + C2330) * C2267 +
            (C2333 + C2334 + C2335) * C50602) *
               C50757 * C1651 -
           ((C2273 * C1537 + C3058 + C3058 + C2266 * C1545 + C2271 * C870 +
             C3059 + C3059 + C2265 * C880 + C2269 * C446 + C3060 + C3060 +
             C2264 * C466) *
                C50602 +
            (C3069 + C3068 + C3067) * C2267) *
               C50757 * C50724) *
              C50644 * C1004)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 +
             C2277 + C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
             C2266 * C299) *
                C2267 +
            (C2327 + C2328 + C2329) * C50602) *
               C50757 * C1651 -
           ((C2736 + C2737 + C2738) * C50602 +
            (C2273 * C1540 + C2703 + C2703 + C2266 * C1548 + C2271 * C867 +
             C2704 + C2704 + C2265 * C877 + C2269 * C449 + C2705 + C2705 +
             C2264 * C469) *
                C2267) *
               C50757 * C50724) *
              C270 +
          (((C2269 * C867 + C3273 + C3273 + C2264 * C877 + C2271 * C1540 +
             C3274 + C3274 + C2265 * C1548 + C2273 * C3263 + C3275 + C3275 +
             C2266 * C3269) *
                C2267 +
            (C3294 + C3295 + C3296) * C50602) *
               C50757 * C50724 -
           ((C2533 + C2534 + C2535) * C50602 +
            (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 + C2271 * C279 +
             C2501 + C2501 + C2265 * C299 + C2269 * C278 + C2502 + C2502 +
             C2264 * C298) *
                C2267) *
               C50757 * C1651) *
              C271 +
          (((C2269 * C279 + C2503 + C2503 + C2264 * C299 + C2271 * C1079 +
             C2504 + C2504 + C2265 * C1087 + C2273 * C2481 + C2505 + C2505 +
             C2266 * C2487) *
                C2267 +
            (C2536 + C2537 + C2538) * C50602) *
               C50757 * C1651 -
           ((C2273 * C4196 + C4203 + C4203 + C2266 * C4200 + C2271 * C3264 +
             C4204 + C4204 + C2265 * C3270 + C2269 * C1539 + C4205 + C4205 +
             C2264 * C1547) *
                C50602 +
            (C2273 * C4197 + C4206 + C4206 + C2266 * C4201 + C2271 * C3263 +
             C4207 + C4207 + C2265 * C3269 + C2269 * C1540 + C4208 + C4208 +
             C2264 * C1548) *
                C2267) *
               C50757 * C50724) *
              C272) *
         C50625) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 + C2277 +
            C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
            C2266 * C299) *
               C2267 +
           (C2327 + C2328 + C2329) * C50602) *
              C50757 * C1817 -
          ((C2736 + C2737 + C2738) * C50602 +
           (C2273 * C1540 + C2703 + C2703 + C2266 * C1548 + C2271 * C867 +
            C2704 + C2704 + C2265 * C877 + C2269 * C449 + C2705 + C2705 +
            C2264 * C469) *
               C2267) *
              C50757 * C1818 +
          ((C2269 * C450 + C2706 + C2706 + C2264 * C470 + C2271 * C1193 +
            C2707 + C2707 + C2265 * C1201 + C2273 * C2684 + C2708 + C2708 +
            C2266 * C2690) *
               C2267 +
           (C2739 + C2740 + C2741) * C50602) *
              C50757 * C1819 -
          ((C2273 * C4598 + C4611 + C4611 + C2266 * C4606 + C2271 * C4599 +
            C4612 + C4612 + C2265 * C4607 + C2269 * C1823 + C4613 + C4613 +
            C2264 * C1831) *
               C50602 +
           (C2273 * C4600 + C4614 + C4614 + C2266 * C4608 + C2271 * C4601 +
            C4615 + C4615 + C2265 * C4609 + C2269 * C1824 + C4616 + C4616 +
            C2264 * C1832) *
               C2267) *
              C50757 * C1820) *
         C50644 * C50625) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50741 * C133) * C2267 +
             C168 * C50602) *
                C5200 +
            (C5563 + C5525) * C5201 + C5569 * C5202) *
               C1651 -
           ((C5565 + C5566) * C5202 + (C5528 + C5564) * C5201 +
            (C5525 + C5563) * C5200) *
               C50724) *
              C50644 * C1002 +
          (((C5537 + C5538) * C5200 + (C5539 + C5540) * C5201 +
            (C5567 + C5568) * C5202) *
               C50724 -
           (C5550 * C5202 + (C5538 + C5537) * C5201 +
            (C169 * C50602 + C168 * C2267) * C5200) *
               C1651) *
              C50644 * C1003 +
          (((C169 * C2267 + C170 * C50602) * C5200 + (C5867 + C5868) * C5201 +
            (C5869 + C5870) * C5202) *
               C1651 -
           (((C117 * C1821 + C1834 + C1834 + C50741 * C1829) * C50602 +
             C5562 * C2267) *
                C5202 +
            (C5870 + C5869) * C5201 + (C5868 + C5867) * C5200) *
               C50724) *
              C50644 * C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50741 * C133) * C2267 +
             C168 * C50602) *
                C5200 +
            (C5563 + C5525) * C5201 + C5569 * C5202) *
               C1651 -
           ((C5565 + C5566) * C5202 + (C5528 + C5564) * C5201 +
            (C5525 + C5563) * C5200) *
               C50724) *
              C270 +
          (((C6092 + C6070) * C5200 + (C6093 + C6073) * C5201 +
            (C6503 + C6496) * C5202) *
               C50724 -
           (C6497 * C5202 + (C6070 + C6092) * C5201 +
            (C342 * C50602 +
             (C117 * C278 + C315 + C315 + C50741 * C298) * C2267) *
                C5200) *
               C1651) *
              C271 +
          ((((C117 * C279 + C316 + C316 + C50741 * C299) * C2267 +
             C343 * C50602) *
                C5200 +
            (C7004 + C6992) * C5201 + (C7005 + C6995) * C5202) *
               C1651 -
           (((C117 * C4598 + C6996 + C6996 + C50741 * C4606) * C50602 +
             (C117 * C4600 + C6997 + C6997 + C50741 * C4608) * C2267) *
                C5202 +
            (C6995 + C7005) * C5201 + (C6992 + C7004) * C5200) *
               C50724) *
              C272) *
         C50625) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50741 * C133) * C2267 +
            C168 * C50602) *
               C5200 +
           (C5563 + C5525) * C5201 + C5569 * C5202) *
              C1817 -
          (C7402 * C5202 + (C5528 + C5564) * C5201 + (C5525 + C5563) * C5200) *
              C1818 +
          (C5569 * C5200 + (C5566 + C5565) * C5201 + (C7411 + C7405) * C5202) *
              C1819 -
          (((C117 * C7395 + C7406 + C7406 + C50741 * C7399) * C50602 +
            (C117 * C7396 + C7407 + C7407 + C50741 * C7400) * C2267) *
               C5202 +
           (C7405 + C7411) * C5201 + C7402 * C5200) *
              C1820) *
         C50644 * C50625) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 +
             C2277 + C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
             C2266 * C299) *
                C2267 +
            (C2327 + C2328 + C2329) * C50602) *
               C50757 * C50915 -
           ((C2736 + C2737 + C2738) * C50602 +
            (C2273 * C1540 + C2703 + C2703 + C2266 * C1548 + C2271 * C867 +
             C2704 + C2704 + C2265 * C877 + C2269 * C449 + C2705 + C2705 +
             C2264 * C469) *
                C2267) *
               C50757 * C50916 +
           ((C2269 * C450 + C2706 + C2706 + C2264 * C470 + C2271 * C1193 +
             C2707 + C2707 + C2265 * C1201 + C2273 * C2684 + C2708 + C2708 +
             C2266 * C2690) *
                C2267 +
            (C2739 + C2740 + C2741) * C50602) *
               C50757 * C2067) *
              C50644 * C50860 +
          (((C2738 + C2737 + C2736) * C2267 +
            (C3067 + C3068 + C3069) * C50602) *
               C50757 * C50916 -
           ((C2330 + C2331 + C2332) * C50602 +
            (C2329 + C2328 + C2327) * C2267) *
               C50757 * C50915 -
           ((C2273 * C2686 + C2721 + C2721 + C2266 * C2692 + C2271 * C1191 +
             C2722 + C2722 + C2265 * C1199 + C2269 * C452 + C2723 + C2723 +
             C2264 * C472) *
                C50602 +
            (C2741 + C2740 + C2739) * C2267) *
               C50757 * C2067) *
              C50644 * C50631)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50741 * C133) * C106 + C168 * C107 +
            C169 * C108 + C170 * C109) *
               C50757 * C50915 -
           (C511 * C109 + C512 * C108 + C513 * C107 +
            (C117 * C449 + C486 + C486 + C50741 * C469) * C106) *
               C50757 * C50916 +
           ((C117 * C450 + C487 + C487 + C50741 * C470) * C106 + C514 * C107 +
            C515 * C108 + C516 * C109) *
               C50757 * C2067) *
              C50644 * C50860 +
          ((C513 * C106 + C512 * C107 + C511 * C108 + C737 * C109) * C50757 *
               C50916 -
           (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) * C50757 *
               C50915 -
           ((C117 * C455 + C498 + C498 + C50741 * C475) * C109 + C516 * C108 +
            C515 * C107 + C514 * C106) *
               C50757 * C2067) *
              C50644 * C50631)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50741 * C133) * C2267 +
             C168 * C50602) *
                C5200 +
            (C5563 + C5525) * C5201 + C5569 * C5202) *
               C50915 -
           (C7402 * C5202 + (C5528 + C5564) * C5201 + (C5525 + C5563) * C5200) *
               C50916 +
           (C5569 * C5200 + (C5566 + C5565) * C5201 + (C7411 + C7405) * C5202) *
               C2067) *
              C50644 * C50860 +
          (((C5537 + C5538) * C5200 + (C5539 + C5540) * C5201 +
            (C5567 + C5568) * C5202) *
               C50916 -
           (C5550 * C5202 + (C5538 + C5537) * C5201 +
            (C169 * C50602 + C168 * C2267) * C5200) *
               C50915 -
           (((C117 * C5515 + C5543 + C5543 + C50741 * C5521) * C50602 +
             C5561 * C2267) *
                C5202 +
            (C5568 + C5567) * C5201 + C5550 * C5200) *
               C2067) *
              C50644 * C50631)) /
            (p * q * std::sqrt(p + q));
    d2ee[44] += (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 ((((C117 * C119 + C141 + C141 + C50741 * C133) * C106 +
                    C168 * C107 + C169 * C108 + C170 * C109) *
                       C50757 * C1651 -
                   (C511 * C109 + C512 * C108 + C513 * C107 +
                    (C117 * C449 + C486 + C486 + C50741 * C469) * C106) *
                       C50757 * C50724) *
                      C270 +
                  (((C117 * C867 + C883 + C883 + C50741 * C877) * C106 +
                    C900 * C107 + C901 * C108 + C902 * C109) *
                       C50757 * C50724 -
                   (C340 * C109 + C341 * C108 + C342 * C107 +
                    (C117 * C278 + C315 + C315 + C50741 * C298) * C106) *
                       C50757 * C1651) *
                      C271 +
                  (((C117 * C279 + C316 + C316 + C50741 * C299) * C106 +
                    C343 * C107 + C344 * C108 + C345 * C109) *
                       C50757 * C1651 -
                   ((C117 * C1537 + C1550 + C1550 + C50741 * C1545) * C109 +
                    (C117 * C1538 + C1551 + C1551 + C50741 * C1546) * C108 +
                    (C117 * C1539 + C1552 + C1552 + C50741 * C1547) * C107 +
                    (C117 * C1540 + C1553 + C1553 + C50741 * C1548) * C106) *
                       C50757 * C50724) *
                      C272) *
                 C50625) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 ((((C117 * C119 + C141 + C141 + C50741 * C133) * C106 +
                    C168 * C107 + C169 * C108 + C170 * C109) *
                       C50757 * C1651 -
                   (C511 * C109 + C512 * C108 + C513 * C107 +
                    (C117 * C449 + C486 + C486 + C50741 * C469) * C106) *
                       C50757 * C50724) *
                      C50644 * C1002 +
                  ((C513 * C106 + C512 * C107 + C511 * C108 + C737 * C109) *
                       C50757 * C50724 -
                   (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                       C50757 * C1651) *
                      C50644 * C1003 +
                  ((C169 * C106 + C170 * C107 + C171 * C108 + C172 * C109) *
                       C50757 * C1651 -
                   ((C117 * C728 + C734 + C734 + C50741 * C730) * C109 +
                    C737 * C108 + C511 * C107 + C512 * C106) *
                       C50757 * C50724) *
                      C50644 * C1004)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 +
                     C2271 * C278 + C2277 + C2277 + C2265 * C298 +
                     C2273 * C279 + C2278 + C2278 + C2266 * C299) *
                        C2267 +
                    (C2327 + C2328 + C2329) * C50602) *
                       C50757 * C1651 -
                   ((C2736 + C2737 + C2738) * C50602 +
                    (C2273 * C1540 + C2703 + C2703 + C2266 * C1548 +
                     C2271 * C867 + C2704 + C2704 + C2265 * C877 +
                     C2269 * C449 + C2705 + C2705 + C2264 * C469) *
                        C2267) *
                       C50757 * C50724) *
                      C50644 * C1002 +
                  (((C2738 + C2737 + C2736) * C2267 +
                    (C3067 + C3068 + C3069) * C50602) *
                       C50757 * C50724 -
                   ((C2330 + C2331 + C2332) * C50602 +
                    (C2329 + C2328 + C2327) * C2267) *
                       C50757 * C1651) *
                      C50644 * C1003 +
                  (((C2332 + C2331 + C2330) * C2267 +
                    (C2333 + C2334 + C2335) * C50602) *
                       C50757 * C1651 -
                   ((C2273 * C1537 + C3058 + C3058 + C2266 * C1545 +
                     C2271 * C870 + C3059 + C3059 + C2265 * C880 +
                     C2269 * C446 + C3060 + C3060 + C2264 * C466) *
                        C50602 +
                    (C3069 + C3068 + C3067) * C2267) *
                       C50757 * C50724) *
                      C50644 * C1004)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 +
                     C2271 * C278 + C2277 + C2277 + C2265 * C298 +
                     C2273 * C279 + C2278 + C2278 + C2266 * C299) *
                        C2267 +
                    (C2327 + C2328 + C2329) * C50602) *
                       C50757 * C1651 -
                   ((C2736 + C2737 + C2738) * C50602 +
                    (C2273 * C1540 + C2703 + C2703 + C2266 * C1548 +
                     C2271 * C867 + C2704 + C2704 + C2265 * C877 +
                     C2269 * C449 + C2705 + C2705 + C2264 * C469) *
                        C2267) *
                       C50757 * C50724) *
                      C270 +
                  (((C2269 * C867 + C3273 + C3273 + C2264 * C877 +
                     C2271 * C1540 + C3274 + C3274 + C2265 * C1548 +
                     C2273 * C3263 + C3275 + C3275 + C2266 * C3269) *
                        C2267 +
                    (C3294 + C3295 + C3296) * C50602) *
                       C50757 * C50724 -
                   ((C2533 + C2534 + C2535) * C50602 +
                    (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 +
                     C2271 * C279 + C2501 + C2501 + C2265 * C299 +
                     C2269 * C278 + C2502 + C2502 + C2264 * C298) *
                        C2267) *
                       C50757 * C1651) *
                      C271 +
                  (((C2269 * C279 + C2503 + C2503 + C2264 * C299 +
                     C2271 * C1079 + C2504 + C2504 + C2265 * C1087 +
                     C2273 * C2481 + C2505 + C2505 + C2266 * C2487) *
                        C2267 +
                    (C2536 + C2537 + C2538) * C50602) *
                       C50757 * C1651 -
                   ((C2273 * C4196 + C4203 + C4203 + C2266 * C4200 +
                     C2271 * C3264 + C4204 + C4204 + C2265 * C3270 +
                     C2269 * C1539 + C4205 + C4205 + C2264 * C1547) *
                        C50602 +
                    (C2273 * C4197 + C4206 + C4206 + C2266 * C4201 +
                     C2271 * C3263 + C4207 + C4207 + C2265 * C3269 +
                     C2269 * C1540 + C4208 + C4208 + C2264 * C1548) *
                        C2267) *
                       C50757 * C50724) *
                      C272) *
                 C50625) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C141 + C141 + C50741 * C133) * C2267 +
                     C168 * C50602) *
                        C5200 +
                    (C5563 + C5525) * C5201 + C5569 * C5202) *
                       C1651 -
                   ((C5565 + C5566) * C5202 + (C5528 + C5564) * C5201 +
                    (C5525 + C5563) * C5200) *
                       C50724) *
                      C50644 * C1002 +
                  (((C5537 + C5538) * C5200 + (C5539 + C5540) * C5201 +
                    (C5567 + C5568) * C5202) *
                       C50724 -
                   (C5550 * C5202 + (C5538 + C5537) * C5201 +
                    (C169 * C50602 + C168 * C2267) * C5200) *
                       C1651) *
                      C50644 * C1003 +
                  (((C169 * C2267 + C170 * C50602) * C5200 +
                    (C5867 + C5868) * C5201 + (C5869 + C5870) * C5202) *
                       C1651 -
                   (((C117 * C1821 + C1834 + C1834 + C50741 * C1829) * C50602 +
                     C5562 * C2267) *
                        C5202 +
                    (C5870 + C5869) * C5201 + (C5868 + C5867) * C5200) *
                       C50724) *
                      C50644 * C1004)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C141 + C141 + C50741 * C133) * C2267 +
                     C168 * C50602) *
                        C5200 +
                    (C5563 + C5525) * C5201 + C5569 * C5202) *
                       C1651 -
                   ((C5565 + C5566) * C5202 + (C5528 + C5564) * C5201 +
                    (C5525 + C5563) * C5200) *
                       C50724) *
                      C270 +
                  (((C6092 + C6070) * C5200 + (C6093 + C6073) * C5201 +
                    (C6503 + C6496) * C5202) *
                       C50724 -
                   (C6497 * C5202 + (C6070 + C6092) * C5201 +
                    (C342 * C50602 +
                     (C117 * C278 + C315 + C315 + C50741 * C298) * C2267) *
                        C5200) *
                       C1651) *
                      C271 +
                  ((((C117 * C279 + C316 + C316 + C50741 * C299) * C2267 +
                     C343 * C50602) *
                        C5200 +
                    (C7004 + C6992) * C5201 + (C7005 + C6995) * C5202) *
                       C1651 -
                   (((C117 * C4598 + C6996 + C6996 + C50741 * C4606) * C50602 +
                     (C117 * C4600 + C6997 + C6997 + C50741 * C4608) * C2267) *
                        C5202 +
                    (C6995 + C7005) * C5201 + (C6992 + C7004) * C5200) *
                       C50724) *
                      C272) *
                 C50625) /
                    (p * q * std::sqrt(p + q));
    d2ee[45] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C141 + C141 + C50741 * C133) * C50909 +
                     C168 * C50910 + C169 * C7999) *
                        C50882 +
                    (C11176 + C11177 + C11178) * C50821) *
                       C50660 * C50868 -
                   ((C901 * C7999 + C900 * C50910 + C6089 * C50909) * C50821 +
                    (C341 * C7999 + C342 * C50910 +
                     (C117 * C278 + C315 + C315 + C50741 * C298) * C50909) *
                        C50882) *
                       C50660 * C50696) *
                      C50911 +
                  (((C342 * C50909 + C341 * C50910 + C340 * C7999) * C50882 +
                    (C900 * C50909 + C901 * C50910 + C902 * C7999) * C50821) *
                       C50660 * C50696 -
                   ((C11184 + C11183 + C11182) * C50821 +
                    (C170 * C7999 + C169 * C50910 + C168 * C50909) * C50882) *
                       C50660 * C50868) *
                      C50912 +
                  (((C169 * C50909 + C170 * C50910 + C171 * C7999) * C50882 +
                    (C512 * C50909 + C511 * C50910 + C737 * C7999) * C50821) *
                       C50660 * C50868 -
                   (((C117 * C871 + C893 + C893 + C50741 * C881) * C7999 +
                     C902 * C50910 + C901 * C50909) *
                        C50821 +
                    (C628 * C7999 + C340 * C50910 + C341 * C50909) * C50882) *
                       C50660 * C50696) *
                      C618)) /
                (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50741 * C133) * C50909 +
              C168 * C50910 + C169 * C7999) *
                 C50882 +
             (C11176 + C11177 + C11178) * C50821) *
                C50869 -
            ((C11179 + C11180 + C11181) * C50821 +
             (C11178 + C11177 + C11176) * C50882) *
                C50724) *
               C50868 +
           (((C11677 + C11678 + C11679) * C50882 +
             (C6090 * C50909 + C5365 * C50910 + C5720 * C7999) * C50821) *
                C50724 -
            ((C11679 + C11678 + C11677) * C50821 +
             (C341 * C7999 + C342 * C50910 +
              (C117 * C278 + C315 + C315 + C50741 * C298) * C50909) *
                 C50882) *
                C50869) *
               C50696) *
              C273 +
          ((((C11182 + C11183 + C11184) * C50882 +
             (C11185 + C11186 + C11187) * C50821) *
                C50724 -
            ((C11184 + C11183 + C11182) * C50821 +
             (C170 * C7999 + C169 * C50910 + C168 * C50909) * C50882) *
                C50869) *
               C50868 +
           (((C342 * C50909 + C341 * C50910 + C340 * C7999) * C50882 +
             (C11680 + C11681 + C11682) * C50821) *
                C50869 -
            (((C117 * C1190 + C1203 + C1203 + C50741 * C1198) * C7999 +
              C5720 * C50910 + C5365 * C50909) *
                 C50821 +
             (C11682 + C11681 + C11680) * C50882) *
                C50724) *
               C50696) *
              C50631)) /
        (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50741 * C133) * C50909 +
             C168 * C50910 + C169 * C7999) *
                C50882 +
            (C5557 * C50909 + C513 * C50910 + C512 * C7999) * C50821) *
               C50660 * C270 -
           ((C901 * C7999 + C900 * C50910 + C6089 * C50909) * C50821 +
            (C341 * C7999 + C342 * C50910 +
             (C117 * C278 + C315 + C315 + C50741 * C298) * C50909) *
                C50882) *
               C50660 * C271 +
           (((C117 * C279 + C316 + C316 + C50741 * C299) * C50909 +
             C343 * C50910 + C344 * C7999) *
                C50882 +
            (C7002 * C50909 + C5366 * C50910 + C11029 * C7999) * C50821) *
               C50660 * C272) *
              C273 +
          (((C342 * C50909 + C341 * C50910 + C340 * C7999) * C50882 +
            (C900 * C50909 + C901 * C50910 + C902 * C7999) * C50821) *
               C50660 * C271 -
           ((C511 * C7999 + C512 * C50910 + C513 * C50909) * C50821 +
            (C170 * C7999 + C169 * C50910 + C168 * C50909) * C50882) *
               C50660 * C270 -
           (((C117 * C1537 + C1550 + C1550 + C50741 * C1545) * C7999 +
             C11029 * C50910 + C5366 * C50909) *
                C50821 +
            (C345 * C7999 + C344 * C50910 + C343 * C50909) * C50882) *
               C50660 * C272) *
              C50631)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50741 * C133) * C50909 +
            C168 * C50910 + C169 * C7999) *
               C50882 +
           (C5557 * C50909 + C513 * C50910 + C512 * C7999) * C50821) *
              C50660 * C50644 * C113 -
          ((C511 * C7999 + C512 * C50910 + C513 * C50909) * C50821 +
           (C170 * C7999 + C169 * C50910 + C168 * C50909) * C50882) *
              C50660 * C50644 * C114 +
          ((C169 * C50909 + C170 * C50910 + C171 * C7999) * C50882 +
           (C512 * C50909 + C511 * C50910 + C737 * C7999) * C50821) *
              C50660 * C50644 * C115 -
          (((C117 * C728 + C734 + C734 + C50741 * C730) * C7999 +
            C737 * C50910 + C511 * C50909) *
               C50821 +
           (C172 * C7999 + C171 * C50910 + C170 * C50909) * C50882) *
              C50660 * C50644 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50741 * C133) * C50909 +
             C168 * C50910 + C169 * C7999) *
                C50882 +
            (C11176 + C11177 + C11178) * C50821) *
               C443 -
           ((C11179 + C11180 + C11181) * C50821 +
            (C11178 + C11177 + C11176) * C50882) *
               C444 +
           ((C11181 + C11180 + C11179) * C50882 +
            (C5560 * C50909 + C5559 * C50910 + C5562 * C7999) * C50821) *
               C445) *
              C50644 * C273 +
          (((C11182 + C11183 + C11184) * C50882 +
            (C11185 + C11186 + C11187) * C50821) *
               C444 -
           ((C11184 + C11183 + C11182) * C50821 +
            (C170 * C7999 + C169 * C50910 + C168 * C50909) * C50882) *
               C443 -
           (((C117 * C1821 + C1834 + C1834 + C50741 * C1829) * C7999 +
             C5562 * C50910 + C5559 * C50909) *
                C50821 +
            (C11187 + C11186 + C11185) * C50882) *
               C445) *
              C50644 * C50631)) /
            (p * q * std::sqrt(p + q));
    d2ee[48] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C141 + C141 + C50741 * C133) * C50909 +
                     C168 * C50910 + C169 * C7999) *
                        C50882 +
                    (C11176 + C11177 + C11178) * C50821) *
                       C50869 -
                   ((C11179 + C11180 + C11181) * C50821 +
                    (C11178 + C11177 + C11176) * C50882) *
                       C50724) *
                      C50644 * C50911 +
                  (((C11182 + C11183 + C11184) * C50882 +
                    (C11185 + C11186 + C11187) * C50821) *
                       C50724 -
                   ((C11184 + C11183 + C11182) * C50821 +
                    (C170 * C7999 + C169 * C50910 + C168 * C50909) * C50882) *
                       C50869) *
                      C50644 * C50912 +
                  (((C169 * C50909 + C170 * C50910 + C171 * C7999) * C50882 +
                    (C11480 + C11481 + C11482) * C50821) *
                       C50869 -
                   (((C117 * C455 + C498 + C498 + C50741 * C475) * C7999 +
                     C516 * C50910 + C515 * C50909) *
                        C50821 +
                    (C11482 + C11481 + C11480) * C50882) *
                       C50724) *
                      C50644 * C618)) /
                (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50741 * C133) * C50909 +
            C168 * C50910 + C169 * C7999) *
               C50882 +
           (C5557 * C50909 + C513 * C50910 + C512 * C7999) * C50821) *
              C50660 * C50644 * C113 -
          ((C511 * C7999 + C512 * C50910 + C513 * C50909) * C50821 +
           (C170 * C7999 + C169 * C50910 + C168 * C50909) * C50882) *
              C50660 * C50644 * C114 +
          ((C169 * C50909 + C170 * C50910 + C171 * C7999) * C50882 +
           (C512 * C50909 + C511 * C50910 + C737 * C7999) * C50821) *
              C50660 * C50644 * C115 -
          (((C117 * C728 + C734 + C734 + C50741 * C730) * C7999 +
            C737 * C50910 + C511 * C50909) *
               C50821 +
           (C172 * C7999 + C171 * C50910 + C170 * C50909) * C50882) *
              C50660 * C50644 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50741 * C133) * C50909 +
             C168 * C50910 + C169 * C7999) *
                C50882 +
            (C5557 * C50909 + C513 * C50910 + C512 * C7999) * C50821) *
               C50660 * C270 -
           ((C901 * C7999 + C900 * C50910 + C6089 * C50909) * C50821 +
            (C341 * C7999 + C342 * C50910 +
             (C117 * C278 + C315 + C315 + C50741 * C298) * C50909) *
                C50882) *
               C50660 * C271 +
           (((C117 * C279 + C316 + C316 + C50741 * C299) * C50909 +
             C343 * C50910 + C344 * C7999) *
                C50882 +
            (C7002 * C50909 + C5366 * C50910 + C11029 * C7999) * C50821) *
               C50660 * C272) *
              C273 +
          (((C342 * C50909 + C341 * C50910 + C340 * C7999) * C50882 +
            (C900 * C50909 + C901 * C50910 + C902 * C7999) * C50821) *
               C50660 * C271 -
           ((C511 * C7999 + C512 * C50910 + C513 * C50909) * C50821 +
            (C170 * C7999 + C169 * C50910 + C168 * C50909) * C50882) *
               C50660 * C270 -
           (((C117 * C1537 + C1550 + C1550 + C50741 * C1545) * C7999 +
             C11029 * C50910 + C5366 * C50909) *
                C50821 +
            (C345 * C7999 + C344 * C50910 + C343 * C50909) * C50882) *
               C50660 * C272) *
              C50631)) /
            (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50741 * C133) * C50909 +
             C168 * C50910 + C169 * C7999) *
                C50882 +
            (C11176 + C11177 + C11178) * C50821) *
               C50660 * C50913 -
           ((C11679 + C11678 + C11677) * C50821 +
            (C341 * C7999 + C342 * C50910 +
             (C117 * C278 + C315 + C315 + C50741 * C298) * C50909) *
                C50882) *
               C50660 * C50914 +
           (((C117 * C279 + C316 + C316 + C50741 * C299) * C50909 +
             C343 * C50910 + C344 * C7999) *
                C50882 +
            (C7002 * C50909 + C5366 * C50910 + C11029 * C7999) * C50821) *
               C50660 * C1306) *
              C50860 +
          (((C342 * C50909 + C341 * C50910 + C340 * C7999) * C50882 +
            (C11680 + C11681 + C11682) * C50821) *
               C50660 * C50914 -
           ((C11184 + C11183 + C11182) * C50821 +
            (C170 * C7999 + C169 * C50910 + C168 * C50909) * C50882) *
               C50660 * C50913 -
           (((C117 * C1537 + C1550 + C1550 + C50741 * C1545) * C7999 +
             C11029 * C50910 + C5366 * C50909) *
                C50821 +
            (C345 * C7999 + C344 * C50910 + C343 * C50909) * C50882) *
               C50660 * C1306) *
              C50631)) /
        (p * q * std::sqrt(p + q));
    d2ee[51] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C141 + C141 + C50741 * C133) * C50909 +
                     C168 * C50910 + C169 * C7999) *
                        C50882 +
                    (C11176 + C11177 + C11178) * C50821) *
                       C50869 -
                   ((C11179 + C11180 + C11181) * C50821 +
                    (C11178 + C11177 + C11176) * C50882) *
                       C50724) *
                      C50913 +
                  (((C11677 + C11678 + C11679) * C50882 +
                    (C12074 + C12075 + C12076) * C50821) *
                       C50724 -
                   ((C11679 + C11678 + C11677) * C50821 +
                    (C341 * C7999 + C342 * C50910 +
                     (C117 * C278 + C315 + C315 + C50741 * C298) * C50909) *
                        C50882) *
                       C50869) *
                      C50914 +
                  ((((C117 * C279 + C316 + C316 + C50741 * C299) * C50909 +
                     C343 * C50910 + C344 * C7999) *
                        C50882 +
                    (C12563 + C12564 + C12565) * C50821) *
                       C50869 -
                   (((C117 * C2686 + C5358 + C5358 + C50741 * C2692) * C7999 +
                     C5367 * C50910 + C7003 * C50909) *
                        C50821 +
                    (C12565 + C12564 + C12563) * C50882) *
                       C50724) *
                      C1306) *
                 C50625) /
                (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50741 * C133) * C50909 +
            C168 * C50910 + C169 * C7999) *
               C50882 +
           (C11176 + C11177 + C11178) * C50821) *
              C50660 * C1071 -
          ((C11679 + C11678 + C11677) * C50821 +
           (C341 * C7999 + C342 * C50910 +
            (C117 * C278 + C315 + C315 + C50741 * C298) * C50909) *
               C50882) *
              C50660 * C1072 +
          (((C117 * C279 + C316 + C316 + C50741 * C299) * C50909 +
            C343 * C50910 + C344 * C7999) *
               C50882 +
           (C7002 * C50909 + C5366 * C50910 + C11029 * C7999) * C50821) *
              C50660 * C1073 -
          (((C117 * C3265 + C11927 + C11927 + C50741 * C3271) * C7999 +
            (C117 * C3264 + C6340 + C6340 + C50741 * C3270) * C50910 +
            (C117 * C3263 + C6341 + C6341 + C50741 * C3269) * C50909) *
               C50821 +
           ((C117 * C1077 + C1090 + C1090 + C50741 * C1085) * C7999 +
            (C117 * C1078 + C1091 + C1091 + C50741 * C1086) * C50910 +
            (C117 * C1079 + C1092 + C1092 + C50741 * C1087) * C50909) *
               C50882) *
              C50660 * C1074) *
         C50625) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50741 * C133) * C50909 +
             C168 * C50910 + C169 * C7999) *
                C50882 +
            (C11176 + C11177 + C11178) * C50821) *
               C50660 * C1000 -
           ((C11679 + C11678 + C11677) * C50821 +
            (C341 * C7999 + C342 * C50910 +
             (C117 * C278 + C315 + C315 + C50741 * C298) * C50909) *
                C50882) *
               C50660 * C50696) *
              C1002 +
          (((C342 * C50909 + C341 * C50910 + C340 * C7999) * C50882 +
            (C11680 + C11681 + C11682) * C50821) *
               C50660 * C50696 -
           ((C11184 + C11183 + C11182) * C50821 +
            (C170 * C7999 + C169 * C50910 + C168 * C50909) * C50882) *
               C50660 * C1000) *
              C1003 +
          (((C169 * C50909 + C170 * C50910 + C171 * C7999) * C50882 +
            (C11480 + C11481 + C11482) * C50821) *
               C50660 * C1000 -
           (((C117 * C871 + C893 + C893 + C50741 * C881) * C7999 +
             C902 * C50910 + C901 * C50909) *
                C50821 +
            (C628 * C7999 + C340 * C50910 + C341 * C50909) * C50882) *
               C50660 * C50696) *
              C1004)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50741 * C133) * C50909 +
             C168 * C50910 + C169 * C7999) *
                C50882 +
            (C11176 + C11177 + C11178) * C50821) *
               C443 -
           ((C11179 + C11180 + C11181) * C50821 +
            (C11178 + C11177 + C11176) * C50882) *
               C444 +
           ((C11181 + C11180 + C11179) * C50882 +
            (C5560 * C50909 + C5559 * C50910 + C5562 * C7999) * C50821) *
               C445) *
              C1000 +
          (((C11677 + C11678 + C11679) * C50882 +
            (C12074 + C12075 + C12076) * C50821) *
               C444 -
           ((C11679 + C11678 + C11677) * C50821 +
            (C341 * C7999 + C342 * C50910 +
             (C117 * C278 + C315 + C315 + C50741 * C298) * C50909) *
                C50882) *
               C443 -
           (((C117 * C6064 + C6082 + C6082 + C50741 * C6066) * C7999 +
             C6091 * C50910 + C6502 * C50909) *
                C50821 +
            (C12076 + C12075 + C12074) * C50882) *
               C445) *
              C50696) *
         C50625) /
            (p * q * std::sqrt(p + q));
    d2ee[53] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C117 * C119 + C141 + C141 + C50741 * C133) * C50909 +
                      C168 * C50910 + C169 * C7999) *
                         C50882 +
                     (C11176 + C11177 + C11178) * C50821) *
                        C50869 -
                    ((C11179 + C11180 + C11181) * C50821 +
                     (C11178 + C11177 + C11176) * C50882) *
                        C50724) *
                       C1000 +
                   (((C11677 + C11678 + C11679) * C50882 +
                     (C12074 + C12075 + C12076) * C50821) *
                        C50724 -
                    ((C11679 + C11678 + C11677) * C50821 +
                     (C341 * C7999 + C342 * C50910 +
                      (C117 * C278 + C315 + C315 + C50741 * C298) * C50909) *
                         C50882) *
                        C50869) *
                       C50696) *
                      C50860 +
                  ((((C11182 + C11183 + C11184) * C50882 +
                     (C11185 + C11186 + C11187) * C50821) *
                        C50724 -
                    ((C11184 + C11183 + C11182) * C50821 +
                     (C170 * C7999 + C169 * C50910 + C168 * C50909) * C50882) *
                        C50869) *
                       C1000 +
                   (((C342 * C50909 + C341 * C50910 + C340 * C7999) * C50882 +
                     (C11680 + C11681 + C11682) * C50821) *
                        C50869 -
                    (((C117 * C1190 + C1203 + C1203 + C50741 * C1198) * C7999 +
                      C5720 * C50910 + C5365 * C50909) *
                         C50821 +
                     (C11682 + C11681 + C11680) * C50882) *
                        C50724) *
                       C50696) *
                      C50631)) /
                (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50741 * C133) * C50909 +
             C168 * C50910 + C169 * C7999) *
                C50882 +
            (C11176 + C11177 + C11178) * C50821) *
               C50660 * C1000 -
           ((C11679 + C11678 + C11677) * C50821 +
            (C341 * C7999 + C342 * C50910 +
             (C117 * C278 + C315 + C315 + C50741 * C298) * C50909) *
                C50882) *
               C50660 * C50696) *
              C1002 +
          (((C342 * C50909 + C341 * C50910 + C340 * C7999) * C50882 +
            (C11680 + C11681 + C11682) * C50821) *
               C50660 * C50696 -
           ((C11184 + C11183 + C11182) * C50821 +
            (C170 * C7999 + C169 * C50910 + C168 * C50909) * C50882) *
               C50660 * C1000) *
              C1003 +
          (((C169 * C50909 + C170 * C50910 + C171 * C7999) * C50882 +
            (C11480 + C11481 + C11482) * C50821) *
               C50660 * C1000 -
           (((C117 * C871 + C893 + C893 + C50741 * C881) * C7999 +
             C902 * C50910 + C901 * C50909) *
                C50821 +
            (C628 * C7999 + C340 * C50910 + C341 * C50909) * C50882) *
               C50660 * C50696) *
              C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50741 * C133) * C50909 +
            C168 * C50910 + C169 * C7999) *
               C50882 +
           (C11176 + C11177 + C11178) * C50821) *
              C50660 * C1071 -
          ((C11679 + C11678 + C11677) * C50821 +
           (C341 * C7999 + C342 * C50910 +
            (C117 * C278 + C315 + C315 + C50741 * C298) * C50909) *
               C50882) *
              C50660 * C1072 +
          (((C117 * C279 + C316 + C316 + C50741 * C299) * C50909 +
            C343 * C50910 + C344 * C7999) *
               C50882 +
           (C7002 * C50909 + C5366 * C50910 + C11029 * C7999) * C50821) *
              C50660 * C1073 -
          (((C117 * C3265 + C11927 + C11927 + C50741 * C3271) * C7999 +
            (C117 * C3264 + C6340 + C6340 + C50741 * C3270) * C50910 +
            (C117 * C3263 + C6341 + C6341 + C50741 * C3269) * C50909) *
               C50821 +
           ((C117 * C1077 + C1090 + C1090 + C50741 * C1085) * C7999 +
            (C117 * C1078 + C1091 + C1091 + C50741 * C1086) * C50910 +
            (C117 * C1079 + C1092 + C1092 + C50741 * C1087) * C50909) *
               C50882) *
              C50660 * C1074) *
         C50625) /
            (p * q * std::sqrt(p + q));
    d2ee[55] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C117 * C119 + C141 + C141 + C50741 * C133) * C50909 +
                      C168 * C50910 + C169 * C7999) *
                         C50882 +
                     (C11176 + C11177 + C11178) * C50821) *
                        C1651 -
                    ((C11179 + C11180 + C11181) * C50821 +
                     (C11178 + C11177 + C11176) * C50882) *
                        C50724) *
                       C50868 +
                   (((C11677 + C11678 + C11679) * C50882 +
                     (C12074 + C12075 + C12076) * C50821) *
                        C50724 -
                    ((C11679 + C11678 + C11677) * C50821 +
                     (C341 * C7999 + C342 * C50910 +
                      (C117 * C278 + C315 + C315 + C50741 * C298) * C50909) *
                         C50882) *
                        C1651) *
                       C50696) *
                      C50860 +
                  ((((C11182 + C11183 + C11184) * C50882 +
                     (C11185 + C11186 + C11187) * C50821) *
                        C50724 -
                    ((C11184 + C11183 + C11182) * C50821 +
                     (C170 * C7999 + C169 * C50910 + C168 * C50909) * C50882) *
                        C1651) *
                       C50868 +
                   (((C342 * C50909 + C341 * C50910 + C340 * C7999) * C50882 +
                     (C11680 + C11681 + C11682) * C50821) *
                        C1651 -
                    (((C117 * C1190 + C1203 + C1203 + C50741 * C1198) * C7999 +
                      C5720 * C50910 + C5365 * C50909) *
                         C50821 +
                     (C11682 + C11681 + C11680) * C50882) *
                        C50724) *
                       C50696) *
                      C50631)) /
                (p * q * std::sqrt(p + q));
    d2ee[56] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C141 + C141 + C50741 * C133) * C50909 +
                     C168 * C50910 + C169 * C7999) *
                        C50882 +
                    (C11176 + C11177 + C11178) * C50821) *
                       C50915 -
                   ((C11179 + C11180 + C11181) * C50821 +
                    (C11178 + C11177 + C11176) * C50882) *
                       C50916 +
                   ((C11181 + C11180 + C11179) * C50882 +
                    (C12956 + C12957 + C12958) * C50821) *
                       C2067) *
                      C50868 +
                  (((C11677 + C11678 + C11679) * C50882 +
                    (C12074 + C12075 + C12076) * C50821) *
                       C50916 -
                   ((C11679 + C11678 + C11677) * C50821 +
                    (C341 * C7999 + C342 * C50910 +
                     (C117 * C278 + C315 + C315 + C50741 * C298) * C50909) *
                        C50882) *
                       C50915 -
                   (((C117 * C6064 + C6082 + C6082 + C50741 * C6066) * C7999 +
                     C6091 * C50910 + C6502 * C50909) *
                        C50821 +
                    (C12076 + C12075 + C12074) * C50882) *
                       C2067) *
                      C50696) *
                 C50625) /
                (p * q * std::sqrt(p + q));
    d2ee[57] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C141 + C141 + C50741 * C133) * C50909 +
                     C168 * C50910 + C169 * C7999) *
                        C50882 +
                    (C11176 + C11177 + C11178) * C50821) *
                       C1651 -
                   ((C11179 + C11180 + C11181) * C50821 +
                    (C11178 + C11177 + C11176) * C50882) *
                       C50724) *
                      C270 +
                  (((C11677 + C11678 + C11679) * C50882 +
                    (C12074 + C12075 + C12076) * C50821) *
                       C50724 -
                   ((C11679 + C11678 + C11677) * C50821 +
                    (C341 * C7999 + C342 * C50910 +
                     (C117 * C278 + C315 + C315 + C50741 * C298) * C50909) *
                        C50882) *
                       C1651) *
                      C271 +
                  ((((C117 * C279 + C316 + C316 + C50741 * C299) * C50909 +
                     C343 * C50910 + C344 * C7999) *
                        C50882 +
                    (C12563 + C12564 + C12565) * C50821) *
                       C1651 -
                   (((C117 * C2686 + C5358 + C5358 + C50741 * C2692) * C7999 +
                     C5367 * C50910 + C7003 * C50909) *
                        C50821 +
                    (C12565 + C12564 + C12563) * C50882) *
                       C50724) *
                      C272) *
                 C50625) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C141 + C141 + C50741 * C133) * C50909 +
                     C168 * C50910 + C169 * C7999) *
                        C50882 +
                    (C11176 + C11177 + C11178) * C50821) *
                       C1651 -
                   ((C11179 + C11180 + C11181) * C50821 +
                    (C11178 + C11177 + C11176) * C50882) *
                       C50724) *
                      C50644 * C1002 +
                  (((C11182 + C11183 + C11184) * C50882 +
                    (C11185 + C11186 + C11187) * C50821) *
                       C50724 -
                   ((C11184 + C11183 + C11182) * C50821 +
                    (C170 * C7999 + C169 * C50910 + C168 * C50909) * C50882) *
                       C1651) *
                      C50644 * C1003 +
                  (((C169 * C50909 + C170 * C50910 + C171 * C7999) * C50882 +
                    (C11480 + C11481 + C11482) * C50821) *
                       C1651 -
                   (((C117 * C455 + C498 + C498 + C50741 * C475) * C7999 +
                     C516 * C50910 + C515 * C50909) *
                        C50821 +
                    (C11482 + C11481 + C11480) * C50882) *
                       C50724) *
                      C50644 * C1004)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C117 * C119 + C141 + C141 + C50741 * C133) * C50909 +
                    C168 * C50910 + C169 * C7999) *
                       C50882 +
                   (C11176 + C11177 + C11178) * C50821) *
                      C1817 -
                  ((C11179 + C11180 + C11181) * C50821 +
                   (C11178 + C11177 + C11176) * C50882) *
                      C1818 +
                  ((C11181 + C11180 + C11179) * C50882 +
                   (C12956 + C12957 + C12958) * C50821) *
                      C1819 -
                  (((C117 * C5515 + C5543 + C5543 + C50741 * C5521) * C7999 +
                    C5561 * C50910 + C7410 * C50909) *
                       C50821 +
                   (C12958 + C12957 + C12956) * C50882) *
                      C1820) *
                 C50644 * C50625) /
                    (p * q * std::sqrt(p + q));
    d2ee[58] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C141 + C141 + C50741 * C133) * C50909 +
                     C168 * C50910 + C169 * C7999) *
                        C50882 +
                    (C11176 + C11177 + C11178) * C50821) *
                       C50915 -
                   ((C11179 + C11180 + C11181) * C50821 +
                    (C11178 + C11177 + C11176) * C50882) *
                       C50916 +
                   ((C11181 + C11180 + C11179) * C50882 +
                    (C12956 + C12957 + C12958) * C50821) *
                       C2067) *
                      C50644 * C50860 +
                  (((C11182 + C11183 + C11184) * C50882 +
                    (C11185 + C11186 + C11187) * C50821) *
                       C50916 -
                   ((C11184 + C11183 + C11182) * C50821 +
                    (C170 * C7999 + C169 * C50910 + C168 * C50909) * C50882) *
                       C50915 -
                   (((C117 * C1821 + C1834 + C1834 + C50741 * C1829) * C7999 +
                     C5562 * C50910 + C5559 * C50909) *
                        C50821 +
                    (C11187 + C11186 + C11185) * C50882) *
                       C2067) *
                      C50644 * C50631)) /
                (p * q * std::sqrt(p + q));
    d2ee[59] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C141 + C141 + C50741 * C133) * C50909 +
                     C168 * C50910 + C169 * C7999) *
                        C50882 +
                    (C11176 + C11177 + C11178) * C50821) *
                       C1651 -
                   ((C11179 + C11180 + C11181) * C50821 +
                    (C11178 + C11177 + C11176) * C50882) *
                       C50724) *
                      C50644 * C1002 +
                  (((C11182 + C11183 + C11184) * C50882 +
                    (C11185 + C11186 + C11187) * C50821) *
                       C50724 -
                   ((C11184 + C11183 + C11182) * C50821 +
                    (C170 * C7999 + C169 * C50910 + C168 * C50909) * C50882) *
                       C1651) *
                      C50644 * C1003 +
                  (((C169 * C50909 + C170 * C50910 + C171 * C7999) * C50882 +
                    (C11480 + C11481 + C11482) * C50821) *
                       C1651 -
                   (((C117 * C455 + C498 + C498 + C50741 * C475) * C7999 +
                     C516 * C50910 + C515 * C50909) *
                        C50821 +
                    (C11482 + C11481 + C11480) * C50882) *
                       C50724) *
                      C50644 * C1004)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C141 + C141 + C50741 * C133) * C50909 +
                     C168 * C50910 + C169 * C7999) *
                        C50882 +
                    (C11176 + C11177 + C11178) * C50821) *
                       C1651 -
                   ((C11179 + C11180 + C11181) * C50821 +
                    (C11178 + C11177 + C11176) * C50882) *
                       C50724) *
                      C270 +
                  (((C11677 + C11678 + C11679) * C50882 +
                    (C12074 + C12075 + C12076) * C50821) *
                       C50724 -
                   ((C11679 + C11678 + C11677) * C50821 +
                    (C341 * C7999 + C342 * C50910 +
                     (C117 * C278 + C315 + C315 + C50741 * C298) * C50909) *
                        C50882) *
                       C1651) *
                      C271 +
                  ((((C117 * C279 + C316 + C316 + C50741 * C299) * C50909 +
                     C343 * C50910 + C344 * C7999) *
                        C50882 +
                    (C12563 + C12564 + C12565) * C50821) *
                       C1651 -
                   (((C117 * C2686 + C5358 + C5358 + C50741 * C2692) * C7999 +
                     C5367 * C50910 + C7003 * C50909) *
                        C50821 +
                    (C12565 + C12564 + C12563) * C50882) *
                       C50724) *
                      C272) *
                 C50625) /
                    (p * q * std::sqrt(p + q));
    d2ee[60] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C117 * C119 + C141 + C141 + C50741 * C133) * C106 +
                    C168 * C107 + C169 * C108 + C170 * C109) *
                       C50757 * C50660 * C50868 -
                   (C340 * C109 + C341 * C108 + C342 * C107 +
                    (C117 * C278 + C315 + C315 + C50741 * C298) * C106) *
                       C50757 * C50660 * C50696) *
                      C50911 +
                  ((C342 * C106 + C341 * C107 + C340 * C108 + C628 * C109) *
                       C50757 * C50660 * C50696 -
                   (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                       C50757 * C50660 * C50868) *
                      C50912 +
                  ((C169 * C106 + C170 * C107 + C171 * C108 + C172 * C109) *
                       C50757 * C50660 * C50868 -
                   ((C117 * C619 + C625 + C625 + C50741 * C621) * C109 +
                    C628 * C108 + C340 * C107 + C341 * C106) *
                       C50757 * C50660 * C50696) *
                      C618)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 +
                     C2271 * C278 + C2277 + C2277 + C2265 * C298 +
                     C2273 * C279 + C2278 + C2278 + C2266 * C299) *
                        C2267 +
                    (C2327 + C2328 + C2329) * C50602) *
                       C50757 * C50660 * C50868 -
                   ((C2533 + C2534 + C2535) * C50602 +
                    (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 +
                     C2271 * C279 + C2501 + C2501 + C2265 * C299 +
                     C2269 * C278 + C2502 + C2502 + C2264 * C298) *
                        C2267) *
                       C50757 * C50660 * C50696) *
                      C50911 +
                  (((C2535 + C2534 + C2533) * C2267 +
                    (C2903 + C2904 + C2905) * C50602) *
                       C50757 * C50660 * C50696 -
                   ((C2330 + C2331 + C2332) * C50602 +
                    (C2329 + C2328 + C2327) * C2267) *
                       C50757 * C50660 * C50868) *
                      C50912 +
                  (((C2332 + C2331 + C2330) * C2267 +
                    (C2333 + C2334 + C2335) * C50602) *
                       C50757 * C50660 * C50868 -
                   ((C2273 * C1076 + C2894 + C2894 + C2266 * C1084 +
                     C2271 * C282 + C2895 + C2895 + C2265 * C302 +
                     C2269 * C275 + C2896 + C2896 + C2264 * C295) *
                        C50602 +
                    (C2905 + C2904 + C2903) * C2267) *
                       C50757 * C50660 * C50696) *
                      C618)) /
                    (p * q * std::sqrt(p + q));
    d2ee[61] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C141 + C141 + C50741 * C133) * C106 +
                     C168 * C107 + C169 * C108 + C170 * C109) *
                        C50757 * C50869 -
                    (C511 * C109 + C512 * C108 + C513 * C107 +
                     (C117 * C449 + C486 + C486 + C50741 * C469) * C106) *
                        C50757 * C50724) *
                       C50868 +
                   (((C117 * C867 + C883 + C883 + C50741 * C877) * C106 +
                     C900 * C107 + C901 * C108 + C902 * C109) *
                        C50757 * C50724 -
                    (C340 * C109 + C341 * C108 + C342 * C107 +
                     (C117 * C278 + C315 + C315 + C50741 * C298) * C106) *
                        C50757 * C50869) *
                       C50696) *
                      C273 +
                  (((C513 * C106 + C512 * C107 + C511 * C108 + C737 * C109) *
                        C50757 * C50724 -
                    (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                        C50757 * C50869) *
                       C50868 +
                   ((C342 * C106 + C341 * C107 + C340 * C108 + C628 * C109) *
                        C50757 * C50869 -
                    ((C117 * C871 + C893 + C893 + C50741 * C881) * C109 +
                     C902 * C108 + C901 * C107 + C900 * C106) *
                        C50757 * C50724) *
                       C50696) *
                      C50631)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C2269 * C119 + C2276 + C2276 + C2264 * C133 +
                      C2271 * C278 + C2277 + C2277 + C2265 * C298 +
                      C2273 * C279 + C2278 + C2278 + C2266 * C299) *
                         C2267 +
                     (C2327 + C2328 + C2329) * C50602) *
                        C50757 * C50869 -
                    ((C2736 + C2737 + C2738) * C50602 +
                     (C2273 * C1540 + C2703 + C2703 + C2266 * C1548 +
                      C2271 * C867 + C2704 + C2704 + C2265 * C877 +
                      C2269 * C449 + C2705 + C2705 + C2264 * C469) *
                         C2267) *
                        C50757 * C50724) *
                       C50868 +
                   (((C2269 * C867 + C3273 + C3273 + C2264 * C877 +
                      C2271 * C1540 + C3274 + C3274 + C2265 * C1548 +
                      C2273 * C3263 + C3275 + C3275 + C2266 * C3269) *
                         C2267 +
                     (C3294 + C3295 + C3296) * C50602) *
                        C50757 * C50724 -
                    ((C2533 + C2534 + C2535) * C50602 +
                     (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 +
                      C2271 * C279 + C2501 + C2501 + C2265 * C299 +
                      C2269 * C278 + C2502 + C2502 + C2264 * C298) *
                         C2267) *
                        C50757 * C50869) *
                       C50696) *
                      C273 +
                  ((((C2738 + C2737 + C2736) * C2267 +
                     (C3067 + C3068 + C3069) * C50602) *
                        C50757 * C50724 -
                    ((C2330 + C2331 + C2332) * C50602 +
                     (C2329 + C2328 + C2327) * C2267) *
                        C50757 * C50869) *
                       C50868 +
                   (((C2535 + C2534 + C2533) * C2267 +
                     (C2903 + C2904 + C2905) * C50602) *
                        C50757 * C50869 -
                    ((C2273 * C3265 + C3285 + C3285 + C2266 * C3271 +
                      C2271 * C1538 + C3286 + C3286 + C2265 * C1546 +
                      C2269 * C869 + C3287 + C3287 + C2264 * C879) *
                         C50602 +
                     (C3296 + C3295 + C3294) * C2267) *
                        C50757 * C50724) *
                       C50696) *
                      C50631)) /
                    (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50741 * C133) * C106 + C168 * C107 +
            C169 * C108 + C170 * C109) *
               C50757 * C50660 * C270 -
           (C340 * C109 + C341 * C108 + C342 * C107 +
            (C117 * C278 + C315 + C315 + C50741 * C298) * C106) *
               C50757 * C50660 * C271 +
           ((C117 * C279 + C316 + C316 + C50741 * C299) * C106 + C343 * C107 +
            C344 * C108 + C345 * C109) *
               C50757 * C50660 * C272) *
              C273 +
          ((C342 * C106 + C341 * C107 + C340 * C108 +
            (C117 * C283 + C326 + C326 + C50741 * C303) * C109) *
               C50757 * C50660 * C271 -
           (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) * C50757 *
               C50660 * C270 -
           ((C117 * C284 + C327 + C327 + C50741 * C304) * C109 + C345 * C108 +
            C344 * C107 + C343 * C106) *
               C50757 * C50660 * C272) *
              C50631)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50741 * C133) * C106 + C168 * C107 +
           C169 * C108 + C170 * C109) *
              C50757 * C50660 * C50644 * C113 -
          (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) * C50757 *
              C50660 * C50644 * C114 +
          (C169 * C106 + C170 * C107 + C171 * C108 + C172 * C109) * C50757 *
              C50660 * C50644 * C115 -
          ((C117 * C125 + C157 + C157 + C50741 * C139) * C109 + C172 * C108 +
           C171 * C107 + C170 * C106) *
              C50757 * C50660 * C50644 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50741 * C133) * C106 + C168 * C107 +
            C169 * C108 + C170 * C109) *
               C50757 * C443 -
           (C511 * C109 + C512 * C108 + C513 * C107 +
            (C117 * C449 + C486 + C486 + C50741 * C469) * C106) *
               C50757 * C444 +
           ((C117 * C450 + C487 + C487 + C50741 * C470) * C106 + C514 * C107 +
            C515 * C108 + C516 * C109) *
               C50757 * C445) *
              C50644 * C273 +
          ((C513 * C106 + C512 * C107 + C511 * C108 +
            (C117 * C454 + C497 + C497 + C50741 * C474) * C109) *
               C50757 * C444 -
           (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) * C50757 *
               C443 -
           ((C117 * C455 + C498 + C498 + C50741 * C475) * C109 + C516 * C108 +
            C515 * C107 + C514 * C106) *
               C50757 * C445) *
              C50644 * C50631)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 + C2277 +
            C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
            C2266 * C299) *
               C2267 +
           (C2327 + C2328 + C2329) * C50602) *
              C50757 * C50660 * C50644 * C113 -
          ((C2330 + C2331 + C2332) * C50602 + (C2329 + C2328 + C2327) * C2267) *
              C50757 * C50660 * C50644 * C114 +
          ((C2332 + C2331 + C2330) * C2267 + (C2333 + C2334 + C2335) * C50602) *
              C50757 * C50660 * C50644 * C115 -
          ((C2273 * C284 + C2306 + C2306 + C2266 * C304 + C2271 * C283 + C2307 +
            C2307 + C2265 * C303 + C2269 * C123 + C2308 + C2308 +
            C2264 * C137) *
               C50602 +
           (C2335 + C2334 + C2333) * C2267) *
              C50757 * C50660 * C50644 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 +
             C2277 + C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
             C2266 * C299) *
                C2267 +
            (C2327 + C2328 + C2329) * C50602) *
               C50757 * C50660 * C270 -
           ((C2533 + C2534 + C2535) * C50602 +
            (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 + C2271 * C279 +
             C2501 + C2501 + C2265 * C299 + C2269 * C278 + C2502 + C2502 +
             C2264 * C298) *
                C2267) *
               C50757 * C50660 * C271 +
           ((C2269 * C279 + C2503 + C2503 + C2264 * C299 + C2271 * C1079 +
             C2504 + C2504 + C2265 * C1087 + C2273 * C2481 + C2505 + C2505 +
             C2266 * C2487) *
                C2267 +
            (C2536 + C2537 + C2538) * C50602) *
               C50757 * C50660 * C272) *
              C273 +
          (((C2535 + C2534 + C2533) * C2267 +
            (C2269 * C276 + C2515 + C2515 + C2264 * C296 + C2271 * C281 +
             C2516 + C2516 + C2265 * C301 + C2273 * C1077 + C2517 + C2517 +
             C2266 * C1085) *
                C50602) *
               C50757 * C50660 * C271 -
           ((C2330 + C2331 + C2332) * C50602 +
            (C2329 + C2328 + C2327) * C2267) *
               C50757 * C50660 * C270 -
           ((C2273 * C2483 + C2518 + C2518 + C2266 * C2489 + C2271 * C1077 +
             C2519 + C2519 + C2265 * C1085 + C2269 * C281 + C2520 + C2520 +
             C2264 * C301) *
                C50602 +
            (C2538 + C2537 + C2536) * C2267) *
               C50757 * C50660 * C272) *
              C50631)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 +
             C2277 + C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
             C2266 * C299) *
                C2267 +
            (C2327 + C2328 + C2329) * C50602) *
               C50757 * C443 -
           ((C2736 + C2737 + C2738) * C50602 +
            (C2273 * C1540 + C2703 + C2703 + C2266 * C1548 + C2271 * C867 +
             C2704 + C2704 + C2265 * C877 + C2269 * C449 + C2705 + C2705 +
             C2264 * C469) *
                C2267) *
               C50757 * C444 +
           ((C2269 * C450 + C2706 + C2706 + C2264 * C470 + C2271 * C1193 +
             C2707 + C2707 + C2265 * C1201 + C2273 * C2684 + C2708 + C2708 +
             C2266 * C2690) *
                C2267 +
            (C2739 + C2740 + C2741) * C50602) *
               C50757 * C445) *
              C50644 * C273 +
          (((C2738 + C2737 + C2736) * C2267 +
            (C2269 * C447 + C2718 + C2718 + C2264 * C467 + C2271 * C869 +
             C2719 + C2719 + C2265 * C879 + C2273 * C1538 + C2720 + C2720 +
             C2266 * C1546) *
                C50602) *
               C50757 * C444 -
           ((C2330 + C2331 + C2332) * C50602 +
            (C2329 + C2328 + C2327) * C2267) *
               C50757 * C443 -
           ((C2273 * C2686 + C2721 + C2721 + C2266 * C2692 + C2271 * C1191 +
             C2722 + C2722 + C2265 * C1199 + C2269 * C452 + C2723 + C2723 +
             C2264 * C472) *
                C50602 +
            (C2741 + C2740 + C2739) * C2267) *
               C50757 * C445) *
              C50644 * C50631)) /
            (p * q * std::sqrt(p + q));
    d2ee[63] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C117 * C119 + C141 + C141 + C50741 * C133) * C106 +
                    C168 * C107 + C169 * C108 + C170 * C109) *
                       C50757 * C50869 -
                   (C511 * C109 + C512 * C108 + C513 * C107 +
                    (C117 * C449 + C486 + C486 + C50741 * C469) * C106) *
                       C50757 * C50724) *
                      C50644 * C50911 +
                  ((C513 * C106 + C512 * C107 + C511 * C108 + C737 * C109) *
                       C50757 * C50724 -
                   (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                       C50757 * C50869) *
                      C50644 * C50912 +
                  ((C169 * C106 + C170 * C107 + C171 * C108 + C172 * C109) *
                       C50757 * C50869 -
                   ((C117 * C728 + C734 + C734 + C50741 * C730) * C109 +
                    C737 * C108 + C511 * C107 + C512 * C106) *
                       C50757 * C50724) *
                      C50644 * C618)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 +
                     C2271 * C278 + C2277 + C2277 + C2265 * C298 +
                     C2273 * C279 + C2278 + C2278 + C2266 * C299) *
                        C2267 +
                    (C2327 + C2328 + C2329) * C50602) *
                       C50757 * C50869 -
                   ((C2736 + C2737 + C2738) * C50602 +
                    (C2273 * C1540 + C2703 + C2703 + C2266 * C1548 +
                     C2271 * C867 + C2704 + C2704 + C2265 * C877 +
                     C2269 * C449 + C2705 + C2705 + C2264 * C469) *
                        C2267) *
                       C50757 * C50724) *
                      C50644 * C50911 +
                  (((C2738 + C2737 + C2736) * C2267 +
                    (C3067 + C3068 + C3069) * C50602) *
                       C50757 * C50724 -
                   ((C2330 + C2331 + C2332) * C50602 +
                    (C2329 + C2328 + C2327) * C2267) *
                       C50757 * C50869) *
                      C50644 * C50912 +
                  (((C2332 + C2331 + C2330) * C2267 +
                    (C2333 + C2334 + C2335) * C50602) *
                       C50757 * C50869 -
                   ((C2273 * C1537 + C3058 + C3058 + C2266 * C1545 +
                     C2271 * C870 + C3059 + C3059 + C2265 * C880 +
                     C2269 * C446 + C3060 + C3060 + C2264 * C466) *
                        C50602 +
                    (C3069 + C3068 + C3067) * C2267) *
                       C50757 * C50724) *
                      C50644 * C618)) /
                    (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50741 * C133) * C106 + C168 * C107 +
           C169 * C108 + C170 * C109) *
              C50757 * C50660 * C50644 * C113 -
          (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) * C50757 *
              C50660 * C50644 * C114 +
          (C169 * C106 + C170 * C107 + C171 * C108 + C172 * C109) * C50757 *
              C50660 * C50644 * C115 -
          ((C117 * C125 + C157 + C157 + C50741 * C139) * C109 + C172 * C108 +
           C171 * C107 + C170 * C106) *
              C50757 * C50660 * C50644 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50741 * C133) * C106 + C168 * C107 +
            C169 * C108 + C170 * C109) *
               C50757 * C50660 * C270 -
           (C340 * C109 + C341 * C108 + C342 * C107 +
            (C117 * C278 + C315 + C315 + C50741 * C298) * C106) *
               C50757 * C50660 * C271 +
           ((C117 * C279 + C316 + C316 + C50741 * C299) * C106 + C343 * C107 +
            C344 * C108 + C345 * C109) *
               C50757 * C50660 * C272) *
              C273 +
          ((C342 * C106 + C341 * C107 + C340 * C108 +
            (C117 * C283 + C326 + C326 + C50741 * C303) * C109) *
               C50757 * C50660 * C271 -
           (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) * C50757 *
               C50660 * C270 -
           ((C117 * C284 + C327 + C327 + C50741 * C304) * C109 + C345 * C108 +
            C344 * C107 + C343 * C106) *
               C50757 * C50660 * C272) *
              C50631)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 + C2277 +
            C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
            C2266 * C299) *
               C2267 +
           (C2327 + C2328 + C2329) * C50602) *
              C50757 * C50660 * C50644 * C113 -
          ((C2330 + C2331 + C2332) * C50602 + (C2329 + C2328 + C2327) * C2267) *
              C50757 * C50660 * C50644 * C114 +
          ((C2332 + C2331 + C2330) * C2267 + (C2333 + C2334 + C2335) * C50602) *
              C50757 * C50660 * C50644 * C115 -
          ((C2273 * C284 + C2306 + C2306 + C2266 * C304 + C2271 * C283 + C2307 +
            C2307 + C2265 * C303 + C2269 * C123 + C2308 + C2308 +
            C2264 * C137) *
               C50602 +
           (C2335 + C2334 + C2333) * C2267) *
              C50757 * C50660 * C50644 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 +
             C2277 + C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
             C2266 * C299) *
                C2267 +
            (C2327 + C2328 + C2329) * C50602) *
               C50757 * C50660 * C270 -
           ((C2533 + C2534 + C2535) * C50602 +
            (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 + C2271 * C279 +
             C2501 + C2501 + C2265 * C299 + C2269 * C278 + C2502 + C2502 +
             C2264 * C298) *
                C2267) *
               C50757 * C50660 * C271 +
           ((C2269 * C279 + C2503 + C2503 + C2264 * C299 + C2271 * C1079 +
             C2504 + C2504 + C2265 * C1087 + C2273 * C2481 + C2505 + C2505 +
             C2266 * C2487) *
                C2267 +
            (C2536 + C2537 + C2538) * C50602) *
               C50757 * C50660 * C272) *
              C273 +
          (((C2535 + C2534 + C2533) * C2267 +
            (C2269 * C276 + C2515 + C2515 + C2264 * C296 + C2271 * C281 +
             C2516 + C2516 + C2265 * C301 + C2273 * C1077 + C2517 + C2517 +
             C2266 * C1085) *
                C50602) *
               C50757 * C50660 * C271 -
           ((C2330 + C2331 + C2332) * C50602 +
            (C2329 + C2328 + C2327) * C2267) *
               C50757 * C50660 * C270 -
           ((C2273 * C2483 + C2518 + C2518 + C2266 * C2489 + C2271 * C1077 +
             C2519 + C2519 + C2265 * C1085 + C2269 * C281 + C2520 + C2520 +
             C2264 * C301) *
                C50602 +
            (C2538 + C2537 + C2536) * C2267) *
               C50757 * C50660 * C272) *
              C50631)) /
            (p * q * std::sqrt(p + q));
    d2ee[65] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C117 * C119 + C141 + C141 + C50741 * C133) * C106 +
                    C168 * C107 + C169 * C108 + C170 * C109) *
                       C50757 * C50660 * C50913 -
                   (C340 * C109 + C341 * C108 + C342 * C107 +
                    (C117 * C278 + C315 + C315 + C50741 * C298) * C106) *
                       C50757 * C50660 * C50914 +
                   ((C117 * C279 + C316 + C316 + C50741 * C299) * C106 +
                    C343 * C107 + C344 * C108 + C345 * C109) *
                       C50757 * C50660 * C1306) *
                      C50860 +
                  ((C342 * C106 + C341 * C107 + C340 * C108 + C628 * C109) *
                       C50757 * C50660 * C50914 -
                   (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                       C50757 * C50660 * C50913 -
                   ((C117 * C284 + C327 + C327 + C50741 * C304) * C109 +
                    C345 * C108 + C344 * C107 + C343 * C106) *
                       C50757 * C50660 * C1306) *
                      C50631)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 +
                     C2271 * C278 + C2277 + C2277 + C2265 * C298 +
                     C2273 * C279 + C2278 + C2278 + C2266 * C299) *
                        C2267 +
                    (C2327 + C2328 + C2329) * C50602) *
                       C50757 * C50660 * C50913 -
                   ((C2533 + C2534 + C2535) * C50602 +
                    (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 +
                     C2271 * C279 + C2501 + C2501 + C2265 * C299 +
                     C2269 * C278 + C2502 + C2502 + C2264 * C298) *
                        C2267) *
                       C50757 * C50660 * C50914 +
                   ((C2269 * C279 + C2503 + C2503 + C2264 * C299 +
                     C2271 * C1079 + C2504 + C2504 + C2265 * C1087 +
                     C2273 * C2481 + C2505 + C2505 + C2266 * C2487) *
                        C2267 +
                    (C2536 + C2537 + C2538) * C50602) *
                       C50757 * C50660 * C1306) *
                      C50860 +
                  (((C2535 + C2534 + C2533) * C2267 +
                    (C2903 + C2904 + C2905) * C50602) *
                       C50757 * C50660 * C50914 -
                   ((C2330 + C2331 + C2332) * C50602 +
                    (C2329 + C2328 + C2327) * C2267) *
                       C50757 * C50660 * C50913 -
                   ((C2273 * C2483 + C2518 + C2518 + C2266 * C2489 +
                     C2271 * C1077 + C2519 + C2519 + C2265 * C1085 +
                     C2269 * C281 + C2520 + C2520 + C2264 * C301) *
                        C50602 +
                    (C2538 + C2537 + C2536) * C2267) *
                       C50757 * C50660 * C1306) *
                      C50631)) /
                    (p * q * std::sqrt(p + q));
    d2ee[66] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C117 * C119 + C141 + C141 + C50741 * C133) * C106 +
                    C168 * C107 + C169 * C108 + C170 * C109) *
                       C50757 * C50869 -
                   (C511 * C109 + C512 * C108 + C513 * C107 +
                    (C117 * C449 + C486 + C486 + C50741 * C469) * C106) *
                       C50757 * C50724) *
                      C50913 +
                  (((C117 * C867 + C883 + C883 + C50741 * C877) * C106 +
                    C900 * C107 + C901 * C108 + C902 * C109) *
                       C50757 * C50724 -
                   (C340 * C109 + C341 * C108 + C342 * C107 +
                    (C117 * C278 + C315 + C315 + C50741 * C298) * C106) *
                       C50757 * C50869) *
                      C50914 +
                  (((C117 * C279 + C316 + C316 + C50741 * C299) * C106 +
                    C343 * C107 + C344 * C108 + C345 * C109) *
                       C50757 * C50869 -
                   ((C117 * C1537 + C1550 + C1550 + C50741 * C1545) * C109 +
                    (C117 * C1538 + C1551 + C1551 + C50741 * C1546) * C108 +
                    (C117 * C1539 + C1552 + C1552 + C50741 * C1547) * C107 +
                    (C117 * C1540 + C1553 + C1553 + C50741 * C1548) * C106) *
                       C50757 * C50724) *
                      C1306) *
                 C50625) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 +
                     C2271 * C278 + C2277 + C2277 + C2265 * C298 +
                     C2273 * C279 + C2278 + C2278 + C2266 * C299) *
                        C2267 +
                    (C2327 + C2328 + C2329) * C50602) *
                       C50757 * C50869 -
                   ((C2736 + C2737 + C2738) * C50602 +
                    (C2273 * C1540 + C2703 + C2703 + C2266 * C1548 +
                     C2271 * C867 + C2704 + C2704 + C2265 * C877 +
                     C2269 * C449 + C2705 + C2705 + C2264 * C469) *
                        C2267) *
                       C50757 * C50724) *
                      C50913 +
                  (((C2269 * C867 + C3273 + C3273 + C2264 * C877 +
                     C2271 * C1540 + C3274 + C3274 + C2265 * C1548 +
                     C2273 * C3263 + C3275 + C3275 + C2266 * C3269) *
                        C2267 +
                    (C3294 + C3295 + C3296) * C50602) *
                       C50757 * C50724 -
                   ((C2533 + C2534 + C2535) * C50602 +
                    (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 +
                     C2271 * C279 + C2501 + C2501 + C2265 * C299 +
                     C2269 * C278 + C2502 + C2502 + C2264 * C298) *
                        C2267) *
                       C50757 * C50869) *
                      C50914 +
                  (((C2269 * C279 + C2503 + C2503 + C2264 * C299 +
                     C2271 * C1079 + C2504 + C2504 + C2265 * C1087 +
                     C2273 * C2481 + C2505 + C2505 + C2266 * C2487) *
                        C2267 +
                    (C2536 + C2537 + C2538) * C50602) *
                       C50757 * C50869 -
                   ((C2273 * C4196 + C4203 + C4203 + C2266 * C4200 +
                     C2271 * C3264 + C4204 + C4204 + C2265 * C3270 +
                     C2269 * C1539 + C4205 + C4205 + C2264 * C1547) *
                        C50602 +
                    (C2273 * C4197 + C4206 + C4206 + C2266 * C4201 +
                     C2271 * C3263 + C4207 + C4207 + C2265 * C3269 +
                     C2269 * C1540 + C4208 + C4208 + C2264 * C1548) *
                        C2267) *
                       C50757 * C50724) *
                      C1306) *
                 C50625) /
                    (p * q * std::sqrt(p + q));
    d2ee[67] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 (((C117 * C119 + C141 + C141 + C50741 * C133) * C106 +
                   C168 * C107 + C169 * C108 + C170 * C109) *
                      C50757 * C50660 * C1071 -
                  (C340 * C109 + C341 * C108 + C342 * C107 +
                   (C117 * C278 + C315 + C315 + C50741 * C298) * C106) *
                      C50757 * C50660 * C1072 +
                  ((C117 * C279 + C316 + C316 + C50741 * C299) * C106 +
                   C343 * C107 + C344 * C108 + C345 * C109) *
                      C50757 * C50660 * C1073 -
                  ((C117 * C1076 + C1089 + C1089 + C50741 * C1084) * C109 +
                   (C117 * C1077 + C1090 + C1090 + C50741 * C1085) * C108 +
                   (C117 * C1078 + C1091 + C1091 + C50741 * C1086) * C107 +
                   (C117 * C1079 + C1092 + C1092 + C50741 * C1087) * C106) *
                      C50757 * C50660 * C1074) *
                 C50625) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 ((((C117 * C119 + C141 + C141 + C50741 * C133) * C106 +
                    C168 * C107 + C169 * C108 + C170 * C109) *
                       C50757 * C50660 * C1000 -
                   (C340 * C109 + C341 * C108 + C342 * C107 +
                    (C117 * C278 + C315 + C315 + C50741 * C298) * C106) *
                       C50757 * C50660 * C50696) *
                      C1002 +
                  ((C342 * C106 + C341 * C107 + C340 * C108 + C628 * C109) *
                       C50757 * C50660 * C50696 -
                   (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                       C50757 * C50660 * C1000) *
                      C1003 +
                  ((C169 * C106 + C170 * C107 + C171 * C108 + C172 * C109) *
                       C50757 * C50660 * C1000 -
                   ((C117 * C619 + C625 + C625 + C50741 * C621) * C109 +
                    C628 * C108 + C340 * C107 + C341 * C106) *
                       C50757 * C50660 * C50696) *
                      C1004)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C117 * C119 + C141 + C141 + C50741 * C133) * C106 +
                    C168 * C107 + C169 * C108 + C170 * C109) *
                       C50757 * C443 -
                   (C511 * C109 + C512 * C108 + C513 * C107 +
                    (C117 * C449 + C486 + C486 + C50741 * C469) * C106) *
                       C50757 * C444 +
                   ((C117 * C450 + C487 + C487 + C50741 * C470) * C106 +
                    C514 * C107 + C515 * C108 + C516 * C109) *
                       C50757 * C445) *
                      C1000 +
                  (((C117 * C867 + C883 + C883 + C50741 * C877) * C106 +
                    C900 * C107 + C901 * C108 + C902 * C109) *
                       C50757 * C444 -
                   (C340 * C109 + C341 * C108 + C342 * C107 +
                    (C117 * C278 + C315 + C315 + C50741 * C298) * C106) *
                       C50757 * C443 -
                   ((C117 * C1190 + C1203 + C1203 + C50741 * C1198) * C109 +
                    (C117 * C1191 + C1204 + C1204 + C50741 * C1199) * C108 +
                    (C117 * C1192 + C1205 + C1205 + C50741 * C1200) * C107 +
                    (C117 * C1193 + C1206 + C1206 + C50741 * C1201) * C106) *
                       C50757 * C445) *
                      C50696) *
                 C50625) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 +
                     C2271 * C278 + C2277 + C2277 + C2265 * C298 +
                     C2273 * C279 + C2278 + C2278 + C2266 * C299) *
                        C2267 +
                    (C2327 + C2328 + C2329) * C50602) *
                       C50757 * C50660 * C1000 -
                   ((C2533 + C2534 + C2535) * C50602 +
                    (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 +
                     C2271 * C279 + C2501 + C2501 + C2265 * C299 +
                     C2269 * C278 + C2502 + C2502 + C2264 * C298) *
                        C2267) *
                       C50757 * C50660 * C50696) *
                      C1002 +
                  (((C2535 + C2534 + C2533) * C2267 +
                    (C2903 + C2904 + C2905) * C50602) *
                       C50757 * C50660 * C50696 -
                   ((C2330 + C2331 + C2332) * C50602 +
                    (C2329 + C2328 + C2327) * C2267) *
                       C50757 * C50660 * C1000) *
                      C1003 +
                  (((C2332 + C2331 + C2330) * C2267 +
                    (C2333 + C2334 + C2335) * C50602) *
                       C50757 * C50660 * C1000 -
                   ((C2273 * C1076 + C2894 + C2894 + C2266 * C1084 +
                     C2271 * C282 + C2895 + C2895 + C2265 * C302 +
                     C2269 * C275 + C2896 + C2896 + C2264 * C295) *
                        C50602 +
                    (C2905 + C2904 + C2903) * C2267) *
                       C50757 * C50660 * C50696) *
                      C1004)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 (((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 +
                    C2277 + C2277 + C2265 * C298 + C2273 * C279 + C2278 +
                    C2278 + C2266 * C299) *
                       C2267 +
                   (C2327 + C2328 + C2329) * C50602) *
                      C50757 * C50660 * C1071 -
                  ((C2533 + C2534 + C2535) * C50602 +
                   (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 +
                    C2271 * C279 + C2501 + C2501 + C2265 * C299 + C2269 * C278 +
                    C2502 + C2502 + C2264 * C298) *
                       C2267) *
                      C50757 * C50660 * C1072 +
                  ((C2269 * C279 + C2503 + C2503 + C2264 * C299 +
                    C2271 * C1079 + C2504 + C2504 + C2265 * C1087 +
                    C2273 * C2481 + C2505 + C2505 + C2266 * C2487) *
                       C2267 +
                   (C2536 + C2537 + C2538) * C50602) *
                      C50757 * C50660 * C1073 -
                  ((C2273 * C3540 + C3547 + C3547 + C2266 * C3544 +
                    C2271 * C2482 + C3548 + C3548 + C2265 * C2488 +
                    C2269 * C1078 + C3549 + C3549 + C2264 * C1086) *
                       C50602 +
                   (C2273 * C3541 + C3550 + C3550 + C2266 * C3545 +
                    C2271 * C2481 + C3551 + C3551 + C2265 * C2487 +
                    C2269 * C1079 + C3552 + C3552 + C2264 * C1087) *
                       C2267) *
                      C50757 * C50660 * C1074) *
                 C50625) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 +
                     C2271 * C278 + C2277 + C2277 + C2265 * C298 +
                     C2273 * C279 + C2278 + C2278 + C2266 * C299) *
                        C2267 +
                    (C2327 + C2328 + C2329) * C50602) *
                       C50757 * C443 -
                   ((C2736 + C2737 + C2738) * C50602 +
                    (C2273 * C1540 + C2703 + C2703 + C2266 * C1548 +
                     C2271 * C867 + C2704 + C2704 + C2265 * C877 +
                     C2269 * C449 + C2705 + C2705 + C2264 * C469) *
                        C2267) *
                       C50757 * C444 +
                   ((C2269 * C450 + C2706 + C2706 + C2264 * C470 +
                     C2271 * C1193 + C2707 + C2707 + C2265 * C1201 +
                     C2273 * C2684 + C2708 + C2708 + C2266 * C2690) *
                        C2267 +
                    (C2739 + C2740 + C2741) * C50602) *
                       C50757 * C445) *
                      C1000 +
                  (((C2269 * C867 + C3273 + C3273 + C2264 * C877 +
                     C2271 * C1540 + C3274 + C3274 + C2265 * C1548 +
                     C2273 * C3263 + C3275 + C3275 + C2266 * C3269) *
                        C2267 +
                    (C3294 + C3295 + C3296) * C50602) *
                       C50757 * C444 -
                   ((C2533 + C2534 + C2535) * C50602 +
                    (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 +
                     C2271 * C279 + C2501 + C2501 + C2265 * C299 +
                     C2269 * C278 + C2502 + C2502 + C2264 * C298) *
                        C2267) *
                       C50757 * C443 -
                   ((C2273 * C3698 + C3705 + C3705 + C2266 * C3702 +
                     C2271 * C2685 + C3706 + C3706 + C2265 * C2691 +
                     C2269 * C1192 + C3707 + C3707 + C2264 * C1200) *
                        C50602 +
                    (C2273 * C3699 + C3708 + C3708 + C2266 * C3703 +
                     C2271 * C2684 + C3709 + C3709 + C2265 * C2690 +
                     C2269 * C1193 + C3710 + C3710 + C2264 * C1201) *
                        C2267) *
                       C50757 * C445) *
                      C50696) *
                 C50625) /
                    (p * q * std::sqrt(p + q));
    d2ee[68] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C141 + C141 + C50741 * C133) * C106 +
                     C168 * C107 + C169 * C108 + C170 * C109) *
                        C50757 * C50869 -
                    (C511 * C109 + C512 * C108 + C513 * C107 +
                     (C117 * C449 + C486 + C486 + C50741 * C469) * C106) *
                        C50757 * C50724) *
                       C1000 +
                   (((C117 * C867 + C883 + C883 + C50741 * C877) * C106 +
                     C900 * C107 + C901 * C108 + C902 * C109) *
                        C50757 * C50724 -
                    (C340 * C109 + C341 * C108 + C342 * C107 +
                     (C117 * C278 + C315 + C315 + C50741 * C298) * C106) *
                        C50757 * C50869) *
                       C50696) *
                      C50860 +
                  (((C513 * C106 + C512 * C107 + C511 * C108 + C737 * C109) *
                        C50757 * C50724 -
                    (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                        C50757 * C50869) *
                       C1000 +
                   ((C342 * C106 + C341 * C107 + C340 * C108 + C628 * C109) *
                        C50757 * C50869 -
                    ((C117 * C871 + C893 + C893 + C50741 * C881) * C109 +
                     C902 * C108 + C901 * C107 + C900 * C106) *
                        C50757 * C50724) *
                       C50696) *
                      C50631)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C2269 * C119 + C2276 + C2276 + C2264 * C133 +
                      C2271 * C278 + C2277 + C2277 + C2265 * C298 +
                      C2273 * C279 + C2278 + C2278 + C2266 * C299) *
                         C2267 +
                     (C2327 + C2328 + C2329) * C50602) *
                        C50757 * C50869 -
                    ((C2736 + C2737 + C2738) * C50602 +
                     (C2273 * C1540 + C2703 + C2703 + C2266 * C1548 +
                      C2271 * C867 + C2704 + C2704 + C2265 * C877 +
                      C2269 * C449 + C2705 + C2705 + C2264 * C469) *
                         C2267) *
                        C50757 * C50724) *
                       C1000 +
                   (((C2269 * C867 + C3273 + C3273 + C2264 * C877 +
                      C2271 * C1540 + C3274 + C3274 + C2265 * C1548 +
                      C2273 * C3263 + C3275 + C3275 + C2266 * C3269) *
                         C2267 +
                     (C3294 + C3295 + C3296) * C50602) *
                        C50757 * C50724 -
                    ((C2533 + C2534 + C2535) * C50602 +
                     (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 +
                      C2271 * C279 + C2501 + C2501 + C2265 * C299 +
                      C2269 * C278 + C2502 + C2502 + C2264 * C298) *
                         C2267) *
                        C50757 * C50869) *
                       C50696) *
                      C50860 +
                  ((((C2738 + C2737 + C2736) * C2267 +
                     (C3067 + C3068 + C3069) * C50602) *
                        C50757 * C50724 -
                    ((C2330 + C2331 + C2332) * C50602 +
                     (C2329 + C2328 + C2327) * C2267) *
                        C50757 * C50869) *
                       C1000 +
                   (((C2535 + C2534 + C2533) * C2267 +
                     (C2903 + C2904 + C2905) * C50602) *
                        C50757 * C50869 -
                    ((C2273 * C3265 + C3285 + C3285 + C2266 * C3271 +
                      C2271 * C1538 + C3286 + C3286 + C2265 * C1546 +
                      C2269 * C869 + C3287 + C3287 + C2264 * C879) *
                         C50602 +
                     (C3296 + C3295 + C3294) * C2267) *
                        C50757 * C50724) *
                       C50696) *
                      C50631)) /
                    (p * q * std::sqrt(p + q));
    d2ee[69] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C117 * C119 + C141 + C141 + C50741 * C133) * C106 +
                    C168 * C107 + C169 * C108 + C170 * C109) *
                       C50757 * C50660 * C1000 -
                   (C340 * C109 + C341 * C108 + C342 * C107 +
                    (C117 * C278 + C315 + C315 + C50741 * C298) * C106) *
                       C50757 * C50660 * C50696) *
                      C1002 +
                  ((C342 * C106 + C341 * C107 + C340 * C108 + C628 * C109) *
                       C50757 * C50660 * C50696 -
                   (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                       C50757 * C50660 * C1000) *
                      C1003 +
                  ((C169 * C106 + C170 * C107 + C171 * C108 + C172 * C109) *
                       C50757 * C50660 * C1000 -
                   ((C117 * C619 + C625 + C625 + C50741 * C621) * C109 +
                    C628 * C108 + C340 * C107 + C341 * C106) *
                       C50757 * C50660 * C50696) *
                      C1004)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((C117 * C119 + C141 + C141 + C50741 * C133) * C106 +
                   C168 * C107 + C169 * C108 + C170 * C109) *
                      C50757 * C50660 * C1071 -
                  (C340 * C109 + C341 * C108 + C342 * C107 +
                   (C117 * C278 + C315 + C315 + C50741 * C298) * C106) *
                      C50757 * C50660 * C1072 +
                  ((C117 * C279 + C316 + C316 + C50741 * C299) * C106 +
                   C343 * C107 + C344 * C108 + C345 * C109) *
                      C50757 * C50660 * C1073 -
                  ((C117 * C1076 + C1089 + C1089 + C50741 * C1084) * C109 +
                   (C117 * C1077 + C1090 + C1090 + C50741 * C1085) * C108 +
                   (C117 * C1078 + C1091 + C1091 + C50741 * C1086) * C107 +
                   (C117 * C1079 + C1092 + C1092 + C50741 * C1087) * C106) *
                      C50757 * C50660 * C1074) *
                 C50625) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 +
                     C2271 * C278 + C2277 + C2277 + C2265 * C298 +
                     C2273 * C279 + C2278 + C2278 + C2266 * C299) *
                        C2267 +
                    (C2327 + C2328 + C2329) * C50602) *
                       C50757 * C50660 * C1000 -
                   ((C2533 + C2534 + C2535) * C50602 +
                    (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 +
                     C2271 * C279 + C2501 + C2501 + C2265 * C299 +
                     C2269 * C278 + C2502 + C2502 + C2264 * C298) *
                        C2267) *
                       C50757 * C50660 * C50696) *
                      C1002 +
                  (((C2535 + C2534 + C2533) * C2267 +
                    (C2903 + C2904 + C2905) * C50602) *
                       C50757 * C50660 * C50696 -
                   ((C2330 + C2331 + C2332) * C50602 +
                    (C2329 + C2328 + C2327) * C2267) *
                       C50757 * C50660 * C1000) *
                      C1003 +
                  (((C2332 + C2331 + C2330) * C2267 +
                    (C2333 + C2334 + C2335) * C50602) *
                       C50757 * C50660 * C1000 -
                   ((C2273 * C1076 + C2894 + C2894 + C2266 * C1084 +
                     C2271 * C282 + C2895 + C2895 + C2265 * C302 +
                     C2269 * C275 + C2896 + C2896 + C2264 * C295) *
                        C50602 +
                    (C2905 + C2904 + C2903) * C2267) *
                       C50757 * C50660 * C50696) *
                      C1004)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 +
                    C2277 + C2277 + C2265 * C298 + C2273 * C279 + C2278 +
                    C2278 + C2266 * C299) *
                       C2267 +
                   (C2327 + C2328 + C2329) * C50602) *
                      C50757 * C50660 * C1071 -
                  ((C2533 + C2534 + C2535) * C50602 +
                   (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 +
                    C2271 * C279 + C2501 + C2501 + C2265 * C299 + C2269 * C278 +
                    C2502 + C2502 + C2264 * C298) *
                       C2267) *
                      C50757 * C50660 * C1072 +
                  ((C2269 * C279 + C2503 + C2503 + C2264 * C299 +
                    C2271 * C1079 + C2504 + C2504 + C2265 * C1087 +
                    C2273 * C2481 + C2505 + C2505 + C2266 * C2487) *
                       C2267 +
                   (C2536 + C2537 + C2538) * C50602) *
                      C50757 * C50660 * C1073 -
                  ((C2273 * C3540 + C3547 + C3547 + C2266 * C3544 +
                    C2271 * C2482 + C3548 + C3548 + C2265 * C2488 +
                    C2269 * C1078 + C3549 + C3549 + C2264 * C1086) *
                       C50602 +
                   (C2273 * C3541 + C3550 + C3550 + C2266 * C3545 +
                    C2271 * C2481 + C3551 + C3551 + C2265 * C2487 +
                    C2269 * C1079 + C3552 + C3552 + C2264 * C1087) *
                       C2267) *
                      C50757 * C50660 * C1074) *
                 C50625) /
                    (p * q * std::sqrt(p + q));
    d2ee[70] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C141 + C141 + C50741 * C133) * C106 +
                     C168 * C107 + C169 * C108 + C170 * C109) *
                        C50757 * C1651 -
                    (C511 * C109 + C512 * C108 + C513 * C107 +
                     (C117 * C449 + C486 + C486 + C50741 * C469) * C106) *
                        C50757 * C50724) *
                       C50868 +
                   (((C117 * C867 + C883 + C883 + C50741 * C877) * C106 +
                     C900 * C107 + C901 * C108 + C902 * C109) *
                        C50757 * C50724 -
                    (C340 * C109 + C341 * C108 + C342 * C107 +
                     (C117 * C278 + C315 + C315 + C50741 * C298) * C106) *
                        C50757 * C1651) *
                       C50696) *
                      C50860 +
                  (((C513 * C106 + C512 * C107 + C511 * C108 + C737 * C109) *
                        C50757 * C50724 -
                    (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                        C50757 * C1651) *
                       C50868 +
                   ((C342 * C106 + C341 * C107 + C340 * C108 + C628 * C109) *
                        C50757 * C1651 -
                    ((C117 * C871 + C893 + C893 + C50741 * C881) * C109 +
                     C902 * C108 + C901 * C107 + C900 * C106) *
                        C50757 * C50724) *
                       C50696) *
                      C50631)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C2269 * C119 + C2276 + C2276 + C2264 * C133 +
                      C2271 * C278 + C2277 + C2277 + C2265 * C298 +
                      C2273 * C279 + C2278 + C2278 + C2266 * C299) *
                         C2267 +
                     (C2327 + C2328 + C2329) * C50602) *
                        C50757 * C1651 -
                    ((C2736 + C2737 + C2738) * C50602 +
                     (C2273 * C1540 + C2703 + C2703 + C2266 * C1548 +
                      C2271 * C867 + C2704 + C2704 + C2265 * C877 +
                      C2269 * C449 + C2705 + C2705 + C2264 * C469) *
                         C2267) *
                        C50757 * C50724) *
                       C50868 +
                   (((C2269 * C867 + C3273 + C3273 + C2264 * C877 +
                      C2271 * C1540 + C3274 + C3274 + C2265 * C1548 +
                      C2273 * C3263 + C3275 + C3275 + C2266 * C3269) *
                         C2267 +
                     (C3294 + C3295 + C3296) * C50602) *
                        C50757 * C50724 -
                    ((C2533 + C2534 + C2535) * C50602 +
                     (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 +
                      C2271 * C279 + C2501 + C2501 + C2265 * C299 +
                      C2269 * C278 + C2502 + C2502 + C2264 * C298) *
                         C2267) *
                        C50757 * C1651) *
                       C50696) *
                      C50860 +
                  ((((C2738 + C2737 + C2736) * C2267 +
                     (C3067 + C3068 + C3069) * C50602) *
                        C50757 * C50724 -
                    ((C2330 + C2331 + C2332) * C50602 +
                     (C2329 + C2328 + C2327) * C2267) *
                        C50757 * C1651) *
                       C50868 +
                   (((C2535 + C2534 + C2533) * C2267 +
                     (C2903 + C2904 + C2905) * C50602) *
                        C50757 * C1651 -
                    ((C2273 * C3265 + C3285 + C3285 + C2266 * C3271 +
                      C2271 * C1538 + C3286 + C3286 + C2265 * C1546 +
                      C2269 * C869 + C3287 + C3287 + C2264 * C879) *
                         C50602 +
                     (C3296 + C3295 + C3294) * C2267) *
                        C50757 * C50724) *
                       C50696) *
                      C50631)) /
                    (p * q * std::sqrt(p + q));
    d2ee[71] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C117 * C119 + C141 + C141 + C50741 * C133) * C106 +
                    C168 * C107 + C169 * C108 + C170 * C109) *
                       C50757 * C50915 -
                   (C511 * C109 + C512 * C108 + C513 * C107 +
                    (C117 * C449 + C486 + C486 + C50741 * C469) * C106) *
                       C50757 * C50916 +
                   ((C117 * C450 + C487 + C487 + C50741 * C470) * C106 +
                    C514 * C107 + C515 * C108 + C516 * C109) *
                       C50757 * C2067) *
                      C50868 +
                  (((C117 * C867 + C883 + C883 + C50741 * C877) * C106 +
                    C900 * C107 + C901 * C108 + C902 * C109) *
                       C50757 * C50916 -
                   (C340 * C109 + C341 * C108 + C342 * C107 +
                    (C117 * C278 + C315 + C315 + C50741 * C298) * C106) *
                       C50757 * C50915 -
                   ((C117 * C1190 + C1203 + C1203 + C50741 * C1198) * C109 +
                    (C117 * C1191 + C1204 + C1204 + C50741 * C1199) * C108 +
                    (C117 * C1192 + C1205 + C1205 + C50741 * C1200) * C107 +
                    (C117 * C1193 + C1206 + C1206 + C50741 * C1201) * C106) *
                       C50757 * C2067) *
                      C50696) *
                 C50625) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 +
                     C2271 * C278 + C2277 + C2277 + C2265 * C298 +
                     C2273 * C279 + C2278 + C2278 + C2266 * C299) *
                        C2267 +
                    (C2327 + C2328 + C2329) * C50602) *
                       C50757 * C50915 -
                   ((C2736 + C2737 + C2738) * C50602 +
                    (C2273 * C1540 + C2703 + C2703 + C2266 * C1548 +
                     C2271 * C867 + C2704 + C2704 + C2265 * C877 +
                     C2269 * C449 + C2705 + C2705 + C2264 * C469) *
                        C2267) *
                       C50757 * C50916 +
                   ((C2269 * C450 + C2706 + C2706 + C2264 * C470 +
                     C2271 * C1193 + C2707 + C2707 + C2265 * C1201 +
                     C2273 * C2684 + C2708 + C2708 + C2266 * C2690) *
                        C2267 +
                    (C2739 + C2740 + C2741) * C50602) *
                       C50757 * C2067) *
                      C50868 +
                  (((C2269 * C867 + C3273 + C3273 + C2264 * C877 +
                     C2271 * C1540 + C3274 + C3274 + C2265 * C1548 +
                     C2273 * C3263 + C3275 + C3275 + C2266 * C3269) *
                        C2267 +
                    (C3294 + C3295 + C3296) * C50602) *
                       C50757 * C50916 -
                   ((C2533 + C2534 + C2535) * C50602 +
                    (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 +
                     C2271 * C279 + C2501 + C2501 + C2265 * C299 +
                     C2269 * C278 + C2502 + C2502 + C2264 * C298) *
                        C2267) *
                       C50757 * C50915 -
                   ((C2273 * C3698 + C3705 + C3705 + C2266 * C3702 +
                     C2271 * C2685 + C3706 + C3706 + C2265 * C2691 +
                     C2269 * C1192 + C3707 + C3707 + C2264 * C1200) *
                        C50602 +
                    (C2273 * C3699 + C3708 + C3708 + C2266 * C3703 +
                     C2271 * C2684 + C3709 + C3709 + C2265 * C2690 +
                     C2269 * C1193 + C3710 + C3710 + C2264 * C1201) *
                        C2267) *
                       C50757 * C2067) *
                      C50696) *
                 C50625) /
                    (p * q * std::sqrt(p + q));
    d2ee[72] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 ((((C117 * C119 + C141 + C141 + C50741 * C133) * C106 +
                    C168 * C107 + C169 * C108 + C170 * C109) *
                       C50757 * C1651 -
                   (C511 * C109 + C512 * C108 + C513 * C107 +
                    (C117 * C449 + C486 + C486 + C50741 * C469) * C106) *
                       C50757 * C50724) *
                      C270 +
                  (((C117 * C867 + C883 + C883 + C50741 * C877) * C106 +
                    C900 * C107 + C901 * C108 + C902 * C109) *
                       C50757 * C50724 -
                   (C340 * C109 + C341 * C108 + C342 * C107 +
                    (C117 * C278 + C315 + C315 + C50741 * C298) * C106) *
                       C50757 * C1651) *
                      C271 +
                  (((C117 * C279 + C316 + C316 + C50741 * C299) * C106 +
                    C343 * C107 + C344 * C108 + C345 * C109) *
                       C50757 * C1651 -
                   ((C117 * C1537 + C1550 + C1550 + C50741 * C1545) * C109 +
                    (C117 * C1538 + C1551 + C1551 + C50741 * C1546) * C108 +
                    (C117 * C1539 + C1552 + C1552 + C50741 * C1547) * C107 +
                    (C117 * C1540 + C1553 + C1553 + C50741 * C1548) * C106) *
                       C50757 * C50724) *
                      C272) *
                 C50625) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 ((((C117 * C119 + C141 + C141 + C50741 * C133) * C106 +
                    C168 * C107 + C169 * C108 + C170 * C109) *
                       C50757 * C1651 -
                   (C511 * C109 + C512 * C108 + C513 * C107 +
                    (C117 * C449 + C486 + C486 + C50741 * C469) * C106) *
                       C50757 * C50724) *
                      C50644 * C1002 +
                  ((C513 * C106 + C512 * C107 + C511 * C108 + C737 * C109) *
                       C50757 * C50724 -
                   (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                       C50757 * C1651) *
                      C50644 * C1003 +
                  ((C169 * C106 + C170 * C107 + C171 * C108 + C172 * C109) *
                       C50757 * C1651 -
                   ((C117 * C728 + C734 + C734 + C50741 * C730) * C109 +
                    C737 * C108 + C511 * C107 + C512 * C106) *
                       C50757 * C50724) *
                      C50644 * C1004)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((C117 * C119 + C141 + C141 + C50741 * C133) * C106 +
                   C168 * C107 + C169 * C108 + C170 * C109) *
                      C50757 * C1817 -
                  (C511 * C109 + C512 * C108 + C513 * C107 +
                   (C117 * C449 + C486 + C486 + C50741 * C469) * C106) *
                      C50757 * C1818 +
                  ((C117 * C450 + C487 + C487 + C50741 * C470) * C106 +
                   C514 * C107 + C515 * C108 + C516 * C109) *
                      C50757 * C1819 -
                  ((C117 * C1821 + C1834 + C1834 + C50741 * C1829) * C109 +
                   (C117 * C1822 + C1835 + C1835 + C50741 * C1830) * C108 +
                   (C117 * C1823 + C1836 + C1836 + C50741 * C1831) * C107 +
                   (C117 * C1824 + C1837 + C1837 + C50741 * C1832) * C106) *
                      C50757 * C1820) *
                 C50644 * C50625) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 +
                     C2271 * C278 + C2277 + C2277 + C2265 * C298 +
                     C2273 * C279 + C2278 + C2278 + C2266 * C299) *
                        C2267 +
                    (C2327 + C2328 + C2329) * C50602) *
                       C50757 * C1651 -
                   ((C2736 + C2737 + C2738) * C50602 +
                    (C2273 * C1540 + C2703 + C2703 + C2266 * C1548 +
                     C2271 * C867 + C2704 + C2704 + C2265 * C877 +
                     C2269 * C449 + C2705 + C2705 + C2264 * C469) *
                        C2267) *
                       C50757 * C50724) *
                      C50644 * C1002 +
                  (((C2738 + C2737 + C2736) * C2267 +
                    (C3067 + C3068 + C3069) * C50602) *
                       C50757 * C50724 -
                   ((C2330 + C2331 + C2332) * C50602 +
                    (C2329 + C2328 + C2327) * C2267) *
                       C50757 * C1651) *
                      C50644 * C1003 +
                  (((C2332 + C2331 + C2330) * C2267 +
                    (C2333 + C2334 + C2335) * C50602) *
                       C50757 * C1651 -
                   ((C2273 * C1537 + C3058 + C3058 + C2266 * C1545 +
                     C2271 * C870 + C3059 + C3059 + C2265 * C880 +
                     C2269 * C446 + C3060 + C3060 + C2264 * C466) *
                        C50602 +
                    (C3069 + C3068 + C3067) * C2267) *
                       C50757 * C50724) *
                      C50644 * C1004)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 +
                     C2271 * C278 + C2277 + C2277 + C2265 * C298 +
                     C2273 * C279 + C2278 + C2278 + C2266 * C299) *
                        C2267 +
                    (C2327 + C2328 + C2329) * C50602) *
                       C50757 * C1651 -
                   ((C2736 + C2737 + C2738) * C50602 +
                    (C2273 * C1540 + C2703 + C2703 + C2266 * C1548 +
                     C2271 * C867 + C2704 + C2704 + C2265 * C877 +
                     C2269 * C449 + C2705 + C2705 + C2264 * C469) *
                        C2267) *
                       C50757 * C50724) *
                      C270 +
                  (((C2269 * C867 + C3273 + C3273 + C2264 * C877 +
                     C2271 * C1540 + C3274 + C3274 + C2265 * C1548 +
                     C2273 * C3263 + C3275 + C3275 + C2266 * C3269) *
                        C2267 +
                    (C3294 + C3295 + C3296) * C50602) *
                       C50757 * C50724 -
                   ((C2533 + C2534 + C2535) * C50602 +
                    (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 +
                     C2271 * C279 + C2501 + C2501 + C2265 * C299 +
                     C2269 * C278 + C2502 + C2502 + C2264 * C298) *
                        C2267) *
                       C50757 * C1651) *
                      C271 +
                  (((C2269 * C279 + C2503 + C2503 + C2264 * C299 +
                     C2271 * C1079 + C2504 + C2504 + C2265 * C1087 +
                     C2273 * C2481 + C2505 + C2505 + C2266 * C2487) *
                        C2267 +
                    (C2536 + C2537 + C2538) * C50602) *
                       C50757 * C1651 -
                   ((C2273 * C4196 + C4203 + C4203 + C2266 * C4200 +
                     C2271 * C3264 + C4204 + C4204 + C2265 * C3270 +
                     C2269 * C1539 + C4205 + C4205 + C2264 * C1547) *
                        C50602 +
                    (C2273 * C4197 + C4206 + C4206 + C2266 * C4201 +
                     C2271 * C3263 + C4207 + C4207 + C2265 * C3269 +
                     C2269 * C1540 + C4208 + C4208 + C2264 * C1548) *
                        C2267) *
                       C50757 * C50724) *
                      C272) *
                 C50625) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 +
                    C2277 + C2277 + C2265 * C298 + C2273 * C279 + C2278 +
                    C2278 + C2266 * C299) *
                       C2267 +
                   (C2327 + C2328 + C2329) * C50602) *
                      C50757 * C1817 -
                  ((C2736 + C2737 + C2738) * C50602 +
                   (C2273 * C1540 + C2703 + C2703 + C2266 * C1548 +
                    C2271 * C867 + C2704 + C2704 + C2265 * C877 + C2269 * C449 +
                    C2705 + C2705 + C2264 * C469) *
                       C2267) *
                      C50757 * C1818 +
                  ((C2269 * C450 + C2706 + C2706 + C2264 * C470 +
                    C2271 * C1193 + C2707 + C2707 + C2265 * C1201 +
                    C2273 * C2684 + C2708 + C2708 + C2266 * C2690) *
                       C2267 +
                   (C2739 + C2740 + C2741) * C50602) *
                      C50757 * C1819 -
                  ((C2273 * C4598 + C4611 + C4611 + C2266 * C4606 +
                    C2271 * C4599 + C4612 + C4612 + C2265 * C4607 +
                    C2269 * C1823 + C4613 + C4613 + C2264 * C1831) *
                       C50602 +
                   (C2273 * C4600 + C4614 + C4614 + C2266 * C4608 +
                    C2271 * C4601 + C4615 + C4615 + C2265 * C4609 +
                    C2269 * C1824 + C4616 + C4616 + C2264 * C1832) *
                       C2267) *
                      C50757 * C1820) *
                 C50644 * C50625) /
                    (p * q * std::sqrt(p + q));
    d2ee[73] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C117 * C119 + C141 + C141 + C50741 * C133) * C106 +
                    C168 * C107 + C169 * C108 + C170 * C109) *
                       C50757 * C50915 -
                   (C511 * C109 + C512 * C108 + C513 * C107 +
                    (C117 * C449 + C486 + C486 + C50741 * C469) * C106) *
                       C50757 * C50916 +
                   ((C117 * C450 + C487 + C487 + C50741 * C470) * C106 +
                    C514 * C107 + C515 * C108 + C516 * C109) *
                       C50757 * C2067) *
                      C50644 * C50860 +
                  ((C513 * C106 + C512 * C107 + C511 * C108 + C737 * C109) *
                       C50757 * C50916 -
                   (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                       C50757 * C50915 -
                   ((C117 * C455 + C498 + C498 + C50741 * C475) * C109 +
                    C516 * C108 + C515 * C107 + C514 * C106) *
                       C50757 * C2067) *
                      C50644 * C50631)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 +
                     C2271 * C278 + C2277 + C2277 + C2265 * C298 +
                     C2273 * C279 + C2278 + C2278 + C2266 * C299) *
                        C2267 +
                    (C2327 + C2328 + C2329) * C50602) *
                       C50757 * C50915 -
                   ((C2736 + C2737 + C2738) * C50602 +
                    (C2273 * C1540 + C2703 + C2703 + C2266 * C1548 +
                     C2271 * C867 + C2704 + C2704 + C2265 * C877 +
                     C2269 * C449 + C2705 + C2705 + C2264 * C469) *
                        C2267) *
                       C50757 * C50916 +
                   ((C2269 * C450 + C2706 + C2706 + C2264 * C470 +
                     C2271 * C1193 + C2707 + C2707 + C2265 * C1201 +
                     C2273 * C2684 + C2708 + C2708 + C2266 * C2690) *
                        C2267 +
                    (C2739 + C2740 + C2741) * C50602) *
                       C50757 * C2067) *
                      C50644 * C50860 +
                  (((C2738 + C2737 + C2736) * C2267 +
                    (C3067 + C3068 + C3069) * C50602) *
                       C50757 * C50916 -
                   ((C2330 + C2331 + C2332) * C50602 +
                    (C2329 + C2328 + C2327) * C2267) *
                       C50757 * C50915 -
                   ((C2273 * C2686 + C2721 + C2721 + C2266 * C2692 +
                     C2271 * C1191 + C2722 + C2722 + C2265 * C1199 +
                     C2269 * C452 + C2723 + C2723 + C2264 * C472) *
                        C50602 +
                    (C2741 + C2740 + C2739) * C2267) *
                       C50757 * C2067) *
                      C50644 * C50631)) /
                    (p * q * std::sqrt(p + q));
    d2ee[74] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C117 * C119 + C141 + C141 + C50741 * C133) * C106 +
                    C168 * C107 + C169 * C108 + C170 * C109) *
                       C50757 * C1651 -
                   (C511 * C109 + C512 * C108 + C513 * C107 +
                    (C117 * C449 + C486 + C486 + C50741 * C469) * C106) *
                       C50757 * C50724) *
                      C50644 * C1002 +
                  ((C513 * C106 + C512 * C107 + C511 * C108 + C737 * C109) *
                       C50757 * C50724 -
                   (C171 * C109 + C170 * C108 + C169 * C107 + C168 * C106) *
                       C50757 * C1651) *
                      C50644 * C1003 +
                  ((C169 * C106 + C170 * C107 + C171 * C108 + C172 * C109) *
                       C50757 * C1651 -
                   ((C117 * C728 + C734 + C734 + C50741 * C730) * C109 +
                    C737 * C108 + C511 * C107 + C512 * C106) *
                       C50757 * C50724) *
                      C50644 * C1004)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C117 * C119 + C141 + C141 + C50741 * C133) * C106 +
                    C168 * C107 + C169 * C108 + C170 * C109) *
                       C50757 * C1651 -
                   (C511 * C109 + C512 * C108 + C513 * C107 +
                    (C117 * C449 + C486 + C486 + C50741 * C469) * C106) *
                       C50757 * C50724) *
                      C270 +
                  (((C117 * C867 + C883 + C883 + C50741 * C877) * C106 +
                    C900 * C107 + C901 * C108 + C902 * C109) *
                       C50757 * C50724 -
                   (C340 * C109 + C341 * C108 + C342 * C107 +
                    (C117 * C278 + C315 + C315 + C50741 * C298) * C106) *
                       C50757 * C1651) *
                      C271 +
                  (((C117 * C279 + C316 + C316 + C50741 * C299) * C106 +
                    C343 * C107 + C344 * C108 + C345 * C109) *
                       C50757 * C1651 -
                   ((C117 * C1537 + C1550 + C1550 + C50741 * C1545) * C109 +
                    (C117 * C1538 + C1551 + C1551 + C50741 * C1546) * C108 +
                    (C117 * C1539 + C1552 + C1552 + C50741 * C1547) * C107 +
                    (C117 * C1540 + C1553 + C1553 + C50741 * C1548) * C106) *
                       C50757 * C50724) *
                      C272) *
                 C50625) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 +
                     C2271 * C278 + C2277 + C2277 + C2265 * C298 +
                     C2273 * C279 + C2278 + C2278 + C2266 * C299) *
                        C2267 +
                    (C2327 + C2328 + C2329) * C50602) *
                       C50757 * C1651 -
                   ((C2736 + C2737 + C2738) * C50602 +
                    (C2273 * C1540 + C2703 + C2703 + C2266 * C1548 +
                     C2271 * C867 + C2704 + C2704 + C2265 * C877 +
                     C2269 * C449 + C2705 + C2705 + C2264 * C469) *
                        C2267) *
                       C50757 * C50724) *
                      C50644 * C1002 +
                  (((C2738 + C2737 + C2736) * C2267 +
                    (C3067 + C3068 + C3069) * C50602) *
                       C50757 * C50724 -
                   ((C2330 + C2331 + C2332) * C50602 +
                    (C2329 + C2328 + C2327) * C2267) *
                       C50757 * C1651) *
                      C50644 * C1003 +
                  (((C2332 + C2331 + C2330) * C2267 +
                    (C2333 + C2334 + C2335) * C50602) *
                       C50757 * C1651 -
                   ((C2273 * C1537 + C3058 + C3058 + C2266 * C1545 +
                     C2271 * C870 + C3059 + C3059 + C2265 * C880 +
                     C2269 * C446 + C3060 + C3060 + C2264 * C466) *
                        C50602 +
                    (C3069 + C3068 + C3067) * C2267) *
                       C50757 * C50724) *
                      C50644 * C1004)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 +
                     C2271 * C278 + C2277 + C2277 + C2265 * C298 +
                     C2273 * C279 + C2278 + C2278 + C2266 * C299) *
                        C2267 +
                    (C2327 + C2328 + C2329) * C50602) *
                       C50757 * C1651 -
                   ((C2736 + C2737 + C2738) * C50602 +
                    (C2273 * C1540 + C2703 + C2703 + C2266 * C1548 +
                     C2271 * C867 + C2704 + C2704 + C2265 * C877 +
                     C2269 * C449 + C2705 + C2705 + C2264 * C469) *
                        C2267) *
                       C50757 * C50724) *
                      C270 +
                  (((C2269 * C867 + C3273 + C3273 + C2264 * C877 +
                     C2271 * C1540 + C3274 + C3274 + C2265 * C1548 +
                     C2273 * C3263 + C3275 + C3275 + C2266 * C3269) *
                        C2267 +
                    (C3294 + C3295 + C3296) * C50602) *
                       C50757 * C50724 -
                   ((C2533 + C2534 + C2535) * C50602 +
                    (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 +
                     C2271 * C279 + C2501 + C2501 + C2265 * C299 +
                     C2269 * C278 + C2502 + C2502 + C2264 * C298) *
                        C2267) *
                       C50757 * C1651) *
                      C271 +
                  (((C2269 * C279 + C2503 + C2503 + C2264 * C299 +
                     C2271 * C1079 + C2504 + C2504 + C2265 * C1087 +
                     C2273 * C2481 + C2505 + C2505 + C2266 * C2487) *
                        C2267 +
                    (C2536 + C2537 + C2538) * C50602) *
                       C50757 * C1651 -
                   ((C2273 * C4196 + C4203 + C4203 + C2266 * C4200 +
                     C2271 * C3264 + C4204 + C4204 + C2265 * C3270 +
                     C2269 * C1539 + C4205 + C4205 + C2264 * C1547) *
                        C50602 +
                    (C2273 * C4197 + C4206 + C4206 + C2266 * C4201 +
                     C2271 * C3263 + C4207 + C4207 + C2265 * C3269 +
                     C2269 * C1540 + C4208 + C4208 + C2264 * C1548) *
                        C2267) *
                       C50757 * C50724) *
                      C272) *
                 C50625) /
                    (p * q * std::sqrt(p + q));
    d2ee[75] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C24676 * C119 + C24683 + C24683 + C50917 * C133 +
                     C24678 * C278 + C24684 + C24684 + C50918 * C298 +
                     C24680 * C279 + C24685 + C24685 + C24673 * C299) *
                        C50853 +
                    (C24734 + C24735 + C24736) * C50602) *
                       C50757 * C50660 * C50868 -
                   ((C24931 + C24932 + C24933) * C50602 +
                    (C24680 * C1079 + C24898 + C24898 + C24673 * C1087 +
                     C24678 * C279 + C24899 + C24899 + C50918 * C299 +
                     C24676 * C278 + C24900 + C24900 + C50917 * C298) *
                        C50853) *
                       C50757 * C50660 * C50696) *
                      C50911 +
                  (((C24933 + C24932 + C24931) * C50853 +
                    (C25292 + C25293 + C25294) * C50602) *
                       C50757 * C50660 * C50696 -
                   ((C24737 + C24738 + C24739) * C50602 +
                    (C24736 + C24735 + C24734) * C50853) *
                       C50757 * C50660 * C50868) *
                      C50912 +
                  (((C24739 + C24738 + C24737) * C50853 +
                    (C24740 + C24741 + C24742) * C50602) *
                       C50757 * C50660 * C50868 -
                   ((C24680 * C1076 + C25283 + C25283 + C24673 * C1084 +
                     C24678 * C282 + C25284 + C25284 + C50918 * C302 +
                     C24676 * C275 + C25285 + C25285 + C50917 * C295) *
                        C50602 +
                    (C25294 + C25293 + C25292) * C50853) *
                       C50757 * C50660 * C50696) *
                      C618)) /
                (p * q * std::sqrt(p + q));
    d2ee[76] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C24676 * C119 + C24683 + C24683 + C50917 * C133 +
                      C24678 * C278 + C24684 + C24684 + C50918 * C298 +
                      C24680 * C279 + C24685 + C24685 + C24673 * C299) *
                         C50853 +
                     (C24734 + C24735 + C24736) * C50602) *
                        C50757 * C50869 -
                    ((C25125 + C25126 + C25127) * C50602 +
                     (C24680 * C1540 + C25092 + C25092 + C24673 * C1548 +
                      C24678 * C867 + C25093 + C25093 + C50918 * C877 +
                      C24676 * C449 + C25094 + C25094 + C50917 * C469) *
                         C50853) *
                        C50757 * C50724) *
                       C50868 +
                   (((C24676 * C867 + C25653 + C25653 + C50917 * C877 +
                      C24678 * C1540 + C25654 + C25654 + C50918 * C1548 +
                      C24680 * C3263 + C25655 + C25655 + C24673 * C3269) *
                         C50853 +
                     (C25674 + C25675 + C25676) * C50602) *
                        C50757 * C50724 -
                    ((C24931 + C24932 + C24933) * C50602 +
                     (C24680 * C1079 + C24898 + C24898 + C24673 * C1087 +
                      C24678 * C279 + C24899 + C24899 + C50918 * C299 +
                      C24676 * C278 + C24900 + C24900 + C50917 * C298) *
                         C50853) *
                        C50757 * C50869) *
                       C50696) *
                      C273 +
                  ((((C25127 + C25126 + C25125) * C50853 +
                     (C25456 + C25457 + C25458) * C50602) *
                        C50757 * C50724 -
                    ((C24737 + C24738 + C24739) * C50602 +
                     (C24736 + C24735 + C24734) * C50853) *
                        C50757 * C50869) *
                       C50868 +
                   (((C24933 + C24932 + C24931) * C50853 +
                     (C25292 + C25293 + C25294) * C50602) *
                        C50757 * C50869 -
                    ((C24680 * C3265 + C25665 + C25665 + C24673 * C3271 +
                      C24678 * C1538 + C25666 + C25666 + C50918 * C1546 +
                      C24676 * C869 + C25667 + C25667 + C50917 * C879) *
                         C50602 +
                     (C25676 + C25675 + C25674) * C50853) *
                        C50757 * C50724) *
                       C50696) *
                      C50631)) /
                (p * q * std::sqrt(p + q));
    d2ee[77] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C24676 * C119 + C24683 + C24683 + C50917 * C133 +
                     C24678 * C278 + C24684 + C24684 + C50918 * C298 +
                     C24680 * C279 + C24685 + C24685 + C24673 * C299) *
                        C50853 +
                    (C24734 + C24735 + C24736) * C50602) *
                       C50757 * C50660 * C270 -
                   ((C24931 + C24932 + C24933) * C50602 +
                    (C24680 * C1079 + C24898 + C24898 + C24673 * C1087 +
                     C24678 * C279 + C24899 + C24899 + C50918 * C299 +
                     C24676 * C278 + C24900 + C24900 + C50917 * C298) *
                        C50853) *
                       C50757 * C50660 * C271 +
                   ((C24676 * C279 + C24901 + C24901 + C50917 * C299 +
                     C24678 * C1079 + C24902 + C24902 + C50918 * C1087 +
                     C24680 * C2481 + C24903 + C24903 + C24673 * C2487) *
                        C50853 +
                    (C24934 + C24935 + C24936) * C50602) *
                       C50757 * C50660 * C272) *
                      C273 +
                  (((C24933 + C24932 + C24931) * C50853 +
                    (C24676 * C276 + C24913 + C24913 + C50917 * C296 +
                     C24678 * C281 + C24914 + C24914 + C50918 * C301 +
                     C24680 * C1077 + C24915 + C24915 + C24673 * C1085) *
                        C50602) *
                       C50757 * C50660 * C271 -
                   ((C24737 + C24738 + C24739) * C50602 +
                    (C24736 + C24735 + C24734) * C50853) *
                       C50757 * C50660 * C270 -
                   ((C24680 * C2483 + C24916 + C24916 + C24673 * C2489 +
                     C24678 * C1077 + C24917 + C24917 + C50918 * C1085 +
                     C24676 * C281 + C24918 + C24918 + C50917 * C301) *
                        C50602 +
                    (C24936 + C24935 + C24934) * C50853) *
                       C50757 * C50660 * C272) *
                      C50631)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((C24676 * C119 + C24683 + C24683 + C50917 * C133 +
                    C24678 * C278 + C24684 + C24684 + C50918 * C298 +
                    C24680 * C279 + C24685 + C24685 + C24673 * C299) *
                       C50853 +
                   (C24734 + C24735 + C24736) * C50602) *
                      C50757 * C50660 * C50644 * C113 -
                  ((C24737 + C24738 + C24739) * C50602 +
                   (C24736 + C24735 + C24734) * C50853) *
                      C50757 * C50660 * C50644 * C114 +
                  ((C24739 + C24738 + C24737) * C50853 +
                   (C24740 + C24741 + C24742) * C50602) *
                      C50757 * C50660 * C50644 * C115 -
                  ((C24680 * C284 + C24713 + C24713 + C24673 * C304 +
                    C24678 * C283 + C24714 + C24714 + C50918 * C303 +
                    C24676 * C123 + C24715 + C24715 + C50917 * C137) *
                       C50602 +
                   (C24742 + C24741 + C24740) * C50853) *
                      C50757 * C50660 * C50644 * C116)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C24676 * C119 + C24683 + C24683 + C50917 * C133 +
                     C24678 * C278 + C24684 + C24684 + C50918 * C298 +
                     C24680 * C279 + C24685 + C24685 + C24673 * C299) *
                        C50853 +
                    (C24734 + C24735 + C24736) * C50602) *
                       C50757 * C443 -
                   ((C25125 + C25126 + C25127) * C50602 +
                    (C24680 * C1540 + C25092 + C25092 + C24673 * C1548 +
                     C24678 * C867 + C25093 + C25093 + C50918 * C877 +
                     C24676 * C449 + C25094 + C25094 + C50917 * C469) *
                        C50853) *
                       C50757 * C444 +
                   ((C24676 * C450 + C25095 + C25095 + C50917 * C470 +
                     C24678 * C1193 + C25096 + C25096 + C50918 * C1201 +
                     C24680 * C2684 + C25097 + C25097 + C24673 * C2690) *
                        C50853 +
                    (C25128 + C25129 + C25130) * C50602) *
                       C50757 * C445) *
                      C50644 * C273 +
                  (((C25127 + C25126 + C25125) * C50853 +
                    (C24676 * C447 + C25107 + C25107 + C50917 * C467 +
                     C24678 * C869 + C25108 + C25108 + C50918 * C879 +
                     C24680 * C1538 + C25109 + C25109 + C24673 * C1546) *
                        C50602) *
                       C50757 * C444 -
                   ((C24737 + C24738 + C24739) * C50602 +
                    (C24736 + C24735 + C24734) * C50853) *
                       C50757 * C443 -
                   ((C24680 * C2686 + C25110 + C25110 + C24673 * C2692 +
                     C24678 * C1191 + C25111 + C25111 + C50918 * C1199 +
                     C24676 * C452 + C25112 + C25112 + C50917 * C472) *
                        C50602 +
                    (C25130 + C25129 + C25128) * C50853) *
                       C50757 * C445) *
                      C50644 * C50631)) /
                    (p * q * std::sqrt(p + q));
    d2ee[78] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C24676 * C119 + C24683 + C24683 + C50917 * C133 +
                     C24678 * C278 + C24684 + C24684 + C50918 * C298 +
                     C24680 * C279 + C24685 + C24685 + C24673 * C299) *
                        C50853 +
                    (C24734 + C24735 + C24736) * C50602) *
                       C50757 * C50869 -
                   ((C25125 + C25126 + C25127) * C50602 +
                    (C24680 * C1540 + C25092 + C25092 + C24673 * C1548 +
                     C24678 * C867 + C25093 + C25093 + C50918 * C877 +
                     C24676 * C449 + C25094 + C25094 + C50917 * C469) *
                        C50853) *
                       C50757 * C50724) *
                      C50644 * C50911 +
                  (((C25127 + C25126 + C25125) * C50853 +
                    (C25456 + C25457 + C25458) * C50602) *
                       C50757 * C50724 -
                   ((C24737 + C24738 + C24739) * C50602 +
                    (C24736 + C24735 + C24734) * C50853) *
                       C50757 * C50869) *
                      C50644 * C50912 +
                  (((C24739 + C24738 + C24737) * C50853 +
                    (C24740 + C24741 + C24742) * C50602) *
                       C50757 * C50869 -
                   ((C24680 * C1537 + C25447 + C25447 + C24673 * C1545 +
                     C24678 * C870 + C25448 + C25448 + C50918 * C880 +
                     C24676 * C446 + C25449 + C25449 + C50917 * C466) *
                        C50602 +
                    (C25458 + C25457 + C25456) * C50853) *
                       C50757 * C50724) *
                      C50644 * C618)) /
                (p * q * std::sqrt(p + q));
    d2ee[79] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((C24676 * C119 + C24683 + C24683 + C50917 * C133 +
                    C24678 * C278 + C24684 + C24684 + C50918 * C298 +
                    C24680 * C279 + C24685 + C24685 + C24673 * C299) *
                       C50853 +
                   (C24734 + C24735 + C24736) * C50602) *
                      C50757 * C50660 * C50644 * C113 -
                  ((C24737 + C24738 + C24739) * C50602 +
                   (C24736 + C24735 + C24734) * C50853) *
                      C50757 * C50660 * C50644 * C114 +
                  ((C24739 + C24738 + C24737) * C50853 +
                   (C24740 + C24741 + C24742) * C50602) *
                      C50757 * C50660 * C50644 * C115 -
                  ((C24680 * C284 + C24713 + C24713 + C24673 * C304 +
                    C24678 * C283 + C24714 + C24714 + C50918 * C303 +
                    C24676 * C123 + C24715 + C24715 + C50917 * C137) *
                       C50602 +
                   (C24742 + C24741 + C24740) * C50853) *
                      C50757 * C50660 * C50644 * C116)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C24676 * C119 + C24683 + C24683 + C50917 * C133 +
                     C24678 * C278 + C24684 + C24684 + C50918 * C298 +
                     C24680 * C279 + C24685 + C24685 + C24673 * C299) *
                        C50853 +
                    (C24734 + C24735 + C24736) * C50602) *
                       C50757 * C50660 * C270 -
                   ((C24931 + C24932 + C24933) * C50602 +
                    (C24680 * C1079 + C24898 + C24898 + C24673 * C1087 +
                     C24678 * C279 + C24899 + C24899 + C50918 * C299 +
                     C24676 * C278 + C24900 + C24900 + C50917 * C298) *
                        C50853) *
                       C50757 * C50660 * C271 +
                   ((C24676 * C279 + C24901 + C24901 + C50917 * C299 +
                     C24678 * C1079 + C24902 + C24902 + C50918 * C1087 +
                     C24680 * C2481 + C24903 + C24903 + C24673 * C2487) *
                        C50853 +
                    (C24934 + C24935 + C24936) * C50602) *
                       C50757 * C50660 * C272) *
                      C273 +
                  (((C24933 + C24932 + C24931) * C50853 +
                    (C24676 * C276 + C24913 + C24913 + C50917 * C296 +
                     C24678 * C281 + C24914 + C24914 + C50918 * C301 +
                     C24680 * C1077 + C24915 + C24915 + C24673 * C1085) *
                        C50602) *
                       C50757 * C50660 * C271 -
                   ((C24737 + C24738 + C24739) * C50602 +
                    (C24736 + C24735 + C24734) * C50853) *
                       C50757 * C50660 * C270 -
                   ((C24680 * C2483 + C24916 + C24916 + C24673 * C2489 +
                     C24678 * C1077 + C24917 + C24917 + C50918 * C1085 +
                     C24676 * C281 + C24918 + C24918 + C50917 * C301) *
                        C50602 +
                    (C24936 + C24935 + C24934) * C50853) *
                       C50757 * C50660 * C272) *
                      C50631)) /
                    (p * q * std::sqrt(p + q));
    d2ee[80] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C24676 * C119 + C24683 + C24683 + C50917 * C133 +
                     C24678 * C278 + C24684 + C24684 + C50918 * C298 +
                     C24680 * C279 + C24685 + C24685 + C24673 * C299) *
                        C50853 +
                    (C24734 + C24735 + C24736) * C50602) *
                       C50757 * C50660 * C50913 -
                   ((C24931 + C24932 + C24933) * C50602 +
                    (C24680 * C1079 + C24898 + C24898 + C24673 * C1087 +
                     C24678 * C279 + C24899 + C24899 + C50918 * C299 +
                     C24676 * C278 + C24900 + C24900 + C50917 * C298) *
                        C50853) *
                       C50757 * C50660 * C50914 +
                   ((C24676 * C279 + C24901 + C24901 + C50917 * C299 +
                     C24678 * C1079 + C24902 + C24902 + C50918 * C1087 +
                     C24680 * C2481 + C24903 + C24903 + C24673 * C2487) *
                        C50853 +
                    (C24934 + C24935 + C24936) * C50602) *
                       C50757 * C50660 * C1306) *
                      C50860 +
                  (((C24933 + C24932 + C24931) * C50853 +
                    (C25292 + C25293 + C25294) * C50602) *
                       C50757 * C50660 * C50914 -
                   ((C24737 + C24738 + C24739) * C50602 +
                    (C24736 + C24735 + C24734) * C50853) *
                       C50757 * C50660 * C50913 -
                   ((C24680 * C2483 + C24916 + C24916 + C24673 * C2489 +
                     C24678 * C1077 + C24917 + C24917 + C50918 * C1085 +
                     C24676 * C281 + C24918 + C24918 + C50917 * C301) *
                        C50602 +
                    (C24936 + C24935 + C24934) * C50853) *
                       C50757 * C50660 * C1306) *
                      C50631)) /
                (p * q * std::sqrt(p + q));
    d2ee[81] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C24676 * C119 + C24683 + C24683 + C50917 * C133 +
                     C24678 * C278 + C24684 + C24684 + C50918 * C298 +
                     C24680 * C279 + C24685 + C24685 + C24673 * C299) *
                        C50853 +
                    (C24734 + C24735 + C24736) * C50602) *
                       C50757 * C50869 -
                   ((C25125 + C25126 + C25127) * C50602 +
                    (C24680 * C1540 + C25092 + C25092 + C24673 * C1548 +
                     C24678 * C867 + C25093 + C25093 + C50918 * C877 +
                     C24676 * C449 + C25094 + C25094 + C50917 * C469) *
                        C50853) *
                       C50757 * C50724) *
                      C50913 +
                  (((C24676 * C867 + C25653 + C25653 + C50917 * C877 +
                     C24678 * C1540 + C25654 + C25654 + C50918 * C1548 +
                     C24680 * C3263 + C25655 + C25655 + C24673 * C3269) *
                        C50853 +
                    (C25674 + C25675 + C25676) * C50602) *
                       C50757 * C50724 -
                   ((C24931 + C24932 + C24933) * C50602 +
                    (C24680 * C1079 + C24898 + C24898 + C24673 * C1087 +
                     C24678 * C279 + C24899 + C24899 + C50918 * C299 +
                     C24676 * C278 + C24900 + C24900 + C50917 * C298) *
                        C50853) *
                       C50757 * C50869) *
                      C50914 +
                  (((C24676 * C279 + C24901 + C24901 + C50917 * C299 +
                     C24678 * C1079 + C24902 + C24902 + C50918 * C1087 +
                     C24680 * C2481 + C24903 + C24903 + C24673 * C2487) *
                        C50853 +
                    (C24934 + C24935 + C24936) * C50602) *
                       C50757 * C50869 -
                   ((C24680 * C4196 + C26565 + C26565 + C24673 * C4200 +
                     C24678 * C3264 + C26566 + C26566 + C50918 * C3270 +
                     C24676 * C1539 + C26567 + C26567 + C50917 * C1547) *
                        C50602 +
                    (C24680 * C4197 + C26568 + C26568 + C24673 * C4201 +
                     C24678 * C3263 + C26569 + C26569 + C50918 * C3269 +
                     C24676 * C1540 + C26570 + C26570 + C50917 * C1548) *
                        C50853) *
                       C50757 * C50724) *
                      C1306) *
                 C50625) /
                (p * q * std::sqrt(p + q));
    d2ee[82] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((C24676 * C119 + C24683 + C24683 + C50917 * C133 +
                    C24678 * C278 + C24684 + C24684 + C50918 * C298 +
                    C24680 * C279 + C24685 + C24685 + C24673 * C299) *
                       C50853 +
                   (C24734 + C24735 + C24736) * C50602) *
                      C50757 * C50660 * C1071 -
                  ((C24931 + C24932 + C24933) * C50602 +
                   (C24680 * C1079 + C24898 + C24898 + C24673 * C1087 +
                    C24678 * C279 + C24899 + C24899 + C50918 * C299 +
                    C24676 * C278 + C24900 + C24900 + C50917 * C298) *
                       C50853) *
                      C50757 * C50660 * C1072 +
                  ((C24676 * C279 + C24901 + C24901 + C50917 * C299 +
                    C24678 * C1079 + C24902 + C24902 + C50918 * C1087 +
                    C24680 * C2481 + C24903 + C24903 + C24673 * C2487) *
                       C50853 +
                   (C24934 + C24935 + C24936) * C50602) *
                      C50757 * C50660 * C1073 -
                  ((C24680 * C3540 + C25921 + C25921 + C24673 * C3544 +
                    C24678 * C2482 + C25922 + C25922 + C50918 * C2488 +
                    C24676 * C1078 + C25923 + C25923 + C50917 * C1086) *
                       C50602 +
                   (C24680 * C3541 + C25924 + C25924 + C24673 * C3545 +
                    C24678 * C2481 + C25925 + C25925 + C50918 * C2487 +
                    C24676 * C1079 + C25926 + C25926 + C50917 * C1087) *
                       C50853) *
                      C50757 * C50660 * C1074) *
                 C50625) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C24676 * C119 + C24683 + C24683 + C50917 * C133 +
                     C24678 * C278 + C24684 + C24684 + C50918 * C298 +
                     C24680 * C279 + C24685 + C24685 + C24673 * C299) *
                        C50853 +
                    (C24734 + C24735 + C24736) * C50602) *
                       C50757 * C50660 * C1000 -
                   ((C24931 + C24932 + C24933) * C50602 +
                    (C24680 * C1079 + C24898 + C24898 + C24673 * C1087 +
                     C24678 * C279 + C24899 + C24899 + C50918 * C299 +
                     C24676 * C278 + C24900 + C24900 + C50917 * C298) *
                        C50853) *
                       C50757 * C50660 * C50696) *
                      C1002 +
                  (((C24933 + C24932 + C24931) * C50853 +
                    (C25292 + C25293 + C25294) * C50602) *
                       C50757 * C50660 * C50696 -
                   ((C24737 + C24738 + C24739) * C50602 +
                    (C24736 + C24735 + C24734) * C50853) *
                       C50757 * C50660 * C1000) *
                      C1003 +
                  (((C24739 + C24738 + C24737) * C50853 +
                    (C24740 + C24741 + C24742) * C50602) *
                       C50757 * C50660 * C1000 -
                   ((C24680 * C1076 + C25283 + C25283 + C24673 * C1084 +
                     C24678 * C282 + C25284 + C25284 + C50918 * C302 +
                     C24676 * C275 + C25285 + C25285 + C50917 * C295) *
                        C50602 +
                    (C25294 + C25293 + C25292) * C50853) *
                       C50757 * C50660 * C50696) *
                      C1004)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C24676 * C119 + C24683 + C24683 + C50917 * C133 +
                     C24678 * C278 + C24684 + C24684 + C50918 * C298 +
                     C24680 * C279 + C24685 + C24685 + C24673 * C299) *
                        C50853 +
                    (C24734 + C24735 + C24736) * C50602) *
                       C50757 * C443 -
                   ((C25125 + C25126 + C25127) * C50602 +
                    (C24680 * C1540 + C25092 + C25092 + C24673 * C1548 +
                     C24678 * C867 + C25093 + C25093 + C50918 * C877 +
                     C24676 * C449 + C25094 + C25094 + C50917 * C469) *
                        C50853) *
                       C50757 * C444 +
                   ((C24676 * C450 + C25095 + C25095 + C50917 * C470 +
                     C24678 * C1193 + C25096 + C25096 + C50918 * C1201 +
                     C24680 * C2684 + C25097 + C25097 + C24673 * C2690) *
                        C50853 +
                    (C25128 + C25129 + C25130) * C50602) *
                       C50757 * C445) *
                      C1000 +
                  (((C24676 * C867 + C25653 + C25653 + C50917 * C877 +
                     C24678 * C1540 + C25654 + C25654 + C50918 * C1548 +
                     C24680 * C3263 + C25655 + C25655 + C24673 * C3269) *
                        C50853 +
                    (C25674 + C25675 + C25676) * C50602) *
                       C50757 * C444 -
                   ((C24931 + C24932 + C24933) * C50602 +
                    (C24680 * C1079 + C24898 + C24898 + C24673 * C1087 +
                     C24678 * C279 + C24899 + C24899 + C50918 * C299 +
                     C24676 * C278 + C24900 + C24900 + C50917 * C298) *
                        C50853) *
                       C50757 * C443 -
                   ((C24680 * C3698 + C26073 + C26073 + C24673 * C3702 +
                     C24678 * C2685 + C26074 + C26074 + C50918 * C2691 +
                     C24676 * C1192 + C26075 + C26075 + C50917 * C1200) *
                        C50602 +
                    (C24680 * C3699 + C26076 + C26076 + C24673 * C3703 +
                     C24678 * C2684 + C26077 + C26077 + C50918 * C2690 +
                     C24676 * C1193 + C26078 + C26078 + C50917 * C1201) *
                        C50853) *
                       C50757 * C445) *
                      C50696) *
                 C50625) /
                    (p * q * std::sqrt(p + q));
    d2ee[83] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C24676 * C119 + C24683 + C24683 + C50917 * C133 +
                      C24678 * C278 + C24684 + C24684 + C50918 * C298 +
                      C24680 * C279 + C24685 + C24685 + C24673 * C299) *
                         C50853 +
                     (C24734 + C24735 + C24736) * C50602) *
                        C50757 * C50869 -
                    ((C25125 + C25126 + C25127) * C50602 +
                     (C24680 * C1540 + C25092 + C25092 + C24673 * C1548 +
                      C24678 * C867 + C25093 + C25093 + C50918 * C877 +
                      C24676 * C449 + C25094 + C25094 + C50917 * C469) *
                         C50853) *
                        C50757 * C50724) *
                       C1000 +
                   (((C24676 * C867 + C25653 + C25653 + C50917 * C877 +
                      C24678 * C1540 + C25654 + C25654 + C50918 * C1548 +
                      C24680 * C3263 + C25655 + C25655 + C24673 * C3269) *
                         C50853 +
                     (C25674 + C25675 + C25676) * C50602) *
                        C50757 * C50724 -
                    ((C24931 + C24932 + C24933) * C50602 +
                     (C24680 * C1079 + C24898 + C24898 + C24673 * C1087 +
                      C24678 * C279 + C24899 + C24899 + C50918 * C299 +
                      C24676 * C278 + C24900 + C24900 + C50917 * C298) *
                         C50853) *
                        C50757 * C50869) *
                       C50696) *
                      C50860 +
                  ((((C25127 + C25126 + C25125) * C50853 +
                     (C25456 + C25457 + C25458) * C50602) *
                        C50757 * C50724 -
                    ((C24737 + C24738 + C24739) * C50602 +
                     (C24736 + C24735 + C24734) * C50853) *
                        C50757 * C50869) *
                       C1000 +
                   (((C24933 + C24932 + C24931) * C50853 +
                     (C25292 + C25293 + C25294) * C50602) *
                        C50757 * C50869 -
                    ((C24680 * C3265 + C25665 + C25665 + C24673 * C3271 +
                      C24678 * C1538 + C25666 + C25666 + C50918 * C1546 +
                      C24676 * C869 + C25667 + C25667 + C50917 * C879) *
                         C50602 +
                     (C25676 + C25675 + C25674) * C50853) *
                        C50757 * C50724) *
                       C50696) *
                      C50631)) /
                (p * q * std::sqrt(p + q));
    d2ee[84] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C24676 * C119 + C24683 + C24683 + C50917 * C133 +
                     C24678 * C278 + C24684 + C24684 + C50918 * C298 +
                     C24680 * C279 + C24685 + C24685 + C24673 * C299) *
                        C50853 +
                    (C24734 + C24735 + C24736) * C50602) *
                       C50757 * C50660 * C1000 -
                   ((C24931 + C24932 + C24933) * C50602 +
                    (C24680 * C1079 + C24898 + C24898 + C24673 * C1087 +
                     C24678 * C279 + C24899 + C24899 + C50918 * C299 +
                     C24676 * C278 + C24900 + C24900 + C50917 * C298) *
                        C50853) *
                       C50757 * C50660 * C50696) *
                      C1002 +
                  (((C24933 + C24932 + C24931) * C50853 +
                    (C25292 + C25293 + C25294) * C50602) *
                       C50757 * C50660 * C50696 -
                   ((C24737 + C24738 + C24739) * C50602 +
                    (C24736 + C24735 + C24734) * C50853) *
                       C50757 * C50660 * C1000) *
                      C1003 +
                  (((C24739 + C24738 + C24737) * C50853 +
                    (C24740 + C24741 + C24742) * C50602) *
                       C50757 * C50660 * C1000 -
                   ((C24680 * C1076 + C25283 + C25283 + C24673 * C1084 +
                     C24678 * C282 + C25284 + C25284 + C50918 * C302 +
                     C24676 * C275 + C25285 + C25285 + C50917 * C295) *
                        C50602 +
                    (C25294 + C25293 + C25292) * C50853) *
                       C50757 * C50660 * C50696) *
                      C1004)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((C24676 * C119 + C24683 + C24683 + C50917 * C133 +
                    C24678 * C278 + C24684 + C24684 + C50918 * C298 +
                    C24680 * C279 + C24685 + C24685 + C24673 * C299) *
                       C50853 +
                   (C24734 + C24735 + C24736) * C50602) *
                      C50757 * C50660 * C1071 -
                  ((C24931 + C24932 + C24933) * C50602 +
                   (C24680 * C1079 + C24898 + C24898 + C24673 * C1087 +
                    C24678 * C279 + C24899 + C24899 + C50918 * C299 +
                    C24676 * C278 + C24900 + C24900 + C50917 * C298) *
                       C50853) *
                      C50757 * C50660 * C1072 +
                  ((C24676 * C279 + C24901 + C24901 + C50917 * C299 +
                    C24678 * C1079 + C24902 + C24902 + C50918 * C1087 +
                    C24680 * C2481 + C24903 + C24903 + C24673 * C2487) *
                       C50853 +
                   (C24934 + C24935 + C24936) * C50602) *
                      C50757 * C50660 * C1073 -
                  ((C24680 * C3540 + C25921 + C25921 + C24673 * C3544 +
                    C24678 * C2482 + C25922 + C25922 + C50918 * C2488 +
                    C24676 * C1078 + C25923 + C25923 + C50917 * C1086) *
                       C50602 +
                   (C24680 * C3541 + C25924 + C25924 + C24673 * C3545 +
                    C24678 * C2481 + C25925 + C25925 + C50918 * C2487 +
                    C24676 * C1079 + C25926 + C25926 + C50917 * C1087) *
                       C50853) *
                      C50757 * C50660 * C1074) *
                 C50625) /
                    (p * q * std::sqrt(p + q));
    d2ee[85] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C24676 * C119 + C24683 + C24683 + C50917 * C133 +
                      C24678 * C278 + C24684 + C24684 + C50918 * C298 +
                      C24680 * C279 + C24685 + C24685 + C24673 * C299) *
                         C50853 +
                     (C24734 + C24735 + C24736) * C50602) *
                        C50757 * C1651 -
                    ((C25125 + C25126 + C25127) * C50602 +
                     (C24680 * C1540 + C25092 + C25092 + C24673 * C1548 +
                      C24678 * C867 + C25093 + C25093 + C50918 * C877 +
                      C24676 * C449 + C25094 + C25094 + C50917 * C469) *
                         C50853) *
                        C50757 * C50724) *
                       C50868 +
                   (((C24676 * C867 + C25653 + C25653 + C50917 * C877 +
                      C24678 * C1540 + C25654 + C25654 + C50918 * C1548 +
                      C24680 * C3263 + C25655 + C25655 + C24673 * C3269) *
                         C50853 +
                     (C25674 + C25675 + C25676) * C50602) *
                        C50757 * C50724 -
                    ((C24931 + C24932 + C24933) * C50602 +
                     (C24680 * C1079 + C24898 + C24898 + C24673 * C1087 +
                      C24678 * C279 + C24899 + C24899 + C50918 * C299 +
                      C24676 * C278 + C24900 + C24900 + C50917 * C298) *
                         C50853) *
                        C50757 * C1651) *
                       C50696) *
                      C50860 +
                  ((((C25127 + C25126 + C25125) * C50853 +
                     (C25456 + C25457 + C25458) * C50602) *
                        C50757 * C50724 -
                    ((C24737 + C24738 + C24739) * C50602 +
                     (C24736 + C24735 + C24734) * C50853) *
                        C50757 * C1651) *
                       C50868 +
                   (((C24933 + C24932 + C24931) * C50853 +
                     (C25292 + C25293 + C25294) * C50602) *
                        C50757 * C1651 -
                    ((C24680 * C3265 + C25665 + C25665 + C24673 * C3271 +
                      C24678 * C1538 + C25666 + C25666 + C50918 * C1546 +
                      C24676 * C869 + C25667 + C25667 + C50917 * C879) *
                         C50602 +
                     (C25676 + C25675 + C25674) * C50853) *
                        C50757 * C50724) *
                       C50696) *
                      C50631)) /
                (p * q * std::sqrt(p + q));
    d2ee[86] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C24676 * C119 + C24683 + C24683 + C50917 * C133 +
                     C24678 * C278 + C24684 + C24684 + C50918 * C298 +
                     C24680 * C279 + C24685 + C24685 + C24673 * C299) *
                        C50853 +
                    (C24734 + C24735 + C24736) * C50602) *
                       C50757 * C50915 -
                   ((C25125 + C25126 + C25127) * C50602 +
                    (C24680 * C1540 + C25092 + C25092 + C24673 * C1548 +
                     C24678 * C867 + C25093 + C25093 + C50918 * C877 +
                     C24676 * C449 + C25094 + C25094 + C50917 * C469) *
                        C50853) *
                       C50757 * C50916 +
                   ((C24676 * C450 + C25095 + C25095 + C50917 * C470 +
                     C24678 * C1193 + C25096 + C25096 + C50918 * C1201 +
                     C24680 * C2684 + C25097 + C25097 + C24673 * C2690) *
                        C50853 +
                    (C25128 + C25129 + C25130) * C50602) *
                       C50757 * C2067) *
                      C50868 +
                  (((C24676 * C867 + C25653 + C25653 + C50917 * C877 +
                     C24678 * C1540 + C25654 + C25654 + C50918 * C1548 +
                     C24680 * C3263 + C25655 + C25655 + C24673 * C3269) *
                        C50853 +
                    (C25674 + C25675 + C25676) * C50602) *
                       C50757 * C50916 -
                   ((C24931 + C24932 + C24933) * C50602 +
                    (C24680 * C1079 + C24898 + C24898 + C24673 * C1087 +
                     C24678 * C279 + C24899 + C24899 + C50918 * C299 +
                     C24676 * C278 + C24900 + C24900 + C50917 * C298) *
                        C50853) *
                       C50757 * C50915 -
                   ((C24680 * C3698 + C26073 + C26073 + C24673 * C3702 +
                     C24678 * C2685 + C26074 + C26074 + C50918 * C2691 +
                     C24676 * C1192 + C26075 + C26075 + C50917 * C1200) *
                        C50602 +
                    (C24680 * C3699 + C26076 + C26076 + C24673 * C3703 +
                     C24678 * C2684 + C26077 + C26077 + C50918 * C2690 +
                     C24676 * C1193 + C26078 + C26078 + C50917 * C1201) *
                        C50853) *
                       C50757 * C2067) *
                      C50696) *
                 C50625) /
                (p * q * std::sqrt(p + q));
    d2ee[87] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C24676 * C119 + C24683 + C24683 + C50917 * C133 +
                     C24678 * C278 + C24684 + C24684 + C50918 * C298 +
                     C24680 * C279 + C24685 + C24685 + C24673 * C299) *
                        C50853 +
                    (C24734 + C24735 + C24736) * C50602) *
                       C50757 * C1651 -
                   ((C25125 + C25126 + C25127) * C50602 +
                    (C24680 * C1540 + C25092 + C25092 + C24673 * C1548 +
                     C24678 * C867 + C25093 + C25093 + C50918 * C877 +
                     C24676 * C449 + C25094 + C25094 + C50917 * C469) *
                        C50853) *
                       C50757 * C50724) *
                      C270 +
                  (((C24676 * C867 + C25653 + C25653 + C50917 * C877 +
                     C24678 * C1540 + C25654 + C25654 + C50918 * C1548 +
                     C24680 * C3263 + C25655 + C25655 + C24673 * C3269) *
                        C50853 +
                    (C25674 + C25675 + C25676) * C50602) *
                       C50757 * C50724 -
                   ((C24931 + C24932 + C24933) * C50602 +
                    (C24680 * C1079 + C24898 + C24898 + C24673 * C1087 +
                     C24678 * C279 + C24899 + C24899 + C50918 * C299 +
                     C24676 * C278 + C24900 + C24900 + C50917 * C298) *
                        C50853) *
                       C50757 * C1651) *
                      C271 +
                  (((C24676 * C279 + C24901 + C24901 + C50917 * C299 +
                     C24678 * C1079 + C24902 + C24902 + C50918 * C1087 +
                     C24680 * C2481 + C24903 + C24903 + C24673 * C2487) *
                        C50853 +
                    (C24934 + C24935 + C24936) * C50602) *
                       C50757 * C1651 -
                   ((C24680 * C4196 + C26565 + C26565 + C24673 * C4200 +
                     C24678 * C3264 + C26566 + C26566 + C50918 * C3270 +
                     C24676 * C1539 + C26567 + C26567 + C50917 * C1547) *
                        C50602 +
                    (C24680 * C4197 + C26568 + C26568 + C24673 * C4201 +
                     C24678 * C3263 + C26569 + C26569 + C50918 * C3269 +
                     C24676 * C1540 + C26570 + C26570 + C50917 * C1548) *
                        C50853) *
                       C50757 * C50724) *
                      C272) *
                 C50625) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C24676 * C119 + C24683 + C24683 + C50917 * C133 +
                     C24678 * C278 + C24684 + C24684 + C50918 * C298 +
                     C24680 * C279 + C24685 + C24685 + C24673 * C299) *
                        C50853 +
                    (C24734 + C24735 + C24736) * C50602) *
                       C50757 * C1651 -
                   ((C25125 + C25126 + C25127) * C50602 +
                    (C24680 * C1540 + C25092 + C25092 + C24673 * C1548 +
                     C24678 * C867 + C25093 + C25093 + C50918 * C877 +
                     C24676 * C449 + C25094 + C25094 + C50917 * C469) *
                        C50853) *
                       C50757 * C50724) *
                      C50644 * C1002 +
                  (((C25127 + C25126 + C25125) * C50853 +
                    (C25456 + C25457 + C25458) * C50602) *
                       C50757 * C50724 -
                   ((C24737 + C24738 + C24739) * C50602 +
                    (C24736 + C24735 + C24734) * C50853) *
                       C50757 * C1651) *
                      C50644 * C1003 +
                  (((C24739 + C24738 + C24737) * C50853 +
                    (C24740 + C24741 + C24742) * C50602) *
                       C50757 * C1651 -
                   ((C24680 * C1537 + C25447 + C25447 + C24673 * C1545 +
                     C24678 * C870 + C25448 + C25448 + C50918 * C880 +
                     C24676 * C446 + C25449 + C25449 + C50917 * C466) *
                        C50602 +
                    (C25458 + C25457 + C25456) * C50853) *
                       C50757 * C50724) *
                      C50644 * C1004)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((C24676 * C119 + C24683 + C24683 + C50917 * C133 +
                    C24678 * C278 + C24684 + C24684 + C50918 * C298 +
                    C24680 * C279 + C24685 + C24685 + C24673 * C299) *
                       C50853 +
                   (C24734 + C24735 + C24736) * C50602) *
                      C50757 * C1817 -
                  ((C25125 + C25126 + C25127) * C50602 +
                   (C24680 * C1540 + C25092 + C25092 + C24673 * C1548 +
                    C24678 * C867 + C25093 + C25093 + C50918 * C877 +
                    C24676 * C449 + C25094 + C25094 + C50917 * C469) *
                       C50853) *
                      C50757 * C1818 +
                  ((C24676 * C450 + C25095 + C25095 + C50917 * C470 +
                    C24678 * C1193 + C25096 + C25096 + C50918 * C1201 +
                    C24680 * C2684 + C25097 + C25097 + C24673 * C2690) *
                       C50853 +
                   (C25128 + C25129 + C25130) * C50602) *
                      C50757 * C1819 -
                  ((C24680 * C4598 + C26961 + C26961 + C24673 * C4606 +
                    C24678 * C4599 + C26962 + C26962 + C50918 * C4607 +
                    C24676 * C1823 + C26963 + C26963 + C50917 * C1831) *
                       C50602 +
                   (C24680 * C4600 + C26964 + C26964 + C24673 * C4608 +
                    C24678 * C4601 + C26965 + C26965 + C50918 * C4609 +
                    C24676 * C1824 + C26966 + C26966 + C50917 * C1832) *
                       C50853) *
                      C50757 * C1820) *
                 C50644 * C50625) /
                    (p * q * std::sqrt(p + q));
    d2ee[88] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C24676 * C119 + C24683 + C24683 + C50917 * C133 +
                     C24678 * C278 + C24684 + C24684 + C50918 * C298 +
                     C24680 * C279 + C24685 + C24685 + C24673 * C299) *
                        C50853 +
                    (C24734 + C24735 + C24736) * C50602) *
                       C50757 * C50915 -
                   ((C25125 + C25126 + C25127) * C50602 +
                    (C24680 * C1540 + C25092 + C25092 + C24673 * C1548 +
                     C24678 * C867 + C25093 + C25093 + C50918 * C877 +
                     C24676 * C449 + C25094 + C25094 + C50917 * C469) *
                        C50853) *
                       C50757 * C50916 +
                   ((C24676 * C450 + C25095 + C25095 + C50917 * C470 +
                     C24678 * C1193 + C25096 + C25096 + C50918 * C1201 +
                     C24680 * C2684 + C25097 + C25097 + C24673 * C2690) *
                        C50853 +
                    (C25128 + C25129 + C25130) * C50602) *
                       C50757 * C2067) *
                      C50644 * C50860 +
                  (((C25127 + C25126 + C25125) * C50853 +
                    (C25456 + C25457 + C25458) * C50602) *
                       C50757 * C50916 -
                   ((C24737 + C24738 + C24739) * C50602 +
                    (C24736 + C24735 + C24734) * C50853) *
                       C50757 * C50915 -
                   ((C24680 * C2686 + C25110 + C25110 + C24673 * C2692 +
                     C24678 * C1191 + C25111 + C25111 + C50918 * C1199 +
                     C24676 * C452 + C25112 + C25112 + C50917 * C472) *
                        C50602 +
                    (C25130 + C25129 + C25128) * C50853) *
                       C50757 * C2067) *
                      C50644 * C50631)) /
                (p * q * std::sqrt(p + q));
    d2ee[89] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C24676 * C119 + C24683 + C24683 + C50917 * C133 +
                     C24678 * C278 + C24684 + C24684 + C50918 * C298 +
                     C24680 * C279 + C24685 + C24685 + C24673 * C299) *
                        C50853 +
                    (C24734 + C24735 + C24736) * C50602) *
                       C50757 * C1651 -
                   ((C25125 + C25126 + C25127) * C50602 +
                    (C24680 * C1540 + C25092 + C25092 + C24673 * C1548 +
                     C24678 * C867 + C25093 + C25093 + C50918 * C877 +
                     C24676 * C449 + C25094 + C25094 + C50917 * C469) *
                        C50853) *
                       C50757 * C50724) *
                      C50644 * C1002 +
                  (((C25127 + C25126 + C25125) * C50853 +
                    (C25456 + C25457 + C25458) * C50602) *
                       C50757 * C50724 -
                   ((C24737 + C24738 + C24739) * C50602 +
                    (C24736 + C24735 + C24734) * C50853) *
                       C50757 * C1651) *
                      C50644 * C1003 +
                  (((C24739 + C24738 + C24737) * C50853 +
                    (C24740 + C24741 + C24742) * C50602) *
                       C50757 * C1651 -
                   ((C24680 * C1537 + C25447 + C25447 + C24673 * C1545 +
                     C24678 * C870 + C25448 + C25448 + C50918 * C880 +
                     C24676 * C446 + C25449 + C25449 + C50917 * C466) *
                        C50602 +
                    (C25458 + C25457 + C25456) * C50853) *
                       C50757 * C50724) *
                      C50644 * C1004)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C24676 * C119 + C24683 + C24683 + C50917 * C133 +
                     C24678 * C278 + C24684 + C24684 + C50918 * C298 +
                     C24680 * C279 + C24685 + C24685 + C24673 * C299) *
                        C50853 +
                    (C24734 + C24735 + C24736) * C50602) *
                       C50757 * C1651 -
                   ((C25125 + C25126 + C25127) * C50602 +
                    (C24680 * C1540 + C25092 + C25092 + C24673 * C1548 +
                     C24678 * C867 + C25093 + C25093 + C50918 * C877 +
                     C24676 * C449 + C25094 + C25094 + C50917 * C469) *
                        C50853) *
                       C50757 * C50724) *
                      C270 +
                  (((C24676 * C867 + C25653 + C25653 + C50917 * C877 +
                     C24678 * C1540 + C25654 + C25654 + C50918 * C1548 +
                     C24680 * C3263 + C25655 + C25655 + C24673 * C3269) *
                        C50853 +
                    (C25674 + C25675 + C25676) * C50602) *
                       C50757 * C50724 -
                   ((C24931 + C24932 + C24933) * C50602 +
                    (C24680 * C1079 + C24898 + C24898 + C24673 * C1087 +
                     C24678 * C279 + C24899 + C24899 + C50918 * C299 +
                     C24676 * C278 + C24900 + C24900 + C50917 * C298) *
                        C50853) *
                       C50757 * C1651) *
                      C271 +
                  (((C24676 * C279 + C24901 + C24901 + C50917 * C299 +
                     C24678 * C1079 + C24902 + C24902 + C50918 * C1087 +
                     C24680 * C2481 + C24903 + C24903 + C24673 * C2487) *
                        C50853 +
                    (C24934 + C24935 + C24936) * C50602) *
                       C50757 * C1651 -
                   ((C24680 * C4196 + C26565 + C26565 + C24673 * C4200 +
                     C24678 * C3264 + C26566 + C26566 + C50918 * C3270 +
                     C24676 * C1539 + C26567 + C26567 + C50917 * C1547) *
                        C50602 +
                    (C24680 * C4197 + C26568 + C26568 + C24673 * C4201 +
                     C24678 * C3263 + C26569 + C26569 + C50918 * C3269 +
                     C24676 * C1540 + C26570 + C26570 + C50917 * C1548) *
                        C50853) *
                       C50757 * C50724) *
                      C272) *
                 C50625) /
                    (p * q * std::sqrt(p + q));
    d2ee[90] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C24676 * C119 + C24683 + C24683 + C50917 * C133 +
                     C24678 * C278 + C24684 + C24684 + C50918 * C298 +
                     C24680 * C279 + C24685 + C24685 + C24673 * C299) *
                        C50597 * C50882 +
                    (C31377 + C31378 + C31379) * C50597 * C50821) *
                       C50660 * C50868 -
                   ((C24680 * C3263 + C25655 + C25655 + C24673 * C3269 +
                     C24678 * C1540 + C25654 + C25654 + C50918 * C1548 +
                     C24676 * C867 + C25653 + C25653 + C50917 * C877) *
                        C50597 * C50821 +
                    (C24680 * C1079 + C24898 + C24898 + C24673 * C1087 +
                     C24678 * C279 + C24899 + C24899 + C50918 * C299 +
                     C24676 * C278 + C24900 + C24900 + C50917 * C298) *
                        C50597 * C50882) *
                       C50660 * C50696) *
                      C50911 +
                  (((C24933 + C24932 + C24931) * C50597 * C50882 +
                    (C25674 + C25675 + C25676) * C50597 * C50821) *
                       C50660 * C50696 -
                   ((C25125 + C25126 + C25127) * C50597 * C50821 +
                    (C24736 + C24735 + C24734) * C50597 * C50882) *
                       C50660 * C50868) *
                      C50912 +
                  (((C24739 + C24738 + C24737) * C50597 * C50882 +
                    (C25456 + C25457 + C25458) * C50597 * C50821) *
                       C50660 * C50868 -
                   ((C24680 * C3265 + C25665 + C25665 + C24673 * C3271 +
                     C24678 * C1538 + C25666 + C25666 + C50918 * C1546 +
                     C24676 * C869 + C25667 + C25667 + C50917 * C879) *
                        C50597 * C50821 +
                    (C25294 + C25293 + C25292) * C50597 * C50882) *
                       C50660 * C50696) *
                      C618)) /
                (p * q * std::sqrt(p + q));
    d2ee[91] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C24676 * C119 + C24683 + C24683 + C50917 * C133 +
                      C24678 * C278 + C24684 + C24684 + C50918 * C298 +
                      C24680 * C279 + C24685 + C24685 + C24673 * C299) *
                         C50597 * C50882 +
                     (C31377 + C31378 + C31379) * C50597 * C50821) *
                        C50869 -
                    ((C31380 + C31381 + C31382) * C50597 * C50821 +
                     (C31379 + C31378 + C31377) * C50597 * C50882) *
                        C50724) *
                       C50868 +
                   (((C31881 + C31882 + C31883) * C50597 * C50882 +
                     (C24676 * C1193 + C26078 + C26078 + C50917 * C1201 +
                      C24678 * C2684 + C26077 + C26077 + C50918 * C2690 +
                      C24680 * C3699 + C26076 + C26076 + C24673 * C3703) *
                         C50597 * C50821) *
                        C50724 -
                    ((C31883 + C31882 + C31881) * C50597 * C50821 +
                     (C24680 * C1079 + C24898 + C24898 + C24673 * C1087 +
                      C24678 * C279 + C24899 + C24899 + C50918 * C299 +
                      C24676 * C278 + C24900 + C24900 + C50917 * C298) *
                         C50597 * C50882) *
                        C50869) *
                       C50696) *
                      C273 +
                  ((((C25127 + C25126 + C25125) * C50597 * C50882 +
                     (C25128 + C25129 + C25130) * C50597 * C50821) *
                        C50724 -
                    ((C25125 + C25126 + C25127) * C50597 * C50821 +
                     (C24736 + C24735 + C24734) * C50597 * C50882) *
                        C50869) *
                       C50868 +
                   (((C24933 + C24932 + C24931) * C50597 * C50882 +
                     (C25674 + C25675 + C25676) * C50597 * C50821) *
                        C50869 -
                    ((C24680 * C3698 + C26073 + C26073 + C24673 * C3702 +
                      C24678 * C2685 + C26074 + C26074 + C50918 * C2691 +
                      C24676 * C1192 + C26075 + C26075 + C50917 * C1200) *
                         C50597 * C50821 +
                     (C25676 + C25675 + C25674) * C50597 * C50882) *
                        C50724) *
                       C50696) *
                      C50631)) /
                (p * q * std::sqrt(p + q));
    d2ee[92] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C24676 * C119 + C24683 + C24683 + C50917 * C133 +
                     C24678 * C278 + C24684 + C24684 + C50918 * C298 +
                     C24680 * C279 + C24685 + C24685 + C24673 * C299) *
                        C50597 * C50882 +
                    (C24676 * C449 + C25094 + C25094 + C50917 * C469 +
                     C24678 * C867 + C25093 + C25093 + C50918 * C877 +
                     C24680 * C1540 + C25092 + C25092 + C24673 * C1548) *
                        C50597 * C50821) *
                       C50660 * C270 -
                   ((C24680 * C3263 + C25655 + C25655 + C24673 * C3269 +
                     C24678 * C1540 + C25654 + C25654 + C50918 * C1548 +
                     C24676 * C867 + C25653 + C25653 + C50917 * C877) *
                        C50597 * C50821 +
                    (C24680 * C1079 + C24898 + C24898 + C24673 * C1087 +
                     C24678 * C279 + C24899 + C24899 + C50918 * C299 +
                     C24676 * C278 + C24900 + C24900 + C50917 * C298) *
                        C50597 * C50882) *
                       C50660 * C271 +
                   ((C24676 * C279 + C24901 + C24901 + C50917 * C299 +
                     C24678 * C1079 + C24902 + C24902 + C50918 * C1087 +
                     C24680 * C2481 + C24903 + C24903 + C24673 * C2487) *
                        C50597 * C50882 +
                    (C24676 * C1540 + C26570 + C26570 + C50917 * C1548 +
                     C24678 * C3263 + C26569 + C26569 + C50918 * C3269 +
                     C24680 * C4197 + C26568 + C26568 + C24673 * C4201) *
                        C50597 * C50821) *
                       C50660 * C272) *
                      C273 +
                  (((C24933 + C24932 + C24931) * C50597 * C50882 +
                    (C25674 + C25675 + C25676) * C50597 * C50821) *
                       C50660 * C271 -
                   ((C25125 + C25126 + C25127) * C50597 * C50821 +
                    (C24736 + C24735 + C24734) * C50597 * C50882) *
                       C50660 * C270 -
                   ((C24680 * C4196 + C26565 + C26565 + C24673 * C4200 +
                     C24678 * C3264 + C26566 + C26566 + C50918 * C3270 +
                     C24676 * C1539 + C26567 + C26567 + C50917 * C1547) *
                        C50597 * C50821 +
                    (C24936 + C24935 + C24934) * C50597 * C50882) *
                       C50660 * C272) *
                      C50631)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((C24676 * C119 + C24683 + C24683 + C50917 * C133 +
                    C24678 * C278 + C24684 + C24684 + C50918 * C298 +
                    C24680 * C279 + C24685 + C24685 + C24673 * C299) *
                       C50597 * C50882 +
                   (C24676 * C449 + C25094 + C25094 + C50917 * C469 +
                    C24678 * C867 + C25093 + C25093 + C50918 * C877 +
                    C24680 * C1540 + C25092 + C25092 + C24673 * C1548) *
                       C50597 * C50821) *
                      C50660 * C50644 * C113 -
                  ((C25125 + C25126 + C25127) * C50597 * C50821 +
                   (C24736 + C24735 + C24734) * C50597 * C50882) *
                      C50660 * C50644 * C114 +
                  ((C24739 + C24738 + C24737) * C50597 * C50882 +
                   (C25456 + C25457 + C25458) * C50597 * C50821) *
                      C50660 * C50644 * C115 -
                  ((C24680 * C1537 + C25447 + C25447 + C24673 * C1545 +
                    C24678 * C870 + C25448 + C25448 + C50918 * C880 +
                    C24676 * C446 + C25449 + C25449 + C50917 * C466) *
                       C50597 * C50821 +
                   (C24742 + C24741 + C24740) * C50597 * C50882) *
                      C50660 * C50644 * C116)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C24676 * C119 + C24683 + C24683 + C50917 * C133 +
                     C24678 * C278 + C24684 + C24684 + C50918 * C298 +
                     C24680 * C279 + C24685 + C24685 + C24673 * C299) *
                        C50597 * C50882 +
                    (C31377 + C31378 + C31379) * C50597 * C50821) *
                       C443 -
                   ((C31380 + C31381 + C31382) * C50597 * C50821 +
                    (C31379 + C31378 + C31377) * C50597 * C50882) *
                       C444 +
                   ((C31382 + C31381 + C31380) * C50597 * C50882 +
                    (C24676 * C1824 + C26966 + C26966 + C50917 * C1832 +
                     C24678 * C4601 + C26965 + C26965 + C50918 * C4609 +
                     C24680 * C4600 + C26964 + C26964 + C24673 * C4608) *
                        C50597 * C50821) *
                       C445) *
                      C50644 * C273 +
                  (((C25127 + C25126 + C25125) * C50597 * C50882 +
                    (C25128 + C25129 + C25130) * C50597 * C50821) *
                       C444 -
                   ((C25125 + C25126 + C25127) * C50597 * C50821 +
                    (C24736 + C24735 + C24734) * C50597 * C50882) *
                       C443 -
                   ((C24680 * C4598 + C26961 + C26961 + C24673 * C4606 +
                     C24678 * C4599 + C26962 + C26962 + C50918 * C4607 +
                     C24676 * C1823 + C26963 + C26963 + C50917 * C1831) *
                        C50597 * C50821 +
                    (C25130 + C25129 + C25128) * C50597 * C50882) *
                       C445) *
                      C50644 * C50631)) /
                    (p * q * std::sqrt(p + q));
    d2ee[93] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C24676 * C119 + C24683 + C24683 + C50917 * C133 +
                     C24678 * C278 + C24684 + C24684 + C50918 * C298 +
                     C24680 * C279 + C24685 + C24685 + C24673 * C299) *
                        C50597 * C50882 +
                    (C31377 + C31378 + C31379) * C50597 * C50821) *
                       C50869 -
                   ((C31380 + C31381 + C31382) * C50597 * C50821 +
                    (C31379 + C31378 + C31377) * C50597 * C50882) *
                       C50724) *
                      C50644 * C50911 +
                  (((C25127 + C25126 + C25125) * C50597 * C50882 +
                    (C25128 + C25129 + C25130) * C50597 * C50821) *
                       C50724 -
                   ((C25125 + C25126 + C25127) * C50597 * C50821 +
                    (C24736 + C24735 + C24734) * C50597 * C50882) *
                       C50869) *
                      C50644 * C50912 +
                  (((C24739 + C24738 + C24737) * C50597 * C50882 +
                    (C25456 + C25457 + C25458) * C50597 * C50821) *
                       C50869 -
                   ((C24680 * C2686 + C25110 + C25110 + C24673 * C2692 +
                     C24678 * C1191 + C25111 + C25111 + C50918 * C1199 +
                     C24676 * C452 + C25112 + C25112 + C50917 * C472) *
                        C50597 * C50821 +
                    (C25458 + C25457 + C25456) * C50597 * C50882) *
                       C50724) *
                      C50644 * C618)) /
                (p * q * std::sqrt(p + q));
    d2ee[94] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((C24676 * C119 + C24683 + C24683 + C50917 * C133 +
                    C24678 * C278 + C24684 + C24684 + C50918 * C298 +
                    C24680 * C279 + C24685 + C24685 + C24673 * C299) *
                       C50597 * C50882 +
                   (C24676 * C449 + C25094 + C25094 + C50917 * C469 +
                    C24678 * C867 + C25093 + C25093 + C50918 * C877 +
                    C24680 * C1540 + C25092 + C25092 + C24673 * C1548) *
                       C50597 * C50821) *
                      C50660 * C50644 * C113 -
                  ((C25125 + C25126 + C25127) * C50597 * C50821 +
                   (C24736 + C24735 + C24734) * C50597 * C50882) *
                      C50660 * C50644 * C114 +
                  ((C24739 + C24738 + C24737) * C50597 * C50882 +
                   (C25456 + C25457 + C25458) * C50597 * C50821) *
                      C50660 * C50644 * C115 -
                  ((C24680 * C1537 + C25447 + C25447 + C24673 * C1545 +
                    C24678 * C870 + C25448 + C25448 + C50918 * C880 +
                    C24676 * C446 + C25449 + C25449 + C50917 * C466) *
                       C50597 * C50821 +
                   (C24742 + C24741 + C24740) * C50597 * C50882) *
                      C50660 * C50644 * C116)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C24676 * C119 + C24683 + C24683 + C50917 * C133 +
                     C24678 * C278 + C24684 + C24684 + C50918 * C298 +
                     C24680 * C279 + C24685 + C24685 + C24673 * C299) *
                        C50597 * C50882 +
                    (C24676 * C449 + C25094 + C25094 + C50917 * C469 +
                     C24678 * C867 + C25093 + C25093 + C50918 * C877 +
                     C24680 * C1540 + C25092 + C25092 + C24673 * C1548) *
                        C50597 * C50821) *
                       C50660 * C270 -
                   ((C24680 * C3263 + C25655 + C25655 + C24673 * C3269 +
                     C24678 * C1540 + C25654 + C25654 + C50918 * C1548 +
                     C24676 * C867 + C25653 + C25653 + C50917 * C877) *
                        C50597 * C50821 +
                    (C24680 * C1079 + C24898 + C24898 + C24673 * C1087 +
                     C24678 * C279 + C24899 + C24899 + C50918 * C299 +
                     C24676 * C278 + C24900 + C24900 + C50917 * C298) *
                        C50597 * C50882) *
                       C50660 * C271 +
                   ((C24676 * C279 + C24901 + C24901 + C50917 * C299 +
                     C24678 * C1079 + C24902 + C24902 + C50918 * C1087 +
                     C24680 * C2481 + C24903 + C24903 + C24673 * C2487) *
                        C50597 * C50882 +
                    (C24676 * C1540 + C26570 + C26570 + C50917 * C1548 +
                     C24678 * C3263 + C26569 + C26569 + C50918 * C3269 +
                     C24680 * C4197 + C26568 + C26568 + C24673 * C4201) *
                        C50597 * C50821) *
                       C50660 * C272) *
                      C273 +
                  (((C24933 + C24932 + C24931) * C50597 * C50882 +
                    (C25674 + C25675 + C25676) * C50597 * C50821) *
                       C50660 * C271 -
                   ((C25125 + C25126 + C25127) * C50597 * C50821 +
                    (C24736 + C24735 + C24734) * C50597 * C50882) *
                       C50660 * C270 -
                   ((C24680 * C4196 + C26565 + C26565 + C24673 * C4200 +
                     C24678 * C3264 + C26566 + C26566 + C50918 * C3270 +
                     C24676 * C1539 + C26567 + C26567 + C50917 * C1547) *
                        C50597 * C50821 +
                    (C24936 + C24935 + C24934) * C50597 * C50882) *
                       C50660 * C272) *
                      C50631)) /
                    (p * q * std::sqrt(p + q));
    d2ee[95] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C24676 * C119 + C24683 + C24683 + C50917 * C133 +
                     C24678 * C278 + C24684 + C24684 + C50918 * C298 +
                     C24680 * C279 + C24685 + C24685 + C24673 * C299) *
                        C50597 * C50882 +
                    (C31377 + C31378 + C31379) * C50597 * C50821) *
                       C50660 * C50913 -
                   ((C31883 + C31882 + C31881) * C50597 * C50821 +
                    (C24680 * C1079 + C24898 + C24898 + C24673 * C1087 +
                     C24678 * C279 + C24899 + C24899 + C50918 * C299 +
                     C24676 * C278 + C24900 + C24900 + C50917 * C298) *
                        C50597 * C50882) *
                       C50660 * C50914 +
                   ((C24676 * C279 + C24901 + C24901 + C50917 * C299 +
                     C24678 * C1079 + C24902 + C24902 + C50918 * C1087 +
                     C24680 * C2481 + C24903 + C24903 + C24673 * C2487) *
                        C50597 * C50882 +
                    (C24676 * C1540 + C26570 + C26570 + C50917 * C1548 +
                     C24678 * C3263 + C26569 + C26569 + C50918 * C3269 +
                     C24680 * C4197 + C26568 + C26568 + C24673 * C4201) *
                        C50597 * C50821) *
                       C50660 * C1306) *
                      C50860 +
                  (((C24933 + C24932 + C24931) * C50597 * C50882 +
                    (C25674 + C25675 + C25676) * C50597 * C50821) *
                       C50660 * C50914 -
                   ((C25125 + C25126 + C25127) * C50597 * C50821 +
                    (C24736 + C24735 + C24734) * C50597 * C50882) *
                       C50660 * C50913 -
                   ((C24680 * C4196 + C26565 + C26565 + C24673 * C4200 +
                     C24678 * C3264 + C26566 + C26566 + C50918 * C3270 +
                     C24676 * C1539 + C26567 + C26567 + C50917 * C1547) *
                        C50597 * C50821 +
                    (C24936 + C24935 + C24934) * C50597 * C50882) *
                       C50660 * C1306) *
                      C50631)) /
                (p * q * std::sqrt(p + q));
    d2ee[96] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C24676 * C119 + C24683 + C24683 + C50917 * C133 +
                     C24678 * C278 + C24684 + C24684 + C50918 * C298 +
                     C24680 * C279 + C24685 + C24685 + C24673 * C299) *
                        C50597 * C50882 +
                    (C31377 + C31378 + C31379) * C50597 * C50821) *
                       C50869 -
                   ((C31380 + C31381 + C31382) * C50597 * C50821 +
                    (C31379 + C31378 + C31377) * C50597 * C50882) *
                       C50724) *
                      C50913 +
                  (((C31881 + C31882 + C31883) * C50597 * C50882 +
                    (C32292 + C32293 + C32294) * C50597 * C50821) *
                       C50724 -
                   ((C31883 + C31882 + C31881) * C50597 * C50821 +
                    (C24680 * C1079 + C24898 + C24898 + C24673 * C1087 +
                     C24678 * C279 + C24899 + C24899 + C50918 * C299 +
                     C24676 * C278 + C24900 + C24900 + C50917 * C298) *
                        C50597 * C50882) *
                       C50869) *
                      C50914 +
                  (((C24676 * C279 + C24901 + C24901 + C50917 * C299 +
                     C24678 * C1079 + C24902 + C24902 + C50918 * C1087 +
                     C24680 * C2481 + C24903 + C24903 + C24673 * C2487) *
                        C50597 * C50882 +
                    (C32796 + C32797 + C32798) * C50597 * C50821) *
                       C50869 -
                   ((C24680 * C20864 + C32787 + C32787 + C24673 * C20866 +
                     C24678 * C3699 + C32788 + C32788 + C50918 * C3703 +
                     C24676 * C2684 + C32789 + C32789 + C50917 * C2690) *
                        C50597 * C50821 +
                    (C32798 + C32797 + C32796) * C50597 * C50882) *
                       C50724) *
                      C1306) *
                 C50625) /
                (p * q * std::sqrt(p + q));
    d2ee[97] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((C24676 * C119 + C24683 + C24683 + C50917 * C133 +
                    C24678 * C278 + C24684 + C24684 + C50918 * C298 +
                    C24680 * C279 + C24685 + C24685 + C24673 * C299) *
                       C50597 * C50882 +
                   (C31377 + C31378 + C31379) * C50597 * C50821) *
                      C50660 * C1071 -
                  ((C31883 + C31882 + C31881) * C50597 * C50821 +
                   (C24680 * C1079 + C24898 + C24898 + C24673 * C1087 +
                    C24678 * C279 + C24899 + C24899 + C50918 * C299 +
                    C24676 * C278 + C24900 + C24900 + C50917 * C298) *
                       C50597 * C50882) *
                      C50660 * C1072 +
                  ((C24676 * C279 + C24901 + C24901 + C50917 * C299 +
                    C24678 * C1079 + C24902 + C24902 + C50918 * C1087 +
                    C24680 * C2481 + C24903 + C24903 + C24673 * C2487) *
                       C50597 * C50882 +
                   (C24676 * C1540 + C26570 + C26570 + C50917 * C1548 +
                    C24678 * C3263 + C26569 + C26569 + C50918 * C3269 +
                    C24680 * C4197 + C26568 + C26568 + C24673 * C4201) *
                       C50597 * C50821) *
                      C50660 * C1073 -
                  ((C24680 * C21197 + C32128 + C32128 + C24673 * C21199 +
                    C24678 * C4197 + C32129 + C32129 + C50918 * C4201 +
                    C24676 * C3263 + C32130 + C32130 + C50917 * C3269) *
                       C50597 * C50821 +
                   (C24680 * C3541 + C25924 + C25924 + C24673 * C3545 +
                    C24678 * C2481 + C25925 + C25925 + C50918 * C2487 +
                    C24676 * C1079 + C25926 + C25926 + C50917 * C1087) *
                       C50597 * C50882) *
                      C50660 * C1074) *
                 C50625) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C24676 * C119 + C24683 + C24683 + C50917 * C133 +
                     C24678 * C278 + C24684 + C24684 + C50918 * C298 +
                     C24680 * C279 + C24685 + C24685 + C24673 * C299) *
                        C50597 * C50882 +
                    (C31377 + C31378 + C31379) * C50597 * C50821) *
                       C50660 * C1000 -
                   ((C31883 + C31882 + C31881) * C50597 * C50821 +
                    (C24680 * C1079 + C24898 + C24898 + C24673 * C1087 +
                     C24678 * C279 + C24899 + C24899 + C50918 * C299 +
                     C24676 * C278 + C24900 + C24900 + C50917 * C298) *
                        C50597 * C50882) *
                       C50660 * C50696) *
                      C1002 +
                  (((C24933 + C24932 + C24931) * C50597 * C50882 +
                    (C25674 + C25675 + C25676) * C50597 * C50821) *
                       C50660 * C50696 -
                   ((C25125 + C25126 + C25127) * C50597 * C50821 +
                    (C24736 + C24735 + C24734) * C50597 * C50882) *
                       C50660 * C1000) *
                      C1003 +
                  (((C24739 + C24738 + C24737) * C50597 * C50882 +
                    (C25456 + C25457 + C25458) * C50597 * C50821) *
                       C50660 * C1000 -
                   ((C24680 * C3265 + C25665 + C25665 + C24673 * C3271 +
                     C24678 * C1538 + C25666 + C25666 + C50918 * C1546 +
                     C24676 * C869 + C25667 + C25667 + C50917 * C879) *
                        C50597 * C50821 +
                    (C25294 + C25293 + C25292) * C50597 * C50882) *
                       C50660 * C50696) *
                      C1004)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C24676 * C119 + C24683 + C24683 + C50917 * C133 +
                     C24678 * C278 + C24684 + C24684 + C50918 * C298 +
                     C24680 * C279 + C24685 + C24685 + C24673 * C299) *
                        C50597 * C50882 +
                    (C31377 + C31378 + C31379) * C50597 * C50821) *
                       C443 -
                   ((C31380 + C31381 + C31382) * C50597 * C50821 +
                    (C31379 + C31378 + C31377) * C50597 * C50882) *
                       C444 +
                   ((C31382 + C31381 + C31380) * C50597 * C50882 +
                    (C24676 * C1824 + C26966 + C26966 + C50917 * C1832 +
                     C24678 * C4601 + C26965 + C26965 + C50918 * C4609 +
                     C24680 * C4600 + C26964 + C26964 + C24673 * C4608) *
                        C50597 * C50821) *
                       C445) *
                      C1000 +
                  (((C31881 + C31882 + C31883) * C50597 * C50882 +
                    (C32292 + C32293 + C32294) * C50597 * C50821) *
                       C444 -
                   ((C31883 + C31882 + C31881) * C50597 * C50821 +
                    (C24680 * C1079 + C24898 + C24898 + C24673 * C1087 +
                     C24678 * C279 + C24899 + C24899 + C50918 * C299 +
                     C24676 * C278 + C24900 + C24900 + C50917 * C298) *
                        C50597 * C50882) *
                       C443 -
                   ((C24680 * C21466 + C32283 + C32283 + C24673 * C21468 +
                     C24678 * C4600 + C32284 + C32284 + C50918 * C4608 +
                     C24676 * C4601 + C32285 + C32285 + C50917 * C4609) *
                        C50597 * C50821 +
                    (C32294 + C32293 + C32292) * C50597 * C50882) *
                       C445) *
                      C50696) *
                 C50625) /
                    (p * q * std::sqrt(p + q));
    d2ee[98] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C24676 * C119 + C24683 + C24683 + C50917 * C133 +
                      C24678 * C278 + C24684 + C24684 + C50918 * C298 +
                      C24680 * C279 + C24685 + C24685 + C24673 * C299) *
                         C50597 * C50882 +
                     (C31377 + C31378 + C31379) * C50597 * C50821) *
                        C50869 -
                    ((C31380 + C31381 + C31382) * C50597 * C50821 +
                     (C31379 + C31378 + C31377) * C50597 * C50882) *
                        C50724) *
                       C1000 +
                   (((C31881 + C31882 + C31883) * C50597 * C50882 +
                     (C32292 + C32293 + C32294) * C50597 * C50821) *
                        C50724 -
                    ((C31883 + C31882 + C31881) * C50597 * C50821 +
                     (C24680 * C1079 + C24898 + C24898 + C24673 * C1087 +
                      C24678 * C279 + C24899 + C24899 + C50918 * C299 +
                      C24676 * C278 + C24900 + C24900 + C50917 * C298) *
                         C50597 * C50882) *
                        C50869) *
                       C50696) *
                      C50860 +
                  ((((C25127 + C25126 + C25125) * C50597 * C50882 +
                     (C25128 + C25129 + C25130) * C50597 * C50821) *
                        C50724 -
                    ((C25125 + C25126 + C25127) * C50597 * C50821 +
                     (C24736 + C24735 + C24734) * C50597 * C50882) *
                        C50869) *
                       C1000 +
                   (((C24933 + C24932 + C24931) * C50597 * C50882 +
                     (C25674 + C25675 + C25676) * C50597 * C50821) *
                        C50869 -
                    ((C24680 * C3698 + C26073 + C26073 + C24673 * C3702 +
                      C24678 * C2685 + C26074 + C26074 + C50918 * C2691 +
                      C24676 * C1192 + C26075 + C26075 + C50917 * C1200) *
                         C50597 * C50821 +
                     (C25676 + C25675 + C25674) * C50597 * C50882) *
                        C50724) *
                       C50696) *
                      C50631)) /
                (p * q * std::sqrt(p + q));
    d2ee[99] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C24676 * C119 + C24683 + C24683 + C50917 * C133 +
                     C24678 * C278 + C24684 + C24684 + C50918 * C298 +
                     C24680 * C279 + C24685 + C24685 + C24673 * C299) *
                        C50597 * C50882 +
                    (C31377 + C31378 + C31379) * C50597 * C50821) *
                       C50660 * C1000 -
                   ((C31883 + C31882 + C31881) * C50597 * C50821 +
                    (C24680 * C1079 + C24898 + C24898 + C24673 * C1087 +
                     C24678 * C279 + C24899 + C24899 + C50918 * C299 +
                     C24676 * C278 + C24900 + C24900 + C50917 * C298) *
                        C50597 * C50882) *
                       C50660 * C50696) *
                      C1002 +
                  (((C24933 + C24932 + C24931) * C50597 * C50882 +
                    (C25674 + C25675 + C25676) * C50597 * C50821) *
                       C50660 * C50696 -
                   ((C25125 + C25126 + C25127) * C50597 * C50821 +
                    (C24736 + C24735 + C24734) * C50597 * C50882) *
                       C50660 * C1000) *
                      C1003 +
                  (((C24739 + C24738 + C24737) * C50597 * C50882 +
                    (C25456 + C25457 + C25458) * C50597 * C50821) *
                       C50660 * C1000 -
                   ((C24680 * C3265 + C25665 + C25665 + C24673 * C3271 +
                     C24678 * C1538 + C25666 + C25666 + C50918 * C1546 +
                     C24676 * C869 + C25667 + C25667 + C50917 * C879) *
                        C50597 * C50821 +
                    (C25294 + C25293 + C25292) * C50597 * C50882) *
                       C50660 * C50696) *
                      C1004)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((C24676 * C119 + C24683 + C24683 + C50917 * C133 +
                    C24678 * C278 + C24684 + C24684 + C50918 * C298 +
                    C24680 * C279 + C24685 + C24685 + C24673 * C299) *
                       C50597 * C50882 +
                   (C31377 + C31378 + C31379) * C50597 * C50821) *
                      C50660 * C1071 -
                  ((C31883 + C31882 + C31881) * C50597 * C50821 +
                   (C24680 * C1079 + C24898 + C24898 + C24673 * C1087 +
                    C24678 * C279 + C24899 + C24899 + C50918 * C299 +
                    C24676 * C278 + C24900 + C24900 + C50917 * C298) *
                       C50597 * C50882) *
                      C50660 * C1072 +
                  ((C24676 * C279 + C24901 + C24901 + C50917 * C299 +
                    C24678 * C1079 + C24902 + C24902 + C50918 * C1087 +
                    C24680 * C2481 + C24903 + C24903 + C24673 * C2487) *
                       C50597 * C50882 +
                   (C24676 * C1540 + C26570 + C26570 + C50917 * C1548 +
                    C24678 * C3263 + C26569 + C26569 + C50918 * C3269 +
                    C24680 * C4197 + C26568 + C26568 + C24673 * C4201) *
                       C50597 * C50821) *
                      C50660 * C1073 -
                  ((C24680 * C21197 + C32128 + C32128 + C24673 * C21199 +
                    C24678 * C4197 + C32129 + C32129 + C50918 * C4201 +
                    C24676 * C3263 + C32130 + C32130 + C50917 * C3269) *
                       C50597 * C50821 +
                   (C24680 * C3541 + C25924 + C25924 + C24673 * C3545 +
                    C24678 * C2481 + C25925 + C25925 + C50918 * C2487 +
                    C24676 * C1079 + C25926 + C25926 + C50917 * C1087) *
                       C50597 * C50882) *
                      C50660 * C1074) *
                 C50625) /
                    (p * q * std::sqrt(p + q));
    d2ee[100] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C24676 * C119 + C24683 + C24683 + C50917 * C133 +
                       C24678 * C278 + C24684 + C24684 + C50918 * C298 +
                       C24680 * C279 + C24685 + C24685 + C24673 * C299) *
                          C50597 * C50882 +
                      (C31377 + C31378 + C31379) * C50597 * C50821) *
                         C1651 -
                     ((C31380 + C31381 + C31382) * C50597 * C50821 +
                      (C31379 + C31378 + C31377) * C50597 * C50882) *
                         C50724) *
                        C50868 +
                    (((C31881 + C31882 + C31883) * C50597 * C50882 +
                      (C32292 + C32293 + C32294) * C50597 * C50821) *
                         C50724 -
                     ((C31883 + C31882 + C31881) * C50597 * C50821 +
                      (C24680 * C1079 + C24898 + C24898 + C24673 * C1087 +
                       C24678 * C279 + C24899 + C24899 + C50918 * C299 +
                       C24676 * C278 + C24900 + C24900 + C50917 * C298) *
                          C50597 * C50882) *
                         C1651) *
                        C50696) *
                       C50860 +
                   ((((C25127 + C25126 + C25125) * C50597 * C50882 +
                      (C25128 + C25129 + C25130) * C50597 * C50821) *
                         C50724 -
                     ((C25125 + C25126 + C25127) * C50597 * C50821 +
                      (C24736 + C24735 + C24734) * C50597 * C50882) *
                         C1651) *
                        C50868 +
                    (((C24933 + C24932 + C24931) * C50597 * C50882 +
                      (C25674 + C25675 + C25676) * C50597 * C50821) *
                         C1651 -
                     ((C24680 * C3698 + C26073 + C26073 + C24673 * C3702 +
                       C24678 * C2685 + C26074 + C26074 + C50918 * C2691 +
                       C24676 * C1192 + C26075 + C26075 + C50917 * C1200) *
                          C50597 * C50821 +
                      (C25676 + C25675 + C25674) * C50597 * C50882) *
                         C50724) *
                        C50696) *
                       C50631)) /
                 (p * q * std::sqrt(p + q));
    d2ee[101] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C24676 * C119 + C24683 + C24683 + C50917 * C133 +
                      C24678 * C278 + C24684 + C24684 + C50918 * C298 +
                      C24680 * C279 + C24685 + C24685 + C24673 * C299) *
                         C50597 * C50882 +
                     (C31377 + C31378 + C31379) * C50597 * C50821) *
                        C50915 -
                    ((C31380 + C31381 + C31382) * C50597 * C50821 +
                     (C31379 + C31378 + C31377) * C50597 * C50882) *
                        C50916 +
                    ((C31382 + C31381 + C31380) * C50597 * C50882 +
                     (C33204 + C33205 + C33206) * C50597 * C50821) *
                        C2067) *
                       C50868 +
                   (((C31881 + C31882 + C31883) * C50597 * C50882 +
                     (C32292 + C32293 + C32294) * C50597 * C50821) *
                        C50916 -
                    ((C31883 + C31882 + C31881) * C50597 * C50821 +
                     (C24680 * C1079 + C24898 + C24898 + C24673 * C1087 +
                      C24678 * C279 + C24899 + C24899 + C50918 * C299 +
                      C24676 * C278 + C24900 + C24900 + C50917 * C298) *
                         C50597 * C50882) *
                        C50915 -
                    ((C24680 * C21466 + C32283 + C32283 + C24673 * C21468 +
                      C24678 * C4600 + C32284 + C32284 + C50918 * C4608 +
                      C24676 * C4601 + C32285 + C32285 + C50917 * C4609) *
                         C50597 * C50821 +
                     (C32294 + C32293 + C32292) * C50597 * C50882) *
                        C2067) *
                       C50696) *
                  C50625) /
                 (p * q * std::sqrt(p + q));
    d2ee[102] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C24676 * C119 + C24683 + C24683 + C50917 * C133 +
                      C24678 * C278 + C24684 + C24684 + C50918 * C298 +
                      C24680 * C279 + C24685 + C24685 + C24673 * C299) *
                         C50597 * C50882 +
                     (C31377 + C31378 + C31379) * C50597 * C50821) *
                        C1651 -
                    ((C31380 + C31381 + C31382) * C50597 * C50821 +
                     (C31379 + C31378 + C31377) * C50597 * C50882) *
                        C50724) *
                       C270 +
                   (((C31881 + C31882 + C31883) * C50597 * C50882 +
                     (C32292 + C32293 + C32294) * C50597 * C50821) *
                        C50724 -
                    ((C31883 + C31882 + C31881) * C50597 * C50821 +
                     (C24680 * C1079 + C24898 + C24898 + C24673 * C1087 +
                      C24678 * C279 + C24899 + C24899 + C50918 * C299 +
                      C24676 * C278 + C24900 + C24900 + C50917 * C298) *
                         C50597 * C50882) *
                        C1651) *
                       C271 +
                   (((C24676 * C279 + C24901 + C24901 + C50917 * C299 +
                      C24678 * C1079 + C24902 + C24902 + C50918 * C1087 +
                      C24680 * C2481 + C24903 + C24903 + C24673 * C2487) *
                         C50597 * C50882 +
                     (C32796 + C32797 + C32798) * C50597 * C50821) *
                        C1651 -
                    ((C24680 * C20864 + C32787 + C32787 + C24673 * C20866 +
                      C24678 * C3699 + C32788 + C32788 + C50918 * C3703 +
                      C24676 * C2684 + C32789 + C32789 + C50917 * C2690) *
                         C50597 * C50821 +
                     (C32798 + C32797 + C32796) * C50597 * C50882) *
                        C50724) *
                       C272) *
                  C50625) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C24676 * C119 + C24683 + C24683 + C50917 * C133 +
                      C24678 * C278 + C24684 + C24684 + C50918 * C298 +
                      C24680 * C279 + C24685 + C24685 + C24673 * C299) *
                         C50597 * C50882 +
                     (C31377 + C31378 + C31379) * C50597 * C50821) *
                        C1651 -
                    ((C31380 + C31381 + C31382) * C50597 * C50821 +
                     (C31379 + C31378 + C31377) * C50597 * C50882) *
                        C50724) *
                       C50644 * C1002 +
                   (((C25127 + C25126 + C25125) * C50597 * C50882 +
                     (C25128 + C25129 + C25130) * C50597 * C50821) *
                        C50724 -
                    ((C25125 + C25126 + C25127) * C50597 * C50821 +
                     (C24736 + C24735 + C24734) * C50597 * C50882) *
                        C1651) *
                       C50644 * C1003 +
                   (((C24739 + C24738 + C24737) * C50597 * C50882 +
                     (C25456 + C25457 + C25458) * C50597 * C50821) *
                        C1651 -
                    ((C24680 * C2686 + C25110 + C25110 + C24673 * C2692 +
                      C24678 * C1191 + C25111 + C25111 + C50918 * C1199 +
                      C24676 * C452 + C25112 + C25112 + C50917 * C472) *
                         C50597 * C50821 +
                     (C25458 + C25457 + C25456) * C50597 * C50882) *
                        C50724) *
                       C50644 * C1004)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((C24676 * C119 + C24683 + C24683 + C50917 * C133 +
                     C24678 * C278 + C24684 + C24684 + C50918 * C298 +
                     C24680 * C279 + C24685 + C24685 + C24673 * C299) *
                        C50597 * C50882 +
                    (C31377 + C31378 + C31379) * C50597 * C50821) *
                       C1817 -
                   ((C31380 + C31381 + C31382) * C50597 * C50821 +
                    (C31379 + C31378 + C31377) * C50597 * C50882) *
                       C1818 +
                   ((C31382 + C31381 + C31380) * C50597 * C50882 +
                    (C33204 + C33205 + C33206) * C50597 * C50821) *
                       C1819 -
                   ((C24680 * C23155 + C33195 + C33195 + C24673 * C23157 +
                     C24678 * C6488 + C33196 + C33196 + C50918 * C6492 +
                     C24676 * C5513 + C33197 + C33197 + C50917 * C5519) *
                        C50597 * C50821 +
                    (C33206 + C33205 + C33204) * C50597 * C50882) *
                       C1820) *
                  C50644 * C50625) /
                     (p * q * std::sqrt(p + q));
    d2ee[103] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C24676 * C119 + C24683 + C24683 + C50917 * C133 +
                      C24678 * C278 + C24684 + C24684 + C50918 * C298 +
                      C24680 * C279 + C24685 + C24685 + C24673 * C299) *
                         C50597 * C50882 +
                     (C31377 + C31378 + C31379) * C50597 * C50821) *
                        C50915 -
                    ((C31380 + C31381 + C31382) * C50597 * C50821 +
                     (C31379 + C31378 + C31377) * C50597 * C50882) *
                        C50916 +
                    ((C31382 + C31381 + C31380) * C50597 * C50882 +
                     (C33204 + C33205 + C33206) * C50597 * C50821) *
                        C2067) *
                       C50644 * C50860 +
                   (((C25127 + C25126 + C25125) * C50597 * C50882 +
                     (C25128 + C25129 + C25130) * C50597 * C50821) *
                        C50916 -
                    ((C25125 + C25126 + C25127) * C50597 * C50821 +
                     (C24736 + C24735 + C24734) * C50597 * C50882) *
                        C50915 -
                    ((C24680 * C4598 + C26961 + C26961 + C24673 * C4606 +
                      C24678 * C4599 + C26962 + C26962 + C50918 * C4607 +
                      C24676 * C1823 + C26963 + C26963 + C50917 * C1831) *
                         C50597 * C50821 +
                     (C25130 + C25129 + C25128) * C50597 * C50882) *
                        C2067) *
                       C50644 * C50631)) /
                 (p * q * std::sqrt(p + q));
    d2ee[104] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C24676 * C119 + C24683 + C24683 + C50917 * C133 +
                      C24678 * C278 + C24684 + C24684 + C50918 * C298 +
                      C24680 * C279 + C24685 + C24685 + C24673 * C299) *
                         C50597 * C50882 +
                     (C31377 + C31378 + C31379) * C50597 * C50821) *
                        C1651 -
                    ((C31380 + C31381 + C31382) * C50597 * C50821 +
                     (C31379 + C31378 + C31377) * C50597 * C50882) *
                        C50724) *
                       C50644 * C1002 +
                   (((C25127 + C25126 + C25125) * C50597 * C50882 +
                     (C25128 + C25129 + C25130) * C50597 * C50821) *
                        C50724 -
                    ((C25125 + C25126 + C25127) * C50597 * C50821 +
                     (C24736 + C24735 + C24734) * C50597 * C50882) *
                        C1651) *
                       C50644 * C1003 +
                   (((C24739 + C24738 + C24737) * C50597 * C50882 +
                     (C25456 + C25457 + C25458) * C50597 * C50821) *
                        C1651 -
                    ((C24680 * C2686 + C25110 + C25110 + C24673 * C2692 +
                      C24678 * C1191 + C25111 + C25111 + C50918 * C1199 +
                      C24676 * C452 + C25112 + C25112 + C50917 * C472) *
                         C50597 * C50821 +
                     (C25458 + C25457 + C25456) * C50597 * C50882) *
                        C50724) *
                       C50644 * C1004)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C24676 * C119 + C24683 + C24683 + C50917 * C133 +
                      C24678 * C278 + C24684 + C24684 + C50918 * C298 +
                      C24680 * C279 + C24685 + C24685 + C24673 * C299) *
                         C50597 * C50882 +
                     (C31377 + C31378 + C31379) * C50597 * C50821) *
                        C1651 -
                    ((C31380 + C31381 + C31382) * C50597 * C50821 +
                     (C31379 + C31378 + C31377) * C50597 * C50882) *
                        C50724) *
                       C270 +
                   (((C31881 + C31882 + C31883) * C50597 * C50882 +
                     (C32292 + C32293 + C32294) * C50597 * C50821) *
                        C50724 -
                    ((C31883 + C31882 + C31881) * C50597 * C50821 +
                     (C24680 * C1079 + C24898 + C24898 + C24673 * C1087 +
                      C24678 * C279 + C24899 + C24899 + C50918 * C299 +
                      C24676 * C278 + C24900 + C24900 + C50917 * C298) *
                         C50597 * C50882) *
                        C1651) *
                       C271 +
                   (((C24676 * C279 + C24901 + C24901 + C50917 * C299 +
                      C24678 * C1079 + C24902 + C24902 + C50918 * C1087 +
                      C24680 * C2481 + C24903 + C24903 + C24673 * C2487) *
                         C50597 * C50882 +
                     (C32796 + C32797 + C32798) * C50597 * C50821) *
                        C1651 -
                    ((C24680 * C20864 + C32787 + C32787 + C24673 * C20866 +
                      C24678 * C3699 + C32788 + C32788 + C50918 * C3703 +
                      C24676 * C2684 + C32789 + C32789 + C50917 * C2690) *
                         C50597 * C50821 +
                     (C32798 + C32797 + C32796) * C50597 * C50882) *
                        C50724) *
                       C272) *
                  C50625) /
                     (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C20001 * C119 + C20010 + C20010 + C19996 * C133 + C20003 * C278 +
            C20011 + C20011 + C19997 * C298 + C20005 * C279 + C20012 + C20012 +
            C19998 * C299 + C20007 * C1079 + C20013 + C20013 + C19999 * C1087) *
               C50597 * C50757 * C50660 * C50868 -
           (C20007 * C2481 + C20124 + C20124 + C19999 * C2487 + C20005 * C1079 +
            C20125 + C20125 + C19998 * C1087 + C20003 * C279 + C20126 + C20126 +
            C19997 * C299 + C20001 * C278 + C20127 + C20127 + C19996 * C298) *
               C50597 * C50757 * C50660 * C50696) *
              C50911 +
          ((C20001 * C277 + C20132 + C20132 + C19996 * C297 + C20003 * C280 +
            C20133 + C20133 + C19997 * C300 + C20005 * C1078 + C20134 + C20134 +
            C19998 * C1086 + C20007 * C2482 + C20135 + C20135 +
            C19999 * C2488) *
               C50597 * C50757 * C50660 * C50696 -
           (C20007 * C1078 + C20014 + C20014 + C19999 * C1086 + C20005 * C280 +
            C20015 + C20015 + C19998 * C300 + C20003 * C277 + C20016 + C20016 +
            C19997 * C297 + C20001 * C120 + C20017 + C20017 + C19996 * C134) *
               C50597 * C50757 * C50660 * C50868) *
              C50912 +
          ((C20001 * C121 + C20018 + C20018 + C19996 * C135 + C20003 * C276 +
            C20019 + C20019 + C19997 * C296 + C20005 * C281 + C20020 + C20020 +
            C19998 * C301 + C20007 * C1077 + C20021 + C20021 + C19999 * C1085) *
               C50597 * C50757 * C50660 * C50868 -
           (C20007 * C2483 + C20352 + C20352 + C19999 * C2489 + C20005 * C1077 +
            C20353 + C20353 + C19998 * C1085 + C20003 * C281 + C20354 + C20354 +
            C19997 * C301 + C20001 * C276 + C20355 + C20355 + C19996 * C296) *
               C50597 * C50757 * C50660 * C50696) *
              C618)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
             C17158 + C17158 + C50793 * C298) *
                C17149 +
            (C17201 + C17202) * C17150 + C17209 * C17151) *
               C50757 * C50660 * C50868 -
           (C17761 * C17151 + (C17407 + C17408) * C17150 +
            (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
             C17370 + C17370 + C17147 * C298) *
                C17149) *
               C50757 * C50660 * C50696) *
              C50911 +
          (((C17408 + C17407) * C17149 + (C17406 + C17405) * C17150 +
            (C17772 + C17773) * C17151) *
               C50757 * C50660 * C50696 -
           (C17210 * C17151 + (C17204 + C17203) * C17150 +
            (C17202 + C17201) * C17149) *
               C50757 * C50660 * C50868) *
              C50912 +
          ((C17209 * C17149 + (C17206 + C17205) * C17150 +
            (C17207 + C17208) * C17151) *
               C50757 * C50660 * C50868 -
           ((C17154 * C284 + C17766 + C17766 + C50793 * C304 + C17152 * C283 +
             C17767 + C17767 + C17147 * C303) *
                C17151 +
            (C17773 + C17772) * C17150 + C17761 * C17149) *
               C50757 * C50660 * C50696) *
              C618)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
             C17158 + C17158 + C50793 * C298) *
                C50597 * C5200 +
            (C22232 + C22233) * C50597 * C5201 + C22241 * C5202) *
               C50660 * C50868 -
           ((C17154 * C2684 + C18555 + C18555 + C50793 * C2690 +
             C17152 * C1193 + C18556 + C18556 + C17147 * C1201) *
                C50597 * C5202 +
            (C17154 * C1540 + C18128 + C18128 + C50793 * C1548 + C17152 * C867 +
             C18127 + C18127 + C17147 * C877) *
                C50597 * C5201 +
            (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
             C17370 + C17370 + C17147 * C298) *
                C50597 * C5200) *
               C50660 * C50696) *
              C50911 +
          (((C17408 + C17407) * C50597 * C5200 +
            (C18151 + C18152) * C50597 * C5201 +
            (C17152 * C1192 + C18554 + C18554 + C17147 * C1200 +
             C17154 * C2685 + C18553 + C18553 + C50793 * C2691) *
                C50597 * C5202) *
               C50660 * C50696 -
           (C22223 * C5202 + (C17609 + C17610) * C50597 * C5201 +
            (C17202 + C17201) * C50597 * C5200) *
               C50660 * C50868) *
              C50912 +
          ((C17209 * C50597 * C5200 + (C17608 + C17607) * C50597 * C5201 +
            (C17613 + C17614) * C50597 * C5202) *
               C50660 * C50868 -
           ((C17154 * C2686 + C18551 + C18551 + C50793 * C2692 +
             C17152 * C1191 + C18552 + C18552 + C17147 * C1199) *
                C50597 * C5202 +
            (C18154 + C18153) * C50597 * C5201 + C17761 * C50597 * C5200) *
               C50660 * C50696) *
              C618)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20001 * C119 + C20010 + C20010 + C19996 * C133 + C20003 * C278 +
             C20011 + C20011 + C19997 * C298 + C20005 * C279 + C20012 + C20012 +
             C19998 * C299 + C20007 * C1079 + C20013 + C20013 +
             C19999 * C1087) *
                C50597 * C50757 * C50869 -
            (C20007 * C3263 + C20238 + C20238 + C19999 * C3269 +
             C20005 * C1540 + C20239 + C20239 + C19998 * C1548 + C20003 * C867 +
             C20240 + C20240 + C19997 * C877 + C20001 * C449 + C20241 + C20241 +
             C19996 * C469) *
                C50597 * C50757 * C50724) *
               C50868 +
           ((C20001 * C867 + C20588 + C20588 + C19996 * C877 + C20003 * C1540 +
             C20589 + C20589 + C19997 * C1548 + C20005 * C3263 + C20590 +
             C20590 + C19998 * C3269 + C20007 * C4197 + C20591 + C20591 +
             C19999 * C4201) *
                C50597 * C50757 * C50724 -
            (C20007 * C2481 + C20124 + C20124 + C19999 * C2487 +
             C20005 * C1079 + C20125 + C20125 + C19998 * C1087 + C20003 * C279 +
             C20126 + C20126 + C19997 * C299 + C20001 * C278 + C20127 + C20127 +
             C19996 * C298) *
                C50597 * C50757 * C50869) *
               C50696) *
              C273 +
          (((C20001 * C448 + C20246 + C20246 + C19996 * C468 + C20003 * C868 +
             C20247 + C20247 + C19997 * C878 + C20005 * C1539 + C20248 +
             C20248 + C19998 * C1547 + C20007 * C3264 + C20249 + C20249 +
             C19999 * C3270) *
                C50597 * C50757 * C50724 -
            (C20007 * C1078 + C20014 + C20014 + C19999 * C1086 + C20005 * C280 +
             C20015 + C20015 + C19998 * C300 + C20003 * C277 + C20016 + C20016 +
             C19997 * C297 + C20001 * C120 + C20017 + C20017 + C19996 * C134) *
                C50597 * C50757 * C50869) *
               C50868 +
           ((C20001 * C277 + C20132 + C20132 + C19996 * C297 + C20003 * C280 +
             C20133 + C20133 + C19997 * C300 + C20005 * C1078 + C20134 +
             C20134 + C19998 * C1086 + C20007 * C2482 + C20135 + C20135 +
             C19999 * C2488) *
                C50597 * C50757 * C50869 -
            (C20007 * C4196 + C20592 + C20592 + C19999 * C4200 +
             C20005 * C3264 + C20593 + C20593 + C19998 * C3270 +
             C20003 * C1539 + C20594 + C20594 + C19997 * C1547 + C20001 * C868 +
             C20595 + C20595 + C19996 * C878) *
                C50597 * C50757 * C50724) *
               C50696) *
              C50631)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
              C17158 + C17158 + C50793 * C298) *
                 C17149 +
             (C17201 + C17202) * C17150 + C17209 * C17151) *
                C50757 * C50869 -
            (C17920 * C17151 + (C17609 + C17610) * C17150 +
             (C17154 * C867 + C17571 + C17571 + C50793 * C877 + C17152 * C449 +
              C17572 + C17572 + C17147 * C469) *
                 C17149) *
                C50757 * C50724) *
               C50868 +
           (((C17152 * C867 + C18127 + C18127 + C17147 * C877 + C17154 * C1540 +
              C18128 + C18128 + C50793 * C1548) *
                 C17149 +
             (C18151 + C18152) * C17150 + (C18153 + C18154) * C17151) *
                C50757 * C50724 -
            (C17761 * C17151 + (C17407 + C17408) * C17150 +
             (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
              C17370 + C17370 + C17147 * C298) *
                 C17149) *
                C50757 * C50869) *
               C50696) *
              C273 +
          ((((C17610 + C17609) * C17149 + (C17608 + C17607) * C17150 +
             (C17931 + C17932) * C17151) *
                C50757 * C50724 -
            (C17210 * C17151 + (C17204 + C17203) * C17150 +
             (C17202 + C17201) * C17149) *
                C50757 * C50869) *
               C50868 +
           (((C17408 + C17407) * C17149 + (C17406 + C17405) * C17150 +
             (C17772 + C17773) * C17151) *
                C50757 * C50869 -
            ((C17154 * C1537 + C18141 + C18141 + C50793 * C1545 +
              C17152 * C870 + C18142 + C18142 + C17147 * C880) *
                 C17151 +
             (C18154 + C18153) * C17150 + (C18152 + C18151) * C17149) *
                C50757 * C50724) *
               C50696) *
              C50631)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
              C17158 + C17158 + C50793 * C298) *
                 C50597 * C5200 +
             (C22232 + C22233) * C50597 * C5201 + C22241 * C5202) *
                C50869 -
            ((C22236 + C22237) * C50597 * C5202 +
             (C22235 + C22234) * C50597 * C5201 +
             (C22233 + C22232) * C50597 * C5200) *
                C50724) *
               C50868 +
           (((C22756 + C22757) * C50597 * C5200 +
             (C22758 + C22759) * C50597 * C5201 +
             (C17152 * C4601 + C22736 + C22736 + C17147 * C4609 +
              C17154 * C4600 + C22737 + C22737 + C50793 * C4608) *
                 C50597 * C5202) *
                C50724 -
            ((C22759 + C22758) * C50597 * C5202 +
             (C22757 + C22756) * C50597 * C5201 +
             (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
              C17370 + C17370 + C17147 * C298) *
                 C50597 * C5200) *
                C50869) *
               C50696) *
              C273 +
          ((((C17610 + C17609) * C50597 * C5200 +
             (C17611 + C17612) * C50597 * C5201 +
             (C22238 + C22239) * C50597 * C5202) *
                C50724 -
            (C22223 * C5202 + (C17609 + C17610) * C50597 * C5201 +
             (C17202 + C17201) * C50597 * C5200) *
                C50869) *
               C50868 +
           (((C17408 + C17407) * C50597 * C5200 +
             (C18151 + C18152) * C50597 * C5201 +
             (C22760 + C22761) * C50597 * C5202) *
                C50869 -
            ((C17154 * C4598 + C22742 + C22742 + C50793 * C4606 +
              C17152 * C4599 + C22743 + C22743 + C17147 * C4607) *
                 C50597 * C5202 +
             (C22761 + C22760) * C50597 * C5201 +
             (C18152 + C18151) * C50597 * C5200) *
                C50724) *
               C50696) *
              C50631)) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C17152 * C119 + C17157 + C17157 + C17147 * C133 +
                C17154 * C278 + C17158 + C17158 + C50793 * C298) *
                   C17149 +
               (C17201 + C17202) * C17150 + C17209 * C17151) *
                  C50757 * C50660 * C50644 * C113 -
              (C17210 * C17151 + (C17204 + C17203) * C17150 +
               (C17202 + C17201) * C17149) *
                  C50757 * C50660 * C50644 * C114 +
              (C17209 * C17149 + (C17206 + C17205) * C17150 +
               (C17207 + C17208) * C17151) *
                  C50757 * C50660 * C50644 * C115 -
              ((C17154 * C619 + C17183 + C17183 + C50793 * C621 +
                C17152 * C124 + C17184 + C17184 + C17147 * C138) *
                   C17151 +
               (C17208 + C17207) * C17150 + C17210 * C17149) *
                  C50757 * C50660 * C50644 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 +
                 C17154 * C278 + C17158 + C17158 + C50793 * C298) *
                    C17149 +
                (C17201 + C17202) * C17150 + C17209 * C17151) *
                   C50757 * C50660 * C270 -
               ((C17405 + C17406) * C17151 + (C17407 + C17408) * C17150 +
                (C17154 * C279 + C17369 + C17369 + C50793 * C299 +
                 C17152 * C278 + C17370 + C17370 + C17147 * C298) *
                    C17149) *
                   C50757 * C50660 * C271 +
               ((C17152 * C279 + C17371 + C17371 + C17147 * C299 +
                 C17154 * C1079 + C17372 + C17372 + C50793 * C1087) *
                    C17149 +
                (C17409 + C17410) * C17150 + (C17411 + C17412) * C17151) *
                   C50757 * C50660 * C272) *
                  C273 +
              (((C17408 + C17407) * C17149 + (C17406 + C17405) * C17150 +
                (C17152 * C275 + C17385 + C17385 + C17147 * C295 +
                 C17154 * C282 + C17386 + C17386 + C50793 * C302) *
                    C17151) *
                   C50757 * C50660 * C271 -
               (C17210 * C17151 + (C17204 + C17203) * C17150 +
                (C17202 + C17201) * C17149) *
                   C50757 * C50660 * C270 -
               ((C17154 * C1076 + C17387 + C17387 + C50793 * C1084 +
                 C17152 * C282 + C17388 + C17388 + C17147 * C302) *
                    C17151 +
                (C17412 + C17411) * C17150 + (C17410 + C17409) * C17149) *
                   C50757 * C50660 * C272) *
                  C50631)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
             C17158 + C17158 + C50793 * C298) *
                C17149 +
            (C17201 + C17202) * C17150 + C17209 * C17151) *
               C50757 * C443 -
           ((C17607 + C17608) * C17151 + (C17609 + C17610) * C17150 +
            (C17154 * C867 + C17571 + C17571 + C50793 * C877 + C17152 * C449 +
             C17572 + C17572 + C17147 * C469) *
                C17149) *
               C50757 * C444 +
           ((C17152 * C450 + C17573 + C17573 + C17147 * C470 + C17154 * C1193 +
             C17574 + C17574 + C50793 * C1201) *
                C17149 +
            (C17611 + C17612) * C17150 + (C17613 + C17614) * C17151) *
               C50757 * C445) *
              C50644 * C273 +
          (((C17610 + C17609) * C17149 + (C17608 + C17607) * C17150 +
            (C17152 * C446 + C17587 + C17587 + C17147 * C466 + C17154 * C870 +
             C17588 + C17588 + C50793 * C880) *
                C17151) *
               C50757 * C444 -
           (C17210 * C17151 + (C17204 + C17203) * C17150 +
            (C17202 + C17201) * C17149) *
               C50757 * C443 -
           ((C17154 * C1190 + C17589 + C17589 + C50793 * C1198 + C17152 * C453 +
             C17590 + C17590 + C17147 * C473) *
                C17151 +
            (C17614 + C17613) * C17150 + (C17612 + C17611) * C17149) *
               C50757 * C445) *
              C50644 * C50631)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((C20001 * C119 + C20010 + C20010 + C19996 * C133 + C20003 * C278 +
           C20011 + C20011 + C19997 * C298 + C20005 * C279 + C20012 + C20012 +
           C19998 * C299 + C20007 * C1079 + C20013 + C20013 + C19999 * C1087) *
              C50597 * C50757 * C50660 * C50644 * C113 -
          (C20007 * C1078 + C20014 + C20014 + C19999 * C1086 + C20005 * C280 +
           C20015 + C20015 + C19998 * C300 + C20003 * C277 + C20016 + C20016 +
           C19997 * C297 + C20001 * C120 + C20017 + C20017 + C19996 * C134) *
              C50597 * C50757 * C50660 * C50644 * C114 +
          (C20001 * C121 + C20018 + C20018 + C19996 * C135 + C20003 * C276 +
           C20019 + C20019 + C19997 * C296 + C20005 * C281 + C20020 + C20020 +
           C19998 * C301 + C20007 * C1077 + C20021 + C20021 + C19999 * C1085) *
              C50597 * C50757 * C50660 * C50644 * C115 -
          (C20007 * C1076 + C20022 + C20022 + C19999 * C1084 + C20005 * C282 +
           C20023 + C20023 + C19998 * C302 + C20003 * C275 + C20024 + C20024 +
           C19997 * C295 + C20001 * C122 + C20025 + C20025 + C19996 * C136) *
              C50597 * C50757 * C50660 * C50644 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C20001 * C119 + C20010 + C20010 + C19996 * C133 + C20003 * C278 +
            C20011 + C20011 + C19997 * C298 + C20005 * C279 + C20012 + C20012 +
            C19998 * C299 + C20007 * C1079 + C20013 + C20013 + C19999 * C1087) *
               C50597 * C50757 * C50660 * C270 -
           (C20007 * C2481 + C20124 + C20124 + C19999 * C2487 + C20005 * C1079 +
            C20125 + C20125 + C19998 * C1087 + C20003 * C279 + C20126 + C20126 +
            C19997 * C299 + C20001 * C278 + C20127 + C20127 + C19996 * C298) *
               C50597 * C50757 * C50660 * C271 +
           (C20001 * C279 + C20128 + C20128 + C19996 * C299 + C20003 * C1079 +
            C20129 + C20129 + C19997 * C1087 + C20005 * C2481 + C20130 +
            C20130 + C19998 * C2487 + C20007 * C3541 + C20131 + C20131 +
            C19999 * C3545) *
               C50597 * C50757 * C50660 * C272) *
              C273 +
          ((C20001 * C277 + C20132 + C20132 + C19996 * C297 + C20003 * C280 +
            C20133 + C20133 + C19997 * C300 + C20005 * C1078 + C20134 + C20134 +
            C19998 * C1086 + C20007 * C2482 + C20135 + C20135 +
            C19999 * C2488) *
               C50597 * C50757 * C50660 * C271 -
           (C20007 * C1078 + C20014 + C20014 + C19999 * C1086 + C20005 * C280 +
            C20015 + C20015 + C19998 * C300 + C20003 * C277 + C20016 + C20016 +
            C19997 * C297 + C20001 * C120 + C20017 + C20017 + C19996 * C134) *
               C50597 * C50757 * C50660 * C270 -
           (C20007 * C3540 + C20136 + C20136 + C19999 * C3544 + C20005 * C2482 +
            C20137 + C20137 + C19998 * C2488 + C20003 * C1078 + C20138 +
            C20138 + C19997 * C1086 + C20001 * C280 + C20139 + C20139 +
            C19996 * C300) *
               C50597 * C50757 * C50660 * C272) *
              C50631)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C20001 * C119 + C20010 + C20010 + C19996 * C133 + C20003 * C278 +
            C20011 + C20011 + C19997 * C298 + C20005 * C279 + C20012 + C20012 +
            C19998 * C299 + C20007 * C1079 + C20013 + C20013 + C19999 * C1087) *
               C50597 * C50757 * C443 -
           (C20007 * C3263 + C20238 + C20238 + C19999 * C3269 + C20005 * C1540 +
            C20239 + C20239 + C19998 * C1548 + C20003 * C867 + C20240 + C20240 +
            C19997 * C877 + C20001 * C449 + C20241 + C20241 + C19996 * C469) *
               C50597 * C50757 * C444 +
           (C20001 * C450 + C20242 + C20242 + C19996 * C470 + C20003 * C1193 +
            C20243 + C20243 + C19997 * C1201 + C20005 * C2684 + C20244 +
            C20244 + C19998 * C2690 + C20007 * C3699 + C20245 + C20245 +
            C19999 * C3703) *
               C50597 * C50757 * C445) *
              C50644 * C273 +
          ((C20001 * C448 + C20246 + C20246 + C19996 * C468 + C20003 * C868 +
            C20247 + C20247 + C19997 * C878 + C20005 * C1539 + C20248 + C20248 +
            C19998 * C1547 + C20007 * C3264 + C20249 + C20249 +
            C19999 * C3270) *
               C50597 * C50757 * C444 -
           (C20007 * C1078 + C20014 + C20014 + C19999 * C1086 + C20005 * C280 +
            C20015 + C20015 + C19998 * C300 + C20003 * C277 + C20016 + C20016 +
            C19997 * C297 + C20001 * C120 + C20017 + C20017 + C19996 * C134) *
               C50597 * C50757 * C443 -
           (C20007 * C3698 + C20250 + C20250 + C19999 * C3702 + C20005 * C2685 +
            C20251 + C20251 + C19998 * C2691 + C20003 * C1192 + C20252 +
            C20252 + C19997 * C1200 + C20001 * C451 + C20253 + C20253 +
            C19996 * C471) *
               C50597 * C50757 * C445) *
              C50644 * C50631)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
            C17158 + C17158 + C50793 * C298) *
               C50597 * C5200 +
           (C17152 * C449 + C17572 + C17572 + C17147 * C469 + C17154 * C867 +
            C17571 + C17571 + C50793 * C877) *
               C50597 * C5201 +
           (C17152 * C450 + C17573 + C17573 + C17147 * C470 + C17154 * C1193 +
            C17574 + C17574 + C50793 * C1201) *
               C50597 * C5202) *
              C50660 * C50644 * C113 -
          ((C17612 + C17611) * C50597 * C5202 +
           (C17609 + C17610) * C50597 * C5201 +
           (C17202 + C17201) * C50597 * C5200) *
              C50660 * C50644 * C114 +
          (C17209 * C50597 * C5200 + (C17608 + C17607) * C50597 * C5201 +
           (C17613 + C17614) * C50597 * C5202) *
              C50660 * C50644 * C115 -
          ((C17154 * C1190 + C17589 + C17589 + C50793 * C1198 + C17152 * C453 +
            C17590 + C17590 + C17147 * C473) *
               C50597 * C5202 +
           (C17932 + C17931) * C50597 * C5201 + C17210 * C50597 * C5200) *
              C50660 * C50644 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
             C17158 + C17158 + C50793 * C298) *
                C50597 * C5200 +
            (C17152 * C449 + C17572 + C17572 + C17147 * C469 + C17154 * C867 +
             C17571 + C17571 + C50793 * C877) *
                C50597 * C5201 +
            (C17152 * C450 + C17573 + C17573 + C17147 * C470 + C17154 * C1193 +
             C17574 + C17574 + C50793 * C1201) *
                C50597 * C5202) *
               C50660 * C270 -
           ((C17154 * C2684 + C18555 + C18555 + C50793 * C2690 +
             C17152 * C1193 + C18556 + C18556 + C17147 * C1201) *
                C50597 * C5202 +
            (C17154 * C1540 + C18128 + C18128 + C50793 * C1548 + C17152 * C867 +
             C18127 + C18127 + C17147 * C877) *
                C50597 * C5201 +
            (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
             C17370 + C17370 + C17147 * C298) *
                C50597 * C5200) *
               C50660 * C271 +
           ((C17152 * C279 + C17371 + C17371 + C17147 * C299 + C17154 * C1079 +
             C17372 + C17372 + C50793 * C1087) *
                C50597 * C5200 +
            (C17152 * C1540 + C19048 + C19048 + C17147 * C1548 +
             C17154 * C3263 + C19047 + C19047 + C50793 * C3269) *
                C50597 * C5201 +
            (C17152 * C2684 + C22044 + C22044 + C17147 * C2690 +
             C17154 * C3699 + C22045 + C22045 + C50793 * C3703) *
                C50597 * C5202) *
               C50660 * C272) *
              C273 +
          (((C17408 + C17407) * C50597 * C5200 +
            (C18151 + C18152) * C50597 * C5201 +
            (C17152 * C1192 + C18554 + C18554 + C17147 * C1200 +
             C17154 * C2685 + C18553 + C18553 + C50793 * C2691) *
                C50597 * C5202) *
               C50660 * C271 -
           ((C17612 + C17611) * C50597 * C5202 +
            (C17609 + C17610) * C50597 * C5201 +
            (C17202 + C17201) * C50597 * C5200) *
               C50660 * C270 -
           ((C17154 * C3698 + C22046 + C22046 + C50793 * C3702 +
             C17152 * C2685 + C22047 + C22047 + C17147 * C2691) *
                C50597 * C5202 +
            (C17154 * C3264 + C19045 + C19045 + C50793 * C3270 +
             C17152 * C1539 + C19046 + C19046 + C17147 * C1547) *
                C50597 * C5201 +
            (C17410 + C17409) * C50597 * C5200) *
               C50660 * C272) *
              C50631)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
             C17158 + C17158 + C50793 * C298) *
                C50597 * C5200 +
            (C22232 + C22233) * C50597 * C5201 + C22241 * C5202) *
               C443 -
           ((C22236 + C22237) * C50597 * C5202 +
            (C22235 + C22234) * C50597 * C5201 +
            (C22233 + C22232) * C50597 * C5200) *
               C444 +
           (C22241 * C5200 + (C22237 + C22236) * C50597 * C5201 +
            (C17152 * C5513 + C22206 + C22206 + C17147 * C5519 +
             C17154 * C6488 + C22207 + C22207 + C50793 * C6492) *
                C50597 * C5202) *
               C445) *
              C50644 * C273 +
          (((C17610 + C17609) * C50597 * C5200 +
            (C17611 + C17612) * C50597 * C5201 +
            (C22238 + C22239) * C50597 * C5202) *
               C444 -
           (C22223 * C5202 + (C17609 + C17610) * C50597 * C5201 +
            (C17202 + C17201) * C50597 * C5200) *
               C443 -
           ((C17154 * C6487 + C22213 + C22213 + C50793 * C6491 +
             C17152 * C5514 + C22214 + C22214 + C17147 * C5520) *
                C50597 * C5202 +
            (C22239 + C22238) * C50597 * C5201 + C22223 * C5200) *
               C445) *
              C50644 * C50631)) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C20001 * C119 + C20010 + C20010 + C19996 * C133 + C20003 * C278 +
            C20011 + C20011 + C19997 * C298 + C20005 * C279 + C20012 + C20012 +
            C19998 * C299 + C20007 * C1079 + C20013 + C20013 + C19999 * C1087) *
               C50597 * C50757 * C50869 -
           (C20007 * C3263 + C20238 + C20238 + C19999 * C3269 + C20005 * C1540 +
            C20239 + C20239 + C19998 * C1548 + C20003 * C867 + C20240 + C20240 +
            C19997 * C877 + C20001 * C449 + C20241 + C20241 + C19996 * C469) *
               C50597 * C50757 * C50724) *
              C50644 * C50911 +
          ((C20001 * C448 + C20246 + C20246 + C19996 * C468 + C20003 * C868 +
            C20247 + C20247 + C19997 * C878 + C20005 * C1539 + C20248 + C20248 +
            C19998 * C1547 + C20007 * C3264 + C20249 + C20249 +
            C19999 * C3270) *
               C50597 * C50757 * C50724 -
           (C20007 * C1078 + C20014 + C20014 + C19999 * C1086 + C20005 * C280 +
            C20015 + C20015 + C19998 * C300 + C20003 * C277 + C20016 + C20016 +
            C19997 * C297 + C20001 * C120 + C20017 + C20017 + C19996 * C134) *
               C50597 * C50757 * C50869) *
              C50644 * C50912 +
          ((C20001 * C121 + C20018 + C20018 + C19996 * C135 + C20003 * C276 +
            C20019 + C20019 + C19997 * C296 + C20005 * C281 + C20020 + C20020 +
            C19998 * C301 + C20007 * C1077 + C20021 + C20021 + C19999 * C1085) *
               C50597 * C50757 * C50869 -
           (C20007 * C3265 + C20454 + C20454 + C19999 * C3271 + C20005 * C1538 +
            C20455 + C20455 + C19998 * C1546 + C20003 * C869 + C20456 + C20456 +
            C19997 * C879 + C20001 * C447 + C20457 + C20457 + C19996 * C467) *
               C50597 * C50757 * C50724) *
              C50644 * C618)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
             C17158 + C17158 + C50793 * C298) *
                C17149 +
            (C17201 + C17202) * C17150 + C17209 * C17151) *
               C50757 * C50869 -
           (C17920 * C17151 + (C17609 + C17610) * C17150 +
            (C17154 * C867 + C17571 + C17571 + C50793 * C877 + C17152 * C449 +
             C17572 + C17572 + C17147 * C469) *
                C17149) *
               C50757 * C50724) *
              C50644 * C50911 +
          (((C17610 + C17609) * C17149 + (C17608 + C17607) * C17150 +
            (C17931 + C17932) * C17151) *
               C50757 * C50724 -
           (C17210 * C17151 + (C17204 + C17203) * C17150 +
            (C17202 + C17201) * C17149) *
               C50757 * C50869) *
              C50644 * C50912 +
          ((C17209 * C17149 + (C17206 + C17205) * C17150 +
            (C17207 + C17208) * C17151) *
               C50757 * C50869 -
           ((C17154 * C871 + C17925 + C17925 + C50793 * C881 + C17152 * C454 +
             C17926 + C17926 + C17147 * C474) *
                C17151 +
            (C17932 + C17931) * C17150 + C17920 * C17149) *
               C50757 * C50724) *
              C50644 * C618)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
             C17158 + C17158 + C50793 * C298) *
                C50597 * C5200 +
            (C22232 + C22233) * C50597 * C5201 + C22241 * C5202) *
               C50869 -
           ((C22236 + C22237) * C50597 * C5202 +
            (C22235 + C22234) * C50597 * C5201 +
            (C22233 + C22232) * C50597 * C5200) *
               C50724) *
              C50644 * C50911 +
          (((C17610 + C17609) * C50597 * C5200 +
            (C17611 + C17612) * C50597 * C5201 +
            (C22238 + C22239) * C50597 * C5202) *
               C50724 -
           (C22223 * C5202 + (C17609 + C17610) * C50597 * C5201 +
            (C17202 + C17201) * C50597 * C5200) *
               C50869) *
              C50644 * C50912 +
          ((C17209 * C50597 * C5200 + (C17608 + C17607) * C50597 * C5201 +
            (C17613 + C17614) * C50597 * C5202) *
               C50869 -
           ((C17154 * C6064 + C19439 + C19439 + C50793 * C6066 +
             C17152 * C1822 + C19440 + C19440 + C17147 * C1830) *
                C50597 * C5202 +
            (C17614 + C17613) * C50597 * C5201 + C17920 * C50597 * C5200) *
               C50724) *
              C50644 * C618)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
             C17158 + C17158 + C50793 * C298) *
                C17149 +
            (C17201 + C17202) * C17150 + C17209 * C17151) *
               C50757 * C50660 * C270 -
           ((C17405 + C17406) * C17151 + (C17407 + C17408) * C17150 +
            (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
             C17370 + C17370 + C17147 * C298) *
                C17149) *
               C50757 * C50660 * C271 +
           ((C17152 * C279 + C17371 + C17371 + C17147 * C299 + C17154 * C1079 +
             C17372 + C17372 + C50793 * C1087) *
                C17149 +
            (C17409 + C17410) * C17150 + (C17411 + C17412) * C17151) *
               C50757 * C50660 * C272) *
              C273 +
          (((C17408 + C17407) * C17149 + (C17406 + C17405) * C17150 +
            (C17152 * C275 + C17385 + C17385 + C17147 * C295 + C17154 * C282 +
             C17386 + C17386 + C50793 * C302) *
                C17151) *
               C50757 * C50660 * C271 -
           (C17210 * C17151 + (C17204 + C17203) * C17150 +
            (C17202 + C17201) * C17149) *
               C50757 * C50660 * C270 -
           ((C17154 * C1076 + C17387 + C17387 + C50793 * C1084 + C17152 * C282 +
             C17388 + C17388 + C17147 * C302) *
                C17151 +
            (C17412 + C17411) * C17150 + (C17410 + C17409) * C17149) *
               C50757 * C50660 * C272) *
              C50631)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
            C17158 + C17158 + C50793 * C298) *
               C17149 +
           (C17201 + C17202) * C17150 + C17209 * C17151) *
              C50757 * C50660 * C50644 * C113 -
          (C17210 * C17151 + (C17204 + C17203) * C17150 +
           (C17202 + C17201) * C17149) *
              C50757 * C50660 * C50644 * C114 +
          (C17209 * C17149 + (C17206 + C17205) * C17150 +
           (C17207 + C17208) * C17151) *
              C50757 * C50660 * C50644 * C115 -
          ((C17154 * C619 + C17183 + C17183 + C50793 * C621 + C17152 * C124 +
            C17184 + C17184 + C17147 * C138) *
               C17151 +
           (C17208 + C17207) * C17150 + C17210 * C17149) *
              C50757 * C50660 * C50644 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C20001 * C119 + C20010 + C20010 + C19996 * C133 + C20003 * C278 +
           C20011 + C20011 + C19997 * C298 + C20005 * C279 + C20012 + C20012 +
           C19998 * C299 + C20007 * C1079 + C20013 + C20013 + C19999 * C1087) *
              C50597 * C50757 * C50660 * C50644 * C113 -
          (C20007 * C1078 + C20014 + C20014 + C19999 * C1086 + C20005 * C280 +
           C20015 + C20015 + C19998 * C300 + C20003 * C277 + C20016 + C20016 +
           C19997 * C297 + C20001 * C120 + C20017 + C20017 + C19996 * C134) *
              C50597 * C50757 * C50660 * C50644 * C114 +
          (C20001 * C121 + C20018 + C20018 + C19996 * C135 + C20003 * C276 +
           C20019 + C20019 + C19997 * C296 + C20005 * C281 + C20020 + C20020 +
           C19998 * C301 + C20007 * C1077 + C20021 + C20021 + C19999 * C1085) *
              C50597 * C50757 * C50660 * C50644 * C115 -
          (C20007 * C1076 + C20022 + C20022 + C19999 * C1084 + C20005 * C282 +
           C20023 + C20023 + C19998 * C302 + C20003 * C275 + C20024 + C20024 +
           C19997 * C295 + C20001 * C122 + C20025 + C20025 + C19996 * C136) *
              C50597 * C50757 * C50660 * C50644 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C20001 * C119 + C20010 + C20010 + C19996 * C133 + C20003 * C278 +
            C20011 + C20011 + C19997 * C298 + C20005 * C279 + C20012 + C20012 +
            C19998 * C299 + C20007 * C1079 + C20013 + C20013 + C19999 * C1087) *
               C50597 * C50757 * C50660 * C270 -
           (C20007 * C2481 + C20124 + C20124 + C19999 * C2487 + C20005 * C1079 +
            C20125 + C20125 + C19998 * C1087 + C20003 * C279 + C20126 + C20126 +
            C19997 * C299 + C20001 * C278 + C20127 + C20127 + C19996 * C298) *
               C50597 * C50757 * C50660 * C271 +
           (C20001 * C279 + C20128 + C20128 + C19996 * C299 + C20003 * C1079 +
            C20129 + C20129 + C19997 * C1087 + C20005 * C2481 + C20130 +
            C20130 + C19998 * C2487 + C20007 * C3541 + C20131 + C20131 +
            C19999 * C3545) *
               C50597 * C50757 * C50660 * C272) *
              C273 +
          ((C20001 * C277 + C20132 + C20132 + C19996 * C297 + C20003 * C280 +
            C20133 + C20133 + C19997 * C300 + C20005 * C1078 + C20134 + C20134 +
            C19998 * C1086 + C20007 * C2482 + C20135 + C20135 +
            C19999 * C2488) *
               C50597 * C50757 * C50660 * C271 -
           (C20007 * C1078 + C20014 + C20014 + C19999 * C1086 + C20005 * C280 +
            C20015 + C20015 + C19998 * C300 + C20003 * C277 + C20016 + C20016 +
            C19997 * C297 + C20001 * C120 + C20017 + C20017 + C19996 * C134) *
               C50597 * C50757 * C50660 * C270 -
           (C20007 * C3540 + C20136 + C20136 + C19999 * C3544 + C20005 * C2482 +
            C20137 + C20137 + C19998 * C2488 + C20003 * C1078 + C20138 +
            C20138 + C19997 * C1086 + C20001 * C280 + C20139 + C20139 +
            C19996 * C300) *
               C50597 * C50757 * C50660 * C272) *
              C50631)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
            C17158 + C17158 + C50793 * C298) *
               C50597 * C5200 +
           (C17152 * C449 + C17572 + C17572 + C17147 * C469 + C17154 * C867 +
            C17571 + C17571 + C50793 * C877) *
               C50597 * C5201 +
           (C17152 * C450 + C17573 + C17573 + C17147 * C470 + C17154 * C1193 +
            C17574 + C17574 + C50793 * C1201) *
               C50597 * C5202) *
              C50660 * C50644 * C113 -
          ((C17612 + C17611) * C50597 * C5202 +
           (C17609 + C17610) * C50597 * C5201 +
           (C17202 + C17201) * C50597 * C5200) *
              C50660 * C50644 * C114 +
          (C17209 * C50597 * C5200 + (C17608 + C17607) * C50597 * C5201 +
           (C17613 + C17614) * C50597 * C5202) *
              C50660 * C50644 * C115 -
          ((C17154 * C1190 + C17589 + C17589 + C50793 * C1198 + C17152 * C453 +
            C17590 + C17590 + C17147 * C473) *
               C50597 * C5202 +
           (C17932 + C17931) * C50597 * C5201 + C17210 * C50597 * C5200) *
              C50660 * C50644 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
             C17158 + C17158 + C50793 * C298) *
                C50597 * C5200 +
            (C17152 * C449 + C17572 + C17572 + C17147 * C469 + C17154 * C867 +
             C17571 + C17571 + C50793 * C877) *
                C50597 * C5201 +
            (C17152 * C450 + C17573 + C17573 + C17147 * C470 + C17154 * C1193 +
             C17574 + C17574 + C50793 * C1201) *
                C50597 * C5202) *
               C50660 * C270 -
           ((C17154 * C2684 + C18555 + C18555 + C50793 * C2690 +
             C17152 * C1193 + C18556 + C18556 + C17147 * C1201) *
                C50597 * C5202 +
            (C17154 * C1540 + C18128 + C18128 + C50793 * C1548 + C17152 * C867 +
             C18127 + C18127 + C17147 * C877) *
                C50597 * C5201 +
            (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
             C17370 + C17370 + C17147 * C298) *
                C50597 * C5200) *
               C50660 * C271 +
           ((C17152 * C279 + C17371 + C17371 + C17147 * C299 + C17154 * C1079 +
             C17372 + C17372 + C50793 * C1087) *
                C50597 * C5200 +
            (C17152 * C1540 + C19048 + C19048 + C17147 * C1548 +
             C17154 * C3263 + C19047 + C19047 + C50793 * C3269) *
                C50597 * C5201 +
            (C17152 * C2684 + C22044 + C22044 + C17147 * C2690 +
             C17154 * C3699 + C22045 + C22045 + C50793 * C3703) *
                C50597 * C5202) *
               C50660 * C272) *
              C273 +
          (((C17408 + C17407) * C50597 * C5200 +
            (C18151 + C18152) * C50597 * C5201 +
            (C17152 * C1192 + C18554 + C18554 + C17147 * C1200 +
             C17154 * C2685 + C18553 + C18553 + C50793 * C2691) *
                C50597 * C5202) *
               C50660 * C271 -
           ((C17612 + C17611) * C50597 * C5202 +
            (C17609 + C17610) * C50597 * C5201 +
            (C17202 + C17201) * C50597 * C5200) *
               C50660 * C270 -
           ((C17154 * C3698 + C22046 + C22046 + C50793 * C3702 +
             C17152 * C2685 + C22047 + C22047 + C17147 * C2691) *
                C50597 * C5202 +
            (C17154 * C3264 + C19045 + C19045 + C50793 * C3270 +
             C17152 * C1539 + C19046 + C19046 + C17147 * C1547) *
                C50597 * C5201 +
            (C17410 + C17409) * C50597 * C5200) *
               C50660 * C272) *
              C50631)) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C20001 * C119 + C20010 + C20010 + C19996 * C133 + C20003 * C278 +
            C20011 + C20011 + C19997 * C298 + C20005 * C279 + C20012 + C20012 +
            C19998 * C299 + C20007 * C1079 + C20013 + C20013 + C19999 * C1087) *
               C50597 * C50757 * C50660 * C50913 -
           (C20007 * C2481 + C20124 + C20124 + C19999 * C2487 + C20005 * C1079 +
            C20125 + C20125 + C19998 * C1087 + C20003 * C279 + C20126 + C20126 +
            C19997 * C299 + C20001 * C278 + C20127 + C20127 + C19996 * C298) *
               C50597 * C50757 * C50660 * C50914 +
           (C20001 * C279 + C20128 + C20128 + C19996 * C299 + C20003 * C1079 +
            C20129 + C20129 + C19997 * C1087 + C20005 * C2481 + C20130 +
            C20130 + C19998 * C2487 + C20007 * C3541 + C20131 + C20131 +
            C19999 * C3545) *
               C50597 * C50757 * C50660 * C1306) *
              C50860 +
          ((C20001 * C277 + C20132 + C20132 + C19996 * C297 + C20003 * C280 +
            C20133 + C20133 + C19997 * C300 + C20005 * C1078 + C20134 + C20134 +
            C19998 * C1086 + C20007 * C2482 + C20135 + C20135 +
            C19999 * C2488) *
               C50597 * C50757 * C50660 * C50914 -
           (C20007 * C1078 + C20014 + C20014 + C19999 * C1086 + C20005 * C280 +
            C20015 + C20015 + C19998 * C300 + C20003 * C277 + C20016 + C20016 +
            C19997 * C297 + C20001 * C120 + C20017 + C20017 + C19996 * C134) *
               C50597 * C50757 * C50660 * C50913 -
           (C20007 * C3540 + C20136 + C20136 + C19999 * C3544 + C20005 * C2482 +
            C20137 + C20137 + C19998 * C2488 + C20003 * C1078 + C20138 +
            C20138 + C19997 * C1086 + C20001 * C280 + C20139 + C20139 +
            C19996 * C300) *
               C50597 * C50757 * C50660 * C1306) *
              C50631)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
             C17158 + C17158 + C50793 * C298) *
                C17149 +
            (C17201 + C17202) * C17150 + C17209 * C17151) *
               C50757 * C50660 * C50913 -
           (C17761 * C17151 + (C17407 + C17408) * C17150 +
            (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
             C17370 + C17370 + C17147 * C298) *
                C17149) *
               C50757 * C50660 * C50914 +
           ((C17152 * C279 + C17371 + C17371 + C17147 * C299 + C17154 * C1079 +
             C17372 + C17372 + C50793 * C1087) *
                C17149 +
            (C17409 + C17410) * C17150 + (C17411 + C17412) * C17151) *
               C50757 * C50660 * C1306) *
              C50860 +
          (((C17408 + C17407) * C17149 + (C17406 + C17405) * C17150 +
            (C17772 + C17773) * C17151) *
               C50757 * C50660 * C50914 -
           (C17210 * C17151 + (C17204 + C17203) * C17150 +
            (C17202 + C17201) * C17149) *
               C50757 * C50660 * C50913 -
           ((C17154 * C1076 + C17387 + C17387 + C50793 * C1084 + C17152 * C282 +
             C17388 + C17388 + C17147 * C302) *
                C17151 +
            (C17412 + C17411) * C17150 + (C17410 + C17409) * C17149) *
               C50757 * C50660 * C1306) *
              C50631)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
             C17158 + C17158 + C50793 * C298) *
                C50597 * C5200 +
            (C22232 + C22233) * C50597 * C5201 + C22241 * C5202) *
               C50660 * C50913 -
           (C23168 * C5202 + (C22757 + C22756) * C50597 * C5201 +
            (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
             C17370 + C17370 + C17147 * C298) *
                C50597 * C5200) *
               C50660 * C50914 +
           ((C17152 * C279 + C17371 + C17371 + C17147 * C299 + C17154 * C1079 +
             C17372 + C17372 + C50793 * C1087) *
                C50597 * C5200 +
            (C17152 * C1540 + C19048 + C19048 + C17147 * C1548 +
             C17154 * C3263 + C19047 + C19047 + C50793 * C3269) *
                C50597 * C5201 +
            (C17152 * C2684 + C22044 + C22044 + C17147 * C2690 +
             C17154 * C3699 + C22045 + C22045 + C50793 * C3703) *
                C50597 * C5202) *
               C50660 * C1306) *
              C50860 +
          (((C17408 + C17407) * C50597 * C5200 +
            (C18151 + C18152) * C50597 * C5201 +
            (C22760 + C22761) * C50597 * C5202) *
               C50660 * C50914 -
           (C22223 * C5202 + (C17609 + C17610) * C50597 * C5201 +
            (C17202 + C17201) * C50597 * C5200) *
               C50660 * C50913 -
           ((C17154 * C3698 + C22046 + C22046 + C50793 * C3702 +
             C17152 * C2685 + C22047 + C22047 + C17147 * C2691) *
                C50597 * C5202 +
            (C17154 * C3264 + C19045 + C19045 + C50793 * C3270 +
             C17152 * C1539 + C19046 + C19046 + C17147 * C1547) *
                C50597 * C5201 +
            (C17410 + C17409) * C50597 * C5200) *
               C50660 * C1306) *
              C50631)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C20001 * C119 + C20010 + C20010 + C19996 * C133 + C20003 * C278 +
            C20011 + C20011 + C19997 * C298 + C20005 * C279 + C20012 + C20012 +
            C19998 * C299 + C20007 * C1079 + C20013 + C20013 + C19999 * C1087) *
               C50597 * C50757 * C50869 -
           (C20007 * C3263 + C20238 + C20238 + C19999 * C3269 + C20005 * C1540 +
            C20239 + C20239 + C19998 * C1548 + C20003 * C867 + C20240 + C20240 +
            C19997 * C877 + C20001 * C449 + C20241 + C20241 + C19996 * C469) *
               C50597 * C50757 * C50724) *
              C50913 +
          ((C20001 * C867 + C20588 + C20588 + C19996 * C877 + C20003 * C1540 +
            C20589 + C20589 + C19997 * C1548 + C20005 * C3263 + C20590 +
            C20590 + C19998 * C3269 + C20007 * C4197 + C20591 + C20591 +
            C19999 * C4201) *
               C50597 * C50757 * C50724 -
           (C20007 * C2481 + C20124 + C20124 + C19999 * C2487 + C20005 * C1079 +
            C20125 + C20125 + C19998 * C1087 + C20003 * C279 + C20126 + C20126 +
            C19997 * C299 + C20001 * C278 + C20127 + C20127 + C19996 * C298) *
               C50597 * C50757 * C50869) *
              C50914 +
          ((C20001 * C279 + C20128 + C20128 + C19996 * C299 + C20003 * C1079 +
            C20129 + C20129 + C19997 * C1087 + C20005 * C2481 + C20130 +
            C20130 + C19998 * C2487 + C20007 * C3541 + C20131 + C20131 +
            C19999 * C3545) *
               C50597 * C50757 * C50869 -
           (C20007 * C21197 + C21201 + C21201 + C19999 * C21199 +
            C20005 * C4197 + C21202 + C21202 + C19998 * C4201 + C20003 * C3263 +
            C21203 + C21203 + C19997 * C3269 + C20001 * C1540 + C21204 +
            C21204 + C19996 * C1548) *
               C50597 * C50757 * C50724) *
              C1306) *
         C50625) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
             C17158 + C17158 + C50793 * C298) *
                C17149 +
            (C17201 + C17202) * C17150 + C17209 * C17151) *
               C50757 * C50869 -
           (C17920 * C17151 + (C17609 + C17610) * C17150 +
            (C17154 * C867 + C17571 + C17571 + C50793 * C877 + C17152 * C449 +
             C17572 + C17572 + C17147 * C469) *
                C17149) *
               C50757 * C50724) *
              C50913 +
          (((C17152 * C867 + C18127 + C18127 + C17147 * C877 + C17154 * C1540 +
             C18128 + C18128 + C50793 * C1548) *
                C17149 +
            (C18151 + C18152) * C17150 + (C18153 + C18154) * C17151) *
               C50757 * C50724 -
           (C17761 * C17151 + (C17407 + C17408) * C17150 +
            (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
             C17370 + C17370 + C17147 * C298) *
                C17149) *
               C50757 * C50869) *
              C50914 +
          (((C17152 * C279 + C17371 + C17371 + C17147 * C299 + C17154 * C1079 +
             C17372 + C17372 + C50793 * C1087) *
                C17149 +
            (C17409 + C17410) * C17150 + (C17411 + C17412) * C17151) *
               C50757 * C50869 -
           ((C17154 * C3265 + C19043 + C19043 + C50793 * C3271 +
             C17152 * C1538 + C19044 + C19044 + C17147 * C1546) *
                C17151 +
            (C17154 * C3264 + C19045 + C19045 + C50793 * C3270 +
             C17152 * C1539 + C19046 + C19046 + C17147 * C1547) *
                C17150 +
            (C17154 * C3263 + C19047 + C19047 + C50793 * C3269 +
             C17152 * C1540 + C19048 + C19048 + C17147 * C1548) *
                C17149) *
               C50757 * C50724) *
              C1306) *
         C50625) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
             C17158 + C17158 + C50793 * C298) *
                C50597 * C5200 +
            (C22232 + C22233) * C50597 * C5201 + C22241 * C5202) *
               C50869 -
           ((C22236 + C22237) * C50597 * C5202 +
            (C22235 + C22234) * C50597 * C5201 +
            (C22233 + C22232) * C50597 * C5200) *
               C50724) *
              C50913 +
          (((C22756 + C22757) * C50597 * C5200 +
            (C22758 + C22759) * C50597 * C5201 +
            (C23171 + C23172) * C50597 * C5202) *
               C50724 -
           (C23168 * C5202 + (C22757 + C22756) * C50597 * C5201 +
            (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
             C17370 + C17370 + C17147 * C298) *
                C50597 * C5200) *
               C50869) *
              C50914 +
          (((C17152 * C279 + C17371 + C17371 + C17147 * C299 + C17154 * C1079 +
             C17372 + C17372 + C50793 * C1087) *
                C50597 * C5200 +
            (C23677 + C23678) * C50597 * C5201 +
            (C23679 + C23680) * C50597 * C5202) *
               C50869 -
           ((C17154 * C21466 + C23667 + C23667 + C50793 * C21468 +
             C17152 * C4600 + C23668 + C23668 + C17147 * C4608) *
                C50597 * C5202 +
            (C23680 + C23679) * C50597 * C5201 +
            (C23678 + C23677) * C50597 * C5200) *
               C50724) *
              C1306) *
         C50625) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 +
                 C17154 * C278 + C17158 + C17158 + C50793 * C298) *
                    C17149 +
                (C17201 + C17202) * C17150 + C17209 * C17151) *
                   C50757 * C50660 * C1000 -
               (C17761 * C17151 + (C17407 + C17408) * C17150 +
                (C17154 * C279 + C17369 + C17369 + C50793 * C299 +
                 C17152 * C278 + C17370 + C17370 + C17147 * C298) *
                    C17149) *
                   C50757 * C50660 * C50696) *
                  C1002 +
              (((C17408 + C17407) * C17149 + (C17406 + C17405) * C17150 +
                (C17772 + C17773) * C17151) *
                   C50757 * C50660 * C50696 -
               (C17210 * C17151 + (C17204 + C17203) * C17150 +
                (C17202 + C17201) * C17149) *
                   C50757 * C50660 * C1000) *
                  C1003 +
              ((C17209 * C17149 + (C17206 + C17205) * C17150 +
                (C17207 + C17208) * C17151) *
                   C50757 * C50660 * C1000 -
               ((C17154 * C284 + C17766 + C17766 + C50793 * C304 +
                 C17152 * C283 + C17767 + C17767 + C17147 * C303) *
                    C17151 +
                (C17773 + C17772) * C17150 + C17761 * C17149) *
                   C50757 * C50660 * C50696) *
                  C1004) +
         0.5 * std::pow(Pi, 2.5) *
             (((C17152 * C119 + C17157 + C17157 + C17147 * C133 +
                C17154 * C278 + C17158 + C17158 + C50793 * C298) *
                   C17149 +
               (C17201 + C17202) * C17150 + C17209 * C17151) *
                  C50757 * C50660 * C1071 -
              (C17761 * C17151 + (C17407 + C17408) * C17150 +
               (C17154 * C279 + C17369 + C17369 + C50793 * C299 +
                C17152 * C278 + C17370 + C17370 + C17147 * C298) *
                   C17149) *
                  C50757 * C50660 * C1072 +
              ((C17152 * C279 + C17371 + C17371 + C17147 * C299 +
                C17154 * C1079 + C17372 + C17372 + C50793 * C1087) *
                   C17149 +
               (C17409 + C17410) * C17150 + (C17411 + C17412) * C17151) *
                  C50757 * C50660 * C1073 -
              ((C17154 * C2483 + C18399 + C18399 + C50793 * C2489 +
                C17152 * C1077 + C18400 + C18400 + C17147 * C1085) *
                   C17151 +
               (C17154 * C2482 + C18401 + C18401 + C50793 * C2488 +
                C17152 * C1078 + C18402 + C18402 + C17147 * C1086) *
                   C17150 +
               (C17154 * C2481 + C18403 + C18403 + C50793 * C2487 +
                C17152 * C1079 + C18404 + C18404 + C17147 * C1087) *
                   C17149) *
                  C50757 * C50660 * C1074) *
             C50625) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
             C17158 + C17158 + C50793 * C298) *
                C17149 +
            (C17201 + C17202) * C17150 + C17209 * C17151) *
               C50757 * C443 -
           (C17920 * C17151 + (C17609 + C17610) * C17150 +
            (C17154 * C867 + C17571 + C17571 + C50793 * C877 + C17152 * C449 +
             C17572 + C17572 + C17147 * C469) *
                C17149) *
               C50757 * C444 +
           ((C17152 * C450 + C17573 + C17573 + C17147 * C470 + C17154 * C1193 +
             C17574 + C17574 + C50793 * C1201) *
                C17149 +
            (C17611 + C17612) * C17150 + (C17613 + C17614) * C17151) *
               C50757 * C445) *
              C1000 +
          (((C17152 * C867 + C18127 + C18127 + C17147 * C877 + C17154 * C1540 +
             C18128 + C18128 + C50793 * C1548) *
                C17149 +
            (C18151 + C18152) * C17150 + (C18153 + C18154) * C17151) *
               C50757 * C444 -
           (C17761 * C17151 + (C17407 + C17408) * C17150 +
            (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
             C17370 + C17370 + C17147 * C298) *
                C17149) *
               C50757 * C443 -
           ((C17154 * C2686 + C18551 + C18551 + C50793 * C2692 +
             C17152 * C1191 + C18552 + C18552 + C17147 * C1199) *
                C17151 +
            (C17154 * C2685 + C18553 + C18553 + C50793 * C2691 +
             C17152 * C1192 + C18554 + C18554 + C17147 * C1200) *
                C17150 +
            (C17154 * C2684 + C18555 + C18555 + C50793 * C2690 +
             C17152 * C1193 + C18556 + C18556 + C17147 * C1201) *
                C17149) *
               C50757 * C445) *
              C50696) *
         C50625) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C20001 * C119 + C20010 + C20010 + C19996 * C133 + C20003 * C278 +
            C20011 + C20011 + C19997 * C298 + C20005 * C279 + C20012 + C20012 +
            C19998 * C299 + C20007 * C1079 + C20013 + C20013 + C19999 * C1087) *
               C50597 * C50757 * C50660 * C1000 -
           (C20007 * C2481 + C20124 + C20124 + C19999 * C2487 + C20005 * C1079 +
            C20125 + C20125 + C19998 * C1087 + C20003 * C279 + C20126 + C20126 +
            C19997 * C299 + C20001 * C278 + C20127 + C20127 + C19996 * C298) *
               C50597 * C50757 * C50660 * C50696) *
              C1002 +
          ((C20001 * C277 + C20132 + C20132 + C19996 * C297 + C20003 * C280 +
            C20133 + C20133 + C19997 * C300 + C20005 * C1078 + C20134 + C20134 +
            C19998 * C1086 + C20007 * C2482 + C20135 + C20135 +
            C19999 * C2488) *
               C50597 * C50757 * C50660 * C50696 -
           (C20007 * C1078 + C20014 + C20014 + C19999 * C1086 + C20005 * C280 +
            C20015 + C20015 + C19998 * C300 + C20003 * C277 + C20016 + C20016 +
            C19997 * C297 + C20001 * C120 + C20017 + C20017 + C19996 * C134) *
               C50597 * C50757 * C50660 * C1000) *
              C1003 +
          ((C20001 * C121 + C20018 + C20018 + C19996 * C135 + C20003 * C276 +
            C20019 + C20019 + C19997 * C296 + C20005 * C281 + C20020 + C20020 +
            C19998 * C301 + C20007 * C1077 + C20021 + C20021 + C19999 * C1085) *
               C50597 * C50757 * C50660 * C1000 -
           (C20007 * C2483 + C20352 + C20352 + C19999 * C2489 + C20005 * C1077 +
            C20353 + C20353 + C19998 * C1085 + C20003 * C281 + C20354 + C20354 +
            C19997 * C301 + C20001 * C276 + C20355 + C20355 + C19996 * C296) *
               C50597 * C50757 * C50660 * C50696) *
              C1004)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((C20001 * C119 + C20010 + C20010 + C19996 * C133 + C20003 * C278 +
           C20011 + C20011 + C19997 * C298 + C20005 * C279 + C20012 + C20012 +
           C19998 * C299 + C20007 * C1079 + C20013 + C20013 + C19999 * C1087) *
              C50597 * C50757 * C50660 * C1071 -
          (C20007 * C2481 + C20124 + C20124 + C19999 * C2487 + C20005 * C1079 +
           C20125 + C20125 + C19998 * C1087 + C20003 * C279 + C20126 + C20126 +
           C19997 * C299 + C20001 * C278 + C20127 + C20127 + C19996 * C298) *
              C50597 * C50757 * C50660 * C1072 +
          (C20001 * C279 + C20128 + C20128 + C19996 * C299 + C20003 * C1079 +
           C20129 + C20129 + C19997 * C1087 + C20005 * C2481 + C20130 + C20130 +
           C19998 * C2487 + C20007 * C3541 + C20131 + C20131 + C19999 * C3545) *
              C50597 * C50757 * C50660 * C1073 -
          (C20007 * C20759 + C20763 + C20763 + C19999 * C20761 +
           C20005 * C3541 + C20764 + C20764 + C19998 * C3545 + C20003 * C2481 +
           C20765 + C20765 + C19997 * C2487 + C20001 * C1079 + C20766 + C20766 +
           C19996 * C1087) *
              C50597 * C50757 * C50660 * C1074) *
         C50625) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C20001 * C119 + C20010 + C20010 + C19996 * C133 + C20003 * C278 +
            C20011 + C20011 + C19997 * C298 + C20005 * C279 + C20012 + C20012 +
            C19998 * C299 + C20007 * C1079 + C20013 + C20013 + C19999 * C1087) *
               C50597 * C50757 * C443 -
           (C20007 * C3263 + C20238 + C20238 + C19999 * C3269 + C20005 * C1540 +
            C20239 + C20239 + C19998 * C1548 + C20003 * C867 + C20240 + C20240 +
            C19997 * C877 + C20001 * C449 + C20241 + C20241 + C19996 * C469) *
               C50597 * C50757 * C444 +
           (C20001 * C450 + C20242 + C20242 + C19996 * C470 + C20003 * C1193 +
            C20243 + C20243 + C19997 * C1201 + C20005 * C2684 + C20244 +
            C20244 + C19998 * C2690 + C20007 * C3699 + C20245 + C20245 +
            C19999 * C3703) *
               C50597 * C50757 * C445) *
              C1000 +
          ((C20001 * C867 + C20588 + C20588 + C19996 * C877 + C20003 * C1540 +
            C20589 + C20589 + C19997 * C1548 + C20005 * C3263 + C20590 +
            C20590 + C19998 * C3269 + C20007 * C4197 + C20591 + C20591 +
            C19999 * C4201) *
               C50597 * C50757 * C444 -
           (C20007 * C2481 + C20124 + C20124 + C19999 * C2487 + C20005 * C1079 +
            C20125 + C20125 + C19998 * C1087 + C20003 * C279 + C20126 + C20126 +
            C19997 * C299 + C20001 * C278 + C20127 + C20127 + C19996 * C298) *
               C50597 * C50757 * C443 -
           (C20007 * C20864 + C20868 + C20868 + C19999 * C20866 +
            C20005 * C3699 + C20869 + C20869 + C19998 * C3703 + C20003 * C2684 +
            C20870 + C20870 + C19997 * C2690 + C20001 * C1193 + C20871 +
            C20871 + C19996 * C1201) *
               C50597 * C50757 * C445) *
              C50696) *
         C50625) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
             C17158 + C17158 + C50793 * C298) *
                C50597 * C5200 +
            (C22232 + C22233) * C50597 * C5201 + C22241 * C5202) *
               C50660 * C1000 -
           ((C22759 + C22758) * C50597 * C5202 +
            (C22757 + C22756) * C50597 * C5201 +
            (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
             C17370 + C17370 + C17147 * C298) *
                C50597 * C5200) *
               C50660 * C50696) *
              C1002 +
          (((C17408 + C17407) * C50597 * C5200 +
            (C18151 + C18152) * C50597 * C5201 +
            (C22760 + C22761) * C50597 * C5202) *
               C50660 * C50696 -
           (C22223 * C5202 + (C17609 + C17610) * C50597 * C5201 +
            (C17202 + C17201) * C50597 * C5200) *
               C50660 * C1000) *
              C1003 +
          ((C17209 * C50597 * C5200 + (C17608 + C17607) * C50597 * C5201 +
            (C17613 + C17614) * C50597 * C5202) *
               C50660 * C1000 -
           ((C17154 * C2686 + C18551 + C18551 + C50793 * C2692 +
             C17152 * C1191 + C18552 + C18552 + C17147 * C1199) *
                C50597 * C5202 +
            (C18154 + C18153) * C50597 * C5201 + C17761 * C50597 * C5200) *
               C50660 * C50696) *
              C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
            C17158 + C17158 + C50793 * C298) *
               C50597 * C5200 +
           (C22232 + C22233) * C50597 * C5201 + C22241 * C5202) *
              C50660 * C1071 -
          ((C22759 + C22758) * C50597 * C5202 +
           (C22757 + C22756) * C50597 * C5201 +
           (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
            C17370 + C17370 + C17147 * C298) *
               C50597 * C5200) *
              C50660 * C1072 +
          ((C17152 * C279 + C17371 + C17371 + C17147 * C299 + C17154 * C1079 +
            C17372 + C17372 + C50793 * C1087) *
               C50597 * C5200 +
           (C17152 * C1540 + C19048 + C19048 + C17147 * C1548 + C17154 * C3263 +
            C19047 + C19047 + C50793 * C3269) *
               C50597 * C5201 +
           (C17152 * C2684 + C22044 + C22044 + C17147 * C2690 + C17154 * C3699 +
            C22045 + C22045 + C50793 * C3703) *
               C50597 * C5202) *
              C50660 * C1073 -
          ((C17154 * C20864 + C23006 + C23006 + C50793 * C20866 +
            C17152 * C3699 + C23007 + C23007 + C17147 * C3703) *
               C50597 * C5202 +
           (C17154 * C4197 + C23008 + C23008 + C50793 * C4201 + C17152 * C3263 +
            C23009 + C23009 + C17147 * C3269) *
               C50597 * C5201 +
           (C17154 * C2481 + C18403 + C18403 + C50793 * C2487 + C17152 * C1079 +
            C18404 + C18404 + C17147 * C1087) *
               C50597 * C5200) *
              C50660 * C1074) *
         C50625) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
             C17158 + C17158 + C50793 * C298) *
                C50597 * C5200 +
            (C22232 + C22233) * C50597 * C5201 + C22241 * C5202) *
               C443 -
           ((C22236 + C22237) * C50597 * C5202 +
            (C22235 + C22234) * C50597 * C5201 +
            (C22233 + C22232) * C50597 * C5200) *
               C444 +
           (C22241 * C5200 + (C22237 + C22236) * C50597 * C5201 +
            (C17152 * C5513 + C22206 + C22206 + C17147 * C5519 +
             C17154 * C6488 + C22207 + C22207 + C50793 * C6492) *
                C50597 * C5202) *
               C445) *
              C1000 +
          (((C22756 + C22757) * C50597 * C5200 +
            (C22758 + C22759) * C50597 * C5201 +
            (C23171 + C23172) * C50597 * C5202) *
               C444 -
           (C23168 * C5202 + (C22757 + C22756) * C50597 * C5201 +
            (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
             C17370 + C17370 + C17147 * C298) *
                C50597 * C5200) *
               C443 -
           ((C17154 * C23155 + C23164 + C23164 + C50793 * C23157 +
             C17152 * C6488 + C23165 + C23165 + C17147 * C6492) *
                C50597 * C5202 +
            (C23172 + C23171) * C50597 * C5201 + C23168 * C5200) *
               C445) *
              C50696) *
         C50625) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20001 * C119 + C20010 + C20010 + C19996 * C133 + C20003 * C278 +
             C20011 + C20011 + C19997 * C298 + C20005 * C279 + C20012 + C20012 +
             C19998 * C299 + C20007 * C1079 + C20013 + C20013 +
             C19999 * C1087) *
                C50597 * C50757 * C50869 -
            (C20007 * C3263 + C20238 + C20238 + C19999 * C3269 +
             C20005 * C1540 + C20239 + C20239 + C19998 * C1548 + C20003 * C867 +
             C20240 + C20240 + C19997 * C877 + C20001 * C449 + C20241 + C20241 +
             C19996 * C469) *
                C50597 * C50757 * C50724) *
               C1000 +
           ((C20001 * C867 + C20588 + C20588 + C19996 * C877 + C20003 * C1540 +
             C20589 + C20589 + C19997 * C1548 + C20005 * C3263 + C20590 +
             C20590 + C19998 * C3269 + C20007 * C4197 + C20591 + C20591 +
             C19999 * C4201) *
                C50597 * C50757 * C50724 -
            (C20007 * C2481 + C20124 + C20124 + C19999 * C2487 +
             C20005 * C1079 + C20125 + C20125 + C19998 * C1087 + C20003 * C279 +
             C20126 + C20126 + C19997 * C299 + C20001 * C278 + C20127 + C20127 +
             C19996 * C298) *
                C50597 * C50757 * C50869) *
               C50696) *
              C50860 +
          (((C20001 * C448 + C20246 + C20246 + C19996 * C468 + C20003 * C868 +
             C20247 + C20247 + C19997 * C878 + C20005 * C1539 + C20248 +
             C20248 + C19998 * C1547 + C20007 * C3264 + C20249 + C20249 +
             C19999 * C3270) *
                C50597 * C50757 * C50724 -
            (C20007 * C1078 + C20014 + C20014 + C19999 * C1086 + C20005 * C280 +
             C20015 + C20015 + C19998 * C300 + C20003 * C277 + C20016 + C20016 +
             C19997 * C297 + C20001 * C120 + C20017 + C20017 + C19996 * C134) *
                C50597 * C50757 * C50869) *
               C1000 +
           ((C20001 * C277 + C20132 + C20132 + C19996 * C297 + C20003 * C280 +
             C20133 + C20133 + C19997 * C300 + C20005 * C1078 + C20134 +
             C20134 + C19998 * C1086 + C20007 * C2482 + C20135 + C20135 +
             C19999 * C2488) *
                C50597 * C50757 * C50869 -
            (C20007 * C4196 + C20592 + C20592 + C19999 * C4200 +
             C20005 * C3264 + C20593 + C20593 + C19998 * C3270 +
             C20003 * C1539 + C20594 + C20594 + C19997 * C1547 + C20001 * C868 +
             C20595 + C20595 + C19996 * C878) *
                C50597 * C50757 * C50724) *
               C50696) *
              C50631)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
              C17158 + C17158 + C50793 * C298) *
                 C17149 +
             (C17201 + C17202) * C17150 + C17209 * C17151) *
                C50757 * C50869 -
            (C17920 * C17151 + (C17609 + C17610) * C17150 +
             (C17154 * C867 + C17571 + C17571 + C50793 * C877 + C17152 * C449 +
              C17572 + C17572 + C17147 * C469) *
                 C17149) *
                C50757 * C50724) *
               C1000 +
           (((C17152 * C867 + C18127 + C18127 + C17147 * C877 + C17154 * C1540 +
              C18128 + C18128 + C50793 * C1548) *
                 C17149 +
             (C18151 + C18152) * C17150 + (C18153 + C18154) * C17151) *
                C50757 * C50724 -
            (C17761 * C17151 + (C17407 + C17408) * C17150 +
             (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
              C17370 + C17370 + C17147 * C298) *
                 C17149) *
                C50757 * C50869) *
               C50696) *
              C50860 +
          ((((C17610 + C17609) * C17149 + (C17608 + C17607) * C17150 +
             (C17931 + C17932) * C17151) *
                C50757 * C50724 -
            (C17210 * C17151 + (C17204 + C17203) * C17150 +
             (C17202 + C17201) * C17149) *
                C50757 * C50869) *
               C1000 +
           (((C17408 + C17407) * C17149 + (C17406 + C17405) * C17150 +
             (C17772 + C17773) * C17151) *
                C50757 * C50869 -
            ((C17154 * C1537 + C18141 + C18141 + C50793 * C1545 +
              C17152 * C870 + C18142 + C18142 + C17147 * C880) *
                 C17151 +
             (C18154 + C18153) * C17150 + (C18152 + C18151) * C17149) *
                C50757 * C50724) *
               C50696) *
              C50631)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
              C17158 + C17158 + C50793 * C298) *
                 C50597 * C5200 +
             (C22232 + C22233) * C50597 * C5201 + C22241 * C5202) *
                C50869 -
            ((C22236 + C22237) * C50597 * C5202 +
             (C22235 + C22234) * C50597 * C5201 +
             (C22233 + C22232) * C50597 * C5200) *
                C50724) *
               C1000 +
           (((C22756 + C22757) * C50597 * C5200 +
             (C22758 + C22759) * C50597 * C5201 +
             (C23171 + C23172) * C50597 * C5202) *
                C50724 -
            (C23168 * C5202 + (C22757 + C22756) * C50597 * C5201 +
             (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
              C17370 + C17370 + C17147 * C298) *
                 C50597 * C5200) *
                C50869) *
               C50696) *
              C50860 +
          ((((C17610 + C17609) * C50597 * C5200 +
             (C17611 + C17612) * C50597 * C5201 +
             (C22238 + C22239) * C50597 * C5202) *
                C50724 -
            (C22223 * C5202 + (C17609 + C17610) * C50597 * C5201 +
             (C17202 + C17201) * C50597 * C5200) *
                C50869) *
               C1000 +
           (((C17408 + C17407) * C50597 * C5200 +
             (C18151 + C18152) * C50597 * C5201 +
             (C22760 + C22761) * C50597 * C5202) *
                C50869 -
            ((C17154 * C4598 + C22742 + C22742 + C50793 * C4606 +
              C17152 * C4599 + C22743 + C22743 + C17147 * C4607) *
                 C50597 * C5202 +
             (C22761 + C22760) * C50597 * C5201 +
             (C18152 + C18151) * C50597 * C5200) *
                C50724) *
               C50696) *
              C50631)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
            C17158 + C17158 + C50793 * C298) *
               C17149 +
           (C17201 + C17202) * C17150 + C17209 * C17151) *
              C50757 * C50660 * C1071 -
          (C17761 * C17151 + (C17407 + C17408) * C17150 +
           (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
            C17370 + C17370 + C17147 * C298) *
               C17149) *
              C50757 * C50660 * C1072 +
          ((C17152 * C279 + C17371 + C17371 + C17147 * C299 + C17154 * C1079 +
            C17372 + C17372 + C50793 * C1087) *
               C17149 +
           (C17409 + C17410) * C17150 + (C17411 + C17412) * C17151) *
              C50757 * C50660 * C1073 -
          ((C17154 * C2483 + C18399 + C18399 + C50793 * C2489 + C17152 * C1077 +
            C18400 + C18400 + C17147 * C1085) *
               C17151 +
           (C17154 * C2482 + C18401 + C18401 + C50793 * C2488 + C17152 * C1078 +
            C18402 + C18402 + C17147 * C1086) *
               C17150 +
           (C17154 * C2481 + C18403 + C18403 + C50793 * C2487 + C17152 * C1079 +
            C18404 + C18404 + C17147 * C1087) *
               C17149) *
              C50757 * C50660 * C1074) *
         C50625) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
             C17158 + C17158 + C50793 * C298) *
                C17149 +
            (C17201 + C17202) * C17150 + C17209 * C17151) *
               C50757 * C50660 * C1000 -
           (C17761 * C17151 + (C17407 + C17408) * C17150 +
            (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
             C17370 + C17370 + C17147 * C298) *
                C17149) *
               C50757 * C50660 * C50696) *
              C1002 +
          (((C17408 + C17407) * C17149 + (C17406 + C17405) * C17150 +
            (C17772 + C17773) * C17151) *
               C50757 * C50660 * C50696 -
           (C17210 * C17151 + (C17204 + C17203) * C17150 +
            (C17202 + C17201) * C17149) *
               C50757 * C50660 * C1000) *
              C1003 +
          ((C17209 * C17149 + (C17206 + C17205) * C17150 +
            (C17207 + C17208) * C17151) *
               C50757 * C50660 * C1000 -
           ((C17154 * C284 + C17766 + C17766 + C50793 * C304 + C17152 * C283 +
             C17767 + C17767 + C17147 * C303) *
                C17151 +
            (C17773 + C17772) * C17150 + C17761 * C17149) *
               C50757 * C50660 * C50696) *
              C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C20001 * C119 + C20010 + C20010 + C19996 * C133 + C20003 * C278 +
            C20011 + C20011 + C19997 * C298 + C20005 * C279 + C20012 + C20012 +
            C19998 * C299 + C20007 * C1079 + C20013 + C20013 + C19999 * C1087) *
               C50597 * C50757 * C50660 * C1000 -
           (C20007 * C2481 + C20124 + C20124 + C19999 * C2487 + C20005 * C1079 +
            C20125 + C20125 + C19998 * C1087 + C20003 * C279 + C20126 + C20126 +
            C19997 * C299 + C20001 * C278 + C20127 + C20127 + C19996 * C298) *
               C50597 * C50757 * C50660 * C50696) *
              C1002 +
          ((C20001 * C277 + C20132 + C20132 + C19996 * C297 + C20003 * C280 +
            C20133 + C20133 + C19997 * C300 + C20005 * C1078 + C20134 + C20134 +
            C19998 * C1086 + C20007 * C2482 + C20135 + C20135 +
            C19999 * C2488) *
               C50597 * C50757 * C50660 * C50696 -
           (C20007 * C1078 + C20014 + C20014 + C19999 * C1086 + C20005 * C280 +
            C20015 + C20015 + C19998 * C300 + C20003 * C277 + C20016 + C20016 +
            C19997 * C297 + C20001 * C120 + C20017 + C20017 + C19996 * C134) *
               C50597 * C50757 * C50660 * C1000) *
              C1003 +
          ((C20001 * C121 + C20018 + C20018 + C19996 * C135 + C20003 * C276 +
            C20019 + C20019 + C19997 * C296 + C20005 * C281 + C20020 + C20020 +
            C19998 * C301 + C20007 * C1077 + C20021 + C20021 + C19999 * C1085) *
               C50597 * C50757 * C50660 * C1000 -
           (C20007 * C2483 + C20352 + C20352 + C19999 * C2489 + C20005 * C1077 +
            C20353 + C20353 + C19998 * C1085 + C20003 * C281 + C20354 + C20354 +
            C19997 * C301 + C20001 * C276 + C20355 + C20355 + C19996 * C296) *
               C50597 * C50757 * C50660 * C50696) *
              C1004)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C20001 * C119 + C20010 + C20010 + C19996 * C133 + C20003 * C278 +
           C20011 + C20011 + C19997 * C298 + C20005 * C279 + C20012 + C20012 +
           C19998 * C299 + C20007 * C1079 + C20013 + C20013 + C19999 * C1087) *
              C50597 * C50757 * C50660 * C1071 -
          (C20007 * C2481 + C20124 + C20124 + C19999 * C2487 + C20005 * C1079 +
           C20125 + C20125 + C19998 * C1087 + C20003 * C279 + C20126 + C20126 +
           C19997 * C299 + C20001 * C278 + C20127 + C20127 + C19996 * C298) *
              C50597 * C50757 * C50660 * C1072 +
          (C20001 * C279 + C20128 + C20128 + C19996 * C299 + C20003 * C1079 +
           C20129 + C20129 + C19997 * C1087 + C20005 * C2481 + C20130 + C20130 +
           C19998 * C2487 + C20007 * C3541 + C20131 + C20131 + C19999 * C3545) *
              C50597 * C50757 * C50660 * C1073 -
          (C20007 * C20759 + C20763 + C20763 + C19999 * C20761 +
           C20005 * C3541 + C20764 + C20764 + C19998 * C3545 + C20003 * C2481 +
           C20765 + C20765 + C19997 * C2487 + C20001 * C1079 + C20766 + C20766 +
           C19996 * C1087) *
              C50597 * C50757 * C50660 * C1074) *
         C50625) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
             C17158 + C17158 + C50793 * C298) *
                C50597 * C5200 +
            (C22232 + C22233) * C50597 * C5201 + C22241 * C5202) *
               C50660 * C1000 -
           ((C22759 + C22758) * C50597 * C5202 +
            (C22757 + C22756) * C50597 * C5201 +
            (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
             C17370 + C17370 + C17147 * C298) *
                C50597 * C5200) *
               C50660 * C50696) *
              C1002 +
          (((C17408 + C17407) * C50597 * C5200 +
            (C18151 + C18152) * C50597 * C5201 +
            (C22760 + C22761) * C50597 * C5202) *
               C50660 * C50696 -
           (C22223 * C5202 + (C17609 + C17610) * C50597 * C5201 +
            (C17202 + C17201) * C50597 * C5200) *
               C50660 * C1000) *
              C1003 +
          ((C17209 * C50597 * C5200 + (C17608 + C17607) * C50597 * C5201 +
            (C17613 + C17614) * C50597 * C5202) *
               C50660 * C1000 -
           ((C17154 * C2686 + C18551 + C18551 + C50793 * C2692 +
             C17152 * C1191 + C18552 + C18552 + C17147 * C1199) *
                C50597 * C5202 +
            (C18154 + C18153) * C50597 * C5201 + C17761 * C50597 * C5200) *
               C50660 * C50696) *
              C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
            C17158 + C17158 + C50793 * C298) *
               C50597 * C5200 +
           (C22232 + C22233) * C50597 * C5201 + C22241 * C5202) *
              C50660 * C1071 -
          ((C22759 + C22758) * C50597 * C5202 +
           (C22757 + C22756) * C50597 * C5201 +
           (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
            C17370 + C17370 + C17147 * C298) *
               C50597 * C5200) *
              C50660 * C1072 +
          ((C17152 * C279 + C17371 + C17371 + C17147 * C299 + C17154 * C1079 +
            C17372 + C17372 + C50793 * C1087) *
               C50597 * C5200 +
           (C17152 * C1540 + C19048 + C19048 + C17147 * C1548 + C17154 * C3263 +
            C19047 + C19047 + C50793 * C3269) *
               C50597 * C5201 +
           (C17152 * C2684 + C22044 + C22044 + C17147 * C2690 + C17154 * C3699 +
            C22045 + C22045 + C50793 * C3703) *
               C50597 * C5202) *
              C50660 * C1073 -
          ((C17154 * C20864 + C23006 + C23006 + C50793 * C20866 +
            C17152 * C3699 + C23007 + C23007 + C17147 * C3703) *
               C50597 * C5202 +
           (C17154 * C4197 + C23008 + C23008 + C50793 * C4201 + C17152 * C3263 +
            C23009 + C23009 + C17147 * C3269) *
               C50597 * C5201 +
           (C17154 * C2481 + C18403 + C18403 + C50793 * C2487 + C17152 * C1079 +
            C18404 + C18404 + C17147 * C1087) *
               C50597 * C5200) *
              C50660 * C1074) *
         C50625) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C20001 * C119 + C20010 + C20010 + C19996 * C133 + C20003 * C278 +
             C20011 + C20011 + C19997 * C298 + C20005 * C279 + C20012 + C20012 +
             C19998 * C299 + C20007 * C1079 + C20013 + C20013 +
             C19999 * C1087) *
                C50597 * C50757 * C1651 -
            (C20007 * C3263 + C20238 + C20238 + C19999 * C3269 +
             C20005 * C1540 + C20239 + C20239 + C19998 * C1548 + C20003 * C867 +
             C20240 + C20240 + C19997 * C877 + C20001 * C449 + C20241 + C20241 +
             C19996 * C469) *
                C50597 * C50757 * C50724) *
               C50868 +
           ((C20001 * C867 + C20588 + C20588 + C19996 * C877 + C20003 * C1540 +
             C20589 + C20589 + C19997 * C1548 + C20005 * C3263 + C20590 +
             C20590 + C19998 * C3269 + C20007 * C4197 + C20591 + C20591 +
             C19999 * C4201) *
                C50597 * C50757 * C50724 -
            (C20007 * C2481 + C20124 + C20124 + C19999 * C2487 +
             C20005 * C1079 + C20125 + C20125 + C19998 * C1087 + C20003 * C279 +
             C20126 + C20126 + C19997 * C299 + C20001 * C278 + C20127 + C20127 +
             C19996 * C298) *
                C50597 * C50757 * C1651) *
               C50696) *
              C50860 +
          (((C20001 * C448 + C20246 + C20246 + C19996 * C468 + C20003 * C868 +
             C20247 + C20247 + C19997 * C878 + C20005 * C1539 + C20248 +
             C20248 + C19998 * C1547 + C20007 * C3264 + C20249 + C20249 +
             C19999 * C3270) *
                C50597 * C50757 * C50724 -
            (C20007 * C1078 + C20014 + C20014 + C19999 * C1086 + C20005 * C280 +
             C20015 + C20015 + C19998 * C300 + C20003 * C277 + C20016 + C20016 +
             C19997 * C297 + C20001 * C120 + C20017 + C20017 + C19996 * C134) *
                C50597 * C50757 * C1651) *
               C50868 +
           ((C20001 * C277 + C20132 + C20132 + C19996 * C297 + C20003 * C280 +
             C20133 + C20133 + C19997 * C300 + C20005 * C1078 + C20134 +
             C20134 + C19998 * C1086 + C20007 * C2482 + C20135 + C20135 +
             C19999 * C2488) *
                C50597 * C50757 * C1651 -
            (C20007 * C4196 + C20592 + C20592 + C19999 * C4200 +
             C20005 * C3264 + C20593 + C20593 + C19998 * C3270 +
             C20003 * C1539 + C20594 + C20594 + C19997 * C1547 + C20001 * C868 +
             C20595 + C20595 + C19996 * C878) *
                C50597 * C50757 * C50724) *
               C50696) *
              C50631)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
              C17158 + C17158 + C50793 * C298) *
                 C17149 +
             (C17201 + C17202) * C17150 + C17209 * C17151) *
                C50757 * C1651 -
            (C17920 * C17151 + (C17609 + C17610) * C17150 +
             (C17154 * C867 + C17571 + C17571 + C50793 * C877 + C17152 * C449 +
              C17572 + C17572 + C17147 * C469) *
                 C17149) *
                C50757 * C50724) *
               C50868 +
           (((C17152 * C867 + C18127 + C18127 + C17147 * C877 + C17154 * C1540 +
              C18128 + C18128 + C50793 * C1548) *
                 C17149 +
             (C18151 + C18152) * C17150 + (C18153 + C18154) * C17151) *
                C50757 * C50724 -
            (C17761 * C17151 + (C17407 + C17408) * C17150 +
             (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
              C17370 + C17370 + C17147 * C298) *
                 C17149) *
                C50757 * C1651) *
               C50696) *
              C50860 +
          ((((C17610 + C17609) * C17149 + (C17608 + C17607) * C17150 +
             (C17931 + C17932) * C17151) *
                C50757 * C50724 -
            (C17210 * C17151 + (C17204 + C17203) * C17150 +
             (C17202 + C17201) * C17149) *
                C50757 * C1651) *
               C50868 +
           (((C17408 + C17407) * C17149 + (C17406 + C17405) * C17150 +
             (C17772 + C17773) * C17151) *
                C50757 * C1651 -
            ((C17154 * C1537 + C18141 + C18141 + C50793 * C1545 +
              C17152 * C870 + C18142 + C18142 + C17147 * C880) *
                 C17151 +
             (C18154 + C18153) * C17150 + (C18152 + C18151) * C17149) *
                C50757 * C50724) *
               C50696) *
              C50631)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
              C17158 + C17158 + C50793 * C298) *
                 C50597 * C5200 +
             (C22232 + C22233) * C50597 * C5201 + C22241 * C5202) *
                C1651 -
            (C24081 * C5202 + (C22235 + C22234) * C50597 * C5201 +
             (C22233 + C22232) * C50597 * C5200) *
                C50724) *
               C50868 +
           (((C22756 + C22757) * C50597 * C5200 +
             (C22758 + C22759) * C50597 * C5201 +
             (C23171 + C23172) * C50597 * C5202) *
                C50724 -
            (C23168 * C5202 + (C22757 + C22756) * C50597 * C5201 +
             (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
              C17370 + C17370 + C17147 * C298) *
                 C50597 * C5200) *
                C1651) *
               C50696) *
              C50860 +
          ((((C17610 + C17609) * C50597 * C5200 +
             (C17611 + C17612) * C50597 * C5201 +
             (C22238 + C22239) * C50597 * C5202) *
                C50724 -
            (C22223 * C5202 + (C17609 + C17610) * C50597 * C5201 +
             (C17202 + C17201) * C50597 * C5200) *
                C1651) *
               C50868 +
           (((C17408 + C17407) * C50597 * C5200 +
             (C18151 + C18152) * C50597 * C5201 +
             (C22760 + C22761) * C50597 * C5202) *
                C1651 -
            ((C17154 * C4598 + C22742 + C22742 + C50793 * C4606 +
              C17152 * C4599 + C22743 + C22743 + C17147 * C4607) *
                 C50597 * C5202 +
             (C22761 + C22760) * C50597 * C5201 +
             (C18152 + C18151) * C50597 * C5200) *
                C50724) *
               C50696) *
              C50631)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C20001 * C119 + C20010 + C20010 + C19996 * C133 + C20003 * C278 +
            C20011 + C20011 + C19997 * C298 + C20005 * C279 + C20012 + C20012 +
            C19998 * C299 + C20007 * C1079 + C20013 + C20013 + C19999 * C1087) *
               C50597 * C50757 * C50915 -
           (C20007 * C3263 + C20238 + C20238 + C19999 * C3269 + C20005 * C1540 +
            C20239 + C20239 + C19998 * C1548 + C20003 * C867 + C20240 + C20240 +
            C19997 * C877 + C20001 * C449 + C20241 + C20241 + C19996 * C469) *
               C50597 * C50757 * C50916 +
           (C20001 * C450 + C20242 + C20242 + C19996 * C470 + C20003 * C1193 +
            C20243 + C20243 + C19997 * C1201 + C20005 * C2684 + C20244 +
            C20244 + C19998 * C2690 + C20007 * C3699 + C20245 + C20245 +
            C19999 * C3703) *
               C50597 * C50757 * C2067) *
              C50868 +
          ((C20001 * C867 + C20588 + C20588 + C19996 * C877 + C20003 * C1540 +
            C20589 + C20589 + C19997 * C1548 + C20005 * C3263 + C20590 +
            C20590 + C19998 * C3269 + C20007 * C4197 + C20591 + C20591 +
            C19999 * C4201) *
               C50597 * C50757 * C50916 -
           (C20007 * C2481 + C20124 + C20124 + C19999 * C2487 + C20005 * C1079 +
            C20125 + C20125 + C19998 * C1087 + C20003 * C279 + C20126 + C20126 +
            C19997 * C299 + C20001 * C278 + C20127 + C20127 + C19996 * C298) *
               C50597 * C50757 * C50915 -
           (C20007 * C20864 + C20868 + C20868 + C19999 * C20866 +
            C20005 * C3699 + C20869 + C20869 + C19998 * C3703 + C20003 * C2684 +
            C20870 + C20870 + C19997 * C2690 + C20001 * C1193 + C20871 +
            C20871 + C19996 * C1201) *
               C50597 * C50757 * C2067) *
              C50696) *
         C50625) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
             C17158 + C17158 + C50793 * C298) *
                C17149 +
            (C17201 + C17202) * C17150 + C17209 * C17151) *
               C50757 * C50915 -
           (C17920 * C17151 + (C17609 + C17610) * C17150 +
            (C17154 * C867 + C17571 + C17571 + C50793 * C877 + C17152 * C449 +
             C17572 + C17572 + C17147 * C469) *
                C17149) *
               C50757 * C50916 +
           ((C17152 * C450 + C17573 + C17573 + C17147 * C470 + C17154 * C1193 +
             C17574 + C17574 + C50793 * C1201) *
                C17149 +
            (C17611 + C17612) * C17150 + (C17613 + C17614) * C17151) *
               C50757 * C2067) *
              C50868 +
          (((C17152 * C867 + C18127 + C18127 + C17147 * C877 + C17154 * C1540 +
             C18128 + C18128 + C50793 * C1548) *
                C17149 +
            (C18151 + C18152) * C17150 + (C18153 + C18154) * C17151) *
               C50757 * C50916 -
           (C17761 * C17151 + (C17407 + C17408) * C17150 +
            (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
             C17370 + C17370 + C17147 * C298) *
                C17149) *
               C50757 * C50915 -
           ((C17154 * C2686 + C18551 + C18551 + C50793 * C2692 +
             C17152 * C1191 + C18552 + C18552 + C17147 * C1199) *
                C17151 +
            (C17154 * C2685 + C18553 + C18553 + C50793 * C2691 +
             C17152 * C1192 + C18554 + C18554 + C17147 * C1200) *
                C17150 +
            (C17154 * C2684 + C18555 + C18555 + C50793 * C2690 +
             C17152 * C1193 + C18556 + C18556 + C17147 * C1201) *
                C17149) *
               C50757 * C2067) *
              C50696) *
         C50625) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
             C17158 + C17158 + C50793 * C298) *
                C50597 * C5200 +
            (C22232 + C22233) * C50597 * C5201 + C22241 * C5202) *
               C50915 -
           (C24081 * C5202 + (C22235 + C22234) * C50597 * C5201 +
            (C22233 + C22232) * C50597 * C5200) *
               C50916 +
           (C22241 * C5200 + (C22237 + C22236) * C50597 * C5201 +
            (C24086 + C24087) * C50597 * C5202) *
               C2067) *
              C50868 +
          (((C22756 + C22757) * C50597 * C5200 +
            (C22758 + C22759) * C50597 * C5201 +
            (C23171 + C23172) * C50597 * C5202) *
               C50916 -
           (C23168 * C5202 + (C22757 + C22756) * C50597 * C5201 +
            (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
             C17370 + C17370 + C17147 * C298) *
                C50597 * C5200) *
               C50915 -
           ((C17154 * C23155 + C23164 + C23164 + C50793 * C23157 +
             C17152 * C6488 + C23165 + C23165 + C17147 * C6492) *
                C50597 * C5202 +
            (C23172 + C23171) * C50597 * C5201 + C23168 * C5200) *
               C2067) *
              C50696) *
         C50625) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 +
                 C17154 * C278 + C17158 + C17158 + C50793 * C298) *
                    C17149 +
                (C17201 + C17202) * C17150 + C17209 * C17151) *
                   C50757 * C1651 -
               (C17920 * C17151 + (C17609 + C17610) * C17150 +
                (C17154 * C867 + C17571 + C17571 + C50793 * C877 +
                 C17152 * C449 + C17572 + C17572 + C17147 * C469) *
                    C17149) *
                   C50757 * C50724) *
                  C50644 * C1002 +
              (((C17610 + C17609) * C17149 + (C17608 + C17607) * C17150 +
                (C17931 + C17932) * C17151) *
                   C50757 * C50724 -
               (C17210 * C17151 + (C17204 + C17203) * C17150 +
                (C17202 + C17201) * C17149) *
                   C50757 * C1651) *
                  C50644 * C1003 +
              ((C17209 * C17149 + (C17206 + C17205) * C17150 +
                (C17207 + C17208) * C17151) *
                   C50757 * C1651 -
               ((C17154 * C871 + C17925 + C17925 + C50793 * C881 +
                 C17152 * C454 + C17926 + C17926 + C17147 * C474) *
                    C17151 +
                (C17932 + C17931) * C17150 + C17920 * C17149) *
                   C50757 * C50724) *
                  C50644 * C1004) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 +
                 C17154 * C278 + C17158 + C17158 + C50793 * C298) *
                    C17149 +
                (C17201 + C17202) * C17150 + C17209 * C17151) *
                   C50757 * C1651 -
               (C17920 * C17151 + (C17609 + C17610) * C17150 +
                (C17154 * C867 + C17571 + C17571 + C50793 * C877 +
                 C17152 * C449 + C17572 + C17572 + C17147 * C469) *
                    C17149) *
                   C50757 * C50724) *
                  C270 +
              (((C17152 * C867 + C18127 + C18127 + C17147 * C877 +
                 C17154 * C1540 + C18128 + C18128 + C50793 * C1548) *
                    C17149 +
                (C18151 + C18152) * C17150 + (C18153 + C18154) * C17151) *
                   C50757 * C50724 -
               (C17761 * C17151 + (C17407 + C17408) * C17150 +
                (C17154 * C279 + C17369 + C17369 + C50793 * C299 +
                 C17152 * C278 + C17370 + C17370 + C17147 * C298) *
                    C17149) *
                   C50757 * C1651) *
                  C271 +
              (((C17152 * C279 + C17371 + C17371 + C17147 * C299 +
                 C17154 * C1079 + C17372 + C17372 + C50793 * C1087) *
                    C17149 +
                (C17409 + C17410) * C17150 + (C17411 + C17412) * C17151) *
                   C50757 * C1651 -
               ((C17154 * C3265 + C19043 + C19043 + C50793 * C3271 +
                 C17152 * C1538 + C19044 + C19044 + C17147 * C1546) *
                    C17151 +
                (C17154 * C3264 + C19045 + C19045 + C50793 * C3270 +
                 C17152 * C1539 + C19046 + C19046 + C17147 * C1547) *
                    C17150 +
                (C17154 * C3263 + C19047 + C19047 + C50793 * C3269 +
                 C17152 * C1540 + C19048 + C19048 + C17147 * C1548) *
                    C17149) *
                   C50757 * C50724) *
                  C272) *
             C50625) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
            C17158 + C17158 + C50793 * C298) *
               C17149 +
           (C17201 + C17202) * C17150 + C17209 * C17151) *
              C50757 * C1817 -
          (C17920 * C17151 + (C17609 + C17610) * C17150 +
           (C17154 * C867 + C17571 + C17571 + C50793 * C877 + C17152 * C449 +
            C17572 + C17572 + C17147 * C469) *
               C17149) *
              C50757 * C1818 +
          ((C17152 * C450 + C17573 + C17573 + C17147 * C470 + C17154 * C1193 +
            C17574 + C17574 + C50793 * C1201) *
               C17149 +
           (C17611 + C17612) * C17150 + (C17613 + C17614) * C17151) *
              C50757 * C1819 -
          ((C17154 * C6064 + C19439 + C19439 + C50793 * C6066 + C17152 * C1822 +
            C19440 + C19440 + C17147 * C1830) *
               C17151 +
           (C17154 * C4599 + C19441 + C19441 + C50793 * C4607 + C17152 * C1823 +
            C19442 + C19442 + C17147 * C1831) *
               C17150 +
           (C17154 * C4601 + C19443 + C19443 + C50793 * C4609 + C17152 * C1824 +
            C19444 + C19444 + C17147 * C1832) *
               C17149) *
              C50757 * C1820) *
         C50644 * C50625) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C20001 * C119 + C20010 + C20010 + C19996 * C133 + C20003 * C278 +
            C20011 + C20011 + C19997 * C298 + C20005 * C279 + C20012 + C20012 +
            C19998 * C299 + C20007 * C1079 + C20013 + C20013 + C19999 * C1087) *
               C50597 * C50757 * C1651 -
           (C20007 * C3263 + C20238 + C20238 + C19999 * C3269 + C20005 * C1540 +
            C20239 + C20239 + C19998 * C1548 + C20003 * C867 + C20240 + C20240 +
            C19997 * C877 + C20001 * C449 + C20241 + C20241 + C19996 * C469) *
               C50597 * C50757 * C50724) *
              C50644 * C1002 +
          ((C20001 * C448 + C20246 + C20246 + C19996 * C468 + C20003 * C868 +
            C20247 + C20247 + C19997 * C878 + C20005 * C1539 + C20248 + C20248 +
            C19998 * C1547 + C20007 * C3264 + C20249 + C20249 +
            C19999 * C3270) *
               C50597 * C50757 * C50724 -
           (C20007 * C1078 + C20014 + C20014 + C19999 * C1086 + C20005 * C280 +
            C20015 + C20015 + C19998 * C300 + C20003 * C277 + C20016 + C20016 +
            C19997 * C297 + C20001 * C120 + C20017 + C20017 + C19996 * C134) *
               C50597 * C50757 * C1651) *
              C50644 * C1003 +
          ((C20001 * C121 + C20018 + C20018 + C19996 * C135 + C20003 * C276 +
            C20019 + C20019 + C19997 * C296 + C20005 * C281 + C20020 + C20020 +
            C19998 * C301 + C20007 * C1077 + C20021 + C20021 + C19999 * C1085) *
               C50597 * C50757 * C1651 -
           (C20007 * C3265 + C20454 + C20454 + C19999 * C3271 + C20005 * C1538 +
            C20455 + C20455 + C19998 * C1546 + C20003 * C869 + C20456 + C20456 +
            C19997 * C879 + C20001 * C447 + C20457 + C20457 + C19996 * C467) *
               C50597 * C50757 * C50724) *
              C50644 * C1004)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C20001 * C119 + C20010 + C20010 + C19996 * C133 + C20003 * C278 +
            C20011 + C20011 + C19997 * C298 + C20005 * C279 + C20012 + C20012 +
            C19998 * C299 + C20007 * C1079 + C20013 + C20013 + C19999 * C1087) *
               C50597 * C50757 * C1651 -
           (C20007 * C3263 + C20238 + C20238 + C19999 * C3269 + C20005 * C1540 +
            C20239 + C20239 + C19998 * C1548 + C20003 * C867 + C20240 + C20240 +
            C19997 * C877 + C20001 * C449 + C20241 + C20241 + C19996 * C469) *
               C50597 * C50757 * C50724) *
              C270 +
          ((C20001 * C867 + C20588 + C20588 + C19996 * C877 + C20003 * C1540 +
            C20589 + C20589 + C19997 * C1548 + C20005 * C3263 + C20590 +
            C20590 + C19998 * C3269 + C20007 * C4197 + C20591 + C20591 +
            C19999 * C4201) *
               C50597 * C50757 * C50724 -
           (C20007 * C2481 + C20124 + C20124 + C19999 * C2487 + C20005 * C1079 +
            C20125 + C20125 + C19998 * C1087 + C20003 * C279 + C20126 + C20126 +
            C19997 * C299 + C20001 * C278 + C20127 + C20127 + C19996 * C298) *
               C50597 * C50757 * C1651) *
              C271 +
          ((C20001 * C279 + C20128 + C20128 + C19996 * C299 + C20003 * C1079 +
            C20129 + C20129 + C19997 * C1087 + C20005 * C2481 + C20130 +
            C20130 + C19998 * C2487 + C20007 * C3541 + C20131 + C20131 +
            C19999 * C3545) *
               C50597 * C50757 * C1651 -
           (C20007 * C21197 + C21201 + C21201 + C19999 * C21199 +
            C20005 * C4197 + C21202 + C21202 + C19998 * C4201 + C20003 * C3263 +
            C21203 + C21203 + C19997 * C3269 + C20001 * C1540 + C21204 +
            C21204 + C19996 * C1548) *
               C50597 * C50757 * C50724) *
              C272) *
         C50625) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C20001 * C119 + C20010 + C20010 + C19996 * C133 + C20003 * C278 +
           C20011 + C20011 + C19997 * C298 + C20005 * C279 + C20012 + C20012 +
           C19998 * C299 + C20007 * C1079 + C20013 + C20013 + C19999 * C1087) *
              C50597 * C50757 * C1817 -
          (C20007 * C3263 + C20238 + C20238 + C19999 * C3269 + C20005 * C1540 +
           C20239 + C20239 + C19998 * C1548 + C20003 * C867 + C20240 + C20240 +
           C19997 * C877 + C20001 * C449 + C20241 + C20241 + C19996 * C469) *
              C50597 * C50757 * C1818 +
          (C20001 * C450 + C20242 + C20242 + C19996 * C470 + C20003 * C1193 +
           C20243 + C20243 + C19997 * C1201 + C20005 * C2684 + C20244 + C20244 +
           C19998 * C2690 + C20007 * C3699 + C20245 + C20245 + C19999 * C3703) *
              C50597 * C50757 * C1819 -
          (C20007 * C21466 + C21470 + C21470 + C19999 * C21468 +
           C20005 * C4600 + C21471 + C21471 + C19998 * C4608 + C20003 * C4601 +
           C21472 + C21472 + C19997 * C4609 + C20001 * C1824 + C21473 + C21473 +
           C19996 * C1832) *
              C50597 * C50757 * C1820) *
         C50644 * C50625) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
             C17158 + C17158 + C50793 * C298) *
                C50597 * C5200 +
            (C22232 + C22233) * C50597 * C5201 + C22241 * C5202) *
               C1651 -
           ((C22236 + C22237) * C50597 * C5202 +
            (C22235 + C22234) * C50597 * C5201 +
            (C22233 + C22232) * C50597 * C5200) *
               C50724) *
              C50644 * C1002 +
          (((C17610 + C17609) * C50597 * C5200 +
            (C17611 + C17612) * C50597 * C5201 +
            (C22238 + C22239) * C50597 * C5202) *
               C50724 -
           (C22223 * C5202 + (C17609 + C17610) * C50597 * C5201 +
            (C17202 + C17201) * C50597 * C5200) *
               C1651) *
              C50644 * C1003 +
          ((C17209 * C50597 * C5200 + (C17608 + C17607) * C50597 * C5201 +
            (C17613 + C17614) * C50597 * C5202) *
               C1651 -
           ((C17154 * C6064 + C19439 + C19439 + C50793 * C6066 +
             C17152 * C1822 + C19440 + C19440 + C17147 * C1830) *
                C50597 * C5202 +
            (C17614 + C17613) * C50597 * C5201 + C17920 * C50597 * C5200) *
               C50724) *
              C50644 * C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
             C17158 + C17158 + C50793 * C298) *
                C50597 * C5200 +
            (C22232 + C22233) * C50597 * C5201 + C22241 * C5202) *
               C1651 -
           ((C22236 + C22237) * C50597 * C5202 +
            (C22235 + C22234) * C50597 * C5201 +
            (C22233 + C22232) * C50597 * C5200) *
               C50724) *
              C270 +
          (((C22756 + C22757) * C50597 * C5200 +
            (C22758 + C22759) * C50597 * C5201 +
            (C23171 + C23172) * C50597 * C5202) *
               C50724 -
           (C23168 * C5202 + (C22757 + C22756) * C50597 * C5201 +
            (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
             C17370 + C17370 + C17147 * C298) *
                C50597 * C5200) *
               C1651) *
              C271 +
          (((C17152 * C279 + C17371 + C17371 + C17147 * C299 + C17154 * C1079 +
             C17372 + C17372 + C50793 * C1087) *
                C50597 * C5200 +
            (C23677 + C23678) * C50597 * C5201 +
            (C23679 + C23680) * C50597 * C5202) *
               C1651 -
           ((C17154 * C21466 + C23667 + C23667 + C50793 * C21468 +
             C17152 * C4600 + C23668 + C23668 + C17147 * C4608) *
                C50597 * C5202 +
            (C23680 + C23679) * C50597 * C5201 +
            (C23678 + C23677) * C50597 * C5200) *
               C50724) *
              C272) *
         C50625) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
            C17158 + C17158 + C50793 * C298) *
               C50597 * C5200 +
           (C22232 + C22233) * C50597 * C5201 + C22241 * C5202) *
              C1817 -
          (C24081 * C5202 + (C22235 + C22234) * C50597 * C5201 +
           (C22233 + C22232) * C50597 * C5200) *
              C1818 +
          (C22241 * C5200 + (C22237 + C22236) * C50597 * C5201 +
           (C24086 + C24087) * C50597 * C5202) *
              C1819 -
          ((C17154 * C24070 + C24079 + C24079 + C50793 * C24072 +
            C17152 * C7396 + C24080 + C24080 + C17147 * C7400) *
               C50597 * C5202 +
           (C24087 + C24086) * C50597 * C5201 + C24081 * C5200) *
              C1820) *
         C50644 * C50625) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C20001 * C119 + C20010 + C20010 + C19996 * C133 + C20003 * C278 +
            C20011 + C20011 + C19997 * C298 + C20005 * C279 + C20012 + C20012 +
            C19998 * C299 + C20007 * C1079 + C20013 + C20013 + C19999 * C1087) *
               C50597 * C50757 * C50915 -
           (C20007 * C3263 + C20238 + C20238 + C19999 * C3269 + C20005 * C1540 +
            C20239 + C20239 + C19998 * C1548 + C20003 * C867 + C20240 + C20240 +
            C19997 * C877 + C20001 * C449 + C20241 + C20241 + C19996 * C469) *
               C50597 * C50757 * C50916 +
           (C20001 * C450 + C20242 + C20242 + C19996 * C470 + C20003 * C1193 +
            C20243 + C20243 + C19997 * C1201 + C20005 * C2684 + C20244 +
            C20244 + C19998 * C2690 + C20007 * C3699 + C20245 + C20245 +
            C19999 * C3703) *
               C50597 * C50757 * C2067) *
              C50644 * C50860 +
          ((C20001 * C448 + C20246 + C20246 + C19996 * C468 + C20003 * C868 +
            C20247 + C20247 + C19997 * C878 + C20005 * C1539 + C20248 + C20248 +
            C19998 * C1547 + C20007 * C3264 + C20249 + C20249 +
            C19999 * C3270) *
               C50597 * C50757 * C50916 -
           (C20007 * C1078 + C20014 + C20014 + C19999 * C1086 + C20005 * C280 +
            C20015 + C20015 + C19998 * C300 + C20003 * C277 + C20016 + C20016 +
            C19997 * C297 + C20001 * C120 + C20017 + C20017 + C19996 * C134) *
               C50597 * C50757 * C50915 -
           (C20007 * C3698 + C20250 + C20250 + C19999 * C3702 + C20005 * C2685 +
            C20251 + C20251 + C19998 * C2691 + C20003 * C1192 + C20252 +
            C20252 + C19997 * C1200 + C20001 * C451 + C20253 + C20253 +
            C19996 * C471) *
               C50597 * C50757 * C2067) *
              C50644 * C50631)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
             C17158 + C17158 + C50793 * C298) *
                C17149 +
            (C17201 + C17202) * C17150 + C17209 * C17151) *
               C50757 * C50915 -
           (C17920 * C17151 + (C17609 + C17610) * C17150 +
            (C17154 * C867 + C17571 + C17571 + C50793 * C877 + C17152 * C449 +
             C17572 + C17572 + C17147 * C469) *
                C17149) *
               C50757 * C50916 +
           ((C17152 * C450 + C17573 + C17573 + C17147 * C470 + C17154 * C1193 +
             C17574 + C17574 + C50793 * C1201) *
                C17149 +
            (C17611 + C17612) * C17150 + (C17613 + C17614) * C17151) *
               C50757 * C2067) *
              C50644 * C50860 +
          (((C17610 + C17609) * C17149 + (C17608 + C17607) * C17150 +
            (C17931 + C17932) * C17151) *
               C50757 * C50916 -
           (C17210 * C17151 + (C17204 + C17203) * C17150 +
            (C17202 + C17201) * C17149) *
               C50757 * C50915 -
           ((C17154 * C1190 + C17589 + C17589 + C50793 * C1198 + C17152 * C453 +
             C17590 + C17590 + C17147 * C473) *
                C17151 +
            (C17614 + C17613) * C17150 + (C17612 + C17611) * C17149) *
               C50757 * C2067) *
              C50644 * C50631)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
             C17158 + C17158 + C50793 * C298) *
                C50597 * C5200 +
            (C22232 + C22233) * C50597 * C5201 + C22241 * C5202) *
               C50915 -
           (C24081 * C5202 + (C22235 + C22234) * C50597 * C5201 +
            (C22233 + C22232) * C50597 * C5200) *
               C50916 +
           (C22241 * C5200 + (C22237 + C22236) * C50597 * C5201 +
            (C24086 + C24087) * C50597 * C5202) *
               C2067) *
              C50644 * C50860 +
          (((C17610 + C17609) * C50597 * C5200 +
            (C17611 + C17612) * C50597 * C5201 +
            (C22238 + C22239) * C50597 * C5202) *
               C50916 -
           (C22223 * C5202 + (C17609 + C17610) * C50597 * C5201 +
            (C17202 + C17201) * C50597 * C5200) *
               C50915 -
           ((C17154 * C6487 + C22213 + C22213 + C50793 * C6491 +
             C17152 * C5514 + C22214 + C22214 + C17147 * C5520) *
                C50597 * C5202 +
            (C22239 + C22238) * C50597 * C5201 + C22223 * C5200) *
               C2067) *
              C50644 * C50631)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
             C17158 + C17158 + C50793 * C298) *
                C17149 +
            (C17201 + C17202) * C17150 + C17209 * C17151) *
               C50757 * C1651 -
           (C17920 * C17151 + (C17609 + C17610) * C17150 +
            (C17154 * C867 + C17571 + C17571 + C50793 * C877 + C17152 * C449 +
             C17572 + C17572 + C17147 * C469) *
                C17149) *
               C50757 * C50724) *
              C270 +
          (((C17152 * C867 + C18127 + C18127 + C17147 * C877 + C17154 * C1540 +
             C18128 + C18128 + C50793 * C1548) *
                C17149 +
            (C18151 + C18152) * C17150 + (C18153 + C18154) * C17151) *
               C50757 * C50724 -
           (C17761 * C17151 + (C17407 + C17408) * C17150 +
            (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
             C17370 + C17370 + C17147 * C298) *
                C17149) *
               C50757 * C1651) *
              C271 +
          (((C17152 * C279 + C17371 + C17371 + C17147 * C299 + C17154 * C1079 +
             C17372 + C17372 + C50793 * C1087) *
                C17149 +
            (C17409 + C17410) * C17150 + (C17411 + C17412) * C17151) *
               C50757 * C1651 -
           ((C17154 * C3265 + C19043 + C19043 + C50793 * C3271 +
             C17152 * C1538 + C19044 + C19044 + C17147 * C1546) *
                C17151 +
            (C17154 * C3264 + C19045 + C19045 + C50793 * C3270 +
             C17152 * C1539 + C19046 + C19046 + C17147 * C1547) *
                C17150 +
            (C17154 * C3263 + C19047 + C19047 + C50793 * C3269 +
             C17152 * C1540 + C19048 + C19048 + C17147 * C1548) *
                C17149) *
               C50757 * C50724) *
              C272) *
         C50625) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
             C17158 + C17158 + C50793 * C298) *
                C17149 +
            (C17201 + C17202) * C17150 + C17209 * C17151) *
               C50757 * C1651 -
           (C17920 * C17151 + (C17609 + C17610) * C17150 +
            (C17154 * C867 + C17571 + C17571 + C50793 * C877 + C17152 * C449 +
             C17572 + C17572 + C17147 * C469) *
                C17149) *
               C50757 * C50724) *
              C50644 * C1002 +
          (((C17610 + C17609) * C17149 + (C17608 + C17607) * C17150 +
            (C17931 + C17932) * C17151) *
               C50757 * C50724 -
           (C17210 * C17151 + (C17204 + C17203) * C17150 +
            (C17202 + C17201) * C17149) *
               C50757 * C1651) *
              C50644 * C1003 +
          ((C17209 * C17149 + (C17206 + C17205) * C17150 +
            (C17207 + C17208) * C17151) *
               C50757 * C1651 -
           ((C17154 * C871 + C17925 + C17925 + C50793 * C881 + C17152 * C454 +
             C17926 + C17926 + C17147 * C474) *
                C17151 +
            (C17932 + C17931) * C17150 + C17920 * C17149) *
               C50757 * C50724) *
              C50644 * C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C20001 * C119 + C20010 + C20010 + C19996 * C133 + C20003 * C278 +
            C20011 + C20011 + C19997 * C298 + C20005 * C279 + C20012 + C20012 +
            C19998 * C299 + C20007 * C1079 + C20013 + C20013 + C19999 * C1087) *
               C50597 * C50757 * C1651 -
           (C20007 * C3263 + C20238 + C20238 + C19999 * C3269 + C20005 * C1540 +
            C20239 + C20239 + C19998 * C1548 + C20003 * C867 + C20240 + C20240 +
            C19997 * C877 + C20001 * C449 + C20241 + C20241 + C19996 * C469) *
               C50597 * C50757 * C50724) *
              C50644 * C1002 +
          ((C20001 * C448 + C20246 + C20246 + C19996 * C468 + C20003 * C868 +
            C20247 + C20247 + C19997 * C878 + C20005 * C1539 + C20248 + C20248 +
            C19998 * C1547 + C20007 * C3264 + C20249 + C20249 +
            C19999 * C3270) *
               C50597 * C50757 * C50724 -
           (C20007 * C1078 + C20014 + C20014 + C19999 * C1086 + C20005 * C280 +
            C20015 + C20015 + C19998 * C300 + C20003 * C277 + C20016 + C20016 +
            C19997 * C297 + C20001 * C120 + C20017 + C20017 + C19996 * C134) *
               C50597 * C50757 * C1651) *
              C50644 * C1003 +
          ((C20001 * C121 + C20018 + C20018 + C19996 * C135 + C20003 * C276 +
            C20019 + C20019 + C19997 * C296 + C20005 * C281 + C20020 + C20020 +
            C19998 * C301 + C20007 * C1077 + C20021 + C20021 + C19999 * C1085) *
               C50597 * C50757 * C1651 -
           (C20007 * C3265 + C20454 + C20454 + C19999 * C3271 + C20005 * C1538 +
            C20455 + C20455 + C19998 * C1546 + C20003 * C869 + C20456 + C20456 +
            C19997 * C879 + C20001 * C447 + C20457 + C20457 + C19996 * C467) *
               C50597 * C50757 * C50724) *
              C50644 * C1004)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C20001 * C119 + C20010 + C20010 + C19996 * C133 + C20003 * C278 +
            C20011 + C20011 + C19997 * C298 + C20005 * C279 + C20012 + C20012 +
            C19998 * C299 + C20007 * C1079 + C20013 + C20013 + C19999 * C1087) *
               C50597 * C50757 * C1651 -
           (C20007 * C3263 + C20238 + C20238 + C19999 * C3269 + C20005 * C1540 +
            C20239 + C20239 + C19998 * C1548 + C20003 * C867 + C20240 + C20240 +
            C19997 * C877 + C20001 * C449 + C20241 + C20241 + C19996 * C469) *
               C50597 * C50757 * C50724) *
              C270 +
          ((C20001 * C867 + C20588 + C20588 + C19996 * C877 + C20003 * C1540 +
            C20589 + C20589 + C19997 * C1548 + C20005 * C3263 + C20590 +
            C20590 + C19998 * C3269 + C20007 * C4197 + C20591 + C20591 +
            C19999 * C4201) *
               C50597 * C50757 * C50724 -
           (C20007 * C2481 + C20124 + C20124 + C19999 * C2487 + C20005 * C1079 +
            C20125 + C20125 + C19998 * C1087 + C20003 * C279 + C20126 + C20126 +
            C19997 * C299 + C20001 * C278 + C20127 + C20127 + C19996 * C298) *
               C50597 * C50757 * C1651) *
              C271 +
          ((C20001 * C279 + C20128 + C20128 + C19996 * C299 + C20003 * C1079 +
            C20129 + C20129 + C19997 * C1087 + C20005 * C2481 + C20130 +
            C20130 + C19998 * C2487 + C20007 * C3541 + C20131 + C20131 +
            C19999 * C3545) *
               C50597 * C50757 * C1651 -
           (C20007 * C21197 + C21201 + C21201 + C19999 * C21199 +
            C20005 * C4197 + C21202 + C21202 + C19998 * C4201 + C20003 * C3263 +
            C21203 + C21203 + C19997 * C3269 + C20001 * C1540 + C21204 +
            C21204 + C19996 * C1548) *
               C50597 * C50757 * C50724) *
              C272) *
         C50625) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
             C17158 + C17158 + C50793 * C298) *
                C50597 * C5200 +
            (C22232 + C22233) * C50597 * C5201 + C22241 * C5202) *
               C1651 -
           ((C22236 + C22237) * C50597 * C5202 +
            (C22235 + C22234) * C50597 * C5201 +
            (C22233 + C22232) * C50597 * C5200) *
               C50724) *
              C50644 * C1002 +
          (((C17610 + C17609) * C50597 * C5200 +
            (C17611 + C17612) * C50597 * C5201 +
            (C22238 + C22239) * C50597 * C5202) *
               C50724 -
           (C22223 * C5202 + (C17609 + C17610) * C50597 * C5201 +
            (C17202 + C17201) * C50597 * C5200) *
               C1651) *
              C50644 * C1003 +
          ((C17209 * C50597 * C5200 + (C17608 + C17607) * C50597 * C5201 +
            (C17613 + C17614) * C50597 * C5202) *
               C1651 -
           ((C17154 * C6064 + C19439 + C19439 + C50793 * C6066 +
             C17152 * C1822 + C19440 + C19440 + C17147 * C1830) *
                C50597 * C5202 +
            (C17614 + C17613) * C50597 * C5201 + C17920 * C50597 * C5200) *
               C50724) *
              C50644 * C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
             C17158 + C17158 + C50793 * C298) *
                C50597 * C5200 +
            (C22232 + C22233) * C50597 * C5201 + C22241 * C5202) *
               C1651 -
           ((C22236 + C22237) * C50597 * C5202 +
            (C22235 + C22234) * C50597 * C5201 +
            (C22233 + C22232) * C50597 * C5200) *
               C50724) *
              C270 +
          (((C22756 + C22757) * C50597 * C5200 +
            (C22758 + C22759) * C50597 * C5201 +
            (C23171 + C23172) * C50597 * C5202) *
               C50724 -
           (C23168 * C5202 + (C22757 + C22756) * C50597 * C5201 +
            (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
             C17370 + C17370 + C17147 * C298) *
                C50597 * C5200) *
               C1651) *
              C271 +
          (((C17152 * C279 + C17371 + C17371 + C17147 * C299 + C17154 * C1079 +
             C17372 + C17372 + C50793 * C1087) *
                C50597 * C5200 +
            (C23677 + C23678) * C50597 * C5201 +
            (C23679 + C23680) * C50597 * C5202) *
               C1651 -
           ((C17154 * C21466 + C23667 + C23667 + C50793 * C21468 +
             C17152 * C4600 + C23668 + C23668 + C17147 * C4608) *
                C50597 * C5202 +
            (C23680 + C23679) * C50597 * C5201 +
            (C23678 + C23677) * C50597 * C5200) *
               C50724) *
              C272) *
         C50625) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
              C17158 + C17158 + C50793 * C298) *
                 C50853 +
             (C17201 + C17202) * C50602) *
                C50882 +
            ((C22232 + C22233) * C50853 + C27981 * C50602) * C50821) *
               C50660 * C50868 -
           (((C18152 + C18151) * C50602 + (C22757 + C22756) * C50853) * C50821 +
            ((C17407 + C17408) * C50602 +
             (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
              C17370 + C17370 + C17147 * C298) *
                 C50853) *
                C50882) *
               C50660 * C50696) *
              C50911 +
          ((((C17408 + C17407) * C50853 + (C17406 + C17405) * C50602) * C50882 +
            ((C18151 + C18152) * C50853 + (C18153 + C18154) * C50602) *
                C50821) *
               C50660 * C50696 -
           ((C17920 * C50602 + C27982 * C50853) * C50821 +
            ((C17204 + C17203) * C50602 + (C17202 + C17201) * C50853) *
                C50882) *
               C50660 * C50868) *
              C50912 +
          (((C17209 * C50853 + (C17206 + C17205) * C50602) * C50882 +
            ((C17608 + C17607) * C50853 + (C17931 + C17932) * C50602) *
                C50821) *
               C50660 * C50868 -
           (((C17154 * C1537 + C18141 + C18141 + C50793 * C1545 +
              C17152 * C870 + C18142 + C18142 + C17147 * C880) *
                 C50602 +
             (C18154 + C18153) * C50853) *
                C50821 +
            ((C17773 + C17772) * C50602 + C17761 * C50853) * C50882) *
               C50660 * C50696) *
              C618)) /
        (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
               C17158 + C17158 + C50793 * C298) *
                  C50853 +
              (C17201 + C17202) * C50602) *
                 C50882 +
             ((C22232 + C22233) * C50853 + C27981 * C50602) * C50821) *
                C50869 -
            ((C22212 * C50602 + (C22235 + C22234) * C50853) * C50821 +
             (C27982 * C50602 + (C22233 + C22232) * C50853) * C50882) *
                C50724) *
               C50868 +
           ((((C22756 + C22757) * C50853 + C28631 * C50602) * C50882 +
             ((C22758 + C22759) * C50853 + (C22760 + C22761) * C50602) *
                 C50821) *
                C50724 -
            ((C28632 * C50602 + (C22757 + C22756) * C50853) * C50821 +
             ((C17407 + C17408) * C50602 +
              (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
               C17370 + C17370 + C17147 * C298) *
                  C50853) *
                 C50882) *
                C50869) *
               C50696) *
              C273 +
          ((((C27981 * C50853 + C28372 * C50602) * C50882 +
             (C27983 * C50853 + (C17613 + C17614) * C50602) * C50821) *
                C50724 -
            ((C17920 * C50602 + C27982 * C50853) * C50821 +
             ((C17204 + C17203) * C50602 + (C17202 + C17201) * C50853) *
                 C50882) *
                C50869) *
               C50868 +
           ((((C17408 + C17407) * C50853 + (C17406 + C17405) * C50602) *
                 C50882 +
             (C28631 * C50853 + (C18153 + C18154) * C50602) * C50821) *
                C50869 -
            (((C17154 * C2686 + C18551 + C18551 + C50793 * C2692 +
               C17152 * C1191 + C18552 + C18552 + C17147 * C1199) *
                  C50602 +
              (C22761 + C22760) * C50853) *
                 C50821 +
             ((C18154 + C18153) * C50602 + C28632 * C50853) * C50882) *
                C50724) *
               C50696) *
              C50631)) /
        (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
              C17158 + C17158 + C50793 * C298) *
                 C50853 +
             (C17201 + C17202) * C50602) *
                C50882 +
            ((C22232 + C22233) * C50853 + (C17610 + C17609) * C50602) *
                C50821) *
               C50660 * C270 -
           (((C18152 + C18151) * C50602 + (C22757 + C22756) * C50853) * C50821 +
            ((C17407 + C17408) * C50602 +
             (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
              C17370 + C17370 + C17147 * C298) *
                 C50853) *
                C50882) *
               C50660 * C271 +
           (((C17152 * C279 + C17371 + C17371 + C17147 * C299 + C17154 * C1079 +
              C17372 + C17372 + C50793 * C1087) *
                 C50853 +
             (C17409 + C17410) * C50602) *
                C50882 +
            ((C23677 + C23678) * C50853 + (C27785 + C27786) * C50602) *
                C50821) *
               C50660 * C272) *
              C273 +
          ((((C17408 + C17407) * C50853 + (C17406 + C17405) * C50602) * C50882 +
            ((C18151 + C18152) * C50853 + (C18153 + C18154) * C50602) *
                C50821) *
               C50660 * C271 -
           ((C17920 * C50602 + (C17609 + C17610) * C50853) * C50821 +
            ((C17204 + C17203) * C50602 + (C17202 + C17201) * C50853) *
                C50882) *
               C50660 * C270 -
           (((C17154 * C3265 + C19043 + C19043 + C50793 * C3271 +
              C17152 * C1538 + C19044 + C19044 + C17147 * C1546) *
                 C50602 +
             (C27786 + C27785) * C50853) *
                C50821 +
            ((C17412 + C17411) * C50602 + (C17410 + C17409) * C50853) *
                C50882) *
               C50660 * C272) *
              C50631)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
             C17158 + C17158 + C50793 * C298) *
                C50853 +
            (C17201 + C17202) * C50602) *
               C50882 +
           ((C22232 + C22233) * C50853 + (C17610 + C17609) * C50602) * C50821) *
              C50660 * C50644 * C113 -
          ((C17920 * C50602 + (C17609 + C17610) * C50853) * C50821 +
           ((C17204 + C17203) * C50602 + (C17202 + C17201) * C50853) * C50882) *
              C50660 * C50644 * C114 +
          ((C17209 * C50853 + (C17206 + C17205) * C50602) * C50882 +
           ((C17608 + C17607) * C50853 + (C17931 + C17932) * C50602) * C50821) *
              C50660 * C50644 * C115 -
          (((C17154 * C871 + C17925 + C17925 + C50793 * C881 + C17152 * C454 +
             C17926 + C17926 + C17147 * C474) *
                C50602 +
            (C17932 + C17931) * C50853) *
               C50821 +
           ((C17208 + C17207) * C50602 + C17210 * C50853) * C50882) *
              C50660 * C50644 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
              C17158 + C17158 + C50793 * C298) *
                 C50853 +
             (C17201 + C17202) * C50602) *
                C50882 +
            ((C22232 + C22233) * C50853 + C27981 * C50602) * C50821) *
               C443 -
           ((C22212 * C50602 + (C22235 + C22234) * C50853) * C50821 +
            (C27982 * C50602 + (C22233 + C22232) * C50853) * C50882) *
               C444 +
           ((C22240 * C50853 + C27983 * C50602) * C50882 +
            ((C22237 + C22236) * C50853 + (C22238 + C22239) * C50602) *
                C50821) *
               C445) *
              C50644 * C273 +
          (((C27981 * C50853 + (C17608 + C17607) * C50602) * C50882 +
            (C27983 * C50853 + (C17613 + C17614) * C50602) * C50821) *
               C444 -
           ((C17920 * C50602 + C27982 * C50853) * C50821 +
            ((C17204 + C17203) * C50602 + (C17202 + C17201) * C50853) *
                C50882) *
               C443 -
           (((C17154 * C6064 + C19439 + C19439 + C50793 * C6066 +
              C17152 * C1822 + C19440 + C19440 + C17147 * C1830) *
                 C50602 +
             (C22239 + C22238) * C50853) *
                C50821 +
            ((C17614 + C17613) * C50602 + C22212 * C50853) * C50882) *
               C445) *
              C50644 * C50631)) /
            (p * q * std::sqrt(p + q));
    d2ee[123] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C17152 * C119 + C17157 + C17157 + C17147 * C133 +
                       C17154 * C278 + C17158 + C17158 + C50793 * C298) *
                          C50853 +
                      (C17201 + C17202) * C50602) *
                         C50882 +
                     ((C22232 + C22233) * C50853 + C27981 * C50602) * C50821) *
                        C50869 -
                    ((C22212 * C50602 + (C22235 + C22234) * C50853) * C50821 +
                     (C27982 * C50602 + (C22233 + C22232) * C50853) * C50882) *
                        C50724) *
                       C50644 * C50911 +
                   (((C27981 * C50853 + C28372 * C50602) * C50882 +
                     (C27983 * C50853 + (C17613 + C17614) * C50602) * C50821) *
                        C50724 -
                    ((C17920 * C50602 + C27982 * C50853) * C50821 +
                     ((C17204 + C17203) * C50602 + (C17202 + C17201) * C50853) *
                         C50882) *
                        C50869) *
                       C50644 * C50912 +
                   (((C17209 * C50853 + (C17206 + C17205) * C50602) * C50882 +
                     (C28372 * C50853 + (C17931 + C17932) * C50602) * C50821) *
                        C50869 -
                    (((C17154 * C1190 + C17589 + C17589 + C50793 * C1198 +
                       C17152 * C453 + C17590 + C17590 + C17147 * C473) *
                          C50602 +
                      (C17614 + C17613) * C50853) *
                         C50821 +
                     ((C17932 + C17931) * C50602 + C17920 * C50853) * C50882) *
                        C50724) *
                       C50644 * C618)) /
                 (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
             C17158 + C17158 + C50793 * C298) *
                C50853 +
            (C17201 + C17202) * C50602) *
               C50882 +
           ((C22232 + C22233) * C50853 + (C17610 + C17609) * C50602) * C50821) *
              C50660 * C50644 * C113 -
          ((C17920 * C50602 + (C17609 + C17610) * C50853) * C50821 +
           ((C17204 + C17203) * C50602 + (C17202 + C17201) * C50853) * C50882) *
              C50660 * C50644 * C114 +
          ((C17209 * C50853 + (C17206 + C17205) * C50602) * C50882 +
           ((C17608 + C17607) * C50853 + (C17931 + C17932) * C50602) * C50821) *
              C50660 * C50644 * C115 -
          (((C17154 * C871 + C17925 + C17925 + C50793 * C881 + C17152 * C454 +
             C17926 + C17926 + C17147 * C474) *
                C50602 +
            (C17932 + C17931) * C50853) *
               C50821 +
           ((C17208 + C17207) * C50602 + C17210 * C50853) * C50882) *
              C50660 * C50644 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
              C17158 + C17158 + C50793 * C298) *
                 C50853 +
             (C17201 + C17202) * C50602) *
                C50882 +
            ((C22232 + C22233) * C50853 + (C17610 + C17609) * C50602) *
                C50821) *
               C50660 * C270 -
           (((C18152 + C18151) * C50602 + (C22757 + C22756) * C50853) * C50821 +
            ((C17407 + C17408) * C50602 +
             (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
              C17370 + C17370 + C17147 * C298) *
                 C50853) *
                C50882) *
               C50660 * C271 +
           (((C17152 * C279 + C17371 + C17371 + C17147 * C299 + C17154 * C1079 +
              C17372 + C17372 + C50793 * C1087) *
                 C50853 +
             (C17409 + C17410) * C50602) *
                C50882 +
            ((C23677 + C23678) * C50853 + (C27785 + C27786) * C50602) *
                C50821) *
               C50660 * C272) *
              C273 +
          ((((C17408 + C17407) * C50853 + (C17406 + C17405) * C50602) * C50882 +
            ((C18151 + C18152) * C50853 + (C18153 + C18154) * C50602) *
                C50821) *
               C50660 * C271 -
           ((C17920 * C50602 + (C17609 + C17610) * C50853) * C50821 +
            ((C17204 + C17203) * C50602 + (C17202 + C17201) * C50853) *
                C50882) *
               C50660 * C270 -
           (((C17154 * C3265 + C19043 + C19043 + C50793 * C3271 +
              C17152 * C1538 + C19044 + C19044 + C17147 * C1546) *
                 C50602 +
             (C27786 + C27785) * C50853) *
                C50821 +
            ((C17412 + C17411) * C50602 + (C17410 + C17409) * C50853) *
                C50882) *
               C50660 * C272) *
              C50631)) /
            (p * q * std::sqrt(p + q));
    d2ee[125] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
              C17158 + C17158 + C50793 * C298) *
                 C50853 +
             (C17201 + C17202) * C50602) *
                C50882 +
            ((C22232 + C22233) * C50853 + C27981 * C50602) * C50821) *
               C50660 * C50913 -
           ((C28632 * C50602 + (C22757 + C22756) * C50853) * C50821 +
            ((C17407 + C17408) * C50602 +
             (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
              C17370 + C17370 + C17147 * C298) *
                 C50853) *
                C50882) *
               C50660 * C50914 +
           (((C17152 * C279 + C17371 + C17371 + C17147 * C299 + C17154 * C1079 +
              C17372 + C17372 + C50793 * C1087) *
                 C50853 +
             (C17409 + C17410) * C50602) *
                C50882 +
            ((C23677 + C23678) * C50853 + (C27785 + C27786) * C50602) *
                C50821) *
               C50660 * C1306) *
              C50860 +
          ((((C17408 + C17407) * C50853 + (C17406 + C17405) * C50602) * C50882 +
            (C28631 * C50853 + (C18153 + C18154) * C50602) * C50821) *
               C50660 * C50914 -
           ((C17920 * C50602 + C27982 * C50853) * C50821 +
            ((C17204 + C17203) * C50602 + (C17202 + C17201) * C50853) *
                C50882) *
               C50660 * C50913 -
           (((C17154 * C3265 + C19043 + C19043 + C50793 * C3271 +
              C17152 * C1538 + C19044 + C19044 + C17147 * C1546) *
                 C50602 +
             (C27786 + C27785) * C50853) *
                C50821 +
            ((C17412 + C17411) * C50602 + (C17410 + C17409) * C50853) *
                C50882) *
               C50660 * C1306) *
              C50631)) /
        (p * q * std::sqrt(p + q));
    d2ee[126] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C17152 * C119 + C17157 + C17157 + C17147 * C133 +
                       C17154 * C278 + C17158 + C17158 + C50793 * C298) *
                          C50853 +
                      (C17201 + C17202) * C50602) *
                         C50882 +
                     ((C22232 + C22233) * C50853 + C27981 * C50602) * C50821) *
                        C50869 -
                    ((C22212 * C50602 + (C22235 + C22234) * C50853) * C50821 +
                     (C27982 * C50602 + (C22233 + C22232) * C50853) * C50882) *
                        C50724) *
                       C50913 +
                   ((((C22756 + C22757) * C50853 + C28631 * C50602) * C50882 +
                     ((C22758 + C22759) * C50853 + (C22760 + C22761) * C50602) *
                         C50821) *
                        C50724 -
                    ((C28632 * C50602 + (C22757 + C22756) * C50853) * C50821 +
                     ((C17407 + C17408) * C50602 +
                      (C17154 * C279 + C17369 + C17369 + C50793 * C299 +
                       C17152 * C278 + C17370 + C17370 + C17147 * C298) *
                          C50853) *
                         C50882) *
                        C50869) *
                       C50914 +
                   ((((C17152 * C279 + C17371 + C17371 + C17147 * C299 +
                       C17154 * C1079 + C17372 + C17372 + C50793 * C1087) *
                          C50853 +
                      (C17409 + C17410) * C50602) *
                         C50882 +
                     ((C23677 + C23678) * C50853 + (C27785 + C27786) * C50602) *
                         C50821) *
                        C50869 -
                    (((C17154 * C3698 + C22046 + C22046 + C50793 * C3702 +
                       C17152 * C2685 + C22047 + C22047 + C17147 * C2691) *
                          C50602 +
                      (C23680 + C23679) * C50853) *
                         C50821 +
                     ((C27786 + C27785) * C50602 + (C23678 + C23677) * C50853) *
                         C50882) *
                        C50724) *
                       C1306) *
                  C50625) /
                 (p * q * std::sqrt(p + q));
    d2ee[127] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
             C17158 + C17158 + C50793 * C298) *
                C50853 +
            (C17201 + C17202) * C50602) *
               C50882 +
           ((C22232 + C22233) * C50853 + C27981 * C50602) * C50821) *
              C50660 * C1071 -
          ((C28632 * C50602 + (C22757 + C22756) * C50853) * C50821 +
           ((C17407 + C17408) * C50602 +
            (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
             C17370 + C17370 + C17147 * C298) *
                C50853) *
               C50882) *
              C50660 * C1072 +
          (((C17152 * C279 + C17371 + C17371 + C17147 * C299 + C17154 * C1079 +
             C17372 + C17372 + C50793 * C1087) *
                C50853 +
            (C17409 + C17410) * C50602) *
               C50882 +
           ((C23677 + C23678) * C50853 + (C27785 + C27786) * C50602) * C50821) *
              C50660 * C1073 -
          (((C17154 * C4196 + C28957 + C28957 + C50793 * C4200 +
             C17152 * C3264 + C28958 + C28958 + C17147 * C3270) *
                C50602 +
            (C17154 * C4197 + C23008 + C23008 + C50793 * C4201 +
             C17152 * C3263 + C23009 + C23009 + C17147 * C3269) *
                C50853) *
               C50821 +
           ((C17154 * C2482 + C18401 + C18401 + C50793 * C2488 +
             C17152 * C1078 + C18402 + C18402 + C17147 * C1086) *
                C50602 +
            (C17154 * C2481 + C18403 + C18403 + C50793 * C2487 +
             C17152 * C1079 + C18404 + C18404 + C17147 * C1087) *
                C50853) *
               C50882) *
              C50660 * C1074) *
         C50625) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
              C17158 + C17158 + C50793 * C298) *
                 C50853 +
             (C17201 + C17202) * C50602) *
                C50882 +
            ((C22232 + C22233) * C50853 + C27981 * C50602) * C50821) *
               C50660 * C1000 -
           ((C28632 * C50602 + (C22757 + C22756) * C50853) * C50821 +
            ((C17407 + C17408) * C50602 +
             (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
              C17370 + C17370 + C17147 * C298) *
                 C50853) *
                C50882) *
               C50660 * C50696) *
              C1002 +
          ((((C17408 + C17407) * C50853 + (C17406 + C17405) * C50602) * C50882 +
            (C28631 * C50853 + (C18153 + C18154) * C50602) * C50821) *
               C50660 * C50696 -
           ((C17920 * C50602 + C27982 * C50853) * C50821 +
            ((C17204 + C17203) * C50602 + (C17202 + C17201) * C50853) *
                C50882) *
               C50660 * C1000) *
              C1003 +
          (((C17209 * C50853 + (C17206 + C17205) * C50602) * C50882 +
            (C28372 * C50853 + (C17931 + C17932) * C50602) * C50821) *
               C50660 * C1000 -
           (((C17154 * C1537 + C18141 + C18141 + C50793 * C1545 +
              C17152 * C870 + C18142 + C18142 + C17147 * C880) *
                 C50602 +
             (C18154 + C18153) * C50853) *
                C50821 +
            ((C17773 + C17772) * C50602 + C17761 * C50853) * C50882) *
               C50660 * C50696) *
              C1004)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
              C17158 + C17158 + C50793 * C298) *
                 C50853 +
             (C17201 + C17202) * C50602) *
                C50882 +
            ((C22232 + C22233) * C50853 + C27981 * C50602) * C50821) *
               C443 -
           ((C22212 * C50602 + (C22235 + C22234) * C50853) * C50821 +
            (C27982 * C50602 + (C22233 + C22232) * C50853) * C50882) *
               C444 +
           ((C22240 * C50853 + C27983 * C50602) * C50882 +
            ((C22237 + C22236) * C50853 + (C22238 + C22239) * C50602) *
                C50821) *
               C445) *
              C1000 +
          ((((C22756 + C22757) * C50853 + C28631 * C50602) * C50882 +
            ((C22758 + C22759) * C50853 + (C22760 + C22761) * C50602) *
                C50821) *
               C444 -
           ((C28632 * C50602 + (C22757 + C22756) * C50853) * C50821 +
            ((C17407 + C17408) * C50602 +
             (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
              C17370 + C17370 + C17147 * C298) *
                 C50853) *
                C50882) *
               C443 -
           (((C17154 * C4598 + C22742 + C22742 + C50793 * C4606 +
              C17152 * C4599 + C22743 + C22743 + C17147 * C4607) *
                 C50602 +
             (C23172 + C23171) * C50853) *
                C50821 +
            ((C22761 + C22760) * C50602 + C23163 * C50853) * C50882) *
               C445) *
              C50696) *
         C50625) /
            (p * q * std::sqrt(p + q));
    d2ee[128] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
               C17158 + C17158 + C50793 * C298) *
                  C50853 +
              (C17201 + C17202) * C50602) *
                 C50882 +
             ((C22232 + C22233) * C50853 + C27981 * C50602) * C50821) *
                C50869 -
            ((C22212 * C50602 + (C22235 + C22234) * C50853) * C50821 +
             (C27982 * C50602 + (C22233 + C22232) * C50853) * C50882) *
                C50724) *
               C1000 +
           ((((C22756 + C22757) * C50853 + C28631 * C50602) * C50882 +
             ((C22758 + C22759) * C50853 + (C22760 + C22761) * C50602) *
                 C50821) *
                C50724 -
            ((C28632 * C50602 + (C22757 + C22756) * C50853) * C50821 +
             ((C17407 + C17408) * C50602 +
              (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
               C17370 + C17370 + C17147 * C298) *
                  C50853) *
                 C50882) *
                C50869) *
               C50696) *
              C50860 +
          ((((C27981 * C50853 + C28372 * C50602) * C50882 +
             (C27983 * C50853 + (C17613 + C17614) * C50602) * C50821) *
                C50724 -
            ((C17920 * C50602 + C27982 * C50853) * C50821 +
             ((C17204 + C17203) * C50602 + (C17202 + C17201) * C50853) *
                 C50882) *
                C50869) *
               C1000 +
           ((((C17408 + C17407) * C50853 + (C17406 + C17405) * C50602) *
                 C50882 +
             (C28631 * C50853 + (C18153 + C18154) * C50602) * C50821) *
                C50869 -
            (((C17154 * C2686 + C18551 + C18551 + C50793 * C2692 +
               C17152 * C1191 + C18552 + C18552 + C17147 * C1199) *
                  C50602 +
              (C22761 + C22760) * C50853) *
                 C50821 +
             ((C18154 + C18153) * C50602 + C28632 * C50853) * C50882) *
                C50724) *
               C50696) *
              C50631)) /
        (p * q * std::sqrt(p + q));
    d2ee[129] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
              C17158 + C17158 + C50793 * C298) *
                 C50853 +
             (C17201 + C17202) * C50602) *
                C50882 +
            ((C22232 + C22233) * C50853 + C27981 * C50602) * C50821) *
               C50660 * C1000 -
           ((C28632 * C50602 + (C22757 + C22756) * C50853) * C50821 +
            ((C17407 + C17408) * C50602 +
             (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
              C17370 + C17370 + C17147 * C298) *
                 C50853) *
                C50882) *
               C50660 * C50696) *
              C1002 +
          ((((C17408 + C17407) * C50853 + (C17406 + C17405) * C50602) * C50882 +
            (C28631 * C50853 + (C18153 + C18154) * C50602) * C50821) *
               C50660 * C50696 -
           ((C17920 * C50602 + C27982 * C50853) * C50821 +
            ((C17204 + C17203) * C50602 + (C17202 + C17201) * C50853) *
                C50882) *
               C50660 * C1000) *
              C1003 +
          (((C17209 * C50853 + (C17206 + C17205) * C50602) * C50882 +
            (C28372 * C50853 + (C17931 + C17932) * C50602) * C50821) *
               C50660 * C1000 -
           (((C17154 * C1537 + C18141 + C18141 + C50793 * C1545 +
              C17152 * C870 + C18142 + C18142 + C17147 * C880) *
                 C50602 +
             (C18154 + C18153) * C50853) *
                C50821 +
            ((C17773 + C17772) * C50602 + C17761 * C50853) * C50882) *
               C50660 * C50696) *
              C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
             C17158 + C17158 + C50793 * C298) *
                C50853 +
            (C17201 + C17202) * C50602) *
               C50882 +
           ((C22232 + C22233) * C50853 + C27981 * C50602) * C50821) *
              C50660 * C1071 -
          ((C28632 * C50602 + (C22757 + C22756) * C50853) * C50821 +
           ((C17407 + C17408) * C50602 +
            (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
             C17370 + C17370 + C17147 * C298) *
                C50853) *
               C50882) *
              C50660 * C1072 +
          (((C17152 * C279 + C17371 + C17371 + C17147 * C299 + C17154 * C1079 +
             C17372 + C17372 + C50793 * C1087) *
                C50853 +
            (C17409 + C17410) * C50602) *
               C50882 +
           ((C23677 + C23678) * C50853 + (C27785 + C27786) * C50602) * C50821) *
              C50660 * C1073 -
          (((C17154 * C4196 + C28957 + C28957 + C50793 * C4200 +
             C17152 * C3264 + C28958 + C28958 + C17147 * C3270) *
                C50602 +
            (C17154 * C4197 + C23008 + C23008 + C50793 * C4201 +
             C17152 * C3263 + C23009 + C23009 + C17147 * C3269) *
                C50853) *
               C50821 +
           ((C17154 * C2482 + C18401 + C18401 + C50793 * C2488 +
             C17152 * C1078 + C18402 + C18402 + C17147 * C1086) *
                C50602 +
            (C17154 * C2481 + C18403 + C18403 + C50793 * C2487 +
             C17152 * C1079 + C18404 + C18404 + C17147 * C1087) *
                C50853) *
               C50882) *
              C50660 * C1074) *
         C50625) /
            (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
               C17158 + C17158 + C50793 * C298) *
                  C50853 +
              (C17201 + C17202) * C50602) *
                 C50882 +
             ((C22232 + C22233) * C50853 + C27981 * C50602) * C50821) *
                C1651 -
            ((C22212 * C50602 + (C22235 + C22234) * C50853) * C50821 +
             (C27982 * C50602 + (C22233 + C22232) * C50853) * C50882) *
                C50724) *
               C50868 +
           ((((C22756 + C22757) * C50853 + C28631 * C50602) * C50882 +
             ((C22758 + C22759) * C50853 + (C22760 + C22761) * C50602) *
                 C50821) *
                C50724 -
            ((C28632 * C50602 + (C22757 + C22756) * C50853) * C50821 +
             ((C17407 + C17408) * C50602 +
              (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
               C17370 + C17370 + C17147 * C298) *
                  C50853) *
                 C50882) *
                C1651) *
               C50696) *
              C50860 +
          ((((C27981 * C50853 + C28372 * C50602) * C50882 +
             (C27983 * C50853 + (C17613 + C17614) * C50602) * C50821) *
                C50724 -
            ((C17920 * C50602 + C27982 * C50853) * C50821 +
             ((C17204 + C17203) * C50602 + (C17202 + C17201) * C50853) *
                 C50882) *
                C1651) *
               C50868 +
           ((((C17408 + C17407) * C50853 + (C17406 + C17405) * C50602) *
                 C50882 +
             (C28631 * C50853 + (C18153 + C18154) * C50602) * C50821) *
                C1651 -
            (((C17154 * C2686 + C18551 + C18551 + C50793 * C2692 +
               C17152 * C1191 + C18552 + C18552 + C17147 * C1199) *
                  C50602 +
              (C22761 + C22760) * C50853) *
                 C50821 +
             ((C18154 + C18153) * C50602 + C28632 * C50853) * C50882) *
                C50724) *
               C50696) *
              C50631)) /
        (p * q * std::sqrt(p + q));
    d2ee[131] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C17152 * C119 + C17157 + C17157 + C17147 * C133 +
                       C17154 * C278 + C17158 + C17158 + C50793 * C298) *
                          C50853 +
                      (C17201 + C17202) * C50602) *
                         C50882 +
                     ((C22232 + C22233) * C50853 + C27981 * C50602) * C50821) *
                        C50915 -
                    ((C22212 * C50602 + (C22235 + C22234) * C50853) * C50821 +
                     (C27982 * C50602 + (C22233 + C22232) * C50853) * C50882) *
                        C50916 +
                    ((C22240 * C50853 + C27983 * C50602) * C50882 +
                     ((C22237 + C22236) * C50853 + (C22238 + C22239) * C50602) *
                         C50821) *
                        C2067) *
                       C50868 +
                   ((((C22756 + C22757) * C50853 + C28631 * C50602) * C50882 +
                     ((C22758 + C22759) * C50853 + (C22760 + C22761) * C50602) *
                         C50821) *
                        C50916 -
                    ((C28632 * C50602 + (C22757 + C22756) * C50853) * C50821 +
                     ((C17407 + C17408) * C50602 +
                      (C17154 * C279 + C17369 + C17369 + C50793 * C299 +
                       C17152 * C278 + C17370 + C17370 + C17147 * C298) *
                          C50853) *
                         C50882) *
                        C50915 -
                    (((C17154 * C4598 + C22742 + C22742 + C50793 * C4606 +
                       C17152 * C4599 + C22743 + C22743 + C17147 * C4607) *
                          C50602 +
                      (C23172 + C23171) * C50853) *
                         C50821 +
                     ((C22761 + C22760) * C50602 + C23163 * C50853) * C50882) *
                        C2067) *
                       C50696) *
                  C50625) /
                 (p * q * std::sqrt(p + q));
    d2ee[132] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
              C17158 + C17158 + C50793 * C298) *
                 C50853 +
             (C17201 + C17202) * C50602) *
                C50882 +
            ((C22232 + C22233) * C50853 + C27981 * C50602) * C50821) *
               C1651 -
           ((C22212 * C50602 + (C22235 + C22234) * C50853) * C50821 +
            (C27982 * C50602 + (C22233 + C22232) * C50853) * C50882) *
               C50724) *
              C270 +
          ((((C22756 + C22757) * C50853 + C28631 * C50602) * C50882 +
            ((C22758 + C22759) * C50853 + (C22760 + C22761) * C50602) *
                C50821) *
               C50724 -
           ((C28632 * C50602 + (C22757 + C22756) * C50853) * C50821 +
            ((C17407 + C17408) * C50602 +
             (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
              C17370 + C17370 + C17147 * C298) *
                 C50853) *
                C50882) *
               C1651) *
              C271 +
          ((((C17152 * C279 + C17371 + C17371 + C17147 * C299 + C17154 * C1079 +
              C17372 + C17372 + C50793 * C1087) *
                 C50853 +
             (C17409 + C17410) * C50602) *
                C50882 +
            ((C23677 + C23678) * C50853 + (C27785 + C27786) * C50602) *
                C50821) *
               C1651 -
           (((C17154 * C3698 + C22046 + C22046 + C50793 * C3702 +
              C17152 * C2685 + C22047 + C22047 + C17147 * C2691) *
                 C50602 +
             (C23680 + C23679) * C50853) *
                C50821 +
            ((C27786 + C27785) * C50602 + (C23678 + C23677) * C50853) *
                C50882) *
               C50724) *
              C272) *
         C50625) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
              C17158 + C17158 + C50793 * C298) *
                 C50853 +
             (C17201 + C17202) * C50602) *
                C50882 +
            ((C22232 + C22233) * C50853 + C27981 * C50602) * C50821) *
               C1651 -
           ((C22212 * C50602 + (C22235 + C22234) * C50853) * C50821 +
            (C27982 * C50602 + (C22233 + C22232) * C50853) * C50882) *
               C50724) *
              C50644 * C1002 +
          (((C27981 * C50853 + C28372 * C50602) * C50882 +
            (C27983 * C50853 + (C17613 + C17614) * C50602) * C50821) *
               C50724 -
           ((C17920 * C50602 + C27982 * C50853) * C50821 +
            ((C17204 + C17203) * C50602 + (C17202 + C17201) * C50853) *
                C50882) *
               C1651) *
              C50644 * C1003 +
          (((C17209 * C50853 + (C17206 + C17205) * C50602) * C50882 +
            (C28372 * C50853 + (C17931 + C17932) * C50602) * C50821) *
               C1651 -
           (((C17154 * C1190 + C17589 + C17589 + C50793 * C1198 +
              C17152 * C453 + C17590 + C17590 + C17147 * C473) *
                 C50602 +
             (C17614 + C17613) * C50853) *
                C50821 +
            ((C17932 + C17931) * C50602 + C17920 * C50853) * C50882) *
               C50724) *
              C50644 * C1004)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
             C17158 + C17158 + C50793 * C298) *
                C50853 +
            (C17201 + C17202) * C50602) *
               C50882 +
           ((C22232 + C22233) * C50853 + C27981 * C50602) * C50821) *
              C1817 -
          ((C22212 * C50602 + (C22235 + C22234) * C50853) * C50821 +
           (C27982 * C50602 + (C22233 + C22232) * C50853) * C50882) *
              C1818 +
          ((C22240 * C50853 + C27983 * C50602) * C50882 +
           ((C22237 + C22236) * C50853 + (C22238 + C22239) * C50602) * C50821) *
              C1819 -
          (((C17154 * C6487 + C22213 + C22213 + C50793 * C6491 +
             C17152 * C5514 + C22214 + C22214 + C17147 * C5520) *
                C50602 +
            (C24087 + C24086) * C50853) *
               C50821 +
           ((C22239 + C22238) * C50602 + C24074 * C50853) * C50882) *
              C1820) *
         C50644 * C50625) /
            (p * q * std::sqrt(p + q));
    d2ee[133] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C17152 * C119 + C17157 + C17157 + C17147 * C133 +
                       C17154 * C278 + C17158 + C17158 + C50793 * C298) *
                          C50853 +
                      (C17201 + C17202) * C50602) *
                         C50882 +
                     ((C22232 + C22233) * C50853 + C27981 * C50602) * C50821) *
                        C50915 -
                    ((C22212 * C50602 + (C22235 + C22234) * C50853) * C50821 +
                     (C27982 * C50602 + (C22233 + C22232) * C50853) * C50882) *
                        C50916 +
                    ((C22240 * C50853 + C27983 * C50602) * C50882 +
                     ((C22237 + C22236) * C50853 + (C22238 + C22239) * C50602) *
                         C50821) *
                        C2067) *
                       C50644 * C50860 +
                   (((C27981 * C50853 + C28372 * C50602) * C50882 +
                     (C27983 * C50853 + (C17613 + C17614) * C50602) * C50821) *
                        C50916 -
                    ((C17920 * C50602 + C27982 * C50853) * C50821 +
                     ((C17204 + C17203) * C50602 + (C17202 + C17201) * C50853) *
                         C50882) *
                        C50915 -
                    (((C17154 * C6064 + C19439 + C19439 + C50793 * C6066 +
                       C17152 * C1822 + C19440 + C19440 + C17147 * C1830) *
                          C50602 +
                      (C22239 + C22238) * C50853) *
                         C50821 +
                     ((C17614 + C17613) * C50602 + C22212 * C50853) * C50882) *
                        C2067) *
                       C50644 * C50631)) /
                 (p * q * std::sqrt(p + q));
    d2ee[134] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C17152 * C119 + C17157 + C17157 + C17147 * C133 +
                       C17154 * C278 + C17158 + C17158 + C50793 * C298) *
                          C50853 +
                      (C17201 + C17202) * C50602) *
                         C50882 +
                     ((C22232 + C22233) * C50853 + C27981 * C50602) * C50821) *
                        C1651 -
                    ((C22212 * C50602 + (C22235 + C22234) * C50853) * C50821 +
                     (C27982 * C50602 + (C22233 + C22232) * C50853) * C50882) *
                        C50724) *
                       C50644 * C1002 +
                   (((C27981 * C50853 + C28372 * C50602) * C50882 +
                     (C27983 * C50853 + (C17613 + C17614) * C50602) * C50821) *
                        C50724 -
                    ((C17920 * C50602 + C27982 * C50853) * C50821 +
                     ((C17204 + C17203) * C50602 + (C17202 + C17201) * C50853) *
                         C50882) *
                        C1651) *
                       C50644 * C1003 +
                   (((C17209 * C50853 + (C17206 + C17205) * C50602) * C50882 +
                     (C28372 * C50853 + (C17931 + C17932) * C50602) * C50821) *
                        C1651 -
                    (((C17154 * C1190 + C17589 + C17589 + C50793 * C1198 +
                       C17152 * C453 + C17590 + C17590 + C17147 * C473) *
                          C50602 +
                      (C17614 + C17613) * C50853) *
                         C50821 +
                     ((C17932 + C17931) * C50602 + C17920 * C50853) * C50882) *
                        C50724) *
                       C50644 * C1004)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C17152 * C119 + C17157 + C17157 + C17147 * C133 +
                       C17154 * C278 + C17158 + C17158 + C50793 * C298) *
                          C50853 +
                      (C17201 + C17202) * C50602) *
                         C50882 +
                     ((C22232 + C22233) * C50853 + C27981 * C50602) * C50821) *
                        C1651 -
                    ((C22212 * C50602 + (C22235 + C22234) * C50853) * C50821 +
                     (C27982 * C50602 + (C22233 + C22232) * C50853) * C50882) *
                        C50724) *
                       C270 +
                   ((((C22756 + C22757) * C50853 + C28631 * C50602) * C50882 +
                     ((C22758 + C22759) * C50853 + (C22760 + C22761) * C50602) *
                         C50821) *
                        C50724 -
                    ((C28632 * C50602 + (C22757 + C22756) * C50853) * C50821 +
                     ((C17407 + C17408) * C50602 +
                      (C17154 * C279 + C17369 + C17369 + C50793 * C299 +
                       C17152 * C278 + C17370 + C17370 + C17147 * C298) *
                          C50853) *
                         C50882) *
                        C1651) *
                       C271 +
                   ((((C17152 * C279 + C17371 + C17371 + C17147 * C299 +
                       C17154 * C1079 + C17372 + C17372 + C50793 * C1087) *
                          C50853 +
                      (C17409 + C17410) * C50602) *
                         C50882 +
                     ((C23677 + C23678) * C50853 + (C27785 + C27786) * C50602) *
                         C50821) *
                        C1651 -
                    (((C17154 * C3698 + C22046 + C22046 + C50793 * C3702 +
                       C17152 * C2685 + C22047 + C22047 + C17147 * C2691) *
                          C50602 +
                      (C23680 + C23679) * C50853) *
                         C50821 +
                     ((C27786 + C27785) * C50602 + (C23678 + C23677) * C50853) *
                         C50882) *
                        C50724) *
                       C272) *
                  C50625) /
                     (p * q * std::sqrt(p + q));
    d2ee[135] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
             C17158 + C17158 + C50793 * C298) *
                C17149 +
            (C17201 + C17202) * C17150 + C17209 * C17151) *
               C50757 * C50660 * C50868 -
           (C17761 * C17151 + (C17407 + C17408) * C17150 +
            (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
             C17370 + C17370 + C17147 * C298) *
                C17149) *
               C50757 * C50660 * C50696) *
              C50911 +
          (((C17408 + C17407) * C17149 + (C17406 + C17405) * C17150 +
            (C17772 + C17773) * C17151) *
               C50757 * C50660 * C50696 -
           (C17210 * C17151 + (C17204 + C17203) * C17150 +
            (C17202 + C17201) * C17149) *
               C50757 * C50660 * C50868) *
              C50912 +
          ((C17209 * C17149 + (C17206 + C17205) * C17150 +
            (C17207 + C17208) * C17151) *
               C50757 * C50660 * C50868 -
           ((C17154 * C284 + C17766 + C17766 + C50793 * C304 + C17152 * C283 +
             C17767 + C17767 + C17147 * C303) *
                C17151 +
            (C17773 + C17772) * C17150 + C17761 * C17149) *
               C50757 * C50660 * C50696) *
              C618)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C20001 * C119 + C20010 + C20010 + C19996 * C133 + C20003 * C278 +
            C20011 + C20011 + C19997 * C298 + C20005 * C279 + C20012 + C20012 +
            C19998 * C299 + C20007 * C1079 + C20013 + C20013 + C19999 * C1087) *
               C50597 * C50757 * C50660 * C50868 -
           (C20007 * C2481 + C20124 + C20124 + C19999 * C2487 + C20005 * C1079 +
            C20125 + C20125 + C19998 * C1087 + C20003 * C279 + C20126 + C20126 +
            C19997 * C299 + C20001 * C278 + C20127 + C20127 + C19996 * C298) *
               C50597 * C50757 * C50660 * C50696) *
              C50911 +
          ((C20001 * C277 + C20132 + C20132 + C19996 * C297 + C20003 * C280 +
            C20133 + C20133 + C19997 * C300 + C20005 * C1078 + C20134 + C20134 +
            C19998 * C1086 + C20007 * C2482 + C20135 + C20135 +
            C19999 * C2488) *
               C50597 * C50757 * C50660 * C50696 -
           (C20007 * C1078 + C20014 + C20014 + C19999 * C1086 + C20005 * C280 +
            C20015 + C20015 + C19998 * C300 + C20003 * C277 + C20016 + C20016 +
            C19997 * C297 + C20001 * C120 + C20017 + C20017 + C19996 * C134) *
               C50597 * C50757 * C50660 * C50868) *
              C50912 +
          ((C20001 * C121 + C20018 + C20018 + C19996 * C135 + C20003 * C276 +
            C20019 + C20019 + C19997 * C296 + C20005 * C281 + C20020 + C20020 +
            C19998 * C301 + C20007 * C1077 + C20021 + C20021 + C19999 * C1085) *
               C50597 * C50757 * C50660 * C50868 -
           (C20007 * C2483 + C20352 + C20352 + C19999 * C2489 + C20005 * C1077 +
            C20353 + C20353 + C19998 * C1085 + C20003 * C281 + C20354 + C20354 +
            C19997 * C301 + C20001 * C276 + C20355 + C20355 + C19996 * C296) *
               C50597 * C50757 * C50660 * C50696) *
              C618)) /
            (p * q * std::sqrt(p + q));
    d2ee[136] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
              C17158 + C17158 + C50793 * C298) *
                 C17149 +
             (C17201 + C17202) * C17150 + C17209 * C17151) *
                C50757 * C50869 -
            (C17920 * C17151 + (C17609 + C17610) * C17150 +
             (C17154 * C867 + C17571 + C17571 + C50793 * C877 + C17152 * C449 +
              C17572 + C17572 + C17147 * C469) *
                 C17149) *
                C50757 * C50724) *
               C50868 +
           (((C17152 * C867 + C18127 + C18127 + C17147 * C877 + C17154 * C1540 +
              C18128 + C18128 + C50793 * C1548) *
                 C17149 +
             (C18151 + C18152) * C17150 + (C18153 + C18154) * C17151) *
                C50757 * C50724 -
            (C17761 * C17151 + (C17407 + C17408) * C17150 +
             (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
              C17370 + C17370 + C17147 * C298) *
                 C17149) *
                C50757 * C50869) *
               C50696) *
              C273 +
          ((((C17610 + C17609) * C17149 + (C17608 + C17607) * C17150 +
             (C17931 + C17932) * C17151) *
                C50757 * C50724 -
            (C17210 * C17151 + (C17204 + C17203) * C17150 +
             (C17202 + C17201) * C17149) *
                C50757 * C50869) *
               C50868 +
           (((C17408 + C17407) * C17149 + (C17406 + C17405) * C17150 +
             (C17772 + C17773) * C17151) *
                C50757 * C50869 -
            ((C17154 * C1537 + C18141 + C18141 + C50793 * C1545 +
              C17152 * C870 + C18142 + C18142 + C17147 * C880) *
                 C17151 +
             (C18154 + C18153) * C17150 + (C18152 + C18151) * C17149) *
                C50757 * C50724) *
               C50696) *
              C50631)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20001 * C119 + C20010 + C20010 + C19996 * C133 + C20003 * C278 +
             C20011 + C20011 + C19997 * C298 + C20005 * C279 + C20012 + C20012 +
             C19998 * C299 + C20007 * C1079 + C20013 + C20013 +
             C19999 * C1087) *
                C50597 * C50757 * C50869 -
            (C20007 * C3263 + C20238 + C20238 + C19999 * C3269 +
             C20005 * C1540 + C20239 + C20239 + C19998 * C1548 + C20003 * C867 +
             C20240 + C20240 + C19997 * C877 + C20001 * C449 + C20241 + C20241 +
             C19996 * C469) *
                C50597 * C50757 * C50724) *
               C50868 +
           ((C20001 * C867 + C20588 + C20588 + C19996 * C877 + C20003 * C1540 +
             C20589 + C20589 + C19997 * C1548 + C20005 * C3263 + C20590 +
             C20590 + C19998 * C3269 + C20007 * C4197 + C20591 + C20591 +
             C19999 * C4201) *
                C50597 * C50757 * C50724 -
            (C20007 * C2481 + C20124 + C20124 + C19999 * C2487 +
             C20005 * C1079 + C20125 + C20125 + C19998 * C1087 + C20003 * C279 +
             C20126 + C20126 + C19997 * C299 + C20001 * C278 + C20127 + C20127 +
             C19996 * C298) *
                C50597 * C50757 * C50869) *
               C50696) *
              C273 +
          (((C20001 * C448 + C20246 + C20246 + C19996 * C468 + C20003 * C868 +
             C20247 + C20247 + C19997 * C878 + C20005 * C1539 + C20248 +
             C20248 + C19998 * C1547 + C20007 * C3264 + C20249 + C20249 +
             C19999 * C3270) *
                C50597 * C50757 * C50724 -
            (C20007 * C1078 + C20014 + C20014 + C19999 * C1086 + C20005 * C280 +
             C20015 + C20015 + C19998 * C300 + C20003 * C277 + C20016 + C20016 +
             C19997 * C297 + C20001 * C120 + C20017 + C20017 + C19996 * C134) *
                C50597 * C50757 * C50869) *
               C50868 +
           ((C20001 * C277 + C20132 + C20132 + C19996 * C297 + C20003 * C280 +
             C20133 + C20133 + C19997 * C300 + C20005 * C1078 + C20134 +
             C20134 + C19998 * C1086 + C20007 * C2482 + C20135 + C20135 +
             C19999 * C2488) *
                C50597 * C50757 * C50869 -
            (C20007 * C4196 + C20592 + C20592 + C19999 * C4200 +
             C20005 * C3264 + C20593 + C20593 + C19998 * C3270 +
             C20003 * C1539 + C20594 + C20594 + C19997 * C1547 + C20001 * C868 +
             C20595 + C20595 + C19996 * C878) *
                C50597 * C50757 * C50724) *
               C50696) *
              C50631)) /
            (p * q * std::sqrt(p + q));
    d2ee[137] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
             C17158 + C17158 + C50793 * C298) *
                C17149 +
            (C17201 + C17202) * C17150 + C17209 * C17151) *
               C50757 * C50660 * C270 -
           ((C17405 + C17406) * C17151 + (C17407 + C17408) * C17150 +
            (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
             C17370 + C17370 + C17147 * C298) *
                C17149) *
               C50757 * C50660 * C271 +
           ((C17152 * C279 + C17371 + C17371 + C17147 * C299 + C17154 * C1079 +
             C17372 + C17372 + C50793 * C1087) *
                C17149 +
            (C17409 + C17410) * C17150 + (C17411 + C17412) * C17151) *
               C50757 * C50660 * C272) *
              C273 +
          (((C17408 + C17407) * C17149 + (C17406 + C17405) * C17150 +
            (C17152 * C275 + C17385 + C17385 + C17147 * C295 + C17154 * C282 +
             C17386 + C17386 + C50793 * C302) *
                C17151) *
               C50757 * C50660 * C271 -
           (C17210 * C17151 + (C17204 + C17203) * C17150 +
            (C17202 + C17201) * C17149) *
               C50757 * C50660 * C270 -
           ((C17154 * C1076 + C17387 + C17387 + C50793 * C1084 + C17152 * C282 +
             C17388 + C17388 + C17147 * C302) *
                C17151 +
            (C17412 + C17411) * C17150 + (C17410 + C17409) * C17149) *
               C50757 * C50660 * C272) *
              C50631)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
            C17158 + C17158 + C50793 * C298) *
               C17149 +
           (C17201 + C17202) * C17150 + C17209 * C17151) *
              C50757 * C50660 * C50644 * C113 -
          (C17210 * C17151 + (C17204 + C17203) * C17150 +
           (C17202 + C17201) * C17149) *
              C50757 * C50660 * C50644 * C114 +
          (C17209 * C17149 + (C17206 + C17205) * C17150 +
           (C17207 + C17208) * C17151) *
              C50757 * C50660 * C50644 * C115 -
          ((C17154 * C619 + C17183 + C17183 + C50793 * C621 + C17152 * C124 +
            C17184 + C17184 + C17147 * C138) *
               C17151 +
           (C17208 + C17207) * C17150 + C17210 * C17149) *
              C50757 * C50660 * C50644 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
             C17158 + C17158 + C50793 * C298) *
                C17149 +
            (C17201 + C17202) * C17150 + C17209 * C17151) *
               C50757 * C443 -
           ((C17607 + C17608) * C17151 + (C17609 + C17610) * C17150 +
            (C17154 * C867 + C17571 + C17571 + C50793 * C877 + C17152 * C449 +
             C17572 + C17572 + C17147 * C469) *
                C17149) *
               C50757 * C444 +
           ((C17152 * C450 + C17573 + C17573 + C17147 * C470 + C17154 * C1193 +
             C17574 + C17574 + C50793 * C1201) *
                C17149 +
            (C17611 + C17612) * C17150 + (C17613 + C17614) * C17151) *
               C50757 * C445) *
              C50644 * C273 +
          (((C17610 + C17609) * C17149 + (C17608 + C17607) * C17150 +
            (C17152 * C446 + C17587 + C17587 + C17147 * C466 + C17154 * C870 +
             C17588 + C17588 + C50793 * C880) *
                C17151) *
               C50757 * C444 -
           (C17210 * C17151 + (C17204 + C17203) * C17150 +
            (C17202 + C17201) * C17149) *
               C50757 * C443 -
           ((C17154 * C1190 + C17589 + C17589 + C50793 * C1198 + C17152 * C453 +
             C17590 + C17590 + C17147 * C473) *
                C17151 +
            (C17614 + C17613) * C17150 + (C17612 + C17611) * C17149) *
               C50757 * C445) *
              C50644 * C50631)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C20001 * C119 + C20010 + C20010 + C19996 * C133 + C20003 * C278 +
           C20011 + C20011 + C19997 * C298 + C20005 * C279 + C20012 + C20012 +
           C19998 * C299 + C20007 * C1079 + C20013 + C20013 + C19999 * C1087) *
              C50597 * C50757 * C50660 * C50644 * C113 -
          (C20007 * C1078 + C20014 + C20014 + C19999 * C1086 + C20005 * C280 +
           C20015 + C20015 + C19998 * C300 + C20003 * C277 + C20016 + C20016 +
           C19997 * C297 + C20001 * C120 + C20017 + C20017 + C19996 * C134) *
              C50597 * C50757 * C50660 * C50644 * C114 +
          (C20001 * C121 + C20018 + C20018 + C19996 * C135 + C20003 * C276 +
           C20019 + C20019 + C19997 * C296 + C20005 * C281 + C20020 + C20020 +
           C19998 * C301 + C20007 * C1077 + C20021 + C20021 + C19999 * C1085) *
              C50597 * C50757 * C50660 * C50644 * C115 -
          (C20007 * C1076 + C20022 + C20022 + C19999 * C1084 + C20005 * C282 +
           C20023 + C20023 + C19998 * C302 + C20003 * C275 + C20024 + C20024 +
           C19997 * C295 + C20001 * C122 + C20025 + C20025 + C19996 * C136) *
              C50597 * C50757 * C50660 * C50644 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C20001 * C119 + C20010 + C20010 + C19996 * C133 + C20003 * C278 +
            C20011 + C20011 + C19997 * C298 + C20005 * C279 + C20012 + C20012 +
            C19998 * C299 + C20007 * C1079 + C20013 + C20013 + C19999 * C1087) *
               C50597 * C50757 * C50660 * C270 -
           (C20007 * C2481 + C20124 + C20124 + C19999 * C2487 + C20005 * C1079 +
            C20125 + C20125 + C19998 * C1087 + C20003 * C279 + C20126 + C20126 +
            C19997 * C299 + C20001 * C278 + C20127 + C20127 + C19996 * C298) *
               C50597 * C50757 * C50660 * C271 +
           (C20001 * C279 + C20128 + C20128 + C19996 * C299 + C20003 * C1079 +
            C20129 + C20129 + C19997 * C1087 + C20005 * C2481 + C20130 +
            C20130 + C19998 * C2487 + C20007 * C3541 + C20131 + C20131 +
            C19999 * C3545) *
               C50597 * C50757 * C50660 * C272) *
              C273 +
          ((C20001 * C277 + C20132 + C20132 + C19996 * C297 + C20003 * C280 +
            C20133 + C20133 + C19997 * C300 + C20005 * C1078 + C20134 + C20134 +
            C19998 * C1086 + C20007 * C2482 + C20135 + C20135 +
            C19999 * C2488) *
               C50597 * C50757 * C50660 * C271 -
           (C20007 * C1078 + C20014 + C20014 + C19999 * C1086 + C20005 * C280 +
            C20015 + C20015 + C19998 * C300 + C20003 * C277 + C20016 + C20016 +
            C19997 * C297 + C20001 * C120 + C20017 + C20017 + C19996 * C134) *
               C50597 * C50757 * C50660 * C270 -
           (C20007 * C3540 + C20136 + C20136 + C19999 * C3544 + C20005 * C2482 +
            C20137 + C20137 + C19998 * C2488 + C20003 * C1078 + C20138 +
            C20138 + C19997 * C1086 + C20001 * C280 + C20139 + C20139 +
            C19996 * C300) *
               C50597 * C50757 * C50660 * C272) *
              C50631)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C20001 * C119 + C20010 + C20010 + C19996 * C133 + C20003 * C278 +
            C20011 + C20011 + C19997 * C298 + C20005 * C279 + C20012 + C20012 +
            C19998 * C299 + C20007 * C1079 + C20013 + C20013 + C19999 * C1087) *
               C50597 * C50757 * C443 -
           (C20007 * C3263 + C20238 + C20238 + C19999 * C3269 + C20005 * C1540 +
            C20239 + C20239 + C19998 * C1548 + C20003 * C867 + C20240 + C20240 +
            C19997 * C877 + C20001 * C449 + C20241 + C20241 + C19996 * C469) *
               C50597 * C50757 * C444 +
           (C20001 * C450 + C20242 + C20242 + C19996 * C470 + C20003 * C1193 +
            C20243 + C20243 + C19997 * C1201 + C20005 * C2684 + C20244 +
            C20244 + C19998 * C2690 + C20007 * C3699 + C20245 + C20245 +
            C19999 * C3703) *
               C50597 * C50757 * C445) *
              C50644 * C273 +
          ((C20001 * C448 + C20246 + C20246 + C19996 * C468 + C20003 * C868 +
            C20247 + C20247 + C19997 * C878 + C20005 * C1539 + C20248 + C20248 +
            C19998 * C1547 + C20007 * C3264 + C20249 + C20249 +
            C19999 * C3270) *
               C50597 * C50757 * C444 -
           (C20007 * C1078 + C20014 + C20014 + C19999 * C1086 + C20005 * C280 +
            C20015 + C20015 + C19998 * C300 + C20003 * C277 + C20016 + C20016 +
            C19997 * C297 + C20001 * C120 + C20017 + C20017 + C19996 * C134) *
               C50597 * C50757 * C443 -
           (C20007 * C3698 + C20250 + C20250 + C19999 * C3702 + C20005 * C2685 +
            C20251 + C20251 + C19998 * C2691 + C20003 * C1192 + C20252 +
            C20252 + C19997 * C1200 + C20001 * C451 + C20253 + C20253 +
            C19996 * C471) *
               C50597 * C50757 * C445) *
              C50644 * C50631)) /
            (p * q * std::sqrt(p + q));
    d2ee[138] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
             C17158 + C17158 + C50793 * C298) *
                C17149 +
            (C17201 + C17202) * C17150 + C17209 * C17151) *
               C50757 * C50869 -
           (C17920 * C17151 + (C17609 + C17610) * C17150 +
            (C17154 * C867 + C17571 + C17571 + C50793 * C877 + C17152 * C449 +
             C17572 + C17572 + C17147 * C469) *
                C17149) *
               C50757 * C50724) *
              C50644 * C50911 +
          (((C17610 + C17609) * C17149 + (C17608 + C17607) * C17150 +
            (C17931 + C17932) * C17151) *
               C50757 * C50724 -
           (C17210 * C17151 + (C17204 + C17203) * C17150 +
            (C17202 + C17201) * C17149) *
               C50757 * C50869) *
              C50644 * C50912 +
          ((C17209 * C17149 + (C17206 + C17205) * C17150 +
            (C17207 + C17208) * C17151) *
               C50757 * C50869 -
           ((C17154 * C871 + C17925 + C17925 + C50793 * C881 + C17152 * C454 +
             C17926 + C17926 + C17147 * C474) *
                C17151 +
            (C17932 + C17931) * C17150 + C17920 * C17149) *
               C50757 * C50724) *
              C50644 * C618)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C20001 * C119 + C20010 + C20010 + C19996 * C133 + C20003 * C278 +
            C20011 + C20011 + C19997 * C298 + C20005 * C279 + C20012 + C20012 +
            C19998 * C299 + C20007 * C1079 + C20013 + C20013 + C19999 * C1087) *
               C50597 * C50757 * C50869 -
           (C20007 * C3263 + C20238 + C20238 + C19999 * C3269 + C20005 * C1540 +
            C20239 + C20239 + C19998 * C1548 + C20003 * C867 + C20240 + C20240 +
            C19997 * C877 + C20001 * C449 + C20241 + C20241 + C19996 * C469) *
               C50597 * C50757 * C50724) *
              C50644 * C50911 +
          ((C20001 * C448 + C20246 + C20246 + C19996 * C468 + C20003 * C868 +
            C20247 + C20247 + C19997 * C878 + C20005 * C1539 + C20248 + C20248 +
            C19998 * C1547 + C20007 * C3264 + C20249 + C20249 +
            C19999 * C3270) *
               C50597 * C50757 * C50724 -
           (C20007 * C1078 + C20014 + C20014 + C19999 * C1086 + C20005 * C280 +
            C20015 + C20015 + C19998 * C300 + C20003 * C277 + C20016 + C20016 +
            C19997 * C297 + C20001 * C120 + C20017 + C20017 + C19996 * C134) *
               C50597 * C50757 * C50869) *
              C50644 * C50912 +
          ((C20001 * C121 + C20018 + C20018 + C19996 * C135 + C20003 * C276 +
            C20019 + C20019 + C19997 * C296 + C20005 * C281 + C20020 + C20020 +
            C19998 * C301 + C20007 * C1077 + C20021 + C20021 + C19999 * C1085) *
               C50597 * C50757 * C50869 -
           (C20007 * C3265 + C20454 + C20454 + C19999 * C3271 + C20005 * C1538 +
            C20455 + C20455 + C19998 * C1546 + C20003 * C869 + C20456 + C20456 +
            C19997 * C879 + C20001 * C447 + C20457 + C20457 + C19996 * C467) *
               C50597 * C50757 * C50724) *
              C50644 * C618)) /
            (p * q * std::sqrt(p + q));
    d2ee[139] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
            C17158 + C17158 + C50793 * C298) *
               C17149 +
           (C17201 + C17202) * C17150 + C17209 * C17151) *
              C50757 * C50660 * C50644 * C113 -
          (C17210 * C17151 + (C17204 + C17203) * C17150 +
           (C17202 + C17201) * C17149) *
              C50757 * C50660 * C50644 * C114 +
          (C17209 * C17149 + (C17206 + C17205) * C17150 +
           (C17207 + C17208) * C17151) *
              C50757 * C50660 * C50644 * C115 -
          ((C17154 * C619 + C17183 + C17183 + C50793 * C621 + C17152 * C124 +
            C17184 + C17184 + C17147 * C138) *
               C17151 +
           (C17208 + C17207) * C17150 + C17210 * C17149) *
              C50757 * C50660 * C50644 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
             C17158 + C17158 + C50793 * C298) *
                C17149 +
            (C17201 + C17202) * C17150 + C17209 * C17151) *
               C50757 * C50660 * C270 -
           ((C17405 + C17406) * C17151 + (C17407 + C17408) * C17150 +
            (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
             C17370 + C17370 + C17147 * C298) *
                C17149) *
               C50757 * C50660 * C271 +
           ((C17152 * C279 + C17371 + C17371 + C17147 * C299 + C17154 * C1079 +
             C17372 + C17372 + C50793 * C1087) *
                C17149 +
            (C17409 + C17410) * C17150 + (C17411 + C17412) * C17151) *
               C50757 * C50660 * C272) *
              C273 +
          (((C17408 + C17407) * C17149 + (C17406 + C17405) * C17150 +
            (C17152 * C275 + C17385 + C17385 + C17147 * C295 + C17154 * C282 +
             C17386 + C17386 + C50793 * C302) *
                C17151) *
               C50757 * C50660 * C271 -
           (C17210 * C17151 + (C17204 + C17203) * C17150 +
            (C17202 + C17201) * C17149) *
               C50757 * C50660 * C270 -
           ((C17154 * C1076 + C17387 + C17387 + C50793 * C1084 + C17152 * C282 +
             C17388 + C17388 + C17147 * C302) *
                C17151 +
            (C17412 + C17411) * C17150 + (C17410 + C17409) * C17149) *
               C50757 * C50660 * C272) *
              C50631)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((C20001 * C119 + C20010 + C20010 + C19996 * C133 + C20003 * C278 +
           C20011 + C20011 + C19997 * C298 + C20005 * C279 + C20012 + C20012 +
           C19998 * C299 + C20007 * C1079 + C20013 + C20013 + C19999 * C1087) *
              C50597 * C50757 * C50660 * C50644 * C113 -
          (C20007 * C1078 + C20014 + C20014 + C19999 * C1086 + C20005 * C280 +
           C20015 + C20015 + C19998 * C300 + C20003 * C277 + C20016 + C20016 +
           C19997 * C297 + C20001 * C120 + C20017 + C20017 + C19996 * C134) *
              C50597 * C50757 * C50660 * C50644 * C114 +
          (C20001 * C121 + C20018 + C20018 + C19996 * C135 + C20003 * C276 +
           C20019 + C20019 + C19997 * C296 + C20005 * C281 + C20020 + C20020 +
           C19998 * C301 + C20007 * C1077 + C20021 + C20021 + C19999 * C1085) *
              C50597 * C50757 * C50660 * C50644 * C115 -
          (C20007 * C1076 + C20022 + C20022 + C19999 * C1084 + C20005 * C282 +
           C20023 + C20023 + C19998 * C302 + C20003 * C275 + C20024 + C20024 +
           C19997 * C295 + C20001 * C122 + C20025 + C20025 + C19996 * C136) *
              C50597 * C50757 * C50660 * C50644 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C20001 * C119 + C20010 + C20010 + C19996 * C133 + C20003 * C278 +
            C20011 + C20011 + C19997 * C298 + C20005 * C279 + C20012 + C20012 +
            C19998 * C299 + C20007 * C1079 + C20013 + C20013 + C19999 * C1087) *
               C50597 * C50757 * C50660 * C270 -
           (C20007 * C2481 + C20124 + C20124 + C19999 * C2487 + C20005 * C1079 +
            C20125 + C20125 + C19998 * C1087 + C20003 * C279 + C20126 + C20126 +
            C19997 * C299 + C20001 * C278 + C20127 + C20127 + C19996 * C298) *
               C50597 * C50757 * C50660 * C271 +
           (C20001 * C279 + C20128 + C20128 + C19996 * C299 + C20003 * C1079 +
            C20129 + C20129 + C19997 * C1087 + C20005 * C2481 + C20130 +
            C20130 + C19998 * C2487 + C20007 * C3541 + C20131 + C20131 +
            C19999 * C3545) *
               C50597 * C50757 * C50660 * C272) *
              C273 +
          ((C20001 * C277 + C20132 + C20132 + C19996 * C297 + C20003 * C280 +
            C20133 + C20133 + C19997 * C300 + C20005 * C1078 + C20134 + C20134 +
            C19998 * C1086 + C20007 * C2482 + C20135 + C20135 +
            C19999 * C2488) *
               C50597 * C50757 * C50660 * C271 -
           (C20007 * C1078 + C20014 + C20014 + C19999 * C1086 + C20005 * C280 +
            C20015 + C20015 + C19998 * C300 + C20003 * C277 + C20016 + C20016 +
            C19997 * C297 + C20001 * C120 + C20017 + C20017 + C19996 * C134) *
               C50597 * C50757 * C50660 * C270 -
           (C20007 * C3540 + C20136 + C20136 + C19999 * C3544 + C20005 * C2482 +
            C20137 + C20137 + C19998 * C2488 + C20003 * C1078 + C20138 +
            C20138 + C19997 * C1086 + C20001 * C280 + C20139 + C20139 +
            C19996 * C300) *
               C50597 * C50757 * C50660 * C272) *
              C50631)) /
            (p * q * std::sqrt(p + q));
    d2ee[140] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
             C17158 + C17158 + C50793 * C298) *
                C17149 +
            (C17201 + C17202) * C17150 + C17209 * C17151) *
               C50757 * C50660 * C50913 -
           (C17761 * C17151 + (C17407 + C17408) * C17150 +
            (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
             C17370 + C17370 + C17147 * C298) *
                C17149) *
               C50757 * C50660 * C50914 +
           ((C17152 * C279 + C17371 + C17371 + C17147 * C299 + C17154 * C1079 +
             C17372 + C17372 + C50793 * C1087) *
                C17149 +
            (C17409 + C17410) * C17150 + (C17411 + C17412) * C17151) *
               C50757 * C50660 * C1306) *
              C50860 +
          (((C17408 + C17407) * C17149 + (C17406 + C17405) * C17150 +
            (C17772 + C17773) * C17151) *
               C50757 * C50660 * C50914 -
           (C17210 * C17151 + (C17204 + C17203) * C17150 +
            (C17202 + C17201) * C17149) *
               C50757 * C50660 * C50913 -
           ((C17154 * C1076 + C17387 + C17387 + C50793 * C1084 + C17152 * C282 +
             C17388 + C17388 + C17147 * C302) *
                C17151 +
            (C17412 + C17411) * C17150 + (C17410 + C17409) * C17149) *
               C50757 * C50660 * C1306) *
              C50631)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C20001 * C119 + C20010 + C20010 + C19996 * C133 + C20003 * C278 +
            C20011 + C20011 + C19997 * C298 + C20005 * C279 + C20012 + C20012 +
            C19998 * C299 + C20007 * C1079 + C20013 + C20013 + C19999 * C1087) *
               C50597 * C50757 * C50660 * C50913 -
           (C20007 * C2481 + C20124 + C20124 + C19999 * C2487 + C20005 * C1079 +
            C20125 + C20125 + C19998 * C1087 + C20003 * C279 + C20126 + C20126 +
            C19997 * C299 + C20001 * C278 + C20127 + C20127 + C19996 * C298) *
               C50597 * C50757 * C50660 * C50914 +
           (C20001 * C279 + C20128 + C20128 + C19996 * C299 + C20003 * C1079 +
            C20129 + C20129 + C19997 * C1087 + C20005 * C2481 + C20130 +
            C20130 + C19998 * C2487 + C20007 * C3541 + C20131 + C20131 +
            C19999 * C3545) *
               C50597 * C50757 * C50660 * C1306) *
              C50860 +
          ((C20001 * C277 + C20132 + C20132 + C19996 * C297 + C20003 * C280 +
            C20133 + C20133 + C19997 * C300 + C20005 * C1078 + C20134 + C20134 +
            C19998 * C1086 + C20007 * C2482 + C20135 + C20135 +
            C19999 * C2488) *
               C50597 * C50757 * C50660 * C50914 -
           (C20007 * C1078 + C20014 + C20014 + C19999 * C1086 + C20005 * C280 +
            C20015 + C20015 + C19998 * C300 + C20003 * C277 + C20016 + C20016 +
            C19997 * C297 + C20001 * C120 + C20017 + C20017 + C19996 * C134) *
               C50597 * C50757 * C50660 * C50913 -
           (C20007 * C3540 + C20136 + C20136 + C19999 * C3544 + C20005 * C2482 +
            C20137 + C20137 + C19998 * C2488 + C20003 * C1078 + C20138 +
            C20138 + C19997 * C1086 + C20001 * C280 + C20139 + C20139 +
            C19996 * C300) *
               C50597 * C50757 * C50660 * C1306) *
              C50631)) /
            (p * q * std::sqrt(p + q));
    d2ee[141] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
             C17158 + C17158 + C50793 * C298) *
                C17149 +
            (C17201 + C17202) * C17150 + C17209 * C17151) *
               C50757 * C50869 -
           (C17920 * C17151 + (C17609 + C17610) * C17150 +
            (C17154 * C867 + C17571 + C17571 + C50793 * C877 + C17152 * C449 +
             C17572 + C17572 + C17147 * C469) *
                C17149) *
               C50757 * C50724) *
              C50913 +
          (((C17152 * C867 + C18127 + C18127 + C17147 * C877 + C17154 * C1540 +
             C18128 + C18128 + C50793 * C1548) *
                C17149 +
            (C18151 + C18152) * C17150 + (C18153 + C18154) * C17151) *
               C50757 * C50724 -
           (C17761 * C17151 + (C17407 + C17408) * C17150 +
            (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
             C17370 + C17370 + C17147 * C298) *
                C17149) *
               C50757 * C50869) *
              C50914 +
          (((C17152 * C279 + C17371 + C17371 + C17147 * C299 + C17154 * C1079 +
             C17372 + C17372 + C50793 * C1087) *
                C17149 +
            (C17409 + C17410) * C17150 + (C17411 + C17412) * C17151) *
               C50757 * C50869 -
           ((C17154 * C3265 + C19043 + C19043 + C50793 * C3271 +
             C17152 * C1538 + C19044 + C19044 + C17147 * C1546) *
                C17151 +
            (C17154 * C3264 + C19045 + C19045 + C50793 * C3270 +
             C17152 * C1539 + C19046 + C19046 + C17147 * C1547) *
                C17150 +
            (C17154 * C3263 + C19047 + C19047 + C50793 * C3269 +
             C17152 * C1540 + C19048 + C19048 + C17147 * C1548) *
                C17149) *
               C50757 * C50724) *
              C1306) *
         C50625) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C20001 * C119 + C20010 + C20010 + C19996 * C133 + C20003 * C278 +
            C20011 + C20011 + C19997 * C298 + C20005 * C279 + C20012 + C20012 +
            C19998 * C299 + C20007 * C1079 + C20013 + C20013 + C19999 * C1087) *
               C50597 * C50757 * C50869 -
           (C20007 * C3263 + C20238 + C20238 + C19999 * C3269 + C20005 * C1540 +
            C20239 + C20239 + C19998 * C1548 + C20003 * C867 + C20240 + C20240 +
            C19997 * C877 + C20001 * C449 + C20241 + C20241 + C19996 * C469) *
               C50597 * C50757 * C50724) *
              C50913 +
          ((C20001 * C867 + C20588 + C20588 + C19996 * C877 + C20003 * C1540 +
            C20589 + C20589 + C19997 * C1548 + C20005 * C3263 + C20590 +
            C20590 + C19998 * C3269 + C20007 * C4197 + C20591 + C20591 +
            C19999 * C4201) *
               C50597 * C50757 * C50724 -
           (C20007 * C2481 + C20124 + C20124 + C19999 * C2487 + C20005 * C1079 +
            C20125 + C20125 + C19998 * C1087 + C20003 * C279 + C20126 + C20126 +
            C19997 * C299 + C20001 * C278 + C20127 + C20127 + C19996 * C298) *
               C50597 * C50757 * C50869) *
              C50914 +
          ((C20001 * C279 + C20128 + C20128 + C19996 * C299 + C20003 * C1079 +
            C20129 + C20129 + C19997 * C1087 + C20005 * C2481 + C20130 +
            C20130 + C19998 * C2487 + C20007 * C3541 + C20131 + C20131 +
            C19999 * C3545) *
               C50597 * C50757 * C50869 -
           (C20007 * C21197 + C21201 + C21201 + C19999 * C21199 +
            C20005 * C4197 + C21202 + C21202 + C19998 * C4201 + C20003 * C3263 +
            C21203 + C21203 + C19997 * C3269 + C20001 * C1540 + C21204 +
            C21204 + C19996 * C1548) *
               C50597 * C50757 * C50724) *
              C1306) *
         C50625) /
            (p * q * std::sqrt(p + q));
    d2ee[142] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
            C17158 + C17158 + C50793 * C298) *
               C17149 +
           (C17201 + C17202) * C17150 + C17209 * C17151) *
              C50757 * C50660 * C1071 -
          (C17761 * C17151 + (C17407 + C17408) * C17150 +
           (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
            C17370 + C17370 + C17147 * C298) *
               C17149) *
              C50757 * C50660 * C1072 +
          ((C17152 * C279 + C17371 + C17371 + C17147 * C299 + C17154 * C1079 +
            C17372 + C17372 + C50793 * C1087) *
               C17149 +
           (C17409 + C17410) * C17150 + (C17411 + C17412) * C17151) *
              C50757 * C50660 * C1073 -
          ((C17154 * C2483 + C18399 + C18399 + C50793 * C2489 + C17152 * C1077 +
            C18400 + C18400 + C17147 * C1085) *
               C17151 +
           (C17154 * C2482 + C18401 + C18401 + C50793 * C2488 + C17152 * C1078 +
            C18402 + C18402 + C17147 * C1086) *
               C17150 +
           (C17154 * C2481 + C18403 + C18403 + C50793 * C2487 + C17152 * C1079 +
            C18404 + C18404 + C17147 * C1087) *
               C17149) *
              C50757 * C50660 * C1074) *
         C50625) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
             C17158 + C17158 + C50793 * C298) *
                C17149 +
            (C17201 + C17202) * C17150 + C17209 * C17151) *
               C50757 * C50660 * C1000 -
           (C17761 * C17151 + (C17407 + C17408) * C17150 +
            (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
             C17370 + C17370 + C17147 * C298) *
                C17149) *
               C50757 * C50660 * C50696) *
              C1002 +
          (((C17408 + C17407) * C17149 + (C17406 + C17405) * C17150 +
            (C17772 + C17773) * C17151) *
               C50757 * C50660 * C50696 -
           (C17210 * C17151 + (C17204 + C17203) * C17150 +
            (C17202 + C17201) * C17149) *
               C50757 * C50660 * C1000) *
              C1003 +
          ((C17209 * C17149 + (C17206 + C17205) * C17150 +
            (C17207 + C17208) * C17151) *
               C50757 * C50660 * C1000 -
           ((C17154 * C284 + C17766 + C17766 + C50793 * C304 + C17152 * C283 +
             C17767 + C17767 + C17147 * C303) *
                C17151 +
            (C17773 + C17772) * C17150 + C17761 * C17149) *
               C50757 * C50660 * C50696) *
              C1004)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
             C17158 + C17158 + C50793 * C298) *
                C17149 +
            (C17201 + C17202) * C17150 + C17209 * C17151) *
               C50757 * C443 -
           (C17920 * C17151 + (C17609 + C17610) * C17150 +
            (C17154 * C867 + C17571 + C17571 + C50793 * C877 + C17152 * C449 +
             C17572 + C17572 + C17147 * C469) *
                C17149) *
               C50757 * C444 +
           ((C17152 * C450 + C17573 + C17573 + C17147 * C470 + C17154 * C1193 +
             C17574 + C17574 + C50793 * C1201) *
                C17149 +
            (C17611 + C17612) * C17150 + (C17613 + C17614) * C17151) *
               C50757 * C445) *
              C1000 +
          (((C17152 * C867 + C18127 + C18127 + C17147 * C877 + C17154 * C1540 +
             C18128 + C18128 + C50793 * C1548) *
                C17149 +
            (C18151 + C18152) * C17150 + (C18153 + C18154) * C17151) *
               C50757 * C444 -
           (C17761 * C17151 + (C17407 + C17408) * C17150 +
            (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
             C17370 + C17370 + C17147 * C298) *
                C17149) *
               C50757 * C443 -
           ((C17154 * C2686 + C18551 + C18551 + C50793 * C2692 +
             C17152 * C1191 + C18552 + C18552 + C17147 * C1199) *
                C17151 +
            (C17154 * C2685 + C18553 + C18553 + C50793 * C2691 +
             C17152 * C1192 + C18554 + C18554 + C17147 * C1200) *
                C17150 +
            (C17154 * C2684 + C18555 + C18555 + C50793 * C2690 +
             C17152 * C1193 + C18556 + C18556 + C17147 * C1201) *
                C17149) *
               C50757 * C445) *
              C50696) *
         C50625) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C20001 * C119 + C20010 + C20010 + C19996 * C133 + C20003 * C278 +
            C20011 + C20011 + C19997 * C298 + C20005 * C279 + C20012 + C20012 +
            C19998 * C299 + C20007 * C1079 + C20013 + C20013 + C19999 * C1087) *
               C50597 * C50757 * C50660 * C1000 -
           (C20007 * C2481 + C20124 + C20124 + C19999 * C2487 + C20005 * C1079 +
            C20125 + C20125 + C19998 * C1087 + C20003 * C279 + C20126 + C20126 +
            C19997 * C299 + C20001 * C278 + C20127 + C20127 + C19996 * C298) *
               C50597 * C50757 * C50660 * C50696) *
              C1002 +
          ((C20001 * C277 + C20132 + C20132 + C19996 * C297 + C20003 * C280 +
            C20133 + C20133 + C19997 * C300 + C20005 * C1078 + C20134 + C20134 +
            C19998 * C1086 + C20007 * C2482 + C20135 + C20135 +
            C19999 * C2488) *
               C50597 * C50757 * C50660 * C50696 -
           (C20007 * C1078 + C20014 + C20014 + C19999 * C1086 + C20005 * C280 +
            C20015 + C20015 + C19998 * C300 + C20003 * C277 + C20016 + C20016 +
            C19997 * C297 + C20001 * C120 + C20017 + C20017 + C19996 * C134) *
               C50597 * C50757 * C50660 * C1000) *
              C1003 +
          ((C20001 * C121 + C20018 + C20018 + C19996 * C135 + C20003 * C276 +
            C20019 + C20019 + C19997 * C296 + C20005 * C281 + C20020 + C20020 +
            C19998 * C301 + C20007 * C1077 + C20021 + C20021 + C19999 * C1085) *
               C50597 * C50757 * C50660 * C1000 -
           (C20007 * C2483 + C20352 + C20352 + C19999 * C2489 + C20005 * C1077 +
            C20353 + C20353 + C19998 * C1085 + C20003 * C281 + C20354 + C20354 +
            C19997 * C301 + C20001 * C276 + C20355 + C20355 + C19996 * C296) *
               C50597 * C50757 * C50660 * C50696) *
              C1004)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C20001 * C119 + C20010 + C20010 + C19996 * C133 + C20003 * C278 +
           C20011 + C20011 + C19997 * C298 + C20005 * C279 + C20012 + C20012 +
           C19998 * C299 + C20007 * C1079 + C20013 + C20013 + C19999 * C1087) *
              C50597 * C50757 * C50660 * C1071 -
          (C20007 * C2481 + C20124 + C20124 + C19999 * C2487 + C20005 * C1079 +
           C20125 + C20125 + C19998 * C1087 + C20003 * C279 + C20126 + C20126 +
           C19997 * C299 + C20001 * C278 + C20127 + C20127 + C19996 * C298) *
              C50597 * C50757 * C50660 * C1072 +
          (C20001 * C279 + C20128 + C20128 + C19996 * C299 + C20003 * C1079 +
           C20129 + C20129 + C19997 * C1087 + C20005 * C2481 + C20130 + C20130 +
           C19998 * C2487 + C20007 * C3541 + C20131 + C20131 + C19999 * C3545) *
              C50597 * C50757 * C50660 * C1073 -
          (C20007 * C20759 + C20763 + C20763 + C19999 * C20761 +
           C20005 * C3541 + C20764 + C20764 + C19998 * C3545 + C20003 * C2481 +
           C20765 + C20765 + C19997 * C2487 + C20001 * C1079 + C20766 + C20766 +
           C19996 * C1087) *
              C50597 * C50757 * C50660 * C1074) *
         C50625) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C20001 * C119 + C20010 + C20010 + C19996 * C133 + C20003 * C278 +
            C20011 + C20011 + C19997 * C298 + C20005 * C279 + C20012 + C20012 +
            C19998 * C299 + C20007 * C1079 + C20013 + C20013 + C19999 * C1087) *
               C50597 * C50757 * C443 -
           (C20007 * C3263 + C20238 + C20238 + C19999 * C3269 + C20005 * C1540 +
            C20239 + C20239 + C19998 * C1548 + C20003 * C867 + C20240 + C20240 +
            C19997 * C877 + C20001 * C449 + C20241 + C20241 + C19996 * C469) *
               C50597 * C50757 * C444 +
           (C20001 * C450 + C20242 + C20242 + C19996 * C470 + C20003 * C1193 +
            C20243 + C20243 + C19997 * C1201 + C20005 * C2684 + C20244 +
            C20244 + C19998 * C2690 + C20007 * C3699 + C20245 + C20245 +
            C19999 * C3703) *
               C50597 * C50757 * C445) *
              C1000 +
          ((C20001 * C867 + C20588 + C20588 + C19996 * C877 + C20003 * C1540 +
            C20589 + C20589 + C19997 * C1548 + C20005 * C3263 + C20590 +
            C20590 + C19998 * C3269 + C20007 * C4197 + C20591 + C20591 +
            C19999 * C4201) *
               C50597 * C50757 * C444 -
           (C20007 * C2481 + C20124 + C20124 + C19999 * C2487 + C20005 * C1079 +
            C20125 + C20125 + C19998 * C1087 + C20003 * C279 + C20126 + C20126 +
            C19997 * C299 + C20001 * C278 + C20127 + C20127 + C19996 * C298) *
               C50597 * C50757 * C443 -
           (C20007 * C20864 + C20868 + C20868 + C19999 * C20866 +
            C20005 * C3699 + C20869 + C20869 + C19998 * C3703 + C20003 * C2684 +
            C20870 + C20870 + C19997 * C2690 + C20001 * C1193 + C20871 +
            C20871 + C19996 * C1201) *
               C50597 * C50757 * C445) *
              C50696) *
         C50625) /
            (p * q * std::sqrt(p + q));
    d2ee[143] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
              C17158 + C17158 + C50793 * C298) *
                 C17149 +
             (C17201 + C17202) * C17150 + C17209 * C17151) *
                C50757 * C50869 -
            (C17920 * C17151 + (C17609 + C17610) * C17150 +
             (C17154 * C867 + C17571 + C17571 + C50793 * C877 + C17152 * C449 +
              C17572 + C17572 + C17147 * C469) *
                 C17149) *
                C50757 * C50724) *
               C1000 +
           (((C17152 * C867 + C18127 + C18127 + C17147 * C877 + C17154 * C1540 +
              C18128 + C18128 + C50793 * C1548) *
                 C17149 +
             (C18151 + C18152) * C17150 + (C18153 + C18154) * C17151) *
                C50757 * C50724 -
            (C17761 * C17151 + (C17407 + C17408) * C17150 +
             (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
              C17370 + C17370 + C17147 * C298) *
                 C17149) *
                C50757 * C50869) *
               C50696) *
              C50860 +
          ((((C17610 + C17609) * C17149 + (C17608 + C17607) * C17150 +
             (C17931 + C17932) * C17151) *
                C50757 * C50724 -
            (C17210 * C17151 + (C17204 + C17203) * C17150 +
             (C17202 + C17201) * C17149) *
                C50757 * C50869) *
               C1000 +
           (((C17408 + C17407) * C17149 + (C17406 + C17405) * C17150 +
             (C17772 + C17773) * C17151) *
                C50757 * C50869 -
            ((C17154 * C1537 + C18141 + C18141 + C50793 * C1545 +
              C17152 * C870 + C18142 + C18142 + C17147 * C880) *
                 C17151 +
             (C18154 + C18153) * C17150 + (C18152 + C18151) * C17149) *
                C50757 * C50724) *
               C50696) *
              C50631)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20001 * C119 + C20010 + C20010 + C19996 * C133 + C20003 * C278 +
             C20011 + C20011 + C19997 * C298 + C20005 * C279 + C20012 + C20012 +
             C19998 * C299 + C20007 * C1079 + C20013 + C20013 +
             C19999 * C1087) *
                C50597 * C50757 * C50869 -
            (C20007 * C3263 + C20238 + C20238 + C19999 * C3269 +
             C20005 * C1540 + C20239 + C20239 + C19998 * C1548 + C20003 * C867 +
             C20240 + C20240 + C19997 * C877 + C20001 * C449 + C20241 + C20241 +
             C19996 * C469) *
                C50597 * C50757 * C50724) *
               C1000 +
           ((C20001 * C867 + C20588 + C20588 + C19996 * C877 + C20003 * C1540 +
             C20589 + C20589 + C19997 * C1548 + C20005 * C3263 + C20590 +
             C20590 + C19998 * C3269 + C20007 * C4197 + C20591 + C20591 +
             C19999 * C4201) *
                C50597 * C50757 * C50724 -
            (C20007 * C2481 + C20124 + C20124 + C19999 * C2487 +
             C20005 * C1079 + C20125 + C20125 + C19998 * C1087 + C20003 * C279 +
             C20126 + C20126 + C19997 * C299 + C20001 * C278 + C20127 + C20127 +
             C19996 * C298) *
                C50597 * C50757 * C50869) *
               C50696) *
              C50860 +
          (((C20001 * C448 + C20246 + C20246 + C19996 * C468 + C20003 * C868 +
             C20247 + C20247 + C19997 * C878 + C20005 * C1539 + C20248 +
             C20248 + C19998 * C1547 + C20007 * C3264 + C20249 + C20249 +
             C19999 * C3270) *
                C50597 * C50757 * C50724 -
            (C20007 * C1078 + C20014 + C20014 + C19999 * C1086 + C20005 * C280 +
             C20015 + C20015 + C19998 * C300 + C20003 * C277 + C20016 + C20016 +
             C19997 * C297 + C20001 * C120 + C20017 + C20017 + C19996 * C134) *
                C50597 * C50757 * C50869) *
               C1000 +
           ((C20001 * C277 + C20132 + C20132 + C19996 * C297 + C20003 * C280 +
             C20133 + C20133 + C19997 * C300 + C20005 * C1078 + C20134 +
             C20134 + C19998 * C1086 + C20007 * C2482 + C20135 + C20135 +
             C19999 * C2488) *
                C50597 * C50757 * C50869 -
            (C20007 * C4196 + C20592 + C20592 + C19999 * C4200 +
             C20005 * C3264 + C20593 + C20593 + C19998 * C3270 +
             C20003 * C1539 + C20594 + C20594 + C19997 * C1547 + C20001 * C868 +
             C20595 + C20595 + C19996 * C878) *
                C50597 * C50757 * C50724) *
               C50696) *
              C50631)) /
            (p * q * std::sqrt(p + q));
    d2ee[144] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
             C17158 + C17158 + C50793 * C298) *
                C17149 +
            (C17201 + C17202) * C17150 + C17209 * C17151) *
               C50757 * C50660 * C1000 -
           (C17761 * C17151 + (C17407 + C17408) * C17150 +
            (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
             C17370 + C17370 + C17147 * C298) *
                C17149) *
               C50757 * C50660 * C50696) *
              C1002 +
          (((C17408 + C17407) * C17149 + (C17406 + C17405) * C17150 +
            (C17772 + C17773) * C17151) *
               C50757 * C50660 * C50696 -
           (C17210 * C17151 + (C17204 + C17203) * C17150 +
            (C17202 + C17201) * C17149) *
               C50757 * C50660 * C1000) *
              C1003 +
          ((C17209 * C17149 + (C17206 + C17205) * C17150 +
            (C17207 + C17208) * C17151) *
               C50757 * C50660 * C1000 -
           ((C17154 * C284 + C17766 + C17766 + C50793 * C304 + C17152 * C283 +
             C17767 + C17767 + C17147 * C303) *
                C17151 +
            (C17773 + C17772) * C17150 + C17761 * C17149) *
               C50757 * C50660 * C50696) *
              C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
            C17158 + C17158 + C50793 * C298) *
               C17149 +
           (C17201 + C17202) * C17150 + C17209 * C17151) *
              C50757 * C50660 * C1071 -
          (C17761 * C17151 + (C17407 + C17408) * C17150 +
           (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
            C17370 + C17370 + C17147 * C298) *
               C17149) *
              C50757 * C50660 * C1072 +
          ((C17152 * C279 + C17371 + C17371 + C17147 * C299 + C17154 * C1079 +
            C17372 + C17372 + C50793 * C1087) *
               C17149 +
           (C17409 + C17410) * C17150 + (C17411 + C17412) * C17151) *
              C50757 * C50660 * C1073 -
          ((C17154 * C2483 + C18399 + C18399 + C50793 * C2489 + C17152 * C1077 +
            C18400 + C18400 + C17147 * C1085) *
               C17151 +
           (C17154 * C2482 + C18401 + C18401 + C50793 * C2488 + C17152 * C1078 +
            C18402 + C18402 + C17147 * C1086) *
               C17150 +
           (C17154 * C2481 + C18403 + C18403 + C50793 * C2487 + C17152 * C1079 +
            C18404 + C18404 + C17147 * C1087) *
               C17149) *
              C50757 * C50660 * C1074) *
         C50625) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C20001 * C119 + C20010 + C20010 + C19996 * C133 + C20003 * C278 +
            C20011 + C20011 + C19997 * C298 + C20005 * C279 + C20012 + C20012 +
            C19998 * C299 + C20007 * C1079 + C20013 + C20013 + C19999 * C1087) *
               C50597 * C50757 * C50660 * C1000 -
           (C20007 * C2481 + C20124 + C20124 + C19999 * C2487 + C20005 * C1079 +
            C20125 + C20125 + C19998 * C1087 + C20003 * C279 + C20126 + C20126 +
            C19997 * C299 + C20001 * C278 + C20127 + C20127 + C19996 * C298) *
               C50597 * C50757 * C50660 * C50696) *
              C1002 +
          ((C20001 * C277 + C20132 + C20132 + C19996 * C297 + C20003 * C280 +
            C20133 + C20133 + C19997 * C300 + C20005 * C1078 + C20134 + C20134 +
            C19998 * C1086 + C20007 * C2482 + C20135 + C20135 +
            C19999 * C2488) *
               C50597 * C50757 * C50660 * C50696 -
           (C20007 * C1078 + C20014 + C20014 + C19999 * C1086 + C20005 * C280 +
            C20015 + C20015 + C19998 * C300 + C20003 * C277 + C20016 + C20016 +
            C19997 * C297 + C20001 * C120 + C20017 + C20017 + C19996 * C134) *
               C50597 * C50757 * C50660 * C1000) *
              C1003 +
          ((C20001 * C121 + C20018 + C20018 + C19996 * C135 + C20003 * C276 +
            C20019 + C20019 + C19997 * C296 + C20005 * C281 + C20020 + C20020 +
            C19998 * C301 + C20007 * C1077 + C20021 + C20021 + C19999 * C1085) *
               C50597 * C50757 * C50660 * C1000 -
           (C20007 * C2483 + C20352 + C20352 + C19999 * C2489 + C20005 * C1077 +
            C20353 + C20353 + C19998 * C1085 + C20003 * C281 + C20354 + C20354 +
            C19997 * C301 + C20001 * C276 + C20355 + C20355 + C19996 * C296) *
               C50597 * C50757 * C50660 * C50696) *
              C1004)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((C20001 * C119 + C20010 + C20010 + C19996 * C133 + C20003 * C278 +
           C20011 + C20011 + C19997 * C298 + C20005 * C279 + C20012 + C20012 +
           C19998 * C299 + C20007 * C1079 + C20013 + C20013 + C19999 * C1087) *
              C50597 * C50757 * C50660 * C1071 -
          (C20007 * C2481 + C20124 + C20124 + C19999 * C2487 + C20005 * C1079 +
           C20125 + C20125 + C19998 * C1087 + C20003 * C279 + C20126 + C20126 +
           C19997 * C299 + C20001 * C278 + C20127 + C20127 + C19996 * C298) *
              C50597 * C50757 * C50660 * C1072 +
          (C20001 * C279 + C20128 + C20128 + C19996 * C299 + C20003 * C1079 +
           C20129 + C20129 + C19997 * C1087 + C20005 * C2481 + C20130 + C20130 +
           C19998 * C2487 + C20007 * C3541 + C20131 + C20131 + C19999 * C3545) *
              C50597 * C50757 * C50660 * C1073 -
          (C20007 * C20759 + C20763 + C20763 + C19999 * C20761 +
           C20005 * C3541 + C20764 + C20764 + C19998 * C3545 + C20003 * C2481 +
           C20765 + C20765 + C19997 * C2487 + C20001 * C1079 + C20766 + C20766 +
           C19996 * C1087) *
              C50597 * C50757 * C50660 * C1074) *
         C50625) /
            (p * q * std::sqrt(p + q));
    d2ee[145] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
              C17158 + C17158 + C50793 * C298) *
                 C17149 +
             (C17201 + C17202) * C17150 + C17209 * C17151) *
                C50757 * C1651 -
            (C17920 * C17151 + (C17609 + C17610) * C17150 +
             (C17154 * C867 + C17571 + C17571 + C50793 * C877 + C17152 * C449 +
              C17572 + C17572 + C17147 * C469) *
                 C17149) *
                C50757 * C50724) *
               C50868 +
           (((C17152 * C867 + C18127 + C18127 + C17147 * C877 + C17154 * C1540 +
              C18128 + C18128 + C50793 * C1548) *
                 C17149 +
             (C18151 + C18152) * C17150 + (C18153 + C18154) * C17151) *
                C50757 * C50724 -
            (C17761 * C17151 + (C17407 + C17408) * C17150 +
             (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
              C17370 + C17370 + C17147 * C298) *
                 C17149) *
                C50757 * C1651) *
               C50696) *
              C50860 +
          ((((C17610 + C17609) * C17149 + (C17608 + C17607) * C17150 +
             (C17931 + C17932) * C17151) *
                C50757 * C50724 -
            (C17210 * C17151 + (C17204 + C17203) * C17150 +
             (C17202 + C17201) * C17149) *
                C50757 * C1651) *
               C50868 +
           (((C17408 + C17407) * C17149 + (C17406 + C17405) * C17150 +
             (C17772 + C17773) * C17151) *
                C50757 * C1651 -
            ((C17154 * C1537 + C18141 + C18141 + C50793 * C1545 +
              C17152 * C870 + C18142 + C18142 + C17147 * C880) *
                 C17151 +
             (C18154 + C18153) * C17150 + (C18152 + C18151) * C17149) *
                C50757 * C50724) *
               C50696) *
              C50631)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C20001 * C119 + C20010 + C20010 + C19996 * C133 + C20003 * C278 +
             C20011 + C20011 + C19997 * C298 + C20005 * C279 + C20012 + C20012 +
             C19998 * C299 + C20007 * C1079 + C20013 + C20013 +
             C19999 * C1087) *
                C50597 * C50757 * C1651 -
            (C20007 * C3263 + C20238 + C20238 + C19999 * C3269 +
             C20005 * C1540 + C20239 + C20239 + C19998 * C1548 + C20003 * C867 +
             C20240 + C20240 + C19997 * C877 + C20001 * C449 + C20241 + C20241 +
             C19996 * C469) *
                C50597 * C50757 * C50724) *
               C50868 +
           ((C20001 * C867 + C20588 + C20588 + C19996 * C877 + C20003 * C1540 +
             C20589 + C20589 + C19997 * C1548 + C20005 * C3263 + C20590 +
             C20590 + C19998 * C3269 + C20007 * C4197 + C20591 + C20591 +
             C19999 * C4201) *
                C50597 * C50757 * C50724 -
            (C20007 * C2481 + C20124 + C20124 + C19999 * C2487 +
             C20005 * C1079 + C20125 + C20125 + C19998 * C1087 + C20003 * C279 +
             C20126 + C20126 + C19997 * C299 + C20001 * C278 + C20127 + C20127 +
             C19996 * C298) *
                C50597 * C50757 * C1651) *
               C50696) *
              C50860 +
          (((C20001 * C448 + C20246 + C20246 + C19996 * C468 + C20003 * C868 +
             C20247 + C20247 + C19997 * C878 + C20005 * C1539 + C20248 +
             C20248 + C19998 * C1547 + C20007 * C3264 + C20249 + C20249 +
             C19999 * C3270) *
                C50597 * C50757 * C50724 -
            (C20007 * C1078 + C20014 + C20014 + C19999 * C1086 + C20005 * C280 +
             C20015 + C20015 + C19998 * C300 + C20003 * C277 + C20016 + C20016 +
             C19997 * C297 + C20001 * C120 + C20017 + C20017 + C19996 * C134) *
                C50597 * C50757 * C1651) *
               C50868 +
           ((C20001 * C277 + C20132 + C20132 + C19996 * C297 + C20003 * C280 +
             C20133 + C20133 + C19997 * C300 + C20005 * C1078 + C20134 +
             C20134 + C19998 * C1086 + C20007 * C2482 + C20135 + C20135 +
             C19999 * C2488) *
                C50597 * C50757 * C1651 -
            (C20007 * C4196 + C20592 + C20592 + C19999 * C4200 +
             C20005 * C3264 + C20593 + C20593 + C19998 * C3270 +
             C20003 * C1539 + C20594 + C20594 + C19997 * C1547 + C20001 * C868 +
             C20595 + C20595 + C19996 * C878) *
                C50597 * C50757 * C50724) *
               C50696) *
              C50631)) /
            (p * q * std::sqrt(p + q));
    d2ee[146] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
             C17158 + C17158 + C50793 * C298) *
                C17149 +
            (C17201 + C17202) * C17150 + C17209 * C17151) *
               C50757 * C50915 -
           (C17920 * C17151 + (C17609 + C17610) * C17150 +
            (C17154 * C867 + C17571 + C17571 + C50793 * C877 + C17152 * C449 +
             C17572 + C17572 + C17147 * C469) *
                C17149) *
               C50757 * C50916 +
           ((C17152 * C450 + C17573 + C17573 + C17147 * C470 + C17154 * C1193 +
             C17574 + C17574 + C50793 * C1201) *
                C17149 +
            (C17611 + C17612) * C17150 + (C17613 + C17614) * C17151) *
               C50757 * C2067) *
              C50868 +
          (((C17152 * C867 + C18127 + C18127 + C17147 * C877 + C17154 * C1540 +
             C18128 + C18128 + C50793 * C1548) *
                C17149 +
            (C18151 + C18152) * C17150 + (C18153 + C18154) * C17151) *
               C50757 * C50916 -
           (C17761 * C17151 + (C17407 + C17408) * C17150 +
            (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
             C17370 + C17370 + C17147 * C298) *
                C17149) *
               C50757 * C50915 -
           ((C17154 * C2686 + C18551 + C18551 + C50793 * C2692 +
             C17152 * C1191 + C18552 + C18552 + C17147 * C1199) *
                C17151 +
            (C17154 * C2685 + C18553 + C18553 + C50793 * C2691 +
             C17152 * C1192 + C18554 + C18554 + C17147 * C1200) *
                C17150 +
            (C17154 * C2684 + C18555 + C18555 + C50793 * C2690 +
             C17152 * C1193 + C18556 + C18556 + C17147 * C1201) *
                C17149) *
               C50757 * C2067) *
              C50696) *
         C50625) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C20001 * C119 + C20010 + C20010 + C19996 * C133 + C20003 * C278 +
            C20011 + C20011 + C19997 * C298 + C20005 * C279 + C20012 + C20012 +
            C19998 * C299 + C20007 * C1079 + C20013 + C20013 + C19999 * C1087) *
               C50597 * C50757 * C50915 -
           (C20007 * C3263 + C20238 + C20238 + C19999 * C3269 + C20005 * C1540 +
            C20239 + C20239 + C19998 * C1548 + C20003 * C867 + C20240 + C20240 +
            C19997 * C877 + C20001 * C449 + C20241 + C20241 + C19996 * C469) *
               C50597 * C50757 * C50916 +
           (C20001 * C450 + C20242 + C20242 + C19996 * C470 + C20003 * C1193 +
            C20243 + C20243 + C19997 * C1201 + C20005 * C2684 + C20244 +
            C20244 + C19998 * C2690 + C20007 * C3699 + C20245 + C20245 +
            C19999 * C3703) *
               C50597 * C50757 * C2067) *
              C50868 +
          ((C20001 * C867 + C20588 + C20588 + C19996 * C877 + C20003 * C1540 +
            C20589 + C20589 + C19997 * C1548 + C20005 * C3263 + C20590 +
            C20590 + C19998 * C3269 + C20007 * C4197 + C20591 + C20591 +
            C19999 * C4201) *
               C50597 * C50757 * C50916 -
           (C20007 * C2481 + C20124 + C20124 + C19999 * C2487 + C20005 * C1079 +
            C20125 + C20125 + C19998 * C1087 + C20003 * C279 + C20126 + C20126 +
            C19997 * C299 + C20001 * C278 + C20127 + C20127 + C19996 * C298) *
               C50597 * C50757 * C50915 -
           (C20007 * C20864 + C20868 + C20868 + C19999 * C20866 +
            C20005 * C3699 + C20869 + C20869 + C19998 * C3703 + C20003 * C2684 +
            C20870 + C20870 + C19997 * C2690 + C20001 * C1193 + C20871 +
            C20871 + C19996 * C1201) *
               C50597 * C50757 * C2067) *
              C50696) *
         C50625) /
            (p * q * std::sqrt(p + q));
    d2ee[147] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
             C17158 + C17158 + C50793 * C298) *
                C17149 +
            (C17201 + C17202) * C17150 + C17209 * C17151) *
               C50757 * C1651 -
           (C17920 * C17151 + (C17609 + C17610) * C17150 +
            (C17154 * C867 + C17571 + C17571 + C50793 * C877 + C17152 * C449 +
             C17572 + C17572 + C17147 * C469) *
                C17149) *
               C50757 * C50724) *
              C270 +
          (((C17152 * C867 + C18127 + C18127 + C17147 * C877 + C17154 * C1540 +
             C18128 + C18128 + C50793 * C1548) *
                C17149 +
            (C18151 + C18152) * C17150 + (C18153 + C18154) * C17151) *
               C50757 * C50724 -
           (C17761 * C17151 + (C17407 + C17408) * C17150 +
            (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
             C17370 + C17370 + C17147 * C298) *
                C17149) *
               C50757 * C1651) *
              C271 +
          (((C17152 * C279 + C17371 + C17371 + C17147 * C299 + C17154 * C1079 +
             C17372 + C17372 + C50793 * C1087) *
                C17149 +
            (C17409 + C17410) * C17150 + (C17411 + C17412) * C17151) *
               C50757 * C1651 -
           ((C17154 * C3265 + C19043 + C19043 + C50793 * C3271 +
             C17152 * C1538 + C19044 + C19044 + C17147 * C1546) *
                C17151 +
            (C17154 * C3264 + C19045 + C19045 + C50793 * C3270 +
             C17152 * C1539 + C19046 + C19046 + C17147 * C1547) *
                C17150 +
            (C17154 * C3263 + C19047 + C19047 + C50793 * C3269 +
             C17152 * C1540 + C19048 + C19048 + C17147 * C1548) *
                C17149) *
               C50757 * C50724) *
              C272) *
         C50625) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
             C17158 + C17158 + C50793 * C298) *
                C17149 +
            (C17201 + C17202) * C17150 + C17209 * C17151) *
               C50757 * C1651 -
           (C17920 * C17151 + (C17609 + C17610) * C17150 +
            (C17154 * C867 + C17571 + C17571 + C50793 * C877 + C17152 * C449 +
             C17572 + C17572 + C17147 * C469) *
                C17149) *
               C50757 * C50724) *
              C50644 * C1002 +
          (((C17610 + C17609) * C17149 + (C17608 + C17607) * C17150 +
            (C17931 + C17932) * C17151) *
               C50757 * C50724 -
           (C17210 * C17151 + (C17204 + C17203) * C17150 +
            (C17202 + C17201) * C17149) *
               C50757 * C1651) *
              C50644 * C1003 +
          ((C17209 * C17149 + (C17206 + C17205) * C17150 +
            (C17207 + C17208) * C17151) *
               C50757 * C1651 -
           ((C17154 * C871 + C17925 + C17925 + C50793 * C881 + C17152 * C454 +
             C17926 + C17926 + C17147 * C474) *
                C17151 +
            (C17932 + C17931) * C17150 + C17920 * C17149) *
               C50757 * C50724) *
              C50644 * C1004)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
            C17158 + C17158 + C50793 * C298) *
               C17149 +
           (C17201 + C17202) * C17150 + C17209 * C17151) *
              C50757 * C1817 -
          (C17920 * C17151 + (C17609 + C17610) * C17150 +
           (C17154 * C867 + C17571 + C17571 + C50793 * C877 + C17152 * C449 +
            C17572 + C17572 + C17147 * C469) *
               C17149) *
              C50757 * C1818 +
          ((C17152 * C450 + C17573 + C17573 + C17147 * C470 + C17154 * C1193 +
            C17574 + C17574 + C50793 * C1201) *
               C17149 +
           (C17611 + C17612) * C17150 + (C17613 + C17614) * C17151) *
              C50757 * C1819 -
          ((C17154 * C6064 + C19439 + C19439 + C50793 * C6066 + C17152 * C1822 +
            C19440 + C19440 + C17147 * C1830) *
               C17151 +
           (C17154 * C4599 + C19441 + C19441 + C50793 * C4607 + C17152 * C1823 +
            C19442 + C19442 + C17147 * C1831) *
               C17150 +
           (C17154 * C4601 + C19443 + C19443 + C50793 * C4609 + C17152 * C1824 +
            C19444 + C19444 + C17147 * C1832) *
               C17149) *
              C50757 * C1820) *
         C50644 * C50625) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C20001 * C119 + C20010 + C20010 + C19996 * C133 + C20003 * C278 +
            C20011 + C20011 + C19997 * C298 + C20005 * C279 + C20012 + C20012 +
            C19998 * C299 + C20007 * C1079 + C20013 + C20013 + C19999 * C1087) *
               C50597 * C50757 * C1651 -
           (C20007 * C3263 + C20238 + C20238 + C19999 * C3269 + C20005 * C1540 +
            C20239 + C20239 + C19998 * C1548 + C20003 * C867 + C20240 + C20240 +
            C19997 * C877 + C20001 * C449 + C20241 + C20241 + C19996 * C469) *
               C50597 * C50757 * C50724) *
              C50644 * C1002 +
          ((C20001 * C448 + C20246 + C20246 + C19996 * C468 + C20003 * C868 +
            C20247 + C20247 + C19997 * C878 + C20005 * C1539 + C20248 + C20248 +
            C19998 * C1547 + C20007 * C3264 + C20249 + C20249 +
            C19999 * C3270) *
               C50597 * C50757 * C50724 -
           (C20007 * C1078 + C20014 + C20014 + C19999 * C1086 + C20005 * C280 +
            C20015 + C20015 + C19998 * C300 + C20003 * C277 + C20016 + C20016 +
            C19997 * C297 + C20001 * C120 + C20017 + C20017 + C19996 * C134) *
               C50597 * C50757 * C1651) *
              C50644 * C1003 +
          ((C20001 * C121 + C20018 + C20018 + C19996 * C135 + C20003 * C276 +
            C20019 + C20019 + C19997 * C296 + C20005 * C281 + C20020 + C20020 +
            C19998 * C301 + C20007 * C1077 + C20021 + C20021 + C19999 * C1085) *
               C50597 * C50757 * C1651 -
           (C20007 * C3265 + C20454 + C20454 + C19999 * C3271 + C20005 * C1538 +
            C20455 + C20455 + C19998 * C1546 + C20003 * C869 + C20456 + C20456 +
            C19997 * C879 + C20001 * C447 + C20457 + C20457 + C19996 * C467) *
               C50597 * C50757 * C50724) *
              C50644 * C1004)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C20001 * C119 + C20010 + C20010 + C19996 * C133 + C20003 * C278 +
            C20011 + C20011 + C19997 * C298 + C20005 * C279 + C20012 + C20012 +
            C19998 * C299 + C20007 * C1079 + C20013 + C20013 + C19999 * C1087) *
               C50597 * C50757 * C1651 -
           (C20007 * C3263 + C20238 + C20238 + C19999 * C3269 + C20005 * C1540 +
            C20239 + C20239 + C19998 * C1548 + C20003 * C867 + C20240 + C20240 +
            C19997 * C877 + C20001 * C449 + C20241 + C20241 + C19996 * C469) *
               C50597 * C50757 * C50724) *
              C270 +
          ((C20001 * C867 + C20588 + C20588 + C19996 * C877 + C20003 * C1540 +
            C20589 + C20589 + C19997 * C1548 + C20005 * C3263 + C20590 +
            C20590 + C19998 * C3269 + C20007 * C4197 + C20591 + C20591 +
            C19999 * C4201) *
               C50597 * C50757 * C50724 -
           (C20007 * C2481 + C20124 + C20124 + C19999 * C2487 + C20005 * C1079 +
            C20125 + C20125 + C19998 * C1087 + C20003 * C279 + C20126 + C20126 +
            C19997 * C299 + C20001 * C278 + C20127 + C20127 + C19996 * C298) *
               C50597 * C50757 * C1651) *
              C271 +
          ((C20001 * C279 + C20128 + C20128 + C19996 * C299 + C20003 * C1079 +
            C20129 + C20129 + C19997 * C1087 + C20005 * C2481 + C20130 +
            C20130 + C19998 * C2487 + C20007 * C3541 + C20131 + C20131 +
            C19999 * C3545) *
               C50597 * C50757 * C1651 -
           (C20007 * C21197 + C21201 + C21201 + C19999 * C21199 +
            C20005 * C4197 + C21202 + C21202 + C19998 * C4201 + C20003 * C3263 +
            C21203 + C21203 + C19997 * C3269 + C20001 * C1540 + C21204 +
            C21204 + C19996 * C1548) *
               C50597 * C50757 * C50724) *
              C272) *
         C50625) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C20001 * C119 + C20010 + C20010 + C19996 * C133 + C20003 * C278 +
           C20011 + C20011 + C19997 * C298 + C20005 * C279 + C20012 + C20012 +
           C19998 * C299 + C20007 * C1079 + C20013 + C20013 + C19999 * C1087) *
              C50597 * C50757 * C1817 -
          (C20007 * C3263 + C20238 + C20238 + C19999 * C3269 + C20005 * C1540 +
           C20239 + C20239 + C19998 * C1548 + C20003 * C867 + C20240 + C20240 +
           C19997 * C877 + C20001 * C449 + C20241 + C20241 + C19996 * C469) *
              C50597 * C50757 * C1818 +
          (C20001 * C450 + C20242 + C20242 + C19996 * C470 + C20003 * C1193 +
           C20243 + C20243 + C19997 * C1201 + C20005 * C2684 + C20244 + C20244 +
           C19998 * C2690 + C20007 * C3699 + C20245 + C20245 + C19999 * C3703) *
              C50597 * C50757 * C1819 -
          (C20007 * C21466 + C21470 + C21470 + C19999 * C21468 +
           C20005 * C4600 + C21471 + C21471 + C19998 * C4608 + C20003 * C4601 +
           C21472 + C21472 + C19997 * C4609 + C20001 * C1824 + C21473 + C21473 +
           C19996 * C1832) *
              C50597 * C50757 * C1820) *
         C50644 * C50625) /
            (p * q * std::sqrt(p + q));
    d2ee[148] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
             C17158 + C17158 + C50793 * C298) *
                C17149 +
            (C17201 + C17202) * C17150 + C17209 * C17151) *
               C50757 * C50915 -
           (C17920 * C17151 + (C17609 + C17610) * C17150 +
            (C17154 * C867 + C17571 + C17571 + C50793 * C877 + C17152 * C449 +
             C17572 + C17572 + C17147 * C469) *
                C17149) *
               C50757 * C50916 +
           ((C17152 * C450 + C17573 + C17573 + C17147 * C470 + C17154 * C1193 +
             C17574 + C17574 + C50793 * C1201) *
                C17149 +
            (C17611 + C17612) * C17150 + (C17613 + C17614) * C17151) *
               C50757 * C2067) *
              C50644 * C50860 +
          (((C17610 + C17609) * C17149 + (C17608 + C17607) * C17150 +
            (C17931 + C17932) * C17151) *
               C50757 * C50916 -
           (C17210 * C17151 + (C17204 + C17203) * C17150 +
            (C17202 + C17201) * C17149) *
               C50757 * C50915 -
           ((C17154 * C1190 + C17589 + C17589 + C50793 * C1198 + C17152 * C453 +
             C17590 + C17590 + C17147 * C473) *
                C17151 +
            (C17614 + C17613) * C17150 + (C17612 + C17611) * C17149) *
               C50757 * C2067) *
              C50644 * C50631)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C20001 * C119 + C20010 + C20010 + C19996 * C133 + C20003 * C278 +
            C20011 + C20011 + C19997 * C298 + C20005 * C279 + C20012 + C20012 +
            C19998 * C299 + C20007 * C1079 + C20013 + C20013 + C19999 * C1087) *
               C50597 * C50757 * C50915 -
           (C20007 * C3263 + C20238 + C20238 + C19999 * C3269 + C20005 * C1540 +
            C20239 + C20239 + C19998 * C1548 + C20003 * C867 + C20240 + C20240 +
            C19997 * C877 + C20001 * C449 + C20241 + C20241 + C19996 * C469) *
               C50597 * C50757 * C50916 +
           (C20001 * C450 + C20242 + C20242 + C19996 * C470 + C20003 * C1193 +
            C20243 + C20243 + C19997 * C1201 + C20005 * C2684 + C20244 +
            C20244 + C19998 * C2690 + C20007 * C3699 + C20245 + C20245 +
            C19999 * C3703) *
               C50597 * C50757 * C2067) *
              C50644 * C50860 +
          ((C20001 * C448 + C20246 + C20246 + C19996 * C468 + C20003 * C868 +
            C20247 + C20247 + C19997 * C878 + C20005 * C1539 + C20248 + C20248 +
            C19998 * C1547 + C20007 * C3264 + C20249 + C20249 +
            C19999 * C3270) *
               C50597 * C50757 * C50916 -
           (C20007 * C1078 + C20014 + C20014 + C19999 * C1086 + C20005 * C280 +
            C20015 + C20015 + C19998 * C300 + C20003 * C277 + C20016 + C20016 +
            C19997 * C297 + C20001 * C120 + C20017 + C20017 + C19996 * C134) *
               C50597 * C50757 * C50915 -
           (C20007 * C3698 + C20250 + C20250 + C19999 * C3702 + C20005 * C2685 +
            C20251 + C20251 + C19998 * C2691 + C20003 * C1192 + C20252 +
            C20252 + C19997 * C1200 + C20001 * C451 + C20253 + C20253 +
            C19996 * C471) *
               C50597 * C50757 * C2067) *
              C50644 * C50631)) /
            (p * q * std::sqrt(p + q));
    d2ee[149] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
             C17158 + C17158 + C50793 * C298) *
                C17149 +
            (C17201 + C17202) * C17150 + C17209 * C17151) *
               C50757 * C1651 -
           (C17920 * C17151 + (C17609 + C17610) * C17150 +
            (C17154 * C867 + C17571 + C17571 + C50793 * C877 + C17152 * C449 +
             C17572 + C17572 + C17147 * C469) *
                C17149) *
               C50757 * C50724) *
              C50644 * C1002 +
          (((C17610 + C17609) * C17149 + (C17608 + C17607) * C17150 +
            (C17931 + C17932) * C17151) *
               C50757 * C50724 -
           (C17210 * C17151 + (C17204 + C17203) * C17150 +
            (C17202 + C17201) * C17149) *
               C50757 * C1651) *
              C50644 * C1003 +
          ((C17209 * C17149 + (C17206 + C17205) * C17150 +
            (C17207 + C17208) * C17151) *
               C50757 * C1651 -
           ((C17154 * C871 + C17925 + C17925 + C50793 * C881 + C17152 * C454 +
             C17926 + C17926 + C17147 * C474) *
                C17151 +
            (C17932 + C17931) * C17150 + C17920 * C17149) *
               C50757 * C50724) *
              C50644 * C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C17152 * C119 + C17157 + C17157 + C17147 * C133 + C17154 * C278 +
             C17158 + C17158 + C50793 * C298) *
                C17149 +
            (C17201 + C17202) * C17150 + C17209 * C17151) *
               C50757 * C1651 -
           (C17920 * C17151 + (C17609 + C17610) * C17150 +
            (C17154 * C867 + C17571 + C17571 + C50793 * C877 + C17152 * C449 +
             C17572 + C17572 + C17147 * C469) *
                C17149) *
               C50757 * C50724) *
              C270 +
          (((C17152 * C867 + C18127 + C18127 + C17147 * C877 + C17154 * C1540 +
             C18128 + C18128 + C50793 * C1548) *
                C17149 +
            (C18151 + C18152) * C17150 + (C18153 + C18154) * C17151) *
               C50757 * C50724 -
           (C17761 * C17151 + (C17407 + C17408) * C17150 +
            (C17154 * C279 + C17369 + C17369 + C50793 * C299 + C17152 * C278 +
             C17370 + C17370 + C17147 * C298) *
                C17149) *
               C50757 * C1651) *
              C271 +
          (((C17152 * C279 + C17371 + C17371 + C17147 * C299 + C17154 * C1079 +
             C17372 + C17372 + C50793 * C1087) *
                C17149 +
            (C17409 + C17410) * C17150 + (C17411 + C17412) * C17151) *
               C50757 * C1651 -
           ((C17154 * C3265 + C19043 + C19043 + C50793 * C3271 +
             C17152 * C1538 + C19044 + C19044 + C17147 * C1546) *
                C17151 +
            (C17154 * C3264 + C19045 + C19045 + C50793 * C3270 +
             C17152 * C1539 + C19046 + C19046 + C17147 * C1547) *
                C17150 +
            (C17154 * C3263 + C19047 + C19047 + C50793 * C3269 +
             C17152 * C1540 + C19048 + C19048 + C17147 * C1548) *
                C17149) *
               C50757 * C50724) *
              C272) *
         C50625) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C20001 * C119 + C20010 + C20010 + C19996 * C133 + C20003 * C278 +
            C20011 + C20011 + C19997 * C298 + C20005 * C279 + C20012 + C20012 +
            C19998 * C299 + C20007 * C1079 + C20013 + C20013 + C19999 * C1087) *
               C50597 * C50757 * C1651 -
           (C20007 * C3263 + C20238 + C20238 + C19999 * C3269 + C20005 * C1540 +
            C20239 + C20239 + C19998 * C1548 + C20003 * C867 + C20240 + C20240 +
            C19997 * C877 + C20001 * C449 + C20241 + C20241 + C19996 * C469) *
               C50597 * C50757 * C50724) *
              C50644 * C1002 +
          ((C20001 * C448 + C20246 + C20246 + C19996 * C468 + C20003 * C868 +
            C20247 + C20247 + C19997 * C878 + C20005 * C1539 + C20248 + C20248 +
            C19998 * C1547 + C20007 * C3264 + C20249 + C20249 +
            C19999 * C3270) *
               C50597 * C50757 * C50724 -
           (C20007 * C1078 + C20014 + C20014 + C19999 * C1086 + C20005 * C280 +
            C20015 + C20015 + C19998 * C300 + C20003 * C277 + C20016 + C20016 +
            C19997 * C297 + C20001 * C120 + C20017 + C20017 + C19996 * C134) *
               C50597 * C50757 * C1651) *
              C50644 * C1003 +
          ((C20001 * C121 + C20018 + C20018 + C19996 * C135 + C20003 * C276 +
            C20019 + C20019 + C19997 * C296 + C20005 * C281 + C20020 + C20020 +
            C19998 * C301 + C20007 * C1077 + C20021 + C20021 + C19999 * C1085) *
               C50597 * C50757 * C1651 -
           (C20007 * C3265 + C20454 + C20454 + C19999 * C3271 + C20005 * C1538 +
            C20455 + C20455 + C19998 * C1546 + C20003 * C869 + C20456 + C20456 +
            C19997 * C879 + C20001 * C447 + C20457 + C20457 + C19996 * C467) *
               C50597 * C50757 * C50724) *
              C50644 * C1004)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C20001 * C119 + C20010 + C20010 + C19996 * C133 + C20003 * C278 +
            C20011 + C20011 + C19997 * C298 + C20005 * C279 + C20012 + C20012 +
            C19998 * C299 + C20007 * C1079 + C20013 + C20013 + C19999 * C1087) *
               C50597 * C50757 * C1651 -
           (C20007 * C3263 + C20238 + C20238 + C19999 * C3269 + C20005 * C1540 +
            C20239 + C20239 + C19998 * C1548 + C20003 * C867 + C20240 + C20240 +
            C19997 * C877 + C20001 * C449 + C20241 + C20241 + C19996 * C469) *
               C50597 * C50757 * C50724) *
              C270 +
          ((C20001 * C867 + C20588 + C20588 + C19996 * C877 + C20003 * C1540 +
            C20589 + C20589 + C19997 * C1548 + C20005 * C3263 + C20590 +
            C20590 + C19998 * C3269 + C20007 * C4197 + C20591 + C20591 +
            C19999 * C4201) *
               C50597 * C50757 * C50724 -
           (C20007 * C2481 + C20124 + C20124 + C19999 * C2487 + C20005 * C1079 +
            C20125 + C20125 + C19998 * C1087 + C20003 * C279 + C20126 + C20126 +
            C19997 * C299 + C20001 * C278 + C20127 + C20127 + C19996 * C298) *
               C50597 * C50757 * C1651) *
              C271 +
          ((C20001 * C279 + C20128 + C20128 + C19996 * C299 + C20003 * C1079 +
            C20129 + C20129 + C19997 * C1087 + C20005 * C2481 + C20130 +
            C20130 + C19998 * C2487 + C20007 * C3541 + C20131 + C20131 +
            C19999 * C3545) *
               C50597 * C50757 * C1651 -
           (C20007 * C21197 + C21201 + C21201 + C19999 * C21199 +
            C20005 * C4197 + C21202 + C21202 + C19998 * C4201 + C20003 * C3263 +
            C21203 + C21203 + C19997 * C3269 + C20001 * C1540 + C21204 +
            C21204 + C19996 * C1548) *
               C50597 * C50757 * C50724) *
              C272) *
         C50625) /
            (p * q * std::sqrt(p + q));
    d2ee[150] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
              C8006 + C8006 + C50793 * C298) *
                 C50853 +
             (C8049 + C8050) * C50602) *
                C33790 +
            ((C14001 + C14002) * C50853 + C13977 * C50602) * C50821) *
               C50660 * C50868 -
           ((C14663 * C50602 + (C14673 + C14672) * C50853) * C50821 +
            ((C8255 + C8256) * C50602 +
             (C8002 * C279 + C8217 + C8217 + C50793 * C299 + C8000 * C278 +
              C8218 + C8218 + C50881 * C298) *
                 C50853) *
                C33790) *
               C50660 * C50696) *
              C50911 +
          ((((C8256 + C8255) * C50853 + (C8254 + C8253) * C50602) * C33790 +
            (C14658 * C50853 + (C9001 + C9002) * C50602) * C50821) *
               C50660 * C50696 -
           ((C8768 * C50602 + C13983 * C50853) * C50821 +
            ((C8052 + C8051) * C50602 + (C8050 + C8049) * C50853) * C33790) *
               C50660 * C50868) *
              C50912 +
          (((C8057 * C50853 + (C8054 + C8053) * C50602) * C33790 +
            (C14395 * C50853 + (C8779 + C8780) * C50602) * C50821) *
               C50660 * C50868 -
           (((C8002 * C1537 + C8989 + C8989 + C50793 * C1545 + C8000 * C870 +
              C8990 + C8990 + C50881 * C880) *
                 C50602 +
             (C9002 + C9001) * C50853) *
                C50821 +
            ((C8621 + C8620) * C50602 + C8609 * C50853) * C33790) *
               C50660 * C50696) *
              C618)) /
        (p * q * std::sqrt(p + q));
    d2ee[151] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
               C8006 + C8006 + C50793 * C298) *
                  C50853 +
              (C8049 + C8050) * C50602) *
                 C33790 +
             ((C14001 + C14002) * C50853 + C13977 * C50602) * C50821) *
                C50869 -
            ((C13978 * C50602 + (C14003 + C14004) * C50853) * C50821 +
             (C13983 * C50602 + (C14002 + C14001) * C50853) * C33790) *
                C50724) *
               C50868 +
           ((((C14672 + C14673) * C50853 + C14658 * C50602) * C33790 +
             ((C15210 + C15211) * C50853 + (C14674 + C14675) * C50602) *
                 C50821) *
                C50724 -
            ((C14663 * C50602 + (C14673 + C14672) * C50853) * C50821 +
             ((C8255 + C8256) * C50602 +
              (C8002 * C279 + C8217 + C8217 + C50793 * C299 + C8000 * C278 +
               C8218 + C8218 + C50881 * C298) *
                  C50853) *
                 C33790) *
                C50869) *
               C50696) *
              C273 +
          ((((C13977 * C50853 + C14395 * C50602) * C33790 +
             (C13984 * C50853 + (C8461 + C8462) * C50602) * C50821) *
                C50724 -
            ((C8768 * C50602 + C13983 * C50853) * C50821 +
             ((C8052 + C8051) * C50602 + (C8050 + C8049) * C50853) * C33790) *
                C50869) *
               C50868 +
           ((((C8256 + C8255) * C50853 + (C8254 + C8253) * C50602) * C33790 +
             (C14658 * C50853 + (C9001 + C9002) * C50602) * C50821) *
                C50869 -
            (((C8002 * C2686 + C9399 + C9399 + C50793 * C2692 + C8000 * C1191 +
               C9400 + C9400 + C50881 * C1199) *
                  C50602 +
              (C14675 + C14674) * C50853) *
                 C50821 +
             ((C9002 + C9001) * C50602 + C14663 * C50853) * C33790) *
                C50724) *
               C50696) *
              C50631)) /
        (p * q * std::sqrt(p + q));
    d2ee[152] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
              C8006 + C8006 + C50793 * C298) *
                 C50853 +
             (C8049 + C8050) * C50602) *
                C33790 +
            ((C14001 + C14002) * C50853 + C13977 * C50602) * C50821) *
               C50660 * C270 -
           ((C14663 * C50602 + (C14673 + C14672) * C50853) * C50821 +
            ((C8255 + C8256) * C50602 +
             (C8002 * C279 + C8217 + C8217 + C50793 * C299 + C8000 * C278 +
              C8218 + C8218 + C50881 * C298) *
                 C50853) *
                C33790) *
               C50660 * C271 +
           (((C8000 * C279 + C8219 + C8219 + C50881 * C299 + C8002 * C1079 +
              C8220 + C8220 + C50793 * C1087) *
                 C50853 +
             (C8257 + C8258) * C50602) *
                C33790 +
            ((C15870 + C15871) * C50853 + (C13777 + C13778) * C50602) *
                C50821) *
               C50660 * C272) *
              C273 +
          ((((C8256 + C8255) * C50853 + (C8254 + C8253) * C50602) * C33790 +
            (C14658 * C50853 + (C9001 + C9002) * C50602) * C50821) *
               C50660 * C271 -
           ((C8768 * C50602 + C13983 * C50853) * C50821 +
            ((C8052 + C8051) * C50602 + (C8050 + C8049) * C50853) * C33790) *
               C50660 * C270 -
           (((C8002 * C3265 + C9891 + C9891 + C50793 * C3271 + C8000 * C1538 +
              C9892 + C9892 + C50881 * C1546) *
                 C50602 +
             (C13778 + C13777) * C50853) *
                C50821 +
            ((C8260 + C8259) * C50602 + (C8258 + C8257) * C50853) * C33790) *
               C50660 * C272) *
              C50631)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
             C8006 + C8006 + C50793 * C298) *
                C50853 +
            (C8049 + C8050) * C50602) *
               C33790 +
           ((C14001 + C14002) * C50853 + C13977 * C50602) * C50821) *
              C50660 * C50644 * C113 -
          ((C8768 * C50602 + C13983 * C50853) * C50821 +
           ((C8052 + C8051) * C50602 + (C8050 + C8049) * C50853) * C33790) *
              C50660 * C50644 * C114 +
          ((C8057 * C50853 + (C8054 + C8053) * C50602) * C33790 +
           (C14395 * C50853 + (C8779 + C8780) * C50602) * C50821) *
              C50660 * C50644 * C115 -
          (((C8002 * C871 + C8773 + C8773 + C50793 * C881 + C8000 * C454 +
             C8774 + C8774 + C50881 * C474) *
                C50602 +
            (C8780 + C8779) * C50853) *
               C50821 +
           ((C8056 + C8055) * C50602 + C8058 * C50853) * C33790) *
              C50660 * C50644 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
              C8006 + C8006 + C50793 * C298) *
                 C50853 +
             (C8049 + C8050) * C50602) *
                C33790 +
            ((C14001 + C14002) * C50853 + C13977 * C50602) * C50821) *
               C443 -
           ((C13978 * C50602 + (C14003 + C14004) * C50853) * C50821 +
            (C13983 * C50602 + (C14002 + C14001) * C50853) * C33790) *
               C444 +
           (((C14004 + C14003) * C50853 + C13984 * C50602) * C33790 +
            ((C16402 + C16403) * C50853 + (C14005 + C14006) * C50602) *
                C50821) *
               C445) *
              C50644 * C273 +
          (((C13977 * C50853 + C14395 * C50602) * C33790 +
            (C13984 * C50853 + (C8461 + C8462) * C50602) * C50821) *
               C444 -
           ((C8768 * C50602 + C13983 * C50853) * C50821 +
            ((C8052 + C8051) * C50602 + (C8050 + C8049) * C50853) * C33790) *
               C443 -
           (((C8002 * C6064 + C10287 + C10287 + C50793 * C6066 + C8000 * C1822 +
              C10288 + C10288 + C50881 * C1830) *
                 C50602 +
             (C14006 + C14005) * C50853) *
                C50821 +
            ((C8462 + C8461) * C50602 + C13978 * C50853) * C33790) *
               C445) *
              C50644 * C50631)) /
            (p * q * std::sqrt(p + q));
    d2ee[153] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
              C8006 + C8006 + C50793 * C298) *
                 C50853 +
             (C8049 + C8050) * C50602) *
                C33790 +
            ((C14001 + C14002) * C50853 + C13977 * C50602) * C50821) *
               C50869 -
           ((C13978 * C50602 + (C14003 + C14004) * C50853) * C50821 +
            (C13983 * C50602 + (C14002 + C14001) * C50853) * C33790) *
               C50724) *
              C50644 * C50911 +
          (((C13977 * C50853 + C14395 * C50602) * C33790 +
            (C13984 * C50853 + (C8461 + C8462) * C50602) * C50821) *
               C50724 -
           ((C8768 * C50602 + C13983 * C50853) * C50821 +
            ((C8052 + C8051) * C50602 + (C8050 + C8049) * C50853) * C33790) *
               C50869) *
              C50644 * C50912 +
          (((C8057 * C50853 + (C8054 + C8053) * C50602) * C33790 +
            (C14395 * C50853 + (C8779 + C8780) * C50602) * C50821) *
               C50869 -
           (((C8002 * C1190 + C8437 + C8437 + C50793 * C1198 + C8000 * C453 +
              C8438 + C8438 + C50881 * C473) *
                 C50602 +
             (C8462 + C8461) * C50853) *
                C50821 +
            ((C8780 + C8779) * C50602 + C8768 * C50853) * C33790) *
               C50724) *
              C50644 * C618)) /
        (p * q * std::sqrt(p + q));
    d2ee[154] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
             C8006 + C8006 + C50793 * C298) *
                C50853 +
            (C8049 + C8050) * C50602) *
               C33790 +
           ((C14001 + C14002) * C50853 + C13977 * C50602) * C50821) *
              C50660 * C50644 * C113 -
          ((C8768 * C50602 + C13983 * C50853) * C50821 +
           ((C8052 + C8051) * C50602 + (C8050 + C8049) * C50853) * C33790) *
              C50660 * C50644 * C114 +
          ((C8057 * C50853 + (C8054 + C8053) * C50602) * C33790 +
           (C14395 * C50853 + (C8779 + C8780) * C50602) * C50821) *
              C50660 * C50644 * C115 -
          (((C8002 * C871 + C8773 + C8773 + C50793 * C881 + C8000 * C454 +
             C8774 + C8774 + C50881 * C474) *
                C50602 +
            (C8780 + C8779) * C50853) *
               C50821 +
           ((C8056 + C8055) * C50602 + C8058 * C50853) * C33790) *
              C50660 * C50644 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
              C8006 + C8006 + C50793 * C298) *
                 C50853 +
             (C8049 + C8050) * C50602) *
                C33790 +
            ((C14001 + C14002) * C50853 + C13977 * C50602) * C50821) *
               C50660 * C270 -
           ((C14663 * C50602 + (C14673 + C14672) * C50853) * C50821 +
            ((C8255 + C8256) * C50602 +
             (C8002 * C279 + C8217 + C8217 + C50793 * C299 + C8000 * C278 +
              C8218 + C8218 + C50881 * C298) *
                 C50853) *
                C33790) *
               C50660 * C271 +
           (((C8000 * C279 + C8219 + C8219 + C50881 * C299 + C8002 * C1079 +
              C8220 + C8220 + C50793 * C1087) *
                 C50853 +
             (C8257 + C8258) * C50602) *
                C33790 +
            ((C15870 + C15871) * C50853 + (C13777 + C13778) * C50602) *
                C50821) *
               C50660 * C272) *
              C273 +
          ((((C8256 + C8255) * C50853 + (C8254 + C8253) * C50602) * C33790 +
            (C14658 * C50853 + (C9001 + C9002) * C50602) * C50821) *
               C50660 * C271 -
           ((C8768 * C50602 + C13983 * C50853) * C50821 +
            ((C8052 + C8051) * C50602 + (C8050 + C8049) * C50853) * C33790) *
               C50660 * C270 -
           (((C8002 * C3265 + C9891 + C9891 + C50793 * C3271 + C8000 * C1538 +
              C9892 + C9892 + C50881 * C1546) *
                 C50602 +
             (C13778 + C13777) * C50853) *
                C50821 +
            ((C8260 + C8259) * C50602 + (C8258 + C8257) * C50853) * C33790) *
               C50660 * C272) *
              C50631)) /
            (p * q * std::sqrt(p + q));
    d2ee[155] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
              C8006 + C8006 + C50793 * C298) *
                 C50853 +
             (C8049 + C8050) * C50602) *
                C33790 +
            ((C14001 + C14002) * C50853 + C13977 * C50602) * C50821) *
               C50660 * C50913 -
           ((C14663 * C50602 + (C14673 + C14672) * C50853) * C50821 +
            ((C8255 + C8256) * C50602 +
             (C8002 * C279 + C8217 + C8217 + C50793 * C299 + C8000 * C278 +
              C8218 + C8218 + C50881 * C298) *
                 C50853) *
                C33790) *
               C50660 * C50914 +
           (((C8000 * C279 + C8219 + C8219 + C50881 * C299 + C8002 * C1079 +
              C8220 + C8220 + C50793 * C1087) *
                 C50853 +
             (C8257 + C8258) * C50602) *
                C33790 +
            ((C15870 + C15871) * C50853 + (C13777 + C13778) * C50602) *
                C50821) *
               C50660 * C1306) *
              C50860 +
          ((((C8256 + C8255) * C50853 + (C8254 + C8253) * C50602) * C33790 +
            (C14658 * C50853 + (C9001 + C9002) * C50602) * C50821) *
               C50660 * C50914 -
           ((C8768 * C50602 + C13983 * C50853) * C50821 +
            ((C8052 + C8051) * C50602 + (C8050 + C8049) * C50853) * C33790) *
               C50660 * C50913 -
           (((C8002 * C3265 + C9891 + C9891 + C50793 * C3271 + C8000 * C1538 +
              C9892 + C9892 + C50881 * C1546) *
                 C50602 +
             (C13778 + C13777) * C50853) *
                C50821 +
            ((C8260 + C8259) * C50602 + (C8258 + C8257) * C50853) * C33790) *
               C50660 * C1306) *
              C50631)) /
        (p * q * std::sqrt(p + q));
    d2ee[156] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C8000 * C119 + C8005 + C8005 + C50881 * C133 +
                       C8002 * C278 + C8006 + C8006 + C50793 * C298) *
                          C50853 +
                      (C8049 + C8050) * C50602) *
                         C33790 +
                     ((C14001 + C14002) * C50853 + C13977 * C50602) * C50821) *
                        C50869 -
                    ((C13978 * C50602 + (C14003 + C14004) * C50853) * C50821 +
                     (C13983 * C50602 + (C14002 + C14001) * C50853) * C33790) *
                        C50724) *
                       C50913 +
                   ((((C14672 + C14673) * C50853 + C14658 * C50602) * C33790 +
                     ((C15210 + C15211) * C50853 + (C14674 + C14675) * C50602) *
                         C50821) *
                        C50724 -
                    ((C14663 * C50602 + (C14673 + C14672) * C50853) * C50821 +
                     ((C8255 + C8256) * C50602 +
                      (C8002 * C279 + C8217 + C8217 + C50793 * C299 +
                       C8000 * C278 + C8218 + C8218 + C50881 * C298) *
                          C50853) *
                         C33790) *
                        C50869) *
                       C50914 +
                   ((((C8000 * C279 + C8219 + C8219 + C50881 * C299 +
                       C8002 * C1079 + C8220 + C8220 + C50793 * C1087) *
                          C50853 +
                      (C8257 + C8258) * C50602) *
                         C33790 +
                     ((C15870 + C15871) * C50853 + (C13777 + C13778) * C50602) *
                         C50821) *
                        C50869 -
                    (((C8002 * C3698 + C15862 + C15862 + C50793 * C3702 +
                       C8000 * C2685 + C15863 + C15863 + C50881 * C2691) *
                          C50602 +
                      (C8002 * C3699 + C15864 + C15864 + C50793 * C3703 +
                       C8000 * C2684 + C15865 + C15865 + C50881 * C2690) *
                          C50853) *
                         C50821 +
                     ((C13778 + C13777) * C50602 + (C15871 + C15870) * C50853) *
                         C33790) *
                        C50724) *
                       C1306) *
                  C50625) /
                 (p * q * std::sqrt(p + q));
    d2ee[157] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
             C8006 + C8006 + C50793 * C298) *
                C50853 +
            (C8049 + C8050) * C50602) *
               C33790 +
           ((C14001 + C14002) * C50853 + C13977 * C50602) * C50821) *
              C50660 * C1071 -
          ((C14663 * C50602 + (C14673 + C14672) * C50853) * C50821 +
           ((C8255 + C8256) * C50602 +
            (C8002 * C279 + C8217 + C8217 + C50793 * C299 + C8000 * C278 +
             C8218 + C8218 + C50881 * C298) *
                C50853) *
               C33790) *
              C50660 * C1072 +
          (((C8000 * C279 + C8219 + C8219 + C50881 * C299 + C8002 * C1079 +
             C8220 + C8220 + C50793 * C1087) *
                C50853 +
            (C8257 + C8258) * C50602) *
               C33790 +
           ((C15870 + C15871) * C50853 + (C13777 + C13778) * C50602) * C50821) *
              C50660 * C1073 -
          (((C8002 * C4196 + C15000 + C15000 + C50793 * C4200 + C8000 * C3264 +
             C15001 + C15001 + C50881 * C3270) *
                C50602 +
            (C8002 * C4197 + C15002 + C15002 + C50793 * C4201 + C8000 * C3263 +
             C15003 + C15003 + C50881 * C3269) *
                C50853) *
               C50821 +
           ((C8002 * C2482 + C9249 + C9249 + C50793 * C2488 + C8000 * C1078 +
             C9250 + C9250 + C50881 * C1086) *
                C50602 +
            (C8002 * C2481 + C9251 + C9251 + C50793 * C2487 + C8000 * C1079 +
             C9252 + C9252 + C50881 * C1087) *
                C50853) *
               C33790) *
              C50660 * C1074) *
         C50625) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
              C8006 + C8006 + C50793 * C298) *
                 C50853 +
             (C8049 + C8050) * C50602) *
                C33790 +
            ((C14001 + C14002) * C50853 + C13977 * C50602) * C50821) *
               C50660 * C1000 -
           ((C14663 * C50602 + (C14673 + C14672) * C50853) * C50821 +
            ((C8255 + C8256) * C50602 +
             (C8002 * C279 + C8217 + C8217 + C50793 * C299 + C8000 * C278 +
              C8218 + C8218 + C50881 * C298) *
                 C50853) *
                C33790) *
               C50660 * C50696) *
              C1002 +
          ((((C8256 + C8255) * C50853 + (C8254 + C8253) * C50602) * C33790 +
            (C14658 * C50853 + (C9001 + C9002) * C50602) * C50821) *
               C50660 * C50696 -
           ((C8768 * C50602 + C13983 * C50853) * C50821 +
            ((C8052 + C8051) * C50602 + (C8050 + C8049) * C50853) * C33790) *
               C50660 * C1000) *
              C1003 +
          (((C8057 * C50853 + (C8054 + C8053) * C50602) * C33790 +
            (C14395 * C50853 + (C8779 + C8780) * C50602) * C50821) *
               C50660 * C1000 -
           (((C8002 * C1537 + C8989 + C8989 + C50793 * C1545 + C8000 * C870 +
              C8990 + C8990 + C50881 * C880) *
                 C50602 +
             (C9002 + C9001) * C50853) *
                C50821 +
            ((C8621 + C8620) * C50602 + C8609 * C50853) * C33790) *
               C50660 * C50696) *
              C1004)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
              C8006 + C8006 + C50793 * C298) *
                 C50853 +
             (C8049 + C8050) * C50602) *
                C33790 +
            ((C14001 + C14002) * C50853 + C13977 * C50602) * C50821) *
               C443 -
           ((C13978 * C50602 + (C14003 + C14004) * C50853) * C50821 +
            (C13983 * C50602 + (C14002 + C14001) * C50853) * C33790) *
               C444 +
           (((C14004 + C14003) * C50853 + C13984 * C50602) * C33790 +
            ((C16402 + C16403) * C50853 + (C14005 + C14006) * C50602) *
                C50821) *
               C445) *
              C1000 +
          ((((C14672 + C14673) * C50853 + C14658 * C50602) * C33790 +
            ((C15210 + C15211) * C50853 + (C14674 + C14675) * C50602) *
                C50821) *
               C444 -
           ((C14663 * C50602 + (C14673 + C14672) * C50853) * C50821 +
            ((C8255 + C8256) * C50602 +
             (C8002 * C279 + C8217 + C8217 + C50793 * C299 + C8000 * C278 +
              C8218 + C8218 + C50881 * C298) *
                 C50853) *
                C33790) *
               C443 -
           (((C8002 * C4598 + C15202 + C15202 + C50793 * C4606 + C8000 * C4599 +
              C15203 + C15203 + C50881 * C4607) *
                 C50602 +
             (C8002 * C4600 + C15204 + C15204 + C50793 * C4608 + C8000 * C4601 +
              C15205 + C15205 + C50881 * C4609) *
                 C50853) *
                C50821 +
            ((C14675 + C14674) * C50602 + (C15211 + C15210) * C50853) *
                C33790) *
               C445) *
              C50696) *
         C50625) /
            (p * q * std::sqrt(p + q));
    d2ee[158] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
               C8006 + C8006 + C50793 * C298) *
                  C50853 +
              (C8049 + C8050) * C50602) *
                 C33790 +
             ((C14001 + C14002) * C50853 + C13977 * C50602) * C50821) *
                C50869 -
            ((C13978 * C50602 + (C14003 + C14004) * C50853) * C50821 +
             (C13983 * C50602 + (C14002 + C14001) * C50853) * C33790) *
                C50724) *
               C1000 +
           ((((C14672 + C14673) * C50853 + C14658 * C50602) * C33790 +
             ((C15210 + C15211) * C50853 + (C14674 + C14675) * C50602) *
                 C50821) *
                C50724 -
            ((C14663 * C50602 + (C14673 + C14672) * C50853) * C50821 +
             ((C8255 + C8256) * C50602 +
              (C8002 * C279 + C8217 + C8217 + C50793 * C299 + C8000 * C278 +
               C8218 + C8218 + C50881 * C298) *
                  C50853) *
                 C33790) *
                C50869) *
               C50696) *
              C50860 +
          ((((C13977 * C50853 + C14395 * C50602) * C33790 +
             (C13984 * C50853 + (C8461 + C8462) * C50602) * C50821) *
                C50724 -
            ((C8768 * C50602 + C13983 * C50853) * C50821 +
             ((C8052 + C8051) * C50602 + (C8050 + C8049) * C50853) * C33790) *
                C50869) *
               C1000 +
           ((((C8256 + C8255) * C50853 + (C8254 + C8253) * C50602) * C33790 +
             (C14658 * C50853 + (C9001 + C9002) * C50602) * C50821) *
                C50869 -
            (((C8002 * C2686 + C9399 + C9399 + C50793 * C2692 + C8000 * C1191 +
               C9400 + C9400 + C50881 * C1199) *
                  C50602 +
              (C14675 + C14674) * C50853) *
                 C50821 +
             ((C9002 + C9001) * C50602 + C14663 * C50853) * C33790) *
                C50724) *
               C50696) *
              C50631)) /
        (p * q * std::sqrt(p + q));
    d2ee[159] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
              C8006 + C8006 + C50793 * C298) *
                 C50853 +
             (C8049 + C8050) * C50602) *
                C33790 +
            ((C14001 + C14002) * C50853 + C13977 * C50602) * C50821) *
               C50660 * C1000 -
           ((C14663 * C50602 + (C14673 + C14672) * C50853) * C50821 +
            ((C8255 + C8256) * C50602 +
             (C8002 * C279 + C8217 + C8217 + C50793 * C299 + C8000 * C278 +
              C8218 + C8218 + C50881 * C298) *
                 C50853) *
                C33790) *
               C50660 * C50696) *
              C1002 +
          ((((C8256 + C8255) * C50853 + (C8254 + C8253) * C50602) * C33790 +
            (C14658 * C50853 + (C9001 + C9002) * C50602) * C50821) *
               C50660 * C50696 -
           ((C8768 * C50602 + C13983 * C50853) * C50821 +
            ((C8052 + C8051) * C50602 + (C8050 + C8049) * C50853) * C33790) *
               C50660 * C1000) *
              C1003 +
          (((C8057 * C50853 + (C8054 + C8053) * C50602) * C33790 +
            (C14395 * C50853 + (C8779 + C8780) * C50602) * C50821) *
               C50660 * C1000 -
           (((C8002 * C1537 + C8989 + C8989 + C50793 * C1545 + C8000 * C870 +
              C8990 + C8990 + C50881 * C880) *
                 C50602 +
             (C9002 + C9001) * C50853) *
                C50821 +
            ((C8621 + C8620) * C50602 + C8609 * C50853) * C33790) *
               C50660 * C50696) *
              C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
             C8006 + C8006 + C50793 * C298) *
                C50853 +
            (C8049 + C8050) * C50602) *
               C33790 +
           ((C14001 + C14002) * C50853 + C13977 * C50602) * C50821) *
              C50660 * C1071 -
          ((C14663 * C50602 + (C14673 + C14672) * C50853) * C50821 +
           ((C8255 + C8256) * C50602 +
            (C8002 * C279 + C8217 + C8217 + C50793 * C299 + C8000 * C278 +
             C8218 + C8218 + C50881 * C298) *
                C50853) *
               C33790) *
              C50660 * C1072 +
          (((C8000 * C279 + C8219 + C8219 + C50881 * C299 + C8002 * C1079 +
             C8220 + C8220 + C50793 * C1087) *
                C50853 +
            (C8257 + C8258) * C50602) *
               C33790 +
           ((C15870 + C15871) * C50853 + (C13777 + C13778) * C50602) * C50821) *
              C50660 * C1073 -
          (((C8002 * C4196 + C15000 + C15000 + C50793 * C4200 + C8000 * C3264 +
             C15001 + C15001 + C50881 * C3270) *
                C50602 +
            (C8002 * C4197 + C15002 + C15002 + C50793 * C4201 + C8000 * C3263 +
             C15003 + C15003 + C50881 * C3269) *
                C50853) *
               C50821 +
           ((C8002 * C2482 + C9249 + C9249 + C50793 * C2488 + C8000 * C1078 +
             C9250 + C9250 + C50881 * C1086) *
                C50602 +
            (C8002 * C2481 + C9251 + C9251 + C50793 * C2487 + C8000 * C1079 +
             C9252 + C9252 + C50881 * C1087) *
                C50853) *
               C33790) *
              C50660 * C1074) *
         C50625) /
            (p * q * std::sqrt(p + q));
    d2ee[160] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
               C8006 + C8006 + C50793 * C298) *
                  C50853 +
              (C8049 + C8050) * C50602) *
                 C33790 +
             ((C14001 + C14002) * C50853 + C13977 * C50602) * C50821) *
                C1651 -
            ((C13978 * C50602 + (C14003 + C14004) * C50853) * C50821 +
             (C13983 * C50602 + (C14002 + C14001) * C50853) * C33790) *
                C50724) *
               C50868 +
           ((((C14672 + C14673) * C50853 + C14658 * C50602) * C33790 +
             ((C15210 + C15211) * C50853 + (C14674 + C14675) * C50602) *
                 C50821) *
                C50724 -
            ((C14663 * C50602 + (C14673 + C14672) * C50853) * C50821 +
             ((C8255 + C8256) * C50602 +
              (C8002 * C279 + C8217 + C8217 + C50793 * C299 + C8000 * C278 +
               C8218 + C8218 + C50881 * C298) *
                  C50853) *
                 C33790) *
                C1651) *
               C50696) *
              C50860 +
          ((((C13977 * C50853 + C14395 * C50602) * C33790 +
             (C13984 * C50853 + (C8461 + C8462) * C50602) * C50821) *
                C50724 -
            ((C8768 * C50602 + C13983 * C50853) * C50821 +
             ((C8052 + C8051) * C50602 + (C8050 + C8049) * C50853) * C33790) *
                C1651) *
               C50868 +
           ((((C8256 + C8255) * C50853 + (C8254 + C8253) * C50602) * C33790 +
             (C14658 * C50853 + (C9001 + C9002) * C50602) * C50821) *
                C1651 -
            (((C8002 * C2686 + C9399 + C9399 + C50793 * C2692 + C8000 * C1191 +
               C9400 + C9400 + C50881 * C1199) *
                  C50602 +
              (C14675 + C14674) * C50853) *
                 C50821 +
             ((C9002 + C9001) * C50602 + C14663 * C50853) * C33790) *
                C50724) *
               C50696) *
              C50631)) /
        (p * q * std::sqrt(p + q));
    d2ee[161] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C8000 * C119 + C8005 + C8005 + C50881 * C133 +
                       C8002 * C278 + C8006 + C8006 + C50793 * C298) *
                          C50853 +
                      (C8049 + C8050) * C50602) *
                         C33790 +
                     ((C14001 + C14002) * C50853 + C13977 * C50602) * C50821) *
                        C50915 -
                    ((C13978 * C50602 + (C14003 + C14004) * C50853) * C50821 +
                     (C13983 * C50602 + (C14002 + C14001) * C50853) * C33790) *
                        C50916 +
                    (((C14004 + C14003) * C50853 + C13984 * C50602) * C33790 +
                     ((C16402 + C16403) * C50853 + (C14005 + C14006) * C50602) *
                         C50821) *
                        C2067) *
                       C50868 +
                   ((((C14672 + C14673) * C50853 + C14658 * C50602) * C33790 +
                     ((C15210 + C15211) * C50853 + (C14674 + C14675) * C50602) *
                         C50821) *
                        C50916 -
                    ((C14663 * C50602 + (C14673 + C14672) * C50853) * C50821 +
                     ((C8255 + C8256) * C50602 +
                      (C8002 * C279 + C8217 + C8217 + C50793 * C299 +
                       C8000 * C278 + C8218 + C8218 + C50881 * C298) *
                          C50853) *
                         C33790) *
                        C50915 -
                    (((C8002 * C4598 + C15202 + C15202 + C50793 * C4606 +
                       C8000 * C4599 + C15203 + C15203 + C50881 * C4607) *
                          C50602 +
                      (C8002 * C4600 + C15204 + C15204 + C50793 * C4608 +
                       C8000 * C4601 + C15205 + C15205 + C50881 * C4609) *
                          C50853) *
                         C50821 +
                     ((C14675 + C14674) * C50602 + (C15211 + C15210) * C50853) *
                         C33790) *
                        C2067) *
                       C50696) *
                  C50625) /
                 (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
              C8006 + C8006 + C50793 * C298) *
                 C50853 +
             (C8049 + C8050) * C50602) *
                C33790 +
            ((C14001 + C14002) * C50853 + C13977 * C50602) * C50821) *
               C1651 -
           ((C13978 * C50602 + (C14003 + C14004) * C50853) * C50821 +
            (C13983 * C50602 + (C14002 + C14001) * C50853) * C33790) *
               C50724) *
              C270 +
          ((((C14672 + C14673) * C50853 + C14658 * C50602) * C33790 +
            ((C15210 + C15211) * C50853 + (C14674 + C14675) * C50602) *
                C50821) *
               C50724 -
           ((C14663 * C50602 + (C14673 + C14672) * C50853) * C50821 +
            ((C8255 + C8256) * C50602 +
             (C8002 * C279 + C8217 + C8217 + C50793 * C299 + C8000 * C278 +
              C8218 + C8218 + C50881 * C298) *
                 C50853) *
                C33790) *
               C1651) *
              C271 +
          ((((C8000 * C279 + C8219 + C8219 + C50881 * C299 + C8002 * C1079 +
              C8220 + C8220 + C50793 * C1087) *
                 C50853 +
             (C8257 + C8258) * C50602) *
                C33790 +
            ((C15870 + C15871) * C50853 + (C13777 + C13778) * C50602) *
                C50821) *
               C1651 -
           (((C8002 * C3698 + C15862 + C15862 + C50793 * C3702 + C8000 * C2685 +
              C15863 + C15863 + C50881 * C2691) *
                 C50602 +
             (C8002 * C3699 + C15864 + C15864 + C50793 * C3703 + C8000 * C2684 +
              C15865 + C15865 + C50881 * C2690) *
                 C50853) *
                C50821 +
            ((C13778 + C13777) * C50602 + (C15871 + C15870) * C50853) *
                C33790) *
               C50724) *
              C272) *
         C50625) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
              C8006 + C8006 + C50793 * C298) *
                 C50853 +
             (C8049 + C8050) * C50602) *
                C33790 +
            ((C14001 + C14002) * C50853 + C13977 * C50602) * C50821) *
               C1651 -
           ((C13978 * C50602 + (C14003 + C14004) * C50853) * C50821 +
            (C13983 * C50602 + (C14002 + C14001) * C50853) * C33790) *
               C50724) *
              C50644 * C1002 +
          (((C13977 * C50853 + C14395 * C50602) * C33790 +
            (C13984 * C50853 + (C8461 + C8462) * C50602) * C50821) *
               C50724 -
           ((C8768 * C50602 + C13983 * C50853) * C50821 +
            ((C8052 + C8051) * C50602 + (C8050 + C8049) * C50853) * C33790) *
               C1651) *
              C50644 * C1003 +
          (((C8057 * C50853 + (C8054 + C8053) * C50602) * C33790 +
            (C14395 * C50853 + (C8779 + C8780) * C50602) * C50821) *
               C1651 -
           (((C8002 * C1190 + C8437 + C8437 + C50793 * C1198 + C8000 * C453 +
              C8438 + C8438 + C50881 * C473) *
                 C50602 +
             (C8462 + C8461) * C50853) *
                C50821 +
            ((C8780 + C8779) * C50602 + C8768 * C50853) * C33790) *
               C50724) *
              C50644 * C1004)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
             C8006 + C8006 + C50793 * C298) *
                C50853 +
            (C8049 + C8050) * C50602) *
               C33790 +
           ((C14001 + C14002) * C50853 + C13977 * C50602) * C50821) *
              C1817 -
          ((C13978 * C50602 + (C14003 + C14004) * C50853) * C50821 +
           (C13983 * C50602 + (C14002 + C14001) * C50853) * C33790) *
              C1818 +
          (((C14004 + C14003) * C50853 + C13984 * C50602) * C33790 +
           ((C16402 + C16403) * C50853 + (C14005 + C14006) * C50602) * C50821) *
              C1819 -
          (((C8002 * C6487 + C16394 + C16394 + C50793 * C6491 + C8000 * C5514 +
             C16395 + C16395 + C50881 * C5520) *
                C50602 +
            (C8002 * C6488 + C16396 + C16396 + C50793 * C6492 + C8000 * C5513 +
             C16397 + C16397 + C50881 * C5519) *
                C50853) *
               C50821 +
           ((C14006 + C14005) * C50602 + (C16403 + C16402) * C50853) * C33790) *
              C1820) *
         C50644 * C50625) /
            (p * q * std::sqrt(p + q));
    d2ee[163] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
              C8006 + C8006 + C50793 * C298) *
                 C50853 +
             (C8049 + C8050) * C50602) *
                C33790 +
            ((C14001 + C14002) * C50853 + C13977 * C50602) * C50821) *
               C50915 -
           ((C13978 * C50602 + (C14003 + C14004) * C50853) * C50821 +
            (C13983 * C50602 + (C14002 + C14001) * C50853) * C33790) *
               C50916 +
           (((C14004 + C14003) * C50853 + C13984 * C50602) * C33790 +
            ((C16402 + C16403) * C50853 + (C14005 + C14006) * C50602) *
                C50821) *
               C2067) *
              C50644 * C50860 +
          (((C13977 * C50853 + C14395 * C50602) * C33790 +
            (C13984 * C50853 + (C8461 + C8462) * C50602) * C50821) *
               C50916 -
           ((C8768 * C50602 + C13983 * C50853) * C50821 +
            ((C8052 + C8051) * C50602 + (C8050 + C8049) * C50853) * C33790) *
               C50915 -
           (((C8002 * C6064 + C10287 + C10287 + C50793 * C6066 + C8000 * C1822 +
              C10288 + C10288 + C50881 * C1830) *
                 C50602 +
             (C14006 + C14005) * C50853) *
                C50821 +
            ((C8462 + C8461) * C50602 + C13978 * C50853) * C33790) *
               C2067) *
              C50644 * C50631)) /
        (p * q * std::sqrt(p + q));
    d2ee[164] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
              C8006 + C8006 + C50793 * C298) *
                 C50853 +
             (C8049 + C8050) * C50602) *
                C33790 +
            ((C14001 + C14002) * C50853 + C13977 * C50602) * C50821) *
               C1651 -
           ((C13978 * C50602 + (C14003 + C14004) * C50853) * C50821 +
            (C13983 * C50602 + (C14002 + C14001) * C50853) * C33790) *
               C50724) *
              C50644 * C1002 +
          (((C13977 * C50853 + C14395 * C50602) * C33790 +
            (C13984 * C50853 + (C8461 + C8462) * C50602) * C50821) *
               C50724 -
           ((C8768 * C50602 + C13983 * C50853) * C50821 +
            ((C8052 + C8051) * C50602 + (C8050 + C8049) * C50853) * C33790) *
               C1651) *
              C50644 * C1003 +
          (((C8057 * C50853 + (C8054 + C8053) * C50602) * C33790 +
            (C14395 * C50853 + (C8779 + C8780) * C50602) * C50821) *
               C1651 -
           (((C8002 * C1190 + C8437 + C8437 + C50793 * C1198 + C8000 * C453 +
              C8438 + C8438 + C50881 * C473) *
                 C50602 +
             (C8462 + C8461) * C50853) *
                C50821 +
            ((C8780 + C8779) * C50602 + C8768 * C50853) * C33790) *
               C50724) *
              C50644 * C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
              C8006 + C8006 + C50793 * C298) *
                 C50853 +
             (C8049 + C8050) * C50602) *
                C33790 +
            ((C14001 + C14002) * C50853 + C13977 * C50602) * C50821) *
               C1651 -
           ((C13978 * C50602 + (C14003 + C14004) * C50853) * C50821 +
            (C13983 * C50602 + (C14002 + C14001) * C50853) * C33790) *
               C50724) *
              C270 +
          ((((C14672 + C14673) * C50853 + C14658 * C50602) * C33790 +
            ((C15210 + C15211) * C50853 + (C14674 + C14675) * C50602) *
                C50821) *
               C50724 -
           ((C14663 * C50602 + (C14673 + C14672) * C50853) * C50821 +
            ((C8255 + C8256) * C50602 +
             (C8002 * C279 + C8217 + C8217 + C50793 * C299 + C8000 * C278 +
              C8218 + C8218 + C50881 * C298) *
                 C50853) *
                C33790) *
               C1651) *
              C271 +
          ((((C8000 * C279 + C8219 + C8219 + C50881 * C299 + C8002 * C1079 +
              C8220 + C8220 + C50793 * C1087) *
                 C50853 +
             (C8257 + C8258) * C50602) *
                C33790 +
            ((C15870 + C15871) * C50853 + (C13777 + C13778) * C50602) *
                C50821) *
               C1651 -
           (((C8002 * C3698 + C15862 + C15862 + C50793 * C3702 + C8000 * C2685 +
              C15863 + C15863 + C50881 * C2691) *
                 C50602 +
             (C8002 * C3699 + C15864 + C15864 + C50793 * C3703 + C8000 * C2684 +
              C15865 + C15865 + C50881 * C2690) *
                 C50853) *
                C50821 +
            ((C13778 + C13777) * C50602 + (C15871 + C15870) * C50853) *
                C33790) *
               C50724) *
              C272) *
         C50625) /
            (p * q * std::sqrt(p + q));
    d2ee[165] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
             C8006 + C8006 + C50793 * C298) *
                C50597 * C50919 +
            (C14001 + C14002) * C50597 * C50920 + C47446 * C44486) *
               C50660 * C50868 -
           ((C15211 + C15210) * C50597 * C44486 +
            (C14673 + C14672) * C50597 * C50920 +
            (C8002 * C279 + C8217 + C8217 + C50793 * C299 + C8000 * C278 +
             C8218 + C8218 + C50881 * C298) *
                C50597 * C50919) *
               C50660 * C50696) *
              C50911 +
          (((C8256 + C8255) * C50597 * C50919 + C14658 * C50597 * C50920 +
            (C14674 + C14675) * C50597 * C44486) *
               C50660 * C50696 -
           (C47445 * C44486 + C13983 * C50597 * C50920 +
            (C8050 + C8049) * C50597 * C50919) *
               C50660 * C50868) *
              C50912 +
          ((C8057 * C50597 * C50919 + C14395 * C50597 * C50920 +
            (C8461 + C8462) * C50597 * C44486) *
               C50660 * C50868 -
           ((C8002 * C2686 + C9399 + C9399 + C50793 * C2692 + C8000 * C1191 +
             C9400 + C9400 + C50881 * C1199) *
                C50597 * C44486 +
            (C9002 + C9001) * C50597 * C50920 + C8609 * C50597 * C50919) *
               C50660 * C50696) *
              C618)) /
        (p * q * std::sqrt(p + q));
    d2ee[166] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
              C8006 + C8006 + C50793 * C298) *
                 C50597 * C50919 +
             (C14001 + C14002) * C50597 * C50920 + C47446 * C44486) *
                C50869 -
            ((C16403 + C16402) * C50597 * C44486 +
             (C14003 + C14004) * C50597 * C50920 +
             (C14002 + C14001) * C50597 * C50919) *
                C50724) *
               C50868 +
           (((C14672 + C14673) * C50597 * C50919 +
             (C15210 + C15211) * C50597 * C50920 +
             (C8000 * C4601 + C15205 + C15205 + C50881 * C4609 + C8002 * C4600 +
              C15204 + C15204 + C50793 * C4608) *
                 C50597 * C44486) *
                C50724 -
            ((C15211 + C15210) * C50597 * C44486 +
             (C14673 + C14672) * C50597 * C50920 +
             (C8002 * C279 + C8217 + C8217 + C50793 * C299 + C8000 * C278 +
              C8218 + C8218 + C50881 * C298) *
                 C50597 * C50919) *
                C50869) *
               C50696) *
              C273 +
          (((C13977 * C50597 * C50919 + C13984 * C50597 * C50920 +
             (C14005 + C14006) * C50597 * C44486) *
                C50724 -
            (C47445 * C44486 + C13983 * C50597 * C50920 +
             (C8050 + C8049) * C50597 * C50919) *
                C50869) *
               C50868 +
           (((C8256 + C8255) * C50597 * C50919 + C14658 * C50597 * C50920 +
             (C14674 + C14675) * C50597 * C44486) *
                C50869 -
            ((C8002 * C4598 + C15202 + C15202 + C50793 * C4606 + C8000 * C4599 +
              C15203 + C15203 + C50881 * C4607) *
                 C50597 * C44486 +
             (C14675 + C14674) * C50597 * C50920 + C14663 * C50597 * C50919) *
                C50724) *
               C50696) *
              C50631)) /
        (p * q * std::sqrt(p + q));
    d2ee[167] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
             C8006 + C8006 + C50793 * C298) *
                C50597 * C50919 +
            (C14001 + C14002) * C50597 * C50920 +
            (C14004 + C14003) * C50597 * C44486) *
               C50660 * C270 -
           ((C15211 + C15210) * C50597 * C44486 +
            (C14673 + C14672) * C50597 * C50920 +
            (C8002 * C279 + C8217 + C8217 + C50793 * C299 + C8000 * C278 +
             C8218 + C8218 + C50881 * C298) *
                C50597 * C50919) *
               C50660 * C271 +
           ((C8000 * C279 + C8219 + C8219 + C50881 * C299 + C8002 * C1079 +
             C8220 + C8220 + C50793 * C1087) *
                C50597 * C50919 +
            (C15870 + C15871) * C50597 * C50920 +
            (C8000 * C2684 + C15865 + C15865 + C50881 * C2690 + C8002 * C3699 +
             C15864 + C15864 + C50793 * C3703) *
                C50597 * C44486) *
               C50660 * C272) *
              C273 +
          (((C8256 + C8255) * C50597 * C50919 + C14658 * C50597 * C50920 +
            (C14674 + C14675) * C50597 * C44486) *
               C50660 * C271 -
           (C13978 * C50597 * C44486 + C13983 * C50597 * C50920 +
            (C8050 + C8049) * C50597 * C50919) *
               C50660 * C270 -
           ((C8002 * C3698 + C15862 + C15862 + C50793 * C3702 + C8000 * C2685 +
             C15863 + C15863 + C50881 * C2691) *
                C50597 * C44486 +
            (C13778 + C13777) * C50597 * C50920 +
            (C8258 + C8257) * C50597 * C50919) *
               C50660 * C272) *
              C50631)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
            C8006 + C8006 + C50793 * C298) *
               C50597 * C50919 +
           (C14001 + C14002) * C50597 * C50920 +
           (C14004 + C14003) * C50597 * C44486) *
              C50660 * C50644 * C113 -
          (C13978 * C50597 * C44486 + C13983 * C50597 * C50920 +
           (C8050 + C8049) * C50597 * C50919) *
              C50660 * C50644 * C114 +
          (C8057 * C50597 * C50919 + C14395 * C50597 * C50920 +
           (C8461 + C8462) * C50597 * C44486) *
              C50660 * C50644 * C115 -
          ((C8002 * C1190 + C8437 + C8437 + C50793 * C1198 + C8000 * C453 +
            C8438 + C8438 + C50881 * C473) *
               C50597 * C44486 +
           (C8780 + C8779) * C50597 * C50920 + C8058 * C50597 * C50919) *
              C50660 * C50644 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
             C8006 + C8006 + C50793 * C298) *
                C50597 * C50919 +
            (C14001 + C14002) * C50597 * C50920 + C47446 * C44486) *
               C443 -
           ((C16403 + C16402) * C50597 * C44486 +
            (C14003 + C14004) * C50597 * C50920 +
            (C14002 + C14001) * C50597 * C50919) *
               C444 +
           (C47446 * C50919 + (C16402 + C16403) * C50597 * C50920 +
            (C8000 * C5513 + C16397 + C16397 + C50881 * C5519 + C8002 * C6488 +
             C16396 + C16396 + C50793 * C6492) *
                C50597 * C44486) *
               C445) *
              C50644 * C273 +
          ((C13977 * C50597 * C50919 + C13984 * C50597 * C50920 +
            (C14005 + C14006) * C50597 * C44486) *
               C444 -
           (C47445 * C44486 + C13983 * C50597 * C50920 +
            (C8050 + C8049) * C50597 * C50919) *
               C443 -
           ((C8002 * C6487 + C16394 + C16394 + C50793 * C6491 + C8000 * C5514 +
             C16395 + C16395 + C50881 * C5520) *
                C50597 * C44486 +
            (C14006 + C14005) * C50597 * C50920 + C47445 * C50919) *
               C445) *
              C50644 * C50631)) /
            (p * q * std::sqrt(p + q));
    d2ee[168] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
             C8006 + C8006 + C50793 * C298) *
                C50597 * C50919 +
            (C14001 + C14002) * C50597 * C50920 + C47446 * C44486) *
               C50869 -
           ((C16403 + C16402) * C50597 * C44486 +
            (C14003 + C14004) * C50597 * C50920 +
            (C14002 + C14001) * C50597 * C50919) *
               C50724) *
              C50644 * C50911 +
          ((C13977 * C50597 * C50919 + C13984 * C50597 * C50920 +
            (C14005 + C14006) * C50597 * C44486) *
               C50724 -
           (C47445 * C44486 + C13983 * C50597 * C50920 +
            (C8050 + C8049) * C50597 * C50919) *
               C50869) *
              C50644 * C50912 +
          ((C8057 * C50597 * C50919 + C14395 * C50597 * C50920 +
            (C8461 + C8462) * C50597 * C44486) *
               C50869 -
           ((C8002 * C6064 + C10287 + C10287 + C50793 * C6066 + C8000 * C1822 +
             C10288 + C10288 + C50881 * C1830) *
                C50597 * C44486 +
            (C8462 + C8461) * C50597 * C50920 + C8768 * C50597 * C50919) *
               C50724) *
              C50644 * C618)) /
        (p * q * std::sqrt(p + q));
    d2ee[169] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
            C8006 + C8006 + C50793 * C298) *
               C50597 * C50919 +
           (C14001 + C14002) * C50597 * C50920 +
           (C14004 + C14003) * C50597 * C44486) *
              C50660 * C50644 * C113 -
          (C13978 * C50597 * C44486 + C13983 * C50597 * C50920 +
           (C8050 + C8049) * C50597 * C50919) *
              C50660 * C50644 * C114 +
          (C8057 * C50597 * C50919 + C14395 * C50597 * C50920 +
           (C8461 + C8462) * C50597 * C44486) *
              C50660 * C50644 * C115 -
          ((C8002 * C1190 + C8437 + C8437 + C50793 * C1198 + C8000 * C453 +
            C8438 + C8438 + C50881 * C473) *
               C50597 * C44486 +
           (C8780 + C8779) * C50597 * C50920 + C8058 * C50597 * C50919) *
              C50660 * C50644 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
             C8006 + C8006 + C50793 * C298) *
                C50597 * C50919 +
            (C14001 + C14002) * C50597 * C50920 +
            (C14004 + C14003) * C50597 * C44486) *
               C50660 * C270 -
           ((C15211 + C15210) * C50597 * C44486 +
            (C14673 + C14672) * C50597 * C50920 +
            (C8002 * C279 + C8217 + C8217 + C50793 * C299 + C8000 * C278 +
             C8218 + C8218 + C50881 * C298) *
                C50597 * C50919) *
               C50660 * C271 +
           ((C8000 * C279 + C8219 + C8219 + C50881 * C299 + C8002 * C1079 +
             C8220 + C8220 + C50793 * C1087) *
                C50597 * C50919 +
            (C15870 + C15871) * C50597 * C50920 +
            (C8000 * C2684 + C15865 + C15865 + C50881 * C2690 + C8002 * C3699 +
             C15864 + C15864 + C50793 * C3703) *
                C50597 * C44486) *
               C50660 * C272) *
              C273 +
          (((C8256 + C8255) * C50597 * C50919 + C14658 * C50597 * C50920 +
            (C14674 + C14675) * C50597 * C44486) *
               C50660 * C271 -
           (C13978 * C50597 * C44486 + C13983 * C50597 * C50920 +
            (C8050 + C8049) * C50597 * C50919) *
               C50660 * C270 -
           ((C8002 * C3698 + C15862 + C15862 + C50793 * C3702 + C8000 * C2685 +
             C15863 + C15863 + C50881 * C2691) *
                C50597 * C44486 +
            (C13778 + C13777) * C50597 * C50920 +
            (C8258 + C8257) * C50597 * C50919) *
               C50660 * C272) *
              C50631)) /
            (p * q * std::sqrt(p + q));
    d2ee[170] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
             C8006 + C8006 + C50793 * C298) *
                C50597 * C50919 +
            (C14001 + C14002) * C50597 * C50920 + C47446 * C44486) *
               C50660 * C50913 -
           (C48334 * C44486 + (C14673 + C14672) * C50597 * C50920 +
            (C8002 * C279 + C8217 + C8217 + C50793 * C299 + C8000 * C278 +
             C8218 + C8218 + C50881 * C298) *
                C50597 * C50919) *
               C50660 * C50914 +
           ((C8000 * C279 + C8219 + C8219 + C50881 * C299 + C8002 * C1079 +
             C8220 + C8220 + C50793 * C1087) *
                C50597 * C50919 +
            (C15870 + C15871) * C50597 * C50920 +
            (C8000 * C2684 + C15865 + C15865 + C50881 * C2690 + C8002 * C3699 +
             C15864 + C15864 + C50793 * C3703) *
                C50597 * C44486) *
               C50660 * C1306) *
              C50860 +
          (((C8256 + C8255) * C50597 * C50919 + C14658 * C50597 * C50920 +
            (C14674 + C14675) * C50597 * C44486) *
               C50660 * C50914 -
           (C47445 * C44486 + C13983 * C50597 * C50920 +
            (C8050 + C8049) * C50597 * C50919) *
               C50660 * C50913 -
           ((C8002 * C3698 + C15862 + C15862 + C50793 * C3702 + C8000 * C2685 +
             C15863 + C15863 + C50881 * C2691) *
                C50597 * C44486 +
            (C13778 + C13777) * C50597 * C50920 +
            (C8258 + C8257) * C50597 * C50919) *
               C50660 * C1306) *
              C50631)) /
        (p * q * std::sqrt(p + q));
    d2ee[171] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C8000 * C119 + C8005 + C8005 + C50881 * C133 +
                      C8002 * C278 + C8006 + C8006 + C50793 * C298) *
                         C50597 * C50919 +
                     (C14001 + C14002) * C50597 * C50920 + C47446 * C44486) *
                        C50869 -
                    ((C16403 + C16402) * C50597 * C44486 +
                     (C14003 + C14004) * C50597 * C50920 +
                     (C14002 + C14001) * C50597 * C50919) *
                        C50724) *
                       C50913 +
                   (((C14672 + C14673) * C50597 * C50919 +
                     (C15210 + C15211) * C50597 * C50920 +
                     (C48337 + C48338) * C50597 * C44486) *
                        C50724 -
                    (C48334 * C44486 + (C14673 + C14672) * C50597 * C50920 +
                     (C8002 * C279 + C8217 + C8217 + C50793 * C299 +
                      C8000 * C278 + C8218 + C8218 + C50881 * C298) *
                         C50597 * C50919) *
                        C50869) *
                       C50914 +
                   (((C8000 * C279 + C8219 + C8219 + C50881 * C299 +
                      C8002 * C1079 + C8220 + C8220 + C50793 * C1087) *
                         C50597 * C50919 +
                     (C15870 + C15871) * C50597 * C50920 +
                     (C48835 + C48836) * C50597 * C44486) *
                        C50869 -
                    ((C8002 * C21466 + C48829 + C48829 + C50793 * C21468 +
                      C8000 * C4600 + C48830 + C48830 + C50881 * C4608) *
                         C50597 * C44486 +
                     (C48836 + C48835) * C50597 * C50920 +
                     (C15871 + C15870) * C50597 * C50919) *
                        C50724) *
                       C1306) *
                  C50625) /
                 (p * q * std::sqrt(p + q));
    d2ee[172] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
            C8006 + C8006 + C50793 * C298) *
               C50597 * C50919 +
           (C14001 + C14002) * C50597 * C50920 + C47446 * C44486) *
              C50660 * C1071 -
          ((C15211 + C15210) * C50597 * C44486 +
           (C14673 + C14672) * C50597 * C50920 +
           (C8002 * C279 + C8217 + C8217 + C50793 * C299 + C8000 * C278 +
            C8218 + C8218 + C50881 * C298) *
               C50597 * C50919) *
              C50660 * C1072 +
          ((C8000 * C279 + C8219 + C8219 + C50881 * C299 + C8002 * C1079 +
            C8220 + C8220 + C50793 * C1087) *
               C50597 * C50919 +
           (C15870 + C15871) * C50597 * C50920 +
           (C8000 * C2684 + C15865 + C15865 + C50881 * C2690 + C8002 * C3699 +
            C15864 + C15864 + C50793 * C3703) *
               C50597 * C44486) *
              C50660 * C1073 -
          ((C8002 * C20864 + C48177 + C48177 + C50793 * C20866 + C8000 * C3699 +
            C48178 + C48178 + C50881 * C3703) *
               C50597 * C44486 +
           (C8002 * C4197 + C15002 + C15002 + C50793 * C4201 + C8000 * C3263 +
            C15003 + C15003 + C50881 * C3269) *
               C50597 * C50920 +
           (C8002 * C2481 + C9251 + C9251 + C50793 * C2487 + C8000 * C1079 +
            C9252 + C9252 + C50881 * C1087) *
               C50597 * C50919) *
              C50660 * C1074) *
         C50625) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
             C8006 + C8006 + C50793 * C298) *
                C50597 * C50919 +
            (C14001 + C14002) * C50597 * C50920 + C47446 * C44486) *
               C50660 * C1000 -
           ((C15211 + C15210) * C50597 * C44486 +
            (C14673 + C14672) * C50597 * C50920 +
            (C8002 * C279 + C8217 + C8217 + C50793 * C299 + C8000 * C278 +
             C8218 + C8218 + C50881 * C298) *
                C50597 * C50919) *
               C50660 * C50696) *
              C1002 +
          (((C8256 + C8255) * C50597 * C50919 + C14658 * C50597 * C50920 +
            (C14674 + C14675) * C50597 * C44486) *
               C50660 * C50696 -
           (C47445 * C44486 + C13983 * C50597 * C50920 +
            (C8050 + C8049) * C50597 * C50919) *
               C50660 * C1000) *
              C1003 +
          ((C8057 * C50597 * C50919 + C14395 * C50597 * C50920 +
            (C8461 + C8462) * C50597 * C44486) *
               C50660 * C1000 -
           ((C8002 * C2686 + C9399 + C9399 + C50793 * C2692 + C8000 * C1191 +
             C9400 + C9400 + C50881 * C1199) *
                C50597 * C44486 +
            (C9002 + C9001) * C50597 * C50920 + C8609 * C50597 * C50919) *
               C50660 * C50696) *
              C1004)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
             C8006 + C8006 + C50793 * C298) *
                C50597 * C50919 +
            (C14001 + C14002) * C50597 * C50920 + C47446 * C44486) *
               C443 -
           ((C16403 + C16402) * C50597 * C44486 +
            (C14003 + C14004) * C50597 * C50920 +
            (C14002 + C14001) * C50597 * C50919) *
               C444 +
           (C47446 * C50919 + (C16402 + C16403) * C50597 * C50920 +
            (C8000 * C5513 + C16397 + C16397 + C50881 * C5519 + C8002 * C6488 +
             C16396 + C16396 + C50793 * C6492) *
                C50597 * C44486) *
               C445) *
              C1000 +
          (((C14672 + C14673) * C50597 * C50919 +
            (C15210 + C15211) * C50597 * C50920 +
            (C48337 + C48338) * C50597 * C44486) *
               C444 -
           (C48334 * C44486 + (C14673 + C14672) * C50597 * C50920 +
            (C8002 * C279 + C8217 + C8217 + C50793 * C299 + C8000 * C278 +
             C8218 + C8218 + C50881 * C298) *
                C50597 * C50919) *
               C443 -
           ((C8002 * C23155 + C48330 + C48330 + C50793 * C23157 +
             C8000 * C6488 + C48331 + C48331 + C50881 * C6492) *
                C50597 * C44486 +
            (C48338 + C48337) * C50597 * C50920 + C48334 * C50919) *
               C445) *
              C50696) *
         C50625) /
            (p * q * std::sqrt(p + q));
    d2ee[173] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
              C8006 + C8006 + C50793 * C298) *
                 C50597 * C50919 +
             (C14001 + C14002) * C50597 * C50920 + C47446 * C44486) *
                C50869 -
            ((C16403 + C16402) * C50597 * C44486 +
             (C14003 + C14004) * C50597 * C50920 +
             (C14002 + C14001) * C50597 * C50919) *
                C50724) *
               C1000 +
           (((C14672 + C14673) * C50597 * C50919 +
             (C15210 + C15211) * C50597 * C50920 +
             (C48337 + C48338) * C50597 * C44486) *
                C50724 -
            (C48334 * C44486 + (C14673 + C14672) * C50597 * C50920 +
             (C8002 * C279 + C8217 + C8217 + C50793 * C299 + C8000 * C278 +
              C8218 + C8218 + C50881 * C298) *
                 C50597 * C50919) *
                C50869) *
               C50696) *
              C50860 +
          (((C13977 * C50597 * C50919 + C13984 * C50597 * C50920 +
             (C14005 + C14006) * C50597 * C44486) *
                C50724 -
            (C47445 * C44486 + C13983 * C50597 * C50920 +
             (C8050 + C8049) * C50597 * C50919) *
                C50869) *
               C1000 +
           (((C8256 + C8255) * C50597 * C50919 + C14658 * C50597 * C50920 +
             (C14674 + C14675) * C50597 * C44486) *
                C50869 -
            ((C8002 * C4598 + C15202 + C15202 + C50793 * C4606 + C8000 * C4599 +
              C15203 + C15203 + C50881 * C4607) *
                 C50597 * C44486 +
             (C14675 + C14674) * C50597 * C50920 + C14663 * C50597 * C50919) *
                C50724) *
               C50696) *
              C50631)) /
        (p * q * std::sqrt(p + q));
    d2ee[174] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
             C8006 + C8006 + C50793 * C298) *
                C50597 * C50919 +
            (C14001 + C14002) * C50597 * C50920 + C47446 * C44486) *
               C50660 * C1000 -
           ((C15211 + C15210) * C50597 * C44486 +
            (C14673 + C14672) * C50597 * C50920 +
            (C8002 * C279 + C8217 + C8217 + C50793 * C299 + C8000 * C278 +
             C8218 + C8218 + C50881 * C298) *
                C50597 * C50919) *
               C50660 * C50696) *
              C1002 +
          (((C8256 + C8255) * C50597 * C50919 + C14658 * C50597 * C50920 +
            (C14674 + C14675) * C50597 * C44486) *
               C50660 * C50696 -
           (C47445 * C44486 + C13983 * C50597 * C50920 +
            (C8050 + C8049) * C50597 * C50919) *
               C50660 * C1000) *
              C1003 +
          ((C8057 * C50597 * C50919 + C14395 * C50597 * C50920 +
            (C8461 + C8462) * C50597 * C44486) *
               C50660 * C1000 -
           ((C8002 * C2686 + C9399 + C9399 + C50793 * C2692 + C8000 * C1191 +
             C9400 + C9400 + C50881 * C1199) *
                C50597 * C44486 +
            (C9002 + C9001) * C50597 * C50920 + C8609 * C50597 * C50919) *
               C50660 * C50696) *
              C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
            C8006 + C8006 + C50793 * C298) *
               C50597 * C50919 +
           (C14001 + C14002) * C50597 * C50920 + C47446 * C44486) *
              C50660 * C1071 -
          ((C15211 + C15210) * C50597 * C44486 +
           (C14673 + C14672) * C50597 * C50920 +
           (C8002 * C279 + C8217 + C8217 + C50793 * C299 + C8000 * C278 +
            C8218 + C8218 + C50881 * C298) *
               C50597 * C50919) *
              C50660 * C1072 +
          ((C8000 * C279 + C8219 + C8219 + C50881 * C299 + C8002 * C1079 +
            C8220 + C8220 + C50793 * C1087) *
               C50597 * C50919 +
           (C15870 + C15871) * C50597 * C50920 +
           (C8000 * C2684 + C15865 + C15865 + C50881 * C2690 + C8002 * C3699 +
            C15864 + C15864 + C50793 * C3703) *
               C50597 * C44486) *
              C50660 * C1073 -
          ((C8002 * C20864 + C48177 + C48177 + C50793 * C20866 + C8000 * C3699 +
            C48178 + C48178 + C50881 * C3703) *
               C50597 * C44486 +
           (C8002 * C4197 + C15002 + C15002 + C50793 * C4201 + C8000 * C3263 +
            C15003 + C15003 + C50881 * C3269) *
               C50597 * C50920 +
           (C8002 * C2481 + C9251 + C9251 + C50793 * C2487 + C8000 * C1079 +
            C9252 + C9252 + C50881 * C1087) *
               C50597 * C50919) *
              C50660 * C1074) *
         C50625) /
            (p * q * std::sqrt(p + q));
    d2ee[175] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
              C8006 + C8006 + C50793 * C298) *
                 C50597 * C50919 +
             (C14001 + C14002) * C50597 * C50920 + C47446 * C44486) *
                C1651 -
            (C49234 * C44486 + (C14003 + C14004) * C50597 * C50920 +
             (C14002 + C14001) * C50597 * C50919) *
                C50724) *
               C50868 +
           (((C14672 + C14673) * C50597 * C50919 +
             (C15210 + C15211) * C50597 * C50920 +
             (C48337 + C48338) * C50597 * C44486) *
                C50724 -
            (C48334 * C44486 + (C14673 + C14672) * C50597 * C50920 +
             (C8002 * C279 + C8217 + C8217 + C50793 * C299 + C8000 * C278 +
              C8218 + C8218 + C50881 * C298) *
                 C50597 * C50919) *
                C1651) *
               C50696) *
              C50860 +
          (((C13977 * C50597 * C50919 + C13984 * C50597 * C50920 +
             (C14005 + C14006) * C50597 * C44486) *
                C50724 -
            (C47445 * C44486 + C13983 * C50597 * C50920 +
             (C8050 + C8049) * C50597 * C50919) *
                C1651) *
               C50868 +
           (((C8256 + C8255) * C50597 * C50919 + C14658 * C50597 * C50920 +
             (C14674 + C14675) * C50597 * C44486) *
                C1651 -
            ((C8002 * C4598 + C15202 + C15202 + C50793 * C4606 + C8000 * C4599 +
              C15203 + C15203 + C50881 * C4607) *
                 C50597 * C44486 +
             (C14675 + C14674) * C50597 * C50920 + C14663 * C50597 * C50919) *
                C50724) *
               C50696) *
              C50631)) /
        (p * q * std::sqrt(p + q));
    d2ee[176] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C8000 * C119 + C8005 + C8005 + C50881 * C133 +
                      C8002 * C278 + C8006 + C8006 + C50793 * C298) *
                         C50597 * C50919 +
                     (C14001 + C14002) * C50597 * C50920 + C47446 * C44486) *
                        C50915 -
                    (C49234 * C44486 + (C14003 + C14004) * C50597 * C50920 +
                     (C14002 + C14001) * C50597 * C50919) *
                        C50916 +
                    (C47446 * C50919 + (C16402 + C16403) * C50597 * C50920 +
                     (C49239 + C49240) * C50597 * C44486) *
                        C2067) *
                       C50868 +
                   (((C14672 + C14673) * C50597 * C50919 +
                     (C15210 + C15211) * C50597 * C50920 +
                     (C48337 + C48338) * C50597 * C44486) *
                        C50916 -
                    (C48334 * C44486 + (C14673 + C14672) * C50597 * C50920 +
                     (C8002 * C279 + C8217 + C8217 + C50793 * C299 +
                      C8000 * C278 + C8218 + C8218 + C50881 * C298) *
                         C50597 * C50919) *
                        C50915 -
                    ((C8002 * C23155 + C48330 + C48330 + C50793 * C23157 +
                      C8000 * C6488 + C48331 + C48331 + C50881 * C6492) *
                         C50597 * C44486 +
                     (C48338 + C48337) * C50597 * C50920 + C48334 * C50919) *
                        C2067) *
                       C50696) *
                  C50625) /
                 (p * q * std::sqrt(p + q));
    d2ee[177] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
             C8006 + C8006 + C50793 * C298) *
                C50597 * C50919 +
            (C14001 + C14002) * C50597 * C50920 + C47446 * C44486) *
               C1651 -
           ((C16403 + C16402) * C50597 * C44486 +
            (C14003 + C14004) * C50597 * C50920 +
            (C14002 + C14001) * C50597 * C50919) *
               C50724) *
              C270 +
          (((C14672 + C14673) * C50597 * C50919 +
            (C15210 + C15211) * C50597 * C50920 +
            (C48337 + C48338) * C50597 * C44486) *
               C50724 -
           (C48334 * C44486 + (C14673 + C14672) * C50597 * C50920 +
            (C8002 * C279 + C8217 + C8217 + C50793 * C299 + C8000 * C278 +
             C8218 + C8218 + C50881 * C298) *
                C50597 * C50919) *
               C1651) *
              C271 +
          (((C8000 * C279 + C8219 + C8219 + C50881 * C299 + C8002 * C1079 +
             C8220 + C8220 + C50793 * C1087) *
                C50597 * C50919 +
            (C15870 + C15871) * C50597 * C50920 +
            (C48835 + C48836) * C50597 * C44486) *
               C1651 -
           ((C8002 * C21466 + C48829 + C48829 + C50793 * C21468 +
             C8000 * C4600 + C48830 + C48830 + C50881 * C4608) *
                C50597 * C44486 +
            (C48836 + C48835) * C50597 * C50920 +
            (C15871 + C15870) * C50597 * C50919) *
               C50724) *
              C272) *
         C50625) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
             C8006 + C8006 + C50793 * C298) *
                C50597 * C50919 +
            (C14001 + C14002) * C50597 * C50920 + C47446 * C44486) *
               C1651 -
           ((C16403 + C16402) * C50597 * C44486 +
            (C14003 + C14004) * C50597 * C50920 +
            (C14002 + C14001) * C50597 * C50919) *
               C50724) *
              C50644 * C1002 +
          ((C13977 * C50597 * C50919 + C13984 * C50597 * C50920 +
            (C14005 + C14006) * C50597 * C44486) *
               C50724 -
           (C47445 * C44486 + C13983 * C50597 * C50920 +
            (C8050 + C8049) * C50597 * C50919) *
               C1651) *
              C50644 * C1003 +
          ((C8057 * C50597 * C50919 + C14395 * C50597 * C50920 +
            (C8461 + C8462) * C50597 * C44486) *
               C1651 -
           ((C8002 * C6064 + C10287 + C10287 + C50793 * C6066 + C8000 * C1822 +
             C10288 + C10288 + C50881 * C1830) *
                C50597 * C44486 +
            (C8462 + C8461) * C50597 * C50920 + C8768 * C50597 * C50919) *
               C50724) *
              C50644 * C1004)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
            C8006 + C8006 + C50793 * C298) *
               C50597 * C50919 +
           (C14001 + C14002) * C50597 * C50920 + C47446 * C44486) *
              C1817 -
          (C49234 * C44486 + (C14003 + C14004) * C50597 * C50920 +
           (C14002 + C14001) * C50597 * C50919) *
              C1818 +
          (C47446 * C50919 + (C16402 + C16403) * C50597 * C50920 +
           (C49239 + C49240) * C50597 * C44486) *
              C1819 -
          ((C8002 * C24070 + C49232 + C49232 + C50793 * C24072 + C8000 * C7396 +
            C49233 + C49233 + C50881 * C7400) *
               C50597 * C44486 +
           (C49240 + C49239) * C50597 * C50920 + C49234 * C50919) *
              C1820) *
         C50644 * C50625) /
            (p * q * std::sqrt(p + q));
    d2ee[178] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C8000 * C119 + C8005 + C8005 + C50881 * C133 +
                      C8002 * C278 + C8006 + C8006 + C50793 * C298) *
                         C50597 * C50919 +
                     (C14001 + C14002) * C50597 * C50920 + C47446 * C44486) *
                        C50915 -
                    (C49234 * C44486 + (C14003 + C14004) * C50597 * C50920 +
                     (C14002 + C14001) * C50597 * C50919) *
                        C50916 +
                    (C47446 * C50919 + (C16402 + C16403) * C50597 * C50920 +
                     (C49239 + C49240) * C50597 * C44486) *
                        C2067) *
                       C50644 * C50860 +
                   ((C13977 * C50597 * C50919 + C13984 * C50597 * C50920 +
                     (C14005 + C14006) * C50597 * C44486) *
                        C50916 -
                    (C47445 * C44486 + C13983 * C50597 * C50920 +
                     (C8050 + C8049) * C50597 * C50919) *
                        C50915 -
                    ((C8002 * C6487 + C16394 + C16394 + C50793 * C6491 +
                      C8000 * C5514 + C16395 + C16395 + C50881 * C5520) *
                         C50597 * C44486 +
                     (C14006 + C14005) * C50597 * C50920 + C47445 * C50919) *
                        C2067) *
                       C50644 * C50631)) /
                 (p * q * std::sqrt(p + q));
    d2ee[179] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
             C8006 + C8006 + C50793 * C298) *
                C50597 * C50919 +
            (C14001 + C14002) * C50597 * C50920 + C47446 * C44486) *
               C1651 -
           ((C16403 + C16402) * C50597 * C44486 +
            (C14003 + C14004) * C50597 * C50920 +
            (C14002 + C14001) * C50597 * C50919) *
               C50724) *
              C50644 * C1002 +
          ((C13977 * C50597 * C50919 + C13984 * C50597 * C50920 +
            (C14005 + C14006) * C50597 * C44486) *
               C50724 -
           (C47445 * C44486 + C13983 * C50597 * C50920 +
            (C8050 + C8049) * C50597 * C50919) *
               C1651) *
              C50644 * C1003 +
          ((C8057 * C50597 * C50919 + C14395 * C50597 * C50920 +
            (C8461 + C8462) * C50597 * C44486) *
               C1651 -
           ((C8002 * C6064 + C10287 + C10287 + C50793 * C6066 + C8000 * C1822 +
             C10288 + C10288 + C50881 * C1830) *
                C50597 * C44486 +
            (C8462 + C8461) * C50597 * C50920 + C8768 * C50597 * C50919) *
               C50724) *
              C50644 * C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8000 * C119 + C8005 + C8005 + C50881 * C133 + C8002 * C278 +
             C8006 + C8006 + C50793 * C298) *
                C50597 * C50919 +
            (C14001 + C14002) * C50597 * C50920 + C47446 * C44486) *
               C1651 -
           ((C16403 + C16402) * C50597 * C44486 +
            (C14003 + C14004) * C50597 * C50920 +
            (C14002 + C14001) * C50597 * C50919) *
               C50724) *
              C270 +
          (((C14672 + C14673) * C50597 * C50919 +
            (C15210 + C15211) * C50597 * C50920 +
            (C48337 + C48338) * C50597 * C44486) *
               C50724 -
           (C48334 * C44486 + (C14673 + C14672) * C50597 * C50920 +
            (C8002 * C279 + C8217 + C8217 + C50793 * C299 + C8000 * C278 +
             C8218 + C8218 + C50881 * C298) *
                C50597 * C50919) *
               C1651) *
              C271 +
          (((C8000 * C279 + C8219 + C8219 + C50881 * C299 + C8002 * C1079 +
             C8220 + C8220 + C50793 * C1087) *
                C50597 * C50919 +
            (C15870 + C15871) * C50597 * C50920 +
            (C48835 + C48836) * C50597 * C44486) *
               C1651 -
           ((C8002 * C21466 + C48829 + C48829 + C50793 * C21468 +
             C8000 * C4600 + C48830 + C48830 + C50881 * C4608) *
                C50597 * C44486 +
            (C48836 + C48835) * C50597 * C50920 +
            (C15871 + C15870) * C50597 * C50919) *
               C50724) *
              C272) *
         C50625) /
            (p * q * std::sqrt(p + q));
    d2ee[180] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 +
             C2277 + C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
             C2266 * C299) *
                C50597 * C33790 +
            (C36767 + C36768 + C36769) * C50597 * C50821) *
               C50660 * C50868 -
           ((C2273 * C3263 + C3275 + C3275 + C2266 * C3269 + C2271 * C1540 +
             C3274 + C3274 + C2265 * C1548 + C2269 * C867 + C3273 + C3273 +
             C2264 * C877) *
                C50597 * C50821 +
            (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 + C2271 * C279 +
             C2501 + C2501 + C2265 * C299 + C2269 * C278 + C2502 + C2502 +
             C2264 * C298) *
                C50597 * C33790) *
               C50660 * C50696) *
              C50911 +
          (((C2535 + C2534 + C2533) * C50597 * C33790 +
            (C3294 + C3295 + C3296) * C50597 * C50821) *
               C50660 * C50696 -
           ((C2736 + C2737 + C2738) * C50597 * C50821 +
            (C2329 + C2328 + C2327) * C50597 * C33790) *
               C50660 * C50868) *
              C50912 +
          (((C2332 + C2331 + C2330) * C50597 * C33790 +
            (C3067 + C3068 + C3069) * C50597 * C50821) *
               C50660 * C50868 -
           ((C2273 * C3265 + C3285 + C3285 + C2266 * C3271 + C2271 * C1538 +
             C3286 + C3286 + C2265 * C1546 + C2269 * C869 + C3287 + C3287 +
             C2264 * C879) *
                C50597 * C50821 +
            (C2905 + C2904 + C2903) * C50597 * C33790) *
               C50660 * C50696) *
              C618)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50741 * C133) * C17149 +
             C168 * C17150 + C169 * C17151) *
                C33790 +
            (C34085 + C34086 + C34087) * C50821) *
               C50660 * C50868 -
           ((C901 * C17151 + C900 * C17150 + C6089 * C17149) * C50821 +
            (C341 * C17151 + C342 * C17150 +
             (C117 * C278 + C315 + C315 + C50741 * C298) * C17149) *
                C33790) *
               C50660 * C50696) *
              C50911 +
          (((C342 * C17149 + C341 * C17150 + C340 * C17151) * C33790 +
            (C900 * C17149 + C901 * C17150 + C902 * C17151) * C50821) *
               C50660 * C50696 -
           ((C34093 + C34092 + C34091) * C50821 +
            (C170 * C17151 + C169 * C17150 + C168 * C17149) * C33790) *
               C50660 * C50868) *
              C50912 +
          (((C169 * C17149 + C170 * C17150 + C171 * C17151) * C33790 +
            (C512 * C17149 + C511 * C17150 + C737 * C17151) * C50821) *
               C50660 * C50868 -
           (((C117 * C871 + C893 + C893 + C50741 * C881) * C17151 +
             C902 * C17150 + C901 * C17149) *
                C50821 +
            (C628 * C17151 + C340 * C17150 + C341 * C17149) * C33790) *
               C50660 * C50696) *
              C618)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50741 * C133) * C50597 * C39148 +
            C39349 * C39149 + C39350 * C39150 + C39351 * C39151) *
               C50660 * C50868 -
           (C6502 * C50597 * C39151 + C6090 * C50597 * C39150 +
            C6089 * C50597 * C39149 +
            (C117 * C278 + C315 + C315 + C50741 * C298) * C50597 * C39148) *
               C50660 * C50696) *
              C50911 +
          ((C342 * C50597 * C39148 + C900 * C50597 * C39149 +
            C5365 * C50597 * C39150 + C6091 * C50597 * C39151) *
               C50660 * C50696 -
           (C39355 * C39151 + C39354 * C39150 + C39353 * C39149 +
            C168 * C50597 * C39148) *
               C50660 * C50868) *
              C50912 +
          ((C169 * C50597 * C39148 + C512 * C50597 * C39149 +
            C515 * C50597 * C39150 + C5562 * C50597 * C39151) *
               C50660 * C50868 -
           ((C117 * C6064 + C6082 + C6082 + C50741 * C6066) * C50597 * C39151 +
            C5720 * C50597 * C39150 + C901 * C50597 * C39149 +
            C341 * C50597 * C39148) *
               C50660 * C50696) *
              C618)) /
            (p * q * std::sqrt(p + q));
    d2ee[181] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 +
              C2277 + C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
              C2266 * C299) *
                 C50597 * C33790 +
             (C36767 + C36768 + C36769) * C50597 * C50821) *
                C50869 -
            ((C36770 + C36771 + C36772) * C50597 * C50821 +
             (C36769 + C36768 + C36767) * C50597 * C33790) *
                C50724) *
               C50868 +
           (((C37271 + C37272 + C37273) * C50597 * C33790 +
             (C2269 * C1193 + C3710 + C3710 + C2264 * C1201 + C2271 * C2684 +
              C3709 + C3709 + C2265 * C2690 + C2273 * C3699 + C3708 + C3708 +
              C2266 * C3703) *
                 C50597 * C50821) *
                C50724 -
            ((C37273 + C37272 + C37271) * C50597 * C50821 +
             (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 + C2271 * C279 +
              C2501 + C2501 + C2265 * C299 + C2269 * C278 + C2502 + C2502 +
              C2264 * C298) *
                 C50597 * C33790) *
                C50869) *
               C50696) *
              C273 +
          ((((C2738 + C2737 + C2736) * C50597 * C33790 +
             (C2739 + C2740 + C2741) * C50597 * C50821) *
                C50724 -
            ((C2736 + C2737 + C2738) * C50597 * C50821 +
             (C2329 + C2328 + C2327) * C50597 * C33790) *
                C50869) *
               C50868 +
           (((C2535 + C2534 + C2533) * C50597 * C33790 +
             (C3294 + C3295 + C3296) * C50597 * C50821) *
                C50869 -
            ((C2273 * C3698 + C3705 + C3705 + C2266 * C3702 + C2271 * C2685 +
              C3706 + C3706 + C2265 * C2691 + C2269 * C1192 + C3707 + C3707 +
              C2264 * C1200) *
                 C50597 * C50821 +
             (C3296 + C3295 + C3294) * C50597 * C33790) *
                C50724) *
               C50696) *
              C50631)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50741 * C133) * C17149 +
              C168 * C17150 + C169 * C17151) *
                 C33790 +
             (C34085 + C34086 + C34087) * C50821) *
                C50869 -
            ((C34088 + C34089 + C34090) * C50821 +
             (C34087 + C34086 + C34085) * C33790) *
                C50724) *
               C50868 +
           (((C34586 + C34587 + C34588) * C33790 +
             (C6090 * C17149 + C5365 * C17150 + C5720 * C17151) * C50821) *
                C50724 -
            ((C34588 + C34587 + C34586) * C50821 +
             (C341 * C17151 + C342 * C17150 +
              (C117 * C278 + C315 + C315 + C50741 * C298) * C17149) *
                 C33790) *
                C50869) *
               C50696) *
              C273 +
          ((((C34091 + C34092 + C34093) * C33790 +
             (C34094 + C34095 + C34096) * C50821) *
                C50724 -
            ((C34093 + C34092 + C34091) * C50821 +
             (C170 * C17151 + C169 * C17150 + C168 * C17149) * C33790) *
                C50869) *
               C50868 +
           (((C342 * C17149 + C341 * C17150 + C340 * C17151) * C33790 +
             (C34589 + C34590 + C34591) * C50821) *
                C50869 -
            (((C117 * C1190 + C1203 + C1203 + C50741 * C1198) * C17151 +
              C5720 * C17150 + C5365 * C17149) *
                 C50821 +
             (C34591 + C34590 + C34589) * C33790) *
                C50724) *
               C50696) *
              C50631)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50741 * C133) * C50597 * C39148 +
             C39349 * C39149 + C39350 * C39150 + C39351 * C39151) *
                C50869 -
            (C39352 * C39151 + C39351 * C39150 + C39350 * C39149 +
             C39349 * C39148) *
                C50724) *
               C50868 +
           ((C39686 * C39148 + C39687 * C39149 + C39688 * C39150 +
             (C117 * C6488 + C6499 + C6499 + C50741 * C6492) * C50597 *
                 C39151) *
                C50724 -
            (C39688 * C39151 + C39687 * C39150 + C39686 * C39149 +
             (C117 * C278 + C315 + C315 + C50741 * C298) * C50597 * C39148) *
                C50869) *
               C50696) *
              C273 +
          (((C39353 * C39148 + C39354 * C39149 + C39355 * C39150 +
             C39356 * C39151) *
                C50724 -
            (C39355 * C39151 + C39354 * C39150 + C39353 * C39149 +
             C168 * C50597 * C39148) *
                C50869) *
               C50868 +
           ((C342 * C50597 * C39148 + C39689 * C39149 + C39690 * C39150 +
             C39691 * C39151) *
                C50869 -
            ((C117 * C6487 + C6498 + C6498 + C50741 * C6491) * C50597 * C39151 +
             C39691 * C39150 + C39690 * C39149 + C39689 * C39148) *
                C50724) *
               C50696) *
              C50631)) /
            (p * q * std::sqrt(p + q));
    d2ee[182] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C141 + C141 + C50741 * C133) * C17149 +
                C168 * C17150 + C169 * C17151) *
                   C33790 +
               (C5557 * C17149 + C513 * C17150 + C512 * C17151) * C50821) *
                  C50660 * C50644 * C113 -
              ((C511 * C17151 + C512 * C17150 + C513 * C17149) * C50821 +
               (C170 * C17151 + C169 * C17150 + C168 * C17149) * C33790) *
                  C50660 * C50644 * C114 +
              ((C169 * C17149 + C170 * C17150 + C171 * C17151) * C33790 +
               (C512 * C17149 + C511 * C17150 + C737 * C17151) * C50821) *
                  C50660 * C50644 * C115 -
              (((C117 * C728 + C734 + C734 + C50741 * C730) * C17151 +
                C737 * C17150 + C511 * C17149) *
                   C50821 +
               (C172 * C17151 + C171 * C17150 + C170 * C17149) * C33790) *
                  C50660 * C50644 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C141 + C141 + C50741 * C133) * C17149 +
                 C168 * C17150 + C169 * C17151) *
                    C33790 +
                (C5557 * C17149 + C513 * C17150 + C512 * C17151) * C50821) *
                   C50660 * C270 -
               ((C901 * C17151 + C900 * C17150 + C6089 * C17149) * C50821 +
                (C341 * C17151 + C342 * C17150 +
                 (C117 * C278 + C315 + C315 + C50741 * C298) * C17149) *
                    C33790) *
                   C50660 * C271 +
               (((C117 * C279 + C316 + C316 + C50741 * C299) * C17149 +
                 C343 * C17150 + C344 * C17151) *
                    C33790 +
                (C7002 * C17149 + C5366 * C17150 + C11029 * C17151) * C50821) *
                   C50660 * C272) *
                  C273 +
              (((C342 * C17149 + C341 * C17150 + C340 * C17151) * C33790 +
                (C900 * C17149 + C901 * C17150 + C902 * C17151) * C50821) *
                   C50660 * C271 -
               ((C511 * C17151 + C512 * C17150 + C513 * C17149) * C50821 +
                (C170 * C17151 + C169 * C17150 + C168 * C17149) * C33790) *
                   C50660 * C270 -
               (((C117 * C1537 + C1550 + C1550 + C50741 * C1545) * C17151 +
                 C11029 * C17150 + C5366 * C17149) *
                    C50821 +
                (C345 * C17151 + C344 * C17150 + C343 * C17149) * C33790) *
                   C50660 * C272) *
                  C50631)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50741 * C133) * C17149 +
             C168 * C17150 + C169 * C17151) *
                C33790 +
            (C34085 + C34086 + C34087) * C50821) *
               C443 -
           ((C34088 + C34089 + C34090) * C50821 +
            (C34087 + C34086 + C34085) * C33790) *
               C444 +
           ((C34090 + C34089 + C34088) * C33790 +
            (C5560 * C17149 + C5559 * C17150 + C5562 * C17151) * C50821) *
               C445) *
              C50644 * C273 +
          (((C34091 + C34092 + C34093) * C33790 +
            (C34094 + C34095 + C34096) * C50821) *
               C444 -
           ((C34093 + C34092 + C34091) * C50821 +
            (C170 * C17151 + C169 * C17150 + C168 * C17149) * C33790) *
               C443 -
           (((C117 * C1821 + C1834 + C1834 + C50741 * C1829) * C17151 +
             C5562 * C17150 + C5559 * C17149) *
                C50821 +
            (C34096 + C34095 + C34094) * C33790) *
               C445) *
              C50644 * C50631)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 + C2277 +
            C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
            C2266 * C299) *
               C50597 * C33790 +
           (C2269 * C449 + C2705 + C2705 + C2264 * C469 + C2271 * C867 + C2704 +
            C2704 + C2265 * C877 + C2273 * C1540 + C2703 + C2703 +
            C2266 * C1548) *
               C50597 * C50821) *
              C50660 * C50644 * C113 -
          ((C2736 + C2737 + C2738) * C50597 * C50821 +
           (C2329 + C2328 + C2327) * C50597 * C33790) *
              C50660 * C50644 * C114 +
          ((C2332 + C2331 + C2330) * C50597 * C33790 +
           (C3067 + C3068 + C3069) * C50597 * C50821) *
              C50660 * C50644 * C115 -
          ((C2273 * C1537 + C3058 + C3058 + C2266 * C1545 + C2271 * C870 +
            C3059 + C3059 + C2265 * C880 + C2269 * C446 + C3060 + C3060 +
            C2264 * C466) *
               C50597 * C50821 +
           (C2335 + C2334 + C2333) * C50597 * C33790) *
              C50660 * C50644 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 +
             C2277 + C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
             C2266 * C299) *
                C50597 * C33790 +
            (C2269 * C449 + C2705 + C2705 + C2264 * C469 + C2271 * C867 +
             C2704 + C2704 + C2265 * C877 + C2273 * C1540 + C2703 + C2703 +
             C2266 * C1548) *
                C50597 * C50821) *
               C50660 * C270 -
           ((C2273 * C3263 + C3275 + C3275 + C2266 * C3269 + C2271 * C1540 +
             C3274 + C3274 + C2265 * C1548 + C2269 * C867 + C3273 + C3273 +
             C2264 * C877) *
                C50597 * C50821 +
            (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 + C2271 * C279 +
             C2501 + C2501 + C2265 * C299 + C2269 * C278 + C2502 + C2502 +
             C2264 * C298) *
                C50597 * C33790) *
               C50660 * C271 +
           ((C2269 * C279 + C2503 + C2503 + C2264 * C299 + C2271 * C1079 +
             C2504 + C2504 + C2265 * C1087 + C2273 * C2481 + C2505 + C2505 +
             C2266 * C2487) *
                C50597 * C33790 +
            (C2269 * C1540 + C4208 + C4208 + C2264 * C1548 + C2271 * C3263 +
             C4207 + C4207 + C2265 * C3269 + C2273 * C4197 + C4206 + C4206 +
             C2266 * C4201) *
                C50597 * C50821) *
               C50660 * C272) *
              C273 +
          (((C2535 + C2534 + C2533) * C50597 * C33790 +
            (C3294 + C3295 + C3296) * C50597 * C50821) *
               C50660 * C271 -
           ((C2736 + C2737 + C2738) * C50597 * C50821 +
            (C2329 + C2328 + C2327) * C50597 * C33790) *
               C50660 * C270 -
           ((C2273 * C4196 + C4203 + C4203 + C2266 * C4200 + C2271 * C3264 +
             C4204 + C4204 + C2265 * C3270 + C2269 * C1539 + C4205 + C4205 +
             C2264 * C1547) *
                C50597 * C50821 +
            (C2538 + C2537 + C2536) * C50597 * C33790) *
               C50660 * C272) *
              C50631)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 +
             C2277 + C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
             C2266 * C299) *
                C50597 * C33790 +
            (C36767 + C36768 + C36769) * C50597 * C50821) *
               C443 -
           ((C36770 + C36771 + C36772) * C50597 * C50821 +
            (C36769 + C36768 + C36767) * C50597 * C33790) *
               C444 +
           ((C36772 + C36771 + C36770) * C50597 * C33790 +
            (C2269 * C1824 + C4616 + C4616 + C2264 * C1832 + C2271 * C4601 +
             C4615 + C4615 + C2265 * C4609 + C2273 * C4600 + C4614 + C4614 +
             C2266 * C4608) *
                C50597 * C50821) *
               C445) *
              C50644 * C273 +
          (((C2738 + C2737 + C2736) * C50597 * C33790 +
            (C2739 + C2740 + C2741) * C50597 * C50821) *
               C444 -
           ((C2736 + C2737 + C2738) * C50597 * C50821 +
            (C2329 + C2328 + C2327) * C50597 * C33790) *
               C443 -
           ((C2273 * C4598 + C4611 + C4611 + C2266 * C4606 + C2271 * C4599 +
             C4612 + C4612 + C2265 * C4607 + C2269 * C1823 + C4613 + C4613 +
             C2264 * C1831) *
                C50597 * C50821 +
            (C2741 + C2740 + C2739) * C50597 * C33790) *
               C445) *
              C50644 * C50631)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50741 * C133) * C50597 * C39148 +
           C5557 * C50597 * C39149 + C5558 * C50597 * C39150 +
           C5560 * C50597 * C39151) *
              C50660 * C50644 * C113 -
          (C5559 * C50597 * C39151 + C514 * C50597 * C39150 +
           C513 * C50597 * C39149 + C168 * C50597 * C39148) *
              C50660 * C50644 * C114 +
          (C169 * C50597 * C39148 + C512 * C50597 * C39149 +
           C515 * C50597 * C39150 + C5562 * C50597 * C39151) *
              C50660 * C50644 * C115 -
          ((C117 * C1821 + C1834 + C1834 + C50741 * C1829) * C50597 * C39151 +
           C516 * C50597 * C39150 + C511 * C50597 * C39149 +
           C170 * C50597 * C39148) *
              C50660 * C50644 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50741 * C133) * C50597 * C39148 +
            C5557 * C50597 * C39149 + C5558 * C50597 * C39150 +
            C5560 * C50597 * C39151) *
               C50660 * C270 -
           (C6502 * C50597 * C39151 + C6090 * C50597 * C39150 +
            C6089 * C50597 * C39149 +
            (C117 * C278 + C315 + C315 + C50741 * C298) * C50597 * C39148) *
               C50660 * C271 +
           ((C117 * C279 + C316 + C316 + C50741 * C299) * C50597 * C39148 +
            C7002 * C50597 * C39149 + C7003 * C50597 * C39150 +
            (C117 * C4600 + C6997 + C6997 + C50741 * C4608) * C50597 * C39151) *
               C50660 * C272) *
              C273 +
          ((C342 * C50597 * C39148 + C900 * C50597 * C39149 +
            C5365 * C50597 * C39150 + C6091 * C50597 * C39151) *
               C50660 * C271 -
           (C5559 * C50597 * C39151 + C514 * C50597 * C39150 +
            C513 * C50597 * C39149 + C168 * C50597 * C39148) *
               C50660 * C270 -
           ((C117 * C4598 + C6996 + C6996 + C50741 * C4606) * C50597 * C39151 +
            C5367 * C50597 * C39150 + C5366 * C50597 * C39149 +
            C343 * C50597 * C39148) *
               C50660 * C272) *
              C50631)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50741 * C133) * C50597 * C39148 +
            C39349 * C39149 + C39350 * C39150 + C39351 * C39151) *
               C443 -
           (C39352 * C39151 + C39351 * C39150 + C39350 * C39149 +
            C39349 * C39148) *
               C444 +
           (C39350 * C39148 + C39351 * C39149 + C39352 * C39150 +
            (C117 * C7396 + C7407 + C7407 + C50741 * C7400) * C50597 * C39151) *
               C445) *
              C50644 * C273 +
          ((C39353 * C39148 + C39354 * C39149 + C39355 * C39150 +
            C39356 * C39151) *
               C444 -
           (C39355 * C39151 + C39354 * C39150 + C39353 * C39149 +
            C168 * C50597 * C39148) *
               C443 -
           ((C117 * C7395 + C7406 + C7406 + C50741 * C7399) * C50597 * C39151 +
            C39356 * C39150 + C39355 * C39149 + C39354 * C39148) *
               C445) *
              C50644 * C50631)) /
            (p * q * std::sqrt(p + q));
    d2ee[183] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 +
             C2277 + C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
             C2266 * C299) *
                C50597 * C33790 +
            (C36767 + C36768 + C36769) * C50597 * C50821) *
               C50869 -
           ((C36770 + C36771 + C36772) * C50597 * C50821 +
            (C36769 + C36768 + C36767) * C50597 * C33790) *
               C50724) *
              C50644 * C50911 +
          (((C2738 + C2737 + C2736) * C50597 * C33790 +
            (C2739 + C2740 + C2741) * C50597 * C50821) *
               C50724 -
           ((C2736 + C2737 + C2738) * C50597 * C50821 +
            (C2329 + C2328 + C2327) * C50597 * C33790) *
               C50869) *
              C50644 * C50912 +
          (((C2332 + C2331 + C2330) * C50597 * C33790 +
            (C3067 + C3068 + C3069) * C50597 * C50821) *
               C50869 -
           ((C2273 * C2686 + C2721 + C2721 + C2266 * C2692 + C2271 * C1191 +
             C2722 + C2722 + C2265 * C1199 + C2269 * C452 + C2723 + C2723 +
             C2264 * C472) *
                C50597 * C50821 +
            (C3069 + C3068 + C3067) * C50597 * C33790) *
               C50724) *
              C50644 * C618)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50741 * C133) * C17149 +
             C168 * C17150 + C169 * C17151) *
                C33790 +
            (C34085 + C34086 + C34087) * C50821) *
               C50869 -
           ((C34088 + C34089 + C34090) * C50821 +
            (C34087 + C34086 + C34085) * C33790) *
               C50724) *
              C50644 * C50911 +
          (((C34091 + C34092 + C34093) * C33790 +
            (C34094 + C34095 + C34096) * C50821) *
               C50724 -
           ((C34093 + C34092 + C34091) * C50821 +
            (C170 * C17151 + C169 * C17150 + C168 * C17149) * C33790) *
               C50869) *
              C50644 * C50912 +
          (((C169 * C17149 + C170 * C17150 + C171 * C17151) * C33790 +
            (C34389 + C34390 + C34391) * C50821) *
               C50869 -
           (((C117 * C455 + C498 + C498 + C50741 * C475) * C17151 +
             C516 * C17150 + C515 * C17149) *
                C50821 +
            (C34391 + C34390 + C34389) * C33790) *
               C50724) *
              C50644 * C618)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50741 * C133) * C50597 * C39148 +
            C39349 * C39149 + C39350 * C39150 + C39351 * C39151) *
               C50869 -
           (C39352 * C39151 + C39351 * C39150 + C39350 * C39149 +
            C39349 * C39148) *
               C50724) *
              C50644 * C50911 +
          ((C39353 * C39148 + C39354 * C39149 + C39355 * C39150 +
            C39356 * C39151) *
               C50724 -
           (C39355 * C39151 + C39354 * C39150 + C39353 * C39149 +
            C168 * C50597 * C39148) *
               C50869) *
              C50644 * C50912 +
          ((C169 * C50597 * C39148 + C39553 * C39149 + C39554 * C39150 +
            C39555 * C39151) *
               C50869 -
           ((C117 * C5515 + C5543 + C5543 + C50741 * C5521) * C50597 * C39151 +
            C39555 * C39150 + C39554 * C39149 + C39553 * C39148) *
               C50724) *
              C50644 * C618)) /
            (p * q * std::sqrt(p + q));
    d2ee[184] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50741 * C133) * C17149 +
             C168 * C17150 + C169 * C17151) *
                C33790 +
            (C5557 * C17149 + C513 * C17150 + C512 * C17151) * C50821) *
               C50660 * C270 -
           ((C901 * C17151 + C900 * C17150 + C6089 * C17149) * C50821 +
            (C341 * C17151 + C342 * C17150 +
             (C117 * C278 + C315 + C315 + C50741 * C298) * C17149) *
                C33790) *
               C50660 * C271 +
           (((C117 * C279 + C316 + C316 + C50741 * C299) * C17149 +
             C343 * C17150 + C344 * C17151) *
                C33790 +
            (C7002 * C17149 + C5366 * C17150 + C11029 * C17151) * C50821) *
               C50660 * C272) *
              C273 +
          (((C342 * C17149 + C341 * C17150 + C340 * C17151) * C33790 +
            (C900 * C17149 + C901 * C17150 + C902 * C17151) * C50821) *
               C50660 * C271 -
           ((C511 * C17151 + C512 * C17150 + C513 * C17149) * C50821 +
            (C170 * C17151 + C169 * C17150 + C168 * C17149) * C33790) *
               C50660 * C270 -
           (((C117 * C1537 + C1550 + C1550 + C50741 * C1545) * C17151 +
             C11029 * C17150 + C5366 * C17149) *
                C50821 +
            (C345 * C17151 + C344 * C17150 + C343 * C17149) * C33790) *
               C50660 * C272) *
              C50631)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50741 * C133) * C17149 +
            C168 * C17150 + C169 * C17151) *
               C33790 +
           (C5557 * C17149 + C513 * C17150 + C512 * C17151) * C50821) *
              C50660 * C50644 * C113 -
          ((C511 * C17151 + C512 * C17150 + C513 * C17149) * C50821 +
           (C170 * C17151 + C169 * C17150 + C168 * C17149) * C33790) *
              C50660 * C50644 * C114 +
          ((C169 * C17149 + C170 * C17150 + C171 * C17151) * C33790 +
           (C512 * C17149 + C511 * C17150 + C737 * C17151) * C50821) *
              C50660 * C50644 * C115 -
          (((C117 * C728 + C734 + C734 + C50741 * C730) * C17151 +
            C737 * C17150 + C511 * C17149) *
               C50821 +
           (C172 * C17151 + C171 * C17150 + C170 * C17149) * C33790) *
              C50660 * C50644 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 + C2277 +
            C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
            C2266 * C299) *
               C50597 * C33790 +
           (C2269 * C449 + C2705 + C2705 + C2264 * C469 + C2271 * C867 + C2704 +
            C2704 + C2265 * C877 + C2273 * C1540 + C2703 + C2703 +
            C2266 * C1548) *
               C50597 * C50821) *
              C50660 * C50644 * C113 -
          ((C2736 + C2737 + C2738) * C50597 * C50821 +
           (C2329 + C2328 + C2327) * C50597 * C33790) *
              C50660 * C50644 * C114 +
          ((C2332 + C2331 + C2330) * C50597 * C33790 +
           (C3067 + C3068 + C3069) * C50597 * C50821) *
              C50660 * C50644 * C115 -
          ((C2273 * C1537 + C3058 + C3058 + C2266 * C1545 + C2271 * C870 +
            C3059 + C3059 + C2265 * C880 + C2269 * C446 + C3060 + C3060 +
            C2264 * C466) *
               C50597 * C50821 +
           (C2335 + C2334 + C2333) * C50597 * C33790) *
              C50660 * C50644 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 +
             C2277 + C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
             C2266 * C299) *
                C50597 * C33790 +
            (C2269 * C449 + C2705 + C2705 + C2264 * C469 + C2271 * C867 +
             C2704 + C2704 + C2265 * C877 + C2273 * C1540 + C2703 + C2703 +
             C2266 * C1548) *
                C50597 * C50821) *
               C50660 * C270 -
           ((C2273 * C3263 + C3275 + C3275 + C2266 * C3269 + C2271 * C1540 +
             C3274 + C3274 + C2265 * C1548 + C2269 * C867 + C3273 + C3273 +
             C2264 * C877) *
                C50597 * C50821 +
            (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 + C2271 * C279 +
             C2501 + C2501 + C2265 * C299 + C2269 * C278 + C2502 + C2502 +
             C2264 * C298) *
                C50597 * C33790) *
               C50660 * C271 +
           ((C2269 * C279 + C2503 + C2503 + C2264 * C299 + C2271 * C1079 +
             C2504 + C2504 + C2265 * C1087 + C2273 * C2481 + C2505 + C2505 +
             C2266 * C2487) *
                C50597 * C33790 +
            (C2269 * C1540 + C4208 + C4208 + C2264 * C1548 + C2271 * C3263 +
             C4207 + C4207 + C2265 * C3269 + C2273 * C4197 + C4206 + C4206 +
             C2266 * C4201) *
                C50597 * C50821) *
               C50660 * C272) *
              C273 +
          (((C2535 + C2534 + C2533) * C50597 * C33790 +
            (C3294 + C3295 + C3296) * C50597 * C50821) *
               C50660 * C271 -
           ((C2736 + C2737 + C2738) * C50597 * C50821 +
            (C2329 + C2328 + C2327) * C50597 * C33790) *
               C50660 * C270 -
           ((C2273 * C4196 + C4203 + C4203 + C2266 * C4200 + C2271 * C3264 +
             C4204 + C4204 + C2265 * C3270 + C2269 * C1539 + C4205 + C4205 +
             C2264 * C1547) *
                C50597 * C50821 +
            (C2538 + C2537 + C2536) * C50597 * C33790) *
               C50660 * C272) *
              C50631)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50741 * C133) * C50597 * C39148 +
           C5557 * C50597 * C39149 + C5558 * C50597 * C39150 +
           C5560 * C50597 * C39151) *
              C50660 * C50644 * C113 -
          (C5559 * C50597 * C39151 + C514 * C50597 * C39150 +
           C513 * C50597 * C39149 + C168 * C50597 * C39148) *
              C50660 * C50644 * C114 +
          (C169 * C50597 * C39148 + C512 * C50597 * C39149 +
           C515 * C50597 * C39150 + C5562 * C50597 * C39151) *
              C50660 * C50644 * C115 -
          ((C117 * C1821 + C1834 + C1834 + C50741 * C1829) * C50597 * C39151 +
           C516 * C50597 * C39150 + C511 * C50597 * C39149 +
           C170 * C50597 * C39148) *
              C50660 * C50644 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50741 * C133) * C50597 * C39148 +
            C5557 * C50597 * C39149 + C5558 * C50597 * C39150 +
            C5560 * C50597 * C39151) *
               C50660 * C270 -
           (C6502 * C50597 * C39151 + C6090 * C50597 * C39150 +
            C6089 * C50597 * C39149 +
            (C117 * C278 + C315 + C315 + C50741 * C298) * C50597 * C39148) *
               C50660 * C271 +
           ((C117 * C279 + C316 + C316 + C50741 * C299) * C50597 * C39148 +
            C7002 * C50597 * C39149 + C7003 * C50597 * C39150 +
            (C117 * C4600 + C6997 + C6997 + C50741 * C4608) * C50597 * C39151) *
               C50660 * C272) *
              C273 +
          ((C342 * C50597 * C39148 + C900 * C50597 * C39149 +
            C5365 * C50597 * C39150 + C6091 * C50597 * C39151) *
               C50660 * C271 -
           (C5559 * C50597 * C39151 + C514 * C50597 * C39150 +
            C513 * C50597 * C39149 + C168 * C50597 * C39148) *
               C50660 * C270 -
           ((C117 * C4598 + C6996 + C6996 + C50741 * C4606) * C50597 * C39151 +
            C5367 * C50597 * C39150 + C5366 * C50597 * C39149 +
            C343 * C50597 * C39148) *
               C50660 * C272) *
              C50631)) /
            (p * q * std::sqrt(p + q));
    d2ee[185] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 +
             C2277 + C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
             C2266 * C299) *
                C50597 * C33790 +
            (C36767 + C36768 + C36769) * C50597 * C50821) *
               C50660 * C50913 -
           ((C37273 + C37272 + C37271) * C50597 * C50821 +
            (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 + C2271 * C279 +
             C2501 + C2501 + C2265 * C299 + C2269 * C278 + C2502 + C2502 +
             C2264 * C298) *
                C50597 * C33790) *
               C50660 * C50914 +
           ((C2269 * C279 + C2503 + C2503 + C2264 * C299 + C2271 * C1079 +
             C2504 + C2504 + C2265 * C1087 + C2273 * C2481 + C2505 + C2505 +
             C2266 * C2487) *
                C50597 * C33790 +
            (C2269 * C1540 + C4208 + C4208 + C2264 * C1548 + C2271 * C3263 +
             C4207 + C4207 + C2265 * C3269 + C2273 * C4197 + C4206 + C4206 +
             C2266 * C4201) *
                C50597 * C50821) *
               C50660 * C1306) *
              C50860 +
          (((C2535 + C2534 + C2533) * C50597 * C33790 +
            (C3294 + C3295 + C3296) * C50597 * C50821) *
               C50660 * C50914 -
           ((C2736 + C2737 + C2738) * C50597 * C50821 +
            (C2329 + C2328 + C2327) * C50597 * C33790) *
               C50660 * C50913 -
           ((C2273 * C4196 + C4203 + C4203 + C2266 * C4200 + C2271 * C3264 +
             C4204 + C4204 + C2265 * C3270 + C2269 * C1539 + C4205 + C4205 +
             C2264 * C1547) *
                C50597 * C50821 +
            (C2538 + C2537 + C2536) * C50597 * C33790) *
               C50660 * C1306) *
              C50631)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50741 * C133) * C17149 +
             C168 * C17150 + C169 * C17151) *
                C33790 +
            (C34085 + C34086 + C34087) * C50821) *
               C50660 * C50913 -
           ((C34588 + C34587 + C34586) * C50821 +
            (C341 * C17151 + C342 * C17150 +
             (C117 * C278 + C315 + C315 + C50741 * C298) * C17149) *
                C33790) *
               C50660 * C50914 +
           (((C117 * C279 + C316 + C316 + C50741 * C299) * C17149 +
             C343 * C17150 + C344 * C17151) *
                C33790 +
            (C7002 * C17149 + C5366 * C17150 + C11029 * C17151) * C50821) *
               C50660 * C1306) *
              C50860 +
          (((C342 * C17149 + C341 * C17150 + C340 * C17151) * C33790 +
            (C34589 + C34590 + C34591) * C50821) *
               C50660 * C50914 -
           ((C34093 + C34092 + C34091) * C50821 +
            (C170 * C17151 + C169 * C17150 + C168 * C17149) * C33790) *
               C50660 * C50913 -
           (((C117 * C1537 + C1550 + C1550 + C50741 * C1545) * C17151 +
             C11029 * C17150 + C5366 * C17149) *
                C50821 +
            (C345 * C17151 + C344 * C17150 + C343 * C17149) * C33790) *
               C50660 * C1306) *
              C50631)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50741 * C133) * C50597 * C39148 +
            C39349 * C39149 + C39350 * C39150 + C39351 * C39151) *
               C50660 * C50913 -
           (C39688 * C39151 + C39687 * C39150 + C39686 * C39149 +
            (C117 * C278 + C315 + C315 + C50741 * C298) * C50597 * C39148) *
               C50660 * C50914 +
           ((C117 * C279 + C316 + C316 + C50741 * C299) * C50597 * C39148 +
            C7002 * C50597 * C39149 + C7003 * C50597 * C39150 +
            (C117 * C4600 + C6997 + C6997 + C50741 * C4608) * C50597 * C39151) *
               C50660 * C1306) *
              C50860 +
          ((C342 * C50597 * C39148 + C39689 * C39149 + C39690 * C39150 +
            C39691 * C39151) *
               C50660 * C50914 -
           (C39355 * C39151 + C39354 * C39150 + C39353 * C39149 +
            C168 * C50597 * C39148) *
               C50660 * C50913 -
           ((C117 * C4598 + C6996 + C6996 + C50741 * C4606) * C50597 * C39151 +
            C5367 * C50597 * C39150 + C5366 * C50597 * C39149 +
            C343 * C50597 * C39148) *
               C50660 * C1306) *
              C50631)) /
            (p * q * std::sqrt(p + q));
    d2ee[186] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 +
             C2277 + C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
             C2266 * C299) *
                C50597 * C33790 +
            (C36767 + C36768 + C36769) * C50597 * C50821) *
               C50869 -
           ((C36770 + C36771 + C36772) * C50597 * C50821 +
            (C36769 + C36768 + C36767) * C50597 * C33790) *
               C50724) *
              C50913 +
          (((C37271 + C37272 + C37273) * C50597 * C33790 +
            (C37682 + C37683 + C37684) * C50597 * C50821) *
               C50724 -
           ((C37273 + C37272 + C37271) * C50597 * C50821 +
            (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 + C2271 * C279 +
             C2501 + C2501 + C2265 * C299 + C2269 * C278 + C2502 + C2502 +
             C2264 * C298) *
                C50597 * C33790) *
               C50869) *
              C50914 +
          (((C2269 * C279 + C2503 + C2503 + C2264 * C299 + C2271 * C1079 +
             C2504 + C2504 + C2265 * C1087 + C2273 * C2481 + C2505 + C2505 +
             C2266 * C2487) *
                C50597 * C33790 +
            (C38186 + C38187 + C38188) * C50597 * C50821) *
               C50869 -
           ((C2273 * C20864 + C38177 + C38177 + C2266 * C20866 + C2271 * C3699 +
             C38178 + C38178 + C2265 * C3703 + C2269 * C2684 + C38179 + C38179 +
             C2264 * C2690) *
                C50597 * C50821 +
            (C38188 + C38187 + C38186) * C50597 * C33790) *
               C50724) *
              C1306) *
         C50625) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50741 * C133) * C17149 +
             C168 * C17150 + C169 * C17151) *
                C33790 +
            (C34085 + C34086 + C34087) * C50821) *
               C50869 -
           ((C34088 + C34089 + C34090) * C50821 +
            (C34087 + C34086 + C34085) * C33790) *
               C50724) *
              C50913 +
          (((C34586 + C34587 + C34588) * C33790 +
            (C34982 + C34983 + C34984) * C50821) *
               C50724 -
           ((C34588 + C34587 + C34586) * C50821 +
            (C341 * C17151 + C342 * C17150 +
             (C117 * C278 + C315 + C315 + C50741 * C298) * C17149) *
                C33790) *
               C50869) *
              C50914 +
          ((((C117 * C279 + C316 + C316 + C50741 * C299) * C17149 +
             C343 * C17150 + C344 * C17151) *
                C33790 +
            (C35471 + C35472 + C35473) * C50821) *
               C50869 -
           (((C117 * C2686 + C5358 + C5358 + C50741 * C2692) * C17151 +
             C5367 * C17150 + C7003 * C17149) *
                C50821 +
            (C35473 + C35472 + C35471) * C33790) *
               C50724) *
              C1306) *
         C50625) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50741 * C133) * C50597 * C39148 +
            C39349 * C39149 + C39350 * C39150 + C39351 * C39151) *
               C50869 -
           (C39352 * C39151 + C39351 * C39150 + C39350 * C39149 +
            C39349 * C39148) *
               C50724) *
              C50913 +
          ((C39686 * C39148 + C39687 * C39149 + C39688 * C39150 +
            C39961 * C39151) *
               C50724 -
           (C39688 * C39151 + C39687 * C39150 + C39686 * C39149 +
            (C117 * C278 + C315 + C315 + C50741 * C298) * C50597 * C39148) *
               C50869) *
              C50914 +
          (((C117 * C279 + C316 + C316 + C50741 * C299) * C50597 * C39148 +
            C40288 * C39149 + C40289 * C39150 + C40296 * C39151) *
               C50869 -
           ((C117 * C23155 + C40292 + C40292 + C50741 * C23157) * C50597 *
                C39151 +
            C40296 * C39150 + C40289 * C39149 + C40288 * C39148) *
               C50724) *
              C1306) *
         C50625) /
            (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C141 + C141 + C50741 * C133) * C17149 +
                 C168 * C17150 + C169 * C17151) *
                    C33790 +
                (C34085 + C34086 + C34087) * C50821) *
                   C50660 * C1000 -
               ((C34588 + C34587 + C34586) * C50821 +
                (C341 * C17151 + C342 * C17150 +
                 (C117 * C278 + C315 + C315 + C50741 * C298) * C17149) *
                    C33790) *
                   C50660 * C50696) *
                  C1002 +
              (((C342 * C17149 + C341 * C17150 + C340 * C17151) * C33790 +
                (C34589 + C34590 + C34591) * C50821) *
                   C50660 * C50696 -
               ((C34093 + C34092 + C34091) * C50821 +
                (C170 * C17151 + C169 * C17150 + C168 * C17149) * C33790) *
                   C50660 * C1000) *
                  C1003 +
              (((C169 * C17149 + C170 * C17150 + C171 * C17151) * C33790 +
                (C34389 + C34390 + C34391) * C50821) *
                   C50660 * C1000 -
               (((C117 * C871 + C893 + C893 + C50741 * C881) * C17151 +
                 C902 * C17150 + C901 * C17149) *
                    C50821 +
                (C628 * C17151 + C340 * C17150 + C341 * C17149) * C33790) *
                   C50660 * C50696) *
                  C1004) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C141 + C141 + C50741 * C133) * C17149 +
                C168 * C17150 + C169 * C17151) *
                   C33790 +
               (C34085 + C34086 + C34087) * C50821) *
                  C50660 * C1071 -
              ((C34588 + C34587 + C34586) * C50821 +
               (C341 * C17151 + C342 * C17150 +
                (C117 * C278 + C315 + C315 + C50741 * C298) * C17149) *
                   C33790) *
                  C50660 * C1072 +
              (((C117 * C279 + C316 + C316 + C50741 * C299) * C17149 +
                C343 * C17150 + C344 * C17151) *
                   C33790 +
               (C7002 * C17149 + C5366 * C17150 + C11029 * C17151) * C50821) *
                  C50660 * C1073 -
              (((C117 * C3265 + C11927 + C11927 + C50741 * C3271) * C17151 +
                (C117 * C3264 + C6340 + C6340 + C50741 * C3270) * C17150 +
                (C117 * C3263 + C6341 + C6341 + C50741 * C3269) * C17149) *
                   C50821 +
               ((C117 * C1077 + C1090 + C1090 + C50741 * C1085) * C17151 +
                (C117 * C1078 + C1091 + C1091 + C50741 * C1086) * C17150 +
                (C117 * C1079 + C1092 + C1092 + C50741 * C1087) * C17149) *
                   C33790) *
                  C50660 * C1074) *
             C50625) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50741 * C133) * C17149 +
             C168 * C17150 + C169 * C17151) *
                C33790 +
            (C34085 + C34086 + C34087) * C50821) *
               C443 -
           ((C34088 + C34089 + C34090) * C50821 +
            (C34087 + C34086 + C34085) * C33790) *
               C444 +
           ((C34090 + C34089 + C34088) * C33790 +
            (C5560 * C17149 + C5559 * C17150 + C5562 * C17151) * C50821) *
               C445) *
              C1000 +
          (((C34586 + C34587 + C34588) * C33790 +
            (C34982 + C34983 + C34984) * C50821) *
               C444 -
           ((C34588 + C34587 + C34586) * C50821 +
            (C341 * C17151 + C342 * C17150 +
             (C117 * C278 + C315 + C315 + C50741 * C298) * C17149) *
                C33790) *
               C443 -
           (((C117 * C6064 + C6082 + C6082 + C50741 * C6066) * C17151 +
             C6091 * C17150 + C6502 * C17149) *
                C50821 +
            (C34984 + C34983 + C34982) * C33790) *
               C445) *
              C50696) *
         C50625) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 +
             C2277 + C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
             C2266 * C299) *
                C50597 * C33790 +
            (C36767 + C36768 + C36769) * C50597 * C50821) *
               C50660 * C1000 -
           ((C37273 + C37272 + C37271) * C50597 * C50821 +
            (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 + C2271 * C279 +
             C2501 + C2501 + C2265 * C299 + C2269 * C278 + C2502 + C2502 +
             C2264 * C298) *
                C50597 * C33790) *
               C50660 * C50696) *
              C1002 +
          (((C2535 + C2534 + C2533) * C50597 * C33790 +
            (C3294 + C3295 + C3296) * C50597 * C50821) *
               C50660 * C50696 -
           ((C2736 + C2737 + C2738) * C50597 * C50821 +
            (C2329 + C2328 + C2327) * C50597 * C33790) *
               C50660 * C1000) *
              C1003 +
          (((C2332 + C2331 + C2330) * C50597 * C33790 +
            (C3067 + C3068 + C3069) * C50597 * C50821) *
               C50660 * C1000 -
           ((C2273 * C3265 + C3285 + C3285 + C2266 * C3271 + C2271 * C1538 +
             C3286 + C3286 + C2265 * C1546 + C2269 * C869 + C3287 + C3287 +
             C2264 * C879) *
                C50597 * C50821 +
            (C2905 + C2904 + C2903) * C50597 * C33790) *
               C50660 * C50696) *
              C1004)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 + C2277 +
            C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
            C2266 * C299) *
               C50597 * C33790 +
           (C36767 + C36768 + C36769) * C50597 * C50821) *
              C50660 * C1071 -
          ((C37273 + C37272 + C37271) * C50597 * C50821 +
           (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 + C2271 * C279 +
            C2501 + C2501 + C2265 * C299 + C2269 * C278 + C2502 + C2502 +
            C2264 * C298) *
               C50597 * C33790) *
              C50660 * C1072 +
          ((C2269 * C279 + C2503 + C2503 + C2264 * C299 + C2271 * C1079 +
            C2504 + C2504 + C2265 * C1087 + C2273 * C2481 + C2505 + C2505 +
            C2266 * C2487) *
               C50597 * C33790 +
           (C2269 * C1540 + C4208 + C4208 + C2264 * C1548 + C2271 * C3263 +
            C4207 + C4207 + C2265 * C3269 + C2273 * C4197 + C4206 + C4206 +
            C2266 * C4201) *
               C50597 * C50821) *
              C50660 * C1073 -
          ((C2273 * C21197 + C37518 + C37518 + C2266 * C21199 + C2271 * C4197 +
            C37519 + C37519 + C2265 * C4201 + C2269 * C3263 + C37520 + C37520 +
            C2264 * C3269) *
               C50597 * C50821 +
           (C2273 * C3541 + C3550 + C3550 + C2266 * C3545 + C2271 * C2481 +
            C3551 + C3551 + C2265 * C2487 + C2269 * C1079 + C3552 + C3552 +
            C2264 * C1087) *
               C50597 * C33790) *
              C50660 * C1074) *
         C50625) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 +
             C2277 + C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
             C2266 * C299) *
                C50597 * C33790 +
            (C36767 + C36768 + C36769) * C50597 * C50821) *
               C443 -
           ((C36770 + C36771 + C36772) * C50597 * C50821 +
            (C36769 + C36768 + C36767) * C50597 * C33790) *
               C444 +
           ((C36772 + C36771 + C36770) * C50597 * C33790 +
            (C2269 * C1824 + C4616 + C4616 + C2264 * C1832 + C2271 * C4601 +
             C4615 + C4615 + C2265 * C4609 + C2273 * C4600 + C4614 + C4614 +
             C2266 * C4608) *
                C50597 * C50821) *
               C445) *
              C1000 +
          (((C37271 + C37272 + C37273) * C50597 * C33790 +
            (C37682 + C37683 + C37684) * C50597 * C50821) *
               C444 -
           ((C37273 + C37272 + C37271) * C50597 * C50821 +
            (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 + C2271 * C279 +
             C2501 + C2501 + C2265 * C299 + C2269 * C278 + C2502 + C2502 +
             C2264 * C298) *
                C50597 * C33790) *
               C443 -
           ((C2273 * C21466 + C37673 + C37673 + C2266 * C21468 + C2271 * C4600 +
             C37674 + C37674 + C2265 * C4608 + C2269 * C4601 + C37675 + C37675 +
             C2264 * C4609) *
                C50597 * C50821 +
            (C37684 + C37683 + C37682) * C50597 * C33790) *
               C445) *
              C50696) *
         C50625) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50741 * C133) * C50597 * C39148 +
            C39349 * C39149 + C39350 * C39150 + C39351 * C39151) *
               C50660 * C1000 -
           (C39688 * C39151 + C39687 * C39150 + C39686 * C39149 +
            (C117 * C278 + C315 + C315 + C50741 * C298) * C50597 * C39148) *
               C50660 * C50696) *
              C1002 +
          ((C342 * C50597 * C39148 + C39689 * C39149 + C39690 * C39150 +
            C39691 * C39151) *
               C50660 * C50696 -
           (C39355 * C39151 + C39354 * C39150 + C39353 * C39149 +
            C168 * C50597 * C39148) *
               C50660 * C1000) *
              C1003 +
          ((C169 * C50597 * C39148 + C39553 * C39149 + C39554 * C39150 +
            C39555 * C39151) *
               C50660 * C1000 -
           ((C117 * C6064 + C6082 + C6082 + C50741 * C6066) * C50597 * C39151 +
            C5720 * C50597 * C39150 + C901 * C50597 * C39149 +
            C341 * C50597 * C39148) *
               C50660 * C50696) *
              C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50741 * C133) * C50597 * C39148 +
           C39349 * C39149 + C39350 * C39150 + C39351 * C39151) *
              C50660 * C1071 -
          (C39688 * C39151 + C39687 * C39150 + C39686 * C39149 +
           (C117 * C278 + C315 + C315 + C50741 * C298) * C50597 * C39148) *
              C50660 * C1072 +
          ((C117 * C279 + C316 + C316 + C50741 * C299) * C50597 * C39148 +
           C7002 * C50597 * C39149 + C7003 * C50597 * C39150 +
           (C117 * C4600 + C6997 + C6997 + C50741 * C4608) * C50597 * C39151) *
              C50660 * C1073 -
          ((C117 * C21466 + C39856 + C39856 + C50741 * C21468) * C50597 *
               C39151 +
           (C117 * C3699 + C6339 + C6339 + C50741 * C3703) * C50597 * C39150 +
           (C117 * C3263 + C6341 + C6341 + C50741 * C3269) * C50597 * C39149 +
           (C117 * C1079 + C1092 + C1092 + C50741 * C1087) * C50597 * C39148) *
              C50660 * C1074) *
         C50625) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50741 * C133) * C50597 * C39148 +
            C39349 * C39149 + C39350 * C39150 + C39351 * C39151) *
               C443 -
           (C39352 * C39151 + C39351 * C39150 + C39350 * C39149 +
            C39349 * C39148) *
               C444 +
           (C39350 * C39148 + C39351 * C39149 + C39352 * C39150 +
            (C117 * C7396 + C7407 + C7407 + C50741 * C7400) * C50597 * C39151) *
               C445) *
              C1000 +
          ((C39686 * C39148 + C39687 * C39149 + C39688 * C39150 +
            C39961 * C39151) *
               C444 -
           (C39688 * C39151 + C39687 * C39150 + C39686 * C39149 +
            (C117 * C278 + C315 + C315 + C50741 * C298) * C50597 * C39148) *
               C443 -
           ((C117 * C24070 + C39957 + C39957 + C50741 * C24072) * C50597 *
                C39151 +
            C39961 * C39150 + C39688 * C39149 + C39687 * C39148) *
               C445) *
              C50696) *
         C50625) /
            (p * q * std::sqrt(p + q));
    d2ee[188] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 +
              C2277 + C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
              C2266 * C299) *
                 C50597 * C33790 +
             (C36767 + C36768 + C36769) * C50597 * C50821) *
                C50869 -
            ((C36770 + C36771 + C36772) * C50597 * C50821 +
             (C36769 + C36768 + C36767) * C50597 * C33790) *
                C50724) *
               C1000 +
           (((C37271 + C37272 + C37273) * C50597 * C33790 +
             (C37682 + C37683 + C37684) * C50597 * C50821) *
                C50724 -
            ((C37273 + C37272 + C37271) * C50597 * C50821 +
             (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 + C2271 * C279 +
              C2501 + C2501 + C2265 * C299 + C2269 * C278 + C2502 + C2502 +
              C2264 * C298) *
                 C50597 * C33790) *
                C50869) *
               C50696) *
              C50860 +
          ((((C2738 + C2737 + C2736) * C50597 * C33790 +
             (C2739 + C2740 + C2741) * C50597 * C50821) *
                C50724 -
            ((C2736 + C2737 + C2738) * C50597 * C50821 +
             (C2329 + C2328 + C2327) * C50597 * C33790) *
                C50869) *
               C1000 +
           (((C2535 + C2534 + C2533) * C50597 * C33790 +
             (C3294 + C3295 + C3296) * C50597 * C50821) *
                C50869 -
            ((C2273 * C3698 + C3705 + C3705 + C2266 * C3702 + C2271 * C2685 +
              C3706 + C3706 + C2265 * C2691 + C2269 * C1192 + C3707 + C3707 +
              C2264 * C1200) *
                 C50597 * C50821 +
             (C3296 + C3295 + C3294) * C50597 * C33790) *
                C50724) *
               C50696) *
              C50631)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50741 * C133) * C17149 +
              C168 * C17150 + C169 * C17151) *
                 C33790 +
             (C34085 + C34086 + C34087) * C50821) *
                C50869 -
            ((C34088 + C34089 + C34090) * C50821 +
             (C34087 + C34086 + C34085) * C33790) *
                C50724) *
               C1000 +
           (((C34586 + C34587 + C34588) * C33790 +
             (C34982 + C34983 + C34984) * C50821) *
                C50724 -
            ((C34588 + C34587 + C34586) * C50821 +
             (C341 * C17151 + C342 * C17150 +
              (C117 * C278 + C315 + C315 + C50741 * C298) * C17149) *
                 C33790) *
                C50869) *
               C50696) *
              C50860 +
          ((((C34091 + C34092 + C34093) * C33790 +
             (C34094 + C34095 + C34096) * C50821) *
                C50724 -
            ((C34093 + C34092 + C34091) * C50821 +
             (C170 * C17151 + C169 * C17150 + C168 * C17149) * C33790) *
                C50869) *
               C1000 +
           (((C342 * C17149 + C341 * C17150 + C340 * C17151) * C33790 +
             (C34589 + C34590 + C34591) * C50821) *
                C50869 -
            (((C117 * C1190 + C1203 + C1203 + C50741 * C1198) * C17151 +
              C5720 * C17150 + C5365 * C17149) *
                 C50821 +
             (C34591 + C34590 + C34589) * C33790) *
                C50724) *
               C50696) *
              C50631)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50741 * C133) * C50597 * C39148 +
             C39349 * C39149 + C39350 * C39150 + C39351 * C39151) *
                C50869 -
            (C39352 * C39151 + C39351 * C39150 + C39350 * C39149 +
             C39349 * C39148) *
                C50724) *
               C1000 +
           ((C39686 * C39148 + C39687 * C39149 + C39688 * C39150 +
             C39961 * C39151) *
                C50724 -
            (C39688 * C39151 + C39687 * C39150 + C39686 * C39149 +
             (C117 * C278 + C315 + C315 + C50741 * C298) * C50597 * C39148) *
                C50869) *
               C50696) *
              C50860 +
          (((C39353 * C39148 + C39354 * C39149 + C39355 * C39150 +
             C39356 * C39151) *
                C50724 -
            (C39355 * C39151 + C39354 * C39150 + C39353 * C39149 +
             C168 * C50597 * C39148) *
                C50869) *
               C1000 +
           ((C342 * C50597 * C39148 + C39689 * C39149 + C39690 * C39150 +
             C39691 * C39151) *
                C50869 -
            ((C117 * C6487 + C6498 + C6498 + C50741 * C6491) * C50597 * C39151 +
             C39691 * C39150 + C39690 * C39149 + C39689 * C39148) *
                C50724) *
               C50696) *
              C50631)) /
            (p * q * std::sqrt(p + q));
    d2ee[189] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50741 * C133) * C17149 +
            C168 * C17150 + C169 * C17151) *
               C33790 +
           (C34085 + C34086 + C34087) * C50821) *
              C50660 * C1071 -
          ((C34588 + C34587 + C34586) * C50821 +
           (C341 * C17151 + C342 * C17150 +
            (C117 * C278 + C315 + C315 + C50741 * C298) * C17149) *
               C33790) *
              C50660 * C1072 +
          (((C117 * C279 + C316 + C316 + C50741 * C299) * C17149 +
            C343 * C17150 + C344 * C17151) *
               C33790 +
           (C7002 * C17149 + C5366 * C17150 + C11029 * C17151) * C50821) *
              C50660 * C1073 -
          (((C117 * C3265 + C11927 + C11927 + C50741 * C3271) * C17151 +
            (C117 * C3264 + C6340 + C6340 + C50741 * C3270) * C17150 +
            (C117 * C3263 + C6341 + C6341 + C50741 * C3269) * C17149) *
               C50821 +
           ((C117 * C1077 + C1090 + C1090 + C50741 * C1085) * C17151 +
            (C117 * C1078 + C1091 + C1091 + C50741 * C1086) * C17150 +
            (C117 * C1079 + C1092 + C1092 + C50741 * C1087) * C17149) *
               C33790) *
              C50660 * C1074) *
         C50625) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50741 * C133) * C17149 +
             C168 * C17150 + C169 * C17151) *
                C33790 +
            (C34085 + C34086 + C34087) * C50821) *
               C50660 * C1000 -
           ((C34588 + C34587 + C34586) * C50821 +
            (C341 * C17151 + C342 * C17150 +
             (C117 * C278 + C315 + C315 + C50741 * C298) * C17149) *
                C33790) *
               C50660 * C50696) *
              C1002 +
          (((C342 * C17149 + C341 * C17150 + C340 * C17151) * C33790 +
            (C34589 + C34590 + C34591) * C50821) *
               C50660 * C50696 -
           ((C34093 + C34092 + C34091) * C50821 +
            (C170 * C17151 + C169 * C17150 + C168 * C17149) * C33790) *
               C50660 * C1000) *
              C1003 +
          (((C169 * C17149 + C170 * C17150 + C171 * C17151) * C33790 +
            (C34389 + C34390 + C34391) * C50821) *
               C50660 * C1000 -
           (((C117 * C871 + C893 + C893 + C50741 * C881) * C17151 +
             C902 * C17150 + C901 * C17149) *
                C50821 +
            (C628 * C17151 + C340 * C17150 + C341 * C17149) * C33790) *
               C50660 * C50696) *
              C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 +
             C2277 + C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
             C2266 * C299) *
                C50597 * C33790 +
            (C36767 + C36768 + C36769) * C50597 * C50821) *
               C50660 * C1000 -
           ((C37273 + C37272 + C37271) * C50597 * C50821 +
            (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 + C2271 * C279 +
             C2501 + C2501 + C2265 * C299 + C2269 * C278 + C2502 + C2502 +
             C2264 * C298) *
                C50597 * C33790) *
               C50660 * C50696) *
              C1002 +
          (((C2535 + C2534 + C2533) * C50597 * C33790 +
            (C3294 + C3295 + C3296) * C50597 * C50821) *
               C50660 * C50696 -
           ((C2736 + C2737 + C2738) * C50597 * C50821 +
            (C2329 + C2328 + C2327) * C50597 * C33790) *
               C50660 * C1000) *
              C1003 +
          (((C2332 + C2331 + C2330) * C50597 * C33790 +
            (C3067 + C3068 + C3069) * C50597 * C50821) *
               C50660 * C1000 -
           ((C2273 * C3265 + C3285 + C3285 + C2266 * C3271 + C2271 * C1538 +
             C3286 + C3286 + C2265 * C1546 + C2269 * C869 + C3287 + C3287 +
             C2264 * C879) *
                C50597 * C50821 +
            (C2905 + C2904 + C2903) * C50597 * C33790) *
               C50660 * C50696) *
              C1004)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 + C2277 +
            C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
            C2266 * C299) *
               C50597 * C33790 +
           (C36767 + C36768 + C36769) * C50597 * C50821) *
              C50660 * C1071 -
          ((C37273 + C37272 + C37271) * C50597 * C50821 +
           (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 + C2271 * C279 +
            C2501 + C2501 + C2265 * C299 + C2269 * C278 + C2502 + C2502 +
            C2264 * C298) *
               C50597 * C33790) *
              C50660 * C1072 +
          ((C2269 * C279 + C2503 + C2503 + C2264 * C299 + C2271 * C1079 +
            C2504 + C2504 + C2265 * C1087 + C2273 * C2481 + C2505 + C2505 +
            C2266 * C2487) *
               C50597 * C33790 +
           (C2269 * C1540 + C4208 + C4208 + C2264 * C1548 + C2271 * C3263 +
            C4207 + C4207 + C2265 * C3269 + C2273 * C4197 + C4206 + C4206 +
            C2266 * C4201) *
               C50597 * C50821) *
              C50660 * C1073 -
          ((C2273 * C21197 + C37518 + C37518 + C2266 * C21199 + C2271 * C4197 +
            C37519 + C37519 + C2265 * C4201 + C2269 * C3263 + C37520 + C37520 +
            C2264 * C3269) *
               C50597 * C50821 +
           (C2273 * C3541 + C3550 + C3550 + C2266 * C3545 + C2271 * C2481 +
            C3551 + C3551 + C2265 * C2487 + C2269 * C1079 + C3552 + C3552 +
            C2264 * C1087) *
               C50597 * C33790) *
              C50660 * C1074) *
         C50625) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50741 * C133) * C50597 * C39148 +
            C39349 * C39149 + C39350 * C39150 + C39351 * C39151) *
               C50660 * C1000 -
           (C39688 * C39151 + C39687 * C39150 + C39686 * C39149 +
            (C117 * C278 + C315 + C315 + C50741 * C298) * C50597 * C39148) *
               C50660 * C50696) *
              C1002 +
          ((C342 * C50597 * C39148 + C39689 * C39149 + C39690 * C39150 +
            C39691 * C39151) *
               C50660 * C50696 -
           (C39355 * C39151 + C39354 * C39150 + C39353 * C39149 +
            C168 * C50597 * C39148) *
               C50660 * C1000) *
              C1003 +
          ((C169 * C50597 * C39148 + C39553 * C39149 + C39554 * C39150 +
            C39555 * C39151) *
               C50660 * C1000 -
           ((C117 * C6064 + C6082 + C6082 + C50741 * C6066) * C50597 * C39151 +
            C5720 * C50597 * C39150 + C901 * C50597 * C39149 +
            C341 * C50597 * C39148) *
               C50660 * C50696) *
              C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50741 * C133) * C50597 * C39148 +
           C39349 * C39149 + C39350 * C39150 + C39351 * C39151) *
              C50660 * C1071 -
          (C39688 * C39151 + C39687 * C39150 + C39686 * C39149 +
           (C117 * C278 + C315 + C315 + C50741 * C298) * C50597 * C39148) *
              C50660 * C1072 +
          ((C117 * C279 + C316 + C316 + C50741 * C299) * C50597 * C39148 +
           C7002 * C50597 * C39149 + C7003 * C50597 * C39150 +
           (C117 * C4600 + C6997 + C6997 + C50741 * C4608) * C50597 * C39151) *
              C50660 * C1073 -
          ((C117 * C21466 + C39856 + C39856 + C50741 * C21468) * C50597 *
               C39151 +
           (C117 * C3699 + C6339 + C6339 + C50741 * C3703) * C50597 * C39150 +
           (C117 * C3263 + C6341 + C6341 + C50741 * C3269) * C50597 * C39149 +
           (C117 * C1079 + C1092 + C1092 + C50741 * C1087) * C50597 * C39148) *
              C50660 * C1074) *
         C50625) /
            (p * q * std::sqrt(p + q));
    d2ee[190] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 +
              C2277 + C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
              C2266 * C299) *
                 C50597 * C33790 +
             (C36767 + C36768 + C36769) * C50597 * C50821) *
                C1651 -
            ((C36770 + C36771 + C36772) * C50597 * C50821 +
             (C36769 + C36768 + C36767) * C50597 * C33790) *
                C50724) *
               C50868 +
           (((C37271 + C37272 + C37273) * C50597 * C33790 +
             (C37682 + C37683 + C37684) * C50597 * C50821) *
                C50724 -
            ((C37273 + C37272 + C37271) * C50597 * C50821 +
             (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 + C2271 * C279 +
              C2501 + C2501 + C2265 * C299 + C2269 * C278 + C2502 + C2502 +
              C2264 * C298) *
                 C50597 * C33790) *
                C1651) *
               C50696) *
              C50860 +
          ((((C2738 + C2737 + C2736) * C50597 * C33790 +
             (C2739 + C2740 + C2741) * C50597 * C50821) *
                C50724 -
            ((C2736 + C2737 + C2738) * C50597 * C50821 +
             (C2329 + C2328 + C2327) * C50597 * C33790) *
                C1651) *
               C50868 +
           (((C2535 + C2534 + C2533) * C50597 * C33790 +
             (C3294 + C3295 + C3296) * C50597 * C50821) *
                C1651 -
            ((C2273 * C3698 + C3705 + C3705 + C2266 * C3702 + C2271 * C2685 +
              C3706 + C3706 + C2265 * C2691 + C2269 * C1192 + C3707 + C3707 +
              C2264 * C1200) *
                 C50597 * C50821 +
             (C3296 + C3295 + C3294) * C50597 * C33790) *
                C50724) *
               C50696) *
              C50631)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50741 * C133) * C17149 +
              C168 * C17150 + C169 * C17151) *
                 C33790 +
             (C34085 + C34086 + C34087) * C50821) *
                C1651 -
            ((C34088 + C34089 + C34090) * C50821 +
             (C34087 + C34086 + C34085) * C33790) *
                C50724) *
               C50868 +
           (((C34586 + C34587 + C34588) * C33790 +
             (C34982 + C34983 + C34984) * C50821) *
                C50724 -
            ((C34588 + C34587 + C34586) * C50821 +
             (C341 * C17151 + C342 * C17150 +
              (C117 * C278 + C315 + C315 + C50741 * C298) * C17149) *
                 C33790) *
                C1651) *
               C50696) *
              C50860 +
          ((((C34091 + C34092 + C34093) * C33790 +
             (C34094 + C34095 + C34096) * C50821) *
                C50724 -
            ((C34093 + C34092 + C34091) * C50821 +
             (C170 * C17151 + C169 * C17150 + C168 * C17149) * C33790) *
                C1651) *
               C50868 +
           (((C342 * C17149 + C341 * C17150 + C340 * C17151) * C33790 +
             (C34589 + C34590 + C34591) * C50821) *
                C1651 -
            (((C117 * C1190 + C1203 + C1203 + C50741 * C1198) * C17151 +
              C5720 * C17150 + C5365 * C17149) *
                 C50821 +
             (C34591 + C34590 + C34589) * C33790) *
                C50724) *
               C50696) *
              C50631)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50741 * C133) * C50597 * C39148 +
             C39349 * C39149 + C39350 * C39150 + C39351 * C39151) *
                C1651 -
            (C39352 * C39151 + C39351 * C39150 + C39350 * C39149 +
             C39349 * C39148) *
                C50724) *
               C50868 +
           ((C39686 * C39148 + C39687 * C39149 + C39688 * C39150 +
             C39961 * C39151) *
                C50724 -
            (C39688 * C39151 + C39687 * C39150 + C39686 * C39149 +
             (C117 * C278 + C315 + C315 + C50741 * C298) * C50597 * C39148) *
                C1651) *
               C50696) *
              C50860 +
          (((C39353 * C39148 + C39354 * C39149 + C39355 * C39150 +
             C39356 * C39151) *
                C50724 -
            (C39355 * C39151 + C39354 * C39150 + C39353 * C39149 +
             C168 * C50597 * C39148) *
                C1651) *
               C50868 +
           ((C342 * C50597 * C39148 + C39689 * C39149 + C39690 * C39150 +
             C39691 * C39151) *
                C1651 -
            ((C117 * C6487 + C6498 + C6498 + C50741 * C6491) * C50597 * C39151 +
             C39691 * C39150 + C39690 * C39149 + C39689 * C39148) *
                C50724) *
               C50696) *
              C50631)) /
            (p * q * std::sqrt(p + q));
    d2ee[191] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 +
             C2277 + C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
             C2266 * C299) *
                C50597 * C33790 +
            (C36767 + C36768 + C36769) * C50597 * C50821) *
               C50915 -
           ((C36770 + C36771 + C36772) * C50597 * C50821 +
            (C36769 + C36768 + C36767) * C50597 * C33790) *
               C50916 +
           ((C36772 + C36771 + C36770) * C50597 * C33790 +
            (C38594 + C38595 + C38596) * C50597 * C50821) *
               C2067) *
              C50868 +
          (((C37271 + C37272 + C37273) * C50597 * C33790 +
            (C37682 + C37683 + C37684) * C50597 * C50821) *
               C50916 -
           ((C37273 + C37272 + C37271) * C50597 * C50821 +
            (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 + C2271 * C279 +
             C2501 + C2501 + C2265 * C299 + C2269 * C278 + C2502 + C2502 +
             C2264 * C298) *
                C50597 * C33790) *
               C50915 -
           ((C2273 * C21466 + C37673 + C37673 + C2266 * C21468 + C2271 * C4600 +
             C37674 + C37674 + C2265 * C4608 + C2269 * C4601 + C37675 + C37675 +
             C2264 * C4609) *
                C50597 * C50821 +
            (C37684 + C37683 + C37682) * C50597 * C33790) *
               C2067) *
              C50696) *
         C50625) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50741 * C133) * C17149 +
             C168 * C17150 + C169 * C17151) *
                C33790 +
            (C34085 + C34086 + C34087) * C50821) *
               C50915 -
           ((C34088 + C34089 + C34090) * C50821 +
            (C34087 + C34086 + C34085) * C33790) *
               C50916 +
           ((C34090 + C34089 + C34088) * C33790 +
            (C35864 + C35865 + C35866) * C50821) *
               C2067) *
              C50868 +
          (((C34586 + C34587 + C34588) * C33790 +
            (C34982 + C34983 + C34984) * C50821) *
               C50916 -
           ((C34588 + C34587 + C34586) * C50821 +
            (C341 * C17151 + C342 * C17150 +
             (C117 * C278 + C315 + C315 + C50741 * C298) * C17149) *
                C33790) *
               C50915 -
           (((C117 * C6064 + C6082 + C6082 + C50741 * C6066) * C17151 +
             C6091 * C17150 + C6502 * C17149) *
                C50821 +
            (C34984 + C34983 + C34982) * C33790) *
               C2067) *
              C50696) *
         C50625) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50741 * C133) * C50597 * C39148 +
            C39349 * C39149 + C39350 * C39150 + C39351 * C39151) *
               C50915 -
           (C39352 * C39151 + C39351 * C39150 + C39350 * C39149 +
            C39349 * C39148) *
               C50916 +
           (C39350 * C39148 + C39351 * C39149 + C39352 * C39150 +
            C40568 * C39151) *
               C2067) *
              C50868 +
          ((C39686 * C39148 + C39687 * C39149 + C39688 * C39150 +
            C39961 * C39151) *
               C50916 -
           (C39688 * C39151 + C39687 * C39150 + C39686 * C39149 +
            (C117 * C278 + C315 + C315 + C50741 * C298) * C50597 * C39148) *
               C50915 -
           ((C117 * C24070 + C39957 + C39957 + C50741 * C24072) * C50597 *
                C39151 +
            C39961 * C39150 + C39688 * C39149 + C39687 * C39148) *
               C2067) *
              C50696) *
         C50625) /
            (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C141 + C141 + C50741 * C133) * C17149 +
                 C168 * C17150 + C169 * C17151) *
                    C33790 +
                (C34085 + C34086 + C34087) * C50821) *
                   C1651 -
               ((C34088 + C34089 + C34090) * C50821 +
                (C34087 + C34086 + C34085) * C33790) *
                   C50724) *
                  C50644 * C1002 +
              (((C34091 + C34092 + C34093) * C33790 +
                (C34094 + C34095 + C34096) * C50821) *
                   C50724 -
               ((C34093 + C34092 + C34091) * C50821 +
                (C170 * C17151 + C169 * C17150 + C168 * C17149) * C33790) *
                   C1651) *
                  C50644 * C1003 +
              (((C169 * C17149 + C170 * C17150 + C171 * C17151) * C33790 +
                (C34389 + C34390 + C34391) * C50821) *
                   C1651 -
               (((C117 * C455 + C498 + C498 + C50741 * C475) * C17151 +
                 C516 * C17150 + C515 * C17149) *
                    C50821 +
                (C34391 + C34390 + C34389) * C33790) *
                   C50724) *
                  C50644 * C1004) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C141 + C141 + C50741 * C133) * C17149 +
                 C168 * C17150 + C169 * C17151) *
                    C33790 +
                (C34085 + C34086 + C34087) * C50821) *
                   C1651 -
               ((C34088 + C34089 + C34090) * C50821 +
                (C34087 + C34086 + C34085) * C33790) *
                   C50724) *
                  C270 +
              (((C34586 + C34587 + C34588) * C33790 +
                (C34982 + C34983 + C34984) * C50821) *
                   C50724 -
               ((C34588 + C34587 + C34586) * C50821 +
                (C341 * C17151 + C342 * C17150 +
                 (C117 * C278 + C315 + C315 + C50741 * C298) * C17149) *
                    C33790) *
                   C1651) *
                  C271 +
              ((((C117 * C279 + C316 + C316 + C50741 * C299) * C17149 +
                 C343 * C17150 + C344 * C17151) *
                    C33790 +
                (C35471 + C35472 + C35473) * C50821) *
                   C1651 -
               (((C117 * C2686 + C5358 + C5358 + C50741 * C2692) * C17151 +
                 C5367 * C17150 + C7003 * C17149) *
                    C50821 +
                (C35473 + C35472 + C35471) * C33790) *
                   C50724) *
                  C272) *
             C50625) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50741 * C133) * C17149 +
            C168 * C17150 + C169 * C17151) *
               C33790 +
           (C34085 + C34086 + C34087) * C50821) *
              C1817 -
          ((C34088 + C34089 + C34090) * C50821 +
           (C34087 + C34086 + C34085) * C33790) *
              C1818 +
          ((C34090 + C34089 + C34088) * C33790 +
           (C35864 + C35865 + C35866) * C50821) *
              C1819 -
          (((C117 * C5515 + C5543 + C5543 + C50741 * C5521) * C17151 +
            C5561 * C17150 + C7410 * C17149) *
               C50821 +
           (C35866 + C35865 + C35864) * C33790) *
              C1820) *
         C50644 * C50625) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 +
             C2277 + C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
             C2266 * C299) *
                C50597 * C33790 +
            (C36767 + C36768 + C36769) * C50597 * C50821) *
               C1651 -
           ((C36770 + C36771 + C36772) * C50597 * C50821 +
            (C36769 + C36768 + C36767) * C50597 * C33790) *
               C50724) *
              C50644 * C1002 +
          (((C2738 + C2737 + C2736) * C50597 * C33790 +
            (C2739 + C2740 + C2741) * C50597 * C50821) *
               C50724 -
           ((C2736 + C2737 + C2738) * C50597 * C50821 +
            (C2329 + C2328 + C2327) * C50597 * C33790) *
               C1651) *
              C50644 * C1003 +
          (((C2332 + C2331 + C2330) * C50597 * C33790 +
            (C3067 + C3068 + C3069) * C50597 * C50821) *
               C1651 -
           ((C2273 * C2686 + C2721 + C2721 + C2266 * C2692 + C2271 * C1191 +
             C2722 + C2722 + C2265 * C1199 + C2269 * C452 + C2723 + C2723 +
             C2264 * C472) *
                C50597 * C50821 +
            (C3069 + C3068 + C3067) * C50597 * C33790) *
               C50724) *
              C50644 * C1004)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 +
             C2277 + C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
             C2266 * C299) *
                C50597 * C33790 +
            (C36767 + C36768 + C36769) * C50597 * C50821) *
               C1651 -
           ((C36770 + C36771 + C36772) * C50597 * C50821 +
            (C36769 + C36768 + C36767) * C50597 * C33790) *
               C50724) *
              C270 +
          (((C37271 + C37272 + C37273) * C50597 * C33790 +
            (C37682 + C37683 + C37684) * C50597 * C50821) *
               C50724 -
           ((C37273 + C37272 + C37271) * C50597 * C50821 +
            (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 + C2271 * C279 +
             C2501 + C2501 + C2265 * C299 + C2269 * C278 + C2502 + C2502 +
             C2264 * C298) *
                C50597 * C33790) *
               C1651) *
              C271 +
          (((C2269 * C279 + C2503 + C2503 + C2264 * C299 + C2271 * C1079 +
             C2504 + C2504 + C2265 * C1087 + C2273 * C2481 + C2505 + C2505 +
             C2266 * C2487) *
                C50597 * C33790 +
            (C38186 + C38187 + C38188) * C50597 * C50821) *
               C1651 -
           ((C2273 * C20864 + C38177 + C38177 + C2266 * C20866 + C2271 * C3699 +
             C38178 + C38178 + C2265 * C3703 + C2269 * C2684 + C38179 + C38179 +
             C2264 * C2690) *
                C50597 * C50821 +
            (C38188 + C38187 + C38186) * C50597 * C33790) *
               C50724) *
              C272) *
         C50625) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 + C2277 +
            C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
            C2266 * C299) *
               C50597 * C33790 +
           (C36767 + C36768 + C36769) * C50597 * C50821) *
              C1817 -
          ((C36770 + C36771 + C36772) * C50597 * C50821 +
           (C36769 + C36768 + C36767) * C50597 * C33790) *
              C1818 +
          ((C36772 + C36771 + C36770) * C50597 * C33790 +
           (C38594 + C38595 + C38596) * C50597 * C50821) *
              C1819 -
          ((C2273 * C23155 + C38585 + C38585 + C2266 * C23157 + C2271 * C6488 +
            C38586 + C38586 + C2265 * C6492 + C2269 * C5513 + C38587 + C38587 +
            C2264 * C5519) *
               C50597 * C50821 +
           (C38596 + C38595 + C38594) * C50597 * C33790) *
              C1820) *
         C50644 * C50625) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50741 * C133) * C50597 * C39148 +
            C39349 * C39149 + C39350 * C39150 + C39351 * C39151) *
               C1651 -
           (C39352 * C39151 + C39351 * C39150 + C39350 * C39149 +
            C39349 * C39148) *
               C50724) *
              C50644 * C1002 +
          ((C39353 * C39148 + C39354 * C39149 + C39355 * C39150 +
            C39356 * C39151) *
               C50724 -
           (C39355 * C39151 + C39354 * C39150 + C39353 * C39149 +
            C168 * C50597 * C39148) *
               C1651) *
              C50644 * C1003 +
          ((C169 * C50597 * C39148 + C39553 * C39149 + C39554 * C39150 +
            C39555 * C39151) *
               C1651 -
           ((C117 * C5515 + C5543 + C5543 + C50741 * C5521) * C50597 * C39151 +
            C39555 * C39150 + C39554 * C39149 + C39553 * C39148) *
               C50724) *
              C50644 * C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50741 * C133) * C50597 * C39148 +
            C39349 * C39149 + C39350 * C39150 + C39351 * C39151) *
               C1651 -
           (C39352 * C39151 + C39351 * C39150 + C39350 * C39149 +
            C39349 * C39148) *
               C50724) *
              C270 +
          ((C39686 * C39148 + C39687 * C39149 + C39688 * C39150 +
            C39961 * C39151) *
               C50724 -
           (C39688 * C39151 + C39687 * C39150 + C39686 * C39149 +
            (C117 * C278 + C315 + C315 + C50741 * C298) * C50597 * C39148) *
               C1651) *
              C271 +
          (((C117 * C279 + C316 + C316 + C50741 * C299) * C50597 * C39148 +
            C40288 * C39149 + C40289 * C39150 + C40296 * C39151) *
               C1651 -
           ((C117 * C23155 + C40292 + C40292 + C50741 * C23157) * C50597 *
                C39151 +
            C40296 * C39150 + C40289 * C39149 + C40288 * C39148) *
               C50724) *
              C272) *
         C50625) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50741 * C133) * C50597 * C39148 +
           C39349 * C39149 + C39350 * C39150 + C39351 * C39151) *
              C1817 -
          (C39352 * C39151 + C39351 * C39150 + C39350 * C39149 +
           C39349 * C39148) *
              C1818 +
          (C39350 * C39148 + C39351 * C39149 + C39352 * C39150 +
           C40568 * C39151) *
              C1819 -
          ((C117 * C40558 + C40564 + C40564 + C50741 * C40560) * C50597 *
               C39151 +
           C40568 * C39150 + C39352 * C39149 + C39351 * C39148) *
              C1820) *
         C50644 * C50625) /
            (p * q * std::sqrt(p + q));
    d2ee[193] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 +
             C2277 + C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
             C2266 * C299) *
                C50597 * C33790 +
            (C36767 + C36768 + C36769) * C50597 * C50821) *
               C50915 -
           ((C36770 + C36771 + C36772) * C50597 * C50821 +
            (C36769 + C36768 + C36767) * C50597 * C33790) *
               C50916 +
           ((C36772 + C36771 + C36770) * C50597 * C33790 +
            (C38594 + C38595 + C38596) * C50597 * C50821) *
               C2067) *
              C50644 * C50860 +
          (((C2738 + C2737 + C2736) * C50597 * C33790 +
            (C2739 + C2740 + C2741) * C50597 * C50821) *
               C50916 -
           ((C2736 + C2737 + C2738) * C50597 * C50821 +
            (C2329 + C2328 + C2327) * C50597 * C33790) *
               C50915 -
           ((C2273 * C4598 + C4611 + C4611 + C2266 * C4606 + C2271 * C4599 +
             C4612 + C4612 + C2265 * C4607 + C2269 * C1823 + C4613 + C4613 +
             C2264 * C1831) *
                C50597 * C50821 +
            (C2741 + C2740 + C2739) * C50597 * C33790) *
               C2067) *
              C50644 * C50631)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50741 * C133) * C17149 +
             C168 * C17150 + C169 * C17151) *
                C33790 +
            (C34085 + C34086 + C34087) * C50821) *
               C50915 -
           ((C34088 + C34089 + C34090) * C50821 +
            (C34087 + C34086 + C34085) * C33790) *
               C50916 +
           ((C34090 + C34089 + C34088) * C33790 +
            (C35864 + C35865 + C35866) * C50821) *
               C2067) *
              C50644 * C50860 +
          (((C34091 + C34092 + C34093) * C33790 +
            (C34094 + C34095 + C34096) * C50821) *
               C50916 -
           ((C34093 + C34092 + C34091) * C50821 +
            (C170 * C17151 + C169 * C17150 + C168 * C17149) * C33790) *
               C50915 -
           (((C117 * C1821 + C1834 + C1834 + C50741 * C1829) * C17151 +
             C5562 * C17150 + C5559 * C17149) *
                C50821 +
            (C34096 + C34095 + C34094) * C33790) *
               C2067) *
              C50644 * C50631)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50741 * C133) * C50597 * C39148 +
            C39349 * C39149 + C39350 * C39150 + C39351 * C39151) *
               C50915 -
           (C39352 * C39151 + C39351 * C39150 + C39350 * C39149 +
            C39349 * C39148) *
               C50916 +
           (C39350 * C39148 + C39351 * C39149 + C39352 * C39150 +
            C40568 * C39151) *
               C2067) *
              C50644 * C50860 +
          ((C39353 * C39148 + C39354 * C39149 + C39355 * C39150 +
            C39356 * C39151) *
               C50916 -
           (C39355 * C39151 + C39354 * C39150 + C39353 * C39149 +
            C168 * C50597 * C39148) *
               C50915 -
           ((C117 * C7395 + C7406 + C7406 + C50741 * C7399) * C50597 * C39151 +
            C39356 * C39150 + C39355 * C39149 + C39354 * C39148) *
               C2067) *
              C50644 * C50631)) /
            (p * q * std::sqrt(p + q));
    d2ee[194] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50741 * C133) * C17149 +
             C168 * C17150 + C169 * C17151) *
                C33790 +
            (C34085 + C34086 + C34087) * C50821) *
               C1651 -
           ((C34088 + C34089 + C34090) * C50821 +
            (C34087 + C34086 + C34085) * C33790) *
               C50724) *
              C270 +
          (((C34586 + C34587 + C34588) * C33790 +
            (C34982 + C34983 + C34984) * C50821) *
               C50724 -
           ((C34588 + C34587 + C34586) * C50821 +
            (C341 * C17151 + C342 * C17150 +
             (C117 * C278 + C315 + C315 + C50741 * C298) * C17149) *
                C33790) *
               C1651) *
              C271 +
          ((((C117 * C279 + C316 + C316 + C50741 * C299) * C17149 +
             C343 * C17150 + C344 * C17151) *
                C33790 +
            (C35471 + C35472 + C35473) * C50821) *
               C1651 -
           (((C117 * C2686 + C5358 + C5358 + C50741 * C2692) * C17151 +
             C5367 * C17150 + C7003 * C17149) *
                C50821 +
            (C35473 + C35472 + C35471) * C33790) *
               C50724) *
              C272) *
         C50625) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50741 * C133) * C17149 +
             C168 * C17150 + C169 * C17151) *
                C33790 +
            (C34085 + C34086 + C34087) * C50821) *
               C1651 -
           ((C34088 + C34089 + C34090) * C50821 +
            (C34087 + C34086 + C34085) * C33790) *
               C50724) *
              C50644 * C1002 +
          (((C34091 + C34092 + C34093) * C33790 +
            (C34094 + C34095 + C34096) * C50821) *
               C50724 -
           ((C34093 + C34092 + C34091) * C50821 +
            (C170 * C17151 + C169 * C17150 + C168 * C17149) * C33790) *
               C1651) *
              C50644 * C1003 +
          (((C169 * C17149 + C170 * C17150 + C171 * C17151) * C33790 +
            (C34389 + C34390 + C34391) * C50821) *
               C1651 -
           (((C117 * C455 + C498 + C498 + C50741 * C475) * C17151 +
             C516 * C17150 + C515 * C17149) *
                C50821 +
            (C34391 + C34390 + C34389) * C33790) *
               C50724) *
              C50644 * C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 +
             C2277 + C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
             C2266 * C299) *
                C50597 * C33790 +
            (C36767 + C36768 + C36769) * C50597 * C50821) *
               C1651 -
           ((C36770 + C36771 + C36772) * C50597 * C50821 +
            (C36769 + C36768 + C36767) * C50597 * C33790) *
               C50724) *
              C50644 * C1002 +
          (((C2738 + C2737 + C2736) * C50597 * C33790 +
            (C2739 + C2740 + C2741) * C50597 * C50821) *
               C50724 -
           ((C2736 + C2737 + C2738) * C50597 * C50821 +
            (C2329 + C2328 + C2327) * C50597 * C33790) *
               C1651) *
              C50644 * C1003 +
          (((C2332 + C2331 + C2330) * C50597 * C33790 +
            (C3067 + C3068 + C3069) * C50597 * C50821) *
               C1651 -
           ((C2273 * C2686 + C2721 + C2721 + C2266 * C2692 + C2271 * C1191 +
             C2722 + C2722 + C2265 * C1199 + C2269 * C452 + C2723 + C2723 +
             C2264 * C472) *
                C50597 * C50821 +
            (C3069 + C3068 + C3067) * C50597 * C33790) *
               C50724) *
              C50644 * C1004)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 +
             C2277 + C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
             C2266 * C299) *
                C50597 * C33790 +
            (C36767 + C36768 + C36769) * C50597 * C50821) *
               C1651 -
           ((C36770 + C36771 + C36772) * C50597 * C50821 +
            (C36769 + C36768 + C36767) * C50597 * C33790) *
               C50724) *
              C270 +
          (((C37271 + C37272 + C37273) * C50597 * C33790 +
            (C37682 + C37683 + C37684) * C50597 * C50821) *
               C50724 -
           ((C37273 + C37272 + C37271) * C50597 * C50821 +
            (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 + C2271 * C279 +
             C2501 + C2501 + C2265 * C299 + C2269 * C278 + C2502 + C2502 +
             C2264 * C298) *
                C50597 * C33790) *
               C1651) *
              C271 +
          (((C2269 * C279 + C2503 + C2503 + C2264 * C299 + C2271 * C1079 +
             C2504 + C2504 + C2265 * C1087 + C2273 * C2481 + C2505 + C2505 +
             C2266 * C2487) *
                C50597 * C33790 +
            (C38186 + C38187 + C38188) * C50597 * C50821) *
               C1651 -
           ((C2273 * C20864 + C38177 + C38177 + C2266 * C20866 + C2271 * C3699 +
             C38178 + C38178 + C2265 * C3703 + C2269 * C2684 + C38179 + C38179 +
             C2264 * C2690) *
                C50597 * C50821 +
            (C38188 + C38187 + C38186) * C50597 * C33790) *
               C50724) *
              C272) *
         C50625) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50741 * C133) * C50597 * C39148 +
            C39349 * C39149 + C39350 * C39150 + C39351 * C39151) *
               C1651 -
           (C39352 * C39151 + C39351 * C39150 + C39350 * C39149 +
            C39349 * C39148) *
               C50724) *
              C50644 * C1002 +
          ((C39353 * C39148 + C39354 * C39149 + C39355 * C39150 +
            C39356 * C39151) *
               C50724 -
           (C39355 * C39151 + C39354 * C39150 + C39353 * C39149 +
            C168 * C50597 * C39148) *
               C1651) *
              C50644 * C1003 +
          ((C169 * C50597 * C39148 + C39553 * C39149 + C39554 * C39150 +
            C39555 * C39151) *
               C1651 -
           ((C117 * C5515 + C5543 + C5543 + C50741 * C5521) * C50597 * C39151 +
            C39555 * C39150 + C39554 * C39149 + C39553 * C39148) *
               C50724) *
              C50644 * C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50741 * C133) * C50597 * C39148 +
            C39349 * C39149 + C39350 * C39150 + C39351 * C39151) *
               C1651 -
           (C39352 * C39151 + C39351 * C39150 + C39350 * C39149 +
            C39349 * C39148) *
               C50724) *
              C270 +
          ((C39686 * C39148 + C39687 * C39149 + C39688 * C39150 +
            C39961 * C39151) *
               C50724 -
           (C39688 * C39151 + C39687 * C39150 + C39686 * C39149 +
            (C117 * C278 + C315 + C315 + C50741 * C298) * C50597 * C39148) *
               C1651) *
              C271 +
          (((C117 * C279 + C316 + C316 + C50741 * C299) * C50597 * C39148 +
            C40288 * C39149 + C40289 * C39150 + C40296 * C39151) *
               C1651 -
           ((C117 * C23155 + C40292 + C40292 + C50741 * C23157) * C50597 *
                C39151 +
            C40296 * C39150 + C40289 * C39149 + C40288 * C39148) *
               C50724) *
              C272) *
         C50625) /
            (p * q * std::sqrt(p + q));
    d2ee[195] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50741 * C133) * C50853 +
                      C168 * C50602) *
                         C50919 +
                     (C44780 + C44781) * C50920 + C44792 * C44486) *
                        C50660 * C50868 -
                    ((C5365 * C50602 + C6090 * C50853) * C44486 +
                     (C900 * C50602 + C6089 * C50853) * C50920 +
                     (C342 * C50602 +
                      (C117 * C278 + C315 + C315 + C50741 * C298) * C50853) *
                         C50919) *
                        C50660 * C50696) *
                       C50911 +
                   (((C342 * C50853 + C341 * C50602) * C50919 +
                     (C900 * C50853 + C901 * C50602) * C50920 +
                     (C5365 * C50853 + C5720 * C50602) * C44486) *
                        C50660 * C50696 -
                    (C44793 * C44486 + (C44787 + C44786) * C50920 +
                     (C169 * C50602 + C168 * C50853) * C50919) *
                        C50660 * C50868) *
                       C50912 +
                   (((C169 * C50853 + C170 * C50602) * C50919 +
                     (C512 * C50853 + C511 * C50602) * C50920 +
                     (C515 * C50853 + C516 * C50602) * C44486) *
                        C50660 * C50868 -
                    (((C117 * C1190 + C1203 + C1203 + C50741 * C1198) * C50602 +
                      C5720 * C50853) *
                         C44486 +
                     (C902 * C50602 + C901 * C50853) * C50920 +
                     (C340 * C50602 + C341 * C50853) * C50919) *
                        C50660 * C50696) *
                       C618)) /
                 (p * q * std::sqrt(p + q));
    d2ee[196] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50741 * C133) * C50853 +
              C168 * C50602) *
                 C50919 +
             (C44780 + C44781) * C50920 + C44792 * C44486) *
                C50869 -
            ((C44784 + C44785) * C44486 + (C44783 + C44782) * C50920 +
             (C44781 + C44780) * C50919) *
                C50724) *
               C50868 +
           (((C45284 + C45285) * C50919 + (C45286 + C45287) * C50920 +
             (C6502 * C50853 + C6091 * C50602) * C44486) *
                C50724 -
            ((C45287 + C45286) * C44486 + (C45285 + C45284) * C50920 +
             (C342 * C50602 +
              (C117 * C278 + C315 + C315 + C50741 * C298) * C50853) *
                 C50919) *
                C50869) *
               C50696) *
              C273 +
          ((((C44786 + C44787) * C50919 + (C44788 + C44789) * C50920 +
             (C44790 + C44791) * C44486) *
                C50724 -
            (C44793 * C44486 + (C44787 + C44786) * C50920 +
             (C169 * C50602 + C168 * C50853) * C50919) *
                C50869) *
               C50868 +
           (((C342 * C50853 + C341 * C50602) * C50919 +
             (C45288 + C45289) * C50920 + (C45290 + C45291) * C44486) *
                C50869 -
            (((C117 * C6064 + C6082 + C6082 + C50741 * C6066) * C50602 +
              C6091 * C50853) *
                 C44486 +
             (C45291 + C45290) * C50920 + (C45289 + C45288) * C50919) *
                C50724) *
               C50696) *
              C50631)) /
        (p * q * std::sqrt(p + q));
    d2ee[197] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50741 * C133) * C50853 +
                      C168 * C50602) *
                         C50919 +
                     (C5557 * C50853 + C513 * C50602) * C50920 +
                     (C5558 * C50853 + C514 * C50602) * C44486) *
                        C50660 * C270 -
                    ((C5365 * C50602 + C6090 * C50853) * C44486 +
                     (C900 * C50602 + C6089 * C50853) * C50920 +
                     (C342 * C50602 +
                      (C117 * C278 + C315 + C315 + C50741 * C298) * C50853) *
                         C50919) *
                        C50660 * C271 +
                    (((C117 * C279 + C316 + C316 + C50741 * C299) * C50853 +
                      C343 * C50602) *
                         C50919 +
                     (C7002 * C50853 + C5366 * C50602) * C50920 +
                     (C7003 * C50853 + C5367 * C50602) * C44486) *
                        C50660 * C272) *
                       C273 +
                   (((C342 * C50853 + C341 * C50602) * C50919 +
                     (C900 * C50853 + C901 * C50602) * C50920 +
                     (C5365 * C50853 + C5720 * C50602) * C44486) *
                        C50660 * C271 -
                    ((C515 * C50602 + C514 * C50853) * C44486 +
                     (C512 * C50602 + C513 * C50853) * C50920 +
                     (C169 * C50602 + C168 * C50853) * C50919) *
                        C50660 * C270 -
                    (((C117 * C2686 + C5358 + C5358 + C50741 * C2692) * C50602 +
                      C5367 * C50853) *
                         C44486 +
                     (C11029 * C50602 + C5366 * C50853) * C50920 +
                     (C344 * C50602 + C343 * C50853) * C50919) *
                        C50660 * C272) *
                       C50631)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C117 * C119 + C141 + C141 + C50741 * C133) * C50853 +
                     C168 * C50602) *
                        C50919 +
                    (C5557 * C50853 + C513 * C50602) * C50920 +
                    (C5558 * C50853 + C514 * C50602) * C44486) *
                       C50660 * C50644 * C113 -
                   ((C515 * C50602 + C514 * C50853) * C44486 +
                    (C512 * C50602 + C513 * C50853) * C50920 +
                    (C169 * C50602 + C168 * C50853) * C50919) *
                       C50660 * C50644 * C114 +
                   ((C169 * C50853 + C170 * C50602) * C50919 +
                    (C512 * C50853 + C511 * C50602) * C50920 +
                    (C515 * C50853 + C516 * C50602) * C44486) *
                       C50660 * C50644 * C115 -
                   (((C117 * C455 + C498 + C498 + C50741 * C475) * C50602 +
                     C516 * C50853) *
                        C44486 +
                    (C737 * C50602 + C511 * C50853) * C50920 +
                    (C171 * C50602 + C170 * C50853) * C50919) *
                       C50660 * C50644 * C116)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50741 * C133) * C50853 +
                      C168 * C50602) *
                         C50919 +
                     (C44780 + C44781) * C50920 + C44792 * C44486) *
                        C443 -
                    ((C44784 + C44785) * C44486 + (C44783 + C44782) * C50920 +
                     (C44781 + C44780) * C50919) *
                        C444 +
                    (C44792 * C50919 + (C44785 + C44784) * C50920 +
                     (C7410 * C50853 + C5561 * C50602) * C44486) *
                        C445) *
                       C50644 * C273 +
                   (((C44786 + C44787) * C50919 + (C44788 + C44789) * C50920 +
                     (C44790 + C44791) * C44486) *
                        C444 -
                    (C44793 * C44486 + (C44787 + C44786) * C50920 +
                     (C169 * C50602 + C168 * C50853) * C50919) *
                        C443 -
                    (((C117 * C5515 + C5543 + C5543 + C50741 * C5521) * C50602 +
                      C5561 * C50853) *
                         C44486 +
                     (C44791 + C44790) * C50920 + C44793 * C50919) *
                        C445) *
                       C50644 * C50631)) /
                     (p * q * std::sqrt(p + q));
    d2ee[198] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50741 * C133) * C50853 +
                      C168 * C50602) *
                         C50919 +
                     (C44780 + C44781) * C50920 + C44792 * C44486) *
                        C50869 -
                    ((C44784 + C44785) * C44486 + (C44783 + C44782) * C50920 +
                     (C44781 + C44780) * C50919) *
                        C50724) *
                       C50644 * C50911 +
                   (((C44786 + C44787) * C50919 + (C44788 + C44789) * C50920 +
                     (C44790 + C44791) * C44486) *
                        C50724 -
                    (C44793 * C44486 + (C44787 + C44786) * C50920 +
                     (C169 * C50602 + C168 * C50853) * C50919) *
                        C50869) *
                       C50644 * C50912 +
                   (((C169 * C50853 + C170 * C50602) * C50919 +
                     (C45086 + C45087) * C50920 + (C45088 + C45089) * C44486) *
                        C50869 -
                    (((C117 * C1821 + C1834 + C1834 + C50741 * C1829) * C50602 +
                      C5562 * C50853) *
                         C44486 +
                     (C45089 + C45088) * C50920 + (C45087 + C45086) * C50919) *
                        C50724) *
                       C50644 * C618)) /
                 (p * q * std::sqrt(p + q));
    d2ee[199] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C117 * C119 + C141 + C141 + C50741 * C133) * C50853 +
                     C168 * C50602) *
                        C50919 +
                    (C5557 * C50853 + C513 * C50602) * C50920 +
                    (C5558 * C50853 + C514 * C50602) * C44486) *
                       C50660 * C50644 * C113 -
                   ((C515 * C50602 + C514 * C50853) * C44486 +
                    (C512 * C50602 + C513 * C50853) * C50920 +
                    (C169 * C50602 + C168 * C50853) * C50919) *
                       C50660 * C50644 * C114 +
                   ((C169 * C50853 + C170 * C50602) * C50919 +
                    (C512 * C50853 + C511 * C50602) * C50920 +
                    (C515 * C50853 + C516 * C50602) * C44486) *
                       C50660 * C50644 * C115 -
                   (((C117 * C455 + C498 + C498 + C50741 * C475) * C50602 +
                     C516 * C50853) *
                        C44486 +
                    (C737 * C50602 + C511 * C50853) * C50920 +
                    (C171 * C50602 + C170 * C50853) * C50919) *
                       C50660 * C50644 * C116)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50741 * C133) * C50853 +
                      C168 * C50602) *
                         C50919 +
                     (C5557 * C50853 + C513 * C50602) * C50920 +
                     (C5558 * C50853 + C514 * C50602) * C44486) *
                        C50660 * C270 -
                    ((C5365 * C50602 + C6090 * C50853) * C44486 +
                     (C900 * C50602 + C6089 * C50853) * C50920 +
                     (C342 * C50602 +
                      (C117 * C278 + C315 + C315 + C50741 * C298) * C50853) *
                         C50919) *
                        C50660 * C271 +
                    (((C117 * C279 + C316 + C316 + C50741 * C299) * C50853 +
                      C343 * C50602) *
                         C50919 +
                     (C7002 * C50853 + C5366 * C50602) * C50920 +
                     (C7003 * C50853 + C5367 * C50602) * C44486) *
                        C50660 * C272) *
                       C273 +
                   (((C342 * C50853 + C341 * C50602) * C50919 +
                     (C900 * C50853 + C901 * C50602) * C50920 +
                     (C5365 * C50853 + C5720 * C50602) * C44486) *
                        C50660 * C271 -
                    ((C515 * C50602 + C514 * C50853) * C44486 +
                     (C512 * C50602 + C513 * C50853) * C50920 +
                     (C169 * C50602 + C168 * C50853) * C50919) *
                        C50660 * C270 -
                    (((C117 * C2686 + C5358 + C5358 + C50741 * C2692) * C50602 +
                      C5367 * C50853) *
                         C44486 +
                     (C11029 * C50602 + C5366 * C50853) * C50920 +
                     (C344 * C50602 + C343 * C50853) * C50919) *
                        C50660 * C272) *
                       C50631)) /
                     (p * q * std::sqrt(p + q));
    d2ee[200] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50741 * C133) * C50853 +
                      C168 * C50602) *
                         C50919 +
                     (C44780 + C44781) * C50920 + C44792 * C44486) *
                        C50660 * C50913 -
                    (C45684 * C44486 + (C45285 + C45284) * C50920 +
                     (C342 * C50602 +
                      (C117 * C278 + C315 + C315 + C50741 * C298) * C50853) *
                         C50919) *
                        C50660 * C50914 +
                    (((C117 * C279 + C316 + C316 + C50741 * C299) * C50853 +
                      C343 * C50602) *
                         C50919 +
                     (C7002 * C50853 + C5366 * C50602) * C50920 +
                     (C7003 * C50853 + C5367 * C50602) * C44486) *
                        C50660 * C1306) *
                       C50860 +
                   (((C342 * C50853 + C341 * C50602) * C50919 +
                     (C45288 + C45289) * C50920 + (C45290 + C45291) * C44486) *
                        C50660 * C50914 -
                    (C44793 * C44486 + (C44787 + C44786) * C50920 +
                     (C169 * C50602 + C168 * C50853) * C50919) *
                        C50660 * C50913 -
                    (((C117 * C2686 + C5358 + C5358 + C50741 * C2692) * C50602 +
                      C5367 * C50853) *
                         C44486 +
                     (C11029 * C50602 + C5366 * C50853) * C50920 +
                     (C344 * C50602 + C343 * C50853) * C50919) *
                        C50660 * C1306) *
                       C50631)) /
                 (p * q * std::sqrt(p + q));
    d2ee[201] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50741 * C133) * C50853 +
                      C168 * C50602) *
                         C50919 +
                     (C44780 + C44781) * C50920 + C44792 * C44486) *
                        C50869 -
                    ((C44784 + C44785) * C44486 + (C44783 + C44782) * C50920 +
                     (C44781 + C44780) * C50919) *
                        C50724) *
                       C50913 +
                   (((C45284 + C45285) * C50919 + (C45286 + C45287) * C50920 +
                     (C45682 + C45683) * C44486) *
                        C50724 -
                    (C45684 * C44486 + (C45285 + C45284) * C50920 +
                     (C342 * C50602 +
                      (C117 * C278 + C315 + C315 + C50741 * C298) * C50853) *
                         C50919) *
                        C50869) *
                       C50914 +
                   ((((C117 * C279 + C316 + C316 + C50741 * C299) * C50853 +
                      C343 * C50602) *
                         C50919 +
                     (C46171 + C46172) * C50920 + (C46173 + C46174) * C44486) *
                        C50869 -
                    (((C117 * C4598 + C6996 + C6996 + C50741 * C4606) * C50602 +
                      C40295 * C50853) *
                         C44486 +
                     (C46174 + C46173) * C50920 + (C46172 + C46171) * C50919) *
                        C50724) *
                       C1306) *
                  C50625) /
                 (p * q * std::sqrt(p + q));
    d2ee[202] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C117 * C119 + C141 + C141 + C50741 * C133) * C50853 +
                     C168 * C50602) *
                        C50919 +
                    (C44780 + C44781) * C50920 + C44792 * C44486) *
                       C50660 * C1071 -
                   ((C45287 + C45286) * C44486 + (C45285 + C45284) * C50920 +
                    (C342 * C50602 +
                     (C117 * C278 + C315 + C315 + C50741 * C298) * C50853) *
                        C50919) *
                       C50660 * C1072 +
                   (((C117 * C279 + C316 + C316 + C50741 * C299) * C50853 +
                     C343 * C50602) *
                        C50919 +
                    (C7002 * C50853 + C5366 * C50602) * C50920 +
                    (C7003 * C50853 + C5367 * C50602) * C44486) *
                       C50660 * C1073 -
                   (((C117 * C3698 + C6338 + C6338 + C50741 * C3702) * C50602 +
                     (C117 * C3699 + C6339 + C6339 + C50741 * C3703) * C50853) *
                        C44486 +
                    ((C117 * C3264 + C6340 + C6340 + C50741 * C3270) * C50602 +
                     (C117 * C3263 + C6341 + C6341 + C50741 * C3269) * C50853) *
                        C50920 +
                    ((C117 * C1078 + C1091 + C1091 + C50741 * C1086) * C50602 +
                     (C117 * C1079 + C1092 + C1092 + C50741 * C1087) * C50853) *
                        C50919) *
                       C50660 * C1074) *
                  C50625) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50741 * C133) * C50853 +
                      C168 * C50602) *
                         C50919 +
                     (C44780 + C44781) * C50920 + C44792 * C44486) *
                        C50660 * C1000 -
                    ((C45287 + C45286) * C44486 + (C45285 + C45284) * C50920 +
                     (C342 * C50602 +
                      (C117 * C278 + C315 + C315 + C50741 * C298) * C50853) *
                         C50919) *
                        C50660 * C50696) *
                       C1002 +
                   (((C342 * C50853 + C341 * C50602) * C50919 +
                     (C45288 + C45289) * C50920 + (C45290 + C45291) * C44486) *
                        C50660 * C50696 -
                    (C44793 * C44486 + (C44787 + C44786) * C50920 +
                     (C169 * C50602 + C168 * C50853) * C50919) *
                        C50660 * C1000) *
                       C1003 +
                   (((C169 * C50853 + C170 * C50602) * C50919 +
                     (C45086 + C45087) * C50920 + (C45088 + C45089) * C44486) *
                        C50660 * C1000 -
                    (((C117 * C1190 + C1203 + C1203 + C50741 * C1198) * C50602 +
                      C5720 * C50853) *
                         C44486 +
                     (C902 * C50602 + C901 * C50853) * C50920 +
                     (C340 * C50602 + C341 * C50853) * C50919) *
                        C50660 * C50696) *
                       C1004)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50741 * C133) * C50853 +
                      C168 * C50602) *
                         C50919 +
                     (C44780 + C44781) * C50920 + C44792 * C44486) *
                        C443 -
                    ((C44784 + C44785) * C44486 + (C44783 + C44782) * C50920 +
                     (C44781 + C44780) * C50919) *
                        C444 +
                    (C44792 * C50919 + (C44785 + C44784) * C50920 +
                     (C7410 * C50853 + C5561 * C50602) * C44486) *
                        C445) *
                       C1000 +
                   (((C45284 + C45285) * C50919 + (C45286 + C45287) * C50920 +
                     (C45682 + C45683) * C44486) *
                        C444 -
                    (C45684 * C44486 + (C45285 + C45284) * C50920 +
                     (C342 * C50602 +
                      (C117 * C278 + C315 + C315 + C50741 * C298) * C50853) *
                         C50919) *
                        C443 -
                    (((C117 * C6487 + C6498 + C6498 + C50741 * C6491) * C50602 +
                      C39960 * C50853) *
                         C44486 +
                     (C45683 + C45682) * C50920 + C45684 * C50919) *
                        C445) *
                       C50696) *
                  C50625) /
                     (p * q * std::sqrt(p + q));
    d2ee[203] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50741 * C133) * C50853 +
              C168 * C50602) *
                 C50919 +
             (C44780 + C44781) * C50920 + C44792 * C44486) *
                C50869 -
            ((C44784 + C44785) * C44486 + (C44783 + C44782) * C50920 +
             (C44781 + C44780) * C50919) *
                C50724) *
               C1000 +
           (((C45284 + C45285) * C50919 + (C45286 + C45287) * C50920 +
             (C45682 + C45683) * C44486) *
                C50724 -
            (C45684 * C44486 + (C45285 + C45284) * C50920 +
             (C342 * C50602 +
              (C117 * C278 + C315 + C315 + C50741 * C298) * C50853) *
                 C50919) *
                C50869) *
               C50696) *
              C50860 +
          ((((C44786 + C44787) * C50919 + (C44788 + C44789) * C50920 +
             (C44790 + C44791) * C44486) *
                C50724 -
            (C44793 * C44486 + (C44787 + C44786) * C50920 +
             (C169 * C50602 + C168 * C50853) * C50919) *
                C50869) *
               C1000 +
           (((C342 * C50853 + C341 * C50602) * C50919 +
             (C45288 + C45289) * C50920 + (C45290 + C45291) * C44486) *
                C50869 -
            (((C117 * C6064 + C6082 + C6082 + C50741 * C6066) * C50602 +
              C6091 * C50853) *
                 C44486 +
             (C45291 + C45290) * C50920 + (C45289 + C45288) * C50919) *
                C50724) *
               C50696) *
              C50631)) /
        (p * q * std::sqrt(p + q));
    d2ee[204] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50741 * C133) * C50853 +
                      C168 * C50602) *
                         C50919 +
                     (C44780 + C44781) * C50920 + C44792 * C44486) *
                        C50660 * C1000 -
                    ((C45287 + C45286) * C44486 + (C45285 + C45284) * C50920 +
                     (C342 * C50602 +
                      (C117 * C278 + C315 + C315 + C50741 * C298) * C50853) *
                         C50919) *
                        C50660 * C50696) *
                       C1002 +
                   (((C342 * C50853 + C341 * C50602) * C50919 +
                     (C45288 + C45289) * C50920 + (C45290 + C45291) * C44486) *
                        C50660 * C50696 -
                    (C44793 * C44486 + (C44787 + C44786) * C50920 +
                     (C169 * C50602 + C168 * C50853) * C50919) *
                        C50660 * C1000) *
                       C1003 +
                   (((C169 * C50853 + C170 * C50602) * C50919 +
                     (C45086 + C45087) * C50920 + (C45088 + C45089) * C44486) *
                        C50660 * C1000 -
                    (((C117 * C1190 + C1203 + C1203 + C50741 * C1198) * C50602 +
                      C5720 * C50853) *
                         C44486 +
                     (C902 * C50602 + C901 * C50853) * C50920 +
                     (C340 * C50602 + C341 * C50853) * C50919) *
                        C50660 * C50696) *
                       C1004)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C117 * C119 + C141 + C141 + C50741 * C133) * C50853 +
                     C168 * C50602) *
                        C50919 +
                    (C44780 + C44781) * C50920 + C44792 * C44486) *
                       C50660 * C1071 -
                   ((C45287 + C45286) * C44486 + (C45285 + C45284) * C50920 +
                    (C342 * C50602 +
                     (C117 * C278 + C315 + C315 + C50741 * C298) * C50853) *
                        C50919) *
                       C50660 * C1072 +
                   (((C117 * C279 + C316 + C316 + C50741 * C299) * C50853 +
                     C343 * C50602) *
                        C50919 +
                    (C7002 * C50853 + C5366 * C50602) * C50920 +
                    (C7003 * C50853 + C5367 * C50602) * C44486) *
                       C50660 * C1073 -
                   (((C117 * C3698 + C6338 + C6338 + C50741 * C3702) * C50602 +
                     (C117 * C3699 + C6339 + C6339 + C50741 * C3703) * C50853) *
                        C44486 +
                    ((C117 * C3264 + C6340 + C6340 + C50741 * C3270) * C50602 +
                     (C117 * C3263 + C6341 + C6341 + C50741 * C3269) * C50853) *
                        C50920 +
                    ((C117 * C1078 + C1091 + C1091 + C50741 * C1086) * C50602 +
                     (C117 * C1079 + C1092 + C1092 + C50741 * C1087) * C50853) *
                        C50919) *
                       C50660 * C1074) *
                  C50625) /
                     (p * q * std::sqrt(p + q));
    d2ee[205] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50741 * C133) * C50853 +
              C168 * C50602) *
                 C50919 +
             (C44780 + C44781) * C50920 + C44792 * C44486) *
                C1651 -
            (C46565 * C44486 + (C44783 + C44782) * C50920 +
             (C44781 + C44780) * C50919) *
                C50724) *
               C50868 +
           (((C45284 + C45285) * C50919 + (C45286 + C45287) * C50920 +
             (C45682 + C45683) * C44486) *
                C50724 -
            (C45684 * C44486 + (C45285 + C45284) * C50920 +
             (C342 * C50602 +
              (C117 * C278 + C315 + C315 + C50741 * C298) * C50853) *
                 C50919) *
                C1651) *
               C50696) *
              C50860 +
          ((((C44786 + C44787) * C50919 + (C44788 + C44789) * C50920 +
             (C44790 + C44791) * C44486) *
                C50724 -
            (C44793 * C44486 + (C44787 + C44786) * C50920 +
             (C169 * C50602 + C168 * C50853) * C50919) *
                C1651) *
               C50868 +
           (((C342 * C50853 + C341 * C50602) * C50919 +
             (C45288 + C45289) * C50920 + (C45290 + C45291) * C44486) *
                C1651 -
            (((C117 * C6064 + C6082 + C6082 + C50741 * C6066) * C50602 +
              C6091 * C50853) *
                 C44486 +
             (C45291 + C45290) * C50920 + (C45289 + C45288) * C50919) *
                C50724) *
               C50696) *
              C50631)) /
        (p * q * std::sqrt(p + q));
    d2ee[206] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50741 * C133) * C50853 +
                      C168 * C50602) *
                         C50919 +
                     (C44780 + C44781) * C50920 + C44792 * C44486) *
                        C50915 -
                    (C46565 * C44486 + (C44783 + C44782) * C50920 +
                     (C44781 + C44780) * C50919) *
                        C50916 +
                    (C44792 * C50919 + (C44785 + C44784) * C50920 +
                     (C46566 + C46567) * C44486) *
                        C2067) *
                       C50868 +
                   (((C45284 + C45285) * C50919 + (C45286 + C45287) * C50920 +
                     (C45682 + C45683) * C44486) *
                        C50916 -
                    (C45684 * C44486 + (C45285 + C45284) * C50920 +
                     (C342 * C50602 +
                      (C117 * C278 + C315 + C315 + C50741 * C298) * C50853) *
                         C50919) *
                        C50915 -
                    (((C117 * C6487 + C6498 + C6498 + C50741 * C6491) * C50602 +
                      C39960 * C50853) *
                         C44486 +
                     (C45683 + C45682) * C50920 + C45684 * C50919) *
                        C2067) *
                       C50696) *
                  C50625) /
                 (p * q * std::sqrt(p + q));
    d2ee[207] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50741 * C133) * C50853 +
                      C168 * C50602) *
                         C50919 +
                     (C44780 + C44781) * C50920 + C44792 * C44486) *
                        C1651 -
                    ((C44784 + C44785) * C44486 + (C44783 + C44782) * C50920 +
                     (C44781 + C44780) * C50919) *
                        C50724) *
                       C270 +
                   (((C45284 + C45285) * C50919 + (C45286 + C45287) * C50920 +
                     (C45682 + C45683) * C44486) *
                        C50724 -
                    (C45684 * C44486 + (C45285 + C45284) * C50920 +
                     (C342 * C50602 +
                      (C117 * C278 + C315 + C315 + C50741 * C298) * C50853) *
                         C50919) *
                        C1651) *
                       C271 +
                   ((((C117 * C279 + C316 + C316 + C50741 * C299) * C50853 +
                      C343 * C50602) *
                         C50919 +
                     (C46171 + C46172) * C50920 + (C46173 + C46174) * C44486) *
                        C1651 -
                    (((C117 * C4598 + C6996 + C6996 + C50741 * C4606) * C50602 +
                      C40295 * C50853) *
                         C44486 +
                     (C46174 + C46173) * C50920 + (C46172 + C46171) * C50919) *
                        C50724) *
                       C272) *
                  C50625) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50741 * C133) * C50853 +
                      C168 * C50602) *
                         C50919 +
                     (C44780 + C44781) * C50920 + C44792 * C44486) *
                        C1651 -
                    ((C44784 + C44785) * C44486 + (C44783 + C44782) * C50920 +
                     (C44781 + C44780) * C50919) *
                        C50724) *
                       C50644 * C1002 +
                   (((C44786 + C44787) * C50919 + (C44788 + C44789) * C50920 +
                     (C44790 + C44791) * C44486) *
                        C50724 -
                    (C44793 * C44486 + (C44787 + C44786) * C50920 +
                     (C169 * C50602 + C168 * C50853) * C50919) *
                        C1651) *
                       C50644 * C1003 +
                   (((C169 * C50853 + C170 * C50602) * C50919 +
                     (C45086 + C45087) * C50920 + (C45088 + C45089) * C44486) *
                        C1651 -
                    (((C117 * C1821 + C1834 + C1834 + C50741 * C1829) * C50602 +
                      C5562 * C50853) *
                         C44486 +
                     (C45089 + C45088) * C50920 + (C45087 + C45086) * C50919) *
                        C50724) *
                       C50644 * C1004)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C117 * C119 + C141 + C141 + C50741 * C133) * C50853 +
                     C168 * C50602) *
                        C50919 +
                    (C44780 + C44781) * C50920 + C44792 * C44486) *
                       C1817 -
                   (C46565 * C44486 + (C44783 + C44782) * C50920 +
                    (C44781 + C44780) * C50919) *
                       C1818 +
                   (C44792 * C50919 + (C44785 + C44784) * C50920 +
                    (C46566 + C46567) * C44486) *
                       C1819 -
                   (((C117 * C7395 + C7406 + C7406 + C50741 * C7399) * C50602 +
                     C40567 * C50853) *
                        C44486 +
                    (C46567 + C46566) * C50920 + C46565 * C50919) *
                       C1820) *
                  C50644 * C50625) /
                     (p * q * std::sqrt(p + q));
    d2ee[208] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50741 * C133) * C50853 +
                      C168 * C50602) *
                         C50919 +
                     (C44780 + C44781) * C50920 + C44792 * C44486) *
                        C50915 -
                    (C46565 * C44486 + (C44783 + C44782) * C50920 +
                     (C44781 + C44780) * C50919) *
                        C50916 +
                    (C44792 * C50919 + (C44785 + C44784) * C50920 +
                     (C46566 + C46567) * C44486) *
                        C2067) *
                       C50644 * C50860 +
                   (((C44786 + C44787) * C50919 + (C44788 + C44789) * C50920 +
                     (C44790 + C44791) * C44486) *
                        C50916 -
                    (C44793 * C44486 + (C44787 + C44786) * C50920 +
                     (C169 * C50602 + C168 * C50853) * C50919) *
                        C50915 -
                    (((C117 * C5515 + C5543 + C5543 + C50741 * C5521) * C50602 +
                      C5561 * C50853) *
                         C44486 +
                     (C44791 + C44790) * C50920 + C44793 * C50919) *
                        C2067) *
                       C50644 * C50631)) /
                 (p * q * std::sqrt(p + q));
    d2ee[209] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50741 * C133) * C50853 +
                      C168 * C50602) *
                         C50919 +
                     (C44780 + C44781) * C50920 + C44792 * C44486) *
                        C1651 -
                    ((C44784 + C44785) * C44486 + (C44783 + C44782) * C50920 +
                     (C44781 + C44780) * C50919) *
                        C50724) *
                       C50644 * C1002 +
                   (((C44786 + C44787) * C50919 + (C44788 + C44789) * C50920 +
                     (C44790 + C44791) * C44486) *
                        C50724 -
                    (C44793 * C44486 + (C44787 + C44786) * C50920 +
                     (C169 * C50602 + C168 * C50853) * C50919) *
                        C1651) *
                       C50644 * C1003 +
                   (((C169 * C50853 + C170 * C50602) * C50919 +
                     (C45086 + C45087) * C50920 + (C45088 + C45089) * C44486) *
                        C1651 -
                    (((C117 * C1821 + C1834 + C1834 + C50741 * C1829) * C50602 +
                      C5562 * C50853) *
                         C44486 +
                     (C45089 + C45088) * C50920 + (C45087 + C45086) * C50919) *
                        C50724) *
                       C50644 * C1004)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50741 * C133) * C50853 +
                      C168 * C50602) *
                         C50919 +
                     (C44780 + C44781) * C50920 + C44792 * C44486) *
                        C1651 -
                    ((C44784 + C44785) * C44486 + (C44783 + C44782) * C50920 +
                     (C44781 + C44780) * C50919) *
                        C50724) *
                       C270 +
                   (((C45284 + C45285) * C50919 + (C45286 + C45287) * C50920 +
                     (C45682 + C45683) * C44486) *
                        C50724 -
                    (C45684 * C44486 + (C45285 + C45284) * C50920 +
                     (C342 * C50602 +
                      (C117 * C278 + C315 + C315 + C50741 * C298) * C50853) *
                         C50919) *
                        C1651) *
                       C271 +
                   ((((C117 * C279 + C316 + C316 + C50741 * C299) * C50853 +
                      C343 * C50602) *
                         C50919 +
                     (C46171 + C46172) * C50920 + (C46173 + C46174) * C44486) *
                        C1651 -
                    (((C117 * C4598 + C6996 + C6996 + C50741 * C4606) * C50602 +
                      C40295 * C50853) *
                         C44486 +
                     (C46174 + C46173) * C50920 + (C46172 + C46171) * C50919) *
                        C50724) *
                       C272) *
                  C50625) /
                     (p * q * std::sqrt(p + q));
    d2ee[210] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50741 * C133) * C17149 +
                      C168 * C17150 + C169 * C17151) *
                         C33790 +
                     (C34085 + C34086 + C34087) * C50821) *
                        C50660 * C50868 -
                    ((C901 * C17151 + C900 * C17150 + C6089 * C17149) * C50821 +
                     (C341 * C17151 + C342 * C17150 +
                      (C117 * C278 + C315 + C315 + C50741 * C298) * C17149) *
                         C33790) *
                        C50660 * C50696) *
                       C50911 +
                   (((C342 * C17149 + C341 * C17150 + C340 * C17151) * C33790 +
                     (C900 * C17149 + C901 * C17150 + C902 * C17151) * C50821) *
                        C50660 * C50696 -
                    ((C34093 + C34092 + C34091) * C50821 +
                     (C170 * C17151 + C169 * C17150 + C168 * C17149) * C33790) *
                        C50660 * C50868) *
                       C50912 +
                   (((C169 * C17149 + C170 * C17150 + C171 * C17151) * C33790 +
                     (C512 * C17149 + C511 * C17150 + C737 * C17151) * C50821) *
                        C50660 * C50868 -
                    (((C117 * C871 + C893 + C893 + C50741 * C881) * C17151 +
                      C902 * C17150 + C901 * C17149) *
                         C50821 +
                     (C628 * C17151 + C340 * C17150 + C341 * C17149) * C33790) *
                        C50660 * C50696) *
                       C618)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 +
                      C2271 * C278 + C2277 + C2277 + C2265 * C298 +
                      C2273 * C279 + C2278 + C2278 + C2266 * C299) *
                         C50597 * C33790 +
                     (C36767 + C36768 + C36769) * C50597 * C50821) *
                        C50660 * C50868 -
                    ((C2273 * C3263 + C3275 + C3275 + C2266 * C3269 +
                      C2271 * C1540 + C3274 + C3274 + C2265 * C1548 +
                      C2269 * C867 + C3273 + C3273 + C2264 * C877) *
                         C50597 * C50821 +
                     (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 +
                      C2271 * C279 + C2501 + C2501 + C2265 * C299 +
                      C2269 * C278 + C2502 + C2502 + C2264 * C298) *
                         C50597 * C33790) *
                        C50660 * C50696) *
                       C50911 +
                   (((C2535 + C2534 + C2533) * C50597 * C33790 +
                     (C3294 + C3295 + C3296) * C50597 * C50821) *
                        C50660 * C50696 -
                    ((C2736 + C2737 + C2738) * C50597 * C50821 +
                     (C2329 + C2328 + C2327) * C50597 * C33790) *
                        C50660 * C50868) *
                       C50912 +
                   (((C2332 + C2331 + C2330) * C50597 * C33790 +
                     (C3067 + C3068 + C3069) * C50597 * C50821) *
                        C50660 * C50868 -
                    ((C2273 * C3265 + C3285 + C3285 + C2266 * C3271 +
                      C2271 * C1538 + C3286 + C3286 + C2265 * C1546 +
                      C2269 * C869 + C3287 + C3287 + C2264 * C879) *
                         C50597 * C50821 +
                     (C2905 + C2904 + C2903) * C50597 * C33790) *
                        C50660 * C50696) *
                       C618)) /
                     (p * q * std::sqrt(p + q));
    d2ee[211] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50741 * C133) * C17149 +
              C168 * C17150 + C169 * C17151) *
                 C33790 +
             (C34085 + C34086 + C34087) * C50821) *
                C50869 -
            ((C34088 + C34089 + C34090) * C50821 +
             (C34087 + C34086 + C34085) * C33790) *
                C50724) *
               C50868 +
           (((C34586 + C34587 + C34588) * C33790 +
             (C6090 * C17149 + C5365 * C17150 + C5720 * C17151) * C50821) *
                C50724 -
            ((C34588 + C34587 + C34586) * C50821 +
             (C341 * C17151 + C342 * C17150 +
              (C117 * C278 + C315 + C315 + C50741 * C298) * C17149) *
                 C33790) *
                C50869) *
               C50696) *
              C273 +
          ((((C34091 + C34092 + C34093) * C33790 +
             (C34094 + C34095 + C34096) * C50821) *
                C50724 -
            ((C34093 + C34092 + C34091) * C50821 +
             (C170 * C17151 + C169 * C17150 + C168 * C17149) * C33790) *
                C50869) *
               C50868 +
           (((C342 * C17149 + C341 * C17150 + C340 * C17151) * C33790 +
             (C34589 + C34590 + C34591) * C50821) *
                C50869 -
            (((C117 * C1190 + C1203 + C1203 + C50741 * C1198) * C17151 +
              C5720 * C17150 + C5365 * C17149) *
                 C50821 +
             (C34591 + C34590 + C34589) * C33790) *
                C50724) *
               C50696) *
              C50631)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 +
              C2277 + C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
              C2266 * C299) *
                 C50597 * C33790 +
             (C36767 + C36768 + C36769) * C50597 * C50821) *
                C50869 -
            ((C36770 + C36771 + C36772) * C50597 * C50821 +
             (C36769 + C36768 + C36767) * C50597 * C33790) *
                C50724) *
               C50868 +
           (((C37271 + C37272 + C37273) * C50597 * C33790 +
             (C2269 * C1193 + C3710 + C3710 + C2264 * C1201 + C2271 * C2684 +
              C3709 + C3709 + C2265 * C2690 + C2273 * C3699 + C3708 + C3708 +
              C2266 * C3703) *
                 C50597 * C50821) *
                C50724 -
            ((C37273 + C37272 + C37271) * C50597 * C50821 +
             (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 + C2271 * C279 +
              C2501 + C2501 + C2265 * C299 + C2269 * C278 + C2502 + C2502 +
              C2264 * C298) *
                 C50597 * C33790) *
                C50869) *
               C50696) *
              C273 +
          ((((C2738 + C2737 + C2736) * C50597 * C33790 +
             (C2739 + C2740 + C2741) * C50597 * C50821) *
                C50724 -
            ((C2736 + C2737 + C2738) * C50597 * C50821 +
             (C2329 + C2328 + C2327) * C50597 * C33790) *
                C50869) *
               C50868 +
           (((C2535 + C2534 + C2533) * C50597 * C33790 +
             (C3294 + C3295 + C3296) * C50597 * C50821) *
                C50869 -
            ((C2273 * C3698 + C3705 + C3705 + C2266 * C3702 + C2271 * C2685 +
              C3706 + C3706 + C2265 * C2691 + C2269 * C1192 + C3707 + C3707 +
              C2264 * C1200) *
                 C50597 * C50821 +
             (C3296 + C3295 + C3294) * C50597 * C33790) *
                C50724) *
               C50696) *
              C50631)) /
            (p * q * std::sqrt(p + q));
    d2ee[212] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50741 * C133) * C17149 +
             C168 * C17150 + C169 * C17151) *
                C33790 +
            (C5557 * C17149 + C513 * C17150 + C512 * C17151) * C50821) *
               C50660 * C270 -
           ((C901 * C17151 + C900 * C17150 + C6089 * C17149) * C50821 +
            (C341 * C17151 + C342 * C17150 +
             (C117 * C278 + C315 + C315 + C50741 * C298) * C17149) *
                C33790) *
               C50660 * C271 +
           (((C117 * C279 + C316 + C316 + C50741 * C299) * C17149 +
             C343 * C17150 + C344 * C17151) *
                C33790 +
            (C7002 * C17149 + C5366 * C17150 + C11029 * C17151) * C50821) *
               C50660 * C272) *
              C273 +
          (((C342 * C17149 + C341 * C17150 + C340 * C17151) * C33790 +
            (C900 * C17149 + C901 * C17150 + C902 * C17151) * C50821) *
               C50660 * C271 -
           ((C511 * C17151 + C512 * C17150 + C513 * C17149) * C50821 +
            (C170 * C17151 + C169 * C17150 + C168 * C17149) * C33790) *
               C50660 * C270 -
           (((C117 * C1537 + C1550 + C1550 + C50741 * C1545) * C17151 +
             C11029 * C17150 + C5366 * C17149) *
                C50821 +
            (C345 * C17151 + C344 * C17150 + C343 * C17149) * C33790) *
               C50660 * C272) *
              C50631)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50741 * C133) * C17149 +
            C168 * C17150 + C169 * C17151) *
               C33790 +
           (C5557 * C17149 + C513 * C17150 + C512 * C17151) * C50821) *
              C50660 * C50644 * C113 -
          ((C511 * C17151 + C512 * C17150 + C513 * C17149) * C50821 +
           (C170 * C17151 + C169 * C17150 + C168 * C17149) * C33790) *
              C50660 * C50644 * C114 +
          ((C169 * C17149 + C170 * C17150 + C171 * C17151) * C33790 +
           (C512 * C17149 + C511 * C17150 + C737 * C17151) * C50821) *
              C50660 * C50644 * C115 -
          (((C117 * C728 + C734 + C734 + C50741 * C730) * C17151 +
            C737 * C17150 + C511 * C17149) *
               C50821 +
           (C172 * C17151 + C171 * C17150 + C170 * C17149) * C33790) *
              C50660 * C50644 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50741 * C133) * C17149 +
             C168 * C17150 + C169 * C17151) *
                C33790 +
            (C34085 + C34086 + C34087) * C50821) *
               C443 -
           ((C34088 + C34089 + C34090) * C50821 +
            (C34087 + C34086 + C34085) * C33790) *
               C444 +
           ((C34090 + C34089 + C34088) * C33790 +
            (C5560 * C17149 + C5559 * C17150 + C5562 * C17151) * C50821) *
               C445) *
              C50644 * C273 +
          (((C34091 + C34092 + C34093) * C33790 +
            (C34094 + C34095 + C34096) * C50821) *
               C444 -
           ((C34093 + C34092 + C34091) * C50821 +
            (C170 * C17151 + C169 * C17150 + C168 * C17149) * C33790) *
               C443 -
           (((C117 * C1821 + C1834 + C1834 + C50741 * C1829) * C17151 +
             C5562 * C17150 + C5559 * C17149) *
                C50821 +
            (C34096 + C34095 + C34094) * C33790) *
               C445) *
              C50644 * C50631)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 + C2277 +
            C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
            C2266 * C299) *
               C50597 * C33790 +
           (C2269 * C449 + C2705 + C2705 + C2264 * C469 + C2271 * C867 + C2704 +
            C2704 + C2265 * C877 + C2273 * C1540 + C2703 + C2703 +
            C2266 * C1548) *
               C50597 * C50821) *
              C50660 * C50644 * C113 -
          ((C2736 + C2737 + C2738) * C50597 * C50821 +
           (C2329 + C2328 + C2327) * C50597 * C33790) *
              C50660 * C50644 * C114 +
          ((C2332 + C2331 + C2330) * C50597 * C33790 +
           (C3067 + C3068 + C3069) * C50597 * C50821) *
              C50660 * C50644 * C115 -
          ((C2273 * C1537 + C3058 + C3058 + C2266 * C1545 + C2271 * C870 +
            C3059 + C3059 + C2265 * C880 + C2269 * C446 + C3060 + C3060 +
            C2264 * C466) *
               C50597 * C50821 +
           (C2335 + C2334 + C2333) * C50597 * C33790) *
              C50660 * C50644 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 +
             C2277 + C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
             C2266 * C299) *
                C50597 * C33790 +
            (C2269 * C449 + C2705 + C2705 + C2264 * C469 + C2271 * C867 +
             C2704 + C2704 + C2265 * C877 + C2273 * C1540 + C2703 + C2703 +
             C2266 * C1548) *
                C50597 * C50821) *
               C50660 * C270 -
           ((C2273 * C3263 + C3275 + C3275 + C2266 * C3269 + C2271 * C1540 +
             C3274 + C3274 + C2265 * C1548 + C2269 * C867 + C3273 + C3273 +
             C2264 * C877) *
                C50597 * C50821 +
            (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 + C2271 * C279 +
             C2501 + C2501 + C2265 * C299 + C2269 * C278 + C2502 + C2502 +
             C2264 * C298) *
                C50597 * C33790) *
               C50660 * C271 +
           ((C2269 * C279 + C2503 + C2503 + C2264 * C299 + C2271 * C1079 +
             C2504 + C2504 + C2265 * C1087 + C2273 * C2481 + C2505 + C2505 +
             C2266 * C2487) *
                C50597 * C33790 +
            (C2269 * C1540 + C4208 + C4208 + C2264 * C1548 + C2271 * C3263 +
             C4207 + C4207 + C2265 * C3269 + C2273 * C4197 + C4206 + C4206 +
             C2266 * C4201) *
                C50597 * C50821) *
               C50660 * C272) *
              C273 +
          (((C2535 + C2534 + C2533) * C50597 * C33790 +
            (C3294 + C3295 + C3296) * C50597 * C50821) *
               C50660 * C271 -
           ((C2736 + C2737 + C2738) * C50597 * C50821 +
            (C2329 + C2328 + C2327) * C50597 * C33790) *
               C50660 * C270 -
           ((C2273 * C4196 + C4203 + C4203 + C2266 * C4200 + C2271 * C3264 +
             C4204 + C4204 + C2265 * C3270 + C2269 * C1539 + C4205 + C4205 +
             C2264 * C1547) *
                C50597 * C50821 +
            (C2538 + C2537 + C2536) * C50597 * C33790) *
               C50660 * C272) *
              C50631)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 +
             C2277 + C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
             C2266 * C299) *
                C50597 * C33790 +
            (C36767 + C36768 + C36769) * C50597 * C50821) *
               C443 -
           ((C36770 + C36771 + C36772) * C50597 * C50821 +
            (C36769 + C36768 + C36767) * C50597 * C33790) *
               C444 +
           ((C36772 + C36771 + C36770) * C50597 * C33790 +
            (C2269 * C1824 + C4616 + C4616 + C2264 * C1832 + C2271 * C4601 +
             C4615 + C4615 + C2265 * C4609 + C2273 * C4600 + C4614 + C4614 +
             C2266 * C4608) *
                C50597 * C50821) *
               C445) *
              C50644 * C273 +
          (((C2738 + C2737 + C2736) * C50597 * C33790 +
            (C2739 + C2740 + C2741) * C50597 * C50821) *
               C444 -
           ((C2736 + C2737 + C2738) * C50597 * C50821 +
            (C2329 + C2328 + C2327) * C50597 * C33790) *
               C443 -
           ((C2273 * C4598 + C4611 + C4611 + C2266 * C4606 + C2271 * C4599 +
             C4612 + C4612 + C2265 * C4607 + C2269 * C1823 + C4613 + C4613 +
             C2264 * C1831) *
                C50597 * C50821 +
            (C2741 + C2740 + C2739) * C50597 * C33790) *
               C445) *
              C50644 * C50631)) /
            (p * q * std::sqrt(p + q));
    d2ee[213] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50741 * C133) * C17149 +
                      C168 * C17150 + C169 * C17151) *
                         C33790 +
                     (C34085 + C34086 + C34087) * C50821) *
                        C50869 -
                    ((C34088 + C34089 + C34090) * C50821 +
                     (C34087 + C34086 + C34085) * C33790) *
                        C50724) *
                       C50644 * C50911 +
                   (((C34091 + C34092 + C34093) * C33790 +
                     (C34094 + C34095 + C34096) * C50821) *
                        C50724 -
                    ((C34093 + C34092 + C34091) * C50821 +
                     (C170 * C17151 + C169 * C17150 + C168 * C17149) * C33790) *
                        C50869) *
                       C50644 * C50912 +
                   (((C169 * C17149 + C170 * C17150 + C171 * C17151) * C33790 +
                     (C34389 + C34390 + C34391) * C50821) *
                        C50869 -
                    (((C117 * C455 + C498 + C498 + C50741 * C475) * C17151 +
                      C516 * C17150 + C515 * C17149) *
                         C50821 +
                     (C34391 + C34390 + C34389) * C33790) *
                        C50724) *
                       C50644 * C618)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 +
                      C2271 * C278 + C2277 + C2277 + C2265 * C298 +
                      C2273 * C279 + C2278 + C2278 + C2266 * C299) *
                         C50597 * C33790 +
                     (C36767 + C36768 + C36769) * C50597 * C50821) *
                        C50869 -
                    ((C36770 + C36771 + C36772) * C50597 * C50821 +
                     (C36769 + C36768 + C36767) * C50597 * C33790) *
                        C50724) *
                       C50644 * C50911 +
                   (((C2738 + C2737 + C2736) * C50597 * C33790 +
                     (C2739 + C2740 + C2741) * C50597 * C50821) *
                        C50724 -
                    ((C2736 + C2737 + C2738) * C50597 * C50821 +
                     (C2329 + C2328 + C2327) * C50597 * C33790) *
                        C50869) *
                       C50644 * C50912 +
                   (((C2332 + C2331 + C2330) * C50597 * C33790 +
                     (C3067 + C3068 + C3069) * C50597 * C50821) *
                        C50869 -
                    ((C2273 * C2686 + C2721 + C2721 + C2266 * C2692 +
                      C2271 * C1191 + C2722 + C2722 + C2265 * C1199 +
                      C2269 * C452 + C2723 + C2723 + C2264 * C472) *
                         C50597 * C50821 +
                     (C3069 + C3068 + C3067) * C50597 * C33790) *
                        C50724) *
                       C50644 * C618)) /
                     (p * q * std::sqrt(p + q));
    d2ee[214] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50741 * C133) * C17149 +
            C168 * C17150 + C169 * C17151) *
               C33790 +
           (C5557 * C17149 + C513 * C17150 + C512 * C17151) * C50821) *
              C50660 * C50644 * C113 -
          ((C511 * C17151 + C512 * C17150 + C513 * C17149) * C50821 +
           (C170 * C17151 + C169 * C17150 + C168 * C17149) * C33790) *
              C50660 * C50644 * C114 +
          ((C169 * C17149 + C170 * C17150 + C171 * C17151) * C33790 +
           (C512 * C17149 + C511 * C17150 + C737 * C17151) * C50821) *
              C50660 * C50644 * C115 -
          (((C117 * C728 + C734 + C734 + C50741 * C730) * C17151 +
            C737 * C17150 + C511 * C17149) *
               C50821 +
           (C172 * C17151 + C171 * C17150 + C170 * C17149) * C33790) *
              C50660 * C50644 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50741 * C133) * C17149 +
             C168 * C17150 + C169 * C17151) *
                C33790 +
            (C5557 * C17149 + C513 * C17150 + C512 * C17151) * C50821) *
               C50660 * C270 -
           ((C901 * C17151 + C900 * C17150 + C6089 * C17149) * C50821 +
            (C341 * C17151 + C342 * C17150 +
             (C117 * C278 + C315 + C315 + C50741 * C298) * C17149) *
                C33790) *
               C50660 * C271 +
           (((C117 * C279 + C316 + C316 + C50741 * C299) * C17149 +
             C343 * C17150 + C344 * C17151) *
                C33790 +
            (C7002 * C17149 + C5366 * C17150 + C11029 * C17151) * C50821) *
               C50660 * C272) *
              C273 +
          (((C342 * C17149 + C341 * C17150 + C340 * C17151) * C33790 +
            (C900 * C17149 + C901 * C17150 + C902 * C17151) * C50821) *
               C50660 * C271 -
           ((C511 * C17151 + C512 * C17150 + C513 * C17149) * C50821 +
            (C170 * C17151 + C169 * C17150 + C168 * C17149) * C33790) *
               C50660 * C270 -
           (((C117 * C1537 + C1550 + C1550 + C50741 * C1545) * C17151 +
             C11029 * C17150 + C5366 * C17149) *
                C50821 +
            (C345 * C17151 + C344 * C17150 + C343 * C17149) * C33790) *
               C50660 * C272) *
              C50631)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 + C2277 +
            C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
            C2266 * C299) *
               C50597 * C33790 +
           (C2269 * C449 + C2705 + C2705 + C2264 * C469 + C2271 * C867 + C2704 +
            C2704 + C2265 * C877 + C2273 * C1540 + C2703 + C2703 +
            C2266 * C1548) *
               C50597 * C50821) *
              C50660 * C50644 * C113 -
          ((C2736 + C2737 + C2738) * C50597 * C50821 +
           (C2329 + C2328 + C2327) * C50597 * C33790) *
              C50660 * C50644 * C114 +
          ((C2332 + C2331 + C2330) * C50597 * C33790 +
           (C3067 + C3068 + C3069) * C50597 * C50821) *
              C50660 * C50644 * C115 -
          ((C2273 * C1537 + C3058 + C3058 + C2266 * C1545 + C2271 * C870 +
            C3059 + C3059 + C2265 * C880 + C2269 * C446 + C3060 + C3060 +
            C2264 * C466) *
               C50597 * C50821 +
           (C2335 + C2334 + C2333) * C50597 * C33790) *
              C50660 * C50644 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 +
             C2277 + C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
             C2266 * C299) *
                C50597 * C33790 +
            (C2269 * C449 + C2705 + C2705 + C2264 * C469 + C2271 * C867 +
             C2704 + C2704 + C2265 * C877 + C2273 * C1540 + C2703 + C2703 +
             C2266 * C1548) *
                C50597 * C50821) *
               C50660 * C270 -
           ((C2273 * C3263 + C3275 + C3275 + C2266 * C3269 + C2271 * C1540 +
             C3274 + C3274 + C2265 * C1548 + C2269 * C867 + C3273 + C3273 +
             C2264 * C877) *
                C50597 * C50821 +
            (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 + C2271 * C279 +
             C2501 + C2501 + C2265 * C299 + C2269 * C278 + C2502 + C2502 +
             C2264 * C298) *
                C50597 * C33790) *
               C50660 * C271 +
           ((C2269 * C279 + C2503 + C2503 + C2264 * C299 + C2271 * C1079 +
             C2504 + C2504 + C2265 * C1087 + C2273 * C2481 + C2505 + C2505 +
             C2266 * C2487) *
                C50597 * C33790 +
            (C2269 * C1540 + C4208 + C4208 + C2264 * C1548 + C2271 * C3263 +
             C4207 + C4207 + C2265 * C3269 + C2273 * C4197 + C4206 + C4206 +
             C2266 * C4201) *
                C50597 * C50821) *
               C50660 * C272) *
              C273 +
          (((C2535 + C2534 + C2533) * C50597 * C33790 +
            (C3294 + C3295 + C3296) * C50597 * C50821) *
               C50660 * C271 -
           ((C2736 + C2737 + C2738) * C50597 * C50821 +
            (C2329 + C2328 + C2327) * C50597 * C33790) *
               C50660 * C270 -
           ((C2273 * C4196 + C4203 + C4203 + C2266 * C4200 + C2271 * C3264 +
             C4204 + C4204 + C2265 * C3270 + C2269 * C1539 + C4205 + C4205 +
             C2264 * C1547) *
                C50597 * C50821 +
            (C2538 + C2537 + C2536) * C50597 * C33790) *
               C50660 * C272) *
              C50631)) /
            (p * q * std::sqrt(p + q));
    d2ee[215] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50741 * C133) * C17149 +
             C168 * C17150 + C169 * C17151) *
                C33790 +
            (C34085 + C34086 + C34087) * C50821) *
               C50660 * C50913 -
           ((C34588 + C34587 + C34586) * C50821 +
            (C341 * C17151 + C342 * C17150 +
             (C117 * C278 + C315 + C315 + C50741 * C298) * C17149) *
                C33790) *
               C50660 * C50914 +
           (((C117 * C279 + C316 + C316 + C50741 * C299) * C17149 +
             C343 * C17150 + C344 * C17151) *
                C33790 +
            (C7002 * C17149 + C5366 * C17150 + C11029 * C17151) * C50821) *
               C50660 * C1306) *
              C50860 +
          (((C342 * C17149 + C341 * C17150 + C340 * C17151) * C33790 +
            (C34589 + C34590 + C34591) * C50821) *
               C50660 * C50914 -
           ((C34093 + C34092 + C34091) * C50821 +
            (C170 * C17151 + C169 * C17150 + C168 * C17149) * C33790) *
               C50660 * C50913 -
           (((C117 * C1537 + C1550 + C1550 + C50741 * C1545) * C17151 +
             C11029 * C17150 + C5366 * C17149) *
                C50821 +
            (C345 * C17151 + C344 * C17150 + C343 * C17149) * C33790) *
               C50660 * C1306) *
              C50631)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 +
             C2277 + C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
             C2266 * C299) *
                C50597 * C33790 +
            (C36767 + C36768 + C36769) * C50597 * C50821) *
               C50660 * C50913 -
           ((C37273 + C37272 + C37271) * C50597 * C50821 +
            (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 + C2271 * C279 +
             C2501 + C2501 + C2265 * C299 + C2269 * C278 + C2502 + C2502 +
             C2264 * C298) *
                C50597 * C33790) *
               C50660 * C50914 +
           ((C2269 * C279 + C2503 + C2503 + C2264 * C299 + C2271 * C1079 +
             C2504 + C2504 + C2265 * C1087 + C2273 * C2481 + C2505 + C2505 +
             C2266 * C2487) *
                C50597 * C33790 +
            (C2269 * C1540 + C4208 + C4208 + C2264 * C1548 + C2271 * C3263 +
             C4207 + C4207 + C2265 * C3269 + C2273 * C4197 + C4206 + C4206 +
             C2266 * C4201) *
                C50597 * C50821) *
               C50660 * C1306) *
              C50860 +
          (((C2535 + C2534 + C2533) * C50597 * C33790 +
            (C3294 + C3295 + C3296) * C50597 * C50821) *
               C50660 * C50914 -
           ((C2736 + C2737 + C2738) * C50597 * C50821 +
            (C2329 + C2328 + C2327) * C50597 * C33790) *
               C50660 * C50913 -
           ((C2273 * C4196 + C4203 + C4203 + C2266 * C4200 + C2271 * C3264 +
             C4204 + C4204 + C2265 * C3270 + C2269 * C1539 + C4205 + C4205 +
             C2264 * C1547) *
                C50597 * C50821 +
            (C2538 + C2537 + C2536) * C50597 * C33790) *
               C50660 * C1306) *
              C50631)) /
            (p * q * std::sqrt(p + q));
    d2ee[216] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50741 * C133) * C17149 +
                      C168 * C17150 + C169 * C17151) *
                         C33790 +
                     (C34085 + C34086 + C34087) * C50821) *
                        C50869 -
                    ((C34088 + C34089 + C34090) * C50821 +
                     (C34087 + C34086 + C34085) * C33790) *
                        C50724) *
                       C50913 +
                   (((C34586 + C34587 + C34588) * C33790 +
                     (C34982 + C34983 + C34984) * C50821) *
                        C50724 -
                    ((C34588 + C34587 + C34586) * C50821 +
                     (C341 * C17151 + C342 * C17150 +
                      (C117 * C278 + C315 + C315 + C50741 * C298) * C17149) *
                         C33790) *
                        C50869) *
                       C50914 +
                   ((((C117 * C279 + C316 + C316 + C50741 * C299) * C17149 +
                      C343 * C17150 + C344 * C17151) *
                         C33790 +
                     (C35471 + C35472 + C35473) * C50821) *
                        C50869 -
                    (((C117 * C2686 + C5358 + C5358 + C50741 * C2692) * C17151 +
                      C5367 * C17150 + C7003 * C17149) *
                         C50821 +
                     (C35473 + C35472 + C35471) * C33790) *
                        C50724) *
                       C1306) *
                  C50625) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 +
                      C2271 * C278 + C2277 + C2277 + C2265 * C298 +
                      C2273 * C279 + C2278 + C2278 + C2266 * C299) *
                         C50597 * C33790 +
                     (C36767 + C36768 + C36769) * C50597 * C50821) *
                        C50869 -
                    ((C36770 + C36771 + C36772) * C50597 * C50821 +
                     (C36769 + C36768 + C36767) * C50597 * C33790) *
                        C50724) *
                       C50913 +
                   (((C37271 + C37272 + C37273) * C50597 * C33790 +
                     (C37682 + C37683 + C37684) * C50597 * C50821) *
                        C50724 -
                    ((C37273 + C37272 + C37271) * C50597 * C50821 +
                     (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 +
                      C2271 * C279 + C2501 + C2501 + C2265 * C299 +
                      C2269 * C278 + C2502 + C2502 + C2264 * C298) *
                         C50597 * C33790) *
                        C50869) *
                       C50914 +
                   (((C2269 * C279 + C2503 + C2503 + C2264 * C299 +
                      C2271 * C1079 + C2504 + C2504 + C2265 * C1087 +
                      C2273 * C2481 + C2505 + C2505 + C2266 * C2487) *
                         C50597 * C33790 +
                     (C38186 + C38187 + C38188) * C50597 * C50821) *
                        C50869 -
                    ((C2273 * C20864 + C38177 + C38177 + C2266 * C20866 +
                      C2271 * C3699 + C38178 + C38178 + C2265 * C3703 +
                      C2269 * C2684 + C38179 + C38179 + C2264 * C2690) *
                         C50597 * C50821 +
                     (C38188 + C38187 + C38186) * C50597 * C33790) *
                        C50724) *
                       C1306) *
                  C50625) /
                     (p * q * std::sqrt(p + q));
    d2ee[217] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50741 * C133) * C17149 +
            C168 * C17150 + C169 * C17151) *
               C33790 +
           (C34085 + C34086 + C34087) * C50821) *
              C50660 * C1071 -
          ((C34588 + C34587 + C34586) * C50821 +
           (C341 * C17151 + C342 * C17150 +
            (C117 * C278 + C315 + C315 + C50741 * C298) * C17149) *
               C33790) *
              C50660 * C1072 +
          (((C117 * C279 + C316 + C316 + C50741 * C299) * C17149 +
            C343 * C17150 + C344 * C17151) *
               C33790 +
           (C7002 * C17149 + C5366 * C17150 + C11029 * C17151) * C50821) *
              C50660 * C1073 -
          (((C117 * C3265 + C11927 + C11927 + C50741 * C3271) * C17151 +
            (C117 * C3264 + C6340 + C6340 + C50741 * C3270) * C17150 +
            (C117 * C3263 + C6341 + C6341 + C50741 * C3269) * C17149) *
               C50821 +
           ((C117 * C1077 + C1090 + C1090 + C50741 * C1085) * C17151 +
            (C117 * C1078 + C1091 + C1091 + C50741 * C1086) * C17150 +
            (C117 * C1079 + C1092 + C1092 + C50741 * C1087) * C17149) *
               C33790) *
              C50660 * C1074) *
         C50625) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50741 * C133) * C17149 +
             C168 * C17150 + C169 * C17151) *
                C33790 +
            (C34085 + C34086 + C34087) * C50821) *
               C50660 * C1000 -
           ((C34588 + C34587 + C34586) * C50821 +
            (C341 * C17151 + C342 * C17150 +
             (C117 * C278 + C315 + C315 + C50741 * C298) * C17149) *
                C33790) *
               C50660 * C50696) *
              C1002 +
          (((C342 * C17149 + C341 * C17150 + C340 * C17151) * C33790 +
            (C34589 + C34590 + C34591) * C50821) *
               C50660 * C50696 -
           ((C34093 + C34092 + C34091) * C50821 +
            (C170 * C17151 + C169 * C17150 + C168 * C17149) * C33790) *
               C50660 * C1000) *
              C1003 +
          (((C169 * C17149 + C170 * C17150 + C171 * C17151) * C33790 +
            (C34389 + C34390 + C34391) * C50821) *
               C50660 * C1000 -
           (((C117 * C871 + C893 + C893 + C50741 * C881) * C17151 +
             C902 * C17150 + C901 * C17149) *
                C50821 +
            (C628 * C17151 + C340 * C17150 + C341 * C17149) * C33790) *
               C50660 * C50696) *
              C1004)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50741 * C133) * C17149 +
             C168 * C17150 + C169 * C17151) *
                C33790 +
            (C34085 + C34086 + C34087) * C50821) *
               C443 -
           ((C34088 + C34089 + C34090) * C50821 +
            (C34087 + C34086 + C34085) * C33790) *
               C444 +
           ((C34090 + C34089 + C34088) * C33790 +
            (C5560 * C17149 + C5559 * C17150 + C5562 * C17151) * C50821) *
               C445) *
              C1000 +
          (((C34586 + C34587 + C34588) * C33790 +
            (C34982 + C34983 + C34984) * C50821) *
               C444 -
           ((C34588 + C34587 + C34586) * C50821 +
            (C341 * C17151 + C342 * C17150 +
             (C117 * C278 + C315 + C315 + C50741 * C298) * C17149) *
                C33790) *
               C443 -
           (((C117 * C6064 + C6082 + C6082 + C50741 * C6066) * C17151 +
             C6091 * C17150 + C6502 * C17149) *
                C50821 +
            (C34984 + C34983 + C34982) * C33790) *
               C445) *
              C50696) *
         C50625) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 +
             C2277 + C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
             C2266 * C299) *
                C50597 * C33790 +
            (C36767 + C36768 + C36769) * C50597 * C50821) *
               C50660 * C1000 -
           ((C37273 + C37272 + C37271) * C50597 * C50821 +
            (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 + C2271 * C279 +
             C2501 + C2501 + C2265 * C299 + C2269 * C278 + C2502 + C2502 +
             C2264 * C298) *
                C50597 * C33790) *
               C50660 * C50696) *
              C1002 +
          (((C2535 + C2534 + C2533) * C50597 * C33790 +
            (C3294 + C3295 + C3296) * C50597 * C50821) *
               C50660 * C50696 -
           ((C2736 + C2737 + C2738) * C50597 * C50821 +
            (C2329 + C2328 + C2327) * C50597 * C33790) *
               C50660 * C1000) *
              C1003 +
          (((C2332 + C2331 + C2330) * C50597 * C33790 +
            (C3067 + C3068 + C3069) * C50597 * C50821) *
               C50660 * C1000 -
           ((C2273 * C3265 + C3285 + C3285 + C2266 * C3271 + C2271 * C1538 +
             C3286 + C3286 + C2265 * C1546 + C2269 * C869 + C3287 + C3287 +
             C2264 * C879) *
                C50597 * C50821 +
            (C2905 + C2904 + C2903) * C50597 * C33790) *
               C50660 * C50696) *
              C1004)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 + C2277 +
            C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
            C2266 * C299) *
               C50597 * C33790 +
           (C36767 + C36768 + C36769) * C50597 * C50821) *
              C50660 * C1071 -
          ((C37273 + C37272 + C37271) * C50597 * C50821 +
           (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 + C2271 * C279 +
            C2501 + C2501 + C2265 * C299 + C2269 * C278 + C2502 + C2502 +
            C2264 * C298) *
               C50597 * C33790) *
              C50660 * C1072 +
          ((C2269 * C279 + C2503 + C2503 + C2264 * C299 + C2271 * C1079 +
            C2504 + C2504 + C2265 * C1087 + C2273 * C2481 + C2505 + C2505 +
            C2266 * C2487) *
               C50597 * C33790 +
           (C2269 * C1540 + C4208 + C4208 + C2264 * C1548 + C2271 * C3263 +
            C4207 + C4207 + C2265 * C3269 + C2273 * C4197 + C4206 + C4206 +
            C2266 * C4201) *
               C50597 * C50821) *
              C50660 * C1073 -
          ((C2273 * C21197 + C37518 + C37518 + C2266 * C21199 + C2271 * C4197 +
            C37519 + C37519 + C2265 * C4201 + C2269 * C3263 + C37520 + C37520 +
            C2264 * C3269) *
               C50597 * C50821 +
           (C2273 * C3541 + C3550 + C3550 + C2266 * C3545 + C2271 * C2481 +
            C3551 + C3551 + C2265 * C2487 + C2269 * C1079 + C3552 + C3552 +
            C2264 * C1087) *
               C50597 * C33790) *
              C50660 * C1074) *
         C50625) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 +
             C2277 + C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
             C2266 * C299) *
                C50597 * C33790 +
            (C36767 + C36768 + C36769) * C50597 * C50821) *
               C443 -
           ((C36770 + C36771 + C36772) * C50597 * C50821 +
            (C36769 + C36768 + C36767) * C50597 * C33790) *
               C444 +
           ((C36772 + C36771 + C36770) * C50597 * C33790 +
            (C2269 * C1824 + C4616 + C4616 + C2264 * C1832 + C2271 * C4601 +
             C4615 + C4615 + C2265 * C4609 + C2273 * C4600 + C4614 + C4614 +
             C2266 * C4608) *
                C50597 * C50821) *
               C445) *
              C1000 +
          (((C37271 + C37272 + C37273) * C50597 * C33790 +
            (C37682 + C37683 + C37684) * C50597 * C50821) *
               C444 -
           ((C37273 + C37272 + C37271) * C50597 * C50821 +
            (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 + C2271 * C279 +
             C2501 + C2501 + C2265 * C299 + C2269 * C278 + C2502 + C2502 +
             C2264 * C298) *
                C50597 * C33790) *
               C443 -
           ((C2273 * C21466 + C37673 + C37673 + C2266 * C21468 + C2271 * C4600 +
             C37674 + C37674 + C2265 * C4608 + C2269 * C4601 + C37675 + C37675 +
             C2264 * C4609) *
                C50597 * C50821 +
            (C37684 + C37683 + C37682) * C50597 * C33790) *
               C445) *
              C50696) *
         C50625) /
            (p * q * std::sqrt(p + q));
    d2ee[218] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50741 * C133) * C17149 +
              C168 * C17150 + C169 * C17151) *
                 C33790 +
             (C34085 + C34086 + C34087) * C50821) *
                C50869 -
            ((C34088 + C34089 + C34090) * C50821 +
             (C34087 + C34086 + C34085) * C33790) *
                C50724) *
               C1000 +
           (((C34586 + C34587 + C34588) * C33790 +
             (C34982 + C34983 + C34984) * C50821) *
                C50724 -
            ((C34588 + C34587 + C34586) * C50821 +
             (C341 * C17151 + C342 * C17150 +
              (C117 * C278 + C315 + C315 + C50741 * C298) * C17149) *
                 C33790) *
                C50869) *
               C50696) *
              C50860 +
          ((((C34091 + C34092 + C34093) * C33790 +
             (C34094 + C34095 + C34096) * C50821) *
                C50724 -
            ((C34093 + C34092 + C34091) * C50821 +
             (C170 * C17151 + C169 * C17150 + C168 * C17149) * C33790) *
                C50869) *
               C1000 +
           (((C342 * C17149 + C341 * C17150 + C340 * C17151) * C33790 +
             (C34589 + C34590 + C34591) * C50821) *
                C50869 -
            (((C117 * C1190 + C1203 + C1203 + C50741 * C1198) * C17151 +
              C5720 * C17150 + C5365 * C17149) *
                 C50821 +
             (C34591 + C34590 + C34589) * C33790) *
                C50724) *
               C50696) *
              C50631)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 +
              C2277 + C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
              C2266 * C299) *
                 C50597 * C33790 +
             (C36767 + C36768 + C36769) * C50597 * C50821) *
                C50869 -
            ((C36770 + C36771 + C36772) * C50597 * C50821 +
             (C36769 + C36768 + C36767) * C50597 * C33790) *
                C50724) *
               C1000 +
           (((C37271 + C37272 + C37273) * C50597 * C33790 +
             (C37682 + C37683 + C37684) * C50597 * C50821) *
                C50724 -
            ((C37273 + C37272 + C37271) * C50597 * C50821 +
             (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 + C2271 * C279 +
              C2501 + C2501 + C2265 * C299 + C2269 * C278 + C2502 + C2502 +
              C2264 * C298) *
                 C50597 * C33790) *
                C50869) *
               C50696) *
              C50860 +
          ((((C2738 + C2737 + C2736) * C50597 * C33790 +
             (C2739 + C2740 + C2741) * C50597 * C50821) *
                C50724 -
            ((C2736 + C2737 + C2738) * C50597 * C50821 +
             (C2329 + C2328 + C2327) * C50597 * C33790) *
                C50869) *
               C1000 +
           (((C2535 + C2534 + C2533) * C50597 * C33790 +
             (C3294 + C3295 + C3296) * C50597 * C50821) *
                C50869 -
            ((C2273 * C3698 + C3705 + C3705 + C2266 * C3702 + C2271 * C2685 +
              C3706 + C3706 + C2265 * C2691 + C2269 * C1192 + C3707 + C3707 +
              C2264 * C1200) *
                 C50597 * C50821 +
             (C3296 + C3295 + C3294) * C50597 * C33790) *
                C50724) *
               C50696) *
              C50631)) /
            (p * q * std::sqrt(p + q));
    d2ee[219] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50741 * C133) * C17149 +
             C168 * C17150 + C169 * C17151) *
                C33790 +
            (C34085 + C34086 + C34087) * C50821) *
               C50660 * C1000 -
           ((C34588 + C34587 + C34586) * C50821 +
            (C341 * C17151 + C342 * C17150 +
             (C117 * C278 + C315 + C315 + C50741 * C298) * C17149) *
                C33790) *
               C50660 * C50696) *
              C1002 +
          (((C342 * C17149 + C341 * C17150 + C340 * C17151) * C33790 +
            (C34589 + C34590 + C34591) * C50821) *
               C50660 * C50696 -
           ((C34093 + C34092 + C34091) * C50821 +
            (C170 * C17151 + C169 * C17150 + C168 * C17149) * C33790) *
               C50660 * C1000) *
              C1003 +
          (((C169 * C17149 + C170 * C17150 + C171 * C17151) * C33790 +
            (C34389 + C34390 + C34391) * C50821) *
               C50660 * C1000 -
           (((C117 * C871 + C893 + C893 + C50741 * C881) * C17151 +
             C902 * C17150 + C901 * C17149) *
                C50821 +
            (C628 * C17151 + C340 * C17150 + C341 * C17149) * C33790) *
               C50660 * C50696) *
              C1004)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50741 * C133) * C17149 +
            C168 * C17150 + C169 * C17151) *
               C33790 +
           (C34085 + C34086 + C34087) * C50821) *
              C50660 * C1071 -
          ((C34588 + C34587 + C34586) * C50821 +
           (C341 * C17151 + C342 * C17150 +
            (C117 * C278 + C315 + C315 + C50741 * C298) * C17149) *
               C33790) *
              C50660 * C1072 +
          (((C117 * C279 + C316 + C316 + C50741 * C299) * C17149 +
            C343 * C17150 + C344 * C17151) *
               C33790 +
           (C7002 * C17149 + C5366 * C17150 + C11029 * C17151) * C50821) *
              C50660 * C1073 -
          (((C117 * C3265 + C11927 + C11927 + C50741 * C3271) * C17151 +
            (C117 * C3264 + C6340 + C6340 + C50741 * C3270) * C17150 +
            (C117 * C3263 + C6341 + C6341 + C50741 * C3269) * C17149) *
               C50821 +
           ((C117 * C1077 + C1090 + C1090 + C50741 * C1085) * C17151 +
            (C117 * C1078 + C1091 + C1091 + C50741 * C1086) * C17150 +
            (C117 * C1079 + C1092 + C1092 + C50741 * C1087) * C17149) *
               C33790) *
              C50660 * C1074) *
         C50625) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 +
             C2277 + C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
             C2266 * C299) *
                C50597 * C33790 +
            (C36767 + C36768 + C36769) * C50597 * C50821) *
               C50660 * C1000 -
           ((C37273 + C37272 + C37271) * C50597 * C50821 +
            (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 + C2271 * C279 +
             C2501 + C2501 + C2265 * C299 + C2269 * C278 + C2502 + C2502 +
             C2264 * C298) *
                C50597 * C33790) *
               C50660 * C50696) *
              C1002 +
          (((C2535 + C2534 + C2533) * C50597 * C33790 +
            (C3294 + C3295 + C3296) * C50597 * C50821) *
               C50660 * C50696 -
           ((C2736 + C2737 + C2738) * C50597 * C50821 +
            (C2329 + C2328 + C2327) * C50597 * C33790) *
               C50660 * C1000) *
              C1003 +
          (((C2332 + C2331 + C2330) * C50597 * C33790 +
            (C3067 + C3068 + C3069) * C50597 * C50821) *
               C50660 * C1000 -
           ((C2273 * C3265 + C3285 + C3285 + C2266 * C3271 + C2271 * C1538 +
             C3286 + C3286 + C2265 * C1546 + C2269 * C869 + C3287 + C3287 +
             C2264 * C879) *
                C50597 * C50821 +
            (C2905 + C2904 + C2903) * C50597 * C33790) *
               C50660 * C50696) *
              C1004)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 + C2277 +
            C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
            C2266 * C299) *
               C50597 * C33790 +
           (C36767 + C36768 + C36769) * C50597 * C50821) *
              C50660 * C1071 -
          ((C37273 + C37272 + C37271) * C50597 * C50821 +
           (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 + C2271 * C279 +
            C2501 + C2501 + C2265 * C299 + C2269 * C278 + C2502 + C2502 +
            C2264 * C298) *
               C50597 * C33790) *
              C50660 * C1072 +
          ((C2269 * C279 + C2503 + C2503 + C2264 * C299 + C2271 * C1079 +
            C2504 + C2504 + C2265 * C1087 + C2273 * C2481 + C2505 + C2505 +
            C2266 * C2487) *
               C50597 * C33790 +
           (C2269 * C1540 + C4208 + C4208 + C2264 * C1548 + C2271 * C3263 +
            C4207 + C4207 + C2265 * C3269 + C2273 * C4197 + C4206 + C4206 +
            C2266 * C4201) *
               C50597 * C50821) *
              C50660 * C1073 -
          ((C2273 * C21197 + C37518 + C37518 + C2266 * C21199 + C2271 * C4197 +
            C37519 + C37519 + C2265 * C4201 + C2269 * C3263 + C37520 + C37520 +
            C2264 * C3269) *
               C50597 * C50821 +
           (C2273 * C3541 + C3550 + C3550 + C2266 * C3545 + C2271 * C2481 +
            C3551 + C3551 + C2265 * C2487 + C2269 * C1079 + C3552 + C3552 +
            C2264 * C1087) *
               C50597 * C33790) *
              C50660 * C1074) *
         C50625) /
            (p * q * std::sqrt(p + q));
    d2ee[220] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50741 * C133) * C17149 +
              C168 * C17150 + C169 * C17151) *
                 C33790 +
             (C34085 + C34086 + C34087) * C50821) *
                C1651 -
            ((C34088 + C34089 + C34090) * C50821 +
             (C34087 + C34086 + C34085) * C33790) *
                C50724) *
               C50868 +
           (((C34586 + C34587 + C34588) * C33790 +
             (C34982 + C34983 + C34984) * C50821) *
                C50724 -
            ((C34588 + C34587 + C34586) * C50821 +
             (C341 * C17151 + C342 * C17150 +
              (C117 * C278 + C315 + C315 + C50741 * C298) * C17149) *
                 C33790) *
                C1651) *
               C50696) *
              C50860 +
          ((((C34091 + C34092 + C34093) * C33790 +
             (C34094 + C34095 + C34096) * C50821) *
                C50724 -
            ((C34093 + C34092 + C34091) * C50821 +
             (C170 * C17151 + C169 * C17150 + C168 * C17149) * C33790) *
                C1651) *
               C50868 +
           (((C342 * C17149 + C341 * C17150 + C340 * C17151) * C33790 +
             (C34589 + C34590 + C34591) * C50821) *
                C1651 -
            (((C117 * C1190 + C1203 + C1203 + C50741 * C1198) * C17151 +
              C5720 * C17150 + C5365 * C17149) *
                 C50821 +
             (C34591 + C34590 + C34589) * C33790) *
                C50724) *
               C50696) *
              C50631)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2269 * C119 + C2276 + C2276 + C2264 * C133 + C2271 * C278 +
              C2277 + C2277 + C2265 * C298 + C2273 * C279 + C2278 + C2278 +
              C2266 * C299) *
                 C50597 * C33790 +
             (C36767 + C36768 + C36769) * C50597 * C50821) *
                C1651 -
            ((C36770 + C36771 + C36772) * C50597 * C50821 +
             (C36769 + C36768 + C36767) * C50597 * C33790) *
                C50724) *
               C50868 +
           (((C37271 + C37272 + C37273) * C50597 * C33790 +
             (C37682 + C37683 + C37684) * C50597 * C50821) *
                C50724 -
            ((C37273 + C37272 + C37271) * C50597 * C50821 +
             (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 + C2271 * C279 +
              C2501 + C2501 + C2265 * C299 + C2269 * C278 + C2502 + C2502 +
              C2264 * C298) *
                 C50597 * C33790) *
                C1651) *
               C50696) *
              C50860 +
          ((((C2738 + C2737 + C2736) * C50597 * C33790 +
             (C2739 + C2740 + C2741) * C50597 * C50821) *
                C50724 -
            ((C2736 + C2737 + C2738) * C50597 * C50821 +
             (C2329 + C2328 + C2327) * C50597 * C33790) *
                C1651) *
               C50868 +
           (((C2535 + C2534 + C2533) * C50597 * C33790 +
             (C3294 + C3295 + C3296) * C50597 * C50821) *
                C1651 -
            ((C2273 * C3698 + C3705 + C3705 + C2266 * C3702 + C2271 * C2685 +
              C3706 + C3706 + C2265 * C2691 + C2269 * C1192 + C3707 + C3707 +
              C2264 * C1200) *
                 C50597 * C50821 +
             (C3296 + C3295 + C3294) * C50597 * C33790) *
                C50724) *
               C50696) *
              C50631)) /
            (p * q * std::sqrt(p + q));
    d2ee[221] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50741 * C133) * C17149 +
                      C168 * C17150 + C169 * C17151) *
                         C33790 +
                     (C34085 + C34086 + C34087) * C50821) *
                        C50915 -
                    ((C34088 + C34089 + C34090) * C50821 +
                     (C34087 + C34086 + C34085) * C33790) *
                        C50916 +
                    ((C34090 + C34089 + C34088) * C33790 +
                     (C35864 + C35865 + C35866) * C50821) *
                        C2067) *
                       C50868 +
                   (((C34586 + C34587 + C34588) * C33790 +
                     (C34982 + C34983 + C34984) * C50821) *
                        C50916 -
                    ((C34588 + C34587 + C34586) * C50821 +
                     (C341 * C17151 + C342 * C17150 +
                      (C117 * C278 + C315 + C315 + C50741 * C298) * C17149) *
                         C33790) *
                        C50915 -
                    (((C117 * C6064 + C6082 + C6082 + C50741 * C6066) * C17151 +
                      C6091 * C17150 + C6502 * C17149) *
                         C50821 +
                     (C34984 + C34983 + C34982) * C33790) *
                        C2067) *
                       C50696) *
                  C50625) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 +
                      C2271 * C278 + C2277 + C2277 + C2265 * C298 +
                      C2273 * C279 + C2278 + C2278 + C2266 * C299) *
                         C50597 * C33790 +
                     (C36767 + C36768 + C36769) * C50597 * C50821) *
                        C50915 -
                    ((C36770 + C36771 + C36772) * C50597 * C50821 +
                     (C36769 + C36768 + C36767) * C50597 * C33790) *
                        C50916 +
                    ((C36772 + C36771 + C36770) * C50597 * C33790 +
                     (C38594 + C38595 + C38596) * C50597 * C50821) *
                        C2067) *
                       C50868 +
                   (((C37271 + C37272 + C37273) * C50597 * C33790 +
                     (C37682 + C37683 + C37684) * C50597 * C50821) *
                        C50916 -
                    ((C37273 + C37272 + C37271) * C50597 * C50821 +
                     (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 +
                      C2271 * C279 + C2501 + C2501 + C2265 * C299 +
                      C2269 * C278 + C2502 + C2502 + C2264 * C298) *
                         C50597 * C33790) *
                        C50915 -
                    ((C2273 * C21466 + C37673 + C37673 + C2266 * C21468 +
                      C2271 * C4600 + C37674 + C37674 + C2265 * C4608 +
                      C2269 * C4601 + C37675 + C37675 + C2264 * C4609) *
                         C50597 * C50821 +
                     (C37684 + C37683 + C37682) * C50597 * C33790) *
                        C2067) *
                       C50696) *
                  C50625) /
                     (p * q * std::sqrt(p + q));
    d2ee[222] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50741 * C133) * C17149 +
                      C168 * C17150 + C169 * C17151) *
                         C33790 +
                     (C34085 + C34086 + C34087) * C50821) *
                        C1651 -
                    ((C34088 + C34089 + C34090) * C50821 +
                     (C34087 + C34086 + C34085) * C33790) *
                        C50724) *
                       C270 +
                   (((C34586 + C34587 + C34588) * C33790 +
                     (C34982 + C34983 + C34984) * C50821) *
                        C50724 -
                    ((C34588 + C34587 + C34586) * C50821 +
                     (C341 * C17151 + C342 * C17150 +
                      (C117 * C278 + C315 + C315 + C50741 * C298) * C17149) *
                         C33790) *
                        C1651) *
                       C271 +
                   ((((C117 * C279 + C316 + C316 + C50741 * C299) * C17149 +
                      C343 * C17150 + C344 * C17151) *
                         C33790 +
                     (C35471 + C35472 + C35473) * C50821) *
                        C1651 -
                    (((C117 * C2686 + C5358 + C5358 + C50741 * C2692) * C17151 +
                      C5367 * C17150 + C7003 * C17149) *
                         C50821 +
                     (C35473 + C35472 + C35471) * C33790) *
                        C50724) *
                       C272) *
                  C50625) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50741 * C133) * C17149 +
                      C168 * C17150 + C169 * C17151) *
                         C33790 +
                     (C34085 + C34086 + C34087) * C50821) *
                        C1651 -
                    ((C34088 + C34089 + C34090) * C50821 +
                     (C34087 + C34086 + C34085) * C33790) *
                        C50724) *
                       C50644 * C1002 +
                   (((C34091 + C34092 + C34093) * C33790 +
                     (C34094 + C34095 + C34096) * C50821) *
                        C50724 -
                    ((C34093 + C34092 + C34091) * C50821 +
                     (C170 * C17151 + C169 * C17150 + C168 * C17149) * C33790) *
                        C1651) *
                       C50644 * C1003 +
                   (((C169 * C17149 + C170 * C17150 + C171 * C17151) * C33790 +
                     (C34389 + C34390 + C34391) * C50821) *
                        C1651 -
                    (((C117 * C455 + C498 + C498 + C50741 * C475) * C17151 +
                      C516 * C17150 + C515 * C17149) *
                         C50821 +
                     (C34391 + C34390 + C34389) * C33790) *
                        C50724) *
                       C50644 * C1004)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C117 * C119 + C141 + C141 + C50741 * C133) * C17149 +
                     C168 * C17150 + C169 * C17151) *
                        C33790 +
                    (C34085 + C34086 + C34087) * C50821) *
                       C1817 -
                   ((C34088 + C34089 + C34090) * C50821 +
                    (C34087 + C34086 + C34085) * C33790) *
                       C1818 +
                   ((C34090 + C34089 + C34088) * C33790 +
                    (C35864 + C35865 + C35866) * C50821) *
                       C1819 -
                   (((C117 * C5515 + C5543 + C5543 + C50741 * C5521) * C17151 +
                     C5561 * C17150 + C7410 * C17149) *
                        C50821 +
                    (C35866 + C35865 + C35864) * C33790) *
                       C1820) *
                  C50644 * C50625) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 +
                      C2271 * C278 + C2277 + C2277 + C2265 * C298 +
                      C2273 * C279 + C2278 + C2278 + C2266 * C299) *
                         C50597 * C33790 +
                     (C36767 + C36768 + C36769) * C50597 * C50821) *
                        C1651 -
                    ((C36770 + C36771 + C36772) * C50597 * C50821 +
                     (C36769 + C36768 + C36767) * C50597 * C33790) *
                        C50724) *
                       C50644 * C1002 +
                   (((C2738 + C2737 + C2736) * C50597 * C33790 +
                     (C2739 + C2740 + C2741) * C50597 * C50821) *
                        C50724 -
                    ((C2736 + C2737 + C2738) * C50597 * C50821 +
                     (C2329 + C2328 + C2327) * C50597 * C33790) *
                        C1651) *
                       C50644 * C1003 +
                   (((C2332 + C2331 + C2330) * C50597 * C33790 +
                     (C3067 + C3068 + C3069) * C50597 * C50821) *
                        C1651 -
                    ((C2273 * C2686 + C2721 + C2721 + C2266 * C2692 +
                      C2271 * C1191 + C2722 + C2722 + C2265 * C1199 +
                      C2269 * C452 + C2723 + C2723 + C2264 * C472) *
                         C50597 * C50821 +
                     (C3069 + C3068 + C3067) * C50597 * C33790) *
                        C50724) *
                       C50644 * C1004)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 +
                      C2271 * C278 + C2277 + C2277 + C2265 * C298 +
                      C2273 * C279 + C2278 + C2278 + C2266 * C299) *
                         C50597 * C33790 +
                     (C36767 + C36768 + C36769) * C50597 * C50821) *
                        C1651 -
                    ((C36770 + C36771 + C36772) * C50597 * C50821 +
                     (C36769 + C36768 + C36767) * C50597 * C33790) *
                        C50724) *
                       C270 +
                   (((C37271 + C37272 + C37273) * C50597 * C33790 +
                     (C37682 + C37683 + C37684) * C50597 * C50821) *
                        C50724 -
                    ((C37273 + C37272 + C37271) * C50597 * C50821 +
                     (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 +
                      C2271 * C279 + C2501 + C2501 + C2265 * C299 +
                      C2269 * C278 + C2502 + C2502 + C2264 * C298) *
                         C50597 * C33790) *
                        C1651) *
                       C271 +
                   (((C2269 * C279 + C2503 + C2503 + C2264 * C299 +
                      C2271 * C1079 + C2504 + C2504 + C2265 * C1087 +
                      C2273 * C2481 + C2505 + C2505 + C2266 * C2487) *
                         C50597 * C33790 +
                     (C38186 + C38187 + C38188) * C50597 * C50821) *
                        C1651 -
                    ((C2273 * C20864 + C38177 + C38177 + C2266 * C20866 +
                      C2271 * C3699 + C38178 + C38178 + C2265 * C3703 +
                      C2269 * C2684 + C38179 + C38179 + C2264 * C2690) *
                         C50597 * C50821 +
                     (C38188 + C38187 + C38186) * C50597 * C33790) *
                        C50724) *
                       C272) *
                  C50625) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C2269 * C119 + C2276 + C2276 + C2264 * C133 +
                     C2271 * C278 + C2277 + C2277 + C2265 * C298 +
                     C2273 * C279 + C2278 + C2278 + C2266 * C299) *
                        C50597 * C33790 +
                    (C36767 + C36768 + C36769) * C50597 * C50821) *
                       C1817 -
                   ((C36770 + C36771 + C36772) * C50597 * C50821 +
                    (C36769 + C36768 + C36767) * C50597 * C33790) *
                       C1818 +
                   ((C36772 + C36771 + C36770) * C50597 * C33790 +
                    (C38594 + C38595 + C38596) * C50597 * C50821) *
                       C1819 -
                   ((C2273 * C23155 + C38585 + C38585 + C2266 * C23157 +
                     C2271 * C6488 + C38586 + C38586 + C2265 * C6492 +
                     C2269 * C5513 + C38587 + C38587 + C2264 * C5519) *
                        C50597 * C50821 +
                    (C38596 + C38595 + C38594) * C50597 * C33790) *
                       C1820) *
                  C50644 * C50625) /
                     (p * q * std::sqrt(p + q));
    d2ee[223] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50741 * C133) * C17149 +
                      C168 * C17150 + C169 * C17151) *
                         C33790 +
                     (C34085 + C34086 + C34087) * C50821) *
                        C50915 -
                    ((C34088 + C34089 + C34090) * C50821 +
                     (C34087 + C34086 + C34085) * C33790) *
                        C50916 +
                    ((C34090 + C34089 + C34088) * C33790 +
                     (C35864 + C35865 + C35866) * C50821) *
                        C2067) *
                       C50644 * C50860 +
                   (((C34091 + C34092 + C34093) * C33790 +
                     (C34094 + C34095 + C34096) * C50821) *
                        C50916 -
                    ((C34093 + C34092 + C34091) * C50821 +
                     (C170 * C17151 + C169 * C17150 + C168 * C17149) * C33790) *
                        C50915 -
                    (((C117 * C1821 + C1834 + C1834 + C50741 * C1829) * C17151 +
                      C5562 * C17150 + C5559 * C17149) *
                         C50821 +
                     (C34096 + C34095 + C34094) * C33790) *
                        C2067) *
                       C50644 * C50631)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 +
                      C2271 * C278 + C2277 + C2277 + C2265 * C298 +
                      C2273 * C279 + C2278 + C2278 + C2266 * C299) *
                         C50597 * C33790 +
                     (C36767 + C36768 + C36769) * C50597 * C50821) *
                        C50915 -
                    ((C36770 + C36771 + C36772) * C50597 * C50821 +
                     (C36769 + C36768 + C36767) * C50597 * C33790) *
                        C50916 +
                    ((C36772 + C36771 + C36770) * C50597 * C33790 +
                     (C38594 + C38595 + C38596) * C50597 * C50821) *
                        C2067) *
                       C50644 * C50860 +
                   (((C2738 + C2737 + C2736) * C50597 * C33790 +
                     (C2739 + C2740 + C2741) * C50597 * C50821) *
                        C50916 -
                    ((C2736 + C2737 + C2738) * C50597 * C50821 +
                     (C2329 + C2328 + C2327) * C50597 * C33790) *
                        C50915 -
                    ((C2273 * C4598 + C4611 + C4611 + C2266 * C4606 +
                      C2271 * C4599 + C4612 + C4612 + C2265 * C4607 +
                      C2269 * C1823 + C4613 + C4613 + C2264 * C1831) *
                         C50597 * C50821 +
                     (C2741 + C2740 + C2739) * C50597 * C33790) *
                        C2067) *
                       C50644 * C50631)) /
                     (p * q * std::sqrt(p + q));
    d2ee[224] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50741 * C133) * C17149 +
                      C168 * C17150 + C169 * C17151) *
                         C33790 +
                     (C34085 + C34086 + C34087) * C50821) *
                        C1651 -
                    ((C34088 + C34089 + C34090) * C50821 +
                     (C34087 + C34086 + C34085) * C33790) *
                        C50724) *
                       C50644 * C1002 +
                   (((C34091 + C34092 + C34093) * C33790 +
                     (C34094 + C34095 + C34096) * C50821) *
                        C50724 -
                    ((C34093 + C34092 + C34091) * C50821 +
                     (C170 * C17151 + C169 * C17150 + C168 * C17149) * C33790) *
                        C1651) *
                       C50644 * C1003 +
                   (((C169 * C17149 + C170 * C17150 + C171 * C17151) * C33790 +
                     (C34389 + C34390 + C34391) * C50821) *
                        C1651 -
                    (((C117 * C455 + C498 + C498 + C50741 * C475) * C17151 +
                      C516 * C17150 + C515 * C17149) *
                         C50821 +
                     (C34391 + C34390 + C34389) * C33790) *
                        C50724) *
                       C50644 * C1004)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((((C117 * C119 + C141 + C141 + C50741 * C133) * C17149 +
                      C168 * C17150 + C169 * C17151) *
                         C33790 +
                     (C34085 + C34086 + C34087) * C50821) *
                        C1651 -
                    ((C34088 + C34089 + C34090) * C50821 +
                     (C34087 + C34086 + C34085) * C33790) *
                        C50724) *
                       C270 +
                   (((C34586 + C34587 + C34588) * C33790 +
                     (C34982 + C34983 + C34984) * C50821) *
                        C50724 -
                    ((C34588 + C34587 + C34586) * C50821 +
                     (C341 * C17151 + C342 * C17150 +
                      (C117 * C278 + C315 + C315 + C50741 * C298) * C17149) *
                         C33790) *
                        C1651) *
                       C271 +
                   ((((C117 * C279 + C316 + C316 + C50741 * C299) * C17149 +
                      C343 * C17150 + C344 * C17151) *
                         C33790 +
                     (C35471 + C35472 + C35473) * C50821) *
                        C1651 -
                    (((C117 * C2686 + C5358 + C5358 + C50741 * C2692) * C17151 +
                      C5367 * C17150 + C7003 * C17149) *
                         C50821 +
                     (C35473 + C35472 + C35471) * C33790) *
                        C50724) *
                       C272) *
                  C50625) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 +
                      C2271 * C278 + C2277 + C2277 + C2265 * C298 +
                      C2273 * C279 + C2278 + C2278 + C2266 * C299) *
                         C50597 * C33790 +
                     (C36767 + C36768 + C36769) * C50597 * C50821) *
                        C1651 -
                    ((C36770 + C36771 + C36772) * C50597 * C50821 +
                     (C36769 + C36768 + C36767) * C50597 * C33790) *
                        C50724) *
                       C50644 * C1002 +
                   (((C2738 + C2737 + C2736) * C50597 * C33790 +
                     (C2739 + C2740 + C2741) * C50597 * C50821) *
                        C50724 -
                    ((C2736 + C2737 + C2738) * C50597 * C50821 +
                     (C2329 + C2328 + C2327) * C50597 * C33790) *
                        C1651) *
                       C50644 * C1003 +
                   (((C2332 + C2331 + C2330) * C50597 * C33790 +
                     (C3067 + C3068 + C3069) * C50597 * C50821) *
                        C1651 -
                    ((C2273 * C2686 + C2721 + C2721 + C2266 * C2692 +
                      C2271 * C1191 + C2722 + C2722 + C2265 * C1199 +
                      C2269 * C452 + C2723 + C2723 + C2264 * C472) *
                         C50597 * C50821 +
                     (C3069 + C3068 + C3067) * C50597 * C33790) *
                        C50724) *
                       C50644 * C1004)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C2269 * C119 + C2276 + C2276 + C2264 * C133 +
                      C2271 * C278 + C2277 + C2277 + C2265 * C298 +
                      C2273 * C279 + C2278 + C2278 + C2266 * C299) *
                         C50597 * C33790 +
                     (C36767 + C36768 + C36769) * C50597 * C50821) *
                        C1651 -
                    ((C36770 + C36771 + C36772) * C50597 * C50821 +
                     (C36769 + C36768 + C36767) * C50597 * C33790) *
                        C50724) *
                       C270 +
                   (((C37271 + C37272 + C37273) * C50597 * C33790 +
                     (C37682 + C37683 + C37684) * C50597 * C50821) *
                        C50724 -
                    ((C37273 + C37272 + C37271) * C50597 * C50821 +
                     (C2273 * C1079 + C2500 + C2500 + C2266 * C1087 +
                      C2271 * C279 + C2501 + C2501 + C2265 * C299 +
                      C2269 * C278 + C2502 + C2502 + C2264 * C298) *
                         C50597 * C33790) *
                        C1651) *
                       C271 +
                   (((C2269 * C279 + C2503 + C2503 + C2264 * C299 +
                      C2271 * C1079 + C2504 + C2504 + C2265 * C1087 +
                      C2273 * C2481 + C2505 + C2505 + C2266 * C2487) *
                         C50597 * C33790 +
                     (C38186 + C38187 + C38188) * C50597 * C50821) *
                        C1651 -
                    ((C2273 * C20864 + C38177 + C38177 + C2266 * C20866 +
                      C2271 * C3699 + C38178 + C38178 + C2265 * C3703 +
                      C2269 * C2684 + C38179 + C38179 + C2264 * C2690) *
                         C50597 * C50821 +
                     (C38188 + C38187 + C38186) * C50597 * C33790) *
                        C50724) *
                       C272) *
                  C50625) /
                     (p * q * std::sqrt(p + q));
}
