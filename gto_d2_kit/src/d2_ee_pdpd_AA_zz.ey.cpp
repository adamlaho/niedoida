/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_pdpd_AA_zz.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_1212_11_33(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C49731 = ae + be;
    const double C49730 = ae * be;
    const double C49729 = zA - zB;
    const double C49737 = 0 * be;
    const double C49789 = 0 * ae;
    const double C49781 = 0 * be;
    const double C49838 = p + q;
    const double C49837 = p * q;
    const double C49846 = std::pow(ae, 2);
    const double C49844 = bs[3];
    const double C49843 = zP - zQ;
    const double C49852 = bs[4];
    const double C49850 = xP - xQ;
    const double C49860 = bs[5];
    const double C49869 = bs[6];
    const double C49880 = bs[7];
    const double C49909 = bs[2];
    const double C49984 = yP - yQ;
    const double C119 = bs[0];
    const double C50727 = xA - xB;
    const double C50752 = ce + de;
    const double C50751 = ce * de;
    const double C50750 = xC - xD;
    const double C50774 = yC - yD;
    const double C50790 = zC - zD;
    const double C50872 = yA - yB;
    const double C49738 = std::pow(C49731, 2);
    const double C49782 = 2 * C49731;
    const double C49740 = 2 * C49730;
    const double C49739 = C49730 * C49729;
    const double C50888 = std::pow(C49729, 2);
    const double C50952 = C49729 * be;
    const double C50951 = C49729 * ae;
    const double C49784 = C49729 * C49737;
    const double C49783 = -2 * C49737;
    const double C49797 = C49789 / C49731;
    const double C49839 = 2 * C49837;
    const double C49847 = std::pow(C49843, 2);
    const double C49902 = C49843 * ae;
    const double C49862 = std::pow(C49850, 2);
    const double C50023 = std::pow(C49984, 2);
    const double C50730 = C50727 * be;
    const double C50729 = C50727 * ae;
    const double C50728 = std::pow(C50727, 2);
    const double C50754 = 2 * C50752;
    const double C50764 = std::pow(C50752, 2);
    const double C50756 = C50750 * de;
    const double C50755 = C50750 * ce;
    const double C50753 = std::pow(C50750, 2);
    const double C50775 = std::pow(C50774, 2);
    const double C50827 = C50774 * de;
    const double C50826 = C50774 * ce;
    const double C50791 = std::pow(C50790, 2);
    const double C50855 = C50790 * de;
    const double C50854 = C50790 * ce;
    const double C50873 = std::pow(C50872, 2);
    const double C50924 = C50872 * be;
    const double C50923 = C50872 * ae;
    const double C49742 = 2 * C49738;
    const double C50992 = 4 * C49738;
    const double C49791 = C49738 * C49782;
    const double C50738 = std::pow(C49782, -1);
    const double C51014 = std::pow(C49782, -2);
    const double C50889 = C50888 * C49730;
    const double C49793 = C49784 / C49731;
    const double C49792 = ae * C49783;
    const double C49841 = C49839 / C49838;
    const double C133 =
        ((std::pow(zP - zQ, 2) * bs[2] * std::pow(C49839 / C49838, 2) -
          (bs[1] * C49839) / C49838) *
         std::pow(ae, 2)) /
        C49738;
    const double C120 = -(C49850 * bs[1] * C49839) / C49838;
    const double C283 = -(C49984 * bs[1] * C49839) / C49838;
    const double C460 = -(C49843 * bs[1] * C49839) / C49838;
    const double C49854 = C49847 * C49852;
    const double C49863 = C49847 * C49860;
    const double C49871 = C49847 * C49869;
    const double C49883 = C49847 * C49880;
    const double C49903 = C49852 * C49902;
    const double C49912 = C49844 * C49902;
    const double C49926 = C49860 * C49902;
    const double C49938 = C49869 * C49902;
    const double C49959 = C49880 * C49902;
    const double C126 = (-(bs[1] * C49902 * C49839) / C49838) / C49731;
    const double C50731 = C50728 * C49730;
    const double C50765 = std::pow(C50754, -1);
    const double C51001 = std::pow(C50754, -2);
    const double C50769 = 2 * C50764;
    const double C50999 = 4 * C50764;
    const double C50757 = C50753 * C50751;
    const double C50776 = C50775 * C50751;
    const double C50792 = C50791 * C50751;
    const double C50874 = C50873 * C49730;
    const double C49788 = C49737 / C49742;
    const double C49794 = C49781 / C49742;
    const double C50890 = C50889 / C49731;
    const double C49798 = 0 - C49793;
    const double C49845 = -C49841;
    const double C49853 = std::pow(C49841, 4);
    const double C49870 = std::pow(C49841, 6);
    const double C49908 = std::pow(C49841, 2);
    const double C134 = ((xP - xQ) *
                         (bs[2] * std::pow(C49841, 2) +
                          std::pow(zP - zQ, 2) * bs[3] * std::pow(-C49841, 3)) *
                         std::pow(ae, 2)) /
                        C49738;
    const double C50732 = C50731 / C49731;
    const double C50758 = C50757 / C50752;
    const double C50777 = C50776 / C50752;
    const double C50793 = C50792 / C50752;
    const double C50875 = C50874 / C49731;
    const double C50891 = -C50890;
    const double C49802 = C49798 * ae;
    const double C49848 = std::pow(C49845, 3);
    const double C49861 = std::pow(C49845, 5);
    const double C49881 = std::pow(C49845, 7);
    const double C49855 = C49854 * C49853;
    const double C49859 = C49852 * C49853;
    const double C49904 = C49853 * C49903;
    const double C49872 = C49871 * C49870;
    const double C49879 = C49869 * C49870;
    const double C49942 = C49870 * C49938;
    const double C49911 = C49909 * C49908;
    const double C127 = (C49850 * C49908 * C49909 * C49902) / C49731;
    const double C293 = (C49984 * C49908 * C49909 * C49902) / C49731;
    const double C470 = (C49843 * C49908 * C49909 * C49902) / C49731 -
                        (ae * bs[1] * C49839) / (C49838 * C49731);
    const double C50733 = -C50732;
    const double C50759 = -C50758;
    const double C50778 = -C50777;
    const double C50794 = -C50793;
    const double C50876 = -C50875;
    const double C50892 = std::exp(C50891);
    const double C49804 = C49802 / C49731;
    const double C49851 = C49844 * C49848;
    const double C49913 = C49848 * C49912;
    const double C135 =
        ((bs[2] * std::pow(C49841, 2) + C49847 * C49844 * C49848) * C49846 +
         (C49844 * C49848 + C49847 * bs[4] * std::pow(C49841, 4)) * C49846 *
             std::pow(xP - xQ, 2)) /
        C49738;
    const double C303 =
        ((yP - yQ) * (bs[2] * std::pow(C49841, 2) + C49847 * C49844 * C49848) *
         C49846) /
        C49738;
    const double C480 =
        (2 * ae * C49908 * C49909 * C49902 +
         C49843 * (C49909 * C49908 + C49847 * C49844 * C49848) * C49846) /
        C49738;
    const double C49864 = C49863 * C49861;
    const double C49868 = C49860 * C49861;
    const double C49928 = C49861 * C49926;
    const double C49884 = C49883 * C49881;
    const double C49964 = C49881 * C49959;
    const double C49927 = C49859 * C49862;
    const double C49939 = C49850 * C49859;
    const double C50076 = C49859 * C50023;
    const double C50133 = C49984 * C49859;
    const double C50202 = C49859 * C49847;
    const double C50201 = C49843 * C49859;
    const double C50200 = C49859 * ae;
    const double C49919 = C49850 * C49904;
    const double C50016 = C49984 * C49904;
    const double C50061 = C49843 * C49904;
    const double C50196 = ae * C49904;
    const double C49962 = C49879 * C49862;
    const double C50115 = C49850 * C49879;
    const double C50414 = C49879 * C50023;
    const double C50471 = C49984 * C49879;
    const double C50514 = C49879 * C49847;
    const double C50513 = C49843 * C49879;
    const double C50512 = C49879 * ae;
    const double C49945 = C49942 * C49862;
    const double C49958 = C49850 * C49942;
    const double C50132 = C49942 * C50023;
    const double C50308 = C49984 * C49942;
    const double C50372 = C49843 * C49942;
    const double C50506 = ae * C49942;
    const double C49914 = C49911 * ae;
    const double C121 = C49911 * C49862 - (bs[1] * C49839) / C49838;
    const double C282 = C49984 * C49850 * C49911;
    const double C284 = C49911 * C50023 - (bs[1] * C49839) / C49838;
    const double C459 = C49843 * C49850 * C49911;
    const double C461 = C49911 * C49847 - (bs[1] * C49839) / C49838;
    const double C886 = C49843 * C49984 * C49911;
    const double C50734 = std::exp(C50733);
    const double C50760 = std::exp(C50759);
    const double C50779 = std::exp(C50778);
    const double C50795 = std::exp(C50794);
    const double C50877 = std::exp(C50876);
    const double C144 = C50892 * C134;
    const double C49741 = C49739 * C50892;
    const double C117 =
        -((C50892 - (C49729 * 2 * C49730 * C49729 * C50892) / C49731) * 2 *
          C49730) /
        C49731;
    const double C118 = -(2 * C49730 * C49729 * C50892) / C49731;
    const double C50953 = C50892 * C50951;
    const double C50956 = C50738 * C50892;
    const double C51022 = C50892 * C50952;
    const double C51015 = C50892 / C49782;
    const double C5112 = C51014 * C50892;
    const double C49805 = C49804 - C49794;
    const double C49856 = C49851 + C49855;
    const double C49920 = C49850 * C49851;
    const double C50017 = C49984 * C49851;
    const double C50063 = C49843 * C49851;
    const double C50062 = C49851 * ae;
    const double C122 =
        2 * C49850 * C49911 + C49850 * (C49911 + C49851 * C49862);
    const double C281 = C49984 * (C49911 + C49851 * C49862);
    const double C458 = C49843 * (C49911 + C49851 * C49862);
    const double C1101 =
        2 * C49984 * C49911 + C49984 * (C49911 + C49851 * C50023);
    const double C1562 = C49843 * (C49911 + C49851 * C50023);
    const double C1846 =
        2 * C49843 * C49911 + C49843 * (C49911 + C49851 * C49847);
    const double C49915 = C49843 * C49913;
    const double C128 = (C49908 * C49909 * C49902 + C49913 * C49862) / C49731;
    const double C129 =
        (2 * C49850 * C49913 + C49850 * (C49913 + C49904 * C49862)) / C49731;
    const double C291 = (C49984 * (C49913 + C49904 * C49862)) / C49731;
    const double C292 = (C49984 * C49850 * C49913) / C49731;
    const double C294 = (C49908 * C49909 * C49902 + C49913 * C50023) / C49731;
    const double C468 = (C49843 * (C49913 + C49904 * C49862) +
                         (C49911 + C49851 * C49862) * ae) /
                        C49731;
    const double C469 =
        (C49843 * C49850 * C49913 + C49850 * C49911 * ae) / C49731;
    const double C891 =
        (C49843 * C49984 * C49913 + C49984 * C49911 * ae) / C49731;
    const double C1105 =
        (2 * C49984 * C49913 + C49984 * (C49913 + C49904 * C50023)) / C49731;
    const double C1566 = (C49843 * (C49913 + C49904 * C50023) +
                          (C49911 + C49851 * C50023) * ae) /
                         C49731;
    const double C147 = C50892 * C135;
    const double C2457 = C50892 * C303;
    const double C49865 = C49859 + C49864;
    const double C49873 = C49868 + C49872;
    const double C49940 = C49868 * C49862;
    const double C49961 = C49850 * C49868;
    const double C50134 = C49868 * C50023;
    const double C50309 = C49984 * C49868;
    const double C50375 = C49868 * C49847;
    const double C50374 = C49843 * C49868;
    const double C50373 = C49868 * ae;
    const double C49930 = C49928 * C49862;
    const double C49937 = C49850 * C49928;
    const double C50075 = C49928 * C50023;
    const double C50131 = C49984 * C49928;
    const double C50199 = C49843 * C49928;
    const double C50368 = ae * C49928;
    const double C49885 = C49879 + C49884;
    const double C49967 = C49964 * C49862;
    const double C50113 = C49850 * C49964;
    const double C50411 = C49964 * C50023;
    const double C50470 = C49984 * C49964;
    const double C50511 = C49843 * C49964;
    const double C49929 = C49851 + C49927;
    const double C49943 = 2 * C49939;
    const double C50010 = C49984 * C49939;
    const double C50052 = C49843 * C49939;
    const double C50051 = C49939 * ae;
    const double C50078 = C49851 + C50076;
    const double C50137 = 2 * C50133;
    const double C50187 = C49843 * C50133;
    const double C50186 = C50133 * ae;
    const double C50206 = C49851 + C50202;
    const double C50205 = C50201 * ae;
    const double C50376 = 2 * C50201;
    const double C49921 = C49843 * C49919;
    const double C295 = (C49850 * C49913 + C49919 * C50023) / C49731;
    const double C50018 = C49843 * C50016;
    const double C50203 = 2 * C50196;
    const double C49966 = C49868 + C49962;
    const double C50119 = C50115 * C50023;
    const double C50283 = C49984 * C50115;
    const double C50339 = C50115 * C49847;
    const double C50338 = C49843 * C50115;
    const double C50337 = C50115 * ae;
    const double C50416 = C49868 + C50414;
    const double C50479 = C50471 * C49847;
    const double C50478 = C49843 * C50471;
    const double C50477 = C50471 * ae;
    const double C50522 = C49868 + C50514;
    const double C50521 = C50513 * ae;
    const double C49947 = C49928 + C49945;
    const double C49963 = 2 * C49958;
    const double C50084 = C49958 * C50023;
    const double C50112 = C49984 * C49958;
    const double C50222 = C49843 * C49958;
    const double C50332 = ae * C49958;
    const double C50136 = C49928 + C50132;
    const double C50312 = C49843 * C50308;
    const double C50410 = 2 * C50308;
    const double C50466 = ae * C50308;
    const double C50519 = 2 * C50506;
    const double C50735 = C50734 * C50729;
    const double C50739 = C50738 * C50734;
    const double C50989 = C50734 * C50730;
    const double C50986 = C50734 / C49782;
    const double C17177 = C51014 * C50734;
    const double C50761 = C50760 * C50755;
    const double C50766 = C50765 * C50760;
    const double C50996 = C50760 * C50756;
    const double C50993 = C50760 / C50754;
    const double C1026 = C51001 * C50760;
    const double C50828 = C50779 * C50826;
    const double C50831 = C50765 * C50779;
    const double C51005 = C50779 * C50827;
    const double C51000 = C50779 / C50754;
    const double C277 = C51001 * C50779;
    const double C50856 = C50795 * C50854;
    const double C50859 = C50765 * C50795;
    const double C51009 = C50795 * C50855;
    const double C51002 = C50795 / C50754;
    const double C456 = C51001 * C50795;
    const double C50925 = C50877 * C50923;
    const double C50928 = C50738 * C50877;
    const double C51018 = C50877 * C50924;
    const double C51013 = C50877 / C49782;
    const double C2288 = C51014 * C50877;
    const double C49743 = 2 * C49741;
    const double C49790 = C49741 / C49738;
    const double C49785 = -4 * C49741;
    const double C5118 = ((0 * ae) / C49731 - C49741 / C49738) / (2 * C49731) +
                         (0 * ae) / C49731;
    const double C10691 = (0 * ae) / C49731 - C49741 / C49738;
    const double C145 = C117 * C121;
    const double C142 = C117 * C120;
    const double C317 = C117 * C282;
    const double C494 = C117 * C459;
    const double C2458 = C117 * C284;
    const double C2456 = C117 * C283;
    const double C3182 = C117 * C886;
    const double C143 = C118 * C127;
    const double C141 = C118 * C126;
    const double C320 = C118 * C293;
    const double C497 = C118 * C470;
    const double C51024 = C50953 / C49742;
    const double C51023 = C50953 * C50952;
    const double C51017 = C50953 / C49731;
    const double C5111 = (2 * C50738 * C50953) / C49731;
    const double C51025 = C50956 * C50952;
    const double C38819 = C50956 / C50992;
    const double C44219 = C50956 / C49782;
    const double C51041 = C51022 / C49731;
    const double C5110 = (C50892 * std::pow(C50951, 2)) / C49738 + C51015;
    const double C49857 = C49856 * C49846;
    const double C49922 = C49920 * ae;
    const double C892 =
        (C49843 * C49984 * C49919 + C49984 * C49920 * ae) / C49731;
    const double C285 = C49850 * C49911 + C49920 * C50023;
    const double C462 = C49850 * C49911 + C49920 * C49847;
    const double C887 = C49843 * C49984 * C49920;
    const double C1100 =
        2 * C49984 * C49920 + C49984 * (C49920 + C49939 * C50023);
    const double C1561 = C49843 * (C49920 + C49939 * C50023);
    const double C1845 =
        2 * C49843 * C49920 + C49843 * (C49920 + C49939 * C49847);
    const double C50019 = C50017 * ae;
    const double C1215 = C49984 * C49911 + C50017 * C49847;
    const double C4513 =
        2 * C49843 * C50017 + C49843 * (C50017 + C50133 * C49847);
    const double C50065 = C50063 * ae;
    const double C50064 = C50061 + C50062;
    const double C148 = C117 * C122;
    const double C314 = C117 * C281;
    const double C491 = C117 * C458;
    const double C2464 = C117 * C1101;
    const double C3180 = C117 * C1562;
    const double C49916 = C49915 + C49914;
    const double C146 = C118 * C128;
    const double C149 = C118 * C129;
    const double C315 = C118 * C291;
    const double C318 = C118 * C292;
    const double C321 = C118 * C294;
    const double C492 = C118 * C468;
    const double C495 = C118 * C469;
    const double C902 = C118 * C891;
    const double C1114 = C118 * C1105;
    const double C1575 = C118 * C1566;
    const double C49866 = C49865 * C49846;
    const double C49874 = C49873 * C49846;
    const double C49944 = C49859 + C49940;
    const double C49965 = 2 * C49961;
    const double C50085 = C49961 * C50023;
    const double C50114 = C49984 * C49961;
    const double C50225 = C49961 * C49847;
    const double C50224 = C49843 * C49961;
    const double C50223 = C49961 * ae;
    const double C50138 = C49859 + C50134;
    const double C50315 = C50309 * C49847;
    const double C50314 = C49843 * C50309;
    const double C50313 = C50309 * ae;
    const double C50413 = 2 * C50309;
    const double C50381 = C49859 + C50375;
    const double C50380 = C50374 * ae;
    const double C50515 = 2 * C50374;
    const double C50379 = C50372 + C50373;
    const double C49932 = C49904 + C49930;
    const double C49941 = 2 * C49937;
    const double C50009 = C49984 * C49937;
    const double C50050 = C49843 * C49937;
    const double C50219 = ae * C49937;
    const double C1104 =
        (2 * C49984 * C49919 + C49984 * (C49919 + C49937 * C50023)) / C49731;
    const double C1565 = (C49843 * (C49919 + C49937 * C50023) +
                          (C49920 + C49939 * C50023) * ae) /
                         C49731;
    const double C50077 = C49904 + C50075;
    const double C50135 = 2 * C50131;
    const double C50185 = C49843 * C50131;
    const double C50305 = ae * C50131;
    const double C50204 = C50199 + C50200;
    const double C50378 = 2 * C50368;
    const double C49886 = C49885 * C49846;
    const double C49969 = C49942 + C49967;
    const double C50117 = C50113 * C50023;
    const double C50282 = C49984 * C50113;
    const double C50336 = C49843 * C50113;
    const double C50415 = C49942 + C50411;
    const double C50476 = C49843 * C50470;
    const double C50520 = C50511 + C50512;
    const double C49931 = C49929 * ae;
    const double C123 = 3 * (C49911 + C49851 * C49862) +
                        C49850 * (2 * C49920 + C49850 * C49929);
    const double C280 = C49984 * (2 * C49920 + C49850 * C49929);
    const double C286 = C49911 + C49851 * C49862 + C49929 * C50023;
    const double C457 = C49843 * (2 * C49920 + C49850 * C49929);
    const double C463 = C49911 + C49851 * C49862 + C49929 * C49847;
    const double C888 = C49843 * C49984 * C49929;
    const double C50012 = C50010 * ae;
    const double C1214 = C49984 * C49920 + C50010 * C49847;
    const double C50054 = C50052 * ae;
    const double C50080 = C50078 * ae;
    const double C2446 = 3 * (C49911 + C49851 * C50023) +
                         C49984 * (2 * C50017 + C49984 * C50078);
    const double C2640 = C49911 + C49851 * C50023 + C50078 * C49847;
    const double C3170 = C49843 * (2 * C50017 + C49984 * C50078);
    const double C50189 = C50187 * ae;
    const double C50209 = C50206 * ae;
    const double C5519 = 3 * (C49911 + C49851 * C49847) +
                         C49843 * (2 * C50063 + C49843 * C50206);
    const double C323 = C118 * C295;
    const double C49968 = C49850 * C49966;
    const double C50094 = C49966 * C50023;
    const double C50248 = C49966 * C49847;
    const double C50247 = C49843 * C49966;
    const double C50246 = C49966 * ae;
    const double C50267 = C49984 * C49966;
    const double C50121 = C49961 + C50119;
    const double C50289 = C50283 * C49847;
    const double C50288 = C49843 * C50283;
    const double C50287 = C50283 * ae;
    const double C50345 = C49961 + C50339;
    const double C50344 = C50338 * ae;
    const double C50418 = C49984 * C50416;
    const double C50448 = C50416 * C49847;
    const double C50447 = C49843 * C50416;
    const double C50446 = C50416 * ae;
    const double C50483 = C50309 + C50479;
    const double C50482 = C50478 * ae;
    const double C50527 = C49843 * C50522;
    const double C50526 = C50522 * ae;
    const double C49949 = C49850 * C49947;
    const double C49957 = 3 * C49947;
    const double C50002 = C49984 * C49947;
    const double C50039 = C49843 * C49947;
    const double C50242 = ae * C49947;
    const double C50086 = C49937 + C50084;
    const double C50116 = 2 * C50112;
    const double C50162 = C49843 * C50112;
    const double C50279 = ae * C50112;
    const double C50342 = 2 * C50332;
    const double C50139 = C49984 * C50136;
    const double C50173 = C49843 * C50136;
    const double C50409 = 3 * C50136;
    const double C50442 = ae * C50136;
    const double C50474 = 2 * C50466;
    const double C50990 = C50735 / C49742;
    const double C50988 = C50735 / C49731;
    const double C50987 = C50735 * C50730;
    const double C17176 = (2 * C50738 * C50735) / C49731;
    const double C50991 = C50739 * C50730;
    const double C110 = C50739 / C50992;
    const double C8015 = C50739 / C49782;
    const double C51027 = C50989 / C49731;
    const double C17175 = (C50734 * std::pow(C50729, 2)) / C49738 + C50986;
    const double C50997 = C50761 / C50769;
    const double C50995 = C50761 / C50752;
    const double C50994 = C50761 * C50756;
    const double C1025 = (2 * C50765 * C50761) / C50752;
    const double C50998 = C50766 * C50756;
    const double C116 = C50766 / C50999;
    const double C635 = C50766 / C50754;
    const double C51030 = C50996 / C50752;
    const double C1024 = (C50760 * std::pow(C50755, 2)) / C50764 + C50993;
    const double C51007 = C50828 / C50769;
    const double C51006 = C50828 * C50827;
    const double C51003 = C50828 / C50752;
    const double C276 = (2 * C50765 * C50828) / C50752;
    const double C51008 = C50831 * C50827;
    const double C1096 = C50831 / C50999;
    const double C1328 = C50831 / C50754;
    const double C51032 = C51005 / C50752;
    const double C275 = (C50779 * std::pow(C50826, 2)) / C50764 + C51000;
    const double C51011 = C50856 / C50769;
    const double C51010 = C50856 * C50855;
    const double C51004 = C50856 / C50752;
    const double C455 = (2 * C50765 * C50856) / C50752;
    const double C51012 = C50859 * C50855;
    const double C1842 = C50859 / C50999;
    const double C2089 = C50859 / C50754;
    const double C51035 = C51009 / C50752;
    const double C454 = (C50795 * std::pow(C50854, 2)) / C50764 + C51002;
    const double C51020 = C50925 / C49742;
    const double C51019 = C50925 * C50924;
    const double C51016 = C50925 / C49731;
    const double C2287 = (2 * C50738 * C50925) / C49731;
    const double C51021 = C50928 * C50924;
    const double C19813 = C50928 / C50992;
    const double C24380 = C50928 / C49782;
    const double C51038 = C51018 / C49731;
    const double C2286 = (C50877 * std::pow(C50923, 2)) / C49738 + C51013;
    const double C49744 = C49729 * C49743;
    const double C33207 = (-C49743 / C49731) / (2 * C49731) - (0 * be) / C49731;
    const double C49801 = C49797 - C49790;
    const double C49795 = C49785 / C49731;
    const double C10705 = C10691 * C468;
    const double C10699 = C10691 * C469;
    const double C10694 = C10691 * C470;
    const double C10910 = C10691 * C1566;
    const double C10907 = C10691 * C891;
    const double C158 = C142 + C143;
    const double C2474 = C2456 + C320;
    const double C51042 = C51023 / C49738;
    const double C10703 = C51017 * C135;
    const double C10697 = C51017 * C134;
    const double C13796 = C51017 * C303;
    const double C51043 = C51025 / C49731;
    const double C33202 = -C51041;
    const double C5140 = C5110 * C135;
    const double C5125 = C5110 * C134;
    const double C21790 = C5110 * C303;
    const double C136 =
        (2 * C49850 * C49857 +
         C49850 * (C49857 +
                   (C49852 * C49853 + C49847 * bs[5] * std::pow(C49845, 5)) *
                       C49846 * std::pow(C49850, 2))) /
        C49738;
    const double C302 = ((yP - yQ) * C49850 * C49857) / C49738;
    const double C304 =
        ((bs[2] * std::pow(C49841, 2) + C49847 * C49844 * C49848) * C49846 +
         C49857 * std::pow(yP - yQ, 2)) /
        C49738;
    const double C479 = (2 * ae * C49850 * C49848 * C49844 * C49902 +
                         C49843 * C49850 * C49857) /
                        C49738;
    const double C896 =
        (2 * ae * C49984 * C49913 + C49843 * C49984 * C49857) / C49738;
    const double C49923 = C49921 + C49922;
    const double C904 = C118 * C892;
    const double C10902 = C10691 * C892;
    const double C322 = C117 * C285;
    const double C499 = C117 * C462;
    const double C903 = C117 * C887;
    const double C2460 = C117 * C1100;
    const double C2650 = C117 * C1561;
    const double C50020 = C50018 + C50019;
    const double C3610 = C117 * C1215;
    const double C50067 = ae * C50064;
    const double C50066 = C49843 * C50064;
    const double C50198 = 2 * C50064;
    const double C49917 = ae * C49916;
    const double C471 =
        (C49908 * C49909 * C49902 + C49843 * C49916 + C49843 * C49911 * ae) /
        C49731;
    const double C159 = C145 + C146;
    const double C160 = C148 + C149;
    const double C334 = C314 + C315;
    const double C335 = C317 + C318;
    const double C2475 = C2458 + C321;
    const double C511 = C491 + C492;
    const double C512 = C494 + C495;
    const double C3192 = C3182 + C902;
    const double C2477 = C2464 + C1114;
    const double C3191 = C3180 + C1575;
    const double C49992 = C49850 * C49866;
    const double C50184 = C49984 * C49866;
    const double C50197 = C49843 * C49866;
    const double C137 =
        (3 * (C49857 + C49866 * C49862) +
         C49850 * (2 * C49850 * C49866 +
                   C49850 * (C49866 + (C49860 * C49861 +
                                       C49847 * bs[6] * std::pow(C49841, 6)) *
                                          C49846 * C49862))) /
        C49738;
    const double C301 = ((yP - yQ) * (C49857 + C49866 * C49862)) / C49738;
    const double C305 =
        (C49850 * C49857 + C49850 * C49866 * std::pow(yP - yQ, 2)) / C49738;
    const double C478 = (2 * ae * (C49848 * C49844 * C49902 + C49904 * C49862) +
                         C49843 * (C49857 + C49866 * C49862)) /
                        C49738;
    const double C897 =
        (2 * ae * C49984 * C49919 + C49843 * C49984 * C49850 * C49866) / C49738;
    const double C1109 = (2 * C49984 * C49857 +
                          C49984 * (C49857 + C49866 * std::pow(C49984, 2))) /
                         C49738;
    const double C1570 = (2 * ae * (C49913 + C49904 * C50023) +
                          C49843 * (C49857 + C49866 * C50023)) /
                         C49738;
    const double C49875 = C49874 * C49862;
    const double C49878 = C49850 * C49874;
    const double C50109 = C49874 * C50023;
    const double C50306 = C49984 * C49874;
    const double C50369 = C49843 * C49874;
    const double C2452 =
        (3 * (C49857 + C49866 * C50023) +
         C49984 * (2 * C49984 * C49866 + C49984 * (C49866 + C49874 * C50023))) /
        C49738;
    const double C49946 = C49850 * C49944;
    const double C49960 = 3 * C49944;
    const double C50003 = C49984 * C49944;
    const double C50041 = C49843 * C49944;
    const double C50040 = C49944 * ae;
    const double C1099 =
        2 * C49984 * C49929 + C49984 * (C49929 + C49944 * C50023);
    const double C1560 = C49843 * (C49929 + C49944 * C50023);
    const double C1844 =
        2 * C49843 * C49929 + C49843 * (C49929 + C49944 * C49847);
    const double C50087 = C49939 + C50085;
    const double C50118 = 2 * C50114;
    const double C50164 = C49843 * C50114;
    const double C50163 = C50114 * ae;
    const double C4511 =
        2 * C49843 * C50010 + C49843 * (C50010 + C50114 * C49847);
    const double C50229 = C49939 + C50225;
    const double C50228 = C50224 * ae;
    const double C50340 = 2 * C50224;
    const double C50227 = C50222 + C50223;
    const double C50140 = C49984 * C50138;
    const double C50175 = C49843 * C50138;
    const double C50174 = C50138 * ae;
    const double C50412 = 3 * C50138;
    const double C4512 =
        2 * C49843 * C50078 + C49843 * (C50078 + C50138 * C49847);
    const double C50319 = C50133 + C50315;
    const double C50318 = C50314 * ae;
    const double C50472 = 2 * C50314;
    const double C50317 = C50312 + C50313;
    const double C50385 = C49843 * C50381;
    const double C50384 = C50381 * ae;
    const double C50516 = 3 * C50381;
    const double C50386 = ae * C50379;
    const double C50383 = C49843 * C50379;
    const double C50510 = 2 * C50379;
    const double C49933 = C49843 * C49932;
    const double C130 = (3 * (C49913 + C49904 * C49862) +
                         C49850 * (2 * C49919 + C49850 * C49932)) /
                        C49731;
    const double C290 = (C49984 * (2 * C49919 + C49850 * C49932)) / C49731;
    const double C296 = (C49913 + C49904 * C49862 + C49932 * C50023) / C49731;
    const double C467 = (C49843 * (2 * C49919 + C49850 * C49932) +
                         (2 * C49920 + C49850 * C49929) * ae) /
                        C49731;
    const double C893 =
        (C49843 * C49984 * C49932 + C49984 * C49929 * ae) / C49731;
    const double C1103 =
        (2 * C49984 * C49932 + C49984 * (C49932 + C49947 * C50023)) / C49731;
    const double C1564 = (C49843 * (C49932 + C49947 * C50023) +
                          (C49929 + C49944 * C50023) * ae) /
                         C49731;
    const double C50011 = C49843 * C50009;
    const double C50053 = C50050 + C50051;
    const double C50226 = 2 * C50219;
    const double C1113 = C118 * C1104;
    const double C1574 = C118 * C1565;
    const double C10915 = C10691 * C1565;
    const double C50079 = C49843 * C50077;
    const double C3176 =
        (2 * ae * (2 * C50016 + C49984 * C50077) +
         C49843 * (2 * C49984 * C49866 + C49984 * (C49866 + C49874 * C50023))) /
        C49738;
    const double C2449 = (3 * (C49913 + C49904 * C50023) +
                          C49984 * (2 * C50016 + C49984 * C50077)) /
                         C49731;
    const double C3173 = (C49843 * (2 * C50016 + C49984 * C50077) +
                          (2 * C50017 + C49984 * C50078) * ae) /
                         C49731;
    const double C50188 = C50185 + C50186;
    const double C50310 = 2 * C50305;
    const double C50210 = ae * C50204;
    const double C50208 = C49843 * C50204;
    const double C50371 = 2 * C50204;
    const double C49887 = C49886 * C49862;
    const double C50105 = C49850 * C49886;
    const double C50404 = C49886 * C50023;
    const double C50467 = C49984 * C49886;
    const double C50507 = C49843 * C49886;
    const double C49971 = C49850 * C49969;
    const double C50093 = C49969 * C50023;
    const double C50245 = C49843 * C49969;
    const double C50266 = C49984 * C49969;
    const double C50120 = C49958 + C50117;
    const double C50286 = C49843 * C50282;
    const double C50343 = C50336 + C50337;
    const double C50417 = C49984 * C50415;
    const double C50445 = C49843 * C50415;
    const double C50481 = C50476 + C50477;
    const double C50528 = ae * C50520;
    const double C50525 = C49843 * C50520;
    const double C151 = C117 * C123;
    const double C311 = C117 * C280;
    const double C325 = C117 * C286;
    const double C488 = C117 * C457;
    const double C502 = C117 * C463;
    const double C906 = C117 * C888;
    const double C2656 = C117 * C1214;
    const double C3451 = C117 * C2446;
    const double C3612 = C117 * C2640;
    const double C4114 = C117 * C3170;
    const double C49970 = C49965 + C49968;
    const double C50096 = C49944 + C50094;
    const double C50252 = C49944 + C50248;
    const double C50251 = C50247 * ae;
    const double C50270 = C49843 * C50267;
    const double C50269 = C50267 * ae;
    const double C50123 = C49984 * C50121;
    const double C50152 = C49843 * C50121;
    const double C50151 = C50121 * ae;
    const double C50293 = C50114 + C50289;
    const double C50292 = C50288 * ae;
    const double C50349 = C49843 * C50345;
    const double C50348 = C50345 * ae;
    const double C50420 = C50413 + C50418;
    const double C50452 = C50138 + C50448;
    const double C50451 = C50447 * ae;
    const double C50487 = C49843 * C50483;
    const double C50486 = C50483 * ae;
    const double C50531 = C50515 + C50527;
    const double C49951 = C49941 + C49949;
    const double C50004 = C49843 * C50002;
    const double C50249 = 2 * C50242;
    const double C50088 = C49843 * C50086;
    const double C2450 = (3 * (C49919 + C49937 * C50023) +
                          C49984 * (2 * C50009 + C49984 * C50086)) /
                         C49731;
    const double C50284 = 2 * C50279;
    const double C50141 = C50135 + C50139;
    const double C50449 = 2 * C50442;
    const double C51026 = C50987 / C49738;
    const double C51028 = C50991 / C49731;
    const double C2289 = -C51027;
    const double C51029 = C50994 / C50764;
    const double C51031 = C50998 / C50752;
    const double C278 = -C51030;
    const double C51033 = C51006 / C50764;
    const double C51034 = C51008 / C50752;
    const double C1022 = -C51032;
    const double C51036 = C51010 / C50764;
    const double C51037 = C51012 / C50752;
    const double C1673 = -C51035;
    const double C51039 = C51019 / C49738;
    const double C51040 = C51021 / C49731;
    const double C17173 = -C51038;
    const double C49745 = C49744 / C49731;
    const double C33221 = C33207 * C468;
    const double C33215 = C33207 * C469;
    const double C33210 = C33207 * C470;
    const double C33431 = C33207 * C1565;
    const double C33426 = C33207 * C1566;
    const double C33423 = C33207 * C891;
    const double C33418 = C33207 * C892;
    const double C38827 =
        (C49801 / C49782 - (0 * be) / C49731) / C49782 + (0 * ae) / C49731;
    const double C44225 = C49801 / C49782 - (0 * be) / C49731;
    const double C163 = C158 + C143;
    const double C2480 = C2474 + C320;
    const double C51054 = C51015 - C51042;
    const double C51055 = C51024 - C51043;
    const double C33219 = C33202 * C135;
    const double C33213 = C33202 * C134;
    const double C36232 = C33202 * C303;
    const double C150 = C50892 * C136;
    const double C5143 = C5110 * C136;
    const double C10712 = C51017 * C136;
    const double C33228 = C33202 * C136;
    const double C319 = C50892 * C302;
    const double C5334 = C5110 * C302;
    const double C10906 = C51017 * C302;
    const double C33422 = C33202 * C302;
    const double C2459 = C50892 * C304;
    const double C13805 = C51017 * C304;
    const double C21800 = C5110 * C304;
    const double C36236 = C33202 * C304;
    const double C496 = C50892 * C479;
    const double C5128 = C5111 * C479;
    const double C5537 = C5110 * C479;
    const double C10700 = C50956 * C479;
    const double C11108 = C51017 * C479;
    const double C33216 = C50956 * C479;
    const double C33624 = C33202 * C479;
    const double C3183 = C50892 * C896;
    const double C13798 = C50956 * C896;
    const double C14684 = C51017 * C896;
    const double C21792 = C5111 * C896;
    const double C22456 = C5110 * C896;
    const double C36234 = C50956 * C896;
    const double C36920 = C33202 * C896;
    const double C49924 = ae * C49923;
    const double C472 =
        (C49850 * C49913 + C49843 * C49923 + C49843 * C49920 * ae) / C49731;
    const double C336 = C322 + C323;
    const double C913 = C903 + C904;
    const double C50021 = ae * C50020;
    const double C1219 =
        (C49984 * C49913 + C49843 * C50020 + C49843 * C50017 * ae) / C49731;
    const double C50068 = C49913 + C50066;
    const double C481 =
        ((C49911 + C49847 * C49844 * C49848) * C49846 + C49917 + C49917 +
         C49843 * (2 * ae * C49913 + C49843 * C49857)) /
        C49738;
    const double C498 = C118 * C471;
    const double C5122 = C5118 * C471;
    const double C11109 = C10691 * C471;
    const double C33625 = C33207 * C471;
    const double C164 = C159 + C146;
    const double C165 = C160 + C149;
    const double C340 = C334 + C315;
    const double C341 = C335 + C318;
    const double C2481 = C2475 + C321;
    const double C517 = C511 + C492;
    const double C518 = C512 + C495;
    const double C3195 = C3192 + C902;
    const double C2483 = C2477 + C1114;
    const double C3194 = C3191 + C1575;
    const double C50207 = C50203 + C50197;
    const double C153 = C50892 * C137;
    const double C10715 = C51017 * C137;
    const double C33231 = C33202 * C137;
    const double C316 = C50892 * C301;
    const double C5724 = C5110 * C301;
    const double C10900 = C51017 * C301;
    const double C33416 = C33202 * C301;
    const double C324 = C50892 * C305;
    const double C5343 = C5110 * C305;
    const double C10913 = C51017 * C305;
    const double C33429 = C33202 * C305;
    const double C493 = C50892 * C478;
    const double C5137 = C5111 * C478;
    const double C5888 = C5110 * C478;
    const double C10706 = C50956 * C478;
    const double C11102 = C51017 * C478;
    const double C33222 = C50956 * C478;
    const double C33618 = C33202 * C478;
    const double C905 = C50892 * C897;
    const double C5331 = C5111 * C897;
    const double C6107 = C5110 * C897;
    const double C10903 = C50956 * C897;
    const double C11671 = C51017 * C897;
    const double C33419 = C50956 * C897;
    const double C34187 = C33202 * C897;
    const double C2465 = C50892 * C1109;
    const double C15027 = C51017 * C1109;
    const double C22711 = C5110 * C1109;
    const double C36242 = C33202 * C1109;
    const double C3181 = C50892 * C1570;
    const double C13803 = C50956 * C1570;
    const double C15895 = C51017 * C1570;
    const double C21798 = C5111 * C1570;
    const double C23382 = C5110 * C1570;
    const double C36238 = C50956 * C1570;
    const double C36916 = C33202 * C1570;
    const double C49876 = C49866 + C49875;
    const double C49882 = 2 * C49878;
    const double C50161 = C49984 * C49878;
    const double C50220 = C49843 * C49878;
    const double C1108 = (2 * C49984 * C49992 +
                          C49984 * (C49992 + C49878 * std::pow(C49984, 2))) /
                         C49738;
    const double C1569 = (2 * ae * (C49919 + C49937 * C50023) +
                          C49843 * (C49992 + C49878 * C50023)) /
                         C49738;
    const double C2453 =
        (3 * (C49992 + C49878 * C50023) +
         C49984 * (2 * C49984 * C49878 +
                   C49984 * (C49878 + C49850 * C49886 * C50023))) /
        C49738;
    const double C3177 =
        (2 * ae * (2 * C50009 + C49984 * C50086) +
         C49843 * (2 * C49984 * C49878 +
                   C49984 * (C49878 + C49850 * C49886 * C50023))) /
        C49738;
    const double C50110 = C49866 + C50109;
    const double C50311 = C49843 * C50306;
    const double C50403 = 2 * C50306;
    const double C50382 = C50378 + C50369;
    const double C3452 = C50892 * C2452;
    const double C31559 = C51017 * C2452;
    const double C37193 = C33202 * C2452;
    const double C49948 = C49943 + C49946;
    const double C50005 = C50003 * ae;
    const double C1213 = C49984 * C49929 + C50003 * C49847;
    const double C6098 =
        2 * C49843 * C50003 + C49843 * (C50003 + C50267 * C49847);
    const double C50043 = C50041 * ae;
    const double C50042 = C50039 + C50040;
    const double C2471 = C117 * C1099;
    const double C2971 = C117 * C1560;
    const double C50089 = C50087 * ae;
    const double C3174 = (C49843 * (2 * C50009 + C49984 * C50086) +
                          (2 * C50010 + C49984 * C50087) * ae) /
                         C49731;
    const double C2447 = 3 * (C49920 + C49939 * C50023) +
                         C49984 * (2 * C50010 + C49984 * C50087);
    const double C2641 = C49920 + C49939 * C50023 + C50087 * C49847;
    const double C3171 = C49843 * (2 * C50010 + C49984 * C50087);
    const double C4510 =
        2 * C49843 * C50087 + C49843 * (C50087 + C50121 * C49847);
    const double C50166 = C50164 * ae;
    const double C50165 = C50162 + C50163;
    const double C50232 = C50229 * ae;
    const double C5520 = 3 * (C49920 + C49939 * C49847) +
                         C49843 * (2 * C50052 + C49843 * C50229);
    const double C50233 = ae * C50227;
    const double C50231 = C49843 * C50227;
    const double C50335 = 2 * C50227;
    const double C50142 = C50137 + C50140;
    const double C50177 = C50175 * ae;
    const double C50176 = C50173 + C50174;
    const double C50321 = C50319 * ae;
    const double C6522 = 3 * (C50017 + C50133 * C49847) +
                         C49843 * (2 * C50187 + C49843 * C50319);
    const double C50322 = ae * C50317;
    const double C50320 = C49843 * C50317;
    const double C50469 = 2 * C50317;
    const double C50389 = C50376 + C50385;
    const double C50505 = C49874 + C50386;
    const double C50388 = C49928 + C50383;
    const double C49934 = C49933 + C49931;
    const double C152 = C118 * C130;
    const double C312 = C118 * C290;
    const double C326 = C118 * C296;
    const double C489 = C118 * C467;
    const double C10708 = C10691 * C467;
    const double C33224 = C33207 * C467;
    const double C907 = C118 * C893;
    const double C10896 = C10691 * C893;
    const double C33412 = C33207 * C893;
    const double C1112 = C118 * C1103;
    const double C1573 = C118 * C1564;
    const double C10921 = C10691 * C1564;
    const double C33437 = C33207 * C1564;
    const double C50013 = C50011 + C50012;
    const double C50056 = ae * C50053;
    const double C50055 = C49843 * C50053;
    const double C50221 = 2 * C50053;
    const double C2476 = C2460 + C1113;
    const double C2662 = C2650 + C1574;
    const double C50081 = C50079 + C50080;
    const double C4115 = C50892 * C3176;
    const double C15029 = C50956 * C3176;
    const double C22713 = C5111 * C3176;
    const double C32216 = C51017 * C3176;
    const double C36240 = C50956 * C3176;
    const double C37860 = C33202 * C3176;
    const double C2466 = C118 * C2449;
    const double C3184 = C118 * C3173;
    const double C11943 = C10691 * C3173;
    const double C34459 = C33207 * C3173;
    const double C50191 = ae * C50188;
    const double C50190 = C49843 * C50188;
    const double C50307 = 2 * C50188;
    const double C50367 = C49866 + C50210;
    const double C50211 = C49904 + C50208;
    const double C49888 = C49874 + C49887;
    const double C50106 = C50105 * C50023;
    const double C50280 = C49984 * C50105;
    const double C50333 = C49843 * C50105;
    const double C50405 = C49874 + C50404;
    const double C50475 = C49843 * C50467;
    const double C50524 = C50519 + C50507;
    const double C49973 = C49963 + C49971;
    const double C50095 = C49947 + C50093;
    const double C50250 = C50245 + C50246;
    const double C50268 = C49843 * C50266;
    const double C50122 = C49984 * C50120;
    const double C50150 = C49843 * C50120;
    const double C50291 = C50286 + C50287;
    const double C50350 = ae * C50343;
    const double C50347 = C49843 * C50343;
    const double C50419 = C50410 + C50417;
    const double C50450 = C50445 + C50446;
    const double C50488 = ae * C50481;
    const double C50485 = C49843 * C50481;
    const double C50530 = C49942 + C50525;
    const double C49972 = C49850 * C49970;
    const double C49996 = C49984 * C49970;
    const double C50030 = C49843 * C49970;
    const double C50029 = C49970 * ae;
    const double C50098 = C50096 * ae;
    const double C2448 = 3 * (C49929 + C49944 * C50023) +
                         C49984 * (2 * C50003 + C49984 * C50096);
    const double C2642 = C49929 + C49944 * C50023 + C50096 * C49847;
    const double C3172 = C49843 * (2 * C50003 + C49984 * C50096);
    const double C50255 = C50252 * ae;
    const double C5521 = 3 * (C49929 + C49944 * C49847) +
                         C49843 * (2 * C50041 + C49843 * C50252);
    const double C50272 = C50270 * ae;
    const double C50125 = C50118 + C50123;
    const double C50154 = C50152 * ae;
    const double C50295 = C50293 * ae;
    const double C6521 = 3 * (C50010 + C50114 * C49847) +
                         C49843 * (2 * C50164 + C49843 * C50293);
    const double C50353 = C50340 + C50349;
    const double C50422 = C49984 * C50420;
    const double C50433 = C49843 * C50420;
    const double C50432 = C50420 * ae;
    const double C50455 = C50452 * ae;
    const double C22873 = 3 * (C50078 + C50138 * C49847) +
                          C49843 * (2 * C50175 + C49843 * C50452);
    const double C50491 = C50472 + C50487;
    const double C50535 = C49843 * C50531;
    const double C50534 = C50531 * ae;
    const double C49952 = C49843 * C49951;
    const double C131 = (4 * (2 * C49919 + C49850 * C49932) +
                         C49850 * (3 * C49932 + C49850 * C49951)) /
                        C49731;
    const double C297 =
        (2 * C49919 + C49850 * C49932 + C49951 * C50023) / C49731;
    const double C298 = (C49984 * (3 * C49932 + C49850 * C49951)) / C49731;
    const double C2469 = C118 * C2450;
    const double C50143 = C49843 * C50141;
    const double C3447 = (4 * (2 * C50016 + C49984 * C50077) +
                          C49984 * (3 * C50077 + C49984 * C50141)) /
                         C49731;
    const double C51044 = C50986 - C51026;
    const double C51045 = C50990 - C51028;
    const double C51046 = C50993 - C51029;
    const double C51047 = C50997 - C51031;
    const double C51048 = C51000 - C51033;
    const double C51049 = C51007 - C51034;
    const double C51050 = C51002 - C51036;
    const double C51051 = C51011 - C51037;
    const double C51052 = C51013 - C51039;
    const double C51053 = C51020 - C51040;
    const double C49746 = C50892 - C49745;
    const double C44229 = C44225 * C471;
    const double C168 = C163 + C144;
    const double C2486 = C2480 + C2457;
    const double C44250 = C51054 * C136;
    const double C44247 = C51054 * C135;
    const double C44232 = C51054 * C134;
    const double C44450 = C51054 * C305;
    const double C44441 = C51054 * C302;
    const double C44635 = C51054 * C479;
    const double C44822 = C51054 * C301;
    const double C44986 = C51054 * C478;
    const double C45202 = C51054 * C897;
    const double C47252 = C51054 * C304;
    const double C47242 = C51054 * C303;
    const double C47908 = C51054 * C896;
    const double C48163 = C51054 * C1109;
    const double C48831 = C51054 * C1570;
    const double C38816 =
        (C51054 * C50951) / C49731 + (C51017 - C51041) / C49782;
    const double C44244 = C51055 * C478;
    const double C44235 = C51055 * C479;
    const double C44438 = C51055 * C897;
    const double C47250 = C51055 * C1570;
    const double C47244 = C51055 * C896;
    const double C48165 = C51055 * C3176;
    const double C38817 =
        (C51055 * C50951) / C49731 + (2 * C50956 + C51054) / C49782;
    const double C38818 = (C50951 * C50956) / C49742 + C51055 / C49782;
    const double C482 =
        (C49850 * C49857 + C49924 + C49924 +
         C49843 * (2 * ae * C49919 + C49843 * C49850 * C49866)) /
        C49738;
    const double C500 = C118 * C472;
    const double C5130 = C5118 * C472;
    const double C11104 = C10691 * C472;
    const double C33620 = C33207 * C472;
    const double C44237 = C44225 * C472;
    const double C342 = C336 + C323;
    const double C916 = C913 + C904;
    const double C1223 =
        (C49984 * C49857 + C50021 + C50021 +
         C49843 * (2 * ae * C50016 + C49843 * C49984 * C49866)) /
        C49738;
    const double C1228 = C118 * C1219;
    const double C5335 = C5118 * C1219;
    const double C11668 = C10691 * C1219;
    const double C34184 = C33207 * C1219;
    const double C44442 = C44225 * C1219;
    const double C50069 = C50068 + C50065;
    const double C169 = C164 + C147;
    const double C170 = C165 + C150;
    const double C347 = C341 + C319;
    const double C2487 = C2481 + C2459;
    const double C524 = C518 + C496;
    const double C3198 = C3195 + C3183;
    const double C346 = C340 + C316;
    const double C523 = C517 + C493;
    const double C2489 = C2483 + C2465;
    const double C3197 = C3194 + C3181;
    const double C138 =
        (4 * (2 * C49850 * C49866 + C49850 * C49876) +
         C49850 * (3 * C49876 +
                   C49850 * (2 * C49850 * C49874 +
                             C49850 * (C49874 +
                                       (C49869 * C49870 +
                                        C49847 * bs[7] * std::pow(C49845, 7)) *
                                           C49846 * C49862)))) /
        C49738;
    const double C300 =
        ((yP - yQ) * (2 * C49850 * C49866 + C49850 * C49876)) / C49738;
    const double C306 =
        (C49857 + C49866 * C49862 + C49876 * std::pow(yP - yQ, 2)) / C49738;
    const double C477 =
        (2 * ae *
             (2 * C49850 * C49904 +
              C49850 * (C49904 + C49861 * C49860 * C49902 * C49862)) +
         C49843 * (2 * C49850 * C49866 + C49850 * C49876)) /
        C49738;
    const double C898 =
        (2 * ae * C49984 * C49932 + C49843 * C49984 * C49876) / C49738;
    const double C50230 = C50226 + C50220;
    const double C2461 = C50892 * C1108;
    const double C13808 = C51017 * C1108;
    const double C36246 = C33202 * C1108;
    const double C2651 = C50892 * C1569;
    const double C5346 = C5111 * C1569;
    const double C10916 = C50956 * C1569;
    const double C14687 = C51017 * C1569;
    const double C33432 = C50956 * C1569;
    const double C36924 = C33202 * C1569;
    const double C44453 = C51055 * C1569;
    const double C2470 = C50892 * C2453;
    const double C3189 = C50892 * C3177;
    const double C13810 = C50956 * C3177;
    const double C36248 = C50956 * C3177;
    const double C3449 =
        (4 * (2 * C49984 * C49866 + C49984 * C50110) +
         C49984 *
             (3 * C50110 + C49984 * (2 * C49984 * C49874 +
                                     C49984 * (C49874 + C49886 * C50023)))) /
        C49738;
    const double C4112 =
        (2 * ae * (3 * C50077 + C49984 * C50141) +
         C49843 *
             (3 * C50110 + C49984 * (2 * C49984 * C49874 +
                                     C49984 * (C49874 + C49886 * C50023)))) /
        C49738;
    const double C50316 = C50310 + C50311;
    const double C50387 = C49843 * C50382;
    const double C50504 = 2 * C50382;
    const double C49950 = C49948 * ae;
    const double C475 = (C49843 * (3 * C49932 + C49850 * C49951) +
                         (3 * C49929 + C49850 * C49948) * ae) /
                        C49731;
    const double C894 =
        (C49843 * C49984 * C49951 + C49984 * C49948 * ae) / C49731;
    const double C124 = 4 * (2 * C49920 + C49850 * C49929) +
                        C49850 * (3 * C49929 + C49850 * C49948);
    const double C287 = 2 * C49920 + C49850 * C49929 + C49948 * C50023;
    const double C288 = C49984 * (3 * C49929 + C49850 * C49948);
    const double C464 = 2 * C49920 + C49850 * C49929 + C49948 * C49847;
    const double C465 = C49843 * (3 * C49929 + C49850 * C49948);
    const double C889 = C49843 * C49984 * C49948;
    const double C1098 =
        2 * C49984 * C49948 + C49984 * (C49948 + C49970 * C50023);
    const double C1559 = C49843 * (C49948 + C49970 * C50023);
    const double C1843 =
        2 * C49843 * C49948 + C49843 * (C49948 + C49970 * C49847);
    const double C50006 = C50004 + C50005;
    const double C8334 = C117 * C1213;
    const double C50045 = ae * C50042;
    const double C50044 = C49843 * C50042;
    const double C50244 = 2 * C50042;
    const double C50090 = C50088 + C50089;
    const double C3188 = C118 * C3174;
    const double C11941 = C10691 * C3174;
    const double C34457 = C33207 * C3174;
    const double C2468 = C117 * C2447;
    const double C2658 = C117 * C2641;
    const double C3187 = C117 * C3171;
    const double C50168 = ae * C50165;
    const double C50167 = C49843 * C50165;
    const double C50281 = 2 * C50165;
    const double C50331 = C49878 + C50233;
    const double C50234 = C49937 + C50231;
    const double C50144 = C50142 * ae;
    const double C4110 = (C49843 * (3 * C50077 + C49984 * C50141) +
                          (3 * C50078 + C49984 * C50142) * ae) /
                         C49731;
    const double C3445 = 4 * (2 * C50017 + C49984 * C50078) +
                         C49984 * (3 * C50078 + C49984 * C50142);
    const double C3604 = 2 * C50017 + C49984 * C50078 + C50142 * C49847;
    const double C4108 = C49843 * (3 * C50078 + C49984 * C50142);
    const double C21214 =
        2 * C49843 * C50142 + C49843 * (C50142 + C50420 * C49847);
    const double C50179 = ae * C50176;
    const double C50178 = C49843 * C50176;
    const double C50444 = 2 * C50176;
    const double C50465 = C50306 + C50322;
    const double C50323 = C50131 + C50320;
    const double C50392 = C50389 * ae;
    const double C7416 = 4 * (2 * C50063 + C49843 * C50206) +
                         C49843 * (3 * C50206 + C49843 * C50389);
    const double C50518 = C50505 + C50386;
    const double C50391 = C50388 + C50380;
    const double C49935 = ae * C49934;
    const double C473 =
        (C49913 + C49904 * C49862 + C49843 * C49934 + C49843 * C49929 * ae) /
        C49731;
    const double C161 = C151 + C152;
    const double C333 = C311 + C312;
    const double C337 = C325 + C326;
    const double C510 = C488 + C489;
    const double C914 = C906 + C907;
    const double C2479 = C2471 + C1112;
    const double C2973 = C2971 + C1573;
    const double C50014 = ae * C50013;
    const double C1218 =
        (C49984 * C49919 + C49843 * C50013 + C49843 * C50010 * ae) / C49731;
    const double C50057 = C49919 + C50055;
    const double C2482 = C2476 + C1113;
    const double C2665 = C2662 + C1574;
    const double C50082 = ae * C50081;
    const double C2643 =
        (C49913 + C49904 * C50023 + C49843 * C50081 + C49843 * C50078 * ae) /
        C49731;
    const double C3455 = C3451 + C2466;
    const double C4118 = C4114 + C3184;
    const double C50192 = C50016 + C50190;
    const double C50377 = C50367 + C50210;
    const double C50212 = C50211 + C50205;
    const double C49889 = C49850 * C49888;
    const double C50243 = C49843 * C49888;
    const double C50265 = C49984 * C49888;
    const double C1107 = (2 * C49984 * C49876 +
                          C49984 * (C49876 + C49888 * std::pow(C49984, 2))) /
                         C49738;
    const double C1568 = (2 * ae * (C49932 + C49947 * C50023) +
                          C49843 * (C49876 + C49888 * C50023)) /
                         C49738;
    const double C2454 =
        (3 * (C49876 + C49888 * C50023) +
         C49984 * (2 * C49984 * C49888 +
                   C49984 * (C49888 +
                             (C49886 + (C49880 * C49881 +
                                        C49847 * bs[8] * std::pow(C49841, 8)) *
                                           C49846 * C49862) *
                                 C50023))) /
        C49738;
    const double C50107 = C49878 + C50106;
    const double C50285 = C49843 * C50280;
    const double C50346 = C50342 + C50333;
    const double C50406 = C49984 * C50405;
    const double C50443 = C49843 * C50405;
    const double C50480 = C50474 + C50475;
    const double C50529 = C49843 * C50524;
    const double C49975 = C49850 * C49973;
    const double C49995 = C49984 * C49973;
    const double C50028 = C49843 * C49973;
    const double C1102 =
        (2 * C49984 * C49951 + C49984 * (C49951 + C49973 * C50023)) / C49731;
    const double C1563 = (C49843 * (C49951 + C49973 * C50023) +
                          (C49948 + C49970 * C50023) * ae) /
                         C49731;
    const double C50097 = C49843 * C50095;
    const double C3178 =
        (2 * ae * (2 * C50002 + C49984 * C50095) +
         C49843 * (2 * C49984 * C49888 +
                   C49984 * (C49888 +
                             (C49886 + (C49880 * C49881 +
                                        C49847 * bs[8] * std::pow(C49841, 8)) *
                                           C49846 * C49862) *
                                 C50023))) /
        C49738;
    const double C2451 = (3 * (C49932 + C49947 * C50023) +
                          C49984 * (2 * C50002 + C49984 * C50095)) /
                         C49731;
    const double C3175 = (C49843 * (2 * C50002 + C49984 * C50095) +
                          (2 * C50003 + C49984 * C50096) * ae) /
                         C49731;
    const double C50256 = ae * C50250;
    const double C50254 = C49843 * C50250;
    const double C50271 = C50268 + C50269;
    const double C50124 = C50116 + C50122;
    const double C50153 = C50150 + C50151;
    const double C50296 = ae * C50291;
    const double C50294 = C49843 * C50291;
    const double C50352 = C49958 + C50347;
    const double C50421 = C49984 * C50419;
    const double C50431 = C49843 * C50419;
    const double C50456 = ae * C50450;
    const double C50454 = C49843 * C50450;
    const double C50490 = C50308 + C50485;
    const double C50533 = C50530 + C50521;
    const double C49974 = C49960 + C49972;
    const double C49998 = C49996 * ae;
    const double C1212 = C49984 * C49948 + C49996 * C49847;
    const double C50032 = C50030 * ae;
    const double C50127 = C50125 * ae;
    const double C3444 = 4 * (2 * C50010 + C49984 * C50087) +
                         C49984 * (3 * C50087 + C49984 * C50125);
    const double C3603 = 2 * C50010 + C49984 * C50087 + C50125 * C49847;
    const double C4107 = C49843 * (3 * C50087 + C49984 * C50125);
    const double C50356 = C50353 * ae;
    const double C7415 = 4 * (2 * C50052 + C49843 * C50229) +
                         C49843 * (3 * C50229 + C49843 * C50353);
    const double C50424 = C50412 + C50422;
    const double C50435 = C50433 * ae;
    const double C50493 = C50491 * ae;
    const double C23788 = 4 * (2 * C50187 + C49843 * C50319) +
                          C49843 * (3 * C50319 + C49843 * C50491);
    const double C50538 = C50516 + C50535;
    const double C155 = C118 * C131;
    const double C329 = C118 * C297;
    const double C331 = C118 * C298;
    const double C3454 = C118 * C3447;
    const double C107 = (C51044 * C50729) / C49731 + (C50988 - C51027) / C49782;
    const double C108 =
        (C51045 * C50729) / C49731 + (2 * C50739 + C51044) / C49782;
    const double C109 = (C50729 * C50739) / C49742 + C51045 / C49782;
    const double C113 = (C51046 * C50755) / C50752 + (C50995 - C51030) / C50754;
    const double C114 =
        (C51047 * C50755) / C50752 + (2 * C50766 + C51046) / C50754;
    const double C115 = (C50755 * C50766) / C50769 + C51047 / C50754;
    const double C1093 =
        (C51048 * C50826) / C50752 + (C51003 - C51032) / C50754;
    const double C1094 =
        (C51049 * C50826) / C50752 + (2 * C50831 + C51048) / C50754;
    const double C1095 = (C50826 * C50831) / C50769 + C51049 / C50754;
    const double C1839 =
        (C51050 * C50854) / C50752 + (C51004 - C51035) / C50754;
    const double C1840 =
        (C51051 * C50854) / C50752 + (2 * C50859 + C51050) / C50754;
    const double C1841 = (C50854 * C50859) / C50769 + C51051 / C50754;
    const double C19810 =
        (C51052 * C50923) / C49731 + (C51016 - C51038) / C49782;
    const double C19811 =
        (C51053 * C50923) / C49731 + (2 * C50928 + C51052) / C49782;
    const double C19812 = (C50923 * C50928) / C49742 + C51053 / C49782;
    const double C49747 = C49746 * C49740;
    const double C49787 = C49746 * ae;
    const double C5114 =
        (((0 - (C49729 * C49737) / C49731) * ae) / C49731 - (0 * be) / C49742) /
            (2 * C49731) +
        ((C49729 * ((C49746 * ae) / C49731 - C49737 / C49742) + C51017) * ae) /
            C49731 +
        (0 * ae) / C49731 - C49741 / C49738;
    const double C5116 =
        ((C49746 * ae) / C49731 - C49737 / C49742) / (2 * C49731) +
        ((C49729 * ((0 * ae) / C49731 - C49741 / C49738) + C50956) * ae) /
            C49731;
    const double C10689 = (C49746 * ae) / C49731 - C49737 / C49742;
    const double C33205 =
        (-C49737 / C49731) / (2 * C49731) - (C49746 * be) / C49731;
    const double C173 = C168 * C50877;
    const double C2292 = C168 * C2286;
    const double C8017 = C168 * C51016;
    const double C17179 = C168 * C17173;
    const double C24384 = C168 * C51052;
    const double C501 = C50892 * C482;
    const double C5131 = C5112 * C482;
    const double C5546 = C5110 * C482;
    const double C5534 = C5111 * C482;
    const double C11115 = C51017 * C482;
    const double C11105 = C50956 * C482;
    const double C33631 = C33202 * C482;
    const double C33621 = C50956 * C482;
    const double C44238 = C44219 * C482;
    const double C44644 = C51054 * C482;
    const double C44632 = C51055 * C482;
    const double C513 = C499 + C500;
    const double C348 = C342 + C324;
    const double C919 = C916 + C905;
    const double C3611 = C50892 * C1223;
    const double C14682 = C50956 * C1223;
    const double C15235 = C51017 * C1223;
    const double C21794 = C5112 * C1223;
    const double C22454 = C5111 * C1223;
    const double C22878 = C5110 * C1223;
    const double C36918 = C50956 * C1223;
    const double C37351 = C33202 * C1223;
    const double C47246 = C44219 * C1223;
    const double C47906 = C51055 * C1223;
    const double C48327 = C51054 * C1223;
    const double C3616 = C3610 + C1228;
    const double C50070 = ae * C50069;
    const double C1850 =
        (2 * C49916 + C49843 * C50069 + (C49911 + C49851 * C49847) * ae) /
        C49731;
    const double C174 = C169 * C50877;
    const double C2297 = C169 * C2286;
    const double C8019 = C169 * C51016;
    const double C17181 = C169 * C17173;
    const double C24389 = C169 * C51052;
    const double C175 = C170 * C50877;
    const double C2298 = C170 * C2286;
    const double C8022 = C170 * C51016;
    const double C17184 = C170 * C17173;
    const double C24390 = C170 * C51052;
    const double C353 = C347 * C50877;
    const double C2293 = C347 * C2287;
    const double C2463 = C347 * C2286;
    const double C8018 = C347 * C50928;
    const double C8176 = C347 * C51016;
    const double C17180 = C347 * C50928;
    const double C17338 = C347 * C17173;
    const double C24385 = C347 * C51053;
    const double C24541 = C347 * C51052;
    const double C530 = C524 * C50877;
    const double C2653 = C524 * C2286;
    const double C8330 = C524 * C51016;
    const double C17492 = C524 * C17173;
    const double C24693 = C524 * C51052;
    const double C352 = C346 * C50877;
    const double C2296 = C346 * C2287;
    const double C2820 = C346 * C2286;
    const double C8020 = C346 * C50928;
    const double C8174 = C346 * C51016;
    const double C17182 = C346 * C50928;
    const double C17336 = C346 * C17173;
    const double C24388 = C346 * C51053;
    const double C24843 = C346 * C51052;
    const double C529 = C523 * C50877;
    const double C2969 = C523 * C2286;
    const double C8328 = C523 * C51016;
    const double C17490 = C523 * C17173;
    const double C24992 = C523 * C51052;
    const double C156 = C50892 * C138;
    const double C313 = C50892 * C300;
    const double C11301 = C51017 * C300;
    const double C33817 = C33202 * C300;
    const double C327 = C50892 * C306;
    const double C10919 = C51017 * C306;
    const double C33435 = C33202 * C306;
    const double C490 = C50892 * C477;
    const double C5146 = C5111 * C477;
    const double C10709 = C50956 * C477;
    const double C11461 = C51017 * C477;
    const double C33225 = C50956 * C477;
    const double C33977 = C33202 * C477;
    const double C44253 = C51055 * C477;
    const double C908 = C50892 * C898;
    const double C5726 = C5111 * C898;
    const double C10897 = C50956 * C898;
    const double C11677 = C51017 * C898;
    const double C33413 = C50956 * C898;
    const double C34193 = C33202 * C898;
    const double C44824 = C51055 * C898;
    const double C20506 = C50892 * C3449;
    const double C20948 = C50892 * C4112;
    const double C31561 = C50956 * C4112;
    const double C37195 = C50956 * C4112;
    const double C49953 = C49952 + C49950;
    const double C508 = C118 * C475;
    const double C10717 = C10691 * C475;
    const double C33233 = C33207 * C475;
    const double C910 = C118 * C894;
    const double C10924 = C10691 * C894;
    const double C33440 = C33207 * C894;
    const double C154 = C117 * C124;
    const double C328 = C117 * C287;
    const double C640 = C117 * C288;
    const double C505 = C117 * C464;
    const double C750 = C117 * C465;
    const double C909 = C117 * C889;
    const double C50007 = ae * C50006;
    const double C1217 =
        (C49984 * C49932 + C49843 * C50006 + C49843 * C50003 * ae) / C49731;
    const double C50046 = C49932 + C50044;
    const double C50091 = ae * C50090;
    const double C2644 =
        (C49919 + C49937 * C50023 + C49843 * C50090 + C49843 * C50087 * ae) /
        C49731;
    const double C2478 = C2468 + C2469;
    const double C3193 = C3187 + C3188;
    const double C50169 = C50009 + C50167;
    const double C50341 = C50331 + C50233;
    const double C50235 = C50234 + C50228;
    const double C50145 = C50143 + C50144;
    const double C4117 = C118 * C4110;
    const double C15032 = C10691 * C4110;
    const double C36244 = C33207 * C4110;
    const double C20505 = C117 * C3445;
    const double C20612 = C117 * C3604;
    const double C20947 = C117 * C4108;
    const double C50180 = C50077 + C50178;
    const double C50473 = C50465 + C50322;
    const double C50324 = C50323 + C50318;
    const double C50394 = ae * C50391;
    const double C50393 = C49843 * C50391;
    const double C50509 = 3 * C50391;
    const double C483 = (C49857 + C49866 * C49862 + C49935 + C49935 +
                         C49843 * (2 * ae * C49932 + C49843 * C49876)) /
                        C49738;
    const double C503 = C118 * C473;
    const double C5133 = C5118 * C473;
    const double C11098 = C10691 * C473;
    const double C33614 = C33207 * C473;
    const double C44240 = C44225 * C473;
    const double C166 = C161 + C152;
    const double C339 = C333 + C312;
    const double C343 = C337 + C326;
    const double C516 = C510 + C489;
    const double C917 = C914 + C907;
    const double C2485 = C2479 + C1112;
    const double C2974 = C2973 + C1573;
    const double C1222 =
        (C49984 * C49992 + C50014 + C50014 +
         C49843 * (2 * ae * C50009 + C49843 * C49984 * C49878)) /
        C49738;
    const double C1227 = C118 * C1218;
    const double C5327 = C5118 * C1218;
    const double C11673 = C10691 * C1218;
    const double C34189 = C33207 * C1218;
    const double C44434 = C44225 * C1218;
    const double C50058 = C50057 + C50054;
    const double C2488 = C2482 + C2461;
    const double C2668 = C2665 + C2651;
    const double C2646 =
        (C49857 + C49866 * C50023 + C50082 + C50082 +
         C49843 * (2 * ae * C50077 + C49843 * (C49866 + C49874 * C50023))) /
        C49738;
    const double C2654 = C118 * C2643;
    const double C5340 = C5118 * C2643;
    const double C12587 = C10691 * C2643;
    const double C35103 = C33207 * C2643;
    const double C44447 = C44225 * C2643;
    const double C3456 = C3455 + C2466;
    const double C4119 = C4118 + C3184;
    const double C50193 = C50192 + C50189;
    const double C50390 = C50377 + C50387;
    const double C50214 = ae * C50212;
    const double C50213 = C49843 * C50212;
    const double C50370 = 3 * C50212;
    const double C49890 = C49882 + C49889;
    const double C50253 = C50249 + C50243;
    const double C2472 = C50892 * C1107;
    const double C2972 = C50892 * C1568;
    const double C10922 = C50956 * C1568;
    const double C33438 = C50956 * C1568;
    const double C3448 =
        (4 * (2 * C49984 * C49878 + C49984 * C50107) +
         C49984 * (3 * C50107 +
                   C49984 * (2 * C49984 * C50105 +
                             C49984 * (C50105 + C49850 *
                                                    (C49880 * C49881 +
                                                     C49847 * bs[8] *
                                                         std::pow(C49841, 8)) *
                                                    C49846 * C50023)))) /
        C49738;
    const double C50290 = C50284 + C50285;
    const double C50351 = C49843 * C50346;
    const double C50407 = C50403 + C50406;
    const double C50453 = C50449 + C50443;
    const double C50484 = C49843 * C50480;
    const double C50532 = C50518 + C50529;
    const double C49977 = C49957 + C49975;
    const double C49997 = C49843 * C49995;
    const double C50031 = C50028 + C50029;
    const double C1111 = C118 * C1102;
    const double C1572 = C118 * C1563;
    const double C10925 = C10691 * C1563;
    const double C33441 = C33207 * C1563;
    const double C50099 = C50097 + C50098;
    const double C2473 = C118 * C2451;
    const double C3190 = C118 * C3175;
    const double C11939 = C10691 * C3175;
    const double C34455 = C33207 * C3175;
    const double C50257 = C49947 + C50254;
    const double C50274 = ae * C50271;
    const double C50273 = C49843 * C50271;
    const double C50126 = C49843 * C50124;
    const double C4111 =
        (2 * ae * (3 * C50086 + C49984 * C50124) +
         C49843 * (3 * C50107 +
                   C49984 * (2 * C49984 * C50105 +
                             C49984 * (C50105 + C49850 *
                                                    (C49880 * C49881 +
                                                     C49847 * bs[8] *
                                                         std::pow(C49841, 8)) *
                                                    C49846 * C50023)))) /
        C49738;
    const double C3446 = (4 * (2 * C50009 + C49984 * C50086) +
                          C49984 * (3 * C50086 + C49984 * C50124)) /
                         C49731;
    const double C4109 = (C49843 * (3 * C50086 + C49984 * C50124) +
                          (3 * C50087 + C49984 * C50125) * ae) /
                         C49731;
    const double C50156 = ae * C50153;
    const double C50155 = C49843 * C50153;
    const double C50297 = C50112 + C50294;
    const double C50355 = C50352 + C50344;
    const double C50423 = C50409 + C50421;
    const double C50434 = C50431 + C50432;
    const double C50457 = C50136 + C50454;
    const double C50492 = C50490 + C50482;
    const double C50539 = ae * C50533;
    const double C50537 = C49843 * C50533;
    const double C49976 = C49974 * ae;
    const double C125 = 5 * (3 * C49929 + C49850 * C49948) +
                        C49850 * (4 * C49948 + C49850 * C49974);
    const double C289 = 3 * C49929 + C49850 * C49948 + C49974 * C50023;
    const double C466 = 3 * C49929 + C49850 * C49948 + C49974 * C49847;
    const double C636 = C49984 * (4 * C49948 + C49850 * C49974);
    const double C746 = C49843 * (4 * C49948 + C49850 * C49974);
    const double C890 = C49843 * C49984 * C49974;
    const double C50426 = C50424 * ae;
    const double C20501 = 5 * (3 * C50078 + C49984 * C50142) +
                          C49984 * (4 * C50142 + C49984 * C50424);
    const double C20608 = 3 * C50078 + C49984 * C50142 + C50424 * C49847;
    const double C20943 = C49843 * (4 * C50142 + C49984 * C50424);
    const double C50542 = C50538 * ae;
    const double C40276 = 5 * (3 * C50206 + C49843 * C50389) +
                          C49843 * (4 * C50389 + C49843 * C50538);
    const double C49755 = C49729 * C49747;
    const double C5113 =
        (ae * -2 * C49737) / (C49738 * 2 * C49731) +
        (((C49729 * ((-4 * C49741) / C49731 - (C49729 * C49747) / C49731) *
           ae) /
              C49731 +
          2 * ((C49746 * ae) / C49731 - C49737 / C49742)) *
         ae) /
            C49731 -
        C49747 / C49742;
    const double C5117 = (-C49747 / C49731) / (4 * C49738);
    const double C10690 = (-C49747 / C49731) / (2 * C49731);
    const double C33206 = (-C49747 / C49731) / (2 * C49731);
    const double C38826 = (-C49747 / C49731) / (4 * C49791);
    const double C44224 = (-C49747 / C49731) / (4 * C49738);
    const double C49796 = C49787 / C49731;
    const double C5152 = C5114 * C130;
    const double C5142 = C5114 * C129;
    const double C5139 = C5114 * C128;
    const double C5124 = C5114 * C127;
    const double C5120 = C5114 * C126;
    const double C5355 = C5114 * C296;
    const double C5350 = C5114 * C291;
    const double C5342 = C5114 * C295;
    const double C5338 = C5114 * C294;
    const double C5337 = C5114 * C293;
    const double C5333 = C5114 * C292;
    const double C5558 = C5114 * C473;
    const double C5553 = C5114 * C468;
    const double C5545 = C5114 * C472;
    const double C5541 = C5114 * C471;
    const double C5540 = C5114 * C470;
    const double C5536 = C5114 * C469;
    const double C5731 = C5114 * C290;
    const double C5895 = C5114 * C467;
    const double C6116 = C5114 * C893;
    const double C6106 = C5114 * C892;
    const double C6102 = C5114 * C891;
    const double C6375 = C5114 * C1105;
    const double C6372 = C5114 * C1104;
    const double C6533 = C5114 * C1219;
    const double C6530 = C5114 * C1218;
    const double C7025 = C5114 * C1566;
    const double C7022 = C5114 * C1565;
    const double C22718 = C5114 * C2449;
    const double C22885 = C5114 * C2643;
    const double C23389 = C5114 * C3173;
    const double C5151 = C5116 * C475;
    const double C5145 = C5116 * C467;
    const double C5136 = C5116 * C468;
    const double C5127 = C5116 * C469;
    const double C5121 = C5116 * C470;
    const double C5354 = C5116 * C1564;
    const double C5351 = C5116 * C893;
    const double C5345 = C5116 * C1565;
    const double C5339 = C5116 * C1566;
    const double C5336 = C5116 * C891;
    const double C5330 = C5116 * C892;
    const double C5554 = C5116 * C473;
    const double C5539 = C5116 * C471;
    const double C5533 = C5116 * C472;
    const double C5730 = C5116 * C894;
    const double C6109 = C5116 * C1218;
    const double C6103 = C5116 * C1219;
    const double C6374 = C5116 * C3173;
    const double C6371 = C5116 * C3174;
    const double C7024 = C5116 * C2643;
    const double C22717 = C5116 * C4110;
    const double C10720 = C10689 * C131;
    const double C10714 = C10689 * C130;
    const double C10711 = C10689 * C129;
    const double C10702 = C10689 * C128;
    const double C10696 = C10689 * C127;
    const double C10693 = C10689 * C126;
    const double C10926 = C10689 * C297;
    const double C10923 = C10689 * C290;
    const double C10918 = C10689 * C296;
    const double C10912 = C10689 * C295;
    const double C10909 = C10689 * C294;
    const double C10908 = C10689 * C293;
    const double C10905 = C10689 * C292;
    const double C10899 = C10689 * C291;
    const double C11125 = C10689 * C467;
    const double C11120 = C10689 * C473;
    const double C11114 = C10689 * C472;
    const double C11111 = C10689 * C471;
    const double C11110 = C10689 * C470;
    const double C11107 = C10689 * C469;
    const double C11101 = C10689 * C468;
    const double C11305 = C10689 * C298;
    const double C11465 = C10689 * C475;
    const double C11682 = C10689 * C894;
    const double C11676 = C10689 * C893;
    const double C11670 = C10689 * C892;
    const double C11667 = C10689 * C891;
    const double C11944 = C10689 * C1105;
    const double C11942 = C10689 * C1104;
    const double C11940 = C10689 * C1103;
    const double C12096 = C10689 * C1219;
    const double C12094 = C10689 * C1218;
    const double C12588 = C10689 * C1566;
    const double C12586 = C10689 * C1565;
    const double C12584 = C10689 * C1564;
    const double C15033 = C10689 * C2449;
    const double C15031 = C10689 * C2450;
    const double C15241 = C10689 * C2643;
    const double C15901 = C10689 * C3173;
    const double C15899 = C10689 * C3174;
    const double C31563 = C10689 * C3447;
    const double C32220 = C10689 * C4110;
    const double C33236 = C33205 * C131;
    const double C33230 = C33205 * C130;
    const double C33227 = C33205 * C129;
    const double C33218 = C33205 * C128;
    const double C33212 = C33205 * C127;
    const double C33209 = C33205 * C126;
    const double C33442 = C33205 * C297;
    const double C33439 = C33205 * C290;
    const double C33434 = C33205 * C296;
    const double C33428 = C33205 * C295;
    const double C33425 = C33205 * C294;
    const double C33424 = C33205 * C293;
    const double C33421 = C33205 * C292;
    const double C33415 = C33205 * C291;
    const double C33641 = C33205 * C467;
    const double C33636 = C33205 * C473;
    const double C33630 = C33205 * C472;
    const double C33627 = C33205 * C471;
    const double C33626 = C33205 * C470;
    const double C33623 = C33205 * C469;
    const double C33617 = C33205 * C468;
    const double C33821 = C33205 * C298;
    const double C33981 = C33205 * C475;
    const double C34198 = C33205 * C894;
    const double C34192 = C33205 * C893;
    const double C34186 = C33205 * C892;
    const double C34183 = C33205 * C891;
    const double C34460 = C33205 * C1105;
    const double C34458 = C33205 * C1104;
    const double C34456 = C33205 * C1103;
    const double C34612 = C33205 * C1219;
    const double C34610 = C33205 * C1218;
    const double C35104 = C33205 * C1566;
    const double C35102 = C33205 * C1565;
    const double C35100 = C33205 * C1564;
    const double C36251 = C33205 * C2450;
    const double C36243 = C33205 * C2449;
    const double C36423 = C33205 * C2643;
    const double C36928 = C33205 * C3174;
    const double C36921 = C33205 * C3173;
    const double C37197 = C33205 * C3447;
    const double C37864 = C33205 * C4110;
    const double C519 = C513 + C500;
    const double C354 = C348 * C50877;
    const double C2294 = C348 * C2288;
    const double C2467 = C348 * C2286;
    const double C2462 = C348 * C2287;
    const double C8177 = C348 * C51016;
    const double C8175 = C348 * C50928;
    const double C17339 = C348 * C17173;
    const double C17337 = C348 * C50928;
    const double C24386 = C348 * C24380;
    const double C24542 = C348 * C51052;
    const double C24540 = C348 * C51053;
    const double C922 = C919 * C50877;
    const double C2652 = C919 * C2287;
    const double C3185 = C919 * C2286;
    const double C8329 = C919 * C50928;
    const double C8832 = C919 * C51016;
    const double C17491 = C919 * C50928;
    const double C17989 = C919 * C17173;
    const double C24692 = C919 * C51053;
    const double C25189 = C919 * C51052;
    const double C3618 = C3616 + C1228;
    const double C1854 =
        (2 * (2 * ae * C49913 + C49843 * C49857) + C50070 + C50070 +
         C49843 * (C49857 + C50067 + C50067 +
                   C49843 * (2 * ae * C49904 + C49843 * C49866))) /
        C49738;
    const double C1859 = C118 * C1850;
    const double C5542 = C5116 * C1850;
    const double C5538 = C5118 * C1850;
    const double C7427 = C5114 * C1850;
    const double C11112 = C10691 * C1850;
    const double C12984 = C10689 * C1850;
    const double C33628 = C33207 * C1850;
    const double C35500 = C33205 * C1850;
    const double C38832 = C38827 * C1850;
    const double C44636 = C44225 * C1850;
    const double C8025 = C8019 + C8020;
    const double C17187 = C17181 + C17182;
    const double C49954 = ae * C49953;
    const double C474 = (2 * C49919 + C49850 * C49932 + C49843 * C49953 +
                         C49843 * C49948 * ae) /
                        C49731;
    const double C162 = C154 + C155;
    const double C338 = C328 + C329;
    const double C643 = C640 + C331;
    const double C753 = C750 + C508;
    const double C915 = C909 + C910;
    const double C1221 =
        (C49984 * C49876 + C50007 + C50007 +
         C49843 * (2 * ae * C50002 + C49843 * C49984 * C49888)) /
        C49738;
    const double C1226 = C118 * C1217;
    const double C5352 = C5118 * C1217;
    const double C6115 = C5116 * C1217;
    const double C11679 = C10691 * C1217;
    const double C12092 = C10689 * C1217;
    const double C34195 = C33207 * C1217;
    const double C34608 = C33205 * C1217;
    const double C44459 = C44225 * C1217;
    const double C50047 = C50046 + C50043;
    const double C2647 =
        (C49992 + C49878 * C50023 + C50091 + C50091 +
         C49843 *
             (2 * ae * C50086 + C49843 * (C49878 + C49850 * C49886 * C50023))) /
        C49738;
    const double C2659 = C118 * C2644;
    const double C5348 = C5118 * C2644;
    const double C7021 = C5116 * C2644;
    const double C12585 = C10691 * C2644;
    const double C15239 = C10689 * C2644;
    const double C35101 = C33207 * C2644;
    const double C36426 = C33205 * C2644;
    const double C44455 = C44225 * C2644;
    const double C2484 = C2478 + C2469;
    const double C3196 = C3193 + C3188;
    const double C50170 = C50169 + C50166;
    const double C50237 = ae * C50235;
    const double C50236 = C49843 * C50235;
    const double C50334 = 3 * C50235;
    const double C50146 = ae * C50145;
    const double C3606 = (2 * C50016 + C49984 * C50077 + C49843 * C50145 +
                          C49843 * C50142 * ae) /
                         C49731;
    const double C20508 = C20505 + C3454;
    const double C20950 = C20947 + C4117;
    const double C50181 = C50180 + C50177;
    const double C50326 = ae * C50324;
    const double C50325 = C49843 * C50324;
    const double C50468 = 3 * C50324;
    const double C50517 = C50504 + C50394;
    const double C50395 = C50371 + C50393;
    const double C504 = C50892 * C483;
    const double C5134 = C5112 * C483;
    const double C5890 = C5111 * C483;
    const double C11121 = C51017 * C483;
    const double C11099 = C50956 * C483;
    const double C33637 = C33202 * C483;
    const double C33615 = C50956 * C483;
    const double C44241 = C44219 * C483;
    const double C44988 = C51055 * C483;
    const double C514 = C502 + C503;
    const double C171 = C166 + C153;
    const double C345 = C339 + C313;
    const double C349 = C343 + C327;
    const double C522 = C516 + C490;
    const double C920 = C917 + C908;
    const double C2657 = C50892 * C1222;
    const double C5328 = C5112 * C1222;
    const double C6110 = C5111 * C1222;
    const double C11674 = C50956 * C1222;
    const double C14024 = C51017 * C1222;
    const double C34190 = C50956 * C1222;
    const double C41132 = C33202 * C1222;
    const double C44435 = C44219 * C1222;
    const double C45205 = C51055 * C1222;
    const double C2663 = C2656 + C1227;
    const double C50059 = ae * C50058;
    const double C1849 =
        (2 * C49923 + C49843 * C50058 + (C49920 + C49939 * C49847) * ae) /
        C49731;
    const double C2493 = C2488 * C2287;
    const double C2492 = C2488 * C2288;
    const double C8178 = C2488 * C50928;
    const double C17340 = C2488 * C50928;
    const double C24543 = C2488 * C51053;
    const double C24539 = C2488 * C24380;
    const double C2671 = C2668 * C2288;
    const double C3186 = C2668 * C2287;
    const double C8833 = C2668 * C50928;
    const double C17990 = C2668 * C50928;
    const double C24691 = C2668 * C24380;
    const double C25190 = C2668 * C51053;
    const double C3613 = C50892 * C2646;
    const double C15897 = C50956 * C2646;
    const double C21796 = C5112 * C2646;
    const double C23384 = C5111 * C2646;
    const double C31717 = C51017 * C2646;
    const double C36914 = C50956 * C2646;
    const double C37355 = C33202 * C2646;
    const double C47248 = C44219 * C2646;
    const double C48833 = C51055 * C2646;
    const double C3617 = C3612 + C2654;
    const double C3457 = C3456 + C3452;
    const double C4120 = C4119 + C4115;
    const double C50194 = ae * C50193;
    const double C4517 =
        (2 * C50020 + C49843 * C50193 + (C50017 + C50133 * C49847) * ae) /
        C49731;
    const double C50215 = C50198 + C50213;
    const double C139 =
        (5 * (3 * C49876 + C49850 * C49890) +
         C49850 *
             (4 * C49890 +
              C49850 * (3 * C49888 +
                        C49850 * (2 * C49850 * C49886 +
                                  C49850 * (C49886 + (C49880 * C49881 +
                                                      C49847 * bs[8] *
                                                          std::pow(C49841, 8)) *
                                                         C49846 * C49862))))) /
        C49738;
    const double C307 = (2 * C49850 * C49866 + C49850 * C49876 +
                         C49890 * std::pow(yP - yQ, 2)) /
                        C49738;
    const double C308 = ((yP - yQ) * (3 * C49876 + C49850 * C49890)) / C49738;
    const double C309 =
        (3 * C49876 + C49850 * C49890 +
         (3 * C49888 +
          C49850 * (2 * C49850 * C49886 +
                    C49850 * (C49886 + (C49880 * C49881 +
                                        C49847 * bs[8] * std::pow(C49841, 8)) *
                                           C49846 * C49862))) *
             std::pow(yP - yQ, 2)) /
        C49738;
    const double C485 = (2 * ae * (3 * C49932 + C49850 * C49951) +
                         C49843 * (3 * C49876 + C49850 * C49890)) /
                        C49738;
    const double C638 =
        ((yP - yQ) *
         (4 * C49890 +
          C49850 * (3 * C49888 +
                    C49850 * (2 * C49850 * C49886 +
                              C49850 * (C49886 +
                                        (C49880 * C49881 +
                                         C49847 * bs[8] * std::pow(C49841, 8)) *
                                            C49846 * C49862))))) /
        C49738;
    const double C899 =
        (2 * ae * C49984 * C49951 + C49843 * C49984 * C49890) / C49738;
    const double C1106 =
        (2 * C49984 * C49890 +
         C49984 * (C49890 +
                   (2 * C49850 * C49886 +
                    C49850 * (C49886 + (C49880 * C49881 +
                                        C49847 * bs[8] * std::pow(C49841, 8)) *
                                           C49846 * C49862)) *
                       std::pow(C49984, 2))) /
        C49738;
    const double C1567 =
        (2 * ae * (C49951 + C49973 * C50023) +
         C49843 * (C49890 +
                   (2 * C49850 * C49886 +
                    C49850 * (C49886 + (C49880 * C49881 +
                                        C49847 * bs[8] * std::pow(C49841, 8)) *
                                           C49846 * C49862)) *
                       C50023)) /
        C49738;
    const double C2491 = C2485 + C2472;
    const double C2975 = C2974 + C2972;
    const double C50354 = C50341 + C50351;
    const double C20503 =
        (5 * (3 * C50110 + C49984 * C50407) +
         C49984 *
             (4 * C50407 +
              C49984 * (3 * C50405 +
                        C49984 * (2 * C49984 * C49886 +
                                  C49984 * (C49886 + (C49880 * C49881 +
                                                      C49847 * bs[8] *
                                                          std::pow(C49841, 8)) *
                                                         C49846 * C50023))))) /
        C49738;
    const double C50489 = C50473 + C50484;
    const double C50536 = C49843 * C50532;
    const double C49978 = C49843 * C49977;
    const double C748 =
        (2 * ae * (4 * C49951 + C49850 * C49977) +
         C49843 *
             (4 * C49890 +
              C49850 * (3 * C49888 +
                        C49850 * (2 * C49850 * C49886 +
                                  C49850 * (C49886 + (C49880 * C49881 +
                                                      C49847 * bs[8] *
                                                          std::pow(C49841, 8)) *
                                                         C49846 * C49862))))) /
        C49738;
    const double C900 =
        (2 * ae * C49984 * C49977 +
         C49843 * C49984 *
             (3 * C49888 +
              C49850 *
                  (2 * C49850 * C49886 +
                   C49850 * (C49886 + (C49880 * C49881 +
                                       C49847 * bs[8] * std::pow(C49841, 8)) *
                                          C49846 * C49862)))) /
        C49738;
    const double C132 = (5 * (3 * C49932 + C49850 * C49951) +
                         C49850 * (4 * C49951 + C49850 * C49977)) /
                        C49731;
    const double C299 =
        (3 * C49932 + C49850 * C49951 + C49977 * C50023) / C49731;
    const double C637 = (C49984 * (4 * C49951 + C49850 * C49977)) / C49731;
    const double C747 = (C49843 * (4 * C49951 + C49850 * C49977) +
                         (4 * C49948 + C49850 * C49974) * ae) /
                        C49731;
    const double C895 =
        (C49843 * C49984 * C49977 + C49984 * C49974 * ae) / C49731;
    const double C49999 = C49997 + C49998;
    const double C50034 = ae * C50031;
    const double C50033 = C49843 * C50031;
    const double C50100 = ae * C50099;
    const double C2645 =
        (C49932 + C49947 * C50023 + C49843 * C50099 + C49843 * C50096 * ae) /
        C49731;
    const double C50258 = C50257 + C50251;
    const double C50275 = C50002 + C50273;
    const double C50128 = C50126 + C50127;
    const double C3453 = C118 * C3446;
    const double C4116 = C118 * C4109;
    const double C15030 = C10691 * C4109;
    const double C36250 = C33207 * C4109;
    const double C50157 = C50086 + C50155;
    const double C50298 = C50297 + C50292;
    const double C50358 = ae * C50355;
    const double C50357 = C49843 * C50355;
    const double C50425 = C49843 * C50423;
    const double C20945 =
        (2 * ae * (4 * C50141 + C49984 * C50423) +
         C49843 *
             (4 * C50407 +
              C49984 * (3 * C50405 +
                        C49984 * (2 * C49984 * C49886 +
                                  C49984 * (C49886 + (C49880 * C49881 +
                                                      C49847 * bs[8] *
                                                          std::pow(C49841, 8)) *
                                                         C49846 * C50023))))) /
        C49738;
    const double C20502 = (5 * (3 * C50077 + C49984 * C50141) +
                           C49984 * (4 * C50141 + C49984 * C50423)) /
                          C49731;
    const double C20944 = (C49843 * (4 * C50141 + C49984 * C50423) +
                           (4 * C50142 + C49984 * C50424) * ae) /
                          C49731;
    const double C50437 = ae * C50434;
    const double C50436 = C49843 * C50434;
    const double C50458 = C50457 + C50451;
    const double C50495 = ae * C50492;
    const double C50494 = C49843 * C50492;
    const double C50541 = C50510 + C50537;
    const double C49786 = C49755 / C49731;
    const double C5115 =
        (((-4 * C49741) / C49731 - C49755 / C49731) * ae) / C49742 +
        ((2 * ((0 * ae) / C49731 - C49741 / C49738) - C49755 / C49742) * ae) /
            C49731;
    const double C10688 =
        (((-4 * C49741) / C49731 - C49755 / C49731) * ae) / C49731;
    const double C33204 =
        -(((-4 * C49741) / C49731 - C49755 / C49731) * be) / C49731;
    const double C5141 = C5113 * C122;
    const double C5138 = C5113 * C121;
    const double C5123 = C5113 * C120;
    const double C5341 = C5113 * C285;
    const double C5332 = C5113 * C282;
    const double C5544 = C5113 * C462;
    const double C5535 = C5113 * C459;
    const double C5723 = C5113 * C281;
    const double C5887 = C5113 * C458;
    const double C6105 = C5113 * C887;
    const double C21799 = C5113 * C284;
    const double C21789 = C5113 * C283;
    const double C22455 = C5113 * C886;
    const double C22710 = C5113 * C1101;
    const double C22877 = C5113 * C1215;
    const double C23381 = C5113 * C1562;
    const double C5147 = C5117 * C464;
    const double C5132 = C5117 * C463;
    const double C5129 = C5117 * C462;
    const double C5347 = C5117 * C2641;
    const double C5326 = C5117 * C1214;
    const double C5550 = C5117 * C5520;
    const double C5529 = C5117 * C1845;
    const double C5727 = C5117 * C1213;
    const double C5891 = C5117 * C1844;
    const double C6111 = C5117 * C4511;
    const double C21795 = C5117 * C2640;
    const double C21793 = C5117 * C1215;
    const double C22451 = C5117 * C4513;
    const double C22714 = C5117 * C3604;
    const double C22881 = C5117 * C6522;
    const double C23385 = C5117 * C4512;
    const double C10716 = C10690 * C465;
    const double C10707 = C10690 * C457;
    const double C10704 = C10690 * C458;
    const double C10698 = C10690 * C459;
    const double C10920 = C10690 * C1560;
    const double C10914 = C10690 * C1561;
    const double C10901 = C10690 * C887;
    const double C10895 = C10690 * C888;
    const double C11122 = C10690 * C1844;
    const double C11116 = C10690 * C1845;
    const double C11103 = C10690 * C462;
    const double C11097 = C10690 * C463;
    const double C11302 = C10690 * C889;
    const double C11462 = C10690 * C464;
    const double C11678 = C10690 * C1213;
    const double C11672 = C10690 * C1214;
    const double C13809 = C10690 * C3171;
    const double C13802 = C10690 * C1562;
    const double C13797 = C10690 * C886;
    const double C14025 = C10690 * C4511;
    const double C14688 = C10690 * C2641;
    const double C14681 = C10690 * C1215;
    const double C15028 = C10690 * C3170;
    const double C15236 = C10690 * C4513;
    const double C15896 = C10690 * C2640;
    const double C31560 = C10690 * C4108;
    const double C31718 = C10690 * C4512;
    const double C32217 = C10690 * C3604;
    const double C33232 = C33206 * C465;
    const double C33223 = C33206 * C457;
    const double C33220 = C33206 * C458;
    const double C33214 = C33206 * C459;
    const double C33436 = C33206 * C1560;
    const double C33430 = C33206 * C1561;
    const double C33417 = C33206 * C887;
    const double C33411 = C33206 * C888;
    const double C33638 = C33206 * C1844;
    const double C33632 = C33206 * C1845;
    const double C33619 = C33206 * C462;
    const double C33613 = C33206 * C463;
    const double C33818 = C33206 * C889;
    const double C33978 = C33206 * C464;
    const double C34194 = C33206 * C1213;
    const double C34188 = C33206 * C1214;
    const double C36247 = C33206 * C3171;
    const double C36239 = C33206 * C3170;
    const double C36237 = C33206 * C1562;
    const double C36233 = C33206 * C886;
    const double C36925 = C33206 * C2641;
    const double C36917 = C33206 * C1215;
    const double C36913 = C33206 * C2640;
    const double C37194 = C33206 * C4108;
    const double C37356 = C33206 * C4512;
    const double C37352 = C33206 * C4513;
    const double C37861 = C33206 * C3604;
    const double C41133 = C33206 * C4511;
    const double C44254 = C44224 * C464;
    const double C44239 = C44224 * C463;
    const double C44236 = C44224 * C462;
    const double C44454 = C44224 * C2641;
    const double C44433 = C44224 * C1214;
    const double C44648 = C44224 * C5520;
    const double C44627 = C44224 * C1845;
    const double C44825 = C44224 * C1213;
    const double C44989 = C44224 * C1844;
    const double C45206 = C44224 * C4511;
    const double C47247 = C44224 * C2640;
    const double C47245 = C44224 * C1215;
    const double C47903 = C44224 * C4513;
    const double C48166 = C44224 * C3604;
    const double C48330 = C44224 * C6522;
    const double C48834 = C44224 * C4512;
    const double C49800 = C49796 - C49788;
    const double C525 = C519 + C501;
    const double C3620 = C3618 + C3611;
    const double C484 =
        (2 * C49850 * C49866 + C49850 * C49876 + C49954 + C49954 +
         C49843 * (2 * ae * C49951 + C49843 * C49890)) /
        C49738;
    const double C506 = C118 * C474;
    const double C5148 = C5118 * C474;
    const double C5894 = C5116 * C474;
    const double C11128 = C10689 * C474;
    const double C11126 = C10691 * C474;
    const double C33644 = C33205 * C474;
    const double C33642 = C33207 * C474;
    const double C44255 = C44225 * C474;
    const double C167 = C162 + C155;
    const double C344 = C338 + C329;
    const double C644 = C643 + C331;
    const double C754 = C753 + C508;
    const double C918 = C915 + C910;
    const double C5728 = C5112 * C1221;
    const double C8335 = C50892 * C1221;
    const double C11680 = C50956 * C1221;
    const double C34196 = C50956 * C1221;
    const double C44826 = C44219 * C1221;
    const double C8336 = C8334 + C1226;
    const double C50048 = ae * C50047;
    const double C1848 =
        (2 * C49934 + C49843 * C50047 + (C49929 + C49944 * C49847) * ae) /
        C49731;
    const double C2660 = C50892 * C2647;
    const double C5349 = C5112 * C2647;
    const double C14689 = C50956 * C2647;
    const double C36926 = C50956 * C2647;
    const double C44456 = C44219 * C2647;
    const double C2664 = C2658 + C2659;
    const double C2490 = C2484 + C2470;
    const double C3199 = C3196 + C3189;
    const double C50171 = ae * C50170;
    const double C4515 =
        (2 * C50013 + C49843 * C50170 + (C50010 + C50114 * C49847) * ae) /
        C49731;
    const double C50238 = C50221 + C50236;
    const double C3608 =
        (2 * C49984 * C49866 + C49984 * C50110 + C50146 + C50146 +
         C49843 * (2 * ae * C50141 +
                   C49843 * (2 * C49984 * C49874 +
                             C49984 * (C49874 + C49886 * C50023)))) /
        C49738;
    const double C3615 = C118 * C3606;
    const double C6373 = C5118 * C3606;
    const double C15900 = C10691 * C3606;
    const double C23388 = C5116 * C3606;
    const double C31721 = C10689 * C3606;
    const double C36922 = C33207 * C3606;
    const double C37359 = C33205 * C3606;
    const double C45468 = C44225 * C3606;
    const double C20509 = C20508 + C3454;
    const double C20951 = C20950 + C4117;
    const double C50182 = ae * C50181;
    const double C4516 =
        (2 * C50081 + C49843 * C50181 + (C50078 + C50138 * C49847) * ae) /
        C49731;
    const double C50327 = C50307 + C50325;
    const double C50523 = C50517 + C50394;
    const double C50396 = C50395 + C50384;
    const double C520 = C514 + C503;
    const double C176 = C171 * C50877;
    const double C8023 = C171 * C51016;
    const double C17185 = C171 * C17173;
    const double C351 = C345 * C50877;
    const double C2299 = C345 * C2287;
    const double C8021 = C345 * C50928;
    const double C8487 = C345 * C51016;
    const double C17183 = C345 * C50928;
    const double C17644 = C345 * C17173;
    const double C24391 = C345 * C51053;
    const double C355 = C349 * C50877;
    const double C2295 = C349 * C2288;
    const double C2821 = C349 * C2287;
    const double C8179 = C349 * C51016;
    const double C8173 = C349 * C50928;
    const double C17341 = C349 * C17173;
    const double C17335 = C349 * C50928;
    const double C24387 = C349 * C24380;
    const double C24844 = C349 * C51053;
    const double C528 = C522 * C50877;
    const double C8636 = C522 * C51016;
    const double C17793 = C522 * C17173;
    const double C923 = C920 * C50877;
    const double C2970 = C920 * C2287;
    const double C8327 = C920 * C50928;
    const double C8834 = C920 * C51016;
    const double C17489 = C920 * C50928;
    const double C17991 = C920 * C17173;
    const double C24993 = C920 * C51053;
    const double C2666 = C2663 + C1227;
    const double C1853 =
        (2 * (2 * ae * C49919 + C49843 * C49992) + C50059 + C50059 +
         C49843 * (C49992 + C50056 + C50056 +
                   C49843 * (2 * ae * C49937 + C49843 * C49878))) /
        C49738;
    const double C1858 = C118 * C1849;
    const double C5548 = C5116 * C1849;
    const double C5530 = C5118 * C1849;
    const double C7424 = C5114 * C1849;
    const double C11117 = C10691 * C1849;
    const double C12982 = C10689 * C1849;
    const double C33633 = C33207 * C1849;
    const double C35498 = C33205 * C1849;
    const double C38833 = C38827 * C1849;
    const double C44628 = C44225 * C1849;
    const double C3619 = C3617 + C2654;
    const double C4521 =
        (2 * (2 * ae * C50016 + C49843 * C50184) + C50194 + C50194 +
         C49843 * (C50184 + C50191 + C50191 +
                   C49843 * (2 * ae * C50131 + C49843 * C49984 * C49874))) /
        C49738;
    const double C4526 = C118 * C4517;
    const double C6104 = C5118 * C4517;
    const double C6532 = C5116 * C4517;
    const double C12095 = C10691 * C4517;
    const double C16429 = C10689 * C4517;
    const double C23794 = C5114 * C4517;
    const double C34611 = C33207 * C4517;
    const double C38264 = C33205 * C4517;
    const double C38943 = C38827 * C4517;
    const double C45199 = C44225 * C4517;
    const double C50216 = C50215 + C50209;
    const double C330 = C50892 * C307;
    const double C641 = C50892 * C308;
    const double C751 = C50892 * C485;
    const double C10718 = C50956 * C485;
    const double C33234 = C50956 * C485;
    const double C911 = C50892 * C899;
    const double C11303 = C50956 * C899;
    const double C33819 = C50956 * C899;
    const double C2822 = C2491 * C2288;
    const double C8180 = C2491 * C50928;
    const double C17342 = C2491 * C50928;
    const double C24845 = C2491 * C24380;
    const double C2976 = C2975 * C2288;
    const double C8835 = C2975 * C50928;
    const double C17992 = C2975 * C50928;
    const double C24994 = C2975 * C24380;
    const double C49979 = C49978 + C49976;
    const double C157 = C118 * C132;
    const double C332 = C118 * C299;
    const double C642 = C118 * C637;
    const double C752 = C118 * C747;
    const double C10719 = C10691 * C747;
    const double C33235 = C33207 * C747;
    const double C912 = C118 * C895;
    const double C11304 = C10691 * C895;
    const double C33820 = C33207 * C895;
    const double C50000 = ae * C49999;
    const double C1216 =
        (C49984 * C49951 + C49843 * C49999 + C49843 * C49996 * ae) / C49731;
    const double C50035 = C49951 + C50033;
    const double C2648 =
        (C49876 + C49888 * C50023 + C50100 + C50100 +
         C49843 * (2 * ae * C50095 +
                   C49843 * (C49888 +
                             (C49886 + (C49880 * C49881 +
                                        C49847 * bs[8] * std::pow(C49841, 8)) *
                                           C49846 * C49862) *
                                 C50023))) /
        C49738;
    const double C2661 = C118 * C2645;
    const double C5353 = C5118 * C2645;
    const double C12583 = C10691 * C2645;
    const double C35099 = C33207 * C2645;
    const double C44460 = C44225 * C2645;
    const double C50260 = ae * C50258;
    const double C50259 = C49843 * C50258;
    const double C50276 = C50275 + C50272;
    const double C50129 = ae * C50128;
    const double C3605 = (2 * C50009 + C49984 * C50086 + C49843 * C50128 +
                          C49843 * C50125 * ae) /
                         C49731;
    const double C50158 = C50157 + C50154;
    const double C50300 = ae * C50298;
    const double C50299 = C49843 * C50298;
    const double C50359 = C50335 + C50357;
    const double C50427 = C50425 + C50426;
    const double C20507 = C118 * C20502;
    const double C20949 = C118 * C20944;
    const double C31562 = C10691 * C20944;
    const double C37196 = C33207 * C20944;
    const double C50438 = C50141 + C50436;
    const double C50460 = ae * C50458;
    const double C50459 = C49843 * C50458;
    const double C50496 = C50469 + C50494;
    const double C50543 = C50541 + C50526;
    const double C49799 = C49795 - C49786;
    const double C5144 = C5115 * C457;
    const double C5135 = C5115 * C458;
    const double C5126 = C5115 * C459;
    const double C5344 = C5115 * C1561;
    const double C5329 = C5115 * C887;
    const double C5547 = C5115 * C1845;
    const double C5532 = C5115 * C462;
    const double C5725 = C5115 * C888;
    const double C5889 = C5115 * C463;
    const double C6108 = C5115 * C1214;
    const double C21797 = C5115 * C1562;
    const double C21791 = C5115 * C886;
    const double C22453 = C5115 * C1215;
    const double C22712 = C5115 * C3170;
    const double C22879 = C5115 * C4513;
    const double C23383 = C5115 * C2640;
    const double C10713 = C10688 * C123;
    const double C10710 = C10688 * C122;
    const double C10701 = C10688 * C121;
    const double C10695 = C10688 * C120;
    const double C10917 = C10688 * C286;
    const double C10911 = C10688 * C285;
    const double C10904 = C10688 * C282;
    const double C10898 = C10688 * C281;
    const double C11119 = C10688 * C463;
    const double C11113 = C10688 * C462;
    const double C11106 = C10688 * C459;
    const double C11100 = C10688 * C458;
    const double C11300 = C10688 * C280;
    const double C11460 = C10688 * C457;
    const double C11675 = C10688 * C888;
    const double C11669 = C10688 * C887;
    const double C13807 = C10688 * C1100;
    const double C13804 = C10688 * C284;
    const double C13795 = C10688 * C283;
    const double C14023 = C10688 * C1214;
    const double C14686 = C10688 * C1561;
    const double C14683 = C10688 * C886;
    const double C15026 = C10688 * C1101;
    const double C15234 = C10688 * C1215;
    const double C15894 = C10688 * C1562;
    const double C31558 = C10688 * C2446;
    const double C31716 = C10688 * C2640;
    const double C32215 = C10688 * C3170;
    const double C33229 = C33204 * C123;
    const double C33226 = C33204 * C122;
    const double C33217 = C33204 * C121;
    const double C33211 = C33204 * C120;
    const double C33433 = C33204 * C286;
    const double C33427 = C33204 * C285;
    const double C33420 = C33204 * C282;
    const double C33414 = C33204 * C281;
    const double C33635 = C33204 * C463;
    const double C33629 = C33204 * C462;
    const double C33622 = C33204 * C459;
    const double C33616 = C33204 * C458;
    const double C33816 = C33204 * C280;
    const double C33976 = C33204 * C457;
    const double C34191 = C33204 * C888;
    const double C34185 = C33204 * C887;
    const double C36245 = C33204 * C1100;
    const double C36241 = C33204 * C1101;
    const double C36235 = C33204 * C284;
    const double C36231 = C33204 * C283;
    const double C36923 = C33204 * C1561;
    const double C36919 = C33204 * C886;
    const double C36915 = C33204 * C1562;
    const double C37192 = C33204 * C2446;
    const double C37354 = C33204 * C2640;
    const double C37350 = C33204 * C1215;
    const double C37859 = C33204 * C3170;
    const double C41131 = C33204 * C1214;
    const double C5159 = C5141 + C5142;
    const double C5158 = C5138 + C5139;
    const double C5153 = C5123 + C5124;
    const double C5359 = C5341 + C5342;
    const double C5358 = C5332 + C5333;
    const double C5562 = C5544 + C5545;
    const double C5561 = C5535 + C5536;
    const double C5732 = C5723 + C5350;
    const double C5896 = C5887 + C5553;
    const double C6117 = C6105 + C6106;
    const double C21806 = C21799 + C5338;
    const double C21801 = C21789 + C5337;
    const double C22459 = C22455 + C6102;
    const double C22719 = C22710 + C6375;
    const double C22886 = C22877 + C6533;
    const double C23390 = C23381 + C7025;
    const double C5156 = C5132 + C5133;
    const double C5155 = C5129 + C5130;
    const double C5361 = C5347 + C5348;
    const double C5356 = C5326 + C5327;
    const double C5734 = C5727 + C5352;
    const double C21804 = C21795 + C5340;
    const double C21803 = C21793 + C5335;
    const double C10728 = C10716 + C10717;
    const double C10725 = C10707 + C10708;
    const double C10724 = C10704 + C10705;
    const double C10722 = C10698 + C10699;
    const double C10934 = C10920 + C10921;
    const double C10932 = C10914 + C10915;
    const double C10929 = C10901 + C10902;
    const double C10927 = C10895 + C10896;
    const double C11131 = C11103 + C11104;
    const double C11129 = C11097 + C11098;
    const double C11308 = C11302 + C10924;
    const double C11686 = C11678 + C11679;
    const double C11684 = C11672 + C11673;
    const double C13816 = C13809 + C11941;
    const double C13813 = C13802 + C10910;
    const double C13812 = C13797 + C10907;
    const double C14693 = C14688 + C12585;
    const double C14690 = C14681 + C11668;
    const double C15035 = C15028 + C11943;
    const double C15903 = C15896 + C12587;
    const double C31565 = C31560 + C15032;
    const double C33244 = C33232 + C33233;
    const double C33241 = C33223 + C33224;
    const double C33240 = C33220 + C33221;
    const double C33238 = C33214 + C33215;
    const double C33450 = C33436 + C33437;
    const double C33448 = C33430 + C33431;
    const double C33445 = C33417 + C33418;
    const double C33443 = C33411 + C33412;
    const double C33647 = C33619 + C33620;
    const double C33645 = C33613 + C33614;
    const double C33824 = C33818 + C33440;
    const double C34202 = C34194 + C34195;
    const double C34200 = C34188 + C34189;
    const double C36259 = C36247 + C34457;
    const double C36256 = C36239 + C34459;
    const double C36255 = C36237 + C33426;
    const double C36253 = C36233 + C33423;
    const double C36934 = C36925 + C35101;
    const double C36931 = C36917 + C34184;
    const double C36929 = C36913 + C35103;
    const double C37199 = C37194 + C36244;
    const double C44263 = C44239 + C44240;
    const double C44262 = C44236 + C44237;
    const double C44468 = C44454 + C44455;
    const double C44463 = C44433 + C44434;
    const double C44832 = C44825 + C44459;
    const double C47256 = C47247 + C44447;
    const double C47255 = C47245 + C44442;
    const double C38821 =
        ((((0 - (C49729 * C49781) / C49731) * ae) / C49731 - (0 * be) / C49742 +
          C49737 / C49731) /
             C49782 -
         ((C49729 * C49805 + 0) * be) / C49731) /
            C49782 +
        ((C49729 * (C49805 / C49782 -
                    ((C49729 * C49800 + C51017) * be) / C49731 + C49801) +
          C51054) *
         ae) /
            C49731 +
        C49800 / C49782 - ((C49729 * C49801 + C50956) * be) / C49731;
    const double C38823 =
        (C49805 / C49782 - ((C49729 * C49800 + C51017) * be) / C49731 +
         C49801) /
            C49782 +
        ((C49729 *
              (C49800 / C49782 - ((C49729 * C49801 + C50956) * be) / C49731) +
          C51055) *
         ae) /
            C49731 +
        2 * (C49801 / C49782 - (0 * be) / C49731);
    const double C38825 =
        (C49800 / C49782 - ((C49729 * C49801 + C50956) * be) / C49731) /
            C49782 +
        ((C49729 * (C49801 / C49782 - (0 * be) / C49731) + C44219) * ae) /
            C49731;
    const double C44221 =
        C49805 / C49782 - ((C49729 * C49800 + C51017) * be) / C49731 + C49801;
    const double C44223 =
        C49800 / C49782 - ((C49729 * C49801 + C50956) * be) / C49731;
    const double C531 = C525 * C50877;
    const double C2655 = C525 * C2286;
    const double C8331 = C525 * C51016;
    const double C17493 = C525 * C17173;
    const double C24694 = C525 * C51052;
    const double C507 = C50892 * C484;
    const double C5149 = C5112 * C484;
    const double C11463 = C50956 * C484;
    const double C33979 = C50956 * C484;
    const double C44256 = C44219 * C484;
    const double C515 = C505 + C506;
    const double C5161 = C5147 + C5148;
    const double C11468 = C11462 + C11126;
    const double C33984 = C33978 + C33642;
    const double C44268 = C44254 + C44255;
    const double C172 = C167 + C156;
    const double C8337 = C8336 + C1226;
    const double C1852 =
        (2 * (2 * ae * C49932 + C49843 * C49876) + C50048 + C50048 +
         C49843 * (C49876 + C50045 + C50045 +
                   C49843 * (2 * ae * C49947 + C49843 * C49888))) /
        C49738;
    const double C1857 = C118 * C1848;
    const double C5557 = C5116 * C1848;
    const double C5555 = C5118 * C1848;
    const double C11123 = C10691 * C1848;
    const double C12980 = C10689 * C1848;
    const double C33639 = C33207 * C1848;
    const double C35496 = C33205 * C1848;
    const double C38840 = C38827 * C1848;
    const double C44653 = C44225 * C1848;
    const double C2667 = C2664 + C2659;
    const double C2494 = C2490 * C2288;
    const double C24544 = C2490 * C24380;
    const double C3200 = C3199 * C2288;
    const double C25191 = C3199 * C24380;
    const double C4519 =
        (2 * (2 * ae * C50009 + C49843 * C50161) + C50171 + C50171 +
         C49843 * (C50161 + C50168 + C50168 +
                   C49843 * (2 * ae * C50112 + C49843 * C49984 * C50105))) /
        C49738;
    const double C4524 = C118 * C4515;
    const double C6112 = C5118 * C4515;
    const double C6529 = C5116 * C4515;
    const double C12093 = C10691 * C4515;
    const double C16427 = C10689 * C4515;
    const double C34609 = C33207 * C4515;
    const double C38954 = C38827 * C4515;
    const double C43473 = C33205 * C4515;
    const double C45207 = C44225 * C4515;
    const double C50239 = C50238 + C50232;
    const double C20613 = C50892 * C3608;
    const double C22715 = C5112 * C3608;
    const double C32218 = C50956 * C3608;
    const double C37862 = C50956 * C3608;
    const double C48167 = C44219 * C3608;
    const double C20615 = C20612 + C3615;
    const double C22721 = C22714 + C6373;
    const double C32222 = C32217 + C15900;
    const double C37866 = C37861 + C36922;
    const double C48173 = C48166 + C45468;
    const double C20510 = C20509 + C20506;
    const double C20952 = C20951 + C20948;
    const double C4520 =
        (2 * (2 * ae * C50077 + C49843 * C50110) + C50182 + C50182 +
         C49843 * (C50110 + C50179 + C50179 +
                   C49843 * (2 * ae * C50136 +
                             C49843 * (C49874 + C49886 * C50023)))) /
        C49738;
    const double C4525 = C118 * C4516;
    const double C7023 = C5118 * C4516;
    const double C15240 = C10691 * C4516;
    const double C22884 = C5116 * C4516;
    const double C32618 = C10689 * C4516;
    const double C36424 = C33207 * C4516;
    const double C38262 = C33205 * C4516;
    const double C38950 = C38827 * C4516;
    const double C46112 = C44225 * C4516;
    const double C50328 = C50327 + C50321;
    const double C50540 = C50523 + C50536;
    const double C50398 = ae * C50396;
    const double C50397 = C49843 * C50396;
    const double C50508 = 4 * C50396;
    const double C526 = C520 + C504;
    const double C8026 = C8021 + C8022;
    const double C17188 = C17183 + C17184;
    const double C8486 = C8173 + C8174;
    const double C17643 = C17335 + C17336;
    const double C8635 = C8327 + C8328;
    const double C17792 = C17489 + C17490;
    const double C2669 = C2666 + C2657;
    const double C5549 = C5111 * C1853;
    const double C5531 = C5112 * C1853;
    const double C11118 = C50956 * C1853;
    const double C33634 = C50956 * C1853;
    const double C44647 = C51055 * C1853;
    const double C44629 = C44219 * C1853;
    const double C5559 = C5529 + C5530;
    const double C11134 = C11116 + C11117;
    const double C33650 = C33632 + C33633;
    const double C44657 = C44627 + C44628;
    const double C3621 = C3619 + C3613;
    const double C15237 = C50956 * C4521;
    const double C22452 = C5112 * C4521;
    const double C22880 = C5111 * C4521;
    const double C37353 = C50956 * C4521;
    const double C47904 = C44219 * C4521;
    const double C48329 = C51055 * C4521;
    const double C22457 = C22451 + C6104;
    const double C15243 = C15236 + C12095;
    const double C37361 = C37352 + C34611;
    const double C47909 = C47903 + C45199;
    const double C50217 = ae * C50216;
    const double C5522 =
        (3 * C50069 + C49843 * C50216 + (2 * C50063 + C49843 * C50206) * ae) /
        C49731;
    const double C350 = C344 + C330;
    const double C645 = C644 + C641;
    const double C755 = C754 + C751;
    const double C921 = C918 + C911;
    const double C49980 = ae * C49979;
    const double C476 = (3 * C49932 + C49850 * C49951 + C49843 * C49979 +
                         C49843 * C49974 * ae) /
                        C49731;
    const double C1220 =
        (C49984 * C49890 + C50000 + C50000 +
         C49843 *
             (2 * ae * C49995 +
              C49843 * C49984 *
                  (2 * C49850 * C49886 +
                   C49850 * (C49886 + (C49880 * C49881 +
                                       C49847 * bs[8] * std::pow(C49841, 8)) *
                                          C49846 * C49862)))) /
        C49738;
    const double C1225 = C118 * C1216;
    const double C5729 = C5118 * C1216;
    const double C11681 = C10691 * C1216;
    const double C34197 = C33207 * C1216;
    const double C44827 = C44225 * C1216;
    const double C50036 = C50035 + C50032;
    const double C50261 = C50244 + C50259;
    const double C50277 = ae * C50276;
    const double C6099 =
        (2 * C50006 + C49843 * C50276 + (C50003 + C50267 * C49847) * ae) /
        C49731;
    const double C3607 =
        (2 * C49984 * C49878 + C49984 * C50107 + C50129 + C50129 +
         C49843 * (2 * ae * C50124 +
                   C49843 * (2 * C49984 * C50105 +
                             C49984 * (C50105 + C49850 *
                                                    (C49880 * C49881 +
                                                     C49847 * bs[8] *
                                                         std::pow(C49841, 8)) *
                                                    C49846 * C50023)))) /
        C49738;
    const double C3614 = C118 * C3605;
    const double C6370 = C5118 * C3605;
    const double C15898 = C10691 * C3605;
    const double C36927 = C33207 * C3605;
    const double C45465 = C44225 * C3605;
    const double C50159 = ae * C50158;
    const double C4514 =
        (2 * C50090 + C49843 * C50158 + (C50087 + C50121 * C49847) * ae) /
        C49731;
    const double C50301 = C50281 + C50299;
    const double C50360 = C50359 + C50348;
    const double C50428 = ae * C50427;
    const double C20609 = (3 * C50077 + C49984 * C50141 + C49843 * C50427 +
                           C49843 * C50424 * ae) /
                          C49731;
    const double C50439 = C50438 + C50435;
    const double C50461 = C50444 + C50459;
    const double C50497 = C50496 + C50486;
    const double C50545 = ae * C50543;
    const double C50544 = C49843 * C50543;
    const double C49803 = C49799 * ae;
    const double C5160 = C5144 + C5145;
    const double C5157 = C5135 + C5136;
    const double C5154 = C5126 + C5127;
    const double C5360 = C5344 + C5345;
    const double C5357 = C5329 + C5330;
    const double C5563 = C5547 + C5548;
    const double C5560 = C5532 + C5533;
    const double C5733 = C5725 + C5351;
    const double C5897 = C5889 + C5554;
    const double C6118 = C6108 + C6109;
    const double C21805 = C21797 + C5339;
    const double C21802 = C21791 + C5336;
    const double C22458 = C22453 + C6103;
    const double C22720 = C22712 + C6374;
    const double C22887 = C22879 + C6532;
    const double C23391 = C23383 + C7024;
    const double C10727 = C10713 + C10714;
    const double C10726 = C10710 + C10711;
    const double C10723 = C10701 + C10702;
    const double C10721 = C10695 + C10696;
    const double C10933 = C10917 + C10918;
    const double C10931 = C10911 + C10912;
    const double C10930 = C10904 + C10905;
    const double C10928 = C10898 + C10899;
    const double C11135 = C11119 + C11120;
    const double C11133 = C11113 + C11114;
    const double C11132 = C11106 + C11107;
    const double C11130 = C11100 + C11101;
    const double C11307 = C11300 + C10923;
    const double C11467 = C11460 + C11125;
    const double C11685 = C11675 + C11676;
    const double C11683 = C11669 + C11670;
    const double C13815 = C13807 + C11942;
    const double C13814 = C13804 + C10909;
    const double C13811 = C13795 + C10908;
    const double C14027 = C14023 + C12094;
    const double C14692 = C14686 + C12586;
    const double C14691 = C14683 + C11667;
    const double C15034 = C15026 + C11944;
    const double C15242 = C15234 + C12096;
    const double C15902 = C15894 + C12588;
    const double C31564 = C31558 + C15033;
    const double C31722 = C31716 + C15241;
    const double C32221 = C32215 + C15901;
    const double C33243 = C33229 + C33230;
    const double C33242 = C33226 + C33227;
    const double C33239 = C33217 + C33218;
    const double C33237 = C33211 + C33212;
    const double C33449 = C33433 + C33434;
    const double C33447 = C33427 + C33428;
    const double C33446 = C33420 + C33421;
    const double C33444 = C33414 + C33415;
    const double C33651 = C33635 + C33636;
    const double C33649 = C33629 + C33630;
    const double C33648 = C33622 + C33623;
    const double C33646 = C33616 + C33617;
    const double C33823 = C33816 + C33439;
    const double C33983 = C33976 + C33641;
    const double C34201 = C34191 + C34192;
    const double C34199 = C34185 + C34186;
    const double C36258 = C36245 + C34458;
    const double C36257 = C36241 + C34460;
    const double C36254 = C36235 + C33425;
    const double C36252 = C36231 + C33424;
    const double C36933 = C36923 + C35102;
    const double C36932 = C36919 + C34183;
    const double C36930 = C36915 + C35104;
    const double C37198 = C37192 + C36243;
    const double C37362 = C37354 + C36423;
    const double C37360 = C37350 + C34612;
    const double C37865 = C37859 + C36921;
    const double C41135 = C41131 + C34610;
    const double C5168 = C5159 + C5142;
    const double C5167 = C5158 + C5139;
    const double C5162 = C5153 + C5124;
    const double C5365 = C5359 + C5342;
    const double C5364 = C5358 + C5333;
    const double C5568 = C5562 + C5545;
    const double C5567 = C5561 + C5536;
    const double C5735 = C5732 + C5350;
    const double C5899 = C5896 + C5553;
    const double C6120 = C6117 + C6106;
    const double C21812 = C21806 + C5338;
    const double C21807 = C21801 + C5337;
    const double C22462 = C22459 + C6102;
    const double C22722 = C22719 + C6375;
    const double C22889 = C22886 + C6533;
    const double C23393 = C23390 + C7025;
    const double C5165 = C5156 + C5133;
    const double C5164 = C5155 + C5130;
    const double C5367 = C5361 + C5348;
    const double C5362 = C5356 + C5327;
    const double C5737 = C5734 + C5352;
    const double C21810 = C21804 + C5340;
    const double C21809 = C21803 + C5335;
    const double C10736 = C10728 + C10717;
    const double C10733 = C10725 + C10708;
    const double C10732 = C10724 + C10705;
    const double C10730 = C10722 + C10699;
    const double C10942 = C10934 + C10921;
    const double C10940 = C10932 + C10915;
    const double C10937 = C10929 + C10902;
    const double C10935 = C10927 + C10896;
    const double C11139 = C11131 + C11104;
    const double C11137 = C11129 + C11098;
    const double C11310 = C11308 + C10924;
    const double C11690 = C11686 + C11679;
    const double C11688 = C11684 + C11673;
    const double C13822 = C13816 + C11941;
    const double C13819 = C13813 + C10910;
    const double C13818 = C13812 + C10907;
    const double C14697 = C14693 + C12585;
    const double C14694 = C14690 + C11668;
    const double C15037 = C15035 + C11943;
    const double C15905 = C15903 + C12587;
    const double C31567 = C31565 + C15032;
    const double C33252 = C33244 + C33233;
    const double C33249 = C33241 + C33224;
    const double C33248 = C33240 + C33221;
    const double C33246 = C33238 + C33215;
    const double C33458 = C33450 + C33437;
    const double C33456 = C33448 + C33431;
    const double C33453 = C33445 + C33418;
    const double C33451 = C33443 + C33412;
    const double C33655 = C33647 + C33620;
    const double C33653 = C33645 + C33614;
    const double C33826 = C33824 + C33440;
    const double C34206 = C34202 + C34195;
    const double C34204 = C34200 + C34189;
    const double C36267 = C36259 + C34457;
    const double C36264 = C36256 + C34459;
    const double C36263 = C36255 + C33426;
    const double C36261 = C36253 + C33423;
    const double C36940 = C36934 + C35101;
    const double C36937 = C36931 + C34184;
    const double C36935 = C36929 + C35103;
    const double C37201 = C37199 + C36244;
    const double C44272 = C44263 + C44240;
    const double C44271 = C44262 + C44237;
    const double C44474 = C44468 + C44455;
    const double C44469 = C44463 + C44434;
    const double C44835 = C44832 + C44459;
    const double C47262 = C47256 + C44447;
    const double C47261 = C47255 + C44442;
    const double C38844 = C38821 * C129;
    const double C38837 = C38821 * C128;
    const double C38836 = C38821 * C127;
    const double C38829 = C38821 * C126;
    const double C38958 = C38821 * C295;
    const double C38951 = C38821 * C292;
    const double C38947 = C38821 * C294;
    const double C38946 = C38821 * C293;
    const double C39072 = C38821 * C472;
    const double C39065 = C38821 * C469;
    const double C39061 = C38821 * C471;
    const double C39060 = C38821 * C470;
    const double C39174 = C38821 * C291;
    const double C39276 = C38821 * C468;
    const double C39414 = C38821 * C892;
    const double C39407 = C38821 * C891;
    const double C39582 = C38821 * C1105;
    const double C39684 = C38821 * C1219;
    const double C40014 = C38821 * C1566;
    const double C40283 = C38821 * C1850;
    const double C38843 = C38823 * C467;
    const double C38838 = C38823 * C468;
    const double C38835 = C38823 * C469;
    const double C38830 = C38823 * C470;
    const double C38957 = C38823 * C1565;
    const double C38952 = C38823 * C892;
    const double C38948 = C38823 * C1566;
    const double C38945 = C38823 * C891;
    const double C39071 = C38823 * C1849;
    const double C39066 = C38823 * C472;
    const double C39062 = C38823 * C1850;
    const double C39059 = C38823 * C471;
    const double C39173 = C38823 * C893;
    const double C39275 = C38823 * C473;
    const double C39413 = C38823 * C1218;
    const double C39408 = C38823 * C1219;
    const double C39581 = C38823 * C3173;
    const double C39683 = C38823 * C4517;
    const double C40013 = C38823 * C2643;
    const double C38842 = C38825 * C474;
    const double C38839 = C38825 * C473;
    const double C38834 = C38825 * C472;
    const double C38831 = C38825 * C471;
    const double C38956 = C38825 * C2644;
    const double C38953 = C38825 * C1218;
    const double C38949 = C38825 * C2643;
    const double C38944 = C38825 * C1219;
    const double C39067 = C38825 * C1849;
    const double C39058 = C38825 * C1850;
    const double C39172 = C38825 * C1217;
    const double C39274 = C38825 * C1848;
    const double C39412 = C38825 * C4515;
    const double C39409 = C38825 * C4517;
    const double C39580 = C38825 * C3606;
    const double C40012 = C38825 * C4516;
    const double C44259 = C44221 * C130;
    const double C44249 = C44221 * C129;
    const double C44246 = C44221 * C128;
    const double C44231 = C44221 * C127;
    const double C44227 = C44221 * C126;
    const double C44462 = C44221 * C296;
    const double C44457 = C44221 * C291;
    const double C44449 = C44221 * C295;
    const double C44445 = C44221 * C294;
    const double C44444 = C44221 * C293;
    const double C44440 = C44221 * C292;
    const double C44656 = C44221 * C473;
    const double C44651 = C44221 * C468;
    const double C44643 = C44221 * C472;
    const double C44639 = C44221 * C471;
    const double C44638 = C44221 * C470;
    const double C44634 = C44221 * C469;
    const double C44829 = C44221 * C290;
    const double C44993 = C44221 * C467;
    const double C45211 = C44221 * C893;
    const double C45201 = C44221 * C892;
    const double C45197 = C44221 * C891;
    const double C45470 = C44221 * C1105;
    const double C45467 = C44221 * C1104;
    const double C45622 = C44221 * C1219;
    const double C45619 = C44221 * C1218;
    const double C46114 = C44221 * C1566;
    const double C46111 = C44221 * C1565;
    const double C46510 = C44221 * C1850;
    const double C46507 = C44221 * C1849;
    const double C48170 = C44221 * C2449;
    const double C48334 = C44221 * C2643;
    const double C48838 = C44221 * C3173;
    const double C49240 = C44221 * C4517;
    const double C44258 = C44223 * C475;
    const double C44252 = C44223 * C467;
    const double C44243 = C44223 * C468;
    const double C44234 = C44223 * C469;
    const double C44228 = C44223 * C470;
    const double C44461 = C44223 * C1564;
    const double C44458 = C44223 * C893;
    const double C44452 = C44223 * C1565;
    const double C44446 = C44223 * C1566;
    const double C44443 = C44223 * C891;
    const double C44437 = C44223 * C892;
    const double C44655 = C44223 * C1848;
    const double C44652 = C44223 * C473;
    const double C44646 = C44223 * C1849;
    const double C44640 = C44223 * C1850;
    const double C44637 = C44223 * C471;
    const double C44631 = C44223 * C472;
    const double C44828 = C44223 * C894;
    const double C44992 = C44223 * C474;
    const double C45210 = C44223 * C1217;
    const double C45204 = C44223 * C1218;
    const double C45198 = C44223 * C1219;
    const double C45469 = C44223 * C3173;
    const double C45466 = C44223 * C3174;
    const double C45621 = C44223 * C4517;
    const double C45618 = C44223 * C4515;
    const double C46113 = C44223 * C2643;
    const double C46110 = C44223 * C2644;
    const double C48169 = C44223 * C4110;
    const double C48333 = C44223 * C4516;
    const double C48837 = C44223 * C3606;
    const double C521 = C515 + C506;
    const double C5170 = C5161 + C5148;
    const double C11470 = C11468 + C11126;
    const double C33986 = C33984 + C33642;
    const double C44277 = C44268 + C44255;
    const double C177 = C172 * C50877;
    const double C8338 = C8337 + C8335;
    const double C5892 = C5112 * C1852;
    const double C11124 = C50956 * C1852;
    const double C33640 = C50956 * C1852;
    const double C44990 = C44219 * C1852;
    const double C5898 = C5891 + C5555;
    const double C11136 = C11122 + C11123;
    const double C33652 = C33638 + C33639;
    const double C44996 = C44989 + C44653;
    const double C2670 = C2667 + C2660;
    const double C6113 = C5112 * C4519;
    const double C14026 = C50956 * C4519;
    const double C41134 = C50956 * C4519;
    const double C45208 = C44219 * C4519;
    const double C6119 = C6111 + C6112;
    const double C14028 = C14025 + C12093;
    const double C41136 = C41133 + C34609;
    const double C45214 = C45206 + C45207;
    const double C50240 = ae * C50239;
    const double C5523 =
        (3 * C50058 + C49843 * C50239 + (2 * C50052 + C49843 * C50229) * ae) /
        C49731;
    const double C20616 = C20615 + C3615;
    const double C22724 = C22721 + C6373;
    const double C32224 = C32222 + C15900;
    const double C37868 = C37866 + C36922;
    const double C48176 = C48173 + C45468;
    const double C23386 = C5112 * C4520;
    const double C31719 = C50956 * C4520;
    const double C37357 = C50956 * C4520;
    const double C48835 = C44219 * C4520;
    const double C23392 = C23385 + C7023;
    const double C31723 = C31718 + C15240;
    const double C37363 = C37356 + C36424;
    const double C48841 = C48834 + C46112;
    const double C50329 = ae * C50328;
    const double C6524 =
        (3 * C50193 + C49843 * C50328 + (2 * C50187 + C49843 * C50319) * ae) /
        C49731;
    const double C50399 = C50370 + C50397;
    const double C532 = C526 * C50877;
    const double C8333 = C526 * C51016;
    const double C17495 = C526 * C17173;
    const double C2672 = C2669 * C2287;
    const double C8332 = C2669 * C50928;
    const double C17494 = C2669 * C50928;
    const double C24695 = C2669 * C51053;
    const double C5565 = C5559 + C5530;
    const double C11142 = C11134 + C11117;
    const double C33658 = C33650 + C33633;
    const double C44663 = C44657 + C44628;
    const double C22460 = C22457 + C6104;
    const double C15245 = C15243 + C12095;
    const double C37365 = C37361 + C34611;
    const double C47912 = C47909 + C45199;
    const double C5525 =
        (3 * (C49857 + C50067 + C50067 + C49843 * C50207) + C50217 + C50217 +
         C49843 * (2 * C50207 + C50214 + C50214 +
                   C49843 * (C49866 + C50210 + C50210 +
                             C49843 * (2 * ae * C49928 + C49843 * C49874)))) /
        C49738;
    const double C5543 = C5118 * C5522;
    const double C7426 = C5116 * C5522;
    const double C12983 = C10691 * C5522;
    const double C35499 = C33207 * C5522;
    const double C39063 = C38825 * C5522;
    const double C39057 = C38827 * C5522;
    const double C40282 = C38823 * C5522;
    const double C44641 = C44225 * C5522;
    const double C46509 = C44223 * C5522;
    const double C356 = C350 * C50877;
    const double C2300 = C350 * C2288;
    const double C8488 = C350 * C50928;
    const double C17645 = C350 * C50928;
    const double C24392 = C350 * C24380;
    const double C646 = C645 * C50877;
    const double C8024 = C645 * C50928;
    const double C17186 = C645 * C50928;
    const double C756 = C755 * C50877;
    const double C924 = C921 * C50877;
    const double C8637 = C921 * C50928;
    const double C17794 = C921 * C50928;
    const double C486 =
        (3 * C49876 + C49850 * C49890 + C49980 + C49980 +
         C49843 *
             (2 * ae * C49977 +
              C49843 * (3 * C49888 +
                        C49850 * (2 * C49850 * C49886 +
                                  C49850 * (C49886 + (C49880 * C49881 +
                                                      C49847 * bs[8] *
                                                          std::pow(C49841, 8)) *
                                                         C49846 * C49862))))) /
        C49738;
    const double C509 = C118 * C476;
    const double C5150 = C5118 * C476;
    const double C11464 = C10691 * C476;
    const double C33980 = C33207 * C476;
    const double C44257 = C44225 * C476;
    const double C50037 = ae * C50036;
    const double C1847 =
        (2 * C49953 + C49843 * C50036 + (C49948 + C49970 * C49847) * ae) /
        C49731;
    const double C50262 = C50261 + C50255;
    const double C6100 =
        (2 * (2 * ae * C50002 + C49843 * C50265) + C50277 + C50277 +
         C49843 *
             (C50265 + C50274 + C50274 +
              C49843 * (2 * ae * C50266 +
                        C49843 * C49984 *
                            (C49886 + (C49880 * C49881 +
                                       C49847 * bs[8] * std::pow(C49841, 8)) *
                                          C49846 * C49862)))) /
        C49738;
    const double C6114 = C5118 * C6099;
    const double C10102 = C118 * C6099;
    const double C12091 = C10691 * C6099;
    const double C34607 = C33207 * C6099;
    const double C39171 = C38827 * C6099;
    const double C45209 = C44225 * C6099;
    const double C4518 =
        (2 * (2 * ae * C50086 + C49843 * C50107) + C50159 + C50159 +
         C49843 * (C50107 + C50156 + C50156 +
                   C49843 * (2 * ae * C50120 +
                             C49843 * (C50105 + C49850 *
                                                    (C49880 * C49881 +
                                                     C49847 * bs[8] *
                                                         std::pow(C49841, 8)) *
                                                    C49846 * C50023)))) /
        C49738;
    const double C4523 = C118 * C4514;
    const double C7020 = C5118 * C4514;
    const double C15238 = C10691 * C4514;
    const double C36425 = C33207 * C4514;
    const double C38955 = C38827 * C4514;
    const double C46109 = C44225 * C4514;
    const double C50302 = C50301 + C50295;
    const double C50362 = ae * C50360;
    const double C50361 = C49843 * C50360;
    const double C20610 =
        (3 * C50110 + C49984 * C50407 + C50428 + C50428 +
         C49843 *
             (2 * ae * C50423 +
              C49843 * (3 * C50405 +
                        C49984 * (2 * C49984 * C49886 +
                                  C49984 * (C49886 + (C49880 * C49881 +
                                                      C49847 * bs[8] *
                                                          std::pow(C49841, 8)) *
                                                         C49846 * C50023))))) /
        C49738;
    const double C20614 = C118 * C20609;
    const double C22716 = C5118 * C20609;
    const double C32219 = C10691 * C20609;
    const double C37863 = C33207 * C20609;
    const double C48168 = C44225 * C20609;
    const double C50440 = ae * C50439;
    const double C21215 =
        (2 * C50145 + C49843 * C50439 + (C50142 + C50420 * C49847) * ae) /
        C49731;
    const double C50462 = C50461 + C50455;
    const double C50499 = ae * C50497;
    const double C50498 = C49843 * C50497;
    const double C50546 = C50509 + C50544;
    const double C38820 =
        ((ae * -2 * C49781) / C49791 -
         (((C49729 * C49792) / C49738 + 2 * C49805) * be) / C49731) /
            C49782 +
        ((C49729 * (C49792 / C49791 -
                    (((C49729 * C49803) / C49731 + 2 * C49800) * be) / C49731 -
                    C49747 / C49742) +
          2 * (C49805 / C49782 - ((C49729 * C49800 + C51017) * be) / C49731 +
               C49801)) *
         ae) /
            C49731 +
        C49803 / C49742 - ((2 * C49801 - C49755 / C49742) * be) / C49731;
    const double C38822 =
        (C49792 / C49791 -
         (((C49729 * C49803) / C49731 + 2 * C49800) * be) / C49731 -
         C49747 / C49742) /
            C49782 +
        ((C49729 * (C49803 / C49742 -
                    ((2 * C49801 - C49755 / C49742) * be) / C49731) +
          2 * (C49800 / C49782 - ((C49729 * C49801 + C50956) * be) / C49731)) *
         ae) /
            C49731 +
        (-2 * C49747) / (C49731 * 4 * C49738);
    const double C38824 =
        (C49803 / C49742 - ((2 * C49801 - C49755 / C49742) * be) / C49731) /
            C49782 +
        ((2 * (C49801 / C49782 - (0 * be) / C49731) -
          C49755 / (C49731 * 4 * C49738)) *
         ae) /
            C49731;
    const double C44220 =
        C49792 / C49791 -
        (((C49729 * C49803) / C49731 + 2 * C49800) * be) / C49731 -
        C49747 / C49742;
    const double C44222 =
        C49803 / C49742 - ((2 * C49801 - C49755 / C49742) * be) / C49731;
    const double C5169 = C5160 + C5145;
    const double C5166 = C5157 + C5136;
    const double C5163 = C5154 + C5127;
    const double C5366 = C5360 + C5345;
    const double C5363 = C5357 + C5330;
    const double C5569 = C5563 + C5548;
    const double C5566 = C5560 + C5533;
    const double C5736 = C5733 + C5351;
    const double C5900 = C5897 + C5554;
    const double C6121 = C6118 + C6109;
    const double C21811 = C21805 + C5339;
    const double C21808 = C21802 + C5336;
    const double C22461 = C22458 + C6103;
    const double C22723 = C22720 + C6374;
    const double C22890 = C22887 + C6532;
    const double C23394 = C23391 + C7024;
    const double C10735 = C10727 + C10714;
    const double C10734 = C10726 + C10711;
    const double C10731 = C10723 + C10702;
    const double C10729 = C10721 + C10696;
    const double C10941 = C10933 + C10918;
    const double C10939 = C10931 + C10912;
    const double C10938 = C10930 + C10905;
    const double C10936 = C10928 + C10899;
    const double C11143 = C11135 + C11120;
    const double C11141 = C11133 + C11114;
    const double C11140 = C11132 + C11107;
    const double C11138 = C11130 + C11101;
    const double C11309 = C11307 + C10923;
    const double C11469 = C11467 + C11125;
    const double C11689 = C11685 + C11676;
    const double C11687 = C11683 + C11670;
    const double C13821 = C13815 + C11942;
    const double C13820 = C13814 + C10909;
    const double C13817 = C13811 + C10908;
    const double C14029 = C14027 + C12094;
    const double C14696 = C14692 + C12586;
    const double C14695 = C14691 + C11667;
    const double C15036 = C15034 + C11944;
    const double C15244 = C15242 + C12096;
    const double C15904 = C15902 + C12588;
    const double C31566 = C31564 + C15033;
    const double C31724 = C31722 + C15241;
    const double C32223 = C32221 + C15901;
    const double C33251 = C33243 + C33230;
    const double C33250 = C33242 + C33227;
    const double C33247 = C33239 + C33218;
    const double C33245 = C33237 + C33212;
    const double C33457 = C33449 + C33434;
    const double C33455 = C33447 + C33428;
    const double C33454 = C33446 + C33421;
    const double C33452 = C33444 + C33415;
    const double C33659 = C33651 + C33636;
    const double C33657 = C33649 + C33630;
    const double C33656 = C33648 + C33623;
    const double C33654 = C33646 + C33617;
    const double C33825 = C33823 + C33439;
    const double C33985 = C33983 + C33641;
    const double C34205 = C34201 + C34192;
    const double C34203 = C34199 + C34186;
    const double C36266 = C36258 + C34458;
    const double C36265 = C36257 + C34460;
    const double C36262 = C36254 + C33425;
    const double C36260 = C36252 + C33424;
    const double C36939 = C36933 + C35102;
    const double C36938 = C36932 + C34183;
    const double C36936 = C36930 + C35104;
    const double C37200 = C37198 + C36243;
    const double C37366 = C37362 + C36423;
    const double C37364 = C37360 + C34612;
    const double C37867 = C37865 + C36921;
    const double C41137 = C41135 + C34610;
    const double C5177 = C5168 + C5143;
    const double C5176 = C5167 + C5140;
    const double C5171 = C5162 + C5125;
    const double C5371 = C5365 + C5343;
    const double C5370 = C5364 + C5334;
    const double C5574 = C5568 + C5546;
    const double C5573 = C5567 + C5537;
    const double C5738 = C5735 + C5724;
    const double C5902 = C5899 + C5888;
    const double C6123 = C6120 + C6107;
    const double C21818 = C21812 + C21800;
    const double C21813 = C21807 + C21790;
    const double C22465 = C22462 + C22456;
    const double C22725 = C22722 + C22711;
    const double C22892 = C22889 + C22878;
    const double C23396 = C23393 + C23382;
    const double C5174 = C5165 + C5134;
    const double C5173 = C5164 + C5131;
    const double C5373 = C5367 + C5349;
    const double C5368 = C5362 + C5328;
    const double C5740 = C5737 + C5728;
    const double C21816 = C21810 + C21796;
    const double C21815 = C21809 + C21794;
    const double C10744 = C10736 + C10718;
    const double C10741 = C10733 + C10709;
    const double C10740 = C10732 + C10706;
    const double C10738 = C10730 + C10700;
    const double C10950 = C10942 + C10922;
    const double C10948 = C10940 + C10916;
    const double C10945 = C10937 + C10903;
    const double C10943 = C10935 + C10897;
    const double C11147 = C11139 + C11105;
    const double C11145 = C11137 + C11099;
    const double C11312 = C11310 + C11303;
    const double C11694 = C11690 + C11680;
    const double C11692 = C11688 + C11674;
    const double C13828 = C13822 + C13810;
    const double C13825 = C13819 + C13803;
    const double C13824 = C13818 + C13798;
    const double C14701 = C14697 + C14689;
    const double C14698 = C14694 + C14682;
    const double C15039 = C15037 + C15029;
    const double C15907 = C15905 + C15897;
    const double C31569 = C31567 + C31561;
    const double C33260 = C33252 + C33234;
    const double C33257 = C33249 + C33225;
    const double C33256 = C33248 + C33222;
    const double C33254 = C33246 + C33216;
    const double C33466 = C33458 + C33438;
    const double C33464 = C33456 + C33432;
    const double C33461 = C33453 + C33419;
    const double C33459 = C33451 + C33413;
    const double C33663 = C33655 + C33621;
    const double C33661 = C33653 + C33615;
    const double C33828 = C33826 + C33819;
    const double C34210 = C34206 + C34196;
    const double C34208 = C34204 + C34190;
    const double C36275 = C36267 + C36248;
    const double C36272 = C36264 + C36240;
    const double C36271 = C36263 + C36238;
    const double C36269 = C36261 + C36234;
    const double C36946 = C36940 + C36926;
    const double C36943 = C36937 + C36918;
    const double C36941 = C36935 + C36914;
    const double C37203 = C37201 + C37195;
    const double C44281 = C44272 + C44241;
    const double C44280 = C44271 + C44238;
    const double C44480 = C44474 + C44456;
    const double C44475 = C44469 + C44435;
    const double C44838 = C44835 + C44826;
    const double C47268 = C47262 + C47248;
    const double C47267 = C47261 + C47246;
    const double C527 = C521 + C507;
    const double C5179 = C5170 + C5149;
    const double C11472 = C11470 + C11463;
    const double C33988 = C33986 + C33979;
    const double C44286 = C44277 + C44256;
    const double C8339 = C8338 * C50928;
    const double C17496 = C8338 * C50928;
    const double C5901 = C5898 + C5555;
    const double C11144 = C11136 + C11123;
    const double C33660 = C33652 + C33639;
    const double C44999 = C44996 + C44653;
    const double C2673 = C2670 * C2288;
    const double C24696 = C2670 * C24380;
    const double C6122 = C6119 + C6112;
    const double C14030 = C14028 + C12093;
    const double C41138 = C41136 + C34609;
    const double C45217 = C45214 + C45207;
    const double C5526 =
        (3 * (C49992 + C50056 + C50056 + C49843 * C50230) + C50240 + C50240 +
         C49843 * (2 * C50230 + C50237 + C50237 +
                   C49843 * (C49878 + C50233 + C50233 +
                             C49843 * (2 * ae * C49958 + C49843 * C50105)))) /
        C49738;
    const double C5551 = C5118 * C5523;
    const double C7423 = C5116 * C5523;
    const double C12981 = C10691 * C5523;
    const double C35497 = C33207 * C5523;
    const double C39070 = C38825 * C5523;
    const double C39068 = C38827 * C5523;
    const double C44649 = C44225 * C5523;
    const double C46506 = C44223 * C5523;
    const double C20617 = C20616 + C20613;
    const double C22727 = C22724 + C22715;
    const double C32226 = C32224 + C32218;
    const double C37870 = C37868 + C37862;
    const double C48179 = C48176 + C48167;
    const double C23395 = C23392 + C7023;
    const double C31725 = C31723 + C15240;
    const double C37367 = C37363 + C36424;
    const double C48844 = C48841 + C46112;
    const double C6526 =
        (3 * (C50184 + C50191 + C50191 + C49843 * C50316) + C50329 + C50329 +
         C49843 * (2 * C50316 + C50326 + C50326 +
                   C49843 * (C50306 + C50322 + C50322 +
                             C49843 * (2 * ae * C50308 +
                                       C49843 * C49984 * C49886)))) /
        C49738;
    const double C6531 = C5118 * C6524;
    const double C16428 = C10691 * C6524;
    const double C23793 = C5116 * C6524;
    const double C38263 = C33207 * C6524;
    const double C39410 = C38827 * C6524;
    const double C39682 = C38825 * C6524;
    const double C45620 = C44225 * C6524;
    const double C49239 = C44223 * C6524;
    const double C50400 = C50399 + C50392;
    const double C5571 = C5565 + C5531;
    const double C11150 = C11142 + C11118;
    const double C33666 = C33658 + C33634;
    const double C44669 = C44663 + C44629;
    const double C22463 = C22460 + C22452;
    const double C15247 = C15245 + C15237;
    const double C37369 = C37365 + C37353;
    const double C47915 = C47912 + C47904;
    const double C1851 =
        (2 * (2 * ae * C49951 + C49843 * C49890) + C50037 + C50037 +
         C49843 *
             (C49890 + C50034 + C50034 +
              C49843 * (2 * ae * C49973 +
                        C49843 * (2 * C49850 * C49886 +
                                  C49850 * (C49886 + (C49880 * C49881 +
                                                      C49847 * bs[8] *
                                                          std::pow(C49841, 8)) *
                                                         C49846 * C49862))))) /
        C49738;
    const double C1856 = C118 * C1847;
    const double C5893 = C5118 * C1847;
    const double C11127 = C10691 * C1847;
    const double C33643 = C33207 * C1847;
    const double C38841 = C38827 * C1847;
    const double C44991 = C44225 * C1847;
    const double C50263 = ae * C50262;
    const double C5524 =
        (3 * C50047 + C49843 * C50262 + (2 * C50041 + C49843 * C50252) * ae) /
        C49731;
    const double C50303 = ae * C50302;
    const double C6523 =
        (3 * C50170 + C49843 * C50302 + (2 * C50164 + C49843 * C50293) * ae) /
        C49731;
    const double C50363 = C50334 + C50361;
    const double C21216 =
        (2 * (2 * ae * C50141 + C49843 * C50407) + C50440 + C50440 +
         C49843 *
             (C50407 + C50437 + C50437 +
              C49843 * (2 * ae * C50419 +
                        C49843 * (2 * C49984 * C49886 +
                                  C49984 * (C49886 + (C49880 * C49881 +
                                                      C49847 * bs[8] *
                                                          std::pow(C49841, 8)) *
                                                         C49846 * C50023))))) /
        C49738;
    const double C21218 = C118 * C21215;
    const double C23387 = C5118 * C21215;
    const double C31720 = C10691 * C21215;
    const double C37358 = C33207 * C21215;
    const double C39579 = C38827 * C21215;
    const double C48836 = C44225 * C21215;
    const double C50463 = ae * C50462;
    const double C22874 =
        (3 * C50181 + C49843 * C50462 + (2 * C50175 + C49843 * C50452) * ae) /
        C49731;
    const double C50500 = C50468 + C50498;
    const double C50547 = C50546 + C50534;
    const double C44248 = C44220 * C122;
    const double C44245 = C44220 * C121;
    const double C44230 = C44220 * C120;
    const double C44448 = C44220 * C285;
    const double C44439 = C44220 * C282;
    const double C44642 = C44220 * C462;
    const double C44633 = C44220 * C459;
    const double C44821 = C44220 * C281;
    const double C44985 = C44220 * C458;
    const double C45200 = C44220 * C887;
    const double C47251 = C44220 * C284;
    const double C47241 = C44220 * C283;
    const double C47907 = C44220 * C886;
    const double C48162 = C44220 * C1101;
    const double C48326 = C44220 * C1215;
    const double C48830 = C44220 * C1562;
    const double C44251 = C44222 * C457;
    const double C44242 = C44222 * C458;
    const double C44233 = C44222 * C459;
    const double C44451 = C44222 * C1561;
    const double C44436 = C44222 * C887;
    const double C44645 = C44222 * C1845;
    const double C44630 = C44222 * C462;
    const double C44823 = C44222 * C888;
    const double C44987 = C44222 * C463;
    const double C45203 = C44222 * C1214;
    const double C47249 = C44222 * C1562;
    const double C47243 = C44222 * C886;
    const double C47905 = C44222 * C1215;
    const double C48164 = C44222 * C3170;
    const double C48328 = C44222 * C4513;
    const double C48832 = C44222 * C2640;
    const double C5178 = C5169 + C5146;
    const double C5175 = C5166 + C5137;
    const double C5172 = C5163 + C5128;
    const double C5372 = C5366 + C5346;
    const double C5369 = C5363 + C5331;
    const double C5575 = C5569 + C5549;
    const double C5572 = C5566 + C5534;
    const double C5739 = C5736 + C5726;
    const double C5903 = C5900 + C5890;
    const double C6124 = C6121 + C6110;
    const double C21817 = C21811 + C21798;
    const double C21814 = C21808 + C21792;
    const double C22464 = C22461 + C22454;
    const double C22726 = C22723 + C22713;
    const double C22893 = C22890 + C22880;
    const double C23397 = C23394 + C23384;
    const double C10743 = C10735 + C10715;
    const double C10742 = C10734 + C10712;
    const double C10739 = C10731 + C10703;
    const double C10737 = C10729 + C10697;
    const double C10949 = C10941 + C10919;
    const double C10947 = C10939 + C10913;
    const double C10946 = C10938 + C10906;
    const double C10944 = C10936 + C10900;
    const double C11151 = C11143 + C11121;
    const double C11149 = C11141 + C11115;
    const double C11148 = C11140 + C11108;
    const double C11146 = C11138 + C11102;
    const double C11311 = C11309 + C11301;
    const double C11471 = C11469 + C11461;
    const double C11693 = C11689 + C11677;
    const double C11691 = C11687 + C11671;
    const double C13827 = C13821 + C13808;
    const double C13826 = C13820 + C13805;
    const double C13823 = C13817 + C13796;
    const double C14031 = C14029 + C14024;
    const double C14700 = C14696 + C14687;
    const double C14699 = C14695 + C14684;
    const double C15038 = C15036 + C15027;
    const double C15246 = C15244 + C15235;
    const double C15906 = C15904 + C15895;
    const double C31568 = C31566 + C31559;
    const double C31726 = C31724 + C31717;
    const double C32225 = C32223 + C32216;
    const double C33259 = C33251 + C33231;
    const double C33258 = C33250 + C33228;
    const double C33255 = C33247 + C33219;
    const double C33253 = C33245 + C33213;
    const double C33465 = C33457 + C33435;
    const double C33463 = C33455 + C33429;
    const double C33462 = C33454 + C33422;
    const double C33460 = C33452 + C33416;
    const double C33667 = C33659 + C33637;
    const double C33665 = C33657 + C33631;
    const double C33664 = C33656 + C33624;
    const double C33662 = C33654 + C33618;
    const double C33827 = C33825 + C33817;
    const double C33987 = C33985 + C33977;
    const double C34209 = C34205 + C34193;
    const double C34207 = C34203 + C34187;
    const double C36274 = C36266 + C36246;
    const double C36273 = C36265 + C36242;
    const double C36270 = C36262 + C36236;
    const double C36268 = C36260 + C36232;
    const double C36945 = C36939 + C36924;
    const double C36944 = C36938 + C36920;
    const double C36942 = C36936 + C36916;
    const double C37202 = C37200 + C37193;
    const double C37370 = C37366 + C37355;
    const double C37368 = C37364 + C37351;
    const double C37869 = C37867 + C37860;
    const double C41139 = C41137 + C41132;
    const double C533 = C527 * C50877;
    const double C5904 = C5901 + C5892;
    const double C11152 = C11144 + C11124;
    const double C33668 = C33660 + C33640;
    const double C45002 = C44999 + C44990;
    const double C6125 = C6122 + C6113;
    const double C14032 = C14030 + C14026;
    const double C41140 = C41138 + C41134;
    const double C45220 = C45217 + C45208;
    const double C5552 = C5112 * C5526;
    const double C44650 = C44219 * C5526;
    const double C5564 = C5550 + C5551;
    const double C44662 = C44648 + C44649;
    const double C23398 = C23395 + C23386;
    const double C31727 = C31725 + C31719;
    const double C37371 = C37367 + C37357;
    const double C48847 = C48844 + C48835;
    const double C22882 = C5112 * C6526;
    const double C48331 = C44219 * C6526;
    const double C22888 = C22881 + C6531;
    const double C48337 = C48330 + C45620;
    const double C50401 = ae * C50400;
    const double C7418 =
        (4 * C50216 + C49843 * C50400 + (3 * C50206 + C49843 * C50389) * ae) /
        C49731;
    const double C5527 =
        (3 * (C49876 + C50045 + C50045 + C49843 * C50253) + C50263 + C50263 +
         C49843 *
             (2 * C50253 + C50260 + C50260 +
              C49843 * (C49888 + C50256 + C50256 +
                        C49843 * (2 * ae * C49969 +
                                  C49843 * (C49886 + (C49880 * C49881 +
                                                      C49847 * bs[8] *
                                                          std::pow(C49841, 8)) *
                                                         C49846 * C49862))))) /
        C49738;
    const double C5556 = C5118 * C5524;
    const double C12979 = C10691 * C5524;
    const double C35495 = C33207 * C5524;
    const double C39273 = C38827 * C5524;
    const double C44654 = C44225 * C5524;
    const double C6525 =
        (3 * (C50161 + C50168 + C50168 + C49843 * C50290) + C50303 + C50303 +
         C49843 *
             (2 * C50290 + C50300 + C50300 +
              C49843 * (C50280 + C50296 + C50296 +
                        C49843 * (2 * ae * C50282 +
                                  C49843 * C49984 * C49850 *
                                      (C49880 * C49881 +
                                       C49847 * bs[8] * std::pow(C49841, 8)) *
                                      C49846)))) /
        C49738;
    const double C6528 = C5118 * C6523;
    const double C16426 = C10691 * C6523;
    const double C39411 = C38827 * C6523;
    const double C43472 = C33207 * C6523;
    const double C45617 = C44225 * C6523;
    const double C50364 = C50363 + C50356;
    const double C22875 =
        (3 * (C50110 + C50179 + C50179 + C49843 * C50453) + C50463 + C50463 +
         C49843 *
             (2 * C50453 + C50460 + C50460 +
              C49843 * (C50405 + C50456 + C50456 +
                        C49843 * (2 * ae * C50415 +
                                  C49843 * (C49886 + (C49880 * C49881 +
                                                      C49847 * bs[8] *
                                                          std::pow(C49841, 8)) *
                                                         C49846 * C50023))))) /
        C49738;
    const double C22883 = C5118 * C22874;
    const double C32617 = C10691 * C22874;
    const double C38261 = C33207 * C22874;
    const double C40011 = C38827 * C22874;
    const double C48332 = C44225 * C22874;
    const double C50501 = C50500 + C50493;
    const double C50549 = ae * C50547;
    const double C50548 = C49843 * C50547;
    const double C44266 = C44248 + C44249;
    const double C44265 = C44245 + C44246;
    const double C44260 = C44230 + C44231;
    const double C44466 = C44448 + C44449;
    const double C44465 = C44439 + C44440;
    const double C44660 = C44642 + C44643;
    const double C44659 = C44633 + C44634;
    const double C44830 = C44821 + C44457;
    const double C44994 = C44985 + C44651;
    const double C45212 = C45200 + C45201;
    const double C47258 = C47251 + C44445;
    const double C47253 = C47241 + C44444;
    const double C47911 = C47907 + C45197;
    const double C48171 = C48162 + C45470;
    const double C48335 = C48326 + C45622;
    const double C48839 = C48830 + C46114;
    const double C44267 = C44251 + C44252;
    const double C44264 = C44242 + C44243;
    const double C44261 = C44233 + C44234;
    const double C44467 = C44451 + C44452;
    const double C44464 = C44436 + C44437;
    const double C44661 = C44645 + C44646;
    const double C44658 = C44630 + C44631;
    const double C44831 = C44823 + C44458;
    const double C44995 = C44987 + C44652;
    const double C45213 = C45203 + C45204;
    const double C47257 = C47249 + C44446;
    const double C47254 = C47243 + C44443;
    const double C47910 = C47905 + C45198;
    const double C48172 = C48164 + C45469;
    const double C48336 = C48328 + C45621;
    const double C48840 = C48832 + C46113;
    const double C10746 = C10741 + C10742;
    const double C10745 = C10739 + C10740;
    const double C13806 = C10947 + C10948;
    const double C13800 = C10948 + C10947;
    const double C13801 = C10945 + C10946;
    const double C13799 = C10946 + C10945;
    const double C11299 = C10943 + C10944;
    const double C14227 = C10944 + C10943;
    const double C11459 = C11145 + C11146;
    const double C14685 = C11691 + C11692;
    const double C14680 = C11692 + C11691;
    const double C30680 = C13826 + C13825;
    const double C31557 = C15039 + C15038;
    const double C32214 = C15907 + C15906;
    const double C33262 = C33257 + C33258;
    const double C33261 = C33255 + C33256;
    const double C36249 = C33464 + C33463;
    const double C40936 = C33463 + C33464;
    const double C40935 = C33461 + C33462;
    const double C40934 = C33462 + C33461;
    const double C33815 = C33459 + C33460;
    const double C41335 = C33460 + C33459;
    const double C33975 = C33661 + C33662;
    const double C41789 = C34207 + C34208;
    const double C41788 = C34208 + C34207;
    const double C37191 = C36272 + C36273;
    const double C36276 = C36270 + C36271;
    const double C37858 = C36941 + C36942;
    const double C5570 = C5564 + C5551;
    const double C44668 = C44662 + C44649;
    const double C22891 = C22888 + C6531;
    const double C48340 = C48337 + C45620;
    const double C7420 =
        (4 * (2 * C50207 + C50214 + C50214 + C49843 * C50390) + C50401 +
         C50401 +
         C49843 * (3 * C50390 + C50398 + C50398 +
                   C49843 * (2 * C50382 + C50394 + C50394 +
                             C49843 * (C49874 + C50386 + C50386 +
                                       C49843 * (2 * ae * C49942 +
                                                 C49843 * C49886))))) /
        C49738;
    const double C7425 = C5118 * C7418;
    const double C39064 = C38827 * C7418;
    const double C40281 = C38825 * C7418;
    const double C46508 = C44225 * C7418;
    const double C50365 = ae * C50364;
    const double C7417 =
        (4 * C50239 + C49843 * C50364 + (3 * C50229 + C49843 * C50353) * ae) /
        C49731;
    const double C50502 = ae * C50501;
    const double C23789 =
        (4 * C50328 + C49843 * C50501 + (3 * C50319 + C49843 * C50491) * ae) /
        C49731;
    const double C50550 = C50508 + C50548;
    const double C44275 = C44266 + C44249;
    const double C44274 = C44265 + C44246;
    const double C44269 = C44260 + C44231;
    const double C44472 = C44466 + C44449;
    const double C44471 = C44465 + C44440;
    const double C44666 = C44660 + C44643;
    const double C44665 = C44659 + C44634;
    const double C44833 = C44830 + C44457;
    const double C44997 = C44994 + C44651;
    const double C45215 = C45212 + C45201;
    const double C47264 = C47258 + C44445;
    const double C47259 = C47253 + C44444;
    const double C47914 = C47911 + C45197;
    const double C48174 = C48171 + C45470;
    const double C48338 = C48335 + C45622;
    const double C48842 = C48839 + C46114;
    const double C44276 = C44267 + C44252;
    const double C44273 = C44264 + C44243;
    const double C44270 = C44261 + C44234;
    const double C44473 = C44467 + C44452;
    const double C44470 = C44464 + C44437;
    const double C44667 = C44661 + C44646;
    const double C44664 = C44658 + C44631;
    const double C44834 = C44831 + C44458;
    const double C44998 = C44995 + C44652;
    const double C45216 = C45213 + C45204;
    const double C47263 = C47257 + C44446;
    const double C47260 = C47254 + C44443;
    const double C47913 = C47910 + C45198;
    const double C48175 = C48172 + C45469;
    const double C48339 = C48336 + C45621;
    const double C48843 = C48840 + C46113;
    const double C10748 = C10746 * C50877;
    const double C10747 = C10745 * C50877;
    const double C11306 = C11299 * C50877;
    const double C11466 = C11459 * C50877;
    const double C33264 = C33262 * C50877;
    const double C33263 = C33261 * C50877;
    const double C33822 = C33815 * C50877;
    const double C33982 = C33975 * C50877;
    const double C5576 = C5570 + C5552;
    const double C44674 = C44668 + C44650;
    const double C22894 = C22891 + C22882;
    const double C48343 = C48340 + C48331;
    const double C7419 =
        (4 * (2 * C50230 + C50237 + C50237 + C49843 * C50354) + C50365 +
         C50365 +
         C49843 * (3 * C50354 + C50362 + C50362 +
                   C49843 * (2 * C50346 + C50358 + C50358 +
                             C49843 * (C50105 + C50350 + C50350 +
                                       C49843 * (2 * ae * C50113 +
                                                 C49843 * C49850 *
                                                     (C49880 * C49881 +
                                                      C49847 * bs[8] *
                                                          std::pow(C49841, 8)) *
                                                     C49846))))) /
        C49738;
    const double C7422 = C5118 * C7417;
    const double C39069 = C38827 * C7417;
    const double C46505 = C44225 * C7417;
    const double C23790 =
        (4 * (2 * C50316 + C50326 + C50326 + C49843 * C50489) + C50502 +
         C50502 +
         C49843 * (3 * C50489 + C50499 + C50499 +
                   C49843 * (2 * C50480 + C50495 + C50495 +
                             C49843 * (C50467 + C50488 + C50488 +
                                       C49843 * (2 * ae * C50470 +
                                                 C49843 * C49984 *
                                                     (C49880 * C49881 +
                                                      C49847 * bs[8] *
                                                          std::pow(C49841, 8)) *
                                                     C49846))))) /
        C49738;
    const double C23792 = C5118 * C23789;
    const double C39681 = C38827 * C23789;
    const double C49238 = C44225 * C23789;
    const double C50551 = C50550 + C50542;
    const double C44284 = C44275 + C44250;
    const double C44283 = C44274 + C44247;
    const double C44278 = C44269 + C44232;
    const double C44478 = C44472 + C44450;
    const double C44477 = C44471 + C44441;
    const double C44672 = C44666 + C44644;
    const double C44671 = C44665 + C44635;
    const double C44836 = C44833 + C44822;
    const double C45000 = C44997 + C44986;
    const double C45218 = C45215 + C45202;
    const double C47270 = C47264 + C47252;
    const double C47265 = C47259 + C47242;
    const double C47917 = C47914 + C47908;
    const double C48177 = C48174 + C48163;
    const double C48341 = C48338 + C48327;
    const double C48845 = C48842 + C48831;
    const double C44285 = C44276 + C44253;
    const double C44282 = C44273 + C44244;
    const double C44279 = C44270 + C44235;
    const double C44479 = C44473 + C44453;
    const double C44476 = C44470 + C44438;
    const double C44673 = C44667 + C44647;
    const double C44670 = C44664 + C44632;
    const double C44837 = C44834 + C44824;
    const double C45001 = C44998 + C44988;
    const double C45219 = C45216 + C45205;
    const double C47269 = C47263 + C47250;
    const double C47266 = C47260 + C47244;
    const double C47916 = C47913 + C47906;
    const double C48178 = C48175 + C48165;
    const double C48342 = C48339 + C48329;
    const double C48846 = C48843 + C48833;
    const double C50552 = ae * C50551;
    const double C40277 =
        (5 * C50400 + C49843 * C50551 + (4 * C50389 + C49843 * C50538) * ae) /
        C49731;
    const double C40278 =
        (5 * (3 * C50390 + C50398 + C50398 + C49843 * C50540) + C50552 +
         C50552 +
         C49843 *
             (4 * C50540 + C50549 + C50549 +
              C49843 *
                  (3 * C50532 + C50545 + C50545 +
                   C49843 * (2 * C50524 + C50539 + C50539 +
                             C49843 * (C49886 + C50528 + C50528 +
                                       C49843 * (2 * ae * C49964 +
                                                 C49843 *
                                                     (C49880 * C49881 +
                                                      C49847 * bs[8] *
                                                          std::pow(C49841, 8)) *
                                                     C49846)))))) /
        C49738;
    const double C40280 = C38827 * C40277;
    d2ee[0] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C117 * C119 + C141 + C141 + C50892 * C133) * C51016 +
                    C2486 * C50928) *
                       C51044 +
                   (C8017 + C8018) * C51045 + C8025 * C8015) *
                      C50795 * C51003 -
                  (C8486 * C8015 + (C8175 + C8176) * C51045 +
                   (C2487 * C50928 + C2486 * C51016) * C51044) *
                      C50795 * C50831) *
                     C51046 +
                 (((C8176 + C8175) * C51044 + (C8174 + C8173) * C51045 +
                   (C8487 + C8488) * C8015) *
                      C50795 * C50831 -
                  (C8026 * C8015 + (C8020 + C8019) * C51045 +
                   (C8018 + C8017) * C51044) *
                      C50795 * C51003) *
                     C51047 +
                 ((C8025 * C51044 + (C8022 + C8021) * C51045 +
                   (C8023 + C8024) * C8015) *
                      C50795 * C51003 -
                  (((C117 * C289 + C332 + C332 + C50892 * C309) * C50928 +
                    C645 * C51016) *
                       C8015 +
                   (C8488 + C8487) * C51045 + C8486 * C51044) *
                      C50795 * C50831) *
                     C635)) /
               (p * q * std::sqrt(p + q));
    d2ee[1] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                ((((((C117 * C119 + C141 + C141 + C50892 * C133) * C51016 +
                     C2486 * C50928) *
                        C51044 +
                    (C8017 + C8018) * C51045 + C8025 * C8015) *
                       C51004 -
                   (C8635 * C8015 + (C8329 + C8330) * C51045 +
                    (C3198 * C50928 +
                     (C117 * C460 + C497 + C497 + C50892 * C480) * C51016) *
                        C51044) *
                       C50859) *
                      C51003 +
                  (((C3198 * C51016 + C3197 * C50928) * C51044 +
                    (C8832 + C8833) * C51045 + (C8834 + C8835) * C8015) *
                       C50859 -
                   (C8486 * C8015 + (C8175 + C8176) * C51045 +
                    (C2487 * C50928 + C2486 * C51016) * C51044) *
                       C51004) *
                      C50831) *
                     C278 +
                 ((((C8330 + C8329) * C51044 + (C8328 + C8327) * C51045 +
                    (C8636 + C8637) * C8015) *
                       C50859 -
                   (C8026 * C8015 + (C8020 + C8019) * C51045 +
                    (C8018 + C8017) * C51044) *
                       C51004) *
                      C51003 +
                  (((C8176 + C8175) * C51044 + (C8174 + C8173) * C51045 +
                    (C8487 + C8488) * C8015) *
                       C51004 -
                   (((C117 * C1559 + C1572 + C1572 + C50892 * C1567) * C50928 +
                     C921 * C51016) *
                        C8015 +
                    (C8835 + C8834) * C51045 + (C8833 + C8832) * C51044) *
                       C50859) *
                      C50831) *
                     C50766)) /
               (p * q * std::sqrt(p + q));
    d2ee[2] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                (((((C117 * C119 + C141 + C141 + C50892 * C133) * C51016 +
                    C2486 * C50928) *
                       C51044 +
                   (C8017 + C8018) * C51045 + C8025 * C8015) *
                      C50795 * C275 -
                  ((C8173 + C8174) * C8015 + (C8175 + C8176) * C51045 +
                   (C2487 * C50928 + C2486 * C51016) * C51044) *
                      C50795 * C276 +
                  ((C2487 * C51016 + C2489 * C50928) * C51044 +
                   (C8177 + C8178) * C51045 + (C8179 + C8180) * C8015) *
                      C50795 * C277) *
                     C278 +
                 (((C8176 + C8175) * C51044 + (C8174 + C8173) * C51045 +
                   (C345 * C51016 + C350 * C50928) * C8015) *
                      C50795 * C276 -
                  (C8026 * C8015 + (C8020 + C8019) * C51045 +
                   (C8018 + C8017) * C51044) *
                      C50795 * C275 -
                  (((C117 * C1098 + C1111 + C1111 + C50892 * C1106) * C50928 +
                    C350 * C51016) *
                       C8015 +
                   (C8180 + C8179) * C51045 + (C8178 + C8177) * C51044) *
                      C50795 * C277) *
                     C50766)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                ((((C117 * C119 + C141 + C141 + C50892 * C133) * C51016 +
                   C2486 * C50928) *
                      C51044 +
                  (C8017 + C8018) * C51045 + C8025 * C8015) *
                     C50795 * C50779 * C113 -
                 (C8026 * C8015 + (C8020 + C8019) * C51045 +
                  (C8018 + C8017) * C51044) *
                     C50795 * C50779 * C114 +
                 (C8025 * C51044 + (C8022 + C8021) * C51045 +
                  (C8023 + C8024) * C8015) *
                     C50795 * C50779 * C115 -
                 (((C117 * C636 + C642 + C642 + C50892 * C638) * C50928 +
                   C172 * C51016) *
                      C8015 +
                  (C8024 + C8023) * C51045 + C8026 * C51044) *
                     C50795 * C50779 * C116)) /
                   (p * q * std::sqrt(p + q)) +
               (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                (((((C117 * C119 + C141 + C141 + C50892 * C133) * C51016 +
                    C2486 * C50928) *
                       C51044 +
                   (C8017 + C8018) * C51045 + C8025 * C8015) *
                      C454 -
                  ((C8327 + C8328) * C8015 + (C8329 + C8330) * C51045 +
                   (C3198 * C50928 +
                    (C117 * C460 + C497 + C497 + C50892 * C480) * C51016) *
                       C51044) *
                      C455 +
                  (((C117 * C461 + C498 + C498 + C50892 * C481) * C51016 +
                    C3620 * C50928) *
                       C51044 +
                   (C8331 + C8332) * C51045 + (C8333 + C8339) * C8015) *
                      C456) *
                     C50779 * C278 +
                 (((C8330 + C8329) * C51044 + (C8328 + C8327) * C51045 +
                   (C522 * C51016 + C921 * C50928) * C8015) *
                      C455 -
                  (C8026 * C8015 + (C8020 + C8019) * C51045 +
                   (C8018 + C8017) * C51044) *
                      C454 -
                  (((C117 * C1212 + C1225 + C1225 + C50892 * C1220) * C50928 +
                    C527 * C51016) *
                       C8015 +
                   (C8339 + C8333) * C51045 + (C8332 + C8331) * C51044) *
                      C456) *
                     C50779 * C50766)) /
                   (p * q * std::sqrt(p + q));
    d2ee[3] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C117 * C119 + C141 + C141 + C50892 * C133) * C51016 +
                    C2486 * C50928) *
                       C51044 +
                   (C8017 + C8018) * C51045 + C8025 * C8015) *
                      C51004 -
                  (C8635 * C8015 + (C8329 + C8330) * C51045 +
                   (C3198 * C50928 +
                    (C117 * C460 + C497 + C497 + C50892 * C480) * C51016) *
                       C51044) *
                      C50859) *
                     C50779 * C51046 +
                 (((C8330 + C8329) * C51044 + (C8328 + C8327) * C51045 +
                   (C8636 + C8637) * C8015) *
                      C50859 -
                  (C8026 * C8015 + (C8020 + C8019) * C51045 +
                   (C8018 + C8017) * C51044) *
                      C51004) *
                     C50779 * C51047 +
                 ((C8025 * C51044 + (C8022 + C8021) * C51045 +
                   (C8023 + C8024) * C8015) *
                      C51004 -
                  (((C117 * C890 + C912 + C912 + C50892 * C900) * C50928 +
                    C755 * C51016) *
                       C8015 +
                   (C8637 + C8636) * C51045 + C8635 * C51044) *
                      C50859) *
                     C50779 * C635)) /
               (p * q * std::sqrt(p + q));
    d2ee[4] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                ((((C117 * C119 + C141 + C141 + C50892 * C133) * C51016 +
                   C2486 * C50928) *
                      C51044 +
                  (C8017 + C8018) * C51045 + C8025 * C8015) *
                     C50795 * C50779 * C113 -
                 (C8026 * C8015 + (C8020 + C8019) * C51045 +
                  (C8018 + C8017) * C51044) *
                     C50795 * C50779 * C114 +
                 (C8025 * C51044 + (C8022 + C8021) * C51045 +
                  (C8023 + C8024) * C8015) *
                     C50795 * C50779 * C115 -
                 (((C117 * C636 + C642 + C642 + C50892 * C638) * C50928 +
                   C172 * C51016) *
                      C8015 +
                  (C8024 + C8023) * C51045 + C8026 * C51044) *
                     C50795 * C50779 * C116)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                (((((C117 * C119 + C141 + C141 + C50892 * C133) * C51016 +
                    C2486 * C50928) *
                       C51044 +
                   (C8017 + C8018) * C51045 + C8025 * C8015) *
                      C50795 * C275 -
                  ((C8173 + C8174) * C8015 + (C8175 + C8176) * C51045 +
                   (C2487 * C50928 + C2486 * C51016) * C51044) *
                      C50795 * C276 +
                  ((C2487 * C51016 + C2489 * C50928) * C51044 +
                   (C8177 + C8178) * C51045 + (C8179 + C8180) * C8015) *
                      C50795 * C277) *
                     C278 +
                 (((C8176 + C8175) * C51044 + (C8174 + C8173) * C51045 +
                   (C345 * C51016 + C350 * C50928) * C8015) *
                      C50795 * C276 -
                  (C8026 * C8015 + (C8020 + C8019) * C51045 +
                   (C8018 + C8017) * C51044) *
                      C50795 * C275 -
                  (((C117 * C1098 + C1111 + C1111 + C50892 * C1106) * C50928 +
                    C350 * C51016) *
                       C8015 +
                   (C8180 + C8179) * C51045 + (C8178 + C8177) * C51044) *
                      C50795 * C277) *
                     C50766)) /
                   (p * q * std::sqrt(p + q));
    d2ee[5] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C117 * C119 + C141 + C141 + C50892 * C133) * C51016 +
                    C2486 * C50928) *
                       C51044 +
                   (C8017 + C8018) * C51045 + C8025 * C8015) *
                      C50795 * C51048 -
                  (C8486 * C8015 + (C8175 + C8176) * C51045 +
                   (C2487 * C50928 + C2486 * C51016) * C51044) *
                      C50795 * C51049 +
                  ((C2487 * C51016 + C2489 * C50928) * C51044 +
                   (C8177 + C8178) * C51045 + (C8179 + C8180) * C8015) *
                      C50795 * C1328) *
                     C50995 +
                 (((C8176 + C8175) * C51044 + (C8174 + C8173) * C51045 +
                   (C8487 + C8488) * C8015) *
                      C50795 * C51049 -
                  (C8026 * C8015 + (C8020 + C8019) * C51045 +
                   (C8018 + C8017) * C51044) *
                      C50795 * C51048 -
                  (((C117 * C1098 + C1111 + C1111 + C50892 * C1106) * C50928 +
                    C350 * C51016) *
                       C8015 +
                   (C8180 + C8179) * C51045 + (C8178 + C8177) * C51044) *
                      C50795 * C1328) *
                     C50766)) /
               (p * q * std::sqrt(p + q));
    d2ee[6] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C117 * C119 + C141 + C141 + C50892 * C133) * C51016 +
                    C2486 * C50928) *
                       C51044 +
                   (C8017 + C8018) * C51045 + C8025 * C8015) *
                      C51004 -
                  (C8635 * C8015 + (C8329 + C8330) * C51045 +
                   (C3198 * C50928 +
                    (C117 * C460 + C497 + C497 + C50892 * C480) * C51016) *
                       C51044) *
                      C50859) *
                     C51048 +
                 (((C3198 * C51016 + C3197 * C50928) * C51044 +
                   (C8832 + C8833) * C51045 + (C8834 + C8835) * C8015) *
                      C50859 -
                  (C8486 * C8015 + (C8175 + C8176) * C51045 +
                   (C2487 * C50928 + C2486 * C51016) * C51044) *
                      C51004) *
                     C51049 +
                 (((C2487 * C51016 + C2489 * C50928) * C51044 +
                   (C8177 + C8178) * C51045 + (C8179 + C8180) * C8015) *
                      C51004 -
                  (((C117 * C3172 + C3190 + C3190 + C50892 * C3178) * C50928 +
                    C2975 * C51016) *
                       C8015 +
                   (C3199 * C50928 + C2668 * C51016) * C51045 +
                   (C4120 * C50928 + C3197 * C51016) * C51044) *
                      C50859) *
                     C1328) *
                C50760) /
               (p * q * std::sqrt(p + q));
    d2ee[7] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                ((((C117 * C119 + C141 + C141 + C50892 * C133) * C51016 +
                   C2486 * C50928) *
                      C51044 +
                  (C8017 + C8018) * C51045 + C8025 * C8015) *
                     C50795 * C1093 -
                 (C8486 * C8015 + (C8175 + C8176) * C51045 +
                  (C2487 * C50928 + C2486 * C51016) * C51044) *
                     C50795 * C1094 +
                 ((C2487 * C51016 + C2489 * C50928) * C51044 +
                  (C8177 + C8178) * C51045 + (C8179 + C8180) * C8015) *
                     C50795 * C1095 -
                 (((C117 * C2448 + C2473 + C2473 + C50892 * C2454) * C50928 +
                   C2491 * C51016) *
                      C8015 +
                  (C2490 * C50928 + C2488 * C51016) * C51045 +
                  (C3457 * C50928 + C2489 * C51016) * C51044) *
                     C50795 * C1096) *
                C50760) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                (((((C117 * C119 + C141 + C141 + C50892 * C133) * C51016 +
                    C2486 * C50928) *
                       C51044 +
                   (C8017 + C8018) * C51045 + C8025 * C8015) *
                      C50795 * C1022 -
                  (C8486 * C8015 + (C8175 + C8176) * C51045 +
                   (C2487 * C50928 + C2486 * C51016) * C51044) *
                      C50795 * C50831) *
                     C1024 +
                 (((C8176 + C8175) * C51044 + (C8174 + C8173) * C51045 +
                   (C8487 + C8488) * C8015) *
                      C50795 * C50831 -
                  (C8026 * C8015 + (C8020 + C8019) * C51045 +
                   (C8018 + C8017) * C51044) *
                      C50795 * C1022) *
                     C1025 +
                 ((C8025 * C51044 + (C8022 + C8021) * C51045 +
                   (C8023 + C8024) * C8015) *
                      C50795 * C1022 -
                  (((C117 * C289 + C332 + C332 + C50892 * C309) * C50928 +
                    C645 * C51016) *
                       C8015 +
                   (C8488 + C8487) * C51045 + C8486 * C51044) *
                      C50795 * C50831) *
                     C1026)) /
                   (p * q * std::sqrt(p + q)) +
               (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                (((((C117 * C119 + C141 + C141 + C50892 * C133) * C51016 +
                    C2486 * C50928) *
                       C51044 +
                   (C8017 + C8018) * C51045 + C8025 * C8015) *
                      C454 -
                  (C8635 * C8015 + (C8329 + C8330) * C51045 +
                   (C3198 * C50928 +
                    (C117 * C460 + C497 + C497 + C50892 * C480) * C51016) *
                       C51044) *
                      C455 +
                  (((C117 * C461 + C498 + C498 + C50892 * C481) * C51016 +
                    C3620 * C50928) *
                       C51044 +
                   (C8331 + C8332) * C51045 + (C8333 + C8339) * C8015) *
                      C456) *
                     C1022 +
                 (((C3198 * C51016 + C3197 * C50928) * C51044 +
                   (C8832 + C8833) * C51045 + (C8834 + C8835) * C8015) *
                      C455 -
                  (C8486 * C8015 + (C8175 + C8176) * C51045 +
                   (C2487 * C50928 + C2486 * C51016) * C51044) *
                      C454 -
                  (((C117 * C2642 + C2661 + C2661 + C50892 * C2648) * C50928 +
                    C8338 * C51016) *
                       C8015 +
                   (C2670 * C50928 + C2669 * C51016) * C51045 +
                   (C3621 * C50928 + C3620 * C51016) * C51044) *
                      C456) *
                     C50831) *
                C50760) /
                   (p * q * std::sqrt(p + q));
    d2ee[8] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                ((((((C117 * C119 + C141 + C141 + C50892 * C133) * C51016 +
                     C2486 * C50928) *
                        C51044 +
                    (C8017 + C8018) * C51045 + C8025 * C8015) *
                       C51004 -
                   (C8635 * C8015 + (C8329 + C8330) * C51045 +
                    (C3198 * C50928 +
                     (C117 * C460 + C497 + C497 + C50892 * C480) * C51016) *
                        C51044) *
                       C50859) *
                      C1022 +
                  (((C3198 * C51016 + C3197 * C50928) * C51044 +
                    (C8832 + C8833) * C51045 + (C8834 + C8835) * C8015) *
                       C50859 -
                   (C8486 * C8015 + (C8175 + C8176) * C51045 +
                    (C2487 * C50928 + C2486 * C51016) * C51044) *
                       C51004) *
                      C50831) *
                     C50995 +
                 ((((C8330 + C8329) * C51044 + (C8328 + C8327) * C51045 +
                    (C8636 + C8637) * C8015) *
                       C50859 -
                   (C8026 * C8015 + (C8020 + C8019) * C51045 +
                    (C8018 + C8017) * C51044) *
                       C51004) *
                      C1022 +
                  (((C8176 + C8175) * C51044 + (C8174 + C8173) * C51045 +
                    (C8487 + C8488) * C8015) *
                       C51004 -
                   (((C117 * C1559 + C1572 + C1572 + C50892 * C1567) * C50928 +
                     C921 * C51016) *
                        C8015 +
                    (C8835 + C8834) * C51045 + (C8833 + C8832) * C51044) *
                       C50859) *
                      C50831) *
                     C50766)) /
               (p * q * std::sqrt(p + q));
    d2ee[9] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                (((((C117 * C119 + C141 + C141 + C50892 * C133) * C51016 +
                    C2486 * C50928) *
                       C51044 +
                   (C8017 + C8018) * C51045 + C8025 * C8015) *
                      C50795 * C1022 -
                  (C8486 * C8015 + (C8175 + C8176) * C51045 +
                   (C2487 * C50928 + C2486 * C51016) * C51044) *
                      C50795 * C50831) *
                     C1024 +
                 (((C8176 + C8175) * C51044 + (C8174 + C8173) * C51045 +
                   (C8487 + C8488) * C8015) *
                      C50795 * C50831 -
                  (C8026 * C8015 + (C8020 + C8019) * C51045 +
                   (C8018 + C8017) * C51044) *
                      C50795 * C1022) *
                     C1025 +
                 ((C8025 * C51044 + (C8022 + C8021) * C51045 +
                   (C8023 + C8024) * C8015) *
                      C50795 * C1022 -
                  (((C117 * C289 + C332 + C332 + C50892 * C309) * C50928 +
                    C645 * C51016) *
                       C8015 +
                   (C8488 + C8487) * C51045 + C8486 * C51044) *
                      C50795 * C50831) *
                     C1026)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                ((((C117 * C119 + C141 + C141 + C50892 * C133) * C51016 +
                   C2486 * C50928) *
                      C51044 +
                  (C8017 + C8018) * C51045 + C8025 * C8015) *
                     C50795 * C1093 -
                 (C8486 * C8015 + (C8175 + C8176) * C51045 +
                  (C2487 * C50928 + C2486 * C51016) * C51044) *
                     C50795 * C1094 +
                 ((C2487 * C51016 + C2489 * C50928) * C51044 +
                  (C8177 + C8178) * C51045 + (C8179 + C8180) * C8015) *
                     C50795 * C1095 -
                 (((C117 * C2448 + C2473 + C2473 + C50892 * C2454) * C50928 +
                   C2491 * C51016) *
                      C8015 +
                  (C2490 * C50928 + C2488 * C51016) * C51045 +
                  (C3457 * C50928 + C2489 * C51016) * C51044) *
                     C50795 * C1096) *
                C50760) /
                   (p * q * std::sqrt(p + q));
    d2ee[10] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C117 * C119 + C141 + C141 + C50892 * C133) * C51016 +
                      C2486 * C50928) *
                         C51044 +
                     (C8017 + C8018) * C51045 + C8025 * C8015) *
                        C1673 -
                    (C8635 * C8015 + (C8329 + C8330) * C51045 +
                     (C3198 * C50928 +
                      (C117 * C460 + C497 + C497 + C50892 * C480) * C51016) *
                         C51044) *
                        C50859) *
                       C51003 +
                   (((C3198 * C51016 + C3197 * C50928) * C51044 +
                     (C8832 + C8833) * C51045 + (C8834 + C8835) * C8015) *
                        C50859 -
                    (C8486 * C8015 + (C8175 + C8176) * C51045 +
                     (C2487 * C50928 + C2486 * C51016) * C51044) *
                        C1673) *
                       C50831) *
                      C50995 +
                  ((((C8330 + C8329) * C51044 + (C8328 + C8327) * C51045 +
                     (C8636 + C8637) * C8015) *
                        C50859 -
                    (C8026 * C8015 + (C8020 + C8019) * C51045 +
                     (C8018 + C8017) * C51044) *
                        C1673) *
                       C51003 +
                   (((C8176 + C8175) * C51044 + (C8174 + C8173) * C51045 +
                     (C8487 + C8488) * C8015) *
                        C1673 -
                    (((C117 * C1559 + C1572 + C1572 + C50892 * C1567) * C50928 +
                      C921 * C51016) *
                         C8015 +
                     (C8835 + C8834) * C51045 + (C8833 + C8832) * C51044) *
                        C50859) *
                       C50831) *
                      C50766)) /
                (p * q * std::sqrt(p + q));
    d2ee[11] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C141 + C141 + C50892 * C133) * C51016 +
                     C2486 * C50928) *
                        C51044 +
                    (C8017 + C8018) * C51045 + C8025 * C8015) *
                       C51050 -
                   (C8635 * C8015 + (C8329 + C8330) * C51045 +
                    (C3198 * C50928 +
                     (C117 * C460 + C497 + C497 + C50892 * C480) * C51016) *
                        C51044) *
                       C51051 +
                   (((C117 * C461 + C498 + C498 + C50892 * C481) * C51016 +
                     C3620 * C50928) *
                        C51044 +
                    (C8331 + C8332) * C51045 + (C8333 + C8339) * C8015) *
                       C2089) *
                      C51003 +
                  (((C3198 * C51016 + C3197 * C50928) * C51044 +
                    (C8832 + C8833) * C51045 + (C8834 + C8835) * C8015) *
                       C51051 -
                   (C8486 * C8015 + (C8175 + C8176) * C51045 +
                    (C2487 * C50928 + C2486 * C51016) * C51044) *
                       C51050 -
                   (((C117 * C2642 + C2661 + C2661 + C50892 * C2648) * C50928 +
                     C8338 * C51016) *
                        C8015 +
                    (C2670 * C50928 + C2669 * C51016) * C51045 +
                    (C3621 * C50928 + C3620 * C51016) * C51044) *
                       C2089) *
                      C50831) *
                 C50760) /
                (p * q * std::sqrt(p + q));
    d2ee[12] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C141 + C141 + C50892 * C133) * C51016 +
                     C2486 * C50928) *
                        C51044 +
                    (C8017 + C8018) * C51045 + C8025 * C8015) *
                       C1673 -
                   (C8635 * C8015 + (C8329 + C8330) * C51045 +
                    (C3198 * C50928 +
                     (C117 * C460 + C497 + C497 + C50892 * C480) * C51016) *
                        C51044) *
                       C50859) *
                      C275 +
                  (((C3198 * C51016 + C3197 * C50928) * C51044 +
                    (C8832 + C8833) * C51045 + (C8834 + C8835) * C8015) *
                       C50859 -
                   (C8486 * C8015 + (C8175 + C8176) * C51045 +
                    (C2487 * C50928 + C2486 * C51016) * C51044) *
                       C1673) *
                      C276 +
                  (((C2487 * C51016 + C2489 * C50928) * C51044 +
                    (C8177 + C8178) * C51045 + (C8179 + C8180) * C8015) *
                       C1673 -
                   (((C117 * C3172 + C3190 + C3190 + C50892 * C3178) * C50928 +
                     C2975 * C51016) *
                        C8015 +
                    (C3199 * C50928 + C2668 * C51016) * C51045 +
                    (C4120 * C50928 + C3197 * C51016) * C51044) *
                       C50859) *
                      C277) *
                 C50760) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C141 + C141 + C50892 * C133) * C51016 +
                     C2486 * C50928) *
                        C51044 +
                    (C8017 + C8018) * C51045 + C8025 * C8015) *
                       C1673 -
                   (C8635 * C8015 + (C8329 + C8330) * C51045 +
                    (C3198 * C50928 +
                     (C117 * C460 + C497 + C497 + C50892 * C480) * C51016) *
                        C51044) *
                       C50859) *
                      C50779 * C1024 +
                  (((C8330 + C8329) * C51044 + (C8328 + C8327) * C51045 +
                    (C8636 + C8637) * C8015) *
                       C50859 -
                   (C8026 * C8015 + (C8020 + C8019) * C51045 +
                    (C8018 + C8017) * C51044) *
                       C1673) *
                      C50779 * C1025 +
                  ((C8025 * C51044 + (C8022 + C8021) * C51045 +
                    (C8023 + C8024) * C8015) *
                       C1673 -
                   (((C117 * C890 + C912 + C912 + C50892 * C900) * C50928 +
                     C755 * C51016) *
                        C8015 +
                    (C8637 + C8636) * C51045 + C8635 * C51044) *
                       C50859) *
                      C50779 * C1026)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C117 * C119 + C141 + C141 + C50892 * C133) * C51016 +
                    C2486 * C50928) *
                       C51044 +
                   (C8017 + C8018) * C51045 + C8025 * C8015) *
                      C1839 -
                  (C8635 * C8015 + (C8329 + C8330) * C51045 +
                   (C3198 * C50928 +
                    (C117 * C460 + C497 + C497 + C50892 * C480) * C51016) *
                       C51044) *
                      C1840 +
                  (((C117 * C461 + C498 + C498 + C50892 * C481) * C51016 +
                    C3620 * C50928) *
                       C51044 +
                   (C8331 + C8332) * C51045 + (C8333 + C8339) * C8015) *
                      C1841 -
                  (((C117 * C6098 + C10102 + C10102 + C50892 * C6100) * C50928 +
                    (C117 * C1844 + C1857 + C1857 + C50892 * C1852) * C51016) *
                       C8015 +
                   ((C117 * C4511 + C4524 + C4524 + C50892 * C4519) * C50928 +
                    (C117 * C1845 + C1858 + C1858 + C50892 * C1853) * C51016) *
                       C51045 +
                   ((C117 * C4513 + C4526 + C4526 + C50892 * C4521) * C50928 +
                    (C117 * C1846 + C1859 + C1859 + C50892 * C1854) * C51016) *
                       C51044) *
                      C1842) *
                 C50779 * C50760) /
                    (p * q * std::sqrt(p + q));
    d2ee[13] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C141 + C141 + C50892 * C133) * C51016 +
                     C2486 * C50928) *
                        C51044 +
                    (C8017 + C8018) * C51045 + C8025 * C8015) *
                       C51050 -
                   (C8635 * C8015 + (C8329 + C8330) * C51045 +
                    (C3198 * C50928 +
                     (C117 * C460 + C497 + C497 + C50892 * C480) * C51016) *
                        C51044) *
                       C51051 +
                   (((C117 * C461 + C498 + C498 + C50892 * C481) * C51016 +
                     C3620 * C50928) *
                        C51044 +
                    (C8331 + C8332) * C51045 + (C8333 + C8339) * C8015) *
                       C2089) *
                      C50779 * C50995 +
                  (((C8330 + C8329) * C51044 + (C8328 + C8327) * C51045 +
                    (C8636 + C8637) * C8015) *
                       C51051 -
                   (C8026 * C8015 + (C8020 + C8019) * C51045 +
                    (C8018 + C8017) * C51044) *
                       C51050 -
                   (((C117 * C1212 + C1225 + C1225 + C50892 * C1220) * C50928 +
                     C527 * C51016) *
                        C8015 +
                    (C8339 + C8333) * C51045 + (C8332 + C8331) * C51044) *
                       C2089) *
                      C50779 * C50766)) /
                (p * q * std::sqrt(p + q));
    d2ee[14] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C141 + C141 + C50892 * C133) * C51016 +
                     C2486 * C50928) *
                        C51044 +
                    (C8017 + C8018) * C51045 + C8025 * C8015) *
                       C1673 -
                   (C8635 * C8015 + (C8329 + C8330) * C51045 +
                    (C3198 * C50928 +
                     (C117 * C460 + C497 + C497 + C50892 * C480) * C51016) *
                        C51044) *
                       C50859) *
                      C50779 * C1024 +
                  (((C8330 + C8329) * C51044 + (C8328 + C8327) * C51045 +
                    (C8636 + C8637) * C8015) *
                       C50859 -
                   (C8026 * C8015 + (C8020 + C8019) * C51045 +
                    (C8018 + C8017) * C51044) *
                       C1673) *
                      C50779 * C1025 +
                  ((C8025 * C51044 + (C8022 + C8021) * C51045 +
                    (C8023 + C8024) * C8015) *
                       C1673 -
                   (((C117 * C890 + C912 + C912 + C50892 * C900) * C50928 +
                     C755 * C51016) *
                        C8015 +
                    (C8637 + C8636) * C51045 + C8635 * C51044) *
                       C50859) *
                      C50779 * C1026)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C141 + C141 + C50892 * C133) * C51016 +
                     C2486 * C50928) *
                        C51044 +
                    (C8017 + C8018) * C51045 + C8025 * C8015) *
                       C1673 -
                   (C8635 * C8015 + (C8329 + C8330) * C51045 +
                    (C3198 * C50928 +
                     (C117 * C460 + C497 + C497 + C50892 * C480) * C51016) *
                        C51044) *
                       C50859) *
                      C275 +
                  (((C3198 * C51016 + C3197 * C50928) * C51044 +
                    (C8832 + C8833) * C51045 + (C8834 + C8835) * C8015) *
                       C50859 -
                   (C8486 * C8015 + (C8175 + C8176) * C51045 +
                    (C2487 * C50928 + C2486 * C51016) * C51044) *
                       C1673) *
                      C276 +
                  (((C2487 * C51016 + C2489 * C50928) * C51044 +
                    (C8177 + C8178) * C51045 + (C8179 + C8180) * C8015) *
                       C1673 -
                   (((C117 * C3172 + C3190 + C3190 + C50892 * C3178) * C50928 +
                     C2975 * C51016) *
                        C8015 +
                    (C3199 * C50928 + C2668 * C51016) * C51045 +
                    (C4120 * C50928 + C3197 * C51016) * C51044) *
                       C50859) *
                      C277) *
                 C50760) /
                    (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
              C10694 + C10694 + C50956 * C480) *
                 C51016 +
             (C13823 + C13824) * C50928) *
                C2289 +
            ((C10737 + C10738) * C51016 + C13799 * C50928) * C50739) *
               C50795 * C51003 -
           ((C13800 * C50928 + C13801 * C51016) * C50739 +
            ((C13825 + C13826) * C50928 + (C13824 + C13823) * C51016) * C2289) *
               C50795 * C50831) *
              C51046 +
          (((C13799 * C51016 + C13806 * C50928) * C2289 +
            (C14227 * C51016 + (C10949 + C10950) * C50928) * C50739) *
               C50795 * C50831 -
           ((C11299 * C50928 + (C10740 + C10739) * C51016) * C50739 +
            (C13801 * C50928 + (C10738 + C10737) * C51016) * C2289) *
               C50795 * C51003) *
              C51047 +
          (((C10745 * C51016 + C14227 * C50928) * C2289 +
            ((C10742 + C10741) * C51016 + (C11311 + C11312) * C50928) *
                C50739) *
               C50795 * C51003 -
           (((C10690 * C1559 + C10925 + C10925 + C50956 * C1567 +
              C10688 * C287 + C10926 + C10926 + C51017 * C307) *
                 C50928 +
             (C11312 + C11311) * C51016) *
                C50739 +
            ((C10950 + C10949) * C50928 + C11299 * C51016) * C2289) *
               C50795 * C50831) *
              C635)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C10688 * C119 + C10693 + C10693 + C51017 * C133 +
                       C10690 * C460 + C10694 + C10694 + C50956 * C480) *
                          C51016 +
                      (C13823 + C13824) * C50928) *
                         C2289 +
                     ((C10737 + C10738) * C51016 + C13799 * C50928) * C50739) *
                        C51004 -
                    ((C14680 * C50928 + (C11147 + C11148) * C51016) * C50739 +
                     ((C14698 + C14699) * C50928 +
                      (C10690 * C461 + C11109 + C11109 + C50956 * C481 +
                       C10688 * C460 + C11110 + C11110 + C51017 * C480) *
                          C51016) *
                         C2289) *
                        C50859) *
                       C51003 +
                   ((((C14699 + C14698) * C51016 +
                      (C10688 * C1562 + C12588 + C12588 + C51017 * C1570 +
                       C10690 * C2640 + C12587 + C12587 + C50956 * C2646) *
                          C50928) *
                         C2289 +
                     (C14685 * C51016 + (C14700 + C14701) * C50928) * C50739) *
                        C50859 -
                    ((C13800 * C50928 + C13801 * C51016) * C50739 +
                     ((C13825 + C13826) * C50928 + (C13824 + C13823) * C51016) *
                         C2289) *
                        C51004) *
                       C50831) *
                      C278 +
                  (((((C11148 + C11147) * C51016 + C14685 * C50928) * C2289 +
                     ((C11146 + C11145) * C51016 + (C11693 + C11694) * C50928) *
                         C50739) *
                        C50859 -
                    ((C11299 * C50928 + (C10740 + C10739) * C51016) * C50739 +
                     (C13801 * C50928 + (C10738 + C10737) * C51016) * C2289) *
                        C51004) *
                       C51003 +
                   (((C13799 * C51016 + C13806 * C50928) * C2289 +
                     (C14227 * C51016 + (C10949 + C10950) * C50928) * C50739) *
                        C51004 -
                    (((C10690 * C2642 + C12583 + C12583 + C50956 * C2648 +
                       C10688 * C1560 + C12584 + C12584 + C51017 * C1568) *
                          C50928 +
                      (C11694 + C11693) * C51016) *
                         C50739 +
                     ((C14701 + C14700) * C50928 + C14680 * C51016) * C2289) *
                        C50859) *
                       C50831) *
                      C50766)) /
                (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
              C10694 + C10694 + C50956 * C480) *
                 C51016 +
             (C13823 + C13824) * C50928) *
                C2289 +
            ((C10737 + C10738) * C51016 + C13799 * C50928) * C50739) *
               C50795 * C275 -
           ((C13800 * C50928 + C13801 * C51016) * C50739 +
            ((C13825 + C13826) * C50928 + (C13824 + C13823) * C51016) * C2289) *
               C50795 * C276 +
           (((C13826 + C13825) * C51016 +
             (C10688 * C1101 + C11944 + C11944 + C51017 * C1109 +
              C10690 * C3170 + C11943 + C11943 + C50956 * C3176) *
                 C50928) *
                C2289 +
            (C13806 * C51016 + (C13827 + C13828) * C50928) * C50739) *
               C50795 * C277) *
              C278 +
          (((C13799 * C51016 + C13806 * C50928) * C2289 +
            ((C10944 + C10943) * C51016 + (C10949 + C10950) * C50928) *
                C50739) *
               C50795 * C276 -
           ((C11299 * C50928 + (C10740 + C10739) * C51016) * C50739 +
            (C13801 * C50928 + (C10738 + C10737) * C51016) * C2289) *
               C50795 * C275 -
           (((C10690 * C3172 + C11939 + C11939 + C50956 * C3178 +
              C10688 * C1099 + C11940 + C11940 + C51017 * C1107) *
                 C50928 +
             (C10950 + C10949) * C51016) *
                C50739 +
            ((C13828 + C13827) * C50928 + C13800 * C51016) * C2289) *
               C50795 * C277) *
              C50766)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
             C10694 + C10694 + C50956 * C480) *
                C51016 +
            (C10688 * C283 + C10908 + C10908 + C51017 * C303 + C10690 * C886 +
             C10907 + C10907 + C50956 * C896) *
                C50928) *
               C2289 +
           ((C10737 + C10738) * C51016 + (C10946 + C10945) * C50928) * C50739) *
              C50795 * C50779 * C113 -
          ((C11299 * C50928 + (C10740 + C10739) * C51016) * C50739 +
           ((C10945 + C10946) * C50928 + (C10738 + C10737) * C51016) * C2289) *
              C50795 * C50779 * C114 +
          ((C10745 * C51016 + (C10944 + C10943) * C50928) * C2289 +
           ((C10742 + C10741) * C51016 + (C11311 + C11312) * C50928) * C50739) *
              C50795 * C50779 * C115 -
          (((C10690 * C890 + C11304 + C11304 + C50956 * C900 + C10688 * C288 +
             C11305 + C11305 + C51017 * C308) *
                C50928 +
            (C10744 + C10743) * C51016) *
               C50739 +
           ((C11312 + C11311) * C50928 + C10746 * C51016) * C2289) *
              C50795 * C50779 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
              C10694 + C10694 + C50956 * C480) *
                 C51016 +
             (C13823 + C13824) * C50928) *
                C2289 +
            ((C10737 + C10738) * C51016 + C13799 * C50928) * C50739) *
               C454 -
           (((C11692 + C11691) * C50928 + (C11147 + C11148) * C51016) * C50739 +
            ((C10690 * C1215 + C11668 + C11668 + C50956 * C1223 +
              C10688 * C886 + C11667 + C11667 + C51017 * C896) *
                 C50928 +
             (C10690 * C461 + C11109 + C11109 + C50956 * C481 + C10688 * C460 +
              C11110 + C11110 + C51017 * C480) *
                 C51016) *
                C2289) *
               C455 +
           (((C10688 * C461 + C11111 + C11111 + C51017 * C481 + C10690 * C1846 +
              C11112 + C11112 + C50956 * C1854) *
                 C51016 +
             (C10688 * C1215 + C12096 + C12096 + C51017 * C1223 +
              C10690 * C4513 + C12095 + C12095 + C50956 * C4521) *
                 C50928) *
                C2289 +
            ((C11149 + C11150) * C51016 + (C14031 + C14032) * C50928) *
                C50739) *
               C456) *
              C50779 * C278 +
          ((((C11148 + C11147) * C51016 + (C11691 + C11692) * C50928) * C2289 +
            ((C11146 + C11145) * C51016 + (C11693 + C11694) * C50928) *
                C50739) *
               C455 -
           ((C11299 * C50928 + (C10740 + C10739) * C51016) * C50739 +
            (C13801 * C50928 + (C10738 + C10737) * C51016) * C2289) *
               C454 -
           (((C10690 * C6098 + C12091 + C12091 + C50956 * C6100 +
              C10688 * C1213 + C12092 + C12092 + C51017 * C1221) *
                 C50928 +
             (C11152 + C11151) * C51016) *
                C50739 +
            ((C14032 + C14031) * C50928 + (C11150 + C11149) * C51016) * C2289) *
               C456) *
              C50779 * C50766)) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
              C10694 + C10694 + C50956 * C480) *
                 C51016 +
             (C13823 + C13824) * C50928) *
                C2289 +
            ((C10737 + C10738) * C51016 + C13799 * C50928) * C50739) *
               C51004 -
           (((C11692 + C11691) * C50928 + (C11147 + C11148) * C51016) * C50739 +
            ((C10690 * C1215 + C11668 + C11668 + C50956 * C1223 +
              C10688 * C886 + C11667 + C11667 + C51017 * C896) *
                 C50928 +
             (C10690 * C461 + C11109 + C11109 + C50956 * C481 + C10688 * C460 +
              C11110 + C11110 + C51017 * C480) *
                 C51016) *
                C2289) *
               C50859) *
              C50779 * C51046 +
          ((((C11148 + C11147) * C51016 + (C11691 + C11692) * C50928) * C2289 +
            ((C11146 + C11145) * C51016 + (C11693 + C11694) * C50928) *
                C50739) *
               C50859 -
           ((C11299 * C50928 + (C10740 + C10739) * C51016) * C50739 +
            (C13801 * C50928 + (C10738 + C10737) * C51016) * C2289) *
               C51004) *
              C50779 * C51047 +
          (((C10745 * C51016 + C14227 * C50928) * C2289 +
            ((C10742 + C10741) * C51016 + (C11311 + C11312) * C50928) *
                C50739) *
               C51004 -
           (((C10690 * C1212 + C11681 + C11681 + C50956 * C1220 +
              C10688 * C889 + C11682 + C11682 + C51017 * C899) *
                 C50928 +
             (C11472 + C11471) * C51016) *
                C50739 +
            ((C11694 + C11693) * C50928 + C11459 * C51016) * C2289) *
               C50859) *
              C50779 * C635)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
             C10694 + C10694 + C50956 * C480) *
                C51016 +
            (C10688 * C283 + C10908 + C10908 + C51017 * C303 + C10690 * C886 +
             C10907 + C10907 + C50956 * C896) *
                C50928) *
               C2289 +
           ((C10737 + C10738) * C51016 + (C10946 + C10945) * C50928) * C50739) *
              C50795 * C50779 * C113 -
          ((C11299 * C50928 + (C10740 + C10739) * C51016) * C50739 +
           ((C10945 + C10946) * C50928 + (C10738 + C10737) * C51016) * C2289) *
              C50795 * C50779 * C114 +
          ((C10745 * C51016 + (C10944 + C10943) * C50928) * C2289 +
           ((C10742 + C10741) * C51016 + (C11311 + C11312) * C50928) * C50739) *
              C50795 * C50779 * C115 -
          (((C10690 * C890 + C11304 + C11304 + C50956 * C900 + C10688 * C288 +
             C11305 + C11305 + C51017 * C308) *
                C50928 +
            (C10744 + C10743) * C51016) *
               C50739 +
           ((C11312 + C11311) * C50928 + C10746 * C51016) * C2289) *
              C50795 * C50779 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
              C10694 + C10694 + C50956 * C480) *
                 C51016 +
             (C13823 + C13824) * C50928) *
                C2289 +
            ((C10737 + C10738) * C51016 + C13799 * C50928) * C50739) *
               C50795 * C275 -
           ((C13800 * C50928 + C13801 * C51016) * C50739 +
            ((C13825 + C13826) * C50928 + (C13824 + C13823) * C51016) * C2289) *
               C50795 * C276 +
           (((C13826 + C13825) * C51016 +
             (C10688 * C1101 + C11944 + C11944 + C51017 * C1109 +
              C10690 * C3170 + C11943 + C11943 + C50956 * C3176) *
                 C50928) *
                C2289 +
            (C13806 * C51016 + (C13827 + C13828) * C50928) * C50739) *
               C50795 * C277) *
              C278 +
          (((C13799 * C51016 + C13806 * C50928) * C2289 +
            ((C10944 + C10943) * C51016 + (C10949 + C10950) * C50928) *
                C50739) *
               C50795 * C276 -
           ((C11299 * C50928 + (C10740 + C10739) * C51016) * C50739 +
            (C13801 * C50928 + (C10738 + C10737) * C51016) * C2289) *
               C50795 * C275 -
           (((C10690 * C3172 + C11939 + C11939 + C50956 * C3178 +
              C10688 * C1099 + C11940 + C11940 + C51017 * C1107) *
                 C50928 +
             (C10950 + C10949) * C51016) *
                C50739 +
            ((C13828 + C13827) * C50928 + C13800 * C51016) * C2289) *
               C50795 * C277) *
              C50766)) /
            (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
              C10694 + C10694 + C50956 * C480) *
                 C51016 +
             (C13823 + C13824) * C50928) *
                C2289 +
            ((C10737 + C10738) * C51016 + C13799 * C50928) * C50739) *
               C50795 * C51048 -
           ((C13800 * C50928 + C13801 * C51016) * C50739 +
            ((C13825 + C13826) * C50928 + (C13824 + C13823) * C51016) * C2289) *
               C50795 * C51049 +
           (((C13826 + C13825) * C51016 + (C15038 + C15039) * C50928) * C2289 +
            (C13806 * C51016 + (C13827 + C13828) * C50928) * C50739) *
               C50795 * C1328) *
              C50995 +
          (((C13799 * C51016 + C13806 * C50928) * C2289 +
            (C14227 * C51016 + (C10949 + C10950) * C50928) * C50739) *
               C50795 * C51049 -
           ((C11299 * C50928 + (C10740 + C10739) * C51016) * C50739 +
            (C13801 * C50928 + (C10738 + C10737) * C51016) * C2289) *
               C50795 * C51048 -
           (((C10690 * C3172 + C11939 + C11939 + C50956 * C3178 +
              C10688 * C1099 + C11940 + C11940 + C51017 * C1107) *
                 C50928 +
             (C10950 + C10949) * C51016) *
                C50739 +
            ((C13828 + C13827) * C50928 + C13800 * C51016) * C2289) *
               C50795 * C1328) *
              C50766)) /
        (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
              C10694 + C10694 + C50956 * C480) *
                 C51016 +
             (C13823 + C13824) * C50928) *
                C2289 +
            ((C10737 + C10738) * C51016 + C13799 * C50928) * C50739) *
               C51004 -
           ((C14680 * C50928 + (C11147 + C11148) * C51016) * C50739 +
            ((C14698 + C14699) * C50928 +
             (C10690 * C461 + C11109 + C11109 + C50956 * C481 + C10688 * C460 +
              C11110 + C11110 + C51017 * C480) *
                 C51016) *
                C2289) *
               C50859) *
              C51048 +
          ((((C14699 + C14698) * C51016 + (C15906 + C15907) * C50928) * C2289 +
            (C14685 * C51016 + (C14700 + C14701) * C50928) * C50739) *
               C50859 -
           ((C13800 * C50928 + C13801 * C51016) * C50739 +
            ((C13825 + C13826) * C50928 + (C13824 + C13823) * C51016) * C2289) *
               C51004) *
              C51049 +
          ((((C13826 + C13825) * C51016 + (C15038 + C15039) * C50928) * C2289 +
            (C13806 * C51016 + (C13827 + C13828) * C50928) * C50739) *
               C51004 -
           (((C10690 * C3603 + C15898 + C15898 + C50956 * C3607 +
              C10688 * C3171 + C15899 + C15899 + C51017 * C3177) *
                 C50928 +
             (C14701 + C14700) * C51016) *
                C50739 +
            ((C10690 * C3604 + C15900 + C15900 + C50956 * C3608 +
              C10688 * C3170 + C15901 + C15901 + C51017 * C3176) *
                 C50928 +
             (C15907 + C15906) * C51016) *
                C2289) *
               C50859) *
              C1328) *
         C50760) /
        (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
             C10694 + C10694 + C50956 * C480) *
                C51016 +
            (C13823 + C13824) * C50928) *
               C2289 +
           ((C10737 + C10738) * C51016 + C13799 * C50928) * C50739) *
              C50795 * C1093 -
          ((C13800 * C50928 + C13801 * C51016) * C50739 +
           ((C13825 + C13826) * C50928 + (C13824 + C13823) * C51016) * C2289) *
              C50795 * C1094 +
          (((C13826 + C13825) * C51016 + (C15038 + C15039) * C50928) * C2289 +
           (C13806 * C51016 + (C13827 + C13828) * C50928) * C50739) *
              C50795 * C1095 -
          (((C10690 * C4107 + C15030 + C15030 + C50956 * C4111 +
             C10688 * C2447 + C15031 + C15031 + C51017 * C2453) *
                C50928 +
            (C13828 + C13827) * C51016) *
               C50739 +
           ((C10690 * C4108 + C15032 + C15032 + C50956 * C4112 +
             C10688 * C2446 + C15033 + C15033 + C51017 * C2452) *
                C50928 +
            (C15039 + C15038) * C51016) *
               C2289) *
              C50795 * C1096) *
         C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
              C10694 + C10694 + C50956 * C480) *
                 C51016 +
             (C13823 + C13824) * C50928) *
                C2289 +
            ((C10737 + C10738) * C51016 + C13799 * C50928) * C50739) *
               C50795 * C1022 -
           ((C13800 * C50928 + C13801 * C51016) * C50739 +
            ((C13825 + C13826) * C50928 + (C13824 + C13823) * C51016) * C2289) *
               C50795 * C50831) *
              C1024 +
          (((C13799 * C51016 + C13806 * C50928) * C2289 +
            (C14227 * C51016 + (C10949 + C10950) * C50928) * C50739) *
               C50795 * C50831 -
           ((C11299 * C50928 + (C10740 + C10739) * C51016) * C50739 +
            (C13801 * C50928 + (C10738 + C10737) * C51016) * C2289) *
               C50795 * C1022) *
              C1025 +
          (((C10745 * C51016 + C14227 * C50928) * C2289 +
            ((C10742 + C10741) * C51016 + (C11311 + C11312) * C50928) *
                C50739) *
               C50795 * C1022 -
           (((C10690 * C1559 + C10925 + C10925 + C50956 * C1567 +
              C10688 * C287 + C10926 + C10926 + C51017 * C307) *
                 C50928 +
             (C11312 + C11311) * C51016) *
                C50739 +
            ((C10950 + C10949) * C50928 + C11299 * C51016) * C2289) *
               C50795 * C50831) *
              C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
              C10694 + C10694 + C50956 * C480) *
                 C51016 +
             (C13823 + C13824) * C50928) *
                C2289 +
            ((C10737 + C10738) * C51016 + C13799 * C50928) * C50739) *
               C454 -
           ((C14680 * C50928 + (C11147 + C11148) * C51016) * C50739 +
            ((C14698 + C14699) * C50928 +
             (C10690 * C461 + C11109 + C11109 + C50956 * C481 + C10688 * C460 +
              C11110 + C11110 + C51017 * C480) *
                 C51016) *
                C2289) *
               C455 +
           (((C10688 * C461 + C11111 + C11111 + C51017 * C481 + C10690 * C1846 +
              C11112 + C11112 + C50956 * C1854) *
                 C51016 +
             (C15246 + C15247) * C50928) *
                C2289 +
            ((C11149 + C11150) * C51016 + (C14031 + C14032) * C50928) *
                C50739) *
               C456) *
              C1022 +
          ((((C14699 + C14698) * C51016 +
             (C10688 * C1562 + C12588 + C12588 + C51017 * C1570 +
              C10690 * C2640 + C12587 + C12587 + C50956 * C2646) *
                 C50928) *
                C2289 +
            (C14685 * C51016 + (C14700 + C14701) * C50928) * C50739) *
               C455 -
           ((C13800 * C50928 + C13801 * C51016) * C50739 +
            ((C13825 + C13826) * C50928 + (C13824 + C13823) * C51016) * C2289) *
               C454 -
           (((C10690 * C4510 + C15238 + C15238 + C50956 * C4518 +
              C10688 * C2641 + C15239 + C15239 + C51017 * C2647) *
                 C50928 +
             (C14032 + C14031) * C51016) *
                C50739 +
            ((C10690 * C4512 + C15240 + C15240 + C50956 * C4520 +
              C10688 * C2640 + C15241 + C15241 + C51017 * C2646) *
                 C50928 +
             (C15247 + C15246) * C51016) *
                C2289) *
               C456) *
              C50831) *
         C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[23] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C10688 * C119 + C10693 + C10693 + C51017 * C133 +
                       C10690 * C460 + C10694 + C10694 + C50956 * C480) *
                          C51016 +
                      (C13823 + C13824) * C50928) *
                         C2289 +
                     ((C10737 + C10738) * C51016 + C13799 * C50928) * C50739) *
                        C51004 -
                    ((C14680 * C50928 + (C11147 + C11148) * C51016) * C50739 +
                     ((C14698 + C14699) * C50928 +
                      (C10690 * C461 + C11109 + C11109 + C50956 * C481 +
                       C10688 * C460 + C11110 + C11110 + C51017 * C480) *
                          C51016) *
                         C2289) *
                        C50859) *
                       C1022 +
                   ((((C14699 + C14698) * C51016 +
                      (C10688 * C1562 + C12588 + C12588 + C51017 * C1570 +
                       C10690 * C2640 + C12587 + C12587 + C50956 * C2646) *
                          C50928) *
                         C2289 +
                     (C14685 * C51016 + (C14700 + C14701) * C50928) * C50739) *
                        C50859 -
                    ((C13800 * C50928 + C13801 * C51016) * C50739 +
                     ((C13825 + C13826) * C50928 + (C13824 + C13823) * C51016) *
                         C2289) *
                        C51004) *
                       C50831) *
                      C50995 +
                  (((((C11148 + C11147) * C51016 + C14685 * C50928) * C2289 +
                     ((C11146 + C11145) * C51016 + (C11693 + C11694) * C50928) *
                         C50739) *
                        C50859 -
                    ((C11299 * C50928 + (C10740 + C10739) * C51016) * C50739 +
                     (C13801 * C50928 + (C10738 + C10737) * C51016) * C2289) *
                        C51004) *
                       C1022 +
                   (((C13799 * C51016 + C13806 * C50928) * C2289 +
                     (C14227 * C51016 + (C10949 + C10950) * C50928) * C50739) *
                        C51004 -
                    (((C10690 * C2642 + C12583 + C12583 + C50956 * C2648 +
                       C10688 * C1560 + C12584 + C12584 + C51017 * C1568) *
                          C50928 +
                      (C11694 + C11693) * C51016) *
                         C50739 +
                     ((C14701 + C14700) * C50928 + C14680 * C51016) * C2289) *
                        C50859) *
                       C50831) *
                      C50766)) /
                (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
              C10694 + C10694 + C50956 * C480) *
                 C51016 +
             (C13823 + C13824) * C50928) *
                C2289 +
            ((C10737 + C10738) * C51016 + C13799 * C50928) * C50739) *
               C50795 * C1022 -
           ((C13800 * C50928 + C13801 * C51016) * C50739 +
            ((C13825 + C13826) * C50928 + (C13824 + C13823) * C51016) * C2289) *
               C50795 * C50831) *
              C1024 +
          (((C13799 * C51016 + C13806 * C50928) * C2289 +
            (C14227 * C51016 + (C10949 + C10950) * C50928) * C50739) *
               C50795 * C50831 -
           ((C11299 * C50928 + (C10740 + C10739) * C51016) * C50739 +
            (C13801 * C50928 + (C10738 + C10737) * C51016) * C2289) *
               C50795 * C1022) *
              C1025 +
          (((C10745 * C51016 + C14227 * C50928) * C2289 +
            ((C10742 + C10741) * C51016 + (C11311 + C11312) * C50928) *
                C50739) *
               C50795 * C1022 -
           (((C10690 * C1559 + C10925 + C10925 + C50956 * C1567 +
              C10688 * C287 + C10926 + C10926 + C51017 * C307) *
                 C50928 +
             (C11312 + C11311) * C51016) *
                C50739 +
            ((C10950 + C10949) * C50928 + C11299 * C51016) * C2289) *
               C50795 * C50831) *
              C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
             C10694 + C10694 + C50956 * C480) *
                C51016 +
            (C13823 + C13824) * C50928) *
               C2289 +
           ((C10737 + C10738) * C51016 + C13799 * C50928) * C50739) *
              C50795 * C1093 -
          ((C13800 * C50928 + C13801 * C51016) * C50739 +
           ((C13825 + C13826) * C50928 + (C13824 + C13823) * C51016) * C2289) *
              C50795 * C1094 +
          (((C13826 + C13825) * C51016 + (C15038 + C15039) * C50928) * C2289 +
           (C13806 * C51016 + (C13827 + C13828) * C50928) * C50739) *
              C50795 * C1095 -
          (((C10690 * C4107 + C15030 + C15030 + C50956 * C4111 +
             C10688 * C2447 + C15031 + C15031 + C51017 * C2453) *
                C50928 +
            (C13828 + C13827) * C51016) *
               C50739 +
           ((C10690 * C4108 + C15032 + C15032 + C50956 * C4112 +
             C10688 * C2446 + C15033 + C15033 + C51017 * C2452) *
                C50928 +
            (C15039 + C15038) * C51016) *
               C2289) *
              C50795 * C1096) *
         C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
               C10694 + C10694 + C50956 * C480) *
                  C51016 +
              (C13823 + C13824) * C50928) *
                 C2289 +
             ((C10737 + C10738) * C51016 + C13799 * C50928) * C50739) *
                C1673 -
            ((C14680 * C50928 + (C11147 + C11148) * C51016) * C50739 +
             ((C14698 + C14699) * C50928 +
              (C10690 * C461 + C11109 + C11109 + C50956 * C481 + C10688 * C460 +
               C11110 + C11110 + C51017 * C480) *
                  C51016) *
                 C2289) *
                C50859) *
               C51003 +
           ((((C14699 + C14698) * C51016 + (C15906 + C15907) * C50928) * C2289 +
             (C14685 * C51016 + (C14700 + C14701) * C50928) * C50739) *
                C50859 -
            ((C13800 * C50928 + C13801 * C51016) * C50739 +
             ((C13825 + C13826) * C50928 + (C13824 + C13823) * C51016) *
                 C2289) *
                C1673) *
               C50831) *
              C50995 +
          (((((C11148 + C11147) * C51016 + C14685 * C50928) * C2289 +
             ((C11146 + C11145) * C51016 + (C11693 + C11694) * C50928) *
                 C50739) *
                C50859 -
            ((C11299 * C50928 + (C10740 + C10739) * C51016) * C50739 +
             (C13801 * C50928 + (C10738 + C10737) * C51016) * C2289) *
                C1673) *
               C51003 +
           (((C13799 * C51016 + C13806 * C50928) * C2289 +
             (C14227 * C51016 + (C10949 + C10950) * C50928) * C50739) *
                C1673 -
            (((C10690 * C2642 + C12583 + C12583 + C50956 * C2648 +
               C10688 * C1560 + C12584 + C12584 + C51017 * C1568) *
                  C50928 +
              (C11694 + C11693) * C51016) *
                 C50739 +
             ((C14701 + C14700) * C50928 + C14680 * C51016) * C2289) *
                C50859) *
               C50831) *
              C50766)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
              C10694 + C10694 + C50956 * C480) *
                 C51016 +
             (C13823 + C13824) * C50928) *
                C2289 +
            ((C10737 + C10738) * C51016 + C13799 * C50928) * C50739) *
               C51050 -
           ((C14680 * C50928 + (C11147 + C11148) * C51016) * C50739 +
            ((C14698 + C14699) * C50928 +
             (C10690 * C461 + C11109 + C11109 + C50956 * C481 + C10688 * C460 +
              C11110 + C11110 + C51017 * C480) *
                 C51016) *
                C2289) *
               C51051 +
           (((C10688 * C461 + C11111 + C11111 + C51017 * C481 + C10690 * C1846 +
              C11112 + C11112 + C50956 * C1854) *
                 C51016 +
             (C15246 + C15247) * C50928) *
                C2289 +
            ((C11149 + C11150) * C51016 + (C14031 + C14032) * C50928) *
                C50739) *
               C2089) *
              C51003 +
          ((((C14699 + C14698) * C51016 + (C15906 + C15907) * C50928) * C2289 +
            (C14685 * C51016 + (C14700 + C14701) * C50928) * C50739) *
               C51051 -
           ((C13800 * C50928 + C13801 * C51016) * C50739 +
            ((C13825 + C13826) * C50928 + (C13824 + C13823) * C51016) * C2289) *
               C51050 -
           (((C10690 * C4510 + C15238 + C15238 + C50956 * C4518 +
              C10688 * C2641 + C15239 + C15239 + C51017 * C2647) *
                 C50928 +
             (C14032 + C14031) * C51016) *
                C50739 +
            ((C10690 * C4512 + C15240 + C15240 + C50956 * C4520 +
              C10688 * C2640 + C15241 + C15241 + C51017 * C2646) *
                 C50928 +
             (C15247 + C15246) * C51016) *
                C2289) *
               C2089) *
              C50831) *
         C50760) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
              C10694 + C10694 + C50956 * C480) *
                 C51016 +
             (C13823 + C13824) * C50928) *
                C2289 +
            ((C10737 + C10738) * C51016 + C13799 * C50928) * C50739) *
               C1673 -
           ((C14680 * C50928 + (C11147 + C11148) * C51016) * C50739 +
            ((C14698 + C14699) * C50928 +
             (C10690 * C461 + C11109 + C11109 + C50956 * C481 + C10688 * C460 +
              C11110 + C11110 + C51017 * C480) *
                 C51016) *
                C2289) *
               C50859) *
              C275 +
          ((((C14699 + C14698) * C51016 + (C15906 + C15907) * C50928) * C2289 +
            (C14685 * C51016 + (C14700 + C14701) * C50928) * C50739) *
               C50859 -
           ((C13800 * C50928 + C13801 * C51016) * C50739 +
            ((C13825 + C13826) * C50928 + (C13824 + C13823) * C51016) * C2289) *
               C1673) *
              C276 +
          ((((C13826 + C13825) * C51016 + (C15038 + C15039) * C50928) * C2289 +
            (C13806 * C51016 + (C13827 + C13828) * C50928) * C50739) *
               C1673 -
           (((C10690 * C3603 + C15898 + C15898 + C50956 * C3607 +
              C10688 * C3171 + C15899 + C15899 + C51017 * C3177) *
                 C50928 +
             (C14701 + C14700) * C51016) *
                C50739 +
            ((C10690 * C3604 + C15900 + C15900 + C50956 * C3608 +
              C10688 * C3170 + C15901 + C15901 + C51017 * C3176) *
                 C50928 +
             (C15907 + C15906) * C51016) *
                C2289) *
               C50859) *
              C277) *
         C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
              C10694 + C10694 + C50956 * C480) *
                 C51016 +
             (C13823 + C13824) * C50928) *
                C2289 +
            ((C10737 + C10738) * C51016 + C13799 * C50928) * C50739) *
               C1673 -
           ((C14680 * C50928 + (C11147 + C11148) * C51016) * C50739 +
            ((C14698 + C14699) * C50928 +
             (C10690 * C461 + C11109 + C11109 + C50956 * C481 + C10688 * C460 +
              C11110 + C11110 + C51017 * C480) *
                 C51016) *
                C2289) *
               C50859) *
              C50779 * C1024 +
          ((((C11148 + C11147) * C51016 + C14685 * C50928) * C2289 +
            ((C11146 + C11145) * C51016 + (C11693 + C11694) * C50928) *
                C50739) *
               C50859 -
           ((C11299 * C50928 + (C10740 + C10739) * C51016) * C50739 +
            (C13801 * C50928 + (C10738 + C10737) * C51016) * C2289) *
               C1673) *
              C50779 * C1025 +
          (((C10745 * C51016 + C14227 * C50928) * C2289 +
            ((C10742 + C10741) * C51016 + (C11311 + C11312) * C50928) *
                C50739) *
               C1673 -
           (((C10690 * C1212 + C11681 + C11681 + C50956 * C1220 +
              C10688 * C889 + C11682 + C11682 + C51017 * C899) *
                 C50928 +
             (C11472 + C11471) * C51016) *
                C50739 +
            ((C11694 + C11693) * C50928 + C11459 * C51016) * C2289) *
               C50859) *
              C50779 * C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
             C10694 + C10694 + C50956 * C480) *
                C51016 +
            (C13823 + C13824) * C50928) *
               C2289 +
           ((C10737 + C10738) * C51016 + C13799 * C50928) * C50739) *
              C1839 -
          ((C14680 * C50928 + (C11147 + C11148) * C51016) * C50739 +
           ((C14698 + C14699) * C50928 +
            (C10690 * C461 + C11109 + C11109 + C50956 * C481 + C10688 * C460 +
             C11110 + C11110 + C51017 * C480) *
                C51016) *
               C2289) *
              C1840 +
          (((C10688 * C461 + C11111 + C11111 + C51017 * C481 + C10690 * C1846 +
             C11112 + C11112 + C50956 * C1854) *
                C51016 +
            (C15246 + C15247) * C50928) *
               C2289 +
           ((C11149 + C11150) * C51016 + (C14031 + C14032) * C50928) * C50739) *
              C1841 -
          (((C10690 * C6521 + C16426 + C16426 + C50956 * C6525 +
             C10688 * C4511 + C16427 + C16427 + C51017 * C4519) *
                C50928 +
            (C10690 * C5520 + C12981 + C12981 + C50956 * C5526 +
             C10688 * C1845 + C12982 + C12982 + C51017 * C1853) *
                C51016) *
               C50739 +
           ((C10690 * C6522 + C16428 + C16428 + C50956 * C6526 +
             C10688 * C4513 + C16429 + C16429 + C51017 * C4521) *
                C50928 +
            (C10690 * C5519 + C12983 + C12983 + C50956 * C5525 +
             C10688 * C1846 + C12984 + C12984 + C51017 * C1854) *
                C51016) *
               C2289) *
              C1842) *
         C50779 * C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
              C10694 + C10694 + C50956 * C480) *
                 C51016 +
             (C13823 + C13824) * C50928) *
                C2289 +
            ((C10737 + C10738) * C51016 + C13799 * C50928) * C50739) *
               C51050 -
           ((C14680 * C50928 + (C11147 + C11148) * C51016) * C50739 +
            ((C14698 + C14699) * C50928 +
             (C10690 * C461 + C11109 + C11109 + C50956 * C481 + C10688 * C460 +
              C11110 + C11110 + C51017 * C480) *
                 C51016) *
                C2289) *
               C51051 +
           (((C10688 * C461 + C11111 + C11111 + C51017 * C481 + C10690 * C1846 +
              C11112 + C11112 + C50956 * C1854) *
                 C51016 +
             (C15246 + C15247) * C50928) *
                C2289 +
            ((C11149 + C11150) * C51016 + (C14031 + C14032) * C50928) *
                C50739) *
               C2089) *
              C50779 * C50995 +
          ((((C11148 + C11147) * C51016 + C14685 * C50928) * C2289 +
            ((C11146 + C11145) * C51016 + (C11693 + C11694) * C50928) *
                C50739) *
               C51051 -
           ((C11299 * C50928 + (C10740 + C10739) * C51016) * C50739 +
            (C13801 * C50928 + (C10738 + C10737) * C51016) * C2289) *
               C51050 -
           (((C10690 * C6098 + C12091 + C12091 + C50956 * C6100 +
              C10688 * C1213 + C12092 + C12092 + C51017 * C1221) *
                 C50928 +
             (C11152 + C11151) * C51016) *
                C50739 +
            ((C14032 + C14031) * C50928 + (C11150 + C11149) * C51016) * C2289) *
               C2089) *
              C50779 * C50766)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
              C10694 + C10694 + C50956 * C480) *
                 C51016 +
             (C13823 + C13824) * C50928) *
                C2289 +
            ((C10737 + C10738) * C51016 + C13799 * C50928) * C50739) *
               C1673 -
           ((C14680 * C50928 + (C11147 + C11148) * C51016) * C50739 +
            ((C14698 + C14699) * C50928 +
             (C10690 * C461 + C11109 + C11109 + C50956 * C481 + C10688 * C460 +
              C11110 + C11110 + C51017 * C480) *
                 C51016) *
                C2289) *
               C50859) *
              C50779 * C1024 +
          ((((C11148 + C11147) * C51016 + C14685 * C50928) * C2289 +
            ((C11146 + C11145) * C51016 + (C11693 + C11694) * C50928) *
                C50739) *
               C50859 -
           ((C11299 * C50928 + (C10740 + C10739) * C51016) * C50739 +
            (C13801 * C50928 + (C10738 + C10737) * C51016) * C2289) *
               C1673) *
              C50779 * C1025 +
          (((C10745 * C51016 + C14227 * C50928) * C2289 +
            ((C10742 + C10741) * C51016 + (C11311 + C11312) * C50928) *
                C50739) *
               C1673 -
           (((C10690 * C1212 + C11681 + C11681 + C50956 * C1220 +
              C10688 * C889 + C11682 + C11682 + C51017 * C899) *
                 C50928 +
             (C11472 + C11471) * C51016) *
                C50739 +
            ((C11694 + C11693) * C50928 + C11459 * C51016) * C2289) *
               C50859) *
              C50779 * C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
              C10694 + C10694 + C50956 * C480) *
                 C51016 +
             (C13823 + C13824) * C50928) *
                C2289 +
            ((C10737 + C10738) * C51016 + C13799 * C50928) * C50739) *
               C1673 -
           ((C14680 * C50928 + (C11147 + C11148) * C51016) * C50739 +
            ((C14698 + C14699) * C50928 +
             (C10690 * C461 + C11109 + C11109 + C50956 * C481 + C10688 * C460 +
              C11110 + C11110 + C51017 * C480) *
                 C51016) *
                C2289) *
               C50859) *
              C275 +
          ((((C14699 + C14698) * C51016 + (C15906 + C15907) * C50928) * C2289 +
            (C14685 * C51016 + (C14700 + C14701) * C50928) * C50739) *
               C50859 -
           ((C13800 * C50928 + C13801 * C51016) * C50739 +
            ((C13825 + C13826) * C50928 + (C13824 + C13823) * C51016) * C2289) *
               C1673) *
              C276 +
          ((((C13826 + C13825) * C51016 + (C15038 + C15039) * C50928) * C2289 +
            (C13806 * C51016 + (C13827 + C13828) * C50928) * C50739) *
               C1673 -
           (((C10690 * C3603 + C15898 + C15898 + C50956 * C3607 +
              C10688 * C3171 + C15899 + C15899 + C51017 * C3177) *
                 C50928 +
             (C14701 + C14700) * C51016) *
                C50739 +
            ((C10690 * C3604 + C15900 + C15900 + C50956 * C3608 +
              C10688 * C3170 + C15901 + C15901 + C51017 * C3176) *
                 C50928 +
             (C15907 + C15906) * C51016) *
                C2289) *
               C50859) *
              C277) *
         C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C2286 +
             C2486 * C2287 + C2487 * C2288) *
                C2289 +
            (C2292 + C2293 + C2294) * C50739) *
               C50795 * C51003 -
           ((C2492 + C2462 + C2463) * C50739 +
            (C2489 * C2288 + C2487 * C2287 + C2486 * C2286) * C2289) *
               C50795 * C50831) *
              C51046 +
          (((C2463 + C2462 + C2492) * C2289 +
            (C2820 + C2821 + C2822) * C50739) *
               C50795 * C50831 -
           ((C2295 + C2296 + C2297) * C50739 +
            (C2294 + C2293 + C2292) * C2289) *
               C50795 * C51003) *
              C51047 +
          (((C2297 + C2296 + C2295) * C2289 +
            (C2298 + C2299 + C2300) * C50739) *
               C50795 * C51003 -
           (((C117 * C1098 + C1111 + C1111 + C50892 * C1106) * C2288 +
             C350 * C2287 + C345 * C2286) *
                C50739 +
            (C2822 + C2821 + C2820) * C2289) *
               C50795 * C50831) *
              C635)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C50877 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C50795 * C51003 -
           (C351 * C110 + C352 * C109 + C353 * C108 +
            (C117 * C283 + C320 + C320 + C50892 * C303) * C50877 * C107) *
               C50795 * C50831) *
              C51046 +
          ((C353 * C107 + C352 * C108 + C351 * C109 + C646 * C110) * C50795 *
               C50831 -
           (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C50795 *
               C51003) *
              C51047 +
          ((C174 * C107 + C175 * C108 + C176 * C109 + C177 * C110) * C50795 *
               C51003 -
           ((C117 * C636 + C642 + C642 + C50892 * C638) * C50877 * C110 +
            C646 * C109 + C351 * C108 + C352 * C107) *
               C50795 * C50831) *
              C635)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5113 * C119 + C5120 + C5120 + C5110 * C133 + C5115 * C460 +
             C5121 + C5121 + C5111 * C480 + C5117 * C461 + C5122 + C5122 +
             C5112 * C481) *
                C50877 * C2289 +
            (C5171 + C5172 + C5173) * C50877 * C50739) *
               C50795 * C51003 -
           ((C5368 + C5369 + C5370) * C50877 * C50739 +
            (C5117 * C1215 + C5335 + C5335 + C5112 * C1223 + C5115 * C886 +
             C5336 + C5336 + C5111 * C896 + C5113 * C283 + C5337 + C5337 +
             C5110 * C303) *
                C50877 * C2289) *
               C50795 * C50831) *
              C51046 +
          (((C5370 + C5369 + C5368) * C50877 * C2289 +
            (C5738 + C5739 + C5740) * C50877 * C50739) *
               C50795 * C50831 -
           ((C5174 + C5175 + C5176) * C50877 * C50739 +
            (C5173 + C5172 + C5171) * C50877 * C2289) *
               C50795 * C51003) *
              C51047 +
          (((C5176 + C5175 + C5174) * C50877 * C2289 +
            (C5177 + C5178 + C5179) * C50877 * C50739) *
               C50795 * C51003 -
           ((C5117 * C1212 + C5729 + C5729 + C5112 * C1220 + C5115 * C889 +
             C5730 + C5730 + C5111 * C899 + C5113 * C280 + C5731 + C5731 +
             C5110 * C300) *
                C50877 * C50739 +
            (C5740 + C5739 + C5738) * C50877 * C2289) *
               C50795 * C50831) *
              C635)) /
            (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50892 * C133) * C2286 +
              C2486 * C2287 + C2487 * C2288) *
                 C2289 +
             (C2292 + C2293 + C2294) * C50739) *
                C51004 -
            ((C2671 + C2652 + C2653) * C50739 +
             (C3197 * C2288 + C3198 * C2287 +
              (C117 * C460 + C497 + C497 + C50892 * C480) * C2286) *
                 C2289) *
                C50859) *
               C51003 +
           (((C3198 * C2286 + C3197 * C2287 +
              (C117 * C3170 + C3184 + C3184 + C50892 * C3176) * C2288) *
                 C2289 +
             (C3185 + C3186 + C3200) * C50739) *
                C50859 -
            ((C2492 + C2462 + C2463) * C50739 +
             (C2489 * C2288 + C2487 * C2287 + C2486 * C2286) * C2289) *
                C51004) *
               C50831) *
              C278 +
          ((((C2653 + C2652 + C2671) * C2289 +
             (C2969 + C2970 + C2976) * C50739) *
                C50859 -
            ((C2295 + C2296 + C2297) * C50739 +
             (C2294 + C2293 + C2292) * C2289) *
                C51004) *
               C51003 +
           (((C2463 + C2462 + C2492) * C2289 +
             (C2820 + C2821 + C2822) * C50739) *
                C51004 -
            (((C117 * C3172 + C3190 + C3190 + C50892 * C3178) * C2288 +
              C2975 * C2287 + C920 * C2286) *
                 C50739 +
             (C3200 + C3186 + C3185) * C2289) *
                C50859) *
               C50831) *
              C50766)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C50877 * C107 +
             C173 * C108 + C174 * C109 + C175 * C110) *
                C51004 -
            (C528 * C110 + C529 * C109 + C530 * C108 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C50877 * C107) *
                C50859) *
               C51003 +
           (((C117 * C886 + C902 + C902 + C50892 * C896) * C50877 * C107 +
             C922 * C108 + C923 * C109 + C924 * C110) *
                C50859 -
            (C351 * C110 + C352 * C109 + C353 * C108 +
             (C117 * C283 + C320 + C320 + C50892 * C303) * C50877 * C107) *
                C51004) *
               C50831) *
              C278 +
          (((C530 * C107 + C529 * C108 + C528 * C109 + C756 * C110) * C50859 -
            (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C51004) *
               C51003 +
           ((C353 * C107 + C352 * C108 + C351 * C109 + C646 * C110) * C51004 -
            ((C117 * C890 + C912 + C912 + C50892 * C900) * C50877 * C110 +
             C924 * C109 + C923 * C108 + C922 * C107) *
                C50859) *
               C50831) *
              C50766)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5113 * C119 + C5120 + C5120 + C5110 * C133 + C5115 * C460 +
              C5121 + C5121 + C5111 * C480 + C5117 * C461 + C5122 + C5122 +
              C5112 * C481) *
                 C50877 * C2289 +
             (C5171 + C5172 + C5173) * C50877 * C50739) *
                C51004 -
            ((C5571 + C5572 + C5573) * C50877 * C50739 +
             (C5117 * C1846 + C5538 + C5538 + C5112 * C1854 + C5115 * C461 +
              C5539 + C5539 + C5111 * C481 + C5113 * C460 + C5540 + C5540 +
              C5110 * C480) *
                 C50877 * C2289) *
                C50859) *
               C51003 +
           (((C5113 * C886 + C6102 + C6102 + C5110 * C896 + C5115 * C1215 +
              C6103 + C6103 + C5111 * C1223 + C5117 * C4513 + C6104 + C6104 +
              C5112 * C4521) *
                 C50877 * C2289 +
             (C6123 + C6124 + C6125) * C50877 * C50739) *
                C50859 -
            ((C5368 + C5369 + C5370) * C50877 * C50739 +
             (C5117 * C1215 + C5335 + C5335 + C5112 * C1223 + C5115 * C886 +
              C5336 + C5336 + C5111 * C896 + C5113 * C283 + C5337 + C5337 +
              C5110 * C303) *
                 C50877 * C2289) *
                C51004) *
               C50831) *
              C278 +
          ((((C5573 + C5572 + C5571) * C50877 * C2289 +
             (C5902 + C5903 + C5904) * C50877 * C50739) *
                C50859 -
            ((C5174 + C5175 + C5176) * C50877 * C50739 +
             (C5173 + C5172 + C5171) * C50877 * C2289) *
                C51004) *
               C51003 +
           (((C5370 + C5369 + C5368) * C50877 * C2289 +
             (C5738 + C5739 + C5740) * C50877 * C50739) *
                C51004 -
            ((C5117 * C6098 + C6114 + C6114 + C5112 * C6100 + C5115 * C1213 +
              C6115 + C6115 + C5111 * C1221 + C5113 * C888 + C6116 + C6116 +
              C5110 * C898) *
                 C50877 * C50739 +
             (C6125 + C6124 + C6123) * C50877 * C2289) *
                C50859) *
               C50831) *
              C50766)) /
            (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C117 * C119 + C141 + C141 + C50892 * C133) * C50877 * C107 +
               C173 * C108 + C174 * C109 + C175 * C110) *
                  C50795 * C50779 * C113 -
              (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C50795 *
                  C50779 * C114 +
              (C174 * C107 + C175 * C108 + C176 * C109 + C177 * C110) * C50795 *
                  C50779 * C115 -
              ((C117 * C125 + C157 + C157 + C50892 * C139) * C50877 * C110 +
               C177 * C109 + C176 * C108 + C175 * C107) *
                  C50795 * C50779 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C141 + C141 + C50892 * C133) * C50877 * C107 +
                C173 * C108 + C174 * C109 + C175 * C110) *
                   C50795 * C275 -
               (C351 * C110 + C352 * C109 + C353 * C108 +
                (C117 * C283 + C320 + C320 + C50892 * C303) * C50877 * C107) *
                   C50795 * C276 +
               ((C117 * C284 + C321 + C321 + C50892 * C304) * C50877 * C107 +
                C354 * C108 + C355 * C109 + C356 * C110) *
                   C50795 * C277) *
                  C278 +
              ((C353 * C107 + C352 * C108 + C351 * C109 +
                (C117 * C288 + C331 + C331 + C50892 * C308) * C50877 * C110) *
                   C50795 * C276 -
               (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) *
                   C50795 * C275 -
               ((C117 * C289 + C332 + C332 + C50892 * C309) * C50877 * C110 +
                C356 * C109 + C355 * C108 + C354 * C107) *
                   C50795 * C277) *
                  C50766)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C50877 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C454 -
           (C528 * C110 + C529 * C109 + C530 * C108 +
            (C117 * C460 + C497 + C497 + C50892 * C480) * C50877 * C107) *
               C455 +
           ((C117 * C461 + C498 + C498 + C50892 * C481) * C50877 * C107 +
            C531 * C108 + C532 * C109 + C533 * C110) *
               C456) *
              C50779 * C278 +
          ((C530 * C107 + C529 * C108 + C528 * C109 +
            (C117 * C465 + C508 + C508 + C50892 * C485) * C50877 * C110) *
               C455 -
           (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C454 -
           ((C117 * C466 + C509 + C509 + C50892 * C486) * C50877 * C110 +
            C533 * C109 + C532 * C108 + C531 * C107) *
               C456) *
              C50779 * C50766)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C2286 +
            (C117 * C283 + C320 + C320 + C50892 * C303) * C2287 +
            (C117 * C284 + C321 + C321 + C50892 * C304) * C2288) *
               C2289 +
           (C2292 + C2293 + C2294) * C50739) *
              C50795 * C50779 * C113 -
          ((C2295 + C2296 + C2297) * C50739 + (C2294 + C2293 + C2292) * C2289) *
              C50795 * C50779 * C114 +
          ((C2297 + C2296 + C2295) * C2289 + (C2298 + C2299 + C2300) * C50739) *
              C50795 * C50779 * C115 -
          (((C117 * C289 + C332 + C332 + C50892 * C309) * C2288 + C645 * C2287 +
            C171 * C2286) *
               C50739 +
           (C2300 + C2299 + C2298) * C2289) *
              C50795 * C50779 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C2286 +
             C2486 * C2287 + C2487 * C2288) *
                C2289 +
            (C2292 + C2293 + C2294) * C50739) *
               C50795 * C275 -
           ((C2492 + C2462 + C2463) * C50739 +
            (C2489 * C2288 + C2487 * C2287 + C2486 * C2286) * C2289) *
               C50795 * C276 +
           ((C2487 * C2286 + C2489 * C2287 +
             (C117 * C2446 + C2466 + C2466 + C50892 * C2452) * C2288) *
                C2289 +
            (C2467 + C2493 + C2494) * C50739) *
               C50795 * C277) *
              C278 +
          (((C2463 + C2462 + C2492) * C2289 +
            (C346 * C2286 + C349 * C2287 + C2491 * C2288) * C50739) *
               C50795 * C276 -
           ((C2295 + C2296 + C2297) * C50739 +
            (C2294 + C2293 + C2292) * C2289) *
               C50795 * C275 -
           (((C117 * C2448 + C2473 + C2473 + C50892 * C2454) * C2288 +
             C2491 * C2287 + C349 * C2286) *
                C50739 +
            (C2494 + C2493 + C2467) * C2289) *
               C50795 * C277) *
              C50766)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C2286 +
             C2486 * C2287 + C2487 * C2288) *
                C2289 +
            (C2292 + C2293 + C2294) * C50739) *
               C454 -
           ((C2671 + C2652 + C2653) * C50739 +
            ((C117 * C1562 + C1575 + C1575 + C50892 * C1570) * C2288 +
             (C117 * C886 + C902 + C902 + C50892 * C896) * C2287 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C2286) *
                C2289) *
               C455 +
           (((C117 * C461 + C498 + C498 + C50892 * C481) * C2286 +
             (C117 * C1215 + C1228 + C1228 + C50892 * C1223) * C2287 +
             (C117 * C2640 + C2654 + C2654 + C50892 * C2646) * C2288) *
                C2289 +
            (C2655 + C2672 + C2673) * C50739) *
               C456) *
              C50779 * C278 +
          (((C2653 + C2652 + C2671) * C2289 +
            (C523 * C2286 + C920 * C2287 +
             (C117 * C1560 + C1573 + C1573 + C50892 * C1568) * C2288) *
                C50739) *
               C455 -
           ((C2295 + C2296 + C2297) * C50739 +
            (C2294 + C2293 + C2292) * C2289) *
               C454 -
           (((C117 * C2642 + C2661 + C2661 + C50892 * C2648) * C2288 +
             (C117 * C1213 + C1226 + C1226 + C50892 * C1221) * C2287 +
             C526 * C2286) *
                C50739 +
            (C2673 + C2672 + C2655) * C2289) *
               C456) *
              C50779 * C50766)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((C5113 * C119 + C5120 + C5120 + C5110 * C133 +
                                C5115 * C460 + C5121 + C5121 + C5111 * C480 +
                                C5117 * C461 + C5122 + C5122 + C5112 * C481) *
                                   C50877 * C2289 +
                               (C5171 + C5172 + C5173) * C50877 * C50739) *
                                  C50795 * C50779 * C113 -
                              ((C5174 + C5175 + C5176) * C50877 * C50739 +
                               (C5173 + C5172 + C5171) * C50877 * C2289) *
                                  C50795 * C50779 * C114 +
                              ((C5176 + C5175 + C5174) * C50877 * C2289 +
                               (C5177 + C5178 + C5179) * C50877 * C50739) *
                                  C50795 * C50779 * C115 -
                              ((C5117 * C466 + C5150 + C5150 + C5112 * C486 +
                                C5115 * C465 + C5151 + C5151 + C5111 * C485 +
                                C5113 * C123 + C5152 + C5152 + C5110 * C137) *
                                   C50877 * C50739 +
                               (C5179 + C5178 + C5177) * C50877 * C2289) *
                                  C50795 * C50779 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5113 * C119 + C5120 + C5120 + C5110 * C133 + C5115 * C460 +
             C5121 + C5121 + C5111 * C480 + C5117 * C461 + C5122 + C5122 +
             C5112 * C481) *
                C50877 * C2289 +
            (C5171 + C5172 + C5173) * C50877 * C50739) *
               C50795 * C275 -
           ((C5368 + C5369 + C5370) * C50877 * C50739 +
            (C5117 * C1215 + C5335 + C5335 + C5112 * C1223 + C5115 * C886 +
             C5336 + C5336 + C5111 * C896 + C5113 * C283 + C5337 + C5337 +
             C5110 * C303) *
                C50877 * C2289) *
               C50795 * C276 +
           ((C5113 * C284 + C5338 + C5338 + C5110 * C304 + C5115 * C1562 +
             C5339 + C5339 + C5111 * C1570 + C5117 * C2640 + C5340 + C5340 +
             C5112 * C2646) *
                C50877 * C2289 +
            (C5371 + C5372 + C5373) * C50877 * C50739) *
               C50795 * C277) *
              C278 +
          (((C5370 + C5369 + C5368) * C50877 * C2289 +
            (C5113 * C281 + C5350 + C5350 + C5110 * C301 + C5115 * C888 +
             C5351 + C5351 + C5111 * C898 + C5117 * C1213 + C5352 + C5352 +
             C5112 * C1221) *
                C50877 * C50739) *
               C50795 * C276 -
           ((C5174 + C5175 + C5176) * C50877 * C50739 +
            (C5173 + C5172 + C5171) * C50877 * C2289) *
               C50795 * C275 -
           ((C5117 * C2642 + C5353 + C5353 + C5112 * C2648 + C5115 * C1560 +
             C5354 + C5354 + C5111 * C1568 + C5113 * C286 + C5355 + C5355 +
             C5110 * C306) *
                C50877 * C50739 +
            (C5373 + C5372 + C5371) * C50877 * C2289) *
               C50795 * C277) *
              C50766)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C5113 * C119 + C5120 + C5120 + C5110 * C133 + C5115 * C460 +
             C5121 + C5121 + C5111 * C480 + C5117 * C461 + C5122 + C5122 +
             C5112 * C481) *
                C50877 * C2289 +
            (C5171 + C5172 + C5173) * C50877 * C50739) *
               C454 -
           ((C5571 + C5572 + C5573) * C50877 * C50739 +
            (C5117 * C1846 + C5538 + C5538 + C5112 * C1854 + C5115 * C461 +
             C5539 + C5539 + C5111 * C481 + C5113 * C460 + C5540 + C5540 +
             C5110 * C480) *
                C50877 * C2289) *
               C455 +
           ((C5113 * C461 + C5541 + C5541 + C5110 * C481 + C5115 * C1846 +
             C5542 + C5542 + C5111 * C1854 + C5117 * C5519 + C5543 + C5543 +
             C5112 * C5525) *
                C50877 * C2289 +
            (C5574 + C5575 + C5576) * C50877 * C50739) *
               C456) *
              C50779 * C278 +
          (((C5573 + C5572 + C5571) * C50877 * C2289 +
            (C5113 * C458 + C5553 + C5553 + C5110 * C478 + C5115 * C463 +
             C5554 + C5554 + C5111 * C483 + C5117 * C1844 + C5555 + C5555 +
             C5112 * C1852) *
                C50877 * C50739) *
               C455 -
           ((C5174 + C5175 + C5176) * C50877 * C50739 +
            (C5173 + C5172 + C5171) * C50877 * C2289) *
               C454 -
           ((C5117 * C5521 + C5556 + C5556 + C5112 * C5527 + C5115 * C1844 +
             C5557 + C5557 + C5111 * C1852 + C5113 * C463 + C5558 + C5558 +
             C5110 * C483) *
                C50877 * C50739 +
            (C5576 + C5575 + C5574) * C50877 * C2289) *
               C456) *
              C50779 * C50766)) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C2286 +
             C2486 * C2287 + C2487 * C2288) *
                C2289 +
            (C2292 + C2293 + C2294) * C50739) *
               C51004 -
           ((C2671 + C2652 + C2653) * C50739 +
            ((C117 * C1562 + C1575 + C1575 + C50892 * C1570) * C2288 +
             (C117 * C886 + C902 + C902 + C50892 * C896) * C2287 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C2286) *
                C2289) *
               C50859) *
              C50779 * C51046 +
          (((C2653 + C2652 + C2671) * C2289 +
            (C2969 + C2970 + C2976) * C50739) *
               C50859 -
           ((C2295 + C2296 + C2297) * C50739 +
            (C2294 + C2293 + C2292) * C2289) *
               C51004) *
              C50779 * C51047 +
          (((C2297 + C2296 + C2295) * C2289 +
            (C2298 + C2299 + C2300) * C50739) *
               C51004 -
           (((C117 * C1559 + C1572 + C1572 + C50892 * C1567) * C2288 +
             C921 * C2287 + C522 * C2286) *
                C50739 +
            (C2976 + C2970 + C2969) * C2289) *
               C50859) *
              C50779 * C635)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C50877 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C51004 -
           (C528 * C110 + C529 * C109 + C530 * C108 +
            (C117 * C460 + C497 + C497 + C50892 * C480) * C50877 * C107) *
               C50859) *
              C50779 * C51046 +
          ((C530 * C107 + C529 * C108 + C528 * C109 + C756 * C110) * C50859 -
           (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C51004) *
              C50779 * C51047 +
          ((C174 * C107 + C175 * C108 + C176 * C109 + C177 * C110) * C51004 -
           ((C117 * C746 + C752 + C752 + C50892 * C748) * C50877 * C110 +
            C756 * C109 + C528 * C108 + C529 * C107) *
               C50859) *
              C50779 * C635)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5113 * C119 + C5120 + C5120 + C5110 * C133 + C5115 * C460 +
             C5121 + C5121 + C5111 * C480 + C5117 * C461 + C5122 + C5122 +
             C5112 * C481) *
                C50877 * C2289 +
            (C5171 + C5172 + C5173) * C50877 * C50739) *
               C51004 -
           ((C5571 + C5572 + C5573) * C50877 * C50739 +
            (C5117 * C1846 + C5538 + C5538 + C5112 * C1854 + C5115 * C461 +
             C5539 + C5539 + C5111 * C481 + C5113 * C460 + C5540 + C5540 +
             C5110 * C480) *
                C50877 * C2289) *
               C50859) *
              C50779 * C51046 +
          (((C5573 + C5572 + C5571) * C50877 * C2289 +
            (C5902 + C5903 + C5904) * C50877 * C50739) *
               C50859 -
           ((C5174 + C5175 + C5176) * C50877 * C50739 +
            (C5173 + C5172 + C5171) * C50877 * C2289) *
               C51004) *
              C50779 * C51047 +
          (((C5176 + C5175 + C5174) * C50877 * C2289 +
            (C5177 + C5178 + C5179) * C50877 * C50739) *
               C51004 -
           ((C5117 * C1843 + C5893 + C5893 + C5112 * C1851 + C5115 * C464 +
             C5894 + C5894 + C5111 * C484 + C5113 * C457 + C5895 + C5895 +
             C5110 * C477) *
                C50877 * C50739 +
            (C5904 + C5903 + C5902) * C50877 * C2289) *
               C50859) *
              C50779 * C635)) /
            (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C50877 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C50795 * C275 -
           (C351 * C110 + C352 * C109 + C353 * C108 +
            (C117 * C283 + C320 + C320 + C50892 * C303) * C50877 * C107) *
               C50795 * C276 +
           ((C117 * C284 + C321 + C321 + C50892 * C304) * C50877 * C107 +
            C354 * C108 + C355 * C109 + C356 * C110) *
               C50795 * C277) *
              C278 +
          ((C353 * C107 + C352 * C108 + C351 * C109 +
            (C117 * C288 + C331 + C331 + C50892 * C308) * C50877 * C110) *
               C50795 * C276 -
           (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C50795 *
               C275 -
           ((C117 * C289 + C332 + C332 + C50892 * C309) * C50877 * C110 +
            C356 * C109 + C355 * C108 + C354 * C107) *
               C50795 * C277) *
              C50766)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50892 * C133) * C50877 * C107 +
           C173 * C108 + C174 * C109 + C175 * C110) *
              C50795 * C50779 * C113 -
          (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C50795 *
              C50779 * C114 +
          (C174 * C107 + C175 * C108 + C176 * C109 + C177 * C110) * C50795 *
              C50779 * C115 -
          ((C117 * C125 + C157 + C157 + C50892 * C139) * C50877 * C110 +
           C177 * C109 + C176 * C108 + C175 * C107) *
              C50795 * C50779 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C2286 +
            (C117 * C283 + C320 + C320 + C50892 * C303) * C2287 +
            (C117 * C284 + C321 + C321 + C50892 * C304) * C2288) *
               C2289 +
           (C2292 + C2293 + C2294) * C50739) *
              C50795 * C50779 * C113 -
          ((C2295 + C2296 + C2297) * C50739 + (C2294 + C2293 + C2292) * C2289) *
              C50795 * C50779 * C114 +
          ((C2297 + C2296 + C2295) * C2289 + (C2298 + C2299 + C2300) * C50739) *
              C50795 * C50779 * C115 -
          (((C117 * C289 + C332 + C332 + C50892 * C309) * C2288 + C645 * C2287 +
            C171 * C2286) *
               C50739 +
           (C2300 + C2299 + C2298) * C2289) *
              C50795 * C50779 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C2286 +
             C2486 * C2287 + C2487 * C2288) *
                C2289 +
            (C2292 + C2293 + C2294) * C50739) *
               C50795 * C275 -
           ((C2492 + C2462 + C2463) * C50739 +
            (C2489 * C2288 + C2487 * C2287 + C2486 * C2286) * C2289) *
               C50795 * C276 +
           ((C2487 * C2286 + C2489 * C2287 +
             (C117 * C2446 + C2466 + C2466 + C50892 * C2452) * C2288) *
                C2289 +
            (C2467 + C2493 + C2494) * C50739) *
               C50795 * C277) *
              C278 +
          (((C2463 + C2462 + C2492) * C2289 +
            (C346 * C2286 + C349 * C2287 + C2491 * C2288) * C50739) *
               C50795 * C276 -
           ((C2295 + C2296 + C2297) * C50739 +
            (C2294 + C2293 + C2292) * C2289) *
               C50795 * C275 -
           (((C117 * C2448 + C2473 + C2473 + C50892 * C2454) * C2288 +
             C2491 * C2287 + C349 * C2286) *
                C50739 +
            (C2494 + C2493 + C2467) * C2289) *
               C50795 * C277) *
              C50766)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C5113 * C119 + C5120 + C5120 + C5110 * C133 + C5115 * C460 + C5121 +
            C5121 + C5111 * C480 + C5117 * C461 + C5122 + C5122 +
            C5112 * C481) *
               C50877 * C2289 +
           (C5171 + C5172 + C5173) * C50877 * C50739) *
              C50795 * C50779 * C113 -
          ((C5174 + C5175 + C5176) * C50877 * C50739 +
           (C5173 + C5172 + C5171) * C50877 * C2289) *
              C50795 * C50779 * C114 +
          ((C5176 + C5175 + C5174) * C50877 * C2289 +
           (C5177 + C5178 + C5179) * C50877 * C50739) *
              C50795 * C50779 * C115 -
          ((C5117 * C466 + C5150 + C5150 + C5112 * C486 + C5115 * C465 + C5151 +
            C5151 + C5111 * C485 + C5113 * C123 + C5152 + C5152 +
            C5110 * C137) *
               C50877 * C50739 +
           (C5179 + C5178 + C5177) * C50877 * C2289) *
              C50795 * C50779 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5113 * C119 + C5120 + C5120 + C5110 * C133 + C5115 * C460 +
             C5121 + C5121 + C5111 * C480 + C5117 * C461 + C5122 + C5122 +
             C5112 * C481) *
                C50877 * C2289 +
            (C5171 + C5172 + C5173) * C50877 * C50739) *
               C50795 * C275 -
           ((C5368 + C5369 + C5370) * C50877 * C50739 +
            (C5117 * C1215 + C5335 + C5335 + C5112 * C1223 + C5115 * C886 +
             C5336 + C5336 + C5111 * C896 + C5113 * C283 + C5337 + C5337 +
             C5110 * C303) *
                C50877 * C2289) *
               C50795 * C276 +
           ((C5113 * C284 + C5338 + C5338 + C5110 * C304 + C5115 * C1562 +
             C5339 + C5339 + C5111 * C1570 + C5117 * C2640 + C5340 + C5340 +
             C5112 * C2646) *
                C50877 * C2289 +
            (C5371 + C5372 + C5373) * C50877 * C50739) *
               C50795 * C277) *
              C278 +
          (((C5370 + C5369 + C5368) * C50877 * C2289 +
            (C5113 * C281 + C5350 + C5350 + C5110 * C301 + C5115 * C888 +
             C5351 + C5351 + C5111 * C898 + C5117 * C1213 + C5352 + C5352 +
             C5112 * C1221) *
                C50877 * C50739) *
               C50795 * C276 -
           ((C5174 + C5175 + C5176) * C50877 * C50739 +
            (C5173 + C5172 + C5171) * C50877 * C2289) *
               C50795 * C275 -
           ((C5117 * C2642 + C5353 + C5353 + C5112 * C2648 + C5115 * C1560 +
             C5354 + C5354 + C5111 * C1568 + C5113 * C286 + C5355 + C5355 +
             C5110 * C306) *
                C50877 * C50739 +
            (C5373 + C5372 + C5371) * C50877 * C2289) *
               C50795 * C277) *
              C50766)) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C2286 +
             C2486 * C2287 + C2487 * C2288) *
                C2289 +
            (C2292 + C2293 + C2294) * C50739) *
               C50795 * C51048 -
           ((C2492 + C2462 + C2463) * C50739 +
            (C2489 * C2288 + C2487 * C2287 + C2486 * C2286) * C2289) *
               C50795 * C51049 +
           ((C2487 * C2286 + C2489 * C2287 + C3457 * C2288) * C2289 +
            (C2467 + C2493 + C2494) * C50739) *
               C50795 * C1328) *
              C50995 +
          (((C2463 + C2462 + C2492) * C2289 +
            (C2820 + C2821 + C2822) * C50739) *
               C50795 * C51049 -
           ((C2295 + C2296 + C2297) * C50739 +
            (C2294 + C2293 + C2292) * C2289) *
               C50795 * C51048 -
           (((C117 * C2448 + C2473 + C2473 + C50892 * C2454) * C2288 +
             C2491 * C2287 + C349 * C2286) *
                C50739 +
            (C2494 + C2493 + C2467) * C2289) *
               C50795 * C1328) *
              C50766)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C50877 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C50795 * C51048 -
           (C351 * C110 + C352 * C109 + C353 * C108 +
            (C117 * C283 + C320 + C320 + C50892 * C303) * C50877 * C107) *
               C50795 * C51049 +
           ((C117 * C284 + C321 + C321 + C50892 * C304) * C50877 * C107 +
            C354 * C108 + C355 * C109 + C356 * C110) *
               C50795 * C1328) *
              C50995 +
          ((C353 * C107 + C352 * C108 + C351 * C109 + C646 * C110) * C50795 *
               C51049 -
           (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C50795 *
               C51048 -
           ((C117 * C289 + C332 + C332 + C50892 * C309) * C50877 * C110 +
            C356 * C109 + C355 * C108 + C354 * C107) *
               C50795 * C1328) *
              C50766)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5113 * C119 + C5120 + C5120 + C5110 * C133 + C5115 * C460 +
             C5121 + C5121 + C5111 * C480 + C5117 * C461 + C5122 + C5122 +
             C5112 * C481) *
                C50877 * C2289 +
            (C5171 + C5172 + C5173) * C50877 * C50739) *
               C50795 * C51048 -
           ((C5368 + C5369 + C5370) * C50877 * C50739 +
            (C5117 * C1215 + C5335 + C5335 + C5112 * C1223 + C5115 * C886 +
             C5336 + C5336 + C5111 * C896 + C5113 * C283 + C5337 + C5337 +
             C5110 * C303) *
                C50877 * C2289) *
               C50795 * C51049 +
           ((C5113 * C284 + C5338 + C5338 + C5110 * C304 + C5115 * C1562 +
             C5339 + C5339 + C5111 * C1570 + C5117 * C2640 + C5340 + C5340 +
             C5112 * C2646) *
                C50877 * C2289 +
            (C5371 + C5372 + C5373) * C50877 * C50739) *
               C50795 * C1328) *
              C50995 +
          (((C5370 + C5369 + C5368) * C50877 * C2289 +
            (C5738 + C5739 + C5740) * C50877 * C50739) *
               C50795 * C51049 -
           ((C5174 + C5175 + C5176) * C50877 * C50739 +
            (C5173 + C5172 + C5171) * C50877 * C2289) *
               C50795 * C51048 -
           ((C5117 * C2642 + C5353 + C5353 + C5112 * C2648 + C5115 * C1560 +
             C5354 + C5354 + C5111 * C1568 + C5113 * C286 + C5355 + C5355 +
             C5110 * C306) *
                C50877 * C50739 +
            (C5373 + C5372 + C5371) * C50877 * C2289) *
               C50795 * C1328) *
              C50766)) /
            (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C2286 +
             C2486 * C2287 + C2487 * C2288) *
                C2289 +
            (C2292 + C2293 + C2294) * C50739) *
               C51004 -
           ((C2671 + C2652 + C2653) * C50739 +
            (C3197 * C2288 + C3198 * C2287 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C2286) *
                C2289) *
               C50859) *
              C51048 +
          (((C3198 * C2286 + C3197 * C2287 + C4120 * C2288) * C2289 +
            (C3185 + C3186 + C3200) * C50739) *
               C50859 -
           ((C2492 + C2462 + C2463) * C50739 +
            (C2489 * C2288 + C2487 * C2287 + C2486 * C2286) * C2289) *
               C51004) *
              C51049 +
          (((C2487 * C2286 + C2489 * C2287 + C3457 * C2288) * C2289 +
            (C2467 + C2493 + C2494) * C50739) *
               C51004 -
           (((C117 * C4107 + C4116 + C4116 + C50892 * C4111) * C2288 +
             C3199 * C2287 + C2668 * C2286) *
                C50739 +
            ((C117 * C4108 + C4117 + C4117 + C50892 * C4112) * C2288 +
             C4120 * C2287 + C3197 * C2286) *
                C2289) *
               C50859) *
              C1328) *
         C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C50877 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C51004 -
           (C528 * C110 + C529 * C109 + C530 * C108 +
            (C117 * C460 + C497 + C497 + C50892 * C480) * C50877 * C107) *
               C50859) *
              C51048 +
          (((C117 * C886 + C902 + C902 + C50892 * C896) * C50877 * C107 +
            C922 * C108 + C923 * C109 + C924 * C110) *
               C50859 -
           (C351 * C110 + C352 * C109 + C353 * C108 +
            (C117 * C283 + C320 + C320 + C50892 * C303) * C50877 * C107) *
               C51004) *
              C51049 +
          (((C117 * C284 + C321 + C321 + C50892 * C304) * C50877 * C107 +
            C354 * C108 + C355 * C109 + C356 * C110) *
               C51004 -
           ((C117 * C1559 + C1572 + C1572 + C50892 * C1567) * C50877 * C110 +
            (C117 * C1560 + C1573 + C1573 + C50892 * C1568) * C50877 * C109 +
            (C117 * C1561 + C1574 + C1574 + C50892 * C1569) * C50877 * C108 +
            (C117 * C1562 + C1575 + C1575 + C50892 * C1570) * C50877 * C107) *
               C50859) *
              C1328) *
         C50760) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5113 * C119 + C5120 + C5120 + C5110 * C133 + C5115 * C460 +
             C5121 + C5121 + C5111 * C480 + C5117 * C461 + C5122 + C5122 +
             C5112 * C481) *
                C50877 * C2289 +
            (C5171 + C5172 + C5173) * C50877 * C50739) *
               C51004 -
           ((C5571 + C5572 + C5573) * C50877 * C50739 +
            (C5117 * C1846 + C5538 + C5538 + C5112 * C1854 + C5115 * C461 +
             C5539 + C5539 + C5111 * C481 + C5113 * C460 + C5540 + C5540 +
             C5110 * C480) *
                C50877 * C2289) *
               C50859) *
              C51048 +
          (((C5113 * C886 + C6102 + C6102 + C5110 * C896 + C5115 * C1215 +
             C6103 + C6103 + C5111 * C1223 + C5117 * C4513 + C6104 + C6104 +
             C5112 * C4521) *
                C50877 * C2289 +
            (C6123 + C6124 + C6125) * C50877 * C50739) *
               C50859 -
           ((C5368 + C5369 + C5370) * C50877 * C50739 +
            (C5117 * C1215 + C5335 + C5335 + C5112 * C1223 + C5115 * C886 +
             C5336 + C5336 + C5111 * C896 + C5113 * C283 + C5337 + C5337 +
             C5110 * C303) *
                C50877 * C2289) *
               C51004) *
              C51049 +
          (((C5113 * C284 + C5338 + C5338 + C5110 * C304 + C5115 * C1562 +
             C5339 + C5339 + C5111 * C1570 + C5117 * C2640 + C5340 + C5340 +
             C5112 * C2646) *
                C50877 * C2289 +
            (C5371 + C5372 + C5373) * C50877 * C50739) *
               C51004 -
           ((C5117 * C4510 + C7020 + C7020 + C5112 * C4518 + C5115 * C2641 +
             C7021 + C7021 + C5111 * C2647 + C5113 * C1561 + C7022 + C7022 +
             C5110 * C1569) *
                C50877 * C50739 +
            (C5117 * C4512 + C7023 + C7023 + C5112 * C4520 + C5115 * C2640 +
             C7024 + C7024 + C5111 * C2646 + C5113 * C1562 + C7025 + C7025 +
             C5110 * C1570) *
                C50877 * C2289) *
               C50859) *
              C1328) *
         C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C141 + C141 + C50892 * C133) * C50877 * C107 +
                C173 * C108 + C174 * C109 + C175 * C110) *
                   C50795 * C1022 -
               (C351 * C110 + C352 * C109 + C353 * C108 +
                (C117 * C283 + C320 + C320 + C50892 * C303) * C50877 * C107) *
                   C50795 * C50831) *
                  C1024 +
              ((C353 * C107 + C352 * C108 + C351 * C109 + C646 * C110) *
                   C50795 * C50831 -
               (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) *
                   C50795 * C1022) *
                  C1025 +
              ((C174 * C107 + C175 * C108 + C176 * C109 + C177 * C110) *
                   C50795 * C1022 -
               ((C117 * C636 + C642 + C642 + C50892 * C638) * C50877 * C110 +
                C646 * C109 + C351 * C108 + C352 * C107) *
                   C50795 * C50831) *
                  C1026) +
         0.5 * std::pow(Pi, 2.5) *
             (((C117 * C119 + C141 + C141 + C50892 * C133) * C50877 * C107 +
               C173 * C108 + C174 * C109 + C175 * C110) *
                  C50795 * C1093 -
              (C351 * C110 + C352 * C109 + C353 * C108 +
               (C117 * C283 + C320 + C320 + C50892 * C303) * C50877 * C107) *
                  C50795 * C1094 +
              ((C117 * C284 + C321 + C321 + C50892 * C304) * C50877 * C107 +
               C354 * C108 + C355 * C109 + C356 * C110) *
                  C50795 * C1095 -
              ((C117 * C1098 + C1111 + C1111 + C50892 * C1106) * C50877 * C110 +
               (C117 * C1099 + C1112 + C1112 + C50892 * C1107) * C50877 * C109 +
               (C117 * C1100 + C1113 + C1113 + C50892 * C1108) * C50877 * C108 +
               (C117 * C1101 + C1114 + C1114 + C50892 * C1109) * C50877 *
                   C107) *
                  C50795 * C1096) *
             C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C50877 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C454 -
           (C528 * C110 + C529 * C109 + C530 * C108 +
            (C117 * C460 + C497 + C497 + C50892 * C480) * C50877 * C107) *
               C455 +
           ((C117 * C461 + C498 + C498 + C50892 * C481) * C50877 * C107 +
            C531 * C108 + C532 * C109 + C533 * C110) *
               C456) *
              C1022 +
          (((C117 * C886 + C902 + C902 + C50892 * C896) * C50877 * C107 +
            C922 * C108 + C923 * C109 + C924 * C110) *
               C455 -
           (C351 * C110 + C352 * C109 + C353 * C108 +
            (C117 * C283 + C320 + C320 + C50892 * C303) * C50877 * C107) *
               C454 -
           ((C117 * C1212 + C1225 + C1225 + C50892 * C1220) * C50877 * C110 +
            (C117 * C1213 + C1226 + C1226 + C50892 * C1221) * C50877 * C109 +
            (C117 * C1214 + C1227 + C1227 + C50892 * C1222) * C50877 * C108 +
            (C117 * C1215 + C1228 + C1228 + C50892 * C1223) * C50877 * C107) *
               C456) *
              C50831) *
         C50760) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C2286 +
             C2486 * C2287 + C2487 * C2288) *
                C2289 +
            (C2292 + C2293 + C2294) * C50739) *
               C50795 * C1022 -
           ((C2492 + C2462 + C2463) * C50739 +
            (C2489 * C2288 + C2487 * C2287 + C2486 * C2286) * C2289) *
               C50795 * C50831) *
              C1024 +
          (((C2463 + C2462 + C2492) * C2289 +
            (C2820 + C2821 + C2822) * C50739) *
               C50795 * C50831 -
           ((C2295 + C2296 + C2297) * C50739 +
            (C2294 + C2293 + C2292) * C2289) *
               C50795 * C1022) *
              C1025 +
          (((C2297 + C2296 + C2295) * C2289 +
            (C2298 + C2299 + C2300) * C50739) *
               C50795 * C1022 -
           (((C117 * C1098 + C1111 + C1111 + C50892 * C1106) * C2288 +
             C350 * C2287 + C345 * C2286) *
                C50739 +
            (C2822 + C2821 + C2820) * C2289) *
               C50795 * C50831) *
              C1026)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C2286 +
            C2486 * C2287 + C2487 * C2288) *
               C2289 +
           (C2292 + C2293 + C2294) * C50739) *
              C50795 * C1093 -
          ((C2492 + C2462 + C2463) * C50739 +
           (C2489 * C2288 + C2487 * C2287 + C2486 * C2286) * C2289) *
              C50795 * C1094 +
          ((C2487 * C2286 + C2489 * C2287 + C3457 * C2288) * C2289 +
           (C2467 + C2493 + C2494) * C50739) *
              C50795 * C1095 -
          (((C117 * C3444 + C3453 + C3453 + C50892 * C3448) * C2288 +
            C2490 * C2287 + C2488 * C2286) *
               C50739 +
           ((C117 * C3445 + C3454 + C3454 + C50892 * C3449) * C2288 +
            C3457 * C2287 + C2489 * C2286) *
               C2289) *
              C50795 * C1096) *
         C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C2286 +
             C2486 * C2287 + C2487 * C2288) *
                C2289 +
            (C2292 + C2293 + C2294) * C50739) *
               C454 -
           ((C2671 + C2652 + C2653) * C50739 +
            (C3197 * C2288 + C3198 * C2287 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C2286) *
                C2289) *
               C455 +
           (((C117 * C461 + C498 + C498 + C50892 * C481) * C2286 +
             C3620 * C2287 + C3621 * C2288) *
                C2289 +
            (C2655 + C2672 + C2673) * C50739) *
               C456) *
              C1022 +
          (((C3198 * C2286 + C3197 * C2287 +
             (C117 * C3170 + C3184 + C3184 + C50892 * C3176) * C2288) *
                C2289 +
            (C3185 + C3186 + C3200) * C50739) *
               C455 -
           ((C2492 + C2462 + C2463) * C50739 +
            (C2489 * C2288 + C2487 * C2287 + C2486 * C2286) * C2289) *
               C454 -
           (((C117 * C3603 + C3614 + C3614 + C50892 * C3607) * C2288 +
             C2670 * C2287 + C2669 * C2286) *
                C50739 +
            ((C117 * C3604 + C3615 + C3615 + C50892 * C3608) * C2288 +
             C3621 * C2287 + C3620 * C2286) *
                C2289) *
               C456) *
              C50831) *
         C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * ((((C5113 * C119 + C5120 + C5120 + C5110 * C133 +
                                 C5115 * C460 + C5121 + C5121 + C5111 * C480 +
                                 C5117 * C461 + C5122 + C5122 + C5112 * C481) *
                                    C50877 * C2289 +
                                (C5171 + C5172 + C5173) * C50877 * C50739) *
                                   C50795 * C1022 -
                               ((C5368 + C5369 + C5370) * C50877 * C50739 +
                                (C5117 * C1215 + C5335 + C5335 + C5112 * C1223 +
                                 C5115 * C886 + C5336 + C5336 + C5111 * C896 +
                                 C5113 * C283 + C5337 + C5337 + C5110 * C303) *
                                    C50877 * C2289) *
                                   C50795 * C50831) *
                                  C1024 +
                              (((C5370 + C5369 + C5368) * C50877 * C2289 +
                                (C5738 + C5739 + C5740) * C50877 * C50739) *
                                   C50795 * C50831 -
                               ((C5174 + C5175 + C5176) * C50877 * C50739 +
                                (C5173 + C5172 + C5171) * C50877 * C2289) *
                                   C50795 * C1022) *
                                  C1025 +
                              (((C5176 + C5175 + C5174) * C50877 * C2289 +
                                (C5177 + C5178 + C5179) * C50877 * C50739) *
                                   C50795 * C1022 -
                               ((C5117 * C1212 + C5729 + C5729 + C5112 * C1220 +
                                 C5115 * C889 + C5730 + C5730 + C5111 * C899 +
                                 C5113 * C280 + C5731 + C5731 + C5110 * C300) *
                                    C50877 * C50739 +
                                (C5740 + C5739 + C5738) * C50877 * C2289) *
                                   C50795 * C50831) *
                                  C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C5113 * C119 + C5120 + C5120 + C5110 * C133 + C5115 * C460 + C5121 +
            C5121 + C5111 * C480 + C5117 * C461 + C5122 + C5122 +
            C5112 * C481) *
               C50877 * C2289 +
           (C5171 + C5172 + C5173) * C50877 * C50739) *
              C50795 * C1093 -
          ((C5368 + C5369 + C5370) * C50877 * C50739 +
           (C5117 * C1215 + C5335 + C5335 + C5112 * C1223 + C5115 * C886 +
            C5336 + C5336 + C5111 * C896 + C5113 * C283 + C5337 + C5337 +
            C5110 * C303) *
               C50877 * C2289) *
              C50795 * C1094 +
          ((C5113 * C284 + C5338 + C5338 + C5110 * C304 + C5115 * C1562 +
            C5339 + C5339 + C5111 * C1570 + C5117 * C2640 + C5340 + C5340 +
            C5112 * C2646) *
               C50877 * C2289 +
           (C5371 + C5372 + C5373) * C50877 * C50739) *
              C50795 * C1095 -
          ((C5117 * C3603 + C6370 + C6370 + C5112 * C3607 + C5115 * C3171 +
            C6371 + C6371 + C5111 * C3177 + C5113 * C1100 + C6372 + C6372 +
            C5110 * C1108) *
               C50877 * C50739 +
           (C5117 * C3604 + C6373 + C6373 + C5112 * C3608 + C5115 * C3170 +
            C6374 + C6374 + C5111 * C3176 + C5113 * C1101 + C6375 + C6375 +
            C5110 * C1109) *
               C50877 * C2289) *
              C50795 * C1096) *
         C50760) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C5113 * C119 + C5120 + C5120 + C5110 * C133 + C5115 * C460 +
             C5121 + C5121 + C5111 * C480 + C5117 * C461 + C5122 + C5122 +
             C5112 * C481) *
                C50877 * C2289 +
            (C5171 + C5172 + C5173) * C50877 * C50739) *
               C454 -
           ((C5571 + C5572 + C5573) * C50877 * C50739 +
            (C5117 * C1846 + C5538 + C5538 + C5112 * C1854 + C5115 * C461 +
             C5539 + C5539 + C5111 * C481 + C5113 * C460 + C5540 + C5540 +
             C5110 * C480) *
                C50877 * C2289) *
               C455 +
           ((C5113 * C461 + C5541 + C5541 + C5110 * C481 + C5115 * C1846 +
             C5542 + C5542 + C5111 * C1854 + C5117 * C5519 + C5543 + C5543 +
             C5112 * C5525) *
                C50877 * C2289 +
            (C5574 + C5575 + C5576) * C50877 * C50739) *
               C456) *
              C1022 +
          (((C5113 * C886 + C6102 + C6102 + C5110 * C896 + C5115 * C1215 +
             C6103 + C6103 + C5111 * C1223 + C5117 * C4513 + C6104 + C6104 +
             C5112 * C4521) *
                C50877 * C2289 +
            (C6123 + C6124 + C6125) * C50877 * C50739) *
               C455 -
           ((C5368 + C5369 + C5370) * C50877 * C50739 +
            (C5117 * C1215 + C5335 + C5335 + C5112 * C1223 + C5115 * C886 +
             C5336 + C5336 + C5111 * C896 + C5113 * C283 + C5337 + C5337 +
             C5110 * C303) *
                C50877 * C2289) *
               C454 -
           ((C5117 * C6521 + C6528 + C6528 + C5112 * C6525 + C5115 * C4511 +
             C6529 + C6529 + C5111 * C4519 + C5113 * C1214 + C6530 + C6530 +
             C5110 * C1222) *
                C50877 * C50739 +
            (C5117 * C6522 + C6531 + C6531 + C5112 * C6526 + C5115 * C4513 +
             C6532 + C6532 + C5111 * C4521 + C5113 * C1215 + C6533 + C6533 +
             C5110 * C1223) *
                C50877 * C2289) *
               C456) *
              C50831) *
         C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50892 * C133) * C2286 +
              C2486 * C2287 + C2487 * C2288) *
                 C2289 +
             (C2292 + C2293 + C2294) * C50739) *
                C51004 -
            ((C2671 + C2652 + C2653) * C50739 +
             (C3197 * C2288 + C3198 * C2287 +
              (C117 * C460 + C497 + C497 + C50892 * C480) * C2286) *
                 C2289) *
                C50859) *
               C1022 +
           (((C3198 * C2286 + C3197 * C2287 +
              (C117 * C3170 + C3184 + C3184 + C50892 * C3176) * C2288) *
                 C2289 +
             (C3185 + C3186 + C3200) * C50739) *
                C50859 -
            ((C2492 + C2462 + C2463) * C50739 +
             (C2489 * C2288 + C2487 * C2287 + C2486 * C2286) * C2289) *
                C51004) *
               C50831) *
              C50995 +
          ((((C2653 + C2652 + C2671) * C2289 +
             (C2969 + C2970 + C2976) * C50739) *
                C50859 -
            ((C2295 + C2296 + C2297) * C50739 +
             (C2294 + C2293 + C2292) * C2289) *
                C51004) *
               C1022 +
           (((C2463 + C2462 + C2492) * C2289 +
             (C2820 + C2821 + C2822) * C50739) *
                C51004 -
            (((C117 * C3172 + C3190 + C3190 + C50892 * C3178) * C2288 +
              C2975 * C2287 + C920 * C2286) *
                 C50739 +
             (C3200 + C3186 + C3185) * C2289) *
                C50859) *
               C50831) *
              C50766)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C50877 * C107 +
             C173 * C108 + C174 * C109 + C175 * C110) *
                C51004 -
            (C528 * C110 + C529 * C109 + C530 * C108 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C50877 * C107) *
                C50859) *
               C1022 +
           (((C117 * C886 + C902 + C902 + C50892 * C896) * C50877 * C107 +
             C922 * C108 + C923 * C109 + C924 * C110) *
                C50859 -
            (C351 * C110 + C352 * C109 + C353 * C108 +
             (C117 * C283 + C320 + C320 + C50892 * C303) * C50877 * C107) *
                C51004) *
               C50831) *
              C50995 +
          (((C530 * C107 + C529 * C108 + C528 * C109 + C756 * C110) * C50859 -
            (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C51004) *
               C1022 +
           ((C353 * C107 + C352 * C108 + C351 * C109 + C646 * C110) * C51004 -
            ((C117 * C890 + C912 + C912 + C50892 * C900) * C50877 * C110 +
             C924 * C109 + C923 * C108 + C922 * C107) *
                C50859) *
               C50831) *
              C50766)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5113 * C119 + C5120 + C5120 + C5110 * C133 + C5115 * C460 +
              C5121 + C5121 + C5111 * C480 + C5117 * C461 + C5122 + C5122 +
              C5112 * C481) *
                 C50877 * C2289 +
             (C5171 + C5172 + C5173) * C50877 * C50739) *
                C51004 -
            ((C5571 + C5572 + C5573) * C50877 * C50739 +
             (C5117 * C1846 + C5538 + C5538 + C5112 * C1854 + C5115 * C461 +
              C5539 + C5539 + C5111 * C481 + C5113 * C460 + C5540 + C5540 +
              C5110 * C480) *
                 C50877 * C2289) *
                C50859) *
               C1022 +
           (((C5113 * C886 + C6102 + C6102 + C5110 * C896 + C5115 * C1215 +
              C6103 + C6103 + C5111 * C1223 + C5117 * C4513 + C6104 + C6104 +
              C5112 * C4521) *
                 C50877 * C2289 +
             (C6123 + C6124 + C6125) * C50877 * C50739) *
                C50859 -
            ((C5368 + C5369 + C5370) * C50877 * C50739 +
             (C5117 * C1215 + C5335 + C5335 + C5112 * C1223 + C5115 * C886 +
              C5336 + C5336 + C5111 * C896 + C5113 * C283 + C5337 + C5337 +
              C5110 * C303) *
                 C50877 * C2289) *
                C51004) *
               C50831) *
              C50995 +
          ((((C5573 + C5572 + C5571) * C50877 * C2289 +
             (C5902 + C5903 + C5904) * C50877 * C50739) *
                C50859 -
            ((C5174 + C5175 + C5176) * C50877 * C50739 +
             (C5173 + C5172 + C5171) * C50877 * C2289) *
                C51004) *
               C1022 +
           (((C5370 + C5369 + C5368) * C50877 * C2289 +
             (C5738 + C5739 + C5740) * C50877 * C50739) *
                C51004 -
            ((C5117 * C6098 + C6114 + C6114 + C5112 * C6100 + C5115 * C1213 +
              C6115 + C6115 + C5111 * C1221 + C5113 * C888 + C6116 + C6116 +
              C5110 * C898) *
                 C50877 * C50739 +
             (C6125 + C6124 + C6123) * C50877 * C2289) *
                C50859) *
               C50831) *
              C50766)) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50892 * C133) * C50877 * C107 +
           C173 * C108 + C174 * C109 + C175 * C110) *
              C50795 * C1093 -
          (C351 * C110 + C352 * C109 + C353 * C108 +
           (C117 * C283 + C320 + C320 + C50892 * C303) * C50877 * C107) *
              C50795 * C1094 +
          ((C117 * C284 + C321 + C321 + C50892 * C304) * C50877 * C107 +
           C354 * C108 + C355 * C109 + C356 * C110) *
              C50795 * C1095 -
          ((C117 * C1098 + C1111 + C1111 + C50892 * C1106) * C50877 * C110 +
           (C117 * C1099 + C1112 + C1112 + C50892 * C1107) * C50877 * C109 +
           (C117 * C1100 + C1113 + C1113 + C50892 * C1108) * C50877 * C108 +
           (C117 * C1101 + C1114 + C1114 + C50892 * C1109) * C50877 * C107) *
              C50795 * C1096) *
         C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C50877 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C50795 * C1022 -
           (C351 * C110 + C352 * C109 + C353 * C108 +
            (C117 * C283 + C320 + C320 + C50892 * C303) * C50877 * C107) *
               C50795 * C50831) *
              C1024 +
          ((C353 * C107 + C352 * C108 + C351 * C109 + C646 * C110) * C50795 *
               C50831 -
           (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C50795 *
               C1022) *
              C1025 +
          ((C174 * C107 + C175 * C108 + C176 * C109 + C177 * C110) * C50795 *
               C1022 -
           ((C117 * C636 + C642 + C642 + C50892 * C638) * C50877 * C110 +
            C646 * C109 + C351 * C108 + C352 * C107) *
               C50795 * C50831) *
              C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C2286 +
             C2486 * C2287 + C2487 * C2288) *
                C2289 +
            (C2292 + C2293 + C2294) * C50739) *
               C50795 * C1022 -
           ((C2492 + C2462 + C2463) * C50739 +
            (C2489 * C2288 + C2487 * C2287 + C2486 * C2286) * C2289) *
               C50795 * C50831) *
              C1024 +
          (((C2463 + C2462 + C2492) * C2289 +
            (C2820 + C2821 + C2822) * C50739) *
               C50795 * C50831 -
           ((C2295 + C2296 + C2297) * C50739 +
            (C2294 + C2293 + C2292) * C2289) *
               C50795 * C1022) *
              C1025 +
          (((C2297 + C2296 + C2295) * C2289 +
            (C2298 + C2299 + C2300) * C50739) *
               C50795 * C1022 -
           (((C117 * C1098 + C1111 + C1111 + C50892 * C1106) * C2288 +
             C350 * C2287 + C345 * C2286) *
                C50739 +
            (C2822 + C2821 + C2820) * C2289) *
               C50795 * C50831) *
              C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C2286 +
            C2486 * C2287 + C2487 * C2288) *
               C2289 +
           (C2292 + C2293 + C2294) * C50739) *
              C50795 * C1093 -
          ((C2492 + C2462 + C2463) * C50739 +
           (C2489 * C2288 + C2487 * C2287 + C2486 * C2286) * C2289) *
              C50795 * C1094 +
          ((C2487 * C2286 + C2489 * C2287 + C3457 * C2288) * C2289 +
           (C2467 + C2493 + C2494) * C50739) *
              C50795 * C1095 -
          (((C117 * C3444 + C3453 + C3453 + C50892 * C3448) * C2288 +
            C2490 * C2287 + C2488 * C2286) *
               C50739 +
           ((C117 * C3445 + C3454 + C3454 + C50892 * C3449) * C2288 +
            C3457 * C2287 + C2489 * C2286) *
               C2289) *
              C50795 * C1096) *
         C50760) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5113 * C119 + C5120 + C5120 + C5110 * C133 + C5115 * C460 +
             C5121 + C5121 + C5111 * C480 + C5117 * C461 + C5122 + C5122 +
             C5112 * C481) *
                C50877 * C2289 +
            (C5171 + C5172 + C5173) * C50877 * C50739) *
               C50795 * C1022 -
           ((C5368 + C5369 + C5370) * C50877 * C50739 +
            (C5117 * C1215 + C5335 + C5335 + C5112 * C1223 + C5115 * C886 +
             C5336 + C5336 + C5111 * C896 + C5113 * C283 + C5337 + C5337 +
             C5110 * C303) *
                C50877 * C2289) *
               C50795 * C50831) *
              C1024 +
          (((C5370 + C5369 + C5368) * C50877 * C2289 +
            (C5738 + C5739 + C5740) * C50877 * C50739) *
               C50795 * C50831 -
           ((C5174 + C5175 + C5176) * C50877 * C50739 +
            (C5173 + C5172 + C5171) * C50877 * C2289) *
               C50795 * C1022) *
              C1025 +
          (((C5176 + C5175 + C5174) * C50877 * C2289 +
            (C5177 + C5178 + C5179) * C50877 * C50739) *
               C50795 * C1022 -
           ((C5117 * C1212 + C5729 + C5729 + C5112 * C1220 + C5115 * C889 +
             C5730 + C5730 + C5111 * C899 + C5113 * C280 + C5731 + C5731 +
             C5110 * C300) *
                C50877 * C50739 +
            (C5740 + C5739 + C5738) * C50877 * C2289) *
               C50795 * C50831) *
              C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C5113 * C119 + C5120 + C5120 + C5110 * C133 + C5115 * C460 + C5121 +
            C5121 + C5111 * C480 + C5117 * C461 + C5122 + C5122 +
            C5112 * C481) *
               C50877 * C2289 +
           (C5171 + C5172 + C5173) * C50877 * C50739) *
              C50795 * C1093 -
          ((C5368 + C5369 + C5370) * C50877 * C50739 +
           (C5117 * C1215 + C5335 + C5335 + C5112 * C1223 + C5115 * C886 +
            C5336 + C5336 + C5111 * C896 + C5113 * C283 + C5337 + C5337 +
            C5110 * C303) *
               C50877 * C2289) *
              C50795 * C1094 +
          ((C5113 * C284 + C5338 + C5338 + C5110 * C304 + C5115 * C1562 +
            C5339 + C5339 + C5111 * C1570 + C5117 * C2640 + C5340 + C5340 +
            C5112 * C2646) *
               C50877 * C2289 +
           (C5371 + C5372 + C5373) * C50877 * C50739) *
              C50795 * C1095 -
          ((C5117 * C3603 + C6370 + C6370 + C5112 * C3607 + C5115 * C3171 +
            C6371 + C6371 + C5111 * C3177 + C5113 * C1100 + C6372 + C6372 +
            C5110 * C1108) *
               C50877 * C50739 +
           (C5117 * C3604 + C6373 + C6373 + C5112 * C3608 + C5115 * C3170 +
            C6374 + C6374 + C5111 * C3176 + C5113 * C1101 + C6375 + C6375 +
            C5110 * C1109) *
               C50877 * C2289) *
              C50795 * C1096) *
         C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50892 * C133) * C2286 +
              C2486 * C2287 + C2487 * C2288) *
                 C2289 +
             (C2292 + C2293 + C2294) * C50739) *
                C1673 -
            ((C2671 + C2652 + C2653) * C50739 +
             (C3197 * C2288 + C3198 * C2287 +
              (C117 * C460 + C497 + C497 + C50892 * C480) * C2286) *
                 C2289) *
                C50859) *
               C51003 +
           (((C3198 * C2286 + C3197 * C2287 + C4120 * C2288) * C2289 +
             (C3185 + C3186 + C3200) * C50739) *
                C50859 -
            ((C2492 + C2462 + C2463) * C50739 +
             (C2489 * C2288 + C2487 * C2287 + C2486 * C2286) * C2289) *
                C1673) *
               C50831) *
              C50995 +
          ((((C2653 + C2652 + C2671) * C2289 +
             (C2969 + C2970 + C2976) * C50739) *
                C50859 -
            ((C2295 + C2296 + C2297) * C50739 +
             (C2294 + C2293 + C2292) * C2289) *
                C1673) *
               C51003 +
           (((C2463 + C2462 + C2492) * C2289 +
             (C2820 + C2821 + C2822) * C50739) *
                C1673 -
            (((C117 * C3172 + C3190 + C3190 + C50892 * C3178) * C2288 +
              C2975 * C2287 + C920 * C2286) *
                 C50739 +
             (C3200 + C3186 + C3185) * C2289) *
                C50859) *
               C50831) *
              C50766)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C50877 * C107 +
             C173 * C108 + C174 * C109 + C175 * C110) *
                C1673 -
            (C528 * C110 + C529 * C109 + C530 * C108 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C50877 * C107) *
                C50859) *
               C51003 +
           (((C117 * C886 + C902 + C902 + C50892 * C896) * C50877 * C107 +
             C922 * C108 + C923 * C109 + C924 * C110) *
                C50859 -
            (C351 * C110 + C352 * C109 + C353 * C108 +
             (C117 * C283 + C320 + C320 + C50892 * C303) * C50877 * C107) *
                C1673) *
               C50831) *
              C50995 +
          (((C530 * C107 + C529 * C108 + C528 * C109 + C756 * C110) * C50859 -
            (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C1673) *
               C51003 +
           ((C353 * C107 + C352 * C108 + C351 * C109 + C646 * C110) * C1673 -
            ((C117 * C890 + C912 + C912 + C50892 * C900) * C50877 * C110 +
             C924 * C109 + C923 * C108 + C922 * C107) *
                C50859) *
               C50831) *
              C50766)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5113 * C119 + C5120 + C5120 + C5110 * C133 + C5115 * C460 +
              C5121 + C5121 + C5111 * C480 + C5117 * C461 + C5122 + C5122 +
              C5112 * C481) *
                 C50877 * C2289 +
             (C5171 + C5172 + C5173) * C50877 * C50739) *
                C1673 -
            ((C5571 + C5572 + C5573) * C50877 * C50739 +
             (C5117 * C1846 + C5538 + C5538 + C5112 * C1854 + C5115 * C461 +
              C5539 + C5539 + C5111 * C481 + C5113 * C460 + C5540 + C5540 +
              C5110 * C480) *
                 C50877 * C2289) *
                C50859) *
               C51003 +
           (((C5113 * C886 + C6102 + C6102 + C5110 * C896 + C5115 * C1215 +
              C6103 + C6103 + C5111 * C1223 + C5117 * C4513 + C6104 + C6104 +
              C5112 * C4521) *
                 C50877 * C2289 +
             (C6123 + C6124 + C6125) * C50877 * C50739) *
                C50859 -
            ((C5368 + C5369 + C5370) * C50877 * C50739 +
             (C5117 * C1215 + C5335 + C5335 + C5112 * C1223 + C5115 * C886 +
              C5336 + C5336 + C5111 * C896 + C5113 * C283 + C5337 + C5337 +
              C5110 * C303) *
                 C50877 * C2289) *
                C1673) *
               C50831) *
              C50995 +
          ((((C5573 + C5572 + C5571) * C50877 * C2289 +
             (C5902 + C5903 + C5904) * C50877 * C50739) *
                C50859 -
            ((C5174 + C5175 + C5176) * C50877 * C50739 +
             (C5173 + C5172 + C5171) * C50877 * C2289) *
                C1673) *
               C51003 +
           (((C5370 + C5369 + C5368) * C50877 * C2289 +
             (C5738 + C5739 + C5740) * C50877 * C50739) *
                C1673 -
            ((C5117 * C6098 + C6114 + C6114 + C5112 * C6100 + C5115 * C1213 +
              C6115 + C6115 + C5111 * C1221 + C5113 * C888 + C6116 + C6116 +
              C5110 * C898) *
                 C50877 * C50739 +
             (C6125 + C6124 + C6123) * C50877 * C2289) *
                C50859) *
               C50831) *
              C50766)) /
            (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C2286 +
             C2486 * C2287 + C2487 * C2288) *
                C2289 +
            (C2292 + C2293 + C2294) * C50739) *
               C51050 -
           ((C2671 + C2652 + C2653) * C50739 +
            (C3197 * C2288 + C3198 * C2287 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C2286) *
                C2289) *
               C51051 +
           (((C117 * C461 + C498 + C498 + C50892 * C481) * C2286 +
             C3620 * C2287 + C3621 * C2288) *
                C2289 +
            (C2655 + C2672 + C2673) * C50739) *
               C2089) *
              C51003 +
          (((C3198 * C2286 + C3197 * C2287 + C4120 * C2288) * C2289 +
            (C3185 + C3186 + C3200) * C50739) *
               C51051 -
           ((C2492 + C2462 + C2463) * C50739 +
            (C2489 * C2288 + C2487 * C2287 + C2486 * C2286) * C2289) *
               C51050 -
           (((C117 * C3603 + C3614 + C3614 + C50892 * C3607) * C2288 +
             C2670 * C2287 + C2669 * C2286) *
                C50739 +
            ((C117 * C3604 + C3615 + C3615 + C50892 * C3608) * C2288 +
             C3621 * C2287 + C3620 * C2286) *
                C2289) *
               C2089) *
              C50831) *
         C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C50877 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C51050 -
           (C528 * C110 + C529 * C109 + C530 * C108 +
            (C117 * C460 + C497 + C497 + C50892 * C480) * C50877 * C107) *
               C51051 +
           ((C117 * C461 + C498 + C498 + C50892 * C481) * C50877 * C107 +
            C531 * C108 + C532 * C109 + C533 * C110) *
               C2089) *
              C51003 +
          (((C117 * C886 + C902 + C902 + C50892 * C896) * C50877 * C107 +
            C922 * C108 + C923 * C109 + C924 * C110) *
               C51051 -
           (C351 * C110 + C352 * C109 + C353 * C108 +
            (C117 * C283 + C320 + C320 + C50892 * C303) * C50877 * C107) *
               C51050 -
           ((C117 * C1212 + C1225 + C1225 + C50892 * C1220) * C50877 * C110 +
            (C117 * C1213 + C1226 + C1226 + C50892 * C1221) * C50877 * C109 +
            (C117 * C1214 + C1227 + C1227 + C50892 * C1222) * C50877 * C108 +
            (C117 * C1215 + C1228 + C1228 + C50892 * C1223) * C50877 * C107) *
               C2089) *
              C50831) *
         C50760) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5113 * C119 + C5120 + C5120 + C5110 * C133 + C5115 * C460 +
             C5121 + C5121 + C5111 * C480 + C5117 * C461 + C5122 + C5122 +
             C5112 * C481) *
                C50877 * C2289 +
            (C5171 + C5172 + C5173) * C50877 * C50739) *
               C51050 -
           ((C5571 + C5572 + C5573) * C50877 * C50739 +
            (C5117 * C1846 + C5538 + C5538 + C5112 * C1854 + C5115 * C461 +
             C5539 + C5539 + C5111 * C481 + C5113 * C460 + C5540 + C5540 +
             C5110 * C480) *
                C50877 * C2289) *
               C51051 +
           ((C5113 * C461 + C5541 + C5541 + C5110 * C481 + C5115 * C1846 +
             C5542 + C5542 + C5111 * C1854 + C5117 * C5519 + C5543 + C5543 +
             C5112 * C5525) *
                C50877 * C2289 +
            (C5574 + C5575 + C5576) * C50877 * C50739) *
               C2089) *
              C51003 +
          (((C5113 * C886 + C6102 + C6102 + C5110 * C896 + C5115 * C1215 +
             C6103 + C6103 + C5111 * C1223 + C5117 * C4513 + C6104 + C6104 +
             C5112 * C4521) *
                C50877 * C2289 +
            (C6123 + C6124 + C6125) * C50877 * C50739) *
               C51051 -
           ((C5368 + C5369 + C5370) * C50877 * C50739 +
            (C5117 * C1215 + C5335 + C5335 + C5112 * C1223 + C5115 * C886 +
             C5336 + C5336 + C5111 * C896 + C5113 * C283 + C5337 + C5337 +
             C5110 * C303) *
                C50877 * C2289) *
               C51050 -
           ((C5117 * C6521 + C6528 + C6528 + C5112 * C6525 + C5115 * C4511 +
             C6529 + C6529 + C5111 * C4519 + C5113 * C1214 + C6530 + C6530 +
             C5110 * C1222) *
                C50877 * C50739 +
            (C5117 * C6522 + C6531 + C6531 + C5112 * C6526 + C5115 * C4513 +
             C6532 + C6532 + C5111 * C4521 + C5113 * C1215 + C6533 + C6533 +
             C5110 * C1223) *
                C50877 * C2289) *
               C2089) *
              C50831) *
         C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C141 + C141 + C50892 * C133) * C50877 * C107 +
                C173 * C108 + C174 * C109 + C175 * C110) *
                   C1673 -
               (C528 * C110 + C529 * C109 + C530 * C108 +
                (C117 * C460 + C497 + C497 + C50892 * C480) * C50877 * C107) *
                   C50859) *
                  C50779 * C1024 +
              ((C530 * C107 + C529 * C108 + C528 * C109 + C756 * C110) *
                   C50859 -
               (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) *
                   C1673) *
                  C50779 * C1025 +
              ((C174 * C107 + C175 * C108 + C176 * C109 + C177 * C110) * C1673 -
               ((C117 * C746 + C752 + C752 + C50892 * C748) * C50877 * C110 +
                C756 * C109 + C528 * C108 + C529 * C107) *
                   C50859) *
                  C50779 * C1026) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C141 + C141 + C50892 * C133) * C50877 * C107 +
                C173 * C108 + C174 * C109 + C175 * C110) *
                   C1673 -
               (C528 * C110 + C529 * C109 + C530 * C108 +
                (C117 * C460 + C497 + C497 + C50892 * C480) * C50877 * C107) *
                   C50859) *
                  C275 +
              (((C117 * C886 + C902 + C902 + C50892 * C896) * C50877 * C107 +
                C922 * C108 + C923 * C109 + C924 * C110) *
                   C50859 -
               (C351 * C110 + C352 * C109 + C353 * C108 +
                (C117 * C283 + C320 + C320 + C50892 * C303) * C50877 * C107) *
                   C1673) *
                  C276 +
              (((C117 * C284 + C321 + C321 + C50892 * C304) * C50877 * C107 +
                C354 * C108 + C355 * C109 + C356 * C110) *
                   C1673 -
               ((C117 * C1559 + C1572 + C1572 + C50892 * C1567) * C50877 *
                    C110 +
                (C117 * C1560 + C1573 + C1573 + C50892 * C1568) * C50877 *
                    C109 +
                (C117 * C1561 + C1574 + C1574 + C50892 * C1569) * C50877 *
                    C108 +
                (C117 * C1562 + C1575 + C1575 + C50892 * C1570) * C50877 *
                    C107) *
                   C50859) *
                  C277) *
             C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50892 * C133) * C50877 * C107 +
           C173 * C108 + C174 * C109 + C175 * C110) *
              C1839 -
          (C528 * C110 + C529 * C109 + C530 * C108 +
           (C117 * C460 + C497 + C497 + C50892 * C480) * C50877 * C107) *
              C1840 +
          ((C117 * C461 + C498 + C498 + C50892 * C481) * C50877 * C107 +
           C531 * C108 + C532 * C109 + C533 * C110) *
              C1841 -
          ((C117 * C1843 + C1856 + C1856 + C50892 * C1851) * C50877 * C110 +
           (C117 * C1844 + C1857 + C1857 + C50892 * C1852) * C50877 * C109 +
           (C117 * C1845 + C1858 + C1858 + C50892 * C1853) * C50877 * C108 +
           (C117 * C1846 + C1859 + C1859 + C50892 * C1854) * C50877 * C107) *
              C1842) *
         C50779 * C50760) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C2286 +
             C2486 * C2287 + C2487 * C2288) *
                C2289 +
            (C2292 + C2293 + C2294) * C50739) *
               C1673 -
           ((C2671 + C2652 + C2653) * C50739 +
            (C3197 * C2288 + C3198 * C2287 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C2286) *
                C2289) *
               C50859) *
              C50779 * C1024 +
          (((C2653 + C2652 + C2671) * C2289 +
            (C2969 + C2970 + C2976) * C50739) *
               C50859 -
           ((C2295 + C2296 + C2297) * C50739 +
            (C2294 + C2293 + C2292) * C2289) *
               C1673) *
              C50779 * C1025 +
          (((C2297 + C2296 + C2295) * C2289 +
            (C2298 + C2299 + C2300) * C50739) *
               C1673 -
           (((C117 * C1559 + C1572 + C1572 + C50892 * C1567) * C2288 +
             C921 * C2287 + C522 * C2286) *
                C50739 +
            (C2976 + C2970 + C2969) * C2289) *
               C50859) *
              C50779 * C1026)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C2286 +
             C2486 * C2287 + C2487 * C2288) *
                C2289 +
            (C2292 + C2293 + C2294) * C50739) *
               C1673 -
           ((C2671 + C2652 + C2653) * C50739 +
            (C3197 * C2288 + C3198 * C2287 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C2286) *
                C2289) *
               C50859) *
              C275 +
          (((C3198 * C2286 + C3197 * C2287 + C4120 * C2288) * C2289 +
            (C3185 + C3186 + C3200) * C50739) *
               C50859 -
           ((C2492 + C2462 + C2463) * C50739 +
            (C2489 * C2288 + C2487 * C2287 + C2486 * C2286) * C2289) *
               C1673) *
              C276 +
          (((C2487 * C2286 + C2489 * C2287 + C3457 * C2288) * C2289 +
            (C2467 + C2493 + C2494) * C50739) *
               C1673 -
           (((C117 * C4107 + C4116 + C4116 + C50892 * C4111) * C2288 +
             C3199 * C2287 + C2668 * C2286) *
                C50739 +
            ((C117 * C4108 + C4117 + C4117 + C50892 * C4112) * C2288 +
             C4120 * C2287 + C3197 * C2286) *
                C2289) *
               C50859) *
              C277) *
         C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C2286 +
            C2486 * C2287 + C2487 * C2288) *
               C2289 +
           (C2292 + C2293 + C2294) * C50739) *
              C1839 -
          ((C2671 + C2652 + C2653) * C50739 +
           (C3197 * C2288 + C3198 * C2287 +
            (C117 * C460 + C497 + C497 + C50892 * C480) * C2286) *
               C2289) *
              C1840 +
          (((C117 * C461 + C498 + C498 + C50892 * C481) * C2286 +
            C3620 * C2287 + C3621 * C2288) *
               C2289 +
           (C2655 + C2672 + C2673) * C50739) *
              C1841 -
          (((C117 * C4510 + C4523 + C4523 + C50892 * C4518) * C2288 +
            (C117 * C4511 + C4524 + C4524 + C50892 * C4519) * C2287 +
            (C117 * C1845 + C1858 + C1858 + C50892 * C1853) * C2286) *
               C50739 +
           ((C117 * C4512 + C4525 + C4525 + C50892 * C4520) * C2288 +
            (C117 * C4513 + C4526 + C4526 + C50892 * C4521) * C2287 +
            (C117 * C1846 + C1859 + C1859 + C50892 * C1854) * C2286) *
               C2289) *
              C1842) *
         C50779 * C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * ((((C5113 * C119 + C5120 + C5120 + C5110 * C133 +
                                 C5115 * C460 + C5121 + C5121 + C5111 * C480 +
                                 C5117 * C461 + C5122 + C5122 + C5112 * C481) *
                                    C50877 * C2289 +
                                (C5171 + C5172 + C5173) * C50877 * C50739) *
                                   C1673 -
                               ((C5571 + C5572 + C5573) * C50877 * C50739 +
                                (C5117 * C1846 + C5538 + C5538 + C5112 * C1854 +
                                 C5115 * C461 + C5539 + C5539 + C5111 * C481 +
                                 C5113 * C460 + C5540 + C5540 + C5110 * C480) *
                                    C50877 * C2289) *
                                   C50859) *
                                  C50779 * C1024 +
                              (((C5573 + C5572 + C5571) * C50877 * C2289 +
                                (C5902 + C5903 + C5904) * C50877 * C50739) *
                                   C50859 -
                               ((C5174 + C5175 + C5176) * C50877 * C50739 +
                                (C5173 + C5172 + C5171) * C50877 * C2289) *
                                   C1673) *
                                  C50779 * C1025 +
                              (((C5176 + C5175 + C5174) * C50877 * C2289 +
                                (C5177 + C5178 + C5179) * C50877 * C50739) *
                                   C1673 -
                               ((C5117 * C1843 + C5893 + C5893 + C5112 * C1851 +
                                 C5115 * C464 + C5894 + C5894 + C5111 * C484 +
                                 C5113 * C457 + C5895 + C5895 + C5110 * C477) *
                                    C50877 * C50739 +
                                (C5904 + C5903 + C5902) * C50877 * C2289) *
                                   C50859) *
                                  C50779 * C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5113 * C119 + C5120 + C5120 + C5110 * C133 + C5115 * C460 +
             C5121 + C5121 + C5111 * C480 + C5117 * C461 + C5122 + C5122 +
             C5112 * C481) *
                C50877 * C2289 +
            (C5171 + C5172 + C5173) * C50877 * C50739) *
               C1673 -
           ((C5571 + C5572 + C5573) * C50877 * C50739 +
            (C5117 * C1846 + C5538 + C5538 + C5112 * C1854 + C5115 * C461 +
             C5539 + C5539 + C5111 * C481 + C5113 * C460 + C5540 + C5540 +
             C5110 * C480) *
                C50877 * C2289) *
               C50859) *
              C275 +
          (((C5113 * C886 + C6102 + C6102 + C5110 * C896 + C5115 * C1215 +
             C6103 + C6103 + C5111 * C1223 + C5117 * C4513 + C6104 + C6104 +
             C5112 * C4521) *
                C50877 * C2289 +
            (C6123 + C6124 + C6125) * C50877 * C50739) *
               C50859 -
           ((C5368 + C5369 + C5370) * C50877 * C50739 +
            (C5117 * C1215 + C5335 + C5335 + C5112 * C1223 + C5115 * C886 +
             C5336 + C5336 + C5111 * C896 + C5113 * C283 + C5337 + C5337 +
             C5110 * C303) *
                C50877 * C2289) *
               C1673) *
              C276 +
          (((C5113 * C284 + C5338 + C5338 + C5110 * C304 + C5115 * C1562 +
             C5339 + C5339 + C5111 * C1570 + C5117 * C2640 + C5340 + C5340 +
             C5112 * C2646) *
                C50877 * C2289 +
            (C5371 + C5372 + C5373) * C50877 * C50739) *
               C1673 -
           ((C5117 * C4510 + C7020 + C7020 + C5112 * C4518 + C5115 * C2641 +
             C7021 + C7021 + C5111 * C2647 + C5113 * C1561 + C7022 + C7022 +
             C5110 * C1569) *
                C50877 * C50739 +
            (C5117 * C4512 + C7023 + C7023 + C5112 * C4520 + C5115 * C2640 +
             C7024 + C7024 + C5111 * C2646 + C5113 * C1562 + C7025 + C7025 +
             C5110 * C1570) *
                C50877 * C2289) *
               C50859) *
              C277) *
         C50760) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C5113 * C119 + C5120 + C5120 + C5110 * C133 + C5115 * C460 + C5121 +
            C5121 + C5111 * C480 + C5117 * C461 + C5122 + C5122 +
            C5112 * C481) *
               C50877 * C2289 +
           (C5171 + C5172 + C5173) * C50877 * C50739) *
              C1839 -
          ((C5571 + C5572 + C5573) * C50877 * C50739 +
           (C5117 * C1846 + C5538 + C5538 + C5112 * C1854 + C5115 * C461 +
            C5539 + C5539 + C5111 * C481 + C5113 * C460 + C5540 + C5540 +
            C5110 * C480) *
               C50877 * C2289) *
              C1840 +
          ((C5113 * C461 + C5541 + C5541 + C5110 * C481 + C5115 * C1846 +
            C5542 + C5542 + C5111 * C1854 + C5117 * C5519 + C5543 + C5543 +
            C5112 * C5525) *
               C50877 * C2289 +
           (C5574 + C5575 + C5576) * C50877 * C50739) *
              C1841 -
          ((C5117 * C7415 + C7422 + C7422 + C5112 * C7419 + C5115 * C5520 +
            C7423 + C7423 + C5111 * C5526 + C5113 * C1845 + C7424 + C7424 +
            C5110 * C1853) *
               C50877 * C50739 +
           (C5117 * C7416 + C7425 + C7425 + C5112 * C7420 + C5115 * C5519 +
            C7426 + C7426 + C5111 * C5525 + C5113 * C1846 + C7427 + C7427 +
            C5110 * C1854) *
               C50877 * C2289) *
              C1842) *
         C50779 * C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C2286 +
             C2486 * C2287 + C2487 * C2288) *
                C2289 +
            (C2292 + C2293 + C2294) * C50739) *
               C51050 -
           ((C2671 + C2652 + C2653) * C50739 +
            (C3197 * C2288 + C3198 * C2287 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C2286) *
                C2289) *
               C51051 +
           (((C117 * C461 + C498 + C498 + C50892 * C481) * C2286 +
             C3620 * C2287 + C3621 * C2288) *
                C2289 +
            (C2655 + C2672 + C2673) * C50739) *
               C2089) *
              C50779 * C50995 +
          (((C2653 + C2652 + C2671) * C2289 +
            (C2969 + C2970 + C2976) * C50739) *
               C51051 -
           ((C2295 + C2296 + C2297) * C50739 +
            (C2294 + C2293 + C2292) * C2289) *
               C51050 -
           (((C117 * C2642 + C2661 + C2661 + C50892 * C2648) * C2288 +
             (C117 * C1213 + C1226 + C1226 + C50892 * C1221) * C2287 +
             C526 * C2286) *
                C50739 +
            (C2673 + C2672 + C2655) * C2289) *
               C2089) *
              C50779 * C50766)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C50877 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C51050 -
           (C528 * C110 + C529 * C109 + C530 * C108 +
            (C117 * C460 + C497 + C497 + C50892 * C480) * C50877 * C107) *
               C51051 +
           ((C117 * C461 + C498 + C498 + C50892 * C481) * C50877 * C107 +
            C531 * C108 + C532 * C109 + C533 * C110) *
               C2089) *
              C50779 * C50995 +
          ((C530 * C107 + C529 * C108 + C528 * C109 + C756 * C110) * C51051 -
           (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C51050 -
           ((C117 * C466 + C509 + C509 + C50892 * C486) * C50877 * C110 +
            C533 * C109 + C532 * C108 + C531 * C107) *
               C2089) *
              C50779 * C50766)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5113 * C119 + C5120 + C5120 + C5110 * C133 + C5115 * C460 +
             C5121 + C5121 + C5111 * C480 + C5117 * C461 + C5122 + C5122 +
             C5112 * C481) *
                C50877 * C2289 +
            (C5171 + C5172 + C5173) * C50877 * C50739) *
               C51050 -
           ((C5571 + C5572 + C5573) * C50877 * C50739 +
            (C5117 * C1846 + C5538 + C5538 + C5112 * C1854 + C5115 * C461 +
             C5539 + C5539 + C5111 * C481 + C5113 * C460 + C5540 + C5540 +
             C5110 * C480) *
                C50877 * C2289) *
               C51051 +
           ((C5113 * C461 + C5541 + C5541 + C5110 * C481 + C5115 * C1846 +
             C5542 + C5542 + C5111 * C1854 + C5117 * C5519 + C5543 + C5543 +
             C5112 * C5525) *
                C50877 * C2289 +
            (C5574 + C5575 + C5576) * C50877 * C50739) *
               C2089) *
              C50779 * C50995 +
          (((C5573 + C5572 + C5571) * C50877 * C2289 +
            (C5902 + C5903 + C5904) * C50877 * C50739) *
               C51051 -
           ((C5174 + C5175 + C5176) * C50877 * C50739 +
            (C5173 + C5172 + C5171) * C50877 * C2289) *
               C51050 -
           ((C5117 * C5521 + C5556 + C5556 + C5112 * C5527 + C5115 * C1844 +
             C5557 + C5557 + C5111 * C1852 + C5113 * C463 + C5558 + C5558 +
             C5110 * C483) *
                C50877 * C50739 +
            (C5576 + C5575 + C5574) * C50877 * C2289) *
               C2089) *
              C50779 * C50766)) /
            (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C50877 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C1673 -
           (C528 * C110 + C529 * C109 + C530 * C108 +
            (C117 * C460 + C497 + C497 + C50892 * C480) * C50877 * C107) *
               C50859) *
              C275 +
          (((C117 * C886 + C902 + C902 + C50892 * C896) * C50877 * C107 +
            C922 * C108 + C923 * C109 + C924 * C110) *
               C50859 -
           (C351 * C110 + C352 * C109 + C353 * C108 +
            (C117 * C283 + C320 + C320 + C50892 * C303) * C50877 * C107) *
               C1673) *
              C276 +
          (((C117 * C284 + C321 + C321 + C50892 * C304) * C50877 * C107 +
            C354 * C108 + C355 * C109 + C356 * C110) *
               C1673 -
           ((C117 * C1559 + C1572 + C1572 + C50892 * C1567) * C50877 * C110 +
            (C117 * C1560 + C1573 + C1573 + C50892 * C1568) * C50877 * C109 +
            (C117 * C1561 + C1574 + C1574 + C50892 * C1569) * C50877 * C108 +
            (C117 * C1562 + C1575 + C1575 + C50892 * C1570) * C50877 * C107) *
               C50859) *
              C277) *
         C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C50877 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C1673 -
           (C528 * C110 + C529 * C109 + C530 * C108 +
            (C117 * C460 + C497 + C497 + C50892 * C480) * C50877 * C107) *
               C50859) *
              C50779 * C1024 +
          ((C530 * C107 + C529 * C108 + C528 * C109 + C756 * C110) * C50859 -
           (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C1673) *
              C50779 * C1025 +
          ((C174 * C107 + C175 * C108 + C176 * C109 + C177 * C110) * C1673 -
           ((C117 * C746 + C752 + C752 + C50892 * C748) * C50877 * C110 +
            C756 * C109 + C528 * C108 + C529 * C107) *
               C50859) *
              C50779 * C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C2286 +
             C2486 * C2287 + C2487 * C2288) *
                C2289 +
            (C2292 + C2293 + C2294) * C50739) *
               C1673 -
           ((C2671 + C2652 + C2653) * C50739 +
            (C3197 * C2288 + C3198 * C2287 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C2286) *
                C2289) *
               C50859) *
              C50779 * C1024 +
          (((C2653 + C2652 + C2671) * C2289 +
            (C2969 + C2970 + C2976) * C50739) *
               C50859 -
           ((C2295 + C2296 + C2297) * C50739 +
            (C2294 + C2293 + C2292) * C2289) *
               C1673) *
              C50779 * C1025 +
          (((C2297 + C2296 + C2295) * C2289 +
            (C2298 + C2299 + C2300) * C50739) *
               C1673 -
           (((C117 * C1559 + C1572 + C1572 + C50892 * C1567) * C2288 +
             C921 * C2287 + C522 * C2286) *
                C50739 +
            (C2976 + C2970 + C2969) * C2289) *
               C50859) *
              C50779 * C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C2286 +
             C2486 * C2287 + C2487 * C2288) *
                C2289 +
            (C2292 + C2293 + C2294) * C50739) *
               C1673 -
           ((C2671 + C2652 + C2653) * C50739 +
            (C3197 * C2288 + C3198 * C2287 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C2286) *
                C2289) *
               C50859) *
              C275 +
          (((C3198 * C2286 + C3197 * C2287 + C4120 * C2288) * C2289 +
            (C3185 + C3186 + C3200) * C50739) *
               C50859 -
           ((C2492 + C2462 + C2463) * C50739 +
            (C2489 * C2288 + C2487 * C2287 + C2486 * C2286) * C2289) *
               C1673) *
              C276 +
          (((C2487 * C2286 + C2489 * C2287 + C3457 * C2288) * C2289 +
            (C2467 + C2493 + C2494) * C50739) *
               C1673 -
           (((C117 * C4107 + C4116 + C4116 + C50892 * C4111) * C2288 +
             C3199 * C2287 + C2668 * C2286) *
                C50739 +
            ((C117 * C4108 + C4117 + C4117 + C50892 * C4112) * C2288 +
             C4120 * C2287 + C3197 * C2286) *
                C2289) *
               C50859) *
              C277) *
         C50760) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5113 * C119 + C5120 + C5120 + C5110 * C133 + C5115 * C460 +
             C5121 + C5121 + C5111 * C480 + C5117 * C461 + C5122 + C5122 +
             C5112 * C481) *
                C50877 * C2289 +
            (C5171 + C5172 + C5173) * C50877 * C50739) *
               C1673 -
           ((C5571 + C5572 + C5573) * C50877 * C50739 +
            (C5117 * C1846 + C5538 + C5538 + C5112 * C1854 + C5115 * C461 +
             C5539 + C5539 + C5111 * C481 + C5113 * C460 + C5540 + C5540 +
             C5110 * C480) *
                C50877 * C2289) *
               C50859) *
              C50779 * C1024 +
          (((C5573 + C5572 + C5571) * C50877 * C2289 +
            (C5902 + C5903 + C5904) * C50877 * C50739) *
               C50859 -
           ((C5174 + C5175 + C5176) * C50877 * C50739 +
            (C5173 + C5172 + C5171) * C50877 * C2289) *
               C1673) *
              C50779 * C1025 +
          (((C5176 + C5175 + C5174) * C50877 * C2289 +
            (C5177 + C5178 + C5179) * C50877 * C50739) *
               C1673 -
           ((C5117 * C1843 + C5893 + C5893 + C5112 * C1851 + C5115 * C464 +
             C5894 + C5894 + C5111 * C484 + C5113 * C457 + C5895 + C5895 +
             C5110 * C477) *
                C50877 * C50739 +
            (C5904 + C5903 + C5902) * C50877 * C2289) *
               C50859) *
              C50779 * C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5113 * C119 + C5120 + C5120 + C5110 * C133 + C5115 * C460 +
             C5121 + C5121 + C5111 * C480 + C5117 * C461 + C5122 + C5122 +
             C5112 * C481) *
                C50877 * C2289 +
            (C5171 + C5172 + C5173) * C50877 * C50739) *
               C1673 -
           ((C5571 + C5572 + C5573) * C50877 * C50739 +
            (C5117 * C1846 + C5538 + C5538 + C5112 * C1854 + C5115 * C461 +
             C5539 + C5539 + C5111 * C481 + C5113 * C460 + C5540 + C5540 +
             C5110 * C480) *
                C50877 * C2289) *
               C50859) *
              C275 +
          (((C5113 * C886 + C6102 + C6102 + C5110 * C896 + C5115 * C1215 +
             C6103 + C6103 + C5111 * C1223 + C5117 * C4513 + C6104 + C6104 +
             C5112 * C4521) *
                C50877 * C2289 +
            (C6123 + C6124 + C6125) * C50877 * C50739) *
               C50859 -
           ((C5368 + C5369 + C5370) * C50877 * C50739 +
            (C5117 * C1215 + C5335 + C5335 + C5112 * C1223 + C5115 * C886 +
             C5336 + C5336 + C5111 * C896 + C5113 * C283 + C5337 + C5337 +
             C5110 * C303) *
                C50877 * C2289) *
               C1673) *
              C276 +
          (((C5113 * C284 + C5338 + C5338 + C5110 * C304 + C5115 * C1562 +
             C5339 + C5339 + C5111 * C1570 + C5117 * C2640 + C5340 + C5340 +
             C5112 * C2646) *
                C50877 * C2289 +
            (C5371 + C5372 + C5373) * C50877 * C50739) *
               C1673 -
           ((C5117 * C4510 + C7020 + C7020 + C5112 * C4518 + C5115 * C2641 +
             C7021 + C7021 + C5111 * C2647 + C5113 * C1561 + C7022 + C7022 +
             C5110 * C1569) *
                C50877 * C50739 +
            (C5117 * C4512 + C7023 + C7023 + C5112 * C4520 + C5115 * C2640 +
             C7024 + C7024 + C5111 * C2646 + C5113 * C1562 + C7025 + C7025 +
             C5110 * C1570) *
                C50877 * C2289) *
               C50859) *
              C277) *
         C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[45] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C10688 * C119 + C10693 + C10693 + C51017 * C133 +
                     C10690 * C460 + C10694 + C10694 + C50956 * C480) *
                        C50877 * C51044 +
                    (C10737 + C10738) * C50877 * C51045 + C10747 * C8015) *
                       C50795 * C51003 -
                   (C11306 * C8015 + (C10945 + C10946) * C50877 * C51045 +
                    (C10690 * C886 + C10907 + C10907 + C50956 * C896 +
                     C10688 * C283 + C10908 + C10908 + C51017 * C303) *
                        C50877 * C51044) *
                       C50795 * C50831) *
                      C51046 +
                  (((C10946 + C10945) * C50877 * C51044 +
                    (C10944 + C10943) * C50877 * C51045 +
                    (C11311 + C11312) * C50877 * C8015) *
                       C50795 * C50831 -
                   (C10748 * C8015 + (C10740 + C10739) * C50877 * C51045 +
                    (C10738 + C10737) * C50877 * C51044) *
                       C50795 * C51003) *
                      C51047 +
                  ((C10747 * C51044 + (C10742 + C10741) * C50877 * C51045 +
                    (C10743 + C10744) * C50877 * C8015) *
                       C50795 * C51003 -
                   ((C10690 * C890 + C11304 + C11304 + C50956 * C900 +
                     C10688 * C288 + C11305 + C11305 + C51017 * C308) *
                        C50877 * C8015 +
                    (C11312 + C11311) * C50877 * C51045 + C11306 * C51044) *
                       C50795 * C50831) *
                      C635)) /
                (p * q * std::sqrt(p + q));
    d2ee[46] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C10688 * C119 + C10693 + C10693 + C51017 * C133 +
                      C10690 * C460 + C10694 + C10694 + C50956 * C480) *
                         C50877 * C51044 +
                     (C10737 + C10738) * C50877 * C51045 + C10747 * C8015) *
                        C51004 -
                    (C11466 * C8015 + (C11147 + C11148) * C50877 * C51045 +
                     (C10690 * C461 + C11109 + C11109 + C50956 * C481 +
                      C10688 * C460 + C11110 + C11110 + C51017 * C480) *
                         C50877 * C51044) *
                        C50859) *
                       C51003 +
                   (((C10688 * C886 + C11667 + C11667 + C51017 * C896 +
                      C10690 * C1215 + C11668 + C11668 + C50956 * C1223) *
                         C50877 * C51044 +
                     (C11691 + C11692) * C50877 * C51045 +
                     (C11693 + C11694) * C50877 * C8015) *
                        C50859 -
                    (C11306 * C8015 + (C10945 + C10946) * C50877 * C51045 +
                     (C10690 * C886 + C10907 + C10907 + C50956 * C896 +
                      C10688 * C283 + C10908 + C10908 + C51017 * C303) *
                         C50877 * C51044) *
                        C51004) *
                       C50831) *
                      C278 +
                  ((((C11148 + C11147) * C50877 * C51044 +
                     (C11146 + C11145) * C50877 * C51045 +
                     (C11471 + C11472) * C50877 * C8015) *
                        C50859 -
                    (C10748 * C8015 + (C10740 + C10739) * C50877 * C51045 +
                     (C10738 + C10737) * C50877 * C51044) *
                        C51004) *
                       C51003 +
                   (((C10946 + C10945) * C50877 * C51044 +
                     (C10944 + C10943) * C50877 * C51045 +
                     (C11311 + C11312) * C50877 * C8015) *
                        C51004 -
                    ((C10690 * C1212 + C11681 + C11681 + C50956 * C1220 +
                      C10688 * C889 + C11682 + C11682 + C51017 * C899) *
                         C50877 * C8015 +
                     (C11694 + C11693) * C50877 * C51045 +
                     (C11692 + C11691) * C50877 * C51044) *
                        C50859) *
                       C50831) *
                      C50766)) /
                (p * q * std::sqrt(p + q));
    d2ee[47] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C10688 * C119 + C10693 + C10693 + C51017 * C133 +
                     C10690 * C460 + C10694 + C10694 + C50956 * C480) *
                        C50877 * C51044 +
                    (C10737 + C10738) * C50877 * C51045 + C10747 * C8015) *
                       C50795 * C275 -
                   ((C10943 + C10944) * C50877 * C8015 +
                    (C10945 + C10946) * C50877 * C51045 +
                    (C10690 * C886 + C10907 + C10907 + C50956 * C896 +
                     C10688 * C283 + C10908 + C10908 + C51017 * C303) *
                        C50877 * C51044) *
                       C50795 * C276 +
                   ((C10688 * C284 + C10909 + C10909 + C51017 * C304 +
                     C10690 * C1562 + C10910 + C10910 + C50956 * C1570) *
                        C50877 * C51044 +
                    (C10947 + C10948) * C50877 * C51045 +
                    (C10949 + C10950) * C50877 * C8015) *
                       C50795 * C277) *
                      C278 +
                  (((C10946 + C10945) * C50877 * C51044 +
                    (C10944 + C10943) * C50877 * C51045 +
                    (C10688 * C280 + C10923 + C10923 + C51017 * C300 +
                     C10690 * C889 + C10924 + C10924 + C50956 * C899) *
                        C50877 * C8015) *
                       C50795 * C276 -
                   (C10748 * C8015 + (C10740 + C10739) * C50877 * C51045 +
                    (C10738 + C10737) * C50877 * C51044) *
                       C50795 * C275 -
                   ((C10690 * C1559 + C10925 + C10925 + C50956 * C1567 +
                     C10688 * C287 + C10926 + C10926 + C51017 * C307) *
                        C50877 * C8015 +
                    (C10950 + C10949) * C50877 * C51045 +
                    (C10948 + C10947) * C50877 * C51044) *
                       C50795 * C277) *
                      C50766)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((C10688 * C119 + C10693 + C10693 + C51017 * C133 +
                    C10690 * C460 + C10694 + C10694 + C50956 * C480) *
                       C50877 * C51044 +
                   (C10737 + C10738) * C50877 * C51045 + C10747 * C8015) *
                      C50795 * C50779 * C113 -
                  (C10748 * C8015 + (C10740 + C10739) * C50877 * C51045 +
                   (C10738 + C10737) * C50877 * C51044) *
                      C50795 * C50779 * C114 +
                  (C10747 * C51044 + (C10742 + C10741) * C50877 * C51045 +
                   (C10743 + C10744) * C50877 * C8015) *
                      C50795 * C50779 * C115 -
                  ((C10690 * C746 + C10719 + C10719 + C50956 * C748 +
                    C10688 * C124 + C10720 + C10720 + C51017 * C138) *
                       C50877 * C8015 +
                   (C10744 + C10743) * C50877 * C51045 + C10748 * C51044) *
                      C50795 * C50779 * C116)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C10688 * C119 + C10693 + C10693 + C51017 * C133 +
                     C10690 * C460 + C10694 + C10694 + C50956 * C480) *
                        C50877 * C51044 +
                    (C10737 + C10738) * C50877 * C51045 + C10747 * C8015) *
                       C454 -
                   ((C11145 + C11146) * C50877 * C8015 +
                    (C11147 + C11148) * C50877 * C51045 +
                    (C10690 * C461 + C11109 + C11109 + C50956 * C481 +
                     C10688 * C460 + C11110 + C11110 + C51017 * C480) *
                        C50877 * C51044) *
                       C455 +
                   ((C10688 * C461 + C11111 + C11111 + C51017 * C481 +
                     C10690 * C1846 + C11112 + C11112 + C50956 * C1854) *
                        C50877 * C51044 +
                    (C11149 + C11150) * C50877 * C51045 +
                    (C11151 + C11152) * C50877 * C8015) *
                       C456) *
                      C50779 * C278 +
                  (((C11148 + C11147) * C50877 * C51044 +
                    (C11146 + C11145) * C50877 * C51045 +
                    (C10688 * C457 + C11125 + C11125 + C51017 * C477 +
                     C10690 * C464 + C11126 + C11126 + C50956 * C484) *
                        C50877 * C8015) *
                       C455 -
                   (C10748 * C8015 + (C10740 + C10739) * C50877 * C51045 +
                    (C10738 + C10737) * C50877 * C51044) *
                       C454 -
                   ((C10690 * C1843 + C11127 + C11127 + C50956 * C1851 +
                     C10688 * C464 + C11128 + C11128 + C51017 * C484) *
                        C50877 * C8015 +
                    (C11152 + C11151) * C50877 * C51045 +
                    (C11150 + C11149) * C50877 * C51044) *
                       C456) *
                      C50779 * C50766)) /
                    (p * q * std::sqrt(p + q));
    d2ee[48] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C10688 * C119 + C10693 + C10693 + C51017 * C133 +
                     C10690 * C460 + C10694 + C10694 + C50956 * C480) *
                        C50877 * C51044 +
                    (C10737 + C10738) * C50877 * C51045 + C10747 * C8015) *
                       C51004 -
                   (C11466 * C8015 + (C11147 + C11148) * C50877 * C51045 +
                    (C10690 * C461 + C11109 + C11109 + C50956 * C481 +
                     C10688 * C460 + C11110 + C11110 + C51017 * C480) *
                        C50877 * C51044) *
                       C50859) *
                      C50779 * C51046 +
                  (((C11148 + C11147) * C50877 * C51044 +
                    (C11146 + C11145) * C50877 * C51045 +
                    (C11471 + C11472) * C50877 * C8015) *
                       C50859 -
                   (C10748 * C8015 + (C10740 + C10739) * C50877 * C51045 +
                    (C10738 + C10737) * C50877 * C51044) *
                       C51004) *
                      C50779 * C51047 +
                  ((C10747 * C51044 + (C10742 + C10741) * C50877 * C51045 +
                    (C10743 + C10744) * C50877 * C8015) *
                       C51004 -
                   ((C10690 * C466 + C11464 + C11464 + C50956 * C486 +
                     C10688 * C465 + C11465 + C11465 + C51017 * C485) *
                        C50877 * C8015 +
                    (C11472 + C11471) * C50877 * C51045 + C11466 * C51044) *
                       C50859) *
                      C50779 * C635)) /
                (p * q * std::sqrt(p + q));
    d2ee[49] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((C10688 * C119 + C10693 + C10693 + C51017 * C133 +
                    C10690 * C460 + C10694 + C10694 + C50956 * C480) *
                       C50877 * C51044 +
                   (C10737 + C10738) * C50877 * C51045 + C10747 * C8015) *
                      C50795 * C50779 * C113 -
                  (C10748 * C8015 + (C10740 + C10739) * C50877 * C51045 +
                   (C10738 + C10737) * C50877 * C51044) *
                      C50795 * C50779 * C114 +
                  (C10747 * C51044 + (C10742 + C10741) * C50877 * C51045 +
                   (C10743 + C10744) * C50877 * C8015) *
                      C50795 * C50779 * C115 -
                  ((C10690 * C746 + C10719 + C10719 + C50956 * C748 +
                    C10688 * C124 + C10720 + C10720 + C51017 * C138) *
                       C50877 * C8015 +
                   (C10744 + C10743) * C50877 * C51045 + C10748 * C51044) *
                      C50795 * C50779 * C116)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C10688 * C119 + C10693 + C10693 + C51017 * C133 +
                     C10690 * C460 + C10694 + C10694 + C50956 * C480) *
                        C50877 * C51044 +
                    (C10737 + C10738) * C50877 * C51045 + C10747 * C8015) *
                       C50795 * C275 -
                   ((C10943 + C10944) * C50877 * C8015 +
                    (C10945 + C10946) * C50877 * C51045 +
                    (C10690 * C886 + C10907 + C10907 + C50956 * C896 +
                     C10688 * C283 + C10908 + C10908 + C51017 * C303) *
                        C50877 * C51044) *
                       C50795 * C276 +
                   ((C10688 * C284 + C10909 + C10909 + C51017 * C304 +
                     C10690 * C1562 + C10910 + C10910 + C50956 * C1570) *
                        C50877 * C51044 +
                    (C10947 + C10948) * C50877 * C51045 +
                    (C10949 + C10950) * C50877 * C8015) *
                       C50795 * C277) *
                      C278 +
                  (((C10946 + C10945) * C50877 * C51044 +
                    (C10944 + C10943) * C50877 * C51045 +
                    (C10688 * C280 + C10923 + C10923 + C51017 * C300 +
                     C10690 * C889 + C10924 + C10924 + C50956 * C899) *
                        C50877 * C8015) *
                       C50795 * C276 -
                   (C10748 * C8015 + (C10740 + C10739) * C50877 * C51045 +
                    (C10738 + C10737) * C50877 * C51044) *
                       C50795 * C275 -
                   ((C10690 * C1559 + C10925 + C10925 + C50956 * C1567 +
                     C10688 * C287 + C10926 + C10926 + C51017 * C307) *
                        C50877 * C8015 +
                    (C10950 + C10949) * C50877 * C51045 +
                    (C10948 + C10947) * C50877 * C51044) *
                       C50795 * C277) *
                      C50766)) /
                    (p * q * std::sqrt(p + q));
    d2ee[50] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C10688 * C119 + C10693 + C10693 + C51017 * C133 +
                     C10690 * C460 + C10694 + C10694 + C50956 * C480) *
                        C50877 * C51044 +
                    (C10737 + C10738) * C50877 * C51045 + C10747 * C8015) *
                       C50795 * C51048 -
                   (C11306 * C8015 + (C10945 + C10946) * C50877 * C51045 +
                    (C10690 * C886 + C10907 + C10907 + C50956 * C896 +
                     C10688 * C283 + C10908 + C10908 + C51017 * C303) *
                        C50877 * C51044) *
                       C50795 * C51049 +
                   ((C10688 * C284 + C10909 + C10909 + C51017 * C304 +
                     C10690 * C1562 + C10910 + C10910 + C50956 * C1570) *
                        C50877 * C51044 +
                    (C10947 + C10948) * C50877 * C51045 +
                    (C10949 + C10950) * C50877 * C8015) *
                       C50795 * C1328) *
                      C50995 +
                  (((C10946 + C10945) * C50877 * C51044 +
                    (C10944 + C10943) * C50877 * C51045 +
                    (C11311 + C11312) * C50877 * C8015) *
                       C50795 * C51049 -
                   (C10748 * C8015 + (C10740 + C10739) * C50877 * C51045 +
                    (C10738 + C10737) * C50877 * C51044) *
                       C50795 * C51048 -
                   ((C10690 * C1559 + C10925 + C10925 + C50956 * C1567 +
                     C10688 * C287 + C10926 + C10926 + C51017 * C307) *
                        C50877 * C8015 +
                    (C10950 + C10949) * C50877 * C51045 +
                    (C10948 + C10947) * C50877 * C51044) *
                       C50795 * C1328) *
                      C50766)) /
                (p * q * std::sqrt(p + q));
    d2ee[51] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C10688 * C119 + C10693 + C10693 + C51017 * C133 +
                     C10690 * C460 + C10694 + C10694 + C50956 * C480) *
                        C50877 * C51044 +
                    (C10737 + C10738) * C50877 * C51045 + C10747 * C8015) *
                       C51004 -
                   (C11466 * C8015 + (C11147 + C11148) * C50877 * C51045 +
                    (C10690 * C461 + C11109 + C11109 + C50956 * C481 +
                     C10688 * C460 + C11110 + C11110 + C51017 * C480) *
                        C50877 * C51044) *
                       C50859) *
                      C51048 +
                  (((C10688 * C886 + C11667 + C11667 + C51017 * C896 +
                     C10690 * C1215 + C11668 + C11668 + C50956 * C1223) *
                        C50877 * C51044 +
                    (C11691 + C11692) * C50877 * C51045 +
                    (C11693 + C11694) * C50877 * C8015) *
                       C50859 -
                   (C11306 * C8015 + (C10945 + C10946) * C50877 * C51045 +
                    (C10690 * C886 + C10907 + C10907 + C50956 * C896 +
                     C10688 * C283 + C10908 + C10908 + C51017 * C303) *
                        C50877 * C51044) *
                       C51004) *
                      C51049 +
                  (((C10688 * C284 + C10909 + C10909 + C51017 * C304 +
                     C10690 * C1562 + C10910 + C10910 + C50956 * C1570) *
                        C50877 * C51044 +
                    (C10947 + C10948) * C50877 * C51045 +
                    (C10949 + C10950) * C50877 * C8015) *
                       C51004 -
                   ((C10690 * C2642 + C12583 + C12583 + C50956 * C2648 +
                     C10688 * C1560 + C12584 + C12584 + C51017 * C1568) *
                        C50877 * C8015 +
                    (C10690 * C2641 + C12585 + C12585 + C50956 * C2647 +
                     C10688 * C1561 + C12586 + C12586 + C51017 * C1569) *
                        C50877 * C51045 +
                    (C10690 * C2640 + C12587 + C12587 + C50956 * C2646 +
                     C10688 * C1562 + C12588 + C12588 + C51017 * C1570) *
                        C50877 * C51044) *
                       C50859) *
                      C1328) *
                 C50760) /
                (p * q * std::sqrt(p + q));
    d2ee[52] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((C10688 * C119 + C10693 + C10693 + C51017 * C133 +
                    C10690 * C460 + C10694 + C10694 + C50956 * C480) *
                       C50877 * C51044 +
                   (C10737 + C10738) * C50877 * C51045 + C10747 * C8015) *
                      C50795 * C1093 -
                  (C11306 * C8015 + (C10945 + C10946) * C50877 * C51045 +
                   (C10690 * C886 + C10907 + C10907 + C50956 * C896 +
                    C10688 * C283 + C10908 + C10908 + C51017 * C303) *
                       C50877 * C51044) *
                      C50795 * C1094 +
                  ((C10688 * C284 + C10909 + C10909 + C51017 * C304 +
                    C10690 * C1562 + C10910 + C10910 + C50956 * C1570) *
                       C50877 * C51044 +
                   (C10947 + C10948) * C50877 * C51045 +
                   (C10949 + C10950) * C50877 * C8015) *
                      C50795 * C1095 -
                  ((C10690 * C3172 + C11939 + C11939 + C50956 * C3178 +
                    C10688 * C1099 + C11940 + C11940 + C51017 * C1107) *
                       C50877 * C8015 +
                   (C10690 * C3171 + C11941 + C11941 + C50956 * C3177 +
                    C10688 * C1100 + C11942 + C11942 + C51017 * C1108) *
                       C50877 * C51045 +
                   (C10690 * C3170 + C11943 + C11943 + C50956 * C3176 +
                    C10688 * C1101 + C11944 + C11944 + C51017 * C1109) *
                       C50877 * C51044) *
                      C50795 * C1096) *
                 C50760) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C10688 * C119 + C10693 + C10693 + C51017 * C133 +
                     C10690 * C460 + C10694 + C10694 + C50956 * C480) *
                        C50877 * C51044 +
                    (C10737 + C10738) * C50877 * C51045 + C10747 * C8015) *
                       C50795 * C1022 -
                   (C11306 * C8015 + (C10945 + C10946) * C50877 * C51045 +
                    (C10690 * C886 + C10907 + C10907 + C50956 * C896 +
                     C10688 * C283 + C10908 + C10908 + C51017 * C303) *
                        C50877 * C51044) *
                       C50795 * C50831) *
                      C1024 +
                  (((C10946 + C10945) * C50877 * C51044 +
                    (C10944 + C10943) * C50877 * C51045 +
                    (C11311 + C11312) * C50877 * C8015) *
                       C50795 * C50831 -
                   (C10748 * C8015 + (C10740 + C10739) * C50877 * C51045 +
                    (C10738 + C10737) * C50877 * C51044) *
                       C50795 * C1022) *
                      C1025 +
                  ((C10747 * C51044 + (C10742 + C10741) * C50877 * C51045 +
                    (C10743 + C10744) * C50877 * C8015) *
                       C50795 * C1022 -
                   ((C10690 * C890 + C11304 + C11304 + C50956 * C900 +
                     C10688 * C288 + C11305 + C11305 + C51017 * C308) *
                        C50877 * C8015 +
                    (C11312 + C11311) * C50877 * C51045 + C11306 * C51044) *
                       C50795 * C50831) *
                      C1026)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C10688 * C119 + C10693 + C10693 + C51017 * C133 +
                     C10690 * C460 + C10694 + C10694 + C50956 * C480) *
                        C50877 * C51044 +
                    (C10737 + C10738) * C50877 * C51045 + C10747 * C8015) *
                       C454 -
                   (C11466 * C8015 + (C11147 + C11148) * C50877 * C51045 +
                    (C10690 * C461 + C11109 + C11109 + C50956 * C481 +
                     C10688 * C460 + C11110 + C11110 + C51017 * C480) *
                        C50877 * C51044) *
                       C455 +
                   ((C10688 * C461 + C11111 + C11111 + C51017 * C481 +
                     C10690 * C1846 + C11112 + C11112 + C50956 * C1854) *
                        C50877 * C51044 +
                    (C11149 + C11150) * C50877 * C51045 +
                    (C11151 + C11152) * C50877 * C8015) *
                       C456) *
                      C1022 +
                  (((C10688 * C886 + C11667 + C11667 + C51017 * C896 +
                     C10690 * C1215 + C11668 + C11668 + C50956 * C1223) *
                        C50877 * C51044 +
                    (C11691 + C11692) * C50877 * C51045 +
                    (C11693 + C11694) * C50877 * C8015) *
                       C455 -
                   (C11306 * C8015 + (C10945 + C10946) * C50877 * C51045 +
                    (C10690 * C886 + C10907 + C10907 + C50956 * C896 +
                     C10688 * C283 + C10908 + C10908 + C51017 * C303) *
                        C50877 * C51044) *
                       C454 -
                   ((C10690 * C6098 + C12091 + C12091 + C50956 * C6100 +
                     C10688 * C1213 + C12092 + C12092 + C51017 * C1221) *
                        C50877 * C8015 +
                    (C10690 * C4511 + C12093 + C12093 + C50956 * C4519 +
                     C10688 * C1214 + C12094 + C12094 + C51017 * C1222) *
                        C50877 * C51045 +
                    (C10690 * C4513 + C12095 + C12095 + C50956 * C4521 +
                     C10688 * C1215 + C12096 + C12096 + C51017 * C1223) *
                        C50877 * C51044) *
                       C456) *
                      C50831) *
                 C50760) /
                    (p * q * std::sqrt(p + q));
    d2ee[53] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C10688 * C119 + C10693 + C10693 + C51017 * C133 +
                      C10690 * C460 + C10694 + C10694 + C50956 * C480) *
                         C50877 * C51044 +
                     (C10737 + C10738) * C50877 * C51045 + C10747 * C8015) *
                        C51004 -
                    (C11466 * C8015 + (C11147 + C11148) * C50877 * C51045 +
                     (C10690 * C461 + C11109 + C11109 + C50956 * C481 +
                      C10688 * C460 + C11110 + C11110 + C51017 * C480) *
                         C50877 * C51044) *
                        C50859) *
                       C1022 +
                   (((C10688 * C886 + C11667 + C11667 + C51017 * C896 +
                      C10690 * C1215 + C11668 + C11668 + C50956 * C1223) *
                         C50877 * C51044 +
                     (C11691 + C11692) * C50877 * C51045 +
                     (C11693 + C11694) * C50877 * C8015) *
                        C50859 -
                    (C11306 * C8015 + (C10945 + C10946) * C50877 * C51045 +
                     (C10690 * C886 + C10907 + C10907 + C50956 * C896 +
                      C10688 * C283 + C10908 + C10908 + C51017 * C303) *
                         C50877 * C51044) *
                        C51004) *
                       C50831) *
                      C50995 +
                  ((((C11148 + C11147) * C50877 * C51044 +
                     (C11146 + C11145) * C50877 * C51045 +
                     (C11471 + C11472) * C50877 * C8015) *
                        C50859 -
                    (C10748 * C8015 + (C10740 + C10739) * C50877 * C51045 +
                     (C10738 + C10737) * C50877 * C51044) *
                        C51004) *
                       C1022 +
                   (((C10946 + C10945) * C50877 * C51044 +
                     (C10944 + C10943) * C50877 * C51045 +
                     (C11311 + C11312) * C50877 * C8015) *
                        C51004 -
                    ((C10690 * C1212 + C11681 + C11681 + C50956 * C1220 +
                      C10688 * C889 + C11682 + C11682 + C51017 * C899) *
                         C50877 * C8015 +
                     (C11694 + C11693) * C50877 * C51045 +
                     (C11692 + C11691) * C50877 * C51044) *
                        C50859) *
                       C50831) *
                      C50766)) /
                (p * q * std::sqrt(p + q));
    d2ee[54] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C10688 * C119 + C10693 + C10693 + C51017 * C133 +
                     C10690 * C460 + C10694 + C10694 + C50956 * C480) *
                        C50877 * C51044 +
                    (C10737 + C10738) * C50877 * C51045 + C10747 * C8015) *
                       C50795 * C1022 -
                   (C11306 * C8015 + (C10945 + C10946) * C50877 * C51045 +
                    (C10690 * C886 + C10907 + C10907 + C50956 * C896 +
                     C10688 * C283 + C10908 + C10908 + C51017 * C303) *
                        C50877 * C51044) *
                       C50795 * C50831) *
                      C1024 +
                  (((C10946 + C10945) * C50877 * C51044 +
                    (C10944 + C10943) * C50877 * C51045 +
                    (C11311 + C11312) * C50877 * C8015) *
                       C50795 * C50831 -
                   (C10748 * C8015 + (C10740 + C10739) * C50877 * C51045 +
                    (C10738 + C10737) * C50877 * C51044) *
                       C50795 * C1022) *
                      C1025 +
                  ((C10747 * C51044 + (C10742 + C10741) * C50877 * C51045 +
                    (C10743 + C10744) * C50877 * C8015) *
                       C50795 * C1022 -
                   ((C10690 * C890 + C11304 + C11304 + C50956 * C900 +
                     C10688 * C288 + C11305 + C11305 + C51017 * C308) *
                        C50877 * C8015 +
                    (C11312 + C11311) * C50877 * C51045 + C11306 * C51044) *
                       C50795 * C50831) *
                      C1026)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((C10688 * C119 + C10693 + C10693 + C51017 * C133 +
                    C10690 * C460 + C10694 + C10694 + C50956 * C480) *
                       C50877 * C51044 +
                   (C10737 + C10738) * C50877 * C51045 + C10747 * C8015) *
                      C50795 * C1093 -
                  (C11306 * C8015 + (C10945 + C10946) * C50877 * C51045 +
                   (C10690 * C886 + C10907 + C10907 + C50956 * C896 +
                    C10688 * C283 + C10908 + C10908 + C51017 * C303) *
                       C50877 * C51044) *
                      C50795 * C1094 +
                  ((C10688 * C284 + C10909 + C10909 + C51017 * C304 +
                    C10690 * C1562 + C10910 + C10910 + C50956 * C1570) *
                       C50877 * C51044 +
                   (C10947 + C10948) * C50877 * C51045 +
                   (C10949 + C10950) * C50877 * C8015) *
                      C50795 * C1095 -
                  ((C10690 * C3172 + C11939 + C11939 + C50956 * C3178 +
                    C10688 * C1099 + C11940 + C11940 + C51017 * C1107) *
                       C50877 * C8015 +
                   (C10690 * C3171 + C11941 + C11941 + C50956 * C3177 +
                    C10688 * C1100 + C11942 + C11942 + C51017 * C1108) *
                       C50877 * C51045 +
                   (C10690 * C3170 + C11943 + C11943 + C50956 * C3176 +
                    C10688 * C1101 + C11944 + C11944 + C51017 * C1109) *
                       C50877 * C51044) *
                      C50795 * C1096) *
                 C50760) /
                    (p * q * std::sqrt(p + q));
    d2ee[55] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C10688 * C119 + C10693 + C10693 + C51017 * C133 +
                      C10690 * C460 + C10694 + C10694 + C50956 * C480) *
                         C50877 * C51044 +
                     (C10737 + C10738) * C50877 * C51045 + C10747 * C8015) *
                        C1673 -
                    (C11466 * C8015 + (C11147 + C11148) * C50877 * C51045 +
                     (C10690 * C461 + C11109 + C11109 + C50956 * C481 +
                      C10688 * C460 + C11110 + C11110 + C51017 * C480) *
                         C50877 * C51044) *
                        C50859) *
                       C51003 +
                   (((C10688 * C886 + C11667 + C11667 + C51017 * C896 +
                      C10690 * C1215 + C11668 + C11668 + C50956 * C1223) *
                         C50877 * C51044 +
                     (C11691 + C11692) * C50877 * C51045 +
                     (C11693 + C11694) * C50877 * C8015) *
                        C50859 -
                    (C11306 * C8015 + (C10945 + C10946) * C50877 * C51045 +
                     (C10690 * C886 + C10907 + C10907 + C50956 * C896 +
                      C10688 * C283 + C10908 + C10908 + C51017 * C303) *
                         C50877 * C51044) *
                        C1673) *
                       C50831) *
                      C50995 +
                  ((((C11148 + C11147) * C50877 * C51044 +
                     (C11146 + C11145) * C50877 * C51045 +
                     (C11471 + C11472) * C50877 * C8015) *
                        C50859 -
                    (C10748 * C8015 + (C10740 + C10739) * C50877 * C51045 +
                     (C10738 + C10737) * C50877 * C51044) *
                        C1673) *
                       C51003 +
                   (((C10946 + C10945) * C50877 * C51044 +
                     (C10944 + C10943) * C50877 * C51045 +
                     (C11311 + C11312) * C50877 * C8015) *
                        C1673 -
                    ((C10690 * C1212 + C11681 + C11681 + C50956 * C1220 +
                      C10688 * C889 + C11682 + C11682 + C51017 * C899) *
                         C50877 * C8015 +
                     (C11694 + C11693) * C50877 * C51045 +
                     (C11692 + C11691) * C50877 * C51044) *
                        C50859) *
                       C50831) *
                      C50766)) /
                (p * q * std::sqrt(p + q));
    d2ee[56] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C10688 * C119 + C10693 + C10693 + C51017 * C133 +
                     C10690 * C460 + C10694 + C10694 + C50956 * C480) *
                        C50877 * C51044 +
                    (C10737 + C10738) * C50877 * C51045 + C10747 * C8015) *
                       C51050 -
                   (C11466 * C8015 + (C11147 + C11148) * C50877 * C51045 +
                    (C10690 * C461 + C11109 + C11109 + C50956 * C481 +
                     C10688 * C460 + C11110 + C11110 + C51017 * C480) *
                        C50877 * C51044) *
                       C51051 +
                   ((C10688 * C461 + C11111 + C11111 + C51017 * C481 +
                     C10690 * C1846 + C11112 + C11112 + C50956 * C1854) *
                        C50877 * C51044 +
                    (C11149 + C11150) * C50877 * C51045 +
                    (C11151 + C11152) * C50877 * C8015) *
                       C2089) *
                      C51003 +
                  (((C10688 * C886 + C11667 + C11667 + C51017 * C896 +
                     C10690 * C1215 + C11668 + C11668 + C50956 * C1223) *
                        C50877 * C51044 +
                    (C11691 + C11692) * C50877 * C51045 +
                    (C11693 + C11694) * C50877 * C8015) *
                       C51051 -
                   (C11306 * C8015 + (C10945 + C10946) * C50877 * C51045 +
                    (C10690 * C886 + C10907 + C10907 + C50956 * C896 +
                     C10688 * C283 + C10908 + C10908 + C51017 * C303) *
                        C50877 * C51044) *
                       C51050 -
                   ((C10690 * C6098 + C12091 + C12091 + C50956 * C6100 +
                     C10688 * C1213 + C12092 + C12092 + C51017 * C1221) *
                        C50877 * C8015 +
                    (C10690 * C4511 + C12093 + C12093 + C50956 * C4519 +
                     C10688 * C1214 + C12094 + C12094 + C51017 * C1222) *
                        C50877 * C51045 +
                    (C10690 * C4513 + C12095 + C12095 + C50956 * C4521 +
                     C10688 * C1215 + C12096 + C12096 + C51017 * C1223) *
                        C50877 * C51044) *
                       C2089) *
                      C50831) *
                 C50760) /
                (p * q * std::sqrt(p + q));
    d2ee[57] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C10688 * C119 + C10693 + C10693 + C51017 * C133 +
                     C10690 * C460 + C10694 + C10694 + C50956 * C480) *
                        C50877 * C51044 +
                    (C10737 + C10738) * C50877 * C51045 + C10747 * C8015) *
                       C1673 -
                   (C11466 * C8015 + (C11147 + C11148) * C50877 * C51045 +
                    (C10690 * C461 + C11109 + C11109 + C50956 * C481 +
                     C10688 * C460 + C11110 + C11110 + C51017 * C480) *
                        C50877 * C51044) *
                       C50859) *
                      C275 +
                  (((C10688 * C886 + C11667 + C11667 + C51017 * C896 +
                     C10690 * C1215 + C11668 + C11668 + C50956 * C1223) *
                        C50877 * C51044 +
                    (C11691 + C11692) * C50877 * C51045 +
                    (C11693 + C11694) * C50877 * C8015) *
                       C50859 -
                   (C11306 * C8015 + (C10945 + C10946) * C50877 * C51045 +
                    (C10690 * C886 + C10907 + C10907 + C50956 * C896 +
                     C10688 * C283 + C10908 + C10908 + C51017 * C303) *
                        C50877 * C51044) *
                       C1673) *
                      C276 +
                  (((C10688 * C284 + C10909 + C10909 + C51017 * C304 +
                     C10690 * C1562 + C10910 + C10910 + C50956 * C1570) *
                        C50877 * C51044 +
                    (C10947 + C10948) * C50877 * C51045 +
                    (C10949 + C10950) * C50877 * C8015) *
                       C1673 -
                   ((C10690 * C2642 + C12583 + C12583 + C50956 * C2648 +
                     C10688 * C1560 + C12584 + C12584 + C51017 * C1568) *
                        C50877 * C8015 +
                    (C10690 * C2641 + C12585 + C12585 + C50956 * C2647 +
                     C10688 * C1561 + C12586 + C12586 + C51017 * C1569) *
                        C50877 * C51045 +
                    (C10690 * C2640 + C12587 + C12587 + C50956 * C2646 +
                     C10688 * C1562 + C12588 + C12588 + C51017 * C1570) *
                        C50877 * C51044) *
                       C50859) *
                      C277) *
                 C50760) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C10688 * C119 + C10693 + C10693 + C51017 * C133 +
                     C10690 * C460 + C10694 + C10694 + C50956 * C480) *
                        C50877 * C51044 +
                    (C10737 + C10738) * C50877 * C51045 + C10747 * C8015) *
                       C1673 -
                   (C11466 * C8015 + (C11147 + C11148) * C50877 * C51045 +
                    (C10690 * C461 + C11109 + C11109 + C50956 * C481 +
                     C10688 * C460 + C11110 + C11110 + C51017 * C480) *
                        C50877 * C51044) *
                       C50859) *
                      C50779 * C1024 +
                  (((C11148 + C11147) * C50877 * C51044 +
                    (C11146 + C11145) * C50877 * C51045 +
                    (C11471 + C11472) * C50877 * C8015) *
                       C50859 -
                   (C10748 * C8015 + (C10740 + C10739) * C50877 * C51045 +
                    (C10738 + C10737) * C50877 * C51044) *
                       C1673) *
                      C50779 * C1025 +
                  ((C10747 * C51044 + (C10742 + C10741) * C50877 * C51045 +
                    (C10743 + C10744) * C50877 * C8015) *
                       C1673 -
                   ((C10690 * C466 + C11464 + C11464 + C50956 * C486 +
                     C10688 * C465 + C11465 + C11465 + C51017 * C485) *
                        C50877 * C8015 +
                    (C11472 + C11471) * C50877 * C51045 + C11466 * C51044) *
                       C50859) *
                      C50779 * C1026)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((C10688 * C119 + C10693 + C10693 + C51017 * C133 +
                    C10690 * C460 + C10694 + C10694 + C50956 * C480) *
                       C50877 * C51044 +
                   (C10737 + C10738) * C50877 * C51045 + C10747 * C8015) *
                      C1839 -
                  (C11466 * C8015 + (C11147 + C11148) * C50877 * C51045 +
                   (C10690 * C461 + C11109 + C11109 + C50956 * C481 +
                    C10688 * C460 + C11110 + C11110 + C51017 * C480) *
                       C50877 * C51044) *
                      C1840 +
                  ((C10688 * C461 + C11111 + C11111 + C51017 * C481 +
                    C10690 * C1846 + C11112 + C11112 + C50956 * C1854) *
                       C50877 * C51044 +
                   (C11149 + C11150) * C50877 * C51045 +
                   (C11151 + C11152) * C50877 * C8015) *
                      C1841 -
                  ((C10690 * C5521 + C12979 + C12979 + C50956 * C5527 +
                    C10688 * C1844 + C12980 + C12980 + C51017 * C1852) *
                       C50877 * C8015 +
                   (C10690 * C5520 + C12981 + C12981 + C50956 * C5526 +
                    C10688 * C1845 + C12982 + C12982 + C51017 * C1853) *
                       C50877 * C51045 +
                   (C10690 * C5519 + C12983 + C12983 + C50956 * C5525 +
                    C10688 * C1846 + C12984 + C12984 + C51017 * C1854) *
                       C50877 * C51044) *
                      C1842) *
                 C50779 * C50760) /
                    (p * q * std::sqrt(p + q));
    d2ee[58] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C10688 * C119 + C10693 + C10693 + C51017 * C133 +
                     C10690 * C460 + C10694 + C10694 + C50956 * C480) *
                        C50877 * C51044 +
                    (C10737 + C10738) * C50877 * C51045 + C10747 * C8015) *
                       C51050 -
                   (C11466 * C8015 + (C11147 + C11148) * C50877 * C51045 +
                    (C10690 * C461 + C11109 + C11109 + C50956 * C481 +
                     C10688 * C460 + C11110 + C11110 + C51017 * C480) *
                        C50877 * C51044) *
                       C51051 +
                   ((C10688 * C461 + C11111 + C11111 + C51017 * C481 +
                     C10690 * C1846 + C11112 + C11112 + C50956 * C1854) *
                        C50877 * C51044 +
                    (C11149 + C11150) * C50877 * C51045 +
                    (C11151 + C11152) * C50877 * C8015) *
                       C2089) *
                      C50779 * C50995 +
                  (((C11148 + C11147) * C50877 * C51044 +
                    (C11146 + C11145) * C50877 * C51045 +
                    (C11471 + C11472) * C50877 * C8015) *
                       C51051 -
                   (C10748 * C8015 + (C10740 + C10739) * C50877 * C51045 +
                    (C10738 + C10737) * C50877 * C51044) *
                       C51050 -
                   ((C10690 * C1843 + C11127 + C11127 + C50956 * C1851 +
                     C10688 * C464 + C11128 + C11128 + C51017 * C484) *
                        C50877 * C8015 +
                    (C11152 + C11151) * C50877 * C51045 +
                    (C11150 + C11149) * C50877 * C51044) *
                       C2089) *
                      C50779 * C50766)) /
                (p * q * std::sqrt(p + q));
    d2ee[59] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C10688 * C119 + C10693 + C10693 + C51017 * C133 +
                     C10690 * C460 + C10694 + C10694 + C50956 * C480) *
                        C50877 * C51044 +
                    (C10737 + C10738) * C50877 * C51045 + C10747 * C8015) *
                       C1673 -
                   (C11466 * C8015 + (C11147 + C11148) * C50877 * C51045 +
                    (C10690 * C461 + C11109 + C11109 + C50956 * C481 +
                     C10688 * C460 + C11110 + C11110 + C51017 * C480) *
                        C50877 * C51044) *
                       C50859) *
                      C50779 * C1024 +
                  (((C11148 + C11147) * C50877 * C51044 +
                    (C11146 + C11145) * C50877 * C51045 +
                    (C11471 + C11472) * C50877 * C8015) *
                       C50859 -
                   (C10748 * C8015 + (C10740 + C10739) * C50877 * C51045 +
                    (C10738 + C10737) * C50877 * C51044) *
                       C1673) *
                      C50779 * C1025 +
                  ((C10747 * C51044 + (C10742 + C10741) * C50877 * C51045 +
                    (C10743 + C10744) * C50877 * C8015) *
                       C1673 -
                   ((C10690 * C466 + C11464 + C11464 + C50956 * C486 +
                     C10688 * C465 + C11465 + C11465 + C51017 * C485) *
                        C50877 * C8015 +
                    (C11472 + C11471) * C50877 * C51045 + C11466 * C51044) *
                       C50859) *
                      C50779 * C1026)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C10688 * C119 + C10693 + C10693 + C51017 * C133 +
                     C10690 * C460 + C10694 + C10694 + C50956 * C480) *
                        C50877 * C51044 +
                    (C10737 + C10738) * C50877 * C51045 + C10747 * C8015) *
                       C1673 -
                   (C11466 * C8015 + (C11147 + C11148) * C50877 * C51045 +
                    (C10690 * C461 + C11109 + C11109 + C50956 * C481 +
                     C10688 * C460 + C11110 + C11110 + C51017 * C480) *
                        C50877 * C51044) *
                       C50859) *
                      C275 +
                  (((C10688 * C886 + C11667 + C11667 + C51017 * C896 +
                     C10690 * C1215 + C11668 + C11668 + C50956 * C1223) *
                        C50877 * C51044 +
                    (C11691 + C11692) * C50877 * C51045 +
                    (C11693 + C11694) * C50877 * C8015) *
                       C50859 -
                   (C11306 * C8015 + (C10945 + C10946) * C50877 * C51045 +
                    (C10690 * C886 + C10907 + C10907 + C50956 * C896 +
                     C10688 * C283 + C10908 + C10908 + C51017 * C303) *
                        C50877 * C51044) *
                       C1673) *
                      C276 +
                  (((C10688 * C284 + C10909 + C10909 + C51017 * C304 +
                     C10690 * C1562 + C10910 + C10910 + C50956 * C1570) *
                        C50877 * C51044 +
                    (C10947 + C10948) * C50877 * C51045 +
                    (C10949 + C10950) * C50877 * C8015) *
                       C1673 -
                   ((C10690 * C2642 + C12583 + C12583 + C50956 * C2648 +
                     C10688 * C1560 + C12584 + C12584 + C51017 * C1568) *
                        C50877 * C8015 +
                    (C10690 * C2641 + C12585 + C12585 + C50956 * C2647 +
                     C10688 * C1561 + C12586 + C12586 + C51017 * C1569) *
                        C50877 * C51045 +
                    (C10690 * C2640 + C12587 + C12587 + C50956 * C2646 +
                     C10688 * C1562 + C12588 + C12588 + C51017 * C1570) *
                        C50877 * C51044) *
                       C50859) *
                      C277) *
                 C50760) /
                    (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C50877 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C50795 * C51003 -
           (C351 * C110 + C352 * C109 + C353 * C108 +
            (C117 * C283 + C320 + C320 + C50892 * C303) * C50877 * C107) *
               C50795 * C50831) *
              C51046 +
          ((C353 * C107 + C352 * C108 + C351 * C109 + C646 * C110) * C50795 *
               C50831 -
           (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C50795 *
               C51003) *
              C51047 +
          ((C174 * C107 + C175 * C108 + C176 * C109 + C177 * C110) * C50795 *
               C51003 -
           ((C117 * C636 + C642 + C642 + C50892 * C638) * C50877 * C110 +
            C646 * C109 + C351 * C108 + C352 * C107) *
               C50795 * C50831) *
              C635)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C2286 +
             C2486 * C2287 + C2487 * C2288) *
                C2289 +
            (C2292 + C2293 + C2294) * C50739) *
               C50795 * C51003 -
           ((C2492 + C2462 + C2463) * C50739 +
            (C2489 * C2288 + C2487 * C2287 + C2486 * C2286) * C2289) *
               C50795 * C50831) *
              C51046 +
          (((C2463 + C2462 + C2492) * C2289 +
            (C2820 + C2821 + C2822) * C50739) *
               C50795 * C50831 -
           ((C2295 + C2296 + C2297) * C50739 +
            (C2294 + C2293 + C2292) * C2289) *
               C50795 * C51003) *
              C51047 +
          (((C2297 + C2296 + C2295) * C2289 +
            (C2298 + C2299 + C2300) * C50739) *
               C50795 * C51003 -
           (((C117 * C1098 + C1111 + C1111 + C50892 * C1106) * C2288 +
             C350 * C2287 + C345 * C2286) *
                C50739 +
            (C2822 + C2821 + C2820) * C2289) *
               C50795 * C50831) *
              C635)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C50877 * C107 +
             C173 * C108 + C174 * C109 + C175 * C110) *
                C51004 -
            (C528 * C110 + C529 * C109 + C530 * C108 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C50877 * C107) *
                C50859) *
               C51003 +
           (((C117 * C886 + C902 + C902 + C50892 * C896) * C50877 * C107 +
             C922 * C108 + C923 * C109 + C924 * C110) *
                C50859 -
            (C351 * C110 + C352 * C109 + C353 * C108 +
             (C117 * C283 + C320 + C320 + C50892 * C303) * C50877 * C107) *
                C51004) *
               C50831) *
              C278 +
          (((C530 * C107 + C529 * C108 + C528 * C109 + C756 * C110) * C50859 -
            (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C51004) *
               C51003 +
           ((C353 * C107 + C352 * C108 + C351 * C109 + C646 * C110) * C51004 -
            ((C117 * C890 + C912 + C912 + C50892 * C900) * C50877 * C110 +
             C924 * C109 + C923 * C108 + C922 * C107) *
                C50859) *
               C50831) *
              C50766)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50892 * C133) * C2286 +
              C2486 * C2287 + C2487 * C2288) *
                 C2289 +
             (C2292 + C2293 + C2294) * C50739) *
                C51004 -
            ((C2671 + C2652 + C2653) * C50739 +
             (C3197 * C2288 + C3198 * C2287 +
              (C117 * C460 + C497 + C497 + C50892 * C480) * C2286) *
                 C2289) *
                C50859) *
               C51003 +
           (((C3198 * C2286 + C3197 * C2287 +
              (C117 * C3170 + C3184 + C3184 + C50892 * C3176) * C2288) *
                 C2289 +
             (C3185 + C3186 + C3200) * C50739) *
                C50859 -
            ((C2492 + C2462 + C2463) * C50739 +
             (C2489 * C2288 + C2487 * C2287 + C2486 * C2286) * C2289) *
                C51004) *
               C50831) *
              C278 +
          ((((C2653 + C2652 + C2671) * C2289 +
             (C2969 + C2970 + C2976) * C50739) *
                C50859 -
            ((C2295 + C2296 + C2297) * C50739 +
             (C2294 + C2293 + C2292) * C2289) *
                C51004) *
               C51003 +
           (((C2463 + C2462 + C2492) * C2289 +
             (C2820 + C2821 + C2822) * C50739) *
                C51004 -
            (((C117 * C3172 + C3190 + C3190 + C50892 * C3178) * C2288 +
              C2975 * C2287 + C920 * C2286) *
                 C50739 +
             (C3200 + C3186 + C3185) * C2289) *
                C50859) *
               C50831) *
              C50766)) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C50877 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C50795 * C275 -
           (C351 * C110 + C352 * C109 + C353 * C108 +
            (C117 * C283 + C320 + C320 + C50892 * C303) * C50877 * C107) *
               C50795 * C276 +
           ((C117 * C284 + C321 + C321 + C50892 * C304) * C50877 * C107 +
            C354 * C108 + C355 * C109 + C356 * C110) *
               C50795 * C277) *
              C278 +
          ((C353 * C107 + C352 * C108 + C351 * C109 +
            (C117 * C288 + C331 + C331 + C50892 * C308) * C50877 * C110) *
               C50795 * C276 -
           (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C50795 *
               C275 -
           ((C117 * C289 + C332 + C332 + C50892 * C309) * C50877 * C110 +
            C356 * C109 + C355 * C108 + C354 * C107) *
               C50795 * C277) *
              C50766)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50892 * C133) * C50877 * C107 +
           C173 * C108 + C174 * C109 + C175 * C110) *
              C50795 * C50779 * C113 -
          (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C50795 *
              C50779 * C114 +
          (C174 * C107 + C175 * C108 + C176 * C109 + C177 * C110) * C50795 *
              C50779 * C115 -
          ((C117 * C125 + C157 + C157 + C50892 * C139) * C50877 * C110 +
           C177 * C109 + C176 * C108 + C175 * C107) *
              C50795 * C50779 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C50877 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C454 -
           (C528 * C110 + C529 * C109 + C530 * C108 +
            (C117 * C460 + C497 + C497 + C50892 * C480) * C50877 * C107) *
               C455 +
           ((C117 * C461 + C498 + C498 + C50892 * C481) * C50877 * C107 +
            C531 * C108 + C532 * C109 + C533 * C110) *
               C456) *
              C50779 * C278 +
          ((C530 * C107 + C529 * C108 + C528 * C109 +
            (C117 * C465 + C508 + C508 + C50892 * C485) * C50877 * C110) *
               C455 -
           (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C454 -
           ((C117 * C466 + C509 + C509 + C50892 * C486) * C50877 * C110 +
            C533 * C109 + C532 * C108 + C531 * C107) *
               C456) *
              C50779 * C50766)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C2286 +
            (C117 * C283 + C320 + C320 + C50892 * C303) * C2287 +
            (C117 * C284 + C321 + C321 + C50892 * C304) * C2288) *
               C2289 +
           (C2292 + C2293 + C2294) * C50739) *
              C50795 * C50779 * C113 -
          ((C2295 + C2296 + C2297) * C50739 + (C2294 + C2293 + C2292) * C2289) *
              C50795 * C50779 * C114 +
          ((C2297 + C2296 + C2295) * C2289 + (C2298 + C2299 + C2300) * C50739) *
              C50795 * C50779 * C115 -
          (((C117 * C289 + C332 + C332 + C50892 * C309) * C2288 + C645 * C2287 +
            C171 * C2286) *
               C50739 +
           (C2300 + C2299 + C2298) * C2289) *
              C50795 * C50779 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C2286 +
             C2486 * C2287 + C2487 * C2288) *
                C2289 +
            (C2292 + C2293 + C2294) * C50739) *
               C50795 * C275 -
           ((C2492 + C2462 + C2463) * C50739 +
            (C2489 * C2288 + C2487 * C2287 + C2486 * C2286) * C2289) *
               C50795 * C276 +
           ((C2487 * C2286 + C2489 * C2287 +
             (C117 * C2446 + C2466 + C2466 + C50892 * C2452) * C2288) *
                C2289 +
            (C2467 + C2493 + C2494) * C50739) *
               C50795 * C277) *
              C278 +
          (((C2463 + C2462 + C2492) * C2289 +
            (C346 * C2286 + C349 * C2287 + C2491 * C2288) * C50739) *
               C50795 * C276 -
           ((C2295 + C2296 + C2297) * C50739 +
            (C2294 + C2293 + C2292) * C2289) *
               C50795 * C275 -
           (((C117 * C2448 + C2473 + C2473 + C50892 * C2454) * C2288 +
             C2491 * C2287 + C349 * C2286) *
                C50739 +
            (C2494 + C2493 + C2467) * C2289) *
               C50795 * C277) *
              C50766)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C2286 +
             C2486 * C2287 + C2487 * C2288) *
                C2289 +
            (C2292 + C2293 + C2294) * C50739) *
               C454 -
           ((C2671 + C2652 + C2653) * C50739 +
            ((C117 * C1562 + C1575 + C1575 + C50892 * C1570) * C2288 +
             (C117 * C886 + C902 + C902 + C50892 * C896) * C2287 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C2286) *
                C2289) *
               C455 +
           (((C117 * C461 + C498 + C498 + C50892 * C481) * C2286 +
             (C117 * C1215 + C1228 + C1228 + C50892 * C1223) * C2287 +
             (C117 * C2640 + C2654 + C2654 + C50892 * C2646) * C2288) *
                C2289 +
            (C2655 + C2672 + C2673) * C50739) *
               C456) *
              C50779 * C278 +
          (((C2653 + C2652 + C2671) * C2289 +
            (C523 * C2286 + C920 * C2287 +
             (C117 * C1560 + C1573 + C1573 + C50892 * C1568) * C2288) *
                C50739) *
               C455 -
           ((C2295 + C2296 + C2297) * C50739 +
            (C2294 + C2293 + C2292) * C2289) *
               C454 -
           (((C117 * C2642 + C2661 + C2661 + C50892 * C2648) * C2288 +
             (C117 * C1213 + C1226 + C1226 + C50892 * C1221) * C2287 +
             C526 * C2286) *
                C50739 +
            (C2673 + C2672 + C2655) * C2289) *
               C456) *
              C50779 * C50766)) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C50877 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C51004 -
           (C528 * C110 + C529 * C109 + C530 * C108 +
            (C117 * C460 + C497 + C497 + C50892 * C480) * C50877 * C107) *
               C50859) *
              C50779 * C51046 +
          ((C530 * C107 + C529 * C108 + C528 * C109 + C756 * C110) * C50859 -
           (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C51004) *
              C50779 * C51047 +
          ((C174 * C107 + C175 * C108 + C176 * C109 + C177 * C110) * C51004 -
           ((C117 * C746 + C752 + C752 + C50892 * C748) * C50877 * C110 +
            C756 * C109 + C528 * C108 + C529 * C107) *
               C50859) *
              C50779 * C635)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C2286 +
             C2486 * C2287 + C2487 * C2288) *
                C2289 +
            (C2292 + C2293 + C2294) * C50739) *
               C51004 -
           ((C2671 + C2652 + C2653) * C50739 +
            ((C117 * C1562 + C1575 + C1575 + C50892 * C1570) * C2288 +
             (C117 * C886 + C902 + C902 + C50892 * C896) * C2287 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C2286) *
                C2289) *
               C50859) *
              C50779 * C51046 +
          (((C2653 + C2652 + C2671) * C2289 +
            (C2969 + C2970 + C2976) * C50739) *
               C50859 -
           ((C2295 + C2296 + C2297) * C50739 +
            (C2294 + C2293 + C2292) * C2289) *
               C51004) *
              C50779 * C51047 +
          (((C2297 + C2296 + C2295) * C2289 +
            (C2298 + C2299 + C2300) * C50739) *
               C51004 -
           (((C117 * C1559 + C1572 + C1572 + C50892 * C1567) * C2288 +
             C921 * C2287 + C522 * C2286) *
                C50739 +
            (C2976 + C2970 + C2969) * C2289) *
               C50859) *
              C50779 * C635)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50892 * C133) * C50877 * C107 +
           C173 * C108 + C174 * C109 + C175 * C110) *
              C50795 * C50779 * C113 -
          (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C50795 *
              C50779 * C114 +
          (C174 * C107 + C175 * C108 + C176 * C109 + C177 * C110) * C50795 *
              C50779 * C115 -
          ((C117 * C125 + C157 + C157 + C50892 * C139) * C50877 * C110 +
           C177 * C109 + C176 * C108 + C175 * C107) *
              C50795 * C50779 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C50877 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C50795 * C275 -
           (C351 * C110 + C352 * C109 + C353 * C108 +
            (C117 * C283 + C320 + C320 + C50892 * C303) * C50877 * C107) *
               C50795 * C276 +
           ((C117 * C284 + C321 + C321 + C50892 * C304) * C50877 * C107 +
            C354 * C108 + C355 * C109 + C356 * C110) *
               C50795 * C277) *
              C278 +
          ((C353 * C107 + C352 * C108 + C351 * C109 +
            (C117 * C288 + C331 + C331 + C50892 * C308) * C50877 * C110) *
               C50795 * C276 -
           (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C50795 *
               C275 -
           ((C117 * C289 + C332 + C332 + C50892 * C309) * C50877 * C110 +
            C356 * C109 + C355 * C108 + C354 * C107) *
               C50795 * C277) *
              C50766)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C2286 +
            (C117 * C283 + C320 + C320 + C50892 * C303) * C2287 +
            (C117 * C284 + C321 + C321 + C50892 * C304) * C2288) *
               C2289 +
           (C2292 + C2293 + C2294) * C50739) *
              C50795 * C50779 * C113 -
          ((C2295 + C2296 + C2297) * C50739 + (C2294 + C2293 + C2292) * C2289) *
              C50795 * C50779 * C114 +
          ((C2297 + C2296 + C2295) * C2289 + (C2298 + C2299 + C2300) * C50739) *
              C50795 * C50779 * C115 -
          (((C117 * C289 + C332 + C332 + C50892 * C309) * C2288 + C645 * C2287 +
            C171 * C2286) *
               C50739 +
           (C2300 + C2299 + C2298) * C2289) *
              C50795 * C50779 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C2286 +
             C2486 * C2287 + C2487 * C2288) *
                C2289 +
            (C2292 + C2293 + C2294) * C50739) *
               C50795 * C275 -
           ((C2492 + C2462 + C2463) * C50739 +
            (C2489 * C2288 + C2487 * C2287 + C2486 * C2286) * C2289) *
               C50795 * C276 +
           ((C2487 * C2286 + C2489 * C2287 +
             (C117 * C2446 + C2466 + C2466 + C50892 * C2452) * C2288) *
                C2289 +
            (C2467 + C2493 + C2494) * C50739) *
               C50795 * C277) *
              C278 +
          (((C2463 + C2462 + C2492) * C2289 +
            (C346 * C2286 + C349 * C2287 + C2491 * C2288) * C50739) *
               C50795 * C276 -
           ((C2295 + C2296 + C2297) * C50739 +
            (C2294 + C2293 + C2292) * C2289) *
               C50795 * C275 -
           (((C117 * C2448 + C2473 + C2473 + C50892 * C2454) * C2288 +
             C2491 * C2287 + C349 * C2286) *
                C50739 +
            (C2494 + C2493 + C2467) * C2289) *
               C50795 * C277) *
              C50766)) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C50877 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C50795 * C51048 -
           (C351 * C110 + C352 * C109 + C353 * C108 +
            (C117 * C283 + C320 + C320 + C50892 * C303) * C50877 * C107) *
               C50795 * C51049 +
           ((C117 * C284 + C321 + C321 + C50892 * C304) * C50877 * C107 +
            C354 * C108 + C355 * C109 + C356 * C110) *
               C50795 * C1328) *
              C50995 +
          ((C353 * C107 + C352 * C108 + C351 * C109 + C646 * C110) * C50795 *
               C51049 -
           (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C50795 *
               C51048 -
           ((C117 * C289 + C332 + C332 + C50892 * C309) * C50877 * C110 +
            C356 * C109 + C355 * C108 + C354 * C107) *
               C50795 * C1328) *
              C50766)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C2286 +
             C2486 * C2287 + C2487 * C2288) *
                C2289 +
            (C2292 + C2293 + C2294) * C50739) *
               C50795 * C51048 -
           ((C2492 + C2462 + C2463) * C50739 +
            (C2489 * C2288 + C2487 * C2287 + C2486 * C2286) * C2289) *
               C50795 * C51049 +
           ((C2487 * C2286 + C2489 * C2287 + C3457 * C2288) * C2289 +
            (C2467 + C2493 + C2494) * C50739) *
               C50795 * C1328) *
              C50995 +
          (((C2463 + C2462 + C2492) * C2289 +
            (C2820 + C2821 + C2822) * C50739) *
               C50795 * C51049 -
           ((C2295 + C2296 + C2297) * C50739 +
            (C2294 + C2293 + C2292) * C2289) *
               C50795 * C51048 -
           (((C117 * C2448 + C2473 + C2473 + C50892 * C2454) * C2288 +
             C2491 * C2287 + C349 * C2286) *
                C50739 +
            (C2494 + C2493 + C2467) * C2289) *
               C50795 * C1328) *
              C50766)) /
            (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C50877 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C51004 -
           (C528 * C110 + C529 * C109 + C530 * C108 +
            (C117 * C460 + C497 + C497 + C50892 * C480) * C50877 * C107) *
               C50859) *
              C51048 +
          (((C117 * C886 + C902 + C902 + C50892 * C896) * C50877 * C107 +
            C922 * C108 + C923 * C109 + C924 * C110) *
               C50859 -
           (C351 * C110 + C352 * C109 + C353 * C108 +
            (C117 * C283 + C320 + C320 + C50892 * C303) * C50877 * C107) *
               C51004) *
              C51049 +
          (((C117 * C284 + C321 + C321 + C50892 * C304) * C50877 * C107 +
            C354 * C108 + C355 * C109 + C356 * C110) *
               C51004 -
           ((C117 * C1559 + C1572 + C1572 + C50892 * C1567) * C50877 * C110 +
            (C117 * C1560 + C1573 + C1573 + C50892 * C1568) * C50877 * C109 +
            (C117 * C1561 + C1574 + C1574 + C50892 * C1569) * C50877 * C108 +
            (C117 * C1562 + C1575 + C1575 + C50892 * C1570) * C50877 * C107) *
               C50859) *
              C1328) *
         C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C2286 +
             C2486 * C2287 + C2487 * C2288) *
                C2289 +
            (C2292 + C2293 + C2294) * C50739) *
               C51004 -
           ((C2671 + C2652 + C2653) * C50739 +
            (C3197 * C2288 + C3198 * C2287 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C2286) *
                C2289) *
               C50859) *
              C51048 +
          (((C3198 * C2286 + C3197 * C2287 + C4120 * C2288) * C2289 +
            (C3185 + C3186 + C3200) * C50739) *
               C50859 -
           ((C2492 + C2462 + C2463) * C50739 +
            (C2489 * C2288 + C2487 * C2287 + C2486 * C2286) * C2289) *
               C51004) *
              C51049 +
          (((C2487 * C2286 + C2489 * C2287 + C3457 * C2288) * C2289 +
            (C2467 + C2493 + C2494) * C50739) *
               C51004 -
           (((C117 * C4107 + C4116 + C4116 + C50892 * C4111) * C2288 +
             C3199 * C2287 + C2668 * C2286) *
                C50739 +
            ((C117 * C4108 + C4117 + C4117 + C50892 * C4112) * C2288 +
             C4120 * C2287 + C3197 * C2286) *
                C2289) *
               C50859) *
              C1328) *
         C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50892 * C133) * C50877 * C107 +
           C173 * C108 + C174 * C109 + C175 * C110) *
              C50795 * C1093 -
          (C351 * C110 + C352 * C109 + C353 * C108 +
           (C117 * C283 + C320 + C320 + C50892 * C303) * C50877 * C107) *
              C50795 * C1094 +
          ((C117 * C284 + C321 + C321 + C50892 * C304) * C50877 * C107 +
           C354 * C108 + C355 * C109 + C356 * C110) *
              C50795 * C1095 -
          ((C117 * C1098 + C1111 + C1111 + C50892 * C1106) * C50877 * C110 +
           (C117 * C1099 + C1112 + C1112 + C50892 * C1107) * C50877 * C109 +
           (C117 * C1100 + C1113 + C1113 + C50892 * C1108) * C50877 * C108 +
           (C117 * C1101 + C1114 + C1114 + C50892 * C1109) * C50877 * C107) *
              C50795 * C1096) *
         C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C50877 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C50795 * C1022 -
           (C351 * C110 + C352 * C109 + C353 * C108 +
            (C117 * C283 + C320 + C320 + C50892 * C303) * C50877 * C107) *
               C50795 * C50831) *
              C1024 +
          ((C353 * C107 + C352 * C108 + C351 * C109 + C646 * C110) * C50795 *
               C50831 -
           (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C50795 *
               C1022) *
              C1025 +
          ((C174 * C107 + C175 * C108 + C176 * C109 + C177 * C110) * C50795 *
               C1022 -
           ((C117 * C636 + C642 + C642 + C50892 * C638) * C50877 * C110 +
            C646 * C109 + C351 * C108 + C352 * C107) *
               C50795 * C50831) *
              C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C50877 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C454 -
           (C528 * C110 + C529 * C109 + C530 * C108 +
            (C117 * C460 + C497 + C497 + C50892 * C480) * C50877 * C107) *
               C455 +
           ((C117 * C461 + C498 + C498 + C50892 * C481) * C50877 * C107 +
            C531 * C108 + C532 * C109 + C533 * C110) *
               C456) *
              C1022 +
          (((C117 * C886 + C902 + C902 + C50892 * C896) * C50877 * C107 +
            C922 * C108 + C923 * C109 + C924 * C110) *
               C455 -
           (C351 * C110 + C352 * C109 + C353 * C108 +
            (C117 * C283 + C320 + C320 + C50892 * C303) * C50877 * C107) *
               C454 -
           ((C117 * C1212 + C1225 + C1225 + C50892 * C1220) * C50877 * C110 +
            (C117 * C1213 + C1226 + C1226 + C50892 * C1221) * C50877 * C109 +
            (C117 * C1214 + C1227 + C1227 + C50892 * C1222) * C50877 * C108 +
            (C117 * C1215 + C1228 + C1228 + C50892 * C1223) * C50877 * C107) *
               C456) *
              C50831) *
         C50760) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C2286 +
             C2486 * C2287 + C2487 * C2288) *
                C2289 +
            (C2292 + C2293 + C2294) * C50739) *
               C50795 * C1022 -
           ((C2492 + C2462 + C2463) * C50739 +
            (C2489 * C2288 + C2487 * C2287 + C2486 * C2286) * C2289) *
               C50795 * C50831) *
              C1024 +
          (((C2463 + C2462 + C2492) * C2289 +
            (C2820 + C2821 + C2822) * C50739) *
               C50795 * C50831 -
           ((C2295 + C2296 + C2297) * C50739 +
            (C2294 + C2293 + C2292) * C2289) *
               C50795 * C1022) *
              C1025 +
          (((C2297 + C2296 + C2295) * C2289 +
            (C2298 + C2299 + C2300) * C50739) *
               C50795 * C1022 -
           (((C117 * C1098 + C1111 + C1111 + C50892 * C1106) * C2288 +
             C350 * C2287 + C345 * C2286) *
                C50739 +
            (C2822 + C2821 + C2820) * C2289) *
               C50795 * C50831) *
              C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C2286 +
            C2486 * C2287 + C2487 * C2288) *
               C2289 +
           (C2292 + C2293 + C2294) * C50739) *
              C50795 * C1093 -
          ((C2492 + C2462 + C2463) * C50739 +
           (C2489 * C2288 + C2487 * C2287 + C2486 * C2286) * C2289) *
              C50795 * C1094 +
          ((C2487 * C2286 + C2489 * C2287 + C3457 * C2288) * C2289 +
           (C2467 + C2493 + C2494) * C50739) *
              C50795 * C1095 -
          (((C117 * C3444 + C3453 + C3453 + C50892 * C3448) * C2288 +
            C2490 * C2287 + C2488 * C2286) *
               C50739 +
           ((C117 * C3445 + C3454 + C3454 + C50892 * C3449) * C2288 +
            C3457 * C2287 + C2489 * C2286) *
               C2289) *
              C50795 * C1096) *
         C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C2286 +
             C2486 * C2287 + C2487 * C2288) *
                C2289 +
            (C2292 + C2293 + C2294) * C50739) *
               C454 -
           ((C2671 + C2652 + C2653) * C50739 +
            (C3197 * C2288 + C3198 * C2287 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C2286) *
                C2289) *
               C455 +
           (((C117 * C461 + C498 + C498 + C50892 * C481) * C2286 +
             C3620 * C2287 + C3621 * C2288) *
                C2289 +
            (C2655 + C2672 + C2673) * C50739) *
               C456) *
              C1022 +
          (((C3198 * C2286 + C3197 * C2287 +
             (C117 * C3170 + C3184 + C3184 + C50892 * C3176) * C2288) *
                C2289 +
            (C3185 + C3186 + C3200) * C50739) *
               C455 -
           ((C2492 + C2462 + C2463) * C50739 +
            (C2489 * C2288 + C2487 * C2287 + C2486 * C2286) * C2289) *
               C454 -
           (((C117 * C3603 + C3614 + C3614 + C50892 * C3607) * C2288 +
             C2670 * C2287 + C2669 * C2286) *
                C50739 +
            ((C117 * C3604 + C3615 + C3615 + C50892 * C3608) * C2288 +
             C3621 * C2287 + C3620 * C2286) *
                C2289) *
               C456) *
              C50831) *
         C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C50877 * C107 +
             C173 * C108 + C174 * C109 + C175 * C110) *
                C51004 -
            (C528 * C110 + C529 * C109 + C530 * C108 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C50877 * C107) *
                C50859) *
               C1022 +
           (((C117 * C886 + C902 + C902 + C50892 * C896) * C50877 * C107 +
             C922 * C108 + C923 * C109 + C924 * C110) *
                C50859 -
            (C351 * C110 + C352 * C109 + C353 * C108 +
             (C117 * C283 + C320 + C320 + C50892 * C303) * C50877 * C107) *
                C51004) *
               C50831) *
              C50995 +
          (((C530 * C107 + C529 * C108 + C528 * C109 + C756 * C110) * C50859 -
            (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C51004) *
               C1022 +
           ((C353 * C107 + C352 * C108 + C351 * C109 + C646 * C110) * C51004 -
            ((C117 * C890 + C912 + C912 + C50892 * C900) * C50877 * C110 +
             C924 * C109 + C923 * C108 + C922 * C107) *
                C50859) *
               C50831) *
              C50766)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50892 * C133) * C2286 +
              C2486 * C2287 + C2487 * C2288) *
                 C2289 +
             (C2292 + C2293 + C2294) * C50739) *
                C51004 -
            ((C2671 + C2652 + C2653) * C50739 +
             (C3197 * C2288 + C3198 * C2287 +
              (C117 * C460 + C497 + C497 + C50892 * C480) * C2286) *
                 C2289) *
                C50859) *
               C1022 +
           (((C3198 * C2286 + C3197 * C2287 +
              (C117 * C3170 + C3184 + C3184 + C50892 * C3176) * C2288) *
                 C2289 +
             (C3185 + C3186 + C3200) * C50739) *
                C50859 -
            ((C2492 + C2462 + C2463) * C50739 +
             (C2489 * C2288 + C2487 * C2287 + C2486 * C2286) * C2289) *
                C51004) *
               C50831) *
              C50995 +
          ((((C2653 + C2652 + C2671) * C2289 +
             (C2969 + C2970 + C2976) * C50739) *
                C50859 -
            ((C2295 + C2296 + C2297) * C50739 +
             (C2294 + C2293 + C2292) * C2289) *
                C51004) *
               C1022 +
           (((C2463 + C2462 + C2492) * C2289 +
             (C2820 + C2821 + C2822) * C50739) *
                C51004 -
            (((C117 * C3172 + C3190 + C3190 + C50892 * C3178) * C2288 +
              C2975 * C2287 + C920 * C2286) *
                 C50739 +
             (C3200 + C3186 + C3185) * C2289) *
                C50859) *
               C50831) *
              C50766)) /
            (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C50877 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C50795 * C1022 -
           (C351 * C110 + C352 * C109 + C353 * C108 +
            (C117 * C283 + C320 + C320 + C50892 * C303) * C50877 * C107) *
               C50795 * C50831) *
              C1024 +
          ((C353 * C107 + C352 * C108 + C351 * C109 + C646 * C110) * C50795 *
               C50831 -
           (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C50795 *
               C1022) *
              C1025 +
          ((C174 * C107 + C175 * C108 + C176 * C109 + C177 * C110) * C50795 *
               C1022 -
           ((C117 * C636 + C642 + C642 + C50892 * C638) * C50877 * C110 +
            C646 * C109 + C351 * C108 + C352 * C107) *
               C50795 * C50831) *
              C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50892 * C133) * C50877 * C107 +
           C173 * C108 + C174 * C109 + C175 * C110) *
              C50795 * C1093 -
          (C351 * C110 + C352 * C109 + C353 * C108 +
           (C117 * C283 + C320 + C320 + C50892 * C303) * C50877 * C107) *
              C50795 * C1094 +
          ((C117 * C284 + C321 + C321 + C50892 * C304) * C50877 * C107 +
           C354 * C108 + C355 * C109 + C356 * C110) *
              C50795 * C1095 -
          ((C117 * C1098 + C1111 + C1111 + C50892 * C1106) * C50877 * C110 +
           (C117 * C1099 + C1112 + C1112 + C50892 * C1107) * C50877 * C109 +
           (C117 * C1100 + C1113 + C1113 + C50892 * C1108) * C50877 * C108 +
           (C117 * C1101 + C1114 + C1114 + C50892 * C1109) * C50877 * C107) *
              C50795 * C1096) *
         C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C2286 +
             C2486 * C2287 + C2487 * C2288) *
                C2289 +
            (C2292 + C2293 + C2294) * C50739) *
               C50795 * C1022 -
           ((C2492 + C2462 + C2463) * C50739 +
            (C2489 * C2288 + C2487 * C2287 + C2486 * C2286) * C2289) *
               C50795 * C50831) *
              C1024 +
          (((C2463 + C2462 + C2492) * C2289 +
            (C2820 + C2821 + C2822) * C50739) *
               C50795 * C50831 -
           ((C2295 + C2296 + C2297) * C50739 +
            (C2294 + C2293 + C2292) * C2289) *
               C50795 * C1022) *
              C1025 +
          (((C2297 + C2296 + C2295) * C2289 +
            (C2298 + C2299 + C2300) * C50739) *
               C50795 * C1022 -
           (((C117 * C1098 + C1111 + C1111 + C50892 * C1106) * C2288 +
             C350 * C2287 + C345 * C2286) *
                C50739 +
            (C2822 + C2821 + C2820) * C2289) *
               C50795 * C50831) *
              C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C2286 +
            C2486 * C2287 + C2487 * C2288) *
               C2289 +
           (C2292 + C2293 + C2294) * C50739) *
              C50795 * C1093 -
          ((C2492 + C2462 + C2463) * C50739 +
           (C2489 * C2288 + C2487 * C2287 + C2486 * C2286) * C2289) *
              C50795 * C1094 +
          ((C2487 * C2286 + C2489 * C2287 + C3457 * C2288) * C2289 +
           (C2467 + C2493 + C2494) * C50739) *
              C50795 * C1095 -
          (((C117 * C3444 + C3453 + C3453 + C50892 * C3448) * C2288 +
            C2490 * C2287 + C2488 * C2286) *
               C50739 +
           ((C117 * C3445 + C3454 + C3454 + C50892 * C3449) * C2288 +
            C3457 * C2287 + C2489 * C2286) *
               C2289) *
              C50795 * C1096) *
         C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C50877 * C107 +
             C173 * C108 + C174 * C109 + C175 * C110) *
                C1673 -
            (C528 * C110 + C529 * C109 + C530 * C108 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C50877 * C107) *
                C50859) *
               C51003 +
           (((C117 * C886 + C902 + C902 + C50892 * C896) * C50877 * C107 +
             C922 * C108 + C923 * C109 + C924 * C110) *
                C50859 -
            (C351 * C110 + C352 * C109 + C353 * C108 +
             (C117 * C283 + C320 + C320 + C50892 * C303) * C50877 * C107) *
                C1673) *
               C50831) *
              C50995 +
          (((C530 * C107 + C529 * C108 + C528 * C109 + C756 * C110) * C50859 -
            (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C1673) *
               C51003 +
           ((C353 * C107 + C352 * C108 + C351 * C109 + C646 * C110) * C1673 -
            ((C117 * C890 + C912 + C912 + C50892 * C900) * C50877 * C110 +
             C924 * C109 + C923 * C108 + C922 * C107) *
                C50859) *
               C50831) *
              C50766)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50892 * C133) * C2286 +
              C2486 * C2287 + C2487 * C2288) *
                 C2289 +
             (C2292 + C2293 + C2294) * C50739) *
                C1673 -
            ((C2671 + C2652 + C2653) * C50739 +
             (C3197 * C2288 + C3198 * C2287 +
              (C117 * C460 + C497 + C497 + C50892 * C480) * C2286) *
                 C2289) *
                C50859) *
               C51003 +
           (((C3198 * C2286 + C3197 * C2287 + C4120 * C2288) * C2289 +
             (C3185 + C3186 + C3200) * C50739) *
                C50859 -
            ((C2492 + C2462 + C2463) * C50739 +
             (C2489 * C2288 + C2487 * C2287 + C2486 * C2286) * C2289) *
                C1673) *
               C50831) *
              C50995 +
          ((((C2653 + C2652 + C2671) * C2289 +
             (C2969 + C2970 + C2976) * C50739) *
                C50859 -
            ((C2295 + C2296 + C2297) * C50739 +
             (C2294 + C2293 + C2292) * C2289) *
                C1673) *
               C51003 +
           (((C2463 + C2462 + C2492) * C2289 +
             (C2820 + C2821 + C2822) * C50739) *
                C1673 -
            (((C117 * C3172 + C3190 + C3190 + C50892 * C3178) * C2288 +
              C2975 * C2287 + C920 * C2286) *
                 C50739 +
             (C3200 + C3186 + C3185) * C2289) *
                C50859) *
               C50831) *
              C50766)) /
            (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C50877 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C51050 -
           (C528 * C110 + C529 * C109 + C530 * C108 +
            (C117 * C460 + C497 + C497 + C50892 * C480) * C50877 * C107) *
               C51051 +
           ((C117 * C461 + C498 + C498 + C50892 * C481) * C50877 * C107 +
            C531 * C108 + C532 * C109 + C533 * C110) *
               C2089) *
              C51003 +
          (((C117 * C886 + C902 + C902 + C50892 * C896) * C50877 * C107 +
            C922 * C108 + C923 * C109 + C924 * C110) *
               C51051 -
           (C351 * C110 + C352 * C109 + C353 * C108 +
            (C117 * C283 + C320 + C320 + C50892 * C303) * C50877 * C107) *
               C51050 -
           ((C117 * C1212 + C1225 + C1225 + C50892 * C1220) * C50877 * C110 +
            (C117 * C1213 + C1226 + C1226 + C50892 * C1221) * C50877 * C109 +
            (C117 * C1214 + C1227 + C1227 + C50892 * C1222) * C50877 * C108 +
            (C117 * C1215 + C1228 + C1228 + C50892 * C1223) * C50877 * C107) *
               C2089) *
              C50831) *
         C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C2286 +
             C2486 * C2287 + C2487 * C2288) *
                C2289 +
            (C2292 + C2293 + C2294) * C50739) *
               C51050 -
           ((C2671 + C2652 + C2653) * C50739 +
            (C3197 * C2288 + C3198 * C2287 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C2286) *
                C2289) *
               C51051 +
           (((C117 * C461 + C498 + C498 + C50892 * C481) * C2286 +
             C3620 * C2287 + C3621 * C2288) *
                C2289 +
            (C2655 + C2672 + C2673) * C50739) *
               C2089) *
              C51003 +
          (((C3198 * C2286 + C3197 * C2287 + C4120 * C2288) * C2289 +
            (C3185 + C3186 + C3200) * C50739) *
               C51051 -
           ((C2492 + C2462 + C2463) * C50739 +
            (C2489 * C2288 + C2487 * C2287 + C2486 * C2286) * C2289) *
               C51050 -
           (((C117 * C3603 + C3614 + C3614 + C50892 * C3607) * C2288 +
             C2670 * C2287 + C2669 * C2286) *
                C50739 +
            ((C117 * C3604 + C3615 + C3615 + C50892 * C3608) * C2288 +
             C3621 * C2287 + C3620 * C2286) *
                C2289) *
               C2089) *
              C50831) *
         C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C50877 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C1673 -
           (C528 * C110 + C529 * C109 + C530 * C108 +
            (C117 * C460 + C497 + C497 + C50892 * C480) * C50877 * C107) *
               C50859) *
              C275 +
          (((C117 * C886 + C902 + C902 + C50892 * C896) * C50877 * C107 +
            C922 * C108 + C923 * C109 + C924 * C110) *
               C50859 -
           (C351 * C110 + C352 * C109 + C353 * C108 +
            (C117 * C283 + C320 + C320 + C50892 * C303) * C50877 * C107) *
               C1673) *
              C276 +
          (((C117 * C284 + C321 + C321 + C50892 * C304) * C50877 * C107 +
            C354 * C108 + C355 * C109 + C356 * C110) *
               C1673 -
           ((C117 * C1559 + C1572 + C1572 + C50892 * C1567) * C50877 * C110 +
            (C117 * C1560 + C1573 + C1573 + C50892 * C1568) * C50877 * C109 +
            (C117 * C1561 + C1574 + C1574 + C50892 * C1569) * C50877 * C108 +
            (C117 * C1562 + C1575 + C1575 + C50892 * C1570) * C50877 * C107) *
               C50859) *
              C277) *
         C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C50877 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C1673 -
           (C528 * C110 + C529 * C109 + C530 * C108 +
            (C117 * C460 + C497 + C497 + C50892 * C480) * C50877 * C107) *
               C50859) *
              C50779 * C1024 +
          ((C530 * C107 + C529 * C108 + C528 * C109 + C756 * C110) * C50859 -
           (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C1673) *
              C50779 * C1025 +
          ((C174 * C107 + C175 * C108 + C176 * C109 + C177 * C110) * C1673 -
           ((C117 * C746 + C752 + C752 + C50892 * C748) * C50877 * C110 +
            C756 * C109 + C528 * C108 + C529 * C107) *
               C50859) *
              C50779 * C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50892 * C133) * C50877 * C107 +
           C173 * C108 + C174 * C109 + C175 * C110) *
              C1839 -
          (C528 * C110 + C529 * C109 + C530 * C108 +
           (C117 * C460 + C497 + C497 + C50892 * C480) * C50877 * C107) *
              C1840 +
          ((C117 * C461 + C498 + C498 + C50892 * C481) * C50877 * C107 +
           C531 * C108 + C532 * C109 + C533 * C110) *
              C1841 -
          ((C117 * C1843 + C1856 + C1856 + C50892 * C1851) * C50877 * C110 +
           (C117 * C1844 + C1857 + C1857 + C50892 * C1852) * C50877 * C109 +
           (C117 * C1845 + C1858 + C1858 + C50892 * C1853) * C50877 * C108 +
           (C117 * C1846 + C1859 + C1859 + C50892 * C1854) * C50877 * C107) *
              C1842) *
         C50779 * C50760) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C2286 +
             C2486 * C2287 + C2487 * C2288) *
                C2289 +
            (C2292 + C2293 + C2294) * C50739) *
               C1673 -
           ((C2671 + C2652 + C2653) * C50739 +
            (C3197 * C2288 + C3198 * C2287 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C2286) *
                C2289) *
               C50859) *
              C50779 * C1024 +
          (((C2653 + C2652 + C2671) * C2289 +
            (C2969 + C2970 + C2976) * C50739) *
               C50859 -
           ((C2295 + C2296 + C2297) * C50739 +
            (C2294 + C2293 + C2292) * C2289) *
               C1673) *
              C50779 * C1025 +
          (((C2297 + C2296 + C2295) * C2289 +
            (C2298 + C2299 + C2300) * C50739) *
               C1673 -
           (((C117 * C1559 + C1572 + C1572 + C50892 * C1567) * C2288 +
             C921 * C2287 + C522 * C2286) *
                C50739 +
            (C2976 + C2970 + C2969) * C2289) *
               C50859) *
              C50779 * C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C2286 +
             C2486 * C2287 + C2487 * C2288) *
                C2289 +
            (C2292 + C2293 + C2294) * C50739) *
               C1673 -
           ((C2671 + C2652 + C2653) * C50739 +
            (C3197 * C2288 + C3198 * C2287 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C2286) *
                C2289) *
               C50859) *
              C275 +
          (((C3198 * C2286 + C3197 * C2287 + C4120 * C2288) * C2289 +
            (C3185 + C3186 + C3200) * C50739) *
               C50859 -
           ((C2492 + C2462 + C2463) * C50739 +
            (C2489 * C2288 + C2487 * C2287 + C2486 * C2286) * C2289) *
               C1673) *
              C276 +
          (((C2487 * C2286 + C2489 * C2287 + C3457 * C2288) * C2289 +
            (C2467 + C2493 + C2494) * C50739) *
               C1673 -
           (((C117 * C4107 + C4116 + C4116 + C50892 * C4111) * C2288 +
             C3199 * C2287 + C2668 * C2286) *
                C50739 +
            ((C117 * C4108 + C4117 + C4117 + C50892 * C4112) * C2288 +
             C4120 * C2287 + C3197 * C2286) *
                C2289) *
               C50859) *
              C277) *
         C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C2286 +
            C2486 * C2287 + C2487 * C2288) *
               C2289 +
           (C2292 + C2293 + C2294) * C50739) *
              C1839 -
          ((C2671 + C2652 + C2653) * C50739 +
           (C3197 * C2288 + C3198 * C2287 +
            (C117 * C460 + C497 + C497 + C50892 * C480) * C2286) *
               C2289) *
              C1840 +
          (((C117 * C461 + C498 + C498 + C50892 * C481) * C2286 +
            C3620 * C2287 + C3621 * C2288) *
               C2289 +
           (C2655 + C2672 + C2673) * C50739) *
              C1841 -
          (((C117 * C4510 + C4523 + C4523 + C50892 * C4518) * C2288 +
            (C117 * C4511 + C4524 + C4524 + C50892 * C4519) * C2287 +
            (C117 * C1845 + C1858 + C1858 + C50892 * C1853) * C2286) *
               C50739 +
           ((C117 * C4512 + C4525 + C4525 + C50892 * C4520) * C2288 +
            (C117 * C4513 + C4526 + C4526 + C50892 * C4521) * C2287 +
            (C117 * C1846 + C1859 + C1859 + C50892 * C1854) * C2286) *
               C2289) *
              C1842) *
         C50779 * C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C50877 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C51050 -
           (C528 * C110 + C529 * C109 + C530 * C108 +
            (C117 * C460 + C497 + C497 + C50892 * C480) * C50877 * C107) *
               C51051 +
           ((C117 * C461 + C498 + C498 + C50892 * C481) * C50877 * C107 +
            C531 * C108 + C532 * C109 + C533 * C110) *
               C2089) *
              C50779 * C50995 +
          ((C530 * C107 + C529 * C108 + C528 * C109 + C756 * C110) * C51051 -
           (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C51050 -
           ((C117 * C466 + C509 + C509 + C50892 * C486) * C50877 * C110 +
            C533 * C109 + C532 * C108 + C531 * C107) *
               C2089) *
              C50779 * C50766)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C2286 +
             C2486 * C2287 + C2487 * C2288) *
                C2289 +
            (C2292 + C2293 + C2294) * C50739) *
               C51050 -
           ((C2671 + C2652 + C2653) * C50739 +
            (C3197 * C2288 + C3198 * C2287 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C2286) *
                C2289) *
               C51051 +
           (((C117 * C461 + C498 + C498 + C50892 * C481) * C2286 +
             C3620 * C2287 + C3621 * C2288) *
                C2289 +
            (C2655 + C2672 + C2673) * C50739) *
               C2089) *
              C50779 * C50995 +
          (((C2653 + C2652 + C2671) * C2289 +
            (C2969 + C2970 + C2976) * C50739) *
               C51051 -
           ((C2295 + C2296 + C2297) * C50739 +
            (C2294 + C2293 + C2292) * C2289) *
               C51050 -
           (((C117 * C2642 + C2661 + C2661 + C50892 * C2648) * C2288 +
             (C117 * C1213 + C1226 + C1226 + C50892 * C1221) * C2287 +
             C526 * C2286) *
                C50739 +
            (C2673 + C2672 + C2655) * C2289) *
               C2089) *
              C50779 * C50766)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C50877 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C1673 -
           (C528 * C110 + C529 * C109 + C530 * C108 +
            (C117 * C460 + C497 + C497 + C50892 * C480) * C50877 * C107) *
               C50859) *
              C50779 * C1024 +
          ((C530 * C107 + C529 * C108 + C528 * C109 + C756 * C110) * C50859 -
           (C176 * C110 + C175 * C109 + C174 * C108 + C173 * C107) * C1673) *
              C50779 * C1025 +
          ((C174 * C107 + C175 * C108 + C176 * C109 + C177 * C110) * C1673 -
           ((C117 * C746 + C752 + C752 + C50892 * C748) * C50877 * C110 +
            C756 * C109 + C528 * C108 + C529 * C107) *
               C50859) *
              C50779 * C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C50877 * C107 +
            C173 * C108 + C174 * C109 + C175 * C110) *
               C1673 -
           (C528 * C110 + C529 * C109 + C530 * C108 +
            (C117 * C460 + C497 + C497 + C50892 * C480) * C50877 * C107) *
               C50859) *
              C275 +
          (((C117 * C886 + C902 + C902 + C50892 * C896) * C50877 * C107 +
            C922 * C108 + C923 * C109 + C924 * C110) *
               C50859 -
           (C351 * C110 + C352 * C109 + C353 * C108 +
            (C117 * C283 + C320 + C320 + C50892 * C303) * C50877 * C107) *
               C1673) *
              C276 +
          (((C117 * C284 + C321 + C321 + C50892 * C304) * C50877 * C107 +
            C354 * C108 + C355 * C109 + C356 * C110) *
               C1673 -
           ((C117 * C1559 + C1572 + C1572 + C50892 * C1567) * C50877 * C110 +
            (C117 * C1560 + C1573 + C1573 + C50892 * C1568) * C50877 * C109 +
            (C117 * C1561 + C1574 + C1574 + C50892 * C1569) * C50877 * C108 +
            (C117 * C1562 + C1575 + C1575 + C50892 * C1570) * C50877 * C107) *
               C50859) *
              C277) *
         C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C2286 +
             C2486 * C2287 + C2487 * C2288) *
                C2289 +
            (C2292 + C2293 + C2294) * C50739) *
               C1673 -
           ((C2671 + C2652 + C2653) * C50739 +
            (C3197 * C2288 + C3198 * C2287 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C2286) *
                C2289) *
               C50859) *
              C50779 * C1024 +
          (((C2653 + C2652 + C2671) * C2289 +
            (C2969 + C2970 + C2976) * C50739) *
               C50859 -
           ((C2295 + C2296 + C2297) * C50739 +
            (C2294 + C2293 + C2292) * C2289) *
               C1673) *
              C50779 * C1025 +
          (((C2297 + C2296 + C2295) * C2289 +
            (C2298 + C2299 + C2300) * C50739) *
               C1673 -
           (((C117 * C1559 + C1572 + C1572 + C50892 * C1567) * C2288 +
             C921 * C2287 + C522 * C2286) *
                C50739 +
            (C2976 + C2970 + C2969) * C2289) *
               C50859) *
              C50779 * C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C2286 +
             C2486 * C2287 + C2487 * C2288) *
                C2289 +
            (C2292 + C2293 + C2294) * C50739) *
               C1673 -
           ((C2671 + C2652 + C2653) * C50739 +
            (C3197 * C2288 + C3198 * C2287 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C2286) *
                C2289) *
               C50859) *
              C275 +
          (((C3198 * C2286 + C3197 * C2287 + C4120 * C2288) * C2289 +
            (C3185 + C3186 + C3200) * C50739) *
               C50859 -
           ((C2492 + C2462 + C2463) * C50739 +
            (C2489 * C2288 + C2487 * C2287 + C2486 * C2286) * C2289) *
               C1673) *
              C276 +
          (((C2487 * C2286 + C2489 * C2287 + C3457 * C2288) * C2289 +
            (C2467 + C2493 + C2494) * C50739) *
               C1673 -
           (((C117 * C4107 + C4116 + C4116 + C50892 * C4111) * C2288 +
             C3199 * C2287 + C2668 * C2286) *
                C50739 +
            ((C117 * C4108 + C4117 + C4117 + C50892 * C4112) * C2288 +
             C4120 * C2287 + C3197 * C2286) *
                C2289) *
               C50859) *
              C277) *
         C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C51052 +
             C2486 * C51053 + C2487 * C24380) *
                C50988 +
            (C24384 + C24385 + C24386) * C50739) *
               C50795 * C51003 -
           ((C24539 + C24540 + C24541) * C50739 +
            (C2489 * C24380 + C2487 * C51053 + C2486 * C51052) * C50988) *
               C50795 * C50831) *
              C51046 +
          (((C24541 + C24540 + C24539) * C50988 +
            (C24843 + C24844 + C24845) * C50739) *
               C50795 * C50831 -
           ((C24387 + C24388 + C24389) * C50739 +
            (C24386 + C24385 + C24384) * C50988) *
               C50795 * C51003) *
              C51047 +
          (((C24389 + C24388 + C24387) * C50988 +
            (C24390 + C24391 + C24392) * C50739) *
               C50795 * C51003 -
           (((C117 * C1098 + C1111 + C1111 + C50892 * C1106) * C24380 +
             C350 * C51053 + C345 * C51052) *
                C50739 +
            (C24845 + C24844 + C24843) * C50988) *
               C50795 * C50831) *
              C635)) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50892 * C133) * C51052 +
              C2486 * C51053 + C2487 * C24380) *
                 C50988 +
             (C24384 + C24385 + C24386) * C50739) *
                C51004 -
            ((C24691 + C24692 + C24693) * C50739 +
             (C3197 * C24380 + C3198 * C51053 +
              (C117 * C460 + C497 + C497 + C50892 * C480) * C51052) *
                 C50988) *
                C50859) *
               C51003 +
           (((C3198 * C51052 + C3197 * C51053 + C4120 * C24380) * C50988 +
             (C25189 + C25190 + C25191) * C50739) *
                C50859 -
            ((C24539 + C24540 + C24541) * C50739 +
             (C2489 * C24380 + C2487 * C51053 + C2486 * C51052) * C50988) *
                C51004) *
               C50831) *
              C278 +
          ((((C24693 + C24692 + C24691) * C50988 +
             (C24992 + C24993 + C24994) * C50739) *
                C50859 -
            ((C24387 + C24388 + C24389) * C50739 +
             (C24386 + C24385 + C24384) * C50988) *
                C51004) *
               C51003 +
           (((C24541 + C24540 + C24539) * C50988 +
             (C24843 + C24844 + C24845) * C50739) *
                C51004 -
            (((C117 * C3172 + C3190 + C3190 + C50892 * C3178) * C24380 +
              C2975 * C51053 + C920 * C51052) *
                 C50739 +
             (C25191 + C25190 + C25189) * C50988) *
                C50859) *
               C50831) *
              C50766)) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C51052 +
             C2486 * C51053 + C2487 * C24380) *
                C50988 +
            (C24384 + C24385 + C24386) * C50739) *
               C50795 * C275 -
           ((C24539 + C24540 + C24541) * C50739 +
            (C2489 * C24380 + C2487 * C51053 + C2486 * C51052) * C50988) *
               C50795 * C276 +
           ((C2487 * C51052 + C2489 * C51053 + C3457 * C24380) * C50988 +
            (C24542 + C24543 + C24544) * C50739) *
               C50795 * C277) *
              C278 +
          (((C24541 + C24540 + C24539) * C50988 +
            (C346 * C51052 + C349 * C51053 + C2491 * C24380) * C50739) *
               C50795 * C276 -
           ((C24387 + C24388 + C24389) * C50739 +
            (C24386 + C24385 + C24384) * C50988) *
               C50795 * C275 -
           (((C117 * C2448 + C2473 + C2473 + C50892 * C2454) * C24380 +
             C2491 * C51053 + C349 * C51052) *
                C50739 +
            (C24544 + C24543 + C24542) * C50988) *
               C50795 * C277) *
              C50766)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C51052 +
            C2486 * C51053 + C2487 * C24380) *
               C50988 +
           (C24384 + C24385 + C24386) * C50739) *
              C50795 * C50779 * C113 -
          ((C24387 + C24388 + C24389) * C50739 +
           (C24386 + C24385 + C24384) * C50988) *
              C50795 * C50779 * C114 +
          ((C24389 + C24388 + C24387) * C50988 +
           (C24390 + C24391 + C24392) * C50739) *
              C50795 * C50779 * C115 -
          (((C117 * C289 + C332 + C332 + C50892 * C309) * C24380 +
            C645 * C51053 + C171 * C51052) *
               C50739 +
           (C24392 + C24391 + C24390) * C50988) *
              C50795 * C50779 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C51052 +
             C2486 * C51053 + C2487 * C24380) *
                C50988 +
            (C24384 + C24385 + C24386) * C50739) *
               C454 -
           ((C24691 + C24692 + C24693) * C50739 +
            (C3197 * C24380 + C3198 * C51053 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C51052) *
                C50988) *
               C455 +
           (((C117 * C461 + C498 + C498 + C50892 * C481) * C51052 +
             C3620 * C51053 + C3621 * C24380) *
                C50988 +
            (C24694 + C24695 + C24696) * C50739) *
               C456) *
              C50779 * C278 +
          (((C24693 + C24692 + C24691) * C50988 +
            (C523 * C51052 + C920 * C51053 + C2975 * C24380) * C50739) *
               C455 -
           ((C24387 + C24388 + C24389) * C50739 +
            (C24386 + C24385 + C24384) * C50988) *
               C454 -
           (((C117 * C2642 + C2661 + C2661 + C50892 * C2648) * C24380 +
             C8338 * C51053 + C526 * C51052) *
                C50739 +
            (C24696 + C24695 + C24694) * C50988) *
               C456) *
              C50779 * C50766)) /
            (p * q * std::sqrt(p + q));
    d2ee[78] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C141 + C141 + C50892 * C133) * C51052 +
                     C2486 * C51053 + C2487 * C24380) *
                        C50988 +
                    (C24384 + C24385 + C24386) * C50739) *
                       C51004 -
                   ((C24691 + C24692 + C24693) * C50739 +
                    (C3197 * C24380 + C3198 * C51053 +
                     (C117 * C460 + C497 + C497 + C50892 * C480) * C51052) *
                        C50988) *
                       C50859) *
                      C50779 * C51046 +
                  (((C24693 + C24692 + C24691) * C50988 +
                    (C24992 + C24993 + C24994) * C50739) *
                       C50859 -
                   ((C24387 + C24388 + C24389) * C50739 +
                    (C24386 + C24385 + C24384) * C50988) *
                       C51004) *
                      C50779 * C51047 +
                  (((C24389 + C24388 + C24387) * C50988 +
                    (C24390 + C24391 + C24392) * C50739) *
                       C51004 -
                   (((C117 * C1559 + C1572 + C1572 + C50892 * C1567) * C24380 +
                     C921 * C51053 + C522 * C51052) *
                        C50739 +
                    (C24994 + C24993 + C24992) * C50988) *
                       C50859) *
                      C50779 * C635)) /
                (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C51052 +
            C2486 * C51053 + C2487 * C24380) *
               C50988 +
           (C24384 + C24385 + C24386) * C50739) *
              C50795 * C50779 * C113 -
          ((C24387 + C24388 + C24389) * C50739 +
           (C24386 + C24385 + C24384) * C50988) *
              C50795 * C50779 * C114 +
          ((C24389 + C24388 + C24387) * C50988 +
           (C24390 + C24391 + C24392) * C50739) *
              C50795 * C50779 * C115 -
          (((C117 * C289 + C332 + C332 + C50892 * C309) * C24380 +
            C645 * C51053 + C171 * C51052) *
               C50739 +
           (C24392 + C24391 + C24390) * C50988) *
              C50795 * C50779 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C51052 +
             C2486 * C51053 + C2487 * C24380) *
                C50988 +
            (C24384 + C24385 + C24386) * C50739) *
               C50795 * C275 -
           ((C24539 + C24540 + C24541) * C50739 +
            (C2489 * C24380 + C2487 * C51053 + C2486 * C51052) * C50988) *
               C50795 * C276 +
           ((C2487 * C51052 + C2489 * C51053 + C3457 * C24380) * C50988 +
            (C24542 + C24543 + C24544) * C50739) *
               C50795 * C277) *
              C278 +
          (((C24541 + C24540 + C24539) * C50988 +
            (C346 * C51052 + C349 * C51053 + C2491 * C24380) * C50739) *
               C50795 * C276 -
           ((C24387 + C24388 + C24389) * C50739 +
            (C24386 + C24385 + C24384) * C50988) *
               C50795 * C275 -
           (((C117 * C2448 + C2473 + C2473 + C50892 * C2454) * C24380 +
             C2491 * C51053 + C349 * C51052) *
                C50739 +
            (C24544 + C24543 + C24542) * C50988) *
               C50795 * C277) *
              C50766)) /
            (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C51052 +
             C2486 * C51053 + C2487 * C24380) *
                C50988 +
            (C24384 + C24385 + C24386) * C50739) *
               C50795 * C51048 -
           ((C24539 + C24540 + C24541) * C50739 +
            (C2489 * C24380 + C2487 * C51053 + C2486 * C51052) * C50988) *
               C50795 * C51049 +
           ((C2487 * C51052 + C2489 * C51053 + C3457 * C24380) * C50988 +
            (C24542 + C24543 + C24544) * C50739) *
               C50795 * C1328) *
              C50995 +
          (((C24541 + C24540 + C24539) * C50988 +
            (C24843 + C24844 + C24845) * C50739) *
               C50795 * C51049 -
           ((C24387 + C24388 + C24389) * C50739 +
            (C24386 + C24385 + C24384) * C50988) *
               C50795 * C51048 -
           (((C117 * C2448 + C2473 + C2473 + C50892 * C2454) * C24380 +
             C2491 * C51053 + C349 * C51052) *
                C50739 +
            (C24544 + C24543 + C24542) * C50988) *
               C50795 * C1328) *
              C50766)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C51052 +
             C2486 * C51053 + C2487 * C24380) *
                C50988 +
            (C24384 + C24385 + C24386) * C50739) *
               C51004 -
           ((C24691 + C24692 + C24693) * C50739 +
            (C3197 * C24380 + C3198 * C51053 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C51052) *
                C50988) *
               C50859) *
              C51048 +
          (((C3198 * C51052 + C3197 * C51053 + C4120 * C24380) * C50988 +
            (C25189 + C25190 + C25191) * C50739) *
               C50859 -
           ((C24539 + C24540 + C24541) * C50739 +
            (C2489 * C24380 + C2487 * C51053 + C2486 * C51052) * C50988) *
               C51004) *
              C51049 +
          (((C2487 * C51052 + C2489 * C51053 + C3457 * C24380) * C50988 +
            (C24542 + C24543 + C24544) * C50739) *
               C51004 -
           (((C117 * C4107 + C4116 + C4116 + C50892 * C4111) * C24380 +
             C3199 * C51053 + C2668 * C51052) *
                C50739 +
            (C20952 * C24380 + C4120 * C51053 + C3197 * C51052) * C50988) *
               C50859) *
              C1328) *
         C50760) /
        (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C51052 +
            C2486 * C51053 + C2487 * C24380) *
               C50988 +
           (C24384 + C24385 + C24386) * C50739) *
              C50795 * C1093 -
          ((C24539 + C24540 + C24541) * C50739 +
           (C2489 * C24380 + C2487 * C51053 + C2486 * C51052) * C50988) *
              C50795 * C1094 +
          ((C2487 * C51052 + C2489 * C51053 + C3457 * C24380) * C50988 +
           (C24542 + C24543 + C24544) * C50739) *
              C50795 * C1095 -
          (((C117 * C3444 + C3453 + C3453 + C50892 * C3448) * C24380 +
            C2490 * C51053 + C2488 * C51052) *
               C50739 +
           (C20510 * C24380 + C3457 * C51053 + C2489 * C51052) * C50988) *
              C50795 * C1096) *
         C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C51052 +
             C2486 * C51053 + C2487 * C24380) *
                C50988 +
            (C24384 + C24385 + C24386) * C50739) *
               C50795 * C1022 -
           ((C24539 + C24540 + C24541) * C50739 +
            (C2489 * C24380 + C2487 * C51053 + C2486 * C51052) * C50988) *
               C50795 * C50831) *
              C1024 +
          (((C24541 + C24540 + C24539) * C50988 +
            (C24843 + C24844 + C24845) * C50739) *
               C50795 * C50831 -
           ((C24387 + C24388 + C24389) * C50739 +
            (C24386 + C24385 + C24384) * C50988) *
               C50795 * C1022) *
              C1025 +
          (((C24389 + C24388 + C24387) * C50988 +
            (C24390 + C24391 + C24392) * C50739) *
               C50795 * C1022 -
           (((C117 * C1098 + C1111 + C1111 + C50892 * C1106) * C24380 +
             C350 * C51053 + C345 * C51052) *
                C50739 +
            (C24845 + C24844 + C24843) * C50988) *
               C50795 * C50831) *
              C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C51052 +
             C2486 * C51053 + C2487 * C24380) *
                C50988 +
            (C24384 + C24385 + C24386) * C50739) *
               C454 -
           ((C24691 + C24692 + C24693) * C50739 +
            (C3197 * C24380 + C3198 * C51053 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C51052) *
                C50988) *
               C455 +
           (((C117 * C461 + C498 + C498 + C50892 * C481) * C51052 +
             C3620 * C51053 + C3621 * C24380) *
                C50988 +
            (C24694 + C24695 + C24696) * C50739) *
               C456) *
              C1022 +
          (((C3198 * C51052 + C3197 * C51053 + C4120 * C24380) * C50988 +
            (C25189 + C25190 + C25191) * C50739) *
               C455 -
           ((C24539 + C24540 + C24541) * C50739 +
            (C2489 * C24380 + C2487 * C51053 + C2486 * C51052) * C50988) *
               C454 -
           (((C117 * C3603 + C3614 + C3614 + C50892 * C3607) * C24380 +
             C2670 * C51053 + C2669 * C51052) *
                C50739 +
            (C20617 * C24380 + C3621 * C51053 + C3620 * C51052) * C50988) *
               C456) *
              C50831) *
         C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50892 * C133) * C51052 +
              C2486 * C51053 + C2487 * C24380) *
                 C50988 +
             (C24384 + C24385 + C24386) * C50739) *
                C51004 -
            ((C24691 + C24692 + C24693) * C50739 +
             (C3197 * C24380 + C3198 * C51053 +
              (C117 * C460 + C497 + C497 + C50892 * C480) * C51052) *
                 C50988) *
                C50859) *
               C1022 +
           (((C3198 * C51052 + C3197 * C51053 + C4120 * C24380) * C50988 +
             (C25189 + C25190 + C25191) * C50739) *
                C50859 -
            ((C24539 + C24540 + C24541) * C50739 +
             (C2489 * C24380 + C2487 * C51053 + C2486 * C51052) * C50988) *
                C51004) *
               C50831) *
              C50995 +
          ((((C24693 + C24692 + C24691) * C50988 +
             (C24992 + C24993 + C24994) * C50739) *
                C50859 -
            ((C24387 + C24388 + C24389) * C50739 +
             (C24386 + C24385 + C24384) * C50988) *
                C51004) *
               C1022 +
           (((C24541 + C24540 + C24539) * C50988 +
             (C24843 + C24844 + C24845) * C50739) *
                C51004 -
            (((C117 * C3172 + C3190 + C3190 + C50892 * C3178) * C24380 +
              C2975 * C51053 + C920 * C51052) *
                 C50739 +
             (C25191 + C25190 + C25189) * C50988) *
                C50859) *
               C50831) *
              C50766)) /
        (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C51052 +
             C2486 * C51053 + C2487 * C24380) *
                C50988 +
            (C24384 + C24385 + C24386) * C50739) *
               C50795 * C1022 -
           ((C24539 + C24540 + C24541) * C50739 +
            (C2489 * C24380 + C2487 * C51053 + C2486 * C51052) * C50988) *
               C50795 * C50831) *
              C1024 +
          (((C24541 + C24540 + C24539) * C50988 +
            (C24843 + C24844 + C24845) * C50739) *
               C50795 * C50831 -
           ((C24387 + C24388 + C24389) * C50739 +
            (C24386 + C24385 + C24384) * C50988) *
               C50795 * C1022) *
              C1025 +
          (((C24389 + C24388 + C24387) * C50988 +
            (C24390 + C24391 + C24392) * C50739) *
               C50795 * C1022 -
           (((C117 * C1098 + C1111 + C1111 + C50892 * C1106) * C24380 +
             C350 * C51053 + C345 * C51052) *
                C50739 +
            (C24845 + C24844 + C24843) * C50988) *
               C50795 * C50831) *
              C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C51052 +
            C2486 * C51053 + C2487 * C24380) *
               C50988 +
           (C24384 + C24385 + C24386) * C50739) *
              C50795 * C1093 -
          ((C24539 + C24540 + C24541) * C50739 +
           (C2489 * C24380 + C2487 * C51053 + C2486 * C51052) * C50988) *
              C50795 * C1094 +
          ((C2487 * C51052 + C2489 * C51053 + C3457 * C24380) * C50988 +
           (C24542 + C24543 + C24544) * C50739) *
              C50795 * C1095 -
          (((C117 * C3444 + C3453 + C3453 + C50892 * C3448) * C24380 +
            C2490 * C51053 + C2488 * C51052) *
               C50739 +
           (C20510 * C24380 + C3457 * C51053 + C2489 * C51052) * C50988) *
              C50795 * C1096) *
         C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50892 * C133) * C51052 +
              C2486 * C51053 + C2487 * C24380) *
                 C50988 +
             (C24384 + C24385 + C24386) * C50739) *
                C1673 -
            ((C24691 + C24692 + C24693) * C50739 +
             (C3197 * C24380 + C3198 * C51053 +
              (C117 * C460 + C497 + C497 + C50892 * C480) * C51052) *
                 C50988) *
                C50859) *
               C51003 +
           (((C3198 * C51052 + C3197 * C51053 + C4120 * C24380) * C50988 +
             (C25189 + C25190 + C25191) * C50739) *
                C50859 -
            ((C24539 + C24540 + C24541) * C50739 +
             (C2489 * C24380 + C2487 * C51053 + C2486 * C51052) * C50988) *
                C1673) *
               C50831) *
              C50995 +
          ((((C24693 + C24692 + C24691) * C50988 +
             (C24992 + C24993 + C24994) * C50739) *
                C50859 -
            ((C24387 + C24388 + C24389) * C50739 +
             (C24386 + C24385 + C24384) * C50988) *
                C1673) *
               C51003 +
           (((C24541 + C24540 + C24539) * C50988 +
             (C24843 + C24844 + C24845) * C50739) *
                C1673 -
            (((C117 * C3172 + C3190 + C3190 + C50892 * C3178) * C24380 +
              C2975 * C51053 + C920 * C51052) *
                 C50739 +
             (C25191 + C25190 + C25189) * C50988) *
                C50859) *
               C50831) *
              C50766)) /
        (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C51052 +
             C2486 * C51053 + C2487 * C24380) *
                C50988 +
            (C24384 + C24385 + C24386) * C50739) *
               C51050 -
           ((C24691 + C24692 + C24693) * C50739 +
            (C3197 * C24380 + C3198 * C51053 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C51052) *
                C50988) *
               C51051 +
           (((C117 * C461 + C498 + C498 + C50892 * C481) * C51052 +
             C3620 * C51053 + C3621 * C24380) *
                C50988 +
            (C24694 + C24695 + C24696) * C50739) *
               C2089) *
              C51003 +
          (((C3198 * C51052 + C3197 * C51053 + C4120 * C24380) * C50988 +
            (C25189 + C25190 + C25191) * C50739) *
               C51051 -
           ((C24539 + C24540 + C24541) * C50739 +
            (C2489 * C24380 + C2487 * C51053 + C2486 * C51052) * C50988) *
               C51050 -
           (((C117 * C3603 + C3614 + C3614 + C50892 * C3607) * C24380 +
             C2670 * C51053 + C2669 * C51052) *
                C50739 +
            (C20617 * C24380 + C3621 * C51053 + C3620 * C51052) * C50988) *
               C2089) *
              C50831) *
         C50760) /
        (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C51052 +
             C2486 * C51053 + C2487 * C24380) *
                C50988 +
            (C24384 + C24385 + C24386) * C50739) *
               C1673 -
           ((C24691 + C24692 + C24693) * C50739 +
            (C3197 * C24380 + C3198 * C51053 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C51052) *
                C50988) *
               C50859) *
              C275 +
          (((C3198 * C51052 + C3197 * C51053 + C4120 * C24380) * C50988 +
            (C25189 + C25190 + C25191) * C50739) *
               C50859 -
           ((C24539 + C24540 + C24541) * C50739 +
            (C2489 * C24380 + C2487 * C51053 + C2486 * C51052) * C50988) *
               C1673) *
              C276 +
          (((C2487 * C51052 + C2489 * C51053 + C3457 * C24380) * C50988 +
            (C24542 + C24543 + C24544) * C50739) *
               C1673 -
           (((C117 * C4107 + C4116 + C4116 + C50892 * C4111) * C24380 +
             C3199 * C51053 + C2668 * C51052) *
                C50739 +
            (C20952 * C24380 + C4120 * C51053 + C3197 * C51052) * C50988) *
               C50859) *
              C277) *
         C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C51052 +
             C2486 * C51053 + C2487 * C24380) *
                C50988 +
            (C24384 + C24385 + C24386) * C50739) *
               C1673 -
           ((C24691 + C24692 + C24693) * C50739 +
            (C3197 * C24380 + C3198 * C51053 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C51052) *
                C50988) *
               C50859) *
              C50779 * C1024 +
          (((C24693 + C24692 + C24691) * C50988 +
            (C24992 + C24993 + C24994) * C50739) *
               C50859 -
           ((C24387 + C24388 + C24389) * C50739 +
            (C24386 + C24385 + C24384) * C50988) *
               C1673) *
              C50779 * C1025 +
          (((C24389 + C24388 + C24387) * C50988 +
            (C24390 + C24391 + C24392) * C50739) *
               C1673 -
           (((C117 * C1559 + C1572 + C1572 + C50892 * C1567) * C24380 +
             C921 * C51053 + C522 * C51052) *
                C50739 +
            (C24994 + C24993 + C24992) * C50988) *
               C50859) *
              C50779 * C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C51052 +
            C2486 * C51053 + C2487 * C24380) *
               C50988 +
           (C24384 + C24385 + C24386) * C50739) *
              C1839 -
          ((C24691 + C24692 + C24693) * C50739 +
           (C3197 * C24380 + C3198 * C51053 +
            (C117 * C460 + C497 + C497 + C50892 * C480) * C51052) *
               C50988) *
              C1840 +
          (((C117 * C461 + C498 + C498 + C50892 * C481) * C51052 +
            C3620 * C51053 + C3621 * C24380) *
               C50988 +
           (C24694 + C24695 + C24696) * C50739) *
              C1841 -
          (((C117 * C4510 + C4523 + C4523 + C50892 * C4518) * C24380 +
            (C117 * C4511 + C4524 + C4524 + C50892 * C4519) * C51053 +
            (C117 * C1845 + C1858 + C1858 + C50892 * C1853) * C51052) *
               C50739 +
           ((C117 * C4512 + C4525 + C4525 + C50892 * C4520) * C24380 +
            (C117 * C4513 + C4526 + C4526 + C50892 * C4521) * C51053 +
            (C117 * C1846 + C1859 + C1859 + C50892 * C1854) * C51052) *
               C50988) *
              C1842) *
         C50779 * C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[88] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C117 * C119 + C141 + C141 + C50892 * C133) * C51052 +
                     C2486 * C51053 + C2487 * C24380) *
                        C50988 +
                    (C24384 + C24385 + C24386) * C50739) *
                       C51050 -
                   ((C24691 + C24692 + C24693) * C50739 +
                    (C3197 * C24380 + C3198 * C51053 +
                     (C117 * C460 + C497 + C497 + C50892 * C480) * C51052) *
                        C50988) *
                       C51051 +
                   (((C117 * C461 + C498 + C498 + C50892 * C481) * C51052 +
                     C3620 * C51053 + C3621 * C24380) *
                        C50988 +
                    (C24694 + C24695 + C24696) * C50739) *
                       C2089) *
                      C50779 * C50995 +
                  (((C24693 + C24692 + C24691) * C50988 +
                    (C24992 + C24993 + C24994) * C50739) *
                       C51051 -
                   ((C24387 + C24388 + C24389) * C50739 +
                    (C24386 + C24385 + C24384) * C50988) *
                       C51050 -
                   (((C117 * C2642 + C2661 + C2661 + C50892 * C2648) * C24380 +
                     C8338 * C51053 + C526 * C51052) *
                        C50739 +
                    (C24696 + C24695 + C24694) * C50988) *
                       C2089) *
                      C50779 * C50766)) /
                (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C51052 +
             C2486 * C51053 + C2487 * C24380) *
                C50988 +
            (C24384 + C24385 + C24386) * C50739) *
               C1673 -
           ((C24691 + C24692 + C24693) * C50739 +
            (C3197 * C24380 + C3198 * C51053 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C51052) *
                C50988) *
               C50859) *
              C50779 * C1024 +
          (((C24693 + C24692 + C24691) * C50988 +
            (C24992 + C24993 + C24994) * C50739) *
               C50859 -
           ((C24387 + C24388 + C24389) * C50739 +
            (C24386 + C24385 + C24384) * C50988) *
               C1673) *
              C50779 * C1025 +
          (((C24389 + C24388 + C24387) * C50988 +
            (C24390 + C24391 + C24392) * C50739) *
               C1673 -
           (((C117 * C1559 + C1572 + C1572 + C50892 * C1567) * C24380 +
             C921 * C51053 + C522 * C51052) *
                C50739 +
            (C24994 + C24993 + C24992) * C50988) *
               C50859) *
              C50779 * C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C51052 +
             C2486 * C51053 + C2487 * C24380) *
                C50988 +
            (C24384 + C24385 + C24386) * C50739) *
               C1673 -
           ((C24691 + C24692 + C24693) * C50739 +
            (C3197 * C24380 + C3198 * C51053 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C51052) *
                C50988) *
               C50859) *
              C275 +
          (((C3198 * C51052 + C3197 * C51053 + C4120 * C24380) * C50988 +
            (C25189 + C25190 + C25191) * C50739) *
               C50859 -
           ((C24539 + C24540 + C24541) * C50739 +
            (C2489 * C24380 + C2487 * C51053 + C2486 * C51052) * C50988) *
               C1673) *
              C276 +
          (((C2487 * C51052 + C2489 * C51053 + C3457 * C24380) * C50988 +
            (C24542 + C24543 + C24544) * C50739) *
               C1673 -
           (((C117 * C4107 + C4116 + C4116 + C50892 * C4111) * C24380 +
             C3199 * C51053 + C2668 * C51052) *
                C50739 +
            (C20952 * C24380 + C4120 * C51053 + C3197 * C51052) * C50988) *
               C50859) *
              C277) *
         C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
             C10694 + C10694 + C50956 * C480) *
                C51052 +
            (C13823 + C13824) * C51053 + C30680 * C24380) *
               C50734 * C50795 * C51003 -
           ((C15039 + C15038) * C24380 + (C13825 + C13826) * C51053 +
            (C13824 + C13823) * C51052) *
               C50734 * C50795 * C50831) *
              C51046 +
          ((C13799 * C51052 + C13806 * C51053 + (C13827 + C13828) * C24380) *
               C50734 * C50795 * C50831 -
           (C13800 * C24380 + C13801 * C51053 + (C10738 + C10737) * C51052) *
               C50734 * C50795 * C51003) *
              C51047 +
          ((C10745 * C51052 + C14227 * C51053 + (C10949 + C10950) * C24380) *
               C50734 * C50795 * C51003 -
           ((C10690 * C3172 + C11939 + C11939 + C50956 * C3178 +
             C10688 * C1099 + C11940 + C11940 + C51017 * C1107) *
                C24380 +
            (C10950 + C10949) * C51053 + C11299 * C51052) *
               C50734 * C50795 * C50831) *
              C635)) /
        (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
              C10694 + C10694 + C50956 * C480) *
                 C51052 +
             (C13823 + C13824) * C51053 + C30680 * C24380) *
                C50734 * C51004 -
            ((C15907 + C15906) * C24380 + (C14698 + C14699) * C51053 +
             (C10690 * C461 + C11109 + C11109 + C50956 * C481 + C10688 * C460 +
              C11110 + C11110 + C51017 * C480) *
                 C51052) *
                C50734 * C50859) *
               C51003 +
           (((C14699 + C14698) * C51052 + (C15906 + C15907) * C51053 +
             (C10688 * C3170 + C15901 + C15901 + C51017 * C3176 +
              C10690 * C3604 + C15900 + C15900 + C50956 * C3608) *
                 C24380) *
                C50734 * C50859 -
            ((C15039 + C15038) * C24380 + (C13825 + C13826) * C51053 +
             (C13824 + C13823) * C51052) *
                C50734 * C51004) *
               C50831) *
              C278 +
          ((((C11148 + C11147) * C51052 + C14685 * C51053 +
             (C14700 + C14701) * C24380) *
                C50734 * C50859 -
            (C13800 * C24380 + C13801 * C51053 + (C10738 + C10737) * C51052) *
                C50734 * C51004) *
               C51003 +
           ((C13799 * C51052 + C13806 * C51053 + (C13827 + C13828) * C24380) *
                C50734 * C51004 -
            ((C10690 * C3603 + C15898 + C15898 + C50956 * C3607 +
              C10688 * C3171 + C15899 + C15899 + C51017 * C3177) *
                 C24380 +
             (C14701 + C14700) * C51053 + C14680 * C51052) *
                C50734 * C50859) *
               C50831) *
              C50766)) /
        (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
             C10694 + C10694 + C50956 * C480) *
                C51052 +
            (C13823 + C13824) * C51053 + C30680 * C24380) *
               C50734 * C50795 * C275 -
           ((C15039 + C15038) * C24380 + (C13825 + C13826) * C51053 +
            (C13824 + C13823) * C51052) *
               C50734 * C50795 * C276 +
           (C30680 * C51052 + (C15038 + C15039) * C51053 +
            (C10688 * C2446 + C15033 + C15033 + C51017 * C2452 +
             C10690 * C4108 + C15032 + C15032 + C50956 * C4112) *
                C24380) *
               C50734 * C50795 * C277) *
              C278 +
          ((C13799 * C51052 + C13806 * C51053 + (C13827 + C13828) * C24380) *
               C50734 * C50795 * C276 -
           (C13800 * C24380 + C13801 * C51053 + (C10738 + C10737) * C51052) *
               C50734 * C50795 * C275 -
           ((C10690 * C4107 + C15030 + C15030 + C50956 * C4111 +
             C10688 * C2447 + C15031 + C15031 + C51017 * C2453) *
                C24380 +
            (C13828 + C13827) * C51053 + C13800 * C51052) *
               C50734 * C50795 * C277) *
              C50766)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
            C10694 + C10694 + C50956 * C480) *
               C51052 +
           (C13823 + C13824) * C51053 + (C13826 + C13825) * C24380) *
              C50734 * C50795 * C50779 * C113 -
          (C13800 * C24380 + C13801 * C51053 + (C10738 + C10737) * C51052) *
              C50734 * C50795 * C50779 * C114 +
          (C10745 * C51052 + C14227 * C51053 + (C10949 + C10950) * C24380) *
              C50734 * C50795 * C50779 * C115 -
          ((C10690 * C1559 + C10925 + C10925 + C50956 * C1567 + C10688 * C287 +
            C10926 + C10926 + C51017 * C307) *
               C24380 +
           (C11312 + C11311) * C51053 + C10746 * C51052) *
              C50734 * C50795 * C50779 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
             C10694 + C10694 + C50956 * C480) *
                C51052 +
            (C13823 + C13824) * C51053 + C30680 * C24380) *
               C50734 * C454 -
           ((C15907 + C15906) * C24380 + (C14698 + C14699) * C51053 +
            (C10690 * C461 + C11109 + C11109 + C50956 * C481 + C10688 * C460 +
             C11110 + C11110 + C51017 * C480) *
                C51052) *
               C50734 * C455 +
           ((C10688 * C461 + C11111 + C11111 + C51017 * C481 + C10690 * C1846 +
             C11112 + C11112 + C50956 * C1854) *
                C51052 +
            (C15246 + C15247) * C51053 +
            (C10688 * C2640 + C15241 + C15241 + C51017 * C2646 +
             C10690 * C4512 + C15240 + C15240 + C50956 * C4520) *
                C24380) *
               C50734 * C456) *
              C50779 * C278 +
          (((C11148 + C11147) * C51052 + C14685 * C51053 +
            (C14700 + C14701) * C24380) *
               C50734 * C455 -
           (C13800 * C24380 + C13801 * C51053 + (C10738 + C10737) * C51052) *
               C50734 * C454 -
           ((C10690 * C4510 + C15238 + C15238 + C50956 * C4518 +
             C10688 * C2641 + C15239 + C15239 + C51017 * C2647) *
                C24380 +
            (C14032 + C14031) * C51053 + (C11150 + C11149) * C51052) *
               C50734 * C456) *
              C50779 * C50766)) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
             C10694 + C10694 + C50956 * C480) *
                C51052 +
            (C13823 + C13824) * C51053 + C30680 * C24380) *
               C50734 * C51004 -
           ((C15907 + C15906) * C24380 + (C14698 + C14699) * C51053 +
            (C10690 * C461 + C11109 + C11109 + C50956 * C481 + C10688 * C460 +
             C11110 + C11110 + C51017 * C480) *
                C51052) *
               C50734 * C50859) *
              C50779 * C51046 +
          (((C11148 + C11147) * C51052 + C14685 * C51053 +
            (C14700 + C14701) * C24380) *
               C50734 * C50859 -
           (C13800 * C24380 + C13801 * C51053 + (C10738 + C10737) * C51052) *
               C50734 * C51004) *
              C50779 * C51047 +
          ((C10745 * C51052 + C14227 * C51053 + (C10949 + C10950) * C24380) *
               C50734 * C51004 -
           ((C10690 * C2642 + C12583 + C12583 + C50956 * C2648 +
             C10688 * C1560 + C12584 + C12584 + C51017 * C1568) *
                C24380 +
            (C11694 + C11693) * C51053 + C11459 * C51052) *
               C50734 * C50859) *
              C50779 * C635)) /
        (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
            C10694 + C10694 + C50956 * C480) *
               C51052 +
           (C13823 + C13824) * C51053 + (C13826 + C13825) * C24380) *
              C50734 * C50795 * C50779 * C113 -
          (C13800 * C24380 + C13801 * C51053 + (C10738 + C10737) * C51052) *
              C50734 * C50795 * C50779 * C114 +
          (C10745 * C51052 + C14227 * C51053 + (C10949 + C10950) * C24380) *
              C50734 * C50795 * C50779 * C115 -
          ((C10690 * C1559 + C10925 + C10925 + C50956 * C1567 + C10688 * C287 +
            C10926 + C10926 + C51017 * C307) *
               C24380 +
           (C11312 + C11311) * C51053 + C10746 * C51052) *
              C50734 * C50795 * C50779 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
             C10694 + C10694 + C50956 * C480) *
                C51052 +
            (C13823 + C13824) * C51053 + C30680 * C24380) *
               C50734 * C50795 * C275 -
           ((C15039 + C15038) * C24380 + (C13825 + C13826) * C51053 +
            (C13824 + C13823) * C51052) *
               C50734 * C50795 * C276 +
           (C30680 * C51052 + (C15038 + C15039) * C51053 +
            (C10688 * C2446 + C15033 + C15033 + C51017 * C2452 +
             C10690 * C4108 + C15032 + C15032 + C50956 * C4112) *
                C24380) *
               C50734 * C50795 * C277) *
              C278 +
          ((C13799 * C51052 + C13806 * C51053 + (C13827 + C13828) * C24380) *
               C50734 * C50795 * C276 -
           (C13800 * C24380 + C13801 * C51053 + (C10738 + C10737) * C51052) *
               C50734 * C50795 * C275 -
           ((C10690 * C4107 + C15030 + C15030 + C50956 * C4111 +
             C10688 * C2447 + C15031 + C15031 + C51017 * C2453) *
                C24380 +
            (C13828 + C13827) * C51053 + C13800 * C51052) *
               C50734 * C50795 * C277) *
              C50766)) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
             C10694 + C10694 + C50956 * C480) *
                C51052 +
            (C13823 + C13824) * C51053 + C30680 * C24380) *
               C50734 * C50795 * C51048 -
           (C31557 * C24380 + (C13825 + C13826) * C51053 +
            (C13824 + C13823) * C51052) *
               C50734 * C50795 * C51049 +
           (C30680 * C51052 + (C15038 + C15039) * C51053 +
            (C31568 + C31569) * C24380) *
               C50734 * C50795 * C1328) *
              C50995 +
          ((C13799 * C51052 + C13806 * C51053 + (C13827 + C13828) * C24380) *
               C50734 * C50795 * C51049 -
           (C13800 * C24380 + C13801 * C51053 + (C10738 + C10737) * C51052) *
               C50734 * C50795 * C51048 -
           ((C10690 * C4107 + C15030 + C15030 + C50956 * C4111 +
             C10688 * C2447 + C15031 + C15031 + C51017 * C2453) *
                C24380 +
            (C13828 + C13827) * C51053 + C13800 * C51052) *
               C50734 * C50795 * C1328) *
              C50766)) /
        (p * q * std::sqrt(p + q));
    d2ee[96] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C10688 * C119 + C10693 + C10693 + C51017 * C133 +
                     C10690 * C460 + C10694 + C10694 + C50956 * C480) *
                        C51052 +
                    (C13823 + C13824) * C51053 + C30680 * C24380) *
                       C50734 * C51004 -
                   (C32214 * C24380 + (C14698 + C14699) * C51053 +
                    (C10690 * C461 + C11109 + C11109 + C50956 * C481 +
                     C10688 * C460 + C11110 + C11110 + C51017 * C480) *
                        C51052) *
                       C50734 * C50859) *
                      C51048 +
                  (((C14699 + C14698) * C51052 + (C15906 + C15907) * C51053 +
                    (C32225 + C32226) * C24380) *
                       C50734 * C50859 -
                   (C31557 * C24380 + (C13825 + C13826) * C51053 +
                    (C13824 + C13823) * C51052) *
                       C50734 * C51004) *
                      C51049 +
                  ((C30680 * C51052 + (C15038 + C15039) * C51053 +
                    (C31568 + C31569) * C24380) *
                       C50734 * C51004 -
                   ((C10690 * C20608 + C32219 + C32219 + C50956 * C20610 +
                     C10688 * C4108 + C32220 + C32220 + C51017 * C4112) *
                        C24380 +
                    (C32226 + C32225) * C51053 + C32214 * C51052) *
                       C50734 * C50859) *
                      C1328) *
                 C50760) /
                (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
            C10694 + C10694 + C50956 * C480) *
               C51052 +
           (C13823 + C13824) * C51053 + C30680 * C24380) *
              C50734 * C50795 * C1093 -
          (C31557 * C24380 + (C13825 + C13826) * C51053 +
           (C13824 + C13823) * C51052) *
              C50734 * C50795 * C1094 +
          (C30680 * C51052 + (C15038 + C15039) * C51053 +
           (C31568 + C31569) * C24380) *
              C50734 * C50795 * C1095 -
          ((C10690 * C20943 + C31562 + C31562 + C50956 * C20945 +
            C10688 * C3445 + C31563 + C31563 + C51017 * C3449) *
               C24380 +
           (C31569 + C31568) * C51053 + C31557 * C51052) *
              C50734 * C50795 * C1096) *
         C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
             C10694 + C10694 + C50956 * C480) *
                C51052 +
            (C13823 + C13824) * C51053 + C30680 * C24380) *
               C50734 * C50795 * C1022 -
           ((C15039 + C15038) * C24380 + (C13825 + C13826) * C51053 +
            (C13824 + C13823) * C51052) *
               C50734 * C50795 * C50831) *
              C1024 +
          ((C13799 * C51052 + C13806 * C51053 + (C13827 + C13828) * C24380) *
               C50734 * C50795 * C50831 -
           (C13800 * C24380 + C13801 * C51053 + (C10738 + C10737) * C51052) *
               C50734 * C50795 * C1022) *
              C1025 +
          ((C10745 * C51052 + C14227 * C51053 + (C10949 + C10950) * C24380) *
               C50734 * C50795 * C1022 -
           ((C10690 * C3172 + C11939 + C11939 + C50956 * C3178 +
             C10688 * C1099 + C11940 + C11940 + C51017 * C1107) *
                C24380 +
            (C10950 + C10949) * C51053 + C11299 * C51052) *
               C50734 * C50795 * C50831) *
              C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
             C10694 + C10694 + C50956 * C480) *
                C51052 +
            (C13823 + C13824) * C51053 + C30680 * C24380) *
               C50734 * C454 -
           ((C15907 + C15906) * C24380 + (C14698 + C14699) * C51053 +
            (C10690 * C461 + C11109 + C11109 + C50956 * C481 + C10688 * C460 +
             C11110 + C11110 + C51017 * C480) *
                C51052) *
               C50734 * C455 +
           ((C10688 * C461 + C11111 + C11111 + C51017 * C481 + C10690 * C1846 +
             C11112 + C11112 + C50956 * C1854) *
                C51052 +
            (C15246 + C15247) * C51053 + (C31726 + C31727) * C24380) *
               C50734 * C456) *
              C1022 +
          (((C14699 + C14698) * C51052 + (C15906 + C15907) * C51053 +
            (C10688 * C3170 + C15901 + C15901 + C51017 * C3176 +
             C10690 * C3604 + C15900 + C15900 + C50956 * C3608) *
                C24380) *
               C50734 * C455 -
           (C31557 * C24380 + (C13825 + C13826) * C51053 +
            (C13824 + C13823) * C51052) *
               C50734 * C454 -
           ((C10690 * C21214 + C31720 + C31720 + C50956 * C21216 +
             C10688 * C3604 + C31721 + C31721 + C51017 * C3608) *
                C24380 +
            (C31727 + C31726) * C51053 + (C15247 + C15246) * C51052) *
               C50734 * C456) *
              C50831) *
         C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
              C10694 + C10694 + C50956 * C480) *
                 C51052 +
             (C13823 + C13824) * C51053 + C30680 * C24380) *
                C50734 * C51004 -
            ((C15907 + C15906) * C24380 + (C14698 + C14699) * C51053 +
             (C10690 * C461 + C11109 + C11109 + C50956 * C481 + C10688 * C460 +
              C11110 + C11110 + C51017 * C480) *
                 C51052) *
                C50734 * C50859) *
               C1022 +
           (((C14699 + C14698) * C51052 + (C15906 + C15907) * C51053 +
             (C10688 * C3170 + C15901 + C15901 + C51017 * C3176 +
              C10690 * C3604 + C15900 + C15900 + C50956 * C3608) *
                 C24380) *
                C50734 * C50859 -
            (C31557 * C24380 + (C13825 + C13826) * C51053 +
             (C13824 + C13823) * C51052) *
                C50734 * C51004) *
               C50831) *
              C50995 +
          ((((C11148 + C11147) * C51052 + C14685 * C51053 +
             (C14700 + C14701) * C24380) *
                C50734 * C50859 -
            (C13800 * C24380 + C13801 * C51053 + (C10738 + C10737) * C51052) *
                C50734 * C51004) *
               C1022 +
           ((C13799 * C51052 + C13806 * C51053 + (C13827 + C13828) * C24380) *
                C50734 * C51004 -
            ((C10690 * C3603 + C15898 + C15898 + C50956 * C3607 +
              C10688 * C3171 + C15899 + C15899 + C51017 * C3177) *
                 C24380 +
             (C14701 + C14700) * C51053 + C14680 * C51052) *
                C50734 * C50859) *
               C50831) *
              C50766)) /
        (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
             C10694 + C10694 + C50956 * C480) *
                C51052 +
            (C13823 + C13824) * C51053 + C30680 * C24380) *
               C50734 * C50795 * C1022 -
           ((C15039 + C15038) * C24380 + (C13825 + C13826) * C51053 +
            (C13824 + C13823) * C51052) *
               C50734 * C50795 * C50831) *
              C1024 +
          ((C13799 * C51052 + C13806 * C51053 + (C13827 + C13828) * C24380) *
               C50734 * C50795 * C50831 -
           (C13800 * C24380 + C13801 * C51053 + (C10738 + C10737) * C51052) *
               C50734 * C50795 * C1022) *
              C1025 +
          ((C10745 * C51052 + C14227 * C51053 + (C10949 + C10950) * C24380) *
               C50734 * C50795 * C1022 -
           ((C10690 * C3172 + C11939 + C11939 + C50956 * C3178 +
             C10688 * C1099 + C11940 + C11940 + C51017 * C1107) *
                C24380 +
            (C10950 + C10949) * C51053 + C11299 * C51052) *
               C50734 * C50795 * C50831) *
              C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
            C10694 + C10694 + C50956 * C480) *
               C51052 +
           (C13823 + C13824) * C51053 + C30680 * C24380) *
              C50734 * C50795 * C1093 -
          (C31557 * C24380 + (C13825 + C13826) * C51053 +
           (C13824 + C13823) * C51052) *
              C50734 * C50795 * C1094 +
          (C30680 * C51052 + (C15038 + C15039) * C51053 +
           (C31568 + C31569) * C24380) *
              C50734 * C50795 * C1095 -
          ((C10690 * C20943 + C31562 + C31562 + C50956 * C20945 +
            C10688 * C3445 + C31563 + C31563 + C51017 * C3449) *
               C24380 +
           (C31569 + C31568) * C51053 + C31557 * C51052) *
              C50734 * C50795 * C1096) *
         C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
              C10694 + C10694 + C50956 * C480) *
                 C51052 +
             (C13823 + C13824) * C51053 + C30680 * C24380) *
                C50734 * C1673 -
            (C32214 * C24380 + (C14698 + C14699) * C51053 +
             (C10690 * C461 + C11109 + C11109 + C50956 * C481 + C10688 * C460 +
              C11110 + C11110 + C51017 * C480) *
                 C51052) *
                C50734 * C50859) *
               C51003 +
           (((C14699 + C14698) * C51052 + (C15906 + C15907) * C51053 +
             (C32225 + C32226) * C24380) *
                C50734 * C50859 -
            (C31557 * C24380 + (C13825 + C13826) * C51053 +
             (C13824 + C13823) * C51052) *
                C50734 * C1673) *
               C50831) *
              C50995 +
          ((((C11148 + C11147) * C51052 + C14685 * C51053 +
             (C14700 + C14701) * C24380) *
                C50734 * C50859 -
            (C13800 * C24380 + C13801 * C51053 + (C10738 + C10737) * C51052) *
                C50734 * C1673) *
               C51003 +
           ((C13799 * C51052 + C13806 * C51053 + (C13827 + C13828) * C24380) *
                C50734 * C1673 -
            ((C10690 * C3603 + C15898 + C15898 + C50956 * C3607 +
              C10688 * C3171 + C15899 + C15899 + C51017 * C3177) *
                 C24380 +
             (C14701 + C14700) * C51053 + C14680 * C51052) *
                C50734 * C50859) *
               C50831) *
              C50766)) /
        (p * q * std::sqrt(p + q));
    d2ee[101] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C10688 * C119 + C10693 + C10693 + C51017 * C133 +
                      C10690 * C460 + C10694 + C10694 + C50956 * C480) *
                         C51052 +
                     (C13823 + C13824) * C51053 + C30680 * C24380) *
                        C50734 * C51050 -
                    (C32214 * C24380 + (C14698 + C14699) * C51053 +
                     (C10690 * C461 + C11109 + C11109 + C50956 * C481 +
                      C10688 * C460 + C11110 + C11110 + C51017 * C480) *
                         C51052) *
                        C50734 * C51051 +
                    ((C10688 * C461 + C11111 + C11111 + C51017 * C481 +
                      C10690 * C1846 + C11112 + C11112 + C50956 * C1854) *
                         C51052 +
                     (C15246 + C15247) * C51053 + (C31726 + C31727) * C24380) *
                        C50734 * C2089) *
                       C51003 +
                   (((C14699 + C14698) * C51052 + (C15906 + C15907) * C51053 +
                     (C32225 + C32226) * C24380) *
                        C50734 * C51051 -
                    (C31557 * C24380 + (C13825 + C13826) * C51053 +
                     (C13824 + C13823) * C51052) *
                        C50734 * C51050 -
                    ((C10690 * C21214 + C31720 + C31720 + C50956 * C21216 +
                      C10688 * C3604 + C31721 + C31721 + C51017 * C3608) *
                         C24380 +
                     (C31727 + C31726) * C51053 + (C15247 + C15246) * C51052) *
                        C50734 * C2089) *
                       C50831) *
                  C50760) /
                 (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
             C10694 + C10694 + C50956 * C480) *
                C51052 +
            (C13823 + C13824) * C51053 + C30680 * C24380) *
               C50734 * C1673 -
           (C32214 * C24380 + (C14698 + C14699) * C51053 +
            (C10690 * C461 + C11109 + C11109 + C50956 * C481 + C10688 * C460 +
             C11110 + C11110 + C51017 * C480) *
                C51052) *
               C50734 * C50859) *
              C275 +
          (((C14699 + C14698) * C51052 + (C15906 + C15907) * C51053 +
            (C32225 + C32226) * C24380) *
               C50734 * C50859 -
           (C31557 * C24380 + (C13825 + C13826) * C51053 +
            (C13824 + C13823) * C51052) *
               C50734 * C1673) *
              C276 +
          ((C30680 * C51052 + (C15038 + C15039) * C51053 +
            (C31568 + C31569) * C24380) *
               C50734 * C1673 -
           ((C10690 * C20608 + C32219 + C32219 + C50956 * C20610 +
             C10688 * C4108 + C32220 + C32220 + C51017 * C4112) *
                C24380 +
            (C32226 + C32225) * C51053 + C32214 * C51052) *
               C50734 * C50859) *
              C277) *
         C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
             C10694 + C10694 + C50956 * C480) *
                C51052 +
            (C13823 + C13824) * C51053 + C30680 * C24380) *
               C50734 * C1673 -
           (C32214 * C24380 + (C14698 + C14699) * C51053 +
            (C10690 * C461 + C11109 + C11109 + C50956 * C481 + C10688 * C460 +
             C11110 + C11110 + C51017 * C480) *
                C51052) *
               C50734 * C50859) *
              C50779 * C1024 +
          (((C11148 + C11147) * C51052 + C14685 * C51053 +
            (C14700 + C14701) * C24380) *
               C50734 * C50859 -
           (C13800 * C24380 + C13801 * C51053 + (C10738 + C10737) * C51052) *
               C50734 * C1673) *
              C50779 * C1025 +
          ((C10745 * C51052 + C14227 * C51053 + (C10949 + C10950) * C24380) *
               C50734 * C1673 -
           ((C10690 * C2642 + C12583 + C12583 + C50956 * C2648 +
             C10688 * C1560 + C12584 + C12584 + C51017 * C1568) *
                C24380 +
            (C11694 + C11693) * C51053 + C11459 * C51052) *
               C50734 * C50859) *
              C50779 * C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
            C10694 + C10694 + C50956 * C480) *
               C51052 +
           (C13823 + C13824) * C51053 + C30680 * C24380) *
              C50734 * C1839 -
          (C32214 * C24380 + (C14698 + C14699) * C51053 +
           (C10690 * C461 + C11109 + C11109 + C50956 * C481 + C10688 * C460 +
            C11110 + C11110 + C51017 * C480) *
               C51052) *
              C50734 * C1840 +
          ((C10688 * C461 + C11111 + C11111 + C51017 * C481 + C10690 * C1846 +
            C11112 + C11112 + C50956 * C1854) *
               C51052 +
           (C15246 + C15247) * C51053 + (C31726 + C31727) * C24380) *
              C50734 * C1841 -
          ((C10690 * C22873 + C32617 + C32617 + C50956 * C22875 +
            C10688 * C4512 + C32618 + C32618 + C51017 * C4520) *
               C24380 +
           (C10690 * C6522 + C16428 + C16428 + C50956 * C6526 + C10688 * C4513 +
            C16429 + C16429 + C51017 * C4521) *
               C51053 +
           (C10690 * C5519 + C12983 + C12983 + C50956 * C5525 + C10688 * C1846 +
            C12984 + C12984 + C51017 * C1854) *
               C51052) *
              C50734 * C1842) *
         C50779 * C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
             C10694 + C10694 + C50956 * C480) *
                C51052 +
            (C13823 + C13824) * C51053 + C30680 * C24380) *
               C50734 * C51050 -
           (C32214 * C24380 + (C14698 + C14699) * C51053 +
            (C10690 * C461 + C11109 + C11109 + C50956 * C481 + C10688 * C460 +
             C11110 + C11110 + C51017 * C480) *
                C51052) *
               C50734 * C51051 +
           ((C10688 * C461 + C11111 + C11111 + C51017 * C481 + C10690 * C1846 +
             C11112 + C11112 + C50956 * C1854) *
                C51052 +
            (C15246 + C15247) * C51053 + (C31726 + C31727) * C24380) *
               C50734 * C2089) *
              C50779 * C50995 +
          (((C11148 + C11147) * C51052 + C14685 * C51053 +
            (C14700 + C14701) * C24380) *
               C50734 * C51051 -
           (C13800 * C24380 + C13801 * C51053 + (C10738 + C10737) * C51052) *
               C50734 * C51050 -
           ((C10690 * C4510 + C15238 + C15238 + C50956 * C4518 +
             C10688 * C2641 + C15239 + C15239 + C51017 * C2647) *
                C24380 +
            (C14032 + C14031) * C51053 + (C11150 + C11149) * C51052) *
               C50734 * C2089) *
              C50779 * C50766)) /
        (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
             C10694 + C10694 + C50956 * C480) *
                C51052 +
            (C13823 + C13824) * C51053 + C30680 * C24380) *
               C50734 * C1673 -
           (C32214 * C24380 + (C14698 + C14699) * C51053 +
            (C10690 * C461 + C11109 + C11109 + C50956 * C481 + C10688 * C460 +
             C11110 + C11110 + C51017 * C480) *
                C51052) *
               C50734 * C50859) *
              C50779 * C1024 +
          (((C11148 + C11147) * C51052 + C14685 * C51053 +
            (C14700 + C14701) * C24380) *
               C50734 * C50859 -
           (C13800 * C24380 + C13801 * C51053 + (C10738 + C10737) * C51052) *
               C50734 * C1673) *
              C50779 * C1025 +
          ((C10745 * C51052 + C14227 * C51053 + (C10949 + C10950) * C24380) *
               C50734 * C1673 -
           ((C10690 * C2642 + C12583 + C12583 + C50956 * C2648 +
             C10688 * C1560 + C12584 + C12584 + C51017 * C1568) *
                C24380 +
            (C11694 + C11693) * C51053 + C11459 * C51052) *
               C50734 * C50859) *
              C50779 * C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
             C10694 + C10694 + C50956 * C480) *
                C51052 +
            (C13823 + C13824) * C51053 + C30680 * C24380) *
               C50734 * C1673 -
           (C32214 * C24380 + (C14698 + C14699) * C51053 +
            (C10690 * C461 + C11109 + C11109 + C50956 * C481 + C10688 * C460 +
             C11110 + C11110 + C51017 * C480) *
                C51052) *
               C50734 * C50859) *
              C275 +
          (((C14699 + C14698) * C51052 + (C15906 + C15907) * C51053 +
            (C32225 + C32226) * C24380) *
               C50734 * C50859 -
           (C31557 * C24380 + (C13825 + C13826) * C51053 +
            (C13824 + C13823) * C51052) *
               C50734 * C1673) *
              C276 +
          ((C30680 * C51052 + (C15038 + C15039) * C51053 +
            (C31568 + C31569) * C24380) *
               C50734 * C1673 -
           ((C10690 * C20608 + C32219 + C32219 + C50956 * C20610 +
             C10688 * C4108 + C32220 + C32220 + C51017 * C4112) *
                C24380 +
            (C32226 + C32225) * C51053 + C32214 * C51052) *
               C50734 * C50859) *
              C277) *
         C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C19810 +
            C2486 * C19811 + C2487 * C19812 + C2489 * C19813) *
               C50734 * C50795 * C51003 -
           (C3457 * C19813 + C2489 * C19812 + C2487 * C19811 + C2486 * C19810) *
               C50734 * C50795 * C50831) *
              C51046 +
          ((C347 * C19810 + C348 * C19811 + C2488 * C19812 + C2490 * C19813) *
               C50734 * C50795 * C50831 -
           (C2488 * C19813 + C348 * C19812 + C347 * C19811 + C168 * C19810) *
               C50734 * C50795 * C51003) *
              C51047 +
          ((C169 * C19810 + C346 * C19811 + C349 * C19812 + C2491 * C19813) *
               C50734 * C50795 * C51003 -
           ((C117 * C2448 + C2473 + C2473 + C50892 * C2454) * C19813 +
            C2491 * C19812 + C349 * C19811 + C346 * C19810) *
               C50734 * C50795 * C50831) *
              C635)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C17173 +
             C2486 * C50928) *
                C17175 +
            (C17179 + C17180) * C17176 + C17187 * C17177) *
               C50795 * C51003 -
           (C17643 * C17177 + (C17337 + C17338) * C17176 +
            (C2487 * C50928 + C2486 * C17173) * C17175) *
               C50795 * C50831) *
              C51046 +
          (((C17338 + C17337) * C17175 + (C17336 + C17335) * C17176 +
            (C17644 + C17645) * C17177) *
               C50795 * C50831 -
           (C17188 * C17177 + (C17182 + C17181) * C17176 +
            (C17180 + C17179) * C17175) *
               C50795 * C51003) *
              C51047 +
          ((C17187 * C17175 + (C17184 + C17183) * C17176 +
            (C17185 + C17186) * C17177) *
               C50795 * C51003 -
           (((C117 * C289 + C332 + C332 + C50892 * C309) * C50928 +
             C645 * C17173) *
                C17177 +
            (C17645 + C17644) * C17176 + C17643 * C17175) *
               C50795 * C50831) *
              C635)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5113 * C119 + C5120 + C5120 + C5110 * C133 + C5115 * C460 +
             C5121 + C5121 + C5111 * C480 + C5117 * C461 + C5122 + C5122 +
             C5112 * C481) *
                C17173 +
            (C21813 + C21814 + C21815) * C50928) *
               C50734 * C50795 * C51003 -
           ((C21816 + C21817 + C21818) * C50928 +
            (C21815 + C21814 + C21813) * C17173) *
               C50734 * C50795 * C50831) *
              C51046 +
          (((C5370 + C5369 + C5368) * C17173 +
            (C5371 + C5372 + C5373) * C50928) *
               C50734 * C50795 * C50831 -
           ((C5368 + C5369 + C5370) * C50928 +
            (C5173 + C5172 + C5171) * C17173) *
               C50734 * C50795 * C51003) *
              C51047 +
          (((C5176 + C5175 + C5174) * C17173 +
            (C5738 + C5739 + C5740) * C50928) *
               C50734 * C50795 * C51003 -
           ((C5117 * C2642 + C5353 + C5353 + C5112 * C2648 + C5115 * C1560 +
             C5354 + C5354 + C5111 * C1568 + C5113 * C286 + C5355 + C5355 +
             C5110 * C306) *
                C50928 +
            (C5740 + C5739 + C5738) * C17173) *
               C50734 * C50795 * C50831) *
              C635)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C19810 +
             C2486 * C19811 + C2487 * C19812 + C2489 * C19813) *
                C50734 * C51004 -
            (C4120 * C19813 + C3197 * C19812 + C3198 * C19811 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C19810) *
                C50734 * C50859) *
               C51003 +
           ((C3198 * C19810 + C3197 * C19811 + C4120 * C19812 +
             (C117 * C4108 + C4117 + C4117 + C50892 * C4112) * C19813) *
                C50734 * C50859 -
            (C3457 * C19813 + C2489 * C19812 + C2487 * C19811 +
             C2486 * C19810) *
                C50734 * C51004) *
               C50831) *
              C278 +
          (((C524 * C19810 + C919 * C19811 + C2668 * C19812 + C3199 * C19813) *
                C50734 * C50859 -
            (C2488 * C19813 + C348 * C19812 + C347 * C19811 + C168 * C19810) *
                C50734 * C51004) *
               C51003 +
           ((C347 * C19810 + C348 * C19811 + C2488 * C19812 + C2490 * C19813) *
                C50734 * C51004 -
            ((C117 * C4107 + C4116 + C4116 + C50892 * C4111) * C19813 +
             C3199 * C19812 + C2668 * C19811 + C919 * C19810) *
                C50734 * C50859) *
               C50831) *
              C50766)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50892 * C133) * C17173 +
              C2486 * C50928) *
                 C17175 +
             (C17179 + C17180) * C17176 + C17187 * C17177) *
                C51004 -
            (C17792 * C17177 + (C17491 + C17492) * C17176 +
             (C3198 * C50928 +
              (C117 * C460 + C497 + C497 + C50892 * C480) * C17173) *
                 C17175) *
                C50859) *
               C51003 +
           (((C3198 * C17173 + C3197 * C50928) * C17175 +
             (C17989 + C17990) * C17176 + (C17991 + C17992) * C17177) *
                C50859 -
            (C17643 * C17177 + (C17337 + C17338) * C17176 +
             (C2487 * C50928 + C2486 * C17173) * C17175) *
                C51004) *
               C50831) *
              C278 +
          ((((C17492 + C17491) * C17175 + (C17490 + C17489) * C17176 +
             (C17793 + C17794) * C17177) *
                C50859 -
            (C17188 * C17177 + (C17182 + C17181) * C17176 +
             (C17180 + C17179) * C17175) *
                C51004) *
               C51003 +
           (((C17338 + C17337) * C17175 + (C17336 + C17335) * C17176 +
             (C17644 + C17645) * C17177) *
                C51004 -
            (((C117 * C1559 + C1572 + C1572 + C50892 * C1567) * C50928 +
              C921 * C17173) *
                 C17177 +
             (C17992 + C17991) * C17176 + (C17990 + C17989) * C17175) *
                C50859) *
               C50831) *
              C50766)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5113 * C119 + C5120 + C5120 + C5110 * C133 + C5115 * C460 +
              C5121 + C5121 + C5111 * C480 + C5117 * C461 + C5122 + C5122 +
              C5112 * C481) *
                 C17173 +
             (C21813 + C21814 + C21815) * C50928) *
                C50734 * C51004 -
            ((C22463 + C22464 + C22465) * C50928 +
             (C5117 * C1846 + C5538 + C5538 + C5112 * C1854 + C5115 * C461 +
              C5539 + C5539 + C5111 * C481 + C5113 * C460 + C5540 + C5540 +
              C5110 * C480) *
                 C17173) *
                C50734 * C50859) *
               C51003 +
           (((C22465 + C22464 + C22463) * C17173 +
             (C5113 * C1562 + C7025 + C7025 + C5110 * C1570 + C5115 * C2640 +
              C7024 + C7024 + C5111 * C2646 + C5117 * C4512 + C7023 + C7023 +
              C5112 * C4520) *
                 C50928) *
                C50734 * C50859 -
            ((C21816 + C21817 + C21818) * C50928 +
             (C21815 + C21814 + C21813) * C17173) *
                C50734 * C51004) *
               C50831) *
              C278 +
          ((((C5573 + C5572 + C5571) * C17173 +
             (C6123 + C6124 + C6125) * C50928) *
                C50734 * C50859 -
            ((C5368 + C5369 + C5370) * C50928 +
             (C5173 + C5172 + C5171) * C17173) *
                C50734 * C51004) *
               C51003 +
           (((C5370 + C5369 + C5368) * C17173 +
             (C5371 + C5372 + C5373) * C50928) *
                C50734 * C51004 -
            ((C5117 * C4510 + C7020 + C7020 + C5112 * C4518 + C5115 * C2641 +
              C7021 + C7021 + C5111 * C2647 + C5113 * C1561 + C7022 + C7022 +
              C5110 * C1569) *
                 C50928 +
             (C6125 + C6124 + C6123) * C17173) *
                C50734 * C50859) *
               C50831) *
              C50766)) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C141 + C141 + C50892 * C133) * C17173 +
                C2486 * C50928) *
                   C17175 +
               (C17179 + C17180) * C17176 + C17187 * C17177) *
                  C50795 * C50779 * C113 -
              (C17188 * C17177 + (C17182 + C17181) * C17176 +
               (C17180 + C17179) * C17175) *
                  C50795 * C50779 * C114 +
              (C17187 * C17175 + (C17184 + C17183) * C17176 +
               (C17185 + C17186) * C17177) *
                  C50795 * C50779 * C115 -
              (((C117 * C636 + C642 + C642 + C50892 * C638) * C50928 +
                C172 * C17173) *
                   C17177 +
               (C17186 + C17185) * C17176 + C17188 * C17175) *
                  C50795 * C50779 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C141 + C141 + C50892 * C133) * C17173 +
                 C2486 * C50928) *
                    C17175 +
                (C17179 + C17180) * C17176 + C17187 * C17177) *
                   C50795 * C275 -
               ((C17335 + C17336) * C17177 + (C17337 + C17338) * C17176 +
                (C2487 * C50928 + C2486 * C17173) * C17175) *
                   C50795 * C276 +
               ((C2487 * C17173 + C2489 * C50928) * C17175 +
                (C17339 + C17340) * C17176 + (C17341 + C17342) * C17177) *
                   C50795 * C277) *
                  C278 +
              (((C17338 + C17337) * C17175 + (C17336 + C17335) * C17176 +
                (C345 * C17173 + C350 * C50928) * C17177) *
                   C50795 * C276 -
               (C17188 * C17177 + (C17182 + C17181) * C17176 +
                (C17180 + C17179) * C17175) *
                   C50795 * C275 -
               (((C117 * C1098 + C1111 + C1111 + C50892 * C1106) * C50928 +
                 C350 * C17173) *
                    C17177 +
                (C17342 + C17341) * C17176 + (C17340 + C17339) * C17175) *
                   C50795 * C277) *
                  C50766)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C17173 +
             C2486 * C50928) *
                C17175 +
            (C17179 + C17180) * C17176 + C17187 * C17177) *
               C454 -
           ((C17489 + C17490) * C17177 + (C17491 + C17492) * C17176 +
            (C3198 * C50928 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C17173) *
                C17175) *
               C455 +
           (((C117 * C461 + C498 + C498 + C50892 * C481) * C17173 +
             C3620 * C50928) *
                C17175 +
            (C17493 + C17494) * C17176 + (C17495 + C17496) * C17177) *
               C456) *
              C50779 * C278 +
          (((C17492 + C17491) * C17175 + (C17490 + C17489) * C17176 +
            (C522 * C17173 + C921 * C50928) * C17177) *
               C455 -
           (C17188 * C17177 + (C17182 + C17181) * C17176 +
            (C17180 + C17179) * C17175) *
               C454 -
           (((C117 * C1212 + C1225 + C1225 + C50892 * C1220) * C50928 +
             C527 * C17173) *
                C17177 +
            (C17496 + C17495) * C17176 + (C17494 + C17493) * C17175) *
               C456) *
              C50779 * C50766)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50892 * C133) * C19810 +
           C2486 * C19811 + C2487 * C19812 + C2489 * C19813) *
              C50734 * C50795 * C50779 * C113 -
          (C2488 * C19813 + C348 * C19812 + C347 * C19811 + C168 * C19810) *
              C50734 * C50795 * C50779 * C114 +
          (C169 * C19810 + C346 * C19811 + C349 * C19812 + C2491 * C19813) *
              C50734 * C50795 * C50779 * C115 -
          ((C117 * C1098 + C1111 + C1111 + C50892 * C1106) * C19813 +
           C350 * C19812 + C345 * C19811 + C170 * C19810) *
              C50734 * C50795 * C50779 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C19810 +
            C2486 * C19811 + C2487 * C19812 + C2489 * C19813) *
               C50734 * C50795 * C275 -
           (C3457 * C19813 + C2489 * C19812 + C2487 * C19811 + C2486 * C19810) *
               C50734 * C50795 * C276 +
           (C2487 * C19810 + C2489 * C19811 + C3457 * C19812 +
            (C117 * C3445 + C3454 + C3454 + C50892 * C3449) * C19813) *
               C50734 * C50795 * C277) *
              C278 +
          ((C347 * C19810 + C348 * C19811 + C2488 * C19812 + C2490 * C19813) *
               C50734 * C50795 * C276 -
           (C2488 * C19813 + C348 * C19812 + C347 * C19811 + C168 * C19810) *
               C50734 * C50795 * C275 -
           ((C117 * C3444 + C3453 + C3453 + C50892 * C3448) * C19813 +
            C2490 * C19812 + C2488 * C19811 + C348 * C19810) *
               C50734 * C50795 * C277) *
              C50766)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C19810 +
            C2486 * C19811 + C2487 * C19812 + C2489 * C19813) *
               C50734 * C454 -
           (C4120 * C19813 + C3197 * C19812 + C3198 * C19811 +
            (C117 * C460 + C497 + C497 + C50892 * C480) * C19810) *
               C50734 * C455 +
           ((C117 * C461 + C498 + C498 + C50892 * C481) * C19810 +
            C3620 * C19811 + C3621 * C19812 +
            (C117 * C3604 + C3615 + C3615 + C50892 * C3608) * C19813) *
               C50734 * C456) *
              C50779 * C278 +
          ((C524 * C19810 + C919 * C19811 + C2668 * C19812 + C3199 * C19813) *
               C50734 * C455 -
           (C2488 * C19813 + C348 * C19812 + C347 * C19811 + C168 * C19810) *
               C50734 * C454 -
           ((C117 * C3603 + C3614 + C3614 + C50892 * C3607) * C19813 +
            C2670 * C19812 + C2669 * C19811 + C525 * C19810) *
               C50734 * C456) *
              C50779 * C50766)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((C5113 * C119 + C5120 + C5120 + C5110 * C133 +
                                C5115 * C460 + C5121 + C5121 + C5111 * C480 +
                                C5117 * C461 + C5122 + C5122 + C5112 * C481) *
                                   C17173 +
                               (C5113 * C283 + C5337 + C5337 + C5110 * C303 +
                                C5115 * C886 + C5336 + C5336 + C5111 * C896 +
                                C5117 * C1215 + C5335 + C5335 + C5112 * C1223) *
                                   C50928) *
                                  C50734 * C50795 * C50779 * C113 -
                              ((C5368 + C5369 + C5370) * C50928 +
                               (C5173 + C5172 + C5171) * C17173) *
                                  C50734 * C50795 * C50779 * C114 +
                              ((C5176 + C5175 + C5174) * C17173 +
                               (C5738 + C5739 + C5740) * C50928) *
                                  C50734 * C50795 * C50779 * C115 -
                              ((C5117 * C1212 + C5729 + C5729 + C5112 * C1220 +
                                C5115 * C889 + C5730 + C5730 + C5111 * C899 +
                                C5113 * C280 + C5731 + C5731 + C5110 * C300) *
                                   C50928 +
                               (C5179 + C5178 + C5177) * C17173) *
                                  C50734 * C50795 * C50779 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5113 * C119 + C5120 + C5120 + C5110 * C133 + C5115 * C460 +
             C5121 + C5121 + C5111 * C480 + C5117 * C461 + C5122 + C5122 +
             C5112 * C481) *
                C17173 +
            (C21813 + C21814 + C21815) * C50928) *
               C50734 * C50795 * C275 -
           ((C21816 + C21817 + C21818) * C50928 +
            (C21815 + C21814 + C21813) * C17173) *
               C50734 * C50795 * C276 +
           ((C21818 + C21817 + C21816) * C17173 +
            (C5113 * C1101 + C6375 + C6375 + C5110 * C1109 + C5115 * C3170 +
             C6374 + C6374 + C5111 * C3176 + C5117 * C3604 + C6373 + C6373 +
             C5112 * C3608) *
                C50928) *
               C50734 * C50795 * C277) *
              C278 +
          (((C5370 + C5369 + C5368) * C17173 +
            (C5371 + C5372 + C5373) * C50928) *
               C50734 * C50795 * C276 -
           ((C5368 + C5369 + C5370) * C50928 +
            (C5173 + C5172 + C5171) * C17173) *
               C50734 * C50795 * C275 -
           ((C5117 * C3603 + C6370 + C6370 + C5112 * C3607 + C5115 * C3171 +
             C6371 + C6371 + C5111 * C3177 + C5113 * C1100 + C6372 + C6372 +
             C5110 * C1108) *
                C50928 +
            (C5373 + C5372 + C5371) * C17173) *
               C50734 * C50795 * C277) *
              C50766)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C5113 * C119 + C5120 + C5120 + C5110 * C133 + C5115 * C460 +
             C5121 + C5121 + C5111 * C480 + C5117 * C461 + C5122 + C5122 +
             C5112 * C481) *
                C17173 +
            (C21813 + C21814 + C21815) * C50928) *
               C50734 * C454 -
           ((C5117 * C4513 + C6104 + C6104 + C5112 * C4521 + C5115 * C1215 +
             C6103 + C6103 + C5111 * C1223 + C5113 * C886 + C6102 + C6102 +
             C5110 * C896) *
                C50928 +
            (C5117 * C1846 + C5538 + C5538 + C5112 * C1854 + C5115 * C461 +
             C5539 + C5539 + C5111 * C481 + C5113 * C460 + C5540 + C5540 +
             C5110 * C480) *
                C17173) *
               C50734 * C455 +
           ((C5113 * C461 + C5541 + C5541 + C5110 * C481 + C5115 * C1846 +
             C5542 + C5542 + C5111 * C1854 + C5117 * C5519 + C5543 + C5543 +
             C5112 * C5525) *
                C17173 +
            (C5113 * C1215 + C6533 + C6533 + C5110 * C1223 + C5115 * C4513 +
             C6532 + C6532 + C5111 * C4521 + C5117 * C6522 + C6531 + C6531 +
             C5112 * C6526) *
                C50928) *
               C50734 * C456) *
              C50779 * C278 +
          (((C5573 + C5572 + C5571) * C17173 +
            (C6123 + C6124 + C6125) * C50928) *
               C50734 * C455 -
           ((C5368 + C5369 + C5370) * C50928 +
            (C5173 + C5172 + C5171) * C17173) *
               C50734 * C454 -
           ((C5117 * C6521 + C6528 + C6528 + C5112 * C6525 + C5115 * C4511 +
             C6529 + C6529 + C5111 * C4519 + C5113 * C1214 + C6530 + C6530 +
             C5110 * C1222) *
                C50928 +
            (C5576 + C5575 + C5574) * C17173) *
               C50734 * C456) *
              C50779 * C50766)) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C19810 +
            C2486 * C19811 + C2487 * C19812 + C2489 * C19813) *
               C50734 * C51004 -
           (C4120 * C19813 + C3197 * C19812 + C3198 * C19811 +
            (C117 * C460 + C497 + C497 + C50892 * C480) * C19810) *
               C50734 * C50859) *
              C50779 * C51046 +
          ((C524 * C19810 + C919 * C19811 + C2668 * C19812 + C3199 * C19813) *
               C50734 * C50859 -
           (C2488 * C19813 + C348 * C19812 + C347 * C19811 + C168 * C19810) *
               C50734 * C51004) *
              C50779 * C51047 +
          ((C169 * C19810 + C346 * C19811 + C349 * C19812 + C2491 * C19813) *
               C50734 * C51004 -
           ((C117 * C3172 + C3190 + C3190 + C50892 * C3178) * C19813 +
            C2975 * C19812 + C920 * C19811 + C523 * C19810) *
               C50734 * C50859) *
              C50779 * C635)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C17173 +
             C2486 * C50928) *
                C17175 +
            (C17179 + C17180) * C17176 + C17187 * C17177) *
               C51004 -
           (C17792 * C17177 + (C17491 + C17492) * C17176 +
            (C3198 * C50928 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C17173) *
                C17175) *
               C50859) *
              C50779 * C51046 +
          (((C17492 + C17491) * C17175 + (C17490 + C17489) * C17176 +
            (C17793 + C17794) * C17177) *
               C50859 -
           (C17188 * C17177 + (C17182 + C17181) * C17176 +
            (C17180 + C17179) * C17175) *
               C51004) *
              C50779 * C51047 +
          ((C17187 * C17175 + (C17184 + C17183) * C17176 +
            (C17185 + C17186) * C17177) *
               C51004 -
           (((C117 * C890 + C912 + C912 + C50892 * C900) * C50928 +
             C755 * C17173) *
                C17177 +
            (C17794 + C17793) * C17176 + C17792 * C17175) *
               C50859) *
              C50779 * C635)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5113 * C119 + C5120 + C5120 + C5110 * C133 + C5115 * C460 +
             C5121 + C5121 + C5111 * C480 + C5117 * C461 + C5122 + C5122 +
             C5112 * C481) *
                C17173 +
            (C21813 + C21814 + C21815) * C50928) *
               C50734 * C51004 -
           ((C5117 * C4513 + C6104 + C6104 + C5112 * C4521 + C5115 * C1215 +
             C6103 + C6103 + C5111 * C1223 + C5113 * C886 + C6102 + C6102 +
             C5110 * C896) *
                C50928 +
            (C5117 * C1846 + C5538 + C5538 + C5112 * C1854 + C5115 * C461 +
             C5539 + C5539 + C5111 * C481 + C5113 * C460 + C5540 + C5540 +
             C5110 * C480) *
                C17173) *
               C50734 * C50859) *
              C50779 * C51046 +
          (((C5573 + C5572 + C5571) * C17173 +
            (C6123 + C6124 + C6125) * C50928) *
               C50734 * C50859 -
           ((C5368 + C5369 + C5370) * C50928 +
            (C5173 + C5172 + C5171) * C17173) *
               C50734 * C51004) *
              C50779 * C51047 +
          (((C5176 + C5175 + C5174) * C17173 +
            (C5738 + C5739 + C5740) * C50928) *
               C50734 * C51004 -
           ((C5117 * C6098 + C6114 + C6114 + C5112 * C6100 + C5115 * C1213 +
             C6115 + C6115 + C5111 * C1221 + C5113 * C888 + C6116 + C6116 +
             C5110 * C898) *
                C50928 +
            (C5904 + C5903 + C5902) * C17173) *
               C50734 * C50859) *
              C50779 * C635)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C17173 +
             C2486 * C50928) *
                C17175 +
            (C17179 + C17180) * C17176 + C17187 * C17177) *
               C50795 * C275 -
           ((C17335 + C17336) * C17177 + (C17337 + C17338) * C17176 +
            (C2487 * C50928 + C2486 * C17173) * C17175) *
               C50795 * C276 +
           ((C2487 * C17173 + C2489 * C50928) * C17175 +
            (C17339 + C17340) * C17176 + (C17341 + C17342) * C17177) *
               C50795 * C277) *
              C278 +
          (((C17338 + C17337) * C17175 + (C17336 + C17335) * C17176 +
            (C345 * C17173 + C350 * C50928) * C17177) *
               C50795 * C276 -
           (C17188 * C17177 + (C17182 + C17181) * C17176 +
            (C17180 + C17179) * C17175) *
               C50795 * C275 -
           (((C117 * C1098 + C1111 + C1111 + C50892 * C1106) * C50928 +
             C350 * C17173) *
                C17177 +
            (C17342 + C17341) * C17176 + (C17340 + C17339) * C17175) *
               C50795 * C277) *
              C50766)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C17173 +
            C2486 * C50928) *
               C17175 +
           (C17179 + C17180) * C17176 + C17187 * C17177) *
              C50795 * C50779 * C113 -
          (C17188 * C17177 + (C17182 + C17181) * C17176 +
           (C17180 + C17179) * C17175) *
              C50795 * C50779 * C114 +
          (C17187 * C17175 + (C17184 + C17183) * C17176 +
           (C17185 + C17186) * C17177) *
              C50795 * C50779 * C115 -
          (((C117 * C636 + C642 + C642 + C50892 * C638) * C50928 +
            C172 * C17173) *
               C17177 +
           (C17186 + C17185) * C17176 + C17188 * C17175) *
              C50795 * C50779 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50892 * C133) * C19810 +
           C2486 * C19811 + C2487 * C19812 + C2489 * C19813) *
              C50734 * C50795 * C50779 * C113 -
          (C2488 * C19813 + C348 * C19812 + C347 * C19811 + C168 * C19810) *
              C50734 * C50795 * C50779 * C114 +
          (C169 * C19810 + C346 * C19811 + C349 * C19812 + C2491 * C19813) *
              C50734 * C50795 * C50779 * C115 -
          ((C117 * C1098 + C1111 + C1111 + C50892 * C1106) * C19813 +
           C350 * C19812 + C345 * C19811 + C170 * C19810) *
              C50734 * C50795 * C50779 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C19810 +
            C2486 * C19811 + C2487 * C19812 + C2489 * C19813) *
               C50734 * C50795 * C275 -
           (C3457 * C19813 + C2489 * C19812 + C2487 * C19811 + C2486 * C19810) *
               C50734 * C50795 * C276 +
           (C2487 * C19810 + C2489 * C19811 + C3457 * C19812 +
            (C117 * C3445 + C3454 + C3454 + C50892 * C3449) * C19813) *
               C50734 * C50795 * C277) *
              C278 +
          ((C347 * C19810 + C348 * C19811 + C2488 * C19812 + C2490 * C19813) *
               C50734 * C50795 * C276 -
           (C2488 * C19813 + C348 * C19812 + C347 * C19811 + C168 * C19810) *
               C50734 * C50795 * C275 -
           ((C117 * C3444 + C3453 + C3453 + C50892 * C3448) * C19813 +
            C2490 * C19812 + C2488 * C19811 + C348 * C19810) *
               C50734 * C50795 * C277) *
              C50766)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C5113 * C119 + C5120 + C5120 + C5110 * C133 + C5115 * C460 + C5121 +
            C5121 + C5111 * C480 + C5117 * C461 + C5122 + C5122 +
            C5112 * C481) *
               C17173 +
           (C5113 * C283 + C5337 + C5337 + C5110 * C303 + C5115 * C886 + C5336 +
            C5336 + C5111 * C896 + C5117 * C1215 + C5335 + C5335 +
            C5112 * C1223) *
               C50928) *
              C50734 * C50795 * C50779 * C113 -
          ((C5368 + C5369 + C5370) * C50928 +
           (C5173 + C5172 + C5171) * C17173) *
              C50734 * C50795 * C50779 * C114 +
          ((C5176 + C5175 + C5174) * C17173 +
           (C5738 + C5739 + C5740) * C50928) *
              C50734 * C50795 * C50779 * C115 -
          ((C5117 * C1212 + C5729 + C5729 + C5112 * C1220 + C5115 * C889 +
            C5730 + C5730 + C5111 * C899 + C5113 * C280 + C5731 + C5731 +
            C5110 * C300) *
               C50928 +
           (C5179 + C5178 + C5177) * C17173) *
              C50734 * C50795 * C50779 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5113 * C119 + C5120 + C5120 + C5110 * C133 + C5115 * C460 +
             C5121 + C5121 + C5111 * C480 + C5117 * C461 + C5122 + C5122 +
             C5112 * C481) *
                C17173 +
            (C21813 + C21814 + C21815) * C50928) *
               C50734 * C50795 * C275 -
           ((C21816 + C21817 + C21818) * C50928 +
            (C21815 + C21814 + C21813) * C17173) *
               C50734 * C50795 * C276 +
           ((C21818 + C21817 + C21816) * C17173 +
            (C5113 * C1101 + C6375 + C6375 + C5110 * C1109 + C5115 * C3170 +
             C6374 + C6374 + C5111 * C3176 + C5117 * C3604 + C6373 + C6373 +
             C5112 * C3608) *
                C50928) *
               C50734 * C50795 * C277) *
              C278 +
          (((C5370 + C5369 + C5368) * C17173 +
            (C5371 + C5372 + C5373) * C50928) *
               C50734 * C50795 * C276 -
           ((C5368 + C5369 + C5370) * C50928 +
            (C5173 + C5172 + C5171) * C17173) *
               C50734 * C50795 * C275 -
           ((C5117 * C3603 + C6370 + C6370 + C5112 * C3607 + C5115 * C3171 +
             C6371 + C6371 + C5111 * C3177 + C5113 * C1100 + C6372 + C6372 +
             C5110 * C1108) *
                C50928 +
            (C5373 + C5372 + C5371) * C17173) *
               C50734 * C50795 * C277) *
              C50766)) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C19810 +
            C2486 * C19811 + C2487 * C19812 + C2489 * C19813) *
               C50734 * C50795 * C51048 -
           (C3457 * C19813 + C2489 * C19812 + C2487 * C19811 + C2486 * C19810) *
               C50734 * C50795 * C51049 +
           (C2487 * C19810 + C2489 * C19811 + C3457 * C19812 +
            C20510 * C19813) *
               C50734 * C50795 * C1328) *
              C50995 +
          ((C347 * C19810 + C348 * C19811 + C2488 * C19812 + C2490 * C19813) *
               C50734 * C50795 * C51049 -
           (C2488 * C19813 + C348 * C19812 + C347 * C19811 + C168 * C19810) *
               C50734 * C50795 * C51048 -
           ((C117 * C3444 + C3453 + C3453 + C50892 * C3448) * C19813 +
            C2490 * C19812 + C2488 * C19811 + C348 * C19810) *
               C50734 * C50795 * C1328) *
              C50766)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C17173 +
             C2486 * C50928) *
                C17175 +
            (C17179 + C17180) * C17176 + C17187 * C17177) *
               C50795 * C51048 -
           (C17643 * C17177 + (C17337 + C17338) * C17176 +
            (C2487 * C50928 + C2486 * C17173) * C17175) *
               C50795 * C51049 +
           ((C2487 * C17173 + C2489 * C50928) * C17175 +
            (C17339 + C17340) * C17176 + (C17341 + C17342) * C17177) *
               C50795 * C1328) *
              C50995 +
          (((C17338 + C17337) * C17175 + (C17336 + C17335) * C17176 +
            (C17644 + C17645) * C17177) *
               C50795 * C51049 -
           (C17188 * C17177 + (C17182 + C17181) * C17176 +
            (C17180 + C17179) * C17175) *
               C50795 * C51048 -
           (((C117 * C1098 + C1111 + C1111 + C50892 * C1106) * C50928 +
             C350 * C17173) *
                C17177 +
            (C17342 + C17341) * C17176 + (C17340 + C17339) * C17175) *
               C50795 * C1328) *
              C50766)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5113 * C119 + C5120 + C5120 + C5110 * C133 + C5115 * C460 +
             C5121 + C5121 + C5111 * C480 + C5117 * C461 + C5122 + C5122 +
             C5112 * C481) *
                C17173 +
            (C21813 + C21814 + C21815) * C50928) *
               C50734 * C50795 * C51048 -
           ((C21816 + C21817 + C21818) * C50928 +
            (C21815 + C21814 + C21813) * C17173) *
               C50734 * C50795 * C51049 +
           ((C21818 + C21817 + C21816) * C17173 +
            (C22725 + C22726 + C22727) * C50928) *
               C50734 * C50795 * C1328) *
              C50995 +
          (((C5370 + C5369 + C5368) * C17173 +
            (C5371 + C5372 + C5373) * C50928) *
               C50734 * C50795 * C51049 -
           ((C5368 + C5369 + C5370) * C50928 +
            (C5173 + C5172 + C5171) * C17173) *
               C50734 * C50795 * C51048 -
           ((C5117 * C3603 + C6370 + C6370 + C5112 * C3607 + C5115 * C3171 +
             C6371 + C6371 + C5111 * C3177 + C5113 * C1100 + C6372 + C6372 +
             C5110 * C1108) *
                C50928 +
            (C5373 + C5372 + C5371) * C17173) *
               C50734 * C50795 * C1328) *
              C50766)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C19810 +
            C2486 * C19811 + C2487 * C19812 + C2489 * C19813) *
               C50734 * C51004 -
           (C4120 * C19813 + C3197 * C19812 + C3198 * C19811 +
            (C117 * C460 + C497 + C497 + C50892 * C480) * C19810) *
               C50734 * C50859) *
              C51048 +
          ((C3198 * C19810 + C3197 * C19811 + C4120 * C19812 +
            C20952 * C19813) *
               C50734 * C50859 -
           (C3457 * C19813 + C2489 * C19812 + C2487 * C19811 + C2486 * C19810) *
               C50734 * C51004) *
              C51049 +
          ((C2487 * C19810 + C2489 * C19811 + C3457 * C19812 +
            C20510 * C19813) *
               C50734 * C51004 -
           ((C117 * C20943 + C20949 + C20949 + C50892 * C20945) * C19813 +
            C20952 * C19812 + C4120 * C19811 + C3197 * C19810) *
               C50734 * C50859) *
              C1328) *
         C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C17173 +
             C2486 * C50928) *
                C17175 +
            (C17179 + C17180) * C17176 + C17187 * C17177) *
               C51004 -
           (C17792 * C17177 + (C17491 + C17492) * C17176 +
            (C3198 * C50928 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C17173) *
                C17175) *
               C50859) *
              C51048 +
          (((C3198 * C17173 + C3197 * C50928) * C17175 +
            (C17989 + C17990) * C17176 + (C17991 + C17992) * C17177) *
               C50859 -
           (C17643 * C17177 + (C17337 + C17338) * C17176 +
            (C2487 * C50928 + C2486 * C17173) * C17175) *
               C51004) *
              C51049 +
          (((C2487 * C17173 + C2489 * C50928) * C17175 +
            (C17339 + C17340) * C17176 + (C17341 + C17342) * C17177) *
               C51004 -
           (((C117 * C3172 + C3190 + C3190 + C50892 * C3178) * C50928 +
             C2975 * C17173) *
                C17177 +
            (C3199 * C50928 + C2668 * C17173) * C17176 +
            (C4120 * C50928 + C3197 * C17173) * C17175) *
               C50859) *
              C1328) *
         C50760) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5113 * C119 + C5120 + C5120 + C5110 * C133 + C5115 * C460 +
             C5121 + C5121 + C5111 * C480 + C5117 * C461 + C5122 + C5122 +
             C5112 * C481) *
                C17173 +
            (C21813 + C21814 + C21815) * C50928) *
               C50734 * C51004 -
           ((C22463 + C22464 + C22465) * C50928 +
            (C5117 * C1846 + C5538 + C5538 + C5112 * C1854 + C5115 * C461 +
             C5539 + C5539 + C5111 * C481 + C5113 * C460 + C5540 + C5540 +
             C5110 * C480) *
                C17173) *
               C50734 * C50859) *
              C51048 +
          (((C22465 + C22464 + C22463) * C17173 +
            (C23396 + C23397 + C23398) * C50928) *
               C50734 * C50859 -
           ((C21816 + C21817 + C21818) * C50928 +
            (C21815 + C21814 + C21813) * C17173) *
               C50734 * C51004) *
              C51049 +
          (((C21818 + C21817 + C21816) * C17173 +
            (C22725 + C22726 + C22727) * C50928) *
               C50734 * C51004 -
           ((C5117 * C21214 + C23387 + C23387 + C5112 * C21216 + C5115 * C3604 +
             C23388 + C23388 + C5111 * C3608 + C5113 * C3170 + C23389 + C23389 +
             C5110 * C3176) *
                C50928 +
            (C23398 + C23397 + C23396) * C17173) *
               C50734 * C50859) *
              C1328) *
         C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C141 + C141 + C50892 * C133) * C17173 +
                 C2486 * C50928) *
                    C17175 +
                (C17179 + C17180) * C17176 + C17187 * C17177) *
                   C50795 * C1022 -
               (C17643 * C17177 + (C17337 + C17338) * C17176 +
                (C2487 * C50928 + C2486 * C17173) * C17175) *
                   C50795 * C50831) *
                  C1024 +
              (((C17338 + C17337) * C17175 + (C17336 + C17335) * C17176 +
                (C17644 + C17645) * C17177) *
                   C50795 * C50831 -
               (C17188 * C17177 + (C17182 + C17181) * C17176 +
                (C17180 + C17179) * C17175) *
                   C50795 * C1022) *
                  C1025 +
              ((C17187 * C17175 + (C17184 + C17183) * C17176 +
                (C17185 + C17186) * C17177) *
                   C50795 * C1022 -
               (((C117 * C289 + C332 + C332 + C50892 * C309) * C50928 +
                 C645 * C17173) *
                    C17177 +
                (C17645 + C17644) * C17176 + C17643 * C17175) *
                   C50795 * C50831) *
                  C1026) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C141 + C141 + C50892 * C133) * C17173 +
                C2486 * C50928) *
                   C17175 +
               (C17179 + C17180) * C17176 + C17187 * C17177) *
                  C50795 * C1093 -
              (C17643 * C17177 + (C17337 + C17338) * C17176 +
               (C2487 * C50928 + C2486 * C17173) * C17175) *
                  C50795 * C1094 +
              ((C2487 * C17173 + C2489 * C50928) * C17175 +
               (C17339 + C17340) * C17176 + (C17341 + C17342) * C17177) *
                  C50795 * C1095 -
              (((C117 * C2448 + C2473 + C2473 + C50892 * C2454) * C50928 +
                C2491 * C17173) *
                   C17177 +
               (C2490 * C50928 + C2488 * C17173) * C17176 +
               (C3457 * C50928 + C2489 * C17173) * C17175) *
                  C50795 * C1096) *
             C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C17173 +
             C2486 * C50928) *
                C17175 +
            (C17179 + C17180) * C17176 + C17187 * C17177) *
               C454 -
           (C17792 * C17177 + (C17491 + C17492) * C17176 +
            (C3198 * C50928 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C17173) *
                C17175) *
               C455 +
           (((C117 * C461 + C498 + C498 + C50892 * C481) * C17173 +
             C3620 * C50928) *
                C17175 +
            (C17493 + C17494) * C17176 + (C17495 + C17496) * C17177) *
               C456) *
              C1022 +
          (((C3198 * C17173 + C3197 * C50928) * C17175 +
            (C17989 + C17990) * C17176 + (C17991 + C17992) * C17177) *
               C455 -
           (C17643 * C17177 + (C17337 + C17338) * C17176 +
            (C2487 * C50928 + C2486 * C17173) * C17175) *
               C454 -
           (((C117 * C2642 + C2661 + C2661 + C50892 * C2648) * C50928 +
             C8338 * C17173) *
                C17177 +
            (C2670 * C50928 + C2669 * C17173) * C17176 +
            (C3621 * C50928 + C3620 * C17173) * C17175) *
               C456) *
              C50831) *
         C50760) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C19810 +
            C2486 * C19811 + C2487 * C19812 + C2489 * C19813) *
               C50734 * C50795 * C1022 -
           (C3457 * C19813 + C2489 * C19812 + C2487 * C19811 + C2486 * C19810) *
               C50734 * C50795 * C50831) *
              C1024 +
          ((C347 * C19810 + C348 * C19811 + C2488 * C19812 + C2490 * C19813) *
               C50734 * C50795 * C50831 -
           (C2488 * C19813 + C348 * C19812 + C347 * C19811 + C168 * C19810) *
               C50734 * C50795 * C1022) *
              C1025 +
          ((C169 * C19810 + C346 * C19811 + C349 * C19812 + C2491 * C19813) *
               C50734 * C50795 * C1022 -
           ((C117 * C2448 + C2473 + C2473 + C50892 * C2454) * C19813 +
            C2491 * C19812 + C349 * C19811 + C346 * C19810) *
               C50734 * C50795 * C50831) *
              C1026)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50892 * C133) * C19810 +
           C2486 * C19811 + C2487 * C19812 + C2489 * C19813) *
              C50734 * C50795 * C1093 -
          (C3457 * C19813 + C2489 * C19812 + C2487 * C19811 + C2486 * C19810) *
              C50734 * C50795 * C1094 +
          (C2487 * C19810 + C2489 * C19811 + C3457 * C19812 + C20510 * C19813) *
              C50734 * C50795 * C1095 -
          ((C117 * C20501 + C20507 + C20507 + C50892 * C20503) * C19813 +
           C20510 * C19812 + C3457 * C19811 + C2489 * C19810) *
              C50734 * C50795 * C1096) *
         C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C19810 +
            C2486 * C19811 + C2487 * C19812 + C2489 * C19813) *
               C50734 * C454 -
           (C4120 * C19813 + C3197 * C19812 + C3198 * C19811 +
            (C117 * C460 + C497 + C497 + C50892 * C480) * C19810) *
               C50734 * C455 +
           ((C117 * C461 + C498 + C498 + C50892 * C481) * C19810 +
            C3620 * C19811 + C3621 * C19812 + C20617 * C19813) *
               C50734 * C456) *
              C1022 +
          ((C3198 * C19810 + C3197 * C19811 + C4120 * C19812 +
            (C117 * C4108 + C4117 + C4117 + C50892 * C4112) * C19813) *
               C50734 * C455 -
           (C3457 * C19813 + C2489 * C19812 + C2487 * C19811 + C2486 * C19810) *
               C50734 * C454 -
           ((C117 * C20608 + C20614 + C20614 + C50892 * C20610) * C19813 +
            C20617 * C19812 + C3621 * C19811 + C3620 * C19810) *
               C50734 * C456) *
              C50831) *
         C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * ((((C5113 * C119 + C5120 + C5120 + C5110 * C133 +
                                 C5115 * C460 + C5121 + C5121 + C5111 * C480 +
                                 C5117 * C461 + C5122 + C5122 + C5112 * C481) *
                                    C17173 +
                                (C21813 + C21814 + C21815) * C50928) *
                                   C50734 * C50795 * C1022 -
                               ((C21816 + C21817 + C21818) * C50928 +
                                (C21815 + C21814 + C21813) * C17173) *
                                   C50734 * C50795 * C50831) *
                                  C1024 +
                              (((C5370 + C5369 + C5368) * C17173 +
                                (C5371 + C5372 + C5373) * C50928) *
                                   C50734 * C50795 * C50831 -
                               ((C5368 + C5369 + C5370) * C50928 +
                                (C5173 + C5172 + C5171) * C17173) *
                                   C50734 * C50795 * C1022) *
                                  C1025 +
                              (((C5176 + C5175 + C5174) * C17173 +
                                (C5738 + C5739 + C5740) * C50928) *
                                   C50734 * C50795 * C1022 -
                               ((C5117 * C2642 + C5353 + C5353 + C5112 * C2648 +
                                 C5115 * C1560 + C5354 + C5354 + C5111 * C1568 +
                                 C5113 * C286 + C5355 + C5355 + C5110 * C306) *
                                    C50928 +
                                (C5740 + C5739 + C5738) * C17173) *
                                   C50734 * C50795 * C50831) *
                                  C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C5113 * C119 + C5120 + C5120 + C5110 * C133 + C5115 * C460 + C5121 +
            C5121 + C5111 * C480 + C5117 * C461 + C5122 + C5122 +
            C5112 * C481) *
               C17173 +
           (C21813 + C21814 + C21815) * C50928) *
              C50734 * C50795 * C1093 -
          ((C21816 + C21817 + C21818) * C50928 +
           (C21815 + C21814 + C21813) * C17173) *
              C50734 * C50795 * C1094 +
          ((C21818 + C21817 + C21816) * C17173 +
           (C22725 + C22726 + C22727) * C50928) *
              C50734 * C50795 * C1095 -
          ((C5117 * C20608 + C22716 + C22716 + C5112 * C20610 + C5115 * C4108 +
            C22717 + C22717 + C5111 * C4112 + C5113 * C2446 + C22718 + C22718 +
            C5110 * C2452) *
               C50928 +
           (C22727 + C22726 + C22725) * C17173) *
              C50734 * C50795 * C1096) *
         C50760) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C5113 * C119 + C5120 + C5120 + C5110 * C133 + C5115 * C460 +
             C5121 + C5121 + C5111 * C480 + C5117 * C461 + C5122 + C5122 +
             C5112 * C481) *
                C17173 +
            (C21813 + C21814 + C21815) * C50928) *
               C50734 * C454 -
           ((C22463 + C22464 + C22465) * C50928 +
            (C5117 * C1846 + C5538 + C5538 + C5112 * C1854 + C5115 * C461 +
             C5539 + C5539 + C5111 * C481 + C5113 * C460 + C5540 + C5540 +
             C5110 * C480) *
                C17173) *
               C50734 * C455 +
           ((C5113 * C461 + C5541 + C5541 + C5110 * C481 + C5115 * C1846 +
             C5542 + C5542 + C5111 * C1854 + C5117 * C5519 + C5543 + C5543 +
             C5112 * C5525) *
                C17173 +
            (C22892 + C22893 + C22894) * C50928) *
               C50734 * C456) *
              C1022 +
          (((C22465 + C22464 + C22463) * C17173 +
            (C5113 * C1562 + C7025 + C7025 + C5110 * C1570 + C5115 * C2640 +
             C7024 + C7024 + C5111 * C2646 + C5117 * C4512 + C7023 + C7023 +
             C5112 * C4520) *
                C50928) *
               C50734 * C455 -
           ((C21816 + C21817 + C21818) * C50928 +
            (C21815 + C21814 + C21813) * C17173) *
               C50734 * C454 -
           ((C5117 * C22873 + C22883 + C22883 + C5112 * C22875 + C5115 * C4512 +
             C22884 + C22884 + C5111 * C4520 + C5113 * C2640 + C22885 + C22885 +
             C5110 * C2646) *
                C50928 +
            (C22894 + C22893 + C22892) * C17173) *
               C50734 * C456) *
              C50831) *
         C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C19810 +
             C2486 * C19811 + C2487 * C19812 + C2489 * C19813) *
                C50734 * C51004 -
            (C4120 * C19813 + C3197 * C19812 + C3198 * C19811 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C19810) *
                C50734 * C50859) *
               C1022 +
           ((C3198 * C19810 + C3197 * C19811 + C4120 * C19812 +
             (C117 * C4108 + C4117 + C4117 + C50892 * C4112) * C19813) *
                C50734 * C50859 -
            (C3457 * C19813 + C2489 * C19812 + C2487 * C19811 +
             C2486 * C19810) *
                C50734 * C51004) *
               C50831) *
              C50995 +
          (((C524 * C19810 + C919 * C19811 + C2668 * C19812 + C3199 * C19813) *
                C50734 * C50859 -
            (C2488 * C19813 + C348 * C19812 + C347 * C19811 + C168 * C19810) *
                C50734 * C51004) *
               C1022 +
           ((C347 * C19810 + C348 * C19811 + C2488 * C19812 + C2490 * C19813) *
                C50734 * C51004 -
            ((C117 * C4107 + C4116 + C4116 + C50892 * C4111) * C19813 +
             C3199 * C19812 + C2668 * C19811 + C919 * C19810) *
                C50734 * C50859) *
               C50831) *
              C50766)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50892 * C133) * C17173 +
              C2486 * C50928) *
                 C17175 +
             (C17179 + C17180) * C17176 + C17187 * C17177) *
                C51004 -
            (C17792 * C17177 + (C17491 + C17492) * C17176 +
             (C3198 * C50928 +
              (C117 * C460 + C497 + C497 + C50892 * C480) * C17173) *
                 C17175) *
                C50859) *
               C1022 +
           (((C3198 * C17173 + C3197 * C50928) * C17175 +
             (C17989 + C17990) * C17176 + (C17991 + C17992) * C17177) *
                C50859 -
            (C17643 * C17177 + (C17337 + C17338) * C17176 +
             (C2487 * C50928 + C2486 * C17173) * C17175) *
                C51004) *
               C50831) *
              C50995 +
          ((((C17492 + C17491) * C17175 + (C17490 + C17489) * C17176 +
             (C17793 + C17794) * C17177) *
                C50859 -
            (C17188 * C17177 + (C17182 + C17181) * C17176 +
             (C17180 + C17179) * C17175) *
                C51004) *
               C1022 +
           (((C17338 + C17337) * C17175 + (C17336 + C17335) * C17176 +
             (C17644 + C17645) * C17177) *
                C51004 -
            (((C117 * C1559 + C1572 + C1572 + C50892 * C1567) * C50928 +
              C921 * C17173) *
                 C17177 +
             (C17992 + C17991) * C17176 + (C17990 + C17989) * C17175) *
                C50859) *
               C50831) *
              C50766)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5113 * C119 + C5120 + C5120 + C5110 * C133 + C5115 * C460 +
              C5121 + C5121 + C5111 * C480 + C5117 * C461 + C5122 + C5122 +
              C5112 * C481) *
                 C17173 +
             (C21813 + C21814 + C21815) * C50928) *
                C50734 * C51004 -
            ((C22463 + C22464 + C22465) * C50928 +
             (C5117 * C1846 + C5538 + C5538 + C5112 * C1854 + C5115 * C461 +
              C5539 + C5539 + C5111 * C481 + C5113 * C460 + C5540 + C5540 +
              C5110 * C480) *
                 C17173) *
                C50734 * C50859) *
               C1022 +
           (((C22465 + C22464 + C22463) * C17173 +
             (C5113 * C1562 + C7025 + C7025 + C5110 * C1570 + C5115 * C2640 +
              C7024 + C7024 + C5111 * C2646 + C5117 * C4512 + C7023 + C7023 +
              C5112 * C4520) *
                 C50928) *
                C50734 * C50859 -
            ((C21816 + C21817 + C21818) * C50928 +
             (C21815 + C21814 + C21813) * C17173) *
                C50734 * C51004) *
               C50831) *
              C50995 +
          ((((C5573 + C5572 + C5571) * C17173 +
             (C6123 + C6124 + C6125) * C50928) *
                C50734 * C50859 -
            ((C5368 + C5369 + C5370) * C50928 +
             (C5173 + C5172 + C5171) * C17173) *
                C50734 * C51004) *
               C1022 +
           (((C5370 + C5369 + C5368) * C17173 +
             (C5371 + C5372 + C5373) * C50928) *
                C50734 * C51004 -
            ((C5117 * C4510 + C7020 + C7020 + C5112 * C4518 + C5115 * C2641 +
              C7021 + C7021 + C5111 * C2647 + C5113 * C1561 + C7022 + C7022 +
              C5110 * C1569) *
                 C50928 +
             (C6125 + C6124 + C6123) * C17173) *
                C50734 * C50859) *
               C50831) *
              C50766)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C17173 +
            C2486 * C50928) *
               C17175 +
           (C17179 + C17180) * C17176 + C17187 * C17177) *
              C50795 * C1093 -
          (C17643 * C17177 + (C17337 + C17338) * C17176 +
           (C2487 * C50928 + C2486 * C17173) * C17175) *
              C50795 * C1094 +
          ((C2487 * C17173 + C2489 * C50928) * C17175 +
           (C17339 + C17340) * C17176 + (C17341 + C17342) * C17177) *
              C50795 * C1095 -
          (((C117 * C2448 + C2473 + C2473 + C50892 * C2454) * C50928 +
            C2491 * C17173) *
               C17177 +
           (C2490 * C50928 + C2488 * C17173) * C17176 +
           (C3457 * C50928 + C2489 * C17173) * C17175) *
              C50795 * C1096) *
         C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C17173 +
             C2486 * C50928) *
                C17175 +
            (C17179 + C17180) * C17176 + C17187 * C17177) *
               C50795 * C1022 -
           (C17643 * C17177 + (C17337 + C17338) * C17176 +
            (C2487 * C50928 + C2486 * C17173) * C17175) *
               C50795 * C50831) *
              C1024 +
          (((C17338 + C17337) * C17175 + (C17336 + C17335) * C17176 +
            (C17644 + C17645) * C17177) *
               C50795 * C50831 -
           (C17188 * C17177 + (C17182 + C17181) * C17176 +
            (C17180 + C17179) * C17175) *
               C50795 * C1022) *
              C1025 +
          ((C17187 * C17175 + (C17184 + C17183) * C17176 +
            (C17185 + C17186) * C17177) *
               C50795 * C1022 -
           (((C117 * C289 + C332 + C332 + C50892 * C309) * C50928 +
             C645 * C17173) *
                C17177 +
            (C17645 + C17644) * C17176 + C17643 * C17175) *
               C50795 * C50831) *
              C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C19810 +
            C2486 * C19811 + C2487 * C19812 + C2489 * C19813) *
               C50734 * C50795 * C1022 -
           (C3457 * C19813 + C2489 * C19812 + C2487 * C19811 + C2486 * C19810) *
               C50734 * C50795 * C50831) *
              C1024 +
          ((C347 * C19810 + C348 * C19811 + C2488 * C19812 + C2490 * C19813) *
               C50734 * C50795 * C50831 -
           (C2488 * C19813 + C348 * C19812 + C347 * C19811 + C168 * C19810) *
               C50734 * C50795 * C1022) *
              C1025 +
          ((C169 * C19810 + C346 * C19811 + C349 * C19812 + C2491 * C19813) *
               C50734 * C50795 * C1022 -
           ((C117 * C2448 + C2473 + C2473 + C50892 * C2454) * C19813 +
            C2491 * C19812 + C349 * C19811 + C346 * C19810) *
               C50734 * C50795 * C50831) *
              C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50892 * C133) * C19810 +
           C2486 * C19811 + C2487 * C19812 + C2489 * C19813) *
              C50734 * C50795 * C1093 -
          (C3457 * C19813 + C2489 * C19812 + C2487 * C19811 + C2486 * C19810) *
              C50734 * C50795 * C1094 +
          (C2487 * C19810 + C2489 * C19811 + C3457 * C19812 + C20510 * C19813) *
              C50734 * C50795 * C1095 -
          ((C117 * C20501 + C20507 + C20507 + C50892 * C20503) * C19813 +
           C20510 * C19812 + C3457 * C19811 + C2489 * C19810) *
              C50734 * C50795 * C1096) *
         C50760) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5113 * C119 + C5120 + C5120 + C5110 * C133 + C5115 * C460 +
             C5121 + C5121 + C5111 * C480 + C5117 * C461 + C5122 + C5122 +
             C5112 * C481) *
                C17173 +
            (C21813 + C21814 + C21815) * C50928) *
               C50734 * C50795 * C1022 -
           ((C21816 + C21817 + C21818) * C50928 +
            (C21815 + C21814 + C21813) * C17173) *
               C50734 * C50795 * C50831) *
              C1024 +
          (((C5370 + C5369 + C5368) * C17173 +
            (C5371 + C5372 + C5373) * C50928) *
               C50734 * C50795 * C50831 -
           ((C5368 + C5369 + C5370) * C50928 +
            (C5173 + C5172 + C5171) * C17173) *
               C50734 * C50795 * C1022) *
              C1025 +
          (((C5176 + C5175 + C5174) * C17173 +
            (C5738 + C5739 + C5740) * C50928) *
               C50734 * C50795 * C1022 -
           ((C5117 * C2642 + C5353 + C5353 + C5112 * C2648 + C5115 * C1560 +
             C5354 + C5354 + C5111 * C1568 + C5113 * C286 + C5355 + C5355 +
             C5110 * C306) *
                C50928 +
            (C5740 + C5739 + C5738) * C17173) *
               C50734 * C50795 * C50831) *
              C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C5113 * C119 + C5120 + C5120 + C5110 * C133 + C5115 * C460 + C5121 +
            C5121 + C5111 * C480 + C5117 * C461 + C5122 + C5122 +
            C5112 * C481) *
               C17173 +
           (C21813 + C21814 + C21815) * C50928) *
              C50734 * C50795 * C1093 -
          ((C21816 + C21817 + C21818) * C50928 +
           (C21815 + C21814 + C21813) * C17173) *
              C50734 * C50795 * C1094 +
          ((C21818 + C21817 + C21816) * C17173 +
           (C22725 + C22726 + C22727) * C50928) *
              C50734 * C50795 * C1095 -
          ((C5117 * C20608 + C22716 + C22716 + C5112 * C20610 + C5115 * C4108 +
            C22717 + C22717 + C5111 * C4112 + C5113 * C2446 + C22718 + C22718 +
            C5110 * C2452) *
               C50928 +
           (C22727 + C22726 + C22725) * C17173) *
              C50734 * C50795 * C1096) *
         C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C19810 +
             C2486 * C19811 + C2487 * C19812 + C2489 * C19813) *
                C50734 * C1673 -
            (C4120 * C19813 + C3197 * C19812 + C3198 * C19811 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C19810) *
                C50734 * C50859) *
               C51003 +
           ((C3198 * C19810 + C3197 * C19811 + C4120 * C19812 +
             C20952 * C19813) *
                C50734 * C50859 -
            (C3457 * C19813 + C2489 * C19812 + C2487 * C19811 +
             C2486 * C19810) *
                C50734 * C1673) *
               C50831) *
              C50995 +
          (((C524 * C19810 + C919 * C19811 + C2668 * C19812 + C3199 * C19813) *
                C50734 * C50859 -
            (C2488 * C19813 + C348 * C19812 + C347 * C19811 + C168 * C19810) *
                C50734 * C1673) *
               C51003 +
           ((C347 * C19810 + C348 * C19811 + C2488 * C19812 + C2490 * C19813) *
                C50734 * C1673 -
            ((C117 * C4107 + C4116 + C4116 + C50892 * C4111) * C19813 +
             C3199 * C19812 + C2668 * C19811 + C919 * C19810) *
                C50734 * C50859) *
               C50831) *
              C50766)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50892 * C133) * C17173 +
              C2486 * C50928) *
                 C17175 +
             (C17179 + C17180) * C17176 + C17187 * C17177) *
                C1673 -
            (C17792 * C17177 + (C17491 + C17492) * C17176 +
             (C3198 * C50928 +
              (C117 * C460 + C497 + C497 + C50892 * C480) * C17173) *
                 C17175) *
                C50859) *
               C51003 +
           (((C3198 * C17173 + C3197 * C50928) * C17175 +
             (C17989 + C17990) * C17176 + (C17991 + C17992) * C17177) *
                C50859 -
            (C17643 * C17177 + (C17337 + C17338) * C17176 +
             (C2487 * C50928 + C2486 * C17173) * C17175) *
                C1673) *
               C50831) *
              C50995 +
          ((((C17492 + C17491) * C17175 + (C17490 + C17489) * C17176 +
             (C17793 + C17794) * C17177) *
                C50859 -
            (C17188 * C17177 + (C17182 + C17181) * C17176 +
             (C17180 + C17179) * C17175) *
                C1673) *
               C51003 +
           (((C17338 + C17337) * C17175 + (C17336 + C17335) * C17176 +
             (C17644 + C17645) * C17177) *
                C1673 -
            (((C117 * C1559 + C1572 + C1572 + C50892 * C1567) * C50928 +
              C921 * C17173) *
                 C17177 +
             (C17992 + C17991) * C17176 + (C17990 + C17989) * C17175) *
                C50859) *
               C50831) *
              C50766)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C5113 * C119 + C5120 + C5120 + C5110 * C133 + C5115 * C460 +
              C5121 + C5121 + C5111 * C480 + C5117 * C461 + C5122 + C5122 +
              C5112 * C481) *
                 C17173 +
             (C21813 + C21814 + C21815) * C50928) *
                C50734 * C1673 -
            ((C22463 + C22464 + C22465) * C50928 +
             (C5117 * C1846 + C5538 + C5538 + C5112 * C1854 + C5115 * C461 +
              C5539 + C5539 + C5111 * C481 + C5113 * C460 + C5540 + C5540 +
              C5110 * C480) *
                 C17173) *
                C50734 * C50859) *
               C51003 +
           (((C22465 + C22464 + C22463) * C17173 +
             (C23396 + C23397 + C23398) * C50928) *
                C50734 * C50859 -
            ((C21816 + C21817 + C21818) * C50928 +
             (C21815 + C21814 + C21813) * C17173) *
                C50734 * C1673) *
               C50831) *
              C50995 +
          ((((C5573 + C5572 + C5571) * C17173 +
             (C6123 + C6124 + C6125) * C50928) *
                C50734 * C50859 -
            ((C5368 + C5369 + C5370) * C50928 +
             (C5173 + C5172 + C5171) * C17173) *
                C50734 * C1673) *
               C51003 +
           (((C5370 + C5369 + C5368) * C17173 +
             (C5371 + C5372 + C5373) * C50928) *
                C50734 * C1673 -
            ((C5117 * C4510 + C7020 + C7020 + C5112 * C4518 + C5115 * C2641 +
              C7021 + C7021 + C5111 * C2647 + C5113 * C1561 + C7022 + C7022 +
              C5110 * C1569) *
                 C50928 +
             (C6125 + C6124 + C6123) * C17173) *
                C50734 * C50859) *
               C50831) *
              C50766)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C19810 +
            C2486 * C19811 + C2487 * C19812 + C2489 * C19813) *
               C50734 * C51050 -
           (C4120 * C19813 + C3197 * C19812 + C3198 * C19811 +
            (C117 * C460 + C497 + C497 + C50892 * C480) * C19810) *
               C50734 * C51051 +
           ((C117 * C461 + C498 + C498 + C50892 * C481) * C19810 +
            C3620 * C19811 + C3621 * C19812 + C20617 * C19813) *
               C50734 * C2089) *
              C51003 +
          ((C3198 * C19810 + C3197 * C19811 + C4120 * C19812 +
            C20952 * C19813) *
               C50734 * C51051 -
           (C3457 * C19813 + C2489 * C19812 + C2487 * C19811 + C2486 * C19810) *
               C50734 * C51050 -
           ((C117 * C20608 + C20614 + C20614 + C50892 * C20610) * C19813 +
            C20617 * C19812 + C3621 * C19811 + C3620 * C19810) *
               C50734 * C2089) *
              C50831) *
         C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C17173 +
             C2486 * C50928) *
                C17175 +
            (C17179 + C17180) * C17176 + C17187 * C17177) *
               C51050 -
           (C17792 * C17177 + (C17491 + C17492) * C17176 +
            (C3198 * C50928 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C17173) *
                C17175) *
               C51051 +
           (((C117 * C461 + C498 + C498 + C50892 * C481) * C17173 +
             C3620 * C50928) *
                C17175 +
            (C17493 + C17494) * C17176 + (C17495 + C17496) * C17177) *
               C2089) *
              C51003 +
          (((C3198 * C17173 + C3197 * C50928) * C17175 +
            (C17989 + C17990) * C17176 + (C17991 + C17992) * C17177) *
               C51051 -
           (C17643 * C17177 + (C17337 + C17338) * C17176 +
            (C2487 * C50928 + C2486 * C17173) * C17175) *
               C51050 -
           (((C117 * C2642 + C2661 + C2661 + C50892 * C2648) * C50928 +
             C8338 * C17173) *
                C17177 +
            (C2670 * C50928 + C2669 * C17173) * C17176 +
            (C3621 * C50928 + C3620 * C17173) * C17175) *
               C2089) *
              C50831) *
         C50760) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5113 * C119 + C5120 + C5120 + C5110 * C133 + C5115 * C460 +
             C5121 + C5121 + C5111 * C480 + C5117 * C461 + C5122 + C5122 +
             C5112 * C481) *
                C17173 +
            (C21813 + C21814 + C21815) * C50928) *
               C50734 * C51050 -
           ((C22463 + C22464 + C22465) * C50928 +
            (C5117 * C1846 + C5538 + C5538 + C5112 * C1854 + C5115 * C461 +
             C5539 + C5539 + C5111 * C481 + C5113 * C460 + C5540 + C5540 +
             C5110 * C480) *
                C17173) *
               C50734 * C51051 +
           ((C5113 * C461 + C5541 + C5541 + C5110 * C481 + C5115 * C1846 +
             C5542 + C5542 + C5111 * C1854 + C5117 * C5519 + C5543 + C5543 +
             C5112 * C5525) *
                C17173 +
            (C22892 + C22893 + C22894) * C50928) *
               C50734 * C2089) *
              C51003 +
          (((C22465 + C22464 + C22463) * C17173 +
            (C23396 + C23397 + C23398) * C50928) *
               C50734 * C51051 -
           ((C21816 + C21817 + C21818) * C50928 +
            (C21815 + C21814 + C21813) * C17173) *
               C50734 * C51050 -
           ((C5117 * C22873 + C22883 + C22883 + C5112 * C22875 + C5115 * C4512 +
             C22884 + C22884 + C5111 * C4520 + C5113 * C2640 + C22885 + C22885 +
             C5110 * C2646) *
                C50928 +
            (C22894 + C22893 + C22892) * C17173) *
               C50734 * C2089) *
              C50831) *
         C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C141 + C141 + C50892 * C133) * C17173 +
                 C2486 * C50928) *
                    C17175 +
                (C17179 + C17180) * C17176 + C17187 * C17177) *
                   C1673 -
               (C17792 * C17177 + (C17491 + C17492) * C17176 +
                (C3198 * C50928 +
                 (C117 * C460 + C497 + C497 + C50892 * C480) * C17173) *
                    C17175) *
                   C50859) *
                  C50779 * C1024 +
              (((C17492 + C17491) * C17175 + (C17490 + C17489) * C17176 +
                (C17793 + C17794) * C17177) *
                   C50859 -
               (C17188 * C17177 + (C17182 + C17181) * C17176 +
                (C17180 + C17179) * C17175) *
                   C1673) *
                  C50779 * C1025 +
              ((C17187 * C17175 + (C17184 + C17183) * C17176 +
                (C17185 + C17186) * C17177) *
                   C1673 -
               (((C117 * C890 + C912 + C912 + C50892 * C900) * C50928 +
                 C755 * C17173) *
                    C17177 +
                (C17794 + C17793) * C17176 + C17792 * C17175) *
                   C50859) *
                  C50779 * C1026) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C141 + C141 + C50892 * C133) * C17173 +
                 C2486 * C50928) *
                    C17175 +
                (C17179 + C17180) * C17176 + C17187 * C17177) *
                   C1673 -
               (C17792 * C17177 + (C17491 + C17492) * C17176 +
                (C3198 * C50928 +
                 (C117 * C460 + C497 + C497 + C50892 * C480) * C17173) *
                    C17175) *
                   C50859) *
                  C275 +
              (((C3198 * C17173 + C3197 * C50928) * C17175 +
                (C17989 + C17990) * C17176 + (C17991 + C17992) * C17177) *
                   C50859 -
               (C17643 * C17177 + (C17337 + C17338) * C17176 +
                (C2487 * C50928 + C2486 * C17173) * C17175) *
                   C1673) *
                  C276 +
              (((C2487 * C17173 + C2489 * C50928) * C17175 +
                (C17339 + C17340) * C17176 + (C17341 + C17342) * C17177) *
                   C1673 -
               (((C117 * C3172 + C3190 + C3190 + C50892 * C3178) * C50928 +
                 C2975 * C17173) *
                    C17177 +
                (C3199 * C50928 + C2668 * C17173) * C17176 +
                (C4120 * C50928 + C3197 * C17173) * C17175) *
                   C50859) *
                  C277) *
             C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C17173 +
            C2486 * C50928) *
               C17175 +
           (C17179 + C17180) * C17176 + C17187 * C17177) *
              C1839 -
          (C17792 * C17177 + (C17491 + C17492) * C17176 +
           (C3198 * C50928 +
            (C117 * C460 + C497 + C497 + C50892 * C480) * C17173) *
               C17175) *
              C1840 +
          (((C117 * C461 + C498 + C498 + C50892 * C481) * C17173 +
            C3620 * C50928) *
               C17175 +
           (C17493 + C17494) * C17176 + (C17495 + C17496) * C17177) *
              C1841 -
          (((C117 * C6098 + C10102 + C10102 + C50892 * C6100) * C50928 +
            (C117 * C1844 + C1857 + C1857 + C50892 * C1852) * C17173) *
               C17177 +
           ((C117 * C4511 + C4524 + C4524 + C50892 * C4519) * C50928 +
            (C117 * C1845 + C1858 + C1858 + C50892 * C1853) * C17173) *
               C17176 +
           ((C117 * C4513 + C4526 + C4526 + C50892 * C4521) * C50928 +
            (C117 * C1846 + C1859 + C1859 + C50892 * C1854) * C17173) *
               C17175) *
              C1842) *
         C50779 * C50760) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C19810 +
            C2486 * C19811 + C2487 * C19812 + C2489 * C19813) *
               C50734 * C1673 -
           (C4120 * C19813 + C3197 * C19812 + C3198 * C19811 +
            (C117 * C460 + C497 + C497 + C50892 * C480) * C19810) *
               C50734 * C50859) *
              C50779 * C1024 +
          ((C524 * C19810 + C919 * C19811 + C2668 * C19812 + C3199 * C19813) *
               C50734 * C50859 -
           (C2488 * C19813 + C348 * C19812 + C347 * C19811 + C168 * C19810) *
               C50734 * C1673) *
              C50779 * C1025 +
          ((C169 * C19810 + C346 * C19811 + C349 * C19812 + C2491 * C19813) *
               C50734 * C1673 -
           ((C117 * C3172 + C3190 + C3190 + C50892 * C3178) * C19813 +
            C2975 * C19812 + C920 * C19811 + C523 * C19810) *
               C50734 * C50859) *
              C50779 * C1026)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C19810 +
            C2486 * C19811 + C2487 * C19812 + C2489 * C19813) *
               C50734 * C1673 -
           (C4120 * C19813 + C3197 * C19812 + C3198 * C19811 +
            (C117 * C460 + C497 + C497 + C50892 * C480) * C19810) *
               C50734 * C50859) *
              C275 +
          ((C3198 * C19810 + C3197 * C19811 + C4120 * C19812 +
            C20952 * C19813) *
               C50734 * C50859 -
           (C3457 * C19813 + C2489 * C19812 + C2487 * C19811 + C2486 * C19810) *
               C50734 * C1673) *
              C276 +
          ((C2487 * C19810 + C2489 * C19811 + C3457 * C19812 +
            C20510 * C19813) *
               C50734 * C1673 -
           ((C117 * C20943 + C20949 + C20949 + C50892 * C20945) * C19813 +
            C20952 * C19812 + C4120 * C19811 + C3197 * C19810) *
               C50734 * C50859) *
              C277) *
         C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50892 * C133) * C19810 +
           C2486 * C19811 + C2487 * C19812 + C2489 * C19813) *
              C50734 * C1839 -
          (C4120 * C19813 + C3197 * C19812 + C3198 * C19811 +
           (C117 * C460 + C497 + C497 + C50892 * C480) * C19810) *
              C50734 * C1840 +
          ((C117 * C461 + C498 + C498 + C50892 * C481) * C19810 +
           C3620 * C19811 + C3621 * C19812 + C20617 * C19813) *
              C50734 * C1841 -
          ((C117 * C21214 + C21218 + C21218 + C50892 * C21216) * C19813 +
           (C117 * C4512 + C4525 + C4525 + C50892 * C4520) * C19812 +
           (C117 * C4513 + C4526 + C4526 + C50892 * C4521) * C19811 +
           (C117 * C1846 + C1859 + C1859 + C50892 * C1854) * C19810) *
              C50734 * C1842) *
         C50779 * C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * ((((C5113 * C119 + C5120 + C5120 + C5110 * C133 +
                                 C5115 * C460 + C5121 + C5121 + C5111 * C480 +
                                 C5117 * C461 + C5122 + C5122 + C5112 * C481) *
                                    C17173 +
                                (C21813 + C21814 + C21815) * C50928) *
                                   C50734 * C1673 -
                               ((C22463 + C22464 + C22465) * C50928 +
                                (C5117 * C1846 + C5538 + C5538 + C5112 * C1854 +
                                 C5115 * C461 + C5539 + C5539 + C5111 * C481 +
                                 C5113 * C460 + C5540 + C5540 + C5110 * C480) *
                                    C17173) *
                                   C50734 * C50859) *
                                  C50779 * C1024 +
                              (((C5573 + C5572 + C5571) * C17173 +
                                (C6123 + C6124 + C6125) * C50928) *
                                   C50734 * C50859 -
                               ((C5368 + C5369 + C5370) * C50928 +
                                (C5173 + C5172 + C5171) * C17173) *
                                   C50734 * C1673) *
                                  C50779 * C1025 +
                              (((C5176 + C5175 + C5174) * C17173 +
                                (C5738 + C5739 + C5740) * C50928) *
                                   C50734 * C1673 -
                               ((C5117 * C6098 + C6114 + C6114 + C5112 * C6100 +
                                 C5115 * C1213 + C6115 + C6115 + C5111 * C1221 +
                                 C5113 * C888 + C6116 + C6116 + C5110 * C898) *
                                    C50928 +
                                (C5904 + C5903 + C5902) * C17173) *
                                   C50734 * C50859) *
                                  C50779 * C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C5113 * C119 + C5120 + C5120 + C5110 * C133 + C5115 * C460 +
             C5121 + C5121 + C5111 * C480 + C5117 * C461 + C5122 + C5122 +
             C5112 * C481) *
                C17173 +
            (C21813 + C21814 + C21815) * C50928) *
               C50734 * C1673 -
           ((C22463 + C22464 + C22465) * C50928 +
            (C5117 * C1846 + C5538 + C5538 + C5112 * C1854 + C5115 * C461 +
             C5539 + C5539 + C5111 * C481 + C5113 * C460 + C5540 + C5540 +
             C5110 * C480) *
                C17173) *
               C50734 * C50859) *
              C275 +
          (((C22465 + C22464 + C22463) * C17173 +
            (C23396 + C23397 + C23398) * C50928) *
               C50734 * C50859 -
           ((C21816 + C21817 + C21818) * C50928 +
            (C21815 + C21814 + C21813) * C17173) *
               C50734 * C1673) *
              C276 +
          (((C21818 + C21817 + C21816) * C17173 +
            (C22725 + C22726 + C22727) * C50928) *
               C50734 * C1673 -
           ((C5117 * C21214 + C23387 + C23387 + C5112 * C21216 + C5115 * C3604 +
             C23388 + C23388 + C5111 * C3608 + C5113 * C3170 + C23389 + C23389 +
             C5110 * C3176) *
                C50928 +
            (C23398 + C23397 + C23396) * C17173) *
               C50734 * C50859) *
              C277) *
         C50760) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C5113 * C119 + C5120 + C5120 + C5110 * C133 + C5115 * C460 + C5121 +
            C5121 + C5111 * C480 + C5117 * C461 + C5122 + C5122 +
            C5112 * C481) *
               C17173 +
           (C21813 + C21814 + C21815) * C50928) *
              C50734 * C1839 -
          ((C22463 + C22464 + C22465) * C50928 +
           (C5117 * C1846 + C5538 + C5538 + C5112 * C1854 + C5115 * C461 +
            C5539 + C5539 + C5111 * C481 + C5113 * C460 + C5540 + C5540 +
            C5110 * C480) *
               C17173) *
              C50734 * C1840 +
          ((C5113 * C461 + C5541 + C5541 + C5110 * C481 + C5115 * C1846 +
            C5542 + C5542 + C5111 * C1854 + C5117 * C5519 + C5543 + C5543 +
            C5112 * C5525) *
               C17173 +
           (C22892 + C22893 + C22894) * C50928) *
              C50734 * C1841 -
          ((C5117 * C23788 + C23792 + C23792 + C5112 * C23790 + C5115 * C6522 +
            C23793 + C23793 + C5111 * C6526 + C5113 * C4513 + C23794 + C23794 +
            C5110 * C4521) *
               C50928 +
           (C5117 * C7416 + C7425 + C7425 + C5112 * C7420 + C5115 * C5519 +
            C7426 + C7426 + C5111 * C5525 + C5113 * C1846 + C7427 + C7427 +
            C5110 * C1854) *
               C17173) *
              C50734 * C1842) *
         C50779 * C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C19810 +
            C2486 * C19811 + C2487 * C19812 + C2489 * C19813) *
               C50734 * C51050 -
           (C4120 * C19813 + C3197 * C19812 + C3198 * C19811 +
            (C117 * C460 + C497 + C497 + C50892 * C480) * C19810) *
               C50734 * C51051 +
           ((C117 * C461 + C498 + C498 + C50892 * C481) * C19810 +
            C3620 * C19811 + C3621 * C19812 + C20617 * C19813) *
               C50734 * C2089) *
              C50779 * C50995 +
          ((C524 * C19810 + C919 * C19811 + C2668 * C19812 + C3199 * C19813) *
               C50734 * C51051 -
           (C2488 * C19813 + C348 * C19812 + C347 * C19811 + C168 * C19810) *
               C50734 * C51050 -
           ((C117 * C3603 + C3614 + C3614 + C50892 * C3607) * C19813 +
            C2670 * C19812 + C2669 * C19811 + C525 * C19810) *
               C50734 * C2089) *
              C50779 * C50766)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C17173 +
             C2486 * C50928) *
                C17175 +
            (C17179 + C17180) * C17176 + C17187 * C17177) *
               C51050 -
           (C17792 * C17177 + (C17491 + C17492) * C17176 +
            (C3198 * C50928 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C17173) *
                C17175) *
               C51051 +
           (((C117 * C461 + C498 + C498 + C50892 * C481) * C17173 +
             C3620 * C50928) *
                C17175 +
            (C17493 + C17494) * C17176 + (C17495 + C17496) * C17177) *
               C2089) *
              C50779 * C50995 +
          (((C17492 + C17491) * C17175 + (C17490 + C17489) * C17176 +
            (C17793 + C17794) * C17177) *
               C51051 -
           (C17188 * C17177 + (C17182 + C17181) * C17176 +
            (C17180 + C17179) * C17175) *
               C51050 -
           (((C117 * C1212 + C1225 + C1225 + C50892 * C1220) * C50928 +
             C527 * C17173) *
                C17177 +
            (C17496 + C17495) * C17176 + (C17494 + C17493) * C17175) *
               C2089) *
              C50779 * C50766)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C5113 * C119 + C5120 + C5120 + C5110 * C133 + C5115 * C460 +
             C5121 + C5121 + C5111 * C480 + C5117 * C461 + C5122 + C5122 +
             C5112 * C481) *
                C17173 +
            (C21813 + C21814 + C21815) * C50928) *
               C50734 * C51050 -
           ((C22463 + C22464 + C22465) * C50928 +
            (C5117 * C1846 + C5538 + C5538 + C5112 * C1854 + C5115 * C461 +
             C5539 + C5539 + C5111 * C481 + C5113 * C460 + C5540 + C5540 +
             C5110 * C480) *
                C17173) *
               C50734 * C51051 +
           ((C5113 * C461 + C5541 + C5541 + C5110 * C481 + C5115 * C1846 +
             C5542 + C5542 + C5111 * C1854 + C5117 * C5519 + C5543 + C5543 +
             C5112 * C5525) *
                C17173 +
            (C22892 + C22893 + C22894) * C50928) *
               C50734 * C2089) *
              C50779 * C50995 +
          (((C5573 + C5572 + C5571) * C17173 +
            (C6123 + C6124 + C6125) * C50928) *
               C50734 * C51051 -
           ((C5368 + C5369 + C5370) * C50928 +
            (C5173 + C5172 + C5171) * C17173) *
               C50734 * C51050 -
           ((C5117 * C6521 + C6528 + C6528 + C5112 * C6525 + C5115 * C4511 +
             C6529 + C6529 + C5111 * C4519 + C5113 * C1214 + C6530 + C6530 +
             C5110 * C1222) *
                C50928 +
            (C5576 + C5575 + C5574) * C17173) *
               C50734 * C2089) *
              C50779 * C50766)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C17173 +
             C2486 * C50928) *
                C17175 +
            (C17179 + C17180) * C17176 + C17187 * C17177) *
               C1673 -
           (C17792 * C17177 + (C17491 + C17492) * C17176 +
            (C3198 * C50928 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C17173) *
                C17175) *
               C50859) *
              C275 +
          (((C3198 * C17173 + C3197 * C50928) * C17175 +
            (C17989 + C17990) * C17176 + (C17991 + C17992) * C17177) *
               C50859 -
           (C17643 * C17177 + (C17337 + C17338) * C17176 +
            (C2487 * C50928 + C2486 * C17173) * C17175) *
               C1673) *
              C276 +
          (((C2487 * C17173 + C2489 * C50928) * C17175 +
            (C17339 + C17340) * C17176 + (C17341 + C17342) * C17177) *
               C1673 -
           (((C117 * C3172 + C3190 + C3190 + C50892 * C3178) * C50928 +
             C2975 * C17173) *
                C17177 +
            (C3199 * C50928 + C2668 * C17173) * C17176 +
            (C4120 * C50928 + C3197 * C17173) * C17175) *
               C50859) *
              C277) *
         C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C17173 +
             C2486 * C50928) *
                C17175 +
            (C17179 + C17180) * C17176 + C17187 * C17177) *
               C1673 -
           (C17792 * C17177 + (C17491 + C17492) * C17176 +
            (C3198 * C50928 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C17173) *
                C17175) *
               C50859) *
              C50779 * C1024 +
          (((C17492 + C17491) * C17175 + (C17490 + C17489) * C17176 +
            (C17793 + C17794) * C17177) *
               C50859 -
           (C17188 * C17177 + (C17182 + C17181) * C17176 +
            (C17180 + C17179) * C17175) *
               C1673) *
              C50779 * C1025 +
          ((C17187 * C17175 + (C17184 + C17183) * C17176 +
            (C17185 + C17186) * C17177) *
               C1673 -
           (((C117 * C890 + C912 + C912 + C50892 * C900) * C50928 +
             C755 * C17173) *
                C17177 +
            (C17794 + C17793) * C17176 + C17792 * C17175) *
               C50859) *
              C50779 * C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C19810 +
            C2486 * C19811 + C2487 * C19812 + C2489 * C19813) *
               C50734 * C1673 -
           (C4120 * C19813 + C3197 * C19812 + C3198 * C19811 +
            (C117 * C460 + C497 + C497 + C50892 * C480) * C19810) *
               C50734 * C50859) *
              C50779 * C1024 +
          ((C524 * C19810 + C919 * C19811 + C2668 * C19812 + C3199 * C19813) *
               C50734 * C50859 -
           (C2488 * C19813 + C348 * C19812 + C347 * C19811 + C168 * C19810) *
               C50734 * C1673) *
              C50779 * C1025 +
          ((C169 * C19810 + C346 * C19811 + C349 * C19812 + C2491 * C19813) *
               C50734 * C1673 -
           ((C117 * C3172 + C3190 + C3190 + C50892 * C3178) * C19813 +
            C2975 * C19812 + C920 * C19811 + C523 * C19810) *
               C50734 * C50859) *
              C50779 * C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C19810 +
            C2486 * C19811 + C2487 * C19812 + C2489 * C19813) *
               C50734 * C1673 -
           (C4120 * C19813 + C3197 * C19812 + C3198 * C19811 +
            (C117 * C460 + C497 + C497 + C50892 * C480) * C19810) *
               C50734 * C50859) *
              C275 +
          ((C3198 * C19810 + C3197 * C19811 + C4120 * C19812 +
            C20952 * C19813) *
               C50734 * C50859 -
           (C3457 * C19813 + C2489 * C19812 + C2487 * C19811 + C2486 * C19810) *
               C50734 * C1673) *
              C276 +
          ((C2487 * C19810 + C2489 * C19811 + C3457 * C19812 +
            C20510 * C19813) *
               C50734 * C1673 -
           ((C117 * C20943 + C20949 + C20949 + C50892 * C20945) * C19813 +
            C20952 * C19812 + C4120 * C19811 + C3197 * C19810) *
               C50734 * C50859) *
              C277) *
         C50760) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5113 * C119 + C5120 + C5120 + C5110 * C133 + C5115 * C460 +
             C5121 + C5121 + C5111 * C480 + C5117 * C461 + C5122 + C5122 +
             C5112 * C481) *
                C17173 +
            (C21813 + C21814 + C21815) * C50928) *
               C50734 * C1673 -
           ((C22463 + C22464 + C22465) * C50928 +
            (C5117 * C1846 + C5538 + C5538 + C5112 * C1854 + C5115 * C461 +
             C5539 + C5539 + C5111 * C481 + C5113 * C460 + C5540 + C5540 +
             C5110 * C480) *
                C17173) *
               C50734 * C50859) *
              C50779 * C1024 +
          (((C5573 + C5572 + C5571) * C17173 +
            (C6123 + C6124 + C6125) * C50928) *
               C50734 * C50859 -
           ((C5368 + C5369 + C5370) * C50928 +
            (C5173 + C5172 + C5171) * C17173) *
               C50734 * C1673) *
              C50779 * C1025 +
          (((C5176 + C5175 + C5174) * C17173 +
            (C5738 + C5739 + C5740) * C50928) *
               C50734 * C1673 -
           ((C5117 * C6098 + C6114 + C6114 + C5112 * C6100 + C5115 * C1213 +
             C6115 + C6115 + C5111 * C1221 + C5113 * C888 + C6116 + C6116 +
             C5110 * C898) *
                C50928 +
            (C5904 + C5903 + C5902) * C17173) *
               C50734 * C50859) *
              C50779 * C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C5113 * C119 + C5120 + C5120 + C5110 * C133 + C5115 * C460 +
             C5121 + C5121 + C5111 * C480 + C5117 * C461 + C5122 + C5122 +
             C5112 * C481) *
                C17173 +
            (C21813 + C21814 + C21815) * C50928) *
               C50734 * C1673 -
           ((C22463 + C22464 + C22465) * C50928 +
            (C5117 * C1846 + C5538 + C5538 + C5112 * C1854 + C5115 * C461 +
             C5539 + C5539 + C5111 * C481 + C5113 * C460 + C5540 + C5540 +
             C5110 * C480) *
                C17173) *
               C50734 * C50859) *
              C275 +
          (((C22465 + C22464 + C22463) * C17173 +
            (C23396 + C23397 + C23398) * C50928) *
               C50734 * C50859 -
           ((C21816 + C21817 + C21818) * C50928 +
            (C21815 + C21814 + C21813) * C17173) *
               C50734 * C1673) *
              C276 +
          (((C21818 + C21817 + C21816) * C17173 +
            (C22725 + C22726 + C22727) * C50928) *
               C50734 * C1673 -
           ((C5117 * C21214 + C23387 + C23387 + C5112 * C21216 + C5115 * C3604 +
             C23388 + C23388 + C5111 * C3608 + C5113 * C3170 + C23389 + C23389 +
             C5110 * C3176) *
                C50928 +
            (C23398 + C23397 + C23396) * C17173) *
               C50734 * C50859) *
              C277) *
         C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[120] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C10688 * C119 + C10693 + C10693 + C51017 * C133 +
                       C10690 * C460 + C10694 + C10694 + C50956 * C480) *
                          C17173 +
                      (C13823 + C13824) * C50928) *
                         C50988 +
                     ((C10737 + C10738) * C17173 + C13799 * C50928) * C50739) *
                        C50795 * C51003 -
                    ((C13800 * C50928 + C13801 * C17173) * C50739 +
                     ((C13825 + C13826) * C50928 + (C13824 + C13823) * C17173) *
                         C50988) *
                        C50795 * C50831) *
                       C51046 +
                   (((C13799 * C17173 + C13806 * C50928) * C50988 +
                     (C14227 * C17173 + (C10949 + C10950) * C50928) * C50739) *
                        C50795 * C50831 -
                    ((C11299 * C50928 + (C10740 + C10739) * C17173) * C50739 +
                     (C13801 * C50928 + (C10738 + C10737) * C17173) * C50988) *
                        C50795 * C51003) *
                       C51047 +
                   (((C10745 * C17173 + C14227 * C50928) * C50988 +
                     ((C10742 + C10741) * C17173 + (C11311 + C11312) * C50928) *
                         C50739) *
                        C50795 * C51003 -
                    (((C10690 * C1559 + C10925 + C10925 + C50956 * C1567 +
                       C10688 * C287 + C10926 + C10926 + C51017 * C307) *
                          C50928 +
                      (C11312 + C11311) * C17173) *
                         C50739 +
                     ((C10950 + C10949) * C50928 + C11299 * C17173) * C50988) *
                        C50795 * C50831) *
                       C635)) /
                 (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
               C10694 + C10694 + C50956 * C480) *
                  C17173 +
              (C13823 + C13824) * C50928) *
                 C50988 +
             ((C10737 + C10738) * C17173 + C13799 * C50928) * C50739) *
                C51004 -
            ((C14680 * C50928 + (C11147 + C11148) * C17173) * C50739 +
             ((C14698 + C14699) * C50928 +
              (C10690 * C461 + C11109 + C11109 + C50956 * C481 + C10688 * C460 +
               C11110 + C11110 + C51017 * C480) *
                  C17173) *
                 C50988) *
                C50859) *
               C51003 +
           ((((C14699 + C14698) * C17173 + (C15906 + C15907) * C50928) *
                 C50988 +
             (C14685 * C17173 + (C14700 + C14701) * C50928) * C50739) *
                C50859 -
            ((C13800 * C50928 + C13801 * C17173) * C50739 +
             ((C13825 + C13826) * C50928 + (C13824 + C13823) * C17173) *
                 C50988) *
                C51004) *
               C50831) *
              C278 +
          (((((C11148 + C11147) * C17173 + C14685 * C50928) * C50988 +
             ((C11146 + C11145) * C17173 + (C11693 + C11694) * C50928) *
                 C50739) *
                C50859 -
            ((C11299 * C50928 + (C10740 + C10739) * C17173) * C50739 +
             (C13801 * C50928 + (C10738 + C10737) * C17173) * C50988) *
                C51004) *
               C51003 +
           (((C13799 * C17173 + C13806 * C50928) * C50988 +
             (C14227 * C17173 + (C10949 + C10950) * C50928) * C50739) *
                C51004 -
            (((C10690 * C2642 + C12583 + C12583 + C50956 * C2648 +
               C10688 * C1560 + C12584 + C12584 + C51017 * C1568) *
                  C50928 +
              (C11694 + C11693) * C17173) *
                 C50739 +
             ((C14701 + C14700) * C50928 + C14680 * C17173) * C50988) *
                C50859) *
               C50831) *
              C50766)) /
        (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
              C10694 + C10694 + C50956 * C480) *
                 C17173 +
             (C13823 + C13824) * C50928) *
                C50988 +
            ((C10737 + C10738) * C17173 + C13799 * C50928) * C50739) *
               C50795 * C275 -
           ((C13800 * C50928 + C13801 * C17173) * C50739 +
            ((C13825 + C13826) * C50928 + (C13824 + C13823) * C17173) *
                C50988) *
               C50795 * C276 +
           (((C13826 + C13825) * C17173 + (C15038 + C15039) * C50928) * C50988 +
            (C13806 * C17173 + (C13827 + C13828) * C50928) * C50739) *
               C50795 * C277) *
              C278 +
          (((C13799 * C17173 + C13806 * C50928) * C50988 +
            (C14227 * C17173 + (C10949 + C10950) * C50928) * C50739) *
               C50795 * C276 -
           ((C11299 * C50928 + (C10740 + C10739) * C17173) * C50739 +
            (C13801 * C50928 + (C10738 + C10737) * C17173) * C50988) *
               C50795 * C275 -
           (((C10690 * C3172 + C11939 + C11939 + C50956 * C3178 +
              C10688 * C1099 + C11940 + C11940 + C51017 * C1107) *
                 C50928 +
             (C10950 + C10949) * C17173) *
                C50739 +
            ((C13828 + C13827) * C50928 + C13800 * C17173) * C50988) *
               C50795 * C277) *
              C50766)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
             C10694 + C10694 + C50956 * C480) *
                C17173 +
            (C13823 + C13824) * C50928) *
               C50988 +
           ((C10737 + C10738) * C17173 + C13799 * C50928) * C50739) *
              C50795 * C50779 * C113 -
          ((C11299 * C50928 + (C10740 + C10739) * C17173) * C50739 +
           (C13801 * C50928 + (C10738 + C10737) * C17173) * C50988) *
              C50795 * C50779 * C114 +
          ((C10745 * C17173 + C14227 * C50928) * C50988 +
           ((C10742 + C10741) * C17173 + (C11311 + C11312) * C50928) * C50739) *
              C50795 * C50779 * C115 -
          (((C10690 * C890 + C11304 + C11304 + C50956 * C900 + C10688 * C288 +
             C11305 + C11305 + C51017 * C308) *
                C50928 +
            (C10744 + C10743) * C17173) *
               C50739 +
           ((C11312 + C11311) * C50928 + C10746 * C17173) * C50988) *
              C50795 * C50779 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
              C10694 + C10694 + C50956 * C480) *
                 C17173 +
             (C13823 + C13824) * C50928) *
                C50988 +
            ((C10737 + C10738) * C17173 + C13799 * C50928) * C50739) *
               C454 -
           ((C14680 * C50928 + (C11147 + C11148) * C17173) * C50739 +
            ((C14698 + C14699) * C50928 +
             (C10690 * C461 + C11109 + C11109 + C50956 * C481 + C10688 * C460 +
              C11110 + C11110 + C51017 * C480) *
                 C17173) *
                C50988) *
               C455 +
           (((C10688 * C461 + C11111 + C11111 + C51017 * C481 + C10690 * C1846 +
              C11112 + C11112 + C50956 * C1854) *
                 C17173 +
             (C15246 + C15247) * C50928) *
                C50988 +
            ((C11149 + C11150) * C17173 + (C14031 + C14032) * C50928) *
                C50739) *
               C456) *
              C50779 * C278 +
          ((((C11148 + C11147) * C17173 + C14685 * C50928) * C50988 +
            ((C11146 + C11145) * C17173 + (C11693 + C11694) * C50928) *
                C50739) *
               C455 -
           ((C11299 * C50928 + (C10740 + C10739) * C17173) * C50739 +
            (C13801 * C50928 + (C10738 + C10737) * C17173) * C50988) *
               C454 -
           (((C10690 * C6098 + C12091 + C12091 + C50956 * C6100 +
              C10688 * C1213 + C12092 + C12092 + C51017 * C1221) *
                 C50928 +
             (C11152 + C11151) * C17173) *
                C50739 +
            ((C14032 + C14031) * C50928 + (C11150 + C11149) * C17173) *
                C50988) *
               C456) *
              C50779 * C50766)) /
            (p * q * std::sqrt(p + q));
    d2ee[123] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C10688 * C119 + C10693 + C10693 + C51017 * C133 +
                       C10690 * C460 + C10694 + C10694 + C50956 * C480) *
                          C17173 +
                      (C13823 + C13824) * C50928) *
                         C50988 +
                     ((C10737 + C10738) * C17173 + C13799 * C50928) * C50739) *
                        C51004 -
                    ((C14680 * C50928 + (C11147 + C11148) * C17173) * C50739 +
                     ((C14698 + C14699) * C50928 +
                      (C10690 * C461 + C11109 + C11109 + C50956 * C481 +
                       C10688 * C460 + C11110 + C11110 + C51017 * C480) *
                          C17173) *
                         C50988) *
                        C50859) *
                       C50779 * C51046 +
                   ((((C11148 + C11147) * C17173 + C14685 * C50928) * C50988 +
                     ((C11146 + C11145) * C17173 + (C11693 + C11694) * C50928) *
                         C50739) *
                        C50859 -
                    ((C11299 * C50928 + (C10740 + C10739) * C17173) * C50739 +
                     (C13801 * C50928 + (C10738 + C10737) * C17173) * C50988) *
                        C51004) *
                       C50779 * C51047 +
                   (((C10745 * C17173 + C14227 * C50928) * C50988 +
                     ((C10742 + C10741) * C17173 + (C11311 + C11312) * C50928) *
                         C50739) *
                        C51004 -
                    (((C10690 * C1212 + C11681 + C11681 + C50956 * C1220 +
                       C10688 * C889 + C11682 + C11682 + C51017 * C899) *
                          C50928 +
                      (C11472 + C11471) * C17173) *
                         C50739 +
                     ((C11694 + C11693) * C50928 + C11459 * C17173) * C50988) *
                        C50859) *
                       C50779 * C635)) /
                 (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
             C10694 + C10694 + C50956 * C480) *
                C17173 +
            (C13823 + C13824) * C50928) *
               C50988 +
           ((C10737 + C10738) * C17173 + C13799 * C50928) * C50739) *
              C50795 * C50779 * C113 -
          ((C11299 * C50928 + (C10740 + C10739) * C17173) * C50739 +
           (C13801 * C50928 + (C10738 + C10737) * C17173) * C50988) *
              C50795 * C50779 * C114 +
          ((C10745 * C17173 + C14227 * C50928) * C50988 +
           ((C10742 + C10741) * C17173 + (C11311 + C11312) * C50928) * C50739) *
              C50795 * C50779 * C115 -
          (((C10690 * C890 + C11304 + C11304 + C50956 * C900 + C10688 * C288 +
             C11305 + C11305 + C51017 * C308) *
                C50928 +
            (C10744 + C10743) * C17173) *
               C50739 +
           ((C11312 + C11311) * C50928 + C10746 * C17173) * C50988) *
              C50795 * C50779 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
              C10694 + C10694 + C50956 * C480) *
                 C17173 +
             (C13823 + C13824) * C50928) *
                C50988 +
            ((C10737 + C10738) * C17173 + C13799 * C50928) * C50739) *
               C50795 * C275 -
           ((C13800 * C50928 + C13801 * C17173) * C50739 +
            ((C13825 + C13826) * C50928 + (C13824 + C13823) * C17173) *
                C50988) *
               C50795 * C276 +
           (((C13826 + C13825) * C17173 + (C15038 + C15039) * C50928) * C50988 +
            (C13806 * C17173 + (C13827 + C13828) * C50928) * C50739) *
               C50795 * C277) *
              C278 +
          (((C13799 * C17173 + C13806 * C50928) * C50988 +
            (C14227 * C17173 + (C10949 + C10950) * C50928) * C50739) *
               C50795 * C276 -
           ((C11299 * C50928 + (C10740 + C10739) * C17173) * C50739 +
            (C13801 * C50928 + (C10738 + C10737) * C17173) * C50988) *
               C50795 * C275 -
           (((C10690 * C3172 + C11939 + C11939 + C50956 * C3178 +
              C10688 * C1099 + C11940 + C11940 + C51017 * C1107) *
                 C50928 +
             (C10950 + C10949) * C17173) *
                C50739 +
            ((C13828 + C13827) * C50928 + C13800 * C17173) * C50988) *
               C50795 * C277) *
              C50766)) /
            (p * q * std::sqrt(p + q));
    d2ee[125] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
              C10694 + C10694 + C50956 * C480) *
                 C17173 +
             (C13823 + C13824) * C50928) *
                C50988 +
            ((C10737 + C10738) * C17173 + C13799 * C50928) * C50739) *
               C50795 * C51048 -
           ((C13800 * C50928 + C13801 * C17173) * C50739 +
            ((C13825 + C13826) * C50928 + (C13824 + C13823) * C17173) *
                C50988) *
               C50795 * C51049 +
           (((C13826 + C13825) * C17173 + (C15038 + C15039) * C50928) * C50988 +
            (C13806 * C17173 + (C13827 + C13828) * C50928) * C50739) *
               C50795 * C1328) *
              C50995 +
          (((C13799 * C17173 + C13806 * C50928) * C50988 +
            (C14227 * C17173 + (C10949 + C10950) * C50928) * C50739) *
               C50795 * C51049 -
           ((C11299 * C50928 + (C10740 + C10739) * C17173) * C50739 +
            (C13801 * C50928 + (C10738 + C10737) * C17173) * C50988) *
               C50795 * C51048 -
           (((C10690 * C3172 + C11939 + C11939 + C50956 * C3178 +
              C10688 * C1099 + C11940 + C11940 + C51017 * C1107) *
                 C50928 +
             (C10950 + C10949) * C17173) *
                C50739 +
            ((C13828 + C13827) * C50928 + C13800 * C17173) * C50988) *
               C50795 * C1328) *
              C50766)) /
        (p * q * std::sqrt(p + q));
    d2ee[126] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
              C10694 + C10694 + C50956 * C480) *
                 C17173 +
             (C13823 + C13824) * C50928) *
                C50988 +
            ((C10737 + C10738) * C17173 + C13799 * C50928) * C50739) *
               C51004 -
           ((C14680 * C50928 + (C11147 + C11148) * C17173) * C50739 +
            ((C14698 + C14699) * C50928 +
             (C10690 * C461 + C11109 + C11109 + C50956 * C481 + C10688 * C460 +
              C11110 + C11110 + C51017 * C480) *
                 C17173) *
                C50988) *
               C50859) *
              C51048 +
          ((((C14699 + C14698) * C17173 + (C15906 + C15907) * C50928) * C50988 +
            (C14685 * C17173 + (C14700 + C14701) * C50928) * C50739) *
               C50859 -
           ((C13800 * C50928 + C13801 * C17173) * C50739 +
            ((C13825 + C13826) * C50928 + (C13824 + C13823) * C17173) *
                C50988) *
               C51004) *
              C51049 +
          ((((C13826 + C13825) * C17173 + (C15038 + C15039) * C50928) * C50988 +
            (C13806 * C17173 + (C13827 + C13828) * C50928) * C50739) *
               C51004 -
           (((C10690 * C3603 + C15898 + C15898 + C50956 * C3607 +
              C10688 * C3171 + C15899 + C15899 + C51017 * C3177) *
                 C50928 +
             (C14701 + C14700) * C17173) *
                C50739 +
            ((C10690 * C3604 + C15900 + C15900 + C50956 * C3608 +
              C10688 * C3170 + C15901 + C15901 + C51017 * C3176) *
                 C50928 +
             (C15907 + C15906) * C17173) *
                C50988) *
               C50859) *
              C1328) *
         C50760) /
        (p * q * std::sqrt(p + q));
    d2ee[127] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
             C10694 + C10694 + C50956 * C480) *
                C17173 +
            (C13823 + C13824) * C50928) *
               C50988 +
           ((C10737 + C10738) * C17173 + C13799 * C50928) * C50739) *
              C50795 * C1093 -
          ((C13800 * C50928 + C13801 * C17173) * C50739 +
           ((C13825 + C13826) * C50928 + (C13824 + C13823) * C17173) * C50988) *
              C50795 * C1094 +
          (((C13826 + C13825) * C17173 + (C15038 + C15039) * C50928) * C50988 +
           (C13806 * C17173 + (C13827 + C13828) * C50928) * C50739) *
              C50795 * C1095 -
          (((C10690 * C4107 + C15030 + C15030 + C50956 * C4111 +
             C10688 * C2447 + C15031 + C15031 + C51017 * C2453) *
                C50928 +
            (C13828 + C13827) * C17173) *
               C50739 +
           ((C10690 * C4108 + C15032 + C15032 + C50956 * C4112 +
             C10688 * C2446 + C15033 + C15033 + C51017 * C2452) *
                C50928 +
            (C15039 + C15038) * C17173) *
               C50988) *
              C50795 * C1096) *
         C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
              C10694 + C10694 + C50956 * C480) *
                 C17173 +
             (C13823 + C13824) * C50928) *
                C50988 +
            ((C10737 + C10738) * C17173 + C13799 * C50928) * C50739) *
               C50795 * C1022 -
           ((C13800 * C50928 + C13801 * C17173) * C50739 +
            ((C13825 + C13826) * C50928 + (C13824 + C13823) * C17173) *
                C50988) *
               C50795 * C50831) *
              C1024 +
          (((C13799 * C17173 + C13806 * C50928) * C50988 +
            (C14227 * C17173 + (C10949 + C10950) * C50928) * C50739) *
               C50795 * C50831 -
           ((C11299 * C50928 + (C10740 + C10739) * C17173) * C50739 +
            (C13801 * C50928 + (C10738 + C10737) * C17173) * C50988) *
               C50795 * C1022) *
              C1025 +
          (((C10745 * C17173 + C14227 * C50928) * C50988 +
            ((C10742 + C10741) * C17173 + (C11311 + C11312) * C50928) *
                C50739) *
               C50795 * C1022 -
           (((C10690 * C1559 + C10925 + C10925 + C50956 * C1567 +
              C10688 * C287 + C10926 + C10926 + C51017 * C307) *
                 C50928 +
             (C11312 + C11311) * C17173) *
                C50739 +
            ((C10950 + C10949) * C50928 + C11299 * C17173) * C50988) *
               C50795 * C50831) *
              C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
              C10694 + C10694 + C50956 * C480) *
                 C17173 +
             (C13823 + C13824) * C50928) *
                C50988 +
            ((C10737 + C10738) * C17173 + C13799 * C50928) * C50739) *
               C454 -
           ((C14680 * C50928 + (C11147 + C11148) * C17173) * C50739 +
            ((C14698 + C14699) * C50928 +
             (C10690 * C461 + C11109 + C11109 + C50956 * C481 + C10688 * C460 +
              C11110 + C11110 + C51017 * C480) *
                 C17173) *
                C50988) *
               C455 +
           (((C10688 * C461 + C11111 + C11111 + C51017 * C481 + C10690 * C1846 +
              C11112 + C11112 + C50956 * C1854) *
                 C17173 +
             (C15246 + C15247) * C50928) *
                C50988 +
            ((C11149 + C11150) * C17173 + (C14031 + C14032) * C50928) *
                C50739) *
               C456) *
              C1022 +
          ((((C14699 + C14698) * C17173 + (C15906 + C15907) * C50928) * C50988 +
            (C14685 * C17173 + (C14700 + C14701) * C50928) * C50739) *
               C455 -
           ((C13800 * C50928 + C13801 * C17173) * C50739 +
            ((C13825 + C13826) * C50928 + (C13824 + C13823) * C17173) *
                C50988) *
               C454 -
           (((C10690 * C4510 + C15238 + C15238 + C50956 * C4518 +
              C10688 * C2641 + C15239 + C15239 + C51017 * C2647) *
                 C50928 +
             (C14032 + C14031) * C17173) *
                C50739 +
            ((C10690 * C4512 + C15240 + C15240 + C50956 * C4520 +
              C10688 * C2640 + C15241 + C15241 + C51017 * C2646) *
                 C50928 +
             (C15247 + C15246) * C17173) *
                C50988) *
               C456) *
              C50831) *
         C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[128] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
               C10694 + C10694 + C50956 * C480) *
                  C17173 +
              (C13823 + C13824) * C50928) *
                 C50988 +
             ((C10737 + C10738) * C17173 + C13799 * C50928) * C50739) *
                C51004 -
            ((C14680 * C50928 + (C11147 + C11148) * C17173) * C50739 +
             ((C14698 + C14699) * C50928 +
              (C10690 * C461 + C11109 + C11109 + C50956 * C481 + C10688 * C460 +
               C11110 + C11110 + C51017 * C480) *
                  C17173) *
                 C50988) *
                C50859) *
               C1022 +
           ((((C14699 + C14698) * C17173 + (C15906 + C15907) * C50928) *
                 C50988 +
             (C14685 * C17173 + (C14700 + C14701) * C50928) * C50739) *
                C50859 -
            ((C13800 * C50928 + C13801 * C17173) * C50739 +
             ((C13825 + C13826) * C50928 + (C13824 + C13823) * C17173) *
                 C50988) *
                C51004) *
               C50831) *
              C50995 +
          (((((C11148 + C11147) * C17173 + C14685 * C50928) * C50988 +
             ((C11146 + C11145) * C17173 + (C11693 + C11694) * C50928) *
                 C50739) *
                C50859 -
            ((C11299 * C50928 + (C10740 + C10739) * C17173) * C50739 +
             (C13801 * C50928 + (C10738 + C10737) * C17173) * C50988) *
                C51004) *
               C1022 +
           (((C13799 * C17173 + C13806 * C50928) * C50988 +
             (C14227 * C17173 + (C10949 + C10950) * C50928) * C50739) *
                C51004 -
            (((C10690 * C2642 + C12583 + C12583 + C50956 * C2648 +
               C10688 * C1560 + C12584 + C12584 + C51017 * C1568) *
                  C50928 +
              (C11694 + C11693) * C17173) *
                 C50739 +
             ((C14701 + C14700) * C50928 + C14680 * C17173) * C50988) *
                C50859) *
               C50831) *
              C50766)) /
        (p * q * std::sqrt(p + q));
    d2ee[129] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
              C10694 + C10694 + C50956 * C480) *
                 C17173 +
             (C13823 + C13824) * C50928) *
                C50988 +
            ((C10737 + C10738) * C17173 + C13799 * C50928) * C50739) *
               C50795 * C1022 -
           ((C13800 * C50928 + C13801 * C17173) * C50739 +
            ((C13825 + C13826) * C50928 + (C13824 + C13823) * C17173) *
                C50988) *
               C50795 * C50831) *
              C1024 +
          (((C13799 * C17173 + C13806 * C50928) * C50988 +
            (C14227 * C17173 + (C10949 + C10950) * C50928) * C50739) *
               C50795 * C50831 -
           ((C11299 * C50928 + (C10740 + C10739) * C17173) * C50739 +
            (C13801 * C50928 + (C10738 + C10737) * C17173) * C50988) *
               C50795 * C1022) *
              C1025 +
          (((C10745 * C17173 + C14227 * C50928) * C50988 +
            ((C10742 + C10741) * C17173 + (C11311 + C11312) * C50928) *
                C50739) *
               C50795 * C1022 -
           (((C10690 * C1559 + C10925 + C10925 + C50956 * C1567 +
              C10688 * C287 + C10926 + C10926 + C51017 * C307) *
                 C50928 +
             (C11312 + C11311) * C17173) *
                C50739 +
            ((C10950 + C10949) * C50928 + C11299 * C17173) * C50988) *
               C50795 * C50831) *
              C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
             C10694 + C10694 + C50956 * C480) *
                C17173 +
            (C13823 + C13824) * C50928) *
               C50988 +
           ((C10737 + C10738) * C17173 + C13799 * C50928) * C50739) *
              C50795 * C1093 -
          ((C13800 * C50928 + C13801 * C17173) * C50739 +
           ((C13825 + C13826) * C50928 + (C13824 + C13823) * C17173) * C50988) *
              C50795 * C1094 +
          (((C13826 + C13825) * C17173 + (C15038 + C15039) * C50928) * C50988 +
           (C13806 * C17173 + (C13827 + C13828) * C50928) * C50739) *
              C50795 * C1095 -
          (((C10690 * C4107 + C15030 + C15030 + C50956 * C4111 +
             C10688 * C2447 + C15031 + C15031 + C51017 * C2453) *
                C50928 +
            (C13828 + C13827) * C17173) *
               C50739 +
           ((C10690 * C4108 + C15032 + C15032 + C50956 * C4112 +
             C10688 * C2446 + C15033 + C15033 + C51017 * C2452) *
                C50928 +
            (C15039 + C15038) * C17173) *
               C50988) *
              C50795 * C1096) *
         C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
               C10694 + C10694 + C50956 * C480) *
                  C17173 +
              (C13823 + C13824) * C50928) *
                 C50988 +
             ((C10737 + C10738) * C17173 + C13799 * C50928) * C50739) *
                C1673 -
            ((C14680 * C50928 + (C11147 + C11148) * C17173) * C50739 +
             ((C14698 + C14699) * C50928 +
              (C10690 * C461 + C11109 + C11109 + C50956 * C481 + C10688 * C460 +
               C11110 + C11110 + C51017 * C480) *
                  C17173) *
                 C50988) *
                C50859) *
               C51003 +
           ((((C14699 + C14698) * C17173 + (C15906 + C15907) * C50928) *
                 C50988 +
             (C14685 * C17173 + (C14700 + C14701) * C50928) * C50739) *
                C50859 -
            ((C13800 * C50928 + C13801 * C17173) * C50739 +
             ((C13825 + C13826) * C50928 + (C13824 + C13823) * C17173) *
                 C50988) *
                C1673) *
               C50831) *
              C50995 +
          (((((C11148 + C11147) * C17173 + C14685 * C50928) * C50988 +
             ((C11146 + C11145) * C17173 + (C11693 + C11694) * C50928) *
                 C50739) *
                C50859 -
            ((C11299 * C50928 + (C10740 + C10739) * C17173) * C50739 +
             (C13801 * C50928 + (C10738 + C10737) * C17173) * C50988) *
                C1673) *
               C51003 +
           (((C13799 * C17173 + C13806 * C50928) * C50988 +
             (C14227 * C17173 + (C10949 + C10950) * C50928) * C50739) *
                C1673 -
            (((C10690 * C2642 + C12583 + C12583 + C50956 * C2648 +
               C10688 * C1560 + C12584 + C12584 + C51017 * C1568) *
                  C50928 +
              (C11694 + C11693) * C17173) *
                 C50739 +
             ((C14701 + C14700) * C50928 + C14680 * C17173) * C50988) *
                C50859) *
               C50831) *
              C50766)) /
        (p * q * std::sqrt(p + q));
    d2ee[131] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
              C10694 + C10694 + C50956 * C480) *
                 C17173 +
             (C13823 + C13824) * C50928) *
                C50988 +
            ((C10737 + C10738) * C17173 + C13799 * C50928) * C50739) *
               C51050 -
           ((C14680 * C50928 + (C11147 + C11148) * C17173) * C50739 +
            ((C14698 + C14699) * C50928 +
             (C10690 * C461 + C11109 + C11109 + C50956 * C481 + C10688 * C460 +
              C11110 + C11110 + C51017 * C480) *
                 C17173) *
                C50988) *
               C51051 +
           (((C10688 * C461 + C11111 + C11111 + C51017 * C481 + C10690 * C1846 +
              C11112 + C11112 + C50956 * C1854) *
                 C17173 +
             (C15246 + C15247) * C50928) *
                C50988 +
            ((C11149 + C11150) * C17173 + (C14031 + C14032) * C50928) *
                C50739) *
               C2089) *
              C51003 +
          ((((C14699 + C14698) * C17173 + (C15906 + C15907) * C50928) * C50988 +
            (C14685 * C17173 + (C14700 + C14701) * C50928) * C50739) *
               C51051 -
           ((C13800 * C50928 + C13801 * C17173) * C50739 +
            ((C13825 + C13826) * C50928 + (C13824 + C13823) * C17173) *
                C50988) *
               C51050 -
           (((C10690 * C4510 + C15238 + C15238 + C50956 * C4518 +
              C10688 * C2641 + C15239 + C15239 + C51017 * C2647) *
                 C50928 +
             (C14032 + C14031) * C17173) *
                C50739 +
            ((C10690 * C4512 + C15240 + C15240 + C50956 * C4520 +
              C10688 * C2640 + C15241 + C15241 + C51017 * C2646) *
                 C50928 +
             (C15247 + C15246) * C17173) *
                C50988) *
               C2089) *
              C50831) *
         C50760) /
        (p * q * std::sqrt(p + q));
    d2ee[132] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
              C10694 + C10694 + C50956 * C480) *
                 C17173 +
             (C13823 + C13824) * C50928) *
                C50988 +
            ((C10737 + C10738) * C17173 + C13799 * C50928) * C50739) *
               C1673 -
           ((C14680 * C50928 + (C11147 + C11148) * C17173) * C50739 +
            ((C14698 + C14699) * C50928 +
             (C10690 * C461 + C11109 + C11109 + C50956 * C481 + C10688 * C460 +
              C11110 + C11110 + C51017 * C480) *
                 C17173) *
                C50988) *
               C50859) *
              C275 +
          ((((C14699 + C14698) * C17173 + (C15906 + C15907) * C50928) * C50988 +
            (C14685 * C17173 + (C14700 + C14701) * C50928) * C50739) *
               C50859 -
           ((C13800 * C50928 + C13801 * C17173) * C50739 +
            ((C13825 + C13826) * C50928 + (C13824 + C13823) * C17173) *
                C50988) *
               C1673) *
              C276 +
          ((((C13826 + C13825) * C17173 + (C15038 + C15039) * C50928) * C50988 +
            (C13806 * C17173 + (C13827 + C13828) * C50928) * C50739) *
               C1673 -
           (((C10690 * C3603 + C15898 + C15898 + C50956 * C3607 +
              C10688 * C3171 + C15899 + C15899 + C51017 * C3177) *
                 C50928 +
             (C14701 + C14700) * C17173) *
                C50739 +
            ((C10690 * C3604 + C15900 + C15900 + C50956 * C3608 +
              C10688 * C3170 + C15901 + C15901 + C51017 * C3176) *
                 C50928 +
             (C15907 + C15906) * C17173) *
                C50988) *
               C50859) *
              C277) *
         C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
              C10694 + C10694 + C50956 * C480) *
                 C17173 +
             (C13823 + C13824) * C50928) *
                C50988 +
            ((C10737 + C10738) * C17173 + C13799 * C50928) * C50739) *
               C1673 -
           ((C14680 * C50928 + (C11147 + C11148) * C17173) * C50739 +
            ((C14698 + C14699) * C50928 +
             (C10690 * C461 + C11109 + C11109 + C50956 * C481 + C10688 * C460 +
              C11110 + C11110 + C51017 * C480) *
                 C17173) *
                C50988) *
               C50859) *
              C50779 * C1024 +
          ((((C11148 + C11147) * C17173 + C14685 * C50928) * C50988 +
            ((C11146 + C11145) * C17173 + (C11693 + C11694) * C50928) *
                C50739) *
               C50859 -
           ((C11299 * C50928 + (C10740 + C10739) * C17173) * C50739 +
            (C13801 * C50928 + (C10738 + C10737) * C17173) * C50988) *
               C1673) *
              C50779 * C1025 +
          (((C10745 * C17173 + C14227 * C50928) * C50988 +
            ((C10742 + C10741) * C17173 + (C11311 + C11312) * C50928) *
                C50739) *
               C1673 -
           (((C10690 * C1212 + C11681 + C11681 + C50956 * C1220 +
              C10688 * C889 + C11682 + C11682 + C51017 * C899) *
                 C50928 +
             (C11472 + C11471) * C17173) *
                C50739 +
            ((C11694 + C11693) * C50928 + C11459 * C17173) * C50988) *
               C50859) *
              C50779 * C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
             C10694 + C10694 + C50956 * C480) *
                C17173 +
            (C13823 + C13824) * C50928) *
               C50988 +
           ((C10737 + C10738) * C17173 + C13799 * C50928) * C50739) *
              C1839 -
          ((C14680 * C50928 + (C11147 + C11148) * C17173) * C50739 +
           ((C14698 + C14699) * C50928 +
            (C10690 * C461 + C11109 + C11109 + C50956 * C481 + C10688 * C460 +
             C11110 + C11110 + C51017 * C480) *
                C17173) *
               C50988) *
              C1840 +
          (((C10688 * C461 + C11111 + C11111 + C51017 * C481 + C10690 * C1846 +
             C11112 + C11112 + C50956 * C1854) *
                C17173 +
            (C15246 + C15247) * C50928) *
               C50988 +
           ((C11149 + C11150) * C17173 + (C14031 + C14032) * C50928) * C50739) *
              C1841 -
          (((C10690 * C6521 + C16426 + C16426 + C50956 * C6525 +
             C10688 * C4511 + C16427 + C16427 + C51017 * C4519) *
                C50928 +
            (C10690 * C5520 + C12981 + C12981 + C50956 * C5526 +
             C10688 * C1845 + C12982 + C12982 + C51017 * C1853) *
                C17173) *
               C50739 +
           ((C10690 * C6522 + C16428 + C16428 + C50956 * C6526 +
             C10688 * C4513 + C16429 + C16429 + C51017 * C4521) *
                C50928 +
            (C10690 * C5519 + C12983 + C12983 + C50956 * C5525 +
             C10688 * C1846 + C12984 + C12984 + C51017 * C1854) *
                C17173) *
               C50988) *
              C1842) *
         C50779 * C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[133] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C10688 * C119 + C10693 + C10693 + C51017 * C133 +
                       C10690 * C460 + C10694 + C10694 + C50956 * C480) *
                          C17173 +
                      (C13823 + C13824) * C50928) *
                         C50988 +
                     ((C10737 + C10738) * C17173 + C13799 * C50928) * C50739) *
                        C51050 -
                    ((C14680 * C50928 + (C11147 + C11148) * C17173) * C50739 +
                     ((C14698 + C14699) * C50928 +
                      (C10690 * C461 + C11109 + C11109 + C50956 * C481 +
                       C10688 * C460 + C11110 + C11110 + C51017 * C480) *
                          C17173) *
                         C50988) *
                        C51051 +
                    (((C10688 * C461 + C11111 + C11111 + C51017 * C481 +
                       C10690 * C1846 + C11112 + C11112 + C50956 * C1854) *
                          C17173 +
                      (C15246 + C15247) * C50928) *
                         C50988 +
                     ((C11149 + C11150) * C17173 + (C14031 + C14032) * C50928) *
                         C50739) *
                        C2089) *
                       C50779 * C50995 +
                   ((((C11148 + C11147) * C17173 + C14685 * C50928) * C50988 +
                     ((C11146 + C11145) * C17173 + (C11693 + C11694) * C50928) *
                         C50739) *
                        C51051 -
                    ((C11299 * C50928 + (C10740 + C10739) * C17173) * C50739 +
                     (C13801 * C50928 + (C10738 + C10737) * C17173) * C50988) *
                        C51050 -
                    (((C10690 * C6098 + C12091 + C12091 + C50956 * C6100 +
                       C10688 * C1213 + C12092 + C12092 + C51017 * C1221) *
                          C50928 +
                      (C11152 + C11151) * C17173) *
                         C50739 +
                     ((C14032 + C14031) * C50928 + (C11150 + C11149) * C17173) *
                         C50988) *
                        C2089) *
                       C50779 * C50766)) /
                 (p * q * std::sqrt(p + q));
    d2ee[134] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
              C10694 + C10694 + C50956 * C480) *
                 C17173 +
             (C13823 + C13824) * C50928) *
                C50988 +
            ((C10737 + C10738) * C17173 + C13799 * C50928) * C50739) *
               C1673 -
           ((C14680 * C50928 + (C11147 + C11148) * C17173) * C50739 +
            ((C14698 + C14699) * C50928 +
             (C10690 * C461 + C11109 + C11109 + C50956 * C481 + C10688 * C460 +
              C11110 + C11110 + C51017 * C480) *
                 C17173) *
                C50988) *
               C50859) *
              C50779 * C1024 +
          ((((C11148 + C11147) * C17173 + C14685 * C50928) * C50988 +
            ((C11146 + C11145) * C17173 + (C11693 + C11694) * C50928) *
                C50739) *
               C50859 -
           ((C11299 * C50928 + (C10740 + C10739) * C17173) * C50739 +
            (C13801 * C50928 + (C10738 + C10737) * C17173) * C50988) *
               C1673) *
              C50779 * C1025 +
          (((C10745 * C17173 + C14227 * C50928) * C50988 +
            ((C10742 + C10741) * C17173 + (C11311 + C11312) * C50928) *
                C50739) *
               C1673 -
           (((C10690 * C1212 + C11681 + C11681 + C50956 * C1220 +
              C10688 * C889 + C11682 + C11682 + C51017 * C899) *
                 C50928 +
             (C11472 + C11471) * C17173) *
                C50739 +
            ((C11694 + C11693) * C50928 + C11459 * C17173) * C50988) *
               C50859) *
              C50779 * C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10688 * C119 + C10693 + C10693 + C51017 * C133 + C10690 * C460 +
              C10694 + C10694 + C50956 * C480) *
                 C17173 +
             (C13823 + C13824) * C50928) *
                C50988 +
            ((C10737 + C10738) * C17173 + C13799 * C50928) * C50739) *
               C1673 -
           ((C14680 * C50928 + (C11147 + C11148) * C17173) * C50739 +
            ((C14698 + C14699) * C50928 +
             (C10690 * C461 + C11109 + C11109 + C50956 * C481 + C10688 * C460 +
              C11110 + C11110 + C51017 * C480) *
                 C17173) *
                C50988) *
               C50859) *
              C275 +
          ((((C14699 + C14698) * C17173 + (C15906 + C15907) * C50928) * C50988 +
            (C14685 * C17173 + (C14700 + C14701) * C50928) * C50739) *
               C50859 -
           ((C13800 * C50928 + C13801 * C17173) * C50739 +
            ((C13825 + C13826) * C50928 + (C13824 + C13823) * C17173) *
                C50988) *
               C1673) *
              C276 +
          ((((C13826 + C13825) * C17173 + (C15038 + C15039) * C50928) * C50988 +
            (C13806 * C17173 + (C13827 + C13828) * C50928) * C50739) *
               C1673 -
           (((C10690 * C3603 + C15898 + C15898 + C50956 * C3607 +
              C10688 * C3171 + C15899 + C15899 + C51017 * C3177) *
                 C50928 +
             (C14701 + C14700) * C17173) *
                C50739 +
            ((C10690 * C3604 + C15900 + C15900 + C50956 * C3608 +
              C10688 * C3170 + C15901 + C15901 + C51017 * C3176) *
                 C50928 +
             (C15907 + C15906) * C17173) *
                C50988) *
               C50859) *
              C277) *
         C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[135] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C17173 +
             C2486 * C50928) *
                C17175 +
            (C17179 + C17180) * C17176 + C17187 * C17177) *
               C50795 * C51003 -
           (C17643 * C17177 + (C17337 + C17338) * C17176 +
            (C2487 * C50928 + C2486 * C17173) * C17175) *
               C50795 * C50831) *
              C51046 +
          (((C17338 + C17337) * C17175 + (C17336 + C17335) * C17176 +
            (C17644 + C17645) * C17177) *
               C50795 * C50831 -
           (C17188 * C17177 + (C17182 + C17181) * C17176 +
            (C17180 + C17179) * C17175) *
               C50795 * C51003) *
              C51047 +
          ((C17187 * C17175 + (C17184 + C17183) * C17176 +
            (C17185 + C17186) * C17177) *
               C50795 * C51003 -
           (((C117 * C289 + C332 + C332 + C50892 * C309) * C50928 +
             C645 * C17173) *
                C17177 +
            (C17645 + C17644) * C17176 + C17643 * C17175) *
               C50795 * C50831) *
              C635)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C19810 +
            C2486 * C19811 + C2487 * C19812 + C2489 * C19813) *
               C50734 * C50795 * C51003 -
           (C3457 * C19813 + C2489 * C19812 + C2487 * C19811 + C2486 * C19810) *
               C50734 * C50795 * C50831) *
              C51046 +
          ((C347 * C19810 + C348 * C19811 + C2488 * C19812 + C2490 * C19813) *
               C50734 * C50795 * C50831 -
           (C2488 * C19813 + C348 * C19812 + C347 * C19811 + C168 * C19810) *
               C50734 * C50795 * C51003) *
              C51047 +
          ((C169 * C19810 + C346 * C19811 + C349 * C19812 + C2491 * C19813) *
               C50734 * C50795 * C51003 -
           ((C117 * C2448 + C2473 + C2473 + C50892 * C2454) * C19813 +
            C2491 * C19812 + C349 * C19811 + C346 * C19810) *
               C50734 * C50795 * C50831) *
              C635)) /
            (p * q * std::sqrt(p + q));
    d2ee[136] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50892 * C133) * C17173 +
              C2486 * C50928) *
                 C17175 +
             (C17179 + C17180) * C17176 + C17187 * C17177) *
                C51004 -
            (C17792 * C17177 + (C17491 + C17492) * C17176 +
             (C3198 * C50928 +
              (C117 * C460 + C497 + C497 + C50892 * C480) * C17173) *
                 C17175) *
                C50859) *
               C51003 +
           (((C3198 * C17173 + C3197 * C50928) * C17175 +
             (C17989 + C17990) * C17176 + (C17991 + C17992) * C17177) *
                C50859 -
            (C17643 * C17177 + (C17337 + C17338) * C17176 +
             (C2487 * C50928 + C2486 * C17173) * C17175) *
                C51004) *
               C50831) *
              C278 +
          ((((C17492 + C17491) * C17175 + (C17490 + C17489) * C17176 +
             (C17793 + C17794) * C17177) *
                C50859 -
            (C17188 * C17177 + (C17182 + C17181) * C17176 +
             (C17180 + C17179) * C17175) *
                C51004) *
               C51003 +
           (((C17338 + C17337) * C17175 + (C17336 + C17335) * C17176 +
             (C17644 + C17645) * C17177) *
                C51004 -
            (((C117 * C1559 + C1572 + C1572 + C50892 * C1567) * C50928 +
              C921 * C17173) *
                 C17177 +
             (C17992 + C17991) * C17176 + (C17990 + C17989) * C17175) *
                C50859) *
               C50831) *
              C50766)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C19810 +
             C2486 * C19811 + C2487 * C19812 + C2489 * C19813) *
                C50734 * C51004 -
            (C4120 * C19813 + C3197 * C19812 + C3198 * C19811 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C19810) *
                C50734 * C50859) *
               C51003 +
           ((C3198 * C19810 + C3197 * C19811 + C4120 * C19812 +
             (C117 * C4108 + C4117 + C4117 + C50892 * C4112) * C19813) *
                C50734 * C50859 -
            (C3457 * C19813 + C2489 * C19812 + C2487 * C19811 +
             C2486 * C19810) *
                C50734 * C51004) *
               C50831) *
              C278 +
          (((C524 * C19810 + C919 * C19811 + C2668 * C19812 + C3199 * C19813) *
                C50734 * C50859 -
            (C2488 * C19813 + C348 * C19812 + C347 * C19811 + C168 * C19810) *
                C50734 * C51004) *
               C51003 +
           ((C347 * C19810 + C348 * C19811 + C2488 * C19812 + C2490 * C19813) *
                C50734 * C51004 -
            ((C117 * C4107 + C4116 + C4116 + C50892 * C4111) * C19813 +
             C3199 * C19812 + C2668 * C19811 + C919 * C19810) *
                C50734 * C50859) *
               C50831) *
              C50766)) /
            (p * q * std::sqrt(p + q));
    d2ee[137] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C17173 +
             C2486 * C50928) *
                C17175 +
            (C17179 + C17180) * C17176 + C17187 * C17177) *
               C50795 * C275 -
           ((C17335 + C17336) * C17177 + (C17337 + C17338) * C17176 +
            (C2487 * C50928 + C2486 * C17173) * C17175) *
               C50795 * C276 +
           ((C2487 * C17173 + C2489 * C50928) * C17175 +
            (C17339 + C17340) * C17176 + (C17341 + C17342) * C17177) *
               C50795 * C277) *
              C278 +
          (((C17338 + C17337) * C17175 + (C17336 + C17335) * C17176 +
            (C345 * C17173 + C350 * C50928) * C17177) *
               C50795 * C276 -
           (C17188 * C17177 + (C17182 + C17181) * C17176 +
            (C17180 + C17179) * C17175) *
               C50795 * C275 -
           (((C117 * C1098 + C1111 + C1111 + C50892 * C1106) * C50928 +
             C350 * C17173) *
                C17177 +
            (C17342 + C17341) * C17176 + (C17340 + C17339) * C17175) *
               C50795 * C277) *
              C50766)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C17173 +
            C2486 * C50928) *
               C17175 +
           (C17179 + C17180) * C17176 + C17187 * C17177) *
              C50795 * C50779 * C113 -
          (C17188 * C17177 + (C17182 + C17181) * C17176 +
           (C17180 + C17179) * C17175) *
              C50795 * C50779 * C114 +
          (C17187 * C17175 + (C17184 + C17183) * C17176 +
           (C17185 + C17186) * C17177) *
              C50795 * C50779 * C115 -
          (((C117 * C636 + C642 + C642 + C50892 * C638) * C50928 +
            C172 * C17173) *
               C17177 +
           (C17186 + C17185) * C17176 + C17188 * C17175) *
              C50795 * C50779 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C17173 +
             C2486 * C50928) *
                C17175 +
            (C17179 + C17180) * C17176 + C17187 * C17177) *
               C454 -
           ((C17489 + C17490) * C17177 + (C17491 + C17492) * C17176 +
            (C3198 * C50928 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C17173) *
                C17175) *
               C455 +
           (((C117 * C461 + C498 + C498 + C50892 * C481) * C17173 +
             C3620 * C50928) *
                C17175 +
            (C17493 + C17494) * C17176 + (C17495 + C17496) * C17177) *
               C456) *
              C50779 * C278 +
          (((C17492 + C17491) * C17175 + (C17490 + C17489) * C17176 +
            (C522 * C17173 + C921 * C50928) * C17177) *
               C455 -
           (C17188 * C17177 + (C17182 + C17181) * C17176 +
            (C17180 + C17179) * C17175) *
               C454 -
           (((C117 * C1212 + C1225 + C1225 + C50892 * C1220) * C50928 +
             C527 * C17173) *
                C17177 +
            (C17496 + C17495) * C17176 + (C17494 + C17493) * C17175) *
               C456) *
              C50779 * C50766)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50892 * C133) * C19810 +
           C2486 * C19811 + C2487 * C19812 + C2489 * C19813) *
              C50734 * C50795 * C50779 * C113 -
          (C2488 * C19813 + C348 * C19812 + C347 * C19811 + C168 * C19810) *
              C50734 * C50795 * C50779 * C114 +
          (C169 * C19810 + C346 * C19811 + C349 * C19812 + C2491 * C19813) *
              C50734 * C50795 * C50779 * C115 -
          ((C117 * C1098 + C1111 + C1111 + C50892 * C1106) * C19813 +
           C350 * C19812 + C345 * C19811 + C170 * C19810) *
              C50734 * C50795 * C50779 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C19810 +
            C2486 * C19811 + C2487 * C19812 + C2489 * C19813) *
               C50734 * C50795 * C275 -
           (C3457 * C19813 + C2489 * C19812 + C2487 * C19811 + C2486 * C19810) *
               C50734 * C50795 * C276 +
           (C2487 * C19810 + C2489 * C19811 + C3457 * C19812 +
            (C117 * C3445 + C3454 + C3454 + C50892 * C3449) * C19813) *
               C50734 * C50795 * C277) *
              C278 +
          ((C347 * C19810 + C348 * C19811 + C2488 * C19812 + C2490 * C19813) *
               C50734 * C50795 * C276 -
           (C2488 * C19813 + C348 * C19812 + C347 * C19811 + C168 * C19810) *
               C50734 * C50795 * C275 -
           ((C117 * C3444 + C3453 + C3453 + C50892 * C3448) * C19813 +
            C2490 * C19812 + C2488 * C19811 + C348 * C19810) *
               C50734 * C50795 * C277) *
              C50766)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C19810 +
            C2486 * C19811 + C2487 * C19812 + C2489 * C19813) *
               C50734 * C454 -
           (C4120 * C19813 + C3197 * C19812 + C3198 * C19811 +
            (C117 * C460 + C497 + C497 + C50892 * C480) * C19810) *
               C50734 * C455 +
           ((C117 * C461 + C498 + C498 + C50892 * C481) * C19810 +
            C3620 * C19811 + C3621 * C19812 +
            (C117 * C3604 + C3615 + C3615 + C50892 * C3608) * C19813) *
               C50734 * C456) *
              C50779 * C278 +
          ((C524 * C19810 + C919 * C19811 + C2668 * C19812 + C3199 * C19813) *
               C50734 * C455 -
           (C2488 * C19813 + C348 * C19812 + C347 * C19811 + C168 * C19810) *
               C50734 * C454 -
           ((C117 * C3603 + C3614 + C3614 + C50892 * C3607) * C19813 +
            C2670 * C19812 + C2669 * C19811 + C525 * C19810) *
               C50734 * C456) *
              C50779 * C50766)) /
            (p * q * std::sqrt(p + q));
    d2ee[138] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C17173 +
             C2486 * C50928) *
                C17175 +
            (C17179 + C17180) * C17176 + C17187 * C17177) *
               C51004 -
           (C17792 * C17177 + (C17491 + C17492) * C17176 +
            (C3198 * C50928 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C17173) *
                C17175) *
               C50859) *
              C50779 * C51046 +
          (((C17492 + C17491) * C17175 + (C17490 + C17489) * C17176 +
            (C17793 + C17794) * C17177) *
               C50859 -
           (C17188 * C17177 + (C17182 + C17181) * C17176 +
            (C17180 + C17179) * C17175) *
               C51004) *
              C50779 * C51047 +
          ((C17187 * C17175 + (C17184 + C17183) * C17176 +
            (C17185 + C17186) * C17177) *
               C51004 -
           (((C117 * C890 + C912 + C912 + C50892 * C900) * C50928 +
             C755 * C17173) *
                C17177 +
            (C17794 + C17793) * C17176 + C17792 * C17175) *
               C50859) *
              C50779 * C635)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C19810 +
            C2486 * C19811 + C2487 * C19812 + C2489 * C19813) *
               C50734 * C51004 -
           (C4120 * C19813 + C3197 * C19812 + C3198 * C19811 +
            (C117 * C460 + C497 + C497 + C50892 * C480) * C19810) *
               C50734 * C50859) *
              C50779 * C51046 +
          ((C524 * C19810 + C919 * C19811 + C2668 * C19812 + C3199 * C19813) *
               C50734 * C50859 -
           (C2488 * C19813 + C348 * C19812 + C347 * C19811 + C168 * C19810) *
               C50734 * C51004) *
              C50779 * C51047 +
          ((C169 * C19810 + C346 * C19811 + C349 * C19812 + C2491 * C19813) *
               C50734 * C51004 -
           ((C117 * C3172 + C3190 + C3190 + C50892 * C3178) * C19813 +
            C2975 * C19812 + C920 * C19811 + C523 * C19810) *
               C50734 * C50859) *
              C50779 * C635)) /
            (p * q * std::sqrt(p + q));
    d2ee[139] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C17173 +
            C2486 * C50928) *
               C17175 +
           (C17179 + C17180) * C17176 + C17187 * C17177) *
              C50795 * C50779 * C113 -
          (C17188 * C17177 + (C17182 + C17181) * C17176 +
           (C17180 + C17179) * C17175) *
              C50795 * C50779 * C114 +
          (C17187 * C17175 + (C17184 + C17183) * C17176 +
           (C17185 + C17186) * C17177) *
              C50795 * C50779 * C115 -
          (((C117 * C636 + C642 + C642 + C50892 * C638) * C50928 +
            C172 * C17173) *
               C17177 +
           (C17186 + C17185) * C17176 + C17188 * C17175) *
              C50795 * C50779 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C17173 +
             C2486 * C50928) *
                C17175 +
            (C17179 + C17180) * C17176 + C17187 * C17177) *
               C50795 * C275 -
           ((C17335 + C17336) * C17177 + (C17337 + C17338) * C17176 +
            (C2487 * C50928 + C2486 * C17173) * C17175) *
               C50795 * C276 +
           ((C2487 * C17173 + C2489 * C50928) * C17175 +
            (C17339 + C17340) * C17176 + (C17341 + C17342) * C17177) *
               C50795 * C277) *
              C278 +
          (((C17338 + C17337) * C17175 + (C17336 + C17335) * C17176 +
            (C345 * C17173 + C350 * C50928) * C17177) *
               C50795 * C276 -
           (C17188 * C17177 + (C17182 + C17181) * C17176 +
            (C17180 + C17179) * C17175) *
               C50795 * C275 -
           (((C117 * C1098 + C1111 + C1111 + C50892 * C1106) * C50928 +
             C350 * C17173) *
                C17177 +
            (C17342 + C17341) * C17176 + (C17340 + C17339) * C17175) *
               C50795 * C277) *
              C50766)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50892 * C133) * C19810 +
           C2486 * C19811 + C2487 * C19812 + C2489 * C19813) *
              C50734 * C50795 * C50779 * C113 -
          (C2488 * C19813 + C348 * C19812 + C347 * C19811 + C168 * C19810) *
              C50734 * C50795 * C50779 * C114 +
          (C169 * C19810 + C346 * C19811 + C349 * C19812 + C2491 * C19813) *
              C50734 * C50795 * C50779 * C115 -
          ((C117 * C1098 + C1111 + C1111 + C50892 * C1106) * C19813 +
           C350 * C19812 + C345 * C19811 + C170 * C19810) *
              C50734 * C50795 * C50779 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C19810 +
            C2486 * C19811 + C2487 * C19812 + C2489 * C19813) *
               C50734 * C50795 * C275 -
           (C3457 * C19813 + C2489 * C19812 + C2487 * C19811 + C2486 * C19810) *
               C50734 * C50795 * C276 +
           (C2487 * C19810 + C2489 * C19811 + C3457 * C19812 +
            (C117 * C3445 + C3454 + C3454 + C50892 * C3449) * C19813) *
               C50734 * C50795 * C277) *
              C278 +
          ((C347 * C19810 + C348 * C19811 + C2488 * C19812 + C2490 * C19813) *
               C50734 * C50795 * C276 -
           (C2488 * C19813 + C348 * C19812 + C347 * C19811 + C168 * C19810) *
               C50734 * C50795 * C275 -
           ((C117 * C3444 + C3453 + C3453 + C50892 * C3448) * C19813 +
            C2490 * C19812 + C2488 * C19811 + C348 * C19810) *
               C50734 * C50795 * C277) *
              C50766)) /
            (p * q * std::sqrt(p + q));
    d2ee[140] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C17173 +
             C2486 * C50928) *
                C17175 +
            (C17179 + C17180) * C17176 + C17187 * C17177) *
               C50795 * C51048 -
           (C17643 * C17177 + (C17337 + C17338) * C17176 +
            (C2487 * C50928 + C2486 * C17173) * C17175) *
               C50795 * C51049 +
           ((C2487 * C17173 + C2489 * C50928) * C17175 +
            (C17339 + C17340) * C17176 + (C17341 + C17342) * C17177) *
               C50795 * C1328) *
              C50995 +
          (((C17338 + C17337) * C17175 + (C17336 + C17335) * C17176 +
            (C17644 + C17645) * C17177) *
               C50795 * C51049 -
           (C17188 * C17177 + (C17182 + C17181) * C17176 +
            (C17180 + C17179) * C17175) *
               C50795 * C51048 -
           (((C117 * C1098 + C1111 + C1111 + C50892 * C1106) * C50928 +
             C350 * C17173) *
                C17177 +
            (C17342 + C17341) * C17176 + (C17340 + C17339) * C17175) *
               C50795 * C1328) *
              C50766)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C19810 +
            C2486 * C19811 + C2487 * C19812 + C2489 * C19813) *
               C50734 * C50795 * C51048 -
           (C3457 * C19813 + C2489 * C19812 + C2487 * C19811 + C2486 * C19810) *
               C50734 * C50795 * C51049 +
           (C2487 * C19810 + C2489 * C19811 + C3457 * C19812 +
            C20510 * C19813) *
               C50734 * C50795 * C1328) *
              C50995 +
          ((C347 * C19810 + C348 * C19811 + C2488 * C19812 + C2490 * C19813) *
               C50734 * C50795 * C51049 -
           (C2488 * C19813 + C348 * C19812 + C347 * C19811 + C168 * C19810) *
               C50734 * C50795 * C51048 -
           ((C117 * C3444 + C3453 + C3453 + C50892 * C3448) * C19813 +
            C2490 * C19812 + C2488 * C19811 + C348 * C19810) *
               C50734 * C50795 * C1328) *
              C50766)) /
            (p * q * std::sqrt(p + q));
    d2ee[141] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C17173 +
             C2486 * C50928) *
                C17175 +
            (C17179 + C17180) * C17176 + C17187 * C17177) *
               C51004 -
           (C17792 * C17177 + (C17491 + C17492) * C17176 +
            (C3198 * C50928 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C17173) *
                C17175) *
               C50859) *
              C51048 +
          (((C3198 * C17173 + C3197 * C50928) * C17175 +
            (C17989 + C17990) * C17176 + (C17991 + C17992) * C17177) *
               C50859 -
           (C17643 * C17177 + (C17337 + C17338) * C17176 +
            (C2487 * C50928 + C2486 * C17173) * C17175) *
               C51004) *
              C51049 +
          (((C2487 * C17173 + C2489 * C50928) * C17175 +
            (C17339 + C17340) * C17176 + (C17341 + C17342) * C17177) *
               C51004 -
           (((C117 * C3172 + C3190 + C3190 + C50892 * C3178) * C50928 +
             C2975 * C17173) *
                C17177 +
            (C3199 * C50928 + C2668 * C17173) * C17176 +
            (C4120 * C50928 + C3197 * C17173) * C17175) *
               C50859) *
              C1328) *
         C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C19810 +
            C2486 * C19811 + C2487 * C19812 + C2489 * C19813) *
               C50734 * C51004 -
           (C4120 * C19813 + C3197 * C19812 + C3198 * C19811 +
            (C117 * C460 + C497 + C497 + C50892 * C480) * C19810) *
               C50734 * C50859) *
              C51048 +
          ((C3198 * C19810 + C3197 * C19811 + C4120 * C19812 +
            C20952 * C19813) *
               C50734 * C50859 -
           (C3457 * C19813 + C2489 * C19812 + C2487 * C19811 + C2486 * C19810) *
               C50734 * C51004) *
              C51049 +
          ((C2487 * C19810 + C2489 * C19811 + C3457 * C19812 +
            C20510 * C19813) *
               C50734 * C51004 -
           ((C117 * C20943 + C20949 + C20949 + C50892 * C20945) * C19813 +
            C20952 * C19812 + C4120 * C19811 + C3197 * C19810) *
               C50734 * C50859) *
              C1328) *
         C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[142] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C17173 +
            C2486 * C50928) *
               C17175 +
           (C17179 + C17180) * C17176 + C17187 * C17177) *
              C50795 * C1093 -
          (C17643 * C17177 + (C17337 + C17338) * C17176 +
           (C2487 * C50928 + C2486 * C17173) * C17175) *
              C50795 * C1094 +
          ((C2487 * C17173 + C2489 * C50928) * C17175 +
           (C17339 + C17340) * C17176 + (C17341 + C17342) * C17177) *
              C50795 * C1095 -
          (((C117 * C2448 + C2473 + C2473 + C50892 * C2454) * C50928 +
            C2491 * C17173) *
               C17177 +
           (C2490 * C50928 + C2488 * C17173) * C17176 +
           (C3457 * C50928 + C2489 * C17173) * C17175) *
              C50795 * C1096) *
         C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C17173 +
             C2486 * C50928) *
                C17175 +
            (C17179 + C17180) * C17176 + C17187 * C17177) *
               C50795 * C1022 -
           (C17643 * C17177 + (C17337 + C17338) * C17176 +
            (C2487 * C50928 + C2486 * C17173) * C17175) *
               C50795 * C50831) *
              C1024 +
          (((C17338 + C17337) * C17175 + (C17336 + C17335) * C17176 +
            (C17644 + C17645) * C17177) *
               C50795 * C50831 -
           (C17188 * C17177 + (C17182 + C17181) * C17176 +
            (C17180 + C17179) * C17175) *
               C50795 * C1022) *
              C1025 +
          ((C17187 * C17175 + (C17184 + C17183) * C17176 +
            (C17185 + C17186) * C17177) *
               C50795 * C1022 -
           (((C117 * C289 + C332 + C332 + C50892 * C309) * C50928 +
             C645 * C17173) *
                C17177 +
            (C17645 + C17644) * C17176 + C17643 * C17175) *
               C50795 * C50831) *
              C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C17173 +
             C2486 * C50928) *
                C17175 +
            (C17179 + C17180) * C17176 + C17187 * C17177) *
               C454 -
           (C17792 * C17177 + (C17491 + C17492) * C17176 +
            (C3198 * C50928 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C17173) *
                C17175) *
               C455 +
           (((C117 * C461 + C498 + C498 + C50892 * C481) * C17173 +
             C3620 * C50928) *
                C17175 +
            (C17493 + C17494) * C17176 + (C17495 + C17496) * C17177) *
               C456) *
              C1022 +
          (((C3198 * C17173 + C3197 * C50928) * C17175 +
            (C17989 + C17990) * C17176 + (C17991 + C17992) * C17177) *
               C455 -
           (C17643 * C17177 + (C17337 + C17338) * C17176 +
            (C2487 * C50928 + C2486 * C17173) * C17175) *
               C454 -
           (((C117 * C2642 + C2661 + C2661 + C50892 * C2648) * C50928 +
             C8338 * C17173) *
                C17177 +
            (C2670 * C50928 + C2669 * C17173) * C17176 +
            (C3621 * C50928 + C3620 * C17173) * C17175) *
               C456) *
              C50831) *
         C50760) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C19810 +
            C2486 * C19811 + C2487 * C19812 + C2489 * C19813) *
               C50734 * C50795 * C1022 -
           (C3457 * C19813 + C2489 * C19812 + C2487 * C19811 + C2486 * C19810) *
               C50734 * C50795 * C50831) *
              C1024 +
          ((C347 * C19810 + C348 * C19811 + C2488 * C19812 + C2490 * C19813) *
               C50734 * C50795 * C50831 -
           (C2488 * C19813 + C348 * C19812 + C347 * C19811 + C168 * C19810) *
               C50734 * C50795 * C1022) *
              C1025 +
          ((C169 * C19810 + C346 * C19811 + C349 * C19812 + C2491 * C19813) *
               C50734 * C50795 * C1022 -
           ((C117 * C2448 + C2473 + C2473 + C50892 * C2454) * C19813 +
            C2491 * C19812 + C349 * C19811 + C346 * C19810) *
               C50734 * C50795 * C50831) *
              C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50892 * C133) * C19810 +
           C2486 * C19811 + C2487 * C19812 + C2489 * C19813) *
              C50734 * C50795 * C1093 -
          (C3457 * C19813 + C2489 * C19812 + C2487 * C19811 + C2486 * C19810) *
              C50734 * C50795 * C1094 +
          (C2487 * C19810 + C2489 * C19811 + C3457 * C19812 + C20510 * C19813) *
              C50734 * C50795 * C1095 -
          ((C117 * C20501 + C20507 + C20507 + C50892 * C20503) * C19813 +
           C20510 * C19812 + C3457 * C19811 + C2489 * C19810) *
              C50734 * C50795 * C1096) *
         C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C19810 +
            C2486 * C19811 + C2487 * C19812 + C2489 * C19813) *
               C50734 * C454 -
           (C4120 * C19813 + C3197 * C19812 + C3198 * C19811 +
            (C117 * C460 + C497 + C497 + C50892 * C480) * C19810) *
               C50734 * C455 +
           ((C117 * C461 + C498 + C498 + C50892 * C481) * C19810 +
            C3620 * C19811 + C3621 * C19812 + C20617 * C19813) *
               C50734 * C456) *
              C1022 +
          ((C3198 * C19810 + C3197 * C19811 + C4120 * C19812 +
            (C117 * C4108 + C4117 + C4117 + C50892 * C4112) * C19813) *
               C50734 * C455 -
           (C3457 * C19813 + C2489 * C19812 + C2487 * C19811 + C2486 * C19810) *
               C50734 * C454 -
           ((C117 * C20608 + C20614 + C20614 + C50892 * C20610) * C19813 +
            C20617 * C19812 + C3621 * C19811 + C3620 * C19810) *
               C50734 * C456) *
              C50831) *
         C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[143] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50892 * C133) * C17173 +
              C2486 * C50928) *
                 C17175 +
             (C17179 + C17180) * C17176 + C17187 * C17177) *
                C51004 -
            (C17792 * C17177 + (C17491 + C17492) * C17176 +
             (C3198 * C50928 +
              (C117 * C460 + C497 + C497 + C50892 * C480) * C17173) *
                 C17175) *
                C50859) *
               C1022 +
           (((C3198 * C17173 + C3197 * C50928) * C17175 +
             (C17989 + C17990) * C17176 + (C17991 + C17992) * C17177) *
                C50859 -
            (C17643 * C17177 + (C17337 + C17338) * C17176 +
             (C2487 * C50928 + C2486 * C17173) * C17175) *
                C51004) *
               C50831) *
              C50995 +
          ((((C17492 + C17491) * C17175 + (C17490 + C17489) * C17176 +
             (C17793 + C17794) * C17177) *
                C50859 -
            (C17188 * C17177 + (C17182 + C17181) * C17176 +
             (C17180 + C17179) * C17175) *
                C51004) *
               C1022 +
           (((C17338 + C17337) * C17175 + (C17336 + C17335) * C17176 +
             (C17644 + C17645) * C17177) *
                C51004 -
            (((C117 * C1559 + C1572 + C1572 + C50892 * C1567) * C50928 +
              C921 * C17173) *
                 C17177 +
             (C17992 + C17991) * C17176 + (C17990 + C17989) * C17175) *
                C50859) *
               C50831) *
              C50766)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C19810 +
             C2486 * C19811 + C2487 * C19812 + C2489 * C19813) *
                C50734 * C51004 -
            (C4120 * C19813 + C3197 * C19812 + C3198 * C19811 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C19810) *
                C50734 * C50859) *
               C1022 +
           ((C3198 * C19810 + C3197 * C19811 + C4120 * C19812 +
             (C117 * C4108 + C4117 + C4117 + C50892 * C4112) * C19813) *
                C50734 * C50859 -
            (C3457 * C19813 + C2489 * C19812 + C2487 * C19811 +
             C2486 * C19810) *
                C50734 * C51004) *
               C50831) *
              C50995 +
          (((C524 * C19810 + C919 * C19811 + C2668 * C19812 + C3199 * C19813) *
                C50734 * C50859 -
            (C2488 * C19813 + C348 * C19812 + C347 * C19811 + C168 * C19810) *
                C50734 * C51004) *
               C1022 +
           ((C347 * C19810 + C348 * C19811 + C2488 * C19812 + C2490 * C19813) *
                C50734 * C51004 -
            ((C117 * C4107 + C4116 + C4116 + C50892 * C4111) * C19813 +
             C3199 * C19812 + C2668 * C19811 + C919 * C19810) *
                C50734 * C50859) *
               C50831) *
              C50766)) /
            (p * q * std::sqrt(p + q));
    d2ee[144] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C17173 +
             C2486 * C50928) *
                C17175 +
            (C17179 + C17180) * C17176 + C17187 * C17177) *
               C50795 * C1022 -
           (C17643 * C17177 + (C17337 + C17338) * C17176 +
            (C2487 * C50928 + C2486 * C17173) * C17175) *
               C50795 * C50831) *
              C1024 +
          (((C17338 + C17337) * C17175 + (C17336 + C17335) * C17176 +
            (C17644 + C17645) * C17177) *
               C50795 * C50831 -
           (C17188 * C17177 + (C17182 + C17181) * C17176 +
            (C17180 + C17179) * C17175) *
               C50795 * C1022) *
              C1025 +
          ((C17187 * C17175 + (C17184 + C17183) * C17176 +
            (C17185 + C17186) * C17177) *
               C50795 * C1022 -
           (((C117 * C289 + C332 + C332 + C50892 * C309) * C50928 +
             C645 * C17173) *
                C17177 +
            (C17645 + C17644) * C17176 + C17643 * C17175) *
               C50795 * C50831) *
              C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C17173 +
            C2486 * C50928) *
               C17175 +
           (C17179 + C17180) * C17176 + C17187 * C17177) *
              C50795 * C1093 -
          (C17643 * C17177 + (C17337 + C17338) * C17176 +
           (C2487 * C50928 + C2486 * C17173) * C17175) *
              C50795 * C1094 +
          ((C2487 * C17173 + C2489 * C50928) * C17175 +
           (C17339 + C17340) * C17176 + (C17341 + C17342) * C17177) *
              C50795 * C1095 -
          (((C117 * C2448 + C2473 + C2473 + C50892 * C2454) * C50928 +
            C2491 * C17173) *
               C17177 +
           (C2490 * C50928 + C2488 * C17173) * C17176 +
           (C3457 * C50928 + C2489 * C17173) * C17175) *
              C50795 * C1096) *
         C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C19810 +
            C2486 * C19811 + C2487 * C19812 + C2489 * C19813) *
               C50734 * C50795 * C1022 -
           (C3457 * C19813 + C2489 * C19812 + C2487 * C19811 + C2486 * C19810) *
               C50734 * C50795 * C50831) *
              C1024 +
          ((C347 * C19810 + C348 * C19811 + C2488 * C19812 + C2490 * C19813) *
               C50734 * C50795 * C50831 -
           (C2488 * C19813 + C348 * C19812 + C347 * C19811 + C168 * C19810) *
               C50734 * C50795 * C1022) *
              C1025 +
          ((C169 * C19810 + C346 * C19811 + C349 * C19812 + C2491 * C19813) *
               C50734 * C50795 * C1022 -
           ((C117 * C2448 + C2473 + C2473 + C50892 * C2454) * C19813 +
            C2491 * C19812 + C349 * C19811 + C346 * C19810) *
               C50734 * C50795 * C50831) *
              C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50892 * C133) * C19810 +
           C2486 * C19811 + C2487 * C19812 + C2489 * C19813) *
              C50734 * C50795 * C1093 -
          (C3457 * C19813 + C2489 * C19812 + C2487 * C19811 + C2486 * C19810) *
              C50734 * C50795 * C1094 +
          (C2487 * C19810 + C2489 * C19811 + C3457 * C19812 + C20510 * C19813) *
              C50734 * C50795 * C1095 -
          ((C117 * C20501 + C20507 + C20507 + C50892 * C20503) * C19813 +
           C20510 * C19812 + C3457 * C19811 + C2489 * C19810) *
              C50734 * C50795 * C1096) *
         C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[145] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C141 + C141 + C50892 * C133) * C17173 +
              C2486 * C50928) *
                 C17175 +
             (C17179 + C17180) * C17176 + C17187 * C17177) *
                C1673 -
            (C17792 * C17177 + (C17491 + C17492) * C17176 +
             (C3198 * C50928 +
              (C117 * C460 + C497 + C497 + C50892 * C480) * C17173) *
                 C17175) *
                C50859) *
               C51003 +
           (((C3198 * C17173 + C3197 * C50928) * C17175 +
             (C17989 + C17990) * C17176 + (C17991 + C17992) * C17177) *
                C50859 -
            (C17643 * C17177 + (C17337 + C17338) * C17176 +
             (C2487 * C50928 + C2486 * C17173) * C17175) *
                C1673) *
               C50831) *
              C50995 +
          ((((C17492 + C17491) * C17175 + (C17490 + C17489) * C17176 +
             (C17793 + C17794) * C17177) *
                C50859 -
            (C17188 * C17177 + (C17182 + C17181) * C17176 +
             (C17180 + C17179) * C17175) *
                C1673) *
               C51003 +
           (((C17338 + C17337) * C17175 + (C17336 + C17335) * C17176 +
             (C17644 + C17645) * C17177) *
                C1673 -
            (((C117 * C1559 + C1572 + C1572 + C50892 * C1567) * C50928 +
              C921 * C17173) *
                 C17177 +
             (C17992 + C17991) * C17176 + (C17990 + C17989) * C17175) *
                C50859) *
               C50831) *
              C50766)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C19810 +
             C2486 * C19811 + C2487 * C19812 + C2489 * C19813) *
                C50734 * C1673 -
            (C4120 * C19813 + C3197 * C19812 + C3198 * C19811 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C19810) *
                C50734 * C50859) *
               C51003 +
           ((C3198 * C19810 + C3197 * C19811 + C4120 * C19812 +
             C20952 * C19813) *
                C50734 * C50859 -
            (C3457 * C19813 + C2489 * C19812 + C2487 * C19811 +
             C2486 * C19810) *
                C50734 * C1673) *
               C50831) *
              C50995 +
          (((C524 * C19810 + C919 * C19811 + C2668 * C19812 + C3199 * C19813) *
                C50734 * C50859 -
            (C2488 * C19813 + C348 * C19812 + C347 * C19811 + C168 * C19810) *
                C50734 * C1673) *
               C51003 +
           ((C347 * C19810 + C348 * C19811 + C2488 * C19812 + C2490 * C19813) *
                C50734 * C1673 -
            ((C117 * C4107 + C4116 + C4116 + C50892 * C4111) * C19813 +
             C3199 * C19812 + C2668 * C19811 + C919 * C19810) *
                C50734 * C50859) *
               C50831) *
              C50766)) /
            (p * q * std::sqrt(p + q));
    d2ee[146] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C17173 +
             C2486 * C50928) *
                C17175 +
            (C17179 + C17180) * C17176 + C17187 * C17177) *
               C51050 -
           (C17792 * C17177 + (C17491 + C17492) * C17176 +
            (C3198 * C50928 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C17173) *
                C17175) *
               C51051 +
           (((C117 * C461 + C498 + C498 + C50892 * C481) * C17173 +
             C3620 * C50928) *
                C17175 +
            (C17493 + C17494) * C17176 + (C17495 + C17496) * C17177) *
               C2089) *
              C51003 +
          (((C3198 * C17173 + C3197 * C50928) * C17175 +
            (C17989 + C17990) * C17176 + (C17991 + C17992) * C17177) *
               C51051 -
           (C17643 * C17177 + (C17337 + C17338) * C17176 +
            (C2487 * C50928 + C2486 * C17173) * C17175) *
               C51050 -
           (((C117 * C2642 + C2661 + C2661 + C50892 * C2648) * C50928 +
             C8338 * C17173) *
                C17177 +
            (C2670 * C50928 + C2669 * C17173) * C17176 +
            (C3621 * C50928 + C3620 * C17173) * C17175) *
               C2089) *
              C50831) *
         C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C19810 +
            C2486 * C19811 + C2487 * C19812 + C2489 * C19813) *
               C50734 * C51050 -
           (C4120 * C19813 + C3197 * C19812 + C3198 * C19811 +
            (C117 * C460 + C497 + C497 + C50892 * C480) * C19810) *
               C50734 * C51051 +
           ((C117 * C461 + C498 + C498 + C50892 * C481) * C19810 +
            C3620 * C19811 + C3621 * C19812 + C20617 * C19813) *
               C50734 * C2089) *
              C51003 +
          ((C3198 * C19810 + C3197 * C19811 + C4120 * C19812 +
            C20952 * C19813) *
               C50734 * C51051 -
           (C3457 * C19813 + C2489 * C19812 + C2487 * C19811 + C2486 * C19810) *
               C50734 * C51050 -
           ((C117 * C20608 + C20614 + C20614 + C50892 * C20610) * C19813 +
            C20617 * C19812 + C3621 * C19811 + C3620 * C19810) *
               C50734 * C2089) *
              C50831) *
         C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[147] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C17173 +
             C2486 * C50928) *
                C17175 +
            (C17179 + C17180) * C17176 + C17187 * C17177) *
               C1673 -
           (C17792 * C17177 + (C17491 + C17492) * C17176 +
            (C3198 * C50928 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C17173) *
                C17175) *
               C50859) *
              C275 +
          (((C3198 * C17173 + C3197 * C50928) * C17175 +
            (C17989 + C17990) * C17176 + (C17991 + C17992) * C17177) *
               C50859 -
           (C17643 * C17177 + (C17337 + C17338) * C17176 +
            (C2487 * C50928 + C2486 * C17173) * C17175) *
               C1673) *
              C276 +
          (((C2487 * C17173 + C2489 * C50928) * C17175 +
            (C17339 + C17340) * C17176 + (C17341 + C17342) * C17177) *
               C1673 -
           (((C117 * C3172 + C3190 + C3190 + C50892 * C3178) * C50928 +
             C2975 * C17173) *
                C17177 +
            (C3199 * C50928 + C2668 * C17173) * C17176 +
            (C4120 * C50928 + C3197 * C17173) * C17175) *
               C50859) *
              C277) *
         C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C17173 +
             C2486 * C50928) *
                C17175 +
            (C17179 + C17180) * C17176 + C17187 * C17177) *
               C1673 -
           (C17792 * C17177 + (C17491 + C17492) * C17176 +
            (C3198 * C50928 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C17173) *
                C17175) *
               C50859) *
              C50779 * C1024 +
          (((C17492 + C17491) * C17175 + (C17490 + C17489) * C17176 +
            (C17793 + C17794) * C17177) *
               C50859 -
           (C17188 * C17177 + (C17182 + C17181) * C17176 +
            (C17180 + C17179) * C17175) *
               C1673) *
              C50779 * C1025 +
          ((C17187 * C17175 + (C17184 + C17183) * C17176 +
            (C17185 + C17186) * C17177) *
               C1673 -
           (((C117 * C890 + C912 + C912 + C50892 * C900) * C50928 +
             C755 * C17173) *
                C17177 +
            (C17794 + C17793) * C17176 + C17792 * C17175) *
               C50859) *
              C50779 * C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C17173 +
            C2486 * C50928) *
               C17175 +
           (C17179 + C17180) * C17176 + C17187 * C17177) *
              C1839 -
          (C17792 * C17177 + (C17491 + C17492) * C17176 +
           (C3198 * C50928 +
            (C117 * C460 + C497 + C497 + C50892 * C480) * C17173) *
               C17175) *
              C1840 +
          (((C117 * C461 + C498 + C498 + C50892 * C481) * C17173 +
            C3620 * C50928) *
               C17175 +
           (C17493 + C17494) * C17176 + (C17495 + C17496) * C17177) *
              C1841 -
          (((C117 * C6098 + C10102 + C10102 + C50892 * C6100) * C50928 +
            (C117 * C1844 + C1857 + C1857 + C50892 * C1852) * C17173) *
               C17177 +
           ((C117 * C4511 + C4524 + C4524 + C50892 * C4519) * C50928 +
            (C117 * C1845 + C1858 + C1858 + C50892 * C1853) * C17173) *
               C17176 +
           ((C117 * C4513 + C4526 + C4526 + C50892 * C4521) * C50928 +
            (C117 * C1846 + C1859 + C1859 + C50892 * C1854) * C17173) *
               C17175) *
              C1842) *
         C50779 * C50760) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C19810 +
            C2486 * C19811 + C2487 * C19812 + C2489 * C19813) *
               C50734 * C1673 -
           (C4120 * C19813 + C3197 * C19812 + C3198 * C19811 +
            (C117 * C460 + C497 + C497 + C50892 * C480) * C19810) *
               C50734 * C50859) *
              C50779 * C1024 +
          ((C524 * C19810 + C919 * C19811 + C2668 * C19812 + C3199 * C19813) *
               C50734 * C50859 -
           (C2488 * C19813 + C348 * C19812 + C347 * C19811 + C168 * C19810) *
               C50734 * C1673) *
              C50779 * C1025 +
          ((C169 * C19810 + C346 * C19811 + C349 * C19812 + C2491 * C19813) *
               C50734 * C1673 -
           ((C117 * C3172 + C3190 + C3190 + C50892 * C3178) * C19813 +
            C2975 * C19812 + C920 * C19811 + C523 * C19810) *
               C50734 * C50859) *
              C50779 * C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C19810 +
            C2486 * C19811 + C2487 * C19812 + C2489 * C19813) *
               C50734 * C1673 -
           (C4120 * C19813 + C3197 * C19812 + C3198 * C19811 +
            (C117 * C460 + C497 + C497 + C50892 * C480) * C19810) *
               C50734 * C50859) *
              C275 +
          ((C3198 * C19810 + C3197 * C19811 + C4120 * C19812 +
            C20952 * C19813) *
               C50734 * C50859 -
           (C3457 * C19813 + C2489 * C19812 + C2487 * C19811 + C2486 * C19810) *
               C50734 * C1673) *
              C276 +
          ((C2487 * C19810 + C2489 * C19811 + C3457 * C19812 +
            C20510 * C19813) *
               C50734 * C1673 -
           ((C117 * C20943 + C20949 + C20949 + C50892 * C20945) * C19813 +
            C20952 * C19812 + C4120 * C19811 + C3197 * C19810) *
               C50734 * C50859) *
              C277) *
         C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C141 + C141 + C50892 * C133) * C19810 +
           C2486 * C19811 + C2487 * C19812 + C2489 * C19813) *
              C50734 * C1839 -
          (C4120 * C19813 + C3197 * C19812 + C3198 * C19811 +
           (C117 * C460 + C497 + C497 + C50892 * C480) * C19810) *
              C50734 * C1840 +
          ((C117 * C461 + C498 + C498 + C50892 * C481) * C19810 +
           C3620 * C19811 + C3621 * C19812 + C20617 * C19813) *
              C50734 * C1841 -
          ((C117 * C21214 + C21218 + C21218 + C50892 * C21216) * C19813 +
           (C117 * C4512 + C4525 + C4525 + C50892 * C4520) * C19812 +
           (C117 * C4513 + C4526 + C4526 + C50892 * C4521) * C19811 +
           (C117 * C1846 + C1859 + C1859 + C50892 * C1854) * C19810) *
              C50734 * C1842) *
         C50779 * C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[148] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C17173 +
             C2486 * C50928) *
                C17175 +
            (C17179 + C17180) * C17176 + C17187 * C17177) *
               C51050 -
           (C17792 * C17177 + (C17491 + C17492) * C17176 +
            (C3198 * C50928 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C17173) *
                C17175) *
               C51051 +
           (((C117 * C461 + C498 + C498 + C50892 * C481) * C17173 +
             C3620 * C50928) *
                C17175 +
            (C17493 + C17494) * C17176 + (C17495 + C17496) * C17177) *
               C2089) *
              C50779 * C50995 +
          (((C17492 + C17491) * C17175 + (C17490 + C17489) * C17176 +
            (C17793 + C17794) * C17177) *
               C51051 -
           (C17188 * C17177 + (C17182 + C17181) * C17176 +
            (C17180 + C17179) * C17175) *
               C51050 -
           (((C117 * C1212 + C1225 + C1225 + C50892 * C1220) * C50928 +
             C527 * C17173) *
                C17177 +
            (C17496 + C17495) * C17176 + (C17494 + C17493) * C17175) *
               C2089) *
              C50779 * C50766)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C19810 +
            C2486 * C19811 + C2487 * C19812 + C2489 * C19813) *
               C50734 * C51050 -
           (C4120 * C19813 + C3197 * C19812 + C3198 * C19811 +
            (C117 * C460 + C497 + C497 + C50892 * C480) * C19810) *
               C50734 * C51051 +
           ((C117 * C461 + C498 + C498 + C50892 * C481) * C19810 +
            C3620 * C19811 + C3621 * C19812 + C20617 * C19813) *
               C50734 * C2089) *
              C50779 * C50995 +
          ((C524 * C19810 + C919 * C19811 + C2668 * C19812 + C3199 * C19813) *
               C50734 * C51051 -
           (C2488 * C19813 + C348 * C19812 + C347 * C19811 + C168 * C19810) *
               C50734 * C51050 -
           ((C117 * C3603 + C3614 + C3614 + C50892 * C3607) * C19813 +
            C2670 * C19812 + C2669 * C19811 + C525 * C19810) *
               C50734 * C2089) *
              C50779 * C50766)) /
            (p * q * std::sqrt(p + q));
    d2ee[149] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C17173 +
             C2486 * C50928) *
                C17175 +
            (C17179 + C17180) * C17176 + C17187 * C17177) *
               C1673 -
           (C17792 * C17177 + (C17491 + C17492) * C17176 +
            (C3198 * C50928 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C17173) *
                C17175) *
               C50859) *
              C50779 * C1024 +
          (((C17492 + C17491) * C17175 + (C17490 + C17489) * C17176 +
            (C17793 + C17794) * C17177) *
               C50859 -
           (C17188 * C17177 + (C17182 + C17181) * C17176 +
            (C17180 + C17179) * C17175) *
               C1673) *
              C50779 * C1025 +
          ((C17187 * C17175 + (C17184 + C17183) * C17176 +
            (C17185 + C17186) * C17177) *
               C1673 -
           (((C117 * C890 + C912 + C912 + C50892 * C900) * C50928 +
             C755 * C17173) *
                C17177 +
            (C17794 + C17793) * C17176 + C17792 * C17175) *
               C50859) *
              C50779 * C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C141 + C141 + C50892 * C133) * C17173 +
             C2486 * C50928) *
                C17175 +
            (C17179 + C17180) * C17176 + C17187 * C17177) *
               C1673 -
           (C17792 * C17177 + (C17491 + C17492) * C17176 +
            (C3198 * C50928 +
             (C117 * C460 + C497 + C497 + C50892 * C480) * C17173) *
                C17175) *
               C50859) *
              C275 +
          (((C3198 * C17173 + C3197 * C50928) * C17175 +
            (C17989 + C17990) * C17176 + (C17991 + C17992) * C17177) *
               C50859 -
           (C17643 * C17177 + (C17337 + C17338) * C17176 +
            (C2487 * C50928 + C2486 * C17173) * C17175) *
               C1673) *
              C276 +
          (((C2487 * C17173 + C2489 * C50928) * C17175 +
            (C17339 + C17340) * C17176 + (C17341 + C17342) * C17177) *
               C1673 -
           (((C117 * C3172 + C3190 + C3190 + C50892 * C3178) * C50928 +
             C2975 * C17173) *
                C17177 +
            (C3199 * C50928 + C2668 * C17173) * C17176 +
            (C4120 * C50928 + C3197 * C17173) * C17175) *
               C50859) *
              C277) *
         C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C19810 +
            C2486 * C19811 + C2487 * C19812 + C2489 * C19813) *
               C50734 * C1673 -
           (C4120 * C19813 + C3197 * C19812 + C3198 * C19811 +
            (C117 * C460 + C497 + C497 + C50892 * C480) * C19810) *
               C50734 * C50859) *
              C50779 * C1024 +
          ((C524 * C19810 + C919 * C19811 + C2668 * C19812 + C3199 * C19813) *
               C50734 * C50859 -
           (C2488 * C19813 + C348 * C19812 + C347 * C19811 + C168 * C19810) *
               C50734 * C1673) *
              C50779 * C1025 +
          ((C169 * C19810 + C346 * C19811 + C349 * C19812 + C2491 * C19813) *
               C50734 * C1673 -
           ((C117 * C3172 + C3190 + C3190 + C50892 * C3178) * C19813 +
            C2975 * C19812 + C920 * C19811 + C523 * C19810) *
               C50734 * C50859) *
              C50779 * C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C141 + C141 + C50892 * C133) * C19810 +
            C2486 * C19811 + C2487 * C19812 + C2489 * C19813) *
               C50734 * C1673 -
           (C4120 * C19813 + C3197 * C19812 + C3198 * C19811 +
            (C117 * C460 + C497 + C497 + C50892 * C480) * C19810) *
               C50734 * C50859) *
              C275 +
          ((C3198 * C19810 + C3197 * C19811 + C4120 * C19812 +
            C20952 * C19813) *
               C50734 * C50859 -
           (C3457 * C19813 + C2489 * C19812 + C2487 * C19811 + C2486 * C19810) *
               C50734 * C1673) *
              C276 +
          ((C2487 * C19810 + C2489 * C19811 + C3457 * C19812 +
            C20510 * C19813) *
               C50734 * C1673 -
           ((C117 * C20943 + C20949 + C20949 + C50892 * C20945) * C19813 +
            C20952 * C19812 + C4120 * C19811 + C3197 * C19810) *
               C50734 * C50859) *
              C277) *
         C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[150] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                       C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                          C51016 +
                      (C36268 + C36269) * C50928) *
                         C50988 +
                     ((C33253 + C33254) * C51016 + C40934 * C50928) * C50739) *
                        C50795 * C51003 -
                    ((C36249 * C50928 + C40935 * C51016) * C50739 +
                     ((C36271 + C36270) * C50928 + (C36269 + C36268) * C51016) *
                         C50988) *
                        C50795 * C50831) *
                       C51046 +
                   (((C40934 * C51016 + C40936 * C50928) * C50988 +
                     (C41335 * C51016 + (C33465 + C33466) * C50928) * C50739) *
                        C50795 * C50831 -
                    ((C33815 * C50928 + (C33256 + C33255) * C51016) * C50739 +
                     (C40935 * C50928 + (C33254 + C33253) * C51016) * C50988) *
                        C50795 * C51003) *
                       C51047 +
                   (((C33261 * C51016 + C41335 * C50928) * C50988 +
                     ((C33258 + C33257) * C51016 + (C33827 + C33828) * C50928) *
                         C50739) *
                        C50795 * C51003 -
                    (((C33206 * C1559 + C33441 + C33441 + C50956 * C1567 +
                       C33204 * C287 + C33442 + C33442 + C33202 * C307) *
                          C50928 +
                      (C33828 + C33827) * C51016) *
                         C50739 +
                     ((C33466 + C33465) * C50928 + C33815 * C51016) * C50988) *
                        C50795 * C50831) *
                       C635)) /
                 (p * q * std::sqrt(p + q));
    d2ee[151] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
               C33210 + C33210 + C50956 * C480) *
                  C51016 +
              (C36268 + C36269) * C50928) *
                 C50988 +
             ((C33253 + C33254) * C51016 + C40934 * C50928) * C50739) *
                C51004 -
            ((C41788 * C50928 + (C33663 + C33664) * C51016) * C50739 +
             ((C36943 + C36944) * C50928 +
              (C33206 * C461 + C33625 + C33625 + C50956 * C481 + C33204 * C460 +
               C33626 + C33626 + C33202 * C480) *
                  C51016) *
                 C50988) *
                C50859) *
               C51003 +
           ((((C36944 + C36943) * C51016 + (C36942 + C36941) * C50928) *
                 C50988 +
             (C41789 * C51016 + (C36945 + C36946) * C50928) * C50739) *
                C50859 -
            ((C36249 * C50928 + C40935 * C51016) * C50739 +
             ((C36271 + C36270) * C50928 + (C36269 + C36268) * C51016) *
                 C50988) *
                C51004) *
               C50831) *
              C278 +
          (((((C33664 + C33663) * C51016 + C41789 * C50928) * C50988 +
             ((C33662 + C33661) * C51016 + (C34209 + C34210) * C50928) *
                 C50739) *
                C50859 -
            ((C33815 * C50928 + (C33256 + C33255) * C51016) * C50739 +
             (C40935 * C50928 + (C33254 + C33253) * C51016) * C50988) *
                C51004) *
               C51003 +
           (((C40934 * C51016 + C40936 * C50928) * C50988 +
             (C41335 * C51016 + (C33465 + C33466) * C50928) * C50739) *
                C51004 -
            (((C33206 * C2642 + C35099 + C35099 + C50956 * C2648 +
               C33204 * C1560 + C35100 + C35100 + C33202 * C1568) *
                  C50928 +
              (C34210 + C34209) * C51016) *
                 C50739 +
             ((C36946 + C36945) * C50928 + C41788 * C51016) * C50988) *
                C50859) *
               C50831) *
              C50766)) /
        (p * q * std::sqrt(p + q));
    d2ee[152] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
              C33210 + C33210 + C50956 * C480) *
                 C51016 +
             (C36268 + C36269) * C50928) *
                C50988 +
            ((C33253 + C33254) * C51016 + C40934 * C50928) * C50739) *
               C50795 * C275 -
           ((C36249 * C50928 + C40935 * C51016) * C50739 +
            ((C36271 + C36270) * C50928 + (C36269 + C36268) * C51016) *
                C50988) *
               C50795 * C276 +
           ((C36276 * C51016 + (C36273 + C36272) * C50928) * C50988 +
            (C40936 * C51016 + (C36274 + C36275) * C50928) * C50739) *
               C50795 * C277) *
              C278 +
          (((C40934 * C51016 + C40936 * C50928) * C50988 +
            ((C33460 + C33459) * C51016 + (C33465 + C33466) * C50928) *
                C50739) *
               C50795 * C276 -
           ((C33815 * C50928 + (C33256 + C33255) * C51016) * C50739 +
            (C40935 * C50928 + (C33254 + C33253) * C51016) * C50988) *
               C50795 * C275 -
           (((C33206 * C3172 + C34455 + C34455 + C50956 * C3178 +
              C33204 * C1099 + C34456 + C34456 + C33202 * C1107) *
                 C50928 +
             (C33466 + C33465) * C51016) *
                C50739 +
            ((C36275 + C36274) * C50928 + C36249 * C51016) * C50988) *
               C50795 * C277) *
              C50766)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
             C33210 + C33210 + C50956 * C480) *
                C51016 +
            (C36268 + C36269) * C50928) *
               C50988 +
           ((C33253 + C33254) * C51016 + (C33462 + C33461) * C50928) * C50739) *
              C50795 * C50779 * C113 -
          ((C33815 * C50928 + (C33256 + C33255) * C51016) * C50739 +
           ((C33461 + C33462) * C50928 + (C33254 + C33253) * C51016) * C50988) *
              C50795 * C50779 * C114 +
          ((C33261 * C51016 + (C33460 + C33459) * C50928) * C50988 +
           ((C33258 + C33257) * C51016 + (C33827 + C33828) * C50928) * C50739) *
              C50795 * C50779 * C115 -
          (((C33206 * C890 + C33820 + C33820 + C50956 * C900 + C33204 * C288 +
             C33821 + C33821 + C33202 * C308) *
                C50928 +
            (C33260 + C33259) * C51016) *
               C50739 +
           ((C33828 + C33827) * C50928 + C33262 * C51016) * C50988) *
              C50795 * C50779 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
              C33210 + C33210 + C50956 * C480) *
                 C51016 +
             (C36268 + C36269) * C50928) *
                C50988 +
            ((C33253 + C33254) * C51016 + C40934 * C50928) * C50739) *
               C454 -
           (((C34208 + C34207) * C50928 + (C33663 + C33664) * C51016) * C50739 +
            ((C36943 + C36944) * C50928 +
             (C33206 * C461 + C33625 + C33625 + C50956 * C481 + C33204 * C460 +
              C33626 + C33626 + C33202 * C480) *
                 C51016) *
                C50988) *
               C455 +
           (((C33204 * C461 + C33627 + C33627 + C33202 * C481 + C33206 * C1846 +
              C33628 + C33628 + C50956 * C1854) *
                 C51016 +
             (C37368 + C37369) * C50928) *
                C50988 +
            ((C33665 + C33666) * C51016 + (C41139 + C41140) * C50928) *
                C50739) *
               C456) *
              C50779 * C278 +
          ((((C33664 + C33663) * C51016 + (C34207 + C34208) * C50928) * C50988 +
            ((C33662 + C33661) * C51016 + (C34209 + C34210) * C50928) *
                C50739) *
               C455 -
           ((C33815 * C50928 + (C33256 + C33255) * C51016) * C50739 +
            (C40935 * C50928 + (C33254 + C33253) * C51016) * C50988) *
               C454 -
           (((C33206 * C6098 + C34607 + C34607 + C50956 * C6100 +
              C33204 * C1213 + C34608 + C34608 + C33202 * C1221) *
                 C50928 +
             (C33668 + C33667) * C51016) *
                C50739 +
            ((C41140 + C41139) * C50928 + (C33666 + C33665) * C51016) *
                C50988) *
               C456) *
              C50779 * C50766)) /
            (p * q * std::sqrt(p + q));
    d2ee[153] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
              C33210 + C33210 + C50956 * C480) *
                 C51016 +
             (C36268 + C36269) * C50928) *
                C50988 +
            ((C33253 + C33254) * C51016 + C40934 * C50928) * C50739) *
               C51004 -
           (((C34208 + C34207) * C50928 + (C33663 + C33664) * C51016) * C50739 +
            ((C36943 + C36944) * C50928 +
             (C33206 * C461 + C33625 + C33625 + C50956 * C481 + C33204 * C460 +
              C33626 + C33626 + C33202 * C480) *
                 C51016) *
                C50988) *
               C50859) *
              C50779 * C51046 +
          ((((C33664 + C33663) * C51016 + (C34207 + C34208) * C50928) * C50988 +
            ((C33662 + C33661) * C51016 + (C34209 + C34210) * C50928) *
                C50739) *
               C50859 -
           ((C33815 * C50928 + (C33256 + C33255) * C51016) * C50739 +
            (C40935 * C50928 + (C33254 + C33253) * C51016) * C50988) *
               C51004) *
              C50779 * C51047 +
          (((C33261 * C51016 + C41335 * C50928) * C50988 +
            ((C33258 + C33257) * C51016 + (C33827 + C33828) * C50928) *
                C50739) *
               C51004 -
           (((C33206 * C1212 + C34197 + C34197 + C50956 * C1220 +
              C33204 * C889 + C34198 + C34198 + C33202 * C899) *
                 C50928 +
             (C33988 + C33987) * C51016) *
                C50739 +
            ((C34210 + C34209) * C50928 + C33975 * C51016) * C50988) *
               C50859) *
              C50779 * C635)) /
        (p * q * std::sqrt(p + q));
    d2ee[154] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
             C33210 + C33210 + C50956 * C480) *
                C51016 +
            (C36268 + C36269) * C50928) *
               C50988 +
           ((C33253 + C33254) * C51016 + (C33462 + C33461) * C50928) * C50739) *
              C50795 * C50779 * C113 -
          ((C33815 * C50928 + (C33256 + C33255) * C51016) * C50739 +
           ((C33461 + C33462) * C50928 + (C33254 + C33253) * C51016) * C50988) *
              C50795 * C50779 * C114 +
          ((C33261 * C51016 + (C33460 + C33459) * C50928) * C50988 +
           ((C33258 + C33257) * C51016 + (C33827 + C33828) * C50928) * C50739) *
              C50795 * C50779 * C115 -
          (((C33206 * C890 + C33820 + C33820 + C50956 * C900 + C33204 * C288 +
             C33821 + C33821 + C33202 * C308) *
                C50928 +
            (C33260 + C33259) * C51016) *
               C50739 +
           ((C33828 + C33827) * C50928 + C33262 * C51016) * C50988) *
              C50795 * C50779 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
              C33210 + C33210 + C50956 * C480) *
                 C51016 +
             (C36268 + C36269) * C50928) *
                C50988 +
            ((C33253 + C33254) * C51016 + C40934 * C50928) * C50739) *
               C50795 * C275 -
           ((C36249 * C50928 + C40935 * C51016) * C50739 +
            ((C36271 + C36270) * C50928 + (C36269 + C36268) * C51016) *
                C50988) *
               C50795 * C276 +
           ((C36276 * C51016 + (C36273 + C36272) * C50928) * C50988 +
            (C40936 * C51016 + (C36274 + C36275) * C50928) * C50739) *
               C50795 * C277) *
              C278 +
          (((C40934 * C51016 + C40936 * C50928) * C50988 +
            ((C33460 + C33459) * C51016 + (C33465 + C33466) * C50928) *
                C50739) *
               C50795 * C276 -
           ((C33815 * C50928 + (C33256 + C33255) * C51016) * C50739 +
            (C40935 * C50928 + (C33254 + C33253) * C51016) * C50988) *
               C50795 * C275 -
           (((C33206 * C3172 + C34455 + C34455 + C50956 * C3178 +
              C33204 * C1099 + C34456 + C34456 + C33202 * C1107) *
                 C50928 +
             (C33466 + C33465) * C51016) *
                C50739 +
            ((C36275 + C36274) * C50928 + C36249 * C51016) * C50988) *
               C50795 * C277) *
              C50766)) /
            (p * q * std::sqrt(p + q));
    d2ee[155] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                       C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                          C51016 +
                      (C36268 + C36269) * C50928) *
                         C50988 +
                     ((C33253 + C33254) * C51016 + C40934 * C50928) * C50739) *
                        C50795 * C51048 -
                    ((C36249 * C50928 + C40935 * C51016) * C50739 +
                     ((C36271 + C36270) * C50928 + (C36269 + C36268) * C51016) *
                         C50988) *
                        C50795 * C51049 +
                    ((C36276 * C51016 + (C36273 + C36272) * C50928) * C50988 +
                     (C40936 * C51016 + (C36274 + C36275) * C50928) * C50739) *
                        C50795 * C1328) *
                       C50995 +
                   (((C40934 * C51016 + C40936 * C50928) * C50988 +
                     (C41335 * C51016 + (C33465 + C33466) * C50928) * C50739) *
                        C50795 * C51049 -
                    ((C33815 * C50928 + (C33256 + C33255) * C51016) * C50739 +
                     (C40935 * C50928 + (C33254 + C33253) * C51016) * C50988) *
                        C50795 * C51048 -
                    (((C33206 * C3172 + C34455 + C34455 + C50956 * C3178 +
                       C33204 * C1099 + C34456 + C34456 + C33202 * C1107) *
                          C50928 +
                      (C33466 + C33465) * C51016) *
                         C50739 +
                     ((C36275 + C36274) * C50928 + C36249 * C51016) * C50988) *
                        C50795 * C1328) *
                       C50766)) /
                 (p * q * std::sqrt(p + q));
    d2ee[156] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
              C33210 + C33210 + C50956 * C480) *
                 C51016 +
             (C36268 + C36269) * C50928) *
                C50988 +
            ((C33253 + C33254) * C51016 + C40934 * C50928) * C50739) *
               C51004 -
           ((C41788 * C50928 + (C33663 + C33664) * C51016) * C50739 +
            ((C36943 + C36944) * C50928 +
             (C33206 * C461 + C33625 + C33625 + C50956 * C481 + C33204 * C460 +
              C33626 + C33626 + C33202 * C480) *
                 C51016) *
                C50988) *
               C50859) *
              C51048 +
          ((((C36944 + C36943) * C51016 + (C36942 + C36941) * C50928) * C50988 +
            (C41789 * C51016 + (C36945 + C36946) * C50928) * C50739) *
               C50859 -
           ((C36249 * C50928 + C40935 * C51016) * C50739 +
            ((C36271 + C36270) * C50928 + (C36269 + C36268) * C51016) *
                C50988) *
               C51004) *
              C51049 +
          (((C36276 * C51016 + (C36273 + C36272) * C50928) * C50988 +
            (C40936 * C51016 + (C36274 + C36275) * C50928) * C50739) *
               C51004 -
           (((C33206 * C3603 + C36927 + C36927 + C50956 * C3607 +
              C33204 * C3171 + C36928 + C36928 + C33202 * C3177) *
                 C50928 +
             (C36946 + C36945) * C51016) *
                C50739 +
            ((C37870 + C37869) * C50928 + C37858 * C51016) * C50988) *
               C50859) *
              C1328) *
         C50760) /
        (p * q * std::sqrt(p + q));
    d2ee[157] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
             C33210 + C33210 + C50956 * C480) *
                C51016 +
            (C36268 + C36269) * C50928) *
               C50988 +
           ((C33253 + C33254) * C51016 + C40934 * C50928) * C50739) *
              C50795 * C1093 -
          ((C36249 * C50928 + C40935 * C51016) * C50739 +
           ((C36271 + C36270) * C50928 + (C36269 + C36268) * C51016) * C50988) *
              C50795 * C1094 +
          ((C36276 * C51016 + (C36273 + C36272) * C50928) * C50988 +
           (C40936 * C51016 + (C36274 + C36275) * C50928) * C50739) *
              C50795 * C1095 -
          (((C33206 * C4107 + C36250 + C36250 + C50956 * C4111 +
             C33204 * C2447 + C36251 + C36251 + C33202 * C2453) *
                C50928 +
            (C36275 + C36274) * C51016) *
               C50739 +
           ((C37203 + C37202) * C50928 + C37191 * C51016) * C50988) *
              C50795 * C1096) *
         C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
              C33210 + C33210 + C50956 * C480) *
                 C51016 +
             (C36268 + C36269) * C50928) *
                C50988 +
            ((C33253 + C33254) * C51016 + C40934 * C50928) * C50739) *
               C50795 * C1022 -
           ((C36249 * C50928 + C40935 * C51016) * C50739 +
            ((C36271 + C36270) * C50928 + (C36269 + C36268) * C51016) *
                C50988) *
               C50795 * C50831) *
              C1024 +
          (((C40934 * C51016 + C40936 * C50928) * C50988 +
            (C41335 * C51016 + (C33465 + C33466) * C50928) * C50739) *
               C50795 * C50831 -
           ((C33815 * C50928 + (C33256 + C33255) * C51016) * C50739 +
            (C40935 * C50928 + (C33254 + C33253) * C51016) * C50988) *
               C50795 * C1022) *
              C1025 +
          (((C33261 * C51016 + C41335 * C50928) * C50988 +
            ((C33258 + C33257) * C51016 + (C33827 + C33828) * C50928) *
                C50739) *
               C50795 * C1022 -
           (((C33206 * C1559 + C33441 + C33441 + C50956 * C1567 +
              C33204 * C287 + C33442 + C33442 + C33202 * C307) *
                 C50928 +
             (C33828 + C33827) * C51016) *
                C50739 +
            ((C33466 + C33465) * C50928 + C33815 * C51016) * C50988) *
               C50795 * C50831) *
              C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
              C33210 + C33210 + C50956 * C480) *
                 C51016 +
             (C36268 + C36269) * C50928) *
                C50988 +
            ((C33253 + C33254) * C51016 + C40934 * C50928) * C50739) *
               C454 -
           ((C41788 * C50928 + (C33663 + C33664) * C51016) * C50739 +
            ((C36943 + C36944) * C50928 +
             (C33206 * C461 + C33625 + C33625 + C50956 * C481 + C33204 * C460 +
              C33626 + C33626 + C33202 * C480) *
                 C51016) *
                C50988) *
               C455 +
           (((C33204 * C461 + C33627 + C33627 + C33202 * C481 + C33206 * C1846 +
              C33628 + C33628 + C50956 * C1854) *
                 C51016 +
             (C37368 + C37369) * C50928) *
                C50988 +
            ((C33665 + C33666) * C51016 + (C41139 + C41140) * C50928) *
                C50739) *
               C456) *
              C1022 +
          ((((C36944 + C36943) * C51016 + (C36942 + C36941) * C50928) * C50988 +
            (C41789 * C51016 + (C36945 + C36946) * C50928) * C50739) *
               C455 -
           ((C36249 * C50928 + C40935 * C51016) * C50739 +
            ((C36271 + C36270) * C50928 + (C36269 + C36268) * C51016) *
                C50988) *
               C454 -
           (((C33206 * C4510 + C36425 + C36425 + C50956 * C4518 +
              C33204 * C2641 + C36426 + C36426 + C33202 * C2647) *
                 C50928 +
             (C41140 + C41139) * C51016) *
                C50739 +
            ((C37371 + C37370) * C50928 + (C37369 + C37368) * C51016) *
                C50988) *
               C456) *
              C50831) *
         C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[158] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
               C33210 + C33210 + C50956 * C480) *
                  C51016 +
              (C36268 + C36269) * C50928) *
                 C50988 +
             ((C33253 + C33254) * C51016 + C40934 * C50928) * C50739) *
                C51004 -
            ((C41788 * C50928 + (C33663 + C33664) * C51016) * C50739 +
             ((C36943 + C36944) * C50928 +
              (C33206 * C461 + C33625 + C33625 + C50956 * C481 + C33204 * C460 +
               C33626 + C33626 + C33202 * C480) *
                  C51016) *
                 C50988) *
                C50859) *
               C1022 +
           ((((C36944 + C36943) * C51016 + (C36942 + C36941) * C50928) *
                 C50988 +
             (C41789 * C51016 + (C36945 + C36946) * C50928) * C50739) *
                C50859 -
            ((C36249 * C50928 + C40935 * C51016) * C50739 +
             ((C36271 + C36270) * C50928 + (C36269 + C36268) * C51016) *
                 C50988) *
                C51004) *
               C50831) *
              C50995 +
          (((((C33664 + C33663) * C51016 + C41789 * C50928) * C50988 +
             ((C33662 + C33661) * C51016 + (C34209 + C34210) * C50928) *
                 C50739) *
                C50859 -
            ((C33815 * C50928 + (C33256 + C33255) * C51016) * C50739 +
             (C40935 * C50928 + (C33254 + C33253) * C51016) * C50988) *
                C51004) *
               C1022 +
           (((C40934 * C51016 + C40936 * C50928) * C50988 +
             (C41335 * C51016 + (C33465 + C33466) * C50928) * C50739) *
                C51004 -
            (((C33206 * C2642 + C35099 + C35099 + C50956 * C2648 +
               C33204 * C1560 + C35100 + C35100 + C33202 * C1568) *
                  C50928 +
              (C34210 + C34209) * C51016) *
                 C50739 +
             ((C36946 + C36945) * C50928 + C41788 * C51016) * C50988) *
                C50859) *
               C50831) *
              C50766)) /
        (p * q * std::sqrt(p + q));
    d2ee[159] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
              C33210 + C33210 + C50956 * C480) *
                 C51016 +
             (C36268 + C36269) * C50928) *
                C50988 +
            ((C33253 + C33254) * C51016 + C40934 * C50928) * C50739) *
               C50795 * C1022 -
           ((C36249 * C50928 + C40935 * C51016) * C50739 +
            ((C36271 + C36270) * C50928 + (C36269 + C36268) * C51016) *
                C50988) *
               C50795 * C50831) *
              C1024 +
          (((C40934 * C51016 + C40936 * C50928) * C50988 +
            (C41335 * C51016 + (C33465 + C33466) * C50928) * C50739) *
               C50795 * C50831 -
           ((C33815 * C50928 + (C33256 + C33255) * C51016) * C50739 +
            (C40935 * C50928 + (C33254 + C33253) * C51016) * C50988) *
               C50795 * C1022) *
              C1025 +
          (((C33261 * C51016 + C41335 * C50928) * C50988 +
            ((C33258 + C33257) * C51016 + (C33827 + C33828) * C50928) *
                C50739) *
               C50795 * C1022 -
           (((C33206 * C1559 + C33441 + C33441 + C50956 * C1567 +
              C33204 * C287 + C33442 + C33442 + C33202 * C307) *
                 C50928 +
             (C33828 + C33827) * C51016) *
                C50739 +
            ((C33466 + C33465) * C50928 + C33815 * C51016) * C50988) *
               C50795 * C50831) *
              C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
             C33210 + C33210 + C50956 * C480) *
                C51016 +
            (C36268 + C36269) * C50928) *
               C50988 +
           ((C33253 + C33254) * C51016 + C40934 * C50928) * C50739) *
              C50795 * C1093 -
          ((C36249 * C50928 + C40935 * C51016) * C50739 +
           ((C36271 + C36270) * C50928 + (C36269 + C36268) * C51016) * C50988) *
              C50795 * C1094 +
          ((C36276 * C51016 + (C36273 + C36272) * C50928) * C50988 +
           (C40936 * C51016 + (C36274 + C36275) * C50928) * C50739) *
              C50795 * C1095 -
          (((C33206 * C4107 + C36250 + C36250 + C50956 * C4111 +
             C33204 * C2447 + C36251 + C36251 + C33202 * C2453) *
                C50928 +
            (C36275 + C36274) * C51016) *
               C50739 +
           ((C37203 + C37202) * C50928 + C37191 * C51016) * C50988) *
              C50795 * C1096) *
         C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[160] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
               C33210 + C33210 + C50956 * C480) *
                  C51016 +
              (C36268 + C36269) * C50928) *
                 C50988 +
             ((C33253 + C33254) * C51016 + C40934 * C50928) * C50739) *
                C1673 -
            ((C41788 * C50928 + (C33663 + C33664) * C51016) * C50739 +
             ((C36943 + C36944) * C50928 +
              (C33206 * C461 + C33625 + C33625 + C50956 * C481 + C33204 * C460 +
               C33626 + C33626 + C33202 * C480) *
                  C51016) *
                 C50988) *
                C50859) *
               C51003 +
           ((((C36944 + C36943) * C51016 + (C36942 + C36941) * C50928) *
                 C50988 +
             (C41789 * C51016 + (C36945 + C36946) * C50928) * C50739) *
                C50859 -
            ((C36249 * C50928 + C40935 * C51016) * C50739 +
             ((C36271 + C36270) * C50928 + (C36269 + C36268) * C51016) *
                 C50988) *
                C1673) *
               C50831) *
              C50995 +
          (((((C33664 + C33663) * C51016 + C41789 * C50928) * C50988 +
             ((C33662 + C33661) * C51016 + (C34209 + C34210) * C50928) *
                 C50739) *
                C50859 -
            ((C33815 * C50928 + (C33256 + C33255) * C51016) * C50739 +
             (C40935 * C50928 + (C33254 + C33253) * C51016) * C50988) *
                C1673) *
               C51003 +
           (((C40934 * C51016 + C40936 * C50928) * C50988 +
             (C41335 * C51016 + (C33465 + C33466) * C50928) * C50739) *
                C1673 -
            (((C33206 * C2642 + C35099 + C35099 + C50956 * C2648 +
               C33204 * C1560 + C35100 + C35100 + C33202 * C1568) *
                  C50928 +
              (C34210 + C34209) * C51016) *
                 C50739 +
             ((C36946 + C36945) * C50928 + C41788 * C51016) * C50988) *
                C50859) *
               C50831) *
              C50766)) /
        (p * q * std::sqrt(p + q));
    d2ee[161] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
              C33210 + C33210 + C50956 * C480) *
                 C51016 +
             (C36268 + C36269) * C50928) *
                C50988 +
            ((C33253 + C33254) * C51016 + C40934 * C50928) * C50739) *
               C51050 -
           ((C41788 * C50928 + (C33663 + C33664) * C51016) * C50739 +
            ((C36943 + C36944) * C50928 +
             (C33206 * C461 + C33625 + C33625 + C50956 * C481 + C33204 * C460 +
              C33626 + C33626 + C33202 * C480) *
                 C51016) *
                C50988) *
               C51051 +
           (((C33204 * C461 + C33627 + C33627 + C33202 * C481 + C33206 * C1846 +
              C33628 + C33628 + C50956 * C1854) *
                 C51016 +
             (C37368 + C37369) * C50928) *
                C50988 +
            ((C33665 + C33666) * C51016 + (C41139 + C41140) * C50928) *
                C50739) *
               C2089) *
              C51003 +
          ((((C36944 + C36943) * C51016 + (C36942 + C36941) * C50928) * C50988 +
            (C41789 * C51016 + (C36945 + C36946) * C50928) * C50739) *
               C51051 -
           ((C36249 * C50928 + C40935 * C51016) * C50739 +
            ((C36271 + C36270) * C50928 + (C36269 + C36268) * C51016) *
                C50988) *
               C51050 -
           (((C33206 * C4510 + C36425 + C36425 + C50956 * C4518 +
              C33204 * C2641 + C36426 + C36426 + C33202 * C2647) *
                 C50928 +
             (C41140 + C41139) * C51016) *
                C50739 +
            ((C37371 + C37370) * C50928 + (C37369 + C37368) * C51016) *
                C50988) *
               C2089) *
              C50831) *
         C50760) /
        (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
              C33210 + C33210 + C50956 * C480) *
                 C51016 +
             (C36268 + C36269) * C50928) *
                C50988 +
            ((C33253 + C33254) * C51016 + C40934 * C50928) * C50739) *
               C1673 -
           ((C41788 * C50928 + (C33663 + C33664) * C51016) * C50739 +
            ((C36943 + C36944) * C50928 +
             (C33206 * C461 + C33625 + C33625 + C50956 * C481 + C33204 * C460 +
              C33626 + C33626 + C33202 * C480) *
                 C51016) *
                C50988) *
               C50859) *
              C275 +
          ((((C36944 + C36943) * C51016 + (C36942 + C36941) * C50928) * C50988 +
            (C41789 * C51016 + (C36945 + C36946) * C50928) * C50739) *
               C50859 -
           ((C36249 * C50928 + C40935 * C51016) * C50739 +
            ((C36271 + C36270) * C50928 + (C36269 + C36268) * C51016) *
                C50988) *
               C1673) *
              C276 +
          (((C36276 * C51016 + (C36273 + C36272) * C50928) * C50988 +
            (C40936 * C51016 + (C36274 + C36275) * C50928) * C50739) *
               C1673 -
           (((C33206 * C3603 + C36927 + C36927 + C50956 * C3607 +
              C33204 * C3171 + C36928 + C36928 + C33202 * C3177) *
                 C50928 +
             (C36946 + C36945) * C51016) *
                C50739 +
            ((C37870 + C37869) * C50928 + C37858 * C51016) * C50988) *
               C50859) *
              C277) *
         C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
              C33210 + C33210 + C50956 * C480) *
                 C51016 +
             (C36268 + C36269) * C50928) *
                C50988 +
            ((C33253 + C33254) * C51016 + C40934 * C50928) * C50739) *
               C1673 -
           ((C41788 * C50928 + (C33663 + C33664) * C51016) * C50739 +
            ((C36943 + C36944) * C50928 +
             (C33206 * C461 + C33625 + C33625 + C50956 * C481 + C33204 * C460 +
              C33626 + C33626 + C33202 * C480) *
                 C51016) *
                C50988) *
               C50859) *
              C50779 * C1024 +
          ((((C33664 + C33663) * C51016 + C41789 * C50928) * C50988 +
            ((C33662 + C33661) * C51016 + (C34209 + C34210) * C50928) *
                C50739) *
               C50859 -
           ((C33815 * C50928 + (C33256 + C33255) * C51016) * C50739 +
            (C40935 * C50928 + (C33254 + C33253) * C51016) * C50988) *
               C1673) *
              C50779 * C1025 +
          (((C33261 * C51016 + C41335 * C50928) * C50988 +
            ((C33258 + C33257) * C51016 + (C33827 + C33828) * C50928) *
                C50739) *
               C1673 -
           (((C33206 * C1212 + C34197 + C34197 + C50956 * C1220 +
              C33204 * C889 + C34198 + C34198 + C33202 * C899) *
                 C50928 +
             (C33988 + C33987) * C51016) *
                C50739 +
            ((C34210 + C34209) * C50928 + C33975 * C51016) * C50988) *
               C50859) *
              C50779 * C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
             C33210 + C33210 + C50956 * C480) *
                C51016 +
            (C36268 + C36269) * C50928) *
               C50988 +
           ((C33253 + C33254) * C51016 + C40934 * C50928) * C50739) *
              C1839 -
          ((C41788 * C50928 + (C33663 + C33664) * C51016) * C50739 +
           ((C36943 + C36944) * C50928 +
            (C33206 * C461 + C33625 + C33625 + C50956 * C481 + C33204 * C460 +
             C33626 + C33626 + C33202 * C480) *
                C51016) *
               C50988) *
              C1840 +
          (((C33204 * C461 + C33627 + C33627 + C33202 * C481 + C33206 * C1846 +
             C33628 + C33628 + C50956 * C1854) *
                C51016 +
            (C37368 + C37369) * C50928) *
               C50988 +
           ((C33665 + C33666) * C51016 + (C41139 + C41140) * C50928) * C50739) *
              C1841 -
          (((C33206 * C6521 + C43472 + C43472 + C50956 * C6525 +
             C33204 * C4511 + C43473 + C43473 + C33202 * C4519) *
                C50928 +
            (C33206 * C5520 + C35497 + C35497 + C50956 * C5526 +
             C33204 * C1845 + C35498 + C35498 + C33202 * C1853) *
                C51016) *
               C50739 +
           ((C33206 * C6522 + C38263 + C38263 + C50956 * C6526 +
             C33204 * C4513 + C38264 + C38264 + C33202 * C4521) *
                C50928 +
            (C33206 * C5519 + C35499 + C35499 + C50956 * C5525 +
             C33204 * C1846 + C35500 + C35500 + C33202 * C1854) *
                C51016) *
               C50988) *
              C1842) *
         C50779 * C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[163] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                       C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                          C51016 +
                      (C36268 + C36269) * C50928) *
                         C50988 +
                     ((C33253 + C33254) * C51016 + C40934 * C50928) * C50739) *
                        C51050 -
                    ((C41788 * C50928 + (C33663 + C33664) * C51016) * C50739 +
                     ((C36943 + C36944) * C50928 +
                      (C33206 * C461 + C33625 + C33625 + C50956 * C481 +
                       C33204 * C460 + C33626 + C33626 + C33202 * C480) *
                          C51016) *
                         C50988) *
                        C51051 +
                    (((C33204 * C461 + C33627 + C33627 + C33202 * C481 +
                       C33206 * C1846 + C33628 + C33628 + C50956 * C1854) *
                          C51016 +
                      (C37368 + C37369) * C50928) *
                         C50988 +
                     ((C33665 + C33666) * C51016 + (C41139 + C41140) * C50928) *
                         C50739) *
                        C2089) *
                       C50779 * C50995 +
                   ((((C33664 + C33663) * C51016 + C41789 * C50928) * C50988 +
                     ((C33662 + C33661) * C51016 + (C34209 + C34210) * C50928) *
                         C50739) *
                        C51051 -
                    ((C33815 * C50928 + (C33256 + C33255) * C51016) * C50739 +
                     (C40935 * C50928 + (C33254 + C33253) * C51016) * C50988) *
                        C51050 -
                    (((C33206 * C6098 + C34607 + C34607 + C50956 * C6100 +
                       C33204 * C1213 + C34608 + C34608 + C33202 * C1221) *
                          C50928 +
                      (C33668 + C33667) * C51016) *
                         C50739 +
                     ((C41140 + C41139) * C50928 + (C33666 + C33665) * C51016) *
                         C50988) *
                        C2089) *
                       C50779 * C50766)) /
                 (p * q * std::sqrt(p + q));
    d2ee[164] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
              C33210 + C33210 + C50956 * C480) *
                 C51016 +
             (C36268 + C36269) * C50928) *
                C50988 +
            ((C33253 + C33254) * C51016 + C40934 * C50928) * C50739) *
               C1673 -
           ((C41788 * C50928 + (C33663 + C33664) * C51016) * C50739 +
            ((C36943 + C36944) * C50928 +
             (C33206 * C461 + C33625 + C33625 + C50956 * C481 + C33204 * C460 +
              C33626 + C33626 + C33202 * C480) *
                 C51016) *
                C50988) *
               C50859) *
              C50779 * C1024 +
          ((((C33664 + C33663) * C51016 + C41789 * C50928) * C50988 +
            ((C33662 + C33661) * C51016 + (C34209 + C34210) * C50928) *
                C50739) *
               C50859 -
           ((C33815 * C50928 + (C33256 + C33255) * C51016) * C50739 +
            (C40935 * C50928 + (C33254 + C33253) * C51016) * C50988) *
               C1673) *
              C50779 * C1025 +
          (((C33261 * C51016 + C41335 * C50928) * C50988 +
            ((C33258 + C33257) * C51016 + (C33827 + C33828) * C50928) *
                C50739) *
               C1673 -
           (((C33206 * C1212 + C34197 + C34197 + C50956 * C1220 +
              C33204 * C889 + C34198 + C34198 + C33202 * C899) *
                 C50928 +
             (C33988 + C33987) * C51016) *
                C50739 +
            ((C34210 + C34209) * C50928 + C33975 * C51016) * C50988) *
               C50859) *
              C50779 * C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
              C33210 + C33210 + C50956 * C480) *
                 C51016 +
             (C36268 + C36269) * C50928) *
                C50988 +
            ((C33253 + C33254) * C51016 + C40934 * C50928) * C50739) *
               C1673 -
           ((C41788 * C50928 + (C33663 + C33664) * C51016) * C50739 +
            ((C36943 + C36944) * C50928 +
             (C33206 * C461 + C33625 + C33625 + C50956 * C481 + C33204 * C460 +
              C33626 + C33626 + C33202 * C480) *
                 C51016) *
                C50988) *
               C50859) *
              C275 +
          ((((C36944 + C36943) * C51016 + (C36942 + C36941) * C50928) * C50988 +
            (C41789 * C51016 + (C36945 + C36946) * C50928) * C50739) *
               C50859 -
           ((C36249 * C50928 + C40935 * C51016) * C50739 +
            ((C36271 + C36270) * C50928 + (C36269 + C36268) * C51016) *
                C50988) *
               C1673) *
              C276 +
          (((C36276 * C51016 + (C36273 + C36272) * C50928) * C50988 +
            (C40936 * C51016 + (C36274 + C36275) * C50928) * C50739) *
               C1673 -
           (((C33206 * C3603 + C36927 + C36927 + C50956 * C3607 +
              C33204 * C3171 + C36928 + C36928 + C33202 * C3177) *
                 C50928 +
             (C36946 + C36945) * C51016) *
                C50739 +
            ((C37870 + C37869) * C50928 + C37858 * C51016) * C50988) *
               C50859) *
              C277) *
         C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[165] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C44220 * C119 + C44227 + C44227 + C51054 * C133 +
                      C44222 * C460 + C44228 + C44228 + C51055 * C480 +
                      C44224 * C461 + C44229 + C44229 + C44219 * C481) *
                         C51016 +
                     (C47265 + C47266 + C47267) * C50928) *
                        C50734 * C50795 * C51003 -
                    ((C47268 + C47269 + C47270) * C50928 +
                     (C47267 + C47266 + C47265) * C51016) *
                        C50734 * C50795 * C50831) *
                       C51046 +
                   (((C44477 + C44476 + C44475) * C51016 +
                     (C44478 + C44479 + C44480) * C50928) *
                        C50734 * C50795 * C50831 -
                    ((C44475 + C44476 + C44477) * C50928 +
                     (C44280 + C44279 + C44278) * C51016) *
                        C50734 * C50795 * C51003) *
                       C51047 +
                   (((C44283 + C44282 + C44281) * C51016 +
                     (C44836 + C44837 + C44838) * C50928) *
                        C50734 * C50795 * C51003 -
                    ((C44224 * C2642 + C44460 + C44460 + C44219 * C2648 +
                      C44222 * C1560 + C44461 + C44461 + C51055 * C1568 +
                      C44220 * C286 + C44462 + C44462 + C51054 * C306) *
                         C50928 +
                     (C44838 + C44837 + C44836) * C51016) *
                        C50734 * C50795 * C50831) *
                       C635)) /
                 (p * q * std::sqrt(p + q));
    d2ee[166] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C44220 * C119 + C44227 + C44227 + C51054 * C133 +
                       C44222 * C460 + C44228 + C44228 + C51055 * C480 +
                       C44224 * C461 + C44229 + C44229 + C44219 * C481) *
                          C51016 +
                      (C47265 + C47266 + C47267) * C50928) *
                         C50734 * C51004 -
                     ((C47915 + C47916 + C47917) * C50928 +
                      (C44224 * C1846 + C44636 + C44636 + C44219 * C1854 +
                       C44222 * C461 + C44637 + C44637 + C51055 * C481 +
                       C44220 * C460 + C44638 + C44638 + C51054 * C480) *
                          C51016) *
                         C50734 * C50859) *
                        C51003 +
                    (((C47917 + C47916 + C47915) * C51016 +
                      (C44220 * C1562 + C46114 + C46114 + C51054 * C1570 +
                       C44222 * C2640 + C46113 + C46113 + C51055 * C2646 +
                       C44224 * C4512 + C46112 + C46112 + C44219 * C4520) *
                          C50928) *
                         C50734 * C50859 -
                     ((C47268 + C47269 + C47270) * C50928 +
                      (C47267 + C47266 + C47265) * C51016) *
                         C50734 * C51004) *
                        C50831) *
                       C278 +
                   ((((C44671 + C44670 + C44669) * C51016 +
                      (C45218 + C45219 + C45220) * C50928) *
                         C50734 * C50859 -
                     ((C44475 + C44476 + C44477) * C50928 +
                      (C44280 + C44279 + C44278) * C51016) *
                         C50734 * C51004) *
                        C51003 +
                    (((C44477 + C44476 + C44475) * C51016 +
                      (C44478 + C44479 + C44480) * C50928) *
                         C50734 * C51004 -
                     ((C44224 * C4510 + C46109 + C46109 + C44219 * C4518 +
                       C44222 * C2641 + C46110 + C46110 + C51055 * C2647 +
                       C44220 * C1561 + C46111 + C46111 + C51054 * C1569) *
                          C50928 +
                      (C45220 + C45219 + C45218) * C51016) *
                         C50734 * C50859) *
                        C50831) *
                       C50766)) /
                 (p * q * std::sqrt(p + q));
    d2ee[167] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C44220 * C119 + C44227 + C44227 + C51054 * C133 +
                      C44222 * C460 + C44228 + C44228 + C51055 * C480 +
                      C44224 * C461 + C44229 + C44229 + C44219 * C481) *
                         C51016 +
                     (C47265 + C47266 + C47267) * C50928) *
                        C50734 * C50795 * C275 -
                    ((C47268 + C47269 + C47270) * C50928 +
                     (C47267 + C47266 + C47265) * C51016) *
                        C50734 * C50795 * C276 +
                    ((C47270 + C47269 + C47268) * C51016 +
                     (C44220 * C1101 + C45470 + C45470 + C51054 * C1109 +
                      C44222 * C3170 + C45469 + C45469 + C51055 * C3176 +
                      C44224 * C3604 + C45468 + C45468 + C44219 * C3608) *
                         C50928) *
                        C50734 * C50795 * C277) *
                       C278 +
                   (((C44477 + C44476 + C44475) * C51016 +
                     (C44478 + C44479 + C44480) * C50928) *
                        C50734 * C50795 * C276 -
                    ((C44475 + C44476 + C44477) * C50928 +
                     (C44280 + C44279 + C44278) * C51016) *
                        C50734 * C50795 * C275 -
                    ((C44224 * C3603 + C45465 + C45465 + C44219 * C3607 +
                      C44222 * C3171 + C45466 + C45466 + C51055 * C3177 +
                      C44220 * C1100 + C45467 + C45467 + C51054 * C1108) *
                         C50928 +
                     (C44480 + C44479 + C44478) * C51016) *
                        C50734 * C50795 * C277) *
                       C50766)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C44220 * C119 + C44227 + C44227 + C51054 * C133 +
                     C44222 * C460 + C44228 + C44228 + C51055 * C480 +
                     C44224 * C461 + C44229 + C44229 + C44219 * C481) *
                        C51016 +
                    (C44220 * C283 + C44444 + C44444 + C51054 * C303 +
                     C44222 * C886 + C44443 + C44443 + C51055 * C896 +
                     C44224 * C1215 + C44442 + C44442 + C44219 * C1223) *
                        C50928) *
                       C50734 * C50795 * C50779 * C113 -
                   ((C44475 + C44476 + C44477) * C50928 +
                    (C44280 + C44279 + C44278) * C51016) *
                       C50734 * C50795 * C50779 * C114 +
                   ((C44283 + C44282 + C44281) * C51016 +
                    (C44836 + C44837 + C44838) * C50928) *
                       C50734 * C50795 * C50779 * C115 -
                   ((C44224 * C1212 + C44827 + C44827 + C44219 * C1220 +
                     C44222 * C889 + C44828 + C44828 + C51055 * C899 +
                     C44220 * C280 + C44829 + C44829 + C51054 * C300) *
                        C50928 +
                    (C44286 + C44285 + C44284) * C51016) *
                       C50734 * C50795 * C50779 * C116)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C44220 * C119 + C44227 + C44227 + C51054 * C133 +
                      C44222 * C460 + C44228 + C44228 + C51055 * C480 +
                      C44224 * C461 + C44229 + C44229 + C44219 * C481) *
                         C51016 +
                     (C47265 + C47266 + C47267) * C50928) *
                        C50734 * C454 -
                    ((C44224 * C4513 + C45199 + C45199 + C44219 * C4521 +
                      C44222 * C1215 + C45198 + C45198 + C51055 * C1223 +
                      C44220 * C886 + C45197 + C45197 + C51054 * C896) *
                         C50928 +
                     (C44224 * C1846 + C44636 + C44636 + C44219 * C1854 +
                      C44222 * C461 + C44637 + C44637 + C51055 * C481 +
                      C44220 * C460 + C44638 + C44638 + C51054 * C480) *
                         C51016) *
                        C50734 * C455 +
                    ((C44220 * C461 + C44639 + C44639 + C51054 * C481 +
                      C44222 * C1846 + C44640 + C44640 + C51055 * C1854 +
                      C44224 * C5519 + C44641 + C44641 + C44219 * C5525) *
                         C51016 +
                     (C44220 * C1215 + C45622 + C45622 + C51054 * C1223 +
                      C44222 * C4513 + C45621 + C45621 + C51055 * C4521 +
                      C44224 * C6522 + C45620 + C45620 + C44219 * C6526) *
                         C50928) *
                        C50734 * C456) *
                       C50779 * C278 +
                   (((C44671 + C44670 + C44669) * C51016 +
                     (C45218 + C45219 + C45220) * C50928) *
                        C50734 * C455 -
                    ((C44475 + C44476 + C44477) * C50928 +
                     (C44280 + C44279 + C44278) * C51016) *
                        C50734 * C454 -
                    ((C44224 * C6521 + C45617 + C45617 + C44219 * C6525 +
                      C44222 * C4511 + C45618 + C45618 + C51055 * C4519 +
                      C44220 * C1214 + C45619 + C45619 + C51054 * C1222) *
                         C50928 +
                     (C44674 + C44673 + C44672) * C51016) *
                        C50734 * C456) *
                       C50779 * C50766)) /
                     (p * q * std::sqrt(p + q));
    d2ee[168] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C44220 * C119 + C44227 + C44227 + C51054 * C133 +
                      C44222 * C460 + C44228 + C44228 + C51055 * C480 +
                      C44224 * C461 + C44229 + C44229 + C44219 * C481) *
                         C51016 +
                     (C47265 + C47266 + C47267) * C50928) *
                        C50734 * C51004 -
                    ((C44224 * C4513 + C45199 + C45199 + C44219 * C4521 +
                      C44222 * C1215 + C45198 + C45198 + C51055 * C1223 +
                      C44220 * C886 + C45197 + C45197 + C51054 * C896) *
                         C50928 +
                     (C44224 * C1846 + C44636 + C44636 + C44219 * C1854 +
                      C44222 * C461 + C44637 + C44637 + C51055 * C481 +
                      C44220 * C460 + C44638 + C44638 + C51054 * C480) *
                         C51016) *
                        C50734 * C50859) *
                       C50779 * C51046 +
                   (((C44671 + C44670 + C44669) * C51016 +
                     (C45218 + C45219 + C45220) * C50928) *
                        C50734 * C50859 -
                    ((C44475 + C44476 + C44477) * C50928 +
                     (C44280 + C44279 + C44278) * C51016) *
                        C50734 * C51004) *
                       C50779 * C51047 +
                   (((C44283 + C44282 + C44281) * C51016 +
                     (C44836 + C44837 + C44838) * C50928) *
                        C50734 * C51004 -
                    ((C44224 * C6098 + C45209 + C45209 + C44219 * C6100 +
                      C44222 * C1213 + C45210 + C45210 + C51055 * C1221 +
                      C44220 * C888 + C45211 + C45211 + C51054 * C898) *
                         C50928 +
                     (C45002 + C45001 + C45000) * C51016) *
                        C50734 * C50859) *
                       C50779 * C635)) /
                 (p * q * std::sqrt(p + q));
    d2ee[169] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((C44220 * C119 + C44227 + C44227 + C51054 * C133 +
                     C44222 * C460 + C44228 + C44228 + C51055 * C480 +
                     C44224 * C461 + C44229 + C44229 + C44219 * C481) *
                        C51016 +
                    (C44220 * C283 + C44444 + C44444 + C51054 * C303 +
                     C44222 * C886 + C44443 + C44443 + C51055 * C896 +
                     C44224 * C1215 + C44442 + C44442 + C44219 * C1223) *
                        C50928) *
                       C50734 * C50795 * C50779 * C113 -
                   ((C44475 + C44476 + C44477) * C50928 +
                    (C44280 + C44279 + C44278) * C51016) *
                       C50734 * C50795 * C50779 * C114 +
                   ((C44283 + C44282 + C44281) * C51016 +
                    (C44836 + C44837 + C44838) * C50928) *
                       C50734 * C50795 * C50779 * C115 -
                   ((C44224 * C1212 + C44827 + C44827 + C44219 * C1220 +
                     C44222 * C889 + C44828 + C44828 + C51055 * C899 +
                     C44220 * C280 + C44829 + C44829 + C51054 * C300) *
                        C50928 +
                    (C44286 + C44285 + C44284) * C51016) *
                       C50734 * C50795 * C50779 * C116)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C44220 * C119 + C44227 + C44227 + C51054 * C133 +
                      C44222 * C460 + C44228 + C44228 + C51055 * C480 +
                      C44224 * C461 + C44229 + C44229 + C44219 * C481) *
                         C51016 +
                     (C47265 + C47266 + C47267) * C50928) *
                        C50734 * C50795 * C275 -
                    ((C47268 + C47269 + C47270) * C50928 +
                     (C47267 + C47266 + C47265) * C51016) *
                        C50734 * C50795 * C276 +
                    ((C47270 + C47269 + C47268) * C51016 +
                     (C44220 * C1101 + C45470 + C45470 + C51054 * C1109 +
                      C44222 * C3170 + C45469 + C45469 + C51055 * C3176 +
                      C44224 * C3604 + C45468 + C45468 + C44219 * C3608) *
                         C50928) *
                        C50734 * C50795 * C277) *
                       C278 +
                   (((C44477 + C44476 + C44475) * C51016 +
                     (C44478 + C44479 + C44480) * C50928) *
                        C50734 * C50795 * C276 -
                    ((C44475 + C44476 + C44477) * C50928 +
                     (C44280 + C44279 + C44278) * C51016) *
                        C50734 * C50795 * C275 -
                    ((C44224 * C3603 + C45465 + C45465 + C44219 * C3607 +
                      C44222 * C3171 + C45466 + C45466 + C51055 * C3177 +
                      C44220 * C1100 + C45467 + C45467 + C51054 * C1108) *
                         C50928 +
                     (C44480 + C44479 + C44478) * C51016) *
                        C50734 * C50795 * C277) *
                       C50766)) /
                     (p * q * std::sqrt(p + q));
    d2ee[170] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C44220 * C119 + C44227 + C44227 + C51054 * C133 +
                      C44222 * C460 + C44228 + C44228 + C51055 * C480 +
                      C44224 * C461 + C44229 + C44229 + C44219 * C481) *
                         C51016 +
                     (C47265 + C47266 + C47267) * C50928) *
                        C50734 * C50795 * C51048 -
                    ((C47268 + C47269 + C47270) * C50928 +
                     (C47267 + C47266 + C47265) * C51016) *
                        C50734 * C50795 * C51049 +
                    ((C47270 + C47269 + C47268) * C51016 +
                     (C48177 + C48178 + C48179) * C50928) *
                        C50734 * C50795 * C1328) *
                       C50995 +
                   (((C44477 + C44476 + C44475) * C51016 +
                     (C44478 + C44479 + C44480) * C50928) *
                        C50734 * C50795 * C51049 -
                    ((C44475 + C44476 + C44477) * C50928 +
                     (C44280 + C44279 + C44278) * C51016) *
                        C50734 * C50795 * C51048 -
                    ((C44224 * C3603 + C45465 + C45465 + C44219 * C3607 +
                      C44222 * C3171 + C45466 + C45466 + C51055 * C3177 +
                      C44220 * C1100 + C45467 + C45467 + C51054 * C1108) *
                         C50928 +
                     (C44480 + C44479 + C44478) * C51016) *
                        C50734 * C50795 * C1328) *
                       C50766)) /
                 (p * q * std::sqrt(p + q));
    d2ee[171] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C44220 * C119 + C44227 + C44227 + C51054 * C133 +
                      C44222 * C460 + C44228 + C44228 + C51055 * C480 +
                      C44224 * C461 + C44229 + C44229 + C44219 * C481) *
                         C51016 +
                     (C47265 + C47266 + C47267) * C50928) *
                        C50734 * C51004 -
                    ((C47915 + C47916 + C47917) * C50928 +
                     (C44224 * C1846 + C44636 + C44636 + C44219 * C1854 +
                      C44222 * C461 + C44637 + C44637 + C51055 * C481 +
                      C44220 * C460 + C44638 + C44638 + C51054 * C480) *
                         C51016) *
                        C50734 * C50859) *
                       C51048 +
                   (((C47917 + C47916 + C47915) * C51016 +
                     (C48845 + C48846 + C48847) * C50928) *
                        C50734 * C50859 -
                    ((C47268 + C47269 + C47270) * C50928 +
                     (C47267 + C47266 + C47265) * C51016) *
                        C50734 * C51004) *
                       C51049 +
                   (((C47270 + C47269 + C47268) * C51016 +
                     (C48177 + C48178 + C48179) * C50928) *
                        C50734 * C51004 -
                    ((C44224 * C21214 + C48836 + C48836 + C44219 * C21216 +
                      C44222 * C3604 + C48837 + C48837 + C51055 * C3608 +
                      C44220 * C3170 + C48838 + C48838 + C51054 * C3176) *
                         C50928 +
                     (C48847 + C48846 + C48845) * C51016) *
                        C50734 * C50859) *
                       C1328) *
                  C50760) /
                 (p * q * std::sqrt(p + q));
    d2ee[172] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C44220 * C119 + C44227 + C44227 + C51054 * C133 +
                     C44222 * C460 + C44228 + C44228 + C51055 * C480 +
                     C44224 * C461 + C44229 + C44229 + C44219 * C481) *
                        C51016 +
                    (C47265 + C47266 + C47267) * C50928) *
                       C50734 * C50795 * C1093 -
                   ((C47268 + C47269 + C47270) * C50928 +
                    (C47267 + C47266 + C47265) * C51016) *
                       C50734 * C50795 * C1094 +
                   ((C47270 + C47269 + C47268) * C51016 +
                    (C48177 + C48178 + C48179) * C50928) *
                       C50734 * C50795 * C1095 -
                   ((C44224 * C20608 + C48168 + C48168 + C44219 * C20610 +
                     C44222 * C4108 + C48169 + C48169 + C51055 * C4112 +
                     C44220 * C2446 + C48170 + C48170 + C51054 * C2452) *
                        C50928 +
                    (C48179 + C48178 + C48177) * C51016) *
                       C50734 * C50795 * C1096) *
                  C50760) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C44220 * C119 + C44227 + C44227 + C51054 * C133 +
                      C44222 * C460 + C44228 + C44228 + C51055 * C480 +
                      C44224 * C461 + C44229 + C44229 + C44219 * C481) *
                         C51016 +
                     (C47265 + C47266 + C47267) * C50928) *
                        C50734 * C50795 * C1022 -
                    ((C47268 + C47269 + C47270) * C50928 +
                     (C47267 + C47266 + C47265) * C51016) *
                        C50734 * C50795 * C50831) *
                       C1024 +
                   (((C44477 + C44476 + C44475) * C51016 +
                     (C44478 + C44479 + C44480) * C50928) *
                        C50734 * C50795 * C50831 -
                    ((C44475 + C44476 + C44477) * C50928 +
                     (C44280 + C44279 + C44278) * C51016) *
                        C50734 * C50795 * C1022) *
                       C1025 +
                   (((C44283 + C44282 + C44281) * C51016 +
                     (C44836 + C44837 + C44838) * C50928) *
                        C50734 * C50795 * C1022 -
                    ((C44224 * C2642 + C44460 + C44460 + C44219 * C2648 +
                      C44222 * C1560 + C44461 + C44461 + C51055 * C1568 +
                      C44220 * C286 + C44462 + C44462 + C51054 * C306) *
                         C50928 +
                     (C44838 + C44837 + C44836) * C51016) *
                        C50734 * C50795 * C50831) *
                       C1026)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C44220 * C119 + C44227 + C44227 + C51054 * C133 +
                      C44222 * C460 + C44228 + C44228 + C51055 * C480 +
                      C44224 * C461 + C44229 + C44229 + C44219 * C481) *
                         C51016 +
                     (C47265 + C47266 + C47267) * C50928) *
                        C50734 * C454 -
                    ((C47915 + C47916 + C47917) * C50928 +
                     (C44224 * C1846 + C44636 + C44636 + C44219 * C1854 +
                      C44222 * C461 + C44637 + C44637 + C51055 * C481 +
                      C44220 * C460 + C44638 + C44638 + C51054 * C480) *
                         C51016) *
                        C50734 * C455 +
                    ((C44220 * C461 + C44639 + C44639 + C51054 * C481 +
                      C44222 * C1846 + C44640 + C44640 + C51055 * C1854 +
                      C44224 * C5519 + C44641 + C44641 + C44219 * C5525) *
                         C51016 +
                     (C48341 + C48342 + C48343) * C50928) *
                        C50734 * C456) *
                       C1022 +
                   (((C47917 + C47916 + C47915) * C51016 +
                     (C44220 * C1562 + C46114 + C46114 + C51054 * C1570 +
                      C44222 * C2640 + C46113 + C46113 + C51055 * C2646 +
                      C44224 * C4512 + C46112 + C46112 + C44219 * C4520) *
                         C50928) *
                        C50734 * C455 -
                    ((C47268 + C47269 + C47270) * C50928 +
                     (C47267 + C47266 + C47265) * C51016) *
                        C50734 * C454 -
                    ((C44224 * C22873 + C48332 + C48332 + C44219 * C22875 +
                      C44222 * C4512 + C48333 + C48333 + C51055 * C4520 +
                      C44220 * C2640 + C48334 + C48334 + C51054 * C2646) *
                         C50928 +
                     (C48343 + C48342 + C48341) * C51016) *
                        C50734 * C456) *
                       C50831) *
                  C50760) /
                     (p * q * std::sqrt(p + q));
    d2ee[173] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C44220 * C119 + C44227 + C44227 + C51054 * C133 +
                       C44222 * C460 + C44228 + C44228 + C51055 * C480 +
                       C44224 * C461 + C44229 + C44229 + C44219 * C481) *
                          C51016 +
                      (C47265 + C47266 + C47267) * C50928) *
                         C50734 * C51004 -
                     ((C47915 + C47916 + C47917) * C50928 +
                      (C44224 * C1846 + C44636 + C44636 + C44219 * C1854 +
                       C44222 * C461 + C44637 + C44637 + C51055 * C481 +
                       C44220 * C460 + C44638 + C44638 + C51054 * C480) *
                          C51016) *
                         C50734 * C50859) *
                        C1022 +
                    (((C47917 + C47916 + C47915) * C51016 +
                      (C44220 * C1562 + C46114 + C46114 + C51054 * C1570 +
                       C44222 * C2640 + C46113 + C46113 + C51055 * C2646 +
                       C44224 * C4512 + C46112 + C46112 + C44219 * C4520) *
                          C50928) *
                         C50734 * C50859 -
                     ((C47268 + C47269 + C47270) * C50928 +
                      (C47267 + C47266 + C47265) * C51016) *
                         C50734 * C51004) *
                        C50831) *
                       C50995 +
                   ((((C44671 + C44670 + C44669) * C51016 +
                      (C45218 + C45219 + C45220) * C50928) *
                         C50734 * C50859 -
                     ((C44475 + C44476 + C44477) * C50928 +
                      (C44280 + C44279 + C44278) * C51016) *
                         C50734 * C51004) *
                        C1022 +
                    (((C44477 + C44476 + C44475) * C51016 +
                      (C44478 + C44479 + C44480) * C50928) *
                         C50734 * C51004 -
                     ((C44224 * C4510 + C46109 + C46109 + C44219 * C4518 +
                       C44222 * C2641 + C46110 + C46110 + C51055 * C2647 +
                       C44220 * C1561 + C46111 + C46111 + C51054 * C1569) *
                          C50928 +
                      (C45220 + C45219 + C45218) * C51016) *
                         C50734 * C50859) *
                        C50831) *
                       C50766)) /
                 (p * q * std::sqrt(p + q));
    d2ee[174] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C44220 * C119 + C44227 + C44227 + C51054 * C133 +
                      C44222 * C460 + C44228 + C44228 + C51055 * C480 +
                      C44224 * C461 + C44229 + C44229 + C44219 * C481) *
                         C51016 +
                     (C47265 + C47266 + C47267) * C50928) *
                        C50734 * C50795 * C1022 -
                    ((C47268 + C47269 + C47270) * C50928 +
                     (C47267 + C47266 + C47265) * C51016) *
                        C50734 * C50795 * C50831) *
                       C1024 +
                   (((C44477 + C44476 + C44475) * C51016 +
                     (C44478 + C44479 + C44480) * C50928) *
                        C50734 * C50795 * C50831 -
                    ((C44475 + C44476 + C44477) * C50928 +
                     (C44280 + C44279 + C44278) * C51016) *
                        C50734 * C50795 * C1022) *
                       C1025 +
                   (((C44283 + C44282 + C44281) * C51016 +
                     (C44836 + C44837 + C44838) * C50928) *
                        C50734 * C50795 * C1022 -
                    ((C44224 * C2642 + C44460 + C44460 + C44219 * C2648 +
                      C44222 * C1560 + C44461 + C44461 + C51055 * C1568 +
                      C44220 * C286 + C44462 + C44462 + C51054 * C306) *
                         C50928 +
                     (C44838 + C44837 + C44836) * C51016) *
                        C50734 * C50795 * C50831) *
                       C1026)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((C44220 * C119 + C44227 + C44227 + C51054 * C133 +
                     C44222 * C460 + C44228 + C44228 + C51055 * C480 +
                     C44224 * C461 + C44229 + C44229 + C44219 * C481) *
                        C51016 +
                    (C47265 + C47266 + C47267) * C50928) *
                       C50734 * C50795 * C1093 -
                   ((C47268 + C47269 + C47270) * C50928 +
                    (C47267 + C47266 + C47265) * C51016) *
                       C50734 * C50795 * C1094 +
                   ((C47270 + C47269 + C47268) * C51016 +
                    (C48177 + C48178 + C48179) * C50928) *
                       C50734 * C50795 * C1095 -
                   ((C44224 * C20608 + C48168 + C48168 + C44219 * C20610 +
                     C44222 * C4108 + C48169 + C48169 + C51055 * C4112 +
                     C44220 * C2446 + C48170 + C48170 + C51054 * C2452) *
                        C50928 +
                    (C48179 + C48178 + C48177) * C51016) *
                       C50734 * C50795 * C1096) *
                  C50760) /
                     (p * q * std::sqrt(p + q));
    d2ee[175] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C44220 * C119 + C44227 + C44227 + C51054 * C133 +
                       C44222 * C460 + C44228 + C44228 + C51055 * C480 +
                       C44224 * C461 + C44229 + C44229 + C44219 * C481) *
                          C51016 +
                      (C47265 + C47266 + C47267) * C50928) *
                         C50734 * C1673 -
                     ((C47915 + C47916 + C47917) * C50928 +
                      (C44224 * C1846 + C44636 + C44636 + C44219 * C1854 +
                       C44222 * C461 + C44637 + C44637 + C51055 * C481 +
                       C44220 * C460 + C44638 + C44638 + C51054 * C480) *
                          C51016) *
                         C50734 * C50859) *
                        C51003 +
                    (((C47917 + C47916 + C47915) * C51016 +
                      (C48845 + C48846 + C48847) * C50928) *
                         C50734 * C50859 -
                     ((C47268 + C47269 + C47270) * C50928 +
                      (C47267 + C47266 + C47265) * C51016) *
                         C50734 * C1673) *
                        C50831) *
                       C50995 +
                   ((((C44671 + C44670 + C44669) * C51016 +
                      (C45218 + C45219 + C45220) * C50928) *
                         C50734 * C50859 -
                     ((C44475 + C44476 + C44477) * C50928 +
                      (C44280 + C44279 + C44278) * C51016) *
                         C50734 * C1673) *
                        C51003 +
                    (((C44477 + C44476 + C44475) * C51016 +
                      (C44478 + C44479 + C44480) * C50928) *
                         C50734 * C1673 -
                     ((C44224 * C4510 + C46109 + C46109 + C44219 * C4518 +
                       C44222 * C2641 + C46110 + C46110 + C51055 * C2647 +
                       C44220 * C1561 + C46111 + C46111 + C51054 * C1569) *
                          C50928 +
                      (C45220 + C45219 + C45218) * C51016) *
                         C50734 * C50859) *
                        C50831) *
                       C50766)) /
                 (p * q * std::sqrt(p + q));
    d2ee[176] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C44220 * C119 + C44227 + C44227 + C51054 * C133 +
                      C44222 * C460 + C44228 + C44228 + C51055 * C480 +
                      C44224 * C461 + C44229 + C44229 + C44219 * C481) *
                         C51016 +
                     (C47265 + C47266 + C47267) * C50928) *
                        C50734 * C51050 -
                    ((C47915 + C47916 + C47917) * C50928 +
                     (C44224 * C1846 + C44636 + C44636 + C44219 * C1854 +
                      C44222 * C461 + C44637 + C44637 + C51055 * C481 +
                      C44220 * C460 + C44638 + C44638 + C51054 * C480) *
                         C51016) *
                        C50734 * C51051 +
                    ((C44220 * C461 + C44639 + C44639 + C51054 * C481 +
                      C44222 * C1846 + C44640 + C44640 + C51055 * C1854 +
                      C44224 * C5519 + C44641 + C44641 + C44219 * C5525) *
                         C51016 +
                     (C48341 + C48342 + C48343) * C50928) *
                        C50734 * C2089) *
                       C51003 +
                   (((C47917 + C47916 + C47915) * C51016 +
                     (C48845 + C48846 + C48847) * C50928) *
                        C50734 * C51051 -
                    ((C47268 + C47269 + C47270) * C50928 +
                     (C47267 + C47266 + C47265) * C51016) *
                        C50734 * C51050 -
                    ((C44224 * C22873 + C48332 + C48332 + C44219 * C22875 +
                      C44222 * C4512 + C48333 + C48333 + C51055 * C4520 +
                      C44220 * C2640 + C48334 + C48334 + C51054 * C2646) *
                         C50928 +
                     (C48343 + C48342 + C48341) * C51016) *
                        C50734 * C2089) *
                       C50831) *
                  C50760) /
                 (p * q * std::sqrt(p + q));
    d2ee[177] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C44220 * C119 + C44227 + C44227 + C51054 * C133 +
                      C44222 * C460 + C44228 + C44228 + C51055 * C480 +
                      C44224 * C461 + C44229 + C44229 + C44219 * C481) *
                         C51016 +
                     (C47265 + C47266 + C47267) * C50928) *
                        C50734 * C1673 -
                    ((C47915 + C47916 + C47917) * C50928 +
                     (C44224 * C1846 + C44636 + C44636 + C44219 * C1854 +
                      C44222 * C461 + C44637 + C44637 + C51055 * C481 +
                      C44220 * C460 + C44638 + C44638 + C51054 * C480) *
                         C51016) *
                        C50734 * C50859) *
                       C275 +
                   (((C47917 + C47916 + C47915) * C51016 +
                     (C48845 + C48846 + C48847) * C50928) *
                        C50734 * C50859 -
                    ((C47268 + C47269 + C47270) * C50928 +
                     (C47267 + C47266 + C47265) * C51016) *
                        C50734 * C1673) *
                       C276 +
                   (((C47270 + C47269 + C47268) * C51016 +
                     (C48177 + C48178 + C48179) * C50928) *
                        C50734 * C1673 -
                    ((C44224 * C21214 + C48836 + C48836 + C44219 * C21216 +
                      C44222 * C3604 + C48837 + C48837 + C51055 * C3608 +
                      C44220 * C3170 + C48838 + C48838 + C51054 * C3176) *
                         C50928 +
                     (C48847 + C48846 + C48845) * C51016) *
                        C50734 * C50859) *
                       C277) *
                  C50760) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C44220 * C119 + C44227 + C44227 + C51054 * C133 +
                      C44222 * C460 + C44228 + C44228 + C51055 * C480 +
                      C44224 * C461 + C44229 + C44229 + C44219 * C481) *
                         C51016 +
                     (C47265 + C47266 + C47267) * C50928) *
                        C50734 * C1673 -
                    ((C47915 + C47916 + C47917) * C50928 +
                     (C44224 * C1846 + C44636 + C44636 + C44219 * C1854 +
                      C44222 * C461 + C44637 + C44637 + C51055 * C481 +
                      C44220 * C460 + C44638 + C44638 + C51054 * C480) *
                         C51016) *
                        C50734 * C50859) *
                       C50779 * C1024 +
                   (((C44671 + C44670 + C44669) * C51016 +
                     (C45218 + C45219 + C45220) * C50928) *
                        C50734 * C50859 -
                    ((C44475 + C44476 + C44477) * C50928 +
                     (C44280 + C44279 + C44278) * C51016) *
                        C50734 * C1673) *
                       C50779 * C1025 +
                   (((C44283 + C44282 + C44281) * C51016 +
                     (C44836 + C44837 + C44838) * C50928) *
                        C50734 * C1673 -
                    ((C44224 * C6098 + C45209 + C45209 + C44219 * C6100 +
                      C44222 * C1213 + C45210 + C45210 + C51055 * C1221 +
                      C44220 * C888 + C45211 + C45211 + C51054 * C898) *
                         C50928 +
                     (C45002 + C45001 + C45000) * C51016) *
                        C50734 * C50859) *
                       C50779 * C1026)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((C44220 * C119 + C44227 + C44227 + C51054 * C133 +
                     C44222 * C460 + C44228 + C44228 + C51055 * C480 +
                     C44224 * C461 + C44229 + C44229 + C44219 * C481) *
                        C51016 +
                    (C47265 + C47266 + C47267) * C50928) *
                       C50734 * C1839 -
                   ((C47915 + C47916 + C47917) * C50928 +
                    (C44224 * C1846 + C44636 + C44636 + C44219 * C1854 +
                     C44222 * C461 + C44637 + C44637 + C51055 * C481 +
                     C44220 * C460 + C44638 + C44638 + C51054 * C480) *
                        C51016) *
                       C50734 * C1840 +
                   ((C44220 * C461 + C44639 + C44639 + C51054 * C481 +
                     C44222 * C1846 + C44640 + C44640 + C51055 * C1854 +
                     C44224 * C5519 + C44641 + C44641 + C44219 * C5525) *
                        C51016 +
                    (C48341 + C48342 + C48343) * C50928) *
                       C50734 * C1841 -
                   ((C44224 * C23788 + C49238 + C49238 + C44219 * C23790 +
                     C44222 * C6522 + C49239 + C49239 + C51055 * C6526 +
                     C44220 * C4513 + C49240 + C49240 + C51054 * C4521) *
                        C50928 +
                    (C44224 * C7416 + C46508 + C46508 + C44219 * C7420 +
                     C44222 * C5519 + C46509 + C46509 + C51055 * C5525 +
                     C44220 * C1846 + C46510 + C46510 + C51054 * C1854) *
                        C51016) *
                       C50734 * C1842) *
                  C50779 * C50760) /
                     (p * q * std::sqrt(p + q));
    d2ee[178] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C44220 * C119 + C44227 + C44227 + C51054 * C133 +
                      C44222 * C460 + C44228 + C44228 + C51055 * C480 +
                      C44224 * C461 + C44229 + C44229 + C44219 * C481) *
                         C51016 +
                     (C47265 + C47266 + C47267) * C50928) *
                        C50734 * C51050 -
                    ((C47915 + C47916 + C47917) * C50928 +
                     (C44224 * C1846 + C44636 + C44636 + C44219 * C1854 +
                      C44222 * C461 + C44637 + C44637 + C51055 * C481 +
                      C44220 * C460 + C44638 + C44638 + C51054 * C480) *
                         C51016) *
                        C50734 * C51051 +
                    ((C44220 * C461 + C44639 + C44639 + C51054 * C481 +
                      C44222 * C1846 + C44640 + C44640 + C51055 * C1854 +
                      C44224 * C5519 + C44641 + C44641 + C44219 * C5525) *
                         C51016 +
                     (C48341 + C48342 + C48343) * C50928) *
                        C50734 * C2089) *
                       C50779 * C50995 +
                   (((C44671 + C44670 + C44669) * C51016 +
                     (C45218 + C45219 + C45220) * C50928) *
                        C50734 * C51051 -
                    ((C44475 + C44476 + C44477) * C50928 +
                     (C44280 + C44279 + C44278) * C51016) *
                        C50734 * C51050 -
                    ((C44224 * C6521 + C45617 + C45617 + C44219 * C6525 +
                      C44222 * C4511 + C45618 + C45618 + C51055 * C4519 +
                      C44220 * C1214 + C45619 + C45619 + C51054 * C1222) *
                         C50928 +
                     (C44674 + C44673 + C44672) * C51016) *
                        C50734 * C2089) *
                       C50779 * C50766)) /
                 (p * q * std::sqrt(p + q));
    d2ee[179] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C44220 * C119 + C44227 + C44227 + C51054 * C133 +
                      C44222 * C460 + C44228 + C44228 + C51055 * C480 +
                      C44224 * C461 + C44229 + C44229 + C44219 * C481) *
                         C51016 +
                     (C47265 + C47266 + C47267) * C50928) *
                        C50734 * C1673 -
                    ((C47915 + C47916 + C47917) * C50928 +
                     (C44224 * C1846 + C44636 + C44636 + C44219 * C1854 +
                      C44222 * C461 + C44637 + C44637 + C51055 * C481 +
                      C44220 * C460 + C44638 + C44638 + C51054 * C480) *
                         C51016) *
                        C50734 * C50859) *
                       C50779 * C1024 +
                   (((C44671 + C44670 + C44669) * C51016 +
                     (C45218 + C45219 + C45220) * C50928) *
                        C50734 * C50859 -
                    ((C44475 + C44476 + C44477) * C50928 +
                     (C44280 + C44279 + C44278) * C51016) *
                        C50734 * C1673) *
                       C50779 * C1025 +
                   (((C44283 + C44282 + C44281) * C51016 +
                     (C44836 + C44837 + C44838) * C50928) *
                        C50734 * C1673 -
                    ((C44224 * C6098 + C45209 + C45209 + C44219 * C6100 +
                      C44222 * C1213 + C45210 + C45210 + C51055 * C1221 +
                      C44220 * C888 + C45211 + C45211 + C51054 * C898) *
                         C50928 +
                     (C45002 + C45001 + C45000) * C51016) *
                        C50734 * C50859) *
                       C50779 * C1026)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C44220 * C119 + C44227 + C44227 + C51054 * C133 +
                      C44222 * C460 + C44228 + C44228 + C51055 * C480 +
                      C44224 * C461 + C44229 + C44229 + C44219 * C481) *
                         C51016 +
                     (C47265 + C47266 + C47267) * C50928) *
                        C50734 * C1673 -
                    ((C47915 + C47916 + C47917) * C50928 +
                     (C44224 * C1846 + C44636 + C44636 + C44219 * C1854 +
                      C44222 * C461 + C44637 + C44637 + C51055 * C481 +
                      C44220 * C460 + C44638 + C44638 + C51054 * C480) *
                         C51016) *
                        C50734 * C50859) *
                       C275 +
                   (((C47917 + C47916 + C47915) * C51016 +
                     (C48845 + C48846 + C48847) * C50928) *
                        C50734 * C50859 -
                    ((C47268 + C47269 + C47270) * C50928 +
                     (C47267 + C47266 + C47265) * C51016) *
                        C50734 * C1673) *
                       C276 +
                   (((C47270 + C47269 + C47268) * C51016 +
                     (C48177 + C48178 + C48179) * C50928) *
                        C50734 * C1673 -
                    ((C44224 * C21214 + C48836 + C48836 + C44219 * C21216 +
                      C44222 * C3604 + C48837 + C48837 + C51055 * C3608 +
                      C44220 * C3170 + C48838 + C48838 + C51054 * C3176) *
                         C50928 +
                     (C48847 + C48846 + C48845) * C51016) *
                        C50734 * C50859) *
                       C277) *
                  C50760) /
                     (p * q * std::sqrt(p + q));
    d2ee[180] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
             C33210 + C33210 + C50956 * C480) *
                C2286 +
            (C36268 + C36269) * C2287 + C36276 * C2288) *
               C50734 * C50795 * C51003 -
           ((C36272 + C36273) * C2288 + (C36271 + C36270) * C2287 +
            (C36269 + C36268) * C2286) *
               C50734 * C50795 * C50831) *
              C51046 +
          (((C33462 + C33461) * C2286 + (C33463 + C33464) * C2287 +
            (C36274 + C36275) * C2288) *
               C50734 * C50795 * C50831 -
           (C36249 * C2288 + (C33461 + C33462) * C2287 +
            (C33254 + C33253) * C2286) *
               C50734 * C50795 * C51003) *
              C51047 +
          ((C33261 * C2286 + (C33460 + C33459) * C2287 +
            (C33465 + C33466) * C2288) *
               C50734 * C50795 * C51003 -
           ((C33206 * C3172 + C34455 + C34455 + C50956 * C3178 +
             C33204 * C1099 + C34456 + C34456 + C33202 * C1107) *
                C2288 +
            (C33466 + C33465) * C2287 + C33815 * C2286) *
               C50734 * C50795 * C50831) *
              C635)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
             C33210 + C33210 + C50956 * C480) *
                C50877 * C17175 +
            (C33253 + C33254) * C50877 * C17176 + C33263 * C17177) *
               C50795 * C51003 -
           (C33822 * C17177 + (C33461 + C33462) * C50877 * C17176 +
            (C33206 * C886 + C33423 + C33423 + C50956 * C896 + C33204 * C283 +
             C33424 + C33424 + C33202 * C303) *
                C50877 * C17175) *
               C50795 * C50831) *
              C51046 +
          (((C33462 + C33461) * C50877 * C17175 +
            (C33460 + C33459) * C50877 * C17176 +
            (C33827 + C33828) * C50877 * C17177) *
               C50795 * C50831 -
           (C33264 * C17177 + (C33256 + C33255) * C50877 * C17176 +
            (C33254 + C33253) * C50877 * C17175) *
               C50795 * C51003) *
              C51047 +
          ((C33263 * C17175 + (C33258 + C33257) * C50877 * C17176 +
            (C33259 + C33260) * C50877 * C17177) *
               C50795 * C51003 -
           ((C33206 * C890 + C33820 + C33820 + C50956 * C900 + C33204 * C288 +
             C33821 + C33821 + C33202 * C308) *
                C50877 * C17177 +
            (C33828 + C33827) * C50877 * C17176 + C33822 * C17175) *
               C50795 * C50831) *
              C635)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C38820 * C119 + C38829 + C38829 + C38816 * C133 + C38822 * C460 +
            C38830 + C38830 + C38817 * C480 + C38824 * C461 + C38831 + C38831 +
            C38818 * C481 + C38826 * C1846 + C38832 + C38832 + C38819 * C1854) *
               C50877 * C50734 * C50795 * C51003 -
           (C38826 * C4513 + C38943 + C38943 + C38819 * C4521 + C38824 * C1215 +
            C38944 + C38944 + C38818 * C1223 + C38822 * C886 + C38945 + C38945 +
            C38817 * C896 + C38820 * C283 + C38946 + C38946 + C38816 * C303) *
               C50877 * C50734 * C50795 * C50831) *
              C51046 +
          ((C38820 * C282 + C38951 + C38951 + C38816 * C302 + C38822 * C887 +
            C38952 + C38952 + C38817 * C897 + C38824 * C1214 + C38953 + C38953 +
            C38818 * C1222 + C38826 * C4511 + C38954 + C38954 +
            C38819 * C4519) *
               C50877 * C50734 * C50795 * C50831 -
           (C38826 * C1845 + C38833 + C38833 + C38819 * C1853 + C38824 * C462 +
            C38834 + C38834 + C38818 * C482 + C38822 * C459 + C38835 + C38835 +
            C38817 * C479 + C38820 * C120 + C38836 + C38836 + C38816 * C134) *
               C50877 * C50734 * C50795 * C51003) *
              C51047 +
          ((C38820 * C121 + C38837 + C38837 + C38816 * C135 + C38822 * C458 +
            C38838 + C38838 + C38817 * C478 + C38824 * C463 + C38839 + C38839 +
            C38818 * C483 + C38826 * C1844 + C38840 + C38840 + C38819 * C1852) *
               C50877 * C50734 * C50795 * C51003 -
           (C38826 * C6098 + C39171 + C39171 + C38819 * C6100 + C38824 * C1213 +
            C39172 + C39172 + C38818 * C1221 + C38822 * C888 + C39173 + C39173 +
            C38817 * C898 + C38820 * C281 + C39174 + C39174 + C38816 * C301) *
               C50877 * C50734 * C50795 * C50831) *
              C635)) /
            (p * q * std::sqrt(p + q));
    d2ee[181] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
              C33210 + C33210 + C50956 * C480) *
                 C2286 +
             (C36268 + C36269) * C2287 + C36276 * C2288) *
                C50734 * C51004 -
            ((C36941 + C36942) * C2288 + (C36943 + C36944) * C2287 +
             (C33206 * C461 + C33625 + C33625 + C50956 * C481 + C33204 * C460 +
              C33626 + C33626 + C33202 * C480) *
                 C2286) *
                C50734 * C50859) *
               C51003 +
           (((C36944 + C36943) * C2286 + (C36942 + C36941) * C2287 +
             (C33204 * C3170 + C36921 + C36921 + C33202 * C3176 +
              C33206 * C3604 + C36922 + C36922 + C50956 * C3608) *
                 C2288) *
                C50734 * C50859 -
            ((C36272 + C36273) * C2288 + (C36271 + C36270) * C2287 +
             (C36269 + C36268) * C2286) *
                C50734 * C51004) *
               C50831) *
              C278 +
          ((((C33664 + C33663) * C2286 + (C34207 + C34208) * C2287 +
             (C36945 + C36946) * C2288) *
                C50734 * C50859 -
            (C36249 * C2288 + (C33461 + C33462) * C2287 +
             (C33254 + C33253) * C2286) *
                C50734 * C51004) *
               C51003 +
           (((C33462 + C33461) * C2286 + (C33463 + C33464) * C2287 +
             (C36274 + C36275) * C2288) *
                C50734 * C51004 -
            ((C33206 * C3603 + C36927 + C36927 + C50956 * C3607 +
              C33204 * C3171 + C36928 + C36928 + C33202 * C3177) *
                 C2288 +
             (C36946 + C36945) * C2287 + (C34208 + C34207) * C2286) *
                C50734 * C50859) *
               C50831) *
              C50766)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
              C33210 + C33210 + C50956 * C480) *
                 C50877 * C17175 +
             (C33253 + C33254) * C50877 * C17176 + C33263 * C17177) *
                C51004 -
            (C33982 * C17177 + (C33663 + C33664) * C50877 * C17176 +
             (C33206 * C461 + C33625 + C33625 + C50956 * C481 + C33204 * C460 +
              C33626 + C33626 + C33202 * C480) *
                 C50877 * C17175) *
                C50859) *
               C51003 +
           (((C33204 * C886 + C34183 + C34183 + C33202 * C896 + C33206 * C1215 +
              C34184 + C34184 + C50956 * C1223) *
                 C50877 * C17175 +
             (C34207 + C34208) * C50877 * C17176 +
             (C34209 + C34210) * C50877 * C17177) *
                C50859 -
            (C33822 * C17177 + (C33461 + C33462) * C50877 * C17176 +
             (C33206 * C886 + C33423 + C33423 + C50956 * C896 + C33204 * C283 +
              C33424 + C33424 + C33202 * C303) *
                 C50877 * C17175) *
                C51004) *
               C50831) *
              C278 +
          ((((C33664 + C33663) * C50877 * C17175 +
             (C33662 + C33661) * C50877 * C17176 +
             (C33987 + C33988) * C50877 * C17177) *
                C50859 -
            (C33264 * C17177 + (C33256 + C33255) * C50877 * C17176 +
             (C33254 + C33253) * C50877 * C17175) *
                C51004) *
               C51003 +
           (((C33462 + C33461) * C50877 * C17175 +
             (C33460 + C33459) * C50877 * C17176 +
             (C33827 + C33828) * C50877 * C17177) *
                C51004 -
            ((C33206 * C1212 + C34197 + C34197 + C50956 * C1220 +
              C33204 * C889 + C34198 + C34198 + C33202 * C899) *
                 C50877 * C17177 +
             (C34210 + C34209) * C50877 * C17176 +
             (C34208 + C34207) * C50877 * C17175) *
                C50859) *
               C50831) *
              C50766)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C38820 * C119 + C38829 + C38829 + C38816 * C133 + C38822 * C460 +
             C38830 + C38830 + C38817 * C480 + C38824 * C461 + C38831 + C38831 +
             C38818 * C481 + C38826 * C1846 + C38832 + C38832 +
             C38819 * C1854) *
                C50877 * C50734 * C51004 -
            (C38826 * C5519 + C39057 + C39057 + C38819 * C5525 +
             C38824 * C1846 + C39058 + C39058 + C38818 * C1854 + C38822 * C461 +
             C39059 + C39059 + C38817 * C481 + C38820 * C460 + C39060 + C39060 +
             C38816 * C480) *
                C50877 * C50734 * C50859) *
               C51003 +
           ((C38820 * C886 + C39407 + C39407 + C38816 * C896 + C38822 * C1215 +
             C39408 + C39408 + C38817 * C1223 + C38824 * C4513 + C39409 +
             C39409 + C38818 * C4521 + C38826 * C6522 + C39410 + C39410 +
             C38819 * C6526) *
                C50877 * C50734 * C50859 -
            (C38826 * C4513 + C38943 + C38943 + C38819 * C4521 +
             C38824 * C1215 + C38944 + C38944 + C38818 * C1223 + C38822 * C886 +
             C38945 + C38945 + C38817 * C896 + C38820 * C283 + C38946 + C38946 +
             C38816 * C303) *
                C50877 * C50734 * C51004) *
               C50831) *
              C278 +
          (((C38820 * C459 + C39065 + C39065 + C38816 * C479 + C38822 * C462 +
             C39066 + C39066 + C38817 * C482 + C38824 * C1845 + C39067 +
             C39067 + C38818 * C1853 + C38826 * C5520 + C39068 + C39068 +
             C38819 * C5526) *
                C50877 * C50734 * C50859 -
            (C38826 * C1845 + C38833 + C38833 + C38819 * C1853 + C38824 * C462 +
             C38834 + C38834 + C38818 * C482 + C38822 * C459 + C38835 + C38835 +
             C38817 * C479 + C38820 * C120 + C38836 + C38836 + C38816 * C134) *
                C50877 * C50734 * C51004) *
               C51003 +
           ((C38820 * C282 + C38951 + C38951 + C38816 * C302 + C38822 * C887 +
             C38952 + C38952 + C38817 * C897 + C38824 * C1214 + C38953 +
             C38953 + C38818 * C1222 + C38826 * C4511 + C38954 + C38954 +
             C38819 * C4519) *
                C50877 * C50734 * C51004 -
            (C38826 * C6521 + C39411 + C39411 + C38819 * C6525 +
             C38824 * C4511 + C39412 + C39412 + C38818 * C4519 +
             C38822 * C1214 + C39413 + C39413 + C38817 * C1222 + C38820 * C887 +
             C39414 + C39414 + C38816 * C897) *
                C50877 * C50734 * C50859) *
               C50831) *
              C50766)) /
            (p * q * std::sqrt(p + q));
    d2ee[182] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                   C50877 * C17175 +
               (C33253 + C33254) * C50877 * C17176 + C33263 * C17177) *
                  C50795 * C50779 * C113 -
              (C33264 * C17177 + (C33256 + C33255) * C50877 * C17176 +
               (C33254 + C33253) * C50877 * C17175) *
                  C50795 * C50779 * C114 +
              (C33263 * C17175 + (C33258 + C33257) * C50877 * C17176 +
               (C33259 + C33260) * C50877 * C17177) *
                  C50795 * C50779 * C115 -
              ((C33206 * C746 + C33235 + C33235 + C50956 * C748 +
                C33204 * C124 + C33236 + C33236 + C33202 * C138) *
                   C50877 * C17177 +
               (C33260 + C33259) * C50877 * C17176 + C33264 * C17175) *
                  C50795 * C50779 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                 C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                    C50877 * C17175 +
                (C33253 + C33254) * C50877 * C17176 + C33263 * C17177) *
                   C50795 * C275 -
               ((C33459 + C33460) * C50877 * C17177 +
                (C33461 + C33462) * C50877 * C17176 +
                (C33206 * C886 + C33423 + C33423 + C50956 * C896 +
                 C33204 * C283 + C33424 + C33424 + C33202 * C303) *
                    C50877 * C17175) *
                   C50795 * C276 +
               ((C33204 * C284 + C33425 + C33425 + C33202 * C304 +
                 C33206 * C1562 + C33426 + C33426 + C50956 * C1570) *
                    C50877 * C17175 +
                (C33463 + C33464) * C50877 * C17176 +
                (C33465 + C33466) * C50877 * C17177) *
                   C50795 * C277) *
                  C278 +
              (((C33462 + C33461) * C50877 * C17175 +
                (C33460 + C33459) * C50877 * C17176 +
                (C33204 * C280 + C33439 + C33439 + C33202 * C300 +
                 C33206 * C889 + C33440 + C33440 + C50956 * C899) *
                    C50877 * C17177) *
                   C50795 * C276 -
               (C33264 * C17177 + (C33256 + C33255) * C50877 * C17176 +
                (C33254 + C33253) * C50877 * C17175) *
                   C50795 * C275 -
               ((C33206 * C1559 + C33441 + C33441 + C50956 * C1567 +
                 C33204 * C287 + C33442 + C33442 + C33202 * C307) *
                    C50877 * C17177 +
                (C33466 + C33465) * C50877 * C17176 +
                (C33464 + C33463) * C50877 * C17175) *
                   C50795 * C277) *
                  C50766)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
             C33210 + C33210 + C50956 * C480) *
                C50877 * C17175 +
            (C33253 + C33254) * C50877 * C17176 + C33263 * C17177) *
               C454 -
           ((C33661 + C33662) * C50877 * C17177 +
            (C33663 + C33664) * C50877 * C17176 +
            (C33206 * C461 + C33625 + C33625 + C50956 * C481 + C33204 * C460 +
             C33626 + C33626 + C33202 * C480) *
                C50877 * C17175) *
               C455 +
           ((C33204 * C461 + C33627 + C33627 + C33202 * C481 + C33206 * C1846 +
             C33628 + C33628 + C50956 * C1854) *
                C50877 * C17175 +
            (C33665 + C33666) * C50877 * C17176 +
            (C33667 + C33668) * C50877 * C17177) *
               C456) *
              C50779 * C278 +
          (((C33664 + C33663) * C50877 * C17175 +
            (C33662 + C33661) * C50877 * C17176 +
            (C33204 * C457 + C33641 + C33641 + C33202 * C477 + C33206 * C464 +
             C33642 + C33642 + C50956 * C484) *
                C50877 * C17177) *
               C455 -
           (C33264 * C17177 + (C33256 + C33255) * C50877 * C17176 +
            (C33254 + C33253) * C50877 * C17175) *
               C454 -
           ((C33206 * C1843 + C33643 + C33643 + C50956 * C1851 + C33204 * C464 +
             C33644 + C33644 + C33202 * C484) *
                C50877 * C17177 +
            (C33668 + C33667) * C50877 * C17176 +
            (C33666 + C33665) * C50877 * C17175) *
               C456) *
              C50779 * C50766)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
            C33210 + C33210 + C50956 * C480) *
               C2286 +
           (C33204 * C283 + C33424 + C33424 + C33202 * C303 + C33206 * C886 +
            C33423 + C33423 + C50956 * C896) *
               C2287 +
           (C33204 * C284 + C33425 + C33425 + C33202 * C304 + C33206 * C1562 +
            C33426 + C33426 + C50956 * C1570) *
               C2288) *
              C50734 * C50795 * C50779 * C113 -
          ((C33464 + C33463) * C2288 + (C33461 + C33462) * C2287 +
           (C33254 + C33253) * C2286) *
              C50734 * C50795 * C50779 * C114 +
          (C33261 * C2286 + (C33460 + C33459) * C2287 +
           (C33465 + C33466) * C2288) *
              C50734 * C50795 * C50779 * C115 -
          ((C33206 * C1559 + C33441 + C33441 + C50956 * C1567 + C33204 * C287 +
            C33442 + C33442 + C33202 * C307) *
               C2288 +
           (C33828 + C33827) * C2287 + C33262 * C2286) *
              C50734 * C50795 * C50779 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
             C33210 + C33210 + C50956 * C480) *
                C2286 +
            (C36268 + C36269) * C2287 + C36276 * C2288) *
               C50734 * C50795 * C275 -
           ((C36272 + C36273) * C2288 + (C36271 + C36270) * C2287 +
            (C36269 + C36268) * C2286) *
               C50734 * C50795 * C276 +
           (C36276 * C2286 + (C36273 + C36272) * C2287 +
            (C33204 * C2446 + C36243 + C36243 + C33202 * C2452 +
             C33206 * C4108 + C36244 + C36244 + C50956 * C4112) *
                C2288) *
               C50734 * C50795 * C277) *
              C278 +
          (((C33462 + C33461) * C2286 + (C33463 + C33464) * C2287 +
            (C36274 + C36275) * C2288) *
               C50734 * C50795 * C276 -
           (C36249 * C2288 + (C33461 + C33462) * C2287 +
            (C33254 + C33253) * C2286) *
               C50734 * C50795 * C275 -
           ((C33206 * C4107 + C36250 + C36250 + C50956 * C4111 +
             C33204 * C2447 + C36251 + C36251 + C33202 * C2453) *
                C2288 +
            (C36275 + C36274) * C2287 + C36249 * C2286) *
               C50734 * C50795 * C277) *
              C50766)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
             C33210 + C33210 + C50956 * C480) *
                C2286 +
            (C36268 + C36269) * C2287 + C36276 * C2288) *
               C50734 * C454 -
           ((C33206 * C2640 + C35103 + C35103 + C50956 * C2646 +
             C33204 * C1562 + C35104 + C35104 + C33202 * C1570) *
                C2288 +
            (C33206 * C1215 + C34184 + C34184 + C50956 * C1223 + C33204 * C886 +
             C34183 + C34183 + C33202 * C896) *
                C2287 +
            (C33206 * C461 + C33625 + C33625 + C50956 * C481 + C33204 * C460 +
             C33626 + C33626 + C33202 * C480) *
                C2286) *
               C50734 * C455 +
           ((C33204 * C461 + C33627 + C33627 + C33202 * C481 + C33206 * C1846 +
             C33628 + C33628 + C50956 * C1854) *
                C2286 +
            (C33204 * C1215 + C34612 + C34612 + C33202 * C1223 +
             C33206 * C4513 + C34611 + C34611 + C50956 * C4521) *
                C2287 +
            (C33204 * C2640 + C36423 + C36423 + C33202 * C2646 +
             C33206 * C4512 + C36424 + C36424 + C50956 * C4520) *
                C2288) *
               C50734 * C456) *
              C50779 * C278 +
          (((C33664 + C33663) * C2286 + (C34207 + C34208) * C2287 +
            (C33204 * C1561 + C35102 + C35102 + C33202 * C1569 +
             C33206 * C2641 + C35101 + C35101 + C50956 * C2647) *
                C2288) *
               C50734 * C455 -
           (C36249 * C2288 + (C33461 + C33462) * C2287 +
            (C33254 + C33253) * C2286) *
               C50734 * C454 -
           ((C33206 * C4510 + C36425 + C36425 + C50956 * C4518 +
             C33204 * C2641 + C36426 + C36426 + C33202 * C2647) *
                C2288 +
            (C33206 * C4511 + C34609 + C34609 + C50956 * C4519 +
             C33204 * C1214 + C34610 + C34610 + C33202 * C1222) *
                C2287 +
            (C33666 + C33665) * C2286) *
               C50734 * C456) *
              C50779 * C50766)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C38820 * C119 + C38829 + C38829 + C38816 * C133 + C38822 * C460 +
           C38830 + C38830 + C38817 * C480 + C38824 * C461 + C38831 + C38831 +
           C38818 * C481 + C38826 * C1846 + C38832 + C38832 + C38819 * C1854) *
              C50877 * C50734 * C50795 * C50779 * C113 -
          (C38826 * C1845 + C38833 + C38833 + C38819 * C1853 + C38824 * C462 +
           C38834 + C38834 + C38818 * C482 + C38822 * C459 + C38835 + C38835 +
           C38817 * C479 + C38820 * C120 + C38836 + C38836 + C38816 * C134) *
              C50877 * C50734 * C50795 * C50779 * C114 +
          (C38820 * C121 + C38837 + C38837 + C38816 * C135 + C38822 * C458 +
           C38838 + C38838 + C38817 * C478 + C38824 * C463 + C38839 + C38839 +
           C38818 * C483 + C38826 * C1844 + C38840 + C38840 + C38819 * C1852) *
              C50877 * C50734 * C50795 * C50779 * C115 -
          (C38826 * C1843 + C38841 + C38841 + C38819 * C1851 + C38824 * C464 +
           C38842 + C38842 + C38818 * C484 + C38822 * C457 + C38843 + C38843 +
           C38817 * C477 + C38820 * C122 + C38844 + C38844 + C38816 * C136) *
              C50877 * C50734 * C50795 * C50779 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C38820 * C119 + C38829 + C38829 + C38816 * C133 + C38822 * C460 +
            C38830 + C38830 + C38817 * C480 + C38824 * C461 + C38831 + C38831 +
            C38818 * C481 + C38826 * C1846 + C38832 + C38832 + C38819 * C1854) *
               C50877 * C50734 * C50795 * C275 -
           (C38826 * C4513 + C38943 + C38943 + C38819 * C4521 + C38824 * C1215 +
            C38944 + C38944 + C38818 * C1223 + C38822 * C886 + C38945 + C38945 +
            C38817 * C896 + C38820 * C283 + C38946 + C38946 + C38816 * C303) *
               C50877 * C50734 * C50795 * C276 +
           (C38820 * C284 + C38947 + C38947 + C38816 * C304 + C38822 * C1562 +
            C38948 + C38948 + C38817 * C1570 + C38824 * C2640 + C38949 +
            C38949 + C38818 * C2646 + C38826 * C4512 + C38950 + C38950 +
            C38819 * C4520) *
               C50877 * C50734 * C50795 * C277) *
              C278 +
          ((C38820 * C282 + C38951 + C38951 + C38816 * C302 + C38822 * C887 +
            C38952 + C38952 + C38817 * C897 + C38824 * C1214 + C38953 + C38953 +
            C38818 * C1222 + C38826 * C4511 + C38954 + C38954 +
            C38819 * C4519) *
               C50877 * C50734 * C50795 * C276 -
           (C38826 * C1845 + C38833 + C38833 + C38819 * C1853 + C38824 * C462 +
            C38834 + C38834 + C38818 * C482 + C38822 * C459 + C38835 + C38835 +
            C38817 * C479 + C38820 * C120 + C38836 + C38836 + C38816 * C134) *
               C50877 * C50734 * C50795 * C275 -
           (C38826 * C4510 + C38955 + C38955 + C38819 * C4518 + C38824 * C2641 +
            C38956 + C38956 + C38818 * C2647 + C38822 * C1561 + C38957 +
            C38957 + C38817 * C1569 + C38820 * C285 + C38958 + C38958 +
            C38816 * C305) *
               C50877 * C50734 * C50795 * C277) *
              C50766)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C38820 * C119 + C38829 + C38829 + C38816 * C133 + C38822 * C460 +
            C38830 + C38830 + C38817 * C480 + C38824 * C461 + C38831 + C38831 +
            C38818 * C481 + C38826 * C1846 + C38832 + C38832 + C38819 * C1854) *
               C50877 * C50734 * C454 -
           (C38826 * C5519 + C39057 + C39057 + C38819 * C5525 + C38824 * C1846 +
            C39058 + C39058 + C38818 * C1854 + C38822 * C461 + C39059 + C39059 +
            C38817 * C481 + C38820 * C460 + C39060 + C39060 + C38816 * C480) *
               C50877 * C50734 * C455 +
           (C38820 * C461 + C39061 + C39061 + C38816 * C481 + C38822 * C1846 +
            C39062 + C39062 + C38817 * C1854 + C38824 * C5519 + C39063 +
            C39063 + C38818 * C5525 + C38826 * C7416 + C39064 + C39064 +
            C38819 * C7420) *
               C50877 * C50734 * C456) *
              C50779 * C278 +
          ((C38820 * C459 + C39065 + C39065 + C38816 * C479 + C38822 * C462 +
            C39066 + C39066 + C38817 * C482 + C38824 * C1845 + C39067 + C39067 +
            C38818 * C1853 + C38826 * C5520 + C39068 + C39068 +
            C38819 * C5526) *
               C50877 * C50734 * C455 -
           (C38826 * C1845 + C38833 + C38833 + C38819 * C1853 + C38824 * C462 +
            C38834 + C38834 + C38818 * C482 + C38822 * C459 + C38835 + C38835 +
            C38817 * C479 + C38820 * C120 + C38836 + C38836 + C38816 * C134) *
               C50877 * C50734 * C454 -
           (C38826 * C7415 + C39069 + C39069 + C38819 * C7419 + C38824 * C5520 +
            C39070 + C39070 + C38818 * C5526 + C38822 * C1845 + C39071 +
            C39071 + C38817 * C1853 + C38820 * C462 + C39072 + C39072 +
            C38816 * C482) *
               C50877 * C50734 * C456) *
              C50779 * C50766)) /
            (p * q * std::sqrt(p + q));
    d2ee[183] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
             C33210 + C33210 + C50956 * C480) *
                C2286 +
            (C36268 + C36269) * C2287 + C36276 * C2288) *
               C50734 * C51004 -
           ((C33206 * C2640 + C35103 + C35103 + C50956 * C2646 +
             C33204 * C1562 + C35104 + C35104 + C33202 * C1570) *
                C2288 +
            (C33206 * C1215 + C34184 + C34184 + C50956 * C1223 + C33204 * C886 +
             C34183 + C34183 + C33202 * C896) *
                C2287 +
            (C33206 * C461 + C33625 + C33625 + C50956 * C481 + C33204 * C460 +
             C33626 + C33626 + C33202 * C480) *
                C2286) *
               C50734 * C50859) *
              C50779 * C51046 +
          (((C33664 + C33663) * C2286 + (C34207 + C34208) * C2287 +
            (C33204 * C1561 + C35102 + C35102 + C33202 * C1569 +
             C33206 * C2641 + C35101 + C35101 + C50956 * C2647) *
                C2288) *
               C50734 * C50859 -
           (C36249 * C2288 + (C33461 + C33462) * C2287 +
            (C33254 + C33253) * C2286) *
               C50734 * C51004) *
              C50779 * C51047 +
          ((C33261 * C2286 + (C33460 + C33459) * C2287 +
            (C33465 + C33466) * C2288) *
               C50734 * C51004 -
           ((C33206 * C2642 + C35099 + C35099 + C50956 * C2648 +
             C33204 * C1560 + C35100 + C35100 + C33202 * C1568) *
                C2288 +
            (C34210 + C34209) * C2287 + C33975 * C2286) *
               C50734 * C50859) *
              C50779 * C635)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
             C33210 + C33210 + C50956 * C480) *
                C50877 * C17175 +
            (C33253 + C33254) * C50877 * C17176 + C33263 * C17177) *
               C51004 -
           (C33982 * C17177 + (C33663 + C33664) * C50877 * C17176 +
            (C33206 * C461 + C33625 + C33625 + C50956 * C481 + C33204 * C460 +
             C33626 + C33626 + C33202 * C480) *
                C50877 * C17175) *
               C50859) *
              C50779 * C51046 +
          (((C33664 + C33663) * C50877 * C17175 +
            (C33662 + C33661) * C50877 * C17176 +
            (C33987 + C33988) * C50877 * C17177) *
               C50859 -
           (C33264 * C17177 + (C33256 + C33255) * C50877 * C17176 +
            (C33254 + C33253) * C50877 * C17175) *
               C51004) *
              C50779 * C51047 +
          ((C33263 * C17175 + (C33258 + C33257) * C50877 * C17176 +
            (C33259 + C33260) * C50877 * C17177) *
               C51004 -
           ((C33206 * C466 + C33980 + C33980 + C50956 * C486 + C33204 * C465 +
             C33981 + C33981 + C33202 * C485) *
                C50877 * C17177 +
            (C33988 + C33987) * C50877 * C17176 + C33982 * C17175) *
               C50859) *
              C50779 * C635)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C38820 * C119 + C38829 + C38829 + C38816 * C133 + C38822 * C460 +
            C38830 + C38830 + C38817 * C480 + C38824 * C461 + C38831 + C38831 +
            C38818 * C481 + C38826 * C1846 + C38832 + C38832 + C38819 * C1854) *
               C50877 * C50734 * C51004 -
           (C38826 * C5519 + C39057 + C39057 + C38819 * C5525 + C38824 * C1846 +
            C39058 + C39058 + C38818 * C1854 + C38822 * C461 + C39059 + C39059 +
            C38817 * C481 + C38820 * C460 + C39060 + C39060 + C38816 * C480) *
               C50877 * C50734 * C50859) *
              C50779 * C51046 +
          ((C38820 * C459 + C39065 + C39065 + C38816 * C479 + C38822 * C462 +
            C39066 + C39066 + C38817 * C482 + C38824 * C1845 + C39067 + C39067 +
            C38818 * C1853 + C38826 * C5520 + C39068 + C39068 +
            C38819 * C5526) *
               C50877 * C50734 * C50859 -
           (C38826 * C1845 + C38833 + C38833 + C38819 * C1853 + C38824 * C462 +
            C38834 + C38834 + C38818 * C482 + C38822 * C459 + C38835 + C38835 +
            C38817 * C479 + C38820 * C120 + C38836 + C38836 + C38816 * C134) *
               C50877 * C50734 * C51004) *
              C50779 * C51047 +
          ((C38820 * C121 + C38837 + C38837 + C38816 * C135 + C38822 * C458 +
            C38838 + C38838 + C38817 * C478 + C38824 * C463 + C38839 + C38839 +
            C38818 * C483 + C38826 * C1844 + C38840 + C38840 + C38819 * C1852) *
               C50877 * C50734 * C51004 -
           (C38826 * C5521 + C39273 + C39273 + C38819 * C5527 + C38824 * C1844 +
            C39274 + C39274 + C38818 * C1852 + C38822 * C463 + C39275 + C39275 +
            C38817 * C483 + C38820 * C458 + C39276 + C39276 + C38816 * C478) *
               C50877 * C50734 * C50859) *
              C50779 * C635)) /
            (p * q * std::sqrt(p + q));
    d2ee[184] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
             C33210 + C33210 + C50956 * C480) *
                C50877 * C17175 +
            (C33253 + C33254) * C50877 * C17176 + C33263 * C17177) *
               C50795 * C275 -
           ((C33459 + C33460) * C50877 * C17177 +
            (C33461 + C33462) * C50877 * C17176 +
            (C33206 * C886 + C33423 + C33423 + C50956 * C896 + C33204 * C283 +
             C33424 + C33424 + C33202 * C303) *
                C50877 * C17175) *
               C50795 * C276 +
           ((C33204 * C284 + C33425 + C33425 + C33202 * C304 + C33206 * C1562 +
             C33426 + C33426 + C50956 * C1570) *
                C50877 * C17175 +
            (C33463 + C33464) * C50877 * C17176 +
            (C33465 + C33466) * C50877 * C17177) *
               C50795 * C277) *
              C278 +
          (((C33462 + C33461) * C50877 * C17175 +
            (C33460 + C33459) * C50877 * C17176 +
            (C33204 * C280 + C33439 + C33439 + C33202 * C300 + C33206 * C889 +
             C33440 + C33440 + C50956 * C899) *
                C50877 * C17177) *
               C50795 * C276 -
           (C33264 * C17177 + (C33256 + C33255) * C50877 * C17176 +
            (C33254 + C33253) * C50877 * C17175) *
               C50795 * C275 -
           ((C33206 * C1559 + C33441 + C33441 + C50956 * C1567 + C33204 * C287 +
             C33442 + C33442 + C33202 * C307) *
                C50877 * C17177 +
            (C33466 + C33465) * C50877 * C17176 +
            (C33464 + C33463) * C50877 * C17175) *
               C50795 * C277) *
              C50766)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
            C33210 + C33210 + C50956 * C480) *
               C50877 * C17175 +
           (C33253 + C33254) * C50877 * C17176 + C33263 * C17177) *
              C50795 * C50779 * C113 -
          (C33264 * C17177 + (C33256 + C33255) * C50877 * C17176 +
           (C33254 + C33253) * C50877 * C17175) *
              C50795 * C50779 * C114 +
          (C33263 * C17175 + (C33258 + C33257) * C50877 * C17176 +
           (C33259 + C33260) * C50877 * C17177) *
              C50795 * C50779 * C115 -
          ((C33206 * C746 + C33235 + C33235 + C50956 * C748 + C33204 * C124 +
            C33236 + C33236 + C33202 * C138) *
               C50877 * C17177 +
           (C33260 + C33259) * C50877 * C17176 + C33264 * C17175) *
              C50795 * C50779 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
            C33210 + C33210 + C50956 * C480) *
               C2286 +
           (C33204 * C283 + C33424 + C33424 + C33202 * C303 + C33206 * C886 +
            C33423 + C33423 + C50956 * C896) *
               C2287 +
           (C33204 * C284 + C33425 + C33425 + C33202 * C304 + C33206 * C1562 +
            C33426 + C33426 + C50956 * C1570) *
               C2288) *
              C50734 * C50795 * C50779 * C113 -
          ((C33464 + C33463) * C2288 + (C33461 + C33462) * C2287 +
           (C33254 + C33253) * C2286) *
              C50734 * C50795 * C50779 * C114 +
          (C33261 * C2286 + (C33460 + C33459) * C2287 +
           (C33465 + C33466) * C2288) *
              C50734 * C50795 * C50779 * C115 -
          ((C33206 * C1559 + C33441 + C33441 + C50956 * C1567 + C33204 * C287 +
            C33442 + C33442 + C33202 * C307) *
               C2288 +
           (C33828 + C33827) * C2287 + C33262 * C2286) *
              C50734 * C50795 * C50779 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
             C33210 + C33210 + C50956 * C480) *
                C2286 +
            (C36268 + C36269) * C2287 + C36276 * C2288) *
               C50734 * C50795 * C275 -
           ((C36272 + C36273) * C2288 + (C36271 + C36270) * C2287 +
            (C36269 + C36268) * C2286) *
               C50734 * C50795 * C276 +
           (C36276 * C2286 + (C36273 + C36272) * C2287 +
            (C33204 * C2446 + C36243 + C36243 + C33202 * C2452 +
             C33206 * C4108 + C36244 + C36244 + C50956 * C4112) *
                C2288) *
               C50734 * C50795 * C277) *
              C278 +
          (((C33462 + C33461) * C2286 + (C33463 + C33464) * C2287 +
            (C36274 + C36275) * C2288) *
               C50734 * C50795 * C276 -
           (C36249 * C2288 + (C33461 + C33462) * C2287 +
            (C33254 + C33253) * C2286) *
               C50734 * C50795 * C275 -
           ((C33206 * C4107 + C36250 + C36250 + C50956 * C4111 +
             C33204 * C2447 + C36251 + C36251 + C33202 * C2453) *
                C2288 +
            (C36275 + C36274) * C2287 + C36249 * C2286) *
               C50734 * C50795 * C277) *
              C50766)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C38820 * C119 + C38829 + C38829 + C38816 * C133 + C38822 * C460 +
           C38830 + C38830 + C38817 * C480 + C38824 * C461 + C38831 + C38831 +
           C38818 * C481 + C38826 * C1846 + C38832 + C38832 + C38819 * C1854) *
              C50877 * C50734 * C50795 * C50779 * C113 -
          (C38826 * C1845 + C38833 + C38833 + C38819 * C1853 + C38824 * C462 +
           C38834 + C38834 + C38818 * C482 + C38822 * C459 + C38835 + C38835 +
           C38817 * C479 + C38820 * C120 + C38836 + C38836 + C38816 * C134) *
              C50877 * C50734 * C50795 * C50779 * C114 +
          (C38820 * C121 + C38837 + C38837 + C38816 * C135 + C38822 * C458 +
           C38838 + C38838 + C38817 * C478 + C38824 * C463 + C38839 + C38839 +
           C38818 * C483 + C38826 * C1844 + C38840 + C38840 + C38819 * C1852) *
              C50877 * C50734 * C50795 * C50779 * C115 -
          (C38826 * C1843 + C38841 + C38841 + C38819 * C1851 + C38824 * C464 +
           C38842 + C38842 + C38818 * C484 + C38822 * C457 + C38843 + C38843 +
           C38817 * C477 + C38820 * C122 + C38844 + C38844 + C38816 * C136) *
              C50877 * C50734 * C50795 * C50779 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C38820 * C119 + C38829 + C38829 + C38816 * C133 + C38822 * C460 +
            C38830 + C38830 + C38817 * C480 + C38824 * C461 + C38831 + C38831 +
            C38818 * C481 + C38826 * C1846 + C38832 + C38832 + C38819 * C1854) *
               C50877 * C50734 * C50795 * C275 -
           (C38826 * C4513 + C38943 + C38943 + C38819 * C4521 + C38824 * C1215 +
            C38944 + C38944 + C38818 * C1223 + C38822 * C886 + C38945 + C38945 +
            C38817 * C896 + C38820 * C283 + C38946 + C38946 + C38816 * C303) *
               C50877 * C50734 * C50795 * C276 +
           (C38820 * C284 + C38947 + C38947 + C38816 * C304 + C38822 * C1562 +
            C38948 + C38948 + C38817 * C1570 + C38824 * C2640 + C38949 +
            C38949 + C38818 * C2646 + C38826 * C4512 + C38950 + C38950 +
            C38819 * C4520) *
               C50877 * C50734 * C50795 * C277) *
              C278 +
          ((C38820 * C282 + C38951 + C38951 + C38816 * C302 + C38822 * C887 +
            C38952 + C38952 + C38817 * C897 + C38824 * C1214 + C38953 + C38953 +
            C38818 * C1222 + C38826 * C4511 + C38954 + C38954 +
            C38819 * C4519) *
               C50877 * C50734 * C50795 * C276 -
           (C38826 * C1845 + C38833 + C38833 + C38819 * C1853 + C38824 * C462 +
            C38834 + C38834 + C38818 * C482 + C38822 * C459 + C38835 + C38835 +
            C38817 * C479 + C38820 * C120 + C38836 + C38836 + C38816 * C134) *
               C50877 * C50734 * C50795 * C275 -
           (C38826 * C4510 + C38955 + C38955 + C38819 * C4518 + C38824 * C2641 +
            C38956 + C38956 + C38818 * C2647 + C38822 * C1561 + C38957 +
            C38957 + C38817 * C1569 + C38820 * C285 + C38958 + C38958 +
            C38816 * C305) *
               C50877 * C50734 * C50795 * C277) *
              C50766)) /
            (p * q * std::sqrt(p + q));
    d2ee[185] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
             C33210 + C33210 + C50956 * C480) *
                C2286 +
            (C36268 + C36269) * C2287 + C36276 * C2288) *
               C50734 * C50795 * C51048 -
           (C37191 * C2288 + (C36271 + C36270) * C2287 +
            (C36269 + C36268) * C2286) *
               C50734 * C50795 * C51049 +
           (C36276 * C2286 + (C36273 + C36272) * C2287 +
            (C37202 + C37203) * C2288) *
               C50734 * C50795 * C1328) *
              C50995 +
          (((C33462 + C33461) * C2286 + (C33463 + C33464) * C2287 +
            (C36274 + C36275) * C2288) *
               C50734 * C50795 * C51049 -
           (C36249 * C2288 + (C33461 + C33462) * C2287 +
            (C33254 + C33253) * C2286) *
               C50734 * C50795 * C51048 -
           ((C33206 * C4107 + C36250 + C36250 + C50956 * C4111 +
             C33204 * C2447 + C36251 + C36251 + C33202 * C2453) *
                C2288 +
            (C36275 + C36274) * C2287 + C36249 * C2286) *
               C50734 * C50795 * C1328) *
              C50766)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
             C33210 + C33210 + C50956 * C480) *
                C50877 * C17175 +
            (C33253 + C33254) * C50877 * C17176 + C33263 * C17177) *
               C50795 * C51048 -
           (C33822 * C17177 + (C33461 + C33462) * C50877 * C17176 +
            (C33206 * C886 + C33423 + C33423 + C50956 * C896 + C33204 * C283 +
             C33424 + C33424 + C33202 * C303) *
                C50877 * C17175) *
               C50795 * C51049 +
           ((C33204 * C284 + C33425 + C33425 + C33202 * C304 + C33206 * C1562 +
             C33426 + C33426 + C50956 * C1570) *
                C50877 * C17175 +
            (C33463 + C33464) * C50877 * C17176 +
            (C33465 + C33466) * C50877 * C17177) *
               C50795 * C1328) *
              C50995 +
          (((C33462 + C33461) * C50877 * C17175 +
            (C33460 + C33459) * C50877 * C17176 +
            (C33827 + C33828) * C50877 * C17177) *
               C50795 * C51049 -
           (C33264 * C17177 + (C33256 + C33255) * C50877 * C17176 +
            (C33254 + C33253) * C50877 * C17175) *
               C50795 * C51048 -
           ((C33206 * C1559 + C33441 + C33441 + C50956 * C1567 + C33204 * C287 +
             C33442 + C33442 + C33202 * C307) *
                C50877 * C17177 +
            (C33466 + C33465) * C50877 * C17176 +
            (C33464 + C33463) * C50877 * C17175) *
               C50795 * C1328) *
              C50766)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C38820 * C119 + C38829 + C38829 + C38816 * C133 + C38822 * C460 +
            C38830 + C38830 + C38817 * C480 + C38824 * C461 + C38831 + C38831 +
            C38818 * C481 + C38826 * C1846 + C38832 + C38832 + C38819 * C1854) *
               C50877 * C50734 * C50795 * C51048 -
           (C38826 * C4513 + C38943 + C38943 + C38819 * C4521 + C38824 * C1215 +
            C38944 + C38944 + C38818 * C1223 + C38822 * C886 + C38945 + C38945 +
            C38817 * C896 + C38820 * C283 + C38946 + C38946 + C38816 * C303) *
               C50877 * C50734 * C50795 * C51049 +
           (C38820 * C284 + C38947 + C38947 + C38816 * C304 + C38822 * C1562 +
            C38948 + C38948 + C38817 * C1570 + C38824 * C2640 + C38949 +
            C38949 + C38818 * C2646 + C38826 * C4512 + C38950 + C38950 +
            C38819 * C4520) *
               C50877 * C50734 * C50795 * C1328) *
              C50995 +
          ((C38820 * C282 + C38951 + C38951 + C38816 * C302 + C38822 * C887 +
            C38952 + C38952 + C38817 * C897 + C38824 * C1214 + C38953 + C38953 +
            C38818 * C1222 + C38826 * C4511 + C38954 + C38954 +
            C38819 * C4519) *
               C50877 * C50734 * C50795 * C51049 -
           (C38826 * C1845 + C38833 + C38833 + C38819 * C1853 + C38824 * C462 +
            C38834 + C38834 + C38818 * C482 + C38822 * C459 + C38835 + C38835 +
            C38817 * C479 + C38820 * C120 + C38836 + C38836 + C38816 * C134) *
               C50877 * C50734 * C50795 * C51048 -
           (C38826 * C4510 + C38955 + C38955 + C38819 * C4518 + C38824 * C2641 +
            C38956 + C38956 + C38818 * C2647 + C38822 * C1561 + C38957 +
            C38957 + C38817 * C1569 + C38820 * C285 + C38958 + C38958 +
            C38816 * C305) *
               C50877 * C50734 * C50795 * C1328) *
              C50766)) /
            (p * q * std::sqrt(p + q));
    d2ee[186] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
             C33210 + C33210 + C50956 * C480) *
                C2286 +
            (C36268 + C36269) * C2287 + C36276 * C2288) *
               C50734 * C51004 -
           (C37858 * C2288 + (C36943 + C36944) * C2287 +
            (C33206 * C461 + C33625 + C33625 + C50956 * C481 + C33204 * C460 +
             C33626 + C33626 + C33202 * C480) *
                C2286) *
               C50734 * C50859) *
              C51048 +
          (((C36944 + C36943) * C2286 + (C36942 + C36941) * C2287 +
            (C37869 + C37870) * C2288) *
               C50734 * C50859 -
           (C37191 * C2288 + (C36271 + C36270) * C2287 +
            (C36269 + C36268) * C2286) *
               C50734 * C51004) *
              C51049 +
          ((C36276 * C2286 + (C36273 + C36272) * C2287 +
            (C37202 + C37203) * C2288) *
               C50734 * C51004 -
           ((C33206 * C20608 + C37863 + C37863 + C50956 * C20610 +
             C33204 * C4108 + C37864 + C37864 + C33202 * C4112) *
                C2288 +
            (C37870 + C37869) * C2287 + C37858 * C2286) *
               C50734 * C50859) *
              C1328) *
         C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
             C33210 + C33210 + C50956 * C480) *
                C50877 * C17175 +
            (C33253 + C33254) * C50877 * C17176 + C33263 * C17177) *
               C51004 -
           (C33982 * C17177 + (C33663 + C33664) * C50877 * C17176 +
            (C33206 * C461 + C33625 + C33625 + C50956 * C481 + C33204 * C460 +
             C33626 + C33626 + C33202 * C480) *
                C50877 * C17175) *
               C50859) *
              C51048 +
          (((C33204 * C886 + C34183 + C34183 + C33202 * C896 + C33206 * C1215 +
             C34184 + C34184 + C50956 * C1223) *
                C50877 * C17175 +
            (C34207 + C34208) * C50877 * C17176 +
            (C34209 + C34210) * C50877 * C17177) *
               C50859 -
           (C33822 * C17177 + (C33461 + C33462) * C50877 * C17176 +
            (C33206 * C886 + C33423 + C33423 + C50956 * C896 + C33204 * C283 +
             C33424 + C33424 + C33202 * C303) *
                C50877 * C17175) *
               C51004) *
              C51049 +
          (((C33204 * C284 + C33425 + C33425 + C33202 * C304 + C33206 * C1562 +
             C33426 + C33426 + C50956 * C1570) *
                C50877 * C17175 +
            (C33463 + C33464) * C50877 * C17176 +
            (C33465 + C33466) * C50877 * C17177) *
               C51004 -
           ((C33206 * C2642 + C35099 + C35099 + C50956 * C2648 +
             C33204 * C1560 + C35100 + C35100 + C33202 * C1568) *
                C50877 * C17177 +
            (C33206 * C2641 + C35101 + C35101 + C50956 * C2647 +
             C33204 * C1561 + C35102 + C35102 + C33202 * C1569) *
                C50877 * C17176 +
            (C33206 * C2640 + C35103 + C35103 + C50956 * C2646 +
             C33204 * C1562 + C35104 + C35104 + C33202 * C1570) *
                C50877 * C17175) *
               C50859) *
              C1328) *
         C50760) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C38820 * C119 + C38829 + C38829 + C38816 * C133 + C38822 * C460 +
            C38830 + C38830 + C38817 * C480 + C38824 * C461 + C38831 + C38831 +
            C38818 * C481 + C38826 * C1846 + C38832 + C38832 + C38819 * C1854) *
               C50877 * C50734 * C51004 -
           (C38826 * C5519 + C39057 + C39057 + C38819 * C5525 + C38824 * C1846 +
            C39058 + C39058 + C38818 * C1854 + C38822 * C461 + C39059 + C39059 +
            C38817 * C481 + C38820 * C460 + C39060 + C39060 + C38816 * C480) *
               C50877 * C50734 * C50859) *
              C51048 +
          ((C38820 * C886 + C39407 + C39407 + C38816 * C896 + C38822 * C1215 +
            C39408 + C39408 + C38817 * C1223 + C38824 * C4513 + C39409 +
            C39409 + C38818 * C4521 + C38826 * C6522 + C39410 + C39410 +
            C38819 * C6526) *
               C50877 * C50734 * C50859 -
           (C38826 * C4513 + C38943 + C38943 + C38819 * C4521 + C38824 * C1215 +
            C38944 + C38944 + C38818 * C1223 + C38822 * C886 + C38945 + C38945 +
            C38817 * C896 + C38820 * C283 + C38946 + C38946 + C38816 * C303) *
               C50877 * C50734 * C51004) *
              C51049 +
          ((C38820 * C284 + C38947 + C38947 + C38816 * C304 + C38822 * C1562 +
            C38948 + C38948 + C38817 * C1570 + C38824 * C2640 + C38949 +
            C38949 + C38818 * C2646 + C38826 * C4512 + C38950 + C38950 +
            C38819 * C4520) *
               C50877 * C50734 * C51004 -
           (C38826 * C22873 + C40011 + C40011 + C38819 * C22875 +
            C38824 * C4512 + C40012 + C40012 + C38818 * C4520 + C38822 * C2640 +
            C40013 + C40013 + C38817 * C2646 + C38820 * C1562 + C40014 +
            C40014 + C38816 * C1570) *
               C50877 * C50734 * C50859) *
              C1328) *
         C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                 C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                    C50877 * C17175 +
                (C33253 + C33254) * C50877 * C17176 + C33263 * C17177) *
                   C50795 * C1022 -
               (C33822 * C17177 + (C33461 + C33462) * C50877 * C17176 +
                (C33206 * C886 + C33423 + C33423 + C50956 * C896 +
                 C33204 * C283 + C33424 + C33424 + C33202 * C303) *
                    C50877 * C17175) *
                   C50795 * C50831) *
                  C1024 +
              (((C33462 + C33461) * C50877 * C17175 +
                (C33460 + C33459) * C50877 * C17176 +
                (C33827 + C33828) * C50877 * C17177) *
                   C50795 * C50831 -
               (C33264 * C17177 + (C33256 + C33255) * C50877 * C17176 +
                (C33254 + C33253) * C50877 * C17175) *
                   C50795 * C1022) *
                  C1025 +
              ((C33263 * C17175 + (C33258 + C33257) * C50877 * C17176 +
                (C33259 + C33260) * C50877 * C17177) *
                   C50795 * C1022 -
               ((C33206 * C890 + C33820 + C33820 + C50956 * C900 +
                 C33204 * C288 + C33821 + C33821 + C33202 * C308) *
                    C50877 * C17177 +
                (C33828 + C33827) * C50877 * C17176 + C33822 * C17175) *
                   C50795 * C50831) *
                  C1026) +
         0.5 * std::pow(Pi, 2.5) *
             (((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                   C50877 * C17175 +
               (C33253 + C33254) * C50877 * C17176 + C33263 * C17177) *
                  C50795 * C1093 -
              (C33822 * C17177 + (C33461 + C33462) * C50877 * C17176 +
               (C33206 * C886 + C33423 + C33423 + C50956 * C896 +
                C33204 * C283 + C33424 + C33424 + C33202 * C303) *
                   C50877 * C17175) *
                  C50795 * C1094 +
              ((C33204 * C284 + C33425 + C33425 + C33202 * C304 +
                C33206 * C1562 + C33426 + C33426 + C50956 * C1570) *
                   C50877 * C17175 +
               (C33463 + C33464) * C50877 * C17176 +
               (C33465 + C33466) * C50877 * C17177) *
                  C50795 * C1095 -
              ((C33206 * C3172 + C34455 + C34455 + C50956 * C3178 +
                C33204 * C1099 + C34456 + C34456 + C33202 * C1107) *
                   C50877 * C17177 +
               (C33206 * C3171 + C34457 + C34457 + C50956 * C3177 +
                C33204 * C1100 + C34458 + C34458 + C33202 * C1108) *
                   C50877 * C17176 +
               (C33206 * C3170 + C34459 + C34459 + C50956 * C3176 +
                C33204 * C1101 + C34460 + C34460 + C33202 * C1109) *
                   C50877 * C17175) *
                  C50795 * C1096) *
             C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
             C33210 + C33210 + C50956 * C480) *
                C50877 * C17175 +
            (C33253 + C33254) * C50877 * C17176 + C33263 * C17177) *
               C454 -
           (C33982 * C17177 + (C33663 + C33664) * C50877 * C17176 +
            (C33206 * C461 + C33625 + C33625 + C50956 * C481 + C33204 * C460 +
             C33626 + C33626 + C33202 * C480) *
                C50877 * C17175) *
               C455 +
           ((C33204 * C461 + C33627 + C33627 + C33202 * C481 + C33206 * C1846 +
             C33628 + C33628 + C50956 * C1854) *
                C50877 * C17175 +
            (C33665 + C33666) * C50877 * C17176 +
            (C33667 + C33668) * C50877 * C17177) *
               C456) *
              C1022 +
          (((C33204 * C886 + C34183 + C34183 + C33202 * C896 + C33206 * C1215 +
             C34184 + C34184 + C50956 * C1223) *
                C50877 * C17175 +
            (C34207 + C34208) * C50877 * C17176 +
            (C34209 + C34210) * C50877 * C17177) *
               C455 -
           (C33822 * C17177 + (C33461 + C33462) * C50877 * C17176 +
            (C33206 * C886 + C33423 + C33423 + C50956 * C896 + C33204 * C283 +
             C33424 + C33424 + C33202 * C303) *
                C50877 * C17175) *
               C454 -
           ((C33206 * C6098 + C34607 + C34607 + C50956 * C6100 +
             C33204 * C1213 + C34608 + C34608 + C33202 * C1221) *
                C50877 * C17177 +
            (C33206 * C4511 + C34609 + C34609 + C50956 * C4519 +
             C33204 * C1214 + C34610 + C34610 + C33202 * C1222) *
                C50877 * C17176 +
            (C33206 * C4513 + C34611 + C34611 + C50956 * C4521 +
             C33204 * C1215 + C34612 + C34612 + C33202 * C1223) *
                C50877 * C17175) *
               C456) *
              C50831) *
         C50760) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
             C33210 + C33210 + C50956 * C480) *
                C2286 +
            (C36268 + C36269) * C2287 + C36276 * C2288) *
               C50734 * C50795 * C1022 -
           ((C36272 + C36273) * C2288 + (C36271 + C36270) * C2287 +
            (C36269 + C36268) * C2286) *
               C50734 * C50795 * C50831) *
              C1024 +
          (((C33462 + C33461) * C2286 + (C33463 + C33464) * C2287 +
            (C36274 + C36275) * C2288) *
               C50734 * C50795 * C50831 -
           (C36249 * C2288 + (C33461 + C33462) * C2287 +
            (C33254 + C33253) * C2286) *
               C50734 * C50795 * C1022) *
              C1025 +
          ((C33261 * C2286 + (C33460 + C33459) * C2287 +
            (C33465 + C33466) * C2288) *
               C50734 * C50795 * C1022 -
           ((C33206 * C3172 + C34455 + C34455 + C50956 * C3178 +
             C33204 * C1099 + C34456 + C34456 + C33202 * C1107) *
                C2288 +
            (C33466 + C33465) * C2287 + C33815 * C2286) *
               C50734 * C50795 * C50831) *
              C1026)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
            C33210 + C33210 + C50956 * C480) *
               C2286 +
           (C36268 + C36269) * C2287 + C36276 * C2288) *
              C50734 * C50795 * C1093 -
          (C37191 * C2288 + (C36271 + C36270) * C2287 +
           (C36269 + C36268) * C2286) *
              C50734 * C50795 * C1094 +
          (C36276 * C2286 + (C36273 + C36272) * C2287 +
           (C37202 + C37203) * C2288) *
              C50734 * C50795 * C1095 -
          ((C33206 * C20943 + C37196 + C37196 + C50956 * C20945 +
            C33204 * C3445 + C37197 + C37197 + C33202 * C3449) *
               C2288 +
           (C37203 + C37202) * C2287 + C37191 * C2286) *
              C50734 * C50795 * C1096) *
         C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
             C33210 + C33210 + C50956 * C480) *
                C2286 +
            (C36268 + C36269) * C2287 + C36276 * C2288) *
               C50734 * C454 -
           ((C36941 + C36942) * C2288 + (C36943 + C36944) * C2287 +
            (C33206 * C461 + C33625 + C33625 + C50956 * C481 + C33204 * C460 +
             C33626 + C33626 + C33202 * C480) *
                C2286) *
               C50734 * C455 +
           ((C33204 * C461 + C33627 + C33627 + C33202 * C481 + C33206 * C1846 +
             C33628 + C33628 + C50956 * C1854) *
                C2286 +
            (C37368 + C37369) * C2287 + (C37370 + C37371) * C2288) *
               C50734 * C456) *
              C1022 +
          (((C36944 + C36943) * C2286 + (C36942 + C36941) * C2287 +
            (C33204 * C3170 + C36921 + C36921 + C33202 * C3176 +
             C33206 * C3604 + C36922 + C36922 + C50956 * C3608) *
                C2288) *
               C50734 * C455 -
           (C37191 * C2288 + (C36271 + C36270) * C2287 +
            (C36269 + C36268) * C2286) *
               C50734 * C454 -
           ((C33206 * C21214 + C37358 + C37358 + C50956 * C21216 +
             C33204 * C3604 + C37359 + C37359 + C33202 * C3608) *
                C2288 +
            (C37371 + C37370) * C2287 + (C37369 + C37368) * C2286) *
               C50734 * C456) *
              C50831) *
         C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C38820 * C119 + C38829 + C38829 + C38816 * C133 + C38822 * C460 +
            C38830 + C38830 + C38817 * C480 + C38824 * C461 + C38831 + C38831 +
            C38818 * C481 + C38826 * C1846 + C38832 + C38832 + C38819 * C1854) *
               C50877 * C50734 * C50795 * C1022 -
           (C38826 * C4513 + C38943 + C38943 + C38819 * C4521 + C38824 * C1215 +
            C38944 + C38944 + C38818 * C1223 + C38822 * C886 + C38945 + C38945 +
            C38817 * C896 + C38820 * C283 + C38946 + C38946 + C38816 * C303) *
               C50877 * C50734 * C50795 * C50831) *
              C1024 +
          ((C38820 * C282 + C38951 + C38951 + C38816 * C302 + C38822 * C887 +
            C38952 + C38952 + C38817 * C897 + C38824 * C1214 + C38953 + C38953 +
            C38818 * C1222 + C38826 * C4511 + C38954 + C38954 +
            C38819 * C4519) *
               C50877 * C50734 * C50795 * C50831 -
           (C38826 * C1845 + C38833 + C38833 + C38819 * C1853 + C38824 * C462 +
            C38834 + C38834 + C38818 * C482 + C38822 * C459 + C38835 + C38835 +
            C38817 * C479 + C38820 * C120 + C38836 + C38836 + C38816 * C134) *
               C50877 * C50734 * C50795 * C1022) *
              C1025 +
          ((C38820 * C121 + C38837 + C38837 + C38816 * C135 + C38822 * C458 +
            C38838 + C38838 + C38817 * C478 + C38824 * C463 + C38839 + C38839 +
            C38818 * C483 + C38826 * C1844 + C38840 + C38840 + C38819 * C1852) *
               C50877 * C50734 * C50795 * C1022 -
           (C38826 * C6098 + C39171 + C39171 + C38819 * C6100 + C38824 * C1213 +
            C39172 + C39172 + C38818 * C1221 + C38822 * C888 + C39173 + C39173 +
            C38817 * C898 + C38820 * C281 + C39174 + C39174 + C38816 * C301) *
               C50877 * C50734 * C50795 * C50831) *
              C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C38820 * C119 + C38829 + C38829 + C38816 * C133 + C38822 * C460 +
           C38830 + C38830 + C38817 * C480 + C38824 * C461 + C38831 + C38831 +
           C38818 * C481 + C38826 * C1846 + C38832 + C38832 + C38819 * C1854) *
              C50877 * C50734 * C50795 * C1093 -
          (C38826 * C4513 + C38943 + C38943 + C38819 * C4521 + C38824 * C1215 +
           C38944 + C38944 + C38818 * C1223 + C38822 * C886 + C38945 + C38945 +
           C38817 * C896 + C38820 * C283 + C38946 + C38946 + C38816 * C303) *
              C50877 * C50734 * C50795 * C1094 +
          (C38820 * C284 + C38947 + C38947 + C38816 * C304 + C38822 * C1562 +
           C38948 + C38948 + C38817 * C1570 + C38824 * C2640 + C38949 + C38949 +
           C38818 * C2646 + C38826 * C4512 + C38950 + C38950 + C38819 * C4520) *
              C50877 * C50734 * C50795 * C1095 -
          (C38826 * C21214 + C39579 + C39579 + C38819 * C21216 +
           C38824 * C3604 + C39580 + C39580 + C38818 * C3608 + C38822 * C3170 +
           C39581 + C39581 + C38817 * C3176 + C38820 * C1101 + C39582 + C39582 +
           C38816 * C1109) *
              C50877 * C50734 * C50795 * C1096) *
         C50760) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C38820 * C119 + C38829 + C38829 + C38816 * C133 + C38822 * C460 +
            C38830 + C38830 + C38817 * C480 + C38824 * C461 + C38831 + C38831 +
            C38818 * C481 + C38826 * C1846 + C38832 + C38832 + C38819 * C1854) *
               C50877 * C50734 * C454 -
           (C38826 * C5519 + C39057 + C39057 + C38819 * C5525 + C38824 * C1846 +
            C39058 + C39058 + C38818 * C1854 + C38822 * C461 + C39059 + C39059 +
            C38817 * C481 + C38820 * C460 + C39060 + C39060 + C38816 * C480) *
               C50877 * C50734 * C455 +
           (C38820 * C461 + C39061 + C39061 + C38816 * C481 + C38822 * C1846 +
            C39062 + C39062 + C38817 * C1854 + C38824 * C5519 + C39063 +
            C39063 + C38818 * C5525 + C38826 * C7416 + C39064 + C39064 +
            C38819 * C7420) *
               C50877 * C50734 * C456) *
              C1022 +
          ((C38820 * C886 + C39407 + C39407 + C38816 * C896 + C38822 * C1215 +
            C39408 + C39408 + C38817 * C1223 + C38824 * C4513 + C39409 +
            C39409 + C38818 * C4521 + C38826 * C6522 + C39410 + C39410 +
            C38819 * C6526) *
               C50877 * C50734 * C455 -
           (C38826 * C4513 + C38943 + C38943 + C38819 * C4521 + C38824 * C1215 +
            C38944 + C38944 + C38818 * C1223 + C38822 * C886 + C38945 + C38945 +
            C38817 * C896 + C38820 * C283 + C38946 + C38946 + C38816 * C303) *
               C50877 * C50734 * C454 -
           (C38826 * C23788 + C39681 + C39681 + C38819 * C23790 +
            C38824 * C6522 + C39682 + C39682 + C38818 * C6526 + C38822 * C4513 +
            C39683 + C39683 + C38817 * C4521 + C38820 * C1215 + C39684 +
            C39684 + C38816 * C1223) *
               C50877 * C50734 * C456) *
              C50831) *
         C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[188] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
              C33210 + C33210 + C50956 * C480) *
                 C2286 +
             (C36268 + C36269) * C2287 + C36276 * C2288) *
                C50734 * C51004 -
            ((C36941 + C36942) * C2288 + (C36943 + C36944) * C2287 +
             (C33206 * C461 + C33625 + C33625 + C50956 * C481 + C33204 * C460 +
              C33626 + C33626 + C33202 * C480) *
                 C2286) *
                C50734 * C50859) *
               C1022 +
           (((C36944 + C36943) * C2286 + (C36942 + C36941) * C2287 +
             (C33204 * C3170 + C36921 + C36921 + C33202 * C3176 +
              C33206 * C3604 + C36922 + C36922 + C50956 * C3608) *
                 C2288) *
                C50734 * C50859 -
            (C37191 * C2288 + (C36271 + C36270) * C2287 +
             (C36269 + C36268) * C2286) *
                C50734 * C51004) *
               C50831) *
              C50995 +
          ((((C33664 + C33663) * C2286 + (C34207 + C34208) * C2287 +
             (C36945 + C36946) * C2288) *
                C50734 * C50859 -
            (C36249 * C2288 + (C33461 + C33462) * C2287 +
             (C33254 + C33253) * C2286) *
                C50734 * C51004) *
               C1022 +
           (((C33462 + C33461) * C2286 + (C33463 + C33464) * C2287 +
             (C36274 + C36275) * C2288) *
                C50734 * C51004 -
            ((C33206 * C3603 + C36927 + C36927 + C50956 * C3607 +
              C33204 * C3171 + C36928 + C36928 + C33202 * C3177) *
                 C2288 +
             (C36946 + C36945) * C2287 + (C34208 + C34207) * C2286) *
                C50734 * C50859) *
               C50831) *
              C50766)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
              C33210 + C33210 + C50956 * C480) *
                 C50877 * C17175 +
             (C33253 + C33254) * C50877 * C17176 + C33263 * C17177) *
                C51004 -
            (C33982 * C17177 + (C33663 + C33664) * C50877 * C17176 +
             (C33206 * C461 + C33625 + C33625 + C50956 * C481 + C33204 * C460 +
              C33626 + C33626 + C33202 * C480) *
                 C50877 * C17175) *
                C50859) *
               C1022 +
           (((C33204 * C886 + C34183 + C34183 + C33202 * C896 + C33206 * C1215 +
              C34184 + C34184 + C50956 * C1223) *
                 C50877 * C17175 +
             (C34207 + C34208) * C50877 * C17176 +
             (C34209 + C34210) * C50877 * C17177) *
                C50859 -
            (C33822 * C17177 + (C33461 + C33462) * C50877 * C17176 +
             (C33206 * C886 + C33423 + C33423 + C50956 * C896 + C33204 * C283 +
              C33424 + C33424 + C33202 * C303) *
                 C50877 * C17175) *
                C51004) *
               C50831) *
              C50995 +
          ((((C33664 + C33663) * C50877 * C17175 +
             (C33662 + C33661) * C50877 * C17176 +
             (C33987 + C33988) * C50877 * C17177) *
                C50859 -
            (C33264 * C17177 + (C33256 + C33255) * C50877 * C17176 +
             (C33254 + C33253) * C50877 * C17175) *
                C51004) *
               C1022 +
           (((C33462 + C33461) * C50877 * C17175 +
             (C33460 + C33459) * C50877 * C17176 +
             (C33827 + C33828) * C50877 * C17177) *
                C51004 -
            ((C33206 * C1212 + C34197 + C34197 + C50956 * C1220 +
              C33204 * C889 + C34198 + C34198 + C33202 * C899) *
                 C50877 * C17177 +
             (C34210 + C34209) * C50877 * C17176 +
             (C34208 + C34207) * C50877 * C17175) *
                C50859) *
               C50831) *
              C50766)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C38820 * C119 + C38829 + C38829 + C38816 * C133 + C38822 * C460 +
             C38830 + C38830 + C38817 * C480 + C38824 * C461 + C38831 + C38831 +
             C38818 * C481 + C38826 * C1846 + C38832 + C38832 +
             C38819 * C1854) *
                C50877 * C50734 * C51004 -
            (C38826 * C5519 + C39057 + C39057 + C38819 * C5525 +
             C38824 * C1846 + C39058 + C39058 + C38818 * C1854 + C38822 * C461 +
             C39059 + C39059 + C38817 * C481 + C38820 * C460 + C39060 + C39060 +
             C38816 * C480) *
                C50877 * C50734 * C50859) *
               C1022 +
           ((C38820 * C886 + C39407 + C39407 + C38816 * C896 + C38822 * C1215 +
             C39408 + C39408 + C38817 * C1223 + C38824 * C4513 + C39409 +
             C39409 + C38818 * C4521 + C38826 * C6522 + C39410 + C39410 +
             C38819 * C6526) *
                C50877 * C50734 * C50859 -
            (C38826 * C4513 + C38943 + C38943 + C38819 * C4521 +
             C38824 * C1215 + C38944 + C38944 + C38818 * C1223 + C38822 * C886 +
             C38945 + C38945 + C38817 * C896 + C38820 * C283 + C38946 + C38946 +
             C38816 * C303) *
                C50877 * C50734 * C51004) *
               C50831) *
              C50995 +
          (((C38820 * C459 + C39065 + C39065 + C38816 * C479 + C38822 * C462 +
             C39066 + C39066 + C38817 * C482 + C38824 * C1845 + C39067 +
             C39067 + C38818 * C1853 + C38826 * C5520 + C39068 + C39068 +
             C38819 * C5526) *
                C50877 * C50734 * C50859 -
            (C38826 * C1845 + C38833 + C38833 + C38819 * C1853 + C38824 * C462 +
             C38834 + C38834 + C38818 * C482 + C38822 * C459 + C38835 + C38835 +
             C38817 * C479 + C38820 * C120 + C38836 + C38836 + C38816 * C134) *
                C50877 * C50734 * C51004) *
               C1022 +
           ((C38820 * C282 + C38951 + C38951 + C38816 * C302 + C38822 * C887 +
             C38952 + C38952 + C38817 * C897 + C38824 * C1214 + C38953 +
             C38953 + C38818 * C1222 + C38826 * C4511 + C38954 + C38954 +
             C38819 * C4519) *
                C50877 * C50734 * C51004 -
            (C38826 * C6521 + C39411 + C39411 + C38819 * C6525 +
             C38824 * C4511 + C39412 + C39412 + C38818 * C4519 +
             C38822 * C1214 + C39413 + C39413 + C38817 * C1222 + C38820 * C887 +
             C39414 + C39414 + C38816 * C897) *
                C50877 * C50734 * C50859) *
               C50831) *
              C50766)) /
            (p * q * std::sqrt(p + q));
    d2ee[189] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
            C33210 + C33210 + C50956 * C480) *
               C50877 * C17175 +
           (C33253 + C33254) * C50877 * C17176 + C33263 * C17177) *
              C50795 * C1093 -
          (C33822 * C17177 + (C33461 + C33462) * C50877 * C17176 +
           (C33206 * C886 + C33423 + C33423 + C50956 * C896 + C33204 * C283 +
            C33424 + C33424 + C33202 * C303) *
               C50877 * C17175) *
              C50795 * C1094 +
          ((C33204 * C284 + C33425 + C33425 + C33202 * C304 + C33206 * C1562 +
            C33426 + C33426 + C50956 * C1570) *
               C50877 * C17175 +
           (C33463 + C33464) * C50877 * C17176 +
           (C33465 + C33466) * C50877 * C17177) *
              C50795 * C1095 -
          ((C33206 * C3172 + C34455 + C34455 + C50956 * C3178 + C33204 * C1099 +
            C34456 + C34456 + C33202 * C1107) *
               C50877 * C17177 +
           (C33206 * C3171 + C34457 + C34457 + C50956 * C3177 + C33204 * C1100 +
            C34458 + C34458 + C33202 * C1108) *
               C50877 * C17176 +
           (C33206 * C3170 + C34459 + C34459 + C50956 * C3176 + C33204 * C1101 +
            C34460 + C34460 + C33202 * C1109) *
               C50877 * C17175) *
              C50795 * C1096) *
         C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
             C33210 + C33210 + C50956 * C480) *
                C50877 * C17175 +
            (C33253 + C33254) * C50877 * C17176 + C33263 * C17177) *
               C50795 * C1022 -
           (C33822 * C17177 + (C33461 + C33462) * C50877 * C17176 +
            (C33206 * C886 + C33423 + C33423 + C50956 * C896 + C33204 * C283 +
             C33424 + C33424 + C33202 * C303) *
                C50877 * C17175) *
               C50795 * C50831) *
              C1024 +
          (((C33462 + C33461) * C50877 * C17175 +
            (C33460 + C33459) * C50877 * C17176 +
            (C33827 + C33828) * C50877 * C17177) *
               C50795 * C50831 -
           (C33264 * C17177 + (C33256 + C33255) * C50877 * C17176 +
            (C33254 + C33253) * C50877 * C17175) *
               C50795 * C1022) *
              C1025 +
          ((C33263 * C17175 + (C33258 + C33257) * C50877 * C17176 +
            (C33259 + C33260) * C50877 * C17177) *
               C50795 * C1022 -
           ((C33206 * C890 + C33820 + C33820 + C50956 * C900 + C33204 * C288 +
             C33821 + C33821 + C33202 * C308) *
                C50877 * C17177 +
            (C33828 + C33827) * C50877 * C17176 + C33822 * C17175) *
               C50795 * C50831) *
              C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
             C33210 + C33210 + C50956 * C480) *
                C2286 +
            (C36268 + C36269) * C2287 + C36276 * C2288) *
               C50734 * C50795 * C1022 -
           ((C36272 + C36273) * C2288 + (C36271 + C36270) * C2287 +
            (C36269 + C36268) * C2286) *
               C50734 * C50795 * C50831) *
              C1024 +
          (((C33462 + C33461) * C2286 + (C33463 + C33464) * C2287 +
            (C36274 + C36275) * C2288) *
               C50734 * C50795 * C50831 -
           (C36249 * C2288 + (C33461 + C33462) * C2287 +
            (C33254 + C33253) * C2286) *
               C50734 * C50795 * C1022) *
              C1025 +
          ((C33261 * C2286 + (C33460 + C33459) * C2287 +
            (C33465 + C33466) * C2288) *
               C50734 * C50795 * C1022 -
           ((C33206 * C3172 + C34455 + C34455 + C50956 * C3178 +
             C33204 * C1099 + C34456 + C34456 + C33202 * C1107) *
                C2288 +
            (C33466 + C33465) * C2287 + C33815 * C2286) *
               C50734 * C50795 * C50831) *
              C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
            C33210 + C33210 + C50956 * C480) *
               C2286 +
           (C36268 + C36269) * C2287 + C36276 * C2288) *
              C50734 * C50795 * C1093 -
          (C37191 * C2288 + (C36271 + C36270) * C2287 +
           (C36269 + C36268) * C2286) *
              C50734 * C50795 * C1094 +
          (C36276 * C2286 + (C36273 + C36272) * C2287 +
           (C37202 + C37203) * C2288) *
              C50734 * C50795 * C1095 -
          ((C33206 * C20943 + C37196 + C37196 + C50956 * C20945 +
            C33204 * C3445 + C37197 + C37197 + C33202 * C3449) *
               C2288 +
           (C37203 + C37202) * C2287 + C37191 * C2286) *
              C50734 * C50795 * C1096) *
         C50760) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C38820 * C119 + C38829 + C38829 + C38816 * C133 + C38822 * C460 +
            C38830 + C38830 + C38817 * C480 + C38824 * C461 + C38831 + C38831 +
            C38818 * C481 + C38826 * C1846 + C38832 + C38832 + C38819 * C1854) *
               C50877 * C50734 * C50795 * C1022 -
           (C38826 * C4513 + C38943 + C38943 + C38819 * C4521 + C38824 * C1215 +
            C38944 + C38944 + C38818 * C1223 + C38822 * C886 + C38945 + C38945 +
            C38817 * C896 + C38820 * C283 + C38946 + C38946 + C38816 * C303) *
               C50877 * C50734 * C50795 * C50831) *
              C1024 +
          ((C38820 * C282 + C38951 + C38951 + C38816 * C302 + C38822 * C887 +
            C38952 + C38952 + C38817 * C897 + C38824 * C1214 + C38953 + C38953 +
            C38818 * C1222 + C38826 * C4511 + C38954 + C38954 +
            C38819 * C4519) *
               C50877 * C50734 * C50795 * C50831 -
           (C38826 * C1845 + C38833 + C38833 + C38819 * C1853 + C38824 * C462 +
            C38834 + C38834 + C38818 * C482 + C38822 * C459 + C38835 + C38835 +
            C38817 * C479 + C38820 * C120 + C38836 + C38836 + C38816 * C134) *
               C50877 * C50734 * C50795 * C1022) *
              C1025 +
          ((C38820 * C121 + C38837 + C38837 + C38816 * C135 + C38822 * C458 +
            C38838 + C38838 + C38817 * C478 + C38824 * C463 + C38839 + C38839 +
            C38818 * C483 + C38826 * C1844 + C38840 + C38840 + C38819 * C1852) *
               C50877 * C50734 * C50795 * C1022 -
           (C38826 * C6098 + C39171 + C39171 + C38819 * C6100 + C38824 * C1213 +
            C39172 + C39172 + C38818 * C1221 + C38822 * C888 + C39173 + C39173 +
            C38817 * C898 + C38820 * C281 + C39174 + C39174 + C38816 * C301) *
               C50877 * C50734 * C50795 * C50831) *
              C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C38820 * C119 + C38829 + C38829 + C38816 * C133 + C38822 * C460 +
           C38830 + C38830 + C38817 * C480 + C38824 * C461 + C38831 + C38831 +
           C38818 * C481 + C38826 * C1846 + C38832 + C38832 + C38819 * C1854) *
              C50877 * C50734 * C50795 * C1093 -
          (C38826 * C4513 + C38943 + C38943 + C38819 * C4521 + C38824 * C1215 +
           C38944 + C38944 + C38818 * C1223 + C38822 * C886 + C38945 + C38945 +
           C38817 * C896 + C38820 * C283 + C38946 + C38946 + C38816 * C303) *
              C50877 * C50734 * C50795 * C1094 +
          (C38820 * C284 + C38947 + C38947 + C38816 * C304 + C38822 * C1562 +
           C38948 + C38948 + C38817 * C1570 + C38824 * C2640 + C38949 + C38949 +
           C38818 * C2646 + C38826 * C4512 + C38950 + C38950 + C38819 * C4520) *
              C50877 * C50734 * C50795 * C1095 -
          (C38826 * C21214 + C39579 + C39579 + C38819 * C21216 +
           C38824 * C3604 + C39580 + C39580 + C38818 * C3608 + C38822 * C3170 +
           C39581 + C39581 + C38817 * C3176 + C38820 * C1101 + C39582 + C39582 +
           C38816 * C1109) *
              C50877 * C50734 * C50795 * C1096) *
         C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[190] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
              C33210 + C33210 + C50956 * C480) *
                 C2286 +
             (C36268 + C36269) * C2287 + C36276 * C2288) *
                C50734 * C1673 -
            (C37858 * C2288 + (C36943 + C36944) * C2287 +
             (C33206 * C461 + C33625 + C33625 + C50956 * C481 + C33204 * C460 +
              C33626 + C33626 + C33202 * C480) *
                 C2286) *
                C50734 * C50859) *
               C51003 +
           (((C36944 + C36943) * C2286 + (C36942 + C36941) * C2287 +
             (C37869 + C37870) * C2288) *
                C50734 * C50859 -
            (C37191 * C2288 + (C36271 + C36270) * C2287 +
             (C36269 + C36268) * C2286) *
                C50734 * C1673) *
               C50831) *
              C50995 +
          ((((C33664 + C33663) * C2286 + (C34207 + C34208) * C2287 +
             (C36945 + C36946) * C2288) *
                C50734 * C50859 -
            (C36249 * C2288 + (C33461 + C33462) * C2287 +
             (C33254 + C33253) * C2286) *
                C50734 * C1673) *
               C51003 +
           (((C33462 + C33461) * C2286 + (C33463 + C33464) * C2287 +
             (C36274 + C36275) * C2288) *
                C50734 * C1673 -
            ((C33206 * C3603 + C36927 + C36927 + C50956 * C3607 +
              C33204 * C3171 + C36928 + C36928 + C33202 * C3177) *
                 C2288 +
             (C36946 + C36945) * C2287 + (C34208 + C34207) * C2286) *
                C50734 * C50859) *
               C50831) *
              C50766)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
              C33210 + C33210 + C50956 * C480) *
                 C50877 * C17175 +
             (C33253 + C33254) * C50877 * C17176 + C33263 * C17177) *
                C1673 -
            (C33982 * C17177 + (C33663 + C33664) * C50877 * C17176 +
             (C33206 * C461 + C33625 + C33625 + C50956 * C481 + C33204 * C460 +
              C33626 + C33626 + C33202 * C480) *
                 C50877 * C17175) *
                C50859) *
               C51003 +
           (((C33204 * C886 + C34183 + C34183 + C33202 * C896 + C33206 * C1215 +
              C34184 + C34184 + C50956 * C1223) *
                 C50877 * C17175 +
             (C34207 + C34208) * C50877 * C17176 +
             (C34209 + C34210) * C50877 * C17177) *
                C50859 -
            (C33822 * C17177 + (C33461 + C33462) * C50877 * C17176 +
             (C33206 * C886 + C33423 + C33423 + C50956 * C896 + C33204 * C283 +
              C33424 + C33424 + C33202 * C303) *
                 C50877 * C17175) *
                C1673) *
               C50831) *
              C50995 +
          ((((C33664 + C33663) * C50877 * C17175 +
             (C33662 + C33661) * C50877 * C17176 +
             (C33987 + C33988) * C50877 * C17177) *
                C50859 -
            (C33264 * C17177 + (C33256 + C33255) * C50877 * C17176 +
             (C33254 + C33253) * C50877 * C17175) *
                C1673) *
               C51003 +
           (((C33462 + C33461) * C50877 * C17175 +
             (C33460 + C33459) * C50877 * C17176 +
             (C33827 + C33828) * C50877 * C17177) *
                C1673 -
            ((C33206 * C1212 + C34197 + C34197 + C50956 * C1220 +
              C33204 * C889 + C34198 + C34198 + C33202 * C899) *
                 C50877 * C17177 +
             (C34210 + C34209) * C50877 * C17176 +
             (C34208 + C34207) * C50877 * C17175) *
                C50859) *
               C50831) *
              C50766)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C38820 * C119 + C38829 + C38829 + C38816 * C133 + C38822 * C460 +
             C38830 + C38830 + C38817 * C480 + C38824 * C461 + C38831 + C38831 +
             C38818 * C481 + C38826 * C1846 + C38832 + C38832 +
             C38819 * C1854) *
                C50877 * C50734 * C1673 -
            (C38826 * C5519 + C39057 + C39057 + C38819 * C5525 +
             C38824 * C1846 + C39058 + C39058 + C38818 * C1854 + C38822 * C461 +
             C39059 + C39059 + C38817 * C481 + C38820 * C460 + C39060 + C39060 +
             C38816 * C480) *
                C50877 * C50734 * C50859) *
               C51003 +
           ((C38820 * C886 + C39407 + C39407 + C38816 * C896 + C38822 * C1215 +
             C39408 + C39408 + C38817 * C1223 + C38824 * C4513 + C39409 +
             C39409 + C38818 * C4521 + C38826 * C6522 + C39410 + C39410 +
             C38819 * C6526) *
                C50877 * C50734 * C50859 -
            (C38826 * C4513 + C38943 + C38943 + C38819 * C4521 +
             C38824 * C1215 + C38944 + C38944 + C38818 * C1223 + C38822 * C886 +
             C38945 + C38945 + C38817 * C896 + C38820 * C283 + C38946 + C38946 +
             C38816 * C303) *
                C50877 * C50734 * C1673) *
               C50831) *
              C50995 +
          (((C38820 * C459 + C39065 + C39065 + C38816 * C479 + C38822 * C462 +
             C39066 + C39066 + C38817 * C482 + C38824 * C1845 + C39067 +
             C39067 + C38818 * C1853 + C38826 * C5520 + C39068 + C39068 +
             C38819 * C5526) *
                C50877 * C50734 * C50859 -
            (C38826 * C1845 + C38833 + C38833 + C38819 * C1853 + C38824 * C462 +
             C38834 + C38834 + C38818 * C482 + C38822 * C459 + C38835 + C38835 +
             C38817 * C479 + C38820 * C120 + C38836 + C38836 + C38816 * C134) *
                C50877 * C50734 * C1673) *
               C51003 +
           ((C38820 * C282 + C38951 + C38951 + C38816 * C302 + C38822 * C887 +
             C38952 + C38952 + C38817 * C897 + C38824 * C1214 + C38953 +
             C38953 + C38818 * C1222 + C38826 * C4511 + C38954 + C38954 +
             C38819 * C4519) *
                C50877 * C50734 * C1673 -
            (C38826 * C6521 + C39411 + C39411 + C38819 * C6525 +
             C38824 * C4511 + C39412 + C39412 + C38818 * C4519 +
             C38822 * C1214 + C39413 + C39413 + C38817 * C1222 + C38820 * C887 +
             C39414 + C39414 + C38816 * C897) *
                C50877 * C50734 * C50859) *
               C50831) *
              C50766)) /
            (p * q * std::sqrt(p + q));
    d2ee[191] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
             C33210 + C33210 + C50956 * C480) *
                C2286 +
            (C36268 + C36269) * C2287 + C36276 * C2288) *
               C50734 * C51050 -
           (C37858 * C2288 + (C36943 + C36944) * C2287 +
            (C33206 * C461 + C33625 + C33625 + C50956 * C481 + C33204 * C460 +
             C33626 + C33626 + C33202 * C480) *
                C2286) *
               C50734 * C51051 +
           ((C33204 * C461 + C33627 + C33627 + C33202 * C481 + C33206 * C1846 +
             C33628 + C33628 + C50956 * C1854) *
                C2286 +
            (C37368 + C37369) * C2287 + (C37370 + C37371) * C2288) *
               C50734 * C2089) *
              C51003 +
          (((C36944 + C36943) * C2286 + (C36942 + C36941) * C2287 +
            (C37869 + C37870) * C2288) *
               C50734 * C51051 -
           (C37191 * C2288 + (C36271 + C36270) * C2287 +
            (C36269 + C36268) * C2286) *
               C50734 * C51050 -
           ((C33206 * C21214 + C37358 + C37358 + C50956 * C21216 +
             C33204 * C3604 + C37359 + C37359 + C33202 * C3608) *
                C2288 +
            (C37371 + C37370) * C2287 + (C37369 + C37368) * C2286) *
               C50734 * C2089) *
              C50831) *
         C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
             C33210 + C33210 + C50956 * C480) *
                C50877 * C17175 +
            (C33253 + C33254) * C50877 * C17176 + C33263 * C17177) *
               C51050 -
           (C33982 * C17177 + (C33663 + C33664) * C50877 * C17176 +
            (C33206 * C461 + C33625 + C33625 + C50956 * C481 + C33204 * C460 +
             C33626 + C33626 + C33202 * C480) *
                C50877 * C17175) *
               C51051 +
           ((C33204 * C461 + C33627 + C33627 + C33202 * C481 + C33206 * C1846 +
             C33628 + C33628 + C50956 * C1854) *
                C50877 * C17175 +
            (C33665 + C33666) * C50877 * C17176 +
            (C33667 + C33668) * C50877 * C17177) *
               C2089) *
              C51003 +
          (((C33204 * C886 + C34183 + C34183 + C33202 * C896 + C33206 * C1215 +
             C34184 + C34184 + C50956 * C1223) *
                C50877 * C17175 +
            (C34207 + C34208) * C50877 * C17176 +
            (C34209 + C34210) * C50877 * C17177) *
               C51051 -
           (C33822 * C17177 + (C33461 + C33462) * C50877 * C17176 +
            (C33206 * C886 + C33423 + C33423 + C50956 * C896 + C33204 * C283 +
             C33424 + C33424 + C33202 * C303) *
                C50877 * C17175) *
               C51050 -
           ((C33206 * C6098 + C34607 + C34607 + C50956 * C6100 +
             C33204 * C1213 + C34608 + C34608 + C33202 * C1221) *
                C50877 * C17177 +
            (C33206 * C4511 + C34609 + C34609 + C50956 * C4519 +
             C33204 * C1214 + C34610 + C34610 + C33202 * C1222) *
                C50877 * C17176 +
            (C33206 * C4513 + C34611 + C34611 + C50956 * C4521 +
             C33204 * C1215 + C34612 + C34612 + C33202 * C1223) *
                C50877 * C17175) *
               C2089) *
              C50831) *
         C50760) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C38820 * C119 + C38829 + C38829 + C38816 * C133 + C38822 * C460 +
            C38830 + C38830 + C38817 * C480 + C38824 * C461 + C38831 + C38831 +
            C38818 * C481 + C38826 * C1846 + C38832 + C38832 + C38819 * C1854) *
               C50877 * C50734 * C51050 -
           (C38826 * C5519 + C39057 + C39057 + C38819 * C5525 + C38824 * C1846 +
            C39058 + C39058 + C38818 * C1854 + C38822 * C461 + C39059 + C39059 +
            C38817 * C481 + C38820 * C460 + C39060 + C39060 + C38816 * C480) *
               C50877 * C50734 * C51051 +
           (C38820 * C461 + C39061 + C39061 + C38816 * C481 + C38822 * C1846 +
            C39062 + C39062 + C38817 * C1854 + C38824 * C5519 + C39063 +
            C39063 + C38818 * C5525 + C38826 * C7416 + C39064 + C39064 +
            C38819 * C7420) *
               C50877 * C50734 * C2089) *
              C51003 +
          ((C38820 * C886 + C39407 + C39407 + C38816 * C896 + C38822 * C1215 +
            C39408 + C39408 + C38817 * C1223 + C38824 * C4513 + C39409 +
            C39409 + C38818 * C4521 + C38826 * C6522 + C39410 + C39410 +
            C38819 * C6526) *
               C50877 * C50734 * C51051 -
           (C38826 * C4513 + C38943 + C38943 + C38819 * C4521 + C38824 * C1215 +
            C38944 + C38944 + C38818 * C1223 + C38822 * C886 + C38945 + C38945 +
            C38817 * C896 + C38820 * C283 + C38946 + C38946 + C38816 * C303) *
               C50877 * C50734 * C51050 -
           (C38826 * C23788 + C39681 + C39681 + C38819 * C23790 +
            C38824 * C6522 + C39682 + C39682 + C38818 * C6526 + C38822 * C4513 +
            C39683 + C39683 + C38817 * C4521 + C38820 * C1215 + C39684 +
            C39684 + C38816 * C1223) *
               C50877 * C50734 * C2089) *
              C50831) *
         C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                 C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                    C50877 * C17175 +
                (C33253 + C33254) * C50877 * C17176 + C33263 * C17177) *
                   C1673 -
               (C33982 * C17177 + (C33663 + C33664) * C50877 * C17176 +
                (C33206 * C461 + C33625 + C33625 + C50956 * C481 +
                 C33204 * C460 + C33626 + C33626 + C33202 * C480) *
                    C50877 * C17175) *
                   C50859) *
                  C50779 * C1024 +
              (((C33664 + C33663) * C50877 * C17175 +
                (C33662 + C33661) * C50877 * C17176 +
                (C33987 + C33988) * C50877 * C17177) *
                   C50859 -
               (C33264 * C17177 + (C33256 + C33255) * C50877 * C17176 +
                (C33254 + C33253) * C50877 * C17175) *
                   C1673) *
                  C50779 * C1025 +
              ((C33263 * C17175 + (C33258 + C33257) * C50877 * C17176 +
                (C33259 + C33260) * C50877 * C17177) *
                   C1673 -
               ((C33206 * C466 + C33980 + C33980 + C50956 * C486 +
                 C33204 * C465 + C33981 + C33981 + C33202 * C485) *
                    C50877 * C17177 +
                (C33988 + C33987) * C50877 * C17176 + C33982 * C17175) *
                   C50859) *
                  C50779 * C1026) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                 C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                    C50877 * C17175 +
                (C33253 + C33254) * C50877 * C17176 + C33263 * C17177) *
                   C1673 -
               (C33982 * C17177 + (C33663 + C33664) * C50877 * C17176 +
                (C33206 * C461 + C33625 + C33625 + C50956 * C481 +
                 C33204 * C460 + C33626 + C33626 + C33202 * C480) *
                    C50877 * C17175) *
                   C50859) *
                  C275 +
              (((C33204 * C886 + C34183 + C34183 + C33202 * C896 +
                 C33206 * C1215 + C34184 + C34184 + C50956 * C1223) *
                    C50877 * C17175 +
                (C34207 + C34208) * C50877 * C17176 +
                (C34209 + C34210) * C50877 * C17177) *
                   C50859 -
               (C33822 * C17177 + (C33461 + C33462) * C50877 * C17176 +
                (C33206 * C886 + C33423 + C33423 + C50956 * C896 +
                 C33204 * C283 + C33424 + C33424 + C33202 * C303) *
                    C50877 * C17175) *
                   C1673) *
                  C276 +
              (((C33204 * C284 + C33425 + C33425 + C33202 * C304 +
                 C33206 * C1562 + C33426 + C33426 + C50956 * C1570) *
                    C50877 * C17175 +
                (C33463 + C33464) * C50877 * C17176 +
                (C33465 + C33466) * C50877 * C17177) *
                   C1673 -
               ((C33206 * C2642 + C35099 + C35099 + C50956 * C2648 +
                 C33204 * C1560 + C35100 + C35100 + C33202 * C1568) *
                    C50877 * C17177 +
                (C33206 * C2641 + C35101 + C35101 + C50956 * C2647 +
                 C33204 * C1561 + C35102 + C35102 + C33202 * C1569) *
                    C50877 * C17176 +
                (C33206 * C2640 + C35103 + C35103 + C50956 * C2646 +
                 C33204 * C1562 + C35104 + C35104 + C33202 * C1570) *
                    C50877 * C17175) *
                   C50859) *
                  C277) *
             C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
            C33210 + C33210 + C50956 * C480) *
               C50877 * C17175 +
           (C33253 + C33254) * C50877 * C17176 + C33263 * C17177) *
              C1839 -
          (C33982 * C17177 + (C33663 + C33664) * C50877 * C17176 +
           (C33206 * C461 + C33625 + C33625 + C50956 * C481 + C33204 * C460 +
            C33626 + C33626 + C33202 * C480) *
               C50877 * C17175) *
              C1840 +
          ((C33204 * C461 + C33627 + C33627 + C33202 * C481 + C33206 * C1846 +
            C33628 + C33628 + C50956 * C1854) *
               C50877 * C17175 +
           (C33665 + C33666) * C50877 * C17176 +
           (C33667 + C33668) * C50877 * C17177) *
              C1841 -
          ((C33206 * C5521 + C35495 + C35495 + C50956 * C5527 + C33204 * C1844 +
            C35496 + C35496 + C33202 * C1852) *
               C50877 * C17177 +
           (C33206 * C5520 + C35497 + C35497 + C50956 * C5526 + C33204 * C1845 +
            C35498 + C35498 + C33202 * C1853) *
               C50877 * C17176 +
           (C33206 * C5519 + C35499 + C35499 + C50956 * C5525 + C33204 * C1846 +
            C35500 + C35500 + C33202 * C1854) *
               C50877 * C17175) *
              C1842) *
         C50779 * C50760) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
             C33210 + C33210 + C50956 * C480) *
                C2286 +
            (C36268 + C36269) * C2287 + C36276 * C2288) *
               C50734 * C1673 -
           (C37858 * C2288 + (C36943 + C36944) * C2287 +
            (C33206 * C461 + C33625 + C33625 + C50956 * C481 + C33204 * C460 +
             C33626 + C33626 + C33202 * C480) *
                C2286) *
               C50734 * C50859) *
              C50779 * C1024 +
          (((C33664 + C33663) * C2286 + (C34207 + C34208) * C2287 +
            (C36945 + C36946) * C2288) *
               C50734 * C50859 -
           (C36249 * C2288 + (C33461 + C33462) * C2287 +
            (C33254 + C33253) * C2286) *
               C50734 * C1673) *
              C50779 * C1025 +
          ((C33261 * C2286 + (C33460 + C33459) * C2287 +
            (C33465 + C33466) * C2288) *
               C50734 * C1673 -
           ((C33206 * C2642 + C35099 + C35099 + C50956 * C2648 +
             C33204 * C1560 + C35100 + C35100 + C33202 * C1568) *
                C2288 +
            (C34210 + C34209) * C2287 + C33975 * C2286) *
               C50734 * C50859) *
              C50779 * C1026)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
             C33210 + C33210 + C50956 * C480) *
                C2286 +
            (C36268 + C36269) * C2287 + C36276 * C2288) *
               C50734 * C1673 -
           (C37858 * C2288 + (C36943 + C36944) * C2287 +
            (C33206 * C461 + C33625 + C33625 + C50956 * C481 + C33204 * C460 +
             C33626 + C33626 + C33202 * C480) *
                C2286) *
               C50734 * C50859) *
              C275 +
          (((C36944 + C36943) * C2286 + (C36942 + C36941) * C2287 +
            (C37869 + C37870) * C2288) *
               C50734 * C50859 -
           (C37191 * C2288 + (C36271 + C36270) * C2287 +
            (C36269 + C36268) * C2286) *
               C50734 * C1673) *
              C276 +
          ((C36276 * C2286 + (C36273 + C36272) * C2287 +
            (C37202 + C37203) * C2288) *
               C50734 * C1673 -
           ((C33206 * C20608 + C37863 + C37863 + C50956 * C20610 +
             C33204 * C4108 + C37864 + C37864 + C33202 * C4112) *
                C2288 +
            (C37870 + C37869) * C2287 + C37858 * C2286) *
               C50734 * C50859) *
              C277) *
         C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
            C33210 + C33210 + C50956 * C480) *
               C2286 +
           (C36268 + C36269) * C2287 + C36276 * C2288) *
              C50734 * C1839 -
          (C37858 * C2288 + (C36943 + C36944) * C2287 +
           (C33206 * C461 + C33625 + C33625 + C50956 * C481 + C33204 * C460 +
            C33626 + C33626 + C33202 * C480) *
               C2286) *
              C50734 * C1840 +
          ((C33204 * C461 + C33627 + C33627 + C33202 * C481 + C33206 * C1846 +
            C33628 + C33628 + C50956 * C1854) *
               C2286 +
           (C37368 + C37369) * C2287 + (C37370 + C37371) * C2288) *
              C50734 * C1841 -
          ((C33206 * C22873 + C38261 + C38261 + C50956 * C22875 +
            C33204 * C4512 + C38262 + C38262 + C33202 * C4520) *
               C2288 +
           (C33206 * C6522 + C38263 + C38263 + C50956 * C6526 + C33204 * C4513 +
            C38264 + C38264 + C33202 * C4521) *
               C2287 +
           (C33206 * C5519 + C35499 + C35499 + C50956 * C5525 + C33204 * C1846 +
            C35500 + C35500 + C33202 * C1854) *
               C2286) *
              C50734 * C1842) *
         C50779 * C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C38820 * C119 + C38829 + C38829 + C38816 * C133 + C38822 * C460 +
            C38830 + C38830 + C38817 * C480 + C38824 * C461 + C38831 + C38831 +
            C38818 * C481 + C38826 * C1846 + C38832 + C38832 + C38819 * C1854) *
               C50877 * C50734 * C1673 -
           (C38826 * C5519 + C39057 + C39057 + C38819 * C5525 + C38824 * C1846 +
            C39058 + C39058 + C38818 * C1854 + C38822 * C461 + C39059 + C39059 +
            C38817 * C481 + C38820 * C460 + C39060 + C39060 + C38816 * C480) *
               C50877 * C50734 * C50859) *
              C50779 * C1024 +
          ((C38820 * C459 + C39065 + C39065 + C38816 * C479 + C38822 * C462 +
            C39066 + C39066 + C38817 * C482 + C38824 * C1845 + C39067 + C39067 +
            C38818 * C1853 + C38826 * C5520 + C39068 + C39068 +
            C38819 * C5526) *
               C50877 * C50734 * C50859 -
           (C38826 * C1845 + C38833 + C38833 + C38819 * C1853 + C38824 * C462 +
            C38834 + C38834 + C38818 * C482 + C38822 * C459 + C38835 + C38835 +
            C38817 * C479 + C38820 * C120 + C38836 + C38836 + C38816 * C134) *
               C50877 * C50734 * C1673) *
              C50779 * C1025 +
          ((C38820 * C121 + C38837 + C38837 + C38816 * C135 + C38822 * C458 +
            C38838 + C38838 + C38817 * C478 + C38824 * C463 + C38839 + C38839 +
            C38818 * C483 + C38826 * C1844 + C38840 + C38840 + C38819 * C1852) *
               C50877 * C50734 * C1673 -
           (C38826 * C5521 + C39273 + C39273 + C38819 * C5527 + C38824 * C1844 +
            C39274 + C39274 + C38818 * C1852 + C38822 * C463 + C39275 + C39275 +
            C38817 * C483 + C38820 * C458 + C39276 + C39276 + C38816 * C478) *
               C50877 * C50734 * C50859) *
              C50779 * C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C38820 * C119 + C38829 + C38829 + C38816 * C133 + C38822 * C460 +
            C38830 + C38830 + C38817 * C480 + C38824 * C461 + C38831 + C38831 +
            C38818 * C481 + C38826 * C1846 + C38832 + C38832 + C38819 * C1854) *
               C50877 * C50734 * C1673 -
           (C38826 * C5519 + C39057 + C39057 + C38819 * C5525 + C38824 * C1846 +
            C39058 + C39058 + C38818 * C1854 + C38822 * C461 + C39059 + C39059 +
            C38817 * C481 + C38820 * C460 + C39060 + C39060 + C38816 * C480) *
               C50877 * C50734 * C50859) *
              C275 +
          ((C38820 * C886 + C39407 + C39407 + C38816 * C896 + C38822 * C1215 +
            C39408 + C39408 + C38817 * C1223 + C38824 * C4513 + C39409 +
            C39409 + C38818 * C4521 + C38826 * C6522 + C39410 + C39410 +
            C38819 * C6526) *
               C50877 * C50734 * C50859 -
           (C38826 * C4513 + C38943 + C38943 + C38819 * C4521 + C38824 * C1215 +
            C38944 + C38944 + C38818 * C1223 + C38822 * C886 + C38945 + C38945 +
            C38817 * C896 + C38820 * C283 + C38946 + C38946 + C38816 * C303) *
               C50877 * C50734 * C1673) *
              C276 +
          ((C38820 * C284 + C38947 + C38947 + C38816 * C304 + C38822 * C1562 +
            C38948 + C38948 + C38817 * C1570 + C38824 * C2640 + C38949 +
            C38949 + C38818 * C2646 + C38826 * C4512 + C38950 + C38950 +
            C38819 * C4520) *
               C50877 * C50734 * C1673 -
           (C38826 * C22873 + C40011 + C40011 + C38819 * C22875 +
            C38824 * C4512 + C40012 + C40012 + C38818 * C4520 + C38822 * C2640 +
            C40013 + C40013 + C38817 * C2646 + C38820 * C1562 + C40014 +
            C40014 + C38816 * C1570) *
               C50877 * C50734 * C50859) *
              C277) *
         C50760) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((C38820 * C119 + C38829 + C38829 + C38816 * C133 + C38822 * C460 +
           C38830 + C38830 + C38817 * C480 + C38824 * C461 + C38831 + C38831 +
           C38818 * C481 + C38826 * C1846 + C38832 + C38832 + C38819 * C1854) *
              C50877 * C50734 * C1839 -
          (C38826 * C5519 + C39057 + C39057 + C38819 * C5525 + C38824 * C1846 +
           C39058 + C39058 + C38818 * C1854 + C38822 * C461 + C39059 + C39059 +
           C38817 * C481 + C38820 * C460 + C39060 + C39060 + C38816 * C480) *
              C50877 * C50734 * C1840 +
          (C38820 * C461 + C39061 + C39061 + C38816 * C481 + C38822 * C1846 +
           C39062 + C39062 + C38817 * C1854 + C38824 * C5519 + C39063 + C39063 +
           C38818 * C5525 + C38826 * C7416 + C39064 + C39064 + C38819 * C7420) *
              C50877 * C50734 * C1841 -
          (C38826 * C40276 + C40280 + C40280 + C38819 * C40278 +
           C38824 * C7416 + C40281 + C40281 + C38818 * C7420 + C38822 * C5519 +
           C40282 + C40282 + C38817 * C5525 + C38820 * C1846 + C40283 + C40283 +
           C38816 * C1854) *
              C50877 * C50734 * C1842) *
         C50779 * C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[193] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
             C33210 + C33210 + C50956 * C480) *
                C2286 +
            (C36268 + C36269) * C2287 + C36276 * C2288) *
               C50734 * C51050 -
           (C37858 * C2288 + (C36943 + C36944) * C2287 +
            (C33206 * C461 + C33625 + C33625 + C50956 * C481 + C33204 * C460 +
             C33626 + C33626 + C33202 * C480) *
                C2286) *
               C50734 * C51051 +
           ((C33204 * C461 + C33627 + C33627 + C33202 * C481 + C33206 * C1846 +
             C33628 + C33628 + C50956 * C1854) *
                C2286 +
            (C37368 + C37369) * C2287 + (C37370 + C37371) * C2288) *
               C50734 * C2089) *
              C50779 * C50995 +
          (((C33664 + C33663) * C2286 + (C34207 + C34208) * C2287 +
            (C36945 + C36946) * C2288) *
               C50734 * C51051 -
           (C36249 * C2288 + (C33461 + C33462) * C2287 +
            (C33254 + C33253) * C2286) *
               C50734 * C51050 -
           ((C33206 * C4510 + C36425 + C36425 + C50956 * C4518 +
             C33204 * C2641 + C36426 + C36426 + C33202 * C2647) *
                C2288 +
            (C33206 * C4511 + C34609 + C34609 + C50956 * C4519 +
             C33204 * C1214 + C34610 + C34610 + C33202 * C1222) *
                C2287 +
            (C33666 + C33665) * C2286) *
               C50734 * C2089) *
              C50779 * C50766)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
             C33210 + C33210 + C50956 * C480) *
                C50877 * C17175 +
            (C33253 + C33254) * C50877 * C17176 + C33263 * C17177) *
               C51050 -
           (C33982 * C17177 + (C33663 + C33664) * C50877 * C17176 +
            (C33206 * C461 + C33625 + C33625 + C50956 * C481 + C33204 * C460 +
             C33626 + C33626 + C33202 * C480) *
                C50877 * C17175) *
               C51051 +
           ((C33204 * C461 + C33627 + C33627 + C33202 * C481 + C33206 * C1846 +
             C33628 + C33628 + C50956 * C1854) *
                C50877 * C17175 +
            (C33665 + C33666) * C50877 * C17176 +
            (C33667 + C33668) * C50877 * C17177) *
               C2089) *
              C50779 * C50995 +
          (((C33664 + C33663) * C50877 * C17175 +
            (C33662 + C33661) * C50877 * C17176 +
            (C33987 + C33988) * C50877 * C17177) *
               C51051 -
           (C33264 * C17177 + (C33256 + C33255) * C50877 * C17176 +
            (C33254 + C33253) * C50877 * C17175) *
               C51050 -
           ((C33206 * C1843 + C33643 + C33643 + C50956 * C1851 + C33204 * C464 +
             C33644 + C33644 + C33202 * C484) *
                C50877 * C17177 +
            (C33668 + C33667) * C50877 * C17176 +
            (C33666 + C33665) * C50877 * C17175) *
               C2089) *
              C50779 * C50766)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C38820 * C119 + C38829 + C38829 + C38816 * C133 + C38822 * C460 +
            C38830 + C38830 + C38817 * C480 + C38824 * C461 + C38831 + C38831 +
            C38818 * C481 + C38826 * C1846 + C38832 + C38832 + C38819 * C1854) *
               C50877 * C50734 * C51050 -
           (C38826 * C5519 + C39057 + C39057 + C38819 * C5525 + C38824 * C1846 +
            C39058 + C39058 + C38818 * C1854 + C38822 * C461 + C39059 + C39059 +
            C38817 * C481 + C38820 * C460 + C39060 + C39060 + C38816 * C480) *
               C50877 * C50734 * C51051 +
           (C38820 * C461 + C39061 + C39061 + C38816 * C481 + C38822 * C1846 +
            C39062 + C39062 + C38817 * C1854 + C38824 * C5519 + C39063 +
            C39063 + C38818 * C5525 + C38826 * C7416 + C39064 + C39064 +
            C38819 * C7420) *
               C50877 * C50734 * C2089) *
              C50779 * C50995 +
          ((C38820 * C459 + C39065 + C39065 + C38816 * C479 + C38822 * C462 +
            C39066 + C39066 + C38817 * C482 + C38824 * C1845 + C39067 + C39067 +
            C38818 * C1853 + C38826 * C5520 + C39068 + C39068 +
            C38819 * C5526) *
               C50877 * C50734 * C51051 -
           (C38826 * C1845 + C38833 + C38833 + C38819 * C1853 + C38824 * C462 +
            C38834 + C38834 + C38818 * C482 + C38822 * C459 + C38835 + C38835 +
            C38817 * C479 + C38820 * C120 + C38836 + C38836 + C38816 * C134) *
               C50877 * C50734 * C51050 -
           (C38826 * C7415 + C39069 + C39069 + C38819 * C7419 + C38824 * C5520 +
            C39070 + C39070 + C38818 * C5526 + C38822 * C1845 + C39071 +
            C39071 + C38817 * C1853 + C38820 * C462 + C39072 + C39072 +
            C38816 * C482) *
               C50877 * C50734 * C2089) *
              C50779 * C50766)) /
            (p * q * std::sqrt(p + q));
    d2ee[194] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
             C33210 + C33210 + C50956 * C480) *
                C50877 * C17175 +
            (C33253 + C33254) * C50877 * C17176 + C33263 * C17177) *
               C1673 -
           (C33982 * C17177 + (C33663 + C33664) * C50877 * C17176 +
            (C33206 * C461 + C33625 + C33625 + C50956 * C481 + C33204 * C460 +
             C33626 + C33626 + C33202 * C480) *
                C50877 * C17175) *
               C50859) *
              C275 +
          (((C33204 * C886 + C34183 + C34183 + C33202 * C896 + C33206 * C1215 +
             C34184 + C34184 + C50956 * C1223) *
                C50877 * C17175 +
            (C34207 + C34208) * C50877 * C17176 +
            (C34209 + C34210) * C50877 * C17177) *
               C50859 -
           (C33822 * C17177 + (C33461 + C33462) * C50877 * C17176 +
            (C33206 * C886 + C33423 + C33423 + C50956 * C896 + C33204 * C283 +
             C33424 + C33424 + C33202 * C303) *
                C50877 * C17175) *
               C1673) *
              C276 +
          (((C33204 * C284 + C33425 + C33425 + C33202 * C304 + C33206 * C1562 +
             C33426 + C33426 + C50956 * C1570) *
                C50877 * C17175 +
            (C33463 + C33464) * C50877 * C17176 +
            (C33465 + C33466) * C50877 * C17177) *
               C1673 -
           ((C33206 * C2642 + C35099 + C35099 + C50956 * C2648 +
             C33204 * C1560 + C35100 + C35100 + C33202 * C1568) *
                C50877 * C17177 +
            (C33206 * C2641 + C35101 + C35101 + C50956 * C2647 +
             C33204 * C1561 + C35102 + C35102 + C33202 * C1569) *
                C50877 * C17176 +
            (C33206 * C2640 + C35103 + C35103 + C50956 * C2646 +
             C33204 * C1562 + C35104 + C35104 + C33202 * C1570) *
                C50877 * C17175) *
               C50859) *
              C277) *
         C50760) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
             C33210 + C33210 + C50956 * C480) *
                C50877 * C17175 +
            (C33253 + C33254) * C50877 * C17176 + C33263 * C17177) *
               C1673 -
           (C33982 * C17177 + (C33663 + C33664) * C50877 * C17176 +
            (C33206 * C461 + C33625 + C33625 + C50956 * C481 + C33204 * C460 +
             C33626 + C33626 + C33202 * C480) *
                C50877 * C17175) *
               C50859) *
              C50779 * C1024 +
          (((C33664 + C33663) * C50877 * C17175 +
            (C33662 + C33661) * C50877 * C17176 +
            (C33987 + C33988) * C50877 * C17177) *
               C50859 -
           (C33264 * C17177 + (C33256 + C33255) * C50877 * C17176 +
            (C33254 + C33253) * C50877 * C17175) *
               C1673) *
              C50779 * C1025 +
          ((C33263 * C17175 + (C33258 + C33257) * C50877 * C17176 +
            (C33259 + C33260) * C50877 * C17177) *
               C1673 -
           ((C33206 * C466 + C33980 + C33980 + C50956 * C486 + C33204 * C465 +
             C33981 + C33981 + C33202 * C485) *
                C50877 * C17177 +
            (C33988 + C33987) * C50877 * C17176 + C33982 * C17175) *
               C50859) *
              C50779 * C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
             C33210 + C33210 + C50956 * C480) *
                C2286 +
            (C36268 + C36269) * C2287 + C36276 * C2288) *
               C50734 * C1673 -
           (C37858 * C2288 + (C36943 + C36944) * C2287 +
            (C33206 * C461 + C33625 + C33625 + C50956 * C481 + C33204 * C460 +
             C33626 + C33626 + C33202 * C480) *
                C2286) *
               C50734 * C50859) *
              C50779 * C1024 +
          (((C33664 + C33663) * C2286 + (C34207 + C34208) * C2287 +
            (C36945 + C36946) * C2288) *
               C50734 * C50859 -
           (C36249 * C2288 + (C33461 + C33462) * C2287 +
            (C33254 + C33253) * C2286) *
               C50734 * C1673) *
              C50779 * C1025 +
          ((C33261 * C2286 + (C33460 + C33459) * C2287 +
            (C33465 + C33466) * C2288) *
               C50734 * C1673 -
           ((C33206 * C2642 + C35099 + C35099 + C50956 * C2648 +
             C33204 * C1560 + C35100 + C35100 + C33202 * C1568) *
                C2288 +
            (C34210 + C34209) * C2287 + C33975 * C2286) *
               C50734 * C50859) *
              C50779 * C1026)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 + C33206 * C460 +
             C33210 + C33210 + C50956 * C480) *
                C2286 +
            (C36268 + C36269) * C2287 + C36276 * C2288) *
               C50734 * C1673 -
           (C37858 * C2288 + (C36943 + C36944) * C2287 +
            (C33206 * C461 + C33625 + C33625 + C50956 * C481 + C33204 * C460 +
             C33626 + C33626 + C33202 * C480) *
                C2286) *
               C50734 * C50859) *
              C275 +
          (((C36944 + C36943) * C2286 + (C36942 + C36941) * C2287 +
            (C37869 + C37870) * C2288) *
               C50734 * C50859 -
           (C37191 * C2288 + (C36271 + C36270) * C2287 +
            (C36269 + C36268) * C2286) *
               C50734 * C1673) *
              C276 +
          ((C36276 * C2286 + (C36273 + C36272) * C2287 +
            (C37202 + C37203) * C2288) *
               C50734 * C1673 -
           ((C33206 * C20608 + C37863 + C37863 + C50956 * C20610 +
             C33204 * C4108 + C37864 + C37864 + C33202 * C4112) *
                C2288 +
            (C37870 + C37869) * C2287 + C37858 * C2286) *
               C50734 * C50859) *
              C277) *
         C50760) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C38820 * C119 + C38829 + C38829 + C38816 * C133 + C38822 * C460 +
            C38830 + C38830 + C38817 * C480 + C38824 * C461 + C38831 + C38831 +
            C38818 * C481 + C38826 * C1846 + C38832 + C38832 + C38819 * C1854) *
               C50877 * C50734 * C1673 -
           (C38826 * C5519 + C39057 + C39057 + C38819 * C5525 + C38824 * C1846 +
            C39058 + C39058 + C38818 * C1854 + C38822 * C461 + C39059 + C39059 +
            C38817 * C481 + C38820 * C460 + C39060 + C39060 + C38816 * C480) *
               C50877 * C50734 * C50859) *
              C50779 * C1024 +
          ((C38820 * C459 + C39065 + C39065 + C38816 * C479 + C38822 * C462 +
            C39066 + C39066 + C38817 * C482 + C38824 * C1845 + C39067 + C39067 +
            C38818 * C1853 + C38826 * C5520 + C39068 + C39068 +
            C38819 * C5526) *
               C50877 * C50734 * C50859 -
           (C38826 * C1845 + C38833 + C38833 + C38819 * C1853 + C38824 * C462 +
            C38834 + C38834 + C38818 * C482 + C38822 * C459 + C38835 + C38835 +
            C38817 * C479 + C38820 * C120 + C38836 + C38836 + C38816 * C134) *
               C50877 * C50734 * C1673) *
              C50779 * C1025 +
          ((C38820 * C121 + C38837 + C38837 + C38816 * C135 + C38822 * C458 +
            C38838 + C38838 + C38817 * C478 + C38824 * C463 + C38839 + C38839 +
            C38818 * C483 + C38826 * C1844 + C38840 + C38840 + C38819 * C1852) *
               C50877 * C50734 * C1673 -
           (C38826 * C5521 + C39273 + C39273 + C38819 * C5527 + C38824 * C1844 +
            C39274 + C39274 + C38818 * C1852 + C38822 * C463 + C39275 + C39275 +
            C38817 * C483 + C38820 * C458 + C39276 + C39276 + C38816 * C478) *
               C50877 * C50734 * C50859) *
              C50779 * C1026)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C38820 * C119 + C38829 + C38829 + C38816 * C133 + C38822 * C460 +
            C38830 + C38830 + C38817 * C480 + C38824 * C461 + C38831 + C38831 +
            C38818 * C481 + C38826 * C1846 + C38832 + C38832 + C38819 * C1854) *
               C50877 * C50734 * C1673 -
           (C38826 * C5519 + C39057 + C39057 + C38819 * C5525 + C38824 * C1846 +
            C39058 + C39058 + C38818 * C1854 + C38822 * C461 + C39059 + C39059 +
            C38817 * C481 + C38820 * C460 + C39060 + C39060 + C38816 * C480) *
               C50877 * C50734 * C50859) *
              C275 +
          ((C38820 * C886 + C39407 + C39407 + C38816 * C896 + C38822 * C1215 +
            C39408 + C39408 + C38817 * C1223 + C38824 * C4513 + C39409 +
            C39409 + C38818 * C4521 + C38826 * C6522 + C39410 + C39410 +
            C38819 * C6526) *
               C50877 * C50734 * C50859 -
           (C38826 * C4513 + C38943 + C38943 + C38819 * C4521 + C38824 * C1215 +
            C38944 + C38944 + C38818 * C1223 + C38822 * C886 + C38945 + C38945 +
            C38817 * C896 + C38820 * C283 + C38946 + C38946 + C38816 * C303) *
               C50877 * C50734 * C1673) *
              C276 +
          ((C38820 * C284 + C38947 + C38947 + C38816 * C304 + C38822 * C1562 +
            C38948 + C38948 + C38817 * C1570 + C38824 * C2640 + C38949 +
            C38949 + C38818 * C2646 + C38826 * C4512 + C38950 + C38950 +
            C38819 * C4520) *
               C50877 * C50734 * C1673 -
           (C38826 * C22873 + C40011 + C40011 + C38819 * C22875 +
            C38824 * C4512 + C40012 + C40012 + C38818 * C4520 + C38822 * C2640 +
            C40013 + C40013 + C38817 * C2646 + C38820 * C1562 + C40014 +
            C40014 + C38816 * C1570) *
               C50877 * C50734 * C50859) *
              C277) *
         C50760) /
            (p * q * std::sqrt(p + q));
    d2ee[195] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C44220 * C119 + C44227 + C44227 + C51054 * C133 +
                      C44222 * C460 + C44228 + C44228 + C51055 * C480 +
                      C44224 * C461 + C44229 + C44229 + C44219 * C481) *
                         C50877 * C50988 +
                     (C44278 + C44279 + C44280) * C50877 * C50739) *
                        C50795 * C51003 -
                    ((C44475 + C44476 + C44477) * C50877 * C50739 +
                     (C44224 * C1215 + C44442 + C44442 + C44219 * C1223 +
                      C44222 * C886 + C44443 + C44443 + C51055 * C896 +
                      C44220 * C283 + C44444 + C44444 + C51054 * C303) *
                         C50877 * C50988) *
                        C50795 * C50831) *
                       C51046 +
                   (((C44477 + C44476 + C44475) * C50877 * C50988 +
                     (C44836 + C44837 + C44838) * C50877 * C50739) *
                        C50795 * C50831 -
                    ((C44281 + C44282 + C44283) * C50877 * C50739 +
                     (C44280 + C44279 + C44278) * C50877 * C50988) *
                        C50795 * C51003) *
                       C51047 +
                   (((C44283 + C44282 + C44281) * C50877 * C50988 +
                     (C44284 + C44285 + C44286) * C50877 * C50739) *
                        C50795 * C51003 -
                    ((C44224 * C1212 + C44827 + C44827 + C44219 * C1220 +
                      C44222 * C889 + C44828 + C44828 + C51055 * C899 +
                      C44220 * C280 + C44829 + C44829 + C51054 * C300) *
                         C50877 * C50739 +
                     (C44838 + C44837 + C44836) * C50877 * C50988) *
                        C50795 * C50831) *
                       C635)) /
                 (p * q * std::sqrt(p + q));
    d2ee[196] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C44220 * C119 + C44227 + C44227 + C51054 * C133 +
                       C44222 * C460 + C44228 + C44228 + C51055 * C480 +
                       C44224 * C461 + C44229 + C44229 + C44219 * C481) *
                          C50877 * C50988 +
                      (C44278 + C44279 + C44280) * C50877 * C50739) *
                         C51004 -
                     ((C44669 + C44670 + C44671) * C50877 * C50739 +
                      (C44224 * C1846 + C44636 + C44636 + C44219 * C1854 +
                       C44222 * C461 + C44637 + C44637 + C51055 * C481 +
                       C44220 * C460 + C44638 + C44638 + C51054 * C480) *
                          C50877 * C50988) *
                         C50859) *
                        C51003 +
                    (((C44220 * C886 + C45197 + C45197 + C51054 * C896 +
                       C44222 * C1215 + C45198 + C45198 + C51055 * C1223 +
                       C44224 * C4513 + C45199 + C45199 + C44219 * C4521) *
                          C50877 * C50988 +
                      (C45218 + C45219 + C45220) * C50877 * C50739) *
                         C50859 -
                     ((C44475 + C44476 + C44477) * C50877 * C50739 +
                      (C44224 * C1215 + C44442 + C44442 + C44219 * C1223 +
                       C44222 * C886 + C44443 + C44443 + C51055 * C896 +
                       C44220 * C283 + C44444 + C44444 + C51054 * C303) *
                          C50877 * C50988) *
                         C51004) *
                        C50831) *
                       C278 +
                   ((((C44671 + C44670 + C44669) * C50877 * C50988 +
                      (C45000 + C45001 + C45002) * C50877 * C50739) *
                         C50859 -
                     ((C44281 + C44282 + C44283) * C50877 * C50739 +
                      (C44280 + C44279 + C44278) * C50877 * C50988) *
                         C51004) *
                        C51003 +
                    (((C44477 + C44476 + C44475) * C50877 * C50988 +
                      (C44836 + C44837 + C44838) * C50877 * C50739) *
                         C51004 -
                     ((C44224 * C6098 + C45209 + C45209 + C44219 * C6100 +
                       C44222 * C1213 + C45210 + C45210 + C51055 * C1221 +
                       C44220 * C888 + C45211 + C45211 + C51054 * C898) *
                          C50877 * C50739 +
                      (C45220 + C45219 + C45218) * C50877 * C50988) *
                         C50859) *
                        C50831) *
                       C50766)) /
                 (p * q * std::sqrt(p + q));
    d2ee[197] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C44220 * C119 + C44227 + C44227 + C51054 * C133 +
                      C44222 * C460 + C44228 + C44228 + C51055 * C480 +
                      C44224 * C461 + C44229 + C44229 + C44219 * C481) *
                         C50877 * C50988 +
                     (C44278 + C44279 + C44280) * C50877 * C50739) *
                        C50795 * C275 -
                    ((C44475 + C44476 + C44477) * C50877 * C50739 +
                     (C44224 * C1215 + C44442 + C44442 + C44219 * C1223 +
                      C44222 * C886 + C44443 + C44443 + C51055 * C896 +
                      C44220 * C283 + C44444 + C44444 + C51054 * C303) *
                         C50877 * C50988) *
                        C50795 * C276 +
                    ((C44220 * C284 + C44445 + C44445 + C51054 * C304 +
                      C44222 * C1562 + C44446 + C44446 + C51055 * C1570 +
                      C44224 * C2640 + C44447 + C44447 + C44219 * C2646) *
                         C50877 * C50988 +
                     (C44478 + C44479 + C44480) * C50877 * C50739) *
                        C50795 * C277) *
                       C278 +
                   (((C44477 + C44476 + C44475) * C50877 * C50988 +
                     (C44220 * C281 + C44457 + C44457 + C51054 * C301 +
                      C44222 * C888 + C44458 + C44458 + C51055 * C898 +
                      C44224 * C1213 + C44459 + C44459 + C44219 * C1221) *
                         C50877 * C50739) *
                        C50795 * C276 -
                    ((C44281 + C44282 + C44283) * C50877 * C50739 +
                     (C44280 + C44279 + C44278) * C50877 * C50988) *
                        C50795 * C275 -
                    ((C44224 * C2642 + C44460 + C44460 + C44219 * C2648 +
                      C44222 * C1560 + C44461 + C44461 + C51055 * C1568 +
                      C44220 * C286 + C44462 + C44462 + C51054 * C306) *
                         C50877 * C50739 +
                     (C44480 + C44479 + C44478) * C50877 * C50988) *
                        C50795 * C277) *
                       C50766)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C44220 * C119 + C44227 + C44227 + C51054 * C133 +
                     C44222 * C460 + C44228 + C44228 + C51055 * C480 +
                     C44224 * C461 + C44229 + C44229 + C44219 * C481) *
                        C50877 * C50988 +
                    (C44278 + C44279 + C44280) * C50877 * C50739) *
                       C50795 * C50779 * C113 -
                   ((C44281 + C44282 + C44283) * C50877 * C50739 +
                    (C44280 + C44279 + C44278) * C50877 * C50988) *
                       C50795 * C50779 * C114 +
                   ((C44283 + C44282 + C44281) * C50877 * C50988 +
                    (C44284 + C44285 + C44286) * C50877 * C50739) *
                       C50795 * C50779 * C115 -
                   ((C44224 * C466 + C44257 + C44257 + C44219 * C486 +
                     C44222 * C465 + C44258 + C44258 + C51055 * C485 +
                     C44220 * C123 + C44259 + C44259 + C51054 * C137) *
                        C50877 * C50739 +
                    (C44286 + C44285 + C44284) * C50877 * C50988) *
                       C50795 * C50779 * C116)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C44220 * C119 + C44227 + C44227 + C51054 * C133 +
                      C44222 * C460 + C44228 + C44228 + C51055 * C480 +
                      C44224 * C461 + C44229 + C44229 + C44219 * C481) *
                         C50877 * C50988 +
                     (C44278 + C44279 + C44280) * C50877 * C50739) *
                        C454 -
                    ((C44669 + C44670 + C44671) * C50877 * C50739 +
                     (C44224 * C1846 + C44636 + C44636 + C44219 * C1854 +
                      C44222 * C461 + C44637 + C44637 + C51055 * C481 +
                      C44220 * C460 + C44638 + C44638 + C51054 * C480) *
                         C50877 * C50988) *
                        C455 +
                    ((C44220 * C461 + C44639 + C44639 + C51054 * C481 +
                      C44222 * C1846 + C44640 + C44640 + C51055 * C1854 +
                      C44224 * C5519 + C44641 + C44641 + C44219 * C5525) *
                         C50877 * C50988 +
                     (C44672 + C44673 + C44674) * C50877 * C50739) *
                        C456) *
                       C50779 * C278 +
                   (((C44671 + C44670 + C44669) * C50877 * C50988 +
                     (C44220 * C458 + C44651 + C44651 + C51054 * C478 +
                      C44222 * C463 + C44652 + C44652 + C51055 * C483 +
                      C44224 * C1844 + C44653 + C44653 + C44219 * C1852) *
                         C50877 * C50739) *
                        C455 -
                    ((C44281 + C44282 + C44283) * C50877 * C50739 +
                     (C44280 + C44279 + C44278) * C50877 * C50988) *
                        C454 -
                    ((C44224 * C5521 + C44654 + C44654 + C44219 * C5527 +
                      C44222 * C1844 + C44655 + C44655 + C51055 * C1852 +
                      C44220 * C463 + C44656 + C44656 + C51054 * C483) *
                         C50877 * C50739 +
                     (C44674 + C44673 + C44672) * C50877 * C50988) *
                        C456) *
                       C50779 * C50766)) /
                     (p * q * std::sqrt(p + q));
    d2ee[198] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C44220 * C119 + C44227 + C44227 + C51054 * C133 +
                      C44222 * C460 + C44228 + C44228 + C51055 * C480 +
                      C44224 * C461 + C44229 + C44229 + C44219 * C481) *
                         C50877 * C50988 +
                     (C44278 + C44279 + C44280) * C50877 * C50739) *
                        C51004 -
                    ((C44669 + C44670 + C44671) * C50877 * C50739 +
                     (C44224 * C1846 + C44636 + C44636 + C44219 * C1854 +
                      C44222 * C461 + C44637 + C44637 + C51055 * C481 +
                      C44220 * C460 + C44638 + C44638 + C51054 * C480) *
                         C50877 * C50988) *
                        C50859) *
                       C50779 * C51046 +
                   (((C44671 + C44670 + C44669) * C50877 * C50988 +
                     (C45000 + C45001 + C45002) * C50877 * C50739) *
                        C50859 -
                    ((C44281 + C44282 + C44283) * C50877 * C50739 +
                     (C44280 + C44279 + C44278) * C50877 * C50988) *
                        C51004) *
                       C50779 * C51047 +
                   (((C44283 + C44282 + C44281) * C50877 * C50988 +
                     (C44284 + C44285 + C44286) * C50877 * C50739) *
                        C51004 -
                    ((C44224 * C1843 + C44991 + C44991 + C44219 * C1851 +
                      C44222 * C464 + C44992 + C44992 + C51055 * C484 +
                      C44220 * C457 + C44993 + C44993 + C51054 * C477) *
                         C50877 * C50739 +
                     (C45002 + C45001 + C45000) * C50877 * C50988) *
                        C50859) *
                       C50779 * C635)) /
                 (p * q * std::sqrt(p + q));
    d2ee[199] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((C44220 * C119 + C44227 + C44227 + C51054 * C133 +
                     C44222 * C460 + C44228 + C44228 + C51055 * C480 +
                     C44224 * C461 + C44229 + C44229 + C44219 * C481) *
                        C50877 * C50988 +
                    (C44278 + C44279 + C44280) * C50877 * C50739) *
                       C50795 * C50779 * C113 -
                   ((C44281 + C44282 + C44283) * C50877 * C50739 +
                    (C44280 + C44279 + C44278) * C50877 * C50988) *
                       C50795 * C50779 * C114 +
                   ((C44283 + C44282 + C44281) * C50877 * C50988 +
                    (C44284 + C44285 + C44286) * C50877 * C50739) *
                       C50795 * C50779 * C115 -
                   ((C44224 * C466 + C44257 + C44257 + C44219 * C486 +
                     C44222 * C465 + C44258 + C44258 + C51055 * C485 +
                     C44220 * C123 + C44259 + C44259 + C51054 * C137) *
                        C50877 * C50739 +
                    (C44286 + C44285 + C44284) * C50877 * C50988) *
                       C50795 * C50779 * C116)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C44220 * C119 + C44227 + C44227 + C51054 * C133 +
                      C44222 * C460 + C44228 + C44228 + C51055 * C480 +
                      C44224 * C461 + C44229 + C44229 + C44219 * C481) *
                         C50877 * C50988 +
                     (C44278 + C44279 + C44280) * C50877 * C50739) *
                        C50795 * C275 -
                    ((C44475 + C44476 + C44477) * C50877 * C50739 +
                     (C44224 * C1215 + C44442 + C44442 + C44219 * C1223 +
                      C44222 * C886 + C44443 + C44443 + C51055 * C896 +
                      C44220 * C283 + C44444 + C44444 + C51054 * C303) *
                         C50877 * C50988) *
                        C50795 * C276 +
                    ((C44220 * C284 + C44445 + C44445 + C51054 * C304 +
                      C44222 * C1562 + C44446 + C44446 + C51055 * C1570 +
                      C44224 * C2640 + C44447 + C44447 + C44219 * C2646) *
                         C50877 * C50988 +
                     (C44478 + C44479 + C44480) * C50877 * C50739) *
                        C50795 * C277) *
                       C278 +
                   (((C44477 + C44476 + C44475) * C50877 * C50988 +
                     (C44220 * C281 + C44457 + C44457 + C51054 * C301 +
                      C44222 * C888 + C44458 + C44458 + C51055 * C898 +
                      C44224 * C1213 + C44459 + C44459 + C44219 * C1221) *
                         C50877 * C50739) *
                        C50795 * C276 -
                    ((C44281 + C44282 + C44283) * C50877 * C50739 +
                     (C44280 + C44279 + C44278) * C50877 * C50988) *
                        C50795 * C275 -
                    ((C44224 * C2642 + C44460 + C44460 + C44219 * C2648 +
                      C44222 * C1560 + C44461 + C44461 + C51055 * C1568 +
                      C44220 * C286 + C44462 + C44462 + C51054 * C306) *
                         C50877 * C50739 +
                     (C44480 + C44479 + C44478) * C50877 * C50988) *
                        C50795 * C277) *
                       C50766)) /
                     (p * q * std::sqrt(p + q));
    d2ee[200] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C44220 * C119 + C44227 + C44227 + C51054 * C133 +
                      C44222 * C460 + C44228 + C44228 + C51055 * C480 +
                      C44224 * C461 + C44229 + C44229 + C44219 * C481) *
                         C50877 * C50988 +
                     (C44278 + C44279 + C44280) * C50877 * C50739) *
                        C50795 * C51048 -
                    ((C44475 + C44476 + C44477) * C50877 * C50739 +
                     (C44224 * C1215 + C44442 + C44442 + C44219 * C1223 +
                      C44222 * C886 + C44443 + C44443 + C51055 * C896 +
                      C44220 * C283 + C44444 + C44444 + C51054 * C303) *
                         C50877 * C50988) *
                        C50795 * C51049 +
                    ((C44220 * C284 + C44445 + C44445 + C51054 * C304 +
                      C44222 * C1562 + C44446 + C44446 + C51055 * C1570 +
                      C44224 * C2640 + C44447 + C44447 + C44219 * C2646) *
                         C50877 * C50988 +
                     (C44478 + C44479 + C44480) * C50877 * C50739) *
                        C50795 * C1328) *
                       C50995 +
                   (((C44477 + C44476 + C44475) * C50877 * C50988 +
                     (C44836 + C44837 + C44838) * C50877 * C50739) *
                        C50795 * C51049 -
                    ((C44281 + C44282 + C44283) * C50877 * C50739 +
                     (C44280 + C44279 + C44278) * C50877 * C50988) *
                        C50795 * C51048 -
                    ((C44224 * C2642 + C44460 + C44460 + C44219 * C2648 +
                      C44222 * C1560 + C44461 + C44461 + C51055 * C1568 +
                      C44220 * C286 + C44462 + C44462 + C51054 * C306) *
                         C50877 * C50739 +
                     (C44480 + C44479 + C44478) * C50877 * C50988) *
                        C50795 * C1328) *
                       C50766)) /
                 (p * q * std::sqrt(p + q));
    d2ee[201] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C44220 * C119 + C44227 + C44227 + C51054 * C133 +
                      C44222 * C460 + C44228 + C44228 + C51055 * C480 +
                      C44224 * C461 + C44229 + C44229 + C44219 * C481) *
                         C50877 * C50988 +
                     (C44278 + C44279 + C44280) * C50877 * C50739) *
                        C51004 -
                    ((C44669 + C44670 + C44671) * C50877 * C50739 +
                     (C44224 * C1846 + C44636 + C44636 + C44219 * C1854 +
                      C44222 * C461 + C44637 + C44637 + C51055 * C481 +
                      C44220 * C460 + C44638 + C44638 + C51054 * C480) *
                         C50877 * C50988) *
                        C50859) *
                       C51048 +
                   (((C44220 * C886 + C45197 + C45197 + C51054 * C896 +
                      C44222 * C1215 + C45198 + C45198 + C51055 * C1223 +
                      C44224 * C4513 + C45199 + C45199 + C44219 * C4521) *
                         C50877 * C50988 +
                     (C45218 + C45219 + C45220) * C50877 * C50739) *
                        C50859 -
                    ((C44475 + C44476 + C44477) * C50877 * C50739 +
                     (C44224 * C1215 + C44442 + C44442 + C44219 * C1223 +
                      C44222 * C886 + C44443 + C44443 + C51055 * C896 +
                      C44220 * C283 + C44444 + C44444 + C51054 * C303) *
                         C50877 * C50988) *
                        C51004) *
                       C51049 +
                   (((C44220 * C284 + C44445 + C44445 + C51054 * C304 +
                      C44222 * C1562 + C44446 + C44446 + C51055 * C1570 +
                      C44224 * C2640 + C44447 + C44447 + C44219 * C2646) *
                         C50877 * C50988 +
                     (C44478 + C44479 + C44480) * C50877 * C50739) *
                        C51004 -
                    ((C44224 * C4510 + C46109 + C46109 + C44219 * C4518 +
                      C44222 * C2641 + C46110 + C46110 + C51055 * C2647 +
                      C44220 * C1561 + C46111 + C46111 + C51054 * C1569) *
                         C50877 * C50739 +
                     (C44224 * C4512 + C46112 + C46112 + C44219 * C4520 +
                      C44222 * C2640 + C46113 + C46113 + C51055 * C2646 +
                      C44220 * C1562 + C46114 + C46114 + C51054 * C1570) *
                         C50877 * C50988) *
                        C50859) *
                       C1328) *
                  C50760) /
                 (p * q * std::sqrt(p + q));
    d2ee[202] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C44220 * C119 + C44227 + C44227 + C51054 * C133 +
                     C44222 * C460 + C44228 + C44228 + C51055 * C480 +
                     C44224 * C461 + C44229 + C44229 + C44219 * C481) *
                        C50877 * C50988 +
                    (C44278 + C44279 + C44280) * C50877 * C50739) *
                       C50795 * C1093 -
                   ((C44475 + C44476 + C44477) * C50877 * C50739 +
                    (C44224 * C1215 + C44442 + C44442 + C44219 * C1223 +
                     C44222 * C886 + C44443 + C44443 + C51055 * C896 +
                     C44220 * C283 + C44444 + C44444 + C51054 * C303) *
                        C50877 * C50988) *
                       C50795 * C1094 +
                   ((C44220 * C284 + C44445 + C44445 + C51054 * C304 +
                     C44222 * C1562 + C44446 + C44446 + C51055 * C1570 +
                     C44224 * C2640 + C44447 + C44447 + C44219 * C2646) *
                        C50877 * C50988 +
                    (C44478 + C44479 + C44480) * C50877 * C50739) *
                       C50795 * C1095 -
                   ((C44224 * C3603 + C45465 + C45465 + C44219 * C3607 +
                     C44222 * C3171 + C45466 + C45466 + C51055 * C3177 +
                     C44220 * C1100 + C45467 + C45467 + C51054 * C1108) *
                        C50877 * C50739 +
                    (C44224 * C3604 + C45468 + C45468 + C44219 * C3608 +
                     C44222 * C3170 + C45469 + C45469 + C51055 * C3176 +
                     C44220 * C1101 + C45470 + C45470 + C51054 * C1109) *
                        C50877 * C50988) *
                       C50795 * C1096) *
                  C50760) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C44220 * C119 + C44227 + C44227 + C51054 * C133 +
                      C44222 * C460 + C44228 + C44228 + C51055 * C480 +
                      C44224 * C461 + C44229 + C44229 + C44219 * C481) *
                         C50877 * C50988 +
                     (C44278 + C44279 + C44280) * C50877 * C50739) *
                        C50795 * C1022 -
                    ((C44475 + C44476 + C44477) * C50877 * C50739 +
                     (C44224 * C1215 + C44442 + C44442 + C44219 * C1223 +
                      C44222 * C886 + C44443 + C44443 + C51055 * C896 +
                      C44220 * C283 + C44444 + C44444 + C51054 * C303) *
                         C50877 * C50988) *
                        C50795 * C50831) *
                       C1024 +
                   (((C44477 + C44476 + C44475) * C50877 * C50988 +
                     (C44836 + C44837 + C44838) * C50877 * C50739) *
                        C50795 * C50831 -
                    ((C44281 + C44282 + C44283) * C50877 * C50739 +
                     (C44280 + C44279 + C44278) * C50877 * C50988) *
                        C50795 * C1022) *
                       C1025 +
                   (((C44283 + C44282 + C44281) * C50877 * C50988 +
                     (C44284 + C44285 + C44286) * C50877 * C50739) *
                        C50795 * C1022 -
                    ((C44224 * C1212 + C44827 + C44827 + C44219 * C1220 +
                      C44222 * C889 + C44828 + C44828 + C51055 * C899 +
                      C44220 * C280 + C44829 + C44829 + C51054 * C300) *
                         C50877 * C50739 +
                     (C44838 + C44837 + C44836) * C50877 * C50988) *
                        C50795 * C50831) *
                       C1026)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C44220 * C119 + C44227 + C44227 + C51054 * C133 +
                      C44222 * C460 + C44228 + C44228 + C51055 * C480 +
                      C44224 * C461 + C44229 + C44229 + C44219 * C481) *
                         C50877 * C50988 +
                     (C44278 + C44279 + C44280) * C50877 * C50739) *
                        C454 -
                    ((C44669 + C44670 + C44671) * C50877 * C50739 +
                     (C44224 * C1846 + C44636 + C44636 + C44219 * C1854 +
                      C44222 * C461 + C44637 + C44637 + C51055 * C481 +
                      C44220 * C460 + C44638 + C44638 + C51054 * C480) *
                         C50877 * C50988) *
                        C455 +
                    ((C44220 * C461 + C44639 + C44639 + C51054 * C481 +
                      C44222 * C1846 + C44640 + C44640 + C51055 * C1854 +
                      C44224 * C5519 + C44641 + C44641 + C44219 * C5525) *
                         C50877 * C50988 +
                     (C44672 + C44673 + C44674) * C50877 * C50739) *
                        C456) *
                       C1022 +
                   (((C44220 * C886 + C45197 + C45197 + C51054 * C896 +
                      C44222 * C1215 + C45198 + C45198 + C51055 * C1223 +
                      C44224 * C4513 + C45199 + C45199 + C44219 * C4521) *
                         C50877 * C50988 +
                     (C45218 + C45219 + C45220) * C50877 * C50739) *
                        C455 -
                    ((C44475 + C44476 + C44477) * C50877 * C50739 +
                     (C44224 * C1215 + C44442 + C44442 + C44219 * C1223 +
                      C44222 * C886 + C44443 + C44443 + C51055 * C896 +
                      C44220 * C283 + C44444 + C44444 + C51054 * C303) *
                         C50877 * C50988) *
                        C454 -
                    ((C44224 * C6521 + C45617 + C45617 + C44219 * C6525 +
                      C44222 * C4511 + C45618 + C45618 + C51055 * C4519 +
                      C44220 * C1214 + C45619 + C45619 + C51054 * C1222) *
                         C50877 * C50739 +
                     (C44224 * C6522 + C45620 + C45620 + C44219 * C6526 +
                      C44222 * C4513 + C45621 + C45621 + C51055 * C4521 +
                      C44220 * C1215 + C45622 + C45622 + C51054 * C1223) *
                         C50877 * C50988) *
                        C456) *
                       C50831) *
                  C50760) /
                     (p * q * std::sqrt(p + q));
    d2ee[203] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C44220 * C119 + C44227 + C44227 + C51054 * C133 +
                       C44222 * C460 + C44228 + C44228 + C51055 * C480 +
                       C44224 * C461 + C44229 + C44229 + C44219 * C481) *
                          C50877 * C50988 +
                      (C44278 + C44279 + C44280) * C50877 * C50739) *
                         C51004 -
                     ((C44669 + C44670 + C44671) * C50877 * C50739 +
                      (C44224 * C1846 + C44636 + C44636 + C44219 * C1854 +
                       C44222 * C461 + C44637 + C44637 + C51055 * C481 +
                       C44220 * C460 + C44638 + C44638 + C51054 * C480) *
                          C50877 * C50988) *
                         C50859) *
                        C1022 +
                    (((C44220 * C886 + C45197 + C45197 + C51054 * C896 +
                       C44222 * C1215 + C45198 + C45198 + C51055 * C1223 +
                       C44224 * C4513 + C45199 + C45199 + C44219 * C4521) *
                          C50877 * C50988 +
                      (C45218 + C45219 + C45220) * C50877 * C50739) *
                         C50859 -
                     ((C44475 + C44476 + C44477) * C50877 * C50739 +
                      (C44224 * C1215 + C44442 + C44442 + C44219 * C1223 +
                       C44222 * C886 + C44443 + C44443 + C51055 * C896 +
                       C44220 * C283 + C44444 + C44444 + C51054 * C303) *
                          C50877 * C50988) *
                         C51004) *
                        C50831) *
                       C50995 +
                   ((((C44671 + C44670 + C44669) * C50877 * C50988 +
                      (C45000 + C45001 + C45002) * C50877 * C50739) *
                         C50859 -
                     ((C44281 + C44282 + C44283) * C50877 * C50739 +
                      (C44280 + C44279 + C44278) * C50877 * C50988) *
                         C51004) *
                        C1022 +
                    (((C44477 + C44476 + C44475) * C50877 * C50988 +
                      (C44836 + C44837 + C44838) * C50877 * C50739) *
                         C51004 -
                     ((C44224 * C6098 + C45209 + C45209 + C44219 * C6100 +
                       C44222 * C1213 + C45210 + C45210 + C51055 * C1221 +
                       C44220 * C888 + C45211 + C45211 + C51054 * C898) *
                          C50877 * C50739 +
                      (C45220 + C45219 + C45218) * C50877 * C50988) *
                         C50859) *
                        C50831) *
                       C50766)) /
                 (p * q * std::sqrt(p + q));
    d2ee[204] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C44220 * C119 + C44227 + C44227 + C51054 * C133 +
                      C44222 * C460 + C44228 + C44228 + C51055 * C480 +
                      C44224 * C461 + C44229 + C44229 + C44219 * C481) *
                         C50877 * C50988 +
                     (C44278 + C44279 + C44280) * C50877 * C50739) *
                        C50795 * C1022 -
                    ((C44475 + C44476 + C44477) * C50877 * C50739 +
                     (C44224 * C1215 + C44442 + C44442 + C44219 * C1223 +
                      C44222 * C886 + C44443 + C44443 + C51055 * C896 +
                      C44220 * C283 + C44444 + C44444 + C51054 * C303) *
                         C50877 * C50988) *
                        C50795 * C50831) *
                       C1024 +
                   (((C44477 + C44476 + C44475) * C50877 * C50988 +
                     (C44836 + C44837 + C44838) * C50877 * C50739) *
                        C50795 * C50831 -
                    ((C44281 + C44282 + C44283) * C50877 * C50739 +
                     (C44280 + C44279 + C44278) * C50877 * C50988) *
                        C50795 * C1022) *
                       C1025 +
                   (((C44283 + C44282 + C44281) * C50877 * C50988 +
                     (C44284 + C44285 + C44286) * C50877 * C50739) *
                        C50795 * C1022 -
                    ((C44224 * C1212 + C44827 + C44827 + C44219 * C1220 +
                      C44222 * C889 + C44828 + C44828 + C51055 * C899 +
                      C44220 * C280 + C44829 + C44829 + C51054 * C300) *
                         C50877 * C50739 +
                     (C44838 + C44837 + C44836) * C50877 * C50988) *
                        C50795 * C50831) *
                       C1026)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((C44220 * C119 + C44227 + C44227 + C51054 * C133 +
                     C44222 * C460 + C44228 + C44228 + C51055 * C480 +
                     C44224 * C461 + C44229 + C44229 + C44219 * C481) *
                        C50877 * C50988 +
                    (C44278 + C44279 + C44280) * C50877 * C50739) *
                       C50795 * C1093 -
                   ((C44475 + C44476 + C44477) * C50877 * C50739 +
                    (C44224 * C1215 + C44442 + C44442 + C44219 * C1223 +
                     C44222 * C886 + C44443 + C44443 + C51055 * C896 +
                     C44220 * C283 + C44444 + C44444 + C51054 * C303) *
                        C50877 * C50988) *
                       C50795 * C1094 +
                   ((C44220 * C284 + C44445 + C44445 + C51054 * C304 +
                     C44222 * C1562 + C44446 + C44446 + C51055 * C1570 +
                     C44224 * C2640 + C44447 + C44447 + C44219 * C2646) *
                        C50877 * C50988 +
                    (C44478 + C44479 + C44480) * C50877 * C50739) *
                       C50795 * C1095 -
                   ((C44224 * C3603 + C45465 + C45465 + C44219 * C3607 +
                     C44222 * C3171 + C45466 + C45466 + C51055 * C3177 +
                     C44220 * C1100 + C45467 + C45467 + C51054 * C1108) *
                        C50877 * C50739 +
                    (C44224 * C3604 + C45468 + C45468 + C44219 * C3608 +
                     C44222 * C3170 + C45469 + C45469 + C51055 * C3176 +
                     C44220 * C1101 + C45470 + C45470 + C51054 * C1109) *
                        C50877 * C50988) *
                       C50795 * C1096) *
                  C50760) /
                     (p * q * std::sqrt(p + q));
    d2ee[205] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C44220 * C119 + C44227 + C44227 + C51054 * C133 +
                       C44222 * C460 + C44228 + C44228 + C51055 * C480 +
                       C44224 * C461 + C44229 + C44229 + C44219 * C481) *
                          C50877 * C50988 +
                      (C44278 + C44279 + C44280) * C50877 * C50739) *
                         C1673 -
                     ((C44669 + C44670 + C44671) * C50877 * C50739 +
                      (C44224 * C1846 + C44636 + C44636 + C44219 * C1854 +
                       C44222 * C461 + C44637 + C44637 + C51055 * C481 +
                       C44220 * C460 + C44638 + C44638 + C51054 * C480) *
                          C50877 * C50988) *
                         C50859) *
                        C51003 +
                    (((C44220 * C886 + C45197 + C45197 + C51054 * C896 +
                       C44222 * C1215 + C45198 + C45198 + C51055 * C1223 +
                       C44224 * C4513 + C45199 + C45199 + C44219 * C4521) *
                          C50877 * C50988 +
                      (C45218 + C45219 + C45220) * C50877 * C50739) *
                         C50859 -
                     ((C44475 + C44476 + C44477) * C50877 * C50739 +
                      (C44224 * C1215 + C44442 + C44442 + C44219 * C1223 +
                       C44222 * C886 + C44443 + C44443 + C51055 * C896 +
                       C44220 * C283 + C44444 + C44444 + C51054 * C303) *
                          C50877 * C50988) *
                         C1673) *
                        C50831) *
                       C50995 +
                   ((((C44671 + C44670 + C44669) * C50877 * C50988 +
                      (C45000 + C45001 + C45002) * C50877 * C50739) *
                         C50859 -
                     ((C44281 + C44282 + C44283) * C50877 * C50739 +
                      (C44280 + C44279 + C44278) * C50877 * C50988) *
                         C1673) *
                        C51003 +
                    (((C44477 + C44476 + C44475) * C50877 * C50988 +
                      (C44836 + C44837 + C44838) * C50877 * C50739) *
                         C1673 -
                     ((C44224 * C6098 + C45209 + C45209 + C44219 * C6100 +
                       C44222 * C1213 + C45210 + C45210 + C51055 * C1221 +
                       C44220 * C888 + C45211 + C45211 + C51054 * C898) *
                          C50877 * C50739 +
                      (C45220 + C45219 + C45218) * C50877 * C50988) *
                         C50859) *
                        C50831) *
                       C50766)) /
                 (p * q * std::sqrt(p + q));
    d2ee[206] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C44220 * C119 + C44227 + C44227 + C51054 * C133 +
                      C44222 * C460 + C44228 + C44228 + C51055 * C480 +
                      C44224 * C461 + C44229 + C44229 + C44219 * C481) *
                         C50877 * C50988 +
                     (C44278 + C44279 + C44280) * C50877 * C50739) *
                        C51050 -
                    ((C44669 + C44670 + C44671) * C50877 * C50739 +
                     (C44224 * C1846 + C44636 + C44636 + C44219 * C1854 +
                      C44222 * C461 + C44637 + C44637 + C51055 * C481 +
                      C44220 * C460 + C44638 + C44638 + C51054 * C480) *
                         C50877 * C50988) *
                        C51051 +
                    ((C44220 * C461 + C44639 + C44639 + C51054 * C481 +
                      C44222 * C1846 + C44640 + C44640 + C51055 * C1854 +
                      C44224 * C5519 + C44641 + C44641 + C44219 * C5525) *
                         C50877 * C50988 +
                     (C44672 + C44673 + C44674) * C50877 * C50739) *
                        C2089) *
                       C51003 +
                   (((C44220 * C886 + C45197 + C45197 + C51054 * C896 +
                      C44222 * C1215 + C45198 + C45198 + C51055 * C1223 +
                      C44224 * C4513 + C45199 + C45199 + C44219 * C4521) *
                         C50877 * C50988 +
                     (C45218 + C45219 + C45220) * C50877 * C50739) *
                        C51051 -
                    ((C44475 + C44476 + C44477) * C50877 * C50739 +
                     (C44224 * C1215 + C44442 + C44442 + C44219 * C1223 +
                      C44222 * C886 + C44443 + C44443 + C51055 * C896 +
                      C44220 * C283 + C44444 + C44444 + C51054 * C303) *
                         C50877 * C50988) *
                        C51050 -
                    ((C44224 * C6521 + C45617 + C45617 + C44219 * C6525 +
                      C44222 * C4511 + C45618 + C45618 + C51055 * C4519 +
                      C44220 * C1214 + C45619 + C45619 + C51054 * C1222) *
                         C50877 * C50739 +
                     (C44224 * C6522 + C45620 + C45620 + C44219 * C6526 +
                      C44222 * C4513 + C45621 + C45621 + C51055 * C4521 +
                      C44220 * C1215 + C45622 + C45622 + C51054 * C1223) *
                         C50877 * C50988) *
                        C2089) *
                       C50831) *
                  C50760) /
                 (p * q * std::sqrt(p + q));
    d2ee[207] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C44220 * C119 + C44227 + C44227 + C51054 * C133 +
                      C44222 * C460 + C44228 + C44228 + C51055 * C480 +
                      C44224 * C461 + C44229 + C44229 + C44219 * C481) *
                         C50877 * C50988 +
                     (C44278 + C44279 + C44280) * C50877 * C50739) *
                        C1673 -
                    ((C44669 + C44670 + C44671) * C50877 * C50739 +
                     (C44224 * C1846 + C44636 + C44636 + C44219 * C1854 +
                      C44222 * C461 + C44637 + C44637 + C51055 * C481 +
                      C44220 * C460 + C44638 + C44638 + C51054 * C480) *
                         C50877 * C50988) *
                        C50859) *
                       C275 +
                   (((C44220 * C886 + C45197 + C45197 + C51054 * C896 +
                      C44222 * C1215 + C45198 + C45198 + C51055 * C1223 +
                      C44224 * C4513 + C45199 + C45199 + C44219 * C4521) *
                         C50877 * C50988 +
                     (C45218 + C45219 + C45220) * C50877 * C50739) *
                        C50859 -
                    ((C44475 + C44476 + C44477) * C50877 * C50739 +
                     (C44224 * C1215 + C44442 + C44442 + C44219 * C1223 +
                      C44222 * C886 + C44443 + C44443 + C51055 * C896 +
                      C44220 * C283 + C44444 + C44444 + C51054 * C303) *
                         C50877 * C50988) *
                        C1673) *
                       C276 +
                   (((C44220 * C284 + C44445 + C44445 + C51054 * C304 +
                      C44222 * C1562 + C44446 + C44446 + C51055 * C1570 +
                      C44224 * C2640 + C44447 + C44447 + C44219 * C2646) *
                         C50877 * C50988 +
                     (C44478 + C44479 + C44480) * C50877 * C50739) *
                        C1673 -
                    ((C44224 * C4510 + C46109 + C46109 + C44219 * C4518 +
                      C44222 * C2641 + C46110 + C46110 + C51055 * C2647 +
                      C44220 * C1561 + C46111 + C46111 + C51054 * C1569) *
                         C50877 * C50739 +
                     (C44224 * C4512 + C46112 + C46112 + C44219 * C4520 +
                      C44222 * C2640 + C46113 + C46113 + C51055 * C2646 +
                      C44220 * C1562 + C46114 + C46114 + C51054 * C1570) *
                         C50877 * C50988) *
                        C50859) *
                       C277) *
                  C50760) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C44220 * C119 + C44227 + C44227 + C51054 * C133 +
                      C44222 * C460 + C44228 + C44228 + C51055 * C480 +
                      C44224 * C461 + C44229 + C44229 + C44219 * C481) *
                         C50877 * C50988 +
                     (C44278 + C44279 + C44280) * C50877 * C50739) *
                        C1673 -
                    ((C44669 + C44670 + C44671) * C50877 * C50739 +
                     (C44224 * C1846 + C44636 + C44636 + C44219 * C1854 +
                      C44222 * C461 + C44637 + C44637 + C51055 * C481 +
                      C44220 * C460 + C44638 + C44638 + C51054 * C480) *
                         C50877 * C50988) *
                        C50859) *
                       C50779 * C1024 +
                   (((C44671 + C44670 + C44669) * C50877 * C50988 +
                     (C45000 + C45001 + C45002) * C50877 * C50739) *
                        C50859 -
                    ((C44281 + C44282 + C44283) * C50877 * C50739 +
                     (C44280 + C44279 + C44278) * C50877 * C50988) *
                        C1673) *
                       C50779 * C1025 +
                   (((C44283 + C44282 + C44281) * C50877 * C50988 +
                     (C44284 + C44285 + C44286) * C50877 * C50739) *
                        C1673 -
                    ((C44224 * C1843 + C44991 + C44991 + C44219 * C1851 +
                      C44222 * C464 + C44992 + C44992 + C51055 * C484 +
                      C44220 * C457 + C44993 + C44993 + C51054 * C477) *
                         C50877 * C50739 +
                     (C45002 + C45001 + C45000) * C50877 * C50988) *
                        C50859) *
                       C50779 * C1026)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((C44220 * C119 + C44227 + C44227 + C51054 * C133 +
                     C44222 * C460 + C44228 + C44228 + C51055 * C480 +
                     C44224 * C461 + C44229 + C44229 + C44219 * C481) *
                        C50877 * C50988 +
                    (C44278 + C44279 + C44280) * C50877 * C50739) *
                       C1839 -
                   ((C44669 + C44670 + C44671) * C50877 * C50739 +
                    (C44224 * C1846 + C44636 + C44636 + C44219 * C1854 +
                     C44222 * C461 + C44637 + C44637 + C51055 * C481 +
                     C44220 * C460 + C44638 + C44638 + C51054 * C480) *
                        C50877 * C50988) *
                       C1840 +
                   ((C44220 * C461 + C44639 + C44639 + C51054 * C481 +
                     C44222 * C1846 + C44640 + C44640 + C51055 * C1854 +
                     C44224 * C5519 + C44641 + C44641 + C44219 * C5525) *
                        C50877 * C50988 +
                    (C44672 + C44673 + C44674) * C50877 * C50739) *
                       C1841 -
                   ((C44224 * C7415 + C46505 + C46505 + C44219 * C7419 +
                     C44222 * C5520 + C46506 + C46506 + C51055 * C5526 +
                     C44220 * C1845 + C46507 + C46507 + C51054 * C1853) *
                        C50877 * C50739 +
                    (C44224 * C7416 + C46508 + C46508 + C44219 * C7420 +
                     C44222 * C5519 + C46509 + C46509 + C51055 * C5525 +
                     C44220 * C1846 + C46510 + C46510 + C51054 * C1854) *
                        C50877 * C50988) *
                       C1842) *
                  C50779 * C50760) /
                     (p * q * std::sqrt(p + q));
    d2ee[208] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C44220 * C119 + C44227 + C44227 + C51054 * C133 +
                      C44222 * C460 + C44228 + C44228 + C51055 * C480 +
                      C44224 * C461 + C44229 + C44229 + C44219 * C481) *
                         C50877 * C50988 +
                     (C44278 + C44279 + C44280) * C50877 * C50739) *
                        C51050 -
                    ((C44669 + C44670 + C44671) * C50877 * C50739 +
                     (C44224 * C1846 + C44636 + C44636 + C44219 * C1854 +
                      C44222 * C461 + C44637 + C44637 + C51055 * C481 +
                      C44220 * C460 + C44638 + C44638 + C51054 * C480) *
                         C50877 * C50988) *
                        C51051 +
                    ((C44220 * C461 + C44639 + C44639 + C51054 * C481 +
                      C44222 * C1846 + C44640 + C44640 + C51055 * C1854 +
                      C44224 * C5519 + C44641 + C44641 + C44219 * C5525) *
                         C50877 * C50988 +
                     (C44672 + C44673 + C44674) * C50877 * C50739) *
                        C2089) *
                       C50779 * C50995 +
                   (((C44671 + C44670 + C44669) * C50877 * C50988 +
                     (C45000 + C45001 + C45002) * C50877 * C50739) *
                        C51051 -
                    ((C44281 + C44282 + C44283) * C50877 * C50739 +
                     (C44280 + C44279 + C44278) * C50877 * C50988) *
                        C51050 -
                    ((C44224 * C5521 + C44654 + C44654 + C44219 * C5527 +
                      C44222 * C1844 + C44655 + C44655 + C51055 * C1852 +
                      C44220 * C463 + C44656 + C44656 + C51054 * C483) *
                         C50877 * C50739 +
                     (C44674 + C44673 + C44672) * C50877 * C50988) *
                        C2089) *
                       C50779 * C50766)) /
                 (p * q * std::sqrt(p + q));
    d2ee[209] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C44220 * C119 + C44227 + C44227 + C51054 * C133 +
                      C44222 * C460 + C44228 + C44228 + C51055 * C480 +
                      C44224 * C461 + C44229 + C44229 + C44219 * C481) *
                         C50877 * C50988 +
                     (C44278 + C44279 + C44280) * C50877 * C50739) *
                        C1673 -
                    ((C44669 + C44670 + C44671) * C50877 * C50739 +
                     (C44224 * C1846 + C44636 + C44636 + C44219 * C1854 +
                      C44222 * C461 + C44637 + C44637 + C51055 * C481 +
                      C44220 * C460 + C44638 + C44638 + C51054 * C480) *
                         C50877 * C50988) *
                        C50859) *
                       C50779 * C1024 +
                   (((C44671 + C44670 + C44669) * C50877 * C50988 +
                     (C45000 + C45001 + C45002) * C50877 * C50739) *
                        C50859 -
                    ((C44281 + C44282 + C44283) * C50877 * C50739 +
                     (C44280 + C44279 + C44278) * C50877 * C50988) *
                        C1673) *
                       C50779 * C1025 +
                   (((C44283 + C44282 + C44281) * C50877 * C50988 +
                     (C44284 + C44285 + C44286) * C50877 * C50739) *
                        C1673 -
                    ((C44224 * C1843 + C44991 + C44991 + C44219 * C1851 +
                      C44222 * C464 + C44992 + C44992 + C51055 * C484 +
                      C44220 * C457 + C44993 + C44993 + C51054 * C477) *
                         C50877 * C50739 +
                     (C45002 + C45001 + C45000) * C50877 * C50988) *
                        C50859) *
                       C50779 * C1026)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C44220 * C119 + C44227 + C44227 + C51054 * C133 +
                      C44222 * C460 + C44228 + C44228 + C51055 * C480 +
                      C44224 * C461 + C44229 + C44229 + C44219 * C481) *
                         C50877 * C50988 +
                     (C44278 + C44279 + C44280) * C50877 * C50739) *
                        C1673 -
                    ((C44669 + C44670 + C44671) * C50877 * C50739 +
                     (C44224 * C1846 + C44636 + C44636 + C44219 * C1854 +
                      C44222 * C461 + C44637 + C44637 + C51055 * C481 +
                      C44220 * C460 + C44638 + C44638 + C51054 * C480) *
                         C50877 * C50988) *
                        C50859) *
                       C275 +
                   (((C44220 * C886 + C45197 + C45197 + C51054 * C896 +
                      C44222 * C1215 + C45198 + C45198 + C51055 * C1223 +
                      C44224 * C4513 + C45199 + C45199 + C44219 * C4521) *
                         C50877 * C50988 +
                     (C45218 + C45219 + C45220) * C50877 * C50739) *
                        C50859 -
                    ((C44475 + C44476 + C44477) * C50877 * C50739 +
                     (C44224 * C1215 + C44442 + C44442 + C44219 * C1223 +
                      C44222 * C886 + C44443 + C44443 + C51055 * C896 +
                      C44220 * C283 + C44444 + C44444 + C51054 * C303) *
                         C50877 * C50988) *
                        C1673) *
                       C276 +
                   (((C44220 * C284 + C44445 + C44445 + C51054 * C304 +
                      C44222 * C1562 + C44446 + C44446 + C51055 * C1570 +
                      C44224 * C2640 + C44447 + C44447 + C44219 * C2646) *
                         C50877 * C50988 +
                     (C44478 + C44479 + C44480) * C50877 * C50739) *
                        C1673 -
                    ((C44224 * C4510 + C46109 + C46109 + C44219 * C4518 +
                      C44222 * C2641 + C46110 + C46110 + C51055 * C2647 +
                      C44220 * C1561 + C46111 + C46111 + C51054 * C1569) *
                         C50877 * C50739 +
                     (C44224 * C4512 + C46112 + C46112 + C44219 * C4520 +
                      C44222 * C2640 + C46113 + C46113 + C51055 * C2646 +
                      C44220 * C1562 + C46114 + C46114 + C51054 * C1570) *
                         C50877 * C50988) *
                        C50859) *
                       C277) *
                  C50760) /
                     (p * q * std::sqrt(p + q));
    d2ee[210] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                      C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                         C50877 * C17175 +
                     (C33253 + C33254) * C50877 * C17176 + C33263 * C17177) *
                        C50795 * C51003 -
                    (C33822 * C17177 + (C33461 + C33462) * C50877 * C17176 +
                     (C33206 * C886 + C33423 + C33423 + C50956 * C896 +
                      C33204 * C283 + C33424 + C33424 + C33202 * C303) *
                         C50877 * C17175) *
                        C50795 * C50831) *
                       C51046 +
                   (((C33462 + C33461) * C50877 * C17175 +
                     (C33460 + C33459) * C50877 * C17176 +
                     (C33827 + C33828) * C50877 * C17177) *
                        C50795 * C50831 -
                    (C33264 * C17177 + (C33256 + C33255) * C50877 * C17176 +
                     (C33254 + C33253) * C50877 * C17175) *
                        C50795 * C51003) *
                       C51047 +
                   ((C33263 * C17175 + (C33258 + C33257) * C50877 * C17176 +
                     (C33259 + C33260) * C50877 * C17177) *
                        C50795 * C51003 -
                    ((C33206 * C890 + C33820 + C33820 + C50956 * C900 +
                      C33204 * C288 + C33821 + C33821 + C33202 * C308) *
                         C50877 * C17177 +
                     (C33828 + C33827) * C50877 * C17176 + C33822 * C17175) *
                        C50795 * C50831) *
                       C635)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                      C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                         C2286 +
                     (C36268 + C36269) * C2287 + C36276 * C2288) *
                        C50734 * C50795 * C51003 -
                    ((C36272 + C36273) * C2288 + (C36271 + C36270) * C2287 +
                     (C36269 + C36268) * C2286) *
                        C50734 * C50795 * C50831) *
                       C51046 +
                   (((C33462 + C33461) * C2286 + (C33463 + C33464) * C2287 +
                     (C36274 + C36275) * C2288) *
                        C50734 * C50795 * C50831 -
                    (C36249 * C2288 + (C33461 + C33462) * C2287 +
                     (C33254 + C33253) * C2286) *
                        C50734 * C50795 * C51003) *
                       C51047 +
                   ((C33261 * C2286 + (C33460 + C33459) * C2287 +
                     (C33465 + C33466) * C2288) *
                        C50734 * C50795 * C51003 -
                    ((C33206 * C3172 + C34455 + C34455 + C50956 * C3178 +
                      C33204 * C1099 + C34456 + C34456 + C33202 * C1107) *
                         C2288 +
                     (C33466 + C33465) * C2287 + C33815 * C2286) *
                        C50734 * C50795 * C50831) *
                       C635)) /
                     (p * q * std::sqrt(p + q));
    d2ee[211] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                       C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                          C50877 * C17175 +
                      (C33253 + C33254) * C50877 * C17176 + C33263 * C17177) *
                         C51004 -
                     (C33982 * C17177 + (C33663 + C33664) * C50877 * C17176 +
                      (C33206 * C461 + C33625 + C33625 + C50956 * C481 +
                       C33204 * C460 + C33626 + C33626 + C33202 * C480) *
                          C50877 * C17175) *
                         C50859) *
                        C51003 +
                    (((C33204 * C886 + C34183 + C34183 + C33202 * C896 +
                       C33206 * C1215 + C34184 + C34184 + C50956 * C1223) *
                          C50877 * C17175 +
                      (C34207 + C34208) * C50877 * C17176 +
                      (C34209 + C34210) * C50877 * C17177) *
                         C50859 -
                     (C33822 * C17177 + (C33461 + C33462) * C50877 * C17176 +
                      (C33206 * C886 + C33423 + C33423 + C50956 * C896 +
                       C33204 * C283 + C33424 + C33424 + C33202 * C303) *
                          C50877 * C17175) *
                         C51004) *
                        C50831) *
                       C278 +
                   ((((C33664 + C33663) * C50877 * C17175 +
                      (C33662 + C33661) * C50877 * C17176 +
                      (C33987 + C33988) * C50877 * C17177) *
                         C50859 -
                     (C33264 * C17177 + (C33256 + C33255) * C50877 * C17176 +
                      (C33254 + C33253) * C50877 * C17175) *
                         C51004) *
                        C51003 +
                    (((C33462 + C33461) * C50877 * C17175 +
                      (C33460 + C33459) * C50877 * C17176 +
                      (C33827 + C33828) * C50877 * C17177) *
                         C51004 -
                     ((C33206 * C1212 + C34197 + C34197 + C50956 * C1220 +
                       C33204 * C889 + C34198 + C34198 + C33202 * C899) *
                          C50877 * C17177 +
                      (C34210 + C34209) * C50877 * C17176 +
                      (C34208 + C34207) * C50877 * C17175) *
                         C50859) *
                        C50831) *
                       C50766)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                       C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                          C2286 +
                      (C36268 + C36269) * C2287 + C36276 * C2288) *
                         C50734 * C51004 -
                     ((C36941 + C36942) * C2288 + (C36943 + C36944) * C2287 +
                      (C33206 * C461 + C33625 + C33625 + C50956 * C481 +
                       C33204 * C460 + C33626 + C33626 + C33202 * C480) *
                          C2286) *
                         C50734 * C50859) *
                        C51003 +
                    (((C36944 + C36943) * C2286 + (C36942 + C36941) * C2287 +
                      (C33204 * C3170 + C36921 + C36921 + C33202 * C3176 +
                       C33206 * C3604 + C36922 + C36922 + C50956 * C3608) *
                          C2288) *
                         C50734 * C50859 -
                     ((C36272 + C36273) * C2288 + (C36271 + C36270) * C2287 +
                      (C36269 + C36268) * C2286) *
                         C50734 * C51004) *
                        C50831) *
                       C278 +
                   ((((C33664 + C33663) * C2286 + (C34207 + C34208) * C2287 +
                      (C36945 + C36946) * C2288) *
                         C50734 * C50859 -
                     (C36249 * C2288 + (C33461 + C33462) * C2287 +
                      (C33254 + C33253) * C2286) *
                         C50734 * C51004) *
                        C51003 +
                    (((C33462 + C33461) * C2286 + (C33463 + C33464) * C2287 +
                      (C36274 + C36275) * C2288) *
                         C50734 * C51004 -
                     ((C33206 * C3603 + C36927 + C36927 + C50956 * C3607 +
                       C33204 * C3171 + C36928 + C36928 + C33202 * C3177) *
                          C2288 +
                      (C36946 + C36945) * C2287 + (C34208 + C34207) * C2286) *
                         C50734 * C50859) *
                        C50831) *
                       C50766)) /
                     (p * q * std::sqrt(p + q));
    d2ee[212] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                      C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                         C50877 * C17175 +
                     (C33253 + C33254) * C50877 * C17176 + C33263 * C17177) *
                        C50795 * C275 -
                    ((C33459 + C33460) * C50877 * C17177 +
                     (C33461 + C33462) * C50877 * C17176 +
                     (C33206 * C886 + C33423 + C33423 + C50956 * C896 +
                      C33204 * C283 + C33424 + C33424 + C33202 * C303) *
                         C50877 * C17175) *
                        C50795 * C276 +
                    ((C33204 * C284 + C33425 + C33425 + C33202 * C304 +
                      C33206 * C1562 + C33426 + C33426 + C50956 * C1570) *
                         C50877 * C17175 +
                     (C33463 + C33464) * C50877 * C17176 +
                     (C33465 + C33466) * C50877 * C17177) *
                        C50795 * C277) *
                       C278 +
                   (((C33462 + C33461) * C50877 * C17175 +
                     (C33460 + C33459) * C50877 * C17176 +
                     (C33204 * C280 + C33439 + C33439 + C33202 * C300 +
                      C33206 * C889 + C33440 + C33440 + C50956 * C899) *
                         C50877 * C17177) *
                        C50795 * C276 -
                    (C33264 * C17177 + (C33256 + C33255) * C50877 * C17176 +
                     (C33254 + C33253) * C50877 * C17175) *
                        C50795 * C275 -
                    ((C33206 * C1559 + C33441 + C33441 + C50956 * C1567 +
                      C33204 * C287 + C33442 + C33442 + C33202 * C307) *
                         C50877 * C17177 +
                     (C33466 + C33465) * C50877 * C17176 +
                     (C33464 + C33463) * C50877 * C17175) *
                        C50795 * C277) *
                       C50766)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                     C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                        C50877 * C17175 +
                    (C33253 + C33254) * C50877 * C17176 + C33263 * C17177) *
                       C50795 * C50779 * C113 -
                   (C33264 * C17177 + (C33256 + C33255) * C50877 * C17176 +
                    (C33254 + C33253) * C50877 * C17175) *
                       C50795 * C50779 * C114 +
                   (C33263 * C17175 + (C33258 + C33257) * C50877 * C17176 +
                    (C33259 + C33260) * C50877 * C17177) *
                       C50795 * C50779 * C115 -
                   ((C33206 * C746 + C33235 + C33235 + C50956 * C748 +
                     C33204 * C124 + C33236 + C33236 + C33202 * C138) *
                        C50877 * C17177 +
                    (C33260 + C33259) * C50877 * C17176 + C33264 * C17175) *
                       C50795 * C50779 * C116)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                      C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                         C50877 * C17175 +
                     (C33253 + C33254) * C50877 * C17176 + C33263 * C17177) *
                        C454 -
                    ((C33661 + C33662) * C50877 * C17177 +
                     (C33663 + C33664) * C50877 * C17176 +
                     (C33206 * C461 + C33625 + C33625 + C50956 * C481 +
                      C33204 * C460 + C33626 + C33626 + C33202 * C480) *
                         C50877 * C17175) *
                        C455 +
                    ((C33204 * C461 + C33627 + C33627 + C33202 * C481 +
                      C33206 * C1846 + C33628 + C33628 + C50956 * C1854) *
                         C50877 * C17175 +
                     (C33665 + C33666) * C50877 * C17176 +
                     (C33667 + C33668) * C50877 * C17177) *
                        C456) *
                       C50779 * C278 +
                   (((C33664 + C33663) * C50877 * C17175 +
                     (C33662 + C33661) * C50877 * C17176 +
                     (C33204 * C457 + C33641 + C33641 + C33202 * C477 +
                      C33206 * C464 + C33642 + C33642 + C50956 * C484) *
                         C50877 * C17177) *
                        C455 -
                    (C33264 * C17177 + (C33256 + C33255) * C50877 * C17176 +
                     (C33254 + C33253) * C50877 * C17175) *
                        C454 -
                    ((C33206 * C1843 + C33643 + C33643 + C50956 * C1851 +
                      C33204 * C464 + C33644 + C33644 + C33202 * C484) *
                         C50877 * C17177 +
                     (C33668 + C33667) * C50877 * C17176 +
                     (C33666 + C33665) * C50877 * C17175) *
                        C456) *
                       C50779 * C50766)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                     C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                        C2286 +
                    (C33204 * C283 + C33424 + C33424 + C33202 * C303 +
                     C33206 * C886 + C33423 + C33423 + C50956 * C896) *
                        C2287 +
                    (C33204 * C284 + C33425 + C33425 + C33202 * C304 +
                     C33206 * C1562 + C33426 + C33426 + C50956 * C1570) *
                        C2288) *
                       C50734 * C50795 * C50779 * C113 -
                   ((C33464 + C33463) * C2288 + (C33461 + C33462) * C2287 +
                    (C33254 + C33253) * C2286) *
                       C50734 * C50795 * C50779 * C114 +
                   (C33261 * C2286 + (C33460 + C33459) * C2287 +
                    (C33465 + C33466) * C2288) *
                       C50734 * C50795 * C50779 * C115 -
                   ((C33206 * C1559 + C33441 + C33441 + C50956 * C1567 +
                     C33204 * C287 + C33442 + C33442 + C33202 * C307) *
                        C2288 +
                    (C33828 + C33827) * C2287 + C33262 * C2286) *
                       C50734 * C50795 * C50779 * C116)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                      C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                         C2286 +
                     (C36268 + C36269) * C2287 + C36276 * C2288) *
                        C50734 * C50795 * C275 -
                    ((C36272 + C36273) * C2288 + (C36271 + C36270) * C2287 +
                     (C36269 + C36268) * C2286) *
                        C50734 * C50795 * C276 +
                    (C36276 * C2286 + (C36273 + C36272) * C2287 +
                     (C33204 * C2446 + C36243 + C36243 + C33202 * C2452 +
                      C33206 * C4108 + C36244 + C36244 + C50956 * C4112) *
                         C2288) *
                        C50734 * C50795 * C277) *
                       C278 +
                   (((C33462 + C33461) * C2286 + (C33463 + C33464) * C2287 +
                     (C36274 + C36275) * C2288) *
                        C50734 * C50795 * C276 -
                    (C36249 * C2288 + (C33461 + C33462) * C2287 +
                     (C33254 + C33253) * C2286) *
                        C50734 * C50795 * C275 -
                    ((C33206 * C4107 + C36250 + C36250 + C50956 * C4111 +
                      C33204 * C2447 + C36251 + C36251 + C33202 * C2453) *
                         C2288 +
                     (C36275 + C36274) * C2287 + C36249 * C2286) *
                        C50734 * C50795 * C277) *
                       C50766)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                      C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                         C2286 +
                     (C36268 + C36269) * C2287 + C36276 * C2288) *
                        C50734 * C454 -
                    ((C33206 * C2640 + C35103 + C35103 + C50956 * C2646 +
                      C33204 * C1562 + C35104 + C35104 + C33202 * C1570) *
                         C2288 +
                     (C33206 * C1215 + C34184 + C34184 + C50956 * C1223 +
                      C33204 * C886 + C34183 + C34183 + C33202 * C896) *
                         C2287 +
                     (C33206 * C461 + C33625 + C33625 + C50956 * C481 +
                      C33204 * C460 + C33626 + C33626 + C33202 * C480) *
                         C2286) *
                        C50734 * C455 +
                    ((C33204 * C461 + C33627 + C33627 + C33202 * C481 +
                      C33206 * C1846 + C33628 + C33628 + C50956 * C1854) *
                         C2286 +
                     (C33204 * C1215 + C34612 + C34612 + C33202 * C1223 +
                      C33206 * C4513 + C34611 + C34611 + C50956 * C4521) *
                         C2287 +
                     (C33204 * C2640 + C36423 + C36423 + C33202 * C2646 +
                      C33206 * C4512 + C36424 + C36424 + C50956 * C4520) *
                         C2288) *
                        C50734 * C456) *
                       C50779 * C278 +
                   (((C33664 + C33663) * C2286 + (C34207 + C34208) * C2287 +
                     (C33204 * C1561 + C35102 + C35102 + C33202 * C1569 +
                      C33206 * C2641 + C35101 + C35101 + C50956 * C2647) *
                         C2288) *
                        C50734 * C455 -
                    (C36249 * C2288 + (C33461 + C33462) * C2287 +
                     (C33254 + C33253) * C2286) *
                        C50734 * C454 -
                    ((C33206 * C4510 + C36425 + C36425 + C50956 * C4518 +
                      C33204 * C2641 + C36426 + C36426 + C33202 * C2647) *
                         C2288 +
                     (C33206 * C4511 + C34609 + C34609 + C50956 * C4519 +
                      C33204 * C1214 + C34610 + C34610 + C33202 * C1222) *
                         C2287 +
                     (C33666 + C33665) * C2286) *
                        C50734 * C456) *
                       C50779 * C50766)) /
                     (p * q * std::sqrt(p + q));
    d2ee[213] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                      C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                         C50877 * C17175 +
                     (C33253 + C33254) * C50877 * C17176 + C33263 * C17177) *
                        C51004 -
                    (C33982 * C17177 + (C33663 + C33664) * C50877 * C17176 +
                     (C33206 * C461 + C33625 + C33625 + C50956 * C481 +
                      C33204 * C460 + C33626 + C33626 + C33202 * C480) *
                         C50877 * C17175) *
                        C50859) *
                       C50779 * C51046 +
                   (((C33664 + C33663) * C50877 * C17175 +
                     (C33662 + C33661) * C50877 * C17176 +
                     (C33987 + C33988) * C50877 * C17177) *
                        C50859 -
                    (C33264 * C17177 + (C33256 + C33255) * C50877 * C17176 +
                     (C33254 + C33253) * C50877 * C17175) *
                        C51004) *
                       C50779 * C51047 +
                   ((C33263 * C17175 + (C33258 + C33257) * C50877 * C17176 +
                     (C33259 + C33260) * C50877 * C17177) *
                        C51004 -
                    ((C33206 * C466 + C33980 + C33980 + C50956 * C486 +
                      C33204 * C465 + C33981 + C33981 + C33202 * C485) *
                         C50877 * C17177 +
                     (C33988 + C33987) * C50877 * C17176 + C33982 * C17175) *
                        C50859) *
                       C50779 * C635)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                      C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                         C2286 +
                     (C36268 + C36269) * C2287 + C36276 * C2288) *
                        C50734 * C51004 -
                    ((C33206 * C2640 + C35103 + C35103 + C50956 * C2646 +
                      C33204 * C1562 + C35104 + C35104 + C33202 * C1570) *
                         C2288 +
                     (C33206 * C1215 + C34184 + C34184 + C50956 * C1223 +
                      C33204 * C886 + C34183 + C34183 + C33202 * C896) *
                         C2287 +
                     (C33206 * C461 + C33625 + C33625 + C50956 * C481 +
                      C33204 * C460 + C33626 + C33626 + C33202 * C480) *
                         C2286) *
                        C50734 * C50859) *
                       C50779 * C51046 +
                   (((C33664 + C33663) * C2286 + (C34207 + C34208) * C2287 +
                     (C33204 * C1561 + C35102 + C35102 + C33202 * C1569 +
                      C33206 * C2641 + C35101 + C35101 + C50956 * C2647) *
                         C2288) *
                        C50734 * C50859 -
                    (C36249 * C2288 + (C33461 + C33462) * C2287 +
                     (C33254 + C33253) * C2286) *
                        C50734 * C51004) *
                       C50779 * C51047 +
                   ((C33261 * C2286 + (C33460 + C33459) * C2287 +
                     (C33465 + C33466) * C2288) *
                        C50734 * C51004 -
                    ((C33206 * C2642 + C35099 + C35099 + C50956 * C2648 +
                      C33204 * C1560 + C35100 + C35100 + C33202 * C1568) *
                         C2288 +
                     (C34210 + C34209) * C2287 + C33975 * C2286) *
                        C50734 * C50859) *
                       C50779 * C635)) /
                     (p * q * std::sqrt(p + q));
    d2ee[214] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                     C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                        C50877 * C17175 +
                    (C33253 + C33254) * C50877 * C17176 + C33263 * C17177) *
                       C50795 * C50779 * C113 -
                   (C33264 * C17177 + (C33256 + C33255) * C50877 * C17176 +
                    (C33254 + C33253) * C50877 * C17175) *
                       C50795 * C50779 * C114 +
                   (C33263 * C17175 + (C33258 + C33257) * C50877 * C17176 +
                    (C33259 + C33260) * C50877 * C17177) *
                       C50795 * C50779 * C115 -
                   ((C33206 * C746 + C33235 + C33235 + C50956 * C748 +
                     C33204 * C124 + C33236 + C33236 + C33202 * C138) *
                        C50877 * C17177 +
                    (C33260 + C33259) * C50877 * C17176 + C33264 * C17175) *
                       C50795 * C50779 * C116)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                      C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                         C50877 * C17175 +
                     (C33253 + C33254) * C50877 * C17176 + C33263 * C17177) *
                        C50795 * C275 -
                    ((C33459 + C33460) * C50877 * C17177 +
                     (C33461 + C33462) * C50877 * C17176 +
                     (C33206 * C886 + C33423 + C33423 + C50956 * C896 +
                      C33204 * C283 + C33424 + C33424 + C33202 * C303) *
                         C50877 * C17175) *
                        C50795 * C276 +
                    ((C33204 * C284 + C33425 + C33425 + C33202 * C304 +
                      C33206 * C1562 + C33426 + C33426 + C50956 * C1570) *
                         C50877 * C17175 +
                     (C33463 + C33464) * C50877 * C17176 +
                     (C33465 + C33466) * C50877 * C17177) *
                        C50795 * C277) *
                       C278 +
                   (((C33462 + C33461) * C50877 * C17175 +
                     (C33460 + C33459) * C50877 * C17176 +
                     (C33204 * C280 + C33439 + C33439 + C33202 * C300 +
                      C33206 * C889 + C33440 + C33440 + C50956 * C899) *
                         C50877 * C17177) *
                        C50795 * C276 -
                    (C33264 * C17177 + (C33256 + C33255) * C50877 * C17176 +
                     (C33254 + C33253) * C50877 * C17175) *
                        C50795 * C275 -
                    ((C33206 * C1559 + C33441 + C33441 + C50956 * C1567 +
                      C33204 * C287 + C33442 + C33442 + C33202 * C307) *
                         C50877 * C17177 +
                     (C33466 + C33465) * C50877 * C17176 +
                     (C33464 + C33463) * C50877 * C17175) *
                        C50795 * C277) *
                       C50766)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                     C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                        C2286 +
                    (C33204 * C283 + C33424 + C33424 + C33202 * C303 +
                     C33206 * C886 + C33423 + C33423 + C50956 * C896) *
                        C2287 +
                    (C33204 * C284 + C33425 + C33425 + C33202 * C304 +
                     C33206 * C1562 + C33426 + C33426 + C50956 * C1570) *
                        C2288) *
                       C50734 * C50795 * C50779 * C113 -
                   ((C33464 + C33463) * C2288 + (C33461 + C33462) * C2287 +
                    (C33254 + C33253) * C2286) *
                       C50734 * C50795 * C50779 * C114 +
                   (C33261 * C2286 + (C33460 + C33459) * C2287 +
                    (C33465 + C33466) * C2288) *
                       C50734 * C50795 * C50779 * C115 -
                   ((C33206 * C1559 + C33441 + C33441 + C50956 * C1567 +
                     C33204 * C287 + C33442 + C33442 + C33202 * C307) *
                        C2288 +
                    (C33828 + C33827) * C2287 + C33262 * C2286) *
                       C50734 * C50795 * C50779 * C116)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                      C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                         C2286 +
                     (C36268 + C36269) * C2287 + C36276 * C2288) *
                        C50734 * C50795 * C275 -
                    ((C36272 + C36273) * C2288 + (C36271 + C36270) * C2287 +
                     (C36269 + C36268) * C2286) *
                        C50734 * C50795 * C276 +
                    (C36276 * C2286 + (C36273 + C36272) * C2287 +
                     (C33204 * C2446 + C36243 + C36243 + C33202 * C2452 +
                      C33206 * C4108 + C36244 + C36244 + C50956 * C4112) *
                         C2288) *
                        C50734 * C50795 * C277) *
                       C278 +
                   (((C33462 + C33461) * C2286 + (C33463 + C33464) * C2287 +
                     (C36274 + C36275) * C2288) *
                        C50734 * C50795 * C276 -
                    (C36249 * C2288 + (C33461 + C33462) * C2287 +
                     (C33254 + C33253) * C2286) *
                        C50734 * C50795 * C275 -
                    ((C33206 * C4107 + C36250 + C36250 + C50956 * C4111 +
                      C33204 * C2447 + C36251 + C36251 + C33202 * C2453) *
                         C2288 +
                     (C36275 + C36274) * C2287 + C36249 * C2286) *
                        C50734 * C50795 * C277) *
                       C50766)) /
                     (p * q * std::sqrt(p + q));
    d2ee[215] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                      C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                         C50877 * C17175 +
                     (C33253 + C33254) * C50877 * C17176 + C33263 * C17177) *
                        C50795 * C51048 -
                    (C33822 * C17177 + (C33461 + C33462) * C50877 * C17176 +
                     (C33206 * C886 + C33423 + C33423 + C50956 * C896 +
                      C33204 * C283 + C33424 + C33424 + C33202 * C303) *
                         C50877 * C17175) *
                        C50795 * C51049 +
                    ((C33204 * C284 + C33425 + C33425 + C33202 * C304 +
                      C33206 * C1562 + C33426 + C33426 + C50956 * C1570) *
                         C50877 * C17175 +
                     (C33463 + C33464) * C50877 * C17176 +
                     (C33465 + C33466) * C50877 * C17177) *
                        C50795 * C1328) *
                       C50995 +
                   (((C33462 + C33461) * C50877 * C17175 +
                     (C33460 + C33459) * C50877 * C17176 +
                     (C33827 + C33828) * C50877 * C17177) *
                        C50795 * C51049 -
                    (C33264 * C17177 + (C33256 + C33255) * C50877 * C17176 +
                     (C33254 + C33253) * C50877 * C17175) *
                        C50795 * C51048 -
                    ((C33206 * C1559 + C33441 + C33441 + C50956 * C1567 +
                      C33204 * C287 + C33442 + C33442 + C33202 * C307) *
                         C50877 * C17177 +
                     (C33466 + C33465) * C50877 * C17176 +
                     (C33464 + C33463) * C50877 * C17175) *
                        C50795 * C1328) *
                       C50766)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                      C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                         C2286 +
                     (C36268 + C36269) * C2287 + C36276 * C2288) *
                        C50734 * C50795 * C51048 -
                    (C37191 * C2288 + (C36271 + C36270) * C2287 +
                     (C36269 + C36268) * C2286) *
                        C50734 * C50795 * C51049 +
                    (C36276 * C2286 + (C36273 + C36272) * C2287 +
                     (C37202 + C37203) * C2288) *
                        C50734 * C50795 * C1328) *
                       C50995 +
                   (((C33462 + C33461) * C2286 + (C33463 + C33464) * C2287 +
                     (C36274 + C36275) * C2288) *
                        C50734 * C50795 * C51049 -
                    (C36249 * C2288 + (C33461 + C33462) * C2287 +
                     (C33254 + C33253) * C2286) *
                        C50734 * C50795 * C51048 -
                    ((C33206 * C4107 + C36250 + C36250 + C50956 * C4111 +
                      C33204 * C2447 + C36251 + C36251 + C33202 * C2453) *
                         C2288 +
                     (C36275 + C36274) * C2287 + C36249 * C2286) *
                        C50734 * C50795 * C1328) *
                       C50766)) /
                     (p * q * std::sqrt(p + q));
    d2ee[216] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                      C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                         C50877 * C17175 +
                     (C33253 + C33254) * C50877 * C17176 + C33263 * C17177) *
                        C51004 -
                    (C33982 * C17177 + (C33663 + C33664) * C50877 * C17176 +
                     (C33206 * C461 + C33625 + C33625 + C50956 * C481 +
                      C33204 * C460 + C33626 + C33626 + C33202 * C480) *
                         C50877 * C17175) *
                        C50859) *
                       C51048 +
                   (((C33204 * C886 + C34183 + C34183 + C33202 * C896 +
                      C33206 * C1215 + C34184 + C34184 + C50956 * C1223) *
                         C50877 * C17175 +
                     (C34207 + C34208) * C50877 * C17176 +
                     (C34209 + C34210) * C50877 * C17177) *
                        C50859 -
                    (C33822 * C17177 + (C33461 + C33462) * C50877 * C17176 +
                     (C33206 * C886 + C33423 + C33423 + C50956 * C896 +
                      C33204 * C283 + C33424 + C33424 + C33202 * C303) *
                         C50877 * C17175) *
                        C51004) *
                       C51049 +
                   (((C33204 * C284 + C33425 + C33425 + C33202 * C304 +
                      C33206 * C1562 + C33426 + C33426 + C50956 * C1570) *
                         C50877 * C17175 +
                     (C33463 + C33464) * C50877 * C17176 +
                     (C33465 + C33466) * C50877 * C17177) *
                        C51004 -
                    ((C33206 * C2642 + C35099 + C35099 + C50956 * C2648 +
                      C33204 * C1560 + C35100 + C35100 + C33202 * C1568) *
                         C50877 * C17177 +
                     (C33206 * C2641 + C35101 + C35101 + C50956 * C2647 +
                      C33204 * C1561 + C35102 + C35102 + C33202 * C1569) *
                         C50877 * C17176 +
                     (C33206 * C2640 + C35103 + C35103 + C50956 * C2646 +
                      C33204 * C1562 + C35104 + C35104 + C33202 * C1570) *
                         C50877 * C17175) *
                        C50859) *
                       C1328) *
                  C50760) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                      C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                         C2286 +
                     (C36268 + C36269) * C2287 + C36276 * C2288) *
                        C50734 * C51004 -
                    (C37858 * C2288 + (C36943 + C36944) * C2287 +
                     (C33206 * C461 + C33625 + C33625 + C50956 * C481 +
                      C33204 * C460 + C33626 + C33626 + C33202 * C480) *
                         C2286) *
                        C50734 * C50859) *
                       C51048 +
                   (((C36944 + C36943) * C2286 + (C36942 + C36941) * C2287 +
                     (C37869 + C37870) * C2288) *
                        C50734 * C50859 -
                    (C37191 * C2288 + (C36271 + C36270) * C2287 +
                     (C36269 + C36268) * C2286) *
                        C50734 * C51004) *
                       C51049 +
                   ((C36276 * C2286 + (C36273 + C36272) * C2287 +
                     (C37202 + C37203) * C2288) *
                        C50734 * C51004 -
                    ((C33206 * C20608 + C37863 + C37863 + C50956 * C20610 +
                      C33204 * C4108 + C37864 + C37864 + C33202 * C4112) *
                         C2288 +
                     (C37870 + C37869) * C2287 + C37858 * C2286) *
                        C50734 * C50859) *
                       C1328) *
                  C50760) /
                     (p * q * std::sqrt(p + q));
    d2ee[217] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                     C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                        C50877 * C17175 +
                    (C33253 + C33254) * C50877 * C17176 + C33263 * C17177) *
                       C50795 * C1093 -
                   (C33822 * C17177 + (C33461 + C33462) * C50877 * C17176 +
                    (C33206 * C886 + C33423 + C33423 + C50956 * C896 +
                     C33204 * C283 + C33424 + C33424 + C33202 * C303) *
                        C50877 * C17175) *
                       C50795 * C1094 +
                   ((C33204 * C284 + C33425 + C33425 + C33202 * C304 +
                     C33206 * C1562 + C33426 + C33426 + C50956 * C1570) *
                        C50877 * C17175 +
                    (C33463 + C33464) * C50877 * C17176 +
                    (C33465 + C33466) * C50877 * C17177) *
                       C50795 * C1095 -
                   ((C33206 * C3172 + C34455 + C34455 + C50956 * C3178 +
                     C33204 * C1099 + C34456 + C34456 + C33202 * C1107) *
                        C50877 * C17177 +
                    (C33206 * C3171 + C34457 + C34457 + C50956 * C3177 +
                     C33204 * C1100 + C34458 + C34458 + C33202 * C1108) *
                        C50877 * C17176 +
                    (C33206 * C3170 + C34459 + C34459 + C50956 * C3176 +
                     C33204 * C1101 + C34460 + C34460 + C33202 * C1109) *
                        C50877 * C17175) *
                       C50795 * C1096) *
                  C50760) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                      C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                         C50877 * C17175 +
                     (C33253 + C33254) * C50877 * C17176 + C33263 * C17177) *
                        C50795 * C1022 -
                    (C33822 * C17177 + (C33461 + C33462) * C50877 * C17176 +
                     (C33206 * C886 + C33423 + C33423 + C50956 * C896 +
                      C33204 * C283 + C33424 + C33424 + C33202 * C303) *
                         C50877 * C17175) *
                        C50795 * C50831) *
                       C1024 +
                   (((C33462 + C33461) * C50877 * C17175 +
                     (C33460 + C33459) * C50877 * C17176 +
                     (C33827 + C33828) * C50877 * C17177) *
                        C50795 * C50831 -
                    (C33264 * C17177 + (C33256 + C33255) * C50877 * C17176 +
                     (C33254 + C33253) * C50877 * C17175) *
                        C50795 * C1022) *
                       C1025 +
                   ((C33263 * C17175 + (C33258 + C33257) * C50877 * C17176 +
                     (C33259 + C33260) * C50877 * C17177) *
                        C50795 * C1022 -
                    ((C33206 * C890 + C33820 + C33820 + C50956 * C900 +
                      C33204 * C288 + C33821 + C33821 + C33202 * C308) *
                         C50877 * C17177 +
                     (C33828 + C33827) * C50877 * C17176 + C33822 * C17175) *
                        C50795 * C50831) *
                       C1026)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                      C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                         C50877 * C17175 +
                     (C33253 + C33254) * C50877 * C17176 + C33263 * C17177) *
                        C454 -
                    (C33982 * C17177 + (C33663 + C33664) * C50877 * C17176 +
                     (C33206 * C461 + C33625 + C33625 + C50956 * C481 +
                      C33204 * C460 + C33626 + C33626 + C33202 * C480) *
                         C50877 * C17175) *
                        C455 +
                    ((C33204 * C461 + C33627 + C33627 + C33202 * C481 +
                      C33206 * C1846 + C33628 + C33628 + C50956 * C1854) *
                         C50877 * C17175 +
                     (C33665 + C33666) * C50877 * C17176 +
                     (C33667 + C33668) * C50877 * C17177) *
                        C456) *
                       C1022 +
                   (((C33204 * C886 + C34183 + C34183 + C33202 * C896 +
                      C33206 * C1215 + C34184 + C34184 + C50956 * C1223) *
                         C50877 * C17175 +
                     (C34207 + C34208) * C50877 * C17176 +
                     (C34209 + C34210) * C50877 * C17177) *
                        C455 -
                    (C33822 * C17177 + (C33461 + C33462) * C50877 * C17176 +
                     (C33206 * C886 + C33423 + C33423 + C50956 * C896 +
                      C33204 * C283 + C33424 + C33424 + C33202 * C303) *
                         C50877 * C17175) *
                        C454 -
                    ((C33206 * C6098 + C34607 + C34607 + C50956 * C6100 +
                      C33204 * C1213 + C34608 + C34608 + C33202 * C1221) *
                         C50877 * C17177 +
                     (C33206 * C4511 + C34609 + C34609 + C50956 * C4519 +
                      C33204 * C1214 + C34610 + C34610 + C33202 * C1222) *
                         C50877 * C17176 +
                     (C33206 * C4513 + C34611 + C34611 + C50956 * C4521 +
                      C33204 * C1215 + C34612 + C34612 + C33202 * C1223) *
                         C50877 * C17175) *
                        C456) *
                       C50831) *
                  C50760) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                      C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                         C2286 +
                     (C36268 + C36269) * C2287 + C36276 * C2288) *
                        C50734 * C50795 * C1022 -
                    ((C36272 + C36273) * C2288 + (C36271 + C36270) * C2287 +
                     (C36269 + C36268) * C2286) *
                        C50734 * C50795 * C50831) *
                       C1024 +
                   (((C33462 + C33461) * C2286 + (C33463 + C33464) * C2287 +
                     (C36274 + C36275) * C2288) *
                        C50734 * C50795 * C50831 -
                    (C36249 * C2288 + (C33461 + C33462) * C2287 +
                     (C33254 + C33253) * C2286) *
                        C50734 * C50795 * C1022) *
                       C1025 +
                   ((C33261 * C2286 + (C33460 + C33459) * C2287 +
                     (C33465 + C33466) * C2288) *
                        C50734 * C50795 * C1022 -
                    ((C33206 * C3172 + C34455 + C34455 + C50956 * C3178 +
                      C33204 * C1099 + C34456 + C34456 + C33202 * C1107) *
                         C2288 +
                     (C33466 + C33465) * C2287 + C33815 * C2286) *
                        C50734 * C50795 * C50831) *
                       C1026)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                     C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                        C2286 +
                    (C36268 + C36269) * C2287 + C36276 * C2288) *
                       C50734 * C50795 * C1093 -
                   (C37191 * C2288 + (C36271 + C36270) * C2287 +
                    (C36269 + C36268) * C2286) *
                       C50734 * C50795 * C1094 +
                   (C36276 * C2286 + (C36273 + C36272) * C2287 +
                    (C37202 + C37203) * C2288) *
                       C50734 * C50795 * C1095 -
                   ((C33206 * C20943 + C37196 + C37196 + C50956 * C20945 +
                     C33204 * C3445 + C37197 + C37197 + C33202 * C3449) *
                        C2288 +
                    (C37203 + C37202) * C2287 + C37191 * C2286) *
                       C50734 * C50795 * C1096) *
                  C50760) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                      C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                         C2286 +
                     (C36268 + C36269) * C2287 + C36276 * C2288) *
                        C50734 * C454 -
                    ((C36941 + C36942) * C2288 + (C36943 + C36944) * C2287 +
                     (C33206 * C461 + C33625 + C33625 + C50956 * C481 +
                      C33204 * C460 + C33626 + C33626 + C33202 * C480) *
                         C2286) *
                        C50734 * C455 +
                    ((C33204 * C461 + C33627 + C33627 + C33202 * C481 +
                      C33206 * C1846 + C33628 + C33628 + C50956 * C1854) *
                         C2286 +
                     (C37368 + C37369) * C2287 + (C37370 + C37371) * C2288) *
                        C50734 * C456) *
                       C1022 +
                   (((C36944 + C36943) * C2286 + (C36942 + C36941) * C2287 +
                     (C33204 * C3170 + C36921 + C36921 + C33202 * C3176 +
                      C33206 * C3604 + C36922 + C36922 + C50956 * C3608) *
                         C2288) *
                        C50734 * C455 -
                    (C37191 * C2288 + (C36271 + C36270) * C2287 +
                     (C36269 + C36268) * C2286) *
                        C50734 * C454 -
                    ((C33206 * C21214 + C37358 + C37358 + C50956 * C21216 +
                      C33204 * C3604 + C37359 + C37359 + C33202 * C3608) *
                         C2288 +
                     (C37371 + C37370) * C2287 + (C37369 + C37368) * C2286) *
                        C50734 * C456) *
                       C50831) *
                  C50760) /
                     (p * q * std::sqrt(p + q));
    d2ee[218] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                       C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                          C50877 * C17175 +
                      (C33253 + C33254) * C50877 * C17176 + C33263 * C17177) *
                         C51004 -
                     (C33982 * C17177 + (C33663 + C33664) * C50877 * C17176 +
                      (C33206 * C461 + C33625 + C33625 + C50956 * C481 +
                       C33204 * C460 + C33626 + C33626 + C33202 * C480) *
                          C50877 * C17175) *
                         C50859) *
                        C1022 +
                    (((C33204 * C886 + C34183 + C34183 + C33202 * C896 +
                       C33206 * C1215 + C34184 + C34184 + C50956 * C1223) *
                          C50877 * C17175 +
                      (C34207 + C34208) * C50877 * C17176 +
                      (C34209 + C34210) * C50877 * C17177) *
                         C50859 -
                     (C33822 * C17177 + (C33461 + C33462) * C50877 * C17176 +
                      (C33206 * C886 + C33423 + C33423 + C50956 * C896 +
                       C33204 * C283 + C33424 + C33424 + C33202 * C303) *
                          C50877 * C17175) *
                         C51004) *
                        C50831) *
                       C50995 +
                   ((((C33664 + C33663) * C50877 * C17175 +
                      (C33662 + C33661) * C50877 * C17176 +
                      (C33987 + C33988) * C50877 * C17177) *
                         C50859 -
                     (C33264 * C17177 + (C33256 + C33255) * C50877 * C17176 +
                      (C33254 + C33253) * C50877 * C17175) *
                         C51004) *
                        C1022 +
                    (((C33462 + C33461) * C50877 * C17175 +
                      (C33460 + C33459) * C50877 * C17176 +
                      (C33827 + C33828) * C50877 * C17177) *
                         C51004 -
                     ((C33206 * C1212 + C34197 + C34197 + C50956 * C1220 +
                       C33204 * C889 + C34198 + C34198 + C33202 * C899) *
                          C50877 * C17177 +
                      (C34210 + C34209) * C50877 * C17176 +
                      (C34208 + C34207) * C50877 * C17175) *
                         C50859) *
                        C50831) *
                       C50766)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                       C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                          C2286 +
                      (C36268 + C36269) * C2287 + C36276 * C2288) *
                         C50734 * C51004 -
                     ((C36941 + C36942) * C2288 + (C36943 + C36944) * C2287 +
                      (C33206 * C461 + C33625 + C33625 + C50956 * C481 +
                       C33204 * C460 + C33626 + C33626 + C33202 * C480) *
                          C2286) *
                         C50734 * C50859) *
                        C1022 +
                    (((C36944 + C36943) * C2286 + (C36942 + C36941) * C2287 +
                      (C33204 * C3170 + C36921 + C36921 + C33202 * C3176 +
                       C33206 * C3604 + C36922 + C36922 + C50956 * C3608) *
                          C2288) *
                         C50734 * C50859 -
                     (C37191 * C2288 + (C36271 + C36270) * C2287 +
                      (C36269 + C36268) * C2286) *
                         C50734 * C51004) *
                        C50831) *
                       C50995 +
                   ((((C33664 + C33663) * C2286 + (C34207 + C34208) * C2287 +
                      (C36945 + C36946) * C2288) *
                         C50734 * C50859 -
                     (C36249 * C2288 + (C33461 + C33462) * C2287 +
                      (C33254 + C33253) * C2286) *
                         C50734 * C51004) *
                        C1022 +
                    (((C33462 + C33461) * C2286 + (C33463 + C33464) * C2287 +
                      (C36274 + C36275) * C2288) *
                         C50734 * C51004 -
                     ((C33206 * C3603 + C36927 + C36927 + C50956 * C3607 +
                       C33204 * C3171 + C36928 + C36928 + C33202 * C3177) *
                          C2288 +
                      (C36946 + C36945) * C2287 + (C34208 + C34207) * C2286) *
                         C50734 * C50859) *
                        C50831) *
                       C50766)) /
                     (p * q * std::sqrt(p + q));
    d2ee[219] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                      C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                         C50877 * C17175 +
                     (C33253 + C33254) * C50877 * C17176 + C33263 * C17177) *
                        C50795 * C1022 -
                    (C33822 * C17177 + (C33461 + C33462) * C50877 * C17176 +
                     (C33206 * C886 + C33423 + C33423 + C50956 * C896 +
                      C33204 * C283 + C33424 + C33424 + C33202 * C303) *
                         C50877 * C17175) *
                        C50795 * C50831) *
                       C1024 +
                   (((C33462 + C33461) * C50877 * C17175 +
                     (C33460 + C33459) * C50877 * C17176 +
                     (C33827 + C33828) * C50877 * C17177) *
                        C50795 * C50831 -
                    (C33264 * C17177 + (C33256 + C33255) * C50877 * C17176 +
                     (C33254 + C33253) * C50877 * C17175) *
                        C50795 * C1022) *
                       C1025 +
                   ((C33263 * C17175 + (C33258 + C33257) * C50877 * C17176 +
                     (C33259 + C33260) * C50877 * C17177) *
                        C50795 * C1022 -
                    ((C33206 * C890 + C33820 + C33820 + C50956 * C900 +
                      C33204 * C288 + C33821 + C33821 + C33202 * C308) *
                         C50877 * C17177 +
                     (C33828 + C33827) * C50877 * C17176 + C33822 * C17175) *
                        C50795 * C50831) *
                       C1026)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                     C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                        C50877 * C17175 +
                    (C33253 + C33254) * C50877 * C17176 + C33263 * C17177) *
                       C50795 * C1093 -
                   (C33822 * C17177 + (C33461 + C33462) * C50877 * C17176 +
                    (C33206 * C886 + C33423 + C33423 + C50956 * C896 +
                     C33204 * C283 + C33424 + C33424 + C33202 * C303) *
                        C50877 * C17175) *
                       C50795 * C1094 +
                   ((C33204 * C284 + C33425 + C33425 + C33202 * C304 +
                     C33206 * C1562 + C33426 + C33426 + C50956 * C1570) *
                        C50877 * C17175 +
                    (C33463 + C33464) * C50877 * C17176 +
                    (C33465 + C33466) * C50877 * C17177) *
                       C50795 * C1095 -
                   ((C33206 * C3172 + C34455 + C34455 + C50956 * C3178 +
                     C33204 * C1099 + C34456 + C34456 + C33202 * C1107) *
                        C50877 * C17177 +
                    (C33206 * C3171 + C34457 + C34457 + C50956 * C3177 +
                     C33204 * C1100 + C34458 + C34458 + C33202 * C1108) *
                        C50877 * C17176 +
                    (C33206 * C3170 + C34459 + C34459 + C50956 * C3176 +
                     C33204 * C1101 + C34460 + C34460 + C33202 * C1109) *
                        C50877 * C17175) *
                       C50795 * C1096) *
                  C50760) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                      C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                         C2286 +
                     (C36268 + C36269) * C2287 + C36276 * C2288) *
                        C50734 * C50795 * C1022 -
                    ((C36272 + C36273) * C2288 + (C36271 + C36270) * C2287 +
                     (C36269 + C36268) * C2286) *
                        C50734 * C50795 * C50831) *
                       C1024 +
                   (((C33462 + C33461) * C2286 + (C33463 + C33464) * C2287 +
                     (C36274 + C36275) * C2288) *
                        C50734 * C50795 * C50831 -
                    (C36249 * C2288 + (C33461 + C33462) * C2287 +
                     (C33254 + C33253) * C2286) *
                        C50734 * C50795 * C1022) *
                       C1025 +
                   ((C33261 * C2286 + (C33460 + C33459) * C2287 +
                     (C33465 + C33466) * C2288) *
                        C50734 * C50795 * C1022 -
                    ((C33206 * C3172 + C34455 + C34455 + C50956 * C3178 +
                      C33204 * C1099 + C34456 + C34456 + C33202 * C1107) *
                         C2288 +
                     (C33466 + C33465) * C2287 + C33815 * C2286) *
                        C50734 * C50795 * C50831) *
                       C1026)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                     C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                        C2286 +
                    (C36268 + C36269) * C2287 + C36276 * C2288) *
                       C50734 * C50795 * C1093 -
                   (C37191 * C2288 + (C36271 + C36270) * C2287 +
                    (C36269 + C36268) * C2286) *
                       C50734 * C50795 * C1094 +
                   (C36276 * C2286 + (C36273 + C36272) * C2287 +
                    (C37202 + C37203) * C2288) *
                       C50734 * C50795 * C1095 -
                   ((C33206 * C20943 + C37196 + C37196 + C50956 * C20945 +
                     C33204 * C3445 + C37197 + C37197 + C33202 * C3449) *
                        C2288 +
                    (C37203 + C37202) * C2287 + C37191 * C2286) *
                       C50734 * C50795 * C1096) *
                  C50760) /
                     (p * q * std::sqrt(p + q));
    d2ee[220] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                       C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                          C50877 * C17175 +
                      (C33253 + C33254) * C50877 * C17176 + C33263 * C17177) *
                         C1673 -
                     (C33982 * C17177 + (C33663 + C33664) * C50877 * C17176 +
                      (C33206 * C461 + C33625 + C33625 + C50956 * C481 +
                       C33204 * C460 + C33626 + C33626 + C33202 * C480) *
                          C50877 * C17175) *
                         C50859) *
                        C51003 +
                    (((C33204 * C886 + C34183 + C34183 + C33202 * C896 +
                       C33206 * C1215 + C34184 + C34184 + C50956 * C1223) *
                          C50877 * C17175 +
                      (C34207 + C34208) * C50877 * C17176 +
                      (C34209 + C34210) * C50877 * C17177) *
                         C50859 -
                     (C33822 * C17177 + (C33461 + C33462) * C50877 * C17176 +
                      (C33206 * C886 + C33423 + C33423 + C50956 * C896 +
                       C33204 * C283 + C33424 + C33424 + C33202 * C303) *
                          C50877 * C17175) *
                         C1673) *
                        C50831) *
                       C50995 +
                   ((((C33664 + C33663) * C50877 * C17175 +
                      (C33662 + C33661) * C50877 * C17176 +
                      (C33987 + C33988) * C50877 * C17177) *
                         C50859 -
                     (C33264 * C17177 + (C33256 + C33255) * C50877 * C17176 +
                      (C33254 + C33253) * C50877 * C17175) *
                         C1673) *
                        C51003 +
                    (((C33462 + C33461) * C50877 * C17175 +
                      (C33460 + C33459) * C50877 * C17176 +
                      (C33827 + C33828) * C50877 * C17177) *
                         C1673 -
                     ((C33206 * C1212 + C34197 + C34197 + C50956 * C1220 +
                       C33204 * C889 + C34198 + C34198 + C33202 * C899) *
                          C50877 * C17177 +
                      (C34210 + C34209) * C50877 * C17176 +
                      (C34208 + C34207) * C50877 * C17175) *
                         C50859) *
                        C50831) *
                       C50766)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                       C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                          C2286 +
                      (C36268 + C36269) * C2287 + C36276 * C2288) *
                         C50734 * C1673 -
                     (C37858 * C2288 + (C36943 + C36944) * C2287 +
                      (C33206 * C461 + C33625 + C33625 + C50956 * C481 +
                       C33204 * C460 + C33626 + C33626 + C33202 * C480) *
                          C2286) *
                         C50734 * C50859) *
                        C51003 +
                    (((C36944 + C36943) * C2286 + (C36942 + C36941) * C2287 +
                      (C37869 + C37870) * C2288) *
                         C50734 * C50859 -
                     (C37191 * C2288 + (C36271 + C36270) * C2287 +
                      (C36269 + C36268) * C2286) *
                         C50734 * C1673) *
                        C50831) *
                       C50995 +
                   ((((C33664 + C33663) * C2286 + (C34207 + C34208) * C2287 +
                      (C36945 + C36946) * C2288) *
                         C50734 * C50859 -
                     (C36249 * C2288 + (C33461 + C33462) * C2287 +
                      (C33254 + C33253) * C2286) *
                         C50734 * C1673) *
                        C51003 +
                    (((C33462 + C33461) * C2286 + (C33463 + C33464) * C2287 +
                      (C36274 + C36275) * C2288) *
                         C50734 * C1673 -
                     ((C33206 * C3603 + C36927 + C36927 + C50956 * C3607 +
                       C33204 * C3171 + C36928 + C36928 + C33202 * C3177) *
                          C2288 +
                      (C36946 + C36945) * C2287 + (C34208 + C34207) * C2286) *
                         C50734 * C50859) *
                        C50831) *
                       C50766)) /
                     (p * q * std::sqrt(p + q));
    d2ee[221] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                      C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                         C50877 * C17175 +
                     (C33253 + C33254) * C50877 * C17176 + C33263 * C17177) *
                        C51050 -
                    (C33982 * C17177 + (C33663 + C33664) * C50877 * C17176 +
                     (C33206 * C461 + C33625 + C33625 + C50956 * C481 +
                      C33204 * C460 + C33626 + C33626 + C33202 * C480) *
                         C50877 * C17175) *
                        C51051 +
                    ((C33204 * C461 + C33627 + C33627 + C33202 * C481 +
                      C33206 * C1846 + C33628 + C33628 + C50956 * C1854) *
                         C50877 * C17175 +
                     (C33665 + C33666) * C50877 * C17176 +
                     (C33667 + C33668) * C50877 * C17177) *
                        C2089) *
                       C51003 +
                   (((C33204 * C886 + C34183 + C34183 + C33202 * C896 +
                      C33206 * C1215 + C34184 + C34184 + C50956 * C1223) *
                         C50877 * C17175 +
                     (C34207 + C34208) * C50877 * C17176 +
                     (C34209 + C34210) * C50877 * C17177) *
                        C51051 -
                    (C33822 * C17177 + (C33461 + C33462) * C50877 * C17176 +
                     (C33206 * C886 + C33423 + C33423 + C50956 * C896 +
                      C33204 * C283 + C33424 + C33424 + C33202 * C303) *
                         C50877 * C17175) *
                        C51050 -
                    ((C33206 * C6098 + C34607 + C34607 + C50956 * C6100 +
                      C33204 * C1213 + C34608 + C34608 + C33202 * C1221) *
                         C50877 * C17177 +
                     (C33206 * C4511 + C34609 + C34609 + C50956 * C4519 +
                      C33204 * C1214 + C34610 + C34610 + C33202 * C1222) *
                         C50877 * C17176 +
                     (C33206 * C4513 + C34611 + C34611 + C50956 * C4521 +
                      C33204 * C1215 + C34612 + C34612 + C33202 * C1223) *
                         C50877 * C17175) *
                        C2089) *
                       C50831) *
                  C50760) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                      C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                         C2286 +
                     (C36268 + C36269) * C2287 + C36276 * C2288) *
                        C50734 * C51050 -
                    (C37858 * C2288 + (C36943 + C36944) * C2287 +
                     (C33206 * C461 + C33625 + C33625 + C50956 * C481 +
                      C33204 * C460 + C33626 + C33626 + C33202 * C480) *
                         C2286) *
                        C50734 * C51051 +
                    ((C33204 * C461 + C33627 + C33627 + C33202 * C481 +
                      C33206 * C1846 + C33628 + C33628 + C50956 * C1854) *
                         C2286 +
                     (C37368 + C37369) * C2287 + (C37370 + C37371) * C2288) *
                        C50734 * C2089) *
                       C51003 +
                   (((C36944 + C36943) * C2286 + (C36942 + C36941) * C2287 +
                     (C37869 + C37870) * C2288) *
                        C50734 * C51051 -
                    (C37191 * C2288 + (C36271 + C36270) * C2287 +
                     (C36269 + C36268) * C2286) *
                        C50734 * C51050 -
                    ((C33206 * C21214 + C37358 + C37358 + C50956 * C21216 +
                      C33204 * C3604 + C37359 + C37359 + C33202 * C3608) *
                         C2288 +
                     (C37371 + C37370) * C2287 + (C37369 + C37368) * C2286) *
                        C50734 * C2089) *
                       C50831) *
                  C50760) /
                     (p * q * std::sqrt(p + q));
    d2ee[222] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                      C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                         C50877 * C17175 +
                     (C33253 + C33254) * C50877 * C17176 + C33263 * C17177) *
                        C1673 -
                    (C33982 * C17177 + (C33663 + C33664) * C50877 * C17176 +
                     (C33206 * C461 + C33625 + C33625 + C50956 * C481 +
                      C33204 * C460 + C33626 + C33626 + C33202 * C480) *
                         C50877 * C17175) *
                        C50859) *
                       C275 +
                   (((C33204 * C886 + C34183 + C34183 + C33202 * C896 +
                      C33206 * C1215 + C34184 + C34184 + C50956 * C1223) *
                         C50877 * C17175 +
                     (C34207 + C34208) * C50877 * C17176 +
                     (C34209 + C34210) * C50877 * C17177) *
                        C50859 -
                    (C33822 * C17177 + (C33461 + C33462) * C50877 * C17176 +
                     (C33206 * C886 + C33423 + C33423 + C50956 * C896 +
                      C33204 * C283 + C33424 + C33424 + C33202 * C303) *
                         C50877 * C17175) *
                        C1673) *
                       C276 +
                   (((C33204 * C284 + C33425 + C33425 + C33202 * C304 +
                      C33206 * C1562 + C33426 + C33426 + C50956 * C1570) *
                         C50877 * C17175 +
                     (C33463 + C33464) * C50877 * C17176 +
                     (C33465 + C33466) * C50877 * C17177) *
                        C1673 -
                    ((C33206 * C2642 + C35099 + C35099 + C50956 * C2648 +
                      C33204 * C1560 + C35100 + C35100 + C33202 * C1568) *
                         C50877 * C17177 +
                     (C33206 * C2641 + C35101 + C35101 + C50956 * C2647 +
                      C33204 * C1561 + C35102 + C35102 + C33202 * C1569) *
                         C50877 * C17176 +
                     (C33206 * C2640 + C35103 + C35103 + C50956 * C2646 +
                      C33204 * C1562 + C35104 + C35104 + C33202 * C1570) *
                         C50877 * C17175) *
                        C50859) *
                       C277) *
                  C50760) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                      C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                         C50877 * C17175 +
                     (C33253 + C33254) * C50877 * C17176 + C33263 * C17177) *
                        C1673 -
                    (C33982 * C17177 + (C33663 + C33664) * C50877 * C17176 +
                     (C33206 * C461 + C33625 + C33625 + C50956 * C481 +
                      C33204 * C460 + C33626 + C33626 + C33202 * C480) *
                         C50877 * C17175) *
                        C50859) *
                       C50779 * C1024 +
                   (((C33664 + C33663) * C50877 * C17175 +
                     (C33662 + C33661) * C50877 * C17176 +
                     (C33987 + C33988) * C50877 * C17177) *
                        C50859 -
                    (C33264 * C17177 + (C33256 + C33255) * C50877 * C17176 +
                     (C33254 + C33253) * C50877 * C17175) *
                        C1673) *
                       C50779 * C1025 +
                   ((C33263 * C17175 + (C33258 + C33257) * C50877 * C17176 +
                     (C33259 + C33260) * C50877 * C17177) *
                        C1673 -
                    ((C33206 * C466 + C33980 + C33980 + C50956 * C486 +
                      C33204 * C465 + C33981 + C33981 + C33202 * C485) *
                         C50877 * C17177 +
                     (C33988 + C33987) * C50877 * C17176 + C33982 * C17175) *
                        C50859) *
                       C50779 * C1026)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                     C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                        C50877 * C17175 +
                    (C33253 + C33254) * C50877 * C17176 + C33263 * C17177) *
                       C1839 -
                   (C33982 * C17177 + (C33663 + C33664) * C50877 * C17176 +
                    (C33206 * C461 + C33625 + C33625 + C50956 * C481 +
                     C33204 * C460 + C33626 + C33626 + C33202 * C480) *
                        C50877 * C17175) *
                       C1840 +
                   ((C33204 * C461 + C33627 + C33627 + C33202 * C481 +
                     C33206 * C1846 + C33628 + C33628 + C50956 * C1854) *
                        C50877 * C17175 +
                    (C33665 + C33666) * C50877 * C17176 +
                    (C33667 + C33668) * C50877 * C17177) *
                       C1841 -
                   ((C33206 * C5521 + C35495 + C35495 + C50956 * C5527 +
                     C33204 * C1844 + C35496 + C35496 + C33202 * C1852) *
                        C50877 * C17177 +
                    (C33206 * C5520 + C35497 + C35497 + C50956 * C5526 +
                     C33204 * C1845 + C35498 + C35498 + C33202 * C1853) *
                        C50877 * C17176 +
                    (C33206 * C5519 + C35499 + C35499 + C50956 * C5525 +
                     C33204 * C1846 + C35500 + C35500 + C33202 * C1854) *
                        C50877 * C17175) *
                       C1842) *
                  C50779 * C50760) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                      C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                         C2286 +
                     (C36268 + C36269) * C2287 + C36276 * C2288) *
                        C50734 * C1673 -
                    (C37858 * C2288 + (C36943 + C36944) * C2287 +
                     (C33206 * C461 + C33625 + C33625 + C50956 * C481 +
                      C33204 * C460 + C33626 + C33626 + C33202 * C480) *
                         C2286) *
                        C50734 * C50859) *
                       C50779 * C1024 +
                   (((C33664 + C33663) * C2286 + (C34207 + C34208) * C2287 +
                     (C36945 + C36946) * C2288) *
                        C50734 * C50859 -
                    (C36249 * C2288 + (C33461 + C33462) * C2287 +
                     (C33254 + C33253) * C2286) *
                        C50734 * C1673) *
                       C50779 * C1025 +
                   ((C33261 * C2286 + (C33460 + C33459) * C2287 +
                     (C33465 + C33466) * C2288) *
                        C50734 * C1673 -
                    ((C33206 * C2642 + C35099 + C35099 + C50956 * C2648 +
                      C33204 * C1560 + C35100 + C35100 + C33202 * C1568) *
                         C2288 +
                     (C34210 + C34209) * C2287 + C33975 * C2286) *
                        C50734 * C50859) *
                       C50779 * C1026)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                      C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                         C2286 +
                     (C36268 + C36269) * C2287 + C36276 * C2288) *
                        C50734 * C1673 -
                    (C37858 * C2288 + (C36943 + C36944) * C2287 +
                     (C33206 * C461 + C33625 + C33625 + C50956 * C481 +
                      C33204 * C460 + C33626 + C33626 + C33202 * C480) *
                         C2286) *
                        C50734 * C50859) *
                       C275 +
                   (((C36944 + C36943) * C2286 + (C36942 + C36941) * C2287 +
                     (C37869 + C37870) * C2288) *
                        C50734 * C50859 -
                    (C37191 * C2288 + (C36271 + C36270) * C2287 +
                     (C36269 + C36268) * C2286) *
                        C50734 * C1673) *
                       C276 +
                   ((C36276 * C2286 + (C36273 + C36272) * C2287 +
                     (C37202 + C37203) * C2288) *
                        C50734 * C1673 -
                    ((C33206 * C20608 + C37863 + C37863 + C50956 * C20610 +
                      C33204 * C4108 + C37864 + C37864 + C33202 * C4112) *
                         C2288 +
                     (C37870 + C37869) * C2287 + C37858 * C2286) *
                        C50734 * C50859) *
                       C277) *
                  C50760) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                     C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                        C2286 +
                    (C36268 + C36269) * C2287 + C36276 * C2288) *
                       C50734 * C1839 -
                   (C37858 * C2288 + (C36943 + C36944) * C2287 +
                    (C33206 * C461 + C33625 + C33625 + C50956 * C481 +
                     C33204 * C460 + C33626 + C33626 + C33202 * C480) *
                        C2286) *
                       C50734 * C1840 +
                   ((C33204 * C461 + C33627 + C33627 + C33202 * C481 +
                     C33206 * C1846 + C33628 + C33628 + C50956 * C1854) *
                        C2286 +
                    (C37368 + C37369) * C2287 + (C37370 + C37371) * C2288) *
                       C50734 * C1841 -
                   ((C33206 * C22873 + C38261 + C38261 + C50956 * C22875 +
                     C33204 * C4512 + C38262 + C38262 + C33202 * C4520) *
                        C2288 +
                    (C33206 * C6522 + C38263 + C38263 + C50956 * C6526 +
                     C33204 * C4513 + C38264 + C38264 + C33202 * C4521) *
                        C2287 +
                    (C33206 * C5519 + C35499 + C35499 + C50956 * C5525 +
                     C33204 * C1846 + C35500 + C35500 + C33202 * C1854) *
                        C2286) *
                       C50734 * C1842) *
                  C50779 * C50760) /
                     (p * q * std::sqrt(p + q));
    d2ee[223] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                      C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                         C50877 * C17175 +
                     (C33253 + C33254) * C50877 * C17176 + C33263 * C17177) *
                        C51050 -
                    (C33982 * C17177 + (C33663 + C33664) * C50877 * C17176 +
                     (C33206 * C461 + C33625 + C33625 + C50956 * C481 +
                      C33204 * C460 + C33626 + C33626 + C33202 * C480) *
                         C50877 * C17175) *
                        C51051 +
                    ((C33204 * C461 + C33627 + C33627 + C33202 * C481 +
                      C33206 * C1846 + C33628 + C33628 + C50956 * C1854) *
                         C50877 * C17175 +
                     (C33665 + C33666) * C50877 * C17176 +
                     (C33667 + C33668) * C50877 * C17177) *
                        C2089) *
                       C50779 * C50995 +
                   (((C33664 + C33663) * C50877 * C17175 +
                     (C33662 + C33661) * C50877 * C17176 +
                     (C33987 + C33988) * C50877 * C17177) *
                        C51051 -
                    (C33264 * C17177 + (C33256 + C33255) * C50877 * C17176 +
                     (C33254 + C33253) * C50877 * C17175) *
                        C51050 -
                    ((C33206 * C1843 + C33643 + C33643 + C50956 * C1851 +
                      C33204 * C464 + C33644 + C33644 + C33202 * C484) *
                         C50877 * C17177 +
                     (C33668 + C33667) * C50877 * C17176 +
                     (C33666 + C33665) * C50877 * C17175) *
                        C2089) *
                       C50779 * C50766)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                      C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                         C2286 +
                     (C36268 + C36269) * C2287 + C36276 * C2288) *
                        C50734 * C51050 -
                    (C37858 * C2288 + (C36943 + C36944) * C2287 +
                     (C33206 * C461 + C33625 + C33625 + C50956 * C481 +
                      C33204 * C460 + C33626 + C33626 + C33202 * C480) *
                         C2286) *
                        C50734 * C51051 +
                    ((C33204 * C461 + C33627 + C33627 + C33202 * C481 +
                      C33206 * C1846 + C33628 + C33628 + C50956 * C1854) *
                         C2286 +
                     (C37368 + C37369) * C2287 + (C37370 + C37371) * C2288) *
                        C50734 * C2089) *
                       C50779 * C50995 +
                   (((C33664 + C33663) * C2286 + (C34207 + C34208) * C2287 +
                     (C36945 + C36946) * C2288) *
                        C50734 * C51051 -
                    (C36249 * C2288 + (C33461 + C33462) * C2287 +
                     (C33254 + C33253) * C2286) *
                        C50734 * C51050 -
                    ((C33206 * C4510 + C36425 + C36425 + C50956 * C4518 +
                      C33204 * C2641 + C36426 + C36426 + C33202 * C2647) *
                         C2288 +
                     (C33206 * C4511 + C34609 + C34609 + C50956 * C4519 +
                      C33204 * C1214 + C34610 + C34610 + C33202 * C1222) *
                         C2287 +
                     (C33666 + C33665) * C2286) *
                        C50734 * C2089) *
                       C50779 * C50766)) /
                     (p * q * std::sqrt(p + q));
    d2ee[224] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                      C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                         C50877 * C17175 +
                     (C33253 + C33254) * C50877 * C17176 + C33263 * C17177) *
                        C1673 -
                    (C33982 * C17177 + (C33663 + C33664) * C50877 * C17176 +
                     (C33206 * C461 + C33625 + C33625 + C50956 * C481 +
                      C33204 * C460 + C33626 + C33626 + C33202 * C480) *
                         C50877 * C17175) *
                        C50859) *
                       C50779 * C1024 +
                   (((C33664 + C33663) * C50877 * C17175 +
                     (C33662 + C33661) * C50877 * C17176 +
                     (C33987 + C33988) * C50877 * C17177) *
                        C50859 -
                    (C33264 * C17177 + (C33256 + C33255) * C50877 * C17176 +
                     (C33254 + C33253) * C50877 * C17175) *
                        C1673) *
                       C50779 * C1025 +
                   ((C33263 * C17175 + (C33258 + C33257) * C50877 * C17176 +
                     (C33259 + C33260) * C50877 * C17177) *
                        C1673 -
                    ((C33206 * C466 + C33980 + C33980 + C50956 * C486 +
                      C33204 * C465 + C33981 + C33981 + C33202 * C485) *
                         C50877 * C17177 +
                     (C33988 + C33987) * C50877 * C17176 + C33982 * C17175) *
                        C50859) *
                       C50779 * C1026)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                      C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                         C50877 * C17175 +
                     (C33253 + C33254) * C50877 * C17176 + C33263 * C17177) *
                        C1673 -
                    (C33982 * C17177 + (C33663 + C33664) * C50877 * C17176 +
                     (C33206 * C461 + C33625 + C33625 + C50956 * C481 +
                      C33204 * C460 + C33626 + C33626 + C33202 * C480) *
                         C50877 * C17175) *
                        C50859) *
                       C275 +
                   (((C33204 * C886 + C34183 + C34183 + C33202 * C896 +
                      C33206 * C1215 + C34184 + C34184 + C50956 * C1223) *
                         C50877 * C17175 +
                     (C34207 + C34208) * C50877 * C17176 +
                     (C34209 + C34210) * C50877 * C17177) *
                        C50859 -
                    (C33822 * C17177 + (C33461 + C33462) * C50877 * C17176 +
                     (C33206 * C886 + C33423 + C33423 + C50956 * C896 +
                      C33204 * C283 + C33424 + C33424 + C33202 * C303) *
                         C50877 * C17175) *
                        C1673) *
                       C276 +
                   (((C33204 * C284 + C33425 + C33425 + C33202 * C304 +
                      C33206 * C1562 + C33426 + C33426 + C50956 * C1570) *
                         C50877 * C17175 +
                     (C33463 + C33464) * C50877 * C17176 +
                     (C33465 + C33466) * C50877 * C17177) *
                        C1673 -
                    ((C33206 * C2642 + C35099 + C35099 + C50956 * C2648 +
                      C33204 * C1560 + C35100 + C35100 + C33202 * C1568) *
                         C50877 * C17177 +
                     (C33206 * C2641 + C35101 + C35101 + C50956 * C2647 +
                      C33204 * C1561 + C35102 + C35102 + C33202 * C1569) *
                         C50877 * C17176 +
                     (C33206 * C2640 + C35103 + C35103 + C50956 * C2646 +
                      C33204 * C1562 + C35104 + C35104 + C33202 * C1570) *
                         C50877 * C17175) *
                        C50859) *
                       C277) *
                  C50760) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                      C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                         C2286 +
                     (C36268 + C36269) * C2287 + C36276 * C2288) *
                        C50734 * C1673 -
                    (C37858 * C2288 + (C36943 + C36944) * C2287 +
                     (C33206 * C461 + C33625 + C33625 + C50956 * C481 +
                      C33204 * C460 + C33626 + C33626 + C33202 * C480) *
                         C2286) *
                        C50734 * C50859) *
                       C50779 * C1024 +
                   (((C33664 + C33663) * C2286 + (C34207 + C34208) * C2287 +
                     (C36945 + C36946) * C2288) *
                        C50734 * C50859 -
                    (C36249 * C2288 + (C33461 + C33462) * C2287 +
                     (C33254 + C33253) * C2286) *
                        C50734 * C1673) *
                       C50779 * C1025 +
                   ((C33261 * C2286 + (C33460 + C33459) * C2287 +
                     (C33465 + C33466) * C2288) *
                        C50734 * C1673 -
                    ((C33206 * C2642 + C35099 + C35099 + C50956 * C2648 +
                      C33204 * C1560 + C35100 + C35100 + C33202 * C1568) *
                         C2288 +
                     (C34210 + C34209) * C2287 + C33975 * C2286) *
                        C50734 * C50859) *
                       C50779 * C1026)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C33204 * C119 + C33209 + C33209 + C33202 * C133 +
                      C33206 * C460 + C33210 + C33210 + C50956 * C480) *
                         C2286 +
                     (C36268 + C36269) * C2287 + C36276 * C2288) *
                        C50734 * C1673 -
                    (C37858 * C2288 + (C36943 + C36944) * C2287 +
                     (C33206 * C461 + C33625 + C33625 + C50956 * C481 +
                      C33204 * C460 + C33626 + C33626 + C33202 * C480) *
                         C2286) *
                        C50734 * C50859) *
                       C275 +
                   (((C36944 + C36943) * C2286 + (C36942 + C36941) * C2287 +
                     (C37869 + C37870) * C2288) *
                        C50734 * C50859 -
                    (C37191 * C2288 + (C36271 + C36270) * C2287 +
                     (C36269 + C36268) * C2286) *
                        C50734 * C1673) *
                       C276 +
                   ((C36276 * C2286 + (C36273 + C36272) * C2287 +
                     (C37202 + C37203) * C2288) *
                        C50734 * C1673 -
                    ((C33206 * C20608 + C37863 + C37863 + C50956 * C20610 +
                      C33204 * C4108 + C37864 + C37864 + C33202 * C4112) *
                         C2288 +
                     (C37870 + C37869) * C2287 + C37858 * C2286) *
                        C50734 * C50859) *
                       C277) *
                  C50760) /
                     (p * q * std::sqrt(p + q));
}
