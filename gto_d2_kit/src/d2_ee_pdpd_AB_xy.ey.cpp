/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_pdpd_AB_xy.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_1212_12_12(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C49152 = 0 * ae;
    const double C49151 = ae * be;
    const double C49150 = 0 * be;
    const double C49149 = ae + be;
    const double C49148 = 0 * be;
    const double C49147 = xA - xB;
    const double C49191 = 0 * be;
    const double C49190 = yA - yB;
    const double C49232 = 0 * ae;
    const double C49228 = 0 * be;
    const double C49272 = xP - xQ;
    const double C49271 = yP - yQ;
    const double C49270 = p + q;
    const double C49269 = p * q;
    const double C49277 = bs[3];
    const double C49287 = bs[4];
    const double C49296 = bs[5];
    const double C49310 = bs[6];
    const double C49332 = bs[7];
    const double C49458 = zP - zQ;
    const double C49582 = bs[2];
    const double C122 = bs[0];
    const double C49970 = ce + de;
    const double C49969 = ce * de;
    const double C49968 = xC - xD;
    const double C49992 = yC - yD;
    const double C50008 = zC - zD;
    const double C50105 = zA - zB;
    const double C49157 = C49152 / C49149;
    const double C49154 = 2 * C49149;
    const double C49153 = std::pow(C49149, 2);
    const double C49156 = C49151 * C49147;
    const double C49155 = C49147 * C49150;
    const double C49946 = C49147 * be;
    const double C49945 = C49147 * ae;
    const double C49944 = std::pow(C49147, 2);
    const double C49192 = C49151 * C49190;
    const double C49229 = C49190 * C49191;
    const double C50090 = std::pow(C49190, 2);
    const double C50142 = C49190 * be;
    const double C50141 = C49190 * ae;
    const double C49237 = C49232 / C49149;
    const double C49297 = std::pow(C49272, 2);
    const double C49357 = C49272 * ae;
    const double C49279 = C49271 * be;
    const double C49278 = C49272 * C49271;
    const double C49466 = std::pow(C49271, 2);
    const double C49273 = 2 * C49269;
    const double C49527 = std::pow(C49458, 2);
    const double C49972 = 2 * C49970;
    const double C49982 = std::pow(C49970, 2);
    const double C49974 = C49968 * de;
    const double C49973 = C49968 * ce;
    const double C49971 = std::pow(C49968, 2);
    const double C49993 = std::pow(C49992, 2);
    const double C50045 = C49992 * de;
    const double C50044 = C49992 * ce;
    const double C50009 = std::pow(C50008, 2);
    const double C50073 = C50008 * de;
    const double C50072 = C50008 * ce;
    const double C50106 = std::pow(C50105, 2);
    const double C50170 = C50105 * be;
    const double C50169 = C50105 * ae;
    const double C49954 = std::pow(C49154, -1);
    const double C50250 = std::pow(C49154, -2);
    const double C49158 = 2 * C49153;
    const double C143 = (std::pow((2 * p * q) / (p + q), 2) * bs[2] *
                         (xP - xQ) * (yP - yQ) * ae * be) /
                        C49153;
    const double C50228 = 4 * C49153;
    const double C49159 = C49155 / C49149;
    const double C49947 = C49944 * C49151;
    const double C49234 = C49229 / C49149;
    const double C50091 = C50090 * C49151;
    const double C49360 = C49287 * C49357;
    const double C49364 = C49277 * C49357;
    const double C49371 = C49296 * C49357;
    const double C49383 = C49310 * C49357;
    const double C49404 = C49332 * C49357;
    const double C49282 = C49277 * C49279;
    const double C49289 = C49287 * C49279;
    const double C49299 = C49296 * C49279;
    const double C49314 = C49310 * C49279;
    const double C49338 = C49332 * C49279;
    const double C49281 = C49278 * ae;
    const double C49274 = C49273 / C49270;
    const double C129 = (-(bs[1] * C49279 * C49273) / C49270) / C49149;
    const double C130 = (-(bs[1] * C49357 * C49273) / C49270) / C49149;
    const double C123 = -(C49272 * bs[1] * C49273) / C49270;
    const double C281 = -(C49271 * bs[1] * C49273) / C49270;
    const double C446 = -(C49458 * bs[1] * C49273) / C49270;
    const double C49983 = std::pow(C49972, -1);
    const double C50237 = std::pow(C49972, -2);
    const double C49987 = 2 * C49982;
    const double C50235 = 4 * C49982;
    const double C49975 = C49971 * C49969;
    const double C49994 = C49993 * C49969;
    const double C50010 = C50009 * C49969;
    const double C50107 = C50106 * C49151;
    const double C49164 = C49150 / C49158;
    const double C49162 = C49148 / C49158;
    const double C49231 = C49191 / C49158;
    const double C49235 = C49228 / C49158;
    const double C49161 = 0 - C49159;
    const double C49948 = C49947 / C49149;
    const double C49238 = 0 - C49234;
    const double C50092 = C50091 / C49149;
    const double C49283 = C49281 * be;
    const double C49276 = -C49274;
    const double C49286 = std::pow(C49274, 4);
    const double C49309 = std::pow(C49274, 6);
    const double C144 =
        (ae * std::pow(C49274, 2) * bs[2] * C49271 * be +
         C49272 * std::pow(-C49274, 3) * bs[3] * C49272 * C49271 * ae * be) /
        C49153;
    const double C49581 = std::pow(C49274, 2);
    const double C131 =
        (C49272 * std::pow(C49274, 2) * bs[2] * C49279) / C49149;
    const double C132 =
        (C49272 * std::pow(C49274, 2) * bs[2] * C49357) / C49149 -
        (ae * bs[1] * C49273) / (C49270 * C49149);
    const double C49976 = C49975 / C49970;
    const double C49995 = C49994 / C49970;
    const double C50011 = C50010 / C49970;
    const double C50108 = C50107 / C49149;
    const double C49166 = C49161 * ae;
    const double C49949 = -C49948;
    const double C49241 = C49238 * ae;
    const double C50093 = -C50092;
    const double C49288 = C49287 * C49283;
    const double C49298 = C49296 * C49283;
    const double C49312 = C49310 * C49283;
    const double C49336 = C49332 * C49283;
    const double C49280 = std::pow(C49276, 3);
    const double C49295 = std::pow(C49276, 5);
    const double C49331 = std::pow(C49276, 7);
    const double C49291 = C49286 * C49289;
    const double C49361 = C49287 * C49286;
    const double C49362 = C49286 * C49360;
    const double C49317 = C49309 * C49314;
    const double C49385 = C49309 * C49383;
    const double C49405 = C49310 * C49309;
    const double C49583 = C49582 * C49581;
    const double C291 = (C49271 * C49581 * C49582 * C49279) / C49149 -
                        (be * bs[1] * C49273) / (C49270 * C49149);
    const double C292 = (C49271 * C49581 * C49582 * C49357) / C49149;
    const double C456 = (C49458 * C49581 * C49582 * C49279) / C49149;
    const double C457 = (C49458 * C49581 * C49582 * C49357) / C49149;
    const double C49977 = -C49976;
    const double C49996 = -C49995;
    const double C50012 = -C50011;
    const double C50109 = -C50108;
    const double C49169 = C49166 / C49149;
    const double C49950 = std::exp(C49949);
    const double C49243 = C49241 / C49149;
    const double C50094 = std::exp(C50093);
    const double C49290 = C49286 * C49288;
    const double C49316 = C49309 * C49312;
    const double C49284 = C49280 * C49282;
    const double C49358 = C49277 * C49280;
    const double C49365 = C49280 * C49364;
    const double C311 = (be * std::pow(C49274, 2) * bs[2] * C49272 * ae +
                         C49271 * C49280 * C49277 * C49283) /
                        C49153;
    const double C476 = ((zP - zQ) * C49280 * C49277 * C49283) / C49153;
    const double C49301 = C49295 * C49299;
    const double C49300 = C49295 * C49298;
    const double C49374 = C49295 * C49371;
    const double C49384 = C49296 * C49295;
    const double C49341 = C49331 * C49338;
    const double C49340 = C49331 * C49336;
    const double C49407 = C49331 * C49404;
    const double C49294 = ae * C49291;
    const double C49293 = C49272 * C49291;
    const double C49688 = C49271 * C49291;
    const double C49373 = C49272 * C49361;
    const double C49372 = C49361 * ae;
    const double C49589 = C49361 * C49297;
    const double C49691 = C49361 * C49466;
    const double C49726 = C49271 * C49361;
    const double C49725 = C49361 * be;
    const double C49920 = C49361 * C49527;
    const double C49934 = C49458 * C49361;
    const double C49367 = C49272 * C49362;
    const double C49464 = be * C49362;
    const double C49463 = C49271 * C49362;
    const double C49319 = C49317 * C49297;
    const double C49330 = ae * C49317;
    const double C49329 = C49272 * C49317;
    const double C49795 = C49271 * C49317;
    const double C49832 = C49317 * C49527;
    const double C49389 = C49272 * C49385;
    const double C49494 = C49385 * C49466;
    const double C49543 = be * C49385;
    const double C49542 = C49271 * C49385;
    const double C49839 = C49385 * C49527;
    const double C49410 = C49405 * C49297;
    const double C49409 = C49272 * C49405;
    const double C49408 = C49405 * ae;
    const double C49799 = C49405 * C49466;
    const double C124 = C49583 * C49297 - (bs[1] * C49273) / C49270;
    const double C282 = C49271 * C49272 * C49583;
    const double C285 = C49583 * C49466 - (bs[1] * C49273) / C49270;
    const double C447 = C49458 * C49272 * C49583;
    const double C450 = C49583 * C49527 - (bs[1] * C49273) / C49270;
    const double C867 = C49458 * C49271 * C49583;
    const double C49978 = std::exp(C49977);
    const double C49997 = std::exp(C49996);
    const double C50013 = std::exp(C50012);
    const double C50110 = std::exp(C50109);
    const double C49171 = C49169 - C49162;
    const double C49160 = C49156 * C49950;
    const double C49951 = C49950 * C49945;
    const double C49955 = C49954 * C49950;
    const double C50225 = C49950 * C49946;
    const double C50222 = C49950 / C49154;
    const double C16926 = C50250 * C49950;
    const double C49245 = C49243 - C49235;
    const double C153 = C50094 * C144;
    const double C151 = C50094 * C131;
    const double C5415 = C50094 * C456;
    const double C49193 = C49192 * C50094;
    const double C117 = -(2 * ae * be * (yA - yB) * C50094) / (ae + be);
    const double C50143 = C50094 * C50141;
    const double C50146 = C49954 * C50094;
    const double C50254 = C50094 * C50142;
    const double C50249 = C50094 / C49154;
    const double C2263 = C50250 * C50094;
    const double C480 =
        (C49280 * C49277 * C49283 + C49290 * std::pow(zP - zQ, 2)) / C49153;
    const double C49318 = C49272 * C49316;
    const double C49493 = C49271 * C49316;
    const double C49534 = C49316 * C49527;
    const double C49569 = C49458 * C49316;
    const double C145 = (C49280 * C49277 * C49283 + ae * C49272 * C49284 +
                         C49272 * (ae * C49284 + C49272 * std::pow(C49274, 4) *
                                                     bs[4] * C49283)) /
                        C49153;
    const double C146 =
        (2 * (ae * C49284 + C49272 * C49290) +
         ae * (C49284 + C49291 * std::pow(C49272, 2)) +
         C49272 * (C49290 + ae * C49272 * C49291 +
                   C49272 * (ae * C49291 +
                             C49272 * std::pow(C49276, 5) * bs[5] * C49283))) /
        C49153;
    const double C312 = (be * (C49272 * C49280 * C49277 * C49272 * ae +
                               bs[2] * std::pow(C49274, 2) * ae) +
                         C49271 * (ae * C49284 + C49272 * C49290)) /
                        C49153;
    const double C477 = ((zP - zQ) * (ae * C49284 + C49272 * C49290)) / C49153;
    const double C133 =
        (std::pow(C49274, 2) * bs[2] * C49279 + C49284 * C49297) / C49149;
    const double C135 =
        (2 * C49272 * C49284 + C49272 * (C49284 + C49291 * C49297)) / C49149;
    const double C293 =
        (C49271 * C49272 * C49284 + C49272 * C49583 * be) / C49149;
    const double C299 =
        (C49581 * C49582 * C49279 + C49271 * (C49271 * C49284 + C49583 * be) +
         C49271 * C49583 * be) /
        C49149;
    const double C458 = (C49458 * C49272 * C49284) / C49149;
    const double C460 = (C49458 * (C49284 + C49291 * C49297)) / C49149;
    const double C464 = (C49581 * C49582 * C49279 + C49284 * C49527) / C49149;
    const double C872 = (C49458 * (C49271 * C49284 + C49583 * be)) / C49149;
    const double C1822 =
        (2 * C49458 * C49284 + C49458 * (C49284 + C49291 * C49527)) / C49149;
    const double C49368 = C49358 * ae;
    const double C49588 = C49272 * C49358;
    const double C49690 = C49271 * C49358;
    const double C49689 = C49358 * be;
    const double C295 = (C49271 * (C49284 + C49291 * C49297) +
                         (C49583 + C49358 * C49297) * be) /
                        C49149;
    const double C1077 =
        (2 * (C49271 * C49284 + C49583 * be) +
         C49271 * (C49284 + C49271 * (C49271 * C49291 + C49358 * be) +
                   C49271 * C49358 * be) +
         (C49583 + C49358 * C49466) * be) /
        C49149;
    const double C1191 = (C49271 * C49284 + C49583 * be +
                          (C49271 * C49291 + C49358 * be) * C49527) /
                         C49149;
    const double C1538 =
        (C49458 * (C49284 + C49271 * (C49271 * C49291 + C49358 * be) +
                   C49271 * C49358 * be)) /
        C49149;
    const double C125 =
        2 * C49272 * C49583 + C49272 * (C49583 + C49358 * C49297);
    const double C283 = C49271 * (C49583 + C49358 * C49297);
    const double C448 = C49458 * (C49583 + C49358 * C49297);
    const double C1073 =
        2 * C49271 * C49583 + C49271 * (C49583 + C49358 * C49466);
    const double C1534 = C49458 * (C49583 + C49358 * C49466);
    const double C1818 =
        2 * C49458 * C49583 + C49458 * (C49583 + C49358 * C49527);
    const double C5402 =
        3 * (C49583 + C49358 * C49527) +
        C49458 * (2 * C49458 * C49358 + C49458 * (C49358 + C49361 * C49527));
    const double C315 = (C49280 * C49277 * C49283 + be * C49271 * C49365 +
                         C49271 * (be * C49365 + C49271 * C49290)) /
                        C49153;
    const double C882 = ((zP - zQ) * (be * C49365 + C49271 * C49290)) / C49153;
    const double C134 =
        (C49581 * C49582 * C49357 + C49272 * (C49272 * C49365 + C49583 * ae) +
         C49272 * C49583 * ae) /
        C49149;
    const double C294 = (C49271 * (C49272 * C49365 + C49583 * ae)) / C49149;
    const double C300 = (C49581 * C49582 * C49357 + C49365 * C49466) / C49149;
    const double C459 = (C49458 * (C49272 * C49365 + C49583 * ae)) / C49149;
    const double C465 = (C49581 * C49582 * C49357 + C49365 * C49527) / C49149;
    const double C873 = (C49458 * C49271 * C49365) / C49149;
    const double C1078 =
        (2 * C49271 * C49365 + C49271 * (C49365 + C49362 * C49466)) / C49149;
    const double C1539 = (C49458 * (C49365 + C49362 * C49466)) / C49149;
    const double C1823 =
        (2 * C49458 * C49365 + C49458 * (C49365 + C49362 * C49527)) / C49149;
    const double C5417 = C50094 * C476;
    const double C49303 = C49301 * C49297;
    const double C49308 = ae * C49301;
    const double C49307 = C49272 * C49301;
    const double C49724 = C49271 * C49301;
    const double C49782 = C49301 * C49527;
    const double C49831 = C49458 * C49301;
    const double C5405 =
        (3 * (C49284 + C49291 * C49527) +
         C49458 * (2 * C49458 * C49291 + C49458 * (C49291 + C49301 * C49527))) /
        C49149;
    const double C49302 = C49272 * C49300;
    const double C49465 = C49271 * C49300;
    const double C1085 = (2 * (be * C49365 + C49271 * C49290) +
                          be * (C49365 + C49362 * std::pow(C49271, 2)) +
                          C49271 * (C49290 + be * C49271 * C49362 +
                                    C49271 * (be * C49362 + C49271 * C49300))) /
                         C49153;
    const double C1199 =
        (be * C49365 + C49271 * C49290 +
         (be * C49362 + C49271 * C49300) * std::pow(zP - zQ, 2)) /
        C49153;
    const double C1546 =
        ((zP - zQ) * (C49290 + be * C49271 * C49362 +
                      C49271 * (be * C49362 + C49271 * C49300))) /
        C49153;
    const double C1830 = (2 * C49458 * C49290 +
                          C49458 * (C49290 + C49300 * std::pow(C49458, 2))) /
                         C49153;
    const double C5411 =
        (3 * (C49290 + C49300 * C49527) +
         C49458 * (2 * C49458 * C49300 + C49458 * (C49300 + C49316 * C49527))) /
        C49153;
    const double C49376 = C49272 * C49374;
    const double C49468 = C49374 * C49466;
    const double C49492 = be * C49374;
    const double C49491 = C49271 * C49374;
    const double C49785 = C49374 * C49527;
    const double C49838 = C49458 * C49374;
    const double C5406 =
        (3 * (C49365 + C49362 * C49527) +
         C49458 * (2 * C49458 * C49362 + C49458 * (C49362 + C49374 * C49527))) /
        C49149;
    const double C49388 = C49384 * C49297;
    const double C49387 = C49272 * C49384;
    const double C49386 = C49384 * ae;
    const double C49727 = C49384 * C49466;
    const double C49797 = C49271 * C49384;
    const double C49796 = C49384 * be;
    const double C49935 = C49384 * C49527;
    const double C49343 = C49341 * C49297;
    const double C49342 = C49272 * C49340;
    const double C49544 = C49271 * C49340;
    const double C49570 = C49340 * C49527;
    const double C49411 = C49272 * C49407;
    const double C49546 = C49407 * C49466;
    const double C466 = (C49272 * C49284 + C49293 * C49527) / C49149;
    const double C49375 = C49373 * ae;
    const double C49593 = 2 * C49373;
    const double C49698 = C49271 * C49373;
    const double C49697 = C49373 * be;
    const double C49590 = C49358 + C49589;
    const double C49693 = C49358 + C49691;
    const double C49731 = 2 * C49726;
    const double C49729 = C49726 * be;
    const double C49921 = C49358 + C49920;
    const double C49936 = 2 * C49934;
    const double C1192 = (C49271 * C49365 + C49463 * C49527) / C49149;
    const double C49321 = C49301 + C49319;
    const double C49337 = 2 * C49329;
    const double C49335 = ae * C49329;
    const double C49739 = C49271 * C49329;
    const double C49788 = C49329 * C49527;
    const double C49834 = C49301 + C49832;
    const double C49498 = C49374 + C49494;
    const double C49550 = 2 * C49542;
    const double C49548 = be * C49542;
    const double C49828 = C49542 * C49527;
    const double C49841 = C49374 + C49839;
    const double C49413 = C49384 + C49410;
    const double C49412 = C49409 * ae;
    const double C49742 = C49409 * C49466;
    const double C49803 = C49384 + C49799;
    const double C49979 = C49978 * C49973;
    const double C49984 = C49983 * C49978;
    const double C50232 = C49978 * C49974;
    const double C50229 = C49978 / C49972;
    const double C1001 = C50237 * C49978;
    const double C50046 = C49997 * C50044;
    const double C50049 = C49983 * C49997;
    const double C50241 = C49997 * C50045;
    const double C50236 = C49997 / C49972;
    const double C278 = C50237 * C49997;
    const double C50074 = C50013 * C50072;
    const double C50077 = C49983 * C50013;
    const double C50245 = C50013 * C50073;
    const double C50238 = C50013 / C49972;
    const double C445 = C50237 * C50013;
    const double C50171 = C50110 * C50169;
    const double C50174 = C49954 * C50110;
    const double C50258 = C50110 * C50170;
    const double C50251 = C50110 / C49154;
    const double C5097 = C50250 * C50110;
    const double C49165 = C49160 / C49153;
    const double C49163 = 2 * C49160;
    const double C50226 = C49951 / C49158;
    const double C50224 = C49951 / C49149;
    const double C50223 = C49951 * C49946;
    const double C16925 = (2 * C49954 * C49951) / C49149;
    const double C50227 = C49955 * C49946;
    const double C109 = C49955 / C50228;
    const double C7890 = C49955 / C49154;
    const double C50263 = C50225 / C49149;
    const double C16924 = (C49950 * std::pow(C49945, 2)) / C49153 + C50222;
    const double C49233 = C49193 / C49153;
    const double C49230 = 2 * C49193;
    const double C2268 =
        ((0 * ae) / C49149 - C49193 / C49153) / C49154 + (0 * ae) / C49149;
    const double C7891 =
        ((C50094 - (C49190 * 2 * C49193) / C49149) * ae) / C49149 -
        C49191 / C49158;
    const double C7892 = (0 * ae) / C49149 - C49193 / C49153;
    const double C16927 =
        (-C49191 / C49149) / C49154 -
        ((C50094 - (C49190 * 2 * C49193) / C49149) * be) / C49149;
    const double C16928 = (-(2 * C49193) / C49149) / C49154 - (0 * be) / C49149;
    const double C156 = C117 * C124;
    const double C154 = C117 * C132;
    const double C152 = C117 * C123;
    const double C322 = C117 * C282;
    const double C487 = C117 * C447;
    const double C5422 = C117 * C450;
    const double C5418 = C117 * C457;
    const double C5416 = C117 * C446;
    const double C5967 = C117 * C867;
    const double C50256 = C50143 / C49158;
    const double C50255 = C50143 * C50142;
    const double C50252 = C50143 / C49149;
    const double C2262 = (2 * C49954 * C50143) / C49149;
    const double C2267 =
        (((C50094 - (C49190 * 2 * C49193) / C49149) * ae) / C49149 -
         C49191 / C49158) /
            C49154 +
        ((C49190 * ((0 * ae) / C49149 - C49193 / C49153) + C50146) * ae) /
            C49149;
    const double C50257 = C50146 * C50142;
    const double C19683 = C50146 / C50228;
    const double C24264 = C50146 / C49154;
    const double C50274 = C50254 / C49149;
    const double C2261 = (C50094 * std::pow(C50141, 2)) / C49153 + C50249;
    const double C5423 = C50094 * C480;
    const double C49535 = C49300 + C49534;
    const double C49571 = 2 * C49569;
    const double C157 = C50094 * C145;
    const double C161 = C50094 * C146;
    const double C325 = C50094 * C312;
    const double C7903 = C50146 * C312;
    const double C16939 = C50146 * C312;
    const double C490 = C50094 * C477;
    const double C155 = C50094 * C133;
    const double C159 = C50094 * C135;
    const double C323 = C50094 * C293;
    const double C7899 = C50146 * C293;
    const double C16935 = C50146 * C293;
    const double C488 = C50094 * C458;
    const double C492 = C50094 * C460;
    const double C5421 = C50094 * C464;
    const double C5968 = C50094 * C872;
    const double C13747 = C50146 * C872;
    const double C21797 = C50146 * C872;
    const double C5432 = C50094 * C1822;
    const double C49369 = C49367 + C49368;
    const double C301 =
        (C49272 * C49284 + C49271 * (C49271 * C49293 + C49588 * be) +
         C49271 * C49588 * be) /
        C49149;
    const double C874 = (C49458 * (C49271 * C49293 + C49588 * be)) / C49149;
    const double C286 = C49272 * C49583 + C49588 * C49466;
    const double C451 = C49272 * C49583 + C49588 * C49527;
    const double C868 = C49458 * C49271 * C49588;
    const double C1074 =
        2 * C49271 * C49588 + C49271 * (C49588 + C49373 * C49466);
    const double C1535 = C49458 * (C49588 + C49373 * C49466);
    const double C1819 =
        2 * C49458 * C49588 + C49458 * (C49588 + C49373 * C49527);
    const double C1187 = C49271 * C49583 + C49690 * C49527;
    const double C4495 =
        2 * C49458 * C49690 + C49458 * (C49690 + C49726 * C49527);
    const double C49692 = C49688 + C49689;
    const double C327 = C50094 * C295;
    const double C7907 = C50146 * C295;
    const double C16943 = C50146 * C295;
    const double C5974 = C50094 * C1191;
    const double C13764 = C50146 * C1191;
    const double C21805 = C50146 * C1191;
    const double C6884 = C50094 * C1538;
    const double C14448 = C50146 * C1538;
    const double C22334 = C50146 * C1538;
    const double C36183 = C2263 * C1538;
    const double C160 = C117 * C125;
    const double C326 = C117 * C283;
    const double C491 = C117 * C448;
    const double C6885 = C117 * C1534;
    const double C5431 = C117 * C1818;
    const double C7295 = C117 * C5402;
    const double C5970 = C50094 * C882;
    const double C13751 = C50146 * C882;
    const double C21801 = C50146 * C882;
    const double C158 = C117 * C134;
    const double C324 = C117 * C294;
    const double C489 = C117 * C459;
    const double C5424 = C117 * C465;
    const double C5969 = C117 * C873;
    const double C6887 = C117 * C1539;
    const double C5433 = C117 * C1823;
    const double C49305 = C49291 + C49303;
    const double C49320 = C49308 + C49318;
    const double C49313 = 2 * C49307;
    const double C49311 = ae * C49307;
    const double C49696 = C49271 * C49307;
    const double C1079 =
        (2 * (C49271 * C49293 + C49588 * be) +
         C49271 * (C49293 + C49271 * (C49271 * C49307 + C49373 * be) +
                   C49271 * C49373 * be) +
         (C49588 + C49373 * C49466) * be) /
        C49149;
    const double C1193 = (C49271 * C49293 + C49588 * be +
                          (C49271 * C49307 + C49373 * be) * C49527) /
                         C49149;
    const double C1540 =
        (C49458 * (C49293 + C49271 * (C49271 * C49307 + C49373 * be) +
                   C49271 * C49373 * be)) /
        C49149;
    const double C1824 =
        (2 * C49458 * C49293 + C49458 * (C49293 + C49307 * C49527)) / C49149;
    const double C5407 =
        (3 * (C49293 + C49307 * C49527) +
         C49458 * (2 * C49458 * C49307 + C49458 * (C49307 + C49329 * C49527))) /
        C49149;
    const double C49728 = C49724 + C49725;
    const double C49783 = C49291 + C49782;
    const double C49833 = 2 * C49831;
    const double C7294 = C50094 * C5405;
    const double C49304 = C49294 + C49302;
    const double C49467 = C49464 + C49465;
    const double C5976 = C50094 * C1199;
    const double C13768 = C50146 * C1199;
    const double C21809 = C50146 * C1199;
    const double C6886 = C50094 * C1546;
    const double C14452 = C50146 * C1546;
    const double C22338 = C50146 * C1546;
    const double C36189 = C2263 * C1546;
    const double C5434 = C50094 * C1830;
    const double C7296 = C50094 * C5411;
    const double C49377 = C49376 + C49372;
    const double C49469 = C49362 + C49468;
    const double C49496 = C49492 + C49493;
    const double C49497 = 2 * C49491;
    const double C49495 = be * C49491;
    const double C4501 =
        (2 * C49458 * C49463 + C49458 * (C49463 + C49491 * C49527)) / C49149;
    const double C6379 =
        (3 * (C49463 + C49491 * C49527) +
         C49458 * (2 * C49458 * C49491 + C49458 * (C49491 + C49542 * C49527))) /
        C49149;
    const double C49786 = C49362 + C49785;
    const double C49840 = 2 * C49838;
    const double C7297 = C117 * C5406;
    const double C49391 = C49361 + C49388;
    const double C49390 = C49387 * ae;
    const double C49406 = 2 * C49387;
    const double C49699 = C49387 * C49466;
    const double C49741 = C49271 * C49387;
    const double C49740 = C49387 * be;
    const double C49923 = C49387 * C49527;
    const double C5403 =
        3 * (C49588 + C49373 * C49527) +
        C49458 * (2 * C49458 * C49373 + C49458 * (C49373 + C49387 * C49527));
    const double C49392 = C49389 + C49386;
    const double C49730 = C49361 + C49727;
    const double C49804 = 2 * C49797;
    const double C49802 = C49797 * be;
    const double C49931 = C49797 * C49527;
    const double C6376 =
        3 * (C49690 + C49726 * C49527) +
        C49458 * (2 * C49458 * C49726 + C49458 * (C49726 + C49797 * C49527));
    const double C49801 = C49795 + C49796;
    const double C49937 = C49361 + C49935;
    const double C49345 = C49317 + C49343;
    const double C49344 = C49330 + C49342;
    const double C49549 = C49543 + C49544;
    const double C49572 = C49316 + C49570;
    const double C49414 = C49411 + C49408;
    const double C49551 = C49385 + C49546;
    const double C499 = C50094 * C466;
    const double C1188 = C49271 * C49588 + C49698 * C49527;
    const double C126 = 3 * (C49583 + C49358 * C49297) +
                        C49272 * (2 * C49588 + C49272 * C49590);
    const double C284 = C49271 * (2 * C49588 + C49272 * C49590);
    const double C287 = C49583 + C49358 * C49297 + C49590 * C49466;
    const double C449 = C49458 * (2 * C49588 + C49272 * C49590);
    const double C452 = C49583 + C49358 * C49297 + C49590 * C49527;
    const double C869 = C49458 * C49271 * C49590;
    const double C2453 = 3 * (C49583 + C49358 * C49466) +
                         C49271 * (2 * C49690 + C49271 * C49693);
    const double C2635 = C49583 + C49358 * C49466 + C49693 * C49527;
    const double C3181 = C49458 * (2 * C49690 + C49271 * C49693);
    const double C7281 =
        4 * (2 * C49458 * C49358 + C49458 * C49921) +
        C49458 * (3 * C49921 + C49458 * (2 * C49458 * C49361 +
                                         C49458 * (C49361 + C49384 * C49527)));
    const double C5975 = C117 * C1192;
    const double C49323 = C49272 * C49321;
    const double C49333 = 3 * C49321;
    const double C49328 = ae * C49321;
    const double C49704 = C49271 * C49321;
    const double C49339 = C49316 + C49335;
    const double C49789 = C49307 + C49788;
    const double C49835 = C49458 * C49834;
    const double C49501 = C49271 * C49498;
    const double C49545 = 3 * C49498;
    const double C49541 = be * C49498;
    const double C49552 = C49316 + C49548;
    const double C49829 = C49491 + C49828;
    const double C49842 = C49458 * C49841;
    const double C49416 = C49272 * C49413;
    const double C49415 = C49413 * ae;
    const double C49707 = C49413 * C49466;
    const double C49745 = C49387 + C49742;
    const double C49806 = C49271 * C49803;
    const double C50233 = C49979 / C49987;
    const double C50231 = C49979 / C49970;
    const double C50230 = C49979 * C49974;
    const double C1000 = (2 * C49983 * C49979) / C49970;
    const double C50234 = C49984 * C49974;
    const double C116 = C49984 / C50235;
    const double C612 = C49984 / C49972;
    const double C50266 = C50232 / C49970;
    const double C999 = (C49978 * std::pow(C49973, 2)) / C49982 + C50229;
    const double C50243 = C50046 / C49987;
    const double C50242 = C50046 * C50045;
    const double C50239 = C50046 / C49970;
    const double C277 = (2 * C49983 * C50046) / C49970;
    const double C50244 = C50049 * C50045;
    const double C1071 = C50049 / C50235;
    const double C1303 = C50049 / C49972;
    const double C50268 = C50241 / C49970;
    const double C276 = (C49997 * std::pow(C50044, 2)) / C49982 + C50236;
    const double C50247 = C50074 / C49987;
    const double C50246 = C50074 * C50073;
    const double C50240 = C50074 / C49970;
    const double C444 = (2 * C49983 * C50074) / C49970;
    const double C50248 = C50077 * C50073;
    const double C1817 = C50077 / C50235;
    const double C2064 = C50077 / C49972;
    const double C50271 = C50245 / C49970;
    const double C443 = (C50013 * std::pow(C50072, 2)) / C49982 + C50238;
    const double C50260 = C50171 / C49158;
    const double C50259 = C50171 * C50170;
    const double C50253 = C50171 / C49149;
    const double C5096 = (2 * C49954 * C50171) / C49149;
    const double C50261 = C50174 * C50170;
    const double C38557 = C50174 / C50228;
    const double C43894 = C50174 / C49154;
    const double C50277 = C50258 / C49149;
    const double C5095 = (C50110 * std::pow(C50169, 2)) / C49153 + C50251;
    const double C49168 = C49157 - C49165;
    const double C49167 = C49147 * C49163;
    const double C2270 = (-C49163 / C49149) / C49154 - (0 * be) / C49149;
    const double C19689 = -C49163 / C49149;
    const double C50262 = C50223 / C49153;
    const double C50264 = C50227 / C49149;
    const double C2264 = -C50263;
    const double C49240 = C49237 - C49233;
    const double C49236 = C49190 * C49230;
    const double C36190 = C2268 * C1539;
    const double C36184 = C2268 * C1534;
    const double C7913 = C7891 * C125;
    const double C7910 = C7891 * C134;
    const double C7906 = C7891 * C124;
    const double C7902 = C7891 * C132;
    const double C7898 = C7891 * C123;
    const double C8095 = C7891 * C283;
    const double C8091 = C7891 * C294;
    const double C8087 = C7891 * C282;
    const double C8273 = C7891 * C448;
    const double C8269 = C7891 * C459;
    const double C8265 = C7891 * C447;
    const double C13765 = C7891 * C465;
    const double C13761 = C7891 * C450;
    const double C13750 = C7891 * C457;
    const double C13746 = C7891 * C446;
    const double C14449 = C7891 * C873;
    const double C14445 = C7891 * C867;
    const double C14996 = C7891 * C1192;
    const double C15650 = C7891 * C1539;
    const double C15646 = C7891 * C1534;
    const double C16176 = C7891 * C1823;
    const double C16172 = C7891 * C1818;
    const double C48642 = C7891 * C5406;
    const double C48638 = C7891 * C5402;
    const double C7908 = C7892 * C283;
    const double C7904 = C7892 * C294;
    const double C7900 = C7892 * C282;
    const double C13767 = C7892 * C1192;
    const double C13752 = C7892 * C873;
    const double C13748 = C7892 * C867;
    const double C14451 = C7892 * C1539;
    const double C14447 = C7892 * C1534;
    const double C16949 = C16927 * C125;
    const double C16946 = C16927 * C134;
    const double C16942 = C16927 * C124;
    const double C16938 = C16927 * C132;
    const double C16934 = C16927 * C123;
    const double C17131 = C16927 * C283;
    const double C17127 = C16927 * C294;
    const double C17123 = C16927 * C282;
    const double C17309 = C16927 * C448;
    const double C17305 = C16927 * C459;
    const double C17301 = C16927 * C447;
    const double C21815 = C16927 * C1823;
    const double C21811 = C16927 * C1818;
    const double C21808 = C16927 * C465;
    const double C21804 = C16927 * C450;
    const double C21800 = C16927 * C457;
    const double C21796 = C16927 * C446;
    const double C22343 = C16927 * C1192;
    const double C22335 = C16927 * C873;
    const double C22331 = C16927 * C867;
    const double C23257 = C16927 * C1539;
    const double C23253 = C16927 * C1534;
    const double C23671 = C16927 * C5406;
    const double C23667 = C16927 * C5402;
    const double C16944 = C16928 * C283;
    const double C16940 = C16928 * C294;
    const double C16936 = C16928 * C282;
    const double C21810 = C16928 * C1192;
    const double C21802 = C16928 * C873;
    const double C21798 = C16928 * C867;
    const double C22337 = C16928 * C1539;
    const double C22333 = C16928 * C1534;
    const double C50275 = C50255 / C49153;
    const double C7918 = C50252 * C146;
    const double C7914 = C50252 * C135;
    const double C7909 = C50252 * C145;
    const double C7905 = C50252 * C133;
    const double C7901 = C50252 * C144;
    const double C7897 = C50252 * C131;
    const double C8096 = C50252 * C295;
    const double C8092 = C50252 * C312;
    const double C8088 = C50252 * C293;
    const double C8281 = C50252 * C466;
    const double C8274 = C50252 * C460;
    const double C8270 = C50252 * C477;
    const double C8266 = C50252 * C458;
    const double C13766 = C50252 * C480;
    const double C13762 = C50252 * C464;
    const double C13749 = C50252 * C476;
    const double C13745 = C50252 * C456;
    const double C14450 = C50252 * C882;
    const double C14446 = C50252 * C872;
    const double C14995 = C50252 * C1199;
    const double C14991 = C50252 * C1191;
    const double C15649 = C50252 * C1546;
    const double C15645 = C50252 * C1538;
    const double C16175 = C50252 * C1830;
    const double C16171 = C50252 * C1822;
    const double C48641 = C50252 * C5411;
    const double C48637 = C50252 * C5405;
    const double C2266 =
        (((0 - (C49190 * C49191) / C49149) * ae) / C49149 - (0 * be) / C49158) /
            C49154 +
        ((C49190 * (((C50094 - (C49190 * 2 * C49193) / C49149) * ae) / C49149 -
                    C49191 / C49158) +
          C50252) *
         ae) /
            C49149 +
        (0 * ae) / C49149 - C49193 / C49153;
    const double C2287 = C2262 * C295;
    const double C2280 = C2262 * C312;
    const double C2274 = C2262 * C293;
    const double C36200 = C2262 * C1199;
    const double C36194 = C2262 * C1191;
    const double C36187 = C2262 * C882;
    const double C36181 = C2262 * C872;
    const double C36698 = C2262 * C1546;
    const double C36692 = C2262 * C1538;
    const double C2286 = C2267 * C283;
    const double C2281 = C2267 * C294;
    const double C2275 = C2267 * C282;
    const double C36199 = C2267 * C1192;
    const double C36188 = C2267 * C873;
    const double C36182 = C2267 * C867;
    const double C36697 = C2267 * C1539;
    const double C36691 = C2267 * C1534;
    const double C50276 = C50257 / C49149;
    const double C30859 = C24264 * C1546;
    const double C30853 = C24264 * C1538;
    const double C16922 = -C50274;
    const double C2302 = C2261 * C146;
    const double C2296 = C2261 * C135;
    const double C2291 = C2261 * C145;
    const double C2285 = C2261 * C133;
    const double C2278 = C2261 * C144;
    const double C2272 = C2261 * C131;
    const double C2473 = C2261 * C312;
    const double C2467 = C2261 * C293;
    const double C2660 = C2261 * C466;
    const double C2655 = C2261 * C477;
    const double C2649 = C2261 * C458;
    const double C2818 = C2261 * C295;
    const double C2976 = C2261 * C460;
    const double C36198 = C2261 * C480;
    const double C36192 = C2261 * C464;
    const double C36185 = C2261 * C476;
    const double C36179 = C2261 * C456;
    const double C36696 = C2261 * C882;
    const double C36690 = C2261 * C872;
    const double C37097 = C2261 * C1199;
    const double C37091 = C2261 * C1191;
    const double C37595 = C2261 * C1546;
    const double C37589 = C2261 * C1538;
    const double C37997 = C2261 * C1830;
    const double C37991 = C2261 * C1822;
    const double C7287 =
        (4 * (2 * C49458 * C49300 + C49458 * C49535) +
         C49458 *
             (3 * C49535 + C49458 * (2 * C49458 * C49316 +
                                     C49458 * (C49316 + C49340 * C49527)))) /
        C49153;
    const double C171 = C155 - C156;
    const double C5427 = C487 - C488;
    const double C5419 = C488 - C487;
    const double C5449 = C5421 - C5422;
    const double C136 =
        (2 * (C49272 * C49365 + C49583 * ae) +
         C49272 * (C49365 + C49272 * C49369 + C49272 * C49358 * ae) +
         (C49583 + C49358 * C49297) * ae) /
        C49149;
    const double C296 =
        (C49271 * (C49365 + C49272 * C49369 + C49588 * ae)) / C49149;
    const double C302 =
        (C49272 * C49365 + C49583 * ae + C49369 * C49466) / C49149;
    const double C461 =
        (C49458 * (C49365 + C49272 * C49369 + C49588 * ae)) / C49149;
    const double C467 =
        (C49272 * C49365 + C49583 * ae + C49369 * C49527) / C49149;
    const double C875 = (C49458 * C49271 * C49369) / C49149;
    const double C334 = C50094 * C301;
    const double C2276 = C2263 * C301;
    const double C2478 = C2261 * C301;
    const double C2469 = C2262 * C301;
    const double C8103 = C50252 * C301;
    const double C8090 = C50146 * C301;
    const double C17126 = C50146 * C301;
    const double C24277 = C24264 * C301;
    const double C888 = C50094 * C874;
    const double C2651 = C2262 * C874;
    const double C3194 = C2261 * C874;
    const double C8268 = C50146 * C874;
    const double C8811 = C50252 * C874;
    const double C17304 = C50146 * C874;
    const double C335 = C117 * C286;
    const double C2277 = C2268 * C286;
    const double C2468 = C2267 * C286;
    const double C8104 = C7891 * C286;
    const double C8089 = C7892 * C286;
    const double C17140 = C16927 * C286;
    const double C17125 = C16928 * C286;
    const double C500 = C117 * C451;
    const double C8282 = C7891 * C451;
    const double C17318 = C16927 * C451;
    const double C889 = C117 * C868;
    const double C2650 = C2267 * C868;
    const double C8267 = C7892 * C868;
    const double C8812 = C7891 * C868;
    const double C17303 = C16928 * C868;
    const double C17848 = C16927 * C868;
    const double C2481 = C2267 * C1074;
    const double C2470 = C2268 * C1074;
    const double C8106 = C7892 * C1074;
    const double C17142 = C16928 * C1074;
    const double C2652 = C2268 * C1535;
    const double C3197 = C2267 * C1535;
    const double C5250 = C117 * C1535;
    const double C8814 = C7892 * C1535;
    const double C13544 = C7891 * C1535;
    const double C17850 = C16928 * C1535;
    const double C27248 = C16927 * C1535;
    const double C5435 = C117 * C1819;
    const double C13778 = C7891 * C1819;
    const double C21824 = C16927 * C1819;
    const double C5973 = C117 * C1187;
    const double C13763 = C7892 * C1187;
    const double C14992 = C7891 * C1187;
    const double C21806 = C16928 * C1187;
    const double C22339 = C16927 * C1187;
    const double C36193 = C2267 * C1187;
    const double C6390 = C117 * C4495;
    const double C16174 = C7892 * C4495;
    const double C21813 = C16928 * C4495;
    const double C22754 = C16927 * C4495;
    const double C37994 = C2267 * C4495;
    const double C47737 = C7891 * C4495;
    const double C2456 =
        (3 * (C49284 + C49271 * C49692 + C49690 * be) +
         C49271 * (2 * C49692 +
                   C49271 * (C49291 + C49271 * (C49271 * C49301 + C49361 * be) +
                             C49271 * C49361 * be) +
                   C49693 * be) +
         (2 * C49690 + C49271 * C49693) * be) /
        C49149;
    const double C2638 = (C49284 + C49271 * C49692 + C49690 * be +
                          (C49291 + C49271 * (C49271 * C49301 + C49361 * be) +
                           C49271 * C49361 * be) *
                              C49527) /
                         C49149;
    const double C3184 =
        (C49458 * (2 * C49692 +
                   C49271 * (C49291 + C49271 * (C49271 * C49301 + C49361 * be) +
                             C49271 * C49361 * be) +
                   C49693 * be)) /
        C49149;
    const double C175 = C160 - C159;
    const double C173 = C159 - C160;
    const double C618 = C326 - C327;
    const double C730 = C491 - C492;
    const double C5765 = C492 - C491;
    const double C7290 = C5431 - C5432;
    const double C38757 = C5432 - C5431;
    const double C172 = C157 - C158;
    const double C5428 = C489 - C490;
    const double C5420 = C490 - C489;
    const double C5450 = C5423 - C5424;
    const double C137 = (3 * (C49284 + C49291 * C49297) +
                         C49272 * (2 * C49293 + C49272 * C49305)) /
                        C49149;
    const double C297 = (C49271 * (2 * C49293 + C49272 * C49305) +
                         (2 * C49588 + C49272 * C49590) * be) /
                        C49149;
    const double C303 =
        (C49284 + C49291 * C49297 + C49271 * (C49271 * C49305 + C49590 * be) +
         C49271 * C49590 * be) /
        C49149;
    const double C462 = (C49458 * (2 * C49293 + C49272 * C49305)) / C49149;
    const double C468 = (C49284 + C49291 * C49297 + C49305 * C49527) / C49149;
    const double C876 = (C49458 * (C49271 * C49305 + C49590 * be)) / C49149;
    const double C1826 =
        (2 * C49458 * C49305 + C49458 * (C49305 + C49321 * C49527)) / C49149;
    const double C49322 = C49272 * C49320;
    const double C49327 = 2 * C49320;
    const double C49473 = C49271 * C49320;
    const double C49315 = C49300 + C49311;
    const double C49700 = C49696 + C49697;
    const double C2480 = C2262 * C1079;
    const double C2471 = C2263 * C1079;
    const double C8105 = C50146 * C1079;
    const double C17141 = C50146 * C1079;
    const double C24460 = C24264 * C1079;
    const double C2662 = C2262 * C1193;
    const double C5246 = C50094 * C1193;
    const double C8283 = C50146 * C1193;
    const double C14461 = C50252 * C1193;
    const double C17319 = C50146 * C1193;
    const double C2653 = C2263 * C1540;
    const double C3196 = C2262 * C1540;
    const double C5249 = C50094 * C1540;
    const double C8813 = C50146 * C1540;
    const double C13543 = C50252 * C1540;
    const double C17849 = C50146 * C1540;
    const double C24630 = C24264 * C1540;
    const double C5436 = C50094 * C1824;
    const double C13777 = C50252 * C1824;
    const double C5439 = C50094 * C5407;
    const double C49732 = C49271 * C49728;
    const double C49794 = 2 * C49728;
    const double C4499 =
        (2 * C49458 * C49692 + C49458 * (C49692 + C49728 * C49527)) / C49149;
    const double C6378 =
        (3 * (C49692 + C49728 * C49527) +
         C49458 *
             (2 * C49458 * C49728 +
              C49458 * (C49728 + (C49271 * C49317 + C49384 * be) * C49527))) /
        C49149;
    const double C7283 =
        (4 * (2 * C49458 * C49291 + C49458 * C49783) +
         C49458 *
             (3 * C49783 + C49458 * (2 * C49458 * C49301 +
                                     C49458 * (C49301 + C49317 * C49527)))) /
        C49149;
    const double C39967 = C7295 - C7294;
    const double C147 =
        (3 * (C49290 + ae * C49293 + C49272 * C49304) +
         ae * (2 * C49293 + C49272 * C49305) +
         C49272 *
             (2 * C49304 + ae * C49305 +
              C49272 * (C49300 + ae * C49272 * C49301 +
                        C49272 * (ae * C49301 + C49272 * std::pow(C49274, 6) *
                                                    bs[6] * C49283)))) /
        C49153;
    const double C313 =
        (be * (C49280 * C49277 * C49357 +
               C49272 * (C49272 * C49286 * C49287 * C49357 + C49358 * ae) +
               C49272 * C49358 * ae) +
         C49271 * (C49290 + ae * C49293 + C49272 * C49304)) /
        C49153;
    const double C316 = (ae * C49284 + C49272 * C49290 + be * C49271 * C49369 +
                         C49271 * (be * C49369 + C49271 * C49304)) /
                        C49153;
    const double C478 =
        ((zP - zQ) * (C49290 + ae * C49293 + C49272 * C49304)) / C49153;
    const double C481 =
        (ae * C49284 + C49272 * C49290 + C49304 * std::pow(zP - zQ, 2)) /
        C49153;
    const double C883 = ((zP - zQ) * (be * C49369 + C49271 * C49304)) / C49153;
    const double C1831 = (2 * C49458 * C49304 +
                          C49458 * (C49304 + C49320 * std::pow(C49458, 2))) /
                         C49153;
    const double C2644 = (C49290 + be * C49463 + C49271 * C49467 +
                          (C49300 + be * C49271 * C49374 +
                           C49271 * (be * C49374 + C49271 * C49316)) *
                              std::pow(C49458, 2)) /
                         C49153;
    const double C7291 = C5433 - C5434;
    const double C38758 = C5434 - C5433;
    const double C49378 = C49272 * C49377;
    const double C49382 = 2 * C49377;
    const double C49472 = be * C49377;
    const double C49471 = C49271 * C49377;
    const double C1086 = (2 * (be * C49369 + C49271 * C49304) +
                          be * (C49369 + C49377 * std::pow(C49271, 2)) +
                          C49271 * (C49304 + be * C49271 * C49377 +
                                    C49271 * (be * C49377 + C49271 * C49320))) /
                         C49153;
    const double C1200 =
        (be * C49369 + C49271 * C49304 +
         (be * C49377 + C49271 * C49320) * std::pow(zP - zQ, 2)) /
        C49153;
    const double C1547 =
        ((zP - zQ) * (C49304 + be * C49271 * C49377 +
                      C49271 * (be * C49377 + C49271 * C49320))) /
        C49153;
    const double C1080 =
        (2 * C49271 * C49369 + C49271 * (C49369 + C49377 * C49466)) / C49149;
    const double C1541 = (C49458 * (C49369 + C49377 * C49466)) / C49149;
    const double C1825 =
        (2 * C49458 * C49369 + C49458 * (C49369 + C49377 * C49527)) / C49149;
    const double C2462 =
        (3 * (C49290 + be * C49463 + C49271 * C49467) +
         be * (2 * C49463 + C49271 * C49469) +
         C49271 * (2 * C49467 + be * C49469 +
                   C49271 * (C49300 + be * C49271 * C49374 +
                             C49271 * (be * C49374 + C49271 * C49316)))) /
        C49153;
    const double C3190 =
        (C49458 * (2 * C49467 + be * C49469 +
                   C49271 * (C49300 + be * C49271 * C49374 +
                             C49271 * (be * C49374 + C49271 * C49316)))) /
        C49153;
    const double C2457 = (3 * (C49365 + C49362 * C49466) +
                          C49271 * (2 * C49463 + C49271 * C49469)) /
                         C49149;
    const double C2639 = (C49365 + C49362 * C49466 + C49469 * C49527) / C49149;
    const double C3185 = (C49458 * (2 * C49463 + C49271 * C49469)) / C49149;
    const double C4502 =
        (2 * C49458 * C49469 + C49458 * (C49469 + C49498 * C49527)) / C49149;
    const double C49500 = C49271 * C49496;
    const double C49540 = 2 * C49496;
    const double C4507 = (2 * C49458 * C49467 +
                          C49458 * (C49467 + C49496 * std::pow(C49458, 2))) /
                         C49153;
    const double C6382 =
        (3 * (C49467 + C49496 * C49527) +
         C49458 *
             (2 * C49458 * C49496 +
              C49458 * (C49496 + (be * C49385 + C49271 * C49340) * C49527))) /
        C49153;
    const double C49499 = C49300 + C49495;
    const double C6392 = C117 * C4501;
    const double C16178 = C7892 * C4501;
    const double C21817 = C16928 * C4501;
    const double C22758 = C16927 * C4501;
    const double C38000 = C2267 * C4501;
    const double C47741 = C7891 * C4501;
    const double C23673 = C16928 * C6379;
    const double C39364 = C117 * C6379;
    const double C48644 = C7892 * C6379;
    const double C7284 =
        (4 * (2 * C49458 * C49362 + C49458 * C49786) +
         C49458 *
             (3 * C49786 + C49458 * (2 * C49458 * C49374 +
                                     C49458 * (C49374 + C49385 * C49527)))) /
        C49149;
    const double C39968 = C7297 - C7296;
    const double C49393 = C49391 * ae;
    const double C49594 = C49272 * C49391;
    const double C49598 = 3 * C49391;
    const double C49706 = C49271 * C49391;
    const double C49705 = C49391 * be;
    const double C1081 =
        (2 * (C49271 * C49305 + C49590 * be) +
         C49271 * (C49305 + C49271 * (C49271 * C49321 + C49391 * be) +
                   C49271 * C49391 * be) +
         (C49590 + C49391 * C49466) * be) /
        C49149;
    const double C1195 = (C49271 * C49305 + C49590 * be +
                          (C49271 * C49321 + C49391 * be) * C49527) /
                         C49149;
    const double C1542 =
        (C49458 * (C49305 + C49271 * (C49271 * C49321 + C49391 * be) +
                   C49271 * C49391 * be)) /
        C49149;
    const double C1075 =
        2 * C49271 * C49590 + C49271 * (C49590 + C49391 * C49466);
    const double C1536 = C49458 * (C49590 + C49391 * C49466);
    const double C1820 =
        2 * C49458 * C49590 + C49458 * (C49590 + C49391 * C49527);
    const double C5404 =
        3 * (C49590 + C49391 * C49527) +
        C49458 * (2 * C49458 * C49391 + C49458 * (C49391 + C49413 * C49527));
    const double C49701 = C49373 + C49699;
    const double C49746 = 2 * C49741;
    const double C49744 = C49741 * be;
    const double C4497 =
        2 * C49458 * C49698 + C49458 * (C49698 + C49741 * C49527);
    const double C6377 =
        3 * (C49698 + C49741 * C49527) +
        C49458 * (2 * C49458 * C49741 +
                  C49458 * (C49741 + C49271 * C49409 * C49527));
    const double C49743 = C49739 + C49740;
    const double C49924 = C49373 + C49923;
    const double C5440 = C117 * C5403;
    const double C49394 = C49272 * C49392;
    const double C49403 = 2 * C49392;
    const double C49474 = C49392 * C49466;
    const double C49506 = be * C49392;
    const double C49505 = C49271 * C49392;
    const double C49791 = C49392 * C49527;
    const double C5408 =
        (3 * (C49369 + C49377 * C49527) +
         C49458 * (2 * C49458 * C49377 + C49458 * (C49377 + C49392 * C49527))) /
        C49149;
    const double C49733 = C49271 * C49730;
    const double C49800 = 3 * C49730;
    const double C49798 = C49730 * be;
    const double C4496 =
        2 * C49458 * C49693 + C49458 * (C49693 + C49730 * C49527);
    const double C22744 =
        3 * (C49693 + C49730 * C49527) +
        C49458 * (2 * C49458 * C49730 + C49458 * (C49730 + C49803 * C49527));
    const double C49932 = C49726 + C49931;
    const double C23669 = C16928 * C6376;
    const double C39362 = C117 * C6376;
    const double C48640 = C7892 * C6376;
    const double C49805 = C49271 * C49801;
    const double C49825 = C49801 * C49527;
    const double C49938 = C49458 * C49937;
    const double C49347 = C49272 * C49345;
    const double C5409 =
        (3 * (C49305 + C49321 * C49527) +
         C49458 * (2 * C49458 * C49321 + C49458 * (C49321 + C49345 * C49527))) /
        C49149;
    const double C49346 = C49272 * C49344;
    const double C49507 = C49271 * C49344;
    const double C49537 = C49344 * C49527;
    const double C5412 =
        (3 * (C49304 + C49320 * C49527) +
         C49458 * (2 * C49458 * C49320 + C49458 * (C49320 + C49344 * C49527))) /
        C49153;
    const double C49553 = C49271 * C49549;
    const double C49566 = C49549 * C49527;
    const double C49573 = C49458 * C49572;
    const double C49417 = C49272 * C49414;
    const double C49508 = C49414 * C49466;
    const double C49554 = C49271 * C49551;
    const double C22746 =
        (3 * (C49469 + C49498 * C49527) +
         C49458 * (2 * C49458 * C49498 + C49458 * (C49498 + C49551 * C49527))) /
        C49149;
    const double C2663 = C2267 * C1188;
    const double C5245 = C117 * C1188;
    const double C8284 = C7892 * C1188;
    const double C14462 = C7891 * C1188;
    const double C17320 = C16928 * C1188;
    const double C22348 = C16927 * C1188;
    const double C163 = C117 * C126;
    const double C7922 = C7891 * C126;
    const double C16958 = C16927 * C126;
    const double C330 = C117 * C284;
    const double C2299 = C2267 * C284;
    const double C7915 = C7892 * C284;
    const double C8448 = C7891 * C284;
    const double C16951 = C16928 * C284;
    const double C17484 = C16927 * C284;
    const double C339 = C117 * C287;
    const double C2288 = C2268 * C287;
    const double C2821 = C2267 * C287;
    const double C8112 = C7891 * C287;
    const double C8097 = C7892 * C287;
    const double C17148 = C16927 * C287;
    const double C17133 = C16928 * C287;
    const double C495 = C117 * C449;
    const double C8608 = C7891 * C449;
    const double C17644 = C16927 * C449;
    const double C504 = C117 * C452;
    const double C8290 = C7891 * C452;
    const double C17326 = C16927 * C452;
    const double C893 = C117 * C869;
    const double C2979 = C2267 * C869;
    const double C8275 = C7892 * C869;
    const double C8820 = C7891 * C869;
    const double C17311 = C16928 * C869;
    const double C17856 = C16927 * C869;
    const double C6889 = C117 * C2635;
    const double C14994 = C7892 * C2635;
    const double C22341 = C16928 * C2635;
    const double C23261 = C16927 * C2635;
    const double C36195 = C2268 * C2635;
    const double C37094 = C2267 * C2635;
    const double C48236 = C7891 * C2635;
    const double C15648 = C7892 * C3181;
    const double C23255 = C16928 * C3181;
    const double C36693 = C2268 * C3181;
    const double C37592 = C2267 * C3181;
    const double C39970 = C117 * C7281;
    const double C6386 = C5975 - C5976;
    const double C49325 = C49313 + C49323;
    const double C7285 =
        (4 * (2 * C49458 * C49307 + C49458 * C49789) +
         C49458 * (3 * C49789 +
                   C49458 * (2 * C49458 * C49329 +
                             C49458 * (C49329 + C49272 * C49341 * C49527)))) /
        C49149;
    const double C49836 = C49833 + C49835;
    const double C49503 = C49497 + C49501;
    const double C23659 =
        (4 * (2 * C49458 * C49491 + C49458 * C49829) +
         C49458 * (3 * C49829 +
                   C49458 * (2 * C49458 * C49542 +
                             C49458 * (C49542 + C49271 * C49407 * C49527)))) /
        C49149;
    const double C49843 = C49840 + C49842;
    const double C49418 = C49406 + C49416;
    const double C49709 = C49391 + C49707;
    const double C49748 = C49271 * C49745;
    const double C49808 = C49804 + C49806;
    const double C50265 = C50230 / C49982;
    const double C50267 = C50234 / C49970;
    const double C279 = -C50266;
    const double C50269 = C50242 / C49982;
    const double C50270 = C50244 / C49970;
    const double C997 = -C50268;
    const double C50272 = C50246 / C49982;
    const double C50273 = C50248 / C49970;
    const double C1648 = -C50271;
    const double C50278 = C50259 / C49153;
    const double C50279 = C50261 / C49149;
    const double C33256 = -C50277;
    const double C121 =
        (C49168 / C49154 - (0 * be) / C49149) / C49154 + (0 * ae) / C49149;
    const double C7895 = C49168 / C49154 - (0 * be) / C49149;
    const double C16931 = C49168 / C49154 + (0 * ae) / C49149;
    const double C49170 = C49167 / C49149;
    const double C50280 = C50222 - C50262;
    const double C50281 = C50226 - C50264;
    const double C19688 =
        (C49240 / C49154 - (0 * be) / C49149) / C49154 + (0 * ae) / C49149;
    const double C24269 = C49240 / C49154 - (0 * be) / C49149;
    const double C49239 = C49236 / C49149;
    const double C7930 = C7907 - C7908;
    const double C46847 = C13768 - C13767;
    const double C16966 = C16943 - C16944;
    const double C21834 = C21809 - C21810;
    const double C50288 = C50249 - C50275;
    const double C7933 = C7913 - C7914;
    const double C7931 = C7909 - C7910;
    const double C7929 = C7905 - C7906;
    const double C8443 = C8095 - C8096;
    const double C8603 = C8273 - C8274;
    const double C14181 = C8274 - C8273;
    const double C13759 = C8269 - C8270;
    const double C13755 = C8270 - C8269;
    const double C13757 = C8265 - C8266;
    const double C13753 = C8266 - C8265;
    const double C46846 = C13766 - C13765;
    const double C46844 = C13762 - C13761;
    const double C47734 = C14996 - C14995;
    const double C48635 = C16176 - C16175;
    const double C48633 = C16172 - C16171;
    const double C2297 = C2266 * C125;
    const double C2290 = C2266 * C134;
    const double C2284 = C2266 * C124;
    const double C2279 = C2266 * C132;
    const double C2273 = C2266 * C123;
    const double C2479 = C2266 * C286;
    const double C2472 = C2266 * C294;
    const double C2466 = C2266 * C282;
    const double C2661 = C2266 * C451;
    const double C2654 = C2266 * C459;
    const double C2648 = C2266 * C447;
    const double C2819 = C2266 * C283;
    const double C2977 = C2266 * C448;
    const double C3195 = C2266 * C868;
    const double C36197 = C2266 * C465;
    const double C36191 = C2266 * C450;
    const double C36186 = C2266 * C457;
    const double C36180 = C2266 * C446;
    const double C36695 = C2266 * C873;
    const double C36689 = C2266 * C867;
    const double C37098 = C2266 * C1192;
    const double C37092 = C2266 * C1187;
    const double C37596 = C2266 * C1539;
    const double C37590 = C2266 * C1534;
    const double C37998 = C2266 * C1823;
    const double C37992 = C2266 * C1818;
    const double C50289 = C50256 - C50276;
    const double C16954 = C16922 * C146;
    const double C16950 = C16922 * C135;
    const double C16945 = C16922 * C145;
    const double C16941 = C16922 * C133;
    const double C16937 = C16922 * C144;
    const double C16933 = C16922 * C131;
    const double C17139 = C16922 * C301;
    const double C17132 = C16922 * C295;
    const double C17128 = C16922 * C312;
    const double C17124 = C16922 * C293;
    const double C17317 = C16922 * C466;
    const double C17310 = C16922 * C460;
    const double C17306 = C16922 * C477;
    const double C17302 = C16922 * C458;
    const double C17847 = C16922 * C874;
    const double C21823 = C16922 * C1824;
    const double C21816 = C16922 * C1830;
    const double C21812 = C16922 * C1822;
    const double C21807 = C16922 * C480;
    const double C21803 = C16922 * C464;
    const double C21799 = C16922 * C476;
    const double C21795 = C16922 * C456;
    const double C22347 = C16922 * C1193;
    const double C22344 = C16922 * C1199;
    const double C22340 = C16922 * C1191;
    const double C22336 = C16922 * C882;
    const double C22332 = C16922 * C872;
    const double C23256 = C16922 * C1546;
    const double C23252 = C16922 * C1538;
    const double C23670 = C16922 * C5411;
    const double C23666 = C16922 * C5405;
    const double C27247 = C16922 * C1540;
    const double C39971 = C50094 * C7287;
    const double C38755 = C5449 * C19689;
    const double C162 = C117 * C136;
    const double C2303 = C2266 * C136;
    const double C7917 = C7891 * C136;
    const double C16953 = C16927 * C136;
    const double C328 = C117 * C296;
    const double C2292 = C2267 * C296;
    const double C2825 = C2266 * C296;
    const double C7912 = C7892 * C296;
    const double C8099 = C7891 * C296;
    const double C16948 = C16928 * C296;
    const double C17135 = C16927 * C296;
    const double C337 = C117 * C302;
    const double C2283 = C2268 * C302;
    const double C2485 = C2266 * C302;
    const double C2474 = C2267 * C302;
    const double C8108 = C7891 * C302;
    const double C8093 = C7892 * C302;
    const double C17144 = C16927 * C302;
    const double C17129 = C16928 * C302;
    const double C493 = C117 * C461;
    const double C2983 = C2266 * C461;
    const double C8277 = C7891 * C461;
    const double C17313 = C16927 * C461;
    const double C502 = C117 * C467;
    const double C2667 = C2266 * C467;
    const double C8286 = C7891 * C467;
    const double C17322 = C16927 * C467;
    const double C891 = C117 * C875;
    const double C2656 = C2267 * C875;
    const double C3201 = C2266 * C875;
    const double C8271 = C7892 * C875;
    const double C8816 = C7891 * C875;
    const double C17307 = C16928 * C875;
    const double C17852 = C16927 * C875;
    const double C5429 = C500 - C499;
    const double C5425 = C499 - C500;
    const double C13773 = C8281 - C8282;
    const double C13769 = C8282 - C8281;
    const double C5979 = C888 - C889;
    const double C5971 = C889 - C888;
    const double C13758 = C8267 - C8268;
    const double C13754 = C8268 - C8267;
    const double C14457 = C8811 - C8812;
    const double C14453 = C8812 - C8811;
    const double C27454 = C17303 - C17304;
    const double C27450 = C17304 - C17303;
    const double C6385 = C5973 - C5974;
    const double C46845 = C13764 - C13763;
    const double C47732 = C14992 - C14991;
    const double C21832 = C21805 - C21806;
    const double C6888 = C50094 * C2638;
    const double C14993 = C50146 * C2638;
    const double C22342 = C50146 * C2638;
    const double C23260 = C16922 * C2638;
    const double C30866 = C24264 * C2638;
    const double C36196 = C2263 * C2638;
    const double C37093 = C2262 * C2638;
    const double C48235 = C50252 * C2638;
    const double C15647 = C50146 * C3184;
    const double C23254 = C50146 * C3184;
    const double C31364 = C24264 * C3184;
    const double C36694 = C2263 * C3184;
    const double C37591 = C2262 * C3184;
    const double C39965 = C7290 * C19689;
    const double C38764 = C38757 * C19689;
    const double C5462 = C5450 * C2264;
    const double C38756 = C5450 * C49950;
    const double C44189 = C5450 * C50224;
    const double C164 = C50094 * C137;
    const double C7921 = C50252 * C137;
    const double C16957 = C16922 * C137;
    const double C331 = C50094 * C297;
    const double C2298 = C2262 * C297;
    const double C7916 = C50146 * C297;
    const double C8447 = C50252 * C297;
    const double C16952 = C50146 * C297;
    const double C17483 = C16922 * C297;
    const double C338 = C50094 * C303;
    const double C2289 = C2263 * C303;
    const double C2820 = C2262 * C303;
    const double C8111 = C50252 * C303;
    const double C8098 = C50146 * C303;
    const double C17147 = C16922 * C303;
    const double C17134 = C50146 * C303;
    const double C24290 = C24264 * C303;
    const double C496 = C50094 * C462;
    const double C8607 = C50252 * C462;
    const double C17643 = C16922 * C462;
    const double C503 = C50094 * C468;
    const double C8289 = C50252 * C468;
    const double C17325 = C16922 * C468;
    const double C892 = C50094 * C876;
    const double C2978 = C2262 * C876;
    const double C8276 = C50146 * C876;
    const double C8819 = C50252 * C876;
    const double C17312 = C50146 * C876;
    const double C17855 = C16922 * C876;
    const double C5445 = C50094 * C1826;
    const double C49334 = C49327 + C49328;
    const double C49324 = C49315 + C49322;
    const double C2640 = (C49293 + C49271 * C49700 + C49698 * be +
                          (C49307 + C49271 * (C49271 * C49329 + C49387 * be) +
                           C49271 * C49387 * be) *
                              C49527) /
                         C49149;
    const double C14458 = C8813 - C8814;
    const double C14454 = C8814 - C8813;
    const double C28124 = C17849 - C17850;
    const double C28120 = C17850 - C17849;
    const double C5455 = C5436 - C5435;
    const double C5453 = C5435 - C5436;
    const double C49734 = C49291 + C49732;
    const double C6389 = C50094 * C4499;
    const double C16173 = C50146 * C4499;
    const double C21814 = C50146 * C4499;
    const double C22753 = C16922 * C4499;
    const double C37993 = C2262 * C4499;
    const double C47736 = C50252 * C4499;
    const double C23668 = C50146 * C6378;
    const double C39361 = C50094 * C6378;
    const double C48639 = C50146 * C6378;
    const double C39969 = C50094 * C7283;
    const double C39974 = C39967 * C19689;
    const double C166 = C50094 * C147;
    const double C7925 = C50252 * C147;
    const double C16961 = C16922 * C147;
    const double C329 = C50094 * C313;
    const double C2293 = C2262 * C313;
    const double C2824 = C2261 * C313;
    const double C7911 = C50146 * C313;
    const double C8100 = C50252 * C313;
    const double C16947 = C50146 * C313;
    const double C17136 = C16922 * C313;
    const double C336 = C50094 * C316;
    const double C2282 = C2263 * C316;
    const double C2484 = C2261 * C316;
    const double C2475 = C2262 * C316;
    const double C8107 = C50252 * C316;
    const double C8094 = C50146 * C316;
    const double C17143 = C16922 * C316;
    const double C17130 = C50146 * C316;
    const double C24283 = C24264 * C316;
    const double C494 = C50094 * C478;
    const double C2982 = C2261 * C478;
    const double C8278 = C50252 * C478;
    const double C17314 = C16922 * C478;
    const double C501 = C50094 * C481;
    const double C2666 = C2261 * C481;
    const double C8285 = C50252 * C481;
    const double C17321 = C16922 * C481;
    const double C890 = C50094 * C883;
    const double C2657 = C2262 * C883;
    const double C3200 = C2261 * C883;
    const double C8272 = C50146 * C883;
    const double C8815 = C50252 * C883;
    const double C17308 = C50146 * C883;
    const double C17851 = C16922 * C883;
    const double C5438 = C50094 * C1831;
    const double C13781 = C50252 * C1831;
    const double C21827 = C16922 * C1831;
    const double C6890 = C50094 * C2644;
    const double C14997 = C50146 * C2644;
    const double C22346 = C50146 * C2644;
    const double C23264 = C16922 * C2644;
    const double C30872 = C24264 * C2644;
    const double C36202 = C2263 * C2644;
    const double C37099 = C2262 * C2644;
    const double C48239 = C50252 * C2644;
    const double C7299 = C7291 * C2264;
    const double C39966 = C7291 * C49950;
    const double C45962 = C7291 * C50224;
    const double C38765 = C38758 * C49950;
    const double C49379 = C49362 + C49378;
    const double C49475 = C49472 + C49473;
    const double C1194 = (C49271 * C49369 + C49471 * C49527) / C49149;
    const double C2486 = C2262 * C1086;
    const double C2477 = C2263 * C1086;
    const double C8109 = C50146 * C1086;
    const double C17145 = C50146 * C1086;
    const double C24466 = C24264 * C1086;
    const double C2668 = C2262 * C1200;
    const double C5248 = C50094 * C1200;
    const double C8287 = C50146 * C1200;
    const double C14465 = C50252 * C1200;
    const double C17323 = C50146 * C1200;
    const double C22351 = C16922 * C1200;
    const double C2659 = C2263 * C1547;
    const double C3202 = C2262 * C1547;
    const double C5251 = C50094 * C1547;
    const double C8817 = C50146 * C1547;
    const double C13547 = C50252 * C1547;
    const double C17853 = C50146 * C1547;
    const double C24636 = C24264 * C1547;
    const double C27251 = C16922 * C1547;
    const double C2487 = C2267 * C1080;
    const double C2476 = C2268 * C1080;
    const double C8110 = C7892 * C1080;
    const double C17146 = C16928 * C1080;
    const double C2658 = C2268 * C1541;
    const double C3203 = C2267 * C1541;
    const double C5252 = C117 * C1541;
    const double C8818 = C7892 * C1541;
    const double C13548 = C7891 * C1541;
    const double C17854 = C16928 * C1541;
    const double C27252 = C16927 * C1541;
    const double C5437 = C117 * C1825;
    const double C13782 = C7891 * C1825;
    const double C21828 = C16927 * C1825;
    const double C15651 = C50146 * C3190;
    const double C23258 = C50146 * C3190;
    const double C31370 = C24264 * C3190;
    const double C36700 = C2263 * C3190;
    const double C37597 = C2262 * C3190;
    const double C6891 = C117 * C2639;
    const double C14998 = C7892 * C2639;
    const double C22345 = C16928 * C2639;
    const double C23265 = C16927 * C2639;
    const double C36201 = C2268 * C2639;
    const double C37100 = C2267 * C2639;
    const double C48240 = C7891 * C2639;
    const double C15652 = C7892 * C3185;
    const double C23259 = C16928 * C3185;
    const double C36699 = C2268 * C3185;
    const double C37598 = C2267 * C3185;
    const double C22760 = C16928 * C4502;
    const double C38002 = C2268 * C4502;
    const double C39698 = C117 * C4502;
    const double C47743 = C7892 * C4502;
    const double C49547 = C49540 + C49541;
    const double C6391 = C50094 * C4507;
    const double C16177 = C50146 * C4507;
    const double C21818 = C50146 * C4507;
    const double C22757 = C16922 * C4507;
    const double C37999 = C2262 * C4507;
    const double C47740 = C50252 * C4507;
    const double C23672 = C50146 * C6382;
    const double C39363 = C50094 * C6382;
    const double C48643 = C50146 * C6382;
    const double C49502 = C49499 + C49500;
    const double C39972 = C117 * C7284;
    const double C39975 = C39968 * C49950;
    const double C49595 = C49593 + C49594;
    const double C1189 = C49271 * C49590 + C49706 * C49527;
    const double C5962 =
        2 * C49458 * C49706 + C49458 * (C49706 + C49271 * C49413 * C49527);
    const double C49708 = C49704 + C49705;
    const double C2822 = C2263 * C1081;
    const double C8113 = C50146 * C1081;
    const double C17149 = C50146 * C1081;
    const double C24799 = C24264 * C1081;
    const double C5615 = C50094 * C1195;
    const double C8291 = C50146 * C1195;
    const double C17327 = C50146 * C1195;
    const double C2980 = C2263 * C1542;
    const double C8821 = C50146 * C1542;
    const double C10825 = C50094 * C1542;
    const double C17857 = C50146 * C1542;
    const double C24957 = C24264 * C1542;
    const double C2823 = C2268 * C1075;
    const double C8114 = C7892 * C1075;
    const double C17150 = C16928 * C1075;
    const double C2981 = C2268 * C1536;
    const double C8822 = C7892 * C1536;
    const double C10826 = C117 * C1536;
    const double C17858 = C16928 * C1536;
    const double C5446 = C117 * C1820;
    const double C2458 =
        (3 * (C49293 + C49271 * C49700 + C49698 * be) +
         C49271 * (2 * C49700 +
                   C49271 * (C49307 + C49271 * (C49271 * C49329 + C49387 * be) +
                             C49271 * C49387 * be) +
                   C49701 * be) +
         (2 * C49698 + C49271 * C49701) * be) /
        C49149;
    const double C3186 =
        (C49458 * (2 * C49700 +
                   C49271 * (C49307 + C49271 * (C49271 * C49329 + C49387 * be) +
                             C49271 * C49387 * be) +
                   C49701 * be)) /
        C49149;
    const double C2454 = 3 * (C49588 + C49373 * C49466) +
                         C49271 * (2 * C49698 + C49271 * C49701);
    const double C2636 = C49588 + C49373 * C49466 + C49701 * C49527;
    const double C3182 = C49458 * (2 * C49698 + C49271 * C49701);
    const double C4498 =
        2 * C49458 * C49701 + C49458 * (C49701 + C49745 * C49527);
    const double C5984 = C117 * C4497;
    const double C13780 = C7892 * C4497;
    const double C21826 = C16928 * C4497;
    const double C49747 = C49271 * C49743;
    const double C4503 =
        (2 * C49458 * C49700 + C49458 * (C49700 + C49743 * C49527)) / C49149;
    const double C6380 =
        (3 * (C49700 + C49743 * C49527) +
         C49458 * (2 * C49458 * C49743 +
                   C49458 * (C49743 + (C49271 * C49272 * C49341 + C49409 * be) *
                                          C49527))) /
        C49149;
    const double C7282 =
        4 * (2 * C49458 * C49373 + C49458 * C49924) +
        C49458 * (3 * C49924 + C49458 * (2 * C49458 * C49387 +
                                         C49458 * (C49387 + C49409 * C49527)));
    const double C49395 = C49374 + C49394;
    const double C49476 = C49377 + C49474;
    const double C49511 = 2 * C49505;
    const double C49509 = be * C49505;
    const double C4505 =
        (2 * C49458 * C49471 + C49458 * (C49471 + C49505 * C49527)) / C49149;
    const double C6381 =
        (3 * (C49471 + C49505 * C49527) +
         C49458 * (2 * C49458 * C49505 +
                   C49458 * (C49505 + C49271 * C49414 * C49527))) /
        C49149;
    const double C49792 = C49377 + C49791;
    const double C5442 = C117 * C5408;
    const double C49735 = C49731 + C49733;
    const double C22756 = C16928 * C4496;
    const double C37996 = C2268 * C4496;
    const double C39696 = C117 * C4496;
    const double C47739 = C7892 * C4496;
    const double C23657 =
        4 * (2 * C49458 * C49726 + C49458 * C49932) +
        C49458 * (3 * C49932 +
                  C49458 * (2 * C49458 * C49797 +
                            C49458 * (C49797 + C49271 * C49405 * C49527)));
    const double C49807 = C49301 + C49805;
    const double C49826 = C49728 + C49825;
    const double C49939 = C49936 + C49938;
    const double C49349 = C49337 + C49347;
    const double C49348 = C49339 + C49346;
    const double C49510 = C49506 + C49507;
    const double C49538 = C49320 + C49537;
    const double C5441 = C50094 * C5412;
    const double C49555 = C49552 + C49553;
    const double C49567 = C49496 + C49566;
    const double C49574 = C49571 + C49573;
    const double C49419 = C49385 + C49417;
    const double C49512 = C49392 + C49508;
    const double C49556 = C49550 + C49554;
    const double C5981 = C5246 - C5245;
    const double C5977 = C5245 - C5246;
    const double C13774 = C8283 - C8284;
    const double C13770 = C8284 - C8283;
    const double C21820 = C17320 - C17319;
    const double C27458 = C17319 - C17320;
    const double C6394 = C6386 * C2264;
    const double C39358 = C6386 * C49950;
    const double C45079 = C6386 * C50224;
    const double C139 = (4 * (2 * C49293 + C49272 * C49305) +
                         C49272 * (3 * C49305 + C49272 * C49325)) /
                        C49149;
    const double C470 =
        (2 * C49293 + C49272 * C49305 + C49325 * C49527) / C49149;
    const double C472 = (C49458 * (3 * C49305 + C49272 * C49325)) / C49149;
    const double C39961 =
        (5 * (3 * C49783 + C49458 * C49836) +
         C49458 * (4 * C49836 +
                   C49458 * (3 * C49834 +
                             C49458 * (2 * C49458 * C49317 +
                                       C49458 * (C49317 + C49341 * C49527))))) /
        C49149;
    const double C3452 = (4 * (2 * C49463 + C49271 * C49469) +
                          C49271 * (3 * C49469 + C49271 * C49503)) /
                         C49149;
    const double C3606 =
        (2 * C49463 + C49271 * C49469 + C49503 * C49527) / C49149;
    const double C4100 = (C49458 * (3 * C49469 + C49271 * C49503)) / C49149;
    const double C39962 =
        (5 * (3 * C49786 + C49458 * C49843) +
         C49458 * (4 * C49843 +
                   C49458 * (3 * C49841 +
                             C49458 * (2 * C49458 * C49385 +
                                       C49458 * (C49385 + C49407 * C49527))))) /
        C49149;
    const double C49420 = C49418 * ae;
    const double C49599 = C49272 * C49418;
    const double C2455 = 3 * (C49590 + C49391 * C49466) +
                         C49271 * (2 * C49706 + C49271 * C49709);
    const double C2637 = C49590 + C49391 * C49466 + C49709 * C49527;
    const double C3183 = C49458 * (2 * C49706 + C49271 * C49709);
    const double C49750 = C49746 + C49748;
    const double C49810 = C49271 * C49808;
    const double C50282 = C50229 - C50265;
    const double C50283 = C50233 - C50267;
    const double C50284 = C50236 - C50269;
    const double C50285 = C50243 - C50270;
    const double C50286 = C50238 - C50272;
    const double C50287 = C50247 - C50273;
    const double C50290 = C50251 - C50278;
    const double C50291 = C50260 - C50279;
    const double C49172 = C49950 - C49170;
    const double C106 = (C50280 * C49945) / C49149 + (C50224 - C50263) / C49154;
    const double C107 =
        (C50281 * C49945) / C49149 + (2 * C49955 + C50280) / C49154;
    const double C108 = (C49945 * C49955) / C49158 + C50281 / C49154;
    const double C24289 = C24269 * C287;
    const double C24284 = C24269 * C302;
    const double C24278 = C24269 * C286;
    const double C24465 = C24269 * C1080;
    const double C24459 = C24269 * C1074;
    const double C24635 = C24269 * C1541;
    const double C24629 = C24269 * C1535;
    const double C24800 = C24269 * C1075;
    const double C24958 = C24269 * C1536;
    const double C30871 = C24269 * C2639;
    const double C30865 = C24269 * C2635;
    const double C30860 = C24269 * C1539;
    const double C30854 = C24269 * C1534;
    const double C31369 = C24269 * C3185;
    const double C31363 = C24269 * C3181;
    const double C32672 = C24269 * C4502;
    const double C32666 = C24269 * C4496;
    const double C49242 = C50094 - C49239;
    const double C24303 = C50288 * C146;
    const double C24297 = C50288 * C135;
    const double C24292 = C50288 * C145;
    const double C24286 = C50288 * C133;
    const double C24279 = C50288 * C144;
    const double C24273 = C50288 * C131;
    const double C24473 = C50288 * C316;
    const double C24467 = C50288 * C301;
    const double C24462 = C50288 * C312;
    const double C24456 = C50288 * C293;
    const double C24643 = C50288 * C481;
    const double C24637 = C50288 * C466;
    const double C24632 = C50288 * C477;
    const double C24626 = C50288 * C458;
    const double C24801 = C50288 * C313;
    const double C24795 = C50288 * C295;
    const double C24959 = C50288 * C478;
    const double C24953 = C50288 * C460;
    const double C25165 = C50288 * C883;
    const double C25159 = C50288 * C874;
    const double C30868 = C50288 * C480;
    const double C30862 = C50288 * C464;
    const double C30855 = C50288 * C476;
    const double C30849 = C50288 * C456;
    const double C31366 = C50288 * C882;
    const double C31360 = C50288 * C872;
    const double C31767 = C50288 * C1199;
    const double C31761 = C50288 * C1191;
    const double C32265 = C50288 * C1546;
    const double C32259 = C50288 * C1538;
    const double C32667 = C50288 * C1830;
    const double C32661 = C50288 * C1822;
    const double C19680 =
        (C50288 * C50141) / C49149 + (C50252 - C50274) / C49154;
    const double C7937 = C7929 + C7930;
    const double C46851 = C46846 + C46847;
    const double C24299 = C50289 * C297;
    const double C24294 = C50289 * C313;
    const double C24288 = C50289 * C295;
    const double C24281 = C50289 * C312;
    const double C24275 = C50289 * C293;
    const double C24475 = C50289 * C1086;
    const double C24469 = C50289 * C1079;
    const double C24464 = C50289 * C316;
    const double C24458 = C50289 * C301;
    const double C24645 = C50289 * C1200;
    const double C24639 = C50289 * C1193;
    const double C24634 = C50289 * C883;
    const double C24628 = C50289 * C874;
    const double C24797 = C50289 * C303;
    const double C24955 = C50289 * C876;
    const double C25167 = C50289 * C1547;
    const double C25161 = C50289 * C1540;
    const double C30870 = C50289 * C1199;
    const double C30864 = C50289 * C1191;
    const double C30857 = C50289 * C882;
    const double C30851 = C50289 * C872;
    const double C31368 = C50289 * C1546;
    const double C31362 = C50289 * C1538;
    const double C31769 = C50289 * C2644;
    const double C31763 = C50289 * C2638;
    const double C32267 = C50289 * C3190;
    const double C32261 = C50289 * C3184;
    const double C32669 = C50289 * C4507;
    const double C32663 = C50289 * C4499;
    const double C19681 =
        (C50289 * C50141) / C49149 + (2 * C50146 + C50288) / C49154;
    const double C19682 = (C50141 * C50146) / C49158 + C50289 / C49154;
    const double C16969 = C16949 - C16950;
    const double C16967 = C16945 - C16946;
    const double C16965 = C16941 - C16942;
    const double C17479 = C17131 - C17132;
    const double C21819 = C17318 - C17317;
    const double C27457 = C17317 - C17318;
    const double C17639 = C17309 - C17310;
    const double C27855 = C17310 - C17309;
    const double C27455 = C17305 - C17306;
    const double C27451 = C17306 - C17305;
    const double C27453 = C17301 - C17302;
    const double C27449 = C17302 - C17301;
    const double C28123 = C17847 - C17848;
    const double C28119 = C17848 - C17847;
    const double C23664 = C21815 - C21816;
    const double C23662 = C21811 - C21812;
    const double C21833 = C21807 - C21808;
    const double C21831 = C21803 - C21804;
    const double C22751 = C22343 - C22344;
    const double C22749 = C22339 - C22340;
    const double C176 = C162 - C161;
    const double C174 = C161 - C162;
    const double C7935 = C7917 - C7918;
    const double C16971 = C16953 - C16954;
    const double C38759 = C5429 * C19689;
    const double C5451 = C5425 * C2270;
    const double C44190 = C5425 * C49168;
    const double C13787 = C13757 + C13758;
    const double C13785 = C13753 + C13754;
    const double C39357 = C6385 * C19689;
    const double C46850 = C46844 + C46845;
    const double C47733 = C14994 - C14993;
    const double C22750 = C22341 - C22342;
    const double C38763 = C38755 + C38756;
    const double C177 = C163 - C164;
    const double C620 = C330 - C331;
    const double C7934 = C7915 - C7916;
    const double C16970 = C16951 - C16952;
    const double C8444 = C8097 - C8098;
    const double C17480 = C17133 - C17134;
    const double C732 = C495 - C496;
    const double C11269 = C496 - C495;
    const double C5443 = C504 - C503;
    const double C5767 = C503 - C504;
    const double C11121 = C893 - C892;
    const double C11465 = C892 - C893;
    const double C8604 = C8275 - C8276;
    const double C14182 = C8276 - C8275;
    const double C17640 = C17311 - C17312;
    const double C27856 = C17312 - C17311;
    const double C148 =
        (4 * (2 * C49304 + ae * C49305 + C49272 * C49324) +
         ae * (3 * C49305 + C49272 * C49325) +
         C49272 * (3 * C49324 + ae * C49325 +
                   C49272 * (2 * C49320 + ae * C49321 +
                             C49272 * (C49316 + ae * C49272 * C49317 +
                                       C49272 * (ae * C49317 +
                                                 C49272 * std::pow(C49276, 7) *
                                                     bs[7] * C49283))))) /
        C49153;
    const double C314 =
        (be * (2 * (C49272 * C49362 + C49358 * ae) +
               C49272 *
                   (C49362 +
                    C49272 * (C49272 * C49295 * C49296 * C49357 + C49361 * ae) +
                    C49272 * C49361 * ae) +
               (C49358 + C49361 * C49297) * ae) +
         C49271 * (2 * C49304 + ae * C49305 + C49272 * C49324)) /
        C49153;
    const double C479 =
        ((zP - zQ) * (2 * C49304 + ae * C49305 + C49272 * C49324)) / C49153;
    const double C482 = (C49290 + ae * C49293 + C49272 * C49304 +
                         C49324 * std::pow(zP - zQ, 2)) /
                        C49153;
    const double C2664 = C2263 * C2640;
    const double C5253 = C50094 * C2640;
    const double C14463 = C50146 * C2640;
    const double C22349 = C50146 * C2640;
    const double C24641 = C24264 * C2640;
    const double C14471 = C14457 + C14458;
    const double C14469 = C14453 + C14454;
    const double C7292 = C5453 * C2270;
    const double C38761 = C5453 * C19689;
    const double C45963 = C5453 * C49168;
    const double C49736 = C49734 + C49729;
    const double C39359 = C6390 - C6389;
    const double C48634 = C16174 - C16173;
    const double C23663 = C21813 - C21814;
    const double C619 = C328 - C329;
    const double C7932 = C7911 - C7912;
    const double C8445 = C8099 - C8100;
    const double C16968 = C16947 - C16948;
    const double C17481 = C17135 - C17136;
    const double C731 = C493 - C494;
    const double C5766 = C494 - C493;
    const double C8605 = C8277 - C8278;
    const double C14183 = C8278 - C8277;
    const double C17641 = C17313 - C17314;
    const double C27857 = C17314 - C17313;
    const double C5430 = C502 - C501;
    const double C5426 = C501 - C502;
    const double C13775 = C8285 - C8286;
    const double C13771 = C8286 - C8285;
    const double C21821 = C17322 - C17321;
    const double C27459 = C17321 - C17322;
    const double C5980 = C890 - C891;
    const double C5972 = C891 - C890;
    const double C13760 = C8271 - C8272;
    const double C13756 = C8272 - C8271;
    const double C14459 = C8815 - C8816;
    const double C14455 = C8816 - C8815;
    const double C27456 = C17307 - C17308;
    const double C27452 = C17308 - C17307;
    const double C28125 = C17851 - C17852;
    const double C28121 = C17852 - C17851;
    const double C39973 = C39965 + C39966;
    const double C38768 = C38764 + C38765;
    const double C49380 = C49379 + C49375;
    const double C2645 = (C49304 + be * C49471 + C49271 * C49475 +
                          (C49320 + be * C49271 * C49392 +
                           C49271 * (be * C49392 + C49271 * C49344)) *
                              std::pow(C49458, 2)) /
                         C49153;
    const double C2669 = C2267 * C1194;
    const double C5247 = C117 * C1194;
    const double C8288 = C7892 * C1194;
    const double C14466 = C7891 * C1194;
    const double C17324 = C16928 * C1194;
    const double C22352 = C16927 * C1194;
    const double C14460 = C8817 - C8818;
    const double C14456 = C8818 - C8817;
    const double C28126 = C17853 - C17854;
    const double C28122 = C17854 - C17853;
    const double C5456 = C5438 - C5437;
    const double C5454 = C5437 - C5438;
    const double C47735 = C14998 - C14997;
    const double C22752 = C22345 - C22346;
    const double C39360 = C6392 - C6391;
    const double C48636 = C16178 - C16177;
    const double C23665 = C21817 - C21818;
    const double C3455 =
        (4 * (2 * C49467 + be * C49469 + C49271 * C49502) +
         be * (3 * C49469 + C49271 * C49503) +
         C49271 *
             (3 * C49502 + be * C49503 +
              C49271 * (2 * C49496 + be * C49498 +
                        C49271 * (C49316 + be * C49271 * C49385 +
                                  C49271 * (be * C49385 + C49271 * C49340))))) /
        C49153;
    const double C3609 =
        (2 * C49467 + be * C49469 + C49271 * C49502 +
         (2 * C49496 + be * C49498 +
          C49271 * (C49316 + be * C49271 * C49385 +
                    C49271 * (be * C49385 + C49271 * C49340))) *
             std::pow(C49458, 2)) /
        C49153;
    const double C4103 =
        (C49458 *
         (3 * C49502 + be * C49503 +
          C49271 * (2 * C49496 + be * C49498 +
                    C49271 * (C49316 + be * C49271 * C49385 +
                              C49271 * (be * C49385 + C49271 * C49340))))) /
        C49153;
    const double C4508 =
        (2 * C49458 * C49502 +
         C49458 * (C49502 + (C49316 + be * C49271 * C49385 +
                             C49271 * (be * C49385 + C49271 * C49340)) *
                                std::pow(C49458, 2))) /
        C49153;
    const double C39976 = C39974 + C39975;
    const double C305 =
        (2 * C49293 + C49272 * C49305 +
         C49271 * (C49271 * C49325 + C49595 * be) + C49271 * C49595 * be) /
        C49149;
    const double C307 = (C49271 * (3 * C49305 + C49272 * C49325) +
                         (3 * C49590 + C49272 * C49595) * be) /
                        C49149;
    const double C878 = (C49458 * (C49271 * C49325 + C49595 * be)) / C49149;
    const double C127 = 4 * (2 * C49588 + C49272 * C49590) +
                        C49272 * (3 * C49590 + C49272 * C49595);
    const double C288 = 2 * C49588 + C49272 * C49590 + C49595 * C49466;
    const double C289 = C49271 * (3 * C49590 + C49272 * C49595);
    const double C453 = 2 * C49588 + C49272 * C49590 + C49595 * C49527;
    const double C454 = C49458 * (3 * C49590 + C49272 * C49595);
    const double C870 = C49458 * C49271 * C49595;
    const double C1076 =
        2 * C49271 * C49595 + C49271 * (C49595 + C49418 * C49466);
    const double C1190 = C49271 * C49595 + C49271 * C49418 * C49527;
    const double C1537 = C49458 * (C49595 + C49418 * C49466);
    const double C1821 =
        2 * C49458 * C49595 + C49458 * (C49595 + C49418 * C49527);
    const double C5616 = C117 * C1189;
    const double C8292 = C7892 * C1189;
    const double C17328 = C16928 * C1189;
    const double C2460 =
        (3 * (C49305 + C49271 * C49708 + C49706 * be) +
         C49271 * (2 * C49708 +
                   C49271 * (C49321 + C49271 * (C49271 * C49345 + C49413 * be) +
                             C49271 * C49413 * be) +
                   C49709 * be) +
         (2 * C49706 + C49271 * C49709) * be) /
        C49149;
    const double C2642 = (C49305 + C49271 * C49708 + C49706 * be +
                          (C49321 + C49271 * (C49271 * C49345 + C49413 * be) +
                           C49271 * C49413 * be) *
                              C49527) /
                         C49149;
    const double C3188 =
        (C49458 * (2 * C49708 +
                   C49271 * (C49321 + C49271 * (C49271 * C49345 + C49413 * be) +
                             C49271 * C49413 * be) +
                   C49709 * be)) /
        C49149;
    const double C5963 =
        (2 * C49458 * C49708 +
         C49458 * (C49708 + (C49271 * C49345 + C49413 * be) * C49527)) /
        C49149;
    const double C2482 = C2263 * C2458;
    const double C24471 = C24264 * C2458;
    const double C3198 = C2263 * C3186;
    const double C13545 = C50146 * C3186;
    const double C25163 = C24264 * C3186;
    const double C27249 = C50146 * C3186;
    const double C2483 = C2268 * C2454;
    const double C24472 = C24269 * C2454;
    const double C2665 = C2268 * C2636;
    const double C5254 = C117 * C2636;
    const double C14464 = C7892 * C2636;
    const double C22350 = C16928 * C2636;
    const double C24642 = C24269 * C2636;
    const double C3199 = C2268 * C3182;
    const double C13546 = C7892 * C3182;
    const double C25164 = C24269 * C3182;
    const double C27250 = C16928 * C3182;
    const double C49749 = C49307 + C49747;
    const double C5983 = C50094 * C4503;
    const double C13779 = C50146 * C4503;
    const double C21825 = C50146 * C4503;
    const double C49396 = C49395 + C49390;
    const double C2463 =
        (3 * (C49304 + be * C49471 + C49271 * C49475) +
         be * (2 * C49471 + C49271 * C49476) +
         C49271 * (2 * C49475 + be * C49476 +
                   C49271 * (C49320 + be * C49271 * C49392 +
                             C49271 * (be * C49392 + C49271 * C49344)))) /
        C49153;
    const double C3191 =
        (C49458 * (2 * C49475 + be * C49476 +
                   C49271 * (C49320 + be * C49271 * C49392 +
                             C49271 * (be * C49392 + C49271 * C49344)))) /
        C49153;
    const double C2459 = (3 * (C49369 + C49377 * C49466) +
                          C49271 * (2 * C49471 + C49271 * C49476)) /
                         C49149;
    const double C2641 = (C49369 + C49377 * C49466 + C49476 * C49527) / C49149;
    const double C3187 = (C49458 * (2 * C49471 + C49271 * C49476)) / C49149;
    const double C49513 = C49320 + C49509;
    const double C5986 = C117 * C4505;
    const double C13784 = C7892 * C4505;
    const double C21830 = C16928 * C4505;
    const double C7286 =
        (4 * (2 * C49458 * C49377 + C49458 * C49792) +
         C49458 *
             (3 * C49792 + C49458 * (2 * C49458 * C49392 +
                                     C49458 * (C49392 + C49414 * C49527)))) /
        C49149;
    const double C3449 = 4 * (2 * C49690 + C49271 * C49693) +
                         C49271 * (3 * C49693 + C49271 * C49735);
    const double C3603 = 2 * C49690 + C49271 * C49693 + C49735 * C49527;
    const double C4097 = C49458 * (3 * C49693 + C49271 * C49735);
    const double C21074 =
        2 * C49458 * C49735 + C49458 * (C49735 + C49808 * C49527);
    const double C49809 = C49807 + C49802;
    const double C23658 =
        (4 * (2 * C49458 * C49728 + C49458 * C49826) +
         C49458 * (3 * C49826 + C49458 * (2 * C49458 * C49801 +
                                          C49458 * (C49801 + (C49271 * C49341 +
                                                              C49405 * be) *
                                                                 C49527)))) /
        C49149;
    const double C39960 =
        5 * (3 * C49921 + C49458 * C49939) +
        C49458 * (4 * C49939 +
                  C49458 * (3 * C49937 +
                            C49458 * (2 * C49458 * C49384 +
                                      C49458 * (C49384 + C49405 * C49527))));
    const double C49351 = C49272 * C49349;
    const double C1083 =
        (2 * (C49271 * C49325 + C49595 * be) +
         C49271 * (C49325 + C49271 * (C49271 * C49349 + C49418 * be) +
                   C49271 * C49418 * be) +
         (C49595 + C49418 * C49466) * be) /
        C49149;
    const double C1197 = (C49271 * C49325 + C49595 * be +
                          (C49271 * C49349 + C49418 * be) * C49527) /
                         C49149;
    const double C1544 =
        (C49458 * (C49325 + C49271 * (C49271 * C49349 + C49418 * be) +
                   C49271 * C49418 * be)) /
        C49149;
    const double C1828 =
        (2 * C49458 * C49325 + C49458 * (C49325 + C49349 * C49527)) / C49149;
    const double C49350 = C49272 * C49348;
    const double C49480 = C49271 * C49348;
    const double C1832 = (2 * C49458 * C49324 +
                          C49458 * (C49324 + C49348 * std::pow(C49458, 2))) /
                         C49153;
    const double C5413 =
        (3 * (C49324 + C49348 * C49527) +
         C49458 * (2 * C49458 * C49348 +
                   C49458 * (C49348 + (C49340 + ae * C49272 * C49341 +
                                       C49272 * (ae * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283)) *
                                          C49527))) /
        C49153;
    const double C49514 = C49271 * C49510;
    const double C4509 = (2 * C49458 * C49475 +
                          C49458 * (C49475 + C49510 * std::pow(C49458, 2))) /
                         C49153;
    const double C6383 =
        (3 * (C49475 + C49510 * C49527) +
         C49458 * (2 * C49458 * C49510 +
                   C49458 * (C49510 + (be * C49414 +
                                       C49271 * (ae * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283)) *
                                          C49527))) /
        C49153;
    const double C7288 =
        (4 * (2 * C49458 * C49320 + C49458 * C49538) +
         C49458 * (3 * C49538 +
                   C49458 * (2 * C49458 * C49344 +
                             C49458 * (C49344 + (ae * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283) *
                                                    C49527)))) /
        C49153;
    const double C49557 = C49271 * C49555;
    const double C22747 =
        (3 * (C49502 + C49555 * C49527) +
         C49458 * (2 * C49458 * C49555 +
                   C49458 * (C49555 + (C49340 + be * C49271 * C49407 +
                                       C49271 * (be * C49407 +
                                                 C49271 * std::pow(C49274, 8) *
                                                     bs[8] * C49283)) *
                                          C49527))) /
        C49153;
    const double C23660 =
        (4 * (2 * C49458 * C49496 + C49458 * C49567) +
         C49458 * (3 * C49567 +
                   C49458 * (2 * C49458 * C49549 +
                             C49458 * (C49549 + (be * C49407 +
                                                 C49271 * std::pow(C49274, 8) *
                                                     bs[8] * C49283) *
                                                    C49527)))) /
        C49153;
    const double C39963 =
        (5 * (3 * C49535 + C49458 * C49574) +
         C49458 * (4 * C49574 +
                   C49458 * (3 * C49572 +
                             C49458 * (2 * C49458 * C49340 +
                                       C49458 * (C49340 + std::pow(C49274, 8) *
                                                              bs[8] * C49283 *
                                                              C49527))))) /
        C49153;
    const double C49421 = C49419 + C49412;
    const double C49515 = C49271 * C49512;
    const double C4506 =
        (2 * C49458 * C49476 + C49458 * (C49476 + C49512 * C49527)) / C49149;
    const double C49558 = C49271 * C49556;
    const double C21076 =
        (2 * C49458 * C49503 + C49458 * (C49503 + C49556 * C49527)) / C49149;
    const double C6387 = C5977 * C2270;
    const double C45080 = C5977 * C49168;
    const double C13791 = C13773 + C13774;
    const double C13789 = C13769 + C13770;
    const double C167 = C50094 * C139;
    const double C507 = C50094 * C470;
    const double C734 = C50094 * C472;
    const double C23267 = C16928 * C3606;
    const double C31772 = C24269 * C3606;
    const double C37102 = C2268 * C3606;
    const double C48242 = C7892 * C3606;
    const double C32270 = C24269 * C4100;
    const double C37600 = C2268 * C4100;
    const double C49600 = C49598 + C49599;
    const double C3450 = 4 * (2 * C49698 + C49271 * C49701) +
                         C49271 * (3 * C49701 + C49271 * C49750);
    const double C3604 = 2 * C49698 + C49271 * C49701 + C49750 * C49527;
    const double C4098 = C49458 * (3 * C49701 + C49271 * C49750);
    const double C49812 = C49800 + C49810;
    const double C113 = (C50282 * C49973) / C49970 + (C50231 - C50266) / C49972;
    const double C114 =
        (C50283 * C49973) / C49970 + (2 * C49984 + C50282) / C49972;
    const double C115 = (C49973 * C49984) / C49987 + C50283 / C49972;
    const double C1068 =
        (C50284 * C50044) / C49970 + (C50239 - C50268) / C49972;
    const double C1069 =
        (C50285 * C50044) / C49970 + (2 * C50049 + C50284) / C49972;
    const double C1070 = (C50044 * C50049) / C49987 + C50285 / C49972;
    const double C1814 =
        (C50286 * C50072) / C49970 + (C50240 - C50271) / C49972;
    const double C1815 =
        (C50287 * C50072) / C49970 + (2 * C50077 + C50286) / C49972;
    const double C1816 = (C50072 * C50077) / C49987 + C50287 / C49972;
    const double C38554 =
        (C50290 * C50169) / C49149 + (C50253 - C50277) / C49154;
    const double C38555 =
        (C50291 * C50169) / C49149 + (2 * C50174 + C50290) / C49154;
    const double C38556 = (C50169 * C50174) / C49158 + C50291 / C49154;
    const double C49173 = C49172 * ae;
    const double C2269 = (-C49150 / C49149) / C49154 - (C49172 * be) / C49149;
    const double C49244 = C49242 * ae;
    const double C46854 = C46851 * C49950;
    const double C16973 = C16965 + C16966;
    const double C21835 = C21819 + C21820;
    const double C27465 = C27457 + C27458;
    const double C27463 = C27453 + C27454;
    const double C27461 = C27449 + C27450;
    const double C28129 = C28123 + C28124;
    const double C28127 = C28119 + C28120;
    const double C21838 = C21833 + C21834;
    const double C21837 = C21831 + C21832;
    const double C39365 = C39357 + C39358;
    const double C46853 = C46850 * C19689;
    const double C47744 = C47732 + C47733;
    const double C22761 = C22749 + C22750;
    const double C7939 = C7933 + C7934;
    const double C16975 = C16969 + C16970;
    const double C8455 = C8443 + C8444;
    const double C17491 = C17479 + C17480;
    const double C5459 = C5443 * C2270;
    const double C44194 = C5443 * C49168;
    const double C8615 = C8603 + C8604;
    const double C14185 = C14181 + C14182;
    const double C17651 = C17639 + C17640;
    const double C27859 = C27855 + C27856;
    const double C169 = C50094 * C148;
    const double C333 = C50094 * C314;
    const double C2304 = C2262 * C314;
    const double C7920 = C50146 * C314;
    const double C8451 = C50252 * C314;
    const double C16956 = C50146 * C314;
    const double C17487 = C16922 * C314;
    const double C24305 = C50289 * C314;
    const double C498 = C50094 * C479;
    const double C8611 = C50252 * C479;
    const double C17647 = C16922 * C479;
    const double C505 = C50094 * C482;
    const double C8293 = C50252 * C482;
    const double C17329 = C16922 * C482;
    const double C3451 =
        (4 * (2 * C49692 + C49271 * C49736 + C49693 * be) +
         C49271 *
             (3 * C49736 +
              C49271 *
                  (2 * C49728 +
                   C49271 * (C49301 + C49271 * (C49271 * C49317 + C49384 * be) +
                             C49271 * C49384 * be) +
                   C49730 * be) +
              C49735 * be) +
         (3 * C49693 + C49271 * C49735) * be) /
        C49149;
    const double C3605 =
        (2 * C49692 + C49271 * C49736 + C49693 * be +
         (2 * C49728 +
          C49271 * (C49301 + C49271 * (C49271 * C49317 + C49384 * be) +
                    C49271 * C49384 * be) +
          C49730 * be) *
             C49527) /
        C49149;
    const double C4099 =
        (C49458 *
         (3 * C49736 +
          C49271 *
              (2 * C49728 +
               C49271 * (C49301 + C49271 * (C49271 * C49317 + C49384 * be) +
                         C49271 * C49384 * be) +
               C49730 * be) +
          C49735 * be)) /
        C49149;
    const double C4500 =
        (2 * C49458 * C49736 +
         C49458 * (C49736 + (C49301 + C49271 * (C49271 * C49317 + C49384 * be) +
                             C49271 * C49384 * be) *
                                C49527)) /
        C49149;
    const double C39366 = C39359 * C19689;
    const double C48645 = C48633 + C48634;
    const double C23674 = C23662 + C23663;
    const double C7938 = C7931 + C7932;
    const double C16974 = C16967 + C16968;
    const double C5458 = C5430 * C2264;
    const double C38760 = C5430 * C49950;
    const double C44193 = C5430 * C50224;
    const double C5452 = C5426 * C49955;
    const double C44191 = C5426 * C49955;
    const double C13788 = C13759 + C13760;
    const double C13786 = C13755 + C13756;
    const double C27464 = C27455 + C27456;
    const double C27462 = C27451 + C27452;
    const double C317 =
        (C49290 + ae * C49293 + C49272 * C49304 + be * C49271 * C49380 +
         C49271 * (be * C49380 + C49271 * C49324)) /
        C49153;
    const double C884 = ((zP - zQ) * (be * C49380 + C49271 * C49324)) / C49153;
    const double C138 = (3 * (C49365 + C49272 * C49369 + C49588 * ae) +
                         C49272 * (2 * C49369 + C49272 * C49380 + C49590 * ae) +
                         (2 * C49588 + C49272 * C49590) * ae) /
                        C49149;
    const double C298 =
        (C49271 * (2 * C49369 + C49272 * C49380 + C49590 * ae)) / C49149;
    const double C304 =
        (C49365 + C49272 * C49369 + C49588 * ae + C49380 * C49466) / C49149;
    const double C463 =
        (C49458 * (2 * C49369 + C49272 * C49380 + C49590 * ae)) / C49149;
    const double C469 =
        (C49365 + C49272 * C49369 + C49588 * ae + C49380 * C49527) / C49149;
    const double C877 = (C49458 * C49271 * C49380) / C49149;
    const double C2670 = C2263 * C2645;
    const double C5255 = C50094 * C2645;
    const double C14467 = C50146 * C2645;
    const double C22353 = C50146 * C2645;
    const double C24647 = C24264 * C2645;
    const double C5982 = C5248 - C5247;
    const double C5978 = C5247 - C5248;
    const double C13776 = C8287 - C8288;
    const double C13772 = C8288 - C8287;
    const double C21822 = C17324 - C17323;
    const double C27460 = C17323 - C17324;
    const double C14472 = C14459 + C14460;
    const double C14470 = C14455 + C14456;
    const double C28130 = C28125 + C28126;
    const double C28128 = C28121 + C28122;
    const double C7293 = C5454 * C49955;
    const double C38762 = C5454 * C49950;
    const double C45964 = C5454 * C49955;
    const double C47745 = C47734 + C47735;
    const double C22762 = C22751 + C22752;
    const double C39367 = C39360 * C49950;
    const double C48646 = C48635 + C48636;
    const double C23675 = C23664 + C23665;
    const double C23266 = C50146 * C3609;
    const double C31771 = C24264 * C3609;
    const double C37101 = C2263 * C3609;
    const double C48241 = C50146 * C3609;
    const double C32269 = C24264 * C4103;
    const double C37599 = C2263 * C4103;
    const double C22759 = C50146 * C4508;
    const double C32671 = C24264 * C4508;
    const double C38001 = C2263 * C4508;
    const double C39697 = C50094 * C4508;
    const double C47742 = C50146 * C4508;
    const double C342 = C50094 * C305;
    const double C2300 = C2263 * C305;
    const double C8449 = C50146 * C305;
    const double C17485 = C50146 * C305;
    const double C24301 = C24264 * C305;
    const double C622 = C50094 * C307;
    const double C7923 = C50146 * C307;
    const double C16959 = C50146 * C307;
    const double C896 = C50094 * C878;
    const double C8609 = C50146 * C878;
    const double C17645 = C50146 * C878;
    const double C168 = C117 * C127;
    const double C343 = C117 * C288;
    const double C2301 = C2268 * C288;
    const double C8450 = C7892 * C288;
    const double C17486 = C16928 * C288;
    const double C24302 = C24269 * C288;
    const double C623 = C117 * C289;
    const double C7924 = C7892 * C289;
    const double C16960 = C16928 * C289;
    const double C508 = C117 * C453;
    const double C735 = C117 * C454;
    const double C897 = C117 * C870;
    const double C8610 = C7892 * C870;
    const double C17646 = C16928 * C870;
    const double C49751 = C49749 + C49744;
    const double C49397 = C49272 * C49396;
    const double C49402 = 3 * C49396;
    const double C49479 = be * C49396;
    const double C49478 = C49271 * C49396;
    const double C1087 = (2 * (be * C49380 + C49271 * C49324) +
                          be * (C49380 + C49396 * std::pow(C49271, 2)) +
                          C49271 * (C49324 + be * C49271 * C49396 +
                                    C49271 * (be * C49396 + C49271 * C49348))) /
                         C49153;
    const double C1201 =
        (be * C49380 + C49271 * C49324 +
         (be * C49396 + C49271 * C49348) * std::pow(zP - zQ, 2)) /
        C49153;
    const double C1548 =
        ((zP - zQ) * (C49324 + be * C49271 * C49396 +
                      C49271 * (be * C49396 + C49271 * C49348))) /
        C49153;
    const double C1082 =
        (2 * C49271 * C49380 + C49271 * (C49380 + C49396 * C49466)) / C49149;
    const double C1543 = (C49458 * (C49380 + C49396 * C49466)) / C49149;
    const double C1827 =
        (2 * C49458 * C49380 + C49458 * (C49380 + C49396 * C49527)) / C49149;
    const double C2488 = C2263 * C2463;
    const double C24477 = C24264 * C2463;
    const double C3204 = C2263 * C3191;
    const double C13549 = C50146 * C3191;
    const double C25169 = C24264 * C3191;
    const double C27253 = C50146 * C3191;
    const double C2489 = C2268 * C2459;
    const double C24478 = C24269 * C2459;
    const double C2671 = C2268 * C2641;
    const double C5256 = C117 * C2641;
    const double C14468 = C7892 * C2641;
    const double C22354 = C16928 * C2641;
    const double C24648 = C24269 * C2641;
    const double C3205 = C2268 * C3187;
    const double C13550 = C7892 * C3187;
    const double C25170 = C24269 * C3187;
    const double C27254 = C16928 * C3187;
    const double C23263 = C16928 * C3603;
    const double C31766 = C24269 * C3603;
    const double C37096 = C2268 * C3603;
    const double C48238 = C7892 * C3603;
    const double C32264 = C24269 * C4097;
    const double C37594 = C2268 * C4097;
    const double C49811 = C49271 * C49809;
    const double C22745 =
        (3 * (C49736 + C49809 * C49527) +
         C49458 *
             (2 * C49458 * C49809 +
              C49458 *
                  (C49809 + (C49317 + C49271 * (C49271 * C49341 + C49405 * be) +
                             C49271 * C49405 * be) *
                                C49527))) /
        C49149;
    const double C49353 = C49333 + C49351;
    const double C49352 = C49334 + C49350;
    const double C5447 = C50094 * C1832;
    const double C49516 = C49513 + C49514;
    const double C5985 = C50094 * C4509;
    const double C13783 = C50146 * C4509;
    const double C21829 = C50146 * C4509;
    const double C49559 = C49547 + C49557;
    const double C49422 = C49272 * C49421;
    const double C49481 = C49421 * C49466;
    const double C5410 =
        (3 * (C49380 + C49396 * C49527) +
         C49458 * (2 * C49458 * C49396 + C49458 * (C49396 + C49421 * C49527))) /
        C49149;
    const double C49517 = C49511 + C49515;
    const double C49560 = C49545 + C49558;
    const double C46848 = C13789 * C19689;
    const double C128 = 5 * (3 * C49590 + C49272 * C49595) +
                        C49272 * (4 * C49595 + C49272 * C49600);
    const double C290 = 3 * C49590 + C49272 * C49595 + C49600 * C49466;
    const double C455 = 3 * C49590 + C49272 * C49595 + C49600 * C49527;
    const double C613 = C49271 * (4 * C49595 + C49272 * C49600);
    const double C725 = C49458 * (4 * C49595 + C49272 * C49600);
    const double C871 = C49458 * C49271 * C49600;
    const double C20376 = 5 * (3 * C49693 + C49271 * C49735) +
                          C49271 * (4 * C49735 + C49271 * C49812);
    const double C20478 = 3 * C49693 + C49271 * C49735 + C49812 * C49527;
    const double C20808 = C49458 * (4 * C49735 + C49271 * C49812);
    const double C49174 = C49173 / C49149;
    const double C5457 = C5429 * C2269;
    const double C5461 = C5449 * C2269;
    const double C6393 = C6385 * C2269;
    const double C7298 = C7290 * C2269;
    const double C49246 = C49244 / C49149;
    const double C21839 = C21835 * C19689;
    const double C21842 = C21838 * C49950;
    const double C21841 = C21837 * C19689;
    const double C46855 = C46853 + C46854;
    const double C47746 = C47744 * C19689;
    const double C22763 = C22761 * C19689;
    const double C23262 = C50146 * C3605;
    const double C31765 = C24264 * C3605;
    const double C37095 = C2263 * C3605;
    const double C48237 = C50146 * C3605;
    const double C32263 = C24264 * C4099;
    const double C37593 = C2263 * C4099;
    const double C22755 = C50146 * C4500;
    const double C32665 = C24264 * C4500;
    const double C37995 = C2263 * C4500;
    const double C39695 = C50094 * C4500;
    const double C47738 = C50146 * C4500;
    const double C48647 = C48645 * C19689;
    const double C23676 = C23674 * C19689;
    const double C38766 = C38759 + C38760;
    const double C340 = C50094 * C317;
    const double C2295 = C2263 * C317;
    const double C2826 = C2262 * C317;
    const double C8115 = C50252 * C317;
    const double C8102 = C50146 * C317;
    const double C17151 = C16922 * C317;
    const double C17138 = C50146 * C317;
    const double C24296 = C24264 * C317;
    const double C24803 = C50289 * C317;
    const double C894 = C50094 * C884;
    const double C2984 = C2262 * C884;
    const double C8280 = C50146 * C884;
    const double C8823 = C50252 * C884;
    const double C17316 = C50146 * C884;
    const double C17859 = C16922 * C884;
    const double C24961 = C50289 * C884;
    const double C165 = C117 * C138;
    const double C7926 = C7891 * C138;
    const double C16962 = C16927 * C138;
    const double C332 = C117 * C298;
    const double C2305 = C2267 * C298;
    const double C7919 = C7892 * C298;
    const double C8452 = C7891 * C298;
    const double C16955 = C16928 * C298;
    const double C17488 = C16927 * C298;
    const double C341 = C117 * C304;
    const double C2294 = C2268 * C304;
    const double C2827 = C2267 * C304;
    const double C8116 = C7891 * C304;
    const double C8101 = C7892 * C304;
    const double C17152 = C16927 * C304;
    const double C17137 = C16928 * C304;
    const double C24295 = C24269 * C304;
    const double C497 = C117 * C463;
    const double C8612 = C7891 * C463;
    const double C17648 = C16927 * C463;
    const double C506 = C117 * C469;
    const double C8294 = C7891 * C469;
    const double C17330 = C16927 * C469;
    const double C895 = C117 * C877;
    const double C2985 = C2267 * C877;
    const double C8279 = C7892 * C877;
    const double C8824 = C7891 * C877;
    const double C17315 = C16928 * C877;
    const double C17860 = C16927 * C877;
    const double C6388 = C5978 * C49955;
    const double C45081 = C5978 * C49955;
    const double C13792 = C13775 + C13776;
    const double C13790 = C13771 + C13772;
    const double C21836 = C21821 + C21822;
    const double C27466 = C27459 + C27460;
    const double C38767 = C38761 + C38762;
    const double C47747 = C47745 * C49950;
    const double C22764 = C22762 * C49950;
    const double C39368 = C39366 + C39367;
    const double C48648 = C48646 * C49950;
    const double C23677 = C23675 * C49950;
    const double C3453 =
        (4 * (2 * C49700 + C49271 * C49751 + C49701 * be) +
         C49271 * (3 * C49751 +
                   C49271 * (2 * C49743 +
                             C49271 * (C49329 +
                                       C49271 * (C49271 * C49272 * C49341 +
                                                 C49409 * be) +
                                       C49271 * C49409 * be) +
                             C49745 * be) +
                   C49750 * be) +
         (3 * C49701 + C49271 * C49750) * be) /
        C49149;
    const double C3607 =
        (2 * C49700 + C49271 * C49751 + C49701 * be +
         (2 * C49743 +
          C49271 * (C49329 + C49271 * (C49271 * C49272 * C49341 + C49409 * be) +
                    C49271 * C49409 * be) +
          C49745 * be) *
             C49527) /
        C49149;
    const double C4101 =
        (C49458 * (3 * C49751 +
                   C49271 * (2 * C49743 +
                             C49271 * (C49329 +
                                       C49271 * (C49271 * C49272 * C49341 +
                                                 C49409 * be) +
                                       C49271 * C49409 * be) +
                             C49745 * be) +
                   C49750 * be)) /
        C49149;
    const double C4504 =
        (2 * C49458 * C49751 +
         C49458 * (C49751 +
                   (C49329 + C49271 * (C49271 * C49272 * C49341 + C49409 * be) +
                    C49271 * C49409 * be) *
                       C49527)) /
        C49149;
    const double C49398 = C49382 + C49397;
    const double C49482 = C49479 + C49480;
    const double C1196 = (C49271 * C49380 + C49478 * C49527) / C49149;
    const double C5964 =
        (2 * C49458 * C49478 + C49458 * (C49478 + C49271 * C49421 * C49527)) /
        C49149;
    const double C2828 = C2263 * C1087;
    const double C8117 = C50146 * C1087;
    const double C17153 = C50146 * C1087;
    const double C24805 = C24264 * C1087;
    const double C5617 = C50094 * C1201;
    const double C8295 = C50146 * C1201;
    const double C17331 = C50146 * C1201;
    const double C2986 = C2263 * C1548;
    const double C8825 = C50146 * C1548;
    const double C10827 = C50094 * C1548;
    const double C17861 = C50146 * C1548;
    const double C24963 = C24264 * C1548;
    const double C2829 = C2268 * C1082;
    const double C8118 = C7892 * C1082;
    const double C17154 = C16928 * C1082;
    const double C24806 = C24269 * C1082;
    const double C2987 = C2268 * C1543;
    const double C8826 = C7892 * C1543;
    const double C10828 = C117 * C1543;
    const double C17862 = C16928 * C1543;
    const double C24964 = C24269 * C1543;
    const double C5448 = C117 * C1827;
    const double C49813 = C49794 + C49811;
    const double C141 = (5 * (3 * C49305 + C49272 * C49325) +
                         C49272 * (4 * C49325 + C49272 * C49353)) /
                        C49149;
    const double C309 =
        (3 * C49305 + C49272 * C49325 +
         C49271 * (C49271 * C49353 + C49600 * be) + C49271 * C49600 * be) /
        C49149;
    const double C474 =
        (3 * C49305 + C49272 * C49325 + C49353 * C49527) / C49149;
    const double C614 = (C49271 * (4 * C49325 + C49272 * C49353) +
                         (4 * C49595 + C49272 * C49600) * be) /
                        C49149;
    const double C726 = (C49458 * (4 * C49325 + C49272 * C49353)) / C49149;
    const double C880 = (C49458 * (C49271 * C49353 + C49600 * be)) / C49149;
    const double C149 =
        (5 * (3 * C49324 + ae * C49325 + C49272 * C49352) +
         ae * (4 * C49325 + C49272 * C49353) +
         C49272 *
             (4 * C49352 + ae * C49353 +
              C49272 *
                  (3 * C49348 + ae * C49349 +
                   C49272 * (2 * C49344 + ae * C49345 +
                             C49272 * (C49340 + ae * C49272 * C49341 +
                                       C49272 * (ae * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283)))))) /
        C49153;
    const double C483 = (2 * C49304 + ae * C49305 + C49272 * C49324 +
                         C49352 * std::pow(zP - zQ, 2)) /
                        C49153;
    const double C484 =
        ((zP - zQ) * (3 * C49324 + ae * C49325 + C49272 * C49352)) / C49153;
    const double C485 =
        (3 * C49324 + ae * C49325 + C49272 * C49352 +
         (3 * C49348 + ae * C49349 +
          C49272 *
              (2 * C49344 + ae * C49345 +
               C49272 * (C49340 + ae * C49272 * C49341 +
                         C49272 * (ae * C49341 + C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283)))) *
             std::pow(zP - zQ, 2)) /
        C49153;
    const double C728 =
        ((zP - zQ) *
         (4 * C49352 + ae * C49353 +
          C49272 * (3 * C49348 + ae * C49349 +
                    C49272 * (2 * C49344 + ae * C49345 +
                              C49272 * (C49340 + ae * C49272 * C49341 +
                                        C49272 * (ae * C49341 +
                                                  C49272 * std::pow(C49274, 8) *
                                                      bs[8] * C49283)))))) /
        C49153;
    const double C1833 =
        (2 * C49458 * C49352 +
         C49458 * (C49352 + (2 * C49344 + ae * C49345 +
                             C49272 * (C49340 + ae * C49272 * C49341 +
                                       C49272 * (ae * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283))) *
                                std::pow(C49458, 2))) /
        C49153;
    const double C3610 =
        (2 * C49475 + be * C49476 + C49271 * C49516 +
         (2 * C49510 + be * C49512 +
          C49271 *
              (C49344 + be * C49271 * C49414 +
               C49271 * (be * C49414 +
                         C49271 * (ae * C49341 + C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283)))) *
             std::pow(C49458, 2)) /
        C49153;
    const double C4510 =
        (2 * C49458 * C49516 +
         C49458 * (C49516 + (C49344 + be * C49271 * C49414 +
                             C49271 * (be * C49414 +
                                       C49271 * (ae * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283))) *
                                std::pow(C49458, 2))) /
        C49153;
    const double C20481 =
        (3 * C49502 + be * C49503 + C49271 * C49559 +
         (3 * C49555 + be * C49556 +
          C49271 *
              (2 * C49549 + be * C49551 +
               C49271 * (C49340 + be * C49271 * C49407 +
                         C49271 * (be * C49407 + C49271 * std::pow(C49274, 8) *
                                                     bs[8] * C49283)))) *
             C49527) /
        C49153;
    const double C21077 =
        (2 * C49458 * C49559 +
         C49458 * (C49559 + (2 * C49549 + be * C49551 +
                             C49271 * (C49340 + be * C49271 * C49407 +
                                       C49271 * (be * C49407 +
                                                 C49271 * std::pow(C49274, 8) *
                                                     bs[8] * C49283))) *
                                C49527)) /
        C49153;
    const double C49423 = C49403 + C49422;
    const double C49483 = C49396 + C49481;
    const double C3456 =
        (4 * (2 * C49475 + be * C49476 + C49271 * C49516) +
         be * (3 * C49476 + C49271 * C49517) +
         C49271 *
             (3 * C49516 + be * C49517 +
              C49271 *
                  (2 * C49510 + be * C49512 +
                   C49271 * (C49344 + be * C49271 * C49414 +
                             C49271 * (be * C49414 +
                                       C49271 * (ae * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283)))))) /
        C49153;
    const double C4104 =
        (C49458 *
         (3 * C49516 + be * C49517 +
          C49271 * (2 * C49510 + be * C49512 +
                    C49271 * (C49344 + be * C49271 * C49414 +
                              C49271 * (be * C49414 +
                                        C49271 * (ae * C49341 +
                                                  C49272 * std::pow(C49274, 8) *
                                                      bs[8] * C49283)))))) /
        C49153;
    const double C3454 = (4 * (2 * C49471 + C49271 * C49476) +
                          C49271 * (3 * C49476 + C49271 * C49517)) /
                         C49149;
    const double C3608 =
        (2 * C49471 + C49271 * C49476 + C49517 * C49527) / C49149;
    const double C4102 = (C49458 * (3 * C49476 + C49271 * C49517)) / C49149;
    const double C20379 =
        (5 * (3 * C49502 + be * C49503 + C49271 * C49559) +
         be * (4 * C49503 + C49271 * C49560) +
         C49271 *
             (4 * C49559 + be * C49560 +
              C49271 *
                  (3 * C49555 + be * C49556 +
                   C49271 * (2 * C49549 + be * C49551 +
                             C49271 * (C49340 + be * C49271 * C49407 +
                                       C49271 * (be * C49407 +
                                                 C49271 * std::pow(C49274, 8) *
                                                     bs[8] * C49283)))))) /
        C49153;
    const double C20811 =
        (C49458 *
         (4 * C49559 + be * C49560 +
          C49271 * (3 * C49555 + be * C49556 +
                    C49271 * (2 * C49549 + be * C49551 +
                              C49271 * (C49340 + be * C49271 * C49407 +
                                        C49271 * (be * C49407 +
                                                  C49271 * std::pow(C49274, 8) *
                                                      bs[8] * C49283)))))) /
        C49153;
    const double C20378 = (5 * (3 * C49469 + C49271 * C49503) +
                           C49271 * (4 * C49503 + C49271 * C49560)) /
                          C49149;
    const double C20480 =
        (3 * C49469 + C49271 * C49503 + C49560 * C49527) / C49149;
    const double C20810 = (C49458 * (4 * C49503 + C49271 * C49560)) / C49149;
    const double C49175 = C49174 - C49164;
    const double C5463 = C5457 + C5458;
    const double C5464 = C5461 + C5462;
    const double C6395 = C6393 + C6394;
    const double C7300 = C7298 + C7299;
    const double C49247 = C49246 - C49231;
    const double C21844 = C21841 + C21842;
    const double C178 = C165 - C166;
    const double C621 = C332 - C333;
    const double C7936 = C7919 - C7920;
    const double C16972 = C16955 - C16956;
    const double C8446 = C8101 - C8102;
    const double C17482 = C17137 - C17138;
    const double C733 = C497 - C498;
    const double C11270 = C498 - C497;
    const double C5444 = C506 - C505;
    const double C5768 = C505 - C506;
    const double C11122 = C895 - C894;
    const double C11466 = C894 - C895;
    const double C8606 = C8279 - C8280;
    const double C14184 = C8280 - C8279;
    const double C17642 = C17315 - C17316;
    const double C27858 = C17316 - C17315;
    const double C46849 = C13790 * C49950;
    const double C21840 = C21836 * C49950;
    const double C47748 = C47746 + C47747;
    const double C22765 = C22763 + C22764;
    const double C48649 = C48647 + C48648;
    const double C23678 = C23676 + C23677;
    const double C49399 = C49398 + C49393;
    const double C2646 =
        (C49324 + be * C49478 + C49271 * C49482 +
         (C49348 + be * C49271 * C49421 +
          C49271 *
              (be * C49421 +
               C49271 * (C49340 + ae * C49272 * C49341 +
                         C49272 * (ae * C49341 + C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283)))) *
             std::pow(C49458, 2)) /
        C49153;
    const double C5965 =
        (2 * C49458 * C49482 +
         C49458 * (C49482 + (be * C49421 +
                             C49271 * (C49340 + ae * C49272 * C49341 +
                                       C49272 * (ae * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283))) *
                                C49527)) /
        C49153;
    const double C5618 = C117 * C1196;
    const double C8296 = C7892 * C1196;
    const double C17332 = C16928 * C1196;
    const double C49814 = C49813 + C49798;
    const double C509 = C50094 * C483;
    const double C736 = C50094 * C484;
    const double C49424 = C49423 + C49415;
    const double C2464 =
        (3 * (C49324 + be * C49478 + C49271 * C49482) +
         be * (2 * C49478 + C49271 * C49483) +
         C49271 *
             (2 * C49482 + be * C49483 +
              C49271 *
                  (C49348 + be * C49271 * C49421 +
                   C49271 * (be * C49421 +
                             C49271 * (C49340 + ae * C49272 * C49341 +
                                       C49272 * (ae * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283)))))) /
        C49153;
    const double C3192 =
        (C49458 *
         (2 * C49482 + be * C49483 +
          C49271 * (C49348 + be * C49271 * C49421 +
                    C49271 * (be * C49421 +
                              C49271 * (C49340 + ae * C49272 * C49341 +
                                        C49272 * (ae * C49341 +
                                                  C49272 * std::pow(C49274, 8) *
                                                      bs[8] * C49283)))))) /
        C49153;
    const double C2461 = (3 * (C49380 + C49396 * C49466) +
                          C49271 * (2 * C49478 + C49271 * C49483)) /
                         C49149;
    const double C2643 = (C49380 + C49396 * C49466 + C49483 * C49527) / C49149;
    const double C3189 = (C49458 * (2 * C49478 + C49271 * C49483)) / C49149;
    const double C44192 = C5429 * C49175;
    const double C44188 = C5449 * C49175;
    const double C45078 = C6385 * C49175;
    const double C45961 = C7290 * C49175;
    const double C118 =
        ((((0 - (C49147 * C49148) / C49149) * ae) / C49149 - (0 * be) / C49158 +
          C49150 / C49149) /
             C49154 -
         ((C49147 * C49171 + 0) * be) / C49149) /
            C49154 +
        ((C49147 * (C49171 / C49154 -
                    ((C49147 * C49175 + C50224) * be) / C49149 + C49168) +
          C50280) *
         ae) /
            C49149 +
        C49175 / C49154 - ((C49147 * C49168 + C49955) * be) / C49149;
    const double C119 =
        (C49171 / C49154 - ((C49147 * C49175 + C50224) * be) / C49149 +
         C49168) /
            C49154 +
        ((C49147 *
              (C49175 / C49154 - ((C49147 * C49168 + C49955) * be) / C49149) +
          C50281) *
         ae) /
            C49149 +
        2 * (C49168 / C49154 - (0 * be) / C49149);
    const double C120 =
        (C49175 / C49154 - ((C49147 * C49168 + C49955) * be) / C49149) /
            C49154 +
        ((C49147 * (C49168 / C49154 - (0 * be) / C49149) + C7890) * ae) /
            C49149;
    const double C7893 =
        C49171 / C49154 - ((C49147 * C49175 + C50224) * be) / C49149 + C49168;
    const double C7894 =
        C49175 / C49154 - ((C49147 * C49168 + C49955) * be) / C49149;
    const double C16929 =
        C49171 / C49154 + ((C49147 * C49175 + C50224) * ae) / C49149 + C49168;
    const double C16930 =
        C49175 / C49154 + ((C49147 * C49168 + C49955) * ae) / C49149;
    const double C5465 = C5463 + C5459;
    const double C5466 = C5464 + C5451;
    const double C6396 = C6395 + C6387;
    const double C7301 = C7300 + C7292;
    const double C19685 =
        ((((0 - (C49190 * C49228) / C49149) * ae) / C49149 - (0 * be) / C49158 +
          C49191 / C49149) /
             C49154 -
         ((C49190 * C49245 + 0) * be) / C49149) /
            C49154 +
        ((C49190 * (C49245 / C49154 -
                    ((C49190 * C49247 + C50252) * be) / C49149 + C49240) +
          C50288) *
         ae) /
            C49149 +
        C49247 / C49154 - ((C49190 * C49240 + C50146) * be) / C49149;
    const double C19686 =
        (C49245 / C49154 - ((C49190 * C49247 + C50252) * be) / C49149 +
         C49240) /
            C49154 +
        ((C49190 *
              (C49247 / C49154 - ((C49190 * C49240 + C50146) * be) / C49149) +
          C50289) *
         ae) /
            C49149 +
        2 * (C49240 / C49154 - (0 * be) / C49149);
    const double C19687 =
        (C49247 / C49154 - ((C49190 * C49240 + C50146) * be) / C49149) /
            C49154 +
        ((C49190 * (C49240 / C49154 - (0 * be) / C49149) + C24264) * ae) /
            C49149;
    const double C24267 =
        C49245 / C49154 - ((C49190 * C49247 + C50252) * be) / C49149 + C49240;
    const double C24268 =
        C49247 / C49154 - ((C49190 * C49240 + C50146) * be) / C49149;
    const double C7940 = C7935 + C7936;
    const double C16976 = C16971 + C16972;
    const double C8456 = C8445 + C8446;
    const double C17492 = C17481 + C17482;
    const double C5460 = C5444 * C49955;
    const double C44195 = C5444 * C49955;
    const double C8616 = C8605 + C8606;
    const double C14186 = C14183 + C14184;
    const double C17652 = C17641 + C17642;
    const double C27860 = C27857 + C27858;
    const double C46852 = C46848 + C46849;
    const double C21843 = C21839 + C21840;
    const double C318 =
        (2 * C49304 + ae * C49305 + C49272 * C49324 + be * C49271 * C49399 +
         C49271 * (be * C49399 + C49271 * C49352)) /
        C49153;
    const double C319 =
        (be * (3 * C49380 + C49272 * C49399 +
               (2 * C49373 + C49272 * C49391) * ae) +
         C49271 * (3 * C49324 + ae * C49325 + C49272 * C49352)) /
        C49153;
    const double C885 = ((zP - zQ) * (be * C49399 + C49271 * C49352)) / C49153;
    const double C140 = (4 * (2 * C49369 + C49272 * C49380 + C49590 * ae) +
                         C49272 * (3 * C49380 + C49272 * C49399 + C49595 * ae) +
                         (3 * C49590 + C49272 * C49595) * ae) /
                        C49149;
    const double C306 =
        (2 * C49369 + C49272 * C49380 + C49590 * ae + C49399 * C49466) / C49149;
    const double C308 =
        (C49271 * (3 * C49380 + C49272 * C49399 + C49595 * ae)) / C49149;
    const double C471 =
        (2 * C49369 + C49272 * C49380 + C49590 * ae + C49399 * C49527) / C49149;
    const double C473 =
        (C49458 * (3 * C49380 + C49272 * C49399 + C49595 * ae)) / C49149;
    const double C879 = (C49458 * C49271 * C49399) / C49149;
    const double C20377 =
        (5 * (3 * C49736 + C49271 * C49814 + C49735 * be) +
         C49271 * (4 * C49814 +
                   C49271 * (3 * C49809 +
                             C49271 * (2 * C49801 +
                                       C49271 * (C49317 +
                                                 C49271 * (C49271 * C49341 +
                                                           C49405 * be) +
                                                 C49271 * C49405 * be) +
                                       C49803 * be) +
                             C49808 * be) +
                   C49812 * be) +
         (4 * C49735 + C49271 * C49812) * be) /
        C49149;
    const double C20479 =
        (3 * C49736 + C49271 * C49814 + C49735 * be +
         (3 * C49809 +
          C49271 *
              (2 * C49801 +
               C49271 * (C49317 + C49271 * (C49271 * C49341 + C49405 * be) +
                         C49271 * C49405 * be) +
               C49803 * be) +
          C49808 * be) *
             C49527) /
        C49149;
    const double C20809 =
        (C49458 *
         (4 * C49814 +
          C49271 *
              (3 * C49809 +
               C49271 * (2 * C49801 +
                         C49271 * (C49317 +
                                   C49271 * (C49271 * C49341 + C49405 * be) +
                                   C49271 * C49405 * be) +
                         C49803 * be) +
               C49808 * be) +
          C49812 * be)) /
        C49149;
    const double C21075 =
        (2 * C49458 * C49814 +
         C49458 *
             (C49814 +
              (2 * C49801 +
               C49271 * (C49317 + C49271 * (C49271 * C49341 + C49405 * be) +
                         C49271 * C49405 * be) +
               C49803 * be) *
                  C49527)) /
        C49149;
    const double C49425 = C49272 * C49424;
    const double C1088 =
        (2 * (be * C49399 + C49271 * C49352) +
         be * (C49399 + C49424 * std::pow(C49271, 2)) +
         C49271 *
             (C49352 + be * C49271 * C49424 +
              C49271 *
                  (be * C49424 +
                   C49271 * (2 * C49344 + ae * C49345 +
                             C49272 * (C49340 + ae * C49272 * C49341 +
                                       C49272 * (ae * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283)))))) /
        C49153;
    const double C1202 =
        (be * C49399 + C49271 * C49352 +
         (be * C49424 +
          C49271 *
              (2 * C49344 + ae * C49345 +
               C49272 * (C49340 + ae * C49272 * C49341 +
                         C49272 * (ae * C49341 + C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283)))) *
             std::pow(zP - zQ, 2)) /
        C49153;
    const double C1549 =
        ((zP - zQ) *
         (C49352 + be * C49271 * C49424 +
          C49271 * (be * C49424 +
                    C49271 * (2 * C49344 + ae * C49345 +
                              C49272 * (C49340 + ae * C49272 * C49341 +
                                        C49272 * (ae * C49341 +
                                                  C49272 * std::pow(C49274, 8) *
                                                      bs[8] * C49283)))))) /
        C49153;
    const double C1084 =
        (2 * C49271 * C49399 + C49271 * (C49399 + C49424 * C49466)) / C49149;
    const double C1198 = (C49271 * C49399 + C49271 * C49424 * C49527) / C49149;
    const double C1545 = (C49458 * (C49399 + C49424 * C49466)) / C49149;
    const double C1829 =
        (2 * C49458 * C49399 + C49458 * (C49399 + C49424 * C49527)) / C49149;
    const double C44197 = C44192 + C44193;
    const double C44196 = C44188 + C44189;
    const double C45082 = C45078 + C45079;
    const double C45965 = C45961 + C45962;
    const double C5468 = C5466 + C5452;
    const double C6397 = C6396 + C6388;
    const double C7302 = C7301 + C7293;
    const double C24304 = C24267 * C136;
    const double C24298 = C24267 * C125;
    const double C24291 = C24267 * C134;
    const double C24285 = C24267 * C124;
    const double C24280 = C24267 * C132;
    const double C24274 = C24267 * C123;
    const double C24474 = C24267 * C302;
    const double C24468 = C24267 * C286;
    const double C24461 = C24267 * C294;
    const double C24455 = C24267 * C282;
    const double C24644 = C24267 * C467;
    const double C24638 = C24267 * C451;
    const double C24631 = C24267 * C459;
    const double C24625 = C24267 * C447;
    const double C24802 = C24267 * C296;
    const double C24796 = C24267 * C283;
    const double C24960 = C24267 * C461;
    const double C24954 = C24267 * C448;
    const double C25166 = C24267 * C875;
    const double C25160 = C24267 * C868;
    const double C30867 = C24267 * C465;
    const double C30861 = C24267 * C450;
    const double C30856 = C24267 * C457;
    const double C30850 = C24267 * C446;
    const double C31365 = C24267 * C873;
    const double C31359 = C24267 * C867;
    const double C31768 = C24267 * C1192;
    const double C31762 = C24267 * C1187;
    const double C32266 = C24267 * C1539;
    const double C32260 = C24267 * C1534;
    const double C32668 = C24267 * C1823;
    const double C32662 = C24267 * C1818;
    const double C24306 = C24268 * C298;
    const double C24300 = C24268 * C284;
    const double C24293 = C24268 * C296;
    const double C24287 = C24268 * C283;
    const double C24282 = C24268 * C294;
    const double C24276 = C24268 * C282;
    const double C24476 = C24268 * C1080;
    const double C24470 = C24268 * C1074;
    const double C24463 = C24268 * C302;
    const double C24457 = C24268 * C286;
    const double C24646 = C24268 * C1194;
    const double C24640 = C24268 * C1188;
    const double C24633 = C24268 * C875;
    const double C24627 = C24268 * C868;
    const double C24804 = C24268 * C304;
    const double C24798 = C24268 * C287;
    const double C24962 = C24268 * C877;
    const double C24956 = C24268 * C869;
    const double C25168 = C24268 * C1541;
    const double C25162 = C24268 * C1535;
    const double C30869 = C24268 * C1192;
    const double C30863 = C24268 * C1187;
    const double C30858 = C24268 * C873;
    const double C30852 = C24268 * C867;
    const double C31367 = C24268 * C1539;
    const double C31361 = C24268 * C1534;
    const double C31770 = C24268 * C2639;
    const double C31764 = C24268 * C2635;
    const double C32268 = C24268 * C3185;
    const double C32262 = C24268 * C3181;
    const double C32670 = C24268 * C4501;
    const double C32664 = C24268 * C4495;
    const double C5467 = C5465 + C5460;
    const double C344 = C50094 * C318;
    const double C2306 = C2263 * C318;
    const double C8453 = C50146 * C318;
    const double C17489 = C50146 * C318;
    const double C24307 = C24264 * C318;
    const double C624 = C50094 * C319;
    const double C7927 = C50146 * C319;
    const double C16963 = C50146 * C319;
    const double C898 = C50094 * C885;
    const double C8613 = C50146 * C885;
    const double C17649 = C50146 * C885;
    const double C170 = C117 * C140;
    const double C345 = C117 * C306;
    const double C2307 = C2268 * C306;
    const double C8454 = C7892 * C306;
    const double C17490 = C16928 * C306;
    const double C24308 = C24269 * C306;
    const double C625 = C117 * C308;
    const double C7928 = C7892 * C308;
    const double C16964 = C16928 * C308;
    const double C510 = C117 * C471;
    const double C737 = C117 * C473;
    const double C899 = C117 * C879;
    const double C8614 = C7892 * C879;
    const double C17650 = C16928 * C879;
    const double C49426 = C49402 + C49425;
    const double C44199 = C44197 + C44194;
    const double C44198 = C44196 + C44190;
    const double C45083 = C45082 + C45080;
    const double C45966 = C45965 + C45963;
    const double C49427 = C49426 + C49420;
    const double C44201 = C44199 + C44195;
    const double C44200 = C44198 + C44191;
    const double C45084 = C45083 + C45081;
    const double C45967 = C45966 + C45964;
    const double C320 =
        (3 * C49324 + ae * C49325 + C49272 * C49352 + be * C49271 * C49427 +
         C49271 *
             (be * C49427 +
              C49271 *
                  (3 * C49348 + ae * C49349 +
                   C49272 * (2 * C49344 + ae * C49345 +
                             C49272 * (C49340 + ae * C49272 * C49341 +
                                       C49272 * (ae * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283)))))) /
        C49153;
    const double C616 =
        (be * (4 * C49399 + C49272 * C49427 +
               (3 * C49391 + C49272 * C49418) * ae) +
         C49271 *
             (4 * C49352 + ae * C49353 +
              C49272 *
                  (3 * C49348 + ae * C49349 +
                   C49272 * (2 * C49344 + ae * C49345 +
                             C49272 * (C49340 + ae * C49272 * C49341 +
                                       C49272 * (ae * C49341 +
                                                 C49272 * std::pow(C49274, 8) *
                                                     bs[8] * C49283)))))) /
        C49153;
    const double C886 =
        ((zP - zQ) *
         (be * C49427 +
          C49271 * (3 * C49348 + ae * C49349 +
                    C49272 * (2 * C49344 + ae * C49345 +
                              C49272 * (C49340 + ae * C49272 * C49341 +
                                        C49272 * (ae * C49341 +
                                                  C49272 * std::pow(C49274, 8) *
                                                      bs[8] * C49283)))))) /
        C49153;
    const double C142 = (5 * (3 * C49380 + C49272 * C49399 + C49595 * ae) +
                         C49272 * (4 * C49399 + C49272 * C49427 + C49600 * ae) +
                         (4 * C49595 + C49272 * C49600) * ae) /
                        C49149;
    const double C310 =
        (3 * C49380 + C49272 * C49399 + C49595 * ae + C49427 * C49466) / C49149;
    const double C475 =
        (3 * C49380 + C49272 * C49399 + C49595 * ae + C49427 * C49527) / C49149;
    const double C615 =
        (C49271 * (4 * C49399 + C49272 * C49427 + C49600 * ae)) / C49149;
    const double C727 =
        (C49458 * (4 * C49399 + C49272 * C49427 + C49600 * ae)) / C49149;
    const double C881 = (C49458 * C49271 * C49427) / C49149;
    d2ee[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                C7893 +
            (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                C50280 +
            (C7897 - C7898 + C7899 - C7900) * C7894 +
            (C7901 - C7902 + C7903 - C7904) * C50281 + C7937 * C7895 +
            C7938 * C7890) *
               C50110 * C50013 * C50239 +
           ((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                C7893 +
            (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                C50280 +
            (C8087 - C8088 + C8089 - C8090) * C7894 +
            (C8091 - C8092 + C8093 - C8094) * C50281 + C8455 * C7895 +
            C8456 * C7890) *
               C50110 * C50013 * C50049) *
              C50282 +
          (((C7898 - C7897 + C7900 - C7899) * C7893 +
            (C7902 - C7901 + C7904 - C7903) * C50280 +
            (C7906 - C7905 + C7908 - C7907) * C7894 +
            (C7910 - C7909 + C7912 - C7911) * C50281 + C7939 * C7895 +
            C7940 * C7890) *
               C50110 * C50013 * C50239 +
           ((C8088 - C8087 + C8090 - C8089) * C7893 +
            (C8092 - C8091 + C8094 - C8093) * C50280 +
            (C8096 - C8095 + C8098 - C8097) * C7894 +
            (C8100 - C8099 + C8102 - C8101) * C50281 +
            (C8447 - C8448 + C8449 - C8450) * C7895 +
            (C8451 - C8452 + C8453 - C8454) * C7890) *
               C50110 * C50013 * C50049) *
              C50283 +
          ((C7937 * C7893 + C7938 * C50280 +
            (C7914 - C7913 + C7916 - C7915) * C7894 +
            (C7918 - C7917 + C7920 - C7919) * C50281 +
            (C7921 - C7922 + C7923 - C7924) * C7895 +
            (C7925 - C7926 + C7927 - C7928) * C7890) *
               C50110 * C50013 * C50239 +
           (C8455 * C7893 + C8456 * C50280 +
            (C8448 - C8447 + C8450 - C8449) * C7894 +
            (C8452 - C8451 + C8454 - C8453) * C50281 +
            (C7891 * C289 - C50252 * C307 + C7892 * C290 - C50146 * C309) *
                C7895 +
            (C7891 * C308 - C50252 * C319 + C7892 * C310 - C50146 * C320) *
                C7890) *
               C50110 * C50013 * C50049) *
              C612)) /
        (p * q * std::sqrt(p + q));
    d2ee[1] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C7893 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C50280 +
             (C7897 - C7898 + C7899 - C7900) * C7894 +
             (C7901 - C7902 + C7903 - C7904) * C50281 + C7937 * C7895 +
             C7938 * C7890) *
                C50110 * C50240 +
            ((C7891 * C446 - C50252 * C456 + C7892 * C867 - C50146 * C872) *
                 C7893 +
             (C7891 * C457 - C50252 * C476 + C7892 * C873 - C50146 * C882) *
                 C50280 +
             (C8265 - C8266 + C8267 - C8268) * C7894 +
             (C8269 - C8270 + C8271 - C8272) * C50281 + C8615 * C7895 +
             C8616 * C7890) *
                C50110 * C50077) *
               C50239 +
           (((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                 C7893 +
             (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                 C50280 +
             (C8087 - C8088 + C8089 - C8090) * C7894 +
             (C8091 - C8092 + C8093 - C8094) * C50281 + C8455 * C7895 +
             C8456 * C7890) *
                C50110 * C50240 +
            ((C50252 * C872 - C7891 * C867 + C50146 * C1538 - C7892 * C1534) *
                 C7893 +
             (C50252 * C882 - C7891 * C873 + C50146 * C1546 - C7892 * C1539) *
                 C50280 +
             (C8811 - C8812 + C8813 - C8814) * C7894 +
             (C8815 - C8816 + C8817 - C8818) * C50281 +
             (C8819 - C8820 + C8821 - C8822) * C7895 +
             (C8823 - C8824 + C8825 - C8826) * C7890) *
                C50110 * C50077) *
               C50049) *
              C279 +
          ((((C7898 - C7897 + C7900 - C7899) * C7893 +
             (C7902 - C7901 + C7904 - C7903) * C50280 +
             (C7906 - C7905 + C7908 - C7907) * C7894 +
             (C7910 - C7909 + C7912 - C7911) * C50281 + C7939 * C7895 +
             C7940 * C7890) *
                C50110 * C50240 +
            ((C8266 - C8265 + C8268 - C8267) * C7893 +
             (C8270 - C8269 + C8272 - C8271) * C50280 +
             (C8274 - C8273 + C8276 - C8275) * C7894 +
             (C8278 - C8277 + C8280 - C8279) * C50281 +
             (C8607 - C8608 + C8609 - C8610) * C7895 +
             (C8611 - C8612 + C8613 - C8614) * C7890) *
                C50110 * C50077) *
               C50239 +
           (((C8088 - C8087 + C8090 - C8089) * C7893 +
             (C8092 - C8091 + C8094 - C8093) * C50280 +
             (C8096 - C8095 + C8098 - C8097) * C7894 +
             (C8100 - C8099 + C8102 - C8101) * C50281 +
             (C8447 - C8448 + C8449 - C8450) * C7895 +
             (C8451 - C8452 + C8453 - C8454) * C7890) *
                C50110 * C50240 +
            ((C8812 - C8811 + C8814 - C8813) * C7893 +
             (C8816 - C8815 + C8818 - C8817) * C50280 +
             (C8820 - C8819 + C8822 - C8821) * C7894 +
             (C8824 - C8823 + C8826 - C8825) * C50281 +
             (C7891 * C870 - C50252 * C878 + C7892 * C1537 - C50146 * C1544) *
                 C7895 +
             (C7891 * C879 - C50252 * C885 + C7892 * C1545 - C50146 * C1549) *
                 C7890) *
                C50110 * C50077) *
               C50049) *
              C49984)) /
        (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                C7893 +
            (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                C50280 +
            (C7897 - C7898 + C7899 - C7900) * C7894 +
            (C7901 - C7902 + C7903 - C7904) * C50281 + C7937 * C7895 +
            C7938 * C7890) *
               C50110 * C50013 * C276 +
           ((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                C7893 +
            (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                C50280 +
            (C8087 - C8088 + C8089 - C8090) * C7894 +
            (C8091 - C8092 + C8093 - C8094) * C50281 +
            (C8095 - C8096 + C8097 - C8098) * C7895 +
            (C8099 - C8100 + C8101 - C8102) * C7890) *
               C50110 * C50013 * C277 +
           ((C50252 * C299 - C7891 * C285 + C50146 * C1077 - C7892 * C1073) *
                C7893 +
            (C50252 * C315 - C7891 * C300 + C50146 * C1085 - C7892 * C1078) *
                C50280 +
            (C8103 - C8104 + C8105 - C8106) * C7894 +
            (C8107 - C8108 + C8109 - C8110) * C50281 +
            (C8111 - C8112 + C8113 - C8114) * C7895 +
            (C8115 - C8116 + C8117 - C8118) * C7890) *
               C50110 * C50013 * C278) *
              C279 +
          (((C7898 - C7897 + C7900 - C7899) * C7893 +
            (C7902 - C7901 + C7904 - C7903) * C50280 +
            (C7906 - C7905 + C7908 - C7907) * C7894 +
            (C7910 - C7909 + C7912 - C7911) * C50281 + C7939 * C7895 +
            C7940 * C7890) *
               C50110 * C50013 * C276 +
           ((C8088 - C8087 + C8090 - C8089) * C7893 +
            (C8092 - C8091 + C8094 - C8093) * C50280 +
            (C8096 - C8095 + C8098 - C8097) * C7894 +
            (C8100 - C8099 + C8102 - C8101) * C50281 +
            (C50252 * C297 - C7891 * C284 + C50146 * C305 - C7892 * C288) *
                C7895 +
            (C50252 * C314 - C7891 * C298 + C50146 * C318 - C7892 * C306) *
                C7890) *
               C50110 * C50013 * C277 +
           ((C8104 - C8103 + C8106 - C8105) * C7893 +
            (C8108 - C8107 + C8110 - C8109) * C50280 +
            (C8112 - C8111 + C8114 - C8113) * C7894 +
            (C8116 - C8115 + C8118 - C8117) * C50281 +
            (C7891 * C288 - C50252 * C305 + C7892 * C1076 - C50146 * C1083) *
                C7895 +
            (C7891 * C306 - C50252 * C318 + C7892 * C1084 - C50146 * C1088) *
                C7890) *
               C50110 * C50013 * C278) *
              C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
               C7893 +
           (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
               C50280 +
           (C7897 - C7898 + C7899 - C7900) * C7894 +
           (C7901 - C7902 + C7903 - C7904) * C50281 + C7937 * C7895 +
           C7938 * C7890) *
              C50110 * C50013 * C49997 * C113 +
          ((C7898 - C7897 + C7900 - C7899) * C7893 +
           (C7902 - C7901 + C7904 - C7903) * C50280 +
           (C7906 - C7905 + C7908 - C7907) * C7894 +
           (C7910 - C7909 + C7912 - C7911) * C50281 + C7939 * C7895 +
           C7940 * C7890) *
              C50110 * C50013 * C49997 * C114 +
          (C7937 * C7893 + C7938 * C50280 +
           (C7914 - C7913 + C7916 - C7915) * C7894 +
           (C7918 - C7917 + C7920 - C7919) * C50281 +
           (C7921 - C7922 + C7923 - C7924) * C7895 +
           (C7925 - C7926 + C7927 - C7928) * C7890) *
              C50110 * C50013 * C49997 * C115 +
          (C7939 * C7893 + C7940 * C50280 +
           (C7922 - C7921 + C7924 - C7923) * C7894 +
           (C7926 - C7925 + C7928 - C7927) * C50281 +
           (C7891 * C127 - C50252 * C139 + C7892 * C613 - C50146 * C614) *
               C7895 +
           (C7891 * C140 - C50252 * C148 + C7892 * C615 - C50146 * C616) *
               C7890) *
              C50110 * C50013 * C49997 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                C7893 +
            (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                C50280 +
            (C7897 - C7898 + C7899 - C7900) * C7894 +
            (C7901 - C7902 + C7903 - C7904) * C50281 + C7937 * C7895 +
            C7938 * C7890) *
               C50110 * C443 +
           ((C7891 * C446 - C50252 * C456 + C7892 * C867 - C50146 * C872) *
                C7893 +
            (C7891 * C457 - C50252 * C476 + C7892 * C873 - C50146 * C882) *
                C50280 +
            (C8265 - C8266 + C8267 - C8268) * C7894 +
            (C8269 - C8270 + C8271 - C8272) * C50281 +
            (C8273 - C8274 + C8275 - C8276) * C7895 +
            (C8277 - C8278 + C8279 - C8280) * C7890) *
               C50110 * C444 +
           ((C50252 * C464 - C7891 * C450 + C50146 * C1191 - C7892 * C1187) *
                C7893 +
            (C50252 * C480 - C7891 * C465 + C50146 * C1199 - C7892 * C1192) *
                C50280 +
            (C8281 - C8282 + C8283 - C8284) * C7894 +
            (C8285 - C8286 + C8287 - C8288) * C50281 +
            (C8289 - C8290 + C8291 - C8292) * C7895 +
            (C8293 - C8294 + C8295 - C8296) * C7890) *
               C50110 * C445) *
              C49997 * C279 +
          (((C7898 - C7897 + C7900 - C7899) * C7893 +
            (C7902 - C7901 + C7904 - C7903) * C50280 +
            (C7906 - C7905 + C7908 - C7907) * C7894 +
            (C7910 - C7909 + C7912 - C7911) * C50281 + C7939 * C7895 +
            C7940 * C7890) *
               C50110 * C443 +
           ((C8266 - C8265 + C8268 - C8267) * C7893 +
            (C8270 - C8269 + C8272 - C8271) * C50280 +
            (C8274 - C8273 + C8276 - C8275) * C7894 +
            (C8278 - C8277 + C8280 - C8279) * C50281 +
            (C50252 * C462 - C7891 * C449 + C50146 * C878 - C7892 * C870) *
                C7895 +
            (C50252 * C479 - C7891 * C463 + C50146 * C885 - C7892 * C879) *
                C7890) *
               C50110 * C444 +
           ((C8282 - C8281 + C8284 - C8283) * C7893 +
            (C8286 - C8285 + C8288 - C8287) * C50280 +
            (C8290 - C8289 + C8292 - C8291) * C7894 +
            (C8294 - C8293 + C8296 - C8295) * C50281 +
            (C7891 * C453 - C50252 * C470 + C7892 * C1190 - C50146 * C1197) *
                C7895 +
            (C7891 * C471 - C50252 * C483 + C7892 * C1198 - C50146 * C1202) *
                C7890) *
               C50110 * C445) *
              C49997 * C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[3] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                C7893 +
            (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                C50280 +
            (C7897 - C7898 + C7899 - C7900) * C7894 +
            (C7901 - C7902 + C7903 - C7904) * C50281 + C7937 * C7895 +
            C7938 * C7890) *
               C50110 * C50240 +
           ((C7891 * C446 - C50252 * C456 + C7892 * C867 - C50146 * C872) *
                C7893 +
            (C7891 * C457 - C50252 * C476 + C7892 * C873 - C50146 * C882) *
                C50280 +
            (C8265 - C8266 + C8267 - C8268) * C7894 +
            (C8269 - C8270 + C8271 - C8272) * C50281 + C8615 * C7895 +
            C8616 * C7890) *
               C50110 * C50077) *
              C49997 * C50282 +
          (((C7898 - C7897 + C7900 - C7899) * C7893 +
            (C7902 - C7901 + C7904 - C7903) * C50280 +
            (C7906 - C7905 + C7908 - C7907) * C7894 +
            (C7910 - C7909 + C7912 - C7911) * C50281 + C7939 * C7895 +
            C7940 * C7890) *
               C50110 * C50240 +
           ((C8266 - C8265 + C8268 - C8267) * C7893 +
            (C8270 - C8269 + C8272 - C8271) * C50280 +
            (C8274 - C8273 + C8276 - C8275) * C7894 +
            (C8278 - C8277 + C8280 - C8279) * C50281 +
            (C8607 - C8608 + C8609 - C8610) * C7895 +
            (C8611 - C8612 + C8613 - C8614) * C7890) *
               C50110 * C50077) *
              C49997 * C50283 +
          ((C7937 * C7893 + C7938 * C50280 +
            (C7914 - C7913 + C7916 - C7915) * C7894 +
            (C7918 - C7917 + C7920 - C7919) * C50281 +
            (C7921 - C7922 + C7923 - C7924) * C7895 +
            (C7925 - C7926 + C7927 - C7928) * C7890) *
               C50110 * C50240 +
           (C8615 * C7893 + C8616 * C50280 +
            (C8608 - C8607 + C8610 - C8609) * C7894 +
            (C8612 - C8611 + C8614 - C8613) * C50281 +
            (C7891 * C454 - C50252 * C472 + C7892 * C871 - C50146 * C880) *
                C7895 +
            (C7891 * C473 - C50252 * C484 + C7892 * C881 - C50146 * C886) *
                C7890) *
               C50110 * C50077) *
              C49997 * C612)) /
        (p * q * std::sqrt(p + q));
    d2ee[4] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
               C7893 +
           (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
               C50280 +
           (C7897 - C7898 + C7899 - C7900) * C7894 +
           (C7901 - C7902 + C7903 - C7904) * C50281 + C7937 * C7895 +
           C7938 * C7890) *
              C50110 * C50013 * C49997 * C113 +
          ((C7898 - C7897 + C7900 - C7899) * C7893 +
           (C7902 - C7901 + C7904 - C7903) * C50280 +
           (C7906 - C7905 + C7908 - C7907) * C7894 +
           (C7910 - C7909 + C7912 - C7911) * C50281 + C7939 * C7895 +
           C7940 * C7890) *
              C50110 * C50013 * C49997 * C114 +
          (C7937 * C7893 + C7938 * C50280 +
           (C7914 - C7913 + C7916 - C7915) * C7894 +
           (C7918 - C7917 + C7920 - C7919) * C50281 +
           (C7921 - C7922 + C7923 - C7924) * C7895 +
           (C7925 - C7926 + C7927 - C7928) * C7890) *
              C50110 * C50013 * C49997 * C115 +
          (C7939 * C7893 + C7940 * C50280 +
           (C7922 - C7921 + C7924 - C7923) * C7894 +
           (C7926 - C7925 + C7928 - C7927) * C50281 +
           (C7891 * C127 - C50252 * C139 + C7892 * C613 - C50146 * C614) *
               C7895 +
           (C7891 * C140 - C50252 * C148 + C7892 * C615 - C50146 * C616) *
               C7890) *
              C50110 * C50013 * C49997 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                C7893 +
            (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                C50280 +
            (C7897 - C7898 + C7899 - C7900) * C7894 +
            (C7901 - C7902 + C7903 - C7904) * C50281 + C7937 * C7895 +
            C7938 * C7890) *
               C50110 * C50013 * C276 +
           ((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                C7893 +
            (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                C50280 +
            (C8087 - C8088 + C8089 - C8090) * C7894 +
            (C8091 - C8092 + C8093 - C8094) * C50281 +
            (C8095 - C8096 + C8097 - C8098) * C7895 +
            (C8099 - C8100 + C8101 - C8102) * C7890) *
               C50110 * C50013 * C277 +
           ((C50252 * C299 - C7891 * C285 + C50146 * C1077 - C7892 * C1073) *
                C7893 +
            (C50252 * C315 - C7891 * C300 + C50146 * C1085 - C7892 * C1078) *
                C50280 +
            (C8103 - C8104 + C8105 - C8106) * C7894 +
            (C8107 - C8108 + C8109 - C8110) * C50281 +
            (C8111 - C8112 + C8113 - C8114) * C7895 +
            (C8115 - C8116 + C8117 - C8118) * C7890) *
               C50110 * C50013 * C278) *
              C279 +
          (((C7898 - C7897 + C7900 - C7899) * C7893 +
            (C7902 - C7901 + C7904 - C7903) * C50280 +
            (C7906 - C7905 + C7908 - C7907) * C7894 +
            (C7910 - C7909 + C7912 - C7911) * C50281 + C7939 * C7895 +
            C7940 * C7890) *
               C50110 * C50013 * C276 +
           ((C8088 - C8087 + C8090 - C8089) * C7893 +
            (C8092 - C8091 + C8094 - C8093) * C50280 +
            (C8096 - C8095 + C8098 - C8097) * C7894 +
            (C8100 - C8099 + C8102 - C8101) * C50281 +
            (C50252 * C297 - C7891 * C284 + C50146 * C305 - C7892 * C288) *
                C7895 +
            (C50252 * C314 - C7891 * C298 + C50146 * C318 - C7892 * C306) *
                C7890) *
               C50110 * C50013 * C277 +
           ((C8104 - C8103 + C8106 - C8105) * C7893 +
            (C8108 - C8107 + C8110 - C8109) * C50280 +
            (C8112 - C8111 + C8114 - C8113) * C7894 +
            (C8116 - C8115 + C8118 - C8117) * C50281 +
            (C7891 * C288 - C50252 * C305 + C7892 * C1076 - C50146 * C1083) *
                C7895 +
            (C7891 * C306 - C50252 * C318 + C7892 * C1084 - C50146 * C1088) *
                C7890) *
               C50110 * C50013 * C278) *
              C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                C7893 +
            (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                C50280 +
            (C7897 - C7898 + C7899 - C7900) * C7894 +
            (C7901 - C7902 + C7903 - C7904) * C50281 + C7937 * C7895 +
            C7938 * C7890) *
               C50110 * C50013 * C50284 +
           ((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                C7893 +
            (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                C50280 +
            (C8087 - C8088 + C8089 - C8090) * C7894 +
            (C8091 - C8092 + C8093 - C8094) * C50281 + C8455 * C7895 +
            C8456 * C7890) *
               C50110 * C50013 * C50285 +
           ((C50252 * C299 - C7891 * C285 + C50146 * C1077 - C7892 * C1073) *
                C7893 +
            (C50252 * C315 - C7891 * C300 + C50146 * C1085 - C7892 * C1078) *
                C50280 +
            (C8103 - C8104 + C8105 - C8106) * C7894 +
            (C8107 - C8108 + C8109 - C8110) * C50281 +
            (C8111 - C8112 + C8113 - C8114) * C7895 +
            (C8115 - C8116 + C8117 - C8118) * C7890) *
               C50110 * C50013 * C1303) *
              C50231 +
          (((C7898 - C7897 + C7900 - C7899) * C7893 +
            (C7902 - C7901 + C7904 - C7903) * C50280 +
            (C7906 - C7905 + C7908 - C7907) * C7894 +
            (C7910 - C7909 + C7912 - C7911) * C50281 + C7939 * C7895 +
            C7940 * C7890) *
               C50110 * C50013 * C50284 +
           ((C8088 - C8087 + C8090 - C8089) * C7893 +
            (C8092 - C8091 + C8094 - C8093) * C50280 +
            (C8096 - C8095 + C8098 - C8097) * C7894 +
            (C8100 - C8099 + C8102 - C8101) * C50281 +
            (C8447 - C8448 + C8449 - C8450) * C7895 +
            (C8451 - C8452 + C8453 - C8454) * C7890) *
               C50110 * C50013 * C50285 +
           ((C8104 - C8103 + C8106 - C8105) * C7893 +
            (C8108 - C8107 + C8110 - C8109) * C50280 +
            (C8112 - C8111 + C8114 - C8113) * C7894 +
            (C8116 - C8115 + C8118 - C8117) * C50281 +
            (C7891 * C288 - C50252 * C305 + C7892 * C1076 - C50146 * C1083) *
                C7895 +
            (C7891 * C306 - C50252 * C318 + C7892 * C1084 - C50146 * C1088) *
                C7890) *
               C50110 * C50013 * C1303) *
              C49984)) /
        (p * q * std::sqrt(p + q));
    d2ee[6] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                C7893 +
            (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                C50280 +
            (C7897 - C7898 + C7899 - C7900) * C7894 +
            (C7901 - C7902 + C7903 - C7904) * C50281 + C7937 * C7895 +
            C7938 * C7890) *
               C50110 * C50240 +
           ((C7891 * C446 - C50252 * C456 + C7892 * C867 - C50146 * C872) *
                C7893 +
            (C7891 * C457 - C50252 * C476 + C7892 * C873 - C50146 * C882) *
                C50280 +
            (C8265 - C8266 + C8267 - C8268) * C7894 +
            (C8269 - C8270 + C8271 - C8272) * C50281 + C8615 * C7895 +
            C8616 * C7890) *
               C50110 * C50077) *
              C50284 +
          (((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                C7893 +
            (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                C50280 +
            (C8087 - C8088 + C8089 - C8090) * C7894 +
            (C8091 - C8092 + C8093 - C8094) * C50281 + C8455 * C7895 +
            C8456 * C7890) *
               C50110 * C50240 +
           ((C50252 * C872 - C7891 * C867 + C50146 * C1538 - C7892 * C1534) *
                C7893 +
            (C50252 * C882 - C7891 * C873 + C50146 * C1546 - C7892 * C1539) *
                C50280 +
            (C8811 - C8812 + C8813 - C8814) * C7894 +
            (C8815 - C8816 + C8817 - C8818) * C50281 +
            (C8819 - C8820 + C8821 - C8822) * C7895 +
            (C8823 - C8824 + C8825 - C8826) * C7890) *
               C50110 * C50077) *
              C50285 +
          (((C50252 * C299 - C7891 * C285 + C50146 * C1077 - C7892 * C1073) *
                C7893 +
            (C50252 * C315 - C7891 * C300 + C50146 * C1085 - C7892 * C1078) *
                C50280 +
            (C8103 - C8104 + C8105 - C8106) * C7894 +
            (C8107 - C8108 + C8109 - C8110) * C50281 +
            (C8111 - C8112 + C8113 - C8114) * C7895 +
            (C8115 - C8116 + C8117 - C8118) * C7890) *
               C50110 * C50240 +
           ((C7891 * C1534 - C50252 * C1538 + C7892 * C3181 - C50146 * C3184) *
                C7893 +
            (C7891 * C1539 - C50252 * C1546 + C7892 * C3185 - C50146 * C3190) *
                C50280 +
            (C7891 * C1535 - C50252 * C1540 + C7892 * C3182 - C50146 * C3186) *
                C7894 +
            (C7891 * C1541 - C50252 * C1547 + C7892 * C3187 - C50146 * C3191) *
                C50281 +
            (C7891 * C1536 - C50252 * C1542 + C7892 * C3183 - C50146 * C3188) *
                C7895 +
            (C7891 * C1543 - C50252 * C1548 + C7892 * C3189 - C50146 * C3192) *
                C7890) *
               C50110 * C50077) *
              C1303) *
         C49978) /
        (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
               C7893 +
           (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
               C50280 +
           (C7897 - C7898 + C7899 - C7900) * C7894 +
           (C7901 - C7902 + C7903 - C7904) * C50281 + C7937 * C7895 +
           C7938 * C7890) *
              C50110 * C50013 * C1068 +
          ((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
               C7893 +
           (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
               C50280 +
           (C8087 - C8088 + C8089 - C8090) * C7894 +
           (C8091 - C8092 + C8093 - C8094) * C50281 + C8455 * C7895 +
           C8456 * C7890) *
              C50110 * C50013 * C1069 +
          ((C50252 * C299 - C7891 * C285 + C50146 * C1077 - C7892 * C1073) *
               C7893 +
           (C50252 * C315 - C7891 * C300 + C50146 * C1085 - C7892 * C1078) *
               C50280 +
           (C8103 - C8104 + C8105 - C8106) * C7894 +
           (C8107 - C8108 + C8109 - C8110) * C50281 +
           (C8111 - C8112 + C8113 - C8114) * C7895 +
           (C8115 - C8116 + C8117 - C8118) * C7890) *
              C50110 * C50013 * C1070 +
          ((C7891 * C1073 - C50252 * C1077 + C7892 * C2453 - C50146 * C2456) *
               C7893 +
           (C7891 * C1078 - C50252 * C1085 + C7892 * C2457 - C50146 * C2462) *
               C50280 +
           (C7891 * C1074 - C50252 * C1079 + C7892 * C2454 - C50146 * C2458) *
               C7894 +
           (C7891 * C1080 - C50252 * C1086 + C7892 * C2459 - C50146 * C2463) *
               C50281 +
           (C7891 * C1075 - C50252 * C1081 + C7892 * C2455 - C50146 * C2460) *
               C7895 +
           (C7891 * C1082 - C50252 * C1087 + C7892 * C2461 - C50146 * C2464) *
               C7890) *
              C50110 * C50013 * C1071) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                C7893 +
            (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                C50280 +
            (C7897 - C7898 + C7899 - C7900) * C7894 +
            (C7901 - C7902 + C7903 - C7904) * C50281 + C7937 * C7895 +
            C7938 * C7890) *
               C50110 * C50013 * C997 +
           ((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                C7893 +
            (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                C50280 +
            (C8087 - C8088 + C8089 - C8090) * C7894 +
            (C8091 - C8092 + C8093 - C8094) * C50281 + C8455 * C7895 +
            C8456 * C7890) *
               C50110 * C50013 * C50049) *
              C999 +
          (((C7898 - C7897 + C7900 - C7899) * C7893 +
            (C7902 - C7901 + C7904 - C7903) * C50280 +
            (C7906 - C7905 + C7908 - C7907) * C7894 +
            (C7910 - C7909 + C7912 - C7911) * C50281 + C7939 * C7895 +
            C7940 * C7890) *
               C50110 * C50013 * C997 +
           ((C8088 - C8087 + C8090 - C8089) * C7893 +
            (C8092 - C8091 + C8094 - C8093) * C50280 +
            (C8096 - C8095 + C8098 - C8097) * C7894 +
            (C8100 - C8099 + C8102 - C8101) * C50281 +
            (C8447 - C8448 + C8449 - C8450) * C7895 +
            (C8451 - C8452 + C8453 - C8454) * C7890) *
               C50110 * C50013 * C50049) *
              C1000 +
          ((C7937 * C7893 + C7938 * C50280 +
            (C7914 - C7913 + C7916 - C7915) * C7894 +
            (C7918 - C7917 + C7920 - C7919) * C50281 +
            (C7921 - C7922 + C7923 - C7924) * C7895 +
            (C7925 - C7926 + C7927 - C7928) * C7890) *
               C50110 * C50013 * C997 +
           (C8455 * C7893 + C8456 * C50280 +
            (C8448 - C8447 + C8450 - C8449) * C7894 +
            (C8452 - C8451 + C8454 - C8453) * C50281 +
            (C7891 * C289 - C50252 * C307 + C7892 * C290 - C50146 * C309) *
                C7895 +
            (C7891 * C308 - C50252 * C319 + C7892 * C310 - C50146 * C320) *
                C7890) *
               C50110 * C50013 * C50049) *
              C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                C7893 +
            (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                C50280 +
            (C7897 - C7898 + C7899 - C7900) * C7894 +
            (C7901 - C7902 + C7903 - C7904) * C50281 + C7937 * C7895 +
            C7938 * C7890) *
               C50110 * C443 +
           ((C7891 * C446 - C50252 * C456 + C7892 * C867 - C50146 * C872) *
                C7893 +
            (C7891 * C457 - C50252 * C476 + C7892 * C873 - C50146 * C882) *
                C50280 +
            (C8265 - C8266 + C8267 - C8268) * C7894 +
            (C8269 - C8270 + C8271 - C8272) * C50281 + C8615 * C7895 +
            C8616 * C7890) *
               C50110 * C444 +
           ((C50252 * C464 - C7891 * C450 + C50146 * C1191 - C7892 * C1187) *
                C7893 +
            (C50252 * C480 - C7891 * C465 + C50146 * C1199 - C7892 * C1192) *
                C50280 +
            (C8281 - C8282 + C8283 - C8284) * C7894 +
            (C8285 - C8286 + C8287 - C8288) * C50281 +
            (C8289 - C8290 + C8291 - C8292) * C7895 +
            (C8293 - C8294 + C8295 - C8296) * C7890) *
               C50110 * C445) *
              C997 +
          (((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                C7893 +
            (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                C50280 +
            (C8087 - C8088 + C8089 - C8090) * C7894 +
            (C8091 - C8092 + C8093 - C8094) * C50281 + C8455 * C7895 +
            C8456 * C7890) *
               C50110 * C443 +
           ((C50252 * C872 - C7891 * C867 + C50146 * C1538 - C7892 * C1534) *
                C7893 +
            (C50252 * C882 - C7891 * C873 + C50146 * C1546 - C7892 * C1539) *
                C50280 +
            (C8811 - C8812 + C8813 - C8814) * C7894 +
            (C8815 - C8816 + C8817 - C8818) * C50281 +
            (C8819 - C8820 + C8821 - C8822) * C7895 +
            (C8823 - C8824 + C8825 - C8826) * C7890) *
               C50110 * C444 +
           ((C7891 * C1187 - C50252 * C1191 + C7892 * C2635 - C50146 * C2638) *
                C7893 +
            (C7891 * C1192 - C50252 * C1199 + C7892 * C2639 - C50146 * C2644) *
                C50280 +
            (C7891 * C1188 - C50252 * C1193 + C7892 * C2636 - C50146 * C2640) *
                C7894 +
            (C7891 * C1194 - C50252 * C1200 + C7892 * C2641 - C50146 * C2645) *
                C50281 +
            (C7891 * C1189 - C50252 * C1195 + C7892 * C2637 - C50146 * C2642) *
                C7895 +
            (C7891 * C1196 - C50252 * C1201 + C7892 * C2643 - C50146 * C2646) *
                C7890) *
               C50110 * C445) *
              C50049) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[8] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C7893 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C50280 +
             (C7897 - C7898 + C7899 - C7900) * C7894 +
             (C7901 - C7902 + C7903 - C7904) * C50281 + C7937 * C7895 +
             C7938 * C7890) *
                C50110 * C50240 +
            ((C7891 * C446 - C50252 * C456 + C7892 * C867 - C50146 * C872) *
                 C7893 +
             (C7891 * C457 - C50252 * C476 + C7892 * C873 - C50146 * C882) *
                 C50280 +
             (C8265 - C8266 + C8267 - C8268) * C7894 +
             (C8269 - C8270 + C8271 - C8272) * C50281 + C8615 * C7895 +
             C8616 * C7890) *
                C50110 * C50077) *
               C997 +
           (((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                 C7893 +
             (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                 C50280 +
             (C8087 - C8088 + C8089 - C8090) * C7894 +
             (C8091 - C8092 + C8093 - C8094) * C50281 + C8455 * C7895 +
             C8456 * C7890) *
                C50110 * C50240 +
            ((C50252 * C872 - C7891 * C867 + C50146 * C1538 - C7892 * C1534) *
                 C7893 +
             (C50252 * C882 - C7891 * C873 + C50146 * C1546 - C7892 * C1539) *
                 C50280 +
             (C8811 - C8812 + C8813 - C8814) * C7894 +
             (C8815 - C8816 + C8817 - C8818) * C50281 +
             (C8819 - C8820 + C8821 - C8822) * C7895 +
             (C8823 - C8824 + C8825 - C8826) * C7890) *
                C50110 * C50077) *
               C50049) *
              C50231 +
          ((((C7898 - C7897 + C7900 - C7899) * C7893 +
             (C7902 - C7901 + C7904 - C7903) * C50280 +
             (C7906 - C7905 + C7908 - C7907) * C7894 +
             (C7910 - C7909 + C7912 - C7911) * C50281 + C7939 * C7895 +
             C7940 * C7890) *
                C50110 * C50240 +
            ((C8266 - C8265 + C8268 - C8267) * C7893 +
             (C8270 - C8269 + C8272 - C8271) * C50280 +
             (C8274 - C8273 + C8276 - C8275) * C7894 +
             (C8278 - C8277 + C8280 - C8279) * C50281 +
             (C8607 - C8608 + C8609 - C8610) * C7895 +
             (C8611 - C8612 + C8613 - C8614) * C7890) *
                C50110 * C50077) *
               C997 +
           (((C8088 - C8087 + C8090 - C8089) * C7893 +
             (C8092 - C8091 + C8094 - C8093) * C50280 +
             (C8096 - C8095 + C8098 - C8097) * C7894 +
             (C8100 - C8099 + C8102 - C8101) * C50281 +
             (C8447 - C8448 + C8449 - C8450) * C7895 +
             (C8451 - C8452 + C8453 - C8454) * C7890) *
                C50110 * C50240 +
            ((C8812 - C8811 + C8814 - C8813) * C7893 +
             (C8816 - C8815 + C8818 - C8817) * C50280 +
             (C8820 - C8819 + C8822 - C8821) * C7894 +
             (C8824 - C8823 + C8826 - C8825) * C50281 +
             (C7891 * C870 - C50252 * C878 + C7892 * C1537 - C50146 * C1544) *
                 C7895 +
             (C7891 * C879 - C50252 * C885 + C7892 * C1545 - C50146 * C1549) *
                 C7890) *
                C50110 * C50077) *
               C50049) *
              C49984)) /
        (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                C7893 +
            (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                C50280 +
            (C7897 - C7898 + C7899 - C7900) * C7894 +
            (C7901 - C7902 + C7903 - C7904) * C50281 + C7937 * C7895 +
            C7938 * C7890) *
               C50110 * C50013 * C997 +
           ((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                C7893 +
            (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                C50280 +
            (C8087 - C8088 + C8089 - C8090) * C7894 +
            (C8091 - C8092 + C8093 - C8094) * C50281 + C8455 * C7895 +
            C8456 * C7890) *
               C50110 * C50013 * C50049) *
              C999 +
          (((C7898 - C7897 + C7900 - C7899) * C7893 +
            (C7902 - C7901 + C7904 - C7903) * C50280 +
            (C7906 - C7905 + C7908 - C7907) * C7894 +
            (C7910 - C7909 + C7912 - C7911) * C50281 + C7939 * C7895 +
            C7940 * C7890) *
               C50110 * C50013 * C997 +
           ((C8088 - C8087 + C8090 - C8089) * C7893 +
            (C8092 - C8091 + C8094 - C8093) * C50280 +
            (C8096 - C8095 + C8098 - C8097) * C7894 +
            (C8100 - C8099 + C8102 - C8101) * C50281 +
            (C8447 - C8448 + C8449 - C8450) * C7895 +
            (C8451 - C8452 + C8453 - C8454) * C7890) *
               C50110 * C50013 * C50049) *
              C1000 +
          ((C7937 * C7893 + C7938 * C50280 +
            (C7914 - C7913 + C7916 - C7915) * C7894 +
            (C7918 - C7917 + C7920 - C7919) * C50281 +
            (C7921 - C7922 + C7923 - C7924) * C7895 +
            (C7925 - C7926 + C7927 - C7928) * C7890) *
               C50110 * C50013 * C997 +
           (C8455 * C7893 + C8456 * C50280 +
            (C8448 - C8447 + C8450 - C8449) * C7894 +
            (C8452 - C8451 + C8454 - C8453) * C50281 +
            (C7891 * C289 - C50252 * C307 + C7892 * C290 - C50146 * C309) *
                C7895 +
            (C7891 * C308 - C50252 * C319 + C7892 * C310 - C50146 * C320) *
                C7890) *
               C50110 * C50013 * C50049) *
              C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
               C7893 +
           (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
               C50280 +
           (C7897 - C7898 + C7899 - C7900) * C7894 +
           (C7901 - C7902 + C7903 - C7904) * C50281 + C7937 * C7895 +
           C7938 * C7890) *
              C50110 * C50013 * C1068 +
          ((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
               C7893 +
           (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
               C50280 +
           (C8087 - C8088 + C8089 - C8090) * C7894 +
           (C8091 - C8092 + C8093 - C8094) * C50281 + C8455 * C7895 +
           C8456 * C7890) *
              C50110 * C50013 * C1069 +
          ((C50252 * C299 - C7891 * C285 + C50146 * C1077 - C7892 * C1073) *
               C7893 +
           (C50252 * C315 - C7891 * C300 + C50146 * C1085 - C7892 * C1078) *
               C50280 +
           (C8103 - C8104 + C8105 - C8106) * C7894 +
           (C8107 - C8108 + C8109 - C8110) * C50281 +
           (C8111 - C8112 + C8113 - C8114) * C7895 +
           (C8115 - C8116 + C8117 - C8118) * C7890) *
              C50110 * C50013 * C1070 +
          ((C7891 * C1073 - C50252 * C1077 + C7892 * C2453 - C50146 * C2456) *
               C7893 +
           (C7891 * C1078 - C50252 * C1085 + C7892 * C2457 - C50146 * C2462) *
               C50280 +
           (C7891 * C1074 - C50252 * C1079 + C7892 * C2454 - C50146 * C2458) *
               C7894 +
           (C7891 * C1080 - C50252 * C1086 + C7892 * C2459 - C50146 * C2463) *
               C50281 +
           (C7891 * C1075 - C50252 * C1081 + C7892 * C2455 - C50146 * C2460) *
               C7895 +
           (C7891 * C1082 - C50252 * C1087 + C7892 * C2461 - C50146 * C2464) *
               C7890) *
              C50110 * C50013 * C1071) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C7893 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C50280 +
             (C7897 - C7898 + C7899 - C7900) * C7894 +
             (C7901 - C7902 + C7903 - C7904) * C50281 + C7937 * C7895 +
             C7938 * C7890) *
                C50110 * C1648 +
            ((C7891 * C446 - C50252 * C456 + C7892 * C867 - C50146 * C872) *
                 C7893 +
             (C7891 * C457 - C50252 * C476 + C7892 * C873 - C50146 * C882) *
                 C50280 +
             (C8265 - C8266 + C8267 - C8268) * C7894 +
             (C8269 - C8270 + C8271 - C8272) * C50281 + C8615 * C7895 +
             C8616 * C7890) *
                C50110 * C50077) *
               C50239 +
           (((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                 C7893 +
             (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                 C50280 +
             (C8087 - C8088 + C8089 - C8090) * C7894 +
             (C8091 - C8092 + C8093 - C8094) * C50281 + C8455 * C7895 +
             C8456 * C7890) *
                C50110 * C1648 +
            ((C50252 * C872 - C7891 * C867 + C50146 * C1538 - C7892 * C1534) *
                 C7893 +
             (C50252 * C882 - C7891 * C873 + C50146 * C1546 - C7892 * C1539) *
                 C50280 +
             (C8811 - C8812 + C8813 - C8814) * C7894 +
             (C8815 - C8816 + C8817 - C8818) * C50281 +
             (C8819 - C8820 + C8821 - C8822) * C7895 +
             (C8823 - C8824 + C8825 - C8826) * C7890) *
                C50110 * C50077) *
               C50049) *
              C50231 +
          ((((C7898 - C7897 + C7900 - C7899) * C7893 +
             (C7902 - C7901 + C7904 - C7903) * C50280 +
             (C7906 - C7905 + C7908 - C7907) * C7894 +
             (C7910 - C7909 + C7912 - C7911) * C50281 + C7939 * C7895 +
             C7940 * C7890) *
                C50110 * C1648 +
            ((C8266 - C8265 + C8268 - C8267) * C7893 +
             (C8270 - C8269 + C8272 - C8271) * C50280 +
             (C8274 - C8273 + C8276 - C8275) * C7894 +
             (C8278 - C8277 + C8280 - C8279) * C50281 +
             (C8607 - C8608 + C8609 - C8610) * C7895 +
             (C8611 - C8612 + C8613 - C8614) * C7890) *
                C50110 * C50077) *
               C50239 +
           (((C8088 - C8087 + C8090 - C8089) * C7893 +
             (C8092 - C8091 + C8094 - C8093) * C50280 +
             (C8096 - C8095 + C8098 - C8097) * C7894 +
             (C8100 - C8099 + C8102 - C8101) * C50281 +
             (C8447 - C8448 + C8449 - C8450) * C7895 +
             (C8451 - C8452 + C8453 - C8454) * C7890) *
                C50110 * C1648 +
            ((C8812 - C8811 + C8814 - C8813) * C7893 +
             (C8816 - C8815 + C8818 - C8817) * C50280 +
             (C8820 - C8819 + C8822 - C8821) * C7894 +
             (C8824 - C8823 + C8826 - C8825) * C50281 +
             (C7891 * C870 - C50252 * C878 + C7892 * C1537 - C50146 * C1544) *
                 C7895 +
             (C7891 * C879 - C50252 * C885 + C7892 * C1545 - C50146 * C1549) *
                 C7890) *
                C50110 * C50077) *
               C50049) *
              C49984)) /
        (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                C7893 +
            (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                C50280 +
            (C7897 - C7898 + C7899 - C7900) * C7894 +
            (C7901 - C7902 + C7903 - C7904) * C50281 + C7937 * C7895 +
            C7938 * C7890) *
               C50110 * C50286 +
           ((C7891 * C446 - C50252 * C456 + C7892 * C867 - C50146 * C872) *
                C7893 +
            (C7891 * C457 - C50252 * C476 + C7892 * C873 - C50146 * C882) *
                C50280 +
            (C8265 - C8266 + C8267 - C8268) * C7894 +
            (C8269 - C8270 + C8271 - C8272) * C50281 + C8615 * C7895 +
            C8616 * C7890) *
               C50110 * C50287 +
           ((C50252 * C464 - C7891 * C450 + C50146 * C1191 - C7892 * C1187) *
                C7893 +
            (C50252 * C480 - C7891 * C465 + C50146 * C1199 - C7892 * C1192) *
                C50280 +
            (C8281 - C8282 + C8283 - C8284) * C7894 +
            (C8285 - C8286 + C8287 - C8288) * C50281 +
            (C8289 - C8290 + C8291 - C8292) * C7895 +
            (C8293 - C8294 + C8295 - C8296) * C7890) *
               C50110 * C2064) *
              C50239 +
          (((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                C7893 +
            (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                C50280 +
            (C8087 - C8088 + C8089 - C8090) * C7894 +
            (C8091 - C8092 + C8093 - C8094) * C50281 + C8455 * C7895 +
            C8456 * C7890) *
               C50110 * C50286 +
           ((C50252 * C872 - C7891 * C867 + C50146 * C1538 - C7892 * C1534) *
                C7893 +
            (C50252 * C882 - C7891 * C873 + C50146 * C1546 - C7892 * C1539) *
                C50280 +
            (C8811 - C8812 + C8813 - C8814) * C7894 +
            (C8815 - C8816 + C8817 - C8818) * C50281 +
            (C8819 - C8820 + C8821 - C8822) * C7895 +
            (C8823 - C8824 + C8825 - C8826) * C7890) *
               C50110 * C50287 +
           ((C7891 * C1187 - C50252 * C1191 + C7892 * C2635 - C50146 * C2638) *
                C7893 +
            (C7891 * C1192 - C50252 * C1199 + C7892 * C2639 - C50146 * C2644) *
                C50280 +
            (C7891 * C1188 - C50252 * C1193 + C7892 * C2636 - C50146 * C2640) *
                C7894 +
            (C7891 * C1194 - C50252 * C1200 + C7892 * C2641 - C50146 * C2645) *
                C50281 +
            (C7891 * C1189 - C50252 * C1195 + C7892 * C2637 - C50146 * C2642) *
                C7895 +
            (C7891 * C1196 - C50252 * C1201 + C7892 * C2643 - C50146 * C2646) *
                C7890) *
               C50110 * C2064) *
              C50049) *
         C49978) /
        (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                C7893 +
            (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                C50280 +
            (C7897 - C7898 + C7899 - C7900) * C7894 +
            (C7901 - C7902 + C7903 - C7904) * C50281 + C7937 * C7895 +
            C7938 * C7890) *
               C50110 * C1648 +
           ((C7891 * C446 - C50252 * C456 + C7892 * C867 - C50146 * C872) *
                C7893 +
            (C7891 * C457 - C50252 * C476 + C7892 * C873 - C50146 * C882) *
                C50280 +
            (C8265 - C8266 + C8267 - C8268) * C7894 +
            (C8269 - C8270 + C8271 - C8272) * C50281 + C8615 * C7895 +
            C8616 * C7890) *
               C50110 * C50077) *
              C276 +
          (((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                C7893 +
            (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                C50280 +
            (C8087 - C8088 + C8089 - C8090) * C7894 +
            (C8091 - C8092 + C8093 - C8094) * C50281 + C8455 * C7895 +
            C8456 * C7890) *
               C50110 * C1648 +
           ((C50252 * C872 - C7891 * C867 + C50146 * C1538 - C7892 * C1534) *
                C7893 +
            (C50252 * C882 - C7891 * C873 + C50146 * C1546 - C7892 * C1539) *
                C50280 +
            (C8811 - C8812 + C8813 - C8814) * C7894 +
            (C8815 - C8816 + C8817 - C8818) * C50281 +
            (C8819 - C8820 + C8821 - C8822) * C7895 +
            (C8823 - C8824 + C8825 - C8826) * C7890) *
               C50110 * C50077) *
              C277 +
          (((C50252 * C299 - C7891 * C285 + C50146 * C1077 - C7892 * C1073) *
                C7893 +
            (C50252 * C315 - C7891 * C300 + C50146 * C1085 - C7892 * C1078) *
                C50280 +
            (C8103 - C8104 + C8105 - C8106) * C7894 +
            (C8107 - C8108 + C8109 - C8110) * C50281 +
            (C8111 - C8112 + C8113 - C8114) * C7895 +
            (C8115 - C8116 + C8117 - C8118) * C7890) *
               C50110 * C1648 +
           ((C7891 * C1534 - C50252 * C1538 + C7892 * C3181 - C50146 * C3184) *
                C7893 +
            (C7891 * C1539 - C50252 * C1546 + C7892 * C3185 - C50146 * C3190) *
                C50280 +
            (C7891 * C1535 - C50252 * C1540 + C7892 * C3182 - C50146 * C3186) *
                C7894 +
            (C7891 * C1541 - C50252 * C1547 + C7892 * C3187 - C50146 * C3191) *
                C50281 +
            (C7891 * C1536 - C50252 * C1542 + C7892 * C3183 - C50146 * C3188) *
                C7895 +
            (C7891 * C1543 - C50252 * C1548 + C7892 * C3189 - C50146 * C3192) *
                C7890) *
               C50110 * C50077) *
              C278) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                C7893 +
            (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                C50280 +
            (C7897 - C7898 + C7899 - C7900) * C7894 +
            (C7901 - C7902 + C7903 - C7904) * C50281 + C7937 * C7895 +
            C7938 * C7890) *
               C50110 * C1648 +
           ((C7891 * C446 - C50252 * C456 + C7892 * C867 - C50146 * C872) *
                C7893 +
            (C7891 * C457 - C50252 * C476 + C7892 * C873 - C50146 * C882) *
                C50280 +
            (C8265 - C8266 + C8267 - C8268) * C7894 +
            (C8269 - C8270 + C8271 - C8272) * C50281 + C8615 * C7895 +
            C8616 * C7890) *
               C50110 * C50077) *
              C49997 * C999 +
          (((C7898 - C7897 + C7900 - C7899) * C7893 +
            (C7902 - C7901 + C7904 - C7903) * C50280 +
            (C7906 - C7905 + C7908 - C7907) * C7894 +
            (C7910 - C7909 + C7912 - C7911) * C50281 + C7939 * C7895 +
            C7940 * C7890) *
               C50110 * C1648 +
           ((C8266 - C8265 + C8268 - C8267) * C7893 +
            (C8270 - C8269 + C8272 - C8271) * C50280 +
            (C8274 - C8273 + C8276 - C8275) * C7894 +
            (C8278 - C8277 + C8280 - C8279) * C50281 +
            (C8607 - C8608 + C8609 - C8610) * C7895 +
            (C8611 - C8612 + C8613 - C8614) * C7890) *
               C50110 * C50077) *
              C49997 * C1000 +
          ((C7937 * C7893 + C7938 * C50280 +
            (C7914 - C7913 + C7916 - C7915) * C7894 +
            (C7918 - C7917 + C7920 - C7919) * C50281 +
            (C7921 - C7922 + C7923 - C7924) * C7895 +
            (C7925 - C7926 + C7927 - C7928) * C7890) *
               C50110 * C1648 +
           (C8615 * C7893 + C8616 * C50280 +
            (C8608 - C8607 + C8610 - C8609) * C7894 +
            (C8612 - C8611 + C8614 - C8613) * C50281 +
            (C7891 * C454 - C50252 * C472 + C7892 * C871 - C50146 * C880) *
                C7895 +
            (C7891 * C473 - C50252 * C484 + C7892 * C881 - C50146 * C886) *
                C7890) *
               C50110 * C50077) *
              C49997 * C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
               C7893 +
           (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
               C50280 +
           (C7897 - C7898 + C7899 - C7900) * C7894 +
           (C7901 - C7902 + C7903 - C7904) * C50281 + C7937 * C7895 +
           C7938 * C7890) *
              C50110 * C1814 +
          ((C7891 * C446 - C50252 * C456 + C7892 * C867 - C50146 * C872) *
               C7893 +
           (C7891 * C457 - C50252 * C476 + C7892 * C873 - C50146 * C882) *
               C50280 +
           (C8265 - C8266 + C8267 - C8268) * C7894 +
           (C8269 - C8270 + C8271 - C8272) * C50281 + C8615 * C7895 +
           C8616 * C7890) *
              C50110 * C1815 +
          ((C50252 * C464 - C7891 * C450 + C50146 * C1191 - C7892 * C1187) *
               C7893 +
           (C50252 * C480 - C7891 * C465 + C50146 * C1199 - C7892 * C1192) *
               C50280 +
           (C8281 - C8282 + C8283 - C8284) * C7894 +
           (C8285 - C8286 + C8287 - C8288) * C50281 +
           (C8289 - C8290 + C8291 - C8292) * C7895 +
           (C8293 - C8294 + C8295 - C8296) * C7890) *
              C50110 * C1816 +
          ((C7891 * C1818 - C50252 * C1822 + C7892 * C4495 - C50146 * C4499) *
               C7893 +
           (C7891 * C1823 - C50252 * C1830 + C7892 * C4501 - C50146 * C4507) *
               C50280 +
           (C7891 * C1819 - C50252 * C1824 + C7892 * C4497 - C50146 * C4503) *
               C7894 +
           (C7891 * C1825 - C50252 * C1831 + C7892 * C4505 - C50146 * C4509) *
               C50281 +
           (C7891 * C1820 - C50252 * C1826 + C7892 * C5962 - C50146 * C5963) *
               C7895 +
           (C7891 * C1827 - C50252 * C1832 + C7892 * C5964 - C50146 * C5965) *
               C7890) *
              C50110 * C1817) *
         C49997 * C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                C7893 +
            (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                C50280 +
            (C7897 - C7898 + C7899 - C7900) * C7894 +
            (C7901 - C7902 + C7903 - C7904) * C50281 + C7937 * C7895 +
            C7938 * C7890) *
               C50110 * C50286 +
           ((C7891 * C446 - C50252 * C456 + C7892 * C867 - C50146 * C872) *
                C7893 +
            (C7891 * C457 - C50252 * C476 + C7892 * C873 - C50146 * C882) *
                C50280 +
            (C8265 - C8266 + C8267 - C8268) * C7894 +
            (C8269 - C8270 + C8271 - C8272) * C50281 + C8615 * C7895 +
            C8616 * C7890) *
               C50110 * C50287 +
           ((C50252 * C464 - C7891 * C450 + C50146 * C1191 - C7892 * C1187) *
                C7893 +
            (C50252 * C480 - C7891 * C465 + C50146 * C1199 - C7892 * C1192) *
                C50280 +
            (C8281 - C8282 + C8283 - C8284) * C7894 +
            (C8285 - C8286 + C8287 - C8288) * C50281 +
            (C8289 - C8290 + C8291 - C8292) * C7895 +
            (C8293 - C8294 + C8295 - C8296) * C7890) *
               C50110 * C2064) *
              C49997 * C50231 +
          (((C7898 - C7897 + C7900 - C7899) * C7893 +
            (C7902 - C7901 + C7904 - C7903) * C50280 +
            (C7906 - C7905 + C7908 - C7907) * C7894 +
            (C7910 - C7909 + C7912 - C7911) * C50281 + C7939 * C7895 +
            C7940 * C7890) *
               C50110 * C50286 +
           ((C8266 - C8265 + C8268 - C8267) * C7893 +
            (C8270 - C8269 + C8272 - C8271) * C50280 +
            (C8274 - C8273 + C8276 - C8275) * C7894 +
            (C8278 - C8277 + C8280 - C8279) * C50281 +
            (C8607 - C8608 + C8609 - C8610) * C7895 +
            (C8611 - C8612 + C8613 - C8614) * C7890) *
               C50110 * C50287 +
           ((C8282 - C8281 + C8284 - C8283) * C7893 +
            (C8286 - C8285 + C8288 - C8287) * C50280 +
            (C8290 - C8289 + C8292 - C8291) * C7894 +
            (C8294 - C8293 + C8296 - C8295) * C50281 +
            (C7891 * C453 - C50252 * C470 + C7892 * C1190 - C50146 * C1197) *
                C7895 +
            (C7891 * C471 - C50252 * C483 + C7892 * C1198 - C50146 * C1202) *
                C7890) *
               C50110 * C2064) *
              C49997 * C49984)) /
        (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                C7893 +
            (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                C50280 +
            (C7897 - C7898 + C7899 - C7900) * C7894 +
            (C7901 - C7902 + C7903 - C7904) * C50281 + C7937 * C7895 +
            C7938 * C7890) *
               C50110 * C1648 +
           ((C7891 * C446 - C50252 * C456 + C7892 * C867 - C50146 * C872) *
                C7893 +
            (C7891 * C457 - C50252 * C476 + C7892 * C873 - C50146 * C882) *
                C50280 +
            (C8265 - C8266 + C8267 - C8268) * C7894 +
            (C8269 - C8270 + C8271 - C8272) * C50281 + C8615 * C7895 +
            C8616 * C7890) *
               C50110 * C50077) *
              C49997 * C999 +
          (((C7898 - C7897 + C7900 - C7899) * C7893 +
            (C7902 - C7901 + C7904 - C7903) * C50280 +
            (C7906 - C7905 + C7908 - C7907) * C7894 +
            (C7910 - C7909 + C7912 - C7911) * C50281 + C7939 * C7895 +
            C7940 * C7890) *
               C50110 * C1648 +
           ((C8266 - C8265 + C8268 - C8267) * C7893 +
            (C8270 - C8269 + C8272 - C8271) * C50280 +
            (C8274 - C8273 + C8276 - C8275) * C7894 +
            (C8278 - C8277 + C8280 - C8279) * C50281 +
            (C8607 - C8608 + C8609 - C8610) * C7895 +
            (C8611 - C8612 + C8613 - C8614) * C7890) *
               C50110 * C50077) *
              C49997 * C1000 +
          ((C7937 * C7893 + C7938 * C50280 +
            (C7914 - C7913 + C7916 - C7915) * C7894 +
            (C7918 - C7917 + C7920 - C7919) * C50281 +
            (C7921 - C7922 + C7923 - C7924) * C7895 +
            (C7925 - C7926 + C7927 - C7928) * C7890) *
               C50110 * C1648 +
           (C8615 * C7893 + C8616 * C50280 +
            (C8608 - C8607 + C8610 - C8609) * C7894 +
            (C8612 - C8611 + C8614 - C8613) * C50281 +
            (C7891 * C454 - C50252 * C472 + C7892 * C871 - C50146 * C880) *
                C7895 +
            (C7891 * C473 - C50252 * C484 + C7892 * C881 - C50146 * C886) *
                C7890) *
               C50110 * C50077) *
              C49997 * C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                C7893 +
            (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                C50280 +
            (C7897 - C7898 + C7899 - C7900) * C7894 +
            (C7901 - C7902 + C7903 - C7904) * C50281 + C7937 * C7895 +
            C7938 * C7890) *
               C50110 * C1648 +
           ((C7891 * C446 - C50252 * C456 + C7892 * C867 - C50146 * C872) *
                C7893 +
            (C7891 * C457 - C50252 * C476 + C7892 * C873 - C50146 * C882) *
                C50280 +
            (C8265 - C8266 + C8267 - C8268) * C7894 +
            (C8269 - C8270 + C8271 - C8272) * C50281 + C8615 * C7895 +
            C8616 * C7890) *
               C50110 * C50077) *
              C276 +
          (((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                C7893 +
            (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                C50280 +
            (C8087 - C8088 + C8089 - C8090) * C7894 +
            (C8091 - C8092 + C8093 - C8094) * C50281 + C8455 * C7895 +
            C8456 * C7890) *
               C50110 * C1648 +
           ((C50252 * C872 - C7891 * C867 + C50146 * C1538 - C7892 * C1534) *
                C7893 +
            (C50252 * C882 - C7891 * C873 + C50146 * C1546 - C7892 * C1539) *
                C50280 +
            (C8811 - C8812 + C8813 - C8814) * C7894 +
            (C8815 - C8816 + C8817 - C8818) * C50281 +
            (C8819 - C8820 + C8821 - C8822) * C7895 +
            (C8823 - C8824 + C8825 - C8826) * C7890) *
               C50110 * C50077) *
              C277 +
          (((C50252 * C299 - C7891 * C285 + C50146 * C1077 - C7892 * C1073) *
                C7893 +
            (C50252 * C315 - C7891 * C300 + C50146 * C1085 - C7892 * C1078) *
                C50280 +
            (C8103 - C8104 + C8105 - C8106) * C7894 +
            (C8107 - C8108 + C8109 - C8110) * C50281 +
            (C8111 - C8112 + C8113 - C8114) * C7895 +
            (C8115 - C8116 + C8117 - C8118) * C7890) *
               C50110 * C1648 +
           ((C7891 * C1534 - C50252 * C1538 + C7892 * C3181 - C50146 * C3184) *
                C7893 +
            (C7891 * C1539 - C50252 * C1546 + C7892 * C3185 - C50146 * C3190) *
                C50280 +
            (C7891 * C1535 - C50252 * C1540 + C7892 * C3182 - C50146 * C3186) *
                C7894 +
            (C7891 * C1541 - C50252 * C1547 + C7892 * C3187 - C50146 * C3191) *
                C50281 +
            (C7891 * C1536 - C50252 * C1542 + C7892 * C3183 - C50146 * C3188) *
                C7895 +
            (C7891 * C1543 - C50252 * C1548 + C7892 * C3189 - C50146 * C3192) *
                C7890) *
               C50110 * C50077) *
              C278) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C2269 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C2264 +
             (C7897 - C7898 + C7899 - C7900) * C2270 +
             (C7901 - C7902 + C7903 - C7904) * C49955) *
                C50253 +
            ((C13745 - C13746 + C13747 - C13748) * C2269 +
             (C13749 - C13750 + C13751 - C13752) * C2264 + C13785 * C2270 +
             C13786 * C49955) *
                C50174) *
               C50013 * C50239 +
           (((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                 C2269 +
             (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                 C2264 +
             (C8087 - C8088 + C8089 - C8090) * C2270 +
             (C8091 - C8092 + C8093 - C8094) * C49955) *
                C50253 +
            ((C7891 * C867 - C50252 * C872 + C7892 * C1534 - C50146 * C1538) *
                 C2269 +
             (C7891 * C873 - C50252 * C882 + C7892 * C1539 - C50146 * C1546) *
                 C2264 +
             (C8812 - C8811 + C8814 - C8813) * C2270 +
             (C8816 - C8815 + C8818 - C8817) * C49955) *
                C50174) *
               C50013 * C50049) *
              C50282 +
          ((((C7898 - C7897 + C7900 - C7899) * C2269 +
             (C7902 - C7901 + C7904 - C7903) * C2264 +
             (C7906 - C7905 + C7908 - C7907) * C2270 +
             (C7910 - C7909 + C7912 - C7911) * C49955) *
                C50253 +
            (C13787 * C2269 + C13788 * C2264 + C8615 * C2270 + C8616 * C49955) *
                C50174) *
               C50013 * C50239 +
           (((C8088 - C8087 + C8090 - C8089) * C2269 +
             (C8092 - C8091 + C8094 - C8093) * C2264 +
             (C8096 - C8095 + C8098 - C8097) * C2270 +
             (C8100 - C8099 + C8102 - C8101) * C49955) *
                C50253 +
            ((C8811 - C8812 + C8813 - C8814) * C2269 +
             (C8815 - C8816 + C8817 - C8818) * C2264 +
             (C8819 - C8820 + C8821 - C8822) * C2270 +
             (C8823 - C8824 + C8825 - C8826) * C49955) *
                C50174) *
               C50013 * C50049) *
              C50283 +
          (((C7937 * C2269 + C7938 * C2264 +
             (C7914 - C7913 + C7916 - C7915) * C2270 +
             (C7918 - C7917 + C7920 - C7919) * C49955) *
                C50253 +
            ((C8274 - C8273 + C8276 - C8275) * C2269 +
             (C8278 - C8277 + C8280 - C8279) * C2264 +
             (C8607 - C8608 + C8609 - C8610) * C2270 +
             (C8611 - C8612 + C8613 - C8614) * C49955) *
                C50174) *
               C50013 * C50239 +
           ((C8455 * C2269 + C8456 * C2264 +
             (C8448 - C8447 + C8450 - C8449) * C2270 +
             (C8452 - C8451 + C8454 - C8453) * C49955) *
                C50253 +
            ((C8820 - C8819 + C8822 - C8821) * C2269 +
             (C8824 - C8823 + C8826 - C8825) * C2264 +
             (C7891 * C870 - C50252 * C878 + C7892 * C1537 - C50146 * C1544) *
                 C2270 +
             (C7891 * C879 - C50252 * C885 + C7892 * C1545 - C50146 * C1549) *
                 C49955) *
                C50174) *
               C50013 * C50049) *
              C612)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                  C2269 +
              (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                  C2264 +
              (C7897 - C7898 + C7899 - C7900) * C2270 +
              (C7901 - C7902 + C7903 - C7904) * C49955) *
                 C50253 +
             ((C13745 - C13746 + C13747 - C13748) * C2269 +
              (C13749 - C13750 + C13751 - C13752) * C2264 + C13785 * C2270 +
              C13786 * C49955) *
                 C50174) *
                C50240 +
            (((C13746 - C13745 + C13748 - C13747) * C2269 +
              (C13750 - C13749 + C13752 - C13751) * C2264 + C13787 * C2270 +
              C13788 * C49955) *
                 C50253 +
             ((C13761 - C13762 + C13763 - C13764) * C2269 +
              (C13765 - C13766 + C13767 - C13768) * C2264 + C13789 * C2270 +
              C13790 * C49955) *
                 C50174) *
                C50077) *
               C50239 +
           ((((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                  C2269 +
              (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                  C2264 +
              (C8087 - C8088 + C8089 - C8090) * C2270 +
              (C8091 - C8092 + C8093 - C8094) * C49955) *
                 C50253 +
             ((C14445 - C14446 + C14447 - C14448) * C2269 +
              (C14449 - C14450 + C14451 - C14452) * C2264 + C14469 * C2270 +
              C14470 * C49955) *
                 C50174) *
                C50240 +
            (((C14446 - C14445 + C14448 - C14447) * C2269 +
              (C14450 - C14449 + C14452 - C14451) * C2264 + C14471 * C2270 +
              C14472 * C49955) *
                 C50253 +
             ((C50252 * C1191 - C7891 * C1187 + C50146 * C2638 -
               C7892 * C2635) *
                  C2269 +
              (C50252 * C1199 - C7891 * C1192 + C50146 * C2644 -
               C7892 * C2639) *
                  C2264 +
              (C14461 - C14462 + C14463 - C14464) * C2270 +
              (C14465 - C14466 + C14467 - C14468) * C49955) *
                 C50174) *
                C50077) *
               C50049) *
              C279 +
          (((((C7898 - C7897 + C7900 - C7899) * C2269 +
              (C7902 - C7901 + C7904 - C7903) * C2264 +
              (C7906 - C7905 + C7908 - C7907) * C2270 +
              (C7910 - C7909 + C7912 - C7911) * C49955) *
                 C50253 +
             (C13787 * C2269 + C13788 * C2264 + C8615 * C2270 +
              C8616 * C49955) *
                 C50174) *
                C50240 +
            ((C13785 * C2269 + C13786 * C2264 + C14185 * C2270 +
              C14186 * C49955) *
                 C50253 +
             (C13791 * C2269 + C13792 * C2264 +
              (C8289 - C8290 + C8291 - C8292) * C2270 +
              (C8293 - C8294 + C8295 - C8296) * C49955) *
                 C50174) *
                C50077) *
               C50239 +
           ((((C8088 - C8087 + C8090 - C8089) * C2269 +
              (C8092 - C8091 + C8094 - C8093) * C2264 +
              (C8096 - C8095 + C8098 - C8097) * C2270 +
              (C8100 - C8099 + C8102 - C8101) * C49955) *
                 C50253 +
             (C14471 * C2269 + C14472 * C2264 +
              (C8819 - C8820 + C8821 - C8822) * C2270 +
              (C8823 - C8824 + C8825 - C8826) * C49955) *
                 C50174) *
                C50240 +
            ((C14469 * C2269 + C14470 * C2264 +
              (C8820 - C8819 + C8822 - C8821) * C2270 +
              (C8824 - C8823 + C8826 - C8825) * C49955) *
                 C50253 +
             ((C14462 - C14461 + C14464 - C14463) * C2269 +
              (C14466 - C14465 + C14468 - C14467) * C2264 +
              (C7891 * C1189 - C50252 * C1195 + C7892 * C2637 -
               C50146 * C2642) *
                  C2270 +
              (C7891 * C1196 - C50252 * C1201 + C7892 * C2643 -
               C50146 * C2646) *
                  C49955) *
                 C50174) *
                C50077) *
               C50049) *
              C49984)) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C2269 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C2264 +
             (C7897 - C7898 + C7899 - C7900) * C2270 +
             (C7901 - C7902 + C7903 - C7904) * C49955) *
                C50253 +
            ((C50252 * C456 - C7891 * C446 + C50146 * C872 - C7892 * C867) *
                 C2269 +
             (C50252 * C476 - C7891 * C457 + C50146 * C882 - C7892 * C873) *
                 C2264 +
             (C8266 - C8265 + C8268 - C8267) * C2270 +
             (C8270 - C8269 + C8272 - C8271) * C49955) *
                C50174) *
               C50013 * C276 +
           (((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                 C2269 +
             (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                 C2264 +
             (C8087 - C8088 + C8089 - C8090) * C2270 +
             (C8091 - C8092 + C8093 - C8094) * C49955) *
                C50253 +
            ((C7891 * C867 - C50252 * C872 + C7892 * C1534 - C50146 * C1538) *
                 C2269 +
             (C7891 * C873 - C50252 * C882 + C7892 * C1539 - C50146 * C1546) *
                 C2264 +
             (C8812 - C8811 + C8814 - C8813) * C2270 +
             (C8816 - C8815 + C8818 - C8817) * C49955) *
                C50174) *
               C50013 * C277 +
           (((C50252 * C299 - C7891 * C285 + C50146 * C1077 - C7892 * C1073) *
                 C2269 +
             (C50252 * C315 - C7891 * C300 + C50146 * C1085 - C7892 * C1078) *
                 C2264 +
             (C8103 - C8104 + C8105 - C8106) * C2270 +
             (C8107 - C8108 + C8109 - C8110) * C49955) *
                C50253 +
            ((C50252 * C1538 - C7891 * C1534 + C50146 * C3184 - C7892 * C3181) *
                 C2269 +
             (C50252 * C1546 - C7891 * C1539 + C50146 * C3190 - C7892 * C3185) *
                 C2264 +
             (C13543 - C13544 + C13545 - C13546) * C2270 +
             (C13547 - C13548 + C13549 - C13550) * C49955) *
                C50174) *
               C50013 * C278) *
              C279 +
          ((((C7898 - C7897 + C7900 - C7899) * C2269 +
             (C7902 - C7901 + C7904 - C7903) * C2264 +
             (C7906 - C7905 + C7908 - C7907) * C2270 +
             (C7910 - C7909 + C7912 - C7911) * C49955) *
                C50253 +
            ((C8265 - C8266 + C8267 - C8268) * C2269 +
             (C8269 - C8270 + C8271 - C8272) * C2264 + C8615 * C2270 +
             C8616 * C49955) *
                C50174) *
               C50013 * C276 +
           (((C8088 - C8087 + C8090 - C8089) * C2269 +
             (C8092 - C8091 + C8094 - C8093) * C2264 +
             (C8096 - C8095 + C8098 - C8097) * C2270 +
             (C8100 - C8099 + C8102 - C8101) * C49955) *
                C50253 +
            ((C8811 - C8812 + C8813 - C8814) * C2269 +
             (C8815 - C8816 + C8817 - C8818) * C2264 +
             (C8819 - C8820 + C8821 - C8822) * C2270 +
             (C8823 - C8824 + C8825 - C8826) * C49955) *
                C50174) *
               C50013 * C277 +
           (((C8104 - C8103 + C8106 - C8105) * C2269 +
             (C8108 - C8107 + C8110 - C8109) * C2264 +
             (C8112 - C8111 + C8114 - C8113) * C2270 +
             (C8116 - C8115 + C8118 - C8117) * C49955) *
                C50253 +
            ((C13544 - C13543 + C13546 - C13545) * C2269 +
             (C13548 - C13547 + C13550 - C13549) * C2264 +
             (C7891 * C1536 - C50252 * C1542 + C7892 * C3183 - C50146 * C3188) *
                 C2270 +
             (C7891 * C1543 - C50252 * C1548 + C7892 * C3189 - C50146 * C3192) *
                 C49955) *
                C50174) *
               C50013 * C278) *
              C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                C2269 +
            (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                C2264 +
            (C7897 - C7898 + C7899 - C7900) * C2270 +
            (C7901 - C7902 + C7903 - C7904) * C49955) *
               C50253 +
           ((C50252 * C456 - C7891 * C446 + C50146 * C872 - C7892 * C867) *
                C2269 +
            (C50252 * C476 - C7891 * C457 + C50146 * C882 - C7892 * C873) *
                C2264 +
            (C8266 - C8265 + C8268 - C8267) * C2270 +
            (C8270 - C8269 + C8272 - C8271) * C49955) *
               C50174) *
              C50013 * C49997 * C113 +
          (((C7898 - C7897 + C7900 - C7899) * C2269 +
            (C7902 - C7901 + C7904 - C7903) * C2264 +
            (C7906 - C7905 + C7908 - C7907) * C2270 +
            (C7910 - C7909 + C7912 - C7911) * C49955) *
               C50253 +
           ((C8265 - C8266 + C8267 - C8268) * C2269 +
            (C8269 - C8270 + C8271 - C8272) * C2264 + C8615 * C2270 +
            C8616 * C49955) *
               C50174) *
              C50013 * C49997 * C114 +
          ((C7937 * C2269 + C7938 * C2264 +
            (C7914 - C7913 + C7916 - C7915) * C2270 +
            (C7918 - C7917 + C7920 - C7919) * C49955) *
               C50253 +
           ((C8274 - C8273 + C8276 - C8275) * C2269 +
            (C8278 - C8277 + C8280 - C8279) * C2264 +
            (C8607 - C8608 + C8609 - C8610) * C2270 +
            (C8611 - C8612 + C8613 - C8614) * C49955) *
               C50174) *
              C50013 * C49997 * C115 +
          ((C7939 * C2269 + C7940 * C2264 +
            (C7922 - C7921 + C7924 - C7923) * C2270 +
            (C7926 - C7925 + C7928 - C7927) * C49955) *
               C50253 +
           ((C8608 - C8607 + C8610 - C8609) * C2269 +
            (C8612 - C8611 + C8614 - C8613) * C2264 +
            (C7891 * C454 - C50252 * C472 + C7892 * C871 - C50146 * C880) *
                C2270 +
            (C7891 * C473 - C50252 * C484 + C7892 * C881 - C50146 * C886) *
                C49955) *
               C50174) *
              C50013 * C49997 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C2269 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C2264 +
             (C7897 - C7898 + C7899 - C7900) * C2270 +
             (C7901 - C7902 + C7903 - C7904) * C49955) *
                C50253 +
            ((C13745 - C13746 + C13747 - C13748) * C2269 +
             (C13749 - C13750 + C13751 - C13752) * C2264 + C13785 * C2270 +
             C13786 * C49955) *
                C50174) *
               C443 +
           (((C13746 - C13745 + C13748 - C13747) * C2269 +
             (C13750 - C13749 + C13752 - C13751) * C2264 + C13787 * C2270 +
             C13788 * C49955) *
                C50253 +
            ((C13761 - C13762 + C13763 - C13764) * C2269 +
             (C13765 - C13766 + C13767 - C13768) * C2264 + C13789 * C2270 +
             C13790 * C49955) *
                C50174) *
               C444 +
           (((C13762 - C13761 + C13764 - C13763) * C2269 +
             (C13766 - C13765 + C13768 - C13767) * C2264 + C13791 * C2270 +
             C13792 * C49955) *
                C50253 +
            ((C50252 * C1822 - C7891 * C1818 + C50146 * C4499 - C7892 * C4495) *
                 C2269 +
             (C50252 * C1830 - C7891 * C1823 + C50146 * C4507 - C7892 * C4501) *
                 C2264 +
             (C13777 - C13778 + C13779 - C13780) * C2270 +
             (C13781 - C13782 + C13783 - C13784) * C49955) *
                C50174) *
               C445) *
              C49997 * C279 +
          ((((C7898 - C7897 + C7900 - C7899) * C2269 +
             (C7902 - C7901 + C7904 - C7903) * C2264 +
             (C7906 - C7905 + C7908 - C7907) * C2270 +
             (C7910 - C7909 + C7912 - C7911) * C49955) *
                C50253 +
            (C13787 * C2269 + C13788 * C2264 + C8615 * C2270 + C8616 * C49955) *
                C50174) *
               C443 +
           ((C13785 * C2269 + C13786 * C2264 +
             (C8274 - C8273 + C8276 - C8275) * C2270 +
             (C8278 - C8277 + C8280 - C8279) * C49955) *
                C50253 +
            (C13791 * C2269 + C13792 * C2264 +
             (C8289 - C8290 + C8291 - C8292) * C2270 +
             (C8293 - C8294 + C8295 - C8296) * C49955) *
                C50174) *
               C444 +
           ((C13789 * C2269 + C13790 * C2264 +
             (C8290 - C8289 + C8292 - C8291) * C2270 +
             (C8294 - C8293 + C8296 - C8295) * C49955) *
                C50253 +
            ((C13778 - C13777 + C13780 - C13779) * C2269 +
             (C13782 - C13781 + C13784 - C13783) * C2264 +
             (C7891 * C1820 - C50252 * C1826 + C7892 * C5962 - C50146 * C5963) *
                 C2270 +
             (C7891 * C1827 - C50252 * C1832 + C7892 * C5964 - C50146 * C5965) *
                 C49955) *
                C50174) *
               C445) *
              C49997 * C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C2269 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C2264 +
             (C7897 - C7898 + C7899 - C7900) * C2270 +
             (C7901 - C7902 + C7903 - C7904) * C49955) *
                C50253 +
            ((C13745 - C13746 + C13747 - C13748) * C2269 +
             (C13749 - C13750 + C13751 - C13752) * C2264 + C13785 * C2270 +
             C13786 * C49955) *
                C50174) *
               C50240 +
           (((C13746 - C13745 + C13748 - C13747) * C2269 +
             (C13750 - C13749 + C13752 - C13751) * C2264 + C13787 * C2270 +
             C13788 * C49955) *
                C50253 +
            ((C13761 - C13762 + C13763 - C13764) * C2269 +
             (C13765 - C13766 + C13767 - C13768) * C2264 + C13789 * C2270 +
             C13790 * C49955) *
                C50174) *
               C50077) *
              C49997 * C50282 +
          ((((C7898 - C7897 + C7900 - C7899) * C2269 +
             (C7902 - C7901 + C7904 - C7903) * C2264 +
             (C7906 - C7905 + C7908 - C7907) * C2270 +
             (C7910 - C7909 + C7912 - C7911) * C49955) *
                C50253 +
            (C13787 * C2269 + C13788 * C2264 + C8615 * C2270 + C8616 * C49955) *
                C50174) *
               C50240 +
           ((C13785 * C2269 + C13786 * C2264 + C14185 * C2270 +
             C14186 * C49955) *
                C50253 +
            (C13791 * C2269 + C13792 * C2264 +
             (C8289 - C8290 + C8291 - C8292) * C2270 +
             (C8293 - C8294 + C8295 - C8296) * C49955) *
                C50174) *
               C50077) *
              C49997 * C50283 +
          (((C7937 * C2269 + C7938 * C2264 +
             (C7914 - C7913 + C7916 - C7915) * C2270 +
             (C7918 - C7917 + C7920 - C7919) * C49955) *
                C50253 +
            (C14185 * C2269 + C14186 * C2264 +
             (C8607 - C8608 + C8609 - C8610) * C2270 +
             (C8611 - C8612 + C8613 - C8614) * C49955) *
                C50174) *
               C50240 +
           ((C8615 * C2269 + C8616 * C2264 +
             (C8608 - C8607 + C8610 - C8609) * C2270 +
             (C8612 - C8611 + C8614 - C8613) * C49955) *
                C50253 +
            ((C8290 - C8289 + C8292 - C8291) * C2269 +
             (C8294 - C8293 + C8296 - C8295) * C2264 +
             (C7891 * C453 - C50252 * C470 + C7892 * C1190 - C50146 * C1197) *
                 C2270 +
             (C7891 * C471 - C50252 * C483 + C7892 * C1198 - C50146 * C1202) *
                 C49955) *
                C50174) *
               C50077) *
              C49997 * C612)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                C2269 +
            (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                C2264 +
            (C7897 - C7898 + C7899 - C7900) * C2270 +
            (C7901 - C7902 + C7903 - C7904) * C49955) *
               C50253 +
           ((C50252 * C456 - C7891 * C446 + C50146 * C872 - C7892 * C867) *
                C2269 +
            (C50252 * C476 - C7891 * C457 + C50146 * C882 - C7892 * C873) *
                C2264 +
            (C8266 - C8265 + C8268 - C8267) * C2270 +
            (C8270 - C8269 + C8272 - C8271) * C49955) *
               C50174) *
              C50013 * C49997 * C113 +
          (((C7898 - C7897 + C7900 - C7899) * C2269 +
            (C7902 - C7901 + C7904 - C7903) * C2264 +
            (C7906 - C7905 + C7908 - C7907) * C2270 +
            (C7910 - C7909 + C7912 - C7911) * C49955) *
               C50253 +
           ((C8265 - C8266 + C8267 - C8268) * C2269 +
            (C8269 - C8270 + C8271 - C8272) * C2264 + C8615 * C2270 +
            C8616 * C49955) *
               C50174) *
              C50013 * C49997 * C114 +
          ((C7937 * C2269 + C7938 * C2264 +
            (C7914 - C7913 + C7916 - C7915) * C2270 +
            (C7918 - C7917 + C7920 - C7919) * C49955) *
               C50253 +
           ((C8274 - C8273 + C8276 - C8275) * C2269 +
            (C8278 - C8277 + C8280 - C8279) * C2264 +
            (C8607 - C8608 + C8609 - C8610) * C2270 +
            (C8611 - C8612 + C8613 - C8614) * C49955) *
               C50174) *
              C50013 * C49997 * C115 +
          ((C7939 * C2269 + C7940 * C2264 +
            (C7922 - C7921 + C7924 - C7923) * C2270 +
            (C7926 - C7925 + C7928 - C7927) * C49955) *
               C50253 +
           ((C8608 - C8607 + C8610 - C8609) * C2269 +
            (C8612 - C8611 + C8614 - C8613) * C2264 +
            (C7891 * C454 - C50252 * C472 + C7892 * C871 - C50146 * C880) *
                C2270 +
            (C7891 * C473 - C50252 * C484 + C7892 * C881 - C50146 * C886) *
                C49955) *
               C50174) *
              C50013 * C49997 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C2269 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C2264 +
             (C7897 - C7898 + C7899 - C7900) * C2270 +
             (C7901 - C7902 + C7903 - C7904) * C49955) *
                C50253 +
            ((C50252 * C456 - C7891 * C446 + C50146 * C872 - C7892 * C867) *
                 C2269 +
             (C50252 * C476 - C7891 * C457 + C50146 * C882 - C7892 * C873) *
                 C2264 +
             (C8266 - C8265 + C8268 - C8267) * C2270 +
             (C8270 - C8269 + C8272 - C8271) * C49955) *
                C50174) *
               C50013 * C276 +
           (((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                 C2269 +
             (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                 C2264 +
             (C8087 - C8088 + C8089 - C8090) * C2270 +
             (C8091 - C8092 + C8093 - C8094) * C49955) *
                C50253 +
            ((C7891 * C867 - C50252 * C872 + C7892 * C1534 - C50146 * C1538) *
                 C2269 +
             (C7891 * C873 - C50252 * C882 + C7892 * C1539 - C50146 * C1546) *
                 C2264 +
             (C8812 - C8811 + C8814 - C8813) * C2270 +
             (C8816 - C8815 + C8818 - C8817) * C49955) *
                C50174) *
               C50013 * C277 +
           (((C50252 * C299 - C7891 * C285 + C50146 * C1077 - C7892 * C1073) *
                 C2269 +
             (C50252 * C315 - C7891 * C300 + C50146 * C1085 - C7892 * C1078) *
                 C2264 +
             (C8103 - C8104 + C8105 - C8106) * C2270 +
             (C8107 - C8108 + C8109 - C8110) * C49955) *
                C50253 +
            ((C50252 * C1538 - C7891 * C1534 + C50146 * C3184 - C7892 * C3181) *
                 C2269 +
             (C50252 * C1546 - C7891 * C1539 + C50146 * C3190 - C7892 * C3185) *
                 C2264 +
             (C13543 - C13544 + C13545 - C13546) * C2270 +
             (C13547 - C13548 + C13549 - C13550) * C49955) *
                C50174) *
               C50013 * C278) *
              C279 +
          ((((C7898 - C7897 + C7900 - C7899) * C2269 +
             (C7902 - C7901 + C7904 - C7903) * C2264 +
             (C7906 - C7905 + C7908 - C7907) * C2270 +
             (C7910 - C7909 + C7912 - C7911) * C49955) *
                C50253 +
            ((C8265 - C8266 + C8267 - C8268) * C2269 +
             (C8269 - C8270 + C8271 - C8272) * C2264 + C8615 * C2270 +
             C8616 * C49955) *
                C50174) *
               C50013 * C276 +
           (((C8088 - C8087 + C8090 - C8089) * C2269 +
             (C8092 - C8091 + C8094 - C8093) * C2264 +
             (C8096 - C8095 + C8098 - C8097) * C2270 +
             (C8100 - C8099 + C8102 - C8101) * C49955) *
                C50253 +
            ((C8811 - C8812 + C8813 - C8814) * C2269 +
             (C8815 - C8816 + C8817 - C8818) * C2264 +
             (C8819 - C8820 + C8821 - C8822) * C2270 +
             (C8823 - C8824 + C8825 - C8826) * C49955) *
                C50174) *
               C50013 * C277 +
           (((C8104 - C8103 + C8106 - C8105) * C2269 +
             (C8108 - C8107 + C8110 - C8109) * C2264 +
             (C8112 - C8111 + C8114 - C8113) * C2270 +
             (C8116 - C8115 + C8118 - C8117) * C49955) *
                C50253 +
            ((C13544 - C13543 + C13546 - C13545) * C2269 +
             (C13548 - C13547 + C13550 - C13549) * C2264 +
             (C7891 * C1536 - C50252 * C1542 + C7892 * C3183 - C50146 * C3188) *
                 C2270 +
             (C7891 * C1543 - C50252 * C1548 + C7892 * C3189 - C50146 * C3192) *
                 C49955) *
                C50174) *
               C50013 * C278) *
              C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C2269 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C2264 +
             (C7897 - C7898 + C7899 - C7900) * C2270 +
             (C7901 - C7902 + C7903 - C7904) * C49955) *
                C50253 +
            ((C13745 - C13746 + C13747 - C13748) * C2269 +
             (C13749 - C13750 + C13751 - C13752) * C2264 + C13785 * C2270 +
             C13786 * C49955) *
                C50174) *
               C50013 * C50284 +
           (((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                 C2269 +
             (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                 C2264 +
             (C8087 - C8088 + C8089 - C8090) * C2270 +
             (C8091 - C8092 + C8093 - C8094) * C49955) *
                C50253 +
            ((C14445 - C14446 + C14447 - C14448) * C2269 +
             (C14449 - C14450 + C14451 - C14452) * C2264 + C14469 * C2270 +
             C14470 * C49955) *
                C50174) *
               C50013 * C50285 +
           (((C50252 * C299 - C7891 * C285 + C50146 * C1077 - C7892 * C1073) *
                 C2269 +
             (C50252 * C315 - C7891 * C300 + C50146 * C1085 - C7892 * C1078) *
                 C2264 +
             (C8103 - C8104 + C8105 - C8106) * C2270 +
             (C8107 - C8108 + C8109 - C8110) * C49955) *
                C50253 +
            ((C50252 * C1538 - C7891 * C1534 + C50146 * C3184 - C7892 * C3181) *
                 C2269 +
             (C50252 * C1546 - C7891 * C1539 + C50146 * C3190 - C7892 * C3185) *
                 C2264 +
             (C13543 - C13544 + C13545 - C13546) * C2270 +
             (C13547 - C13548 + C13549 - C13550) * C49955) *
                C50174) *
               C50013 * C1303) *
              C50231 +
          ((((C7898 - C7897 + C7900 - C7899) * C2269 +
             (C7902 - C7901 + C7904 - C7903) * C2264 +
             (C7906 - C7905 + C7908 - C7907) * C2270 +
             (C7910 - C7909 + C7912 - C7911) * C49955) *
                C50253 +
            (C13787 * C2269 + C13788 * C2264 + C8615 * C2270 + C8616 * C49955) *
                C50174) *
               C50013 * C50284 +
           (((C8088 - C8087 + C8090 - C8089) * C2269 +
             (C8092 - C8091 + C8094 - C8093) * C2264 +
             (C8096 - C8095 + C8098 - C8097) * C2270 +
             (C8100 - C8099 + C8102 - C8101) * C49955) *
                C50253 +
            (C14471 * C2269 + C14472 * C2264 +
             (C8819 - C8820 + C8821 - C8822) * C2270 +
             (C8823 - C8824 + C8825 - C8826) * C49955) *
                C50174) *
               C50013 * C50285 +
           (((C8104 - C8103 + C8106 - C8105) * C2269 +
             (C8108 - C8107 + C8110 - C8109) * C2264 +
             (C8112 - C8111 + C8114 - C8113) * C2270 +
             (C8116 - C8115 + C8118 - C8117) * C49955) *
                C50253 +
            ((C13544 - C13543 + C13546 - C13545) * C2269 +
             (C13548 - C13547 + C13550 - C13549) * C2264 +
             (C7891 * C1536 - C50252 * C1542 + C7892 * C3183 - C50146 * C3188) *
                 C2270 +
             (C7891 * C1543 - C50252 * C1548 + C7892 * C3189 - C50146 * C3192) *
                 C49955) *
                C50174) *
               C50013 * C1303) *
              C49984)) /
        (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C2269 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C2264 +
             (C7897 - C7898 + C7899 - C7900) * C2270 +
             (C7901 - C7902 + C7903 - C7904) * C49955) *
                C50253 +
            ((C13745 - C13746 + C13747 - C13748) * C2269 +
             (C13749 - C13750 + C13751 - C13752) * C2264 + C13785 * C2270 +
             C13786 * C49955) *
                C50174) *
               C50240 +
           (((C13746 - C13745 + C13748 - C13747) * C2269 +
             (C13750 - C13749 + C13752 - C13751) * C2264 + C13787 * C2270 +
             C13788 * C49955) *
                C50253 +
            ((C13761 - C13762 + C13763 - C13764) * C2269 +
             (C13765 - C13766 + C13767 - C13768) * C2264 + C13789 * C2270 +
             C13790 * C49955) *
                C50174) *
               C50077) *
              C50284 +
          ((((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                 C2269 +
             (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                 C2264 +
             (C8087 - C8088 + C8089 - C8090) * C2270 +
             (C8091 - C8092 + C8093 - C8094) * C49955) *
                C50253 +
            ((C14445 - C14446 + C14447 - C14448) * C2269 +
             (C14449 - C14450 + C14451 - C14452) * C2264 + C14469 * C2270 +
             C14470 * C49955) *
                C50174) *
               C50240 +
           (((C14446 - C14445 + C14448 - C14447) * C2269 +
             (C14450 - C14449 + C14452 - C14451) * C2264 + C14471 * C2270 +
             C14472 * C49955) *
                C50253 +
            ((C14991 - C14992 + C14993 - C14994) * C2269 +
             (C14995 - C14996 + C14997 - C14998) * C2264 +
             (C14461 - C14462 + C14463 - C14464) * C2270 +
             (C14465 - C14466 + C14467 - C14468) * C49955) *
                C50174) *
               C50077) *
              C50285 +
          ((((C50252 * C299 - C7891 * C285 + C50146 * C1077 - C7892 * C1073) *
                 C2269 +
             (C50252 * C315 - C7891 * C300 + C50146 * C1085 - C7892 * C1078) *
                 C2264 +
             (C8103 - C8104 + C8105 - C8106) * C2270 +
             (C8107 - C8108 + C8109 - C8110) * C49955) *
                C50253 +
            ((C15645 - C15646 + C15647 - C15648) * C2269 +
             (C15649 - C15650 + C15651 - C15652) * C2264 +
             (C13543 - C13544 + C13545 - C13546) * C2270 +
             (C13547 - C13548 + C13549 - C13550) * C49955) *
                C50174) *
               C50240 +
           (((C15646 - C15645 + C15648 - C15647) * C2269 +
             (C15650 - C15649 + C15652 - C15651) * C2264 +
             (C13544 - C13543 + C13546 - C13545) * C2270 +
             (C13548 - C13547 + C13550 - C13549) * C49955) *
                C50253 +
            ((C7891 * C2635 - C50252 * C2638 + C7892 * C3603 - C50146 * C3605) *
                 C2269 +
             (C7891 * C2639 - C50252 * C2644 + C7892 * C3606 - C50146 * C3609) *
                 C2264 +
             (C7891 * C2636 - C50252 * C2640 + C7892 * C3604 - C50146 * C3607) *
                 C2270 +
             (C7891 * C2641 - C50252 * C2645 + C7892 * C3608 - C50146 * C3610) *
                 C49955) *
                C50174) *
               C50077) *
              C1303) *
         C49978) /
        (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                C2269 +
            (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                C2264 +
            (C7897 - C7898 + C7899 - C7900) * C2270 +
            (C7901 - C7902 + C7903 - C7904) * C49955) *
               C50253 +
           ((C13745 - C13746 + C13747 - C13748) * C2269 +
            (C13749 - C13750 + C13751 - C13752) * C2264 + C13785 * C2270 +
            C13786 * C49955) *
               C50174) *
              C50013 * C1068 +
          (((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                C2269 +
            (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                C2264 +
            (C8087 - C8088 + C8089 - C8090) * C2270 +
            (C8091 - C8092 + C8093 - C8094) * C49955) *
               C50253 +
           ((C14445 - C14446 + C14447 - C14448) * C2269 +
            (C14449 - C14450 + C14451 - C14452) * C2264 + C14469 * C2270 +
            C14470 * C49955) *
               C50174) *
              C50013 * C1069 +
          (((C50252 * C299 - C7891 * C285 + C50146 * C1077 - C7892 * C1073) *
                C2269 +
            (C50252 * C315 - C7891 * C300 + C50146 * C1085 - C7892 * C1078) *
                C2264 +
            (C8103 - C8104 + C8105 - C8106) * C2270 +
            (C8107 - C8108 + C8109 - C8110) * C49955) *
               C50253 +
           ((C50252 * C1538 - C7891 * C1534 + C50146 * C3184 - C7892 * C3181) *
                C2269 +
            (C50252 * C1546 - C7891 * C1539 + C50146 * C3190 - C7892 * C3185) *
                C2264 +
            (C13543 - C13544 + C13545 - C13546) * C2270 +
            (C13547 - C13548 + C13549 - C13550) * C49955) *
               C50174) *
              C50013 * C1070 +
          (((C7891 * C1073 - C50252 * C1077 + C7892 * C2453 - C50146 * C2456) *
                C2269 +
            (C7891 * C1078 - C50252 * C1085 + C7892 * C2457 - C50146 * C2462) *
                C2264 +
            (C7891 * C1074 - C50252 * C1079 + C7892 * C2454 - C50146 * C2458) *
                C2270 +
            (C7891 * C1080 - C50252 * C1086 + C7892 * C2459 - C50146 * C2463) *
                C49955) *
               C50253 +
           ((C7891 * C3181 - C50252 * C3184 + C7892 * C4097 - C50146 * C4099) *
                C2269 +
            (C7891 * C3185 - C50252 * C3190 + C7892 * C4100 - C50146 * C4103) *
                C2264 +
            (C7891 * C3182 - C50252 * C3186 + C7892 * C4098 - C50146 * C4101) *
                C2270 +
            (C7891 * C3187 - C50252 * C3191 + C7892 * C4102 - C50146 * C4104) *
                C49955) *
               C50174) *
              C50013 * C1071) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C2269 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C2264 +
             (C7897 - C7898 + C7899 - C7900) * C2270 +
             (C7901 - C7902 + C7903 - C7904) * C49955) *
                C50253 +
            ((C13745 - C13746 + C13747 - C13748) * C2269 +
             (C13749 - C13750 + C13751 - C13752) * C2264 + C13785 * C2270 +
             C13786 * C49955) *
                C50174) *
               C50013 * C997 +
           (((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                 C2269 +
             (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                 C2264 +
             (C8087 - C8088 + C8089 - C8090) * C2270 +
             (C8091 - C8092 + C8093 - C8094) * C49955) *
                C50253 +
            ((C14445 - C14446 + C14447 - C14448) * C2269 +
             (C14449 - C14450 + C14451 - C14452) * C2264 + C14469 * C2270 +
             C14470 * C49955) *
                C50174) *
               C50013 * C50049) *
              C999 +
          ((((C7898 - C7897 + C7900 - C7899) * C2269 +
             (C7902 - C7901 + C7904 - C7903) * C2264 +
             (C7906 - C7905 + C7908 - C7907) * C2270 +
             (C7910 - C7909 + C7912 - C7911) * C49955) *
                C50253 +
            (C13787 * C2269 + C13788 * C2264 + C8615 * C2270 + C8616 * C49955) *
                C50174) *
               C50013 * C997 +
           (((C8088 - C8087 + C8090 - C8089) * C2269 +
             (C8092 - C8091 + C8094 - C8093) * C2264 +
             (C8096 - C8095 + C8098 - C8097) * C2270 +
             (C8100 - C8099 + C8102 - C8101) * C49955) *
                C50253 +
            (C14471 * C2269 + C14472 * C2264 +
             (C8819 - C8820 + C8821 - C8822) * C2270 +
             (C8823 - C8824 + C8825 - C8826) * C49955) *
                C50174) *
               C50013 * C50049) *
              C1000 +
          (((C7937 * C2269 + C7938 * C2264 +
             (C7914 - C7913 + C7916 - C7915) * C2270 +
             (C7918 - C7917 + C7920 - C7919) * C49955) *
                C50253 +
            (C14185 * C2269 + C14186 * C2264 +
             (C8607 - C8608 + C8609 - C8610) * C2270 +
             (C8611 - C8612 + C8613 - C8614) * C49955) *
                C50174) *
               C50013 * C997 +
           ((C8455 * C2269 + C8456 * C2264 +
             (C8448 - C8447 + C8450 - C8449) * C2270 +
             (C8452 - C8451 + C8454 - C8453) * C49955) *
                C50253 +
            ((C8820 - C8819 + C8822 - C8821) * C2269 +
             (C8824 - C8823 + C8826 - C8825) * C2264 +
             (C7891 * C870 - C50252 * C878 + C7892 * C1537 - C50146 * C1544) *
                 C2270 +
             (C7891 * C879 - C50252 * C885 + C7892 * C1545 - C50146 * C1549) *
                 C49955) *
                C50174) *
               C50013 * C50049) *
              C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C2269 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C2264 +
             (C7897 - C7898 + C7899 - C7900) * C2270 +
             (C7901 - C7902 + C7903 - C7904) * C49955) *
                C50253 +
            ((C13745 - C13746 + C13747 - C13748) * C2269 +
             (C13749 - C13750 + C13751 - C13752) * C2264 + C13785 * C2270 +
             C13786 * C49955) *
                C50174) *
               C443 +
           (((C13746 - C13745 + C13748 - C13747) * C2269 +
             (C13750 - C13749 + C13752 - C13751) * C2264 + C13787 * C2270 +
             C13788 * C49955) *
                C50253 +
            ((C13761 - C13762 + C13763 - C13764) * C2269 +
             (C13765 - C13766 + C13767 - C13768) * C2264 + C13789 * C2270 +
             C13790 * C49955) *
                C50174) *
               C444 +
           (((C13762 - C13761 + C13764 - C13763) * C2269 +
             (C13766 - C13765 + C13768 - C13767) * C2264 + C13791 * C2270 +
             C13792 * C49955) *
                C50253 +
            ((C50252 * C1822 - C7891 * C1818 + C50146 * C4499 - C7892 * C4495) *
                 C2269 +
             (C50252 * C1830 - C7891 * C1823 + C50146 * C4507 - C7892 * C4501) *
                 C2264 +
             (C13777 - C13778 + C13779 - C13780) * C2270 +
             (C13781 - C13782 + C13783 - C13784) * C49955) *
                C50174) *
               C445) *
              C997 +
          ((((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                 C2269 +
             (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                 C2264 +
             (C8087 - C8088 + C8089 - C8090) * C2270 +
             (C8091 - C8092 + C8093 - C8094) * C49955) *
                C50253 +
            ((C14445 - C14446 + C14447 - C14448) * C2269 +
             (C14449 - C14450 + C14451 - C14452) * C2264 + C14469 * C2270 +
             C14470 * C49955) *
                C50174) *
               C443 +
           (((C14446 - C14445 + C14448 - C14447) * C2269 +
             (C14450 - C14449 + C14452 - C14451) * C2264 + C14471 * C2270 +
             C14472 * C49955) *
                C50253 +
            ((C14991 - C14992 + C14993 - C14994) * C2269 +
             (C14995 - C14996 + C14997 - C14998) * C2264 +
             (C14461 - C14462 + C14463 - C14464) * C2270 +
             (C14465 - C14466 + C14467 - C14468) * C49955) *
                C50174) *
               C444 +
           (((C14992 - C14991 + C14994 - C14993) * C2269 +
             (C14996 - C14995 + C14998 - C14997) * C2264 +
             (C14462 - C14461 + C14464 - C14463) * C2270 +
             (C14466 - C14465 + C14468 - C14467) * C49955) *
                C50253 +
            ((C7891 * C4495 - C50252 * C4499 + C7892 * C4496 - C50146 * C4500) *
                 C2269 +
             (C7891 * C4501 - C50252 * C4507 + C7892 * C4502 - C50146 * C4508) *
                 C2264 +
             (C7891 * C4497 - C50252 * C4503 + C7892 * C4498 - C50146 * C4504) *
                 C2270 +
             (C7891 * C4505 - C50252 * C4509 + C7892 * C4506 - C50146 * C4510) *
                 C49955) *
                C50174) *
               C445) *
              C50049) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                  C2269 +
              (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                  C2264 +
              (C7897 - C7898 + C7899 - C7900) * C2270 +
              (C7901 - C7902 + C7903 - C7904) * C49955) *
                 C50253 +
             ((C13745 - C13746 + C13747 - C13748) * C2269 +
              (C13749 - C13750 + C13751 - C13752) * C2264 + C13785 * C2270 +
              C13786 * C49955) *
                 C50174) *
                C50240 +
            (((C13746 - C13745 + C13748 - C13747) * C2269 +
              (C13750 - C13749 + C13752 - C13751) * C2264 + C13787 * C2270 +
              C13788 * C49955) *
                 C50253 +
             ((C13761 - C13762 + C13763 - C13764) * C2269 +
              (C13765 - C13766 + C13767 - C13768) * C2264 + C13789 * C2270 +
              C13790 * C49955) *
                 C50174) *
                C50077) *
               C997 +
           ((((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                  C2269 +
              (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                  C2264 +
              (C8087 - C8088 + C8089 - C8090) * C2270 +
              (C8091 - C8092 + C8093 - C8094) * C49955) *
                 C50253 +
             ((C14445 - C14446 + C14447 - C14448) * C2269 +
              (C14449 - C14450 + C14451 - C14452) * C2264 + C14469 * C2270 +
              C14470 * C49955) *
                 C50174) *
                C50240 +
            (((C14446 - C14445 + C14448 - C14447) * C2269 +
              (C14450 - C14449 + C14452 - C14451) * C2264 + C14471 * C2270 +
              C14472 * C49955) *
                 C50253 +
             ((C14991 - C14992 + C14993 - C14994) * C2269 +
              (C14995 - C14996 + C14997 - C14998) * C2264 +
              (C14461 - C14462 + C14463 - C14464) * C2270 +
              (C14465 - C14466 + C14467 - C14468) * C49955) *
                 C50174) *
                C50077) *
               C50049) *
              C50231 +
          (((((C7898 - C7897 + C7900 - C7899) * C2269 +
              (C7902 - C7901 + C7904 - C7903) * C2264 +
              (C7906 - C7905 + C7908 - C7907) * C2270 +
              (C7910 - C7909 + C7912 - C7911) * C49955) *
                 C50253 +
             (C13787 * C2269 + C13788 * C2264 + C8615 * C2270 +
              C8616 * C49955) *
                 C50174) *
                C50240 +
            ((C13785 * C2269 + C13786 * C2264 + C14185 * C2270 +
              C14186 * C49955) *
                 C50253 +
             (C13791 * C2269 + C13792 * C2264 +
              (C8289 - C8290 + C8291 - C8292) * C2270 +
              (C8293 - C8294 + C8295 - C8296) * C49955) *
                 C50174) *
                C50077) *
               C997 +
           ((((C8088 - C8087 + C8090 - C8089) * C2269 +
              (C8092 - C8091 + C8094 - C8093) * C2264 +
              (C8096 - C8095 + C8098 - C8097) * C2270 +
              (C8100 - C8099 + C8102 - C8101) * C49955) *
                 C50253 +
             (C14471 * C2269 + C14472 * C2264 +
              (C8819 - C8820 + C8821 - C8822) * C2270 +
              (C8823 - C8824 + C8825 - C8826) * C49955) *
                 C50174) *
                C50240 +
            ((C14469 * C2269 + C14470 * C2264 +
              (C8820 - C8819 + C8822 - C8821) * C2270 +
              (C8824 - C8823 + C8826 - C8825) * C49955) *
                 C50253 +
             ((C14462 - C14461 + C14464 - C14463) * C2269 +
              (C14466 - C14465 + C14468 - C14467) * C2264 +
              (C7891 * C1189 - C50252 * C1195 + C7892 * C2637 -
               C50146 * C2642) *
                  C2270 +
              (C7891 * C1196 - C50252 * C1201 + C7892 * C2643 -
               C50146 * C2646) *
                  C49955) *
                 C50174) *
                C50077) *
               C50049) *
              C49984)) /
        (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C2269 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C2264 +
             (C7897 - C7898 + C7899 - C7900) * C2270 +
             (C7901 - C7902 + C7903 - C7904) * C49955) *
                C50253 +
            ((C13745 - C13746 + C13747 - C13748) * C2269 +
             (C13749 - C13750 + C13751 - C13752) * C2264 + C13785 * C2270 +
             C13786 * C49955) *
                C50174) *
               C50013 * C997 +
           (((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                 C2269 +
             (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                 C2264 +
             (C8087 - C8088 + C8089 - C8090) * C2270 +
             (C8091 - C8092 + C8093 - C8094) * C49955) *
                C50253 +
            ((C14445 - C14446 + C14447 - C14448) * C2269 +
             (C14449 - C14450 + C14451 - C14452) * C2264 + C14469 * C2270 +
             C14470 * C49955) *
                C50174) *
               C50013 * C50049) *
              C999 +
          ((((C7898 - C7897 + C7900 - C7899) * C2269 +
             (C7902 - C7901 + C7904 - C7903) * C2264 +
             (C7906 - C7905 + C7908 - C7907) * C2270 +
             (C7910 - C7909 + C7912 - C7911) * C49955) *
                C50253 +
            (C13787 * C2269 + C13788 * C2264 + C8615 * C2270 + C8616 * C49955) *
                C50174) *
               C50013 * C997 +
           (((C8088 - C8087 + C8090 - C8089) * C2269 +
             (C8092 - C8091 + C8094 - C8093) * C2264 +
             (C8096 - C8095 + C8098 - C8097) * C2270 +
             (C8100 - C8099 + C8102 - C8101) * C49955) *
                C50253 +
            (C14471 * C2269 + C14472 * C2264 +
             (C8819 - C8820 + C8821 - C8822) * C2270 +
             (C8823 - C8824 + C8825 - C8826) * C49955) *
                C50174) *
               C50013 * C50049) *
              C1000 +
          (((C7937 * C2269 + C7938 * C2264 +
             (C7914 - C7913 + C7916 - C7915) * C2270 +
             (C7918 - C7917 + C7920 - C7919) * C49955) *
                C50253 +
            (C14185 * C2269 + C14186 * C2264 +
             (C8607 - C8608 + C8609 - C8610) * C2270 +
             (C8611 - C8612 + C8613 - C8614) * C49955) *
                C50174) *
               C50013 * C997 +
           ((C8455 * C2269 + C8456 * C2264 +
             (C8448 - C8447 + C8450 - C8449) * C2270 +
             (C8452 - C8451 + C8454 - C8453) * C49955) *
                C50253 +
            ((C8820 - C8819 + C8822 - C8821) * C2269 +
             (C8824 - C8823 + C8826 - C8825) * C2264 +
             (C7891 * C870 - C50252 * C878 + C7892 * C1537 - C50146 * C1544) *
                 C2270 +
             (C7891 * C879 - C50252 * C885 + C7892 * C1545 - C50146 * C1549) *
                 C49955) *
                C50174) *
               C50013 * C50049) *
              C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                C2269 +
            (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                C2264 +
            (C7897 - C7898 + C7899 - C7900) * C2270 +
            (C7901 - C7902 + C7903 - C7904) * C49955) *
               C50253 +
           ((C13745 - C13746 + C13747 - C13748) * C2269 +
            (C13749 - C13750 + C13751 - C13752) * C2264 + C13785 * C2270 +
            C13786 * C49955) *
               C50174) *
              C50013 * C1068 +
          (((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                C2269 +
            (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                C2264 +
            (C8087 - C8088 + C8089 - C8090) * C2270 +
            (C8091 - C8092 + C8093 - C8094) * C49955) *
               C50253 +
           ((C14445 - C14446 + C14447 - C14448) * C2269 +
            (C14449 - C14450 + C14451 - C14452) * C2264 + C14469 * C2270 +
            C14470 * C49955) *
               C50174) *
              C50013 * C1069 +
          (((C50252 * C299 - C7891 * C285 + C50146 * C1077 - C7892 * C1073) *
                C2269 +
            (C50252 * C315 - C7891 * C300 + C50146 * C1085 - C7892 * C1078) *
                C2264 +
            (C8103 - C8104 + C8105 - C8106) * C2270 +
            (C8107 - C8108 + C8109 - C8110) * C49955) *
               C50253 +
           ((C50252 * C1538 - C7891 * C1534 + C50146 * C3184 - C7892 * C3181) *
                C2269 +
            (C50252 * C1546 - C7891 * C1539 + C50146 * C3190 - C7892 * C3185) *
                C2264 +
            (C13543 - C13544 + C13545 - C13546) * C2270 +
            (C13547 - C13548 + C13549 - C13550) * C49955) *
               C50174) *
              C50013 * C1070 +
          (((C7891 * C1073 - C50252 * C1077 + C7892 * C2453 - C50146 * C2456) *
                C2269 +
            (C7891 * C1078 - C50252 * C1085 + C7892 * C2457 - C50146 * C2462) *
                C2264 +
            (C7891 * C1074 - C50252 * C1079 + C7892 * C2454 - C50146 * C2458) *
                C2270 +
            (C7891 * C1080 - C50252 * C1086 + C7892 * C2459 - C50146 * C2463) *
                C49955) *
               C50253 +
           ((C7891 * C3181 - C50252 * C3184 + C7892 * C4097 - C50146 * C4099) *
                C2269 +
            (C7891 * C3185 - C50252 * C3190 + C7892 * C4100 - C50146 * C4103) *
                C2264 +
            (C7891 * C3182 - C50252 * C3186 + C7892 * C4098 - C50146 * C4101) *
                C2270 +
            (C7891 * C3187 - C50252 * C3191 + C7892 * C4102 - C50146 * C4104) *
                C49955) *
               C50174) *
              C50013 * C1071) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                  C2269 +
              (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                  C2264 +
              (C7897 - C7898 + C7899 - C7900) * C2270 +
              (C7901 - C7902 + C7903 - C7904) * C49955) *
                 C50253 +
             ((C13745 - C13746 + C13747 - C13748) * C2269 +
              (C13749 - C13750 + C13751 - C13752) * C2264 + C13785 * C2270 +
              C13786 * C49955) *
                 C50174) *
                C1648 +
            (((C13746 - C13745 + C13748 - C13747) * C2269 +
              (C13750 - C13749 + C13752 - C13751) * C2264 + C13787 * C2270 +
              C13788 * C49955) *
                 C50253 +
             ((C13761 - C13762 + C13763 - C13764) * C2269 +
              (C13765 - C13766 + C13767 - C13768) * C2264 + C13789 * C2270 +
              C13790 * C49955) *
                 C50174) *
                C50077) *
               C50239 +
           ((((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                  C2269 +
              (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                  C2264 +
              (C8087 - C8088 + C8089 - C8090) * C2270 +
              (C8091 - C8092 + C8093 - C8094) * C49955) *
                 C50253 +
             ((C14445 - C14446 + C14447 - C14448) * C2269 +
              (C14449 - C14450 + C14451 - C14452) * C2264 + C14469 * C2270 +
              C14470 * C49955) *
                 C50174) *
                C1648 +
            (((C14446 - C14445 + C14448 - C14447) * C2269 +
              (C14450 - C14449 + C14452 - C14451) * C2264 + C14471 * C2270 +
              C14472 * C49955) *
                 C50253 +
             ((C14991 - C14992 + C14993 - C14994) * C2269 +
              (C14995 - C14996 + C14997 - C14998) * C2264 +
              (C14461 - C14462 + C14463 - C14464) * C2270 +
              (C14465 - C14466 + C14467 - C14468) * C49955) *
                 C50174) *
                C50077) *
               C50049) *
              C50231 +
          (((((C7898 - C7897 + C7900 - C7899) * C2269 +
              (C7902 - C7901 + C7904 - C7903) * C2264 +
              (C7906 - C7905 + C7908 - C7907) * C2270 +
              (C7910 - C7909 + C7912 - C7911) * C49955) *
                 C50253 +
             (C13787 * C2269 + C13788 * C2264 + C8615 * C2270 +
              C8616 * C49955) *
                 C50174) *
                C1648 +
            ((C13785 * C2269 + C13786 * C2264 + C14185 * C2270 +
              C14186 * C49955) *
                 C50253 +
             (C13791 * C2269 + C13792 * C2264 +
              (C8289 - C8290 + C8291 - C8292) * C2270 +
              (C8293 - C8294 + C8295 - C8296) * C49955) *
                 C50174) *
                C50077) *
               C50239 +
           ((((C8088 - C8087 + C8090 - C8089) * C2269 +
              (C8092 - C8091 + C8094 - C8093) * C2264 +
              (C8096 - C8095 + C8098 - C8097) * C2270 +
              (C8100 - C8099 + C8102 - C8101) * C49955) *
                 C50253 +
             (C14471 * C2269 + C14472 * C2264 +
              (C8819 - C8820 + C8821 - C8822) * C2270 +
              (C8823 - C8824 + C8825 - C8826) * C49955) *
                 C50174) *
                C1648 +
            ((C14469 * C2269 + C14470 * C2264 +
              (C8820 - C8819 + C8822 - C8821) * C2270 +
              (C8824 - C8823 + C8826 - C8825) * C49955) *
                 C50253 +
             ((C14462 - C14461 + C14464 - C14463) * C2269 +
              (C14466 - C14465 + C14468 - C14467) * C2264 +
              (C7891 * C1189 - C50252 * C1195 + C7892 * C2637 -
               C50146 * C2642) *
                  C2270 +
              (C7891 * C1196 - C50252 * C1201 + C7892 * C2643 -
               C50146 * C2646) *
                  C49955) *
                 C50174) *
                C50077) *
               C50049) *
              C49984)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C2269 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C2264 +
             (C7897 - C7898 + C7899 - C7900) * C2270 +
             (C7901 - C7902 + C7903 - C7904) * C49955) *
                C50253 +
            ((C13745 - C13746 + C13747 - C13748) * C2269 +
             (C13749 - C13750 + C13751 - C13752) * C2264 + C13785 * C2270 +
             C13786 * C49955) *
                C50174) *
               C50286 +
           (((C13746 - C13745 + C13748 - C13747) * C2269 +
             (C13750 - C13749 + C13752 - C13751) * C2264 + C13787 * C2270 +
             C13788 * C49955) *
                C50253 +
            ((C13761 - C13762 + C13763 - C13764) * C2269 +
             (C13765 - C13766 + C13767 - C13768) * C2264 + C13789 * C2270 +
             C13790 * C49955) *
                C50174) *
               C50287 +
           (((C13762 - C13761 + C13764 - C13763) * C2269 +
             (C13766 - C13765 + C13768 - C13767) * C2264 + C13791 * C2270 +
             C13792 * C49955) *
                C50253 +
            ((C16171 - C16172 + C16173 - C16174) * C2269 +
             (C16175 - C16176 + C16177 - C16178) * C2264 +
             (C13777 - C13778 + C13779 - C13780) * C2270 +
             (C13781 - C13782 + C13783 - C13784) * C49955) *
                C50174) *
               C2064) *
              C50239 +
          ((((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                 C2269 +
             (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                 C2264 +
             (C8087 - C8088 + C8089 - C8090) * C2270 +
             (C8091 - C8092 + C8093 - C8094) * C49955) *
                C50253 +
            ((C14445 - C14446 + C14447 - C14448) * C2269 +
             (C14449 - C14450 + C14451 - C14452) * C2264 + C14469 * C2270 +
             C14470 * C49955) *
                C50174) *
               C50286 +
           (((C14446 - C14445 + C14448 - C14447) * C2269 +
             (C14450 - C14449 + C14452 - C14451) * C2264 + C14471 * C2270 +
             C14472 * C49955) *
                C50253 +
            ((C14991 - C14992 + C14993 - C14994) * C2269 +
             (C14995 - C14996 + C14997 - C14998) * C2264 +
             (C14461 - C14462 + C14463 - C14464) * C2270 +
             (C14465 - C14466 + C14467 - C14468) * C49955) *
                C50174) *
               C50287 +
           (((C14992 - C14991 + C14994 - C14993) * C2269 +
             (C14996 - C14995 + C14998 - C14997) * C2264 +
             (C14462 - C14461 + C14464 - C14463) * C2270 +
             (C14466 - C14465 + C14468 - C14467) * C49955) *
                C50253 +
            ((C7891 * C4495 - C50252 * C4499 + C7892 * C4496 - C50146 * C4500) *
                 C2269 +
             (C7891 * C4501 - C50252 * C4507 + C7892 * C4502 - C50146 * C4508) *
                 C2264 +
             (C7891 * C4497 - C50252 * C4503 + C7892 * C4498 - C50146 * C4504) *
                 C2270 +
             (C7891 * C4505 - C50252 * C4509 + C7892 * C4506 - C50146 * C4510) *
                 C49955) *
                C50174) *
               C2064) *
              C50049) *
         C49978) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C2269 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C2264 +
             (C7897 - C7898 + C7899 - C7900) * C2270 +
             (C7901 - C7902 + C7903 - C7904) * C49955) *
                C50253 +
            ((C13745 - C13746 + C13747 - C13748) * C2269 +
             (C13749 - C13750 + C13751 - C13752) * C2264 + C13785 * C2270 +
             C13786 * C49955) *
                C50174) *
               C1648 +
           (((C13746 - C13745 + C13748 - C13747) * C2269 +
             (C13750 - C13749 + C13752 - C13751) * C2264 + C13787 * C2270 +
             C13788 * C49955) *
                C50253 +
            ((C13761 - C13762 + C13763 - C13764) * C2269 +
             (C13765 - C13766 + C13767 - C13768) * C2264 + C13789 * C2270 +
             C13790 * C49955) *
                C50174) *
               C50077) *
              C276 +
          ((((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                 C2269 +
             (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                 C2264 +
             (C8087 - C8088 + C8089 - C8090) * C2270 +
             (C8091 - C8092 + C8093 - C8094) * C49955) *
                C50253 +
            ((C14445 - C14446 + C14447 - C14448) * C2269 +
             (C14449 - C14450 + C14451 - C14452) * C2264 + C14469 * C2270 +
             C14470 * C49955) *
                C50174) *
               C1648 +
           (((C14446 - C14445 + C14448 - C14447) * C2269 +
             (C14450 - C14449 + C14452 - C14451) * C2264 + C14471 * C2270 +
             C14472 * C49955) *
                C50253 +
            ((C14991 - C14992 + C14993 - C14994) * C2269 +
             (C14995 - C14996 + C14997 - C14998) * C2264 +
             (C14461 - C14462 + C14463 - C14464) * C2270 +
             (C14465 - C14466 + C14467 - C14468) * C49955) *
                C50174) *
               C50077) *
              C277 +
          ((((C50252 * C299 - C7891 * C285 + C50146 * C1077 - C7892 * C1073) *
                 C2269 +
             (C50252 * C315 - C7891 * C300 + C50146 * C1085 - C7892 * C1078) *
                 C2264 +
             (C8103 - C8104 + C8105 - C8106) * C2270 +
             (C8107 - C8108 + C8109 - C8110) * C49955) *
                C50253 +
            ((C15645 - C15646 + C15647 - C15648) * C2269 +
             (C15649 - C15650 + C15651 - C15652) * C2264 +
             (C13543 - C13544 + C13545 - C13546) * C2270 +
             (C13547 - C13548 + C13549 - C13550) * C49955) *
                C50174) *
               C1648 +
           (((C15646 - C15645 + C15648 - C15647) * C2269 +
             (C15650 - C15649 + C15652 - C15651) * C2264 +
             (C13544 - C13543 + C13546 - C13545) * C2270 +
             (C13548 - C13547 + C13550 - C13549) * C49955) *
                C50253 +
            ((C7891 * C2635 - C50252 * C2638 + C7892 * C3603 - C50146 * C3605) *
                 C2269 +
             (C7891 * C2639 - C50252 * C2644 + C7892 * C3606 - C50146 * C3609) *
                 C2264 +
             (C7891 * C2636 - C50252 * C2640 + C7892 * C3604 - C50146 * C3607) *
                 C2270 +
             (C7891 * C2641 - C50252 * C2645 + C7892 * C3608 - C50146 * C3610) *
                 C49955) *
                C50174) *
               C50077) *
              C278) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C2269 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C2264 +
             (C7897 - C7898 + C7899 - C7900) * C2270 +
             (C7901 - C7902 + C7903 - C7904) * C49955) *
                C50253 +
            ((C13745 - C13746 + C13747 - C13748) * C2269 +
             (C13749 - C13750 + C13751 - C13752) * C2264 + C13785 * C2270 +
             C13786 * C49955) *
                C50174) *
               C1648 +
           (((C13746 - C13745 + C13748 - C13747) * C2269 +
             (C13750 - C13749 + C13752 - C13751) * C2264 + C13787 * C2270 +
             C13788 * C49955) *
                C50253 +
            ((C13761 - C13762 + C13763 - C13764) * C2269 +
             (C13765 - C13766 + C13767 - C13768) * C2264 + C13789 * C2270 +
             C13790 * C49955) *
                C50174) *
               C50077) *
              C49997 * C999 +
          ((((C7898 - C7897 + C7900 - C7899) * C2269 +
             (C7902 - C7901 + C7904 - C7903) * C2264 +
             (C7906 - C7905 + C7908 - C7907) * C2270 +
             (C7910 - C7909 + C7912 - C7911) * C49955) *
                C50253 +
            (C13787 * C2269 + C13788 * C2264 + C8615 * C2270 + C8616 * C49955) *
                C50174) *
               C1648 +
           ((C13785 * C2269 + C13786 * C2264 + C14185 * C2270 +
             C14186 * C49955) *
                C50253 +
            (C13791 * C2269 + C13792 * C2264 +
             (C8289 - C8290 + C8291 - C8292) * C2270 +
             (C8293 - C8294 + C8295 - C8296) * C49955) *
                C50174) *
               C50077) *
              C49997 * C1000 +
          (((C7937 * C2269 + C7938 * C2264 +
             (C7914 - C7913 + C7916 - C7915) * C2270 +
             (C7918 - C7917 + C7920 - C7919) * C49955) *
                C50253 +
            (C14185 * C2269 + C14186 * C2264 +
             (C8607 - C8608 + C8609 - C8610) * C2270 +
             (C8611 - C8612 + C8613 - C8614) * C49955) *
                C50174) *
               C1648 +
           ((C8615 * C2269 + C8616 * C2264 +
             (C8608 - C8607 + C8610 - C8609) * C2270 +
             (C8612 - C8611 + C8614 - C8613) * C49955) *
                C50253 +
            ((C8290 - C8289 + C8292 - C8291) * C2269 +
             (C8294 - C8293 + C8296 - C8295) * C2264 +
             (C7891 * C453 - C50252 * C470 + C7892 * C1190 - C50146 * C1197) *
                 C2270 +
             (C7891 * C471 - C50252 * C483 + C7892 * C1198 - C50146 * C1202) *
                 C49955) *
                C50174) *
               C50077) *
              C49997 * C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                C2269 +
            (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                C2264 +
            (C7897 - C7898 + C7899 - C7900) * C2270 +
            (C7901 - C7902 + C7903 - C7904) * C49955) *
               C50253 +
           ((C13745 - C13746 + C13747 - C13748) * C2269 +
            (C13749 - C13750 + C13751 - C13752) * C2264 + C13785 * C2270 +
            C13786 * C49955) *
               C50174) *
              C1814 +
          (((C13746 - C13745 + C13748 - C13747) * C2269 +
            (C13750 - C13749 + C13752 - C13751) * C2264 + C13787 * C2270 +
            C13788 * C49955) *
               C50253 +
           ((C13761 - C13762 + C13763 - C13764) * C2269 +
            (C13765 - C13766 + C13767 - C13768) * C2264 + C13789 * C2270 +
            C13790 * C49955) *
               C50174) *
              C1815 +
          (((C13762 - C13761 + C13764 - C13763) * C2269 +
            (C13766 - C13765 + C13768 - C13767) * C2264 + C13791 * C2270 +
            C13792 * C49955) *
               C50253 +
           ((C16171 - C16172 + C16173 - C16174) * C2269 +
            (C16175 - C16176 + C16177 - C16178) * C2264 +
            (C13777 - C13778 + C13779 - C13780) * C2270 +
            (C13781 - C13782 + C13783 - C13784) * C49955) *
               C50174) *
              C1816 +
          (((C16172 - C16171 + C16174 - C16173) * C2269 +
            (C16176 - C16175 + C16178 - C16177) * C2264 +
            (C13778 - C13777 + C13780 - C13779) * C2270 +
            (C13782 - C13781 + C13784 - C13783) * C49955) *
               C50253 +
           ((C7891 * C5402 - C50252 * C5405 + C7892 * C6376 - C50146 * C6378) *
                C2269 +
            (C7891 * C5406 - C50252 * C5411 + C7892 * C6379 - C50146 * C6382) *
                C2264 +
            (C7891 * C5403 - C50252 * C5407 + C7892 * C6377 - C50146 * C6380) *
                C2270 +
            (C7891 * C5408 - C50252 * C5412 + C7892 * C6381 - C50146 * C6383) *
                C49955) *
               C50174) *
              C1817) *
         C49997 * C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C2269 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C2264 +
             (C7897 - C7898 + C7899 - C7900) * C2270 +
             (C7901 - C7902 + C7903 - C7904) * C49955) *
                C50253 +
            ((C13745 - C13746 + C13747 - C13748) * C2269 +
             (C13749 - C13750 + C13751 - C13752) * C2264 + C13785 * C2270 +
             C13786 * C49955) *
                C50174) *
               C50286 +
           (((C13746 - C13745 + C13748 - C13747) * C2269 +
             (C13750 - C13749 + C13752 - C13751) * C2264 + C13787 * C2270 +
             C13788 * C49955) *
                C50253 +
            ((C13761 - C13762 + C13763 - C13764) * C2269 +
             (C13765 - C13766 + C13767 - C13768) * C2264 + C13789 * C2270 +
             C13790 * C49955) *
                C50174) *
               C50287 +
           (((C13762 - C13761 + C13764 - C13763) * C2269 +
             (C13766 - C13765 + C13768 - C13767) * C2264 + C13791 * C2270 +
             C13792 * C49955) *
                C50253 +
            ((C16171 - C16172 + C16173 - C16174) * C2269 +
             (C16175 - C16176 + C16177 - C16178) * C2264 +
             (C13777 - C13778 + C13779 - C13780) * C2270 +
             (C13781 - C13782 + C13783 - C13784) * C49955) *
                C50174) *
               C2064) *
              C49997 * C50231 +
          ((((C7898 - C7897 + C7900 - C7899) * C2269 +
             (C7902 - C7901 + C7904 - C7903) * C2264 +
             (C7906 - C7905 + C7908 - C7907) * C2270 +
             (C7910 - C7909 + C7912 - C7911) * C49955) *
                C50253 +
            (C13787 * C2269 + C13788 * C2264 + C8615 * C2270 + C8616 * C49955) *
                C50174) *
               C50286 +
           ((C13785 * C2269 + C13786 * C2264 + C14185 * C2270 +
             C14186 * C49955) *
                C50253 +
            (C13791 * C2269 + C13792 * C2264 +
             (C8289 - C8290 + C8291 - C8292) * C2270 +
             (C8293 - C8294 + C8295 - C8296) * C49955) *
                C50174) *
               C50287 +
           ((C13789 * C2269 + C13790 * C2264 +
             (C8290 - C8289 + C8292 - C8291) * C2270 +
             (C8294 - C8293 + C8296 - C8295) * C49955) *
                C50253 +
            ((C13778 - C13777 + C13780 - C13779) * C2269 +
             (C13782 - C13781 + C13784 - C13783) * C2264 +
             (C7891 * C1820 - C50252 * C1826 + C7892 * C5962 - C50146 * C5963) *
                 C2270 +
             (C7891 * C1827 - C50252 * C1832 + C7892 * C5964 - C50146 * C5965) *
                 C49955) *
                C50174) *
               C2064) *
              C49997 * C49984)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C2269 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C2264 +
             (C7897 - C7898 + C7899 - C7900) * C2270 +
             (C7901 - C7902 + C7903 - C7904) * C49955) *
                C50253 +
            ((C13745 - C13746 + C13747 - C13748) * C2269 +
             (C13749 - C13750 + C13751 - C13752) * C2264 + C13785 * C2270 +
             C13786 * C49955) *
                C50174) *
               C1648 +
           (((C13746 - C13745 + C13748 - C13747) * C2269 +
             (C13750 - C13749 + C13752 - C13751) * C2264 + C13787 * C2270 +
             C13788 * C49955) *
                C50253 +
            ((C13761 - C13762 + C13763 - C13764) * C2269 +
             (C13765 - C13766 + C13767 - C13768) * C2264 + C13789 * C2270 +
             C13790 * C49955) *
                C50174) *
               C50077) *
              C49997 * C999 +
          ((((C7898 - C7897 + C7900 - C7899) * C2269 +
             (C7902 - C7901 + C7904 - C7903) * C2264 +
             (C7906 - C7905 + C7908 - C7907) * C2270 +
             (C7910 - C7909 + C7912 - C7911) * C49955) *
                C50253 +
            (C13787 * C2269 + C13788 * C2264 + C8615 * C2270 + C8616 * C49955) *
                C50174) *
               C1648 +
           ((C13785 * C2269 + C13786 * C2264 + C14185 * C2270 +
             C14186 * C49955) *
                C50253 +
            (C13791 * C2269 + C13792 * C2264 +
             (C8289 - C8290 + C8291 - C8292) * C2270 +
             (C8293 - C8294 + C8295 - C8296) * C49955) *
                C50174) *
               C50077) *
              C49997 * C1000 +
          (((C7937 * C2269 + C7938 * C2264 +
             (C7914 - C7913 + C7916 - C7915) * C2270 +
             (C7918 - C7917 + C7920 - C7919) * C49955) *
                C50253 +
            (C14185 * C2269 + C14186 * C2264 +
             (C8607 - C8608 + C8609 - C8610) * C2270 +
             (C8611 - C8612 + C8613 - C8614) * C49955) *
                C50174) *
               C1648 +
           ((C8615 * C2269 + C8616 * C2264 +
             (C8608 - C8607 + C8610 - C8609) * C2270 +
             (C8612 - C8611 + C8614 - C8613) * C49955) *
                C50253 +
            ((C8290 - C8289 + C8292 - C8291) * C2269 +
             (C8294 - C8293 + C8296 - C8295) * C2264 +
             (C7891 * C453 - C50252 * C470 + C7892 * C1190 - C50146 * C1197) *
                 C2270 +
             (C7891 * C471 - C50252 * C483 + C7892 * C1198 - C50146 * C1202) *
                 C49955) *
                C50174) *
               C50077) *
              C49997 * C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C2269 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C2264 +
             (C7897 - C7898 + C7899 - C7900) * C2270 +
             (C7901 - C7902 + C7903 - C7904) * C49955) *
                C50253 +
            ((C13745 - C13746 + C13747 - C13748) * C2269 +
             (C13749 - C13750 + C13751 - C13752) * C2264 + C13785 * C2270 +
             C13786 * C49955) *
                C50174) *
               C1648 +
           (((C13746 - C13745 + C13748 - C13747) * C2269 +
             (C13750 - C13749 + C13752 - C13751) * C2264 + C13787 * C2270 +
             C13788 * C49955) *
                C50253 +
            ((C13761 - C13762 + C13763 - C13764) * C2269 +
             (C13765 - C13766 + C13767 - C13768) * C2264 + C13789 * C2270 +
             C13790 * C49955) *
                C50174) *
               C50077) *
              C276 +
          ((((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                 C2269 +
             (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                 C2264 +
             (C8087 - C8088 + C8089 - C8090) * C2270 +
             (C8091 - C8092 + C8093 - C8094) * C49955) *
                C50253 +
            ((C14445 - C14446 + C14447 - C14448) * C2269 +
             (C14449 - C14450 + C14451 - C14452) * C2264 + C14469 * C2270 +
             C14470 * C49955) *
                C50174) *
               C1648 +
           (((C14446 - C14445 + C14448 - C14447) * C2269 +
             (C14450 - C14449 + C14452 - C14451) * C2264 + C14471 * C2270 +
             C14472 * C49955) *
                C50253 +
            ((C14991 - C14992 + C14993 - C14994) * C2269 +
             (C14995 - C14996 + C14997 - C14998) * C2264 +
             (C14461 - C14462 + C14463 - C14464) * C2270 +
             (C14465 - C14466 + C14467 - C14468) * C49955) *
                C50174) *
               C50077) *
              C277 +
          ((((C50252 * C299 - C7891 * C285 + C50146 * C1077 - C7892 * C1073) *
                 C2269 +
             (C50252 * C315 - C7891 * C300 + C50146 * C1085 - C7892 * C1078) *
                 C2264 +
             (C8103 - C8104 + C8105 - C8106) * C2270 +
             (C8107 - C8108 + C8109 - C8110) * C49955) *
                C50253 +
            ((C15645 - C15646 + C15647 - C15648) * C2269 +
             (C15649 - C15650 + C15651 - C15652) * C2264 +
             (C13543 - C13544 + C13545 - C13546) * C2270 +
             (C13547 - C13548 + C13549 - C13550) * C49955) *
                C50174) *
               C1648 +
           (((C15646 - C15645 + C15648 - C15647) * C2269 +
             (C15650 - C15649 + C15652 - C15651) * C2264 +
             (C13544 - C13543 + C13546 - C13545) * C2270 +
             (C13548 - C13547 + C13550 - C13549) * C49955) *
                C50253 +
            ((C7891 * C2635 - C50252 * C2638 + C7892 * C3603 - C50146 * C3605) *
                 C2269 +
             (C7891 * C2639 - C50252 * C2644 + C7892 * C3606 - C50146 * C3609) *
                 C2264 +
             (C7891 * C2636 - C50252 * C2640 + C7892 * C3604 - C50146 * C3607) *
                 C2270 +
             (C7891 * C2641 - C50252 * C2645 + C7892 * C3608 - C50146 * C3610) *
                 C49955) *
                C50174) *
               C50077) *
              C278) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
             C2263 * C299 - C2268 * C285) *
                C2269 +
            (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
             C2263 * C315 - C2268 * C300) *
                C2264 +
            (C2272 - C2273 + C2274 - C2275 + C2276 - C2277) * C2270 +
            (C2278 - C2279 + C2280 - C2281 + C2282 - C2283) * C49955) *
               C50110 * C50013 * C50239 +
           ((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
             C2268 * C1073 - C2263 * C1077) *
                C2269 +
            (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
             C2268 * C1078 - C2263 * C1085) *
                C2264 +
            (C2466 - C2467 + C2468 - C2469 + C2470 - C2471) * C2270 +
            (C2472 - C2473 + C2474 - C2475 + C2476 - C2477) * C49955) *
               C50110 * C50013 * C50049) *
              C50282 +
          (((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C2269 +
            (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C2264 +
            (C2284 - C2285 + C2286 - C2287 + C2288 - C2289) * C2270 +
            (C2290 - C2291 + C2292 - C2293 + C2294 - C2295) * C49955) *
               C50110 * C50013 * C50239 +
           ((C2467 - C2466 + C2469 - C2468 + C2471 - C2470) * C2269 +
            (C2473 - C2472 + C2475 - C2474 + C2477 - C2476) * C2264 +
            (C2818 - C2819 + C2820 - C2821 + C2822 - C2823) * C2270 +
            (C2824 - C2825 + C2826 - C2827 + C2828 - C2829) * C49955) *
               C50110 * C50013 * C50049) *
              C50283 +
          (((C2285 - C2284 + C2287 - C2286 + C2289 - C2288) * C2269 +
            (C2291 - C2290 + C2293 - C2292 + C2295 - C2294) * C2264 +
            (C2296 - C2297 + C2298 - C2299 + C2300 - C2301) * C2270 +
            (C2302 - C2303 + C2304 - C2305 + C2306 - C2307) * C49955) *
               C50110 * C50013 * C50239 +
           ((C2819 - C2818 + C2821 - C2820 + C2823 - C2822) * C2269 +
            (C2825 - C2824 + C2827 - C2826 + C2829 - C2828) * C2264 +
            (C2266 * C284 - C2261 * C297 + C2267 * C288 - C2262 * C305 +
             C2268 * C1076 - C2263 * C1083) *
                C2270 +
            (C2266 * C298 - C2261 * C314 + C2267 * C306 - C2262 * C318 +
             C2268 * C1084 - C2263 * C1088) *
                C49955) *
               C50110 * C50013 * C50049) *
              C612)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C118 +
            (C50094 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50110 * C50013 * C50239 +
           ((C117 * C281 - C50094 * C291) * C118 +
            (C117 * C292 - C50094 * C311) * C106 + (C322 - C323) * C119 +
            (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
            C621 * C109) *
               C50110 * C50013 * C50049) *
              C50282 +
          (((C152 - C151) * C118 + (C154 - C153) * C106 + (C156 - C155) * C119 +
            (C158 - C157) * C107 + C175 * C120 + C176 * C108 + C177 * C121 +
            C178 * C109) *
               C50110 * C50013 * C50239 +
           ((C323 - C322) * C118 + (C325 - C324) * C106 + (C327 - C326) * C119 +
            (C329 - C328) * C107 + (C331 - C330) * C120 + (C333 - C332) * C108 +
            (C622 - C623) * C121 + (C624 - C625) * C109) *
               C50110 * C50013 * C50049) *
              C50283 +
          ((C171 * C118 + C172 * C106 + C173 * C119 + C174 * C107 +
            (C164 - C163) * C120 + (C166 - C165) * C108 + (C167 - C168) * C121 +
            (C169 - C170) * C109) *
               C50110 * C50013 * C50239 +
           (C618 * C118 + C619 * C106 + C620 * C119 + C621 * C107 +
            (C623 - C622) * C120 + (C625 - C624) * C108 +
            (C117 * C613 - C50094 * C614) * C121 +
            (C117 * C615 - C50094 * C616) * C109) *
               C50110 * C50013 * C50049) *
              C612)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C2269 +
             (C50094 * C143 - C117 * C130) * C2264 + (C151 - C152) * C2270 +
             (C153 - C154) * C49955) *
                C5095 +
            ((C5415 - C5416) * C2269 + (C5417 - C5418) * C2264 + C5419 * C2270 +
             C5420 * C49955) *
                C5096 +
            C5468 * C5097) *
               C50013 * C50239 +
           (((C117 * C281 - C50094 * C291) * C2269 +
             (C117 * C292 - C50094 * C311) * C2264 + (C322 - C323) * C2270 +
             (C324 - C325) * C49955) *
                C5095 +
            ((C117 * C867 - C50094 * C872) * C2269 +
             (C117 * C873 - C50094 * C882) * C2264 + (C889 - C888) * C2270 +
             (C891 - C890) * C49955) *
                C5096 +
            ((C117 * C1187 - C50094 * C1191) * C2269 +
             (C117 * C1192 - C50094 * C1199) * C2264 + (C5245 - C5246) * C2270 +
             (C5247 - C5248) * C49955) *
                C5097) *
               C50013 * C50049) *
              C50282 +
          ((((C152 - C151) * C2269 + (C154 - C153) * C2264 +
             (C156 - C155) * C2270 + (C158 - C157) * C49955) *
                C5095 +
            (C5427 * C2269 + C5428 * C2264 + C730 * C2270 + C731 * C49955) *
                C5096 +
            C5467 * C5097) *
               C50013 * C50239 +
           (((C323 - C322) * C2269 + (C325 - C324) * C2264 +
             (C327 - C326) * C2270 + (C329 - C328) * C49955) *
                C5095 +
            ((C888 - C889) * C2269 + (C890 - C891) * C2264 +
             (C892 - C893) * C2270 + (C894 - C895) * C49955) *
                C5096 +
            ((C5246 - C5245) * C2269 + (C5248 - C5247) * C2264 +
             (C5615 - C5616) * C2270 + (C5617 - C5618) * C49955) *
                C5097) *
               C50013 * C50049) *
              C50283 +
          (((C171 * C2269 + C172 * C2264 + C173 * C2270 + C174 * C49955) *
                C5095 +
            ((C492 - C491) * C2269 + (C494 - C493) * C2264 +
             (C496 - C495) * C2270 + (C498 - C497) * C49955) *
                C5096 +
            ((C503 - C504) * C2269 + (C505 - C506) * C2264 +
             (C507 - C508) * C2270 + (C509 - C510) * C49955) *
                C5097) *
               C50013 * C50239 +
           ((C618 * C2269 + C619 * C2264 + C620 * C2270 + C621 * C49955) *
                C5095 +
            ((C893 - C892) * C2269 + (C895 - C894) * C2264 +
             (C897 - C896) * C2270 + (C899 - C898) * C49955) *
                C5096 +
            ((C5616 - C5615) * C2269 + (C5618 - C5617) * C2264 +
             (C117 * C1190 - C50094 * C1197) * C2270 +
             (C117 * C1198 - C50094 * C1202) * C49955) *
                C5097) *
               C50013 * C50049) *
              C612)) /
            (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
              C2263 * C299 - C2268 * C285) *
                 C2269 +
             (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
              C2263 * C315 - C2268 * C300) *
                 C2264 +
             (C2272 - C2273 + C2274 - C2275 + C2276 - C2277) * C2270 +
             (C2278 - C2279 + C2280 - C2281 + C2282 - C2283) * C49955) *
                C50110 * C50240 +
            ((C2266 * C446 - C2261 * C456 + C2267 * C867 - C2262 * C872 +
              C2268 * C1534 - C2263 * C1538) *
                 C2269 +
             (C2266 * C457 - C2261 * C476 + C2267 * C873 - C2262 * C882 +
              C2268 * C1539 - C2263 * C1546) *
                 C2264 +
             (C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C2270 +
             (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49955) *
                C50110 * C50077) *
               C50239 +
           (((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
              C2268 * C1073 - C2263 * C1077) *
                 C2269 +
             (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
              C2268 * C1078 - C2263 * C1085) *
                 C2264 +
             (C2466 - C2467 + C2468 - C2469 + C2470 - C2471) * C2270 +
             (C2472 - C2473 + C2474 - C2475 + C2476 - C2477) * C49955) *
                C50110 * C50240 +
            ((C2261 * C872 - C2266 * C867 + C2262 * C1538 - C2267 * C1534 +
              C2263 * C3184 - C2268 * C3181) *
                 C2269 +
             (C2261 * C882 - C2266 * C873 + C2262 * C1546 - C2267 * C1539 +
              C2263 * C3190 - C2268 * C3185) *
                 C2264 +
             (C3194 - C3195 + C3196 - C3197 + C3198 - C3199) * C2270 +
             (C3200 - C3201 + C3202 - C3203 + C3204 - C3205) * C49955) *
                C50110 * C50077) *
               C50049) *
              C279 +
          ((((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C2269 +
             (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C2264 +
             (C2284 - C2285 + C2286 - C2287 + C2288 - C2289) * C2270 +
             (C2290 - C2291 + C2292 - C2293 + C2294 - C2295) * C49955) *
                C50110 * C50240 +
            ((C2649 - C2648 + C2651 - C2650 + C2653 - C2652) * C2269 +
             (C2655 - C2654 + C2657 - C2656 + C2659 - C2658) * C2264 +
             (C2976 - C2977 + C2978 - C2979 + C2980 - C2981) * C2270 +
             (C2982 - C2983 + C2984 - C2985 + C2986 - C2987) * C49955) *
                C50110 * C50077) *
               C50239 +
           (((C2467 - C2466 + C2469 - C2468 + C2471 - C2470) * C2269 +
             (C2473 - C2472 + C2475 - C2474 + C2477 - C2476) * C2264 +
             (C2818 - C2819 + C2820 - C2821 + C2822 - C2823) * C2270 +
             (C2824 - C2825 + C2826 - C2827 + C2828 - C2829) * C49955) *
                C50110 * C50240 +
            ((C3195 - C3194 + C3197 - C3196 + C3199 - C3198) * C2269 +
             (C3201 - C3200 + C3203 - C3202 + C3205 - C3204) * C2264 +
             (C2266 * C869 - C2261 * C876 + C2267 * C1536 - C2262 * C1542 +
              C2268 * C3183 - C2263 * C3188) *
                 C2270 +
             (C2266 * C877 - C2261 * C884 + C2267 * C1543 - C2262 * C1548 +
              C2268 * C3189 - C2263 * C3192) *
                 C49955) *
                C50110 * C50077) *
               C50049) *
              C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C118 +
             (C50094 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
             (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
             C174 * C109) *
                C50110 * C50240 +
            ((C117 * C446 - C50094 * C456) * C118 +
             (C117 * C457 - C50094 * C476) * C106 + (C487 - C488) * C119 +
             (C489 - C490) * C107 + C730 * C120 + C731 * C108 + C732 * C121 +
             C733 * C109) *
                C50110 * C50077) *
               C50239 +
           (((C117 * C281 - C50094 * C291) * C118 +
             (C117 * C292 - C50094 * C311) * C106 + (C322 - C323) * C119 +
             (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
             C621 * C109) *
                C50110 * C50240 +
            ((C50094 * C872 - C117 * C867) * C118 +
             (C50094 * C882 - C117 * C873) * C106 + (C888 - C889) * C119 +
             (C890 - C891) * C107 + (C892 - C893) * C120 +
             (C894 - C895) * C108 + (C896 - C897) * C121 +
             (C898 - C899) * C109) *
                C50110 * C50077) *
               C50049) *
              C279 +
          ((((C152 - C151) * C118 + (C154 - C153) * C106 +
             (C156 - C155) * C119 + (C158 - C157) * C107 + C175 * C120 +
             C176 * C108 + C177 * C121 + C178 * C109) *
                C50110 * C50240 +
            ((C488 - C487) * C118 + (C490 - C489) * C106 +
             (C492 - C491) * C119 + (C494 - C493) * C107 +
             (C496 - C495) * C120 + (C498 - C497) * C108 +
             (C734 - C735) * C121 + (C736 - C737) * C109) *
                C50110 * C50077) *
               C50239 +
           (((C323 - C322) * C118 + (C325 - C324) * C106 +
             (C327 - C326) * C119 + (C329 - C328) * C107 +
             (C331 - C330) * C120 + (C333 - C332) * C108 +
             (C622 - C623) * C121 + (C624 - C625) * C109) *
                C50110 * C50240 +
            ((C889 - C888) * C118 + (C891 - C890) * C106 +
             (C893 - C892) * C119 + (C895 - C894) * C107 +
             (C897 - C896) * C120 + (C899 - C898) * C108 +
             (C117 * C871 - C50094 * C880) * C121 +
             (C117 * C881 - C50094 * C886) * C109) *
                C50110 * C50077) *
               C50049) *
              C49984)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C50094 * C129 - C117 * C122) * C2269 +
              (C50094 * C143 - C117 * C130) * C2264 + (C151 - C152) * C2270 +
              (C153 - C154) * C49955) *
                 C5095 +
             ((C5415 - C5416) * C2269 + (C5417 - C5418) * C2264 +
              C5419 * C2270 + C5420 * C49955) *
                 C5096 +
             C5468 * C5097) *
                C50240 +
            (((C5416 - C5415) * C2269 + (C5418 - C5417) * C2264 +
              C5427 * C2270 + C5428 * C49955) *
                 C5095 +
             ((C5422 - C5421) * C2269 + (C5424 - C5423) * C2264 +
              C5429 * C2270 + C5430 * C49955) *
                 C5096 +
             ((C5431 - C5432) * C2269 + (C5433 - C5434) * C2264 +
              C5453 * C2270 + C5454 * C49955) *
                 C5097) *
                C50077) *
               C50239 +
           ((((C117 * C281 - C50094 * C291) * C2269 +
              (C117 * C292 - C50094 * C311) * C2264 + (C322 - C323) * C2270 +
              (C324 - C325) * C49955) *
                 C5095 +
             ((C5967 - C5968) * C2269 + (C5969 - C5970) * C2264 +
              C5971 * C2270 + C5972 * C49955) *
                 C5096 +
             ((C5973 - C5974) * C2269 + (C5975 - C5976) * C2264 +
              C5977 * C2270 + C5978 * C49955) *
                 C5097) *
                C50240 +
            (((C5968 - C5967) * C2269 + (C5970 - C5969) * C2264 +
              C5979 * C2270 + C5980 * C49955) *
                 C5095 +
             ((C5974 - C5973) * C2269 + (C5976 - C5975) * C2264 +
              C5981 * C2270 + C5982 * C49955) *
                 C5096 +
             ((C50094 * C4499 - C117 * C4495) * C2269 +
              (C50094 * C4507 - C117 * C4501) * C2264 +
              (C5983 - C5984) * C2270 + (C5985 - C5986) * C49955) *
                 C5097) *
                C50077) *
               C50049) *
              C279 +
          (((((C152 - C151) * C2269 + (C154 - C153) * C2264 +
              (C156 - C155) * C2270 + (C158 - C157) * C49955) *
                 C5095 +
             (C5427 * C2269 + C5428 * C2264 + C730 * C2270 + C731 * C49955) *
                 C5096 +
             C5467 * C5097) *
                C50240 +
            ((C5419 * C2269 + C5420 * C2264 + C5765 * C2270 + C5766 * C49955) *
                 C5095 +
             (C5425 * C2269 + C5426 * C2264 + C5767 * C2270 + C5768 * C49955) *
                 C5096 +
             (C5455 * C2269 + C5456 * C2264 + (C5445 - C5446) * C2270 +
              (C5447 - C5448) * C49955) *
                 C5097) *
                C50077) *
               C50239 +
           ((((C323 - C322) * C2269 + (C325 - C324) * C2264 +
              (C327 - C326) * C2270 + (C329 - C328) * C49955) *
                 C5095 +
             (C5979 * C2269 + C5980 * C2264 + (C892 - C893) * C2270 +
              (C894 - C895) * C49955) *
                 C5096 +
             (C5981 * C2269 + C5982 * C2264 + (C5615 - C5616) * C2270 +
              (C5617 - C5618) * C49955) *
                 C5097) *
                C50240 +
            ((C5971 * C2269 + C5972 * C2264 + (C893 - C892) * C2270 +
              (C895 - C894) * C49955) *
                 C5095 +
             (C5977 * C2269 + C5978 * C2264 + (C5616 - C5615) * C2270 +
              (C5618 - C5617) * C49955) *
                 C5096 +
             ((C5984 - C5983) * C2269 + (C5986 - C5985) * C2264 +
              (C117 * C5962 - C50094 * C5963) * C2270 +
              (C117 * C5964 - C50094 * C5965) * C49955) *
                 C5097) *
                C50077) *
               C50049) *
              C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C50094 * C129 - C117 * C122) * C118 +
               (C50094 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
               (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
               C174 * C109) *
                  C50110 * C50013 * C49997 * C113 +
              ((C152 - C151) * C118 + (C154 - C153) * C106 +
               (C156 - C155) * C119 + (C158 - C157) * C107 + C175 * C120 +
               C176 * C108 + C177 * C121 + C178 * C109) *
                  C50110 * C50013 * C49997 * C114 +
              (C171 * C118 + C172 * C106 + C173 * C119 + C174 * C107 +
               (C164 - C163) * C120 + (C166 - C165) * C108 +
               (C167 - C168) * C121 + (C169 - C170) * C109) *
                  C50110 * C50013 * C49997 * C115 +
              (C175 * C118 + C176 * C106 + C177 * C119 + C178 * C107 +
               (C168 - C167) * C120 + (C170 - C169) * C108 +
               (C117 * C128 - C50094 * C141) * C121 +
               (C117 * C142 - C50094 * C149) * C109) *
                  C50110 * C50013 * C49997 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C50094 * C129 - C117 * C122) * C118 +
                (C50094 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
                (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
                C174 * C109) *
                   C50110 * C50013 * C276 +
               ((C117 * C281 - C50094 * C291) * C118 +
                (C117 * C292 - C50094 * C311) * C106 + (C322 - C323) * C119 +
                (C324 - C325) * C107 + (C326 - C327) * C120 +
                (C328 - C329) * C108 + (C330 - C331) * C121 +
                (C332 - C333) * C109) *
                   C50110 * C50013 * C277 +
               ((C50094 * C299 - C117 * C285) * C118 +
                (C50094 * C315 - C117 * C300) * C106 + (C334 - C335) * C119 +
                (C336 - C337) * C107 + (C338 - C339) * C120 +
                (C340 - C341) * C108 + (C342 - C343) * C121 +
                (C344 - C345) * C109) *
                   C50110 * C50013 * C278) *
                  C279 +
              (((C152 - C151) * C118 + (C154 - C153) * C106 +
                (C156 - C155) * C119 + (C158 - C157) * C107 + C175 * C120 +
                C176 * C108 + C177 * C121 + C178 * C109) *
                   C50110 * C50013 * C276 +
               ((C323 - C322) * C118 + (C325 - C324) * C106 +
                (C327 - C326) * C119 + (C329 - C328) * C107 +
                (C331 - C330) * C120 + (C333 - C332) * C108 +
                (C50094 * C307 - C117 * C289) * C121 +
                (C50094 * C319 - C117 * C308) * C109) *
                   C50110 * C50013 * C277 +
               ((C335 - C334) * C118 + (C337 - C336) * C106 +
                (C339 - C338) * C119 + (C341 - C340) * C107 +
                (C343 - C342) * C120 + (C345 - C344) * C108 +
                (C117 * C290 - C50094 * C309) * C121 +
                (C117 * C310 - C50094 * C320) * C109) *
                   C50110 * C50013 * C278) *
                  C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C118 +
            (C50094 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50110 * C443 +
           ((C117 * C446 - C50094 * C456) * C118 +
            (C117 * C457 - C50094 * C476) * C106 + (C487 - C488) * C119 +
            (C489 - C490) * C107 + (C491 - C492) * C120 + (C493 - C494) * C108 +
            (C495 - C496) * C121 + (C497 - C498) * C109) *
               C50110 * C444 +
           ((C50094 * C464 - C117 * C450) * C118 +
            (C50094 * C480 - C117 * C465) * C106 + (C499 - C500) * C119 +
            (C501 - C502) * C107 + (C503 - C504) * C120 + (C505 - C506) * C108 +
            (C507 - C508) * C121 + (C509 - C510) * C109) *
               C50110 * C445) *
              C49997 * C279 +
          (((C152 - C151) * C118 + (C154 - C153) * C106 + (C156 - C155) * C119 +
            (C158 - C157) * C107 + C175 * C120 + C176 * C108 + C177 * C121 +
            C178 * C109) *
               C50110 * C443 +
           ((C488 - C487) * C118 + (C490 - C489) * C106 + (C492 - C491) * C119 +
            (C494 - C493) * C107 + (C496 - C495) * C120 + (C498 - C497) * C108 +
            (C50094 * C472 - C117 * C454) * C121 +
            (C50094 * C484 - C117 * C473) * C109) *
               C50110 * C444 +
           ((C500 - C499) * C118 + (C502 - C501) * C106 + (C504 - C503) * C119 +
            (C506 - C505) * C107 + (C508 - C507) * C120 + (C510 - C509) * C108 +
            (C117 * C455 - C50094 * C474) * C121 +
            (C117 * C475 - C50094 * C485) * C109) *
               C50110 * C445) *
              C49997 * C49984)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
            C2263 * C299 - C2268 * C285) *
               C2269 +
           (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
            C2263 * C315 - C2268 * C300) *
               C2264 +
           (C2272 - C2273 + C2274 - C2275 + C2276 - C2277) * C2270 +
           (C2278 - C2279 + C2280 - C2281 + C2282 - C2283) * C49955) *
              C50110 * C50013 * C49997 * C113 +
          ((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C2269 +
           (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C2264 +
           (C2284 - C2285 + C2286 - C2287 + C2288 - C2289) * C2270 +
           (C2290 - C2291 + C2292 - C2293 + C2294 - C2295) * C49955) *
              C50110 * C50013 * C49997 * C114 +
          ((C2285 - C2284 + C2287 - C2286 + C2289 - C2288) * C2269 +
           (C2291 - C2290 + C2293 - C2292 + C2295 - C2294) * C2264 +
           (C2296 - C2297 + C2298 - C2299 + C2300 - C2301) * C2270 +
           (C2302 - C2303 + C2304 - C2305 + C2306 - C2307) * C49955) *
              C50110 * C50013 * C49997 * C115 +
          ((C2297 - C2296 + C2299 - C2298 + C2301 - C2300) * C2269 +
           (C2303 - C2302 + C2305 - C2304 + C2307 - C2306) * C2264 +
           (C2266 * C126 - C2261 * C137 + C2267 * C289 - C2262 * C307 +
            C2268 * C290 - C2263 * C309) *
               C2270 +
           (C2266 * C138 - C2261 * C147 + C2267 * C308 - C2262 * C319 +
            C2268 * C310 - C2263 * C320) *
               C49955) *
              C50110 * C50013 * C49997 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
             C2263 * C299 - C2268 * C285) *
                C2269 +
            (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
             C2263 * C315 - C2268 * C300) *
                C2264 +
            (C2272 - C2273 + C2274 - C2275 + C2276 - C2277) * C2270 +
            (C2278 - C2279 + C2280 - C2281 + C2282 - C2283) * C49955) *
               C50110 * C50013 * C276 +
           ((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
             C2268 * C1073 - C2263 * C1077) *
                C2269 +
            (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
             C2268 * C1078 - C2263 * C1085) *
                C2264 +
            (C2466 - C2467 + C2468 - C2469 + C2470 - C2471) * C2270 +
            (C2472 - C2473 + C2474 - C2475 + C2476 - C2477) * C49955) *
               C50110 * C50013 * C277 +
           ((C2261 * C299 - C2266 * C285 + C2262 * C1077 - C2267 * C1073 +
             C2263 * C2456 - C2268 * C2453) *
                C2269 +
            (C2261 * C315 - C2266 * C300 + C2262 * C1085 - C2267 * C1078 +
             C2263 * C2462 - C2268 * C2457) *
                C2264 +
            (C2478 - C2479 + C2480 - C2481 + C2482 - C2483) * C2270 +
            (C2484 - C2485 + C2486 - C2487 + C2488 - C2489) * C49955) *
               C50110 * C50013 * C278) *
              C279 +
          (((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C2269 +
            (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C2264 +
            (C2284 - C2285 + C2286 - C2287 + C2288 - C2289) * C2270 +
            (C2290 - C2291 + C2292 - C2293 + C2294 - C2295) * C49955) *
               C50110 * C50013 * C276 +
           ((C2467 - C2466 + C2469 - C2468 + C2471 - C2470) * C2269 +
            (C2473 - C2472 + C2475 - C2474 + C2477 - C2476) * C2264 +
            (C2261 * C295 - C2266 * C283 + C2262 * C303 - C2267 * C287 +
             C2263 * C1081 - C2268 * C1075) *
                C2270 +
            (C2261 * C313 - C2266 * C296 + C2262 * C317 - C2267 * C304 +
             C2263 * C1087 - C2268 * C1082) *
                C49955) *
               C50110 * C50013 * C277 +
           ((C2479 - C2478 + C2481 - C2480 + C2483 - C2482) * C2269 +
            (C2485 - C2484 + C2487 - C2486 + C2489 - C2488) * C2264 +
            (C2266 * C287 - C2261 * C303 + C2267 * C1075 - C2262 * C1081 +
             C2268 * C2455 - C2263 * C2460) *
                C2270 +
            (C2266 * C304 - C2261 * C317 + C2267 * C1082 - C2262 * C1087 +
             C2268 * C2461 - C2263 * C2464) *
                C49955) *
               C50110 * C50013 * C278) *
              C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
             C2263 * C299 - C2268 * C285) *
                C2269 +
            (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
             C2263 * C315 - C2268 * C300) *
                C2264 +
            (C2272 - C2273 + C2274 - C2275 + C2276 - C2277) * C2270 +
            (C2278 - C2279 + C2280 - C2281 + C2282 - C2283) * C49955) *
               C50110 * C443 +
           ((C2266 * C446 - C2261 * C456 + C2267 * C867 - C2262 * C872 +
             C2268 * C1534 - C2263 * C1538) *
                C2269 +
            (C2266 * C457 - C2261 * C476 + C2267 * C873 - C2262 * C882 +
             C2268 * C1539 - C2263 * C1546) *
                C2264 +
            (C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C2270 +
            (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49955) *
               C50110 * C444 +
           ((C2261 * C464 - C2266 * C450 + C2262 * C1191 - C2267 * C1187 +
             C2263 * C2638 - C2268 * C2635) *
                C2269 +
            (C2261 * C480 - C2266 * C465 + C2262 * C1199 - C2267 * C1192 +
             C2263 * C2644 - C2268 * C2639) *
                C2264 +
            (C2660 - C2661 + C2662 - C2663 + C2664 - C2665) * C2270 +
            (C2666 - C2667 + C2668 - C2669 + C2670 - C2671) * C49955) *
               C50110 * C445) *
              C49997 * C279 +
          (((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C2269 +
            (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C2264 +
            (C2284 - C2285 + C2286 - C2287 + C2288 - C2289) * C2270 +
            (C2290 - C2291 + C2292 - C2293 + C2294 - C2295) * C49955) *
               C50110 * C443 +
           ((C2649 - C2648 + C2651 - C2650 + C2653 - C2652) * C2269 +
            (C2655 - C2654 + C2657 - C2656 + C2659 - C2658) * C2264 +
            (C2261 * C460 - C2266 * C448 + C2262 * C876 - C2267 * C869 +
             C2263 * C1542 - C2268 * C1536) *
                C2270 +
            (C2261 * C478 - C2266 * C461 + C2262 * C884 - C2267 * C877 +
             C2263 * C1548 - C2268 * C1543) *
                C49955) *
               C50110 * C444 +
           ((C2661 - C2660 + C2663 - C2662 + C2665 - C2664) * C2269 +
            (C2667 - C2666 + C2669 - C2668 + C2671 - C2670) * C2264 +
            (C2266 * C452 - C2261 * C468 + C2267 * C1189 - C2262 * C1195 +
             C2268 * C2637 - C2263 * C2642) *
                C2270 +
            (C2266 * C469 - C2261 * C482 + C2267 * C1196 - C2262 * C1201 +
             C2268 * C2643 - C2263 * C2646) *
                C49955) *
               C50110 * C445) *
              C49997 * C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C2269 +
            (C50094 * C143 - C117 * C130) * C2264 + (C151 - C152) * C2270 +
            (C153 - C154) * C49955) *
               C5095 +
           ((C50094 * C456 - C117 * C446) * C2269 +
            (C50094 * C476 - C117 * C457) * C2264 + (C488 - C487) * C2270 +
            (C490 - C489) * C49955) *
               C5096 +
           ((C50094 * C464 - C117 * C450) * C2269 +
            (C50094 * C480 - C117 * C465) * C2264 + (C499 - C500) * C2270 +
            (C501 - C502) * C49955) *
               C5097) *
              C50013 * C49997 * C113 +
          (((C152 - C151) * C2269 + (C154 - C153) * C2264 +
            (C156 - C155) * C2270 + (C158 - C157) * C49955) *
               C5095 +
           ((C487 - C488) * C2269 + (C489 - C490) * C2264 + C730 * C2270 +
            C731 * C49955) *
               C5096 +
           ((C500 - C499) * C2269 + (C502 - C501) * C2264 +
            (C504 - C503) * C2270 + (C506 - C505) * C49955) *
               C5097) *
              C50013 * C49997 * C114 +
          ((C171 * C2269 + C172 * C2264 + C173 * C2270 + C174 * C49955) *
               C5095 +
           ((C492 - C491) * C2269 + (C494 - C493) * C2264 +
            (C496 - C495) * C2270 + (C498 - C497) * C49955) *
               C5096 +
           ((C503 - C504) * C2269 + (C505 - C506) * C2264 +
            (C507 - C508) * C2270 + (C509 - C510) * C49955) *
               C5097) *
              C50013 * C49997 * C115 +
          ((C175 * C2269 + C176 * C2264 + C177 * C2270 + C178 * C49955) *
               C5095 +
           (C732 * C2269 + C733 * C2264 + (C735 - C734) * C2270 +
            (C737 - C736) * C49955) *
               C5096 +
           ((C508 - C507) * C2269 + (C510 - C509) * C2264 +
            (C117 * C455 - C50094 * C474) * C2270 +
            (C117 * C475 - C50094 * C485) * C49955) *
               C5097) *
              C50013 * C49997 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C2269 +
             (C50094 * C143 - C117 * C130) * C2264 + (C151 - C152) * C2270 +
             (C153 - C154) * C49955) *
                C5095 +
            ((C50094 * C456 - C117 * C446) * C2269 +
             (C50094 * C476 - C117 * C457) * C2264 + (C488 - C487) * C2270 +
             (C490 - C489) * C49955) *
                C5096 +
            ((C50094 * C464 - C117 * C450) * C2269 +
             (C50094 * C480 - C117 * C465) * C2264 + (C499 - C500) * C2270 +
             (C501 - C502) * C49955) *
                C5097) *
               C50013 * C276 +
           (((C117 * C281 - C50094 * C291) * C2269 +
             (C117 * C292 - C50094 * C311) * C2264 + (C322 - C323) * C2270 +
             (C324 - C325) * C49955) *
                C5095 +
            ((C117 * C867 - C50094 * C872) * C2269 +
             (C117 * C873 - C50094 * C882) * C2264 + (C889 - C888) * C2270 +
             (C891 - C890) * C49955) *
                C5096 +
            ((C117 * C1187 - C50094 * C1191) * C2269 +
             (C117 * C1192 - C50094 * C1199) * C2264 + (C5245 - C5246) * C2270 +
             (C5247 - C5248) * C49955) *
                C5097) *
               C50013 * C277 +
           (((C50094 * C299 - C117 * C285) * C2269 +
             (C50094 * C315 - C117 * C300) * C2264 + (C334 - C335) * C2270 +
             (C336 - C337) * C49955) *
                C5095 +
            ((C50094 * C1538 - C117 * C1534) * C2269 +
             (C50094 * C1546 - C117 * C1539) * C2264 + (C5249 - C5250) * C2270 +
             (C5251 - C5252) * C49955) *
                C5096 +
            ((C50094 * C2638 - C117 * C2635) * C2269 +
             (C50094 * C2644 - C117 * C2639) * C2264 + (C5253 - C5254) * C2270 +
             (C5255 - C5256) * C49955) *
                C5097) *
               C50013 * C278) *
              C279 +
          ((((C152 - C151) * C2269 + (C154 - C153) * C2264 +
             (C156 - C155) * C2270 + (C158 - C157) * C49955) *
                C5095 +
            ((C487 - C488) * C2269 + (C489 - C490) * C2264 + C730 * C2270 +
             C731 * C49955) *
                C5096 +
            ((C500 - C499) * C2269 + (C502 - C501) * C2264 +
             (C504 - C503) * C2270 + (C506 - C505) * C49955) *
                C5097) *
               C50013 * C276 +
           (((C323 - C322) * C2269 + (C325 - C324) * C2264 +
             (C327 - C326) * C2270 + (C329 - C328) * C49955) *
                C5095 +
            ((C888 - C889) * C2269 + (C890 - C891) * C2264 +
             (C892 - C893) * C2270 + (C894 - C895) * C49955) *
                C5096 +
            ((C5246 - C5245) * C2269 + (C5248 - C5247) * C2264 +
             (C50094 * C1195 - C117 * C1189) * C2270 +
             (C50094 * C1201 - C117 * C1196) * C49955) *
                C5097) *
               C50013 * C277 +
           (((C335 - C334) * C2269 + (C337 - C336) * C2264 +
             (C339 - C338) * C2270 + (C341 - C340) * C49955) *
                C5095 +
            ((C5250 - C5249) * C2269 + (C5252 - C5251) * C2264 +
             (C117 * C1536 - C50094 * C1542) * C2270 +
             (C117 * C1543 - C50094 * C1548) * C49955) *
                C5096 +
            ((C5254 - C5253) * C2269 + (C5256 - C5255) * C2264 +
             (C117 * C2637 - C50094 * C2642) * C2270 +
             (C117 * C2643 - C50094 * C2646) * C49955) *
                C5097) *
               C50013 * C278) *
              C49984)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C2269 +
             (C50094 * C143 - C117 * C130) * C2264 + (C151 - C152) * C2270 +
             (C153 - C154) * C49955) *
                C5095 +
            ((C5415 - C5416) * C2269 + (C5417 - C5418) * C2264 + C5419 * C2270 +
             C5420 * C49955) *
                C5096 +
            C5468 * C5097) *
               C443 +
           (((C5416 - C5415) * C2269 + (C5418 - C5417) * C2264 + C5427 * C2270 +
             C5428 * C49955) *
                C5095 +
            ((C5422 - C5421) * C2269 + (C5424 - C5423) * C2264 + C5429 * C2270 +
             C5430 * C49955) *
                C5096 +
            ((C5431 - C5432) * C2269 + (C5433 - C5434) * C2264 + C5453 * C2270 +
             C5454 * C49955) *
                C5097) *
               C444 +
           (C5468 * C5095 +
            ((C5432 - C5431) * C2269 + (C5434 - C5433) * C2264 + C5455 * C2270 +
             C5456 * C49955) *
                C5096 +
            ((C50094 * C5405 - C117 * C5402) * C2269 +
             (C50094 * C5411 - C117 * C5406) * C2264 + (C5439 - C5440) * C2270 +
             (C5441 - C5442) * C49955) *
                C5097) *
               C445) *
              C49997 * C279 +
          ((((C152 - C151) * C2269 + (C154 - C153) * C2264 +
             (C156 - C155) * C2270 + (C158 - C157) * C49955) *
                C5095 +
            (C5427 * C2269 + C5428 * C2264 + C730 * C2270 + C731 * C49955) *
                C5096 +
            C5467 * C5097) *
               C443 +
           ((C5419 * C2269 + C5420 * C2264 + (C492 - C491) * C2270 +
             (C494 - C493) * C49955) *
                C5095 +
            (C5425 * C2269 + C5426 * C2264 + (C503 - C504) * C2270 +
             (C505 - C506) * C49955) *
                C5096 +
            (C5455 * C2269 + C5456 * C2264 + (C5445 - C5446) * C2270 +
             (C5447 - C5448) * C49955) *
                C5097) *
               C444 +
           (C5467 * C5095 +
            (C5453 * C2269 + C5454 * C2264 + (C5446 - C5445) * C2270 +
             (C5448 - C5447) * C49955) *
                C5096 +
            ((C5440 - C5439) * C2269 + (C5442 - C5441) * C2264 +
             (C117 * C5404 - C50094 * C5409) * C2270 +
             (C117 * C5410 - C50094 * C5413) * C49955) *
                C5097) *
               C445) *
              C49997 * C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
             C2263 * C299 - C2268 * C285) *
                C2269 +
            (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
             C2263 * C315 - C2268 * C300) *
                C2264 +
            (C2272 - C2273 + C2274 - C2275 + C2276 - C2277) * C2270 +
            (C2278 - C2279 + C2280 - C2281 + C2282 - C2283) * C49955) *
               C50110 * C50240 +
           ((C2266 * C446 - C2261 * C456 + C2267 * C867 - C2262 * C872 +
             C2268 * C1534 - C2263 * C1538) *
                C2269 +
            (C2266 * C457 - C2261 * C476 + C2267 * C873 - C2262 * C882 +
             C2268 * C1539 - C2263 * C1546) *
                C2264 +
            (C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C2270 +
            (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49955) *
               C50110 * C50077) *
              C49997 * C50282 +
          (((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C2269 +
            (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C2264 +
            (C2284 - C2285 + C2286 - C2287 + C2288 - C2289) * C2270 +
            (C2290 - C2291 + C2292 - C2293 + C2294 - C2295) * C49955) *
               C50110 * C50240 +
           ((C2649 - C2648 + C2651 - C2650 + C2653 - C2652) * C2269 +
            (C2655 - C2654 + C2657 - C2656 + C2659 - C2658) * C2264 +
            (C2976 - C2977 + C2978 - C2979 + C2980 - C2981) * C2270 +
            (C2982 - C2983 + C2984 - C2985 + C2986 - C2987) * C49955) *
               C50110 * C50077) *
              C49997 * C50283 +
          (((C2285 - C2284 + C2287 - C2286 + C2289 - C2288) * C2269 +
            (C2291 - C2290 + C2293 - C2292 + C2295 - C2294) * C2264 +
            (C2296 - C2297 + C2298 - C2299 + C2300 - C2301) * C2270 +
            (C2302 - C2303 + C2304 - C2305 + C2306 - C2307) * C49955) *
               C50110 * C50240 +
           ((C2977 - C2976 + C2979 - C2978 + C2981 - C2980) * C2269 +
            (C2983 - C2982 + C2985 - C2984 + C2987 - C2986) * C2264 +
            (C2266 * C449 - C2261 * C462 + C2267 * C870 - C2262 * C878 +
             C2268 * C1537 - C2263 * C1544) *
                C2270 +
            (C2266 * C463 - C2261 * C479 + C2267 * C879 - C2262 * C885 +
             C2268 * C1545 - C2263 * C1549) *
                C49955) *
               C50110 * C50077) *
              C49997 * C612)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C118 +
            (C50094 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50110 * C50240 +
           ((C117 * C446 - C50094 * C456) * C118 +
            (C117 * C457 - C50094 * C476) * C106 + (C487 - C488) * C119 +
            (C489 - C490) * C107 + C730 * C120 + C731 * C108 + C732 * C121 +
            C733 * C109) *
               C50110 * C50077) *
              C49997 * C50282 +
          (((C152 - C151) * C118 + (C154 - C153) * C106 + (C156 - C155) * C119 +
            (C158 - C157) * C107 + C175 * C120 + C176 * C108 + C177 * C121 +
            C178 * C109) *
               C50110 * C50240 +
           ((C488 - C487) * C118 + (C490 - C489) * C106 + (C492 - C491) * C119 +
            (C494 - C493) * C107 + (C496 - C495) * C120 + (C498 - C497) * C108 +
            (C734 - C735) * C121 + (C736 - C737) * C109) *
               C50110 * C50077) *
              C49997 * C50283 +
          ((C171 * C118 + C172 * C106 + C173 * C119 + C174 * C107 +
            (C164 - C163) * C120 + (C166 - C165) * C108 + (C167 - C168) * C121 +
            (C169 - C170) * C109) *
               C50110 * C50240 +
           (C730 * C118 + C731 * C106 + C732 * C119 + C733 * C107 +
            (C735 - C734) * C120 + (C737 - C736) * C108 +
            (C117 * C725 - C50094 * C726) * C121 +
            (C117 * C727 - C50094 * C728) * C109) *
               C50110 * C50077) *
              C49997 * C612)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C2269 +
             (C50094 * C143 - C117 * C130) * C2264 + (C151 - C152) * C2270 +
             (C153 - C154) * C49955) *
                C5095 +
            ((C5415 - C5416) * C2269 + (C5417 - C5418) * C2264 + C5419 * C2270 +
             C5420 * C49955) *
                C5096 +
            C5468 * C5097) *
               C50240 +
           (((C5416 - C5415) * C2269 + (C5418 - C5417) * C2264 + C5427 * C2270 +
             C5428 * C49955) *
                C5095 +
            ((C5422 - C5421) * C2269 + (C5424 - C5423) * C2264 + C5429 * C2270 +
             C5430 * C49955) *
                C5096 +
            ((C5431 - C5432) * C2269 + (C5433 - C5434) * C2264 + C5453 * C2270 +
             C5454 * C49955) *
                C5097) *
               C50077) *
              C49997 * C50282 +
          ((((C152 - C151) * C2269 + (C154 - C153) * C2264 +
             (C156 - C155) * C2270 + (C158 - C157) * C49955) *
                C5095 +
            (C5427 * C2269 + C5428 * C2264 + C730 * C2270 + C731 * C49955) *
                C5096 +
            C5467 * C5097) *
               C50240 +
           ((C5419 * C2269 + C5420 * C2264 + C5765 * C2270 + C5766 * C49955) *
                C5095 +
            (C5425 * C2269 + C5426 * C2264 + C5767 * C2270 + C5768 * C49955) *
                C5096 +
            (C5455 * C2269 + C5456 * C2264 + (C5445 - C5446) * C2270 +
             (C5447 - C5448) * C49955) *
                C5097) *
               C50077) *
              C49997 * C50283 +
          (((C171 * C2269 + C172 * C2264 + C173 * C2270 + C174 * C49955) *
                C5095 +
            (C5765 * C2269 + C5766 * C2264 + (C496 - C495) * C2270 +
             (C498 - C497) * C49955) *
                C5096 +
            (C5767 * C2269 + C5768 * C2264 + (C507 - C508) * C2270 +
             (C509 - C510) * C49955) *
                C5097) *
               C50240 +
           ((C730 * C2269 + C731 * C2264 + C732 * C2270 + C733 * C49955) *
                C5095 +
            (C5443 * C2269 + C5444 * C2264 + (C508 - C507) * C2270 +
             (C510 - C509) * C49955) *
                C5096 +
            ((C5446 - C5445) * C2269 + (C5448 - C5447) * C2264 +
             (C117 * C1821 - C50094 * C1828) * C2270 +
             (C117 * C1829 - C50094 * C1833) * C49955) *
                C5097) *
               C50077) *
              C49997 * C612)) /
            (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C118 +
            (C50094 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50110 * C50013 * C276 +
           ((C117 * C281 - C50094 * C291) * C118 +
            (C117 * C292 - C50094 * C311) * C106 + (C322 - C323) * C119 +
            (C324 - C325) * C107 + (C326 - C327) * C120 + (C328 - C329) * C108 +
            (C330 - C331) * C121 + (C332 - C333) * C109) *
               C50110 * C50013 * C277 +
           ((C50094 * C299 - C117 * C285) * C118 +
            (C50094 * C315 - C117 * C300) * C106 + (C334 - C335) * C119 +
            (C336 - C337) * C107 + (C338 - C339) * C120 + (C340 - C341) * C108 +
            (C342 - C343) * C121 + (C344 - C345) * C109) *
               C50110 * C50013 * C278) *
              C279 +
          (((C152 - C151) * C118 + (C154 - C153) * C106 + (C156 - C155) * C119 +
            (C158 - C157) * C107 + C175 * C120 + C176 * C108 + C177 * C121 +
            C178 * C109) *
               C50110 * C50013 * C276 +
           ((C323 - C322) * C118 + (C325 - C324) * C106 + (C327 - C326) * C119 +
            (C329 - C328) * C107 + (C331 - C330) * C120 + (C333 - C332) * C108 +
            (C50094 * C307 - C117 * C289) * C121 +
            (C50094 * C319 - C117 * C308) * C109) *
               C50110 * C50013 * C277 +
           ((C335 - C334) * C118 + (C337 - C336) * C106 + (C339 - C338) * C119 +
            (C341 - C340) * C107 + (C343 - C342) * C120 + (C345 - C344) * C108 +
            (C117 * C290 - C50094 * C309) * C121 +
            (C117 * C310 - C50094 * C320) * C109) *
               C50110 * C50013 * C278) *
              C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C50094 * C129 - C117 * C122) * C118 +
           (C50094 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
           (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
           C174 * C109) *
              C50110 * C50013 * C49997 * C113 +
          ((C152 - C151) * C118 + (C154 - C153) * C106 + (C156 - C155) * C119 +
           (C158 - C157) * C107 + C175 * C120 + C176 * C108 + C177 * C121 +
           C178 * C109) *
              C50110 * C50013 * C49997 * C114 +
          (C171 * C118 + C172 * C106 + C173 * C119 + C174 * C107 +
           (C164 - C163) * C120 + (C166 - C165) * C108 + (C167 - C168) * C121 +
           (C169 - C170) * C109) *
              C50110 * C50013 * C49997 * C115 +
          (C175 * C118 + C176 * C106 + C177 * C119 + C178 * C107 +
           (C168 - C167) * C120 + (C170 - C169) * C108 +
           (C117 * C128 - C50094 * C141) * C121 +
           (C117 * C142 - C50094 * C149) * C109) *
              C50110 * C50013 * C49997 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
            C2263 * C299 - C2268 * C285) *
               C2269 +
           (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
            C2263 * C315 - C2268 * C300) *
               C2264 +
           (C2272 - C2273 + C2274 - C2275 + C2276 - C2277) * C2270 +
           (C2278 - C2279 + C2280 - C2281 + C2282 - C2283) * C49955) *
              C50110 * C50013 * C49997 * C113 +
          ((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C2269 +
           (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C2264 +
           (C2284 - C2285 + C2286 - C2287 + C2288 - C2289) * C2270 +
           (C2290 - C2291 + C2292 - C2293 + C2294 - C2295) * C49955) *
              C50110 * C50013 * C49997 * C114 +
          ((C2285 - C2284 + C2287 - C2286 + C2289 - C2288) * C2269 +
           (C2291 - C2290 + C2293 - C2292 + C2295 - C2294) * C2264 +
           (C2296 - C2297 + C2298 - C2299 + C2300 - C2301) * C2270 +
           (C2302 - C2303 + C2304 - C2305 + C2306 - C2307) * C49955) *
              C50110 * C50013 * C49997 * C115 +
          ((C2297 - C2296 + C2299 - C2298 + C2301 - C2300) * C2269 +
           (C2303 - C2302 + C2305 - C2304 + C2307 - C2306) * C2264 +
           (C2266 * C126 - C2261 * C137 + C2267 * C289 - C2262 * C307 +
            C2268 * C290 - C2263 * C309) *
               C2270 +
           (C2266 * C138 - C2261 * C147 + C2267 * C308 - C2262 * C319 +
            C2268 * C310 - C2263 * C320) *
               C49955) *
              C50110 * C50013 * C49997 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
             C2263 * C299 - C2268 * C285) *
                C2269 +
            (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
             C2263 * C315 - C2268 * C300) *
                C2264 +
            (C2272 - C2273 + C2274 - C2275 + C2276 - C2277) * C2270 +
            (C2278 - C2279 + C2280 - C2281 + C2282 - C2283) * C49955) *
               C50110 * C50013 * C276 +
           ((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
             C2268 * C1073 - C2263 * C1077) *
                C2269 +
            (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
             C2268 * C1078 - C2263 * C1085) *
                C2264 +
            (C2466 - C2467 + C2468 - C2469 + C2470 - C2471) * C2270 +
            (C2472 - C2473 + C2474 - C2475 + C2476 - C2477) * C49955) *
               C50110 * C50013 * C277 +
           ((C2261 * C299 - C2266 * C285 + C2262 * C1077 - C2267 * C1073 +
             C2263 * C2456 - C2268 * C2453) *
                C2269 +
            (C2261 * C315 - C2266 * C300 + C2262 * C1085 - C2267 * C1078 +
             C2263 * C2462 - C2268 * C2457) *
                C2264 +
            (C2478 - C2479 + C2480 - C2481 + C2482 - C2483) * C2270 +
            (C2484 - C2485 + C2486 - C2487 + C2488 - C2489) * C49955) *
               C50110 * C50013 * C278) *
              C279 +
          (((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C2269 +
            (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C2264 +
            (C2284 - C2285 + C2286 - C2287 + C2288 - C2289) * C2270 +
            (C2290 - C2291 + C2292 - C2293 + C2294 - C2295) * C49955) *
               C50110 * C50013 * C276 +
           ((C2467 - C2466 + C2469 - C2468 + C2471 - C2470) * C2269 +
            (C2473 - C2472 + C2475 - C2474 + C2477 - C2476) * C2264 +
            (C2261 * C295 - C2266 * C283 + C2262 * C303 - C2267 * C287 +
             C2263 * C1081 - C2268 * C1075) *
                C2270 +
            (C2261 * C313 - C2266 * C296 + C2262 * C317 - C2267 * C304 +
             C2263 * C1087 - C2268 * C1082) *
                C49955) *
               C50110 * C50013 * C277 +
           ((C2479 - C2478 + C2481 - C2480 + C2483 - C2482) * C2269 +
            (C2485 - C2484 + C2487 - C2486 + C2489 - C2488) * C2264 +
            (C2266 * C287 - C2261 * C303 + C2267 * C1075 - C2262 * C1081 +
             C2268 * C2455 - C2263 * C2460) *
                C2270 +
            (C2266 * C304 - C2261 * C317 + C2267 * C1082 - C2262 * C1087 +
             C2268 * C2461 - C2263 * C2464) *
                C49955) *
               C50110 * C50013 * C278) *
              C49984)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C2269 +
            (C50094 * C143 - C117 * C130) * C2264 + (C151 - C152) * C2270 +
            (C153 - C154) * C49955) *
               C5095 +
           ((C50094 * C456 - C117 * C446) * C2269 +
            (C50094 * C476 - C117 * C457) * C2264 + (C488 - C487) * C2270 +
            (C490 - C489) * C49955) *
               C5096 +
           ((C50094 * C464 - C117 * C450) * C2269 +
            (C50094 * C480 - C117 * C465) * C2264 + (C499 - C500) * C2270 +
            (C501 - C502) * C49955) *
               C5097) *
              C50013 * C49997 * C113 +
          (((C152 - C151) * C2269 + (C154 - C153) * C2264 +
            (C156 - C155) * C2270 + (C158 - C157) * C49955) *
               C5095 +
           ((C487 - C488) * C2269 + (C489 - C490) * C2264 + C730 * C2270 +
            C731 * C49955) *
               C5096 +
           ((C500 - C499) * C2269 + (C502 - C501) * C2264 +
            (C504 - C503) * C2270 + (C506 - C505) * C49955) *
               C5097) *
              C50013 * C49997 * C114 +
          ((C171 * C2269 + C172 * C2264 + C173 * C2270 + C174 * C49955) *
               C5095 +
           ((C492 - C491) * C2269 + (C494 - C493) * C2264 +
            (C496 - C495) * C2270 + (C498 - C497) * C49955) *
               C5096 +
           ((C503 - C504) * C2269 + (C505 - C506) * C2264 +
            (C507 - C508) * C2270 + (C509 - C510) * C49955) *
               C5097) *
              C50013 * C49997 * C115 +
          ((C175 * C2269 + C176 * C2264 + C177 * C2270 + C178 * C49955) *
               C5095 +
           (C732 * C2269 + C733 * C2264 + (C735 - C734) * C2270 +
            (C737 - C736) * C49955) *
               C5096 +
           ((C508 - C507) * C2269 + (C510 - C509) * C2264 +
            (C117 * C455 - C50094 * C474) * C2270 +
            (C117 * C475 - C50094 * C485) * C49955) *
               C5097) *
              C50013 * C49997 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C2269 +
             (C50094 * C143 - C117 * C130) * C2264 + (C151 - C152) * C2270 +
             (C153 - C154) * C49955) *
                C5095 +
            ((C50094 * C456 - C117 * C446) * C2269 +
             (C50094 * C476 - C117 * C457) * C2264 + (C488 - C487) * C2270 +
             (C490 - C489) * C49955) *
                C5096 +
            ((C50094 * C464 - C117 * C450) * C2269 +
             (C50094 * C480 - C117 * C465) * C2264 + (C499 - C500) * C2270 +
             (C501 - C502) * C49955) *
                C5097) *
               C50013 * C276 +
           (((C117 * C281 - C50094 * C291) * C2269 +
             (C117 * C292 - C50094 * C311) * C2264 + (C322 - C323) * C2270 +
             (C324 - C325) * C49955) *
                C5095 +
            ((C117 * C867 - C50094 * C872) * C2269 +
             (C117 * C873 - C50094 * C882) * C2264 + (C889 - C888) * C2270 +
             (C891 - C890) * C49955) *
                C5096 +
            ((C117 * C1187 - C50094 * C1191) * C2269 +
             (C117 * C1192 - C50094 * C1199) * C2264 + (C5245 - C5246) * C2270 +
             (C5247 - C5248) * C49955) *
                C5097) *
               C50013 * C277 +
           (((C50094 * C299 - C117 * C285) * C2269 +
             (C50094 * C315 - C117 * C300) * C2264 + (C334 - C335) * C2270 +
             (C336 - C337) * C49955) *
                C5095 +
            ((C50094 * C1538 - C117 * C1534) * C2269 +
             (C50094 * C1546 - C117 * C1539) * C2264 + (C5249 - C5250) * C2270 +
             (C5251 - C5252) * C49955) *
                C5096 +
            ((C50094 * C2638 - C117 * C2635) * C2269 +
             (C50094 * C2644 - C117 * C2639) * C2264 + (C5253 - C5254) * C2270 +
             (C5255 - C5256) * C49955) *
                C5097) *
               C50013 * C278) *
              C279 +
          ((((C152 - C151) * C2269 + (C154 - C153) * C2264 +
             (C156 - C155) * C2270 + (C158 - C157) * C49955) *
                C5095 +
            ((C487 - C488) * C2269 + (C489 - C490) * C2264 + C730 * C2270 +
             C731 * C49955) *
                C5096 +
            ((C500 - C499) * C2269 + (C502 - C501) * C2264 +
             (C504 - C503) * C2270 + (C506 - C505) * C49955) *
                C5097) *
               C50013 * C276 +
           (((C323 - C322) * C2269 + (C325 - C324) * C2264 +
             (C327 - C326) * C2270 + (C329 - C328) * C49955) *
                C5095 +
            ((C888 - C889) * C2269 + (C890 - C891) * C2264 +
             (C892 - C893) * C2270 + (C894 - C895) * C49955) *
                C5096 +
            ((C5246 - C5245) * C2269 + (C5248 - C5247) * C2264 +
             (C50094 * C1195 - C117 * C1189) * C2270 +
             (C50094 * C1201 - C117 * C1196) * C49955) *
                C5097) *
               C50013 * C277 +
           (((C335 - C334) * C2269 + (C337 - C336) * C2264 +
             (C339 - C338) * C2270 + (C341 - C340) * C49955) *
                C5095 +
            ((C5250 - C5249) * C2269 + (C5252 - C5251) * C2264 +
             (C117 * C1536 - C50094 * C1542) * C2270 +
             (C117 * C1543 - C50094 * C1548) * C49955) *
                C5096 +
            ((C5254 - C5253) * C2269 + (C5256 - C5255) * C2264 +
             (C117 * C2637 - C50094 * C2642) * C2270 +
             (C117 * C2643 - C50094 * C2646) * C49955) *
                C5097) *
               C50013 * C278) *
              C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
             C2263 * C299 - C2268 * C285) *
                C2269 +
            (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
             C2263 * C315 - C2268 * C300) *
                C2264 +
            (C2272 - C2273 + C2274 - C2275 + C2276 - C2277) * C2270 +
            (C2278 - C2279 + C2280 - C2281 + C2282 - C2283) * C49955) *
               C50110 * C50013 * C50284 +
           ((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
             C2268 * C1073 - C2263 * C1077) *
                C2269 +
            (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
             C2268 * C1078 - C2263 * C1085) *
                C2264 +
            (C2466 - C2467 + C2468 - C2469 + C2470 - C2471) * C2270 +
            (C2472 - C2473 + C2474 - C2475 + C2476 - C2477) * C49955) *
               C50110 * C50013 * C50285 +
           ((C2261 * C299 - C2266 * C285 + C2262 * C1077 - C2267 * C1073 +
             C2263 * C2456 - C2268 * C2453) *
                C2269 +
            (C2261 * C315 - C2266 * C300 + C2262 * C1085 - C2267 * C1078 +
             C2263 * C2462 - C2268 * C2457) *
                C2264 +
            (C2478 - C2479 + C2480 - C2481 + C2482 - C2483) * C2270 +
            (C2484 - C2485 + C2486 - C2487 + C2488 - C2489) * C49955) *
               C50110 * C50013 * C1303) *
              C50231 +
          (((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C2269 +
            (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C2264 +
            (C2284 - C2285 + C2286 - C2287 + C2288 - C2289) * C2270 +
            (C2290 - C2291 + C2292 - C2293 + C2294 - C2295) * C49955) *
               C50110 * C50013 * C50284 +
           ((C2467 - C2466 + C2469 - C2468 + C2471 - C2470) * C2269 +
            (C2473 - C2472 + C2475 - C2474 + C2477 - C2476) * C2264 +
            (C2818 - C2819 + C2820 - C2821 + C2822 - C2823) * C2270 +
            (C2824 - C2825 + C2826 - C2827 + C2828 - C2829) * C49955) *
               C50110 * C50013 * C50285 +
           ((C2479 - C2478 + C2481 - C2480 + C2483 - C2482) * C2269 +
            (C2485 - C2484 + C2487 - C2486 + C2489 - C2488) * C2264 +
            (C2266 * C287 - C2261 * C303 + C2267 * C1075 - C2262 * C1081 +
             C2268 * C2455 - C2263 * C2460) *
                C2270 +
            (C2266 * C304 - C2261 * C317 + C2267 * C1082 - C2262 * C1087 +
             C2268 * C2461 - C2263 * C2464) *
                C49955) *
               C50110 * C50013 * C1303) *
              C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C118 +
            (C50094 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50110 * C50013 * C50284 +
           ((C117 * C281 - C50094 * C291) * C118 +
            (C117 * C292 - C50094 * C311) * C106 + (C322 - C323) * C119 +
            (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
            C621 * C109) *
               C50110 * C50013 * C50285 +
           ((C50094 * C299 - C117 * C285) * C118 +
            (C50094 * C315 - C117 * C300) * C106 + (C334 - C335) * C119 +
            (C336 - C337) * C107 + (C338 - C339) * C120 + (C340 - C341) * C108 +
            (C342 - C343) * C121 + (C344 - C345) * C109) *
               C50110 * C50013 * C1303) *
              C50231 +
          (((C152 - C151) * C118 + (C154 - C153) * C106 + (C156 - C155) * C119 +
            (C158 - C157) * C107 + C175 * C120 + C176 * C108 + C177 * C121 +
            C178 * C109) *
               C50110 * C50013 * C50284 +
           ((C323 - C322) * C118 + (C325 - C324) * C106 + (C327 - C326) * C119 +
            (C329 - C328) * C107 + (C331 - C330) * C120 + (C333 - C332) * C108 +
            (C622 - C623) * C121 + (C624 - C625) * C109) *
               C50110 * C50013 * C50285 +
           ((C335 - C334) * C118 + (C337 - C336) * C106 + (C339 - C338) * C119 +
            (C341 - C340) * C107 + (C343 - C342) * C120 + (C345 - C344) * C108 +
            (C117 * C290 - C50094 * C309) * C121 +
            (C117 * C310 - C50094 * C320) * C109) *
               C50110 * C50013 * C1303) *
              C49984)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C2269 +
             (C50094 * C143 - C117 * C130) * C2264 + (C151 - C152) * C2270 +
             (C153 - C154) * C49955) *
                C5095 +
            ((C5415 - C5416) * C2269 + (C5417 - C5418) * C2264 + C5419 * C2270 +
             C5420 * C49955) *
                C5096 +
            C5468 * C5097) *
               C50013 * C50284 +
           (((C117 * C281 - C50094 * C291) * C2269 +
             (C117 * C292 - C50094 * C311) * C2264 + (C322 - C323) * C2270 +
             (C324 - C325) * C49955) *
                C5095 +
            ((C5967 - C5968) * C2269 + (C5969 - C5970) * C2264 + C5971 * C2270 +
             C5972 * C49955) *
                C5096 +
            C6397 * C5097) *
               C50013 * C50285 +
           (((C50094 * C299 - C117 * C285) * C2269 +
             (C50094 * C315 - C117 * C300) * C2264 + (C334 - C335) * C2270 +
             (C336 - C337) * C49955) *
                C5095 +
            ((C50094 * C1538 - C117 * C1534) * C2269 +
             (C50094 * C1546 - C117 * C1539) * C2264 + (C5249 - C5250) * C2270 +
             (C5251 - C5252) * C49955) *
                C5096 +
            ((C50094 * C2638 - C117 * C2635) * C2269 +
             (C50094 * C2644 - C117 * C2639) * C2264 + (C5253 - C5254) * C2270 +
             (C5255 - C5256) * C49955) *
                C5097) *
               C50013 * C1303) *
              C50231 +
          ((((C152 - C151) * C2269 + (C154 - C153) * C2264 +
             (C156 - C155) * C2270 + (C158 - C157) * C49955) *
                C5095 +
            (C5427 * C2269 + C5428 * C2264 + C730 * C2270 + C731 * C49955) *
                C5096 +
            C5467 * C5097) *
               C50013 * C50284 +
           (((C323 - C322) * C2269 + (C325 - C324) * C2264 +
             (C327 - C326) * C2270 + (C329 - C328) * C49955) *
                C5095 +
            (C5979 * C2269 + C5980 * C2264 + (C892 - C893) * C2270 +
             (C894 - C895) * C49955) *
                C5096 +
            (C5981 * C2269 + C5982 * C2264 + (C5615 - C5616) * C2270 +
             (C5617 - C5618) * C49955) *
                C5097) *
               C50013 * C50285 +
           (((C335 - C334) * C2269 + (C337 - C336) * C2264 +
             (C339 - C338) * C2270 + (C341 - C340) * C49955) *
                C5095 +
            ((C5250 - C5249) * C2269 + (C5252 - C5251) * C2264 +
             (C117 * C1536 - C50094 * C1542) * C2270 +
             (C117 * C1543 - C50094 * C1548) * C49955) *
                C5096 +
            ((C5254 - C5253) * C2269 + (C5256 - C5255) * C2264 +
             (C117 * C2637 - C50094 * C2642) * C2270 +
             (C117 * C2643 - C50094 * C2646) * C49955) *
                C5097) *
               C50013 * C1303) *
              C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
             C2263 * C299 - C2268 * C285) *
                C2269 +
            (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
             C2263 * C315 - C2268 * C300) *
                C2264 +
            (C2272 - C2273 + C2274 - C2275 + C2276 - C2277) * C2270 +
            (C2278 - C2279 + C2280 - C2281 + C2282 - C2283) * C49955) *
               C50110 * C50240 +
           ((C2266 * C446 - C2261 * C456 + C2267 * C867 - C2262 * C872 +
             C2268 * C1534 - C2263 * C1538) *
                C2269 +
            (C2266 * C457 - C2261 * C476 + C2267 * C873 - C2262 * C882 +
             C2268 * C1539 - C2263 * C1546) *
                C2264 +
            (C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C2270 +
            (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49955) *
               C50110 * C50077) *
              C50284 +
          (((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
             C2268 * C1073 - C2263 * C1077) *
                C2269 +
            (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
             C2268 * C1078 - C2263 * C1085) *
                C2264 +
            (C2466 - C2467 + C2468 - C2469 + C2470 - C2471) * C2270 +
            (C2472 - C2473 + C2474 - C2475 + C2476 - C2477) * C49955) *
               C50110 * C50240 +
           ((C2261 * C872 - C2266 * C867 + C2262 * C1538 - C2267 * C1534 +
             C2263 * C3184 - C2268 * C3181) *
                C2269 +
            (C2261 * C882 - C2266 * C873 + C2262 * C1546 - C2267 * C1539 +
             C2263 * C3190 - C2268 * C3185) *
                C2264 +
            (C3194 - C3195 + C3196 - C3197 + C3198 - C3199) * C2270 +
            (C3200 - C3201 + C3202 - C3203 + C3204 - C3205) * C49955) *
               C50110 * C50077) *
              C50285 +
          (((C2261 * C299 - C2266 * C285 + C2262 * C1077 - C2267 * C1073 +
             C2263 * C2456 - C2268 * C2453) *
                C2269 +
            (C2261 * C315 - C2266 * C300 + C2262 * C1085 - C2267 * C1078 +
             C2263 * C2462 - C2268 * C2457) *
                C2264 +
            (C2478 - C2479 + C2480 - C2481 + C2482 - C2483) * C2270 +
            (C2484 - C2485 + C2486 - C2487 + C2488 - C2489) * C49955) *
               C50110 * C50240 +
           ((C2266 * C1534 - C2261 * C1538 + C2267 * C3181 - C2262 * C3184 +
             C2268 * C4097 - C2263 * C4099) *
                C2269 +
            (C2266 * C1539 - C2261 * C1546 + C2267 * C3185 - C2262 * C3190 +
             C2268 * C4100 - C2263 * C4103) *
                C2264 +
            (C2266 * C1535 - C2261 * C1540 + C2267 * C3182 - C2262 * C3186 +
             C2268 * C4098 - C2263 * C4101) *
                C2270 +
            (C2266 * C1541 - C2261 * C1547 + C2267 * C3187 - C2262 * C3191 +
             C2268 * C4102 - C2263 * C4104) *
                C49955) *
               C50110 * C50077) *
              C1303) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C118 +
            (C50094 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50110 * C50240 +
           ((C117 * C446 - C50094 * C456) * C118 +
            (C117 * C457 - C50094 * C476) * C106 + (C487 - C488) * C119 +
            (C489 - C490) * C107 + C730 * C120 + C731 * C108 + C732 * C121 +
            C733 * C109) *
               C50110 * C50077) *
              C50284 +
          (((C117 * C281 - C50094 * C291) * C118 +
            (C117 * C292 - C50094 * C311) * C106 + (C322 - C323) * C119 +
            (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
            C621 * C109) *
               C50110 * C50240 +
           ((C50094 * C872 - C117 * C867) * C118 +
            (C50094 * C882 - C117 * C873) * C106 + (C888 - C889) * C119 +
            (C890 - C891) * C107 + (C892 - C893) * C120 + (C894 - C895) * C108 +
            (C896 - C897) * C121 + (C898 - C899) * C109) *
               C50110 * C50077) *
              C50285 +
          (((C50094 * C299 - C117 * C285) * C118 +
            (C50094 * C315 - C117 * C300) * C106 + (C334 - C335) * C119 +
            (C336 - C337) * C107 + (C338 - C339) * C120 + (C340 - C341) * C108 +
            (C342 - C343) * C121 + (C344 - C345) * C109) *
               C50110 * C50240 +
           ((C117 * C1534 - C50094 * C1538) * C118 +
            (C117 * C1539 - C50094 * C1546) * C106 +
            (C117 * C1535 - C50094 * C1540) * C119 +
            (C117 * C1541 - C50094 * C1547) * C107 +
            (C117 * C1536 - C50094 * C1542) * C120 +
            (C117 * C1543 - C50094 * C1548) * C108 +
            (C117 * C1537 - C50094 * C1544) * C121 +
            (C117 * C1545 - C50094 * C1549) * C109) *
               C50110 * C50077) *
              C1303) *
         C49978) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C2269 +
             (C50094 * C143 - C117 * C130) * C2264 + (C151 - C152) * C2270 +
             (C153 - C154) * C49955) *
                C5095 +
            ((C5415 - C5416) * C2269 + (C5417 - C5418) * C2264 + C5419 * C2270 +
             C5420 * C49955) *
                C5096 +
            C5468 * C5097) *
               C50240 +
           (((C5416 - C5415) * C2269 + (C5418 - C5417) * C2264 + C5427 * C2270 +
             C5428 * C49955) *
                C5095 +
            ((C5422 - C5421) * C2269 + (C5424 - C5423) * C2264 + C5429 * C2270 +
             C5430 * C49955) *
                C5096 +
            ((C5431 - C5432) * C2269 + (C5433 - C5434) * C2264 + C5453 * C2270 +
             C5454 * C49955) *
                C5097) *
               C50077) *
              C50284 +
          ((((C117 * C281 - C50094 * C291) * C2269 +
             (C117 * C292 - C50094 * C311) * C2264 + (C322 - C323) * C2270 +
             (C324 - C325) * C49955) *
                C5095 +
            ((C5967 - C5968) * C2269 + (C5969 - C5970) * C2264 + C5971 * C2270 +
             C5972 * C49955) *
                C5096 +
            C6397 * C5097) *
               C50240 +
           (((C5968 - C5967) * C2269 + (C5970 - C5969) * C2264 + C5979 * C2270 +
             C5980 * C49955) *
                C5095 +
            ((C5974 - C5973) * C2269 + (C5976 - C5975) * C2264 + C5981 * C2270 +
             C5982 * C49955) *
                C5096 +
            ((C6389 - C6390) * C2269 + (C6391 - C6392) * C2264 +
             (C5983 - C5984) * C2270 + (C5985 - C5986) * C49955) *
                C5097) *
               C50077) *
              C50285 +
          ((((C50094 * C299 - C117 * C285) * C2269 +
             (C50094 * C315 - C117 * C300) * C2264 + (C334 - C335) * C2270 +
             (C336 - C337) * C49955) *
                C5095 +
            ((C6884 - C6885) * C2269 + (C6886 - C6887) * C2264 +
             (C5249 - C5250) * C2270 + (C5251 - C5252) * C49955) *
                C5096 +
            ((C6888 - C6889) * C2269 + (C6890 - C6891) * C2264 +
             (C5253 - C5254) * C2270 + (C5255 - C5256) * C49955) *
                C5097) *
               C50240 +
           (((C6885 - C6884) * C2269 + (C6887 - C6886) * C2264 +
             (C5250 - C5249) * C2270 + (C5252 - C5251) * C49955) *
                C5095 +
            ((C6889 - C6888) * C2269 + (C6891 - C6890) * C2264 +
             (C5254 - C5253) * C2270 + (C5256 - C5255) * C49955) *
                C5096 +
            ((C117 * C4496 - C50094 * C4500) * C2269 +
             (C117 * C4502 - C50094 * C4508) * C2264 +
             (C117 * C4498 - C50094 * C4504) * C2270 +
             (C117 * C4506 - C50094 * C4510) * C49955) *
                C5097) *
               C50077) *
              C1303) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C50094 * C129 - C117 * C122) * C118 +
                (C50094 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
                (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
                C174 * C109) *
                   C50110 * C50013 * C997 +
               ((C117 * C281 - C50094 * C291) * C118 +
                (C117 * C292 - C50094 * C311) * C106 + (C322 - C323) * C119 +
                (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
                C621 * C109) *
                   C50110 * C50013 * C50049) *
                  C999 +
              (((C152 - C151) * C118 + (C154 - C153) * C106 +
                (C156 - C155) * C119 + (C158 - C157) * C107 + C175 * C120 +
                C176 * C108 + C177 * C121 + C178 * C109) *
                   C50110 * C50013 * C997 +
               ((C323 - C322) * C118 + (C325 - C324) * C106 +
                (C327 - C326) * C119 + (C329 - C328) * C107 +
                (C331 - C330) * C120 + (C333 - C332) * C108 +
                (C622 - C623) * C121 + (C624 - C625) * C109) *
                   C50110 * C50013 * C50049) *
                  C1000 +
              ((C171 * C118 + C172 * C106 + C173 * C119 + C174 * C107 +
                (C164 - C163) * C120 + (C166 - C165) * C108 +
                (C167 - C168) * C121 + (C169 - C170) * C109) *
                   C50110 * C50013 * C997 +
               (C618 * C118 + C619 * C106 + C620 * C119 + C621 * C107 +
                (C623 - C622) * C120 + (C625 - C624) * C108 +
                (C117 * C613 - C50094 * C614) * C121 +
                (C117 * C615 - C50094 * C616) * C109) *
                   C50110 * C50013 * C50049) *
                  C1001) +
         0.5 * std::pow(Pi, 2.5) *
             (((C50094 * C129 - C117 * C122) * C118 +
               (C50094 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
               (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
               C174 * C109) *
                  C50110 * C50013 * C1068 +
              ((C117 * C281 - C50094 * C291) * C118 +
               (C117 * C292 - C50094 * C311) * C106 + (C322 - C323) * C119 +
               (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
               C621 * C109) *
                  C50110 * C50013 * C1069 +
              ((C50094 * C299 - C117 * C285) * C118 +
               (C50094 * C315 - C117 * C300) * C106 + (C334 - C335) * C119 +
               (C336 - C337) * C107 + (C338 - C339) * C120 +
               (C340 - C341) * C108 + (C342 - C343) * C121 +
               (C344 - C345) * C109) *
                  C50110 * C50013 * C1070 +
              ((C117 * C1073 - C50094 * C1077) * C118 +
               (C117 * C1078 - C50094 * C1085) * C106 +
               (C117 * C1074 - C50094 * C1079) * C119 +
               (C117 * C1080 - C50094 * C1086) * C107 +
               (C117 * C1075 - C50094 * C1081) * C120 +
               (C117 * C1082 - C50094 * C1087) * C108 +
               (C117 * C1076 - C50094 * C1083) * C121 +
               (C117 * C1084 - C50094 * C1088) * C109) *
                  C50110 * C50013 * C1071) *
             C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C118 +
            (C50094 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50110 * C443 +
           ((C117 * C446 - C50094 * C456) * C118 +
            (C117 * C457 - C50094 * C476) * C106 + (C487 - C488) * C119 +
            (C489 - C490) * C107 + C730 * C120 + C731 * C108 + C732 * C121 +
            C733 * C109) *
               C50110 * C444 +
           ((C50094 * C464 - C117 * C450) * C118 +
            (C50094 * C480 - C117 * C465) * C106 + (C499 - C500) * C119 +
            (C501 - C502) * C107 + (C503 - C504) * C120 + (C505 - C506) * C108 +
            (C507 - C508) * C121 + (C509 - C510) * C109) *
               C50110 * C445) *
              C997 +
          (((C117 * C281 - C50094 * C291) * C118 +
            (C117 * C292 - C50094 * C311) * C106 + (C322 - C323) * C119 +
            (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
            C621 * C109) *
               C50110 * C443 +
           ((C50094 * C872 - C117 * C867) * C118 +
            (C50094 * C882 - C117 * C873) * C106 + (C888 - C889) * C119 +
            (C890 - C891) * C107 + (C892 - C893) * C120 + (C894 - C895) * C108 +
            (C896 - C897) * C121 + (C898 - C899) * C109) *
               C50110 * C444 +
           ((C117 * C1187 - C50094 * C1191) * C118 +
            (C117 * C1192 - C50094 * C1199) * C106 +
            (C117 * C1188 - C50094 * C1193) * C119 +
            (C117 * C1194 - C50094 * C1200) * C107 +
            (C117 * C1189 - C50094 * C1195) * C120 +
            (C117 * C1196 - C50094 * C1201) * C108 +
            (C117 * C1190 - C50094 * C1197) * C121 +
            (C117 * C1198 - C50094 * C1202) * C109) *
               C50110 * C445) *
              C50049) *
         C49978) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
             C2263 * C299 - C2268 * C285) *
                C2269 +
            (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
             C2263 * C315 - C2268 * C300) *
                C2264 +
            (C2272 - C2273 + C2274 - C2275 + C2276 - C2277) * C2270 +
            (C2278 - C2279 + C2280 - C2281 + C2282 - C2283) * C49955) *
               C50110 * C50013 * C997 +
           ((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
             C2268 * C1073 - C2263 * C1077) *
                C2269 +
            (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
             C2268 * C1078 - C2263 * C1085) *
                C2264 +
            (C2466 - C2467 + C2468 - C2469 + C2470 - C2471) * C2270 +
            (C2472 - C2473 + C2474 - C2475 + C2476 - C2477) * C49955) *
               C50110 * C50013 * C50049) *
              C999 +
          (((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C2269 +
            (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C2264 +
            (C2284 - C2285 + C2286 - C2287 + C2288 - C2289) * C2270 +
            (C2290 - C2291 + C2292 - C2293 + C2294 - C2295) * C49955) *
               C50110 * C50013 * C997 +
           ((C2467 - C2466 + C2469 - C2468 + C2471 - C2470) * C2269 +
            (C2473 - C2472 + C2475 - C2474 + C2477 - C2476) * C2264 +
            (C2818 - C2819 + C2820 - C2821 + C2822 - C2823) * C2270 +
            (C2824 - C2825 + C2826 - C2827 + C2828 - C2829) * C49955) *
               C50110 * C50013 * C50049) *
              C1000 +
          (((C2285 - C2284 + C2287 - C2286 + C2289 - C2288) * C2269 +
            (C2291 - C2290 + C2293 - C2292 + C2295 - C2294) * C2264 +
            (C2296 - C2297 + C2298 - C2299 + C2300 - C2301) * C2270 +
            (C2302 - C2303 + C2304 - C2305 + C2306 - C2307) * C49955) *
               C50110 * C50013 * C997 +
           ((C2819 - C2818 + C2821 - C2820 + C2823 - C2822) * C2269 +
            (C2825 - C2824 + C2827 - C2826 + C2829 - C2828) * C2264 +
            (C2266 * C284 - C2261 * C297 + C2267 * C288 - C2262 * C305 +
             C2268 * C1076 - C2263 * C1083) *
                C2270 +
            (C2266 * C298 - C2261 * C314 + C2267 * C306 - C2262 * C318 +
             C2268 * C1084 - C2263 * C1088) *
                C49955) *
               C50110 * C50013 * C50049) *
              C1001)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
            C2263 * C299 - C2268 * C285) *
               C2269 +
           (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
            C2263 * C315 - C2268 * C300) *
               C2264 +
           (C2272 - C2273 + C2274 - C2275 + C2276 - C2277) * C2270 +
           (C2278 - C2279 + C2280 - C2281 + C2282 - C2283) * C49955) *
              C50110 * C50013 * C1068 +
          ((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
            C2268 * C1073 - C2263 * C1077) *
               C2269 +
           (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
            C2268 * C1078 - C2263 * C1085) *
               C2264 +
           (C2466 - C2467 + C2468 - C2469 + C2470 - C2471) * C2270 +
           (C2472 - C2473 + C2474 - C2475 + C2476 - C2477) * C49955) *
              C50110 * C50013 * C1069 +
          ((C2261 * C299 - C2266 * C285 + C2262 * C1077 - C2267 * C1073 +
            C2263 * C2456 - C2268 * C2453) *
               C2269 +
           (C2261 * C315 - C2266 * C300 + C2262 * C1085 - C2267 * C1078 +
            C2263 * C2462 - C2268 * C2457) *
               C2264 +
           (C2478 - C2479 + C2480 - C2481 + C2482 - C2483) * C2270 +
           (C2484 - C2485 + C2486 - C2487 + C2488 - C2489) * C49955) *
              C50110 * C50013 * C1070 +
          ((C2266 * C1073 - C2261 * C1077 + C2267 * C2453 - C2262 * C2456 +
            C2268 * C3449 - C2263 * C3451) *
               C2269 +
           (C2266 * C1078 - C2261 * C1085 + C2267 * C2457 - C2262 * C2462 +
            C2268 * C3452 - C2263 * C3455) *
               C2264 +
           (C2266 * C1074 - C2261 * C1079 + C2267 * C2454 - C2262 * C2458 +
            C2268 * C3450 - C2263 * C3453) *
               C2270 +
           (C2266 * C1080 - C2261 * C1086 + C2267 * C2459 - C2262 * C2463 +
            C2268 * C3454 - C2263 * C3456) *
               C49955) *
              C50110 * C50013 * C1071) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
             C2263 * C299 - C2268 * C285) *
                C2269 +
            (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
             C2263 * C315 - C2268 * C300) *
                C2264 +
            (C2272 - C2273 + C2274 - C2275 + C2276 - C2277) * C2270 +
            (C2278 - C2279 + C2280 - C2281 + C2282 - C2283) * C49955) *
               C50110 * C443 +
           ((C2266 * C446 - C2261 * C456 + C2267 * C867 - C2262 * C872 +
             C2268 * C1534 - C2263 * C1538) *
                C2269 +
            (C2266 * C457 - C2261 * C476 + C2267 * C873 - C2262 * C882 +
             C2268 * C1539 - C2263 * C1546) *
                C2264 +
            (C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C2270 +
            (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49955) *
               C50110 * C444 +
           ((C2261 * C464 - C2266 * C450 + C2262 * C1191 - C2267 * C1187 +
             C2263 * C2638 - C2268 * C2635) *
                C2269 +
            (C2261 * C480 - C2266 * C465 + C2262 * C1199 - C2267 * C1192 +
             C2263 * C2644 - C2268 * C2639) *
                C2264 +
            (C2660 - C2661 + C2662 - C2663 + C2664 - C2665) * C2270 +
            (C2666 - C2667 + C2668 - C2669 + C2670 - C2671) * C49955) *
               C50110 * C445) *
              C997 +
          (((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
             C2268 * C1073 - C2263 * C1077) *
                C2269 +
            (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
             C2268 * C1078 - C2263 * C1085) *
                C2264 +
            (C2466 - C2467 + C2468 - C2469 + C2470 - C2471) * C2270 +
            (C2472 - C2473 + C2474 - C2475 + C2476 - C2477) * C49955) *
               C50110 * C443 +
           ((C2261 * C872 - C2266 * C867 + C2262 * C1538 - C2267 * C1534 +
             C2263 * C3184 - C2268 * C3181) *
                C2269 +
            (C2261 * C882 - C2266 * C873 + C2262 * C1546 - C2267 * C1539 +
             C2263 * C3190 - C2268 * C3185) *
                C2264 +
            (C3194 - C3195 + C3196 - C3197 + C3198 - C3199) * C2270 +
            (C3200 - C3201 + C3202 - C3203 + C3204 - C3205) * C49955) *
               C50110 * C444 +
           ((C2266 * C1187 - C2261 * C1191 + C2267 * C2635 - C2262 * C2638 +
             C2268 * C3603 - C2263 * C3605) *
                C2269 +
            (C2266 * C1192 - C2261 * C1199 + C2267 * C2639 - C2262 * C2644 +
             C2268 * C3606 - C2263 * C3609) *
                C2264 +
            (C2266 * C1188 - C2261 * C1193 + C2267 * C2636 - C2262 * C2640 +
             C2268 * C3604 - C2263 * C3607) *
                C2270 +
            (C2266 * C1194 - C2261 * C1200 + C2267 * C2641 - C2262 * C2645 +
             C2268 * C3608 - C2263 * C3610) *
                C49955) *
               C50110 * C445) *
              C50049) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C2269 +
             (C50094 * C143 - C117 * C130) * C2264 + (C151 - C152) * C2270 +
             (C153 - C154) * C49955) *
                C5095 +
            ((C5415 - C5416) * C2269 + (C5417 - C5418) * C2264 + C5419 * C2270 +
             C5420 * C49955) *
                C5096 +
            C5468 * C5097) *
               C50013 * C997 +
           (((C117 * C281 - C50094 * C291) * C2269 +
             (C117 * C292 - C50094 * C311) * C2264 + (C322 - C323) * C2270 +
             (C324 - C325) * C49955) *
                C5095 +
            ((C5967 - C5968) * C2269 + (C5969 - C5970) * C2264 + C5971 * C2270 +
             C5972 * C49955) *
                C5096 +
            ((C5973 - C5974) * C2269 + (C5975 - C5976) * C2264 + C5977 * C2270 +
             C5978 * C49955) *
                C5097) *
               C50013 * C50049) *
              C999 +
          ((((C152 - C151) * C2269 + (C154 - C153) * C2264 +
             (C156 - C155) * C2270 + (C158 - C157) * C49955) *
                C5095 +
            (C5427 * C2269 + C5428 * C2264 + C730 * C2270 + C731 * C49955) *
                C5096 +
            C5467 * C5097) *
               C50013 * C997 +
           (((C323 - C322) * C2269 + (C325 - C324) * C2264 +
             (C327 - C326) * C2270 + (C329 - C328) * C49955) *
                C5095 +
            (C5979 * C2269 + C5980 * C2264 + (C892 - C893) * C2270 +
             (C894 - C895) * C49955) *
                C5096 +
            (C5981 * C2269 + C5982 * C2264 + (C5615 - C5616) * C2270 +
             (C5617 - C5618) * C49955) *
                C5097) *
               C50013 * C50049) *
              C1000 +
          (((C171 * C2269 + C172 * C2264 + C173 * C2270 + C174 * C49955) *
                C5095 +
            (C5765 * C2269 + C5766 * C2264 + (C496 - C495) * C2270 +
             (C498 - C497) * C49955) *
                C5096 +
            (C5767 * C2269 + C5768 * C2264 + (C507 - C508) * C2270 +
             (C509 - C510) * C49955) *
                C5097) *
               C50013 * C997 +
           ((C618 * C2269 + C619 * C2264 + C620 * C2270 + C621 * C49955) *
                C5095 +
            ((C893 - C892) * C2269 + (C895 - C894) * C2264 +
             (C897 - C896) * C2270 + (C899 - C898) * C49955) *
                C5096 +
            ((C5616 - C5615) * C2269 + (C5618 - C5617) * C2264 +
             (C117 * C1190 - C50094 * C1197) * C2270 +
             (C117 * C1198 - C50094 * C1202) * C49955) *
                C5097) *
               C50013 * C50049) *
              C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C2269 +
            (C50094 * C143 - C117 * C130) * C2264 + (C151 - C152) * C2270 +
            (C153 - C154) * C49955) *
               C5095 +
           ((C5415 - C5416) * C2269 + (C5417 - C5418) * C2264 + C5419 * C2270 +
            C5420 * C49955) *
               C5096 +
           C5468 * C5097) *
              C50013 * C1068 +
          (((C117 * C281 - C50094 * C291) * C2269 +
            (C117 * C292 - C50094 * C311) * C2264 + (C322 - C323) * C2270 +
            (C324 - C325) * C49955) *
               C5095 +
           ((C5967 - C5968) * C2269 + (C5969 - C5970) * C2264 + C5971 * C2270 +
            C5972 * C49955) *
               C5096 +
           ((C5973 - C5974) * C2269 + (C5975 - C5976) * C2264 + C5977 * C2270 +
            C5978 * C49955) *
               C5097) *
              C50013 * C1069 +
          (((C50094 * C299 - C117 * C285) * C2269 +
            (C50094 * C315 - C117 * C300) * C2264 + (C334 - C335) * C2270 +
            (C336 - C337) * C49955) *
               C5095 +
           ((C50094 * C1538 - C117 * C1534) * C2269 +
            (C50094 * C1546 - C117 * C1539) * C2264 + (C5249 - C5250) * C2270 +
            (C5251 - C5252) * C49955) *
               C5096 +
           ((C50094 * C2638 - C117 * C2635) * C2269 +
            (C50094 * C2644 - C117 * C2639) * C2264 + (C5253 - C5254) * C2270 +
            (C5255 - C5256) * C49955) *
               C5097) *
              C50013 * C1070 +
          (((C117 * C1073 - C50094 * C1077) * C2269 +
            (C117 * C1078 - C50094 * C1085) * C2264 +
            (C117 * C1074 - C50094 * C1079) * C2270 +
            (C117 * C1080 - C50094 * C1086) * C49955) *
               C5095 +
           ((C117 * C3181 - C50094 * C3184) * C2269 +
            (C117 * C3185 - C50094 * C3190) * C2264 +
            (C117 * C3182 - C50094 * C3186) * C2270 +
            (C117 * C3187 - C50094 * C3191) * C49955) *
               C5096 +
           ((C117 * C3603 - C50094 * C3605) * C2269 +
            (C117 * C3606 - C50094 * C3609) * C2264 +
            (C117 * C3604 - C50094 * C3607) * C2270 +
            (C117 * C3608 - C50094 * C3610) * C49955) *
               C5097) *
              C50013 * C1071) *
         C49978) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C2269 +
             (C50094 * C143 - C117 * C130) * C2264 + (C151 - C152) * C2270 +
             (C153 - C154) * C49955) *
                C5095 +
            ((C5415 - C5416) * C2269 + (C5417 - C5418) * C2264 + C5419 * C2270 +
             C5420 * C49955) *
                C5096 +
            C5468 * C5097) *
               C443 +
           (((C5416 - C5415) * C2269 + (C5418 - C5417) * C2264 + C5427 * C2270 +
             C5428 * C49955) *
                C5095 +
            ((C5422 - C5421) * C2269 + (C5424 - C5423) * C2264 + C5429 * C2270 +
             C5430 * C49955) *
                C5096 +
            ((C5431 - C5432) * C2269 + (C5433 - C5434) * C2264 + C5453 * C2270 +
             C5454 * C49955) *
                C5097) *
               C444 +
           (C5468 * C5095 +
            ((C5432 - C5431) * C2269 + (C5434 - C5433) * C2264 + C5455 * C2270 +
             C5456 * C49955) *
                C5096 +
            ((C50094 * C5405 - C117 * C5402) * C2269 +
             (C50094 * C5411 - C117 * C5406) * C2264 + (C5439 - C5440) * C2270 +
             (C5441 - C5442) * C49955) *
                C5097) *
               C445) *
              C997 +
          ((((C117 * C281 - C50094 * C291) * C2269 +
             (C117 * C292 - C50094 * C311) * C2264 + (C322 - C323) * C2270 +
             (C324 - C325) * C49955) *
                C5095 +
            ((C5967 - C5968) * C2269 + (C5969 - C5970) * C2264 + C5971 * C2270 +
             C5972 * C49955) *
                C5096 +
            C6397 * C5097) *
               C443 +
           (((C5968 - C5967) * C2269 + (C5970 - C5969) * C2264 + C5979 * C2270 +
             C5980 * C49955) *
                C5095 +
            ((C5974 - C5973) * C2269 + (C5976 - C5975) * C2264 + C5981 * C2270 +
             C5982 * C49955) *
                C5096 +
            ((C6389 - C6390) * C2269 + (C6391 - C6392) * C2264 +
             (C5983 - C5984) * C2270 + (C5985 - C5986) * C49955) *
                C5097) *
               C444 +
           (C6397 * C5095 +
            ((C6390 - C6389) * C2269 + (C6392 - C6391) * C2264 +
             (C5984 - C5983) * C2270 + (C5986 - C5985) * C49955) *
                C5096 +
            ((C117 * C6376 - C50094 * C6378) * C2269 +
             (C117 * C6379 - C50094 * C6382) * C2264 +
             (C117 * C6377 - C50094 * C6380) * C2270 +
             (C117 * C6381 - C50094 * C6383) * C49955) *
                C5097) *
               C445) *
              C50049) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
              C2263 * C299 - C2268 * C285) *
                 C2269 +
             (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
              C2263 * C315 - C2268 * C300) *
                 C2264 +
             (C2272 - C2273 + C2274 - C2275 + C2276 - C2277) * C2270 +
             (C2278 - C2279 + C2280 - C2281 + C2282 - C2283) * C49955) *
                C50110 * C50240 +
            ((C2266 * C446 - C2261 * C456 + C2267 * C867 - C2262 * C872 +
              C2268 * C1534 - C2263 * C1538) *
                 C2269 +
             (C2266 * C457 - C2261 * C476 + C2267 * C873 - C2262 * C882 +
              C2268 * C1539 - C2263 * C1546) *
                 C2264 +
             (C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C2270 +
             (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49955) *
                C50110 * C50077) *
               C997 +
           (((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
              C2268 * C1073 - C2263 * C1077) *
                 C2269 +
             (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
              C2268 * C1078 - C2263 * C1085) *
                 C2264 +
             (C2466 - C2467 + C2468 - C2469 + C2470 - C2471) * C2270 +
             (C2472 - C2473 + C2474 - C2475 + C2476 - C2477) * C49955) *
                C50110 * C50240 +
            ((C2261 * C872 - C2266 * C867 + C2262 * C1538 - C2267 * C1534 +
              C2263 * C3184 - C2268 * C3181) *
                 C2269 +
             (C2261 * C882 - C2266 * C873 + C2262 * C1546 - C2267 * C1539 +
              C2263 * C3190 - C2268 * C3185) *
                 C2264 +
             (C3194 - C3195 + C3196 - C3197 + C3198 - C3199) * C2270 +
             (C3200 - C3201 + C3202 - C3203 + C3204 - C3205) * C49955) *
                C50110 * C50077) *
               C50049) *
              C50231 +
          ((((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C2269 +
             (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C2264 +
             (C2284 - C2285 + C2286 - C2287 + C2288 - C2289) * C2270 +
             (C2290 - C2291 + C2292 - C2293 + C2294 - C2295) * C49955) *
                C50110 * C50240 +
            ((C2649 - C2648 + C2651 - C2650 + C2653 - C2652) * C2269 +
             (C2655 - C2654 + C2657 - C2656 + C2659 - C2658) * C2264 +
             (C2976 - C2977 + C2978 - C2979 + C2980 - C2981) * C2270 +
             (C2982 - C2983 + C2984 - C2985 + C2986 - C2987) * C49955) *
                C50110 * C50077) *
               C997 +
           (((C2467 - C2466 + C2469 - C2468 + C2471 - C2470) * C2269 +
             (C2473 - C2472 + C2475 - C2474 + C2477 - C2476) * C2264 +
             (C2818 - C2819 + C2820 - C2821 + C2822 - C2823) * C2270 +
             (C2824 - C2825 + C2826 - C2827 + C2828 - C2829) * C49955) *
                C50110 * C50240 +
            ((C3195 - C3194 + C3197 - C3196 + C3199 - C3198) * C2269 +
             (C3201 - C3200 + C3203 - C3202 + C3205 - C3204) * C2264 +
             (C2266 * C869 - C2261 * C876 + C2267 * C1536 - C2262 * C1542 +
              C2268 * C3183 - C2263 * C3188) *
                 C2270 +
             (C2266 * C877 - C2261 * C884 + C2267 * C1543 - C2262 * C1548 +
              C2268 * C3189 - C2263 * C3192) *
                 C49955) *
                C50110 * C50077) *
               C50049) *
              C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C118 +
             (C50094 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
             (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
             C174 * C109) *
                C50110 * C50240 +
            ((C117 * C446 - C50094 * C456) * C118 +
             (C117 * C457 - C50094 * C476) * C106 + (C487 - C488) * C119 +
             (C489 - C490) * C107 + C730 * C120 + C731 * C108 + C732 * C121 +
             C733 * C109) *
                C50110 * C50077) *
               C997 +
           (((C117 * C281 - C50094 * C291) * C118 +
             (C117 * C292 - C50094 * C311) * C106 + (C322 - C323) * C119 +
             (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
             C621 * C109) *
                C50110 * C50240 +
            ((C50094 * C872 - C117 * C867) * C118 +
             (C50094 * C882 - C117 * C873) * C106 + (C888 - C889) * C119 +
             (C890 - C891) * C107 + (C892 - C893) * C120 +
             (C894 - C895) * C108 + (C896 - C897) * C121 +
             (C898 - C899) * C109) *
                C50110 * C50077) *
               C50049) *
              C50231 +
          ((((C152 - C151) * C118 + (C154 - C153) * C106 +
             (C156 - C155) * C119 + (C158 - C157) * C107 + C175 * C120 +
             C176 * C108 + C177 * C121 + C178 * C109) *
                C50110 * C50240 +
            ((C488 - C487) * C118 + (C490 - C489) * C106 +
             (C492 - C491) * C119 + (C494 - C493) * C107 +
             (C496 - C495) * C120 + (C498 - C497) * C108 +
             (C734 - C735) * C121 + (C736 - C737) * C109) *
                C50110 * C50077) *
               C997 +
           (((C323 - C322) * C118 + (C325 - C324) * C106 +
             (C327 - C326) * C119 + (C329 - C328) * C107 +
             (C331 - C330) * C120 + (C333 - C332) * C108 +
             (C622 - C623) * C121 + (C624 - C625) * C109) *
                C50110 * C50240 +
            ((C889 - C888) * C118 + (C891 - C890) * C106 +
             (C893 - C892) * C119 + (C895 - C894) * C107 +
             (C897 - C896) * C120 + (C899 - C898) * C108 +
             (C117 * C871 - C50094 * C880) * C121 +
             (C117 * C881 - C50094 * C886) * C109) *
                C50110 * C50077) *
               C50049) *
              C49984)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C50094 * C129 - C117 * C122) * C2269 +
              (C50094 * C143 - C117 * C130) * C2264 + (C151 - C152) * C2270 +
              (C153 - C154) * C49955) *
                 C5095 +
             ((C5415 - C5416) * C2269 + (C5417 - C5418) * C2264 +
              C5419 * C2270 + C5420 * C49955) *
                 C5096 +
             C5468 * C5097) *
                C50240 +
            (((C5416 - C5415) * C2269 + (C5418 - C5417) * C2264 +
              C5427 * C2270 + C5428 * C49955) *
                 C5095 +
             ((C5422 - C5421) * C2269 + (C5424 - C5423) * C2264 +
              C5429 * C2270 + C5430 * C49955) *
                 C5096 +
             ((C5431 - C5432) * C2269 + (C5433 - C5434) * C2264 +
              C5453 * C2270 + C5454 * C49955) *
                 C5097) *
                C50077) *
               C997 +
           ((((C117 * C281 - C50094 * C291) * C2269 +
              (C117 * C292 - C50094 * C311) * C2264 + (C322 - C323) * C2270 +
              (C324 - C325) * C49955) *
                 C5095 +
             ((C5967 - C5968) * C2269 + (C5969 - C5970) * C2264 +
              C5971 * C2270 + C5972 * C49955) *
                 C5096 +
             C6397 * C5097) *
                C50240 +
            (((C5968 - C5967) * C2269 + (C5970 - C5969) * C2264 +
              C5979 * C2270 + C5980 * C49955) *
                 C5095 +
             ((C5974 - C5973) * C2269 + (C5976 - C5975) * C2264 +
              C5981 * C2270 + C5982 * C49955) *
                 C5096 +
             ((C6389 - C6390) * C2269 + (C6391 - C6392) * C2264 +
              (C5983 - C5984) * C2270 + (C5985 - C5986) * C49955) *
                 C5097) *
                C50077) *
               C50049) *
              C50231 +
          (((((C152 - C151) * C2269 + (C154 - C153) * C2264 +
              (C156 - C155) * C2270 + (C158 - C157) * C49955) *
                 C5095 +
             (C5427 * C2269 + C5428 * C2264 + C730 * C2270 + C731 * C49955) *
                 C5096 +
             C5467 * C5097) *
                C50240 +
            ((C5419 * C2269 + C5420 * C2264 + C5765 * C2270 + C5766 * C49955) *
                 C5095 +
             (C5425 * C2269 + C5426 * C2264 + C5767 * C2270 + C5768 * C49955) *
                 C5096 +
             (C5455 * C2269 + C5456 * C2264 + (C5445 - C5446) * C2270 +
              (C5447 - C5448) * C49955) *
                 C5097) *
                C50077) *
               C997 +
           ((((C323 - C322) * C2269 + (C325 - C324) * C2264 +
              (C327 - C326) * C2270 + (C329 - C328) * C49955) *
                 C5095 +
             (C5979 * C2269 + C5980 * C2264 + (C892 - C893) * C2270 +
              (C894 - C895) * C49955) *
                 C5096 +
             (C5981 * C2269 + C5982 * C2264 + (C5615 - C5616) * C2270 +
              (C5617 - C5618) * C49955) *
                 C5097) *
                C50240 +
            ((C5971 * C2269 + C5972 * C2264 + (C893 - C892) * C2270 +
              (C895 - C894) * C49955) *
                 C5095 +
             (C5977 * C2269 + C5978 * C2264 + (C5616 - C5615) * C2270 +
              (C5618 - C5617) * C49955) *
                 C5096 +
             ((C5984 - C5983) * C2269 + (C5986 - C5985) * C2264 +
              (C117 * C5962 - C50094 * C5963) * C2270 +
              (C117 * C5964 - C50094 * C5965) * C49955) *
                 C5097) *
                C50077) *
               C50049) *
              C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C50094 * C129 - C117 * C122) * C118 +
           (C50094 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
           (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
           C174 * C109) *
              C50110 * C50013 * C1068 +
          ((C117 * C281 - C50094 * C291) * C118 +
           (C117 * C292 - C50094 * C311) * C106 + (C322 - C323) * C119 +
           (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
           C621 * C109) *
              C50110 * C50013 * C1069 +
          ((C50094 * C299 - C117 * C285) * C118 +
           (C50094 * C315 - C117 * C300) * C106 + (C334 - C335) * C119 +
           (C336 - C337) * C107 + (C338 - C339) * C120 + (C340 - C341) * C108 +
           (C342 - C343) * C121 + (C344 - C345) * C109) *
              C50110 * C50013 * C1070 +
          ((C117 * C1073 - C50094 * C1077) * C118 +
           (C117 * C1078 - C50094 * C1085) * C106 +
           (C117 * C1074 - C50094 * C1079) * C119 +
           (C117 * C1080 - C50094 * C1086) * C107 +
           (C117 * C1075 - C50094 * C1081) * C120 +
           (C117 * C1082 - C50094 * C1087) * C108 +
           (C117 * C1076 - C50094 * C1083) * C121 +
           (C117 * C1084 - C50094 * C1088) * C109) *
              C50110 * C50013 * C1071) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C118 +
            (C50094 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50110 * C50013 * C997 +
           ((C117 * C281 - C50094 * C291) * C118 +
            (C117 * C292 - C50094 * C311) * C106 + (C322 - C323) * C119 +
            (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
            C621 * C109) *
               C50110 * C50013 * C50049) *
              C999 +
          (((C152 - C151) * C118 + (C154 - C153) * C106 + (C156 - C155) * C119 +
            (C158 - C157) * C107 + C175 * C120 + C176 * C108 + C177 * C121 +
            C178 * C109) *
               C50110 * C50013 * C997 +
           ((C323 - C322) * C118 + (C325 - C324) * C106 + (C327 - C326) * C119 +
            (C329 - C328) * C107 + (C331 - C330) * C120 + (C333 - C332) * C108 +
            (C622 - C623) * C121 + (C624 - C625) * C109) *
               C50110 * C50013 * C50049) *
              C1000 +
          ((C171 * C118 + C172 * C106 + C173 * C119 + C174 * C107 +
            (C164 - C163) * C120 + (C166 - C165) * C108 + (C167 - C168) * C121 +
            (C169 - C170) * C109) *
               C50110 * C50013 * C997 +
           (C618 * C118 + C619 * C106 + C620 * C119 + C621 * C107 +
            (C623 - C622) * C120 + (C625 - C624) * C108 +
            (C117 * C613 - C50094 * C614) * C121 +
            (C117 * C615 - C50094 * C616) * C109) *
               C50110 * C50013 * C50049) *
              C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
             C2263 * C299 - C2268 * C285) *
                C2269 +
            (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
             C2263 * C315 - C2268 * C300) *
                C2264 +
            (C2272 - C2273 + C2274 - C2275 + C2276 - C2277) * C2270 +
            (C2278 - C2279 + C2280 - C2281 + C2282 - C2283) * C49955) *
               C50110 * C50013 * C997 +
           ((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
             C2268 * C1073 - C2263 * C1077) *
                C2269 +
            (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
             C2268 * C1078 - C2263 * C1085) *
                C2264 +
            (C2466 - C2467 + C2468 - C2469 + C2470 - C2471) * C2270 +
            (C2472 - C2473 + C2474 - C2475 + C2476 - C2477) * C49955) *
               C50110 * C50013 * C50049) *
              C999 +
          (((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C2269 +
            (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C2264 +
            (C2284 - C2285 + C2286 - C2287 + C2288 - C2289) * C2270 +
            (C2290 - C2291 + C2292 - C2293 + C2294 - C2295) * C49955) *
               C50110 * C50013 * C997 +
           ((C2467 - C2466 + C2469 - C2468 + C2471 - C2470) * C2269 +
            (C2473 - C2472 + C2475 - C2474 + C2477 - C2476) * C2264 +
            (C2818 - C2819 + C2820 - C2821 + C2822 - C2823) * C2270 +
            (C2824 - C2825 + C2826 - C2827 + C2828 - C2829) * C49955) *
               C50110 * C50013 * C50049) *
              C1000 +
          (((C2285 - C2284 + C2287 - C2286 + C2289 - C2288) * C2269 +
            (C2291 - C2290 + C2293 - C2292 + C2295 - C2294) * C2264 +
            (C2296 - C2297 + C2298 - C2299 + C2300 - C2301) * C2270 +
            (C2302 - C2303 + C2304 - C2305 + C2306 - C2307) * C49955) *
               C50110 * C50013 * C997 +
           ((C2819 - C2818 + C2821 - C2820 + C2823 - C2822) * C2269 +
            (C2825 - C2824 + C2827 - C2826 + C2829 - C2828) * C2264 +
            (C2266 * C284 - C2261 * C297 + C2267 * C288 - C2262 * C305 +
             C2268 * C1076 - C2263 * C1083) *
                C2270 +
            (C2266 * C298 - C2261 * C314 + C2267 * C306 - C2262 * C318 +
             C2268 * C1084 - C2263 * C1088) *
                C49955) *
               C50110 * C50013 * C50049) *
              C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
            C2263 * C299 - C2268 * C285) *
               C2269 +
           (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
            C2263 * C315 - C2268 * C300) *
               C2264 +
           (C2272 - C2273 + C2274 - C2275 + C2276 - C2277) * C2270 +
           (C2278 - C2279 + C2280 - C2281 + C2282 - C2283) * C49955) *
              C50110 * C50013 * C1068 +
          ((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
            C2268 * C1073 - C2263 * C1077) *
               C2269 +
           (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
            C2268 * C1078 - C2263 * C1085) *
               C2264 +
           (C2466 - C2467 + C2468 - C2469 + C2470 - C2471) * C2270 +
           (C2472 - C2473 + C2474 - C2475 + C2476 - C2477) * C49955) *
              C50110 * C50013 * C1069 +
          ((C2261 * C299 - C2266 * C285 + C2262 * C1077 - C2267 * C1073 +
            C2263 * C2456 - C2268 * C2453) *
               C2269 +
           (C2261 * C315 - C2266 * C300 + C2262 * C1085 - C2267 * C1078 +
            C2263 * C2462 - C2268 * C2457) *
               C2264 +
           (C2478 - C2479 + C2480 - C2481 + C2482 - C2483) * C2270 +
           (C2484 - C2485 + C2486 - C2487 + C2488 - C2489) * C49955) *
              C50110 * C50013 * C1070 +
          ((C2266 * C1073 - C2261 * C1077 + C2267 * C2453 - C2262 * C2456 +
            C2268 * C3449 - C2263 * C3451) *
               C2269 +
           (C2266 * C1078 - C2261 * C1085 + C2267 * C2457 - C2262 * C2462 +
            C2268 * C3452 - C2263 * C3455) *
               C2264 +
           (C2266 * C1074 - C2261 * C1079 + C2267 * C2454 - C2262 * C2458 +
            C2268 * C3450 - C2263 * C3453) *
               C2270 +
           (C2266 * C1080 - C2261 * C1086 + C2267 * C2459 - C2262 * C2463 +
            C2268 * C3454 - C2263 * C3456) *
               C49955) *
              C50110 * C50013 * C1071) *
         C49978) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C2269 +
             (C50094 * C143 - C117 * C130) * C2264 + (C151 - C152) * C2270 +
             (C153 - C154) * C49955) *
                C5095 +
            ((C5415 - C5416) * C2269 + (C5417 - C5418) * C2264 + C5419 * C2270 +
             C5420 * C49955) *
                C5096 +
            C5468 * C5097) *
               C50013 * C997 +
           (((C117 * C281 - C50094 * C291) * C2269 +
             (C117 * C292 - C50094 * C311) * C2264 + (C322 - C323) * C2270 +
             (C324 - C325) * C49955) *
                C5095 +
            ((C5967 - C5968) * C2269 + (C5969 - C5970) * C2264 + C5971 * C2270 +
             C5972 * C49955) *
                C5096 +
            ((C5973 - C5974) * C2269 + (C5975 - C5976) * C2264 + C5977 * C2270 +
             C5978 * C49955) *
                C5097) *
               C50013 * C50049) *
              C999 +
          ((((C152 - C151) * C2269 + (C154 - C153) * C2264 +
             (C156 - C155) * C2270 + (C158 - C157) * C49955) *
                C5095 +
            (C5427 * C2269 + C5428 * C2264 + C730 * C2270 + C731 * C49955) *
                C5096 +
            C5467 * C5097) *
               C50013 * C997 +
           (((C323 - C322) * C2269 + (C325 - C324) * C2264 +
             (C327 - C326) * C2270 + (C329 - C328) * C49955) *
                C5095 +
            (C5979 * C2269 + C5980 * C2264 + (C892 - C893) * C2270 +
             (C894 - C895) * C49955) *
                C5096 +
            (C5981 * C2269 + C5982 * C2264 + (C5615 - C5616) * C2270 +
             (C5617 - C5618) * C49955) *
                C5097) *
               C50013 * C50049) *
              C1000 +
          (((C171 * C2269 + C172 * C2264 + C173 * C2270 + C174 * C49955) *
                C5095 +
            (C5765 * C2269 + C5766 * C2264 + (C496 - C495) * C2270 +
             (C498 - C497) * C49955) *
                C5096 +
            (C5767 * C2269 + C5768 * C2264 + (C507 - C508) * C2270 +
             (C509 - C510) * C49955) *
                C5097) *
               C50013 * C997 +
           ((C618 * C2269 + C619 * C2264 + C620 * C2270 + C621 * C49955) *
                C5095 +
            ((C893 - C892) * C2269 + (C895 - C894) * C2264 +
             (C897 - C896) * C2270 + (C899 - C898) * C49955) *
                C5096 +
            ((C5616 - C5615) * C2269 + (C5618 - C5617) * C2264 +
             (C117 * C1190 - C50094 * C1197) * C2270 +
             (C117 * C1198 - C50094 * C1202) * C49955) *
                C5097) *
               C50013 * C50049) *
              C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C2269 +
            (C50094 * C143 - C117 * C130) * C2264 + (C151 - C152) * C2270 +
            (C153 - C154) * C49955) *
               C5095 +
           ((C5415 - C5416) * C2269 + (C5417 - C5418) * C2264 + C5419 * C2270 +
            C5420 * C49955) *
               C5096 +
           C5468 * C5097) *
              C50013 * C1068 +
          (((C117 * C281 - C50094 * C291) * C2269 +
            (C117 * C292 - C50094 * C311) * C2264 + (C322 - C323) * C2270 +
            (C324 - C325) * C49955) *
               C5095 +
           ((C5967 - C5968) * C2269 + (C5969 - C5970) * C2264 + C5971 * C2270 +
            C5972 * C49955) *
               C5096 +
           ((C5973 - C5974) * C2269 + (C5975 - C5976) * C2264 + C5977 * C2270 +
            C5978 * C49955) *
               C5097) *
              C50013 * C1069 +
          (((C50094 * C299 - C117 * C285) * C2269 +
            (C50094 * C315 - C117 * C300) * C2264 + (C334 - C335) * C2270 +
            (C336 - C337) * C49955) *
               C5095 +
           ((C50094 * C1538 - C117 * C1534) * C2269 +
            (C50094 * C1546 - C117 * C1539) * C2264 + (C5249 - C5250) * C2270 +
            (C5251 - C5252) * C49955) *
               C5096 +
           ((C50094 * C2638 - C117 * C2635) * C2269 +
            (C50094 * C2644 - C117 * C2639) * C2264 + (C5253 - C5254) * C2270 +
            (C5255 - C5256) * C49955) *
               C5097) *
              C50013 * C1070 +
          (((C117 * C1073 - C50094 * C1077) * C2269 +
            (C117 * C1078 - C50094 * C1085) * C2264 +
            (C117 * C1074 - C50094 * C1079) * C2270 +
            (C117 * C1080 - C50094 * C1086) * C49955) *
               C5095 +
           ((C117 * C3181 - C50094 * C3184) * C2269 +
            (C117 * C3185 - C50094 * C3190) * C2264 +
            (C117 * C3182 - C50094 * C3186) * C2270 +
            (C117 * C3187 - C50094 * C3191) * C49955) *
               C5096 +
           ((C117 * C3603 - C50094 * C3605) * C2269 +
            (C117 * C3606 - C50094 * C3609) * C2264 +
            (C117 * C3604 - C50094 * C3607) * C2270 +
            (C117 * C3608 - C50094 * C3610) * C49955) *
               C5097) *
              C50013 * C1071) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
              C2263 * C299 - C2268 * C285) *
                 C2269 +
             (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
              C2263 * C315 - C2268 * C300) *
                 C2264 +
             (C2272 - C2273 + C2274 - C2275 + C2276 - C2277) * C2270 +
             (C2278 - C2279 + C2280 - C2281 + C2282 - C2283) * C49955) *
                C50110 * C1648 +
            ((C2266 * C446 - C2261 * C456 + C2267 * C867 - C2262 * C872 +
              C2268 * C1534 - C2263 * C1538) *
                 C2269 +
             (C2266 * C457 - C2261 * C476 + C2267 * C873 - C2262 * C882 +
              C2268 * C1539 - C2263 * C1546) *
                 C2264 +
             (C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C2270 +
             (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49955) *
                C50110 * C50077) *
               C50239 +
           (((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
              C2268 * C1073 - C2263 * C1077) *
                 C2269 +
             (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
              C2268 * C1078 - C2263 * C1085) *
                 C2264 +
             (C2466 - C2467 + C2468 - C2469 + C2470 - C2471) * C2270 +
             (C2472 - C2473 + C2474 - C2475 + C2476 - C2477) * C49955) *
                C50110 * C1648 +
            ((C2261 * C872 - C2266 * C867 + C2262 * C1538 - C2267 * C1534 +
              C2263 * C3184 - C2268 * C3181) *
                 C2269 +
             (C2261 * C882 - C2266 * C873 + C2262 * C1546 - C2267 * C1539 +
              C2263 * C3190 - C2268 * C3185) *
                 C2264 +
             (C3194 - C3195 + C3196 - C3197 + C3198 - C3199) * C2270 +
             (C3200 - C3201 + C3202 - C3203 + C3204 - C3205) * C49955) *
                C50110 * C50077) *
               C50049) *
              C50231 +
          ((((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C2269 +
             (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C2264 +
             (C2284 - C2285 + C2286 - C2287 + C2288 - C2289) * C2270 +
             (C2290 - C2291 + C2292 - C2293 + C2294 - C2295) * C49955) *
                C50110 * C1648 +
            ((C2649 - C2648 + C2651 - C2650 + C2653 - C2652) * C2269 +
             (C2655 - C2654 + C2657 - C2656 + C2659 - C2658) * C2264 +
             (C2976 - C2977 + C2978 - C2979 + C2980 - C2981) * C2270 +
             (C2982 - C2983 + C2984 - C2985 + C2986 - C2987) * C49955) *
                C50110 * C50077) *
               C50239 +
           (((C2467 - C2466 + C2469 - C2468 + C2471 - C2470) * C2269 +
             (C2473 - C2472 + C2475 - C2474 + C2477 - C2476) * C2264 +
             (C2818 - C2819 + C2820 - C2821 + C2822 - C2823) * C2270 +
             (C2824 - C2825 + C2826 - C2827 + C2828 - C2829) * C49955) *
                C50110 * C1648 +
            ((C3195 - C3194 + C3197 - C3196 + C3199 - C3198) * C2269 +
             (C3201 - C3200 + C3203 - C3202 + C3205 - C3204) * C2264 +
             (C2266 * C869 - C2261 * C876 + C2267 * C1536 - C2262 * C1542 +
              C2268 * C3183 - C2263 * C3188) *
                 C2270 +
             (C2266 * C877 - C2261 * C884 + C2267 * C1543 - C2262 * C1548 +
              C2268 * C3189 - C2263 * C3192) *
                 C49955) *
                C50110 * C50077) *
               C50049) *
              C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C118 +
             (C50094 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
             (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
             C174 * C109) *
                C50110 * C1648 +
            ((C117 * C446 - C50094 * C456) * C118 +
             (C117 * C457 - C50094 * C476) * C106 + (C487 - C488) * C119 +
             (C489 - C490) * C107 + C730 * C120 + C731 * C108 + C732 * C121 +
             C733 * C109) *
                C50110 * C50077) *
               C50239 +
           (((C117 * C281 - C50094 * C291) * C118 +
             (C117 * C292 - C50094 * C311) * C106 + (C322 - C323) * C119 +
             (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
             C621 * C109) *
                C50110 * C1648 +
            ((C50094 * C872 - C117 * C867) * C118 +
             (C50094 * C882 - C117 * C873) * C106 + (C888 - C889) * C119 +
             (C890 - C891) * C107 + (C892 - C893) * C120 +
             (C894 - C895) * C108 + (C896 - C897) * C121 +
             (C898 - C899) * C109) *
                C50110 * C50077) *
               C50049) *
              C50231 +
          ((((C152 - C151) * C118 + (C154 - C153) * C106 +
             (C156 - C155) * C119 + (C158 - C157) * C107 + C175 * C120 +
             C176 * C108 + C177 * C121 + C178 * C109) *
                C50110 * C1648 +
            ((C488 - C487) * C118 + (C490 - C489) * C106 +
             (C492 - C491) * C119 + (C494 - C493) * C107 +
             (C496 - C495) * C120 + (C498 - C497) * C108 +
             (C734 - C735) * C121 + (C736 - C737) * C109) *
                C50110 * C50077) *
               C50239 +
           (((C323 - C322) * C118 + (C325 - C324) * C106 +
             (C327 - C326) * C119 + (C329 - C328) * C107 +
             (C331 - C330) * C120 + (C333 - C332) * C108 +
             (C622 - C623) * C121 + (C624 - C625) * C109) *
                C50110 * C1648 +
            ((C889 - C888) * C118 + (C891 - C890) * C106 +
             (C893 - C892) * C119 + (C895 - C894) * C107 +
             (C897 - C896) * C120 + (C899 - C898) * C108 +
             (C117 * C871 - C50094 * C880) * C121 +
             (C117 * C881 - C50094 * C886) * C109) *
                C50110 * C50077) *
               C50049) *
              C49984)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C50094 * C129 - C117 * C122) * C2269 +
              (C50094 * C143 - C117 * C130) * C2264 + (C151 - C152) * C2270 +
              (C153 - C154) * C49955) *
                 C5095 +
             ((C5415 - C5416) * C2269 + (C5417 - C5418) * C2264 +
              C5419 * C2270 + C5420 * C49955) *
                 C5096 +
             C5468 * C5097) *
                C1648 +
            (((C5416 - C5415) * C2269 + (C5418 - C5417) * C2264 +
              C5427 * C2270 + C5428 * C49955) *
                 C5095 +
             ((C5422 - C5421) * C2269 + (C5424 - C5423) * C2264 +
              C5429 * C2270 + C5430 * C49955) *
                 C5096 +
             C7302 * C5097) *
                C50077) *
               C50239 +
           ((((C117 * C281 - C50094 * C291) * C2269 +
              (C117 * C292 - C50094 * C311) * C2264 + (C322 - C323) * C2270 +
              (C324 - C325) * C49955) *
                 C5095 +
             ((C5967 - C5968) * C2269 + (C5969 - C5970) * C2264 +
              C5971 * C2270 + C5972 * C49955) *
                 C5096 +
             C6397 * C5097) *
                C1648 +
            (((C5968 - C5967) * C2269 + (C5970 - C5969) * C2264 +
              C5979 * C2270 + C5980 * C49955) *
                 C5095 +
             ((C5974 - C5973) * C2269 + (C5976 - C5975) * C2264 +
              C5981 * C2270 + C5982 * C49955) *
                 C5096 +
             ((C6389 - C6390) * C2269 + (C6391 - C6392) * C2264 +
              (C5983 - C5984) * C2270 + (C5985 - C5986) * C49955) *
                 C5097) *
                C50077) *
               C50049) *
              C50231 +
          (((((C152 - C151) * C2269 + (C154 - C153) * C2264 +
              (C156 - C155) * C2270 + (C158 - C157) * C49955) *
                 C5095 +
             (C5427 * C2269 + C5428 * C2264 + C730 * C2270 + C731 * C49955) *
                 C5096 +
             C5467 * C5097) *
                C1648 +
            ((C5419 * C2269 + C5420 * C2264 + C5765 * C2270 + C5766 * C49955) *
                 C5095 +
             (C5425 * C2269 + C5426 * C2264 + C5767 * C2270 + C5768 * C49955) *
                 C5096 +
             (C5455 * C2269 + C5456 * C2264 + (C5445 - C5446) * C2270 +
              (C5447 - C5448) * C49955) *
                 C5097) *
                C50077) *
               C50239 +
           ((((C323 - C322) * C2269 + (C325 - C324) * C2264 +
              (C327 - C326) * C2270 + (C329 - C328) * C49955) *
                 C5095 +
             (C5979 * C2269 + C5980 * C2264 + (C892 - C893) * C2270 +
              (C894 - C895) * C49955) *
                 C5096 +
             (C5981 * C2269 + C5982 * C2264 + (C5615 - C5616) * C2270 +
              (C5617 - C5618) * C49955) *
                 C5097) *
                C1648 +
            ((C5971 * C2269 + C5972 * C2264 + (C893 - C892) * C2270 +
              (C895 - C894) * C49955) *
                 C5095 +
             (C5977 * C2269 + C5978 * C2264 + (C5616 - C5615) * C2270 +
              (C5618 - C5617) * C49955) *
                 C5096 +
             ((C5984 - C5983) * C2269 + (C5986 - C5985) * C2264 +
              (C117 * C5962 - C50094 * C5963) * C2270 +
              (C117 * C5964 - C50094 * C5965) * C49955) *
                 C5097) *
                C50077) *
               C50049) *
              C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
             C2263 * C299 - C2268 * C285) *
                C2269 +
            (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
             C2263 * C315 - C2268 * C300) *
                C2264 +
            (C2272 - C2273 + C2274 - C2275 + C2276 - C2277) * C2270 +
            (C2278 - C2279 + C2280 - C2281 + C2282 - C2283) * C49955) *
               C50110 * C50286 +
           ((C2266 * C446 - C2261 * C456 + C2267 * C867 - C2262 * C872 +
             C2268 * C1534 - C2263 * C1538) *
                C2269 +
            (C2266 * C457 - C2261 * C476 + C2267 * C873 - C2262 * C882 +
             C2268 * C1539 - C2263 * C1546) *
                C2264 +
            (C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C2270 +
            (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49955) *
               C50110 * C50287 +
           ((C2261 * C464 - C2266 * C450 + C2262 * C1191 - C2267 * C1187 +
             C2263 * C2638 - C2268 * C2635) *
                C2269 +
            (C2261 * C480 - C2266 * C465 + C2262 * C1199 - C2267 * C1192 +
             C2263 * C2644 - C2268 * C2639) *
                C2264 +
            (C2660 - C2661 + C2662 - C2663 + C2664 - C2665) * C2270 +
            (C2666 - C2667 + C2668 - C2669 + C2670 - C2671) * C49955) *
               C50110 * C2064) *
              C50239 +
          (((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
             C2268 * C1073 - C2263 * C1077) *
                C2269 +
            (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
             C2268 * C1078 - C2263 * C1085) *
                C2264 +
            (C2466 - C2467 + C2468 - C2469 + C2470 - C2471) * C2270 +
            (C2472 - C2473 + C2474 - C2475 + C2476 - C2477) * C49955) *
               C50110 * C50286 +
           ((C2261 * C872 - C2266 * C867 + C2262 * C1538 - C2267 * C1534 +
             C2263 * C3184 - C2268 * C3181) *
                C2269 +
            (C2261 * C882 - C2266 * C873 + C2262 * C1546 - C2267 * C1539 +
             C2263 * C3190 - C2268 * C3185) *
                C2264 +
            (C3194 - C3195 + C3196 - C3197 + C3198 - C3199) * C2270 +
            (C3200 - C3201 + C3202 - C3203 + C3204 - C3205) * C49955) *
               C50110 * C50287 +
           ((C2266 * C1187 - C2261 * C1191 + C2267 * C2635 - C2262 * C2638 +
             C2268 * C3603 - C2263 * C3605) *
                C2269 +
            (C2266 * C1192 - C2261 * C1199 + C2267 * C2639 - C2262 * C2644 +
             C2268 * C3606 - C2263 * C3609) *
                C2264 +
            (C2266 * C1188 - C2261 * C1193 + C2267 * C2636 - C2262 * C2640 +
             C2268 * C3604 - C2263 * C3607) *
                C2270 +
            (C2266 * C1194 - C2261 * C1200 + C2267 * C2641 - C2262 * C2645 +
             C2268 * C3608 - C2263 * C3610) *
                C49955) *
               C50110 * C2064) *
              C50049) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C118 +
            (C50094 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50110 * C50286 +
           ((C117 * C446 - C50094 * C456) * C118 +
            (C117 * C457 - C50094 * C476) * C106 + (C487 - C488) * C119 +
            (C489 - C490) * C107 + C730 * C120 + C731 * C108 + C732 * C121 +
            C733 * C109) *
               C50110 * C50287 +
           ((C50094 * C464 - C117 * C450) * C118 +
            (C50094 * C480 - C117 * C465) * C106 + (C499 - C500) * C119 +
            (C501 - C502) * C107 + (C503 - C504) * C120 + (C505 - C506) * C108 +
            (C507 - C508) * C121 + (C509 - C510) * C109) *
               C50110 * C2064) *
              C50239 +
          (((C117 * C281 - C50094 * C291) * C118 +
            (C117 * C292 - C50094 * C311) * C106 + (C322 - C323) * C119 +
            (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
            C621 * C109) *
               C50110 * C50286 +
           ((C50094 * C872 - C117 * C867) * C118 +
            (C50094 * C882 - C117 * C873) * C106 + (C888 - C889) * C119 +
            (C890 - C891) * C107 + (C892 - C893) * C120 + (C894 - C895) * C108 +
            (C896 - C897) * C121 + (C898 - C899) * C109) *
               C50110 * C50287 +
           ((C117 * C1187 - C50094 * C1191) * C118 +
            (C117 * C1192 - C50094 * C1199) * C106 +
            (C117 * C1188 - C50094 * C1193) * C119 +
            (C117 * C1194 - C50094 * C1200) * C107 +
            (C117 * C1189 - C50094 * C1195) * C120 +
            (C117 * C1196 - C50094 * C1201) * C108 +
            (C117 * C1190 - C50094 * C1197) * C121 +
            (C117 * C1198 - C50094 * C1202) * C109) *
               C50110 * C2064) *
              C50049) *
         C49978) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C2269 +
             (C50094 * C143 - C117 * C130) * C2264 + (C151 - C152) * C2270 +
             (C153 - C154) * C49955) *
                C5095 +
            ((C5415 - C5416) * C2269 + (C5417 - C5418) * C2264 + C5419 * C2270 +
             C5420 * C49955) *
                C5096 +
            C5468 * C5097) *
               C50286 +
           (((C5416 - C5415) * C2269 + (C5418 - C5417) * C2264 + C5427 * C2270 +
             C5428 * C49955) *
                C5095 +
            ((C5422 - C5421) * C2269 + (C5424 - C5423) * C2264 + C5429 * C2270 +
             C5430 * C49955) *
                C5096 +
            C7302 * C5097) *
               C50287 +
           (C5468 * C5095 +
            ((C5432 - C5431) * C2269 + (C5434 - C5433) * C2264 + C5455 * C2270 +
             C5456 * C49955) *
                C5096 +
            ((C7294 - C7295) * C2269 + (C7296 - C7297) * C2264 +
             (C5439 - C5440) * C2270 + (C5441 - C5442) * C49955) *
                C5097) *
               C2064) *
              C50239 +
          ((((C117 * C281 - C50094 * C291) * C2269 +
             (C117 * C292 - C50094 * C311) * C2264 + (C322 - C323) * C2270 +
             (C324 - C325) * C49955) *
                C5095 +
            ((C5967 - C5968) * C2269 + (C5969 - C5970) * C2264 + C5971 * C2270 +
             C5972 * C49955) *
                C5096 +
            C6397 * C5097) *
               C50286 +
           (((C5968 - C5967) * C2269 + (C5970 - C5969) * C2264 + C5979 * C2270 +
             C5980 * C49955) *
                C5095 +
            ((C5974 - C5973) * C2269 + (C5976 - C5975) * C2264 + C5981 * C2270 +
             C5982 * C49955) *
                C5096 +
            ((C6389 - C6390) * C2269 + (C6391 - C6392) * C2264 +
             (C5983 - C5984) * C2270 + (C5985 - C5986) * C49955) *
                C5097) *
               C50287 +
           (C6397 * C5095 +
            ((C6390 - C6389) * C2269 + (C6392 - C6391) * C2264 +
             (C5984 - C5983) * C2270 + (C5986 - C5985) * C49955) *
                C5096 +
            ((C117 * C6376 - C50094 * C6378) * C2269 +
             (C117 * C6379 - C50094 * C6382) * C2264 +
             (C117 * C6377 - C50094 * C6380) * C2270 +
             (C117 * C6381 - C50094 * C6383) * C49955) *
                C5097) *
               C2064) *
              C50049) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C50094 * C129 - C117 * C122) * C118 +
                (C50094 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
                (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
                C174 * C109) *
                   C50110 * C1648 +
               ((C117 * C446 - C50094 * C456) * C118 +
                (C117 * C457 - C50094 * C476) * C106 + (C487 - C488) * C119 +
                (C489 - C490) * C107 + C730 * C120 + C731 * C108 + C732 * C121 +
                C733 * C109) *
                   C50110 * C50077) *
                  C49997 * C999 +
              (((C152 - C151) * C118 + (C154 - C153) * C106 +
                (C156 - C155) * C119 + (C158 - C157) * C107 + C175 * C120 +
                C176 * C108 + C177 * C121 + C178 * C109) *
                   C50110 * C1648 +
               ((C488 - C487) * C118 + (C490 - C489) * C106 +
                (C492 - C491) * C119 + (C494 - C493) * C107 +
                (C496 - C495) * C120 + (C498 - C497) * C108 +
                (C734 - C735) * C121 + (C736 - C737) * C109) *
                   C50110 * C50077) *
                  C49997 * C1000 +
              ((C171 * C118 + C172 * C106 + C173 * C119 + C174 * C107 +
                (C164 - C163) * C120 + (C166 - C165) * C108 +
                (C167 - C168) * C121 + (C169 - C170) * C109) *
                   C50110 * C1648 +
               (C730 * C118 + C731 * C106 + C732 * C119 + C733 * C107 +
                (C735 - C734) * C120 + (C737 - C736) * C108 +
                (C117 * C725 - C50094 * C726) * C121 +
                (C117 * C727 - C50094 * C728) * C109) *
                   C50110 * C50077) *
                  C49997 * C1001) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C50094 * C129 - C117 * C122) * C118 +
                (C50094 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
                (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
                C174 * C109) *
                   C50110 * C1648 +
               ((C117 * C446 - C50094 * C456) * C118 +
                (C117 * C457 - C50094 * C476) * C106 + (C487 - C488) * C119 +
                (C489 - C490) * C107 + C730 * C120 + C731 * C108 + C732 * C121 +
                C733 * C109) *
                   C50110 * C50077) *
                  C276 +
              (((C117 * C281 - C50094 * C291) * C118 +
                (C117 * C292 - C50094 * C311) * C106 + (C322 - C323) * C119 +
                (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
                C621 * C109) *
                   C50110 * C1648 +
               ((C50094 * C872 - C117 * C867) * C118 +
                (C50094 * C882 - C117 * C873) * C106 + (C888 - C889) * C119 +
                (C890 - C891) * C107 + (C892 - C893) * C120 +
                (C894 - C895) * C108 + (C896 - C897) * C121 +
                (C898 - C899) * C109) *
                   C50110 * C50077) *
                  C277 +
              (((C50094 * C299 - C117 * C285) * C118 +
                (C50094 * C315 - C117 * C300) * C106 + (C334 - C335) * C119 +
                (C336 - C337) * C107 + (C338 - C339) * C120 +
                (C340 - C341) * C108 + (C342 - C343) * C121 +
                (C344 - C345) * C109) *
                   C50110 * C1648 +
               ((C117 * C1534 - C50094 * C1538) * C118 +
                (C117 * C1539 - C50094 * C1546) * C106 +
                (C117 * C1535 - C50094 * C1540) * C119 +
                (C117 * C1541 - C50094 * C1547) * C107 +
                (C117 * C1536 - C50094 * C1542) * C120 +
                (C117 * C1543 - C50094 * C1548) * C108 +
                (C117 * C1537 - C50094 * C1544) * C121 +
                (C117 * C1545 - C50094 * C1549) * C109) *
                   C50110 * C50077) *
                  C278) *
             C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C50094 * C129 - C117 * C122) * C118 +
           (C50094 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
           (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
           C174 * C109) *
              C50110 * C1814 +
          ((C117 * C446 - C50094 * C456) * C118 +
           (C117 * C457 - C50094 * C476) * C106 + (C487 - C488) * C119 +
           (C489 - C490) * C107 + C730 * C120 + C731 * C108 + C732 * C121 +
           C733 * C109) *
              C50110 * C1815 +
          ((C50094 * C464 - C117 * C450) * C118 +
           (C50094 * C480 - C117 * C465) * C106 + (C499 - C500) * C119 +
           (C501 - C502) * C107 + (C503 - C504) * C120 + (C505 - C506) * C108 +
           (C507 - C508) * C121 + (C509 - C510) * C109) *
              C50110 * C1816 +
          ((C117 * C1818 - C50094 * C1822) * C118 +
           (C117 * C1823 - C50094 * C1830) * C106 +
           (C117 * C1819 - C50094 * C1824) * C119 +
           (C117 * C1825 - C50094 * C1831) * C107 +
           (C117 * C1820 - C50094 * C1826) * C120 +
           (C117 * C1827 - C50094 * C1832) * C108 +
           (C117 * C1821 - C50094 * C1828) * C121 +
           (C117 * C1829 - C50094 * C1833) * C109) *
              C50110 * C1817) *
         C49997 * C49978) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
             C2263 * C299 - C2268 * C285) *
                C2269 +
            (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
             C2263 * C315 - C2268 * C300) *
                C2264 +
            (C2272 - C2273 + C2274 - C2275 + C2276 - C2277) * C2270 +
            (C2278 - C2279 + C2280 - C2281 + C2282 - C2283) * C49955) *
               C50110 * C1648 +
           ((C2266 * C446 - C2261 * C456 + C2267 * C867 - C2262 * C872 +
             C2268 * C1534 - C2263 * C1538) *
                C2269 +
            (C2266 * C457 - C2261 * C476 + C2267 * C873 - C2262 * C882 +
             C2268 * C1539 - C2263 * C1546) *
                C2264 +
            (C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C2270 +
            (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49955) *
               C50110 * C50077) *
              C49997 * C999 +
          (((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C2269 +
            (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C2264 +
            (C2284 - C2285 + C2286 - C2287 + C2288 - C2289) * C2270 +
            (C2290 - C2291 + C2292 - C2293 + C2294 - C2295) * C49955) *
               C50110 * C1648 +
           ((C2649 - C2648 + C2651 - C2650 + C2653 - C2652) * C2269 +
            (C2655 - C2654 + C2657 - C2656 + C2659 - C2658) * C2264 +
            (C2976 - C2977 + C2978 - C2979 + C2980 - C2981) * C2270 +
            (C2982 - C2983 + C2984 - C2985 + C2986 - C2987) * C49955) *
               C50110 * C50077) *
              C49997 * C1000 +
          (((C2285 - C2284 + C2287 - C2286 + C2289 - C2288) * C2269 +
            (C2291 - C2290 + C2293 - C2292 + C2295 - C2294) * C2264 +
            (C2296 - C2297 + C2298 - C2299 + C2300 - C2301) * C2270 +
            (C2302 - C2303 + C2304 - C2305 + C2306 - C2307) * C49955) *
               C50110 * C1648 +
           ((C2977 - C2976 + C2979 - C2978 + C2981 - C2980) * C2269 +
            (C2983 - C2982 + C2985 - C2984 + C2987 - C2986) * C2264 +
            (C2266 * C449 - C2261 * C462 + C2267 * C870 - C2262 * C878 +
             C2268 * C1537 - C2263 * C1544) *
                C2270 +
            (C2266 * C463 - C2261 * C479 + C2267 * C879 - C2262 * C885 +
             C2268 * C1545 - C2263 * C1549) *
                C49955) *
               C50110 * C50077) *
              C49997 * C1001)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
             C2263 * C299 - C2268 * C285) *
                C2269 +
            (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
             C2263 * C315 - C2268 * C300) *
                C2264 +
            (C2272 - C2273 + C2274 - C2275 + C2276 - C2277) * C2270 +
            (C2278 - C2279 + C2280 - C2281 + C2282 - C2283) * C49955) *
               C50110 * C1648 +
           ((C2266 * C446 - C2261 * C456 + C2267 * C867 - C2262 * C872 +
             C2268 * C1534 - C2263 * C1538) *
                C2269 +
            (C2266 * C457 - C2261 * C476 + C2267 * C873 - C2262 * C882 +
             C2268 * C1539 - C2263 * C1546) *
                C2264 +
            (C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C2270 +
            (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49955) *
               C50110 * C50077) *
              C276 +
          (((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
             C2268 * C1073 - C2263 * C1077) *
                C2269 +
            (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
             C2268 * C1078 - C2263 * C1085) *
                C2264 +
            (C2466 - C2467 + C2468 - C2469 + C2470 - C2471) * C2270 +
            (C2472 - C2473 + C2474 - C2475 + C2476 - C2477) * C49955) *
               C50110 * C1648 +
           ((C2261 * C872 - C2266 * C867 + C2262 * C1538 - C2267 * C1534 +
             C2263 * C3184 - C2268 * C3181) *
                C2269 +
            (C2261 * C882 - C2266 * C873 + C2262 * C1546 - C2267 * C1539 +
             C2263 * C3190 - C2268 * C3185) *
                C2264 +
            (C3194 - C3195 + C3196 - C3197 + C3198 - C3199) * C2270 +
            (C3200 - C3201 + C3202 - C3203 + C3204 - C3205) * C49955) *
               C50110 * C50077) *
              C277 +
          (((C2261 * C299 - C2266 * C285 + C2262 * C1077 - C2267 * C1073 +
             C2263 * C2456 - C2268 * C2453) *
                C2269 +
            (C2261 * C315 - C2266 * C300 + C2262 * C1085 - C2267 * C1078 +
             C2263 * C2462 - C2268 * C2457) *
                C2264 +
            (C2478 - C2479 + C2480 - C2481 + C2482 - C2483) * C2270 +
            (C2484 - C2485 + C2486 - C2487 + C2488 - C2489) * C49955) *
               C50110 * C1648 +
           ((C2266 * C1534 - C2261 * C1538 + C2267 * C3181 - C2262 * C3184 +
             C2268 * C4097 - C2263 * C4099) *
                C2269 +
            (C2266 * C1539 - C2261 * C1546 + C2267 * C3185 - C2262 * C3190 +
             C2268 * C4100 - C2263 * C4103) *
                C2264 +
            (C2266 * C1535 - C2261 * C1540 + C2267 * C3182 - C2262 * C3186 +
             C2268 * C4098 - C2263 * C4101) *
                C2270 +
            (C2266 * C1541 - C2261 * C1547 + C2267 * C3187 - C2262 * C3191 +
             C2268 * C4102 - C2263 * C4104) *
                C49955) *
               C50110 * C50077) *
              C278) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
            C2263 * C299 - C2268 * C285) *
               C2269 +
           (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
            C2263 * C315 - C2268 * C300) *
               C2264 +
           (C2272 - C2273 + C2274 - C2275 + C2276 - C2277) * C2270 +
           (C2278 - C2279 + C2280 - C2281 + C2282 - C2283) * C49955) *
              C50110 * C1814 +
          ((C2266 * C446 - C2261 * C456 + C2267 * C867 - C2262 * C872 +
            C2268 * C1534 - C2263 * C1538) *
               C2269 +
           (C2266 * C457 - C2261 * C476 + C2267 * C873 - C2262 * C882 +
            C2268 * C1539 - C2263 * C1546) *
               C2264 +
           (C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C2270 +
           (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49955) *
              C50110 * C1815 +
          ((C2261 * C464 - C2266 * C450 + C2262 * C1191 - C2267 * C1187 +
            C2263 * C2638 - C2268 * C2635) *
               C2269 +
           (C2261 * C480 - C2266 * C465 + C2262 * C1199 - C2267 * C1192 +
            C2263 * C2644 - C2268 * C2639) *
               C2264 +
           (C2660 - C2661 + C2662 - C2663 + C2664 - C2665) * C2270 +
           (C2666 - C2667 + C2668 - C2669 + C2670 - C2671) * C49955) *
              C50110 * C1816 +
          ((C2266 * C1818 - C2261 * C1822 + C2267 * C4495 - C2262 * C4499 +
            C2268 * C4496 - C2263 * C4500) *
               C2269 +
           (C2266 * C1823 - C2261 * C1830 + C2267 * C4501 - C2262 * C4507 +
            C2268 * C4502 - C2263 * C4508) *
               C2264 +
           (C2266 * C1819 - C2261 * C1824 + C2267 * C4497 - C2262 * C4503 +
            C2268 * C4498 - C2263 * C4504) *
               C2270 +
           (C2266 * C1825 - C2261 * C1831 + C2267 * C4505 - C2262 * C4509 +
            C2268 * C4506 - C2263 * C4510) *
               C49955) *
              C50110 * C1817) *
         C49997 * C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C2269 +
             (C50094 * C143 - C117 * C130) * C2264 + (C151 - C152) * C2270 +
             (C153 - C154) * C49955) *
                C5095 +
            ((C5415 - C5416) * C2269 + (C5417 - C5418) * C2264 + C5419 * C2270 +
             C5420 * C49955) *
                C5096 +
            C5468 * C5097) *
               C1648 +
           (((C5416 - C5415) * C2269 + (C5418 - C5417) * C2264 + C5427 * C2270 +
             C5428 * C49955) *
                C5095 +
            ((C5422 - C5421) * C2269 + (C5424 - C5423) * C2264 + C5429 * C2270 +
             C5430 * C49955) *
                C5096 +
            ((C5431 - C5432) * C2269 + (C5433 - C5434) * C2264 + C5453 * C2270 +
             C5454 * C49955) *
                C5097) *
               C50077) *
              C49997 * C999 +
          ((((C152 - C151) * C2269 + (C154 - C153) * C2264 +
             (C156 - C155) * C2270 + (C158 - C157) * C49955) *
                C5095 +
            (C5427 * C2269 + C5428 * C2264 + C730 * C2270 + C731 * C49955) *
                C5096 +
            C5467 * C5097) *
               C1648 +
           ((C5419 * C2269 + C5420 * C2264 + C5765 * C2270 + C5766 * C49955) *
                C5095 +
            (C5425 * C2269 + C5426 * C2264 + C5767 * C2270 + C5768 * C49955) *
                C5096 +
            (C5455 * C2269 + C5456 * C2264 + (C5445 - C5446) * C2270 +
             (C5447 - C5448) * C49955) *
                C5097) *
               C50077) *
              C49997 * C1000 +
          (((C171 * C2269 + C172 * C2264 + C173 * C2270 + C174 * C49955) *
                C5095 +
            (C5765 * C2269 + C5766 * C2264 + (C496 - C495) * C2270 +
             (C498 - C497) * C49955) *
                C5096 +
            (C5767 * C2269 + C5768 * C2264 + (C507 - C508) * C2270 +
             (C509 - C510) * C49955) *
                C5097) *
               C1648 +
           ((C730 * C2269 + C731 * C2264 + C732 * C2270 + C733 * C49955) *
                C5095 +
            (C5443 * C2269 + C5444 * C2264 + (C508 - C507) * C2270 +
             (C510 - C509) * C49955) *
                C5096 +
            ((C5446 - C5445) * C2269 + (C5448 - C5447) * C2264 +
             (C117 * C1821 - C50094 * C1828) * C2270 +
             (C117 * C1829 - C50094 * C1833) * C49955) *
                C5097) *
               C50077) *
              C49997 * C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C2269 +
             (C50094 * C143 - C117 * C130) * C2264 + (C151 - C152) * C2270 +
             (C153 - C154) * C49955) *
                C5095 +
            ((C5415 - C5416) * C2269 + (C5417 - C5418) * C2264 + C5419 * C2270 +
             C5420 * C49955) *
                C5096 +
            C5468 * C5097) *
               C1648 +
           (((C5416 - C5415) * C2269 + (C5418 - C5417) * C2264 + C5427 * C2270 +
             C5428 * C49955) *
                C5095 +
            ((C5422 - C5421) * C2269 + (C5424 - C5423) * C2264 + C5429 * C2270 +
             C5430 * C49955) *
                C5096 +
            ((C5431 - C5432) * C2269 + (C5433 - C5434) * C2264 + C5453 * C2270 +
             C5454 * C49955) *
                C5097) *
               C50077) *
              C276 +
          ((((C117 * C281 - C50094 * C291) * C2269 +
             (C117 * C292 - C50094 * C311) * C2264 + (C322 - C323) * C2270 +
             (C324 - C325) * C49955) *
                C5095 +
            ((C5967 - C5968) * C2269 + (C5969 - C5970) * C2264 + C5971 * C2270 +
             C5972 * C49955) *
                C5096 +
            C6397 * C5097) *
               C1648 +
           (((C5968 - C5967) * C2269 + (C5970 - C5969) * C2264 + C5979 * C2270 +
             C5980 * C49955) *
                C5095 +
            ((C5974 - C5973) * C2269 + (C5976 - C5975) * C2264 + C5981 * C2270 +
             C5982 * C49955) *
                C5096 +
            ((C6389 - C6390) * C2269 + (C6391 - C6392) * C2264 +
             (C5983 - C5984) * C2270 + (C5985 - C5986) * C49955) *
                C5097) *
               C50077) *
              C277 +
          ((((C50094 * C299 - C117 * C285) * C2269 +
             (C50094 * C315 - C117 * C300) * C2264 + (C334 - C335) * C2270 +
             (C336 - C337) * C49955) *
                C5095 +
            ((C6884 - C6885) * C2269 + (C6886 - C6887) * C2264 +
             (C5249 - C5250) * C2270 + (C5251 - C5252) * C49955) *
                C5096 +
            ((C6888 - C6889) * C2269 + (C6890 - C6891) * C2264 +
             (C5253 - C5254) * C2270 + (C5255 - C5256) * C49955) *
                C5097) *
               C1648 +
           (((C6885 - C6884) * C2269 + (C6887 - C6886) * C2264 +
             (C5250 - C5249) * C2270 + (C5252 - C5251) * C49955) *
                C5095 +
            ((C6889 - C6888) * C2269 + (C6891 - C6890) * C2264 +
             (C5254 - C5253) * C2270 + (C5256 - C5255) * C49955) *
                C5096 +
            ((C117 * C4496 - C50094 * C4500) * C2269 +
             (C117 * C4502 - C50094 * C4508) * C2264 +
             (C117 * C4498 - C50094 * C4504) * C2270 +
             (C117 * C4506 - C50094 * C4510) * C49955) *
                C5097) *
               C50077) *
              C278) *
         C49978) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C2269 +
            (C50094 * C143 - C117 * C130) * C2264 + (C151 - C152) * C2270 +
            (C153 - C154) * C49955) *
               C5095 +
           ((C5415 - C5416) * C2269 + (C5417 - C5418) * C2264 + C5419 * C2270 +
            C5420 * C49955) *
               C5096 +
           C5468 * C5097) *
              C1814 +
          (((C5416 - C5415) * C2269 + (C5418 - C5417) * C2264 + C5427 * C2270 +
            C5428 * C49955) *
               C5095 +
           ((C5422 - C5421) * C2269 + (C5424 - C5423) * C2264 + C5429 * C2270 +
            C5430 * C49955) *
               C5096 +
           C7302 * C5097) *
              C1815 +
          (C5468 * C5095 +
           ((C5432 - C5431) * C2269 + (C5434 - C5433) * C2264 + C5455 * C2270 +
            C5456 * C49955) *
               C5096 +
           ((C7294 - C7295) * C2269 + (C7296 - C7297) * C2264 +
            (C5439 - C5440) * C2270 + (C5441 - C5442) * C49955) *
               C5097) *
              C1816 +
          (C7302 * C5095 +
           ((C7295 - C7294) * C2269 + (C7297 - C7296) * C2264 +
            (C5440 - C5439) * C2270 + (C5442 - C5441) * C49955) *
               C5096 +
           ((C117 * C7281 - C50094 * C7283) * C2269 +
            (C117 * C7284 - C50094 * C7287) * C2264 +
            (C117 * C7282 - C50094 * C7285) * C2270 +
            (C117 * C7286 - C50094 * C7288) * C49955) *
               C5097) *
              C1817) *
         C49997 * C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
             C2263 * C299 - C2268 * C285) *
                C2269 +
            (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
             C2263 * C315 - C2268 * C300) *
                C2264 +
            (C2272 - C2273 + C2274 - C2275 + C2276 - C2277) * C2270 +
            (C2278 - C2279 + C2280 - C2281 + C2282 - C2283) * C49955) *
               C50110 * C50286 +
           ((C2266 * C446 - C2261 * C456 + C2267 * C867 - C2262 * C872 +
             C2268 * C1534 - C2263 * C1538) *
                C2269 +
            (C2266 * C457 - C2261 * C476 + C2267 * C873 - C2262 * C882 +
             C2268 * C1539 - C2263 * C1546) *
                C2264 +
            (C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C2270 +
            (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49955) *
               C50110 * C50287 +
           ((C2261 * C464 - C2266 * C450 + C2262 * C1191 - C2267 * C1187 +
             C2263 * C2638 - C2268 * C2635) *
                C2269 +
            (C2261 * C480 - C2266 * C465 + C2262 * C1199 - C2267 * C1192 +
             C2263 * C2644 - C2268 * C2639) *
                C2264 +
            (C2660 - C2661 + C2662 - C2663 + C2664 - C2665) * C2270 +
            (C2666 - C2667 + C2668 - C2669 + C2670 - C2671) * C49955) *
               C50110 * C2064) *
              C49997 * C50231 +
          (((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C2269 +
            (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C2264 +
            (C2284 - C2285 + C2286 - C2287 + C2288 - C2289) * C2270 +
            (C2290 - C2291 + C2292 - C2293 + C2294 - C2295) * C49955) *
               C50110 * C50286 +
           ((C2649 - C2648 + C2651 - C2650 + C2653 - C2652) * C2269 +
            (C2655 - C2654 + C2657 - C2656 + C2659 - C2658) * C2264 +
            (C2976 - C2977 + C2978 - C2979 + C2980 - C2981) * C2270 +
            (C2982 - C2983 + C2984 - C2985 + C2986 - C2987) * C49955) *
               C50110 * C50287 +
           ((C2661 - C2660 + C2663 - C2662 + C2665 - C2664) * C2269 +
            (C2667 - C2666 + C2669 - C2668 + C2671 - C2670) * C2264 +
            (C2266 * C452 - C2261 * C468 + C2267 * C1189 - C2262 * C1195 +
             C2268 * C2637 - C2263 * C2642) *
                C2270 +
            (C2266 * C469 - C2261 * C482 + C2267 * C1196 - C2262 * C1201 +
             C2268 * C2643 - C2263 * C2646) *
                C49955) *
               C50110 * C2064) *
              C49997 * C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C118 +
            (C50094 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50110 * C50286 +
           ((C117 * C446 - C50094 * C456) * C118 +
            (C117 * C457 - C50094 * C476) * C106 + (C487 - C488) * C119 +
            (C489 - C490) * C107 + C730 * C120 + C731 * C108 + C732 * C121 +
            C733 * C109) *
               C50110 * C50287 +
           ((C50094 * C464 - C117 * C450) * C118 +
            (C50094 * C480 - C117 * C465) * C106 + (C499 - C500) * C119 +
            (C501 - C502) * C107 + (C503 - C504) * C120 + (C505 - C506) * C108 +
            (C507 - C508) * C121 + (C509 - C510) * C109) *
               C50110 * C2064) *
              C49997 * C50231 +
          (((C152 - C151) * C118 + (C154 - C153) * C106 + (C156 - C155) * C119 +
            (C158 - C157) * C107 + C175 * C120 + C176 * C108 + C177 * C121 +
            C178 * C109) *
               C50110 * C50286 +
           ((C488 - C487) * C118 + (C490 - C489) * C106 + (C492 - C491) * C119 +
            (C494 - C493) * C107 + (C496 - C495) * C120 + (C498 - C497) * C108 +
            (C734 - C735) * C121 + (C736 - C737) * C109) *
               C50110 * C50287 +
           ((C500 - C499) * C118 + (C502 - C501) * C106 + (C504 - C503) * C119 +
            (C506 - C505) * C107 + (C508 - C507) * C120 + (C510 - C509) * C108 +
            (C117 * C455 - C50094 * C474) * C121 +
            (C117 * C475 - C50094 * C485) * C109) *
               C50110 * C2064) *
              C49997 * C49984)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C2269 +
             (C50094 * C143 - C117 * C130) * C2264 + (C151 - C152) * C2270 +
             (C153 - C154) * C49955) *
                C5095 +
            ((C5415 - C5416) * C2269 + (C5417 - C5418) * C2264 + C5419 * C2270 +
             C5420 * C49955) *
                C5096 +
            C5468 * C5097) *
               C50286 +
           (((C5416 - C5415) * C2269 + (C5418 - C5417) * C2264 + C5427 * C2270 +
             C5428 * C49955) *
                C5095 +
            ((C5422 - C5421) * C2269 + (C5424 - C5423) * C2264 + C5429 * C2270 +
             C5430 * C49955) *
                C5096 +
            C7302 * C5097) *
               C50287 +
           (C5468 * C5095 +
            ((C5432 - C5431) * C2269 + (C5434 - C5433) * C2264 + C5455 * C2270 +
             C5456 * C49955) *
                C5096 +
            ((C7294 - C7295) * C2269 + (C7296 - C7297) * C2264 +
             (C5439 - C5440) * C2270 + (C5441 - C5442) * C49955) *
                C5097) *
               C2064) *
              C49997 * C50231 +
          ((((C152 - C151) * C2269 + (C154 - C153) * C2264 +
             (C156 - C155) * C2270 + (C158 - C157) * C49955) *
                C5095 +
            (C5427 * C2269 + C5428 * C2264 + C730 * C2270 + C731 * C49955) *
                C5096 +
            C5467 * C5097) *
               C50286 +
           ((C5419 * C2269 + C5420 * C2264 + C5765 * C2270 + C5766 * C49955) *
                C5095 +
            (C5425 * C2269 + C5426 * C2264 + C5767 * C2270 + C5768 * C49955) *
                C5096 +
            (C5455 * C2269 + C5456 * C2264 + (C5445 - C5446) * C2270 +
             (C5447 - C5448) * C49955) *
                C5097) *
               C50287 +
           (C5467 * C5095 +
            (C5453 * C2269 + C5454 * C2264 + (C5446 - C5445) * C2270 +
             (C5448 - C5447) * C49955) *
                C5096 +
            ((C5440 - C5439) * C2269 + (C5442 - C5441) * C2264 +
             (C117 * C5404 - C50094 * C5409) * C2270 +
             (C117 * C5410 - C50094 * C5413) * C49955) *
                C5097) *
               C2064) *
              C49997 * C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C118 +
            (C50094 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50110 * C1648 +
           ((C117 * C446 - C50094 * C456) * C118 +
            (C117 * C457 - C50094 * C476) * C106 + (C487 - C488) * C119 +
            (C489 - C490) * C107 + C730 * C120 + C731 * C108 + C732 * C121 +
            C733 * C109) *
               C50110 * C50077) *
              C276 +
          (((C117 * C281 - C50094 * C291) * C118 +
            (C117 * C292 - C50094 * C311) * C106 + (C322 - C323) * C119 +
            (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
            C621 * C109) *
               C50110 * C1648 +
           ((C50094 * C872 - C117 * C867) * C118 +
            (C50094 * C882 - C117 * C873) * C106 + (C888 - C889) * C119 +
            (C890 - C891) * C107 + (C892 - C893) * C120 + (C894 - C895) * C108 +
            (C896 - C897) * C121 + (C898 - C899) * C109) *
               C50110 * C50077) *
              C277 +
          (((C50094 * C299 - C117 * C285) * C118 +
            (C50094 * C315 - C117 * C300) * C106 + (C334 - C335) * C119 +
            (C336 - C337) * C107 + (C338 - C339) * C120 + (C340 - C341) * C108 +
            (C342 - C343) * C121 + (C344 - C345) * C109) *
               C50110 * C1648 +
           ((C117 * C1534 - C50094 * C1538) * C118 +
            (C117 * C1539 - C50094 * C1546) * C106 +
            (C117 * C1535 - C50094 * C1540) * C119 +
            (C117 * C1541 - C50094 * C1547) * C107 +
            (C117 * C1536 - C50094 * C1542) * C120 +
            (C117 * C1543 - C50094 * C1548) * C108 +
            (C117 * C1537 - C50094 * C1544) * C121 +
            (C117 * C1545 - C50094 * C1549) * C109) *
               C50110 * C50077) *
              C278) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C118 +
            (C50094 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50110 * C1648 +
           ((C117 * C446 - C50094 * C456) * C118 +
            (C117 * C457 - C50094 * C476) * C106 + (C487 - C488) * C119 +
            (C489 - C490) * C107 + C730 * C120 + C731 * C108 + C732 * C121 +
            C733 * C109) *
               C50110 * C50077) *
              C49997 * C999 +
          (((C152 - C151) * C118 + (C154 - C153) * C106 + (C156 - C155) * C119 +
            (C158 - C157) * C107 + C175 * C120 + C176 * C108 + C177 * C121 +
            C178 * C109) *
               C50110 * C1648 +
           ((C488 - C487) * C118 + (C490 - C489) * C106 + (C492 - C491) * C119 +
            (C494 - C493) * C107 + (C496 - C495) * C120 + (C498 - C497) * C108 +
            (C734 - C735) * C121 + (C736 - C737) * C109) *
               C50110 * C50077) *
              C49997 * C1000 +
          ((C171 * C118 + C172 * C106 + C173 * C119 + C174 * C107 +
            (C164 - C163) * C120 + (C166 - C165) * C108 + (C167 - C168) * C121 +
            (C169 - C170) * C109) *
               C50110 * C1648 +
           (C730 * C118 + C731 * C106 + C732 * C119 + C733 * C107 +
            (C735 - C734) * C120 + (C737 - C736) * C108 +
            (C117 * C725 - C50094 * C726) * C121 +
            (C117 * C727 - C50094 * C728) * C109) *
               C50110 * C50077) *
              C49997 * C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
             C2263 * C299 - C2268 * C285) *
                C2269 +
            (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
             C2263 * C315 - C2268 * C300) *
                C2264 +
            (C2272 - C2273 + C2274 - C2275 + C2276 - C2277) * C2270 +
            (C2278 - C2279 + C2280 - C2281 + C2282 - C2283) * C49955) *
               C50110 * C1648 +
           ((C2266 * C446 - C2261 * C456 + C2267 * C867 - C2262 * C872 +
             C2268 * C1534 - C2263 * C1538) *
                C2269 +
            (C2266 * C457 - C2261 * C476 + C2267 * C873 - C2262 * C882 +
             C2268 * C1539 - C2263 * C1546) *
                C2264 +
            (C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C2270 +
            (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49955) *
               C50110 * C50077) *
              C49997 * C999 +
          (((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C2269 +
            (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C2264 +
            (C2284 - C2285 + C2286 - C2287 + C2288 - C2289) * C2270 +
            (C2290 - C2291 + C2292 - C2293 + C2294 - C2295) * C49955) *
               C50110 * C1648 +
           ((C2649 - C2648 + C2651 - C2650 + C2653 - C2652) * C2269 +
            (C2655 - C2654 + C2657 - C2656 + C2659 - C2658) * C2264 +
            (C2976 - C2977 + C2978 - C2979 + C2980 - C2981) * C2270 +
            (C2982 - C2983 + C2984 - C2985 + C2986 - C2987) * C49955) *
               C50110 * C50077) *
              C49997 * C1000 +
          (((C2285 - C2284 + C2287 - C2286 + C2289 - C2288) * C2269 +
            (C2291 - C2290 + C2293 - C2292 + C2295 - C2294) * C2264 +
            (C2296 - C2297 + C2298 - C2299 + C2300 - C2301) * C2270 +
            (C2302 - C2303 + C2304 - C2305 + C2306 - C2307) * C49955) *
               C50110 * C1648 +
           ((C2977 - C2976 + C2979 - C2978 + C2981 - C2980) * C2269 +
            (C2983 - C2982 + C2985 - C2984 + C2987 - C2986) * C2264 +
            (C2266 * C449 - C2261 * C462 + C2267 * C870 - C2262 * C878 +
             C2268 * C1537 - C2263 * C1544) *
                C2270 +
            (C2266 * C463 - C2261 * C479 + C2267 * C879 - C2262 * C885 +
             C2268 * C1545 - C2263 * C1549) *
                C49955) *
               C50110 * C50077) *
              C49997 * C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
             C2263 * C299 - C2268 * C285) *
                C2269 +
            (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
             C2263 * C315 - C2268 * C300) *
                C2264 +
            (C2272 - C2273 + C2274 - C2275 + C2276 - C2277) * C2270 +
            (C2278 - C2279 + C2280 - C2281 + C2282 - C2283) * C49955) *
               C50110 * C1648 +
           ((C2266 * C446 - C2261 * C456 + C2267 * C867 - C2262 * C872 +
             C2268 * C1534 - C2263 * C1538) *
                C2269 +
            (C2266 * C457 - C2261 * C476 + C2267 * C873 - C2262 * C882 +
             C2268 * C1539 - C2263 * C1546) *
                C2264 +
            (C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C2270 +
            (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49955) *
               C50110 * C50077) *
              C276 +
          (((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
             C2268 * C1073 - C2263 * C1077) *
                C2269 +
            (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
             C2268 * C1078 - C2263 * C1085) *
                C2264 +
            (C2466 - C2467 + C2468 - C2469 + C2470 - C2471) * C2270 +
            (C2472 - C2473 + C2474 - C2475 + C2476 - C2477) * C49955) *
               C50110 * C1648 +
           ((C2261 * C872 - C2266 * C867 + C2262 * C1538 - C2267 * C1534 +
             C2263 * C3184 - C2268 * C3181) *
                C2269 +
            (C2261 * C882 - C2266 * C873 + C2262 * C1546 - C2267 * C1539 +
             C2263 * C3190 - C2268 * C3185) *
                C2264 +
            (C3194 - C3195 + C3196 - C3197 + C3198 - C3199) * C2270 +
            (C3200 - C3201 + C3202 - C3203 + C3204 - C3205) * C49955) *
               C50110 * C50077) *
              C277 +
          (((C2261 * C299 - C2266 * C285 + C2262 * C1077 - C2267 * C1073 +
             C2263 * C2456 - C2268 * C2453) *
                C2269 +
            (C2261 * C315 - C2266 * C300 + C2262 * C1085 - C2267 * C1078 +
             C2263 * C2462 - C2268 * C2457) *
                C2264 +
            (C2478 - C2479 + C2480 - C2481 + C2482 - C2483) * C2270 +
            (C2484 - C2485 + C2486 - C2487 + C2488 - C2489) * C49955) *
               C50110 * C1648 +
           ((C2266 * C1534 - C2261 * C1538 + C2267 * C3181 - C2262 * C3184 +
             C2268 * C4097 - C2263 * C4099) *
                C2269 +
            (C2266 * C1539 - C2261 * C1546 + C2267 * C3185 - C2262 * C3190 +
             C2268 * C4100 - C2263 * C4103) *
                C2264 +
            (C2266 * C1535 - C2261 * C1540 + C2267 * C3182 - C2262 * C3186 +
             C2268 * C4098 - C2263 * C4101) *
                C2270 +
            (C2266 * C1541 - C2261 * C1547 + C2267 * C3187 - C2262 * C3191 +
             C2268 * C4102 - C2263 * C4104) *
                C49955) *
               C50110 * C50077) *
              C278) *
         C49978) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C2269 +
             (C50094 * C143 - C117 * C130) * C2264 + (C151 - C152) * C2270 +
             (C153 - C154) * C49955) *
                C5095 +
            ((C5415 - C5416) * C2269 + (C5417 - C5418) * C2264 + C5419 * C2270 +
             C5420 * C49955) *
                C5096 +
            C5468 * C5097) *
               C1648 +
           (((C5416 - C5415) * C2269 + (C5418 - C5417) * C2264 + C5427 * C2270 +
             C5428 * C49955) *
                C5095 +
            ((C5422 - C5421) * C2269 + (C5424 - C5423) * C2264 + C5429 * C2270 +
             C5430 * C49955) *
                C5096 +
            ((C5431 - C5432) * C2269 + (C5433 - C5434) * C2264 + C5453 * C2270 +
             C5454 * C49955) *
                C5097) *
               C50077) *
              C49997 * C999 +
          ((((C152 - C151) * C2269 + (C154 - C153) * C2264 +
             (C156 - C155) * C2270 + (C158 - C157) * C49955) *
                C5095 +
            (C5427 * C2269 + C5428 * C2264 + C730 * C2270 + C731 * C49955) *
                C5096 +
            C5467 * C5097) *
               C1648 +
           ((C5419 * C2269 + C5420 * C2264 + C5765 * C2270 + C5766 * C49955) *
                C5095 +
            (C5425 * C2269 + C5426 * C2264 + C5767 * C2270 + C5768 * C49955) *
                C5096 +
            (C5455 * C2269 + C5456 * C2264 + (C5445 - C5446) * C2270 +
             (C5447 - C5448) * C49955) *
                C5097) *
               C50077) *
              C49997 * C1000 +
          (((C171 * C2269 + C172 * C2264 + C173 * C2270 + C174 * C49955) *
                C5095 +
            (C5765 * C2269 + C5766 * C2264 + (C496 - C495) * C2270 +
             (C498 - C497) * C49955) *
                C5096 +
            (C5767 * C2269 + C5768 * C2264 + (C507 - C508) * C2270 +
             (C509 - C510) * C49955) *
                C5097) *
               C1648 +
           ((C730 * C2269 + C731 * C2264 + C732 * C2270 + C733 * C49955) *
                C5095 +
            (C5443 * C2269 + C5444 * C2264 + (C508 - C507) * C2270 +
             (C510 - C509) * C49955) *
                C5096 +
            ((C5446 - C5445) * C2269 + (C5448 - C5447) * C2264 +
             (C117 * C1821 - C50094 * C1828) * C2270 +
             (C117 * C1829 - C50094 * C1833) * C49955) *
                C5097) *
               C50077) *
              C49997 * C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C2269 +
             (C50094 * C143 - C117 * C130) * C2264 + (C151 - C152) * C2270 +
             (C153 - C154) * C49955) *
                C5095 +
            ((C5415 - C5416) * C2269 + (C5417 - C5418) * C2264 + C5419 * C2270 +
             C5420 * C49955) *
                C5096 +
            C5468 * C5097) *
               C1648 +
           (((C5416 - C5415) * C2269 + (C5418 - C5417) * C2264 + C5427 * C2270 +
             C5428 * C49955) *
                C5095 +
            ((C5422 - C5421) * C2269 + (C5424 - C5423) * C2264 + C5429 * C2270 +
             C5430 * C49955) *
                C5096 +
            ((C5431 - C5432) * C2269 + (C5433 - C5434) * C2264 + C5453 * C2270 +
             C5454 * C49955) *
                C5097) *
               C50077) *
              C276 +
          ((((C117 * C281 - C50094 * C291) * C2269 +
             (C117 * C292 - C50094 * C311) * C2264 + (C322 - C323) * C2270 +
             (C324 - C325) * C49955) *
                C5095 +
            ((C5967 - C5968) * C2269 + (C5969 - C5970) * C2264 + C5971 * C2270 +
             C5972 * C49955) *
                C5096 +
            C6397 * C5097) *
               C1648 +
           (((C5968 - C5967) * C2269 + (C5970 - C5969) * C2264 + C5979 * C2270 +
             C5980 * C49955) *
                C5095 +
            ((C5974 - C5973) * C2269 + (C5976 - C5975) * C2264 + C5981 * C2270 +
             C5982 * C49955) *
                C5096 +
            ((C6389 - C6390) * C2269 + (C6391 - C6392) * C2264 +
             (C5983 - C5984) * C2270 + (C5985 - C5986) * C49955) *
                C5097) *
               C50077) *
              C277 +
          ((((C50094 * C299 - C117 * C285) * C2269 +
             (C50094 * C315 - C117 * C300) * C2264 + (C334 - C335) * C2270 +
             (C336 - C337) * C49955) *
                C5095 +
            ((C6884 - C6885) * C2269 + (C6886 - C6887) * C2264 +
             (C5249 - C5250) * C2270 + (C5251 - C5252) * C49955) *
                C5096 +
            ((C6888 - C6889) * C2269 + (C6890 - C6891) * C2264 +
             (C5253 - C5254) * C2270 + (C5255 - C5256) * C49955) *
                C5097) *
               C1648 +
           (((C6885 - C6884) * C2269 + (C6887 - C6886) * C2264 +
             (C5250 - C5249) * C2270 + (C5252 - C5251) * C49955) *
                C5095 +
            ((C6889 - C6888) * C2269 + (C6891 - C6890) * C2264 +
             (C5254 - C5253) * C2270 + (C5256 - C5255) * C49955) *
                C5096 +
            ((C117 * C4496 - C50094 * C4500) * C2269 +
             (C117 * C4502 - C50094 * C4508) * C2264 +
             (C117 * C4498 - C50094 * C4504) * C2270 +
             (C117 * C4506 - C50094 * C4510) * C49955) *
                C5097) *
               C50077) *
              C278) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C7893 +
             (C50094 * C143 - C117 * C130) * C50280 + (C151 - C152) * C7894 +
             (C153 - C154) * C50281 + C171 * C7895 + C172 * C7890) *
                C50253 +
            ((C5415 - C5416) * C7893 + (C5417 - C5418) * C50280 +
             C5419 * C7894 + C5420 * C50281 + C5765 * C7895 + C5766 * C7890) *
                C50174) *
               C50013 * C50239 +
           (((C117 * C281 - C50094 * C291) * C7893 +
             (C117 * C292 - C50094 * C311) * C50280 + (C322 - C323) * C7894 +
             (C324 - C325) * C50281 + C618 * C7895 + C619 * C7890) *
                C50253 +
            ((C5967 - C5968) * C7893 + (C5969 - C5970) * C50280 +
             C5971 * C7894 + C5972 * C50281 + C11121 * C7895 + C11122 * C7890) *
                C50174) *
               C50013 * C50049) *
              C50282 +
          ((((C152 - C151) * C7893 + (C154 - C153) * C50280 +
             (C156 - C155) * C7894 + (C158 - C157) * C50281 + C175 * C7895 +
             C176 * C7890) *
                C50253 +
            (C5427 * C7893 + C5428 * C50280 + C730 * C7894 + C731 * C50281 +
             C732 * C7895 + C733 * C7890) *
                C50174) *
               C50013 * C50239 +
           (((C323 - C322) * C7893 + (C325 - C324) * C50280 +
             (C327 - C326) * C7894 + (C329 - C328) * C50281 +
             (C331 - C330) * C7895 + (C333 - C332) * C7890) *
                C50253 +
            (C5979 * C7893 + C5980 * C50280 + (C892 - C893) * C7894 +
             (C894 - C895) * C50281 + (C896 - C897) * C7895 +
             (C898 - C899) * C7890) *
                C50174) *
               C50013 * C50049) *
              C50283 +
          (((C171 * C7893 + C172 * C50280 + C173 * C7894 + C174 * C50281 +
             (C164 - C163) * C7895 + (C166 - C165) * C7890) *
                C50253 +
            (C5765 * C7893 + C5766 * C50280 + (C496 - C495) * C7894 +
             (C498 - C497) * C50281 + (C734 - C735) * C7895 +
             (C736 - C737) * C7890) *
                C50174) *
               C50013 * C50239 +
           ((C618 * C7893 + C619 * C50280 + C620 * C7894 + C621 * C50281 +
             (C623 - C622) * C7895 + (C625 - C624) * C7890) *
                C50253 +
            (C11121 * C7893 + C11122 * C50280 + (C897 - C896) * C7894 +
             (C899 - C898) * C50281 + (C117 * C871 - C50094 * C880) * C7895 +
             (C117 * C881 - C50094 * C886) * C7890) *
                C50174) *
               C50013 * C50049) *
              C612)) /
        (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50094 * C129 - C117 * C122) * C7893 +
              (C50094 * C143 - C117 * C130) * C50280 + (C151 - C152) * C7894 +
              (C153 - C154) * C50281 + C171 * C7895 + C172 * C7890) *
                 C50253 +
             ((C5415 - C5416) * C7893 + (C5417 - C5418) * C50280 +
              C5419 * C7894 + C5420 * C50281 + C5765 * C7895 + C5766 * C7890) *
                 C50174) *
                C50240 +
            (((C5416 - C5415) * C7893 + (C5418 - C5417) * C50280 +
              C5427 * C7894 + C5428 * C50281 + C730 * C7895 + C731 * C7890) *
                 C50253 +
             ((C5422 - C5421) * C7893 + (C5424 - C5423) * C50280 +
              C5429 * C7894 + C5430 * C50281 + C5443 * C7895 + C5444 * C7890) *
                 C50174) *
                C50077) *
               C50239 +
           ((((C117 * C281 - C50094 * C291) * C7893 +
              (C117 * C292 - C50094 * C311) * C50280 + (C322 - C323) * C7894 +
              (C324 - C325) * C50281 + C618 * C7895 + C619 * C7890) *
                 C50253 +
             ((C5967 - C5968) * C7893 + (C5969 - C5970) * C50280 +
              C5971 * C7894 + C5972 * C50281 + C11121 * C7895 +
              C11122 * C7890) *
                 C50174) *
                C50240 +
            (((C5968 - C5967) * C7893 + (C5970 - C5969) * C50280 +
              C5979 * C7894 + C5980 * C50281 + C11465 * C7895 +
              C11466 * C7890) *
                 C50253 +
             ((C5974 - C5973) * C7893 + (C5976 - C5975) * C50280 +
              C5981 * C7894 + C5982 * C50281 + (C5615 - C5616) * C7895 +
              (C5617 - C5618) * C7890) *
                 C50174) *
                C50077) *
               C50049) *
              C279 +
          (((((C152 - C151) * C7893 + (C154 - C153) * C50280 +
              (C156 - C155) * C7894 + (C158 - C157) * C50281 + C175 * C7895 +
              C176 * C7890) *
                 C50253 +
             (C5427 * C7893 + C5428 * C50280 + C730 * C7894 + C731 * C50281 +
              C732 * C7895 + C733 * C7890) *
                 C50174) *
                C50240 +
            ((C5419 * C7893 + C5420 * C50280 + C5765 * C7894 + C5766 * C50281 +
              C11269 * C7895 + C11270 * C7890) *
                 C50253 +
             (C5425 * C7893 + C5426 * C50280 + C5767 * C7894 + C5768 * C50281 +
              (C507 - C508) * C7895 + (C509 - C510) * C7890) *
                 C50174) *
                C50077) *
               C50239 +
           ((((C323 - C322) * C7893 + (C325 - C324) * C50280 +
              (C327 - C326) * C7894 + (C329 - C328) * C50281 +
              (C331 - C330) * C7895 + (C333 - C332) * C7890) *
                 C50253 +
             (C5979 * C7893 + C5980 * C50280 + C11465 * C7894 +
              C11466 * C50281 + (C896 - C897) * C7895 + (C898 - C899) * C7890) *
                 C50174) *
                C50240 +
            ((C5971 * C7893 + C5972 * C50280 + C11121 * C7894 +
              C11122 * C50281 + (C897 - C896) * C7895 + (C899 - C898) * C7890) *
                 C50253 +
             (C5977 * C7893 + C5978 * C50280 + (C5616 - C5615) * C7894 +
              (C5618 - C5617) * C50281 +
              (C117 * C1190 - C50094 * C1197) * C7895 +
              (C117 * C1198 - C50094 * C1202) * C7890) *
                 C50174) *
                C50077) *
               C50049) *
              C49984)) /
        (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C7893 +
             (C50094 * C143 - C117 * C130) * C50280 + (C151 - C152) * C7894 +
             (C153 - C154) * C50281 + C171 * C7895 + C172 * C7890) *
                C50253 +
            ((C5415 - C5416) * C7893 + (C5417 - C5418) * C50280 +
             C5419 * C7894 + C5420 * C50281 + C5765 * C7895 + C5766 * C7890) *
                C50174) *
               C50013 * C276 +
           (((C117 * C281 - C50094 * C291) * C7893 +
             (C117 * C292 - C50094 * C311) * C50280 + (C322 - C323) * C7894 +
             (C324 - C325) * C50281 + C618 * C7895 + C619 * C7890) *
                C50253 +
            ((C5967 - C5968) * C7893 + (C5969 - C5970) * C50280 +
             C5971 * C7894 + C5972 * C50281 + (C893 - C892) * C7895 +
             (C895 - C894) * C7890) *
                C50174) *
               C50013 * C277 +
           (((C50094 * C299 - C117 * C285) * C7893 +
             (C50094 * C315 - C117 * C300) * C50280 + (C334 - C335) * C7894 +
             (C336 - C337) * C50281 + (C338 - C339) * C7895 +
             (C340 - C341) * C7890) *
                C50253 +
            ((C6884 - C6885) * C7893 + (C6886 - C6887) * C50280 +
             (C5249 - C5250) * C7894 + (C5251 - C5252) * C50281 +
             (C10825 - C10826) * C7895 + (C10827 - C10828) * C7890) *
                C50174) *
               C50013 * C278) *
              C279 +
          ((((C152 - C151) * C7893 + (C154 - C153) * C50280 +
             (C156 - C155) * C7894 + (C158 - C157) * C50281 + C175 * C7895 +
             C176 * C7890) *
                C50253 +
            (C5427 * C7893 + C5428 * C50280 + C730 * C7894 + C731 * C50281 +
             C732 * C7895 + C733 * C7890) *
                C50174) *
               C50013 * C276 +
           (((C323 - C322) * C7893 + (C325 - C324) * C50280 +
             (C327 - C326) * C7894 + (C329 - C328) * C50281 +
             (C331 - C330) * C7895 + (C333 - C332) * C7890) *
                C50253 +
            (C5979 * C7893 + C5980 * C50280 + (C892 - C893) * C7894 +
             (C894 - C895) * C50281 + (C896 - C897) * C7895 +
             (C898 - C899) * C7890) *
                C50174) *
               C50013 * C277 +
           (((C335 - C334) * C7893 + (C337 - C336) * C50280 +
             (C339 - C338) * C7894 + (C341 - C340) * C50281 +
             (C343 - C342) * C7895 + (C345 - C344) * C7890) *
                C50253 +
            ((C5250 - C5249) * C7893 + (C5252 - C5251) * C50280 +
             (C10826 - C10825) * C7894 + (C10828 - C10827) * C50281 +
             (C117 * C1537 - C50094 * C1544) * C7895 +
             (C117 * C1545 - C50094 * C1549) * C7890) *
                C50174) *
               C50013 * C278) *
              C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C7893 +
            (C50094 * C143 - C117 * C130) * C50280 + (C151 - C152) * C7894 +
            (C153 - C154) * C50281 + C171 * C7895 + C172 * C7890) *
               C50253 +
           ((C5415 - C5416) * C7893 + (C5417 - C5418) * C50280 + C5419 * C7894 +
            C5420 * C50281 + C5765 * C7895 + C5766 * C7890) *
               C50174) *
              C50013 * C49997 * C113 +
          (((C152 - C151) * C7893 + (C154 - C153) * C50280 +
            (C156 - C155) * C7894 + (C158 - C157) * C50281 + C175 * C7895 +
            C176 * C7890) *
               C50253 +
           (C5427 * C7893 + C5428 * C50280 + C730 * C7894 + C731 * C50281 +
            C732 * C7895 + C733 * C7890) *
               C50174) *
              C50013 * C49997 * C114 +
          ((C171 * C7893 + C172 * C50280 + C173 * C7894 + C174 * C50281 +
            (C164 - C163) * C7895 + (C166 - C165) * C7890) *
               C50253 +
           (C5765 * C7893 + C5766 * C50280 + (C496 - C495) * C7894 +
            (C498 - C497) * C50281 + (C734 - C735) * C7895 +
            (C736 - C737) * C7890) *
               C50174) *
              C50013 * C49997 * C115 +
          ((C175 * C7893 + C176 * C50280 + C177 * C7894 + C178 * C50281 +
            (C168 - C167) * C7895 + (C170 - C169) * C7890) *
               C50253 +
           (C732 * C7893 + C733 * C50280 + (C735 - C734) * C7894 +
            (C737 - C736) * C50281 + (C117 * C725 - C50094 * C726) * C7895 +
            (C117 * C727 - C50094 * C728) * C7890) *
               C50174) *
              C50013 * C49997 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C7893 +
             (C50094 * C143 - C117 * C130) * C50280 + (C151 - C152) * C7894 +
             (C153 - C154) * C50281 + C171 * C7895 + C172 * C7890) *
                C50253 +
            ((C5415 - C5416) * C7893 + (C5417 - C5418) * C50280 +
             C5419 * C7894 + C5420 * C50281 + C5765 * C7895 + C5766 * C7890) *
                C50174) *
               C443 +
           (((C5416 - C5415) * C7893 + (C5418 - C5417) * C50280 +
             C5427 * C7894 + C5428 * C50281 + C730 * C7895 + C731 * C7890) *
                C50253 +
            ((C5422 - C5421) * C7893 + (C5424 - C5423) * C50280 +
             C5429 * C7894 + C5430 * C50281 + C5443 * C7895 + C5444 * C7890) *
                C50174) *
               C444 +
           ((C5449 * C7893 + C5450 * C50280 + C5425 * C7894 + C5426 * C50281 +
             C5767 * C7895 + C5768 * C7890) *
                C50253 +
            ((C5432 - C5431) * C7893 + (C5434 - C5433) * C50280 +
             C5455 * C7894 + C5456 * C50281 + (C5445 - C5446) * C7895 +
             (C5447 - C5448) * C7890) *
                C50174) *
               C445) *
              C49997 * C279 +
          ((((C152 - C151) * C7893 + (C154 - C153) * C50280 +
             (C156 - C155) * C7894 + (C158 - C157) * C50281 + C175 * C7895 +
             C176 * C7890) *
                C50253 +
            (C5427 * C7893 + C5428 * C50280 + C730 * C7894 + C731 * C50281 +
             C732 * C7895 + C733 * C7890) *
                C50174) *
               C443 +
           ((C5419 * C7893 + C5420 * C50280 + C5765 * C7894 + C5766 * C50281 +
             (C496 - C495) * C7895 + (C498 - C497) * C7890) *
                C50253 +
            (C5425 * C7893 + C5426 * C50280 + C5767 * C7894 + C5768 * C50281 +
             (C507 - C508) * C7895 + (C509 - C510) * C7890) *
                C50174) *
               C444 +
           ((C5429 * C7893 + C5430 * C50280 + C5443 * C7894 + C5444 * C50281 +
             (C508 - C507) * C7895 + (C510 - C509) * C7890) *
                C50253 +
            (C5453 * C7893 + C5454 * C50280 + (C5446 - C5445) * C7894 +
             (C5448 - C5447) * C50281 +
             (C117 * C1821 - C50094 * C1828) * C7895 +
             (C117 * C1829 - C50094 * C1833) * C7890) *
                C50174) *
               C445) *
              C49997 * C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C7893 +
             (C50094 * C143 - C117 * C130) * C50280 + (C151 - C152) * C7894 +
             (C153 - C154) * C50281 + C171 * C7895 + C172 * C7890) *
                C50253 +
            ((C5415 - C5416) * C7893 + (C5417 - C5418) * C50280 +
             C5419 * C7894 + C5420 * C50281 + C5765 * C7895 + C5766 * C7890) *
                C50174) *
               C50240 +
           (((C5416 - C5415) * C7893 + (C5418 - C5417) * C50280 +
             C5427 * C7894 + C5428 * C50281 + C730 * C7895 + C731 * C7890) *
                C50253 +
            ((C5422 - C5421) * C7893 + (C5424 - C5423) * C50280 +
             C5429 * C7894 + C5430 * C50281 + C5443 * C7895 + C5444 * C7890) *
                C50174) *
               C50077) *
              C49997 * C50282 +
          ((((C152 - C151) * C7893 + (C154 - C153) * C50280 +
             (C156 - C155) * C7894 + (C158 - C157) * C50281 + C175 * C7895 +
             C176 * C7890) *
                C50253 +
            (C5427 * C7893 + C5428 * C50280 + C730 * C7894 + C731 * C50281 +
             C732 * C7895 + C733 * C7890) *
                C50174) *
               C50240 +
           ((C5419 * C7893 + C5420 * C50280 + C5765 * C7894 + C5766 * C50281 +
             C11269 * C7895 + C11270 * C7890) *
                C50253 +
            (C5425 * C7893 + C5426 * C50280 + C5767 * C7894 + C5768 * C50281 +
             (C507 - C508) * C7895 + (C509 - C510) * C7890) *
                C50174) *
               C50077) *
              C49997 * C50283 +
          (((C171 * C7893 + C172 * C50280 + C173 * C7894 + C174 * C50281 +
             (C164 - C163) * C7895 + (C166 - C165) * C7890) *
                C50253 +
            (C5765 * C7893 + C5766 * C50280 + C11269 * C7894 + C11270 * C50281 +
             (C734 - C735) * C7895 + (C736 - C737) * C7890) *
                C50174) *
               C50240 +
           ((C730 * C7893 + C731 * C50280 + C732 * C7894 + C733 * C50281 +
             (C735 - C734) * C7895 + (C737 - C736) * C7890) *
                C50253 +
            (C5443 * C7893 + C5444 * C50280 + (C508 - C507) * C7894 +
             (C510 - C509) * C50281 + (C117 * C455 - C50094 * C474) * C7895 +
             (C117 * C475 - C50094 * C485) * C7890) *
                C50174) *
               C50077) *
              C49997 * C612)) /
        (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C7893 +
            (C50094 * C143 - C117 * C130) * C50280 + (C151 - C152) * C7894 +
            (C153 - C154) * C50281 + C171 * C7895 + C172 * C7890) *
               C50253 +
           ((C5415 - C5416) * C7893 + (C5417 - C5418) * C50280 + C5419 * C7894 +
            C5420 * C50281 + C5765 * C7895 + C5766 * C7890) *
               C50174) *
              C50013 * C49997 * C113 +
          (((C152 - C151) * C7893 + (C154 - C153) * C50280 +
            (C156 - C155) * C7894 + (C158 - C157) * C50281 + C175 * C7895 +
            C176 * C7890) *
               C50253 +
           (C5427 * C7893 + C5428 * C50280 + C730 * C7894 + C731 * C50281 +
            C732 * C7895 + C733 * C7890) *
               C50174) *
              C50013 * C49997 * C114 +
          ((C171 * C7893 + C172 * C50280 + C173 * C7894 + C174 * C50281 +
            (C164 - C163) * C7895 + (C166 - C165) * C7890) *
               C50253 +
           (C5765 * C7893 + C5766 * C50280 + (C496 - C495) * C7894 +
            (C498 - C497) * C50281 + (C734 - C735) * C7895 +
            (C736 - C737) * C7890) *
               C50174) *
              C50013 * C49997 * C115 +
          ((C175 * C7893 + C176 * C50280 + C177 * C7894 + C178 * C50281 +
            (C168 - C167) * C7895 + (C170 - C169) * C7890) *
               C50253 +
           (C732 * C7893 + C733 * C50280 + (C735 - C734) * C7894 +
            (C737 - C736) * C50281 + (C117 * C725 - C50094 * C726) * C7895 +
            (C117 * C727 - C50094 * C728) * C7890) *
               C50174) *
              C50013 * C49997 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C7893 +
             (C50094 * C143 - C117 * C130) * C50280 + (C151 - C152) * C7894 +
             (C153 - C154) * C50281 + C171 * C7895 + C172 * C7890) *
                C50253 +
            ((C5415 - C5416) * C7893 + (C5417 - C5418) * C50280 +
             C5419 * C7894 + C5420 * C50281 + C5765 * C7895 + C5766 * C7890) *
                C50174) *
               C50013 * C276 +
           (((C117 * C281 - C50094 * C291) * C7893 +
             (C117 * C292 - C50094 * C311) * C50280 + (C322 - C323) * C7894 +
             (C324 - C325) * C50281 + C618 * C7895 + C619 * C7890) *
                C50253 +
            ((C5967 - C5968) * C7893 + (C5969 - C5970) * C50280 +
             C5971 * C7894 + C5972 * C50281 + (C893 - C892) * C7895 +
             (C895 - C894) * C7890) *
                C50174) *
               C50013 * C277 +
           (((C50094 * C299 - C117 * C285) * C7893 +
             (C50094 * C315 - C117 * C300) * C50280 + (C334 - C335) * C7894 +
             (C336 - C337) * C50281 + (C338 - C339) * C7895 +
             (C340 - C341) * C7890) *
                C50253 +
            ((C6884 - C6885) * C7893 + (C6886 - C6887) * C50280 +
             (C5249 - C5250) * C7894 + (C5251 - C5252) * C50281 +
             (C10825 - C10826) * C7895 + (C10827 - C10828) * C7890) *
                C50174) *
               C50013 * C278) *
              C279 +
          ((((C152 - C151) * C7893 + (C154 - C153) * C50280 +
             (C156 - C155) * C7894 + (C158 - C157) * C50281 + C175 * C7895 +
             C176 * C7890) *
                C50253 +
            (C5427 * C7893 + C5428 * C50280 + C730 * C7894 + C731 * C50281 +
             C732 * C7895 + C733 * C7890) *
                C50174) *
               C50013 * C276 +
           (((C323 - C322) * C7893 + (C325 - C324) * C50280 +
             (C327 - C326) * C7894 + (C329 - C328) * C50281 +
             (C331 - C330) * C7895 + (C333 - C332) * C7890) *
                C50253 +
            (C5979 * C7893 + C5980 * C50280 + (C892 - C893) * C7894 +
             (C894 - C895) * C50281 + (C896 - C897) * C7895 +
             (C898 - C899) * C7890) *
                C50174) *
               C50013 * C277 +
           (((C335 - C334) * C7893 + (C337 - C336) * C50280 +
             (C339 - C338) * C7894 + (C341 - C340) * C50281 +
             (C343 - C342) * C7895 + (C345 - C344) * C7890) *
                C50253 +
            ((C5250 - C5249) * C7893 + (C5252 - C5251) * C50280 +
             (C10826 - C10825) * C7894 + (C10828 - C10827) * C50281 +
             (C117 * C1537 - C50094 * C1544) * C7895 +
             (C117 * C1545 - C50094 * C1549) * C7890) *
                C50174) *
               C50013 * C278) *
              C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C7893 +
             (C50094 * C143 - C117 * C130) * C50280 + (C151 - C152) * C7894 +
             (C153 - C154) * C50281 + C171 * C7895 + C172 * C7890) *
                C50253 +
            ((C5415 - C5416) * C7893 + (C5417 - C5418) * C50280 +
             C5419 * C7894 + C5420 * C50281 + C5765 * C7895 + C5766 * C7890) *
                C50174) *
               C50013 * C50284 +
           (((C117 * C281 - C50094 * C291) * C7893 +
             (C117 * C292 - C50094 * C311) * C50280 + (C322 - C323) * C7894 +
             (C324 - C325) * C50281 + C618 * C7895 + C619 * C7890) *
                C50253 +
            ((C5967 - C5968) * C7893 + (C5969 - C5970) * C50280 +
             C5971 * C7894 + C5972 * C50281 + C11121 * C7895 + C11122 * C7890) *
                C50174) *
               C50013 * C50285 +
           (((C50094 * C299 - C117 * C285) * C7893 +
             (C50094 * C315 - C117 * C300) * C50280 + (C334 - C335) * C7894 +
             (C336 - C337) * C50281 + (C338 - C339) * C7895 +
             (C340 - C341) * C7890) *
                C50253 +
            ((C6884 - C6885) * C7893 + (C6886 - C6887) * C50280 +
             (C5249 - C5250) * C7894 + (C5251 - C5252) * C50281 +
             (C10825 - C10826) * C7895 + (C10827 - C10828) * C7890) *
                C50174) *
               C50013 * C1303) *
              C50231 +
          ((((C152 - C151) * C7893 + (C154 - C153) * C50280 +
             (C156 - C155) * C7894 + (C158 - C157) * C50281 + C175 * C7895 +
             C176 * C7890) *
                C50253 +
            (C5427 * C7893 + C5428 * C50280 + C730 * C7894 + C731 * C50281 +
             C732 * C7895 + C733 * C7890) *
                C50174) *
               C50013 * C50284 +
           (((C323 - C322) * C7893 + (C325 - C324) * C50280 +
             (C327 - C326) * C7894 + (C329 - C328) * C50281 +
             (C331 - C330) * C7895 + (C333 - C332) * C7890) *
                C50253 +
            (C5979 * C7893 + C5980 * C50280 + C11465 * C7894 + C11466 * C50281 +
             (C896 - C897) * C7895 + (C898 - C899) * C7890) *
                C50174) *
               C50013 * C50285 +
           (((C335 - C334) * C7893 + (C337 - C336) * C50280 +
             (C339 - C338) * C7894 + (C341 - C340) * C50281 +
             (C343 - C342) * C7895 + (C345 - C344) * C7890) *
                C50253 +
            ((C5250 - C5249) * C7893 + (C5252 - C5251) * C50280 +
             (C10826 - C10825) * C7894 + (C10828 - C10827) * C50281 +
             (C117 * C1537 - C50094 * C1544) * C7895 +
             (C117 * C1545 - C50094 * C1549) * C7890) *
                C50174) *
               C50013 * C1303) *
              C49984)) /
        (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C7893 +
             (C50094 * C143 - C117 * C130) * C50280 + (C151 - C152) * C7894 +
             (C153 - C154) * C50281 + C171 * C7895 + C172 * C7890) *
                C50253 +
            ((C5415 - C5416) * C7893 + (C5417 - C5418) * C50280 +
             C5419 * C7894 + C5420 * C50281 + C5765 * C7895 + C5766 * C7890) *
                C50174) *
               C50240 +
           (((C5416 - C5415) * C7893 + (C5418 - C5417) * C50280 +
             C5427 * C7894 + C5428 * C50281 + C730 * C7895 + C731 * C7890) *
                C50253 +
            ((C5422 - C5421) * C7893 + (C5424 - C5423) * C50280 +
             C5429 * C7894 + C5430 * C50281 + C5443 * C7895 + C5444 * C7890) *
                C50174) *
               C50077) *
              C50284 +
          ((((C117 * C281 - C50094 * C291) * C7893 +
             (C117 * C292 - C50094 * C311) * C50280 + (C322 - C323) * C7894 +
             (C324 - C325) * C50281 + C618 * C7895 + C619 * C7890) *
                C50253 +
            ((C5967 - C5968) * C7893 + (C5969 - C5970) * C50280 +
             C5971 * C7894 + C5972 * C50281 + C11121 * C7895 + C11122 * C7890) *
                C50174) *
               C50240 +
           (((C5968 - C5967) * C7893 + (C5970 - C5969) * C50280 +
             C5979 * C7894 + C5980 * C50281 + C11465 * C7895 + C11466 * C7890) *
                C50253 +
            ((C5974 - C5973) * C7893 + (C5976 - C5975) * C50280 +
             C5981 * C7894 + C5982 * C50281 + (C5615 - C5616) * C7895 +
             (C5617 - C5618) * C7890) *
                C50174) *
               C50077) *
              C50285 +
          ((((C50094 * C299 - C117 * C285) * C7893 +
             (C50094 * C315 - C117 * C300) * C50280 + (C334 - C335) * C7894 +
             (C336 - C337) * C50281 + (C338 - C339) * C7895 +
             (C340 - C341) * C7890) *
                C50253 +
            ((C6884 - C6885) * C7893 + (C6886 - C6887) * C50280 +
             (C5249 - C5250) * C7894 + (C5251 - C5252) * C50281 +
             (C10825 - C10826) * C7895 + (C10827 - C10828) * C7890) *
                C50174) *
               C50240 +
           (((C6885 - C6884) * C7893 + (C6887 - C6886) * C50280 +
             (C5250 - C5249) * C7894 + (C5252 - C5251) * C50281 +
             (C10826 - C10825) * C7895 + (C10828 - C10827) * C7890) *
                C50253 +
            ((C6889 - C6888) * C7893 + (C6891 - C6890) * C50280 +
             (C5254 - C5253) * C7894 + (C5256 - C5255) * C50281 +
             (C117 * C2637 - C50094 * C2642) * C7895 +
             (C117 * C2643 - C50094 * C2646) * C7890) *
                C50174) *
               C50077) *
              C1303) *
         C49978) /
        (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C7893 +
            (C50094 * C143 - C117 * C130) * C50280 + (C151 - C152) * C7894 +
            (C153 - C154) * C50281 + C171 * C7895 + C172 * C7890) *
               C50253 +
           ((C5415 - C5416) * C7893 + (C5417 - C5418) * C50280 + C5419 * C7894 +
            C5420 * C50281 + C5765 * C7895 + C5766 * C7890) *
               C50174) *
              C50013 * C1068 +
          (((C117 * C281 - C50094 * C291) * C7893 +
            (C117 * C292 - C50094 * C311) * C50280 + (C322 - C323) * C7894 +
            (C324 - C325) * C50281 + C618 * C7895 + C619 * C7890) *
               C50253 +
           ((C5967 - C5968) * C7893 + (C5969 - C5970) * C50280 + C5971 * C7894 +
            C5972 * C50281 + C11121 * C7895 + C11122 * C7890) *
               C50174) *
              C50013 * C1069 +
          (((C50094 * C299 - C117 * C285) * C7893 +
            (C50094 * C315 - C117 * C300) * C50280 + (C334 - C335) * C7894 +
            (C336 - C337) * C50281 + (C338 - C339) * C7895 +
            (C340 - C341) * C7890) *
               C50253 +
           ((C6884 - C6885) * C7893 + (C6886 - C6887) * C50280 +
            (C5249 - C5250) * C7894 + (C5251 - C5252) * C50281 +
            (C10825 - C10826) * C7895 + (C10827 - C10828) * C7890) *
               C50174) *
              C50013 * C1070 +
          (((C117 * C1073 - C50094 * C1077) * C7893 +
            (C117 * C1078 - C50094 * C1085) * C50280 +
            (C117 * C1074 - C50094 * C1079) * C7894 +
            (C117 * C1080 - C50094 * C1086) * C50281 +
            (C117 * C1075 - C50094 * C1081) * C7895 +
            (C117 * C1082 - C50094 * C1087) * C7890) *
               C50253 +
           ((C117 * C3181 - C50094 * C3184) * C7893 +
            (C117 * C3185 - C50094 * C3190) * C50280 +
            (C117 * C3182 - C50094 * C3186) * C7894 +
            (C117 * C3187 - C50094 * C3191) * C50281 +
            (C117 * C3183 - C50094 * C3188) * C7895 +
            (C117 * C3189 - C50094 * C3192) * C7890) *
               C50174) *
              C50013 * C1071) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C7893 +
             (C50094 * C143 - C117 * C130) * C50280 + (C151 - C152) * C7894 +
             (C153 - C154) * C50281 + C171 * C7895 + C172 * C7890) *
                C50253 +
            ((C5415 - C5416) * C7893 + (C5417 - C5418) * C50280 +
             C5419 * C7894 + C5420 * C50281 + C5765 * C7895 + C5766 * C7890) *
                C50174) *
               C50013 * C997 +
           (((C117 * C281 - C50094 * C291) * C7893 +
             (C117 * C292 - C50094 * C311) * C50280 + (C322 - C323) * C7894 +
             (C324 - C325) * C50281 + C618 * C7895 + C619 * C7890) *
                C50253 +
            ((C5967 - C5968) * C7893 + (C5969 - C5970) * C50280 +
             C5971 * C7894 + C5972 * C50281 + C11121 * C7895 + C11122 * C7890) *
                C50174) *
               C50013 * C50049) *
              C999 +
          ((((C152 - C151) * C7893 + (C154 - C153) * C50280 +
             (C156 - C155) * C7894 + (C158 - C157) * C50281 + C175 * C7895 +
             C176 * C7890) *
                C50253 +
            (C5427 * C7893 + C5428 * C50280 + C730 * C7894 + C731 * C50281 +
             C732 * C7895 + C733 * C7890) *
                C50174) *
               C50013 * C997 +
           (((C323 - C322) * C7893 + (C325 - C324) * C50280 +
             (C327 - C326) * C7894 + (C329 - C328) * C50281 +
             (C331 - C330) * C7895 + (C333 - C332) * C7890) *
                C50253 +
            (C5979 * C7893 + C5980 * C50280 + C11465 * C7894 + C11466 * C50281 +
             (C896 - C897) * C7895 + (C898 - C899) * C7890) *
                C50174) *
               C50013 * C50049) *
              C1000 +
          (((C171 * C7893 + C172 * C50280 + C173 * C7894 + C174 * C50281 +
             (C164 - C163) * C7895 + (C166 - C165) * C7890) *
                C50253 +
            (C5765 * C7893 + C5766 * C50280 + C11269 * C7894 + C11270 * C50281 +
             (C734 - C735) * C7895 + (C736 - C737) * C7890) *
                C50174) *
               C50013 * C997 +
           ((C618 * C7893 + C619 * C50280 + C620 * C7894 + C621 * C50281 +
             (C623 - C622) * C7895 + (C625 - C624) * C7890) *
                C50253 +
            (C11121 * C7893 + C11122 * C50280 + (C897 - C896) * C7894 +
             (C899 - C898) * C50281 + (C117 * C871 - C50094 * C880) * C7895 +
             (C117 * C881 - C50094 * C886) * C7890) *
                C50174) *
               C50013 * C50049) *
              C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C7893 +
             (C50094 * C143 - C117 * C130) * C50280 + (C151 - C152) * C7894 +
             (C153 - C154) * C50281 + C171 * C7895 + C172 * C7890) *
                C50253 +
            ((C5415 - C5416) * C7893 + (C5417 - C5418) * C50280 +
             C5419 * C7894 + C5420 * C50281 + C5765 * C7895 + C5766 * C7890) *
                C50174) *
               C443 +
           (((C5416 - C5415) * C7893 + (C5418 - C5417) * C50280 +
             C5427 * C7894 + C5428 * C50281 + C730 * C7895 + C731 * C7890) *
                C50253 +
            ((C5422 - C5421) * C7893 + (C5424 - C5423) * C50280 +
             C5429 * C7894 + C5430 * C50281 + C5443 * C7895 + C5444 * C7890) *
                C50174) *
               C444 +
           ((C5449 * C7893 + C5450 * C50280 + C5425 * C7894 + C5426 * C50281 +
             C5767 * C7895 + C5768 * C7890) *
                C50253 +
            ((C5432 - C5431) * C7893 + (C5434 - C5433) * C50280 +
             C5455 * C7894 + C5456 * C50281 + (C5445 - C5446) * C7895 +
             (C5447 - C5448) * C7890) *
                C50174) *
               C445) *
              C997 +
          ((((C117 * C281 - C50094 * C291) * C7893 +
             (C117 * C292 - C50094 * C311) * C50280 + (C322 - C323) * C7894 +
             (C324 - C325) * C50281 + C618 * C7895 + C619 * C7890) *
                C50253 +
            ((C5967 - C5968) * C7893 + (C5969 - C5970) * C50280 +
             C5971 * C7894 + C5972 * C50281 + C11121 * C7895 + C11122 * C7890) *
                C50174) *
               C443 +
           (((C5968 - C5967) * C7893 + (C5970 - C5969) * C50280 +
             C5979 * C7894 + C5980 * C50281 + C11465 * C7895 + C11466 * C7890) *
                C50253 +
            ((C5974 - C5973) * C7893 + (C5976 - C5975) * C50280 +
             C5981 * C7894 + C5982 * C50281 + (C5615 - C5616) * C7895 +
             (C5617 - C5618) * C7890) *
                C50174) *
               C444 +
           ((C6385 * C7893 + C6386 * C50280 + C5977 * C7894 + C5978 * C50281 +
             (C5616 - C5615) * C7895 + (C5618 - C5617) * C7890) *
                C50253 +
            ((C6390 - C6389) * C7893 + (C6392 - C6391) * C50280 +
             (C5984 - C5983) * C7894 + (C5986 - C5985) * C50281 +
             (C117 * C5962 - C50094 * C5963) * C7895 +
             (C117 * C5964 - C50094 * C5965) * C7890) *
                C50174) *
               C445) *
              C50049) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50094 * C129 - C117 * C122) * C7893 +
              (C50094 * C143 - C117 * C130) * C50280 + (C151 - C152) * C7894 +
              (C153 - C154) * C50281 + C171 * C7895 + C172 * C7890) *
                 C50253 +
             ((C5415 - C5416) * C7893 + (C5417 - C5418) * C50280 +
              C5419 * C7894 + C5420 * C50281 + C5765 * C7895 + C5766 * C7890) *
                 C50174) *
                C50240 +
            (((C5416 - C5415) * C7893 + (C5418 - C5417) * C50280 +
              C5427 * C7894 + C5428 * C50281 + C730 * C7895 + C731 * C7890) *
                 C50253 +
             ((C5422 - C5421) * C7893 + (C5424 - C5423) * C50280 +
              C5429 * C7894 + C5430 * C50281 + C5443 * C7895 + C5444 * C7890) *
                 C50174) *
                C50077) *
               C997 +
           ((((C117 * C281 - C50094 * C291) * C7893 +
              (C117 * C292 - C50094 * C311) * C50280 + (C322 - C323) * C7894 +
              (C324 - C325) * C50281 + C618 * C7895 + C619 * C7890) *
                 C50253 +
             ((C5967 - C5968) * C7893 + (C5969 - C5970) * C50280 +
              C5971 * C7894 + C5972 * C50281 + C11121 * C7895 +
              C11122 * C7890) *
                 C50174) *
                C50240 +
            (((C5968 - C5967) * C7893 + (C5970 - C5969) * C50280 +
              C5979 * C7894 + C5980 * C50281 + C11465 * C7895 +
              C11466 * C7890) *
                 C50253 +
             ((C5974 - C5973) * C7893 + (C5976 - C5975) * C50280 +
              C5981 * C7894 + C5982 * C50281 + (C5615 - C5616) * C7895 +
              (C5617 - C5618) * C7890) *
                 C50174) *
                C50077) *
               C50049) *
              C50231 +
          (((((C152 - C151) * C7893 + (C154 - C153) * C50280 +
              (C156 - C155) * C7894 + (C158 - C157) * C50281 + C175 * C7895 +
              C176 * C7890) *
                 C50253 +
             (C5427 * C7893 + C5428 * C50280 + C730 * C7894 + C731 * C50281 +
              C732 * C7895 + C733 * C7890) *
                 C50174) *
                C50240 +
            ((C5419 * C7893 + C5420 * C50280 + C5765 * C7894 + C5766 * C50281 +
              C11269 * C7895 + C11270 * C7890) *
                 C50253 +
             (C5425 * C7893 + C5426 * C50280 + C5767 * C7894 + C5768 * C50281 +
              (C507 - C508) * C7895 + (C509 - C510) * C7890) *
                 C50174) *
                C50077) *
               C997 +
           ((((C323 - C322) * C7893 + (C325 - C324) * C50280 +
              (C327 - C326) * C7894 + (C329 - C328) * C50281 +
              (C331 - C330) * C7895 + (C333 - C332) * C7890) *
                 C50253 +
             (C5979 * C7893 + C5980 * C50280 + C11465 * C7894 +
              C11466 * C50281 + (C896 - C897) * C7895 + (C898 - C899) * C7890) *
                 C50174) *
                C50240 +
            ((C5971 * C7893 + C5972 * C50280 + C11121 * C7894 +
              C11122 * C50281 + (C897 - C896) * C7895 + (C899 - C898) * C7890) *
                 C50253 +
             (C5977 * C7893 + C5978 * C50280 + (C5616 - C5615) * C7894 +
              (C5618 - C5617) * C50281 +
              (C117 * C1190 - C50094 * C1197) * C7895 +
              (C117 * C1198 - C50094 * C1202) * C7890) *
                 C50174) *
                C50077) *
               C50049) *
              C49984)) /
        (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C7893 +
             (C50094 * C143 - C117 * C130) * C50280 + (C151 - C152) * C7894 +
             (C153 - C154) * C50281 + C171 * C7895 + C172 * C7890) *
                C50253 +
            ((C5415 - C5416) * C7893 + (C5417 - C5418) * C50280 +
             C5419 * C7894 + C5420 * C50281 + C5765 * C7895 + C5766 * C7890) *
                C50174) *
               C50013 * C997 +
           (((C117 * C281 - C50094 * C291) * C7893 +
             (C117 * C292 - C50094 * C311) * C50280 + (C322 - C323) * C7894 +
             (C324 - C325) * C50281 + C618 * C7895 + C619 * C7890) *
                C50253 +
            ((C5967 - C5968) * C7893 + (C5969 - C5970) * C50280 +
             C5971 * C7894 + C5972 * C50281 + C11121 * C7895 + C11122 * C7890) *
                C50174) *
               C50013 * C50049) *
              C999 +
          ((((C152 - C151) * C7893 + (C154 - C153) * C50280 +
             (C156 - C155) * C7894 + (C158 - C157) * C50281 + C175 * C7895 +
             C176 * C7890) *
                C50253 +
            (C5427 * C7893 + C5428 * C50280 + C730 * C7894 + C731 * C50281 +
             C732 * C7895 + C733 * C7890) *
                C50174) *
               C50013 * C997 +
           (((C323 - C322) * C7893 + (C325 - C324) * C50280 +
             (C327 - C326) * C7894 + (C329 - C328) * C50281 +
             (C331 - C330) * C7895 + (C333 - C332) * C7890) *
                C50253 +
            (C5979 * C7893 + C5980 * C50280 + C11465 * C7894 + C11466 * C50281 +
             (C896 - C897) * C7895 + (C898 - C899) * C7890) *
                C50174) *
               C50013 * C50049) *
              C1000 +
          (((C171 * C7893 + C172 * C50280 + C173 * C7894 + C174 * C50281 +
             (C164 - C163) * C7895 + (C166 - C165) * C7890) *
                C50253 +
            (C5765 * C7893 + C5766 * C50280 + C11269 * C7894 + C11270 * C50281 +
             (C734 - C735) * C7895 + (C736 - C737) * C7890) *
                C50174) *
               C50013 * C997 +
           ((C618 * C7893 + C619 * C50280 + C620 * C7894 + C621 * C50281 +
             (C623 - C622) * C7895 + (C625 - C624) * C7890) *
                C50253 +
            (C11121 * C7893 + C11122 * C50280 + (C897 - C896) * C7894 +
             (C899 - C898) * C50281 + (C117 * C871 - C50094 * C880) * C7895 +
             (C117 * C881 - C50094 * C886) * C7890) *
                C50174) *
               C50013 * C50049) *
              C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C7893 +
            (C50094 * C143 - C117 * C130) * C50280 + (C151 - C152) * C7894 +
            (C153 - C154) * C50281 + C171 * C7895 + C172 * C7890) *
               C50253 +
           ((C5415 - C5416) * C7893 + (C5417 - C5418) * C50280 + C5419 * C7894 +
            C5420 * C50281 + C5765 * C7895 + C5766 * C7890) *
               C50174) *
              C50013 * C1068 +
          (((C117 * C281 - C50094 * C291) * C7893 +
            (C117 * C292 - C50094 * C311) * C50280 + (C322 - C323) * C7894 +
            (C324 - C325) * C50281 + C618 * C7895 + C619 * C7890) *
               C50253 +
           ((C5967 - C5968) * C7893 + (C5969 - C5970) * C50280 + C5971 * C7894 +
            C5972 * C50281 + C11121 * C7895 + C11122 * C7890) *
               C50174) *
              C50013 * C1069 +
          (((C50094 * C299 - C117 * C285) * C7893 +
            (C50094 * C315 - C117 * C300) * C50280 + (C334 - C335) * C7894 +
            (C336 - C337) * C50281 + (C338 - C339) * C7895 +
            (C340 - C341) * C7890) *
               C50253 +
           ((C6884 - C6885) * C7893 + (C6886 - C6887) * C50280 +
            (C5249 - C5250) * C7894 + (C5251 - C5252) * C50281 +
            (C10825 - C10826) * C7895 + (C10827 - C10828) * C7890) *
               C50174) *
              C50013 * C1070 +
          (((C117 * C1073 - C50094 * C1077) * C7893 +
            (C117 * C1078 - C50094 * C1085) * C50280 +
            (C117 * C1074 - C50094 * C1079) * C7894 +
            (C117 * C1080 - C50094 * C1086) * C50281 +
            (C117 * C1075 - C50094 * C1081) * C7895 +
            (C117 * C1082 - C50094 * C1087) * C7890) *
               C50253 +
           ((C117 * C3181 - C50094 * C3184) * C7893 +
            (C117 * C3185 - C50094 * C3190) * C50280 +
            (C117 * C3182 - C50094 * C3186) * C7894 +
            (C117 * C3187 - C50094 * C3191) * C50281 +
            (C117 * C3183 - C50094 * C3188) * C7895 +
            (C117 * C3189 - C50094 * C3192) * C7890) *
               C50174) *
              C50013 * C1071) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50094 * C129 - C117 * C122) * C7893 +
              (C50094 * C143 - C117 * C130) * C50280 + (C151 - C152) * C7894 +
              (C153 - C154) * C50281 + C171 * C7895 + C172 * C7890) *
                 C50253 +
             ((C5415 - C5416) * C7893 + (C5417 - C5418) * C50280 +
              C5419 * C7894 + C5420 * C50281 + C5765 * C7895 + C5766 * C7890) *
                 C50174) *
                C1648 +
            (((C5416 - C5415) * C7893 + (C5418 - C5417) * C50280 +
              C5427 * C7894 + C5428 * C50281 + C730 * C7895 + C731 * C7890) *
                 C50253 +
             ((C5422 - C5421) * C7893 + (C5424 - C5423) * C50280 +
              C5429 * C7894 + C5430 * C50281 + C5443 * C7895 + C5444 * C7890) *
                 C50174) *
                C50077) *
               C50239 +
           ((((C117 * C281 - C50094 * C291) * C7893 +
              (C117 * C292 - C50094 * C311) * C50280 + (C322 - C323) * C7894 +
              (C324 - C325) * C50281 + C618 * C7895 + C619 * C7890) *
                 C50253 +
             ((C5967 - C5968) * C7893 + (C5969 - C5970) * C50280 +
              C5971 * C7894 + C5972 * C50281 + C11121 * C7895 +
              C11122 * C7890) *
                 C50174) *
                C1648 +
            (((C5968 - C5967) * C7893 + (C5970 - C5969) * C50280 +
              C5979 * C7894 + C5980 * C50281 + C11465 * C7895 +
              C11466 * C7890) *
                 C50253 +
             ((C5974 - C5973) * C7893 + (C5976 - C5975) * C50280 +
              C5981 * C7894 + C5982 * C50281 + (C5615 - C5616) * C7895 +
              (C5617 - C5618) * C7890) *
                 C50174) *
                C50077) *
               C50049) *
              C50231 +
          (((((C152 - C151) * C7893 + (C154 - C153) * C50280 +
              (C156 - C155) * C7894 + (C158 - C157) * C50281 + C175 * C7895 +
              C176 * C7890) *
                 C50253 +
             (C5427 * C7893 + C5428 * C50280 + C730 * C7894 + C731 * C50281 +
              C732 * C7895 + C733 * C7890) *
                 C50174) *
                C1648 +
            ((C5419 * C7893 + C5420 * C50280 + C5765 * C7894 + C5766 * C50281 +
              C11269 * C7895 + C11270 * C7890) *
                 C50253 +
             (C5425 * C7893 + C5426 * C50280 + C5767 * C7894 + C5768 * C50281 +
              (C507 - C508) * C7895 + (C509 - C510) * C7890) *
                 C50174) *
                C50077) *
               C50239 +
           ((((C323 - C322) * C7893 + (C325 - C324) * C50280 +
              (C327 - C326) * C7894 + (C329 - C328) * C50281 +
              (C331 - C330) * C7895 + (C333 - C332) * C7890) *
                 C50253 +
             (C5979 * C7893 + C5980 * C50280 + C11465 * C7894 +
              C11466 * C50281 + (C896 - C897) * C7895 + (C898 - C899) * C7890) *
                 C50174) *
                C1648 +
            ((C5971 * C7893 + C5972 * C50280 + C11121 * C7894 +
              C11122 * C50281 + (C897 - C896) * C7895 + (C899 - C898) * C7890) *
                 C50253 +
             (C5977 * C7893 + C5978 * C50280 + (C5616 - C5615) * C7894 +
              (C5618 - C5617) * C50281 +
              (C117 * C1190 - C50094 * C1197) * C7895 +
              (C117 * C1198 - C50094 * C1202) * C7890) *
                 C50174) *
                C50077) *
               C50049) *
              C49984)) /
        (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C7893 +
             (C50094 * C143 - C117 * C130) * C50280 + (C151 - C152) * C7894 +
             (C153 - C154) * C50281 + C171 * C7895 + C172 * C7890) *
                C50253 +
            ((C5415 - C5416) * C7893 + (C5417 - C5418) * C50280 +
             C5419 * C7894 + C5420 * C50281 + C5765 * C7895 + C5766 * C7890) *
                C50174) *
               C50286 +
           (((C5416 - C5415) * C7893 + (C5418 - C5417) * C50280 +
             C5427 * C7894 + C5428 * C50281 + C730 * C7895 + C731 * C7890) *
                C50253 +
            ((C5422 - C5421) * C7893 + (C5424 - C5423) * C50280 +
             C5429 * C7894 + C5430 * C50281 + C5443 * C7895 + C5444 * C7890) *
                C50174) *
               C50287 +
           ((C5449 * C7893 + C5450 * C50280 + C5425 * C7894 + C5426 * C50281 +
             C5767 * C7895 + C5768 * C7890) *
                C50253 +
            ((C5432 - C5431) * C7893 + (C5434 - C5433) * C50280 +
             C5455 * C7894 + C5456 * C50281 + (C5445 - C5446) * C7895 +
             (C5447 - C5448) * C7890) *
                C50174) *
               C2064) *
              C50239 +
          ((((C117 * C281 - C50094 * C291) * C7893 +
             (C117 * C292 - C50094 * C311) * C50280 + (C322 - C323) * C7894 +
             (C324 - C325) * C50281 + C618 * C7895 + C619 * C7890) *
                C50253 +
            ((C5967 - C5968) * C7893 + (C5969 - C5970) * C50280 +
             C5971 * C7894 + C5972 * C50281 + C11121 * C7895 + C11122 * C7890) *
                C50174) *
               C50286 +
           (((C5968 - C5967) * C7893 + (C5970 - C5969) * C50280 +
             C5979 * C7894 + C5980 * C50281 + C11465 * C7895 + C11466 * C7890) *
                C50253 +
            ((C5974 - C5973) * C7893 + (C5976 - C5975) * C50280 +
             C5981 * C7894 + C5982 * C50281 + (C5615 - C5616) * C7895 +
             (C5617 - C5618) * C7890) *
                C50174) *
               C50287 +
           ((C6385 * C7893 + C6386 * C50280 + C5977 * C7894 + C5978 * C50281 +
             (C5616 - C5615) * C7895 + (C5618 - C5617) * C7890) *
                C50253 +
            ((C6390 - C6389) * C7893 + (C6392 - C6391) * C50280 +
             (C5984 - C5983) * C7894 + (C5986 - C5985) * C50281 +
             (C117 * C5962 - C50094 * C5963) * C7895 +
             (C117 * C5964 - C50094 * C5965) * C7890) *
                C50174) *
               C2064) *
              C50049) *
         C49978) /
        (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C7893 +
             (C50094 * C143 - C117 * C130) * C50280 + (C151 - C152) * C7894 +
             (C153 - C154) * C50281 + C171 * C7895 + C172 * C7890) *
                C50253 +
            ((C5415 - C5416) * C7893 + (C5417 - C5418) * C50280 +
             C5419 * C7894 + C5420 * C50281 + C5765 * C7895 + C5766 * C7890) *
                C50174) *
               C1648 +
           (((C5416 - C5415) * C7893 + (C5418 - C5417) * C50280 +
             C5427 * C7894 + C5428 * C50281 + C730 * C7895 + C731 * C7890) *
                C50253 +
            ((C5422 - C5421) * C7893 + (C5424 - C5423) * C50280 +
             C5429 * C7894 + C5430 * C50281 + C5443 * C7895 + C5444 * C7890) *
                C50174) *
               C50077) *
              C276 +
          ((((C117 * C281 - C50094 * C291) * C7893 +
             (C117 * C292 - C50094 * C311) * C50280 + (C322 - C323) * C7894 +
             (C324 - C325) * C50281 + C618 * C7895 + C619 * C7890) *
                C50253 +
            ((C5967 - C5968) * C7893 + (C5969 - C5970) * C50280 +
             C5971 * C7894 + C5972 * C50281 + C11121 * C7895 + C11122 * C7890) *
                C50174) *
               C1648 +
           (((C5968 - C5967) * C7893 + (C5970 - C5969) * C50280 +
             C5979 * C7894 + C5980 * C50281 + C11465 * C7895 + C11466 * C7890) *
                C50253 +
            ((C5974 - C5973) * C7893 + (C5976 - C5975) * C50280 +
             C5981 * C7894 + C5982 * C50281 + (C5615 - C5616) * C7895 +
             (C5617 - C5618) * C7890) *
                C50174) *
               C50077) *
              C277 +
          ((((C50094 * C299 - C117 * C285) * C7893 +
             (C50094 * C315 - C117 * C300) * C50280 + (C334 - C335) * C7894 +
             (C336 - C337) * C50281 + (C338 - C339) * C7895 +
             (C340 - C341) * C7890) *
                C50253 +
            ((C6884 - C6885) * C7893 + (C6886 - C6887) * C50280 +
             (C5249 - C5250) * C7894 + (C5251 - C5252) * C50281 +
             (C10825 - C10826) * C7895 + (C10827 - C10828) * C7890) *
                C50174) *
               C1648 +
           (((C6885 - C6884) * C7893 + (C6887 - C6886) * C50280 +
             (C5250 - C5249) * C7894 + (C5252 - C5251) * C50281 +
             (C10826 - C10825) * C7895 + (C10828 - C10827) * C7890) *
                C50253 +
            ((C6889 - C6888) * C7893 + (C6891 - C6890) * C50280 +
             (C5254 - C5253) * C7894 + (C5256 - C5255) * C50281 +
             (C117 * C2637 - C50094 * C2642) * C7895 +
             (C117 * C2643 - C50094 * C2646) * C7890) *
                C50174) *
               C50077) *
              C278) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C7893 +
             (C50094 * C143 - C117 * C130) * C50280 + (C151 - C152) * C7894 +
             (C153 - C154) * C50281 + C171 * C7895 + C172 * C7890) *
                C50253 +
            ((C5415 - C5416) * C7893 + (C5417 - C5418) * C50280 +
             C5419 * C7894 + C5420 * C50281 + C5765 * C7895 + C5766 * C7890) *
                C50174) *
               C1648 +
           (((C5416 - C5415) * C7893 + (C5418 - C5417) * C50280 +
             C5427 * C7894 + C5428 * C50281 + C730 * C7895 + C731 * C7890) *
                C50253 +
            ((C5422 - C5421) * C7893 + (C5424 - C5423) * C50280 +
             C5429 * C7894 + C5430 * C50281 + C5443 * C7895 + C5444 * C7890) *
                C50174) *
               C50077) *
              C49997 * C999 +
          ((((C152 - C151) * C7893 + (C154 - C153) * C50280 +
             (C156 - C155) * C7894 + (C158 - C157) * C50281 + C175 * C7895 +
             C176 * C7890) *
                C50253 +
            (C5427 * C7893 + C5428 * C50280 + C730 * C7894 + C731 * C50281 +
             C732 * C7895 + C733 * C7890) *
                C50174) *
               C1648 +
           ((C5419 * C7893 + C5420 * C50280 + C5765 * C7894 + C5766 * C50281 +
             C11269 * C7895 + C11270 * C7890) *
                C50253 +
            (C5425 * C7893 + C5426 * C50280 + C5767 * C7894 + C5768 * C50281 +
             (C507 - C508) * C7895 + (C509 - C510) * C7890) *
                C50174) *
               C50077) *
              C49997 * C1000 +
          (((C171 * C7893 + C172 * C50280 + C173 * C7894 + C174 * C50281 +
             (C164 - C163) * C7895 + (C166 - C165) * C7890) *
                C50253 +
            (C5765 * C7893 + C5766 * C50280 + C11269 * C7894 + C11270 * C50281 +
             (C734 - C735) * C7895 + (C736 - C737) * C7890) *
                C50174) *
               C1648 +
           ((C730 * C7893 + C731 * C50280 + C732 * C7894 + C733 * C50281 +
             (C735 - C734) * C7895 + (C737 - C736) * C7890) *
                C50253 +
            (C5443 * C7893 + C5444 * C50280 + (C508 - C507) * C7894 +
             (C510 - C509) * C50281 + (C117 * C455 - C50094 * C474) * C7895 +
             (C117 * C475 - C50094 * C485) * C7890) *
                C50174) *
               C50077) *
              C49997 * C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C7893 +
            (C50094 * C143 - C117 * C130) * C50280 + (C151 - C152) * C7894 +
            (C153 - C154) * C50281 + C171 * C7895 + C172 * C7890) *
               C50253 +
           ((C5415 - C5416) * C7893 + (C5417 - C5418) * C50280 + C5419 * C7894 +
            C5420 * C50281 + C5765 * C7895 + C5766 * C7890) *
               C50174) *
              C1814 +
          (((C5416 - C5415) * C7893 + (C5418 - C5417) * C50280 + C5427 * C7894 +
            C5428 * C50281 + C730 * C7895 + C731 * C7890) *
               C50253 +
           ((C5422 - C5421) * C7893 + (C5424 - C5423) * C50280 + C5429 * C7894 +
            C5430 * C50281 + C5443 * C7895 + C5444 * C7890) *
               C50174) *
              C1815 +
          ((C5449 * C7893 + C5450 * C50280 + C5425 * C7894 + C5426 * C50281 +
            C5767 * C7895 + C5768 * C7890) *
               C50253 +
           ((C5432 - C5431) * C7893 + (C5434 - C5433) * C50280 + C5455 * C7894 +
            C5456 * C50281 + (C5445 - C5446) * C7895 +
            (C5447 - C5448) * C7890) *
               C50174) *
              C1816 +
          ((C7290 * C7893 + C7291 * C50280 + C5453 * C7894 + C5454 * C50281 +
            (C5446 - C5445) * C7895 + (C5448 - C5447) * C7890) *
               C50253 +
           ((C7295 - C7294) * C7893 + (C7297 - C7296) * C50280 +
            (C5440 - C5439) * C7894 + (C5442 - C5441) * C50281 +
            (C117 * C5404 - C50094 * C5409) * C7895 +
            (C117 * C5410 - C50094 * C5413) * C7890) *
               C50174) *
              C1817) *
         C49997 * C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C7893 +
             (C50094 * C143 - C117 * C130) * C50280 + (C151 - C152) * C7894 +
             (C153 - C154) * C50281 + C171 * C7895 + C172 * C7890) *
                C50253 +
            ((C5415 - C5416) * C7893 + (C5417 - C5418) * C50280 +
             C5419 * C7894 + C5420 * C50281 + C5765 * C7895 + C5766 * C7890) *
                C50174) *
               C50286 +
           (((C5416 - C5415) * C7893 + (C5418 - C5417) * C50280 +
             C5427 * C7894 + C5428 * C50281 + C730 * C7895 + C731 * C7890) *
                C50253 +
            ((C5422 - C5421) * C7893 + (C5424 - C5423) * C50280 +
             C5429 * C7894 + C5430 * C50281 + C5443 * C7895 + C5444 * C7890) *
                C50174) *
               C50287 +
           ((C5449 * C7893 + C5450 * C50280 + C5425 * C7894 + C5426 * C50281 +
             C5767 * C7895 + C5768 * C7890) *
                C50253 +
            ((C5432 - C5431) * C7893 + (C5434 - C5433) * C50280 +
             C5455 * C7894 + C5456 * C50281 + (C5445 - C5446) * C7895 +
             (C5447 - C5448) * C7890) *
                C50174) *
               C2064) *
              C49997 * C50231 +
          ((((C152 - C151) * C7893 + (C154 - C153) * C50280 +
             (C156 - C155) * C7894 + (C158 - C157) * C50281 + C175 * C7895 +
             C176 * C7890) *
                C50253 +
            (C5427 * C7893 + C5428 * C50280 + C730 * C7894 + C731 * C50281 +
             C732 * C7895 + C733 * C7890) *
                C50174) *
               C50286 +
           ((C5419 * C7893 + C5420 * C50280 + C5765 * C7894 + C5766 * C50281 +
             C11269 * C7895 + C11270 * C7890) *
                C50253 +
            (C5425 * C7893 + C5426 * C50280 + C5767 * C7894 + C5768 * C50281 +
             (C507 - C508) * C7895 + (C509 - C510) * C7890) *
                C50174) *
               C50287 +
           ((C5429 * C7893 + C5430 * C50280 + C5443 * C7894 + C5444 * C50281 +
             (C508 - C507) * C7895 + (C510 - C509) * C7890) *
                C50253 +
            (C5453 * C7893 + C5454 * C50280 + (C5446 - C5445) * C7894 +
             (C5448 - C5447) * C50281 +
             (C117 * C1821 - C50094 * C1828) * C7895 +
             (C117 * C1829 - C50094 * C1833) * C7890) *
                C50174) *
               C2064) *
              C49997 * C49984)) /
        (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C7893 +
             (C50094 * C143 - C117 * C130) * C50280 + (C151 - C152) * C7894 +
             (C153 - C154) * C50281 + C171 * C7895 + C172 * C7890) *
                C50253 +
            ((C5415 - C5416) * C7893 + (C5417 - C5418) * C50280 +
             C5419 * C7894 + C5420 * C50281 + C5765 * C7895 + C5766 * C7890) *
                C50174) *
               C1648 +
           (((C5416 - C5415) * C7893 + (C5418 - C5417) * C50280 +
             C5427 * C7894 + C5428 * C50281 + C730 * C7895 + C731 * C7890) *
                C50253 +
            ((C5422 - C5421) * C7893 + (C5424 - C5423) * C50280 +
             C5429 * C7894 + C5430 * C50281 + C5443 * C7895 + C5444 * C7890) *
                C50174) *
               C50077) *
              C49997 * C999 +
          ((((C152 - C151) * C7893 + (C154 - C153) * C50280 +
             (C156 - C155) * C7894 + (C158 - C157) * C50281 + C175 * C7895 +
             C176 * C7890) *
                C50253 +
            (C5427 * C7893 + C5428 * C50280 + C730 * C7894 + C731 * C50281 +
             C732 * C7895 + C733 * C7890) *
                C50174) *
               C1648 +
           ((C5419 * C7893 + C5420 * C50280 + C5765 * C7894 + C5766 * C50281 +
             C11269 * C7895 + C11270 * C7890) *
                C50253 +
            (C5425 * C7893 + C5426 * C50280 + C5767 * C7894 + C5768 * C50281 +
             (C507 - C508) * C7895 + (C509 - C510) * C7890) *
                C50174) *
               C50077) *
              C49997 * C1000 +
          (((C171 * C7893 + C172 * C50280 + C173 * C7894 + C174 * C50281 +
             (C164 - C163) * C7895 + (C166 - C165) * C7890) *
                C50253 +
            (C5765 * C7893 + C5766 * C50280 + C11269 * C7894 + C11270 * C50281 +
             (C734 - C735) * C7895 + (C736 - C737) * C7890) *
                C50174) *
               C1648 +
           ((C730 * C7893 + C731 * C50280 + C732 * C7894 + C733 * C50281 +
             (C735 - C734) * C7895 + (C737 - C736) * C7890) *
                C50253 +
            (C5443 * C7893 + C5444 * C50280 + (C508 - C507) * C7894 +
             (C510 - C509) * C50281 + (C117 * C455 - C50094 * C474) * C7895 +
             (C117 * C475 - C50094 * C485) * C7890) *
                C50174) *
               C50077) *
              C49997 * C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C7893 +
             (C50094 * C143 - C117 * C130) * C50280 + (C151 - C152) * C7894 +
             (C153 - C154) * C50281 + C171 * C7895 + C172 * C7890) *
                C50253 +
            ((C5415 - C5416) * C7893 + (C5417 - C5418) * C50280 +
             C5419 * C7894 + C5420 * C50281 + C5765 * C7895 + C5766 * C7890) *
                C50174) *
               C1648 +
           (((C5416 - C5415) * C7893 + (C5418 - C5417) * C50280 +
             C5427 * C7894 + C5428 * C50281 + C730 * C7895 + C731 * C7890) *
                C50253 +
            ((C5422 - C5421) * C7893 + (C5424 - C5423) * C50280 +
             C5429 * C7894 + C5430 * C50281 + C5443 * C7895 + C5444 * C7890) *
                C50174) *
               C50077) *
              C276 +
          ((((C117 * C281 - C50094 * C291) * C7893 +
             (C117 * C292 - C50094 * C311) * C50280 + (C322 - C323) * C7894 +
             (C324 - C325) * C50281 + C618 * C7895 + C619 * C7890) *
                C50253 +
            ((C5967 - C5968) * C7893 + (C5969 - C5970) * C50280 +
             C5971 * C7894 + C5972 * C50281 + C11121 * C7895 + C11122 * C7890) *
                C50174) *
               C1648 +
           (((C5968 - C5967) * C7893 + (C5970 - C5969) * C50280 +
             C5979 * C7894 + C5980 * C50281 + C11465 * C7895 + C11466 * C7890) *
                C50253 +
            ((C5974 - C5973) * C7893 + (C5976 - C5975) * C50280 +
             C5981 * C7894 + C5982 * C50281 + (C5615 - C5616) * C7895 +
             (C5617 - C5618) * C7890) *
                C50174) *
               C50077) *
              C277 +
          ((((C50094 * C299 - C117 * C285) * C7893 +
             (C50094 * C315 - C117 * C300) * C50280 + (C334 - C335) * C7894 +
             (C336 - C337) * C50281 + (C338 - C339) * C7895 +
             (C340 - C341) * C7890) *
                C50253 +
            ((C6884 - C6885) * C7893 + (C6886 - C6887) * C50280 +
             (C5249 - C5250) * C7894 + (C5251 - C5252) * C50281 +
             (C10825 - C10826) * C7895 + (C10827 - C10828) * C7890) *
                C50174) *
               C1648 +
           (((C6885 - C6884) * C7893 + (C6887 - C6886) * C50280 +
             (C5250 - C5249) * C7894 + (C5252 - C5251) * C50281 +
             (C10826 - C10825) * C7895 + (C10828 - C10827) * C7890) *
                C50253 +
            ((C6889 - C6888) * C7893 + (C6891 - C6890) * C50280 +
             (C5254 - C5253) * C7894 + (C5256 - C5255) * C50281 +
             (C117 * C2637 - C50094 * C2642) * C7895 +
             (C117 * C2643 - C50094 * C2646) * C7890) *
                C50174) *
               C50077) *
              C278) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C118 +
            (C50094 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50110 * C50013 * C50239 +
           ((C117 * C281 - C50094 * C291) * C118 +
            (C117 * C292 - C50094 * C311) * C106 + (C322 - C323) * C119 +
            (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
            C621 * C109) *
               C50110 * C50013 * C50049) *
              C50282 +
          (((C152 - C151) * C118 + (C154 - C153) * C106 + (C156 - C155) * C119 +
            (C158 - C157) * C107 + C175 * C120 + C176 * C108 + C177 * C121 +
            C178 * C109) *
               C50110 * C50013 * C50239 +
           ((C323 - C322) * C118 + (C325 - C324) * C106 + (C327 - C326) * C119 +
            (C329 - C328) * C107 + (C331 - C330) * C120 + (C333 - C332) * C108 +
            (C622 - C623) * C121 + (C624 - C625) * C109) *
               C50110 * C50013 * C50049) *
              C50283 +
          ((C171 * C118 + C172 * C106 + C173 * C119 + C174 * C107 +
            (C164 - C163) * C120 + (C166 - C165) * C108 + (C167 - C168) * C121 +
            (C169 - C170) * C109) *
               C50110 * C50013 * C50239 +
           (C618 * C118 + C619 * C106 + C620 * C119 + C621 * C107 +
            (C623 - C622) * C120 + (C625 - C624) * C108 +
            (C117 * C613 - C50094 * C614) * C121 +
            (C117 * C615 - C50094 * C616) * C109) *
               C50110 * C50013 * C50049) *
              C612)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
             C2263 * C299 - C2268 * C285) *
                C2269 +
            (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
             C2263 * C315 - C2268 * C300) *
                C2264 +
            (C2272 - C2273 + C2274 - C2275 + C2276 - C2277) * C2270 +
            (C2278 - C2279 + C2280 - C2281 + C2282 - C2283) * C49955) *
               C50110 * C50013 * C50239 +
           ((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
             C2268 * C1073 - C2263 * C1077) *
                C2269 +
            (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
             C2268 * C1078 - C2263 * C1085) *
                C2264 +
            (C2466 - C2467 + C2468 - C2469 + C2470 - C2471) * C2270 +
            (C2472 - C2473 + C2474 - C2475 + C2476 - C2477) * C49955) *
               C50110 * C50013 * C50049) *
              C50282 +
          (((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C2269 +
            (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C2264 +
            (C2284 - C2285 + C2286 - C2287 + C2288 - C2289) * C2270 +
            (C2290 - C2291 + C2292 - C2293 + C2294 - C2295) * C49955) *
               C50110 * C50013 * C50239 +
           ((C2467 - C2466 + C2469 - C2468 + C2471 - C2470) * C2269 +
            (C2473 - C2472 + C2475 - C2474 + C2477 - C2476) * C2264 +
            (C2818 - C2819 + C2820 - C2821 + C2822 - C2823) * C2270 +
            (C2824 - C2825 + C2826 - C2827 + C2828 - C2829) * C49955) *
               C50110 * C50013 * C50049) *
              C50283 +
          (((C2285 - C2284 + C2287 - C2286 + C2289 - C2288) * C2269 +
            (C2291 - C2290 + C2293 - C2292 + C2295 - C2294) * C2264 +
            (C2296 - C2297 + C2298 - C2299 + C2300 - C2301) * C2270 +
            (C2302 - C2303 + C2304 - C2305 + C2306 - C2307) * C49955) *
               C50110 * C50013 * C50239 +
           ((C2819 - C2818 + C2821 - C2820 + C2823 - C2822) * C2269 +
            (C2825 - C2824 + C2827 - C2826 + C2829 - C2828) * C2264 +
            (C2266 * C284 - C2261 * C297 + C2267 * C288 - C2262 * C305 +
             C2268 * C1076 - C2263 * C1083) *
                C2270 +
            (C2266 * C298 - C2261 * C314 + C2267 * C306 - C2262 * C318 +
             C2268 * C1084 - C2263 * C1088) *
                C49955) *
               C50110 * C50013 * C50049) *
              C612)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C50094 * C129 - C117 * C122) * C118 +
                     (C50094 * C143 - C117 * C130) * C106 +
                     (C151 - C152) * C119 + (C153 - C154) * C107 + C171 * C120 +
                     C172 * C108 + C173 * C121 + C174 * C109) *
                        C50110 * C50240 +
                    ((C117 * C446 - C50094 * C456) * C118 +
                     (C117 * C457 - C50094 * C476) * C106 +
                     (C487 - C488) * C119 + (C489 - C490) * C107 + C730 * C120 +
                     C731 * C108 + C732 * C121 + C733 * C109) *
                        C50110 * C50077) *
                       C50239 +
                   (((C117 * C281 - C50094 * C291) * C118 +
                     (C117 * C292 - C50094 * C311) * C106 +
                     (C322 - C323) * C119 + (C324 - C325) * C107 + C618 * C120 +
                     C619 * C108 + C620 * C121 + C621 * C109) *
                        C50110 * C50240 +
                    ((C50094 * C872 - C117 * C867) * C118 +
                     (C50094 * C882 - C117 * C873) * C106 +
                     (C888 - C889) * C119 + (C890 - C891) * C107 +
                     (C892 - C893) * C120 + (C894 - C895) * C108 +
                     (C896 - C897) * C121 + (C898 - C899) * C109) *
                        C50110 * C50077) *
                       C50049) *
                      C279 +
                  ((((C152 - C151) * C118 + (C154 - C153) * C106 +
                     (C156 - C155) * C119 + (C158 - C157) * C107 + C175 * C120 +
                     C176 * C108 + C177 * C121 + C178 * C109) *
                        C50110 * C50240 +
                    ((C488 - C487) * C118 + (C490 - C489) * C106 +
                     (C492 - C491) * C119 + (C494 - C493) * C107 +
                     (C496 - C495) * C120 + (C498 - C497) * C108 +
                     (C734 - C735) * C121 + (C736 - C737) * C109) *
                        C50110 * C50077) *
                       C50239 +
                   (((C323 - C322) * C118 + (C325 - C324) * C106 +
                     (C327 - C326) * C119 + (C329 - C328) * C107 +
                     (C331 - C330) * C120 + (C333 - C332) * C108 +
                     (C622 - C623) * C121 + (C624 - C625) * C109) *
                        C50110 * C50240 +
                    ((C889 - C888) * C118 + (C891 - C890) * C106 +
                     (C893 - C892) * C119 + (C895 - C894) * C107 +
                     (C897 - C896) * C120 + (C899 - C898) * C108 +
                     (C117 * C871 - C50094 * C880) * C121 +
                     (C117 * C881 - C50094 * C886) * C109) *
                        C50110 * C50077) *
                       C50049) *
                      C49984)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C2261 * C129 - C2266 * C122 + C2262 * C291 -
                      C2267 * C281 + C2263 * C299 - C2268 * C285) *
                         C2269 +
                     (C2261 * C143 - C2266 * C130 + C2262 * C311 -
                      C2267 * C292 + C2263 * C315 - C2268 * C300) *
                         C2264 +
                     (C2272 - C2273 + C2274 - C2275 + C2276 - C2277) * C2270 +
                     (C2278 - C2279 + C2280 - C2281 + C2282 - C2283) * C49955) *
                        C50110 * C50240 +
                    ((C2266 * C446 - C2261 * C456 + C2267 * C867 -
                      C2262 * C872 + C2268 * C1534 - C2263 * C1538) *
                         C2269 +
                     (C2266 * C457 - C2261 * C476 + C2267 * C873 -
                      C2262 * C882 + C2268 * C1539 - C2263 * C1546) *
                         C2264 +
                     (C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C2270 +
                     (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49955) *
                        C50110 * C50077) *
                       C50239 +
                   (((C2266 * C281 - C2261 * C291 + C2267 * C285 -
                      C2262 * C299 + C2268 * C1073 - C2263 * C1077) *
                         C2269 +
                     (C2266 * C292 - C2261 * C311 + C2267 * C300 -
                      C2262 * C315 + C2268 * C1078 - C2263 * C1085) *
                         C2264 +
                     (C2466 - C2467 + C2468 - C2469 + C2470 - C2471) * C2270 +
                     (C2472 - C2473 + C2474 - C2475 + C2476 - C2477) * C49955) *
                        C50110 * C50240 +
                    ((C2261 * C872 - C2266 * C867 + C2262 * C1538 -
                      C2267 * C1534 + C2263 * C3184 - C2268 * C3181) *
                         C2269 +
                     (C2261 * C882 - C2266 * C873 + C2262 * C1546 -
                      C2267 * C1539 + C2263 * C3190 - C2268 * C3185) *
                         C2264 +
                     (C3194 - C3195 + C3196 - C3197 + C3198 - C3199) * C2270 +
                     (C3200 - C3201 + C3202 - C3203 + C3204 - C3205) * C49955) *
                        C50110 * C50077) *
                       C50049) *
                      C279 +
                  ((((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C2269 +
                     (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C2264 +
                     (C2284 - C2285 + C2286 - C2287 + C2288 - C2289) * C2270 +
                     (C2290 - C2291 + C2292 - C2293 + C2294 - C2295) * C49955) *
                        C50110 * C50240 +
                    ((C2649 - C2648 + C2651 - C2650 + C2653 - C2652) * C2269 +
                     (C2655 - C2654 + C2657 - C2656 + C2659 - C2658) * C2264 +
                     (C2976 - C2977 + C2978 - C2979 + C2980 - C2981) * C2270 +
                     (C2982 - C2983 + C2984 - C2985 + C2986 - C2987) * C49955) *
                        C50110 * C50077) *
                       C50239 +
                   (((C2467 - C2466 + C2469 - C2468 + C2471 - C2470) * C2269 +
                     (C2473 - C2472 + C2475 - C2474 + C2477 - C2476) * C2264 +
                     (C2818 - C2819 + C2820 - C2821 + C2822 - C2823) * C2270 +
                     (C2824 - C2825 + C2826 - C2827 + C2828 - C2829) * C49955) *
                        C50110 * C50240 +
                    ((C3195 - C3194 + C3197 - C3196 + C3199 - C3198) * C2269 +
                     (C3201 - C3200 + C3203 - C3202 + C3205 - C3204) * C2264 +
                     (C2266 * C869 - C2261 * C876 + C2267 * C1536 -
                      C2262 * C1542 + C2268 * C3183 - C2263 * C3188) *
                         C2270 +
                     (C2266 * C877 - C2261 * C884 + C2267 * C1543 -
                      C2262 * C1548 + C2268 * C3189 - C2263 * C3192) *
                         C49955) *
                        C50110 * C50077) *
                       C50049) *
                      C49984)) /
                    (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C118 +
            (C50094 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50110 * C50013 * C276 +
           ((C117 * C281 - C50094 * C291) * C118 +
            (C117 * C292 - C50094 * C311) * C106 + (C322 - C323) * C119 +
            (C324 - C325) * C107 + (C326 - C327) * C120 + (C328 - C329) * C108 +
            (C330 - C331) * C121 + (C332 - C333) * C109) *
               C50110 * C50013 * C277 +
           ((C50094 * C299 - C117 * C285) * C118 +
            (C50094 * C315 - C117 * C300) * C106 + (C334 - C335) * C119 +
            (C336 - C337) * C107 + (C338 - C339) * C120 + (C340 - C341) * C108 +
            (C342 - C343) * C121 + (C344 - C345) * C109) *
               C50110 * C50013 * C278) *
              C279 +
          (((C152 - C151) * C118 + (C154 - C153) * C106 + (C156 - C155) * C119 +
            (C158 - C157) * C107 + C175 * C120 + C176 * C108 + C177 * C121 +
            C178 * C109) *
               C50110 * C50013 * C276 +
           ((C323 - C322) * C118 + (C325 - C324) * C106 + (C327 - C326) * C119 +
            (C329 - C328) * C107 + (C331 - C330) * C120 + (C333 - C332) * C108 +
            (C50094 * C307 - C117 * C289) * C121 +
            (C50094 * C319 - C117 * C308) * C109) *
               C50110 * C50013 * C277 +
           ((C335 - C334) * C118 + (C337 - C336) * C106 + (C339 - C338) * C119 +
            (C341 - C340) * C107 + (C343 - C342) * C120 + (C345 - C344) * C108 +
            (C117 * C290 - C50094 * C309) * C121 +
            (C117 * C310 - C50094 * C320) * C109) *
               C50110 * C50013 * C278) *
              C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C50094 * C129 - C117 * C122) * C118 +
           (C50094 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
           (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
           C174 * C109) *
              C50110 * C50013 * C49997 * C113 +
          ((C152 - C151) * C118 + (C154 - C153) * C106 + (C156 - C155) * C119 +
           (C158 - C157) * C107 + C175 * C120 + C176 * C108 + C177 * C121 +
           C178 * C109) *
              C50110 * C50013 * C49997 * C114 +
          (C171 * C118 + C172 * C106 + C173 * C119 + C174 * C107 +
           (C164 - C163) * C120 + (C166 - C165) * C108 + (C167 - C168) * C121 +
           (C169 - C170) * C109) *
              C50110 * C50013 * C49997 * C115 +
          (C175 * C118 + C176 * C106 + C177 * C119 + C178 * C107 +
           (C168 - C167) * C120 + (C170 - C169) * C108 +
           (C117 * C128 - C50094 * C141) * C121 +
           (C117 * C142 - C50094 * C149) * C109) *
              C50110 * C50013 * C49997 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C118 +
            (C50094 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50110 * C443 +
           ((C117 * C446 - C50094 * C456) * C118 +
            (C117 * C457 - C50094 * C476) * C106 + (C487 - C488) * C119 +
            (C489 - C490) * C107 + (C491 - C492) * C120 + (C493 - C494) * C108 +
            (C495 - C496) * C121 + (C497 - C498) * C109) *
               C50110 * C444 +
           ((C50094 * C464 - C117 * C450) * C118 +
            (C50094 * C480 - C117 * C465) * C106 + (C499 - C500) * C119 +
            (C501 - C502) * C107 + (C503 - C504) * C120 + (C505 - C506) * C108 +
            (C507 - C508) * C121 + (C509 - C510) * C109) *
               C50110 * C445) *
              C49997 * C279 +
          (((C152 - C151) * C118 + (C154 - C153) * C106 + (C156 - C155) * C119 +
            (C158 - C157) * C107 + C175 * C120 + C176 * C108 + C177 * C121 +
            C178 * C109) *
               C50110 * C443 +
           ((C488 - C487) * C118 + (C490 - C489) * C106 + (C492 - C491) * C119 +
            (C494 - C493) * C107 + (C496 - C495) * C120 + (C498 - C497) * C108 +
            (C50094 * C472 - C117 * C454) * C121 +
            (C50094 * C484 - C117 * C473) * C109) *
               C50110 * C444 +
           ((C500 - C499) * C118 + (C502 - C501) * C106 + (C504 - C503) * C119 +
            (C506 - C505) * C107 + (C508 - C507) * C120 + (C510 - C509) * C108 +
            (C117 * C455 - C50094 * C474) * C121 +
            (C117 * C475 - C50094 * C485) * C109) *
               C50110 * C445) *
              C49997 * C49984)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
            C2263 * C299 - C2268 * C285) *
               C2269 +
           (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
            C2263 * C315 - C2268 * C300) *
               C2264 +
           (C2272 - C2273 + C2274 - C2275 + C2276 - C2277) * C2270 +
           (C2278 - C2279 + C2280 - C2281 + C2282 - C2283) * C49955) *
              C50110 * C50013 * C49997 * C113 +
          ((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C2269 +
           (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C2264 +
           (C2284 - C2285 + C2286 - C2287 + C2288 - C2289) * C2270 +
           (C2290 - C2291 + C2292 - C2293 + C2294 - C2295) * C49955) *
              C50110 * C50013 * C49997 * C114 +
          ((C2285 - C2284 + C2287 - C2286 + C2289 - C2288) * C2269 +
           (C2291 - C2290 + C2293 - C2292 + C2295 - C2294) * C2264 +
           (C2296 - C2297 + C2298 - C2299 + C2300 - C2301) * C2270 +
           (C2302 - C2303 + C2304 - C2305 + C2306 - C2307) * C49955) *
              C50110 * C50013 * C49997 * C115 +
          ((C2297 - C2296 + C2299 - C2298 + C2301 - C2300) * C2269 +
           (C2303 - C2302 + C2305 - C2304 + C2307 - C2306) * C2264 +
           (C2266 * C126 - C2261 * C137 + C2267 * C289 - C2262 * C307 +
            C2268 * C290 - C2263 * C309) *
               C2270 +
           (C2266 * C138 - C2261 * C147 + C2267 * C308 - C2262 * C319 +
            C2268 * C310 - C2263 * C320) *
               C49955) *
              C50110 * C50013 * C49997 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
             C2263 * C299 - C2268 * C285) *
                C2269 +
            (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
             C2263 * C315 - C2268 * C300) *
                C2264 +
            (C2272 - C2273 + C2274 - C2275 + C2276 - C2277) * C2270 +
            (C2278 - C2279 + C2280 - C2281 + C2282 - C2283) * C49955) *
               C50110 * C50013 * C276 +
           ((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
             C2268 * C1073 - C2263 * C1077) *
                C2269 +
            (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
             C2268 * C1078 - C2263 * C1085) *
                C2264 +
            (C2466 - C2467 + C2468 - C2469 + C2470 - C2471) * C2270 +
            (C2472 - C2473 + C2474 - C2475 + C2476 - C2477) * C49955) *
               C50110 * C50013 * C277 +
           ((C2261 * C299 - C2266 * C285 + C2262 * C1077 - C2267 * C1073 +
             C2263 * C2456 - C2268 * C2453) *
                C2269 +
            (C2261 * C315 - C2266 * C300 + C2262 * C1085 - C2267 * C1078 +
             C2263 * C2462 - C2268 * C2457) *
                C2264 +
            (C2478 - C2479 + C2480 - C2481 + C2482 - C2483) * C2270 +
            (C2484 - C2485 + C2486 - C2487 + C2488 - C2489) * C49955) *
               C50110 * C50013 * C278) *
              C279 +
          (((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C2269 +
            (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C2264 +
            (C2284 - C2285 + C2286 - C2287 + C2288 - C2289) * C2270 +
            (C2290 - C2291 + C2292 - C2293 + C2294 - C2295) * C49955) *
               C50110 * C50013 * C276 +
           ((C2467 - C2466 + C2469 - C2468 + C2471 - C2470) * C2269 +
            (C2473 - C2472 + C2475 - C2474 + C2477 - C2476) * C2264 +
            (C2261 * C295 - C2266 * C283 + C2262 * C303 - C2267 * C287 +
             C2263 * C1081 - C2268 * C1075) *
                C2270 +
            (C2261 * C313 - C2266 * C296 + C2262 * C317 - C2267 * C304 +
             C2263 * C1087 - C2268 * C1082) *
                C49955) *
               C50110 * C50013 * C277 +
           ((C2479 - C2478 + C2481 - C2480 + C2483 - C2482) * C2269 +
            (C2485 - C2484 + C2487 - C2486 + C2489 - C2488) * C2264 +
            (C2266 * C287 - C2261 * C303 + C2267 * C1075 - C2262 * C1081 +
             C2268 * C2455 - C2263 * C2460) *
                C2270 +
            (C2266 * C304 - C2261 * C317 + C2267 * C1082 - C2262 * C1087 +
             C2268 * C2461 - C2263 * C2464) *
                C49955) *
               C50110 * C50013 * C278) *
              C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
             C2263 * C299 - C2268 * C285) *
                C2269 +
            (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
             C2263 * C315 - C2268 * C300) *
                C2264 +
            (C2272 - C2273 + C2274 - C2275 + C2276 - C2277) * C2270 +
            (C2278 - C2279 + C2280 - C2281 + C2282 - C2283) * C49955) *
               C50110 * C443 +
           ((C2266 * C446 - C2261 * C456 + C2267 * C867 - C2262 * C872 +
             C2268 * C1534 - C2263 * C1538) *
                C2269 +
            (C2266 * C457 - C2261 * C476 + C2267 * C873 - C2262 * C882 +
             C2268 * C1539 - C2263 * C1546) *
                C2264 +
            (C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C2270 +
            (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49955) *
               C50110 * C444 +
           ((C2261 * C464 - C2266 * C450 + C2262 * C1191 - C2267 * C1187 +
             C2263 * C2638 - C2268 * C2635) *
                C2269 +
            (C2261 * C480 - C2266 * C465 + C2262 * C1199 - C2267 * C1192 +
             C2263 * C2644 - C2268 * C2639) *
                C2264 +
            (C2660 - C2661 + C2662 - C2663 + C2664 - C2665) * C2270 +
            (C2666 - C2667 + C2668 - C2669 + C2670 - C2671) * C49955) *
               C50110 * C445) *
              C49997 * C279 +
          (((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C2269 +
            (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C2264 +
            (C2284 - C2285 + C2286 - C2287 + C2288 - C2289) * C2270 +
            (C2290 - C2291 + C2292 - C2293 + C2294 - C2295) * C49955) *
               C50110 * C443 +
           ((C2649 - C2648 + C2651 - C2650 + C2653 - C2652) * C2269 +
            (C2655 - C2654 + C2657 - C2656 + C2659 - C2658) * C2264 +
            (C2261 * C460 - C2266 * C448 + C2262 * C876 - C2267 * C869 +
             C2263 * C1542 - C2268 * C1536) *
                C2270 +
            (C2261 * C478 - C2266 * C461 + C2262 * C884 - C2267 * C877 +
             C2263 * C1548 - C2268 * C1543) *
                C49955) *
               C50110 * C444 +
           ((C2661 - C2660 + C2663 - C2662 + C2665 - C2664) * C2269 +
            (C2667 - C2666 + C2669 - C2668 + C2671 - C2670) * C2264 +
            (C2266 * C452 - C2261 * C468 + C2267 * C1189 - C2262 * C1195 +
             C2268 * C2637 - C2263 * C2642) *
                C2270 +
            (C2266 * C469 - C2261 * C482 + C2267 * C1196 - C2262 * C1201 +
             C2268 * C2643 - C2263 * C2646) *
                C49955) *
               C50110 * C445) *
              C49997 * C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C118 +
            (C50094 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50110 * C50240 +
           ((C117 * C446 - C50094 * C456) * C118 +
            (C117 * C457 - C50094 * C476) * C106 + (C487 - C488) * C119 +
            (C489 - C490) * C107 + C730 * C120 + C731 * C108 + C732 * C121 +
            C733 * C109) *
               C50110 * C50077) *
              C49997 * C50282 +
          (((C152 - C151) * C118 + (C154 - C153) * C106 + (C156 - C155) * C119 +
            (C158 - C157) * C107 + C175 * C120 + C176 * C108 + C177 * C121 +
            C178 * C109) *
               C50110 * C50240 +
           ((C488 - C487) * C118 + (C490 - C489) * C106 + (C492 - C491) * C119 +
            (C494 - C493) * C107 + (C496 - C495) * C120 + (C498 - C497) * C108 +
            (C734 - C735) * C121 + (C736 - C737) * C109) *
               C50110 * C50077) *
              C49997 * C50283 +
          ((C171 * C118 + C172 * C106 + C173 * C119 + C174 * C107 +
            (C164 - C163) * C120 + (C166 - C165) * C108 + (C167 - C168) * C121 +
            (C169 - C170) * C109) *
               C50110 * C50240 +
           (C730 * C118 + C731 * C106 + C732 * C119 + C733 * C107 +
            (C735 - C734) * C120 + (C737 - C736) * C108 +
            (C117 * C725 - C50094 * C726) * C121 +
            (C117 * C727 - C50094 * C728) * C109) *
               C50110 * C50077) *
              C49997 * C612)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
             C2263 * C299 - C2268 * C285) *
                C2269 +
            (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
             C2263 * C315 - C2268 * C300) *
                C2264 +
            (C2272 - C2273 + C2274 - C2275 + C2276 - C2277) * C2270 +
            (C2278 - C2279 + C2280 - C2281 + C2282 - C2283) * C49955) *
               C50110 * C50240 +
           ((C2266 * C446 - C2261 * C456 + C2267 * C867 - C2262 * C872 +
             C2268 * C1534 - C2263 * C1538) *
                C2269 +
            (C2266 * C457 - C2261 * C476 + C2267 * C873 - C2262 * C882 +
             C2268 * C1539 - C2263 * C1546) *
                C2264 +
            (C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C2270 +
            (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49955) *
               C50110 * C50077) *
              C49997 * C50282 +
          (((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C2269 +
            (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C2264 +
            (C2284 - C2285 + C2286 - C2287 + C2288 - C2289) * C2270 +
            (C2290 - C2291 + C2292 - C2293 + C2294 - C2295) * C49955) *
               C50110 * C50240 +
           ((C2649 - C2648 + C2651 - C2650 + C2653 - C2652) * C2269 +
            (C2655 - C2654 + C2657 - C2656 + C2659 - C2658) * C2264 +
            (C2976 - C2977 + C2978 - C2979 + C2980 - C2981) * C2270 +
            (C2982 - C2983 + C2984 - C2985 + C2986 - C2987) * C49955) *
               C50110 * C50077) *
              C49997 * C50283 +
          (((C2285 - C2284 + C2287 - C2286 + C2289 - C2288) * C2269 +
            (C2291 - C2290 + C2293 - C2292 + C2295 - C2294) * C2264 +
            (C2296 - C2297 + C2298 - C2299 + C2300 - C2301) * C2270 +
            (C2302 - C2303 + C2304 - C2305 + C2306 - C2307) * C49955) *
               C50110 * C50240 +
           ((C2977 - C2976 + C2979 - C2978 + C2981 - C2980) * C2269 +
            (C2983 - C2982 + C2985 - C2984 + C2987 - C2986) * C2264 +
            (C2266 * C449 - C2261 * C462 + C2267 * C870 - C2262 * C878 +
             C2268 * C1537 - C2263 * C1544) *
                C2270 +
            (C2266 * C463 - C2261 * C479 + C2267 * C879 - C2262 * C885 +
             C2268 * C1545 - C2263 * C1549) *
                C49955) *
               C50110 * C50077) *
              C49997 * C612)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C50094 * C129 - C117 * C122) * C118 +
           (C50094 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
           (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
           C174 * C109) *
              C50110 * C50013 * C49997 * C113 +
          ((C152 - C151) * C118 + (C154 - C153) * C106 + (C156 - C155) * C119 +
           (C158 - C157) * C107 + C175 * C120 + C176 * C108 + C177 * C121 +
           C178 * C109) *
              C50110 * C50013 * C49997 * C114 +
          (C171 * C118 + C172 * C106 + C173 * C119 + C174 * C107 +
           (C164 - C163) * C120 + (C166 - C165) * C108 + (C167 - C168) * C121 +
           (C169 - C170) * C109) *
              C50110 * C50013 * C49997 * C115 +
          (C175 * C118 + C176 * C106 + C177 * C119 + C178 * C107 +
           (C168 - C167) * C120 + (C170 - C169) * C108 +
           (C117 * C128 - C50094 * C141) * C121 +
           (C117 * C142 - C50094 * C149) * C109) *
              C50110 * C50013 * C49997 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C118 +
            (C50094 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50110 * C50013 * C276 +
           ((C117 * C281 - C50094 * C291) * C118 +
            (C117 * C292 - C50094 * C311) * C106 + (C322 - C323) * C119 +
            (C324 - C325) * C107 + (C326 - C327) * C120 + (C328 - C329) * C108 +
            (C330 - C331) * C121 + (C332 - C333) * C109) *
               C50110 * C50013 * C277 +
           ((C50094 * C299 - C117 * C285) * C118 +
            (C50094 * C315 - C117 * C300) * C106 + (C334 - C335) * C119 +
            (C336 - C337) * C107 + (C338 - C339) * C120 + (C340 - C341) * C108 +
            (C342 - C343) * C121 + (C344 - C345) * C109) *
               C50110 * C50013 * C278) *
              C279 +
          (((C152 - C151) * C118 + (C154 - C153) * C106 + (C156 - C155) * C119 +
            (C158 - C157) * C107 + C175 * C120 + C176 * C108 + C177 * C121 +
            C178 * C109) *
               C50110 * C50013 * C276 +
           ((C323 - C322) * C118 + (C325 - C324) * C106 + (C327 - C326) * C119 +
            (C329 - C328) * C107 + (C331 - C330) * C120 + (C333 - C332) * C108 +
            (C50094 * C307 - C117 * C289) * C121 +
            (C50094 * C319 - C117 * C308) * C109) *
               C50110 * C50013 * C277 +
           ((C335 - C334) * C118 + (C337 - C336) * C106 + (C339 - C338) * C119 +
            (C341 - C340) * C107 + (C343 - C342) * C120 + (C345 - C344) * C108 +
            (C117 * C290 - C50094 * C309) * C121 +
            (C117 * C310 - C50094 * C320) * C109) *
               C50110 * C50013 * C278) *
              C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
            C2263 * C299 - C2268 * C285) *
               C2269 +
           (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
            C2263 * C315 - C2268 * C300) *
               C2264 +
           (C2272 - C2273 + C2274 - C2275 + C2276 - C2277) * C2270 +
           (C2278 - C2279 + C2280 - C2281 + C2282 - C2283) * C49955) *
              C50110 * C50013 * C49997 * C113 +
          ((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C2269 +
           (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C2264 +
           (C2284 - C2285 + C2286 - C2287 + C2288 - C2289) * C2270 +
           (C2290 - C2291 + C2292 - C2293 + C2294 - C2295) * C49955) *
              C50110 * C50013 * C49997 * C114 +
          ((C2285 - C2284 + C2287 - C2286 + C2289 - C2288) * C2269 +
           (C2291 - C2290 + C2293 - C2292 + C2295 - C2294) * C2264 +
           (C2296 - C2297 + C2298 - C2299 + C2300 - C2301) * C2270 +
           (C2302 - C2303 + C2304 - C2305 + C2306 - C2307) * C49955) *
              C50110 * C50013 * C49997 * C115 +
          ((C2297 - C2296 + C2299 - C2298 + C2301 - C2300) * C2269 +
           (C2303 - C2302 + C2305 - C2304 + C2307 - C2306) * C2264 +
           (C2266 * C126 - C2261 * C137 + C2267 * C289 - C2262 * C307 +
            C2268 * C290 - C2263 * C309) *
               C2270 +
           (C2266 * C138 - C2261 * C147 + C2267 * C308 - C2262 * C319 +
            C2268 * C310 - C2263 * C320) *
               C49955) *
              C50110 * C50013 * C49997 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
             C2263 * C299 - C2268 * C285) *
                C2269 +
            (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
             C2263 * C315 - C2268 * C300) *
                C2264 +
            (C2272 - C2273 + C2274 - C2275 + C2276 - C2277) * C2270 +
            (C2278 - C2279 + C2280 - C2281 + C2282 - C2283) * C49955) *
               C50110 * C50013 * C276 +
           ((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
             C2268 * C1073 - C2263 * C1077) *
                C2269 +
            (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
             C2268 * C1078 - C2263 * C1085) *
                C2264 +
            (C2466 - C2467 + C2468 - C2469 + C2470 - C2471) * C2270 +
            (C2472 - C2473 + C2474 - C2475 + C2476 - C2477) * C49955) *
               C50110 * C50013 * C277 +
           ((C2261 * C299 - C2266 * C285 + C2262 * C1077 - C2267 * C1073 +
             C2263 * C2456 - C2268 * C2453) *
                C2269 +
            (C2261 * C315 - C2266 * C300 + C2262 * C1085 - C2267 * C1078 +
             C2263 * C2462 - C2268 * C2457) *
                C2264 +
            (C2478 - C2479 + C2480 - C2481 + C2482 - C2483) * C2270 +
            (C2484 - C2485 + C2486 - C2487 + C2488 - C2489) * C49955) *
               C50110 * C50013 * C278) *
              C279 +
          (((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C2269 +
            (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C2264 +
            (C2284 - C2285 + C2286 - C2287 + C2288 - C2289) * C2270 +
            (C2290 - C2291 + C2292 - C2293 + C2294 - C2295) * C49955) *
               C50110 * C50013 * C276 +
           ((C2467 - C2466 + C2469 - C2468 + C2471 - C2470) * C2269 +
            (C2473 - C2472 + C2475 - C2474 + C2477 - C2476) * C2264 +
            (C2261 * C295 - C2266 * C283 + C2262 * C303 - C2267 * C287 +
             C2263 * C1081 - C2268 * C1075) *
                C2270 +
            (C2261 * C313 - C2266 * C296 + C2262 * C317 - C2267 * C304 +
             C2263 * C1087 - C2268 * C1082) *
                C49955) *
               C50110 * C50013 * C277 +
           ((C2479 - C2478 + C2481 - C2480 + C2483 - C2482) * C2269 +
            (C2485 - C2484 + C2487 - C2486 + C2489 - C2488) * C2264 +
            (C2266 * C287 - C2261 * C303 + C2267 * C1075 - C2262 * C1081 +
             C2268 * C2455 - C2263 * C2460) *
                C2270 +
            (C2266 * C304 - C2261 * C317 + C2267 * C1082 - C2262 * C1087 +
             C2268 * C2461 - C2263 * C2464) *
                C49955) *
               C50110 * C50013 * C278) *
              C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C118 +
            (C50094 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50110 * C50013 * C50284 +
           ((C117 * C281 - C50094 * C291) * C118 +
            (C117 * C292 - C50094 * C311) * C106 + (C322 - C323) * C119 +
            (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
            C621 * C109) *
               C50110 * C50013 * C50285 +
           ((C50094 * C299 - C117 * C285) * C118 +
            (C50094 * C315 - C117 * C300) * C106 + (C334 - C335) * C119 +
            (C336 - C337) * C107 + (C338 - C339) * C120 + (C340 - C341) * C108 +
            (C342 - C343) * C121 + (C344 - C345) * C109) *
               C50110 * C50013 * C1303) *
              C50231 +
          (((C152 - C151) * C118 + (C154 - C153) * C106 + (C156 - C155) * C119 +
            (C158 - C157) * C107 + C175 * C120 + C176 * C108 + C177 * C121 +
            C178 * C109) *
               C50110 * C50013 * C50284 +
           ((C323 - C322) * C118 + (C325 - C324) * C106 + (C327 - C326) * C119 +
            (C329 - C328) * C107 + (C331 - C330) * C120 + (C333 - C332) * C108 +
            (C622 - C623) * C121 + (C624 - C625) * C109) *
               C50110 * C50013 * C50285 +
           ((C335 - C334) * C118 + (C337 - C336) * C106 + (C339 - C338) * C119 +
            (C341 - C340) * C107 + (C343 - C342) * C120 + (C345 - C344) * C108 +
            (C117 * C290 - C50094 * C309) * C121 +
            (C117 * C310 - C50094 * C320) * C109) *
               C50110 * C50013 * C1303) *
              C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
             C2263 * C299 - C2268 * C285) *
                C2269 +
            (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
             C2263 * C315 - C2268 * C300) *
                C2264 +
            (C2272 - C2273 + C2274 - C2275 + C2276 - C2277) * C2270 +
            (C2278 - C2279 + C2280 - C2281 + C2282 - C2283) * C49955) *
               C50110 * C50013 * C50284 +
           ((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
             C2268 * C1073 - C2263 * C1077) *
                C2269 +
            (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
             C2268 * C1078 - C2263 * C1085) *
                C2264 +
            (C2466 - C2467 + C2468 - C2469 + C2470 - C2471) * C2270 +
            (C2472 - C2473 + C2474 - C2475 + C2476 - C2477) * C49955) *
               C50110 * C50013 * C50285 +
           ((C2261 * C299 - C2266 * C285 + C2262 * C1077 - C2267 * C1073 +
             C2263 * C2456 - C2268 * C2453) *
                C2269 +
            (C2261 * C315 - C2266 * C300 + C2262 * C1085 - C2267 * C1078 +
             C2263 * C2462 - C2268 * C2457) *
                C2264 +
            (C2478 - C2479 + C2480 - C2481 + C2482 - C2483) * C2270 +
            (C2484 - C2485 + C2486 - C2487 + C2488 - C2489) * C49955) *
               C50110 * C50013 * C1303) *
              C50231 +
          (((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C2269 +
            (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C2264 +
            (C2284 - C2285 + C2286 - C2287 + C2288 - C2289) * C2270 +
            (C2290 - C2291 + C2292 - C2293 + C2294 - C2295) * C49955) *
               C50110 * C50013 * C50284 +
           ((C2467 - C2466 + C2469 - C2468 + C2471 - C2470) * C2269 +
            (C2473 - C2472 + C2475 - C2474 + C2477 - C2476) * C2264 +
            (C2818 - C2819 + C2820 - C2821 + C2822 - C2823) * C2270 +
            (C2824 - C2825 + C2826 - C2827 + C2828 - C2829) * C49955) *
               C50110 * C50013 * C50285 +
           ((C2479 - C2478 + C2481 - C2480 + C2483 - C2482) * C2269 +
            (C2485 - C2484 + C2487 - C2486 + C2489 - C2488) * C2264 +
            (C2266 * C287 - C2261 * C303 + C2267 * C1075 - C2262 * C1081 +
             C2268 * C2455 - C2263 * C2460) *
                C2270 +
            (C2266 * C304 - C2261 * C317 + C2267 * C1082 - C2262 * C1087 +
             C2268 * C2461 - C2263 * C2464) *
                C49955) *
               C50110 * C50013 * C1303) *
              C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C118 +
            (C50094 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50110 * C50240 +
           ((C117 * C446 - C50094 * C456) * C118 +
            (C117 * C457 - C50094 * C476) * C106 + (C487 - C488) * C119 +
            (C489 - C490) * C107 + C730 * C120 + C731 * C108 + C732 * C121 +
            C733 * C109) *
               C50110 * C50077) *
              C50284 +
          (((C117 * C281 - C50094 * C291) * C118 +
            (C117 * C292 - C50094 * C311) * C106 + (C322 - C323) * C119 +
            (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
            C621 * C109) *
               C50110 * C50240 +
           ((C50094 * C872 - C117 * C867) * C118 +
            (C50094 * C882 - C117 * C873) * C106 + (C888 - C889) * C119 +
            (C890 - C891) * C107 + (C892 - C893) * C120 + (C894 - C895) * C108 +
            (C896 - C897) * C121 + (C898 - C899) * C109) *
               C50110 * C50077) *
              C50285 +
          (((C50094 * C299 - C117 * C285) * C118 +
            (C50094 * C315 - C117 * C300) * C106 + (C334 - C335) * C119 +
            (C336 - C337) * C107 + (C338 - C339) * C120 + (C340 - C341) * C108 +
            (C342 - C343) * C121 + (C344 - C345) * C109) *
               C50110 * C50240 +
           ((C117 * C1534 - C50094 * C1538) * C118 +
            (C117 * C1539 - C50094 * C1546) * C106 +
            (C117 * C1535 - C50094 * C1540) * C119 +
            (C117 * C1541 - C50094 * C1547) * C107 +
            (C117 * C1536 - C50094 * C1542) * C120 +
            (C117 * C1543 - C50094 * C1548) * C108 +
            (C117 * C1537 - C50094 * C1544) * C121 +
            (C117 * C1545 - C50094 * C1549) * C109) *
               C50110 * C50077) *
              C1303) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
             C2263 * C299 - C2268 * C285) *
                C2269 +
            (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
             C2263 * C315 - C2268 * C300) *
                C2264 +
            (C2272 - C2273 + C2274 - C2275 + C2276 - C2277) * C2270 +
            (C2278 - C2279 + C2280 - C2281 + C2282 - C2283) * C49955) *
               C50110 * C50240 +
           ((C2266 * C446 - C2261 * C456 + C2267 * C867 - C2262 * C872 +
             C2268 * C1534 - C2263 * C1538) *
                C2269 +
            (C2266 * C457 - C2261 * C476 + C2267 * C873 - C2262 * C882 +
             C2268 * C1539 - C2263 * C1546) *
                C2264 +
            (C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C2270 +
            (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49955) *
               C50110 * C50077) *
              C50284 +
          (((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
             C2268 * C1073 - C2263 * C1077) *
                C2269 +
            (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
             C2268 * C1078 - C2263 * C1085) *
                C2264 +
            (C2466 - C2467 + C2468 - C2469 + C2470 - C2471) * C2270 +
            (C2472 - C2473 + C2474 - C2475 + C2476 - C2477) * C49955) *
               C50110 * C50240 +
           ((C2261 * C872 - C2266 * C867 + C2262 * C1538 - C2267 * C1534 +
             C2263 * C3184 - C2268 * C3181) *
                C2269 +
            (C2261 * C882 - C2266 * C873 + C2262 * C1546 - C2267 * C1539 +
             C2263 * C3190 - C2268 * C3185) *
                C2264 +
            (C3194 - C3195 + C3196 - C3197 + C3198 - C3199) * C2270 +
            (C3200 - C3201 + C3202 - C3203 + C3204 - C3205) * C49955) *
               C50110 * C50077) *
              C50285 +
          (((C2261 * C299 - C2266 * C285 + C2262 * C1077 - C2267 * C1073 +
             C2263 * C2456 - C2268 * C2453) *
                C2269 +
            (C2261 * C315 - C2266 * C300 + C2262 * C1085 - C2267 * C1078 +
             C2263 * C2462 - C2268 * C2457) *
                C2264 +
            (C2478 - C2479 + C2480 - C2481 + C2482 - C2483) * C2270 +
            (C2484 - C2485 + C2486 - C2487 + C2488 - C2489) * C49955) *
               C50110 * C50240 +
           ((C2266 * C1534 - C2261 * C1538 + C2267 * C3181 - C2262 * C3184 +
             C2268 * C4097 - C2263 * C4099) *
                C2269 +
            (C2266 * C1539 - C2261 * C1546 + C2267 * C3185 - C2262 * C3190 +
             C2268 * C4100 - C2263 * C4103) *
                C2264 +
            (C2266 * C1535 - C2261 * C1540 + C2267 * C3182 - C2262 * C3186 +
             C2268 * C4098 - C2263 * C4101) *
                C2270 +
            (C2266 * C1541 - C2261 * C1547 + C2267 * C3187 - C2262 * C3191 +
             C2268 * C4102 - C2263 * C4104) *
                C49955) *
               C50110 * C50077) *
              C1303) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C50094 * C129 - C117 * C122) * C118 +
           (C50094 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
           (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
           C174 * C109) *
              C50110 * C50013 * C1068 +
          ((C117 * C281 - C50094 * C291) * C118 +
           (C117 * C292 - C50094 * C311) * C106 + (C322 - C323) * C119 +
           (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
           C621 * C109) *
              C50110 * C50013 * C1069 +
          ((C50094 * C299 - C117 * C285) * C118 +
           (C50094 * C315 - C117 * C300) * C106 + (C334 - C335) * C119 +
           (C336 - C337) * C107 + (C338 - C339) * C120 + (C340 - C341) * C108 +
           (C342 - C343) * C121 + (C344 - C345) * C109) *
              C50110 * C50013 * C1070 +
          ((C117 * C1073 - C50094 * C1077) * C118 +
           (C117 * C1078 - C50094 * C1085) * C106 +
           (C117 * C1074 - C50094 * C1079) * C119 +
           (C117 * C1080 - C50094 * C1086) * C107 +
           (C117 * C1075 - C50094 * C1081) * C120 +
           (C117 * C1082 - C50094 * C1087) * C108 +
           (C117 * C1076 - C50094 * C1083) * C121 +
           (C117 * C1084 - C50094 * C1088) * C109) *
              C50110 * C50013 * C1071) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C118 +
            (C50094 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50110 * C50013 * C997 +
           ((C117 * C281 - C50094 * C291) * C118 +
            (C117 * C292 - C50094 * C311) * C106 + (C322 - C323) * C119 +
            (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
            C621 * C109) *
               C50110 * C50013 * C50049) *
              C999 +
          (((C152 - C151) * C118 + (C154 - C153) * C106 + (C156 - C155) * C119 +
            (C158 - C157) * C107 + C175 * C120 + C176 * C108 + C177 * C121 +
            C178 * C109) *
               C50110 * C50013 * C997 +
           ((C323 - C322) * C118 + (C325 - C324) * C106 + (C327 - C326) * C119 +
            (C329 - C328) * C107 + (C331 - C330) * C120 + (C333 - C332) * C108 +
            (C622 - C623) * C121 + (C624 - C625) * C109) *
               C50110 * C50013 * C50049) *
              C1000 +
          ((C171 * C118 + C172 * C106 + C173 * C119 + C174 * C107 +
            (C164 - C163) * C120 + (C166 - C165) * C108 + (C167 - C168) * C121 +
            (C169 - C170) * C109) *
               C50110 * C50013 * C997 +
           (C618 * C118 + C619 * C106 + C620 * C119 + C621 * C107 +
            (C623 - C622) * C120 + (C625 - C624) * C108 +
            (C117 * C613 - C50094 * C614) * C121 +
            (C117 * C615 - C50094 * C616) * C109) *
               C50110 * C50013 * C50049) *
              C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C118 +
            (C50094 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50110 * C443 +
           ((C117 * C446 - C50094 * C456) * C118 +
            (C117 * C457 - C50094 * C476) * C106 + (C487 - C488) * C119 +
            (C489 - C490) * C107 + C730 * C120 + C731 * C108 + C732 * C121 +
            C733 * C109) *
               C50110 * C444 +
           ((C50094 * C464 - C117 * C450) * C118 +
            (C50094 * C480 - C117 * C465) * C106 + (C499 - C500) * C119 +
            (C501 - C502) * C107 + (C503 - C504) * C120 + (C505 - C506) * C108 +
            (C507 - C508) * C121 + (C509 - C510) * C109) *
               C50110 * C445) *
              C997 +
          (((C117 * C281 - C50094 * C291) * C118 +
            (C117 * C292 - C50094 * C311) * C106 + (C322 - C323) * C119 +
            (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
            C621 * C109) *
               C50110 * C443 +
           ((C50094 * C872 - C117 * C867) * C118 +
            (C50094 * C882 - C117 * C873) * C106 + (C888 - C889) * C119 +
            (C890 - C891) * C107 + (C892 - C893) * C120 + (C894 - C895) * C108 +
            (C896 - C897) * C121 + (C898 - C899) * C109) *
               C50110 * C444 +
           ((C117 * C1187 - C50094 * C1191) * C118 +
            (C117 * C1192 - C50094 * C1199) * C106 +
            (C117 * C1188 - C50094 * C1193) * C119 +
            (C117 * C1194 - C50094 * C1200) * C107 +
            (C117 * C1189 - C50094 * C1195) * C120 +
            (C117 * C1196 - C50094 * C1201) * C108 +
            (C117 * C1190 - C50094 * C1197) * C121 +
            (C117 * C1198 - C50094 * C1202) * C109) *
               C50110 * C445) *
              C50049) *
         C49978) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
             C2263 * C299 - C2268 * C285) *
                C2269 +
            (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
             C2263 * C315 - C2268 * C300) *
                C2264 +
            (C2272 - C2273 + C2274 - C2275 + C2276 - C2277) * C2270 +
            (C2278 - C2279 + C2280 - C2281 + C2282 - C2283) * C49955) *
               C50110 * C50013 * C997 +
           ((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
             C2268 * C1073 - C2263 * C1077) *
                C2269 +
            (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
             C2268 * C1078 - C2263 * C1085) *
                C2264 +
            (C2466 - C2467 + C2468 - C2469 + C2470 - C2471) * C2270 +
            (C2472 - C2473 + C2474 - C2475 + C2476 - C2477) * C49955) *
               C50110 * C50013 * C50049) *
              C999 +
          (((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C2269 +
            (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C2264 +
            (C2284 - C2285 + C2286 - C2287 + C2288 - C2289) * C2270 +
            (C2290 - C2291 + C2292 - C2293 + C2294 - C2295) * C49955) *
               C50110 * C50013 * C997 +
           ((C2467 - C2466 + C2469 - C2468 + C2471 - C2470) * C2269 +
            (C2473 - C2472 + C2475 - C2474 + C2477 - C2476) * C2264 +
            (C2818 - C2819 + C2820 - C2821 + C2822 - C2823) * C2270 +
            (C2824 - C2825 + C2826 - C2827 + C2828 - C2829) * C49955) *
               C50110 * C50013 * C50049) *
              C1000 +
          (((C2285 - C2284 + C2287 - C2286 + C2289 - C2288) * C2269 +
            (C2291 - C2290 + C2293 - C2292 + C2295 - C2294) * C2264 +
            (C2296 - C2297 + C2298 - C2299 + C2300 - C2301) * C2270 +
            (C2302 - C2303 + C2304 - C2305 + C2306 - C2307) * C49955) *
               C50110 * C50013 * C997 +
           ((C2819 - C2818 + C2821 - C2820 + C2823 - C2822) * C2269 +
            (C2825 - C2824 + C2827 - C2826 + C2829 - C2828) * C2264 +
            (C2266 * C284 - C2261 * C297 + C2267 * C288 - C2262 * C305 +
             C2268 * C1076 - C2263 * C1083) *
                C2270 +
            (C2266 * C298 - C2261 * C314 + C2267 * C306 - C2262 * C318 +
             C2268 * C1084 - C2263 * C1088) *
                C49955) *
               C50110 * C50013 * C50049) *
              C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
            C2263 * C299 - C2268 * C285) *
               C2269 +
           (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
            C2263 * C315 - C2268 * C300) *
               C2264 +
           (C2272 - C2273 + C2274 - C2275 + C2276 - C2277) * C2270 +
           (C2278 - C2279 + C2280 - C2281 + C2282 - C2283) * C49955) *
              C50110 * C50013 * C1068 +
          ((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
            C2268 * C1073 - C2263 * C1077) *
               C2269 +
           (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
            C2268 * C1078 - C2263 * C1085) *
               C2264 +
           (C2466 - C2467 + C2468 - C2469 + C2470 - C2471) * C2270 +
           (C2472 - C2473 + C2474 - C2475 + C2476 - C2477) * C49955) *
              C50110 * C50013 * C1069 +
          ((C2261 * C299 - C2266 * C285 + C2262 * C1077 - C2267 * C1073 +
            C2263 * C2456 - C2268 * C2453) *
               C2269 +
           (C2261 * C315 - C2266 * C300 + C2262 * C1085 - C2267 * C1078 +
            C2263 * C2462 - C2268 * C2457) *
               C2264 +
           (C2478 - C2479 + C2480 - C2481 + C2482 - C2483) * C2270 +
           (C2484 - C2485 + C2486 - C2487 + C2488 - C2489) * C49955) *
              C50110 * C50013 * C1070 +
          ((C2266 * C1073 - C2261 * C1077 + C2267 * C2453 - C2262 * C2456 +
            C2268 * C3449 - C2263 * C3451) *
               C2269 +
           (C2266 * C1078 - C2261 * C1085 + C2267 * C2457 - C2262 * C2462 +
            C2268 * C3452 - C2263 * C3455) *
               C2264 +
           (C2266 * C1074 - C2261 * C1079 + C2267 * C2454 - C2262 * C2458 +
            C2268 * C3450 - C2263 * C3453) *
               C2270 +
           (C2266 * C1080 - C2261 * C1086 + C2267 * C2459 - C2262 * C2463 +
            C2268 * C3454 - C2263 * C3456) *
               C49955) *
              C50110 * C50013 * C1071) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
             C2263 * C299 - C2268 * C285) *
                C2269 +
            (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
             C2263 * C315 - C2268 * C300) *
                C2264 +
            (C2272 - C2273 + C2274 - C2275 + C2276 - C2277) * C2270 +
            (C2278 - C2279 + C2280 - C2281 + C2282 - C2283) * C49955) *
               C50110 * C443 +
           ((C2266 * C446 - C2261 * C456 + C2267 * C867 - C2262 * C872 +
             C2268 * C1534 - C2263 * C1538) *
                C2269 +
            (C2266 * C457 - C2261 * C476 + C2267 * C873 - C2262 * C882 +
             C2268 * C1539 - C2263 * C1546) *
                C2264 +
            (C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C2270 +
            (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49955) *
               C50110 * C444 +
           ((C2261 * C464 - C2266 * C450 + C2262 * C1191 - C2267 * C1187 +
             C2263 * C2638 - C2268 * C2635) *
                C2269 +
            (C2261 * C480 - C2266 * C465 + C2262 * C1199 - C2267 * C1192 +
             C2263 * C2644 - C2268 * C2639) *
                C2264 +
            (C2660 - C2661 + C2662 - C2663 + C2664 - C2665) * C2270 +
            (C2666 - C2667 + C2668 - C2669 + C2670 - C2671) * C49955) *
               C50110 * C445) *
              C997 +
          (((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
             C2268 * C1073 - C2263 * C1077) *
                C2269 +
            (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
             C2268 * C1078 - C2263 * C1085) *
                C2264 +
            (C2466 - C2467 + C2468 - C2469 + C2470 - C2471) * C2270 +
            (C2472 - C2473 + C2474 - C2475 + C2476 - C2477) * C49955) *
               C50110 * C443 +
           ((C2261 * C872 - C2266 * C867 + C2262 * C1538 - C2267 * C1534 +
             C2263 * C3184 - C2268 * C3181) *
                C2269 +
            (C2261 * C882 - C2266 * C873 + C2262 * C1546 - C2267 * C1539 +
             C2263 * C3190 - C2268 * C3185) *
                C2264 +
            (C3194 - C3195 + C3196 - C3197 + C3198 - C3199) * C2270 +
            (C3200 - C3201 + C3202 - C3203 + C3204 - C3205) * C49955) *
               C50110 * C444 +
           ((C2266 * C1187 - C2261 * C1191 + C2267 * C2635 - C2262 * C2638 +
             C2268 * C3603 - C2263 * C3605) *
                C2269 +
            (C2266 * C1192 - C2261 * C1199 + C2267 * C2639 - C2262 * C2644 +
             C2268 * C3606 - C2263 * C3609) *
                C2264 +
            (C2266 * C1188 - C2261 * C1193 + C2267 * C2636 - C2262 * C2640 +
             C2268 * C3604 - C2263 * C3607) *
                C2270 +
            (C2266 * C1194 - C2261 * C1200 + C2267 * C2641 - C2262 * C2645 +
             C2268 * C3608 - C2263 * C3610) *
                C49955) *
               C50110 * C445) *
              C50049) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[68] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C50094 * C129 - C117 * C122) * C118 +
                     (C50094 * C143 - C117 * C130) * C106 +
                     (C151 - C152) * C119 + (C153 - C154) * C107 + C171 * C120 +
                     C172 * C108 + C173 * C121 + C174 * C109) *
                        C50110 * C50240 +
                    ((C117 * C446 - C50094 * C456) * C118 +
                     (C117 * C457 - C50094 * C476) * C106 +
                     (C487 - C488) * C119 + (C489 - C490) * C107 + C730 * C120 +
                     C731 * C108 + C732 * C121 + C733 * C109) *
                        C50110 * C50077) *
                       C997 +
                   (((C117 * C281 - C50094 * C291) * C118 +
                     (C117 * C292 - C50094 * C311) * C106 +
                     (C322 - C323) * C119 + (C324 - C325) * C107 + C618 * C120 +
                     C619 * C108 + C620 * C121 + C621 * C109) *
                        C50110 * C50240 +
                    ((C50094 * C872 - C117 * C867) * C118 +
                     (C50094 * C882 - C117 * C873) * C106 +
                     (C888 - C889) * C119 + (C890 - C891) * C107 +
                     (C892 - C893) * C120 + (C894 - C895) * C108 +
                     (C896 - C897) * C121 + (C898 - C899) * C109) *
                        C50110 * C50077) *
                       C50049) *
                      C50231 +
                  ((((C152 - C151) * C118 + (C154 - C153) * C106 +
                     (C156 - C155) * C119 + (C158 - C157) * C107 + C175 * C120 +
                     C176 * C108 + C177 * C121 + C178 * C109) *
                        C50110 * C50240 +
                    ((C488 - C487) * C118 + (C490 - C489) * C106 +
                     (C492 - C491) * C119 + (C494 - C493) * C107 +
                     (C496 - C495) * C120 + (C498 - C497) * C108 +
                     (C734 - C735) * C121 + (C736 - C737) * C109) *
                        C50110 * C50077) *
                       C997 +
                   (((C323 - C322) * C118 + (C325 - C324) * C106 +
                     (C327 - C326) * C119 + (C329 - C328) * C107 +
                     (C331 - C330) * C120 + (C333 - C332) * C108 +
                     (C622 - C623) * C121 + (C624 - C625) * C109) *
                        C50110 * C50240 +
                    ((C889 - C888) * C118 + (C891 - C890) * C106 +
                     (C893 - C892) * C119 + (C895 - C894) * C107 +
                     (C897 - C896) * C120 + (C899 - C898) * C108 +
                     (C117 * C871 - C50094 * C880) * C121 +
                     (C117 * C881 - C50094 * C886) * C109) *
                        C50110 * C50077) *
                       C50049) *
                      C49984)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C2261 * C129 - C2266 * C122 + C2262 * C291 -
                      C2267 * C281 + C2263 * C299 - C2268 * C285) *
                         C2269 +
                     (C2261 * C143 - C2266 * C130 + C2262 * C311 -
                      C2267 * C292 + C2263 * C315 - C2268 * C300) *
                         C2264 +
                     (C2272 - C2273 + C2274 - C2275 + C2276 - C2277) * C2270 +
                     (C2278 - C2279 + C2280 - C2281 + C2282 - C2283) * C49955) *
                        C50110 * C50240 +
                    ((C2266 * C446 - C2261 * C456 + C2267 * C867 -
                      C2262 * C872 + C2268 * C1534 - C2263 * C1538) *
                         C2269 +
                     (C2266 * C457 - C2261 * C476 + C2267 * C873 -
                      C2262 * C882 + C2268 * C1539 - C2263 * C1546) *
                         C2264 +
                     (C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C2270 +
                     (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49955) *
                        C50110 * C50077) *
                       C997 +
                   (((C2266 * C281 - C2261 * C291 + C2267 * C285 -
                      C2262 * C299 + C2268 * C1073 - C2263 * C1077) *
                         C2269 +
                     (C2266 * C292 - C2261 * C311 + C2267 * C300 -
                      C2262 * C315 + C2268 * C1078 - C2263 * C1085) *
                         C2264 +
                     (C2466 - C2467 + C2468 - C2469 + C2470 - C2471) * C2270 +
                     (C2472 - C2473 + C2474 - C2475 + C2476 - C2477) * C49955) *
                        C50110 * C50240 +
                    ((C2261 * C872 - C2266 * C867 + C2262 * C1538 -
                      C2267 * C1534 + C2263 * C3184 - C2268 * C3181) *
                         C2269 +
                     (C2261 * C882 - C2266 * C873 + C2262 * C1546 -
                      C2267 * C1539 + C2263 * C3190 - C2268 * C3185) *
                         C2264 +
                     (C3194 - C3195 + C3196 - C3197 + C3198 - C3199) * C2270 +
                     (C3200 - C3201 + C3202 - C3203 + C3204 - C3205) * C49955) *
                        C50110 * C50077) *
                       C50049) *
                      C50231 +
                  ((((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C2269 +
                     (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C2264 +
                     (C2284 - C2285 + C2286 - C2287 + C2288 - C2289) * C2270 +
                     (C2290 - C2291 + C2292 - C2293 + C2294 - C2295) * C49955) *
                        C50110 * C50240 +
                    ((C2649 - C2648 + C2651 - C2650 + C2653 - C2652) * C2269 +
                     (C2655 - C2654 + C2657 - C2656 + C2659 - C2658) * C2264 +
                     (C2976 - C2977 + C2978 - C2979 + C2980 - C2981) * C2270 +
                     (C2982 - C2983 + C2984 - C2985 + C2986 - C2987) * C49955) *
                        C50110 * C50077) *
                       C997 +
                   (((C2467 - C2466 + C2469 - C2468 + C2471 - C2470) * C2269 +
                     (C2473 - C2472 + C2475 - C2474 + C2477 - C2476) * C2264 +
                     (C2818 - C2819 + C2820 - C2821 + C2822 - C2823) * C2270 +
                     (C2824 - C2825 + C2826 - C2827 + C2828 - C2829) * C49955) *
                        C50110 * C50240 +
                    ((C3195 - C3194 + C3197 - C3196 + C3199 - C3198) * C2269 +
                     (C3201 - C3200 + C3203 - C3202 + C3205 - C3204) * C2264 +
                     (C2266 * C869 - C2261 * C876 + C2267 * C1536 -
                      C2262 * C1542 + C2268 * C3183 - C2263 * C3188) *
                         C2270 +
                     (C2266 * C877 - C2261 * C884 + C2267 * C1543 -
                      C2262 * C1548 + C2268 * C3189 - C2263 * C3192) *
                         C49955) *
                        C50110 * C50077) *
                       C50049) *
                      C49984)) /
                    (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C118 +
            (C50094 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50110 * C50013 * C997 +
           ((C117 * C281 - C50094 * C291) * C118 +
            (C117 * C292 - C50094 * C311) * C106 + (C322 - C323) * C119 +
            (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
            C621 * C109) *
               C50110 * C50013 * C50049) *
              C999 +
          (((C152 - C151) * C118 + (C154 - C153) * C106 + (C156 - C155) * C119 +
            (C158 - C157) * C107 + C175 * C120 + C176 * C108 + C177 * C121 +
            C178 * C109) *
               C50110 * C50013 * C997 +
           ((C323 - C322) * C118 + (C325 - C324) * C106 + (C327 - C326) * C119 +
            (C329 - C328) * C107 + (C331 - C330) * C120 + (C333 - C332) * C108 +
            (C622 - C623) * C121 + (C624 - C625) * C109) *
               C50110 * C50013 * C50049) *
              C1000 +
          ((C171 * C118 + C172 * C106 + C173 * C119 + C174 * C107 +
            (C164 - C163) * C120 + (C166 - C165) * C108 + (C167 - C168) * C121 +
            (C169 - C170) * C109) *
               C50110 * C50013 * C997 +
           (C618 * C118 + C619 * C106 + C620 * C119 + C621 * C107 +
            (C623 - C622) * C120 + (C625 - C624) * C108 +
            (C117 * C613 - C50094 * C614) * C121 +
            (C117 * C615 - C50094 * C616) * C109) *
               C50110 * C50013 * C50049) *
              C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C50094 * C129 - C117 * C122) * C118 +
           (C50094 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
           (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
           C174 * C109) *
              C50110 * C50013 * C1068 +
          ((C117 * C281 - C50094 * C291) * C118 +
           (C117 * C292 - C50094 * C311) * C106 + (C322 - C323) * C119 +
           (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
           C621 * C109) *
              C50110 * C50013 * C1069 +
          ((C50094 * C299 - C117 * C285) * C118 +
           (C50094 * C315 - C117 * C300) * C106 + (C334 - C335) * C119 +
           (C336 - C337) * C107 + (C338 - C339) * C120 + (C340 - C341) * C108 +
           (C342 - C343) * C121 + (C344 - C345) * C109) *
              C50110 * C50013 * C1070 +
          ((C117 * C1073 - C50094 * C1077) * C118 +
           (C117 * C1078 - C50094 * C1085) * C106 +
           (C117 * C1074 - C50094 * C1079) * C119 +
           (C117 * C1080 - C50094 * C1086) * C107 +
           (C117 * C1075 - C50094 * C1081) * C120 +
           (C117 * C1082 - C50094 * C1087) * C108 +
           (C117 * C1076 - C50094 * C1083) * C121 +
           (C117 * C1084 - C50094 * C1088) * C109) *
              C50110 * C50013 * C1071) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
             C2263 * C299 - C2268 * C285) *
                C2269 +
            (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
             C2263 * C315 - C2268 * C300) *
                C2264 +
            (C2272 - C2273 + C2274 - C2275 + C2276 - C2277) * C2270 +
            (C2278 - C2279 + C2280 - C2281 + C2282 - C2283) * C49955) *
               C50110 * C50013 * C997 +
           ((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
             C2268 * C1073 - C2263 * C1077) *
                C2269 +
            (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
             C2268 * C1078 - C2263 * C1085) *
                C2264 +
            (C2466 - C2467 + C2468 - C2469 + C2470 - C2471) * C2270 +
            (C2472 - C2473 + C2474 - C2475 + C2476 - C2477) * C49955) *
               C50110 * C50013 * C50049) *
              C999 +
          (((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C2269 +
            (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C2264 +
            (C2284 - C2285 + C2286 - C2287 + C2288 - C2289) * C2270 +
            (C2290 - C2291 + C2292 - C2293 + C2294 - C2295) * C49955) *
               C50110 * C50013 * C997 +
           ((C2467 - C2466 + C2469 - C2468 + C2471 - C2470) * C2269 +
            (C2473 - C2472 + C2475 - C2474 + C2477 - C2476) * C2264 +
            (C2818 - C2819 + C2820 - C2821 + C2822 - C2823) * C2270 +
            (C2824 - C2825 + C2826 - C2827 + C2828 - C2829) * C49955) *
               C50110 * C50013 * C50049) *
              C1000 +
          (((C2285 - C2284 + C2287 - C2286 + C2289 - C2288) * C2269 +
            (C2291 - C2290 + C2293 - C2292 + C2295 - C2294) * C2264 +
            (C2296 - C2297 + C2298 - C2299 + C2300 - C2301) * C2270 +
            (C2302 - C2303 + C2304 - C2305 + C2306 - C2307) * C49955) *
               C50110 * C50013 * C997 +
           ((C2819 - C2818 + C2821 - C2820 + C2823 - C2822) * C2269 +
            (C2825 - C2824 + C2827 - C2826 + C2829 - C2828) * C2264 +
            (C2266 * C284 - C2261 * C297 + C2267 * C288 - C2262 * C305 +
             C2268 * C1076 - C2263 * C1083) *
                C2270 +
            (C2266 * C298 - C2261 * C314 + C2267 * C306 - C2262 * C318 +
             C2268 * C1084 - C2263 * C1088) *
                C49955) *
               C50110 * C50013 * C50049) *
              C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
            C2263 * C299 - C2268 * C285) *
               C2269 +
           (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
            C2263 * C315 - C2268 * C300) *
               C2264 +
           (C2272 - C2273 + C2274 - C2275 + C2276 - C2277) * C2270 +
           (C2278 - C2279 + C2280 - C2281 + C2282 - C2283) * C49955) *
              C50110 * C50013 * C1068 +
          ((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
            C2268 * C1073 - C2263 * C1077) *
               C2269 +
           (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
            C2268 * C1078 - C2263 * C1085) *
               C2264 +
           (C2466 - C2467 + C2468 - C2469 + C2470 - C2471) * C2270 +
           (C2472 - C2473 + C2474 - C2475 + C2476 - C2477) * C49955) *
              C50110 * C50013 * C1069 +
          ((C2261 * C299 - C2266 * C285 + C2262 * C1077 - C2267 * C1073 +
            C2263 * C2456 - C2268 * C2453) *
               C2269 +
           (C2261 * C315 - C2266 * C300 + C2262 * C1085 - C2267 * C1078 +
            C2263 * C2462 - C2268 * C2457) *
               C2264 +
           (C2478 - C2479 + C2480 - C2481 + C2482 - C2483) * C2270 +
           (C2484 - C2485 + C2486 - C2487 + C2488 - C2489) * C49955) *
              C50110 * C50013 * C1070 +
          ((C2266 * C1073 - C2261 * C1077 + C2267 * C2453 - C2262 * C2456 +
            C2268 * C3449 - C2263 * C3451) *
               C2269 +
           (C2266 * C1078 - C2261 * C1085 + C2267 * C2457 - C2262 * C2462 +
            C2268 * C3452 - C2263 * C3455) *
               C2264 +
           (C2266 * C1074 - C2261 * C1079 + C2267 * C2454 - C2262 * C2458 +
            C2268 * C3450 - C2263 * C3453) *
               C2270 +
           (C2266 * C1080 - C2261 * C1086 + C2267 * C2459 - C2262 * C2463 +
            C2268 * C3454 - C2263 * C3456) *
               C49955) *
              C50110 * C50013 * C1071) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[70] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C50094 * C129 - C117 * C122) * C118 +
                     (C50094 * C143 - C117 * C130) * C106 +
                     (C151 - C152) * C119 + (C153 - C154) * C107 + C171 * C120 +
                     C172 * C108 + C173 * C121 + C174 * C109) *
                        C50110 * C1648 +
                    ((C117 * C446 - C50094 * C456) * C118 +
                     (C117 * C457 - C50094 * C476) * C106 +
                     (C487 - C488) * C119 + (C489 - C490) * C107 + C730 * C120 +
                     C731 * C108 + C732 * C121 + C733 * C109) *
                        C50110 * C50077) *
                       C50239 +
                   (((C117 * C281 - C50094 * C291) * C118 +
                     (C117 * C292 - C50094 * C311) * C106 +
                     (C322 - C323) * C119 + (C324 - C325) * C107 + C618 * C120 +
                     C619 * C108 + C620 * C121 + C621 * C109) *
                        C50110 * C1648 +
                    ((C50094 * C872 - C117 * C867) * C118 +
                     (C50094 * C882 - C117 * C873) * C106 +
                     (C888 - C889) * C119 + (C890 - C891) * C107 +
                     (C892 - C893) * C120 + (C894 - C895) * C108 +
                     (C896 - C897) * C121 + (C898 - C899) * C109) *
                        C50110 * C50077) *
                       C50049) *
                      C50231 +
                  ((((C152 - C151) * C118 + (C154 - C153) * C106 +
                     (C156 - C155) * C119 + (C158 - C157) * C107 + C175 * C120 +
                     C176 * C108 + C177 * C121 + C178 * C109) *
                        C50110 * C1648 +
                    ((C488 - C487) * C118 + (C490 - C489) * C106 +
                     (C492 - C491) * C119 + (C494 - C493) * C107 +
                     (C496 - C495) * C120 + (C498 - C497) * C108 +
                     (C734 - C735) * C121 + (C736 - C737) * C109) *
                        C50110 * C50077) *
                       C50239 +
                   (((C323 - C322) * C118 + (C325 - C324) * C106 +
                     (C327 - C326) * C119 + (C329 - C328) * C107 +
                     (C331 - C330) * C120 + (C333 - C332) * C108 +
                     (C622 - C623) * C121 + (C624 - C625) * C109) *
                        C50110 * C1648 +
                    ((C889 - C888) * C118 + (C891 - C890) * C106 +
                     (C893 - C892) * C119 + (C895 - C894) * C107 +
                     (C897 - C896) * C120 + (C899 - C898) * C108 +
                     (C117 * C871 - C50094 * C880) * C121 +
                     (C117 * C881 - C50094 * C886) * C109) *
                        C50110 * C50077) *
                       C50049) *
                      C49984)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C2261 * C129 - C2266 * C122 + C2262 * C291 -
                      C2267 * C281 + C2263 * C299 - C2268 * C285) *
                         C2269 +
                     (C2261 * C143 - C2266 * C130 + C2262 * C311 -
                      C2267 * C292 + C2263 * C315 - C2268 * C300) *
                         C2264 +
                     (C2272 - C2273 + C2274 - C2275 + C2276 - C2277) * C2270 +
                     (C2278 - C2279 + C2280 - C2281 + C2282 - C2283) * C49955) *
                        C50110 * C1648 +
                    ((C2266 * C446 - C2261 * C456 + C2267 * C867 -
                      C2262 * C872 + C2268 * C1534 - C2263 * C1538) *
                         C2269 +
                     (C2266 * C457 - C2261 * C476 + C2267 * C873 -
                      C2262 * C882 + C2268 * C1539 - C2263 * C1546) *
                         C2264 +
                     (C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C2270 +
                     (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49955) *
                        C50110 * C50077) *
                       C50239 +
                   (((C2266 * C281 - C2261 * C291 + C2267 * C285 -
                      C2262 * C299 + C2268 * C1073 - C2263 * C1077) *
                         C2269 +
                     (C2266 * C292 - C2261 * C311 + C2267 * C300 -
                      C2262 * C315 + C2268 * C1078 - C2263 * C1085) *
                         C2264 +
                     (C2466 - C2467 + C2468 - C2469 + C2470 - C2471) * C2270 +
                     (C2472 - C2473 + C2474 - C2475 + C2476 - C2477) * C49955) *
                        C50110 * C1648 +
                    ((C2261 * C872 - C2266 * C867 + C2262 * C1538 -
                      C2267 * C1534 + C2263 * C3184 - C2268 * C3181) *
                         C2269 +
                     (C2261 * C882 - C2266 * C873 + C2262 * C1546 -
                      C2267 * C1539 + C2263 * C3190 - C2268 * C3185) *
                         C2264 +
                     (C3194 - C3195 + C3196 - C3197 + C3198 - C3199) * C2270 +
                     (C3200 - C3201 + C3202 - C3203 + C3204 - C3205) * C49955) *
                        C50110 * C50077) *
                       C50049) *
                      C50231 +
                  ((((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C2269 +
                     (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C2264 +
                     (C2284 - C2285 + C2286 - C2287 + C2288 - C2289) * C2270 +
                     (C2290 - C2291 + C2292 - C2293 + C2294 - C2295) * C49955) *
                        C50110 * C1648 +
                    ((C2649 - C2648 + C2651 - C2650 + C2653 - C2652) * C2269 +
                     (C2655 - C2654 + C2657 - C2656 + C2659 - C2658) * C2264 +
                     (C2976 - C2977 + C2978 - C2979 + C2980 - C2981) * C2270 +
                     (C2982 - C2983 + C2984 - C2985 + C2986 - C2987) * C49955) *
                        C50110 * C50077) *
                       C50239 +
                   (((C2467 - C2466 + C2469 - C2468 + C2471 - C2470) * C2269 +
                     (C2473 - C2472 + C2475 - C2474 + C2477 - C2476) * C2264 +
                     (C2818 - C2819 + C2820 - C2821 + C2822 - C2823) * C2270 +
                     (C2824 - C2825 + C2826 - C2827 + C2828 - C2829) * C49955) *
                        C50110 * C1648 +
                    ((C3195 - C3194 + C3197 - C3196 + C3199 - C3198) * C2269 +
                     (C3201 - C3200 + C3203 - C3202 + C3205 - C3204) * C2264 +
                     (C2266 * C869 - C2261 * C876 + C2267 * C1536 -
                      C2262 * C1542 + C2268 * C3183 - C2263 * C3188) *
                         C2270 +
                     (C2266 * C877 - C2261 * C884 + C2267 * C1543 -
                      C2262 * C1548 + C2268 * C3189 - C2263 * C3192) *
                         C49955) *
                        C50110 * C50077) *
                       C50049) *
                      C49984)) /
                    (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C118 +
            (C50094 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50110 * C50286 +
           ((C117 * C446 - C50094 * C456) * C118 +
            (C117 * C457 - C50094 * C476) * C106 + (C487 - C488) * C119 +
            (C489 - C490) * C107 + C730 * C120 + C731 * C108 + C732 * C121 +
            C733 * C109) *
               C50110 * C50287 +
           ((C50094 * C464 - C117 * C450) * C118 +
            (C50094 * C480 - C117 * C465) * C106 + (C499 - C500) * C119 +
            (C501 - C502) * C107 + (C503 - C504) * C120 + (C505 - C506) * C108 +
            (C507 - C508) * C121 + (C509 - C510) * C109) *
               C50110 * C2064) *
              C50239 +
          (((C117 * C281 - C50094 * C291) * C118 +
            (C117 * C292 - C50094 * C311) * C106 + (C322 - C323) * C119 +
            (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
            C621 * C109) *
               C50110 * C50286 +
           ((C50094 * C872 - C117 * C867) * C118 +
            (C50094 * C882 - C117 * C873) * C106 + (C888 - C889) * C119 +
            (C890 - C891) * C107 + (C892 - C893) * C120 + (C894 - C895) * C108 +
            (C896 - C897) * C121 + (C898 - C899) * C109) *
               C50110 * C50287 +
           ((C117 * C1187 - C50094 * C1191) * C118 +
            (C117 * C1192 - C50094 * C1199) * C106 +
            (C117 * C1188 - C50094 * C1193) * C119 +
            (C117 * C1194 - C50094 * C1200) * C107 +
            (C117 * C1189 - C50094 * C1195) * C120 +
            (C117 * C1196 - C50094 * C1201) * C108 +
            (C117 * C1190 - C50094 * C1197) * C121 +
            (C117 * C1198 - C50094 * C1202) * C109) *
               C50110 * C2064) *
              C50049) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
             C2263 * C299 - C2268 * C285) *
                C2269 +
            (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
             C2263 * C315 - C2268 * C300) *
                C2264 +
            (C2272 - C2273 + C2274 - C2275 + C2276 - C2277) * C2270 +
            (C2278 - C2279 + C2280 - C2281 + C2282 - C2283) * C49955) *
               C50110 * C50286 +
           ((C2266 * C446 - C2261 * C456 + C2267 * C867 - C2262 * C872 +
             C2268 * C1534 - C2263 * C1538) *
                C2269 +
            (C2266 * C457 - C2261 * C476 + C2267 * C873 - C2262 * C882 +
             C2268 * C1539 - C2263 * C1546) *
                C2264 +
            (C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C2270 +
            (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49955) *
               C50110 * C50287 +
           ((C2261 * C464 - C2266 * C450 + C2262 * C1191 - C2267 * C1187 +
             C2263 * C2638 - C2268 * C2635) *
                C2269 +
            (C2261 * C480 - C2266 * C465 + C2262 * C1199 - C2267 * C1192 +
             C2263 * C2644 - C2268 * C2639) *
                C2264 +
            (C2660 - C2661 + C2662 - C2663 + C2664 - C2665) * C2270 +
            (C2666 - C2667 + C2668 - C2669 + C2670 - C2671) * C49955) *
               C50110 * C2064) *
              C50239 +
          (((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
             C2268 * C1073 - C2263 * C1077) *
                C2269 +
            (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
             C2268 * C1078 - C2263 * C1085) *
                C2264 +
            (C2466 - C2467 + C2468 - C2469 + C2470 - C2471) * C2270 +
            (C2472 - C2473 + C2474 - C2475 + C2476 - C2477) * C49955) *
               C50110 * C50286 +
           ((C2261 * C872 - C2266 * C867 + C2262 * C1538 - C2267 * C1534 +
             C2263 * C3184 - C2268 * C3181) *
                C2269 +
            (C2261 * C882 - C2266 * C873 + C2262 * C1546 - C2267 * C1539 +
             C2263 * C3190 - C2268 * C3185) *
                C2264 +
            (C3194 - C3195 + C3196 - C3197 + C3198 - C3199) * C2270 +
            (C3200 - C3201 + C3202 - C3203 + C3204 - C3205) * C49955) *
               C50110 * C50287 +
           ((C2266 * C1187 - C2261 * C1191 + C2267 * C2635 - C2262 * C2638 +
             C2268 * C3603 - C2263 * C3605) *
                C2269 +
            (C2266 * C1192 - C2261 * C1199 + C2267 * C2639 - C2262 * C2644 +
             C2268 * C3606 - C2263 * C3609) *
                C2264 +
            (C2266 * C1188 - C2261 * C1193 + C2267 * C2636 - C2262 * C2640 +
             C2268 * C3604 - C2263 * C3607) *
                C2270 +
            (C2266 * C1194 - C2261 * C1200 + C2267 * C2641 - C2262 * C2645 +
             C2268 * C3608 - C2263 * C3610) *
                C49955) *
               C50110 * C2064) *
              C50049) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C118 +
            (C50094 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50110 * C1648 +
           ((C117 * C446 - C50094 * C456) * C118 +
            (C117 * C457 - C50094 * C476) * C106 + (C487 - C488) * C119 +
            (C489 - C490) * C107 + C730 * C120 + C731 * C108 + C732 * C121 +
            C733 * C109) *
               C50110 * C50077) *
              C276 +
          (((C117 * C281 - C50094 * C291) * C118 +
            (C117 * C292 - C50094 * C311) * C106 + (C322 - C323) * C119 +
            (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
            C621 * C109) *
               C50110 * C1648 +
           ((C50094 * C872 - C117 * C867) * C118 +
            (C50094 * C882 - C117 * C873) * C106 + (C888 - C889) * C119 +
            (C890 - C891) * C107 + (C892 - C893) * C120 + (C894 - C895) * C108 +
            (C896 - C897) * C121 + (C898 - C899) * C109) *
               C50110 * C50077) *
              C277 +
          (((C50094 * C299 - C117 * C285) * C118 +
            (C50094 * C315 - C117 * C300) * C106 + (C334 - C335) * C119 +
            (C336 - C337) * C107 + (C338 - C339) * C120 + (C340 - C341) * C108 +
            (C342 - C343) * C121 + (C344 - C345) * C109) *
               C50110 * C1648 +
           ((C117 * C1534 - C50094 * C1538) * C118 +
            (C117 * C1539 - C50094 * C1546) * C106 +
            (C117 * C1535 - C50094 * C1540) * C119 +
            (C117 * C1541 - C50094 * C1547) * C107 +
            (C117 * C1536 - C50094 * C1542) * C120 +
            (C117 * C1543 - C50094 * C1548) * C108 +
            (C117 * C1537 - C50094 * C1544) * C121 +
            (C117 * C1545 - C50094 * C1549) * C109) *
               C50110 * C50077) *
              C278) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C118 +
            (C50094 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50110 * C1648 +
           ((C117 * C446 - C50094 * C456) * C118 +
            (C117 * C457 - C50094 * C476) * C106 + (C487 - C488) * C119 +
            (C489 - C490) * C107 + C730 * C120 + C731 * C108 + C732 * C121 +
            C733 * C109) *
               C50110 * C50077) *
              C49997 * C999 +
          (((C152 - C151) * C118 + (C154 - C153) * C106 + (C156 - C155) * C119 +
            (C158 - C157) * C107 + C175 * C120 + C176 * C108 + C177 * C121 +
            C178 * C109) *
               C50110 * C1648 +
           ((C488 - C487) * C118 + (C490 - C489) * C106 + (C492 - C491) * C119 +
            (C494 - C493) * C107 + (C496 - C495) * C120 + (C498 - C497) * C108 +
            (C734 - C735) * C121 + (C736 - C737) * C109) *
               C50110 * C50077) *
              C49997 * C1000 +
          ((C171 * C118 + C172 * C106 + C173 * C119 + C174 * C107 +
            (C164 - C163) * C120 + (C166 - C165) * C108 + (C167 - C168) * C121 +
            (C169 - C170) * C109) *
               C50110 * C1648 +
           (C730 * C118 + C731 * C106 + C732 * C119 + C733 * C107 +
            (C735 - C734) * C120 + (C737 - C736) * C108 +
            (C117 * C725 - C50094 * C726) * C121 +
            (C117 * C727 - C50094 * C728) * C109) *
               C50110 * C50077) *
              C49997 * C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C50094 * C129 - C117 * C122) * C118 +
           (C50094 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
           (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
           C174 * C109) *
              C50110 * C1814 +
          ((C117 * C446 - C50094 * C456) * C118 +
           (C117 * C457 - C50094 * C476) * C106 + (C487 - C488) * C119 +
           (C489 - C490) * C107 + C730 * C120 + C731 * C108 + C732 * C121 +
           C733 * C109) *
              C50110 * C1815 +
          ((C50094 * C464 - C117 * C450) * C118 +
           (C50094 * C480 - C117 * C465) * C106 + (C499 - C500) * C119 +
           (C501 - C502) * C107 + (C503 - C504) * C120 + (C505 - C506) * C108 +
           (C507 - C508) * C121 + (C509 - C510) * C109) *
              C50110 * C1816 +
          ((C117 * C1818 - C50094 * C1822) * C118 +
           (C117 * C1823 - C50094 * C1830) * C106 +
           (C117 * C1819 - C50094 * C1824) * C119 +
           (C117 * C1825 - C50094 * C1831) * C107 +
           (C117 * C1820 - C50094 * C1826) * C120 +
           (C117 * C1827 - C50094 * C1832) * C108 +
           (C117 * C1821 - C50094 * C1828) * C121 +
           (C117 * C1829 - C50094 * C1833) * C109) *
              C50110 * C1817) *
         C49997 * C49978) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
             C2263 * C299 - C2268 * C285) *
                C2269 +
            (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
             C2263 * C315 - C2268 * C300) *
                C2264 +
            (C2272 - C2273 + C2274 - C2275 + C2276 - C2277) * C2270 +
            (C2278 - C2279 + C2280 - C2281 + C2282 - C2283) * C49955) *
               C50110 * C1648 +
           ((C2266 * C446 - C2261 * C456 + C2267 * C867 - C2262 * C872 +
             C2268 * C1534 - C2263 * C1538) *
                C2269 +
            (C2266 * C457 - C2261 * C476 + C2267 * C873 - C2262 * C882 +
             C2268 * C1539 - C2263 * C1546) *
                C2264 +
            (C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C2270 +
            (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49955) *
               C50110 * C50077) *
              C49997 * C999 +
          (((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C2269 +
            (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C2264 +
            (C2284 - C2285 + C2286 - C2287 + C2288 - C2289) * C2270 +
            (C2290 - C2291 + C2292 - C2293 + C2294 - C2295) * C49955) *
               C50110 * C1648 +
           ((C2649 - C2648 + C2651 - C2650 + C2653 - C2652) * C2269 +
            (C2655 - C2654 + C2657 - C2656 + C2659 - C2658) * C2264 +
            (C2976 - C2977 + C2978 - C2979 + C2980 - C2981) * C2270 +
            (C2982 - C2983 + C2984 - C2985 + C2986 - C2987) * C49955) *
               C50110 * C50077) *
              C49997 * C1000 +
          (((C2285 - C2284 + C2287 - C2286 + C2289 - C2288) * C2269 +
            (C2291 - C2290 + C2293 - C2292 + C2295 - C2294) * C2264 +
            (C2296 - C2297 + C2298 - C2299 + C2300 - C2301) * C2270 +
            (C2302 - C2303 + C2304 - C2305 + C2306 - C2307) * C49955) *
               C50110 * C1648 +
           ((C2977 - C2976 + C2979 - C2978 + C2981 - C2980) * C2269 +
            (C2983 - C2982 + C2985 - C2984 + C2987 - C2986) * C2264 +
            (C2266 * C449 - C2261 * C462 + C2267 * C870 - C2262 * C878 +
             C2268 * C1537 - C2263 * C1544) *
                C2270 +
            (C2266 * C463 - C2261 * C479 + C2267 * C879 - C2262 * C885 +
             C2268 * C1545 - C2263 * C1549) *
                C49955) *
               C50110 * C50077) *
              C49997 * C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
             C2263 * C299 - C2268 * C285) *
                C2269 +
            (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
             C2263 * C315 - C2268 * C300) *
                C2264 +
            (C2272 - C2273 + C2274 - C2275 + C2276 - C2277) * C2270 +
            (C2278 - C2279 + C2280 - C2281 + C2282 - C2283) * C49955) *
               C50110 * C1648 +
           ((C2266 * C446 - C2261 * C456 + C2267 * C867 - C2262 * C872 +
             C2268 * C1534 - C2263 * C1538) *
                C2269 +
            (C2266 * C457 - C2261 * C476 + C2267 * C873 - C2262 * C882 +
             C2268 * C1539 - C2263 * C1546) *
                C2264 +
            (C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C2270 +
            (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49955) *
               C50110 * C50077) *
              C276 +
          (((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
             C2268 * C1073 - C2263 * C1077) *
                C2269 +
            (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
             C2268 * C1078 - C2263 * C1085) *
                C2264 +
            (C2466 - C2467 + C2468 - C2469 + C2470 - C2471) * C2270 +
            (C2472 - C2473 + C2474 - C2475 + C2476 - C2477) * C49955) *
               C50110 * C1648 +
           ((C2261 * C872 - C2266 * C867 + C2262 * C1538 - C2267 * C1534 +
             C2263 * C3184 - C2268 * C3181) *
                C2269 +
            (C2261 * C882 - C2266 * C873 + C2262 * C1546 - C2267 * C1539 +
             C2263 * C3190 - C2268 * C3185) *
                C2264 +
            (C3194 - C3195 + C3196 - C3197 + C3198 - C3199) * C2270 +
            (C3200 - C3201 + C3202 - C3203 + C3204 - C3205) * C49955) *
               C50110 * C50077) *
              C277 +
          (((C2261 * C299 - C2266 * C285 + C2262 * C1077 - C2267 * C1073 +
             C2263 * C2456 - C2268 * C2453) *
                C2269 +
            (C2261 * C315 - C2266 * C300 + C2262 * C1085 - C2267 * C1078 +
             C2263 * C2462 - C2268 * C2457) *
                C2264 +
            (C2478 - C2479 + C2480 - C2481 + C2482 - C2483) * C2270 +
            (C2484 - C2485 + C2486 - C2487 + C2488 - C2489) * C49955) *
               C50110 * C1648 +
           ((C2266 * C1534 - C2261 * C1538 + C2267 * C3181 - C2262 * C3184 +
             C2268 * C4097 - C2263 * C4099) *
                C2269 +
            (C2266 * C1539 - C2261 * C1546 + C2267 * C3185 - C2262 * C3190 +
             C2268 * C4100 - C2263 * C4103) *
                C2264 +
            (C2266 * C1535 - C2261 * C1540 + C2267 * C3182 - C2262 * C3186 +
             C2268 * C4098 - C2263 * C4101) *
                C2270 +
            (C2266 * C1541 - C2261 * C1547 + C2267 * C3187 - C2262 * C3191 +
             C2268 * C4102 - C2263 * C4104) *
                C49955) *
               C50110 * C50077) *
              C278) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
            C2263 * C299 - C2268 * C285) *
               C2269 +
           (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
            C2263 * C315 - C2268 * C300) *
               C2264 +
           (C2272 - C2273 + C2274 - C2275 + C2276 - C2277) * C2270 +
           (C2278 - C2279 + C2280 - C2281 + C2282 - C2283) * C49955) *
              C50110 * C1814 +
          ((C2266 * C446 - C2261 * C456 + C2267 * C867 - C2262 * C872 +
            C2268 * C1534 - C2263 * C1538) *
               C2269 +
           (C2266 * C457 - C2261 * C476 + C2267 * C873 - C2262 * C882 +
            C2268 * C1539 - C2263 * C1546) *
               C2264 +
           (C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C2270 +
           (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49955) *
              C50110 * C1815 +
          ((C2261 * C464 - C2266 * C450 + C2262 * C1191 - C2267 * C1187 +
            C2263 * C2638 - C2268 * C2635) *
               C2269 +
           (C2261 * C480 - C2266 * C465 + C2262 * C1199 - C2267 * C1192 +
            C2263 * C2644 - C2268 * C2639) *
               C2264 +
           (C2660 - C2661 + C2662 - C2663 + C2664 - C2665) * C2270 +
           (C2666 - C2667 + C2668 - C2669 + C2670 - C2671) * C49955) *
              C50110 * C1816 +
          ((C2266 * C1818 - C2261 * C1822 + C2267 * C4495 - C2262 * C4499 +
            C2268 * C4496 - C2263 * C4500) *
               C2269 +
           (C2266 * C1823 - C2261 * C1830 + C2267 * C4501 - C2262 * C4507 +
            C2268 * C4502 - C2263 * C4508) *
               C2264 +
           (C2266 * C1819 - C2261 * C1824 + C2267 * C4497 - C2262 * C4503 +
            C2268 * C4498 - C2263 * C4504) *
               C2270 +
           (C2266 * C1825 - C2261 * C1831 + C2267 * C4505 - C2262 * C4509 +
            C2268 * C4506 - C2263 * C4510) *
               C49955) *
              C50110 * C1817) *
         C49997 * C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C118 +
            (C50094 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50110 * C50286 +
           ((C117 * C446 - C50094 * C456) * C118 +
            (C117 * C457 - C50094 * C476) * C106 + (C487 - C488) * C119 +
            (C489 - C490) * C107 + C730 * C120 + C731 * C108 + C732 * C121 +
            C733 * C109) *
               C50110 * C50287 +
           ((C50094 * C464 - C117 * C450) * C118 +
            (C50094 * C480 - C117 * C465) * C106 + (C499 - C500) * C119 +
            (C501 - C502) * C107 + (C503 - C504) * C120 + (C505 - C506) * C108 +
            (C507 - C508) * C121 + (C509 - C510) * C109) *
               C50110 * C2064) *
              C49997 * C50231 +
          (((C152 - C151) * C118 + (C154 - C153) * C106 + (C156 - C155) * C119 +
            (C158 - C157) * C107 + C175 * C120 + C176 * C108 + C177 * C121 +
            C178 * C109) *
               C50110 * C50286 +
           ((C488 - C487) * C118 + (C490 - C489) * C106 + (C492 - C491) * C119 +
            (C494 - C493) * C107 + (C496 - C495) * C120 + (C498 - C497) * C108 +
            (C734 - C735) * C121 + (C736 - C737) * C109) *
               C50110 * C50287 +
           ((C500 - C499) * C118 + (C502 - C501) * C106 + (C504 - C503) * C119 +
            (C506 - C505) * C107 + (C508 - C507) * C120 + (C510 - C509) * C108 +
            (C117 * C455 - C50094 * C474) * C121 +
            (C117 * C475 - C50094 * C485) * C109) *
               C50110 * C2064) *
              C49997 * C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
             C2263 * C299 - C2268 * C285) *
                C2269 +
            (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
             C2263 * C315 - C2268 * C300) *
                C2264 +
            (C2272 - C2273 + C2274 - C2275 + C2276 - C2277) * C2270 +
            (C2278 - C2279 + C2280 - C2281 + C2282 - C2283) * C49955) *
               C50110 * C50286 +
           ((C2266 * C446 - C2261 * C456 + C2267 * C867 - C2262 * C872 +
             C2268 * C1534 - C2263 * C1538) *
                C2269 +
            (C2266 * C457 - C2261 * C476 + C2267 * C873 - C2262 * C882 +
             C2268 * C1539 - C2263 * C1546) *
                C2264 +
            (C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C2270 +
            (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49955) *
               C50110 * C50287 +
           ((C2261 * C464 - C2266 * C450 + C2262 * C1191 - C2267 * C1187 +
             C2263 * C2638 - C2268 * C2635) *
                C2269 +
            (C2261 * C480 - C2266 * C465 + C2262 * C1199 - C2267 * C1192 +
             C2263 * C2644 - C2268 * C2639) *
                C2264 +
            (C2660 - C2661 + C2662 - C2663 + C2664 - C2665) * C2270 +
            (C2666 - C2667 + C2668 - C2669 + C2670 - C2671) * C49955) *
               C50110 * C2064) *
              C49997 * C50231 +
          (((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C2269 +
            (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C2264 +
            (C2284 - C2285 + C2286 - C2287 + C2288 - C2289) * C2270 +
            (C2290 - C2291 + C2292 - C2293 + C2294 - C2295) * C49955) *
               C50110 * C50286 +
           ((C2649 - C2648 + C2651 - C2650 + C2653 - C2652) * C2269 +
            (C2655 - C2654 + C2657 - C2656 + C2659 - C2658) * C2264 +
            (C2976 - C2977 + C2978 - C2979 + C2980 - C2981) * C2270 +
            (C2982 - C2983 + C2984 - C2985 + C2986 - C2987) * C49955) *
               C50110 * C50287 +
           ((C2661 - C2660 + C2663 - C2662 + C2665 - C2664) * C2269 +
            (C2667 - C2666 + C2669 - C2668 + C2671 - C2670) * C2264 +
            (C2266 * C452 - C2261 * C468 + C2267 * C1189 - C2262 * C1195 +
             C2268 * C2637 - C2263 * C2642) *
                C2270 +
            (C2266 * C469 - C2261 * C482 + C2267 * C1196 - C2262 * C1201 +
             C2268 * C2643 - C2263 * C2646) *
                C49955) *
               C50110 * C2064) *
              C49997 * C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C118 +
            (C50094 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50110 * C1648 +
           ((C117 * C446 - C50094 * C456) * C118 +
            (C117 * C457 - C50094 * C476) * C106 + (C487 - C488) * C119 +
            (C489 - C490) * C107 + C730 * C120 + C731 * C108 + C732 * C121 +
            C733 * C109) *
               C50110 * C50077) *
              C49997 * C999 +
          (((C152 - C151) * C118 + (C154 - C153) * C106 + (C156 - C155) * C119 +
            (C158 - C157) * C107 + C175 * C120 + C176 * C108 + C177 * C121 +
            C178 * C109) *
               C50110 * C1648 +
           ((C488 - C487) * C118 + (C490 - C489) * C106 + (C492 - C491) * C119 +
            (C494 - C493) * C107 + (C496 - C495) * C120 + (C498 - C497) * C108 +
            (C734 - C735) * C121 + (C736 - C737) * C109) *
               C50110 * C50077) *
              C49997 * C1000 +
          ((C171 * C118 + C172 * C106 + C173 * C119 + C174 * C107 +
            (C164 - C163) * C120 + (C166 - C165) * C108 + (C167 - C168) * C121 +
            (C169 - C170) * C109) *
               C50110 * C1648 +
           (C730 * C118 + C731 * C106 + C732 * C119 + C733 * C107 +
            (C735 - C734) * C120 + (C737 - C736) * C108 +
            (C117 * C725 - C50094 * C726) * C121 +
            (C117 * C727 - C50094 * C728) * C109) *
               C50110 * C50077) *
              C49997 * C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C118 +
            (C50094 * C143 - C117 * C130) * C106 + (C151 - C152) * C119 +
            (C153 - C154) * C107 + C171 * C120 + C172 * C108 + C173 * C121 +
            C174 * C109) *
               C50110 * C1648 +
           ((C117 * C446 - C50094 * C456) * C118 +
            (C117 * C457 - C50094 * C476) * C106 + (C487 - C488) * C119 +
            (C489 - C490) * C107 + C730 * C120 + C731 * C108 + C732 * C121 +
            C733 * C109) *
               C50110 * C50077) *
              C276 +
          (((C117 * C281 - C50094 * C291) * C118 +
            (C117 * C292 - C50094 * C311) * C106 + (C322 - C323) * C119 +
            (C324 - C325) * C107 + C618 * C120 + C619 * C108 + C620 * C121 +
            C621 * C109) *
               C50110 * C1648 +
           ((C50094 * C872 - C117 * C867) * C118 +
            (C50094 * C882 - C117 * C873) * C106 + (C888 - C889) * C119 +
            (C890 - C891) * C107 + (C892 - C893) * C120 + (C894 - C895) * C108 +
            (C896 - C897) * C121 + (C898 - C899) * C109) *
               C50110 * C50077) *
              C277 +
          (((C50094 * C299 - C117 * C285) * C118 +
            (C50094 * C315 - C117 * C300) * C106 + (C334 - C335) * C119 +
            (C336 - C337) * C107 + (C338 - C339) * C120 + (C340 - C341) * C108 +
            (C342 - C343) * C121 + (C344 - C345) * C109) *
               C50110 * C1648 +
           ((C117 * C1534 - C50094 * C1538) * C118 +
            (C117 * C1539 - C50094 * C1546) * C106 +
            (C117 * C1535 - C50094 * C1540) * C119 +
            (C117 * C1541 - C50094 * C1547) * C107 +
            (C117 * C1536 - C50094 * C1542) * C120 +
            (C117 * C1543 - C50094 * C1548) * C108 +
            (C117 * C1537 - C50094 * C1544) * C121 +
            (C117 * C1545 - C50094 * C1549) * C109) *
               C50110 * C50077) *
              C278) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
             C2263 * C299 - C2268 * C285) *
                C2269 +
            (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
             C2263 * C315 - C2268 * C300) *
                C2264 +
            (C2272 - C2273 + C2274 - C2275 + C2276 - C2277) * C2270 +
            (C2278 - C2279 + C2280 - C2281 + C2282 - C2283) * C49955) *
               C50110 * C1648 +
           ((C2266 * C446 - C2261 * C456 + C2267 * C867 - C2262 * C872 +
             C2268 * C1534 - C2263 * C1538) *
                C2269 +
            (C2266 * C457 - C2261 * C476 + C2267 * C873 - C2262 * C882 +
             C2268 * C1539 - C2263 * C1546) *
                C2264 +
            (C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C2270 +
            (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49955) *
               C50110 * C50077) *
              C49997 * C999 +
          (((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C2269 +
            (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C2264 +
            (C2284 - C2285 + C2286 - C2287 + C2288 - C2289) * C2270 +
            (C2290 - C2291 + C2292 - C2293 + C2294 - C2295) * C49955) *
               C50110 * C1648 +
           ((C2649 - C2648 + C2651 - C2650 + C2653 - C2652) * C2269 +
            (C2655 - C2654 + C2657 - C2656 + C2659 - C2658) * C2264 +
            (C2976 - C2977 + C2978 - C2979 + C2980 - C2981) * C2270 +
            (C2982 - C2983 + C2984 - C2985 + C2986 - C2987) * C49955) *
               C50110 * C50077) *
              C49997 * C1000 +
          (((C2285 - C2284 + C2287 - C2286 + C2289 - C2288) * C2269 +
            (C2291 - C2290 + C2293 - C2292 + C2295 - C2294) * C2264 +
            (C2296 - C2297 + C2298 - C2299 + C2300 - C2301) * C2270 +
            (C2302 - C2303 + C2304 - C2305 + C2306 - C2307) * C49955) *
               C50110 * C1648 +
           ((C2977 - C2976 + C2979 - C2978 + C2981 - C2980) * C2269 +
            (C2983 - C2982 + C2985 - C2984 + C2987 - C2986) * C2264 +
            (C2266 * C449 - C2261 * C462 + C2267 * C870 - C2262 * C878 +
             C2268 * C1537 - C2263 * C1544) *
                C2270 +
            (C2266 * C463 - C2261 * C479 + C2267 * C879 - C2262 * C885 +
             C2268 * C1545 - C2263 * C1549) *
                C49955) *
               C50110 * C50077) *
              C49997 * C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
             C2263 * C299 - C2268 * C285) *
                C2269 +
            (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
             C2263 * C315 - C2268 * C300) *
                C2264 +
            (C2272 - C2273 + C2274 - C2275 + C2276 - C2277) * C2270 +
            (C2278 - C2279 + C2280 - C2281 + C2282 - C2283) * C49955) *
               C50110 * C1648 +
           ((C2266 * C446 - C2261 * C456 + C2267 * C867 - C2262 * C872 +
             C2268 * C1534 - C2263 * C1538) *
                C2269 +
            (C2266 * C457 - C2261 * C476 + C2267 * C873 - C2262 * C882 +
             C2268 * C1539 - C2263 * C1546) *
                C2264 +
            (C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C2270 +
            (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49955) *
               C50110 * C50077) *
              C276 +
          (((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
             C2268 * C1073 - C2263 * C1077) *
                C2269 +
            (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
             C2268 * C1078 - C2263 * C1085) *
                C2264 +
            (C2466 - C2467 + C2468 - C2469 + C2470 - C2471) * C2270 +
            (C2472 - C2473 + C2474 - C2475 + C2476 - C2477) * C49955) *
               C50110 * C1648 +
           ((C2261 * C872 - C2266 * C867 + C2262 * C1538 - C2267 * C1534 +
             C2263 * C3184 - C2268 * C3181) *
                C2269 +
            (C2261 * C882 - C2266 * C873 + C2262 * C1546 - C2267 * C1539 +
             C2263 * C3190 - C2268 * C3185) *
                C2264 +
            (C3194 - C3195 + C3196 - C3197 + C3198 - C3199) * C2270 +
            (C3200 - C3201 + C3202 - C3203 + C3204 - C3205) * C49955) *
               C50110 * C50077) *
              C277 +
          (((C2261 * C299 - C2266 * C285 + C2262 * C1077 - C2267 * C1073 +
             C2263 * C2456 - C2268 * C2453) *
                C2269 +
            (C2261 * C315 - C2266 * C300 + C2262 * C1085 - C2267 * C1078 +
             C2263 * C2462 - C2268 * C2457) *
                C2264 +
            (C2478 - C2479 + C2480 - C2481 + C2482 - C2483) * C2270 +
            (C2484 - C2485 + C2486 - C2487 + C2488 - C2489) * C49955) *
               C50110 * C1648 +
           ((C2266 * C1534 - C2261 * C1538 + C2267 * C3181 - C2262 * C3184 +
             C2268 * C4097 - C2263 * C4099) *
                C2269 +
            (C2266 * C1539 - C2261 * C1546 + C2267 * C3185 - C2262 * C3190 +
             C2268 * C4100 - C2263 * C4103) *
                C2264 +
            (C2266 * C1535 - C2261 * C1540 + C2267 * C3182 - C2262 * C3186 +
             C2268 * C4098 - C2263 * C4101) *
                C2270 +
            (C2266 * C1541 - C2261 * C1547 + C2267 * C3187 - C2262 * C3191 +
             C2268 * C4102 - C2263 * C4104) *
                C49955) *
               C50110 * C50077) *
              C278) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50288 * C129 - C24267 * C122 + C50289 * C291 - C24268 * C281 +
             C24264 * C299 - C24269 * C285) *
                C49175 +
            (C50288 * C143 - C24267 * C130 + C50289 * C311 - C24268 * C292 +
             C24264 * C315 - C24269 * C300) *
                C50224 +
            (C24273 - C24274 + C24275 - C24276 + C24277 - C24278) * C49168 +
            (C24279 - C24280 + C24281 - C24282 + C24283 - C24284) * C49955) *
               C50110 * C50013 * C50239 +
           ((C24267 * C281 - C50288 * C291 + C24268 * C285 - C50289 * C299 +
             C24269 * C1073 - C24264 * C1077) *
                C49175 +
            (C24267 * C292 - C50288 * C311 + C24268 * C300 - C50289 * C315 +
             C24269 * C1078 - C24264 * C1085) *
                C50224 +
            (C24455 - C24456 + C24457 - C24458 + C24459 - C24460) * C49168 +
            (C24461 - C24462 + C24463 - C24464 + C24465 - C24466) * C49955) *
               C50110 * C50013 * C50049) *
              C50282 +
          (((C24274 - C24273 + C24276 - C24275 + C24278 - C24277) * C49175 +
            (C24280 - C24279 + C24282 - C24281 + C24284 - C24283) * C50224 +
            (C24285 - C24286 + C24287 - C24288 + C24289 - C24290) * C49168 +
            (C24291 - C24292 + C24293 - C24294 + C24295 - C24296) * C49955) *
               C50110 * C50013 * C50239 +
           ((C24456 - C24455 + C24458 - C24457 + C24460 - C24459) * C49175 +
            (C24462 - C24461 + C24464 - C24463 + C24466 - C24465) * C50224 +
            (C24795 - C24796 + C24797 - C24798 + C24799 - C24800) * C49168 +
            (C24801 - C24802 + C24803 - C24804 + C24805 - C24806) * C49955) *
               C50110 * C50013 * C50049) *
              C50283 +
          (((C24286 - C24285 + C24288 - C24287 + C24290 - C24289) * C49175 +
            (C24292 - C24291 + C24294 - C24293 + C24296 - C24295) * C50224 +
            (C24297 - C24298 + C24299 - C24300 + C24301 - C24302) * C49168 +
            (C24303 - C24304 + C24305 - C24306 + C24307 - C24308) * C49955) *
               C50110 * C50013 * C50239 +
           ((C24796 - C24795 + C24798 - C24797 + C24800 - C24799) * C49175 +
            (C24802 - C24801 + C24804 - C24803 + C24806 - C24805) * C50224 +
            (C24267 * C284 - C50288 * C297 + C24268 * C288 - C50289 * C305 +
             C24269 * C1076 - C24264 * C1083) *
                C49168 +
            (C24267 * C298 - C50288 * C314 + C24268 * C306 - C50289 * C318 +
             C24269 * C1084 - C24264 * C1088) *
                C49955) *
               C50110 * C50013 * C50049) *
              C612)) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50288 * C129 - C24267 * C122 + C50289 * C291 - C24268 * C281 +
              C24264 * C299 - C24269 * C285) *
                 C49175 +
             (C50288 * C143 - C24267 * C130 + C50289 * C311 - C24268 * C292 +
              C24264 * C315 - C24269 * C300) *
                 C50224 +
             (C24273 - C24274 + C24275 - C24276 + C24277 - C24278) * C49168 +
             (C24279 - C24280 + C24281 - C24282 + C24283 - C24284) * C49955) *
                C50110 * C50240 +
            ((C24267 * C446 - C50288 * C456 + C24268 * C867 - C50289 * C872 +
              C24269 * C1534 - C24264 * C1538) *
                 C49175 +
             (C24267 * C457 - C50288 * C476 + C24268 * C873 - C50289 * C882 +
              C24269 * C1539 - C24264 * C1546) *
                 C50224 +
             (C24625 - C24626 + C24627 - C24628 + C24629 - C24630) * C49168 +
             (C24631 - C24632 + C24633 - C24634 + C24635 - C24636) * C49955) *
                C50110 * C50077) *
               C50239 +
           (((C24267 * C281 - C50288 * C291 + C24268 * C285 - C50289 * C299 +
              C24269 * C1073 - C24264 * C1077) *
                 C49175 +
             (C24267 * C292 - C50288 * C311 + C24268 * C300 - C50289 * C315 +
              C24269 * C1078 - C24264 * C1085) *
                 C50224 +
             (C24455 - C24456 + C24457 - C24458 + C24459 - C24460) * C49168 +
             (C24461 - C24462 + C24463 - C24464 + C24465 - C24466) * C49955) *
                C50110 * C50240 +
            ((C50288 * C872 - C24267 * C867 + C50289 * C1538 - C24268 * C1534 +
              C24264 * C3184 - C24269 * C3181) *
                 C49175 +
             (C50288 * C882 - C24267 * C873 + C50289 * C1546 - C24268 * C1539 +
              C24264 * C3190 - C24269 * C3185) *
                 C50224 +
             (C25159 - C25160 + C25161 - C25162 + C25163 - C25164) * C49168 +
             (C25165 - C25166 + C25167 - C25168 + C25169 - C25170) * C49955) *
                C50110 * C50077) *
               C50049) *
              C279 +
          ((((C24274 - C24273 + C24276 - C24275 + C24278 - C24277) * C49175 +
             (C24280 - C24279 + C24282 - C24281 + C24284 - C24283) * C50224 +
             (C24285 - C24286 + C24287 - C24288 + C24289 - C24290) * C49168 +
             (C24291 - C24292 + C24293 - C24294 + C24295 - C24296) * C49955) *
                C50110 * C50240 +
            ((C24626 - C24625 + C24628 - C24627 + C24630 - C24629) * C49175 +
             (C24632 - C24631 + C24634 - C24633 + C24636 - C24635) * C50224 +
             (C24953 - C24954 + C24955 - C24956 + C24957 - C24958) * C49168 +
             (C24959 - C24960 + C24961 - C24962 + C24963 - C24964) * C49955) *
                C50110 * C50077) *
               C50239 +
           (((C24456 - C24455 + C24458 - C24457 + C24460 - C24459) * C49175 +
             (C24462 - C24461 + C24464 - C24463 + C24466 - C24465) * C50224 +
             (C24795 - C24796 + C24797 - C24798 + C24799 - C24800) * C49168 +
             (C24801 - C24802 + C24803 - C24804 + C24805 - C24806) * C49955) *
                C50110 * C50240 +
            ((C25160 - C25159 + C25162 - C25161 + C25164 - C25163) * C49175 +
             (C25166 - C25165 + C25168 - C25167 + C25170 - C25169) * C50224 +
             (C24267 * C869 - C50288 * C876 + C24268 * C1536 - C50289 * C1542 +
              C24269 * C3183 - C24264 * C3188) *
                 C49168 +
             (C24267 * C877 - C50288 * C884 + C24268 * C1543 - C50289 * C1548 +
              C24269 * C3189 - C24264 * C3192) *
                 C49955) *
                C50110 * C50077) *
               C50049) *
              C49984)) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50288 * C129 - C24267 * C122 + C50289 * C291 - C24268 * C281 +
             C24264 * C299 - C24269 * C285) *
                C49175 +
            (C50288 * C143 - C24267 * C130 + C50289 * C311 - C24268 * C292 +
             C24264 * C315 - C24269 * C300) *
                C50224 +
            (C24273 - C24274 + C24275 - C24276 + C24277 - C24278) * C49168 +
            (C24279 - C24280 + C24281 - C24282 + C24283 - C24284) * C49955) *
               C50110 * C50013 * C276 +
           ((C24267 * C281 - C50288 * C291 + C24268 * C285 - C50289 * C299 +
             C24269 * C1073 - C24264 * C1077) *
                C49175 +
            (C24267 * C292 - C50288 * C311 + C24268 * C300 - C50289 * C315 +
             C24269 * C1078 - C24264 * C1085) *
                C50224 +
            (C24455 - C24456 + C24457 - C24458 + C24459 - C24460) * C49168 +
            (C24461 - C24462 + C24463 - C24464 + C24465 - C24466) * C49955) *
               C50110 * C50013 * C277 +
           ((C50288 * C299 - C24267 * C285 + C50289 * C1077 - C24268 * C1073 +
             C24264 * C2456 - C24269 * C2453) *
                C49175 +
            (C50288 * C315 - C24267 * C300 + C50289 * C1085 - C24268 * C1078 +
             C24264 * C2462 - C24269 * C2457) *
                C50224 +
            (C24467 - C24468 + C24469 - C24470 + C24471 - C24472) * C49168 +
            (C24473 - C24474 + C24475 - C24476 + C24477 - C24478) * C49955) *
               C50110 * C50013 * C278) *
              C279 +
          (((C24274 - C24273 + C24276 - C24275 + C24278 - C24277) * C49175 +
            (C24280 - C24279 + C24282 - C24281 + C24284 - C24283) * C50224 +
            (C24285 - C24286 + C24287 - C24288 + C24289 - C24290) * C49168 +
            (C24291 - C24292 + C24293 - C24294 + C24295 - C24296) * C49955) *
               C50110 * C50013 * C276 +
           ((C24456 - C24455 + C24458 - C24457 + C24460 - C24459) * C49175 +
            (C24462 - C24461 + C24464 - C24463 + C24466 - C24465) * C50224 +
            (C50288 * C295 - C24267 * C283 + C50289 * C303 - C24268 * C287 +
             C24264 * C1081 - C24269 * C1075) *
                C49168 +
            (C50288 * C313 - C24267 * C296 + C50289 * C317 - C24268 * C304 +
             C24264 * C1087 - C24269 * C1082) *
                C49955) *
               C50110 * C50013 * C277 +
           ((C24468 - C24467 + C24470 - C24469 + C24472 - C24471) * C49175 +
            (C24474 - C24473 + C24476 - C24475 + C24478 - C24477) * C50224 +
            (C24267 * C287 - C50288 * C303 + C24268 * C1075 - C50289 * C1081 +
             C24269 * C2455 - C24264 * C2460) *
                C49168 +
            (C24267 * C304 - C50288 * C317 + C24268 * C1082 - C50289 * C1087 +
             C24269 * C2461 - C24264 * C2464) *
                C49955) *
               C50110 * C50013 * C278) *
              C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C50288 * C129 - C24267 * C122 + C50289 * C291 - C24268 * C281 +
            C24264 * C299 - C24269 * C285) *
               C49175 +
           (C50288 * C143 - C24267 * C130 + C50289 * C311 - C24268 * C292 +
            C24264 * C315 - C24269 * C300) *
               C50224 +
           (C24273 - C24274 + C24275 - C24276 + C24277 - C24278) * C49168 +
           (C24279 - C24280 + C24281 - C24282 + C24283 - C24284) * C49955) *
              C50110 * C50013 * C49997 * C113 +
          ((C24274 - C24273 + C24276 - C24275 + C24278 - C24277) * C49175 +
           (C24280 - C24279 + C24282 - C24281 + C24284 - C24283) * C50224 +
           (C24285 - C24286 + C24287 - C24288 + C24289 - C24290) * C49168 +
           (C24291 - C24292 + C24293 - C24294 + C24295 - C24296) * C49955) *
              C50110 * C50013 * C49997 * C114 +
          ((C24286 - C24285 + C24288 - C24287 + C24290 - C24289) * C49175 +
           (C24292 - C24291 + C24294 - C24293 + C24296 - C24295) * C50224 +
           (C24297 - C24298 + C24299 - C24300 + C24301 - C24302) * C49168 +
           (C24303 - C24304 + C24305 - C24306 + C24307 - C24308) * C49955) *
              C50110 * C50013 * C49997 * C115 +
          ((C24298 - C24297 + C24300 - C24299 + C24302 - C24301) * C49175 +
           (C24304 - C24303 + C24306 - C24305 + C24308 - C24307) * C50224 +
           (C24267 * C126 - C50288 * C137 + C24268 * C289 - C50289 * C307 +
            C24269 * C290 - C24264 * C309) *
               C49168 +
           (C24267 * C138 - C50288 * C147 + C24268 * C308 - C50289 * C319 +
            C24269 * C310 - C24264 * C320) *
               C49955) *
              C50110 * C50013 * C49997 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C50288 * C129 - C24267 * C122 + C50289 * C291 - C24268 * C281 +
             C24264 * C299 - C24269 * C285) *
                C49175 +
            (C50288 * C143 - C24267 * C130 + C50289 * C311 - C24268 * C292 +
             C24264 * C315 - C24269 * C300) *
                C50224 +
            (C24273 - C24274 + C24275 - C24276 + C24277 - C24278) * C49168 +
            (C24279 - C24280 + C24281 - C24282 + C24283 - C24284) * C49955) *
               C50110 * C443 +
           ((C24267 * C446 - C50288 * C456 + C24268 * C867 - C50289 * C872 +
             C24269 * C1534 - C24264 * C1538) *
                C49175 +
            (C24267 * C457 - C50288 * C476 + C24268 * C873 - C50289 * C882 +
             C24269 * C1539 - C24264 * C1546) *
                C50224 +
            (C24625 - C24626 + C24627 - C24628 + C24629 - C24630) * C49168 +
            (C24631 - C24632 + C24633 - C24634 + C24635 - C24636) * C49955) *
               C50110 * C444 +
           ((C50288 * C464 - C24267 * C450 + C50289 * C1191 - C24268 * C1187 +
             C24264 * C2638 - C24269 * C2635) *
                C49175 +
            (C50288 * C480 - C24267 * C465 + C50289 * C1199 - C24268 * C1192 +
             C24264 * C2644 - C24269 * C2639) *
                C50224 +
            (C24637 - C24638 + C24639 - C24640 + C24641 - C24642) * C49168 +
            (C24643 - C24644 + C24645 - C24646 + C24647 - C24648) * C49955) *
               C50110 * C445) *
              C49997 * C279 +
          (((C24274 - C24273 + C24276 - C24275 + C24278 - C24277) * C49175 +
            (C24280 - C24279 + C24282 - C24281 + C24284 - C24283) * C50224 +
            (C24285 - C24286 + C24287 - C24288 + C24289 - C24290) * C49168 +
            (C24291 - C24292 + C24293 - C24294 + C24295 - C24296) * C49955) *
               C50110 * C443 +
           ((C24626 - C24625 + C24628 - C24627 + C24630 - C24629) * C49175 +
            (C24632 - C24631 + C24634 - C24633 + C24636 - C24635) * C50224 +
            (C50288 * C460 - C24267 * C448 + C50289 * C876 - C24268 * C869 +
             C24264 * C1542 - C24269 * C1536) *
                C49168 +
            (C50288 * C478 - C24267 * C461 + C50289 * C884 - C24268 * C877 +
             C24264 * C1548 - C24269 * C1543) *
                C49955) *
               C50110 * C444 +
           ((C24638 - C24637 + C24640 - C24639 + C24642 - C24641) * C49175 +
            (C24644 - C24643 + C24646 - C24645 + C24648 - C24647) * C50224 +
            (C24267 * C452 - C50288 * C468 + C24268 * C1189 - C50289 * C1195 +
             C24269 * C2637 - C24264 * C2642) *
                C49168 +
            (C24267 * C469 - C50288 * C482 + C24268 * C1196 - C50289 * C1201 +
             C24269 * C2643 - C24264 * C2646) *
                C49955) *
               C50110 * C445) *
              C49997 * C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50288 * C129 - C24267 * C122 + C50289 * C291 - C24268 * C281 +
             C24264 * C299 - C24269 * C285) *
                C49175 +
            (C50288 * C143 - C24267 * C130 + C50289 * C311 - C24268 * C292 +
             C24264 * C315 - C24269 * C300) *
                C50224 +
            (C24273 - C24274 + C24275 - C24276 + C24277 - C24278) * C49168 +
            (C24279 - C24280 + C24281 - C24282 + C24283 - C24284) * C49955) *
               C50110 * C50240 +
           ((C24267 * C446 - C50288 * C456 + C24268 * C867 - C50289 * C872 +
             C24269 * C1534 - C24264 * C1538) *
                C49175 +
            (C24267 * C457 - C50288 * C476 + C24268 * C873 - C50289 * C882 +
             C24269 * C1539 - C24264 * C1546) *
                C50224 +
            (C24625 - C24626 + C24627 - C24628 + C24629 - C24630) * C49168 +
            (C24631 - C24632 + C24633 - C24634 + C24635 - C24636) * C49955) *
               C50110 * C50077) *
              C49997 * C50282 +
          (((C24274 - C24273 + C24276 - C24275 + C24278 - C24277) * C49175 +
            (C24280 - C24279 + C24282 - C24281 + C24284 - C24283) * C50224 +
            (C24285 - C24286 + C24287 - C24288 + C24289 - C24290) * C49168 +
            (C24291 - C24292 + C24293 - C24294 + C24295 - C24296) * C49955) *
               C50110 * C50240 +
           ((C24626 - C24625 + C24628 - C24627 + C24630 - C24629) * C49175 +
            (C24632 - C24631 + C24634 - C24633 + C24636 - C24635) * C50224 +
            (C24953 - C24954 + C24955 - C24956 + C24957 - C24958) * C49168 +
            (C24959 - C24960 + C24961 - C24962 + C24963 - C24964) * C49955) *
               C50110 * C50077) *
              C49997 * C50283 +
          (((C24286 - C24285 + C24288 - C24287 + C24290 - C24289) * C49175 +
            (C24292 - C24291 + C24294 - C24293 + C24296 - C24295) * C50224 +
            (C24297 - C24298 + C24299 - C24300 + C24301 - C24302) * C49168 +
            (C24303 - C24304 + C24305 - C24306 + C24307 - C24308) * C49955) *
               C50110 * C50240 +
           ((C24954 - C24953 + C24956 - C24955 + C24958 - C24957) * C49175 +
            (C24960 - C24959 + C24962 - C24961 + C24964 - C24963) * C50224 +
            (C24267 * C449 - C50288 * C462 + C24268 * C870 - C50289 * C878 +
             C24269 * C1537 - C24264 * C1544) *
                C49168 +
            (C24267 * C463 - C50288 * C479 + C24268 * C879 - C50289 * C885 +
             C24269 * C1545 - C24264 * C1549) *
                C49955) *
               C50110 * C50077) *
              C49997 * C612)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C50288 * C129 - C24267 * C122 + C50289 * C291 - C24268 * C281 +
            C24264 * C299 - C24269 * C285) *
               C49175 +
           (C50288 * C143 - C24267 * C130 + C50289 * C311 - C24268 * C292 +
            C24264 * C315 - C24269 * C300) *
               C50224 +
           (C24273 - C24274 + C24275 - C24276 + C24277 - C24278) * C49168 +
           (C24279 - C24280 + C24281 - C24282 + C24283 - C24284) * C49955) *
              C50110 * C50013 * C49997 * C113 +
          ((C24274 - C24273 + C24276 - C24275 + C24278 - C24277) * C49175 +
           (C24280 - C24279 + C24282 - C24281 + C24284 - C24283) * C50224 +
           (C24285 - C24286 + C24287 - C24288 + C24289 - C24290) * C49168 +
           (C24291 - C24292 + C24293 - C24294 + C24295 - C24296) * C49955) *
              C50110 * C50013 * C49997 * C114 +
          ((C24286 - C24285 + C24288 - C24287 + C24290 - C24289) * C49175 +
           (C24292 - C24291 + C24294 - C24293 + C24296 - C24295) * C50224 +
           (C24297 - C24298 + C24299 - C24300 + C24301 - C24302) * C49168 +
           (C24303 - C24304 + C24305 - C24306 + C24307 - C24308) * C49955) *
              C50110 * C50013 * C49997 * C115 +
          ((C24298 - C24297 + C24300 - C24299 + C24302 - C24301) * C49175 +
           (C24304 - C24303 + C24306 - C24305 + C24308 - C24307) * C50224 +
           (C24267 * C126 - C50288 * C137 + C24268 * C289 - C50289 * C307 +
            C24269 * C290 - C24264 * C309) *
               C49168 +
           (C24267 * C138 - C50288 * C147 + C24268 * C308 - C50289 * C319 +
            C24269 * C310 - C24264 * C320) *
               C49955) *
              C50110 * C50013 * C49997 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50288 * C129 - C24267 * C122 + C50289 * C291 - C24268 * C281 +
             C24264 * C299 - C24269 * C285) *
                C49175 +
            (C50288 * C143 - C24267 * C130 + C50289 * C311 - C24268 * C292 +
             C24264 * C315 - C24269 * C300) *
                C50224 +
            (C24273 - C24274 + C24275 - C24276 + C24277 - C24278) * C49168 +
            (C24279 - C24280 + C24281 - C24282 + C24283 - C24284) * C49955) *
               C50110 * C50013 * C276 +
           ((C24267 * C281 - C50288 * C291 + C24268 * C285 - C50289 * C299 +
             C24269 * C1073 - C24264 * C1077) *
                C49175 +
            (C24267 * C292 - C50288 * C311 + C24268 * C300 - C50289 * C315 +
             C24269 * C1078 - C24264 * C1085) *
                C50224 +
            (C24455 - C24456 + C24457 - C24458 + C24459 - C24460) * C49168 +
            (C24461 - C24462 + C24463 - C24464 + C24465 - C24466) * C49955) *
               C50110 * C50013 * C277 +
           ((C50288 * C299 - C24267 * C285 + C50289 * C1077 - C24268 * C1073 +
             C24264 * C2456 - C24269 * C2453) *
                C49175 +
            (C50288 * C315 - C24267 * C300 + C50289 * C1085 - C24268 * C1078 +
             C24264 * C2462 - C24269 * C2457) *
                C50224 +
            (C24467 - C24468 + C24469 - C24470 + C24471 - C24472) * C49168 +
            (C24473 - C24474 + C24475 - C24476 + C24477 - C24478) * C49955) *
               C50110 * C50013 * C278) *
              C279 +
          (((C24274 - C24273 + C24276 - C24275 + C24278 - C24277) * C49175 +
            (C24280 - C24279 + C24282 - C24281 + C24284 - C24283) * C50224 +
            (C24285 - C24286 + C24287 - C24288 + C24289 - C24290) * C49168 +
            (C24291 - C24292 + C24293 - C24294 + C24295 - C24296) * C49955) *
               C50110 * C50013 * C276 +
           ((C24456 - C24455 + C24458 - C24457 + C24460 - C24459) * C49175 +
            (C24462 - C24461 + C24464 - C24463 + C24466 - C24465) * C50224 +
            (C50288 * C295 - C24267 * C283 + C50289 * C303 - C24268 * C287 +
             C24264 * C1081 - C24269 * C1075) *
                C49168 +
            (C50288 * C313 - C24267 * C296 + C50289 * C317 - C24268 * C304 +
             C24264 * C1087 - C24269 * C1082) *
                C49955) *
               C50110 * C50013 * C277 +
           ((C24468 - C24467 + C24470 - C24469 + C24472 - C24471) * C49175 +
            (C24474 - C24473 + C24476 - C24475 + C24478 - C24477) * C50224 +
            (C24267 * C287 - C50288 * C303 + C24268 * C1075 - C50289 * C1081 +
             C24269 * C2455 - C24264 * C2460) *
                C49168 +
            (C24267 * C304 - C50288 * C317 + C24268 * C1082 - C50289 * C1087 +
             C24269 * C2461 - C24264 * C2464) *
                C49955) *
               C50110 * C50013 * C278) *
              C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50288 * C129 - C24267 * C122 + C50289 * C291 - C24268 * C281 +
             C24264 * C299 - C24269 * C285) *
                C49175 +
            (C50288 * C143 - C24267 * C130 + C50289 * C311 - C24268 * C292 +
             C24264 * C315 - C24269 * C300) *
                C50224 +
            (C24273 - C24274 + C24275 - C24276 + C24277 - C24278) * C49168 +
            (C24279 - C24280 + C24281 - C24282 + C24283 - C24284) * C49955) *
               C50110 * C50013 * C50284 +
           ((C24267 * C281 - C50288 * C291 + C24268 * C285 - C50289 * C299 +
             C24269 * C1073 - C24264 * C1077) *
                C49175 +
            (C24267 * C292 - C50288 * C311 + C24268 * C300 - C50289 * C315 +
             C24269 * C1078 - C24264 * C1085) *
                C50224 +
            (C24455 - C24456 + C24457 - C24458 + C24459 - C24460) * C49168 +
            (C24461 - C24462 + C24463 - C24464 + C24465 - C24466) * C49955) *
               C50110 * C50013 * C50285 +
           ((C50288 * C299 - C24267 * C285 + C50289 * C1077 - C24268 * C1073 +
             C24264 * C2456 - C24269 * C2453) *
                C49175 +
            (C50288 * C315 - C24267 * C300 + C50289 * C1085 - C24268 * C1078 +
             C24264 * C2462 - C24269 * C2457) *
                C50224 +
            (C24467 - C24468 + C24469 - C24470 + C24471 - C24472) * C49168 +
            (C24473 - C24474 + C24475 - C24476 + C24477 - C24478) * C49955) *
               C50110 * C50013 * C1303) *
              C50231 +
          (((C24274 - C24273 + C24276 - C24275 + C24278 - C24277) * C49175 +
            (C24280 - C24279 + C24282 - C24281 + C24284 - C24283) * C50224 +
            (C24285 - C24286 + C24287 - C24288 + C24289 - C24290) * C49168 +
            (C24291 - C24292 + C24293 - C24294 + C24295 - C24296) * C49955) *
               C50110 * C50013 * C50284 +
           ((C24456 - C24455 + C24458 - C24457 + C24460 - C24459) * C49175 +
            (C24462 - C24461 + C24464 - C24463 + C24466 - C24465) * C50224 +
            (C24795 - C24796 + C24797 - C24798 + C24799 - C24800) * C49168 +
            (C24801 - C24802 + C24803 - C24804 + C24805 - C24806) * C49955) *
               C50110 * C50013 * C50285 +
           ((C24468 - C24467 + C24470 - C24469 + C24472 - C24471) * C49175 +
            (C24474 - C24473 + C24476 - C24475 + C24478 - C24477) * C50224 +
            (C24267 * C287 - C50288 * C303 + C24268 * C1075 - C50289 * C1081 +
             C24269 * C2455 - C24264 * C2460) *
                C49168 +
            (C24267 * C304 - C50288 * C317 + C24268 * C1082 - C50289 * C1087 +
             C24269 * C2461 - C24264 * C2464) *
                C49955) *
               C50110 * C50013 * C1303) *
              C49984)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50288 * C129 - C24267 * C122 + C50289 * C291 - C24268 * C281 +
             C24264 * C299 - C24269 * C285) *
                C49175 +
            (C50288 * C143 - C24267 * C130 + C50289 * C311 - C24268 * C292 +
             C24264 * C315 - C24269 * C300) *
                C50224 +
            (C24273 - C24274 + C24275 - C24276 + C24277 - C24278) * C49168 +
            (C24279 - C24280 + C24281 - C24282 + C24283 - C24284) * C49955) *
               C50110 * C50240 +
           ((C24267 * C446 - C50288 * C456 + C24268 * C867 - C50289 * C872 +
             C24269 * C1534 - C24264 * C1538) *
                C49175 +
            (C24267 * C457 - C50288 * C476 + C24268 * C873 - C50289 * C882 +
             C24269 * C1539 - C24264 * C1546) *
                C50224 +
            (C24625 - C24626 + C24627 - C24628 + C24629 - C24630) * C49168 +
            (C24631 - C24632 + C24633 - C24634 + C24635 - C24636) * C49955) *
               C50110 * C50077) *
              C50284 +
          (((C24267 * C281 - C50288 * C291 + C24268 * C285 - C50289 * C299 +
             C24269 * C1073 - C24264 * C1077) *
                C49175 +
            (C24267 * C292 - C50288 * C311 + C24268 * C300 - C50289 * C315 +
             C24269 * C1078 - C24264 * C1085) *
                C50224 +
            (C24455 - C24456 + C24457 - C24458 + C24459 - C24460) * C49168 +
            (C24461 - C24462 + C24463 - C24464 + C24465 - C24466) * C49955) *
               C50110 * C50240 +
           ((C50288 * C872 - C24267 * C867 + C50289 * C1538 - C24268 * C1534 +
             C24264 * C3184 - C24269 * C3181) *
                C49175 +
            (C50288 * C882 - C24267 * C873 + C50289 * C1546 - C24268 * C1539 +
             C24264 * C3190 - C24269 * C3185) *
                C50224 +
            (C25159 - C25160 + C25161 - C25162 + C25163 - C25164) * C49168 +
            (C25165 - C25166 + C25167 - C25168 + C25169 - C25170) * C49955) *
               C50110 * C50077) *
              C50285 +
          (((C50288 * C299 - C24267 * C285 + C50289 * C1077 - C24268 * C1073 +
             C24264 * C2456 - C24269 * C2453) *
                C49175 +
            (C50288 * C315 - C24267 * C300 + C50289 * C1085 - C24268 * C1078 +
             C24264 * C2462 - C24269 * C2457) *
                C50224 +
            (C24467 - C24468 + C24469 - C24470 + C24471 - C24472) * C49168 +
            (C24473 - C24474 + C24475 - C24476 + C24477 - C24478) * C49955) *
               C50110 * C50240 +
           ((C24267 * C1534 - C50288 * C1538 + C24268 * C3181 - C50289 * C3184 +
             C24269 * C4097 - C24264 * C4099) *
                C49175 +
            (C24267 * C1539 - C50288 * C1546 + C24268 * C3185 - C50289 * C3190 +
             C24269 * C4100 - C24264 * C4103) *
                C50224 +
            (C24267 * C1535 - C50288 * C1540 + C24268 * C3182 - C50289 * C3186 +
             C24269 * C4098 - C24264 * C4101) *
                C49168 +
            (C24267 * C1541 - C50288 * C1547 + C24268 * C3187 - C50289 * C3191 +
             C24269 * C4102 - C24264 * C4104) *
                C49955) *
               C50110 * C50077) *
              C1303) *
         C49978) /
        (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C50288 * C129 - C24267 * C122 + C50289 * C291 - C24268 * C281 +
            C24264 * C299 - C24269 * C285) *
               C49175 +
           (C50288 * C143 - C24267 * C130 + C50289 * C311 - C24268 * C292 +
            C24264 * C315 - C24269 * C300) *
               C50224 +
           (C24273 - C24274 + C24275 - C24276 + C24277 - C24278) * C49168 +
           (C24279 - C24280 + C24281 - C24282 + C24283 - C24284) * C49955) *
              C50110 * C50013 * C1068 +
          ((C24267 * C281 - C50288 * C291 + C24268 * C285 - C50289 * C299 +
            C24269 * C1073 - C24264 * C1077) *
               C49175 +
           (C24267 * C292 - C50288 * C311 + C24268 * C300 - C50289 * C315 +
            C24269 * C1078 - C24264 * C1085) *
               C50224 +
           (C24455 - C24456 + C24457 - C24458 + C24459 - C24460) * C49168 +
           (C24461 - C24462 + C24463 - C24464 + C24465 - C24466) * C49955) *
              C50110 * C50013 * C1069 +
          ((C50288 * C299 - C24267 * C285 + C50289 * C1077 - C24268 * C1073 +
            C24264 * C2456 - C24269 * C2453) *
               C49175 +
           (C50288 * C315 - C24267 * C300 + C50289 * C1085 - C24268 * C1078 +
            C24264 * C2462 - C24269 * C2457) *
               C50224 +
           (C24467 - C24468 + C24469 - C24470 + C24471 - C24472) * C49168 +
           (C24473 - C24474 + C24475 - C24476 + C24477 - C24478) * C49955) *
              C50110 * C50013 * C1070 +
          ((C24267 * C1073 - C50288 * C1077 + C24268 * C2453 - C50289 * C2456 +
            C24269 * C3449 - C24264 * C3451) *
               C49175 +
           (C24267 * C1078 - C50288 * C1085 + C24268 * C2457 - C50289 * C2462 +
            C24269 * C3452 - C24264 * C3455) *
               C50224 +
           (C24267 * C1074 - C50288 * C1079 + C24268 * C2454 - C50289 * C2458 +
            C24269 * C3450 - C24264 * C3453) *
               C49168 +
           (C24267 * C1080 - C50288 * C1086 + C24268 * C2459 - C50289 * C2463 +
            C24269 * C3454 - C24264 * C3456) *
               C49955) *
              C50110 * C50013 * C1071) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50288 * C129 - C24267 * C122 + C50289 * C291 - C24268 * C281 +
             C24264 * C299 - C24269 * C285) *
                C49175 +
            (C50288 * C143 - C24267 * C130 + C50289 * C311 - C24268 * C292 +
             C24264 * C315 - C24269 * C300) *
                C50224 +
            (C24273 - C24274 + C24275 - C24276 + C24277 - C24278) * C49168 +
            (C24279 - C24280 + C24281 - C24282 + C24283 - C24284) * C49955) *
               C50110 * C50013 * C997 +
           ((C24267 * C281 - C50288 * C291 + C24268 * C285 - C50289 * C299 +
             C24269 * C1073 - C24264 * C1077) *
                C49175 +
            (C24267 * C292 - C50288 * C311 + C24268 * C300 - C50289 * C315 +
             C24269 * C1078 - C24264 * C1085) *
                C50224 +
            (C24455 - C24456 + C24457 - C24458 + C24459 - C24460) * C49168 +
            (C24461 - C24462 + C24463 - C24464 + C24465 - C24466) * C49955) *
               C50110 * C50013 * C50049) *
              C999 +
          (((C24274 - C24273 + C24276 - C24275 + C24278 - C24277) * C49175 +
            (C24280 - C24279 + C24282 - C24281 + C24284 - C24283) * C50224 +
            (C24285 - C24286 + C24287 - C24288 + C24289 - C24290) * C49168 +
            (C24291 - C24292 + C24293 - C24294 + C24295 - C24296) * C49955) *
               C50110 * C50013 * C997 +
           ((C24456 - C24455 + C24458 - C24457 + C24460 - C24459) * C49175 +
            (C24462 - C24461 + C24464 - C24463 + C24466 - C24465) * C50224 +
            (C24795 - C24796 + C24797 - C24798 + C24799 - C24800) * C49168 +
            (C24801 - C24802 + C24803 - C24804 + C24805 - C24806) * C49955) *
               C50110 * C50013 * C50049) *
              C1000 +
          (((C24286 - C24285 + C24288 - C24287 + C24290 - C24289) * C49175 +
            (C24292 - C24291 + C24294 - C24293 + C24296 - C24295) * C50224 +
            (C24297 - C24298 + C24299 - C24300 + C24301 - C24302) * C49168 +
            (C24303 - C24304 + C24305 - C24306 + C24307 - C24308) * C49955) *
               C50110 * C50013 * C997 +
           ((C24796 - C24795 + C24798 - C24797 + C24800 - C24799) * C49175 +
            (C24802 - C24801 + C24804 - C24803 + C24806 - C24805) * C50224 +
            (C24267 * C284 - C50288 * C297 + C24268 * C288 - C50289 * C305 +
             C24269 * C1076 - C24264 * C1083) *
                C49168 +
            (C24267 * C298 - C50288 * C314 + C24268 * C306 - C50289 * C318 +
             C24269 * C1084 - C24264 * C1088) *
                C49955) *
               C50110 * C50013 * C50049) *
              C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C50288 * C129 - C24267 * C122 + C50289 * C291 - C24268 * C281 +
             C24264 * C299 - C24269 * C285) *
                C49175 +
            (C50288 * C143 - C24267 * C130 + C50289 * C311 - C24268 * C292 +
             C24264 * C315 - C24269 * C300) *
                C50224 +
            (C24273 - C24274 + C24275 - C24276 + C24277 - C24278) * C49168 +
            (C24279 - C24280 + C24281 - C24282 + C24283 - C24284) * C49955) *
               C50110 * C443 +
           ((C24267 * C446 - C50288 * C456 + C24268 * C867 - C50289 * C872 +
             C24269 * C1534 - C24264 * C1538) *
                C49175 +
            (C24267 * C457 - C50288 * C476 + C24268 * C873 - C50289 * C882 +
             C24269 * C1539 - C24264 * C1546) *
                C50224 +
            (C24625 - C24626 + C24627 - C24628 + C24629 - C24630) * C49168 +
            (C24631 - C24632 + C24633 - C24634 + C24635 - C24636) * C49955) *
               C50110 * C444 +
           ((C50288 * C464 - C24267 * C450 + C50289 * C1191 - C24268 * C1187 +
             C24264 * C2638 - C24269 * C2635) *
                C49175 +
            (C50288 * C480 - C24267 * C465 + C50289 * C1199 - C24268 * C1192 +
             C24264 * C2644 - C24269 * C2639) *
                C50224 +
            (C24637 - C24638 + C24639 - C24640 + C24641 - C24642) * C49168 +
            (C24643 - C24644 + C24645 - C24646 + C24647 - C24648) * C49955) *
               C50110 * C445) *
              C997 +
          (((C24267 * C281 - C50288 * C291 + C24268 * C285 - C50289 * C299 +
             C24269 * C1073 - C24264 * C1077) *
                C49175 +
            (C24267 * C292 - C50288 * C311 + C24268 * C300 - C50289 * C315 +
             C24269 * C1078 - C24264 * C1085) *
                C50224 +
            (C24455 - C24456 + C24457 - C24458 + C24459 - C24460) * C49168 +
            (C24461 - C24462 + C24463 - C24464 + C24465 - C24466) * C49955) *
               C50110 * C443 +
           ((C50288 * C872 - C24267 * C867 + C50289 * C1538 - C24268 * C1534 +
             C24264 * C3184 - C24269 * C3181) *
                C49175 +
            (C50288 * C882 - C24267 * C873 + C50289 * C1546 - C24268 * C1539 +
             C24264 * C3190 - C24269 * C3185) *
                C50224 +
            (C25159 - C25160 + C25161 - C25162 + C25163 - C25164) * C49168 +
            (C25165 - C25166 + C25167 - C25168 + C25169 - C25170) * C49955) *
               C50110 * C444 +
           ((C24267 * C1187 - C50288 * C1191 + C24268 * C2635 - C50289 * C2638 +
             C24269 * C3603 - C24264 * C3605) *
                C49175 +
            (C24267 * C1192 - C50288 * C1199 + C24268 * C2639 - C50289 * C2644 +
             C24269 * C3606 - C24264 * C3609) *
                C50224 +
            (C24267 * C1188 - C50288 * C1193 + C24268 * C2636 - C50289 * C2640 +
             C24269 * C3604 - C24264 * C3607) *
                C49168 +
            (C24267 * C1194 - C50288 * C1200 + C24268 * C2641 - C50289 * C2645 +
             C24269 * C3608 - C24264 * C3610) *
                C49955) *
               C50110 * C445) *
              C50049) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50288 * C129 - C24267 * C122 + C50289 * C291 - C24268 * C281 +
              C24264 * C299 - C24269 * C285) *
                 C49175 +
             (C50288 * C143 - C24267 * C130 + C50289 * C311 - C24268 * C292 +
              C24264 * C315 - C24269 * C300) *
                 C50224 +
             (C24273 - C24274 + C24275 - C24276 + C24277 - C24278) * C49168 +
             (C24279 - C24280 + C24281 - C24282 + C24283 - C24284) * C49955) *
                C50110 * C50240 +
            ((C24267 * C446 - C50288 * C456 + C24268 * C867 - C50289 * C872 +
              C24269 * C1534 - C24264 * C1538) *
                 C49175 +
             (C24267 * C457 - C50288 * C476 + C24268 * C873 - C50289 * C882 +
              C24269 * C1539 - C24264 * C1546) *
                 C50224 +
             (C24625 - C24626 + C24627 - C24628 + C24629 - C24630) * C49168 +
             (C24631 - C24632 + C24633 - C24634 + C24635 - C24636) * C49955) *
                C50110 * C50077) *
               C997 +
           (((C24267 * C281 - C50288 * C291 + C24268 * C285 - C50289 * C299 +
              C24269 * C1073 - C24264 * C1077) *
                 C49175 +
             (C24267 * C292 - C50288 * C311 + C24268 * C300 - C50289 * C315 +
              C24269 * C1078 - C24264 * C1085) *
                 C50224 +
             (C24455 - C24456 + C24457 - C24458 + C24459 - C24460) * C49168 +
             (C24461 - C24462 + C24463 - C24464 + C24465 - C24466) * C49955) *
                C50110 * C50240 +
            ((C50288 * C872 - C24267 * C867 + C50289 * C1538 - C24268 * C1534 +
              C24264 * C3184 - C24269 * C3181) *
                 C49175 +
             (C50288 * C882 - C24267 * C873 + C50289 * C1546 - C24268 * C1539 +
              C24264 * C3190 - C24269 * C3185) *
                 C50224 +
             (C25159 - C25160 + C25161 - C25162 + C25163 - C25164) * C49168 +
             (C25165 - C25166 + C25167 - C25168 + C25169 - C25170) * C49955) *
                C50110 * C50077) *
               C50049) *
              C50231 +
          ((((C24274 - C24273 + C24276 - C24275 + C24278 - C24277) * C49175 +
             (C24280 - C24279 + C24282 - C24281 + C24284 - C24283) * C50224 +
             (C24285 - C24286 + C24287 - C24288 + C24289 - C24290) * C49168 +
             (C24291 - C24292 + C24293 - C24294 + C24295 - C24296) * C49955) *
                C50110 * C50240 +
            ((C24626 - C24625 + C24628 - C24627 + C24630 - C24629) * C49175 +
             (C24632 - C24631 + C24634 - C24633 + C24636 - C24635) * C50224 +
             (C24953 - C24954 + C24955 - C24956 + C24957 - C24958) * C49168 +
             (C24959 - C24960 + C24961 - C24962 + C24963 - C24964) * C49955) *
                C50110 * C50077) *
               C997 +
           (((C24456 - C24455 + C24458 - C24457 + C24460 - C24459) * C49175 +
             (C24462 - C24461 + C24464 - C24463 + C24466 - C24465) * C50224 +
             (C24795 - C24796 + C24797 - C24798 + C24799 - C24800) * C49168 +
             (C24801 - C24802 + C24803 - C24804 + C24805 - C24806) * C49955) *
                C50110 * C50240 +
            ((C25160 - C25159 + C25162 - C25161 + C25164 - C25163) * C49175 +
             (C25166 - C25165 + C25168 - C25167 + C25170 - C25169) * C50224 +
             (C24267 * C869 - C50288 * C876 + C24268 * C1536 - C50289 * C1542 +
              C24269 * C3183 - C24264 * C3188) *
                 C49168 +
             (C24267 * C877 - C50288 * C884 + C24268 * C1543 - C50289 * C1548 +
              C24269 * C3189 - C24264 * C3192) *
                 C49955) *
                C50110 * C50077) *
               C50049) *
              C49984)) /
        (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50288 * C129 - C24267 * C122 + C50289 * C291 - C24268 * C281 +
             C24264 * C299 - C24269 * C285) *
                C49175 +
            (C50288 * C143 - C24267 * C130 + C50289 * C311 - C24268 * C292 +
             C24264 * C315 - C24269 * C300) *
                C50224 +
            (C24273 - C24274 + C24275 - C24276 + C24277 - C24278) * C49168 +
            (C24279 - C24280 + C24281 - C24282 + C24283 - C24284) * C49955) *
               C50110 * C50013 * C997 +
           ((C24267 * C281 - C50288 * C291 + C24268 * C285 - C50289 * C299 +
             C24269 * C1073 - C24264 * C1077) *
                C49175 +
            (C24267 * C292 - C50288 * C311 + C24268 * C300 - C50289 * C315 +
             C24269 * C1078 - C24264 * C1085) *
                C50224 +
            (C24455 - C24456 + C24457 - C24458 + C24459 - C24460) * C49168 +
            (C24461 - C24462 + C24463 - C24464 + C24465 - C24466) * C49955) *
               C50110 * C50013 * C50049) *
              C999 +
          (((C24274 - C24273 + C24276 - C24275 + C24278 - C24277) * C49175 +
            (C24280 - C24279 + C24282 - C24281 + C24284 - C24283) * C50224 +
            (C24285 - C24286 + C24287 - C24288 + C24289 - C24290) * C49168 +
            (C24291 - C24292 + C24293 - C24294 + C24295 - C24296) * C49955) *
               C50110 * C50013 * C997 +
           ((C24456 - C24455 + C24458 - C24457 + C24460 - C24459) * C49175 +
            (C24462 - C24461 + C24464 - C24463 + C24466 - C24465) * C50224 +
            (C24795 - C24796 + C24797 - C24798 + C24799 - C24800) * C49168 +
            (C24801 - C24802 + C24803 - C24804 + C24805 - C24806) * C49955) *
               C50110 * C50013 * C50049) *
              C1000 +
          (((C24286 - C24285 + C24288 - C24287 + C24290 - C24289) * C49175 +
            (C24292 - C24291 + C24294 - C24293 + C24296 - C24295) * C50224 +
            (C24297 - C24298 + C24299 - C24300 + C24301 - C24302) * C49168 +
            (C24303 - C24304 + C24305 - C24306 + C24307 - C24308) * C49955) *
               C50110 * C50013 * C997 +
           ((C24796 - C24795 + C24798 - C24797 + C24800 - C24799) * C49175 +
            (C24802 - C24801 + C24804 - C24803 + C24806 - C24805) * C50224 +
            (C24267 * C284 - C50288 * C297 + C24268 * C288 - C50289 * C305 +
             C24269 * C1076 - C24264 * C1083) *
                C49168 +
            (C24267 * C298 - C50288 * C314 + C24268 * C306 - C50289 * C318 +
             C24269 * C1084 - C24264 * C1088) *
                C49955) *
               C50110 * C50013 * C50049) *
              C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C50288 * C129 - C24267 * C122 + C50289 * C291 - C24268 * C281 +
            C24264 * C299 - C24269 * C285) *
               C49175 +
           (C50288 * C143 - C24267 * C130 + C50289 * C311 - C24268 * C292 +
            C24264 * C315 - C24269 * C300) *
               C50224 +
           (C24273 - C24274 + C24275 - C24276 + C24277 - C24278) * C49168 +
           (C24279 - C24280 + C24281 - C24282 + C24283 - C24284) * C49955) *
              C50110 * C50013 * C1068 +
          ((C24267 * C281 - C50288 * C291 + C24268 * C285 - C50289 * C299 +
            C24269 * C1073 - C24264 * C1077) *
               C49175 +
           (C24267 * C292 - C50288 * C311 + C24268 * C300 - C50289 * C315 +
            C24269 * C1078 - C24264 * C1085) *
               C50224 +
           (C24455 - C24456 + C24457 - C24458 + C24459 - C24460) * C49168 +
           (C24461 - C24462 + C24463 - C24464 + C24465 - C24466) * C49955) *
              C50110 * C50013 * C1069 +
          ((C50288 * C299 - C24267 * C285 + C50289 * C1077 - C24268 * C1073 +
            C24264 * C2456 - C24269 * C2453) *
               C49175 +
           (C50288 * C315 - C24267 * C300 + C50289 * C1085 - C24268 * C1078 +
            C24264 * C2462 - C24269 * C2457) *
               C50224 +
           (C24467 - C24468 + C24469 - C24470 + C24471 - C24472) * C49168 +
           (C24473 - C24474 + C24475 - C24476 + C24477 - C24478) * C49955) *
              C50110 * C50013 * C1070 +
          ((C24267 * C1073 - C50288 * C1077 + C24268 * C2453 - C50289 * C2456 +
            C24269 * C3449 - C24264 * C3451) *
               C49175 +
           (C24267 * C1078 - C50288 * C1085 + C24268 * C2457 - C50289 * C2462 +
            C24269 * C3452 - C24264 * C3455) *
               C50224 +
           (C24267 * C1074 - C50288 * C1079 + C24268 * C2454 - C50289 * C2458 +
            C24269 * C3450 - C24264 * C3453) *
               C49168 +
           (C24267 * C1080 - C50288 * C1086 + C24268 * C2459 - C50289 * C2463 +
            C24269 * C3454 - C24264 * C3456) *
               C49955) *
              C50110 * C50013 * C1071) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50288 * C129 - C24267 * C122 + C50289 * C291 - C24268 * C281 +
              C24264 * C299 - C24269 * C285) *
                 C49175 +
             (C50288 * C143 - C24267 * C130 + C50289 * C311 - C24268 * C292 +
              C24264 * C315 - C24269 * C300) *
                 C50224 +
             (C24273 - C24274 + C24275 - C24276 + C24277 - C24278) * C49168 +
             (C24279 - C24280 + C24281 - C24282 + C24283 - C24284) * C49955) *
                C50110 * C1648 +
            ((C24267 * C446 - C50288 * C456 + C24268 * C867 - C50289 * C872 +
              C24269 * C1534 - C24264 * C1538) *
                 C49175 +
             (C24267 * C457 - C50288 * C476 + C24268 * C873 - C50289 * C882 +
              C24269 * C1539 - C24264 * C1546) *
                 C50224 +
             (C24625 - C24626 + C24627 - C24628 + C24629 - C24630) * C49168 +
             (C24631 - C24632 + C24633 - C24634 + C24635 - C24636) * C49955) *
                C50110 * C50077) *
               C50239 +
           (((C24267 * C281 - C50288 * C291 + C24268 * C285 - C50289 * C299 +
              C24269 * C1073 - C24264 * C1077) *
                 C49175 +
             (C24267 * C292 - C50288 * C311 + C24268 * C300 - C50289 * C315 +
              C24269 * C1078 - C24264 * C1085) *
                 C50224 +
             (C24455 - C24456 + C24457 - C24458 + C24459 - C24460) * C49168 +
             (C24461 - C24462 + C24463 - C24464 + C24465 - C24466) * C49955) *
                C50110 * C1648 +
            ((C50288 * C872 - C24267 * C867 + C50289 * C1538 - C24268 * C1534 +
              C24264 * C3184 - C24269 * C3181) *
                 C49175 +
             (C50288 * C882 - C24267 * C873 + C50289 * C1546 - C24268 * C1539 +
              C24264 * C3190 - C24269 * C3185) *
                 C50224 +
             (C25159 - C25160 + C25161 - C25162 + C25163 - C25164) * C49168 +
             (C25165 - C25166 + C25167 - C25168 + C25169 - C25170) * C49955) *
                C50110 * C50077) *
               C50049) *
              C50231 +
          ((((C24274 - C24273 + C24276 - C24275 + C24278 - C24277) * C49175 +
             (C24280 - C24279 + C24282 - C24281 + C24284 - C24283) * C50224 +
             (C24285 - C24286 + C24287 - C24288 + C24289 - C24290) * C49168 +
             (C24291 - C24292 + C24293 - C24294 + C24295 - C24296) * C49955) *
                C50110 * C1648 +
            ((C24626 - C24625 + C24628 - C24627 + C24630 - C24629) * C49175 +
             (C24632 - C24631 + C24634 - C24633 + C24636 - C24635) * C50224 +
             (C24953 - C24954 + C24955 - C24956 + C24957 - C24958) * C49168 +
             (C24959 - C24960 + C24961 - C24962 + C24963 - C24964) * C49955) *
                C50110 * C50077) *
               C50239 +
           (((C24456 - C24455 + C24458 - C24457 + C24460 - C24459) * C49175 +
             (C24462 - C24461 + C24464 - C24463 + C24466 - C24465) * C50224 +
             (C24795 - C24796 + C24797 - C24798 + C24799 - C24800) * C49168 +
             (C24801 - C24802 + C24803 - C24804 + C24805 - C24806) * C49955) *
                C50110 * C1648 +
            ((C25160 - C25159 + C25162 - C25161 + C25164 - C25163) * C49175 +
             (C25166 - C25165 + C25168 - C25167 + C25170 - C25169) * C50224 +
             (C24267 * C869 - C50288 * C876 + C24268 * C1536 - C50289 * C1542 +
              C24269 * C3183 - C24264 * C3188) *
                 C49168 +
             (C24267 * C877 - C50288 * C884 + C24268 * C1543 - C50289 * C1548 +
              C24269 * C3189 - C24264 * C3192) *
                 C49955) *
                C50110 * C50077) *
               C50049) *
              C49984)) /
        (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50288 * C129 - C24267 * C122 + C50289 * C291 - C24268 * C281 +
             C24264 * C299 - C24269 * C285) *
                C49175 +
            (C50288 * C143 - C24267 * C130 + C50289 * C311 - C24268 * C292 +
             C24264 * C315 - C24269 * C300) *
                C50224 +
            (C24273 - C24274 + C24275 - C24276 + C24277 - C24278) * C49168 +
            (C24279 - C24280 + C24281 - C24282 + C24283 - C24284) * C49955) *
               C50110 * C50286 +
           ((C24267 * C446 - C50288 * C456 + C24268 * C867 - C50289 * C872 +
             C24269 * C1534 - C24264 * C1538) *
                C49175 +
            (C24267 * C457 - C50288 * C476 + C24268 * C873 - C50289 * C882 +
             C24269 * C1539 - C24264 * C1546) *
                C50224 +
            (C24625 - C24626 + C24627 - C24628 + C24629 - C24630) * C49168 +
            (C24631 - C24632 + C24633 - C24634 + C24635 - C24636) * C49955) *
               C50110 * C50287 +
           ((C50288 * C464 - C24267 * C450 + C50289 * C1191 - C24268 * C1187 +
             C24264 * C2638 - C24269 * C2635) *
                C49175 +
            (C50288 * C480 - C24267 * C465 + C50289 * C1199 - C24268 * C1192 +
             C24264 * C2644 - C24269 * C2639) *
                C50224 +
            (C24637 - C24638 + C24639 - C24640 + C24641 - C24642) * C49168 +
            (C24643 - C24644 + C24645 - C24646 + C24647 - C24648) * C49955) *
               C50110 * C2064) *
              C50239 +
          (((C24267 * C281 - C50288 * C291 + C24268 * C285 - C50289 * C299 +
             C24269 * C1073 - C24264 * C1077) *
                C49175 +
            (C24267 * C292 - C50288 * C311 + C24268 * C300 - C50289 * C315 +
             C24269 * C1078 - C24264 * C1085) *
                C50224 +
            (C24455 - C24456 + C24457 - C24458 + C24459 - C24460) * C49168 +
            (C24461 - C24462 + C24463 - C24464 + C24465 - C24466) * C49955) *
               C50110 * C50286 +
           ((C50288 * C872 - C24267 * C867 + C50289 * C1538 - C24268 * C1534 +
             C24264 * C3184 - C24269 * C3181) *
                C49175 +
            (C50288 * C882 - C24267 * C873 + C50289 * C1546 - C24268 * C1539 +
             C24264 * C3190 - C24269 * C3185) *
                C50224 +
            (C25159 - C25160 + C25161 - C25162 + C25163 - C25164) * C49168 +
            (C25165 - C25166 + C25167 - C25168 + C25169 - C25170) * C49955) *
               C50110 * C50287 +
           ((C24267 * C1187 - C50288 * C1191 + C24268 * C2635 - C50289 * C2638 +
             C24269 * C3603 - C24264 * C3605) *
                C49175 +
            (C24267 * C1192 - C50288 * C1199 + C24268 * C2639 - C50289 * C2644 +
             C24269 * C3606 - C24264 * C3609) *
                C50224 +
            (C24267 * C1188 - C50288 * C1193 + C24268 * C2636 - C50289 * C2640 +
             C24269 * C3604 - C24264 * C3607) *
                C49168 +
            (C24267 * C1194 - C50288 * C1200 + C24268 * C2641 - C50289 * C2645 +
             C24269 * C3608 - C24264 * C3610) *
                C49955) *
               C50110 * C2064) *
              C50049) *
         C49978) /
        (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50288 * C129 - C24267 * C122 + C50289 * C291 - C24268 * C281 +
             C24264 * C299 - C24269 * C285) *
                C49175 +
            (C50288 * C143 - C24267 * C130 + C50289 * C311 - C24268 * C292 +
             C24264 * C315 - C24269 * C300) *
                C50224 +
            (C24273 - C24274 + C24275 - C24276 + C24277 - C24278) * C49168 +
            (C24279 - C24280 + C24281 - C24282 + C24283 - C24284) * C49955) *
               C50110 * C1648 +
           ((C24267 * C446 - C50288 * C456 + C24268 * C867 - C50289 * C872 +
             C24269 * C1534 - C24264 * C1538) *
                C49175 +
            (C24267 * C457 - C50288 * C476 + C24268 * C873 - C50289 * C882 +
             C24269 * C1539 - C24264 * C1546) *
                C50224 +
            (C24625 - C24626 + C24627 - C24628 + C24629 - C24630) * C49168 +
            (C24631 - C24632 + C24633 - C24634 + C24635 - C24636) * C49955) *
               C50110 * C50077) *
              C276 +
          (((C24267 * C281 - C50288 * C291 + C24268 * C285 - C50289 * C299 +
             C24269 * C1073 - C24264 * C1077) *
                C49175 +
            (C24267 * C292 - C50288 * C311 + C24268 * C300 - C50289 * C315 +
             C24269 * C1078 - C24264 * C1085) *
                C50224 +
            (C24455 - C24456 + C24457 - C24458 + C24459 - C24460) * C49168 +
            (C24461 - C24462 + C24463 - C24464 + C24465 - C24466) * C49955) *
               C50110 * C1648 +
           ((C50288 * C872 - C24267 * C867 + C50289 * C1538 - C24268 * C1534 +
             C24264 * C3184 - C24269 * C3181) *
                C49175 +
            (C50288 * C882 - C24267 * C873 + C50289 * C1546 - C24268 * C1539 +
             C24264 * C3190 - C24269 * C3185) *
                C50224 +
            (C25159 - C25160 + C25161 - C25162 + C25163 - C25164) * C49168 +
            (C25165 - C25166 + C25167 - C25168 + C25169 - C25170) * C49955) *
               C50110 * C50077) *
              C277 +
          (((C50288 * C299 - C24267 * C285 + C50289 * C1077 - C24268 * C1073 +
             C24264 * C2456 - C24269 * C2453) *
                C49175 +
            (C50288 * C315 - C24267 * C300 + C50289 * C1085 - C24268 * C1078 +
             C24264 * C2462 - C24269 * C2457) *
                C50224 +
            (C24467 - C24468 + C24469 - C24470 + C24471 - C24472) * C49168 +
            (C24473 - C24474 + C24475 - C24476 + C24477 - C24478) * C49955) *
               C50110 * C1648 +
           ((C24267 * C1534 - C50288 * C1538 + C24268 * C3181 - C50289 * C3184 +
             C24269 * C4097 - C24264 * C4099) *
                C49175 +
            (C24267 * C1539 - C50288 * C1546 + C24268 * C3185 - C50289 * C3190 +
             C24269 * C4100 - C24264 * C4103) *
                C50224 +
            (C24267 * C1535 - C50288 * C1540 + C24268 * C3182 - C50289 * C3186 +
             C24269 * C4098 - C24264 * C4101) *
                C49168 +
            (C24267 * C1541 - C50288 * C1547 + C24268 * C3187 - C50289 * C3191 +
             C24269 * C4102 - C24264 * C4104) *
                C49955) *
               C50110 * C50077) *
              C278) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50288 * C129 - C24267 * C122 + C50289 * C291 - C24268 * C281 +
             C24264 * C299 - C24269 * C285) *
                C49175 +
            (C50288 * C143 - C24267 * C130 + C50289 * C311 - C24268 * C292 +
             C24264 * C315 - C24269 * C300) *
                C50224 +
            (C24273 - C24274 + C24275 - C24276 + C24277 - C24278) * C49168 +
            (C24279 - C24280 + C24281 - C24282 + C24283 - C24284) * C49955) *
               C50110 * C1648 +
           ((C24267 * C446 - C50288 * C456 + C24268 * C867 - C50289 * C872 +
             C24269 * C1534 - C24264 * C1538) *
                C49175 +
            (C24267 * C457 - C50288 * C476 + C24268 * C873 - C50289 * C882 +
             C24269 * C1539 - C24264 * C1546) *
                C50224 +
            (C24625 - C24626 + C24627 - C24628 + C24629 - C24630) * C49168 +
            (C24631 - C24632 + C24633 - C24634 + C24635 - C24636) * C49955) *
               C50110 * C50077) *
              C49997 * C999 +
          (((C24274 - C24273 + C24276 - C24275 + C24278 - C24277) * C49175 +
            (C24280 - C24279 + C24282 - C24281 + C24284 - C24283) * C50224 +
            (C24285 - C24286 + C24287 - C24288 + C24289 - C24290) * C49168 +
            (C24291 - C24292 + C24293 - C24294 + C24295 - C24296) * C49955) *
               C50110 * C1648 +
           ((C24626 - C24625 + C24628 - C24627 + C24630 - C24629) * C49175 +
            (C24632 - C24631 + C24634 - C24633 + C24636 - C24635) * C50224 +
            (C24953 - C24954 + C24955 - C24956 + C24957 - C24958) * C49168 +
            (C24959 - C24960 + C24961 - C24962 + C24963 - C24964) * C49955) *
               C50110 * C50077) *
              C49997 * C1000 +
          (((C24286 - C24285 + C24288 - C24287 + C24290 - C24289) * C49175 +
            (C24292 - C24291 + C24294 - C24293 + C24296 - C24295) * C50224 +
            (C24297 - C24298 + C24299 - C24300 + C24301 - C24302) * C49168 +
            (C24303 - C24304 + C24305 - C24306 + C24307 - C24308) * C49955) *
               C50110 * C1648 +
           ((C24954 - C24953 + C24956 - C24955 + C24958 - C24957) * C49175 +
            (C24960 - C24959 + C24962 - C24961 + C24964 - C24963) * C50224 +
            (C24267 * C449 - C50288 * C462 + C24268 * C870 - C50289 * C878 +
             C24269 * C1537 - C24264 * C1544) *
                C49168 +
            (C24267 * C463 - C50288 * C479 + C24268 * C879 - C50289 * C885 +
             C24269 * C1545 - C24264 * C1549) *
                C49955) *
               C50110 * C50077) *
              C49997 * C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C50288 * C129 - C24267 * C122 + C50289 * C291 - C24268 * C281 +
            C24264 * C299 - C24269 * C285) *
               C49175 +
           (C50288 * C143 - C24267 * C130 + C50289 * C311 - C24268 * C292 +
            C24264 * C315 - C24269 * C300) *
               C50224 +
           (C24273 - C24274 + C24275 - C24276 + C24277 - C24278) * C49168 +
           (C24279 - C24280 + C24281 - C24282 + C24283 - C24284) * C49955) *
              C50110 * C1814 +
          ((C24267 * C446 - C50288 * C456 + C24268 * C867 - C50289 * C872 +
            C24269 * C1534 - C24264 * C1538) *
               C49175 +
           (C24267 * C457 - C50288 * C476 + C24268 * C873 - C50289 * C882 +
            C24269 * C1539 - C24264 * C1546) *
               C50224 +
           (C24625 - C24626 + C24627 - C24628 + C24629 - C24630) * C49168 +
           (C24631 - C24632 + C24633 - C24634 + C24635 - C24636) * C49955) *
              C50110 * C1815 +
          ((C50288 * C464 - C24267 * C450 + C50289 * C1191 - C24268 * C1187 +
            C24264 * C2638 - C24269 * C2635) *
               C49175 +
           (C50288 * C480 - C24267 * C465 + C50289 * C1199 - C24268 * C1192 +
            C24264 * C2644 - C24269 * C2639) *
               C50224 +
           (C24637 - C24638 + C24639 - C24640 + C24641 - C24642) * C49168 +
           (C24643 - C24644 + C24645 - C24646 + C24647 - C24648) * C49955) *
              C50110 * C1816 +
          ((C24267 * C1818 - C50288 * C1822 + C24268 * C4495 - C50289 * C4499 +
            C24269 * C4496 - C24264 * C4500) *
               C49175 +
           (C24267 * C1823 - C50288 * C1830 + C24268 * C4501 - C50289 * C4507 +
            C24269 * C4502 - C24264 * C4508) *
               C50224 +
           (C24267 * C1819 - C50288 * C1824 + C24268 * C4497 - C50289 * C4503 +
            C24269 * C4498 - C24264 * C4504) *
               C49168 +
           (C24267 * C1825 - C50288 * C1831 + C24268 * C4505 - C50289 * C4509 +
            C24269 * C4506 - C24264 * C4510) *
               C49955) *
              C50110 * C1817) *
         C49997 * C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C50288 * C129 - C24267 * C122 + C50289 * C291 - C24268 * C281 +
             C24264 * C299 - C24269 * C285) *
                C49175 +
            (C50288 * C143 - C24267 * C130 + C50289 * C311 - C24268 * C292 +
             C24264 * C315 - C24269 * C300) *
                C50224 +
            (C24273 - C24274 + C24275 - C24276 + C24277 - C24278) * C49168 +
            (C24279 - C24280 + C24281 - C24282 + C24283 - C24284) * C49955) *
               C50110 * C50286 +
           ((C24267 * C446 - C50288 * C456 + C24268 * C867 - C50289 * C872 +
             C24269 * C1534 - C24264 * C1538) *
                C49175 +
            (C24267 * C457 - C50288 * C476 + C24268 * C873 - C50289 * C882 +
             C24269 * C1539 - C24264 * C1546) *
                C50224 +
            (C24625 - C24626 + C24627 - C24628 + C24629 - C24630) * C49168 +
            (C24631 - C24632 + C24633 - C24634 + C24635 - C24636) * C49955) *
               C50110 * C50287 +
           ((C50288 * C464 - C24267 * C450 + C50289 * C1191 - C24268 * C1187 +
             C24264 * C2638 - C24269 * C2635) *
                C49175 +
            (C50288 * C480 - C24267 * C465 + C50289 * C1199 - C24268 * C1192 +
             C24264 * C2644 - C24269 * C2639) *
                C50224 +
            (C24637 - C24638 + C24639 - C24640 + C24641 - C24642) * C49168 +
            (C24643 - C24644 + C24645 - C24646 + C24647 - C24648) * C49955) *
               C50110 * C2064) *
              C49997 * C50231 +
          (((C24274 - C24273 + C24276 - C24275 + C24278 - C24277) * C49175 +
            (C24280 - C24279 + C24282 - C24281 + C24284 - C24283) * C50224 +
            (C24285 - C24286 + C24287 - C24288 + C24289 - C24290) * C49168 +
            (C24291 - C24292 + C24293 - C24294 + C24295 - C24296) * C49955) *
               C50110 * C50286 +
           ((C24626 - C24625 + C24628 - C24627 + C24630 - C24629) * C49175 +
            (C24632 - C24631 + C24634 - C24633 + C24636 - C24635) * C50224 +
            (C24953 - C24954 + C24955 - C24956 + C24957 - C24958) * C49168 +
            (C24959 - C24960 + C24961 - C24962 + C24963 - C24964) * C49955) *
               C50110 * C50287 +
           ((C24638 - C24637 + C24640 - C24639 + C24642 - C24641) * C49175 +
            (C24644 - C24643 + C24646 - C24645 + C24648 - C24647) * C50224 +
            (C24267 * C452 - C50288 * C468 + C24268 * C1189 - C50289 * C1195 +
             C24269 * C2637 - C24264 * C2642) *
                C49168 +
            (C24267 * C469 - C50288 * C482 + C24268 * C1196 - C50289 * C1201 +
             C24269 * C2643 - C24264 * C2646) *
                C49955) *
               C50110 * C2064) *
              C49997 * C49984)) /
        (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50288 * C129 - C24267 * C122 + C50289 * C291 - C24268 * C281 +
             C24264 * C299 - C24269 * C285) *
                C49175 +
            (C50288 * C143 - C24267 * C130 + C50289 * C311 - C24268 * C292 +
             C24264 * C315 - C24269 * C300) *
                C50224 +
            (C24273 - C24274 + C24275 - C24276 + C24277 - C24278) * C49168 +
            (C24279 - C24280 + C24281 - C24282 + C24283 - C24284) * C49955) *
               C50110 * C1648 +
           ((C24267 * C446 - C50288 * C456 + C24268 * C867 - C50289 * C872 +
             C24269 * C1534 - C24264 * C1538) *
                C49175 +
            (C24267 * C457 - C50288 * C476 + C24268 * C873 - C50289 * C882 +
             C24269 * C1539 - C24264 * C1546) *
                C50224 +
            (C24625 - C24626 + C24627 - C24628 + C24629 - C24630) * C49168 +
            (C24631 - C24632 + C24633 - C24634 + C24635 - C24636) * C49955) *
               C50110 * C50077) *
              C49997 * C999 +
          (((C24274 - C24273 + C24276 - C24275 + C24278 - C24277) * C49175 +
            (C24280 - C24279 + C24282 - C24281 + C24284 - C24283) * C50224 +
            (C24285 - C24286 + C24287 - C24288 + C24289 - C24290) * C49168 +
            (C24291 - C24292 + C24293 - C24294 + C24295 - C24296) * C49955) *
               C50110 * C1648 +
           ((C24626 - C24625 + C24628 - C24627 + C24630 - C24629) * C49175 +
            (C24632 - C24631 + C24634 - C24633 + C24636 - C24635) * C50224 +
            (C24953 - C24954 + C24955 - C24956 + C24957 - C24958) * C49168 +
            (C24959 - C24960 + C24961 - C24962 + C24963 - C24964) * C49955) *
               C50110 * C50077) *
              C49997 * C1000 +
          (((C24286 - C24285 + C24288 - C24287 + C24290 - C24289) * C49175 +
            (C24292 - C24291 + C24294 - C24293 + C24296 - C24295) * C50224 +
            (C24297 - C24298 + C24299 - C24300 + C24301 - C24302) * C49168 +
            (C24303 - C24304 + C24305 - C24306 + C24307 - C24308) * C49955) *
               C50110 * C1648 +
           ((C24954 - C24953 + C24956 - C24955 + C24958 - C24957) * C49175 +
            (C24960 - C24959 + C24962 - C24961 + C24964 - C24963) * C50224 +
            (C24267 * C449 - C50288 * C462 + C24268 * C870 - C50289 * C878 +
             C24269 * C1537 - C24264 * C1544) *
                C49168 +
            (C24267 * C463 - C50288 * C479 + C24268 * C879 - C50289 * C885 +
             C24269 * C1545 - C24264 * C1549) *
                C49955) *
               C50110 * C50077) *
              C49997 * C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50288 * C129 - C24267 * C122 + C50289 * C291 - C24268 * C281 +
             C24264 * C299 - C24269 * C285) *
                C49175 +
            (C50288 * C143 - C24267 * C130 + C50289 * C311 - C24268 * C292 +
             C24264 * C315 - C24269 * C300) *
                C50224 +
            (C24273 - C24274 + C24275 - C24276 + C24277 - C24278) * C49168 +
            (C24279 - C24280 + C24281 - C24282 + C24283 - C24284) * C49955) *
               C50110 * C1648 +
           ((C24267 * C446 - C50288 * C456 + C24268 * C867 - C50289 * C872 +
             C24269 * C1534 - C24264 * C1538) *
                C49175 +
            (C24267 * C457 - C50288 * C476 + C24268 * C873 - C50289 * C882 +
             C24269 * C1539 - C24264 * C1546) *
                C50224 +
            (C24625 - C24626 + C24627 - C24628 + C24629 - C24630) * C49168 +
            (C24631 - C24632 + C24633 - C24634 + C24635 - C24636) * C49955) *
               C50110 * C50077) *
              C276 +
          (((C24267 * C281 - C50288 * C291 + C24268 * C285 - C50289 * C299 +
             C24269 * C1073 - C24264 * C1077) *
                C49175 +
            (C24267 * C292 - C50288 * C311 + C24268 * C300 - C50289 * C315 +
             C24269 * C1078 - C24264 * C1085) *
                C50224 +
            (C24455 - C24456 + C24457 - C24458 + C24459 - C24460) * C49168 +
            (C24461 - C24462 + C24463 - C24464 + C24465 - C24466) * C49955) *
               C50110 * C1648 +
           ((C50288 * C872 - C24267 * C867 + C50289 * C1538 - C24268 * C1534 +
             C24264 * C3184 - C24269 * C3181) *
                C49175 +
            (C50288 * C882 - C24267 * C873 + C50289 * C1546 - C24268 * C1539 +
             C24264 * C3190 - C24269 * C3185) *
                C50224 +
            (C25159 - C25160 + C25161 - C25162 + C25163 - C25164) * C49168 +
            (C25165 - C25166 + C25167 - C25168 + C25169 - C25170) * C49955) *
               C50110 * C50077) *
              C277 +
          (((C50288 * C299 - C24267 * C285 + C50289 * C1077 - C24268 * C1073 +
             C24264 * C2456 - C24269 * C2453) *
                C49175 +
            (C50288 * C315 - C24267 * C300 + C50289 * C1085 - C24268 * C1078 +
             C24264 * C2462 - C24269 * C2457) *
                C50224 +
            (C24467 - C24468 + C24469 - C24470 + C24471 - C24472) * C49168 +
            (C24473 - C24474 + C24475 - C24476 + C24477 - C24478) * C49955) *
               C50110 * C1648 +
           ((C24267 * C1534 - C50288 * C1538 + C24268 * C3181 - C50289 * C3184 +
             C24269 * C4097 - C24264 * C4099) *
                C49175 +
            (C24267 * C1539 - C50288 * C1546 + C24268 * C3185 - C50289 * C3190 +
             C24269 * C4100 - C24264 * C4103) *
                C50224 +
            (C24267 * C1535 - C50288 * C1540 + C24268 * C3182 - C50289 * C3186 +
             C24269 * C4098 - C24264 * C4101) *
                C49168 +
            (C24267 * C1541 - C50288 * C1547 + C24268 * C3187 - C50289 * C3191 +
             C24269 * C4102 - C24264 * C4104) *
                C49955) *
               C50110 * C50077) *
              C278) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50288 * C129 - C24267 * C122 + C50289 * C291 - C24268 * C281 +
              C24264 * C299 - C24269 * C285) *
                 C19689 +
             (C50288 * C143 - C24267 * C130 + C50289 * C311 - C24268 * C292 +
              C24264 * C315 - C24269 * C300) *
                 C49950) *
                C50253 +
            ((C30849 - C30850 + C30851 - C30852 + C30853 - C30854) * C19689 +
             (C30855 - C30856 + C30857 - C30858 + C30859 - C30860) * C49950) *
                C50174) *
               C50013 * C50239 +
           (((C24267 * C281 - C50288 * C291 + C24268 * C285 - C50289 * C299 +
              C24269 * C1073 - C24264 * C1077) *
                 C19689 +
             (C24267 * C292 - C50288 * C311 + C24268 * C300 - C50289 * C315 +
              C24269 * C1078 - C24264 * C1085) *
                 C49950) *
                C50253 +
            ((C24267 * C867 - C50288 * C872 + C24268 * C1534 - C50289 * C1538 +
              C24269 * C3181 - C24264 * C3184) *
                 C19689 +
             (C24267 * C873 - C50288 * C882 + C24268 * C1539 - C50289 * C1546 +
              C24269 * C3185 - C24264 * C3190) *
                 C49950) *
                C50174) *
               C50013 * C50049) *
              C50282 +
          ((((C24274 - C24273 + C24276 - C24275 + C24278 - C24277) * C19689 +
             (C24280 - C24279 + C24282 - C24281 + C24284 - C24283) * C49950) *
                C50253 +
            ((C24625 - C24626 + C24627 - C24628 + C24629 - C24630) * C19689 +
             (C24631 - C24632 + C24633 - C24634 + C24635 - C24636) * C49950) *
                C50174) *
               C50013 * C50239 +
           (((C24456 - C24455 + C24458 - C24457 + C24460 - C24459) * C19689 +
             (C24462 - C24461 + C24464 - C24463 + C24466 - C24465) * C49950) *
                C50253 +
            ((C25159 - C25160 + C25161 - C25162 + C25163 - C25164) * C19689 +
             (C25165 - C25166 + C25167 - C25168 + C25169 - C25170) * C49950) *
                C50174) *
               C50013 * C50049) *
              C50283 +
          ((((C24286 - C24285 + C24288 - C24287 + C24290 - C24289) * C19689 +
             (C24292 - C24291 + C24294 - C24293 + C24296 - C24295) * C49950) *
                C50253 +
            ((C24953 - C24954 + C24955 - C24956 + C24957 - C24958) * C19689 +
             (C24959 - C24960 + C24961 - C24962 + C24963 - C24964) * C49950) *
                C50174) *
               C50013 * C50239 +
           (((C24796 - C24795 + C24798 - C24797 + C24800 - C24799) * C19689 +
             (C24802 - C24801 + C24804 - C24803 + C24806 - C24805) * C49950) *
                C50253 +
            ((C24267 * C869 - C50288 * C876 + C24268 * C1536 - C50289 * C1542 +
              C24269 * C3183 - C24264 * C3188) *
                 C19689 +
             (C24267 * C877 - C50288 * C884 + C24268 * C1543 - C50289 * C1548 +
              C24269 * C3189 - C24264 * C3192) *
                 C49950) *
                C50174) *
               C50013 * C50049) *
              C612)) /
        (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50288 * C129 - C24267 * C122 + C50289 * C291 - C24268 * C281 +
               C24264 * C299 - C24269 * C285) *
                  C19689 +
              (C50288 * C143 - C24267 * C130 + C50289 * C311 - C24268 * C292 +
               C24264 * C315 - C24269 * C300) *
                  C49950) *
                 C50253 +
             ((C30849 - C30850 + C30851 - C30852 + C30853 - C30854) * C19689 +
              (C30855 - C30856 + C30857 - C30858 + C30859 - C30860) * C49950) *
                 C50174) *
                C50240 +
            (((C30850 - C30849 + C30852 - C30851 + C30854 - C30853) * C19689 +
              (C30856 - C30855 + C30858 - C30857 + C30860 - C30859) * C49950) *
                 C50253 +
             ((C30861 - C30862 + C30863 - C30864 + C30865 - C30866) * C19689 +
              (C30867 - C30868 + C30869 - C30870 + C30871 - C30872) * C49950) *
                 C50174) *
                C50077) *
               C50239 +
           ((((C24267 * C281 - C50288 * C291 + C24268 * C285 - C50289 * C299 +
               C24269 * C1073 - C24264 * C1077) *
                  C19689 +
              (C24267 * C292 - C50288 * C311 + C24268 * C300 - C50289 * C315 +
               C24269 * C1078 - C24264 * C1085) *
                  C49950) *
                 C50253 +
             ((C31359 - C31360 + C31361 - C31362 + C31363 - C31364) * C19689 +
              (C31365 - C31366 + C31367 - C31368 + C31369 - C31370) * C49950) *
                 C50174) *
                C50240 +
            (((C31360 - C31359 + C31362 - C31361 + C31364 - C31363) * C19689 +
              (C31366 - C31365 + C31368 - C31367 + C31370 - C31369) * C49950) *
                 C50253 +
             ((C50288 * C1191 - C24267 * C1187 + C50289 * C2638 -
               C24268 * C2635 + C24264 * C3605 - C24269 * C3603) *
                  C19689 +
              (C50288 * C1199 - C24267 * C1192 + C50289 * C2644 -
               C24268 * C2639 + C24264 * C3609 - C24269 * C3606) *
                  C49950) *
                 C50174) *
                C50077) *
               C50049) *
              C279 +
          (((((C24274 - C24273 + C24276 - C24275 + C24278 - C24277) * C19689 +
              (C24280 - C24279 + C24282 - C24281 + C24284 - C24283) * C49950) *
                 C50253 +
             ((C24625 - C24626 + C24627 - C24628 + C24629 - C24630) * C19689 +
              (C24631 - C24632 + C24633 - C24634 + C24635 - C24636) * C49950) *
                 C50174) *
                C50240 +
            (((C24626 - C24625 + C24628 - C24627 + C24630 - C24629) * C19689 +
              (C24632 - C24631 + C24634 - C24633 + C24636 - C24635) * C49950) *
                 C50253 +
             ((C24637 - C24638 + C24639 - C24640 + C24641 - C24642) * C19689 +
              (C24643 - C24644 + C24645 - C24646 + C24647 - C24648) * C49950) *
                 C50174) *
                C50077) *
               C50239 +
           ((((C24456 - C24455 + C24458 - C24457 + C24460 - C24459) * C19689 +
              (C24462 - C24461 + C24464 - C24463 + C24466 - C24465) * C49950) *
                 C50253 +
             ((C25159 - C25160 + C25161 - C25162 + C25163 - C25164) * C19689 +
              (C25165 - C25166 + C25167 - C25168 + C25169 - C25170) * C49950) *
                 C50174) *
                C50240 +
            (((C25160 - C25159 + C25162 - C25161 + C25164 - C25163) * C19689 +
              (C25166 - C25165 + C25168 - C25167 + C25170 - C25169) * C49950) *
                 C50253 +
             ((C24267 * C1188 - C50288 * C1193 + C24268 * C2636 -
               C50289 * C2640 + C24269 * C3604 - C24264 * C3607) *
                  C19689 +
              (C24267 * C1194 - C50288 * C1200 + C24268 * C2641 -
               C50289 * C2645 + C24269 * C3608 - C24264 * C3610) *
                  C49950) *
                 C50174) *
                C50077) *
               C50049) *
              C49984)) /
        (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50288 * C129 - C24267 * C122 + C50289 * C291 - C24268 * C281 +
              C24264 * C299 - C24269 * C285) *
                 C19689 +
             (C50288 * C143 - C24267 * C130 + C50289 * C311 - C24268 * C292 +
              C24264 * C315 - C24269 * C300) *
                 C49950) *
                C50253 +
            ((C50288 * C456 - C24267 * C446 + C50289 * C872 - C24268 * C867 +
              C24264 * C1538 - C24269 * C1534) *
                 C19689 +
             (C50288 * C476 - C24267 * C457 + C50289 * C882 - C24268 * C873 +
              C24264 * C1546 - C24269 * C1539) *
                 C49950) *
                C50174) *
               C50013 * C276 +
           (((C24267 * C281 - C50288 * C291 + C24268 * C285 - C50289 * C299 +
              C24269 * C1073 - C24264 * C1077) *
                 C19689 +
             (C24267 * C292 - C50288 * C311 + C24268 * C300 - C50289 * C315 +
              C24269 * C1078 - C24264 * C1085) *
                 C49950) *
                C50253 +
            ((C24267 * C867 - C50288 * C872 + C24268 * C1534 - C50289 * C1538 +
              C24269 * C3181 - C24264 * C3184) *
                 C19689 +
             (C24267 * C873 - C50288 * C882 + C24268 * C1539 - C50289 * C1546 +
              C24269 * C3185 - C24264 * C3190) *
                 C49950) *
                C50174) *
               C50013 * C277 +
           (((C50288 * C299 - C24267 * C285 + C50289 * C1077 - C24268 * C1073 +
              C24264 * C2456 - C24269 * C2453) *
                 C19689 +
             (C50288 * C315 - C24267 * C300 + C50289 * C1085 - C24268 * C1078 +
              C24264 * C2462 - C24269 * C2457) *
                 C49950) *
                C50253 +
            ((C50288 * C1538 - C24267 * C1534 + C50289 * C3184 -
              C24268 * C3181 + C24264 * C4099 - C24269 * C4097) *
                 C19689 +
             (C50288 * C1546 - C24267 * C1539 + C50289 * C3190 -
              C24268 * C3185 + C24264 * C4103 - C24269 * C4100) *
                 C49950) *
                C50174) *
               C50013 * C278) *
              C279 +
          ((((C24274 - C24273 + C24276 - C24275 + C24278 - C24277) * C19689 +
             (C24280 - C24279 + C24282 - C24281 + C24284 - C24283) * C49950) *
                C50253 +
            ((C24625 - C24626 + C24627 - C24628 + C24629 - C24630) * C19689 +
             (C24631 - C24632 + C24633 - C24634 + C24635 - C24636) * C49950) *
                C50174) *
               C50013 * C276 +
           (((C24456 - C24455 + C24458 - C24457 + C24460 - C24459) * C19689 +
             (C24462 - C24461 + C24464 - C24463 + C24466 - C24465) * C49950) *
                C50253 +
            ((C25159 - C25160 + C25161 - C25162 + C25163 - C25164) * C19689 +
             (C25165 - C25166 + C25167 - C25168 + C25169 - C25170) * C49950) *
                C50174) *
               C50013 * C277 +
           (((C24468 - C24467 + C24470 - C24469 + C24472 - C24471) * C19689 +
             (C24474 - C24473 + C24476 - C24475 + C24478 - C24477) * C49950) *
                C50253 +
            ((C24267 * C1535 - C50288 * C1540 + C24268 * C3182 -
              C50289 * C3186 + C24269 * C4098 - C24264 * C4101) *
                 C19689 +
             (C24267 * C1541 - C50288 * C1547 + C24268 * C3187 -
              C50289 * C3191 + C24269 * C4102 - C24264 * C4104) *
                 C49950) *
                C50174) *
               C50013 * C278) *
              C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50288 * C129 - C24267 * C122 + C50289 * C291 - C24268 * C281 +
             C24264 * C299 - C24269 * C285) *
                C19689 +
            (C50288 * C143 - C24267 * C130 + C50289 * C311 - C24268 * C292 +
             C24264 * C315 - C24269 * C300) *
                C49950) *
               C50253 +
           ((C50288 * C456 - C24267 * C446 + C50289 * C872 - C24268 * C867 +
             C24264 * C1538 - C24269 * C1534) *
                C19689 +
            (C50288 * C476 - C24267 * C457 + C50289 * C882 - C24268 * C873 +
             C24264 * C1546 - C24269 * C1539) *
                C49950) *
               C50174) *
              C50013 * C49997 * C113 +
          (((C24274 - C24273 + C24276 - C24275 + C24278 - C24277) * C19689 +
            (C24280 - C24279 + C24282 - C24281 + C24284 - C24283) * C49950) *
               C50253 +
           ((C24625 - C24626 + C24627 - C24628 + C24629 - C24630) * C19689 +
            (C24631 - C24632 + C24633 - C24634 + C24635 - C24636) * C49950) *
               C50174) *
              C50013 * C49997 * C114 +
          (((C24286 - C24285 + C24288 - C24287 + C24290 - C24289) * C19689 +
            (C24292 - C24291 + C24294 - C24293 + C24296 - C24295) * C49950) *
               C50253 +
           ((C24953 - C24954 + C24955 - C24956 + C24957 - C24958) * C19689 +
            (C24959 - C24960 + C24961 - C24962 + C24963 - C24964) * C49950) *
               C50174) *
              C50013 * C49997 * C115 +
          (((C24298 - C24297 + C24300 - C24299 + C24302 - C24301) * C19689 +
            (C24304 - C24303 + C24306 - C24305 + C24308 - C24307) * C49950) *
               C50253 +
           ((C24267 * C449 - C50288 * C462 + C24268 * C870 - C50289 * C878 +
             C24269 * C1537 - C24264 * C1544) *
                C19689 +
            (C24267 * C463 - C50288 * C479 + C24268 * C879 - C50289 * C885 +
             C24269 * C1545 - C24264 * C1549) *
                C49950) *
               C50174) *
              C50013 * C49997 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50288 * C129 - C24267 * C122 + C50289 * C291 - C24268 * C281 +
              C24264 * C299 - C24269 * C285) *
                 C19689 +
             (C50288 * C143 - C24267 * C130 + C50289 * C311 - C24268 * C292 +
              C24264 * C315 - C24269 * C300) *
                 C49950) *
                C50253 +
            ((C30849 - C30850 + C30851 - C30852 + C30853 - C30854) * C19689 +
             (C30855 - C30856 + C30857 - C30858 + C30859 - C30860) * C49950) *
                C50174) *
               C443 +
           (((C30850 - C30849 + C30852 - C30851 + C30854 - C30853) * C19689 +
             (C30856 - C30855 + C30858 - C30857 + C30860 - C30859) * C49950) *
                C50253 +
            ((C30861 - C30862 + C30863 - C30864 + C30865 - C30866) * C19689 +
             (C30867 - C30868 + C30869 - C30870 + C30871 - C30872) * C49950) *
                C50174) *
               C444 +
           (((C30862 - C30861 + C30864 - C30863 + C30866 - C30865) * C19689 +
             (C30868 - C30867 + C30870 - C30869 + C30872 - C30871) * C49950) *
                C50253 +
            ((C50288 * C1822 - C24267 * C1818 + C50289 * C4499 -
              C24268 * C4495 + C24264 * C4500 - C24269 * C4496) *
                 C19689 +
             (C50288 * C1830 - C24267 * C1823 + C50289 * C4507 -
              C24268 * C4501 + C24264 * C4508 - C24269 * C4502) *
                 C49950) *
                C50174) *
               C445) *
              C49997 * C279 +
          ((((C24274 - C24273 + C24276 - C24275 + C24278 - C24277) * C19689 +
             (C24280 - C24279 + C24282 - C24281 + C24284 - C24283) * C49950) *
                C50253 +
            ((C24625 - C24626 + C24627 - C24628 + C24629 - C24630) * C19689 +
             (C24631 - C24632 + C24633 - C24634 + C24635 - C24636) * C49950) *
                C50174) *
               C443 +
           (((C24626 - C24625 + C24628 - C24627 + C24630 - C24629) * C19689 +
             (C24632 - C24631 + C24634 - C24633 + C24636 - C24635) * C49950) *
                C50253 +
            ((C24637 - C24638 + C24639 - C24640 + C24641 - C24642) * C19689 +
             (C24643 - C24644 + C24645 - C24646 + C24647 - C24648) * C49950) *
                C50174) *
               C444 +
           (((C24638 - C24637 + C24640 - C24639 + C24642 - C24641) * C19689 +
             (C24644 - C24643 + C24646 - C24645 + C24648 - C24647) * C49950) *
                C50253 +
            ((C24267 * C1819 - C50288 * C1824 + C24268 * C4497 -
              C50289 * C4503 + C24269 * C4498 - C24264 * C4504) *
                 C19689 +
             (C24267 * C1825 - C50288 * C1831 + C24268 * C4505 -
              C50289 * C4509 + C24269 * C4506 - C24264 * C4510) *
                 C49950) *
                C50174) *
               C445) *
              C49997 * C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50288 * C129 - C24267 * C122 + C50289 * C291 - C24268 * C281 +
              C24264 * C299 - C24269 * C285) *
                 C19689 +
             (C50288 * C143 - C24267 * C130 + C50289 * C311 - C24268 * C292 +
              C24264 * C315 - C24269 * C300) *
                 C49950) *
                C50253 +
            ((C30849 - C30850 + C30851 - C30852 + C30853 - C30854) * C19689 +
             (C30855 - C30856 + C30857 - C30858 + C30859 - C30860) * C49950) *
                C50174) *
               C50240 +
           (((C30850 - C30849 + C30852 - C30851 + C30854 - C30853) * C19689 +
             (C30856 - C30855 + C30858 - C30857 + C30860 - C30859) * C49950) *
                C50253 +
            ((C30861 - C30862 + C30863 - C30864 + C30865 - C30866) * C19689 +
             (C30867 - C30868 + C30869 - C30870 + C30871 - C30872) * C49950) *
                C50174) *
               C50077) *
              C49997 * C50282 +
          ((((C24274 - C24273 + C24276 - C24275 + C24278 - C24277) * C19689 +
             (C24280 - C24279 + C24282 - C24281 + C24284 - C24283) * C49950) *
                C50253 +
            ((C24625 - C24626 + C24627 - C24628 + C24629 - C24630) * C19689 +
             (C24631 - C24632 + C24633 - C24634 + C24635 - C24636) * C49950) *
                C50174) *
               C50240 +
           (((C24626 - C24625 + C24628 - C24627 + C24630 - C24629) * C19689 +
             (C24632 - C24631 + C24634 - C24633 + C24636 - C24635) * C49950) *
                C50253 +
            ((C24637 - C24638 + C24639 - C24640 + C24641 - C24642) * C19689 +
             (C24643 - C24644 + C24645 - C24646 + C24647 - C24648) * C49950) *
                C50174) *
               C50077) *
              C49997 * C50283 +
          ((((C24286 - C24285 + C24288 - C24287 + C24290 - C24289) * C19689 +
             (C24292 - C24291 + C24294 - C24293 + C24296 - C24295) * C49950) *
                C50253 +
            ((C24953 - C24954 + C24955 - C24956 + C24957 - C24958) * C19689 +
             (C24959 - C24960 + C24961 - C24962 + C24963 - C24964) * C49950) *
                C50174) *
               C50240 +
           (((C24954 - C24953 + C24956 - C24955 + C24958 - C24957) * C19689 +
             (C24960 - C24959 + C24962 - C24961 + C24964 - C24963) * C49950) *
                C50253 +
            ((C24267 * C452 - C50288 * C468 + C24268 * C1189 - C50289 * C1195 +
              C24269 * C2637 - C24264 * C2642) *
                 C19689 +
             (C24267 * C469 - C50288 * C482 + C24268 * C1196 - C50289 * C1201 +
              C24269 * C2643 - C24264 * C2646) *
                 C49950) *
                C50174) *
               C50077) *
              C49997 * C612)) /
        (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50288 * C129 - C24267 * C122 + C50289 * C291 - C24268 * C281 +
             C24264 * C299 - C24269 * C285) *
                C19689 +
            (C50288 * C143 - C24267 * C130 + C50289 * C311 - C24268 * C292 +
             C24264 * C315 - C24269 * C300) *
                C49950) *
               C50253 +
           ((C50288 * C456 - C24267 * C446 + C50289 * C872 - C24268 * C867 +
             C24264 * C1538 - C24269 * C1534) *
                C19689 +
            (C50288 * C476 - C24267 * C457 + C50289 * C882 - C24268 * C873 +
             C24264 * C1546 - C24269 * C1539) *
                C49950) *
               C50174) *
              C50013 * C49997 * C113 +
          (((C24274 - C24273 + C24276 - C24275 + C24278 - C24277) * C19689 +
            (C24280 - C24279 + C24282 - C24281 + C24284 - C24283) * C49950) *
               C50253 +
           ((C24625 - C24626 + C24627 - C24628 + C24629 - C24630) * C19689 +
            (C24631 - C24632 + C24633 - C24634 + C24635 - C24636) * C49950) *
               C50174) *
              C50013 * C49997 * C114 +
          (((C24286 - C24285 + C24288 - C24287 + C24290 - C24289) * C19689 +
            (C24292 - C24291 + C24294 - C24293 + C24296 - C24295) * C49950) *
               C50253 +
           ((C24953 - C24954 + C24955 - C24956 + C24957 - C24958) * C19689 +
            (C24959 - C24960 + C24961 - C24962 + C24963 - C24964) * C49950) *
               C50174) *
              C50013 * C49997 * C115 +
          (((C24298 - C24297 + C24300 - C24299 + C24302 - C24301) * C19689 +
            (C24304 - C24303 + C24306 - C24305 + C24308 - C24307) * C49950) *
               C50253 +
           ((C24267 * C449 - C50288 * C462 + C24268 * C870 - C50289 * C878 +
             C24269 * C1537 - C24264 * C1544) *
                C19689 +
            (C24267 * C463 - C50288 * C479 + C24268 * C879 - C50289 * C885 +
             C24269 * C1545 - C24264 * C1549) *
                C49950) *
               C50174) *
              C50013 * C49997 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50288 * C129 - C24267 * C122 + C50289 * C291 - C24268 * C281 +
              C24264 * C299 - C24269 * C285) *
                 C19689 +
             (C50288 * C143 - C24267 * C130 + C50289 * C311 - C24268 * C292 +
              C24264 * C315 - C24269 * C300) *
                 C49950) *
                C50253 +
            ((C50288 * C456 - C24267 * C446 + C50289 * C872 - C24268 * C867 +
              C24264 * C1538 - C24269 * C1534) *
                 C19689 +
             (C50288 * C476 - C24267 * C457 + C50289 * C882 - C24268 * C873 +
              C24264 * C1546 - C24269 * C1539) *
                 C49950) *
                C50174) *
               C50013 * C276 +
           (((C24267 * C281 - C50288 * C291 + C24268 * C285 - C50289 * C299 +
              C24269 * C1073 - C24264 * C1077) *
                 C19689 +
             (C24267 * C292 - C50288 * C311 + C24268 * C300 - C50289 * C315 +
              C24269 * C1078 - C24264 * C1085) *
                 C49950) *
                C50253 +
            ((C24267 * C867 - C50288 * C872 + C24268 * C1534 - C50289 * C1538 +
              C24269 * C3181 - C24264 * C3184) *
                 C19689 +
             (C24267 * C873 - C50288 * C882 + C24268 * C1539 - C50289 * C1546 +
              C24269 * C3185 - C24264 * C3190) *
                 C49950) *
                C50174) *
               C50013 * C277 +
           (((C50288 * C299 - C24267 * C285 + C50289 * C1077 - C24268 * C1073 +
              C24264 * C2456 - C24269 * C2453) *
                 C19689 +
             (C50288 * C315 - C24267 * C300 + C50289 * C1085 - C24268 * C1078 +
              C24264 * C2462 - C24269 * C2457) *
                 C49950) *
                C50253 +
            ((C50288 * C1538 - C24267 * C1534 + C50289 * C3184 -
              C24268 * C3181 + C24264 * C4099 - C24269 * C4097) *
                 C19689 +
             (C50288 * C1546 - C24267 * C1539 + C50289 * C3190 -
              C24268 * C3185 + C24264 * C4103 - C24269 * C4100) *
                 C49950) *
                C50174) *
               C50013 * C278) *
              C279 +
          ((((C24274 - C24273 + C24276 - C24275 + C24278 - C24277) * C19689 +
             (C24280 - C24279 + C24282 - C24281 + C24284 - C24283) * C49950) *
                C50253 +
            ((C24625 - C24626 + C24627 - C24628 + C24629 - C24630) * C19689 +
             (C24631 - C24632 + C24633 - C24634 + C24635 - C24636) * C49950) *
                C50174) *
               C50013 * C276 +
           (((C24456 - C24455 + C24458 - C24457 + C24460 - C24459) * C19689 +
             (C24462 - C24461 + C24464 - C24463 + C24466 - C24465) * C49950) *
                C50253 +
            ((C25159 - C25160 + C25161 - C25162 + C25163 - C25164) * C19689 +
             (C25165 - C25166 + C25167 - C25168 + C25169 - C25170) * C49950) *
                C50174) *
               C50013 * C277 +
           (((C24468 - C24467 + C24470 - C24469 + C24472 - C24471) * C19689 +
             (C24474 - C24473 + C24476 - C24475 + C24478 - C24477) * C49950) *
                C50253 +
            ((C24267 * C1535 - C50288 * C1540 + C24268 * C3182 -
              C50289 * C3186 + C24269 * C4098 - C24264 * C4101) *
                 C19689 +
             (C24267 * C1541 - C50288 * C1547 + C24268 * C3187 -
              C50289 * C3191 + C24269 * C4102 - C24264 * C4104) *
                 C49950) *
                C50174) *
               C50013 * C278) *
              C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50288 * C129 - C24267 * C122 + C50289 * C291 - C24268 * C281 +
              C24264 * C299 - C24269 * C285) *
                 C19689 +
             (C50288 * C143 - C24267 * C130 + C50289 * C311 - C24268 * C292 +
              C24264 * C315 - C24269 * C300) *
                 C49950) *
                C50253 +
            ((C30849 - C30850 + C30851 - C30852 + C30853 - C30854) * C19689 +
             (C30855 - C30856 + C30857 - C30858 + C30859 - C30860) * C49950) *
                C50174) *
               C50013 * C50284 +
           (((C24267 * C281 - C50288 * C291 + C24268 * C285 - C50289 * C299 +
              C24269 * C1073 - C24264 * C1077) *
                 C19689 +
             (C24267 * C292 - C50288 * C311 + C24268 * C300 - C50289 * C315 +
              C24269 * C1078 - C24264 * C1085) *
                 C49950) *
                C50253 +
            ((C31359 - C31360 + C31361 - C31362 + C31363 - C31364) * C19689 +
             (C31365 - C31366 + C31367 - C31368 + C31369 - C31370) * C49950) *
                C50174) *
               C50013 * C50285 +
           (((C50288 * C299 - C24267 * C285 + C50289 * C1077 - C24268 * C1073 +
              C24264 * C2456 - C24269 * C2453) *
                 C19689 +
             (C50288 * C315 - C24267 * C300 + C50289 * C1085 - C24268 * C1078 +
              C24264 * C2462 - C24269 * C2457) *
                 C49950) *
                C50253 +
            ((C50288 * C1538 - C24267 * C1534 + C50289 * C3184 -
              C24268 * C3181 + C24264 * C4099 - C24269 * C4097) *
                 C19689 +
             (C50288 * C1546 - C24267 * C1539 + C50289 * C3190 -
              C24268 * C3185 + C24264 * C4103 - C24269 * C4100) *
                 C49950) *
                C50174) *
               C50013 * C1303) *
              C50231 +
          ((((C24274 - C24273 + C24276 - C24275 + C24278 - C24277) * C19689 +
             (C24280 - C24279 + C24282 - C24281 + C24284 - C24283) * C49950) *
                C50253 +
            ((C24625 - C24626 + C24627 - C24628 + C24629 - C24630) * C19689 +
             (C24631 - C24632 + C24633 - C24634 + C24635 - C24636) * C49950) *
                C50174) *
               C50013 * C50284 +
           (((C24456 - C24455 + C24458 - C24457 + C24460 - C24459) * C19689 +
             (C24462 - C24461 + C24464 - C24463 + C24466 - C24465) * C49950) *
                C50253 +
            ((C25159 - C25160 + C25161 - C25162 + C25163 - C25164) * C19689 +
             (C25165 - C25166 + C25167 - C25168 + C25169 - C25170) * C49950) *
                C50174) *
               C50013 * C50285 +
           (((C24468 - C24467 + C24470 - C24469 + C24472 - C24471) * C19689 +
             (C24474 - C24473 + C24476 - C24475 + C24478 - C24477) * C49950) *
                C50253 +
            ((C24267 * C1535 - C50288 * C1540 + C24268 * C3182 -
              C50289 * C3186 + C24269 * C4098 - C24264 * C4101) *
                 C19689 +
             (C24267 * C1541 - C50288 * C1547 + C24268 * C3187 -
              C50289 * C3191 + C24269 * C4102 - C24264 * C4104) *
                 C49950) *
                C50174) *
               C50013 * C1303) *
              C49984)) /
        (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50288 * C129 - C24267 * C122 + C50289 * C291 - C24268 * C281 +
              C24264 * C299 - C24269 * C285) *
                 C19689 +
             (C50288 * C143 - C24267 * C130 + C50289 * C311 - C24268 * C292 +
              C24264 * C315 - C24269 * C300) *
                 C49950) *
                C50253 +
            ((C30849 - C30850 + C30851 - C30852 + C30853 - C30854) * C19689 +
             (C30855 - C30856 + C30857 - C30858 + C30859 - C30860) * C49950) *
                C50174) *
               C50240 +
           (((C30850 - C30849 + C30852 - C30851 + C30854 - C30853) * C19689 +
             (C30856 - C30855 + C30858 - C30857 + C30860 - C30859) * C49950) *
                C50253 +
            ((C30861 - C30862 + C30863 - C30864 + C30865 - C30866) * C19689 +
             (C30867 - C30868 + C30869 - C30870 + C30871 - C30872) * C49950) *
                C50174) *
               C50077) *
              C50284 +
          ((((C24267 * C281 - C50288 * C291 + C24268 * C285 - C50289 * C299 +
              C24269 * C1073 - C24264 * C1077) *
                 C19689 +
             (C24267 * C292 - C50288 * C311 + C24268 * C300 - C50289 * C315 +
              C24269 * C1078 - C24264 * C1085) *
                 C49950) *
                C50253 +
            ((C31359 - C31360 + C31361 - C31362 + C31363 - C31364) * C19689 +
             (C31365 - C31366 + C31367 - C31368 + C31369 - C31370) * C49950) *
                C50174) *
               C50240 +
           (((C31360 - C31359 + C31362 - C31361 + C31364 - C31363) * C19689 +
             (C31366 - C31365 + C31368 - C31367 + C31370 - C31369) * C49950) *
                C50253 +
            ((C31761 - C31762 + C31763 - C31764 + C31765 - C31766) * C19689 +
             (C31767 - C31768 + C31769 - C31770 + C31771 - C31772) * C49950) *
                C50174) *
               C50077) *
              C50285 +
          ((((C50288 * C299 - C24267 * C285 + C50289 * C1077 - C24268 * C1073 +
              C24264 * C2456 - C24269 * C2453) *
                 C19689 +
             (C50288 * C315 - C24267 * C300 + C50289 * C1085 - C24268 * C1078 +
              C24264 * C2462 - C24269 * C2457) *
                 C49950) *
                C50253 +
            ((C32259 - C32260 + C32261 - C32262 + C32263 - C32264) * C19689 +
             (C32265 - C32266 + C32267 - C32268 + C32269 - C32270) * C49950) *
                C50174) *
               C50240 +
           (((C32260 - C32259 + C32262 - C32261 + C32264 - C32263) * C19689 +
             (C32266 - C32265 + C32268 - C32267 + C32270 - C32269) * C49950) *
                C50253 +
            ((C24267 * C2635 - C50288 * C2638 + C24268 * C3603 -
              C50289 * C3605 + C24269 * C20478 - C24264 * C20479) *
                 C19689 +
             (C24267 * C2639 - C50288 * C2644 + C24268 * C3606 -
              C50289 * C3609 + C24269 * C20480 - C24264 * C20481) *
                 C49950) *
                C50174) *
               C50077) *
              C1303) *
         C49978) /
        (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50288 * C129 - C24267 * C122 + C50289 * C291 - C24268 * C281 +
             C24264 * C299 - C24269 * C285) *
                C19689 +
            (C50288 * C143 - C24267 * C130 + C50289 * C311 - C24268 * C292 +
             C24264 * C315 - C24269 * C300) *
                C49950) *
               C50253 +
           ((C30849 - C30850 + C30851 - C30852 + C30853 - C30854) * C19689 +
            (C30855 - C30856 + C30857 - C30858 + C30859 - C30860) * C49950) *
               C50174) *
              C50013 * C1068 +
          (((C24267 * C281 - C50288 * C291 + C24268 * C285 - C50289 * C299 +
             C24269 * C1073 - C24264 * C1077) *
                C19689 +
            (C24267 * C292 - C50288 * C311 + C24268 * C300 - C50289 * C315 +
             C24269 * C1078 - C24264 * C1085) *
                C49950) *
               C50253 +
           ((C31359 - C31360 + C31361 - C31362 + C31363 - C31364) * C19689 +
            (C31365 - C31366 + C31367 - C31368 + C31369 - C31370) * C49950) *
               C50174) *
              C50013 * C1069 +
          (((C50288 * C299 - C24267 * C285 + C50289 * C1077 - C24268 * C1073 +
             C24264 * C2456 - C24269 * C2453) *
                C19689 +
            (C50288 * C315 - C24267 * C300 + C50289 * C1085 - C24268 * C1078 +
             C24264 * C2462 - C24269 * C2457) *
                C49950) *
               C50253 +
           ((C50288 * C1538 - C24267 * C1534 + C50289 * C3184 - C24268 * C3181 +
             C24264 * C4099 - C24269 * C4097) *
                C19689 +
            (C50288 * C1546 - C24267 * C1539 + C50289 * C3190 - C24268 * C3185 +
             C24264 * C4103 - C24269 * C4100) *
                C49950) *
               C50174) *
              C50013 * C1070 +
          (((C24267 * C1073 - C50288 * C1077 + C24268 * C2453 - C50289 * C2456 +
             C24269 * C3449 - C24264 * C3451) *
                C19689 +
            (C24267 * C1078 - C50288 * C1085 + C24268 * C2457 - C50289 * C2462 +
             C24269 * C3452 - C24264 * C3455) *
                C49950) *
               C50253 +
           ((C24267 * C3181 - C50288 * C3184 + C24268 * C4097 - C50289 * C4099 +
             C24269 * C20808 - C24264 * C20809) *
                C19689 +
            (C24267 * C3185 - C50288 * C3190 + C24268 * C4100 - C50289 * C4103 +
             C24269 * C20810 - C24264 * C20811) *
                C49950) *
               C50174) *
              C50013 * C1071) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50288 * C129 - C24267 * C122 + C50289 * C291 - C24268 * C281 +
              C24264 * C299 - C24269 * C285) *
                 C19689 +
             (C50288 * C143 - C24267 * C130 + C50289 * C311 - C24268 * C292 +
              C24264 * C315 - C24269 * C300) *
                 C49950) *
                C50253 +
            ((C30849 - C30850 + C30851 - C30852 + C30853 - C30854) * C19689 +
             (C30855 - C30856 + C30857 - C30858 + C30859 - C30860) * C49950) *
                C50174) *
               C50013 * C997 +
           (((C24267 * C281 - C50288 * C291 + C24268 * C285 - C50289 * C299 +
              C24269 * C1073 - C24264 * C1077) *
                 C19689 +
             (C24267 * C292 - C50288 * C311 + C24268 * C300 - C50289 * C315 +
              C24269 * C1078 - C24264 * C1085) *
                 C49950) *
                C50253 +
            ((C31359 - C31360 + C31361 - C31362 + C31363 - C31364) * C19689 +
             (C31365 - C31366 + C31367 - C31368 + C31369 - C31370) * C49950) *
                C50174) *
               C50013 * C50049) *
              C999 +
          ((((C24274 - C24273 + C24276 - C24275 + C24278 - C24277) * C19689 +
             (C24280 - C24279 + C24282 - C24281 + C24284 - C24283) * C49950) *
                C50253 +
            ((C24625 - C24626 + C24627 - C24628 + C24629 - C24630) * C19689 +
             (C24631 - C24632 + C24633 - C24634 + C24635 - C24636) * C49950) *
                C50174) *
               C50013 * C997 +
           (((C24456 - C24455 + C24458 - C24457 + C24460 - C24459) * C19689 +
             (C24462 - C24461 + C24464 - C24463 + C24466 - C24465) * C49950) *
                C50253 +
            ((C25159 - C25160 + C25161 - C25162 + C25163 - C25164) * C19689 +
             (C25165 - C25166 + C25167 - C25168 + C25169 - C25170) * C49950) *
                C50174) *
               C50013 * C50049) *
              C1000 +
          ((((C24286 - C24285 + C24288 - C24287 + C24290 - C24289) * C19689 +
             (C24292 - C24291 + C24294 - C24293 + C24296 - C24295) * C49950) *
                C50253 +
            ((C24953 - C24954 + C24955 - C24956 + C24957 - C24958) * C19689 +
             (C24959 - C24960 + C24961 - C24962 + C24963 - C24964) * C49950) *
                C50174) *
               C50013 * C997 +
           (((C24796 - C24795 + C24798 - C24797 + C24800 - C24799) * C19689 +
             (C24802 - C24801 + C24804 - C24803 + C24806 - C24805) * C49950) *
                C50253 +
            ((C24267 * C869 - C50288 * C876 + C24268 * C1536 - C50289 * C1542 +
              C24269 * C3183 - C24264 * C3188) *
                 C19689 +
             (C24267 * C877 - C50288 * C884 + C24268 * C1543 - C50289 * C1548 +
              C24269 * C3189 - C24264 * C3192) *
                 C49950) *
                C50174) *
               C50013 * C50049) *
              C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50288 * C129 - C24267 * C122 + C50289 * C291 - C24268 * C281 +
              C24264 * C299 - C24269 * C285) *
                 C19689 +
             (C50288 * C143 - C24267 * C130 + C50289 * C311 - C24268 * C292 +
              C24264 * C315 - C24269 * C300) *
                 C49950) *
                C50253 +
            ((C30849 - C30850 + C30851 - C30852 + C30853 - C30854) * C19689 +
             (C30855 - C30856 + C30857 - C30858 + C30859 - C30860) * C49950) *
                C50174) *
               C443 +
           (((C30850 - C30849 + C30852 - C30851 + C30854 - C30853) * C19689 +
             (C30856 - C30855 + C30858 - C30857 + C30860 - C30859) * C49950) *
                C50253 +
            ((C30861 - C30862 + C30863 - C30864 + C30865 - C30866) * C19689 +
             (C30867 - C30868 + C30869 - C30870 + C30871 - C30872) * C49950) *
                C50174) *
               C444 +
           (((C30862 - C30861 + C30864 - C30863 + C30866 - C30865) * C19689 +
             (C30868 - C30867 + C30870 - C30869 + C30872 - C30871) * C49950) *
                C50253 +
            ((C50288 * C1822 - C24267 * C1818 + C50289 * C4499 -
              C24268 * C4495 + C24264 * C4500 - C24269 * C4496) *
                 C19689 +
             (C50288 * C1830 - C24267 * C1823 + C50289 * C4507 -
              C24268 * C4501 + C24264 * C4508 - C24269 * C4502) *
                 C49950) *
                C50174) *
               C445) *
              C997 +
          ((((C24267 * C281 - C50288 * C291 + C24268 * C285 - C50289 * C299 +
              C24269 * C1073 - C24264 * C1077) *
                 C19689 +
             (C24267 * C292 - C50288 * C311 + C24268 * C300 - C50289 * C315 +
              C24269 * C1078 - C24264 * C1085) *
                 C49950) *
                C50253 +
            ((C31359 - C31360 + C31361 - C31362 + C31363 - C31364) * C19689 +
             (C31365 - C31366 + C31367 - C31368 + C31369 - C31370) * C49950) *
                C50174) *
               C443 +
           (((C31360 - C31359 + C31362 - C31361 + C31364 - C31363) * C19689 +
             (C31366 - C31365 + C31368 - C31367 + C31370 - C31369) * C49950) *
                C50253 +
            ((C31761 - C31762 + C31763 - C31764 + C31765 - C31766) * C19689 +
             (C31767 - C31768 + C31769 - C31770 + C31771 - C31772) * C49950) *
                C50174) *
               C444 +
           (((C31762 - C31761 + C31764 - C31763 + C31766 - C31765) * C19689 +
             (C31768 - C31767 + C31770 - C31769 + C31772 - C31771) * C49950) *
                C50253 +
            ((C24267 * C4495 - C50288 * C4499 + C24268 * C4496 -
              C50289 * C4500 + C24269 * C21074 - C24264 * C21075) *
                 C19689 +
             (C24267 * C4501 - C50288 * C4507 + C24268 * C4502 -
              C50289 * C4508 + C24269 * C21076 - C24264 * C21077) *
                 C49950) *
                C50174) *
               C445) *
              C50049) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50288 * C129 - C24267 * C122 + C50289 * C291 - C24268 * C281 +
               C24264 * C299 - C24269 * C285) *
                  C19689 +
              (C50288 * C143 - C24267 * C130 + C50289 * C311 - C24268 * C292 +
               C24264 * C315 - C24269 * C300) *
                  C49950) *
                 C50253 +
             ((C30849 - C30850 + C30851 - C30852 + C30853 - C30854) * C19689 +
              (C30855 - C30856 + C30857 - C30858 + C30859 - C30860) * C49950) *
                 C50174) *
                C50240 +
            (((C30850 - C30849 + C30852 - C30851 + C30854 - C30853) * C19689 +
              (C30856 - C30855 + C30858 - C30857 + C30860 - C30859) * C49950) *
                 C50253 +
             ((C30861 - C30862 + C30863 - C30864 + C30865 - C30866) * C19689 +
              (C30867 - C30868 + C30869 - C30870 + C30871 - C30872) * C49950) *
                 C50174) *
                C50077) *
               C997 +
           ((((C24267 * C281 - C50288 * C291 + C24268 * C285 - C50289 * C299 +
               C24269 * C1073 - C24264 * C1077) *
                  C19689 +
              (C24267 * C292 - C50288 * C311 + C24268 * C300 - C50289 * C315 +
               C24269 * C1078 - C24264 * C1085) *
                  C49950) *
                 C50253 +
             ((C31359 - C31360 + C31361 - C31362 + C31363 - C31364) * C19689 +
              (C31365 - C31366 + C31367 - C31368 + C31369 - C31370) * C49950) *
                 C50174) *
                C50240 +
            (((C31360 - C31359 + C31362 - C31361 + C31364 - C31363) * C19689 +
              (C31366 - C31365 + C31368 - C31367 + C31370 - C31369) * C49950) *
                 C50253 +
             ((C31761 - C31762 + C31763 - C31764 + C31765 - C31766) * C19689 +
              (C31767 - C31768 + C31769 - C31770 + C31771 - C31772) * C49950) *
                 C50174) *
                C50077) *
               C50049) *
              C50231 +
          (((((C24274 - C24273 + C24276 - C24275 + C24278 - C24277) * C19689 +
              (C24280 - C24279 + C24282 - C24281 + C24284 - C24283) * C49950) *
                 C50253 +
             ((C24625 - C24626 + C24627 - C24628 + C24629 - C24630) * C19689 +
              (C24631 - C24632 + C24633 - C24634 + C24635 - C24636) * C49950) *
                 C50174) *
                C50240 +
            (((C24626 - C24625 + C24628 - C24627 + C24630 - C24629) * C19689 +
              (C24632 - C24631 + C24634 - C24633 + C24636 - C24635) * C49950) *
                 C50253 +
             ((C24637 - C24638 + C24639 - C24640 + C24641 - C24642) * C19689 +
              (C24643 - C24644 + C24645 - C24646 + C24647 - C24648) * C49950) *
                 C50174) *
                C50077) *
               C997 +
           ((((C24456 - C24455 + C24458 - C24457 + C24460 - C24459) * C19689 +
              (C24462 - C24461 + C24464 - C24463 + C24466 - C24465) * C49950) *
                 C50253 +
             ((C25159 - C25160 + C25161 - C25162 + C25163 - C25164) * C19689 +
              (C25165 - C25166 + C25167 - C25168 + C25169 - C25170) * C49950) *
                 C50174) *
                C50240 +
            (((C25160 - C25159 + C25162 - C25161 + C25164 - C25163) * C19689 +
              (C25166 - C25165 + C25168 - C25167 + C25170 - C25169) * C49950) *
                 C50253 +
             ((C24267 * C1188 - C50288 * C1193 + C24268 * C2636 -
               C50289 * C2640 + C24269 * C3604 - C24264 * C3607) *
                  C19689 +
              (C24267 * C1194 - C50288 * C1200 + C24268 * C2641 -
               C50289 * C2645 + C24269 * C3608 - C24264 * C3610) *
                  C49950) *
                 C50174) *
                C50077) *
               C50049) *
              C49984)) /
        (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50288 * C129 - C24267 * C122 + C50289 * C291 - C24268 * C281 +
              C24264 * C299 - C24269 * C285) *
                 C19689 +
             (C50288 * C143 - C24267 * C130 + C50289 * C311 - C24268 * C292 +
              C24264 * C315 - C24269 * C300) *
                 C49950) *
                C50253 +
            ((C30849 - C30850 + C30851 - C30852 + C30853 - C30854) * C19689 +
             (C30855 - C30856 + C30857 - C30858 + C30859 - C30860) * C49950) *
                C50174) *
               C50013 * C997 +
           (((C24267 * C281 - C50288 * C291 + C24268 * C285 - C50289 * C299 +
              C24269 * C1073 - C24264 * C1077) *
                 C19689 +
             (C24267 * C292 - C50288 * C311 + C24268 * C300 - C50289 * C315 +
              C24269 * C1078 - C24264 * C1085) *
                 C49950) *
                C50253 +
            ((C31359 - C31360 + C31361 - C31362 + C31363 - C31364) * C19689 +
             (C31365 - C31366 + C31367 - C31368 + C31369 - C31370) * C49950) *
                C50174) *
               C50013 * C50049) *
              C999 +
          ((((C24274 - C24273 + C24276 - C24275 + C24278 - C24277) * C19689 +
             (C24280 - C24279 + C24282 - C24281 + C24284 - C24283) * C49950) *
                C50253 +
            ((C24625 - C24626 + C24627 - C24628 + C24629 - C24630) * C19689 +
             (C24631 - C24632 + C24633 - C24634 + C24635 - C24636) * C49950) *
                C50174) *
               C50013 * C997 +
           (((C24456 - C24455 + C24458 - C24457 + C24460 - C24459) * C19689 +
             (C24462 - C24461 + C24464 - C24463 + C24466 - C24465) * C49950) *
                C50253 +
            ((C25159 - C25160 + C25161 - C25162 + C25163 - C25164) * C19689 +
             (C25165 - C25166 + C25167 - C25168 + C25169 - C25170) * C49950) *
                C50174) *
               C50013 * C50049) *
              C1000 +
          ((((C24286 - C24285 + C24288 - C24287 + C24290 - C24289) * C19689 +
             (C24292 - C24291 + C24294 - C24293 + C24296 - C24295) * C49950) *
                C50253 +
            ((C24953 - C24954 + C24955 - C24956 + C24957 - C24958) * C19689 +
             (C24959 - C24960 + C24961 - C24962 + C24963 - C24964) * C49950) *
                C50174) *
               C50013 * C997 +
           (((C24796 - C24795 + C24798 - C24797 + C24800 - C24799) * C19689 +
             (C24802 - C24801 + C24804 - C24803 + C24806 - C24805) * C49950) *
                C50253 +
            ((C24267 * C869 - C50288 * C876 + C24268 * C1536 - C50289 * C1542 +
              C24269 * C3183 - C24264 * C3188) *
                 C19689 +
             (C24267 * C877 - C50288 * C884 + C24268 * C1543 - C50289 * C1548 +
              C24269 * C3189 - C24264 * C3192) *
                 C49950) *
                C50174) *
               C50013 * C50049) *
              C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50288 * C129 - C24267 * C122 + C50289 * C291 - C24268 * C281 +
             C24264 * C299 - C24269 * C285) *
                C19689 +
            (C50288 * C143 - C24267 * C130 + C50289 * C311 - C24268 * C292 +
             C24264 * C315 - C24269 * C300) *
                C49950) *
               C50253 +
           ((C30849 - C30850 + C30851 - C30852 + C30853 - C30854) * C19689 +
            (C30855 - C30856 + C30857 - C30858 + C30859 - C30860) * C49950) *
               C50174) *
              C50013 * C1068 +
          (((C24267 * C281 - C50288 * C291 + C24268 * C285 - C50289 * C299 +
             C24269 * C1073 - C24264 * C1077) *
                C19689 +
            (C24267 * C292 - C50288 * C311 + C24268 * C300 - C50289 * C315 +
             C24269 * C1078 - C24264 * C1085) *
                C49950) *
               C50253 +
           ((C31359 - C31360 + C31361 - C31362 + C31363 - C31364) * C19689 +
            (C31365 - C31366 + C31367 - C31368 + C31369 - C31370) * C49950) *
               C50174) *
              C50013 * C1069 +
          (((C50288 * C299 - C24267 * C285 + C50289 * C1077 - C24268 * C1073 +
             C24264 * C2456 - C24269 * C2453) *
                C19689 +
            (C50288 * C315 - C24267 * C300 + C50289 * C1085 - C24268 * C1078 +
             C24264 * C2462 - C24269 * C2457) *
                C49950) *
               C50253 +
           ((C50288 * C1538 - C24267 * C1534 + C50289 * C3184 - C24268 * C3181 +
             C24264 * C4099 - C24269 * C4097) *
                C19689 +
            (C50288 * C1546 - C24267 * C1539 + C50289 * C3190 - C24268 * C3185 +
             C24264 * C4103 - C24269 * C4100) *
                C49950) *
               C50174) *
              C50013 * C1070 +
          (((C24267 * C1073 - C50288 * C1077 + C24268 * C2453 - C50289 * C2456 +
             C24269 * C3449 - C24264 * C3451) *
                C19689 +
            (C24267 * C1078 - C50288 * C1085 + C24268 * C2457 - C50289 * C2462 +
             C24269 * C3452 - C24264 * C3455) *
                C49950) *
               C50253 +
           ((C24267 * C3181 - C50288 * C3184 + C24268 * C4097 - C50289 * C4099 +
             C24269 * C20808 - C24264 * C20809) *
                C19689 +
            (C24267 * C3185 - C50288 * C3190 + C24268 * C4100 - C50289 * C4103 +
             C24269 * C20810 - C24264 * C20811) *
                C49950) *
               C50174) *
              C50013 * C1071) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50288 * C129 - C24267 * C122 + C50289 * C291 - C24268 * C281 +
               C24264 * C299 - C24269 * C285) *
                  C19689 +
              (C50288 * C143 - C24267 * C130 + C50289 * C311 - C24268 * C292 +
               C24264 * C315 - C24269 * C300) *
                  C49950) *
                 C50253 +
             ((C30849 - C30850 + C30851 - C30852 + C30853 - C30854) * C19689 +
              (C30855 - C30856 + C30857 - C30858 + C30859 - C30860) * C49950) *
                 C50174) *
                C1648 +
            (((C30850 - C30849 + C30852 - C30851 + C30854 - C30853) * C19689 +
              (C30856 - C30855 + C30858 - C30857 + C30860 - C30859) * C49950) *
                 C50253 +
             ((C30861 - C30862 + C30863 - C30864 + C30865 - C30866) * C19689 +
              (C30867 - C30868 + C30869 - C30870 + C30871 - C30872) * C49950) *
                 C50174) *
                C50077) *
               C50239 +
           ((((C24267 * C281 - C50288 * C291 + C24268 * C285 - C50289 * C299 +
               C24269 * C1073 - C24264 * C1077) *
                  C19689 +
              (C24267 * C292 - C50288 * C311 + C24268 * C300 - C50289 * C315 +
               C24269 * C1078 - C24264 * C1085) *
                  C49950) *
                 C50253 +
             ((C31359 - C31360 + C31361 - C31362 + C31363 - C31364) * C19689 +
              (C31365 - C31366 + C31367 - C31368 + C31369 - C31370) * C49950) *
                 C50174) *
                C1648 +
            (((C31360 - C31359 + C31362 - C31361 + C31364 - C31363) * C19689 +
              (C31366 - C31365 + C31368 - C31367 + C31370 - C31369) * C49950) *
                 C50253 +
             ((C31761 - C31762 + C31763 - C31764 + C31765 - C31766) * C19689 +
              (C31767 - C31768 + C31769 - C31770 + C31771 - C31772) * C49950) *
                 C50174) *
                C50077) *
               C50049) *
              C50231 +
          (((((C24274 - C24273 + C24276 - C24275 + C24278 - C24277) * C19689 +
              (C24280 - C24279 + C24282 - C24281 + C24284 - C24283) * C49950) *
                 C50253 +
             ((C24625 - C24626 + C24627 - C24628 + C24629 - C24630) * C19689 +
              (C24631 - C24632 + C24633 - C24634 + C24635 - C24636) * C49950) *
                 C50174) *
                C1648 +
            (((C24626 - C24625 + C24628 - C24627 + C24630 - C24629) * C19689 +
              (C24632 - C24631 + C24634 - C24633 + C24636 - C24635) * C49950) *
                 C50253 +
             ((C24637 - C24638 + C24639 - C24640 + C24641 - C24642) * C19689 +
              (C24643 - C24644 + C24645 - C24646 + C24647 - C24648) * C49950) *
                 C50174) *
                C50077) *
               C50239 +
           ((((C24456 - C24455 + C24458 - C24457 + C24460 - C24459) * C19689 +
              (C24462 - C24461 + C24464 - C24463 + C24466 - C24465) * C49950) *
                 C50253 +
             ((C25159 - C25160 + C25161 - C25162 + C25163 - C25164) * C19689 +
              (C25165 - C25166 + C25167 - C25168 + C25169 - C25170) * C49950) *
                 C50174) *
                C1648 +
            (((C25160 - C25159 + C25162 - C25161 + C25164 - C25163) * C19689 +
              (C25166 - C25165 + C25168 - C25167 + C25170 - C25169) * C49950) *
                 C50253 +
             ((C24267 * C1188 - C50288 * C1193 + C24268 * C2636 -
               C50289 * C2640 + C24269 * C3604 - C24264 * C3607) *
                  C19689 +
              (C24267 * C1194 - C50288 * C1200 + C24268 * C2641 -
               C50289 * C2645 + C24269 * C3608 - C24264 * C3610) *
                  C49950) *
                 C50174) *
                C50077) *
               C50049) *
              C49984)) /
        (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50288 * C129 - C24267 * C122 + C50289 * C291 - C24268 * C281 +
              C24264 * C299 - C24269 * C285) *
                 C19689 +
             (C50288 * C143 - C24267 * C130 + C50289 * C311 - C24268 * C292 +
              C24264 * C315 - C24269 * C300) *
                 C49950) *
                C50253 +
            ((C30849 - C30850 + C30851 - C30852 + C30853 - C30854) * C19689 +
             (C30855 - C30856 + C30857 - C30858 + C30859 - C30860) * C49950) *
                C50174) *
               C50286 +
           (((C30850 - C30849 + C30852 - C30851 + C30854 - C30853) * C19689 +
             (C30856 - C30855 + C30858 - C30857 + C30860 - C30859) * C49950) *
                C50253 +
            ((C30861 - C30862 + C30863 - C30864 + C30865 - C30866) * C19689 +
             (C30867 - C30868 + C30869 - C30870 + C30871 - C30872) * C49950) *
                C50174) *
               C50287 +
           (((C30862 - C30861 + C30864 - C30863 + C30866 - C30865) * C19689 +
             (C30868 - C30867 + C30870 - C30869 + C30872 - C30871) * C49950) *
                C50253 +
            ((C32661 - C32662 + C32663 - C32664 + C32665 - C32666) * C19689 +
             (C32667 - C32668 + C32669 - C32670 + C32671 - C32672) * C49950) *
                C50174) *
               C2064) *
              C50239 +
          ((((C24267 * C281 - C50288 * C291 + C24268 * C285 - C50289 * C299 +
              C24269 * C1073 - C24264 * C1077) *
                 C19689 +
             (C24267 * C292 - C50288 * C311 + C24268 * C300 - C50289 * C315 +
              C24269 * C1078 - C24264 * C1085) *
                 C49950) *
                C50253 +
            ((C31359 - C31360 + C31361 - C31362 + C31363 - C31364) * C19689 +
             (C31365 - C31366 + C31367 - C31368 + C31369 - C31370) * C49950) *
                C50174) *
               C50286 +
           (((C31360 - C31359 + C31362 - C31361 + C31364 - C31363) * C19689 +
             (C31366 - C31365 + C31368 - C31367 + C31370 - C31369) * C49950) *
                C50253 +
            ((C31761 - C31762 + C31763 - C31764 + C31765 - C31766) * C19689 +
             (C31767 - C31768 + C31769 - C31770 + C31771 - C31772) * C49950) *
                C50174) *
               C50287 +
           (((C31762 - C31761 + C31764 - C31763 + C31766 - C31765) * C19689 +
             (C31768 - C31767 + C31770 - C31769 + C31772 - C31771) * C49950) *
                C50253 +
            ((C24267 * C4495 - C50288 * C4499 + C24268 * C4496 -
              C50289 * C4500 + C24269 * C21074 - C24264 * C21075) *
                 C19689 +
             (C24267 * C4501 - C50288 * C4507 + C24268 * C4502 -
              C50289 * C4508 + C24269 * C21076 - C24264 * C21077) *
                 C49950) *
                C50174) *
               C2064) *
              C50049) *
         C49978) /
        (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50288 * C129 - C24267 * C122 + C50289 * C291 - C24268 * C281 +
              C24264 * C299 - C24269 * C285) *
                 C19689 +
             (C50288 * C143 - C24267 * C130 + C50289 * C311 - C24268 * C292 +
              C24264 * C315 - C24269 * C300) *
                 C49950) *
                C50253 +
            ((C30849 - C30850 + C30851 - C30852 + C30853 - C30854) * C19689 +
             (C30855 - C30856 + C30857 - C30858 + C30859 - C30860) * C49950) *
                C50174) *
               C1648 +
           (((C30850 - C30849 + C30852 - C30851 + C30854 - C30853) * C19689 +
             (C30856 - C30855 + C30858 - C30857 + C30860 - C30859) * C49950) *
                C50253 +
            ((C30861 - C30862 + C30863 - C30864 + C30865 - C30866) * C19689 +
             (C30867 - C30868 + C30869 - C30870 + C30871 - C30872) * C49950) *
                C50174) *
               C50077) *
              C276 +
          ((((C24267 * C281 - C50288 * C291 + C24268 * C285 - C50289 * C299 +
              C24269 * C1073 - C24264 * C1077) *
                 C19689 +
             (C24267 * C292 - C50288 * C311 + C24268 * C300 - C50289 * C315 +
              C24269 * C1078 - C24264 * C1085) *
                 C49950) *
                C50253 +
            ((C31359 - C31360 + C31361 - C31362 + C31363 - C31364) * C19689 +
             (C31365 - C31366 + C31367 - C31368 + C31369 - C31370) * C49950) *
                C50174) *
               C1648 +
           (((C31360 - C31359 + C31362 - C31361 + C31364 - C31363) * C19689 +
             (C31366 - C31365 + C31368 - C31367 + C31370 - C31369) * C49950) *
                C50253 +
            ((C31761 - C31762 + C31763 - C31764 + C31765 - C31766) * C19689 +
             (C31767 - C31768 + C31769 - C31770 + C31771 - C31772) * C49950) *
                C50174) *
               C50077) *
              C277 +
          ((((C50288 * C299 - C24267 * C285 + C50289 * C1077 - C24268 * C1073 +
              C24264 * C2456 - C24269 * C2453) *
                 C19689 +
             (C50288 * C315 - C24267 * C300 + C50289 * C1085 - C24268 * C1078 +
              C24264 * C2462 - C24269 * C2457) *
                 C49950) *
                C50253 +
            ((C32259 - C32260 + C32261 - C32262 + C32263 - C32264) * C19689 +
             (C32265 - C32266 + C32267 - C32268 + C32269 - C32270) * C49950) *
                C50174) *
               C1648 +
           (((C32260 - C32259 + C32262 - C32261 + C32264 - C32263) * C19689 +
             (C32266 - C32265 + C32268 - C32267 + C32270 - C32269) * C49950) *
                C50253 +
            ((C24267 * C2635 - C50288 * C2638 + C24268 * C3603 -
              C50289 * C3605 + C24269 * C20478 - C24264 * C20479) *
                 C19689 +
             (C24267 * C2639 - C50288 * C2644 + C24268 * C3606 -
              C50289 * C3609 + C24269 * C20480 - C24264 * C20481) *
                 C49950) *
                C50174) *
               C50077) *
              C278) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50288 * C129 - C24267 * C122 + C50289 * C291 - C24268 * C281 +
              C24264 * C299 - C24269 * C285) *
                 C19689 +
             (C50288 * C143 - C24267 * C130 + C50289 * C311 - C24268 * C292 +
              C24264 * C315 - C24269 * C300) *
                 C49950) *
                C50253 +
            ((C30849 - C30850 + C30851 - C30852 + C30853 - C30854) * C19689 +
             (C30855 - C30856 + C30857 - C30858 + C30859 - C30860) * C49950) *
                C50174) *
               C1648 +
           (((C30850 - C30849 + C30852 - C30851 + C30854 - C30853) * C19689 +
             (C30856 - C30855 + C30858 - C30857 + C30860 - C30859) * C49950) *
                C50253 +
            ((C30861 - C30862 + C30863 - C30864 + C30865 - C30866) * C19689 +
             (C30867 - C30868 + C30869 - C30870 + C30871 - C30872) * C49950) *
                C50174) *
               C50077) *
              C49997 * C999 +
          ((((C24274 - C24273 + C24276 - C24275 + C24278 - C24277) * C19689 +
             (C24280 - C24279 + C24282 - C24281 + C24284 - C24283) * C49950) *
                C50253 +
            ((C24625 - C24626 + C24627 - C24628 + C24629 - C24630) * C19689 +
             (C24631 - C24632 + C24633 - C24634 + C24635 - C24636) * C49950) *
                C50174) *
               C1648 +
           (((C24626 - C24625 + C24628 - C24627 + C24630 - C24629) * C19689 +
             (C24632 - C24631 + C24634 - C24633 + C24636 - C24635) * C49950) *
                C50253 +
            ((C24637 - C24638 + C24639 - C24640 + C24641 - C24642) * C19689 +
             (C24643 - C24644 + C24645 - C24646 + C24647 - C24648) * C49950) *
                C50174) *
               C50077) *
              C49997 * C1000 +
          ((((C24286 - C24285 + C24288 - C24287 + C24290 - C24289) * C19689 +
             (C24292 - C24291 + C24294 - C24293 + C24296 - C24295) * C49950) *
                C50253 +
            ((C24953 - C24954 + C24955 - C24956 + C24957 - C24958) * C19689 +
             (C24959 - C24960 + C24961 - C24962 + C24963 - C24964) * C49950) *
                C50174) *
               C1648 +
           (((C24954 - C24953 + C24956 - C24955 + C24958 - C24957) * C19689 +
             (C24960 - C24959 + C24962 - C24961 + C24964 - C24963) * C49950) *
                C50253 +
            ((C24267 * C452 - C50288 * C468 + C24268 * C1189 - C50289 * C1195 +
              C24269 * C2637 - C24264 * C2642) *
                 C19689 +
             (C24267 * C469 - C50288 * C482 + C24268 * C1196 - C50289 * C1201 +
              C24269 * C2643 - C24264 * C2646) *
                 C49950) *
                C50174) *
               C50077) *
              C49997 * C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C50288 * C129 - C24267 * C122 + C50289 * C291 - C24268 * C281 +
             C24264 * C299 - C24269 * C285) *
                C19689 +
            (C50288 * C143 - C24267 * C130 + C50289 * C311 - C24268 * C292 +
             C24264 * C315 - C24269 * C300) *
                C49950) *
               C50253 +
           ((C30849 - C30850 + C30851 - C30852 + C30853 - C30854) * C19689 +
            (C30855 - C30856 + C30857 - C30858 + C30859 - C30860) * C49950) *
               C50174) *
              C1814 +
          (((C30850 - C30849 + C30852 - C30851 + C30854 - C30853) * C19689 +
            (C30856 - C30855 + C30858 - C30857 + C30860 - C30859) * C49950) *
               C50253 +
           ((C30861 - C30862 + C30863 - C30864 + C30865 - C30866) * C19689 +
            (C30867 - C30868 + C30869 - C30870 + C30871 - C30872) * C49950) *
               C50174) *
              C1815 +
          (((C30862 - C30861 + C30864 - C30863 + C30866 - C30865) * C19689 +
            (C30868 - C30867 + C30870 - C30869 + C30872 - C30871) * C49950) *
               C50253 +
           ((C32661 - C32662 + C32663 - C32664 + C32665 - C32666) * C19689 +
            (C32667 - C32668 + C32669 - C32670 + C32671 - C32672) * C49950) *
               C50174) *
              C1816 +
          (((C32662 - C32661 + C32664 - C32663 + C32666 - C32665) * C19689 +
            (C32668 - C32667 + C32670 - C32669 + C32672 - C32671) * C49950) *
               C50253 +
           ((C24267 * C5402 - C50288 * C5405 + C24268 * C6376 - C50289 * C6378 +
             C24269 * C22744 - C24264 * C22745) *
                C19689 +
            (C24267 * C5406 - C50288 * C5411 + C24268 * C6379 - C50289 * C6382 +
             C24269 * C22746 - C24264 * C22747) *
                C49950) *
               C50174) *
              C1817) *
         C49997 * C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50288 * C129 - C24267 * C122 + C50289 * C291 - C24268 * C281 +
              C24264 * C299 - C24269 * C285) *
                 C19689 +
             (C50288 * C143 - C24267 * C130 + C50289 * C311 - C24268 * C292 +
              C24264 * C315 - C24269 * C300) *
                 C49950) *
                C50253 +
            ((C30849 - C30850 + C30851 - C30852 + C30853 - C30854) * C19689 +
             (C30855 - C30856 + C30857 - C30858 + C30859 - C30860) * C49950) *
                C50174) *
               C50286 +
           (((C30850 - C30849 + C30852 - C30851 + C30854 - C30853) * C19689 +
             (C30856 - C30855 + C30858 - C30857 + C30860 - C30859) * C49950) *
                C50253 +
            ((C30861 - C30862 + C30863 - C30864 + C30865 - C30866) * C19689 +
             (C30867 - C30868 + C30869 - C30870 + C30871 - C30872) * C49950) *
                C50174) *
               C50287 +
           (((C30862 - C30861 + C30864 - C30863 + C30866 - C30865) * C19689 +
             (C30868 - C30867 + C30870 - C30869 + C30872 - C30871) * C49950) *
                C50253 +
            ((C32661 - C32662 + C32663 - C32664 + C32665 - C32666) * C19689 +
             (C32667 - C32668 + C32669 - C32670 + C32671 - C32672) * C49950) *
                C50174) *
               C2064) *
              C49997 * C50231 +
          ((((C24274 - C24273 + C24276 - C24275 + C24278 - C24277) * C19689 +
             (C24280 - C24279 + C24282 - C24281 + C24284 - C24283) * C49950) *
                C50253 +
            ((C24625 - C24626 + C24627 - C24628 + C24629 - C24630) * C19689 +
             (C24631 - C24632 + C24633 - C24634 + C24635 - C24636) * C49950) *
                C50174) *
               C50286 +
           (((C24626 - C24625 + C24628 - C24627 + C24630 - C24629) * C19689 +
             (C24632 - C24631 + C24634 - C24633 + C24636 - C24635) * C49950) *
                C50253 +
            ((C24637 - C24638 + C24639 - C24640 + C24641 - C24642) * C19689 +
             (C24643 - C24644 + C24645 - C24646 + C24647 - C24648) * C49950) *
                C50174) *
               C50287 +
           (((C24638 - C24637 + C24640 - C24639 + C24642 - C24641) * C19689 +
             (C24644 - C24643 + C24646 - C24645 + C24648 - C24647) * C49950) *
                C50253 +
            ((C24267 * C1819 - C50288 * C1824 + C24268 * C4497 -
              C50289 * C4503 + C24269 * C4498 - C24264 * C4504) *
                 C19689 +
             (C24267 * C1825 - C50288 * C1831 + C24268 * C4505 -
              C50289 * C4509 + C24269 * C4506 - C24264 * C4510) *
                 C49950) *
                C50174) *
               C2064) *
              C49997 * C49984)) /
        (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50288 * C129 - C24267 * C122 + C50289 * C291 - C24268 * C281 +
              C24264 * C299 - C24269 * C285) *
                 C19689 +
             (C50288 * C143 - C24267 * C130 + C50289 * C311 - C24268 * C292 +
              C24264 * C315 - C24269 * C300) *
                 C49950) *
                C50253 +
            ((C30849 - C30850 + C30851 - C30852 + C30853 - C30854) * C19689 +
             (C30855 - C30856 + C30857 - C30858 + C30859 - C30860) * C49950) *
                C50174) *
               C1648 +
           (((C30850 - C30849 + C30852 - C30851 + C30854 - C30853) * C19689 +
             (C30856 - C30855 + C30858 - C30857 + C30860 - C30859) * C49950) *
                C50253 +
            ((C30861 - C30862 + C30863 - C30864 + C30865 - C30866) * C19689 +
             (C30867 - C30868 + C30869 - C30870 + C30871 - C30872) * C49950) *
                C50174) *
               C50077) *
              C49997 * C999 +
          ((((C24274 - C24273 + C24276 - C24275 + C24278 - C24277) * C19689 +
             (C24280 - C24279 + C24282 - C24281 + C24284 - C24283) * C49950) *
                C50253 +
            ((C24625 - C24626 + C24627 - C24628 + C24629 - C24630) * C19689 +
             (C24631 - C24632 + C24633 - C24634 + C24635 - C24636) * C49950) *
                C50174) *
               C1648 +
           (((C24626 - C24625 + C24628 - C24627 + C24630 - C24629) * C19689 +
             (C24632 - C24631 + C24634 - C24633 + C24636 - C24635) * C49950) *
                C50253 +
            ((C24637 - C24638 + C24639 - C24640 + C24641 - C24642) * C19689 +
             (C24643 - C24644 + C24645 - C24646 + C24647 - C24648) * C49950) *
                C50174) *
               C50077) *
              C49997 * C1000 +
          ((((C24286 - C24285 + C24288 - C24287 + C24290 - C24289) * C19689 +
             (C24292 - C24291 + C24294 - C24293 + C24296 - C24295) * C49950) *
                C50253 +
            ((C24953 - C24954 + C24955 - C24956 + C24957 - C24958) * C19689 +
             (C24959 - C24960 + C24961 - C24962 + C24963 - C24964) * C49950) *
                C50174) *
               C1648 +
           (((C24954 - C24953 + C24956 - C24955 + C24958 - C24957) * C19689 +
             (C24960 - C24959 + C24962 - C24961 + C24964 - C24963) * C49950) *
                C50253 +
            ((C24267 * C452 - C50288 * C468 + C24268 * C1189 - C50289 * C1195 +
              C24269 * C2637 - C24264 * C2642) *
                 C19689 +
             (C24267 * C469 - C50288 * C482 + C24268 * C1196 - C50289 * C1201 +
              C24269 * C2643 - C24264 * C2646) *
                 C49950) *
                C50174) *
               C50077) *
              C49997 * C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50288 * C129 - C24267 * C122 + C50289 * C291 - C24268 * C281 +
              C24264 * C299 - C24269 * C285) *
                 C19689 +
             (C50288 * C143 - C24267 * C130 + C50289 * C311 - C24268 * C292 +
              C24264 * C315 - C24269 * C300) *
                 C49950) *
                C50253 +
            ((C30849 - C30850 + C30851 - C30852 + C30853 - C30854) * C19689 +
             (C30855 - C30856 + C30857 - C30858 + C30859 - C30860) * C49950) *
                C50174) *
               C1648 +
           (((C30850 - C30849 + C30852 - C30851 + C30854 - C30853) * C19689 +
             (C30856 - C30855 + C30858 - C30857 + C30860 - C30859) * C49950) *
                C50253 +
            ((C30861 - C30862 + C30863 - C30864 + C30865 - C30866) * C19689 +
             (C30867 - C30868 + C30869 - C30870 + C30871 - C30872) * C49950) *
                C50174) *
               C50077) *
              C276 +
          ((((C24267 * C281 - C50288 * C291 + C24268 * C285 - C50289 * C299 +
              C24269 * C1073 - C24264 * C1077) *
                 C19689 +
             (C24267 * C292 - C50288 * C311 + C24268 * C300 - C50289 * C315 +
              C24269 * C1078 - C24264 * C1085) *
                 C49950) *
                C50253 +
            ((C31359 - C31360 + C31361 - C31362 + C31363 - C31364) * C19689 +
             (C31365 - C31366 + C31367 - C31368 + C31369 - C31370) * C49950) *
                C50174) *
               C1648 +
           (((C31360 - C31359 + C31362 - C31361 + C31364 - C31363) * C19689 +
             (C31366 - C31365 + C31368 - C31367 + C31370 - C31369) * C49950) *
                C50253 +
            ((C31761 - C31762 + C31763 - C31764 + C31765 - C31766) * C19689 +
             (C31767 - C31768 + C31769 - C31770 + C31771 - C31772) * C49950) *
                C50174) *
               C50077) *
              C277 +
          ((((C50288 * C299 - C24267 * C285 + C50289 * C1077 - C24268 * C1073 +
              C24264 * C2456 - C24269 * C2453) *
                 C19689 +
             (C50288 * C315 - C24267 * C300 + C50289 * C1085 - C24268 * C1078 +
              C24264 * C2462 - C24269 * C2457) *
                 C49950) *
                C50253 +
            ((C32259 - C32260 + C32261 - C32262 + C32263 - C32264) * C19689 +
             (C32265 - C32266 + C32267 - C32268 + C32269 - C32270) * C49950) *
                C50174) *
               C1648 +
           (((C32260 - C32259 + C32262 - C32261 + C32264 - C32263) * C19689 +
             (C32266 - C32265 + C32268 - C32267 + C32270 - C32269) * C49950) *
                C50253 +
            ((C24267 * C2635 - C50288 * C2638 + C24268 * C3603 -
              C50289 * C3605 + C24269 * C20478 - C24264 * C20479) *
                 C19689 +
             (C24267 * C2639 - C50288 * C2644 + C24268 * C3606 -
              C50289 * C3609 + C24269 * C20480 - C24264 * C20481) *
                 C49950) *
                C50174) *
               C50077) *
              C278) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19680 * C129 - C19685 * C122 + C19681 * C291 - C19686 * C281 +
             C19682 * C299 - C19687 * C285 + C19683 * C1077 - C19688 * C1073) *
                C19689 +
            (C19680 * C143 - C19685 * C130 + C19681 * C311 - C19686 * C292 +
             C19682 * C315 - C19687 * C300 + C19683 * C1085 - C19688 * C1078) *
                C49950) *
               C50110 * C50013 * C50239 +
           ((C19685 * C281 - C19680 * C291 + C19686 * C285 - C19681 * C299 +
             C19687 * C1073 - C19682 * C1077 + C19688 * C2453 -
             C19683 * C2456) *
                C19689 +
            (C19685 * C292 - C19680 * C311 + C19686 * C300 - C19681 * C315 +
             C19687 * C1078 - C19682 * C1085 + C19688 * C2457 -
             C19683 * C2462) *
                C49950) *
               C50110 * C50013 * C50049) *
              C50282 +
          (((C19685 * C123 - C19680 * C131 + C19686 * C282 - C19681 * C293 +
             C19687 * C286 - C19682 * C301 + C19688 * C1074 - C19683 * C1079) *
                C19689 +
            (C19685 * C132 - C19680 * C144 + C19686 * C294 - C19681 * C312 +
             C19687 * C302 - C19682 * C316 + C19688 * C1080 - C19683 * C1086) *
                C49950) *
               C50110 * C50013 * C50239 +
           ((C19680 * C293 - C19685 * C282 + C19681 * C301 - C19686 * C286 +
             C19682 * C1079 - C19687 * C1074 + C19683 * C2458 -
             C19688 * C2454) *
                C19689 +
            (C19680 * C312 - C19685 * C294 + C19681 * C316 - C19686 * C302 +
             C19682 * C1086 - C19687 * C1080 + C19683 * C2463 -
             C19688 * C2459) *
                C49950) *
               C50110 * C50013 * C50049) *
              C50283 +
          (((C19680 * C133 - C19685 * C124 + C19681 * C295 - C19686 * C283 +
             C19682 * C303 - C19687 * C287 + C19683 * C1081 - C19688 * C1075) *
                C19689 +
            (C19680 * C145 - C19685 * C134 + C19681 * C313 - C19686 * C296 +
             C19682 * C317 - C19687 * C304 + C19683 * C1087 - C19688 * C1082) *
                C49950) *
               C50110 * C50013 * C50239 +
           ((C19685 * C283 - C19680 * C295 + C19686 * C287 - C19681 * C303 +
             C19687 * C1075 - C19682 * C1081 + C19688 * C2455 -
             C19683 * C2460) *
                C19689 +
            (C19685 * C296 - C19680 * C313 + C19686 * C304 - C19681 * C317 +
             C19687 * C1082 - C19682 * C1087 + C19688 * C2461 -
             C19683 * C2464) *
                C49950) *
               C50110 * C50013 * C50049) *
              C612)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                C16929 +
            (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                C16924 +
            (C16933 - C16934 + C16935 - C16936) * C16930 +
            (C16937 - C16938 + C16939 - C16940) * C16925 + C16973 * C16931 +
            C16974 * C16926) *
               C50110 * C50013 * C50239 +
           ((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                C16929 +
            (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                C16924 +
            (C17123 - C17124 + C17125 - C17126) * C16930 +
            (C17127 - C17128 + C17129 - C17130) * C16925 + C17491 * C16931 +
            C17492 * C16926) *
               C50110 * C50013 * C50049) *
              C50282 +
          (((C16934 - C16933 + C16936 - C16935) * C16929 +
            (C16938 - C16937 + C16940 - C16939) * C16924 +
            (C16942 - C16941 + C16944 - C16943) * C16930 +
            (C16946 - C16945 + C16948 - C16947) * C16925 + C16975 * C16931 +
            C16976 * C16926) *
               C50110 * C50013 * C50239 +
           ((C17124 - C17123 + C17126 - C17125) * C16929 +
            (C17128 - C17127 + C17130 - C17129) * C16924 +
            (C17132 - C17131 + C17134 - C17133) * C16930 +
            (C17136 - C17135 + C17138 - C17137) * C16925 +
            (C17483 - C17484 + C17485 - C17486) * C16931 +
            (C17487 - C17488 + C17489 - C17490) * C16926) *
               C50110 * C50013 * C50049) *
              C50283 +
          ((C16973 * C16929 + C16974 * C16924 +
            (C16950 - C16949 + C16952 - C16951) * C16930 +
            (C16954 - C16953 + C16956 - C16955) * C16925 +
            (C16957 - C16958 + C16959 - C16960) * C16931 +
            (C16961 - C16962 + C16963 - C16964) * C16926) *
               C50110 * C50013 * C50239 +
           (C17491 * C16929 + C17492 * C16924 +
            (C17484 - C17483 + C17486 - C17485) * C16930 +
            (C17488 - C17487 + C17490 - C17489) * C16925 +
            (C16927 * C289 - C16922 * C307 + C16928 * C290 - C50146 * C309) *
                C16931 +
            (C16927 * C308 - C16922 * C319 + C16928 * C310 - C50146 * C320) *
                C16926) *
               C50110 * C50013 * C50049) *
              C612)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                 C19689 +
             (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                 C49950) *
                C5095 +
            ((C21795 - C21796 + C21797 - C21798) * C19689 +
             (C21799 - C21800 + C21801 - C21802) * C49950) *
                C5096 +
            C21844 * C5097) *
               C50013 * C50239 +
           (((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                 C19689 +
             (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                 C49950) *
                C5095 +
            ((C16927 * C867 - C16922 * C872 + C16928 * C1534 - C50146 * C1538) *
                 C19689 +
             (C16927 * C873 - C16922 * C882 + C16928 * C1539 - C50146 * C1546) *
                 C49950) *
                C5096 +
            ((C16927 * C1187 - C16922 * C1191 + C16928 * C2635 -
              C50146 * C2638) *
                 C19689 +
             (C16927 * C1192 - C16922 * C1199 + C16928 * C2639 -
              C50146 * C2644) *
                 C49950) *
                C5097) *
               C50013 * C50049) *
              C50282 +
          ((((C16934 - C16933 + C16936 - C16935) * C19689 +
             (C16938 - C16937 + C16940 - C16939) * C49950) *
                C5095 +
            ((C17301 - C17302 + C17303 - C17304) * C19689 +
             (C17305 - C17306 + C17307 - C17308) * C49950) *
                C5096 +
            C21843 * C5097) *
               C50013 * C50239 +
           (((C17124 - C17123 + C17126 - C17125) * C19689 +
             (C17128 - C17127 + C17130 - C17129) * C49950) *
                C5095 +
            ((C17847 - C17848 + C17849 - C17850) * C19689 +
             (C17851 - C17852 + C17853 - C17854) * C49950) *
                C5096 +
            ((C16922 * C1193 - C16927 * C1188 + C50146 * C2640 -
              C16928 * C2636) *
                 C19689 +
             (C16922 * C1200 - C16927 * C1194 + C50146 * C2645 -
              C16928 * C2641) *
                 C49950) *
                C5097) *
               C50013 * C50049) *
              C50283 +
          (((C16973 * C19689 + C16974 * C49950) * C5095 +
            ((C17310 - C17309 + C17312 - C17311) * C19689 +
             (C17314 - C17313 + C17316 - C17315) * C49950) *
                C5096 +
            ((C17325 - C17326 + C17327 - C17328) * C19689 +
             (C17329 - C17330 + C17331 - C17332) * C49950) *
                C5097) *
               C50013 * C50239 +
           ((C17491 * C19689 + C17492 * C49950) * C5095 +
            ((C17856 - C17855 + C17858 - C17857) * C19689 +
             (C17860 - C17859 + C17862 - C17861) * C49950) *
                C5096 +
            ((C16927 * C1189 - C16922 * C1195 + C16928 * C2637 -
              C50146 * C2642) *
                 C19689 +
             (C16927 * C1196 - C16922 * C1201 + C16928 * C2643 -
              C50146 * C2646) *
                 C49950) *
                C5097) *
               C50013 * C50049) *
              C612)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19680 * C129 - C19685 * C122 + C19681 * C291 - C19686 * C281 +
              C19682 * C299 - C19687 * C285 + C19683 * C1077 - C19688 * C1073) *
                 C19689 +
             (C19680 * C143 - C19685 * C130 + C19681 * C311 - C19686 * C292 +
              C19682 * C315 - C19687 * C300 + C19683 * C1085 - C19688 * C1078) *
                 C49950) *
                C50110 * C50240 +
            ((C19685 * C446 - C19680 * C456 + C19686 * C867 - C19681 * C872 +
              C19687 * C1534 - C19682 * C1538 + C19688 * C3181 -
              C19683 * C3184) *
                 C19689 +
             (C19685 * C457 - C19680 * C476 + C19686 * C873 - C19681 * C882 +
              C19687 * C1539 - C19682 * C1546 + C19688 * C3185 -
              C19683 * C3190) *
                 C49950) *
                C50110 * C50077) *
               C50239 +
           (((C19685 * C281 - C19680 * C291 + C19686 * C285 - C19681 * C299 +
              C19687 * C1073 - C19682 * C1077 + C19688 * C2453 -
              C19683 * C2456) *
                 C19689 +
             (C19685 * C292 - C19680 * C311 + C19686 * C300 - C19681 * C315 +
              C19687 * C1078 - C19682 * C1085 + C19688 * C2457 -
              C19683 * C2462) *
                 C49950) *
                C50110 * C50240 +
            ((C19680 * C872 - C19685 * C867 + C19681 * C1538 - C19686 * C1534 +
              C19682 * C3184 - C19687 * C3181 + C19683 * C4099 -
              C19688 * C4097) *
                 C19689 +
             (C19680 * C882 - C19685 * C873 + C19681 * C1546 - C19686 * C1539 +
              C19682 * C3190 - C19687 * C3185 + C19683 * C4103 -
              C19688 * C4100) *
                 C49950) *
                C50110 * C50077) *
               C50049) *
              C279 +
          ((((C19685 * C123 - C19680 * C131 + C19686 * C282 - C19681 * C293 +
              C19687 * C286 - C19682 * C301 + C19688 * C1074 - C19683 * C1079) *
                 C19689 +
             (C19685 * C132 - C19680 * C144 + C19686 * C294 - C19681 * C312 +
              C19687 * C302 - C19682 * C316 + C19688 * C1080 - C19683 * C1086) *
                 C49950) *
                C50110 * C50240 +
            ((C19680 * C458 - C19685 * C447 + C19681 * C874 - C19686 * C868 +
              C19682 * C1540 - C19687 * C1535 + C19683 * C3186 -
              C19688 * C3182) *
                 C19689 +
             (C19680 * C477 - C19685 * C459 + C19681 * C883 - C19686 * C875 +
              C19682 * C1547 - C19687 * C1541 + C19683 * C3191 -
              C19688 * C3187) *
                 C49950) *
                C50110 * C50077) *
               C50239 +
           (((C19680 * C293 - C19685 * C282 + C19681 * C301 - C19686 * C286 +
              C19682 * C1079 - C19687 * C1074 + C19683 * C2458 -
              C19688 * C2454) *
                 C19689 +
             (C19680 * C312 - C19685 * C294 + C19681 * C316 - C19686 * C302 +
              C19682 * C1086 - C19687 * C1080 + C19683 * C2463 -
              C19688 * C2459) *
                 C49950) *
                C50110 * C50240 +
            ((C19685 * C868 - C19680 * C874 + C19686 * C1535 - C19681 * C1540 +
              C19687 * C3182 - C19682 * C3186 + C19688 * C4098 -
              C19683 * C4101) *
                 C19689 +
             (C19685 * C875 - C19680 * C883 + C19686 * C1541 - C19681 * C1547 +
              C19687 * C3187 - C19682 * C3191 + C19688 * C4102 -
              C19683 * C4104) *
                 C49950) *
                C50110 * C50077) *
               C50049) *
              C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                 C16929 +
             (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                 C16924 +
             (C16933 - C16934 + C16935 - C16936) * C16930 +
             (C16937 - C16938 + C16939 - C16940) * C16925 + C16973 * C16931 +
             C16974 * C16926) *
                C50110 * C50240 +
            ((C16927 * C446 - C16922 * C456 + C16928 * C867 - C50146 * C872) *
                 C16929 +
             (C16927 * C457 - C16922 * C476 + C16928 * C873 - C50146 * C882) *
                 C16924 +
             (C17301 - C17302 + C17303 - C17304) * C16930 +
             (C17305 - C17306 + C17307 - C17308) * C16925 + C17651 * C16931 +
             C17652 * C16926) *
                C50110 * C50077) *
               C50239 +
           (((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                 C16929 +
             (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                 C16924 +
             (C17123 - C17124 + C17125 - C17126) * C16930 +
             (C17127 - C17128 + C17129 - C17130) * C16925 + C17491 * C16931 +
             C17492 * C16926) *
                C50110 * C50240 +
            ((C16922 * C872 - C16927 * C867 + C50146 * C1538 - C16928 * C1534) *
                 C16929 +
             (C16922 * C882 - C16927 * C873 + C50146 * C1546 - C16928 * C1539) *
                 C16924 +
             (C17847 - C17848 + C17849 - C17850) * C16930 +
             (C17851 - C17852 + C17853 - C17854) * C16925 +
             (C17855 - C17856 + C17857 - C17858) * C16931 +
             (C17859 - C17860 + C17861 - C17862) * C16926) *
                C50110 * C50077) *
               C50049) *
              C279 +
          ((((C16934 - C16933 + C16936 - C16935) * C16929 +
             (C16938 - C16937 + C16940 - C16939) * C16924 +
             (C16942 - C16941 + C16944 - C16943) * C16930 +
             (C16946 - C16945 + C16948 - C16947) * C16925 + C16975 * C16931 +
             C16976 * C16926) *
                C50110 * C50240 +
            ((C17302 - C17301 + C17304 - C17303) * C16929 +
             (C17306 - C17305 + C17308 - C17307) * C16924 +
             (C17310 - C17309 + C17312 - C17311) * C16930 +
             (C17314 - C17313 + C17316 - C17315) * C16925 +
             (C17643 - C17644 + C17645 - C17646) * C16931 +
             (C17647 - C17648 + C17649 - C17650) * C16926) *
                C50110 * C50077) *
               C50239 +
           (((C17124 - C17123 + C17126 - C17125) * C16929 +
             (C17128 - C17127 + C17130 - C17129) * C16924 +
             (C17132 - C17131 + C17134 - C17133) * C16930 +
             (C17136 - C17135 + C17138 - C17137) * C16925 +
             (C17483 - C17484 + C17485 - C17486) * C16931 +
             (C17487 - C17488 + C17489 - C17490) * C16926) *
                C50110 * C50240 +
            ((C17848 - C17847 + C17850 - C17849) * C16929 +
             (C17852 - C17851 + C17854 - C17853) * C16924 +
             (C17856 - C17855 + C17858 - C17857) * C16930 +
             (C17860 - C17859 + C17862 - C17861) * C16925 +
             (C16927 * C870 - C16922 * C878 + C16928 * C1537 - C50146 * C1544) *
                 C16931 +
             (C16927 * C879 - C16922 * C885 + C16928 * C1545 - C50146 * C1549) *
                 C16926) *
                C50110 * C50077) *
               C50049) *
              C49984)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                  C19689 +
              (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                  C49950) *
                 C5095 +
             ((C21795 - C21796 + C21797 - C21798) * C19689 +
              (C21799 - C21800 + C21801 - C21802) * C49950) *
                 C5096 +
             C21844 * C5097) *
                C50240 +
            (((C21796 - C21795 + C21798 - C21797) * C19689 +
              (C21800 - C21799 + C21802 - C21801) * C49950) *
                 C5095 +
             ((C21804 - C21803 + C21806 - C21805) * C19689 +
              (C21808 - C21807 + C21810 - C21809) * C49950) *
                 C5096 +
             ((C21811 - C21812 + C21813 - C21814) * C19689 +
              (C21815 - C21816 + C21817 - C21818) * C49950) *
                 C5097) *
                C50077) *
               C50239 +
           ((((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                  C19689 +
              (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                  C49950) *
                 C5095 +
             ((C22331 - C22332 + C22333 - C22334) * C19689 +
              (C22335 - C22336 + C22337 - C22338) * C49950) *
                 C5096 +
             ((C22339 - C22340 + C22341 - C22342) * C19689 +
              (C22343 - C22344 + C22345 - C22346) * C49950) *
                 C5097) *
                C50240 +
            (((C22332 - C22331 + C22334 - C22333) * C19689 +
              (C22336 - C22335 + C22338 - C22337) * C49950) *
                 C5095 +
             ((C22340 - C22339 + C22342 - C22341) * C19689 +
              (C22344 - C22343 + C22346 - C22345) * C49950) *
                 C5096 +
             ((C16922 * C4499 - C16927 * C4495 + C50146 * C4500 -
               C16928 * C4496) *
                  C19689 +
              (C16922 * C4507 - C16927 * C4501 + C50146 * C4508 -
               C16928 * C4502) *
                  C49950) *
                 C5097) *
                C50077) *
               C50049) *
              C279 +
          (((((C16934 - C16933 + C16936 - C16935) * C19689 +
              (C16938 - C16937 + C16940 - C16939) * C49950) *
                 C5095 +
             ((C17301 - C17302 + C17303 - C17304) * C19689 +
              (C17305 - C17306 + C17307 - C17308) * C49950) *
                 C5096 +
             C21843 * C5097) *
                C50240 +
            (((C17302 - C17301 + C17304 - C17303) * C19689 +
              (C17306 - C17305 + C17308 - C17307) * C49950) *
                 C5095 +
             ((C17317 - C17318 + C17319 - C17320) * C19689 +
              (C17321 - C17322 + C17323 - C17324) * C49950) *
                 C5096 +
             ((C21823 - C21824 + C21825 - C21826) * C19689 +
              (C21827 - C21828 + C21829 - C21830) * C49950) *
                 C5097) *
                C50077) *
               C50239 +
           ((((C17124 - C17123 + C17126 - C17125) * C19689 +
              (C17128 - C17127 + C17130 - C17129) * C49950) *
                 C5095 +
             ((C17847 - C17848 + C17849 - C17850) * C19689 +
              (C17851 - C17852 + C17853 - C17854) * C49950) *
                 C5096 +
             ((C22347 - C22348 + C22349 - C22350) * C19689 +
              (C22351 - C22352 + C22353 - C22354) * C49950) *
                 C5097) *
                C50240 +
            (((C17848 - C17847 + C17850 - C17849) * C19689 +
              (C17852 - C17851 + C17854 - C17853) * C49950) *
                 C5095 +
             ((C22348 - C22347 + C22350 - C22349) * C19689 +
              (C22352 - C22351 + C22354 - C22353) * C49950) *
                 C5096 +
             ((C16927 * C4497 - C16922 * C4503 + C16928 * C4498 -
               C50146 * C4504) *
                  C19689 +
              (C16927 * C4505 - C16922 * C4509 + C16928 * C4506 -
               C50146 * C4510) *
                  C49950) *
                 C5097) *
                C50077) *
               C50049) *
              C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                   C16929 +
               (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                   C16924 +
               (C16933 - C16934 + C16935 - C16936) * C16930 +
               (C16937 - C16938 + C16939 - C16940) * C16925 + C16973 * C16931 +
               C16974 * C16926) *
                  C50110 * C50013 * C49997 * C113 +
              ((C16934 - C16933 + C16936 - C16935) * C16929 +
               (C16938 - C16937 + C16940 - C16939) * C16924 +
               (C16942 - C16941 + C16944 - C16943) * C16930 +
               (C16946 - C16945 + C16948 - C16947) * C16925 + C16975 * C16931 +
               C16976 * C16926) *
                  C50110 * C50013 * C49997 * C114 +
              (C16973 * C16929 + C16974 * C16924 +
               (C16950 - C16949 + C16952 - C16951) * C16930 +
               (C16954 - C16953 + C16956 - C16955) * C16925 +
               (C16957 - C16958 + C16959 - C16960) * C16931 +
               (C16961 - C16962 + C16963 - C16964) * C16926) *
                  C50110 * C50013 * C49997 * C115 +
              (C16975 * C16929 + C16976 * C16924 +
               (C16958 - C16957 + C16960 - C16959) * C16930 +
               (C16962 - C16961 + C16964 - C16963) * C16925 +
               (C16927 * C127 - C16922 * C139 + C16928 * C613 - C50146 * C614) *
                   C16931 +
               (C16927 * C140 - C16922 * C148 + C16928 * C615 - C50146 * C616) *
                   C16926) *
                  C50110 * C50013 * C49997 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C16922 * C129 - C16927 * C122 + C50146 * C291 -
                 C16928 * C281) *
                    C16929 +
                (C16922 * C143 - C16927 * C130 + C50146 * C311 -
                 C16928 * C292) *
                    C16924 +
                (C16933 - C16934 + C16935 - C16936) * C16930 +
                (C16937 - C16938 + C16939 - C16940) * C16925 + C16973 * C16931 +
                C16974 * C16926) *
                   C50110 * C50013 * C276 +
               ((C16927 * C281 - C16922 * C291 + C16928 * C285 -
                 C50146 * C299) *
                    C16929 +
                (C16927 * C292 - C16922 * C311 + C16928 * C300 -
                 C50146 * C315) *
                    C16924 +
                (C17123 - C17124 + C17125 - C17126) * C16930 +
                (C17127 - C17128 + C17129 - C17130) * C16925 +
                (C17131 - C17132 + C17133 - C17134) * C16931 +
                (C17135 - C17136 + C17137 - C17138) * C16926) *
                   C50110 * C50013 * C277 +
               ((C16922 * C299 - C16927 * C285 + C50146 * C1077 -
                 C16928 * C1073) *
                    C16929 +
                (C16922 * C315 - C16927 * C300 + C50146 * C1085 -
                 C16928 * C1078) *
                    C16924 +
                (C17139 - C17140 + C17141 - C17142) * C16930 +
                (C17143 - C17144 + C17145 - C17146) * C16925 +
                (C17147 - C17148 + C17149 - C17150) * C16931 +
                (C17151 - C17152 + C17153 - C17154) * C16926) *
                   C50110 * C50013 * C278) *
                  C279 +
              (((C16934 - C16933 + C16936 - C16935) * C16929 +
                (C16938 - C16937 + C16940 - C16939) * C16924 +
                (C16942 - C16941 + C16944 - C16943) * C16930 +
                (C16946 - C16945 + C16948 - C16947) * C16925 + C16975 * C16931 +
                C16976 * C16926) *
                   C50110 * C50013 * C276 +
               ((C17124 - C17123 + C17126 - C17125) * C16929 +
                (C17128 - C17127 + C17130 - C17129) * C16924 +
                (C17132 - C17131 + C17134 - C17133) * C16930 +
                (C17136 - C17135 + C17138 - C17137) * C16925 +
                (C16922 * C297 - C16927 * C284 + C50146 * C305 -
                 C16928 * C288) *
                    C16931 +
                (C16922 * C314 - C16927 * C298 + C50146 * C318 -
                 C16928 * C306) *
                    C16926) *
                   C50110 * C50013 * C277 +
               ((C17140 - C17139 + C17142 - C17141) * C16929 +
                (C17144 - C17143 + C17146 - C17145) * C16924 +
                (C17148 - C17147 + C17150 - C17149) * C16930 +
                (C17152 - C17151 + C17154 - C17153) * C16925 +
                (C16927 * C288 - C16922 * C305 + C16928 * C1076 -
                 C50146 * C1083) *
                    C16931 +
                (C16927 * C306 - C16922 * C318 + C16928 * C1084 -
                 C50146 * C1088) *
                    C16926) *
                   C50110 * C50013 * C278) *
                  C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                C16929 +
            (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                C16924 +
            (C16933 - C16934 + C16935 - C16936) * C16930 +
            (C16937 - C16938 + C16939 - C16940) * C16925 + C16973 * C16931 +
            C16974 * C16926) *
               C50110 * C443 +
           ((C16927 * C446 - C16922 * C456 + C16928 * C867 - C50146 * C872) *
                C16929 +
            (C16927 * C457 - C16922 * C476 + C16928 * C873 - C50146 * C882) *
                C16924 +
            (C17301 - C17302 + C17303 - C17304) * C16930 +
            (C17305 - C17306 + C17307 - C17308) * C16925 +
            (C17309 - C17310 + C17311 - C17312) * C16931 +
            (C17313 - C17314 + C17315 - C17316) * C16926) *
               C50110 * C444 +
           ((C16922 * C464 - C16927 * C450 + C50146 * C1191 - C16928 * C1187) *
                C16929 +
            (C16922 * C480 - C16927 * C465 + C50146 * C1199 - C16928 * C1192) *
                C16924 +
            (C17317 - C17318 + C17319 - C17320) * C16930 +
            (C17321 - C17322 + C17323 - C17324) * C16925 +
            (C17325 - C17326 + C17327 - C17328) * C16931 +
            (C17329 - C17330 + C17331 - C17332) * C16926) *
               C50110 * C445) *
              C49997 * C279 +
          (((C16934 - C16933 + C16936 - C16935) * C16929 +
            (C16938 - C16937 + C16940 - C16939) * C16924 +
            (C16942 - C16941 + C16944 - C16943) * C16930 +
            (C16946 - C16945 + C16948 - C16947) * C16925 + C16975 * C16931 +
            C16976 * C16926) *
               C50110 * C443 +
           ((C17302 - C17301 + C17304 - C17303) * C16929 +
            (C17306 - C17305 + C17308 - C17307) * C16924 +
            (C17310 - C17309 + C17312 - C17311) * C16930 +
            (C17314 - C17313 + C17316 - C17315) * C16925 +
            (C16922 * C462 - C16927 * C449 + C50146 * C878 - C16928 * C870) *
                C16931 +
            (C16922 * C479 - C16927 * C463 + C50146 * C885 - C16928 * C879) *
                C16926) *
               C50110 * C444 +
           ((C17318 - C17317 + C17320 - C17319) * C16929 +
            (C17322 - C17321 + C17324 - C17323) * C16924 +
            (C17326 - C17325 + C17328 - C17327) * C16930 +
            (C17330 - C17329 + C17332 - C17331) * C16925 +
            (C16927 * C453 - C16922 * C470 + C16928 * C1190 - C50146 * C1197) *
                C16931 +
            (C16927 * C471 - C16922 * C483 + C16928 * C1198 - C50146 * C1202) *
                C16926) *
               C50110 * C445) *
              C49997 * C49984)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C19680 * C129 - C19685 * C122 + C19681 * C291 - C19686 * C281 +
            C19682 * C299 - C19687 * C285 + C19683 * C1077 - C19688 * C1073) *
               C19689 +
           (C19680 * C143 - C19685 * C130 + C19681 * C311 - C19686 * C292 +
            C19682 * C315 - C19687 * C300 + C19683 * C1085 - C19688 * C1078) *
               C49950) *
              C50110 * C50013 * C49997 * C113 +
          ((C19685 * C123 - C19680 * C131 + C19686 * C282 - C19681 * C293 +
            C19687 * C286 - C19682 * C301 + C19688 * C1074 - C19683 * C1079) *
               C19689 +
           (C19685 * C132 - C19680 * C144 + C19686 * C294 - C19681 * C312 +
            C19687 * C302 - C19682 * C316 + C19688 * C1080 - C19683 * C1086) *
               C49950) *
              C50110 * C50013 * C49997 * C114 +
          ((C19680 * C133 - C19685 * C124 + C19681 * C295 - C19686 * C283 +
            C19682 * C303 - C19687 * C287 + C19683 * C1081 - C19688 * C1075) *
               C19689 +
           (C19680 * C145 - C19685 * C134 + C19681 * C313 - C19686 * C296 +
            C19682 * C317 - C19687 * C304 + C19683 * C1087 - C19688 * C1082) *
               C49950) *
              C50110 * C50013 * C49997 * C115 +
          ((C19685 * C125 - C19680 * C135 + C19686 * C284 - C19681 * C297 +
            C19687 * C288 - C19682 * C305 + C19688 * C1076 - C19683 * C1083) *
               C19689 +
           (C19685 * C136 - C19680 * C146 + C19686 * C298 - C19681 * C314 +
            C19687 * C306 - C19682 * C318 + C19688 * C1084 - C19683 * C1088) *
               C49950) *
              C50110 * C50013 * C49997 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C19680 * C129 - C19685 * C122 + C19681 * C291 - C19686 * C281 +
             C19682 * C299 - C19687 * C285 + C19683 * C1077 - C19688 * C1073) *
                C19689 +
            (C19680 * C143 - C19685 * C130 + C19681 * C311 - C19686 * C292 +
             C19682 * C315 - C19687 * C300 + C19683 * C1085 - C19688 * C1078) *
                C49950) *
               C50110 * C50013 * C276 +
           ((C19685 * C281 - C19680 * C291 + C19686 * C285 - C19681 * C299 +
             C19687 * C1073 - C19682 * C1077 + C19688 * C2453 -
             C19683 * C2456) *
                C19689 +
            (C19685 * C292 - C19680 * C311 + C19686 * C300 - C19681 * C315 +
             C19687 * C1078 - C19682 * C1085 + C19688 * C2457 -
             C19683 * C2462) *
                C49950) *
               C50110 * C50013 * C277 +
           ((C19680 * C299 - C19685 * C285 + C19681 * C1077 - C19686 * C1073 +
             C19682 * C2456 - C19687 * C2453 + C19683 * C3451 -
             C19688 * C3449) *
                C19689 +
            (C19680 * C315 - C19685 * C300 + C19681 * C1085 - C19686 * C1078 +
             C19682 * C2462 - C19687 * C2457 + C19683 * C3455 -
             C19688 * C3452) *
                C49950) *
               C50110 * C50013 * C278) *
              C279 +
          (((C19685 * C123 - C19680 * C131 + C19686 * C282 - C19681 * C293 +
             C19687 * C286 - C19682 * C301 + C19688 * C1074 - C19683 * C1079) *
                C19689 +
            (C19685 * C132 - C19680 * C144 + C19686 * C294 - C19681 * C312 +
             C19687 * C302 - C19682 * C316 + C19688 * C1080 - C19683 * C1086) *
                C49950) *
               C50110 * C50013 * C276 +
           ((C19680 * C293 - C19685 * C282 + C19681 * C301 - C19686 * C286 +
             C19682 * C1079 - C19687 * C1074 + C19683 * C2458 -
             C19688 * C2454) *
                C19689 +
            (C19680 * C312 - C19685 * C294 + C19681 * C316 - C19686 * C302 +
             C19682 * C1086 - C19687 * C1080 + C19683 * C2463 -
             C19688 * C2459) *
                C49950) *
               C50110 * C50013 * C277 +
           ((C19685 * C286 - C19680 * C301 + C19686 * C1074 - C19681 * C1079 +
             C19687 * C2454 - C19682 * C2458 + C19688 * C3450 -
             C19683 * C3453) *
                C19689 +
            (C19685 * C302 - C19680 * C316 + C19686 * C1080 - C19681 * C1086 +
             C19687 * C2459 - C19682 * C2463 + C19688 * C3454 -
             C19683 * C3456) *
                C49950) *
               C50110 * C50013 * C278) *
              C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19680 * C129 - C19685 * C122 + C19681 * C291 - C19686 * C281 +
             C19682 * C299 - C19687 * C285 + C19683 * C1077 - C19688 * C1073) *
                C19689 +
            (C19680 * C143 - C19685 * C130 + C19681 * C311 - C19686 * C292 +
             C19682 * C315 - C19687 * C300 + C19683 * C1085 - C19688 * C1078) *
                C49950) *
               C50110 * C443 +
           ((C19685 * C446 - C19680 * C456 + C19686 * C867 - C19681 * C872 +
             C19687 * C1534 - C19682 * C1538 + C19688 * C3181 -
             C19683 * C3184) *
                C19689 +
            (C19685 * C457 - C19680 * C476 + C19686 * C873 - C19681 * C882 +
             C19687 * C1539 - C19682 * C1546 + C19688 * C3185 -
             C19683 * C3190) *
                C49950) *
               C50110 * C444 +
           ((C19680 * C464 - C19685 * C450 + C19681 * C1191 - C19686 * C1187 +
             C19682 * C2638 - C19687 * C2635 + C19683 * C3605 -
             C19688 * C3603) *
                C19689 +
            (C19680 * C480 - C19685 * C465 + C19681 * C1199 - C19686 * C1192 +
             C19682 * C2644 - C19687 * C2639 + C19683 * C3609 -
             C19688 * C3606) *
                C49950) *
               C50110 * C445) *
              C49997 * C279 +
          (((C19685 * C123 - C19680 * C131 + C19686 * C282 - C19681 * C293 +
             C19687 * C286 - C19682 * C301 + C19688 * C1074 - C19683 * C1079) *
                C19689 +
            (C19685 * C132 - C19680 * C144 + C19686 * C294 - C19681 * C312 +
             C19687 * C302 - C19682 * C316 + C19688 * C1080 - C19683 * C1086) *
                C49950) *
               C50110 * C443 +
           ((C19680 * C458 - C19685 * C447 + C19681 * C874 - C19686 * C868 +
             C19682 * C1540 - C19687 * C1535 + C19683 * C3186 -
             C19688 * C3182) *
                C19689 +
            (C19680 * C477 - C19685 * C459 + C19681 * C883 - C19686 * C875 +
             C19682 * C1547 - C19687 * C1541 + C19683 * C3191 -
             C19688 * C3187) *
                C49950) *
               C50110 * C444 +
           ((C19685 * C451 - C19680 * C466 + C19686 * C1188 - C19681 * C1193 +
             C19687 * C2636 - C19682 * C2640 + C19688 * C3604 -
             C19683 * C3607) *
                C19689 +
            (C19685 * C467 - C19680 * C481 + C19686 * C1194 - C19681 * C1200 +
             C19687 * C2641 - C19682 * C2645 + C19688 * C3608 -
             C19683 * C3610) *
                C49950) *
               C50110 * C445) *
              C49997 * C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                C19689 +
            (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                C49950) *
               C5095 +
           ((C16922 * C456 - C16927 * C446 + C50146 * C872 - C16928 * C867) *
                C19689 +
            (C16922 * C476 - C16927 * C457 + C50146 * C882 - C16928 * C873) *
                C49950) *
               C5096 +
           ((C16922 * C464 - C16927 * C450 + C50146 * C1191 - C16928 * C1187) *
                C19689 +
            (C16922 * C480 - C16927 * C465 + C50146 * C1199 - C16928 * C1192) *
                C49950) *
               C5097) *
              C50013 * C49997 * C113 +
          (((C16934 - C16933 + C16936 - C16935) * C19689 +
            (C16938 - C16937 + C16940 - C16939) * C49950) *
               C5095 +
           ((C17301 - C17302 + C17303 - C17304) * C19689 +
            (C17305 - C17306 + C17307 - C17308) * C49950) *
               C5096 +
           ((C17318 - C17317 + C17320 - C17319) * C19689 +
            (C17322 - C17321 + C17324 - C17323) * C49950) *
               C5097) *
              C50013 * C49997 * C114 +
          ((C16973 * C19689 + C16974 * C49950) * C5095 +
           ((C17310 - C17309 + C17312 - C17311) * C19689 +
            (C17314 - C17313 + C17316 - C17315) * C49950) *
               C5096 +
           ((C17325 - C17326 + C17327 - C17328) * C19689 +
            (C17329 - C17330 + C17331 - C17332) * C49950) *
               C5097) *
              C50013 * C49997 * C115 +
          ((C16975 * C19689 + C16976 * C49950) * C5095 +
           ((C17644 - C17643 + C17646 - C17645) * C19689 +
            (C17648 - C17647 + C17650 - C17649) * C49950) *
               C5096 +
           ((C16927 * C453 - C16922 * C470 + C16928 * C1190 - C50146 * C1197) *
                C19689 +
            (C16927 * C471 - C16922 * C483 + C16928 * C1198 - C50146 * C1202) *
                C49950) *
               C5097) *
              C50013 * C49997 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                 C19689 +
             (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                 C49950) *
                C5095 +
            ((C16922 * C456 - C16927 * C446 + C50146 * C872 - C16928 * C867) *
                 C19689 +
             (C16922 * C476 - C16927 * C457 + C50146 * C882 - C16928 * C873) *
                 C49950) *
                C5096 +
            ((C16922 * C464 - C16927 * C450 + C50146 * C1191 - C16928 * C1187) *
                 C19689 +
             (C16922 * C480 - C16927 * C465 + C50146 * C1199 - C16928 * C1192) *
                 C49950) *
                C5097) *
               C50013 * C276 +
           (((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                 C19689 +
             (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                 C49950) *
                C5095 +
            ((C16927 * C867 - C16922 * C872 + C16928 * C1534 - C50146 * C1538) *
                 C19689 +
             (C16927 * C873 - C16922 * C882 + C16928 * C1539 - C50146 * C1546) *
                 C49950) *
                C5096 +
            ((C16927 * C1187 - C16922 * C1191 + C16928 * C2635 -
              C50146 * C2638) *
                 C19689 +
             (C16927 * C1192 - C16922 * C1199 + C16928 * C2639 -
              C50146 * C2644) *
                 C49950) *
                C5097) *
               C50013 * C277 +
           (((C16922 * C299 - C16927 * C285 + C50146 * C1077 - C16928 * C1073) *
                 C19689 +
             (C16922 * C315 - C16927 * C300 + C50146 * C1085 - C16928 * C1078) *
                 C49950) *
                C5095 +
            ((C16922 * C1538 - C16927 * C1534 + C50146 * C3184 -
              C16928 * C3181) *
                 C19689 +
             (C16922 * C1546 - C16927 * C1539 + C50146 * C3190 -
              C16928 * C3185) *
                 C49950) *
                C5096 +
            ((C16922 * C2638 - C16927 * C2635 + C50146 * C3605 -
              C16928 * C3603) *
                 C19689 +
             (C16922 * C2644 - C16927 * C2639 + C50146 * C3609 -
              C16928 * C3606) *
                 C49950) *
                C5097) *
               C50013 * C278) *
              C279 +
          ((((C16934 - C16933 + C16936 - C16935) * C19689 +
             (C16938 - C16937 + C16940 - C16939) * C49950) *
                C5095 +
            ((C17301 - C17302 + C17303 - C17304) * C19689 +
             (C17305 - C17306 + C17307 - C17308) * C49950) *
                C5096 +
            ((C17318 - C17317 + C17320 - C17319) * C19689 +
             (C17322 - C17321 + C17324 - C17323) * C49950) *
                C5097) *
               C50013 * C276 +
           (((C17124 - C17123 + C17126 - C17125) * C19689 +
             (C17128 - C17127 + C17130 - C17129) * C49950) *
                C5095 +
            ((C17847 - C17848 + C17849 - C17850) * C19689 +
             (C17851 - C17852 + C17853 - C17854) * C49950) *
                C5096 +
            ((C16922 * C1193 - C16927 * C1188 + C50146 * C2640 -
              C16928 * C2636) *
                 C19689 +
             (C16922 * C1200 - C16927 * C1194 + C50146 * C2645 -
              C16928 * C2641) *
                 C49950) *
                C5097) *
               C50013 * C277 +
           (((C17140 - C17139 + C17142 - C17141) * C19689 +
             (C17144 - C17143 + C17146 - C17145) * C49950) *
                C5095 +
            ((C16927 * C1535 - C16922 * C1540 + C16928 * C3182 -
              C50146 * C3186) *
                 C19689 +
             (C16927 * C1541 - C16922 * C1547 + C16928 * C3187 -
              C50146 * C3191) *
                 C49950) *
                C5096 +
            ((C16927 * C2636 - C16922 * C2640 + C16928 * C3604 -
              C50146 * C3607) *
                 C19689 +
             (C16927 * C2641 - C16922 * C2645 + C16928 * C3608 -
              C50146 * C3610) *
                 C49950) *
                C5097) *
               C50013 * C278) *
              C49984)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                 C19689 +
             (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                 C49950) *
                C5095 +
            ((C21795 - C21796 + C21797 - C21798) * C19689 +
             (C21799 - C21800 + C21801 - C21802) * C49950) *
                C5096 +
            C21844 * C5097) *
               C443 +
           (((C21796 - C21795 + C21798 - C21797) * C19689 +
             (C21800 - C21799 + C21802 - C21801) * C49950) *
                C5095 +
            ((C21804 - C21803 + C21806 - C21805) * C19689 +
             (C21808 - C21807 + C21810 - C21809) * C49950) *
                C5096 +
            ((C21811 - C21812 + C21813 - C21814) * C19689 +
             (C21815 - C21816 + C21817 - C21818) * C49950) *
                C5097) *
               C444 +
           (C21844 * C5095 +
            ((C21812 - C21811 + C21814 - C21813) * C19689 +
             (C21816 - C21815 + C21818 - C21817) * C49950) *
                C5096 +
            ((C16922 * C5405 - C16927 * C5402 + C50146 * C6378 -
              C16928 * C6376) *
                 C19689 +
             (C16922 * C5411 - C16927 * C5406 + C50146 * C6382 -
              C16928 * C6379) *
                 C49950) *
                C5097) *
               C445) *
              C49997 * C279 +
          ((((C16934 - C16933 + C16936 - C16935) * C19689 +
             (C16938 - C16937 + C16940 - C16939) * C49950) *
                C5095 +
            ((C17301 - C17302 + C17303 - C17304) * C19689 +
             (C17305 - C17306 + C17307 - C17308) * C49950) *
                C5096 +
            C21843 * C5097) *
               C443 +
           (((C17302 - C17301 + C17304 - C17303) * C19689 +
             (C17306 - C17305 + C17308 - C17307) * C49950) *
                C5095 +
            ((C17317 - C17318 + C17319 - C17320) * C19689 +
             (C17321 - C17322 + C17323 - C17324) * C49950) *
                C5096 +
            ((C21823 - C21824 + C21825 - C21826) * C19689 +
             (C21827 - C21828 + C21829 - C21830) * C49950) *
                C5097) *
               C444 +
           (C21843 * C5095 +
            ((C21824 - C21823 + C21826 - C21825) * C19689 +
             (C21828 - C21827 + C21830 - C21829) * C49950) *
                C5096 +
            ((C16927 * C5403 - C16922 * C5407 + C16928 * C6377 -
              C50146 * C6380) *
                 C19689 +
             (C16927 * C5408 - C16922 * C5412 + C16928 * C6381 -
              C50146 * C6383) *
                 C49950) *
                C5097) *
               C445) *
              C49997 * C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19680 * C129 - C19685 * C122 + C19681 * C291 - C19686 * C281 +
             C19682 * C299 - C19687 * C285 + C19683 * C1077 - C19688 * C1073) *
                C19689 +
            (C19680 * C143 - C19685 * C130 + C19681 * C311 - C19686 * C292 +
             C19682 * C315 - C19687 * C300 + C19683 * C1085 - C19688 * C1078) *
                C49950) *
               C50110 * C50240 +
           ((C19685 * C446 - C19680 * C456 + C19686 * C867 - C19681 * C872 +
             C19687 * C1534 - C19682 * C1538 + C19688 * C3181 -
             C19683 * C3184) *
                C19689 +
            (C19685 * C457 - C19680 * C476 + C19686 * C873 - C19681 * C882 +
             C19687 * C1539 - C19682 * C1546 + C19688 * C3185 -
             C19683 * C3190) *
                C49950) *
               C50110 * C50077) *
              C49997 * C50282 +
          (((C19685 * C123 - C19680 * C131 + C19686 * C282 - C19681 * C293 +
             C19687 * C286 - C19682 * C301 + C19688 * C1074 - C19683 * C1079) *
                C19689 +
            (C19685 * C132 - C19680 * C144 + C19686 * C294 - C19681 * C312 +
             C19687 * C302 - C19682 * C316 + C19688 * C1080 - C19683 * C1086) *
                C49950) *
               C50110 * C50240 +
           ((C19680 * C458 - C19685 * C447 + C19681 * C874 - C19686 * C868 +
             C19682 * C1540 - C19687 * C1535 + C19683 * C3186 -
             C19688 * C3182) *
                C19689 +
            (C19680 * C477 - C19685 * C459 + C19681 * C883 - C19686 * C875 +
             C19682 * C1547 - C19687 * C1541 + C19683 * C3191 -
             C19688 * C3187) *
                C49950) *
               C50110 * C50077) *
              C49997 * C50283 +
          (((C19680 * C133 - C19685 * C124 + C19681 * C295 - C19686 * C283 +
             C19682 * C303 - C19687 * C287 + C19683 * C1081 - C19688 * C1075) *
                C19689 +
            (C19680 * C145 - C19685 * C134 + C19681 * C313 - C19686 * C296 +
             C19682 * C317 - C19687 * C304 + C19683 * C1087 - C19688 * C1082) *
                C49950) *
               C50110 * C50240 +
           ((C19685 * C448 - C19680 * C460 + C19686 * C869 - C19681 * C876 +
             C19687 * C1536 - C19682 * C1542 + C19688 * C3183 -
             C19683 * C3188) *
                C19689 +
            (C19685 * C461 - C19680 * C478 + C19686 * C877 - C19681 * C884 +
             C19687 * C1543 - C19682 * C1548 + C19688 * C3189 -
             C19683 * C3192) *
                C49950) *
               C50110 * C50077) *
              C49997 * C612)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                C16929 +
            (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                C16924 +
            (C16933 - C16934 + C16935 - C16936) * C16930 +
            (C16937 - C16938 + C16939 - C16940) * C16925 + C16973 * C16931 +
            C16974 * C16926) *
               C50110 * C50240 +
           ((C16927 * C446 - C16922 * C456 + C16928 * C867 - C50146 * C872) *
                C16929 +
            (C16927 * C457 - C16922 * C476 + C16928 * C873 - C50146 * C882) *
                C16924 +
            (C17301 - C17302 + C17303 - C17304) * C16930 +
            (C17305 - C17306 + C17307 - C17308) * C16925 + C17651 * C16931 +
            C17652 * C16926) *
               C50110 * C50077) *
              C49997 * C50282 +
          (((C16934 - C16933 + C16936 - C16935) * C16929 +
            (C16938 - C16937 + C16940 - C16939) * C16924 +
            (C16942 - C16941 + C16944 - C16943) * C16930 +
            (C16946 - C16945 + C16948 - C16947) * C16925 + C16975 * C16931 +
            C16976 * C16926) *
               C50110 * C50240 +
           ((C17302 - C17301 + C17304 - C17303) * C16929 +
            (C17306 - C17305 + C17308 - C17307) * C16924 +
            (C17310 - C17309 + C17312 - C17311) * C16930 +
            (C17314 - C17313 + C17316 - C17315) * C16925 +
            (C17643 - C17644 + C17645 - C17646) * C16931 +
            (C17647 - C17648 + C17649 - C17650) * C16926) *
               C50110 * C50077) *
              C49997 * C50283 +
          ((C16973 * C16929 + C16974 * C16924 +
            (C16950 - C16949 + C16952 - C16951) * C16930 +
            (C16954 - C16953 + C16956 - C16955) * C16925 +
            (C16957 - C16958 + C16959 - C16960) * C16931 +
            (C16961 - C16962 + C16963 - C16964) * C16926) *
               C50110 * C50240 +
           (C17651 * C16929 + C17652 * C16924 +
            (C17644 - C17643 + C17646 - C17645) * C16930 +
            (C17648 - C17647 + C17650 - C17649) * C16925 +
            (C16927 * C454 - C16922 * C472 + C16928 * C871 - C50146 * C880) *
                C16931 +
            (C16927 * C473 - C16922 * C484 + C16928 * C881 - C50146 * C886) *
                C16926) *
               C50110 * C50077) *
              C49997 * C612)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                 C19689 +
             (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                 C49950) *
                C5095 +
            ((C21795 - C21796 + C21797 - C21798) * C19689 +
             (C21799 - C21800 + C21801 - C21802) * C49950) *
                C5096 +
            C21844 * C5097) *
               C50240 +
           (((C21796 - C21795 + C21798 - C21797) * C19689 +
             (C21800 - C21799 + C21802 - C21801) * C49950) *
                C5095 +
            ((C21804 - C21803 + C21806 - C21805) * C19689 +
             (C21808 - C21807 + C21810 - C21809) * C49950) *
                C5096 +
            ((C21811 - C21812 + C21813 - C21814) * C19689 +
             (C21815 - C21816 + C21817 - C21818) * C49950) *
                C5097) *
               C50077) *
              C49997 * C50282 +
          ((((C16934 - C16933 + C16936 - C16935) * C19689 +
             (C16938 - C16937 + C16940 - C16939) * C49950) *
                C5095 +
            ((C17301 - C17302 + C17303 - C17304) * C19689 +
             (C17305 - C17306 + C17307 - C17308) * C49950) *
                C5096 +
            C21843 * C5097) *
               C50240 +
           (((C17302 - C17301 + C17304 - C17303) * C19689 +
             (C17306 - C17305 + C17308 - C17307) * C49950) *
                C5095 +
            ((C17317 - C17318 + C17319 - C17320) * C19689 +
             (C17321 - C17322 + C17323 - C17324) * C49950) *
                C5096 +
            ((C21823 - C21824 + C21825 - C21826) * C19689 +
             (C21827 - C21828 + C21829 - C21830) * C49950) *
                C5097) *
               C50077) *
              C49997 * C50283 +
          (((C16973 * C19689 + C16974 * C49950) * C5095 +
            ((C17310 - C17309 + C17312 - C17311) * C19689 +
             (C17314 - C17313 + C17316 - C17315) * C49950) *
                C5096 +
            ((C17325 - C17326 + C17327 - C17328) * C19689 +
             (C17329 - C17330 + C17331 - C17332) * C49950) *
                C5097) *
               C50240 +
           ((C17651 * C19689 + C17652 * C49950) * C5095 +
            ((C17326 - C17325 + C17328 - C17327) * C19689 +
             (C17330 - C17329 + C17332 - C17331) * C49950) *
                C5096 +
            ((C16927 * C1820 - C16922 * C1826 + C16928 * C5962 -
              C50146 * C5963) *
                 C19689 +
             (C16927 * C1827 - C16922 * C1832 + C16928 * C5964 -
              C50146 * C5965) *
                 C49950) *
                C5097) *
               C50077) *
              C49997 * C612)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                C16929 +
            (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                C16924 +
            (C16933 - C16934 + C16935 - C16936) * C16930 +
            (C16937 - C16938 + C16939 - C16940) * C16925 + C16973 * C16931 +
            C16974 * C16926) *
               C50110 * C50013 * C276 +
           ((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                C16929 +
            (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                C16924 +
            (C17123 - C17124 + C17125 - C17126) * C16930 +
            (C17127 - C17128 + C17129 - C17130) * C16925 +
            (C17131 - C17132 + C17133 - C17134) * C16931 +
            (C17135 - C17136 + C17137 - C17138) * C16926) *
               C50110 * C50013 * C277 +
           ((C16922 * C299 - C16927 * C285 + C50146 * C1077 - C16928 * C1073) *
                C16929 +
            (C16922 * C315 - C16927 * C300 + C50146 * C1085 - C16928 * C1078) *
                C16924 +
            (C17139 - C17140 + C17141 - C17142) * C16930 +
            (C17143 - C17144 + C17145 - C17146) * C16925 +
            (C17147 - C17148 + C17149 - C17150) * C16931 +
            (C17151 - C17152 + C17153 - C17154) * C16926) *
               C50110 * C50013 * C278) *
              C279 +
          (((C16934 - C16933 + C16936 - C16935) * C16929 +
            (C16938 - C16937 + C16940 - C16939) * C16924 +
            (C16942 - C16941 + C16944 - C16943) * C16930 +
            (C16946 - C16945 + C16948 - C16947) * C16925 + C16975 * C16931 +
            C16976 * C16926) *
               C50110 * C50013 * C276 +
           ((C17124 - C17123 + C17126 - C17125) * C16929 +
            (C17128 - C17127 + C17130 - C17129) * C16924 +
            (C17132 - C17131 + C17134 - C17133) * C16930 +
            (C17136 - C17135 + C17138 - C17137) * C16925 +
            (C16922 * C297 - C16927 * C284 + C50146 * C305 - C16928 * C288) *
                C16931 +
            (C16922 * C314 - C16927 * C298 + C50146 * C318 - C16928 * C306) *
                C16926) *
               C50110 * C50013 * C277 +
           ((C17140 - C17139 + C17142 - C17141) * C16929 +
            (C17144 - C17143 + C17146 - C17145) * C16924 +
            (C17148 - C17147 + C17150 - C17149) * C16930 +
            (C17152 - C17151 + C17154 - C17153) * C16925 +
            (C16927 * C288 - C16922 * C305 + C16928 * C1076 - C50146 * C1083) *
                C16931 +
            (C16927 * C306 - C16922 * C318 + C16928 * C1084 - C50146 * C1088) *
                C16926) *
               C50110 * C50013 * C278) *
              C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
               C16929 +
           (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
               C16924 +
           (C16933 - C16934 + C16935 - C16936) * C16930 +
           (C16937 - C16938 + C16939 - C16940) * C16925 + C16973 * C16931 +
           C16974 * C16926) *
              C50110 * C50013 * C49997 * C113 +
          ((C16934 - C16933 + C16936 - C16935) * C16929 +
           (C16938 - C16937 + C16940 - C16939) * C16924 +
           (C16942 - C16941 + C16944 - C16943) * C16930 +
           (C16946 - C16945 + C16948 - C16947) * C16925 + C16975 * C16931 +
           C16976 * C16926) *
              C50110 * C50013 * C49997 * C114 +
          (C16973 * C16929 + C16974 * C16924 +
           (C16950 - C16949 + C16952 - C16951) * C16930 +
           (C16954 - C16953 + C16956 - C16955) * C16925 +
           (C16957 - C16958 + C16959 - C16960) * C16931 +
           (C16961 - C16962 + C16963 - C16964) * C16926) *
              C50110 * C50013 * C49997 * C115 +
          (C16975 * C16929 + C16976 * C16924 +
           (C16958 - C16957 + C16960 - C16959) * C16930 +
           (C16962 - C16961 + C16964 - C16963) * C16925 +
           (C16927 * C127 - C16922 * C139 + C16928 * C613 - C50146 * C614) *
               C16931 +
           (C16927 * C140 - C16922 * C148 + C16928 * C615 - C50146 * C616) *
               C16926) *
              C50110 * C50013 * C49997 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C19680 * C129 - C19685 * C122 + C19681 * C291 - C19686 * C281 +
            C19682 * C299 - C19687 * C285 + C19683 * C1077 - C19688 * C1073) *
               C19689 +
           (C19680 * C143 - C19685 * C130 + C19681 * C311 - C19686 * C292 +
            C19682 * C315 - C19687 * C300 + C19683 * C1085 - C19688 * C1078) *
               C49950) *
              C50110 * C50013 * C49997 * C113 +
          ((C19685 * C123 - C19680 * C131 + C19686 * C282 - C19681 * C293 +
            C19687 * C286 - C19682 * C301 + C19688 * C1074 - C19683 * C1079) *
               C19689 +
           (C19685 * C132 - C19680 * C144 + C19686 * C294 - C19681 * C312 +
            C19687 * C302 - C19682 * C316 + C19688 * C1080 - C19683 * C1086) *
               C49950) *
              C50110 * C50013 * C49997 * C114 +
          ((C19680 * C133 - C19685 * C124 + C19681 * C295 - C19686 * C283 +
            C19682 * C303 - C19687 * C287 + C19683 * C1081 - C19688 * C1075) *
               C19689 +
           (C19680 * C145 - C19685 * C134 + C19681 * C313 - C19686 * C296 +
            C19682 * C317 - C19687 * C304 + C19683 * C1087 - C19688 * C1082) *
               C49950) *
              C50110 * C50013 * C49997 * C115 +
          ((C19685 * C125 - C19680 * C135 + C19686 * C284 - C19681 * C297 +
            C19687 * C288 - C19682 * C305 + C19688 * C1076 - C19683 * C1083) *
               C19689 +
           (C19685 * C136 - C19680 * C146 + C19686 * C298 - C19681 * C314 +
            C19687 * C306 - C19682 * C318 + C19688 * C1084 - C19683 * C1088) *
               C49950) *
              C50110 * C50013 * C49997 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19680 * C129 - C19685 * C122 + C19681 * C291 - C19686 * C281 +
             C19682 * C299 - C19687 * C285 + C19683 * C1077 - C19688 * C1073) *
                C19689 +
            (C19680 * C143 - C19685 * C130 + C19681 * C311 - C19686 * C292 +
             C19682 * C315 - C19687 * C300 + C19683 * C1085 - C19688 * C1078) *
                C49950) *
               C50110 * C50013 * C276 +
           ((C19685 * C281 - C19680 * C291 + C19686 * C285 - C19681 * C299 +
             C19687 * C1073 - C19682 * C1077 + C19688 * C2453 -
             C19683 * C2456) *
                C19689 +
            (C19685 * C292 - C19680 * C311 + C19686 * C300 - C19681 * C315 +
             C19687 * C1078 - C19682 * C1085 + C19688 * C2457 -
             C19683 * C2462) *
                C49950) *
               C50110 * C50013 * C277 +
           ((C19680 * C299 - C19685 * C285 + C19681 * C1077 - C19686 * C1073 +
             C19682 * C2456 - C19687 * C2453 + C19683 * C3451 -
             C19688 * C3449) *
                C19689 +
            (C19680 * C315 - C19685 * C300 + C19681 * C1085 - C19686 * C1078 +
             C19682 * C2462 - C19687 * C2457 + C19683 * C3455 -
             C19688 * C3452) *
                C49950) *
               C50110 * C50013 * C278) *
              C279 +
          (((C19685 * C123 - C19680 * C131 + C19686 * C282 - C19681 * C293 +
             C19687 * C286 - C19682 * C301 + C19688 * C1074 - C19683 * C1079) *
                C19689 +
            (C19685 * C132 - C19680 * C144 + C19686 * C294 - C19681 * C312 +
             C19687 * C302 - C19682 * C316 + C19688 * C1080 - C19683 * C1086) *
                C49950) *
               C50110 * C50013 * C276 +
           ((C19680 * C293 - C19685 * C282 + C19681 * C301 - C19686 * C286 +
             C19682 * C1079 - C19687 * C1074 + C19683 * C2458 -
             C19688 * C2454) *
                C19689 +
            (C19680 * C312 - C19685 * C294 + C19681 * C316 - C19686 * C302 +
             C19682 * C1086 - C19687 * C1080 + C19683 * C2463 -
             C19688 * C2459) *
                C49950) *
               C50110 * C50013 * C277 +
           ((C19685 * C286 - C19680 * C301 + C19686 * C1074 - C19681 * C1079 +
             C19687 * C2454 - C19682 * C2458 + C19688 * C3450 -
             C19683 * C3453) *
                C19689 +
            (C19685 * C302 - C19680 * C316 + C19686 * C1080 - C19681 * C1086 +
             C19687 * C2459 - C19682 * C2463 + C19688 * C3454 -
             C19683 * C3456) *
                C49950) *
               C50110 * C50013 * C278) *
              C49984)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                C19689 +
            (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                C49950) *
               C5095 +
           ((C16922 * C456 - C16927 * C446 + C50146 * C872 - C16928 * C867) *
                C19689 +
            (C16922 * C476 - C16927 * C457 + C50146 * C882 - C16928 * C873) *
                C49950) *
               C5096 +
           ((C16922 * C464 - C16927 * C450 + C50146 * C1191 - C16928 * C1187) *
                C19689 +
            (C16922 * C480 - C16927 * C465 + C50146 * C1199 - C16928 * C1192) *
                C49950) *
               C5097) *
              C50013 * C49997 * C113 +
          (((C16934 - C16933 + C16936 - C16935) * C19689 +
            (C16938 - C16937 + C16940 - C16939) * C49950) *
               C5095 +
           ((C17301 - C17302 + C17303 - C17304) * C19689 +
            (C17305 - C17306 + C17307 - C17308) * C49950) *
               C5096 +
           ((C17318 - C17317 + C17320 - C17319) * C19689 +
            (C17322 - C17321 + C17324 - C17323) * C49950) *
               C5097) *
              C50013 * C49997 * C114 +
          ((C16973 * C19689 + C16974 * C49950) * C5095 +
           ((C17310 - C17309 + C17312 - C17311) * C19689 +
            (C17314 - C17313 + C17316 - C17315) * C49950) *
               C5096 +
           ((C17325 - C17326 + C17327 - C17328) * C19689 +
            (C17329 - C17330 + C17331 - C17332) * C49950) *
               C5097) *
              C50013 * C49997 * C115 +
          ((C16975 * C19689 + C16976 * C49950) * C5095 +
           ((C17644 - C17643 + C17646 - C17645) * C19689 +
            (C17648 - C17647 + C17650 - C17649) * C49950) *
               C5096 +
           ((C16927 * C453 - C16922 * C470 + C16928 * C1190 - C50146 * C1197) *
                C19689 +
            (C16927 * C471 - C16922 * C483 + C16928 * C1198 - C50146 * C1202) *
                C49950) *
               C5097) *
              C50013 * C49997 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                 C19689 +
             (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                 C49950) *
                C5095 +
            ((C16922 * C456 - C16927 * C446 + C50146 * C872 - C16928 * C867) *
                 C19689 +
             (C16922 * C476 - C16927 * C457 + C50146 * C882 - C16928 * C873) *
                 C49950) *
                C5096 +
            ((C16922 * C464 - C16927 * C450 + C50146 * C1191 - C16928 * C1187) *
                 C19689 +
             (C16922 * C480 - C16927 * C465 + C50146 * C1199 - C16928 * C1192) *
                 C49950) *
                C5097) *
               C50013 * C276 +
           (((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                 C19689 +
             (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                 C49950) *
                C5095 +
            ((C16927 * C867 - C16922 * C872 + C16928 * C1534 - C50146 * C1538) *
                 C19689 +
             (C16927 * C873 - C16922 * C882 + C16928 * C1539 - C50146 * C1546) *
                 C49950) *
                C5096 +
            ((C16927 * C1187 - C16922 * C1191 + C16928 * C2635 -
              C50146 * C2638) *
                 C19689 +
             (C16927 * C1192 - C16922 * C1199 + C16928 * C2639 -
              C50146 * C2644) *
                 C49950) *
                C5097) *
               C50013 * C277 +
           (((C16922 * C299 - C16927 * C285 + C50146 * C1077 - C16928 * C1073) *
                 C19689 +
             (C16922 * C315 - C16927 * C300 + C50146 * C1085 - C16928 * C1078) *
                 C49950) *
                C5095 +
            ((C16922 * C1538 - C16927 * C1534 + C50146 * C3184 -
              C16928 * C3181) *
                 C19689 +
             (C16922 * C1546 - C16927 * C1539 + C50146 * C3190 -
              C16928 * C3185) *
                 C49950) *
                C5096 +
            ((C16922 * C2638 - C16927 * C2635 + C50146 * C3605 -
              C16928 * C3603) *
                 C19689 +
             (C16922 * C2644 - C16927 * C2639 + C50146 * C3609 -
              C16928 * C3606) *
                 C49950) *
                C5097) *
               C50013 * C278) *
              C279 +
          ((((C16934 - C16933 + C16936 - C16935) * C19689 +
             (C16938 - C16937 + C16940 - C16939) * C49950) *
                C5095 +
            ((C17301 - C17302 + C17303 - C17304) * C19689 +
             (C17305 - C17306 + C17307 - C17308) * C49950) *
                C5096 +
            ((C17318 - C17317 + C17320 - C17319) * C19689 +
             (C17322 - C17321 + C17324 - C17323) * C49950) *
                C5097) *
               C50013 * C276 +
           (((C17124 - C17123 + C17126 - C17125) * C19689 +
             (C17128 - C17127 + C17130 - C17129) * C49950) *
                C5095 +
            ((C17847 - C17848 + C17849 - C17850) * C19689 +
             (C17851 - C17852 + C17853 - C17854) * C49950) *
                C5096 +
            ((C16922 * C1193 - C16927 * C1188 + C50146 * C2640 -
              C16928 * C2636) *
                 C19689 +
             (C16922 * C1200 - C16927 * C1194 + C50146 * C2645 -
              C16928 * C2641) *
                 C49950) *
                C5097) *
               C50013 * C277 +
           (((C17140 - C17139 + C17142 - C17141) * C19689 +
             (C17144 - C17143 + C17146 - C17145) * C49950) *
                C5095 +
            ((C16927 * C1535 - C16922 * C1540 + C16928 * C3182 -
              C50146 * C3186) *
                 C19689 +
             (C16927 * C1541 - C16922 * C1547 + C16928 * C3187 -
              C50146 * C3191) *
                 C49950) *
                C5096 +
            ((C16927 * C2636 - C16922 * C2640 + C16928 * C3604 -
              C50146 * C3607) *
                 C19689 +
             (C16927 * C2641 - C16922 * C2645 + C16928 * C3608 -
              C50146 * C3610) *
                 C49950) *
                C5097) *
               C50013 * C278) *
              C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19680 * C129 - C19685 * C122 + C19681 * C291 - C19686 * C281 +
             C19682 * C299 - C19687 * C285 + C19683 * C1077 - C19688 * C1073) *
                C19689 +
            (C19680 * C143 - C19685 * C130 + C19681 * C311 - C19686 * C292 +
             C19682 * C315 - C19687 * C300 + C19683 * C1085 - C19688 * C1078) *
                C49950) *
               C50110 * C50013 * C50284 +
           ((C19685 * C281 - C19680 * C291 + C19686 * C285 - C19681 * C299 +
             C19687 * C1073 - C19682 * C1077 + C19688 * C2453 -
             C19683 * C2456) *
                C19689 +
            (C19685 * C292 - C19680 * C311 + C19686 * C300 - C19681 * C315 +
             C19687 * C1078 - C19682 * C1085 + C19688 * C2457 -
             C19683 * C2462) *
                C49950) *
               C50110 * C50013 * C50285 +
           ((C19680 * C299 - C19685 * C285 + C19681 * C1077 - C19686 * C1073 +
             C19682 * C2456 - C19687 * C2453 + C19683 * C3451 -
             C19688 * C3449) *
                C19689 +
            (C19680 * C315 - C19685 * C300 + C19681 * C1085 - C19686 * C1078 +
             C19682 * C2462 - C19687 * C2457 + C19683 * C3455 -
             C19688 * C3452) *
                C49950) *
               C50110 * C50013 * C1303) *
              C50231 +
          (((C19685 * C123 - C19680 * C131 + C19686 * C282 - C19681 * C293 +
             C19687 * C286 - C19682 * C301 + C19688 * C1074 - C19683 * C1079) *
                C19689 +
            (C19685 * C132 - C19680 * C144 + C19686 * C294 - C19681 * C312 +
             C19687 * C302 - C19682 * C316 + C19688 * C1080 - C19683 * C1086) *
                C49950) *
               C50110 * C50013 * C50284 +
           ((C19680 * C293 - C19685 * C282 + C19681 * C301 - C19686 * C286 +
             C19682 * C1079 - C19687 * C1074 + C19683 * C2458 -
             C19688 * C2454) *
                C19689 +
            (C19680 * C312 - C19685 * C294 + C19681 * C316 - C19686 * C302 +
             C19682 * C1086 - C19687 * C1080 + C19683 * C2463 -
             C19688 * C2459) *
                C49950) *
               C50110 * C50013 * C50285 +
           ((C19685 * C286 - C19680 * C301 + C19686 * C1074 - C19681 * C1079 +
             C19687 * C2454 - C19682 * C2458 + C19688 * C3450 -
             C19683 * C3453) *
                C19689 +
            (C19685 * C302 - C19680 * C316 + C19686 * C1080 - C19681 * C1086 +
             C19687 * C2459 - C19682 * C2463 + C19688 * C3454 -
             C19683 * C3456) *
                C49950) *
               C50110 * C50013 * C1303) *
              C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                C16929 +
            (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                C16924 +
            (C16933 - C16934 + C16935 - C16936) * C16930 +
            (C16937 - C16938 + C16939 - C16940) * C16925 + C16973 * C16931 +
            C16974 * C16926) *
               C50110 * C50013 * C50284 +
           ((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                C16929 +
            (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                C16924 +
            (C17123 - C17124 + C17125 - C17126) * C16930 +
            (C17127 - C17128 + C17129 - C17130) * C16925 + C17491 * C16931 +
            C17492 * C16926) *
               C50110 * C50013 * C50285 +
           ((C16922 * C299 - C16927 * C285 + C50146 * C1077 - C16928 * C1073) *
                C16929 +
            (C16922 * C315 - C16927 * C300 + C50146 * C1085 - C16928 * C1078) *
                C16924 +
            (C17139 - C17140 + C17141 - C17142) * C16930 +
            (C17143 - C17144 + C17145 - C17146) * C16925 +
            (C17147 - C17148 + C17149 - C17150) * C16931 +
            (C17151 - C17152 + C17153 - C17154) * C16926) *
               C50110 * C50013 * C1303) *
              C50231 +
          (((C16934 - C16933 + C16936 - C16935) * C16929 +
            (C16938 - C16937 + C16940 - C16939) * C16924 +
            (C16942 - C16941 + C16944 - C16943) * C16930 +
            (C16946 - C16945 + C16948 - C16947) * C16925 + C16975 * C16931 +
            C16976 * C16926) *
               C50110 * C50013 * C50284 +
           ((C17124 - C17123 + C17126 - C17125) * C16929 +
            (C17128 - C17127 + C17130 - C17129) * C16924 +
            (C17132 - C17131 + C17134 - C17133) * C16930 +
            (C17136 - C17135 + C17138 - C17137) * C16925 +
            (C17483 - C17484 + C17485 - C17486) * C16931 +
            (C17487 - C17488 + C17489 - C17490) * C16926) *
               C50110 * C50013 * C50285 +
           ((C17140 - C17139 + C17142 - C17141) * C16929 +
            (C17144 - C17143 + C17146 - C17145) * C16924 +
            (C17148 - C17147 + C17150 - C17149) * C16930 +
            (C17152 - C17151 + C17154 - C17153) * C16925 +
            (C16927 * C288 - C16922 * C305 + C16928 * C1076 - C50146 * C1083) *
                C16931 +
            (C16927 * C306 - C16922 * C318 + C16928 * C1084 - C50146 * C1088) *
                C16926) *
               C50110 * C50013 * C1303) *
              C49984)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                 C19689 +
             (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                 C49950) *
                C5095 +
            ((C21795 - C21796 + C21797 - C21798) * C19689 +
             (C21799 - C21800 + C21801 - C21802) * C49950) *
                C5096 +
            C21844 * C5097) *
               C50013 * C50284 +
           (((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                 C19689 +
             (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                 C49950) *
                C5095 +
            ((C22331 - C22332 + C22333 - C22334) * C19689 +
             (C22335 - C22336 + C22337 - C22338) * C49950) *
                C5096 +
            C22765 * C5097) *
               C50013 * C50285 +
           (((C16922 * C299 - C16927 * C285 + C50146 * C1077 - C16928 * C1073) *
                 C19689 +
             (C16922 * C315 - C16927 * C300 + C50146 * C1085 - C16928 * C1078) *
                 C49950) *
                C5095 +
            ((C16922 * C1538 - C16927 * C1534 + C50146 * C3184 -
              C16928 * C3181) *
                 C19689 +
             (C16922 * C1546 - C16927 * C1539 + C50146 * C3190 -
              C16928 * C3185) *
                 C49950) *
                C5096 +
            ((C16922 * C2638 - C16927 * C2635 + C50146 * C3605 -
              C16928 * C3603) *
                 C19689 +
             (C16922 * C2644 - C16927 * C2639 + C50146 * C3609 -
              C16928 * C3606) *
                 C49950) *
                C5097) *
               C50013 * C1303) *
              C50231 +
          ((((C16934 - C16933 + C16936 - C16935) * C19689 +
             (C16938 - C16937 + C16940 - C16939) * C49950) *
                C5095 +
            ((C17301 - C17302 + C17303 - C17304) * C19689 +
             (C17305 - C17306 + C17307 - C17308) * C49950) *
                C5096 +
            C21843 * C5097) *
               C50013 * C50284 +
           (((C17124 - C17123 + C17126 - C17125) * C19689 +
             (C17128 - C17127 + C17130 - C17129) * C49950) *
                C5095 +
            ((C17847 - C17848 + C17849 - C17850) * C19689 +
             (C17851 - C17852 + C17853 - C17854) * C49950) *
                C5096 +
            ((C22347 - C22348 + C22349 - C22350) * C19689 +
             (C22351 - C22352 + C22353 - C22354) * C49950) *
                C5097) *
               C50013 * C50285 +
           (((C17140 - C17139 + C17142 - C17141) * C19689 +
             (C17144 - C17143 + C17146 - C17145) * C49950) *
                C5095 +
            ((C16927 * C1535 - C16922 * C1540 + C16928 * C3182 -
              C50146 * C3186) *
                 C19689 +
             (C16927 * C1541 - C16922 * C1547 + C16928 * C3187 -
              C50146 * C3191) *
                 C49950) *
                C5096 +
            ((C16927 * C2636 - C16922 * C2640 + C16928 * C3604 -
              C50146 * C3607) *
                 C19689 +
             (C16927 * C2641 - C16922 * C2645 + C16928 * C3608 -
              C50146 * C3610) *
                 C49950) *
                C5097) *
               C50013 * C1303) *
              C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19680 * C129 - C19685 * C122 + C19681 * C291 - C19686 * C281 +
             C19682 * C299 - C19687 * C285 + C19683 * C1077 - C19688 * C1073) *
                C19689 +
            (C19680 * C143 - C19685 * C130 + C19681 * C311 - C19686 * C292 +
             C19682 * C315 - C19687 * C300 + C19683 * C1085 - C19688 * C1078) *
                C49950) *
               C50110 * C50240 +
           ((C19685 * C446 - C19680 * C456 + C19686 * C867 - C19681 * C872 +
             C19687 * C1534 - C19682 * C1538 + C19688 * C3181 -
             C19683 * C3184) *
                C19689 +
            (C19685 * C457 - C19680 * C476 + C19686 * C873 - C19681 * C882 +
             C19687 * C1539 - C19682 * C1546 + C19688 * C3185 -
             C19683 * C3190) *
                C49950) *
               C50110 * C50077) *
              C50284 +
          (((C19685 * C281 - C19680 * C291 + C19686 * C285 - C19681 * C299 +
             C19687 * C1073 - C19682 * C1077 + C19688 * C2453 -
             C19683 * C2456) *
                C19689 +
            (C19685 * C292 - C19680 * C311 + C19686 * C300 - C19681 * C315 +
             C19687 * C1078 - C19682 * C1085 + C19688 * C2457 -
             C19683 * C2462) *
                C49950) *
               C50110 * C50240 +
           ((C19680 * C872 - C19685 * C867 + C19681 * C1538 - C19686 * C1534 +
             C19682 * C3184 - C19687 * C3181 + C19683 * C4099 -
             C19688 * C4097) *
                C19689 +
            (C19680 * C882 - C19685 * C873 + C19681 * C1546 - C19686 * C1539 +
             C19682 * C3190 - C19687 * C3185 + C19683 * C4103 -
             C19688 * C4100) *
                C49950) *
               C50110 * C50077) *
              C50285 +
          (((C19680 * C299 - C19685 * C285 + C19681 * C1077 - C19686 * C1073 +
             C19682 * C2456 - C19687 * C2453 + C19683 * C3451 -
             C19688 * C3449) *
                C19689 +
            (C19680 * C315 - C19685 * C300 + C19681 * C1085 - C19686 * C1078 +
             C19682 * C2462 - C19687 * C2457 + C19683 * C3455 -
             C19688 * C3452) *
                C49950) *
               C50110 * C50240 +
           ((C19685 * C1534 - C19680 * C1538 + C19686 * C3181 - C19681 * C3184 +
             C19687 * C4097 - C19682 * C4099 + C19688 * C20808 -
             C19683 * C20809) *
                C19689 +
            (C19685 * C1539 - C19680 * C1546 + C19686 * C3185 - C19681 * C3190 +
             C19687 * C4100 - C19682 * C4103 + C19688 * C20810 -
             C19683 * C20811) *
                C49950) *
               C50110 * C50077) *
              C1303) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                C16929 +
            (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                C16924 +
            (C16933 - C16934 + C16935 - C16936) * C16930 +
            (C16937 - C16938 + C16939 - C16940) * C16925 + C16973 * C16931 +
            C16974 * C16926) *
               C50110 * C50240 +
           ((C16927 * C446 - C16922 * C456 + C16928 * C867 - C50146 * C872) *
                C16929 +
            (C16927 * C457 - C16922 * C476 + C16928 * C873 - C50146 * C882) *
                C16924 +
            (C17301 - C17302 + C17303 - C17304) * C16930 +
            (C17305 - C17306 + C17307 - C17308) * C16925 + C17651 * C16931 +
            C17652 * C16926) *
               C50110 * C50077) *
              C50284 +
          (((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                C16929 +
            (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                C16924 +
            (C17123 - C17124 + C17125 - C17126) * C16930 +
            (C17127 - C17128 + C17129 - C17130) * C16925 + C17491 * C16931 +
            C17492 * C16926) *
               C50110 * C50240 +
           ((C16922 * C872 - C16927 * C867 + C50146 * C1538 - C16928 * C1534) *
                C16929 +
            (C16922 * C882 - C16927 * C873 + C50146 * C1546 - C16928 * C1539) *
                C16924 +
            (C17847 - C17848 + C17849 - C17850) * C16930 +
            (C17851 - C17852 + C17853 - C17854) * C16925 +
            (C17855 - C17856 + C17857 - C17858) * C16931 +
            (C17859 - C17860 + C17861 - C17862) * C16926) *
               C50110 * C50077) *
              C50285 +
          (((C16922 * C299 - C16927 * C285 + C50146 * C1077 - C16928 * C1073) *
                C16929 +
            (C16922 * C315 - C16927 * C300 + C50146 * C1085 - C16928 * C1078) *
                C16924 +
            (C17139 - C17140 + C17141 - C17142) * C16930 +
            (C17143 - C17144 + C17145 - C17146) * C16925 +
            (C17147 - C17148 + C17149 - C17150) * C16931 +
            (C17151 - C17152 + C17153 - C17154) * C16926) *
               C50110 * C50240 +
           ((C16927 * C1534 - C16922 * C1538 + C16928 * C3181 -
             C50146 * C3184) *
                C16929 +
            (C16927 * C1539 - C16922 * C1546 + C16928 * C3185 -
             C50146 * C3190) *
                C16924 +
            (C16927 * C1535 - C16922 * C1540 + C16928 * C3182 -
             C50146 * C3186) *
                C16930 +
            (C16927 * C1541 - C16922 * C1547 + C16928 * C3187 -
             C50146 * C3191) *
                C16925 +
            (C16927 * C1536 - C16922 * C1542 + C16928 * C3183 -
             C50146 * C3188) *
                C16931 +
            (C16927 * C1543 - C16922 * C1548 + C16928 * C3189 -
             C50146 * C3192) *
                C16926) *
               C50110 * C50077) *
              C1303) *
         C49978) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                 C19689 +
             (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                 C49950) *
                C5095 +
            ((C21795 - C21796 + C21797 - C21798) * C19689 +
             (C21799 - C21800 + C21801 - C21802) * C49950) *
                C5096 +
            C21844 * C5097) *
               C50240 +
           (((C21796 - C21795 + C21798 - C21797) * C19689 +
             (C21800 - C21799 + C21802 - C21801) * C49950) *
                C5095 +
            ((C21804 - C21803 + C21806 - C21805) * C19689 +
             (C21808 - C21807 + C21810 - C21809) * C49950) *
                C5096 +
            ((C21811 - C21812 + C21813 - C21814) * C19689 +
             (C21815 - C21816 + C21817 - C21818) * C49950) *
                C5097) *
               C50077) *
              C50284 +
          ((((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                 C19689 +
             (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                 C49950) *
                C5095 +
            ((C22331 - C22332 + C22333 - C22334) * C19689 +
             (C22335 - C22336 + C22337 - C22338) * C49950) *
                C5096 +
            C22765 * C5097) *
               C50240 +
           (((C22332 - C22331 + C22334 - C22333) * C19689 +
             (C22336 - C22335 + C22338 - C22337) * C49950) *
                C5095 +
            ((C22340 - C22339 + C22342 - C22341) * C19689 +
             (C22344 - C22343 + C22346 - C22345) * C49950) *
                C5096 +
            ((C22753 - C22754 + C22755 - C22756) * C19689 +
             (C22757 - C22758 + C22759 - C22760) * C49950) *
                C5097) *
               C50077) *
              C50285 +
          ((((C16922 * C299 - C16927 * C285 + C50146 * C1077 - C16928 * C1073) *
                 C19689 +
             (C16922 * C315 - C16927 * C300 + C50146 * C1085 - C16928 * C1078) *
                 C49950) *
                C5095 +
            ((C23252 - C23253 + C23254 - C23255) * C19689 +
             (C23256 - C23257 + C23258 - C23259) * C49950) *
                C5096 +
            ((C23260 - C23261 + C23262 - C23263) * C19689 +
             (C23264 - C23265 + C23266 - C23267) * C49950) *
                C5097) *
               C50240 +
           (((C23253 - C23252 + C23255 - C23254) * C19689 +
             (C23257 - C23256 + C23259 - C23258) * C49950) *
                C5095 +
            ((C23261 - C23260 + C23263 - C23262) * C19689 +
             (C23265 - C23264 + C23267 - C23266) * C49950) *
                C5096 +
            ((C16927 * C4496 - C16922 * C4500 + C16928 * C21074 -
              C50146 * C21075) *
                 C19689 +
             (C16927 * C4502 - C16922 * C4508 + C16928 * C21076 -
              C50146 * C21077) *
                 C49950) *
                C5097) *
               C50077) *
              C1303) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C16922 * C129 - C16927 * C122 + C50146 * C291 -
                 C16928 * C281) *
                    C16929 +
                (C16922 * C143 - C16927 * C130 + C50146 * C311 -
                 C16928 * C292) *
                    C16924 +
                (C16933 - C16934 + C16935 - C16936) * C16930 +
                (C16937 - C16938 + C16939 - C16940) * C16925 + C16973 * C16931 +
                C16974 * C16926) *
                   C50110 * C50013 * C997 +
               ((C16927 * C281 - C16922 * C291 + C16928 * C285 -
                 C50146 * C299) *
                    C16929 +
                (C16927 * C292 - C16922 * C311 + C16928 * C300 -
                 C50146 * C315) *
                    C16924 +
                (C17123 - C17124 + C17125 - C17126) * C16930 +
                (C17127 - C17128 + C17129 - C17130) * C16925 + C17491 * C16931 +
                C17492 * C16926) *
                   C50110 * C50013 * C50049) *
                  C999 +
              (((C16934 - C16933 + C16936 - C16935) * C16929 +
                (C16938 - C16937 + C16940 - C16939) * C16924 +
                (C16942 - C16941 + C16944 - C16943) * C16930 +
                (C16946 - C16945 + C16948 - C16947) * C16925 + C16975 * C16931 +
                C16976 * C16926) *
                   C50110 * C50013 * C997 +
               ((C17124 - C17123 + C17126 - C17125) * C16929 +
                (C17128 - C17127 + C17130 - C17129) * C16924 +
                (C17132 - C17131 + C17134 - C17133) * C16930 +
                (C17136 - C17135 + C17138 - C17137) * C16925 +
                (C17483 - C17484 + C17485 - C17486) * C16931 +
                (C17487 - C17488 + C17489 - C17490) * C16926) *
                   C50110 * C50013 * C50049) *
                  C1000 +
              ((C16973 * C16929 + C16974 * C16924 +
                (C16950 - C16949 + C16952 - C16951) * C16930 +
                (C16954 - C16953 + C16956 - C16955) * C16925 +
                (C16957 - C16958 + C16959 - C16960) * C16931 +
                (C16961 - C16962 + C16963 - C16964) * C16926) *
                   C50110 * C50013 * C997 +
               (C17491 * C16929 + C17492 * C16924 +
                (C17484 - C17483 + C17486 - C17485) * C16930 +
                (C17488 - C17487 + C17490 - C17489) * C16925 +
                (C16927 * C289 - C16922 * C307 + C16928 * C290 -
                 C50146 * C309) *
                    C16931 +
                (C16927 * C308 - C16922 * C319 + C16928 * C310 -
                 C50146 * C320) *
                    C16926) *
                   C50110 * C50013 * C50049) *
                  C1001) +
         0.5 * std::pow(Pi, 2.5) *
             (((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                   C16929 +
               (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                   C16924 +
               (C16933 - C16934 + C16935 - C16936) * C16930 +
               (C16937 - C16938 + C16939 - C16940) * C16925 + C16973 * C16931 +
               C16974 * C16926) *
                  C50110 * C50013 * C1068 +
              ((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                   C16929 +
               (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                   C16924 +
               (C17123 - C17124 + C17125 - C17126) * C16930 +
               (C17127 - C17128 + C17129 - C17130) * C16925 + C17491 * C16931 +
               C17492 * C16926) *
                  C50110 * C50013 * C1069 +
              ((C16922 * C299 - C16927 * C285 + C50146 * C1077 -
                C16928 * C1073) *
                   C16929 +
               (C16922 * C315 - C16927 * C300 + C50146 * C1085 -
                C16928 * C1078) *
                   C16924 +
               (C17139 - C17140 + C17141 - C17142) * C16930 +
               (C17143 - C17144 + C17145 - C17146) * C16925 +
               (C17147 - C17148 + C17149 - C17150) * C16931 +
               (C17151 - C17152 + C17153 - C17154) * C16926) *
                  C50110 * C50013 * C1070 +
              ((C16927 * C1073 - C16922 * C1077 + C16928 * C2453 -
                C50146 * C2456) *
                   C16929 +
               (C16927 * C1078 - C16922 * C1085 + C16928 * C2457 -
                C50146 * C2462) *
                   C16924 +
               (C16927 * C1074 - C16922 * C1079 + C16928 * C2454 -
                C50146 * C2458) *
                   C16930 +
               (C16927 * C1080 - C16922 * C1086 + C16928 * C2459 -
                C50146 * C2463) *
                   C16925 +
               (C16927 * C1075 - C16922 * C1081 + C16928 * C2455 -
                C50146 * C2460) *
                   C16931 +
               (C16927 * C1082 - C16922 * C1087 + C16928 * C2461 -
                C50146 * C2464) *
                   C16926) *
                  C50110 * C50013 * C1071) *
             C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                C16929 +
            (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                C16924 +
            (C16933 - C16934 + C16935 - C16936) * C16930 +
            (C16937 - C16938 + C16939 - C16940) * C16925 + C16973 * C16931 +
            C16974 * C16926) *
               C50110 * C443 +
           ((C16927 * C446 - C16922 * C456 + C16928 * C867 - C50146 * C872) *
                C16929 +
            (C16927 * C457 - C16922 * C476 + C16928 * C873 - C50146 * C882) *
                C16924 +
            (C17301 - C17302 + C17303 - C17304) * C16930 +
            (C17305 - C17306 + C17307 - C17308) * C16925 + C17651 * C16931 +
            C17652 * C16926) *
               C50110 * C444 +
           ((C16922 * C464 - C16927 * C450 + C50146 * C1191 - C16928 * C1187) *
                C16929 +
            (C16922 * C480 - C16927 * C465 + C50146 * C1199 - C16928 * C1192) *
                C16924 +
            (C17317 - C17318 + C17319 - C17320) * C16930 +
            (C17321 - C17322 + C17323 - C17324) * C16925 +
            (C17325 - C17326 + C17327 - C17328) * C16931 +
            (C17329 - C17330 + C17331 - C17332) * C16926) *
               C50110 * C445) *
              C997 +
          (((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                C16929 +
            (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                C16924 +
            (C17123 - C17124 + C17125 - C17126) * C16930 +
            (C17127 - C17128 + C17129 - C17130) * C16925 + C17491 * C16931 +
            C17492 * C16926) *
               C50110 * C443 +
           ((C16922 * C872 - C16927 * C867 + C50146 * C1538 - C16928 * C1534) *
                C16929 +
            (C16922 * C882 - C16927 * C873 + C50146 * C1546 - C16928 * C1539) *
                C16924 +
            (C17847 - C17848 + C17849 - C17850) * C16930 +
            (C17851 - C17852 + C17853 - C17854) * C16925 +
            (C17855 - C17856 + C17857 - C17858) * C16931 +
            (C17859 - C17860 + C17861 - C17862) * C16926) *
               C50110 * C444 +
           ((C16927 * C1187 - C16922 * C1191 + C16928 * C2635 -
             C50146 * C2638) *
                C16929 +
            (C16927 * C1192 - C16922 * C1199 + C16928 * C2639 -
             C50146 * C2644) *
                C16924 +
            (C16927 * C1188 - C16922 * C1193 + C16928 * C2636 -
             C50146 * C2640) *
                C16930 +
            (C16927 * C1194 - C16922 * C1200 + C16928 * C2641 -
             C50146 * C2645) *
                C16925 +
            (C16927 * C1189 - C16922 * C1195 + C16928 * C2637 -
             C50146 * C2642) *
                C16931 +
            (C16927 * C1196 - C16922 * C1201 + C16928 * C2643 -
             C50146 * C2646) *
                C16926) *
               C50110 * C445) *
              C50049) *
         C49978) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C19680 * C129 - C19685 * C122 + C19681 * C291 - C19686 * C281 +
             C19682 * C299 - C19687 * C285 + C19683 * C1077 - C19688 * C1073) *
                C19689 +
            (C19680 * C143 - C19685 * C130 + C19681 * C311 - C19686 * C292 +
             C19682 * C315 - C19687 * C300 + C19683 * C1085 - C19688 * C1078) *
                C49950) *
               C50110 * C50013 * C997 +
           ((C19685 * C281 - C19680 * C291 + C19686 * C285 - C19681 * C299 +
             C19687 * C1073 - C19682 * C1077 + C19688 * C2453 -
             C19683 * C2456) *
                C19689 +
            (C19685 * C292 - C19680 * C311 + C19686 * C300 - C19681 * C315 +
             C19687 * C1078 - C19682 * C1085 + C19688 * C2457 -
             C19683 * C2462) *
                C49950) *
               C50110 * C50013 * C50049) *
              C999 +
          (((C19685 * C123 - C19680 * C131 + C19686 * C282 - C19681 * C293 +
             C19687 * C286 - C19682 * C301 + C19688 * C1074 - C19683 * C1079) *
                C19689 +
            (C19685 * C132 - C19680 * C144 + C19686 * C294 - C19681 * C312 +
             C19687 * C302 - C19682 * C316 + C19688 * C1080 - C19683 * C1086) *
                C49950) *
               C50110 * C50013 * C997 +
           ((C19680 * C293 - C19685 * C282 + C19681 * C301 - C19686 * C286 +
             C19682 * C1079 - C19687 * C1074 + C19683 * C2458 -
             C19688 * C2454) *
                C19689 +
            (C19680 * C312 - C19685 * C294 + C19681 * C316 - C19686 * C302 +
             C19682 * C1086 - C19687 * C1080 + C19683 * C2463 -
             C19688 * C2459) *
                C49950) *
               C50110 * C50013 * C50049) *
              C1000 +
          (((C19680 * C133 - C19685 * C124 + C19681 * C295 - C19686 * C283 +
             C19682 * C303 - C19687 * C287 + C19683 * C1081 - C19688 * C1075) *
                C19689 +
            (C19680 * C145 - C19685 * C134 + C19681 * C313 - C19686 * C296 +
             C19682 * C317 - C19687 * C304 + C19683 * C1087 - C19688 * C1082) *
                C49950) *
               C50110 * C50013 * C997 +
           ((C19685 * C283 - C19680 * C295 + C19686 * C287 - C19681 * C303 +
             C19687 * C1075 - C19682 * C1081 + C19688 * C2455 -
             C19683 * C2460) *
                C19689 +
            (C19685 * C296 - C19680 * C313 + C19686 * C304 - C19681 * C317 +
             C19687 * C1082 - C19682 * C1087 + C19688 * C2461 -
             C19683 * C2464) *
                C49950) *
               C50110 * C50013 * C50049) *
              C1001)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C19680 * C129 - C19685 * C122 + C19681 * C291 - C19686 * C281 +
            C19682 * C299 - C19687 * C285 + C19683 * C1077 - C19688 * C1073) *
               C19689 +
           (C19680 * C143 - C19685 * C130 + C19681 * C311 - C19686 * C292 +
            C19682 * C315 - C19687 * C300 + C19683 * C1085 - C19688 * C1078) *
               C49950) *
              C50110 * C50013 * C1068 +
          ((C19685 * C281 - C19680 * C291 + C19686 * C285 - C19681 * C299 +
            C19687 * C1073 - C19682 * C1077 + C19688 * C2453 - C19683 * C2456) *
               C19689 +
           (C19685 * C292 - C19680 * C311 + C19686 * C300 - C19681 * C315 +
            C19687 * C1078 - C19682 * C1085 + C19688 * C2457 - C19683 * C2462) *
               C49950) *
              C50110 * C50013 * C1069 +
          ((C19680 * C299 - C19685 * C285 + C19681 * C1077 - C19686 * C1073 +
            C19682 * C2456 - C19687 * C2453 + C19683 * C3451 - C19688 * C3449) *
               C19689 +
           (C19680 * C315 - C19685 * C300 + C19681 * C1085 - C19686 * C1078 +
            C19682 * C2462 - C19687 * C2457 + C19683 * C3455 - C19688 * C3452) *
               C49950) *
              C50110 * C50013 * C1070 +
          ((C19685 * C1073 - C19680 * C1077 + C19686 * C2453 - C19681 * C2456 +
            C19687 * C3449 - C19682 * C3451 + C19688 * C20376 -
            C19683 * C20377) *
               C19689 +
           (C19685 * C1078 - C19680 * C1085 + C19686 * C2457 - C19681 * C2462 +
            C19687 * C3452 - C19682 * C3455 + C19688 * C20378 -
            C19683 * C20379) *
               C49950) *
              C50110 * C50013 * C1071) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C19680 * C129 - C19685 * C122 + C19681 * C291 - C19686 * C281 +
             C19682 * C299 - C19687 * C285 + C19683 * C1077 - C19688 * C1073) *
                C19689 +
            (C19680 * C143 - C19685 * C130 + C19681 * C311 - C19686 * C292 +
             C19682 * C315 - C19687 * C300 + C19683 * C1085 - C19688 * C1078) *
                C49950) *
               C50110 * C443 +
           ((C19685 * C446 - C19680 * C456 + C19686 * C867 - C19681 * C872 +
             C19687 * C1534 - C19682 * C1538 + C19688 * C3181 -
             C19683 * C3184) *
                C19689 +
            (C19685 * C457 - C19680 * C476 + C19686 * C873 - C19681 * C882 +
             C19687 * C1539 - C19682 * C1546 + C19688 * C3185 -
             C19683 * C3190) *
                C49950) *
               C50110 * C444 +
           ((C19680 * C464 - C19685 * C450 + C19681 * C1191 - C19686 * C1187 +
             C19682 * C2638 - C19687 * C2635 + C19683 * C3605 -
             C19688 * C3603) *
                C19689 +
            (C19680 * C480 - C19685 * C465 + C19681 * C1199 - C19686 * C1192 +
             C19682 * C2644 - C19687 * C2639 + C19683 * C3609 -
             C19688 * C3606) *
                C49950) *
               C50110 * C445) *
              C997 +
          (((C19685 * C281 - C19680 * C291 + C19686 * C285 - C19681 * C299 +
             C19687 * C1073 - C19682 * C1077 + C19688 * C2453 -
             C19683 * C2456) *
                C19689 +
            (C19685 * C292 - C19680 * C311 + C19686 * C300 - C19681 * C315 +
             C19687 * C1078 - C19682 * C1085 + C19688 * C2457 -
             C19683 * C2462) *
                C49950) *
               C50110 * C443 +
           ((C19680 * C872 - C19685 * C867 + C19681 * C1538 - C19686 * C1534 +
             C19682 * C3184 - C19687 * C3181 + C19683 * C4099 -
             C19688 * C4097) *
                C19689 +
            (C19680 * C882 - C19685 * C873 + C19681 * C1546 - C19686 * C1539 +
             C19682 * C3190 - C19687 * C3185 + C19683 * C4103 -
             C19688 * C4100) *
                C49950) *
               C50110 * C444 +
           ((C19685 * C1187 - C19680 * C1191 + C19686 * C2635 - C19681 * C2638 +
             C19687 * C3603 - C19682 * C3605 + C19688 * C20478 -
             C19683 * C20479) *
                C19689 +
            (C19685 * C1192 - C19680 * C1199 + C19686 * C2639 - C19681 * C2644 +
             C19687 * C3606 - C19682 * C3609 + C19688 * C20480 -
             C19683 * C20481) *
                C49950) *
               C50110 * C445) *
              C50049) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                 C19689 +
             (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                 C49950) *
                C5095 +
            ((C21795 - C21796 + C21797 - C21798) * C19689 +
             (C21799 - C21800 + C21801 - C21802) * C49950) *
                C5096 +
            C21844 * C5097) *
               C50013 * C997 +
           (((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                 C19689 +
             (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                 C49950) *
                C5095 +
            ((C22331 - C22332 + C22333 - C22334) * C19689 +
             (C22335 - C22336 + C22337 - C22338) * C49950) *
                C5096 +
            ((C22339 - C22340 + C22341 - C22342) * C19689 +
             (C22343 - C22344 + C22345 - C22346) * C49950) *
                C5097) *
               C50013 * C50049) *
              C999 +
          ((((C16934 - C16933 + C16936 - C16935) * C19689 +
             (C16938 - C16937 + C16940 - C16939) * C49950) *
                C5095 +
            ((C17301 - C17302 + C17303 - C17304) * C19689 +
             (C17305 - C17306 + C17307 - C17308) * C49950) *
                C5096 +
            C21843 * C5097) *
               C50013 * C997 +
           (((C17124 - C17123 + C17126 - C17125) * C19689 +
             (C17128 - C17127 + C17130 - C17129) * C49950) *
                C5095 +
            ((C17847 - C17848 + C17849 - C17850) * C19689 +
             (C17851 - C17852 + C17853 - C17854) * C49950) *
                C5096 +
            ((C22347 - C22348 + C22349 - C22350) * C19689 +
             (C22351 - C22352 + C22353 - C22354) * C49950) *
                C5097) *
               C50013 * C50049) *
              C1000 +
          (((C16973 * C19689 + C16974 * C49950) * C5095 +
            ((C17310 - C17309 + C17312 - C17311) * C19689 +
             (C17314 - C17313 + C17316 - C17315) * C49950) *
                C5096 +
            ((C17325 - C17326 + C17327 - C17328) * C19689 +
             (C17329 - C17330 + C17331 - C17332) * C49950) *
                C5097) *
               C50013 * C997 +
           ((C17491 * C19689 + C17492 * C49950) * C5095 +
            ((C17856 - C17855 + C17858 - C17857) * C19689 +
             (C17860 - C17859 + C17862 - C17861) * C49950) *
                C5096 +
            ((C16927 * C1189 - C16922 * C1195 + C16928 * C2637 -
              C50146 * C2642) *
                 C19689 +
             (C16927 * C1196 - C16922 * C1201 + C16928 * C2643 -
              C50146 * C2646) *
                 C49950) *
                C5097) *
               C50013 * C50049) *
              C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                C19689 +
            (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                C49950) *
               C5095 +
           ((C21795 - C21796 + C21797 - C21798) * C19689 +
            (C21799 - C21800 + C21801 - C21802) * C49950) *
               C5096 +
           C21844 * C5097) *
              C50013 * C1068 +
          (((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                C19689 +
            (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                C49950) *
               C5095 +
           ((C22331 - C22332 + C22333 - C22334) * C19689 +
            (C22335 - C22336 + C22337 - C22338) * C49950) *
               C5096 +
           ((C22339 - C22340 + C22341 - C22342) * C19689 +
            (C22343 - C22344 + C22345 - C22346) * C49950) *
               C5097) *
              C50013 * C1069 +
          (((C16922 * C299 - C16927 * C285 + C50146 * C1077 - C16928 * C1073) *
                C19689 +
            (C16922 * C315 - C16927 * C300 + C50146 * C1085 - C16928 * C1078) *
                C49950) *
               C5095 +
           ((C16922 * C1538 - C16927 * C1534 + C50146 * C3184 -
             C16928 * C3181) *
                C19689 +
            (C16922 * C1546 - C16927 * C1539 + C50146 * C3190 -
             C16928 * C3185) *
                C49950) *
               C5096 +
           ((C16922 * C2638 - C16927 * C2635 + C50146 * C3605 -
             C16928 * C3603) *
                C19689 +
            (C16922 * C2644 - C16927 * C2639 + C50146 * C3609 -
             C16928 * C3606) *
                C49950) *
               C5097) *
              C50013 * C1070 +
          (((C16927 * C1073 - C16922 * C1077 + C16928 * C2453 -
             C50146 * C2456) *
                C19689 +
            (C16927 * C1078 - C16922 * C1085 + C16928 * C2457 -
             C50146 * C2462) *
                C49950) *
               C5095 +
           ((C16927 * C3181 - C16922 * C3184 + C16928 * C4097 -
             C50146 * C4099) *
                C19689 +
            (C16927 * C3185 - C16922 * C3190 + C16928 * C4100 -
             C50146 * C4103) *
                C49950) *
               C5096 +
           ((C16927 * C3603 - C16922 * C3605 + C16928 * C20478 -
             C50146 * C20479) *
                C19689 +
            (C16927 * C3606 - C16922 * C3609 + C16928 * C20480 -
             C50146 * C20481) *
                C49950) *
               C5097) *
              C50013 * C1071) *
         C49978) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                 C19689 +
             (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                 C49950) *
                C5095 +
            ((C21795 - C21796 + C21797 - C21798) * C19689 +
             (C21799 - C21800 + C21801 - C21802) * C49950) *
                C5096 +
            C21844 * C5097) *
               C443 +
           (((C21796 - C21795 + C21798 - C21797) * C19689 +
             (C21800 - C21799 + C21802 - C21801) * C49950) *
                C5095 +
            ((C21804 - C21803 + C21806 - C21805) * C19689 +
             (C21808 - C21807 + C21810 - C21809) * C49950) *
                C5096 +
            ((C21811 - C21812 + C21813 - C21814) * C19689 +
             (C21815 - C21816 + C21817 - C21818) * C49950) *
                C5097) *
               C444 +
           (C21844 * C5095 +
            ((C21812 - C21811 + C21814 - C21813) * C19689 +
             (C21816 - C21815 + C21818 - C21817) * C49950) *
                C5096 +
            ((C16922 * C5405 - C16927 * C5402 + C50146 * C6378 -
              C16928 * C6376) *
                 C19689 +
             (C16922 * C5411 - C16927 * C5406 + C50146 * C6382 -
              C16928 * C6379) *
                 C49950) *
                C5097) *
               C445) *
              C997 +
          ((((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                 C19689 +
             (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                 C49950) *
                C5095 +
            ((C22331 - C22332 + C22333 - C22334) * C19689 +
             (C22335 - C22336 + C22337 - C22338) * C49950) *
                C5096 +
            C22765 * C5097) *
               C443 +
           (((C22332 - C22331 + C22334 - C22333) * C19689 +
             (C22336 - C22335 + C22338 - C22337) * C49950) *
                C5095 +
            ((C22340 - C22339 + C22342 - C22341) * C19689 +
             (C22344 - C22343 + C22346 - C22345) * C49950) *
                C5096 +
            ((C22753 - C22754 + C22755 - C22756) * C19689 +
             (C22757 - C22758 + C22759 - C22760) * C49950) *
                C5097) *
               C444 +
           (C22765 * C5095 +
            ((C22754 - C22753 + C22756 - C22755) * C19689 +
             (C22758 - C22757 + C22760 - C22759) * C49950) *
                C5096 +
            ((C16927 * C6376 - C16922 * C6378 + C16928 * C22744 -
              C50146 * C22745) *
                 C19689 +
             (C16927 * C6379 - C16922 * C6382 + C16928 * C22746 -
              C50146 * C22747) *
                 C49950) *
                C5097) *
               C445) *
              C50049) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19680 * C129 - C19685 * C122 + C19681 * C291 - C19686 * C281 +
              C19682 * C299 - C19687 * C285 + C19683 * C1077 - C19688 * C1073) *
                 C19689 +
             (C19680 * C143 - C19685 * C130 + C19681 * C311 - C19686 * C292 +
              C19682 * C315 - C19687 * C300 + C19683 * C1085 - C19688 * C1078) *
                 C49950) *
                C50110 * C50240 +
            ((C19685 * C446 - C19680 * C456 + C19686 * C867 - C19681 * C872 +
              C19687 * C1534 - C19682 * C1538 + C19688 * C3181 -
              C19683 * C3184) *
                 C19689 +
             (C19685 * C457 - C19680 * C476 + C19686 * C873 - C19681 * C882 +
              C19687 * C1539 - C19682 * C1546 + C19688 * C3185 -
              C19683 * C3190) *
                 C49950) *
                C50110 * C50077) *
               C997 +
           (((C19685 * C281 - C19680 * C291 + C19686 * C285 - C19681 * C299 +
              C19687 * C1073 - C19682 * C1077 + C19688 * C2453 -
              C19683 * C2456) *
                 C19689 +
             (C19685 * C292 - C19680 * C311 + C19686 * C300 - C19681 * C315 +
              C19687 * C1078 - C19682 * C1085 + C19688 * C2457 -
              C19683 * C2462) *
                 C49950) *
                C50110 * C50240 +
            ((C19680 * C872 - C19685 * C867 + C19681 * C1538 - C19686 * C1534 +
              C19682 * C3184 - C19687 * C3181 + C19683 * C4099 -
              C19688 * C4097) *
                 C19689 +
             (C19680 * C882 - C19685 * C873 + C19681 * C1546 - C19686 * C1539 +
              C19682 * C3190 - C19687 * C3185 + C19683 * C4103 -
              C19688 * C4100) *
                 C49950) *
                C50110 * C50077) *
               C50049) *
              C50231 +
          ((((C19685 * C123 - C19680 * C131 + C19686 * C282 - C19681 * C293 +
              C19687 * C286 - C19682 * C301 + C19688 * C1074 - C19683 * C1079) *
                 C19689 +
             (C19685 * C132 - C19680 * C144 + C19686 * C294 - C19681 * C312 +
              C19687 * C302 - C19682 * C316 + C19688 * C1080 - C19683 * C1086) *
                 C49950) *
                C50110 * C50240 +
            ((C19680 * C458 - C19685 * C447 + C19681 * C874 - C19686 * C868 +
              C19682 * C1540 - C19687 * C1535 + C19683 * C3186 -
              C19688 * C3182) *
                 C19689 +
             (C19680 * C477 - C19685 * C459 + C19681 * C883 - C19686 * C875 +
              C19682 * C1547 - C19687 * C1541 + C19683 * C3191 -
              C19688 * C3187) *
                 C49950) *
                C50110 * C50077) *
               C997 +
           (((C19680 * C293 - C19685 * C282 + C19681 * C301 - C19686 * C286 +
              C19682 * C1079 - C19687 * C1074 + C19683 * C2458 -
              C19688 * C2454) *
                 C19689 +
             (C19680 * C312 - C19685 * C294 + C19681 * C316 - C19686 * C302 +
              C19682 * C1086 - C19687 * C1080 + C19683 * C2463 -
              C19688 * C2459) *
                 C49950) *
                C50110 * C50240 +
            ((C19685 * C868 - C19680 * C874 + C19686 * C1535 - C19681 * C1540 +
              C19687 * C3182 - C19682 * C3186 + C19688 * C4098 -
              C19683 * C4101) *
                 C19689 +
             (C19685 * C875 - C19680 * C883 + C19686 * C1541 - C19681 * C1547 +
              C19687 * C3187 - C19682 * C3191 + C19688 * C4102 -
              C19683 * C4104) *
                 C49950) *
                C50110 * C50077) *
               C50049) *
              C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                 C16929 +
             (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                 C16924 +
             (C16933 - C16934 + C16935 - C16936) * C16930 +
             (C16937 - C16938 + C16939 - C16940) * C16925 + C16973 * C16931 +
             C16974 * C16926) *
                C50110 * C50240 +
            ((C16927 * C446 - C16922 * C456 + C16928 * C867 - C50146 * C872) *
                 C16929 +
             (C16927 * C457 - C16922 * C476 + C16928 * C873 - C50146 * C882) *
                 C16924 +
             (C17301 - C17302 + C17303 - C17304) * C16930 +
             (C17305 - C17306 + C17307 - C17308) * C16925 + C17651 * C16931 +
             C17652 * C16926) *
                C50110 * C50077) *
               C997 +
           (((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                 C16929 +
             (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                 C16924 +
             (C17123 - C17124 + C17125 - C17126) * C16930 +
             (C17127 - C17128 + C17129 - C17130) * C16925 + C17491 * C16931 +
             C17492 * C16926) *
                C50110 * C50240 +
            ((C16922 * C872 - C16927 * C867 + C50146 * C1538 - C16928 * C1534) *
                 C16929 +
             (C16922 * C882 - C16927 * C873 + C50146 * C1546 - C16928 * C1539) *
                 C16924 +
             (C17847 - C17848 + C17849 - C17850) * C16930 +
             (C17851 - C17852 + C17853 - C17854) * C16925 +
             (C17855 - C17856 + C17857 - C17858) * C16931 +
             (C17859 - C17860 + C17861 - C17862) * C16926) *
                C50110 * C50077) *
               C50049) *
              C50231 +
          ((((C16934 - C16933 + C16936 - C16935) * C16929 +
             (C16938 - C16937 + C16940 - C16939) * C16924 +
             (C16942 - C16941 + C16944 - C16943) * C16930 +
             (C16946 - C16945 + C16948 - C16947) * C16925 + C16975 * C16931 +
             C16976 * C16926) *
                C50110 * C50240 +
            ((C17302 - C17301 + C17304 - C17303) * C16929 +
             (C17306 - C17305 + C17308 - C17307) * C16924 +
             (C17310 - C17309 + C17312 - C17311) * C16930 +
             (C17314 - C17313 + C17316 - C17315) * C16925 +
             (C17643 - C17644 + C17645 - C17646) * C16931 +
             (C17647 - C17648 + C17649 - C17650) * C16926) *
                C50110 * C50077) *
               C997 +
           (((C17124 - C17123 + C17126 - C17125) * C16929 +
             (C17128 - C17127 + C17130 - C17129) * C16924 +
             (C17132 - C17131 + C17134 - C17133) * C16930 +
             (C17136 - C17135 + C17138 - C17137) * C16925 +
             (C17483 - C17484 + C17485 - C17486) * C16931 +
             (C17487 - C17488 + C17489 - C17490) * C16926) *
                C50110 * C50240 +
            ((C17848 - C17847 + C17850 - C17849) * C16929 +
             (C17852 - C17851 + C17854 - C17853) * C16924 +
             (C17856 - C17855 + C17858 - C17857) * C16930 +
             (C17860 - C17859 + C17862 - C17861) * C16925 +
             (C16927 * C870 - C16922 * C878 + C16928 * C1537 - C50146 * C1544) *
                 C16931 +
             (C16927 * C879 - C16922 * C885 + C16928 * C1545 - C50146 * C1549) *
                 C16926) *
                C50110 * C50077) *
               C50049) *
              C49984)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                  C19689 +
              (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                  C49950) *
                 C5095 +
             ((C21795 - C21796 + C21797 - C21798) * C19689 +
              (C21799 - C21800 + C21801 - C21802) * C49950) *
                 C5096 +
             C21844 * C5097) *
                C50240 +
            (((C21796 - C21795 + C21798 - C21797) * C19689 +
              (C21800 - C21799 + C21802 - C21801) * C49950) *
                 C5095 +
             ((C21804 - C21803 + C21806 - C21805) * C19689 +
              (C21808 - C21807 + C21810 - C21809) * C49950) *
                 C5096 +
             ((C21811 - C21812 + C21813 - C21814) * C19689 +
              (C21815 - C21816 + C21817 - C21818) * C49950) *
                 C5097) *
                C50077) *
               C997 +
           ((((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                  C19689 +
              (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                  C49950) *
                 C5095 +
             ((C22331 - C22332 + C22333 - C22334) * C19689 +
              (C22335 - C22336 + C22337 - C22338) * C49950) *
                 C5096 +
             C22765 * C5097) *
                C50240 +
            (((C22332 - C22331 + C22334 - C22333) * C19689 +
              (C22336 - C22335 + C22338 - C22337) * C49950) *
                 C5095 +
             ((C22340 - C22339 + C22342 - C22341) * C19689 +
              (C22344 - C22343 + C22346 - C22345) * C49950) *
                 C5096 +
             ((C22753 - C22754 + C22755 - C22756) * C19689 +
              (C22757 - C22758 + C22759 - C22760) * C49950) *
                 C5097) *
                C50077) *
               C50049) *
              C50231 +
          (((((C16934 - C16933 + C16936 - C16935) * C19689 +
              (C16938 - C16937 + C16940 - C16939) * C49950) *
                 C5095 +
             ((C17301 - C17302 + C17303 - C17304) * C19689 +
              (C17305 - C17306 + C17307 - C17308) * C49950) *
                 C5096 +
             C21843 * C5097) *
                C50240 +
            (((C17302 - C17301 + C17304 - C17303) * C19689 +
              (C17306 - C17305 + C17308 - C17307) * C49950) *
                 C5095 +
             ((C17317 - C17318 + C17319 - C17320) * C19689 +
              (C17321 - C17322 + C17323 - C17324) * C49950) *
                 C5096 +
             ((C21823 - C21824 + C21825 - C21826) * C19689 +
              (C21827 - C21828 + C21829 - C21830) * C49950) *
                 C5097) *
                C50077) *
               C997 +
           ((((C17124 - C17123 + C17126 - C17125) * C19689 +
              (C17128 - C17127 + C17130 - C17129) * C49950) *
                 C5095 +
             ((C17847 - C17848 + C17849 - C17850) * C19689 +
              (C17851 - C17852 + C17853 - C17854) * C49950) *
                 C5096 +
             ((C22347 - C22348 + C22349 - C22350) * C19689 +
              (C22351 - C22352 + C22353 - C22354) * C49950) *
                 C5097) *
                C50240 +
            (((C17848 - C17847 + C17850 - C17849) * C19689 +
              (C17852 - C17851 + C17854 - C17853) * C49950) *
                 C5095 +
             ((C22348 - C22347 + C22350 - C22349) * C19689 +
              (C22352 - C22351 + C22354 - C22353) * C49950) *
                 C5096 +
             ((C16927 * C4497 - C16922 * C4503 + C16928 * C4498 -
               C50146 * C4504) *
                  C19689 +
              (C16927 * C4505 - C16922 * C4509 + C16928 * C4506 -
               C50146 * C4510) *
                  C49950) *
                 C5097) *
                C50077) *
               C50049) *
              C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
               C16929 +
           (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
               C16924 +
           (C16933 - C16934 + C16935 - C16936) * C16930 +
           (C16937 - C16938 + C16939 - C16940) * C16925 + C16973 * C16931 +
           C16974 * C16926) *
              C50110 * C50013 * C1068 +
          ((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
               C16929 +
           (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
               C16924 +
           (C17123 - C17124 + C17125 - C17126) * C16930 +
           (C17127 - C17128 + C17129 - C17130) * C16925 + C17491 * C16931 +
           C17492 * C16926) *
              C50110 * C50013 * C1069 +
          ((C16922 * C299 - C16927 * C285 + C50146 * C1077 - C16928 * C1073) *
               C16929 +
           (C16922 * C315 - C16927 * C300 + C50146 * C1085 - C16928 * C1078) *
               C16924 +
           (C17139 - C17140 + C17141 - C17142) * C16930 +
           (C17143 - C17144 + C17145 - C17146) * C16925 +
           (C17147 - C17148 + C17149 - C17150) * C16931 +
           (C17151 - C17152 + C17153 - C17154) * C16926) *
              C50110 * C50013 * C1070 +
          ((C16927 * C1073 - C16922 * C1077 + C16928 * C2453 - C50146 * C2456) *
               C16929 +
           (C16927 * C1078 - C16922 * C1085 + C16928 * C2457 - C50146 * C2462) *
               C16924 +
           (C16927 * C1074 - C16922 * C1079 + C16928 * C2454 - C50146 * C2458) *
               C16930 +
           (C16927 * C1080 - C16922 * C1086 + C16928 * C2459 - C50146 * C2463) *
               C16925 +
           (C16927 * C1075 - C16922 * C1081 + C16928 * C2455 - C50146 * C2460) *
               C16931 +
           (C16927 * C1082 - C16922 * C1087 + C16928 * C2461 - C50146 * C2464) *
               C16926) *
              C50110 * C50013 * C1071) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                C16929 +
            (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                C16924 +
            (C16933 - C16934 + C16935 - C16936) * C16930 +
            (C16937 - C16938 + C16939 - C16940) * C16925 + C16973 * C16931 +
            C16974 * C16926) *
               C50110 * C50013 * C997 +
           ((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                C16929 +
            (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                C16924 +
            (C17123 - C17124 + C17125 - C17126) * C16930 +
            (C17127 - C17128 + C17129 - C17130) * C16925 + C17491 * C16931 +
            C17492 * C16926) *
               C50110 * C50013 * C50049) *
              C999 +
          (((C16934 - C16933 + C16936 - C16935) * C16929 +
            (C16938 - C16937 + C16940 - C16939) * C16924 +
            (C16942 - C16941 + C16944 - C16943) * C16930 +
            (C16946 - C16945 + C16948 - C16947) * C16925 + C16975 * C16931 +
            C16976 * C16926) *
               C50110 * C50013 * C997 +
           ((C17124 - C17123 + C17126 - C17125) * C16929 +
            (C17128 - C17127 + C17130 - C17129) * C16924 +
            (C17132 - C17131 + C17134 - C17133) * C16930 +
            (C17136 - C17135 + C17138 - C17137) * C16925 +
            (C17483 - C17484 + C17485 - C17486) * C16931 +
            (C17487 - C17488 + C17489 - C17490) * C16926) *
               C50110 * C50013 * C50049) *
              C1000 +
          ((C16973 * C16929 + C16974 * C16924 +
            (C16950 - C16949 + C16952 - C16951) * C16930 +
            (C16954 - C16953 + C16956 - C16955) * C16925 +
            (C16957 - C16958 + C16959 - C16960) * C16931 +
            (C16961 - C16962 + C16963 - C16964) * C16926) *
               C50110 * C50013 * C997 +
           (C17491 * C16929 + C17492 * C16924 +
            (C17484 - C17483 + C17486 - C17485) * C16930 +
            (C17488 - C17487 + C17490 - C17489) * C16925 +
            (C16927 * C289 - C16922 * C307 + C16928 * C290 - C50146 * C309) *
                C16931 +
            (C16927 * C308 - C16922 * C319 + C16928 * C310 - C50146 * C320) *
                C16926) *
               C50110 * C50013 * C50049) *
              C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19680 * C129 - C19685 * C122 + C19681 * C291 - C19686 * C281 +
             C19682 * C299 - C19687 * C285 + C19683 * C1077 - C19688 * C1073) *
                C19689 +
            (C19680 * C143 - C19685 * C130 + C19681 * C311 - C19686 * C292 +
             C19682 * C315 - C19687 * C300 + C19683 * C1085 - C19688 * C1078) *
                C49950) *
               C50110 * C50013 * C997 +
           ((C19685 * C281 - C19680 * C291 + C19686 * C285 - C19681 * C299 +
             C19687 * C1073 - C19682 * C1077 + C19688 * C2453 -
             C19683 * C2456) *
                C19689 +
            (C19685 * C292 - C19680 * C311 + C19686 * C300 - C19681 * C315 +
             C19687 * C1078 - C19682 * C1085 + C19688 * C2457 -
             C19683 * C2462) *
                C49950) *
               C50110 * C50013 * C50049) *
              C999 +
          (((C19685 * C123 - C19680 * C131 + C19686 * C282 - C19681 * C293 +
             C19687 * C286 - C19682 * C301 + C19688 * C1074 - C19683 * C1079) *
                C19689 +
            (C19685 * C132 - C19680 * C144 + C19686 * C294 - C19681 * C312 +
             C19687 * C302 - C19682 * C316 + C19688 * C1080 - C19683 * C1086) *
                C49950) *
               C50110 * C50013 * C997 +
           ((C19680 * C293 - C19685 * C282 + C19681 * C301 - C19686 * C286 +
             C19682 * C1079 - C19687 * C1074 + C19683 * C2458 -
             C19688 * C2454) *
                C19689 +
            (C19680 * C312 - C19685 * C294 + C19681 * C316 - C19686 * C302 +
             C19682 * C1086 - C19687 * C1080 + C19683 * C2463 -
             C19688 * C2459) *
                C49950) *
               C50110 * C50013 * C50049) *
              C1000 +
          (((C19680 * C133 - C19685 * C124 + C19681 * C295 - C19686 * C283 +
             C19682 * C303 - C19687 * C287 + C19683 * C1081 - C19688 * C1075) *
                C19689 +
            (C19680 * C145 - C19685 * C134 + C19681 * C313 - C19686 * C296 +
             C19682 * C317 - C19687 * C304 + C19683 * C1087 - C19688 * C1082) *
                C49950) *
               C50110 * C50013 * C997 +
           ((C19685 * C283 - C19680 * C295 + C19686 * C287 - C19681 * C303 +
             C19687 * C1075 - C19682 * C1081 + C19688 * C2455 -
             C19683 * C2460) *
                C19689 +
            (C19685 * C296 - C19680 * C313 + C19686 * C304 - C19681 * C317 +
             C19687 * C1082 - C19682 * C1087 + C19688 * C2461 -
             C19683 * C2464) *
                C49950) *
               C50110 * C50013 * C50049) *
              C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C19680 * C129 - C19685 * C122 + C19681 * C291 - C19686 * C281 +
            C19682 * C299 - C19687 * C285 + C19683 * C1077 - C19688 * C1073) *
               C19689 +
           (C19680 * C143 - C19685 * C130 + C19681 * C311 - C19686 * C292 +
            C19682 * C315 - C19687 * C300 + C19683 * C1085 - C19688 * C1078) *
               C49950) *
              C50110 * C50013 * C1068 +
          ((C19685 * C281 - C19680 * C291 + C19686 * C285 - C19681 * C299 +
            C19687 * C1073 - C19682 * C1077 + C19688 * C2453 - C19683 * C2456) *
               C19689 +
           (C19685 * C292 - C19680 * C311 + C19686 * C300 - C19681 * C315 +
            C19687 * C1078 - C19682 * C1085 + C19688 * C2457 - C19683 * C2462) *
               C49950) *
              C50110 * C50013 * C1069 +
          ((C19680 * C299 - C19685 * C285 + C19681 * C1077 - C19686 * C1073 +
            C19682 * C2456 - C19687 * C2453 + C19683 * C3451 - C19688 * C3449) *
               C19689 +
           (C19680 * C315 - C19685 * C300 + C19681 * C1085 - C19686 * C1078 +
            C19682 * C2462 - C19687 * C2457 + C19683 * C3455 - C19688 * C3452) *
               C49950) *
              C50110 * C50013 * C1070 +
          ((C19685 * C1073 - C19680 * C1077 + C19686 * C2453 - C19681 * C2456 +
            C19687 * C3449 - C19682 * C3451 + C19688 * C20376 -
            C19683 * C20377) *
               C19689 +
           (C19685 * C1078 - C19680 * C1085 + C19686 * C2457 - C19681 * C2462 +
            C19687 * C3452 - C19682 * C3455 + C19688 * C20378 -
            C19683 * C20379) *
               C49950) *
              C50110 * C50013 * C1071) *
         C49978) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                 C19689 +
             (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                 C49950) *
                C5095 +
            ((C21795 - C21796 + C21797 - C21798) * C19689 +
             (C21799 - C21800 + C21801 - C21802) * C49950) *
                C5096 +
            C21844 * C5097) *
               C50013 * C997 +
           (((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                 C19689 +
             (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                 C49950) *
                C5095 +
            ((C22331 - C22332 + C22333 - C22334) * C19689 +
             (C22335 - C22336 + C22337 - C22338) * C49950) *
                C5096 +
            ((C22339 - C22340 + C22341 - C22342) * C19689 +
             (C22343 - C22344 + C22345 - C22346) * C49950) *
                C5097) *
               C50013 * C50049) *
              C999 +
          ((((C16934 - C16933 + C16936 - C16935) * C19689 +
             (C16938 - C16937 + C16940 - C16939) * C49950) *
                C5095 +
            ((C17301 - C17302 + C17303 - C17304) * C19689 +
             (C17305 - C17306 + C17307 - C17308) * C49950) *
                C5096 +
            C21843 * C5097) *
               C50013 * C997 +
           (((C17124 - C17123 + C17126 - C17125) * C19689 +
             (C17128 - C17127 + C17130 - C17129) * C49950) *
                C5095 +
            ((C17847 - C17848 + C17849 - C17850) * C19689 +
             (C17851 - C17852 + C17853 - C17854) * C49950) *
                C5096 +
            ((C22347 - C22348 + C22349 - C22350) * C19689 +
             (C22351 - C22352 + C22353 - C22354) * C49950) *
                C5097) *
               C50013 * C50049) *
              C1000 +
          (((C16973 * C19689 + C16974 * C49950) * C5095 +
            ((C17310 - C17309 + C17312 - C17311) * C19689 +
             (C17314 - C17313 + C17316 - C17315) * C49950) *
                C5096 +
            ((C17325 - C17326 + C17327 - C17328) * C19689 +
             (C17329 - C17330 + C17331 - C17332) * C49950) *
                C5097) *
               C50013 * C997 +
           ((C17491 * C19689 + C17492 * C49950) * C5095 +
            ((C17856 - C17855 + C17858 - C17857) * C19689 +
             (C17860 - C17859 + C17862 - C17861) * C49950) *
                C5096 +
            ((C16927 * C1189 - C16922 * C1195 + C16928 * C2637 -
              C50146 * C2642) *
                 C19689 +
             (C16927 * C1196 - C16922 * C1201 + C16928 * C2643 -
              C50146 * C2646) *
                 C49950) *
                C5097) *
               C50013 * C50049) *
              C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                C19689 +
            (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                C49950) *
               C5095 +
           ((C21795 - C21796 + C21797 - C21798) * C19689 +
            (C21799 - C21800 + C21801 - C21802) * C49950) *
               C5096 +
           C21844 * C5097) *
              C50013 * C1068 +
          (((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                C19689 +
            (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                C49950) *
               C5095 +
           ((C22331 - C22332 + C22333 - C22334) * C19689 +
            (C22335 - C22336 + C22337 - C22338) * C49950) *
               C5096 +
           ((C22339 - C22340 + C22341 - C22342) * C19689 +
            (C22343 - C22344 + C22345 - C22346) * C49950) *
               C5097) *
              C50013 * C1069 +
          (((C16922 * C299 - C16927 * C285 + C50146 * C1077 - C16928 * C1073) *
                C19689 +
            (C16922 * C315 - C16927 * C300 + C50146 * C1085 - C16928 * C1078) *
                C49950) *
               C5095 +
           ((C16922 * C1538 - C16927 * C1534 + C50146 * C3184 -
             C16928 * C3181) *
                C19689 +
            (C16922 * C1546 - C16927 * C1539 + C50146 * C3190 -
             C16928 * C3185) *
                C49950) *
               C5096 +
           ((C16922 * C2638 - C16927 * C2635 + C50146 * C3605 -
             C16928 * C3603) *
                C19689 +
            (C16922 * C2644 - C16927 * C2639 + C50146 * C3609 -
             C16928 * C3606) *
                C49950) *
               C5097) *
              C50013 * C1070 +
          (((C16927 * C1073 - C16922 * C1077 + C16928 * C2453 -
             C50146 * C2456) *
                C19689 +
            (C16927 * C1078 - C16922 * C1085 + C16928 * C2457 -
             C50146 * C2462) *
                C49950) *
               C5095 +
           ((C16927 * C3181 - C16922 * C3184 + C16928 * C4097 -
             C50146 * C4099) *
                C19689 +
            (C16927 * C3185 - C16922 * C3190 + C16928 * C4100 -
             C50146 * C4103) *
                C49950) *
               C5096 +
           ((C16927 * C3603 - C16922 * C3605 + C16928 * C20478 -
             C50146 * C20479) *
                C19689 +
            (C16927 * C3606 - C16922 * C3609 + C16928 * C20480 -
             C50146 * C20481) *
                C49950) *
               C5097) *
              C50013 * C1071) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19680 * C129 - C19685 * C122 + C19681 * C291 - C19686 * C281 +
              C19682 * C299 - C19687 * C285 + C19683 * C1077 - C19688 * C1073) *
                 C19689 +
             (C19680 * C143 - C19685 * C130 + C19681 * C311 - C19686 * C292 +
              C19682 * C315 - C19687 * C300 + C19683 * C1085 - C19688 * C1078) *
                 C49950) *
                C50110 * C1648 +
            ((C19685 * C446 - C19680 * C456 + C19686 * C867 - C19681 * C872 +
              C19687 * C1534 - C19682 * C1538 + C19688 * C3181 -
              C19683 * C3184) *
                 C19689 +
             (C19685 * C457 - C19680 * C476 + C19686 * C873 - C19681 * C882 +
              C19687 * C1539 - C19682 * C1546 + C19688 * C3185 -
              C19683 * C3190) *
                 C49950) *
                C50110 * C50077) *
               C50239 +
           (((C19685 * C281 - C19680 * C291 + C19686 * C285 - C19681 * C299 +
              C19687 * C1073 - C19682 * C1077 + C19688 * C2453 -
              C19683 * C2456) *
                 C19689 +
             (C19685 * C292 - C19680 * C311 + C19686 * C300 - C19681 * C315 +
              C19687 * C1078 - C19682 * C1085 + C19688 * C2457 -
              C19683 * C2462) *
                 C49950) *
                C50110 * C1648 +
            ((C19680 * C872 - C19685 * C867 + C19681 * C1538 - C19686 * C1534 +
              C19682 * C3184 - C19687 * C3181 + C19683 * C4099 -
              C19688 * C4097) *
                 C19689 +
             (C19680 * C882 - C19685 * C873 + C19681 * C1546 - C19686 * C1539 +
              C19682 * C3190 - C19687 * C3185 + C19683 * C4103 -
              C19688 * C4100) *
                 C49950) *
                C50110 * C50077) *
               C50049) *
              C50231 +
          ((((C19685 * C123 - C19680 * C131 + C19686 * C282 - C19681 * C293 +
              C19687 * C286 - C19682 * C301 + C19688 * C1074 - C19683 * C1079) *
                 C19689 +
             (C19685 * C132 - C19680 * C144 + C19686 * C294 - C19681 * C312 +
              C19687 * C302 - C19682 * C316 + C19688 * C1080 - C19683 * C1086) *
                 C49950) *
                C50110 * C1648 +
            ((C19680 * C458 - C19685 * C447 + C19681 * C874 - C19686 * C868 +
              C19682 * C1540 - C19687 * C1535 + C19683 * C3186 -
              C19688 * C3182) *
                 C19689 +
             (C19680 * C477 - C19685 * C459 + C19681 * C883 - C19686 * C875 +
              C19682 * C1547 - C19687 * C1541 + C19683 * C3191 -
              C19688 * C3187) *
                 C49950) *
                C50110 * C50077) *
               C50239 +
           (((C19680 * C293 - C19685 * C282 + C19681 * C301 - C19686 * C286 +
              C19682 * C1079 - C19687 * C1074 + C19683 * C2458 -
              C19688 * C2454) *
                 C19689 +
             (C19680 * C312 - C19685 * C294 + C19681 * C316 - C19686 * C302 +
              C19682 * C1086 - C19687 * C1080 + C19683 * C2463 -
              C19688 * C2459) *
                 C49950) *
                C50110 * C1648 +
            ((C19685 * C868 - C19680 * C874 + C19686 * C1535 - C19681 * C1540 +
              C19687 * C3182 - C19682 * C3186 + C19688 * C4098 -
              C19683 * C4101) *
                 C19689 +
             (C19685 * C875 - C19680 * C883 + C19686 * C1541 - C19681 * C1547 +
              C19687 * C3187 - C19682 * C3191 + C19688 * C4102 -
              C19683 * C4104) *
                 C49950) *
                C50110 * C50077) *
               C50049) *
              C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                 C16929 +
             (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                 C16924 +
             (C16933 - C16934 + C16935 - C16936) * C16930 +
             (C16937 - C16938 + C16939 - C16940) * C16925 + C16973 * C16931 +
             C16974 * C16926) *
                C50110 * C1648 +
            ((C16927 * C446 - C16922 * C456 + C16928 * C867 - C50146 * C872) *
                 C16929 +
             (C16927 * C457 - C16922 * C476 + C16928 * C873 - C50146 * C882) *
                 C16924 +
             (C17301 - C17302 + C17303 - C17304) * C16930 +
             (C17305 - C17306 + C17307 - C17308) * C16925 + C17651 * C16931 +
             C17652 * C16926) *
                C50110 * C50077) *
               C50239 +
           (((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                 C16929 +
             (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                 C16924 +
             (C17123 - C17124 + C17125 - C17126) * C16930 +
             (C17127 - C17128 + C17129 - C17130) * C16925 + C17491 * C16931 +
             C17492 * C16926) *
                C50110 * C1648 +
            ((C16922 * C872 - C16927 * C867 + C50146 * C1538 - C16928 * C1534) *
                 C16929 +
             (C16922 * C882 - C16927 * C873 + C50146 * C1546 - C16928 * C1539) *
                 C16924 +
             (C17847 - C17848 + C17849 - C17850) * C16930 +
             (C17851 - C17852 + C17853 - C17854) * C16925 +
             (C17855 - C17856 + C17857 - C17858) * C16931 +
             (C17859 - C17860 + C17861 - C17862) * C16926) *
                C50110 * C50077) *
               C50049) *
              C50231 +
          ((((C16934 - C16933 + C16936 - C16935) * C16929 +
             (C16938 - C16937 + C16940 - C16939) * C16924 +
             (C16942 - C16941 + C16944 - C16943) * C16930 +
             (C16946 - C16945 + C16948 - C16947) * C16925 + C16975 * C16931 +
             C16976 * C16926) *
                C50110 * C1648 +
            ((C17302 - C17301 + C17304 - C17303) * C16929 +
             (C17306 - C17305 + C17308 - C17307) * C16924 +
             (C17310 - C17309 + C17312 - C17311) * C16930 +
             (C17314 - C17313 + C17316 - C17315) * C16925 +
             (C17643 - C17644 + C17645 - C17646) * C16931 +
             (C17647 - C17648 + C17649 - C17650) * C16926) *
                C50110 * C50077) *
               C50239 +
           (((C17124 - C17123 + C17126 - C17125) * C16929 +
             (C17128 - C17127 + C17130 - C17129) * C16924 +
             (C17132 - C17131 + C17134 - C17133) * C16930 +
             (C17136 - C17135 + C17138 - C17137) * C16925 +
             (C17483 - C17484 + C17485 - C17486) * C16931 +
             (C17487 - C17488 + C17489 - C17490) * C16926) *
                C50110 * C1648 +
            ((C17848 - C17847 + C17850 - C17849) * C16929 +
             (C17852 - C17851 + C17854 - C17853) * C16924 +
             (C17856 - C17855 + C17858 - C17857) * C16930 +
             (C17860 - C17859 + C17862 - C17861) * C16925 +
             (C16927 * C870 - C16922 * C878 + C16928 * C1537 - C50146 * C1544) *
                 C16931 +
             (C16927 * C879 - C16922 * C885 + C16928 * C1545 - C50146 * C1549) *
                 C16926) *
                C50110 * C50077) *
               C50049) *
              C49984)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                  C19689 +
              (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                  C49950) *
                 C5095 +
             ((C21795 - C21796 + C21797 - C21798) * C19689 +
              (C21799 - C21800 + C21801 - C21802) * C49950) *
                 C5096 +
             C21844 * C5097) *
                C1648 +
            (((C21796 - C21795 + C21798 - C21797) * C19689 +
              (C21800 - C21799 + C21802 - C21801) * C49950) *
                 C5095 +
             ((C21804 - C21803 + C21806 - C21805) * C19689 +
              (C21808 - C21807 + C21810 - C21809) * C49950) *
                 C5096 +
             C23678 * C5097) *
                C50077) *
               C50239 +
           ((((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                  C19689 +
              (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                  C49950) *
                 C5095 +
             ((C22331 - C22332 + C22333 - C22334) * C19689 +
              (C22335 - C22336 + C22337 - C22338) * C49950) *
                 C5096 +
             C22765 * C5097) *
                C1648 +
            (((C22332 - C22331 + C22334 - C22333) * C19689 +
              (C22336 - C22335 + C22338 - C22337) * C49950) *
                 C5095 +
             ((C22340 - C22339 + C22342 - C22341) * C19689 +
              (C22344 - C22343 + C22346 - C22345) * C49950) *
                 C5096 +
             ((C22753 - C22754 + C22755 - C22756) * C19689 +
              (C22757 - C22758 + C22759 - C22760) * C49950) *
                 C5097) *
                C50077) *
               C50049) *
              C50231 +
          (((((C16934 - C16933 + C16936 - C16935) * C19689 +
              (C16938 - C16937 + C16940 - C16939) * C49950) *
                 C5095 +
             ((C17301 - C17302 + C17303 - C17304) * C19689 +
              (C17305 - C17306 + C17307 - C17308) * C49950) *
                 C5096 +
             C21843 * C5097) *
                C1648 +
            (((C17302 - C17301 + C17304 - C17303) * C19689 +
              (C17306 - C17305 + C17308 - C17307) * C49950) *
                 C5095 +
             ((C17317 - C17318 + C17319 - C17320) * C19689 +
              (C17321 - C17322 + C17323 - C17324) * C49950) *
                 C5096 +
             ((C21823 - C21824 + C21825 - C21826) * C19689 +
              (C21827 - C21828 + C21829 - C21830) * C49950) *
                 C5097) *
                C50077) *
               C50239 +
           ((((C17124 - C17123 + C17126 - C17125) * C19689 +
              (C17128 - C17127 + C17130 - C17129) * C49950) *
                 C5095 +
             ((C17847 - C17848 + C17849 - C17850) * C19689 +
              (C17851 - C17852 + C17853 - C17854) * C49950) *
                 C5096 +
             ((C22347 - C22348 + C22349 - C22350) * C19689 +
              (C22351 - C22352 + C22353 - C22354) * C49950) *
                 C5097) *
                C1648 +
            (((C17848 - C17847 + C17850 - C17849) * C19689 +
              (C17852 - C17851 + C17854 - C17853) * C49950) *
                 C5095 +
             ((C22348 - C22347 + C22350 - C22349) * C19689 +
              (C22352 - C22351 + C22354 - C22353) * C49950) *
                 C5096 +
             ((C16927 * C4497 - C16922 * C4503 + C16928 * C4498 -
               C50146 * C4504) *
                  C19689 +
              (C16927 * C4505 - C16922 * C4509 + C16928 * C4506 -
               C50146 * C4510) *
                  C49950) *
                 C5097) *
                C50077) *
               C50049) *
              C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19680 * C129 - C19685 * C122 + C19681 * C291 - C19686 * C281 +
             C19682 * C299 - C19687 * C285 + C19683 * C1077 - C19688 * C1073) *
                C19689 +
            (C19680 * C143 - C19685 * C130 + C19681 * C311 - C19686 * C292 +
             C19682 * C315 - C19687 * C300 + C19683 * C1085 - C19688 * C1078) *
                C49950) *
               C50110 * C50286 +
           ((C19685 * C446 - C19680 * C456 + C19686 * C867 - C19681 * C872 +
             C19687 * C1534 - C19682 * C1538 + C19688 * C3181 -
             C19683 * C3184) *
                C19689 +
            (C19685 * C457 - C19680 * C476 + C19686 * C873 - C19681 * C882 +
             C19687 * C1539 - C19682 * C1546 + C19688 * C3185 -
             C19683 * C3190) *
                C49950) *
               C50110 * C50287 +
           ((C19680 * C464 - C19685 * C450 + C19681 * C1191 - C19686 * C1187 +
             C19682 * C2638 - C19687 * C2635 + C19683 * C3605 -
             C19688 * C3603) *
                C19689 +
            (C19680 * C480 - C19685 * C465 + C19681 * C1199 - C19686 * C1192 +
             C19682 * C2644 - C19687 * C2639 + C19683 * C3609 -
             C19688 * C3606) *
                C49950) *
               C50110 * C2064) *
              C50239 +
          (((C19685 * C281 - C19680 * C291 + C19686 * C285 - C19681 * C299 +
             C19687 * C1073 - C19682 * C1077 + C19688 * C2453 -
             C19683 * C2456) *
                C19689 +
            (C19685 * C292 - C19680 * C311 + C19686 * C300 - C19681 * C315 +
             C19687 * C1078 - C19682 * C1085 + C19688 * C2457 -
             C19683 * C2462) *
                C49950) *
               C50110 * C50286 +
           ((C19680 * C872 - C19685 * C867 + C19681 * C1538 - C19686 * C1534 +
             C19682 * C3184 - C19687 * C3181 + C19683 * C4099 -
             C19688 * C4097) *
                C19689 +
            (C19680 * C882 - C19685 * C873 + C19681 * C1546 - C19686 * C1539 +
             C19682 * C3190 - C19687 * C3185 + C19683 * C4103 -
             C19688 * C4100) *
                C49950) *
               C50110 * C50287 +
           ((C19685 * C1187 - C19680 * C1191 + C19686 * C2635 - C19681 * C2638 +
             C19687 * C3603 - C19682 * C3605 + C19688 * C20478 -
             C19683 * C20479) *
                C19689 +
            (C19685 * C1192 - C19680 * C1199 + C19686 * C2639 - C19681 * C2644 +
             C19687 * C3606 - C19682 * C3609 + C19688 * C20480 -
             C19683 * C20481) *
                C49950) *
               C50110 * C2064) *
              C50049) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                C16929 +
            (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                C16924 +
            (C16933 - C16934 + C16935 - C16936) * C16930 +
            (C16937 - C16938 + C16939 - C16940) * C16925 + C16973 * C16931 +
            C16974 * C16926) *
               C50110 * C50286 +
           ((C16927 * C446 - C16922 * C456 + C16928 * C867 - C50146 * C872) *
                C16929 +
            (C16927 * C457 - C16922 * C476 + C16928 * C873 - C50146 * C882) *
                C16924 +
            (C17301 - C17302 + C17303 - C17304) * C16930 +
            (C17305 - C17306 + C17307 - C17308) * C16925 + C17651 * C16931 +
            C17652 * C16926) *
               C50110 * C50287 +
           ((C16922 * C464 - C16927 * C450 + C50146 * C1191 - C16928 * C1187) *
                C16929 +
            (C16922 * C480 - C16927 * C465 + C50146 * C1199 - C16928 * C1192) *
                C16924 +
            (C17317 - C17318 + C17319 - C17320) * C16930 +
            (C17321 - C17322 + C17323 - C17324) * C16925 +
            (C17325 - C17326 + C17327 - C17328) * C16931 +
            (C17329 - C17330 + C17331 - C17332) * C16926) *
               C50110 * C2064) *
              C50239 +
          (((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                C16929 +
            (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                C16924 +
            (C17123 - C17124 + C17125 - C17126) * C16930 +
            (C17127 - C17128 + C17129 - C17130) * C16925 + C17491 * C16931 +
            C17492 * C16926) *
               C50110 * C50286 +
           ((C16922 * C872 - C16927 * C867 + C50146 * C1538 - C16928 * C1534) *
                C16929 +
            (C16922 * C882 - C16927 * C873 + C50146 * C1546 - C16928 * C1539) *
                C16924 +
            (C17847 - C17848 + C17849 - C17850) * C16930 +
            (C17851 - C17852 + C17853 - C17854) * C16925 +
            (C17855 - C17856 + C17857 - C17858) * C16931 +
            (C17859 - C17860 + C17861 - C17862) * C16926) *
               C50110 * C50287 +
           ((C16927 * C1187 - C16922 * C1191 + C16928 * C2635 -
             C50146 * C2638) *
                C16929 +
            (C16927 * C1192 - C16922 * C1199 + C16928 * C2639 -
             C50146 * C2644) *
                C16924 +
            (C16927 * C1188 - C16922 * C1193 + C16928 * C2636 -
             C50146 * C2640) *
                C16930 +
            (C16927 * C1194 - C16922 * C1200 + C16928 * C2641 -
             C50146 * C2645) *
                C16925 +
            (C16927 * C1189 - C16922 * C1195 + C16928 * C2637 -
             C50146 * C2642) *
                C16931 +
            (C16927 * C1196 - C16922 * C1201 + C16928 * C2643 -
             C50146 * C2646) *
                C16926) *
               C50110 * C2064) *
              C50049) *
         C49978) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                 C19689 +
             (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                 C49950) *
                C5095 +
            ((C21795 - C21796 + C21797 - C21798) * C19689 +
             (C21799 - C21800 + C21801 - C21802) * C49950) *
                C5096 +
            C21844 * C5097) *
               C50286 +
           (((C21796 - C21795 + C21798 - C21797) * C19689 +
             (C21800 - C21799 + C21802 - C21801) * C49950) *
                C5095 +
            ((C21804 - C21803 + C21806 - C21805) * C19689 +
             (C21808 - C21807 + C21810 - C21809) * C49950) *
                C5096 +
            C23678 * C5097) *
               C50287 +
           (C21844 * C5095 +
            ((C21812 - C21811 + C21814 - C21813) * C19689 +
             (C21816 - C21815 + C21818 - C21817) * C49950) *
                C5096 +
            ((C23666 - C23667 + C23668 - C23669) * C19689 +
             (C23670 - C23671 + C23672 - C23673) * C49950) *
                C5097) *
               C2064) *
              C50239 +
          ((((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                 C19689 +
             (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                 C49950) *
                C5095 +
            ((C22331 - C22332 + C22333 - C22334) * C19689 +
             (C22335 - C22336 + C22337 - C22338) * C49950) *
                C5096 +
            C22765 * C5097) *
               C50286 +
           (((C22332 - C22331 + C22334 - C22333) * C19689 +
             (C22336 - C22335 + C22338 - C22337) * C49950) *
                C5095 +
            ((C22340 - C22339 + C22342 - C22341) * C19689 +
             (C22344 - C22343 + C22346 - C22345) * C49950) *
                C5096 +
            ((C22753 - C22754 + C22755 - C22756) * C19689 +
             (C22757 - C22758 + C22759 - C22760) * C49950) *
                C5097) *
               C50287 +
           (C22765 * C5095 +
            ((C22754 - C22753 + C22756 - C22755) * C19689 +
             (C22758 - C22757 + C22760 - C22759) * C49950) *
                C5096 +
            ((C16927 * C6376 - C16922 * C6378 + C16928 * C22744 -
              C50146 * C22745) *
                 C19689 +
             (C16927 * C6379 - C16922 * C6382 + C16928 * C22746 -
              C50146 * C22747) *
                 C49950) *
                C5097) *
               C2064) *
              C50049) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C16922 * C129 - C16927 * C122 + C50146 * C291 -
                 C16928 * C281) *
                    C16929 +
                (C16922 * C143 - C16927 * C130 + C50146 * C311 -
                 C16928 * C292) *
                    C16924 +
                (C16933 - C16934 + C16935 - C16936) * C16930 +
                (C16937 - C16938 + C16939 - C16940) * C16925 + C16973 * C16931 +
                C16974 * C16926) *
                   C50110 * C1648 +
               ((C16927 * C446 - C16922 * C456 + C16928 * C867 -
                 C50146 * C872) *
                    C16929 +
                (C16927 * C457 - C16922 * C476 + C16928 * C873 -
                 C50146 * C882) *
                    C16924 +
                (C17301 - C17302 + C17303 - C17304) * C16930 +
                (C17305 - C17306 + C17307 - C17308) * C16925 + C17651 * C16931 +
                C17652 * C16926) *
                   C50110 * C50077) *
                  C49997 * C999 +
              (((C16934 - C16933 + C16936 - C16935) * C16929 +
                (C16938 - C16937 + C16940 - C16939) * C16924 +
                (C16942 - C16941 + C16944 - C16943) * C16930 +
                (C16946 - C16945 + C16948 - C16947) * C16925 + C16975 * C16931 +
                C16976 * C16926) *
                   C50110 * C1648 +
               ((C17302 - C17301 + C17304 - C17303) * C16929 +
                (C17306 - C17305 + C17308 - C17307) * C16924 +
                (C17310 - C17309 + C17312 - C17311) * C16930 +
                (C17314 - C17313 + C17316 - C17315) * C16925 +
                (C17643 - C17644 + C17645 - C17646) * C16931 +
                (C17647 - C17648 + C17649 - C17650) * C16926) *
                   C50110 * C50077) *
                  C49997 * C1000 +
              ((C16973 * C16929 + C16974 * C16924 +
                (C16950 - C16949 + C16952 - C16951) * C16930 +
                (C16954 - C16953 + C16956 - C16955) * C16925 +
                (C16957 - C16958 + C16959 - C16960) * C16931 +
                (C16961 - C16962 + C16963 - C16964) * C16926) *
                   C50110 * C1648 +
               (C17651 * C16929 + C17652 * C16924 +
                (C17644 - C17643 + C17646 - C17645) * C16930 +
                (C17648 - C17647 + C17650 - C17649) * C16925 +
                (C16927 * C454 - C16922 * C472 + C16928 * C871 -
                 C50146 * C880) *
                    C16931 +
                (C16927 * C473 - C16922 * C484 + C16928 * C881 -
                 C50146 * C886) *
                    C16926) *
                   C50110 * C50077) *
                  C49997 * C1001) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C16922 * C129 - C16927 * C122 + C50146 * C291 -
                 C16928 * C281) *
                    C16929 +
                (C16922 * C143 - C16927 * C130 + C50146 * C311 -
                 C16928 * C292) *
                    C16924 +
                (C16933 - C16934 + C16935 - C16936) * C16930 +
                (C16937 - C16938 + C16939 - C16940) * C16925 + C16973 * C16931 +
                C16974 * C16926) *
                   C50110 * C1648 +
               ((C16927 * C446 - C16922 * C456 + C16928 * C867 -
                 C50146 * C872) *
                    C16929 +
                (C16927 * C457 - C16922 * C476 + C16928 * C873 -
                 C50146 * C882) *
                    C16924 +
                (C17301 - C17302 + C17303 - C17304) * C16930 +
                (C17305 - C17306 + C17307 - C17308) * C16925 + C17651 * C16931 +
                C17652 * C16926) *
                   C50110 * C50077) *
                  C276 +
              (((C16927 * C281 - C16922 * C291 + C16928 * C285 -
                 C50146 * C299) *
                    C16929 +
                (C16927 * C292 - C16922 * C311 + C16928 * C300 -
                 C50146 * C315) *
                    C16924 +
                (C17123 - C17124 + C17125 - C17126) * C16930 +
                (C17127 - C17128 + C17129 - C17130) * C16925 + C17491 * C16931 +
                C17492 * C16926) *
                   C50110 * C1648 +
               ((C16922 * C872 - C16927 * C867 + C50146 * C1538 -
                 C16928 * C1534) *
                    C16929 +
                (C16922 * C882 - C16927 * C873 + C50146 * C1546 -
                 C16928 * C1539) *
                    C16924 +
                (C17847 - C17848 + C17849 - C17850) * C16930 +
                (C17851 - C17852 + C17853 - C17854) * C16925 +
                (C17855 - C17856 + C17857 - C17858) * C16931 +
                (C17859 - C17860 + C17861 - C17862) * C16926) *
                   C50110 * C50077) *
                  C277 +
              (((C16922 * C299 - C16927 * C285 + C50146 * C1077 -
                 C16928 * C1073) *
                    C16929 +
                (C16922 * C315 - C16927 * C300 + C50146 * C1085 -
                 C16928 * C1078) *
                    C16924 +
                (C17139 - C17140 + C17141 - C17142) * C16930 +
                (C17143 - C17144 + C17145 - C17146) * C16925 +
                (C17147 - C17148 + C17149 - C17150) * C16931 +
                (C17151 - C17152 + C17153 - C17154) * C16926) *
                   C50110 * C1648 +
               ((C16927 * C1534 - C16922 * C1538 + C16928 * C3181 -
                 C50146 * C3184) *
                    C16929 +
                (C16927 * C1539 - C16922 * C1546 + C16928 * C3185 -
                 C50146 * C3190) *
                    C16924 +
                (C16927 * C1535 - C16922 * C1540 + C16928 * C3182 -
                 C50146 * C3186) *
                    C16930 +
                (C16927 * C1541 - C16922 * C1547 + C16928 * C3187 -
                 C50146 * C3191) *
                    C16925 +
                (C16927 * C1536 - C16922 * C1542 + C16928 * C3183 -
                 C50146 * C3188) *
                    C16931 +
                (C16927 * C1543 - C16922 * C1548 + C16928 * C3189 -
                 C50146 * C3192) *
                    C16926) *
                   C50110 * C50077) *
                  C278) *
             C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
               C16929 +
           (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
               C16924 +
           (C16933 - C16934 + C16935 - C16936) * C16930 +
           (C16937 - C16938 + C16939 - C16940) * C16925 + C16973 * C16931 +
           C16974 * C16926) *
              C50110 * C1814 +
          ((C16927 * C446 - C16922 * C456 + C16928 * C867 - C50146 * C872) *
               C16929 +
           (C16927 * C457 - C16922 * C476 + C16928 * C873 - C50146 * C882) *
               C16924 +
           (C17301 - C17302 + C17303 - C17304) * C16930 +
           (C17305 - C17306 + C17307 - C17308) * C16925 + C17651 * C16931 +
           C17652 * C16926) *
              C50110 * C1815 +
          ((C16922 * C464 - C16927 * C450 + C50146 * C1191 - C16928 * C1187) *
               C16929 +
           (C16922 * C480 - C16927 * C465 + C50146 * C1199 - C16928 * C1192) *
               C16924 +
           (C17317 - C17318 + C17319 - C17320) * C16930 +
           (C17321 - C17322 + C17323 - C17324) * C16925 +
           (C17325 - C17326 + C17327 - C17328) * C16931 +
           (C17329 - C17330 + C17331 - C17332) * C16926) *
              C50110 * C1816 +
          ((C16927 * C1818 - C16922 * C1822 + C16928 * C4495 - C50146 * C4499) *
               C16929 +
           (C16927 * C1823 - C16922 * C1830 + C16928 * C4501 - C50146 * C4507) *
               C16924 +
           (C16927 * C1819 - C16922 * C1824 + C16928 * C4497 - C50146 * C4503) *
               C16930 +
           (C16927 * C1825 - C16922 * C1831 + C16928 * C4505 - C50146 * C4509) *
               C16925 +
           (C16927 * C1820 - C16922 * C1826 + C16928 * C5962 - C50146 * C5963) *
               C16931 +
           (C16927 * C1827 - C16922 * C1832 + C16928 * C5964 - C50146 * C5965) *
               C16926) *
              C50110 * C1817) *
         C49997 * C49978) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C19680 * C129 - C19685 * C122 + C19681 * C291 - C19686 * C281 +
             C19682 * C299 - C19687 * C285 + C19683 * C1077 - C19688 * C1073) *
                C19689 +
            (C19680 * C143 - C19685 * C130 + C19681 * C311 - C19686 * C292 +
             C19682 * C315 - C19687 * C300 + C19683 * C1085 - C19688 * C1078) *
                C49950) *
               C50110 * C1648 +
           ((C19685 * C446 - C19680 * C456 + C19686 * C867 - C19681 * C872 +
             C19687 * C1534 - C19682 * C1538 + C19688 * C3181 -
             C19683 * C3184) *
                C19689 +
            (C19685 * C457 - C19680 * C476 + C19686 * C873 - C19681 * C882 +
             C19687 * C1539 - C19682 * C1546 + C19688 * C3185 -
             C19683 * C3190) *
                C49950) *
               C50110 * C50077) *
              C49997 * C999 +
          (((C19685 * C123 - C19680 * C131 + C19686 * C282 - C19681 * C293 +
             C19687 * C286 - C19682 * C301 + C19688 * C1074 - C19683 * C1079) *
                C19689 +
            (C19685 * C132 - C19680 * C144 + C19686 * C294 - C19681 * C312 +
             C19687 * C302 - C19682 * C316 + C19688 * C1080 - C19683 * C1086) *
                C49950) *
               C50110 * C1648 +
           ((C19680 * C458 - C19685 * C447 + C19681 * C874 - C19686 * C868 +
             C19682 * C1540 - C19687 * C1535 + C19683 * C3186 -
             C19688 * C3182) *
                C19689 +
            (C19680 * C477 - C19685 * C459 + C19681 * C883 - C19686 * C875 +
             C19682 * C1547 - C19687 * C1541 + C19683 * C3191 -
             C19688 * C3187) *
                C49950) *
               C50110 * C50077) *
              C49997 * C1000 +
          (((C19680 * C133 - C19685 * C124 + C19681 * C295 - C19686 * C283 +
             C19682 * C303 - C19687 * C287 + C19683 * C1081 - C19688 * C1075) *
                C19689 +
            (C19680 * C145 - C19685 * C134 + C19681 * C313 - C19686 * C296 +
             C19682 * C317 - C19687 * C304 + C19683 * C1087 - C19688 * C1082) *
                C49950) *
               C50110 * C1648 +
           ((C19685 * C448 - C19680 * C460 + C19686 * C869 - C19681 * C876 +
             C19687 * C1536 - C19682 * C1542 + C19688 * C3183 -
             C19683 * C3188) *
                C19689 +
            (C19685 * C461 - C19680 * C478 + C19686 * C877 - C19681 * C884 +
             C19687 * C1543 - C19682 * C1548 + C19688 * C3189 -
             C19683 * C3192) *
                C49950) *
               C50110 * C50077) *
              C49997 * C1001)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C19680 * C129 - C19685 * C122 + C19681 * C291 - C19686 * C281 +
             C19682 * C299 - C19687 * C285 + C19683 * C1077 - C19688 * C1073) *
                C19689 +
            (C19680 * C143 - C19685 * C130 + C19681 * C311 - C19686 * C292 +
             C19682 * C315 - C19687 * C300 + C19683 * C1085 - C19688 * C1078) *
                C49950) *
               C50110 * C1648 +
           ((C19685 * C446 - C19680 * C456 + C19686 * C867 - C19681 * C872 +
             C19687 * C1534 - C19682 * C1538 + C19688 * C3181 -
             C19683 * C3184) *
                C19689 +
            (C19685 * C457 - C19680 * C476 + C19686 * C873 - C19681 * C882 +
             C19687 * C1539 - C19682 * C1546 + C19688 * C3185 -
             C19683 * C3190) *
                C49950) *
               C50110 * C50077) *
              C276 +
          (((C19685 * C281 - C19680 * C291 + C19686 * C285 - C19681 * C299 +
             C19687 * C1073 - C19682 * C1077 + C19688 * C2453 -
             C19683 * C2456) *
                C19689 +
            (C19685 * C292 - C19680 * C311 + C19686 * C300 - C19681 * C315 +
             C19687 * C1078 - C19682 * C1085 + C19688 * C2457 -
             C19683 * C2462) *
                C49950) *
               C50110 * C1648 +
           ((C19680 * C872 - C19685 * C867 + C19681 * C1538 - C19686 * C1534 +
             C19682 * C3184 - C19687 * C3181 + C19683 * C4099 -
             C19688 * C4097) *
                C19689 +
            (C19680 * C882 - C19685 * C873 + C19681 * C1546 - C19686 * C1539 +
             C19682 * C3190 - C19687 * C3185 + C19683 * C4103 -
             C19688 * C4100) *
                C49950) *
               C50110 * C50077) *
              C277 +
          (((C19680 * C299 - C19685 * C285 + C19681 * C1077 - C19686 * C1073 +
             C19682 * C2456 - C19687 * C2453 + C19683 * C3451 -
             C19688 * C3449) *
                C19689 +
            (C19680 * C315 - C19685 * C300 + C19681 * C1085 - C19686 * C1078 +
             C19682 * C2462 - C19687 * C2457 + C19683 * C3455 -
             C19688 * C3452) *
                C49950) *
               C50110 * C1648 +
           ((C19685 * C1534 - C19680 * C1538 + C19686 * C3181 - C19681 * C3184 +
             C19687 * C4097 - C19682 * C4099 + C19688 * C20808 -
             C19683 * C20809) *
                C19689 +
            (C19685 * C1539 - C19680 * C1546 + C19686 * C3185 - C19681 * C3190 +
             C19687 * C4100 - C19682 * C4103 + C19688 * C20810 -
             C19683 * C20811) *
                C49950) *
               C50110 * C50077) *
              C278) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C19680 * C129 - C19685 * C122 + C19681 * C291 - C19686 * C281 +
            C19682 * C299 - C19687 * C285 + C19683 * C1077 - C19688 * C1073) *
               C19689 +
           (C19680 * C143 - C19685 * C130 + C19681 * C311 - C19686 * C292 +
            C19682 * C315 - C19687 * C300 + C19683 * C1085 - C19688 * C1078) *
               C49950) *
              C50110 * C1814 +
          ((C19685 * C446 - C19680 * C456 + C19686 * C867 - C19681 * C872 +
            C19687 * C1534 - C19682 * C1538 + C19688 * C3181 - C19683 * C3184) *
               C19689 +
           (C19685 * C457 - C19680 * C476 + C19686 * C873 - C19681 * C882 +
            C19687 * C1539 - C19682 * C1546 + C19688 * C3185 - C19683 * C3190) *
               C49950) *
              C50110 * C1815 +
          ((C19680 * C464 - C19685 * C450 + C19681 * C1191 - C19686 * C1187 +
            C19682 * C2638 - C19687 * C2635 + C19683 * C3605 - C19688 * C3603) *
               C19689 +
           (C19680 * C480 - C19685 * C465 + C19681 * C1199 - C19686 * C1192 +
            C19682 * C2644 - C19687 * C2639 + C19683 * C3609 - C19688 * C3606) *
               C49950) *
              C50110 * C1816 +
          ((C19685 * C1818 - C19680 * C1822 + C19686 * C4495 - C19681 * C4499 +
            C19687 * C4496 - C19682 * C4500 + C19688 * C21074 -
            C19683 * C21075) *
               C19689 +
           (C19685 * C1823 - C19680 * C1830 + C19686 * C4501 - C19681 * C4507 +
            C19687 * C4502 - C19682 * C4508 + C19688 * C21076 -
            C19683 * C21077) *
               C49950) *
              C50110 * C1817) *
         C49997 * C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                 C19689 +
             (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                 C49950) *
                C5095 +
            ((C21795 - C21796 + C21797 - C21798) * C19689 +
             (C21799 - C21800 + C21801 - C21802) * C49950) *
                C5096 +
            C21844 * C5097) *
               C1648 +
           (((C21796 - C21795 + C21798 - C21797) * C19689 +
             (C21800 - C21799 + C21802 - C21801) * C49950) *
                C5095 +
            ((C21804 - C21803 + C21806 - C21805) * C19689 +
             (C21808 - C21807 + C21810 - C21809) * C49950) *
                C5096 +
            ((C21811 - C21812 + C21813 - C21814) * C19689 +
             (C21815 - C21816 + C21817 - C21818) * C49950) *
                C5097) *
               C50077) *
              C49997 * C999 +
          ((((C16934 - C16933 + C16936 - C16935) * C19689 +
             (C16938 - C16937 + C16940 - C16939) * C49950) *
                C5095 +
            ((C17301 - C17302 + C17303 - C17304) * C19689 +
             (C17305 - C17306 + C17307 - C17308) * C49950) *
                C5096 +
            C21843 * C5097) *
               C1648 +
           (((C17302 - C17301 + C17304 - C17303) * C19689 +
             (C17306 - C17305 + C17308 - C17307) * C49950) *
                C5095 +
            ((C17317 - C17318 + C17319 - C17320) * C19689 +
             (C17321 - C17322 + C17323 - C17324) * C49950) *
                C5096 +
            ((C21823 - C21824 + C21825 - C21826) * C19689 +
             (C21827 - C21828 + C21829 - C21830) * C49950) *
                C5097) *
               C50077) *
              C49997 * C1000 +
          (((C16973 * C19689 + C16974 * C49950) * C5095 +
            ((C17310 - C17309 + C17312 - C17311) * C19689 +
             (C17314 - C17313 + C17316 - C17315) * C49950) *
                C5096 +
            ((C17325 - C17326 + C17327 - C17328) * C19689 +
             (C17329 - C17330 + C17331 - C17332) * C49950) *
                C5097) *
               C1648 +
           ((C17651 * C19689 + C17652 * C49950) * C5095 +
            ((C17326 - C17325 + C17328 - C17327) * C19689 +
             (C17330 - C17329 + C17332 - C17331) * C49950) *
                C5096 +
            ((C16927 * C1820 - C16922 * C1826 + C16928 * C5962 -
              C50146 * C5963) *
                 C19689 +
             (C16927 * C1827 - C16922 * C1832 + C16928 * C5964 -
              C50146 * C5965) *
                 C49950) *
                C5097) *
               C50077) *
              C49997 * C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                 C19689 +
             (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                 C49950) *
                C5095 +
            ((C21795 - C21796 + C21797 - C21798) * C19689 +
             (C21799 - C21800 + C21801 - C21802) * C49950) *
                C5096 +
            C21844 * C5097) *
               C1648 +
           (((C21796 - C21795 + C21798 - C21797) * C19689 +
             (C21800 - C21799 + C21802 - C21801) * C49950) *
                C5095 +
            ((C21804 - C21803 + C21806 - C21805) * C19689 +
             (C21808 - C21807 + C21810 - C21809) * C49950) *
                C5096 +
            ((C21811 - C21812 + C21813 - C21814) * C19689 +
             (C21815 - C21816 + C21817 - C21818) * C49950) *
                C5097) *
               C50077) *
              C276 +
          ((((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                 C19689 +
             (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                 C49950) *
                C5095 +
            ((C22331 - C22332 + C22333 - C22334) * C19689 +
             (C22335 - C22336 + C22337 - C22338) * C49950) *
                C5096 +
            C22765 * C5097) *
               C1648 +
           (((C22332 - C22331 + C22334 - C22333) * C19689 +
             (C22336 - C22335 + C22338 - C22337) * C49950) *
                C5095 +
            ((C22340 - C22339 + C22342 - C22341) * C19689 +
             (C22344 - C22343 + C22346 - C22345) * C49950) *
                C5096 +
            ((C22753 - C22754 + C22755 - C22756) * C19689 +
             (C22757 - C22758 + C22759 - C22760) * C49950) *
                C5097) *
               C50077) *
              C277 +
          ((((C16922 * C299 - C16927 * C285 + C50146 * C1077 - C16928 * C1073) *
                 C19689 +
             (C16922 * C315 - C16927 * C300 + C50146 * C1085 - C16928 * C1078) *
                 C49950) *
                C5095 +
            ((C23252 - C23253 + C23254 - C23255) * C19689 +
             (C23256 - C23257 + C23258 - C23259) * C49950) *
                C5096 +
            ((C23260 - C23261 + C23262 - C23263) * C19689 +
             (C23264 - C23265 + C23266 - C23267) * C49950) *
                C5097) *
               C1648 +
           (((C23253 - C23252 + C23255 - C23254) * C19689 +
             (C23257 - C23256 + C23259 - C23258) * C49950) *
                C5095 +
            ((C23261 - C23260 + C23263 - C23262) * C19689 +
             (C23265 - C23264 + C23267 - C23266) * C49950) *
                C5096 +
            ((C16927 * C4496 - C16922 * C4500 + C16928 * C21074 -
              C50146 * C21075) *
                 C19689 +
             (C16927 * C4502 - C16922 * C4508 + C16928 * C21076 -
              C50146 * C21077) *
                 C49950) *
                C5097) *
               C50077) *
              C278) *
         C49978) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                C19689 +
            (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                C49950) *
               C5095 +
           ((C21795 - C21796 + C21797 - C21798) * C19689 +
            (C21799 - C21800 + C21801 - C21802) * C49950) *
               C5096 +
           C21844 * C5097) *
              C1814 +
          (((C21796 - C21795 + C21798 - C21797) * C19689 +
            (C21800 - C21799 + C21802 - C21801) * C49950) *
               C5095 +
           ((C21804 - C21803 + C21806 - C21805) * C19689 +
            (C21808 - C21807 + C21810 - C21809) * C49950) *
               C5096 +
           C23678 * C5097) *
              C1815 +
          (C21844 * C5095 +
           ((C21812 - C21811 + C21814 - C21813) * C19689 +
            (C21816 - C21815 + C21818 - C21817) * C49950) *
               C5096 +
           ((C23666 - C23667 + C23668 - C23669) * C19689 +
            (C23670 - C23671 + C23672 - C23673) * C49950) *
               C5097) *
              C1816 +
          (C23678 * C5095 +
           ((C23667 - C23666 + C23669 - C23668) * C19689 +
            (C23671 - C23670 + C23673 - C23672) * C49950) *
               C5096 +
           ((C16927 * C7281 - C16922 * C7283 + C16928 * C23657 -
             C50146 * C23658) *
                C19689 +
            (C16927 * C7284 - C16922 * C7287 + C16928 * C23659 -
             C50146 * C23660) *
                C49950) *
               C5097) *
              C1817) *
         C49997 * C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19680 * C129 - C19685 * C122 + C19681 * C291 - C19686 * C281 +
             C19682 * C299 - C19687 * C285 + C19683 * C1077 - C19688 * C1073) *
                C19689 +
            (C19680 * C143 - C19685 * C130 + C19681 * C311 - C19686 * C292 +
             C19682 * C315 - C19687 * C300 + C19683 * C1085 - C19688 * C1078) *
                C49950) *
               C50110 * C50286 +
           ((C19685 * C446 - C19680 * C456 + C19686 * C867 - C19681 * C872 +
             C19687 * C1534 - C19682 * C1538 + C19688 * C3181 -
             C19683 * C3184) *
                C19689 +
            (C19685 * C457 - C19680 * C476 + C19686 * C873 - C19681 * C882 +
             C19687 * C1539 - C19682 * C1546 + C19688 * C3185 -
             C19683 * C3190) *
                C49950) *
               C50110 * C50287 +
           ((C19680 * C464 - C19685 * C450 + C19681 * C1191 - C19686 * C1187 +
             C19682 * C2638 - C19687 * C2635 + C19683 * C3605 -
             C19688 * C3603) *
                C19689 +
            (C19680 * C480 - C19685 * C465 + C19681 * C1199 - C19686 * C1192 +
             C19682 * C2644 - C19687 * C2639 + C19683 * C3609 -
             C19688 * C3606) *
                C49950) *
               C50110 * C2064) *
              C49997 * C50231 +
          (((C19685 * C123 - C19680 * C131 + C19686 * C282 - C19681 * C293 +
             C19687 * C286 - C19682 * C301 + C19688 * C1074 - C19683 * C1079) *
                C19689 +
            (C19685 * C132 - C19680 * C144 + C19686 * C294 - C19681 * C312 +
             C19687 * C302 - C19682 * C316 + C19688 * C1080 - C19683 * C1086) *
                C49950) *
               C50110 * C50286 +
           ((C19680 * C458 - C19685 * C447 + C19681 * C874 - C19686 * C868 +
             C19682 * C1540 - C19687 * C1535 + C19683 * C3186 -
             C19688 * C3182) *
                C19689 +
            (C19680 * C477 - C19685 * C459 + C19681 * C883 - C19686 * C875 +
             C19682 * C1547 - C19687 * C1541 + C19683 * C3191 -
             C19688 * C3187) *
                C49950) *
               C50110 * C50287 +
           ((C19685 * C451 - C19680 * C466 + C19686 * C1188 - C19681 * C1193 +
             C19687 * C2636 - C19682 * C2640 + C19688 * C3604 -
             C19683 * C3607) *
                C19689 +
            (C19685 * C467 - C19680 * C481 + C19686 * C1194 - C19681 * C1200 +
             C19687 * C2641 - C19682 * C2645 + C19688 * C3608 -
             C19683 * C3610) *
                C49950) *
               C50110 * C2064) *
              C49997 * C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                C16929 +
            (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                C16924 +
            (C16933 - C16934 + C16935 - C16936) * C16930 +
            (C16937 - C16938 + C16939 - C16940) * C16925 + C16973 * C16931 +
            C16974 * C16926) *
               C50110 * C50286 +
           ((C16927 * C446 - C16922 * C456 + C16928 * C867 - C50146 * C872) *
                C16929 +
            (C16927 * C457 - C16922 * C476 + C16928 * C873 - C50146 * C882) *
                C16924 +
            (C17301 - C17302 + C17303 - C17304) * C16930 +
            (C17305 - C17306 + C17307 - C17308) * C16925 + C17651 * C16931 +
            C17652 * C16926) *
               C50110 * C50287 +
           ((C16922 * C464 - C16927 * C450 + C50146 * C1191 - C16928 * C1187) *
                C16929 +
            (C16922 * C480 - C16927 * C465 + C50146 * C1199 - C16928 * C1192) *
                C16924 +
            (C17317 - C17318 + C17319 - C17320) * C16930 +
            (C17321 - C17322 + C17323 - C17324) * C16925 +
            (C17325 - C17326 + C17327 - C17328) * C16931 +
            (C17329 - C17330 + C17331 - C17332) * C16926) *
               C50110 * C2064) *
              C49997 * C50231 +
          (((C16934 - C16933 + C16936 - C16935) * C16929 +
            (C16938 - C16937 + C16940 - C16939) * C16924 +
            (C16942 - C16941 + C16944 - C16943) * C16930 +
            (C16946 - C16945 + C16948 - C16947) * C16925 + C16975 * C16931 +
            C16976 * C16926) *
               C50110 * C50286 +
           ((C17302 - C17301 + C17304 - C17303) * C16929 +
            (C17306 - C17305 + C17308 - C17307) * C16924 +
            (C17310 - C17309 + C17312 - C17311) * C16930 +
            (C17314 - C17313 + C17316 - C17315) * C16925 +
            (C17643 - C17644 + C17645 - C17646) * C16931 +
            (C17647 - C17648 + C17649 - C17650) * C16926) *
               C50110 * C50287 +
           ((C17318 - C17317 + C17320 - C17319) * C16929 +
            (C17322 - C17321 + C17324 - C17323) * C16924 +
            (C17326 - C17325 + C17328 - C17327) * C16930 +
            (C17330 - C17329 + C17332 - C17331) * C16925 +
            (C16927 * C453 - C16922 * C470 + C16928 * C1190 - C50146 * C1197) *
                C16931 +
            (C16927 * C471 - C16922 * C483 + C16928 * C1198 - C50146 * C1202) *
                C16926) *
               C50110 * C2064) *
              C49997 * C49984)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                 C19689 +
             (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                 C49950) *
                C5095 +
            ((C21795 - C21796 + C21797 - C21798) * C19689 +
             (C21799 - C21800 + C21801 - C21802) * C49950) *
                C5096 +
            C21844 * C5097) *
               C50286 +
           (((C21796 - C21795 + C21798 - C21797) * C19689 +
             (C21800 - C21799 + C21802 - C21801) * C49950) *
                C5095 +
            ((C21804 - C21803 + C21806 - C21805) * C19689 +
             (C21808 - C21807 + C21810 - C21809) * C49950) *
                C5096 +
            C23678 * C5097) *
               C50287 +
           (C21844 * C5095 +
            ((C21812 - C21811 + C21814 - C21813) * C19689 +
             (C21816 - C21815 + C21818 - C21817) * C49950) *
                C5096 +
            ((C23666 - C23667 + C23668 - C23669) * C19689 +
             (C23670 - C23671 + C23672 - C23673) * C49950) *
                C5097) *
               C2064) *
              C49997 * C50231 +
          ((((C16934 - C16933 + C16936 - C16935) * C19689 +
             (C16938 - C16937 + C16940 - C16939) * C49950) *
                C5095 +
            ((C17301 - C17302 + C17303 - C17304) * C19689 +
             (C17305 - C17306 + C17307 - C17308) * C49950) *
                C5096 +
            C21843 * C5097) *
               C50286 +
           (((C17302 - C17301 + C17304 - C17303) * C19689 +
             (C17306 - C17305 + C17308 - C17307) * C49950) *
                C5095 +
            ((C17317 - C17318 + C17319 - C17320) * C19689 +
             (C17321 - C17322 + C17323 - C17324) * C49950) *
                C5096 +
            ((C21823 - C21824 + C21825 - C21826) * C19689 +
             (C21827 - C21828 + C21829 - C21830) * C49950) *
                C5097) *
               C50287 +
           (C21843 * C5095 +
            ((C21824 - C21823 + C21826 - C21825) * C19689 +
             (C21828 - C21827 + C21830 - C21829) * C49950) *
                C5096 +
            ((C16927 * C5403 - C16922 * C5407 + C16928 * C6377 -
              C50146 * C6380) *
                 C19689 +
             (C16927 * C5408 - C16922 * C5412 + C16928 * C6381 -
              C50146 * C6383) *
                 C49950) *
                C5097) *
               C2064) *
              C49997 * C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                C16929 +
            (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                C16924 +
            (C16933 - C16934 + C16935 - C16936) * C16930 +
            (C16937 - C16938 + C16939 - C16940) * C16925 + C16973 * C16931 +
            C16974 * C16926) *
               C50110 * C1648 +
           ((C16927 * C446 - C16922 * C456 + C16928 * C867 - C50146 * C872) *
                C16929 +
            (C16927 * C457 - C16922 * C476 + C16928 * C873 - C50146 * C882) *
                C16924 +
            (C17301 - C17302 + C17303 - C17304) * C16930 +
            (C17305 - C17306 + C17307 - C17308) * C16925 + C17651 * C16931 +
            C17652 * C16926) *
               C50110 * C50077) *
              C276 +
          (((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                C16929 +
            (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                C16924 +
            (C17123 - C17124 + C17125 - C17126) * C16930 +
            (C17127 - C17128 + C17129 - C17130) * C16925 + C17491 * C16931 +
            C17492 * C16926) *
               C50110 * C1648 +
           ((C16922 * C872 - C16927 * C867 + C50146 * C1538 - C16928 * C1534) *
                C16929 +
            (C16922 * C882 - C16927 * C873 + C50146 * C1546 - C16928 * C1539) *
                C16924 +
            (C17847 - C17848 + C17849 - C17850) * C16930 +
            (C17851 - C17852 + C17853 - C17854) * C16925 +
            (C17855 - C17856 + C17857 - C17858) * C16931 +
            (C17859 - C17860 + C17861 - C17862) * C16926) *
               C50110 * C50077) *
              C277 +
          (((C16922 * C299 - C16927 * C285 + C50146 * C1077 - C16928 * C1073) *
                C16929 +
            (C16922 * C315 - C16927 * C300 + C50146 * C1085 - C16928 * C1078) *
                C16924 +
            (C17139 - C17140 + C17141 - C17142) * C16930 +
            (C17143 - C17144 + C17145 - C17146) * C16925 +
            (C17147 - C17148 + C17149 - C17150) * C16931 +
            (C17151 - C17152 + C17153 - C17154) * C16926) *
               C50110 * C1648 +
           ((C16927 * C1534 - C16922 * C1538 + C16928 * C3181 -
             C50146 * C3184) *
                C16929 +
            (C16927 * C1539 - C16922 * C1546 + C16928 * C3185 -
             C50146 * C3190) *
                C16924 +
            (C16927 * C1535 - C16922 * C1540 + C16928 * C3182 -
             C50146 * C3186) *
                C16930 +
            (C16927 * C1541 - C16922 * C1547 + C16928 * C3187 -
             C50146 * C3191) *
                C16925 +
            (C16927 * C1536 - C16922 * C1542 + C16928 * C3183 -
             C50146 * C3188) *
                C16931 +
            (C16927 * C1543 - C16922 * C1548 + C16928 * C3189 -
             C50146 * C3192) *
                C16926) *
               C50110 * C50077) *
              C278) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                C16929 +
            (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                C16924 +
            (C16933 - C16934 + C16935 - C16936) * C16930 +
            (C16937 - C16938 + C16939 - C16940) * C16925 + C16973 * C16931 +
            C16974 * C16926) *
               C50110 * C1648 +
           ((C16927 * C446 - C16922 * C456 + C16928 * C867 - C50146 * C872) *
                C16929 +
            (C16927 * C457 - C16922 * C476 + C16928 * C873 - C50146 * C882) *
                C16924 +
            (C17301 - C17302 + C17303 - C17304) * C16930 +
            (C17305 - C17306 + C17307 - C17308) * C16925 + C17651 * C16931 +
            C17652 * C16926) *
               C50110 * C50077) *
              C49997 * C999 +
          (((C16934 - C16933 + C16936 - C16935) * C16929 +
            (C16938 - C16937 + C16940 - C16939) * C16924 +
            (C16942 - C16941 + C16944 - C16943) * C16930 +
            (C16946 - C16945 + C16948 - C16947) * C16925 + C16975 * C16931 +
            C16976 * C16926) *
               C50110 * C1648 +
           ((C17302 - C17301 + C17304 - C17303) * C16929 +
            (C17306 - C17305 + C17308 - C17307) * C16924 +
            (C17310 - C17309 + C17312 - C17311) * C16930 +
            (C17314 - C17313 + C17316 - C17315) * C16925 +
            (C17643 - C17644 + C17645 - C17646) * C16931 +
            (C17647 - C17648 + C17649 - C17650) * C16926) *
               C50110 * C50077) *
              C49997 * C1000 +
          ((C16973 * C16929 + C16974 * C16924 +
            (C16950 - C16949 + C16952 - C16951) * C16930 +
            (C16954 - C16953 + C16956 - C16955) * C16925 +
            (C16957 - C16958 + C16959 - C16960) * C16931 +
            (C16961 - C16962 + C16963 - C16964) * C16926) *
               C50110 * C1648 +
           (C17651 * C16929 + C17652 * C16924 +
            (C17644 - C17643 + C17646 - C17645) * C16930 +
            (C17648 - C17647 + C17650 - C17649) * C16925 +
            (C16927 * C454 - C16922 * C472 + C16928 * C871 - C50146 * C880) *
                C16931 +
            (C16927 * C473 - C16922 * C484 + C16928 * C881 - C50146 * C886) *
                C16926) *
               C50110 * C50077) *
              C49997 * C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19680 * C129 - C19685 * C122 + C19681 * C291 - C19686 * C281 +
             C19682 * C299 - C19687 * C285 + C19683 * C1077 - C19688 * C1073) *
                C19689 +
            (C19680 * C143 - C19685 * C130 + C19681 * C311 - C19686 * C292 +
             C19682 * C315 - C19687 * C300 + C19683 * C1085 - C19688 * C1078) *
                C49950) *
               C50110 * C1648 +
           ((C19685 * C446 - C19680 * C456 + C19686 * C867 - C19681 * C872 +
             C19687 * C1534 - C19682 * C1538 + C19688 * C3181 -
             C19683 * C3184) *
                C19689 +
            (C19685 * C457 - C19680 * C476 + C19686 * C873 - C19681 * C882 +
             C19687 * C1539 - C19682 * C1546 + C19688 * C3185 -
             C19683 * C3190) *
                C49950) *
               C50110 * C50077) *
              C49997 * C999 +
          (((C19685 * C123 - C19680 * C131 + C19686 * C282 - C19681 * C293 +
             C19687 * C286 - C19682 * C301 + C19688 * C1074 - C19683 * C1079) *
                C19689 +
            (C19685 * C132 - C19680 * C144 + C19686 * C294 - C19681 * C312 +
             C19687 * C302 - C19682 * C316 + C19688 * C1080 - C19683 * C1086) *
                C49950) *
               C50110 * C1648 +
           ((C19680 * C458 - C19685 * C447 + C19681 * C874 - C19686 * C868 +
             C19682 * C1540 - C19687 * C1535 + C19683 * C3186 -
             C19688 * C3182) *
                C19689 +
            (C19680 * C477 - C19685 * C459 + C19681 * C883 - C19686 * C875 +
             C19682 * C1547 - C19687 * C1541 + C19683 * C3191 -
             C19688 * C3187) *
                C49950) *
               C50110 * C50077) *
              C49997 * C1000 +
          (((C19680 * C133 - C19685 * C124 + C19681 * C295 - C19686 * C283 +
             C19682 * C303 - C19687 * C287 + C19683 * C1081 - C19688 * C1075) *
                C19689 +
            (C19680 * C145 - C19685 * C134 + C19681 * C313 - C19686 * C296 +
             C19682 * C317 - C19687 * C304 + C19683 * C1087 - C19688 * C1082) *
                C49950) *
               C50110 * C1648 +
           ((C19685 * C448 - C19680 * C460 + C19686 * C869 - C19681 * C876 +
             C19687 * C1536 - C19682 * C1542 + C19688 * C3183 -
             C19683 * C3188) *
                C19689 +
            (C19685 * C461 - C19680 * C478 + C19686 * C877 - C19681 * C884 +
             C19687 * C1543 - C19682 * C1548 + C19688 * C3189 -
             C19683 * C3192) *
                C49950) *
               C50110 * C50077) *
              C49997 * C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19680 * C129 - C19685 * C122 + C19681 * C291 - C19686 * C281 +
             C19682 * C299 - C19687 * C285 + C19683 * C1077 - C19688 * C1073) *
                C19689 +
            (C19680 * C143 - C19685 * C130 + C19681 * C311 - C19686 * C292 +
             C19682 * C315 - C19687 * C300 + C19683 * C1085 - C19688 * C1078) *
                C49950) *
               C50110 * C1648 +
           ((C19685 * C446 - C19680 * C456 + C19686 * C867 - C19681 * C872 +
             C19687 * C1534 - C19682 * C1538 + C19688 * C3181 -
             C19683 * C3184) *
                C19689 +
            (C19685 * C457 - C19680 * C476 + C19686 * C873 - C19681 * C882 +
             C19687 * C1539 - C19682 * C1546 + C19688 * C3185 -
             C19683 * C3190) *
                C49950) *
               C50110 * C50077) *
              C276 +
          (((C19685 * C281 - C19680 * C291 + C19686 * C285 - C19681 * C299 +
             C19687 * C1073 - C19682 * C1077 + C19688 * C2453 -
             C19683 * C2456) *
                C19689 +
            (C19685 * C292 - C19680 * C311 + C19686 * C300 - C19681 * C315 +
             C19687 * C1078 - C19682 * C1085 + C19688 * C2457 -
             C19683 * C2462) *
                C49950) *
               C50110 * C1648 +
           ((C19680 * C872 - C19685 * C867 + C19681 * C1538 - C19686 * C1534 +
             C19682 * C3184 - C19687 * C3181 + C19683 * C4099 -
             C19688 * C4097) *
                C19689 +
            (C19680 * C882 - C19685 * C873 + C19681 * C1546 - C19686 * C1539 +
             C19682 * C3190 - C19687 * C3185 + C19683 * C4103 -
             C19688 * C4100) *
                C49950) *
               C50110 * C50077) *
              C277 +
          (((C19680 * C299 - C19685 * C285 + C19681 * C1077 - C19686 * C1073 +
             C19682 * C2456 - C19687 * C2453 + C19683 * C3451 -
             C19688 * C3449) *
                C19689 +
            (C19680 * C315 - C19685 * C300 + C19681 * C1085 - C19686 * C1078 +
             C19682 * C2462 - C19687 * C2457 + C19683 * C3455 -
             C19688 * C3452) *
                C49950) *
               C50110 * C1648 +
           ((C19685 * C1534 - C19680 * C1538 + C19686 * C3181 - C19681 * C3184 +
             C19687 * C4097 - C19682 * C4099 + C19688 * C20808 -
             C19683 * C20809) *
                C19689 +
            (C19685 * C1539 - C19680 * C1546 + C19686 * C3185 - C19681 * C3190 +
             C19687 * C4100 - C19682 * C4103 + C19688 * C20810 -
             C19683 * C20811) *
                C49950) *
               C50110 * C50077) *
              C278) *
         C49978) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                 C19689 +
             (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                 C49950) *
                C5095 +
            ((C21795 - C21796 + C21797 - C21798) * C19689 +
             (C21799 - C21800 + C21801 - C21802) * C49950) *
                C5096 +
            C21844 * C5097) *
               C1648 +
           (((C21796 - C21795 + C21798 - C21797) * C19689 +
             (C21800 - C21799 + C21802 - C21801) * C49950) *
                C5095 +
            ((C21804 - C21803 + C21806 - C21805) * C19689 +
             (C21808 - C21807 + C21810 - C21809) * C49950) *
                C5096 +
            ((C21811 - C21812 + C21813 - C21814) * C19689 +
             (C21815 - C21816 + C21817 - C21818) * C49950) *
                C5097) *
               C50077) *
              C49997 * C999 +
          ((((C16934 - C16933 + C16936 - C16935) * C19689 +
             (C16938 - C16937 + C16940 - C16939) * C49950) *
                C5095 +
            ((C17301 - C17302 + C17303 - C17304) * C19689 +
             (C17305 - C17306 + C17307 - C17308) * C49950) *
                C5096 +
            C21843 * C5097) *
               C1648 +
           (((C17302 - C17301 + C17304 - C17303) * C19689 +
             (C17306 - C17305 + C17308 - C17307) * C49950) *
                C5095 +
            ((C17317 - C17318 + C17319 - C17320) * C19689 +
             (C17321 - C17322 + C17323 - C17324) * C49950) *
                C5096 +
            ((C21823 - C21824 + C21825 - C21826) * C19689 +
             (C21827 - C21828 + C21829 - C21830) * C49950) *
                C5097) *
               C50077) *
              C49997 * C1000 +
          (((C16973 * C19689 + C16974 * C49950) * C5095 +
            ((C17310 - C17309 + C17312 - C17311) * C19689 +
             (C17314 - C17313 + C17316 - C17315) * C49950) *
                C5096 +
            ((C17325 - C17326 + C17327 - C17328) * C19689 +
             (C17329 - C17330 + C17331 - C17332) * C49950) *
                C5097) *
               C1648 +
           ((C17651 * C19689 + C17652 * C49950) * C5095 +
            ((C17326 - C17325 + C17328 - C17327) * C19689 +
             (C17330 - C17329 + C17332 - C17331) * C49950) *
                C5096 +
            ((C16927 * C1820 - C16922 * C1826 + C16928 * C5962 -
              C50146 * C5963) *
                 C19689 +
             (C16927 * C1827 - C16922 * C1832 + C16928 * C5964 -
              C50146 * C5965) *
                 C49950) *
                C5097) *
               C50077) *
              C49997 * C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                 C19689 +
             (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                 C49950) *
                C5095 +
            ((C21795 - C21796 + C21797 - C21798) * C19689 +
             (C21799 - C21800 + C21801 - C21802) * C49950) *
                C5096 +
            C21844 * C5097) *
               C1648 +
           (((C21796 - C21795 + C21798 - C21797) * C19689 +
             (C21800 - C21799 + C21802 - C21801) * C49950) *
                C5095 +
            ((C21804 - C21803 + C21806 - C21805) * C19689 +
             (C21808 - C21807 + C21810 - C21809) * C49950) *
                C5096 +
            ((C21811 - C21812 + C21813 - C21814) * C19689 +
             (C21815 - C21816 + C21817 - C21818) * C49950) *
                C5097) *
               C50077) *
              C276 +
          ((((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                 C19689 +
             (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                 C49950) *
                C5095 +
            ((C22331 - C22332 + C22333 - C22334) * C19689 +
             (C22335 - C22336 + C22337 - C22338) * C49950) *
                C5096 +
            C22765 * C5097) *
               C1648 +
           (((C22332 - C22331 + C22334 - C22333) * C19689 +
             (C22336 - C22335 + C22338 - C22337) * C49950) *
                C5095 +
            ((C22340 - C22339 + C22342 - C22341) * C19689 +
             (C22344 - C22343 + C22346 - C22345) * C49950) *
                C5096 +
            ((C22753 - C22754 + C22755 - C22756) * C19689 +
             (C22757 - C22758 + C22759 - C22760) * C49950) *
                C5097) *
               C50077) *
              C277 +
          ((((C16922 * C299 - C16927 * C285 + C50146 * C1077 - C16928 * C1073) *
                 C19689 +
             (C16922 * C315 - C16927 * C300 + C50146 * C1085 - C16928 * C1078) *
                 C49950) *
                C5095 +
            ((C23252 - C23253 + C23254 - C23255) * C19689 +
             (C23256 - C23257 + C23258 - C23259) * C49950) *
                C5096 +
            ((C23260 - C23261 + C23262 - C23263) * C19689 +
             (C23264 - C23265 + C23266 - C23267) * C49950) *
                C5097) *
               C1648 +
           (((C23253 - C23252 + C23255 - C23254) * C19689 +
             (C23257 - C23256 + C23259 - C23258) * C49950) *
                C5095 +
            ((C23261 - C23260 + C23263 - C23262) * C19689 +
             (C23265 - C23264 + C23267 - C23266) * C49950) *
                C5096 +
            ((C16927 * C4496 - C16922 * C4500 + C16928 * C21074 -
              C50146 * C21075) *
                 C19689 +
             (C16927 * C4502 - C16922 * C4508 + C16928 * C21076 -
              C50146 * C21077) *
                 C49950) *
                C5097) *
               C50077) *
              C278) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                 C49175 +
             (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                 C50224 +
             (C16933 - C16934 + C16935 - C16936) * C49168 +
             (C16937 - C16938 + C16939 - C16940) * C49955) *
                C50253 +
            ((C21795 - C21796 + C21797 - C21798) * C49175 +
             (C21799 - C21800 + C21801 - C21802) * C50224 + C27461 * C49168 +
             C27462 * C49955) *
                C50174) *
               C50013 * C50239 +
           (((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                 C49175 +
             (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                 C50224 +
             (C17123 - C17124 + C17125 - C17126) * C49168 +
             (C17127 - C17128 + C17129 - C17130) * C49955) *
                C50253 +
            ((C22331 - C22332 + C22333 - C22334) * C49175 +
             (C22335 - C22336 + C22337 - C22338) * C50224 +
             (C17848 - C17847 + C17850 - C17849) * C49168 +
             (C17852 - C17851 + C17854 - C17853) * C49955) *
                C50174) *
               C50013 * C50049) *
              C50282 +
          ((((C16934 - C16933 + C16936 - C16935) * C49175 +
             (C16938 - C16937 + C16940 - C16939) * C50224 +
             (C16942 - C16941 + C16944 - C16943) * C49168 +
             (C16946 - C16945 + C16948 - C16947) * C49955) *
                C50253 +
            (C27463 * C49175 + C27464 * C50224 + C17651 * C49168 +
             C17652 * C49955) *
                C50174) *
               C50013 * C50239 +
           (((C17124 - C17123 + C17126 - C17125) * C49175 +
             (C17128 - C17127 + C17130 - C17129) * C50224 +
             (C17132 - C17131 + C17134 - C17133) * C49168 +
             (C17136 - C17135 + C17138 - C17137) * C49955) *
                C50253 +
            ((C17847 - C17848 + C17849 - C17850) * C49175 +
             (C17851 - C17852 + C17853 - C17854) * C50224 +
             (C17855 - C17856 + C17857 - C17858) * C49168 +
             (C17859 - C17860 + C17861 - C17862) * C49955) *
                C50174) *
               C50013 * C50049) *
              C50283 +
          (((C16973 * C49175 + C16974 * C50224 +
             (C16950 - C16949 + C16952 - C16951) * C49168 +
             (C16954 - C16953 + C16956 - C16955) * C49955) *
                C50253 +
            ((C17310 - C17309 + C17312 - C17311) * C49175 +
             (C17314 - C17313 + C17316 - C17315) * C50224 +
             (C17643 - C17644 + C17645 - C17646) * C49168 +
             (C17647 - C17648 + C17649 - C17650) * C49955) *
                C50174) *
               C50013 * C50239 +
           ((C17491 * C49175 + C17492 * C50224 +
             (C17484 - C17483 + C17486 - C17485) * C49168 +
             (C17488 - C17487 + C17490 - C17489) * C49955) *
                C50253 +
            ((C17856 - C17855 + C17858 - C17857) * C49175 +
             (C17860 - C17859 + C17862 - C17861) * C50224 +
             (C16927 * C870 - C16922 * C878 + C16928 * C1537 - C50146 * C1544) *
                 C49168 +
             (C16927 * C879 - C16922 * C885 + C16928 * C1545 - C50146 * C1549) *
                 C49955) *
                C50174) *
               C50013 * C50049) *
              C612)) /
        (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                  C49175 +
              (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                  C50224 +
              (C16933 - C16934 + C16935 - C16936) * C49168 +
              (C16937 - C16938 + C16939 - C16940) * C49955) *
                 C50253 +
             ((C21795 - C21796 + C21797 - C21798) * C49175 +
              (C21799 - C21800 + C21801 - C21802) * C50224 + C27461 * C49168 +
              C27462 * C49955) *
                 C50174) *
                C50240 +
            (((C21796 - C21795 + C21798 - C21797) * C49175 +
              (C21800 - C21799 + C21802 - C21801) * C50224 + C27463 * C49168 +
              C27464 * C49955) *
                 C50253 +
             ((C21804 - C21803 + C21806 - C21805) * C49175 +
              (C21808 - C21807 + C21810 - C21809) * C50224 + C21835 * C49168 +
              C21836 * C49955) *
                 C50174) *
                C50077) *
               C50239 +
           ((((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                  C49175 +
              (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                  C50224 +
              (C17123 - C17124 + C17125 - C17126) * C49168 +
              (C17127 - C17128 + C17129 - C17130) * C49955) *
                 C50253 +
             ((C22331 - C22332 + C22333 - C22334) * C49175 +
              (C22335 - C22336 + C22337 - C22338) * C50224 + C28127 * C49168 +
              C28128 * C49955) *
                 C50174) *
                C50240 +
            (((C22332 - C22331 + C22334 - C22333) * C49175 +
              (C22336 - C22335 + C22338 - C22337) * C50224 + C28129 * C49168 +
              C28130 * C49955) *
                 C50253 +
             ((C22340 - C22339 + C22342 - C22341) * C49175 +
              (C22344 - C22343 + C22346 - C22345) * C50224 +
              (C22347 - C22348 + C22349 - C22350) * C49168 +
              (C22351 - C22352 + C22353 - C22354) * C49955) *
                 C50174) *
                C50077) *
               C50049) *
              C279 +
          (((((C16934 - C16933 + C16936 - C16935) * C49175 +
              (C16938 - C16937 + C16940 - C16939) * C50224 +
              (C16942 - C16941 + C16944 - C16943) * C49168 +
              (C16946 - C16945 + C16948 - C16947) * C49955) *
                 C50253 +
             (C27463 * C49175 + C27464 * C50224 + C17651 * C49168 +
              C17652 * C49955) *
                 C50174) *
                C50240 +
            ((C27461 * C49175 + C27462 * C50224 + C27859 * C49168 +
              C27860 * C49955) *
                 C50253 +
             (C27465 * C49175 + C27466 * C50224 +
              (C17325 - C17326 + C17327 - C17328) * C49168 +
              (C17329 - C17330 + C17331 - C17332) * C49955) *
                 C50174) *
                C50077) *
               C50239 +
           ((((C17124 - C17123 + C17126 - C17125) * C49175 +
              (C17128 - C17127 + C17130 - C17129) * C50224 +
              (C17132 - C17131 + C17134 - C17133) * C49168 +
              (C17136 - C17135 + C17138 - C17137) * C49955) *
                 C50253 +
             (C28129 * C49175 + C28130 * C50224 +
              (C17855 - C17856 + C17857 - C17858) * C49168 +
              (C17859 - C17860 + C17861 - C17862) * C49955) *
                 C50174) *
                C50240 +
            ((C28127 * C49175 + C28128 * C50224 +
              (C17856 - C17855 + C17858 - C17857) * C49168 +
              (C17860 - C17859 + C17862 - C17861) * C49955) *
                 C50253 +
             ((C22348 - C22347 + C22350 - C22349) * C49175 +
              (C22352 - C22351 + C22354 - C22353) * C50224 +
              (C16927 * C1189 - C16922 * C1195 + C16928 * C2637 -
               C50146 * C2642) *
                  C49168 +
              (C16927 * C1196 - C16922 * C1201 + C16928 * C2643 -
               C50146 * C2646) *
                  C49955) *
                 C50174) *
                C50077) *
               C50049) *
              C49984)) /
        (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                 C49175 +
             (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                 C50224 +
             (C16933 - C16934 + C16935 - C16936) * C49168 +
             (C16937 - C16938 + C16939 - C16940) * C49955) *
                C50253 +
            ((C21795 - C21796 + C21797 - C21798) * C49175 +
             (C21799 - C21800 + C21801 - C21802) * C50224 +
             (C17302 - C17301 + C17304 - C17303) * C49168 +
             (C17306 - C17305 + C17308 - C17307) * C49955) *
                C50174) *
               C50013 * C276 +
           (((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                 C49175 +
             (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                 C50224 +
             (C17123 - C17124 + C17125 - C17126) * C49168 +
             (C17127 - C17128 + C17129 - C17130) * C49955) *
                C50253 +
            ((C22331 - C22332 + C22333 - C22334) * C49175 +
             (C22335 - C22336 + C22337 - C22338) * C50224 +
             (C17848 - C17847 + C17850 - C17849) * C49168 +
             (C17852 - C17851 + C17854 - C17853) * C49955) *
                C50174) *
               C50013 * C277 +
           (((C16922 * C299 - C16927 * C285 + C50146 * C1077 - C16928 * C1073) *
                 C49175 +
             (C16922 * C315 - C16927 * C300 + C50146 * C1085 - C16928 * C1078) *
                 C50224 +
             (C17139 - C17140 + C17141 - C17142) * C49168 +
             (C17143 - C17144 + C17145 - C17146) * C49955) *
                C50253 +
            ((C23252 - C23253 + C23254 - C23255) * C49175 +
             (C23256 - C23257 + C23258 - C23259) * C50224 +
             (C27247 - C27248 + C27249 - C27250) * C49168 +
             (C27251 - C27252 + C27253 - C27254) * C49955) *
                C50174) *
               C50013 * C278) *
              C279 +
          ((((C16934 - C16933 + C16936 - C16935) * C49175 +
             (C16938 - C16937 + C16940 - C16939) * C50224 +
             (C16942 - C16941 + C16944 - C16943) * C49168 +
             (C16946 - C16945 + C16948 - C16947) * C49955) *
                C50253 +
            ((C17301 - C17302 + C17303 - C17304) * C49175 +
             (C17305 - C17306 + C17307 - C17308) * C50224 + C17651 * C49168 +
             C17652 * C49955) *
                C50174) *
               C50013 * C276 +
           (((C17124 - C17123 + C17126 - C17125) * C49175 +
             (C17128 - C17127 + C17130 - C17129) * C50224 +
             (C17132 - C17131 + C17134 - C17133) * C49168 +
             (C17136 - C17135 + C17138 - C17137) * C49955) *
                C50253 +
            ((C17847 - C17848 + C17849 - C17850) * C49175 +
             (C17851 - C17852 + C17853 - C17854) * C50224 +
             (C17855 - C17856 + C17857 - C17858) * C49168 +
             (C17859 - C17860 + C17861 - C17862) * C49955) *
                C50174) *
               C50013 * C277 +
           (((C17140 - C17139 + C17142 - C17141) * C49175 +
             (C17144 - C17143 + C17146 - C17145) * C50224 +
             (C17148 - C17147 + C17150 - C17149) * C49168 +
             (C17152 - C17151 + C17154 - C17153) * C49955) *
                C50253 +
            ((C27248 - C27247 + C27250 - C27249) * C49175 +
             (C27252 - C27251 + C27254 - C27253) * C50224 +
             (C16927 * C1536 - C16922 * C1542 + C16928 * C3183 -
              C50146 * C3188) *
                 C49168 +
             (C16927 * C1543 - C16922 * C1548 + C16928 * C3189 -
              C50146 * C3192) *
                 C49955) *
                C50174) *
               C50013 * C278) *
              C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                C49175 +
            (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                C50224 +
            (C16933 - C16934 + C16935 - C16936) * C49168 +
            (C16937 - C16938 + C16939 - C16940) * C49955) *
               C50253 +
           ((C21795 - C21796 + C21797 - C21798) * C49175 +
            (C21799 - C21800 + C21801 - C21802) * C50224 +
            (C17302 - C17301 + C17304 - C17303) * C49168 +
            (C17306 - C17305 + C17308 - C17307) * C49955) *
               C50174) *
              C50013 * C49997 * C113 +
          (((C16934 - C16933 + C16936 - C16935) * C49175 +
            (C16938 - C16937 + C16940 - C16939) * C50224 +
            (C16942 - C16941 + C16944 - C16943) * C49168 +
            (C16946 - C16945 + C16948 - C16947) * C49955) *
               C50253 +
           ((C17301 - C17302 + C17303 - C17304) * C49175 +
            (C17305 - C17306 + C17307 - C17308) * C50224 + C17651 * C49168 +
            C17652 * C49955) *
               C50174) *
              C50013 * C49997 * C114 +
          ((C16973 * C49175 + C16974 * C50224 +
            (C16950 - C16949 + C16952 - C16951) * C49168 +
            (C16954 - C16953 + C16956 - C16955) * C49955) *
               C50253 +
           ((C17310 - C17309 + C17312 - C17311) * C49175 +
            (C17314 - C17313 + C17316 - C17315) * C50224 +
            (C17643 - C17644 + C17645 - C17646) * C49168 +
            (C17647 - C17648 + C17649 - C17650) * C49955) *
               C50174) *
              C50013 * C49997 * C115 +
          ((C16975 * C49175 + C16976 * C50224 +
            (C16958 - C16957 + C16960 - C16959) * C49168 +
            (C16962 - C16961 + C16964 - C16963) * C49955) *
               C50253 +
           ((C17644 - C17643 + C17646 - C17645) * C49175 +
            (C17648 - C17647 + C17650 - C17649) * C50224 +
            (C16927 * C454 - C16922 * C472 + C16928 * C871 - C50146 * C880) *
                C49168 +
            (C16927 * C473 - C16922 * C484 + C16928 * C881 - C50146 * C886) *
                C49955) *
               C50174) *
              C50013 * C49997 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                 C49175 +
             (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                 C50224 +
             (C16933 - C16934 + C16935 - C16936) * C49168 +
             (C16937 - C16938 + C16939 - C16940) * C49955) *
                C50253 +
            ((C21795 - C21796 + C21797 - C21798) * C49175 +
             (C21799 - C21800 + C21801 - C21802) * C50224 + C27461 * C49168 +
             C27462 * C49955) *
                C50174) *
               C443 +
           (((C21796 - C21795 + C21798 - C21797) * C49175 +
             (C21800 - C21799 + C21802 - C21801) * C50224 + C27463 * C49168 +
             C27464 * C49955) *
                C50253 +
            ((C21804 - C21803 + C21806 - C21805) * C49175 +
             (C21808 - C21807 + C21810 - C21809) * C50224 + C21835 * C49168 +
             C21836 * C49955) *
                C50174) *
               C444 +
           ((C21837 * C49175 + C21838 * C50224 + C27465 * C49168 +
             C27466 * C49955) *
                C50253 +
            ((C21812 - C21811 + C21814 - C21813) * C49175 +
             (C21816 - C21815 + C21818 - C21817) * C50224 +
             (C21823 - C21824 + C21825 - C21826) * C49168 +
             (C21827 - C21828 + C21829 - C21830) * C49955) *
                C50174) *
               C445) *
              C49997 * C279 +
          ((((C16934 - C16933 + C16936 - C16935) * C49175 +
             (C16938 - C16937 + C16940 - C16939) * C50224 +
             (C16942 - C16941 + C16944 - C16943) * C49168 +
             (C16946 - C16945 + C16948 - C16947) * C49955) *
                C50253 +
            (C27463 * C49175 + C27464 * C50224 + C17651 * C49168 +
             C17652 * C49955) *
                C50174) *
               C443 +
           ((C27461 * C49175 + C27462 * C50224 +
             (C17310 - C17309 + C17312 - C17311) * C49168 +
             (C17314 - C17313 + C17316 - C17315) * C49955) *
                C50253 +
            (C27465 * C49175 + C27466 * C50224 +
             (C17325 - C17326 + C17327 - C17328) * C49168 +
             (C17329 - C17330 + C17331 - C17332) * C49955) *
                C50174) *
               C444 +
           ((C21835 * C49175 + C21836 * C50224 +
             (C17326 - C17325 + C17328 - C17327) * C49168 +
             (C17330 - C17329 + C17332 - C17331) * C49955) *
                C50253 +
            ((C21824 - C21823 + C21826 - C21825) * C49175 +
             (C21828 - C21827 + C21830 - C21829) * C50224 +
             (C16927 * C1820 - C16922 * C1826 + C16928 * C5962 -
              C50146 * C5963) *
                 C49168 +
             (C16927 * C1827 - C16922 * C1832 + C16928 * C5964 -
              C50146 * C5965) *
                 C49955) *
                C50174) *
               C445) *
              C49997 * C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                 C49175 +
             (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                 C50224 +
             (C16933 - C16934 + C16935 - C16936) * C49168 +
             (C16937 - C16938 + C16939 - C16940) * C49955) *
                C50253 +
            ((C21795 - C21796 + C21797 - C21798) * C49175 +
             (C21799 - C21800 + C21801 - C21802) * C50224 + C27461 * C49168 +
             C27462 * C49955) *
                C50174) *
               C50240 +
           (((C21796 - C21795 + C21798 - C21797) * C49175 +
             (C21800 - C21799 + C21802 - C21801) * C50224 + C27463 * C49168 +
             C27464 * C49955) *
                C50253 +
            ((C21804 - C21803 + C21806 - C21805) * C49175 +
             (C21808 - C21807 + C21810 - C21809) * C50224 + C21835 * C49168 +
             C21836 * C49955) *
                C50174) *
               C50077) *
              C49997 * C50282 +
          ((((C16934 - C16933 + C16936 - C16935) * C49175 +
             (C16938 - C16937 + C16940 - C16939) * C50224 +
             (C16942 - C16941 + C16944 - C16943) * C49168 +
             (C16946 - C16945 + C16948 - C16947) * C49955) *
                C50253 +
            (C27463 * C49175 + C27464 * C50224 + C17651 * C49168 +
             C17652 * C49955) *
                C50174) *
               C50240 +
           ((C27461 * C49175 + C27462 * C50224 + C27859 * C49168 +
             C27860 * C49955) *
                C50253 +
            (C27465 * C49175 + C27466 * C50224 +
             (C17325 - C17326 + C17327 - C17328) * C49168 +
             (C17329 - C17330 + C17331 - C17332) * C49955) *
                C50174) *
               C50077) *
              C49997 * C50283 +
          (((C16973 * C49175 + C16974 * C50224 +
             (C16950 - C16949 + C16952 - C16951) * C49168 +
             (C16954 - C16953 + C16956 - C16955) * C49955) *
                C50253 +
            (C27859 * C49175 + C27860 * C50224 +
             (C17643 - C17644 + C17645 - C17646) * C49168 +
             (C17647 - C17648 + C17649 - C17650) * C49955) *
                C50174) *
               C50240 +
           ((C17651 * C49175 + C17652 * C50224 +
             (C17644 - C17643 + C17646 - C17645) * C49168 +
             (C17648 - C17647 + C17650 - C17649) * C49955) *
                C50253 +
            ((C17326 - C17325 + C17328 - C17327) * C49175 +
             (C17330 - C17329 + C17332 - C17331) * C50224 +
             (C16927 * C453 - C16922 * C470 + C16928 * C1190 - C50146 * C1197) *
                 C49168 +
             (C16927 * C471 - C16922 * C483 + C16928 * C1198 - C50146 * C1202) *
                 C49955) *
                C50174) *
               C50077) *
              C49997 * C612)) /
        (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                C49175 +
            (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                C50224 +
            (C16933 - C16934 + C16935 - C16936) * C49168 +
            (C16937 - C16938 + C16939 - C16940) * C49955) *
               C50253 +
           ((C21795 - C21796 + C21797 - C21798) * C49175 +
            (C21799 - C21800 + C21801 - C21802) * C50224 +
            (C17302 - C17301 + C17304 - C17303) * C49168 +
            (C17306 - C17305 + C17308 - C17307) * C49955) *
               C50174) *
              C50013 * C49997 * C113 +
          (((C16934 - C16933 + C16936 - C16935) * C49175 +
            (C16938 - C16937 + C16940 - C16939) * C50224 +
            (C16942 - C16941 + C16944 - C16943) * C49168 +
            (C16946 - C16945 + C16948 - C16947) * C49955) *
               C50253 +
           ((C17301 - C17302 + C17303 - C17304) * C49175 +
            (C17305 - C17306 + C17307 - C17308) * C50224 + C17651 * C49168 +
            C17652 * C49955) *
               C50174) *
              C50013 * C49997 * C114 +
          ((C16973 * C49175 + C16974 * C50224 +
            (C16950 - C16949 + C16952 - C16951) * C49168 +
            (C16954 - C16953 + C16956 - C16955) * C49955) *
               C50253 +
           ((C17310 - C17309 + C17312 - C17311) * C49175 +
            (C17314 - C17313 + C17316 - C17315) * C50224 +
            (C17643 - C17644 + C17645 - C17646) * C49168 +
            (C17647 - C17648 + C17649 - C17650) * C49955) *
               C50174) *
              C50013 * C49997 * C115 +
          ((C16975 * C49175 + C16976 * C50224 +
            (C16958 - C16957 + C16960 - C16959) * C49168 +
            (C16962 - C16961 + C16964 - C16963) * C49955) *
               C50253 +
           ((C17644 - C17643 + C17646 - C17645) * C49175 +
            (C17648 - C17647 + C17650 - C17649) * C50224 +
            (C16927 * C454 - C16922 * C472 + C16928 * C871 - C50146 * C880) *
                C49168 +
            (C16927 * C473 - C16922 * C484 + C16928 * C881 - C50146 * C886) *
                C49955) *
               C50174) *
              C50013 * C49997 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                 C49175 +
             (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                 C50224 +
             (C16933 - C16934 + C16935 - C16936) * C49168 +
             (C16937 - C16938 + C16939 - C16940) * C49955) *
                C50253 +
            ((C21795 - C21796 + C21797 - C21798) * C49175 +
             (C21799 - C21800 + C21801 - C21802) * C50224 +
             (C17302 - C17301 + C17304 - C17303) * C49168 +
             (C17306 - C17305 + C17308 - C17307) * C49955) *
                C50174) *
               C50013 * C276 +
           (((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                 C49175 +
             (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                 C50224 +
             (C17123 - C17124 + C17125 - C17126) * C49168 +
             (C17127 - C17128 + C17129 - C17130) * C49955) *
                C50253 +
            ((C22331 - C22332 + C22333 - C22334) * C49175 +
             (C22335 - C22336 + C22337 - C22338) * C50224 +
             (C17848 - C17847 + C17850 - C17849) * C49168 +
             (C17852 - C17851 + C17854 - C17853) * C49955) *
                C50174) *
               C50013 * C277 +
           (((C16922 * C299 - C16927 * C285 + C50146 * C1077 - C16928 * C1073) *
                 C49175 +
             (C16922 * C315 - C16927 * C300 + C50146 * C1085 - C16928 * C1078) *
                 C50224 +
             (C17139 - C17140 + C17141 - C17142) * C49168 +
             (C17143 - C17144 + C17145 - C17146) * C49955) *
                C50253 +
            ((C23252 - C23253 + C23254 - C23255) * C49175 +
             (C23256 - C23257 + C23258 - C23259) * C50224 +
             (C27247 - C27248 + C27249 - C27250) * C49168 +
             (C27251 - C27252 + C27253 - C27254) * C49955) *
                C50174) *
               C50013 * C278) *
              C279 +
          ((((C16934 - C16933 + C16936 - C16935) * C49175 +
             (C16938 - C16937 + C16940 - C16939) * C50224 +
             (C16942 - C16941 + C16944 - C16943) * C49168 +
             (C16946 - C16945 + C16948 - C16947) * C49955) *
                C50253 +
            ((C17301 - C17302 + C17303 - C17304) * C49175 +
             (C17305 - C17306 + C17307 - C17308) * C50224 + C17651 * C49168 +
             C17652 * C49955) *
                C50174) *
               C50013 * C276 +
           (((C17124 - C17123 + C17126 - C17125) * C49175 +
             (C17128 - C17127 + C17130 - C17129) * C50224 +
             (C17132 - C17131 + C17134 - C17133) * C49168 +
             (C17136 - C17135 + C17138 - C17137) * C49955) *
                C50253 +
            ((C17847 - C17848 + C17849 - C17850) * C49175 +
             (C17851 - C17852 + C17853 - C17854) * C50224 +
             (C17855 - C17856 + C17857 - C17858) * C49168 +
             (C17859 - C17860 + C17861 - C17862) * C49955) *
                C50174) *
               C50013 * C277 +
           (((C17140 - C17139 + C17142 - C17141) * C49175 +
             (C17144 - C17143 + C17146 - C17145) * C50224 +
             (C17148 - C17147 + C17150 - C17149) * C49168 +
             (C17152 - C17151 + C17154 - C17153) * C49955) *
                C50253 +
            ((C27248 - C27247 + C27250 - C27249) * C49175 +
             (C27252 - C27251 + C27254 - C27253) * C50224 +
             (C16927 * C1536 - C16922 * C1542 + C16928 * C3183 -
              C50146 * C3188) *
                 C49168 +
             (C16927 * C1543 - C16922 * C1548 + C16928 * C3189 -
              C50146 * C3192) *
                 C49955) *
                C50174) *
               C50013 * C278) *
              C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[125] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                 C49175 +
             (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                 C50224 +
             (C16933 - C16934 + C16935 - C16936) * C49168 +
             (C16937 - C16938 + C16939 - C16940) * C49955) *
                C50253 +
            ((C21795 - C21796 + C21797 - C21798) * C49175 +
             (C21799 - C21800 + C21801 - C21802) * C50224 + C27461 * C49168 +
             C27462 * C49955) *
                C50174) *
               C50013 * C50284 +
           (((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                 C49175 +
             (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                 C50224 +
             (C17123 - C17124 + C17125 - C17126) * C49168 +
             (C17127 - C17128 + C17129 - C17130) * C49955) *
                C50253 +
            ((C22331 - C22332 + C22333 - C22334) * C49175 +
             (C22335 - C22336 + C22337 - C22338) * C50224 + C28127 * C49168 +
             C28128 * C49955) *
                C50174) *
               C50013 * C50285 +
           (((C16922 * C299 - C16927 * C285 + C50146 * C1077 - C16928 * C1073) *
                 C49175 +
             (C16922 * C315 - C16927 * C300 + C50146 * C1085 - C16928 * C1078) *
                 C50224 +
             (C17139 - C17140 + C17141 - C17142) * C49168 +
             (C17143 - C17144 + C17145 - C17146) * C49955) *
                C50253 +
            ((C23252 - C23253 + C23254 - C23255) * C49175 +
             (C23256 - C23257 + C23258 - C23259) * C50224 +
             (C27247 - C27248 + C27249 - C27250) * C49168 +
             (C27251 - C27252 + C27253 - C27254) * C49955) *
                C50174) *
               C50013 * C1303) *
              C50231 +
          ((((C16934 - C16933 + C16936 - C16935) * C49175 +
             (C16938 - C16937 + C16940 - C16939) * C50224 +
             (C16942 - C16941 + C16944 - C16943) * C49168 +
             (C16946 - C16945 + C16948 - C16947) * C49955) *
                C50253 +
            (C27463 * C49175 + C27464 * C50224 + C17651 * C49168 +
             C17652 * C49955) *
                C50174) *
               C50013 * C50284 +
           (((C17124 - C17123 + C17126 - C17125) * C49175 +
             (C17128 - C17127 + C17130 - C17129) * C50224 +
             (C17132 - C17131 + C17134 - C17133) * C49168 +
             (C17136 - C17135 + C17138 - C17137) * C49955) *
                C50253 +
            (C28129 * C49175 + C28130 * C50224 +
             (C17855 - C17856 + C17857 - C17858) * C49168 +
             (C17859 - C17860 + C17861 - C17862) * C49955) *
                C50174) *
               C50013 * C50285 +
           (((C17140 - C17139 + C17142 - C17141) * C49175 +
             (C17144 - C17143 + C17146 - C17145) * C50224 +
             (C17148 - C17147 + C17150 - C17149) * C49168 +
             (C17152 - C17151 + C17154 - C17153) * C49955) *
                C50253 +
            ((C27248 - C27247 + C27250 - C27249) * C49175 +
             (C27252 - C27251 + C27254 - C27253) * C50224 +
             (C16927 * C1536 - C16922 * C1542 + C16928 * C3183 -
              C50146 * C3188) *
                 C49168 +
             (C16927 * C1543 - C16922 * C1548 + C16928 * C3189 -
              C50146 * C3192) *
                 C49955) *
                C50174) *
               C50013 * C1303) *
              C49984)) /
        (p * q * std::sqrt(p + q));
    d2ee[126] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                 C49175 +
             (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                 C50224 +
             (C16933 - C16934 + C16935 - C16936) * C49168 +
             (C16937 - C16938 + C16939 - C16940) * C49955) *
                C50253 +
            ((C21795 - C21796 + C21797 - C21798) * C49175 +
             (C21799 - C21800 + C21801 - C21802) * C50224 + C27461 * C49168 +
             C27462 * C49955) *
                C50174) *
               C50240 +
           (((C21796 - C21795 + C21798 - C21797) * C49175 +
             (C21800 - C21799 + C21802 - C21801) * C50224 + C27463 * C49168 +
             C27464 * C49955) *
                C50253 +
            ((C21804 - C21803 + C21806 - C21805) * C49175 +
             (C21808 - C21807 + C21810 - C21809) * C50224 + C21835 * C49168 +
             C21836 * C49955) *
                C50174) *
               C50077) *
              C50284 +
          ((((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                 C49175 +
             (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                 C50224 +
             (C17123 - C17124 + C17125 - C17126) * C49168 +
             (C17127 - C17128 + C17129 - C17130) * C49955) *
                C50253 +
            ((C22331 - C22332 + C22333 - C22334) * C49175 +
             (C22335 - C22336 + C22337 - C22338) * C50224 + C28127 * C49168 +
             C28128 * C49955) *
                C50174) *
               C50240 +
           (((C22332 - C22331 + C22334 - C22333) * C49175 +
             (C22336 - C22335 + C22338 - C22337) * C50224 + C28129 * C49168 +
             C28130 * C49955) *
                C50253 +
            ((C22340 - C22339 + C22342 - C22341) * C49175 +
             (C22344 - C22343 + C22346 - C22345) * C50224 +
             (C22347 - C22348 + C22349 - C22350) * C49168 +
             (C22351 - C22352 + C22353 - C22354) * C49955) *
                C50174) *
               C50077) *
              C50285 +
          ((((C16922 * C299 - C16927 * C285 + C50146 * C1077 - C16928 * C1073) *
                 C49175 +
             (C16922 * C315 - C16927 * C300 + C50146 * C1085 - C16928 * C1078) *
                 C50224 +
             (C17139 - C17140 + C17141 - C17142) * C49168 +
             (C17143 - C17144 + C17145 - C17146) * C49955) *
                C50253 +
            ((C23252 - C23253 + C23254 - C23255) * C49175 +
             (C23256 - C23257 + C23258 - C23259) * C50224 +
             (C27247 - C27248 + C27249 - C27250) * C49168 +
             (C27251 - C27252 + C27253 - C27254) * C49955) *
                C50174) *
               C50240 +
           (((C23253 - C23252 + C23255 - C23254) * C49175 +
             (C23257 - C23256 + C23259 - C23258) * C50224 +
             (C27248 - C27247 + C27250 - C27249) * C49168 +
             (C27252 - C27251 + C27254 - C27253) * C49955) *
                C50253 +
            ((C23261 - C23260 + C23263 - C23262) * C49175 +
             (C23265 - C23264 + C23267 - C23266) * C50224 +
             (C16927 * C2636 - C16922 * C2640 + C16928 * C3604 -
              C50146 * C3607) *
                 C49168 +
             (C16927 * C2641 - C16922 * C2645 + C16928 * C3608 -
              C50146 * C3610) *
                 C49955) *
                C50174) *
               C50077) *
              C1303) *
         C49978) /
        (p * q * std::sqrt(p + q));
    d2ee[127] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                C49175 +
            (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                C50224 +
            (C16933 - C16934 + C16935 - C16936) * C49168 +
            (C16937 - C16938 + C16939 - C16940) * C49955) *
               C50253 +
           ((C21795 - C21796 + C21797 - C21798) * C49175 +
            (C21799 - C21800 + C21801 - C21802) * C50224 + C27461 * C49168 +
            C27462 * C49955) *
               C50174) *
              C50013 * C1068 +
          (((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                C49175 +
            (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                C50224 +
            (C17123 - C17124 + C17125 - C17126) * C49168 +
            (C17127 - C17128 + C17129 - C17130) * C49955) *
               C50253 +
           ((C22331 - C22332 + C22333 - C22334) * C49175 +
            (C22335 - C22336 + C22337 - C22338) * C50224 + C28127 * C49168 +
            C28128 * C49955) *
               C50174) *
              C50013 * C1069 +
          (((C16922 * C299 - C16927 * C285 + C50146 * C1077 - C16928 * C1073) *
                C49175 +
            (C16922 * C315 - C16927 * C300 + C50146 * C1085 - C16928 * C1078) *
                C50224 +
            (C17139 - C17140 + C17141 - C17142) * C49168 +
            (C17143 - C17144 + C17145 - C17146) * C49955) *
               C50253 +
           ((C23252 - C23253 + C23254 - C23255) * C49175 +
            (C23256 - C23257 + C23258 - C23259) * C50224 +
            (C27247 - C27248 + C27249 - C27250) * C49168 +
            (C27251 - C27252 + C27253 - C27254) * C49955) *
               C50174) *
              C50013 * C1070 +
          (((C16927 * C1073 - C16922 * C1077 + C16928 * C2453 -
             C50146 * C2456) *
                C49175 +
            (C16927 * C1078 - C16922 * C1085 + C16928 * C2457 -
             C50146 * C2462) *
                C50224 +
            (C16927 * C1074 - C16922 * C1079 + C16928 * C2454 -
             C50146 * C2458) *
                C49168 +
            (C16927 * C1080 - C16922 * C1086 + C16928 * C2459 -
             C50146 * C2463) *
                C49955) *
               C50253 +
           ((C16927 * C3181 - C16922 * C3184 + C16928 * C4097 -
             C50146 * C4099) *
                C49175 +
            (C16927 * C3185 - C16922 * C3190 + C16928 * C4100 -
             C50146 * C4103) *
                C50224 +
            (C16927 * C3182 - C16922 * C3186 + C16928 * C4098 -
             C50146 * C4101) *
                C49168 +
            (C16927 * C3187 - C16922 * C3191 + C16928 * C4102 -
             C50146 * C4104) *
                C49955) *
               C50174) *
              C50013 * C1071) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                 C49175 +
             (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                 C50224 +
             (C16933 - C16934 + C16935 - C16936) * C49168 +
             (C16937 - C16938 + C16939 - C16940) * C49955) *
                C50253 +
            ((C21795 - C21796 + C21797 - C21798) * C49175 +
             (C21799 - C21800 + C21801 - C21802) * C50224 + C27461 * C49168 +
             C27462 * C49955) *
                C50174) *
               C50013 * C997 +
           (((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                 C49175 +
             (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                 C50224 +
             (C17123 - C17124 + C17125 - C17126) * C49168 +
             (C17127 - C17128 + C17129 - C17130) * C49955) *
                C50253 +
            ((C22331 - C22332 + C22333 - C22334) * C49175 +
             (C22335 - C22336 + C22337 - C22338) * C50224 + C28127 * C49168 +
             C28128 * C49955) *
                C50174) *
               C50013 * C50049) *
              C999 +
          ((((C16934 - C16933 + C16936 - C16935) * C49175 +
             (C16938 - C16937 + C16940 - C16939) * C50224 +
             (C16942 - C16941 + C16944 - C16943) * C49168 +
             (C16946 - C16945 + C16948 - C16947) * C49955) *
                C50253 +
            (C27463 * C49175 + C27464 * C50224 + C17651 * C49168 +
             C17652 * C49955) *
                C50174) *
               C50013 * C997 +
           (((C17124 - C17123 + C17126 - C17125) * C49175 +
             (C17128 - C17127 + C17130 - C17129) * C50224 +
             (C17132 - C17131 + C17134 - C17133) * C49168 +
             (C17136 - C17135 + C17138 - C17137) * C49955) *
                C50253 +
            (C28129 * C49175 + C28130 * C50224 +
             (C17855 - C17856 + C17857 - C17858) * C49168 +
             (C17859 - C17860 + C17861 - C17862) * C49955) *
                C50174) *
               C50013 * C50049) *
              C1000 +
          (((C16973 * C49175 + C16974 * C50224 +
             (C16950 - C16949 + C16952 - C16951) * C49168 +
             (C16954 - C16953 + C16956 - C16955) * C49955) *
                C50253 +
            (C27859 * C49175 + C27860 * C50224 +
             (C17643 - C17644 + C17645 - C17646) * C49168 +
             (C17647 - C17648 + C17649 - C17650) * C49955) *
                C50174) *
               C50013 * C997 +
           ((C17491 * C49175 + C17492 * C50224 +
             (C17484 - C17483 + C17486 - C17485) * C49168 +
             (C17488 - C17487 + C17490 - C17489) * C49955) *
                C50253 +
            ((C17856 - C17855 + C17858 - C17857) * C49175 +
             (C17860 - C17859 + C17862 - C17861) * C50224 +
             (C16927 * C870 - C16922 * C878 + C16928 * C1537 - C50146 * C1544) *
                 C49168 +
             (C16927 * C879 - C16922 * C885 + C16928 * C1545 - C50146 * C1549) *
                 C49955) *
                C50174) *
               C50013 * C50049) *
              C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                 C49175 +
             (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                 C50224 +
             (C16933 - C16934 + C16935 - C16936) * C49168 +
             (C16937 - C16938 + C16939 - C16940) * C49955) *
                C50253 +
            ((C21795 - C21796 + C21797 - C21798) * C49175 +
             (C21799 - C21800 + C21801 - C21802) * C50224 + C27461 * C49168 +
             C27462 * C49955) *
                C50174) *
               C443 +
           (((C21796 - C21795 + C21798 - C21797) * C49175 +
             (C21800 - C21799 + C21802 - C21801) * C50224 + C27463 * C49168 +
             C27464 * C49955) *
                C50253 +
            ((C21804 - C21803 + C21806 - C21805) * C49175 +
             (C21808 - C21807 + C21810 - C21809) * C50224 + C21835 * C49168 +
             C21836 * C49955) *
                C50174) *
               C444 +
           ((C21837 * C49175 + C21838 * C50224 + C27465 * C49168 +
             C27466 * C49955) *
                C50253 +
            ((C21812 - C21811 + C21814 - C21813) * C49175 +
             (C21816 - C21815 + C21818 - C21817) * C50224 +
             (C21823 - C21824 + C21825 - C21826) * C49168 +
             (C21827 - C21828 + C21829 - C21830) * C49955) *
                C50174) *
               C445) *
              C997 +
          ((((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                 C49175 +
             (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                 C50224 +
             (C17123 - C17124 + C17125 - C17126) * C49168 +
             (C17127 - C17128 + C17129 - C17130) * C49955) *
                C50253 +
            ((C22331 - C22332 + C22333 - C22334) * C49175 +
             (C22335 - C22336 + C22337 - C22338) * C50224 + C28127 * C49168 +
             C28128 * C49955) *
                C50174) *
               C443 +
           (((C22332 - C22331 + C22334 - C22333) * C49175 +
             (C22336 - C22335 + C22338 - C22337) * C50224 + C28129 * C49168 +
             C28130 * C49955) *
                C50253 +
            ((C22340 - C22339 + C22342 - C22341) * C49175 +
             (C22344 - C22343 + C22346 - C22345) * C50224 +
             (C22347 - C22348 + C22349 - C22350) * C49168 +
             (C22351 - C22352 + C22353 - C22354) * C49955) *
                C50174) *
               C444 +
           ((C22761 * C49175 + C22762 * C50224 +
             (C22348 - C22347 + C22350 - C22349) * C49168 +
             (C22352 - C22351 + C22354 - C22353) * C49955) *
                C50253 +
            ((C22754 - C22753 + C22756 - C22755) * C49175 +
             (C22758 - C22757 + C22760 - C22759) * C50224 +
             (C16927 * C4497 - C16922 * C4503 + C16928 * C4498 -
              C50146 * C4504) *
                 C49168 +
             (C16927 * C4505 - C16922 * C4509 + C16928 * C4506 -
              C50146 * C4510) *
                 C49955) *
                C50174) *
               C445) *
              C50049) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[128] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                  C49175 +
              (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                  C50224 +
              (C16933 - C16934 + C16935 - C16936) * C49168 +
              (C16937 - C16938 + C16939 - C16940) * C49955) *
                 C50253 +
             ((C21795 - C21796 + C21797 - C21798) * C49175 +
              (C21799 - C21800 + C21801 - C21802) * C50224 + C27461 * C49168 +
              C27462 * C49955) *
                 C50174) *
                C50240 +
            (((C21796 - C21795 + C21798 - C21797) * C49175 +
              (C21800 - C21799 + C21802 - C21801) * C50224 + C27463 * C49168 +
              C27464 * C49955) *
                 C50253 +
             ((C21804 - C21803 + C21806 - C21805) * C49175 +
              (C21808 - C21807 + C21810 - C21809) * C50224 + C21835 * C49168 +
              C21836 * C49955) *
                 C50174) *
                C50077) *
               C997 +
           ((((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                  C49175 +
              (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                  C50224 +
              (C17123 - C17124 + C17125 - C17126) * C49168 +
              (C17127 - C17128 + C17129 - C17130) * C49955) *
                 C50253 +
             ((C22331 - C22332 + C22333 - C22334) * C49175 +
              (C22335 - C22336 + C22337 - C22338) * C50224 + C28127 * C49168 +
              C28128 * C49955) *
                 C50174) *
                C50240 +
            (((C22332 - C22331 + C22334 - C22333) * C49175 +
              (C22336 - C22335 + C22338 - C22337) * C50224 + C28129 * C49168 +
              C28130 * C49955) *
                 C50253 +
             ((C22340 - C22339 + C22342 - C22341) * C49175 +
              (C22344 - C22343 + C22346 - C22345) * C50224 +
              (C22347 - C22348 + C22349 - C22350) * C49168 +
              (C22351 - C22352 + C22353 - C22354) * C49955) *
                 C50174) *
                C50077) *
               C50049) *
              C50231 +
          (((((C16934 - C16933 + C16936 - C16935) * C49175 +
              (C16938 - C16937 + C16940 - C16939) * C50224 +
              (C16942 - C16941 + C16944 - C16943) * C49168 +
              (C16946 - C16945 + C16948 - C16947) * C49955) *
                 C50253 +
             (C27463 * C49175 + C27464 * C50224 + C17651 * C49168 +
              C17652 * C49955) *
                 C50174) *
                C50240 +
            ((C27461 * C49175 + C27462 * C50224 + C27859 * C49168 +
              C27860 * C49955) *
                 C50253 +
             (C27465 * C49175 + C27466 * C50224 +
              (C17325 - C17326 + C17327 - C17328) * C49168 +
              (C17329 - C17330 + C17331 - C17332) * C49955) *
                 C50174) *
                C50077) *
               C997 +
           ((((C17124 - C17123 + C17126 - C17125) * C49175 +
              (C17128 - C17127 + C17130 - C17129) * C50224 +
              (C17132 - C17131 + C17134 - C17133) * C49168 +
              (C17136 - C17135 + C17138 - C17137) * C49955) *
                 C50253 +
             (C28129 * C49175 + C28130 * C50224 +
              (C17855 - C17856 + C17857 - C17858) * C49168 +
              (C17859 - C17860 + C17861 - C17862) * C49955) *
                 C50174) *
                C50240 +
            ((C28127 * C49175 + C28128 * C50224 +
              (C17856 - C17855 + C17858 - C17857) * C49168 +
              (C17860 - C17859 + C17862 - C17861) * C49955) *
                 C50253 +
             ((C22348 - C22347 + C22350 - C22349) * C49175 +
              (C22352 - C22351 + C22354 - C22353) * C50224 +
              (C16927 * C1189 - C16922 * C1195 + C16928 * C2637 -
               C50146 * C2642) *
                  C49168 +
              (C16927 * C1196 - C16922 * C1201 + C16928 * C2643 -
               C50146 * C2646) *
                  C49955) *
                 C50174) *
                C50077) *
               C50049) *
              C49984)) /
        (p * q * std::sqrt(p + q));
    d2ee[129] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                 C49175 +
             (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                 C50224 +
             (C16933 - C16934 + C16935 - C16936) * C49168 +
             (C16937 - C16938 + C16939 - C16940) * C49955) *
                C50253 +
            ((C21795 - C21796 + C21797 - C21798) * C49175 +
             (C21799 - C21800 + C21801 - C21802) * C50224 + C27461 * C49168 +
             C27462 * C49955) *
                C50174) *
               C50013 * C997 +
           (((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                 C49175 +
             (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                 C50224 +
             (C17123 - C17124 + C17125 - C17126) * C49168 +
             (C17127 - C17128 + C17129 - C17130) * C49955) *
                C50253 +
            ((C22331 - C22332 + C22333 - C22334) * C49175 +
             (C22335 - C22336 + C22337 - C22338) * C50224 + C28127 * C49168 +
             C28128 * C49955) *
                C50174) *
               C50013 * C50049) *
              C999 +
          ((((C16934 - C16933 + C16936 - C16935) * C49175 +
             (C16938 - C16937 + C16940 - C16939) * C50224 +
             (C16942 - C16941 + C16944 - C16943) * C49168 +
             (C16946 - C16945 + C16948 - C16947) * C49955) *
                C50253 +
            (C27463 * C49175 + C27464 * C50224 + C17651 * C49168 +
             C17652 * C49955) *
                C50174) *
               C50013 * C997 +
           (((C17124 - C17123 + C17126 - C17125) * C49175 +
             (C17128 - C17127 + C17130 - C17129) * C50224 +
             (C17132 - C17131 + C17134 - C17133) * C49168 +
             (C17136 - C17135 + C17138 - C17137) * C49955) *
                C50253 +
            (C28129 * C49175 + C28130 * C50224 +
             (C17855 - C17856 + C17857 - C17858) * C49168 +
             (C17859 - C17860 + C17861 - C17862) * C49955) *
                C50174) *
               C50013 * C50049) *
              C1000 +
          (((C16973 * C49175 + C16974 * C50224 +
             (C16950 - C16949 + C16952 - C16951) * C49168 +
             (C16954 - C16953 + C16956 - C16955) * C49955) *
                C50253 +
            (C27859 * C49175 + C27860 * C50224 +
             (C17643 - C17644 + C17645 - C17646) * C49168 +
             (C17647 - C17648 + C17649 - C17650) * C49955) *
                C50174) *
               C50013 * C997 +
           ((C17491 * C49175 + C17492 * C50224 +
             (C17484 - C17483 + C17486 - C17485) * C49168 +
             (C17488 - C17487 + C17490 - C17489) * C49955) *
                C50253 +
            ((C17856 - C17855 + C17858 - C17857) * C49175 +
             (C17860 - C17859 + C17862 - C17861) * C50224 +
             (C16927 * C870 - C16922 * C878 + C16928 * C1537 - C50146 * C1544) *
                 C49168 +
             (C16927 * C879 - C16922 * C885 + C16928 * C1545 - C50146 * C1549) *
                 C49955) *
                C50174) *
               C50013 * C50049) *
              C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                C49175 +
            (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                C50224 +
            (C16933 - C16934 + C16935 - C16936) * C49168 +
            (C16937 - C16938 + C16939 - C16940) * C49955) *
               C50253 +
           ((C21795 - C21796 + C21797 - C21798) * C49175 +
            (C21799 - C21800 + C21801 - C21802) * C50224 + C27461 * C49168 +
            C27462 * C49955) *
               C50174) *
              C50013 * C1068 +
          (((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                C49175 +
            (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                C50224 +
            (C17123 - C17124 + C17125 - C17126) * C49168 +
            (C17127 - C17128 + C17129 - C17130) * C49955) *
               C50253 +
           ((C22331 - C22332 + C22333 - C22334) * C49175 +
            (C22335 - C22336 + C22337 - C22338) * C50224 + C28127 * C49168 +
            C28128 * C49955) *
               C50174) *
              C50013 * C1069 +
          (((C16922 * C299 - C16927 * C285 + C50146 * C1077 - C16928 * C1073) *
                C49175 +
            (C16922 * C315 - C16927 * C300 + C50146 * C1085 - C16928 * C1078) *
                C50224 +
            (C17139 - C17140 + C17141 - C17142) * C49168 +
            (C17143 - C17144 + C17145 - C17146) * C49955) *
               C50253 +
           ((C23252 - C23253 + C23254 - C23255) * C49175 +
            (C23256 - C23257 + C23258 - C23259) * C50224 +
            (C27247 - C27248 + C27249 - C27250) * C49168 +
            (C27251 - C27252 + C27253 - C27254) * C49955) *
               C50174) *
              C50013 * C1070 +
          (((C16927 * C1073 - C16922 * C1077 + C16928 * C2453 -
             C50146 * C2456) *
                C49175 +
            (C16927 * C1078 - C16922 * C1085 + C16928 * C2457 -
             C50146 * C2462) *
                C50224 +
            (C16927 * C1074 - C16922 * C1079 + C16928 * C2454 -
             C50146 * C2458) *
                C49168 +
            (C16927 * C1080 - C16922 * C1086 + C16928 * C2459 -
             C50146 * C2463) *
                C49955) *
               C50253 +
           ((C16927 * C3181 - C16922 * C3184 + C16928 * C4097 -
             C50146 * C4099) *
                C49175 +
            (C16927 * C3185 - C16922 * C3190 + C16928 * C4100 -
             C50146 * C4103) *
                C50224 +
            (C16927 * C3182 - C16922 * C3186 + C16928 * C4098 -
             C50146 * C4101) *
                C49168 +
            (C16927 * C3187 - C16922 * C3191 + C16928 * C4102 -
             C50146 * C4104) *
                C49955) *
               C50174) *
              C50013 * C1071) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                  C49175 +
              (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                  C50224 +
              (C16933 - C16934 + C16935 - C16936) * C49168 +
              (C16937 - C16938 + C16939 - C16940) * C49955) *
                 C50253 +
             ((C21795 - C21796 + C21797 - C21798) * C49175 +
              (C21799 - C21800 + C21801 - C21802) * C50224 + C27461 * C49168 +
              C27462 * C49955) *
                 C50174) *
                C1648 +
            (((C21796 - C21795 + C21798 - C21797) * C49175 +
              (C21800 - C21799 + C21802 - C21801) * C50224 + C27463 * C49168 +
              C27464 * C49955) *
                 C50253 +
             ((C21804 - C21803 + C21806 - C21805) * C49175 +
              (C21808 - C21807 + C21810 - C21809) * C50224 + C21835 * C49168 +
              C21836 * C49955) *
                 C50174) *
                C50077) *
               C50239 +
           ((((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                  C49175 +
              (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                  C50224 +
              (C17123 - C17124 + C17125 - C17126) * C49168 +
              (C17127 - C17128 + C17129 - C17130) * C49955) *
                 C50253 +
             ((C22331 - C22332 + C22333 - C22334) * C49175 +
              (C22335 - C22336 + C22337 - C22338) * C50224 + C28127 * C49168 +
              C28128 * C49955) *
                 C50174) *
                C1648 +
            (((C22332 - C22331 + C22334 - C22333) * C49175 +
              (C22336 - C22335 + C22338 - C22337) * C50224 + C28129 * C49168 +
              C28130 * C49955) *
                 C50253 +
             ((C22340 - C22339 + C22342 - C22341) * C49175 +
              (C22344 - C22343 + C22346 - C22345) * C50224 +
              (C22347 - C22348 + C22349 - C22350) * C49168 +
              (C22351 - C22352 + C22353 - C22354) * C49955) *
                 C50174) *
                C50077) *
               C50049) *
              C50231 +
          (((((C16934 - C16933 + C16936 - C16935) * C49175 +
              (C16938 - C16937 + C16940 - C16939) * C50224 +
              (C16942 - C16941 + C16944 - C16943) * C49168 +
              (C16946 - C16945 + C16948 - C16947) * C49955) *
                 C50253 +
             (C27463 * C49175 + C27464 * C50224 + C17651 * C49168 +
              C17652 * C49955) *
                 C50174) *
                C1648 +
            ((C27461 * C49175 + C27462 * C50224 + C27859 * C49168 +
              C27860 * C49955) *
                 C50253 +
             (C27465 * C49175 + C27466 * C50224 +
              (C17325 - C17326 + C17327 - C17328) * C49168 +
              (C17329 - C17330 + C17331 - C17332) * C49955) *
                 C50174) *
                C50077) *
               C50239 +
           ((((C17124 - C17123 + C17126 - C17125) * C49175 +
              (C17128 - C17127 + C17130 - C17129) * C50224 +
              (C17132 - C17131 + C17134 - C17133) * C49168 +
              (C17136 - C17135 + C17138 - C17137) * C49955) *
                 C50253 +
             (C28129 * C49175 + C28130 * C50224 +
              (C17855 - C17856 + C17857 - C17858) * C49168 +
              (C17859 - C17860 + C17861 - C17862) * C49955) *
                 C50174) *
                C1648 +
            ((C28127 * C49175 + C28128 * C50224 +
              (C17856 - C17855 + C17858 - C17857) * C49168 +
              (C17860 - C17859 + C17862 - C17861) * C49955) *
                 C50253 +
             ((C22348 - C22347 + C22350 - C22349) * C49175 +
              (C22352 - C22351 + C22354 - C22353) * C50224 +
              (C16927 * C1189 - C16922 * C1195 + C16928 * C2637 -
               C50146 * C2642) *
                  C49168 +
              (C16927 * C1196 - C16922 * C1201 + C16928 * C2643 -
               C50146 * C2646) *
                  C49955) *
                 C50174) *
                C50077) *
               C50049) *
              C49984)) /
        (p * q * std::sqrt(p + q));
    d2ee[131] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                 C49175 +
             (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                 C50224 +
             (C16933 - C16934 + C16935 - C16936) * C49168 +
             (C16937 - C16938 + C16939 - C16940) * C49955) *
                C50253 +
            ((C21795 - C21796 + C21797 - C21798) * C49175 +
             (C21799 - C21800 + C21801 - C21802) * C50224 + C27461 * C49168 +
             C27462 * C49955) *
                C50174) *
               C50286 +
           (((C21796 - C21795 + C21798 - C21797) * C49175 +
             (C21800 - C21799 + C21802 - C21801) * C50224 + C27463 * C49168 +
             C27464 * C49955) *
                C50253 +
            ((C21804 - C21803 + C21806 - C21805) * C49175 +
             (C21808 - C21807 + C21810 - C21809) * C50224 + C21835 * C49168 +
             C21836 * C49955) *
                C50174) *
               C50287 +
           ((C21837 * C49175 + C21838 * C50224 + C27465 * C49168 +
             C27466 * C49955) *
                C50253 +
            ((C21812 - C21811 + C21814 - C21813) * C49175 +
             (C21816 - C21815 + C21818 - C21817) * C50224 +
             (C21823 - C21824 + C21825 - C21826) * C49168 +
             (C21827 - C21828 + C21829 - C21830) * C49955) *
                C50174) *
               C2064) *
              C50239 +
          ((((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                 C49175 +
             (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                 C50224 +
             (C17123 - C17124 + C17125 - C17126) * C49168 +
             (C17127 - C17128 + C17129 - C17130) * C49955) *
                C50253 +
            ((C22331 - C22332 + C22333 - C22334) * C49175 +
             (C22335 - C22336 + C22337 - C22338) * C50224 + C28127 * C49168 +
             C28128 * C49955) *
                C50174) *
               C50286 +
           (((C22332 - C22331 + C22334 - C22333) * C49175 +
             (C22336 - C22335 + C22338 - C22337) * C50224 + C28129 * C49168 +
             C28130 * C49955) *
                C50253 +
            ((C22340 - C22339 + C22342 - C22341) * C49175 +
             (C22344 - C22343 + C22346 - C22345) * C50224 +
             (C22347 - C22348 + C22349 - C22350) * C49168 +
             (C22351 - C22352 + C22353 - C22354) * C49955) *
                C50174) *
               C50287 +
           ((C22761 * C49175 + C22762 * C50224 +
             (C22348 - C22347 + C22350 - C22349) * C49168 +
             (C22352 - C22351 + C22354 - C22353) * C49955) *
                C50253 +
            ((C22754 - C22753 + C22756 - C22755) * C49175 +
             (C22758 - C22757 + C22760 - C22759) * C50224 +
             (C16927 * C4497 - C16922 * C4503 + C16928 * C4498 -
              C50146 * C4504) *
                 C49168 +
             (C16927 * C4505 - C16922 * C4509 + C16928 * C4506 -
              C50146 * C4510) *
                 C49955) *
                C50174) *
               C2064) *
              C50049) *
         C49978) /
        (p * q * std::sqrt(p + q));
    d2ee[132] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                 C49175 +
             (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                 C50224 +
             (C16933 - C16934 + C16935 - C16936) * C49168 +
             (C16937 - C16938 + C16939 - C16940) * C49955) *
                C50253 +
            ((C21795 - C21796 + C21797 - C21798) * C49175 +
             (C21799 - C21800 + C21801 - C21802) * C50224 + C27461 * C49168 +
             C27462 * C49955) *
                C50174) *
               C1648 +
           (((C21796 - C21795 + C21798 - C21797) * C49175 +
             (C21800 - C21799 + C21802 - C21801) * C50224 + C27463 * C49168 +
             C27464 * C49955) *
                C50253 +
            ((C21804 - C21803 + C21806 - C21805) * C49175 +
             (C21808 - C21807 + C21810 - C21809) * C50224 + C21835 * C49168 +
             C21836 * C49955) *
                C50174) *
               C50077) *
              C276 +
          ((((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                 C49175 +
             (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                 C50224 +
             (C17123 - C17124 + C17125 - C17126) * C49168 +
             (C17127 - C17128 + C17129 - C17130) * C49955) *
                C50253 +
            ((C22331 - C22332 + C22333 - C22334) * C49175 +
             (C22335 - C22336 + C22337 - C22338) * C50224 + C28127 * C49168 +
             C28128 * C49955) *
                C50174) *
               C1648 +
           (((C22332 - C22331 + C22334 - C22333) * C49175 +
             (C22336 - C22335 + C22338 - C22337) * C50224 + C28129 * C49168 +
             C28130 * C49955) *
                C50253 +
            ((C22340 - C22339 + C22342 - C22341) * C49175 +
             (C22344 - C22343 + C22346 - C22345) * C50224 +
             (C22347 - C22348 + C22349 - C22350) * C49168 +
             (C22351 - C22352 + C22353 - C22354) * C49955) *
                C50174) *
               C50077) *
              C277 +
          ((((C16922 * C299 - C16927 * C285 + C50146 * C1077 - C16928 * C1073) *
                 C49175 +
             (C16922 * C315 - C16927 * C300 + C50146 * C1085 - C16928 * C1078) *
                 C50224 +
             (C17139 - C17140 + C17141 - C17142) * C49168 +
             (C17143 - C17144 + C17145 - C17146) * C49955) *
                C50253 +
            ((C23252 - C23253 + C23254 - C23255) * C49175 +
             (C23256 - C23257 + C23258 - C23259) * C50224 +
             (C27247 - C27248 + C27249 - C27250) * C49168 +
             (C27251 - C27252 + C27253 - C27254) * C49955) *
                C50174) *
               C1648 +
           (((C23253 - C23252 + C23255 - C23254) * C49175 +
             (C23257 - C23256 + C23259 - C23258) * C50224 +
             (C27248 - C27247 + C27250 - C27249) * C49168 +
             (C27252 - C27251 + C27254 - C27253) * C49955) *
                C50253 +
            ((C23261 - C23260 + C23263 - C23262) * C49175 +
             (C23265 - C23264 + C23267 - C23266) * C50224 +
             (C16927 * C2636 - C16922 * C2640 + C16928 * C3604 -
              C50146 * C3607) *
                 C49168 +
             (C16927 * C2641 - C16922 * C2645 + C16928 * C3608 -
              C50146 * C3610) *
                 C49955) *
                C50174) *
               C50077) *
              C278) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                 C49175 +
             (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                 C50224 +
             (C16933 - C16934 + C16935 - C16936) * C49168 +
             (C16937 - C16938 + C16939 - C16940) * C49955) *
                C50253 +
            ((C21795 - C21796 + C21797 - C21798) * C49175 +
             (C21799 - C21800 + C21801 - C21802) * C50224 + C27461 * C49168 +
             C27462 * C49955) *
                C50174) *
               C1648 +
           (((C21796 - C21795 + C21798 - C21797) * C49175 +
             (C21800 - C21799 + C21802 - C21801) * C50224 + C27463 * C49168 +
             C27464 * C49955) *
                C50253 +
            ((C21804 - C21803 + C21806 - C21805) * C49175 +
             (C21808 - C21807 + C21810 - C21809) * C50224 + C21835 * C49168 +
             C21836 * C49955) *
                C50174) *
               C50077) *
              C49997 * C999 +
          ((((C16934 - C16933 + C16936 - C16935) * C49175 +
             (C16938 - C16937 + C16940 - C16939) * C50224 +
             (C16942 - C16941 + C16944 - C16943) * C49168 +
             (C16946 - C16945 + C16948 - C16947) * C49955) *
                C50253 +
            (C27463 * C49175 + C27464 * C50224 + C17651 * C49168 +
             C17652 * C49955) *
                C50174) *
               C1648 +
           ((C27461 * C49175 + C27462 * C50224 + C27859 * C49168 +
             C27860 * C49955) *
                C50253 +
            (C27465 * C49175 + C27466 * C50224 +
             (C17325 - C17326 + C17327 - C17328) * C49168 +
             (C17329 - C17330 + C17331 - C17332) * C49955) *
                C50174) *
               C50077) *
              C49997 * C1000 +
          (((C16973 * C49175 + C16974 * C50224 +
             (C16950 - C16949 + C16952 - C16951) * C49168 +
             (C16954 - C16953 + C16956 - C16955) * C49955) *
                C50253 +
            (C27859 * C49175 + C27860 * C50224 +
             (C17643 - C17644 + C17645 - C17646) * C49168 +
             (C17647 - C17648 + C17649 - C17650) * C49955) *
                C50174) *
               C1648 +
           ((C17651 * C49175 + C17652 * C50224 +
             (C17644 - C17643 + C17646 - C17645) * C49168 +
             (C17648 - C17647 + C17650 - C17649) * C49955) *
                C50253 +
            ((C17326 - C17325 + C17328 - C17327) * C49175 +
             (C17330 - C17329 + C17332 - C17331) * C50224 +
             (C16927 * C453 - C16922 * C470 + C16928 * C1190 - C50146 * C1197) *
                 C49168 +
             (C16927 * C471 - C16922 * C483 + C16928 * C1198 - C50146 * C1202) *
                 C49955) *
                C50174) *
               C50077) *
              C49997 * C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                C49175 +
            (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                C50224 +
            (C16933 - C16934 + C16935 - C16936) * C49168 +
            (C16937 - C16938 + C16939 - C16940) * C49955) *
               C50253 +
           ((C21795 - C21796 + C21797 - C21798) * C49175 +
            (C21799 - C21800 + C21801 - C21802) * C50224 + C27461 * C49168 +
            C27462 * C49955) *
               C50174) *
              C1814 +
          (((C21796 - C21795 + C21798 - C21797) * C49175 +
            (C21800 - C21799 + C21802 - C21801) * C50224 + C27463 * C49168 +
            C27464 * C49955) *
               C50253 +
           ((C21804 - C21803 + C21806 - C21805) * C49175 +
            (C21808 - C21807 + C21810 - C21809) * C50224 + C21835 * C49168 +
            C21836 * C49955) *
               C50174) *
              C1815 +
          ((C21837 * C49175 + C21838 * C50224 + C27465 * C49168 +
            C27466 * C49955) *
               C50253 +
           ((C21812 - C21811 + C21814 - C21813) * C49175 +
            (C21816 - C21815 + C21818 - C21817) * C50224 +
            (C21823 - C21824 + C21825 - C21826) * C49168 +
            (C21827 - C21828 + C21829 - C21830) * C49955) *
               C50174) *
              C1816 +
          ((C23674 * C49175 + C23675 * C50224 +
            (C21824 - C21823 + C21826 - C21825) * C49168 +
            (C21828 - C21827 + C21830 - C21829) * C49955) *
               C50253 +
           ((C23667 - C23666 + C23669 - C23668) * C49175 +
            (C23671 - C23670 + C23673 - C23672) * C50224 +
            (C16927 * C5403 - C16922 * C5407 + C16928 * C6377 -
             C50146 * C6380) *
                C49168 +
            (C16927 * C5408 - C16922 * C5412 + C16928 * C6381 -
             C50146 * C6383) *
                C49955) *
               C50174) *
              C1817) *
         C49997 * C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[133] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                 C49175 +
             (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                 C50224 +
             (C16933 - C16934 + C16935 - C16936) * C49168 +
             (C16937 - C16938 + C16939 - C16940) * C49955) *
                C50253 +
            ((C21795 - C21796 + C21797 - C21798) * C49175 +
             (C21799 - C21800 + C21801 - C21802) * C50224 + C27461 * C49168 +
             C27462 * C49955) *
                C50174) *
               C50286 +
           (((C21796 - C21795 + C21798 - C21797) * C49175 +
             (C21800 - C21799 + C21802 - C21801) * C50224 + C27463 * C49168 +
             C27464 * C49955) *
                C50253 +
            ((C21804 - C21803 + C21806 - C21805) * C49175 +
             (C21808 - C21807 + C21810 - C21809) * C50224 + C21835 * C49168 +
             C21836 * C49955) *
                C50174) *
               C50287 +
           ((C21837 * C49175 + C21838 * C50224 + C27465 * C49168 +
             C27466 * C49955) *
                C50253 +
            ((C21812 - C21811 + C21814 - C21813) * C49175 +
             (C21816 - C21815 + C21818 - C21817) * C50224 +
             (C21823 - C21824 + C21825 - C21826) * C49168 +
             (C21827 - C21828 + C21829 - C21830) * C49955) *
                C50174) *
               C2064) *
              C49997 * C50231 +
          ((((C16934 - C16933 + C16936 - C16935) * C49175 +
             (C16938 - C16937 + C16940 - C16939) * C50224 +
             (C16942 - C16941 + C16944 - C16943) * C49168 +
             (C16946 - C16945 + C16948 - C16947) * C49955) *
                C50253 +
            (C27463 * C49175 + C27464 * C50224 + C17651 * C49168 +
             C17652 * C49955) *
                C50174) *
               C50286 +
           ((C27461 * C49175 + C27462 * C50224 + C27859 * C49168 +
             C27860 * C49955) *
                C50253 +
            (C27465 * C49175 + C27466 * C50224 +
             (C17325 - C17326 + C17327 - C17328) * C49168 +
             (C17329 - C17330 + C17331 - C17332) * C49955) *
                C50174) *
               C50287 +
           ((C21835 * C49175 + C21836 * C50224 +
             (C17326 - C17325 + C17328 - C17327) * C49168 +
             (C17330 - C17329 + C17332 - C17331) * C49955) *
                C50253 +
            ((C21824 - C21823 + C21826 - C21825) * C49175 +
             (C21828 - C21827 + C21830 - C21829) * C50224 +
             (C16927 * C1820 - C16922 * C1826 + C16928 * C5962 -
              C50146 * C5963) *
                 C49168 +
             (C16927 * C1827 - C16922 * C1832 + C16928 * C5964 -
              C50146 * C5965) *
                 C49955) *
                C50174) *
               C2064) *
              C49997 * C49984)) /
        (p * q * std::sqrt(p + q));
    d2ee[134] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                 C49175 +
             (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                 C50224 +
             (C16933 - C16934 + C16935 - C16936) * C49168 +
             (C16937 - C16938 + C16939 - C16940) * C49955) *
                C50253 +
            ((C21795 - C21796 + C21797 - C21798) * C49175 +
             (C21799 - C21800 + C21801 - C21802) * C50224 + C27461 * C49168 +
             C27462 * C49955) *
                C50174) *
               C1648 +
           (((C21796 - C21795 + C21798 - C21797) * C49175 +
             (C21800 - C21799 + C21802 - C21801) * C50224 + C27463 * C49168 +
             C27464 * C49955) *
                C50253 +
            ((C21804 - C21803 + C21806 - C21805) * C49175 +
             (C21808 - C21807 + C21810 - C21809) * C50224 + C21835 * C49168 +
             C21836 * C49955) *
                C50174) *
               C50077) *
              C49997 * C999 +
          ((((C16934 - C16933 + C16936 - C16935) * C49175 +
             (C16938 - C16937 + C16940 - C16939) * C50224 +
             (C16942 - C16941 + C16944 - C16943) * C49168 +
             (C16946 - C16945 + C16948 - C16947) * C49955) *
                C50253 +
            (C27463 * C49175 + C27464 * C50224 + C17651 * C49168 +
             C17652 * C49955) *
                C50174) *
               C1648 +
           ((C27461 * C49175 + C27462 * C50224 + C27859 * C49168 +
             C27860 * C49955) *
                C50253 +
            (C27465 * C49175 + C27466 * C50224 +
             (C17325 - C17326 + C17327 - C17328) * C49168 +
             (C17329 - C17330 + C17331 - C17332) * C49955) *
                C50174) *
               C50077) *
              C49997 * C1000 +
          (((C16973 * C49175 + C16974 * C50224 +
             (C16950 - C16949 + C16952 - C16951) * C49168 +
             (C16954 - C16953 + C16956 - C16955) * C49955) *
                C50253 +
            (C27859 * C49175 + C27860 * C50224 +
             (C17643 - C17644 + C17645 - C17646) * C49168 +
             (C17647 - C17648 + C17649 - C17650) * C49955) *
                C50174) *
               C1648 +
           ((C17651 * C49175 + C17652 * C50224 +
             (C17644 - C17643 + C17646 - C17645) * C49168 +
             (C17648 - C17647 + C17650 - C17649) * C49955) *
                C50253 +
            ((C17326 - C17325 + C17328 - C17327) * C49175 +
             (C17330 - C17329 + C17332 - C17331) * C50224 +
             (C16927 * C453 - C16922 * C470 + C16928 * C1190 - C50146 * C1197) *
                 C49168 +
             (C16927 * C471 - C16922 * C483 + C16928 * C1198 - C50146 * C1202) *
                 C49955) *
                C50174) *
               C50077) *
              C49997 * C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                 C49175 +
             (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                 C50224 +
             (C16933 - C16934 + C16935 - C16936) * C49168 +
             (C16937 - C16938 + C16939 - C16940) * C49955) *
                C50253 +
            ((C21795 - C21796 + C21797 - C21798) * C49175 +
             (C21799 - C21800 + C21801 - C21802) * C50224 + C27461 * C49168 +
             C27462 * C49955) *
                C50174) *
               C1648 +
           (((C21796 - C21795 + C21798 - C21797) * C49175 +
             (C21800 - C21799 + C21802 - C21801) * C50224 + C27463 * C49168 +
             C27464 * C49955) *
                C50253 +
            ((C21804 - C21803 + C21806 - C21805) * C49175 +
             (C21808 - C21807 + C21810 - C21809) * C50224 + C21835 * C49168 +
             C21836 * C49955) *
                C50174) *
               C50077) *
              C276 +
          ((((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                 C49175 +
             (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                 C50224 +
             (C17123 - C17124 + C17125 - C17126) * C49168 +
             (C17127 - C17128 + C17129 - C17130) * C49955) *
                C50253 +
            ((C22331 - C22332 + C22333 - C22334) * C49175 +
             (C22335 - C22336 + C22337 - C22338) * C50224 + C28127 * C49168 +
             C28128 * C49955) *
                C50174) *
               C1648 +
           (((C22332 - C22331 + C22334 - C22333) * C49175 +
             (C22336 - C22335 + C22338 - C22337) * C50224 + C28129 * C49168 +
             C28130 * C49955) *
                C50253 +
            ((C22340 - C22339 + C22342 - C22341) * C49175 +
             (C22344 - C22343 + C22346 - C22345) * C50224 +
             (C22347 - C22348 + C22349 - C22350) * C49168 +
             (C22351 - C22352 + C22353 - C22354) * C49955) *
                C50174) *
               C50077) *
              C277 +
          ((((C16922 * C299 - C16927 * C285 + C50146 * C1077 - C16928 * C1073) *
                 C49175 +
             (C16922 * C315 - C16927 * C300 + C50146 * C1085 - C16928 * C1078) *
                 C50224 +
             (C17139 - C17140 + C17141 - C17142) * C49168 +
             (C17143 - C17144 + C17145 - C17146) * C49955) *
                C50253 +
            ((C23252 - C23253 + C23254 - C23255) * C49175 +
             (C23256 - C23257 + C23258 - C23259) * C50224 +
             (C27247 - C27248 + C27249 - C27250) * C49168 +
             (C27251 - C27252 + C27253 - C27254) * C49955) *
                C50174) *
               C1648 +
           (((C23253 - C23252 + C23255 - C23254) * C49175 +
             (C23257 - C23256 + C23259 - C23258) * C50224 +
             (C27248 - C27247 + C27250 - C27249) * C49168 +
             (C27252 - C27251 + C27254 - C27253) * C49955) *
                C50253 +
            ((C23261 - C23260 + C23263 - C23262) * C49175 +
             (C23265 - C23264 + C23267 - C23266) * C50224 +
             (C16927 * C2636 - C16922 * C2640 + C16928 * C3604 -
              C50146 * C3607) *
                 C49168 +
             (C16927 * C2641 - C16922 * C2645 + C16928 * C3608 -
              C50146 * C3610) *
                 C49955) *
                C50174) *
               C50077) *
              C278) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[135] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                C16929 +
            (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                C16924 +
            (C16933 - C16934 + C16935 - C16936) * C16930 +
            (C16937 - C16938 + C16939 - C16940) * C16925 + C16973 * C16931 +
            C16974 * C16926) *
               C50110 * C50013 * C50239 +
           ((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                C16929 +
            (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                C16924 +
            (C17123 - C17124 + C17125 - C17126) * C16930 +
            (C17127 - C17128 + C17129 - C17130) * C16925 + C17491 * C16931 +
            C17492 * C16926) *
               C50110 * C50013 * C50049) *
              C50282 +
          (((C16934 - C16933 + C16936 - C16935) * C16929 +
            (C16938 - C16937 + C16940 - C16939) * C16924 +
            (C16942 - C16941 + C16944 - C16943) * C16930 +
            (C16946 - C16945 + C16948 - C16947) * C16925 + C16975 * C16931 +
            C16976 * C16926) *
               C50110 * C50013 * C50239 +
           ((C17124 - C17123 + C17126 - C17125) * C16929 +
            (C17128 - C17127 + C17130 - C17129) * C16924 +
            (C17132 - C17131 + C17134 - C17133) * C16930 +
            (C17136 - C17135 + C17138 - C17137) * C16925 +
            (C17483 - C17484 + C17485 - C17486) * C16931 +
            (C17487 - C17488 + C17489 - C17490) * C16926) *
               C50110 * C50013 * C50049) *
              C50283 +
          ((C16973 * C16929 + C16974 * C16924 +
            (C16950 - C16949 + C16952 - C16951) * C16930 +
            (C16954 - C16953 + C16956 - C16955) * C16925 +
            (C16957 - C16958 + C16959 - C16960) * C16931 +
            (C16961 - C16962 + C16963 - C16964) * C16926) *
               C50110 * C50013 * C50239 +
           (C17491 * C16929 + C17492 * C16924 +
            (C17484 - C17483 + C17486 - C17485) * C16930 +
            (C17488 - C17487 + C17490 - C17489) * C16925 +
            (C16927 * C289 - C16922 * C307 + C16928 * C290 - C50146 * C309) *
                C16931 +
            (C16927 * C308 - C16922 * C319 + C16928 * C310 - C50146 * C320) *
                C16926) *
               C50110 * C50013 * C50049) *
              C612)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19680 * C129 - C19685 * C122 + C19681 * C291 - C19686 * C281 +
             C19682 * C299 - C19687 * C285 + C19683 * C1077 - C19688 * C1073) *
                C19689 +
            (C19680 * C143 - C19685 * C130 + C19681 * C311 - C19686 * C292 +
             C19682 * C315 - C19687 * C300 + C19683 * C1085 - C19688 * C1078) *
                C49950) *
               C50110 * C50013 * C50239 +
           ((C19685 * C281 - C19680 * C291 + C19686 * C285 - C19681 * C299 +
             C19687 * C1073 - C19682 * C1077 + C19688 * C2453 -
             C19683 * C2456) *
                C19689 +
            (C19685 * C292 - C19680 * C311 + C19686 * C300 - C19681 * C315 +
             C19687 * C1078 - C19682 * C1085 + C19688 * C2457 -
             C19683 * C2462) *
                C49950) *
               C50110 * C50013 * C50049) *
              C50282 +
          (((C19685 * C123 - C19680 * C131 + C19686 * C282 - C19681 * C293 +
             C19687 * C286 - C19682 * C301 + C19688 * C1074 - C19683 * C1079) *
                C19689 +
            (C19685 * C132 - C19680 * C144 + C19686 * C294 - C19681 * C312 +
             C19687 * C302 - C19682 * C316 + C19688 * C1080 - C19683 * C1086) *
                C49950) *
               C50110 * C50013 * C50239 +
           ((C19680 * C293 - C19685 * C282 + C19681 * C301 - C19686 * C286 +
             C19682 * C1079 - C19687 * C1074 + C19683 * C2458 -
             C19688 * C2454) *
                C19689 +
            (C19680 * C312 - C19685 * C294 + C19681 * C316 - C19686 * C302 +
             C19682 * C1086 - C19687 * C1080 + C19683 * C2463 -
             C19688 * C2459) *
                C49950) *
               C50110 * C50013 * C50049) *
              C50283 +
          (((C19680 * C133 - C19685 * C124 + C19681 * C295 - C19686 * C283 +
             C19682 * C303 - C19687 * C287 + C19683 * C1081 - C19688 * C1075) *
                C19689 +
            (C19680 * C145 - C19685 * C134 + C19681 * C313 - C19686 * C296 +
             C19682 * C317 - C19687 * C304 + C19683 * C1087 - C19688 * C1082) *
                C49950) *
               C50110 * C50013 * C50239 +
           ((C19685 * C283 - C19680 * C295 + C19686 * C287 - C19681 * C303 +
             C19687 * C1075 - C19682 * C1081 + C19688 * C2455 -
             C19683 * C2460) *
                C19689 +
            (C19685 * C296 - C19680 * C313 + C19686 * C304 - C19681 * C317 +
             C19687 * C1082 - C19682 * C1087 + C19688 * C2461 -
             C19683 * C2464) *
                C49950) *
               C50110 * C50013 * C50049) *
              C612)) /
            (p * q * std::sqrt(p + q));
    d2ee[136] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                 C16929 +
             (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                 C16924 +
             (C16933 - C16934 + C16935 - C16936) * C16930 +
             (C16937 - C16938 + C16939 - C16940) * C16925 + C16973 * C16931 +
             C16974 * C16926) *
                C50110 * C50240 +
            ((C16927 * C446 - C16922 * C456 + C16928 * C867 - C50146 * C872) *
                 C16929 +
             (C16927 * C457 - C16922 * C476 + C16928 * C873 - C50146 * C882) *
                 C16924 +
             (C17301 - C17302 + C17303 - C17304) * C16930 +
             (C17305 - C17306 + C17307 - C17308) * C16925 + C17651 * C16931 +
             C17652 * C16926) *
                C50110 * C50077) *
               C50239 +
           (((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                 C16929 +
             (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                 C16924 +
             (C17123 - C17124 + C17125 - C17126) * C16930 +
             (C17127 - C17128 + C17129 - C17130) * C16925 + C17491 * C16931 +
             C17492 * C16926) *
                C50110 * C50240 +
            ((C16922 * C872 - C16927 * C867 + C50146 * C1538 - C16928 * C1534) *
                 C16929 +
             (C16922 * C882 - C16927 * C873 + C50146 * C1546 - C16928 * C1539) *
                 C16924 +
             (C17847 - C17848 + C17849 - C17850) * C16930 +
             (C17851 - C17852 + C17853 - C17854) * C16925 +
             (C17855 - C17856 + C17857 - C17858) * C16931 +
             (C17859 - C17860 + C17861 - C17862) * C16926) *
                C50110 * C50077) *
               C50049) *
              C279 +
          ((((C16934 - C16933 + C16936 - C16935) * C16929 +
             (C16938 - C16937 + C16940 - C16939) * C16924 +
             (C16942 - C16941 + C16944 - C16943) * C16930 +
             (C16946 - C16945 + C16948 - C16947) * C16925 + C16975 * C16931 +
             C16976 * C16926) *
                C50110 * C50240 +
            ((C17302 - C17301 + C17304 - C17303) * C16929 +
             (C17306 - C17305 + C17308 - C17307) * C16924 +
             (C17310 - C17309 + C17312 - C17311) * C16930 +
             (C17314 - C17313 + C17316 - C17315) * C16925 +
             (C17643 - C17644 + C17645 - C17646) * C16931 +
             (C17647 - C17648 + C17649 - C17650) * C16926) *
                C50110 * C50077) *
               C50239 +
           (((C17124 - C17123 + C17126 - C17125) * C16929 +
             (C17128 - C17127 + C17130 - C17129) * C16924 +
             (C17132 - C17131 + C17134 - C17133) * C16930 +
             (C17136 - C17135 + C17138 - C17137) * C16925 +
             (C17483 - C17484 + C17485 - C17486) * C16931 +
             (C17487 - C17488 + C17489 - C17490) * C16926) *
                C50110 * C50240 +
            ((C17848 - C17847 + C17850 - C17849) * C16929 +
             (C17852 - C17851 + C17854 - C17853) * C16924 +
             (C17856 - C17855 + C17858 - C17857) * C16930 +
             (C17860 - C17859 + C17862 - C17861) * C16925 +
             (C16927 * C870 - C16922 * C878 + C16928 * C1537 - C50146 * C1544) *
                 C16931 +
             (C16927 * C879 - C16922 * C885 + C16928 * C1545 - C50146 * C1549) *
                 C16926) *
                C50110 * C50077) *
               C50049) *
              C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19680 * C129 - C19685 * C122 + C19681 * C291 - C19686 * C281 +
              C19682 * C299 - C19687 * C285 + C19683 * C1077 - C19688 * C1073) *
                 C19689 +
             (C19680 * C143 - C19685 * C130 + C19681 * C311 - C19686 * C292 +
              C19682 * C315 - C19687 * C300 + C19683 * C1085 - C19688 * C1078) *
                 C49950) *
                C50110 * C50240 +
            ((C19685 * C446 - C19680 * C456 + C19686 * C867 - C19681 * C872 +
              C19687 * C1534 - C19682 * C1538 + C19688 * C3181 -
              C19683 * C3184) *
                 C19689 +
             (C19685 * C457 - C19680 * C476 + C19686 * C873 - C19681 * C882 +
              C19687 * C1539 - C19682 * C1546 + C19688 * C3185 -
              C19683 * C3190) *
                 C49950) *
                C50110 * C50077) *
               C50239 +
           (((C19685 * C281 - C19680 * C291 + C19686 * C285 - C19681 * C299 +
              C19687 * C1073 - C19682 * C1077 + C19688 * C2453 -
              C19683 * C2456) *
                 C19689 +
             (C19685 * C292 - C19680 * C311 + C19686 * C300 - C19681 * C315 +
              C19687 * C1078 - C19682 * C1085 + C19688 * C2457 -
              C19683 * C2462) *
                 C49950) *
                C50110 * C50240 +
            ((C19680 * C872 - C19685 * C867 + C19681 * C1538 - C19686 * C1534 +
              C19682 * C3184 - C19687 * C3181 + C19683 * C4099 -
              C19688 * C4097) *
                 C19689 +
             (C19680 * C882 - C19685 * C873 + C19681 * C1546 - C19686 * C1539 +
              C19682 * C3190 - C19687 * C3185 + C19683 * C4103 -
              C19688 * C4100) *
                 C49950) *
                C50110 * C50077) *
               C50049) *
              C279 +
          ((((C19685 * C123 - C19680 * C131 + C19686 * C282 - C19681 * C293 +
              C19687 * C286 - C19682 * C301 + C19688 * C1074 - C19683 * C1079) *
                 C19689 +
             (C19685 * C132 - C19680 * C144 + C19686 * C294 - C19681 * C312 +
              C19687 * C302 - C19682 * C316 + C19688 * C1080 - C19683 * C1086) *
                 C49950) *
                C50110 * C50240 +
            ((C19680 * C458 - C19685 * C447 + C19681 * C874 - C19686 * C868 +
              C19682 * C1540 - C19687 * C1535 + C19683 * C3186 -
              C19688 * C3182) *
                 C19689 +
             (C19680 * C477 - C19685 * C459 + C19681 * C883 - C19686 * C875 +
              C19682 * C1547 - C19687 * C1541 + C19683 * C3191 -
              C19688 * C3187) *
                 C49950) *
                C50110 * C50077) *
               C50239 +
           (((C19680 * C293 - C19685 * C282 + C19681 * C301 - C19686 * C286 +
              C19682 * C1079 - C19687 * C1074 + C19683 * C2458 -
              C19688 * C2454) *
                 C19689 +
             (C19680 * C312 - C19685 * C294 + C19681 * C316 - C19686 * C302 +
              C19682 * C1086 - C19687 * C1080 + C19683 * C2463 -
              C19688 * C2459) *
                 C49950) *
                C50110 * C50240 +
            ((C19685 * C868 - C19680 * C874 + C19686 * C1535 - C19681 * C1540 +
              C19687 * C3182 - C19682 * C3186 + C19688 * C4098 -
              C19683 * C4101) *
                 C19689 +
             (C19685 * C875 - C19680 * C883 + C19686 * C1541 - C19681 * C1547 +
              C19687 * C3187 - C19682 * C3191 + C19688 * C4102 -
              C19683 * C4104) *
                 C49950) *
                C50110 * C50077) *
               C50049) *
              C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[137] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                C16929 +
            (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                C16924 +
            (C16933 - C16934 + C16935 - C16936) * C16930 +
            (C16937 - C16938 + C16939 - C16940) * C16925 + C16973 * C16931 +
            C16974 * C16926) *
               C50110 * C50013 * C276 +
           ((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                C16929 +
            (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                C16924 +
            (C17123 - C17124 + C17125 - C17126) * C16930 +
            (C17127 - C17128 + C17129 - C17130) * C16925 +
            (C17131 - C17132 + C17133 - C17134) * C16931 +
            (C17135 - C17136 + C17137 - C17138) * C16926) *
               C50110 * C50013 * C277 +
           ((C16922 * C299 - C16927 * C285 + C50146 * C1077 - C16928 * C1073) *
                C16929 +
            (C16922 * C315 - C16927 * C300 + C50146 * C1085 - C16928 * C1078) *
                C16924 +
            (C17139 - C17140 + C17141 - C17142) * C16930 +
            (C17143 - C17144 + C17145 - C17146) * C16925 +
            (C17147 - C17148 + C17149 - C17150) * C16931 +
            (C17151 - C17152 + C17153 - C17154) * C16926) *
               C50110 * C50013 * C278) *
              C279 +
          (((C16934 - C16933 + C16936 - C16935) * C16929 +
            (C16938 - C16937 + C16940 - C16939) * C16924 +
            (C16942 - C16941 + C16944 - C16943) * C16930 +
            (C16946 - C16945 + C16948 - C16947) * C16925 + C16975 * C16931 +
            C16976 * C16926) *
               C50110 * C50013 * C276 +
           ((C17124 - C17123 + C17126 - C17125) * C16929 +
            (C17128 - C17127 + C17130 - C17129) * C16924 +
            (C17132 - C17131 + C17134 - C17133) * C16930 +
            (C17136 - C17135 + C17138 - C17137) * C16925 +
            (C16922 * C297 - C16927 * C284 + C50146 * C305 - C16928 * C288) *
                C16931 +
            (C16922 * C314 - C16927 * C298 + C50146 * C318 - C16928 * C306) *
                C16926) *
               C50110 * C50013 * C277 +
           ((C17140 - C17139 + C17142 - C17141) * C16929 +
            (C17144 - C17143 + C17146 - C17145) * C16924 +
            (C17148 - C17147 + C17150 - C17149) * C16930 +
            (C17152 - C17151 + C17154 - C17153) * C16925 +
            (C16927 * C288 - C16922 * C305 + C16928 * C1076 - C50146 * C1083) *
                C16931 +
            (C16927 * C306 - C16922 * C318 + C16928 * C1084 - C50146 * C1088) *
                C16926) *
               C50110 * C50013 * C278) *
              C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
               C16929 +
           (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
               C16924 +
           (C16933 - C16934 + C16935 - C16936) * C16930 +
           (C16937 - C16938 + C16939 - C16940) * C16925 + C16973 * C16931 +
           C16974 * C16926) *
              C50110 * C50013 * C49997 * C113 +
          ((C16934 - C16933 + C16936 - C16935) * C16929 +
           (C16938 - C16937 + C16940 - C16939) * C16924 +
           (C16942 - C16941 + C16944 - C16943) * C16930 +
           (C16946 - C16945 + C16948 - C16947) * C16925 + C16975 * C16931 +
           C16976 * C16926) *
              C50110 * C50013 * C49997 * C114 +
          (C16973 * C16929 + C16974 * C16924 +
           (C16950 - C16949 + C16952 - C16951) * C16930 +
           (C16954 - C16953 + C16956 - C16955) * C16925 +
           (C16957 - C16958 + C16959 - C16960) * C16931 +
           (C16961 - C16962 + C16963 - C16964) * C16926) *
              C50110 * C50013 * C49997 * C115 +
          (C16975 * C16929 + C16976 * C16924 +
           (C16958 - C16957 + C16960 - C16959) * C16930 +
           (C16962 - C16961 + C16964 - C16963) * C16925 +
           (C16927 * C127 - C16922 * C139 + C16928 * C613 - C50146 * C614) *
               C16931 +
           (C16927 * C140 - C16922 * C148 + C16928 * C615 - C50146 * C616) *
               C16926) *
              C50110 * C50013 * C49997 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                C16929 +
            (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                C16924 +
            (C16933 - C16934 + C16935 - C16936) * C16930 +
            (C16937 - C16938 + C16939 - C16940) * C16925 + C16973 * C16931 +
            C16974 * C16926) *
               C50110 * C443 +
           ((C16927 * C446 - C16922 * C456 + C16928 * C867 - C50146 * C872) *
                C16929 +
            (C16927 * C457 - C16922 * C476 + C16928 * C873 - C50146 * C882) *
                C16924 +
            (C17301 - C17302 + C17303 - C17304) * C16930 +
            (C17305 - C17306 + C17307 - C17308) * C16925 +
            (C17309 - C17310 + C17311 - C17312) * C16931 +
            (C17313 - C17314 + C17315 - C17316) * C16926) *
               C50110 * C444 +
           ((C16922 * C464 - C16927 * C450 + C50146 * C1191 - C16928 * C1187) *
                C16929 +
            (C16922 * C480 - C16927 * C465 + C50146 * C1199 - C16928 * C1192) *
                C16924 +
            (C17317 - C17318 + C17319 - C17320) * C16930 +
            (C17321 - C17322 + C17323 - C17324) * C16925 +
            (C17325 - C17326 + C17327 - C17328) * C16931 +
            (C17329 - C17330 + C17331 - C17332) * C16926) *
               C50110 * C445) *
              C49997 * C279 +
          (((C16934 - C16933 + C16936 - C16935) * C16929 +
            (C16938 - C16937 + C16940 - C16939) * C16924 +
            (C16942 - C16941 + C16944 - C16943) * C16930 +
            (C16946 - C16945 + C16948 - C16947) * C16925 + C16975 * C16931 +
            C16976 * C16926) *
               C50110 * C443 +
           ((C17302 - C17301 + C17304 - C17303) * C16929 +
            (C17306 - C17305 + C17308 - C17307) * C16924 +
            (C17310 - C17309 + C17312 - C17311) * C16930 +
            (C17314 - C17313 + C17316 - C17315) * C16925 +
            (C16922 * C462 - C16927 * C449 + C50146 * C878 - C16928 * C870) *
                C16931 +
            (C16922 * C479 - C16927 * C463 + C50146 * C885 - C16928 * C879) *
                C16926) *
               C50110 * C444 +
           ((C17318 - C17317 + C17320 - C17319) * C16929 +
            (C17322 - C17321 + C17324 - C17323) * C16924 +
            (C17326 - C17325 + C17328 - C17327) * C16930 +
            (C17330 - C17329 + C17332 - C17331) * C16925 +
            (C16927 * C453 - C16922 * C470 + C16928 * C1190 - C50146 * C1197) *
                C16931 +
            (C16927 * C471 - C16922 * C483 + C16928 * C1198 - C50146 * C1202) *
                C16926) *
               C50110 * C445) *
              C49997 * C49984)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C19680 * C129 - C19685 * C122 + C19681 * C291 - C19686 * C281 +
            C19682 * C299 - C19687 * C285 + C19683 * C1077 - C19688 * C1073) *
               C19689 +
           (C19680 * C143 - C19685 * C130 + C19681 * C311 - C19686 * C292 +
            C19682 * C315 - C19687 * C300 + C19683 * C1085 - C19688 * C1078) *
               C49950) *
              C50110 * C50013 * C49997 * C113 +
          ((C19685 * C123 - C19680 * C131 + C19686 * C282 - C19681 * C293 +
            C19687 * C286 - C19682 * C301 + C19688 * C1074 - C19683 * C1079) *
               C19689 +
           (C19685 * C132 - C19680 * C144 + C19686 * C294 - C19681 * C312 +
            C19687 * C302 - C19682 * C316 + C19688 * C1080 - C19683 * C1086) *
               C49950) *
              C50110 * C50013 * C49997 * C114 +
          ((C19680 * C133 - C19685 * C124 + C19681 * C295 - C19686 * C283 +
            C19682 * C303 - C19687 * C287 + C19683 * C1081 - C19688 * C1075) *
               C19689 +
           (C19680 * C145 - C19685 * C134 + C19681 * C313 - C19686 * C296 +
            C19682 * C317 - C19687 * C304 + C19683 * C1087 - C19688 * C1082) *
               C49950) *
              C50110 * C50013 * C49997 * C115 +
          ((C19685 * C125 - C19680 * C135 + C19686 * C284 - C19681 * C297 +
            C19687 * C288 - C19682 * C305 + C19688 * C1076 - C19683 * C1083) *
               C19689 +
           (C19685 * C136 - C19680 * C146 + C19686 * C298 - C19681 * C314 +
            C19687 * C306 - C19682 * C318 + C19688 * C1084 - C19683 * C1088) *
               C49950) *
              C50110 * C50013 * C49997 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19680 * C129 - C19685 * C122 + C19681 * C291 - C19686 * C281 +
             C19682 * C299 - C19687 * C285 + C19683 * C1077 - C19688 * C1073) *
                C19689 +
            (C19680 * C143 - C19685 * C130 + C19681 * C311 - C19686 * C292 +
             C19682 * C315 - C19687 * C300 + C19683 * C1085 - C19688 * C1078) *
                C49950) *
               C50110 * C50013 * C276 +
           ((C19685 * C281 - C19680 * C291 + C19686 * C285 - C19681 * C299 +
             C19687 * C1073 - C19682 * C1077 + C19688 * C2453 -
             C19683 * C2456) *
                C19689 +
            (C19685 * C292 - C19680 * C311 + C19686 * C300 - C19681 * C315 +
             C19687 * C1078 - C19682 * C1085 + C19688 * C2457 -
             C19683 * C2462) *
                C49950) *
               C50110 * C50013 * C277 +
           ((C19680 * C299 - C19685 * C285 + C19681 * C1077 - C19686 * C1073 +
             C19682 * C2456 - C19687 * C2453 + C19683 * C3451 -
             C19688 * C3449) *
                C19689 +
            (C19680 * C315 - C19685 * C300 + C19681 * C1085 - C19686 * C1078 +
             C19682 * C2462 - C19687 * C2457 + C19683 * C3455 -
             C19688 * C3452) *
                C49950) *
               C50110 * C50013 * C278) *
              C279 +
          (((C19685 * C123 - C19680 * C131 + C19686 * C282 - C19681 * C293 +
             C19687 * C286 - C19682 * C301 + C19688 * C1074 - C19683 * C1079) *
                C19689 +
            (C19685 * C132 - C19680 * C144 + C19686 * C294 - C19681 * C312 +
             C19687 * C302 - C19682 * C316 + C19688 * C1080 - C19683 * C1086) *
                C49950) *
               C50110 * C50013 * C276 +
           ((C19680 * C293 - C19685 * C282 + C19681 * C301 - C19686 * C286 +
             C19682 * C1079 - C19687 * C1074 + C19683 * C2458 -
             C19688 * C2454) *
                C19689 +
            (C19680 * C312 - C19685 * C294 + C19681 * C316 - C19686 * C302 +
             C19682 * C1086 - C19687 * C1080 + C19683 * C2463 -
             C19688 * C2459) *
                C49950) *
               C50110 * C50013 * C277 +
           ((C19685 * C286 - C19680 * C301 + C19686 * C1074 - C19681 * C1079 +
             C19687 * C2454 - C19682 * C2458 + C19688 * C3450 -
             C19683 * C3453) *
                C19689 +
            (C19685 * C302 - C19680 * C316 + C19686 * C1080 - C19681 * C1086 +
             C19687 * C2459 - C19682 * C2463 + C19688 * C3454 -
             C19683 * C3456) *
                C49950) *
               C50110 * C50013 * C278) *
              C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19680 * C129 - C19685 * C122 + C19681 * C291 - C19686 * C281 +
             C19682 * C299 - C19687 * C285 + C19683 * C1077 - C19688 * C1073) *
                C19689 +
            (C19680 * C143 - C19685 * C130 + C19681 * C311 - C19686 * C292 +
             C19682 * C315 - C19687 * C300 + C19683 * C1085 - C19688 * C1078) *
                C49950) *
               C50110 * C443 +
           ((C19685 * C446 - C19680 * C456 + C19686 * C867 - C19681 * C872 +
             C19687 * C1534 - C19682 * C1538 + C19688 * C3181 -
             C19683 * C3184) *
                C19689 +
            (C19685 * C457 - C19680 * C476 + C19686 * C873 - C19681 * C882 +
             C19687 * C1539 - C19682 * C1546 + C19688 * C3185 -
             C19683 * C3190) *
                C49950) *
               C50110 * C444 +
           ((C19680 * C464 - C19685 * C450 + C19681 * C1191 - C19686 * C1187 +
             C19682 * C2638 - C19687 * C2635 + C19683 * C3605 -
             C19688 * C3603) *
                C19689 +
            (C19680 * C480 - C19685 * C465 + C19681 * C1199 - C19686 * C1192 +
             C19682 * C2644 - C19687 * C2639 + C19683 * C3609 -
             C19688 * C3606) *
                C49950) *
               C50110 * C445) *
              C49997 * C279 +
          (((C19685 * C123 - C19680 * C131 + C19686 * C282 - C19681 * C293 +
             C19687 * C286 - C19682 * C301 + C19688 * C1074 - C19683 * C1079) *
                C19689 +
            (C19685 * C132 - C19680 * C144 + C19686 * C294 - C19681 * C312 +
             C19687 * C302 - C19682 * C316 + C19688 * C1080 - C19683 * C1086) *
                C49950) *
               C50110 * C443 +
           ((C19680 * C458 - C19685 * C447 + C19681 * C874 - C19686 * C868 +
             C19682 * C1540 - C19687 * C1535 + C19683 * C3186 -
             C19688 * C3182) *
                C19689 +
            (C19680 * C477 - C19685 * C459 + C19681 * C883 - C19686 * C875 +
             C19682 * C1547 - C19687 * C1541 + C19683 * C3191 -
             C19688 * C3187) *
                C49950) *
               C50110 * C444 +
           ((C19685 * C451 - C19680 * C466 + C19686 * C1188 - C19681 * C1193 +
             C19687 * C2636 - C19682 * C2640 + C19688 * C3604 -
             C19683 * C3607) *
                C19689 +
            (C19685 * C467 - C19680 * C481 + C19686 * C1194 - C19681 * C1200 +
             C19687 * C2641 - C19682 * C2645 + C19688 * C3608 -
             C19683 * C3610) *
                C49950) *
               C50110 * C445) *
              C49997 * C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[138] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                C16929 +
            (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                C16924 +
            (C16933 - C16934 + C16935 - C16936) * C16930 +
            (C16937 - C16938 + C16939 - C16940) * C16925 + C16973 * C16931 +
            C16974 * C16926) *
               C50110 * C50240 +
           ((C16927 * C446 - C16922 * C456 + C16928 * C867 - C50146 * C872) *
                C16929 +
            (C16927 * C457 - C16922 * C476 + C16928 * C873 - C50146 * C882) *
                C16924 +
            (C17301 - C17302 + C17303 - C17304) * C16930 +
            (C17305 - C17306 + C17307 - C17308) * C16925 + C17651 * C16931 +
            C17652 * C16926) *
               C50110 * C50077) *
              C49997 * C50282 +
          (((C16934 - C16933 + C16936 - C16935) * C16929 +
            (C16938 - C16937 + C16940 - C16939) * C16924 +
            (C16942 - C16941 + C16944 - C16943) * C16930 +
            (C16946 - C16945 + C16948 - C16947) * C16925 + C16975 * C16931 +
            C16976 * C16926) *
               C50110 * C50240 +
           ((C17302 - C17301 + C17304 - C17303) * C16929 +
            (C17306 - C17305 + C17308 - C17307) * C16924 +
            (C17310 - C17309 + C17312 - C17311) * C16930 +
            (C17314 - C17313 + C17316 - C17315) * C16925 +
            (C17643 - C17644 + C17645 - C17646) * C16931 +
            (C17647 - C17648 + C17649 - C17650) * C16926) *
               C50110 * C50077) *
              C49997 * C50283 +
          ((C16973 * C16929 + C16974 * C16924 +
            (C16950 - C16949 + C16952 - C16951) * C16930 +
            (C16954 - C16953 + C16956 - C16955) * C16925 +
            (C16957 - C16958 + C16959 - C16960) * C16931 +
            (C16961 - C16962 + C16963 - C16964) * C16926) *
               C50110 * C50240 +
           (C17651 * C16929 + C17652 * C16924 +
            (C17644 - C17643 + C17646 - C17645) * C16930 +
            (C17648 - C17647 + C17650 - C17649) * C16925 +
            (C16927 * C454 - C16922 * C472 + C16928 * C871 - C50146 * C880) *
                C16931 +
            (C16927 * C473 - C16922 * C484 + C16928 * C881 - C50146 * C886) *
                C16926) *
               C50110 * C50077) *
              C49997 * C612)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19680 * C129 - C19685 * C122 + C19681 * C291 - C19686 * C281 +
             C19682 * C299 - C19687 * C285 + C19683 * C1077 - C19688 * C1073) *
                C19689 +
            (C19680 * C143 - C19685 * C130 + C19681 * C311 - C19686 * C292 +
             C19682 * C315 - C19687 * C300 + C19683 * C1085 - C19688 * C1078) *
                C49950) *
               C50110 * C50240 +
           ((C19685 * C446 - C19680 * C456 + C19686 * C867 - C19681 * C872 +
             C19687 * C1534 - C19682 * C1538 + C19688 * C3181 -
             C19683 * C3184) *
                C19689 +
            (C19685 * C457 - C19680 * C476 + C19686 * C873 - C19681 * C882 +
             C19687 * C1539 - C19682 * C1546 + C19688 * C3185 -
             C19683 * C3190) *
                C49950) *
               C50110 * C50077) *
              C49997 * C50282 +
          (((C19685 * C123 - C19680 * C131 + C19686 * C282 - C19681 * C293 +
             C19687 * C286 - C19682 * C301 + C19688 * C1074 - C19683 * C1079) *
                C19689 +
            (C19685 * C132 - C19680 * C144 + C19686 * C294 - C19681 * C312 +
             C19687 * C302 - C19682 * C316 + C19688 * C1080 - C19683 * C1086) *
                C49950) *
               C50110 * C50240 +
           ((C19680 * C458 - C19685 * C447 + C19681 * C874 - C19686 * C868 +
             C19682 * C1540 - C19687 * C1535 + C19683 * C3186 -
             C19688 * C3182) *
                C19689 +
            (C19680 * C477 - C19685 * C459 + C19681 * C883 - C19686 * C875 +
             C19682 * C1547 - C19687 * C1541 + C19683 * C3191 -
             C19688 * C3187) *
                C49950) *
               C50110 * C50077) *
              C49997 * C50283 +
          (((C19680 * C133 - C19685 * C124 + C19681 * C295 - C19686 * C283 +
             C19682 * C303 - C19687 * C287 + C19683 * C1081 - C19688 * C1075) *
                C19689 +
            (C19680 * C145 - C19685 * C134 + C19681 * C313 - C19686 * C296 +
             C19682 * C317 - C19687 * C304 + C19683 * C1087 - C19688 * C1082) *
                C49950) *
               C50110 * C50240 +
           ((C19685 * C448 - C19680 * C460 + C19686 * C869 - C19681 * C876 +
             C19687 * C1536 - C19682 * C1542 + C19688 * C3183 -
             C19683 * C3188) *
                C19689 +
            (C19685 * C461 - C19680 * C478 + C19686 * C877 - C19681 * C884 +
             C19687 * C1543 - C19682 * C1548 + C19688 * C3189 -
             C19683 * C3192) *
                C49950) *
               C50110 * C50077) *
              C49997 * C612)) /
            (p * q * std::sqrt(p + q));
    d2ee[139] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
               C16929 +
           (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
               C16924 +
           (C16933 - C16934 + C16935 - C16936) * C16930 +
           (C16937 - C16938 + C16939 - C16940) * C16925 + C16973 * C16931 +
           C16974 * C16926) *
              C50110 * C50013 * C49997 * C113 +
          ((C16934 - C16933 + C16936 - C16935) * C16929 +
           (C16938 - C16937 + C16940 - C16939) * C16924 +
           (C16942 - C16941 + C16944 - C16943) * C16930 +
           (C16946 - C16945 + C16948 - C16947) * C16925 + C16975 * C16931 +
           C16976 * C16926) *
              C50110 * C50013 * C49997 * C114 +
          (C16973 * C16929 + C16974 * C16924 +
           (C16950 - C16949 + C16952 - C16951) * C16930 +
           (C16954 - C16953 + C16956 - C16955) * C16925 +
           (C16957 - C16958 + C16959 - C16960) * C16931 +
           (C16961 - C16962 + C16963 - C16964) * C16926) *
              C50110 * C50013 * C49997 * C115 +
          (C16975 * C16929 + C16976 * C16924 +
           (C16958 - C16957 + C16960 - C16959) * C16930 +
           (C16962 - C16961 + C16964 - C16963) * C16925 +
           (C16927 * C127 - C16922 * C139 + C16928 * C613 - C50146 * C614) *
               C16931 +
           (C16927 * C140 - C16922 * C148 + C16928 * C615 - C50146 * C616) *
               C16926) *
              C50110 * C50013 * C49997 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                C16929 +
            (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                C16924 +
            (C16933 - C16934 + C16935 - C16936) * C16930 +
            (C16937 - C16938 + C16939 - C16940) * C16925 + C16973 * C16931 +
            C16974 * C16926) *
               C50110 * C50013 * C276 +
           ((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                C16929 +
            (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                C16924 +
            (C17123 - C17124 + C17125 - C17126) * C16930 +
            (C17127 - C17128 + C17129 - C17130) * C16925 +
            (C17131 - C17132 + C17133 - C17134) * C16931 +
            (C17135 - C17136 + C17137 - C17138) * C16926) *
               C50110 * C50013 * C277 +
           ((C16922 * C299 - C16927 * C285 + C50146 * C1077 - C16928 * C1073) *
                C16929 +
            (C16922 * C315 - C16927 * C300 + C50146 * C1085 - C16928 * C1078) *
                C16924 +
            (C17139 - C17140 + C17141 - C17142) * C16930 +
            (C17143 - C17144 + C17145 - C17146) * C16925 +
            (C17147 - C17148 + C17149 - C17150) * C16931 +
            (C17151 - C17152 + C17153 - C17154) * C16926) *
               C50110 * C50013 * C278) *
              C279 +
          (((C16934 - C16933 + C16936 - C16935) * C16929 +
            (C16938 - C16937 + C16940 - C16939) * C16924 +
            (C16942 - C16941 + C16944 - C16943) * C16930 +
            (C16946 - C16945 + C16948 - C16947) * C16925 + C16975 * C16931 +
            C16976 * C16926) *
               C50110 * C50013 * C276 +
           ((C17124 - C17123 + C17126 - C17125) * C16929 +
            (C17128 - C17127 + C17130 - C17129) * C16924 +
            (C17132 - C17131 + C17134 - C17133) * C16930 +
            (C17136 - C17135 + C17138 - C17137) * C16925 +
            (C16922 * C297 - C16927 * C284 + C50146 * C305 - C16928 * C288) *
                C16931 +
            (C16922 * C314 - C16927 * C298 + C50146 * C318 - C16928 * C306) *
                C16926) *
               C50110 * C50013 * C277 +
           ((C17140 - C17139 + C17142 - C17141) * C16929 +
            (C17144 - C17143 + C17146 - C17145) * C16924 +
            (C17148 - C17147 + C17150 - C17149) * C16930 +
            (C17152 - C17151 + C17154 - C17153) * C16925 +
            (C16927 * C288 - C16922 * C305 + C16928 * C1076 - C50146 * C1083) *
                C16931 +
            (C16927 * C306 - C16922 * C318 + C16928 * C1084 - C50146 * C1088) *
                C16926) *
               C50110 * C50013 * C278) *
              C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C19680 * C129 - C19685 * C122 + C19681 * C291 - C19686 * C281 +
            C19682 * C299 - C19687 * C285 + C19683 * C1077 - C19688 * C1073) *
               C19689 +
           (C19680 * C143 - C19685 * C130 + C19681 * C311 - C19686 * C292 +
            C19682 * C315 - C19687 * C300 + C19683 * C1085 - C19688 * C1078) *
               C49950) *
              C50110 * C50013 * C49997 * C113 +
          ((C19685 * C123 - C19680 * C131 + C19686 * C282 - C19681 * C293 +
            C19687 * C286 - C19682 * C301 + C19688 * C1074 - C19683 * C1079) *
               C19689 +
           (C19685 * C132 - C19680 * C144 + C19686 * C294 - C19681 * C312 +
            C19687 * C302 - C19682 * C316 + C19688 * C1080 - C19683 * C1086) *
               C49950) *
              C50110 * C50013 * C49997 * C114 +
          ((C19680 * C133 - C19685 * C124 + C19681 * C295 - C19686 * C283 +
            C19682 * C303 - C19687 * C287 + C19683 * C1081 - C19688 * C1075) *
               C19689 +
           (C19680 * C145 - C19685 * C134 + C19681 * C313 - C19686 * C296 +
            C19682 * C317 - C19687 * C304 + C19683 * C1087 - C19688 * C1082) *
               C49950) *
              C50110 * C50013 * C49997 * C115 +
          ((C19685 * C125 - C19680 * C135 + C19686 * C284 - C19681 * C297 +
            C19687 * C288 - C19682 * C305 + C19688 * C1076 - C19683 * C1083) *
               C19689 +
           (C19685 * C136 - C19680 * C146 + C19686 * C298 - C19681 * C314 +
            C19687 * C306 - C19682 * C318 + C19688 * C1084 - C19683 * C1088) *
               C49950) *
              C50110 * C50013 * C49997 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19680 * C129 - C19685 * C122 + C19681 * C291 - C19686 * C281 +
             C19682 * C299 - C19687 * C285 + C19683 * C1077 - C19688 * C1073) *
                C19689 +
            (C19680 * C143 - C19685 * C130 + C19681 * C311 - C19686 * C292 +
             C19682 * C315 - C19687 * C300 + C19683 * C1085 - C19688 * C1078) *
                C49950) *
               C50110 * C50013 * C276 +
           ((C19685 * C281 - C19680 * C291 + C19686 * C285 - C19681 * C299 +
             C19687 * C1073 - C19682 * C1077 + C19688 * C2453 -
             C19683 * C2456) *
                C19689 +
            (C19685 * C292 - C19680 * C311 + C19686 * C300 - C19681 * C315 +
             C19687 * C1078 - C19682 * C1085 + C19688 * C2457 -
             C19683 * C2462) *
                C49950) *
               C50110 * C50013 * C277 +
           ((C19680 * C299 - C19685 * C285 + C19681 * C1077 - C19686 * C1073 +
             C19682 * C2456 - C19687 * C2453 + C19683 * C3451 -
             C19688 * C3449) *
                C19689 +
            (C19680 * C315 - C19685 * C300 + C19681 * C1085 - C19686 * C1078 +
             C19682 * C2462 - C19687 * C2457 + C19683 * C3455 -
             C19688 * C3452) *
                C49950) *
               C50110 * C50013 * C278) *
              C279 +
          (((C19685 * C123 - C19680 * C131 + C19686 * C282 - C19681 * C293 +
             C19687 * C286 - C19682 * C301 + C19688 * C1074 - C19683 * C1079) *
                C19689 +
            (C19685 * C132 - C19680 * C144 + C19686 * C294 - C19681 * C312 +
             C19687 * C302 - C19682 * C316 + C19688 * C1080 - C19683 * C1086) *
                C49950) *
               C50110 * C50013 * C276 +
           ((C19680 * C293 - C19685 * C282 + C19681 * C301 - C19686 * C286 +
             C19682 * C1079 - C19687 * C1074 + C19683 * C2458 -
             C19688 * C2454) *
                C19689 +
            (C19680 * C312 - C19685 * C294 + C19681 * C316 - C19686 * C302 +
             C19682 * C1086 - C19687 * C1080 + C19683 * C2463 -
             C19688 * C2459) *
                C49950) *
               C50110 * C50013 * C277 +
           ((C19685 * C286 - C19680 * C301 + C19686 * C1074 - C19681 * C1079 +
             C19687 * C2454 - C19682 * C2458 + C19688 * C3450 -
             C19683 * C3453) *
                C19689 +
            (C19685 * C302 - C19680 * C316 + C19686 * C1080 - C19681 * C1086 +
             C19687 * C2459 - C19682 * C2463 + C19688 * C3454 -
             C19683 * C3456) *
                C49950) *
               C50110 * C50013 * C278) *
              C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[140] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                C16929 +
            (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                C16924 +
            (C16933 - C16934 + C16935 - C16936) * C16930 +
            (C16937 - C16938 + C16939 - C16940) * C16925 + C16973 * C16931 +
            C16974 * C16926) *
               C50110 * C50013 * C50284 +
           ((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                C16929 +
            (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                C16924 +
            (C17123 - C17124 + C17125 - C17126) * C16930 +
            (C17127 - C17128 + C17129 - C17130) * C16925 + C17491 * C16931 +
            C17492 * C16926) *
               C50110 * C50013 * C50285 +
           ((C16922 * C299 - C16927 * C285 + C50146 * C1077 - C16928 * C1073) *
                C16929 +
            (C16922 * C315 - C16927 * C300 + C50146 * C1085 - C16928 * C1078) *
                C16924 +
            (C17139 - C17140 + C17141 - C17142) * C16930 +
            (C17143 - C17144 + C17145 - C17146) * C16925 +
            (C17147 - C17148 + C17149 - C17150) * C16931 +
            (C17151 - C17152 + C17153 - C17154) * C16926) *
               C50110 * C50013 * C1303) *
              C50231 +
          (((C16934 - C16933 + C16936 - C16935) * C16929 +
            (C16938 - C16937 + C16940 - C16939) * C16924 +
            (C16942 - C16941 + C16944 - C16943) * C16930 +
            (C16946 - C16945 + C16948 - C16947) * C16925 + C16975 * C16931 +
            C16976 * C16926) *
               C50110 * C50013 * C50284 +
           ((C17124 - C17123 + C17126 - C17125) * C16929 +
            (C17128 - C17127 + C17130 - C17129) * C16924 +
            (C17132 - C17131 + C17134 - C17133) * C16930 +
            (C17136 - C17135 + C17138 - C17137) * C16925 +
            (C17483 - C17484 + C17485 - C17486) * C16931 +
            (C17487 - C17488 + C17489 - C17490) * C16926) *
               C50110 * C50013 * C50285 +
           ((C17140 - C17139 + C17142 - C17141) * C16929 +
            (C17144 - C17143 + C17146 - C17145) * C16924 +
            (C17148 - C17147 + C17150 - C17149) * C16930 +
            (C17152 - C17151 + C17154 - C17153) * C16925 +
            (C16927 * C288 - C16922 * C305 + C16928 * C1076 - C50146 * C1083) *
                C16931 +
            (C16927 * C306 - C16922 * C318 + C16928 * C1084 - C50146 * C1088) *
                C16926) *
               C50110 * C50013 * C1303) *
              C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19680 * C129 - C19685 * C122 + C19681 * C291 - C19686 * C281 +
             C19682 * C299 - C19687 * C285 + C19683 * C1077 - C19688 * C1073) *
                C19689 +
            (C19680 * C143 - C19685 * C130 + C19681 * C311 - C19686 * C292 +
             C19682 * C315 - C19687 * C300 + C19683 * C1085 - C19688 * C1078) *
                C49950) *
               C50110 * C50013 * C50284 +
           ((C19685 * C281 - C19680 * C291 + C19686 * C285 - C19681 * C299 +
             C19687 * C1073 - C19682 * C1077 + C19688 * C2453 -
             C19683 * C2456) *
                C19689 +
            (C19685 * C292 - C19680 * C311 + C19686 * C300 - C19681 * C315 +
             C19687 * C1078 - C19682 * C1085 + C19688 * C2457 -
             C19683 * C2462) *
                C49950) *
               C50110 * C50013 * C50285 +
           ((C19680 * C299 - C19685 * C285 + C19681 * C1077 - C19686 * C1073 +
             C19682 * C2456 - C19687 * C2453 + C19683 * C3451 -
             C19688 * C3449) *
                C19689 +
            (C19680 * C315 - C19685 * C300 + C19681 * C1085 - C19686 * C1078 +
             C19682 * C2462 - C19687 * C2457 + C19683 * C3455 -
             C19688 * C3452) *
                C49950) *
               C50110 * C50013 * C1303) *
              C50231 +
          (((C19685 * C123 - C19680 * C131 + C19686 * C282 - C19681 * C293 +
             C19687 * C286 - C19682 * C301 + C19688 * C1074 - C19683 * C1079) *
                C19689 +
            (C19685 * C132 - C19680 * C144 + C19686 * C294 - C19681 * C312 +
             C19687 * C302 - C19682 * C316 + C19688 * C1080 - C19683 * C1086) *
                C49950) *
               C50110 * C50013 * C50284 +
           ((C19680 * C293 - C19685 * C282 + C19681 * C301 - C19686 * C286 +
             C19682 * C1079 - C19687 * C1074 + C19683 * C2458 -
             C19688 * C2454) *
                C19689 +
            (C19680 * C312 - C19685 * C294 + C19681 * C316 - C19686 * C302 +
             C19682 * C1086 - C19687 * C1080 + C19683 * C2463 -
             C19688 * C2459) *
                C49950) *
               C50110 * C50013 * C50285 +
           ((C19685 * C286 - C19680 * C301 + C19686 * C1074 - C19681 * C1079 +
             C19687 * C2454 - C19682 * C2458 + C19688 * C3450 -
             C19683 * C3453) *
                C19689 +
            (C19685 * C302 - C19680 * C316 + C19686 * C1080 - C19681 * C1086 +
             C19687 * C2459 - C19682 * C2463 + C19688 * C3454 -
             C19683 * C3456) *
                C49950) *
               C50110 * C50013 * C1303) *
              C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[141] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                C16929 +
            (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                C16924 +
            (C16933 - C16934 + C16935 - C16936) * C16930 +
            (C16937 - C16938 + C16939 - C16940) * C16925 + C16973 * C16931 +
            C16974 * C16926) *
               C50110 * C50240 +
           ((C16927 * C446 - C16922 * C456 + C16928 * C867 - C50146 * C872) *
                C16929 +
            (C16927 * C457 - C16922 * C476 + C16928 * C873 - C50146 * C882) *
                C16924 +
            (C17301 - C17302 + C17303 - C17304) * C16930 +
            (C17305 - C17306 + C17307 - C17308) * C16925 + C17651 * C16931 +
            C17652 * C16926) *
               C50110 * C50077) *
              C50284 +
          (((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                C16929 +
            (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                C16924 +
            (C17123 - C17124 + C17125 - C17126) * C16930 +
            (C17127 - C17128 + C17129 - C17130) * C16925 + C17491 * C16931 +
            C17492 * C16926) *
               C50110 * C50240 +
           ((C16922 * C872 - C16927 * C867 + C50146 * C1538 - C16928 * C1534) *
                C16929 +
            (C16922 * C882 - C16927 * C873 + C50146 * C1546 - C16928 * C1539) *
                C16924 +
            (C17847 - C17848 + C17849 - C17850) * C16930 +
            (C17851 - C17852 + C17853 - C17854) * C16925 +
            (C17855 - C17856 + C17857 - C17858) * C16931 +
            (C17859 - C17860 + C17861 - C17862) * C16926) *
               C50110 * C50077) *
              C50285 +
          (((C16922 * C299 - C16927 * C285 + C50146 * C1077 - C16928 * C1073) *
                C16929 +
            (C16922 * C315 - C16927 * C300 + C50146 * C1085 - C16928 * C1078) *
                C16924 +
            (C17139 - C17140 + C17141 - C17142) * C16930 +
            (C17143 - C17144 + C17145 - C17146) * C16925 +
            (C17147 - C17148 + C17149 - C17150) * C16931 +
            (C17151 - C17152 + C17153 - C17154) * C16926) *
               C50110 * C50240 +
           ((C16927 * C1534 - C16922 * C1538 + C16928 * C3181 -
             C50146 * C3184) *
                C16929 +
            (C16927 * C1539 - C16922 * C1546 + C16928 * C3185 -
             C50146 * C3190) *
                C16924 +
            (C16927 * C1535 - C16922 * C1540 + C16928 * C3182 -
             C50146 * C3186) *
                C16930 +
            (C16927 * C1541 - C16922 * C1547 + C16928 * C3187 -
             C50146 * C3191) *
                C16925 +
            (C16927 * C1536 - C16922 * C1542 + C16928 * C3183 -
             C50146 * C3188) *
                C16931 +
            (C16927 * C1543 - C16922 * C1548 + C16928 * C3189 -
             C50146 * C3192) *
                C16926) *
               C50110 * C50077) *
              C1303) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19680 * C129 - C19685 * C122 + C19681 * C291 - C19686 * C281 +
             C19682 * C299 - C19687 * C285 + C19683 * C1077 - C19688 * C1073) *
                C19689 +
            (C19680 * C143 - C19685 * C130 + C19681 * C311 - C19686 * C292 +
             C19682 * C315 - C19687 * C300 + C19683 * C1085 - C19688 * C1078) *
                C49950) *
               C50110 * C50240 +
           ((C19685 * C446 - C19680 * C456 + C19686 * C867 - C19681 * C872 +
             C19687 * C1534 - C19682 * C1538 + C19688 * C3181 -
             C19683 * C3184) *
                C19689 +
            (C19685 * C457 - C19680 * C476 + C19686 * C873 - C19681 * C882 +
             C19687 * C1539 - C19682 * C1546 + C19688 * C3185 -
             C19683 * C3190) *
                C49950) *
               C50110 * C50077) *
              C50284 +
          (((C19685 * C281 - C19680 * C291 + C19686 * C285 - C19681 * C299 +
             C19687 * C1073 - C19682 * C1077 + C19688 * C2453 -
             C19683 * C2456) *
                C19689 +
            (C19685 * C292 - C19680 * C311 + C19686 * C300 - C19681 * C315 +
             C19687 * C1078 - C19682 * C1085 + C19688 * C2457 -
             C19683 * C2462) *
                C49950) *
               C50110 * C50240 +
           ((C19680 * C872 - C19685 * C867 + C19681 * C1538 - C19686 * C1534 +
             C19682 * C3184 - C19687 * C3181 + C19683 * C4099 -
             C19688 * C4097) *
                C19689 +
            (C19680 * C882 - C19685 * C873 + C19681 * C1546 - C19686 * C1539 +
             C19682 * C3190 - C19687 * C3185 + C19683 * C4103 -
             C19688 * C4100) *
                C49950) *
               C50110 * C50077) *
              C50285 +
          (((C19680 * C299 - C19685 * C285 + C19681 * C1077 - C19686 * C1073 +
             C19682 * C2456 - C19687 * C2453 + C19683 * C3451 -
             C19688 * C3449) *
                C19689 +
            (C19680 * C315 - C19685 * C300 + C19681 * C1085 - C19686 * C1078 +
             C19682 * C2462 - C19687 * C2457 + C19683 * C3455 -
             C19688 * C3452) *
                C49950) *
               C50110 * C50240 +
           ((C19685 * C1534 - C19680 * C1538 + C19686 * C3181 - C19681 * C3184 +
             C19687 * C4097 - C19682 * C4099 + C19688 * C20808 -
             C19683 * C20809) *
                C19689 +
            (C19685 * C1539 - C19680 * C1546 + C19686 * C3185 - C19681 * C3190 +
             C19687 * C4100 - C19682 * C4103 + C19688 * C20810 -
             C19683 * C20811) *
                C49950) *
               C50110 * C50077) *
              C1303) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[142] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
               C16929 +
           (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
               C16924 +
           (C16933 - C16934 + C16935 - C16936) * C16930 +
           (C16937 - C16938 + C16939 - C16940) * C16925 + C16973 * C16931 +
           C16974 * C16926) *
              C50110 * C50013 * C1068 +
          ((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
               C16929 +
           (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
               C16924 +
           (C17123 - C17124 + C17125 - C17126) * C16930 +
           (C17127 - C17128 + C17129 - C17130) * C16925 + C17491 * C16931 +
           C17492 * C16926) *
              C50110 * C50013 * C1069 +
          ((C16922 * C299 - C16927 * C285 + C50146 * C1077 - C16928 * C1073) *
               C16929 +
           (C16922 * C315 - C16927 * C300 + C50146 * C1085 - C16928 * C1078) *
               C16924 +
           (C17139 - C17140 + C17141 - C17142) * C16930 +
           (C17143 - C17144 + C17145 - C17146) * C16925 +
           (C17147 - C17148 + C17149 - C17150) * C16931 +
           (C17151 - C17152 + C17153 - C17154) * C16926) *
              C50110 * C50013 * C1070 +
          ((C16927 * C1073 - C16922 * C1077 + C16928 * C2453 - C50146 * C2456) *
               C16929 +
           (C16927 * C1078 - C16922 * C1085 + C16928 * C2457 - C50146 * C2462) *
               C16924 +
           (C16927 * C1074 - C16922 * C1079 + C16928 * C2454 - C50146 * C2458) *
               C16930 +
           (C16927 * C1080 - C16922 * C1086 + C16928 * C2459 - C50146 * C2463) *
               C16925 +
           (C16927 * C1075 - C16922 * C1081 + C16928 * C2455 - C50146 * C2460) *
               C16931 +
           (C16927 * C1082 - C16922 * C1087 + C16928 * C2461 - C50146 * C2464) *
               C16926) *
              C50110 * C50013 * C1071) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                C16929 +
            (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                C16924 +
            (C16933 - C16934 + C16935 - C16936) * C16930 +
            (C16937 - C16938 + C16939 - C16940) * C16925 + C16973 * C16931 +
            C16974 * C16926) *
               C50110 * C50013 * C997 +
           ((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                C16929 +
            (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                C16924 +
            (C17123 - C17124 + C17125 - C17126) * C16930 +
            (C17127 - C17128 + C17129 - C17130) * C16925 + C17491 * C16931 +
            C17492 * C16926) *
               C50110 * C50013 * C50049) *
              C999 +
          (((C16934 - C16933 + C16936 - C16935) * C16929 +
            (C16938 - C16937 + C16940 - C16939) * C16924 +
            (C16942 - C16941 + C16944 - C16943) * C16930 +
            (C16946 - C16945 + C16948 - C16947) * C16925 + C16975 * C16931 +
            C16976 * C16926) *
               C50110 * C50013 * C997 +
           ((C17124 - C17123 + C17126 - C17125) * C16929 +
            (C17128 - C17127 + C17130 - C17129) * C16924 +
            (C17132 - C17131 + C17134 - C17133) * C16930 +
            (C17136 - C17135 + C17138 - C17137) * C16925 +
            (C17483 - C17484 + C17485 - C17486) * C16931 +
            (C17487 - C17488 + C17489 - C17490) * C16926) *
               C50110 * C50013 * C50049) *
              C1000 +
          ((C16973 * C16929 + C16974 * C16924 +
            (C16950 - C16949 + C16952 - C16951) * C16930 +
            (C16954 - C16953 + C16956 - C16955) * C16925 +
            (C16957 - C16958 + C16959 - C16960) * C16931 +
            (C16961 - C16962 + C16963 - C16964) * C16926) *
               C50110 * C50013 * C997 +
           (C17491 * C16929 + C17492 * C16924 +
            (C17484 - C17483 + C17486 - C17485) * C16930 +
            (C17488 - C17487 + C17490 - C17489) * C16925 +
            (C16927 * C289 - C16922 * C307 + C16928 * C290 - C50146 * C309) *
                C16931 +
            (C16927 * C308 - C16922 * C319 + C16928 * C310 - C50146 * C320) *
                C16926) *
               C50110 * C50013 * C50049) *
              C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                C16929 +
            (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                C16924 +
            (C16933 - C16934 + C16935 - C16936) * C16930 +
            (C16937 - C16938 + C16939 - C16940) * C16925 + C16973 * C16931 +
            C16974 * C16926) *
               C50110 * C443 +
           ((C16927 * C446 - C16922 * C456 + C16928 * C867 - C50146 * C872) *
                C16929 +
            (C16927 * C457 - C16922 * C476 + C16928 * C873 - C50146 * C882) *
                C16924 +
            (C17301 - C17302 + C17303 - C17304) * C16930 +
            (C17305 - C17306 + C17307 - C17308) * C16925 + C17651 * C16931 +
            C17652 * C16926) *
               C50110 * C444 +
           ((C16922 * C464 - C16927 * C450 + C50146 * C1191 - C16928 * C1187) *
                C16929 +
            (C16922 * C480 - C16927 * C465 + C50146 * C1199 - C16928 * C1192) *
                C16924 +
            (C17317 - C17318 + C17319 - C17320) * C16930 +
            (C17321 - C17322 + C17323 - C17324) * C16925 +
            (C17325 - C17326 + C17327 - C17328) * C16931 +
            (C17329 - C17330 + C17331 - C17332) * C16926) *
               C50110 * C445) *
              C997 +
          (((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                C16929 +
            (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                C16924 +
            (C17123 - C17124 + C17125 - C17126) * C16930 +
            (C17127 - C17128 + C17129 - C17130) * C16925 + C17491 * C16931 +
            C17492 * C16926) *
               C50110 * C443 +
           ((C16922 * C872 - C16927 * C867 + C50146 * C1538 - C16928 * C1534) *
                C16929 +
            (C16922 * C882 - C16927 * C873 + C50146 * C1546 - C16928 * C1539) *
                C16924 +
            (C17847 - C17848 + C17849 - C17850) * C16930 +
            (C17851 - C17852 + C17853 - C17854) * C16925 +
            (C17855 - C17856 + C17857 - C17858) * C16931 +
            (C17859 - C17860 + C17861 - C17862) * C16926) *
               C50110 * C444 +
           ((C16927 * C1187 - C16922 * C1191 + C16928 * C2635 -
             C50146 * C2638) *
                C16929 +
            (C16927 * C1192 - C16922 * C1199 + C16928 * C2639 -
             C50146 * C2644) *
                C16924 +
            (C16927 * C1188 - C16922 * C1193 + C16928 * C2636 -
             C50146 * C2640) *
                C16930 +
            (C16927 * C1194 - C16922 * C1200 + C16928 * C2641 -
             C50146 * C2645) *
                C16925 +
            (C16927 * C1189 - C16922 * C1195 + C16928 * C2637 -
             C50146 * C2642) *
                C16931 +
            (C16927 * C1196 - C16922 * C1201 + C16928 * C2643 -
             C50146 * C2646) *
                C16926) *
               C50110 * C445) *
              C50049) *
         C49978) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19680 * C129 - C19685 * C122 + C19681 * C291 - C19686 * C281 +
             C19682 * C299 - C19687 * C285 + C19683 * C1077 - C19688 * C1073) *
                C19689 +
            (C19680 * C143 - C19685 * C130 + C19681 * C311 - C19686 * C292 +
             C19682 * C315 - C19687 * C300 + C19683 * C1085 - C19688 * C1078) *
                C49950) *
               C50110 * C50013 * C997 +
           ((C19685 * C281 - C19680 * C291 + C19686 * C285 - C19681 * C299 +
             C19687 * C1073 - C19682 * C1077 + C19688 * C2453 -
             C19683 * C2456) *
                C19689 +
            (C19685 * C292 - C19680 * C311 + C19686 * C300 - C19681 * C315 +
             C19687 * C1078 - C19682 * C1085 + C19688 * C2457 -
             C19683 * C2462) *
                C49950) *
               C50110 * C50013 * C50049) *
              C999 +
          (((C19685 * C123 - C19680 * C131 + C19686 * C282 - C19681 * C293 +
             C19687 * C286 - C19682 * C301 + C19688 * C1074 - C19683 * C1079) *
                C19689 +
            (C19685 * C132 - C19680 * C144 + C19686 * C294 - C19681 * C312 +
             C19687 * C302 - C19682 * C316 + C19688 * C1080 - C19683 * C1086) *
                C49950) *
               C50110 * C50013 * C997 +
           ((C19680 * C293 - C19685 * C282 + C19681 * C301 - C19686 * C286 +
             C19682 * C1079 - C19687 * C1074 + C19683 * C2458 -
             C19688 * C2454) *
                C19689 +
            (C19680 * C312 - C19685 * C294 + C19681 * C316 - C19686 * C302 +
             C19682 * C1086 - C19687 * C1080 + C19683 * C2463 -
             C19688 * C2459) *
                C49950) *
               C50110 * C50013 * C50049) *
              C1000 +
          (((C19680 * C133 - C19685 * C124 + C19681 * C295 - C19686 * C283 +
             C19682 * C303 - C19687 * C287 + C19683 * C1081 - C19688 * C1075) *
                C19689 +
            (C19680 * C145 - C19685 * C134 + C19681 * C313 - C19686 * C296 +
             C19682 * C317 - C19687 * C304 + C19683 * C1087 - C19688 * C1082) *
                C49950) *
               C50110 * C50013 * C997 +
           ((C19685 * C283 - C19680 * C295 + C19686 * C287 - C19681 * C303 +
             C19687 * C1075 - C19682 * C1081 + C19688 * C2455 -
             C19683 * C2460) *
                C19689 +
            (C19685 * C296 - C19680 * C313 + C19686 * C304 - C19681 * C317 +
             C19687 * C1082 - C19682 * C1087 + C19688 * C2461 -
             C19683 * C2464) *
                C49950) *
               C50110 * C50013 * C50049) *
              C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C19680 * C129 - C19685 * C122 + C19681 * C291 - C19686 * C281 +
            C19682 * C299 - C19687 * C285 + C19683 * C1077 - C19688 * C1073) *
               C19689 +
           (C19680 * C143 - C19685 * C130 + C19681 * C311 - C19686 * C292 +
            C19682 * C315 - C19687 * C300 + C19683 * C1085 - C19688 * C1078) *
               C49950) *
              C50110 * C50013 * C1068 +
          ((C19685 * C281 - C19680 * C291 + C19686 * C285 - C19681 * C299 +
            C19687 * C1073 - C19682 * C1077 + C19688 * C2453 - C19683 * C2456) *
               C19689 +
           (C19685 * C292 - C19680 * C311 + C19686 * C300 - C19681 * C315 +
            C19687 * C1078 - C19682 * C1085 + C19688 * C2457 - C19683 * C2462) *
               C49950) *
              C50110 * C50013 * C1069 +
          ((C19680 * C299 - C19685 * C285 + C19681 * C1077 - C19686 * C1073 +
            C19682 * C2456 - C19687 * C2453 + C19683 * C3451 - C19688 * C3449) *
               C19689 +
           (C19680 * C315 - C19685 * C300 + C19681 * C1085 - C19686 * C1078 +
            C19682 * C2462 - C19687 * C2457 + C19683 * C3455 - C19688 * C3452) *
               C49950) *
              C50110 * C50013 * C1070 +
          ((C19685 * C1073 - C19680 * C1077 + C19686 * C2453 - C19681 * C2456 +
            C19687 * C3449 - C19682 * C3451 + C19688 * C20376 -
            C19683 * C20377) *
               C19689 +
           (C19685 * C1078 - C19680 * C1085 + C19686 * C2457 - C19681 * C2462 +
            C19687 * C3452 - C19682 * C3455 + C19688 * C20378 -
            C19683 * C20379) *
               C49950) *
              C50110 * C50013 * C1071) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19680 * C129 - C19685 * C122 + C19681 * C291 - C19686 * C281 +
             C19682 * C299 - C19687 * C285 + C19683 * C1077 - C19688 * C1073) *
                C19689 +
            (C19680 * C143 - C19685 * C130 + C19681 * C311 - C19686 * C292 +
             C19682 * C315 - C19687 * C300 + C19683 * C1085 - C19688 * C1078) *
                C49950) *
               C50110 * C443 +
           ((C19685 * C446 - C19680 * C456 + C19686 * C867 - C19681 * C872 +
             C19687 * C1534 - C19682 * C1538 + C19688 * C3181 -
             C19683 * C3184) *
                C19689 +
            (C19685 * C457 - C19680 * C476 + C19686 * C873 - C19681 * C882 +
             C19687 * C1539 - C19682 * C1546 + C19688 * C3185 -
             C19683 * C3190) *
                C49950) *
               C50110 * C444 +
           ((C19680 * C464 - C19685 * C450 + C19681 * C1191 - C19686 * C1187 +
             C19682 * C2638 - C19687 * C2635 + C19683 * C3605 -
             C19688 * C3603) *
                C19689 +
            (C19680 * C480 - C19685 * C465 + C19681 * C1199 - C19686 * C1192 +
             C19682 * C2644 - C19687 * C2639 + C19683 * C3609 -
             C19688 * C3606) *
                C49950) *
               C50110 * C445) *
              C997 +
          (((C19685 * C281 - C19680 * C291 + C19686 * C285 - C19681 * C299 +
             C19687 * C1073 - C19682 * C1077 + C19688 * C2453 -
             C19683 * C2456) *
                C19689 +
            (C19685 * C292 - C19680 * C311 + C19686 * C300 - C19681 * C315 +
             C19687 * C1078 - C19682 * C1085 + C19688 * C2457 -
             C19683 * C2462) *
                C49950) *
               C50110 * C443 +
           ((C19680 * C872 - C19685 * C867 + C19681 * C1538 - C19686 * C1534 +
             C19682 * C3184 - C19687 * C3181 + C19683 * C4099 -
             C19688 * C4097) *
                C19689 +
            (C19680 * C882 - C19685 * C873 + C19681 * C1546 - C19686 * C1539 +
             C19682 * C3190 - C19687 * C3185 + C19683 * C4103 -
             C19688 * C4100) *
                C49950) *
               C50110 * C444 +
           ((C19685 * C1187 - C19680 * C1191 + C19686 * C2635 - C19681 * C2638 +
             C19687 * C3603 - C19682 * C3605 + C19688 * C20478 -
             C19683 * C20479) *
                C19689 +
            (C19685 * C1192 - C19680 * C1199 + C19686 * C2639 - C19681 * C2644 +
             C19687 * C3606 - C19682 * C3609 + C19688 * C20480 -
             C19683 * C20481) *
                C49950) *
               C50110 * C445) *
              C50049) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[143] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                 C16929 +
             (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                 C16924 +
             (C16933 - C16934 + C16935 - C16936) * C16930 +
             (C16937 - C16938 + C16939 - C16940) * C16925 + C16973 * C16931 +
             C16974 * C16926) *
                C50110 * C50240 +
            ((C16927 * C446 - C16922 * C456 + C16928 * C867 - C50146 * C872) *
                 C16929 +
             (C16927 * C457 - C16922 * C476 + C16928 * C873 - C50146 * C882) *
                 C16924 +
             (C17301 - C17302 + C17303 - C17304) * C16930 +
             (C17305 - C17306 + C17307 - C17308) * C16925 + C17651 * C16931 +
             C17652 * C16926) *
                C50110 * C50077) *
               C997 +
           (((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                 C16929 +
             (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                 C16924 +
             (C17123 - C17124 + C17125 - C17126) * C16930 +
             (C17127 - C17128 + C17129 - C17130) * C16925 + C17491 * C16931 +
             C17492 * C16926) *
                C50110 * C50240 +
            ((C16922 * C872 - C16927 * C867 + C50146 * C1538 - C16928 * C1534) *
                 C16929 +
             (C16922 * C882 - C16927 * C873 + C50146 * C1546 - C16928 * C1539) *
                 C16924 +
             (C17847 - C17848 + C17849 - C17850) * C16930 +
             (C17851 - C17852 + C17853 - C17854) * C16925 +
             (C17855 - C17856 + C17857 - C17858) * C16931 +
             (C17859 - C17860 + C17861 - C17862) * C16926) *
                C50110 * C50077) *
               C50049) *
              C50231 +
          ((((C16934 - C16933 + C16936 - C16935) * C16929 +
             (C16938 - C16937 + C16940 - C16939) * C16924 +
             (C16942 - C16941 + C16944 - C16943) * C16930 +
             (C16946 - C16945 + C16948 - C16947) * C16925 + C16975 * C16931 +
             C16976 * C16926) *
                C50110 * C50240 +
            ((C17302 - C17301 + C17304 - C17303) * C16929 +
             (C17306 - C17305 + C17308 - C17307) * C16924 +
             (C17310 - C17309 + C17312 - C17311) * C16930 +
             (C17314 - C17313 + C17316 - C17315) * C16925 +
             (C17643 - C17644 + C17645 - C17646) * C16931 +
             (C17647 - C17648 + C17649 - C17650) * C16926) *
                C50110 * C50077) *
               C997 +
           (((C17124 - C17123 + C17126 - C17125) * C16929 +
             (C17128 - C17127 + C17130 - C17129) * C16924 +
             (C17132 - C17131 + C17134 - C17133) * C16930 +
             (C17136 - C17135 + C17138 - C17137) * C16925 +
             (C17483 - C17484 + C17485 - C17486) * C16931 +
             (C17487 - C17488 + C17489 - C17490) * C16926) *
                C50110 * C50240 +
            ((C17848 - C17847 + C17850 - C17849) * C16929 +
             (C17852 - C17851 + C17854 - C17853) * C16924 +
             (C17856 - C17855 + C17858 - C17857) * C16930 +
             (C17860 - C17859 + C17862 - C17861) * C16925 +
             (C16927 * C870 - C16922 * C878 + C16928 * C1537 - C50146 * C1544) *
                 C16931 +
             (C16927 * C879 - C16922 * C885 + C16928 * C1545 - C50146 * C1549) *
                 C16926) *
                C50110 * C50077) *
               C50049) *
              C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19680 * C129 - C19685 * C122 + C19681 * C291 - C19686 * C281 +
              C19682 * C299 - C19687 * C285 + C19683 * C1077 - C19688 * C1073) *
                 C19689 +
             (C19680 * C143 - C19685 * C130 + C19681 * C311 - C19686 * C292 +
              C19682 * C315 - C19687 * C300 + C19683 * C1085 - C19688 * C1078) *
                 C49950) *
                C50110 * C50240 +
            ((C19685 * C446 - C19680 * C456 + C19686 * C867 - C19681 * C872 +
              C19687 * C1534 - C19682 * C1538 + C19688 * C3181 -
              C19683 * C3184) *
                 C19689 +
             (C19685 * C457 - C19680 * C476 + C19686 * C873 - C19681 * C882 +
              C19687 * C1539 - C19682 * C1546 + C19688 * C3185 -
              C19683 * C3190) *
                 C49950) *
                C50110 * C50077) *
               C997 +
           (((C19685 * C281 - C19680 * C291 + C19686 * C285 - C19681 * C299 +
              C19687 * C1073 - C19682 * C1077 + C19688 * C2453 -
              C19683 * C2456) *
                 C19689 +
             (C19685 * C292 - C19680 * C311 + C19686 * C300 - C19681 * C315 +
              C19687 * C1078 - C19682 * C1085 + C19688 * C2457 -
              C19683 * C2462) *
                 C49950) *
                C50110 * C50240 +
            ((C19680 * C872 - C19685 * C867 + C19681 * C1538 - C19686 * C1534 +
              C19682 * C3184 - C19687 * C3181 + C19683 * C4099 -
              C19688 * C4097) *
                 C19689 +
             (C19680 * C882 - C19685 * C873 + C19681 * C1546 - C19686 * C1539 +
              C19682 * C3190 - C19687 * C3185 + C19683 * C4103 -
              C19688 * C4100) *
                 C49950) *
                C50110 * C50077) *
               C50049) *
              C50231 +
          ((((C19685 * C123 - C19680 * C131 + C19686 * C282 - C19681 * C293 +
              C19687 * C286 - C19682 * C301 + C19688 * C1074 - C19683 * C1079) *
                 C19689 +
             (C19685 * C132 - C19680 * C144 + C19686 * C294 - C19681 * C312 +
              C19687 * C302 - C19682 * C316 + C19688 * C1080 - C19683 * C1086) *
                 C49950) *
                C50110 * C50240 +
            ((C19680 * C458 - C19685 * C447 + C19681 * C874 - C19686 * C868 +
              C19682 * C1540 - C19687 * C1535 + C19683 * C3186 -
              C19688 * C3182) *
                 C19689 +
             (C19680 * C477 - C19685 * C459 + C19681 * C883 - C19686 * C875 +
              C19682 * C1547 - C19687 * C1541 + C19683 * C3191 -
              C19688 * C3187) *
                 C49950) *
                C50110 * C50077) *
               C997 +
           (((C19680 * C293 - C19685 * C282 + C19681 * C301 - C19686 * C286 +
              C19682 * C1079 - C19687 * C1074 + C19683 * C2458 -
              C19688 * C2454) *
                 C19689 +
             (C19680 * C312 - C19685 * C294 + C19681 * C316 - C19686 * C302 +
              C19682 * C1086 - C19687 * C1080 + C19683 * C2463 -
              C19688 * C2459) *
                 C49950) *
                C50110 * C50240 +
            ((C19685 * C868 - C19680 * C874 + C19686 * C1535 - C19681 * C1540 +
              C19687 * C3182 - C19682 * C3186 + C19688 * C4098 -
              C19683 * C4101) *
                 C19689 +
             (C19685 * C875 - C19680 * C883 + C19686 * C1541 - C19681 * C1547 +
              C19687 * C3187 - C19682 * C3191 + C19688 * C4102 -
              C19683 * C4104) *
                 C49950) *
                C50110 * C50077) *
               C50049) *
              C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[144] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                C16929 +
            (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                C16924 +
            (C16933 - C16934 + C16935 - C16936) * C16930 +
            (C16937 - C16938 + C16939 - C16940) * C16925 + C16973 * C16931 +
            C16974 * C16926) *
               C50110 * C50013 * C997 +
           ((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                C16929 +
            (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                C16924 +
            (C17123 - C17124 + C17125 - C17126) * C16930 +
            (C17127 - C17128 + C17129 - C17130) * C16925 + C17491 * C16931 +
            C17492 * C16926) *
               C50110 * C50013 * C50049) *
              C999 +
          (((C16934 - C16933 + C16936 - C16935) * C16929 +
            (C16938 - C16937 + C16940 - C16939) * C16924 +
            (C16942 - C16941 + C16944 - C16943) * C16930 +
            (C16946 - C16945 + C16948 - C16947) * C16925 + C16975 * C16931 +
            C16976 * C16926) *
               C50110 * C50013 * C997 +
           ((C17124 - C17123 + C17126 - C17125) * C16929 +
            (C17128 - C17127 + C17130 - C17129) * C16924 +
            (C17132 - C17131 + C17134 - C17133) * C16930 +
            (C17136 - C17135 + C17138 - C17137) * C16925 +
            (C17483 - C17484 + C17485 - C17486) * C16931 +
            (C17487 - C17488 + C17489 - C17490) * C16926) *
               C50110 * C50013 * C50049) *
              C1000 +
          ((C16973 * C16929 + C16974 * C16924 +
            (C16950 - C16949 + C16952 - C16951) * C16930 +
            (C16954 - C16953 + C16956 - C16955) * C16925 +
            (C16957 - C16958 + C16959 - C16960) * C16931 +
            (C16961 - C16962 + C16963 - C16964) * C16926) *
               C50110 * C50013 * C997 +
           (C17491 * C16929 + C17492 * C16924 +
            (C17484 - C17483 + C17486 - C17485) * C16930 +
            (C17488 - C17487 + C17490 - C17489) * C16925 +
            (C16927 * C289 - C16922 * C307 + C16928 * C290 - C50146 * C309) *
                C16931 +
            (C16927 * C308 - C16922 * C319 + C16928 * C310 - C50146 * C320) *
                C16926) *
               C50110 * C50013 * C50049) *
              C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
               C16929 +
           (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
               C16924 +
           (C16933 - C16934 + C16935 - C16936) * C16930 +
           (C16937 - C16938 + C16939 - C16940) * C16925 + C16973 * C16931 +
           C16974 * C16926) *
              C50110 * C50013 * C1068 +
          ((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
               C16929 +
           (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
               C16924 +
           (C17123 - C17124 + C17125 - C17126) * C16930 +
           (C17127 - C17128 + C17129 - C17130) * C16925 + C17491 * C16931 +
           C17492 * C16926) *
              C50110 * C50013 * C1069 +
          ((C16922 * C299 - C16927 * C285 + C50146 * C1077 - C16928 * C1073) *
               C16929 +
           (C16922 * C315 - C16927 * C300 + C50146 * C1085 - C16928 * C1078) *
               C16924 +
           (C17139 - C17140 + C17141 - C17142) * C16930 +
           (C17143 - C17144 + C17145 - C17146) * C16925 +
           (C17147 - C17148 + C17149 - C17150) * C16931 +
           (C17151 - C17152 + C17153 - C17154) * C16926) *
              C50110 * C50013 * C1070 +
          ((C16927 * C1073 - C16922 * C1077 + C16928 * C2453 - C50146 * C2456) *
               C16929 +
           (C16927 * C1078 - C16922 * C1085 + C16928 * C2457 - C50146 * C2462) *
               C16924 +
           (C16927 * C1074 - C16922 * C1079 + C16928 * C2454 - C50146 * C2458) *
               C16930 +
           (C16927 * C1080 - C16922 * C1086 + C16928 * C2459 - C50146 * C2463) *
               C16925 +
           (C16927 * C1075 - C16922 * C1081 + C16928 * C2455 - C50146 * C2460) *
               C16931 +
           (C16927 * C1082 - C16922 * C1087 + C16928 * C2461 - C50146 * C2464) *
               C16926) *
              C50110 * C50013 * C1071) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19680 * C129 - C19685 * C122 + C19681 * C291 - C19686 * C281 +
             C19682 * C299 - C19687 * C285 + C19683 * C1077 - C19688 * C1073) *
                C19689 +
            (C19680 * C143 - C19685 * C130 + C19681 * C311 - C19686 * C292 +
             C19682 * C315 - C19687 * C300 + C19683 * C1085 - C19688 * C1078) *
                C49950) *
               C50110 * C50013 * C997 +
           ((C19685 * C281 - C19680 * C291 + C19686 * C285 - C19681 * C299 +
             C19687 * C1073 - C19682 * C1077 + C19688 * C2453 -
             C19683 * C2456) *
                C19689 +
            (C19685 * C292 - C19680 * C311 + C19686 * C300 - C19681 * C315 +
             C19687 * C1078 - C19682 * C1085 + C19688 * C2457 -
             C19683 * C2462) *
                C49950) *
               C50110 * C50013 * C50049) *
              C999 +
          (((C19685 * C123 - C19680 * C131 + C19686 * C282 - C19681 * C293 +
             C19687 * C286 - C19682 * C301 + C19688 * C1074 - C19683 * C1079) *
                C19689 +
            (C19685 * C132 - C19680 * C144 + C19686 * C294 - C19681 * C312 +
             C19687 * C302 - C19682 * C316 + C19688 * C1080 - C19683 * C1086) *
                C49950) *
               C50110 * C50013 * C997 +
           ((C19680 * C293 - C19685 * C282 + C19681 * C301 - C19686 * C286 +
             C19682 * C1079 - C19687 * C1074 + C19683 * C2458 -
             C19688 * C2454) *
                C19689 +
            (C19680 * C312 - C19685 * C294 + C19681 * C316 - C19686 * C302 +
             C19682 * C1086 - C19687 * C1080 + C19683 * C2463 -
             C19688 * C2459) *
                C49950) *
               C50110 * C50013 * C50049) *
              C1000 +
          (((C19680 * C133 - C19685 * C124 + C19681 * C295 - C19686 * C283 +
             C19682 * C303 - C19687 * C287 + C19683 * C1081 - C19688 * C1075) *
                C19689 +
            (C19680 * C145 - C19685 * C134 + C19681 * C313 - C19686 * C296 +
             C19682 * C317 - C19687 * C304 + C19683 * C1087 - C19688 * C1082) *
                C49950) *
               C50110 * C50013 * C997 +
           ((C19685 * C283 - C19680 * C295 + C19686 * C287 - C19681 * C303 +
             C19687 * C1075 - C19682 * C1081 + C19688 * C2455 -
             C19683 * C2460) *
                C19689 +
            (C19685 * C296 - C19680 * C313 + C19686 * C304 - C19681 * C317 +
             C19687 * C1082 - C19682 * C1087 + C19688 * C2461 -
             C19683 * C2464) *
                C49950) *
               C50110 * C50013 * C50049) *
              C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C19680 * C129 - C19685 * C122 + C19681 * C291 - C19686 * C281 +
            C19682 * C299 - C19687 * C285 + C19683 * C1077 - C19688 * C1073) *
               C19689 +
           (C19680 * C143 - C19685 * C130 + C19681 * C311 - C19686 * C292 +
            C19682 * C315 - C19687 * C300 + C19683 * C1085 - C19688 * C1078) *
               C49950) *
              C50110 * C50013 * C1068 +
          ((C19685 * C281 - C19680 * C291 + C19686 * C285 - C19681 * C299 +
            C19687 * C1073 - C19682 * C1077 + C19688 * C2453 - C19683 * C2456) *
               C19689 +
           (C19685 * C292 - C19680 * C311 + C19686 * C300 - C19681 * C315 +
            C19687 * C1078 - C19682 * C1085 + C19688 * C2457 - C19683 * C2462) *
               C49950) *
              C50110 * C50013 * C1069 +
          ((C19680 * C299 - C19685 * C285 + C19681 * C1077 - C19686 * C1073 +
            C19682 * C2456 - C19687 * C2453 + C19683 * C3451 - C19688 * C3449) *
               C19689 +
           (C19680 * C315 - C19685 * C300 + C19681 * C1085 - C19686 * C1078 +
            C19682 * C2462 - C19687 * C2457 + C19683 * C3455 - C19688 * C3452) *
               C49950) *
              C50110 * C50013 * C1070 +
          ((C19685 * C1073 - C19680 * C1077 + C19686 * C2453 - C19681 * C2456 +
            C19687 * C3449 - C19682 * C3451 + C19688 * C20376 -
            C19683 * C20377) *
               C19689 +
           (C19685 * C1078 - C19680 * C1085 + C19686 * C2457 - C19681 * C2462 +
            C19687 * C3452 - C19682 * C3455 + C19688 * C20378 -
            C19683 * C20379) *
               C49950) *
              C50110 * C50013 * C1071) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[145] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                 C16929 +
             (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                 C16924 +
             (C16933 - C16934 + C16935 - C16936) * C16930 +
             (C16937 - C16938 + C16939 - C16940) * C16925 + C16973 * C16931 +
             C16974 * C16926) *
                C50110 * C1648 +
            ((C16927 * C446 - C16922 * C456 + C16928 * C867 - C50146 * C872) *
                 C16929 +
             (C16927 * C457 - C16922 * C476 + C16928 * C873 - C50146 * C882) *
                 C16924 +
             (C17301 - C17302 + C17303 - C17304) * C16930 +
             (C17305 - C17306 + C17307 - C17308) * C16925 + C17651 * C16931 +
             C17652 * C16926) *
                C50110 * C50077) *
               C50239 +
           (((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                 C16929 +
             (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                 C16924 +
             (C17123 - C17124 + C17125 - C17126) * C16930 +
             (C17127 - C17128 + C17129 - C17130) * C16925 + C17491 * C16931 +
             C17492 * C16926) *
                C50110 * C1648 +
            ((C16922 * C872 - C16927 * C867 + C50146 * C1538 - C16928 * C1534) *
                 C16929 +
             (C16922 * C882 - C16927 * C873 + C50146 * C1546 - C16928 * C1539) *
                 C16924 +
             (C17847 - C17848 + C17849 - C17850) * C16930 +
             (C17851 - C17852 + C17853 - C17854) * C16925 +
             (C17855 - C17856 + C17857 - C17858) * C16931 +
             (C17859 - C17860 + C17861 - C17862) * C16926) *
                C50110 * C50077) *
               C50049) *
              C50231 +
          ((((C16934 - C16933 + C16936 - C16935) * C16929 +
             (C16938 - C16937 + C16940 - C16939) * C16924 +
             (C16942 - C16941 + C16944 - C16943) * C16930 +
             (C16946 - C16945 + C16948 - C16947) * C16925 + C16975 * C16931 +
             C16976 * C16926) *
                C50110 * C1648 +
            ((C17302 - C17301 + C17304 - C17303) * C16929 +
             (C17306 - C17305 + C17308 - C17307) * C16924 +
             (C17310 - C17309 + C17312 - C17311) * C16930 +
             (C17314 - C17313 + C17316 - C17315) * C16925 +
             (C17643 - C17644 + C17645 - C17646) * C16931 +
             (C17647 - C17648 + C17649 - C17650) * C16926) *
                C50110 * C50077) *
               C50239 +
           (((C17124 - C17123 + C17126 - C17125) * C16929 +
             (C17128 - C17127 + C17130 - C17129) * C16924 +
             (C17132 - C17131 + C17134 - C17133) * C16930 +
             (C17136 - C17135 + C17138 - C17137) * C16925 +
             (C17483 - C17484 + C17485 - C17486) * C16931 +
             (C17487 - C17488 + C17489 - C17490) * C16926) *
                C50110 * C1648 +
            ((C17848 - C17847 + C17850 - C17849) * C16929 +
             (C17852 - C17851 + C17854 - C17853) * C16924 +
             (C17856 - C17855 + C17858 - C17857) * C16930 +
             (C17860 - C17859 + C17862 - C17861) * C16925 +
             (C16927 * C870 - C16922 * C878 + C16928 * C1537 - C50146 * C1544) *
                 C16931 +
             (C16927 * C879 - C16922 * C885 + C16928 * C1545 - C50146 * C1549) *
                 C16926) *
                C50110 * C50077) *
               C50049) *
              C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19680 * C129 - C19685 * C122 + C19681 * C291 - C19686 * C281 +
              C19682 * C299 - C19687 * C285 + C19683 * C1077 - C19688 * C1073) *
                 C19689 +
             (C19680 * C143 - C19685 * C130 + C19681 * C311 - C19686 * C292 +
              C19682 * C315 - C19687 * C300 + C19683 * C1085 - C19688 * C1078) *
                 C49950) *
                C50110 * C1648 +
            ((C19685 * C446 - C19680 * C456 + C19686 * C867 - C19681 * C872 +
              C19687 * C1534 - C19682 * C1538 + C19688 * C3181 -
              C19683 * C3184) *
                 C19689 +
             (C19685 * C457 - C19680 * C476 + C19686 * C873 - C19681 * C882 +
              C19687 * C1539 - C19682 * C1546 + C19688 * C3185 -
              C19683 * C3190) *
                 C49950) *
                C50110 * C50077) *
               C50239 +
           (((C19685 * C281 - C19680 * C291 + C19686 * C285 - C19681 * C299 +
              C19687 * C1073 - C19682 * C1077 + C19688 * C2453 -
              C19683 * C2456) *
                 C19689 +
             (C19685 * C292 - C19680 * C311 + C19686 * C300 - C19681 * C315 +
              C19687 * C1078 - C19682 * C1085 + C19688 * C2457 -
              C19683 * C2462) *
                 C49950) *
                C50110 * C1648 +
            ((C19680 * C872 - C19685 * C867 + C19681 * C1538 - C19686 * C1534 +
              C19682 * C3184 - C19687 * C3181 + C19683 * C4099 -
              C19688 * C4097) *
                 C19689 +
             (C19680 * C882 - C19685 * C873 + C19681 * C1546 - C19686 * C1539 +
              C19682 * C3190 - C19687 * C3185 + C19683 * C4103 -
              C19688 * C4100) *
                 C49950) *
                C50110 * C50077) *
               C50049) *
              C50231 +
          ((((C19685 * C123 - C19680 * C131 + C19686 * C282 - C19681 * C293 +
              C19687 * C286 - C19682 * C301 + C19688 * C1074 - C19683 * C1079) *
                 C19689 +
             (C19685 * C132 - C19680 * C144 + C19686 * C294 - C19681 * C312 +
              C19687 * C302 - C19682 * C316 + C19688 * C1080 - C19683 * C1086) *
                 C49950) *
                C50110 * C1648 +
            ((C19680 * C458 - C19685 * C447 + C19681 * C874 - C19686 * C868 +
              C19682 * C1540 - C19687 * C1535 + C19683 * C3186 -
              C19688 * C3182) *
                 C19689 +
             (C19680 * C477 - C19685 * C459 + C19681 * C883 - C19686 * C875 +
              C19682 * C1547 - C19687 * C1541 + C19683 * C3191 -
              C19688 * C3187) *
                 C49950) *
                C50110 * C50077) *
               C50239 +
           (((C19680 * C293 - C19685 * C282 + C19681 * C301 - C19686 * C286 +
              C19682 * C1079 - C19687 * C1074 + C19683 * C2458 -
              C19688 * C2454) *
                 C19689 +
             (C19680 * C312 - C19685 * C294 + C19681 * C316 - C19686 * C302 +
              C19682 * C1086 - C19687 * C1080 + C19683 * C2463 -
              C19688 * C2459) *
                 C49950) *
                C50110 * C1648 +
            ((C19685 * C868 - C19680 * C874 + C19686 * C1535 - C19681 * C1540 +
              C19687 * C3182 - C19682 * C3186 + C19688 * C4098 -
              C19683 * C4101) *
                 C19689 +
             (C19685 * C875 - C19680 * C883 + C19686 * C1541 - C19681 * C1547 +
              C19687 * C3187 - C19682 * C3191 + C19688 * C4102 -
              C19683 * C4104) *
                 C49950) *
                C50110 * C50077) *
               C50049) *
              C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[146] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                C16929 +
            (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                C16924 +
            (C16933 - C16934 + C16935 - C16936) * C16930 +
            (C16937 - C16938 + C16939 - C16940) * C16925 + C16973 * C16931 +
            C16974 * C16926) *
               C50110 * C50286 +
           ((C16927 * C446 - C16922 * C456 + C16928 * C867 - C50146 * C872) *
                C16929 +
            (C16927 * C457 - C16922 * C476 + C16928 * C873 - C50146 * C882) *
                C16924 +
            (C17301 - C17302 + C17303 - C17304) * C16930 +
            (C17305 - C17306 + C17307 - C17308) * C16925 + C17651 * C16931 +
            C17652 * C16926) *
               C50110 * C50287 +
           ((C16922 * C464 - C16927 * C450 + C50146 * C1191 - C16928 * C1187) *
                C16929 +
            (C16922 * C480 - C16927 * C465 + C50146 * C1199 - C16928 * C1192) *
                C16924 +
            (C17317 - C17318 + C17319 - C17320) * C16930 +
            (C17321 - C17322 + C17323 - C17324) * C16925 +
            (C17325 - C17326 + C17327 - C17328) * C16931 +
            (C17329 - C17330 + C17331 - C17332) * C16926) *
               C50110 * C2064) *
              C50239 +
          (((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                C16929 +
            (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                C16924 +
            (C17123 - C17124 + C17125 - C17126) * C16930 +
            (C17127 - C17128 + C17129 - C17130) * C16925 + C17491 * C16931 +
            C17492 * C16926) *
               C50110 * C50286 +
           ((C16922 * C872 - C16927 * C867 + C50146 * C1538 - C16928 * C1534) *
                C16929 +
            (C16922 * C882 - C16927 * C873 + C50146 * C1546 - C16928 * C1539) *
                C16924 +
            (C17847 - C17848 + C17849 - C17850) * C16930 +
            (C17851 - C17852 + C17853 - C17854) * C16925 +
            (C17855 - C17856 + C17857 - C17858) * C16931 +
            (C17859 - C17860 + C17861 - C17862) * C16926) *
               C50110 * C50287 +
           ((C16927 * C1187 - C16922 * C1191 + C16928 * C2635 -
             C50146 * C2638) *
                C16929 +
            (C16927 * C1192 - C16922 * C1199 + C16928 * C2639 -
             C50146 * C2644) *
                C16924 +
            (C16927 * C1188 - C16922 * C1193 + C16928 * C2636 -
             C50146 * C2640) *
                C16930 +
            (C16927 * C1194 - C16922 * C1200 + C16928 * C2641 -
             C50146 * C2645) *
                C16925 +
            (C16927 * C1189 - C16922 * C1195 + C16928 * C2637 -
             C50146 * C2642) *
                C16931 +
            (C16927 * C1196 - C16922 * C1201 + C16928 * C2643 -
             C50146 * C2646) *
                C16926) *
               C50110 * C2064) *
              C50049) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19680 * C129 - C19685 * C122 + C19681 * C291 - C19686 * C281 +
             C19682 * C299 - C19687 * C285 + C19683 * C1077 - C19688 * C1073) *
                C19689 +
            (C19680 * C143 - C19685 * C130 + C19681 * C311 - C19686 * C292 +
             C19682 * C315 - C19687 * C300 + C19683 * C1085 - C19688 * C1078) *
                C49950) *
               C50110 * C50286 +
           ((C19685 * C446 - C19680 * C456 + C19686 * C867 - C19681 * C872 +
             C19687 * C1534 - C19682 * C1538 + C19688 * C3181 -
             C19683 * C3184) *
                C19689 +
            (C19685 * C457 - C19680 * C476 + C19686 * C873 - C19681 * C882 +
             C19687 * C1539 - C19682 * C1546 + C19688 * C3185 -
             C19683 * C3190) *
                C49950) *
               C50110 * C50287 +
           ((C19680 * C464 - C19685 * C450 + C19681 * C1191 - C19686 * C1187 +
             C19682 * C2638 - C19687 * C2635 + C19683 * C3605 -
             C19688 * C3603) *
                C19689 +
            (C19680 * C480 - C19685 * C465 + C19681 * C1199 - C19686 * C1192 +
             C19682 * C2644 - C19687 * C2639 + C19683 * C3609 -
             C19688 * C3606) *
                C49950) *
               C50110 * C2064) *
              C50239 +
          (((C19685 * C281 - C19680 * C291 + C19686 * C285 - C19681 * C299 +
             C19687 * C1073 - C19682 * C1077 + C19688 * C2453 -
             C19683 * C2456) *
                C19689 +
            (C19685 * C292 - C19680 * C311 + C19686 * C300 - C19681 * C315 +
             C19687 * C1078 - C19682 * C1085 + C19688 * C2457 -
             C19683 * C2462) *
                C49950) *
               C50110 * C50286 +
           ((C19680 * C872 - C19685 * C867 + C19681 * C1538 - C19686 * C1534 +
             C19682 * C3184 - C19687 * C3181 + C19683 * C4099 -
             C19688 * C4097) *
                C19689 +
            (C19680 * C882 - C19685 * C873 + C19681 * C1546 - C19686 * C1539 +
             C19682 * C3190 - C19687 * C3185 + C19683 * C4103 -
             C19688 * C4100) *
                C49950) *
               C50110 * C50287 +
           ((C19685 * C1187 - C19680 * C1191 + C19686 * C2635 - C19681 * C2638 +
             C19687 * C3603 - C19682 * C3605 + C19688 * C20478 -
             C19683 * C20479) *
                C19689 +
            (C19685 * C1192 - C19680 * C1199 + C19686 * C2639 - C19681 * C2644 +
             C19687 * C3606 - C19682 * C3609 + C19688 * C20480 -
             C19683 * C20481) *
                C49950) *
               C50110 * C2064) *
              C50049) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[147] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                C16929 +
            (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                C16924 +
            (C16933 - C16934 + C16935 - C16936) * C16930 +
            (C16937 - C16938 + C16939 - C16940) * C16925 + C16973 * C16931 +
            C16974 * C16926) *
               C50110 * C1648 +
           ((C16927 * C446 - C16922 * C456 + C16928 * C867 - C50146 * C872) *
                C16929 +
            (C16927 * C457 - C16922 * C476 + C16928 * C873 - C50146 * C882) *
                C16924 +
            (C17301 - C17302 + C17303 - C17304) * C16930 +
            (C17305 - C17306 + C17307 - C17308) * C16925 + C17651 * C16931 +
            C17652 * C16926) *
               C50110 * C50077) *
              C276 +
          (((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                C16929 +
            (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                C16924 +
            (C17123 - C17124 + C17125 - C17126) * C16930 +
            (C17127 - C17128 + C17129 - C17130) * C16925 + C17491 * C16931 +
            C17492 * C16926) *
               C50110 * C1648 +
           ((C16922 * C872 - C16927 * C867 + C50146 * C1538 - C16928 * C1534) *
                C16929 +
            (C16922 * C882 - C16927 * C873 + C50146 * C1546 - C16928 * C1539) *
                C16924 +
            (C17847 - C17848 + C17849 - C17850) * C16930 +
            (C17851 - C17852 + C17853 - C17854) * C16925 +
            (C17855 - C17856 + C17857 - C17858) * C16931 +
            (C17859 - C17860 + C17861 - C17862) * C16926) *
               C50110 * C50077) *
              C277 +
          (((C16922 * C299 - C16927 * C285 + C50146 * C1077 - C16928 * C1073) *
                C16929 +
            (C16922 * C315 - C16927 * C300 + C50146 * C1085 - C16928 * C1078) *
                C16924 +
            (C17139 - C17140 + C17141 - C17142) * C16930 +
            (C17143 - C17144 + C17145 - C17146) * C16925 +
            (C17147 - C17148 + C17149 - C17150) * C16931 +
            (C17151 - C17152 + C17153 - C17154) * C16926) *
               C50110 * C1648 +
           ((C16927 * C1534 - C16922 * C1538 + C16928 * C3181 -
             C50146 * C3184) *
                C16929 +
            (C16927 * C1539 - C16922 * C1546 + C16928 * C3185 -
             C50146 * C3190) *
                C16924 +
            (C16927 * C1535 - C16922 * C1540 + C16928 * C3182 -
             C50146 * C3186) *
                C16930 +
            (C16927 * C1541 - C16922 * C1547 + C16928 * C3187 -
             C50146 * C3191) *
                C16925 +
            (C16927 * C1536 - C16922 * C1542 + C16928 * C3183 -
             C50146 * C3188) *
                C16931 +
            (C16927 * C1543 - C16922 * C1548 + C16928 * C3189 -
             C50146 * C3192) *
                C16926) *
               C50110 * C50077) *
              C278) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                C16929 +
            (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                C16924 +
            (C16933 - C16934 + C16935 - C16936) * C16930 +
            (C16937 - C16938 + C16939 - C16940) * C16925 + C16973 * C16931 +
            C16974 * C16926) *
               C50110 * C1648 +
           ((C16927 * C446 - C16922 * C456 + C16928 * C867 - C50146 * C872) *
                C16929 +
            (C16927 * C457 - C16922 * C476 + C16928 * C873 - C50146 * C882) *
                C16924 +
            (C17301 - C17302 + C17303 - C17304) * C16930 +
            (C17305 - C17306 + C17307 - C17308) * C16925 + C17651 * C16931 +
            C17652 * C16926) *
               C50110 * C50077) *
              C49997 * C999 +
          (((C16934 - C16933 + C16936 - C16935) * C16929 +
            (C16938 - C16937 + C16940 - C16939) * C16924 +
            (C16942 - C16941 + C16944 - C16943) * C16930 +
            (C16946 - C16945 + C16948 - C16947) * C16925 + C16975 * C16931 +
            C16976 * C16926) *
               C50110 * C1648 +
           ((C17302 - C17301 + C17304 - C17303) * C16929 +
            (C17306 - C17305 + C17308 - C17307) * C16924 +
            (C17310 - C17309 + C17312 - C17311) * C16930 +
            (C17314 - C17313 + C17316 - C17315) * C16925 +
            (C17643 - C17644 + C17645 - C17646) * C16931 +
            (C17647 - C17648 + C17649 - C17650) * C16926) *
               C50110 * C50077) *
              C49997 * C1000 +
          ((C16973 * C16929 + C16974 * C16924 +
            (C16950 - C16949 + C16952 - C16951) * C16930 +
            (C16954 - C16953 + C16956 - C16955) * C16925 +
            (C16957 - C16958 + C16959 - C16960) * C16931 +
            (C16961 - C16962 + C16963 - C16964) * C16926) *
               C50110 * C1648 +
           (C17651 * C16929 + C17652 * C16924 +
            (C17644 - C17643 + C17646 - C17645) * C16930 +
            (C17648 - C17647 + C17650 - C17649) * C16925 +
            (C16927 * C454 - C16922 * C472 + C16928 * C871 - C50146 * C880) *
                C16931 +
            (C16927 * C473 - C16922 * C484 + C16928 * C881 - C50146 * C886) *
                C16926) *
               C50110 * C50077) *
              C49997 * C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
               C16929 +
           (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
               C16924 +
           (C16933 - C16934 + C16935 - C16936) * C16930 +
           (C16937 - C16938 + C16939 - C16940) * C16925 + C16973 * C16931 +
           C16974 * C16926) *
              C50110 * C1814 +
          ((C16927 * C446 - C16922 * C456 + C16928 * C867 - C50146 * C872) *
               C16929 +
           (C16927 * C457 - C16922 * C476 + C16928 * C873 - C50146 * C882) *
               C16924 +
           (C17301 - C17302 + C17303 - C17304) * C16930 +
           (C17305 - C17306 + C17307 - C17308) * C16925 + C17651 * C16931 +
           C17652 * C16926) *
              C50110 * C1815 +
          ((C16922 * C464 - C16927 * C450 + C50146 * C1191 - C16928 * C1187) *
               C16929 +
           (C16922 * C480 - C16927 * C465 + C50146 * C1199 - C16928 * C1192) *
               C16924 +
           (C17317 - C17318 + C17319 - C17320) * C16930 +
           (C17321 - C17322 + C17323 - C17324) * C16925 +
           (C17325 - C17326 + C17327 - C17328) * C16931 +
           (C17329 - C17330 + C17331 - C17332) * C16926) *
              C50110 * C1816 +
          ((C16927 * C1818 - C16922 * C1822 + C16928 * C4495 - C50146 * C4499) *
               C16929 +
           (C16927 * C1823 - C16922 * C1830 + C16928 * C4501 - C50146 * C4507) *
               C16924 +
           (C16927 * C1819 - C16922 * C1824 + C16928 * C4497 - C50146 * C4503) *
               C16930 +
           (C16927 * C1825 - C16922 * C1831 + C16928 * C4505 - C50146 * C4509) *
               C16925 +
           (C16927 * C1820 - C16922 * C1826 + C16928 * C5962 - C50146 * C5963) *
               C16931 +
           (C16927 * C1827 - C16922 * C1832 + C16928 * C5964 - C50146 * C5965) *
               C16926) *
              C50110 * C1817) *
         C49997 * C49978) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19680 * C129 - C19685 * C122 + C19681 * C291 - C19686 * C281 +
             C19682 * C299 - C19687 * C285 + C19683 * C1077 - C19688 * C1073) *
                C19689 +
            (C19680 * C143 - C19685 * C130 + C19681 * C311 - C19686 * C292 +
             C19682 * C315 - C19687 * C300 + C19683 * C1085 - C19688 * C1078) *
                C49950) *
               C50110 * C1648 +
           ((C19685 * C446 - C19680 * C456 + C19686 * C867 - C19681 * C872 +
             C19687 * C1534 - C19682 * C1538 + C19688 * C3181 -
             C19683 * C3184) *
                C19689 +
            (C19685 * C457 - C19680 * C476 + C19686 * C873 - C19681 * C882 +
             C19687 * C1539 - C19682 * C1546 + C19688 * C3185 -
             C19683 * C3190) *
                C49950) *
               C50110 * C50077) *
              C49997 * C999 +
          (((C19685 * C123 - C19680 * C131 + C19686 * C282 - C19681 * C293 +
             C19687 * C286 - C19682 * C301 + C19688 * C1074 - C19683 * C1079) *
                C19689 +
            (C19685 * C132 - C19680 * C144 + C19686 * C294 - C19681 * C312 +
             C19687 * C302 - C19682 * C316 + C19688 * C1080 - C19683 * C1086) *
                C49950) *
               C50110 * C1648 +
           ((C19680 * C458 - C19685 * C447 + C19681 * C874 - C19686 * C868 +
             C19682 * C1540 - C19687 * C1535 + C19683 * C3186 -
             C19688 * C3182) *
                C19689 +
            (C19680 * C477 - C19685 * C459 + C19681 * C883 - C19686 * C875 +
             C19682 * C1547 - C19687 * C1541 + C19683 * C3191 -
             C19688 * C3187) *
                C49950) *
               C50110 * C50077) *
              C49997 * C1000 +
          (((C19680 * C133 - C19685 * C124 + C19681 * C295 - C19686 * C283 +
             C19682 * C303 - C19687 * C287 + C19683 * C1081 - C19688 * C1075) *
                C19689 +
            (C19680 * C145 - C19685 * C134 + C19681 * C313 - C19686 * C296 +
             C19682 * C317 - C19687 * C304 + C19683 * C1087 - C19688 * C1082) *
                C49950) *
               C50110 * C1648 +
           ((C19685 * C448 - C19680 * C460 + C19686 * C869 - C19681 * C876 +
             C19687 * C1536 - C19682 * C1542 + C19688 * C3183 -
             C19683 * C3188) *
                C19689 +
            (C19685 * C461 - C19680 * C478 + C19686 * C877 - C19681 * C884 +
             C19687 * C1543 - C19682 * C1548 + C19688 * C3189 -
             C19683 * C3192) *
                C49950) *
               C50110 * C50077) *
              C49997 * C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19680 * C129 - C19685 * C122 + C19681 * C291 - C19686 * C281 +
             C19682 * C299 - C19687 * C285 + C19683 * C1077 - C19688 * C1073) *
                C19689 +
            (C19680 * C143 - C19685 * C130 + C19681 * C311 - C19686 * C292 +
             C19682 * C315 - C19687 * C300 + C19683 * C1085 - C19688 * C1078) *
                C49950) *
               C50110 * C1648 +
           ((C19685 * C446 - C19680 * C456 + C19686 * C867 - C19681 * C872 +
             C19687 * C1534 - C19682 * C1538 + C19688 * C3181 -
             C19683 * C3184) *
                C19689 +
            (C19685 * C457 - C19680 * C476 + C19686 * C873 - C19681 * C882 +
             C19687 * C1539 - C19682 * C1546 + C19688 * C3185 -
             C19683 * C3190) *
                C49950) *
               C50110 * C50077) *
              C276 +
          (((C19685 * C281 - C19680 * C291 + C19686 * C285 - C19681 * C299 +
             C19687 * C1073 - C19682 * C1077 + C19688 * C2453 -
             C19683 * C2456) *
                C19689 +
            (C19685 * C292 - C19680 * C311 + C19686 * C300 - C19681 * C315 +
             C19687 * C1078 - C19682 * C1085 + C19688 * C2457 -
             C19683 * C2462) *
                C49950) *
               C50110 * C1648 +
           ((C19680 * C872 - C19685 * C867 + C19681 * C1538 - C19686 * C1534 +
             C19682 * C3184 - C19687 * C3181 + C19683 * C4099 -
             C19688 * C4097) *
                C19689 +
            (C19680 * C882 - C19685 * C873 + C19681 * C1546 - C19686 * C1539 +
             C19682 * C3190 - C19687 * C3185 + C19683 * C4103 -
             C19688 * C4100) *
                C49950) *
               C50110 * C50077) *
              C277 +
          (((C19680 * C299 - C19685 * C285 + C19681 * C1077 - C19686 * C1073 +
             C19682 * C2456 - C19687 * C2453 + C19683 * C3451 -
             C19688 * C3449) *
                C19689 +
            (C19680 * C315 - C19685 * C300 + C19681 * C1085 - C19686 * C1078 +
             C19682 * C2462 - C19687 * C2457 + C19683 * C3455 -
             C19688 * C3452) *
                C49950) *
               C50110 * C1648 +
           ((C19685 * C1534 - C19680 * C1538 + C19686 * C3181 - C19681 * C3184 +
             C19687 * C4097 - C19682 * C4099 + C19688 * C20808 -
             C19683 * C20809) *
                C19689 +
            (C19685 * C1539 - C19680 * C1546 + C19686 * C3185 - C19681 * C3190 +
             C19687 * C4100 - C19682 * C4103 + C19688 * C20810 -
             C19683 * C20811) *
                C49950) *
               C50110 * C50077) *
              C278) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C19680 * C129 - C19685 * C122 + C19681 * C291 - C19686 * C281 +
            C19682 * C299 - C19687 * C285 + C19683 * C1077 - C19688 * C1073) *
               C19689 +
           (C19680 * C143 - C19685 * C130 + C19681 * C311 - C19686 * C292 +
            C19682 * C315 - C19687 * C300 + C19683 * C1085 - C19688 * C1078) *
               C49950) *
              C50110 * C1814 +
          ((C19685 * C446 - C19680 * C456 + C19686 * C867 - C19681 * C872 +
            C19687 * C1534 - C19682 * C1538 + C19688 * C3181 - C19683 * C3184) *
               C19689 +
           (C19685 * C457 - C19680 * C476 + C19686 * C873 - C19681 * C882 +
            C19687 * C1539 - C19682 * C1546 + C19688 * C3185 - C19683 * C3190) *
               C49950) *
              C50110 * C1815 +
          ((C19680 * C464 - C19685 * C450 + C19681 * C1191 - C19686 * C1187 +
            C19682 * C2638 - C19687 * C2635 + C19683 * C3605 - C19688 * C3603) *
               C19689 +
           (C19680 * C480 - C19685 * C465 + C19681 * C1199 - C19686 * C1192 +
            C19682 * C2644 - C19687 * C2639 + C19683 * C3609 - C19688 * C3606) *
               C49950) *
              C50110 * C1816 +
          ((C19685 * C1818 - C19680 * C1822 + C19686 * C4495 - C19681 * C4499 +
            C19687 * C4496 - C19682 * C4500 + C19688 * C21074 -
            C19683 * C21075) *
               C19689 +
           (C19685 * C1823 - C19680 * C1830 + C19686 * C4501 - C19681 * C4507 +
            C19687 * C4502 - C19682 * C4508 + C19688 * C21076 -
            C19683 * C21077) *
               C49950) *
              C50110 * C1817) *
         C49997 * C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[148] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                C16929 +
            (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                C16924 +
            (C16933 - C16934 + C16935 - C16936) * C16930 +
            (C16937 - C16938 + C16939 - C16940) * C16925 + C16973 * C16931 +
            C16974 * C16926) *
               C50110 * C50286 +
           ((C16927 * C446 - C16922 * C456 + C16928 * C867 - C50146 * C872) *
                C16929 +
            (C16927 * C457 - C16922 * C476 + C16928 * C873 - C50146 * C882) *
                C16924 +
            (C17301 - C17302 + C17303 - C17304) * C16930 +
            (C17305 - C17306 + C17307 - C17308) * C16925 + C17651 * C16931 +
            C17652 * C16926) *
               C50110 * C50287 +
           ((C16922 * C464 - C16927 * C450 + C50146 * C1191 - C16928 * C1187) *
                C16929 +
            (C16922 * C480 - C16927 * C465 + C50146 * C1199 - C16928 * C1192) *
                C16924 +
            (C17317 - C17318 + C17319 - C17320) * C16930 +
            (C17321 - C17322 + C17323 - C17324) * C16925 +
            (C17325 - C17326 + C17327 - C17328) * C16931 +
            (C17329 - C17330 + C17331 - C17332) * C16926) *
               C50110 * C2064) *
              C49997 * C50231 +
          (((C16934 - C16933 + C16936 - C16935) * C16929 +
            (C16938 - C16937 + C16940 - C16939) * C16924 +
            (C16942 - C16941 + C16944 - C16943) * C16930 +
            (C16946 - C16945 + C16948 - C16947) * C16925 + C16975 * C16931 +
            C16976 * C16926) *
               C50110 * C50286 +
           ((C17302 - C17301 + C17304 - C17303) * C16929 +
            (C17306 - C17305 + C17308 - C17307) * C16924 +
            (C17310 - C17309 + C17312 - C17311) * C16930 +
            (C17314 - C17313 + C17316 - C17315) * C16925 +
            (C17643 - C17644 + C17645 - C17646) * C16931 +
            (C17647 - C17648 + C17649 - C17650) * C16926) *
               C50110 * C50287 +
           ((C17318 - C17317 + C17320 - C17319) * C16929 +
            (C17322 - C17321 + C17324 - C17323) * C16924 +
            (C17326 - C17325 + C17328 - C17327) * C16930 +
            (C17330 - C17329 + C17332 - C17331) * C16925 +
            (C16927 * C453 - C16922 * C470 + C16928 * C1190 - C50146 * C1197) *
                C16931 +
            (C16927 * C471 - C16922 * C483 + C16928 * C1198 - C50146 * C1202) *
                C16926) *
               C50110 * C2064) *
              C49997 * C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19680 * C129 - C19685 * C122 + C19681 * C291 - C19686 * C281 +
             C19682 * C299 - C19687 * C285 + C19683 * C1077 - C19688 * C1073) *
                C19689 +
            (C19680 * C143 - C19685 * C130 + C19681 * C311 - C19686 * C292 +
             C19682 * C315 - C19687 * C300 + C19683 * C1085 - C19688 * C1078) *
                C49950) *
               C50110 * C50286 +
           ((C19685 * C446 - C19680 * C456 + C19686 * C867 - C19681 * C872 +
             C19687 * C1534 - C19682 * C1538 + C19688 * C3181 -
             C19683 * C3184) *
                C19689 +
            (C19685 * C457 - C19680 * C476 + C19686 * C873 - C19681 * C882 +
             C19687 * C1539 - C19682 * C1546 + C19688 * C3185 -
             C19683 * C3190) *
                C49950) *
               C50110 * C50287 +
           ((C19680 * C464 - C19685 * C450 + C19681 * C1191 - C19686 * C1187 +
             C19682 * C2638 - C19687 * C2635 + C19683 * C3605 -
             C19688 * C3603) *
                C19689 +
            (C19680 * C480 - C19685 * C465 + C19681 * C1199 - C19686 * C1192 +
             C19682 * C2644 - C19687 * C2639 + C19683 * C3609 -
             C19688 * C3606) *
                C49950) *
               C50110 * C2064) *
              C49997 * C50231 +
          (((C19685 * C123 - C19680 * C131 + C19686 * C282 - C19681 * C293 +
             C19687 * C286 - C19682 * C301 + C19688 * C1074 - C19683 * C1079) *
                C19689 +
            (C19685 * C132 - C19680 * C144 + C19686 * C294 - C19681 * C312 +
             C19687 * C302 - C19682 * C316 + C19688 * C1080 - C19683 * C1086) *
                C49950) *
               C50110 * C50286 +
           ((C19680 * C458 - C19685 * C447 + C19681 * C874 - C19686 * C868 +
             C19682 * C1540 - C19687 * C1535 + C19683 * C3186 -
             C19688 * C3182) *
                C19689 +
            (C19680 * C477 - C19685 * C459 + C19681 * C883 - C19686 * C875 +
             C19682 * C1547 - C19687 * C1541 + C19683 * C3191 -
             C19688 * C3187) *
                C49950) *
               C50110 * C50287 +
           ((C19685 * C451 - C19680 * C466 + C19686 * C1188 - C19681 * C1193 +
             C19687 * C2636 - C19682 * C2640 + C19688 * C3604 -
             C19683 * C3607) *
                C19689 +
            (C19685 * C467 - C19680 * C481 + C19686 * C1194 - C19681 * C1200 +
             C19687 * C2641 - C19682 * C2645 + C19688 * C3608 -
             C19683 * C3610) *
                C49950) *
               C50110 * C2064) *
              C49997 * C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[149] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                C16929 +
            (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                C16924 +
            (C16933 - C16934 + C16935 - C16936) * C16930 +
            (C16937 - C16938 + C16939 - C16940) * C16925 + C16973 * C16931 +
            C16974 * C16926) *
               C50110 * C1648 +
           ((C16927 * C446 - C16922 * C456 + C16928 * C867 - C50146 * C872) *
                C16929 +
            (C16927 * C457 - C16922 * C476 + C16928 * C873 - C50146 * C882) *
                C16924 +
            (C17301 - C17302 + C17303 - C17304) * C16930 +
            (C17305 - C17306 + C17307 - C17308) * C16925 + C17651 * C16931 +
            C17652 * C16926) *
               C50110 * C50077) *
              C49997 * C999 +
          (((C16934 - C16933 + C16936 - C16935) * C16929 +
            (C16938 - C16937 + C16940 - C16939) * C16924 +
            (C16942 - C16941 + C16944 - C16943) * C16930 +
            (C16946 - C16945 + C16948 - C16947) * C16925 + C16975 * C16931 +
            C16976 * C16926) *
               C50110 * C1648 +
           ((C17302 - C17301 + C17304 - C17303) * C16929 +
            (C17306 - C17305 + C17308 - C17307) * C16924 +
            (C17310 - C17309 + C17312 - C17311) * C16930 +
            (C17314 - C17313 + C17316 - C17315) * C16925 +
            (C17643 - C17644 + C17645 - C17646) * C16931 +
            (C17647 - C17648 + C17649 - C17650) * C16926) *
               C50110 * C50077) *
              C49997 * C1000 +
          ((C16973 * C16929 + C16974 * C16924 +
            (C16950 - C16949 + C16952 - C16951) * C16930 +
            (C16954 - C16953 + C16956 - C16955) * C16925 +
            (C16957 - C16958 + C16959 - C16960) * C16931 +
            (C16961 - C16962 + C16963 - C16964) * C16926) *
               C50110 * C1648 +
           (C17651 * C16929 + C17652 * C16924 +
            (C17644 - C17643 + C17646 - C17645) * C16930 +
            (C17648 - C17647 + C17650 - C17649) * C16925 +
            (C16927 * C454 - C16922 * C472 + C16928 * C871 - C50146 * C880) *
                C16931 +
            (C16927 * C473 - C16922 * C484 + C16928 * C881 - C50146 * C886) *
                C16926) *
               C50110 * C50077) *
              C49997 * C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C16922 * C129 - C16927 * C122 + C50146 * C291 - C16928 * C281) *
                C16929 +
            (C16922 * C143 - C16927 * C130 + C50146 * C311 - C16928 * C292) *
                C16924 +
            (C16933 - C16934 + C16935 - C16936) * C16930 +
            (C16937 - C16938 + C16939 - C16940) * C16925 + C16973 * C16931 +
            C16974 * C16926) *
               C50110 * C1648 +
           ((C16927 * C446 - C16922 * C456 + C16928 * C867 - C50146 * C872) *
                C16929 +
            (C16927 * C457 - C16922 * C476 + C16928 * C873 - C50146 * C882) *
                C16924 +
            (C17301 - C17302 + C17303 - C17304) * C16930 +
            (C17305 - C17306 + C17307 - C17308) * C16925 + C17651 * C16931 +
            C17652 * C16926) *
               C50110 * C50077) *
              C276 +
          (((C16927 * C281 - C16922 * C291 + C16928 * C285 - C50146 * C299) *
                C16929 +
            (C16927 * C292 - C16922 * C311 + C16928 * C300 - C50146 * C315) *
                C16924 +
            (C17123 - C17124 + C17125 - C17126) * C16930 +
            (C17127 - C17128 + C17129 - C17130) * C16925 + C17491 * C16931 +
            C17492 * C16926) *
               C50110 * C1648 +
           ((C16922 * C872 - C16927 * C867 + C50146 * C1538 - C16928 * C1534) *
                C16929 +
            (C16922 * C882 - C16927 * C873 + C50146 * C1546 - C16928 * C1539) *
                C16924 +
            (C17847 - C17848 + C17849 - C17850) * C16930 +
            (C17851 - C17852 + C17853 - C17854) * C16925 +
            (C17855 - C17856 + C17857 - C17858) * C16931 +
            (C17859 - C17860 + C17861 - C17862) * C16926) *
               C50110 * C50077) *
              C277 +
          (((C16922 * C299 - C16927 * C285 + C50146 * C1077 - C16928 * C1073) *
                C16929 +
            (C16922 * C315 - C16927 * C300 + C50146 * C1085 - C16928 * C1078) *
                C16924 +
            (C17139 - C17140 + C17141 - C17142) * C16930 +
            (C17143 - C17144 + C17145 - C17146) * C16925 +
            (C17147 - C17148 + C17149 - C17150) * C16931 +
            (C17151 - C17152 + C17153 - C17154) * C16926) *
               C50110 * C1648 +
           ((C16927 * C1534 - C16922 * C1538 + C16928 * C3181 -
             C50146 * C3184) *
                C16929 +
            (C16927 * C1539 - C16922 * C1546 + C16928 * C3185 -
             C50146 * C3190) *
                C16924 +
            (C16927 * C1535 - C16922 * C1540 + C16928 * C3182 -
             C50146 * C3186) *
                C16930 +
            (C16927 * C1541 - C16922 * C1547 + C16928 * C3187 -
             C50146 * C3191) *
                C16925 +
            (C16927 * C1536 - C16922 * C1542 + C16928 * C3183 -
             C50146 * C3188) *
                C16931 +
            (C16927 * C1543 - C16922 * C1548 + C16928 * C3189 -
             C50146 * C3192) *
                C16926) *
               C50110 * C50077) *
              C278) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19680 * C129 - C19685 * C122 + C19681 * C291 - C19686 * C281 +
             C19682 * C299 - C19687 * C285 + C19683 * C1077 - C19688 * C1073) *
                C19689 +
            (C19680 * C143 - C19685 * C130 + C19681 * C311 - C19686 * C292 +
             C19682 * C315 - C19687 * C300 + C19683 * C1085 - C19688 * C1078) *
                C49950) *
               C50110 * C1648 +
           ((C19685 * C446 - C19680 * C456 + C19686 * C867 - C19681 * C872 +
             C19687 * C1534 - C19682 * C1538 + C19688 * C3181 -
             C19683 * C3184) *
                C19689 +
            (C19685 * C457 - C19680 * C476 + C19686 * C873 - C19681 * C882 +
             C19687 * C1539 - C19682 * C1546 + C19688 * C3185 -
             C19683 * C3190) *
                C49950) *
               C50110 * C50077) *
              C49997 * C999 +
          (((C19685 * C123 - C19680 * C131 + C19686 * C282 - C19681 * C293 +
             C19687 * C286 - C19682 * C301 + C19688 * C1074 - C19683 * C1079) *
                C19689 +
            (C19685 * C132 - C19680 * C144 + C19686 * C294 - C19681 * C312 +
             C19687 * C302 - C19682 * C316 + C19688 * C1080 - C19683 * C1086) *
                C49950) *
               C50110 * C1648 +
           ((C19680 * C458 - C19685 * C447 + C19681 * C874 - C19686 * C868 +
             C19682 * C1540 - C19687 * C1535 + C19683 * C3186 -
             C19688 * C3182) *
                C19689 +
            (C19680 * C477 - C19685 * C459 + C19681 * C883 - C19686 * C875 +
             C19682 * C1547 - C19687 * C1541 + C19683 * C3191 -
             C19688 * C3187) *
                C49950) *
               C50110 * C50077) *
              C49997 * C1000 +
          (((C19680 * C133 - C19685 * C124 + C19681 * C295 - C19686 * C283 +
             C19682 * C303 - C19687 * C287 + C19683 * C1081 - C19688 * C1075) *
                C19689 +
            (C19680 * C145 - C19685 * C134 + C19681 * C313 - C19686 * C296 +
             C19682 * C317 - C19687 * C304 + C19683 * C1087 - C19688 * C1082) *
                C49950) *
               C50110 * C1648 +
           ((C19685 * C448 - C19680 * C460 + C19686 * C869 - C19681 * C876 +
             C19687 * C1536 - C19682 * C1542 + C19688 * C3183 -
             C19683 * C3188) *
                C19689 +
            (C19685 * C461 - C19680 * C478 + C19686 * C877 - C19681 * C884 +
             C19687 * C1543 - C19682 * C1548 + C19688 * C3189 -
             C19683 * C3192) *
                C49950) *
               C50110 * C50077) *
              C49997 * C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19680 * C129 - C19685 * C122 + C19681 * C291 - C19686 * C281 +
             C19682 * C299 - C19687 * C285 + C19683 * C1077 - C19688 * C1073) *
                C19689 +
            (C19680 * C143 - C19685 * C130 + C19681 * C311 - C19686 * C292 +
             C19682 * C315 - C19687 * C300 + C19683 * C1085 - C19688 * C1078) *
                C49950) *
               C50110 * C1648 +
           ((C19685 * C446 - C19680 * C456 + C19686 * C867 - C19681 * C872 +
             C19687 * C1534 - C19682 * C1538 + C19688 * C3181 -
             C19683 * C3184) *
                C19689 +
            (C19685 * C457 - C19680 * C476 + C19686 * C873 - C19681 * C882 +
             C19687 * C1539 - C19682 * C1546 + C19688 * C3185 -
             C19683 * C3190) *
                C49950) *
               C50110 * C50077) *
              C276 +
          (((C19685 * C281 - C19680 * C291 + C19686 * C285 - C19681 * C299 +
             C19687 * C1073 - C19682 * C1077 + C19688 * C2453 -
             C19683 * C2456) *
                C19689 +
            (C19685 * C292 - C19680 * C311 + C19686 * C300 - C19681 * C315 +
             C19687 * C1078 - C19682 * C1085 + C19688 * C2457 -
             C19683 * C2462) *
                C49950) *
               C50110 * C1648 +
           ((C19680 * C872 - C19685 * C867 + C19681 * C1538 - C19686 * C1534 +
             C19682 * C3184 - C19687 * C3181 + C19683 * C4099 -
             C19688 * C4097) *
                C19689 +
            (C19680 * C882 - C19685 * C873 + C19681 * C1546 - C19686 * C1539 +
             C19682 * C3190 - C19687 * C3185 + C19683 * C4103 -
             C19688 * C4100) *
                C49950) *
               C50110 * C50077) *
              C277 +
          (((C19680 * C299 - C19685 * C285 + C19681 * C1077 - C19686 * C1073 +
             C19682 * C2456 - C19687 * C2453 + C19683 * C3451 -
             C19688 * C3449) *
                C19689 +
            (C19680 * C315 - C19685 * C300 + C19681 * C1085 - C19686 * C1078 +
             C19682 * C2462 - C19687 * C2457 + C19683 * C3455 -
             C19688 * C3452) *
                C49950) *
               C50110 * C1648 +
           ((C19685 * C1534 - C19680 * C1538 + C19686 * C3181 - C19681 * C3184 +
             C19687 * C4097 - C19682 * C4099 + C19688 * C20808 -
             C19683 * C20809) *
                C19689 +
            (C19685 * C1539 - C19680 * C1546 + C19686 * C3185 - C19681 * C3190 +
             C19687 * C4100 - C19682 * C4103 + C19688 * C20810 -
             C19683 * C20811) *
                C49950) *
               C50110 * C50077) *
              C278) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[150] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C49175 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C50224 +
             (C7897 - C7898 + C7899 - C7900) * C49168 +
             (C7901 - C7902 + C7903 - C7904) * C49955) *
                C33256 +
            ((C13745 - C13746 + C13747 - C13748) * C49175 +
             (C13749 - C13750 + C13751 - C13752) * C50224 + C13785 * C49168 +
             C13786 * C49955) *
                C50174) *
               C50013 * C50239 +
           (((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                 C49175 +
             (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                 C50224 +
             (C8087 - C8088 + C8089 - C8090) * C49168 +
             (C8091 - C8092 + C8093 - C8094) * C49955) *
                C33256 +
            ((C14445 - C14446 + C14447 - C14448) * C49175 +
             (C14449 - C14450 + C14451 - C14452) * C50224 + C14469 * C49168 +
             C14470 * C49955) *
                C50174) *
               C50013 * C50049) *
              C50282 +
          ((((C7898 - C7897 + C7900 - C7899) * C49175 +
             (C7902 - C7901 + C7904 - C7903) * C50224 +
             (C7906 - C7905 + C7908 - C7907) * C49168 +
             (C7910 - C7909 + C7912 - C7911) * C49955) *
                C33256 +
            (C13787 * C49175 + C13788 * C50224 + C8615 * C49168 +
             C8616 * C49955) *
                C50174) *
               C50013 * C50239 +
           (((C8088 - C8087 + C8090 - C8089) * C49175 +
             (C8092 - C8091 + C8094 - C8093) * C50224 +
             (C8096 - C8095 + C8098 - C8097) * C49168 +
             (C8100 - C8099 + C8102 - C8101) * C49955) *
                C33256 +
            (C14471 * C49175 + C14472 * C50224 +
             (C8819 - C8820 + C8821 - C8822) * C49168 +
             (C8823 - C8824 + C8825 - C8826) * C49955) *
                C50174) *
               C50013 * C50049) *
              C50283 +
          (((C7937 * C49175 + C7938 * C50224 +
             (C7914 - C7913 + C7916 - C7915) * C49168 +
             (C7918 - C7917 + C7920 - C7919) * C49955) *
                C33256 +
            (C14185 * C49175 + C14186 * C50224 +
             (C8607 - C8608 + C8609 - C8610) * C49168 +
             (C8611 - C8612 + C8613 - C8614) * C49955) *
                C50174) *
               C50013 * C50239 +
           ((C8455 * C49175 + C8456 * C50224 +
             (C8448 - C8447 + C8450 - C8449) * C49168 +
             (C8452 - C8451 + C8454 - C8453) * C49955) *
                C33256 +
            ((C8820 - C8819 + C8822 - C8821) * C49175 +
             (C8824 - C8823 + C8826 - C8825) * C50224 +
             (C7891 * C870 - C50252 * C878 + C7892 * C1537 - C50146 * C1544) *
                 C49168 +
             (C7891 * C879 - C50252 * C885 + C7892 * C1545 - C50146 * C1549) *
                 C49955) *
                C50174) *
               C50013 * C50049) *
              C612)) /
        (p * q * std::sqrt(p + q));
    d2ee[151] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                  C49175 +
              (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                  C50224 +
              (C7897 - C7898 + C7899 - C7900) * C49168 +
              (C7901 - C7902 + C7903 - C7904) * C49955) *
                 C33256 +
             ((C13745 - C13746 + C13747 - C13748) * C49175 +
              (C13749 - C13750 + C13751 - C13752) * C50224 + C13785 * C49168 +
              C13786 * C49955) *
                 C50174) *
                C50240 +
            (((C13746 - C13745 + C13748 - C13747) * C49175 +
              (C13750 - C13749 + C13752 - C13751) * C50224 + C13787 * C49168 +
              C13788 * C49955) *
                 C33256 +
             ((C13761 - C13762 + C13763 - C13764) * C49175 +
              (C13765 - C13766 + C13767 - C13768) * C50224 + C13789 * C49168 +
              C13790 * C49955) *
                 C50174) *
                C50077) *
               C50239 +
           ((((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                  C49175 +
              (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                  C50224 +
              (C8087 - C8088 + C8089 - C8090) * C49168 +
              (C8091 - C8092 + C8093 - C8094) * C49955) *
                 C33256 +
             ((C14445 - C14446 + C14447 - C14448) * C49175 +
              (C14449 - C14450 + C14451 - C14452) * C50224 + C14469 * C49168 +
              C14470 * C49955) *
                 C50174) *
                C50240 +
            (((C14446 - C14445 + C14448 - C14447) * C49175 +
              (C14450 - C14449 + C14452 - C14451) * C50224 + C14471 * C49168 +
              C14472 * C49955) *
                 C33256 +
             ((C14991 - C14992 + C14993 - C14994) * C49175 +
              (C14995 - C14996 + C14997 - C14998) * C50224 +
              (C14461 - C14462 + C14463 - C14464) * C49168 +
              (C14465 - C14466 + C14467 - C14468) * C49955) *
                 C50174) *
                C50077) *
               C50049) *
              C279 +
          (((((C7898 - C7897 + C7900 - C7899) * C49175 +
              (C7902 - C7901 + C7904 - C7903) * C50224 +
              (C7906 - C7905 + C7908 - C7907) * C49168 +
              (C7910 - C7909 + C7912 - C7911) * C49955) *
                 C33256 +
             (C13787 * C49175 + C13788 * C50224 + C8615 * C49168 +
              C8616 * C49955) *
                 C50174) *
                C50240 +
            ((C13785 * C49175 + C13786 * C50224 + C14185 * C49168 +
              C14186 * C49955) *
                 C33256 +
             (C13791 * C49175 + C13792 * C50224 +
              (C8289 - C8290 + C8291 - C8292) * C49168 +
              (C8293 - C8294 + C8295 - C8296) * C49955) *
                 C50174) *
                C50077) *
               C50239 +
           ((((C8088 - C8087 + C8090 - C8089) * C49175 +
              (C8092 - C8091 + C8094 - C8093) * C50224 +
              (C8096 - C8095 + C8098 - C8097) * C49168 +
              (C8100 - C8099 + C8102 - C8101) * C49955) *
                 C33256 +
             (C14471 * C49175 + C14472 * C50224 +
              (C8819 - C8820 + C8821 - C8822) * C49168 +
              (C8823 - C8824 + C8825 - C8826) * C49955) *
                 C50174) *
                C50240 +
            ((C14469 * C49175 + C14470 * C50224 +
              (C8820 - C8819 + C8822 - C8821) * C49168 +
              (C8824 - C8823 + C8826 - C8825) * C49955) *
                 C33256 +
             ((C14462 - C14461 + C14464 - C14463) * C49175 +
              (C14466 - C14465 + C14468 - C14467) * C50224 +
              (C7891 * C1189 - C50252 * C1195 + C7892 * C2637 -
               C50146 * C2642) *
                  C49168 +
              (C7891 * C1196 - C50252 * C1201 + C7892 * C2643 -
               C50146 * C2646) *
                  C49955) *
                 C50174) *
                C50077) *
               C50049) *
              C49984)) /
        (p * q * std::sqrt(p + q));
    d2ee[152] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C49175 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C50224 +
             (C7897 - C7898 + C7899 - C7900) * C49168 +
             (C7901 - C7902 + C7903 - C7904) * C49955) *
                C33256 +
            ((C13745 - C13746 + C13747 - C13748) * C49175 +
             (C13749 - C13750 + C13751 - C13752) * C50224 + C13785 * C49168 +
             C13786 * C49955) *
                C50174) *
               C50013 * C276 +
           (((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                 C49175 +
             (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                 C50224 +
             (C8087 - C8088 + C8089 - C8090) * C49168 +
             (C8091 - C8092 + C8093 - C8094) * C49955) *
                C33256 +
            ((C14445 - C14446 + C14447 - C14448) * C49175 +
             (C14449 - C14450 + C14451 - C14452) * C50224 + C14469 * C49168 +
             C14470 * C49955) *
                C50174) *
               C50013 * C277 +
           (((C50252 * C299 - C7891 * C285 + C50146 * C1077 - C7892 * C1073) *
                 C49175 +
             (C50252 * C315 - C7891 * C300 + C50146 * C1085 - C7892 * C1078) *
                 C50224 +
             (C8103 - C8104 + C8105 - C8106) * C49168 +
             (C8107 - C8108 + C8109 - C8110) * C49955) *
                C33256 +
            ((C15645 - C15646 + C15647 - C15648) * C49175 +
             (C15649 - C15650 + C15651 - C15652) * C50224 +
             (C13543 - C13544 + C13545 - C13546) * C49168 +
             (C13547 - C13548 + C13549 - C13550) * C49955) *
                C50174) *
               C50013 * C278) *
              C279 +
          ((((C7898 - C7897 + C7900 - C7899) * C49175 +
             (C7902 - C7901 + C7904 - C7903) * C50224 +
             (C7906 - C7905 + C7908 - C7907) * C49168 +
             (C7910 - C7909 + C7912 - C7911) * C49955) *
                C33256 +
            (C13787 * C49175 + C13788 * C50224 + C8615 * C49168 +
             C8616 * C49955) *
                C50174) *
               C50013 * C276 +
           (((C8088 - C8087 + C8090 - C8089) * C49175 +
             (C8092 - C8091 + C8094 - C8093) * C50224 +
             (C8096 - C8095 + C8098 - C8097) * C49168 +
             (C8100 - C8099 + C8102 - C8101) * C49955) *
                C33256 +
            (C14471 * C49175 + C14472 * C50224 +
             (C8819 - C8820 + C8821 - C8822) * C49168 +
             (C8823 - C8824 + C8825 - C8826) * C49955) *
                C50174) *
               C50013 * C277 +
           (((C8104 - C8103 + C8106 - C8105) * C49175 +
             (C8108 - C8107 + C8110 - C8109) * C50224 +
             (C8112 - C8111 + C8114 - C8113) * C49168 +
             (C8116 - C8115 + C8118 - C8117) * C49955) *
                C33256 +
            ((C13544 - C13543 + C13546 - C13545) * C49175 +
             (C13548 - C13547 + C13550 - C13549) * C50224 +
             (C7891 * C1536 - C50252 * C1542 + C7892 * C3183 - C50146 * C3188) *
                 C49168 +
             (C7891 * C1543 - C50252 * C1548 + C7892 * C3189 - C50146 * C3192) *
                 C49955) *
                C50174) *
               C50013 * C278) *
              C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                C49175 +
            (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                C50224 +
            (C7897 - C7898 + C7899 - C7900) * C49168 +
            (C7901 - C7902 + C7903 - C7904) * C49955) *
               C33256 +
           ((C13745 - C13746 + C13747 - C13748) * C49175 +
            (C13749 - C13750 + C13751 - C13752) * C50224 + C13785 * C49168 +
            C13786 * C49955) *
               C50174) *
              C50013 * C49997 * C113 +
          (((C7898 - C7897 + C7900 - C7899) * C49175 +
            (C7902 - C7901 + C7904 - C7903) * C50224 +
            (C7906 - C7905 + C7908 - C7907) * C49168 +
            (C7910 - C7909 + C7912 - C7911) * C49955) *
               C33256 +
           (C13787 * C49175 + C13788 * C50224 + C8615 * C49168 +
            C8616 * C49955) *
               C50174) *
              C50013 * C49997 * C114 +
          ((C7937 * C49175 + C7938 * C50224 +
            (C7914 - C7913 + C7916 - C7915) * C49168 +
            (C7918 - C7917 + C7920 - C7919) * C49955) *
               C33256 +
           (C14185 * C49175 + C14186 * C50224 +
            (C8607 - C8608 + C8609 - C8610) * C49168 +
            (C8611 - C8612 + C8613 - C8614) * C49955) *
               C50174) *
              C50013 * C49997 * C115 +
          ((C7939 * C49175 + C7940 * C50224 +
            (C7922 - C7921 + C7924 - C7923) * C49168 +
            (C7926 - C7925 + C7928 - C7927) * C49955) *
               C33256 +
           ((C8608 - C8607 + C8610 - C8609) * C49175 +
            (C8612 - C8611 + C8614 - C8613) * C50224 +
            (C7891 * C454 - C50252 * C472 + C7892 * C871 - C50146 * C880) *
                C49168 +
            (C7891 * C473 - C50252 * C484 + C7892 * C881 - C50146 * C886) *
                C49955) *
               C50174) *
              C50013 * C49997 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C49175 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C50224 +
             (C7897 - C7898 + C7899 - C7900) * C49168 +
             (C7901 - C7902 + C7903 - C7904) * C49955) *
                C33256 +
            ((C13745 - C13746 + C13747 - C13748) * C49175 +
             (C13749 - C13750 + C13751 - C13752) * C50224 + C13785 * C49168 +
             C13786 * C49955) *
                C50174) *
               C443 +
           (((C13746 - C13745 + C13748 - C13747) * C49175 +
             (C13750 - C13749 + C13752 - C13751) * C50224 + C13787 * C49168 +
             C13788 * C49955) *
                C33256 +
            ((C13761 - C13762 + C13763 - C13764) * C49175 +
             (C13765 - C13766 + C13767 - C13768) * C50224 + C13789 * C49168 +
             C13790 * C49955) *
                C50174) *
               C444 +
           (((C13762 - C13761 + C13764 - C13763) * C49175 +
             (C13766 - C13765 + C13768 - C13767) * C50224 + C13791 * C49168 +
             C13792 * C49955) *
                C33256 +
            ((C16171 - C16172 + C16173 - C16174) * C49175 +
             (C16175 - C16176 + C16177 - C16178) * C50224 +
             (C13777 - C13778 + C13779 - C13780) * C49168 +
             (C13781 - C13782 + C13783 - C13784) * C49955) *
                C50174) *
               C445) *
              C49997 * C279 +
          ((((C7898 - C7897 + C7900 - C7899) * C49175 +
             (C7902 - C7901 + C7904 - C7903) * C50224 +
             (C7906 - C7905 + C7908 - C7907) * C49168 +
             (C7910 - C7909 + C7912 - C7911) * C49955) *
                C33256 +
            (C13787 * C49175 + C13788 * C50224 + C8615 * C49168 +
             C8616 * C49955) *
                C50174) *
               C443 +
           ((C13785 * C49175 + C13786 * C50224 + C14185 * C49168 +
             C14186 * C49955) *
                C33256 +
            (C13791 * C49175 + C13792 * C50224 +
             (C8289 - C8290 + C8291 - C8292) * C49168 +
             (C8293 - C8294 + C8295 - C8296) * C49955) *
                C50174) *
               C444 +
           ((C13789 * C49175 + C13790 * C50224 +
             (C8290 - C8289 + C8292 - C8291) * C49168 +
             (C8294 - C8293 + C8296 - C8295) * C49955) *
                C33256 +
            ((C13778 - C13777 + C13780 - C13779) * C49175 +
             (C13782 - C13781 + C13784 - C13783) * C50224 +
             (C7891 * C1820 - C50252 * C1826 + C7892 * C5962 - C50146 * C5963) *
                 C49168 +
             (C7891 * C1827 - C50252 * C1832 + C7892 * C5964 - C50146 * C5965) *
                 C49955) *
                C50174) *
               C445) *
              C49997 * C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[153] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C49175 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C50224 +
             (C7897 - C7898 + C7899 - C7900) * C49168 +
             (C7901 - C7902 + C7903 - C7904) * C49955) *
                C33256 +
            ((C13745 - C13746 + C13747 - C13748) * C49175 +
             (C13749 - C13750 + C13751 - C13752) * C50224 + C13785 * C49168 +
             C13786 * C49955) *
                C50174) *
               C50240 +
           (((C13746 - C13745 + C13748 - C13747) * C49175 +
             (C13750 - C13749 + C13752 - C13751) * C50224 + C13787 * C49168 +
             C13788 * C49955) *
                C33256 +
            ((C13761 - C13762 + C13763 - C13764) * C49175 +
             (C13765 - C13766 + C13767 - C13768) * C50224 + C13789 * C49168 +
             C13790 * C49955) *
                C50174) *
               C50077) *
              C49997 * C50282 +
          ((((C7898 - C7897 + C7900 - C7899) * C49175 +
             (C7902 - C7901 + C7904 - C7903) * C50224 +
             (C7906 - C7905 + C7908 - C7907) * C49168 +
             (C7910 - C7909 + C7912 - C7911) * C49955) *
                C33256 +
            (C13787 * C49175 + C13788 * C50224 + C8615 * C49168 +
             C8616 * C49955) *
                C50174) *
               C50240 +
           ((C13785 * C49175 + C13786 * C50224 + C14185 * C49168 +
             C14186 * C49955) *
                C33256 +
            (C13791 * C49175 + C13792 * C50224 +
             (C8289 - C8290 + C8291 - C8292) * C49168 +
             (C8293 - C8294 + C8295 - C8296) * C49955) *
                C50174) *
               C50077) *
              C49997 * C50283 +
          (((C7937 * C49175 + C7938 * C50224 +
             (C7914 - C7913 + C7916 - C7915) * C49168 +
             (C7918 - C7917 + C7920 - C7919) * C49955) *
                C33256 +
            (C14185 * C49175 + C14186 * C50224 +
             (C8607 - C8608 + C8609 - C8610) * C49168 +
             (C8611 - C8612 + C8613 - C8614) * C49955) *
                C50174) *
               C50240 +
           ((C8615 * C49175 + C8616 * C50224 +
             (C8608 - C8607 + C8610 - C8609) * C49168 +
             (C8612 - C8611 + C8614 - C8613) * C49955) *
                C33256 +
            ((C8290 - C8289 + C8292 - C8291) * C49175 +
             (C8294 - C8293 + C8296 - C8295) * C50224 +
             (C7891 * C453 - C50252 * C470 + C7892 * C1190 - C50146 * C1197) *
                 C49168 +
             (C7891 * C471 - C50252 * C483 + C7892 * C1198 - C50146 * C1202) *
                 C49955) *
                C50174) *
               C50077) *
              C49997 * C612)) /
        (p * q * std::sqrt(p + q));
    d2ee[154] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                C49175 +
            (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                C50224 +
            (C7897 - C7898 + C7899 - C7900) * C49168 +
            (C7901 - C7902 + C7903 - C7904) * C49955) *
               C33256 +
           ((C13745 - C13746 + C13747 - C13748) * C49175 +
            (C13749 - C13750 + C13751 - C13752) * C50224 + C13785 * C49168 +
            C13786 * C49955) *
               C50174) *
              C50013 * C49997 * C113 +
          (((C7898 - C7897 + C7900 - C7899) * C49175 +
            (C7902 - C7901 + C7904 - C7903) * C50224 +
            (C7906 - C7905 + C7908 - C7907) * C49168 +
            (C7910 - C7909 + C7912 - C7911) * C49955) *
               C33256 +
           (C13787 * C49175 + C13788 * C50224 + C8615 * C49168 +
            C8616 * C49955) *
               C50174) *
              C50013 * C49997 * C114 +
          ((C7937 * C49175 + C7938 * C50224 +
            (C7914 - C7913 + C7916 - C7915) * C49168 +
            (C7918 - C7917 + C7920 - C7919) * C49955) *
               C33256 +
           (C14185 * C49175 + C14186 * C50224 +
            (C8607 - C8608 + C8609 - C8610) * C49168 +
            (C8611 - C8612 + C8613 - C8614) * C49955) *
               C50174) *
              C50013 * C49997 * C115 +
          ((C7939 * C49175 + C7940 * C50224 +
            (C7922 - C7921 + C7924 - C7923) * C49168 +
            (C7926 - C7925 + C7928 - C7927) * C49955) *
               C33256 +
           ((C8608 - C8607 + C8610 - C8609) * C49175 +
            (C8612 - C8611 + C8614 - C8613) * C50224 +
            (C7891 * C454 - C50252 * C472 + C7892 * C871 - C50146 * C880) *
                C49168 +
            (C7891 * C473 - C50252 * C484 + C7892 * C881 - C50146 * C886) *
                C49955) *
               C50174) *
              C50013 * C49997 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C49175 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C50224 +
             (C7897 - C7898 + C7899 - C7900) * C49168 +
             (C7901 - C7902 + C7903 - C7904) * C49955) *
                C33256 +
            ((C13745 - C13746 + C13747 - C13748) * C49175 +
             (C13749 - C13750 + C13751 - C13752) * C50224 + C13785 * C49168 +
             C13786 * C49955) *
                C50174) *
               C50013 * C276 +
           (((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                 C49175 +
             (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                 C50224 +
             (C8087 - C8088 + C8089 - C8090) * C49168 +
             (C8091 - C8092 + C8093 - C8094) * C49955) *
                C33256 +
            ((C14445 - C14446 + C14447 - C14448) * C49175 +
             (C14449 - C14450 + C14451 - C14452) * C50224 + C14469 * C49168 +
             C14470 * C49955) *
                C50174) *
               C50013 * C277 +
           (((C50252 * C299 - C7891 * C285 + C50146 * C1077 - C7892 * C1073) *
                 C49175 +
             (C50252 * C315 - C7891 * C300 + C50146 * C1085 - C7892 * C1078) *
                 C50224 +
             (C8103 - C8104 + C8105 - C8106) * C49168 +
             (C8107 - C8108 + C8109 - C8110) * C49955) *
                C33256 +
            ((C15645 - C15646 + C15647 - C15648) * C49175 +
             (C15649 - C15650 + C15651 - C15652) * C50224 +
             (C13543 - C13544 + C13545 - C13546) * C49168 +
             (C13547 - C13548 + C13549 - C13550) * C49955) *
                C50174) *
               C50013 * C278) *
              C279 +
          ((((C7898 - C7897 + C7900 - C7899) * C49175 +
             (C7902 - C7901 + C7904 - C7903) * C50224 +
             (C7906 - C7905 + C7908 - C7907) * C49168 +
             (C7910 - C7909 + C7912 - C7911) * C49955) *
                C33256 +
            (C13787 * C49175 + C13788 * C50224 + C8615 * C49168 +
             C8616 * C49955) *
                C50174) *
               C50013 * C276 +
           (((C8088 - C8087 + C8090 - C8089) * C49175 +
             (C8092 - C8091 + C8094 - C8093) * C50224 +
             (C8096 - C8095 + C8098 - C8097) * C49168 +
             (C8100 - C8099 + C8102 - C8101) * C49955) *
                C33256 +
            (C14471 * C49175 + C14472 * C50224 +
             (C8819 - C8820 + C8821 - C8822) * C49168 +
             (C8823 - C8824 + C8825 - C8826) * C49955) *
                C50174) *
               C50013 * C277 +
           (((C8104 - C8103 + C8106 - C8105) * C49175 +
             (C8108 - C8107 + C8110 - C8109) * C50224 +
             (C8112 - C8111 + C8114 - C8113) * C49168 +
             (C8116 - C8115 + C8118 - C8117) * C49955) *
                C33256 +
            ((C13544 - C13543 + C13546 - C13545) * C49175 +
             (C13548 - C13547 + C13550 - C13549) * C50224 +
             (C7891 * C1536 - C50252 * C1542 + C7892 * C3183 - C50146 * C3188) *
                 C49168 +
             (C7891 * C1543 - C50252 * C1548 + C7892 * C3189 - C50146 * C3192) *
                 C49955) *
                C50174) *
               C50013 * C278) *
              C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[155] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C49175 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C50224 +
             (C7897 - C7898 + C7899 - C7900) * C49168 +
             (C7901 - C7902 + C7903 - C7904) * C49955) *
                C33256 +
            ((C13745 - C13746 + C13747 - C13748) * C49175 +
             (C13749 - C13750 + C13751 - C13752) * C50224 + C13785 * C49168 +
             C13786 * C49955) *
                C50174) *
               C50013 * C50284 +
           (((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                 C49175 +
             (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                 C50224 +
             (C8087 - C8088 + C8089 - C8090) * C49168 +
             (C8091 - C8092 + C8093 - C8094) * C49955) *
                C33256 +
            ((C14445 - C14446 + C14447 - C14448) * C49175 +
             (C14449 - C14450 + C14451 - C14452) * C50224 + C14469 * C49168 +
             C14470 * C49955) *
                C50174) *
               C50013 * C50285 +
           (((C50252 * C299 - C7891 * C285 + C50146 * C1077 - C7892 * C1073) *
                 C49175 +
             (C50252 * C315 - C7891 * C300 + C50146 * C1085 - C7892 * C1078) *
                 C50224 +
             (C8103 - C8104 + C8105 - C8106) * C49168 +
             (C8107 - C8108 + C8109 - C8110) * C49955) *
                C33256 +
            ((C15645 - C15646 + C15647 - C15648) * C49175 +
             (C15649 - C15650 + C15651 - C15652) * C50224 +
             (C13543 - C13544 + C13545 - C13546) * C49168 +
             (C13547 - C13548 + C13549 - C13550) * C49955) *
                C50174) *
               C50013 * C1303) *
              C50231 +
          ((((C7898 - C7897 + C7900 - C7899) * C49175 +
             (C7902 - C7901 + C7904 - C7903) * C50224 +
             (C7906 - C7905 + C7908 - C7907) * C49168 +
             (C7910 - C7909 + C7912 - C7911) * C49955) *
                C33256 +
            (C13787 * C49175 + C13788 * C50224 + C8615 * C49168 +
             C8616 * C49955) *
                C50174) *
               C50013 * C50284 +
           (((C8088 - C8087 + C8090 - C8089) * C49175 +
             (C8092 - C8091 + C8094 - C8093) * C50224 +
             (C8096 - C8095 + C8098 - C8097) * C49168 +
             (C8100 - C8099 + C8102 - C8101) * C49955) *
                C33256 +
            (C14471 * C49175 + C14472 * C50224 +
             (C8819 - C8820 + C8821 - C8822) * C49168 +
             (C8823 - C8824 + C8825 - C8826) * C49955) *
                C50174) *
               C50013 * C50285 +
           (((C8104 - C8103 + C8106 - C8105) * C49175 +
             (C8108 - C8107 + C8110 - C8109) * C50224 +
             (C8112 - C8111 + C8114 - C8113) * C49168 +
             (C8116 - C8115 + C8118 - C8117) * C49955) *
                C33256 +
            ((C13544 - C13543 + C13546 - C13545) * C49175 +
             (C13548 - C13547 + C13550 - C13549) * C50224 +
             (C7891 * C1536 - C50252 * C1542 + C7892 * C3183 - C50146 * C3188) *
                 C49168 +
             (C7891 * C1543 - C50252 * C1548 + C7892 * C3189 - C50146 * C3192) *
                 C49955) *
                C50174) *
               C50013 * C1303) *
              C49984)) /
        (p * q * std::sqrt(p + q));
    d2ee[156] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C49175 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C50224 +
             (C7897 - C7898 + C7899 - C7900) * C49168 +
             (C7901 - C7902 + C7903 - C7904) * C49955) *
                C33256 +
            ((C13745 - C13746 + C13747 - C13748) * C49175 +
             (C13749 - C13750 + C13751 - C13752) * C50224 + C13785 * C49168 +
             C13786 * C49955) *
                C50174) *
               C50240 +
           (((C13746 - C13745 + C13748 - C13747) * C49175 +
             (C13750 - C13749 + C13752 - C13751) * C50224 + C13787 * C49168 +
             C13788 * C49955) *
                C33256 +
            ((C13761 - C13762 + C13763 - C13764) * C49175 +
             (C13765 - C13766 + C13767 - C13768) * C50224 + C13789 * C49168 +
             C13790 * C49955) *
                C50174) *
               C50077) *
              C50284 +
          ((((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                 C49175 +
             (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                 C50224 +
             (C8087 - C8088 + C8089 - C8090) * C49168 +
             (C8091 - C8092 + C8093 - C8094) * C49955) *
                C33256 +
            ((C14445 - C14446 + C14447 - C14448) * C49175 +
             (C14449 - C14450 + C14451 - C14452) * C50224 + C14469 * C49168 +
             C14470 * C49955) *
                C50174) *
               C50240 +
           (((C14446 - C14445 + C14448 - C14447) * C49175 +
             (C14450 - C14449 + C14452 - C14451) * C50224 + C14471 * C49168 +
             C14472 * C49955) *
                C33256 +
            ((C14991 - C14992 + C14993 - C14994) * C49175 +
             (C14995 - C14996 + C14997 - C14998) * C50224 +
             (C14461 - C14462 + C14463 - C14464) * C49168 +
             (C14465 - C14466 + C14467 - C14468) * C49955) *
                C50174) *
               C50077) *
              C50285 +
          ((((C50252 * C299 - C7891 * C285 + C50146 * C1077 - C7892 * C1073) *
                 C49175 +
             (C50252 * C315 - C7891 * C300 + C50146 * C1085 - C7892 * C1078) *
                 C50224 +
             (C8103 - C8104 + C8105 - C8106) * C49168 +
             (C8107 - C8108 + C8109 - C8110) * C49955) *
                C33256 +
            ((C15645 - C15646 + C15647 - C15648) * C49175 +
             (C15649 - C15650 + C15651 - C15652) * C50224 +
             (C13543 - C13544 + C13545 - C13546) * C49168 +
             (C13547 - C13548 + C13549 - C13550) * C49955) *
                C50174) *
               C50240 +
           (((C15646 - C15645 + C15648 - C15647) * C49175 +
             (C15650 - C15649 + C15652 - C15651) * C50224 +
             (C13544 - C13543 + C13546 - C13545) * C49168 +
             (C13548 - C13547 + C13550 - C13549) * C49955) *
                C33256 +
            ((C7891 * C2635 - C50252 * C2638 + C7892 * C3603 - C50146 * C3605) *
                 C49175 +
             (C7891 * C2639 - C50252 * C2644 + C7892 * C3606 - C50146 * C3609) *
                 C50224 +
             (C7891 * C2636 - C50252 * C2640 + C7892 * C3604 - C50146 * C3607) *
                 C49168 +
             (C7891 * C2641 - C50252 * C2645 + C7892 * C3608 - C50146 * C3610) *
                 C49955) *
                C50174) *
               C50077) *
              C1303) *
         C49978) /
        (p * q * std::sqrt(p + q));
    d2ee[157] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                C49175 +
            (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                C50224 +
            (C7897 - C7898 + C7899 - C7900) * C49168 +
            (C7901 - C7902 + C7903 - C7904) * C49955) *
               C33256 +
           ((C13745 - C13746 + C13747 - C13748) * C49175 +
            (C13749 - C13750 + C13751 - C13752) * C50224 + C13785 * C49168 +
            C13786 * C49955) *
               C50174) *
              C50013 * C1068 +
          (((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                C49175 +
            (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                C50224 +
            (C8087 - C8088 + C8089 - C8090) * C49168 +
            (C8091 - C8092 + C8093 - C8094) * C49955) *
               C33256 +
           ((C14445 - C14446 + C14447 - C14448) * C49175 +
            (C14449 - C14450 + C14451 - C14452) * C50224 + C14469 * C49168 +
            C14470 * C49955) *
               C50174) *
              C50013 * C1069 +
          (((C50252 * C299 - C7891 * C285 + C50146 * C1077 - C7892 * C1073) *
                C49175 +
            (C50252 * C315 - C7891 * C300 + C50146 * C1085 - C7892 * C1078) *
                C50224 +
            (C8103 - C8104 + C8105 - C8106) * C49168 +
            (C8107 - C8108 + C8109 - C8110) * C49955) *
               C33256 +
           ((C15645 - C15646 + C15647 - C15648) * C49175 +
            (C15649 - C15650 + C15651 - C15652) * C50224 +
            (C13543 - C13544 + C13545 - C13546) * C49168 +
            (C13547 - C13548 + C13549 - C13550) * C49955) *
               C50174) *
              C50013 * C1070 +
          (((C7891 * C1073 - C50252 * C1077 + C7892 * C2453 - C50146 * C2456) *
                C49175 +
            (C7891 * C1078 - C50252 * C1085 + C7892 * C2457 - C50146 * C2462) *
                C50224 +
            (C7891 * C1074 - C50252 * C1079 + C7892 * C2454 - C50146 * C2458) *
                C49168 +
            (C7891 * C1080 - C50252 * C1086 + C7892 * C2459 - C50146 * C2463) *
                C49955) *
               C33256 +
           ((C7891 * C3181 - C50252 * C3184 + C7892 * C4097 - C50146 * C4099) *
                C49175 +
            (C7891 * C3185 - C50252 * C3190 + C7892 * C4100 - C50146 * C4103) *
                C50224 +
            (C7891 * C3182 - C50252 * C3186 + C7892 * C4098 - C50146 * C4101) *
                C49168 +
            (C7891 * C3187 - C50252 * C3191 + C7892 * C4102 - C50146 * C4104) *
                C49955) *
               C50174) *
              C50013 * C1071) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C49175 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C50224 +
             (C7897 - C7898 + C7899 - C7900) * C49168 +
             (C7901 - C7902 + C7903 - C7904) * C49955) *
                C33256 +
            ((C13745 - C13746 + C13747 - C13748) * C49175 +
             (C13749 - C13750 + C13751 - C13752) * C50224 + C13785 * C49168 +
             C13786 * C49955) *
                C50174) *
               C50013 * C997 +
           (((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                 C49175 +
             (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                 C50224 +
             (C8087 - C8088 + C8089 - C8090) * C49168 +
             (C8091 - C8092 + C8093 - C8094) * C49955) *
                C33256 +
            ((C14445 - C14446 + C14447 - C14448) * C49175 +
             (C14449 - C14450 + C14451 - C14452) * C50224 + C14469 * C49168 +
             C14470 * C49955) *
                C50174) *
               C50013 * C50049) *
              C999 +
          ((((C7898 - C7897 + C7900 - C7899) * C49175 +
             (C7902 - C7901 + C7904 - C7903) * C50224 +
             (C7906 - C7905 + C7908 - C7907) * C49168 +
             (C7910 - C7909 + C7912 - C7911) * C49955) *
                C33256 +
            (C13787 * C49175 + C13788 * C50224 + C8615 * C49168 +
             C8616 * C49955) *
                C50174) *
               C50013 * C997 +
           (((C8088 - C8087 + C8090 - C8089) * C49175 +
             (C8092 - C8091 + C8094 - C8093) * C50224 +
             (C8096 - C8095 + C8098 - C8097) * C49168 +
             (C8100 - C8099 + C8102 - C8101) * C49955) *
                C33256 +
            (C14471 * C49175 + C14472 * C50224 +
             (C8819 - C8820 + C8821 - C8822) * C49168 +
             (C8823 - C8824 + C8825 - C8826) * C49955) *
                C50174) *
               C50013 * C50049) *
              C1000 +
          (((C7937 * C49175 + C7938 * C50224 +
             (C7914 - C7913 + C7916 - C7915) * C49168 +
             (C7918 - C7917 + C7920 - C7919) * C49955) *
                C33256 +
            (C14185 * C49175 + C14186 * C50224 +
             (C8607 - C8608 + C8609 - C8610) * C49168 +
             (C8611 - C8612 + C8613 - C8614) * C49955) *
                C50174) *
               C50013 * C997 +
           ((C8455 * C49175 + C8456 * C50224 +
             (C8448 - C8447 + C8450 - C8449) * C49168 +
             (C8452 - C8451 + C8454 - C8453) * C49955) *
                C33256 +
            ((C8820 - C8819 + C8822 - C8821) * C49175 +
             (C8824 - C8823 + C8826 - C8825) * C50224 +
             (C7891 * C870 - C50252 * C878 + C7892 * C1537 - C50146 * C1544) *
                 C49168 +
             (C7891 * C879 - C50252 * C885 + C7892 * C1545 - C50146 * C1549) *
                 C49955) *
                C50174) *
               C50013 * C50049) *
              C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C49175 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C50224 +
             (C7897 - C7898 + C7899 - C7900) * C49168 +
             (C7901 - C7902 + C7903 - C7904) * C49955) *
                C33256 +
            ((C13745 - C13746 + C13747 - C13748) * C49175 +
             (C13749 - C13750 + C13751 - C13752) * C50224 + C13785 * C49168 +
             C13786 * C49955) *
                C50174) *
               C443 +
           (((C13746 - C13745 + C13748 - C13747) * C49175 +
             (C13750 - C13749 + C13752 - C13751) * C50224 + C13787 * C49168 +
             C13788 * C49955) *
                C33256 +
            ((C13761 - C13762 + C13763 - C13764) * C49175 +
             (C13765 - C13766 + C13767 - C13768) * C50224 + C13789 * C49168 +
             C13790 * C49955) *
                C50174) *
               C444 +
           (((C13762 - C13761 + C13764 - C13763) * C49175 +
             (C13766 - C13765 + C13768 - C13767) * C50224 + C13791 * C49168 +
             C13792 * C49955) *
                C33256 +
            ((C16171 - C16172 + C16173 - C16174) * C49175 +
             (C16175 - C16176 + C16177 - C16178) * C50224 +
             (C13777 - C13778 + C13779 - C13780) * C49168 +
             (C13781 - C13782 + C13783 - C13784) * C49955) *
                C50174) *
               C445) *
              C997 +
          ((((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                 C49175 +
             (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                 C50224 +
             (C8087 - C8088 + C8089 - C8090) * C49168 +
             (C8091 - C8092 + C8093 - C8094) * C49955) *
                C33256 +
            ((C14445 - C14446 + C14447 - C14448) * C49175 +
             (C14449 - C14450 + C14451 - C14452) * C50224 + C14469 * C49168 +
             C14470 * C49955) *
                C50174) *
               C443 +
           (((C14446 - C14445 + C14448 - C14447) * C49175 +
             (C14450 - C14449 + C14452 - C14451) * C50224 + C14471 * C49168 +
             C14472 * C49955) *
                C33256 +
            ((C14991 - C14992 + C14993 - C14994) * C49175 +
             (C14995 - C14996 + C14997 - C14998) * C50224 +
             (C14461 - C14462 + C14463 - C14464) * C49168 +
             (C14465 - C14466 + C14467 - C14468) * C49955) *
                C50174) *
               C444 +
           (((C14992 - C14991 + C14994 - C14993) * C49175 +
             (C14996 - C14995 + C14998 - C14997) * C50224 +
             (C14462 - C14461 + C14464 - C14463) * C49168 +
             (C14466 - C14465 + C14468 - C14467) * C49955) *
                C33256 +
            ((C7891 * C4495 - C50252 * C4499 + C7892 * C4496 - C50146 * C4500) *
                 C49175 +
             (C7891 * C4501 - C50252 * C4507 + C7892 * C4502 - C50146 * C4508) *
                 C50224 +
             (C7891 * C4497 - C50252 * C4503 + C7892 * C4498 - C50146 * C4504) *
                 C49168 +
             (C7891 * C4505 - C50252 * C4509 + C7892 * C4506 - C50146 * C4510) *
                 C49955) *
                C50174) *
               C445) *
              C50049) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[158] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                  C49175 +
              (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                  C50224 +
              (C7897 - C7898 + C7899 - C7900) * C49168 +
              (C7901 - C7902 + C7903 - C7904) * C49955) *
                 C33256 +
             ((C13745 - C13746 + C13747 - C13748) * C49175 +
              (C13749 - C13750 + C13751 - C13752) * C50224 + C13785 * C49168 +
              C13786 * C49955) *
                 C50174) *
                C50240 +
            (((C13746 - C13745 + C13748 - C13747) * C49175 +
              (C13750 - C13749 + C13752 - C13751) * C50224 + C13787 * C49168 +
              C13788 * C49955) *
                 C33256 +
             ((C13761 - C13762 + C13763 - C13764) * C49175 +
              (C13765 - C13766 + C13767 - C13768) * C50224 + C13789 * C49168 +
              C13790 * C49955) *
                 C50174) *
                C50077) *
               C997 +
           ((((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                  C49175 +
              (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                  C50224 +
              (C8087 - C8088 + C8089 - C8090) * C49168 +
              (C8091 - C8092 + C8093 - C8094) * C49955) *
                 C33256 +
             ((C14445 - C14446 + C14447 - C14448) * C49175 +
              (C14449 - C14450 + C14451 - C14452) * C50224 + C14469 * C49168 +
              C14470 * C49955) *
                 C50174) *
                C50240 +
            (((C14446 - C14445 + C14448 - C14447) * C49175 +
              (C14450 - C14449 + C14452 - C14451) * C50224 + C14471 * C49168 +
              C14472 * C49955) *
                 C33256 +
             ((C14991 - C14992 + C14993 - C14994) * C49175 +
              (C14995 - C14996 + C14997 - C14998) * C50224 +
              (C14461 - C14462 + C14463 - C14464) * C49168 +
              (C14465 - C14466 + C14467 - C14468) * C49955) *
                 C50174) *
                C50077) *
               C50049) *
              C50231 +
          (((((C7898 - C7897 + C7900 - C7899) * C49175 +
              (C7902 - C7901 + C7904 - C7903) * C50224 +
              (C7906 - C7905 + C7908 - C7907) * C49168 +
              (C7910 - C7909 + C7912 - C7911) * C49955) *
                 C33256 +
             (C13787 * C49175 + C13788 * C50224 + C8615 * C49168 +
              C8616 * C49955) *
                 C50174) *
                C50240 +
            ((C13785 * C49175 + C13786 * C50224 + C14185 * C49168 +
              C14186 * C49955) *
                 C33256 +
             (C13791 * C49175 + C13792 * C50224 +
              (C8289 - C8290 + C8291 - C8292) * C49168 +
              (C8293 - C8294 + C8295 - C8296) * C49955) *
                 C50174) *
                C50077) *
               C997 +
           ((((C8088 - C8087 + C8090 - C8089) * C49175 +
              (C8092 - C8091 + C8094 - C8093) * C50224 +
              (C8096 - C8095 + C8098 - C8097) * C49168 +
              (C8100 - C8099 + C8102 - C8101) * C49955) *
                 C33256 +
             (C14471 * C49175 + C14472 * C50224 +
              (C8819 - C8820 + C8821 - C8822) * C49168 +
              (C8823 - C8824 + C8825 - C8826) * C49955) *
                 C50174) *
                C50240 +
            ((C14469 * C49175 + C14470 * C50224 +
              (C8820 - C8819 + C8822 - C8821) * C49168 +
              (C8824 - C8823 + C8826 - C8825) * C49955) *
                 C33256 +
             ((C14462 - C14461 + C14464 - C14463) * C49175 +
              (C14466 - C14465 + C14468 - C14467) * C50224 +
              (C7891 * C1189 - C50252 * C1195 + C7892 * C2637 -
               C50146 * C2642) *
                  C49168 +
              (C7891 * C1196 - C50252 * C1201 + C7892 * C2643 -
               C50146 * C2646) *
                  C49955) *
                 C50174) *
                C50077) *
               C50049) *
              C49984)) /
        (p * q * std::sqrt(p + q));
    d2ee[159] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C49175 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C50224 +
             (C7897 - C7898 + C7899 - C7900) * C49168 +
             (C7901 - C7902 + C7903 - C7904) * C49955) *
                C33256 +
            ((C13745 - C13746 + C13747 - C13748) * C49175 +
             (C13749 - C13750 + C13751 - C13752) * C50224 + C13785 * C49168 +
             C13786 * C49955) *
                C50174) *
               C50013 * C997 +
           (((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                 C49175 +
             (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                 C50224 +
             (C8087 - C8088 + C8089 - C8090) * C49168 +
             (C8091 - C8092 + C8093 - C8094) * C49955) *
                C33256 +
            ((C14445 - C14446 + C14447 - C14448) * C49175 +
             (C14449 - C14450 + C14451 - C14452) * C50224 + C14469 * C49168 +
             C14470 * C49955) *
                C50174) *
               C50013 * C50049) *
              C999 +
          ((((C7898 - C7897 + C7900 - C7899) * C49175 +
             (C7902 - C7901 + C7904 - C7903) * C50224 +
             (C7906 - C7905 + C7908 - C7907) * C49168 +
             (C7910 - C7909 + C7912 - C7911) * C49955) *
                C33256 +
            (C13787 * C49175 + C13788 * C50224 + C8615 * C49168 +
             C8616 * C49955) *
                C50174) *
               C50013 * C997 +
           (((C8088 - C8087 + C8090 - C8089) * C49175 +
             (C8092 - C8091 + C8094 - C8093) * C50224 +
             (C8096 - C8095 + C8098 - C8097) * C49168 +
             (C8100 - C8099 + C8102 - C8101) * C49955) *
                C33256 +
            (C14471 * C49175 + C14472 * C50224 +
             (C8819 - C8820 + C8821 - C8822) * C49168 +
             (C8823 - C8824 + C8825 - C8826) * C49955) *
                C50174) *
               C50013 * C50049) *
              C1000 +
          (((C7937 * C49175 + C7938 * C50224 +
             (C7914 - C7913 + C7916 - C7915) * C49168 +
             (C7918 - C7917 + C7920 - C7919) * C49955) *
                C33256 +
            (C14185 * C49175 + C14186 * C50224 +
             (C8607 - C8608 + C8609 - C8610) * C49168 +
             (C8611 - C8612 + C8613 - C8614) * C49955) *
                C50174) *
               C50013 * C997 +
           ((C8455 * C49175 + C8456 * C50224 +
             (C8448 - C8447 + C8450 - C8449) * C49168 +
             (C8452 - C8451 + C8454 - C8453) * C49955) *
                C33256 +
            ((C8820 - C8819 + C8822 - C8821) * C49175 +
             (C8824 - C8823 + C8826 - C8825) * C50224 +
             (C7891 * C870 - C50252 * C878 + C7892 * C1537 - C50146 * C1544) *
                 C49168 +
             (C7891 * C879 - C50252 * C885 + C7892 * C1545 - C50146 * C1549) *
                 C49955) *
                C50174) *
               C50013 * C50049) *
              C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                C49175 +
            (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                C50224 +
            (C7897 - C7898 + C7899 - C7900) * C49168 +
            (C7901 - C7902 + C7903 - C7904) * C49955) *
               C33256 +
           ((C13745 - C13746 + C13747 - C13748) * C49175 +
            (C13749 - C13750 + C13751 - C13752) * C50224 + C13785 * C49168 +
            C13786 * C49955) *
               C50174) *
              C50013 * C1068 +
          (((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                C49175 +
            (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                C50224 +
            (C8087 - C8088 + C8089 - C8090) * C49168 +
            (C8091 - C8092 + C8093 - C8094) * C49955) *
               C33256 +
           ((C14445 - C14446 + C14447 - C14448) * C49175 +
            (C14449 - C14450 + C14451 - C14452) * C50224 + C14469 * C49168 +
            C14470 * C49955) *
               C50174) *
              C50013 * C1069 +
          (((C50252 * C299 - C7891 * C285 + C50146 * C1077 - C7892 * C1073) *
                C49175 +
            (C50252 * C315 - C7891 * C300 + C50146 * C1085 - C7892 * C1078) *
                C50224 +
            (C8103 - C8104 + C8105 - C8106) * C49168 +
            (C8107 - C8108 + C8109 - C8110) * C49955) *
               C33256 +
           ((C15645 - C15646 + C15647 - C15648) * C49175 +
            (C15649 - C15650 + C15651 - C15652) * C50224 +
            (C13543 - C13544 + C13545 - C13546) * C49168 +
            (C13547 - C13548 + C13549 - C13550) * C49955) *
               C50174) *
              C50013 * C1070 +
          (((C7891 * C1073 - C50252 * C1077 + C7892 * C2453 - C50146 * C2456) *
                C49175 +
            (C7891 * C1078 - C50252 * C1085 + C7892 * C2457 - C50146 * C2462) *
                C50224 +
            (C7891 * C1074 - C50252 * C1079 + C7892 * C2454 - C50146 * C2458) *
                C49168 +
            (C7891 * C1080 - C50252 * C1086 + C7892 * C2459 - C50146 * C2463) *
                C49955) *
               C33256 +
           ((C7891 * C3181 - C50252 * C3184 + C7892 * C4097 - C50146 * C4099) *
                C49175 +
            (C7891 * C3185 - C50252 * C3190 + C7892 * C4100 - C50146 * C4103) *
                C50224 +
            (C7891 * C3182 - C50252 * C3186 + C7892 * C4098 - C50146 * C4101) *
                C49168 +
            (C7891 * C3187 - C50252 * C3191 + C7892 * C4102 - C50146 * C4104) *
                C49955) *
               C50174) *
              C50013 * C1071) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[160] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                  C49175 +
              (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                  C50224 +
              (C7897 - C7898 + C7899 - C7900) * C49168 +
              (C7901 - C7902 + C7903 - C7904) * C49955) *
                 C33256 +
             ((C13745 - C13746 + C13747 - C13748) * C49175 +
              (C13749 - C13750 + C13751 - C13752) * C50224 + C13785 * C49168 +
              C13786 * C49955) *
                 C50174) *
                C1648 +
            (((C13746 - C13745 + C13748 - C13747) * C49175 +
              (C13750 - C13749 + C13752 - C13751) * C50224 + C13787 * C49168 +
              C13788 * C49955) *
                 C33256 +
             ((C13761 - C13762 + C13763 - C13764) * C49175 +
              (C13765 - C13766 + C13767 - C13768) * C50224 + C13789 * C49168 +
              C13790 * C49955) *
                 C50174) *
                C50077) *
               C50239 +
           ((((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                  C49175 +
              (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                  C50224 +
              (C8087 - C8088 + C8089 - C8090) * C49168 +
              (C8091 - C8092 + C8093 - C8094) * C49955) *
                 C33256 +
             ((C14445 - C14446 + C14447 - C14448) * C49175 +
              (C14449 - C14450 + C14451 - C14452) * C50224 + C14469 * C49168 +
              C14470 * C49955) *
                 C50174) *
                C1648 +
            (((C14446 - C14445 + C14448 - C14447) * C49175 +
              (C14450 - C14449 + C14452 - C14451) * C50224 + C14471 * C49168 +
              C14472 * C49955) *
                 C33256 +
             ((C14991 - C14992 + C14993 - C14994) * C49175 +
              (C14995 - C14996 + C14997 - C14998) * C50224 +
              (C14461 - C14462 + C14463 - C14464) * C49168 +
              (C14465 - C14466 + C14467 - C14468) * C49955) *
                 C50174) *
                C50077) *
               C50049) *
              C50231 +
          (((((C7898 - C7897 + C7900 - C7899) * C49175 +
              (C7902 - C7901 + C7904 - C7903) * C50224 +
              (C7906 - C7905 + C7908 - C7907) * C49168 +
              (C7910 - C7909 + C7912 - C7911) * C49955) *
                 C33256 +
             (C13787 * C49175 + C13788 * C50224 + C8615 * C49168 +
              C8616 * C49955) *
                 C50174) *
                C1648 +
            ((C13785 * C49175 + C13786 * C50224 + C14185 * C49168 +
              C14186 * C49955) *
                 C33256 +
             (C13791 * C49175 + C13792 * C50224 +
              (C8289 - C8290 + C8291 - C8292) * C49168 +
              (C8293 - C8294 + C8295 - C8296) * C49955) *
                 C50174) *
                C50077) *
               C50239 +
           ((((C8088 - C8087 + C8090 - C8089) * C49175 +
              (C8092 - C8091 + C8094 - C8093) * C50224 +
              (C8096 - C8095 + C8098 - C8097) * C49168 +
              (C8100 - C8099 + C8102 - C8101) * C49955) *
                 C33256 +
             (C14471 * C49175 + C14472 * C50224 +
              (C8819 - C8820 + C8821 - C8822) * C49168 +
              (C8823 - C8824 + C8825 - C8826) * C49955) *
                 C50174) *
                C1648 +
            ((C14469 * C49175 + C14470 * C50224 +
              (C8820 - C8819 + C8822 - C8821) * C49168 +
              (C8824 - C8823 + C8826 - C8825) * C49955) *
                 C33256 +
             ((C14462 - C14461 + C14464 - C14463) * C49175 +
              (C14466 - C14465 + C14468 - C14467) * C50224 +
              (C7891 * C1189 - C50252 * C1195 + C7892 * C2637 -
               C50146 * C2642) *
                  C49168 +
              (C7891 * C1196 - C50252 * C1201 + C7892 * C2643 -
               C50146 * C2646) *
                  C49955) *
                 C50174) *
                C50077) *
               C50049) *
              C49984)) /
        (p * q * std::sqrt(p + q));
    d2ee[161] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C49175 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C50224 +
             (C7897 - C7898 + C7899 - C7900) * C49168 +
             (C7901 - C7902 + C7903 - C7904) * C49955) *
                C33256 +
            ((C13745 - C13746 + C13747 - C13748) * C49175 +
             (C13749 - C13750 + C13751 - C13752) * C50224 + C13785 * C49168 +
             C13786 * C49955) *
                C50174) *
               C50286 +
           (((C13746 - C13745 + C13748 - C13747) * C49175 +
             (C13750 - C13749 + C13752 - C13751) * C50224 + C13787 * C49168 +
             C13788 * C49955) *
                C33256 +
            ((C13761 - C13762 + C13763 - C13764) * C49175 +
             (C13765 - C13766 + C13767 - C13768) * C50224 + C13789 * C49168 +
             C13790 * C49955) *
                C50174) *
               C50287 +
           (((C13762 - C13761 + C13764 - C13763) * C49175 +
             (C13766 - C13765 + C13768 - C13767) * C50224 + C13791 * C49168 +
             C13792 * C49955) *
                C33256 +
            ((C16171 - C16172 + C16173 - C16174) * C49175 +
             (C16175 - C16176 + C16177 - C16178) * C50224 +
             (C13777 - C13778 + C13779 - C13780) * C49168 +
             (C13781 - C13782 + C13783 - C13784) * C49955) *
                C50174) *
               C2064) *
              C50239 +
          ((((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                 C49175 +
             (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                 C50224 +
             (C8087 - C8088 + C8089 - C8090) * C49168 +
             (C8091 - C8092 + C8093 - C8094) * C49955) *
                C33256 +
            ((C14445 - C14446 + C14447 - C14448) * C49175 +
             (C14449 - C14450 + C14451 - C14452) * C50224 + C14469 * C49168 +
             C14470 * C49955) *
                C50174) *
               C50286 +
           (((C14446 - C14445 + C14448 - C14447) * C49175 +
             (C14450 - C14449 + C14452 - C14451) * C50224 + C14471 * C49168 +
             C14472 * C49955) *
                C33256 +
            ((C14991 - C14992 + C14993 - C14994) * C49175 +
             (C14995 - C14996 + C14997 - C14998) * C50224 +
             (C14461 - C14462 + C14463 - C14464) * C49168 +
             (C14465 - C14466 + C14467 - C14468) * C49955) *
                C50174) *
               C50287 +
           (((C14992 - C14991 + C14994 - C14993) * C49175 +
             (C14996 - C14995 + C14998 - C14997) * C50224 +
             (C14462 - C14461 + C14464 - C14463) * C49168 +
             (C14466 - C14465 + C14468 - C14467) * C49955) *
                C33256 +
            ((C7891 * C4495 - C50252 * C4499 + C7892 * C4496 - C50146 * C4500) *
                 C49175 +
             (C7891 * C4501 - C50252 * C4507 + C7892 * C4502 - C50146 * C4508) *
                 C50224 +
             (C7891 * C4497 - C50252 * C4503 + C7892 * C4498 - C50146 * C4504) *
                 C49168 +
             (C7891 * C4505 - C50252 * C4509 + C7892 * C4506 - C50146 * C4510) *
                 C49955) *
                C50174) *
               C2064) *
              C50049) *
         C49978) /
        (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C49175 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C50224 +
             (C7897 - C7898 + C7899 - C7900) * C49168 +
             (C7901 - C7902 + C7903 - C7904) * C49955) *
                C33256 +
            ((C13745 - C13746 + C13747 - C13748) * C49175 +
             (C13749 - C13750 + C13751 - C13752) * C50224 + C13785 * C49168 +
             C13786 * C49955) *
                C50174) *
               C1648 +
           (((C13746 - C13745 + C13748 - C13747) * C49175 +
             (C13750 - C13749 + C13752 - C13751) * C50224 + C13787 * C49168 +
             C13788 * C49955) *
                C33256 +
            ((C13761 - C13762 + C13763 - C13764) * C49175 +
             (C13765 - C13766 + C13767 - C13768) * C50224 + C13789 * C49168 +
             C13790 * C49955) *
                C50174) *
               C50077) *
              C276 +
          ((((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                 C49175 +
             (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                 C50224 +
             (C8087 - C8088 + C8089 - C8090) * C49168 +
             (C8091 - C8092 + C8093 - C8094) * C49955) *
                C33256 +
            ((C14445 - C14446 + C14447 - C14448) * C49175 +
             (C14449 - C14450 + C14451 - C14452) * C50224 + C14469 * C49168 +
             C14470 * C49955) *
                C50174) *
               C1648 +
           (((C14446 - C14445 + C14448 - C14447) * C49175 +
             (C14450 - C14449 + C14452 - C14451) * C50224 + C14471 * C49168 +
             C14472 * C49955) *
                C33256 +
            ((C14991 - C14992 + C14993 - C14994) * C49175 +
             (C14995 - C14996 + C14997 - C14998) * C50224 +
             (C14461 - C14462 + C14463 - C14464) * C49168 +
             (C14465 - C14466 + C14467 - C14468) * C49955) *
                C50174) *
               C50077) *
              C277 +
          ((((C50252 * C299 - C7891 * C285 + C50146 * C1077 - C7892 * C1073) *
                 C49175 +
             (C50252 * C315 - C7891 * C300 + C50146 * C1085 - C7892 * C1078) *
                 C50224 +
             (C8103 - C8104 + C8105 - C8106) * C49168 +
             (C8107 - C8108 + C8109 - C8110) * C49955) *
                C33256 +
            ((C15645 - C15646 + C15647 - C15648) * C49175 +
             (C15649 - C15650 + C15651 - C15652) * C50224 +
             (C13543 - C13544 + C13545 - C13546) * C49168 +
             (C13547 - C13548 + C13549 - C13550) * C49955) *
                C50174) *
               C1648 +
           (((C15646 - C15645 + C15648 - C15647) * C49175 +
             (C15650 - C15649 + C15652 - C15651) * C50224 +
             (C13544 - C13543 + C13546 - C13545) * C49168 +
             (C13548 - C13547 + C13550 - C13549) * C49955) *
                C33256 +
            ((C7891 * C2635 - C50252 * C2638 + C7892 * C3603 - C50146 * C3605) *
                 C49175 +
             (C7891 * C2639 - C50252 * C2644 + C7892 * C3606 - C50146 * C3609) *
                 C50224 +
             (C7891 * C2636 - C50252 * C2640 + C7892 * C3604 - C50146 * C3607) *
                 C49168 +
             (C7891 * C2641 - C50252 * C2645 + C7892 * C3608 - C50146 * C3610) *
                 C49955) *
                C50174) *
               C50077) *
              C278) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C49175 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C50224 +
             (C7897 - C7898 + C7899 - C7900) * C49168 +
             (C7901 - C7902 + C7903 - C7904) * C49955) *
                C33256 +
            ((C13745 - C13746 + C13747 - C13748) * C49175 +
             (C13749 - C13750 + C13751 - C13752) * C50224 + C13785 * C49168 +
             C13786 * C49955) *
                C50174) *
               C1648 +
           (((C13746 - C13745 + C13748 - C13747) * C49175 +
             (C13750 - C13749 + C13752 - C13751) * C50224 + C13787 * C49168 +
             C13788 * C49955) *
                C33256 +
            ((C13761 - C13762 + C13763 - C13764) * C49175 +
             (C13765 - C13766 + C13767 - C13768) * C50224 + C13789 * C49168 +
             C13790 * C49955) *
                C50174) *
               C50077) *
              C49997 * C999 +
          ((((C7898 - C7897 + C7900 - C7899) * C49175 +
             (C7902 - C7901 + C7904 - C7903) * C50224 +
             (C7906 - C7905 + C7908 - C7907) * C49168 +
             (C7910 - C7909 + C7912 - C7911) * C49955) *
                C33256 +
            (C13787 * C49175 + C13788 * C50224 + C8615 * C49168 +
             C8616 * C49955) *
                C50174) *
               C1648 +
           ((C13785 * C49175 + C13786 * C50224 + C14185 * C49168 +
             C14186 * C49955) *
                C33256 +
            (C13791 * C49175 + C13792 * C50224 +
             (C8289 - C8290 + C8291 - C8292) * C49168 +
             (C8293 - C8294 + C8295 - C8296) * C49955) *
                C50174) *
               C50077) *
              C49997 * C1000 +
          (((C7937 * C49175 + C7938 * C50224 +
             (C7914 - C7913 + C7916 - C7915) * C49168 +
             (C7918 - C7917 + C7920 - C7919) * C49955) *
                C33256 +
            (C14185 * C49175 + C14186 * C50224 +
             (C8607 - C8608 + C8609 - C8610) * C49168 +
             (C8611 - C8612 + C8613 - C8614) * C49955) *
                C50174) *
               C1648 +
           ((C8615 * C49175 + C8616 * C50224 +
             (C8608 - C8607 + C8610 - C8609) * C49168 +
             (C8612 - C8611 + C8614 - C8613) * C49955) *
                C33256 +
            ((C8290 - C8289 + C8292 - C8291) * C49175 +
             (C8294 - C8293 + C8296 - C8295) * C50224 +
             (C7891 * C453 - C50252 * C470 + C7892 * C1190 - C50146 * C1197) *
                 C49168 +
             (C7891 * C471 - C50252 * C483 + C7892 * C1198 - C50146 * C1202) *
                 C49955) *
                C50174) *
               C50077) *
              C49997 * C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                C49175 +
            (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                C50224 +
            (C7897 - C7898 + C7899 - C7900) * C49168 +
            (C7901 - C7902 + C7903 - C7904) * C49955) *
               C33256 +
           ((C13745 - C13746 + C13747 - C13748) * C49175 +
            (C13749 - C13750 + C13751 - C13752) * C50224 + C13785 * C49168 +
            C13786 * C49955) *
               C50174) *
              C1814 +
          (((C13746 - C13745 + C13748 - C13747) * C49175 +
            (C13750 - C13749 + C13752 - C13751) * C50224 + C13787 * C49168 +
            C13788 * C49955) *
               C33256 +
           ((C13761 - C13762 + C13763 - C13764) * C49175 +
            (C13765 - C13766 + C13767 - C13768) * C50224 + C13789 * C49168 +
            C13790 * C49955) *
               C50174) *
              C1815 +
          (((C13762 - C13761 + C13764 - C13763) * C49175 +
            (C13766 - C13765 + C13768 - C13767) * C50224 + C13791 * C49168 +
            C13792 * C49955) *
               C33256 +
           ((C16171 - C16172 + C16173 - C16174) * C49175 +
            (C16175 - C16176 + C16177 - C16178) * C50224 +
            (C13777 - C13778 + C13779 - C13780) * C49168 +
            (C13781 - C13782 + C13783 - C13784) * C49955) *
               C50174) *
              C1816 +
          (((C16172 - C16171 + C16174 - C16173) * C49175 +
            (C16176 - C16175 + C16178 - C16177) * C50224 +
            (C13778 - C13777 + C13780 - C13779) * C49168 +
            (C13782 - C13781 + C13784 - C13783) * C49955) *
               C33256 +
           ((C7891 * C5402 - C50252 * C5405 + C7892 * C6376 - C50146 * C6378) *
                C49175 +
            (C7891 * C5406 - C50252 * C5411 + C7892 * C6379 - C50146 * C6382) *
                C50224 +
            (C7891 * C5403 - C50252 * C5407 + C7892 * C6377 - C50146 * C6380) *
                C49168 +
            (C7891 * C5408 - C50252 * C5412 + C7892 * C6381 - C50146 * C6383) *
                C49955) *
               C50174) *
              C1817) *
         C49997 * C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[163] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C49175 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C50224 +
             (C7897 - C7898 + C7899 - C7900) * C49168 +
             (C7901 - C7902 + C7903 - C7904) * C49955) *
                C33256 +
            ((C13745 - C13746 + C13747 - C13748) * C49175 +
             (C13749 - C13750 + C13751 - C13752) * C50224 + C13785 * C49168 +
             C13786 * C49955) *
                C50174) *
               C50286 +
           (((C13746 - C13745 + C13748 - C13747) * C49175 +
             (C13750 - C13749 + C13752 - C13751) * C50224 + C13787 * C49168 +
             C13788 * C49955) *
                C33256 +
            ((C13761 - C13762 + C13763 - C13764) * C49175 +
             (C13765 - C13766 + C13767 - C13768) * C50224 + C13789 * C49168 +
             C13790 * C49955) *
                C50174) *
               C50287 +
           (((C13762 - C13761 + C13764 - C13763) * C49175 +
             (C13766 - C13765 + C13768 - C13767) * C50224 + C13791 * C49168 +
             C13792 * C49955) *
                C33256 +
            ((C16171 - C16172 + C16173 - C16174) * C49175 +
             (C16175 - C16176 + C16177 - C16178) * C50224 +
             (C13777 - C13778 + C13779 - C13780) * C49168 +
             (C13781 - C13782 + C13783 - C13784) * C49955) *
                C50174) *
               C2064) *
              C49997 * C50231 +
          ((((C7898 - C7897 + C7900 - C7899) * C49175 +
             (C7902 - C7901 + C7904 - C7903) * C50224 +
             (C7906 - C7905 + C7908 - C7907) * C49168 +
             (C7910 - C7909 + C7912 - C7911) * C49955) *
                C33256 +
            (C13787 * C49175 + C13788 * C50224 + C8615 * C49168 +
             C8616 * C49955) *
                C50174) *
               C50286 +
           ((C13785 * C49175 + C13786 * C50224 + C14185 * C49168 +
             C14186 * C49955) *
                C33256 +
            (C13791 * C49175 + C13792 * C50224 +
             (C8289 - C8290 + C8291 - C8292) * C49168 +
             (C8293 - C8294 + C8295 - C8296) * C49955) *
                C50174) *
               C50287 +
           ((C13789 * C49175 + C13790 * C50224 +
             (C8290 - C8289 + C8292 - C8291) * C49168 +
             (C8294 - C8293 + C8296 - C8295) * C49955) *
                C33256 +
            ((C13778 - C13777 + C13780 - C13779) * C49175 +
             (C13782 - C13781 + C13784 - C13783) * C50224 +
             (C7891 * C1820 - C50252 * C1826 + C7892 * C5962 - C50146 * C5963) *
                 C49168 +
             (C7891 * C1827 - C50252 * C1832 + C7892 * C5964 - C50146 * C5965) *
                 C49955) *
                C50174) *
               C2064) *
              C49997 * C49984)) /
        (p * q * std::sqrt(p + q));
    d2ee[164] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C49175 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C50224 +
             (C7897 - C7898 + C7899 - C7900) * C49168 +
             (C7901 - C7902 + C7903 - C7904) * C49955) *
                C33256 +
            ((C13745 - C13746 + C13747 - C13748) * C49175 +
             (C13749 - C13750 + C13751 - C13752) * C50224 + C13785 * C49168 +
             C13786 * C49955) *
                C50174) *
               C1648 +
           (((C13746 - C13745 + C13748 - C13747) * C49175 +
             (C13750 - C13749 + C13752 - C13751) * C50224 + C13787 * C49168 +
             C13788 * C49955) *
                C33256 +
            ((C13761 - C13762 + C13763 - C13764) * C49175 +
             (C13765 - C13766 + C13767 - C13768) * C50224 + C13789 * C49168 +
             C13790 * C49955) *
                C50174) *
               C50077) *
              C49997 * C999 +
          ((((C7898 - C7897 + C7900 - C7899) * C49175 +
             (C7902 - C7901 + C7904 - C7903) * C50224 +
             (C7906 - C7905 + C7908 - C7907) * C49168 +
             (C7910 - C7909 + C7912 - C7911) * C49955) *
                C33256 +
            (C13787 * C49175 + C13788 * C50224 + C8615 * C49168 +
             C8616 * C49955) *
                C50174) *
               C1648 +
           ((C13785 * C49175 + C13786 * C50224 + C14185 * C49168 +
             C14186 * C49955) *
                C33256 +
            (C13791 * C49175 + C13792 * C50224 +
             (C8289 - C8290 + C8291 - C8292) * C49168 +
             (C8293 - C8294 + C8295 - C8296) * C49955) *
                C50174) *
               C50077) *
              C49997 * C1000 +
          (((C7937 * C49175 + C7938 * C50224 +
             (C7914 - C7913 + C7916 - C7915) * C49168 +
             (C7918 - C7917 + C7920 - C7919) * C49955) *
                C33256 +
            (C14185 * C49175 + C14186 * C50224 +
             (C8607 - C8608 + C8609 - C8610) * C49168 +
             (C8611 - C8612 + C8613 - C8614) * C49955) *
                C50174) *
               C1648 +
           ((C8615 * C49175 + C8616 * C50224 +
             (C8608 - C8607 + C8610 - C8609) * C49168 +
             (C8612 - C8611 + C8614 - C8613) * C49955) *
                C33256 +
            ((C8290 - C8289 + C8292 - C8291) * C49175 +
             (C8294 - C8293 + C8296 - C8295) * C50224 +
             (C7891 * C453 - C50252 * C470 + C7892 * C1190 - C50146 * C1197) *
                 C49168 +
             (C7891 * C471 - C50252 * C483 + C7892 * C1198 - C50146 * C1202) *
                 C49955) *
                C50174) *
               C50077) *
              C49997 * C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C49175 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C50224 +
             (C7897 - C7898 + C7899 - C7900) * C49168 +
             (C7901 - C7902 + C7903 - C7904) * C49955) *
                C33256 +
            ((C13745 - C13746 + C13747 - C13748) * C49175 +
             (C13749 - C13750 + C13751 - C13752) * C50224 + C13785 * C49168 +
             C13786 * C49955) *
                C50174) *
               C1648 +
           (((C13746 - C13745 + C13748 - C13747) * C49175 +
             (C13750 - C13749 + C13752 - C13751) * C50224 + C13787 * C49168 +
             C13788 * C49955) *
                C33256 +
            ((C13761 - C13762 + C13763 - C13764) * C49175 +
             (C13765 - C13766 + C13767 - C13768) * C50224 + C13789 * C49168 +
             C13790 * C49955) *
                C50174) *
               C50077) *
              C276 +
          ((((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                 C49175 +
             (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                 C50224 +
             (C8087 - C8088 + C8089 - C8090) * C49168 +
             (C8091 - C8092 + C8093 - C8094) * C49955) *
                C33256 +
            ((C14445 - C14446 + C14447 - C14448) * C49175 +
             (C14449 - C14450 + C14451 - C14452) * C50224 + C14469 * C49168 +
             C14470 * C49955) *
                C50174) *
               C1648 +
           (((C14446 - C14445 + C14448 - C14447) * C49175 +
             (C14450 - C14449 + C14452 - C14451) * C50224 + C14471 * C49168 +
             C14472 * C49955) *
                C33256 +
            ((C14991 - C14992 + C14993 - C14994) * C49175 +
             (C14995 - C14996 + C14997 - C14998) * C50224 +
             (C14461 - C14462 + C14463 - C14464) * C49168 +
             (C14465 - C14466 + C14467 - C14468) * C49955) *
                C50174) *
               C50077) *
              C277 +
          ((((C50252 * C299 - C7891 * C285 + C50146 * C1077 - C7892 * C1073) *
                 C49175 +
             (C50252 * C315 - C7891 * C300 + C50146 * C1085 - C7892 * C1078) *
                 C50224 +
             (C8103 - C8104 + C8105 - C8106) * C49168 +
             (C8107 - C8108 + C8109 - C8110) * C49955) *
                C33256 +
            ((C15645 - C15646 + C15647 - C15648) * C49175 +
             (C15649 - C15650 + C15651 - C15652) * C50224 +
             (C13543 - C13544 + C13545 - C13546) * C49168 +
             (C13547 - C13548 + C13549 - C13550) * C49955) *
                C50174) *
               C1648 +
           (((C15646 - C15645 + C15648 - C15647) * C49175 +
             (C15650 - C15649 + C15652 - C15651) * C50224 +
             (C13544 - C13543 + C13546 - C13545) * C49168 +
             (C13548 - C13547 + C13550 - C13549) * C49955) *
                C33256 +
            ((C7891 * C2635 - C50252 * C2638 + C7892 * C3603 - C50146 * C3605) *
                 C49175 +
             (C7891 * C2639 - C50252 * C2644 + C7892 * C3606 - C50146 * C3609) *
                 C50224 +
             (C7891 * C2636 - C50252 * C2640 + C7892 * C3604 - C50146 * C3607) *
                 C49168 +
             (C7891 * C2641 - C50252 * C2645 + C7892 * C3608 - C50146 * C3610) *
                 C49955) *
                C50174) *
               C50077) *
              C278) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[165] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C19689 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C49950) *
                C50290 +
            ((C13745 - C13746 + C13747 - C13748) * C19689 +
             (C13749 - C13750 + C13751 - C13752) * C49950) *
                C50291 +
            C46855 * C43894) *
               C50013 * C50239 +
           (((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                 C19689 +
             (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                 C49950) *
                C50290 +
            ((C14445 - C14446 + C14447 - C14448) * C19689 +
             (C14449 - C14450 + C14451 - C14452) * C49950) *
                C50291 +
            ((C14992 - C14991 + C14994 - C14993) * C19689 +
             (C14996 - C14995 + C14998 - C14997) * C49950) *
                C43894) *
               C50013 * C50049) *
              C50282 +
          ((((C7898 - C7897 + C7900 - C7899) * C19689 +
             (C7902 - C7901 + C7904 - C7903) * C49950) *
                C50290 +
            (C13787 * C19689 + C13788 * C49950) * C50291 + C46852 * C43894) *
               C50013 * C50239 +
           (((C8088 - C8087 + C8090 - C8089) * C19689 +
             (C8092 - C8091 + C8094 - C8093) * C49950) *
                C50290 +
            (C14471 * C19689 + C14472 * C49950) * C50291 +
            ((C14461 - C14462 + C14463 - C14464) * C19689 +
             (C14465 - C14466 + C14467 - C14468) * C49950) *
                C43894) *
               C50013 * C50049) *
              C50283 +
          (((C7937 * C19689 + C7938 * C49950) * C50290 +
            (C14185 * C19689 + C14186 * C49950) * C50291 +
            ((C8289 - C8290 + C8291 - C8292) * C19689 +
             (C8293 - C8294 + C8295 - C8296) * C49950) *
                C43894) *
               C50013 * C50239 +
           ((C8455 * C19689 + C8456 * C49950) * C50290 +
            ((C8820 - C8819 + C8822 - C8821) * C19689 +
             (C8824 - C8823 + C8826 - C8825) * C49950) *
                C50291 +
            ((C7891 * C1189 - C50252 * C1195 + C7892 * C2637 - C50146 * C2642) *
                 C19689 +
             (C7891 * C1196 - C50252 * C1201 + C7892 * C2643 - C50146 * C2646) *
                 C49950) *
                C43894) *
               C50013 * C50049) *
              C612)) /
        (p * q * std::sqrt(p + q));
    d2ee[166] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                  C19689 +
              (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                  C49950) *
                 C50290 +
             ((C13745 - C13746 + C13747 - C13748) * C19689 +
              (C13749 - C13750 + C13751 - C13752) * C49950) *
                 C50291 +
             C46855 * C43894) *
                C50240 +
            (((C13746 - C13745 + C13748 - C13747) * C19689 +
              (C13750 - C13749 + C13752 - C13751) * C49950) *
                 C50290 +
             ((C13761 - C13762 + C13763 - C13764) * C19689 +
              (C13765 - C13766 + C13767 - C13768) * C49950) *
                 C50291 +
             ((C16172 - C16171 + C16174 - C16173) * C19689 +
              (C16176 - C16175 + C16178 - C16177) * C49950) *
                 C43894) *
                C50077) *
               C50239 +
           ((((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                  C19689 +
              (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                  C49950) *
                 C50290 +
             ((C14445 - C14446 + C14447 - C14448) * C19689 +
              (C14449 - C14450 + C14451 - C14452) * C49950) *
                 C50291 +
             ((C14992 - C14991 + C14994 - C14993) * C19689 +
              (C14996 - C14995 + C14998 - C14997) * C49950) *
                 C43894) *
                C50240 +
            (((C14446 - C14445 + C14448 - C14447) * C19689 +
              (C14450 - C14449 + C14452 - C14451) * C49950) *
                 C50290 +
             ((C14991 - C14992 + C14993 - C14994) * C19689 +
              (C14995 - C14996 + C14997 - C14998) * C49950) *
                 C50291 +
             ((C50252 * C4499 - C7891 * C4495 + C50146 * C4500 -
               C7892 * C4496) *
                  C19689 +
              (C50252 * C4507 - C7891 * C4501 + C50146 * C4508 -
               C7892 * C4502) *
                  C49950) *
                 C43894) *
                C50077) *
               C50049) *
              C279 +
          (((((C7898 - C7897 + C7900 - C7899) * C19689 +
              (C7902 - C7901 + C7904 - C7903) * C49950) *
                 C50290 +
             (C13787 * C19689 + C13788 * C49950) * C50291 + C46852 * C43894) *
                C50240 +
            ((C13785 * C19689 + C13786 * C49950) * C50290 +
             (C13791 * C19689 + C13792 * C49950) * C50291 +
             ((C13777 - C13778 + C13779 - C13780) * C19689 +
              (C13781 - C13782 + C13783 - C13784) * C49950) *
                 C43894) *
                C50077) *
               C50239 +
           ((((C8088 - C8087 + C8090 - C8089) * C19689 +
              (C8092 - C8091 + C8094 - C8093) * C49950) *
                 C50290 +
             (C14471 * C19689 + C14472 * C49950) * C50291 +
             ((C14461 - C14462 + C14463 - C14464) * C19689 +
              (C14465 - C14466 + C14467 - C14468) * C49950) *
                 C43894) *
                C50240 +
            ((C14469 * C19689 + C14470 * C49950) * C50290 +
             ((C14462 - C14461 + C14464 - C14463) * C19689 +
              (C14466 - C14465 + C14468 - C14467) * C49950) *
                 C50291 +
             ((C7891 * C4497 - C50252 * C4503 + C7892 * C4498 -
               C50146 * C4504) *
                  C19689 +
              (C7891 * C4505 - C50252 * C4509 + C7892 * C4506 -
               C50146 * C4510) *
                  C49950) *
                 C43894) *
                C50077) *
               C50049) *
              C49984)) /
        (p * q * std::sqrt(p + q));
    d2ee[167] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C19689 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C49950) *
                C50290 +
            ((C13745 - C13746 + C13747 - C13748) * C19689 +
             (C13749 - C13750 + C13751 - C13752) * C49950) *
                C50291 +
            ((C13762 - C13761 + C13764 - C13763) * C19689 +
             (C13766 - C13765 + C13768 - C13767) * C49950) *
                C43894) *
               C50013 * C276 +
           (((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                 C19689 +
             (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                 C49950) *
                C50290 +
            ((C14445 - C14446 + C14447 - C14448) * C19689 +
             (C14449 - C14450 + C14451 - C14452) * C49950) *
                C50291 +
            ((C14992 - C14991 + C14994 - C14993) * C19689 +
             (C14996 - C14995 + C14998 - C14997) * C49950) *
                C43894) *
               C50013 * C277 +
           (((C50252 * C299 - C7891 * C285 + C50146 * C1077 - C7892 * C1073) *
                 C19689 +
             (C50252 * C315 - C7891 * C300 + C50146 * C1085 - C7892 * C1078) *
                 C49950) *
                C50290 +
            ((C15645 - C15646 + C15647 - C15648) * C19689 +
             (C15649 - C15650 + C15651 - C15652) * C49950) *
                C50291 +
            ((C50252 * C2638 - C7891 * C2635 + C50146 * C3605 - C7892 * C3603) *
                 C19689 +
             (C50252 * C2644 - C7891 * C2639 + C50146 * C3609 - C7892 * C3606) *
                 C49950) *
                C43894) *
               C50013 * C278) *
              C279 +
          ((((C7898 - C7897 + C7900 - C7899) * C19689 +
             (C7902 - C7901 + C7904 - C7903) * C49950) *
                C50290 +
            (C13787 * C19689 + C13788 * C49950) * C50291 +
            (C13789 * C19689 + C13790 * C49950) * C43894) *
               C50013 * C276 +
           (((C8088 - C8087 + C8090 - C8089) * C19689 +
             (C8092 - C8091 + C8094 - C8093) * C49950) *
                C50290 +
            (C14471 * C19689 + C14472 * C49950) * C50291 +
            ((C14461 - C14462 + C14463 - C14464) * C19689 +
             (C14465 - C14466 + C14467 - C14468) * C49950) *
                C43894) *
               C50013 * C277 +
           (((C8104 - C8103 + C8106 - C8105) * C19689 +
             (C8108 - C8107 + C8110 - C8109) * C49950) *
                C50290 +
            ((C13544 - C13543 + C13546 - C13545) * C19689 +
             (C13548 - C13547 + C13550 - C13549) * C49950) *
                C50291 +
            ((C7891 * C2636 - C50252 * C2640 + C7892 * C3604 - C50146 * C3607) *
                 C19689 +
             (C7891 * C2641 - C50252 * C2645 + C7892 * C3608 - C50146 * C3610) *
                 C49950) *
                C43894) *
               C50013 * C278) *
              C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                C19689 +
            (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                C49950) *
               C50290 +
           ((C13745 - C13746 + C13747 - C13748) * C19689 +
            (C13749 - C13750 + C13751 - C13752) * C49950) *
               C50291 +
           ((C13762 - C13761 + C13764 - C13763) * C19689 +
            (C13766 - C13765 + C13768 - C13767) * C49950) *
               C43894) *
              C50013 * C49997 * C113 +
          (((C7898 - C7897 + C7900 - C7899) * C19689 +
            (C7902 - C7901 + C7904 - C7903) * C49950) *
               C50290 +
           (C13787 * C19689 + C13788 * C49950) * C50291 +
           (C13789 * C19689 + C13790 * C49950) * C43894) *
              C50013 * C49997 * C114 +
          ((C7937 * C19689 + C7938 * C49950) * C50290 +
           (C14185 * C19689 + C14186 * C49950) * C50291 +
           ((C8289 - C8290 + C8291 - C8292) * C19689 +
            (C8293 - C8294 + C8295 - C8296) * C49950) *
               C43894) *
              C50013 * C49997 * C115 +
          ((C7939 * C19689 + C7940 * C49950) * C50290 +
           ((C8608 - C8607 + C8610 - C8609) * C19689 +
            (C8612 - C8611 + C8614 - C8613) * C49950) *
               C50291 +
           ((C7891 * C453 - C50252 * C470 + C7892 * C1190 - C50146 * C1197) *
                C19689 +
            (C7891 * C471 - C50252 * C483 + C7892 * C1198 - C50146 * C1202) *
                C49950) *
               C43894) *
              C50013 * C49997 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C19689 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C49950) *
                C50290 +
            ((C13745 - C13746 + C13747 - C13748) * C19689 +
             (C13749 - C13750 + C13751 - C13752) * C49950) *
                C50291 +
            C46855 * C43894) *
               C443 +
           (((C13746 - C13745 + C13748 - C13747) * C19689 +
             (C13750 - C13749 + C13752 - C13751) * C49950) *
                C50290 +
            ((C13761 - C13762 + C13763 - C13764) * C19689 +
             (C13765 - C13766 + C13767 - C13768) * C49950) *
                C50291 +
            ((C16172 - C16171 + C16174 - C16173) * C19689 +
             (C16176 - C16175 + C16178 - C16177) * C49950) *
                C43894) *
               C444 +
           (C46855 * C50290 +
            ((C16171 - C16172 + C16173 - C16174) * C19689 +
             (C16175 - C16176 + C16177 - C16178) * C49950) *
                C50291 +
            ((C50252 * C5405 - C7891 * C5402 + C50146 * C6378 - C7892 * C6376) *
                 C19689 +
             (C50252 * C5411 - C7891 * C5406 + C50146 * C6382 - C7892 * C6379) *
                 C49950) *
                C43894) *
               C445) *
              C49997 * C279 +
          ((((C7898 - C7897 + C7900 - C7899) * C19689 +
             (C7902 - C7901 + C7904 - C7903) * C49950) *
                C50290 +
            (C13787 * C19689 + C13788 * C49950) * C50291 + C46852 * C43894) *
               C443 +
           ((C13785 * C19689 + C13786 * C49950) * C50290 +
            (C13791 * C19689 + C13792 * C49950) * C50291 +
            ((C13777 - C13778 + C13779 - C13780) * C19689 +
             (C13781 - C13782 + C13783 - C13784) * C49950) *
                C43894) *
               C444 +
           (C46852 * C50290 +
            ((C13778 - C13777 + C13780 - C13779) * C19689 +
             (C13782 - C13781 + C13784 - C13783) * C49950) *
                C50291 +
            ((C7891 * C5403 - C50252 * C5407 + C7892 * C6377 - C50146 * C6380) *
                 C19689 +
             (C7891 * C5408 - C50252 * C5412 + C7892 * C6381 - C50146 * C6383) *
                 C49950) *
                C43894) *
               C445) *
              C49997 * C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[168] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C19689 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C49950) *
                C50290 +
            ((C13745 - C13746 + C13747 - C13748) * C19689 +
             (C13749 - C13750 + C13751 - C13752) * C49950) *
                C50291 +
            C46855 * C43894) *
               C50240 +
           (((C13746 - C13745 + C13748 - C13747) * C19689 +
             (C13750 - C13749 + C13752 - C13751) * C49950) *
                C50290 +
            ((C13761 - C13762 + C13763 - C13764) * C19689 +
             (C13765 - C13766 + C13767 - C13768) * C49950) *
                C50291 +
            ((C16172 - C16171 + C16174 - C16173) * C19689 +
             (C16176 - C16175 + C16178 - C16177) * C49950) *
                C43894) *
               C50077) *
              C49997 * C50282 +
          ((((C7898 - C7897 + C7900 - C7899) * C19689 +
             (C7902 - C7901 + C7904 - C7903) * C49950) *
                C50290 +
            (C13787 * C19689 + C13788 * C49950) * C50291 + C46852 * C43894) *
               C50240 +
           ((C13785 * C19689 + C13786 * C49950) * C50290 +
            (C13791 * C19689 + C13792 * C49950) * C50291 +
            ((C13777 - C13778 + C13779 - C13780) * C19689 +
             (C13781 - C13782 + C13783 - C13784) * C49950) *
                C43894) *
               C50077) *
              C49997 * C50283 +
          (((C7937 * C19689 + C7938 * C49950) * C50290 +
            (C14185 * C19689 + C14186 * C49950) * C50291 +
            ((C8289 - C8290 + C8291 - C8292) * C19689 +
             (C8293 - C8294 + C8295 - C8296) * C49950) *
                C43894) *
               C50240 +
           ((C8615 * C19689 + C8616 * C49950) * C50290 +
            ((C8290 - C8289 + C8292 - C8291) * C19689 +
             (C8294 - C8293 + C8296 - C8295) * C49950) *
                C50291 +
            ((C7891 * C1820 - C50252 * C1826 + C7892 * C5962 - C50146 * C5963) *
                 C19689 +
             (C7891 * C1827 - C50252 * C1832 + C7892 * C5964 - C50146 * C5965) *
                 C49950) *
                C43894) *
               C50077) *
              C49997 * C612)) /
        (p * q * std::sqrt(p + q));
    d2ee[169] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                C19689 +
            (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                C49950) *
               C50290 +
           ((C13745 - C13746 + C13747 - C13748) * C19689 +
            (C13749 - C13750 + C13751 - C13752) * C49950) *
               C50291 +
           ((C13762 - C13761 + C13764 - C13763) * C19689 +
            (C13766 - C13765 + C13768 - C13767) * C49950) *
               C43894) *
              C50013 * C49997 * C113 +
          (((C7898 - C7897 + C7900 - C7899) * C19689 +
            (C7902 - C7901 + C7904 - C7903) * C49950) *
               C50290 +
           (C13787 * C19689 + C13788 * C49950) * C50291 +
           (C13789 * C19689 + C13790 * C49950) * C43894) *
              C50013 * C49997 * C114 +
          ((C7937 * C19689 + C7938 * C49950) * C50290 +
           (C14185 * C19689 + C14186 * C49950) * C50291 +
           ((C8289 - C8290 + C8291 - C8292) * C19689 +
            (C8293 - C8294 + C8295 - C8296) * C49950) *
               C43894) *
              C50013 * C49997 * C115 +
          ((C7939 * C19689 + C7940 * C49950) * C50290 +
           ((C8608 - C8607 + C8610 - C8609) * C19689 +
            (C8612 - C8611 + C8614 - C8613) * C49950) *
               C50291 +
           ((C7891 * C453 - C50252 * C470 + C7892 * C1190 - C50146 * C1197) *
                C19689 +
            (C7891 * C471 - C50252 * C483 + C7892 * C1198 - C50146 * C1202) *
                C49950) *
               C43894) *
              C50013 * C49997 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C19689 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C49950) *
                C50290 +
            ((C13745 - C13746 + C13747 - C13748) * C19689 +
             (C13749 - C13750 + C13751 - C13752) * C49950) *
                C50291 +
            ((C13762 - C13761 + C13764 - C13763) * C19689 +
             (C13766 - C13765 + C13768 - C13767) * C49950) *
                C43894) *
               C50013 * C276 +
           (((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                 C19689 +
             (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                 C49950) *
                C50290 +
            ((C14445 - C14446 + C14447 - C14448) * C19689 +
             (C14449 - C14450 + C14451 - C14452) * C49950) *
                C50291 +
            ((C14992 - C14991 + C14994 - C14993) * C19689 +
             (C14996 - C14995 + C14998 - C14997) * C49950) *
                C43894) *
               C50013 * C277 +
           (((C50252 * C299 - C7891 * C285 + C50146 * C1077 - C7892 * C1073) *
                 C19689 +
             (C50252 * C315 - C7891 * C300 + C50146 * C1085 - C7892 * C1078) *
                 C49950) *
                C50290 +
            ((C15645 - C15646 + C15647 - C15648) * C19689 +
             (C15649 - C15650 + C15651 - C15652) * C49950) *
                C50291 +
            ((C50252 * C2638 - C7891 * C2635 + C50146 * C3605 - C7892 * C3603) *
                 C19689 +
             (C50252 * C2644 - C7891 * C2639 + C50146 * C3609 - C7892 * C3606) *
                 C49950) *
                C43894) *
               C50013 * C278) *
              C279 +
          ((((C7898 - C7897 + C7900 - C7899) * C19689 +
             (C7902 - C7901 + C7904 - C7903) * C49950) *
                C50290 +
            (C13787 * C19689 + C13788 * C49950) * C50291 +
            (C13789 * C19689 + C13790 * C49950) * C43894) *
               C50013 * C276 +
           (((C8088 - C8087 + C8090 - C8089) * C19689 +
             (C8092 - C8091 + C8094 - C8093) * C49950) *
                C50290 +
            (C14471 * C19689 + C14472 * C49950) * C50291 +
            ((C14461 - C14462 + C14463 - C14464) * C19689 +
             (C14465 - C14466 + C14467 - C14468) * C49950) *
                C43894) *
               C50013 * C277 +
           (((C8104 - C8103 + C8106 - C8105) * C19689 +
             (C8108 - C8107 + C8110 - C8109) * C49950) *
                C50290 +
            ((C13544 - C13543 + C13546 - C13545) * C19689 +
             (C13548 - C13547 + C13550 - C13549) * C49950) *
                C50291 +
            ((C7891 * C2636 - C50252 * C2640 + C7892 * C3604 - C50146 * C3607) *
                 C19689 +
             (C7891 * C2641 - C50252 * C2645 + C7892 * C3608 - C50146 * C3610) *
                 C49950) *
                C43894) *
               C50013 * C278) *
              C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[170] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C19689 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C49950) *
                C50290 +
            ((C13745 - C13746 + C13747 - C13748) * C19689 +
             (C13749 - C13750 + C13751 - C13752) * C49950) *
                C50291 +
            C46855 * C43894) *
               C50013 * C50284 +
           (((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                 C19689 +
             (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                 C49950) *
                C50290 +
            ((C14445 - C14446 + C14447 - C14448) * C19689 +
             (C14449 - C14450 + C14451 - C14452) * C49950) *
                C50291 +
            C47748 * C43894) *
               C50013 * C50285 +
           (((C50252 * C299 - C7891 * C285 + C50146 * C1077 - C7892 * C1073) *
                 C19689 +
             (C50252 * C315 - C7891 * C300 + C50146 * C1085 - C7892 * C1078) *
                 C49950) *
                C50290 +
            ((C15645 - C15646 + C15647 - C15648) * C19689 +
             (C15649 - C15650 + C15651 - C15652) * C49950) *
                C50291 +
            ((C50252 * C2638 - C7891 * C2635 + C50146 * C3605 - C7892 * C3603) *
                 C19689 +
             (C50252 * C2644 - C7891 * C2639 + C50146 * C3609 - C7892 * C3606) *
                 C49950) *
                C43894) *
               C50013 * C1303) *
              C50231 +
          ((((C7898 - C7897 + C7900 - C7899) * C19689 +
             (C7902 - C7901 + C7904 - C7903) * C49950) *
                C50290 +
            (C13787 * C19689 + C13788 * C49950) * C50291 + C46852 * C43894) *
               C50013 * C50284 +
           (((C8088 - C8087 + C8090 - C8089) * C19689 +
             (C8092 - C8091 + C8094 - C8093) * C49950) *
                C50290 +
            (C14471 * C19689 + C14472 * C49950) * C50291 +
            ((C14461 - C14462 + C14463 - C14464) * C19689 +
             (C14465 - C14466 + C14467 - C14468) * C49950) *
                C43894) *
               C50013 * C50285 +
           (((C8104 - C8103 + C8106 - C8105) * C19689 +
             (C8108 - C8107 + C8110 - C8109) * C49950) *
                C50290 +
            ((C13544 - C13543 + C13546 - C13545) * C19689 +
             (C13548 - C13547 + C13550 - C13549) * C49950) *
                C50291 +
            ((C7891 * C2636 - C50252 * C2640 + C7892 * C3604 - C50146 * C3607) *
                 C19689 +
             (C7891 * C2641 - C50252 * C2645 + C7892 * C3608 - C50146 * C3610) *
                 C49950) *
                C43894) *
               C50013 * C1303) *
              C49984)) /
        (p * q * std::sqrt(p + q));
    d2ee[171] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C19689 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C49950) *
                C50290 +
            ((C13745 - C13746 + C13747 - C13748) * C19689 +
             (C13749 - C13750 + C13751 - C13752) * C49950) *
                C50291 +
            C46855 * C43894) *
               C50240 +
           (((C13746 - C13745 + C13748 - C13747) * C19689 +
             (C13750 - C13749 + C13752 - C13751) * C49950) *
                C50290 +
            ((C13761 - C13762 + C13763 - C13764) * C19689 +
             (C13765 - C13766 + C13767 - C13768) * C49950) *
                C50291 +
            ((C16172 - C16171 + C16174 - C16173) * C19689 +
             (C16176 - C16175 + C16178 - C16177) * C49950) *
                C43894) *
               C50077) *
              C50284 +
          ((((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                 C19689 +
             (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                 C49950) *
                C50290 +
            ((C14445 - C14446 + C14447 - C14448) * C19689 +
             (C14449 - C14450 + C14451 - C14452) * C49950) *
                C50291 +
            C47748 * C43894) *
               C50240 +
           (((C14446 - C14445 + C14448 - C14447) * C19689 +
             (C14450 - C14449 + C14452 - C14451) * C49950) *
                C50290 +
            ((C14991 - C14992 + C14993 - C14994) * C19689 +
             (C14995 - C14996 + C14997 - C14998) * C49950) *
                C50291 +
            ((C47736 - C47737 + C47738 - C47739) * C19689 +
             (C47740 - C47741 + C47742 - C47743) * C49950) *
                C43894) *
               C50077) *
              C50285 +
          ((((C50252 * C299 - C7891 * C285 + C50146 * C1077 - C7892 * C1073) *
                 C19689 +
             (C50252 * C315 - C7891 * C300 + C50146 * C1085 - C7892 * C1078) *
                 C49950) *
                C50290 +
            ((C15645 - C15646 + C15647 - C15648) * C19689 +
             (C15649 - C15650 + C15651 - C15652) * C49950) *
                C50291 +
            ((C48235 - C48236 + C48237 - C48238) * C19689 +
             (C48239 - C48240 + C48241 - C48242) * C49950) *
                C43894) *
               C50240 +
           (((C15646 - C15645 + C15648 - C15647) * C19689 +
             (C15650 - C15649 + C15652 - C15651) * C49950) *
                C50290 +
            ((C48236 - C48235 + C48238 - C48237) * C19689 +
             (C48240 - C48239 + C48242 - C48241) * C49950) *
                C50291 +
            ((C7891 * C4496 - C50252 * C4500 + C7892 * C21074 -
              C50146 * C21075) *
                 C19689 +
             (C7891 * C4502 - C50252 * C4508 + C7892 * C21076 -
              C50146 * C21077) *
                 C49950) *
                C43894) *
               C50077) *
              C1303) *
         C49978) /
        (p * q * std::sqrt(p + q));
    d2ee[172] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                C19689 +
            (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                C49950) *
               C50290 +
           ((C13745 - C13746 + C13747 - C13748) * C19689 +
            (C13749 - C13750 + C13751 - C13752) * C49950) *
               C50291 +
           C46855 * C43894) *
              C50013 * C1068 +
          (((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                C19689 +
            (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                C49950) *
               C50290 +
           ((C14445 - C14446 + C14447 - C14448) * C19689 +
            (C14449 - C14450 + C14451 - C14452) * C49950) *
               C50291 +
           ((C14992 - C14991 + C14994 - C14993) * C19689 +
            (C14996 - C14995 + C14998 - C14997) * C49950) *
               C43894) *
              C50013 * C1069 +
          (((C50252 * C299 - C7891 * C285 + C50146 * C1077 - C7892 * C1073) *
                C19689 +
            (C50252 * C315 - C7891 * C300 + C50146 * C1085 - C7892 * C1078) *
                C49950) *
               C50290 +
           ((C15645 - C15646 + C15647 - C15648) * C19689 +
            (C15649 - C15650 + C15651 - C15652) * C49950) *
               C50291 +
           ((C50252 * C2638 - C7891 * C2635 + C50146 * C3605 - C7892 * C3603) *
                C19689 +
            (C50252 * C2644 - C7891 * C2639 + C50146 * C3609 - C7892 * C3606) *
                C49950) *
               C43894) *
              C50013 * C1070 +
          (((C7891 * C1073 - C50252 * C1077 + C7892 * C2453 - C50146 * C2456) *
                C19689 +
            (C7891 * C1078 - C50252 * C1085 + C7892 * C2457 - C50146 * C2462) *
                C49950) *
               C50290 +
           ((C7891 * C3181 - C50252 * C3184 + C7892 * C4097 - C50146 * C4099) *
                C19689 +
            (C7891 * C3185 - C50252 * C3190 + C7892 * C4100 - C50146 * C4103) *
                C49950) *
               C50291 +
           ((C7891 * C3603 - C50252 * C3605 + C7892 * C20478 -
             C50146 * C20479) *
                C19689 +
            (C7891 * C3606 - C50252 * C3609 + C7892 * C20480 -
             C50146 * C20481) *
                C49950) *
               C43894) *
              C50013 * C1071) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C19689 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C49950) *
                C50290 +
            ((C13745 - C13746 + C13747 - C13748) * C19689 +
             (C13749 - C13750 + C13751 - C13752) * C49950) *
                C50291 +
            C46855 * C43894) *
               C50013 * C997 +
           (((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                 C19689 +
             (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                 C49950) *
                C50290 +
            ((C14445 - C14446 + C14447 - C14448) * C19689 +
             (C14449 - C14450 + C14451 - C14452) * C49950) *
                C50291 +
            ((C14992 - C14991 + C14994 - C14993) * C19689 +
             (C14996 - C14995 + C14998 - C14997) * C49950) *
                C43894) *
               C50013 * C50049) *
              C999 +
          ((((C7898 - C7897 + C7900 - C7899) * C19689 +
             (C7902 - C7901 + C7904 - C7903) * C49950) *
                C50290 +
            (C13787 * C19689 + C13788 * C49950) * C50291 + C46852 * C43894) *
               C50013 * C997 +
           (((C8088 - C8087 + C8090 - C8089) * C19689 +
             (C8092 - C8091 + C8094 - C8093) * C49950) *
                C50290 +
            (C14471 * C19689 + C14472 * C49950) * C50291 +
            ((C14461 - C14462 + C14463 - C14464) * C19689 +
             (C14465 - C14466 + C14467 - C14468) * C49950) *
                C43894) *
               C50013 * C50049) *
              C1000 +
          (((C7937 * C19689 + C7938 * C49950) * C50290 +
            (C14185 * C19689 + C14186 * C49950) * C50291 +
            ((C8289 - C8290 + C8291 - C8292) * C19689 +
             (C8293 - C8294 + C8295 - C8296) * C49950) *
                C43894) *
               C50013 * C997 +
           ((C8455 * C19689 + C8456 * C49950) * C50290 +
            ((C8820 - C8819 + C8822 - C8821) * C19689 +
             (C8824 - C8823 + C8826 - C8825) * C49950) *
                C50291 +
            ((C7891 * C1189 - C50252 * C1195 + C7892 * C2637 - C50146 * C2642) *
                 C19689 +
             (C7891 * C1196 - C50252 * C1201 + C7892 * C2643 - C50146 * C2646) *
                 C49950) *
                C43894) *
               C50013 * C50049) *
              C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C19689 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C49950) *
                C50290 +
            ((C13745 - C13746 + C13747 - C13748) * C19689 +
             (C13749 - C13750 + C13751 - C13752) * C49950) *
                C50291 +
            C46855 * C43894) *
               C443 +
           (((C13746 - C13745 + C13748 - C13747) * C19689 +
             (C13750 - C13749 + C13752 - C13751) * C49950) *
                C50290 +
            ((C13761 - C13762 + C13763 - C13764) * C19689 +
             (C13765 - C13766 + C13767 - C13768) * C49950) *
                C50291 +
            ((C16172 - C16171 + C16174 - C16173) * C19689 +
             (C16176 - C16175 + C16178 - C16177) * C49950) *
                C43894) *
               C444 +
           (C46855 * C50290 +
            ((C16171 - C16172 + C16173 - C16174) * C19689 +
             (C16175 - C16176 + C16177 - C16178) * C49950) *
                C50291 +
            ((C50252 * C5405 - C7891 * C5402 + C50146 * C6378 - C7892 * C6376) *
                 C19689 +
             (C50252 * C5411 - C7891 * C5406 + C50146 * C6382 - C7892 * C6379) *
                 C49950) *
                C43894) *
               C445) *
              C997 +
          ((((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                 C19689 +
             (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                 C49950) *
                C50290 +
            ((C14445 - C14446 + C14447 - C14448) * C19689 +
             (C14449 - C14450 + C14451 - C14452) * C49950) *
                C50291 +
            C47748 * C43894) *
               C443 +
           (((C14446 - C14445 + C14448 - C14447) * C19689 +
             (C14450 - C14449 + C14452 - C14451) * C49950) *
                C50290 +
            ((C14991 - C14992 + C14993 - C14994) * C19689 +
             (C14995 - C14996 + C14997 - C14998) * C49950) *
                C50291 +
            ((C47736 - C47737 + C47738 - C47739) * C19689 +
             (C47740 - C47741 + C47742 - C47743) * C49950) *
                C43894) *
               C444 +
           (C47748 * C50290 +
            ((C47737 - C47736 + C47739 - C47738) * C19689 +
             (C47741 - C47740 + C47743 - C47742) * C49950) *
                C50291 +
            ((C7891 * C6376 - C50252 * C6378 + C7892 * C22744 -
              C50146 * C22745) *
                 C19689 +
             (C7891 * C6379 - C50252 * C6382 + C7892 * C22746 -
              C50146 * C22747) *
                 C49950) *
                C43894) *
               C445) *
              C50049) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[173] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                  C19689 +
              (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                  C49950) *
                 C50290 +
             ((C13745 - C13746 + C13747 - C13748) * C19689 +
              (C13749 - C13750 + C13751 - C13752) * C49950) *
                 C50291 +
             C46855 * C43894) *
                C50240 +
            (((C13746 - C13745 + C13748 - C13747) * C19689 +
              (C13750 - C13749 + C13752 - C13751) * C49950) *
                 C50290 +
             ((C13761 - C13762 + C13763 - C13764) * C19689 +
              (C13765 - C13766 + C13767 - C13768) * C49950) *
                 C50291 +
             ((C16172 - C16171 + C16174 - C16173) * C19689 +
              (C16176 - C16175 + C16178 - C16177) * C49950) *
                 C43894) *
                C50077) *
               C997 +
           ((((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                  C19689 +
              (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                  C49950) *
                 C50290 +
             ((C14445 - C14446 + C14447 - C14448) * C19689 +
              (C14449 - C14450 + C14451 - C14452) * C49950) *
                 C50291 +
             C47748 * C43894) *
                C50240 +
            (((C14446 - C14445 + C14448 - C14447) * C19689 +
              (C14450 - C14449 + C14452 - C14451) * C49950) *
                 C50290 +
             ((C14991 - C14992 + C14993 - C14994) * C19689 +
              (C14995 - C14996 + C14997 - C14998) * C49950) *
                 C50291 +
             ((C47736 - C47737 + C47738 - C47739) * C19689 +
              (C47740 - C47741 + C47742 - C47743) * C49950) *
                 C43894) *
                C50077) *
               C50049) *
              C50231 +
          (((((C7898 - C7897 + C7900 - C7899) * C19689 +
              (C7902 - C7901 + C7904 - C7903) * C49950) *
                 C50290 +
             (C13787 * C19689 + C13788 * C49950) * C50291 + C46852 * C43894) *
                C50240 +
            ((C13785 * C19689 + C13786 * C49950) * C50290 +
             (C13791 * C19689 + C13792 * C49950) * C50291 +
             ((C13777 - C13778 + C13779 - C13780) * C19689 +
              (C13781 - C13782 + C13783 - C13784) * C49950) *
                 C43894) *
                C50077) *
               C997 +
           ((((C8088 - C8087 + C8090 - C8089) * C19689 +
              (C8092 - C8091 + C8094 - C8093) * C49950) *
                 C50290 +
             (C14471 * C19689 + C14472 * C49950) * C50291 +
             ((C14461 - C14462 + C14463 - C14464) * C19689 +
              (C14465 - C14466 + C14467 - C14468) * C49950) *
                 C43894) *
                C50240 +
            ((C14469 * C19689 + C14470 * C49950) * C50290 +
             ((C14462 - C14461 + C14464 - C14463) * C19689 +
              (C14466 - C14465 + C14468 - C14467) * C49950) *
                 C50291 +
             ((C7891 * C4497 - C50252 * C4503 + C7892 * C4498 -
               C50146 * C4504) *
                  C19689 +
              (C7891 * C4505 - C50252 * C4509 + C7892 * C4506 -
               C50146 * C4510) *
                  C49950) *
                 C43894) *
                C50077) *
               C50049) *
              C49984)) /
        (p * q * std::sqrt(p + q));
    d2ee[174] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C19689 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C49950) *
                C50290 +
            ((C13745 - C13746 + C13747 - C13748) * C19689 +
             (C13749 - C13750 + C13751 - C13752) * C49950) *
                C50291 +
            C46855 * C43894) *
               C50013 * C997 +
           (((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                 C19689 +
             (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                 C49950) *
                C50290 +
            ((C14445 - C14446 + C14447 - C14448) * C19689 +
             (C14449 - C14450 + C14451 - C14452) * C49950) *
                C50291 +
            ((C14992 - C14991 + C14994 - C14993) * C19689 +
             (C14996 - C14995 + C14998 - C14997) * C49950) *
                C43894) *
               C50013 * C50049) *
              C999 +
          ((((C7898 - C7897 + C7900 - C7899) * C19689 +
             (C7902 - C7901 + C7904 - C7903) * C49950) *
                C50290 +
            (C13787 * C19689 + C13788 * C49950) * C50291 + C46852 * C43894) *
               C50013 * C997 +
           (((C8088 - C8087 + C8090 - C8089) * C19689 +
             (C8092 - C8091 + C8094 - C8093) * C49950) *
                C50290 +
            (C14471 * C19689 + C14472 * C49950) * C50291 +
            ((C14461 - C14462 + C14463 - C14464) * C19689 +
             (C14465 - C14466 + C14467 - C14468) * C49950) *
                C43894) *
               C50013 * C50049) *
              C1000 +
          (((C7937 * C19689 + C7938 * C49950) * C50290 +
            (C14185 * C19689 + C14186 * C49950) * C50291 +
            ((C8289 - C8290 + C8291 - C8292) * C19689 +
             (C8293 - C8294 + C8295 - C8296) * C49950) *
                C43894) *
               C50013 * C997 +
           ((C8455 * C19689 + C8456 * C49950) * C50290 +
            ((C8820 - C8819 + C8822 - C8821) * C19689 +
             (C8824 - C8823 + C8826 - C8825) * C49950) *
                C50291 +
            ((C7891 * C1189 - C50252 * C1195 + C7892 * C2637 - C50146 * C2642) *
                 C19689 +
             (C7891 * C1196 - C50252 * C1201 + C7892 * C2643 - C50146 * C2646) *
                 C49950) *
                C43894) *
               C50013 * C50049) *
              C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                C19689 +
            (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                C49950) *
               C50290 +
           ((C13745 - C13746 + C13747 - C13748) * C19689 +
            (C13749 - C13750 + C13751 - C13752) * C49950) *
               C50291 +
           C46855 * C43894) *
              C50013 * C1068 +
          (((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                C19689 +
            (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                C49950) *
               C50290 +
           ((C14445 - C14446 + C14447 - C14448) * C19689 +
            (C14449 - C14450 + C14451 - C14452) * C49950) *
               C50291 +
           ((C14992 - C14991 + C14994 - C14993) * C19689 +
            (C14996 - C14995 + C14998 - C14997) * C49950) *
               C43894) *
              C50013 * C1069 +
          (((C50252 * C299 - C7891 * C285 + C50146 * C1077 - C7892 * C1073) *
                C19689 +
            (C50252 * C315 - C7891 * C300 + C50146 * C1085 - C7892 * C1078) *
                C49950) *
               C50290 +
           ((C15645 - C15646 + C15647 - C15648) * C19689 +
            (C15649 - C15650 + C15651 - C15652) * C49950) *
               C50291 +
           ((C50252 * C2638 - C7891 * C2635 + C50146 * C3605 - C7892 * C3603) *
                C19689 +
            (C50252 * C2644 - C7891 * C2639 + C50146 * C3609 - C7892 * C3606) *
                C49950) *
               C43894) *
              C50013 * C1070 +
          (((C7891 * C1073 - C50252 * C1077 + C7892 * C2453 - C50146 * C2456) *
                C19689 +
            (C7891 * C1078 - C50252 * C1085 + C7892 * C2457 - C50146 * C2462) *
                C49950) *
               C50290 +
           ((C7891 * C3181 - C50252 * C3184 + C7892 * C4097 - C50146 * C4099) *
                C19689 +
            (C7891 * C3185 - C50252 * C3190 + C7892 * C4100 - C50146 * C4103) *
                C49950) *
               C50291 +
           ((C7891 * C3603 - C50252 * C3605 + C7892 * C20478 -
             C50146 * C20479) *
                C19689 +
            (C7891 * C3606 - C50252 * C3609 + C7892 * C20480 -
             C50146 * C20481) *
                C49950) *
               C43894) *
              C50013 * C1071) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[175] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                  C19689 +
              (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                  C49950) *
                 C50290 +
             ((C13745 - C13746 + C13747 - C13748) * C19689 +
              (C13749 - C13750 + C13751 - C13752) * C49950) *
                 C50291 +
             C46855 * C43894) *
                C1648 +
            (((C13746 - C13745 + C13748 - C13747) * C19689 +
              (C13750 - C13749 + C13752 - C13751) * C49950) *
                 C50290 +
             ((C13761 - C13762 + C13763 - C13764) * C19689 +
              (C13765 - C13766 + C13767 - C13768) * C49950) *
                 C50291 +
             C48649 * C43894) *
                C50077) *
               C50239 +
           ((((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                  C19689 +
              (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                  C49950) *
                 C50290 +
             ((C14445 - C14446 + C14447 - C14448) * C19689 +
              (C14449 - C14450 + C14451 - C14452) * C49950) *
                 C50291 +
             C47748 * C43894) *
                C1648 +
            (((C14446 - C14445 + C14448 - C14447) * C19689 +
              (C14450 - C14449 + C14452 - C14451) * C49950) *
                 C50290 +
             ((C14991 - C14992 + C14993 - C14994) * C19689 +
              (C14995 - C14996 + C14997 - C14998) * C49950) *
                 C50291 +
             ((C47736 - C47737 + C47738 - C47739) * C19689 +
              (C47740 - C47741 + C47742 - C47743) * C49950) *
                 C43894) *
                C50077) *
               C50049) *
              C50231 +
          (((((C7898 - C7897 + C7900 - C7899) * C19689 +
              (C7902 - C7901 + C7904 - C7903) * C49950) *
                 C50290 +
             (C13787 * C19689 + C13788 * C49950) * C50291 + C46852 * C43894) *
                C1648 +
            ((C13785 * C19689 + C13786 * C49950) * C50290 +
             (C13791 * C19689 + C13792 * C49950) * C50291 +
             ((C13777 - C13778 + C13779 - C13780) * C19689 +
              (C13781 - C13782 + C13783 - C13784) * C49950) *
                 C43894) *
                C50077) *
               C50239 +
           ((((C8088 - C8087 + C8090 - C8089) * C19689 +
              (C8092 - C8091 + C8094 - C8093) * C49950) *
                 C50290 +
             (C14471 * C19689 + C14472 * C49950) * C50291 +
             ((C14461 - C14462 + C14463 - C14464) * C19689 +
              (C14465 - C14466 + C14467 - C14468) * C49950) *
                 C43894) *
                C1648 +
            ((C14469 * C19689 + C14470 * C49950) * C50290 +
             ((C14462 - C14461 + C14464 - C14463) * C19689 +
              (C14466 - C14465 + C14468 - C14467) * C49950) *
                 C50291 +
             ((C7891 * C4497 - C50252 * C4503 + C7892 * C4498 -
               C50146 * C4504) *
                  C19689 +
              (C7891 * C4505 - C50252 * C4509 + C7892 * C4506 -
               C50146 * C4510) *
                  C49950) *
                 C43894) *
                C50077) *
               C50049) *
              C49984)) /
        (p * q * std::sqrt(p + q));
    d2ee[176] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C19689 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C49950) *
                C50290 +
            ((C13745 - C13746 + C13747 - C13748) * C19689 +
             (C13749 - C13750 + C13751 - C13752) * C49950) *
                C50291 +
            C46855 * C43894) *
               C50286 +
           (((C13746 - C13745 + C13748 - C13747) * C19689 +
             (C13750 - C13749 + C13752 - C13751) * C49950) *
                C50290 +
            ((C13761 - C13762 + C13763 - C13764) * C19689 +
             (C13765 - C13766 + C13767 - C13768) * C49950) *
                C50291 +
            C48649 * C43894) *
               C50287 +
           (C46855 * C50290 +
            ((C16171 - C16172 + C16173 - C16174) * C19689 +
             (C16175 - C16176 + C16177 - C16178) * C49950) *
                C50291 +
            ((C48637 - C48638 + C48639 - C48640) * C19689 +
             (C48641 - C48642 + C48643 - C48644) * C49950) *
                C43894) *
               C2064) *
              C50239 +
          ((((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                 C19689 +
             (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                 C49950) *
                C50290 +
            ((C14445 - C14446 + C14447 - C14448) * C19689 +
             (C14449 - C14450 + C14451 - C14452) * C49950) *
                C50291 +
            C47748 * C43894) *
               C50286 +
           (((C14446 - C14445 + C14448 - C14447) * C19689 +
             (C14450 - C14449 + C14452 - C14451) * C49950) *
                C50290 +
            ((C14991 - C14992 + C14993 - C14994) * C19689 +
             (C14995 - C14996 + C14997 - C14998) * C49950) *
                C50291 +
            ((C47736 - C47737 + C47738 - C47739) * C19689 +
             (C47740 - C47741 + C47742 - C47743) * C49950) *
                C43894) *
               C50287 +
           (C47748 * C50290 +
            ((C47737 - C47736 + C47739 - C47738) * C19689 +
             (C47741 - C47740 + C47743 - C47742) * C49950) *
                C50291 +
            ((C7891 * C6376 - C50252 * C6378 + C7892 * C22744 -
              C50146 * C22745) *
                 C19689 +
             (C7891 * C6379 - C50252 * C6382 + C7892 * C22746 -
              C50146 * C22747) *
                 C49950) *
                C43894) *
               C2064) *
              C50049) *
         C49978) /
        (p * q * std::sqrt(p + q));
    d2ee[177] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C19689 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C49950) *
                C50290 +
            ((C13745 - C13746 + C13747 - C13748) * C19689 +
             (C13749 - C13750 + C13751 - C13752) * C49950) *
                C50291 +
            C46855 * C43894) *
               C1648 +
           (((C13746 - C13745 + C13748 - C13747) * C19689 +
             (C13750 - C13749 + C13752 - C13751) * C49950) *
                C50290 +
            ((C13761 - C13762 + C13763 - C13764) * C19689 +
             (C13765 - C13766 + C13767 - C13768) * C49950) *
                C50291 +
            ((C16172 - C16171 + C16174 - C16173) * C19689 +
             (C16176 - C16175 + C16178 - C16177) * C49950) *
                C43894) *
               C50077) *
              C276 +
          ((((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                 C19689 +
             (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                 C49950) *
                C50290 +
            ((C14445 - C14446 + C14447 - C14448) * C19689 +
             (C14449 - C14450 + C14451 - C14452) * C49950) *
                C50291 +
            C47748 * C43894) *
               C1648 +
           (((C14446 - C14445 + C14448 - C14447) * C19689 +
             (C14450 - C14449 + C14452 - C14451) * C49950) *
                C50290 +
            ((C14991 - C14992 + C14993 - C14994) * C19689 +
             (C14995 - C14996 + C14997 - C14998) * C49950) *
                C50291 +
            ((C47736 - C47737 + C47738 - C47739) * C19689 +
             (C47740 - C47741 + C47742 - C47743) * C49950) *
                C43894) *
               C50077) *
              C277 +
          ((((C50252 * C299 - C7891 * C285 + C50146 * C1077 - C7892 * C1073) *
                 C19689 +
             (C50252 * C315 - C7891 * C300 + C50146 * C1085 - C7892 * C1078) *
                 C49950) *
                C50290 +
            ((C15645 - C15646 + C15647 - C15648) * C19689 +
             (C15649 - C15650 + C15651 - C15652) * C49950) *
                C50291 +
            ((C48235 - C48236 + C48237 - C48238) * C19689 +
             (C48239 - C48240 + C48241 - C48242) * C49950) *
                C43894) *
               C1648 +
           (((C15646 - C15645 + C15648 - C15647) * C19689 +
             (C15650 - C15649 + C15652 - C15651) * C49950) *
                C50290 +
            ((C48236 - C48235 + C48238 - C48237) * C19689 +
             (C48240 - C48239 + C48242 - C48241) * C49950) *
                C50291 +
            ((C7891 * C4496 - C50252 * C4500 + C7892 * C21074 -
              C50146 * C21075) *
                 C19689 +
             (C7891 * C4502 - C50252 * C4508 + C7892 * C21076 -
              C50146 * C21077) *
                 C49950) *
                C43894) *
               C50077) *
              C278) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C19689 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C49950) *
                C50290 +
            ((C13745 - C13746 + C13747 - C13748) * C19689 +
             (C13749 - C13750 + C13751 - C13752) * C49950) *
                C50291 +
            C46855 * C43894) *
               C1648 +
           (((C13746 - C13745 + C13748 - C13747) * C19689 +
             (C13750 - C13749 + C13752 - C13751) * C49950) *
                C50290 +
            ((C13761 - C13762 + C13763 - C13764) * C19689 +
             (C13765 - C13766 + C13767 - C13768) * C49950) *
                C50291 +
            ((C16172 - C16171 + C16174 - C16173) * C19689 +
             (C16176 - C16175 + C16178 - C16177) * C49950) *
                C43894) *
               C50077) *
              C49997 * C999 +
          ((((C7898 - C7897 + C7900 - C7899) * C19689 +
             (C7902 - C7901 + C7904 - C7903) * C49950) *
                C50290 +
            (C13787 * C19689 + C13788 * C49950) * C50291 + C46852 * C43894) *
               C1648 +
           ((C13785 * C19689 + C13786 * C49950) * C50290 +
            (C13791 * C19689 + C13792 * C49950) * C50291 +
            ((C13777 - C13778 + C13779 - C13780) * C19689 +
             (C13781 - C13782 + C13783 - C13784) * C49950) *
                C43894) *
               C50077) *
              C49997 * C1000 +
          (((C7937 * C19689 + C7938 * C49950) * C50290 +
            (C14185 * C19689 + C14186 * C49950) * C50291 +
            ((C8289 - C8290 + C8291 - C8292) * C19689 +
             (C8293 - C8294 + C8295 - C8296) * C49950) *
                C43894) *
               C1648 +
           ((C8615 * C19689 + C8616 * C49950) * C50290 +
            ((C8290 - C8289 + C8292 - C8291) * C19689 +
             (C8294 - C8293 + C8296 - C8295) * C49950) *
                C50291 +
            ((C7891 * C1820 - C50252 * C1826 + C7892 * C5962 - C50146 * C5963) *
                 C19689 +
             (C7891 * C1827 - C50252 * C1832 + C7892 * C5964 - C50146 * C5965) *
                 C49950) *
                C43894) *
               C50077) *
              C49997 * C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                C19689 +
            (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                C49950) *
               C50290 +
           ((C13745 - C13746 + C13747 - C13748) * C19689 +
            (C13749 - C13750 + C13751 - C13752) * C49950) *
               C50291 +
           C46855 * C43894) *
              C1814 +
          (((C13746 - C13745 + C13748 - C13747) * C19689 +
            (C13750 - C13749 + C13752 - C13751) * C49950) *
               C50290 +
           ((C13761 - C13762 + C13763 - C13764) * C19689 +
            (C13765 - C13766 + C13767 - C13768) * C49950) *
               C50291 +
           C48649 * C43894) *
              C1815 +
          (C46855 * C50290 +
           ((C16171 - C16172 + C16173 - C16174) * C19689 +
            (C16175 - C16176 + C16177 - C16178) * C49950) *
               C50291 +
           ((C48637 - C48638 + C48639 - C48640) * C19689 +
            (C48641 - C48642 + C48643 - C48644) * C49950) *
               C43894) *
              C1816 +
          (C48649 * C50290 +
           ((C48638 - C48637 + C48640 - C48639) * C19689 +
            (C48642 - C48641 + C48644 - C48643) * C49950) *
               C50291 +
           ((C7891 * C7281 - C50252 * C7283 + C7892 * C23657 -
             C50146 * C23658) *
                C19689 +
            (C7891 * C7284 - C50252 * C7287 + C7892 * C23659 -
             C50146 * C23660) *
                C49950) *
               C43894) *
              C1817) *
         C49997 * C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[178] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C19689 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C49950) *
                C50290 +
            ((C13745 - C13746 + C13747 - C13748) * C19689 +
             (C13749 - C13750 + C13751 - C13752) * C49950) *
                C50291 +
            C46855 * C43894) *
               C50286 +
           (((C13746 - C13745 + C13748 - C13747) * C19689 +
             (C13750 - C13749 + C13752 - C13751) * C49950) *
                C50290 +
            ((C13761 - C13762 + C13763 - C13764) * C19689 +
             (C13765 - C13766 + C13767 - C13768) * C49950) *
                C50291 +
            C48649 * C43894) *
               C50287 +
           (C46855 * C50290 +
            ((C16171 - C16172 + C16173 - C16174) * C19689 +
             (C16175 - C16176 + C16177 - C16178) * C49950) *
                C50291 +
            ((C48637 - C48638 + C48639 - C48640) * C19689 +
             (C48641 - C48642 + C48643 - C48644) * C49950) *
                C43894) *
               C2064) *
              C49997 * C50231 +
          ((((C7898 - C7897 + C7900 - C7899) * C19689 +
             (C7902 - C7901 + C7904 - C7903) * C49950) *
                C50290 +
            (C13787 * C19689 + C13788 * C49950) * C50291 + C46852 * C43894) *
               C50286 +
           ((C13785 * C19689 + C13786 * C49950) * C50290 +
            (C13791 * C19689 + C13792 * C49950) * C50291 +
            ((C13777 - C13778 + C13779 - C13780) * C19689 +
             (C13781 - C13782 + C13783 - C13784) * C49950) *
                C43894) *
               C50287 +
           (C46852 * C50290 +
            ((C13778 - C13777 + C13780 - C13779) * C19689 +
             (C13782 - C13781 + C13784 - C13783) * C49950) *
                C50291 +
            ((C7891 * C5403 - C50252 * C5407 + C7892 * C6377 - C50146 * C6380) *
                 C19689 +
             (C7891 * C5408 - C50252 * C5412 + C7892 * C6381 - C50146 * C6383) *
                 C49950) *
                C43894) *
               C2064) *
              C49997 * C49984)) /
        (p * q * std::sqrt(p + q));
    d2ee[179] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C19689 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C49950) *
                C50290 +
            ((C13745 - C13746 + C13747 - C13748) * C19689 +
             (C13749 - C13750 + C13751 - C13752) * C49950) *
                C50291 +
            C46855 * C43894) *
               C1648 +
           (((C13746 - C13745 + C13748 - C13747) * C19689 +
             (C13750 - C13749 + C13752 - C13751) * C49950) *
                C50290 +
            ((C13761 - C13762 + C13763 - C13764) * C19689 +
             (C13765 - C13766 + C13767 - C13768) * C49950) *
                C50291 +
            ((C16172 - C16171 + C16174 - C16173) * C19689 +
             (C16176 - C16175 + C16178 - C16177) * C49950) *
                C43894) *
               C50077) *
              C49997 * C999 +
          ((((C7898 - C7897 + C7900 - C7899) * C19689 +
             (C7902 - C7901 + C7904 - C7903) * C49950) *
                C50290 +
            (C13787 * C19689 + C13788 * C49950) * C50291 + C46852 * C43894) *
               C1648 +
           ((C13785 * C19689 + C13786 * C49950) * C50290 +
            (C13791 * C19689 + C13792 * C49950) * C50291 +
            ((C13777 - C13778 + C13779 - C13780) * C19689 +
             (C13781 - C13782 + C13783 - C13784) * C49950) *
                C43894) *
               C50077) *
              C49997 * C1000 +
          (((C7937 * C19689 + C7938 * C49950) * C50290 +
            (C14185 * C19689 + C14186 * C49950) * C50291 +
            ((C8289 - C8290 + C8291 - C8292) * C19689 +
             (C8293 - C8294 + C8295 - C8296) * C49950) *
                C43894) *
               C1648 +
           ((C8615 * C19689 + C8616 * C49950) * C50290 +
            ((C8290 - C8289 + C8292 - C8291) * C19689 +
             (C8294 - C8293 + C8296 - C8295) * C49950) *
                C50291 +
            ((C7891 * C1820 - C50252 * C1826 + C7892 * C5962 - C50146 * C5963) *
                 C19689 +
             (C7891 * C1827 - C50252 * C1832 + C7892 * C5964 - C50146 * C5965) *
                 C49950) *
                C43894) *
               C50077) *
              C49997 * C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50252 * C129 - C7891 * C122 + C50146 * C291 - C7892 * C281) *
                 C19689 +
             (C50252 * C143 - C7891 * C130 + C50146 * C311 - C7892 * C292) *
                 C49950) *
                C50290 +
            ((C13745 - C13746 + C13747 - C13748) * C19689 +
             (C13749 - C13750 + C13751 - C13752) * C49950) *
                C50291 +
            C46855 * C43894) *
               C1648 +
           (((C13746 - C13745 + C13748 - C13747) * C19689 +
             (C13750 - C13749 + C13752 - C13751) * C49950) *
                C50290 +
            ((C13761 - C13762 + C13763 - C13764) * C19689 +
             (C13765 - C13766 + C13767 - C13768) * C49950) *
                C50291 +
            ((C16172 - C16171 + C16174 - C16173) * C19689 +
             (C16176 - C16175 + C16178 - C16177) * C49950) *
                C43894) *
               C50077) *
              C276 +
          ((((C7891 * C281 - C50252 * C291 + C7892 * C285 - C50146 * C299) *
                 C19689 +
             (C7891 * C292 - C50252 * C311 + C7892 * C300 - C50146 * C315) *
                 C49950) *
                C50290 +
            ((C14445 - C14446 + C14447 - C14448) * C19689 +
             (C14449 - C14450 + C14451 - C14452) * C49950) *
                C50291 +
            C47748 * C43894) *
               C1648 +
           (((C14446 - C14445 + C14448 - C14447) * C19689 +
             (C14450 - C14449 + C14452 - C14451) * C49950) *
                C50290 +
            ((C14991 - C14992 + C14993 - C14994) * C19689 +
             (C14995 - C14996 + C14997 - C14998) * C49950) *
                C50291 +
            ((C47736 - C47737 + C47738 - C47739) * C19689 +
             (C47740 - C47741 + C47742 - C47743) * C49950) *
                C43894) *
               C50077) *
              C277 +
          ((((C50252 * C299 - C7891 * C285 + C50146 * C1077 - C7892 * C1073) *
                 C19689 +
             (C50252 * C315 - C7891 * C300 + C50146 * C1085 - C7892 * C1078) *
                 C49950) *
                C50290 +
            ((C15645 - C15646 + C15647 - C15648) * C19689 +
             (C15649 - C15650 + C15651 - C15652) * C49950) *
                C50291 +
            ((C48235 - C48236 + C48237 - C48238) * C19689 +
             (C48239 - C48240 + C48241 - C48242) * C49950) *
                C43894) *
               C1648 +
           (((C15646 - C15645 + C15648 - C15647) * C19689 +
             (C15650 - C15649 + C15652 - C15651) * C49950) *
                C50290 +
            ((C48236 - C48235 + C48238 - C48237) * C19689 +
             (C48240 - C48239 + C48242 - C48241) * C49950) *
                C50291 +
            ((C7891 * C4496 - C50252 * C4500 + C7892 * C21074 -
              C50146 * C21075) *
                 C19689 +
             (C7891 * C4502 - C50252 * C4508 + C7892 * C21076 -
              C50146 * C21077) *
                 C49950) *
                C43894) *
               C50077) *
              C278) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[180] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
              C2263 * C299 - C2268 * C285) *
                 C19689 +
             (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
              C2263 * C315 - C2268 * C300) *
                 C49950) *
                C33256 +
            ((C36179 - C36180 + C36181 - C36182 + C36183 - C36184) * C19689 +
             (C36185 - C36186 + C36187 - C36188 + C36189 - C36190) * C49950) *
                C50174) *
               C50013 * C50239 +
           (((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
              C2268 * C1073 - C2263 * C1077) *
                 C19689 +
             (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
              C2268 * C1078 - C2263 * C1085) *
                 C49950) *
                C33256 +
            ((C2266 * C867 - C2261 * C872 + C2267 * C1534 - C2262 * C1538 +
              C2268 * C3181 - C2263 * C3184) *
                 C19689 +
             (C2266 * C873 - C2261 * C882 + C2267 * C1539 - C2262 * C1546 +
              C2268 * C3185 - C2263 * C3190) *
                 C49950) *
                C50174) *
               C50013 * C50049) *
              C50282 +
          ((((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C19689 +
             (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C49950) *
                C33256 +
            ((C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C19689 +
             (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49950) *
                C50174) *
               C50013 * C50239 +
           (((C2467 - C2466 + C2469 - C2468 + C2471 - C2470) * C19689 +
             (C2473 - C2472 + C2475 - C2474 + C2477 - C2476) * C49950) *
                C33256 +
            ((C3194 - C3195 + C3196 - C3197 + C3198 - C3199) * C19689 +
             (C3200 - C3201 + C3202 - C3203 + C3204 - C3205) * C49950) *
                C50174) *
               C50013 * C50049) *
              C50283 +
          ((((C2285 - C2284 + C2287 - C2286 + C2289 - C2288) * C19689 +
             (C2291 - C2290 + C2293 - C2292 + C2295 - C2294) * C49950) *
                C33256 +
            ((C2976 - C2977 + C2978 - C2979 + C2980 - C2981) * C19689 +
             (C2982 - C2983 + C2984 - C2985 + C2986 - C2987) * C49950) *
                C50174) *
               C50013 * C50239 +
           (((C2819 - C2818 + C2821 - C2820 + C2823 - C2822) * C19689 +
             (C2825 - C2824 + C2827 - C2826 + C2829 - C2828) * C49950) *
                C33256 +
            ((C2266 * C869 - C2261 * C876 + C2267 * C1536 - C2262 * C1542 +
              C2268 * C3183 - C2263 * C3188) *
                 C19689 +
             (C2266 * C877 - C2261 * C884 + C2267 * C1543 - C2262 * C1548 +
              C2268 * C3189 - C2263 * C3192) *
                 C49950) *
                C50174) *
               C50013 * C50049) *
              C612)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C16929 +
             (C50094 * C143 - C117 * C130) * C16924 + (C151 - C152) * C16930 +
             (C153 - C154) * C16925 + C171 * C16931 + C172 * C16926) *
                C33256 +
            ((C5415 - C5416) * C16929 + (C5417 - C5418) * C16924 +
             C5419 * C16930 + C5420 * C16925 + C5765 * C16931 +
             C5766 * C16926) *
                C50174) *
               C50013 * C50239 +
           (((C117 * C281 - C50094 * C291) * C16929 +
             (C117 * C292 - C50094 * C311) * C16924 + (C322 - C323) * C16930 +
             (C324 - C325) * C16925 + C618 * C16931 + C619 * C16926) *
                C33256 +
            ((C5967 - C5968) * C16929 + (C5969 - C5970) * C16924 +
             C5971 * C16930 + C5972 * C16925 + C11121 * C16931 +
             C11122 * C16926) *
                C50174) *
               C50013 * C50049) *
              C50282 +
          ((((C152 - C151) * C16929 + (C154 - C153) * C16924 +
             (C156 - C155) * C16930 + (C158 - C157) * C16925 + C175 * C16931 +
             C176 * C16926) *
                C33256 +
            (C5427 * C16929 + C5428 * C16924 + C730 * C16930 + C731 * C16925 +
             C732 * C16931 + C733 * C16926) *
                C50174) *
               C50013 * C50239 +
           (((C323 - C322) * C16929 + (C325 - C324) * C16924 +
             (C327 - C326) * C16930 + (C329 - C328) * C16925 +
             (C331 - C330) * C16931 + (C333 - C332) * C16926) *
                C33256 +
            (C5979 * C16929 + C5980 * C16924 + C11465 * C16930 +
             C11466 * C16925 + (C896 - C897) * C16931 +
             (C898 - C899) * C16926) *
                C50174) *
               C50013 * C50049) *
              C50283 +
          (((C171 * C16929 + C172 * C16924 + C173 * C16930 + C174 * C16925 +
             (C164 - C163) * C16931 + (C166 - C165) * C16926) *
                C33256 +
            (C5765 * C16929 + C5766 * C16924 + C11269 * C16930 +
             C11270 * C16925 + (C734 - C735) * C16931 +
             (C736 - C737) * C16926) *
                C50174) *
               C50013 * C50239 +
           ((C618 * C16929 + C619 * C16924 + C620 * C16930 + C621 * C16925 +
             (C623 - C622) * C16931 + (C625 - C624) * C16926) *
                C33256 +
            (C11121 * C16929 + C11122 * C16924 + (C897 - C896) * C16930 +
             (C899 - C898) * C16925 + (C117 * C871 - C50094 * C880) * C16931 +
             (C117 * C881 - C50094 * C886) * C16926) *
                C50174) *
               C50013 * C50049) *
              C612)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C19689 +
             (C50094 * C143 - C117 * C130) * C49950) *
                C38554 +
            ((C5415 - C5416) * C19689 + (C5417 - C5418) * C49950) * C38555 +
            C38763 * C38556 + C38768 * C38557) *
               C50013 * C50239 +
           (((C117 * C281 - C50094 * C291) * C19689 +
             (C117 * C292 - C50094 * C311) * C49950) *
                C38554 +
            ((C5967 - C5968) * C19689 + (C5969 - C5970) * C49950) * C38555 +
            (C6385 * C19689 + C6386 * C49950) * C38556 +
            ((C6390 - C6389) * C19689 + (C6392 - C6391) * C49950) * C38557) *
               C50013 * C50049) *
              C50282 +
          ((((C152 - C151) * C19689 + (C154 - C153) * C49950) * C38554 +
            (C5427 * C19689 + C5428 * C49950) * C38555 + C38766 * C38556 +
            C38767 * C38557) *
               C50013 * C50239 +
           (((C323 - C322) * C19689 + (C325 - C324) * C49950) * C38554 +
            (C5979 * C19689 + C5980 * C49950) * C38555 +
            (C5981 * C19689 + C5982 * C49950) * C38556 +
            ((C5983 - C5984) * C19689 + (C5985 - C5986) * C49950) * C38557) *
               C50013 * C50049) *
              C50283 +
          (((C171 * C19689 + C172 * C49950) * C38554 +
            (C5765 * C19689 + C5766 * C49950) * C38555 +
            (C5767 * C19689 + C5768 * C49950) * C38556 +
            ((C5445 - C5446) * C19689 + (C5447 - C5448) * C49950) * C38557) *
               C50013 * C50239 +
           ((C618 * C19689 + C619 * C49950) * C38554 +
            (C11121 * C19689 + C11122 * C49950) * C38555 +
            ((C5616 - C5615) * C19689 + (C5618 - C5617) * C49950) * C38556 +
            ((C117 * C5962 - C50094 * C5963) * C19689 +
             (C117 * C5964 - C50094 * C5965) * C49950) *
                C38557) *
               C50013 * C50049) *
              C612)) /
            (p * q * std::sqrt(p + q));
    d2ee[181] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
               C2263 * C299 - C2268 * C285) *
                  C19689 +
              (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
               C2263 * C315 - C2268 * C300) *
                  C49950) *
                 C33256 +
             ((C36179 - C36180 + C36181 - C36182 + C36183 - C36184) * C19689 +
              (C36185 - C36186 + C36187 - C36188 + C36189 - C36190) * C49950) *
                 C50174) *
                C50240 +
            (((C36180 - C36179 + C36182 - C36181 + C36184 - C36183) * C19689 +
              (C36186 - C36185 + C36188 - C36187 + C36190 - C36189) * C49950) *
                 C33256 +
             ((C36191 - C36192 + C36193 - C36194 + C36195 - C36196) * C19689 +
              (C36197 - C36198 + C36199 - C36200 + C36201 - C36202) * C49950) *
                 C50174) *
                C50077) *
               C50239 +
           ((((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
               C2268 * C1073 - C2263 * C1077) *
                  C19689 +
              (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
               C2268 * C1078 - C2263 * C1085) *
                  C49950) *
                 C33256 +
             ((C36689 - C36690 + C36691 - C36692 + C36693 - C36694) * C19689 +
              (C36695 - C36696 + C36697 - C36698 + C36699 - C36700) * C49950) *
                 C50174) *
                C50240 +
            (((C36690 - C36689 + C36692 - C36691 + C36694 - C36693) * C19689 +
              (C36696 - C36695 + C36698 - C36697 + C36700 - C36699) * C49950) *
                 C33256 +
             ((C2261 * C1191 - C2266 * C1187 + C2262 * C2638 - C2267 * C2635 +
               C2263 * C3605 - C2268 * C3603) *
                  C19689 +
              (C2261 * C1199 - C2266 * C1192 + C2262 * C2644 - C2267 * C2639 +
               C2263 * C3609 - C2268 * C3606) *
                  C49950) *
                 C50174) *
                C50077) *
               C50049) *
              C279 +
          (((((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C19689 +
              (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C49950) *
                 C33256 +
             ((C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C19689 +
              (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49950) *
                 C50174) *
                C50240 +
            (((C2649 - C2648 + C2651 - C2650 + C2653 - C2652) * C19689 +
              (C2655 - C2654 + C2657 - C2656 + C2659 - C2658) * C49950) *
                 C33256 +
             ((C2660 - C2661 + C2662 - C2663 + C2664 - C2665) * C19689 +
              (C2666 - C2667 + C2668 - C2669 + C2670 - C2671) * C49950) *
                 C50174) *
                C50077) *
               C50239 +
           ((((C2467 - C2466 + C2469 - C2468 + C2471 - C2470) * C19689 +
              (C2473 - C2472 + C2475 - C2474 + C2477 - C2476) * C49950) *
                 C33256 +
             ((C3194 - C3195 + C3196 - C3197 + C3198 - C3199) * C19689 +
              (C3200 - C3201 + C3202 - C3203 + C3204 - C3205) * C49950) *
                 C50174) *
                C50240 +
            (((C3195 - C3194 + C3197 - C3196 + C3199 - C3198) * C19689 +
              (C3201 - C3200 + C3203 - C3202 + C3205 - C3204) * C49950) *
                 C33256 +
             ((C2266 * C1188 - C2261 * C1193 + C2267 * C2636 - C2262 * C2640 +
               C2268 * C3604 - C2263 * C3607) *
                  C19689 +
              (C2266 * C1194 - C2261 * C1200 + C2267 * C2641 - C2262 * C2645 +
               C2268 * C3608 - C2263 * C3610) *
                  C49950) *
                 C50174) *
                C50077) *
               C50049) *
              C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C50094 * C129 - C117 * C122) * C16929 +
              (C50094 * C143 - C117 * C130) * C16924 + (C151 - C152) * C16930 +
              (C153 - C154) * C16925 + C171 * C16931 + C172 * C16926) *
                 C33256 +
             ((C5415 - C5416) * C16929 + (C5417 - C5418) * C16924 +
              C5419 * C16930 + C5420 * C16925 + C5765 * C16931 +
              C5766 * C16926) *
                 C50174) *
                C50240 +
            (((C5416 - C5415) * C16929 + (C5418 - C5417) * C16924 +
              C5427 * C16930 + C5428 * C16925 + C730 * C16931 + C731 * C16926) *
                 C33256 +
             ((C5422 - C5421) * C16929 + (C5424 - C5423) * C16924 +
              C5429 * C16930 + C5430 * C16925 + C5443 * C16931 +
              C5444 * C16926) *
                 C50174) *
                C50077) *
               C50239 +
           ((((C117 * C281 - C50094 * C291) * C16929 +
              (C117 * C292 - C50094 * C311) * C16924 + (C322 - C323) * C16930 +
              (C324 - C325) * C16925 + C618 * C16931 + C619 * C16926) *
                 C33256 +
             ((C5967 - C5968) * C16929 + (C5969 - C5970) * C16924 +
              C5971 * C16930 + C5972 * C16925 + C11121 * C16931 +
              C11122 * C16926) *
                 C50174) *
                C50240 +
            (((C5968 - C5967) * C16929 + (C5970 - C5969) * C16924 +
              C5979 * C16930 + C5980 * C16925 + C11465 * C16931 +
              C11466 * C16926) *
                 C33256 +
             ((C5974 - C5973) * C16929 + (C5976 - C5975) * C16924 +
              C5981 * C16930 + C5982 * C16925 + (C5615 - C5616) * C16931 +
              (C5617 - C5618) * C16926) *
                 C50174) *
                C50077) *
               C50049) *
              C279 +
          (((((C152 - C151) * C16929 + (C154 - C153) * C16924 +
              (C156 - C155) * C16930 + (C158 - C157) * C16925 + C175 * C16931 +
              C176 * C16926) *
                 C33256 +
             (C5427 * C16929 + C5428 * C16924 + C730 * C16930 + C731 * C16925 +
              C732 * C16931 + C733 * C16926) *
                 C50174) *
                C50240 +
            ((C5419 * C16929 + C5420 * C16924 + C5765 * C16930 +
              C5766 * C16925 + C11269 * C16931 + C11270 * C16926) *
                 C33256 +
             (C5425 * C16929 + C5426 * C16924 + C5767 * C16930 +
              C5768 * C16925 + (C507 - C508) * C16931 +
              (C509 - C510) * C16926) *
                 C50174) *
                C50077) *
               C50239 +
           ((((C323 - C322) * C16929 + (C325 - C324) * C16924 +
              (C327 - C326) * C16930 + (C329 - C328) * C16925 +
              (C331 - C330) * C16931 + (C333 - C332) * C16926) *
                 C33256 +
             (C5979 * C16929 + C5980 * C16924 + C11465 * C16930 +
              C11466 * C16925 + (C896 - C897) * C16931 +
              (C898 - C899) * C16926) *
                 C50174) *
                C50240 +
            ((C5971 * C16929 + C5972 * C16924 + C11121 * C16930 +
              C11122 * C16925 + (C897 - C896) * C16931 +
              (C899 - C898) * C16926) *
                 C33256 +
             (C5977 * C16929 + C5978 * C16924 + (C5616 - C5615) * C16930 +
              (C5618 - C5617) * C16925 +
              (C117 * C1190 - C50094 * C1197) * C16931 +
              (C117 * C1198 - C50094 * C1202) * C16926) *
                 C50174) *
                C50077) *
               C50049) *
              C49984)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C50094 * C129 - C117 * C122) * C19689 +
              (C50094 * C143 - C117 * C130) * C49950) *
                 C38554 +
             ((C5415 - C5416) * C19689 + (C5417 - C5418) * C49950) * C38555 +
             C38763 * C38556 + C38768 * C38557) *
                C50240 +
            (((C5416 - C5415) * C19689 + (C5418 - C5417) * C49950) * C38554 +
             ((C5422 - C5421) * C19689 + (C5424 - C5423) * C49950) * C38555 +
             (C7290 * C19689 + C7291 * C49950) * C38556 +
             ((C7295 - C7294) * C19689 + (C7297 - C7296) * C49950) * C38557) *
                C50077) *
               C50239 +
           ((((C117 * C281 - C50094 * C291) * C19689 +
              (C117 * C292 - C50094 * C311) * C49950) *
                 C38554 +
             ((C5967 - C5968) * C19689 + (C5969 - C5970) * C49950) * C38555 +
             (C6385 * C19689 + C6386 * C49950) * C38556 +
             ((C6390 - C6389) * C19689 + (C6392 - C6391) * C49950) * C38557) *
                C50240 +
            (((C5968 - C5967) * C19689 + (C5970 - C5969) * C49950) * C38554 +
             ((C5974 - C5973) * C19689 + (C5976 - C5975) * C49950) * C38555 +
             ((C6389 - C6390) * C19689 + (C6391 - C6392) * C49950) * C38556 +
             ((C50094 * C6378 - C117 * C6376) * C19689 +
              (C50094 * C6382 - C117 * C6379) * C49950) *
                 C38557) *
                C50077) *
               C50049) *
              C279 +
          (((((C152 - C151) * C19689 + (C154 - C153) * C49950) * C38554 +
             (C5427 * C19689 + C5428 * C49950) * C38555 + C38766 * C38556 +
             C38767 * C38557) *
                C50240 +
            ((C5419 * C19689 + C5420 * C49950) * C38554 +
             (C5425 * C19689 + C5426 * C49950) * C38555 +
             (C5455 * C19689 + C5456 * C49950) * C38556 +
             ((C5439 - C5440) * C19689 + (C5441 - C5442) * C49950) * C38557) *
                C50077) *
               C50239 +
           ((((C323 - C322) * C19689 + (C325 - C324) * C49950) * C38554 +
             (C5979 * C19689 + C5980 * C49950) * C38555 +
             (C5981 * C19689 + C5982 * C49950) * C38556 +
             ((C5983 - C5984) * C19689 + (C5985 - C5986) * C49950) * C38557) *
                C50240 +
            ((C5971 * C19689 + C5972 * C49950) * C38554 +
             (C5977 * C19689 + C5978 * C49950) * C38555 +
             ((C5984 - C5983) * C19689 + (C5986 - C5985) * C49950) * C38556 +
             ((C117 * C6377 - C50094 * C6380) * C19689 +
              (C117 * C6381 - C50094 * C6383) * C49950) *
                 C38557) *
                C50077) *
               C50049) *
              C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[182] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C50094 * C129 - C117 * C122) * C16929 +
                (C50094 * C143 - C117 * C130) * C16924 +
                (C151 - C152) * C16930 + (C153 - C154) * C16925 +
                C171 * C16931 + C172 * C16926) *
                   C33256 +
               ((C5415 - C5416) * C16929 + (C5417 - C5418) * C16924 +
                C5419 * C16930 + C5420 * C16925 + C5765 * C16931 +
                C5766 * C16926) *
                   C50174) *
                  C50013 * C49997 * C113 +
              (((C152 - C151) * C16929 + (C154 - C153) * C16924 +
                (C156 - C155) * C16930 + (C158 - C157) * C16925 +
                C175 * C16931 + C176 * C16926) *
                   C33256 +
               (C5427 * C16929 + C5428 * C16924 + C730 * C16930 +
                C731 * C16925 + C732 * C16931 + C733 * C16926) *
                   C50174) *
                  C50013 * C49997 * C114 +
              ((C171 * C16929 + C172 * C16924 + C173 * C16930 + C174 * C16925 +
                (C164 - C163) * C16931 + (C166 - C165) * C16926) *
                   C33256 +
               (C5765 * C16929 + C5766 * C16924 + C11269 * C16930 +
                C11270 * C16925 + (C734 - C735) * C16931 +
                (C736 - C737) * C16926) *
                   C50174) *
                  C50013 * C49997 * C115 +
              ((C175 * C16929 + C176 * C16924 + C177 * C16930 + C178 * C16925 +
                (C168 - C167) * C16931 + (C170 - C169) * C16926) *
                   C33256 +
               (C732 * C16929 + C733 * C16924 + (C735 - C734) * C16930 +
                (C737 - C736) * C16925 +
                (C117 * C725 - C50094 * C726) * C16931 +
                (C117 * C727 - C50094 * C728) * C16926) *
                   C50174) *
                  C50013 * C49997 * C116) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C50094 * C129 - C117 * C122) * C16929 +
                 (C50094 * C143 - C117 * C130) * C16924 +
                 (C151 - C152) * C16930 + (C153 - C154) * C16925 +
                 C171 * C16931 + C172 * C16926) *
                    C33256 +
                ((C5415 - C5416) * C16929 + (C5417 - C5418) * C16924 +
                 C5419 * C16930 + C5420 * C16925 + C5765 * C16931 +
                 C5766 * C16926) *
                    C50174) *
                   C50013 * C276 +
               (((C117 * C281 - C50094 * C291) * C16929 +
                 (C117 * C292 - C50094 * C311) * C16924 +
                 (C322 - C323) * C16930 + (C324 - C325) * C16925 +
                 C618 * C16931 + C619 * C16926) *
                    C33256 +
                ((C5967 - C5968) * C16929 + (C5969 - C5970) * C16924 +
                 C5971 * C16930 + C5972 * C16925 + C11121 * C16931 +
                 C11122 * C16926) *
                    C50174) *
                   C50013 * C277 +
               (((C50094 * C299 - C117 * C285) * C16929 +
                 (C50094 * C315 - C117 * C300) * C16924 +
                 (C334 - C335) * C16930 + (C336 - C337) * C16925 +
                 (C338 - C339) * C16931 + (C340 - C341) * C16926) *
                    C33256 +
                ((C6884 - C6885) * C16929 + (C6886 - C6887) * C16924 +
                 (C5249 - C5250) * C16930 + (C5251 - C5252) * C16925 +
                 (C10825 - C10826) * C16931 + (C10827 - C10828) * C16926) *
                    C50174) *
                   C50013 * C278) *
                  C279 +
              ((((C152 - C151) * C16929 + (C154 - C153) * C16924 +
                 (C156 - C155) * C16930 + (C158 - C157) * C16925 +
                 C175 * C16931 + C176 * C16926) *
                    C33256 +
                (C5427 * C16929 + C5428 * C16924 + C730 * C16930 +
                 C731 * C16925 + C732 * C16931 + C733 * C16926) *
                    C50174) *
                   C50013 * C276 +
               (((C323 - C322) * C16929 + (C325 - C324) * C16924 +
                 (C327 - C326) * C16930 + (C329 - C328) * C16925 +
                 (C331 - C330) * C16931 + (C333 - C332) * C16926) *
                    C33256 +
                (C5979 * C16929 + C5980 * C16924 + C11465 * C16930 +
                 C11466 * C16925 + (C896 - C897) * C16931 +
                 (C898 - C899) * C16926) *
                    C50174) *
                   C50013 * C277 +
               (((C335 - C334) * C16929 + (C337 - C336) * C16924 +
                 (C339 - C338) * C16930 + (C341 - C340) * C16925 +
                 (C343 - C342) * C16931 + (C345 - C344) * C16926) *
                    C33256 +
                ((C5250 - C5249) * C16929 + (C5252 - C5251) * C16924 +
                 (C10826 - C10825) * C16930 + (C10828 - C10827) * C16925 +
                 (C117 * C1537 - C50094 * C1544) * C16931 +
                 (C117 * C1545 - C50094 * C1549) * C16926) *
                    C50174) *
                   C50013 * C278) *
                  C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C16929 +
             (C50094 * C143 - C117 * C130) * C16924 + (C151 - C152) * C16930 +
             (C153 - C154) * C16925 + C171 * C16931 + C172 * C16926) *
                C33256 +
            ((C5415 - C5416) * C16929 + (C5417 - C5418) * C16924 +
             C5419 * C16930 + C5420 * C16925 + C5765 * C16931 +
             C5766 * C16926) *
                C50174) *
               C443 +
           (((C5416 - C5415) * C16929 + (C5418 - C5417) * C16924 +
             C5427 * C16930 + C5428 * C16925 + C730 * C16931 + C731 * C16926) *
                C33256 +
            ((C5422 - C5421) * C16929 + (C5424 - C5423) * C16924 +
             C5429 * C16930 + C5430 * C16925 + C5443 * C16931 +
             C5444 * C16926) *
                C50174) *
               C444 +
           ((C5449 * C16929 + C5450 * C16924 + C5425 * C16930 + C5426 * C16925 +
             C5767 * C16931 + C5768 * C16926) *
                C33256 +
            ((C5432 - C5431) * C16929 + (C5434 - C5433) * C16924 +
             C5455 * C16930 + C5456 * C16925 + (C5445 - C5446) * C16931 +
             (C5447 - C5448) * C16926) *
                C50174) *
               C445) *
              C49997 * C279 +
          ((((C152 - C151) * C16929 + (C154 - C153) * C16924 +
             (C156 - C155) * C16930 + (C158 - C157) * C16925 + C175 * C16931 +
             C176 * C16926) *
                C33256 +
            (C5427 * C16929 + C5428 * C16924 + C730 * C16930 + C731 * C16925 +
             C732 * C16931 + C733 * C16926) *
                C50174) *
               C443 +
           ((C5419 * C16929 + C5420 * C16924 + C5765 * C16930 + C5766 * C16925 +
             C11269 * C16931 + C11270 * C16926) *
                C33256 +
            (C5425 * C16929 + C5426 * C16924 + C5767 * C16930 + C5768 * C16925 +
             (C507 - C508) * C16931 + (C509 - C510) * C16926) *
                C50174) *
               C444 +
           ((C5429 * C16929 + C5430 * C16924 + C5443 * C16930 + C5444 * C16925 +
             (C508 - C507) * C16931 + (C510 - C509) * C16926) *
                C33256 +
            (C5453 * C16929 + C5454 * C16924 + (C5446 - C5445) * C16930 +
             (C5448 - C5447) * C16925 +
             (C117 * C1821 - C50094 * C1828) * C16931 +
             (C117 * C1829 - C50094 * C1833) * C16926) *
                C50174) *
               C445) *
              C49997 * C49984)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
             C2263 * C299 - C2268 * C285) *
                C19689 +
            (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
             C2263 * C315 - C2268 * C300) *
                C49950) *
               C33256 +
           ((C2261 * C456 - C2266 * C446 + C2262 * C872 - C2267 * C867 +
             C2263 * C1538 - C2268 * C1534) *
                C19689 +
            (C2261 * C476 - C2266 * C457 + C2262 * C882 - C2267 * C873 +
             C2263 * C1546 - C2268 * C1539) *
                C49950) *
               C50174) *
              C50013 * C49997 * C113 +
          (((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C19689 +
            (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C49950) *
               C33256 +
           ((C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C19689 +
            (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49950) *
               C50174) *
              C50013 * C49997 * C114 +
          (((C2285 - C2284 + C2287 - C2286 + C2289 - C2288) * C19689 +
            (C2291 - C2290 + C2293 - C2292 + C2295 - C2294) * C49950) *
               C33256 +
           ((C2976 - C2977 + C2978 - C2979 + C2980 - C2981) * C19689 +
            (C2982 - C2983 + C2984 - C2985 + C2986 - C2987) * C49950) *
               C50174) *
              C50013 * C49997 * C115 +
          (((C2297 - C2296 + C2299 - C2298 + C2301 - C2300) * C19689 +
            (C2303 - C2302 + C2305 - C2304 + C2307 - C2306) * C49950) *
               C33256 +
           ((C2266 * C449 - C2261 * C462 + C2267 * C870 - C2262 * C878 +
             C2268 * C1537 - C2263 * C1544) *
                C19689 +
            (C2266 * C463 - C2261 * C479 + C2267 * C879 - C2262 * C885 +
             C2268 * C1545 - C2263 * C1549) *
                C49950) *
               C50174) *
              C50013 * C49997 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
              C2263 * C299 - C2268 * C285) *
                 C19689 +
             (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
              C2263 * C315 - C2268 * C300) *
                 C49950) *
                C33256 +
            ((C2261 * C456 - C2266 * C446 + C2262 * C872 - C2267 * C867 +
              C2263 * C1538 - C2268 * C1534) *
                 C19689 +
             (C2261 * C476 - C2266 * C457 + C2262 * C882 - C2267 * C873 +
              C2263 * C1546 - C2268 * C1539) *
                 C49950) *
                C50174) *
               C50013 * C276 +
           (((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
              C2268 * C1073 - C2263 * C1077) *
                 C19689 +
             (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
              C2268 * C1078 - C2263 * C1085) *
                 C49950) *
                C33256 +
            ((C2266 * C867 - C2261 * C872 + C2267 * C1534 - C2262 * C1538 +
              C2268 * C3181 - C2263 * C3184) *
                 C19689 +
             (C2266 * C873 - C2261 * C882 + C2267 * C1539 - C2262 * C1546 +
              C2268 * C3185 - C2263 * C3190) *
                 C49950) *
                C50174) *
               C50013 * C277 +
           (((C2261 * C299 - C2266 * C285 + C2262 * C1077 - C2267 * C1073 +
              C2263 * C2456 - C2268 * C2453) *
                 C19689 +
             (C2261 * C315 - C2266 * C300 + C2262 * C1085 - C2267 * C1078 +
              C2263 * C2462 - C2268 * C2457) *
                 C49950) *
                C33256 +
            ((C2261 * C1538 - C2266 * C1534 + C2262 * C3184 - C2267 * C3181 +
              C2263 * C4099 - C2268 * C4097) *
                 C19689 +
             (C2261 * C1546 - C2266 * C1539 + C2262 * C3190 - C2267 * C3185 +
              C2263 * C4103 - C2268 * C4100) *
                 C49950) *
                C50174) *
               C50013 * C278) *
              C279 +
          ((((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C19689 +
             (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C49950) *
                C33256 +
            ((C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C19689 +
             (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49950) *
                C50174) *
               C50013 * C276 +
           (((C2467 - C2466 + C2469 - C2468 + C2471 - C2470) * C19689 +
             (C2473 - C2472 + C2475 - C2474 + C2477 - C2476) * C49950) *
                C33256 +
            ((C3194 - C3195 + C3196 - C3197 + C3198 - C3199) * C19689 +
             (C3200 - C3201 + C3202 - C3203 + C3204 - C3205) * C49950) *
                C50174) *
               C50013 * C277 +
           (((C2479 - C2478 + C2481 - C2480 + C2483 - C2482) * C19689 +
             (C2485 - C2484 + C2487 - C2486 + C2489 - C2488) * C49950) *
                C33256 +
            ((C2266 * C1535 - C2261 * C1540 + C2267 * C3182 - C2262 * C3186 +
              C2268 * C4098 - C2263 * C4101) *
                 C19689 +
             (C2266 * C1541 - C2261 * C1547 + C2267 * C3187 - C2262 * C3191 +
              C2268 * C4102 - C2263 * C4104) *
                 C49950) *
                C50174) *
               C50013 * C278) *
              C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
              C2263 * C299 - C2268 * C285) *
                 C19689 +
             (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
              C2263 * C315 - C2268 * C300) *
                 C49950) *
                C33256 +
            ((C36179 - C36180 + C36181 - C36182 + C36183 - C36184) * C19689 +
             (C36185 - C36186 + C36187 - C36188 + C36189 - C36190) * C49950) *
                C50174) *
               C443 +
           (((C36180 - C36179 + C36182 - C36181 + C36184 - C36183) * C19689 +
             (C36186 - C36185 + C36188 - C36187 + C36190 - C36189) * C49950) *
                C33256 +
            ((C36191 - C36192 + C36193 - C36194 + C36195 - C36196) * C19689 +
             (C36197 - C36198 + C36199 - C36200 + C36201 - C36202) * C49950) *
                C50174) *
               C444 +
           (((C36192 - C36191 + C36194 - C36193 + C36196 - C36195) * C19689 +
             (C36198 - C36197 + C36200 - C36199 + C36202 - C36201) * C49950) *
                C33256 +
            ((C2261 * C1822 - C2266 * C1818 + C2262 * C4499 - C2267 * C4495 +
              C2263 * C4500 - C2268 * C4496) *
                 C19689 +
             (C2261 * C1830 - C2266 * C1823 + C2262 * C4507 - C2267 * C4501 +
              C2263 * C4508 - C2268 * C4502) *
                 C49950) *
                C50174) *
               C445) *
              C49997 * C279 +
          ((((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C19689 +
             (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C49950) *
                C33256 +
            ((C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C19689 +
             (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49950) *
                C50174) *
               C443 +
           (((C2649 - C2648 + C2651 - C2650 + C2653 - C2652) * C19689 +
             (C2655 - C2654 + C2657 - C2656 + C2659 - C2658) * C49950) *
                C33256 +
            ((C2660 - C2661 + C2662 - C2663 + C2664 - C2665) * C19689 +
             (C2666 - C2667 + C2668 - C2669 + C2670 - C2671) * C49950) *
                C50174) *
               C444 +
           (((C2661 - C2660 + C2663 - C2662 + C2665 - C2664) * C19689 +
             (C2667 - C2666 + C2669 - C2668 + C2671 - C2670) * C49950) *
                C33256 +
            ((C2266 * C1819 - C2261 * C1824 + C2267 * C4497 - C2262 * C4503 +
              C2268 * C4498 - C2263 * C4504) *
                 C19689 +
             (C2266 * C1825 - C2261 * C1831 + C2267 * C4505 - C2262 * C4509 +
              C2268 * C4506 - C2263 * C4510) *
                 C49950) *
                C50174) *
               C445) *
              C49997 * C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C19689 +
            (C50094 * C143 - C117 * C130) * C49950) *
               C38554 +
           ((C5415 - C5416) * C19689 + (C5417 - C5418) * C49950) * C38555 +
           (C5449 * C19689 + C5450 * C49950) * C38556 +
           ((C5432 - C5431) * C19689 + (C5434 - C5433) * C49950) * C38557) *
              C50013 * C49997 * C113 +
          (((C152 - C151) * C19689 + (C154 - C153) * C49950) * C38554 +
           (C5427 * C19689 + C5428 * C49950) * C38555 +
           (C5429 * C19689 + C5430 * C49950) * C38556 +
           (C5453 * C19689 + C5454 * C49950) * C38557) *
              C50013 * C49997 * C114 +
          ((C171 * C19689 + C172 * C49950) * C38554 +
           (C5765 * C19689 + C5766 * C49950) * C38555 +
           (C5767 * C19689 + C5768 * C49950) * C38556 +
           ((C5445 - C5446) * C19689 + (C5447 - C5448) * C49950) * C38557) *
              C50013 * C49997 * C115 +
          ((C175 * C19689 + C176 * C49950) * C38554 +
           (C732 * C19689 + C733 * C49950) * C38555 +
           ((C508 - C507) * C19689 + (C510 - C509) * C49950) * C38556 +
           ((C117 * C1821 - C50094 * C1828) * C19689 +
            (C117 * C1829 - C50094 * C1833) * C49950) *
               C38557) *
              C50013 * C49997 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C19689 +
             (C50094 * C143 - C117 * C130) * C49950) *
                C38554 +
            ((C5415 - C5416) * C19689 + (C5417 - C5418) * C49950) * C38555 +
            (C5449 * C19689 + C5450 * C49950) * C38556 +
            ((C5432 - C5431) * C19689 + (C5434 - C5433) * C49950) * C38557) *
               C50013 * C276 +
           (((C117 * C281 - C50094 * C291) * C19689 +
             (C117 * C292 - C50094 * C311) * C49950) *
                C38554 +
            ((C5967 - C5968) * C19689 + (C5969 - C5970) * C49950) * C38555 +
            (C6385 * C19689 + C6386 * C49950) * C38556 +
            ((C6390 - C6389) * C19689 + (C6392 - C6391) * C49950) * C38557) *
               C50013 * C277 +
           (((C50094 * C299 - C117 * C285) * C19689 +
             (C50094 * C315 - C117 * C300) * C49950) *
                C38554 +
            ((C6884 - C6885) * C19689 + (C6886 - C6887) * C49950) * C38555 +
            ((C6888 - C6889) * C19689 + (C6890 - C6891) * C49950) * C38556 +
            ((C50094 * C4500 - C117 * C4496) * C19689 +
             (C50094 * C4508 - C117 * C4502) * C49950) *
                C38557) *
               C50013 * C278) *
              C279 +
          ((((C152 - C151) * C19689 + (C154 - C153) * C49950) * C38554 +
            (C5427 * C19689 + C5428 * C49950) * C38555 +
            (C5429 * C19689 + C5430 * C49950) * C38556 +
            (C5453 * C19689 + C5454 * C49950) * C38557) *
               C50013 * C276 +
           (((C323 - C322) * C19689 + (C325 - C324) * C49950) * C38554 +
            (C5979 * C19689 + C5980 * C49950) * C38555 +
            (C5981 * C19689 + C5982 * C49950) * C38556 +
            ((C5983 - C5984) * C19689 + (C5985 - C5986) * C49950) * C38557) *
               C50013 * C277 +
           (((C335 - C334) * C19689 + (C337 - C336) * C49950) * C38554 +
            ((C5250 - C5249) * C19689 + (C5252 - C5251) * C49950) * C38555 +
            ((C5254 - C5253) * C19689 + (C5256 - C5255) * C49950) * C38556 +
            ((C117 * C4498 - C50094 * C4504) * C19689 +
             (C117 * C4506 - C50094 * C4510) * C49950) *
                C38557) *
               C50013 * C278) *
              C49984)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C19689 +
             (C50094 * C143 - C117 * C130) * C49950) *
                C38554 +
            ((C5415 - C5416) * C19689 + (C5417 - C5418) * C49950) * C38555 +
            C38763 * C38556 + C38768 * C38557) *
               C443 +
           (((C5416 - C5415) * C19689 + (C5418 - C5417) * C49950) * C38554 +
            ((C5422 - C5421) * C19689 + (C5424 - C5423) * C49950) * C38555 +
            (C7290 * C19689 + C7291 * C49950) * C38556 +
            ((C7295 - C7294) * C19689 + (C7297 - C7296) * C49950) * C38557) *
               C444 +
           (C38763 * C38554 + C38768 * C38555 +
            ((C7294 - C7295) * C19689 + (C7296 - C7297) * C49950) * C38556 +
            ((C50094 * C7283 - C117 * C7281) * C19689 +
             (C50094 * C7287 - C117 * C7284) * C49950) *
                C38557) *
               C445) *
              C49997 * C279 +
          ((((C152 - C151) * C19689 + (C154 - C153) * C49950) * C38554 +
            (C5427 * C19689 + C5428 * C49950) * C38555 + C38766 * C38556 +
            C38767 * C38557) *
               C443 +
           ((C5419 * C19689 + C5420 * C49950) * C38554 +
            (C5425 * C19689 + C5426 * C49950) * C38555 +
            (C5455 * C19689 + C5456 * C49950) * C38556 +
            ((C5439 - C5440) * C19689 + (C5441 - C5442) * C49950) * C38557) *
               C444 +
           (C38766 * C38554 + C38767 * C38555 +
            ((C5440 - C5439) * C19689 + (C5442 - C5441) * C49950) * C38556 +
            ((C117 * C7282 - C50094 * C7285) * C19689 +
             (C117 * C7286 - C50094 * C7288) * C49950) *
                C38557) *
               C445) *
              C49997 * C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[183] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
              C2263 * C299 - C2268 * C285) *
                 C19689 +
             (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
              C2263 * C315 - C2268 * C300) *
                 C49950) *
                C33256 +
            ((C36179 - C36180 + C36181 - C36182 + C36183 - C36184) * C19689 +
             (C36185 - C36186 + C36187 - C36188 + C36189 - C36190) * C49950) *
                C50174) *
               C50240 +
           (((C36180 - C36179 + C36182 - C36181 + C36184 - C36183) * C19689 +
             (C36186 - C36185 + C36188 - C36187 + C36190 - C36189) * C49950) *
                C33256 +
            ((C36191 - C36192 + C36193 - C36194 + C36195 - C36196) * C19689 +
             (C36197 - C36198 + C36199 - C36200 + C36201 - C36202) * C49950) *
                C50174) *
               C50077) *
              C49997 * C50282 +
          ((((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C19689 +
             (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C49950) *
                C33256 +
            ((C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C19689 +
             (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49950) *
                C50174) *
               C50240 +
           (((C2649 - C2648 + C2651 - C2650 + C2653 - C2652) * C19689 +
             (C2655 - C2654 + C2657 - C2656 + C2659 - C2658) * C49950) *
                C33256 +
            ((C2660 - C2661 + C2662 - C2663 + C2664 - C2665) * C19689 +
             (C2666 - C2667 + C2668 - C2669 + C2670 - C2671) * C49950) *
                C50174) *
               C50077) *
              C49997 * C50283 +
          ((((C2285 - C2284 + C2287 - C2286 + C2289 - C2288) * C19689 +
             (C2291 - C2290 + C2293 - C2292 + C2295 - C2294) * C49950) *
                C33256 +
            ((C2976 - C2977 + C2978 - C2979 + C2980 - C2981) * C19689 +
             (C2982 - C2983 + C2984 - C2985 + C2986 - C2987) * C49950) *
                C50174) *
               C50240 +
           (((C2977 - C2976 + C2979 - C2978 + C2981 - C2980) * C19689 +
             (C2983 - C2982 + C2985 - C2984 + C2987 - C2986) * C49950) *
                C33256 +
            ((C2266 * C452 - C2261 * C468 + C2267 * C1189 - C2262 * C1195 +
              C2268 * C2637 - C2263 * C2642) *
                 C19689 +
             (C2266 * C469 - C2261 * C482 + C2267 * C1196 - C2262 * C1201 +
              C2268 * C2643 - C2263 * C2646) *
                 C49950) *
                C50174) *
               C50077) *
              C49997 * C612)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C16929 +
             (C50094 * C143 - C117 * C130) * C16924 + (C151 - C152) * C16930 +
             (C153 - C154) * C16925 + C171 * C16931 + C172 * C16926) *
                C33256 +
            ((C5415 - C5416) * C16929 + (C5417 - C5418) * C16924 +
             C5419 * C16930 + C5420 * C16925 + C5765 * C16931 +
             C5766 * C16926) *
                C50174) *
               C50240 +
           (((C5416 - C5415) * C16929 + (C5418 - C5417) * C16924 +
             C5427 * C16930 + C5428 * C16925 + C730 * C16931 + C731 * C16926) *
                C33256 +
            ((C5422 - C5421) * C16929 + (C5424 - C5423) * C16924 +
             C5429 * C16930 + C5430 * C16925 + C5443 * C16931 +
             C5444 * C16926) *
                C50174) *
               C50077) *
              C49997 * C50282 +
          ((((C152 - C151) * C16929 + (C154 - C153) * C16924 +
             (C156 - C155) * C16930 + (C158 - C157) * C16925 + C175 * C16931 +
             C176 * C16926) *
                C33256 +
            (C5427 * C16929 + C5428 * C16924 + C730 * C16930 + C731 * C16925 +
             C732 * C16931 + C733 * C16926) *
                C50174) *
               C50240 +
           ((C5419 * C16929 + C5420 * C16924 + C5765 * C16930 + C5766 * C16925 +
             C11269 * C16931 + C11270 * C16926) *
                C33256 +
            (C5425 * C16929 + C5426 * C16924 + C5767 * C16930 + C5768 * C16925 +
             (C507 - C508) * C16931 + (C509 - C510) * C16926) *
                C50174) *
               C50077) *
              C49997 * C50283 +
          (((C171 * C16929 + C172 * C16924 + C173 * C16930 + C174 * C16925 +
             (C164 - C163) * C16931 + (C166 - C165) * C16926) *
                C33256 +
            (C5765 * C16929 + C5766 * C16924 + C11269 * C16930 +
             C11270 * C16925 + (C734 - C735) * C16931 +
             (C736 - C737) * C16926) *
                C50174) *
               C50240 +
           ((C730 * C16929 + C731 * C16924 + C732 * C16930 + C733 * C16925 +
             (C735 - C734) * C16931 + (C737 - C736) * C16926) *
                C33256 +
            (C5443 * C16929 + C5444 * C16924 + (C508 - C507) * C16930 +
             (C510 - C509) * C16925 + (C117 * C455 - C50094 * C474) * C16931 +
             (C117 * C475 - C50094 * C485) * C16926) *
                C50174) *
               C50077) *
              C49997 * C612)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C19689 +
             (C50094 * C143 - C117 * C130) * C49950) *
                C38554 +
            ((C5415 - C5416) * C19689 + (C5417 - C5418) * C49950) * C38555 +
            C38763 * C38556 + C38768 * C38557) *
               C50240 +
           (((C5416 - C5415) * C19689 + (C5418 - C5417) * C49950) * C38554 +
            ((C5422 - C5421) * C19689 + (C5424 - C5423) * C49950) * C38555 +
            (C7290 * C19689 + C7291 * C49950) * C38556 +
            ((C7295 - C7294) * C19689 + (C7297 - C7296) * C49950) * C38557) *
               C50077) *
              C49997 * C50282 +
          ((((C152 - C151) * C19689 + (C154 - C153) * C49950) * C38554 +
            (C5427 * C19689 + C5428 * C49950) * C38555 + C38766 * C38556 +
            C38767 * C38557) *
               C50240 +
           ((C5419 * C19689 + C5420 * C49950) * C38554 +
            (C5425 * C19689 + C5426 * C49950) * C38555 +
            (C5455 * C19689 + C5456 * C49950) * C38556 +
            ((C5439 - C5440) * C19689 + (C5441 - C5442) * C49950) * C38557) *
               C50077) *
              C49997 * C50283 +
          (((C171 * C19689 + C172 * C49950) * C38554 +
            (C5765 * C19689 + C5766 * C49950) * C38555 +
            (C5767 * C19689 + C5768 * C49950) * C38556 +
            ((C5445 - C5446) * C19689 + (C5447 - C5448) * C49950) * C38557) *
               C50240 +
           ((C730 * C19689 + C731 * C49950) * C38554 +
            (C5443 * C19689 + C5444 * C49950) * C38555 +
            ((C5446 - C5445) * C19689 + (C5448 - C5447) * C49950) * C38556 +
            ((C117 * C5404 - C50094 * C5409) * C19689 +
             (C117 * C5410 - C50094 * C5413) * C49950) *
                C38557) *
               C50077) *
              C49997 * C612)) /
            (p * q * std::sqrt(p + q));
    d2ee[184] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C16929 +
             (C50094 * C143 - C117 * C130) * C16924 + (C151 - C152) * C16930 +
             (C153 - C154) * C16925 + C171 * C16931 + C172 * C16926) *
                C33256 +
            ((C5415 - C5416) * C16929 + (C5417 - C5418) * C16924 +
             C5419 * C16930 + C5420 * C16925 + C5765 * C16931 +
             C5766 * C16926) *
                C50174) *
               C50013 * C276 +
           (((C117 * C281 - C50094 * C291) * C16929 +
             (C117 * C292 - C50094 * C311) * C16924 + (C322 - C323) * C16930 +
             (C324 - C325) * C16925 + C618 * C16931 + C619 * C16926) *
                C33256 +
            ((C5967 - C5968) * C16929 + (C5969 - C5970) * C16924 +
             C5971 * C16930 + C5972 * C16925 + C11121 * C16931 +
             C11122 * C16926) *
                C50174) *
               C50013 * C277 +
           (((C50094 * C299 - C117 * C285) * C16929 +
             (C50094 * C315 - C117 * C300) * C16924 + (C334 - C335) * C16930 +
             (C336 - C337) * C16925 + (C338 - C339) * C16931 +
             (C340 - C341) * C16926) *
                C33256 +
            ((C6884 - C6885) * C16929 + (C6886 - C6887) * C16924 +
             (C5249 - C5250) * C16930 + (C5251 - C5252) * C16925 +
             (C10825 - C10826) * C16931 + (C10827 - C10828) * C16926) *
                C50174) *
               C50013 * C278) *
              C279 +
          ((((C152 - C151) * C16929 + (C154 - C153) * C16924 +
             (C156 - C155) * C16930 + (C158 - C157) * C16925 + C175 * C16931 +
             C176 * C16926) *
                C33256 +
            (C5427 * C16929 + C5428 * C16924 + C730 * C16930 + C731 * C16925 +
             C732 * C16931 + C733 * C16926) *
                C50174) *
               C50013 * C276 +
           (((C323 - C322) * C16929 + (C325 - C324) * C16924 +
             (C327 - C326) * C16930 + (C329 - C328) * C16925 +
             (C331 - C330) * C16931 + (C333 - C332) * C16926) *
                C33256 +
            (C5979 * C16929 + C5980 * C16924 + C11465 * C16930 +
             C11466 * C16925 + (C896 - C897) * C16931 +
             (C898 - C899) * C16926) *
                C50174) *
               C50013 * C277 +
           (((C335 - C334) * C16929 + (C337 - C336) * C16924 +
             (C339 - C338) * C16930 + (C341 - C340) * C16925 +
             (C343 - C342) * C16931 + (C345 - C344) * C16926) *
                C33256 +
            ((C5250 - C5249) * C16929 + (C5252 - C5251) * C16924 +
             (C10826 - C10825) * C16930 + (C10828 - C10827) * C16925 +
             (C117 * C1537 - C50094 * C1544) * C16931 +
             (C117 * C1545 - C50094 * C1549) * C16926) *
                C50174) *
               C50013 * C278) *
              C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C16929 +
            (C50094 * C143 - C117 * C130) * C16924 + (C151 - C152) * C16930 +
            (C153 - C154) * C16925 + C171 * C16931 + C172 * C16926) *
               C33256 +
           ((C5415 - C5416) * C16929 + (C5417 - C5418) * C16924 +
            C5419 * C16930 + C5420 * C16925 + C5765 * C16931 + C5766 * C16926) *
               C50174) *
              C50013 * C49997 * C113 +
          (((C152 - C151) * C16929 + (C154 - C153) * C16924 +
            (C156 - C155) * C16930 + (C158 - C157) * C16925 + C175 * C16931 +
            C176 * C16926) *
               C33256 +
           (C5427 * C16929 + C5428 * C16924 + C730 * C16930 + C731 * C16925 +
            C732 * C16931 + C733 * C16926) *
               C50174) *
              C50013 * C49997 * C114 +
          ((C171 * C16929 + C172 * C16924 + C173 * C16930 + C174 * C16925 +
            (C164 - C163) * C16931 + (C166 - C165) * C16926) *
               C33256 +
           (C5765 * C16929 + C5766 * C16924 + C11269 * C16930 +
            C11270 * C16925 + (C734 - C735) * C16931 + (C736 - C737) * C16926) *
               C50174) *
              C50013 * C49997 * C115 +
          ((C175 * C16929 + C176 * C16924 + C177 * C16930 + C178 * C16925 +
            (C168 - C167) * C16931 + (C170 - C169) * C16926) *
               C33256 +
           (C732 * C16929 + C733 * C16924 + (C735 - C734) * C16930 +
            (C737 - C736) * C16925 + (C117 * C725 - C50094 * C726) * C16931 +
            (C117 * C727 - C50094 * C728) * C16926) *
               C50174) *
              C50013 * C49997 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
             C2263 * C299 - C2268 * C285) *
                C19689 +
            (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
             C2263 * C315 - C2268 * C300) *
                C49950) *
               C33256 +
           ((C2261 * C456 - C2266 * C446 + C2262 * C872 - C2267 * C867 +
             C2263 * C1538 - C2268 * C1534) *
                C19689 +
            (C2261 * C476 - C2266 * C457 + C2262 * C882 - C2267 * C873 +
             C2263 * C1546 - C2268 * C1539) *
                C49950) *
               C50174) *
              C50013 * C49997 * C113 +
          (((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C19689 +
            (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C49950) *
               C33256 +
           ((C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C19689 +
            (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49950) *
               C50174) *
              C50013 * C49997 * C114 +
          (((C2285 - C2284 + C2287 - C2286 + C2289 - C2288) * C19689 +
            (C2291 - C2290 + C2293 - C2292 + C2295 - C2294) * C49950) *
               C33256 +
           ((C2976 - C2977 + C2978 - C2979 + C2980 - C2981) * C19689 +
            (C2982 - C2983 + C2984 - C2985 + C2986 - C2987) * C49950) *
               C50174) *
              C50013 * C49997 * C115 +
          (((C2297 - C2296 + C2299 - C2298 + C2301 - C2300) * C19689 +
            (C2303 - C2302 + C2305 - C2304 + C2307 - C2306) * C49950) *
               C33256 +
           ((C2266 * C449 - C2261 * C462 + C2267 * C870 - C2262 * C878 +
             C2268 * C1537 - C2263 * C1544) *
                C19689 +
            (C2266 * C463 - C2261 * C479 + C2267 * C879 - C2262 * C885 +
             C2268 * C1545 - C2263 * C1549) *
                C49950) *
               C50174) *
              C50013 * C49997 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
              C2263 * C299 - C2268 * C285) *
                 C19689 +
             (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
              C2263 * C315 - C2268 * C300) *
                 C49950) *
                C33256 +
            ((C2261 * C456 - C2266 * C446 + C2262 * C872 - C2267 * C867 +
              C2263 * C1538 - C2268 * C1534) *
                 C19689 +
             (C2261 * C476 - C2266 * C457 + C2262 * C882 - C2267 * C873 +
              C2263 * C1546 - C2268 * C1539) *
                 C49950) *
                C50174) *
               C50013 * C276 +
           (((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
              C2268 * C1073 - C2263 * C1077) *
                 C19689 +
             (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
              C2268 * C1078 - C2263 * C1085) *
                 C49950) *
                C33256 +
            ((C2266 * C867 - C2261 * C872 + C2267 * C1534 - C2262 * C1538 +
              C2268 * C3181 - C2263 * C3184) *
                 C19689 +
             (C2266 * C873 - C2261 * C882 + C2267 * C1539 - C2262 * C1546 +
              C2268 * C3185 - C2263 * C3190) *
                 C49950) *
                C50174) *
               C50013 * C277 +
           (((C2261 * C299 - C2266 * C285 + C2262 * C1077 - C2267 * C1073 +
              C2263 * C2456 - C2268 * C2453) *
                 C19689 +
             (C2261 * C315 - C2266 * C300 + C2262 * C1085 - C2267 * C1078 +
              C2263 * C2462 - C2268 * C2457) *
                 C49950) *
                C33256 +
            ((C2261 * C1538 - C2266 * C1534 + C2262 * C3184 - C2267 * C3181 +
              C2263 * C4099 - C2268 * C4097) *
                 C19689 +
             (C2261 * C1546 - C2266 * C1539 + C2262 * C3190 - C2267 * C3185 +
              C2263 * C4103 - C2268 * C4100) *
                 C49950) *
                C50174) *
               C50013 * C278) *
              C279 +
          ((((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C19689 +
             (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C49950) *
                C33256 +
            ((C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C19689 +
             (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49950) *
                C50174) *
               C50013 * C276 +
           (((C2467 - C2466 + C2469 - C2468 + C2471 - C2470) * C19689 +
             (C2473 - C2472 + C2475 - C2474 + C2477 - C2476) * C49950) *
                C33256 +
            ((C3194 - C3195 + C3196 - C3197 + C3198 - C3199) * C19689 +
             (C3200 - C3201 + C3202 - C3203 + C3204 - C3205) * C49950) *
                C50174) *
               C50013 * C277 +
           (((C2479 - C2478 + C2481 - C2480 + C2483 - C2482) * C19689 +
             (C2485 - C2484 + C2487 - C2486 + C2489 - C2488) * C49950) *
                C33256 +
            ((C2266 * C1535 - C2261 * C1540 + C2267 * C3182 - C2262 * C3186 +
              C2268 * C4098 - C2263 * C4101) *
                 C19689 +
             (C2266 * C1541 - C2261 * C1547 + C2267 * C3187 - C2262 * C3191 +
              C2268 * C4102 - C2263 * C4104) *
                 C49950) *
                C50174) *
               C50013 * C278) *
              C49984)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C19689 +
            (C50094 * C143 - C117 * C130) * C49950) *
               C38554 +
           ((C5415 - C5416) * C19689 + (C5417 - C5418) * C49950) * C38555 +
           (C5449 * C19689 + C5450 * C49950) * C38556 +
           ((C5432 - C5431) * C19689 + (C5434 - C5433) * C49950) * C38557) *
              C50013 * C49997 * C113 +
          (((C152 - C151) * C19689 + (C154 - C153) * C49950) * C38554 +
           (C5427 * C19689 + C5428 * C49950) * C38555 +
           (C5429 * C19689 + C5430 * C49950) * C38556 +
           (C5453 * C19689 + C5454 * C49950) * C38557) *
              C50013 * C49997 * C114 +
          ((C171 * C19689 + C172 * C49950) * C38554 +
           (C5765 * C19689 + C5766 * C49950) * C38555 +
           (C5767 * C19689 + C5768 * C49950) * C38556 +
           ((C5445 - C5446) * C19689 + (C5447 - C5448) * C49950) * C38557) *
              C50013 * C49997 * C115 +
          ((C175 * C19689 + C176 * C49950) * C38554 +
           (C732 * C19689 + C733 * C49950) * C38555 +
           ((C508 - C507) * C19689 + (C510 - C509) * C49950) * C38556 +
           ((C117 * C1821 - C50094 * C1828) * C19689 +
            (C117 * C1829 - C50094 * C1833) * C49950) *
               C38557) *
              C50013 * C49997 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C19689 +
             (C50094 * C143 - C117 * C130) * C49950) *
                C38554 +
            ((C5415 - C5416) * C19689 + (C5417 - C5418) * C49950) * C38555 +
            (C5449 * C19689 + C5450 * C49950) * C38556 +
            ((C5432 - C5431) * C19689 + (C5434 - C5433) * C49950) * C38557) *
               C50013 * C276 +
           (((C117 * C281 - C50094 * C291) * C19689 +
             (C117 * C292 - C50094 * C311) * C49950) *
                C38554 +
            ((C5967 - C5968) * C19689 + (C5969 - C5970) * C49950) * C38555 +
            (C6385 * C19689 + C6386 * C49950) * C38556 +
            ((C6390 - C6389) * C19689 + (C6392 - C6391) * C49950) * C38557) *
               C50013 * C277 +
           (((C50094 * C299 - C117 * C285) * C19689 +
             (C50094 * C315 - C117 * C300) * C49950) *
                C38554 +
            ((C6884 - C6885) * C19689 + (C6886 - C6887) * C49950) * C38555 +
            ((C6888 - C6889) * C19689 + (C6890 - C6891) * C49950) * C38556 +
            ((C50094 * C4500 - C117 * C4496) * C19689 +
             (C50094 * C4508 - C117 * C4502) * C49950) *
                C38557) *
               C50013 * C278) *
              C279 +
          ((((C152 - C151) * C19689 + (C154 - C153) * C49950) * C38554 +
            (C5427 * C19689 + C5428 * C49950) * C38555 +
            (C5429 * C19689 + C5430 * C49950) * C38556 +
            (C5453 * C19689 + C5454 * C49950) * C38557) *
               C50013 * C276 +
           (((C323 - C322) * C19689 + (C325 - C324) * C49950) * C38554 +
            (C5979 * C19689 + C5980 * C49950) * C38555 +
            (C5981 * C19689 + C5982 * C49950) * C38556 +
            ((C5983 - C5984) * C19689 + (C5985 - C5986) * C49950) * C38557) *
               C50013 * C277 +
           (((C335 - C334) * C19689 + (C337 - C336) * C49950) * C38554 +
            ((C5250 - C5249) * C19689 + (C5252 - C5251) * C49950) * C38555 +
            ((C5254 - C5253) * C19689 + (C5256 - C5255) * C49950) * C38556 +
            ((C117 * C4498 - C50094 * C4504) * C19689 +
             (C117 * C4506 - C50094 * C4510) * C49950) *
                C38557) *
               C50013 * C278) *
              C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[185] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
              C2263 * C299 - C2268 * C285) *
                 C19689 +
             (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
              C2263 * C315 - C2268 * C300) *
                 C49950) *
                C33256 +
            ((C36179 - C36180 + C36181 - C36182 + C36183 - C36184) * C19689 +
             (C36185 - C36186 + C36187 - C36188 + C36189 - C36190) * C49950) *
                C50174) *
               C50013 * C50284 +
           (((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
              C2268 * C1073 - C2263 * C1077) *
                 C19689 +
             (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
              C2268 * C1078 - C2263 * C1085) *
                 C49950) *
                C33256 +
            ((C36689 - C36690 + C36691 - C36692 + C36693 - C36694) * C19689 +
             (C36695 - C36696 + C36697 - C36698 + C36699 - C36700) * C49950) *
                C50174) *
               C50013 * C50285 +
           (((C2261 * C299 - C2266 * C285 + C2262 * C1077 - C2267 * C1073 +
              C2263 * C2456 - C2268 * C2453) *
                 C19689 +
             (C2261 * C315 - C2266 * C300 + C2262 * C1085 - C2267 * C1078 +
              C2263 * C2462 - C2268 * C2457) *
                 C49950) *
                C33256 +
            ((C2261 * C1538 - C2266 * C1534 + C2262 * C3184 - C2267 * C3181 +
              C2263 * C4099 - C2268 * C4097) *
                 C19689 +
             (C2261 * C1546 - C2266 * C1539 + C2262 * C3190 - C2267 * C3185 +
              C2263 * C4103 - C2268 * C4100) *
                 C49950) *
                C50174) *
               C50013 * C1303) *
              C50231 +
          ((((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C19689 +
             (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C49950) *
                C33256 +
            ((C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C19689 +
             (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49950) *
                C50174) *
               C50013 * C50284 +
           (((C2467 - C2466 + C2469 - C2468 + C2471 - C2470) * C19689 +
             (C2473 - C2472 + C2475 - C2474 + C2477 - C2476) * C49950) *
                C33256 +
            ((C3194 - C3195 + C3196 - C3197 + C3198 - C3199) * C19689 +
             (C3200 - C3201 + C3202 - C3203 + C3204 - C3205) * C49950) *
                C50174) *
               C50013 * C50285 +
           (((C2479 - C2478 + C2481 - C2480 + C2483 - C2482) * C19689 +
             (C2485 - C2484 + C2487 - C2486 + C2489 - C2488) * C49950) *
                C33256 +
            ((C2266 * C1535 - C2261 * C1540 + C2267 * C3182 - C2262 * C3186 +
              C2268 * C4098 - C2263 * C4101) *
                 C19689 +
             (C2266 * C1541 - C2261 * C1547 + C2267 * C3187 - C2262 * C3191 +
              C2268 * C4102 - C2263 * C4104) *
                 C49950) *
                C50174) *
               C50013 * C1303) *
              C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C16929 +
             (C50094 * C143 - C117 * C130) * C16924 + (C151 - C152) * C16930 +
             (C153 - C154) * C16925 + C171 * C16931 + C172 * C16926) *
                C33256 +
            ((C5415 - C5416) * C16929 + (C5417 - C5418) * C16924 +
             C5419 * C16930 + C5420 * C16925 + C5765 * C16931 +
             C5766 * C16926) *
                C50174) *
               C50013 * C50284 +
           (((C117 * C281 - C50094 * C291) * C16929 +
             (C117 * C292 - C50094 * C311) * C16924 + (C322 - C323) * C16930 +
             (C324 - C325) * C16925 + C618 * C16931 + C619 * C16926) *
                C33256 +
            ((C5967 - C5968) * C16929 + (C5969 - C5970) * C16924 +
             C5971 * C16930 + C5972 * C16925 + C11121 * C16931 +
             C11122 * C16926) *
                C50174) *
               C50013 * C50285 +
           (((C50094 * C299 - C117 * C285) * C16929 +
             (C50094 * C315 - C117 * C300) * C16924 + (C334 - C335) * C16930 +
             (C336 - C337) * C16925 + (C338 - C339) * C16931 +
             (C340 - C341) * C16926) *
                C33256 +
            ((C6884 - C6885) * C16929 + (C6886 - C6887) * C16924 +
             (C5249 - C5250) * C16930 + (C5251 - C5252) * C16925 +
             (C10825 - C10826) * C16931 + (C10827 - C10828) * C16926) *
                C50174) *
               C50013 * C1303) *
              C50231 +
          ((((C152 - C151) * C16929 + (C154 - C153) * C16924 +
             (C156 - C155) * C16930 + (C158 - C157) * C16925 + C175 * C16931 +
             C176 * C16926) *
                C33256 +
            (C5427 * C16929 + C5428 * C16924 + C730 * C16930 + C731 * C16925 +
             C732 * C16931 + C733 * C16926) *
                C50174) *
               C50013 * C50284 +
           (((C323 - C322) * C16929 + (C325 - C324) * C16924 +
             (C327 - C326) * C16930 + (C329 - C328) * C16925 +
             (C331 - C330) * C16931 + (C333 - C332) * C16926) *
                C33256 +
            (C5979 * C16929 + C5980 * C16924 + C11465 * C16930 +
             C11466 * C16925 + (C896 - C897) * C16931 +
             (C898 - C899) * C16926) *
                C50174) *
               C50013 * C50285 +
           (((C335 - C334) * C16929 + (C337 - C336) * C16924 +
             (C339 - C338) * C16930 + (C341 - C340) * C16925 +
             (C343 - C342) * C16931 + (C345 - C344) * C16926) *
                C33256 +
            ((C5250 - C5249) * C16929 + (C5252 - C5251) * C16924 +
             (C10826 - C10825) * C16930 + (C10828 - C10827) * C16925 +
             (C117 * C1537 - C50094 * C1544) * C16931 +
             (C117 * C1545 - C50094 * C1549) * C16926) *
                C50174) *
               C50013 * C1303) *
              C49984)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C19689 +
             (C50094 * C143 - C117 * C130) * C49950) *
                C38554 +
            ((C5415 - C5416) * C19689 + (C5417 - C5418) * C49950) * C38555 +
            C38763 * C38556 + C38768 * C38557) *
               C50013 * C50284 +
           (((C117 * C281 - C50094 * C291) * C19689 +
             (C117 * C292 - C50094 * C311) * C49950) *
                C38554 +
            ((C5967 - C5968) * C19689 + (C5969 - C5970) * C49950) * C38555 +
            C39365 * C38556 + C39368 * C38557) *
               C50013 * C50285 +
           (((C50094 * C299 - C117 * C285) * C19689 +
             (C50094 * C315 - C117 * C300) * C49950) *
                C38554 +
            ((C6884 - C6885) * C19689 + (C6886 - C6887) * C49950) * C38555 +
            ((C6888 - C6889) * C19689 + (C6890 - C6891) * C49950) * C38556 +
            ((C50094 * C4500 - C117 * C4496) * C19689 +
             (C50094 * C4508 - C117 * C4502) * C49950) *
                C38557) *
               C50013 * C1303) *
              C50231 +
          ((((C152 - C151) * C19689 + (C154 - C153) * C49950) * C38554 +
            (C5427 * C19689 + C5428 * C49950) * C38555 + C38766 * C38556 +
            C38767 * C38557) *
               C50013 * C50284 +
           (((C323 - C322) * C19689 + (C325 - C324) * C49950) * C38554 +
            (C5979 * C19689 + C5980 * C49950) * C38555 +
            (C5981 * C19689 + C5982 * C49950) * C38556 +
            ((C5983 - C5984) * C19689 + (C5985 - C5986) * C49950) * C38557) *
               C50013 * C50285 +
           (((C335 - C334) * C19689 + (C337 - C336) * C49950) * C38554 +
            ((C5250 - C5249) * C19689 + (C5252 - C5251) * C49950) * C38555 +
            ((C5254 - C5253) * C19689 + (C5256 - C5255) * C49950) * C38556 +
            ((C117 * C4498 - C50094 * C4504) * C19689 +
             (C117 * C4506 - C50094 * C4510) * C49950) *
                C38557) *
               C50013 * C1303) *
              C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[186] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
              C2263 * C299 - C2268 * C285) *
                 C19689 +
             (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
              C2263 * C315 - C2268 * C300) *
                 C49950) *
                C33256 +
            ((C36179 - C36180 + C36181 - C36182 + C36183 - C36184) * C19689 +
             (C36185 - C36186 + C36187 - C36188 + C36189 - C36190) * C49950) *
                C50174) *
               C50240 +
           (((C36180 - C36179 + C36182 - C36181 + C36184 - C36183) * C19689 +
             (C36186 - C36185 + C36188 - C36187 + C36190 - C36189) * C49950) *
                C33256 +
            ((C36191 - C36192 + C36193 - C36194 + C36195 - C36196) * C19689 +
             (C36197 - C36198 + C36199 - C36200 + C36201 - C36202) * C49950) *
                C50174) *
               C50077) *
              C50284 +
          ((((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
              C2268 * C1073 - C2263 * C1077) *
                 C19689 +
             (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
              C2268 * C1078 - C2263 * C1085) *
                 C49950) *
                C33256 +
            ((C36689 - C36690 + C36691 - C36692 + C36693 - C36694) * C19689 +
             (C36695 - C36696 + C36697 - C36698 + C36699 - C36700) * C49950) *
                C50174) *
               C50240 +
           (((C36690 - C36689 + C36692 - C36691 + C36694 - C36693) * C19689 +
             (C36696 - C36695 + C36698 - C36697 + C36700 - C36699) * C49950) *
                C33256 +
            ((C37091 - C37092 + C37093 - C37094 + C37095 - C37096) * C19689 +
             (C37097 - C37098 + C37099 - C37100 + C37101 - C37102) * C49950) *
                C50174) *
               C50077) *
              C50285 +
          ((((C2261 * C299 - C2266 * C285 + C2262 * C1077 - C2267 * C1073 +
              C2263 * C2456 - C2268 * C2453) *
                 C19689 +
             (C2261 * C315 - C2266 * C300 + C2262 * C1085 - C2267 * C1078 +
              C2263 * C2462 - C2268 * C2457) *
                 C49950) *
                C33256 +
            ((C37589 - C37590 + C37591 - C37592 + C37593 - C37594) * C19689 +
             (C37595 - C37596 + C37597 - C37598 + C37599 - C37600) * C49950) *
                C50174) *
               C50240 +
           (((C37590 - C37589 + C37592 - C37591 + C37594 - C37593) * C19689 +
             (C37596 - C37595 + C37598 - C37597 + C37600 - C37599) * C49950) *
                C33256 +
            ((C2266 * C2635 - C2261 * C2638 + C2267 * C3603 - C2262 * C3605 +
              C2268 * C20478 - C2263 * C20479) *
                 C19689 +
             (C2266 * C2639 - C2261 * C2644 + C2267 * C3606 - C2262 * C3609 +
              C2268 * C20480 - C2263 * C20481) *
                 C49950) *
                C50174) *
               C50077) *
              C1303) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C16929 +
             (C50094 * C143 - C117 * C130) * C16924 + (C151 - C152) * C16930 +
             (C153 - C154) * C16925 + C171 * C16931 + C172 * C16926) *
                C33256 +
            ((C5415 - C5416) * C16929 + (C5417 - C5418) * C16924 +
             C5419 * C16930 + C5420 * C16925 + C5765 * C16931 +
             C5766 * C16926) *
                C50174) *
               C50240 +
           (((C5416 - C5415) * C16929 + (C5418 - C5417) * C16924 +
             C5427 * C16930 + C5428 * C16925 + C730 * C16931 + C731 * C16926) *
                C33256 +
            ((C5422 - C5421) * C16929 + (C5424 - C5423) * C16924 +
             C5429 * C16930 + C5430 * C16925 + C5443 * C16931 +
             C5444 * C16926) *
                C50174) *
               C50077) *
              C50284 +
          ((((C117 * C281 - C50094 * C291) * C16929 +
             (C117 * C292 - C50094 * C311) * C16924 + (C322 - C323) * C16930 +
             (C324 - C325) * C16925 + C618 * C16931 + C619 * C16926) *
                C33256 +
            ((C5967 - C5968) * C16929 + (C5969 - C5970) * C16924 +
             C5971 * C16930 + C5972 * C16925 + C11121 * C16931 +
             C11122 * C16926) *
                C50174) *
               C50240 +
           (((C5968 - C5967) * C16929 + (C5970 - C5969) * C16924 +
             C5979 * C16930 + C5980 * C16925 + C11465 * C16931 +
             C11466 * C16926) *
                C33256 +
            ((C5974 - C5973) * C16929 + (C5976 - C5975) * C16924 +
             C5981 * C16930 + C5982 * C16925 + (C5615 - C5616) * C16931 +
             (C5617 - C5618) * C16926) *
                C50174) *
               C50077) *
              C50285 +
          ((((C50094 * C299 - C117 * C285) * C16929 +
             (C50094 * C315 - C117 * C300) * C16924 + (C334 - C335) * C16930 +
             (C336 - C337) * C16925 + (C338 - C339) * C16931 +
             (C340 - C341) * C16926) *
                C33256 +
            ((C6884 - C6885) * C16929 + (C6886 - C6887) * C16924 +
             (C5249 - C5250) * C16930 + (C5251 - C5252) * C16925 +
             (C10825 - C10826) * C16931 + (C10827 - C10828) * C16926) *
                C50174) *
               C50240 +
           (((C6885 - C6884) * C16929 + (C6887 - C6886) * C16924 +
             (C5250 - C5249) * C16930 + (C5252 - C5251) * C16925 +
             (C10826 - C10825) * C16931 + (C10828 - C10827) * C16926) *
                C33256 +
            ((C6889 - C6888) * C16929 + (C6891 - C6890) * C16924 +
             (C5254 - C5253) * C16930 + (C5256 - C5255) * C16925 +
             (C117 * C2637 - C50094 * C2642) * C16931 +
             (C117 * C2643 - C50094 * C2646) * C16926) *
                C50174) *
               C50077) *
              C1303) *
         C49978) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C19689 +
             (C50094 * C143 - C117 * C130) * C49950) *
                C38554 +
            ((C5415 - C5416) * C19689 + (C5417 - C5418) * C49950) * C38555 +
            C38763 * C38556 + C38768 * C38557) *
               C50240 +
           (((C5416 - C5415) * C19689 + (C5418 - C5417) * C49950) * C38554 +
            ((C5422 - C5421) * C19689 + (C5424 - C5423) * C49950) * C38555 +
            (C7290 * C19689 + C7291 * C49950) * C38556 +
            ((C7295 - C7294) * C19689 + (C7297 - C7296) * C49950) * C38557) *
               C50077) *
              C50284 +
          ((((C117 * C281 - C50094 * C291) * C19689 +
             (C117 * C292 - C50094 * C311) * C49950) *
                C38554 +
            ((C5967 - C5968) * C19689 + (C5969 - C5970) * C49950) * C38555 +
            C39365 * C38556 + C39368 * C38557) *
               C50240 +
           (((C5968 - C5967) * C19689 + (C5970 - C5969) * C49950) * C38554 +
            ((C5974 - C5973) * C19689 + (C5976 - C5975) * C49950) * C38555 +
            ((C6389 - C6390) * C19689 + (C6391 - C6392) * C49950) * C38556 +
            ((C39361 - C39362) * C19689 + (C39363 - C39364) * C49950) *
                C38557) *
               C50077) *
              C50285 +
          ((((C50094 * C299 - C117 * C285) * C19689 +
             (C50094 * C315 - C117 * C300) * C49950) *
                C38554 +
            ((C6884 - C6885) * C19689 + (C6886 - C6887) * C49950) * C38555 +
            ((C6888 - C6889) * C19689 + (C6890 - C6891) * C49950) * C38556 +
            ((C39695 - C39696) * C19689 + (C39697 - C39698) * C49950) *
                C38557) *
               C50240 +
           (((C6885 - C6884) * C19689 + (C6887 - C6886) * C49950) * C38554 +
            ((C6889 - C6888) * C19689 + (C6891 - C6890) * C49950) * C38555 +
            ((C39696 - C39695) * C19689 + (C39698 - C39697) * C49950) * C38556 +
            ((C117 * C22744 - C50094 * C22745) * C19689 +
             (C117 * C22746 - C50094 * C22747) * C49950) *
                C38557) *
               C50077) *
              C1303) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C50094 * C129 - C117 * C122) * C16929 +
                 (C50094 * C143 - C117 * C130) * C16924 +
                 (C151 - C152) * C16930 + (C153 - C154) * C16925 +
                 C171 * C16931 + C172 * C16926) *
                    C33256 +
                ((C5415 - C5416) * C16929 + (C5417 - C5418) * C16924 +
                 C5419 * C16930 + C5420 * C16925 + C5765 * C16931 +
                 C5766 * C16926) *
                    C50174) *
                   C50013 * C997 +
               (((C117 * C281 - C50094 * C291) * C16929 +
                 (C117 * C292 - C50094 * C311) * C16924 +
                 (C322 - C323) * C16930 + (C324 - C325) * C16925 +
                 C618 * C16931 + C619 * C16926) *
                    C33256 +
                ((C5967 - C5968) * C16929 + (C5969 - C5970) * C16924 +
                 C5971 * C16930 + C5972 * C16925 + C11121 * C16931 +
                 C11122 * C16926) *
                    C50174) *
                   C50013 * C50049) *
                  C999 +
              ((((C152 - C151) * C16929 + (C154 - C153) * C16924 +
                 (C156 - C155) * C16930 + (C158 - C157) * C16925 +
                 C175 * C16931 + C176 * C16926) *
                    C33256 +
                (C5427 * C16929 + C5428 * C16924 + C730 * C16930 +
                 C731 * C16925 + C732 * C16931 + C733 * C16926) *
                    C50174) *
                   C50013 * C997 +
               (((C323 - C322) * C16929 + (C325 - C324) * C16924 +
                 (C327 - C326) * C16930 + (C329 - C328) * C16925 +
                 (C331 - C330) * C16931 + (C333 - C332) * C16926) *
                    C33256 +
                (C5979 * C16929 + C5980 * C16924 + C11465 * C16930 +
                 C11466 * C16925 + (C896 - C897) * C16931 +
                 (C898 - C899) * C16926) *
                    C50174) *
                   C50013 * C50049) *
                  C1000 +
              (((C171 * C16929 + C172 * C16924 + C173 * C16930 + C174 * C16925 +
                 (C164 - C163) * C16931 + (C166 - C165) * C16926) *
                    C33256 +
                (C5765 * C16929 + C5766 * C16924 + C11269 * C16930 +
                 C11270 * C16925 + (C734 - C735) * C16931 +
                 (C736 - C737) * C16926) *
                    C50174) *
                   C50013 * C997 +
               ((C618 * C16929 + C619 * C16924 + C620 * C16930 + C621 * C16925 +
                 (C623 - C622) * C16931 + (C625 - C624) * C16926) *
                    C33256 +
                (C11121 * C16929 + C11122 * C16924 + (C897 - C896) * C16930 +
                 (C899 - C898) * C16925 +
                 (C117 * C871 - C50094 * C880) * C16931 +
                 (C117 * C881 - C50094 * C886) * C16926) *
                    C50174) *
                   C50013 * C50049) *
                  C1001) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C50094 * C129 - C117 * C122) * C16929 +
                (C50094 * C143 - C117 * C130) * C16924 +
                (C151 - C152) * C16930 + (C153 - C154) * C16925 +
                C171 * C16931 + C172 * C16926) *
                   C33256 +
               ((C5415 - C5416) * C16929 + (C5417 - C5418) * C16924 +
                C5419 * C16930 + C5420 * C16925 + C5765 * C16931 +
                C5766 * C16926) *
                   C50174) *
                  C50013 * C1068 +
              (((C117 * C281 - C50094 * C291) * C16929 +
                (C117 * C292 - C50094 * C311) * C16924 +
                (C322 - C323) * C16930 + (C324 - C325) * C16925 +
                C618 * C16931 + C619 * C16926) *
                   C33256 +
               ((C5967 - C5968) * C16929 + (C5969 - C5970) * C16924 +
                C5971 * C16930 + C5972 * C16925 + C11121 * C16931 +
                C11122 * C16926) *
                   C50174) *
                  C50013 * C1069 +
              (((C50094 * C299 - C117 * C285) * C16929 +
                (C50094 * C315 - C117 * C300) * C16924 +
                (C334 - C335) * C16930 + (C336 - C337) * C16925 +
                (C338 - C339) * C16931 + (C340 - C341) * C16926) *
                   C33256 +
               ((C6884 - C6885) * C16929 + (C6886 - C6887) * C16924 +
                (C5249 - C5250) * C16930 + (C5251 - C5252) * C16925 +
                (C10825 - C10826) * C16931 + (C10827 - C10828) * C16926) *
                   C50174) *
                  C50013 * C1070 +
              (((C117 * C1073 - C50094 * C1077) * C16929 +
                (C117 * C1078 - C50094 * C1085) * C16924 +
                (C117 * C1074 - C50094 * C1079) * C16930 +
                (C117 * C1080 - C50094 * C1086) * C16925 +
                (C117 * C1075 - C50094 * C1081) * C16931 +
                (C117 * C1082 - C50094 * C1087) * C16926) *
                   C33256 +
               ((C117 * C3181 - C50094 * C3184) * C16929 +
                (C117 * C3185 - C50094 * C3190) * C16924 +
                (C117 * C3182 - C50094 * C3186) * C16930 +
                (C117 * C3187 - C50094 * C3191) * C16925 +
                (C117 * C3183 - C50094 * C3188) * C16931 +
                (C117 * C3189 - C50094 * C3192) * C16926) *
                   C50174) *
                  C50013 * C1071) *
             C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C16929 +
             (C50094 * C143 - C117 * C130) * C16924 + (C151 - C152) * C16930 +
             (C153 - C154) * C16925 + C171 * C16931 + C172 * C16926) *
                C33256 +
            ((C5415 - C5416) * C16929 + (C5417 - C5418) * C16924 +
             C5419 * C16930 + C5420 * C16925 + C5765 * C16931 +
             C5766 * C16926) *
                C50174) *
               C443 +
           (((C5416 - C5415) * C16929 + (C5418 - C5417) * C16924 +
             C5427 * C16930 + C5428 * C16925 + C730 * C16931 + C731 * C16926) *
                C33256 +
            ((C5422 - C5421) * C16929 + (C5424 - C5423) * C16924 +
             C5429 * C16930 + C5430 * C16925 + C5443 * C16931 +
             C5444 * C16926) *
                C50174) *
               C444 +
           ((C5449 * C16929 + C5450 * C16924 + C5425 * C16930 + C5426 * C16925 +
             C5767 * C16931 + C5768 * C16926) *
                C33256 +
            ((C5432 - C5431) * C16929 + (C5434 - C5433) * C16924 +
             C5455 * C16930 + C5456 * C16925 + (C5445 - C5446) * C16931 +
             (C5447 - C5448) * C16926) *
                C50174) *
               C445) *
              C997 +
          ((((C117 * C281 - C50094 * C291) * C16929 +
             (C117 * C292 - C50094 * C311) * C16924 + (C322 - C323) * C16930 +
             (C324 - C325) * C16925 + C618 * C16931 + C619 * C16926) *
                C33256 +
            ((C5967 - C5968) * C16929 + (C5969 - C5970) * C16924 +
             C5971 * C16930 + C5972 * C16925 + C11121 * C16931 +
             C11122 * C16926) *
                C50174) *
               C443 +
           (((C5968 - C5967) * C16929 + (C5970 - C5969) * C16924 +
             C5979 * C16930 + C5980 * C16925 + C11465 * C16931 +
             C11466 * C16926) *
                C33256 +
            ((C5974 - C5973) * C16929 + (C5976 - C5975) * C16924 +
             C5981 * C16930 + C5982 * C16925 + (C5615 - C5616) * C16931 +
             (C5617 - C5618) * C16926) *
                C50174) *
               C444 +
           ((C6385 * C16929 + C6386 * C16924 + C5977 * C16930 + C5978 * C16925 +
             (C5616 - C5615) * C16931 + (C5618 - C5617) * C16926) *
                C33256 +
            ((C6390 - C6389) * C16929 + (C6392 - C6391) * C16924 +
             (C5984 - C5983) * C16930 + (C5986 - C5985) * C16925 +
             (C117 * C5962 - C50094 * C5963) * C16931 +
             (C117 * C5964 - C50094 * C5965) * C16926) *
                C50174) *
               C445) *
              C50049) *
         C49978) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
              C2263 * C299 - C2268 * C285) *
                 C19689 +
             (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
              C2263 * C315 - C2268 * C300) *
                 C49950) *
                C33256 +
            ((C36179 - C36180 + C36181 - C36182 + C36183 - C36184) * C19689 +
             (C36185 - C36186 + C36187 - C36188 + C36189 - C36190) * C49950) *
                C50174) *
               C50013 * C997 +
           (((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
              C2268 * C1073 - C2263 * C1077) *
                 C19689 +
             (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
              C2268 * C1078 - C2263 * C1085) *
                 C49950) *
                C33256 +
            ((C36689 - C36690 + C36691 - C36692 + C36693 - C36694) * C19689 +
             (C36695 - C36696 + C36697 - C36698 + C36699 - C36700) * C49950) *
                C50174) *
               C50013 * C50049) *
              C999 +
          ((((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C19689 +
             (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C49950) *
                C33256 +
            ((C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C19689 +
             (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49950) *
                C50174) *
               C50013 * C997 +
           (((C2467 - C2466 + C2469 - C2468 + C2471 - C2470) * C19689 +
             (C2473 - C2472 + C2475 - C2474 + C2477 - C2476) * C49950) *
                C33256 +
            ((C3194 - C3195 + C3196 - C3197 + C3198 - C3199) * C19689 +
             (C3200 - C3201 + C3202 - C3203 + C3204 - C3205) * C49950) *
                C50174) *
               C50013 * C50049) *
              C1000 +
          ((((C2285 - C2284 + C2287 - C2286 + C2289 - C2288) * C19689 +
             (C2291 - C2290 + C2293 - C2292 + C2295 - C2294) * C49950) *
                C33256 +
            ((C2976 - C2977 + C2978 - C2979 + C2980 - C2981) * C19689 +
             (C2982 - C2983 + C2984 - C2985 + C2986 - C2987) * C49950) *
                C50174) *
               C50013 * C997 +
           (((C2819 - C2818 + C2821 - C2820 + C2823 - C2822) * C19689 +
             (C2825 - C2824 + C2827 - C2826 + C2829 - C2828) * C49950) *
                C33256 +
            ((C2266 * C869 - C2261 * C876 + C2267 * C1536 - C2262 * C1542 +
              C2268 * C3183 - C2263 * C3188) *
                 C19689 +
             (C2266 * C877 - C2261 * C884 + C2267 * C1543 - C2262 * C1548 +
              C2268 * C3189 - C2263 * C3192) *
                 C49950) *
                C50174) *
               C50013 * C50049) *
              C1001)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
             C2263 * C299 - C2268 * C285) *
                C19689 +
            (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
             C2263 * C315 - C2268 * C300) *
                C49950) *
               C33256 +
           ((C36179 - C36180 + C36181 - C36182 + C36183 - C36184) * C19689 +
            (C36185 - C36186 + C36187 - C36188 + C36189 - C36190) * C49950) *
               C50174) *
              C50013 * C1068 +
          (((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
             C2268 * C1073 - C2263 * C1077) *
                C19689 +
            (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
             C2268 * C1078 - C2263 * C1085) *
                C49950) *
               C33256 +
           ((C36689 - C36690 + C36691 - C36692 + C36693 - C36694) * C19689 +
            (C36695 - C36696 + C36697 - C36698 + C36699 - C36700) * C49950) *
               C50174) *
              C50013 * C1069 +
          (((C2261 * C299 - C2266 * C285 + C2262 * C1077 - C2267 * C1073 +
             C2263 * C2456 - C2268 * C2453) *
                C19689 +
            (C2261 * C315 - C2266 * C300 + C2262 * C1085 - C2267 * C1078 +
             C2263 * C2462 - C2268 * C2457) *
                C49950) *
               C33256 +
           ((C2261 * C1538 - C2266 * C1534 + C2262 * C3184 - C2267 * C3181 +
             C2263 * C4099 - C2268 * C4097) *
                C19689 +
            (C2261 * C1546 - C2266 * C1539 + C2262 * C3190 - C2267 * C3185 +
             C2263 * C4103 - C2268 * C4100) *
                C49950) *
               C50174) *
              C50013 * C1070 +
          (((C2266 * C1073 - C2261 * C1077 + C2267 * C2453 - C2262 * C2456 +
             C2268 * C3449 - C2263 * C3451) *
                C19689 +
            (C2266 * C1078 - C2261 * C1085 + C2267 * C2457 - C2262 * C2462 +
             C2268 * C3452 - C2263 * C3455) *
                C49950) *
               C33256 +
           ((C2266 * C3181 - C2261 * C3184 + C2267 * C4097 - C2262 * C4099 +
             C2268 * C20808 - C2263 * C20809) *
                C19689 +
            (C2266 * C3185 - C2261 * C3190 + C2267 * C4100 - C2262 * C4103 +
             C2268 * C20810 - C2263 * C20811) *
                C49950) *
               C50174) *
              C50013 * C1071) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
              C2263 * C299 - C2268 * C285) *
                 C19689 +
             (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
              C2263 * C315 - C2268 * C300) *
                 C49950) *
                C33256 +
            ((C36179 - C36180 + C36181 - C36182 + C36183 - C36184) * C19689 +
             (C36185 - C36186 + C36187 - C36188 + C36189 - C36190) * C49950) *
                C50174) *
               C443 +
           (((C36180 - C36179 + C36182 - C36181 + C36184 - C36183) * C19689 +
             (C36186 - C36185 + C36188 - C36187 + C36190 - C36189) * C49950) *
                C33256 +
            ((C36191 - C36192 + C36193 - C36194 + C36195 - C36196) * C19689 +
             (C36197 - C36198 + C36199 - C36200 + C36201 - C36202) * C49950) *
                C50174) *
               C444 +
           (((C36192 - C36191 + C36194 - C36193 + C36196 - C36195) * C19689 +
             (C36198 - C36197 + C36200 - C36199 + C36202 - C36201) * C49950) *
                C33256 +
            ((C2261 * C1822 - C2266 * C1818 + C2262 * C4499 - C2267 * C4495 +
              C2263 * C4500 - C2268 * C4496) *
                 C19689 +
             (C2261 * C1830 - C2266 * C1823 + C2262 * C4507 - C2267 * C4501 +
              C2263 * C4508 - C2268 * C4502) *
                 C49950) *
                C50174) *
               C445) *
              C997 +
          ((((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
              C2268 * C1073 - C2263 * C1077) *
                 C19689 +
             (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
              C2268 * C1078 - C2263 * C1085) *
                 C49950) *
                C33256 +
            ((C36689 - C36690 + C36691 - C36692 + C36693 - C36694) * C19689 +
             (C36695 - C36696 + C36697 - C36698 + C36699 - C36700) * C49950) *
                C50174) *
               C443 +
           (((C36690 - C36689 + C36692 - C36691 + C36694 - C36693) * C19689 +
             (C36696 - C36695 + C36698 - C36697 + C36700 - C36699) * C49950) *
                C33256 +
            ((C37091 - C37092 + C37093 - C37094 + C37095 - C37096) * C19689 +
             (C37097 - C37098 + C37099 - C37100 + C37101 - C37102) * C49950) *
                C50174) *
               C444 +
           (((C37092 - C37091 + C37094 - C37093 + C37096 - C37095) * C19689 +
             (C37098 - C37097 + C37100 - C37099 + C37102 - C37101) * C49950) *
                C33256 +
            ((C2266 * C4495 - C2261 * C4499 + C2267 * C4496 - C2262 * C4500 +
              C2268 * C21074 - C2263 * C21075) *
                 C19689 +
             (C2266 * C4501 - C2261 * C4507 + C2267 * C4502 - C2262 * C4508 +
              C2268 * C21076 - C2263 * C21077) *
                 C49950) *
                C50174) *
               C445) *
              C50049) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C19689 +
             (C50094 * C143 - C117 * C130) * C49950) *
                C38554 +
            ((C5415 - C5416) * C19689 + (C5417 - C5418) * C49950) * C38555 +
            C38763 * C38556 + C38768 * C38557) *
               C50013 * C997 +
           (((C117 * C281 - C50094 * C291) * C19689 +
             (C117 * C292 - C50094 * C311) * C49950) *
                C38554 +
            ((C5967 - C5968) * C19689 + (C5969 - C5970) * C49950) * C38555 +
            (C6385 * C19689 + C6386 * C49950) * C38556 +
            ((C6390 - C6389) * C19689 + (C6392 - C6391) * C49950) * C38557) *
               C50013 * C50049) *
              C999 +
          ((((C152 - C151) * C19689 + (C154 - C153) * C49950) * C38554 +
            (C5427 * C19689 + C5428 * C49950) * C38555 + C38766 * C38556 +
            C38767 * C38557) *
               C50013 * C997 +
           (((C323 - C322) * C19689 + (C325 - C324) * C49950) * C38554 +
            (C5979 * C19689 + C5980 * C49950) * C38555 +
            (C5981 * C19689 + C5982 * C49950) * C38556 +
            ((C5983 - C5984) * C19689 + (C5985 - C5986) * C49950) * C38557) *
               C50013 * C50049) *
              C1000 +
          (((C171 * C19689 + C172 * C49950) * C38554 +
            (C5765 * C19689 + C5766 * C49950) * C38555 +
            (C5767 * C19689 + C5768 * C49950) * C38556 +
            ((C5445 - C5446) * C19689 + (C5447 - C5448) * C49950) * C38557) *
               C50013 * C997 +
           ((C618 * C19689 + C619 * C49950) * C38554 +
            (C11121 * C19689 + C11122 * C49950) * C38555 +
            ((C5616 - C5615) * C19689 + (C5618 - C5617) * C49950) * C38556 +
            ((C117 * C5962 - C50094 * C5963) * C19689 +
             (C117 * C5964 - C50094 * C5965) * C49950) *
                C38557) *
               C50013 * C50049) *
              C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C19689 +
            (C50094 * C143 - C117 * C130) * C49950) *
               C38554 +
           ((C5415 - C5416) * C19689 + (C5417 - C5418) * C49950) * C38555 +
           C38763 * C38556 + C38768 * C38557) *
              C50013 * C1068 +
          (((C117 * C281 - C50094 * C291) * C19689 +
            (C117 * C292 - C50094 * C311) * C49950) *
               C38554 +
           ((C5967 - C5968) * C19689 + (C5969 - C5970) * C49950) * C38555 +
           (C6385 * C19689 + C6386 * C49950) * C38556 +
           ((C6390 - C6389) * C19689 + (C6392 - C6391) * C49950) * C38557) *
              C50013 * C1069 +
          (((C50094 * C299 - C117 * C285) * C19689 +
            (C50094 * C315 - C117 * C300) * C49950) *
               C38554 +
           ((C6884 - C6885) * C19689 + (C6886 - C6887) * C49950) * C38555 +
           ((C6888 - C6889) * C19689 + (C6890 - C6891) * C49950) * C38556 +
           ((C50094 * C4500 - C117 * C4496) * C19689 +
            (C50094 * C4508 - C117 * C4502) * C49950) *
               C38557) *
              C50013 * C1070 +
          (((C117 * C1073 - C50094 * C1077) * C19689 +
            (C117 * C1078 - C50094 * C1085) * C49950) *
               C38554 +
           ((C117 * C3181 - C50094 * C3184) * C19689 +
            (C117 * C3185 - C50094 * C3190) * C49950) *
               C38555 +
           ((C117 * C3603 - C50094 * C3605) * C19689 +
            (C117 * C3606 - C50094 * C3609) * C49950) *
               C38556 +
           ((C117 * C21074 - C50094 * C21075) * C19689 +
            (C117 * C21076 - C50094 * C21077) * C49950) *
               C38557) *
              C50013 * C1071) *
         C49978) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C19689 +
             (C50094 * C143 - C117 * C130) * C49950) *
                C38554 +
            ((C5415 - C5416) * C19689 + (C5417 - C5418) * C49950) * C38555 +
            C38763 * C38556 + C38768 * C38557) *
               C443 +
           (((C5416 - C5415) * C19689 + (C5418 - C5417) * C49950) * C38554 +
            ((C5422 - C5421) * C19689 + (C5424 - C5423) * C49950) * C38555 +
            (C7290 * C19689 + C7291 * C49950) * C38556 +
            ((C7295 - C7294) * C19689 + (C7297 - C7296) * C49950) * C38557) *
               C444 +
           (C38763 * C38554 + C38768 * C38555 +
            ((C7294 - C7295) * C19689 + (C7296 - C7297) * C49950) * C38556 +
            ((C50094 * C7283 - C117 * C7281) * C19689 +
             (C50094 * C7287 - C117 * C7284) * C49950) *
                C38557) *
               C445) *
              C997 +
          ((((C117 * C281 - C50094 * C291) * C19689 +
             (C117 * C292 - C50094 * C311) * C49950) *
                C38554 +
            ((C5967 - C5968) * C19689 + (C5969 - C5970) * C49950) * C38555 +
            C39365 * C38556 + C39368 * C38557) *
               C443 +
           (((C5968 - C5967) * C19689 + (C5970 - C5969) * C49950) * C38554 +
            ((C5974 - C5973) * C19689 + (C5976 - C5975) * C49950) * C38555 +
            ((C6389 - C6390) * C19689 + (C6391 - C6392) * C49950) * C38556 +
            ((C39361 - C39362) * C19689 + (C39363 - C39364) * C49950) *
                C38557) *
               C444 +
           (C39365 * C38554 + C39368 * C38555 +
            ((C39362 - C39361) * C19689 + (C39364 - C39363) * C49950) * C38556 +
            ((C117 * C23657 - C50094 * C23658) * C19689 +
             (C117 * C23659 - C50094 * C23660) * C49950) *
                C38557) *
               C445) *
              C50049) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[188] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
               C2263 * C299 - C2268 * C285) *
                  C19689 +
              (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
               C2263 * C315 - C2268 * C300) *
                  C49950) *
                 C33256 +
             ((C36179 - C36180 + C36181 - C36182 + C36183 - C36184) * C19689 +
              (C36185 - C36186 + C36187 - C36188 + C36189 - C36190) * C49950) *
                 C50174) *
                C50240 +
            (((C36180 - C36179 + C36182 - C36181 + C36184 - C36183) * C19689 +
              (C36186 - C36185 + C36188 - C36187 + C36190 - C36189) * C49950) *
                 C33256 +
             ((C36191 - C36192 + C36193 - C36194 + C36195 - C36196) * C19689 +
              (C36197 - C36198 + C36199 - C36200 + C36201 - C36202) * C49950) *
                 C50174) *
                C50077) *
               C997 +
           ((((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
               C2268 * C1073 - C2263 * C1077) *
                  C19689 +
              (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
               C2268 * C1078 - C2263 * C1085) *
                  C49950) *
                 C33256 +
             ((C36689 - C36690 + C36691 - C36692 + C36693 - C36694) * C19689 +
              (C36695 - C36696 + C36697 - C36698 + C36699 - C36700) * C49950) *
                 C50174) *
                C50240 +
            (((C36690 - C36689 + C36692 - C36691 + C36694 - C36693) * C19689 +
              (C36696 - C36695 + C36698 - C36697 + C36700 - C36699) * C49950) *
                 C33256 +
             ((C37091 - C37092 + C37093 - C37094 + C37095 - C37096) * C19689 +
              (C37097 - C37098 + C37099 - C37100 + C37101 - C37102) * C49950) *
                 C50174) *
                C50077) *
               C50049) *
              C50231 +
          (((((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C19689 +
              (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C49950) *
                 C33256 +
             ((C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C19689 +
              (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49950) *
                 C50174) *
                C50240 +
            (((C2649 - C2648 + C2651 - C2650 + C2653 - C2652) * C19689 +
              (C2655 - C2654 + C2657 - C2656 + C2659 - C2658) * C49950) *
                 C33256 +
             ((C2660 - C2661 + C2662 - C2663 + C2664 - C2665) * C19689 +
              (C2666 - C2667 + C2668 - C2669 + C2670 - C2671) * C49950) *
                 C50174) *
                C50077) *
               C997 +
           ((((C2467 - C2466 + C2469 - C2468 + C2471 - C2470) * C19689 +
              (C2473 - C2472 + C2475 - C2474 + C2477 - C2476) * C49950) *
                 C33256 +
             ((C3194 - C3195 + C3196 - C3197 + C3198 - C3199) * C19689 +
              (C3200 - C3201 + C3202 - C3203 + C3204 - C3205) * C49950) *
                 C50174) *
                C50240 +
            (((C3195 - C3194 + C3197 - C3196 + C3199 - C3198) * C19689 +
              (C3201 - C3200 + C3203 - C3202 + C3205 - C3204) * C49950) *
                 C33256 +
             ((C2266 * C1188 - C2261 * C1193 + C2267 * C2636 - C2262 * C2640 +
               C2268 * C3604 - C2263 * C3607) *
                  C19689 +
              (C2266 * C1194 - C2261 * C1200 + C2267 * C2641 - C2262 * C2645 +
               C2268 * C3608 - C2263 * C3610) *
                  C49950) *
                 C50174) *
                C50077) *
               C50049) *
              C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C50094 * C129 - C117 * C122) * C16929 +
              (C50094 * C143 - C117 * C130) * C16924 + (C151 - C152) * C16930 +
              (C153 - C154) * C16925 + C171 * C16931 + C172 * C16926) *
                 C33256 +
             ((C5415 - C5416) * C16929 + (C5417 - C5418) * C16924 +
              C5419 * C16930 + C5420 * C16925 + C5765 * C16931 +
              C5766 * C16926) *
                 C50174) *
                C50240 +
            (((C5416 - C5415) * C16929 + (C5418 - C5417) * C16924 +
              C5427 * C16930 + C5428 * C16925 + C730 * C16931 + C731 * C16926) *
                 C33256 +
             ((C5422 - C5421) * C16929 + (C5424 - C5423) * C16924 +
              C5429 * C16930 + C5430 * C16925 + C5443 * C16931 +
              C5444 * C16926) *
                 C50174) *
                C50077) *
               C997 +
           ((((C117 * C281 - C50094 * C291) * C16929 +
              (C117 * C292 - C50094 * C311) * C16924 + (C322 - C323) * C16930 +
              (C324 - C325) * C16925 + C618 * C16931 + C619 * C16926) *
                 C33256 +
             ((C5967 - C5968) * C16929 + (C5969 - C5970) * C16924 +
              C5971 * C16930 + C5972 * C16925 + C11121 * C16931 +
              C11122 * C16926) *
                 C50174) *
                C50240 +
            (((C5968 - C5967) * C16929 + (C5970 - C5969) * C16924 +
              C5979 * C16930 + C5980 * C16925 + C11465 * C16931 +
              C11466 * C16926) *
                 C33256 +
             ((C5974 - C5973) * C16929 + (C5976 - C5975) * C16924 +
              C5981 * C16930 + C5982 * C16925 + (C5615 - C5616) * C16931 +
              (C5617 - C5618) * C16926) *
                 C50174) *
                C50077) *
               C50049) *
              C50231 +
          (((((C152 - C151) * C16929 + (C154 - C153) * C16924 +
              (C156 - C155) * C16930 + (C158 - C157) * C16925 + C175 * C16931 +
              C176 * C16926) *
                 C33256 +
             (C5427 * C16929 + C5428 * C16924 + C730 * C16930 + C731 * C16925 +
              C732 * C16931 + C733 * C16926) *
                 C50174) *
                C50240 +
            ((C5419 * C16929 + C5420 * C16924 + C5765 * C16930 +
              C5766 * C16925 + C11269 * C16931 + C11270 * C16926) *
                 C33256 +
             (C5425 * C16929 + C5426 * C16924 + C5767 * C16930 +
              C5768 * C16925 + (C507 - C508) * C16931 +
              (C509 - C510) * C16926) *
                 C50174) *
                C50077) *
               C997 +
           ((((C323 - C322) * C16929 + (C325 - C324) * C16924 +
              (C327 - C326) * C16930 + (C329 - C328) * C16925 +
              (C331 - C330) * C16931 + (C333 - C332) * C16926) *
                 C33256 +
             (C5979 * C16929 + C5980 * C16924 + C11465 * C16930 +
              C11466 * C16925 + (C896 - C897) * C16931 +
              (C898 - C899) * C16926) *
                 C50174) *
                C50240 +
            ((C5971 * C16929 + C5972 * C16924 + C11121 * C16930 +
              C11122 * C16925 + (C897 - C896) * C16931 +
              (C899 - C898) * C16926) *
                 C33256 +
             (C5977 * C16929 + C5978 * C16924 + (C5616 - C5615) * C16930 +
              (C5618 - C5617) * C16925 +
              (C117 * C1190 - C50094 * C1197) * C16931 +
              (C117 * C1198 - C50094 * C1202) * C16926) *
                 C50174) *
                C50077) *
               C50049) *
              C49984)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C50094 * C129 - C117 * C122) * C19689 +
              (C50094 * C143 - C117 * C130) * C49950) *
                 C38554 +
             ((C5415 - C5416) * C19689 + (C5417 - C5418) * C49950) * C38555 +
             C38763 * C38556 + C38768 * C38557) *
                C50240 +
            (((C5416 - C5415) * C19689 + (C5418 - C5417) * C49950) * C38554 +
             ((C5422 - C5421) * C19689 + (C5424 - C5423) * C49950) * C38555 +
             (C7290 * C19689 + C7291 * C49950) * C38556 +
             ((C7295 - C7294) * C19689 + (C7297 - C7296) * C49950) * C38557) *
                C50077) *
               C997 +
           ((((C117 * C281 - C50094 * C291) * C19689 +
              (C117 * C292 - C50094 * C311) * C49950) *
                 C38554 +
             ((C5967 - C5968) * C19689 + (C5969 - C5970) * C49950) * C38555 +
             C39365 * C38556 + C39368 * C38557) *
                C50240 +
            (((C5968 - C5967) * C19689 + (C5970 - C5969) * C49950) * C38554 +
             ((C5974 - C5973) * C19689 + (C5976 - C5975) * C49950) * C38555 +
             ((C6389 - C6390) * C19689 + (C6391 - C6392) * C49950) * C38556 +
             ((C39361 - C39362) * C19689 + (C39363 - C39364) * C49950) *
                 C38557) *
                C50077) *
               C50049) *
              C50231 +
          (((((C152 - C151) * C19689 + (C154 - C153) * C49950) * C38554 +
             (C5427 * C19689 + C5428 * C49950) * C38555 + C38766 * C38556 +
             C38767 * C38557) *
                C50240 +
            ((C5419 * C19689 + C5420 * C49950) * C38554 +
             (C5425 * C19689 + C5426 * C49950) * C38555 +
             (C5455 * C19689 + C5456 * C49950) * C38556 +
             ((C5439 - C5440) * C19689 + (C5441 - C5442) * C49950) * C38557) *
                C50077) *
               C997 +
           ((((C323 - C322) * C19689 + (C325 - C324) * C49950) * C38554 +
             (C5979 * C19689 + C5980 * C49950) * C38555 +
             (C5981 * C19689 + C5982 * C49950) * C38556 +
             ((C5983 - C5984) * C19689 + (C5985 - C5986) * C49950) * C38557) *
                C50240 +
            ((C5971 * C19689 + C5972 * C49950) * C38554 +
             (C5977 * C19689 + C5978 * C49950) * C38555 +
             ((C5984 - C5983) * C19689 + (C5986 - C5985) * C49950) * C38556 +
             ((C117 * C6377 - C50094 * C6380) * C19689 +
              (C117 * C6381 - C50094 * C6383) * C49950) *
                 C38557) *
                C50077) *
               C50049) *
              C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[189] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C16929 +
            (C50094 * C143 - C117 * C130) * C16924 + (C151 - C152) * C16930 +
            (C153 - C154) * C16925 + C171 * C16931 + C172 * C16926) *
               C33256 +
           ((C5415 - C5416) * C16929 + (C5417 - C5418) * C16924 +
            C5419 * C16930 + C5420 * C16925 + C5765 * C16931 + C5766 * C16926) *
               C50174) *
              C50013 * C1068 +
          (((C117 * C281 - C50094 * C291) * C16929 +
            (C117 * C292 - C50094 * C311) * C16924 + (C322 - C323) * C16930 +
            (C324 - C325) * C16925 + C618 * C16931 + C619 * C16926) *
               C33256 +
           ((C5967 - C5968) * C16929 + (C5969 - C5970) * C16924 +
            C5971 * C16930 + C5972 * C16925 + C11121 * C16931 +
            C11122 * C16926) *
               C50174) *
              C50013 * C1069 +
          (((C50094 * C299 - C117 * C285) * C16929 +
            (C50094 * C315 - C117 * C300) * C16924 + (C334 - C335) * C16930 +
            (C336 - C337) * C16925 + (C338 - C339) * C16931 +
            (C340 - C341) * C16926) *
               C33256 +
           ((C6884 - C6885) * C16929 + (C6886 - C6887) * C16924 +
            (C5249 - C5250) * C16930 + (C5251 - C5252) * C16925 +
            (C10825 - C10826) * C16931 + (C10827 - C10828) * C16926) *
               C50174) *
              C50013 * C1070 +
          (((C117 * C1073 - C50094 * C1077) * C16929 +
            (C117 * C1078 - C50094 * C1085) * C16924 +
            (C117 * C1074 - C50094 * C1079) * C16930 +
            (C117 * C1080 - C50094 * C1086) * C16925 +
            (C117 * C1075 - C50094 * C1081) * C16931 +
            (C117 * C1082 - C50094 * C1087) * C16926) *
               C33256 +
           ((C117 * C3181 - C50094 * C3184) * C16929 +
            (C117 * C3185 - C50094 * C3190) * C16924 +
            (C117 * C3182 - C50094 * C3186) * C16930 +
            (C117 * C3187 - C50094 * C3191) * C16925 +
            (C117 * C3183 - C50094 * C3188) * C16931 +
            (C117 * C3189 - C50094 * C3192) * C16926) *
               C50174) *
              C50013 * C1071) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C16929 +
             (C50094 * C143 - C117 * C130) * C16924 + (C151 - C152) * C16930 +
             (C153 - C154) * C16925 + C171 * C16931 + C172 * C16926) *
                C33256 +
            ((C5415 - C5416) * C16929 + (C5417 - C5418) * C16924 +
             C5419 * C16930 + C5420 * C16925 + C5765 * C16931 +
             C5766 * C16926) *
                C50174) *
               C50013 * C997 +
           (((C117 * C281 - C50094 * C291) * C16929 +
             (C117 * C292 - C50094 * C311) * C16924 + (C322 - C323) * C16930 +
             (C324 - C325) * C16925 + C618 * C16931 + C619 * C16926) *
                C33256 +
            ((C5967 - C5968) * C16929 + (C5969 - C5970) * C16924 +
             C5971 * C16930 + C5972 * C16925 + C11121 * C16931 +
             C11122 * C16926) *
                C50174) *
               C50013 * C50049) *
              C999 +
          ((((C152 - C151) * C16929 + (C154 - C153) * C16924 +
             (C156 - C155) * C16930 + (C158 - C157) * C16925 + C175 * C16931 +
             C176 * C16926) *
                C33256 +
            (C5427 * C16929 + C5428 * C16924 + C730 * C16930 + C731 * C16925 +
             C732 * C16931 + C733 * C16926) *
                C50174) *
               C50013 * C997 +
           (((C323 - C322) * C16929 + (C325 - C324) * C16924 +
             (C327 - C326) * C16930 + (C329 - C328) * C16925 +
             (C331 - C330) * C16931 + (C333 - C332) * C16926) *
                C33256 +
            (C5979 * C16929 + C5980 * C16924 + C11465 * C16930 +
             C11466 * C16925 + (C896 - C897) * C16931 +
             (C898 - C899) * C16926) *
                C50174) *
               C50013 * C50049) *
              C1000 +
          (((C171 * C16929 + C172 * C16924 + C173 * C16930 + C174 * C16925 +
             (C164 - C163) * C16931 + (C166 - C165) * C16926) *
                C33256 +
            (C5765 * C16929 + C5766 * C16924 + C11269 * C16930 +
             C11270 * C16925 + (C734 - C735) * C16931 +
             (C736 - C737) * C16926) *
                C50174) *
               C50013 * C997 +
           ((C618 * C16929 + C619 * C16924 + C620 * C16930 + C621 * C16925 +
             (C623 - C622) * C16931 + (C625 - C624) * C16926) *
                C33256 +
            (C11121 * C16929 + C11122 * C16924 + (C897 - C896) * C16930 +
             (C899 - C898) * C16925 + (C117 * C871 - C50094 * C880) * C16931 +
             (C117 * C881 - C50094 * C886) * C16926) *
                C50174) *
               C50013 * C50049) *
              C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
              C2263 * C299 - C2268 * C285) *
                 C19689 +
             (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
              C2263 * C315 - C2268 * C300) *
                 C49950) *
                C33256 +
            ((C36179 - C36180 + C36181 - C36182 + C36183 - C36184) * C19689 +
             (C36185 - C36186 + C36187 - C36188 + C36189 - C36190) * C49950) *
                C50174) *
               C50013 * C997 +
           (((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
              C2268 * C1073 - C2263 * C1077) *
                 C19689 +
             (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
              C2268 * C1078 - C2263 * C1085) *
                 C49950) *
                C33256 +
            ((C36689 - C36690 + C36691 - C36692 + C36693 - C36694) * C19689 +
             (C36695 - C36696 + C36697 - C36698 + C36699 - C36700) * C49950) *
                C50174) *
               C50013 * C50049) *
              C999 +
          ((((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C19689 +
             (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C49950) *
                C33256 +
            ((C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C19689 +
             (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49950) *
                C50174) *
               C50013 * C997 +
           (((C2467 - C2466 + C2469 - C2468 + C2471 - C2470) * C19689 +
             (C2473 - C2472 + C2475 - C2474 + C2477 - C2476) * C49950) *
                C33256 +
            ((C3194 - C3195 + C3196 - C3197 + C3198 - C3199) * C19689 +
             (C3200 - C3201 + C3202 - C3203 + C3204 - C3205) * C49950) *
                C50174) *
               C50013 * C50049) *
              C1000 +
          ((((C2285 - C2284 + C2287 - C2286 + C2289 - C2288) * C19689 +
             (C2291 - C2290 + C2293 - C2292 + C2295 - C2294) * C49950) *
                C33256 +
            ((C2976 - C2977 + C2978 - C2979 + C2980 - C2981) * C19689 +
             (C2982 - C2983 + C2984 - C2985 + C2986 - C2987) * C49950) *
                C50174) *
               C50013 * C997 +
           (((C2819 - C2818 + C2821 - C2820 + C2823 - C2822) * C19689 +
             (C2825 - C2824 + C2827 - C2826 + C2829 - C2828) * C49950) *
                C33256 +
            ((C2266 * C869 - C2261 * C876 + C2267 * C1536 - C2262 * C1542 +
              C2268 * C3183 - C2263 * C3188) *
                 C19689 +
             (C2266 * C877 - C2261 * C884 + C2267 * C1543 - C2262 * C1548 +
              C2268 * C3189 - C2263 * C3192) *
                 C49950) *
                C50174) *
               C50013 * C50049) *
              C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
             C2263 * C299 - C2268 * C285) *
                C19689 +
            (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
             C2263 * C315 - C2268 * C300) *
                C49950) *
               C33256 +
           ((C36179 - C36180 + C36181 - C36182 + C36183 - C36184) * C19689 +
            (C36185 - C36186 + C36187 - C36188 + C36189 - C36190) * C49950) *
               C50174) *
              C50013 * C1068 +
          (((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
             C2268 * C1073 - C2263 * C1077) *
                C19689 +
            (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
             C2268 * C1078 - C2263 * C1085) *
                C49950) *
               C33256 +
           ((C36689 - C36690 + C36691 - C36692 + C36693 - C36694) * C19689 +
            (C36695 - C36696 + C36697 - C36698 + C36699 - C36700) * C49950) *
               C50174) *
              C50013 * C1069 +
          (((C2261 * C299 - C2266 * C285 + C2262 * C1077 - C2267 * C1073 +
             C2263 * C2456 - C2268 * C2453) *
                C19689 +
            (C2261 * C315 - C2266 * C300 + C2262 * C1085 - C2267 * C1078 +
             C2263 * C2462 - C2268 * C2457) *
                C49950) *
               C33256 +
           ((C2261 * C1538 - C2266 * C1534 + C2262 * C3184 - C2267 * C3181 +
             C2263 * C4099 - C2268 * C4097) *
                C19689 +
            (C2261 * C1546 - C2266 * C1539 + C2262 * C3190 - C2267 * C3185 +
             C2263 * C4103 - C2268 * C4100) *
                C49950) *
               C50174) *
              C50013 * C1070 +
          (((C2266 * C1073 - C2261 * C1077 + C2267 * C2453 - C2262 * C2456 +
             C2268 * C3449 - C2263 * C3451) *
                C19689 +
            (C2266 * C1078 - C2261 * C1085 + C2267 * C2457 - C2262 * C2462 +
             C2268 * C3452 - C2263 * C3455) *
                C49950) *
               C33256 +
           ((C2266 * C3181 - C2261 * C3184 + C2267 * C4097 - C2262 * C4099 +
             C2268 * C20808 - C2263 * C20809) *
                C19689 +
            (C2266 * C3185 - C2261 * C3190 + C2267 * C4100 - C2262 * C4103 +
             C2268 * C20810 - C2263 * C20811) *
                C49950) *
               C50174) *
              C50013 * C1071) *
         C49978) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C19689 +
             (C50094 * C143 - C117 * C130) * C49950) *
                C38554 +
            ((C5415 - C5416) * C19689 + (C5417 - C5418) * C49950) * C38555 +
            C38763 * C38556 + C38768 * C38557) *
               C50013 * C997 +
           (((C117 * C281 - C50094 * C291) * C19689 +
             (C117 * C292 - C50094 * C311) * C49950) *
                C38554 +
            ((C5967 - C5968) * C19689 + (C5969 - C5970) * C49950) * C38555 +
            (C6385 * C19689 + C6386 * C49950) * C38556 +
            ((C6390 - C6389) * C19689 + (C6392 - C6391) * C49950) * C38557) *
               C50013 * C50049) *
              C999 +
          ((((C152 - C151) * C19689 + (C154 - C153) * C49950) * C38554 +
            (C5427 * C19689 + C5428 * C49950) * C38555 + C38766 * C38556 +
            C38767 * C38557) *
               C50013 * C997 +
           (((C323 - C322) * C19689 + (C325 - C324) * C49950) * C38554 +
            (C5979 * C19689 + C5980 * C49950) * C38555 +
            (C5981 * C19689 + C5982 * C49950) * C38556 +
            ((C5983 - C5984) * C19689 + (C5985 - C5986) * C49950) * C38557) *
               C50013 * C50049) *
              C1000 +
          (((C171 * C19689 + C172 * C49950) * C38554 +
            (C5765 * C19689 + C5766 * C49950) * C38555 +
            (C5767 * C19689 + C5768 * C49950) * C38556 +
            ((C5445 - C5446) * C19689 + (C5447 - C5448) * C49950) * C38557) *
               C50013 * C997 +
           ((C618 * C19689 + C619 * C49950) * C38554 +
            (C11121 * C19689 + C11122 * C49950) * C38555 +
            ((C5616 - C5615) * C19689 + (C5618 - C5617) * C49950) * C38556 +
            ((C117 * C5962 - C50094 * C5963) * C19689 +
             (C117 * C5964 - C50094 * C5965) * C49950) *
                C38557) *
               C50013 * C50049) *
              C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C19689 +
            (C50094 * C143 - C117 * C130) * C49950) *
               C38554 +
           ((C5415 - C5416) * C19689 + (C5417 - C5418) * C49950) * C38555 +
           C38763 * C38556 + C38768 * C38557) *
              C50013 * C1068 +
          (((C117 * C281 - C50094 * C291) * C19689 +
            (C117 * C292 - C50094 * C311) * C49950) *
               C38554 +
           ((C5967 - C5968) * C19689 + (C5969 - C5970) * C49950) * C38555 +
           (C6385 * C19689 + C6386 * C49950) * C38556 +
           ((C6390 - C6389) * C19689 + (C6392 - C6391) * C49950) * C38557) *
              C50013 * C1069 +
          (((C50094 * C299 - C117 * C285) * C19689 +
            (C50094 * C315 - C117 * C300) * C49950) *
               C38554 +
           ((C6884 - C6885) * C19689 + (C6886 - C6887) * C49950) * C38555 +
           ((C6888 - C6889) * C19689 + (C6890 - C6891) * C49950) * C38556 +
           ((C50094 * C4500 - C117 * C4496) * C19689 +
            (C50094 * C4508 - C117 * C4502) * C49950) *
               C38557) *
              C50013 * C1070 +
          (((C117 * C1073 - C50094 * C1077) * C19689 +
            (C117 * C1078 - C50094 * C1085) * C49950) *
               C38554 +
           ((C117 * C3181 - C50094 * C3184) * C19689 +
            (C117 * C3185 - C50094 * C3190) * C49950) *
               C38555 +
           ((C117 * C3603 - C50094 * C3605) * C19689 +
            (C117 * C3606 - C50094 * C3609) * C49950) *
               C38556 +
           ((C117 * C21074 - C50094 * C21075) * C19689 +
            (C117 * C21076 - C50094 * C21077) * C49950) *
               C38557) *
              C50013 * C1071) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[190] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
               C2263 * C299 - C2268 * C285) *
                  C19689 +
              (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
               C2263 * C315 - C2268 * C300) *
                  C49950) *
                 C33256 +
             ((C36179 - C36180 + C36181 - C36182 + C36183 - C36184) * C19689 +
              (C36185 - C36186 + C36187 - C36188 + C36189 - C36190) * C49950) *
                 C50174) *
                C1648 +
            (((C36180 - C36179 + C36182 - C36181 + C36184 - C36183) * C19689 +
              (C36186 - C36185 + C36188 - C36187 + C36190 - C36189) * C49950) *
                 C33256 +
             ((C36191 - C36192 + C36193 - C36194 + C36195 - C36196) * C19689 +
              (C36197 - C36198 + C36199 - C36200 + C36201 - C36202) * C49950) *
                 C50174) *
                C50077) *
               C50239 +
           ((((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
               C2268 * C1073 - C2263 * C1077) *
                  C19689 +
              (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
               C2268 * C1078 - C2263 * C1085) *
                  C49950) *
                 C33256 +
             ((C36689 - C36690 + C36691 - C36692 + C36693 - C36694) * C19689 +
              (C36695 - C36696 + C36697 - C36698 + C36699 - C36700) * C49950) *
                 C50174) *
                C1648 +
            (((C36690 - C36689 + C36692 - C36691 + C36694 - C36693) * C19689 +
              (C36696 - C36695 + C36698 - C36697 + C36700 - C36699) * C49950) *
                 C33256 +
             ((C37091 - C37092 + C37093 - C37094 + C37095 - C37096) * C19689 +
              (C37097 - C37098 + C37099 - C37100 + C37101 - C37102) * C49950) *
                 C50174) *
                C50077) *
               C50049) *
              C50231 +
          (((((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C19689 +
              (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C49950) *
                 C33256 +
             ((C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C19689 +
              (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49950) *
                 C50174) *
                C1648 +
            (((C2649 - C2648 + C2651 - C2650 + C2653 - C2652) * C19689 +
              (C2655 - C2654 + C2657 - C2656 + C2659 - C2658) * C49950) *
                 C33256 +
             ((C2660 - C2661 + C2662 - C2663 + C2664 - C2665) * C19689 +
              (C2666 - C2667 + C2668 - C2669 + C2670 - C2671) * C49950) *
                 C50174) *
                C50077) *
               C50239 +
           ((((C2467 - C2466 + C2469 - C2468 + C2471 - C2470) * C19689 +
              (C2473 - C2472 + C2475 - C2474 + C2477 - C2476) * C49950) *
                 C33256 +
             ((C3194 - C3195 + C3196 - C3197 + C3198 - C3199) * C19689 +
              (C3200 - C3201 + C3202 - C3203 + C3204 - C3205) * C49950) *
                 C50174) *
                C1648 +
            (((C3195 - C3194 + C3197 - C3196 + C3199 - C3198) * C19689 +
              (C3201 - C3200 + C3203 - C3202 + C3205 - C3204) * C49950) *
                 C33256 +
             ((C2266 * C1188 - C2261 * C1193 + C2267 * C2636 - C2262 * C2640 +
               C2268 * C3604 - C2263 * C3607) *
                  C19689 +
              (C2266 * C1194 - C2261 * C1200 + C2267 * C2641 - C2262 * C2645 +
               C2268 * C3608 - C2263 * C3610) *
                  C49950) *
                 C50174) *
                C50077) *
               C50049) *
              C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C50094 * C129 - C117 * C122) * C16929 +
              (C50094 * C143 - C117 * C130) * C16924 + (C151 - C152) * C16930 +
              (C153 - C154) * C16925 + C171 * C16931 + C172 * C16926) *
                 C33256 +
             ((C5415 - C5416) * C16929 + (C5417 - C5418) * C16924 +
              C5419 * C16930 + C5420 * C16925 + C5765 * C16931 +
              C5766 * C16926) *
                 C50174) *
                C1648 +
            (((C5416 - C5415) * C16929 + (C5418 - C5417) * C16924 +
              C5427 * C16930 + C5428 * C16925 + C730 * C16931 + C731 * C16926) *
                 C33256 +
             ((C5422 - C5421) * C16929 + (C5424 - C5423) * C16924 +
              C5429 * C16930 + C5430 * C16925 + C5443 * C16931 +
              C5444 * C16926) *
                 C50174) *
                C50077) *
               C50239 +
           ((((C117 * C281 - C50094 * C291) * C16929 +
              (C117 * C292 - C50094 * C311) * C16924 + (C322 - C323) * C16930 +
              (C324 - C325) * C16925 + C618 * C16931 + C619 * C16926) *
                 C33256 +
             ((C5967 - C5968) * C16929 + (C5969 - C5970) * C16924 +
              C5971 * C16930 + C5972 * C16925 + C11121 * C16931 +
              C11122 * C16926) *
                 C50174) *
                C1648 +
            (((C5968 - C5967) * C16929 + (C5970 - C5969) * C16924 +
              C5979 * C16930 + C5980 * C16925 + C11465 * C16931 +
              C11466 * C16926) *
                 C33256 +
             ((C5974 - C5973) * C16929 + (C5976 - C5975) * C16924 +
              C5981 * C16930 + C5982 * C16925 + (C5615 - C5616) * C16931 +
              (C5617 - C5618) * C16926) *
                 C50174) *
                C50077) *
               C50049) *
              C50231 +
          (((((C152 - C151) * C16929 + (C154 - C153) * C16924 +
              (C156 - C155) * C16930 + (C158 - C157) * C16925 + C175 * C16931 +
              C176 * C16926) *
                 C33256 +
             (C5427 * C16929 + C5428 * C16924 + C730 * C16930 + C731 * C16925 +
              C732 * C16931 + C733 * C16926) *
                 C50174) *
                C1648 +
            ((C5419 * C16929 + C5420 * C16924 + C5765 * C16930 +
              C5766 * C16925 + C11269 * C16931 + C11270 * C16926) *
                 C33256 +
             (C5425 * C16929 + C5426 * C16924 + C5767 * C16930 +
              C5768 * C16925 + (C507 - C508) * C16931 +
              (C509 - C510) * C16926) *
                 C50174) *
                C50077) *
               C50239 +
           ((((C323 - C322) * C16929 + (C325 - C324) * C16924 +
              (C327 - C326) * C16930 + (C329 - C328) * C16925 +
              (C331 - C330) * C16931 + (C333 - C332) * C16926) *
                 C33256 +
             (C5979 * C16929 + C5980 * C16924 + C11465 * C16930 +
              C11466 * C16925 + (C896 - C897) * C16931 +
              (C898 - C899) * C16926) *
                 C50174) *
                C1648 +
            ((C5971 * C16929 + C5972 * C16924 + C11121 * C16930 +
              C11122 * C16925 + (C897 - C896) * C16931 +
              (C899 - C898) * C16926) *
                 C33256 +
             (C5977 * C16929 + C5978 * C16924 + (C5616 - C5615) * C16930 +
              (C5618 - C5617) * C16925 +
              (C117 * C1190 - C50094 * C1197) * C16931 +
              (C117 * C1198 - C50094 * C1202) * C16926) *
                 C50174) *
                C50077) *
               C50049) *
              C49984)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C50094 * C129 - C117 * C122) * C19689 +
              (C50094 * C143 - C117 * C130) * C49950) *
                 C38554 +
             ((C5415 - C5416) * C19689 + (C5417 - C5418) * C49950) * C38555 +
             C38763 * C38556 + C38768 * C38557) *
                C1648 +
            (((C5416 - C5415) * C19689 + (C5418 - C5417) * C49950) * C38554 +
             ((C5422 - C5421) * C19689 + (C5424 - C5423) * C49950) * C38555 +
             C39973 * C38556 + C39976 * C38557) *
                C50077) *
               C50239 +
           ((((C117 * C281 - C50094 * C291) * C19689 +
              (C117 * C292 - C50094 * C311) * C49950) *
                 C38554 +
             ((C5967 - C5968) * C19689 + (C5969 - C5970) * C49950) * C38555 +
             C39365 * C38556 + C39368 * C38557) *
                C1648 +
            (((C5968 - C5967) * C19689 + (C5970 - C5969) * C49950) * C38554 +
             ((C5974 - C5973) * C19689 + (C5976 - C5975) * C49950) * C38555 +
             ((C6389 - C6390) * C19689 + (C6391 - C6392) * C49950) * C38556 +
             ((C39361 - C39362) * C19689 + (C39363 - C39364) * C49950) *
                 C38557) *
                C50077) *
               C50049) *
              C50231 +
          (((((C152 - C151) * C19689 + (C154 - C153) * C49950) * C38554 +
             (C5427 * C19689 + C5428 * C49950) * C38555 + C38766 * C38556 +
             C38767 * C38557) *
                C1648 +
            ((C5419 * C19689 + C5420 * C49950) * C38554 +
             (C5425 * C19689 + C5426 * C49950) * C38555 +
             (C5455 * C19689 + C5456 * C49950) * C38556 +
             ((C5439 - C5440) * C19689 + (C5441 - C5442) * C49950) * C38557) *
                C50077) *
               C50239 +
           ((((C323 - C322) * C19689 + (C325 - C324) * C49950) * C38554 +
             (C5979 * C19689 + C5980 * C49950) * C38555 +
             (C5981 * C19689 + C5982 * C49950) * C38556 +
             ((C5983 - C5984) * C19689 + (C5985 - C5986) * C49950) * C38557) *
                C1648 +
            ((C5971 * C19689 + C5972 * C49950) * C38554 +
             (C5977 * C19689 + C5978 * C49950) * C38555 +
             ((C5984 - C5983) * C19689 + (C5986 - C5985) * C49950) * C38556 +
             ((C117 * C6377 - C50094 * C6380) * C19689 +
              (C117 * C6381 - C50094 * C6383) * C49950) *
                 C38557) *
                C50077) *
               C50049) *
              C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[191] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
              C2263 * C299 - C2268 * C285) *
                 C19689 +
             (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
              C2263 * C315 - C2268 * C300) *
                 C49950) *
                C33256 +
            ((C36179 - C36180 + C36181 - C36182 + C36183 - C36184) * C19689 +
             (C36185 - C36186 + C36187 - C36188 + C36189 - C36190) * C49950) *
                C50174) *
               C50286 +
           (((C36180 - C36179 + C36182 - C36181 + C36184 - C36183) * C19689 +
             (C36186 - C36185 + C36188 - C36187 + C36190 - C36189) * C49950) *
                C33256 +
            ((C36191 - C36192 + C36193 - C36194 + C36195 - C36196) * C19689 +
             (C36197 - C36198 + C36199 - C36200 + C36201 - C36202) * C49950) *
                C50174) *
               C50287 +
           (((C36192 - C36191 + C36194 - C36193 + C36196 - C36195) * C19689 +
             (C36198 - C36197 + C36200 - C36199 + C36202 - C36201) * C49950) *
                C33256 +
            ((C37991 - C37992 + C37993 - C37994 + C37995 - C37996) * C19689 +
             (C37997 - C37998 + C37999 - C38000 + C38001 - C38002) * C49950) *
                C50174) *
               C2064) *
              C50239 +
          ((((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
              C2268 * C1073 - C2263 * C1077) *
                 C19689 +
             (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
              C2268 * C1078 - C2263 * C1085) *
                 C49950) *
                C33256 +
            ((C36689 - C36690 + C36691 - C36692 + C36693 - C36694) * C19689 +
             (C36695 - C36696 + C36697 - C36698 + C36699 - C36700) * C49950) *
                C50174) *
               C50286 +
           (((C36690 - C36689 + C36692 - C36691 + C36694 - C36693) * C19689 +
             (C36696 - C36695 + C36698 - C36697 + C36700 - C36699) * C49950) *
                C33256 +
            ((C37091 - C37092 + C37093 - C37094 + C37095 - C37096) * C19689 +
             (C37097 - C37098 + C37099 - C37100 + C37101 - C37102) * C49950) *
                C50174) *
               C50287 +
           (((C37092 - C37091 + C37094 - C37093 + C37096 - C37095) * C19689 +
             (C37098 - C37097 + C37100 - C37099 + C37102 - C37101) * C49950) *
                C33256 +
            ((C2266 * C4495 - C2261 * C4499 + C2267 * C4496 - C2262 * C4500 +
              C2268 * C21074 - C2263 * C21075) *
                 C19689 +
             (C2266 * C4501 - C2261 * C4507 + C2267 * C4502 - C2262 * C4508 +
              C2268 * C21076 - C2263 * C21077) *
                 C49950) *
                C50174) *
               C2064) *
              C50049) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C16929 +
             (C50094 * C143 - C117 * C130) * C16924 + (C151 - C152) * C16930 +
             (C153 - C154) * C16925 + C171 * C16931 + C172 * C16926) *
                C33256 +
            ((C5415 - C5416) * C16929 + (C5417 - C5418) * C16924 +
             C5419 * C16930 + C5420 * C16925 + C5765 * C16931 +
             C5766 * C16926) *
                C50174) *
               C50286 +
           (((C5416 - C5415) * C16929 + (C5418 - C5417) * C16924 +
             C5427 * C16930 + C5428 * C16925 + C730 * C16931 + C731 * C16926) *
                C33256 +
            ((C5422 - C5421) * C16929 + (C5424 - C5423) * C16924 +
             C5429 * C16930 + C5430 * C16925 + C5443 * C16931 +
             C5444 * C16926) *
                C50174) *
               C50287 +
           ((C5449 * C16929 + C5450 * C16924 + C5425 * C16930 + C5426 * C16925 +
             C5767 * C16931 + C5768 * C16926) *
                C33256 +
            ((C5432 - C5431) * C16929 + (C5434 - C5433) * C16924 +
             C5455 * C16930 + C5456 * C16925 + (C5445 - C5446) * C16931 +
             (C5447 - C5448) * C16926) *
                C50174) *
               C2064) *
              C50239 +
          ((((C117 * C281 - C50094 * C291) * C16929 +
             (C117 * C292 - C50094 * C311) * C16924 + (C322 - C323) * C16930 +
             (C324 - C325) * C16925 + C618 * C16931 + C619 * C16926) *
                C33256 +
            ((C5967 - C5968) * C16929 + (C5969 - C5970) * C16924 +
             C5971 * C16930 + C5972 * C16925 + C11121 * C16931 +
             C11122 * C16926) *
                C50174) *
               C50286 +
           (((C5968 - C5967) * C16929 + (C5970 - C5969) * C16924 +
             C5979 * C16930 + C5980 * C16925 + C11465 * C16931 +
             C11466 * C16926) *
                C33256 +
            ((C5974 - C5973) * C16929 + (C5976 - C5975) * C16924 +
             C5981 * C16930 + C5982 * C16925 + (C5615 - C5616) * C16931 +
             (C5617 - C5618) * C16926) *
                C50174) *
               C50287 +
           ((C6385 * C16929 + C6386 * C16924 + C5977 * C16930 + C5978 * C16925 +
             (C5616 - C5615) * C16931 + (C5618 - C5617) * C16926) *
                C33256 +
            ((C6390 - C6389) * C16929 + (C6392 - C6391) * C16924 +
             (C5984 - C5983) * C16930 + (C5986 - C5985) * C16925 +
             (C117 * C5962 - C50094 * C5963) * C16931 +
             (C117 * C5964 - C50094 * C5965) * C16926) *
                C50174) *
               C2064) *
              C50049) *
         C49978) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C19689 +
             (C50094 * C143 - C117 * C130) * C49950) *
                C38554 +
            ((C5415 - C5416) * C19689 + (C5417 - C5418) * C49950) * C38555 +
            C38763 * C38556 + C38768 * C38557) *
               C50286 +
           (((C5416 - C5415) * C19689 + (C5418 - C5417) * C49950) * C38554 +
            ((C5422 - C5421) * C19689 + (C5424 - C5423) * C49950) * C38555 +
            C39973 * C38556 + C39976 * C38557) *
               C50287 +
           (C38763 * C38554 + C38768 * C38555 +
            ((C7294 - C7295) * C19689 + (C7296 - C7297) * C49950) * C38556 +
            ((C39969 - C39970) * C19689 + (C39971 - C39972) * C49950) *
                C38557) *
               C2064) *
              C50239 +
          ((((C117 * C281 - C50094 * C291) * C19689 +
             (C117 * C292 - C50094 * C311) * C49950) *
                C38554 +
            ((C5967 - C5968) * C19689 + (C5969 - C5970) * C49950) * C38555 +
            C39365 * C38556 + C39368 * C38557) *
               C50286 +
           (((C5968 - C5967) * C19689 + (C5970 - C5969) * C49950) * C38554 +
            ((C5974 - C5973) * C19689 + (C5976 - C5975) * C49950) * C38555 +
            ((C6389 - C6390) * C19689 + (C6391 - C6392) * C49950) * C38556 +
            ((C39361 - C39362) * C19689 + (C39363 - C39364) * C49950) *
                C38557) *
               C50287 +
           (C39365 * C38554 + C39368 * C38555 +
            ((C39362 - C39361) * C19689 + (C39364 - C39363) * C49950) * C38556 +
            ((C117 * C23657 - C50094 * C23658) * C19689 +
             (C117 * C23659 - C50094 * C23660) * C49950) *
                C38557) *
               C2064) *
              C50049) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C50094 * C129 - C117 * C122) * C16929 +
                 (C50094 * C143 - C117 * C130) * C16924 +
                 (C151 - C152) * C16930 + (C153 - C154) * C16925 +
                 C171 * C16931 + C172 * C16926) *
                    C33256 +
                ((C5415 - C5416) * C16929 + (C5417 - C5418) * C16924 +
                 C5419 * C16930 + C5420 * C16925 + C5765 * C16931 +
                 C5766 * C16926) *
                    C50174) *
                   C1648 +
               (((C5416 - C5415) * C16929 + (C5418 - C5417) * C16924 +
                 C5427 * C16930 + C5428 * C16925 + C730 * C16931 +
                 C731 * C16926) *
                    C33256 +
                ((C5422 - C5421) * C16929 + (C5424 - C5423) * C16924 +
                 C5429 * C16930 + C5430 * C16925 + C5443 * C16931 +
                 C5444 * C16926) *
                    C50174) *
                   C50077) *
                  C49997 * C999 +
              ((((C152 - C151) * C16929 + (C154 - C153) * C16924 +
                 (C156 - C155) * C16930 + (C158 - C157) * C16925 +
                 C175 * C16931 + C176 * C16926) *
                    C33256 +
                (C5427 * C16929 + C5428 * C16924 + C730 * C16930 +
                 C731 * C16925 + C732 * C16931 + C733 * C16926) *
                    C50174) *
                   C1648 +
               ((C5419 * C16929 + C5420 * C16924 + C5765 * C16930 +
                 C5766 * C16925 + C11269 * C16931 + C11270 * C16926) *
                    C33256 +
                (C5425 * C16929 + C5426 * C16924 + C5767 * C16930 +
                 C5768 * C16925 + (C507 - C508) * C16931 +
                 (C509 - C510) * C16926) *
                    C50174) *
                   C50077) *
                  C49997 * C1000 +
              (((C171 * C16929 + C172 * C16924 + C173 * C16930 + C174 * C16925 +
                 (C164 - C163) * C16931 + (C166 - C165) * C16926) *
                    C33256 +
                (C5765 * C16929 + C5766 * C16924 + C11269 * C16930 +
                 C11270 * C16925 + (C734 - C735) * C16931 +
                 (C736 - C737) * C16926) *
                    C50174) *
                   C1648 +
               ((C730 * C16929 + C731 * C16924 + C732 * C16930 + C733 * C16925 +
                 (C735 - C734) * C16931 + (C737 - C736) * C16926) *
                    C33256 +
                (C5443 * C16929 + C5444 * C16924 + (C508 - C507) * C16930 +
                 (C510 - C509) * C16925 +
                 (C117 * C455 - C50094 * C474) * C16931 +
                 (C117 * C475 - C50094 * C485) * C16926) *
                    C50174) *
                   C50077) *
                  C49997 * C1001) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C50094 * C129 - C117 * C122) * C16929 +
                 (C50094 * C143 - C117 * C130) * C16924 +
                 (C151 - C152) * C16930 + (C153 - C154) * C16925 +
                 C171 * C16931 + C172 * C16926) *
                    C33256 +
                ((C5415 - C5416) * C16929 + (C5417 - C5418) * C16924 +
                 C5419 * C16930 + C5420 * C16925 + C5765 * C16931 +
                 C5766 * C16926) *
                    C50174) *
                   C1648 +
               (((C5416 - C5415) * C16929 + (C5418 - C5417) * C16924 +
                 C5427 * C16930 + C5428 * C16925 + C730 * C16931 +
                 C731 * C16926) *
                    C33256 +
                ((C5422 - C5421) * C16929 + (C5424 - C5423) * C16924 +
                 C5429 * C16930 + C5430 * C16925 + C5443 * C16931 +
                 C5444 * C16926) *
                    C50174) *
                   C50077) *
                  C276 +
              ((((C117 * C281 - C50094 * C291) * C16929 +
                 (C117 * C292 - C50094 * C311) * C16924 +
                 (C322 - C323) * C16930 + (C324 - C325) * C16925 +
                 C618 * C16931 + C619 * C16926) *
                    C33256 +
                ((C5967 - C5968) * C16929 + (C5969 - C5970) * C16924 +
                 C5971 * C16930 + C5972 * C16925 + C11121 * C16931 +
                 C11122 * C16926) *
                    C50174) *
                   C1648 +
               (((C5968 - C5967) * C16929 + (C5970 - C5969) * C16924 +
                 C5979 * C16930 + C5980 * C16925 + C11465 * C16931 +
                 C11466 * C16926) *
                    C33256 +
                ((C5974 - C5973) * C16929 + (C5976 - C5975) * C16924 +
                 C5981 * C16930 + C5982 * C16925 + (C5615 - C5616) * C16931 +
                 (C5617 - C5618) * C16926) *
                    C50174) *
                   C50077) *
                  C277 +
              ((((C50094 * C299 - C117 * C285) * C16929 +
                 (C50094 * C315 - C117 * C300) * C16924 +
                 (C334 - C335) * C16930 + (C336 - C337) * C16925 +
                 (C338 - C339) * C16931 + (C340 - C341) * C16926) *
                    C33256 +
                ((C6884 - C6885) * C16929 + (C6886 - C6887) * C16924 +
                 (C5249 - C5250) * C16930 + (C5251 - C5252) * C16925 +
                 (C10825 - C10826) * C16931 + (C10827 - C10828) * C16926) *
                    C50174) *
                   C1648 +
               (((C6885 - C6884) * C16929 + (C6887 - C6886) * C16924 +
                 (C5250 - C5249) * C16930 + (C5252 - C5251) * C16925 +
                 (C10826 - C10825) * C16931 + (C10828 - C10827) * C16926) *
                    C33256 +
                ((C6889 - C6888) * C16929 + (C6891 - C6890) * C16924 +
                 (C5254 - C5253) * C16930 + (C5256 - C5255) * C16925 +
                 (C117 * C2637 - C50094 * C2642) * C16931 +
                 (C117 * C2643 - C50094 * C2646) * C16926) *
                    C50174) *
                   C50077) *
                  C278) *
             C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C16929 +
            (C50094 * C143 - C117 * C130) * C16924 + (C151 - C152) * C16930 +
            (C153 - C154) * C16925 + C171 * C16931 + C172 * C16926) *
               C33256 +
           ((C5415 - C5416) * C16929 + (C5417 - C5418) * C16924 +
            C5419 * C16930 + C5420 * C16925 + C5765 * C16931 + C5766 * C16926) *
               C50174) *
              C1814 +
          (((C5416 - C5415) * C16929 + (C5418 - C5417) * C16924 +
            C5427 * C16930 + C5428 * C16925 + C730 * C16931 + C731 * C16926) *
               C33256 +
           ((C5422 - C5421) * C16929 + (C5424 - C5423) * C16924 +
            C5429 * C16930 + C5430 * C16925 + C5443 * C16931 + C5444 * C16926) *
               C50174) *
              C1815 +
          ((C5449 * C16929 + C5450 * C16924 + C5425 * C16930 + C5426 * C16925 +
            C5767 * C16931 + C5768 * C16926) *
               C33256 +
           ((C5432 - C5431) * C16929 + (C5434 - C5433) * C16924 +
            C5455 * C16930 + C5456 * C16925 + (C5445 - C5446) * C16931 +
            (C5447 - C5448) * C16926) *
               C50174) *
              C1816 +
          ((C7290 * C16929 + C7291 * C16924 + C5453 * C16930 + C5454 * C16925 +
            (C5446 - C5445) * C16931 + (C5448 - C5447) * C16926) *
               C33256 +
           ((C7295 - C7294) * C16929 + (C7297 - C7296) * C16924 +
            (C5440 - C5439) * C16930 + (C5442 - C5441) * C16925 +
            (C117 * C5404 - C50094 * C5409) * C16931 +
            (C117 * C5410 - C50094 * C5413) * C16926) *
               C50174) *
              C1817) *
         C49997 * C49978) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
              C2263 * C299 - C2268 * C285) *
                 C19689 +
             (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
              C2263 * C315 - C2268 * C300) *
                 C49950) *
                C33256 +
            ((C36179 - C36180 + C36181 - C36182 + C36183 - C36184) * C19689 +
             (C36185 - C36186 + C36187 - C36188 + C36189 - C36190) * C49950) *
                C50174) *
               C1648 +
           (((C36180 - C36179 + C36182 - C36181 + C36184 - C36183) * C19689 +
             (C36186 - C36185 + C36188 - C36187 + C36190 - C36189) * C49950) *
                C33256 +
            ((C36191 - C36192 + C36193 - C36194 + C36195 - C36196) * C19689 +
             (C36197 - C36198 + C36199 - C36200 + C36201 - C36202) * C49950) *
                C50174) *
               C50077) *
              C49997 * C999 +
          ((((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C19689 +
             (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C49950) *
                C33256 +
            ((C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C19689 +
             (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49950) *
                C50174) *
               C1648 +
           (((C2649 - C2648 + C2651 - C2650 + C2653 - C2652) * C19689 +
             (C2655 - C2654 + C2657 - C2656 + C2659 - C2658) * C49950) *
                C33256 +
            ((C2660 - C2661 + C2662 - C2663 + C2664 - C2665) * C19689 +
             (C2666 - C2667 + C2668 - C2669 + C2670 - C2671) * C49950) *
                C50174) *
               C50077) *
              C49997 * C1000 +
          ((((C2285 - C2284 + C2287 - C2286 + C2289 - C2288) * C19689 +
             (C2291 - C2290 + C2293 - C2292 + C2295 - C2294) * C49950) *
                C33256 +
            ((C2976 - C2977 + C2978 - C2979 + C2980 - C2981) * C19689 +
             (C2982 - C2983 + C2984 - C2985 + C2986 - C2987) * C49950) *
                C50174) *
               C1648 +
           (((C2977 - C2976 + C2979 - C2978 + C2981 - C2980) * C19689 +
             (C2983 - C2982 + C2985 - C2984 + C2987 - C2986) * C49950) *
                C33256 +
            ((C2266 * C452 - C2261 * C468 + C2267 * C1189 - C2262 * C1195 +
              C2268 * C2637 - C2263 * C2642) *
                 C19689 +
             (C2266 * C469 - C2261 * C482 + C2267 * C1196 - C2262 * C1201 +
              C2268 * C2643 - C2263 * C2646) *
                 C49950) *
                C50174) *
               C50077) *
              C49997 * C1001)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
              C2263 * C299 - C2268 * C285) *
                 C19689 +
             (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
              C2263 * C315 - C2268 * C300) *
                 C49950) *
                C33256 +
            ((C36179 - C36180 + C36181 - C36182 + C36183 - C36184) * C19689 +
             (C36185 - C36186 + C36187 - C36188 + C36189 - C36190) * C49950) *
                C50174) *
               C1648 +
           (((C36180 - C36179 + C36182 - C36181 + C36184 - C36183) * C19689 +
             (C36186 - C36185 + C36188 - C36187 + C36190 - C36189) * C49950) *
                C33256 +
            ((C36191 - C36192 + C36193 - C36194 + C36195 - C36196) * C19689 +
             (C36197 - C36198 + C36199 - C36200 + C36201 - C36202) * C49950) *
                C50174) *
               C50077) *
              C276 +
          ((((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
              C2268 * C1073 - C2263 * C1077) *
                 C19689 +
             (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
              C2268 * C1078 - C2263 * C1085) *
                 C49950) *
                C33256 +
            ((C36689 - C36690 + C36691 - C36692 + C36693 - C36694) * C19689 +
             (C36695 - C36696 + C36697 - C36698 + C36699 - C36700) * C49950) *
                C50174) *
               C1648 +
           (((C36690 - C36689 + C36692 - C36691 + C36694 - C36693) * C19689 +
             (C36696 - C36695 + C36698 - C36697 + C36700 - C36699) * C49950) *
                C33256 +
            ((C37091 - C37092 + C37093 - C37094 + C37095 - C37096) * C19689 +
             (C37097 - C37098 + C37099 - C37100 + C37101 - C37102) * C49950) *
                C50174) *
               C50077) *
              C277 +
          ((((C2261 * C299 - C2266 * C285 + C2262 * C1077 - C2267 * C1073 +
              C2263 * C2456 - C2268 * C2453) *
                 C19689 +
             (C2261 * C315 - C2266 * C300 + C2262 * C1085 - C2267 * C1078 +
              C2263 * C2462 - C2268 * C2457) *
                 C49950) *
                C33256 +
            ((C37589 - C37590 + C37591 - C37592 + C37593 - C37594) * C19689 +
             (C37595 - C37596 + C37597 - C37598 + C37599 - C37600) * C49950) *
                C50174) *
               C1648 +
           (((C37590 - C37589 + C37592 - C37591 + C37594 - C37593) * C19689 +
             (C37596 - C37595 + C37598 - C37597 + C37600 - C37599) * C49950) *
                C33256 +
            ((C2266 * C2635 - C2261 * C2638 + C2267 * C3603 - C2262 * C3605 +
              C2268 * C20478 - C2263 * C20479) *
                 C19689 +
             (C2266 * C2639 - C2261 * C2644 + C2267 * C3606 - C2262 * C3609 +
              C2268 * C20480 - C2263 * C20481) *
                 C49950) *
                C50174) *
               C50077) *
              C278) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
             C2263 * C299 - C2268 * C285) *
                C19689 +
            (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
             C2263 * C315 - C2268 * C300) *
                C49950) *
               C33256 +
           ((C36179 - C36180 + C36181 - C36182 + C36183 - C36184) * C19689 +
            (C36185 - C36186 + C36187 - C36188 + C36189 - C36190) * C49950) *
               C50174) *
              C1814 +
          (((C36180 - C36179 + C36182 - C36181 + C36184 - C36183) * C19689 +
            (C36186 - C36185 + C36188 - C36187 + C36190 - C36189) * C49950) *
               C33256 +
           ((C36191 - C36192 + C36193 - C36194 + C36195 - C36196) * C19689 +
            (C36197 - C36198 + C36199 - C36200 + C36201 - C36202) * C49950) *
               C50174) *
              C1815 +
          (((C36192 - C36191 + C36194 - C36193 + C36196 - C36195) * C19689 +
            (C36198 - C36197 + C36200 - C36199 + C36202 - C36201) * C49950) *
               C33256 +
           ((C37991 - C37992 + C37993 - C37994 + C37995 - C37996) * C19689 +
            (C37997 - C37998 + C37999 - C38000 + C38001 - C38002) * C49950) *
               C50174) *
              C1816 +
          (((C37992 - C37991 + C37994 - C37993 + C37996 - C37995) * C19689 +
            (C37998 - C37997 + C38000 - C37999 + C38002 - C38001) * C49950) *
               C33256 +
           ((C2266 * C5402 - C2261 * C5405 + C2267 * C6376 - C2262 * C6378 +
             C2268 * C22744 - C2263 * C22745) *
                C19689 +
            (C2266 * C5406 - C2261 * C5411 + C2267 * C6379 - C2262 * C6382 +
             C2268 * C22746 - C2263 * C22747) *
                C49950) *
               C50174) *
              C1817) *
         C49997 * C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C19689 +
             (C50094 * C143 - C117 * C130) * C49950) *
                C38554 +
            ((C5415 - C5416) * C19689 + (C5417 - C5418) * C49950) * C38555 +
            C38763 * C38556 + C38768 * C38557) *
               C1648 +
           (((C5416 - C5415) * C19689 + (C5418 - C5417) * C49950) * C38554 +
            ((C5422 - C5421) * C19689 + (C5424 - C5423) * C49950) * C38555 +
            (C7290 * C19689 + C7291 * C49950) * C38556 +
            ((C7295 - C7294) * C19689 + (C7297 - C7296) * C49950) * C38557) *
               C50077) *
              C49997 * C999 +
          ((((C152 - C151) * C19689 + (C154 - C153) * C49950) * C38554 +
            (C5427 * C19689 + C5428 * C49950) * C38555 + C38766 * C38556 +
            C38767 * C38557) *
               C1648 +
           ((C5419 * C19689 + C5420 * C49950) * C38554 +
            (C5425 * C19689 + C5426 * C49950) * C38555 +
            (C5455 * C19689 + C5456 * C49950) * C38556 +
            ((C5439 - C5440) * C19689 + (C5441 - C5442) * C49950) * C38557) *
               C50077) *
              C49997 * C1000 +
          (((C171 * C19689 + C172 * C49950) * C38554 +
            (C5765 * C19689 + C5766 * C49950) * C38555 +
            (C5767 * C19689 + C5768 * C49950) * C38556 +
            ((C5445 - C5446) * C19689 + (C5447 - C5448) * C49950) * C38557) *
               C1648 +
           ((C730 * C19689 + C731 * C49950) * C38554 +
            (C5443 * C19689 + C5444 * C49950) * C38555 +
            ((C5446 - C5445) * C19689 + (C5448 - C5447) * C49950) * C38556 +
            ((C117 * C5404 - C50094 * C5409) * C19689 +
             (C117 * C5410 - C50094 * C5413) * C49950) *
                C38557) *
               C50077) *
              C49997 * C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C19689 +
             (C50094 * C143 - C117 * C130) * C49950) *
                C38554 +
            ((C5415 - C5416) * C19689 + (C5417 - C5418) * C49950) * C38555 +
            C38763 * C38556 + C38768 * C38557) *
               C1648 +
           (((C5416 - C5415) * C19689 + (C5418 - C5417) * C49950) * C38554 +
            ((C5422 - C5421) * C19689 + (C5424 - C5423) * C49950) * C38555 +
            (C7290 * C19689 + C7291 * C49950) * C38556 +
            ((C7295 - C7294) * C19689 + (C7297 - C7296) * C49950) * C38557) *
               C50077) *
              C276 +
          ((((C117 * C281 - C50094 * C291) * C19689 +
             (C117 * C292 - C50094 * C311) * C49950) *
                C38554 +
            ((C5967 - C5968) * C19689 + (C5969 - C5970) * C49950) * C38555 +
            C39365 * C38556 + C39368 * C38557) *
               C1648 +
           (((C5968 - C5967) * C19689 + (C5970 - C5969) * C49950) * C38554 +
            ((C5974 - C5973) * C19689 + (C5976 - C5975) * C49950) * C38555 +
            ((C6389 - C6390) * C19689 + (C6391 - C6392) * C49950) * C38556 +
            ((C39361 - C39362) * C19689 + (C39363 - C39364) * C49950) *
                C38557) *
               C50077) *
              C277 +
          ((((C50094 * C299 - C117 * C285) * C19689 +
             (C50094 * C315 - C117 * C300) * C49950) *
                C38554 +
            ((C6884 - C6885) * C19689 + (C6886 - C6887) * C49950) * C38555 +
            ((C6888 - C6889) * C19689 + (C6890 - C6891) * C49950) * C38556 +
            ((C39695 - C39696) * C19689 + (C39697 - C39698) * C49950) *
                C38557) *
               C1648 +
           (((C6885 - C6884) * C19689 + (C6887 - C6886) * C49950) * C38554 +
            ((C6889 - C6888) * C19689 + (C6891 - C6890) * C49950) * C38555 +
            ((C39696 - C39695) * C19689 + (C39698 - C39697) * C49950) * C38556 +
            ((C117 * C22744 - C50094 * C22745) * C19689 +
             (C117 * C22746 - C50094 * C22747) * C49950) *
                C38557) *
               C50077) *
              C278) *
         C49978) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C19689 +
            (C50094 * C143 - C117 * C130) * C49950) *
               C38554 +
           ((C5415 - C5416) * C19689 + (C5417 - C5418) * C49950) * C38555 +
           C38763 * C38556 + C38768 * C38557) *
              C1814 +
          (((C5416 - C5415) * C19689 + (C5418 - C5417) * C49950) * C38554 +
           ((C5422 - C5421) * C19689 + (C5424 - C5423) * C49950) * C38555 +
           C39973 * C38556 + C39976 * C38557) *
              C1815 +
          (C38763 * C38554 + C38768 * C38555 +
           ((C7294 - C7295) * C19689 + (C7296 - C7297) * C49950) * C38556 +
           ((C39969 - C39970) * C19689 + (C39971 - C39972) * C49950) * C38557) *
              C1816 +
          (C39973 * C38554 + C39976 * C38555 +
           ((C39970 - C39969) * C19689 + (C39972 - C39971) * C49950) * C38556 +
           ((C117 * C39960 - C50094 * C39961) * C19689 +
            (C117 * C39962 - C50094 * C39963) * C49950) *
               C38557) *
              C1817) *
         C49997 * C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[193] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
              C2263 * C299 - C2268 * C285) *
                 C19689 +
             (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
              C2263 * C315 - C2268 * C300) *
                 C49950) *
                C33256 +
            ((C36179 - C36180 + C36181 - C36182 + C36183 - C36184) * C19689 +
             (C36185 - C36186 + C36187 - C36188 + C36189 - C36190) * C49950) *
                C50174) *
               C50286 +
           (((C36180 - C36179 + C36182 - C36181 + C36184 - C36183) * C19689 +
             (C36186 - C36185 + C36188 - C36187 + C36190 - C36189) * C49950) *
                C33256 +
            ((C36191 - C36192 + C36193 - C36194 + C36195 - C36196) * C19689 +
             (C36197 - C36198 + C36199 - C36200 + C36201 - C36202) * C49950) *
                C50174) *
               C50287 +
           (((C36192 - C36191 + C36194 - C36193 + C36196 - C36195) * C19689 +
             (C36198 - C36197 + C36200 - C36199 + C36202 - C36201) * C49950) *
                C33256 +
            ((C37991 - C37992 + C37993 - C37994 + C37995 - C37996) * C19689 +
             (C37997 - C37998 + C37999 - C38000 + C38001 - C38002) * C49950) *
                C50174) *
               C2064) *
              C49997 * C50231 +
          ((((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C19689 +
             (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C49950) *
                C33256 +
            ((C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C19689 +
             (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49950) *
                C50174) *
               C50286 +
           (((C2649 - C2648 + C2651 - C2650 + C2653 - C2652) * C19689 +
             (C2655 - C2654 + C2657 - C2656 + C2659 - C2658) * C49950) *
                C33256 +
            ((C2660 - C2661 + C2662 - C2663 + C2664 - C2665) * C19689 +
             (C2666 - C2667 + C2668 - C2669 + C2670 - C2671) * C49950) *
                C50174) *
               C50287 +
           (((C2661 - C2660 + C2663 - C2662 + C2665 - C2664) * C19689 +
             (C2667 - C2666 + C2669 - C2668 + C2671 - C2670) * C49950) *
                C33256 +
            ((C2266 * C1819 - C2261 * C1824 + C2267 * C4497 - C2262 * C4503 +
              C2268 * C4498 - C2263 * C4504) *
                 C19689 +
             (C2266 * C1825 - C2261 * C1831 + C2267 * C4505 - C2262 * C4509 +
              C2268 * C4506 - C2263 * C4510) *
                 C49950) *
                C50174) *
               C2064) *
              C49997 * C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C16929 +
             (C50094 * C143 - C117 * C130) * C16924 + (C151 - C152) * C16930 +
             (C153 - C154) * C16925 + C171 * C16931 + C172 * C16926) *
                C33256 +
            ((C5415 - C5416) * C16929 + (C5417 - C5418) * C16924 +
             C5419 * C16930 + C5420 * C16925 + C5765 * C16931 +
             C5766 * C16926) *
                C50174) *
               C50286 +
           (((C5416 - C5415) * C16929 + (C5418 - C5417) * C16924 +
             C5427 * C16930 + C5428 * C16925 + C730 * C16931 + C731 * C16926) *
                C33256 +
            ((C5422 - C5421) * C16929 + (C5424 - C5423) * C16924 +
             C5429 * C16930 + C5430 * C16925 + C5443 * C16931 +
             C5444 * C16926) *
                C50174) *
               C50287 +
           ((C5449 * C16929 + C5450 * C16924 + C5425 * C16930 + C5426 * C16925 +
             C5767 * C16931 + C5768 * C16926) *
                C33256 +
            ((C5432 - C5431) * C16929 + (C5434 - C5433) * C16924 +
             C5455 * C16930 + C5456 * C16925 + (C5445 - C5446) * C16931 +
             (C5447 - C5448) * C16926) *
                C50174) *
               C2064) *
              C49997 * C50231 +
          ((((C152 - C151) * C16929 + (C154 - C153) * C16924 +
             (C156 - C155) * C16930 + (C158 - C157) * C16925 + C175 * C16931 +
             C176 * C16926) *
                C33256 +
            (C5427 * C16929 + C5428 * C16924 + C730 * C16930 + C731 * C16925 +
             C732 * C16931 + C733 * C16926) *
                C50174) *
               C50286 +
           ((C5419 * C16929 + C5420 * C16924 + C5765 * C16930 + C5766 * C16925 +
             C11269 * C16931 + C11270 * C16926) *
                C33256 +
            (C5425 * C16929 + C5426 * C16924 + C5767 * C16930 + C5768 * C16925 +
             (C507 - C508) * C16931 + (C509 - C510) * C16926) *
                C50174) *
               C50287 +
           ((C5429 * C16929 + C5430 * C16924 + C5443 * C16930 + C5444 * C16925 +
             (C508 - C507) * C16931 + (C510 - C509) * C16926) *
                C33256 +
            (C5453 * C16929 + C5454 * C16924 + (C5446 - C5445) * C16930 +
             (C5448 - C5447) * C16925 +
             (C117 * C1821 - C50094 * C1828) * C16931 +
             (C117 * C1829 - C50094 * C1833) * C16926) *
                C50174) *
               C2064) *
              C49997 * C49984)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C19689 +
             (C50094 * C143 - C117 * C130) * C49950) *
                C38554 +
            ((C5415 - C5416) * C19689 + (C5417 - C5418) * C49950) * C38555 +
            C38763 * C38556 + C38768 * C38557) *
               C50286 +
           (((C5416 - C5415) * C19689 + (C5418 - C5417) * C49950) * C38554 +
            ((C5422 - C5421) * C19689 + (C5424 - C5423) * C49950) * C38555 +
            C39973 * C38556 + C39976 * C38557) *
               C50287 +
           (C38763 * C38554 + C38768 * C38555 +
            ((C7294 - C7295) * C19689 + (C7296 - C7297) * C49950) * C38556 +
            ((C39969 - C39970) * C19689 + (C39971 - C39972) * C49950) *
                C38557) *
               C2064) *
              C49997 * C50231 +
          ((((C152 - C151) * C19689 + (C154 - C153) * C49950) * C38554 +
            (C5427 * C19689 + C5428 * C49950) * C38555 + C38766 * C38556 +
            C38767 * C38557) *
               C50286 +
           ((C5419 * C19689 + C5420 * C49950) * C38554 +
            (C5425 * C19689 + C5426 * C49950) * C38555 +
            (C5455 * C19689 + C5456 * C49950) * C38556 +
            ((C5439 - C5440) * C19689 + (C5441 - C5442) * C49950) * C38557) *
               C50287 +
           (C38766 * C38554 + C38767 * C38555 +
            ((C5440 - C5439) * C19689 + (C5442 - C5441) * C49950) * C38556 +
            ((C117 * C7282 - C50094 * C7285) * C19689 +
             (C117 * C7286 - C50094 * C7288) * C49950) *
                C38557) *
               C2064) *
              C49997 * C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[194] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C16929 +
             (C50094 * C143 - C117 * C130) * C16924 + (C151 - C152) * C16930 +
             (C153 - C154) * C16925 + C171 * C16931 + C172 * C16926) *
                C33256 +
            ((C5415 - C5416) * C16929 + (C5417 - C5418) * C16924 +
             C5419 * C16930 + C5420 * C16925 + C5765 * C16931 +
             C5766 * C16926) *
                C50174) *
               C1648 +
           (((C5416 - C5415) * C16929 + (C5418 - C5417) * C16924 +
             C5427 * C16930 + C5428 * C16925 + C730 * C16931 + C731 * C16926) *
                C33256 +
            ((C5422 - C5421) * C16929 + (C5424 - C5423) * C16924 +
             C5429 * C16930 + C5430 * C16925 + C5443 * C16931 +
             C5444 * C16926) *
                C50174) *
               C50077) *
              C276 +
          ((((C117 * C281 - C50094 * C291) * C16929 +
             (C117 * C292 - C50094 * C311) * C16924 + (C322 - C323) * C16930 +
             (C324 - C325) * C16925 + C618 * C16931 + C619 * C16926) *
                C33256 +
            ((C5967 - C5968) * C16929 + (C5969 - C5970) * C16924 +
             C5971 * C16930 + C5972 * C16925 + C11121 * C16931 +
             C11122 * C16926) *
                C50174) *
               C1648 +
           (((C5968 - C5967) * C16929 + (C5970 - C5969) * C16924 +
             C5979 * C16930 + C5980 * C16925 + C11465 * C16931 +
             C11466 * C16926) *
                C33256 +
            ((C5974 - C5973) * C16929 + (C5976 - C5975) * C16924 +
             C5981 * C16930 + C5982 * C16925 + (C5615 - C5616) * C16931 +
             (C5617 - C5618) * C16926) *
                C50174) *
               C50077) *
              C277 +
          ((((C50094 * C299 - C117 * C285) * C16929 +
             (C50094 * C315 - C117 * C300) * C16924 + (C334 - C335) * C16930 +
             (C336 - C337) * C16925 + (C338 - C339) * C16931 +
             (C340 - C341) * C16926) *
                C33256 +
            ((C6884 - C6885) * C16929 + (C6886 - C6887) * C16924 +
             (C5249 - C5250) * C16930 + (C5251 - C5252) * C16925 +
             (C10825 - C10826) * C16931 + (C10827 - C10828) * C16926) *
                C50174) *
               C1648 +
           (((C6885 - C6884) * C16929 + (C6887 - C6886) * C16924 +
             (C5250 - C5249) * C16930 + (C5252 - C5251) * C16925 +
             (C10826 - C10825) * C16931 + (C10828 - C10827) * C16926) *
                C33256 +
            ((C6889 - C6888) * C16929 + (C6891 - C6890) * C16924 +
             (C5254 - C5253) * C16930 + (C5256 - C5255) * C16925 +
             (C117 * C2637 - C50094 * C2642) * C16931 +
             (C117 * C2643 - C50094 * C2646) * C16926) *
                C50174) *
               C50077) *
              C278) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C16929 +
             (C50094 * C143 - C117 * C130) * C16924 + (C151 - C152) * C16930 +
             (C153 - C154) * C16925 + C171 * C16931 + C172 * C16926) *
                C33256 +
            ((C5415 - C5416) * C16929 + (C5417 - C5418) * C16924 +
             C5419 * C16930 + C5420 * C16925 + C5765 * C16931 +
             C5766 * C16926) *
                C50174) *
               C1648 +
           (((C5416 - C5415) * C16929 + (C5418 - C5417) * C16924 +
             C5427 * C16930 + C5428 * C16925 + C730 * C16931 + C731 * C16926) *
                C33256 +
            ((C5422 - C5421) * C16929 + (C5424 - C5423) * C16924 +
             C5429 * C16930 + C5430 * C16925 + C5443 * C16931 +
             C5444 * C16926) *
                C50174) *
               C50077) *
              C49997 * C999 +
          ((((C152 - C151) * C16929 + (C154 - C153) * C16924 +
             (C156 - C155) * C16930 + (C158 - C157) * C16925 + C175 * C16931 +
             C176 * C16926) *
                C33256 +
            (C5427 * C16929 + C5428 * C16924 + C730 * C16930 + C731 * C16925 +
             C732 * C16931 + C733 * C16926) *
                C50174) *
               C1648 +
           ((C5419 * C16929 + C5420 * C16924 + C5765 * C16930 + C5766 * C16925 +
             C11269 * C16931 + C11270 * C16926) *
                C33256 +
            (C5425 * C16929 + C5426 * C16924 + C5767 * C16930 + C5768 * C16925 +
             (C507 - C508) * C16931 + (C509 - C510) * C16926) *
                C50174) *
               C50077) *
              C49997 * C1000 +
          (((C171 * C16929 + C172 * C16924 + C173 * C16930 + C174 * C16925 +
             (C164 - C163) * C16931 + (C166 - C165) * C16926) *
                C33256 +
            (C5765 * C16929 + C5766 * C16924 + C11269 * C16930 +
             C11270 * C16925 + (C734 - C735) * C16931 +
             (C736 - C737) * C16926) *
                C50174) *
               C1648 +
           ((C730 * C16929 + C731 * C16924 + C732 * C16930 + C733 * C16925 +
             (C735 - C734) * C16931 + (C737 - C736) * C16926) *
                C33256 +
            (C5443 * C16929 + C5444 * C16924 + (C508 - C507) * C16930 +
             (C510 - C509) * C16925 + (C117 * C455 - C50094 * C474) * C16931 +
             (C117 * C475 - C50094 * C485) * C16926) *
                C50174) *
               C50077) *
              C49997 * C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
              C2263 * C299 - C2268 * C285) *
                 C19689 +
             (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
              C2263 * C315 - C2268 * C300) *
                 C49950) *
                C33256 +
            ((C36179 - C36180 + C36181 - C36182 + C36183 - C36184) * C19689 +
             (C36185 - C36186 + C36187 - C36188 + C36189 - C36190) * C49950) *
                C50174) *
               C1648 +
           (((C36180 - C36179 + C36182 - C36181 + C36184 - C36183) * C19689 +
             (C36186 - C36185 + C36188 - C36187 + C36190 - C36189) * C49950) *
                C33256 +
            ((C36191 - C36192 + C36193 - C36194 + C36195 - C36196) * C19689 +
             (C36197 - C36198 + C36199 - C36200 + C36201 - C36202) * C49950) *
                C50174) *
               C50077) *
              C49997 * C999 +
          ((((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C19689 +
             (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C49950) *
                C33256 +
            ((C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C19689 +
             (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49950) *
                C50174) *
               C1648 +
           (((C2649 - C2648 + C2651 - C2650 + C2653 - C2652) * C19689 +
             (C2655 - C2654 + C2657 - C2656 + C2659 - C2658) * C49950) *
                C33256 +
            ((C2660 - C2661 + C2662 - C2663 + C2664 - C2665) * C19689 +
             (C2666 - C2667 + C2668 - C2669 + C2670 - C2671) * C49950) *
                C50174) *
               C50077) *
              C49997 * C1000 +
          ((((C2285 - C2284 + C2287 - C2286 + C2289 - C2288) * C19689 +
             (C2291 - C2290 + C2293 - C2292 + C2295 - C2294) * C49950) *
                C33256 +
            ((C2976 - C2977 + C2978 - C2979 + C2980 - C2981) * C19689 +
             (C2982 - C2983 + C2984 - C2985 + C2986 - C2987) * C49950) *
                C50174) *
               C1648 +
           (((C2977 - C2976 + C2979 - C2978 + C2981 - C2980) * C19689 +
             (C2983 - C2982 + C2985 - C2984 + C2987 - C2986) * C49950) *
                C33256 +
            ((C2266 * C452 - C2261 * C468 + C2267 * C1189 - C2262 * C1195 +
              C2268 * C2637 - C2263 * C2642) *
                 C19689 +
             (C2266 * C469 - C2261 * C482 + C2267 * C1196 - C2262 * C1201 +
              C2268 * C2643 - C2263 * C2646) *
                 C49950) *
                C50174) *
               C50077) *
              C49997 * C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
              C2263 * C299 - C2268 * C285) *
                 C19689 +
             (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
              C2263 * C315 - C2268 * C300) *
                 C49950) *
                C33256 +
            ((C36179 - C36180 + C36181 - C36182 + C36183 - C36184) * C19689 +
             (C36185 - C36186 + C36187 - C36188 + C36189 - C36190) * C49950) *
                C50174) *
               C1648 +
           (((C36180 - C36179 + C36182 - C36181 + C36184 - C36183) * C19689 +
             (C36186 - C36185 + C36188 - C36187 + C36190 - C36189) * C49950) *
                C33256 +
            ((C36191 - C36192 + C36193 - C36194 + C36195 - C36196) * C19689 +
             (C36197 - C36198 + C36199 - C36200 + C36201 - C36202) * C49950) *
                C50174) *
               C50077) *
              C276 +
          ((((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
              C2268 * C1073 - C2263 * C1077) *
                 C19689 +
             (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
              C2268 * C1078 - C2263 * C1085) *
                 C49950) *
                C33256 +
            ((C36689 - C36690 + C36691 - C36692 + C36693 - C36694) * C19689 +
             (C36695 - C36696 + C36697 - C36698 + C36699 - C36700) * C49950) *
                C50174) *
               C1648 +
           (((C36690 - C36689 + C36692 - C36691 + C36694 - C36693) * C19689 +
             (C36696 - C36695 + C36698 - C36697 + C36700 - C36699) * C49950) *
                C33256 +
            ((C37091 - C37092 + C37093 - C37094 + C37095 - C37096) * C19689 +
             (C37097 - C37098 + C37099 - C37100 + C37101 - C37102) * C49950) *
                C50174) *
               C50077) *
              C277 +
          ((((C2261 * C299 - C2266 * C285 + C2262 * C1077 - C2267 * C1073 +
              C2263 * C2456 - C2268 * C2453) *
                 C19689 +
             (C2261 * C315 - C2266 * C300 + C2262 * C1085 - C2267 * C1078 +
              C2263 * C2462 - C2268 * C2457) *
                 C49950) *
                C33256 +
            ((C37589 - C37590 + C37591 - C37592 + C37593 - C37594) * C19689 +
             (C37595 - C37596 + C37597 - C37598 + C37599 - C37600) * C49950) *
                C50174) *
               C1648 +
           (((C37590 - C37589 + C37592 - C37591 + C37594 - C37593) * C19689 +
             (C37596 - C37595 + C37598 - C37597 + C37600 - C37599) * C49950) *
                C33256 +
            ((C2266 * C2635 - C2261 * C2638 + C2267 * C3603 - C2262 * C3605 +
              C2268 * C20478 - C2263 * C20479) *
                 C19689 +
             (C2266 * C2639 - C2261 * C2644 + C2267 * C3606 - C2262 * C3609 +
              C2268 * C20480 - C2263 * C20481) *
                 C49950) *
                C50174) *
               C50077) *
              C278) *
         C49978) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C19689 +
             (C50094 * C143 - C117 * C130) * C49950) *
                C38554 +
            ((C5415 - C5416) * C19689 + (C5417 - C5418) * C49950) * C38555 +
            C38763 * C38556 + C38768 * C38557) *
               C1648 +
           (((C5416 - C5415) * C19689 + (C5418 - C5417) * C49950) * C38554 +
            ((C5422 - C5421) * C19689 + (C5424 - C5423) * C49950) * C38555 +
            (C7290 * C19689 + C7291 * C49950) * C38556 +
            ((C7295 - C7294) * C19689 + (C7297 - C7296) * C49950) * C38557) *
               C50077) *
              C49997 * C999 +
          ((((C152 - C151) * C19689 + (C154 - C153) * C49950) * C38554 +
            (C5427 * C19689 + C5428 * C49950) * C38555 + C38766 * C38556 +
            C38767 * C38557) *
               C1648 +
           ((C5419 * C19689 + C5420 * C49950) * C38554 +
            (C5425 * C19689 + C5426 * C49950) * C38555 +
            (C5455 * C19689 + C5456 * C49950) * C38556 +
            ((C5439 - C5440) * C19689 + (C5441 - C5442) * C49950) * C38557) *
               C50077) *
              C49997 * C1000 +
          (((C171 * C19689 + C172 * C49950) * C38554 +
            (C5765 * C19689 + C5766 * C49950) * C38555 +
            (C5767 * C19689 + C5768 * C49950) * C38556 +
            ((C5445 - C5446) * C19689 + (C5447 - C5448) * C49950) * C38557) *
               C1648 +
           ((C730 * C19689 + C731 * C49950) * C38554 +
            (C5443 * C19689 + C5444 * C49950) * C38555 +
            ((C5446 - C5445) * C19689 + (C5448 - C5447) * C49950) * C38556 +
            ((C117 * C5404 - C50094 * C5409) * C19689 +
             (C117 * C5410 - C50094 * C5413) * C49950) *
                C38557) *
               C50077) *
              C49997 * C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C19689 +
             (C50094 * C143 - C117 * C130) * C49950) *
                C38554 +
            ((C5415 - C5416) * C19689 + (C5417 - C5418) * C49950) * C38555 +
            C38763 * C38556 + C38768 * C38557) *
               C1648 +
           (((C5416 - C5415) * C19689 + (C5418 - C5417) * C49950) * C38554 +
            ((C5422 - C5421) * C19689 + (C5424 - C5423) * C49950) * C38555 +
            (C7290 * C19689 + C7291 * C49950) * C38556 +
            ((C7295 - C7294) * C19689 + (C7297 - C7296) * C49950) * C38557) *
               C50077) *
              C276 +
          ((((C117 * C281 - C50094 * C291) * C19689 +
             (C117 * C292 - C50094 * C311) * C49950) *
                C38554 +
            ((C5967 - C5968) * C19689 + (C5969 - C5970) * C49950) * C38555 +
            C39365 * C38556 + C39368 * C38557) *
               C1648 +
           (((C5968 - C5967) * C19689 + (C5970 - C5969) * C49950) * C38554 +
            ((C5974 - C5973) * C19689 + (C5976 - C5975) * C49950) * C38555 +
            ((C6389 - C6390) * C19689 + (C6391 - C6392) * C49950) * C38556 +
            ((C39361 - C39362) * C19689 + (C39363 - C39364) * C49950) *
                C38557) *
               C50077) *
              C277 +
          ((((C50094 * C299 - C117 * C285) * C19689 +
             (C50094 * C315 - C117 * C300) * C49950) *
                C38554 +
            ((C6884 - C6885) * C19689 + (C6886 - C6887) * C49950) * C38555 +
            ((C6888 - C6889) * C19689 + (C6890 - C6891) * C49950) * C38556 +
            ((C39695 - C39696) * C19689 + (C39697 - C39698) * C49950) *
                C38557) *
               C1648 +
           (((C6885 - C6884) * C19689 + (C6887 - C6886) * C49950) * C38554 +
            ((C6889 - C6888) * C19689 + (C6891 - C6890) * C49950) * C38555 +
            ((C39696 - C39695) * C19689 + (C39698 - C39697) * C49950) * C38556 +
            ((C117 * C22744 - C50094 * C22745) * C19689 +
             (C117 * C22746 - C50094 * C22747) * C49950) *
                C38557) *
               C50077) *
              C278) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[195] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C49175 +
             (C50094 * C143 - C117 * C130) * C50224 + (C151 - C152) * C49168 +
             (C153 - C154) * C49955) *
                C50290 +
            ((C5415 - C5416) * C49175 + (C5417 - C5418) * C50224 +
             C5419 * C49168 + C5420 * C49955) *
                C50291 +
            C44200 * C43894) *
               C50013 * C50239 +
           (((C117 * C281 - C50094 * C291) * C49175 +
             (C117 * C292 - C50094 * C311) * C50224 + (C322 - C323) * C49168 +
             (C324 - C325) * C49955) *
                C50290 +
            ((C5967 - C5968) * C49175 + (C5969 - C5970) * C50224 +
             C5971 * C49168 + C5972 * C49955) *
                C50291 +
            (C6385 * C49175 + C6386 * C50224 + C5977 * C49168 +
             C5978 * C49955) *
                C43894) *
               C50013 * C50049) *
              C50282 +
          ((((C152 - C151) * C49175 + (C154 - C153) * C50224 +
             (C156 - C155) * C49168 + (C158 - C157) * C49955) *
                C50290 +
            (C5427 * C49175 + C5428 * C50224 + C730 * C49168 + C731 * C49955) *
                C50291 +
            C44201 * C43894) *
               C50013 * C50239 +
           (((C323 - C322) * C49175 + (C325 - C324) * C50224 +
             (C327 - C326) * C49168 + (C329 - C328) * C49955) *
                C50290 +
            (C5979 * C49175 + C5980 * C50224 + C11465 * C49168 +
             C11466 * C49955) *
                C50291 +
            (C5981 * C49175 + C5982 * C50224 + (C5615 - C5616) * C49168 +
             (C5617 - C5618) * C49955) *
                C43894) *
               C50013 * C50049) *
              C50283 +
          (((C171 * C49175 + C172 * C50224 + C173 * C49168 + C174 * C49955) *
                C50290 +
            (C5765 * C49175 + C5766 * C50224 + C11269 * C49168 +
             C11270 * C49955) *
                C50291 +
            (C5767 * C49175 + C5768 * C50224 + (C507 - C508) * C49168 +
             (C509 - C510) * C49955) *
                C43894) *
               C50013 * C50239 +
           ((C618 * C49175 + C619 * C50224 + C620 * C49168 + C621 * C49955) *
                C50290 +
            (C11121 * C49175 + C11122 * C50224 + (C897 - C896) * C49168 +
             (C899 - C898) * C49955) *
                C50291 +
            ((C5616 - C5615) * C49175 + (C5618 - C5617) * C50224 +
             (C117 * C1190 - C50094 * C1197) * C49168 +
             (C117 * C1198 - C50094 * C1202) * C49955) *
                C43894) *
               C50013 * C50049) *
              C612)) /
        (p * q * std::sqrt(p + q));
    d2ee[196] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50094 * C129 - C117 * C122) * C49175 +
              (C50094 * C143 - C117 * C130) * C50224 + (C151 - C152) * C49168 +
              (C153 - C154) * C49955) *
                 C50290 +
             ((C5415 - C5416) * C49175 + (C5417 - C5418) * C50224 +
              C5419 * C49168 + C5420 * C49955) *
                 C50291 +
             C44200 * C43894) *
                C50240 +
            (((C5416 - C5415) * C49175 + (C5418 - C5417) * C50224 +
              C5427 * C49168 + C5428 * C49955) *
                 C50290 +
             ((C5422 - C5421) * C49175 + (C5424 - C5423) * C50224 +
              C5429 * C49168 + C5430 * C49955) *
                 C50291 +
             (C7290 * C49175 + C7291 * C50224 + C5453 * C49168 +
              C5454 * C49955) *
                 C43894) *
                C50077) *
               C50239 +
           ((((C117 * C281 - C50094 * C291) * C49175 +
              (C117 * C292 - C50094 * C311) * C50224 + (C322 - C323) * C49168 +
              (C324 - C325) * C49955) *
                 C50290 +
             ((C5967 - C5968) * C49175 + (C5969 - C5970) * C50224 +
              C5971 * C49168 + C5972 * C49955) *
                 C50291 +
             (C6385 * C49175 + C6386 * C50224 + C5977 * C49168 +
              C5978 * C49955) *
                 C43894) *
                C50240 +
            (((C5968 - C5967) * C49175 + (C5970 - C5969) * C50224 +
              C5979 * C49168 + C5980 * C49955) *
                 C50290 +
             ((C5974 - C5973) * C49175 + (C5976 - C5975) * C50224 +
              C5981 * C49168 + C5982 * C49955) *
                 C50291 +
             ((C6389 - C6390) * C49175 + (C6391 - C6392) * C50224 +
              (C5983 - C5984) * C49168 + (C5985 - C5986) * C49955) *
                 C43894) *
                C50077) *
               C50049) *
              C279 +
          (((((C152 - C151) * C49175 + (C154 - C153) * C50224 +
              (C156 - C155) * C49168 + (C158 - C157) * C49955) *
                 C50290 +
             (C5427 * C49175 + C5428 * C50224 + C730 * C49168 + C731 * C49955) *
                 C50291 +
             C44201 * C43894) *
                C50240 +
            ((C5419 * C49175 + C5420 * C50224 + C5765 * C49168 +
              C5766 * C49955) *
                 C50290 +
             (C5425 * C49175 + C5426 * C50224 + C5767 * C49168 +
              C5768 * C49955) *
                 C50291 +
             (C5455 * C49175 + C5456 * C50224 + (C5445 - C5446) * C49168 +
              (C5447 - C5448) * C49955) *
                 C43894) *
                C50077) *
               C50239 +
           ((((C323 - C322) * C49175 + (C325 - C324) * C50224 +
              (C327 - C326) * C49168 + (C329 - C328) * C49955) *
                 C50290 +
             (C5979 * C49175 + C5980 * C50224 + C11465 * C49168 +
              C11466 * C49955) *
                 C50291 +
             (C5981 * C49175 + C5982 * C50224 + (C5615 - C5616) * C49168 +
              (C5617 - C5618) * C49955) *
                 C43894) *
                C50240 +
            ((C5971 * C49175 + C5972 * C50224 + C11121 * C49168 +
              C11122 * C49955) *
                 C50290 +
             (C5977 * C49175 + C5978 * C50224 + (C5616 - C5615) * C49168 +
              (C5618 - C5617) * C49955) *
                 C50291 +
             ((C5984 - C5983) * C49175 + (C5986 - C5985) * C50224 +
              (C117 * C5962 - C50094 * C5963) * C49168 +
              (C117 * C5964 - C50094 * C5965) * C49955) *
                 C43894) *
                C50077) *
               C50049) *
              C49984)) /
        (p * q * std::sqrt(p + q));
    d2ee[197] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C49175 +
             (C50094 * C143 - C117 * C130) * C50224 + (C151 - C152) * C49168 +
             (C153 - C154) * C49955) *
                C50290 +
            ((C5415 - C5416) * C49175 + (C5417 - C5418) * C50224 +
             C5419 * C49168 + C5420 * C49955) *
                C50291 +
            (C5449 * C49175 + C5450 * C50224 + C5425 * C49168 +
             C5426 * C49955) *
                C43894) *
               C50013 * C276 +
           (((C117 * C281 - C50094 * C291) * C49175 +
             (C117 * C292 - C50094 * C311) * C50224 + (C322 - C323) * C49168 +
             (C324 - C325) * C49955) *
                C50290 +
            ((C5967 - C5968) * C49175 + (C5969 - C5970) * C50224 +
             C5971 * C49168 + C5972 * C49955) *
                C50291 +
            (C6385 * C49175 + C6386 * C50224 + C5977 * C49168 +
             C5978 * C49955) *
                C43894) *
               C50013 * C277 +
           (((C50094 * C299 - C117 * C285) * C49175 +
             (C50094 * C315 - C117 * C300) * C50224 + (C334 - C335) * C49168 +
             (C336 - C337) * C49955) *
                C50290 +
            ((C6884 - C6885) * C49175 + (C6886 - C6887) * C50224 +
             (C5249 - C5250) * C49168 + (C5251 - C5252) * C49955) *
                C50291 +
            ((C6888 - C6889) * C49175 + (C6890 - C6891) * C50224 +
             (C5253 - C5254) * C49168 + (C5255 - C5256) * C49955) *
                C43894) *
               C50013 * C278) *
              C279 +
          ((((C152 - C151) * C49175 + (C154 - C153) * C50224 +
             (C156 - C155) * C49168 + (C158 - C157) * C49955) *
                C50290 +
            (C5427 * C49175 + C5428 * C50224 + C730 * C49168 + C731 * C49955) *
                C50291 +
            (C5429 * C49175 + C5430 * C50224 + C5443 * C49168 +
             C5444 * C49955) *
                C43894) *
               C50013 * C276 +
           (((C323 - C322) * C49175 + (C325 - C324) * C50224 +
             (C327 - C326) * C49168 + (C329 - C328) * C49955) *
                C50290 +
            (C5979 * C49175 + C5980 * C50224 + C11465 * C49168 +
             C11466 * C49955) *
                C50291 +
            (C5981 * C49175 + C5982 * C50224 + (C5615 - C5616) * C49168 +
             (C5617 - C5618) * C49955) *
                C43894) *
               C50013 * C277 +
           (((C335 - C334) * C49175 + (C337 - C336) * C50224 +
             (C339 - C338) * C49168 + (C341 - C340) * C49955) *
                C50290 +
            ((C5250 - C5249) * C49175 + (C5252 - C5251) * C50224 +
             (C10826 - C10825) * C49168 + (C10828 - C10827) * C49955) *
                C50291 +
            ((C5254 - C5253) * C49175 + (C5256 - C5255) * C50224 +
             (C117 * C2637 - C50094 * C2642) * C49168 +
             (C117 * C2643 - C50094 * C2646) * C49955) *
                C43894) *
               C50013 * C278) *
              C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C49175 +
            (C50094 * C143 - C117 * C130) * C50224 + (C151 - C152) * C49168 +
            (C153 - C154) * C49955) *
               C50290 +
           ((C5415 - C5416) * C49175 + (C5417 - C5418) * C50224 +
            C5419 * C49168 + C5420 * C49955) *
               C50291 +
           (C5449 * C49175 + C5450 * C50224 + C5425 * C49168 + C5426 * C49955) *
               C43894) *
              C50013 * C49997 * C113 +
          (((C152 - C151) * C49175 + (C154 - C153) * C50224 +
            (C156 - C155) * C49168 + (C158 - C157) * C49955) *
               C50290 +
           (C5427 * C49175 + C5428 * C50224 + C730 * C49168 + C731 * C49955) *
               C50291 +
           (C5429 * C49175 + C5430 * C50224 + C5443 * C49168 + C5444 * C49955) *
               C43894) *
              C50013 * C49997 * C114 +
          ((C171 * C49175 + C172 * C50224 + C173 * C49168 + C174 * C49955) *
               C50290 +
           (C5765 * C49175 + C5766 * C50224 + C11269 * C49168 +
            C11270 * C49955) *
               C50291 +
           (C5767 * C49175 + C5768 * C50224 + (C507 - C508) * C49168 +
            (C509 - C510) * C49955) *
               C43894) *
              C50013 * C49997 * C115 +
          ((C175 * C49175 + C176 * C50224 + C177 * C49168 + C178 * C49955) *
               C50290 +
           (C732 * C49175 + C733 * C50224 + (C735 - C734) * C49168 +
            (C737 - C736) * C49955) *
               C50291 +
           ((C508 - C507) * C49175 + (C510 - C509) * C50224 +
            (C117 * C455 - C50094 * C474) * C49168 +
            (C117 * C475 - C50094 * C485) * C49955) *
               C43894) *
              C50013 * C49997 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C49175 +
             (C50094 * C143 - C117 * C130) * C50224 + (C151 - C152) * C49168 +
             (C153 - C154) * C49955) *
                C50290 +
            ((C5415 - C5416) * C49175 + (C5417 - C5418) * C50224 +
             C5419 * C49168 + C5420 * C49955) *
                C50291 +
            C44200 * C43894) *
               C443 +
           (((C5416 - C5415) * C49175 + (C5418 - C5417) * C50224 +
             C5427 * C49168 + C5428 * C49955) *
                C50290 +
            ((C5422 - C5421) * C49175 + (C5424 - C5423) * C50224 +
             C5429 * C49168 + C5430 * C49955) *
                C50291 +
            (C7290 * C49175 + C7291 * C50224 + C5453 * C49168 +
             C5454 * C49955) *
                C43894) *
               C444 +
           (C44200 * C50290 +
            (C38757 * C49175 + C38758 * C50224 + C5455 * C49168 +
             C5456 * C49955) *
                C50291 +
            ((C7294 - C7295) * C49175 + (C7296 - C7297) * C50224 +
             (C5439 - C5440) * C49168 + (C5441 - C5442) * C49955) *
                C43894) *
               C445) *
              C49997 * C279 +
          ((((C152 - C151) * C49175 + (C154 - C153) * C50224 +
             (C156 - C155) * C49168 + (C158 - C157) * C49955) *
                C50290 +
            (C5427 * C49175 + C5428 * C50224 + C730 * C49168 + C731 * C49955) *
                C50291 +
            C44201 * C43894) *
               C443 +
           ((C5419 * C49175 + C5420 * C50224 + C5765 * C49168 +
             C5766 * C49955) *
                C50290 +
            (C5425 * C49175 + C5426 * C50224 + C5767 * C49168 +
             C5768 * C49955) *
                C50291 +
            (C5455 * C49175 + C5456 * C50224 + (C5445 - C5446) * C49168 +
             (C5447 - C5448) * C49955) *
                C43894) *
               C444 +
           (C44201 * C50290 +
            (C5453 * C49175 + C5454 * C50224 + (C5446 - C5445) * C49168 +
             (C5448 - C5447) * C49955) *
                C50291 +
            ((C5440 - C5439) * C49175 + (C5442 - C5441) * C50224 +
             (C117 * C5404 - C50094 * C5409) * C49168 +
             (C117 * C5410 - C50094 * C5413) * C49955) *
                C43894) *
               C445) *
              C49997 * C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[198] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C49175 +
             (C50094 * C143 - C117 * C130) * C50224 + (C151 - C152) * C49168 +
             (C153 - C154) * C49955) *
                C50290 +
            ((C5415 - C5416) * C49175 + (C5417 - C5418) * C50224 +
             C5419 * C49168 + C5420 * C49955) *
                C50291 +
            C44200 * C43894) *
               C50240 +
           (((C5416 - C5415) * C49175 + (C5418 - C5417) * C50224 +
             C5427 * C49168 + C5428 * C49955) *
                C50290 +
            ((C5422 - C5421) * C49175 + (C5424 - C5423) * C50224 +
             C5429 * C49168 + C5430 * C49955) *
                C50291 +
            (C7290 * C49175 + C7291 * C50224 + C5453 * C49168 +
             C5454 * C49955) *
                C43894) *
               C50077) *
              C49997 * C50282 +
          ((((C152 - C151) * C49175 + (C154 - C153) * C50224 +
             (C156 - C155) * C49168 + (C158 - C157) * C49955) *
                C50290 +
            (C5427 * C49175 + C5428 * C50224 + C730 * C49168 + C731 * C49955) *
                C50291 +
            C44201 * C43894) *
               C50240 +
           ((C5419 * C49175 + C5420 * C50224 + C5765 * C49168 +
             C5766 * C49955) *
                C50290 +
            (C5425 * C49175 + C5426 * C50224 + C5767 * C49168 +
             C5768 * C49955) *
                C50291 +
            (C5455 * C49175 + C5456 * C50224 + (C5445 - C5446) * C49168 +
             (C5447 - C5448) * C49955) *
                C43894) *
               C50077) *
              C49997 * C50283 +
          (((C171 * C49175 + C172 * C50224 + C173 * C49168 + C174 * C49955) *
                C50290 +
            (C5765 * C49175 + C5766 * C50224 + C11269 * C49168 +
             C11270 * C49955) *
                C50291 +
            (C5767 * C49175 + C5768 * C50224 + (C507 - C508) * C49168 +
             (C509 - C510) * C49955) *
                C43894) *
               C50240 +
           ((C730 * C49175 + C731 * C50224 + C732 * C49168 + C733 * C49955) *
                C50290 +
            (C5443 * C49175 + C5444 * C50224 + (C508 - C507) * C49168 +
             (C510 - C509) * C49955) *
                C50291 +
            ((C5446 - C5445) * C49175 + (C5448 - C5447) * C50224 +
             (C117 * C1821 - C50094 * C1828) * C49168 +
             (C117 * C1829 - C50094 * C1833) * C49955) *
                C43894) *
               C50077) *
              C49997 * C612)) /
        (p * q * std::sqrt(p + q));
    d2ee[199] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C49175 +
            (C50094 * C143 - C117 * C130) * C50224 + (C151 - C152) * C49168 +
            (C153 - C154) * C49955) *
               C50290 +
           ((C5415 - C5416) * C49175 + (C5417 - C5418) * C50224 +
            C5419 * C49168 + C5420 * C49955) *
               C50291 +
           (C5449 * C49175 + C5450 * C50224 + C5425 * C49168 + C5426 * C49955) *
               C43894) *
              C50013 * C49997 * C113 +
          (((C152 - C151) * C49175 + (C154 - C153) * C50224 +
            (C156 - C155) * C49168 + (C158 - C157) * C49955) *
               C50290 +
           (C5427 * C49175 + C5428 * C50224 + C730 * C49168 + C731 * C49955) *
               C50291 +
           (C5429 * C49175 + C5430 * C50224 + C5443 * C49168 + C5444 * C49955) *
               C43894) *
              C50013 * C49997 * C114 +
          ((C171 * C49175 + C172 * C50224 + C173 * C49168 + C174 * C49955) *
               C50290 +
           (C5765 * C49175 + C5766 * C50224 + C11269 * C49168 +
            C11270 * C49955) *
               C50291 +
           (C5767 * C49175 + C5768 * C50224 + (C507 - C508) * C49168 +
            (C509 - C510) * C49955) *
               C43894) *
              C50013 * C49997 * C115 +
          ((C175 * C49175 + C176 * C50224 + C177 * C49168 + C178 * C49955) *
               C50290 +
           (C732 * C49175 + C733 * C50224 + (C735 - C734) * C49168 +
            (C737 - C736) * C49955) *
               C50291 +
           ((C508 - C507) * C49175 + (C510 - C509) * C50224 +
            (C117 * C455 - C50094 * C474) * C49168 +
            (C117 * C475 - C50094 * C485) * C49955) *
               C43894) *
              C50013 * C49997 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C49175 +
             (C50094 * C143 - C117 * C130) * C50224 + (C151 - C152) * C49168 +
             (C153 - C154) * C49955) *
                C50290 +
            ((C5415 - C5416) * C49175 + (C5417 - C5418) * C50224 +
             C5419 * C49168 + C5420 * C49955) *
                C50291 +
            (C5449 * C49175 + C5450 * C50224 + C5425 * C49168 +
             C5426 * C49955) *
                C43894) *
               C50013 * C276 +
           (((C117 * C281 - C50094 * C291) * C49175 +
             (C117 * C292 - C50094 * C311) * C50224 + (C322 - C323) * C49168 +
             (C324 - C325) * C49955) *
                C50290 +
            ((C5967 - C5968) * C49175 + (C5969 - C5970) * C50224 +
             C5971 * C49168 + C5972 * C49955) *
                C50291 +
            (C6385 * C49175 + C6386 * C50224 + C5977 * C49168 +
             C5978 * C49955) *
                C43894) *
               C50013 * C277 +
           (((C50094 * C299 - C117 * C285) * C49175 +
             (C50094 * C315 - C117 * C300) * C50224 + (C334 - C335) * C49168 +
             (C336 - C337) * C49955) *
                C50290 +
            ((C6884 - C6885) * C49175 + (C6886 - C6887) * C50224 +
             (C5249 - C5250) * C49168 + (C5251 - C5252) * C49955) *
                C50291 +
            ((C6888 - C6889) * C49175 + (C6890 - C6891) * C50224 +
             (C5253 - C5254) * C49168 + (C5255 - C5256) * C49955) *
                C43894) *
               C50013 * C278) *
              C279 +
          ((((C152 - C151) * C49175 + (C154 - C153) * C50224 +
             (C156 - C155) * C49168 + (C158 - C157) * C49955) *
                C50290 +
            (C5427 * C49175 + C5428 * C50224 + C730 * C49168 + C731 * C49955) *
                C50291 +
            (C5429 * C49175 + C5430 * C50224 + C5443 * C49168 +
             C5444 * C49955) *
                C43894) *
               C50013 * C276 +
           (((C323 - C322) * C49175 + (C325 - C324) * C50224 +
             (C327 - C326) * C49168 + (C329 - C328) * C49955) *
                C50290 +
            (C5979 * C49175 + C5980 * C50224 + C11465 * C49168 +
             C11466 * C49955) *
                C50291 +
            (C5981 * C49175 + C5982 * C50224 + (C5615 - C5616) * C49168 +
             (C5617 - C5618) * C49955) *
                C43894) *
               C50013 * C277 +
           (((C335 - C334) * C49175 + (C337 - C336) * C50224 +
             (C339 - C338) * C49168 + (C341 - C340) * C49955) *
                C50290 +
            ((C5250 - C5249) * C49175 + (C5252 - C5251) * C50224 +
             (C10826 - C10825) * C49168 + (C10828 - C10827) * C49955) *
                C50291 +
            ((C5254 - C5253) * C49175 + (C5256 - C5255) * C50224 +
             (C117 * C2637 - C50094 * C2642) * C49168 +
             (C117 * C2643 - C50094 * C2646) * C49955) *
                C43894) *
               C50013 * C278) *
              C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[200] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C49175 +
             (C50094 * C143 - C117 * C130) * C50224 + (C151 - C152) * C49168 +
             (C153 - C154) * C49955) *
                C50290 +
            ((C5415 - C5416) * C49175 + (C5417 - C5418) * C50224 +
             C5419 * C49168 + C5420 * C49955) *
                C50291 +
            C44200 * C43894) *
               C50013 * C50284 +
           (((C117 * C281 - C50094 * C291) * C49175 +
             (C117 * C292 - C50094 * C311) * C50224 + (C322 - C323) * C49168 +
             (C324 - C325) * C49955) *
                C50290 +
            ((C5967 - C5968) * C49175 + (C5969 - C5970) * C50224 +
             C5971 * C49168 + C5972 * C49955) *
                C50291 +
            C45084 * C43894) *
               C50013 * C50285 +
           (((C50094 * C299 - C117 * C285) * C49175 +
             (C50094 * C315 - C117 * C300) * C50224 + (C334 - C335) * C49168 +
             (C336 - C337) * C49955) *
                C50290 +
            ((C6884 - C6885) * C49175 + (C6886 - C6887) * C50224 +
             (C5249 - C5250) * C49168 + (C5251 - C5252) * C49955) *
                C50291 +
            ((C6888 - C6889) * C49175 + (C6890 - C6891) * C50224 +
             (C5253 - C5254) * C49168 + (C5255 - C5256) * C49955) *
                C43894) *
               C50013 * C1303) *
              C50231 +
          ((((C152 - C151) * C49175 + (C154 - C153) * C50224 +
             (C156 - C155) * C49168 + (C158 - C157) * C49955) *
                C50290 +
            (C5427 * C49175 + C5428 * C50224 + C730 * C49168 + C731 * C49955) *
                C50291 +
            C44201 * C43894) *
               C50013 * C50284 +
           (((C323 - C322) * C49175 + (C325 - C324) * C50224 +
             (C327 - C326) * C49168 + (C329 - C328) * C49955) *
                C50290 +
            (C5979 * C49175 + C5980 * C50224 + C11465 * C49168 +
             C11466 * C49955) *
                C50291 +
            (C5981 * C49175 + C5982 * C50224 + (C5615 - C5616) * C49168 +
             (C5617 - C5618) * C49955) *
                C43894) *
               C50013 * C50285 +
           (((C335 - C334) * C49175 + (C337 - C336) * C50224 +
             (C339 - C338) * C49168 + (C341 - C340) * C49955) *
                C50290 +
            ((C5250 - C5249) * C49175 + (C5252 - C5251) * C50224 +
             (C10826 - C10825) * C49168 + (C10828 - C10827) * C49955) *
                C50291 +
            ((C5254 - C5253) * C49175 + (C5256 - C5255) * C50224 +
             (C117 * C2637 - C50094 * C2642) * C49168 +
             (C117 * C2643 - C50094 * C2646) * C49955) *
                C43894) *
               C50013 * C1303) *
              C49984)) /
        (p * q * std::sqrt(p + q));
    d2ee[201] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C50094 * C129 - C117 * C122) * C49175 +
                      (C50094 * C143 - C117 * C130) * C50224 +
                      (C151 - C152) * C49168 + (C153 - C154) * C49955) *
                         C50290 +
                     ((C5415 - C5416) * C49175 + (C5417 - C5418) * C50224 +
                      C5419 * C49168 + C5420 * C49955) *
                         C50291 +
                     C44200 * C43894) *
                        C50240 +
                    (((C5416 - C5415) * C49175 + (C5418 - C5417) * C50224 +
                      C5427 * C49168 + C5428 * C49955) *
                         C50290 +
                     ((C5422 - C5421) * C49175 + (C5424 - C5423) * C50224 +
                      C5429 * C49168 + C5430 * C49955) *
                         C50291 +
                     (C7290 * C49175 + C7291 * C50224 + C5453 * C49168 +
                      C5454 * C49955) *
                         C43894) *
                        C50077) *
                       C50284 +
                   ((((C117 * C281 - C50094 * C291) * C49175 +
                      (C117 * C292 - C50094 * C311) * C50224 +
                      (C322 - C323) * C49168 + (C324 - C325) * C49955) *
                         C50290 +
                     ((C5967 - C5968) * C49175 + (C5969 - C5970) * C50224 +
                      C5971 * C49168 + C5972 * C49955) *
                         C50291 +
                     C45084 * C43894) *
                        C50240 +
                    (((C5968 - C5967) * C49175 + (C5970 - C5969) * C50224 +
                      C5979 * C49168 + C5980 * C49955) *
                         C50290 +
                     ((C5974 - C5973) * C49175 + (C5976 - C5975) * C50224 +
                      C5981 * C49168 + C5982 * C49955) *
                         C50291 +
                     ((C6389 - C6390) * C49175 + (C6391 - C6392) * C50224 +
                      (C5983 - C5984) * C49168 + (C5985 - C5986) * C49955) *
                         C43894) *
                        C50077) *
                       C50285 +
                   ((((C50094 * C299 - C117 * C285) * C49175 +
                      (C50094 * C315 - C117 * C300) * C50224 +
                      (C334 - C335) * C49168 + (C336 - C337) * C49955) *
                         C50290 +
                     ((C6884 - C6885) * C49175 + (C6886 - C6887) * C50224 +
                      (C5249 - C5250) * C49168 + (C5251 - C5252) * C49955) *
                         C50291 +
                     ((C6888 - C6889) * C49175 + (C6890 - C6891) * C50224 +
                      (C5253 - C5254) * C49168 + (C5255 - C5256) * C49955) *
                         C43894) *
                        C50240 +
                    (((C6885 - C6884) * C49175 + (C6887 - C6886) * C50224 +
                      (C5250 - C5249) * C49168 + (C5252 - C5251) * C49955) *
                         C50290 +
                     ((C6889 - C6888) * C49175 + (C6891 - C6890) * C50224 +
                      (C5254 - C5253) * C49168 + (C5256 - C5255) * C49955) *
                         C50291 +
                     ((C39696 - C39695) * C49175 + (C39698 - C39697) * C50224 +
                      (C117 * C4498 - C50094 * C4504) * C49168 +
                      (C117 * C4506 - C50094 * C4510) * C49955) *
                         C43894) *
                        C50077) *
                       C1303) *
                  C49978) /
                 (p * q * std::sqrt(p + q));
    d2ee[202] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C49175 +
            (C50094 * C143 - C117 * C130) * C50224 + (C151 - C152) * C49168 +
            (C153 - C154) * C49955) *
               C50290 +
           ((C5415 - C5416) * C49175 + (C5417 - C5418) * C50224 +
            C5419 * C49168 + C5420 * C49955) *
               C50291 +
           C44200 * C43894) *
              C50013 * C1068 +
          (((C117 * C281 - C50094 * C291) * C49175 +
            (C117 * C292 - C50094 * C311) * C50224 + (C322 - C323) * C49168 +
            (C324 - C325) * C49955) *
               C50290 +
           ((C5967 - C5968) * C49175 + (C5969 - C5970) * C50224 +
            C5971 * C49168 + C5972 * C49955) *
               C50291 +
           (C6385 * C49175 + C6386 * C50224 + C5977 * C49168 + C5978 * C49955) *
               C43894) *
              C50013 * C1069 +
          (((C50094 * C299 - C117 * C285) * C49175 +
            (C50094 * C315 - C117 * C300) * C50224 + (C334 - C335) * C49168 +
            (C336 - C337) * C49955) *
               C50290 +
           ((C6884 - C6885) * C49175 + (C6886 - C6887) * C50224 +
            (C5249 - C5250) * C49168 + (C5251 - C5252) * C49955) *
               C50291 +
           ((C6888 - C6889) * C49175 + (C6890 - C6891) * C50224 +
            (C5253 - C5254) * C49168 + (C5255 - C5256) * C49955) *
               C43894) *
              C50013 * C1070 +
          (((C117 * C1073 - C50094 * C1077) * C49175 +
            (C117 * C1078 - C50094 * C1085) * C50224 +
            (C117 * C1074 - C50094 * C1079) * C49168 +
            (C117 * C1080 - C50094 * C1086) * C49955) *
               C50290 +
           ((C117 * C3181 - C50094 * C3184) * C49175 +
            (C117 * C3185 - C50094 * C3190) * C50224 +
            (C117 * C3182 - C50094 * C3186) * C49168 +
            (C117 * C3187 - C50094 * C3191) * C49955) *
               C50291 +
           ((C117 * C3603 - C50094 * C3605) * C49175 +
            (C117 * C3606 - C50094 * C3609) * C50224 +
            (C117 * C3604 - C50094 * C3607) * C49168 +
            (C117 * C3608 - C50094 * C3610) * C49955) *
               C43894) *
              C50013 * C1071) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C49175 +
             (C50094 * C143 - C117 * C130) * C50224 + (C151 - C152) * C49168 +
             (C153 - C154) * C49955) *
                C50290 +
            ((C5415 - C5416) * C49175 + (C5417 - C5418) * C50224 +
             C5419 * C49168 + C5420 * C49955) *
                C50291 +
            C44200 * C43894) *
               C50013 * C997 +
           (((C117 * C281 - C50094 * C291) * C49175 +
             (C117 * C292 - C50094 * C311) * C50224 + (C322 - C323) * C49168 +
             (C324 - C325) * C49955) *
                C50290 +
            ((C5967 - C5968) * C49175 + (C5969 - C5970) * C50224 +
             C5971 * C49168 + C5972 * C49955) *
                C50291 +
            (C6385 * C49175 + C6386 * C50224 + C5977 * C49168 +
             C5978 * C49955) *
                C43894) *
               C50013 * C50049) *
              C999 +
          ((((C152 - C151) * C49175 + (C154 - C153) * C50224 +
             (C156 - C155) * C49168 + (C158 - C157) * C49955) *
                C50290 +
            (C5427 * C49175 + C5428 * C50224 + C730 * C49168 + C731 * C49955) *
                C50291 +
            C44201 * C43894) *
               C50013 * C997 +
           (((C323 - C322) * C49175 + (C325 - C324) * C50224 +
             (C327 - C326) * C49168 + (C329 - C328) * C49955) *
                C50290 +
            (C5979 * C49175 + C5980 * C50224 + C11465 * C49168 +
             C11466 * C49955) *
                C50291 +
            (C5981 * C49175 + C5982 * C50224 + (C5615 - C5616) * C49168 +
             (C5617 - C5618) * C49955) *
                C43894) *
               C50013 * C50049) *
              C1000 +
          (((C171 * C49175 + C172 * C50224 + C173 * C49168 + C174 * C49955) *
                C50290 +
            (C5765 * C49175 + C5766 * C50224 + C11269 * C49168 +
             C11270 * C49955) *
                C50291 +
            (C5767 * C49175 + C5768 * C50224 + (C507 - C508) * C49168 +
             (C509 - C510) * C49955) *
                C43894) *
               C50013 * C997 +
           ((C618 * C49175 + C619 * C50224 + C620 * C49168 + C621 * C49955) *
                C50290 +
            (C11121 * C49175 + C11122 * C50224 + (C897 - C896) * C49168 +
             (C899 - C898) * C49955) *
                C50291 +
            ((C5616 - C5615) * C49175 + (C5618 - C5617) * C50224 +
             (C117 * C1190 - C50094 * C1197) * C49168 +
             (C117 * C1198 - C50094 * C1202) * C49955) *
                C43894) *
               C50013 * C50049) *
              C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C49175 +
             (C50094 * C143 - C117 * C130) * C50224 + (C151 - C152) * C49168 +
             (C153 - C154) * C49955) *
                C50290 +
            ((C5415 - C5416) * C49175 + (C5417 - C5418) * C50224 +
             C5419 * C49168 + C5420 * C49955) *
                C50291 +
            C44200 * C43894) *
               C443 +
           (((C5416 - C5415) * C49175 + (C5418 - C5417) * C50224 +
             C5427 * C49168 + C5428 * C49955) *
                C50290 +
            ((C5422 - C5421) * C49175 + (C5424 - C5423) * C50224 +
             C5429 * C49168 + C5430 * C49955) *
                C50291 +
            (C7290 * C49175 + C7291 * C50224 + C5453 * C49168 +
             C5454 * C49955) *
                C43894) *
               C444 +
           (C44200 * C50290 +
            (C38757 * C49175 + C38758 * C50224 + C5455 * C49168 +
             C5456 * C49955) *
                C50291 +
            ((C7294 - C7295) * C49175 + (C7296 - C7297) * C50224 +
             (C5439 - C5440) * C49168 + (C5441 - C5442) * C49955) *
                C43894) *
               C445) *
              C997 +
          ((((C117 * C281 - C50094 * C291) * C49175 +
             (C117 * C292 - C50094 * C311) * C50224 + (C322 - C323) * C49168 +
             (C324 - C325) * C49955) *
                C50290 +
            ((C5967 - C5968) * C49175 + (C5969 - C5970) * C50224 +
             C5971 * C49168 + C5972 * C49955) *
                C50291 +
            C45084 * C43894) *
               C443 +
           (((C5968 - C5967) * C49175 + (C5970 - C5969) * C50224 +
             C5979 * C49168 + C5980 * C49955) *
                C50290 +
            ((C5974 - C5973) * C49175 + (C5976 - C5975) * C50224 +
             C5981 * C49168 + C5982 * C49955) *
                C50291 +
            ((C6389 - C6390) * C49175 + (C6391 - C6392) * C50224 +
             (C5983 - C5984) * C49168 + (C5985 - C5986) * C49955) *
                C43894) *
               C444 +
           (C45084 * C50290 +
            (C39359 * C49175 + C39360 * C50224 + (C5984 - C5983) * C49168 +
             (C5986 - C5985) * C49955) *
                C50291 +
            ((C39362 - C39361) * C49175 + (C39364 - C39363) * C50224 +
             (C117 * C6377 - C50094 * C6380) * C49168 +
             (C117 * C6381 - C50094 * C6383) * C49955) *
                C43894) *
               C445) *
              C50049) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[203] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50094 * C129 - C117 * C122) * C49175 +
              (C50094 * C143 - C117 * C130) * C50224 + (C151 - C152) * C49168 +
              (C153 - C154) * C49955) *
                 C50290 +
             ((C5415 - C5416) * C49175 + (C5417 - C5418) * C50224 +
              C5419 * C49168 + C5420 * C49955) *
                 C50291 +
             C44200 * C43894) *
                C50240 +
            (((C5416 - C5415) * C49175 + (C5418 - C5417) * C50224 +
              C5427 * C49168 + C5428 * C49955) *
                 C50290 +
             ((C5422 - C5421) * C49175 + (C5424 - C5423) * C50224 +
              C5429 * C49168 + C5430 * C49955) *
                 C50291 +
             (C7290 * C49175 + C7291 * C50224 + C5453 * C49168 +
              C5454 * C49955) *
                 C43894) *
                C50077) *
               C997 +
           ((((C117 * C281 - C50094 * C291) * C49175 +
              (C117 * C292 - C50094 * C311) * C50224 + (C322 - C323) * C49168 +
              (C324 - C325) * C49955) *
                 C50290 +
             ((C5967 - C5968) * C49175 + (C5969 - C5970) * C50224 +
              C5971 * C49168 + C5972 * C49955) *
                 C50291 +
             C45084 * C43894) *
                C50240 +
            (((C5968 - C5967) * C49175 + (C5970 - C5969) * C50224 +
              C5979 * C49168 + C5980 * C49955) *
                 C50290 +
             ((C5974 - C5973) * C49175 + (C5976 - C5975) * C50224 +
              C5981 * C49168 + C5982 * C49955) *
                 C50291 +
             ((C6389 - C6390) * C49175 + (C6391 - C6392) * C50224 +
              (C5983 - C5984) * C49168 + (C5985 - C5986) * C49955) *
                 C43894) *
                C50077) *
               C50049) *
              C50231 +
          (((((C152 - C151) * C49175 + (C154 - C153) * C50224 +
              (C156 - C155) * C49168 + (C158 - C157) * C49955) *
                 C50290 +
             (C5427 * C49175 + C5428 * C50224 + C730 * C49168 + C731 * C49955) *
                 C50291 +
             C44201 * C43894) *
                C50240 +
            ((C5419 * C49175 + C5420 * C50224 + C5765 * C49168 +
              C5766 * C49955) *
                 C50290 +
             (C5425 * C49175 + C5426 * C50224 + C5767 * C49168 +
              C5768 * C49955) *
                 C50291 +
             (C5455 * C49175 + C5456 * C50224 + (C5445 - C5446) * C49168 +
              (C5447 - C5448) * C49955) *
                 C43894) *
                C50077) *
               C997 +
           ((((C323 - C322) * C49175 + (C325 - C324) * C50224 +
              (C327 - C326) * C49168 + (C329 - C328) * C49955) *
                 C50290 +
             (C5979 * C49175 + C5980 * C50224 + C11465 * C49168 +
              C11466 * C49955) *
                 C50291 +
             (C5981 * C49175 + C5982 * C50224 + (C5615 - C5616) * C49168 +
              (C5617 - C5618) * C49955) *
                 C43894) *
                C50240 +
            ((C5971 * C49175 + C5972 * C50224 + C11121 * C49168 +
              C11122 * C49955) *
                 C50290 +
             (C5977 * C49175 + C5978 * C50224 + (C5616 - C5615) * C49168 +
              (C5618 - C5617) * C49955) *
                 C50291 +
             ((C5984 - C5983) * C49175 + (C5986 - C5985) * C50224 +
              (C117 * C5962 - C50094 * C5963) * C49168 +
              (C117 * C5964 - C50094 * C5965) * C49955) *
                 C43894) *
                C50077) *
               C50049) *
              C49984)) /
        (p * q * std::sqrt(p + q));
    d2ee[204] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C49175 +
             (C50094 * C143 - C117 * C130) * C50224 + (C151 - C152) * C49168 +
             (C153 - C154) * C49955) *
                C50290 +
            ((C5415 - C5416) * C49175 + (C5417 - C5418) * C50224 +
             C5419 * C49168 + C5420 * C49955) *
                C50291 +
            C44200 * C43894) *
               C50013 * C997 +
           (((C117 * C281 - C50094 * C291) * C49175 +
             (C117 * C292 - C50094 * C311) * C50224 + (C322 - C323) * C49168 +
             (C324 - C325) * C49955) *
                C50290 +
            ((C5967 - C5968) * C49175 + (C5969 - C5970) * C50224 +
             C5971 * C49168 + C5972 * C49955) *
                C50291 +
            (C6385 * C49175 + C6386 * C50224 + C5977 * C49168 +
             C5978 * C49955) *
                C43894) *
               C50013 * C50049) *
              C999 +
          ((((C152 - C151) * C49175 + (C154 - C153) * C50224 +
             (C156 - C155) * C49168 + (C158 - C157) * C49955) *
                C50290 +
            (C5427 * C49175 + C5428 * C50224 + C730 * C49168 + C731 * C49955) *
                C50291 +
            C44201 * C43894) *
               C50013 * C997 +
           (((C323 - C322) * C49175 + (C325 - C324) * C50224 +
             (C327 - C326) * C49168 + (C329 - C328) * C49955) *
                C50290 +
            (C5979 * C49175 + C5980 * C50224 + C11465 * C49168 +
             C11466 * C49955) *
                C50291 +
            (C5981 * C49175 + C5982 * C50224 + (C5615 - C5616) * C49168 +
             (C5617 - C5618) * C49955) *
                C43894) *
               C50013 * C50049) *
              C1000 +
          (((C171 * C49175 + C172 * C50224 + C173 * C49168 + C174 * C49955) *
                C50290 +
            (C5765 * C49175 + C5766 * C50224 + C11269 * C49168 +
             C11270 * C49955) *
                C50291 +
            (C5767 * C49175 + C5768 * C50224 + (C507 - C508) * C49168 +
             (C509 - C510) * C49955) *
                C43894) *
               C50013 * C997 +
           ((C618 * C49175 + C619 * C50224 + C620 * C49168 + C621 * C49955) *
                C50290 +
            (C11121 * C49175 + C11122 * C50224 + (C897 - C896) * C49168 +
             (C899 - C898) * C49955) *
                C50291 +
            ((C5616 - C5615) * C49175 + (C5618 - C5617) * C50224 +
             (C117 * C1190 - C50094 * C1197) * C49168 +
             (C117 * C1198 - C50094 * C1202) * C49955) *
                C43894) *
               C50013 * C50049) *
              C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C49175 +
            (C50094 * C143 - C117 * C130) * C50224 + (C151 - C152) * C49168 +
            (C153 - C154) * C49955) *
               C50290 +
           ((C5415 - C5416) * C49175 + (C5417 - C5418) * C50224 +
            C5419 * C49168 + C5420 * C49955) *
               C50291 +
           C44200 * C43894) *
              C50013 * C1068 +
          (((C117 * C281 - C50094 * C291) * C49175 +
            (C117 * C292 - C50094 * C311) * C50224 + (C322 - C323) * C49168 +
            (C324 - C325) * C49955) *
               C50290 +
           ((C5967 - C5968) * C49175 + (C5969 - C5970) * C50224 +
            C5971 * C49168 + C5972 * C49955) *
               C50291 +
           (C6385 * C49175 + C6386 * C50224 + C5977 * C49168 + C5978 * C49955) *
               C43894) *
              C50013 * C1069 +
          (((C50094 * C299 - C117 * C285) * C49175 +
            (C50094 * C315 - C117 * C300) * C50224 + (C334 - C335) * C49168 +
            (C336 - C337) * C49955) *
               C50290 +
           ((C6884 - C6885) * C49175 + (C6886 - C6887) * C50224 +
            (C5249 - C5250) * C49168 + (C5251 - C5252) * C49955) *
               C50291 +
           ((C6888 - C6889) * C49175 + (C6890 - C6891) * C50224 +
            (C5253 - C5254) * C49168 + (C5255 - C5256) * C49955) *
               C43894) *
              C50013 * C1070 +
          (((C117 * C1073 - C50094 * C1077) * C49175 +
            (C117 * C1078 - C50094 * C1085) * C50224 +
            (C117 * C1074 - C50094 * C1079) * C49168 +
            (C117 * C1080 - C50094 * C1086) * C49955) *
               C50290 +
           ((C117 * C3181 - C50094 * C3184) * C49175 +
            (C117 * C3185 - C50094 * C3190) * C50224 +
            (C117 * C3182 - C50094 * C3186) * C49168 +
            (C117 * C3187 - C50094 * C3191) * C49955) *
               C50291 +
           ((C117 * C3603 - C50094 * C3605) * C49175 +
            (C117 * C3606 - C50094 * C3609) * C50224 +
            (C117 * C3604 - C50094 * C3607) * C49168 +
            (C117 * C3608 - C50094 * C3610) * C49955) *
               C43894) *
              C50013 * C1071) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[205] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C50094 * C129 - C117 * C122) * C49175 +
              (C50094 * C143 - C117 * C130) * C50224 + (C151 - C152) * C49168 +
              (C153 - C154) * C49955) *
                 C50290 +
             ((C5415 - C5416) * C49175 + (C5417 - C5418) * C50224 +
              C5419 * C49168 + C5420 * C49955) *
                 C50291 +
             C44200 * C43894) *
                C1648 +
            (((C5416 - C5415) * C49175 + (C5418 - C5417) * C50224 +
              C5427 * C49168 + C5428 * C49955) *
                 C50290 +
             ((C5422 - C5421) * C49175 + (C5424 - C5423) * C50224 +
              C5429 * C49168 + C5430 * C49955) *
                 C50291 +
             C45967 * C43894) *
                C50077) *
               C50239 +
           ((((C117 * C281 - C50094 * C291) * C49175 +
              (C117 * C292 - C50094 * C311) * C50224 + (C322 - C323) * C49168 +
              (C324 - C325) * C49955) *
                 C50290 +
             ((C5967 - C5968) * C49175 + (C5969 - C5970) * C50224 +
              C5971 * C49168 + C5972 * C49955) *
                 C50291 +
             C45084 * C43894) *
                C1648 +
            (((C5968 - C5967) * C49175 + (C5970 - C5969) * C50224 +
              C5979 * C49168 + C5980 * C49955) *
                 C50290 +
             ((C5974 - C5973) * C49175 + (C5976 - C5975) * C50224 +
              C5981 * C49168 + C5982 * C49955) *
                 C50291 +
             ((C6389 - C6390) * C49175 + (C6391 - C6392) * C50224 +
              (C5983 - C5984) * C49168 + (C5985 - C5986) * C49955) *
                 C43894) *
                C50077) *
               C50049) *
              C50231 +
          (((((C152 - C151) * C49175 + (C154 - C153) * C50224 +
              (C156 - C155) * C49168 + (C158 - C157) * C49955) *
                 C50290 +
             (C5427 * C49175 + C5428 * C50224 + C730 * C49168 + C731 * C49955) *
                 C50291 +
             C44201 * C43894) *
                C1648 +
            ((C5419 * C49175 + C5420 * C50224 + C5765 * C49168 +
              C5766 * C49955) *
                 C50290 +
             (C5425 * C49175 + C5426 * C50224 + C5767 * C49168 +
              C5768 * C49955) *
                 C50291 +
             (C5455 * C49175 + C5456 * C50224 + (C5445 - C5446) * C49168 +
              (C5447 - C5448) * C49955) *
                 C43894) *
                C50077) *
               C50239 +
           ((((C323 - C322) * C49175 + (C325 - C324) * C50224 +
              (C327 - C326) * C49168 + (C329 - C328) * C49955) *
                 C50290 +
             (C5979 * C49175 + C5980 * C50224 + C11465 * C49168 +
              C11466 * C49955) *
                 C50291 +
             (C5981 * C49175 + C5982 * C50224 + (C5615 - C5616) * C49168 +
              (C5617 - C5618) * C49955) *
                 C43894) *
                C1648 +
            ((C5971 * C49175 + C5972 * C50224 + C11121 * C49168 +
              C11122 * C49955) *
                 C50290 +
             (C5977 * C49175 + C5978 * C50224 + (C5616 - C5615) * C49168 +
              (C5618 - C5617) * C49955) *
                 C50291 +
             ((C5984 - C5983) * C49175 + (C5986 - C5985) * C50224 +
              (C117 * C5962 - C50094 * C5963) * C49168 +
              (C117 * C5964 - C50094 * C5965) * C49955) *
                 C43894) *
                C50077) *
               C50049) *
              C49984)) /
        (p * q * std::sqrt(p + q));
    d2ee[206] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C50094 * C129 - C117 * C122) * C49175 +
                      (C50094 * C143 - C117 * C130) * C50224 +
                      (C151 - C152) * C49168 + (C153 - C154) * C49955) *
                         C50290 +
                     ((C5415 - C5416) * C49175 + (C5417 - C5418) * C50224 +
                      C5419 * C49168 + C5420 * C49955) *
                         C50291 +
                     C44200 * C43894) *
                        C50286 +
                    (((C5416 - C5415) * C49175 + (C5418 - C5417) * C50224 +
                      C5427 * C49168 + C5428 * C49955) *
                         C50290 +
                     ((C5422 - C5421) * C49175 + (C5424 - C5423) * C50224 +
                      C5429 * C49168 + C5430 * C49955) *
                         C50291 +
                     C45967 * C43894) *
                        C50287 +
                    (C44200 * C50290 +
                     (C38757 * C49175 + C38758 * C50224 + C5455 * C49168 +
                      C5456 * C49955) *
                         C50291 +
                     ((C7294 - C7295) * C49175 + (C7296 - C7297) * C50224 +
                      (C5439 - C5440) * C49168 + (C5441 - C5442) * C49955) *
                         C43894) *
                        C2064) *
                       C50239 +
                   ((((C117 * C281 - C50094 * C291) * C49175 +
                      (C117 * C292 - C50094 * C311) * C50224 +
                      (C322 - C323) * C49168 + (C324 - C325) * C49955) *
                         C50290 +
                     ((C5967 - C5968) * C49175 + (C5969 - C5970) * C50224 +
                      C5971 * C49168 + C5972 * C49955) *
                         C50291 +
                     C45084 * C43894) *
                        C50286 +
                    (((C5968 - C5967) * C49175 + (C5970 - C5969) * C50224 +
                      C5979 * C49168 + C5980 * C49955) *
                         C50290 +
                     ((C5974 - C5973) * C49175 + (C5976 - C5975) * C50224 +
                      C5981 * C49168 + C5982 * C49955) *
                         C50291 +
                     ((C6389 - C6390) * C49175 + (C6391 - C6392) * C50224 +
                      (C5983 - C5984) * C49168 + (C5985 - C5986) * C49955) *
                         C43894) *
                        C50287 +
                    (C45084 * C50290 +
                     (C39359 * C49175 + C39360 * C50224 +
                      (C5984 - C5983) * C49168 + (C5986 - C5985) * C49955) *
                         C50291 +
                     ((C39362 - C39361) * C49175 + (C39364 - C39363) * C50224 +
                      (C117 * C6377 - C50094 * C6380) * C49168 +
                      (C117 * C6381 - C50094 * C6383) * C49955) *
                         C43894) *
                        C2064) *
                       C50049) *
                  C49978) /
                 (p * q * std::sqrt(p + q));
    d2ee[207] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C49175 +
             (C50094 * C143 - C117 * C130) * C50224 + (C151 - C152) * C49168 +
             (C153 - C154) * C49955) *
                C50290 +
            ((C5415 - C5416) * C49175 + (C5417 - C5418) * C50224 +
             C5419 * C49168 + C5420 * C49955) *
                C50291 +
            C44200 * C43894) *
               C1648 +
           (((C5416 - C5415) * C49175 + (C5418 - C5417) * C50224 +
             C5427 * C49168 + C5428 * C49955) *
                C50290 +
            ((C5422 - C5421) * C49175 + (C5424 - C5423) * C50224 +
             C5429 * C49168 + C5430 * C49955) *
                C50291 +
            (C7290 * C49175 + C7291 * C50224 + C5453 * C49168 +
             C5454 * C49955) *
                C43894) *
               C50077) *
              C276 +
          ((((C117 * C281 - C50094 * C291) * C49175 +
             (C117 * C292 - C50094 * C311) * C50224 + (C322 - C323) * C49168 +
             (C324 - C325) * C49955) *
                C50290 +
            ((C5967 - C5968) * C49175 + (C5969 - C5970) * C50224 +
             C5971 * C49168 + C5972 * C49955) *
                C50291 +
            C45084 * C43894) *
               C1648 +
           (((C5968 - C5967) * C49175 + (C5970 - C5969) * C50224 +
             C5979 * C49168 + C5980 * C49955) *
                C50290 +
            ((C5974 - C5973) * C49175 + (C5976 - C5975) * C50224 +
             C5981 * C49168 + C5982 * C49955) *
                C50291 +
            ((C6389 - C6390) * C49175 + (C6391 - C6392) * C50224 +
             (C5983 - C5984) * C49168 + (C5985 - C5986) * C49955) *
                C43894) *
               C50077) *
              C277 +
          ((((C50094 * C299 - C117 * C285) * C49175 +
             (C50094 * C315 - C117 * C300) * C50224 + (C334 - C335) * C49168 +
             (C336 - C337) * C49955) *
                C50290 +
            ((C6884 - C6885) * C49175 + (C6886 - C6887) * C50224 +
             (C5249 - C5250) * C49168 + (C5251 - C5252) * C49955) *
                C50291 +
            ((C6888 - C6889) * C49175 + (C6890 - C6891) * C50224 +
             (C5253 - C5254) * C49168 + (C5255 - C5256) * C49955) *
                C43894) *
               C1648 +
           (((C6885 - C6884) * C49175 + (C6887 - C6886) * C50224 +
             (C5250 - C5249) * C49168 + (C5252 - C5251) * C49955) *
                C50290 +
            ((C6889 - C6888) * C49175 + (C6891 - C6890) * C50224 +
             (C5254 - C5253) * C49168 + (C5256 - C5255) * C49955) *
                C50291 +
            ((C39696 - C39695) * C49175 + (C39698 - C39697) * C50224 +
             (C117 * C4498 - C50094 * C4504) * C49168 +
             (C117 * C4506 - C50094 * C4510) * C49955) *
                C43894) *
               C50077) *
              C278) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C49175 +
             (C50094 * C143 - C117 * C130) * C50224 + (C151 - C152) * C49168 +
             (C153 - C154) * C49955) *
                C50290 +
            ((C5415 - C5416) * C49175 + (C5417 - C5418) * C50224 +
             C5419 * C49168 + C5420 * C49955) *
                C50291 +
            C44200 * C43894) *
               C1648 +
           (((C5416 - C5415) * C49175 + (C5418 - C5417) * C50224 +
             C5427 * C49168 + C5428 * C49955) *
                C50290 +
            ((C5422 - C5421) * C49175 + (C5424 - C5423) * C50224 +
             C5429 * C49168 + C5430 * C49955) *
                C50291 +
            (C7290 * C49175 + C7291 * C50224 + C5453 * C49168 +
             C5454 * C49955) *
                C43894) *
               C50077) *
              C49997 * C999 +
          ((((C152 - C151) * C49175 + (C154 - C153) * C50224 +
             (C156 - C155) * C49168 + (C158 - C157) * C49955) *
                C50290 +
            (C5427 * C49175 + C5428 * C50224 + C730 * C49168 + C731 * C49955) *
                C50291 +
            C44201 * C43894) *
               C1648 +
           ((C5419 * C49175 + C5420 * C50224 + C5765 * C49168 +
             C5766 * C49955) *
                C50290 +
            (C5425 * C49175 + C5426 * C50224 + C5767 * C49168 +
             C5768 * C49955) *
                C50291 +
            (C5455 * C49175 + C5456 * C50224 + (C5445 - C5446) * C49168 +
             (C5447 - C5448) * C49955) *
                C43894) *
               C50077) *
              C49997 * C1000 +
          (((C171 * C49175 + C172 * C50224 + C173 * C49168 + C174 * C49955) *
                C50290 +
            (C5765 * C49175 + C5766 * C50224 + C11269 * C49168 +
             C11270 * C49955) *
                C50291 +
            (C5767 * C49175 + C5768 * C50224 + (C507 - C508) * C49168 +
             (C509 - C510) * C49955) *
                C43894) *
               C1648 +
           ((C730 * C49175 + C731 * C50224 + C732 * C49168 + C733 * C49955) *
                C50290 +
            (C5443 * C49175 + C5444 * C50224 + (C508 - C507) * C49168 +
             (C510 - C509) * C49955) *
                C50291 +
            ((C5446 - C5445) * C49175 + (C5448 - C5447) * C50224 +
             (C117 * C1821 - C50094 * C1828) * C49168 +
             (C117 * C1829 - C50094 * C1833) * C49955) *
                C43894) *
               C50077) *
              C49997 * C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C49175 +
            (C50094 * C143 - C117 * C130) * C50224 + (C151 - C152) * C49168 +
            (C153 - C154) * C49955) *
               C50290 +
           ((C5415 - C5416) * C49175 + (C5417 - C5418) * C50224 +
            C5419 * C49168 + C5420 * C49955) *
               C50291 +
           C44200 * C43894) *
              C1814 +
          (((C5416 - C5415) * C49175 + (C5418 - C5417) * C50224 +
            C5427 * C49168 + C5428 * C49955) *
               C50290 +
           ((C5422 - C5421) * C49175 + (C5424 - C5423) * C50224 +
            C5429 * C49168 + C5430 * C49955) *
               C50291 +
           C45967 * C43894) *
              C1815 +
          (C44200 * C50290 +
           (C38757 * C49175 + C38758 * C50224 + C5455 * C49168 +
            C5456 * C49955) *
               C50291 +
           ((C7294 - C7295) * C49175 + (C7296 - C7297) * C50224 +
            (C5439 - C5440) * C49168 + (C5441 - C5442) * C49955) *
               C43894) *
              C1816 +
          (C45967 * C50290 +
           (C39967 * C49175 + C39968 * C50224 + (C5440 - C5439) * C49168 +
            (C5442 - C5441) * C49955) *
               C50291 +
           ((C39970 - C39969) * C49175 + (C39972 - C39971) * C50224 +
            (C117 * C7282 - C50094 * C7285) * C49168 +
            (C117 * C7286 - C50094 * C7288) * C49955) *
               C43894) *
              C1817) *
         C49997 * C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[208] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C49175 +
             (C50094 * C143 - C117 * C130) * C50224 + (C151 - C152) * C49168 +
             (C153 - C154) * C49955) *
                C50290 +
            ((C5415 - C5416) * C49175 + (C5417 - C5418) * C50224 +
             C5419 * C49168 + C5420 * C49955) *
                C50291 +
            C44200 * C43894) *
               C50286 +
           (((C5416 - C5415) * C49175 + (C5418 - C5417) * C50224 +
             C5427 * C49168 + C5428 * C49955) *
                C50290 +
            ((C5422 - C5421) * C49175 + (C5424 - C5423) * C50224 +
             C5429 * C49168 + C5430 * C49955) *
                C50291 +
            C45967 * C43894) *
               C50287 +
           (C44200 * C50290 +
            (C38757 * C49175 + C38758 * C50224 + C5455 * C49168 +
             C5456 * C49955) *
                C50291 +
            ((C7294 - C7295) * C49175 + (C7296 - C7297) * C50224 +
             (C5439 - C5440) * C49168 + (C5441 - C5442) * C49955) *
                C43894) *
               C2064) *
              C49997 * C50231 +
          ((((C152 - C151) * C49175 + (C154 - C153) * C50224 +
             (C156 - C155) * C49168 + (C158 - C157) * C49955) *
                C50290 +
            (C5427 * C49175 + C5428 * C50224 + C730 * C49168 + C731 * C49955) *
                C50291 +
            C44201 * C43894) *
               C50286 +
           ((C5419 * C49175 + C5420 * C50224 + C5765 * C49168 +
             C5766 * C49955) *
                C50290 +
            (C5425 * C49175 + C5426 * C50224 + C5767 * C49168 +
             C5768 * C49955) *
                C50291 +
            (C5455 * C49175 + C5456 * C50224 + (C5445 - C5446) * C49168 +
             (C5447 - C5448) * C49955) *
                C43894) *
               C50287 +
           (C44201 * C50290 +
            (C5453 * C49175 + C5454 * C50224 + (C5446 - C5445) * C49168 +
             (C5448 - C5447) * C49955) *
                C50291 +
            ((C5440 - C5439) * C49175 + (C5442 - C5441) * C50224 +
             (C117 * C5404 - C50094 * C5409) * C49168 +
             (C117 * C5410 - C50094 * C5413) * C49955) *
                C43894) *
               C2064) *
              C49997 * C49984)) /
        (p * q * std::sqrt(p + q));
    d2ee[209] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C49175 +
             (C50094 * C143 - C117 * C130) * C50224 + (C151 - C152) * C49168 +
             (C153 - C154) * C49955) *
                C50290 +
            ((C5415 - C5416) * C49175 + (C5417 - C5418) * C50224 +
             C5419 * C49168 + C5420 * C49955) *
                C50291 +
            C44200 * C43894) *
               C1648 +
           (((C5416 - C5415) * C49175 + (C5418 - C5417) * C50224 +
             C5427 * C49168 + C5428 * C49955) *
                C50290 +
            ((C5422 - C5421) * C49175 + (C5424 - C5423) * C50224 +
             C5429 * C49168 + C5430 * C49955) *
                C50291 +
            (C7290 * C49175 + C7291 * C50224 + C5453 * C49168 +
             C5454 * C49955) *
                C43894) *
               C50077) *
              C49997 * C999 +
          ((((C152 - C151) * C49175 + (C154 - C153) * C50224 +
             (C156 - C155) * C49168 + (C158 - C157) * C49955) *
                C50290 +
            (C5427 * C49175 + C5428 * C50224 + C730 * C49168 + C731 * C49955) *
                C50291 +
            C44201 * C43894) *
               C1648 +
           ((C5419 * C49175 + C5420 * C50224 + C5765 * C49168 +
             C5766 * C49955) *
                C50290 +
            (C5425 * C49175 + C5426 * C50224 + C5767 * C49168 +
             C5768 * C49955) *
                C50291 +
            (C5455 * C49175 + C5456 * C50224 + (C5445 - C5446) * C49168 +
             (C5447 - C5448) * C49955) *
                C43894) *
               C50077) *
              C49997 * C1000 +
          (((C171 * C49175 + C172 * C50224 + C173 * C49168 + C174 * C49955) *
                C50290 +
            (C5765 * C49175 + C5766 * C50224 + C11269 * C49168 +
             C11270 * C49955) *
                C50291 +
            (C5767 * C49175 + C5768 * C50224 + (C507 - C508) * C49168 +
             (C509 - C510) * C49955) *
                C43894) *
               C1648 +
           ((C730 * C49175 + C731 * C50224 + C732 * C49168 + C733 * C49955) *
                C50290 +
            (C5443 * C49175 + C5444 * C50224 + (C508 - C507) * C49168 +
             (C510 - C509) * C49955) *
                C50291 +
            ((C5446 - C5445) * C49175 + (C5448 - C5447) * C50224 +
             (C117 * C1821 - C50094 * C1828) * C49168 +
             (C117 * C1829 - C50094 * C1833) * C49955) *
                C43894) *
               C50077) *
              C49997 * C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C49175 +
             (C50094 * C143 - C117 * C130) * C50224 + (C151 - C152) * C49168 +
             (C153 - C154) * C49955) *
                C50290 +
            ((C5415 - C5416) * C49175 + (C5417 - C5418) * C50224 +
             C5419 * C49168 + C5420 * C49955) *
                C50291 +
            C44200 * C43894) *
               C1648 +
           (((C5416 - C5415) * C49175 + (C5418 - C5417) * C50224 +
             C5427 * C49168 + C5428 * C49955) *
                C50290 +
            ((C5422 - C5421) * C49175 + (C5424 - C5423) * C50224 +
             C5429 * C49168 + C5430 * C49955) *
                C50291 +
            (C7290 * C49175 + C7291 * C50224 + C5453 * C49168 +
             C5454 * C49955) *
                C43894) *
               C50077) *
              C276 +
          ((((C117 * C281 - C50094 * C291) * C49175 +
             (C117 * C292 - C50094 * C311) * C50224 + (C322 - C323) * C49168 +
             (C324 - C325) * C49955) *
                C50290 +
            ((C5967 - C5968) * C49175 + (C5969 - C5970) * C50224 +
             C5971 * C49168 + C5972 * C49955) *
                C50291 +
            C45084 * C43894) *
               C1648 +
           (((C5968 - C5967) * C49175 + (C5970 - C5969) * C50224 +
             C5979 * C49168 + C5980 * C49955) *
                C50290 +
            ((C5974 - C5973) * C49175 + (C5976 - C5975) * C50224 +
             C5981 * C49168 + C5982 * C49955) *
                C50291 +
            ((C6389 - C6390) * C49175 + (C6391 - C6392) * C50224 +
             (C5983 - C5984) * C49168 + (C5985 - C5986) * C49955) *
                C43894) *
               C50077) *
              C277 +
          ((((C50094 * C299 - C117 * C285) * C49175 +
             (C50094 * C315 - C117 * C300) * C50224 + (C334 - C335) * C49168 +
             (C336 - C337) * C49955) *
                C50290 +
            ((C6884 - C6885) * C49175 + (C6886 - C6887) * C50224 +
             (C5249 - C5250) * C49168 + (C5251 - C5252) * C49955) *
                C50291 +
            ((C6888 - C6889) * C49175 + (C6890 - C6891) * C50224 +
             (C5253 - C5254) * C49168 + (C5255 - C5256) * C49955) *
                C43894) *
               C1648 +
           (((C6885 - C6884) * C49175 + (C6887 - C6886) * C50224 +
             (C5250 - C5249) * C49168 + (C5252 - C5251) * C49955) *
                C50290 +
            ((C6889 - C6888) * C49175 + (C6891 - C6890) * C50224 +
             (C5254 - C5253) * C49168 + (C5256 - C5255) * C49955) *
                C50291 +
            ((C39696 - C39695) * C49175 + (C39698 - C39697) * C50224 +
             (C117 * C4498 - C50094 * C4504) * C49168 +
             (C117 * C4506 - C50094 * C4510) * C49955) *
                C43894) *
               C50077) *
              C278) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[210] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C16929 +
             (C50094 * C143 - C117 * C130) * C16924 + (C151 - C152) * C16930 +
             (C153 - C154) * C16925 + C171 * C16931 + C172 * C16926) *
                C33256 +
            ((C5415 - C5416) * C16929 + (C5417 - C5418) * C16924 +
             C5419 * C16930 + C5420 * C16925 + C5765 * C16931 +
             C5766 * C16926) *
                C50174) *
               C50013 * C50239 +
           (((C117 * C281 - C50094 * C291) * C16929 +
             (C117 * C292 - C50094 * C311) * C16924 + (C322 - C323) * C16930 +
             (C324 - C325) * C16925 + C618 * C16931 + C619 * C16926) *
                C33256 +
            ((C5967 - C5968) * C16929 + (C5969 - C5970) * C16924 +
             C5971 * C16930 + C5972 * C16925 + C11121 * C16931 +
             C11122 * C16926) *
                C50174) *
               C50013 * C50049) *
              C50282 +
          ((((C152 - C151) * C16929 + (C154 - C153) * C16924 +
             (C156 - C155) * C16930 + (C158 - C157) * C16925 + C175 * C16931 +
             C176 * C16926) *
                C33256 +
            (C5427 * C16929 + C5428 * C16924 + C730 * C16930 + C731 * C16925 +
             C732 * C16931 + C733 * C16926) *
                C50174) *
               C50013 * C50239 +
           (((C323 - C322) * C16929 + (C325 - C324) * C16924 +
             (C327 - C326) * C16930 + (C329 - C328) * C16925 +
             (C331 - C330) * C16931 + (C333 - C332) * C16926) *
                C33256 +
            (C5979 * C16929 + C5980 * C16924 + C11465 * C16930 +
             C11466 * C16925 + (C896 - C897) * C16931 +
             (C898 - C899) * C16926) *
                C50174) *
               C50013 * C50049) *
              C50283 +
          (((C171 * C16929 + C172 * C16924 + C173 * C16930 + C174 * C16925 +
             (C164 - C163) * C16931 + (C166 - C165) * C16926) *
                C33256 +
            (C5765 * C16929 + C5766 * C16924 + C11269 * C16930 +
             C11270 * C16925 + (C734 - C735) * C16931 +
             (C736 - C737) * C16926) *
                C50174) *
               C50013 * C50239 +
           ((C618 * C16929 + C619 * C16924 + C620 * C16930 + C621 * C16925 +
             (C623 - C622) * C16931 + (C625 - C624) * C16926) *
                C33256 +
            (C11121 * C16929 + C11122 * C16924 + (C897 - C896) * C16930 +
             (C899 - C898) * C16925 + (C117 * C871 - C50094 * C880) * C16931 +
             (C117 * C881 - C50094 * C886) * C16926) *
                C50174) *
               C50013 * C50049) *
              C612)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
              C2263 * C299 - C2268 * C285) *
                 C19689 +
             (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
              C2263 * C315 - C2268 * C300) *
                 C49950) *
                C33256 +
            ((C36179 - C36180 + C36181 - C36182 + C36183 - C36184) * C19689 +
             (C36185 - C36186 + C36187 - C36188 + C36189 - C36190) * C49950) *
                C50174) *
               C50013 * C50239 +
           (((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
              C2268 * C1073 - C2263 * C1077) *
                 C19689 +
             (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
              C2268 * C1078 - C2263 * C1085) *
                 C49950) *
                C33256 +
            ((C2266 * C867 - C2261 * C872 + C2267 * C1534 - C2262 * C1538 +
              C2268 * C3181 - C2263 * C3184) *
                 C19689 +
             (C2266 * C873 - C2261 * C882 + C2267 * C1539 - C2262 * C1546 +
              C2268 * C3185 - C2263 * C3190) *
                 C49950) *
                C50174) *
               C50013 * C50049) *
              C50282 +
          ((((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C19689 +
             (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C49950) *
                C33256 +
            ((C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C19689 +
             (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49950) *
                C50174) *
               C50013 * C50239 +
           (((C2467 - C2466 + C2469 - C2468 + C2471 - C2470) * C19689 +
             (C2473 - C2472 + C2475 - C2474 + C2477 - C2476) * C49950) *
                C33256 +
            ((C3194 - C3195 + C3196 - C3197 + C3198 - C3199) * C19689 +
             (C3200 - C3201 + C3202 - C3203 + C3204 - C3205) * C49950) *
                C50174) *
               C50013 * C50049) *
              C50283 +
          ((((C2285 - C2284 + C2287 - C2286 + C2289 - C2288) * C19689 +
             (C2291 - C2290 + C2293 - C2292 + C2295 - C2294) * C49950) *
                C33256 +
            ((C2976 - C2977 + C2978 - C2979 + C2980 - C2981) * C19689 +
             (C2982 - C2983 + C2984 - C2985 + C2986 - C2987) * C49950) *
                C50174) *
               C50013 * C50239 +
           (((C2819 - C2818 + C2821 - C2820 + C2823 - C2822) * C19689 +
             (C2825 - C2824 + C2827 - C2826 + C2829 - C2828) * C49950) *
                C33256 +
            ((C2266 * C869 - C2261 * C876 + C2267 * C1536 - C2262 * C1542 +
              C2268 * C3183 - C2263 * C3188) *
                 C19689 +
             (C2266 * C877 - C2261 * C884 + C2267 * C1543 - C2262 * C1548 +
              C2268 * C3189 - C2263 * C3192) *
                 C49950) *
                C50174) *
               C50013 * C50049) *
              C612)) /
            (p * q * std::sqrt(p + q));
    d2ee[211] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C50094 * C129 - C117 * C122) * C16929 +
              (C50094 * C143 - C117 * C130) * C16924 + (C151 - C152) * C16930 +
              (C153 - C154) * C16925 + C171 * C16931 + C172 * C16926) *
                 C33256 +
             ((C5415 - C5416) * C16929 + (C5417 - C5418) * C16924 +
              C5419 * C16930 + C5420 * C16925 + C5765 * C16931 +
              C5766 * C16926) *
                 C50174) *
                C50240 +
            (((C5416 - C5415) * C16929 + (C5418 - C5417) * C16924 +
              C5427 * C16930 + C5428 * C16925 + C730 * C16931 + C731 * C16926) *
                 C33256 +
             ((C5422 - C5421) * C16929 + (C5424 - C5423) * C16924 +
              C5429 * C16930 + C5430 * C16925 + C5443 * C16931 +
              C5444 * C16926) *
                 C50174) *
                C50077) *
               C50239 +
           ((((C117 * C281 - C50094 * C291) * C16929 +
              (C117 * C292 - C50094 * C311) * C16924 + (C322 - C323) * C16930 +
              (C324 - C325) * C16925 + C618 * C16931 + C619 * C16926) *
                 C33256 +
             ((C5967 - C5968) * C16929 + (C5969 - C5970) * C16924 +
              C5971 * C16930 + C5972 * C16925 + C11121 * C16931 +
              C11122 * C16926) *
                 C50174) *
                C50240 +
            (((C5968 - C5967) * C16929 + (C5970 - C5969) * C16924 +
              C5979 * C16930 + C5980 * C16925 + C11465 * C16931 +
              C11466 * C16926) *
                 C33256 +
             ((C5974 - C5973) * C16929 + (C5976 - C5975) * C16924 +
              C5981 * C16930 + C5982 * C16925 + (C5615 - C5616) * C16931 +
              (C5617 - C5618) * C16926) *
                 C50174) *
                C50077) *
               C50049) *
              C279 +
          (((((C152 - C151) * C16929 + (C154 - C153) * C16924 +
              (C156 - C155) * C16930 + (C158 - C157) * C16925 + C175 * C16931 +
              C176 * C16926) *
                 C33256 +
             (C5427 * C16929 + C5428 * C16924 + C730 * C16930 + C731 * C16925 +
              C732 * C16931 + C733 * C16926) *
                 C50174) *
                C50240 +
            ((C5419 * C16929 + C5420 * C16924 + C5765 * C16930 +
              C5766 * C16925 + C11269 * C16931 + C11270 * C16926) *
                 C33256 +
             (C5425 * C16929 + C5426 * C16924 + C5767 * C16930 +
              C5768 * C16925 + (C507 - C508) * C16931 +
              (C509 - C510) * C16926) *
                 C50174) *
                C50077) *
               C50239 +
           ((((C323 - C322) * C16929 + (C325 - C324) * C16924 +
              (C327 - C326) * C16930 + (C329 - C328) * C16925 +
              (C331 - C330) * C16931 + (C333 - C332) * C16926) *
                 C33256 +
             (C5979 * C16929 + C5980 * C16924 + C11465 * C16930 +
              C11466 * C16925 + (C896 - C897) * C16931 +
              (C898 - C899) * C16926) *
                 C50174) *
                C50240 +
            ((C5971 * C16929 + C5972 * C16924 + C11121 * C16930 +
              C11122 * C16925 + (C897 - C896) * C16931 +
              (C899 - C898) * C16926) *
                 C33256 +
             (C5977 * C16929 + C5978 * C16924 + (C5616 - C5615) * C16930 +
              (C5618 - C5617) * C16925 +
              (C117 * C1190 - C50094 * C1197) * C16931 +
              (C117 * C1198 - C50094 * C1202) * C16926) *
                 C50174) *
                C50077) *
               C50049) *
              C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
               C2263 * C299 - C2268 * C285) *
                  C19689 +
              (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
               C2263 * C315 - C2268 * C300) *
                  C49950) *
                 C33256 +
             ((C36179 - C36180 + C36181 - C36182 + C36183 - C36184) * C19689 +
              (C36185 - C36186 + C36187 - C36188 + C36189 - C36190) * C49950) *
                 C50174) *
                C50240 +
            (((C36180 - C36179 + C36182 - C36181 + C36184 - C36183) * C19689 +
              (C36186 - C36185 + C36188 - C36187 + C36190 - C36189) * C49950) *
                 C33256 +
             ((C36191 - C36192 + C36193 - C36194 + C36195 - C36196) * C19689 +
              (C36197 - C36198 + C36199 - C36200 + C36201 - C36202) * C49950) *
                 C50174) *
                C50077) *
               C50239 +
           ((((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
               C2268 * C1073 - C2263 * C1077) *
                  C19689 +
              (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
               C2268 * C1078 - C2263 * C1085) *
                  C49950) *
                 C33256 +
             ((C36689 - C36690 + C36691 - C36692 + C36693 - C36694) * C19689 +
              (C36695 - C36696 + C36697 - C36698 + C36699 - C36700) * C49950) *
                 C50174) *
                C50240 +
            (((C36690 - C36689 + C36692 - C36691 + C36694 - C36693) * C19689 +
              (C36696 - C36695 + C36698 - C36697 + C36700 - C36699) * C49950) *
                 C33256 +
             ((C2261 * C1191 - C2266 * C1187 + C2262 * C2638 - C2267 * C2635 +
               C2263 * C3605 - C2268 * C3603) *
                  C19689 +
              (C2261 * C1199 - C2266 * C1192 + C2262 * C2644 - C2267 * C2639 +
               C2263 * C3609 - C2268 * C3606) *
                  C49950) *
                 C50174) *
                C50077) *
               C50049) *
              C279 +
          (((((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C19689 +
              (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C49950) *
                 C33256 +
             ((C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C19689 +
              (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49950) *
                 C50174) *
                C50240 +
            (((C2649 - C2648 + C2651 - C2650 + C2653 - C2652) * C19689 +
              (C2655 - C2654 + C2657 - C2656 + C2659 - C2658) * C49950) *
                 C33256 +
             ((C2660 - C2661 + C2662 - C2663 + C2664 - C2665) * C19689 +
              (C2666 - C2667 + C2668 - C2669 + C2670 - C2671) * C49950) *
                 C50174) *
                C50077) *
               C50239 +
           ((((C2467 - C2466 + C2469 - C2468 + C2471 - C2470) * C19689 +
              (C2473 - C2472 + C2475 - C2474 + C2477 - C2476) * C49950) *
                 C33256 +
             ((C3194 - C3195 + C3196 - C3197 + C3198 - C3199) * C19689 +
              (C3200 - C3201 + C3202 - C3203 + C3204 - C3205) * C49950) *
                 C50174) *
                C50240 +
            (((C3195 - C3194 + C3197 - C3196 + C3199 - C3198) * C19689 +
              (C3201 - C3200 + C3203 - C3202 + C3205 - C3204) * C49950) *
                 C33256 +
             ((C2266 * C1188 - C2261 * C1193 + C2267 * C2636 - C2262 * C2640 +
               C2268 * C3604 - C2263 * C3607) *
                  C19689 +
              (C2266 * C1194 - C2261 * C1200 + C2267 * C2641 - C2262 * C2645 +
               C2268 * C3608 - C2263 * C3610) *
                  C49950) *
                 C50174) *
                C50077) *
               C50049) *
              C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[212] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C16929 +
             (C50094 * C143 - C117 * C130) * C16924 + (C151 - C152) * C16930 +
             (C153 - C154) * C16925 + C171 * C16931 + C172 * C16926) *
                C33256 +
            ((C5415 - C5416) * C16929 + (C5417 - C5418) * C16924 +
             C5419 * C16930 + C5420 * C16925 + C5765 * C16931 +
             C5766 * C16926) *
                C50174) *
               C50013 * C276 +
           (((C117 * C281 - C50094 * C291) * C16929 +
             (C117 * C292 - C50094 * C311) * C16924 + (C322 - C323) * C16930 +
             (C324 - C325) * C16925 + C618 * C16931 + C619 * C16926) *
                C33256 +
            ((C5967 - C5968) * C16929 + (C5969 - C5970) * C16924 +
             C5971 * C16930 + C5972 * C16925 + C11121 * C16931 +
             C11122 * C16926) *
                C50174) *
               C50013 * C277 +
           (((C50094 * C299 - C117 * C285) * C16929 +
             (C50094 * C315 - C117 * C300) * C16924 + (C334 - C335) * C16930 +
             (C336 - C337) * C16925 + (C338 - C339) * C16931 +
             (C340 - C341) * C16926) *
                C33256 +
            ((C6884 - C6885) * C16929 + (C6886 - C6887) * C16924 +
             (C5249 - C5250) * C16930 + (C5251 - C5252) * C16925 +
             (C10825 - C10826) * C16931 + (C10827 - C10828) * C16926) *
                C50174) *
               C50013 * C278) *
              C279 +
          ((((C152 - C151) * C16929 + (C154 - C153) * C16924 +
             (C156 - C155) * C16930 + (C158 - C157) * C16925 + C175 * C16931 +
             C176 * C16926) *
                C33256 +
            (C5427 * C16929 + C5428 * C16924 + C730 * C16930 + C731 * C16925 +
             C732 * C16931 + C733 * C16926) *
                C50174) *
               C50013 * C276 +
           (((C323 - C322) * C16929 + (C325 - C324) * C16924 +
             (C327 - C326) * C16930 + (C329 - C328) * C16925 +
             (C331 - C330) * C16931 + (C333 - C332) * C16926) *
                C33256 +
            (C5979 * C16929 + C5980 * C16924 + C11465 * C16930 +
             C11466 * C16925 + (C896 - C897) * C16931 +
             (C898 - C899) * C16926) *
                C50174) *
               C50013 * C277 +
           (((C335 - C334) * C16929 + (C337 - C336) * C16924 +
             (C339 - C338) * C16930 + (C341 - C340) * C16925 +
             (C343 - C342) * C16931 + (C345 - C344) * C16926) *
                C33256 +
            ((C5250 - C5249) * C16929 + (C5252 - C5251) * C16924 +
             (C10826 - C10825) * C16930 + (C10828 - C10827) * C16925 +
             (C117 * C1537 - C50094 * C1544) * C16931 +
             (C117 * C1545 - C50094 * C1549) * C16926) *
                C50174) *
               C50013 * C278) *
              C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C16929 +
            (C50094 * C143 - C117 * C130) * C16924 + (C151 - C152) * C16930 +
            (C153 - C154) * C16925 + C171 * C16931 + C172 * C16926) *
               C33256 +
           ((C5415 - C5416) * C16929 + (C5417 - C5418) * C16924 +
            C5419 * C16930 + C5420 * C16925 + C5765 * C16931 + C5766 * C16926) *
               C50174) *
              C50013 * C49997 * C113 +
          (((C152 - C151) * C16929 + (C154 - C153) * C16924 +
            (C156 - C155) * C16930 + (C158 - C157) * C16925 + C175 * C16931 +
            C176 * C16926) *
               C33256 +
           (C5427 * C16929 + C5428 * C16924 + C730 * C16930 + C731 * C16925 +
            C732 * C16931 + C733 * C16926) *
               C50174) *
              C50013 * C49997 * C114 +
          ((C171 * C16929 + C172 * C16924 + C173 * C16930 + C174 * C16925 +
            (C164 - C163) * C16931 + (C166 - C165) * C16926) *
               C33256 +
           (C5765 * C16929 + C5766 * C16924 + C11269 * C16930 +
            C11270 * C16925 + (C734 - C735) * C16931 + (C736 - C737) * C16926) *
               C50174) *
              C50013 * C49997 * C115 +
          ((C175 * C16929 + C176 * C16924 + C177 * C16930 + C178 * C16925 +
            (C168 - C167) * C16931 + (C170 - C169) * C16926) *
               C33256 +
           (C732 * C16929 + C733 * C16924 + (C735 - C734) * C16930 +
            (C737 - C736) * C16925 + (C117 * C725 - C50094 * C726) * C16931 +
            (C117 * C727 - C50094 * C728) * C16926) *
               C50174) *
              C50013 * C49997 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C16929 +
             (C50094 * C143 - C117 * C130) * C16924 + (C151 - C152) * C16930 +
             (C153 - C154) * C16925 + C171 * C16931 + C172 * C16926) *
                C33256 +
            ((C5415 - C5416) * C16929 + (C5417 - C5418) * C16924 +
             C5419 * C16930 + C5420 * C16925 + C5765 * C16931 +
             C5766 * C16926) *
                C50174) *
               C443 +
           (((C5416 - C5415) * C16929 + (C5418 - C5417) * C16924 +
             C5427 * C16930 + C5428 * C16925 + C730 * C16931 + C731 * C16926) *
                C33256 +
            ((C5422 - C5421) * C16929 + (C5424 - C5423) * C16924 +
             C5429 * C16930 + C5430 * C16925 + C5443 * C16931 +
             C5444 * C16926) *
                C50174) *
               C444 +
           ((C5449 * C16929 + C5450 * C16924 + C5425 * C16930 + C5426 * C16925 +
             C5767 * C16931 + C5768 * C16926) *
                C33256 +
            ((C5432 - C5431) * C16929 + (C5434 - C5433) * C16924 +
             C5455 * C16930 + C5456 * C16925 + (C5445 - C5446) * C16931 +
             (C5447 - C5448) * C16926) *
                C50174) *
               C445) *
              C49997 * C279 +
          ((((C152 - C151) * C16929 + (C154 - C153) * C16924 +
             (C156 - C155) * C16930 + (C158 - C157) * C16925 + C175 * C16931 +
             C176 * C16926) *
                C33256 +
            (C5427 * C16929 + C5428 * C16924 + C730 * C16930 + C731 * C16925 +
             C732 * C16931 + C733 * C16926) *
                C50174) *
               C443 +
           ((C5419 * C16929 + C5420 * C16924 + C5765 * C16930 + C5766 * C16925 +
             C11269 * C16931 + C11270 * C16926) *
                C33256 +
            (C5425 * C16929 + C5426 * C16924 + C5767 * C16930 + C5768 * C16925 +
             (C507 - C508) * C16931 + (C509 - C510) * C16926) *
                C50174) *
               C444 +
           ((C5429 * C16929 + C5430 * C16924 + C5443 * C16930 + C5444 * C16925 +
             (C508 - C507) * C16931 + (C510 - C509) * C16926) *
                C33256 +
            (C5453 * C16929 + C5454 * C16924 + (C5446 - C5445) * C16930 +
             (C5448 - C5447) * C16925 +
             (C117 * C1821 - C50094 * C1828) * C16931 +
             (C117 * C1829 - C50094 * C1833) * C16926) *
                C50174) *
               C445) *
              C49997 * C49984)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
             C2263 * C299 - C2268 * C285) *
                C19689 +
            (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
             C2263 * C315 - C2268 * C300) *
                C49950) *
               C33256 +
           ((C2261 * C456 - C2266 * C446 + C2262 * C872 - C2267 * C867 +
             C2263 * C1538 - C2268 * C1534) *
                C19689 +
            (C2261 * C476 - C2266 * C457 + C2262 * C882 - C2267 * C873 +
             C2263 * C1546 - C2268 * C1539) *
                C49950) *
               C50174) *
              C50013 * C49997 * C113 +
          (((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C19689 +
            (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C49950) *
               C33256 +
           ((C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C19689 +
            (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49950) *
               C50174) *
              C50013 * C49997 * C114 +
          (((C2285 - C2284 + C2287 - C2286 + C2289 - C2288) * C19689 +
            (C2291 - C2290 + C2293 - C2292 + C2295 - C2294) * C49950) *
               C33256 +
           ((C2976 - C2977 + C2978 - C2979 + C2980 - C2981) * C19689 +
            (C2982 - C2983 + C2984 - C2985 + C2986 - C2987) * C49950) *
               C50174) *
              C50013 * C49997 * C115 +
          (((C2297 - C2296 + C2299 - C2298 + C2301 - C2300) * C19689 +
            (C2303 - C2302 + C2305 - C2304 + C2307 - C2306) * C49950) *
               C33256 +
           ((C2266 * C449 - C2261 * C462 + C2267 * C870 - C2262 * C878 +
             C2268 * C1537 - C2263 * C1544) *
                C19689 +
            (C2266 * C463 - C2261 * C479 + C2267 * C879 - C2262 * C885 +
             C2268 * C1545 - C2263 * C1549) *
                C49950) *
               C50174) *
              C50013 * C49997 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
              C2263 * C299 - C2268 * C285) *
                 C19689 +
             (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
              C2263 * C315 - C2268 * C300) *
                 C49950) *
                C33256 +
            ((C2261 * C456 - C2266 * C446 + C2262 * C872 - C2267 * C867 +
              C2263 * C1538 - C2268 * C1534) *
                 C19689 +
             (C2261 * C476 - C2266 * C457 + C2262 * C882 - C2267 * C873 +
              C2263 * C1546 - C2268 * C1539) *
                 C49950) *
                C50174) *
               C50013 * C276 +
           (((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
              C2268 * C1073 - C2263 * C1077) *
                 C19689 +
             (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
              C2268 * C1078 - C2263 * C1085) *
                 C49950) *
                C33256 +
            ((C2266 * C867 - C2261 * C872 + C2267 * C1534 - C2262 * C1538 +
              C2268 * C3181 - C2263 * C3184) *
                 C19689 +
             (C2266 * C873 - C2261 * C882 + C2267 * C1539 - C2262 * C1546 +
              C2268 * C3185 - C2263 * C3190) *
                 C49950) *
                C50174) *
               C50013 * C277 +
           (((C2261 * C299 - C2266 * C285 + C2262 * C1077 - C2267 * C1073 +
              C2263 * C2456 - C2268 * C2453) *
                 C19689 +
             (C2261 * C315 - C2266 * C300 + C2262 * C1085 - C2267 * C1078 +
              C2263 * C2462 - C2268 * C2457) *
                 C49950) *
                C33256 +
            ((C2261 * C1538 - C2266 * C1534 + C2262 * C3184 - C2267 * C3181 +
              C2263 * C4099 - C2268 * C4097) *
                 C19689 +
             (C2261 * C1546 - C2266 * C1539 + C2262 * C3190 - C2267 * C3185 +
              C2263 * C4103 - C2268 * C4100) *
                 C49950) *
                C50174) *
               C50013 * C278) *
              C279 +
          ((((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C19689 +
             (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C49950) *
                C33256 +
            ((C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C19689 +
             (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49950) *
                C50174) *
               C50013 * C276 +
           (((C2467 - C2466 + C2469 - C2468 + C2471 - C2470) * C19689 +
             (C2473 - C2472 + C2475 - C2474 + C2477 - C2476) * C49950) *
                C33256 +
            ((C3194 - C3195 + C3196 - C3197 + C3198 - C3199) * C19689 +
             (C3200 - C3201 + C3202 - C3203 + C3204 - C3205) * C49950) *
                C50174) *
               C50013 * C277 +
           (((C2479 - C2478 + C2481 - C2480 + C2483 - C2482) * C19689 +
             (C2485 - C2484 + C2487 - C2486 + C2489 - C2488) * C49950) *
                C33256 +
            ((C2266 * C1535 - C2261 * C1540 + C2267 * C3182 - C2262 * C3186 +
              C2268 * C4098 - C2263 * C4101) *
                 C19689 +
             (C2266 * C1541 - C2261 * C1547 + C2267 * C3187 - C2262 * C3191 +
              C2268 * C4102 - C2263 * C4104) *
                 C49950) *
                C50174) *
               C50013 * C278) *
              C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
              C2263 * C299 - C2268 * C285) *
                 C19689 +
             (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
              C2263 * C315 - C2268 * C300) *
                 C49950) *
                C33256 +
            ((C36179 - C36180 + C36181 - C36182 + C36183 - C36184) * C19689 +
             (C36185 - C36186 + C36187 - C36188 + C36189 - C36190) * C49950) *
                C50174) *
               C443 +
           (((C36180 - C36179 + C36182 - C36181 + C36184 - C36183) * C19689 +
             (C36186 - C36185 + C36188 - C36187 + C36190 - C36189) * C49950) *
                C33256 +
            ((C36191 - C36192 + C36193 - C36194 + C36195 - C36196) * C19689 +
             (C36197 - C36198 + C36199 - C36200 + C36201 - C36202) * C49950) *
                C50174) *
               C444 +
           (((C36192 - C36191 + C36194 - C36193 + C36196 - C36195) * C19689 +
             (C36198 - C36197 + C36200 - C36199 + C36202 - C36201) * C49950) *
                C33256 +
            ((C2261 * C1822 - C2266 * C1818 + C2262 * C4499 - C2267 * C4495 +
              C2263 * C4500 - C2268 * C4496) *
                 C19689 +
             (C2261 * C1830 - C2266 * C1823 + C2262 * C4507 - C2267 * C4501 +
              C2263 * C4508 - C2268 * C4502) *
                 C49950) *
                C50174) *
               C445) *
              C49997 * C279 +
          ((((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C19689 +
             (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C49950) *
                C33256 +
            ((C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C19689 +
             (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49950) *
                C50174) *
               C443 +
           (((C2649 - C2648 + C2651 - C2650 + C2653 - C2652) * C19689 +
             (C2655 - C2654 + C2657 - C2656 + C2659 - C2658) * C49950) *
                C33256 +
            ((C2660 - C2661 + C2662 - C2663 + C2664 - C2665) * C19689 +
             (C2666 - C2667 + C2668 - C2669 + C2670 - C2671) * C49950) *
                C50174) *
               C444 +
           (((C2661 - C2660 + C2663 - C2662 + C2665 - C2664) * C19689 +
             (C2667 - C2666 + C2669 - C2668 + C2671 - C2670) * C49950) *
                C33256 +
            ((C2266 * C1819 - C2261 * C1824 + C2267 * C4497 - C2262 * C4503 +
              C2268 * C4498 - C2263 * C4504) *
                 C19689 +
             (C2266 * C1825 - C2261 * C1831 + C2267 * C4505 - C2262 * C4509 +
              C2268 * C4506 - C2263 * C4510) *
                 C49950) *
                C50174) *
               C445) *
              C49997 * C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[213] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C16929 +
             (C50094 * C143 - C117 * C130) * C16924 + (C151 - C152) * C16930 +
             (C153 - C154) * C16925 + C171 * C16931 + C172 * C16926) *
                C33256 +
            ((C5415 - C5416) * C16929 + (C5417 - C5418) * C16924 +
             C5419 * C16930 + C5420 * C16925 + C5765 * C16931 +
             C5766 * C16926) *
                C50174) *
               C50240 +
           (((C5416 - C5415) * C16929 + (C5418 - C5417) * C16924 +
             C5427 * C16930 + C5428 * C16925 + C730 * C16931 + C731 * C16926) *
                C33256 +
            ((C5422 - C5421) * C16929 + (C5424 - C5423) * C16924 +
             C5429 * C16930 + C5430 * C16925 + C5443 * C16931 +
             C5444 * C16926) *
                C50174) *
               C50077) *
              C49997 * C50282 +
          ((((C152 - C151) * C16929 + (C154 - C153) * C16924 +
             (C156 - C155) * C16930 + (C158 - C157) * C16925 + C175 * C16931 +
             C176 * C16926) *
                C33256 +
            (C5427 * C16929 + C5428 * C16924 + C730 * C16930 + C731 * C16925 +
             C732 * C16931 + C733 * C16926) *
                C50174) *
               C50240 +
           ((C5419 * C16929 + C5420 * C16924 + C5765 * C16930 + C5766 * C16925 +
             C11269 * C16931 + C11270 * C16926) *
                C33256 +
            (C5425 * C16929 + C5426 * C16924 + C5767 * C16930 + C5768 * C16925 +
             (C507 - C508) * C16931 + (C509 - C510) * C16926) *
                C50174) *
               C50077) *
              C49997 * C50283 +
          (((C171 * C16929 + C172 * C16924 + C173 * C16930 + C174 * C16925 +
             (C164 - C163) * C16931 + (C166 - C165) * C16926) *
                C33256 +
            (C5765 * C16929 + C5766 * C16924 + C11269 * C16930 +
             C11270 * C16925 + (C734 - C735) * C16931 +
             (C736 - C737) * C16926) *
                C50174) *
               C50240 +
           ((C730 * C16929 + C731 * C16924 + C732 * C16930 + C733 * C16925 +
             (C735 - C734) * C16931 + (C737 - C736) * C16926) *
                C33256 +
            (C5443 * C16929 + C5444 * C16924 + (C508 - C507) * C16930 +
             (C510 - C509) * C16925 + (C117 * C455 - C50094 * C474) * C16931 +
             (C117 * C475 - C50094 * C485) * C16926) *
                C50174) *
               C50077) *
              C49997 * C612)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
              C2263 * C299 - C2268 * C285) *
                 C19689 +
             (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
              C2263 * C315 - C2268 * C300) *
                 C49950) *
                C33256 +
            ((C36179 - C36180 + C36181 - C36182 + C36183 - C36184) * C19689 +
             (C36185 - C36186 + C36187 - C36188 + C36189 - C36190) * C49950) *
                C50174) *
               C50240 +
           (((C36180 - C36179 + C36182 - C36181 + C36184 - C36183) * C19689 +
             (C36186 - C36185 + C36188 - C36187 + C36190 - C36189) * C49950) *
                C33256 +
            ((C36191 - C36192 + C36193 - C36194 + C36195 - C36196) * C19689 +
             (C36197 - C36198 + C36199 - C36200 + C36201 - C36202) * C49950) *
                C50174) *
               C50077) *
              C49997 * C50282 +
          ((((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C19689 +
             (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C49950) *
                C33256 +
            ((C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C19689 +
             (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49950) *
                C50174) *
               C50240 +
           (((C2649 - C2648 + C2651 - C2650 + C2653 - C2652) * C19689 +
             (C2655 - C2654 + C2657 - C2656 + C2659 - C2658) * C49950) *
                C33256 +
            ((C2660 - C2661 + C2662 - C2663 + C2664 - C2665) * C19689 +
             (C2666 - C2667 + C2668 - C2669 + C2670 - C2671) * C49950) *
                C50174) *
               C50077) *
              C49997 * C50283 +
          ((((C2285 - C2284 + C2287 - C2286 + C2289 - C2288) * C19689 +
             (C2291 - C2290 + C2293 - C2292 + C2295 - C2294) * C49950) *
                C33256 +
            ((C2976 - C2977 + C2978 - C2979 + C2980 - C2981) * C19689 +
             (C2982 - C2983 + C2984 - C2985 + C2986 - C2987) * C49950) *
                C50174) *
               C50240 +
           (((C2977 - C2976 + C2979 - C2978 + C2981 - C2980) * C19689 +
             (C2983 - C2982 + C2985 - C2984 + C2987 - C2986) * C49950) *
                C33256 +
            ((C2266 * C452 - C2261 * C468 + C2267 * C1189 - C2262 * C1195 +
              C2268 * C2637 - C2263 * C2642) *
                 C19689 +
             (C2266 * C469 - C2261 * C482 + C2267 * C1196 - C2262 * C1201 +
              C2268 * C2643 - C2263 * C2646) *
                 C49950) *
                C50174) *
               C50077) *
              C49997 * C612)) /
            (p * q * std::sqrt(p + q));
    d2ee[214] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C16929 +
            (C50094 * C143 - C117 * C130) * C16924 + (C151 - C152) * C16930 +
            (C153 - C154) * C16925 + C171 * C16931 + C172 * C16926) *
               C33256 +
           ((C5415 - C5416) * C16929 + (C5417 - C5418) * C16924 +
            C5419 * C16930 + C5420 * C16925 + C5765 * C16931 + C5766 * C16926) *
               C50174) *
              C50013 * C49997 * C113 +
          (((C152 - C151) * C16929 + (C154 - C153) * C16924 +
            (C156 - C155) * C16930 + (C158 - C157) * C16925 + C175 * C16931 +
            C176 * C16926) *
               C33256 +
           (C5427 * C16929 + C5428 * C16924 + C730 * C16930 + C731 * C16925 +
            C732 * C16931 + C733 * C16926) *
               C50174) *
              C50013 * C49997 * C114 +
          ((C171 * C16929 + C172 * C16924 + C173 * C16930 + C174 * C16925 +
            (C164 - C163) * C16931 + (C166 - C165) * C16926) *
               C33256 +
           (C5765 * C16929 + C5766 * C16924 + C11269 * C16930 +
            C11270 * C16925 + (C734 - C735) * C16931 + (C736 - C737) * C16926) *
               C50174) *
              C50013 * C49997 * C115 +
          ((C175 * C16929 + C176 * C16924 + C177 * C16930 + C178 * C16925 +
            (C168 - C167) * C16931 + (C170 - C169) * C16926) *
               C33256 +
           (C732 * C16929 + C733 * C16924 + (C735 - C734) * C16930 +
            (C737 - C736) * C16925 + (C117 * C725 - C50094 * C726) * C16931 +
            (C117 * C727 - C50094 * C728) * C16926) *
               C50174) *
              C50013 * C49997 * C116)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C16929 +
             (C50094 * C143 - C117 * C130) * C16924 + (C151 - C152) * C16930 +
             (C153 - C154) * C16925 + C171 * C16931 + C172 * C16926) *
                C33256 +
            ((C5415 - C5416) * C16929 + (C5417 - C5418) * C16924 +
             C5419 * C16930 + C5420 * C16925 + C5765 * C16931 +
             C5766 * C16926) *
                C50174) *
               C50013 * C276 +
           (((C117 * C281 - C50094 * C291) * C16929 +
             (C117 * C292 - C50094 * C311) * C16924 + (C322 - C323) * C16930 +
             (C324 - C325) * C16925 + C618 * C16931 + C619 * C16926) *
                C33256 +
            ((C5967 - C5968) * C16929 + (C5969 - C5970) * C16924 +
             C5971 * C16930 + C5972 * C16925 + C11121 * C16931 +
             C11122 * C16926) *
                C50174) *
               C50013 * C277 +
           (((C50094 * C299 - C117 * C285) * C16929 +
             (C50094 * C315 - C117 * C300) * C16924 + (C334 - C335) * C16930 +
             (C336 - C337) * C16925 + (C338 - C339) * C16931 +
             (C340 - C341) * C16926) *
                C33256 +
            ((C6884 - C6885) * C16929 + (C6886 - C6887) * C16924 +
             (C5249 - C5250) * C16930 + (C5251 - C5252) * C16925 +
             (C10825 - C10826) * C16931 + (C10827 - C10828) * C16926) *
                C50174) *
               C50013 * C278) *
              C279 +
          ((((C152 - C151) * C16929 + (C154 - C153) * C16924 +
             (C156 - C155) * C16930 + (C158 - C157) * C16925 + C175 * C16931 +
             C176 * C16926) *
                C33256 +
            (C5427 * C16929 + C5428 * C16924 + C730 * C16930 + C731 * C16925 +
             C732 * C16931 + C733 * C16926) *
                C50174) *
               C50013 * C276 +
           (((C323 - C322) * C16929 + (C325 - C324) * C16924 +
             (C327 - C326) * C16930 + (C329 - C328) * C16925 +
             (C331 - C330) * C16931 + (C333 - C332) * C16926) *
                C33256 +
            (C5979 * C16929 + C5980 * C16924 + C11465 * C16930 +
             C11466 * C16925 + (C896 - C897) * C16931 +
             (C898 - C899) * C16926) *
                C50174) *
               C50013 * C277 +
           (((C335 - C334) * C16929 + (C337 - C336) * C16924 +
             (C339 - C338) * C16930 + (C341 - C340) * C16925 +
             (C343 - C342) * C16931 + (C345 - C344) * C16926) *
                C33256 +
            ((C5250 - C5249) * C16929 + (C5252 - C5251) * C16924 +
             (C10826 - C10825) * C16930 + (C10828 - C10827) * C16925 +
             (C117 * C1537 - C50094 * C1544) * C16931 +
             (C117 * C1545 - C50094 * C1549) * C16926) *
                C50174) *
               C50013 * C278) *
              C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
             C2263 * C299 - C2268 * C285) *
                C19689 +
            (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
             C2263 * C315 - C2268 * C300) *
                C49950) *
               C33256 +
           ((C2261 * C456 - C2266 * C446 + C2262 * C872 - C2267 * C867 +
             C2263 * C1538 - C2268 * C1534) *
                C19689 +
            (C2261 * C476 - C2266 * C457 + C2262 * C882 - C2267 * C873 +
             C2263 * C1546 - C2268 * C1539) *
                C49950) *
               C50174) *
              C50013 * C49997 * C113 +
          (((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C19689 +
            (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C49950) *
               C33256 +
           ((C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C19689 +
            (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49950) *
               C50174) *
              C50013 * C49997 * C114 +
          (((C2285 - C2284 + C2287 - C2286 + C2289 - C2288) * C19689 +
            (C2291 - C2290 + C2293 - C2292 + C2295 - C2294) * C49950) *
               C33256 +
           ((C2976 - C2977 + C2978 - C2979 + C2980 - C2981) * C19689 +
            (C2982 - C2983 + C2984 - C2985 + C2986 - C2987) * C49950) *
               C50174) *
              C50013 * C49997 * C115 +
          (((C2297 - C2296 + C2299 - C2298 + C2301 - C2300) * C19689 +
            (C2303 - C2302 + C2305 - C2304 + C2307 - C2306) * C49950) *
               C33256 +
           ((C2266 * C449 - C2261 * C462 + C2267 * C870 - C2262 * C878 +
             C2268 * C1537 - C2263 * C1544) *
                C19689 +
            (C2266 * C463 - C2261 * C479 + C2267 * C879 - C2262 * C885 +
             C2268 * C1545 - C2263 * C1549) *
                C49950) *
               C50174) *
              C50013 * C49997 * C116)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
              C2263 * C299 - C2268 * C285) *
                 C19689 +
             (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
              C2263 * C315 - C2268 * C300) *
                 C49950) *
                C33256 +
            ((C2261 * C456 - C2266 * C446 + C2262 * C872 - C2267 * C867 +
              C2263 * C1538 - C2268 * C1534) *
                 C19689 +
             (C2261 * C476 - C2266 * C457 + C2262 * C882 - C2267 * C873 +
              C2263 * C1546 - C2268 * C1539) *
                 C49950) *
                C50174) *
               C50013 * C276 +
           (((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
              C2268 * C1073 - C2263 * C1077) *
                 C19689 +
             (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
              C2268 * C1078 - C2263 * C1085) *
                 C49950) *
                C33256 +
            ((C2266 * C867 - C2261 * C872 + C2267 * C1534 - C2262 * C1538 +
              C2268 * C3181 - C2263 * C3184) *
                 C19689 +
             (C2266 * C873 - C2261 * C882 + C2267 * C1539 - C2262 * C1546 +
              C2268 * C3185 - C2263 * C3190) *
                 C49950) *
                C50174) *
               C50013 * C277 +
           (((C2261 * C299 - C2266 * C285 + C2262 * C1077 - C2267 * C1073 +
              C2263 * C2456 - C2268 * C2453) *
                 C19689 +
             (C2261 * C315 - C2266 * C300 + C2262 * C1085 - C2267 * C1078 +
              C2263 * C2462 - C2268 * C2457) *
                 C49950) *
                C33256 +
            ((C2261 * C1538 - C2266 * C1534 + C2262 * C3184 - C2267 * C3181 +
              C2263 * C4099 - C2268 * C4097) *
                 C19689 +
             (C2261 * C1546 - C2266 * C1539 + C2262 * C3190 - C2267 * C3185 +
              C2263 * C4103 - C2268 * C4100) *
                 C49950) *
                C50174) *
               C50013 * C278) *
              C279 +
          ((((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C19689 +
             (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C49950) *
                C33256 +
            ((C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C19689 +
             (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49950) *
                C50174) *
               C50013 * C276 +
           (((C2467 - C2466 + C2469 - C2468 + C2471 - C2470) * C19689 +
             (C2473 - C2472 + C2475 - C2474 + C2477 - C2476) * C49950) *
                C33256 +
            ((C3194 - C3195 + C3196 - C3197 + C3198 - C3199) * C19689 +
             (C3200 - C3201 + C3202 - C3203 + C3204 - C3205) * C49950) *
                C50174) *
               C50013 * C277 +
           (((C2479 - C2478 + C2481 - C2480 + C2483 - C2482) * C19689 +
             (C2485 - C2484 + C2487 - C2486 + C2489 - C2488) * C49950) *
                C33256 +
            ((C2266 * C1535 - C2261 * C1540 + C2267 * C3182 - C2262 * C3186 +
              C2268 * C4098 - C2263 * C4101) *
                 C19689 +
             (C2266 * C1541 - C2261 * C1547 + C2267 * C3187 - C2262 * C3191 +
              C2268 * C4102 - C2263 * C4104) *
                 C49950) *
                C50174) *
               C50013 * C278) *
              C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[215] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C16929 +
             (C50094 * C143 - C117 * C130) * C16924 + (C151 - C152) * C16930 +
             (C153 - C154) * C16925 + C171 * C16931 + C172 * C16926) *
                C33256 +
            ((C5415 - C5416) * C16929 + (C5417 - C5418) * C16924 +
             C5419 * C16930 + C5420 * C16925 + C5765 * C16931 +
             C5766 * C16926) *
                C50174) *
               C50013 * C50284 +
           (((C117 * C281 - C50094 * C291) * C16929 +
             (C117 * C292 - C50094 * C311) * C16924 + (C322 - C323) * C16930 +
             (C324 - C325) * C16925 + C618 * C16931 + C619 * C16926) *
                C33256 +
            ((C5967 - C5968) * C16929 + (C5969 - C5970) * C16924 +
             C5971 * C16930 + C5972 * C16925 + C11121 * C16931 +
             C11122 * C16926) *
                C50174) *
               C50013 * C50285 +
           (((C50094 * C299 - C117 * C285) * C16929 +
             (C50094 * C315 - C117 * C300) * C16924 + (C334 - C335) * C16930 +
             (C336 - C337) * C16925 + (C338 - C339) * C16931 +
             (C340 - C341) * C16926) *
                C33256 +
            ((C6884 - C6885) * C16929 + (C6886 - C6887) * C16924 +
             (C5249 - C5250) * C16930 + (C5251 - C5252) * C16925 +
             (C10825 - C10826) * C16931 + (C10827 - C10828) * C16926) *
                C50174) *
               C50013 * C1303) *
              C50231 +
          ((((C152 - C151) * C16929 + (C154 - C153) * C16924 +
             (C156 - C155) * C16930 + (C158 - C157) * C16925 + C175 * C16931 +
             C176 * C16926) *
                C33256 +
            (C5427 * C16929 + C5428 * C16924 + C730 * C16930 + C731 * C16925 +
             C732 * C16931 + C733 * C16926) *
                C50174) *
               C50013 * C50284 +
           (((C323 - C322) * C16929 + (C325 - C324) * C16924 +
             (C327 - C326) * C16930 + (C329 - C328) * C16925 +
             (C331 - C330) * C16931 + (C333 - C332) * C16926) *
                C33256 +
            (C5979 * C16929 + C5980 * C16924 + C11465 * C16930 +
             C11466 * C16925 + (C896 - C897) * C16931 +
             (C898 - C899) * C16926) *
                C50174) *
               C50013 * C50285 +
           (((C335 - C334) * C16929 + (C337 - C336) * C16924 +
             (C339 - C338) * C16930 + (C341 - C340) * C16925 +
             (C343 - C342) * C16931 + (C345 - C344) * C16926) *
                C33256 +
            ((C5250 - C5249) * C16929 + (C5252 - C5251) * C16924 +
             (C10826 - C10825) * C16930 + (C10828 - C10827) * C16925 +
             (C117 * C1537 - C50094 * C1544) * C16931 +
             (C117 * C1545 - C50094 * C1549) * C16926) *
                C50174) *
               C50013 * C1303) *
              C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
              C2263 * C299 - C2268 * C285) *
                 C19689 +
             (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
              C2263 * C315 - C2268 * C300) *
                 C49950) *
                C33256 +
            ((C36179 - C36180 + C36181 - C36182 + C36183 - C36184) * C19689 +
             (C36185 - C36186 + C36187 - C36188 + C36189 - C36190) * C49950) *
                C50174) *
               C50013 * C50284 +
           (((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
              C2268 * C1073 - C2263 * C1077) *
                 C19689 +
             (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
              C2268 * C1078 - C2263 * C1085) *
                 C49950) *
                C33256 +
            ((C36689 - C36690 + C36691 - C36692 + C36693 - C36694) * C19689 +
             (C36695 - C36696 + C36697 - C36698 + C36699 - C36700) * C49950) *
                C50174) *
               C50013 * C50285 +
           (((C2261 * C299 - C2266 * C285 + C2262 * C1077 - C2267 * C1073 +
              C2263 * C2456 - C2268 * C2453) *
                 C19689 +
             (C2261 * C315 - C2266 * C300 + C2262 * C1085 - C2267 * C1078 +
              C2263 * C2462 - C2268 * C2457) *
                 C49950) *
                C33256 +
            ((C2261 * C1538 - C2266 * C1534 + C2262 * C3184 - C2267 * C3181 +
              C2263 * C4099 - C2268 * C4097) *
                 C19689 +
             (C2261 * C1546 - C2266 * C1539 + C2262 * C3190 - C2267 * C3185 +
              C2263 * C4103 - C2268 * C4100) *
                 C49950) *
                C50174) *
               C50013 * C1303) *
              C50231 +
          ((((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C19689 +
             (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C49950) *
                C33256 +
            ((C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C19689 +
             (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49950) *
                C50174) *
               C50013 * C50284 +
           (((C2467 - C2466 + C2469 - C2468 + C2471 - C2470) * C19689 +
             (C2473 - C2472 + C2475 - C2474 + C2477 - C2476) * C49950) *
                C33256 +
            ((C3194 - C3195 + C3196 - C3197 + C3198 - C3199) * C19689 +
             (C3200 - C3201 + C3202 - C3203 + C3204 - C3205) * C49950) *
                C50174) *
               C50013 * C50285 +
           (((C2479 - C2478 + C2481 - C2480 + C2483 - C2482) * C19689 +
             (C2485 - C2484 + C2487 - C2486 + C2489 - C2488) * C49950) *
                C33256 +
            ((C2266 * C1535 - C2261 * C1540 + C2267 * C3182 - C2262 * C3186 +
              C2268 * C4098 - C2263 * C4101) *
                 C19689 +
             (C2266 * C1541 - C2261 * C1547 + C2267 * C3187 - C2262 * C3191 +
              C2268 * C4102 - C2263 * C4104) *
                 C49950) *
                C50174) *
               C50013 * C1303) *
              C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[216] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C16929 +
             (C50094 * C143 - C117 * C130) * C16924 + (C151 - C152) * C16930 +
             (C153 - C154) * C16925 + C171 * C16931 + C172 * C16926) *
                C33256 +
            ((C5415 - C5416) * C16929 + (C5417 - C5418) * C16924 +
             C5419 * C16930 + C5420 * C16925 + C5765 * C16931 +
             C5766 * C16926) *
                C50174) *
               C50240 +
           (((C5416 - C5415) * C16929 + (C5418 - C5417) * C16924 +
             C5427 * C16930 + C5428 * C16925 + C730 * C16931 + C731 * C16926) *
                C33256 +
            ((C5422 - C5421) * C16929 + (C5424 - C5423) * C16924 +
             C5429 * C16930 + C5430 * C16925 + C5443 * C16931 +
             C5444 * C16926) *
                C50174) *
               C50077) *
              C50284 +
          ((((C117 * C281 - C50094 * C291) * C16929 +
             (C117 * C292 - C50094 * C311) * C16924 + (C322 - C323) * C16930 +
             (C324 - C325) * C16925 + C618 * C16931 + C619 * C16926) *
                C33256 +
            ((C5967 - C5968) * C16929 + (C5969 - C5970) * C16924 +
             C5971 * C16930 + C5972 * C16925 + C11121 * C16931 +
             C11122 * C16926) *
                C50174) *
               C50240 +
           (((C5968 - C5967) * C16929 + (C5970 - C5969) * C16924 +
             C5979 * C16930 + C5980 * C16925 + C11465 * C16931 +
             C11466 * C16926) *
                C33256 +
            ((C5974 - C5973) * C16929 + (C5976 - C5975) * C16924 +
             C5981 * C16930 + C5982 * C16925 + (C5615 - C5616) * C16931 +
             (C5617 - C5618) * C16926) *
                C50174) *
               C50077) *
              C50285 +
          ((((C50094 * C299 - C117 * C285) * C16929 +
             (C50094 * C315 - C117 * C300) * C16924 + (C334 - C335) * C16930 +
             (C336 - C337) * C16925 + (C338 - C339) * C16931 +
             (C340 - C341) * C16926) *
                C33256 +
            ((C6884 - C6885) * C16929 + (C6886 - C6887) * C16924 +
             (C5249 - C5250) * C16930 + (C5251 - C5252) * C16925 +
             (C10825 - C10826) * C16931 + (C10827 - C10828) * C16926) *
                C50174) *
               C50240 +
           (((C6885 - C6884) * C16929 + (C6887 - C6886) * C16924 +
             (C5250 - C5249) * C16930 + (C5252 - C5251) * C16925 +
             (C10826 - C10825) * C16931 + (C10828 - C10827) * C16926) *
                C33256 +
            ((C6889 - C6888) * C16929 + (C6891 - C6890) * C16924 +
             (C5254 - C5253) * C16930 + (C5256 - C5255) * C16925 +
             (C117 * C2637 - C50094 * C2642) * C16931 +
             (C117 * C2643 - C50094 * C2646) * C16926) *
                C50174) *
               C50077) *
              C1303) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
              C2263 * C299 - C2268 * C285) *
                 C19689 +
             (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
              C2263 * C315 - C2268 * C300) *
                 C49950) *
                C33256 +
            ((C36179 - C36180 + C36181 - C36182 + C36183 - C36184) * C19689 +
             (C36185 - C36186 + C36187 - C36188 + C36189 - C36190) * C49950) *
                C50174) *
               C50240 +
           (((C36180 - C36179 + C36182 - C36181 + C36184 - C36183) * C19689 +
             (C36186 - C36185 + C36188 - C36187 + C36190 - C36189) * C49950) *
                C33256 +
            ((C36191 - C36192 + C36193 - C36194 + C36195 - C36196) * C19689 +
             (C36197 - C36198 + C36199 - C36200 + C36201 - C36202) * C49950) *
                C50174) *
               C50077) *
              C50284 +
          ((((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
              C2268 * C1073 - C2263 * C1077) *
                 C19689 +
             (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
              C2268 * C1078 - C2263 * C1085) *
                 C49950) *
                C33256 +
            ((C36689 - C36690 + C36691 - C36692 + C36693 - C36694) * C19689 +
             (C36695 - C36696 + C36697 - C36698 + C36699 - C36700) * C49950) *
                C50174) *
               C50240 +
           (((C36690 - C36689 + C36692 - C36691 + C36694 - C36693) * C19689 +
             (C36696 - C36695 + C36698 - C36697 + C36700 - C36699) * C49950) *
                C33256 +
            ((C37091 - C37092 + C37093 - C37094 + C37095 - C37096) * C19689 +
             (C37097 - C37098 + C37099 - C37100 + C37101 - C37102) * C49950) *
                C50174) *
               C50077) *
              C50285 +
          ((((C2261 * C299 - C2266 * C285 + C2262 * C1077 - C2267 * C1073 +
              C2263 * C2456 - C2268 * C2453) *
                 C19689 +
             (C2261 * C315 - C2266 * C300 + C2262 * C1085 - C2267 * C1078 +
              C2263 * C2462 - C2268 * C2457) *
                 C49950) *
                C33256 +
            ((C37589 - C37590 + C37591 - C37592 + C37593 - C37594) * C19689 +
             (C37595 - C37596 + C37597 - C37598 + C37599 - C37600) * C49950) *
                C50174) *
               C50240 +
           (((C37590 - C37589 + C37592 - C37591 + C37594 - C37593) * C19689 +
             (C37596 - C37595 + C37598 - C37597 + C37600 - C37599) * C49950) *
                C33256 +
            ((C2266 * C2635 - C2261 * C2638 + C2267 * C3603 - C2262 * C3605 +
              C2268 * C20478 - C2263 * C20479) *
                 C19689 +
             (C2266 * C2639 - C2261 * C2644 + C2267 * C3606 - C2262 * C3609 +
              C2268 * C20480 - C2263 * C20481) *
                 C49950) *
                C50174) *
               C50077) *
              C1303) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[217] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C16929 +
            (C50094 * C143 - C117 * C130) * C16924 + (C151 - C152) * C16930 +
            (C153 - C154) * C16925 + C171 * C16931 + C172 * C16926) *
               C33256 +
           ((C5415 - C5416) * C16929 + (C5417 - C5418) * C16924 +
            C5419 * C16930 + C5420 * C16925 + C5765 * C16931 + C5766 * C16926) *
               C50174) *
              C50013 * C1068 +
          (((C117 * C281 - C50094 * C291) * C16929 +
            (C117 * C292 - C50094 * C311) * C16924 + (C322 - C323) * C16930 +
            (C324 - C325) * C16925 + C618 * C16931 + C619 * C16926) *
               C33256 +
           ((C5967 - C5968) * C16929 + (C5969 - C5970) * C16924 +
            C5971 * C16930 + C5972 * C16925 + C11121 * C16931 +
            C11122 * C16926) *
               C50174) *
              C50013 * C1069 +
          (((C50094 * C299 - C117 * C285) * C16929 +
            (C50094 * C315 - C117 * C300) * C16924 + (C334 - C335) * C16930 +
            (C336 - C337) * C16925 + (C338 - C339) * C16931 +
            (C340 - C341) * C16926) *
               C33256 +
           ((C6884 - C6885) * C16929 + (C6886 - C6887) * C16924 +
            (C5249 - C5250) * C16930 + (C5251 - C5252) * C16925 +
            (C10825 - C10826) * C16931 + (C10827 - C10828) * C16926) *
               C50174) *
              C50013 * C1070 +
          (((C117 * C1073 - C50094 * C1077) * C16929 +
            (C117 * C1078 - C50094 * C1085) * C16924 +
            (C117 * C1074 - C50094 * C1079) * C16930 +
            (C117 * C1080 - C50094 * C1086) * C16925 +
            (C117 * C1075 - C50094 * C1081) * C16931 +
            (C117 * C1082 - C50094 * C1087) * C16926) *
               C33256 +
           ((C117 * C3181 - C50094 * C3184) * C16929 +
            (C117 * C3185 - C50094 * C3190) * C16924 +
            (C117 * C3182 - C50094 * C3186) * C16930 +
            (C117 * C3187 - C50094 * C3191) * C16925 +
            (C117 * C3183 - C50094 * C3188) * C16931 +
            (C117 * C3189 - C50094 * C3192) * C16926) *
               C50174) *
              C50013 * C1071) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C16929 +
             (C50094 * C143 - C117 * C130) * C16924 + (C151 - C152) * C16930 +
             (C153 - C154) * C16925 + C171 * C16931 + C172 * C16926) *
                C33256 +
            ((C5415 - C5416) * C16929 + (C5417 - C5418) * C16924 +
             C5419 * C16930 + C5420 * C16925 + C5765 * C16931 +
             C5766 * C16926) *
                C50174) *
               C50013 * C997 +
           (((C117 * C281 - C50094 * C291) * C16929 +
             (C117 * C292 - C50094 * C311) * C16924 + (C322 - C323) * C16930 +
             (C324 - C325) * C16925 + C618 * C16931 + C619 * C16926) *
                C33256 +
            ((C5967 - C5968) * C16929 + (C5969 - C5970) * C16924 +
             C5971 * C16930 + C5972 * C16925 + C11121 * C16931 +
             C11122 * C16926) *
                C50174) *
               C50013 * C50049) *
              C999 +
          ((((C152 - C151) * C16929 + (C154 - C153) * C16924 +
             (C156 - C155) * C16930 + (C158 - C157) * C16925 + C175 * C16931 +
             C176 * C16926) *
                C33256 +
            (C5427 * C16929 + C5428 * C16924 + C730 * C16930 + C731 * C16925 +
             C732 * C16931 + C733 * C16926) *
                C50174) *
               C50013 * C997 +
           (((C323 - C322) * C16929 + (C325 - C324) * C16924 +
             (C327 - C326) * C16930 + (C329 - C328) * C16925 +
             (C331 - C330) * C16931 + (C333 - C332) * C16926) *
                C33256 +
            (C5979 * C16929 + C5980 * C16924 + C11465 * C16930 +
             C11466 * C16925 + (C896 - C897) * C16931 +
             (C898 - C899) * C16926) *
                C50174) *
               C50013 * C50049) *
              C1000 +
          (((C171 * C16929 + C172 * C16924 + C173 * C16930 + C174 * C16925 +
             (C164 - C163) * C16931 + (C166 - C165) * C16926) *
                C33256 +
            (C5765 * C16929 + C5766 * C16924 + C11269 * C16930 +
             C11270 * C16925 + (C734 - C735) * C16931 +
             (C736 - C737) * C16926) *
                C50174) *
               C50013 * C997 +
           ((C618 * C16929 + C619 * C16924 + C620 * C16930 + C621 * C16925 +
             (C623 - C622) * C16931 + (C625 - C624) * C16926) *
                C33256 +
            (C11121 * C16929 + C11122 * C16924 + (C897 - C896) * C16930 +
             (C899 - C898) * C16925 + (C117 * C871 - C50094 * C880) * C16931 +
             (C117 * C881 - C50094 * C886) * C16926) *
                C50174) *
               C50013 * C50049) *
              C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C16929 +
             (C50094 * C143 - C117 * C130) * C16924 + (C151 - C152) * C16930 +
             (C153 - C154) * C16925 + C171 * C16931 + C172 * C16926) *
                C33256 +
            ((C5415 - C5416) * C16929 + (C5417 - C5418) * C16924 +
             C5419 * C16930 + C5420 * C16925 + C5765 * C16931 +
             C5766 * C16926) *
                C50174) *
               C443 +
           (((C5416 - C5415) * C16929 + (C5418 - C5417) * C16924 +
             C5427 * C16930 + C5428 * C16925 + C730 * C16931 + C731 * C16926) *
                C33256 +
            ((C5422 - C5421) * C16929 + (C5424 - C5423) * C16924 +
             C5429 * C16930 + C5430 * C16925 + C5443 * C16931 +
             C5444 * C16926) *
                C50174) *
               C444 +
           ((C5449 * C16929 + C5450 * C16924 + C5425 * C16930 + C5426 * C16925 +
             C5767 * C16931 + C5768 * C16926) *
                C33256 +
            ((C5432 - C5431) * C16929 + (C5434 - C5433) * C16924 +
             C5455 * C16930 + C5456 * C16925 + (C5445 - C5446) * C16931 +
             (C5447 - C5448) * C16926) *
                C50174) *
               C445) *
              C997 +
          ((((C117 * C281 - C50094 * C291) * C16929 +
             (C117 * C292 - C50094 * C311) * C16924 + (C322 - C323) * C16930 +
             (C324 - C325) * C16925 + C618 * C16931 + C619 * C16926) *
                C33256 +
            ((C5967 - C5968) * C16929 + (C5969 - C5970) * C16924 +
             C5971 * C16930 + C5972 * C16925 + C11121 * C16931 +
             C11122 * C16926) *
                C50174) *
               C443 +
           (((C5968 - C5967) * C16929 + (C5970 - C5969) * C16924 +
             C5979 * C16930 + C5980 * C16925 + C11465 * C16931 +
             C11466 * C16926) *
                C33256 +
            ((C5974 - C5973) * C16929 + (C5976 - C5975) * C16924 +
             C5981 * C16930 + C5982 * C16925 + (C5615 - C5616) * C16931 +
             (C5617 - C5618) * C16926) *
                C50174) *
               C444 +
           ((C6385 * C16929 + C6386 * C16924 + C5977 * C16930 + C5978 * C16925 +
             (C5616 - C5615) * C16931 + (C5618 - C5617) * C16926) *
                C33256 +
            ((C6390 - C6389) * C16929 + (C6392 - C6391) * C16924 +
             (C5984 - C5983) * C16930 + (C5986 - C5985) * C16925 +
             (C117 * C5962 - C50094 * C5963) * C16931 +
             (C117 * C5964 - C50094 * C5965) * C16926) *
                C50174) *
               C445) *
              C50049) *
         C49978) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
              C2263 * C299 - C2268 * C285) *
                 C19689 +
             (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
              C2263 * C315 - C2268 * C300) *
                 C49950) *
                C33256 +
            ((C36179 - C36180 + C36181 - C36182 + C36183 - C36184) * C19689 +
             (C36185 - C36186 + C36187 - C36188 + C36189 - C36190) * C49950) *
                C50174) *
               C50013 * C997 +
           (((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
              C2268 * C1073 - C2263 * C1077) *
                 C19689 +
             (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
              C2268 * C1078 - C2263 * C1085) *
                 C49950) *
                C33256 +
            ((C36689 - C36690 + C36691 - C36692 + C36693 - C36694) * C19689 +
             (C36695 - C36696 + C36697 - C36698 + C36699 - C36700) * C49950) *
                C50174) *
               C50013 * C50049) *
              C999 +
          ((((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C19689 +
             (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C49950) *
                C33256 +
            ((C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C19689 +
             (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49950) *
                C50174) *
               C50013 * C997 +
           (((C2467 - C2466 + C2469 - C2468 + C2471 - C2470) * C19689 +
             (C2473 - C2472 + C2475 - C2474 + C2477 - C2476) * C49950) *
                C33256 +
            ((C3194 - C3195 + C3196 - C3197 + C3198 - C3199) * C19689 +
             (C3200 - C3201 + C3202 - C3203 + C3204 - C3205) * C49950) *
                C50174) *
               C50013 * C50049) *
              C1000 +
          ((((C2285 - C2284 + C2287 - C2286 + C2289 - C2288) * C19689 +
             (C2291 - C2290 + C2293 - C2292 + C2295 - C2294) * C49950) *
                C33256 +
            ((C2976 - C2977 + C2978 - C2979 + C2980 - C2981) * C19689 +
             (C2982 - C2983 + C2984 - C2985 + C2986 - C2987) * C49950) *
                C50174) *
               C50013 * C997 +
           (((C2819 - C2818 + C2821 - C2820 + C2823 - C2822) * C19689 +
             (C2825 - C2824 + C2827 - C2826 + C2829 - C2828) * C49950) *
                C33256 +
            ((C2266 * C869 - C2261 * C876 + C2267 * C1536 - C2262 * C1542 +
              C2268 * C3183 - C2263 * C3188) *
                 C19689 +
             (C2266 * C877 - C2261 * C884 + C2267 * C1543 - C2262 * C1548 +
              C2268 * C3189 - C2263 * C3192) *
                 C49950) *
                C50174) *
               C50013 * C50049) *
              C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
             C2263 * C299 - C2268 * C285) *
                C19689 +
            (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
             C2263 * C315 - C2268 * C300) *
                C49950) *
               C33256 +
           ((C36179 - C36180 + C36181 - C36182 + C36183 - C36184) * C19689 +
            (C36185 - C36186 + C36187 - C36188 + C36189 - C36190) * C49950) *
               C50174) *
              C50013 * C1068 +
          (((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
             C2268 * C1073 - C2263 * C1077) *
                C19689 +
            (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
             C2268 * C1078 - C2263 * C1085) *
                C49950) *
               C33256 +
           ((C36689 - C36690 + C36691 - C36692 + C36693 - C36694) * C19689 +
            (C36695 - C36696 + C36697 - C36698 + C36699 - C36700) * C49950) *
               C50174) *
              C50013 * C1069 +
          (((C2261 * C299 - C2266 * C285 + C2262 * C1077 - C2267 * C1073 +
             C2263 * C2456 - C2268 * C2453) *
                C19689 +
            (C2261 * C315 - C2266 * C300 + C2262 * C1085 - C2267 * C1078 +
             C2263 * C2462 - C2268 * C2457) *
                C49950) *
               C33256 +
           ((C2261 * C1538 - C2266 * C1534 + C2262 * C3184 - C2267 * C3181 +
             C2263 * C4099 - C2268 * C4097) *
                C19689 +
            (C2261 * C1546 - C2266 * C1539 + C2262 * C3190 - C2267 * C3185 +
             C2263 * C4103 - C2268 * C4100) *
                C49950) *
               C50174) *
              C50013 * C1070 +
          (((C2266 * C1073 - C2261 * C1077 + C2267 * C2453 - C2262 * C2456 +
             C2268 * C3449 - C2263 * C3451) *
                C19689 +
            (C2266 * C1078 - C2261 * C1085 + C2267 * C2457 - C2262 * C2462 +
             C2268 * C3452 - C2263 * C3455) *
                C49950) *
               C33256 +
           ((C2266 * C3181 - C2261 * C3184 + C2267 * C4097 - C2262 * C4099 +
             C2268 * C20808 - C2263 * C20809) *
                C19689 +
            (C2266 * C3185 - C2261 * C3190 + C2267 * C4100 - C2262 * C4103 +
             C2268 * C20810 - C2263 * C20811) *
                C49950) *
               C50174) *
              C50013 * C1071) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
              C2263 * C299 - C2268 * C285) *
                 C19689 +
             (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
              C2263 * C315 - C2268 * C300) *
                 C49950) *
                C33256 +
            ((C36179 - C36180 + C36181 - C36182 + C36183 - C36184) * C19689 +
             (C36185 - C36186 + C36187 - C36188 + C36189 - C36190) * C49950) *
                C50174) *
               C443 +
           (((C36180 - C36179 + C36182 - C36181 + C36184 - C36183) * C19689 +
             (C36186 - C36185 + C36188 - C36187 + C36190 - C36189) * C49950) *
                C33256 +
            ((C36191 - C36192 + C36193 - C36194 + C36195 - C36196) * C19689 +
             (C36197 - C36198 + C36199 - C36200 + C36201 - C36202) * C49950) *
                C50174) *
               C444 +
           (((C36192 - C36191 + C36194 - C36193 + C36196 - C36195) * C19689 +
             (C36198 - C36197 + C36200 - C36199 + C36202 - C36201) * C49950) *
                C33256 +
            ((C2261 * C1822 - C2266 * C1818 + C2262 * C4499 - C2267 * C4495 +
              C2263 * C4500 - C2268 * C4496) *
                 C19689 +
             (C2261 * C1830 - C2266 * C1823 + C2262 * C4507 - C2267 * C4501 +
              C2263 * C4508 - C2268 * C4502) *
                 C49950) *
                C50174) *
               C445) *
              C997 +
          ((((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
              C2268 * C1073 - C2263 * C1077) *
                 C19689 +
             (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
              C2268 * C1078 - C2263 * C1085) *
                 C49950) *
                C33256 +
            ((C36689 - C36690 + C36691 - C36692 + C36693 - C36694) * C19689 +
             (C36695 - C36696 + C36697 - C36698 + C36699 - C36700) * C49950) *
                C50174) *
               C443 +
           (((C36690 - C36689 + C36692 - C36691 + C36694 - C36693) * C19689 +
             (C36696 - C36695 + C36698 - C36697 + C36700 - C36699) * C49950) *
                C33256 +
            ((C37091 - C37092 + C37093 - C37094 + C37095 - C37096) * C19689 +
             (C37097 - C37098 + C37099 - C37100 + C37101 - C37102) * C49950) *
                C50174) *
               C444 +
           (((C37092 - C37091 + C37094 - C37093 + C37096 - C37095) * C19689 +
             (C37098 - C37097 + C37100 - C37099 + C37102 - C37101) * C49950) *
                C33256 +
            ((C2266 * C4495 - C2261 * C4499 + C2267 * C4496 - C2262 * C4500 +
              C2268 * C21074 - C2263 * C21075) *
                 C19689 +
             (C2266 * C4501 - C2261 * C4507 + C2267 * C4502 - C2262 * C4508 +
              C2268 * C21076 - C2263 * C21077) *
                 C49950) *
                C50174) *
               C445) *
              C50049) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[218] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C50094 * C129 - C117 * C122) * C16929 +
              (C50094 * C143 - C117 * C130) * C16924 + (C151 - C152) * C16930 +
              (C153 - C154) * C16925 + C171 * C16931 + C172 * C16926) *
                 C33256 +
             ((C5415 - C5416) * C16929 + (C5417 - C5418) * C16924 +
              C5419 * C16930 + C5420 * C16925 + C5765 * C16931 +
              C5766 * C16926) *
                 C50174) *
                C50240 +
            (((C5416 - C5415) * C16929 + (C5418 - C5417) * C16924 +
              C5427 * C16930 + C5428 * C16925 + C730 * C16931 + C731 * C16926) *
                 C33256 +
             ((C5422 - C5421) * C16929 + (C5424 - C5423) * C16924 +
              C5429 * C16930 + C5430 * C16925 + C5443 * C16931 +
              C5444 * C16926) *
                 C50174) *
                C50077) *
               C997 +
           ((((C117 * C281 - C50094 * C291) * C16929 +
              (C117 * C292 - C50094 * C311) * C16924 + (C322 - C323) * C16930 +
              (C324 - C325) * C16925 + C618 * C16931 + C619 * C16926) *
                 C33256 +
             ((C5967 - C5968) * C16929 + (C5969 - C5970) * C16924 +
              C5971 * C16930 + C5972 * C16925 + C11121 * C16931 +
              C11122 * C16926) *
                 C50174) *
                C50240 +
            (((C5968 - C5967) * C16929 + (C5970 - C5969) * C16924 +
              C5979 * C16930 + C5980 * C16925 + C11465 * C16931 +
              C11466 * C16926) *
                 C33256 +
             ((C5974 - C5973) * C16929 + (C5976 - C5975) * C16924 +
              C5981 * C16930 + C5982 * C16925 + (C5615 - C5616) * C16931 +
              (C5617 - C5618) * C16926) *
                 C50174) *
                C50077) *
               C50049) *
              C50231 +
          (((((C152 - C151) * C16929 + (C154 - C153) * C16924 +
              (C156 - C155) * C16930 + (C158 - C157) * C16925 + C175 * C16931 +
              C176 * C16926) *
                 C33256 +
             (C5427 * C16929 + C5428 * C16924 + C730 * C16930 + C731 * C16925 +
              C732 * C16931 + C733 * C16926) *
                 C50174) *
                C50240 +
            ((C5419 * C16929 + C5420 * C16924 + C5765 * C16930 +
              C5766 * C16925 + C11269 * C16931 + C11270 * C16926) *
                 C33256 +
             (C5425 * C16929 + C5426 * C16924 + C5767 * C16930 +
              C5768 * C16925 + (C507 - C508) * C16931 +
              (C509 - C510) * C16926) *
                 C50174) *
                C50077) *
               C997 +
           ((((C323 - C322) * C16929 + (C325 - C324) * C16924 +
              (C327 - C326) * C16930 + (C329 - C328) * C16925 +
              (C331 - C330) * C16931 + (C333 - C332) * C16926) *
                 C33256 +
             (C5979 * C16929 + C5980 * C16924 + C11465 * C16930 +
              C11466 * C16925 + (C896 - C897) * C16931 +
              (C898 - C899) * C16926) *
                 C50174) *
                C50240 +
            ((C5971 * C16929 + C5972 * C16924 + C11121 * C16930 +
              C11122 * C16925 + (C897 - C896) * C16931 +
              (C899 - C898) * C16926) *
                 C33256 +
             (C5977 * C16929 + C5978 * C16924 + (C5616 - C5615) * C16930 +
              (C5618 - C5617) * C16925 +
              (C117 * C1190 - C50094 * C1197) * C16931 +
              (C117 * C1198 - C50094 * C1202) * C16926) *
                 C50174) *
                C50077) *
               C50049) *
              C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
               C2263 * C299 - C2268 * C285) *
                  C19689 +
              (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
               C2263 * C315 - C2268 * C300) *
                  C49950) *
                 C33256 +
             ((C36179 - C36180 + C36181 - C36182 + C36183 - C36184) * C19689 +
              (C36185 - C36186 + C36187 - C36188 + C36189 - C36190) * C49950) *
                 C50174) *
                C50240 +
            (((C36180 - C36179 + C36182 - C36181 + C36184 - C36183) * C19689 +
              (C36186 - C36185 + C36188 - C36187 + C36190 - C36189) * C49950) *
                 C33256 +
             ((C36191 - C36192 + C36193 - C36194 + C36195 - C36196) * C19689 +
              (C36197 - C36198 + C36199 - C36200 + C36201 - C36202) * C49950) *
                 C50174) *
                C50077) *
               C997 +
           ((((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
               C2268 * C1073 - C2263 * C1077) *
                  C19689 +
              (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
               C2268 * C1078 - C2263 * C1085) *
                  C49950) *
                 C33256 +
             ((C36689 - C36690 + C36691 - C36692 + C36693 - C36694) * C19689 +
              (C36695 - C36696 + C36697 - C36698 + C36699 - C36700) * C49950) *
                 C50174) *
                C50240 +
            (((C36690 - C36689 + C36692 - C36691 + C36694 - C36693) * C19689 +
              (C36696 - C36695 + C36698 - C36697 + C36700 - C36699) * C49950) *
                 C33256 +
             ((C37091 - C37092 + C37093 - C37094 + C37095 - C37096) * C19689 +
              (C37097 - C37098 + C37099 - C37100 + C37101 - C37102) * C49950) *
                 C50174) *
                C50077) *
               C50049) *
              C50231 +
          (((((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C19689 +
              (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C49950) *
                 C33256 +
             ((C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C19689 +
              (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49950) *
                 C50174) *
                C50240 +
            (((C2649 - C2648 + C2651 - C2650 + C2653 - C2652) * C19689 +
              (C2655 - C2654 + C2657 - C2656 + C2659 - C2658) * C49950) *
                 C33256 +
             ((C2660 - C2661 + C2662 - C2663 + C2664 - C2665) * C19689 +
              (C2666 - C2667 + C2668 - C2669 + C2670 - C2671) * C49950) *
                 C50174) *
                C50077) *
               C997 +
           ((((C2467 - C2466 + C2469 - C2468 + C2471 - C2470) * C19689 +
              (C2473 - C2472 + C2475 - C2474 + C2477 - C2476) * C49950) *
                 C33256 +
             ((C3194 - C3195 + C3196 - C3197 + C3198 - C3199) * C19689 +
              (C3200 - C3201 + C3202 - C3203 + C3204 - C3205) * C49950) *
                 C50174) *
                C50240 +
            (((C3195 - C3194 + C3197 - C3196 + C3199 - C3198) * C19689 +
              (C3201 - C3200 + C3203 - C3202 + C3205 - C3204) * C49950) *
                 C33256 +
             ((C2266 * C1188 - C2261 * C1193 + C2267 * C2636 - C2262 * C2640 +
               C2268 * C3604 - C2263 * C3607) *
                  C19689 +
              (C2266 * C1194 - C2261 * C1200 + C2267 * C2641 - C2262 * C2645 +
               C2268 * C3608 - C2263 * C3610) *
                  C49950) *
                 C50174) *
                C50077) *
               C50049) *
              C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[219] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C16929 +
             (C50094 * C143 - C117 * C130) * C16924 + (C151 - C152) * C16930 +
             (C153 - C154) * C16925 + C171 * C16931 + C172 * C16926) *
                C33256 +
            ((C5415 - C5416) * C16929 + (C5417 - C5418) * C16924 +
             C5419 * C16930 + C5420 * C16925 + C5765 * C16931 +
             C5766 * C16926) *
                C50174) *
               C50013 * C997 +
           (((C117 * C281 - C50094 * C291) * C16929 +
             (C117 * C292 - C50094 * C311) * C16924 + (C322 - C323) * C16930 +
             (C324 - C325) * C16925 + C618 * C16931 + C619 * C16926) *
                C33256 +
            ((C5967 - C5968) * C16929 + (C5969 - C5970) * C16924 +
             C5971 * C16930 + C5972 * C16925 + C11121 * C16931 +
             C11122 * C16926) *
                C50174) *
               C50013 * C50049) *
              C999 +
          ((((C152 - C151) * C16929 + (C154 - C153) * C16924 +
             (C156 - C155) * C16930 + (C158 - C157) * C16925 + C175 * C16931 +
             C176 * C16926) *
                C33256 +
            (C5427 * C16929 + C5428 * C16924 + C730 * C16930 + C731 * C16925 +
             C732 * C16931 + C733 * C16926) *
                C50174) *
               C50013 * C997 +
           (((C323 - C322) * C16929 + (C325 - C324) * C16924 +
             (C327 - C326) * C16930 + (C329 - C328) * C16925 +
             (C331 - C330) * C16931 + (C333 - C332) * C16926) *
                C33256 +
            (C5979 * C16929 + C5980 * C16924 + C11465 * C16930 +
             C11466 * C16925 + (C896 - C897) * C16931 +
             (C898 - C899) * C16926) *
                C50174) *
               C50013 * C50049) *
              C1000 +
          (((C171 * C16929 + C172 * C16924 + C173 * C16930 + C174 * C16925 +
             (C164 - C163) * C16931 + (C166 - C165) * C16926) *
                C33256 +
            (C5765 * C16929 + C5766 * C16924 + C11269 * C16930 +
             C11270 * C16925 + (C734 - C735) * C16931 +
             (C736 - C737) * C16926) *
                C50174) *
               C50013 * C997 +
           ((C618 * C16929 + C619 * C16924 + C620 * C16930 + C621 * C16925 +
             (C623 - C622) * C16931 + (C625 - C624) * C16926) *
                C33256 +
            (C11121 * C16929 + C11122 * C16924 + (C897 - C896) * C16930 +
             (C899 - C898) * C16925 + (C117 * C871 - C50094 * C880) * C16931 +
             (C117 * C881 - C50094 * C886) * C16926) *
                C50174) *
               C50013 * C50049) *
              C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C16929 +
            (C50094 * C143 - C117 * C130) * C16924 + (C151 - C152) * C16930 +
            (C153 - C154) * C16925 + C171 * C16931 + C172 * C16926) *
               C33256 +
           ((C5415 - C5416) * C16929 + (C5417 - C5418) * C16924 +
            C5419 * C16930 + C5420 * C16925 + C5765 * C16931 + C5766 * C16926) *
               C50174) *
              C50013 * C1068 +
          (((C117 * C281 - C50094 * C291) * C16929 +
            (C117 * C292 - C50094 * C311) * C16924 + (C322 - C323) * C16930 +
            (C324 - C325) * C16925 + C618 * C16931 + C619 * C16926) *
               C33256 +
           ((C5967 - C5968) * C16929 + (C5969 - C5970) * C16924 +
            C5971 * C16930 + C5972 * C16925 + C11121 * C16931 +
            C11122 * C16926) *
               C50174) *
              C50013 * C1069 +
          (((C50094 * C299 - C117 * C285) * C16929 +
            (C50094 * C315 - C117 * C300) * C16924 + (C334 - C335) * C16930 +
            (C336 - C337) * C16925 + (C338 - C339) * C16931 +
            (C340 - C341) * C16926) *
               C33256 +
           ((C6884 - C6885) * C16929 + (C6886 - C6887) * C16924 +
            (C5249 - C5250) * C16930 + (C5251 - C5252) * C16925 +
            (C10825 - C10826) * C16931 + (C10827 - C10828) * C16926) *
               C50174) *
              C50013 * C1070 +
          (((C117 * C1073 - C50094 * C1077) * C16929 +
            (C117 * C1078 - C50094 * C1085) * C16924 +
            (C117 * C1074 - C50094 * C1079) * C16930 +
            (C117 * C1080 - C50094 * C1086) * C16925 +
            (C117 * C1075 - C50094 * C1081) * C16931 +
            (C117 * C1082 - C50094 * C1087) * C16926) *
               C33256 +
           ((C117 * C3181 - C50094 * C3184) * C16929 +
            (C117 * C3185 - C50094 * C3190) * C16924 +
            (C117 * C3182 - C50094 * C3186) * C16930 +
            (C117 * C3187 - C50094 * C3191) * C16925 +
            (C117 * C3183 - C50094 * C3188) * C16931 +
            (C117 * C3189 - C50094 * C3192) * C16926) *
               C50174) *
              C50013 * C1071) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
              C2263 * C299 - C2268 * C285) *
                 C19689 +
             (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
              C2263 * C315 - C2268 * C300) *
                 C49950) *
                C33256 +
            ((C36179 - C36180 + C36181 - C36182 + C36183 - C36184) * C19689 +
             (C36185 - C36186 + C36187 - C36188 + C36189 - C36190) * C49950) *
                C50174) *
               C50013 * C997 +
           (((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
              C2268 * C1073 - C2263 * C1077) *
                 C19689 +
             (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
              C2268 * C1078 - C2263 * C1085) *
                 C49950) *
                C33256 +
            ((C36689 - C36690 + C36691 - C36692 + C36693 - C36694) * C19689 +
             (C36695 - C36696 + C36697 - C36698 + C36699 - C36700) * C49950) *
                C50174) *
               C50013 * C50049) *
              C999 +
          ((((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C19689 +
             (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C49950) *
                C33256 +
            ((C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C19689 +
             (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49950) *
                C50174) *
               C50013 * C997 +
           (((C2467 - C2466 + C2469 - C2468 + C2471 - C2470) * C19689 +
             (C2473 - C2472 + C2475 - C2474 + C2477 - C2476) * C49950) *
                C33256 +
            ((C3194 - C3195 + C3196 - C3197 + C3198 - C3199) * C19689 +
             (C3200 - C3201 + C3202 - C3203 + C3204 - C3205) * C49950) *
                C50174) *
               C50013 * C50049) *
              C1000 +
          ((((C2285 - C2284 + C2287 - C2286 + C2289 - C2288) * C19689 +
             (C2291 - C2290 + C2293 - C2292 + C2295 - C2294) * C49950) *
                C33256 +
            ((C2976 - C2977 + C2978 - C2979 + C2980 - C2981) * C19689 +
             (C2982 - C2983 + C2984 - C2985 + C2986 - C2987) * C49950) *
                C50174) *
               C50013 * C997 +
           (((C2819 - C2818 + C2821 - C2820 + C2823 - C2822) * C19689 +
             (C2825 - C2824 + C2827 - C2826 + C2829 - C2828) * C49950) *
                C33256 +
            ((C2266 * C869 - C2261 * C876 + C2267 * C1536 - C2262 * C1542 +
              C2268 * C3183 - C2263 * C3188) *
                 C19689 +
             (C2266 * C877 - C2261 * C884 + C2267 * C1543 - C2262 * C1548 +
              C2268 * C3189 - C2263 * C3192) *
                 C49950) *
                C50174) *
               C50013 * C50049) *
              C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
             C2263 * C299 - C2268 * C285) *
                C19689 +
            (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
             C2263 * C315 - C2268 * C300) *
                C49950) *
               C33256 +
           ((C36179 - C36180 + C36181 - C36182 + C36183 - C36184) * C19689 +
            (C36185 - C36186 + C36187 - C36188 + C36189 - C36190) * C49950) *
               C50174) *
              C50013 * C1068 +
          (((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
             C2268 * C1073 - C2263 * C1077) *
                C19689 +
            (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
             C2268 * C1078 - C2263 * C1085) *
                C49950) *
               C33256 +
           ((C36689 - C36690 + C36691 - C36692 + C36693 - C36694) * C19689 +
            (C36695 - C36696 + C36697 - C36698 + C36699 - C36700) * C49950) *
               C50174) *
              C50013 * C1069 +
          (((C2261 * C299 - C2266 * C285 + C2262 * C1077 - C2267 * C1073 +
             C2263 * C2456 - C2268 * C2453) *
                C19689 +
            (C2261 * C315 - C2266 * C300 + C2262 * C1085 - C2267 * C1078 +
             C2263 * C2462 - C2268 * C2457) *
                C49950) *
               C33256 +
           ((C2261 * C1538 - C2266 * C1534 + C2262 * C3184 - C2267 * C3181 +
             C2263 * C4099 - C2268 * C4097) *
                C19689 +
            (C2261 * C1546 - C2266 * C1539 + C2262 * C3190 - C2267 * C3185 +
             C2263 * C4103 - C2268 * C4100) *
                C49950) *
               C50174) *
              C50013 * C1070 +
          (((C2266 * C1073 - C2261 * C1077 + C2267 * C2453 - C2262 * C2456 +
             C2268 * C3449 - C2263 * C3451) *
                C19689 +
            (C2266 * C1078 - C2261 * C1085 + C2267 * C2457 - C2262 * C2462 +
             C2268 * C3452 - C2263 * C3455) *
                C49950) *
               C33256 +
           ((C2266 * C3181 - C2261 * C3184 + C2267 * C4097 - C2262 * C4099 +
             C2268 * C20808 - C2263 * C20809) *
                C19689 +
            (C2266 * C3185 - C2261 * C3190 + C2267 * C4100 - C2262 * C4103 +
             C2268 * C20810 - C2263 * C20811) *
                C49950) *
               C50174) *
              C50013 * C1071) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[220] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C50094 * C129 - C117 * C122) * C16929 +
              (C50094 * C143 - C117 * C130) * C16924 + (C151 - C152) * C16930 +
              (C153 - C154) * C16925 + C171 * C16931 + C172 * C16926) *
                 C33256 +
             ((C5415 - C5416) * C16929 + (C5417 - C5418) * C16924 +
              C5419 * C16930 + C5420 * C16925 + C5765 * C16931 +
              C5766 * C16926) *
                 C50174) *
                C1648 +
            (((C5416 - C5415) * C16929 + (C5418 - C5417) * C16924 +
              C5427 * C16930 + C5428 * C16925 + C730 * C16931 + C731 * C16926) *
                 C33256 +
             ((C5422 - C5421) * C16929 + (C5424 - C5423) * C16924 +
              C5429 * C16930 + C5430 * C16925 + C5443 * C16931 +
              C5444 * C16926) *
                 C50174) *
                C50077) *
               C50239 +
           ((((C117 * C281 - C50094 * C291) * C16929 +
              (C117 * C292 - C50094 * C311) * C16924 + (C322 - C323) * C16930 +
              (C324 - C325) * C16925 + C618 * C16931 + C619 * C16926) *
                 C33256 +
             ((C5967 - C5968) * C16929 + (C5969 - C5970) * C16924 +
              C5971 * C16930 + C5972 * C16925 + C11121 * C16931 +
              C11122 * C16926) *
                 C50174) *
                C1648 +
            (((C5968 - C5967) * C16929 + (C5970 - C5969) * C16924 +
              C5979 * C16930 + C5980 * C16925 + C11465 * C16931 +
              C11466 * C16926) *
                 C33256 +
             ((C5974 - C5973) * C16929 + (C5976 - C5975) * C16924 +
              C5981 * C16930 + C5982 * C16925 + (C5615 - C5616) * C16931 +
              (C5617 - C5618) * C16926) *
                 C50174) *
                C50077) *
               C50049) *
              C50231 +
          (((((C152 - C151) * C16929 + (C154 - C153) * C16924 +
              (C156 - C155) * C16930 + (C158 - C157) * C16925 + C175 * C16931 +
              C176 * C16926) *
                 C33256 +
             (C5427 * C16929 + C5428 * C16924 + C730 * C16930 + C731 * C16925 +
              C732 * C16931 + C733 * C16926) *
                 C50174) *
                C1648 +
            ((C5419 * C16929 + C5420 * C16924 + C5765 * C16930 +
              C5766 * C16925 + C11269 * C16931 + C11270 * C16926) *
                 C33256 +
             (C5425 * C16929 + C5426 * C16924 + C5767 * C16930 +
              C5768 * C16925 + (C507 - C508) * C16931 +
              (C509 - C510) * C16926) *
                 C50174) *
                C50077) *
               C50239 +
           ((((C323 - C322) * C16929 + (C325 - C324) * C16924 +
              (C327 - C326) * C16930 + (C329 - C328) * C16925 +
              (C331 - C330) * C16931 + (C333 - C332) * C16926) *
                 C33256 +
             (C5979 * C16929 + C5980 * C16924 + C11465 * C16930 +
              C11466 * C16925 + (C896 - C897) * C16931 +
              (C898 - C899) * C16926) *
                 C50174) *
                C1648 +
            ((C5971 * C16929 + C5972 * C16924 + C11121 * C16930 +
              C11122 * C16925 + (C897 - C896) * C16931 +
              (C899 - C898) * C16926) *
                 C33256 +
             (C5977 * C16929 + C5978 * C16924 + (C5616 - C5615) * C16930 +
              (C5618 - C5617) * C16925 +
              (C117 * C1190 - C50094 * C1197) * C16931 +
              (C117 * C1198 - C50094 * C1202) * C16926) *
                 C50174) *
                C50077) *
               C50049) *
              C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
               C2263 * C299 - C2268 * C285) *
                  C19689 +
              (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
               C2263 * C315 - C2268 * C300) *
                  C49950) *
                 C33256 +
             ((C36179 - C36180 + C36181 - C36182 + C36183 - C36184) * C19689 +
              (C36185 - C36186 + C36187 - C36188 + C36189 - C36190) * C49950) *
                 C50174) *
                C1648 +
            (((C36180 - C36179 + C36182 - C36181 + C36184 - C36183) * C19689 +
              (C36186 - C36185 + C36188 - C36187 + C36190 - C36189) * C49950) *
                 C33256 +
             ((C36191 - C36192 + C36193 - C36194 + C36195 - C36196) * C19689 +
              (C36197 - C36198 + C36199 - C36200 + C36201 - C36202) * C49950) *
                 C50174) *
                C50077) *
               C50239 +
           ((((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
               C2268 * C1073 - C2263 * C1077) *
                  C19689 +
              (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
               C2268 * C1078 - C2263 * C1085) *
                  C49950) *
                 C33256 +
             ((C36689 - C36690 + C36691 - C36692 + C36693 - C36694) * C19689 +
              (C36695 - C36696 + C36697 - C36698 + C36699 - C36700) * C49950) *
                 C50174) *
                C1648 +
            (((C36690 - C36689 + C36692 - C36691 + C36694 - C36693) * C19689 +
              (C36696 - C36695 + C36698 - C36697 + C36700 - C36699) * C49950) *
                 C33256 +
             ((C37091 - C37092 + C37093 - C37094 + C37095 - C37096) * C19689 +
              (C37097 - C37098 + C37099 - C37100 + C37101 - C37102) * C49950) *
                 C50174) *
                C50077) *
               C50049) *
              C50231 +
          (((((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C19689 +
              (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C49950) *
                 C33256 +
             ((C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C19689 +
              (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49950) *
                 C50174) *
                C1648 +
            (((C2649 - C2648 + C2651 - C2650 + C2653 - C2652) * C19689 +
              (C2655 - C2654 + C2657 - C2656 + C2659 - C2658) * C49950) *
                 C33256 +
             ((C2660 - C2661 + C2662 - C2663 + C2664 - C2665) * C19689 +
              (C2666 - C2667 + C2668 - C2669 + C2670 - C2671) * C49950) *
                 C50174) *
                C50077) *
               C50239 +
           ((((C2467 - C2466 + C2469 - C2468 + C2471 - C2470) * C19689 +
              (C2473 - C2472 + C2475 - C2474 + C2477 - C2476) * C49950) *
                 C33256 +
             ((C3194 - C3195 + C3196 - C3197 + C3198 - C3199) * C19689 +
              (C3200 - C3201 + C3202 - C3203 + C3204 - C3205) * C49950) *
                 C50174) *
                C1648 +
            (((C3195 - C3194 + C3197 - C3196 + C3199 - C3198) * C19689 +
              (C3201 - C3200 + C3203 - C3202 + C3205 - C3204) * C49950) *
                 C33256 +
             ((C2266 * C1188 - C2261 * C1193 + C2267 * C2636 - C2262 * C2640 +
               C2268 * C3604 - C2263 * C3607) *
                  C19689 +
              (C2266 * C1194 - C2261 * C1200 + C2267 * C2641 - C2262 * C2645 +
               C2268 * C3608 - C2263 * C3610) *
                  C49950) *
                 C50174) *
                C50077) *
               C50049) *
              C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[221] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C16929 +
             (C50094 * C143 - C117 * C130) * C16924 + (C151 - C152) * C16930 +
             (C153 - C154) * C16925 + C171 * C16931 + C172 * C16926) *
                C33256 +
            ((C5415 - C5416) * C16929 + (C5417 - C5418) * C16924 +
             C5419 * C16930 + C5420 * C16925 + C5765 * C16931 +
             C5766 * C16926) *
                C50174) *
               C50286 +
           (((C5416 - C5415) * C16929 + (C5418 - C5417) * C16924 +
             C5427 * C16930 + C5428 * C16925 + C730 * C16931 + C731 * C16926) *
                C33256 +
            ((C5422 - C5421) * C16929 + (C5424 - C5423) * C16924 +
             C5429 * C16930 + C5430 * C16925 + C5443 * C16931 +
             C5444 * C16926) *
                C50174) *
               C50287 +
           ((C5449 * C16929 + C5450 * C16924 + C5425 * C16930 + C5426 * C16925 +
             C5767 * C16931 + C5768 * C16926) *
                C33256 +
            ((C5432 - C5431) * C16929 + (C5434 - C5433) * C16924 +
             C5455 * C16930 + C5456 * C16925 + (C5445 - C5446) * C16931 +
             (C5447 - C5448) * C16926) *
                C50174) *
               C2064) *
              C50239 +
          ((((C117 * C281 - C50094 * C291) * C16929 +
             (C117 * C292 - C50094 * C311) * C16924 + (C322 - C323) * C16930 +
             (C324 - C325) * C16925 + C618 * C16931 + C619 * C16926) *
                C33256 +
            ((C5967 - C5968) * C16929 + (C5969 - C5970) * C16924 +
             C5971 * C16930 + C5972 * C16925 + C11121 * C16931 +
             C11122 * C16926) *
                C50174) *
               C50286 +
           (((C5968 - C5967) * C16929 + (C5970 - C5969) * C16924 +
             C5979 * C16930 + C5980 * C16925 + C11465 * C16931 +
             C11466 * C16926) *
                C33256 +
            ((C5974 - C5973) * C16929 + (C5976 - C5975) * C16924 +
             C5981 * C16930 + C5982 * C16925 + (C5615 - C5616) * C16931 +
             (C5617 - C5618) * C16926) *
                C50174) *
               C50287 +
           ((C6385 * C16929 + C6386 * C16924 + C5977 * C16930 + C5978 * C16925 +
             (C5616 - C5615) * C16931 + (C5618 - C5617) * C16926) *
                C33256 +
            ((C6390 - C6389) * C16929 + (C6392 - C6391) * C16924 +
             (C5984 - C5983) * C16930 + (C5986 - C5985) * C16925 +
             (C117 * C5962 - C50094 * C5963) * C16931 +
             (C117 * C5964 - C50094 * C5965) * C16926) *
                C50174) *
               C2064) *
              C50049) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
              C2263 * C299 - C2268 * C285) *
                 C19689 +
             (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
              C2263 * C315 - C2268 * C300) *
                 C49950) *
                C33256 +
            ((C36179 - C36180 + C36181 - C36182 + C36183 - C36184) * C19689 +
             (C36185 - C36186 + C36187 - C36188 + C36189 - C36190) * C49950) *
                C50174) *
               C50286 +
           (((C36180 - C36179 + C36182 - C36181 + C36184 - C36183) * C19689 +
             (C36186 - C36185 + C36188 - C36187 + C36190 - C36189) * C49950) *
                C33256 +
            ((C36191 - C36192 + C36193 - C36194 + C36195 - C36196) * C19689 +
             (C36197 - C36198 + C36199 - C36200 + C36201 - C36202) * C49950) *
                C50174) *
               C50287 +
           (((C36192 - C36191 + C36194 - C36193 + C36196 - C36195) * C19689 +
             (C36198 - C36197 + C36200 - C36199 + C36202 - C36201) * C49950) *
                C33256 +
            ((C37991 - C37992 + C37993 - C37994 + C37995 - C37996) * C19689 +
             (C37997 - C37998 + C37999 - C38000 + C38001 - C38002) * C49950) *
                C50174) *
               C2064) *
              C50239 +
          ((((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
              C2268 * C1073 - C2263 * C1077) *
                 C19689 +
             (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
              C2268 * C1078 - C2263 * C1085) *
                 C49950) *
                C33256 +
            ((C36689 - C36690 + C36691 - C36692 + C36693 - C36694) * C19689 +
             (C36695 - C36696 + C36697 - C36698 + C36699 - C36700) * C49950) *
                C50174) *
               C50286 +
           (((C36690 - C36689 + C36692 - C36691 + C36694 - C36693) * C19689 +
             (C36696 - C36695 + C36698 - C36697 + C36700 - C36699) * C49950) *
                C33256 +
            ((C37091 - C37092 + C37093 - C37094 + C37095 - C37096) * C19689 +
             (C37097 - C37098 + C37099 - C37100 + C37101 - C37102) * C49950) *
                C50174) *
               C50287 +
           (((C37092 - C37091 + C37094 - C37093 + C37096 - C37095) * C19689 +
             (C37098 - C37097 + C37100 - C37099 + C37102 - C37101) * C49950) *
                C33256 +
            ((C2266 * C4495 - C2261 * C4499 + C2267 * C4496 - C2262 * C4500 +
              C2268 * C21074 - C2263 * C21075) *
                 C19689 +
             (C2266 * C4501 - C2261 * C4507 + C2267 * C4502 - C2262 * C4508 +
              C2268 * C21076 - C2263 * C21077) *
                 C49950) *
                C50174) *
               C2064) *
              C50049) *
         C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[222] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C16929 +
             (C50094 * C143 - C117 * C130) * C16924 + (C151 - C152) * C16930 +
             (C153 - C154) * C16925 + C171 * C16931 + C172 * C16926) *
                C33256 +
            ((C5415 - C5416) * C16929 + (C5417 - C5418) * C16924 +
             C5419 * C16930 + C5420 * C16925 + C5765 * C16931 +
             C5766 * C16926) *
                C50174) *
               C1648 +
           (((C5416 - C5415) * C16929 + (C5418 - C5417) * C16924 +
             C5427 * C16930 + C5428 * C16925 + C730 * C16931 + C731 * C16926) *
                C33256 +
            ((C5422 - C5421) * C16929 + (C5424 - C5423) * C16924 +
             C5429 * C16930 + C5430 * C16925 + C5443 * C16931 +
             C5444 * C16926) *
                C50174) *
               C50077) *
              C276 +
          ((((C117 * C281 - C50094 * C291) * C16929 +
             (C117 * C292 - C50094 * C311) * C16924 + (C322 - C323) * C16930 +
             (C324 - C325) * C16925 + C618 * C16931 + C619 * C16926) *
                C33256 +
            ((C5967 - C5968) * C16929 + (C5969 - C5970) * C16924 +
             C5971 * C16930 + C5972 * C16925 + C11121 * C16931 +
             C11122 * C16926) *
                C50174) *
               C1648 +
           (((C5968 - C5967) * C16929 + (C5970 - C5969) * C16924 +
             C5979 * C16930 + C5980 * C16925 + C11465 * C16931 +
             C11466 * C16926) *
                C33256 +
            ((C5974 - C5973) * C16929 + (C5976 - C5975) * C16924 +
             C5981 * C16930 + C5982 * C16925 + (C5615 - C5616) * C16931 +
             (C5617 - C5618) * C16926) *
                C50174) *
               C50077) *
              C277 +
          ((((C50094 * C299 - C117 * C285) * C16929 +
             (C50094 * C315 - C117 * C300) * C16924 + (C334 - C335) * C16930 +
             (C336 - C337) * C16925 + (C338 - C339) * C16931 +
             (C340 - C341) * C16926) *
                C33256 +
            ((C6884 - C6885) * C16929 + (C6886 - C6887) * C16924 +
             (C5249 - C5250) * C16930 + (C5251 - C5252) * C16925 +
             (C10825 - C10826) * C16931 + (C10827 - C10828) * C16926) *
                C50174) *
               C1648 +
           (((C6885 - C6884) * C16929 + (C6887 - C6886) * C16924 +
             (C5250 - C5249) * C16930 + (C5252 - C5251) * C16925 +
             (C10826 - C10825) * C16931 + (C10828 - C10827) * C16926) *
                C33256 +
            ((C6889 - C6888) * C16929 + (C6891 - C6890) * C16924 +
             (C5254 - C5253) * C16930 + (C5256 - C5255) * C16925 +
             (C117 * C2637 - C50094 * C2642) * C16931 +
             (C117 * C2643 - C50094 * C2646) * C16926) *
                C50174) *
               C50077) *
              C278) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C16929 +
             (C50094 * C143 - C117 * C130) * C16924 + (C151 - C152) * C16930 +
             (C153 - C154) * C16925 + C171 * C16931 + C172 * C16926) *
                C33256 +
            ((C5415 - C5416) * C16929 + (C5417 - C5418) * C16924 +
             C5419 * C16930 + C5420 * C16925 + C5765 * C16931 +
             C5766 * C16926) *
                C50174) *
               C1648 +
           (((C5416 - C5415) * C16929 + (C5418 - C5417) * C16924 +
             C5427 * C16930 + C5428 * C16925 + C730 * C16931 + C731 * C16926) *
                C33256 +
            ((C5422 - C5421) * C16929 + (C5424 - C5423) * C16924 +
             C5429 * C16930 + C5430 * C16925 + C5443 * C16931 +
             C5444 * C16926) *
                C50174) *
               C50077) *
              C49997 * C999 +
          ((((C152 - C151) * C16929 + (C154 - C153) * C16924 +
             (C156 - C155) * C16930 + (C158 - C157) * C16925 + C175 * C16931 +
             C176 * C16926) *
                C33256 +
            (C5427 * C16929 + C5428 * C16924 + C730 * C16930 + C731 * C16925 +
             C732 * C16931 + C733 * C16926) *
                C50174) *
               C1648 +
           ((C5419 * C16929 + C5420 * C16924 + C5765 * C16930 + C5766 * C16925 +
             C11269 * C16931 + C11270 * C16926) *
                C33256 +
            (C5425 * C16929 + C5426 * C16924 + C5767 * C16930 + C5768 * C16925 +
             (C507 - C508) * C16931 + (C509 - C510) * C16926) *
                C50174) *
               C50077) *
              C49997 * C1000 +
          (((C171 * C16929 + C172 * C16924 + C173 * C16930 + C174 * C16925 +
             (C164 - C163) * C16931 + (C166 - C165) * C16926) *
                C33256 +
            (C5765 * C16929 + C5766 * C16924 + C11269 * C16930 +
             C11270 * C16925 + (C734 - C735) * C16931 +
             (C736 - C737) * C16926) *
                C50174) *
               C1648 +
           ((C730 * C16929 + C731 * C16924 + C732 * C16930 + C733 * C16925 +
             (C735 - C734) * C16931 + (C737 - C736) * C16926) *
                C33256 +
            (C5443 * C16929 + C5444 * C16924 + (C508 - C507) * C16930 +
             (C510 - C509) * C16925 + (C117 * C455 - C50094 * C474) * C16931 +
             (C117 * C475 - C50094 * C485) * C16926) *
                C50174) *
               C50077) *
              C49997 * C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C50094 * C129 - C117 * C122) * C16929 +
            (C50094 * C143 - C117 * C130) * C16924 + (C151 - C152) * C16930 +
            (C153 - C154) * C16925 + C171 * C16931 + C172 * C16926) *
               C33256 +
           ((C5415 - C5416) * C16929 + (C5417 - C5418) * C16924 +
            C5419 * C16930 + C5420 * C16925 + C5765 * C16931 + C5766 * C16926) *
               C50174) *
              C1814 +
          (((C5416 - C5415) * C16929 + (C5418 - C5417) * C16924 +
            C5427 * C16930 + C5428 * C16925 + C730 * C16931 + C731 * C16926) *
               C33256 +
           ((C5422 - C5421) * C16929 + (C5424 - C5423) * C16924 +
            C5429 * C16930 + C5430 * C16925 + C5443 * C16931 + C5444 * C16926) *
               C50174) *
              C1815 +
          ((C5449 * C16929 + C5450 * C16924 + C5425 * C16930 + C5426 * C16925 +
            C5767 * C16931 + C5768 * C16926) *
               C33256 +
           ((C5432 - C5431) * C16929 + (C5434 - C5433) * C16924 +
            C5455 * C16930 + C5456 * C16925 + (C5445 - C5446) * C16931 +
            (C5447 - C5448) * C16926) *
               C50174) *
              C1816 +
          ((C7290 * C16929 + C7291 * C16924 + C5453 * C16930 + C5454 * C16925 +
            (C5446 - C5445) * C16931 + (C5448 - C5447) * C16926) *
               C33256 +
           ((C7295 - C7294) * C16929 + (C7297 - C7296) * C16924 +
            (C5440 - C5439) * C16930 + (C5442 - C5441) * C16925 +
            (C117 * C5404 - C50094 * C5409) * C16931 +
            (C117 * C5410 - C50094 * C5413) * C16926) *
               C50174) *
              C1817) *
         C49997 * C49978) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
              C2263 * C299 - C2268 * C285) *
                 C19689 +
             (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
              C2263 * C315 - C2268 * C300) *
                 C49950) *
                C33256 +
            ((C36179 - C36180 + C36181 - C36182 + C36183 - C36184) * C19689 +
             (C36185 - C36186 + C36187 - C36188 + C36189 - C36190) * C49950) *
                C50174) *
               C1648 +
           (((C36180 - C36179 + C36182 - C36181 + C36184 - C36183) * C19689 +
             (C36186 - C36185 + C36188 - C36187 + C36190 - C36189) * C49950) *
                C33256 +
            ((C36191 - C36192 + C36193 - C36194 + C36195 - C36196) * C19689 +
             (C36197 - C36198 + C36199 - C36200 + C36201 - C36202) * C49950) *
                C50174) *
               C50077) *
              C49997 * C999 +
          ((((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C19689 +
             (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C49950) *
                C33256 +
            ((C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C19689 +
             (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49950) *
                C50174) *
               C1648 +
           (((C2649 - C2648 + C2651 - C2650 + C2653 - C2652) * C19689 +
             (C2655 - C2654 + C2657 - C2656 + C2659 - C2658) * C49950) *
                C33256 +
            ((C2660 - C2661 + C2662 - C2663 + C2664 - C2665) * C19689 +
             (C2666 - C2667 + C2668 - C2669 + C2670 - C2671) * C49950) *
                C50174) *
               C50077) *
              C49997 * C1000 +
          ((((C2285 - C2284 + C2287 - C2286 + C2289 - C2288) * C19689 +
             (C2291 - C2290 + C2293 - C2292 + C2295 - C2294) * C49950) *
                C33256 +
            ((C2976 - C2977 + C2978 - C2979 + C2980 - C2981) * C19689 +
             (C2982 - C2983 + C2984 - C2985 + C2986 - C2987) * C49950) *
                C50174) *
               C1648 +
           (((C2977 - C2976 + C2979 - C2978 + C2981 - C2980) * C19689 +
             (C2983 - C2982 + C2985 - C2984 + C2987 - C2986) * C49950) *
                C33256 +
            ((C2266 * C452 - C2261 * C468 + C2267 * C1189 - C2262 * C1195 +
              C2268 * C2637 - C2263 * C2642) *
                 C19689 +
             (C2266 * C469 - C2261 * C482 + C2267 * C1196 - C2262 * C1201 +
              C2268 * C2643 - C2263 * C2646) *
                 C49950) *
                C50174) *
               C50077) *
              C49997 * C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
              C2263 * C299 - C2268 * C285) *
                 C19689 +
             (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
              C2263 * C315 - C2268 * C300) *
                 C49950) *
                C33256 +
            ((C36179 - C36180 + C36181 - C36182 + C36183 - C36184) * C19689 +
             (C36185 - C36186 + C36187 - C36188 + C36189 - C36190) * C49950) *
                C50174) *
               C1648 +
           (((C36180 - C36179 + C36182 - C36181 + C36184 - C36183) * C19689 +
             (C36186 - C36185 + C36188 - C36187 + C36190 - C36189) * C49950) *
                C33256 +
            ((C36191 - C36192 + C36193 - C36194 + C36195 - C36196) * C19689 +
             (C36197 - C36198 + C36199 - C36200 + C36201 - C36202) * C49950) *
                C50174) *
               C50077) *
              C276 +
          ((((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
              C2268 * C1073 - C2263 * C1077) *
                 C19689 +
             (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
              C2268 * C1078 - C2263 * C1085) *
                 C49950) *
                C33256 +
            ((C36689 - C36690 + C36691 - C36692 + C36693 - C36694) * C19689 +
             (C36695 - C36696 + C36697 - C36698 + C36699 - C36700) * C49950) *
                C50174) *
               C1648 +
           (((C36690 - C36689 + C36692 - C36691 + C36694 - C36693) * C19689 +
             (C36696 - C36695 + C36698 - C36697 + C36700 - C36699) * C49950) *
                C33256 +
            ((C37091 - C37092 + C37093 - C37094 + C37095 - C37096) * C19689 +
             (C37097 - C37098 + C37099 - C37100 + C37101 - C37102) * C49950) *
                C50174) *
               C50077) *
              C277 +
          ((((C2261 * C299 - C2266 * C285 + C2262 * C1077 - C2267 * C1073 +
              C2263 * C2456 - C2268 * C2453) *
                 C19689 +
             (C2261 * C315 - C2266 * C300 + C2262 * C1085 - C2267 * C1078 +
              C2263 * C2462 - C2268 * C2457) *
                 C49950) *
                C33256 +
            ((C37589 - C37590 + C37591 - C37592 + C37593 - C37594) * C19689 +
             (C37595 - C37596 + C37597 - C37598 + C37599 - C37600) * C49950) *
                C50174) *
               C1648 +
           (((C37590 - C37589 + C37592 - C37591 + C37594 - C37593) * C19689 +
             (C37596 - C37595 + C37598 - C37597 + C37600 - C37599) * C49950) *
                C33256 +
            ((C2266 * C2635 - C2261 * C2638 + C2267 * C3603 - C2262 * C3605 +
              C2268 * C20478 - C2263 * C20479) *
                 C19689 +
             (C2266 * C2639 - C2261 * C2644 + C2267 * C3606 - C2262 * C3609 +
              C2268 * C20480 - C2263 * C20481) *
                 C49950) *
                C50174) *
               C50077) *
              C278) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
             C2263 * C299 - C2268 * C285) *
                C19689 +
            (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
             C2263 * C315 - C2268 * C300) *
                C49950) *
               C33256 +
           ((C36179 - C36180 + C36181 - C36182 + C36183 - C36184) * C19689 +
            (C36185 - C36186 + C36187 - C36188 + C36189 - C36190) * C49950) *
               C50174) *
              C1814 +
          (((C36180 - C36179 + C36182 - C36181 + C36184 - C36183) * C19689 +
            (C36186 - C36185 + C36188 - C36187 + C36190 - C36189) * C49950) *
               C33256 +
           ((C36191 - C36192 + C36193 - C36194 + C36195 - C36196) * C19689 +
            (C36197 - C36198 + C36199 - C36200 + C36201 - C36202) * C49950) *
               C50174) *
              C1815 +
          (((C36192 - C36191 + C36194 - C36193 + C36196 - C36195) * C19689 +
            (C36198 - C36197 + C36200 - C36199 + C36202 - C36201) * C49950) *
               C33256 +
           ((C37991 - C37992 + C37993 - C37994 + C37995 - C37996) * C19689 +
            (C37997 - C37998 + C37999 - C38000 + C38001 - C38002) * C49950) *
               C50174) *
              C1816 +
          (((C37992 - C37991 + C37994 - C37993 + C37996 - C37995) * C19689 +
            (C37998 - C37997 + C38000 - C37999 + C38002 - C38001) * C49950) *
               C33256 +
           ((C2266 * C5402 - C2261 * C5405 + C2267 * C6376 - C2262 * C6378 +
             C2268 * C22744 - C2263 * C22745) *
                C19689 +
            (C2266 * C5406 - C2261 * C5411 + C2267 * C6379 - C2262 * C6382 +
             C2268 * C22746 - C2263 * C22747) *
                C49950) *
               C50174) *
              C1817) *
         C49997 * C49978) /
            (p * q * std::sqrt(p + q));
    d2ee[223] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C16929 +
             (C50094 * C143 - C117 * C130) * C16924 + (C151 - C152) * C16930 +
             (C153 - C154) * C16925 + C171 * C16931 + C172 * C16926) *
                C33256 +
            ((C5415 - C5416) * C16929 + (C5417 - C5418) * C16924 +
             C5419 * C16930 + C5420 * C16925 + C5765 * C16931 +
             C5766 * C16926) *
                C50174) *
               C50286 +
           (((C5416 - C5415) * C16929 + (C5418 - C5417) * C16924 +
             C5427 * C16930 + C5428 * C16925 + C730 * C16931 + C731 * C16926) *
                C33256 +
            ((C5422 - C5421) * C16929 + (C5424 - C5423) * C16924 +
             C5429 * C16930 + C5430 * C16925 + C5443 * C16931 +
             C5444 * C16926) *
                C50174) *
               C50287 +
           ((C5449 * C16929 + C5450 * C16924 + C5425 * C16930 + C5426 * C16925 +
             C5767 * C16931 + C5768 * C16926) *
                C33256 +
            ((C5432 - C5431) * C16929 + (C5434 - C5433) * C16924 +
             C5455 * C16930 + C5456 * C16925 + (C5445 - C5446) * C16931 +
             (C5447 - C5448) * C16926) *
                C50174) *
               C2064) *
              C49997 * C50231 +
          ((((C152 - C151) * C16929 + (C154 - C153) * C16924 +
             (C156 - C155) * C16930 + (C158 - C157) * C16925 + C175 * C16931 +
             C176 * C16926) *
                C33256 +
            (C5427 * C16929 + C5428 * C16924 + C730 * C16930 + C731 * C16925 +
             C732 * C16931 + C733 * C16926) *
                C50174) *
               C50286 +
           ((C5419 * C16929 + C5420 * C16924 + C5765 * C16930 + C5766 * C16925 +
             C11269 * C16931 + C11270 * C16926) *
                C33256 +
            (C5425 * C16929 + C5426 * C16924 + C5767 * C16930 + C5768 * C16925 +
             (C507 - C508) * C16931 + (C509 - C510) * C16926) *
                C50174) *
               C50287 +
           ((C5429 * C16929 + C5430 * C16924 + C5443 * C16930 + C5444 * C16925 +
             (C508 - C507) * C16931 + (C510 - C509) * C16926) *
                C33256 +
            (C5453 * C16929 + C5454 * C16924 + (C5446 - C5445) * C16930 +
             (C5448 - C5447) * C16925 +
             (C117 * C1821 - C50094 * C1828) * C16931 +
             (C117 * C1829 - C50094 * C1833) * C16926) *
                C50174) *
               C2064) *
              C49997 * C49984)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
              C2263 * C299 - C2268 * C285) *
                 C19689 +
             (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
              C2263 * C315 - C2268 * C300) *
                 C49950) *
                C33256 +
            ((C36179 - C36180 + C36181 - C36182 + C36183 - C36184) * C19689 +
             (C36185 - C36186 + C36187 - C36188 + C36189 - C36190) * C49950) *
                C50174) *
               C50286 +
           (((C36180 - C36179 + C36182 - C36181 + C36184 - C36183) * C19689 +
             (C36186 - C36185 + C36188 - C36187 + C36190 - C36189) * C49950) *
                C33256 +
            ((C36191 - C36192 + C36193 - C36194 + C36195 - C36196) * C19689 +
             (C36197 - C36198 + C36199 - C36200 + C36201 - C36202) * C49950) *
                C50174) *
               C50287 +
           (((C36192 - C36191 + C36194 - C36193 + C36196 - C36195) * C19689 +
             (C36198 - C36197 + C36200 - C36199 + C36202 - C36201) * C49950) *
                C33256 +
            ((C37991 - C37992 + C37993 - C37994 + C37995 - C37996) * C19689 +
             (C37997 - C37998 + C37999 - C38000 + C38001 - C38002) * C49950) *
                C50174) *
               C2064) *
              C49997 * C50231 +
          ((((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C19689 +
             (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C49950) *
                C33256 +
            ((C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C19689 +
             (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49950) *
                C50174) *
               C50286 +
           (((C2649 - C2648 + C2651 - C2650 + C2653 - C2652) * C19689 +
             (C2655 - C2654 + C2657 - C2656 + C2659 - C2658) * C49950) *
                C33256 +
            ((C2660 - C2661 + C2662 - C2663 + C2664 - C2665) * C19689 +
             (C2666 - C2667 + C2668 - C2669 + C2670 - C2671) * C49950) *
                C50174) *
               C50287 +
           (((C2661 - C2660 + C2663 - C2662 + C2665 - C2664) * C19689 +
             (C2667 - C2666 + C2669 - C2668 + C2671 - C2670) * C49950) *
                C33256 +
            ((C2266 * C1819 - C2261 * C1824 + C2267 * C4497 - C2262 * C4503 +
              C2268 * C4498 - C2263 * C4504) *
                 C19689 +
             (C2266 * C1825 - C2261 * C1831 + C2267 * C4505 - C2262 * C4509 +
              C2268 * C4506 - C2263 * C4510) *
                 C49950) *
                C50174) *
               C2064) *
              C49997 * C49984)) /
            (p * q * std::sqrt(p + q));
    d2ee[224] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C16929 +
             (C50094 * C143 - C117 * C130) * C16924 + (C151 - C152) * C16930 +
             (C153 - C154) * C16925 + C171 * C16931 + C172 * C16926) *
                C33256 +
            ((C5415 - C5416) * C16929 + (C5417 - C5418) * C16924 +
             C5419 * C16930 + C5420 * C16925 + C5765 * C16931 +
             C5766 * C16926) *
                C50174) *
               C1648 +
           (((C5416 - C5415) * C16929 + (C5418 - C5417) * C16924 +
             C5427 * C16930 + C5428 * C16925 + C730 * C16931 + C731 * C16926) *
                C33256 +
            ((C5422 - C5421) * C16929 + (C5424 - C5423) * C16924 +
             C5429 * C16930 + C5430 * C16925 + C5443 * C16931 +
             C5444 * C16926) *
                C50174) *
               C50077) *
              C49997 * C999 +
          ((((C152 - C151) * C16929 + (C154 - C153) * C16924 +
             (C156 - C155) * C16930 + (C158 - C157) * C16925 + C175 * C16931 +
             C176 * C16926) *
                C33256 +
            (C5427 * C16929 + C5428 * C16924 + C730 * C16930 + C731 * C16925 +
             C732 * C16931 + C733 * C16926) *
                C50174) *
               C1648 +
           ((C5419 * C16929 + C5420 * C16924 + C5765 * C16930 + C5766 * C16925 +
             C11269 * C16931 + C11270 * C16926) *
                C33256 +
            (C5425 * C16929 + C5426 * C16924 + C5767 * C16930 + C5768 * C16925 +
             (C507 - C508) * C16931 + (C509 - C510) * C16926) *
                C50174) *
               C50077) *
              C49997 * C1000 +
          (((C171 * C16929 + C172 * C16924 + C173 * C16930 + C174 * C16925 +
             (C164 - C163) * C16931 + (C166 - C165) * C16926) *
                C33256 +
            (C5765 * C16929 + C5766 * C16924 + C11269 * C16930 +
             C11270 * C16925 + (C734 - C735) * C16931 +
             (C736 - C737) * C16926) *
                C50174) *
               C1648 +
           ((C730 * C16929 + C731 * C16924 + C732 * C16930 + C733 * C16925 +
             (C735 - C734) * C16931 + (C737 - C736) * C16926) *
                C33256 +
            (C5443 * C16929 + C5444 * C16924 + (C508 - C507) * C16930 +
             (C510 - C509) * C16925 + (C117 * C455 - C50094 * C474) * C16931 +
             (C117 * C475 - C50094 * C485) * C16926) *
                C50174) *
               C50077) *
              C49997 * C1001)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C50094 * C129 - C117 * C122) * C16929 +
             (C50094 * C143 - C117 * C130) * C16924 + (C151 - C152) * C16930 +
             (C153 - C154) * C16925 + C171 * C16931 + C172 * C16926) *
                C33256 +
            ((C5415 - C5416) * C16929 + (C5417 - C5418) * C16924 +
             C5419 * C16930 + C5420 * C16925 + C5765 * C16931 +
             C5766 * C16926) *
                C50174) *
               C1648 +
           (((C5416 - C5415) * C16929 + (C5418 - C5417) * C16924 +
             C5427 * C16930 + C5428 * C16925 + C730 * C16931 + C731 * C16926) *
                C33256 +
            ((C5422 - C5421) * C16929 + (C5424 - C5423) * C16924 +
             C5429 * C16930 + C5430 * C16925 + C5443 * C16931 +
             C5444 * C16926) *
                C50174) *
               C50077) *
              C276 +
          ((((C117 * C281 - C50094 * C291) * C16929 +
             (C117 * C292 - C50094 * C311) * C16924 + (C322 - C323) * C16930 +
             (C324 - C325) * C16925 + C618 * C16931 + C619 * C16926) *
                C33256 +
            ((C5967 - C5968) * C16929 + (C5969 - C5970) * C16924 +
             C5971 * C16930 + C5972 * C16925 + C11121 * C16931 +
             C11122 * C16926) *
                C50174) *
               C1648 +
           (((C5968 - C5967) * C16929 + (C5970 - C5969) * C16924 +
             C5979 * C16930 + C5980 * C16925 + C11465 * C16931 +
             C11466 * C16926) *
                C33256 +
            ((C5974 - C5973) * C16929 + (C5976 - C5975) * C16924 +
             C5981 * C16930 + C5982 * C16925 + (C5615 - C5616) * C16931 +
             (C5617 - C5618) * C16926) *
                C50174) *
               C50077) *
              C277 +
          ((((C50094 * C299 - C117 * C285) * C16929 +
             (C50094 * C315 - C117 * C300) * C16924 + (C334 - C335) * C16930 +
             (C336 - C337) * C16925 + (C338 - C339) * C16931 +
             (C340 - C341) * C16926) *
                C33256 +
            ((C6884 - C6885) * C16929 + (C6886 - C6887) * C16924 +
             (C5249 - C5250) * C16930 + (C5251 - C5252) * C16925 +
             (C10825 - C10826) * C16931 + (C10827 - C10828) * C16926) *
                C50174) *
               C1648 +
           (((C6885 - C6884) * C16929 + (C6887 - C6886) * C16924 +
             (C5250 - C5249) * C16930 + (C5252 - C5251) * C16925 +
             (C10826 - C10825) * C16931 + (C10828 - C10827) * C16926) *
                C33256 +
            ((C6889 - C6888) * C16929 + (C6891 - C6890) * C16924 +
             (C5254 - C5253) * C16930 + (C5256 - C5255) * C16925 +
             (C117 * C2637 - C50094 * C2642) * C16931 +
             (C117 * C2643 - C50094 * C2646) * C16926) *
                C50174) *
               C50077) *
              C278) *
         C49978) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
              C2263 * C299 - C2268 * C285) *
                 C19689 +
             (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
              C2263 * C315 - C2268 * C300) *
                 C49950) *
                C33256 +
            ((C36179 - C36180 + C36181 - C36182 + C36183 - C36184) * C19689 +
             (C36185 - C36186 + C36187 - C36188 + C36189 - C36190) * C49950) *
                C50174) *
               C1648 +
           (((C36180 - C36179 + C36182 - C36181 + C36184 - C36183) * C19689 +
             (C36186 - C36185 + C36188 - C36187 + C36190 - C36189) * C49950) *
                C33256 +
            ((C36191 - C36192 + C36193 - C36194 + C36195 - C36196) * C19689 +
             (C36197 - C36198 + C36199 - C36200 + C36201 - C36202) * C49950) *
                C50174) *
               C50077) *
              C49997 * C999 +
          ((((C2273 - C2272 + C2275 - C2274 + C2277 - C2276) * C19689 +
             (C2279 - C2278 + C2281 - C2280 + C2283 - C2282) * C49950) *
                C33256 +
            ((C2648 - C2649 + C2650 - C2651 + C2652 - C2653) * C19689 +
             (C2654 - C2655 + C2656 - C2657 + C2658 - C2659) * C49950) *
                C50174) *
               C1648 +
           (((C2649 - C2648 + C2651 - C2650 + C2653 - C2652) * C19689 +
             (C2655 - C2654 + C2657 - C2656 + C2659 - C2658) * C49950) *
                C33256 +
            ((C2660 - C2661 + C2662 - C2663 + C2664 - C2665) * C19689 +
             (C2666 - C2667 + C2668 - C2669 + C2670 - C2671) * C49950) *
                C50174) *
               C50077) *
              C49997 * C1000 +
          ((((C2285 - C2284 + C2287 - C2286 + C2289 - C2288) * C19689 +
             (C2291 - C2290 + C2293 - C2292 + C2295 - C2294) * C49950) *
                C33256 +
            ((C2976 - C2977 + C2978 - C2979 + C2980 - C2981) * C19689 +
             (C2982 - C2983 + C2984 - C2985 + C2986 - C2987) * C49950) *
                C50174) *
               C1648 +
           (((C2977 - C2976 + C2979 - C2978 + C2981 - C2980) * C19689 +
             (C2983 - C2982 + C2985 - C2984 + C2987 - C2986) * C49950) *
                C33256 +
            ((C2266 * C452 - C2261 * C468 + C2267 * C1189 - C2262 * C1195 +
              C2268 * C2637 - C2263 * C2642) *
                 C19689 +
             (C2266 * C469 - C2261 * C482 + C2267 * C1196 - C2262 * C1201 +
              C2268 * C2643 - C2263 * C2646) *
                 C49950) *
                C50174) *
               C50077) *
              C49997 * C1001)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2261 * C129 - C2266 * C122 + C2262 * C291 - C2267 * C281 +
              C2263 * C299 - C2268 * C285) *
                 C19689 +
             (C2261 * C143 - C2266 * C130 + C2262 * C311 - C2267 * C292 +
              C2263 * C315 - C2268 * C300) *
                 C49950) *
                C33256 +
            ((C36179 - C36180 + C36181 - C36182 + C36183 - C36184) * C19689 +
             (C36185 - C36186 + C36187 - C36188 + C36189 - C36190) * C49950) *
                C50174) *
               C1648 +
           (((C36180 - C36179 + C36182 - C36181 + C36184 - C36183) * C19689 +
             (C36186 - C36185 + C36188 - C36187 + C36190 - C36189) * C49950) *
                C33256 +
            ((C36191 - C36192 + C36193 - C36194 + C36195 - C36196) * C19689 +
             (C36197 - C36198 + C36199 - C36200 + C36201 - C36202) * C49950) *
                C50174) *
               C50077) *
              C276 +
          ((((C2266 * C281 - C2261 * C291 + C2267 * C285 - C2262 * C299 +
              C2268 * C1073 - C2263 * C1077) *
                 C19689 +
             (C2266 * C292 - C2261 * C311 + C2267 * C300 - C2262 * C315 +
              C2268 * C1078 - C2263 * C1085) *
                 C49950) *
                C33256 +
            ((C36689 - C36690 + C36691 - C36692 + C36693 - C36694) * C19689 +
             (C36695 - C36696 + C36697 - C36698 + C36699 - C36700) * C49950) *
                C50174) *
               C1648 +
           (((C36690 - C36689 + C36692 - C36691 + C36694 - C36693) * C19689 +
             (C36696 - C36695 + C36698 - C36697 + C36700 - C36699) * C49950) *
                C33256 +
            ((C37091 - C37092 + C37093 - C37094 + C37095 - C37096) * C19689 +
             (C37097 - C37098 + C37099 - C37100 + C37101 - C37102) * C49950) *
                C50174) *
               C50077) *
              C277 +
          ((((C2261 * C299 - C2266 * C285 + C2262 * C1077 - C2267 * C1073 +
              C2263 * C2456 - C2268 * C2453) *
                 C19689 +
             (C2261 * C315 - C2266 * C300 + C2262 * C1085 - C2267 * C1078 +
              C2263 * C2462 - C2268 * C2457) *
                 C49950) *
                C33256 +
            ((C37589 - C37590 + C37591 - C37592 + C37593 - C37594) * C19689 +
             (C37595 - C37596 + C37597 - C37598 + C37599 - C37600) * C49950) *
                C50174) *
               C1648 +
           (((C37590 - C37589 + C37592 - C37591 + C37594 - C37593) * C19689 +
             (C37596 - C37595 + C37598 - C37597 + C37600 - C37599) * C49950) *
                C33256 +
            ((C2266 * C2635 - C2261 * C2638 + C2267 * C3603 - C2262 * C3605 +
              C2268 * C20478 - C2263 * C20479) *
                 C19689 +
             (C2266 * C2639 - C2261 * C2644 + C2267 * C3606 - C2262 * C3609 +
              C2268 * C20480 - C2263 * C20481) *
                 C49950) *
                C50174) *
               C50077) *
              C278) *
         C49978) /
            (p * q * std::sqrt(p + q));
}
